{"path":"solr/core/src/test/org/apache/solr/response/transform/TestChildDocTransformer#testParentFilterJSON().mjava","commits":[{"id":"561c2351baf6dd64061addef891359954c1a7faa","date":1462788487,"type":1,"author":"Mikhail Khludnev","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/response/transform/TestChildDocTransformer#testParentFilterJSON().mjava","pathOld":"solr/core/src/test/org/apache/solr/response/TestChildDocTransformer#testParentFilterJSON().mjava","sourceNew":"  private void testParentFilterJSON() throws Exception {\n\n    String[] tests = new String[] {\n        \"/response/docs/[0]/id==1\",\n        \"/response/docs/[0]/_childDocuments_/[0]/id==2\",\n        \"/response/docs/[0]/_childDocuments_/[0]/cat/[0]/=='childDocument'\",\n        \"/response/docs/[0]/_childDocuments_/[0]/title/[0]/=='\" + titleVals[0] + \"'\",\n        \"/response/docs/[1]/id==4\",\n        \"/response/docs/[1]/_childDocuments_/[0]/id==5\",\n        \"/response/docs/[1]/_childDocuments_/[0]/cat/[0]/=='childDocument'\",\n        \"/response/docs/[1]/_childDocuments_/[0]/title/[0]/=='\" + titleVals[1] + \"'\"\n    };\n\n\n    assertJQ(req(\"q\", \"*:*\", \n                 \"sort\", \"id asc\",\n                 \"fq\", \"subject:\\\"parentDocument\\\" \",\n                 \"fl\", \"*,[child childFilter='cat:childDocument' parentFilter=\\\"subject:parentDocument\\\"]\"), \n             tests);\n\n    assertJQ(req(\"q\", \"*:*\", \n                 \"sort\", \"id asc\",\n                 \"fq\", \"subject:\\\"parentDocument\\\" \",\n                 \"fl\", \"id,[child childFilter='cat:childDocument' parentFilter=\\\"subject:parentDocument\\\"]\"), \n             tests);\n\n  }\n\n","sourceOld":"  private void testParentFilterJSON() throws Exception {\n\n    String[] tests = new String[] {\n        \"/response/docs/[0]/id==1\",\n        \"/response/docs/[0]/_childDocuments_/[0]/id==2\",\n        \"/response/docs/[0]/_childDocuments_/[0]/cat/[0]/=='childDocument'\",\n        \"/response/docs/[0]/_childDocuments_/[0]/title/[0]/=='\" + titleVals[0] + \"'\",\n        \"/response/docs/[1]/id==4\",\n        \"/response/docs/[1]/_childDocuments_/[0]/id==5\",\n        \"/response/docs/[1]/_childDocuments_/[0]/cat/[0]/=='childDocument'\",\n        \"/response/docs/[1]/_childDocuments_/[0]/title/[0]/=='\" + titleVals[1] + \"'\"\n    };\n\n\n    assertJQ(req(\"q\", \"*:*\", \n                 \"sort\", \"id asc\",\n                 \"fq\", \"subject:\\\"parentDocument\\\" \",\n                 \"fl\", \"*,[child childFilter='cat:childDocument' parentFilter=\\\"subject:parentDocument\\\"]\"), \n             tests);\n\n    assertJQ(req(\"q\", \"*:*\", \n                 \"sort\", \"id asc\",\n                 \"fq\", \"subject:\\\"parentDocument\\\" \",\n                 \"fl\", \"id,[child childFilter='cat:childDocument' parentFilter=\\\"subject:parentDocument\\\"]\"), \n             tests);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e66a459d38c1c4a2f97128433dab546f683a9fed","date":1462873476,"type":1,"author":"Mike McCandless","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/response/transform/TestChildDocTransformer#testParentFilterJSON().mjava","pathOld":"solr/core/src/test/org/apache/solr/response/TestChildDocTransformer#testParentFilterJSON().mjava","sourceNew":"  private void testParentFilterJSON() throws Exception {\n\n    String[] tests = new String[] {\n        \"/response/docs/[0]/id==1\",\n        \"/response/docs/[0]/_childDocuments_/[0]/id==2\",\n        \"/response/docs/[0]/_childDocuments_/[0]/cat/[0]/=='childDocument'\",\n        \"/response/docs/[0]/_childDocuments_/[0]/title/[0]/=='\" + titleVals[0] + \"'\",\n        \"/response/docs/[1]/id==4\",\n        \"/response/docs/[1]/_childDocuments_/[0]/id==5\",\n        \"/response/docs/[1]/_childDocuments_/[0]/cat/[0]/=='childDocument'\",\n        \"/response/docs/[1]/_childDocuments_/[0]/title/[0]/=='\" + titleVals[1] + \"'\"\n    };\n\n\n    assertJQ(req(\"q\", \"*:*\", \n                 \"sort\", \"id asc\",\n                 \"fq\", \"subject:\\\"parentDocument\\\" \",\n                 \"fl\", \"*,[child childFilter='cat:childDocument' parentFilter=\\\"subject:parentDocument\\\"]\"), \n             tests);\n\n    assertJQ(req(\"q\", \"*:*\", \n                 \"sort\", \"id asc\",\n                 \"fq\", \"subject:\\\"parentDocument\\\" \",\n                 \"fl\", \"id,[child childFilter='cat:childDocument' parentFilter=\\\"subject:parentDocument\\\"]\"), \n             tests);\n\n  }\n\n","sourceOld":"  private void testParentFilterJSON() throws Exception {\n\n    String[] tests = new String[] {\n        \"/response/docs/[0]/id==1\",\n        \"/response/docs/[0]/_childDocuments_/[0]/id==2\",\n        \"/response/docs/[0]/_childDocuments_/[0]/cat/[0]/=='childDocument'\",\n        \"/response/docs/[0]/_childDocuments_/[0]/title/[0]/=='\" + titleVals[0] + \"'\",\n        \"/response/docs/[1]/id==4\",\n        \"/response/docs/[1]/_childDocuments_/[0]/id==5\",\n        \"/response/docs/[1]/_childDocuments_/[0]/cat/[0]/=='childDocument'\",\n        \"/response/docs/[1]/_childDocuments_/[0]/title/[0]/=='\" + titleVals[1] + \"'\"\n    };\n\n\n    assertJQ(req(\"q\", \"*:*\", \n                 \"sort\", \"id asc\",\n                 \"fq\", \"subject:\\\"parentDocument\\\" \",\n                 \"fl\", \"*,[child childFilter='cat:childDocument' parentFilter=\\\"subject:parentDocument\\\"]\"), \n             tests);\n\n    assertJQ(req(\"q\", \"*:*\", \n                 \"sort\", \"id asc\",\n                 \"fq\", \"subject:\\\"parentDocument\\\" \",\n                 \"fl\", \"id,[child childFilter='cat:childDocument' parentFilter=\\\"subject:parentDocument\\\"]\"), \n             tests);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d470c8182e92b264680e34081b75e70a9f2b3c89","date":1463985353,"type":1,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/response/transform/TestChildDocTransformer#testParentFilterJSON().mjava","pathOld":"solr/core/src/test/org/apache/solr/response/TestChildDocTransformer#testParentFilterJSON().mjava","sourceNew":"  private void testParentFilterJSON() throws Exception {\n\n    String[] tests = new String[] {\n        \"/response/docs/[0]/id==1\",\n        \"/response/docs/[0]/_childDocuments_/[0]/id==2\",\n        \"/response/docs/[0]/_childDocuments_/[0]/cat/[0]/=='childDocument'\",\n        \"/response/docs/[0]/_childDocuments_/[0]/title/[0]/=='\" + titleVals[0] + \"'\",\n        \"/response/docs/[1]/id==4\",\n        \"/response/docs/[1]/_childDocuments_/[0]/id==5\",\n        \"/response/docs/[1]/_childDocuments_/[0]/cat/[0]/=='childDocument'\",\n        \"/response/docs/[1]/_childDocuments_/[0]/title/[0]/=='\" + titleVals[1] + \"'\"\n    };\n\n\n    assertJQ(req(\"q\", \"*:*\", \n                 \"sort\", \"id asc\",\n                 \"fq\", \"subject:\\\"parentDocument\\\" \",\n                 \"fl\", \"*,[child childFilter='cat:childDocument' parentFilter=\\\"subject:parentDocument\\\"]\"), \n             tests);\n\n    assertJQ(req(\"q\", \"*:*\", \n                 \"sort\", \"id asc\",\n                 \"fq\", \"subject:\\\"parentDocument\\\" \",\n                 \"fl\", \"id,[child childFilter='cat:childDocument' parentFilter=\\\"subject:parentDocument\\\"]\"), \n             tests);\n\n  }\n\n","sourceOld":"  private void testParentFilterJSON() throws Exception {\n\n    String[] tests = new String[] {\n        \"/response/docs/[0]/id==1\",\n        \"/response/docs/[0]/_childDocuments_/[0]/id==2\",\n        \"/response/docs/[0]/_childDocuments_/[0]/cat/[0]/=='childDocument'\",\n        \"/response/docs/[0]/_childDocuments_/[0]/title/[0]/=='\" + titleVals[0] + \"'\",\n        \"/response/docs/[1]/id==4\",\n        \"/response/docs/[1]/_childDocuments_/[0]/id==5\",\n        \"/response/docs/[1]/_childDocuments_/[0]/cat/[0]/=='childDocument'\",\n        \"/response/docs/[1]/_childDocuments_/[0]/title/[0]/=='\" + titleVals[1] + \"'\"\n    };\n\n\n    assertJQ(req(\"q\", \"*:*\", \n                 \"sort\", \"id asc\",\n                 \"fq\", \"subject:\\\"parentDocument\\\" \",\n                 \"fl\", \"*,[child childFilter='cat:childDocument' parentFilter=\\\"subject:parentDocument\\\"]\"), \n             tests);\n\n    assertJQ(req(\"q\", \"*:*\", \n                 \"sort\", \"id asc\",\n                 \"fq\", \"subject:\\\"parentDocument\\\" \",\n                 \"fl\", \"id,[child childFilter='cat:childDocument' parentFilter=\\\"subject:parentDocument\\\"]\"), \n             tests);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":1,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/response/transform/TestChildDocTransformer#testParentFilterJSON().mjava","pathOld":"solr/core/src/test/org/apache/solr/response/TestChildDocTransformer#testParentFilterJSON().mjava","sourceNew":"  private void testParentFilterJSON() throws Exception {\n\n    String[] tests = new String[] {\n        \"/response/docs/[0]/id==1\",\n        \"/response/docs/[0]/_childDocuments_/[0]/id==2\",\n        \"/response/docs/[0]/_childDocuments_/[0]/cat/[0]/=='childDocument'\",\n        \"/response/docs/[0]/_childDocuments_/[0]/title/[0]/=='\" + titleVals[0] + \"'\",\n        \"/response/docs/[1]/id==4\",\n        \"/response/docs/[1]/_childDocuments_/[0]/id==5\",\n        \"/response/docs/[1]/_childDocuments_/[0]/cat/[0]/=='childDocument'\",\n        \"/response/docs/[1]/_childDocuments_/[0]/title/[0]/=='\" + titleVals[1] + \"'\"\n    };\n\n\n    assertJQ(req(\"q\", \"*:*\", \n                 \"sort\", \"id asc\",\n                 \"fq\", \"subject:\\\"parentDocument\\\" \",\n                 \"fl\", \"*,[child childFilter='cat:childDocument' parentFilter=\\\"subject:parentDocument\\\"]\"), \n             tests);\n\n    assertJQ(req(\"q\", \"*:*\", \n                 \"sort\", \"id asc\",\n                 \"fq\", \"subject:\\\"parentDocument\\\" \",\n                 \"fl\", \"id,[child childFilter='cat:childDocument' parentFilter=\\\"subject:parentDocument\\\"]\"), \n             tests);\n\n  }\n\n","sourceOld":"  private void testParentFilterJSON() throws Exception {\n\n    String[] tests = new String[] {\n        \"/response/docs/[0]/id==1\",\n        \"/response/docs/[0]/_childDocuments_/[0]/id==2\",\n        \"/response/docs/[0]/_childDocuments_/[0]/cat/[0]/=='childDocument'\",\n        \"/response/docs/[0]/_childDocuments_/[0]/title/[0]/=='\" + titleVals[0] + \"'\",\n        \"/response/docs/[1]/id==4\",\n        \"/response/docs/[1]/_childDocuments_/[0]/id==5\",\n        \"/response/docs/[1]/_childDocuments_/[0]/cat/[0]/=='childDocument'\",\n        \"/response/docs/[1]/_childDocuments_/[0]/title/[0]/=='\" + titleVals[1] + \"'\"\n    };\n\n\n    assertJQ(req(\"q\", \"*:*\", \n                 \"sort\", \"id asc\",\n                 \"fq\", \"subject:\\\"parentDocument\\\" \",\n                 \"fl\", \"*,[child childFilter='cat:childDocument' parentFilter=\\\"subject:parentDocument\\\"]\"), \n             tests);\n\n    assertJQ(req(\"q\", \"*:*\", \n                 \"sort\", \"id asc\",\n                 \"fq\", \"subject:\\\"parentDocument\\\" \",\n                 \"fl\", \"id,[child childFilter='cat:childDocument' parentFilter=\\\"subject:parentDocument\\\"]\"), \n             tests);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a71f63026529f3c1f03cfdd664910873ab2369ae","date":1497543264,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/response/transform/TestChildDocTransformer#testParentFilterJSON().mjava","pathOld":"solr/core/src/test/org/apache/solr/response/transform/TestChildDocTransformer#testParentFilterJSON().mjava","sourceNew":"  private void testParentFilterJSON() throws Exception {\n\n    String[] tests = new String[] {\n        \"/response/docs/[0]/id=='1'\",\n        \"/response/docs/[0]/_childDocuments_/[0]/id=='2'\",\n        \"/response/docs/[0]/_childDocuments_/[0]/cat/[0]/=='childDocument'\",\n        \"/response/docs/[0]/_childDocuments_/[0]/title/[0]/=='\" + titleVals[0] + \"'\",\n        \"/response/docs/[1]/id=='4'\",\n        \"/response/docs/[1]/_childDocuments_/[0]/id=='5'\",\n        \"/response/docs/[1]/_childDocuments_/[0]/cat/[0]/=='childDocument'\",\n        \"/response/docs/[1]/_childDocuments_/[0]/title/[0]/=='\" + titleVals[1] + \"'\"\n    };\n\n\n    assertJQ(req(\"q\", \"*:*\", \n                 \"sort\", \"id asc\",\n                 \"fq\", \"subject:\\\"parentDocument\\\" \",\n                 \"fl\", \"*,[child childFilter='cat:childDocument' parentFilter=\\\"subject:parentDocument\\\"]\"), \n             tests);\n\n    assertJQ(req(\"q\", \"*:*\", \n                 \"sort\", \"id asc\",\n                 \"fq\", \"subject:\\\"parentDocument\\\" \",\n                 \"fl\", \"id,[child childFilter='cat:childDocument' parentFilter=\\\"subject:parentDocument\\\"]\"), \n             tests);\n\n  }\n\n","sourceOld":"  private void testParentFilterJSON() throws Exception {\n\n    String[] tests = new String[] {\n        \"/response/docs/[0]/id==1\",\n        \"/response/docs/[0]/_childDocuments_/[0]/id==2\",\n        \"/response/docs/[0]/_childDocuments_/[0]/cat/[0]/=='childDocument'\",\n        \"/response/docs/[0]/_childDocuments_/[0]/title/[0]/=='\" + titleVals[0] + \"'\",\n        \"/response/docs/[1]/id==4\",\n        \"/response/docs/[1]/_childDocuments_/[0]/id==5\",\n        \"/response/docs/[1]/_childDocuments_/[0]/cat/[0]/=='childDocument'\",\n        \"/response/docs/[1]/_childDocuments_/[0]/title/[0]/=='\" + titleVals[1] + \"'\"\n    };\n\n\n    assertJQ(req(\"q\", \"*:*\", \n                 \"sort\", \"id asc\",\n                 \"fq\", \"subject:\\\"parentDocument\\\" \",\n                 \"fl\", \"*,[child childFilter='cat:childDocument' parentFilter=\\\"subject:parentDocument\\\"]\"), \n             tests);\n\n    assertJQ(req(\"q\", \"*:*\", \n                 \"sort\", \"id asc\",\n                 \"fq\", \"subject:\\\"parentDocument\\\" \",\n                 \"fl\", \"id,[child childFilter='cat:childDocument' parentFilter=\\\"subject:parentDocument\\\"]\"), \n             tests);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","date":1498028748,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/response/transform/TestChildDocTransformer#testParentFilterJSON().mjava","pathOld":"solr/core/src/test/org/apache/solr/response/transform/TestChildDocTransformer#testParentFilterJSON().mjava","sourceNew":"  private void testParentFilterJSON() throws Exception {\n\n    String[] tests = new String[] {\n        \"/response/docs/[0]/id=='1'\",\n        \"/response/docs/[0]/_childDocuments_/[0]/id=='2'\",\n        \"/response/docs/[0]/_childDocuments_/[0]/cat/[0]/=='childDocument'\",\n        \"/response/docs/[0]/_childDocuments_/[0]/title/[0]/=='\" + titleVals[0] + \"'\",\n        \"/response/docs/[1]/id=='4'\",\n        \"/response/docs/[1]/_childDocuments_/[0]/id=='5'\",\n        \"/response/docs/[1]/_childDocuments_/[0]/cat/[0]/=='childDocument'\",\n        \"/response/docs/[1]/_childDocuments_/[0]/title/[0]/=='\" + titleVals[1] + \"'\"\n    };\n\n\n    assertJQ(req(\"q\", \"*:*\", \n                 \"sort\", \"id asc\",\n                 \"fq\", \"subject:\\\"parentDocument\\\" \",\n                 \"fl\", \"*,[child childFilter='cat:childDocument' parentFilter=\\\"subject:parentDocument\\\"]\"), \n             tests);\n\n    assertJQ(req(\"q\", \"*:*\", \n                 \"sort\", \"id asc\",\n                 \"fq\", \"subject:\\\"parentDocument\\\" \",\n                 \"fl\", \"id,[child childFilter='cat:childDocument' parentFilter=\\\"subject:parentDocument\\\"]\"), \n             tests);\n\n  }\n\n","sourceOld":"  private void testParentFilterJSON() throws Exception {\n\n    String[] tests = new String[] {\n        \"/response/docs/[0]/id==1\",\n        \"/response/docs/[0]/_childDocuments_/[0]/id==2\",\n        \"/response/docs/[0]/_childDocuments_/[0]/cat/[0]/=='childDocument'\",\n        \"/response/docs/[0]/_childDocuments_/[0]/title/[0]/=='\" + titleVals[0] + \"'\",\n        \"/response/docs/[1]/id==4\",\n        \"/response/docs/[1]/_childDocuments_/[0]/id==5\",\n        \"/response/docs/[1]/_childDocuments_/[0]/cat/[0]/=='childDocument'\",\n        \"/response/docs/[1]/_childDocuments_/[0]/title/[0]/=='\" + titleVals[1] + \"'\"\n    };\n\n\n    assertJQ(req(\"q\", \"*:*\", \n                 \"sort\", \"id asc\",\n                 \"fq\", \"subject:\\\"parentDocument\\\" \",\n                 \"fl\", \"*,[child childFilter='cat:childDocument' parentFilter=\\\"subject:parentDocument\\\"]\"), \n             tests);\n\n    assertJQ(req(\"q\", \"*:*\", \n                 \"sort\", \"id asc\",\n                 \"fq\", \"subject:\\\"parentDocument\\\" \",\n                 \"fl\", \"id,[child childFilter='cat:childDocument' parentFilter=\\\"subject:parentDocument\\\"]\"), \n             tests);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/response/transform/TestChildDocTransformer#testParentFilterJSON().mjava","pathOld":"solr/core/src/test/org/apache/solr/response/transform/TestChildDocTransformer#testParentFilterJSON().mjava","sourceNew":"  private void testParentFilterJSON() throws Exception {\n\n    String[] tests = new String[] {\n        \"/response/docs/[0]/id=='1'\",\n        \"/response/docs/[0]/_childDocuments_/[0]/id=='2'\",\n        \"/response/docs/[0]/_childDocuments_/[0]/cat/[0]/=='childDocument'\",\n        \"/response/docs/[0]/_childDocuments_/[0]/title/[0]/=='\" + titleVals[0] + \"'\",\n        \"/response/docs/[1]/id=='4'\",\n        \"/response/docs/[1]/_childDocuments_/[0]/id=='5'\",\n        \"/response/docs/[1]/_childDocuments_/[0]/cat/[0]/=='childDocument'\",\n        \"/response/docs/[1]/_childDocuments_/[0]/title/[0]/=='\" + titleVals[1] + \"'\"\n    };\n\n\n    assertJQ(req(\"q\", \"*:*\", \n                 \"sort\", \"id asc\",\n                 \"fq\", \"subject:\\\"parentDocument\\\" \",\n                 \"fl\", \"*,[child childFilter='cat:childDocument' parentFilter=\\\"subject:parentDocument\\\"]\"), \n             tests);\n\n    assertJQ(req(\"q\", \"*:*\", \n                 \"sort\", \"id asc\",\n                 \"fq\", \"subject:\\\"parentDocument\\\" \",\n                 \"fl\", \"id,[child childFilter='cat:childDocument' parentFilter=\\\"subject:parentDocument\\\"]\"), \n             tests);\n\n  }\n\n","sourceOld":"  private void testParentFilterJSON() throws Exception {\n\n    String[] tests = new String[] {\n        \"/response/docs/[0]/id==1\",\n        \"/response/docs/[0]/_childDocuments_/[0]/id==2\",\n        \"/response/docs/[0]/_childDocuments_/[0]/cat/[0]/=='childDocument'\",\n        \"/response/docs/[0]/_childDocuments_/[0]/title/[0]/=='\" + titleVals[0] + \"'\",\n        \"/response/docs/[1]/id==4\",\n        \"/response/docs/[1]/_childDocuments_/[0]/id==5\",\n        \"/response/docs/[1]/_childDocuments_/[0]/cat/[0]/=='childDocument'\",\n        \"/response/docs/[1]/_childDocuments_/[0]/title/[0]/=='\" + titleVals[1] + \"'\"\n    };\n\n\n    assertJQ(req(\"q\", \"*:*\", \n                 \"sort\", \"id asc\",\n                 \"fq\", \"subject:\\\"parentDocument\\\" \",\n                 \"fl\", \"*,[child childFilter='cat:childDocument' parentFilter=\\\"subject:parentDocument\\\"]\"), \n             tests);\n\n    assertJQ(req(\"q\", \"*:*\", \n                 \"sort\", \"id asc\",\n                 \"fq\", \"subject:\\\"parentDocument\\\" \",\n                 \"fl\", \"id,[child childFilter='cat:childDocument' parentFilter=\\\"subject:parentDocument\\\"]\"), \n             tests);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"44e1477dd67ee1fbc72871f23fb51369bb42cadd","date":1535551329,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/response/transform/TestChildDocTransformer#testParentFilterJSON().mjava","pathOld":"solr/core/src/test/org/apache/solr/response/transform/TestChildDocTransformer#testParentFilterJSON().mjava","sourceNew":"  private void testParentFilterJSON() throws Exception {\n\n    String[] tests = new String[] {\n        \"/response/docs/[0]/id=='1'\",\n        \"/response/docs/[0]/_childDocuments_/[0]/id=='2'\",\n        \"/response/docs/[0]/_childDocuments_/[0]/cat/[0]/=='childDocument'\",\n        \"/response/docs/[0]/_childDocuments_/[0]/title/[0]/=='\" + titleVals[0] + \"'\",\n        \"/response/docs/[1]/id=='4'\",\n        \"/response/docs/[1]/_childDocuments_/[0]/id=='5'\",\n        \"/response/docs/[1]/_childDocuments_/[0]/cat/[0]/=='childDocument'\",\n        \"/response/docs/[1]/_childDocuments_/[0]/title/[0]/=='\" + titleVals[1] + \"'\"\n    };\n\n\n    assertJQ(req(\"q\", \"*:*\", \n                 \"sort\", \"id asc\",\n                 \"fq\", \"subject:\\\"parentDocument\\\" \",\n                 \"fl\", \"*,[child childFilter='cat:childDocument' parentFilter=\\\"subject:parentDocument\\\"]\"), \n             tests);\n\n    assertJQ(req(\"q\", \"*:*\", \n                 \"sort\", \"id asc\",\n                 \"fq\", \"subject:\\\"parentDocument\\\" \",\n                 \"fl\", \"id,[child childFilter='cat:childDocument' parentFilter=\\\"subject:parentDocument\\\"]\"),\n             tests);\n\n  }\n\n","sourceOld":"  private void testParentFilterJSON() throws Exception {\n\n    String[] tests = new String[] {\n        \"/response/docs/[0]/id=='1'\",\n        \"/response/docs/[0]/_childDocuments_/[0]/id=='2'\",\n        \"/response/docs/[0]/_childDocuments_/[0]/cat/[0]/=='childDocument'\",\n        \"/response/docs/[0]/_childDocuments_/[0]/title/[0]/=='\" + titleVals[0] + \"'\",\n        \"/response/docs/[1]/id=='4'\",\n        \"/response/docs/[1]/_childDocuments_/[0]/id=='5'\",\n        \"/response/docs/[1]/_childDocuments_/[0]/cat/[0]/=='childDocument'\",\n        \"/response/docs/[1]/_childDocuments_/[0]/title/[0]/=='\" + titleVals[1] + \"'\"\n    };\n\n\n    assertJQ(req(\"q\", \"*:*\", \n                 \"sort\", \"id asc\",\n                 \"fq\", \"subject:\\\"parentDocument\\\" \",\n                 \"fl\", \"*,[child childFilter='cat:childDocument' parentFilter=\\\"subject:parentDocument\\\"]\"), \n             tests);\n\n    assertJQ(req(\"q\", \"*:*\", \n                 \"sort\", \"id asc\",\n                 \"fq\", \"subject:\\\"parentDocument\\\" \",\n                 \"fl\", \"id,[child childFilter='cat:childDocument' parentFilter=\\\"subject:parentDocument\\\"]\"), \n             tests);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"373ea6b2f051d2a56e8e78a5da11de7aa52ed399","date":1536159014,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/response/transform/TestChildDocTransformer#testParentFilterJSON().mjava","pathOld":"solr/core/src/test/org/apache/solr/response/transform/TestChildDocTransformer#testParentFilterJSON().mjava","sourceNew":"  private void testParentFilterJSON() throws Exception {\n\n    String[] tests = new String[] {\n        \"/response/docs/[0]/id=='1'\",\n        \"/response/docs/[0]/_childDocuments_/[0]/id=='2'\",\n        \"/response/docs/[0]/_childDocuments_/[0]/cat/[0]/=='childDocument'\",\n        \"/response/docs/[0]/_childDocuments_/[0]/title/[0]/=='\" + titleVals[0] + \"'\",\n        \"/response/docs/[1]/id=='4'\",\n        \"/response/docs/[1]/_childDocuments_/[0]/id=='5'\",\n        \"/response/docs/[1]/_childDocuments_/[0]/cat/[0]/=='childDocument'\",\n        \"/response/docs/[1]/_childDocuments_/[0]/title/[0]/=='\" + titleVals[1] + \"'\"\n    };\n\n\n    assertJQ(req(\"q\", \"*:*\", \n                 \"sort\", \"id asc\",\n                 \"fq\", \"subject:\\\"parentDocument\\\" \",\n                 \"fl\", \"*,[child childFilter='cat:childDocument' parentFilter=\\\"subject:parentDocument\\\"]\"), \n             tests);\n\n    assertJQ(req(\"q\", \"*:*\", \n                 \"sort\", \"id asc\",\n                 \"fq\", \"subject:\\\"parentDocument\\\" \",\n                 \"fl\", \"id, cat, title, [child childFilter='cat:childDocument' parentFilter=\\\"subject:parentDocument\\\"]\"),\n             tests);\n\n  }\n\n","sourceOld":"  private void testParentFilterJSON() throws Exception {\n\n    String[] tests = new String[] {\n        \"/response/docs/[0]/id=='1'\",\n        \"/response/docs/[0]/_childDocuments_/[0]/id=='2'\",\n        \"/response/docs/[0]/_childDocuments_/[0]/cat/[0]/=='childDocument'\",\n        \"/response/docs/[0]/_childDocuments_/[0]/title/[0]/=='\" + titleVals[0] + \"'\",\n        \"/response/docs/[1]/id=='4'\",\n        \"/response/docs/[1]/_childDocuments_/[0]/id=='5'\",\n        \"/response/docs/[1]/_childDocuments_/[0]/cat/[0]/=='childDocument'\",\n        \"/response/docs/[1]/_childDocuments_/[0]/title/[0]/=='\" + titleVals[1] + \"'\"\n    };\n\n\n    assertJQ(req(\"q\", \"*:*\", \n                 \"sort\", \"id asc\",\n                 \"fq\", \"subject:\\\"parentDocument\\\" \",\n                 \"fl\", \"*,[child childFilter='cat:childDocument' parentFilter=\\\"subject:parentDocument\\\"]\"), \n             tests);\n\n    assertJQ(req(\"q\", \"*:*\", \n                 \"sort\", \"id asc\",\n                 \"fq\", \"subject:\\\"parentDocument\\\" \",\n                 \"fl\", \"id,[child childFilter='cat:childDocument' parentFilter=\\\"subject:parentDocument\\\"]\"),\n             tests);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"817fc4762cd649397b27305970dad27295735f3a","date":1561046362,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/response/transform/TestChildDocTransformer#testParentFilterJSON().mjava","pathOld":"solr/core/src/test/org/apache/solr/response/transform/TestChildDocTransformer#testParentFilterJSON().mjava","sourceNew":"  private void testParentFilterJSON() throws Exception {\n\n    String[] tests = new String[] {\n        \"/response/docs/[0]/id=='1'\",\n        \"/response/docs/[0]/_childDocuments_/[0]/id=='2'\",\n        \"/response/docs/[0]/_childDocuments_/[0]/cat=='childDocument'\",\n        \"/response/docs/[0]/_childDocuments_/[0]/title=='\" + titleVals[0] + \"'\",\n        \"/response/docs/[1]/id=='4'\",\n        \"/response/docs/[1]/_childDocuments_/[0]/id=='5'\",\n        \"/response/docs/[1]/_childDocuments_/[0]/cat=='childDocument'\",\n        \"/response/docs/[1]/_childDocuments_/[0]/title=='\" + titleVals[1] + \"'\"\n    };\n\n\n    assertJQ(req(\"q\", \"*:*\", \n                 \"sort\", \"id asc\",\n                 \"fq\", \"subject:\\\"parentDocument\\\" \",\n                 \"fl\", \"*,[child childFilter='cat:childDocument' parentFilter=\\\"subject:parentDocument\\\"]\"), \n             tests);\n\n    assertJQ(req(\"q\", \"*:*\", \n                 \"sort\", \"id asc\",\n                 \"fq\", \"subject:\\\"parentDocument\\\" \",\n                 \"fl\", \"id, cat, title, [child childFilter='cat:childDocument' parentFilter=\\\"subject:parentDocument\\\"]\"),\n             tests);\n\n  }\n\n","sourceOld":"  private void testParentFilterJSON() throws Exception {\n\n    String[] tests = new String[] {\n        \"/response/docs/[0]/id=='1'\",\n        \"/response/docs/[0]/_childDocuments_/[0]/id=='2'\",\n        \"/response/docs/[0]/_childDocuments_/[0]/cat/[0]/=='childDocument'\",\n        \"/response/docs/[0]/_childDocuments_/[0]/title/[0]/=='\" + titleVals[0] + \"'\",\n        \"/response/docs/[1]/id=='4'\",\n        \"/response/docs/[1]/_childDocuments_/[0]/id=='5'\",\n        \"/response/docs/[1]/_childDocuments_/[0]/cat/[0]/=='childDocument'\",\n        \"/response/docs/[1]/_childDocuments_/[0]/title/[0]/=='\" + titleVals[1] + \"'\"\n    };\n\n\n    assertJQ(req(\"q\", \"*:*\", \n                 \"sort\", \"id asc\",\n                 \"fq\", \"subject:\\\"parentDocument\\\" \",\n                 \"fl\", \"*,[child childFilter='cat:childDocument' parentFilter=\\\"subject:parentDocument\\\"]\"), \n             tests);\n\n    assertJQ(req(\"q\", \"*:*\", \n                 \"sort\", \"id asc\",\n                 \"fq\", \"subject:\\\"parentDocument\\\" \",\n                 \"fl\", \"id, cat, title, [child childFilter='cat:childDocument' parentFilter=\\\"subject:parentDocument\\\"]\"),\n             tests);\n\n  }\n\n","bugFix":["7bd5b0172f9653691c0b2f6c50446465766073bb"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a71f63026529f3c1f03cfdd664910873ab2369ae":["d470c8182e92b264680e34081b75e70a9f2b3c89"],"e66a459d38c1c4a2f97128433dab546f683a9fed":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","561c2351baf6dd64061addef891359954c1a7faa"],"561c2351baf6dd64061addef891359954c1a7faa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"817fc4762cd649397b27305970dad27295735f3a":["373ea6b2f051d2a56e8e78a5da11de7aa52ed399"],"373ea6b2f051d2a56e8e78a5da11de7aa52ed399":["44e1477dd67ee1fbc72871f23fb51369bb42cadd"],"44e1477dd67ee1fbc72871f23fb51369bb42cadd":["28288370235ed02234a64753cdbf0c6ec096304a"],"28288370235ed02234a64753cdbf0c6ec096304a":["d470c8182e92b264680e34081b75e70a9f2b3c89","a71f63026529f3c1f03cfdd664910873ab2369ae"],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":["d470c8182e92b264680e34081b75e70a9f2b3c89","a71f63026529f3c1f03cfdd664910873ab2369ae"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","d470c8182e92b264680e34081b75e70a9f2b3c89"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["817fc4762cd649397b27305970dad27295735f3a"],"d470c8182e92b264680e34081b75e70a9f2b3c89":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","561c2351baf6dd64061addef891359954c1a7faa"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e66a459d38c1c4a2f97128433dab546f683a9fed","561c2351baf6dd64061addef891359954c1a7faa","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","d470c8182e92b264680e34081b75e70a9f2b3c89"],"a71f63026529f3c1f03cfdd664910873ab2369ae":["28288370235ed02234a64753cdbf0c6ec096304a","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9"],"e66a459d38c1c4a2f97128433dab546f683a9fed":[],"561c2351baf6dd64061addef891359954c1a7faa":["e66a459d38c1c4a2f97128433dab546f683a9fed","d470c8182e92b264680e34081b75e70a9f2b3c89"],"817fc4762cd649397b27305970dad27295735f3a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"373ea6b2f051d2a56e8e78a5da11de7aa52ed399":["817fc4762cd649397b27305970dad27295735f3a"],"44e1477dd67ee1fbc72871f23fb51369bb42cadd":["373ea6b2f051d2a56e8e78a5da11de7aa52ed399"],"28288370235ed02234a64753cdbf0c6ec096304a":["44e1477dd67ee1fbc72871f23fb51369bb42cadd"],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":[],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"d470c8182e92b264680e34081b75e70a9f2b3c89":["a71f63026529f3c1f03cfdd664910873ab2369ae","28288370235ed02234a64753cdbf0c6ec096304a","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e66a459d38c1c4a2f97128433dab546f683a9fed","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}