{"path":"lucene/test-framework/src/java/org/apache/lucene/index/RandomIndexWriter#maybeFlushOrCommit().mjava","commits":[{"id":"1c331bf2c0db325b2153017708714a1573f2ce35","date":1447166158,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/RandomIndexWriter#maybeFlushOrCommit().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/RandomIndexWriter#maybeCommit().mjava","sourceNew":"  private void maybeFlushOrCommit() throws IOException {\n    LuceneTestCase.maybeChangeLiveIndexWriterConfig(r, w.getConfig());\n    if (docCount++ == flushAt) {\n      if (r.nextBoolean()) {\n        if (LuceneTestCase.VERBOSE) {\n          System.out.println(\"RIW.add/updateDocument: now doing a flush at docCount=\" + docCount);\n        }\n        w.flush();\n      } else {\n        if (LuceneTestCase.VERBOSE) {\n          System.out.println(\"RIW.add/updateDocument: now doing a commit at docCount=\" + docCount);\n        }\n        w.commit();\n      }\n      flushAt += TestUtil.nextInt(r, (int) (flushAtFactor * 10), (int) (flushAtFactor * 1000));\n      if (flushAtFactor < 2e6) {\n        // gradually but exponentially increase time b/w flushes\n        flushAtFactor *= 1.05;\n      }\n    }\n  }\n\n","sourceOld":"  private void maybeCommit() throws IOException {\n    LuceneTestCase.maybeChangeLiveIndexWriterConfig(r, w.getConfig());\n    if (docCount++ == flushAt) {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"RIW.add/updateDocument: now doing a commit at docCount=\" + docCount);\n      }\n      w.commit();\n      flushAt += TestUtil.nextInt(r, (int) (flushAtFactor * 10), (int) (flushAtFactor * 1000));\n      if (flushAtFactor < 2e6) {\n        // gradually but exponentially increase time b/w flushes\n        flushAtFactor *= 1.05;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad4be95c403f45330d2a078afc9b6fab4515c8ce","date":1512064647,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/RandomIndexWriter#maybeFlushOrCommit().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/RandomIndexWriter#maybeFlushOrCommit().mjava","sourceNew":"  private void maybeFlushOrCommit() throws IOException {\n    LuceneTestCase.maybeChangeLiveIndexWriterConfig(r, w.getConfig());\n    if (docCount++ == flushAt) {\n      if (r.nextBoolean()) {\n        if (LuceneTestCase.VERBOSE) {\n          System.out.println(\"RIW.add/updateDocument: now flushing the largest writer at docCount=\" + docCount);\n        }\n        int activeThreadStateCount = w.docWriter.perThreadPool.getActiveThreadStateCount();\n        int numFlushes = Math.min(1, r.nextInt(activeThreadStateCount+1));\n        for (int i = 0; i < numFlushes; i++) {\n          if (w.flushNextBuffer() == false) {\n            break; // stop once we didn't flush anything\n          }\n        }\n      } else if (r.nextBoolean()) {\n        if (LuceneTestCase.VERBOSE) {\n          System.out.println(\"RIW.add/updateDocument: now doing a flush at docCount=\" + docCount);\n        }\n        w.flush();\n      } else {\n        if (LuceneTestCase.VERBOSE) {\n          System.out.println(\"RIW.add/updateDocument: now doing a commit at docCount=\" + docCount);\n        }\n        w.commit();\n      }\n      flushAt += TestUtil.nextInt(r, (int) (flushAtFactor * 10), (int) (flushAtFactor * 1000));\n      if (flushAtFactor < 2e6) {\n        // gradually but exponentially increase time b/w flushes\n        flushAtFactor *= 1.05;\n      }\n    }\n  }\n\n","sourceOld":"  private void maybeFlushOrCommit() throws IOException {\n    LuceneTestCase.maybeChangeLiveIndexWriterConfig(r, w.getConfig());\n    if (docCount++ == flushAt) {\n      if (r.nextBoolean()) {\n        if (LuceneTestCase.VERBOSE) {\n          System.out.println(\"RIW.add/updateDocument: now doing a flush at docCount=\" + docCount);\n        }\n        w.flush();\n      } else {\n        if (LuceneTestCase.VERBOSE) {\n          System.out.println(\"RIW.add/updateDocument: now doing a commit at docCount=\" + docCount);\n        }\n        w.commit();\n      }\n      flushAt += TestUtil.nextInt(r, (int) (flushAtFactor * 10), (int) (flushAtFactor * 1000));\n      if (flushAtFactor < 2e6) {\n        // gradually but exponentially increase time b/w flushes\n        flushAtFactor *= 1.05;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1aad05eeff7818b0833c02ac6b743aa72054963b","date":1512093122,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/RandomIndexWriter#maybeFlushOrCommit().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/RandomIndexWriter#maybeFlushOrCommit().mjava","sourceNew":"  private void maybeFlushOrCommit() throws IOException {\n    LuceneTestCase.maybeChangeLiveIndexWriterConfig(r, w.getConfig());\n    if (docCount++ == flushAt) {\n      if (r.nextBoolean()) {\n        if (LuceneTestCase.VERBOSE) {\n          System.out.println(\"RIW.add/updateDocument: now flushing the largest writer at docCount=\" + docCount);\n        }\n        int activeThreadStateCount = w.docWriter.perThreadPool.getActiveThreadStateCount();\n        int numFlushes = Math.min(1, r.nextInt(activeThreadStateCount+1));\n        for (int i = 0; i < numFlushes; i++) {\n          if (w.flushNextBuffer() == false) {\n            break; // stop once we didn't flush anything\n          }\n        }\n      } else if (r.nextBoolean()) {\n        if (LuceneTestCase.VERBOSE) {\n          System.out.println(\"RIW.add/updateDocument: now doing a flush at docCount=\" + docCount);\n        }\n        w.flush();\n      } else {\n        if (LuceneTestCase.VERBOSE) {\n          System.out.println(\"RIW.add/updateDocument: now doing a commit at docCount=\" + docCount);\n        }\n        w.commit();\n      }\n      flushAt += TestUtil.nextInt(r, (int) (flushAtFactor * 10), (int) (flushAtFactor * 1000));\n      if (flushAtFactor < 2e6) {\n        // gradually but exponentially increase time b/w flushes\n        flushAtFactor *= 1.05;\n      }\n    }\n  }\n\n","sourceOld":"  private void maybeFlushOrCommit() throws IOException {\n    LuceneTestCase.maybeChangeLiveIndexWriterConfig(r, w.getConfig());\n    if (docCount++ == flushAt) {\n      if (r.nextBoolean()) {\n        if (LuceneTestCase.VERBOSE) {\n          System.out.println(\"RIW.add/updateDocument: now doing a flush at docCount=\" + docCount);\n        }\n        w.flush();\n      } else {\n        if (LuceneTestCase.VERBOSE) {\n          System.out.println(\"RIW.add/updateDocument: now doing a commit at docCount=\" + docCount);\n        }\n        w.commit();\n      }\n      flushAt += TestUtil.nextInt(r, (int) (flushAtFactor * 10), (int) (flushAtFactor * 1000));\n      if (flushAtFactor < 2e6) {\n        // gradually but exponentially increase time b/w flushes\n        flushAtFactor *= 1.05;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8dd9100a9fc8733b099048622863a3f8f8af7d6a","date":1552574615,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/RandomIndexWriter#maybeFlushOrCommit().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/RandomIndexWriter#maybeFlushOrCommit().mjava","sourceNew":"  private void maybeFlushOrCommit() throws IOException {\n    LuceneTestCase.maybeChangeLiveIndexWriterConfig(r, w.getConfig());\n    if (docCount++ == flushAt) {\n      if (r.nextBoolean()) {\n        flushAllBuffersSequentially();\n      } else if (r.nextBoolean()) {\n        if (LuceneTestCase.VERBOSE) {\n          System.out.println(\"RIW.add/updateDocument: now doing a flush at docCount=\" + docCount);\n        }\n        w.flush();\n      } else {\n        if (LuceneTestCase.VERBOSE) {\n          System.out.println(\"RIW.add/updateDocument: now doing a commit at docCount=\" + docCount);\n        }\n        w.commit();\n      }\n      flushAt += TestUtil.nextInt(r, (int) (flushAtFactor * 10), (int) (flushAtFactor * 1000));\n      if (flushAtFactor < 2e6) {\n        // gradually but exponentially increase time b/w flushes\n        flushAtFactor *= 1.05;\n      }\n    }\n  }\n\n","sourceOld":"  private void maybeFlushOrCommit() throws IOException {\n    LuceneTestCase.maybeChangeLiveIndexWriterConfig(r, w.getConfig());\n    if (docCount++ == flushAt) {\n      if (r.nextBoolean()) {\n        if (LuceneTestCase.VERBOSE) {\n          System.out.println(\"RIW.add/updateDocument: now flushing the largest writer at docCount=\" + docCount);\n        }\n        int activeThreadStateCount = w.docWriter.perThreadPool.getActiveThreadStateCount();\n        int numFlushes = Math.min(1, r.nextInt(activeThreadStateCount+1));\n        for (int i = 0; i < numFlushes; i++) {\n          if (w.flushNextBuffer() == false) {\n            break; // stop once we didn't flush anything\n          }\n        }\n      } else if (r.nextBoolean()) {\n        if (LuceneTestCase.VERBOSE) {\n          System.out.println(\"RIW.add/updateDocument: now doing a flush at docCount=\" + docCount);\n        }\n        w.flush();\n      } else {\n        if (LuceneTestCase.VERBOSE) {\n          System.out.println(\"RIW.add/updateDocument: now doing a commit at docCount=\" + docCount);\n        }\n        w.commit();\n      }\n      flushAt += TestUtil.nextInt(r, (int) (flushAtFactor * 10), (int) (flushAtFactor * 1000));\n      if (flushAtFactor < 2e6) {\n        // gradually but exponentially increase time b/w flushes\n        flushAtFactor *= 1.05;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e84628e1e00d06556b67af150a13dbfb1849a818","date":1588191102,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/RandomIndexWriter#maybeFlushOrCommit().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/RandomIndexWriter#maybeFlushOrCommit().mjava","sourceNew":"  private void maybeFlushOrCommit() throws IOException {\n    LuceneTestCase.maybeChangeLiveIndexWriterConfig(r, config);\n    if (docCount++ == flushAt) {\n      if (r.nextBoolean()) {\n        flushAllBuffersSequentially();\n      } else if (r.nextBoolean()) {\n        if (LuceneTestCase.VERBOSE) {\n          System.out.println(\"RIW.add/updateDocument: now doing a flush at docCount=\" + docCount);\n        }\n        w.flush();\n      } else {\n        if (LuceneTestCase.VERBOSE) {\n          System.out.println(\"RIW.add/updateDocument: now doing a commit at docCount=\" + docCount);\n        }\n        w.commit();\n      }\n      flushAt += TestUtil.nextInt(r, (int) (flushAtFactor * 10), (int) (flushAtFactor * 1000));\n      if (flushAtFactor < 2e6) {\n        // gradually but exponentially increase time b/w flushes\n        flushAtFactor *= 1.05;\n      }\n    }\n  }\n\n","sourceOld":"  private void maybeFlushOrCommit() throws IOException {\n    LuceneTestCase.maybeChangeLiveIndexWriterConfig(r, w.getConfig());\n    if (docCount++ == flushAt) {\n      if (r.nextBoolean()) {\n        flushAllBuffersSequentially();\n      } else if (r.nextBoolean()) {\n        if (LuceneTestCase.VERBOSE) {\n          System.out.println(\"RIW.add/updateDocument: now doing a flush at docCount=\" + docCount);\n        }\n        w.flush();\n      } else {\n        if (LuceneTestCase.VERBOSE) {\n          System.out.println(\"RIW.add/updateDocument: now doing a commit at docCount=\" + docCount);\n        }\n        w.commit();\n      }\n      flushAt += TestUtil.nextInt(r, (int) (flushAtFactor * 10), (int) (flushAtFactor * 1000));\n      if (flushAtFactor < 2e6) {\n        // gradually but exponentially increase time b/w flushes\n        flushAtFactor *= 1.05;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1aad05eeff7818b0833c02ac6b743aa72054963b":["1c331bf2c0db325b2153017708714a1573f2ce35","ad4be95c403f45330d2a078afc9b6fab4515c8ce"],"e84628e1e00d06556b67af150a13dbfb1849a818":["8dd9100a9fc8733b099048622863a3f8f8af7d6a"],"8dd9100a9fc8733b099048622863a3f8f8af7d6a":["1aad05eeff7818b0833c02ac6b743aa72054963b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ad4be95c403f45330d2a078afc9b6fab4515c8ce":["1c331bf2c0db325b2153017708714a1573f2ce35"],"1c331bf2c0db325b2153017708714a1573f2ce35":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e84628e1e00d06556b67af150a13dbfb1849a818"]},"commit2Childs":{"1aad05eeff7818b0833c02ac6b743aa72054963b":["8dd9100a9fc8733b099048622863a3f8f8af7d6a"],"e84628e1e00d06556b67af150a13dbfb1849a818":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"8dd9100a9fc8733b099048622863a3f8f8af7d6a":["e84628e1e00d06556b67af150a13dbfb1849a818"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1c331bf2c0db325b2153017708714a1573f2ce35"],"ad4be95c403f45330d2a078afc9b6fab4515c8ce":["1aad05eeff7818b0833c02ac6b743aa72054963b"],"1c331bf2c0db325b2153017708714a1573f2ce35":["1aad05eeff7818b0833c02ac6b743aa72054963b","ad4be95c403f45330d2a078afc9b6fab4515c8ce"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}