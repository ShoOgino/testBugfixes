{"path":"lucene/facet/src/test/org/apache/lucene/facet/params/FacetIndexingParamsTest#testDefaultSettings().mjava","commits":[{"id":"607428da722dcb3e86bbd11c63de8986e6275c36","date":1360334150,"type":1,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/params/FacetIndexingParamsTest#testDefaultSettings().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/index/params/FacetIndexingParamsTest#testDefaultSettings().mjava","sourceNew":"  @Test\n  public void testDefaultSettings() {\n    FacetIndexingParams dfip = FacetIndexingParams.ALL_PARENTS;\n    assertNotNull(\"Missing default category list\", dfip.getAllCategoryListParams());\n    assertEquals(\"all categories have the same CategoryListParams by default\",\n        dfip.getCategoryListParams(null), dfip.getCategoryListParams(new CategoryPath(\"a\")));\n    assertEquals(\"Expected default category list field is $facets\", \"$facets\", dfip.getCategoryListParams(null).field);\n    String expectedDDText = \"a\"\n        + dfip.getFacetDelimChar() + \"b\";\n    CategoryPath cp = new CategoryPath(\"a\", \"b\");\n    assertEquals(\"wrong drill-down term\", new Term(\"$facets\",\n        expectedDDText), DrillDown.term(dfip,cp));\n    char[] buf = new char[20];\n    int numchars = dfip.drillDownTermText(cp, buf);\n    assertEquals(\"3 characters should be written\", 3, numchars);\n    assertEquals(\"wrong drill-down term text\", expectedDDText, new String(\n        buf, 0, numchars));\n    assertEquals(\"partition for all ordinals is the first\", \"\", \n        PartitionsUtils.partitionNameByOrdinal(dfip, 250));\n    assertEquals(\"for partition 0, the same name should be returned\",\n        \"\", PartitionsUtils.partitionName(0));\n    assertEquals(\n        \"for any other, it's the concatenation of name + partition\",\n        PartitionsUtils.PART_NAME_PREFIX + \"1\", PartitionsUtils.partitionName(1));\n    assertEquals(\"default partition number is always 0\", 0, \n        PartitionsUtils.partitionNumber(dfip,100));\n    assertEquals(\"default partition size is unbounded\", Integer.MAX_VALUE,\n        dfip.getPartitionSize());\n  }\n\n","sourceOld":"  @Test\n  public void testDefaultSettings() {\n    FacetIndexingParams dfip = FacetIndexingParams.ALL_PARENTS;\n    assertNotNull(\"Missing default category list\", dfip.getAllCategoryListParams());\n    assertEquals(\"all categories have the same CategoryListParams by default\",\n        dfip.getCategoryListParams(null), dfip.getCategoryListParams(new CategoryPath(\"a\")));\n    assertEquals(\"Expected default category list field is $facets\", \"$facets\", dfip.getCategoryListParams(null).field);\n    String expectedDDText = \"a\"\n        + dfip.getFacetDelimChar() + \"b\";\n    CategoryPath cp = new CategoryPath(\"a\", \"b\");\n    assertEquals(\"wrong drill-down term\", new Term(\"$facets\",\n        expectedDDText), DrillDown.term(dfip,cp));\n    char[] buf = new char[20];\n    int numchars = dfip.drillDownTermText(cp, buf);\n    assertEquals(\"3 characters should be written\", 3, numchars);\n    assertEquals(\"wrong drill-down term text\", expectedDDText, new String(\n        buf, 0, numchars));\n    assertEquals(\"partition for all ordinals is the first\", \"\", \n        PartitionsUtils.partitionNameByOrdinal(dfip, 250));\n    assertEquals(\"for partition 0, the same name should be returned\",\n        \"\", PartitionsUtils.partitionName(0));\n    assertEquals(\n        \"for any other, it's the concatenation of name + partition\",\n        PartitionsUtils.PART_NAME_PREFIX + \"1\", PartitionsUtils.partitionName(1));\n    assertEquals(\"default partition number is always 0\", 0, \n        PartitionsUtils.partitionNumber(dfip,100));\n    assertEquals(\"default partition size is unbounded\", Integer.MAX_VALUE,\n        dfip.getPartitionSize());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f793470bad5ce8422502e33eaae65fc6a3271bd2","date":1360479442,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/params/FacetIndexingParamsTest#testDefaultSettings().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/params/FacetIndexingParamsTest#testDefaultSettings().mjava","sourceNew":"  @Test\n  public void testDefaultSettings() {\n    FacetIndexingParams dfip = FacetIndexingParams.ALL_PARENTS;\n    assertNotNull(\"Missing default category list\", dfip.getAllCategoryListParams());\n    assertEquals(\"all categories have the same CategoryListParams by default\",\n        dfip.getCategoryListParams(null), dfip.getCategoryListParams(new CategoryPath(\"a\")));\n    assertEquals(\"Expected default category list field is $facets\", \"$facets\", dfip.getCategoryListParams(null).field);\n    String expectedDDText = \"a\"\n        + dfip.getFacetDelimChar() + \"b\";\n    CategoryPath cp = new CategoryPath(\"a\", \"b\");\n    assertEquals(\"wrong drill-down term\", new Term(\"$facets\",\n        expectedDDText), DrillDownQuery.term(dfip,cp));\n    char[] buf = new char[20];\n    int numchars = dfip.drillDownTermText(cp, buf);\n    assertEquals(\"3 characters should be written\", 3, numchars);\n    assertEquals(\"wrong drill-down term text\", expectedDDText, new String(\n        buf, 0, numchars));\n    assertEquals(\"partition for all ordinals is the first\", \"\", \n        PartitionsUtils.partitionNameByOrdinal(dfip, 250));\n    assertEquals(\"for partition 0, the same name should be returned\",\n        \"\", PartitionsUtils.partitionName(0));\n    assertEquals(\n        \"for any other, it's the concatenation of name + partition\",\n        PartitionsUtils.PART_NAME_PREFIX + \"1\", PartitionsUtils.partitionName(1));\n    assertEquals(\"default partition number is always 0\", 0, \n        PartitionsUtils.partitionNumber(dfip,100));\n    assertEquals(\"default partition size is unbounded\", Integer.MAX_VALUE,\n        dfip.getPartitionSize());\n  }\n\n","sourceOld":"  @Test\n  public void testDefaultSettings() {\n    FacetIndexingParams dfip = FacetIndexingParams.ALL_PARENTS;\n    assertNotNull(\"Missing default category list\", dfip.getAllCategoryListParams());\n    assertEquals(\"all categories have the same CategoryListParams by default\",\n        dfip.getCategoryListParams(null), dfip.getCategoryListParams(new CategoryPath(\"a\")));\n    assertEquals(\"Expected default category list field is $facets\", \"$facets\", dfip.getCategoryListParams(null).field);\n    String expectedDDText = \"a\"\n        + dfip.getFacetDelimChar() + \"b\";\n    CategoryPath cp = new CategoryPath(\"a\", \"b\");\n    assertEquals(\"wrong drill-down term\", new Term(\"$facets\",\n        expectedDDText), DrillDown.term(dfip,cp));\n    char[] buf = new char[20];\n    int numchars = dfip.drillDownTermText(cp, buf);\n    assertEquals(\"3 characters should be written\", 3, numchars);\n    assertEquals(\"wrong drill-down term text\", expectedDDText, new String(\n        buf, 0, numchars));\n    assertEquals(\"partition for all ordinals is the first\", \"\", \n        PartitionsUtils.partitionNameByOrdinal(dfip, 250));\n    assertEquals(\"for partition 0, the same name should be returned\",\n        \"\", PartitionsUtils.partitionName(0));\n    assertEquals(\n        \"for any other, it's the concatenation of name + partition\",\n        PartitionsUtils.PART_NAME_PREFIX + \"1\", PartitionsUtils.partitionName(1));\n    assertEquals(\"default partition number is always 0\", 0, \n        PartitionsUtils.partitionNumber(dfip,100));\n    assertEquals(\"default partition size is unbounded\", Integer.MAX_VALUE,\n        dfip.getPartitionSize());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"68ab129f02d1eab2dd2407cfe612f47affe88803","date":1360701006,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/params/FacetIndexingParamsTest#testDefaultSettings().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/params/FacetIndexingParamsTest#testDefaultSettings().mjava","sourceNew":"  @Test\n  public void testDefaultSettings() {\n    FacetIndexingParams dfip = FacetIndexingParams.DEFAULT;\n    assertNotNull(\"Missing default category list\", dfip.getAllCategoryListParams());\n    assertEquals(\"all categories have the same CategoryListParams by default\",\n        dfip.getCategoryListParams(null), dfip.getCategoryListParams(new CategoryPath(\"a\")));\n    assertEquals(\"Expected default category list field is $facets\", \"$facets\", dfip.getCategoryListParams(null).field);\n    String expectedDDText = \"a\"\n        + dfip.getFacetDelimChar() + \"b\";\n    CategoryPath cp = new CategoryPath(\"a\", \"b\");\n    assertEquals(\"wrong drill-down term\", new Term(\"$facets\",\n        expectedDDText), DrillDownQuery.term(dfip,cp));\n    char[] buf = new char[20];\n    int numchars = dfip.drillDownTermText(cp, buf);\n    assertEquals(\"3 characters should be written\", 3, numchars);\n    assertEquals(\"wrong drill-down term text\", expectedDDText, new String(\n        buf, 0, numchars));\n    assertEquals(\"partition for all ordinals is the first\", \"\", \n        PartitionsUtils.partitionNameByOrdinal(dfip, 250));\n    assertEquals(\"for partition 0, the same name should be returned\",\n        \"\", PartitionsUtils.partitionName(0));\n    assertEquals(\n        \"for any other, it's the concatenation of name + partition\",\n        PartitionsUtils.PART_NAME_PREFIX + \"1\", PartitionsUtils.partitionName(1));\n    assertEquals(\"default partition number is always 0\", 0, \n        PartitionsUtils.partitionNumber(dfip,100));\n    assertEquals(\"default partition size is unbounded\", Integer.MAX_VALUE,\n        dfip.getPartitionSize());\n  }\n\n","sourceOld":"  @Test\n  public void testDefaultSettings() {\n    FacetIndexingParams dfip = FacetIndexingParams.ALL_PARENTS;\n    assertNotNull(\"Missing default category list\", dfip.getAllCategoryListParams());\n    assertEquals(\"all categories have the same CategoryListParams by default\",\n        dfip.getCategoryListParams(null), dfip.getCategoryListParams(new CategoryPath(\"a\")));\n    assertEquals(\"Expected default category list field is $facets\", \"$facets\", dfip.getCategoryListParams(null).field);\n    String expectedDDText = \"a\"\n        + dfip.getFacetDelimChar() + \"b\";\n    CategoryPath cp = new CategoryPath(\"a\", \"b\");\n    assertEquals(\"wrong drill-down term\", new Term(\"$facets\",\n        expectedDDText), DrillDownQuery.term(dfip,cp));\n    char[] buf = new char[20];\n    int numchars = dfip.drillDownTermText(cp, buf);\n    assertEquals(\"3 characters should be written\", 3, numchars);\n    assertEquals(\"wrong drill-down term text\", expectedDDText, new String(\n        buf, 0, numchars));\n    assertEquals(\"partition for all ordinals is the first\", \"\", \n        PartitionsUtils.partitionNameByOrdinal(dfip, 250));\n    assertEquals(\"for partition 0, the same name should be returned\",\n        \"\", PartitionsUtils.partitionName(0));\n    assertEquals(\n        \"for any other, it's the concatenation of name + partition\",\n        PartitionsUtils.PART_NAME_PREFIX + \"1\", PartitionsUtils.partitionName(1));\n    assertEquals(\"default partition number is always 0\", 0, \n        PartitionsUtils.partitionNumber(dfip,100));\n    assertEquals(\"default partition size is unbounded\", Integer.MAX_VALUE,\n        dfip.getPartitionSize());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6b381f8de0e13c64eb8faa2a93732f6b95e3d6cb","date":1360780178,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/params/FacetIndexingParamsTest#testDefaultSettings().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/params/FacetIndexingParamsTest#testDefaultSettings().mjava","sourceNew":"  @Test\n  public void testDefaultSettings() {\n    FacetIndexingParams dfip = FacetIndexingParams.DEFAULT;\n    assertNotNull(\"Missing default category list\", dfip.getAllCategoryListParams());\n    assertEquals(\"all categories have the same CategoryListParams by default\",\n        dfip.getCategoryListParams(null), dfip.getCategoryListParams(new CategoryPath(\"a\")));\n    assertEquals(\"Expected default category list field is $facets\", \"$facets\", dfip.getCategoryListParams(null).field);\n    String expectedDDText = \"a\"\n        + dfip.getFacetDelimChar() + \"b\";\n    CategoryPath cp = new CategoryPath(\"a\", \"b\");\n    assertEquals(\"wrong drill-down term\", new Term(\"$facets\",\n        expectedDDText), DrillDownQuery.term(dfip,cp));\n    char[] buf = new char[20];\n    int numchars = dfip.drillDownTermText(cp, buf);\n    assertEquals(\"3 characters should be written\", 3, numchars);\n    assertEquals(\"wrong drill-down term text\", expectedDDText, new String(\n        buf, 0, numchars));\n    assertEquals(\"partition for all ordinals is the first\", \"\", \n        PartitionsUtils.partitionNameByOrdinal(dfip, 250));\n    assertEquals(\"for partition 0, the same name should be returned\",\n        \"\", PartitionsUtils.partitionName(0));\n    assertEquals(\n        \"for any other, it's the concatenation of name + partition\",\n        PartitionsUtils.PART_NAME_PREFIX + \"1\", PartitionsUtils.partitionName(1));\n    assertEquals(\"default partition number is always 0\", 0, \n        PartitionsUtils.partitionNumber(dfip,100));\n    assertEquals(\"default partition size is unbounded\", Integer.MAX_VALUE,\n        dfip.getPartitionSize());\n  }\n\n","sourceOld":"  @Test\n  public void testDefaultSettings() {\n    FacetIndexingParams dfip = FacetIndexingParams.ALL_PARENTS;\n    assertNotNull(\"Missing default category list\", dfip.getAllCategoryListParams());\n    assertEquals(\"all categories have the same CategoryListParams by default\",\n        dfip.getCategoryListParams(null), dfip.getCategoryListParams(new CategoryPath(\"a\")));\n    assertEquals(\"Expected default category list field is $facets\", \"$facets\", dfip.getCategoryListParams(null).field);\n    String expectedDDText = \"a\"\n        + dfip.getFacetDelimChar() + \"b\";\n    CategoryPath cp = new CategoryPath(\"a\", \"b\");\n    assertEquals(\"wrong drill-down term\", new Term(\"$facets\",\n        expectedDDText), DrillDownQuery.term(dfip,cp));\n    char[] buf = new char[20];\n    int numchars = dfip.drillDownTermText(cp, buf);\n    assertEquals(\"3 characters should be written\", 3, numchars);\n    assertEquals(\"wrong drill-down term text\", expectedDDText, new String(\n        buf, 0, numchars));\n    assertEquals(\"partition for all ordinals is the first\", \"\", \n        PartitionsUtils.partitionNameByOrdinal(dfip, 250));\n    assertEquals(\"for partition 0, the same name should be returned\",\n        \"\", PartitionsUtils.partitionName(0));\n    assertEquals(\n        \"for any other, it's the concatenation of name + partition\",\n        PartitionsUtils.PART_NAME_PREFIX + \"1\", PartitionsUtils.partitionName(1));\n    assertEquals(\"default partition number is always 0\", 0, \n        PartitionsUtils.partitionNumber(dfip,100));\n    assertEquals(\"default partition size is unbounded\", Integer.MAX_VALUE,\n        dfip.getPartitionSize());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c190847801a50f4dd20fd639bdc29b54ea3b288b","date":1384461522,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/params/FacetIndexingParamsTest#testDefaultSettings().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/params/FacetIndexingParamsTest#testDefaultSettings().mjava","sourceNew":"  @Test\n  public void testDefaultSettings() {\n    FacetIndexingParams dfip = FacetIndexingParams.DEFAULT;\n    assertNotNull(\"Missing default category list\", dfip.getAllCategoryListParams());\n    assertEquals(\"all categories have the same CategoryListParams by default\",\n        dfip.getCategoryListParams(null), dfip.getCategoryListParams(new FacetLabel(\"a\")));\n    assertEquals(\"Expected default category list field is $facets\", \"$facets\", dfip.getCategoryListParams(null).field);\n    String expectedDDText = \"a\"\n        + dfip.getFacetDelimChar() + \"b\";\n    FacetLabel cp = new FacetLabel(\"a\", \"b\");\n    assertEquals(\"wrong drill-down term\", new Term(\"$facets\",\n        expectedDDText), DrillDownQuery.term(dfip,cp));\n    char[] buf = new char[20];\n    int numchars = dfip.drillDownTermText(cp, buf);\n    assertEquals(\"3 characters should be written\", 3, numchars);\n    assertEquals(\"wrong drill-down term text\", expectedDDText, new String(\n        buf, 0, numchars));\n    assertEquals(\"partition for all ordinals is the first\", \"\", \n        PartitionsUtils.partitionNameByOrdinal(dfip, 250));\n    assertEquals(\"for partition 0, the same name should be returned\",\n        \"\", PartitionsUtils.partitionName(0));\n    assertEquals(\n        \"for any other, it's the concatenation of name + partition\",\n        PartitionsUtils.PART_NAME_PREFIX + \"1\", PartitionsUtils.partitionName(1));\n    assertEquals(\"default partition number is always 0\", 0, \n        PartitionsUtils.partitionNumber(dfip,100));\n    assertEquals(\"default partition size is unbounded\", Integer.MAX_VALUE,\n        dfip.getPartitionSize());\n  }\n\n","sourceOld":"  @Test\n  public void testDefaultSettings() {\n    FacetIndexingParams dfip = FacetIndexingParams.DEFAULT;\n    assertNotNull(\"Missing default category list\", dfip.getAllCategoryListParams());\n    assertEquals(\"all categories have the same CategoryListParams by default\",\n        dfip.getCategoryListParams(null), dfip.getCategoryListParams(new CategoryPath(\"a\")));\n    assertEquals(\"Expected default category list field is $facets\", \"$facets\", dfip.getCategoryListParams(null).field);\n    String expectedDDText = \"a\"\n        + dfip.getFacetDelimChar() + \"b\";\n    CategoryPath cp = new CategoryPath(\"a\", \"b\");\n    assertEquals(\"wrong drill-down term\", new Term(\"$facets\",\n        expectedDDText), DrillDownQuery.term(dfip,cp));\n    char[] buf = new char[20];\n    int numchars = dfip.drillDownTermText(cp, buf);\n    assertEquals(\"3 characters should be written\", 3, numchars);\n    assertEquals(\"wrong drill-down term text\", expectedDDText, new String(\n        buf, 0, numchars));\n    assertEquals(\"partition for all ordinals is the first\", \"\", \n        PartitionsUtils.partitionNameByOrdinal(dfip, 250));\n    assertEquals(\"for partition 0, the same name should be returned\",\n        \"\", PartitionsUtils.partitionName(0));\n    assertEquals(\n        \"for any other, it's the concatenation of name + partition\",\n        PartitionsUtils.PART_NAME_PREFIX + \"1\", PartitionsUtils.partitionName(1));\n    assertEquals(\"default partition number is always 0\", 0, \n        PartitionsUtils.partitionNumber(dfip,100));\n    assertEquals(\"default partition size is unbounded\", Integer.MAX_VALUE,\n        dfip.getPartitionSize());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ca39562b2d7687143fdb601d5de1b8f7b778f1db","date":1385299806,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/params/FacetIndexingParamsTest#testDefaultSettings().mjava","sourceNew":null,"sourceOld":"  @Test\n  public void testDefaultSettings() {\n    FacetIndexingParams dfip = FacetIndexingParams.DEFAULT;\n    assertNotNull(\"Missing default category list\", dfip.getAllCategoryListParams());\n    assertEquals(\"all categories have the same CategoryListParams by default\",\n        dfip.getCategoryListParams(null), dfip.getCategoryListParams(new FacetLabel(\"a\")));\n    assertEquals(\"Expected default category list field is $facets\", \"$facets\", dfip.getCategoryListParams(null).field);\n    String expectedDDText = \"a\"\n        + dfip.getFacetDelimChar() + \"b\";\n    FacetLabel cp = new FacetLabel(\"a\", \"b\");\n    assertEquals(\"wrong drill-down term\", new Term(\"$facets\",\n        expectedDDText), DrillDownQuery.term(dfip,cp));\n    char[] buf = new char[20];\n    int numchars = dfip.drillDownTermText(cp, buf);\n    assertEquals(\"3 characters should be written\", 3, numchars);\n    assertEquals(\"wrong drill-down term text\", expectedDDText, new String(\n        buf, 0, numchars));\n    assertEquals(\"partition for all ordinals is the first\", \"\", \n        PartitionsUtils.partitionNameByOrdinal(dfip, 250));\n    assertEquals(\"for partition 0, the same name should be returned\",\n        \"\", PartitionsUtils.partitionName(0));\n    assertEquals(\n        \"for any other, it's the concatenation of name + partition\",\n        PartitionsUtils.PART_NAME_PREFIX + \"1\", PartitionsUtils.partitionName(1));\n    assertEquals(\"default partition number is always 0\", 0, \n        PartitionsUtils.partitionNumber(dfip,100));\n    assertEquals(\"default partition size is unbounded\", Integer.MAX_VALUE,\n        dfip.getPartitionSize());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cc728b07df73b197e6d940d27f9b08b63918f13","date":1388834348,"type":4,"author":"Michael McCandless","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/params/FacetIndexingParamsTest#testDefaultSettings().mjava","sourceNew":null,"sourceOld":"  @Test\n  public void testDefaultSettings() {\n    FacetIndexingParams dfip = FacetIndexingParams.DEFAULT;\n    assertNotNull(\"Missing default category list\", dfip.getAllCategoryListParams());\n    assertEquals(\"all categories have the same CategoryListParams by default\",\n        dfip.getCategoryListParams(null), dfip.getCategoryListParams(new CategoryPath(\"a\")));\n    assertEquals(\"Expected default category list field is $facets\", \"$facets\", dfip.getCategoryListParams(null).field);\n    String expectedDDText = \"a\"\n        + dfip.getFacetDelimChar() + \"b\";\n    CategoryPath cp = new CategoryPath(\"a\", \"b\");\n    assertEquals(\"wrong drill-down term\", new Term(\"$facets\",\n        expectedDDText), DrillDownQuery.term(dfip,cp));\n    char[] buf = new char[20];\n    int numchars = dfip.drillDownTermText(cp, buf);\n    assertEquals(\"3 characters should be written\", 3, numchars);\n    assertEquals(\"wrong drill-down term text\", expectedDDText, new String(\n        buf, 0, numchars));\n    assertEquals(\"partition for all ordinals is the first\", \"\", \n        PartitionsUtils.partitionNameByOrdinal(dfip, 250));\n    assertEquals(\"for partition 0, the same name should be returned\",\n        \"\", PartitionsUtils.partitionName(0));\n    assertEquals(\n        \"for any other, it's the concatenation of name + partition\",\n        PartitionsUtils.PART_NAME_PREFIX + \"1\", PartitionsUtils.partitionName(1));\n    assertEquals(\"default partition number is always 0\", 0, \n        PartitionsUtils.partitionNumber(dfip,100));\n    assertEquals(\"default partition size is unbounded\", Integer.MAX_VALUE,\n        dfip.getPartitionSize());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"607428da722dcb3e86bbd11c63de8986e6275c36":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"6b381f8de0e13c64eb8faa2a93732f6b95e3d6cb":["f793470bad5ce8422502e33eaae65fc6a3271bd2","68ab129f02d1eab2dd2407cfe612f47affe88803"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"68ab129f02d1eab2dd2407cfe612f47affe88803":["f793470bad5ce8422502e33eaae65fc6a3271bd2"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["68ab129f02d1eab2dd2407cfe612f47affe88803","ca39562b2d7687143fdb601d5de1b8f7b778f1db"],"f793470bad5ce8422502e33eaae65fc6a3271bd2":["607428da722dcb3e86bbd11c63de8986e6275c36"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"ca39562b2d7687143fdb601d5de1b8f7b778f1db":["c190847801a50f4dd20fd639bdc29b54ea3b288b"],"c190847801a50f4dd20fd639bdc29b54ea3b288b":["68ab129f02d1eab2dd2407cfe612f47affe88803"]},"commit2Childs":{"607428da722dcb3e86bbd11c63de8986e6275c36":["f793470bad5ce8422502e33eaae65fc6a3271bd2"],"6b381f8de0e13c64eb8faa2a93732f6b95e3d6cb":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["607428da722dcb3e86bbd11c63de8986e6275c36"],"68ab129f02d1eab2dd2407cfe612f47affe88803":["6b381f8de0e13c64eb8faa2a93732f6b95e3d6cb","3cc728b07df73b197e6d940d27f9b08b63918f13","c190847801a50f4dd20fd639bdc29b54ea3b288b"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f793470bad5ce8422502e33eaae65fc6a3271bd2":["6b381f8de0e13c64eb8faa2a93732f6b95e3d6cb","68ab129f02d1eab2dd2407cfe612f47affe88803"],"ca39562b2d7687143fdb601d5de1b8f7b778f1db":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"c190847801a50f4dd20fd639bdc29b54ea3b288b":["ca39562b2d7687143fdb601d5de1b8f7b778f1db"]},"heads":["6b381f8de0e13c64eb8faa2a93732f6b95e3d6cb","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}