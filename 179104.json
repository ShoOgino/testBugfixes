{"path":"modules/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/PatternAnalyzerTest#testCustomPattern().mjava","commits":[{"id":"0f080986da691a3bba7b757f43ab72cdc82b57ce","date":1273069619,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/PatternAnalyzerTest#testCustomPattern().mjava","pathOld":"lucene/contrib/analyzers/common/src/test/org/apache/lucene/analysis/miscellaneous/PatternAnalyzerTest#testCustomPattern().mjava","sourceNew":"  /**\n   * Test PatternAnalyzer when it is configured with a custom pattern. In this\n   * case, text is tokenized on the comma \",\"\n   */\n  public void testCustomPattern() throws IOException {\n    // Split on comma, do not lowercase, no stopwords\n    PatternAnalyzer a = new PatternAnalyzer(TEST_VERSION_CURRENT, Pattern.compile(\",\"), false, null);\n    check(a, \"Here,Are,some,Comma,separated,words,\", new String[] { \"Here\",\n        \"Are\", \"some\", \"Comma\", \"separated\", \"words\" });\n\n    // split on comma, lowercase, english stopwords\n    PatternAnalyzer b = new PatternAnalyzer(TEST_VERSION_CURRENT, Pattern.compile(\",\"), true,\n        StopAnalyzer.ENGLISH_STOP_WORDS_SET);\n    check(b, \"Here,Are,some,Comma,separated,words,\", new String[] { \"here\",\n        \"some\", \"comma\", \"separated\", \"words\" });\n  }\n\n","sourceOld":"  /**\n   * Test PatternAnalyzer when it is configured with a custom pattern. In this\n   * case, text is tokenized on the comma \",\"\n   */\n  public void testCustomPattern() throws IOException {\n    // Split on comma, do not lowercase, no stopwords\n    PatternAnalyzer a = new PatternAnalyzer(TEST_VERSION_CURRENT, Pattern.compile(\",\"), false, null);\n    check(a, \"Here,Are,some,Comma,separated,words,\", new String[] { \"Here\",\n        \"Are\", \"some\", \"Comma\", \"separated\", \"words\" });\n\n    // split on comma, lowercase, english stopwords\n    PatternAnalyzer b = new PatternAnalyzer(TEST_VERSION_CURRENT, Pattern.compile(\",\"), true,\n        StopAnalyzer.ENGLISH_STOP_WORDS_SET);\n    check(b, \"Here,Are,some,Comma,separated,words,\", new String[] { \"here\",\n        \"some\", \"comma\", \"separated\", \"words\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/PatternAnalyzerTest#testCustomPattern().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/PatternAnalyzerTest#testCustomPattern().mjava","sourceNew":"  /**\n   * Test PatternAnalyzer when it is configured with a custom pattern. In this\n   * case, text is tokenized on the comma \",\"\n   */\n  public void testCustomPattern() throws IOException {\n    // Split on comma, do not lowercase, no stopwords\n    PatternAnalyzer a = new PatternAnalyzer(TEST_VERSION_CURRENT, Pattern.compile(\",\"), false, null);\n    check(a, \"Here,Are,some,Comma,separated,words,\", new String[] { \"Here\",\n        \"Are\", \"some\", \"Comma\", \"separated\", \"words\" });\n\n    // split on comma, lowercase, english stopwords\n    PatternAnalyzer b = new PatternAnalyzer(TEST_VERSION_CURRENT, Pattern.compile(\",\"), true,\n        StopAnalyzer.ENGLISH_STOP_WORDS_SET);\n    check(b, \"Here,Are,some,Comma,separated,words,\", new String[] { \"here\",\n        \"some\", \"comma\", \"separated\", \"words\" });\n  }\n\n","sourceOld":"  /**\n   * Test PatternAnalyzer when it is configured with a custom pattern. In this\n   * case, text is tokenized on the comma \",\"\n   */\n  public void testCustomPattern() throws IOException {\n    // Split on comma, do not lowercase, no stopwords\n    PatternAnalyzer a = new PatternAnalyzer(TEST_VERSION_CURRENT, Pattern.compile(\",\"), false, null);\n    check(a, \"Here,Are,some,Comma,separated,words,\", new String[] { \"Here\",\n        \"Are\", \"some\", \"Comma\", \"separated\", \"words\" });\n\n    // split on comma, lowercase, english stopwords\n    PatternAnalyzer b = new PatternAnalyzer(TEST_VERSION_CURRENT, Pattern.compile(\",\"), true,\n        StopAnalyzer.ENGLISH_STOP_WORDS_SET);\n    check(b, \"Here,Are,some,Comma,separated,words,\", new String[] { \"here\",\n        \"some\", \"comma\", \"separated\", \"words\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}