{"path":"lucene/spatial3d/src/java/org/apache/lucene/geo3d/GeoBaseBBox#isShapeInsideBBox(GeoShape).mjava","commits":[{"id":"3022be5842502b7c2a57a5124199bbc30236f0a0","date":1436724252,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/spatial3d/src/java/org/apache/lucene/geo3d/GeoBaseBBox#isShapeInsideBBox(GeoShape).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/geo3d/GeoBaseBBox#isShapeInsideBBox(GeoShape).mjava","sourceNew":"  protected int isShapeInsideBBox(final GeoShape path) {\n    final GeoPoint[] pathPoints = path.getEdgePoints();\n    boolean foundOutside = false;\n    boolean foundInside = false;\n    for (GeoPoint p : pathPoints) {\n      if (isWithin(p)) {\n        foundInside = true;\n      } else {\n        foundOutside = true;\n      }\n      if (foundInside && foundOutside) {\n        return SOME_INSIDE;\n      }\n    }\n    if (!foundInside && !foundOutside)\n      return NONE_INSIDE;\n    if (foundInside && !foundOutside)\n      return ALL_INSIDE;\n    if (foundOutside && !foundInside)\n      return NONE_INSIDE;\n    return SOME_INSIDE;\n  }\n\n","sourceOld":"  protected int isShapeInsideBBox(final GeoShape path) {\n    final GeoPoint[] pathPoints = path.getEdgePoints();\n    boolean foundOutside = false;\n    boolean foundInside = false;\n    for (GeoPoint p : pathPoints) {\n      if (isWithin(p)) {\n        foundInside = true;\n      } else {\n        foundOutside = true;\n      }\n      if (foundInside && foundOutside) {\n        return SOME_INSIDE;\n      }\n    }\n    if (!foundInside && !foundOutside)\n      return NONE_INSIDE;\n    if (foundInside && !foundOutside)\n      return ALL_INSIDE;\n    if (foundOutside && !foundInside)\n      return NONE_INSIDE;\n    return SOME_INSIDE;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a71849bd31d150133a9a1027bf1607967b406c57","date":1436811056,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/spatial3d/src/java/org/apache/lucene/geo3d/GeoBaseBBox#isShapeInsideBBox(GeoShape).mjava","pathOld":"lucene/spatial3d/src/java/org/apache/lucene/geo3d/GeoBaseBBox#isShapeInsideBBox(GeoShape).mjava","sourceNew":"  /** Determine the relationship between this BBox and the provided\n   * shape's edgepoints.\n   *@param path is the shape.\n   *@return the relationship.\n   */\n  protected int isShapeInsideBBox(final GeoShape path) {\n    final GeoPoint[] pathPoints = path.getEdgePoints();\n    boolean foundOutside = false;\n    boolean foundInside = false;\n    for (GeoPoint p : pathPoints) {\n      if (isWithin(p)) {\n        foundInside = true;\n      } else {\n        foundOutside = true;\n      }\n      if (foundInside && foundOutside) {\n        return SOME_INSIDE;\n      }\n    }\n    if (!foundInside && !foundOutside)\n      return NONE_INSIDE;\n    if (foundInside && !foundOutside)\n      return ALL_INSIDE;\n    if (foundOutside && !foundInside)\n      return NONE_INSIDE;\n    return SOME_INSIDE;\n  }\n\n","sourceOld":"  protected int isShapeInsideBBox(final GeoShape path) {\n    final GeoPoint[] pathPoints = path.getEdgePoints();\n    boolean foundOutside = false;\n    boolean foundInside = false;\n    for (GeoPoint p : pathPoints) {\n      if (isWithin(p)) {\n        foundInside = true;\n      } else {\n        foundOutside = true;\n      }\n      if (foundInside && foundOutside) {\n        return SOME_INSIDE;\n      }\n    }\n    if (!foundInside && !foundOutside)\n      return NONE_INSIDE;\n    if (foundInside && !foundOutside)\n      return ALL_INSIDE;\n    if (foundOutside && !foundInside)\n      return NONE_INSIDE;\n    return SOME_INSIDE;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b4e444678504caf66a8060b1d514383aa4feac0c","date":1457399659,"type":5,"author":"David Smiley","isMerge":false,"pathNew":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoBaseBBox#isShapeInsideBBox(GeoShape).mjava","pathOld":"lucene/spatial3d/src/java/org/apache/lucene/geo3d/GeoBaseBBox#isShapeInsideBBox(GeoShape).mjava","sourceNew":"  /** Determine the relationship between this BBox and the provided\n   * shape's edgepoints.\n   *@param path is the shape.\n   *@return the relationship.\n   */\n  protected int isShapeInsideBBox(final GeoShape path) {\n    final GeoPoint[] pathPoints = path.getEdgePoints();\n    boolean foundOutside = false;\n    boolean foundInside = false;\n    for (GeoPoint p : pathPoints) {\n      if (isWithin(p)) {\n        foundInside = true;\n      } else {\n        foundOutside = true;\n      }\n      if (foundInside && foundOutside) {\n        return SOME_INSIDE;\n      }\n    }\n    if (!foundInside && !foundOutside)\n      return NONE_INSIDE;\n    if (foundInside && !foundOutside)\n      return ALL_INSIDE;\n    if (foundOutside && !foundInside)\n      return NONE_INSIDE;\n    return SOME_INSIDE;\n  }\n\n","sourceOld":"  /** Determine the relationship between this BBox and the provided\n   * shape's edgepoints.\n   *@param path is the shape.\n   *@return the relationship.\n   */\n  protected int isShapeInsideBBox(final GeoShape path) {\n    final GeoPoint[] pathPoints = path.getEdgePoints();\n    boolean foundOutside = false;\n    boolean foundInside = false;\n    for (GeoPoint p : pathPoints) {\n      if (isWithin(p)) {\n        foundInside = true;\n      } else {\n        foundOutside = true;\n      }\n      if (foundInside && foundOutside) {\n        return SOME_INSIDE;\n      }\n    }\n    if (!foundInside && !foundOutside)\n      return NONE_INSIDE;\n    if (foundInside && !foundOutside)\n      return ALL_INSIDE;\n    if (foundOutside && !foundInside)\n      return NONE_INSIDE;\n    return SOME_INSIDE;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a71849bd31d150133a9a1027bf1607967b406c57":["3022be5842502b7c2a57a5124199bbc30236f0a0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3022be5842502b7c2a57a5124199bbc30236f0a0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b4e444678504caf66a8060b1d514383aa4feac0c":["a71849bd31d150133a9a1027bf1607967b406c57"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b4e444678504caf66a8060b1d514383aa4feac0c"]},"commit2Childs":{"a71849bd31d150133a9a1027bf1607967b406c57":["b4e444678504caf66a8060b1d514383aa4feac0c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3022be5842502b7c2a57a5124199bbc30236f0a0"],"3022be5842502b7c2a57a5124199bbc30236f0a0":["a71849bd31d150133a9a1027bf1607967b406c57"],"b4e444678504caf66a8060b1d514383aa4feac0c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}