{"path":"solr/src/java/org/apache/solr/core/SolrCore#initIndex().mjava","commits":[{"id":"893269407f5c988a4b2ee13c7ffc01ec43136c1d","date":1268598046,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/core/SolrCore#initIndex().mjava","pathOld":"/dev/null","sourceNew":"  void initIndex() {\n    try {\n      File dirFile = new File(getNewIndexDir());\n      boolean indexExists = dirFile.canRead();\n      boolean firstTime;\n      synchronized (SolrCore.class) {\n        firstTime = dirs.add(dirFile.getCanonicalPath());\n      }\n      boolean removeLocks = solrConfig.unlockOnStartup;\n\n      initDirectoryFactory();\n      initIndexReaderFactory();\n\n      if (indexExists && firstTime && removeLocks) {\n        // to remove locks, the directory must already exist... so we create it\n        // if it didn't exist already...\n        Directory dir = SolrIndexWriter.getDirectory(getIndexDir(), getDirectoryFactory(), solrConfig.mainIndexConfig);\n        if (dir != null)  {\n          if (IndexWriter.isLocked(dir)) {\n            log.warn(logid+\"WARNING: Solr index directory '\" + getIndexDir() + \"' is locked.  Unlocking...\");\n            IndexWriter.unlock(dir);\n          }\n          dir.close();\n        }\n      }\n\n      // Create the index if it doesn't exist.\n      if(!indexExists) {\n        log.warn(logid+\"Solr index directory '\" + dirFile + \"' doesn't exist.\"\n                + \" Creating new index...\");\n\n        SolrIndexWriter writer = new SolrIndexWriter(\"SolrCore.initIndex\", getIndexDir(), getDirectoryFactory(), true, schema, solrConfig.mainIndexConfig, solrDelPolicy);\n        writer.close();\n      }\n\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","date":1268599006,"type":4,"author":"Mark Robert Miller","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/src/java/org/apache/solr/core/SolrCore#initIndex().mjava","sourceNew":null,"sourceOld":"  void initIndex() {\n    try {\n      File dirFile = new File(getNewIndexDir());\n      boolean indexExists = dirFile.canRead();\n      boolean firstTime;\n      synchronized (SolrCore.class) {\n        firstTime = dirs.add(dirFile.getCanonicalPath());\n      }\n      boolean removeLocks = solrConfig.unlockOnStartup;\n\n      initDirectoryFactory();\n      initIndexReaderFactory();\n\n      if (indexExists && firstTime && removeLocks) {\n        // to remove locks, the directory must already exist... so we create it\n        // if it didn't exist already...\n        Directory dir = SolrIndexWriter.getDirectory(getIndexDir(), getDirectoryFactory(), solrConfig.mainIndexConfig);\n        if (dir != null)  {\n          if (IndexWriter.isLocked(dir)) {\n            log.warn(logid+\"WARNING: Solr index directory '\" + getIndexDir() + \"' is locked.  Unlocking...\");\n            IndexWriter.unlock(dir);\n          }\n          dir.close();\n        }\n      }\n\n      // Create the index if it doesn't exist.\n      if(!indexExists) {\n        log.warn(logid+\"Solr index directory '\" + dirFile + \"' doesn't exist.\"\n                + \" Creating new index...\");\n\n        SolrIndexWriter writer = new SolrIndexWriter(\"SolrCore.initIndex\", getIndexDir(), getDirectoryFactory(), true, schema, solrConfig.mainIndexConfig, solrDelPolicy);\n        writer.close();\n      }\n\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/core/SolrCore#initIndex().mjava","pathOld":"src/java/org/apache/solr/core/SolrCore#initIndex().mjava","sourceNew":"  void initIndex() {\n    try {\n      File dirFile = new File(getNewIndexDir());\n      boolean indexExists = dirFile.canRead();\n      boolean firstTime;\n      synchronized (SolrCore.class) {\n        firstTime = dirs.add(dirFile.getCanonicalPath());\n      }\n      boolean removeLocks = solrConfig.unlockOnStartup;\n\n      initDirectoryFactory();\n      initIndexReaderFactory();\n\n      if (indexExists && firstTime && removeLocks) {\n        // to remove locks, the directory must already exist... so we create it\n        // if it didn't exist already...\n        Directory dir = SolrIndexWriter.getDirectory(getIndexDir(), getDirectoryFactory(), solrConfig.mainIndexConfig);\n        if (dir != null)  {\n          if (IndexWriter.isLocked(dir)) {\n            log.warn(logid+\"WARNING: Solr index directory '\" + getIndexDir() + \"' is locked.  Unlocking...\");\n            IndexWriter.unlock(dir);\n          }\n          dir.close();\n        }\n      }\n\n      // Create the index if it doesn't exist.\n      if(!indexExists) {\n        log.warn(logid+\"Solr index directory '\" + dirFile + \"' doesn't exist.\"\n                + \" Creating new index...\");\n\n        SolrIndexWriter writer = new SolrIndexWriter(\"SolrCore.initIndex\", getIndexDir(), getDirectoryFactory(), true, schema, solrConfig.mainIndexConfig, solrDelPolicy);\n        writer.close();\n      }\n\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","sourceOld":"  void initIndex() {\n    try {\n      File dirFile = new File(getNewIndexDir());\n      boolean indexExists = dirFile.canRead();\n      boolean firstTime;\n      synchronized (SolrCore.class) {\n        firstTime = dirs.add(dirFile.getCanonicalPath());\n      }\n      boolean removeLocks = solrConfig.unlockOnStartup;\n\n      initDirectoryFactory();\n      initIndexReaderFactory();\n\n      if (indexExists && firstTime && removeLocks) {\n        // to remove locks, the directory must already exist... so we create it\n        // if it didn't exist already...\n        Directory dir = SolrIndexWriter.getDirectory(getIndexDir(), getDirectoryFactory(), solrConfig.mainIndexConfig);\n        if (dir != null)  {\n          if (IndexWriter.isLocked(dir)) {\n            log.warn(logid+\"WARNING: Solr index directory '\" + getIndexDir() + \"' is locked.  Unlocking...\");\n            IndexWriter.unlock(dir);\n          }\n          dir.close();\n        }\n      }\n\n      // Create the index if it doesn't exist.\n      if(!indexExists) {\n        log.warn(logid+\"Solr index directory '\" + dirFile + \"' doesn't exist.\"\n                + \" Creating new index...\");\n\n        SolrIndexWriter writer = new SolrIndexWriter(\"SolrCore.initIndex\", getIndexDir(), getDirectoryFactory(), true, schema, solrConfig.mainIndexConfig, solrDelPolicy);\n        writer.close();\n      }\n\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1da8d55113b689b06716246649de6f62430f15c0","date":1453508340,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/core/SolrCore#initIndex().mjava","pathOld":"/dev/null","sourceNew":"  void initIndex() {\n    try {\n      File dirFile = new File(getNewIndexDir());\n      boolean indexExists = dirFile.canRead();\n      boolean firstTime;\n      synchronized (SolrCore.class) {\n        firstTime = dirs.add(dirFile.getCanonicalPath());\n      }\n      boolean removeLocks = solrConfig.unlockOnStartup;\n\n      initDirectoryFactory();\n      initIndexReaderFactory();\n\n      if (indexExists && firstTime && removeLocks) {\n        // to remove locks, the directory must already exist... so we create it\n        // if it didn't exist already...\n        Directory dir = SolrIndexWriter.getDirectory(getIndexDir(), getDirectoryFactory(), solrConfig.mainIndexConfig);\n        if (dir != null)  {\n          if (IndexWriter.isLocked(dir)) {\n            log.warn(logid+\"WARNING: Solr index directory '\" + getIndexDir() + \"' is locked.  Unlocking...\");\n            IndexWriter.unlock(dir);\n          }\n          dir.close();\n        }\n      }\n\n      // Create the index if it doesn't exist.\n      if(!indexExists) {\n        log.warn(logid+\"Solr index directory '\" + dirFile + \"' doesn't exist.\"\n                + \" Creating new index...\");\n\n        SolrIndexWriter writer = new SolrIndexWriter(\"SolrCore.initIndex\", getIndexDir(), getDirectoryFactory(), true, schema, solrConfig.mainIndexConfig, solrDelPolicy);\n        writer.close();\n      }\n\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ec10d7f440570f813952960ef905138a95114a45","date":1269289866,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/core/SolrCore#initIndex().mjava","pathOld":"solr/src/java/org/apache/solr/core/SolrCore#initIndex().mjava","sourceNew":"  void initIndex() {\n    try {\n\n      initDirectoryFactory();\n      boolean indexExists = getDirectoryFactory().exists(getNewIndexDir());\n      boolean firstTime;\n      synchronized (SolrCore.class) {\n        firstTime = dirs.add(new File(getNewIndexDir()).getCanonicalPath());\n      }\n      boolean removeLocks = solrConfig.unlockOnStartup;\n\n      initIndexReaderFactory();\n\n      if (indexExists && firstTime && removeLocks) {\n        // to remove locks, the directory must already exist... so we create it\n        // if it didn't exist already...\n        Directory dir = SolrIndexWriter.getDirectory(getIndexDir(), getDirectoryFactory(), solrConfig.mainIndexConfig);\n        if (dir != null)  {\n          if (IndexWriter.isLocked(dir)) {\n            log.warn(logid+\"WARNING: Solr index directory '\" + getIndexDir() + \"' is locked.  Unlocking...\");\n            IndexWriter.unlock(dir);\n          }\n          dir.close();\n        }\n      }\n\n      // Create the index if it doesn't exist.\n      if(!indexExists) {\n        log.warn(logid+\"Solr index directory '\" + new File(getNewIndexDir()) + \"' doesn't exist.\"\n                + \" Creating new index...\");\n\n        SolrIndexWriter writer = new SolrIndexWriter(\"SolrCore.initIndex\", getIndexDir(), getDirectoryFactory(), true, schema, solrConfig.mainIndexConfig, solrDelPolicy);\n        writer.close();\n      }\n\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","sourceOld":"  void initIndex() {\n    try {\n      File dirFile = new File(getNewIndexDir());\n      boolean indexExists = dirFile.canRead();\n      boolean firstTime;\n      synchronized (SolrCore.class) {\n        firstTime = dirs.add(dirFile.getCanonicalPath());\n      }\n      boolean removeLocks = solrConfig.unlockOnStartup;\n\n      initDirectoryFactory();\n      initIndexReaderFactory();\n\n      if (indexExists && firstTime && removeLocks) {\n        // to remove locks, the directory must already exist... so we create it\n        // if it didn't exist already...\n        Directory dir = SolrIndexWriter.getDirectory(getIndexDir(), getDirectoryFactory(), solrConfig.mainIndexConfig);\n        if (dir != null)  {\n          if (IndexWriter.isLocked(dir)) {\n            log.warn(logid+\"WARNING: Solr index directory '\" + getIndexDir() + \"' is locked.  Unlocking...\");\n            IndexWriter.unlock(dir);\n          }\n          dir.close();\n        }\n      }\n\n      // Create the index if it doesn't exist.\n      if(!indexExists) {\n        log.warn(logid+\"Solr index directory '\" + dirFile + \"' doesn't exist.\"\n                + \" Creating new index...\");\n\n        SolrIndexWriter writer = new SolrIndexWriter(\"SolrCore.initIndex\", getIndexDir(), getDirectoryFactory(), true, schema, solrConfig.mainIndexConfig, solrDelPolicy);\n        writer.close();\n      }\n\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","bugFix":null,"bugIntro":["f885550d27f2e8768dae49c3e1adf890f86f7988","e22ffe8cc51a892ae103df018822d7873e901c2a","e22ffe8cc51a892ae103df018822d7873e901c2a","e22ffe8cc51a892ae103df018822d7873e901c2a"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"f885550d27f2e8768dae49c3e1adf890f86f7988","date":1288031731,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/core/SolrCore#initIndex().mjava","pathOld":"solr/src/java/org/apache/solr/core/SolrCore#initIndex().mjava","sourceNew":"  void initIndex() {\n    try {\n      initDirectoryFactory();\n      String indexDir = getNewIndexDir();\n      boolean indexExists = getDirectoryFactory().exists(indexDir);\n      boolean firstTime;\n      synchronized (SolrCore.class) {\n        firstTime = dirs.add(new File(indexDir).getCanonicalPath());\n      }\n      boolean removeLocks = solrConfig.unlockOnStartup;\n\n      initIndexReaderFactory();\n\n      if (indexExists && firstTime && removeLocks) {\n        // to remove locks, the directory must already exist... so we create it\n        // if it didn't exist already...\n        Directory dir = SolrIndexWriter.getDirectory(indexDir, getDirectoryFactory(), solrConfig.mainIndexConfig);\n        if (dir != null)  {\n          if (IndexWriter.isLocked(dir)) {\n            log.warn(logid+\"WARNING: Solr index directory '\" + indexDir+ \"' is locked.  Unlocking...\");\n            IndexWriter.unlock(dir);\n          }\n          dir.close();\n        }\n      }\n\n      // Create the index if it doesn't exist.\n      if(!indexExists) {\n        log.warn(logid+\"Solr index directory '\" + new File(indexDir) + \"' doesn't exist.\"\n                + \" Creating new index...\");\n\n        SolrIndexWriter writer = new SolrIndexWriter(\"SolrCore.initIndex\", indexDir, getDirectoryFactory(), true, schema, solrConfig.mainIndexConfig, solrDelPolicy);\n        writer.close();\n      }\n\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","sourceOld":"  void initIndex() {\n    try {\n\n      initDirectoryFactory();\n      boolean indexExists = getDirectoryFactory().exists(getNewIndexDir());\n      boolean firstTime;\n      synchronized (SolrCore.class) {\n        firstTime = dirs.add(new File(getNewIndexDir()).getCanonicalPath());\n      }\n      boolean removeLocks = solrConfig.unlockOnStartup;\n\n      initIndexReaderFactory();\n\n      if (indexExists && firstTime && removeLocks) {\n        // to remove locks, the directory must already exist... so we create it\n        // if it didn't exist already...\n        Directory dir = SolrIndexWriter.getDirectory(getIndexDir(), getDirectoryFactory(), solrConfig.mainIndexConfig);\n        if (dir != null)  {\n          if (IndexWriter.isLocked(dir)) {\n            log.warn(logid+\"WARNING: Solr index directory '\" + getIndexDir() + \"' is locked.  Unlocking...\");\n            IndexWriter.unlock(dir);\n          }\n          dir.close();\n        }\n      }\n\n      // Create the index if it doesn't exist.\n      if(!indexExists) {\n        log.warn(logid+\"Solr index directory '\" + new File(getNewIndexDir()) + \"' doesn't exist.\"\n                + \" Creating new index...\");\n\n        SolrIndexWriter writer = new SolrIndexWriter(\"SolrCore.initIndex\", getIndexDir(), getDirectoryFactory(), true, schema, solrConfig.mainIndexConfig, solrDelPolicy);\n        writer.close();\n      }\n\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","bugFix":["ec10d7f440570f813952960ef905138a95114a45","3fb91a37fdd32424e0dae9bdb8e055dc4331acc0","db71c9bced2a5e90a7d21fa3ce2d105f60867412"],"bugIntro":["e0bbfc7e96e0cf26b51dcefe3b2e4c93fe34e8c0","e0bbfc7e96e0cf26b51dcefe3b2e4c93fe34e8c0","e0bbfc7e96e0cf26b51dcefe3b2e4c93fe34e8c0","e22ffe8cc51a892ae103df018822d7873e901c2a","e22ffe8cc51a892ae103df018822d7873e901c2a","e22ffe8cc51a892ae103df018822d7873e901c2a"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b12d3e81e0f95a4527b5703953c503f71120ffcc","date":1288080933,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/core/SolrCore#initIndex().mjava","pathOld":"solr/src/java/org/apache/solr/core/SolrCore#initIndex().mjava","sourceNew":"  void initIndex() {\n    try {\n      initDirectoryFactory();\n      String indexDir = getNewIndexDir();\n      boolean indexExists = getDirectoryFactory().exists(indexDir);\n      boolean firstTime;\n      synchronized (SolrCore.class) {\n        firstTime = dirs.add(new File(indexDir).getCanonicalPath());\n      }\n      boolean removeLocks = solrConfig.unlockOnStartup;\n\n      initIndexReaderFactory();\n\n      if (indexExists && firstTime && removeLocks) {\n        // to remove locks, the directory must already exist... so we create it\n        // if it didn't exist already...\n        Directory dir = SolrIndexWriter.getDirectory(indexDir, getDirectoryFactory(), solrConfig.mainIndexConfig);\n        if (dir != null)  {\n          if (IndexWriter.isLocked(dir)) {\n            log.warn(logid+\"WARNING: Solr index directory '\" + indexDir+ \"' is locked.  Unlocking...\");\n            IndexWriter.unlock(dir);\n          }\n          dir.close();\n        }\n      }\n\n      // Create the index if it doesn't exist.\n      if(!indexExists) {\n        log.warn(logid+\"Solr index directory '\" + new File(indexDir) + \"' doesn't exist.\"\n                + \" Creating new index...\");\n\n        SolrIndexWriter writer = new SolrIndexWriter(\"SolrCore.initIndex\", indexDir, getDirectoryFactory(), true, schema, solrConfig.mainIndexConfig, solrDelPolicy);\n        writer.close();\n      }\n\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","sourceOld":"  void initIndex() {\n    try {\n\n      initDirectoryFactory();\n      boolean indexExists = getDirectoryFactory().exists(getNewIndexDir());\n      boolean firstTime;\n      synchronized (SolrCore.class) {\n        firstTime = dirs.add(new File(getNewIndexDir()).getCanonicalPath());\n      }\n      boolean removeLocks = solrConfig.unlockOnStartup;\n\n      initIndexReaderFactory();\n\n      if (indexExists && firstTime && removeLocks) {\n        // to remove locks, the directory must already exist... so we create it\n        // if it didn't exist already...\n        Directory dir = SolrIndexWriter.getDirectory(getIndexDir(), getDirectoryFactory(), solrConfig.mainIndexConfig);\n        if (dir != null)  {\n          if (IndexWriter.isLocked(dir)) {\n            log.warn(logid+\"WARNING: Solr index directory '\" + getIndexDir() + \"' is locked.  Unlocking...\");\n            IndexWriter.unlock(dir);\n          }\n          dir.close();\n        }\n      }\n\n      // Create the index if it doesn't exist.\n      if(!indexExists) {\n        log.warn(logid+\"Solr index directory '\" + new File(getNewIndexDir()) + \"' doesn't exist.\"\n                + \" Creating new index...\");\n\n        SolrIndexWriter writer = new SolrIndexWriter(\"SolrCore.initIndex\", getIndexDir(), getDirectoryFactory(), true, schema, solrConfig.mainIndexConfig, solrDelPolicy);\n        writer.close();\n      }\n\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/core/SolrCore#initIndex().mjava","pathOld":"solr/src/java/org/apache/solr/core/SolrCore#initIndex().mjava","sourceNew":"  void initIndex() {\n    try {\n      initDirectoryFactory();\n      String indexDir = getNewIndexDir();\n      boolean indexExists = getDirectoryFactory().exists(indexDir);\n      boolean firstTime;\n      synchronized (SolrCore.class) {\n        firstTime = dirs.add(new File(indexDir).getCanonicalPath());\n      }\n      boolean removeLocks = solrConfig.unlockOnStartup;\n\n      initIndexReaderFactory();\n\n      if (indexExists && firstTime && removeLocks) {\n        // to remove locks, the directory must already exist... so we create it\n        // if it didn't exist already...\n        Directory dir = SolrIndexWriter.getDirectory(indexDir, getDirectoryFactory(), solrConfig.mainIndexConfig);\n        if (dir != null)  {\n          if (IndexWriter.isLocked(dir)) {\n            log.warn(logid+\"WARNING: Solr index directory '\" + indexDir+ \"' is locked.  Unlocking...\");\n            IndexWriter.unlock(dir);\n          }\n          dir.close();\n        }\n      }\n\n      // Create the index if it doesn't exist.\n      if(!indexExists) {\n        log.warn(logid+\"Solr index directory '\" + new File(indexDir) + \"' doesn't exist.\"\n                + \" Creating new index...\");\n\n        SolrIndexWriter writer = new SolrIndexWriter(\"SolrCore.initIndex\", indexDir, getDirectoryFactory(), true, schema, solrConfig.mainIndexConfig, solrDelPolicy);\n        writer.close();\n      }\n\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","sourceOld":"  void initIndex() {\n    try {\n\n      initDirectoryFactory();\n      boolean indexExists = getDirectoryFactory().exists(getNewIndexDir());\n      boolean firstTime;\n      synchronized (SolrCore.class) {\n        firstTime = dirs.add(new File(getNewIndexDir()).getCanonicalPath());\n      }\n      boolean removeLocks = solrConfig.unlockOnStartup;\n\n      initIndexReaderFactory();\n\n      if (indexExists && firstTime && removeLocks) {\n        // to remove locks, the directory must already exist... so we create it\n        // if it didn't exist already...\n        Directory dir = SolrIndexWriter.getDirectory(getIndexDir(), getDirectoryFactory(), solrConfig.mainIndexConfig);\n        if (dir != null)  {\n          if (IndexWriter.isLocked(dir)) {\n            log.warn(logid+\"WARNING: Solr index directory '\" + getIndexDir() + \"' is locked.  Unlocking...\");\n            IndexWriter.unlock(dir);\n          }\n          dir.close();\n        }\n      }\n\n      // Create the index if it doesn't exist.\n      if(!indexExists) {\n        log.warn(logid+\"Solr index directory '\" + new File(getNewIndexDir()) + \"' doesn't exist.\"\n                + \" Creating new index...\");\n\n        SolrIndexWriter writer = new SolrIndexWriter(\"SolrCore.initIndex\", getIndexDir(), getDirectoryFactory(), true, schema, solrConfig.mainIndexConfig, solrDelPolicy);\n        writer.close();\n      }\n\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"55688cada84e99928d155229fc2768df65a45bdb","date":1306274128,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/core/SolrCore#initIndex().mjava","pathOld":"solr/src/java/org/apache/solr/core/SolrCore#initIndex().mjava","sourceNew":"  void initIndex() {\n    try {\n      initDirectoryFactory();\n      String indexDir = getNewIndexDir();\n      boolean indexExists = getDirectoryFactory().exists(indexDir);\n      boolean firstTime;\n      synchronized (SolrCore.class) {\n        firstTime = dirs.add(new File(indexDir).getCanonicalPath());\n      }\n      boolean removeLocks = solrConfig.unlockOnStartup;\n\n      initIndexReaderFactory();\n\n      if (indexExists && firstTime && removeLocks) {\n        // to remove locks, the directory must already exist... so we create it\n        // if it didn't exist already...\n        Directory dir = SolrIndexWriter.getDirectory(indexDir, getDirectoryFactory(), solrConfig.mainIndexConfig);\n        if (dir != null)  {\n          if (IndexWriter.isLocked(dir)) {\n            log.warn(logid+\"WARNING: Solr index directory '\" + indexDir+ \"' is locked.  Unlocking...\");\n            IndexWriter.unlock(dir);\n          }\n          dir.close();\n        }\n      }\n\n      // Create the index if it doesn't exist.\n      if(!indexExists) {\n        log.warn(logid+\"Solr index directory '\" + new File(indexDir) + \"' doesn't exist.\"\n                + \" Creating new index...\");\n\n        SolrIndexWriter writer = new SolrIndexWriter(\"SolrCore.initIndex\", indexDir, getDirectoryFactory(), true, schema, solrConfig.mainIndexConfig, solrDelPolicy, codecProvider);\n        writer.close();\n      }\n\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","sourceOld":"  void initIndex() {\n    try {\n      initDirectoryFactory();\n      String indexDir = getNewIndexDir();\n      boolean indexExists = getDirectoryFactory().exists(indexDir);\n      boolean firstTime;\n      synchronized (SolrCore.class) {\n        firstTime = dirs.add(new File(indexDir).getCanonicalPath());\n      }\n      boolean removeLocks = solrConfig.unlockOnStartup;\n\n      initIndexReaderFactory();\n\n      if (indexExists && firstTime && removeLocks) {\n        // to remove locks, the directory must already exist... so we create it\n        // if it didn't exist already...\n        Directory dir = SolrIndexWriter.getDirectory(indexDir, getDirectoryFactory(), solrConfig.mainIndexConfig);\n        if (dir != null)  {\n          if (IndexWriter.isLocked(dir)) {\n            log.warn(logid+\"WARNING: Solr index directory '\" + indexDir+ \"' is locked.  Unlocking...\");\n            IndexWriter.unlock(dir);\n          }\n          dir.close();\n        }\n      }\n\n      // Create the index if it doesn't exist.\n      if(!indexExists) {\n        log.warn(logid+\"Solr index directory '\" + new File(indexDir) + \"' doesn't exist.\"\n                + \" Creating new index...\");\n\n        SolrIndexWriter writer = new SolrIndexWriter(\"SolrCore.initIndex\", indexDir, getDirectoryFactory(), true, schema, solrConfig.mainIndexConfig, solrDelPolicy);\n        writer.close();\n      }\n\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","bugFix":null,"bugIntro":["e22ffe8cc51a892ae103df018822d7873e901c2a","e22ffe8cc51a892ae103df018822d7873e901c2a","e22ffe8cc51a892ae103df018822d7873e901c2a"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/core/SolrCore#initIndex().mjava","pathOld":"solr/src/java/org/apache/solr/core/SolrCore#initIndex().mjava","sourceNew":"  void initIndex() {\n    try {\n      initDirectoryFactory();\n      String indexDir = getNewIndexDir();\n      boolean indexExists = getDirectoryFactory().exists(indexDir);\n      boolean firstTime;\n      synchronized (SolrCore.class) {\n        firstTime = dirs.add(new File(indexDir).getCanonicalPath());\n      }\n      boolean removeLocks = solrConfig.unlockOnStartup;\n\n      initIndexReaderFactory();\n\n      if (indexExists && firstTime && removeLocks) {\n        // to remove locks, the directory must already exist... so we create it\n        // if it didn't exist already...\n        Directory dir = SolrIndexWriter.getDirectory(indexDir, getDirectoryFactory(), solrConfig.mainIndexConfig);\n        if (dir != null)  {\n          if (IndexWriter.isLocked(dir)) {\n            log.warn(logid+\"WARNING: Solr index directory '\" + indexDir+ \"' is locked.  Unlocking...\");\n            IndexWriter.unlock(dir);\n          }\n          dir.close();\n        }\n      }\n\n      // Create the index if it doesn't exist.\n      if(!indexExists) {\n        log.warn(logid+\"Solr index directory '\" + new File(indexDir) + \"' doesn't exist.\"\n                + \" Creating new index...\");\n\n        SolrIndexWriter writer = new SolrIndexWriter(\"SolrCore.initIndex\", indexDir, getDirectoryFactory(), true, schema, solrConfig.mainIndexConfig, solrDelPolicy, codecProvider);\n        writer.close();\n      }\n\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","sourceOld":"  void initIndex() {\n    try {\n      initDirectoryFactory();\n      String indexDir = getNewIndexDir();\n      boolean indexExists = getDirectoryFactory().exists(indexDir);\n      boolean firstTime;\n      synchronized (SolrCore.class) {\n        firstTime = dirs.add(new File(indexDir).getCanonicalPath());\n      }\n      boolean removeLocks = solrConfig.unlockOnStartup;\n\n      initIndexReaderFactory();\n\n      if (indexExists && firstTime && removeLocks) {\n        // to remove locks, the directory must already exist... so we create it\n        // if it didn't exist already...\n        Directory dir = SolrIndexWriter.getDirectory(indexDir, getDirectoryFactory(), solrConfig.mainIndexConfig);\n        if (dir != null)  {\n          if (IndexWriter.isLocked(dir)) {\n            log.warn(logid+\"WARNING: Solr index directory '\" + indexDir+ \"' is locked.  Unlocking...\");\n            IndexWriter.unlock(dir);\n          }\n          dir.close();\n        }\n      }\n\n      // Create the index if it doesn't exist.\n      if(!indexExists) {\n        log.warn(logid+\"Solr index directory '\" + new File(indexDir) + \"' doesn't exist.\"\n                + \" Creating new index...\");\n\n        SolrIndexWriter writer = new SolrIndexWriter(\"SolrCore.initIndex\", indexDir, getDirectoryFactory(), true, schema, solrConfig.mainIndexConfig, solrDelPolicy);\n        writer.close();\n      }\n\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"2e10cb22a8bdb44339e282925a29182bb2f3174d","date":1306841137,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/core/SolrCore#initIndex().mjava","pathOld":"solr/src/java/org/apache/solr/core/SolrCore#initIndex().mjava","sourceNew":"  void initIndex() {\n    try {\n      initDirectoryFactory();\n      String indexDir = getNewIndexDir();\n      boolean indexExists = getDirectoryFactory().exists(indexDir);\n      boolean firstTime;\n      synchronized (SolrCore.class) {\n        firstTime = dirs.add(new File(indexDir).getCanonicalPath());\n      }\n      boolean removeLocks = solrConfig.unlockOnStartup;\n\n      initIndexReaderFactory();\n\n      if (indexExists && firstTime && removeLocks) {\n        // to remove locks, the directory must already exist... so we create it\n        // if it didn't exist already...\n        Directory dir = SolrIndexWriter.getDirectory(indexDir, getDirectoryFactory(), solrConfig.mainIndexConfig);\n        if (dir != null)  {\n          if (IndexWriter.isLocked(dir)) {\n            log.warn(logid+\"WARNING: Solr index directory '\" + indexDir+ \"' is locked.  Unlocking...\");\n            IndexWriter.unlock(dir);\n          }\n          dir.close();\n        }\n      }\n\n      // Create the index if it doesn't exist.\n      if(!indexExists) {\n        log.warn(logid+\"Solr index directory '\" + new File(indexDir) + \"' doesn't exist.\"\n                + \" Creating new index...\");\n\n        SolrIndexWriter writer = new SolrIndexWriter(\"SolrCore.initIndex\", indexDir, getDirectoryFactory(), true, schema, solrConfig.mainIndexConfig, solrDelPolicy, codecProvider);\n        writer.close();\n      }\n\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","sourceOld":"  void initIndex() {\n    try {\n      initDirectoryFactory();\n      String indexDir = getNewIndexDir();\n      boolean indexExists = getDirectoryFactory().exists(indexDir);\n      boolean firstTime;\n      synchronized (SolrCore.class) {\n        firstTime = dirs.add(new File(indexDir).getCanonicalPath());\n      }\n      boolean removeLocks = solrConfig.unlockOnStartup;\n\n      initIndexReaderFactory();\n\n      if (indexExists && firstTime && removeLocks) {\n        // to remove locks, the directory must already exist... so we create it\n        // if it didn't exist already...\n        Directory dir = SolrIndexWriter.getDirectory(indexDir, getDirectoryFactory(), solrConfig.mainIndexConfig);\n        if (dir != null)  {\n          if (IndexWriter.isLocked(dir)) {\n            log.warn(logid+\"WARNING: Solr index directory '\" + indexDir+ \"' is locked.  Unlocking...\");\n            IndexWriter.unlock(dir);\n          }\n          dir.close();\n        }\n      }\n\n      // Create the index if it doesn't exist.\n      if(!indexExists) {\n        log.warn(logid+\"Solr index directory '\" + new File(indexDir) + \"' doesn't exist.\"\n                + \" Creating new index...\");\n\n        SolrIndexWriter writer = new SolrIndexWriter(\"SolrCore.initIndex\", indexDir, getDirectoryFactory(), true, schema, solrConfig.mainIndexConfig, solrDelPolicy);\n        writer.close();\n      }\n\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCore#initIndex().mjava","pathOld":"solr/src/java/org/apache/solr/core/SolrCore#initIndex().mjava","sourceNew":"  void initIndex() {\n    try {\n      initDirectoryFactory();\n      String indexDir = getNewIndexDir();\n      boolean indexExists = getDirectoryFactory().exists(indexDir);\n      boolean firstTime;\n      synchronized (SolrCore.class) {\n        firstTime = dirs.add(new File(indexDir).getCanonicalPath());\n      }\n      boolean removeLocks = solrConfig.unlockOnStartup;\n\n      initIndexReaderFactory();\n\n      if (indexExists && firstTime && removeLocks) {\n        // to remove locks, the directory must already exist... so we create it\n        // if it didn't exist already...\n        Directory dir = SolrIndexWriter.getDirectory(indexDir, getDirectoryFactory(), solrConfig.mainIndexConfig);\n        if (dir != null)  {\n          if (IndexWriter.isLocked(dir)) {\n            log.warn(logid+\"WARNING: Solr index directory '\" + indexDir+ \"' is locked.  Unlocking...\");\n            IndexWriter.unlock(dir);\n          }\n          dir.close();\n        }\n      }\n\n      // Create the index if it doesn't exist.\n      if(!indexExists) {\n        log.warn(logid+\"Solr index directory '\" + new File(indexDir) + \"' doesn't exist.\"\n                + \" Creating new index...\");\n\n        SolrIndexWriter writer = new SolrIndexWriter(\"SolrCore.initIndex\", indexDir, getDirectoryFactory(), true, schema, solrConfig.mainIndexConfig, solrDelPolicy, codecProvider);\n        writer.close();\n      }\n\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","sourceOld":"  void initIndex() {\n    try {\n      initDirectoryFactory();\n      String indexDir = getNewIndexDir();\n      boolean indexExists = getDirectoryFactory().exists(indexDir);\n      boolean firstTime;\n      synchronized (SolrCore.class) {\n        firstTime = dirs.add(new File(indexDir).getCanonicalPath());\n      }\n      boolean removeLocks = solrConfig.unlockOnStartup;\n\n      initIndexReaderFactory();\n\n      if (indexExists && firstTime && removeLocks) {\n        // to remove locks, the directory must already exist... so we create it\n        // if it didn't exist already...\n        Directory dir = SolrIndexWriter.getDirectory(indexDir, getDirectoryFactory(), solrConfig.mainIndexConfig);\n        if (dir != null)  {\n          if (IndexWriter.isLocked(dir)) {\n            log.warn(logid+\"WARNING: Solr index directory '\" + indexDir+ \"' is locked.  Unlocking...\");\n            IndexWriter.unlock(dir);\n          }\n          dir.close();\n        }\n      }\n\n      // Create the index if it doesn't exist.\n      if(!indexExists) {\n        log.warn(logid+\"Solr index directory '\" + new File(indexDir) + \"' doesn't exist.\"\n                + \" Creating new index...\");\n\n        SolrIndexWriter writer = new SolrIndexWriter(\"SolrCore.initIndex\", indexDir, getDirectoryFactory(), true, schema, solrConfig.mainIndexConfig, solrDelPolicy, codecProvider);\n        writer.close();\n      }\n\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCore#initIndex().mjava","pathOld":"solr/src/java/org/apache/solr/core/SolrCore#initIndex().mjava","sourceNew":"  void initIndex() {\n    try {\n      initDirectoryFactory();\n      String indexDir = getNewIndexDir();\n      boolean indexExists = getDirectoryFactory().exists(indexDir);\n      boolean firstTime;\n      synchronized (SolrCore.class) {\n        firstTime = dirs.add(new File(indexDir).getCanonicalPath());\n      }\n      boolean removeLocks = solrConfig.unlockOnStartup;\n\n      initIndexReaderFactory();\n\n      if (indexExists && firstTime && removeLocks) {\n        // to remove locks, the directory must already exist... so we create it\n        // if it didn't exist already...\n        Directory dir = SolrIndexWriter.getDirectory(indexDir, getDirectoryFactory(), solrConfig.mainIndexConfig);\n        if (dir != null)  {\n          if (IndexWriter.isLocked(dir)) {\n            log.warn(logid+\"WARNING: Solr index directory '\" + indexDir+ \"' is locked.  Unlocking...\");\n            IndexWriter.unlock(dir);\n          }\n          dir.close();\n        }\n      }\n\n      // Create the index if it doesn't exist.\n      if(!indexExists) {\n        log.warn(logid+\"Solr index directory '\" + new File(indexDir) + \"' doesn't exist.\"\n                + \" Creating new index...\");\n\n        SolrIndexWriter writer = new SolrIndexWriter(\"SolrCore.initIndex\", indexDir, getDirectoryFactory(), true, schema, solrConfig.mainIndexConfig, solrDelPolicy, codecProvider);\n        writer.close();\n      }\n\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","sourceOld":"  void initIndex() {\n    try {\n      initDirectoryFactory();\n      String indexDir = getNewIndexDir();\n      boolean indexExists = getDirectoryFactory().exists(indexDir);\n      boolean firstTime;\n      synchronized (SolrCore.class) {\n        firstTime = dirs.add(new File(indexDir).getCanonicalPath());\n      }\n      boolean removeLocks = solrConfig.unlockOnStartup;\n\n      initIndexReaderFactory();\n\n      if (indexExists && firstTime && removeLocks) {\n        // to remove locks, the directory must already exist... so we create it\n        // if it didn't exist already...\n        Directory dir = SolrIndexWriter.getDirectory(indexDir, getDirectoryFactory(), solrConfig.mainIndexConfig);\n        if (dir != null)  {\n          if (IndexWriter.isLocked(dir)) {\n            log.warn(logid+\"WARNING: Solr index directory '\" + indexDir+ \"' is locked.  Unlocking...\");\n            IndexWriter.unlock(dir);\n          }\n          dir.close();\n        }\n      }\n\n      // Create the index if it doesn't exist.\n      if(!indexExists) {\n        log.warn(logid+\"Solr index directory '\" + new File(indexDir) + \"' doesn't exist.\"\n                + \" Creating new index...\");\n\n        SolrIndexWriter writer = new SolrIndexWriter(\"SolrCore.initIndex\", indexDir, getDirectoryFactory(), true, schema, solrConfig.mainIndexConfig, solrDelPolicy, codecProvider);\n        writer.close();\n      }\n\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCore#initIndex().mjava","pathOld":"solr/src/java/org/apache/solr/core/SolrCore#initIndex().mjava","sourceNew":"  void initIndex() {\n    try {\n      initDirectoryFactory();\n      String indexDir = getNewIndexDir();\n      boolean indexExists = getDirectoryFactory().exists(indexDir);\n      boolean firstTime;\n      synchronized (SolrCore.class) {\n        firstTime = dirs.add(new File(indexDir).getCanonicalPath());\n      }\n      boolean removeLocks = solrConfig.unlockOnStartup;\n\n      initIndexReaderFactory();\n\n      if (indexExists && firstTime && removeLocks) {\n        // to remove locks, the directory must already exist... so we create it\n        // if it didn't exist already...\n        Directory dir = SolrIndexWriter.getDirectory(indexDir, getDirectoryFactory(), solrConfig.mainIndexConfig);\n        if (dir != null)  {\n          if (IndexWriter.isLocked(dir)) {\n            log.warn(logid+\"WARNING: Solr index directory '\" + indexDir+ \"' is locked.  Unlocking...\");\n            IndexWriter.unlock(dir);\n          }\n          dir.close();\n        }\n      }\n\n      // Create the index if it doesn't exist.\n      if(!indexExists) {\n        log.warn(logid+\"Solr index directory '\" + new File(indexDir) + \"' doesn't exist.\"\n                + \" Creating new index...\");\n\n        SolrIndexWriter writer = new SolrIndexWriter(\"SolrCore.initIndex\", indexDir, getDirectoryFactory(), true, schema, solrConfig.mainIndexConfig, solrDelPolicy, codecProvider);\n        writer.close();\n      }\n\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","sourceOld":"  void initIndex() {\n    try {\n      initDirectoryFactory();\n      String indexDir = getNewIndexDir();\n      boolean indexExists = getDirectoryFactory().exists(indexDir);\n      boolean firstTime;\n      synchronized (SolrCore.class) {\n        firstTime = dirs.add(new File(indexDir).getCanonicalPath());\n      }\n      boolean removeLocks = solrConfig.unlockOnStartup;\n\n      initIndexReaderFactory();\n\n      if (indexExists && firstTime && removeLocks) {\n        // to remove locks, the directory must already exist... so we create it\n        // if it didn't exist already...\n        Directory dir = SolrIndexWriter.getDirectory(indexDir, getDirectoryFactory(), solrConfig.mainIndexConfig);\n        if (dir != null)  {\n          if (IndexWriter.isLocked(dir)) {\n            log.warn(logid+\"WARNING: Solr index directory '\" + indexDir+ \"' is locked.  Unlocking...\");\n            IndexWriter.unlock(dir);\n          }\n          dir.close();\n        }\n      }\n\n      // Create the index if it doesn't exist.\n      if(!indexExists) {\n        log.warn(logid+\"Solr index directory '\" + new File(indexDir) + \"' doesn't exist.\"\n                + \" Creating new index...\");\n\n        SolrIndexWriter writer = new SolrIndexWriter(\"SolrCore.initIndex\", indexDir, getDirectoryFactory(), true, schema, solrConfig.mainIndexConfig, solrDelPolicy, codecProvider);\n        writer.close();\n      }\n\n    } catch (IOException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"ec10d7f440570f813952960ef905138a95114a45":["1da8d55113b689b06716246649de6f62430f15c0"],"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"c26f00b574427b55127e869b935845554afde1fa":["55688cada84e99928d155229fc2768df65a45bdb","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"b12d3e81e0f95a4527b5703953c503f71120ffcc":["ec10d7f440570f813952960ef905138a95114a45","f885550d27f2e8768dae49c3e1adf890f86f7988"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["ec10d7f440570f813952960ef905138a95114a45","f885550d27f2e8768dae49c3e1adf890f86f7988"],"1da8d55113b689b06716246649de6f62430f15c0":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","ad94625fb8d088209f46650c8097196fec67f00c"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["f885550d27f2e8768dae49c3e1adf890f86f7988","55688cada84e99928d155229fc2768df65a45bdb"],"f885550d27f2e8768dae49c3e1adf890f86f7988":["ec10d7f440570f813952960ef905138a95114a45"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["55688cada84e99928d155229fc2768df65a45bdb"],"55688cada84e99928d155229fc2768df65a45bdb":["f885550d27f2e8768dae49c3e1adf890f86f7988"],"ad94625fb8d088209f46650c8097196fec67f00c":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c26f00b574427b55127e869b935845554afde1fa"],"2e10cb22a8bdb44339e282925a29182bb2f3174d":["b12d3e81e0f95a4527b5703953c503f71120ffcc","55688cada84e99928d155229fc2768df65a45bdb"]},"commit2Childs":{"ec10d7f440570f813952960ef905138a95114a45":["b12d3e81e0f95a4527b5703953c503f71120ffcc","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","f885550d27f2e8768dae49c3e1adf890f86f7988"],"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["1da8d55113b689b06716246649de6f62430f15c0"],"c26f00b574427b55127e869b935845554afde1fa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["ad94625fb8d088209f46650c8097196fec67f00c"],"b12d3e81e0f95a4527b5703953c503f71120ffcc":["2e10cb22a8bdb44339e282925a29182bb2f3174d"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"1da8d55113b689b06716246649de6f62430f15c0":["ec10d7f440570f813952960ef905138a95114a45"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"f885550d27f2e8768dae49c3e1adf890f86f7988":["b12d3e81e0f95a4527b5703953c503f71120ffcc","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","55688cada84e99928d155229fc2768df65a45bdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"55688cada84e99928d155229fc2768df65a45bdb":["c26f00b574427b55127e869b935845554afde1fa","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","a258fbb26824fd104ed795e5d9033d2d040049ee","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"ad94625fb8d088209f46650c8097196fec67f00c":["1da8d55113b689b06716246649de6f62430f15c0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"2e10cb22a8bdb44339e282925a29182bb2f3174d":[]},"heads":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}