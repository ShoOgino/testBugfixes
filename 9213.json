{"path":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#defaultCodecSupportsDocsWithField().mjava","commits":[{"id":"d12774649e77a6efccc3502c735c2893b52af6d6","date":1376964312,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#defaultCodecSupportsDocsWithField().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#codecSupportsDocsWithField(String).mjava","sourceNew":"  /** Returns true if the codec \"supports\" docsWithField \n   * (other codecs return MatchAllBits, because you couldnt write missing values before) */\n  public static boolean defaultCodecSupportsDocsWithField() {\n    String name = Codec.getDefault().getName();\n    if (name.equals(\"Lucene40\") || name.equals(\"Lucene41\") || name.equals(\"Lucene42\")) {\n      return false;\n    }\n    return true;\n  }\n\n","sourceOld":"  /** Returns true if the codec for the field \"supports\" docsWithField \n   * (other codecs return MatchAllBits, because you couldnt write missing values before) */\n  public static boolean codecSupportsDocsWithField(String field) {\n    String name = _TestUtil.getDocValuesFormat(Codec.getDefault(), field);\n    if (name.equals(\"Lucene40\") || name.equals(\"Lucene42\")) {\n      return false;\n    }\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff","date":1377034255,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#defaultCodecSupportsDocsWithField().mjava","pathOld":"/dev/null","sourceNew":"  /** Returns true if the codec \"supports\" docsWithField \n   * (other codecs return MatchAllBits, because you couldnt write missing values before) */\n  public static boolean defaultCodecSupportsDocsWithField() {\n    String name = Codec.getDefault().getName();\n    if (name.equals(\"Lucene40\") || name.equals(\"Lucene41\") || name.equals(\"Lucene42\")) {\n      return false;\n    }\n    return true;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3dffec77fb8f7d0e9ca4869dddd6af94528b4576","date":1377875202,"type":0,"author":"Han Jiang","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#defaultCodecSupportsDocsWithField().mjava","pathOld":"/dev/null","sourceNew":"  /** Returns true if the codec \"supports\" docsWithField \n   * (other codecs return MatchAllBits, because you couldnt write missing values before) */\n  public static boolean defaultCodecSupportsDocsWithField() {\n    String name = Codec.getDefault().getName();\n    if (name.equals(\"Lucene40\") || name.equals(\"Lucene41\") || name.equals(\"Lucene42\")) {\n      return false;\n    }\n    return true;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"487204058e79506a6ddba0065cfff810bc15b06a","date":1378216488,"type":5,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#defaultCodecSupportsDocsWithField(String...).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#defaultCodecSupportsDocsWithField().mjava","sourceNew":"  /** Returns true if the codec \"supports\" docsWithField \n   * (other codecs return MatchAllBits, because you couldnt write missing values before) */\n  public static boolean defaultCodecSupportsDocsWithField(String... fields) {\n    String name = Codec.getDefault().getName();\n    if (name.equals(\"Lucene40\") || name.equals(\"Lucene41\") || name.equals(\"Lucene42\")) {\n      return false;\n    }\n    \n    // check that the actual DocValuesFormat for each field supports docsWithField\n    for (String field : fields) {\n      String format = _TestUtil.getDocValuesFormat(field);\n      if (format.equals(\"Lucene40\") || format.equals(\"Lucene41\") || format.equals(\"Lucene42\")) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n","sourceOld":"  /** Returns true if the codec \"supports\" docsWithField \n   * (other codecs return MatchAllBits, because you couldnt write missing values before) */\n  public static boolean defaultCodecSupportsDocsWithField() {\n    String name = Codec.getDefault().getName();\n    if (name.equals(\"Lucene40\") || name.equals(\"Lucene41\") || name.equals(\"Lucene42\")) {\n      return false;\n    }\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"820c994610cafbde5892c00924bdf69fffaaf38f","date":1378227060,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#defaultCodecSupportsDocsWithField().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#defaultCodecSupportsDocsWithField(String...).mjava","sourceNew":"  /** Returns true if the codec \"supports\" docsWithField \n   * (other codecs return MatchAllBits, because you couldnt write missing values before) */\n  public static boolean defaultCodecSupportsDocsWithField() {\n    String name = Codec.getDefault().getName();\n    if (name.equals(\"Lucene40\") || name.equals(\"Lucene41\") || name.equals(\"Lucene42\")) {\n      return false;\n    }\n    return true;\n  }\n\n","sourceOld":"  /** Returns true if the codec \"supports\" docsWithField \n   * (other codecs return MatchAllBits, because you couldnt write missing values before) */\n  public static boolean defaultCodecSupportsDocsWithField(String... fields) {\n    String name = Codec.getDefault().getName();\n    if (name.equals(\"Lucene40\") || name.equals(\"Lucene41\") || name.equals(\"Lucene42\")) {\n      return false;\n    }\n    \n    // check that the actual DocValuesFormat for each field supports docsWithField\n    for (String field : fields) {\n      String format = _TestUtil.getDocValuesFormat(field);\n      if (format.equals(\"Lucene40\") || format.equals(\"Lucene41\") || format.equals(\"Lucene42\")) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad2a673349939e48652bf304cccf673c3412198f","date":1409585169,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BaseDocValuesFormatTestCase#codecSupportsDocsWithField().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#defaultCodecSupportsDocsWithField().mjava","sourceNew":"  /** Returns true if the codec \"supports\" docsWithField \n   * (other codecs return MatchAllBits, because you couldnt write missing values before) */\n  protected boolean codecSupportsDocsWithField() {\n    return true;\n  }\n\n","sourceOld":"  /** Returns true if the codec \"supports\" docsWithField \n   * (other codecs return MatchAllBits, because you couldnt write missing values before) */\n  public static boolean defaultCodecSupportsDocsWithField() {\n    String name = Codec.getDefault().getName();\n    if (name.equals(\"Lucene40\") || name.equals(\"Lucene41\") || name.equals(\"Lucene42\")) {\n      return false;\n    }\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"402ad3ddc9da7b70da1b167667a60ece6a1381fb","date":1409656478,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BaseDocValuesFormatTestCase#codecSupportsDocsWithField().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#defaultCodecSupportsDocsWithField().mjava","sourceNew":"  /** Returns true if the codec \"supports\" docsWithField \n   * (other codecs return MatchAllBits, because you couldnt write missing values before) */\n  protected boolean codecSupportsDocsWithField() {\n    return true;\n  }\n\n","sourceOld":"  /** Returns true if the codec \"supports\" docsWithField \n   * (other codecs return MatchAllBits, because you couldnt write missing values before) */\n  public static boolean defaultCodecSupportsDocsWithField() {\n    String name = Codec.getDefault().getName();\n    if (name.equals(\"Lucene40\") || name.equals(\"Lucene41\") || name.equals(\"Lucene42\")) {\n      return false;\n    }\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"487204058e79506a6ddba0065cfff810bc15b06a":["e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff"],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"820c994610cafbde5892c00924bdf69fffaaf38f":["487204058e79506a6ddba0065cfff810bc15b06a"],"d12774649e77a6efccc3502c735c2893b52af6d6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","d12774649e77a6efccc3502c735c2893b52af6d6"],"ad2a673349939e48652bf304cccf673c3412198f":["820c994610cafbde5892c00924bdf69fffaaf38f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"402ad3ddc9da7b70da1b167667a60ece6a1381fb":["820c994610cafbde5892c00924bdf69fffaaf38f","ad2a673349939e48652bf304cccf673c3412198f"]},"commit2Childs":{"487204058e79506a6ddba0065cfff810bc15b06a":["820c994610cafbde5892c00924bdf69fffaaf38f"],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","d12774649e77a6efccc3502c735c2893b52af6d6","e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff"],"820c994610cafbde5892c00924bdf69fffaaf38f":["ad2a673349939e48652bf304cccf673c3412198f","402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"d12774649e77a6efccc3502c735c2893b52af6d6":["e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff"],"e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff":["487204058e79506a6ddba0065cfff810bc15b06a","3dffec77fb8f7d0e9ca4869dddd6af94528b4576"],"ad2a673349939e48652bf304cccf673c3412198f":["402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"402ad3ddc9da7b70da1b167667a60ece6a1381fb":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}