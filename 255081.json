{"path":"solr/test-framework/src/java/org/apache/solr/cloud/StoppableCommitThread#run().mjava","commits":[{"id":"61c45e99cf6676da48f19d7511c73712ad39402b","date":1495508331,"type":0,"author":"Tomas Fernandez Lobbe","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/StoppableCommitThread#run().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void run() {\n    log.debug(\"StoppableCommitThread started\");\n    while (!stop) {\n      try {\n        cloudClient.commit(false, false, softCommits);\n        numCommits.incrementAndGet();\n      } catch (Exception e) {\n        numFails.incrementAndGet();\n      }\n      try {\n        Thread.sleep(timeBetweenCommitsMs);\n      } catch (InterruptedException e) {\n        Thread.currentThread().interrupt();\n        break;\n      }\n    }\n    log.debug(\"StoppableCommitThread finished. Committed {} times. Failed {} times.\", numCommits.get(), numFails.get());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":0,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/StoppableCommitThread#run().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void run() {\n    log.debug(\"StoppableCommitThread started\");\n    while (!stop) {\n      try {\n        cloudClient.commit(false, false, softCommits);\n        numCommits.incrementAndGet();\n      } catch (Exception e) {\n        numFails.incrementAndGet();\n      }\n      try {\n        Thread.sleep(timeBetweenCommitsMs);\n      } catch (InterruptedException e) {\n        Thread.currentThread().interrupt();\n        break;\n      }\n    }\n    log.debug(\"StoppableCommitThread finished. Committed {} times. Failed {} times.\", numCommits.get(), numFails.get());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"73a4df49bbf08e66754aaad0861f9627c0276cc2","date":1496792409,"type":3,"author":"Tomas Fernandez Lobbe","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/StoppableCommitThread#run().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/StoppableCommitThread#run().mjava","sourceNew":"  @Override\n  public void run() {\n    log.debug(\"StoppableCommitThread started\");\n    while (!stop) {\n      try {\n        cloudClient.commit(false, false, softCommits);\n        numCommits.incrementAndGet();\n      } catch (Exception e) {\n        numFails.incrementAndGet();\n      }\n      try {\n        Thread.sleep(timeBetweenCommitsMs);\n      } catch (InterruptedException e) {\n        Thread.currentThread().interrupt();\n        break;\n      }\n    }\n    log.info(\"StoppableCommitThread finished. Committed {} times. Failed {} times.\", numCommits.get(), numFails.get());\n  }\n\n","sourceOld":"  @Override\n  public void run() {\n    log.debug(\"StoppableCommitThread started\");\n    while (!stop) {\n      try {\n        cloudClient.commit(false, false, softCommits);\n        numCommits.incrementAndGet();\n      } catch (Exception e) {\n        numFails.incrementAndGet();\n      }\n      try {\n        Thread.sleep(timeBetweenCommitsMs);\n      } catch (InterruptedException e) {\n        Thread.currentThread().interrupt();\n        break;\n      }\n    }\n    log.debug(\"StoppableCommitThread finished. Committed {} times. Failed {} times.\", numCommits.get(), numFails.get());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f344bb33ca91f48e99c061980115b46fa84fc8f5","date":1496903283,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/StoppableCommitThread#run().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/StoppableCommitThread#run().mjava","sourceNew":"  @Override\n  public void run() {\n    log.debug(\"StoppableCommitThread started\");\n    while (!stop) {\n      try {\n        cloudClient.commit(false, false, softCommits);\n        numCommits.incrementAndGet();\n      } catch (Exception e) {\n        numFails.incrementAndGet();\n      }\n      try {\n        Thread.sleep(timeBetweenCommitsMs);\n      } catch (InterruptedException e) {\n        Thread.currentThread().interrupt();\n        break;\n      }\n    }\n    log.info(\"StoppableCommitThread finished. Committed {} times. Failed {} times.\", numCommits.get(), numFails.get());\n  }\n\n","sourceOld":"  @Override\n  public void run() {\n    log.debug(\"StoppableCommitThread started\");\n    while (!stop) {\n      try {\n        cloudClient.commit(false, false, softCommits);\n        numCommits.incrementAndGet();\n      } catch (Exception e) {\n        numFails.incrementAndGet();\n      }\n      try {\n        Thread.sleep(timeBetweenCommitsMs);\n      } catch (InterruptedException e) {\n        Thread.currentThread().interrupt();\n        break;\n      }\n    }\n    log.debug(\"StoppableCommitThread finished. Committed {} times. Failed {} times.\", numCommits.get(), numFails.get());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","date":1498028748,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/StoppableCommitThread#run().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/StoppableCommitThread#run().mjava","sourceNew":"  @Override\n  public void run() {\n    log.debug(\"StoppableCommitThread started\");\n    while (!stop) {\n      try {\n        cloudClient.commit(false, false, softCommits);\n        numCommits.incrementAndGet();\n      } catch (Exception e) {\n        numFails.incrementAndGet();\n      }\n      try {\n        Thread.sleep(timeBetweenCommitsMs);\n      } catch (InterruptedException e) {\n        Thread.currentThread().interrupt();\n        break;\n      }\n    }\n    log.info(\"StoppableCommitThread finished. Committed {} times. Failed {} times.\", numCommits.get(), numFails.get());\n  }\n\n","sourceOld":"  @Override\n  public void run() {\n    log.debug(\"StoppableCommitThread started\");\n    while (!stop) {\n      try {\n        cloudClient.commit(false, false, softCommits);\n        numCommits.incrementAndGet();\n      } catch (Exception e) {\n        numFails.incrementAndGet();\n      }\n      try {\n        Thread.sleep(timeBetweenCommitsMs);\n      } catch (InterruptedException e) {\n        Thread.currentThread().interrupt();\n        break;\n      }\n    }\n    log.debug(\"StoppableCommitThread finished. Committed {} times. Failed {} times.\", numCommits.get(), numFails.get());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/StoppableCommitThread#run().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/StoppableCommitThread#run().mjava","sourceNew":"  @Override\n  public void run() {\n    log.debug(\"StoppableCommitThread started\");\n    while (!stop) {\n      try {\n        cloudClient.commit(false, false, softCommits);\n        numCommits.incrementAndGet();\n      } catch (Exception e) {\n        numFails.incrementAndGet();\n      }\n      try {\n        Thread.sleep(timeBetweenCommitsMs);\n      } catch (InterruptedException e) {\n        Thread.currentThread().interrupt();\n        break;\n      }\n    }\n    log.info(\"StoppableCommitThread finished. Committed {} times. Failed {} times.\", numCommits.get(), numFails.get());\n  }\n\n","sourceOld":"  @Override\n  public void run() {\n    log.debug(\"StoppableCommitThread started\");\n    while (!stop) {\n      try {\n        cloudClient.commit(false, false, softCommits);\n        numCommits.incrementAndGet();\n      } catch (Exception e) {\n        numFails.incrementAndGet();\n      }\n      try {\n        Thread.sleep(timeBetweenCommitsMs);\n      } catch (InterruptedException e) {\n        Thread.currentThread().interrupt();\n        break;\n      }\n    }\n    log.debug(\"StoppableCommitThread finished. Committed {} times. Failed {} times.\", numCommits.get(), numFails.get());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a966532d92cf9ba2856f15a8140151bb6b518e4b","date":1588290631,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/StoppableCommitThread#run().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/StoppableCommitThread#run().mjava","sourceNew":"  @Override\n  public void run() {\n    log.debug(\"StoppableCommitThread started\");\n    while (!stop) {\n      try {\n        cloudClient.commit(false, false, softCommits);\n        numCommits.incrementAndGet();\n      } catch (Exception e) {\n        numFails.incrementAndGet();\n      }\n      try {\n        Thread.sleep(timeBetweenCommitsMs);\n      } catch (InterruptedException e) {\n        Thread.currentThread().interrupt();\n        break;\n      }\n    }\n    if (log.isInfoEnabled()) {\n      log.info(\"StoppableCommitThread finished. Committed {} times. Failed {} times.\", numCommits.get(), numFails.get());\n    }\n  }\n\n","sourceOld":"  @Override\n  public void run() {\n    log.debug(\"StoppableCommitThread started\");\n    while (!stop) {\n      try {\n        cloudClient.commit(false, false, softCommits);\n        numCommits.incrementAndGet();\n      } catch (Exception e) {\n        numFails.incrementAndGet();\n      }\n      try {\n        Thread.sleep(timeBetweenCommitsMs);\n      } catch (InterruptedException e) {\n        Thread.currentThread().interrupt();\n        break;\n      }\n    }\n    log.info(\"StoppableCommitThread finished. Committed {} times. Failed {} times.\", numCommits.get(), numFails.get());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e9017cf144952056066919f1ebc7897ff9bd71b1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","61c45e99cf6676da48f19d7511c73712ad39402b"],"61c45e99cf6676da48f19d7511c73712ad39402b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f344bb33ca91f48e99c061980115b46fa84fc8f5":["61c45e99cf6676da48f19d7511c73712ad39402b","73a4df49bbf08e66754aaad0861f9627c0276cc2"],"73a4df49bbf08e66754aaad0861f9627c0276cc2":["61c45e99cf6676da48f19d7511c73712ad39402b"],"a966532d92cf9ba2856f15a8140151bb6b518e4b":["28288370235ed02234a64753cdbf0c6ec096304a"],"28288370235ed02234a64753cdbf0c6ec096304a":["61c45e99cf6676da48f19d7511c73712ad39402b","f344bb33ca91f48e99c061980115b46fa84fc8f5"],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":["e9017cf144952056066919f1ebc7897ff9bd71b1","f344bb33ca91f48e99c061980115b46fa84fc8f5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a966532d92cf9ba2856f15a8140151bb6b518e4b"]},"commit2Childs":{"e9017cf144952056066919f1ebc7897ff9bd71b1":["2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9"],"61c45e99cf6676da48f19d7511c73712ad39402b":["e9017cf144952056066919f1ebc7897ff9bd71b1","f344bb33ca91f48e99c061980115b46fa84fc8f5","73a4df49bbf08e66754aaad0861f9627c0276cc2","28288370235ed02234a64753cdbf0c6ec096304a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e9017cf144952056066919f1ebc7897ff9bd71b1","61c45e99cf6676da48f19d7511c73712ad39402b"],"f344bb33ca91f48e99c061980115b46fa84fc8f5":["28288370235ed02234a64753cdbf0c6ec096304a","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9"],"73a4df49bbf08e66754aaad0861f9627c0276cc2":["f344bb33ca91f48e99c061980115b46fa84fc8f5"],"a966532d92cf9ba2856f15a8140151bb6b518e4b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"28288370235ed02234a64753cdbf0c6ec096304a":["a966532d92cf9ba2856f15a8140151bb6b518e4b"],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}