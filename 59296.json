{"path":"lucene/core/src/test/org/apache/lucene/search/TestTopDocsCollector#testSharedCountCollectorManager().mjava","commits":[{"id":"e19eef45a852c3316ae52fdf941731448ece967a","date":1567670879,"type":0,"author":"Atri Sharma","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestTopDocsCollector#testSharedCountCollectorManager().mjava","pathOld":"/dev/null","sourceNew":"  public void testSharedCountCollectorManager() throws Exception {\n    Query q = new MatchAllDocsQuery();\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig().setMergePolicy(NoMergePolicy.INSTANCE));\n    Document doc = new Document();\n    w.addDocuments(Arrays.asList(doc, doc, doc, doc));\n    w.flush();\n    w.addDocuments(Arrays.asList(doc, doc));\n    w.flush();\n    IndexReader reader = DirectoryReader.open(w);\n    assertEquals(2, reader.leaves().size());\n    w.close();\n\n    TopDocsCollector collector = doSearchWithThreshold(5, 10);\n    TopDocs tdc = doConcurrentSearchWithThreshold(5, 10);\n    TopDocs tdc2 = collector.topDocs();\n\n    CheckHits.checkEqual(q, tdc.scoreDocs, tdc2.scoreDocs);\n\n    reader.close();\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"09bee0b4882762434fd0b5095fc34ee6058442e1","date":1569398789,"type":3,"author":"Atri Sharma","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestTopDocsCollector#testSharedCountCollectorManager().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestTopDocsCollector#testSharedCountCollectorManager().mjava","sourceNew":"  public void testSharedCountCollectorManager() throws Exception {\n    Query q = new MatchAllDocsQuery();\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig().setMergePolicy(NoMergePolicy.INSTANCE));\n    Document doc = new Document();\n    w.addDocuments(Arrays.asList(doc, doc, doc, doc));\n    w.flush();\n    w.addDocuments(Arrays.asList(doc, doc));\n    w.flush();\n    IndexReader reader = DirectoryReader.open(w);\n    assertEquals(2, reader.leaves().size());\n    w.close();\n\n    TopDocsCollector collector = doSearchWithThreshold(5, 10);\n    TopDocs tdc = doConcurrentSearchWithThreshold(5, 10, reader);\n    TopDocs tdc2 = collector.topDocs();\n\n    CheckHits.checkEqual(q, tdc.scoreDocs, tdc2.scoreDocs);\n\n    reader.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testSharedCountCollectorManager() throws Exception {\n    Query q = new MatchAllDocsQuery();\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig().setMergePolicy(NoMergePolicy.INSTANCE));\n    Document doc = new Document();\n    w.addDocuments(Arrays.asList(doc, doc, doc, doc));\n    w.flush();\n    w.addDocuments(Arrays.asList(doc, doc));\n    w.flush();\n    IndexReader reader = DirectoryReader.open(w);\n    assertEquals(2, reader.leaves().size());\n    w.close();\n\n    TopDocsCollector collector = doSearchWithThreshold(5, 10);\n    TopDocs tdc = doConcurrentSearchWithThreshold(5, 10);\n    TopDocs tdc2 = collector.topDocs();\n\n    CheckHits.checkEqual(q, tdc.scoreDocs, tdc2.scoreDocs);\n\n    reader.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"32dc2e73f68d239029f9fe76729eda505b75bb6e","date":1569593453,"type":3,"author":"jimczi","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestTopDocsCollector#testSharedCountCollectorManager().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestTopDocsCollector#testSharedCountCollectorManager().mjava","sourceNew":"  public void testSharedCountCollectorManager() throws Exception {\n    Query q = new MatchAllDocsQuery();\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig().setMergePolicy(NoMergePolicy.INSTANCE));\n    Document doc = new Document();\n    w.addDocuments(Arrays.asList(doc, doc, doc, doc));\n    w.flush();\n    w.addDocuments(Arrays.asList(doc, doc));\n    w.flush();\n    IndexReader reader = DirectoryReader.open(w);\n    assertEquals(2, reader.leaves().size());\n    w.close();\n\n    TopDocsCollector collector = doSearchWithThreshold( 5, 10, q, reader);\n    TopDocs tdc = doConcurrentSearchWithThreshold(5, 10, q, reader);\n    TopDocs tdc2 = collector.topDocs();\n\n    CheckHits.checkEqual(q, tdc.scoreDocs, tdc2.scoreDocs);\n\n    reader.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testSharedCountCollectorManager() throws Exception {\n    Query q = new MatchAllDocsQuery();\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig().setMergePolicy(NoMergePolicy.INSTANCE));\n    Document doc = new Document();\n    w.addDocuments(Arrays.asList(doc, doc, doc, doc));\n    w.flush();\n    w.addDocuments(Arrays.asList(doc, doc));\n    w.flush();\n    IndexReader reader = DirectoryReader.open(w);\n    assertEquals(2, reader.leaves().size());\n    w.close();\n\n    TopDocsCollector collector = doSearchWithThreshold(5, 10);\n    TopDocs tdc = doConcurrentSearchWithThreshold(5, 10, reader);\n    TopDocs tdc2 = collector.topDocs();\n\n    CheckHits.checkEqual(q, tdc.scoreDocs, tdc2.scoreDocs);\n\n    reader.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3fc6bc0fbd97ca2f45fd376fa8e733728e665c4f","date":1571662992,"type":3,"author":"Jim Ferenczi","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestTopDocsCollector#testSharedCountCollectorManager().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestTopDocsCollector#testSharedCountCollectorManager().mjava","sourceNew":"  public void testSharedCountCollectorManager() throws Exception {\n    Query q = new MatchAllDocsQuery();\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig().setMergePolicy(NoMergePolicy.INSTANCE));\n    Document doc = new Document();\n    w.addDocuments(Arrays.asList(doc, doc, doc, doc));\n    w.flush();\n    w.addDocuments(Arrays.asList(doc, doc));\n    w.flush();\n    IndexReader reader = DirectoryReader.open(w);\n    assertEquals(2, reader.leaves().size());\n    w.close();\n\n    TopDocsCollector collector = doSearchWithThreshold( 5, 10, q, reader);\n    TopDocs tdc = doConcurrentSearchWithThreshold(5, 10, q, reader);\n    TopDocs tdc2 = collector.topDocs();\n\n    CheckHits.checkEqual(q, tdc.scoreDocs, tdc2.scoreDocs);\n\n    reader.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testSharedCountCollectorManager() throws Exception {\n    Query q = new MatchAllDocsQuery();\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig().setMergePolicy(NoMergePolicy.INSTANCE));\n    Document doc = new Document();\n    w.addDocuments(Arrays.asList(doc, doc, doc, doc));\n    w.flush();\n    w.addDocuments(Arrays.asList(doc, doc));\n    w.flush();\n    IndexReader reader = DirectoryReader.open(w);\n    assertEquals(2, reader.leaves().size());\n    w.close();\n\n    TopDocsCollector collector = doSearchWithThreshold(5, 10);\n    TopDocs tdc = doConcurrentSearchWithThreshold(5, 10, reader);\n    TopDocs tdc2 = collector.topDocs();\n\n    CheckHits.checkEqual(q, tdc.scoreDocs, tdc2.scoreDocs);\n\n    reader.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"30c21918ef3ad23e254f39cb0cd6c86851fcb993","date":1580123310,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestTopDocsCollector#testSharedCountCollectorManager().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestTopDocsCollector#testSharedCountCollectorManager().mjava","sourceNew":"  public void testSharedCountCollectorManager() throws Exception {\n    Query q = new MatchAllDocsQuery();\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig().setMergePolicy(NoMergePolicy.INSTANCE));\n    Document doc = new Document();\n    w.addDocuments(Arrays.asList(doc, doc, doc, doc));\n    w.flush();\n    w.addDocuments(Arrays.asList(doc, doc));\n    w.flush();\n    IndexReader reader = DirectoryReader.open(w);\n    assertEquals(2, reader.leaves().size());\n    w.close();\n\n    TopDocsCollector<ScoreDoc> collector = doSearchWithThreshold( 5, 10, q, reader);\n    TopDocs tdc = doConcurrentSearchWithThreshold(5, 10, q, reader);\n    TopDocs tdc2 = collector.topDocs();\n\n    CheckHits.checkEqual(q, tdc.scoreDocs, tdc2.scoreDocs);\n\n    reader.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testSharedCountCollectorManager() throws Exception {\n    Query q = new MatchAllDocsQuery();\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig().setMergePolicy(NoMergePolicy.INSTANCE));\n    Document doc = new Document();\n    w.addDocuments(Arrays.asList(doc, doc, doc, doc));\n    w.flush();\n    w.addDocuments(Arrays.asList(doc, doc));\n    w.flush();\n    IndexReader reader = DirectoryReader.open(w);\n    assertEquals(2, reader.leaves().size());\n    w.close();\n\n    TopDocsCollector collector = doSearchWithThreshold( 5, 10, q, reader);\n    TopDocs tdc = doConcurrentSearchWithThreshold(5, 10, q, reader);\n    TopDocs tdc2 = collector.topDocs();\n\n    CheckHits.checkEqual(q, tdc.scoreDocs, tdc2.scoreDocs);\n\n    reader.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e19eef45a852c3316ae52fdf941731448ece967a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3fc6bc0fbd97ca2f45fd376fa8e733728e665c4f":["09bee0b4882762434fd0b5095fc34ee6058442e1","32dc2e73f68d239029f9fe76729eda505b75bb6e"],"32dc2e73f68d239029f9fe76729eda505b75bb6e":["09bee0b4882762434fd0b5095fc34ee6058442e1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"30c21918ef3ad23e254f39cb0cd6c86851fcb993":["3fc6bc0fbd97ca2f45fd376fa8e733728e665c4f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["30c21918ef3ad23e254f39cb0cd6c86851fcb993"],"09bee0b4882762434fd0b5095fc34ee6058442e1":["e19eef45a852c3316ae52fdf941731448ece967a"]},"commit2Childs":{"e19eef45a852c3316ae52fdf941731448ece967a":["09bee0b4882762434fd0b5095fc34ee6058442e1"],"3fc6bc0fbd97ca2f45fd376fa8e733728e665c4f":["30c21918ef3ad23e254f39cb0cd6c86851fcb993"],"32dc2e73f68d239029f9fe76729eda505b75bb6e":["3fc6bc0fbd97ca2f45fd376fa8e733728e665c4f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e19eef45a852c3316ae52fdf941731448ece967a"],"30c21918ef3ad23e254f39cb0cd6c86851fcb993":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"09bee0b4882762434fd0b5095fc34ee6058442e1":["3fc6bc0fbd97ca2f45fd376fa8e733728e665c4f","32dc2e73f68d239029f9fe76729eda505b75bb6e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}