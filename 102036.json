{"path":"lucene/contrib/instantiated/src/java/org/apache/lucene/store/instantiated/FieldSettings#merge(FieldSetting).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/instantiated/src/java/org/apache/lucene/store/instantiated/FieldSettings#merge(FieldSetting).mjava","pathOld":"contrib/instantiated/src/java/org/apache/lucene/store/instantiated/FieldSettings#merge(FieldSetting).mjava","sourceNew":"  synchronized FieldSetting merge(FieldSetting fieldSetting) {\n    FieldSetting setting = fieldSettings.get(fieldSetting.fieldName);\n\n    if (setting == null) {\n      setting = new FieldSetting(fieldSetting.fieldName);\n      fieldSettings.put(fieldSetting.fieldName, setting);\n    }\n\n    if (fieldSetting.stored) {\n      setting.stored = true;\n    }\n\n    if (\"b3\".equals(fieldSetting.fieldName)) {\n      System.currentTimeMillis();\n    }\n    if (fieldSetting.indexed) {\n      setting.indexed = true;\n    }\n    if (fieldSetting.tokenized) {\n      setting.tokenized = true;\n    }\n\n    if (fieldSetting.storeTermVector) {\n      setting.storeTermVector = true;\n    }\n    if (fieldSetting.storeOffsetWithTermVector) {\n      setting.storeOffsetWithTermVector = true;\n    }\n    if (fieldSetting.storePositionWithTermVector) {\n      setting.storePositionWithTermVector = true;\n    }\n\n    if (fieldSetting.storePayloads) {\n      setting.storePayloads = true;\n    }\n\n    return setting;\n\n  }\n\n","sourceOld":"  synchronized FieldSetting merge(FieldSetting fieldSetting) {\n    FieldSetting setting = fieldSettings.get(fieldSetting.fieldName);\n\n    if (setting == null) {\n      setting = new FieldSetting(fieldSetting.fieldName);\n      fieldSettings.put(fieldSetting.fieldName, setting);\n    }\n\n    if (fieldSetting.stored) {\n      setting.stored = true;\n    }\n\n    if (\"b3\".equals(fieldSetting.fieldName)) {\n      System.currentTimeMillis();\n    }\n    if (fieldSetting.indexed) {\n      setting.indexed = true;\n    }\n    if (fieldSetting.tokenized) {\n      setting.tokenized = true;\n    }\n\n    if (fieldSetting.storeTermVector) {\n      setting.storeTermVector = true;\n    }\n    if (fieldSetting.storeOffsetWithTermVector) {\n      setting.storeOffsetWithTermVector = true;\n    }\n    if (fieldSetting.storePositionWithTermVector) {\n      setting.storePositionWithTermVector = true;\n    }\n\n    if (fieldSetting.storePayloads) {\n      setting.storePayloads = true;\n    }\n\n    return setting;\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cc749c053615f5871f3b95715fe292f34e70a53","date":1321470575,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/contrib/instantiated/src/java/org/apache/lucene/store/instantiated/FieldSettings#merge(FieldSetting).mjava","sourceNew":null,"sourceOld":"  synchronized FieldSetting merge(FieldSetting fieldSetting) {\n    FieldSetting setting = fieldSettings.get(fieldSetting.fieldName);\n\n    if (setting == null) {\n      setting = new FieldSetting(fieldSetting.fieldName);\n      fieldSettings.put(fieldSetting.fieldName, setting);\n    }\n\n    if (fieldSetting.stored) {\n      setting.stored = true;\n    }\n\n    if (\"b3\".equals(fieldSetting.fieldName)) {\n      System.currentTimeMillis();\n    }\n    if (fieldSetting.indexed) {\n      setting.indexed = true;\n    }\n    if (fieldSetting.tokenized) {\n      setting.tokenized = true;\n    }\n\n    if (fieldSetting.storeTermVector) {\n      setting.storeTermVector = true;\n    }\n    if (fieldSetting.storeOffsetWithTermVector) {\n      setting.storeOffsetWithTermVector = true;\n    }\n    if (fieldSetting.storePositionWithTermVector) {\n      setting.storePositionWithTermVector = true;\n    }\n\n    if (fieldSetting.storePayloads) {\n      setting.storePayloads = true;\n    }\n\n    return setting;\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cc749c053615f5871f3b95715fe292f34e70a53":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3cc749c053615f5871f3b95715fe292f34e70a53"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"3cc749c053615f5871f3b95715fe292f34e70a53":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["3cc749c053615f5871f3b95715fe292f34e70a53"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}