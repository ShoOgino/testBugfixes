{"path":"lucene/misc/src/test/org/apache/lucene/document/TestLazyDocument.LazyTestingStoredFieldVisitor#stringField(FieldInfo,byte[]).mjava","commits":[{"id":"399d127639ae13222a8545b50e0ac545a6bcd2d7","date":1428704686,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/misc/src/test/org/apache/lucene/document/TestLazyDocument.LazyTestingStoredFieldVisitor#stringField(FieldInfo,byte[]).mjava","pathOld":"lucene/misc/src/test/org/apache/lucene/document/TestLazyDocument.LazyTestingStoredFieldVisitor#stringField(FieldInfo,String).mjava","sourceNew":"    @Override\n    public void stringField(FieldInfo fieldInfo, byte[] bytes) throws IOException {\n      String value = new String(bytes, StandardCharsets.UTF_8);\n      final FieldType ft = new FieldType(TextField.TYPE_STORED);\n      ft.setStoreTermVectors(fieldInfo.hasVectors());\n      ft.setOmitNorms(fieldInfo.omitsNorms());\n      ft.setIndexOptions(fieldInfo.getIndexOptions());\n      doc.add(new Field(fieldInfo.name, value, ft));\n    }\n\n","sourceOld":"    @Override\n    public void stringField(FieldInfo fieldInfo, String value) throws IOException {\n      final FieldType ft = new FieldType(TextField.TYPE_STORED);\n      ft.setStoreTermVectors(fieldInfo.hasVectors());\n      ft.setOmitNorms(fieldInfo.omitsNorms());\n      ft.setIndexOptions(fieldInfo.getIndexOptions());\n      doc.add(new Field(fieldInfo.name, value, ft));\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"500188ac33da6ce742a5b18858f34701ef16c77a","date":1558462722,"type":5,"author":"Namgyu Kim","isMerge":false,"pathNew":"lucene/misc/src/test/org/apache/lucene/document/TestLazyDocument.LazyTestingStoredFieldVisitor#stringField(FieldInfo,String).mjava","pathOld":"lucene/misc/src/test/org/apache/lucene/document/TestLazyDocument.LazyTestingStoredFieldVisitor#stringField(FieldInfo,byte[]).mjava","sourceNew":"    @Override\n    public void stringField(FieldInfo fieldInfo, String value) throws IOException {\n      final FieldType ft = new FieldType(TextField.TYPE_STORED);\n      ft.setStoreTermVectors(fieldInfo.hasVectors());\n      ft.setOmitNorms(fieldInfo.omitsNorms());\n      ft.setIndexOptions(fieldInfo.getIndexOptions());\n      Objects.requireNonNull(value, \"String value should not be null\");\n      doc.add(new Field(fieldInfo.name, value, ft));\n    }\n\n","sourceOld":"    @Override\n    public void stringField(FieldInfo fieldInfo, byte[] bytes) throws IOException {\n      String value = new String(bytes, StandardCharsets.UTF_8);\n      final FieldType ft = new FieldType(TextField.TYPE_STORED);\n      ft.setStoreTermVectors(fieldInfo.hasVectors());\n      ft.setOmitNorms(fieldInfo.omitsNorms());\n      ft.setIndexOptions(fieldInfo.getIndexOptions());\n      doc.add(new Field(fieldInfo.name, value, ft));\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"500188ac33da6ce742a5b18858f34701ef16c77a":["399d127639ae13222a8545b50e0ac545a6bcd2d7"],"399d127639ae13222a8545b50e0ac545a6bcd2d7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["500188ac33da6ce742a5b18858f34701ef16c77a"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["399d127639ae13222a8545b50e0ac545a6bcd2d7"],"500188ac33da6ce742a5b18858f34701ef16c77a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"399d127639ae13222a8545b50e0ac545a6bcd2d7":["500188ac33da6ce742a5b18858f34701ef16c77a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}