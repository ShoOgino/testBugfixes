{"path":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#assertDocValuesEquals(String,IndexReader,IndexReader).mjava","commits":[{"id":"51c8450b3b616b6777f722ff4083c0bf946381a2","date":1363812022,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#assertDocValuesEquals(String,IndexReader,IndexReader).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDuelingCodecs#assertDocValues(IndexReader,IndexReader).mjava","sourceNew":"  /**\n   * checks that docvalues across all fields are equivalent\n   */\n  public void assertDocValuesEquals(String info, IndexReader leftReader, IndexReader rightReader) throws IOException {\n    Set<String> leftFields = getDVFields(leftReader);\n    Set<String> rightFields = getDVFields(rightReader);\n    assertEquals(info, leftFields, rightFields);\n\n    for (String field : leftFields) {\n      // TODO: clean this up... very messy\n      {\n        NumericDocValues leftValues = MultiDocValues.getNumericValues(leftReader, field);\n        NumericDocValues rightValues = MultiDocValues.getNumericValues(rightReader, field);\n        if (leftValues != null && rightValues != null) {\n          assertDocValuesEquals(info, leftReader.maxDoc(), leftValues, rightValues);\n        } else {\n          assertNull(info, leftValues);\n          assertNull(info, rightValues);\n        }\n      }\n\n      {\n        BinaryDocValues leftValues = MultiDocValues.getBinaryValues(leftReader, field);\n        BinaryDocValues rightValues = MultiDocValues.getBinaryValues(rightReader, field);\n        if (leftValues != null && rightValues != null) {\n          BytesRef scratchLeft = new BytesRef();\n          BytesRef scratchRight = new BytesRef();\n          for(int docID=0;docID<leftReader.maxDoc();docID++) {\n            leftValues.get(docID, scratchLeft);\n            rightValues.get(docID, scratchRight);\n            assertEquals(info, scratchLeft, scratchRight);\n          }\n        } else {\n          assertNull(info, leftValues);\n          assertNull(info, rightValues);\n        }\n      }\n      \n      {\n        SortedDocValues leftValues = MultiDocValues.getSortedValues(leftReader, field);\n        SortedDocValues rightValues = MultiDocValues.getSortedValues(rightReader, field);\n        if (leftValues != null && rightValues != null) {\n          // numOrds\n          assertEquals(info, leftValues.getValueCount(), rightValues.getValueCount());\n          // ords\n          BytesRef scratchLeft = new BytesRef();\n          BytesRef scratchRight = new BytesRef();\n          for (int i = 0; i < leftValues.getValueCount(); i++) {\n            leftValues.lookupOrd(i, scratchLeft);\n            rightValues.lookupOrd(i, scratchRight);\n            assertEquals(info, scratchLeft, scratchRight);\n          }\n          // bytes\n          for(int docID=0;docID<leftReader.maxDoc();docID++) {\n            leftValues.get(docID, scratchLeft);\n            rightValues.get(docID, scratchRight);\n            assertEquals(info, scratchLeft, scratchRight);\n          }\n        } else {\n          assertNull(info, leftValues);\n          assertNull(info, rightValues);\n        }\n      }\n      \n      {\n        SortedSetDocValues leftValues = MultiDocValues.getSortedSetValues(leftReader, field);\n        SortedSetDocValues rightValues = MultiDocValues.getSortedSetValues(rightReader, field);\n        if (leftValues != null && rightValues != null) {\n          // numOrds\n          assertEquals(info, leftValues.getValueCount(), rightValues.getValueCount());\n          // ords\n          BytesRef scratchLeft = new BytesRef();\n          BytesRef scratchRight = new BytesRef();\n          for (int i = 0; i < leftValues.getValueCount(); i++) {\n            leftValues.lookupOrd(i, scratchLeft);\n            rightValues.lookupOrd(i, scratchRight);\n            assertEquals(info, scratchLeft, scratchRight);\n          }\n          // ord lists\n          for(int docID=0;docID<leftReader.maxDoc();docID++) {\n            leftValues.setDocument(docID);\n            rightValues.setDocument(docID);\n            long ord;\n            while ((ord = leftValues.nextOrd()) != SortedSetDocValues.NO_MORE_ORDS) {\n              assertEquals(info, ord, rightValues.nextOrd());\n            }\n            assertEquals(info, SortedSetDocValues.NO_MORE_ORDS, rightValues.nextOrd());\n          }\n        } else {\n          assertNull(info, leftValues);\n          assertNull(info, rightValues);\n        }\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * checks that docvalues across all fields are equivalent\n   */\n  public void assertDocValues(IndexReader leftReader, IndexReader rightReader) throws Exception {\n    Set<String> leftFields = getDVFields(leftReader);\n    Set<String> rightFields = getDVFields(rightReader);\n    assertEquals(info, leftFields, rightFields);\n\n    for (String field : leftFields) {\n      // TODO: clean this up... very messy\n      {\n        NumericDocValues leftValues = MultiDocValues.getNumericValues(leftReader, field);\n        NumericDocValues rightValues = MultiDocValues.getNumericValues(rightReader, field);\n        if (leftValues != null && rightValues != null) {\n          assertDocValues(leftReader.maxDoc(), leftValues, rightValues);\n        } else {\n          assertNull(info, leftValues);\n          assertNull(info, rightValues);\n        }\n      }\n\n      {\n        BinaryDocValues leftValues = MultiDocValues.getBinaryValues(leftReader, field);\n        BinaryDocValues rightValues = MultiDocValues.getBinaryValues(rightReader, field);\n        if (leftValues != null && rightValues != null) {\n          BytesRef scratchLeft = new BytesRef();\n          BytesRef scratchRight = new BytesRef();\n          for(int docID=0;docID<leftReader.maxDoc();docID++) {\n            leftValues.get(docID, scratchLeft);\n            rightValues.get(docID, scratchRight);\n            assertEquals(info, scratchLeft, scratchRight);\n          }\n        } else {\n          assertNull(info, leftValues);\n          assertNull(info, rightValues);\n        }\n      }\n      \n      {\n        SortedDocValues leftValues = MultiDocValues.getSortedValues(leftReader, field);\n        SortedDocValues rightValues = MultiDocValues.getSortedValues(rightReader, field);\n        if (leftValues != null && rightValues != null) {\n          // numOrds\n          assertEquals(info, leftValues.getValueCount(), rightValues.getValueCount());\n          // ords\n          BytesRef scratchLeft = new BytesRef();\n          BytesRef scratchRight = new BytesRef();\n          for (int i = 0; i < leftValues.getValueCount(); i++) {\n            leftValues.lookupOrd(i, scratchLeft);\n            rightValues.lookupOrd(i, scratchRight);\n            assertEquals(info, scratchLeft, scratchRight);\n          }\n          // bytes\n          for(int docID=0;docID<leftReader.maxDoc();docID++) {\n            leftValues.get(docID, scratchLeft);\n            rightValues.get(docID, scratchRight);\n            assertEquals(info, scratchLeft, scratchRight);\n          }\n        } else {\n          assertNull(info, leftValues);\n          assertNull(info, rightValues);\n        }\n      }\n      \n      {\n        SortedSetDocValues leftValues = MultiDocValues.getSortedSetValues(leftReader, field);\n        SortedSetDocValues rightValues = MultiDocValues.getSortedSetValues(rightReader, field);\n        if (leftValues != null && rightValues != null) {\n          // numOrds\n          assertEquals(info, leftValues.getValueCount(), rightValues.getValueCount());\n          // ords\n          BytesRef scratchLeft = new BytesRef();\n          BytesRef scratchRight = new BytesRef();\n          for (int i = 0; i < leftValues.getValueCount(); i++) {\n            leftValues.lookupOrd(i, scratchLeft);\n            rightValues.lookupOrd(i, scratchRight);\n            assertEquals(info, scratchLeft, scratchRight);\n          }\n          // ord lists\n          for(int docID=0;docID<leftReader.maxDoc();docID++) {\n            leftValues.setDocument(docID);\n            rightValues.setDocument(docID);\n            long ord;\n            while ((ord = leftValues.nextOrd()) != SortedSetDocValues.NO_MORE_ORDS) {\n              assertEquals(info, ord, rightValues.nextOrd());\n            }\n            assertEquals(info, SortedSetDocValues.NO_MORE_ORDS, rightValues.nextOrd());\n          }\n        } else {\n          assertNull(info, leftValues);\n          assertNull(info, rightValues);\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c34fec2bc086f82b8ffc8374cf54d0013f94804a","date":1377017456,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#assertDocValuesEquals(String,IndexReader,IndexReader).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#assertDocValuesEquals(String,IndexReader,IndexReader).mjava","sourceNew":"  /**\n   * checks that docvalues across all fields are equivalent\n   */\n  public void assertDocValuesEquals(String info, IndexReader leftReader, IndexReader rightReader) throws IOException {\n    Set<String> leftFields = getDVFields(leftReader);\n    Set<String> rightFields = getDVFields(rightReader);\n    assertEquals(info, leftFields, rightFields);\n\n    for (String field : leftFields) {\n      // TODO: clean this up... very messy\n      {\n        NumericDocValues leftValues = MultiDocValues.getNumericValues(leftReader, field);\n        NumericDocValues rightValues = MultiDocValues.getNumericValues(rightReader, field);\n        if (leftValues != null && rightValues != null) {\n          assertDocValuesEquals(info, leftReader.maxDoc(), leftValues, rightValues);\n        } else {\n          assertNull(info, leftValues);\n          assertNull(info, rightValues);\n        }\n      }\n\n      {\n        BinaryDocValues leftValues = MultiDocValues.getBinaryValues(leftReader, field);\n        BinaryDocValues rightValues = MultiDocValues.getBinaryValues(rightReader, field);\n        if (leftValues != null && rightValues != null) {\n          BytesRef scratchLeft = new BytesRef();\n          BytesRef scratchRight = new BytesRef();\n          for(int docID=0;docID<leftReader.maxDoc();docID++) {\n            leftValues.get(docID, scratchLeft);\n            rightValues.get(docID, scratchRight);\n            assertEquals(info, scratchLeft, scratchRight);\n          }\n        } else {\n          assertNull(info, leftValues);\n          assertNull(info, rightValues);\n        }\n      }\n      \n      {\n        SortedDocValues leftValues = MultiDocValues.getSortedValues(leftReader, field);\n        SortedDocValues rightValues = MultiDocValues.getSortedValues(rightReader, field);\n        if (leftValues != null && rightValues != null) {\n          // numOrds\n          assertEquals(info, leftValues.getValueCount(), rightValues.getValueCount());\n          // ords\n          BytesRef scratchLeft = new BytesRef();\n          BytesRef scratchRight = new BytesRef();\n          for (int i = 0; i < leftValues.getValueCount(); i++) {\n            leftValues.lookupOrd(i, scratchLeft);\n            rightValues.lookupOrd(i, scratchRight);\n            assertEquals(info, scratchLeft, scratchRight);\n          }\n          // bytes\n          for(int docID=0;docID<leftReader.maxDoc();docID++) {\n            leftValues.get(docID, scratchLeft);\n            rightValues.get(docID, scratchRight);\n            assertEquals(info, scratchLeft, scratchRight);\n          }\n        } else {\n          assertNull(info, leftValues);\n          assertNull(info, rightValues);\n        }\n      }\n      \n      {\n        SortedSetDocValues leftValues = MultiDocValues.getSortedSetValues(leftReader, field);\n        SortedSetDocValues rightValues = MultiDocValues.getSortedSetValues(rightReader, field);\n        if (leftValues != null && rightValues != null) {\n          // numOrds\n          assertEquals(info, leftValues.getValueCount(), rightValues.getValueCount());\n          // ords\n          BytesRef scratchLeft = new BytesRef();\n          BytesRef scratchRight = new BytesRef();\n          for (int i = 0; i < leftValues.getValueCount(); i++) {\n            leftValues.lookupOrd(i, scratchLeft);\n            rightValues.lookupOrd(i, scratchRight);\n            assertEquals(info, scratchLeft, scratchRight);\n          }\n          // ord lists\n          for(int docID=0;docID<leftReader.maxDoc();docID++) {\n            leftValues.setDocument(docID);\n            rightValues.setDocument(docID);\n            long ord;\n            while ((ord = leftValues.nextOrd()) != SortedSetDocValues.NO_MORE_ORDS) {\n              assertEquals(info, ord, rightValues.nextOrd());\n            }\n            assertEquals(info, SortedSetDocValues.NO_MORE_ORDS, rightValues.nextOrd());\n          }\n        } else {\n          assertNull(info, leftValues);\n          assertNull(info, rightValues);\n        }\n      }\n      \n      {\n        Bits leftBits = MultiDocValues.getDocsWithField(leftReader, field);\n        Bits rightBits = MultiDocValues.getDocsWithField(rightReader, field);\n        if (leftBits != null && rightBits != null) {\n          assertEquals(info, leftBits.length(), rightBits.length());\n          for (int i = 0; i < leftBits.length(); i++) {\n            assertEquals(info, leftBits.get(i), rightBits.get(i));\n          }\n        } else {\n          assertNull(info, leftBits);\n          assertNull(info, rightBits);\n        }\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * checks that docvalues across all fields are equivalent\n   */\n  public void assertDocValuesEquals(String info, IndexReader leftReader, IndexReader rightReader) throws IOException {\n    Set<String> leftFields = getDVFields(leftReader);\n    Set<String> rightFields = getDVFields(rightReader);\n    assertEquals(info, leftFields, rightFields);\n\n    for (String field : leftFields) {\n      // TODO: clean this up... very messy\n      {\n        NumericDocValues leftValues = MultiDocValues.getNumericValues(leftReader, field);\n        NumericDocValues rightValues = MultiDocValues.getNumericValues(rightReader, field);\n        if (leftValues != null && rightValues != null) {\n          assertDocValuesEquals(info, leftReader.maxDoc(), leftValues, rightValues);\n        } else {\n          assertNull(info, leftValues);\n          assertNull(info, rightValues);\n        }\n      }\n\n      {\n        BinaryDocValues leftValues = MultiDocValues.getBinaryValues(leftReader, field);\n        BinaryDocValues rightValues = MultiDocValues.getBinaryValues(rightReader, field);\n        if (leftValues != null && rightValues != null) {\n          BytesRef scratchLeft = new BytesRef();\n          BytesRef scratchRight = new BytesRef();\n          for(int docID=0;docID<leftReader.maxDoc();docID++) {\n            leftValues.get(docID, scratchLeft);\n            rightValues.get(docID, scratchRight);\n            assertEquals(info, scratchLeft, scratchRight);\n          }\n        } else {\n          assertNull(info, leftValues);\n          assertNull(info, rightValues);\n        }\n      }\n      \n      {\n        SortedDocValues leftValues = MultiDocValues.getSortedValues(leftReader, field);\n        SortedDocValues rightValues = MultiDocValues.getSortedValues(rightReader, field);\n        if (leftValues != null && rightValues != null) {\n          // numOrds\n          assertEquals(info, leftValues.getValueCount(), rightValues.getValueCount());\n          // ords\n          BytesRef scratchLeft = new BytesRef();\n          BytesRef scratchRight = new BytesRef();\n          for (int i = 0; i < leftValues.getValueCount(); i++) {\n            leftValues.lookupOrd(i, scratchLeft);\n            rightValues.lookupOrd(i, scratchRight);\n            assertEquals(info, scratchLeft, scratchRight);\n          }\n          // bytes\n          for(int docID=0;docID<leftReader.maxDoc();docID++) {\n            leftValues.get(docID, scratchLeft);\n            rightValues.get(docID, scratchRight);\n            assertEquals(info, scratchLeft, scratchRight);\n          }\n        } else {\n          assertNull(info, leftValues);\n          assertNull(info, rightValues);\n        }\n      }\n      \n      {\n        SortedSetDocValues leftValues = MultiDocValues.getSortedSetValues(leftReader, field);\n        SortedSetDocValues rightValues = MultiDocValues.getSortedSetValues(rightReader, field);\n        if (leftValues != null && rightValues != null) {\n          // numOrds\n          assertEquals(info, leftValues.getValueCount(), rightValues.getValueCount());\n          // ords\n          BytesRef scratchLeft = new BytesRef();\n          BytesRef scratchRight = new BytesRef();\n          for (int i = 0; i < leftValues.getValueCount(); i++) {\n            leftValues.lookupOrd(i, scratchLeft);\n            rightValues.lookupOrd(i, scratchRight);\n            assertEquals(info, scratchLeft, scratchRight);\n          }\n          // ord lists\n          for(int docID=0;docID<leftReader.maxDoc();docID++) {\n            leftValues.setDocument(docID);\n            rightValues.setDocument(docID);\n            long ord;\n            while ((ord = leftValues.nextOrd()) != SortedSetDocValues.NO_MORE_ORDS) {\n              assertEquals(info, ord, rightValues.nextOrd());\n            }\n            assertEquals(info, SortedSetDocValues.NO_MORE_ORDS, rightValues.nextOrd());\n          }\n        } else {\n          assertNull(info, leftValues);\n          assertNull(info, rightValues);\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff","date":1377034255,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#assertDocValuesEquals(String,IndexReader,IndexReader).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#assertDocValuesEquals(String,IndexReader,IndexReader).mjava","sourceNew":"  /**\n   * checks that docvalues across all fields are equivalent\n   */\n  public void assertDocValuesEquals(String info, IndexReader leftReader, IndexReader rightReader) throws IOException {\n    Set<String> leftFields = getDVFields(leftReader);\n    Set<String> rightFields = getDVFields(rightReader);\n    assertEquals(info, leftFields, rightFields);\n\n    for (String field : leftFields) {\n      // TODO: clean this up... very messy\n      {\n        NumericDocValues leftValues = MultiDocValues.getNumericValues(leftReader, field);\n        NumericDocValues rightValues = MultiDocValues.getNumericValues(rightReader, field);\n        if (leftValues != null && rightValues != null) {\n          assertDocValuesEquals(info, leftReader.maxDoc(), leftValues, rightValues);\n        } else {\n          assertNull(info, leftValues);\n          assertNull(info, rightValues);\n        }\n      }\n\n      {\n        BinaryDocValues leftValues = MultiDocValues.getBinaryValues(leftReader, field);\n        BinaryDocValues rightValues = MultiDocValues.getBinaryValues(rightReader, field);\n        if (leftValues != null && rightValues != null) {\n          BytesRef scratchLeft = new BytesRef();\n          BytesRef scratchRight = new BytesRef();\n          for(int docID=0;docID<leftReader.maxDoc();docID++) {\n            leftValues.get(docID, scratchLeft);\n            rightValues.get(docID, scratchRight);\n            assertEquals(info, scratchLeft, scratchRight);\n          }\n        } else {\n          assertNull(info, leftValues);\n          assertNull(info, rightValues);\n        }\n      }\n      \n      {\n        SortedDocValues leftValues = MultiDocValues.getSortedValues(leftReader, field);\n        SortedDocValues rightValues = MultiDocValues.getSortedValues(rightReader, field);\n        if (leftValues != null && rightValues != null) {\n          // numOrds\n          assertEquals(info, leftValues.getValueCount(), rightValues.getValueCount());\n          // ords\n          BytesRef scratchLeft = new BytesRef();\n          BytesRef scratchRight = new BytesRef();\n          for (int i = 0; i < leftValues.getValueCount(); i++) {\n            leftValues.lookupOrd(i, scratchLeft);\n            rightValues.lookupOrd(i, scratchRight);\n            assertEquals(info, scratchLeft, scratchRight);\n          }\n          // bytes\n          for(int docID=0;docID<leftReader.maxDoc();docID++) {\n            leftValues.get(docID, scratchLeft);\n            rightValues.get(docID, scratchRight);\n            assertEquals(info, scratchLeft, scratchRight);\n          }\n        } else {\n          assertNull(info, leftValues);\n          assertNull(info, rightValues);\n        }\n      }\n      \n      {\n        SortedSetDocValues leftValues = MultiDocValues.getSortedSetValues(leftReader, field);\n        SortedSetDocValues rightValues = MultiDocValues.getSortedSetValues(rightReader, field);\n        if (leftValues != null && rightValues != null) {\n          // numOrds\n          assertEquals(info, leftValues.getValueCount(), rightValues.getValueCount());\n          // ords\n          BytesRef scratchLeft = new BytesRef();\n          BytesRef scratchRight = new BytesRef();\n          for (int i = 0; i < leftValues.getValueCount(); i++) {\n            leftValues.lookupOrd(i, scratchLeft);\n            rightValues.lookupOrd(i, scratchRight);\n            assertEquals(info, scratchLeft, scratchRight);\n          }\n          // ord lists\n          for(int docID=0;docID<leftReader.maxDoc();docID++) {\n            leftValues.setDocument(docID);\n            rightValues.setDocument(docID);\n            long ord;\n            while ((ord = leftValues.nextOrd()) != SortedSetDocValues.NO_MORE_ORDS) {\n              assertEquals(info, ord, rightValues.nextOrd());\n            }\n            assertEquals(info, SortedSetDocValues.NO_MORE_ORDS, rightValues.nextOrd());\n          }\n        } else {\n          assertNull(info, leftValues);\n          assertNull(info, rightValues);\n        }\n      }\n      \n      {\n        Bits leftBits = MultiDocValues.getDocsWithField(leftReader, field);\n        Bits rightBits = MultiDocValues.getDocsWithField(rightReader, field);\n        if (leftBits != null && rightBits != null) {\n          assertEquals(info, leftBits.length(), rightBits.length());\n          for (int i = 0; i < leftBits.length(); i++) {\n            assertEquals(info, leftBits.get(i), rightBits.get(i));\n          }\n        } else {\n          assertNull(info, leftBits);\n          assertNull(info, rightBits);\n        }\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * checks that docvalues across all fields are equivalent\n   */\n  public void assertDocValuesEquals(String info, IndexReader leftReader, IndexReader rightReader) throws IOException {\n    Set<String> leftFields = getDVFields(leftReader);\n    Set<String> rightFields = getDVFields(rightReader);\n    assertEquals(info, leftFields, rightFields);\n\n    for (String field : leftFields) {\n      // TODO: clean this up... very messy\n      {\n        NumericDocValues leftValues = MultiDocValues.getNumericValues(leftReader, field);\n        NumericDocValues rightValues = MultiDocValues.getNumericValues(rightReader, field);\n        if (leftValues != null && rightValues != null) {\n          assertDocValuesEquals(info, leftReader.maxDoc(), leftValues, rightValues);\n        } else {\n          assertNull(info, leftValues);\n          assertNull(info, rightValues);\n        }\n      }\n\n      {\n        BinaryDocValues leftValues = MultiDocValues.getBinaryValues(leftReader, field);\n        BinaryDocValues rightValues = MultiDocValues.getBinaryValues(rightReader, field);\n        if (leftValues != null && rightValues != null) {\n          BytesRef scratchLeft = new BytesRef();\n          BytesRef scratchRight = new BytesRef();\n          for(int docID=0;docID<leftReader.maxDoc();docID++) {\n            leftValues.get(docID, scratchLeft);\n            rightValues.get(docID, scratchRight);\n            assertEquals(info, scratchLeft, scratchRight);\n          }\n        } else {\n          assertNull(info, leftValues);\n          assertNull(info, rightValues);\n        }\n      }\n      \n      {\n        SortedDocValues leftValues = MultiDocValues.getSortedValues(leftReader, field);\n        SortedDocValues rightValues = MultiDocValues.getSortedValues(rightReader, field);\n        if (leftValues != null && rightValues != null) {\n          // numOrds\n          assertEquals(info, leftValues.getValueCount(), rightValues.getValueCount());\n          // ords\n          BytesRef scratchLeft = new BytesRef();\n          BytesRef scratchRight = new BytesRef();\n          for (int i = 0; i < leftValues.getValueCount(); i++) {\n            leftValues.lookupOrd(i, scratchLeft);\n            rightValues.lookupOrd(i, scratchRight);\n            assertEquals(info, scratchLeft, scratchRight);\n          }\n          // bytes\n          for(int docID=0;docID<leftReader.maxDoc();docID++) {\n            leftValues.get(docID, scratchLeft);\n            rightValues.get(docID, scratchRight);\n            assertEquals(info, scratchLeft, scratchRight);\n          }\n        } else {\n          assertNull(info, leftValues);\n          assertNull(info, rightValues);\n        }\n      }\n      \n      {\n        SortedSetDocValues leftValues = MultiDocValues.getSortedSetValues(leftReader, field);\n        SortedSetDocValues rightValues = MultiDocValues.getSortedSetValues(rightReader, field);\n        if (leftValues != null && rightValues != null) {\n          // numOrds\n          assertEquals(info, leftValues.getValueCount(), rightValues.getValueCount());\n          // ords\n          BytesRef scratchLeft = new BytesRef();\n          BytesRef scratchRight = new BytesRef();\n          for (int i = 0; i < leftValues.getValueCount(); i++) {\n            leftValues.lookupOrd(i, scratchLeft);\n            rightValues.lookupOrd(i, scratchRight);\n            assertEquals(info, scratchLeft, scratchRight);\n          }\n          // ord lists\n          for(int docID=0;docID<leftReader.maxDoc();docID++) {\n            leftValues.setDocument(docID);\n            rightValues.setDocument(docID);\n            long ord;\n            while ((ord = leftValues.nextOrd()) != SortedSetDocValues.NO_MORE_ORDS) {\n              assertEquals(info, ord, rightValues.nextOrd());\n            }\n            assertEquals(info, SortedSetDocValues.NO_MORE_ORDS, rightValues.nextOrd());\n          }\n        } else {\n          assertNull(info, leftValues);\n          assertNull(info, rightValues);\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3dffec77fb8f7d0e9ca4869dddd6af94528b4576","date":1377875202,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#assertDocValuesEquals(String,IndexReader,IndexReader).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#assertDocValuesEquals(String,IndexReader,IndexReader).mjava","sourceNew":"  /**\n   * checks that docvalues across all fields are equivalent\n   */\n  public void assertDocValuesEquals(String info, IndexReader leftReader, IndexReader rightReader) throws IOException {\n    Set<String> leftFields = getDVFields(leftReader);\n    Set<String> rightFields = getDVFields(rightReader);\n    assertEquals(info, leftFields, rightFields);\n\n    for (String field : leftFields) {\n      // TODO: clean this up... very messy\n      {\n        NumericDocValues leftValues = MultiDocValues.getNumericValues(leftReader, field);\n        NumericDocValues rightValues = MultiDocValues.getNumericValues(rightReader, field);\n        if (leftValues != null && rightValues != null) {\n          assertDocValuesEquals(info, leftReader.maxDoc(), leftValues, rightValues);\n        } else {\n          assertNull(info, leftValues);\n          assertNull(info, rightValues);\n        }\n      }\n\n      {\n        BinaryDocValues leftValues = MultiDocValues.getBinaryValues(leftReader, field);\n        BinaryDocValues rightValues = MultiDocValues.getBinaryValues(rightReader, field);\n        if (leftValues != null && rightValues != null) {\n          BytesRef scratchLeft = new BytesRef();\n          BytesRef scratchRight = new BytesRef();\n          for(int docID=0;docID<leftReader.maxDoc();docID++) {\n            leftValues.get(docID, scratchLeft);\n            rightValues.get(docID, scratchRight);\n            assertEquals(info, scratchLeft, scratchRight);\n          }\n        } else {\n          assertNull(info, leftValues);\n          assertNull(info, rightValues);\n        }\n      }\n      \n      {\n        SortedDocValues leftValues = MultiDocValues.getSortedValues(leftReader, field);\n        SortedDocValues rightValues = MultiDocValues.getSortedValues(rightReader, field);\n        if (leftValues != null && rightValues != null) {\n          // numOrds\n          assertEquals(info, leftValues.getValueCount(), rightValues.getValueCount());\n          // ords\n          BytesRef scratchLeft = new BytesRef();\n          BytesRef scratchRight = new BytesRef();\n          for (int i = 0; i < leftValues.getValueCount(); i++) {\n            leftValues.lookupOrd(i, scratchLeft);\n            rightValues.lookupOrd(i, scratchRight);\n            assertEquals(info, scratchLeft, scratchRight);\n          }\n          // bytes\n          for(int docID=0;docID<leftReader.maxDoc();docID++) {\n            leftValues.get(docID, scratchLeft);\n            rightValues.get(docID, scratchRight);\n            assertEquals(info, scratchLeft, scratchRight);\n          }\n        } else {\n          assertNull(info, leftValues);\n          assertNull(info, rightValues);\n        }\n      }\n      \n      {\n        SortedSetDocValues leftValues = MultiDocValues.getSortedSetValues(leftReader, field);\n        SortedSetDocValues rightValues = MultiDocValues.getSortedSetValues(rightReader, field);\n        if (leftValues != null && rightValues != null) {\n          // numOrds\n          assertEquals(info, leftValues.getValueCount(), rightValues.getValueCount());\n          // ords\n          BytesRef scratchLeft = new BytesRef();\n          BytesRef scratchRight = new BytesRef();\n          for (int i = 0; i < leftValues.getValueCount(); i++) {\n            leftValues.lookupOrd(i, scratchLeft);\n            rightValues.lookupOrd(i, scratchRight);\n            assertEquals(info, scratchLeft, scratchRight);\n          }\n          // ord lists\n          for(int docID=0;docID<leftReader.maxDoc();docID++) {\n            leftValues.setDocument(docID);\n            rightValues.setDocument(docID);\n            long ord;\n            while ((ord = leftValues.nextOrd()) != SortedSetDocValues.NO_MORE_ORDS) {\n              assertEquals(info, ord, rightValues.nextOrd());\n            }\n            assertEquals(info, SortedSetDocValues.NO_MORE_ORDS, rightValues.nextOrd());\n          }\n        } else {\n          assertNull(info, leftValues);\n          assertNull(info, rightValues);\n        }\n      }\n      \n      {\n        Bits leftBits = MultiDocValues.getDocsWithField(leftReader, field);\n        Bits rightBits = MultiDocValues.getDocsWithField(rightReader, field);\n        if (leftBits != null && rightBits != null) {\n          assertEquals(info, leftBits.length(), rightBits.length());\n          for (int i = 0; i < leftBits.length(); i++) {\n            assertEquals(info, leftBits.get(i), rightBits.get(i));\n          }\n        } else {\n          assertNull(info, leftBits);\n          assertNull(info, rightBits);\n        }\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * checks that docvalues across all fields are equivalent\n   */\n  public void assertDocValuesEquals(String info, IndexReader leftReader, IndexReader rightReader) throws IOException {\n    Set<String> leftFields = getDVFields(leftReader);\n    Set<String> rightFields = getDVFields(rightReader);\n    assertEquals(info, leftFields, rightFields);\n\n    for (String field : leftFields) {\n      // TODO: clean this up... very messy\n      {\n        NumericDocValues leftValues = MultiDocValues.getNumericValues(leftReader, field);\n        NumericDocValues rightValues = MultiDocValues.getNumericValues(rightReader, field);\n        if (leftValues != null && rightValues != null) {\n          assertDocValuesEquals(info, leftReader.maxDoc(), leftValues, rightValues);\n        } else {\n          assertNull(info, leftValues);\n          assertNull(info, rightValues);\n        }\n      }\n\n      {\n        BinaryDocValues leftValues = MultiDocValues.getBinaryValues(leftReader, field);\n        BinaryDocValues rightValues = MultiDocValues.getBinaryValues(rightReader, field);\n        if (leftValues != null && rightValues != null) {\n          BytesRef scratchLeft = new BytesRef();\n          BytesRef scratchRight = new BytesRef();\n          for(int docID=0;docID<leftReader.maxDoc();docID++) {\n            leftValues.get(docID, scratchLeft);\n            rightValues.get(docID, scratchRight);\n            assertEquals(info, scratchLeft, scratchRight);\n          }\n        } else {\n          assertNull(info, leftValues);\n          assertNull(info, rightValues);\n        }\n      }\n      \n      {\n        SortedDocValues leftValues = MultiDocValues.getSortedValues(leftReader, field);\n        SortedDocValues rightValues = MultiDocValues.getSortedValues(rightReader, field);\n        if (leftValues != null && rightValues != null) {\n          // numOrds\n          assertEquals(info, leftValues.getValueCount(), rightValues.getValueCount());\n          // ords\n          BytesRef scratchLeft = new BytesRef();\n          BytesRef scratchRight = new BytesRef();\n          for (int i = 0; i < leftValues.getValueCount(); i++) {\n            leftValues.lookupOrd(i, scratchLeft);\n            rightValues.lookupOrd(i, scratchRight);\n            assertEquals(info, scratchLeft, scratchRight);\n          }\n          // bytes\n          for(int docID=0;docID<leftReader.maxDoc();docID++) {\n            leftValues.get(docID, scratchLeft);\n            rightValues.get(docID, scratchRight);\n            assertEquals(info, scratchLeft, scratchRight);\n          }\n        } else {\n          assertNull(info, leftValues);\n          assertNull(info, rightValues);\n        }\n      }\n      \n      {\n        SortedSetDocValues leftValues = MultiDocValues.getSortedSetValues(leftReader, field);\n        SortedSetDocValues rightValues = MultiDocValues.getSortedSetValues(rightReader, field);\n        if (leftValues != null && rightValues != null) {\n          // numOrds\n          assertEquals(info, leftValues.getValueCount(), rightValues.getValueCount());\n          // ords\n          BytesRef scratchLeft = new BytesRef();\n          BytesRef scratchRight = new BytesRef();\n          for (int i = 0; i < leftValues.getValueCount(); i++) {\n            leftValues.lookupOrd(i, scratchLeft);\n            rightValues.lookupOrd(i, scratchRight);\n            assertEquals(info, scratchLeft, scratchRight);\n          }\n          // ord lists\n          for(int docID=0;docID<leftReader.maxDoc();docID++) {\n            leftValues.setDocument(docID);\n            rightValues.setDocument(docID);\n            long ord;\n            while ((ord = leftValues.nextOrd()) != SortedSetDocValues.NO_MORE_ORDS) {\n              assertEquals(info, ord, rightValues.nextOrd());\n            }\n            assertEquals(info, SortedSetDocValues.NO_MORE_ORDS, rightValues.nextOrd());\n          }\n        } else {\n          assertNull(info, leftValues);\n          assertNull(info, rightValues);\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"53fc2f4c5ce4f2053be3d5f5d14d79129ebb4bbf","date":1401983689,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#assertDocValuesEquals(String,IndexReader,IndexReader).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#assertDocValuesEquals(String,IndexReader,IndexReader).mjava","sourceNew":"  /**\n   * checks that docvalues across all fields are equivalent\n   */\n  public void assertDocValuesEquals(String info, IndexReader leftReader, IndexReader rightReader) throws IOException {\n    Set<String> leftFields = getDVFields(leftReader);\n    Set<String> rightFields = getDVFields(rightReader);\n    assertEquals(info, leftFields, rightFields);\n\n    for (String field : leftFields) {\n      // TODO: clean this up... very messy\n      {\n        NumericDocValues leftValues = MultiDocValues.getNumericValues(leftReader, field);\n        NumericDocValues rightValues = MultiDocValues.getNumericValues(rightReader, field);\n        if (leftValues != null && rightValues != null) {\n          assertDocValuesEquals(info, leftReader.maxDoc(), leftValues, rightValues);\n        } else {\n          assertNull(info, leftValues);\n          assertNull(info, rightValues);\n        }\n      }\n\n      {\n        BinaryDocValues leftValues = MultiDocValues.getBinaryValues(leftReader, field);\n        BinaryDocValues rightValues = MultiDocValues.getBinaryValues(rightReader, field);\n        if (leftValues != null && rightValues != null) {\n          for(int docID=0;docID<leftReader.maxDoc();docID++) {\n            final BytesRef left = BytesRef.deepCopyOf(leftValues.get(docID));\n            final BytesRef right = rightValues.get(docID);\n            assertEquals(info, left, right);\n          }\n        } else {\n          assertNull(info, leftValues);\n          assertNull(info, rightValues);\n        }\n      }\n      \n      {\n        SortedDocValues leftValues = MultiDocValues.getSortedValues(leftReader, field);\n        SortedDocValues rightValues = MultiDocValues.getSortedValues(rightReader, field);\n        if (leftValues != null && rightValues != null) {\n          // numOrds\n          assertEquals(info, leftValues.getValueCount(), rightValues.getValueCount());\n          // ords\n          BytesRef scratchLeft = new BytesRef();\n          BytesRef scratchRight = new BytesRef();\n          for (int i = 0; i < leftValues.getValueCount(); i++) {\n            final BytesRef left = BytesRef.deepCopyOf(leftValues.lookupOrd(i));\n            final BytesRef right = rightValues.lookupOrd(i);\n            assertEquals(info, left, right);\n          }\n          // bytes\n          for(int docID=0;docID<leftReader.maxDoc();docID++) {\n            final BytesRef left = BytesRef.deepCopyOf(leftValues.get(docID));\n            final BytesRef right = rightValues.get(docID);\n            assertEquals(info, left, right);\n          }\n        } else {\n          assertNull(info, leftValues);\n          assertNull(info, rightValues);\n        }\n      }\n      \n      {\n        SortedSetDocValues leftValues = MultiDocValues.getSortedSetValues(leftReader, field);\n        SortedSetDocValues rightValues = MultiDocValues.getSortedSetValues(rightReader, field);\n        if (leftValues != null && rightValues != null) {\n          // numOrds\n          assertEquals(info, leftValues.getValueCount(), rightValues.getValueCount());\n          // ords\n          for (int i = 0; i < leftValues.getValueCount(); i++) {\n            final BytesRef left = BytesRef.deepCopyOf(leftValues.lookupOrd(i));\n            final BytesRef right = rightValues.lookupOrd(i);\n            assertEquals(info, left, right);\n          }\n          // ord lists\n          for(int docID=0;docID<leftReader.maxDoc();docID++) {\n            leftValues.setDocument(docID);\n            rightValues.setDocument(docID);\n            long ord;\n            while ((ord = leftValues.nextOrd()) != SortedSetDocValues.NO_MORE_ORDS) {\n              assertEquals(info, ord, rightValues.nextOrd());\n            }\n            assertEquals(info, SortedSetDocValues.NO_MORE_ORDS, rightValues.nextOrd());\n          }\n        } else {\n          assertNull(info, leftValues);\n          assertNull(info, rightValues);\n        }\n      }\n      \n      {\n        Bits leftBits = MultiDocValues.getDocsWithField(leftReader, field);\n        Bits rightBits = MultiDocValues.getDocsWithField(rightReader, field);\n        if (leftBits != null && rightBits != null) {\n          assertEquals(info, leftBits.length(), rightBits.length());\n          for (int i = 0; i < leftBits.length(); i++) {\n            assertEquals(info, leftBits.get(i), rightBits.get(i));\n          }\n        } else {\n          assertNull(info, leftBits);\n          assertNull(info, rightBits);\n        }\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * checks that docvalues across all fields are equivalent\n   */\n  public void assertDocValuesEquals(String info, IndexReader leftReader, IndexReader rightReader) throws IOException {\n    Set<String> leftFields = getDVFields(leftReader);\n    Set<String> rightFields = getDVFields(rightReader);\n    assertEquals(info, leftFields, rightFields);\n\n    for (String field : leftFields) {\n      // TODO: clean this up... very messy\n      {\n        NumericDocValues leftValues = MultiDocValues.getNumericValues(leftReader, field);\n        NumericDocValues rightValues = MultiDocValues.getNumericValues(rightReader, field);\n        if (leftValues != null && rightValues != null) {\n          assertDocValuesEquals(info, leftReader.maxDoc(), leftValues, rightValues);\n        } else {\n          assertNull(info, leftValues);\n          assertNull(info, rightValues);\n        }\n      }\n\n      {\n        BinaryDocValues leftValues = MultiDocValues.getBinaryValues(leftReader, field);\n        BinaryDocValues rightValues = MultiDocValues.getBinaryValues(rightReader, field);\n        if (leftValues != null && rightValues != null) {\n          BytesRef scratchLeft = new BytesRef();\n          BytesRef scratchRight = new BytesRef();\n          for(int docID=0;docID<leftReader.maxDoc();docID++) {\n            leftValues.get(docID, scratchLeft);\n            rightValues.get(docID, scratchRight);\n            assertEquals(info, scratchLeft, scratchRight);\n          }\n        } else {\n          assertNull(info, leftValues);\n          assertNull(info, rightValues);\n        }\n      }\n      \n      {\n        SortedDocValues leftValues = MultiDocValues.getSortedValues(leftReader, field);\n        SortedDocValues rightValues = MultiDocValues.getSortedValues(rightReader, field);\n        if (leftValues != null && rightValues != null) {\n          // numOrds\n          assertEquals(info, leftValues.getValueCount(), rightValues.getValueCount());\n          // ords\n          BytesRef scratchLeft = new BytesRef();\n          BytesRef scratchRight = new BytesRef();\n          for (int i = 0; i < leftValues.getValueCount(); i++) {\n            leftValues.lookupOrd(i, scratchLeft);\n            rightValues.lookupOrd(i, scratchRight);\n            assertEquals(info, scratchLeft, scratchRight);\n          }\n          // bytes\n          for(int docID=0;docID<leftReader.maxDoc();docID++) {\n            leftValues.get(docID, scratchLeft);\n            rightValues.get(docID, scratchRight);\n            assertEquals(info, scratchLeft, scratchRight);\n          }\n        } else {\n          assertNull(info, leftValues);\n          assertNull(info, rightValues);\n        }\n      }\n      \n      {\n        SortedSetDocValues leftValues = MultiDocValues.getSortedSetValues(leftReader, field);\n        SortedSetDocValues rightValues = MultiDocValues.getSortedSetValues(rightReader, field);\n        if (leftValues != null && rightValues != null) {\n          // numOrds\n          assertEquals(info, leftValues.getValueCount(), rightValues.getValueCount());\n          // ords\n          BytesRef scratchLeft = new BytesRef();\n          BytesRef scratchRight = new BytesRef();\n          for (int i = 0; i < leftValues.getValueCount(); i++) {\n            leftValues.lookupOrd(i, scratchLeft);\n            rightValues.lookupOrd(i, scratchRight);\n            assertEquals(info, scratchLeft, scratchRight);\n          }\n          // ord lists\n          for(int docID=0;docID<leftReader.maxDoc();docID++) {\n            leftValues.setDocument(docID);\n            rightValues.setDocument(docID);\n            long ord;\n            while ((ord = leftValues.nextOrd()) != SortedSetDocValues.NO_MORE_ORDS) {\n              assertEquals(info, ord, rightValues.nextOrd());\n            }\n            assertEquals(info, SortedSetDocValues.NO_MORE_ORDS, rightValues.nextOrd());\n          }\n        } else {\n          assertNull(info, leftValues);\n          assertNull(info, rightValues);\n        }\n      }\n      \n      {\n        Bits leftBits = MultiDocValues.getDocsWithField(leftReader, field);\n        Bits rightBits = MultiDocValues.getDocsWithField(rightReader, field);\n        if (leftBits != null && rightBits != null) {\n          assertEquals(info, leftBits.length(), rightBits.length());\n          for (int i = 0; i < leftBits.length(); i++) {\n            assertEquals(info, leftBits.get(i), rightBits.get(i));\n          }\n        } else {\n          assertNull(info, leftBits);\n          assertNull(info, rightBits);\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d14ffaac9c4a4a2c750bf0cd956506802561e062","date":1402602036,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#assertDocValuesEquals(String,IndexReader,IndexReader).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#assertDocValuesEquals(String,IndexReader,IndexReader).mjava","sourceNew":"  /**\n   * checks that docvalues across all fields are equivalent\n   */\n  public void assertDocValuesEquals(String info, IndexReader leftReader, IndexReader rightReader) throws IOException {\n    Set<String> leftFields = getDVFields(leftReader);\n    Set<String> rightFields = getDVFields(rightReader);\n    assertEquals(info, leftFields, rightFields);\n\n    for (String field : leftFields) {\n      // TODO: clean this up... very messy\n      {\n        NumericDocValues leftValues = MultiDocValues.getNumericValues(leftReader, field);\n        NumericDocValues rightValues = MultiDocValues.getNumericValues(rightReader, field);\n        if (leftValues != null && rightValues != null) {\n          assertDocValuesEquals(info, leftReader.maxDoc(), leftValues, rightValues);\n        } else {\n          assertNull(info, leftValues);\n          assertNull(info, rightValues);\n        }\n      }\n\n      {\n        BinaryDocValues leftValues = MultiDocValues.getBinaryValues(leftReader, field);\n        BinaryDocValues rightValues = MultiDocValues.getBinaryValues(rightReader, field);\n        if (leftValues != null && rightValues != null) {\n          for(int docID=0;docID<leftReader.maxDoc();docID++) {\n            final BytesRef left = BytesRef.deepCopyOf(leftValues.get(docID));\n            final BytesRef right = rightValues.get(docID);\n            assertEquals(info, left, right);\n          }\n        } else {\n          assertNull(info, leftValues);\n          assertNull(info, rightValues);\n        }\n      }\n      \n      {\n        SortedDocValues leftValues = MultiDocValues.getSortedValues(leftReader, field);\n        SortedDocValues rightValues = MultiDocValues.getSortedValues(rightReader, field);\n        if (leftValues != null && rightValues != null) {\n          // numOrds\n          assertEquals(info, leftValues.getValueCount(), rightValues.getValueCount());\n          // ords\n          BytesRef scratchLeft = new BytesRef();\n          BytesRef scratchRight = new BytesRef();\n          for (int i = 0; i < leftValues.getValueCount(); i++) {\n            final BytesRef left = BytesRef.deepCopyOf(leftValues.lookupOrd(i));\n            final BytesRef right = rightValues.lookupOrd(i);\n            assertEquals(info, left, right);\n          }\n          // bytes\n          for(int docID=0;docID<leftReader.maxDoc();docID++) {\n            final BytesRef left = BytesRef.deepCopyOf(leftValues.get(docID));\n            final BytesRef right = rightValues.get(docID);\n            assertEquals(info, left, right);\n          }\n        } else {\n          assertNull(info, leftValues);\n          assertNull(info, rightValues);\n        }\n      }\n      \n      {\n        SortedSetDocValues leftValues = MultiDocValues.getSortedSetValues(leftReader, field);\n        SortedSetDocValues rightValues = MultiDocValues.getSortedSetValues(rightReader, field);\n        if (leftValues != null && rightValues != null) {\n          // numOrds\n          assertEquals(info, leftValues.getValueCount(), rightValues.getValueCount());\n          // ords\n          for (int i = 0; i < leftValues.getValueCount(); i++) {\n            final BytesRef left = BytesRef.deepCopyOf(leftValues.lookupOrd(i));\n            final BytesRef right = rightValues.lookupOrd(i);\n            assertEquals(info, left, right);\n          }\n          // ord lists\n          for(int docID=0;docID<leftReader.maxDoc();docID++) {\n            leftValues.setDocument(docID);\n            rightValues.setDocument(docID);\n            long ord;\n            while ((ord = leftValues.nextOrd()) != SortedSetDocValues.NO_MORE_ORDS) {\n              assertEquals(info, ord, rightValues.nextOrd());\n            }\n            assertEquals(info, SortedSetDocValues.NO_MORE_ORDS, rightValues.nextOrd());\n          }\n        } else {\n          assertNull(info, leftValues);\n          assertNull(info, rightValues);\n        }\n      }\n      \n      {\n        SortedNumericDocValues leftValues = MultiDocValues.getSortedNumericValues(leftReader, field);\n        SortedNumericDocValues rightValues = MultiDocValues.getSortedNumericValues(rightReader, field);\n        if (leftValues != null && rightValues != null) {\n          for (int i = 0; i < leftReader.maxDoc(); i++) {\n            leftValues.setDocument(i);\n            long expected[] = new long[leftValues.count()];\n            for (int j = 0; j < expected.length; j++) {\n              expected[j] = leftValues.valueAt(j);\n            }\n            rightValues.setDocument(i);\n            for (int j = 0; j < expected.length; j++) {\n              assertEquals(info, expected[j], rightValues.valueAt(j));\n            }\n            assertEquals(info, expected.length, rightValues.count());\n          }\n        } else {\n          assertNull(info, leftValues);\n          assertNull(info, rightValues);\n        }\n      }\n      \n      {\n        Bits leftBits = MultiDocValues.getDocsWithField(leftReader, field);\n        Bits rightBits = MultiDocValues.getDocsWithField(rightReader, field);\n        if (leftBits != null && rightBits != null) {\n          assertEquals(info, leftBits.length(), rightBits.length());\n          for (int i = 0; i < leftBits.length(); i++) {\n            assertEquals(info, leftBits.get(i), rightBits.get(i));\n          }\n        } else {\n          assertNull(info, leftBits);\n          assertNull(info, rightBits);\n        }\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * checks that docvalues across all fields are equivalent\n   */\n  public void assertDocValuesEquals(String info, IndexReader leftReader, IndexReader rightReader) throws IOException {\n    Set<String> leftFields = getDVFields(leftReader);\n    Set<String> rightFields = getDVFields(rightReader);\n    assertEquals(info, leftFields, rightFields);\n\n    for (String field : leftFields) {\n      // TODO: clean this up... very messy\n      {\n        NumericDocValues leftValues = MultiDocValues.getNumericValues(leftReader, field);\n        NumericDocValues rightValues = MultiDocValues.getNumericValues(rightReader, field);\n        if (leftValues != null && rightValues != null) {\n          assertDocValuesEquals(info, leftReader.maxDoc(), leftValues, rightValues);\n        } else {\n          assertNull(info, leftValues);\n          assertNull(info, rightValues);\n        }\n      }\n\n      {\n        BinaryDocValues leftValues = MultiDocValues.getBinaryValues(leftReader, field);\n        BinaryDocValues rightValues = MultiDocValues.getBinaryValues(rightReader, field);\n        if (leftValues != null && rightValues != null) {\n          for(int docID=0;docID<leftReader.maxDoc();docID++) {\n            final BytesRef left = BytesRef.deepCopyOf(leftValues.get(docID));\n            final BytesRef right = rightValues.get(docID);\n            assertEquals(info, left, right);\n          }\n        } else {\n          assertNull(info, leftValues);\n          assertNull(info, rightValues);\n        }\n      }\n      \n      {\n        SortedDocValues leftValues = MultiDocValues.getSortedValues(leftReader, field);\n        SortedDocValues rightValues = MultiDocValues.getSortedValues(rightReader, field);\n        if (leftValues != null && rightValues != null) {\n          // numOrds\n          assertEquals(info, leftValues.getValueCount(), rightValues.getValueCount());\n          // ords\n          BytesRef scratchLeft = new BytesRef();\n          BytesRef scratchRight = new BytesRef();\n          for (int i = 0; i < leftValues.getValueCount(); i++) {\n            final BytesRef left = BytesRef.deepCopyOf(leftValues.lookupOrd(i));\n            final BytesRef right = rightValues.lookupOrd(i);\n            assertEquals(info, left, right);\n          }\n          // bytes\n          for(int docID=0;docID<leftReader.maxDoc();docID++) {\n            final BytesRef left = BytesRef.deepCopyOf(leftValues.get(docID));\n            final BytesRef right = rightValues.get(docID);\n            assertEquals(info, left, right);\n          }\n        } else {\n          assertNull(info, leftValues);\n          assertNull(info, rightValues);\n        }\n      }\n      \n      {\n        SortedSetDocValues leftValues = MultiDocValues.getSortedSetValues(leftReader, field);\n        SortedSetDocValues rightValues = MultiDocValues.getSortedSetValues(rightReader, field);\n        if (leftValues != null && rightValues != null) {\n          // numOrds\n          assertEquals(info, leftValues.getValueCount(), rightValues.getValueCount());\n          // ords\n          for (int i = 0; i < leftValues.getValueCount(); i++) {\n            final BytesRef left = BytesRef.deepCopyOf(leftValues.lookupOrd(i));\n            final BytesRef right = rightValues.lookupOrd(i);\n            assertEquals(info, left, right);\n          }\n          // ord lists\n          for(int docID=0;docID<leftReader.maxDoc();docID++) {\n            leftValues.setDocument(docID);\n            rightValues.setDocument(docID);\n            long ord;\n            while ((ord = leftValues.nextOrd()) != SortedSetDocValues.NO_MORE_ORDS) {\n              assertEquals(info, ord, rightValues.nextOrd());\n            }\n            assertEquals(info, SortedSetDocValues.NO_MORE_ORDS, rightValues.nextOrd());\n          }\n        } else {\n          assertNull(info, leftValues);\n          assertNull(info, rightValues);\n        }\n      }\n      \n      {\n        Bits leftBits = MultiDocValues.getDocsWithField(leftReader, field);\n        Bits rightBits = MultiDocValues.getDocsWithField(rightReader, field);\n        if (leftBits != null && rightBits != null) {\n          assertEquals(info, leftBits.length(), rightBits.length());\n          for (int i = 0; i < leftBits.length(); i++) {\n            assertEquals(info, leftBits.get(i), rightBits.get(i));\n          }\n        } else {\n          assertNull(info, leftBits);\n          assertNull(info, rightBits);\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c6f080a2ab37c464dd98db173f6cbf10dc74f211","date":1402946779,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#assertDocValuesEquals(String,IndexReader,IndexReader).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#assertDocValuesEquals(String,IndexReader,IndexReader).mjava","sourceNew":"  /**\n   * checks that docvalues across all fields are equivalent\n   */\n  public void assertDocValuesEquals(String info, IndexReader leftReader, IndexReader rightReader) throws IOException {\n    Set<String> leftFields = getDVFields(leftReader);\n    Set<String> rightFields = getDVFields(rightReader);\n    assertEquals(info, leftFields, rightFields);\n\n    for (String field : leftFields) {\n      // TODO: clean this up... very messy\n      {\n        NumericDocValues leftValues = MultiDocValues.getNumericValues(leftReader, field);\n        NumericDocValues rightValues = MultiDocValues.getNumericValues(rightReader, field);\n        if (leftValues != null && rightValues != null) {\n          assertDocValuesEquals(info, leftReader.maxDoc(), leftValues, rightValues);\n        } else {\n          assertNull(info, leftValues);\n          assertNull(info, rightValues);\n        }\n      }\n\n      {\n        BinaryDocValues leftValues = MultiDocValues.getBinaryValues(leftReader, field);\n        BinaryDocValues rightValues = MultiDocValues.getBinaryValues(rightReader, field);\n        if (leftValues != null && rightValues != null) {\n          for(int docID=0;docID<leftReader.maxDoc();docID++) {\n            final BytesRef left = BytesRef.deepCopyOf(leftValues.get(docID));\n            final BytesRef right = rightValues.get(docID);\n            assertEquals(info, left, right);\n          }\n        } else {\n          assertNull(info, leftValues);\n          assertNull(info, rightValues);\n        }\n      }\n      \n      {\n        SortedDocValues leftValues = MultiDocValues.getSortedValues(leftReader, field);\n        SortedDocValues rightValues = MultiDocValues.getSortedValues(rightReader, field);\n        if (leftValues != null && rightValues != null) {\n          // numOrds\n          assertEquals(info, leftValues.getValueCount(), rightValues.getValueCount());\n          // ords\n          BytesRef scratchLeft = new BytesRef();\n          BytesRef scratchRight = new BytesRef();\n          for (int i = 0; i < leftValues.getValueCount(); i++) {\n            final BytesRef left = BytesRef.deepCopyOf(leftValues.lookupOrd(i));\n            final BytesRef right = rightValues.lookupOrd(i);\n            assertEquals(info, left, right);\n          }\n          // bytes\n          for(int docID=0;docID<leftReader.maxDoc();docID++) {\n            final BytesRef left = BytesRef.deepCopyOf(leftValues.get(docID));\n            final BytesRef right = rightValues.get(docID);\n            assertEquals(info, left, right);\n          }\n        } else {\n          assertNull(info, leftValues);\n          assertNull(info, rightValues);\n        }\n      }\n      \n      {\n        SortedSetDocValues leftValues = MultiDocValues.getSortedSetValues(leftReader, field);\n        SortedSetDocValues rightValues = MultiDocValues.getSortedSetValues(rightReader, field);\n        if (leftValues != null && rightValues != null) {\n          // numOrds\n          assertEquals(info, leftValues.getValueCount(), rightValues.getValueCount());\n          // ords\n          for (int i = 0; i < leftValues.getValueCount(); i++) {\n            final BytesRef left = BytesRef.deepCopyOf(leftValues.lookupOrd(i));\n            final BytesRef right = rightValues.lookupOrd(i);\n            assertEquals(info, left, right);\n          }\n          // ord lists\n          for(int docID=0;docID<leftReader.maxDoc();docID++) {\n            leftValues.setDocument(docID);\n            rightValues.setDocument(docID);\n            long ord;\n            while ((ord = leftValues.nextOrd()) != SortedSetDocValues.NO_MORE_ORDS) {\n              assertEquals(info, ord, rightValues.nextOrd());\n            }\n            assertEquals(info, SortedSetDocValues.NO_MORE_ORDS, rightValues.nextOrd());\n          }\n        } else {\n          assertNull(info, leftValues);\n          assertNull(info, rightValues);\n        }\n      }\n      \n      {\n        SortedNumericDocValues leftValues = MultiDocValues.getSortedNumericValues(leftReader, field);\n        SortedNumericDocValues rightValues = MultiDocValues.getSortedNumericValues(rightReader, field);\n        if (leftValues != null && rightValues != null) {\n          for (int i = 0; i < leftReader.maxDoc(); i++) {\n            leftValues.setDocument(i);\n            long expected[] = new long[leftValues.count()];\n            for (int j = 0; j < expected.length; j++) {\n              expected[j] = leftValues.valueAt(j);\n            }\n            rightValues.setDocument(i);\n            for (int j = 0; j < expected.length; j++) {\n              assertEquals(info, expected[j], rightValues.valueAt(j));\n            }\n            assertEquals(info, expected.length, rightValues.count());\n          }\n        } else {\n          assertNull(info, leftValues);\n          assertNull(info, rightValues);\n        }\n      }\n      \n      {\n        Bits leftBits = MultiDocValues.getDocsWithField(leftReader, field);\n        Bits rightBits = MultiDocValues.getDocsWithField(rightReader, field);\n        if (leftBits != null && rightBits != null) {\n          assertEquals(info, leftBits.length(), rightBits.length());\n          for (int i = 0; i < leftBits.length(); i++) {\n            assertEquals(info, leftBits.get(i), rightBits.get(i));\n          }\n        } else {\n          assertNull(info, leftBits);\n          assertNull(info, rightBits);\n        }\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * checks that docvalues across all fields are equivalent\n   */\n  public void assertDocValuesEquals(String info, IndexReader leftReader, IndexReader rightReader) throws IOException {\n    Set<String> leftFields = getDVFields(leftReader);\n    Set<String> rightFields = getDVFields(rightReader);\n    assertEquals(info, leftFields, rightFields);\n\n    for (String field : leftFields) {\n      // TODO: clean this up... very messy\n      {\n        NumericDocValues leftValues = MultiDocValues.getNumericValues(leftReader, field);\n        NumericDocValues rightValues = MultiDocValues.getNumericValues(rightReader, field);\n        if (leftValues != null && rightValues != null) {\n          assertDocValuesEquals(info, leftReader.maxDoc(), leftValues, rightValues);\n        } else {\n          assertNull(info, leftValues);\n          assertNull(info, rightValues);\n        }\n      }\n\n      {\n        BinaryDocValues leftValues = MultiDocValues.getBinaryValues(leftReader, field);\n        BinaryDocValues rightValues = MultiDocValues.getBinaryValues(rightReader, field);\n        if (leftValues != null && rightValues != null) {\n          for(int docID=0;docID<leftReader.maxDoc();docID++) {\n            final BytesRef left = BytesRef.deepCopyOf(leftValues.get(docID));\n            final BytesRef right = rightValues.get(docID);\n            assertEquals(info, left, right);\n          }\n        } else {\n          assertNull(info, leftValues);\n          assertNull(info, rightValues);\n        }\n      }\n      \n      {\n        SortedDocValues leftValues = MultiDocValues.getSortedValues(leftReader, field);\n        SortedDocValues rightValues = MultiDocValues.getSortedValues(rightReader, field);\n        if (leftValues != null && rightValues != null) {\n          // numOrds\n          assertEquals(info, leftValues.getValueCount(), rightValues.getValueCount());\n          // ords\n          BytesRef scratchLeft = new BytesRef();\n          BytesRef scratchRight = new BytesRef();\n          for (int i = 0; i < leftValues.getValueCount(); i++) {\n            final BytesRef left = BytesRef.deepCopyOf(leftValues.lookupOrd(i));\n            final BytesRef right = rightValues.lookupOrd(i);\n            assertEquals(info, left, right);\n          }\n          // bytes\n          for(int docID=0;docID<leftReader.maxDoc();docID++) {\n            final BytesRef left = BytesRef.deepCopyOf(leftValues.get(docID));\n            final BytesRef right = rightValues.get(docID);\n            assertEquals(info, left, right);\n          }\n        } else {\n          assertNull(info, leftValues);\n          assertNull(info, rightValues);\n        }\n      }\n      \n      {\n        SortedSetDocValues leftValues = MultiDocValues.getSortedSetValues(leftReader, field);\n        SortedSetDocValues rightValues = MultiDocValues.getSortedSetValues(rightReader, field);\n        if (leftValues != null && rightValues != null) {\n          // numOrds\n          assertEquals(info, leftValues.getValueCount(), rightValues.getValueCount());\n          // ords\n          for (int i = 0; i < leftValues.getValueCount(); i++) {\n            final BytesRef left = BytesRef.deepCopyOf(leftValues.lookupOrd(i));\n            final BytesRef right = rightValues.lookupOrd(i);\n            assertEquals(info, left, right);\n          }\n          // ord lists\n          for(int docID=0;docID<leftReader.maxDoc();docID++) {\n            leftValues.setDocument(docID);\n            rightValues.setDocument(docID);\n            long ord;\n            while ((ord = leftValues.nextOrd()) != SortedSetDocValues.NO_MORE_ORDS) {\n              assertEquals(info, ord, rightValues.nextOrd());\n            }\n            assertEquals(info, SortedSetDocValues.NO_MORE_ORDS, rightValues.nextOrd());\n          }\n        } else {\n          assertNull(info, leftValues);\n          assertNull(info, rightValues);\n        }\n      }\n      \n      {\n        Bits leftBits = MultiDocValues.getDocsWithField(leftReader, field);\n        Bits rightBits = MultiDocValues.getDocsWithField(rightReader, field);\n        if (leftBits != null && rightBits != null) {\n          assertEquals(info, leftBits.length(), rightBits.length());\n          for (int i = 0; i < leftBits.length(); i++) {\n            assertEquals(info, leftBits.get(i), rightBits.get(i));\n          }\n        } else {\n          assertNull(info, leftBits);\n          assertNull(info, rightBits);\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d6b7c6630218ed9693cdb8643276513f9f0043f4","date":1406648084,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#assertDocValuesEquals(String,IndexReader,IndexReader).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#assertDocValuesEquals(String,IndexReader,IndexReader).mjava","sourceNew":"  /**\n   * checks that docvalues across all fields are equivalent\n   */\n  public void assertDocValuesEquals(String info, IndexReader leftReader, IndexReader rightReader) throws IOException {\n    Set<String> leftFields = getDVFields(leftReader);\n    Set<String> rightFields = getDVFields(rightReader);\n    assertEquals(info, leftFields, rightFields);\n\n    for (String field : leftFields) {\n      // TODO: clean this up... very messy\n      {\n        NumericDocValues leftValues = MultiDocValues.getNumericValues(leftReader, field);\n        NumericDocValues rightValues = MultiDocValues.getNumericValues(rightReader, field);\n        if (leftValues != null && rightValues != null) {\n          assertDocValuesEquals(info, leftReader.maxDoc(), leftValues, rightValues);\n        } else {\n          assertNull(info, leftValues);\n          assertNull(info, rightValues);\n        }\n      }\n\n      {\n        BinaryDocValues leftValues = MultiDocValues.getBinaryValues(leftReader, field);\n        BinaryDocValues rightValues = MultiDocValues.getBinaryValues(rightReader, field);\n        if (leftValues != null && rightValues != null) {\n          for(int docID=0;docID<leftReader.maxDoc();docID++) {\n            final BytesRef left = BytesRef.deepCopyOf(leftValues.get(docID));\n            final BytesRef right = rightValues.get(docID);\n            assertEquals(info, left, right);\n          }\n        } else {\n          assertNull(info, leftValues);\n          assertNull(info, rightValues);\n        }\n      }\n      \n      {\n        SortedDocValues leftValues = MultiDocValues.getSortedValues(leftReader, field);\n        SortedDocValues rightValues = MultiDocValues.getSortedValues(rightReader, field);\n        if (leftValues != null && rightValues != null) {\n          // numOrds\n          assertEquals(info, leftValues.getValueCount(), rightValues.getValueCount());\n          // ords\n          for (int i = 0; i < leftValues.getValueCount(); i++) {\n            final BytesRef left = BytesRef.deepCopyOf(leftValues.lookupOrd(i));\n            final BytesRef right = rightValues.lookupOrd(i);\n            assertEquals(info, left, right);\n          }\n          // bytes\n          for(int docID=0;docID<leftReader.maxDoc();docID++) {\n            final BytesRef left = BytesRef.deepCopyOf(leftValues.get(docID));\n            final BytesRef right = rightValues.get(docID);\n            assertEquals(info, left, right);\n          }\n        } else {\n          assertNull(info, leftValues);\n          assertNull(info, rightValues);\n        }\n      }\n      \n      {\n        SortedSetDocValues leftValues = MultiDocValues.getSortedSetValues(leftReader, field);\n        SortedSetDocValues rightValues = MultiDocValues.getSortedSetValues(rightReader, field);\n        if (leftValues != null && rightValues != null) {\n          // numOrds\n          assertEquals(info, leftValues.getValueCount(), rightValues.getValueCount());\n          // ords\n          for (int i = 0; i < leftValues.getValueCount(); i++) {\n            final BytesRef left = BytesRef.deepCopyOf(leftValues.lookupOrd(i));\n            final BytesRef right = rightValues.lookupOrd(i);\n            assertEquals(info, left, right);\n          }\n          // ord lists\n          for(int docID=0;docID<leftReader.maxDoc();docID++) {\n            leftValues.setDocument(docID);\n            rightValues.setDocument(docID);\n            long ord;\n            while ((ord = leftValues.nextOrd()) != SortedSetDocValues.NO_MORE_ORDS) {\n              assertEquals(info, ord, rightValues.nextOrd());\n            }\n            assertEquals(info, SortedSetDocValues.NO_MORE_ORDS, rightValues.nextOrd());\n          }\n        } else {\n          assertNull(info, leftValues);\n          assertNull(info, rightValues);\n        }\n      }\n      \n      {\n        SortedNumericDocValues leftValues = MultiDocValues.getSortedNumericValues(leftReader, field);\n        SortedNumericDocValues rightValues = MultiDocValues.getSortedNumericValues(rightReader, field);\n        if (leftValues != null && rightValues != null) {\n          for (int i = 0; i < leftReader.maxDoc(); i++) {\n            leftValues.setDocument(i);\n            long expected[] = new long[leftValues.count()];\n            for (int j = 0; j < expected.length; j++) {\n              expected[j] = leftValues.valueAt(j);\n            }\n            rightValues.setDocument(i);\n            for (int j = 0; j < expected.length; j++) {\n              assertEquals(info, expected[j], rightValues.valueAt(j));\n            }\n            assertEquals(info, expected.length, rightValues.count());\n          }\n        } else {\n          assertNull(info, leftValues);\n          assertNull(info, rightValues);\n        }\n      }\n      \n      {\n        Bits leftBits = MultiDocValues.getDocsWithField(leftReader, field);\n        Bits rightBits = MultiDocValues.getDocsWithField(rightReader, field);\n        if (leftBits != null && rightBits != null) {\n          assertEquals(info, leftBits.length(), rightBits.length());\n          for (int i = 0; i < leftBits.length(); i++) {\n            assertEquals(info, leftBits.get(i), rightBits.get(i));\n          }\n        } else {\n          assertNull(info, leftBits);\n          assertNull(info, rightBits);\n        }\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * checks that docvalues across all fields are equivalent\n   */\n  public void assertDocValuesEquals(String info, IndexReader leftReader, IndexReader rightReader) throws IOException {\n    Set<String> leftFields = getDVFields(leftReader);\n    Set<String> rightFields = getDVFields(rightReader);\n    assertEquals(info, leftFields, rightFields);\n\n    for (String field : leftFields) {\n      // TODO: clean this up... very messy\n      {\n        NumericDocValues leftValues = MultiDocValues.getNumericValues(leftReader, field);\n        NumericDocValues rightValues = MultiDocValues.getNumericValues(rightReader, field);\n        if (leftValues != null && rightValues != null) {\n          assertDocValuesEquals(info, leftReader.maxDoc(), leftValues, rightValues);\n        } else {\n          assertNull(info, leftValues);\n          assertNull(info, rightValues);\n        }\n      }\n\n      {\n        BinaryDocValues leftValues = MultiDocValues.getBinaryValues(leftReader, field);\n        BinaryDocValues rightValues = MultiDocValues.getBinaryValues(rightReader, field);\n        if (leftValues != null && rightValues != null) {\n          for(int docID=0;docID<leftReader.maxDoc();docID++) {\n            final BytesRef left = BytesRef.deepCopyOf(leftValues.get(docID));\n            final BytesRef right = rightValues.get(docID);\n            assertEquals(info, left, right);\n          }\n        } else {\n          assertNull(info, leftValues);\n          assertNull(info, rightValues);\n        }\n      }\n      \n      {\n        SortedDocValues leftValues = MultiDocValues.getSortedValues(leftReader, field);\n        SortedDocValues rightValues = MultiDocValues.getSortedValues(rightReader, field);\n        if (leftValues != null && rightValues != null) {\n          // numOrds\n          assertEquals(info, leftValues.getValueCount(), rightValues.getValueCount());\n          // ords\n          BytesRef scratchLeft = new BytesRef();\n          BytesRef scratchRight = new BytesRef();\n          for (int i = 0; i < leftValues.getValueCount(); i++) {\n            final BytesRef left = BytesRef.deepCopyOf(leftValues.lookupOrd(i));\n            final BytesRef right = rightValues.lookupOrd(i);\n            assertEquals(info, left, right);\n          }\n          // bytes\n          for(int docID=0;docID<leftReader.maxDoc();docID++) {\n            final BytesRef left = BytesRef.deepCopyOf(leftValues.get(docID));\n            final BytesRef right = rightValues.get(docID);\n            assertEquals(info, left, right);\n          }\n        } else {\n          assertNull(info, leftValues);\n          assertNull(info, rightValues);\n        }\n      }\n      \n      {\n        SortedSetDocValues leftValues = MultiDocValues.getSortedSetValues(leftReader, field);\n        SortedSetDocValues rightValues = MultiDocValues.getSortedSetValues(rightReader, field);\n        if (leftValues != null && rightValues != null) {\n          // numOrds\n          assertEquals(info, leftValues.getValueCount(), rightValues.getValueCount());\n          // ords\n          for (int i = 0; i < leftValues.getValueCount(); i++) {\n            final BytesRef left = BytesRef.deepCopyOf(leftValues.lookupOrd(i));\n            final BytesRef right = rightValues.lookupOrd(i);\n            assertEquals(info, left, right);\n          }\n          // ord lists\n          for(int docID=0;docID<leftReader.maxDoc();docID++) {\n            leftValues.setDocument(docID);\n            rightValues.setDocument(docID);\n            long ord;\n            while ((ord = leftValues.nextOrd()) != SortedSetDocValues.NO_MORE_ORDS) {\n              assertEquals(info, ord, rightValues.nextOrd());\n            }\n            assertEquals(info, SortedSetDocValues.NO_MORE_ORDS, rightValues.nextOrd());\n          }\n        } else {\n          assertNull(info, leftValues);\n          assertNull(info, rightValues);\n        }\n      }\n      \n      {\n        SortedNumericDocValues leftValues = MultiDocValues.getSortedNumericValues(leftReader, field);\n        SortedNumericDocValues rightValues = MultiDocValues.getSortedNumericValues(rightReader, field);\n        if (leftValues != null && rightValues != null) {\n          for (int i = 0; i < leftReader.maxDoc(); i++) {\n            leftValues.setDocument(i);\n            long expected[] = new long[leftValues.count()];\n            for (int j = 0; j < expected.length; j++) {\n              expected[j] = leftValues.valueAt(j);\n            }\n            rightValues.setDocument(i);\n            for (int j = 0; j < expected.length; j++) {\n              assertEquals(info, expected[j], rightValues.valueAt(j));\n            }\n            assertEquals(info, expected.length, rightValues.count());\n          }\n        } else {\n          assertNull(info, leftValues);\n          assertNull(info, rightValues);\n        }\n      }\n      \n      {\n        Bits leftBits = MultiDocValues.getDocsWithField(leftReader, field);\n        Bits rightBits = MultiDocValues.getDocsWithField(rightReader, field);\n        if (leftBits != null && rightBits != null) {\n          assertEquals(info, leftBits.length(), rightBits.length());\n          for (int i = 0; i < leftBits.length(); i++) {\n            assertEquals(info, leftBits.get(i), rightBits.get(i));\n          }\n        } else {\n          assertNull(info, leftBits);\n          assertNull(info, rightBits);\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6652c74b2358a0b13223817a6a793bf1c9d0749d","date":1474465301,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#assertDocValuesEquals(String,IndexReader,IndexReader).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#assertDocValuesEquals(String,IndexReader,IndexReader).mjava","sourceNew":"  /**\n   * checks that docvalues across all fields are equivalent\n   */\n  public void assertDocValuesEquals(String info, IndexReader leftReader, IndexReader rightReader) throws IOException {\n    Set<String> leftFields = getDVFields(leftReader);\n    Set<String> rightFields = getDVFields(rightReader);\n    assertEquals(info, leftFields, rightFields);\n\n    for (String field : leftFields) {\n      // TODO: clean this up... very messy\n      {\n        NumericDocValues leftValues = MultiDocValues.getNumericValues(leftReader, field);\n        NumericDocValues rightValues = MultiDocValues.getNumericValues(rightReader, field);\n        if (leftValues != null && rightValues != null) {\n          assertDocValuesEquals(info, leftReader.maxDoc(), leftValues, rightValues);\n        } else {\n          assertTrue(info + \": left numeric doc values for field=\\\"\" + field + \"\\\" are not null\", leftValues == null || leftValues.nextDoc() == NO_MORE_DOCS);\n          assertTrue(info + \": right numeric doc values for field=\\\"\" + field + \"\\\" are not null\", rightValues == null || rightValues.nextDoc() == NO_MORE_DOCS);\n        }\n      }\n\n      {\n        BinaryDocValues leftValues = MultiDocValues.getBinaryValues(leftReader, field);\n        BinaryDocValues rightValues = MultiDocValues.getBinaryValues(rightReader, field);\n        if (leftValues != null && rightValues != null) {\n          while (true) {\n            int docID = leftValues.nextDoc();\n            assertEquals(docID, rightValues.nextDoc());\n            if (docID == NO_MORE_DOCS) {\n              break;\n            }\n            assertEquals(leftValues.binaryValue(), rightValues.binaryValue());\n          }\n        } else {\n          assertTrue(info, leftValues == null || leftValues.nextDoc() == NO_MORE_DOCS);\n          assertTrue(info, rightValues == null || rightValues.nextDoc() == NO_MORE_DOCS);\n        }\n      }\n      \n      {\n        SortedDocValues leftValues = MultiDocValues.getSortedValues(leftReader, field);\n        SortedDocValues rightValues = MultiDocValues.getSortedValues(rightReader, field);\n        if (leftValues != null && rightValues != null) {\n          // numOrds\n          assertEquals(info, leftValues.getValueCount(), rightValues.getValueCount());\n          // ords\n          for (int i = 0; i < leftValues.getValueCount(); i++) {\n            final BytesRef left = BytesRef.deepCopyOf(leftValues.lookupOrd(i));\n            final BytesRef right = rightValues.lookupOrd(i);\n            assertEquals(info, left, right);\n          }\n          // bytes\n          for(int docID=0;docID<leftReader.maxDoc();docID++) {\n            assertEquals(docID, leftValues.nextDoc());\n            assertEquals(docID, rightValues.nextDoc());\n            final BytesRef left = BytesRef.deepCopyOf(leftValues.binaryValue());\n            final BytesRef right = rightValues.binaryValue();\n            assertEquals(info, left, right);\n          }\n        } else {\n          assertNull(info, leftValues);\n          assertNull(info, rightValues);\n        }\n      }\n      \n      {\n        SortedSetDocValues leftValues = MultiDocValues.getSortedSetValues(leftReader, field);\n        SortedSetDocValues rightValues = MultiDocValues.getSortedSetValues(rightReader, field);\n        if (leftValues != null && rightValues != null) {\n          // numOrds\n          assertEquals(info, leftValues.getValueCount(), rightValues.getValueCount());\n          // ords\n          for (int i = 0; i < leftValues.getValueCount(); i++) {\n            final BytesRef left = BytesRef.deepCopyOf(leftValues.lookupOrd(i));\n            final BytesRef right = rightValues.lookupOrd(i);\n            assertEquals(info, left, right);\n          }\n          // ord lists\n          while (true) {\n            int docID = leftValues.nextDoc();\n            assertEquals(docID, rightValues.nextDoc());\n            if (docID == NO_MORE_DOCS) {\n              break;\n            }\n            long ord;\n            while ((ord = leftValues.nextOrd()) != SortedSetDocValues.NO_MORE_ORDS) {\n              assertEquals(info, ord, rightValues.nextOrd());\n            }\n            assertEquals(info, SortedSetDocValues.NO_MORE_ORDS, rightValues.nextOrd());\n          }\n        } else {\n          assertNull(info, leftValues);\n          assertNull(info, rightValues);\n        }\n      }\n      \n      {\n        SortedNumericDocValues leftValues = MultiDocValues.getSortedNumericValues(leftReader, field);\n        SortedNumericDocValues rightValues = MultiDocValues.getSortedNumericValues(rightReader, field);\n        if (leftValues != null && rightValues != null) {\n          while (true) {\n            int docID = leftValues.nextDoc();\n            assertEquals(docID, rightValues.nextDoc());\n            if (docID == NO_MORE_DOCS) {\n              break;\n            }\n            assertEquals(info, leftValues.docValueCount(), rightValues.docValueCount());\n            for (int j = 0; j < leftValues.docValueCount(); j++) {\n              assertEquals(info, leftValues.nextValue(), rightValues.nextValue());\n            }\n          }\n        } else {\n          assertNull(info, leftValues);\n          assertNull(info, rightValues);\n        }\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * checks that docvalues across all fields are equivalent\n   */\n  public void assertDocValuesEquals(String info, IndexReader leftReader, IndexReader rightReader) throws IOException {\n    Set<String> leftFields = getDVFields(leftReader);\n    Set<String> rightFields = getDVFields(rightReader);\n    assertEquals(info, leftFields, rightFields);\n\n    for (String field : leftFields) {\n      // TODO: clean this up... very messy\n      {\n        NumericDocValues leftValues = MultiDocValues.getNumericValues(leftReader, field);\n        NumericDocValues rightValues = MultiDocValues.getNumericValues(rightReader, field);\n        if (leftValues != null && rightValues != null) {\n          assertDocValuesEquals(info, leftReader.maxDoc(), leftValues, rightValues);\n        } else {\n          assertNull(info, leftValues);\n          assertNull(info, rightValues);\n        }\n      }\n\n      {\n        BinaryDocValues leftValues = MultiDocValues.getBinaryValues(leftReader, field);\n        BinaryDocValues rightValues = MultiDocValues.getBinaryValues(rightReader, field);\n        if (leftValues != null && rightValues != null) {\n          for(int docID=0;docID<leftReader.maxDoc();docID++) {\n            final BytesRef left = BytesRef.deepCopyOf(leftValues.get(docID));\n            final BytesRef right = rightValues.get(docID);\n            assertEquals(info, left, right);\n          }\n        } else {\n          assertNull(info, leftValues);\n          assertNull(info, rightValues);\n        }\n      }\n      \n      {\n        SortedDocValues leftValues = MultiDocValues.getSortedValues(leftReader, field);\n        SortedDocValues rightValues = MultiDocValues.getSortedValues(rightReader, field);\n        if (leftValues != null && rightValues != null) {\n          // numOrds\n          assertEquals(info, leftValues.getValueCount(), rightValues.getValueCount());\n          // ords\n          for (int i = 0; i < leftValues.getValueCount(); i++) {\n            final BytesRef left = BytesRef.deepCopyOf(leftValues.lookupOrd(i));\n            final BytesRef right = rightValues.lookupOrd(i);\n            assertEquals(info, left, right);\n          }\n          // bytes\n          for(int docID=0;docID<leftReader.maxDoc();docID++) {\n            final BytesRef left = BytesRef.deepCopyOf(leftValues.get(docID));\n            final BytesRef right = rightValues.get(docID);\n            assertEquals(info, left, right);\n          }\n        } else {\n          assertNull(info, leftValues);\n          assertNull(info, rightValues);\n        }\n      }\n      \n      {\n        SortedSetDocValues leftValues = MultiDocValues.getSortedSetValues(leftReader, field);\n        SortedSetDocValues rightValues = MultiDocValues.getSortedSetValues(rightReader, field);\n        if (leftValues != null && rightValues != null) {\n          // numOrds\n          assertEquals(info, leftValues.getValueCount(), rightValues.getValueCount());\n          // ords\n          for (int i = 0; i < leftValues.getValueCount(); i++) {\n            final BytesRef left = BytesRef.deepCopyOf(leftValues.lookupOrd(i));\n            final BytesRef right = rightValues.lookupOrd(i);\n            assertEquals(info, left, right);\n          }\n          // ord lists\n          for(int docID=0;docID<leftReader.maxDoc();docID++) {\n            leftValues.setDocument(docID);\n            rightValues.setDocument(docID);\n            long ord;\n            while ((ord = leftValues.nextOrd()) != SortedSetDocValues.NO_MORE_ORDS) {\n              assertEquals(info, ord, rightValues.nextOrd());\n            }\n            assertEquals(info, SortedSetDocValues.NO_MORE_ORDS, rightValues.nextOrd());\n          }\n        } else {\n          assertNull(info, leftValues);\n          assertNull(info, rightValues);\n        }\n      }\n      \n      {\n        SortedNumericDocValues leftValues = MultiDocValues.getSortedNumericValues(leftReader, field);\n        SortedNumericDocValues rightValues = MultiDocValues.getSortedNumericValues(rightReader, field);\n        if (leftValues != null && rightValues != null) {\n          for (int i = 0; i < leftReader.maxDoc(); i++) {\n            leftValues.setDocument(i);\n            long expected[] = new long[leftValues.count()];\n            for (int j = 0; j < expected.length; j++) {\n              expected[j] = leftValues.valueAt(j);\n            }\n            rightValues.setDocument(i);\n            for (int j = 0; j < expected.length; j++) {\n              assertEquals(info, expected[j], rightValues.valueAt(j));\n            }\n            assertEquals(info, expected.length, rightValues.count());\n          }\n        } else {\n          assertNull(info, leftValues);\n          assertNull(info, rightValues);\n        }\n      }\n      \n      {\n        Bits leftBits = MultiDocValues.getDocsWithField(leftReader, field);\n        Bits rightBits = MultiDocValues.getDocsWithField(rightReader, field);\n        if (leftBits != null && rightBits != null) {\n          assertEquals(info, leftBits.length(), rightBits.length());\n          for (int i = 0; i < leftBits.length(); i++) {\n            assertEquals(info, leftBits.get(i), rightBits.get(i));\n          }\n        } else {\n          assertNull(info, leftBits);\n          assertNull(info, rightBits);\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17e5da53e4e5bd659e22add9bba1cfa222e7e30d","date":1475435902,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#assertDocValuesEquals(String,IndexReader,IndexReader).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#assertDocValuesEquals(String,IndexReader,IndexReader).mjava","sourceNew":"  /**\n   * checks that docvalues across all fields are equivalent\n   */\n  public void assertDocValuesEquals(String info, IndexReader leftReader, IndexReader rightReader) throws IOException {\n    Set<String> leftFields = getDVFields(leftReader);\n    Set<String> rightFields = getDVFields(rightReader);\n    assertEquals(info, leftFields, rightFields);\n\n    for (String field : leftFields) {\n      // TODO: clean this up... very messy\n      {\n        NumericDocValues leftValues = MultiDocValues.getNumericValues(leftReader, field);\n        NumericDocValues rightValues = MultiDocValues.getNumericValues(rightReader, field);\n        if (leftValues != null && rightValues != null) {\n          assertDocValuesEquals(info, leftReader.maxDoc(), leftValues, rightValues);\n        } else {\n          assertTrue(info + \": left numeric doc values for field=\\\"\" + field + \"\\\" are not null\", leftValues == null || leftValues.nextDoc() == NO_MORE_DOCS);\n          assertTrue(info + \": right numeric doc values for field=\\\"\" + field + \"\\\" are not null\", rightValues == null || rightValues.nextDoc() == NO_MORE_DOCS);\n        }\n      }\n\n      {\n        BinaryDocValues leftValues = MultiDocValues.getBinaryValues(leftReader, field);\n        BinaryDocValues rightValues = MultiDocValues.getBinaryValues(rightReader, field);\n        if (leftValues != null && rightValues != null) {\n          while (true) {\n            int docID = leftValues.nextDoc();\n            assertEquals(docID, rightValues.nextDoc());\n            if (docID == NO_MORE_DOCS) {\n              break;\n            }\n            assertEquals(leftValues.binaryValue(), rightValues.binaryValue());\n          }\n        } else {\n          assertTrue(info, leftValues == null || leftValues.nextDoc() == NO_MORE_DOCS);\n          assertTrue(info, rightValues == null || rightValues.nextDoc() == NO_MORE_DOCS);\n        }\n      }\n      \n      {\n        SortedDocValues leftValues = MultiDocValues.getSortedValues(leftReader, field);\n        SortedDocValues rightValues = MultiDocValues.getSortedValues(rightReader, field);\n        if (leftValues != null && rightValues != null) {\n          // numOrds\n          assertEquals(info, leftValues.getValueCount(), rightValues.getValueCount());\n          // ords\n          for (int i = 0; i < leftValues.getValueCount(); i++) {\n            final BytesRef left = BytesRef.deepCopyOf(leftValues.lookupOrd(i));\n            final BytesRef right = rightValues.lookupOrd(i);\n            assertEquals(info, left, right);\n          }\n          // bytes\n          for(int docID=0;docID<leftReader.maxDoc();docID++) {\n            assertEquals(docID, leftValues.nextDoc());\n            assertEquals(docID, rightValues.nextDoc());\n            final BytesRef left = BytesRef.deepCopyOf(leftValues.binaryValue());\n            final BytesRef right = rightValues.binaryValue();\n            assertEquals(info, left, right);\n          }\n        } else {\n          assertNull(info, leftValues);\n          assertNull(info, rightValues);\n        }\n      }\n      \n      {\n        SortedSetDocValues leftValues = MultiDocValues.getSortedSetValues(leftReader, field);\n        SortedSetDocValues rightValues = MultiDocValues.getSortedSetValues(rightReader, field);\n        if (leftValues != null && rightValues != null) {\n          // numOrds\n          assertEquals(info, leftValues.getValueCount(), rightValues.getValueCount());\n          // ords\n          for (int i = 0; i < leftValues.getValueCount(); i++) {\n            final BytesRef left = BytesRef.deepCopyOf(leftValues.lookupOrd(i));\n            final BytesRef right = rightValues.lookupOrd(i);\n            assertEquals(info, left, right);\n          }\n          // ord lists\n          while (true) {\n            int docID = leftValues.nextDoc();\n            assertEquals(docID, rightValues.nextDoc());\n            if (docID == NO_MORE_DOCS) {\n              break;\n            }\n            long ord;\n            while ((ord = leftValues.nextOrd()) != SortedSetDocValues.NO_MORE_ORDS) {\n              assertEquals(info, ord, rightValues.nextOrd());\n            }\n            assertEquals(info, SortedSetDocValues.NO_MORE_ORDS, rightValues.nextOrd());\n          }\n        } else {\n          assertNull(info, leftValues);\n          assertNull(info, rightValues);\n        }\n      }\n      \n      {\n        SortedNumericDocValues leftValues = MultiDocValues.getSortedNumericValues(leftReader, field);\n        SortedNumericDocValues rightValues = MultiDocValues.getSortedNumericValues(rightReader, field);\n        if (leftValues != null && rightValues != null) {\n          while (true) {\n            int docID = leftValues.nextDoc();\n            assertEquals(docID, rightValues.nextDoc());\n            if (docID == NO_MORE_DOCS) {\n              break;\n            }\n            assertEquals(info, leftValues.docValueCount(), rightValues.docValueCount());\n            for (int j = 0; j < leftValues.docValueCount(); j++) {\n              assertEquals(info, leftValues.nextValue(), rightValues.nextValue());\n            }\n          }\n        } else {\n          assertNull(info, leftValues);\n          assertNull(info, rightValues);\n        }\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * checks that docvalues across all fields are equivalent\n   */\n  public void assertDocValuesEquals(String info, IndexReader leftReader, IndexReader rightReader) throws IOException {\n    Set<String> leftFields = getDVFields(leftReader);\n    Set<String> rightFields = getDVFields(rightReader);\n    assertEquals(info, leftFields, rightFields);\n\n    for (String field : leftFields) {\n      // TODO: clean this up... very messy\n      {\n        NumericDocValues leftValues = MultiDocValues.getNumericValues(leftReader, field);\n        NumericDocValues rightValues = MultiDocValues.getNumericValues(rightReader, field);\n        if (leftValues != null && rightValues != null) {\n          assertDocValuesEquals(info, leftReader.maxDoc(), leftValues, rightValues);\n        } else {\n          assertNull(info, leftValues);\n          assertNull(info, rightValues);\n        }\n      }\n\n      {\n        BinaryDocValues leftValues = MultiDocValues.getBinaryValues(leftReader, field);\n        BinaryDocValues rightValues = MultiDocValues.getBinaryValues(rightReader, field);\n        if (leftValues != null && rightValues != null) {\n          for(int docID=0;docID<leftReader.maxDoc();docID++) {\n            final BytesRef left = BytesRef.deepCopyOf(leftValues.get(docID));\n            final BytesRef right = rightValues.get(docID);\n            assertEquals(info, left, right);\n          }\n        } else {\n          assertNull(info, leftValues);\n          assertNull(info, rightValues);\n        }\n      }\n      \n      {\n        SortedDocValues leftValues = MultiDocValues.getSortedValues(leftReader, field);\n        SortedDocValues rightValues = MultiDocValues.getSortedValues(rightReader, field);\n        if (leftValues != null && rightValues != null) {\n          // numOrds\n          assertEquals(info, leftValues.getValueCount(), rightValues.getValueCount());\n          // ords\n          for (int i = 0; i < leftValues.getValueCount(); i++) {\n            final BytesRef left = BytesRef.deepCopyOf(leftValues.lookupOrd(i));\n            final BytesRef right = rightValues.lookupOrd(i);\n            assertEquals(info, left, right);\n          }\n          // bytes\n          for(int docID=0;docID<leftReader.maxDoc();docID++) {\n            final BytesRef left = BytesRef.deepCopyOf(leftValues.get(docID));\n            final BytesRef right = rightValues.get(docID);\n            assertEquals(info, left, right);\n          }\n        } else {\n          assertNull(info, leftValues);\n          assertNull(info, rightValues);\n        }\n      }\n      \n      {\n        SortedSetDocValues leftValues = MultiDocValues.getSortedSetValues(leftReader, field);\n        SortedSetDocValues rightValues = MultiDocValues.getSortedSetValues(rightReader, field);\n        if (leftValues != null && rightValues != null) {\n          // numOrds\n          assertEquals(info, leftValues.getValueCount(), rightValues.getValueCount());\n          // ords\n          for (int i = 0; i < leftValues.getValueCount(); i++) {\n            final BytesRef left = BytesRef.deepCopyOf(leftValues.lookupOrd(i));\n            final BytesRef right = rightValues.lookupOrd(i);\n            assertEquals(info, left, right);\n          }\n          // ord lists\n          for(int docID=0;docID<leftReader.maxDoc();docID++) {\n            leftValues.setDocument(docID);\n            rightValues.setDocument(docID);\n            long ord;\n            while ((ord = leftValues.nextOrd()) != SortedSetDocValues.NO_MORE_ORDS) {\n              assertEquals(info, ord, rightValues.nextOrd());\n            }\n            assertEquals(info, SortedSetDocValues.NO_MORE_ORDS, rightValues.nextOrd());\n          }\n        } else {\n          assertNull(info, leftValues);\n          assertNull(info, rightValues);\n        }\n      }\n      \n      {\n        SortedNumericDocValues leftValues = MultiDocValues.getSortedNumericValues(leftReader, field);\n        SortedNumericDocValues rightValues = MultiDocValues.getSortedNumericValues(rightReader, field);\n        if (leftValues != null && rightValues != null) {\n          for (int i = 0; i < leftReader.maxDoc(); i++) {\n            leftValues.setDocument(i);\n            long expected[] = new long[leftValues.count()];\n            for (int j = 0; j < expected.length; j++) {\n              expected[j] = leftValues.valueAt(j);\n            }\n            rightValues.setDocument(i);\n            for (int j = 0; j < expected.length; j++) {\n              assertEquals(info, expected[j], rightValues.valueAt(j));\n            }\n            assertEquals(info, expected.length, rightValues.count());\n          }\n        } else {\n          assertNull(info, leftValues);\n          assertNull(info, rightValues);\n        }\n      }\n      \n      {\n        Bits leftBits = MultiDocValues.getDocsWithField(leftReader, field);\n        Bits rightBits = MultiDocValues.getDocsWithField(rightReader, field);\n        if (leftBits != null && rightBits != null) {\n          assertEquals(info, leftBits.length(), rightBits.length());\n          for (int i = 0; i < leftBits.length(); i++) {\n            assertEquals(info, leftBits.get(i), rightBits.get(i));\n          }\n        } else {\n          assertNull(info, leftBits);\n          assertNull(info, rightBits);\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#assertDocValuesEquals(String,IndexReader,IndexReader).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/LuceneTestCase#assertDocValuesEquals(String,IndexReader,IndexReader).mjava","sourceNew":"  /**\n   * checks that docvalues across all fields are equivalent\n   */\n  public void assertDocValuesEquals(String info, IndexReader leftReader, IndexReader rightReader) throws IOException {\n    Set<String> leftFields = getDVFields(leftReader);\n    Set<String> rightFields = getDVFields(rightReader);\n    assertEquals(info, leftFields, rightFields);\n\n    for (String field : leftFields) {\n      // TODO: clean this up... very messy\n      {\n        NumericDocValues leftValues = MultiDocValues.getNumericValues(leftReader, field);\n        NumericDocValues rightValues = MultiDocValues.getNumericValues(rightReader, field);\n        if (leftValues != null && rightValues != null) {\n          assertDocValuesEquals(info, leftReader.maxDoc(), leftValues, rightValues);\n        } else {\n          assertTrue(info + \": left numeric doc values for field=\\\"\" + field + \"\\\" are not null\", leftValues == null || leftValues.nextDoc() == NO_MORE_DOCS);\n          assertTrue(info + \": right numeric doc values for field=\\\"\" + field + \"\\\" are not null\", rightValues == null || rightValues.nextDoc() == NO_MORE_DOCS);\n        }\n      }\n\n      {\n        BinaryDocValues leftValues = MultiDocValues.getBinaryValues(leftReader, field);\n        BinaryDocValues rightValues = MultiDocValues.getBinaryValues(rightReader, field);\n        if (leftValues != null && rightValues != null) {\n          while (true) {\n            int docID = leftValues.nextDoc();\n            assertEquals(docID, rightValues.nextDoc());\n            if (docID == NO_MORE_DOCS) {\n              break;\n            }\n            assertEquals(leftValues.binaryValue(), rightValues.binaryValue());\n          }\n        } else {\n          assertTrue(info, leftValues == null || leftValues.nextDoc() == NO_MORE_DOCS);\n          assertTrue(info, rightValues == null || rightValues.nextDoc() == NO_MORE_DOCS);\n        }\n      }\n      \n      {\n        SortedDocValues leftValues = MultiDocValues.getSortedValues(leftReader, field);\n        SortedDocValues rightValues = MultiDocValues.getSortedValues(rightReader, field);\n        if (leftValues != null && rightValues != null) {\n          // numOrds\n          assertEquals(info, leftValues.getValueCount(), rightValues.getValueCount());\n          // ords\n          for (int i = 0; i < leftValues.getValueCount(); i++) {\n            final BytesRef left = BytesRef.deepCopyOf(leftValues.lookupOrd(i));\n            final BytesRef right = rightValues.lookupOrd(i);\n            assertEquals(info, left, right);\n          }\n          // bytes\n          for(int docID=0;docID<leftReader.maxDoc();docID++) {\n            assertEquals(docID, leftValues.nextDoc());\n            assertEquals(docID, rightValues.nextDoc());\n            final BytesRef left = BytesRef.deepCopyOf(leftValues.binaryValue());\n            final BytesRef right = rightValues.binaryValue();\n            assertEquals(info, left, right);\n          }\n        } else {\n          assertNull(info, leftValues);\n          assertNull(info, rightValues);\n        }\n      }\n      \n      {\n        SortedSetDocValues leftValues = MultiDocValues.getSortedSetValues(leftReader, field);\n        SortedSetDocValues rightValues = MultiDocValues.getSortedSetValues(rightReader, field);\n        if (leftValues != null && rightValues != null) {\n          // numOrds\n          assertEquals(info, leftValues.getValueCount(), rightValues.getValueCount());\n          // ords\n          for (int i = 0; i < leftValues.getValueCount(); i++) {\n            final BytesRef left = BytesRef.deepCopyOf(leftValues.lookupOrd(i));\n            final BytesRef right = rightValues.lookupOrd(i);\n            assertEquals(info, left, right);\n          }\n          // ord lists\n          while (true) {\n            int docID = leftValues.nextDoc();\n            assertEquals(docID, rightValues.nextDoc());\n            if (docID == NO_MORE_DOCS) {\n              break;\n            }\n            long ord;\n            while ((ord = leftValues.nextOrd()) != SortedSetDocValues.NO_MORE_ORDS) {\n              assertEquals(info, ord, rightValues.nextOrd());\n            }\n            assertEquals(info, SortedSetDocValues.NO_MORE_ORDS, rightValues.nextOrd());\n          }\n        } else {\n          assertNull(info, leftValues);\n          assertNull(info, rightValues);\n        }\n      }\n      \n      {\n        SortedNumericDocValues leftValues = MultiDocValues.getSortedNumericValues(leftReader, field);\n        SortedNumericDocValues rightValues = MultiDocValues.getSortedNumericValues(rightReader, field);\n        if (leftValues != null && rightValues != null) {\n          while (true) {\n            int docID = leftValues.nextDoc();\n            assertEquals(docID, rightValues.nextDoc());\n            if (docID == NO_MORE_DOCS) {\n              break;\n            }\n            assertEquals(info, leftValues.docValueCount(), rightValues.docValueCount());\n            for (int j = 0; j < leftValues.docValueCount(); j++) {\n              assertEquals(info, leftValues.nextValue(), rightValues.nextValue());\n            }\n          }\n        } else {\n          assertNull(info, leftValues);\n          assertNull(info, rightValues);\n        }\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * checks that docvalues across all fields are equivalent\n   */\n  public void assertDocValuesEquals(String info, IndexReader leftReader, IndexReader rightReader) throws IOException {\n    Set<String> leftFields = getDVFields(leftReader);\n    Set<String> rightFields = getDVFields(rightReader);\n    assertEquals(info, leftFields, rightFields);\n\n    for (String field : leftFields) {\n      // TODO: clean this up... very messy\n      {\n        NumericDocValues leftValues = MultiDocValues.getNumericValues(leftReader, field);\n        NumericDocValues rightValues = MultiDocValues.getNumericValues(rightReader, field);\n        if (leftValues != null && rightValues != null) {\n          assertDocValuesEquals(info, leftReader.maxDoc(), leftValues, rightValues);\n        } else {\n          assertNull(info, leftValues);\n          assertNull(info, rightValues);\n        }\n      }\n\n      {\n        BinaryDocValues leftValues = MultiDocValues.getBinaryValues(leftReader, field);\n        BinaryDocValues rightValues = MultiDocValues.getBinaryValues(rightReader, field);\n        if (leftValues != null && rightValues != null) {\n          for(int docID=0;docID<leftReader.maxDoc();docID++) {\n            final BytesRef left = BytesRef.deepCopyOf(leftValues.get(docID));\n            final BytesRef right = rightValues.get(docID);\n            assertEquals(info, left, right);\n          }\n        } else {\n          assertNull(info, leftValues);\n          assertNull(info, rightValues);\n        }\n      }\n      \n      {\n        SortedDocValues leftValues = MultiDocValues.getSortedValues(leftReader, field);\n        SortedDocValues rightValues = MultiDocValues.getSortedValues(rightReader, field);\n        if (leftValues != null && rightValues != null) {\n          // numOrds\n          assertEquals(info, leftValues.getValueCount(), rightValues.getValueCount());\n          // ords\n          for (int i = 0; i < leftValues.getValueCount(); i++) {\n            final BytesRef left = BytesRef.deepCopyOf(leftValues.lookupOrd(i));\n            final BytesRef right = rightValues.lookupOrd(i);\n            assertEquals(info, left, right);\n          }\n          // bytes\n          for(int docID=0;docID<leftReader.maxDoc();docID++) {\n            final BytesRef left = BytesRef.deepCopyOf(leftValues.get(docID));\n            final BytesRef right = rightValues.get(docID);\n            assertEquals(info, left, right);\n          }\n        } else {\n          assertNull(info, leftValues);\n          assertNull(info, rightValues);\n        }\n      }\n      \n      {\n        SortedSetDocValues leftValues = MultiDocValues.getSortedSetValues(leftReader, field);\n        SortedSetDocValues rightValues = MultiDocValues.getSortedSetValues(rightReader, field);\n        if (leftValues != null && rightValues != null) {\n          // numOrds\n          assertEquals(info, leftValues.getValueCount(), rightValues.getValueCount());\n          // ords\n          for (int i = 0; i < leftValues.getValueCount(); i++) {\n            final BytesRef left = BytesRef.deepCopyOf(leftValues.lookupOrd(i));\n            final BytesRef right = rightValues.lookupOrd(i);\n            assertEquals(info, left, right);\n          }\n          // ord lists\n          for(int docID=0;docID<leftReader.maxDoc();docID++) {\n            leftValues.setDocument(docID);\n            rightValues.setDocument(docID);\n            long ord;\n            while ((ord = leftValues.nextOrd()) != SortedSetDocValues.NO_MORE_ORDS) {\n              assertEquals(info, ord, rightValues.nextOrd());\n            }\n            assertEquals(info, SortedSetDocValues.NO_MORE_ORDS, rightValues.nextOrd());\n          }\n        } else {\n          assertNull(info, leftValues);\n          assertNull(info, rightValues);\n        }\n      }\n      \n      {\n        SortedNumericDocValues leftValues = MultiDocValues.getSortedNumericValues(leftReader, field);\n        SortedNumericDocValues rightValues = MultiDocValues.getSortedNumericValues(rightReader, field);\n        if (leftValues != null && rightValues != null) {\n          for (int i = 0; i < leftReader.maxDoc(); i++) {\n            leftValues.setDocument(i);\n            long expected[] = new long[leftValues.count()];\n            for (int j = 0; j < expected.length; j++) {\n              expected[j] = leftValues.valueAt(j);\n            }\n            rightValues.setDocument(i);\n            for (int j = 0; j < expected.length; j++) {\n              assertEquals(info, expected[j], rightValues.valueAt(j));\n            }\n            assertEquals(info, expected.length, rightValues.count());\n          }\n        } else {\n          assertNull(info, leftValues);\n          assertNull(info, rightValues);\n        }\n      }\n      \n      {\n        Bits leftBits = MultiDocValues.getDocsWithField(leftReader, field);\n        Bits rightBits = MultiDocValues.getDocsWithField(rightReader, field);\n        if (leftBits != null && rightBits != null) {\n          assertEquals(info, leftBits.length(), rightBits.length());\n          for (int i = 0; i < leftBits.length(); i++) {\n            assertEquals(info, leftBits.get(i), rightBits.get(i));\n          }\n        } else {\n          assertNull(info, leftBits);\n          assertNull(info, rightBits);\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"53fc2f4c5ce4f2053be3d5f5d14d79129ebb4bbf":["e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff"],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":["51c8450b3b616b6777f722ff4083c0bf946381a2","e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff"],"c34fec2bc086f82b8ffc8374cf54d0013f94804a":["51c8450b3b616b6777f722ff4083c0bf946381a2"],"e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff":["51c8450b3b616b6777f722ff4083c0bf946381a2","c34fec2bc086f82b8ffc8374cf54d0013f94804a"],"c6f080a2ab37c464dd98db173f6cbf10dc74f211":["53fc2f4c5ce4f2053be3d5f5d14d79129ebb4bbf","d14ffaac9c4a4a2c750bf0cd956506802561e062"],"51c8450b3b616b6777f722ff4083c0bf946381a2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["d6b7c6630218ed9693cdb8643276513f9f0043f4","17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["d6b7c6630218ed9693cdb8643276513f9f0043f4","6652c74b2358a0b13223817a6a793bf1c9d0749d"],"6652c74b2358a0b13223817a6a793bf1c9d0749d":["d6b7c6630218ed9693cdb8643276513f9f0043f4"],"d6b7c6630218ed9693cdb8643276513f9f0043f4":["d14ffaac9c4a4a2c750bf0cd956506802561e062"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"d14ffaac9c4a4a2c750bf0cd956506802561e062":["53fc2f4c5ce4f2053be3d5f5d14d79129ebb4bbf"]},"commit2Childs":{"53fc2f4c5ce4f2053be3d5f5d14d79129ebb4bbf":["c6f080a2ab37c464dd98db173f6cbf10dc74f211","d14ffaac9c4a4a2c750bf0cd956506802561e062"],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":[],"c34fec2bc086f82b8ffc8374cf54d0013f94804a":["e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff"],"e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff":["53fc2f4c5ce4f2053be3d5f5d14d79129ebb4bbf","3dffec77fb8f7d0e9ca4869dddd6af94528b4576"],"c6f080a2ab37c464dd98db173f6cbf10dc74f211":[],"51c8450b3b616b6777f722ff4083c0bf946381a2":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","c34fec2bc086f82b8ffc8374cf54d0013f94804a","e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["51c8450b3b616b6777f722ff4083c0bf946381a2"],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"6652c74b2358a0b13223817a6a793bf1c9d0749d":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"d6b7c6630218ed9693cdb8643276513f9f0043f4":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","17e5da53e4e5bd659e22add9bba1cfa222e7e30d","6652c74b2358a0b13223817a6a793bf1c9d0749d"],"d14ffaac9c4a4a2c750bf0cd956506802561e062":["c6f080a2ab37c464dd98db173f6cbf10dc74f211","d6b7c6630218ed9693cdb8643276513f9f0043f4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","c6f080a2ab37c464dd98db173f6cbf10dc74f211","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}