{"path":"solr/core/src/test/org/apache/solr/schema/ChangedSchemaMergeTest#init().mjava","commits":[{"id":"13c0d2271b68b77948ffb1638422f718c79778c0","date":1383607272,"type":0,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/schema/ChangedSchemaMergeTest#init().mjava","pathOld":"/dev/null","sourceNew":"  private CoreContainer init() throws Exception {\n\n    if (solrHomeDirectory.exists()) {\n      FileUtils.deleteDirectory(solrHomeDirectory);\n    }\n    assertTrue(\"Failed to mkdirs workDir\", solrHomeDirectory.mkdirs());\n    File changed = new File(solrHomeDirectory, \"changed\");\n    copyMinConf(changed, \"name=changed\");\n    // Overlay with my local schema\n    schemaFile = new File(new File(changed, \"conf\"), \"schema.xml\");\n    FileUtils.writeStringToFile(schemaFile, withWhich, Charsets.UTF_8.toString());\n\n    String discoveryXml = \"<solr></solr>\";\n    File solrXml = new File(solrHomeDirectory, \"solr.xml\");\n    FileUtils.write(solrXml, discoveryXml, Charsets.UTF_8.toString());\n\n    final CoreContainer cores = new CoreContainer(solrHomeDirectory.getAbsolutePath());\n    cores.load();\n    return cores;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0d579490a72f2e6297eaa648940611234c57cf1","date":1395917140,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/schema/ChangedSchemaMergeTest#init().mjava","pathOld":"solr/core/src/test/org/apache/solr/schema/ChangedSchemaMergeTest#init().mjava","sourceNew":"  private CoreContainer init() throws Exception {\n    solrHomeDirectory = TestUtil.createTempDir(LuceneTestCase.getTestClass().getSimpleName());\n    File changed = new File(solrHomeDirectory, \"changed\");\n    copyMinConf(changed, \"name=changed\");\n    // Overlay with my local schema\n    schemaFile = new File(new File(changed, \"conf\"), \"schema.xml\");\n    FileUtils.writeStringToFile(schemaFile, withWhich, Charsets.UTF_8.toString());\n\n    String discoveryXml = \"<solr></solr>\";\n    File solrXml = new File(solrHomeDirectory, \"solr.xml\");\n    FileUtils.write(solrXml, discoveryXml, Charsets.UTF_8.toString());\n\n    final CoreContainer cores = new CoreContainer(solrHomeDirectory.getAbsolutePath());\n    cores.load();\n    return cores;\n  }\n\n","sourceOld":"  private CoreContainer init() throws Exception {\n\n    if (solrHomeDirectory.exists()) {\n      FileUtils.deleteDirectory(solrHomeDirectory);\n    }\n    assertTrue(\"Failed to mkdirs workDir\", solrHomeDirectory.mkdirs());\n    File changed = new File(solrHomeDirectory, \"changed\");\n    copyMinConf(changed, \"name=changed\");\n    // Overlay with my local schema\n    schemaFile = new File(new File(changed, \"conf\"), \"schema.xml\");\n    FileUtils.writeStringToFile(schemaFile, withWhich, Charsets.UTF_8.toString());\n\n    String discoveryXml = \"<solr></solr>\";\n    File solrXml = new File(solrHomeDirectory, \"solr.xml\");\n    FileUtils.write(solrXml, discoveryXml, Charsets.UTF_8.toString());\n\n    final CoreContainer cores = new CoreContainer(solrHomeDirectory.getAbsolutePath());\n    cores.load();\n    return cores;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb1f22cfa77230b5f05b7784feae5367f6bbb488","date":1395968145,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/schema/ChangedSchemaMergeTest#init().mjava","pathOld":"solr/core/src/test/org/apache/solr/schema/ChangedSchemaMergeTest#init().mjava","sourceNew":"  private CoreContainer init() throws Exception {\n    File changed = new File(solrHomeDirectory, \"changed\");\n    copyMinConf(changed, \"name=changed\");\n    // Overlay with my local schema\n    schemaFile = new File(new File(changed, \"conf\"), \"schema.xml\");\n    FileUtils.writeStringToFile(schemaFile, withWhich, Charsets.UTF_8.toString());\n\n    String discoveryXml = \"<solr></solr>\";\n    File solrXml = new File(solrHomeDirectory, \"solr.xml\");\n    FileUtils.write(solrXml, discoveryXml, Charsets.UTF_8.toString());\n\n    final CoreContainer cores = new CoreContainer(solrHomeDirectory.getAbsolutePath());\n    cores.load();\n    return cores;\n  }\n\n","sourceOld":"  private CoreContainer init() throws Exception {\n    solrHomeDirectory = TestUtil.createTempDir(LuceneTestCase.getTestClass().getSimpleName());\n    File changed = new File(solrHomeDirectory, \"changed\");\n    copyMinConf(changed, \"name=changed\");\n    // Overlay with my local schema\n    schemaFile = new File(new File(changed, \"conf\"), \"schema.xml\");\n    FileUtils.writeStringToFile(schemaFile, withWhich, Charsets.UTF_8.toString());\n\n    String discoveryXml = \"<solr></solr>\";\n    File solrXml = new File(solrHomeDirectory, \"solr.xml\");\n    FileUtils.write(solrXml, discoveryXml, Charsets.UTF_8.toString());\n\n    final CoreContainer cores = new CoreContainer(solrHomeDirectory.getAbsolutePath());\n    cores.load();\n    return cores;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a0f5bb79c600763ffe7b8141df59a3169d31e48","date":1396689440,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/schema/ChangedSchemaMergeTest#init().mjava","pathOld":"solr/core/src/test/org/apache/solr/schema/ChangedSchemaMergeTest#init().mjava","sourceNew":"  private CoreContainer init() throws Exception {\n    File changed = new File(solrHomeDirectory, \"changed\");\n    copyMinConf(changed, \"name=changed\");\n    // Overlay with my local schema\n    schemaFile = new File(new File(changed, \"conf\"), \"schema.xml\");\n    FileUtils.writeStringToFile(schemaFile, withWhich, Charsets.UTF_8.toString());\n\n    String discoveryXml = \"<solr></solr>\";\n    File solrXml = new File(solrHomeDirectory, \"solr.xml\");\n    FileUtils.write(solrXml, discoveryXml, Charsets.UTF_8.toString());\n\n    final CoreContainer cores = new CoreContainer(solrHomeDirectory.getAbsolutePath());\n    cores.load();\n    return cores;\n  }\n\n","sourceOld":"  private CoreContainer init() throws Exception {\n\n    if (solrHomeDirectory.exists()) {\n      FileUtils.deleteDirectory(solrHomeDirectory);\n    }\n    assertTrue(\"Failed to mkdirs workDir\", solrHomeDirectory.mkdirs());\n    File changed = new File(solrHomeDirectory, \"changed\");\n    copyMinConf(changed, \"name=changed\");\n    // Overlay with my local schema\n    schemaFile = new File(new File(changed, \"conf\"), \"schema.xml\");\n    FileUtils.writeStringToFile(schemaFile, withWhich, Charsets.UTF_8.toString());\n\n    String discoveryXml = \"<solr></solr>\";\n    File solrXml = new File(solrHomeDirectory, \"solr.xml\");\n    FileUtils.write(solrXml, discoveryXml, Charsets.UTF_8.toString());\n\n    final CoreContainer cores = new CoreContainer(solrHomeDirectory.getAbsolutePath());\n    cores.load();\n    return cores;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c609c76a49c17e5c1c8a5d5cd2d685be9f306a47","date":1477689538,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/schema/ChangedSchemaMergeTest#init().mjava","pathOld":"solr/core/src/test/org/apache/solr/schema/ChangedSchemaMergeTest#init().mjava","sourceNew":"  private CoreContainer init() throws Exception {\n    File changed = new File(solrHomeDirectory, \"changed\");\n    copyMinConf(changed, \"name=changed\");\n    // Overlay with my local schema\n    schemaFile = new File(new File(changed, \"conf\"), \"schema.xml\");\n    FileUtils.writeStringToFile(schemaFile, withWhich, StandardCharsets.UTF_8);\n\n    String discoveryXml = \"<solr></solr>\";\n    File solrXml = new File(solrHomeDirectory, \"solr.xml\");\n    FileUtils.write(solrXml, discoveryXml, StandardCharsets.UTF_8);\n\n    final CoreContainer cores = new CoreContainer(solrHomeDirectory.getAbsolutePath());\n    cores.load();\n    return cores;\n  }\n\n","sourceOld":"  private CoreContainer init() throws Exception {\n    File changed = new File(solrHomeDirectory, \"changed\");\n    copyMinConf(changed, \"name=changed\");\n    // Overlay with my local schema\n    schemaFile = new File(new File(changed, \"conf\"), \"schema.xml\");\n    FileUtils.writeStringToFile(schemaFile, withWhich, Charsets.UTF_8.toString());\n\n    String discoveryXml = \"<solr></solr>\";\n    File solrXml = new File(solrHomeDirectory, \"solr.xml\");\n    FileUtils.write(solrXml, discoveryXml, Charsets.UTF_8.toString());\n\n    final CoreContainer cores = new CoreContainer(solrHomeDirectory.getAbsolutePath());\n    cores.load();\n    return cores;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"320888923ec13b91f53082558f01f4c9960dd226","date":1477926871,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/schema/ChangedSchemaMergeTest#init().mjava","pathOld":"solr/core/src/test/org/apache/solr/schema/ChangedSchemaMergeTest#init().mjava","sourceNew":"  private CoreContainer init() throws Exception {\n    File changed = new File(solrHomeDirectory, \"changed\");\n    copyMinConf(changed, \"name=changed\");\n    // Overlay with my local schema\n    schemaFile = new File(new File(changed, \"conf\"), \"schema.xml\");\n    FileUtils.writeStringToFile(schemaFile, withWhich, StandardCharsets.UTF_8);\n\n    String discoveryXml = \"<solr></solr>\";\n    File solrXml = new File(solrHomeDirectory, \"solr.xml\");\n    FileUtils.write(solrXml, discoveryXml, StandardCharsets.UTF_8);\n\n    final CoreContainer cores = new CoreContainer(solrHomeDirectory.getAbsolutePath());\n    cores.load();\n    return cores;\n  }\n\n","sourceOld":"  private CoreContainer init() throws Exception {\n    File changed = new File(solrHomeDirectory, \"changed\");\n    copyMinConf(changed, \"name=changed\");\n    // Overlay with my local schema\n    schemaFile = new File(new File(changed, \"conf\"), \"schema.xml\");\n    FileUtils.writeStringToFile(schemaFile, withWhich, Charsets.UTF_8.toString());\n\n    String discoveryXml = \"<solr></solr>\";\n    File solrXml = new File(solrHomeDirectory, \"solr.xml\");\n    FileUtils.write(solrXml, discoveryXml, Charsets.UTF_8.toString());\n\n    final CoreContainer cores = new CoreContainer(solrHomeDirectory.getAbsolutePath());\n    cores.load();\n    return cores;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3","date":1583932828,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/schema/ChangedSchemaMergeTest#init().mjava","pathOld":"solr/core/src/test/org/apache/solr/schema/ChangedSchemaMergeTest#init().mjava","sourceNew":"  private CoreContainer init() throws Exception {\n    File changed = new File(solrHomeDirectory, \"changed\");\n    copyMinConf(changed, \"name=changed\");\n    // Overlay with my local schema\n    schemaFile = new File(new File(changed, \"conf\"), \"schema.xml\");\n    FileUtils.writeStringToFile(schemaFile, withWhich, StandardCharsets.UTF_8);\n\n    String discoveryXml = \"<solr></solr>\";\n    File solrXml = new File(solrHomeDirectory, \"solr.xml\");\n    FileUtils.write(solrXml, discoveryXml, StandardCharsets.UTF_8);\n\n    final CoreContainer cores = new CoreContainer(solrHomeDirectory.toPath(), new Properties());\n    cores.load();\n    return cores;\n  }\n\n","sourceOld":"  private CoreContainer init() throws Exception {\n    File changed = new File(solrHomeDirectory, \"changed\");\n    copyMinConf(changed, \"name=changed\");\n    // Overlay with my local schema\n    schemaFile = new File(new File(changed, \"conf\"), \"schema.xml\");\n    FileUtils.writeStringToFile(schemaFile, withWhich, StandardCharsets.UTF_8);\n\n    String discoveryXml = \"<solr></solr>\";\n    File solrXml = new File(solrHomeDirectory, \"solr.xml\");\n    FileUtils.write(solrXml, discoveryXml, StandardCharsets.UTF_8);\n\n    final CoreContainer cores = new CoreContainer(solrHomeDirectory.getAbsolutePath());\n    cores.load();\n    return cores;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3":["c609c76a49c17e5c1c8a5d5cd2d685be9f306a47"],"13c0d2271b68b77948ffb1638422f718c79778c0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"bb1f22cfa77230b5f05b7784feae5367f6bbb488":["d0d579490a72f2e6297eaa648940611234c57cf1"],"2a0f5bb79c600763ffe7b8141df59a3169d31e48":["13c0d2271b68b77948ffb1638422f718c79778c0","bb1f22cfa77230b5f05b7784feae5367f6bbb488"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c609c76a49c17e5c1c8a5d5cd2d685be9f306a47":["2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"d0d579490a72f2e6297eaa648940611234c57cf1":["13c0d2271b68b77948ffb1638422f718c79778c0"],"320888923ec13b91f53082558f01f4c9960dd226":["2a0f5bb79c600763ffe7b8141df59a3169d31e48","c609c76a49c17e5c1c8a5d5cd2d685be9f306a47"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3"]},"commit2Childs":{"ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"13c0d2271b68b77948ffb1638422f718c79778c0":["2a0f5bb79c600763ffe7b8141df59a3169d31e48","d0d579490a72f2e6297eaa648940611234c57cf1"],"bb1f22cfa77230b5f05b7784feae5367f6bbb488":["2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"2a0f5bb79c600763ffe7b8141df59a3169d31e48":["c609c76a49c17e5c1c8a5d5cd2d685be9f306a47","320888923ec13b91f53082558f01f4c9960dd226"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["13c0d2271b68b77948ffb1638422f718c79778c0"],"c609c76a49c17e5c1c8a5d5cd2d685be9f306a47":["ec5a4e4c455009870c1cb8d21cf6671b8b78d3e3","320888923ec13b91f53082558f01f4c9960dd226"],"d0d579490a72f2e6297eaa648940611234c57cf1":["bb1f22cfa77230b5f05b7784feae5367f6bbb488"],"320888923ec13b91f53082558f01f4c9960dd226":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["320888923ec13b91f53082558f01f4c9960dd226","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}