{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/expr/InjectionDefense#checkExpression(String).mjava","commits":[{"id":"a0370d6fb5289875090a50a9d0887ee584fed440","date":1552401990,"type":0,"author":"Gus Heck","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/expr/InjectionDefense#checkExpression(String).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Perform some initial checks and establish the expected number of expressions\n   *\n   * @param exprString the expression to check.\n   */\n  private void checkExpression(String exprString) {\n    exprString = STRING_PARAM.matcher(exprString).replaceAll(\"foo\");\n    exprString = NUMBER_PARAM.matcher(exprString).replaceAll(\"0\");\n    Matcher eMatcher = EXPRESSION_PARAM.matcher(exprString);\n    StringBuffer temp = new StringBuffer();\n    while (eMatcher.find()) {\n      Matcher counter = EXPRESSION_COUNT.matcher(eMatcher.group());\n      eMatcher.appendReplacement(temp, \"noop()\");\n      if (counter.find()) {\n        Integer subExprCount = Integer.valueOf(counter.group());\n        if (subExprCount < 1) {\n          throw new IllegalStateException(\"Expression Param must contribute at least 1 expression!\" +\n              \" ?(1)? is the minimum allowed \");\n        }\n        expressionCount += (subExprCount - 1); // the noop() we insert will get counted later.\n      }\n    }\n    eMatcher.appendTail(temp);\n    exprString = temp.toString();\n\n    StreamExpression parsed = StreamExpressionParser.parse(exprString);\n    if (parsed != null) {\n      expressionCount += countExpressions(parsed);\n    } else {\n      throw new IllegalStateException(\"Invalid expression (parse returned null):\" + exprString);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0370d6fb5289875090a50a9d0887ee584fed440":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0370d6fb5289875090a50a9d0887ee584fed440"]},"commit2Childs":{"a0370d6fb5289875090a50a9d0887ee584fed440":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a0370d6fb5289875090a50a9d0887ee584fed440"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}