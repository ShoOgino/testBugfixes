{"path":"solr/core/src/java/org/apache/solr/highlight/SolrFragmentsBuilder#getTags(SolrParams,String,String,String).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/highlight/SolrFragmentsBuilder#getTags(SolrParams,String,String,String).mjava","pathOld":"solr/src/java/org/apache/solr/highlight/SolrFragmentsBuilder#getTags(SolrParams,String,String,String).mjava","sourceNew":"  private String[] getTags( SolrParams params, String paramName, String fieldName, String def ){\n    if( defaults != null ) {\n      params = new DefaultSolrParams( params, defaults );\n    }\n    String value = null;\n    if( fieldName == null )\n      value = params.get( paramName, def );\n    else\n      value = params.getFieldParam( fieldName, paramName, def );\n    String[] tags = value.split( \",\" );\n    for( int i = 0; i < tags.length; i++ ){\n      tags[i] = tags[i].trim();\n    }\n    return tags;\n  }\n\n","sourceOld":"  private String[] getTags( SolrParams params, String paramName, String fieldName, String def ){\n    if( defaults != null ) {\n      params = new DefaultSolrParams( params, defaults );\n    }\n    String value = null;\n    if( fieldName == null )\n      value = params.get( paramName, def );\n    else\n      value = params.getFieldParam( fieldName, paramName, def );\n    String[] tags = value.split( \",\" );\n    for( int i = 0; i < tags.length; i++ ){\n      tags[i] = tags[i].trim();\n    }\n    return tags;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/highlight/SolrFragmentsBuilder#getTags(SolrParams,String,String,String).mjava","pathOld":"solr/src/java/org/apache/solr/highlight/SolrFragmentsBuilder#getTags(SolrParams,String,String,String).mjava","sourceNew":"  private String[] getTags( SolrParams params, String paramName, String fieldName, String def ){\n    if( defaults != null ) {\n      params = new DefaultSolrParams( params, defaults );\n    }\n    String value = null;\n    if( fieldName == null )\n      value = params.get( paramName, def );\n    else\n      value = params.getFieldParam( fieldName, paramName, def );\n    String[] tags = value.split( \",\" );\n    for( int i = 0; i < tags.length; i++ ){\n      tags[i] = tags[i].trim();\n    }\n    return tags;\n  }\n\n","sourceOld":"  private String[] getTags( SolrParams params, String paramName, String fieldName, String def ){\n    if( defaults != null ) {\n      params = new DefaultSolrParams( params, defaults );\n    }\n    String value = null;\n    if( fieldName == null )\n      value = params.get( paramName, def );\n    else\n      value = params.getFieldParam( fieldName, paramName, def );\n    String[] tags = value.split( \",\" );\n    for( int i = 0; i < tags.length; i++ ){\n      tags[i] = tags[i].trim();\n    }\n    return tags;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/highlight/SolrFragmentsBuilder#getTags(SolrParams,String,String,String).mjava","pathOld":"solr/src/java/org/apache/solr/highlight/SolrFragmentsBuilder#getTags(SolrParams,String,String,String).mjava","sourceNew":"  private String[] getTags( SolrParams params, String paramName, String fieldName, String def ){\n    if( defaults != null ) {\n      params = new DefaultSolrParams( params, defaults );\n    }\n    String value = null;\n    if( fieldName == null )\n      value = params.get( paramName, def );\n    else\n      value = params.getFieldParam( fieldName, paramName, def );\n    String[] tags = value.split( \",\" );\n    for( int i = 0; i < tags.length; i++ ){\n      tags[i] = tags[i].trim();\n    }\n    return tags;\n  }\n\n","sourceOld":"  private String[] getTags( SolrParams params, String paramName, String fieldName, String def ){\n    if( defaults != null ) {\n      params = new DefaultSolrParams( params, defaults );\n    }\n    String value = null;\n    if( fieldName == null )\n      value = params.get( paramName, def );\n    else\n      value = params.getFieldParam( fieldName, paramName, def );\n    String[] tags = value.split( \",\" );\n    for( int i = 0; i < tags.length; i++ ){\n      tags[i] = tags[i].trim();\n    }\n    return tags;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0dcbe407b62ce0c91dc171a4695a9f442c46ce14","date":1323729111,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/highlight/SolrFragmentsBuilder#getTags(SolrParams,String,String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/highlight/SolrFragmentsBuilder#getTags(SolrParams,String,String,String).mjava","sourceNew":"  private String[] getTags( SolrParams params, String paramName, String fieldName, String def ){\n    params = SolrParams.wrapDefaults(params, defaults);\n\n    String value = null;\n    if( fieldName == null )\n      value = params.get( paramName, def );\n    else\n      value = params.getFieldParam( fieldName, paramName, def );\n    String[] tags = value.split( \",\" );\n    for( int i = 0; i < tags.length; i++ ){\n      tags[i] = tags[i].trim();\n    }\n    return tags;\n  }\n\n","sourceOld":"  private String[] getTags( SolrParams params, String paramName, String fieldName, String def ){\n    if( defaults != null ) {\n      params = new DefaultSolrParams( params, defaults );\n    }\n    String value = null;\n    if( fieldName == null )\n      value = params.get( paramName, def );\n    else\n      value = params.getFieldParam( fieldName, paramName, def );\n    String[] tags = value.split( \",\" );\n    for( int i = 0; i < tags.length; i++ ){\n      tags[i] = tags[i].trim();\n    }\n    return tags;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4ceb6a6c707ada1df8bde804e25c98668e699a18","date":1323800602,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/highlight/SolrFragmentsBuilder#getTags(SolrParams,String,String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/highlight/SolrFragmentsBuilder#getTags(SolrParams,String,String,String).mjava","sourceNew":"  private String[] getTags( SolrParams params, String paramName, String fieldName, String def ){\n    params = SolrParams.wrapDefaults(params, defaults);\n\n    String value = null;\n    if( fieldName == null )\n      value = params.get( paramName, def );\n    else\n      value = params.getFieldParam( fieldName, paramName, def );\n    String[] tags = value.split( \",\" );\n    for( int i = 0; i < tags.length; i++ ){\n      tags[i] = tags[i].trim();\n    }\n    return tags;\n  }\n\n","sourceOld":"  private String[] getTags( SolrParams params, String paramName, String fieldName, String def ){\n    if( defaults != null ) {\n      params = new DefaultSolrParams( params, defaults );\n    }\n    String value = null;\n    if( fieldName == null )\n      value = params.get( paramName, def );\n    else\n      value = params.getFieldParam( fieldName, paramName, def );\n    String[] tags = value.split( \",\" );\n    for( int i = 0; i < tags.length; i++ ){\n      tags[i] = tags[i].trim();\n    }\n    return tags;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4ceb6a6c707ada1df8bde804e25c98668e699a18":["c26f00b574427b55127e869b935845554afde1fa","0dcbe407b62ce0c91dc171a4695a9f442c46ce14"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"0dcbe407b62ce0c91dc171a4695a9f442c46ce14":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0dcbe407b62ce0c91dc171a4695a9f442c46ce14"]},"commit2Childs":{"4ceb6a6c707ada1df8bde804e25c98668e699a18":[],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["4ceb6a6c707ada1df8bde804e25c98668e699a18","0dcbe407b62ce0c91dc171a4695a9f442c46ce14"],"0dcbe407b62ce0c91dc171a4695a9f442c46ce14":["4ceb6a6c707ada1df8bde804e25c98668e699a18","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4ceb6a6c707ada1df8bde804e25c98668e699a18","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}