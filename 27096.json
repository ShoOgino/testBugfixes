{"path":"contrib/spellchecker/src/test/org/apache/lucene/search/spell/TestSpellChecker#checkCommonSuggestions(IndexReader).mjava","commits":[{"id":"6000179efff4c320dafa76c7f0f088e44c4df0d0","date":1213765317,"type":0,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"contrib/spellchecker/src/test/org/apache/lucene/search/spell/TestSpellChecker#checkCommonSuggestions(IndexReader).mjava","pathOld":"/dev/null","sourceNew":"  private void checkCommonSuggestions(IndexReader r) throws IOException {\n    String[] similar = spellChecker.suggestSimilar(\"fvie\", 2);\n    assertTrue(similar.length > 0);\n    assertEquals(similar[0], \"five\");\n    \n    similar = spellChecker.suggestSimilar(\"five\", 2);\n    if (similar.length > 0) {\n      assertFalse(similar[0].equals(\"five\")); // don't suggest a word for itself\n    }\n    \n    similar = spellChecker.suggestSimilar(\"fiv\", 2);\n    assertTrue(similar.length > 0);\n    assertEquals(similar[0], \"five\");\n    \n    similar = spellChecker.suggestSimilar(\"fives\", 2);\n    assertTrue(similar.length > 0);\n    assertEquals(similar[0], \"five\");\n    \n    assertTrue(similar.length > 0);\n    similar = spellChecker.suggestSimilar(\"fie\", 2);\n    assertEquals(similar[0], \"five\");\n    \n    //  test restraint to a field\n    similar = spellChecker.suggestSimilar(\"tousand\", 10, r, \"field1\", false);\n    assertEquals(0, similar.length); // there isn't the term thousand in the field field1\n\n    similar = spellChecker.suggestSimilar(\"tousand\", 10, r, \"field2\", false);\n    assertEquals(1, similar.length); // there is the term thousand in the field field2\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/spellchecker/src/test/org/apache/lucene/search/spell/TestSpellChecker#checkCommonSuggestions(IndexReader).mjava","pathOld":"contrib/spellchecker/src/test/org/apache/lucene/search/spell/TestSpellChecker#checkCommonSuggestions(IndexReader).mjava","sourceNew":"  private void checkCommonSuggestions(IndexReader r) throws IOException {\n    String[] similar = spellChecker.suggestSimilar(\"fvie\", 2);\n    assertTrue(similar.length > 0);\n    assertEquals(similar[0], \"five\");\n    \n    similar = spellChecker.suggestSimilar(\"five\", 2);\n    if (similar.length > 0) {\n      assertFalse(similar[0].equals(\"five\")); // don't suggest a word for itself\n    }\n    \n    similar = spellChecker.suggestSimilar(\"fiv\", 2);\n    assertTrue(similar.length > 0);\n    assertEquals(similar[0], \"five\");\n    \n    similar = spellChecker.suggestSimilar(\"fives\", 2);\n    assertTrue(similar.length > 0);\n    assertEquals(similar[0], \"five\");\n    \n    assertTrue(similar.length > 0);\n    similar = spellChecker.suggestSimilar(\"fie\", 2);\n    assertEquals(similar[0], \"five\");\n    \n    //  test restraint to a field\n    similar = spellChecker.suggestSimilar(\"tousand\", 10, r, \"field1\", false);\n    assertEquals(0, similar.length); // there isn't the term thousand in the field field1\n\n    similar = spellChecker.suggestSimilar(\"tousand\", 10, r, \"field2\", false);\n    assertEquals(1, similar.length); // there is the term thousand in the field field2\n  }\n\n","sourceOld":"  private void checkCommonSuggestions(IndexReader r) throws IOException {\n    String[] similar = spellChecker.suggestSimilar(\"fvie\", 2);\n    assertTrue(similar.length > 0);\n    assertEquals(similar[0], \"five\");\n    \n    similar = spellChecker.suggestSimilar(\"five\", 2);\n    if (similar.length > 0) {\n      assertFalse(similar[0].equals(\"five\")); // don't suggest a word for itself\n    }\n    \n    similar = spellChecker.suggestSimilar(\"fiv\", 2);\n    assertTrue(similar.length > 0);\n    assertEquals(similar[0], \"five\");\n    \n    similar = spellChecker.suggestSimilar(\"fives\", 2);\n    assertTrue(similar.length > 0);\n    assertEquals(similar[0], \"five\");\n    \n    assertTrue(similar.length > 0);\n    similar = spellChecker.suggestSimilar(\"fie\", 2);\n    assertEquals(similar[0], \"five\");\n    \n    //  test restraint to a field\n    similar = spellChecker.suggestSimilar(\"tousand\", 10, r, \"field1\", false);\n    assertEquals(0, similar.length); // there isn't the term thousand in the field field1\n\n    similar = spellChecker.suggestSimilar(\"tousand\", 10, r, \"field2\", false);\n    assertEquals(1, similar.length); // there is the term thousand in the field field2\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6000179efff4c320dafa76c7f0f088e44c4df0d0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["6000179efff4c320dafa76c7f0f088e44c4df0d0"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6000179efff4c320dafa76c7f0f088e44c4df0d0"],"6000179efff4c320dafa76c7f0f088e44c4df0d0":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}