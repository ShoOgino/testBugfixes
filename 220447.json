{"path":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#testQueryScorerMultiPhraseQueryHighlightingWithGap().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#testQueryScorerMultiPhraseQueryHighlightingWithGap().mjava","pathOld":"contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#testQueryScorerMultiPhraseQueryHighlightingWithGap().mjava","sourceNew":"  public void testQueryScorerMultiPhraseQueryHighlightingWithGap() throws Exception {\n    MultiPhraseQuery mpq = new MultiPhraseQuery();\n\n    /*\n     * The toString of MultiPhraseQuery doesn't work so well with these\n     * out-of-order additions, but the Query itself seems to match accurately.\n     */\n\n    mpq.add(new Term[] { new Term(FIELD_NAME, \"wordz\") }, 2);\n    mpq.add(new Term[] { new Term(FIELD_NAME, \"wordx\") }, 0);\n\n    doSearching(mpq);\n\n    final int maxNumFragmentsRequired = 1;\n    final int expectedHighlights = 2;\n\n    assertExpectedHighlightCount(maxNumFragmentsRequired, expectedHighlights);\n  }\n\n","sourceOld":"  public void testQueryScorerMultiPhraseQueryHighlightingWithGap() throws Exception {\n    MultiPhraseQuery mpq = new MultiPhraseQuery();\n\n    /*\n     * The toString of MultiPhraseQuery doesn't work so well with these\n     * out-of-order additions, but the Query itself seems to match accurately.\n     */\n\n    mpq.add(new Term[] { new Term(FIELD_NAME, \"wordz\") }, 2);\n    mpq.add(new Term[] { new Term(FIELD_NAME, \"wordx\") }, 0);\n\n    doSearching(mpq);\n\n    final int maxNumFragmentsRequired = 1;\n    final int expectedHighlights = 2;\n\n    assertExpectedHighlightCount(maxNumFragmentsRequired, expectedHighlights);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#testQueryScorerMultiPhraseQueryHighlightingWithGap().mjava","pathOld":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#testQueryScorerMultiPhraseQueryHighlightingWithGap().mjava","sourceNew":"  public void testQueryScorerMultiPhraseQueryHighlightingWithGap() throws Exception {\n    MultiPhraseQuery mpq = new MultiPhraseQuery();\n\n    /*\n     * The toString of MultiPhraseQuery doesn't work so well with these\n     * out-of-order additions, but the Query itself seems to match accurately.\n     */\n\n    mpq.add(new Term[] { new Term(FIELD_NAME, \"wordz\") }, 2);\n    mpq.add(new Term[] { new Term(FIELD_NAME, \"wordx\") }, 0);\n\n    doSearching(mpq);\n\n    final int maxNumFragmentsRequired = 1;\n    final int expectedHighlights = 2;\n\n    assertExpectedHighlightCount(maxNumFragmentsRequired, expectedHighlights);\n  }\n\n","sourceOld":"  public void testQueryScorerMultiPhraseQueryHighlightingWithGap() throws Exception {\n    MultiPhraseQuery mpq = new MultiPhraseQuery();\n\n    /*\n     * The toString of MultiPhraseQuery doesn't work so well with these\n     * out-of-order additions, but the Query itself seems to match accurately.\n     */\n\n    mpq.add(new Term[] { new Term(FIELD_NAME, \"wordz\") }, 2);\n    mpq.add(new Term[] { new Term(FIELD_NAME, \"wordx\") }, 0);\n\n    doSearching(mpq);\n\n    final int maxNumFragmentsRequired = 1;\n    final int expectedHighlights = 2;\n\n    assertExpectedHighlightCount(maxNumFragmentsRequired, expectedHighlights);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}