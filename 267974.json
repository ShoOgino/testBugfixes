{"path":"solr/core/src/test/org/apache/solr/handler/SearchHandlerTest#testSorting().mjava","commits":[{"id":"5ff704ef91e9ae30ca59babb23ece85720701b60","date":1498684964,"type":1,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/SearchHandlerTest#testSorting().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/StandardRequestHandlerTest#testSorting().mjava","sourceNew":"  public void testSorting() throws Exception {\n    assertU(adoc(\"id\", \"10\", \"title\", \"test\", \"val_s1\", \"aaa\"));\n    assertU(adoc(\"id\", \"11\", \"title\", \"test\", \"val_s1\", \"bbb\"));\n    assertU(adoc(\"id\", \"12\", \"title\", \"test\", \"val_s1\", \"ccc\"));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"title:test\")\n            ,\"//*[@numFound='3']\"\n            );\n    \n    assertQ(req(\"q\", \"title:test\", \"sort\",\"val_s1 asc\")\n            ,\"//*[@numFound='3']\"\n            ,\"//result/doc[1]/str[@name='id'][.='10']\"\n            ,\"//result/doc[2]/str[@name='id'][.='11']\"\n            ,\"//result/doc[3]/str[@name='id'][.='12']\"\n            );\n\n    assertQ(req(\"q\", \"title:test\", \"sort\",\"val_s1 desc\")\n            ,\"//*[@numFound='3']\"\n            ,\"//result/doc[1]/str[@name='id'][.='12']\"\n            ,\"//result/doc[2]/str[@name='id'][.='11']\"\n            ,\"//result/doc[3]/str[@name='id'][.='10']\"\n            );\n    \n    // Make sure score parsing works\n    assertQ(req(\"q\", \"title:test\", \"sort\",\"score desc\")\n        ,\"//*[@numFound='3']\"\n    );\n\n    assertQ(req(\"q\", \"title:test\", \"sort\",\"score asc\")\n        ,\"//*[@numFound='3']\"\n    );\n    \n    // Using legacy ';' param\n    assertQ(req(\"q\", \"title:test; val_s1 desc\", \"defType\",\"lucenePlusSort\")\n            ,\"//*[@numFound='3']\"\n            ,\"//result/doc[1]/str[@name='id'][.='12']\"\n            ,\"//result/doc[2]/str[@name='id'][.='11']\"\n            ,\"//result/doc[3]/str[@name='id'][.='10']\"\n            );\n\n    assertQ(req(\"q\", \"title:test; val_s1 asc\", \"defType\",\"lucenePlusSort\")\n            ,\"//*[@numFound='3']\"\n            ,\"//result/doc[1]/str[@name='id'][.='10']\"\n            ,\"//result/doc[2]/str[@name='id'][.='11']\"\n            ,\"//result/doc[3]/str[@name='id'][.='12']\"\n            );\n  }\n\n","sourceOld":"  public void testSorting() throws Exception {\n    SolrCore core = h.getCore();\n    assertU(adoc(\"id\", \"10\", \"title\", \"test\", \"val_s1\", \"aaa\"));\n    assertU(adoc(\"id\", \"11\", \"title\", \"test\", \"val_s1\", \"bbb\"));\n    assertU(adoc(\"id\", \"12\", \"title\", \"test\", \"val_s1\", \"ccc\"));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"title:test\")\n            ,\"//*[@numFound='3']\"\n            );\n    \n    assertQ(req(\"q\", \"title:test\", \"sort\",\"val_s1 asc\")\n            ,\"//*[@numFound='3']\"\n            ,\"//result/doc[1]/str[@name='id'][.='10']\"\n            ,\"//result/doc[2]/str[@name='id'][.='11']\"\n            ,\"//result/doc[3]/str[@name='id'][.='12']\"\n            );\n\n    assertQ(req(\"q\", \"title:test\", \"sort\",\"val_s1 desc\")\n            ,\"//*[@numFound='3']\"\n            ,\"//result/doc[1]/str[@name='id'][.='12']\"\n            ,\"//result/doc[2]/str[@name='id'][.='11']\"\n            ,\"//result/doc[3]/str[@name='id'][.='10']\"\n            );\n    \n    // Make sure score parsing works\n    assertQ(req(\"q\", \"title:test\", \"sort\",\"score desc\")\n        ,\"//*[@numFound='3']\"\n    );\n\n    assertQ(req(\"q\", \"title:test\", \"sort\",\"score asc\")\n        ,\"//*[@numFound='3']\"\n    );\n    \n    // Using legacy ';' param\n    assertQ(req(\"q\", \"title:test; val_s1 desc\", \"defType\",\"lucenePlusSort\")\n            ,\"//*[@numFound='3']\"\n            ,\"//result/doc[1]/str[@name='id'][.='12']\"\n            ,\"//result/doc[2]/str[@name='id'][.='11']\"\n            ,\"//result/doc[3]/str[@name='id'][.='10']\"\n            );\n\n    assertQ(req(\"q\", \"title:test; val_s1 asc\", \"defType\",\"lucenePlusSort\")\n            ,\"//*[@numFound='3']\"\n            ,\"//result/doc[1]/str[@name='id'][.='10']\"\n            ,\"//result/doc[2]/str[@name='id'][.='11']\"\n            ,\"//result/doc[3]/str[@name='id'][.='12']\"\n            );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/SearchHandlerTest#testSorting().mjava","pathOld":"/dev/null","sourceNew":"  public void testSorting() throws Exception {\n    assertU(adoc(\"id\", \"10\", \"title\", \"test\", \"val_s1\", \"aaa\"));\n    assertU(adoc(\"id\", \"11\", \"title\", \"test\", \"val_s1\", \"bbb\"));\n    assertU(adoc(\"id\", \"12\", \"title\", \"test\", \"val_s1\", \"ccc\"));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"title:test\")\n            ,\"//*[@numFound='3']\"\n            );\n    \n    assertQ(req(\"q\", \"title:test\", \"sort\",\"val_s1 asc\")\n            ,\"//*[@numFound='3']\"\n            ,\"//result/doc[1]/str[@name='id'][.='10']\"\n            ,\"//result/doc[2]/str[@name='id'][.='11']\"\n            ,\"//result/doc[3]/str[@name='id'][.='12']\"\n            );\n\n    assertQ(req(\"q\", \"title:test\", \"sort\",\"val_s1 desc\")\n            ,\"//*[@numFound='3']\"\n            ,\"//result/doc[1]/str[@name='id'][.='12']\"\n            ,\"//result/doc[2]/str[@name='id'][.='11']\"\n            ,\"//result/doc[3]/str[@name='id'][.='10']\"\n            );\n    \n    // Make sure score parsing works\n    assertQ(req(\"q\", \"title:test\", \"sort\",\"score desc\")\n        ,\"//*[@numFound='3']\"\n    );\n\n    assertQ(req(\"q\", \"title:test\", \"sort\",\"score asc\")\n        ,\"//*[@numFound='3']\"\n    );\n    \n    // Using legacy ';' param\n    assertQ(req(\"q\", \"title:test; val_s1 desc\", \"defType\",\"lucenePlusSort\")\n            ,\"//*[@numFound='3']\"\n            ,\"//result/doc[1]/str[@name='id'][.='12']\"\n            ,\"//result/doc[2]/str[@name='id'][.='11']\"\n            ,\"//result/doc[3]/str[@name='id'][.='10']\"\n            );\n\n    assertQ(req(\"q\", \"title:test; val_s1 asc\", \"defType\",\"lucenePlusSort\")\n            ,\"//*[@numFound='3']\"\n            ,\"//result/doc[1]/str[@name='id'][.='10']\"\n            ,\"//result/doc[2]/str[@name='id'][.='11']\"\n            ,\"//result/doc[3]/str[@name='id'][.='12']\"\n            );\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"30c8e5574b55d57947e989443dfde611646530ee","date":1499131153,"type":0,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/SearchHandlerTest#testSorting().mjava","pathOld":"/dev/null","sourceNew":"  public void testSorting() throws Exception {\n    assertU(adoc(\"id\", \"10\", \"title\", \"test\", \"val_s1\", \"aaa\"));\n    assertU(adoc(\"id\", \"11\", \"title\", \"test\", \"val_s1\", \"bbb\"));\n    assertU(adoc(\"id\", \"12\", \"title\", \"test\", \"val_s1\", \"ccc\"));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"title:test\")\n            ,\"//*[@numFound='3']\"\n            );\n    \n    assertQ(req(\"q\", \"title:test\", \"sort\",\"val_s1 asc\")\n            ,\"//*[@numFound='3']\"\n            ,\"//result/doc[1]/str[@name='id'][.='10']\"\n            ,\"//result/doc[2]/str[@name='id'][.='11']\"\n            ,\"//result/doc[3]/str[@name='id'][.='12']\"\n            );\n\n    assertQ(req(\"q\", \"title:test\", \"sort\",\"val_s1 desc\")\n            ,\"//*[@numFound='3']\"\n            ,\"//result/doc[1]/str[@name='id'][.='12']\"\n            ,\"//result/doc[2]/str[@name='id'][.='11']\"\n            ,\"//result/doc[3]/str[@name='id'][.='10']\"\n            );\n    \n    // Make sure score parsing works\n    assertQ(req(\"q\", \"title:test\", \"sort\",\"score desc\")\n        ,\"//*[@numFound='3']\"\n    );\n\n    assertQ(req(\"q\", \"title:test\", \"sort\",\"score asc\")\n        ,\"//*[@numFound='3']\"\n    );\n    \n    // Using legacy ';' param\n    assertQ(req(\"q\", \"title:test; val_s1 desc\", \"defType\",\"lucenePlusSort\")\n            ,\"//*[@numFound='3']\"\n            ,\"//result/doc[1]/str[@name='id'][.='12']\"\n            ,\"//result/doc[2]/str[@name='id'][.='11']\"\n            ,\"//result/doc[3]/str[@name='id'][.='10']\"\n            );\n\n    assertQ(req(\"q\", \"title:test; val_s1 asc\", \"defType\",\"lucenePlusSort\")\n            ,\"//*[@numFound='3']\"\n            ,\"//result/doc[1]/str[@name='id'][.='10']\"\n            ,\"//result/doc[2]/str[@name='id'][.='11']\"\n            ,\"//result/doc[3]/str[@name='id'][.='12']\"\n            );\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"637559b0fb4d8b154a84b1af4661cb1b5d9c8415","date":1504740251,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/SearchHandlerTest#testSorting().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/SearchHandlerTest#testSorting().mjava","sourceNew":"  public void testSorting() throws Exception {\n    assertU(adoc(\"id\", \"10\", \"title\", \"test\", \"val_s1\", \"aaa\"));\n    assertU(adoc(\"id\", \"11\", \"title\", \"test\", \"val_s1\", \"bbb\"));\n    assertU(adoc(\"id\", \"12\", \"title\", \"test\", \"val_s1\", \"ccc\"));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"title:test\")\n            ,\"//*[@numFound='3']\"\n            );\n    \n    assertQ(req(\"q\", \"title:test\", \"sort\",\"val_s1 asc\")\n            ,\"//*[@numFound='3']\"\n            ,\"//result/doc[1]/str[@name='id'][.='10']\"\n            ,\"//result/doc[2]/str[@name='id'][.='11']\"\n            ,\"//result/doc[3]/str[@name='id'][.='12']\"\n            );\n\n    assertQ(req(\"q\", \"title:test\", \"sort\",\"val_s1 desc\")\n            ,\"//*[@numFound='3']\"\n            ,\"//result/doc[1]/str[@name='id'][.='12']\"\n            ,\"//result/doc[2]/str[@name='id'][.='11']\"\n            ,\"//result/doc[3]/str[@name='id'][.='10']\"\n            );\n    \n    // Make sure score parsing works\n    assertQ(req(\"q\", \"title:test\", \"sort\",\"score desc\")\n        ,\"//*[@numFound='3']\"\n    );\n\n    assertQ(req(\"q\", \"title:test\", \"sort\",\"score asc\")\n        ,\"//*[@numFound='3']\"\n    );\n    \n    // Using legacy ';' param\n    assertQ(req(\"q\", \"title:test\", \"sort\",\"val_s1 desc\")\n            ,\"//*[@numFound='3']\"\n            ,\"//result/doc[1]/str[@name='id'][.='12']\"\n            ,\"//result/doc[2]/str[@name='id'][.='11']\"\n            ,\"//result/doc[3]/str[@name='id'][.='10']\"\n            );\n\n    assertQ(req(\"q\", \"title:test\", \"sort\", \"val_s1 asc\")\n            ,\"//*[@numFound='3']\"\n            ,\"//result/doc[1]/str[@name='id'][.='10']\"\n            ,\"//result/doc[2]/str[@name='id'][.='11']\"\n            ,\"//result/doc[3]/str[@name='id'][.='12']\"\n            );\n  }\n\n","sourceOld":"  public void testSorting() throws Exception {\n    assertU(adoc(\"id\", \"10\", \"title\", \"test\", \"val_s1\", \"aaa\"));\n    assertU(adoc(\"id\", \"11\", \"title\", \"test\", \"val_s1\", \"bbb\"));\n    assertU(adoc(\"id\", \"12\", \"title\", \"test\", \"val_s1\", \"ccc\"));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"title:test\")\n            ,\"//*[@numFound='3']\"\n            );\n    \n    assertQ(req(\"q\", \"title:test\", \"sort\",\"val_s1 asc\")\n            ,\"//*[@numFound='3']\"\n            ,\"//result/doc[1]/str[@name='id'][.='10']\"\n            ,\"//result/doc[2]/str[@name='id'][.='11']\"\n            ,\"//result/doc[3]/str[@name='id'][.='12']\"\n            );\n\n    assertQ(req(\"q\", \"title:test\", \"sort\",\"val_s1 desc\")\n            ,\"//*[@numFound='3']\"\n            ,\"//result/doc[1]/str[@name='id'][.='12']\"\n            ,\"//result/doc[2]/str[@name='id'][.='11']\"\n            ,\"//result/doc[3]/str[@name='id'][.='10']\"\n            );\n    \n    // Make sure score parsing works\n    assertQ(req(\"q\", \"title:test\", \"sort\",\"score desc\")\n        ,\"//*[@numFound='3']\"\n    );\n\n    assertQ(req(\"q\", \"title:test\", \"sort\",\"score asc\")\n        ,\"//*[@numFound='3']\"\n    );\n    \n    // Using legacy ';' param\n    assertQ(req(\"q\", \"title:test; val_s1 desc\", \"defType\",\"lucenePlusSort\")\n            ,\"//*[@numFound='3']\"\n            ,\"//result/doc[1]/str[@name='id'][.='12']\"\n            ,\"//result/doc[2]/str[@name='id'][.='11']\"\n            ,\"//result/doc[3]/str[@name='id'][.='10']\"\n            );\n\n    assertQ(req(\"q\", \"title:test; val_s1 asc\", \"defType\",\"lucenePlusSort\")\n            ,\"//*[@numFound='3']\"\n            ,\"//result/doc[1]/str[@name='id'][.='10']\"\n            ,\"//result/doc[2]/str[@name='id'][.='11']\"\n            ,\"//result/doc[3]/str[@name='id'][.='12']\"\n            );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"104a3f62ee393d48b5596de76ed4d9a4e0ea6de7","date":1504848000,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/SearchHandlerTest#testSorting().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/SearchHandlerTest#testSorting().mjava","sourceNew":"  public void testSorting() throws Exception {\n    assertU(adoc(\"id\", \"10\", \"title\", \"test\", \"val_s1\", \"aaa\"));\n    assertU(adoc(\"id\", \"11\", \"title\", \"test\", \"val_s1\", \"bbb\"));\n    assertU(adoc(\"id\", \"12\", \"title\", \"test\", \"val_s1\", \"ccc\"));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"title:test\")\n            ,\"//*[@numFound='3']\"\n            );\n    \n    assertQ(req(\"q\", \"title:test\", \"sort\",\"val_s1 asc\")\n            ,\"//*[@numFound='3']\"\n            ,\"//result/doc[1]/str[@name='id'][.='10']\"\n            ,\"//result/doc[2]/str[@name='id'][.='11']\"\n            ,\"//result/doc[3]/str[@name='id'][.='12']\"\n            );\n\n    assertQ(req(\"q\", \"title:test\", \"sort\",\"val_s1 desc\")\n            ,\"//*[@numFound='3']\"\n            ,\"//result/doc[1]/str[@name='id'][.='12']\"\n            ,\"//result/doc[2]/str[@name='id'][.='11']\"\n            ,\"//result/doc[3]/str[@name='id'][.='10']\"\n            );\n    \n    // Make sure score parsing works\n    assertQ(req(\"q\", \"title:test\", \"sort\",\"score desc\")\n        ,\"//*[@numFound='3']\"\n    );\n\n    assertQ(req(\"q\", \"title:test\", \"sort\",\"score asc\")\n        ,\"//*[@numFound='3']\"\n    );\n    \n    // Using legacy ';' param\n    assertQ(req(\"q\", \"title:test\", \"sort\",\"val_s1 desc\")\n            ,\"//*[@numFound='3']\"\n            ,\"//result/doc[1]/str[@name='id'][.='12']\"\n            ,\"//result/doc[2]/str[@name='id'][.='11']\"\n            ,\"//result/doc[3]/str[@name='id'][.='10']\"\n            );\n\n    assertQ(req(\"q\", \"title:test\", \"sort\", \"val_s1 asc\")\n            ,\"//*[@numFound='3']\"\n            ,\"//result/doc[1]/str[@name='id'][.='10']\"\n            ,\"//result/doc[2]/str[@name='id'][.='11']\"\n            ,\"//result/doc[3]/str[@name='id'][.='12']\"\n            );\n  }\n\n","sourceOld":"  public void testSorting() throws Exception {\n    assertU(adoc(\"id\", \"10\", \"title\", \"test\", \"val_s1\", \"aaa\"));\n    assertU(adoc(\"id\", \"11\", \"title\", \"test\", \"val_s1\", \"bbb\"));\n    assertU(adoc(\"id\", \"12\", \"title\", \"test\", \"val_s1\", \"ccc\"));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"title:test\")\n            ,\"//*[@numFound='3']\"\n            );\n    \n    assertQ(req(\"q\", \"title:test\", \"sort\",\"val_s1 asc\")\n            ,\"//*[@numFound='3']\"\n            ,\"//result/doc[1]/str[@name='id'][.='10']\"\n            ,\"//result/doc[2]/str[@name='id'][.='11']\"\n            ,\"//result/doc[3]/str[@name='id'][.='12']\"\n            );\n\n    assertQ(req(\"q\", \"title:test\", \"sort\",\"val_s1 desc\")\n            ,\"//*[@numFound='3']\"\n            ,\"//result/doc[1]/str[@name='id'][.='12']\"\n            ,\"//result/doc[2]/str[@name='id'][.='11']\"\n            ,\"//result/doc[3]/str[@name='id'][.='10']\"\n            );\n    \n    // Make sure score parsing works\n    assertQ(req(\"q\", \"title:test\", \"sort\",\"score desc\")\n        ,\"//*[@numFound='3']\"\n    );\n\n    assertQ(req(\"q\", \"title:test\", \"sort\",\"score asc\")\n        ,\"//*[@numFound='3']\"\n    );\n    \n    // Using legacy ';' param\n    assertQ(req(\"q\", \"title:test; val_s1 desc\", \"defType\",\"lucenePlusSort\")\n            ,\"//*[@numFound='3']\"\n            ,\"//result/doc[1]/str[@name='id'][.='12']\"\n            ,\"//result/doc[2]/str[@name='id'][.='11']\"\n            ,\"//result/doc[3]/str[@name='id'][.='10']\"\n            );\n\n    assertQ(req(\"q\", \"title:test; val_s1 asc\", \"defType\",\"lucenePlusSort\")\n            ,\"//*[@numFound='3']\"\n            ,\"//result/doc[1]/str[@name='id'][.='10']\"\n            ,\"//result/doc[2]/str[@name='id'][.='11']\"\n            ,\"//result/doc[3]/str[@name='id'][.='12']\"\n            );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"685bd38810c206c93e9058f3c2cfa9827c086c27","date":1505751821,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/SearchHandlerTest#testSorting().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/SearchHandlerTest#testSorting().mjava","sourceNew":"  public void testSorting() throws Exception {\n    assertU(adoc(\"id\", \"10\", \"title\", \"test\", \"val_s1\", \"aaa\"));\n    assertU(adoc(\"id\", \"11\", \"title\", \"test\", \"val_s1\", \"bbb\"));\n    assertU(adoc(\"id\", \"12\", \"title\", \"test\", \"val_s1\", \"ccc\"));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"title:test\")\n            ,\"//*[@numFound='3']\"\n            );\n    \n    assertQ(req(\"q\", \"title:test\", \"sort\",\"val_s1 asc\")\n            ,\"//*[@numFound='3']\"\n            ,\"//result/doc[1]/str[@name='id'][.='10']\"\n            ,\"//result/doc[2]/str[@name='id'][.='11']\"\n            ,\"//result/doc[3]/str[@name='id'][.='12']\"\n            );\n\n    assertQ(req(\"q\", \"title:test\", \"sort\",\"val_s1 desc\")\n            ,\"//*[@numFound='3']\"\n            ,\"//result/doc[1]/str[@name='id'][.='12']\"\n            ,\"//result/doc[2]/str[@name='id'][.='11']\"\n            ,\"//result/doc[3]/str[@name='id'][.='10']\"\n            );\n    \n    // Make sure score parsing works\n    assertQ(req(\"q\", \"title:test\", \"sort\",\"score desc\")\n        ,\"//*[@numFound='3']\"\n    );\n\n    assertQ(req(\"q\", \"title:test\", \"sort\",\"score asc\")\n        ,\"//*[@numFound='3']\"\n    );\n    \n    // Using legacy ';' param\n    assertQ(req(\"q\", \"title:test\", \"sort\",\"val_s1 desc\")\n            ,\"//*[@numFound='3']\"\n            ,\"//result/doc[1]/str[@name='id'][.='12']\"\n            ,\"//result/doc[2]/str[@name='id'][.='11']\"\n            ,\"//result/doc[3]/str[@name='id'][.='10']\"\n            );\n\n    assertQ(req(\"q\", \"title:test\", \"sort\", \"val_s1 asc\")\n            ,\"//*[@numFound='3']\"\n            ,\"//result/doc[1]/str[@name='id'][.='10']\"\n            ,\"//result/doc[2]/str[@name='id'][.='11']\"\n            ,\"//result/doc[3]/str[@name='id'][.='12']\"\n            );\n  }\n\n","sourceOld":"  public void testSorting() throws Exception {\n    assertU(adoc(\"id\", \"10\", \"title\", \"test\", \"val_s1\", \"aaa\"));\n    assertU(adoc(\"id\", \"11\", \"title\", \"test\", \"val_s1\", \"bbb\"));\n    assertU(adoc(\"id\", \"12\", \"title\", \"test\", \"val_s1\", \"ccc\"));\n    assertU(commit());\n\n    assertQ(req(\"q\", \"title:test\")\n            ,\"//*[@numFound='3']\"\n            );\n    \n    assertQ(req(\"q\", \"title:test\", \"sort\",\"val_s1 asc\")\n            ,\"//*[@numFound='3']\"\n            ,\"//result/doc[1]/str[@name='id'][.='10']\"\n            ,\"//result/doc[2]/str[@name='id'][.='11']\"\n            ,\"//result/doc[3]/str[@name='id'][.='12']\"\n            );\n\n    assertQ(req(\"q\", \"title:test\", \"sort\",\"val_s1 desc\")\n            ,\"//*[@numFound='3']\"\n            ,\"//result/doc[1]/str[@name='id'][.='12']\"\n            ,\"//result/doc[2]/str[@name='id'][.='11']\"\n            ,\"//result/doc[3]/str[@name='id'][.='10']\"\n            );\n    \n    // Make sure score parsing works\n    assertQ(req(\"q\", \"title:test\", \"sort\",\"score desc\")\n        ,\"//*[@numFound='3']\"\n    );\n\n    assertQ(req(\"q\", \"title:test\", \"sort\",\"score asc\")\n        ,\"//*[@numFound='3']\"\n    );\n    \n    // Using legacy ';' param\n    assertQ(req(\"q\", \"title:test; val_s1 desc\", \"defType\",\"lucenePlusSort\")\n            ,\"//*[@numFound='3']\"\n            ,\"//result/doc[1]/str[@name='id'][.='12']\"\n            ,\"//result/doc[2]/str[@name='id'][.='11']\"\n            ,\"//result/doc[3]/str[@name='id'][.='10']\"\n            );\n\n    assertQ(req(\"q\", \"title:test; val_s1 asc\", \"defType\",\"lucenePlusSort\")\n            ,\"//*[@numFound='3']\"\n            ,\"//result/doc[1]/str[@name='id'][.='10']\"\n            ,\"//result/doc[2]/str[@name='id'][.='11']\"\n            ,\"//result/doc[3]/str[@name='id'][.='12']\"\n            );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"685bd38810c206c93e9058f3c2cfa9827c086c27":["30c8e5574b55d57947e989443dfde611646530ee","104a3f62ee393d48b5596de76ed4d9a4e0ea6de7"],"637559b0fb4d8b154a84b1af4661cb1b5d9c8415":["28288370235ed02234a64753cdbf0c6ec096304a"],"104a3f62ee393d48b5596de76ed4d9a4e0ea6de7":["28288370235ed02234a64753cdbf0c6ec096304a","637559b0fb4d8b154a84b1af4661cb1b5d9c8415"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"30c8e5574b55d57947e989443dfde611646530ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","28288370235ed02234a64753cdbf0c6ec096304a"],"28288370235ed02234a64753cdbf0c6ec096304a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5ff704ef91e9ae30ca59babb23ece85720701b60"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["104a3f62ee393d48b5596de76ed4d9a4e0ea6de7"],"5ff704ef91e9ae30ca59babb23ece85720701b60":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"685bd38810c206c93e9058f3c2cfa9827c086c27":[],"637559b0fb4d8b154a84b1af4661cb1b5d9c8415":["104a3f62ee393d48b5596de76ed4d9a4e0ea6de7"],"104a3f62ee393d48b5596de76ed4d9a4e0ea6de7":["685bd38810c206c93e9058f3c2cfa9827c086c27","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["30c8e5574b55d57947e989443dfde611646530ee","28288370235ed02234a64753cdbf0c6ec096304a","5ff704ef91e9ae30ca59babb23ece85720701b60"],"30c8e5574b55d57947e989443dfde611646530ee":["685bd38810c206c93e9058f3c2cfa9827c086c27"],"28288370235ed02234a64753cdbf0c6ec096304a":["637559b0fb4d8b154a84b1af4661cb1b5d9c8415","104a3f62ee393d48b5596de76ed4d9a4e0ea6de7","30c8e5574b55d57947e989443dfde611646530ee"],"5ff704ef91e9ae30ca59babb23ece85720701b60":["28288370235ed02234a64753cdbf0c6ec096304a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["685bd38810c206c93e9058f3c2cfa9827c086c27","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}