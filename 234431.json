{"path":"contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#doSearching(Query).mjava","commits":[{"id":"4ef0bc276292640209b4a2a0cb33ebdab85e1a5b","date":1143666100,"type":0,"author":"Mark Harwood","isMerge":false,"pathNew":"contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#doSearching(Query).mjava","pathOld":"/dev/null","sourceNew":"\tpublic void doSearching(Query unReWrittenQuery) throws Exception\n\t{\n\t\tsearcher = new IndexSearcher(ramDir);\n\t\t//for any multi-term queries to work (prefix, wildcard, range,fuzzy etc) you must use a rewritten query!\n\t\tquery=unReWrittenQuery.rewrite(reader);\n\t\tSystem.out.println(\"Searching for: \" + query.toString(FIELD_NAME));\n\t\thits = searcher.search(query);\n\t}\t\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"296b8b38a87feb478921f77834a2302dfe77641c","date":1209506838,"type":3,"author":"Mark Harwood","isMerge":false,"pathNew":"contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#doSearching(Query).mjava","pathOld":"contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#doSearching(Query).mjava","sourceNew":"  public void doSearching(Query unReWrittenQuery) throws Exception {\n    searcher = new IndexSearcher(ramDir);\n    // for any multi-term queries to work (prefix, wildcard, range,fuzzy etc)\n    // you must use a rewritten query!\n    query = unReWrittenQuery.rewrite(reader);\n    System.out.println(\"Searching for: \" + query.toString(FIELD_NAME));\n    hits = searcher.search(query);\n  }\n\n","sourceOld":"\tpublic void doSearching(Query unReWrittenQuery) throws Exception\n\t{\n\t\tsearcher = new IndexSearcher(ramDir);\n\t\t//for any multi-term queries to work (prefix, wildcard, range,fuzzy etc) you must use a rewritten query!\n\t\tquery=unReWrittenQuery.rewrite(reader);\n\t\tSystem.out.println(\"Searching for: \" + query.toString(FIELD_NAME));\n\t\thits = searcher.search(query);\n\t}\t\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4256bc1b3c94786287ccdfc751230374521843cf","date":1254612273,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#doSearching(Query).mjava","pathOld":"contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#doSearching(Query).mjava","sourceNew":"  public void doSearching(Query unReWrittenQuery) throws Exception {\n    searcher = new IndexSearcher(ramDir, true);\n    // for any multi-term queries to work (prefix, wildcard, range,fuzzy etc)\n    // you must use a rewritten query!\n    query = unReWrittenQuery.rewrite(reader);\n    System.out.println(\"Searching for: \" + query.toString(FIELD_NAME));\n    hits = searcher.search(query);\n  }\n\n","sourceOld":"  public void doSearching(Query unReWrittenQuery) throws Exception {\n    searcher = new IndexSearcher(ramDir);\n    // for any multi-term queries to work (prefix, wildcard, range,fuzzy etc)\n    // you must use a rewritten query!\n    query = unReWrittenQuery.rewrite(reader);\n    System.out.println(\"Searching for: \" + query.toString(FIELD_NAME));\n    hits = searcher.search(query);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f148c02ddd6ba981c65ca685d0e56c3a98368e1","date":1254892102,"type":3,"author":"Michael Busch","isMerge":false,"pathNew":"contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#doSearching(Query).mjava","pathOld":"contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#doSearching(Query).mjava","sourceNew":"  public void doSearching(Query unReWrittenQuery) throws Exception {\n    searcher = new IndexSearcher(ramDir, true);\n    // for any multi-term queries to work (prefix, wildcard, range,fuzzy etc)\n    // you must use a rewritten query!\n    query = unReWrittenQuery.rewrite(reader);\n    System.out.println(\"Searching for: \" + query.toString(FIELD_NAME));\n    hits = searcher.search(query, null, 1000);\n  }\n\n","sourceOld":"  public void doSearching(Query unReWrittenQuery) throws Exception {\n    searcher = new IndexSearcher(ramDir, true);\n    // for any multi-term queries to work (prefix, wildcard, range,fuzzy etc)\n    // you must use a rewritten query!\n    query = unReWrittenQuery.rewrite(reader);\n    System.out.println(\"Searching for: \" + query.toString(FIELD_NAME));\n    hits = searcher.search(query);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"42607aa380c892dc1ec0ab26e86a575c28e13618","date":1268641604,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#doSearching(Query).mjava","pathOld":"contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#doSearching(Query).mjava","sourceNew":"  public void doSearching(Query unReWrittenQuery) throws Exception {\n    searcher = new IndexSearcher(ramDir, true);\n    // for any multi-term queries to work (prefix, wildcard, range,fuzzy etc)\n    // you must use a rewritten query!\n    query = unReWrittenQuery.rewrite(reader);\n    if (VERBOSE) System.out.println(\"Searching for: \" + query.toString(FIELD_NAME));\n    hits = searcher.search(query, null, 1000);\n  }\n\n","sourceOld":"  public void doSearching(Query unReWrittenQuery) throws Exception {\n    searcher = new IndexSearcher(ramDir, true);\n    // for any multi-term queries to work (prefix, wildcard, range,fuzzy etc)\n    // you must use a rewritten query!\n    query = unReWrittenQuery.rewrite(reader);\n    System.out.println(\"Searching for: \" + query.toString(FIELD_NAME));\n    hits = searcher.search(query, null, 1000);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#doSearching(Query).mjava","pathOld":"contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#doSearching(Query).mjava","sourceNew":"  public void doSearching(Query unReWrittenQuery) throws Exception {\n    searcher = new IndexSearcher(ramDir, true);\n    // for any multi-term queries to work (prefix, wildcard, range,fuzzy etc)\n    // you must use a rewritten query!\n    query = unReWrittenQuery.rewrite(reader);\n    if (VERBOSE) System.out.println(\"Searching for: \" + query.toString(FIELD_NAME));\n    hits = searcher.search(query, null, 1000);\n  }\n\n","sourceOld":"  public void doSearching(Query unReWrittenQuery) throws Exception {\n    searcher = new IndexSearcher(ramDir, true);\n    // for any multi-term queries to work (prefix, wildcard, range,fuzzy etc)\n    // you must use a rewritten query!\n    query = unReWrittenQuery.rewrite(reader);\n    if (VERBOSE) System.out.println(\"Searching for: \" + query.toString(FIELD_NAME));\n    hits = searcher.search(query, null, 1000);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4ef0bc276292640209b4a2a0cb33ebdab85e1a5b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"42607aa380c892dc1ec0ab26e86a575c28e13618":["0f148c02ddd6ba981c65ca685d0e56c3a98368e1"],"0f148c02ddd6ba981c65ca685d0e56c3a98368e1":["4256bc1b3c94786287ccdfc751230374521843cf"],"4256bc1b3c94786287ccdfc751230374521843cf":["296b8b38a87feb478921f77834a2302dfe77641c"],"296b8b38a87feb478921f77834a2302dfe77641c":["4ef0bc276292640209b4a2a0cb33ebdab85e1a5b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["42607aa380c892dc1ec0ab26e86a575c28e13618"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4ef0bc276292640209b4a2a0cb33ebdab85e1a5b"],"4ef0bc276292640209b4a2a0cb33ebdab85e1a5b":["296b8b38a87feb478921f77834a2302dfe77641c"],"42607aa380c892dc1ec0ab26e86a575c28e13618":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"0f148c02ddd6ba981c65ca685d0e56c3a98368e1":["42607aa380c892dc1ec0ab26e86a575c28e13618"],"4256bc1b3c94786287ccdfc751230374521843cf":["0f148c02ddd6ba981c65ca685d0e56c3a98368e1"],"296b8b38a87feb478921f77834a2302dfe77641c":["4256bc1b3c94786287ccdfc751230374521843cf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}