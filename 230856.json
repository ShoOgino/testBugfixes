{"path":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#waitForNon403or404or503(HttpSolrClient).mjava","commits":[{"id":"bafca15d8e408346a67f4282ad1143b88023893b","date":1420034748,"type":1,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#waitForNon403or404or503(HttpSolrClient).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#waitForNon403or404or503(HttpSolrServer).mjava","sourceNew":" public  static void waitForNon403or404or503(HttpSolrClient collectionClient)\n      throws Exception {\n    SolrException exp = null;\n    long timeoutAt = System.currentTimeMillis() + 30000;\n\n    while (System.currentTimeMillis() < timeoutAt) {\n      boolean missing = false;\n\n      try {\n        collectionClient.query(new SolrQuery(\"*:*\"));\n      } catch (SolrException e) {\n        if (!(e.code() == 403 || e.code() == 503 || e.code() == 404)) {\n          throw e;\n        }\n        exp = e;\n        missing = true;\n      }\n      if (!missing) {\n        return;\n      }\n      Thread.sleep(50);\n    }\n\n    fail(\"Could not find the new collection - \" + exp.code() + \" : \" + collectionClient.getBaseURL());\n  }\n\n","sourceOld":" public  static void waitForNon403or404or503(HttpSolrServer collectionClient)\n      throws Exception {\n    SolrException exp = null;\n    long timeoutAt = System.currentTimeMillis() + 30000;\n\n    while (System.currentTimeMillis() < timeoutAt) {\n      boolean missing = false;\n\n      try {\n        collectionClient.query(new SolrQuery(\"*:*\"));\n      } catch (SolrException e) {\n        if (!(e.code() == 403 || e.code() == 503 || e.code() == 404)) {\n          throw e;\n        }\n        exp = e;\n        missing = true;\n      }\n      if (!missing) {\n        return;\n      }\n      Thread.sleep(50);\n    }\n\n    fail(\"Could not find the new collection - \" + exp.code() + \" : \" + collectionClient.getBaseURL());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"275019a81d0883a1db4560391b072d1fbe272ec4","date":1432741049,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#waitForNon403or404or503(HttpSolrClient).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#waitForNon403or404or503(HttpSolrClient).mjava","sourceNew":" public static void waitForNon403or404or503(HttpSolrClient collectionClient)\n      throws Exception {\n    SolrException exp = null;\n    long timeoutAt = System.currentTimeMillis() + 30000;\n\n    while (System.currentTimeMillis() < timeoutAt) {\n      boolean missing = false;\n\n      try {\n        collectionClient.query(new SolrQuery(\"*:*\"));\n      } catch (SolrException e) {\n        if (!(e.code() == 403 || e.code() == 503 || e.code() == 404)) {\n          throw e;\n        }\n        exp = e;\n        missing = true;\n      }\n      if (!missing) {\n        return;\n      }\n      Thread.sleep(50);\n    }\n\n    fail(\"Could not find the new collection - \" + exp.code() + \" : \" + collectionClient.getBaseURL());\n  }\n\n","sourceOld":" public  static void waitForNon403or404or503(HttpSolrClient collectionClient)\n      throws Exception {\n    SolrException exp = null;\n    long timeoutAt = System.currentTimeMillis() + 30000;\n\n    while (System.currentTimeMillis() < timeoutAt) {\n      boolean missing = false;\n\n      try {\n        collectionClient.query(new SolrQuery(\"*:*\"));\n      } catch (SolrException e) {\n        if (!(e.code() == 403 || e.code() == 503 || e.code() == 404)) {\n          throw e;\n        }\n        exp = e;\n        missing = true;\n      }\n      if (!missing) {\n        return;\n      }\n      Thread.sleep(50);\n    }\n\n    fail(\"Could not find the new collection - \" + exp.code() + \" : \" + collectionClient.getBaseURL());\n  }\n\n","bugFix":["bafca15d8e408346a67f4282ad1143b88023893b"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bcf9886c8ff537aafde14de48ebf744f5673f08b","date":1439041198,"type":3,"author":"Ramkumar Aiyengar","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#waitForNon403or404or503(HttpSolrClient).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#waitForNon403or404or503(HttpSolrClient).mjava","sourceNew":" public static void waitForNon403or404or503(HttpSolrClient collectionClient)\n      throws Exception {\n    SolrException exp = null;\n    final TimeOut timeout = new TimeOut(30, TimeUnit.SECONDS);\n\n    while (! timeout.hasTimedOut()) {\n      boolean missing = false;\n\n      try {\n        collectionClient.query(new SolrQuery(\"*:*\"));\n      } catch (SolrException e) {\n        if (!(e.code() == 403 || e.code() == 503 || e.code() == 404)) {\n          throw e;\n        }\n        exp = e;\n        missing = true;\n      }\n      if (!missing) {\n        return;\n      }\n      Thread.sleep(50);\n    }\n\n    fail(\"Could not find the new collection - \" + exp.code() + \" : \" + collectionClient.getBaseURL());\n  }\n\n","sourceOld":" public static void waitForNon403or404or503(HttpSolrClient collectionClient)\n      throws Exception {\n    SolrException exp = null;\n    long timeoutAt = System.currentTimeMillis() + 30000;\n\n    while (System.currentTimeMillis() < timeoutAt) {\n      boolean missing = false;\n\n      try {\n        collectionClient.query(new SolrQuery(\"*:*\"));\n      } catch (SolrException e) {\n        if (!(e.code() == 403 || e.code() == 503 || e.code() == 404)) {\n          throw e;\n        }\n        exp = e;\n        missing = true;\n      }\n      if (!missing) {\n        return;\n      }\n      Thread.sleep(50);\n    }\n\n    fail(\"Could not find the new collection - \" + exp.code() + \" : \" + collectionClient.getBaseURL());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1d4bf9d5308dfef350829c28f2b3b2648df1e9b1","date":1513252583,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#waitForNon403or404or503(HttpSolrClient).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#waitForNon403or404or503(HttpSolrClient).mjava","sourceNew":" public static void waitForNon403or404or503(HttpSolrClient collectionClient)\n      throws Exception {\n    SolrException exp = null;\n    final TimeOut timeout = new TimeOut(30, TimeUnit.SECONDS, TimeSource.NANO_TIME);\n\n    while (! timeout.hasTimedOut()) {\n      boolean missing = false;\n\n      try {\n        collectionClient.query(new SolrQuery(\"*:*\"));\n      } catch (SolrException e) {\n        if (!(e.code() == 403 || e.code() == 503 || e.code() == 404)) {\n          throw e;\n        }\n        exp = e;\n        missing = true;\n      }\n      if (!missing) {\n        return;\n      }\n      Thread.sleep(50);\n    }\n\n    fail(\"Could not find the new collection - \" + exp.code() + \" : \" + collectionClient.getBaseURL());\n  }\n\n","sourceOld":" public static void waitForNon403or404or503(HttpSolrClient collectionClient)\n      throws Exception {\n    SolrException exp = null;\n    final TimeOut timeout = new TimeOut(30, TimeUnit.SECONDS);\n\n    while (! timeout.hasTimedOut()) {\n      boolean missing = false;\n\n      try {\n        collectionClient.query(new SolrQuery(\"*:*\"));\n      } catch (SolrException e) {\n        if (!(e.code() == 403 || e.code() == 503 || e.code() == 404)) {\n          throw e;\n        }\n        exp = e;\n        missing = true;\n      }\n      if (!missing) {\n        return;\n      }\n      Thread.sleep(50);\n    }\n\n    fail(\"Could not find the new collection - \" + exp.code() + \" : \" + collectionClient.getBaseURL());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bcf9886c8ff537aafde14de48ebf744f5673f08b":["275019a81d0883a1db4560391b072d1fbe272ec4"],"bafca15d8e408346a67f4282ad1143b88023893b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"1d4bf9d5308dfef350829c28f2b3b2648df1e9b1":["bcf9886c8ff537aafde14de48ebf744f5673f08b"],"275019a81d0883a1db4560391b072d1fbe272ec4":["bafca15d8e408346a67f4282ad1143b88023893b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1d4bf9d5308dfef350829c28f2b3b2648df1e9b1"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["bafca15d8e408346a67f4282ad1143b88023893b"],"bcf9886c8ff537aafde14de48ebf744f5673f08b":["1d4bf9d5308dfef350829c28f2b3b2648df1e9b1"],"bafca15d8e408346a67f4282ad1143b88023893b":["275019a81d0883a1db4560391b072d1fbe272ec4"],"1d4bf9d5308dfef350829c28f2b3b2648df1e9b1":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"275019a81d0883a1db4560391b072d1fbe272ec4":["bcf9886c8ff537aafde14de48ebf744f5673f08b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}