{"path":"lucene/contrib/misc/src/java/org/apache/lucene/store/DirectIOLinuxDirectory.DirectIOLinuxIndexOutput#seek(long).mjava","commits":[{"id":"95ddefb56022771b5d4a53dc1baa806d2a14cfa9","date":1277381661,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/contrib/misc/src/java/org/apache/lucene/store/DirectIOLinuxDirectory.DirectIOLinuxIndexOutput#seek(long).mjava","pathOld":"/dev/null","sourceNew":"    // TODO: seek is fragile at best; it can only properly\n    // handle seek & then change bytes that fit entirely\n    // within one buffer\n    @Override\n    public void seek(long pos) throws IOException {\n      if (pos != getFilePointer()) {\n        dump();\n        final long alignedPos = pos & ALIGN_NOT_MASK;\n        filePos = alignedPos;\n        int n = (int) NativePosixUtil.pread(fos.getFD(), filePos, buffer);\n        if (n < bufferSize) {\n          buffer.limit(n);\n        }\n        //System.out.println(\"seek refill=\" + n);\n        final int delta = (int) (pos - alignedPos);\n        buffer.position(delta);\n        bufferPos = delta;\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5f4e87790277826a2aea119328600dfb07761f32","date":1279827275,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/contrib/misc/src/java/org/apache/lucene/store/DirectIOLinuxDirectory.DirectIOLinuxIndexOutput#seek(long).mjava","pathOld":"/dev/null","sourceNew":"    // TODO: seek is fragile at best; it can only properly\n    // handle seek & then change bytes that fit entirely\n    // within one buffer\n    @Override\n    public void seek(long pos) throws IOException {\n      if (pos != getFilePointer()) {\n        dump();\n        final long alignedPos = pos & ALIGN_NOT_MASK;\n        filePos = alignedPos;\n        int n = (int) NativePosixUtil.pread(fos.getFD(), filePos, buffer);\n        if (n < bufferSize) {\n          buffer.limit(n);\n        }\n        //System.out.println(\"seek refill=\" + n);\n        final int delta = (int) (pos - alignedPos);\n        buffer.position(delta);\n        bufferPos = delta;\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d5243f2425292adfa2c094097311654ae59588bc","date":1327855765,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/contrib/misc/src/java/org/apache/lucene/store/NativeUnixDirectory.NativeUnixIndexOutput#seek(long).mjava","pathOld":"lucene/contrib/misc/src/java/org/apache/lucene/store/DirectIOLinuxDirectory.DirectIOLinuxIndexOutput#seek(long).mjava","sourceNew":"    // TODO: seek is fragile at best; it can only properly\n    // handle seek & then change bytes that fit entirely\n    // within one buffer\n    @Override\n    public void seek(long pos) throws IOException {\n      if (pos != getFilePointer()) {\n        dump();\n        final long alignedPos = pos & ALIGN_NOT_MASK;\n        filePos = alignedPos;\n        int n = (int) NativePosixUtil.pread(fos.getFD(), filePos, buffer);\n        if (n < bufferSize) {\n          buffer.limit(n);\n        }\n        //System.out.println(\"seek refill=\" + n);\n        final int delta = (int) (pos - alignedPos);\n        buffer.position(delta);\n        bufferPos = delta;\n      }\n    }\n\n","sourceOld":"    // TODO: seek is fragile at best; it can only properly\n    // handle seek & then change bytes that fit entirely\n    // within one buffer\n    @Override\n    public void seek(long pos) throws IOException {\n      if (pos != getFilePointer()) {\n        dump();\n        final long alignedPos = pos & ALIGN_NOT_MASK;\n        filePos = alignedPos;\n        int n = (int) NativePosixUtil.pread(fos.getFD(), filePos, buffer);\n        if (n < bufferSize) {\n          buffer.limit(n);\n        }\n        //System.out.println(\"seek refill=\" + n);\n        final int delta = (int) (pos - alignedPos);\n        buffer.position(delta);\n        bufferPos = delta;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"817882884229bace7dc5d1b75f6b0e4aa1e47122","date":1327879145,"type":5,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/contrib/misc/src/java/org/apache/lucene/store/NativeUnixDirectory.NativeUnixIndexOutput#seek(long).mjava","pathOld":"lucene/contrib/misc/src/java/org/apache/lucene/store/DirectIOLinuxDirectory.DirectIOLinuxIndexOutput#seek(long).mjava","sourceNew":"    // TODO: seek is fragile at best; it can only properly\n    // handle seek & then change bytes that fit entirely\n    // within one buffer\n    @Override\n    public void seek(long pos) throws IOException {\n      if (pos != getFilePointer()) {\n        dump();\n        final long alignedPos = pos & ALIGN_NOT_MASK;\n        filePos = alignedPos;\n        int n = (int) NativePosixUtil.pread(fos.getFD(), filePos, buffer);\n        if (n < bufferSize) {\n          buffer.limit(n);\n        }\n        //System.out.println(\"seek refill=\" + n);\n        final int delta = (int) (pos - alignedPos);\n        buffer.position(delta);\n        bufferPos = delta;\n      }\n    }\n\n","sourceOld":"    // TODO: seek is fragile at best; it can only properly\n    // handle seek & then change bytes that fit entirely\n    // within one buffer\n    @Override\n    public void seek(long pos) throws IOException {\n      if (pos != getFilePointer()) {\n        dump();\n        final long alignedPos = pos & ALIGN_NOT_MASK;\n        filePos = alignedPos;\n        int n = (int) NativePosixUtil.pread(fos.getFD(), filePos, buffer);\n        if (n < bufferSize) {\n          buffer.limit(n);\n        }\n        //System.out.println(\"seek refill=\" + n);\n        final int delta = (int) (pos - alignedPos);\n        buffer.position(delta);\n        bufferPos = delta;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5b6fdfce35d0adb18836cf8711abe487a934df33","date":1327946200,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/contrib/misc/src/java/org/apache/lucene/store/NativeUnixDirectory.NativeUnixIndexOutput#seek(long).mjava","pathOld":"lucene/contrib/misc/src/java/org/apache/lucene/store/DirectIOLinuxDirectory.DirectIOLinuxIndexOutput#seek(long).mjava","sourceNew":"    // TODO: seek is fragile at best; it can only properly\n    // handle seek & then change bytes that fit entirely\n    // within one buffer\n    @Override\n    public void seek(long pos) throws IOException {\n      if (pos != getFilePointer()) {\n        dump();\n        final long alignedPos = pos & ALIGN_NOT_MASK;\n        filePos = alignedPos;\n        int n = (int) NativePosixUtil.pread(fos.getFD(), filePos, buffer);\n        if (n < bufferSize) {\n          buffer.limit(n);\n        }\n        //System.out.println(\"seek refill=\" + n);\n        final int delta = (int) (pos - alignedPos);\n        buffer.position(delta);\n        bufferPos = delta;\n      }\n    }\n\n","sourceOld":"    // TODO: seek is fragile at best; it can only properly\n    // handle seek & then change bytes that fit entirely\n    // within one buffer\n    @Override\n    public void seek(long pos) throws IOException {\n      if (pos != getFilePointer()) {\n        dump();\n        final long alignedPos = pos & ALIGN_NOT_MASK;\n        filePos = alignedPos;\n        int n = (int) NativePosixUtil.pread(fos.getFD(), filePos, buffer);\n        if (n < bufferSize) {\n          buffer.limit(n);\n        }\n        //System.out.println(\"seek refill=\" + n);\n        final int delta = (int) (pos - alignedPos);\n        buffer.position(delta);\n        bufferPos = delta;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"817882884229bace7dc5d1b75f6b0e4aa1e47122":["95ddefb56022771b5d4a53dc1baa806d2a14cfa9","d5243f2425292adfa2c094097311654ae59588bc"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5b6fdfce35d0adb18836cf8711abe487a934df33":["95ddefb56022771b5d4a53dc1baa806d2a14cfa9","d5243f2425292adfa2c094097311654ae59588bc"],"d5243f2425292adfa2c094097311654ae59588bc":["95ddefb56022771b5d4a53dc1baa806d2a14cfa9"],"5f4e87790277826a2aea119328600dfb07761f32":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","95ddefb56022771b5d4a53dc1baa806d2a14cfa9"],"95ddefb56022771b5d4a53dc1baa806d2a14cfa9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d5243f2425292adfa2c094097311654ae59588bc"]},"commit2Childs":{"817882884229bace7dc5d1b75f6b0e4aa1e47122":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5f4e87790277826a2aea119328600dfb07761f32","95ddefb56022771b5d4a53dc1baa806d2a14cfa9"],"5b6fdfce35d0adb18836cf8711abe487a934df33":[],"d5243f2425292adfa2c094097311654ae59588bc":["817882884229bace7dc5d1b75f6b0e4aa1e47122","5b6fdfce35d0adb18836cf8711abe487a934df33","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5f4e87790277826a2aea119328600dfb07761f32":[],"95ddefb56022771b5d4a53dc1baa806d2a14cfa9":["817882884229bace7dc5d1b75f6b0e4aa1e47122","5b6fdfce35d0adb18836cf8711abe487a934df33","d5243f2425292adfa2c094097311654ae59588bc","5f4e87790277826a2aea119328600dfb07761f32"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["817882884229bace7dc5d1b75f6b0e4aa1e47122","5b6fdfce35d0adb18836cf8711abe487a934df33","5f4e87790277826a2aea119328600dfb07761f32","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}