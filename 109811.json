{"path":"lucene/contrib/spellchecker/src/java/org/apache/lucene/search/spell/DirectSpellChecker#setThresholdFrequency(float).mjava","commits":[{"id":"1774e2854ef0f77de7f31ba1d9586139928e06fe","date":1285965652,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/spellchecker/src/java/org/apache/lucene/search/spell/DirectSpellChecker#setThresholdFrequency(float).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Set the minimal threshold of documents a term must appear for a match.\n   * <p>\n   * This can improve quality by only suggesting high-frequency terms. Note that\n   * very high values might decrease performance slightly, by forcing the spellchecker\n   * to draw more candidates from the term dictionary, but a practical value such\n   * as <code>1</code> can be very useful towards improving quality.\n   * <p>\n   * This can be specified as a relative percentage of documents such as 0.5f,\n   * or it can be specified as an absolute whole document frequency, such as 4f.\n   * Absolute document frequencies may not be fractional.\n   */\n  public void setThresholdFrequency(float thresholdFrequency) {\n    if (thresholdFrequency >= 1f && thresholdFrequency != (int) thresholdFrequency)\n      throw new IllegalArgumentException(\"Fractional absolute document frequencies are not allowed\");\n    this.thresholdFrequency = thresholdFrequency;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/contrib/spellchecker/src/java/org/apache/lucene/search/spell/DirectSpellChecker#setThresholdFrequency(float).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Set the minimal threshold of documents a term must appear for a match.\n   * <p>\n   * This can improve quality by only suggesting high-frequency terms. Note that\n   * very high values might decrease performance slightly, by forcing the spellchecker\n   * to draw more candidates from the term dictionary, but a practical value such\n   * as <code>1</code> can be very useful towards improving quality.\n   * <p>\n   * This can be specified as a relative percentage of documents such as 0.5f,\n   * or it can be specified as an absolute whole document frequency, such as 4f.\n   * Absolute document frequencies may not be fractional.\n   */\n  public void setThresholdFrequency(float thresholdFrequency) {\n    if (thresholdFrequency >= 1f && thresholdFrequency != (int) thresholdFrequency)\n      throw new IllegalArgumentException(\"Fractional absolute document frequencies are not allowed\");\n    this.thresholdFrequency = thresholdFrequency;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e230a61047bc041516c811baa08a7174d6f8322a","date":1306175633,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"modules/suggest/src/java/org/apache/lucene/search/spell/DirectSpellChecker#setThresholdFrequency(float).mjava","pathOld":"lucene/contrib/spellchecker/src/java/org/apache/lucene/search/spell/DirectSpellChecker#setThresholdFrequency(float).mjava","sourceNew":"  /**\n   * Set the minimal threshold of documents a term must appear for a match.\n   * <p>\n   * This can improve quality by only suggesting high-frequency terms. Note that\n   * very high values might decrease performance slightly, by forcing the spellchecker\n   * to draw more candidates from the term dictionary, but a practical value such\n   * as <code>1</code> can be very useful towards improving quality.\n   * <p>\n   * This can be specified as a relative percentage of documents such as 0.5f,\n   * or it can be specified as an absolute whole document frequency, such as 4f.\n   * Absolute document frequencies may not be fractional.\n   */\n  public void setThresholdFrequency(float thresholdFrequency) {\n    if (thresholdFrequency >= 1f && thresholdFrequency != (int) thresholdFrequency)\n      throw new IllegalArgumentException(\"Fractional absolute document frequencies are not allowed\");\n    this.thresholdFrequency = thresholdFrequency;\n  }\n\n","sourceOld":"  /**\n   * Set the minimal threshold of documents a term must appear for a match.\n   * <p>\n   * This can improve quality by only suggesting high-frequency terms. Note that\n   * very high values might decrease performance slightly, by forcing the spellchecker\n   * to draw more candidates from the term dictionary, but a practical value such\n   * as <code>1</code> can be very useful towards improving quality.\n   * <p>\n   * This can be specified as a relative percentage of documents such as 0.5f,\n   * or it can be specified as an absolute whole document frequency, such as 4f.\n   * Absolute document frequencies may not be fractional.\n   */\n  public void setThresholdFrequency(float thresholdFrequency) {\n    if (thresholdFrequency >= 1f && thresholdFrequency != (int) thresholdFrequency)\n      throw new IllegalArgumentException(\"Fractional absolute document frequencies are not allowed\");\n    this.thresholdFrequency = thresholdFrequency;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"modules/suggest/src/java/org/apache/lucene/search/spell/DirectSpellChecker#setThresholdFrequency(float).mjava","pathOld":"lucene/contrib/spellchecker/src/java/org/apache/lucene/search/spell/DirectSpellChecker#setThresholdFrequency(float).mjava","sourceNew":"  /**\n   * Set the minimal threshold of documents a term must appear for a match.\n   * <p>\n   * This can improve quality by only suggesting high-frequency terms. Note that\n   * very high values might decrease performance slightly, by forcing the spellchecker\n   * to draw more candidates from the term dictionary, but a practical value such\n   * as <code>1</code> can be very useful towards improving quality.\n   * <p>\n   * This can be specified as a relative percentage of documents such as 0.5f,\n   * or it can be specified as an absolute whole document frequency, such as 4f.\n   * Absolute document frequencies may not be fractional.\n   */\n  public void setThresholdFrequency(float thresholdFrequency) {\n    if (thresholdFrequency >= 1f && thresholdFrequency != (int) thresholdFrequency)\n      throw new IllegalArgumentException(\"Fractional absolute document frequencies are not allowed\");\n    this.thresholdFrequency = thresholdFrequency;\n  }\n\n","sourceOld":"  /**\n   * Set the minimal threshold of documents a term must appear for a match.\n   * <p>\n   * This can improve quality by only suggesting high-frequency terms. Note that\n   * very high values might decrease performance slightly, by forcing the spellchecker\n   * to draw more candidates from the term dictionary, but a practical value such\n   * as <code>1</code> can be very useful towards improving quality.\n   * <p>\n   * This can be specified as a relative percentage of documents such as 0.5f,\n   * or it can be specified as an absolute whole document frequency, such as 4f.\n   * Absolute document frequencies may not be fractional.\n   */\n  public void setThresholdFrequency(float thresholdFrequency) {\n    if (thresholdFrequency >= 1f && thresholdFrequency != (int) thresholdFrequency)\n      throw new IllegalArgumentException(\"Fractional absolute document frequencies are not allowed\");\n    this.thresholdFrequency = thresholdFrequency;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e10cb22a8bdb44339e282925a29182bb2f3174d","date":1306841137,"type":5,"author":"Simon Willnauer","isMerge":true,"pathNew":"modules/suggest/src/java/org/apache/lucene/search/spell/DirectSpellChecker#setThresholdFrequency(float).mjava","pathOld":"lucene/contrib/spellchecker/src/java/org/apache/lucene/search/spell/DirectSpellChecker#setThresholdFrequency(float).mjava","sourceNew":"  /**\n   * Set the minimal threshold of documents a term must appear for a match.\n   * <p>\n   * This can improve quality by only suggesting high-frequency terms. Note that\n   * very high values might decrease performance slightly, by forcing the spellchecker\n   * to draw more candidates from the term dictionary, but a practical value such\n   * as <code>1</code> can be very useful towards improving quality.\n   * <p>\n   * This can be specified as a relative percentage of documents such as 0.5f,\n   * or it can be specified as an absolute whole document frequency, such as 4f.\n   * Absolute document frequencies may not be fractional.\n   */\n  public void setThresholdFrequency(float thresholdFrequency) {\n    if (thresholdFrequency >= 1f && thresholdFrequency != (int) thresholdFrequency)\n      throw new IllegalArgumentException(\"Fractional absolute document frequencies are not allowed\");\n    this.thresholdFrequency = thresholdFrequency;\n  }\n\n","sourceOld":"  /**\n   * Set the minimal threshold of documents a term must appear for a match.\n   * <p>\n   * This can improve quality by only suggesting high-frequency terms. Note that\n   * very high values might decrease performance slightly, by forcing the spellchecker\n   * to draw more candidates from the term dictionary, but a practical value such\n   * as <code>1</code> can be very useful towards improving quality.\n   * <p>\n   * This can be specified as a relative percentage of documents such as 0.5f,\n   * or it can be specified as an absolute whole document frequency, such as 4f.\n   * Absolute document frequencies may not be fractional.\n   */\n  public void setThresholdFrequency(float thresholdFrequency) {\n    if (thresholdFrequency >= 1f && thresholdFrequency != (int) thresholdFrequency)\n      throw new IllegalArgumentException(\"Fractional absolute document frequencies are not allowed\");\n    this.thresholdFrequency = thresholdFrequency;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e230a61047bc041516c811baa08a7174d6f8322a":["1774e2854ef0f77de7f31ba1d9586139928e06fe"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["1774e2854ef0f77de7f31ba1d9586139928e06fe","e230a61047bc041516c811baa08a7174d6f8322a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1774e2854ef0f77de7f31ba1d9586139928e06fe":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","1774e2854ef0f77de7f31ba1d9586139928e06fe"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e230a61047bc041516c811baa08a7174d6f8322a"],"2e10cb22a8bdb44339e282925a29182bb2f3174d":["1774e2854ef0f77de7f31ba1d9586139928e06fe","e230a61047bc041516c811baa08a7174d6f8322a"]},"commit2Childs":{"e230a61047bc041516c811baa08a7174d6f8322a":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","cd5edd1f2b162a5cfa08efd17851a07373a96817","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1774e2854ef0f77de7f31ba1d9586139928e06fe","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"1774e2854ef0f77de7f31ba1d9586139928e06fe":["e230a61047bc041516c811baa08a7174d6f8322a","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"2e10cb22a8bdb44339e282925a29182bb2f3174d":[]},"heads":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}