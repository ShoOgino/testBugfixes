{"path":"solr/core/src/java/org/apache/solr/util/SolrCLI.ToolBase#setBasicAuth(CommandLine).mjava","commits":[{"id":"3e4a9106065a4a11ef25c33e0e1eabd34bfbec38","date":1465913265,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.ToolBase#setBasicAuth(CommandLine).mjava","pathOld":"/dev/null","sourceNew":"    private void setBasicAuth(CommandLine cli) throws Exception {\n      String basicauth = System.getProperty(\"basicauth\", null);\n      if (basicauth != null) {\n        List<String> ss = StrUtils.splitSmart(basicauth, ':');\n        if (ss.size() != 2)\n          throw new Exception(\"Please provide 'basicauth' in the 'user:password' format\");\n\n        HttpClientUtil.addRequestInterceptor((httpRequest, httpContext) -> {\n          String pair = ss.get(0) + \":\" + ss.get(1);\n          byte[] encodedBytes = Base64.encodeBase64(pair.getBytes());\n          httpRequest.addHeader(new BasicHeader(\"Authorization\", \"Basic \"+ new String(encodedBytes)));\n        });\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"55ec7b7bbe867ff6e7c14edecb483f938ff0da73","date":1465913628,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.ToolBase#setBasicAuth(CommandLine).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.ToolBase#setBasicAuth(CommandLine).mjava","sourceNew":"    private void setBasicAuth(CommandLine cli) throws Exception {\n      String basicauth = System.getProperty(\"basicauth\", null);\n      if (basicauth != null) {\n        List<String> ss = StrUtils.splitSmart(basicauth, ':');\n        if (ss.size() != 2)\n          throw new Exception(\"Please provide 'basicauth' in the 'user:password' format\");\n\n        HttpClientUtil.addRequestInterceptor((httpRequest, httpContext) -> {\n          String pair = ss.get(0) + \":\" + ss.get(1);\n          byte[] encodedBytes = Base64.encodeBase64(pair.getBytes(StandardCharsets.UTF_8));\n          httpRequest.addHeader(new BasicHeader(\"Authorization\", \"Basic \"+ new String(encodedBytes)));\n        });\n      }\n    }\n\n","sourceOld":"    private void setBasicAuth(CommandLine cli) throws Exception {\n      String basicauth = System.getProperty(\"basicauth\", null);\n      if (basicauth != null) {\n        List<String> ss = StrUtils.splitSmart(basicauth, ':');\n        if (ss.size() != 2)\n          throw new Exception(\"Please provide 'basicauth' in the 'user:password' format\");\n\n        HttpClientUtil.addRequestInterceptor((httpRequest, httpContext) -> {\n          String pair = ss.get(0) + \":\" + ss.get(1);\n          byte[] encodedBytes = Base64.encodeBase64(pair.getBytes());\n          httpRequest.addHeader(new BasicHeader(\"Authorization\", \"Basic \"+ new String(encodedBytes)));\n        });\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"30a2b2a7398bbacbd8139fd421e060592fd79a60","date":1465913838,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.ToolBase#setBasicAuth(CommandLine).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.ToolBase#setBasicAuth(CommandLine).mjava","sourceNew":"    private void setBasicAuth(CommandLine cli) throws Exception {\n      String basicauth = System.getProperty(\"basicauth\", null);\n      if (basicauth != null) {\n        List<String> ss = StrUtils.splitSmart(basicauth, ':');\n        if (ss.size() != 2)\n          throw new Exception(\"Please provide 'basicauth' in the 'user:password' format\");\n\n        HttpClientUtil.addRequestInterceptor((httpRequest, httpContext) -> {\n          String pair = ss.get(0) + \":\" + ss.get(1);\n          byte[] encodedBytes = Base64.encodeBase64(pair.getBytes(UTF_8));\n          httpRequest.addHeader(new BasicHeader(\"Authorization\", \"Basic \"+ new String(encodedBytes, UTF_8)));\n        });\n      }\n    }\n\n","sourceOld":"    private void setBasicAuth(CommandLine cli) throws Exception {\n      String basicauth = System.getProperty(\"basicauth\", null);\n      if (basicauth != null) {\n        List<String> ss = StrUtils.splitSmart(basicauth, ':');\n        if (ss.size() != 2)\n          throw new Exception(\"Please provide 'basicauth' in the 'user:password' format\");\n\n        HttpClientUtil.addRequestInterceptor((httpRequest, httpContext) -> {\n          String pair = ss.get(0) + \":\" + ss.get(1);\n          byte[] encodedBytes = Base64.encodeBase64(pair.getBytes(StandardCharsets.UTF_8));\n          httpRequest.addHeader(new BasicHeader(\"Authorization\", \"Basic \"+ new String(encodedBytes)));\n        });\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9272a617a9cbebf86be127014bbbacd7cf8f8e83","date":1467480344,"type":3,"author":"Erick","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.ToolBase#setBasicAuth(CommandLine).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.ToolBase#setBasicAuth(CommandLine).mjava","sourceNew":"    private void setBasicAuth(CommandLine cli) throws Exception {\n      String basicauth = System.getProperty(\"basicauth\", null);\n      if (basicauth != null) {\n        List<String> ss = StrUtils.splitSmart(basicauth, ':');\n        if (ss.size() != 2)\n          throw new Exception(\"Please provide 'basicauth' in the 'user:password' format\");\n\n        HttpClientUtil.addRequestInterceptor((httpRequest, httpContext) -> {\n          String pair = ss.get(0) + \":\" + ss.get(1);\n          byte[] encodedBytes = Base64.encodeBase64(pair.getBytes(UTF_8));\n          httpRequest.addHeader(new BasicHeader(\"Authorization\", \"Basic \" + new String(encodedBytes, UTF_8)));\n        });\n      }\n    }\n\n","sourceOld":"    private void setBasicAuth(CommandLine cli) throws Exception {\n      String basicauth = System.getProperty(\"basicauth\", null);\n      if (basicauth != null) {\n        List<String> ss = StrUtils.splitSmart(basicauth, ':');\n        if (ss.size() != 2)\n          throw new Exception(\"Please provide 'basicauth' in the 'user:password' format\");\n\n        HttpClientUtil.addRequestInterceptor((httpRequest, httpContext) -> {\n          String pair = ss.get(0) + \":\" + ss.get(1);\n          byte[] encodedBytes = Base64.encodeBase64(pair.getBytes(UTF_8));\n          httpRequest.addHeader(new BasicHeader(\"Authorization\", \"Basic \"+ new String(encodedBytes, UTF_8)));\n        });\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9b95105f40584c3ef98e6a1ab1b55ad47d67f136","date":1476256601,"type":3,"author":"Jan Høydahl","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.ToolBase#setBasicAuth(CommandLine).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.ToolBase#setBasicAuth(CommandLine).mjava","sourceNew":"    protected void setBasicAuth(CommandLine cli) throws Exception {\n      String basicauth = System.getProperty(\"basicauth\", null);\n      if (basicauth != null) {\n        List<String> ss = StrUtils.splitSmart(basicauth, ':');\n        if (ss.size() != 2)\n          throw new Exception(\"Please provide 'basicauth' in the 'user:password' format\");\n\n        HttpClientUtil.addRequestInterceptor((httpRequest, httpContext) -> {\n          String pair = ss.get(0) + \":\" + ss.get(1);\n          byte[] encodedBytes = Base64.encodeBase64(pair.getBytes(UTF_8));\n          httpRequest.addHeader(new BasicHeader(\"Authorization\", \"Basic \" + new String(encodedBytes, UTF_8)));\n        });\n      }\n    }\n\n","sourceOld":"    private void setBasicAuth(CommandLine cli) throws Exception {\n      String basicauth = System.getProperty(\"basicauth\", null);\n      if (basicauth != null) {\n        List<String> ss = StrUtils.splitSmart(basicauth, ':');\n        if (ss.size() != 2)\n          throw new Exception(\"Please provide 'basicauth' in the 'user:password' format\");\n\n        HttpClientUtil.addRequestInterceptor((httpRequest, httpContext) -> {\n          String pair = ss.get(0) + \":\" + ss.get(1);\n          byte[] encodedBytes = Base64.encodeBase64(pair.getBytes(UTF_8));\n          httpRequest.addHeader(new BasicHeader(\"Authorization\", \"Basic \" + new String(encodedBytes, UTF_8)));\n        });\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/SolrCLI.ToolBase#setBasicAuth(CommandLine).mjava","pathOld":"/dev/null","sourceNew":"    protected void setBasicAuth(CommandLine cli) throws Exception {\n      String basicauth = System.getProperty(\"basicauth\", null);\n      if (basicauth != null) {\n        List<String> ss = StrUtils.splitSmart(basicauth, ':');\n        if (ss.size() != 2)\n          throw new Exception(\"Please provide 'basicauth' in the 'user:password' format\");\n\n        HttpClientUtil.addRequestInterceptor((httpRequest, httpContext) -> {\n          String pair = ss.get(0) + \":\" + ss.get(1);\n          byte[] encodedBytes = Base64.encodeBase64(pair.getBytes(UTF_8));\n          httpRequest.addHeader(new BasicHeader(\"Authorization\", \"Basic \" + new String(encodedBytes, UTF_8)));\n        });\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8677448a186f4abd32218787f7ae73ad38f575cf","date":1477484362,"type":4,"author":"Jan Høydahl","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.ToolBase#setBasicAuth(CommandLine).mjava","sourceNew":null,"sourceOld":"    protected void setBasicAuth(CommandLine cli) throws Exception {\n      String basicauth = System.getProperty(\"basicauth\", null);\n      if (basicauth != null) {\n        List<String> ss = StrUtils.splitSmart(basicauth, ':');\n        if (ss.size() != 2)\n          throw new Exception(\"Please provide 'basicauth' in the 'user:password' format\");\n\n        HttpClientUtil.addRequestInterceptor((httpRequest, httpContext) -> {\n          String pair = ss.get(0) + \":\" + ss.get(1);\n          byte[] encodedBytes = Base64.encodeBase64(pair.getBytes(UTF_8));\n          httpRequest.addHeader(new BasicHeader(\"Authorization\", \"Basic \" + new String(encodedBytes, UTF_8)));\n        });\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"80d0e6d59ae23f4a6f30eaf40bfb40742300287f","date":1477598926,"type":4,"author":"Kevin Risden","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/util/SolrCLI.ToolBase#setBasicAuth(CommandLine).mjava","sourceNew":null,"sourceOld":"    protected void setBasicAuth(CommandLine cli) throws Exception {\n      String basicauth = System.getProperty(\"basicauth\", null);\n      if (basicauth != null) {\n        List<String> ss = StrUtils.splitSmart(basicauth, ':');\n        if (ss.size() != 2)\n          throw new Exception(\"Please provide 'basicauth' in the 'user:password' format\");\n\n        HttpClientUtil.addRequestInterceptor((httpRequest, httpContext) -> {\n          String pair = ss.get(0) + \":\" + ss.get(1);\n          byte[] encodedBytes = Base64.encodeBase64(pair.getBytes(UTF_8));\n          httpRequest.addHeader(new BasicHeader(\"Authorization\", \"Basic \" + new String(encodedBytes, UTF_8)));\n        });\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8677448a186f4abd32218787f7ae73ad38f575cf":["9b95105f40584c3ef98e6a1ab1b55ad47d67f136"],"9272a617a9cbebf86be127014bbbacd7cf8f8e83":["30a2b2a7398bbacbd8139fd421e060592fd79a60"],"55ec7b7bbe867ff6e7c14edecb483f938ff0da73":["3e4a9106065a4a11ef25c33e0e1eabd34bfbec38"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"80d0e6d59ae23f4a6f30eaf40bfb40742300287f":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","8677448a186f4abd32218787f7ae73ad38f575cf"],"30a2b2a7398bbacbd8139fd421e060592fd79a60":["55ec7b7bbe867ff6e7c14edecb483f938ff0da73"],"9b95105f40584c3ef98e6a1ab1b55ad47d67f136":["9272a617a9cbebf86be127014bbbacd7cf8f8e83"],"3e4a9106065a4a11ef25c33e0e1eabd34bfbec38":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","9b95105f40584c3ef98e6a1ab1b55ad47d67f136"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8677448a186f4abd32218787f7ae73ad38f575cf"]},"commit2Childs":{"8677448a186f4abd32218787f7ae73ad38f575cf":["80d0e6d59ae23f4a6f30eaf40bfb40742300287f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9272a617a9cbebf86be127014bbbacd7cf8f8e83":["9b95105f40584c3ef98e6a1ab1b55ad47d67f136"],"55ec7b7bbe867ff6e7c14edecb483f938ff0da73":["30a2b2a7398bbacbd8139fd421e060592fd79a60"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3e4a9106065a4a11ef25c33e0e1eabd34bfbec38","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"80d0e6d59ae23f4a6f30eaf40bfb40742300287f":[],"30a2b2a7398bbacbd8139fd421e060592fd79a60":["9272a617a9cbebf86be127014bbbacd7cf8f8e83"],"9b95105f40584c3ef98e6a1ab1b55ad47d67f136":["8677448a186f4abd32218787f7ae73ad38f575cf","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"3e4a9106065a4a11ef25c33e0e1eabd34bfbec38":["55ec7b7bbe867ff6e7c14edecb483f938ff0da73"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["80d0e6d59ae23f4a6f30eaf40bfb40742300287f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["80d0e6d59ae23f4a6f30eaf40bfb40742300287f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}