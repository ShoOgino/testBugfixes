{"path":"solr/core/src/test/org/apache/solr/cloud/TestMiniSolrCloudCluster#uploadConfigToZk(String,String).mjava","commits":[{"id":"6e619491f96eb1c2c64d9f8134326816b0bcd2e4","date":1395198663,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestMiniSolrCloudCluster#uploadConfigToZk(String,String).mjava","pathOld":"/dev/null","sourceNew":"  protected void uploadConfigToZk(String configDir, String configName) throws Exception {\n    // override settings in the solrconfig include\n    System.setProperty(\"solr.tests.maxBufferedDocs\", \"100000\");\n    System.setProperty(\"solr.tests.maxIndexingThreads\", \"-1\");\n    System.setProperty(\"solr.tests.ramBufferSizeMB\", \"100\");\n    // use non-test classes so RandomizedRunner isn't necessary\n    System.setProperty(\"solr.tests.mergeScheduler\", \"org.apache.lucene.index.ConcurrentMergeScheduler\");\n    System.setProperty(\"solr.directoryFactory\", \"solr.RAMDirectoryFactory\");\n\n    SolrZkClient zkClient = null;\n    try {\n      zkClient =  new SolrZkClient(miniCluster.getZkServer().getZkAddress(), AbstractZkTestCase.TIMEOUT, 45000, null);\n      uploadConfigFileToZk(zkClient, configName, \"solrconfig.xml\", new File(configDir, \"solrconfig-tlog.xml\"));\n      uploadConfigFileToZk(zkClient, configName, \"schema.xml\", new File(configDir, \"schema.xml\"));\n      uploadConfigFileToZk(zkClient, configName, \"solrconfig.snippet.randomindexconfig.xml\",\n        new File(configDir, \"solrconfig.snippet.randomindexconfig.xml\"));\n      uploadConfigFileToZk(zkClient, configName, \"currency.xml\", new File(configDir, \"currency.xml\"));\n      uploadConfigFileToZk(zkClient, configName, \"mapping-ISOLatin1Accent.txt\",\n        new File(configDir, \"mapping-ISOLatin1Accent.txt\"));\n      uploadConfigFileToZk(zkClient, configName, \"old_synonyms.txt\", new File(configDir, \"old_synonyms.txt\"));\n      uploadConfigFileToZk(zkClient, configName, \"open-exchange-rates.json\",\n        new File(configDir, \"open-exchange-rates.json\"));\n      uploadConfigFileToZk(zkClient, configName, \"protwords.txt\", new File(configDir, \"protwords.txt\"));\n      uploadConfigFileToZk(zkClient, configName, \"stopwords.txt\", new File(configDir, \"stopwords.txt\"));\n      uploadConfigFileToZk(zkClient, configName, \"synonyms.txt\", new File(configDir, \"synonyms.txt\"));\n    } finally {\n      if (zkClient != null) zkClient.close();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e4b636de9d648a57c06c19d05a2344be9a96ee11","date":1420139952,"type":4,"author":"Erick Erickson","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestMiniSolrCloudCluster#uploadConfigToZk(String,String).mjava","sourceNew":null,"sourceOld":"  protected void uploadConfigToZk(String configDir, String configName) throws Exception {\n    // override settings in the solrconfig include\n    System.setProperty(\"solr.tests.maxBufferedDocs\", \"100000\");\n    System.setProperty(\"solr.tests.maxIndexingThreads\", \"-1\");\n    System.setProperty(\"solr.tests.ramBufferSizeMB\", \"100\");\n    // use non-test classes so RandomizedRunner isn't necessary\n    System.setProperty(\"solr.tests.mergeScheduler\", \"org.apache.lucene.index.ConcurrentMergeScheduler\");\n    System.setProperty(\"solr.directoryFactory\", \"solr.RAMDirectoryFactory\");\n\n    SolrZkClient zkClient = null;\n    try {\n      zkClient =  new SolrZkClient(miniCluster.getZkServer().getZkAddress(), AbstractZkTestCase.TIMEOUT, 45000, null);\n      uploadConfigFileToZk(zkClient, configName, \"solrconfig.xml\", new File(configDir, \"solrconfig-tlog.xml\"));\n      uploadConfigFileToZk(zkClient, configName, \"schema.xml\", new File(configDir, \"schema.xml\"));\n      uploadConfigFileToZk(zkClient, configName, \"solrconfig.snippet.randomindexconfig.xml\",\n        new File(configDir, \"solrconfig.snippet.randomindexconfig.xml\"));\n      uploadConfigFileToZk(zkClient, configName, \"currency.xml\", new File(configDir, \"currency.xml\"));\n      uploadConfigFileToZk(zkClient, configName, \"mapping-ISOLatin1Accent.txt\",\n        new File(configDir, \"mapping-ISOLatin1Accent.txt\"));\n      uploadConfigFileToZk(zkClient, configName, \"old_synonyms.txt\", new File(configDir, \"old_synonyms.txt\"));\n      uploadConfigFileToZk(zkClient, configName, \"open-exchange-rates.json\",\n        new File(configDir, \"open-exchange-rates.json\"));\n      uploadConfigFileToZk(zkClient, configName, \"protwords.txt\", new File(configDir, \"protwords.txt\"));\n      uploadConfigFileToZk(zkClient, configName, \"stopwords.txt\", new File(configDir, \"stopwords.txt\"));\n      uploadConfigFileToZk(zkClient, configName, \"synonyms.txt\", new File(configDir, \"synonyms.txt\"));\n    } finally {\n      if (zkClient != null) zkClient.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e4b636de9d648a57c06c19d05a2344be9a96ee11":["6e619491f96eb1c2c64d9f8134326816b0bcd2e4"],"6e619491f96eb1c2c64d9f8134326816b0bcd2e4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e4b636de9d648a57c06c19d05a2344be9a96ee11"]},"commit2Childs":{"e4b636de9d648a57c06c19d05a2344be9a96ee11":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"6e619491f96eb1c2c64d9f8134326816b0bcd2e4":["e4b636de9d648a57c06c19d05a2344be9a96ee11"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6e619491f96eb1c2c64d9f8134326816b0bcd2e4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}