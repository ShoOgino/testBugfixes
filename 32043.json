{"path":"src/test/org/apache/lucene/index/TestIndexWriter.CommitAndAddIndexes3#handle(Throwable).mjava","commits":[{"id":"2586f96f60332eb97ecd2934b0763791462568b2","date":1220116589,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriter.CommitAndAddIndexes3#handle(Throwable).mjava","pathOld":"/dev/null","sourceNew":"    void handle(Throwable t) {\n      boolean report = true;\n\n      if (t instanceof AlreadyClosedException || t instanceof MergePolicy.MergeAbortedException || t instanceof NullPointerException) {\n        report = !didClose;\n      } else if (t instanceof IOException)  {\n        Throwable t2 = t.getCause();\n        if (t2 instanceof MergePolicy.MergeAbortedException) {\n          report = !didClose;\n        }\n      }\n      if (report) {\n        t.printStackTrace(System.out);\n        synchronized(failures) {\n          failures.add(t);\n        }\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1326054a8d3aa66382d49decc7f330955c9c6f71","date":1257386139,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriter.CommitAndAddIndexes3#handle(Throwable).mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriter.CommitAndAddIndexes3#handle(Throwable).mjava","sourceNew":"    @Override\n    void handle(Throwable t) {\n      boolean report = true;\n\n      if (t instanceof AlreadyClosedException || t instanceof MergePolicy.MergeAbortedException || t instanceof NullPointerException) {\n        report = !didClose;\n      } else if (t instanceof IOException)  {\n        Throwable t2 = t.getCause();\n        if (t2 instanceof MergePolicy.MergeAbortedException) {\n          report = !didClose;\n        }\n      }\n      if (report) {\n        t.printStackTrace(System.out);\n        synchronized(failures) {\n          failures.add(t);\n        }\n      }\n    }\n\n","sourceOld":"    void handle(Throwable t) {\n      boolean report = true;\n\n      if (t instanceof AlreadyClosedException || t instanceof MergePolicy.MergeAbortedException || t instanceof NullPointerException) {\n        report = !didClose;\n      } else if (t instanceof IOException)  {\n        Throwable t2 = t.getCause();\n        if (t2 instanceof MergePolicy.MergeAbortedException) {\n          report = !didClose;\n        }\n      }\n      if (report) {\n        t.printStackTrace(System.out);\n        synchronized(failures) {\n          failures.add(t);\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter.CommitAndAddIndexes3#handle(Throwable).mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriter.CommitAndAddIndexes3#handle(Throwable).mjava","sourceNew":"    @Override\n    void handle(Throwable t) {\n      boolean report = true;\n\n      if (t instanceof AlreadyClosedException || t instanceof MergePolicy.MergeAbortedException || t instanceof NullPointerException) {\n        report = !didClose;\n      } else if (t instanceof IOException)  {\n        Throwable t2 = t.getCause();\n        if (t2 instanceof MergePolicy.MergeAbortedException) {\n          report = !didClose;\n        }\n      }\n      if (report) {\n        t.printStackTrace(System.out);\n        synchronized(failures) {\n          failures.add(t);\n        }\n      }\n    }\n\n","sourceOld":"    @Override\n    void handle(Throwable t) {\n      boolean report = true;\n\n      if (t instanceof AlreadyClosedException || t instanceof MergePolicy.MergeAbortedException || t instanceof NullPointerException) {\n        report = !didClose;\n      } else if (t instanceof IOException)  {\n        Throwable t2 = t.getCause();\n        if (t2 instanceof MergePolicy.MergeAbortedException) {\n          report = !didClose;\n        }\n      }\n      if (report) {\n        t.printStackTrace(System.out);\n        synchronized(failures) {\n          failures.add(t);\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1326054a8d3aa66382d49decc7f330955c9c6f71":["2586f96f60332eb97ecd2934b0763791462568b2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2586f96f60332eb97ecd2934b0763791462568b2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["1326054a8d3aa66382d49decc7f330955c9c6f71"]},"commit2Childs":{"1326054a8d3aa66382d49decc7f330955c9c6f71":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["2586f96f60332eb97ecd2934b0763791462568b2"],"2586f96f60332eb97ecd2934b0763791462568b2":["1326054a8d3aa66382d49decc7f330955c9c6f71"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}