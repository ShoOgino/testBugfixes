{"path":"solr/core/src/java/org/apache/solr/handler/component/FieldFacetStats#FieldFacetStats(String,FieldCache.DocTermsIndex,FieldType,int).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/FieldFacetStats#FieldFacetStats(String,FieldCache.DocTermsIndex,FieldType,int).mjava","pathOld":"solr/src/java/org/apache/solr/handler/component/FieldFacetStats#FieldFacetStats(String,FieldCache.DocTermsIndex,FieldType,int).mjava","sourceNew":"  public FieldFacetStats(String name, FieldCache.DocTermsIndex si, FieldType ft, int numStatsTerms) {\n    this.name = name;\n    this.si = si;\n    this.ft = ft;\n    this.numStatsTerms = numStatsTerms;\n\n    startTermIndex = 1;\n    endTermIndex = si.numOrd();\n    nTerms = endTermIndex - startTermIndex;\n\n    facetStatsValues = new HashMap<String, StatsValues>();\n\n    // for mv stats field, we'll want to keep track of terms\n    facetStatsTerms = new ArrayList<HashMap<String, Integer>>();\n    if (numStatsTerms == 0) return;\n    int i = 0;\n    for (; i < numStatsTerms; i++) {\n      facetStatsTerms.add(new HashMap<String, Integer>());\n    }\n  }\n\n","sourceOld":"  public FieldFacetStats(String name, FieldCache.DocTermsIndex si, FieldType ft, int numStatsTerms) {\n    this.name = name;\n    this.si = si;\n    this.ft = ft;\n    this.numStatsTerms = numStatsTerms;\n\n    startTermIndex = 1;\n    endTermIndex = si.numOrd();\n    nTerms = endTermIndex - startTermIndex;\n\n    facetStatsValues = new HashMap<String, StatsValues>();\n\n    // for mv stats field, we'll want to keep track of terms\n    facetStatsTerms = new ArrayList<HashMap<String, Integer>>();\n    if (numStatsTerms == 0) return;\n    int i = 0;\n    for (; i < numStatsTerms; i++) {\n      facetStatsTerms.add(new HashMap<String, Integer>());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/FieldFacetStats#FieldFacetStats(String,FieldCache.DocTermsIndex,FieldType,int).mjava","pathOld":"solr/src/java/org/apache/solr/handler/component/FieldFacetStats#FieldFacetStats(String,FieldCache.DocTermsIndex,FieldType,int).mjava","sourceNew":"  public FieldFacetStats(String name, FieldCache.DocTermsIndex si, FieldType ft, int numStatsTerms) {\n    this.name = name;\n    this.si = si;\n    this.ft = ft;\n    this.numStatsTerms = numStatsTerms;\n\n    startTermIndex = 1;\n    endTermIndex = si.numOrd();\n    nTerms = endTermIndex - startTermIndex;\n\n    facetStatsValues = new HashMap<String, StatsValues>();\n\n    // for mv stats field, we'll want to keep track of terms\n    facetStatsTerms = new ArrayList<HashMap<String, Integer>>();\n    if (numStatsTerms == 0) return;\n    int i = 0;\n    for (; i < numStatsTerms; i++) {\n      facetStatsTerms.add(new HashMap<String, Integer>());\n    }\n  }\n\n","sourceOld":"  public FieldFacetStats(String name, FieldCache.DocTermsIndex si, FieldType ft, int numStatsTerms) {\n    this.name = name;\n    this.si = si;\n    this.ft = ft;\n    this.numStatsTerms = numStatsTerms;\n\n    startTermIndex = 1;\n    endTermIndex = si.numOrd();\n    nTerms = endTermIndex - startTermIndex;\n\n    facetStatsValues = new HashMap<String, StatsValues>();\n\n    // for mv stats field, we'll want to keep track of terms\n    facetStatsTerms = new ArrayList<HashMap<String, Integer>>();\n    if (numStatsTerms == 0) return;\n    int i = 0;\n    for (; i < numStatsTerms; i++) {\n      facetStatsTerms.add(new HashMap<String, Integer>());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/FieldFacetStats#FieldFacetStats(String,FieldCache.DocTermsIndex,FieldType,int).mjava","pathOld":"solr/src/java/org/apache/solr/handler/component/FieldFacetStats#FieldFacetStats(String,FieldCache.DocTermsIndex,FieldType,int).mjava","sourceNew":"  public FieldFacetStats(String name, FieldCache.DocTermsIndex si, FieldType ft, int numStatsTerms) {\n    this.name = name;\n    this.si = si;\n    this.ft = ft;\n    this.numStatsTerms = numStatsTerms;\n\n    startTermIndex = 1;\n    endTermIndex = si.numOrd();\n    nTerms = endTermIndex - startTermIndex;\n\n    facetStatsValues = new HashMap<String, StatsValues>();\n\n    // for mv stats field, we'll want to keep track of terms\n    facetStatsTerms = new ArrayList<HashMap<String, Integer>>();\n    if (numStatsTerms == 0) return;\n    int i = 0;\n    for (; i < numStatsTerms; i++) {\n      facetStatsTerms.add(new HashMap<String, Integer>());\n    }\n  }\n\n","sourceOld":"  public FieldFacetStats(String name, FieldCache.DocTermsIndex si, FieldType ft, int numStatsTerms) {\n    this.name = name;\n    this.si = si;\n    this.ft = ft;\n    this.numStatsTerms = numStatsTerms;\n\n    startTermIndex = 1;\n    endTermIndex = si.numOrd();\n    nTerms = endTermIndex - startTermIndex;\n\n    facetStatsValues = new HashMap<String, StatsValues>();\n\n    // for mv stats field, we'll want to keep track of terms\n    facetStatsTerms = new ArrayList<HashMap<String, Integer>>();\n    if (numStatsTerms == 0) return;\n    int i = 0;\n    for (; i < numStatsTerms; i++) {\n      facetStatsTerms.add(new HashMap<String, Integer>());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"11982a7b6834a8571852448312db4624c32990b5","date":1321300684,"type":5,"author":"Ryan McKinley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/FieldFacetStats#FieldFacetStats(String,FieldCache.DocTermsIndex,SchemaField,SchemaField,int).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/FieldFacetStats#FieldFacetStats(String,FieldCache.DocTermsIndex,FieldType,int).mjava","sourceNew":"  public FieldFacetStats(String name, FieldCache.DocTermsIndex si, SchemaField field_sf, SchemaField facet_sf, int numStatsTerms) {\n    this.name = name;\n    this.si = si;\n    this.field_sf = field_sf;\n    this.facet_sf = facet_sf;\n    this.numStatsTerms = numStatsTerms;\n\n    startTermIndex = 1;\n    endTermIndex = si.numOrd();\n    nTerms = endTermIndex - startTermIndex;\n\n    facetStatsValues = new HashMap<String, StatsValues>();\n\n    // for mv stats field, we'll want to keep track of terms\n    facetStatsTerms = new ArrayList<HashMap<String, Integer>>();\n    if (numStatsTerms == 0) return;\n    int i = 0;\n    for (; i < numStatsTerms; i++) {\n      facetStatsTerms.add(new HashMap<String, Integer>());\n    }\n  }\n\n","sourceOld":"  public FieldFacetStats(String name, FieldCache.DocTermsIndex si, FieldType ft, int numStatsTerms) {\n    this.name = name;\n    this.si = si;\n    this.ft = ft;\n    this.numStatsTerms = numStatsTerms;\n\n    startTermIndex = 1;\n    endTermIndex = si.numOrd();\n    nTerms = endTermIndex - startTermIndex;\n\n    facetStatsValues = new HashMap<String, StatsValues>();\n\n    // for mv stats field, we'll want to keep track of terms\n    facetStatsTerms = new ArrayList<HashMap<String, Integer>>();\n    if (numStatsTerms == 0) return;\n    int i = 0;\n    for (; i < numStatsTerms; i++) {\n      facetStatsTerms.add(new HashMap<String, Integer>());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["11982a7b6834a8571852448312db4624c32990b5"],"11982a7b6834a8571852448312db4624c32990b5":["c26f00b574427b55127e869b935845554afde1fa"]},"commit2Childs":{"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["11982a7b6834a8571852448312db4624c32990b5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"11982a7b6834a8571852448312db4624c32990b5":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}