{"path":"lucene/core/src/java/org/apache/lucene/index/PointValuesWriter#PointValuesWriter(DocumentsWriterPerThread,FieldInfo).mjava","commits":[{"id":"cab7a79353f33d1a94cd307bf33aa5148601ebe6","date":1453391888,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/PointValuesWriter#PointValuesWriter(DocumentsWriterPerThread,FieldInfo).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DimensionalValuesWriter#DimensionalValuesWriter(DocumentsWriterPerThread,FieldInfo).mjava","sourceNew":"  public PointValuesWriter(DocumentsWriterPerThread docWriter, FieldInfo fieldInfo) {\n    this.fieldInfo = fieldInfo;\n    this.iwBytesUsed = docWriter.bytesUsed;\n    this.bytes = new ByteBlockPool(docWriter.byteBlockAllocator);\n    docIDs = new int[16];\n    iwBytesUsed.addAndGet(16 * RamUsageEstimator.NUM_BYTES_INT);\n    packedValue = new byte[fieldInfo.getPointDimensionCount() * fieldInfo.getPointNumBytes()];\n  }\n\n","sourceOld":"  public DimensionalValuesWriter(DocumentsWriterPerThread docWriter, FieldInfo fieldInfo) {\n    this.fieldInfo = fieldInfo;\n    this.iwBytesUsed = docWriter.bytesUsed;\n    this.bytes = new ByteBlockPool(docWriter.byteBlockAllocator);\n    docIDs = new int[16];\n    iwBytesUsed.addAndGet(16 * RamUsageEstimator.NUM_BYTES_INT);\n    packedValue = new byte[fieldInfo.getDimensionCount() * fieldInfo.getDimensionNumBytes()];\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f226a8b088dd9c8f6ab287a77237c4aa00a238e5","date":1456187572,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/PointValuesWriter#PointValuesWriter(DocumentsWriterPerThread,FieldInfo).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/PointValuesWriter#PointValuesWriter(DocumentsWriterPerThread,FieldInfo).mjava","sourceNew":"  public PointValuesWriter(DocumentsWriterPerThread docWriter, FieldInfo fieldInfo) {\n    this.fieldInfo = fieldInfo;\n    this.iwBytesUsed = docWriter.bytesUsed;\n    this.bytes = new ByteBlockPool(docWriter.byteBlockAllocator);\n    docIDs = new int[16];\n    iwBytesUsed.addAndGet(16 * Integer.BYTES);\n    packedValue = new byte[fieldInfo.getPointDimensionCount() * fieldInfo.getPointNumBytes()];\n  }\n\n","sourceOld":"  public PointValuesWriter(DocumentsWriterPerThread docWriter, FieldInfo fieldInfo) {\n    this.fieldInfo = fieldInfo;\n    this.iwBytesUsed = docWriter.bytesUsed;\n    this.bytes = new ByteBlockPool(docWriter.byteBlockAllocator);\n    docIDs = new int[16];\n    iwBytesUsed.addAndGet(16 * RamUsageEstimator.NUM_BYTES_INT);\n    packedValue = new byte[fieldInfo.getPointDimensionCount() * fieldInfo.getPointNumBytes()];\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"419a8f52c6635419beb951255cacbbb281044c57","date":1456189353,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/PointValuesWriter#PointValuesWriter(DocumentsWriterPerThread,FieldInfo).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/PointValuesWriter#PointValuesWriter(DocumentsWriterPerThread,FieldInfo).mjava","sourceNew":"  public PointValuesWriter(DocumentsWriterPerThread docWriter, FieldInfo fieldInfo) {\n    this.fieldInfo = fieldInfo;\n    this.iwBytesUsed = docWriter.bytesUsed;\n    this.bytes = new ByteBlockPool(docWriter.byteBlockAllocator);\n    docIDs = new int[16];\n    iwBytesUsed.addAndGet(16 * Integer.BYTES);\n    packedValue = new byte[fieldInfo.getPointDimensionCount() * fieldInfo.getPointNumBytes()];\n  }\n\n","sourceOld":"  public PointValuesWriter(DocumentsWriterPerThread docWriter, FieldInfo fieldInfo) {\n    this.fieldInfo = fieldInfo;\n    this.iwBytesUsed = docWriter.bytesUsed;\n    this.bytes = new ByteBlockPool(docWriter.byteBlockAllocator);\n    docIDs = new int[16];\n    iwBytesUsed.addAndGet(16 * RamUsageEstimator.NUM_BYTES_INT);\n    packedValue = new byte[fieldInfo.getPointDimensionCount() * fieldInfo.getPointNumBytes()];\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"10005c6013abbd1102f2463cf95604d4c8774c99","date":1469460814,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/PointValuesWriter#PointValuesWriter(DocumentsWriterPerThread,FieldInfo).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/PointValuesWriter#PointValuesWriter(DocumentsWriterPerThread,FieldInfo).mjava","sourceNew":"  public PointValuesWriter(DocumentsWriterPerThread docWriter, FieldInfo fieldInfo) {\n    this.fieldInfo = fieldInfo;\n    this.iwBytesUsed = docWriter.bytesUsed;\n    this.bytes = new ByteBlockPool(docWriter.byteBlockAllocator);\n    docIDs = new int[16];\n    iwBytesUsed.addAndGet(16 * Integer.BYTES);\n    packedValue = new byte[fieldInfo.getPointDimensionCount() * fieldInfo.getPointNumBytes()];\n    indexWriterConfig = docWriter.indexWriterConfig;\n  }\n\n","sourceOld":"  public PointValuesWriter(DocumentsWriterPerThread docWriter, FieldInfo fieldInfo) {\n    this.fieldInfo = fieldInfo;\n    this.iwBytesUsed = docWriter.bytesUsed;\n    this.bytes = new ByteBlockPool(docWriter.byteBlockAllocator);\n    docIDs = new int[16];\n    iwBytesUsed.addAndGet(16 * Integer.BYTES);\n    packedValue = new byte[fieldInfo.getPointDimensionCount() * fieldInfo.getPointNumBytes()];\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d08973aa47f2cf98a588293a53af4e948952ccfb","date":1469518724,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/PointValuesWriter#PointValuesWriter(DocumentsWriterPerThread,FieldInfo).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/PointValuesWriter#PointValuesWriter(DocumentsWriterPerThread,FieldInfo).mjava","sourceNew":"  public PointValuesWriter(DocumentsWriterPerThread docWriter, FieldInfo fieldInfo) {\n    this.fieldInfo = fieldInfo;\n    this.iwBytesUsed = docWriter.bytesUsed;\n    this.bytes = new ByteBlockPool(docWriter.byteBlockAllocator);\n    docIDs = new int[16];\n    iwBytesUsed.addAndGet(16 * Integer.BYTES);\n    packedValue = new byte[fieldInfo.getPointDimensionCount() * fieldInfo.getPointNumBytes()];\n    indexWriterConfig = docWriter.indexWriterConfig;\n  }\n\n","sourceOld":"  public PointValuesWriter(DocumentsWriterPerThread docWriter, FieldInfo fieldInfo) {\n    this.fieldInfo = fieldInfo;\n    this.iwBytesUsed = docWriter.bytesUsed;\n    this.bytes = new ByteBlockPool(docWriter.byteBlockAllocator);\n    docIDs = new int[16];\n    iwBytesUsed.addAndGet(16 * Integer.BYTES);\n    packedValue = new byte[fieldInfo.getPointDimensionCount() * fieldInfo.getPointNumBytes()];\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d561885e9bb6238af1ff8afe8630dcfe49b66ac7","date":1469780634,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/PointValuesWriter#PointValuesWriter(DocumentsWriterPerThread,FieldInfo).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/PointValuesWriter#PointValuesWriter(DocumentsWriterPerThread,FieldInfo).mjava","sourceNew":"  public PointValuesWriter(DocumentsWriterPerThread docWriter, FieldInfo fieldInfo) {\n    this.fieldInfo = fieldInfo;\n    this.iwBytesUsed = docWriter.bytesUsed;\n    this.bytes = new ByteBlockPool(docWriter.byteBlockAllocator);\n    docIDs = new int[16];\n    iwBytesUsed.addAndGet(16 * Integer.BYTES);\n    packedBytesLength = fieldInfo.getPointDimensionCount() * fieldInfo.getPointNumBytes();\n    indexWriterConfig = docWriter.indexWriterConfig;\n  }\n\n","sourceOld":"  public PointValuesWriter(DocumentsWriterPerThread docWriter, FieldInfo fieldInfo) {\n    this.fieldInfo = fieldInfo;\n    this.iwBytesUsed = docWriter.bytesUsed;\n    this.bytes = new ByteBlockPool(docWriter.byteBlockAllocator);\n    docIDs = new int[16];\n    iwBytesUsed.addAndGet(16 * Integer.BYTES);\n    packedValue = new byte[fieldInfo.getPointDimensionCount() * fieldInfo.getPointNumBytes()];\n    indexWriterConfig = docWriter.indexWriterConfig;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b0567940defa1ea6eb8a039d9d36e3682063f8a4","date":1469815320,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/PointValuesWriter#PointValuesWriter(DocumentsWriterPerThread,FieldInfo).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/PointValuesWriter#PointValuesWriter(DocumentsWriterPerThread,FieldInfo).mjava","sourceNew":"  public PointValuesWriter(DocumentsWriterPerThread docWriter, FieldInfo fieldInfo) {\n    this.fieldInfo = fieldInfo;\n    this.iwBytesUsed = docWriter.bytesUsed;\n    this.bytes = new ByteBlockPool(docWriter.byteBlockAllocator);\n    docIDs = new int[16];\n    iwBytesUsed.addAndGet(16 * Integer.BYTES);\n    packedBytesLength = fieldInfo.getPointDimensionCount() * fieldInfo.getPointNumBytes();\n  }\n\n","sourceOld":"  public PointValuesWriter(DocumentsWriterPerThread docWriter, FieldInfo fieldInfo) {\n    this.fieldInfo = fieldInfo;\n    this.iwBytesUsed = docWriter.bytesUsed;\n    this.bytes = new ByteBlockPool(docWriter.byteBlockAllocator);\n    docIDs = new int[16];\n    iwBytesUsed.addAndGet(16 * Integer.BYTES);\n    packedBytesLength = fieldInfo.getPointDimensionCount() * fieldInfo.getPointNumBytes();\n    indexWriterConfig = docWriter.indexWriterConfig;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3b013574eedcdbac35dc7e35b0ee616ffc38895d","date":1470897818,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/PointValuesWriter#PointValuesWriter(DocumentsWriterPerThread,FieldInfo).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/PointValuesWriter#PointValuesWriter(DocumentsWriterPerThread,FieldInfo).mjava","sourceNew":"  public PointValuesWriter(DocumentsWriterPerThread docWriter, FieldInfo fieldInfo) {\n    this.fieldInfo = fieldInfo;\n    this.iwBytesUsed = docWriter.bytesUsed;\n    this.bytes = new ByteBlockPool(docWriter.byteBlockAllocator);\n    docIDs = new int[16];\n    iwBytesUsed.addAndGet(16 * Integer.BYTES);\n    packedBytesLength = fieldInfo.getPointDimensionCount() * fieldInfo.getPointNumBytes();\n  }\n\n","sourceOld":"  public PointValuesWriter(DocumentsWriterPerThread docWriter, FieldInfo fieldInfo) {\n    this.fieldInfo = fieldInfo;\n    this.iwBytesUsed = docWriter.bytesUsed;\n    this.bytes = new ByteBlockPool(docWriter.byteBlockAllocator);\n    docIDs = new int[16];\n    iwBytesUsed.addAndGet(16 * Integer.BYTES);\n    packedValue = new byte[fieldInfo.getPointDimensionCount() * fieldInfo.getPointNumBytes()];\n    indexWriterConfig = docWriter.indexWriterConfig;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/PointValuesWriter#PointValuesWriter(DocumentsWriterPerThread,FieldInfo).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/PointValuesWriter#PointValuesWriter(DocumentsWriterPerThread,FieldInfo).mjava","sourceNew":"  public PointValuesWriter(DocumentsWriterPerThread docWriter, FieldInfo fieldInfo) {\n    this.fieldInfo = fieldInfo;\n    this.iwBytesUsed = docWriter.bytesUsed;\n    this.bytes = new ByteBlockPool(docWriter.byteBlockAllocator);\n    docIDs = new int[16];\n    iwBytesUsed.addAndGet(16 * Integer.BYTES);\n    packedBytesLength = fieldInfo.getPointDimensionCount() * fieldInfo.getPointNumBytes();\n  }\n\n","sourceOld":"  public PointValuesWriter(DocumentsWriterPerThread docWriter, FieldInfo fieldInfo) {\n    this.fieldInfo = fieldInfo;\n    this.iwBytesUsed = docWriter.bytesUsed;\n    this.bytes = new ByteBlockPool(docWriter.byteBlockAllocator);\n    docIDs = new int[16];\n    iwBytesUsed.addAndGet(16 * Integer.BYTES);\n    packedValue = new byte[fieldInfo.getPointDimensionCount() * fieldInfo.getPointNumBytes()];\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f6652c943595e92c187ee904c382863013eae28f","date":1539042663,"type":3,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/PointValuesWriter#PointValuesWriter(DocumentsWriterPerThread,FieldInfo).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/PointValuesWriter#PointValuesWriter(DocumentsWriterPerThread,FieldInfo).mjava","sourceNew":"  public PointValuesWriter(DocumentsWriterPerThread docWriter, FieldInfo fieldInfo) {\n    this.fieldInfo = fieldInfo;\n    this.iwBytesUsed = docWriter.bytesUsed;\n    this.bytes = new ByteBlockPool(docWriter.byteBlockAllocator);\n    docIDs = new int[16];\n    iwBytesUsed.addAndGet(16 * Integer.BYTES);\n    packedBytesLength = fieldInfo.getPointDataDimensionCount() * fieldInfo.getPointNumBytes();\n  }\n\n","sourceOld":"  public PointValuesWriter(DocumentsWriterPerThread docWriter, FieldInfo fieldInfo) {\n    this.fieldInfo = fieldInfo;\n    this.iwBytesUsed = docWriter.bytesUsed;\n    this.bytes = new ByteBlockPool(docWriter.byteBlockAllocator);\n    docIDs = new int[16];\n    iwBytesUsed.addAndGet(16 * Integer.BYTES);\n    packedBytesLength = fieldInfo.getPointDimensionCount() * fieldInfo.getPointNumBytes();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"59ed8c026ba85e3c42fb89605b2032dc6f9cc241","date":1581113294,"type":3,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/PointValuesWriter#PointValuesWriter(DocumentsWriterPerThread,FieldInfo).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/PointValuesWriter#PointValuesWriter(DocumentsWriterPerThread,FieldInfo).mjava","sourceNew":"  public PointValuesWriter(DocumentsWriterPerThread docWriter, FieldInfo fieldInfo) {\n    this.fieldInfo = fieldInfo;\n    this.iwBytesUsed = docWriter.bytesUsed;\n    this.bytes = new ByteBlockPool(docWriter.byteBlockAllocator);\n    docIDs = new int[16];\n    iwBytesUsed.addAndGet(16 * Integer.BYTES);\n    packedBytesLength = fieldInfo.getPointDimensionCount() * fieldInfo.getPointNumBytes();\n  }\n\n","sourceOld":"  public PointValuesWriter(DocumentsWriterPerThread docWriter, FieldInfo fieldInfo) {\n    this.fieldInfo = fieldInfo;\n    this.iwBytesUsed = docWriter.bytesUsed;\n    this.bytes = new ByteBlockPool(docWriter.byteBlockAllocator);\n    docIDs = new int[16];\n    iwBytesUsed.addAndGet(16 * Integer.BYTES);\n    packedBytesLength = fieldInfo.getPointDataDimensionCount() * fieldInfo.getPointNumBytes();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6926606ec5e0dd8d4ec79166d39a3b4ddb862bf4","date":1599581893,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/PointValuesWriter#PointValuesWriter(ByteBlockPool.Allocator,Counter,FieldInfo).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/PointValuesWriter#PointValuesWriter(DocumentsWriterPerThread,FieldInfo).mjava","sourceNew":"  PointValuesWriter(ByteBlockPool.Allocator allocator, Counter bytesUsed, FieldInfo fieldInfo) {\n    this.fieldInfo = fieldInfo;\n    this.iwBytesUsed = bytesUsed;\n    this.bytes = new ByteBlockPool(allocator);\n    docIDs = new int[16];\n    iwBytesUsed.addAndGet(16 * Integer.BYTES);\n    packedBytesLength = fieldInfo.getPointDimensionCount() * fieldInfo.getPointNumBytes();\n  }\n\n","sourceOld":"  public PointValuesWriter(DocumentsWriterPerThread docWriter, FieldInfo fieldInfo) {\n    this.fieldInfo = fieldInfo;\n    this.iwBytesUsed = docWriter.bytesUsed;\n    this.bytes = new ByteBlockPool(docWriter.byteBlockAllocator);\n    docIDs = new int[16];\n    iwBytesUsed.addAndGet(16 * Integer.BYTES);\n    packedBytesLength = fieldInfo.getPointDimensionCount() * fieldInfo.getPointNumBytes();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b0567940defa1ea6eb8a039d9d36e3682063f8a4":["d561885e9bb6238af1ff8afe8630dcfe49b66ac7"],"6926606ec5e0dd8d4ec79166d39a3b4ddb862bf4":["59ed8c026ba85e3c42fb89605b2032dc6f9cc241"],"cab7a79353f33d1a94cd307bf33aa5148601ebe6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"59ed8c026ba85e3c42fb89605b2032dc6f9cc241":["f6652c943595e92c187ee904c382863013eae28f"],"f6652c943595e92c187ee904c382863013eae28f":["b0567940defa1ea6eb8a039d9d36e3682063f8a4"],"419a8f52c6635419beb951255cacbbb281044c57":["cab7a79353f33d1a94cd307bf33aa5148601ebe6","f226a8b088dd9c8f6ab287a77237c4aa00a238e5"],"f226a8b088dd9c8f6ab287a77237c4aa00a238e5":["cab7a79353f33d1a94cd307bf33aa5148601ebe6"],"10005c6013abbd1102f2463cf95604d4c8774c99":["419a8f52c6635419beb951255cacbbb281044c57"],"d561885e9bb6238af1ff8afe8630dcfe49b66ac7":["d08973aa47f2cf98a588293a53af4e948952ccfb"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["419a8f52c6635419beb951255cacbbb281044c57","b0567940defa1ea6eb8a039d9d36e3682063f8a4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d08973aa47f2cf98a588293a53af4e948952ccfb":["419a8f52c6635419beb951255cacbbb281044c57","10005c6013abbd1102f2463cf95604d4c8774c99"],"3b013574eedcdbac35dc7e35b0ee616ffc38895d":["d08973aa47f2cf98a588293a53af4e948952ccfb","b0567940defa1ea6eb8a039d9d36e3682063f8a4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6926606ec5e0dd8d4ec79166d39a3b4ddb862bf4"]},"commit2Childs":{"b0567940defa1ea6eb8a039d9d36e3682063f8a4":["f6652c943595e92c187ee904c382863013eae28f","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","3b013574eedcdbac35dc7e35b0ee616ffc38895d"],"6926606ec5e0dd8d4ec79166d39a3b4ddb862bf4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cab7a79353f33d1a94cd307bf33aa5148601ebe6":["419a8f52c6635419beb951255cacbbb281044c57","f226a8b088dd9c8f6ab287a77237c4aa00a238e5"],"59ed8c026ba85e3c42fb89605b2032dc6f9cc241":["6926606ec5e0dd8d4ec79166d39a3b4ddb862bf4"],"f6652c943595e92c187ee904c382863013eae28f":["59ed8c026ba85e3c42fb89605b2032dc6f9cc241"],"419a8f52c6635419beb951255cacbbb281044c57":["10005c6013abbd1102f2463cf95604d4c8774c99","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","d08973aa47f2cf98a588293a53af4e948952ccfb"],"f226a8b088dd9c8f6ab287a77237c4aa00a238e5":["419a8f52c6635419beb951255cacbbb281044c57"],"10005c6013abbd1102f2463cf95604d4c8774c99":["d08973aa47f2cf98a588293a53af4e948952ccfb"],"d561885e9bb6238af1ff8afe8630dcfe49b66ac7":["b0567940defa1ea6eb8a039d9d36e3682063f8a4"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cab7a79353f33d1a94cd307bf33aa5148601ebe6"],"d08973aa47f2cf98a588293a53af4e948952ccfb":["d561885e9bb6238af1ff8afe8630dcfe49b66ac7","3b013574eedcdbac35dc7e35b0ee616ffc38895d"],"3b013574eedcdbac35dc7e35b0ee616ffc38895d":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","3b013574eedcdbac35dc7e35b0ee616ffc38895d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}