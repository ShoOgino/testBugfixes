{"path":"contrib/gdata-server/src/core/src/test/org/apache/lucene/gdata/utils/TestReflectionUtils#testGetPrimitiveWrapper().mjava","commits":[{"id":"4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe","date":1166036663,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/gdata-server/src/core/src/test/org/apache/lucene/gdata/utils/TestReflectionUtils#testGetPrimitiveWrapper().mjava","pathOld":"contrib/gdata-server/src/core/test/org/apache/lucene/gdata/utils/TestReflectionUtils#testGetPrimitiveWrapper().mjava","sourceNew":"    /*\n     * Test method for 'org.apache.lucene.gdata.utils.ReflectionUtils.getPrimitiveWrapper(Class)'\n     */\n    public void testGetPrimitiveWrapper() {\n        \n        assertEquals(Integer.class,ReflectionUtils.getPrimitiveWrapper(Integer.TYPE));\n        assertEquals(Long.class,ReflectionUtils.getPrimitiveWrapper(Long.TYPE));\n        assertEquals(Float.class,ReflectionUtils.getPrimitiveWrapper(Float.TYPE));\n        assertEquals(Byte.class,ReflectionUtils.getPrimitiveWrapper(Byte.TYPE));\n        assertEquals(Double.class,ReflectionUtils.getPrimitiveWrapper(Double.TYPE));\n        assertEquals(Short.class,ReflectionUtils.getPrimitiveWrapper(Short.TYPE));\n        assertEquals(Boolean.class,ReflectionUtils.getPrimitiveWrapper(Boolean.TYPE));\n        try {\n        ReflectionUtils.getPrimitiveWrapper(null);\n        fail(\"type is null\");\n        }catch (ReflectionException e) {\n            \n        }\n        try {\n            ReflectionUtils.getPrimitiveWrapper(String.class);\n            fail(\"type is not a primitive\");\n            }catch (ReflectionException e) {\n                \n            }\n        \n    }\n\n","sourceOld":"    /*\n     * Test method for 'org.apache.lucene.gdata.utils.ReflectionUtils.getPrimitiveWrapper(Class)'\n     */\n    public void testGetPrimitiveWrapper() {\n        \n        assertEquals(Integer.class,ReflectionUtils.getPrimitiveWrapper(Integer.TYPE));\n        assertEquals(Long.class,ReflectionUtils.getPrimitiveWrapper(Long.TYPE));\n        assertEquals(Float.class,ReflectionUtils.getPrimitiveWrapper(Float.TYPE));\n        assertEquals(Byte.class,ReflectionUtils.getPrimitiveWrapper(Byte.TYPE));\n        assertEquals(Double.class,ReflectionUtils.getPrimitiveWrapper(Double.TYPE));\n        assertEquals(Short.class,ReflectionUtils.getPrimitiveWrapper(Short.TYPE));\n        assertEquals(Boolean.class,ReflectionUtils.getPrimitiveWrapper(Boolean.TYPE));\n        try {\n        ReflectionUtils.getPrimitiveWrapper(null);\n        fail(\"type is null\");\n        }catch (ReflectionException e) {\n            \n        }\n        try {\n            ReflectionUtils.getPrimitiveWrapper(String.class);\n            fail(\"type is not a primitive\");\n            }catch (ReflectionException e) {\n                \n            }\n        \n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"353a38bbb8d8067d74d6039986c7ce44c2f6cdbe","date":1195519587,"type":4,"author":"Michael Busch","isMerge":false,"pathNew":"/dev/null","pathOld":"contrib/gdata-server/src/core/src/test/org/apache/lucene/gdata/utils/TestReflectionUtils#testGetPrimitiveWrapper().mjava","sourceNew":null,"sourceOld":"    /*\n     * Test method for 'org.apache.lucene.gdata.utils.ReflectionUtils.getPrimitiveWrapper(Class)'\n     */\n    public void testGetPrimitiveWrapper() {\n        \n        assertEquals(Integer.class,ReflectionUtils.getPrimitiveWrapper(Integer.TYPE));\n        assertEquals(Long.class,ReflectionUtils.getPrimitiveWrapper(Long.TYPE));\n        assertEquals(Float.class,ReflectionUtils.getPrimitiveWrapper(Float.TYPE));\n        assertEquals(Byte.class,ReflectionUtils.getPrimitiveWrapper(Byte.TYPE));\n        assertEquals(Double.class,ReflectionUtils.getPrimitiveWrapper(Double.TYPE));\n        assertEquals(Short.class,ReflectionUtils.getPrimitiveWrapper(Short.TYPE));\n        assertEquals(Boolean.class,ReflectionUtils.getPrimitiveWrapper(Boolean.TYPE));\n        try {\n        ReflectionUtils.getPrimitiveWrapper(null);\n        fail(\"type is null\");\n        }catch (ReflectionException e) {\n            \n        }\n        try {\n            ReflectionUtils.getPrimitiveWrapper(String.class);\n            fail(\"type is not a primitive\");\n            }catch (ReflectionException e) {\n                \n            }\n        \n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"353a38bbb8d8067d74d6039986c7ce44c2f6cdbe":["4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["353a38bbb8d8067d74d6039986c7ce44c2f6cdbe"]},"commit2Childs":{"4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe":["353a38bbb8d8067d74d6039986c7ce44c2f6cdbe"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe"],"353a38bbb8d8067d74d6039986c7ce44c2f6cdbe":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}