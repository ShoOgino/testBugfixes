{"path":"solr/test-framework/src/java/org/apache/solr/cloud/SocketProxy#doOpen().mjava","commits":[{"id":"1280741c654e60d3590156727fd5d8daa141efb7","date":1420244446,"type":1,"author":"Timothy Potter","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/SocketProxy#doOpen().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/SocketProxy#open().mjava","sourceNew":"  private void doOpen() throws Exception {\n    \n    acceptor = new Acceptor(serverSocket, target);\n    if (pauseAtStart) {\n      acceptor.pause();\n    }\n    new Thread(null, acceptor, \"SocketProxy-Acceptor-\"\n        + serverSocket.getLocalPort()).start();\n    closed = new CountDownLatch(1);\n  }\n\n","sourceOld":"  public void open() throws Exception {\n    serverSocket = createServerSocket(target);\n    serverSocket.setReuseAddress(true);\n    if (receiveBufferSize > 0) {\n      serverSocket.setReceiveBufferSize(receiveBufferSize);\n    }\n    if (proxyUrl == null) {\n      serverSocket.bind(new InetSocketAddress(listenPort), acceptBacklog);\n      proxyUrl = urlFromSocket(target, serverSocket);\n    } else {\n      serverSocket.bind(new InetSocketAddress(proxyUrl.getPort()));\n    }\n    acceptor = new Acceptor(serverSocket, target);\n    if (pauseAtStart) {\n      acceptor.pause();\n    }\n    new Thread(null, acceptor, \"SocketProxy-Acceptor-\"\n        + serverSocket.getLocalPort()).start();\n    closed = new CountDownLatch(1);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb222a3f9d9421d5c95afce73013fbd8de07ea1f","date":1543514331,"type":5,"author":"markrmiller","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/SocketProxy#doOpen().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/SocketProxy#doOpen().mjava","sourceNew":"  private void doOpen() throws Exception {\n    \n    acceptor = new Acceptor(serverSocket, target);\n    if (pauseAtStart) {\n      acceptor.pause();\n    }\n    new Thread(null, acceptor, \"SocketProxy-Acceptor-\"\n        + serverSocket.getLocalPort()).start();\n    closed = new CountDownLatch(1);\n  }\n\n","sourceOld":"  private void doOpen() throws Exception {\n    \n    acceptor = new Acceptor(serverSocket, target);\n    if (pauseAtStart) {\n      acceptor.pause();\n    }\n    new Thread(null, acceptor, \"SocketProxy-Acceptor-\"\n        + serverSocket.getLocalPort()).start();\n    closed = new CountDownLatch(1);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["1280741c654e60d3590156727fd5d8daa141efb7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"1280741c654e60d3590156727fd5d8daa141efb7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1280741c654e60d3590156727fd5d8daa141efb7"],"1280741c654e60d3590156727fd5d8daa141efb7":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}