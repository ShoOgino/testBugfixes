{"path":"lucene/src/test/org/apache/lucene/util/_TestUtil#reduceOpenFiles(IndexWriter).mjava","commits":[{"id":"35fccc6fabc57267490c7aef14b9e52c67feef82","date":1290263266,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/util/_TestUtil#reduceOpenFiles(IndexWriter).mjava","pathOld":"/dev/null","sourceNew":"  // just tries to configure things to keep the open file\n  // count lowish\n  public static void reduceOpenFiles(IndexWriter w) {\n    // keep number of open files lowish\n    LogMergePolicy lmp = (LogMergePolicy) w.getMergePolicy();\n    lmp.setMergeFactor(Math.min(5, lmp.getMergeFactor()));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2038bddb271054e53175411dbddf501a19f3083a","date":1290697949,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/util/_TestUtil#reduceOpenFiles(IndexWriter).mjava","pathOld":"lucene/src/test/org/apache/lucene/util/_TestUtil#reduceOpenFiles(IndexWriter).mjava","sourceNew":"  // just tries to configure things to keep the open file\n  // count lowish\n  public static void reduceOpenFiles(IndexWriter w) {\n    // keep number of open files lowish\n    LogMergePolicy lmp = (LogMergePolicy) w.getMergePolicy();\n    lmp.setMergeFactor(Math.min(5, lmp.getMergeFactor()));\n\n    MergeScheduler ms = w.getConfig().getMergeScheduler();\n    if (ms instanceof ConcurrentMergeScheduler) {\n      ((ConcurrentMergeScheduler) ms).setMaxThreadCount(2);\n      ((ConcurrentMergeScheduler) ms).setMaxMergeCount(3);\n    }\n  }\n\n","sourceOld":"  // just tries to configure things to keep the open file\n  // count lowish\n  public static void reduceOpenFiles(IndexWriter w) {\n    // keep number of open files lowish\n    LogMergePolicy lmp = (LogMergePolicy) w.getMergePolicy();\n    lmp.setMergeFactor(Math.min(5, lmp.getMergeFactor()));\n  }\n\n","bugFix":null,"bugIntro":["be3b141eed4372b3eb04def61ab79f86f572f481","be3b141eed4372b3eb04def61ab79f86f572f481","be3b141eed4372b3eb04def61ab79f86f572f481"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4e8cc373c801e54cec75daf9f52792cb4b17f536","date":1291116159,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/util/_TestUtil#reduceOpenFiles(IndexWriter).mjava","pathOld":"lucene/src/test/org/apache/lucene/util/_TestUtil#reduceOpenFiles(IndexWriter).mjava","sourceNew":"  // just tries to configure things to keep the open file\n  // count lowish\n  public static void reduceOpenFiles(IndexWriter w) {\n    // keep number of open files lowish\n    LogMergePolicy lmp = (LogMergePolicy) w.getConfig().getMergePolicy();\n    lmp.setMergeFactor(Math.min(5, lmp.getMergeFactor()));\n\n    MergeScheduler ms = w.getConfig().getMergeScheduler();\n    if (ms instanceof ConcurrentMergeScheduler) {\n      ((ConcurrentMergeScheduler) ms).setMaxThreadCount(2);\n      ((ConcurrentMergeScheduler) ms).setMaxMergeCount(3);\n    }\n  }\n\n","sourceOld":"  // just tries to configure things to keep the open file\n  // count lowish\n  public static void reduceOpenFiles(IndexWriter w) {\n    // keep number of open files lowish\n    LogMergePolicy lmp = (LogMergePolicy) w.getMergePolicy();\n    lmp.setMergeFactor(Math.min(5, lmp.getMergeFactor()));\n\n    MergeScheduler ms = w.getConfig().getMergeScheduler();\n    if (ms instanceof ConcurrentMergeScheduler) {\n      ((ConcurrentMergeScheduler) ms).setMaxThreadCount(2);\n      ((ConcurrentMergeScheduler) ms).setMaxMergeCount(3);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3bb13258feba31ab676502787ab2e1779f129b7a","date":1291596436,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/util/_TestUtil#reduceOpenFiles(IndexWriter).mjava","pathOld":"/dev/null","sourceNew":"  // just tries to configure things to keep the open file\n  // count lowish\n  public static void reduceOpenFiles(IndexWriter w) {\n    // keep number of open files lowish\n    LogMergePolicy lmp = (LogMergePolicy) w.getConfig().getMergePolicy();\n    lmp.setMergeFactor(Math.min(5, lmp.getMergeFactor()));\n\n    MergeScheduler ms = w.getConfig().getMergeScheduler();\n    if (ms instanceof ConcurrentMergeScheduler) {\n      ((ConcurrentMergeScheduler) ms).setMaxThreadCount(2);\n      ((ConcurrentMergeScheduler) ms).setMaxMergeCount(3);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/util/_TestUtil#reduceOpenFiles(IndexWriter).mjava","pathOld":"/dev/null","sourceNew":"  // just tries to configure things to keep the open file\n  // count lowish\n  public static void reduceOpenFiles(IndexWriter w) {\n    // keep number of open files lowish\n    LogMergePolicy lmp = (LogMergePolicy) w.getConfig().getMergePolicy();\n    lmp.setMergeFactor(Math.min(5, lmp.getMergeFactor()));\n\n    MergeScheduler ms = w.getConfig().getMergeScheduler();\n    if (ms instanceof ConcurrentMergeScheduler) {\n      ((ConcurrentMergeScheduler) ms).setMaxThreadCount(2);\n      ((ConcurrentMergeScheduler) ms).setMaxMergeCount(3);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce","date":1297021734,"type":5,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/_TestUtil#reduceOpenFiles(IndexWriter).mjava","pathOld":"lucene/src/test/org/apache/lucene/util/_TestUtil#reduceOpenFiles(IndexWriter).mjava","sourceNew":"  // just tries to configure things to keep the open file\n  // count lowish\n  public static void reduceOpenFiles(IndexWriter w) {\n    // keep number of open files lowish\n    LogMergePolicy lmp = (LogMergePolicy) w.getConfig().getMergePolicy();\n    lmp.setMergeFactor(Math.min(5, lmp.getMergeFactor()));\n\n    MergeScheduler ms = w.getConfig().getMergeScheduler();\n    if (ms instanceof ConcurrentMergeScheduler) {\n      ((ConcurrentMergeScheduler) ms).setMaxThreadCount(2);\n      ((ConcurrentMergeScheduler) ms).setMaxMergeCount(3);\n    }\n  }\n\n","sourceOld":"  // just tries to configure things to keep the open file\n  // count lowish\n  public static void reduceOpenFiles(IndexWriter w) {\n    // keep number of open files lowish\n    LogMergePolicy lmp = (LogMergePolicy) w.getConfig().getMergePolicy();\n    lmp.setMergeFactor(Math.min(5, lmp.getMergeFactor()));\n\n    MergeScheduler ms = w.getConfig().getMergeScheduler();\n    if (ms instanceof ConcurrentMergeScheduler) {\n      ((ConcurrentMergeScheduler) ms).setMaxThreadCount(2);\n      ((ConcurrentMergeScheduler) ms).setMaxMergeCount(3);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":5,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/_TestUtil#reduceOpenFiles(IndexWriter).mjava","pathOld":"lucene/src/test/org/apache/lucene/util/_TestUtil#reduceOpenFiles(IndexWriter).mjava","sourceNew":"  // just tries to configure things to keep the open file\n  // count lowish\n  public static void reduceOpenFiles(IndexWriter w) {\n    // keep number of open files lowish\n    LogMergePolicy lmp = (LogMergePolicy) w.getConfig().getMergePolicy();\n    lmp.setMergeFactor(Math.min(5, lmp.getMergeFactor()));\n\n    MergeScheduler ms = w.getConfig().getMergeScheduler();\n    if (ms instanceof ConcurrentMergeScheduler) {\n      ((ConcurrentMergeScheduler) ms).setMaxThreadCount(2);\n      ((ConcurrentMergeScheduler) ms).setMaxMergeCount(3);\n    }\n  }\n\n","sourceOld":"  // just tries to configure things to keep the open file\n  // count lowish\n  public static void reduceOpenFiles(IndexWriter w) {\n    // keep number of open files lowish\n    LogMergePolicy lmp = (LogMergePolicy) w.getConfig().getMergePolicy();\n    lmp.setMergeFactor(Math.min(5, lmp.getMergeFactor()));\n\n    MergeScheduler ms = w.getConfig().getMergeScheduler();\n    if (ms instanceof ConcurrentMergeScheduler) {\n      ((ConcurrentMergeScheduler) ms).setMaxThreadCount(2);\n      ((ConcurrentMergeScheduler) ms).setMaxMergeCount(3);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":5,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/_TestUtil#reduceOpenFiles(IndexWriter).mjava","pathOld":"lucene/src/test/org/apache/lucene/util/_TestUtil#reduceOpenFiles(IndexWriter).mjava","sourceNew":"  /** just tries to configure things to keep the open file\n   * count lowish */\n  public static void reduceOpenFiles(IndexWriter w) {\n    // keep number of open files lowish\n    LogMergePolicy lmp = (LogMergePolicy) w.getConfig().getMergePolicy();\n    lmp.setMergeFactor(Math.min(5, lmp.getMergeFactor()));\n\n    MergeScheduler ms = w.getConfig().getMergeScheduler();\n    if (ms instanceof ConcurrentMergeScheduler) {\n      ((ConcurrentMergeScheduler) ms).setMaxThreadCount(2);\n      ((ConcurrentMergeScheduler) ms).setMaxMergeCount(3);\n    }\n  }\n\n","sourceOld":"  // just tries to configure things to keep the open file\n  // count lowish\n  public static void reduceOpenFiles(IndexWriter w) {\n    // keep number of open files lowish\n    LogMergePolicy lmp = (LogMergePolicy) w.getConfig().getMergePolicy();\n    lmp.setMergeFactor(Math.min(5, lmp.getMergeFactor()));\n\n    MergeScheduler ms = w.getConfig().getMergeScheduler();\n    if (ms instanceof ConcurrentMergeScheduler) {\n      ((ConcurrentMergeScheduler) ms).setMaxThreadCount(2);\n      ((ConcurrentMergeScheduler) ms).setMaxMergeCount(3);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"29ef99d61cda9641b6250bf9567329a6e65f901d":["3bb13258feba31ab676502787ab2e1779f129b7a","f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"35fccc6fabc57267490c7aef14b9e52c67feef82":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","4e8cc373c801e54cec75daf9f52792cb4b17f536"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce"],"3bb13258feba31ab676502787ab2e1779f129b7a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","4e8cc373c801e54cec75daf9f52792cb4b17f536"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce"],"f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce":["4e8cc373c801e54cec75daf9f52792cb4b17f536"],"4e8cc373c801e54cec75daf9f52792cb4b17f536":["2038bddb271054e53175411dbddf501a19f3083a"],"2038bddb271054e53175411dbddf501a19f3083a":["35fccc6fabc57267490c7aef14b9e52c67feef82"]},"commit2Childs":{"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["35fccc6fabc57267490c7aef14b9e52c67feef82","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","3bb13258feba31ab676502787ab2e1779f129b7a"],"35fccc6fabc57267490c7aef14b9e52c67feef82":["2038bddb271054e53175411dbddf501a19f3083a"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["bde51b089eb7f86171eb3406e38a274743f9b7ac"],"3bb13258feba31ab676502787ab2e1779f129b7a":["29ef99d61cda9641b6250bf9567329a6e65f901d"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":[],"f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce":["29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4e8cc373c801e54cec75daf9f52792cb4b17f536":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","3bb13258feba31ab676502787ab2e1779f129b7a","f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"2038bddb271054e53175411dbddf501a19f3083a":["4e8cc373c801e54cec75daf9f52792cb4b17f536"]},"heads":["29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}