{"path":"lucene/core/src/java/org/apache/lucene/index/ByteSliceWriter#writeBytes(byte[],int,int).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/ByteSliceWriter#writeBytes(byte[],int,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/ByteSliceWriter#writeBytes(byte[],int,int).mjava","sourceNew":"  @Override\n  public void writeBytes(final byte[] b, int offset, final int len) {\n    final int offsetEnd = offset + len;\n    while(offset < offsetEnd) {\n      if (slice[upto] != 0) {\n        // End marker\n        upto = pool.allocSlice(slice, upto);\n        slice = pool.buffer;\n        offset0 = pool.byteOffset;\n      }\n\n      slice[upto++] = b[offset++];\n      assert upto != slice.length;\n    }\n  }\n\n","sourceOld":"  @Override\n  public void writeBytes(final byte[] b, int offset, final int len) {\n    final int offsetEnd = offset + len;\n    while(offset < offsetEnd) {\n      if (slice[upto] != 0) {\n        // End marker\n        upto = pool.allocSlice(slice, upto);\n        slice = pool.buffer;\n        offset0 = pool.byteOffset;\n      }\n\n      slice[upto++] = b[offset++];\n      assert upto != slice.length;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}