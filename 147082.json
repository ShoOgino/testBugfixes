{"path":"lucene/expressions/src/java/org/apache/lucene/expressions/js/JavascriptLexer#mDECIMALINTEGER().mjava","commits":[{"id":"f18d4e1cdc7330101ca433af5e8564dfd894f2bf","date":1379041877,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/expressions/src/java/org/apache/lucene/expressions/js/JavascriptLexer#mDECIMALINTEGER().mjava","pathOld":"/dev/null","sourceNew":"    // $ANTLR start \"DECIMALINTEGER\"\n    public final void mDECIMALINTEGER() throws RecognitionException {\n        try {\n            // src/java/org/apache/lucene/expressions/js/Javascript.g:358:5: ( '0' | '1' .. '9' ( DECIMALDIGIT )* )\n            int alt13=2;\n            int LA13_0 = input.LA(1);\n\n            if ( (LA13_0=='0') ) {\n                alt13=1;\n            }\n            else if ( ((LA13_0 >= '1' && LA13_0 <= '9')) ) {\n                alt13=2;\n            }\n            else {\n                NoViableAltException nvae =\n                    new NoViableAltException(\"\", 13, 0, input);\n\n                throw nvae;\n\n            }\n            switch (alt13) {\n                case 1 :\n                    // src/java/org/apache/lucene/expressions/js/Javascript.g:358:7: '0'\n                    {\n                    match('0'); \n\n                    }\n                    break;\n                case 2 :\n                    // src/java/org/apache/lucene/expressions/js/Javascript.g:359:7: '1' .. '9' ( DECIMALDIGIT )*\n                    {\n                    matchRange('1','9'); \n\n                    // src/java/org/apache/lucene/expressions/js/Javascript.g:359:16: ( DECIMALDIGIT )*\n                    loop12:\n                    do {\n                        int alt12=2;\n                        int LA12_0 = input.LA(1);\n\n                        if ( ((LA12_0 >= '0' && LA12_0 <= '9')) ) {\n                            alt12=1;\n                        }\n\n\n                        switch (alt12) {\n                    \tcase 1 :\n                    \t    // src/java/org/apache/lucene/expressions/js/Javascript.g:\n                    \t    {\n                    \t    if ( (input.LA(1) >= '0' && input.LA(1) <= '9') ) {\n                    \t        input.consume();\n                    \t    }\n                    \t    else {\n                    \t        MismatchedSetException mse = new MismatchedSetException(null,input);\n                    \t        recover(mse);\n                    \t        throw mse;\n                    \t    }\n\n\n                    \t    }\n                    \t    break;\n\n                    \tdefault :\n                    \t    break loop12;\n                        }\n                    } while (true);\n\n\n                    }\n                    break;\n\n            }\n\n        }\n        finally {\n        \t// do for sure before leaving\n        }\n    }\n    // $ANTLR end \"DECIMALINTEGER\"\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3623d67605fbbdfce2fadea678e2f4bbe2ab2310","date":1379042933,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/expressions/src/java/org/apache/lucene/expressions/js/JavascriptLexer#mDECIMALINTEGER().mjava","pathOld":"lucene/expressions/src/java/org/apache/lucene/expressions/js/JavascriptLexer#mDECIMALINTEGER().mjava","sourceNew":"    // $ANTLR start \"DECIMALINTEGER\"\n    public final void mDECIMALINTEGER() throws RecognitionException {\n        try {\n            // src/java/org/apache/lucene/expressions/js/Javascript.g:358:5: ( '0' | '1' .. '9' ( DECIMALDIGIT )* )\n            int alt13=2;\n            int LA13_0 = input.LA(1);\n\n            if ( (LA13_0=='0') ) {\n                alt13=1;\n            }\n            else if ( ((LA13_0 >= '1' && LA13_0 <= '9')) ) {\n                alt13=2;\n            }\n            else {\n                NoViableAltException nvae =\n                    new NoViableAltException(\"\", 13, 0, input);\n\n                throw nvae;\n\n            }\n            switch (alt13) {\n                case 1 :\n                    // src/java/org/apache/lucene/expressions/js/Javascript.g:358:7: '0'\n                    {\n                    match('0'); \n\n                    }\n                    break;\n                case 2 :\n                    // src/java/org/apache/lucene/expressions/js/Javascript.g:359:7: '1' .. '9' ( DECIMALDIGIT )*\n                    {\n                    matchRange('1','9'); \n\n                    // src/java/org/apache/lucene/expressions/js/Javascript.g:359:16: ( DECIMALDIGIT )*\n                    loop12:\n                    do {\n                        int alt12=2;\n                        int LA12_0 = input.LA(1);\n\n                        if ( ((LA12_0 >= '0' && LA12_0 <= '9')) ) {\n                            alt12=1;\n                        }\n\n\n                        switch (alt12) {\n                        case 1 :\n                            // src/java/org/apache/lucene/expressions/js/Javascript.g:\n                            {\n                            if ( (input.LA(1) >= '0' && input.LA(1) <= '9') ) {\n                                input.consume();\n                            }\n                            else {\n                                MismatchedSetException mse = new MismatchedSetException(null,input);\n                                recover(mse);\n                                throw mse;\n                            }\n\n\n                            }\n                            break;\n\n                        default :\n                            break loop12;\n                        }\n                    } while (true);\n\n\n                    }\n                    break;\n\n            }\n\n        }\n        finally {\n            // do for sure before leaving\n        }\n    }\n    // $ANTLR end \"DECIMALINTEGER\"\n\n","sourceOld":"    // $ANTLR start \"DECIMALINTEGER\"\n    public final void mDECIMALINTEGER() throws RecognitionException {\n        try {\n            // src/java/org/apache/lucene/expressions/js/Javascript.g:358:5: ( '0' | '1' .. '9' ( DECIMALDIGIT )* )\n            int alt13=2;\n            int LA13_0 = input.LA(1);\n\n            if ( (LA13_0=='0') ) {\n                alt13=1;\n            }\n            else if ( ((LA13_0 >= '1' && LA13_0 <= '9')) ) {\n                alt13=2;\n            }\n            else {\n                NoViableAltException nvae =\n                    new NoViableAltException(\"\", 13, 0, input);\n\n                throw nvae;\n\n            }\n            switch (alt13) {\n                case 1 :\n                    // src/java/org/apache/lucene/expressions/js/Javascript.g:358:7: '0'\n                    {\n                    match('0'); \n\n                    }\n                    break;\n                case 2 :\n                    // src/java/org/apache/lucene/expressions/js/Javascript.g:359:7: '1' .. '9' ( DECIMALDIGIT )*\n                    {\n                    matchRange('1','9'); \n\n                    // src/java/org/apache/lucene/expressions/js/Javascript.g:359:16: ( DECIMALDIGIT )*\n                    loop12:\n                    do {\n                        int alt12=2;\n                        int LA12_0 = input.LA(1);\n\n                        if ( ((LA12_0 >= '0' && LA12_0 <= '9')) ) {\n                            alt12=1;\n                        }\n\n\n                        switch (alt12) {\n                    \tcase 1 :\n                    \t    // src/java/org/apache/lucene/expressions/js/Javascript.g:\n                    \t    {\n                    \t    if ( (input.LA(1) >= '0' && input.LA(1) <= '9') ) {\n                    \t        input.consume();\n                    \t    }\n                    \t    else {\n                    \t        MismatchedSetException mse = new MismatchedSetException(null,input);\n                    \t        recover(mse);\n                    \t        throw mse;\n                    \t    }\n\n\n                    \t    }\n                    \t    break;\n\n                    \tdefault :\n                    \t    break loop12;\n                        }\n                    } while (true);\n\n\n                    }\n                    break;\n\n            }\n\n        }\n        finally {\n        \t// do for sure before leaving\n        }\n    }\n    // $ANTLR end \"DECIMALINTEGER\"\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"68ed114b20ecbed3707b1ee8e8d42af9c2ad1ae2","date":1379096281,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/expressions/src/java/org/apache/lucene/expressions/js/JavascriptLexer#mDECIMALINTEGER().mjava","pathOld":"lucene/expressions/src/java/org/apache/lucene/expressions/js/JavascriptLexer#mDECIMALINTEGER().mjava","sourceNew":"    // $ANTLR start \"DECIMALINTEGER\"\n    public final void mDECIMALINTEGER() throws RecognitionException {\n        try {\n            // src/java/org/apache/lucene/expressions/js/Javascript.g:358:5: ( '0' | '1' .. '9' ( DECIMALDIGIT )* )\n            int alt13=2;\n            int LA13_0 = input.LA(1);\n            if ( (LA13_0=='0') ) {\n                alt13=1;\n            }\n            else if ( ((LA13_0 >= '1' && LA13_0 <= '9')) ) {\n                alt13=2;\n            }\n\n            else {\n                NoViableAltException nvae =\n                    new NoViableAltException(\"\", 13, 0, input);\n                throw nvae;\n            }\n\n            switch (alt13) {\n                case 1 :\n                    // src/java/org/apache/lucene/expressions/js/Javascript.g:358:7: '0'\n                    {\n                    match('0'); \n                    }\n                    break;\n                case 2 :\n                    // src/java/org/apache/lucene/expressions/js/Javascript.g:359:7: '1' .. '9' ( DECIMALDIGIT )*\n                    {\n                    matchRange('1','9'); \n                    // src/java/org/apache/lucene/expressions/js/Javascript.g:359:16: ( DECIMALDIGIT )*\n                    loop12:\n                    while (true) {\n                        int alt12=2;\n                        int LA12_0 = input.LA(1);\n                        if ( ((LA12_0 >= '0' && LA12_0 <= '9')) ) {\n                            alt12=1;\n                        }\n\n                        switch (alt12) {\n                        case 1 :\n                            // src/java/org/apache/lucene/expressions/js/Javascript.g:\n                            {\n                            if ( (input.LA(1) >= '0' && input.LA(1) <= '9') ) {\n                                input.consume();\n                            }\n                            else {\n                                MismatchedSetException mse = new MismatchedSetException(null,input);\n                                recover(mse);\n                                throw mse;\n                            }\n                            }\n                            break;\n\n                        default :\n                            break loop12;\n                        }\n                    }\n\n                    }\n                    break;\n\n            }\n        }\n        finally {\n            // do for sure before leaving\n        }\n    }\n    // $ANTLR end \"DECIMALINTEGER\"\n\n","sourceOld":"    // $ANTLR start \"DECIMALINTEGER\"\n    public final void mDECIMALINTEGER() throws RecognitionException {\n        try {\n            // src/java/org/apache/lucene/expressions/js/Javascript.g:358:5: ( '0' | '1' .. '9' ( DECIMALDIGIT )* )\n            int alt13=2;\n            int LA13_0 = input.LA(1);\n\n            if ( (LA13_0=='0') ) {\n                alt13=1;\n            }\n            else if ( ((LA13_0 >= '1' && LA13_0 <= '9')) ) {\n                alt13=2;\n            }\n            else {\n                NoViableAltException nvae =\n                    new NoViableAltException(\"\", 13, 0, input);\n\n                throw nvae;\n\n            }\n            switch (alt13) {\n                case 1 :\n                    // src/java/org/apache/lucene/expressions/js/Javascript.g:358:7: '0'\n                    {\n                    match('0'); \n\n                    }\n                    break;\n                case 2 :\n                    // src/java/org/apache/lucene/expressions/js/Javascript.g:359:7: '1' .. '9' ( DECIMALDIGIT )*\n                    {\n                    matchRange('1','9'); \n\n                    // src/java/org/apache/lucene/expressions/js/Javascript.g:359:16: ( DECIMALDIGIT )*\n                    loop12:\n                    do {\n                        int alt12=2;\n                        int LA12_0 = input.LA(1);\n\n                        if ( ((LA12_0 >= '0' && LA12_0 <= '9')) ) {\n                            alt12=1;\n                        }\n\n\n                        switch (alt12) {\n                        case 1 :\n                            // src/java/org/apache/lucene/expressions/js/Javascript.g:\n                            {\n                            if ( (input.LA(1) >= '0' && input.LA(1) <= '9') ) {\n                                input.consume();\n                            }\n                            else {\n                                MismatchedSetException mse = new MismatchedSetException(null,input);\n                                recover(mse);\n                                throw mse;\n                            }\n\n\n                            }\n                            break;\n\n                        default :\n                            break loop12;\n                        }\n                    } while (true);\n\n\n                    }\n                    break;\n\n            }\n\n        }\n        finally {\n            // do for sure before leaving\n        }\n    }\n    // $ANTLR end \"DECIMALINTEGER\"\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d1441eba4282a646ef88d12acb797483db37554e","date":1379096538,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/expressions/src/java/org/apache/lucene/expressions/js/JavascriptLexer#mDECIMALINTEGER().mjava","pathOld":"lucene/expressions/src/java/org/apache/lucene/expressions/js/JavascriptLexer#mDECIMALINTEGER().mjava","sourceNew":"  // $ANTLR start \"DECIMALINTEGER\"\n  public final void mDECIMALINTEGER() throws RecognitionException {\n    try {\n      // src/java/org/apache/lucene/expressions/js/Javascript.g:358:5: ( '0' | '1' .. '9' ( DECIMALDIGIT )* )\n      int alt13=2;\n      int LA13_0 = input.LA(1);\n      if ( (LA13_0=='0') ) {\n        alt13=1;\n      }\n      else if ( ((LA13_0 >= '1' && LA13_0 <= '9')) ) {\n        alt13=2;\n      }\n\n      else {\n        NoViableAltException nvae =\n          new NoViableAltException(\"\", 13, 0, input);\n        throw nvae;\n      }\n\n      switch (alt13) {\n        case 1 :\n          // src/java/org/apache/lucene/expressions/js/Javascript.g:358:7: '0'\n          {\n          match('0'); \n          }\n          break;\n        case 2 :\n          // src/java/org/apache/lucene/expressions/js/Javascript.g:359:7: '1' .. '9' ( DECIMALDIGIT )*\n          {\n          matchRange('1','9'); \n          // src/java/org/apache/lucene/expressions/js/Javascript.g:359:16: ( DECIMALDIGIT )*\n          loop12:\n          while (true) {\n            int alt12=2;\n            int LA12_0 = input.LA(1);\n            if ( ((LA12_0 >= '0' && LA12_0 <= '9')) ) {\n              alt12=1;\n            }\n\n            switch (alt12) {\n            case 1 :\n              // src/java/org/apache/lucene/expressions/js/Javascript.g:\n              {\n              if ( (input.LA(1) >= '0' && input.LA(1) <= '9') ) {\n                input.consume();\n              }\n              else {\n                MismatchedSetException mse = new MismatchedSetException(null,input);\n                recover(mse);\n                throw mse;\n              }\n              }\n              break;\n\n            default :\n              break loop12;\n            }\n          }\n\n          }\n          break;\n\n      }\n    }\n    finally {\n      // do for sure before leaving\n    }\n  }\n  // $ANTLR end \"DECIMALINTEGER\"\n\n","sourceOld":"    // $ANTLR start \"DECIMALINTEGER\"\n    public final void mDECIMALINTEGER() throws RecognitionException {\n        try {\n            // src/java/org/apache/lucene/expressions/js/Javascript.g:358:5: ( '0' | '1' .. '9' ( DECIMALDIGIT )* )\n            int alt13=2;\n            int LA13_0 = input.LA(1);\n            if ( (LA13_0=='0') ) {\n                alt13=1;\n            }\n            else if ( ((LA13_0 >= '1' && LA13_0 <= '9')) ) {\n                alt13=2;\n            }\n\n            else {\n                NoViableAltException nvae =\n                    new NoViableAltException(\"\", 13, 0, input);\n                throw nvae;\n            }\n\n            switch (alt13) {\n                case 1 :\n                    // src/java/org/apache/lucene/expressions/js/Javascript.g:358:7: '0'\n                    {\n                    match('0'); \n                    }\n                    break;\n                case 2 :\n                    // src/java/org/apache/lucene/expressions/js/Javascript.g:359:7: '1' .. '9' ( DECIMALDIGIT )*\n                    {\n                    matchRange('1','9'); \n                    // src/java/org/apache/lucene/expressions/js/Javascript.g:359:16: ( DECIMALDIGIT )*\n                    loop12:\n                    while (true) {\n                        int alt12=2;\n                        int LA12_0 = input.LA(1);\n                        if ( ((LA12_0 >= '0' && LA12_0 <= '9')) ) {\n                            alt12=1;\n                        }\n\n                        switch (alt12) {\n                        case 1 :\n                            // src/java/org/apache/lucene/expressions/js/Javascript.g:\n                            {\n                            if ( (input.LA(1) >= '0' && input.LA(1) <= '9') ) {\n                                input.consume();\n                            }\n                            else {\n                                MismatchedSetException mse = new MismatchedSetException(null,input);\n                                recover(mse);\n                                throw mse;\n                            }\n                            }\n                            break;\n\n                        default :\n                            break loop12;\n                        }\n                    }\n\n                    }\n                    break;\n\n            }\n        }\n        finally {\n            // do for sure before leaving\n        }\n    }\n    // $ANTLR end \"DECIMALINTEGER\"\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5f0e44787cffbb978aa2182761e3f9b184545a1e","date":1379265303,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/expressions/src/java/org/apache/lucene/expressions/js/JavascriptLexer#mDECIMALINTEGER().mjava","pathOld":"/dev/null","sourceNew":"  // $ANTLR start \"DECIMALINTEGER\"\n  public final void mDECIMALINTEGER() throws RecognitionException {\n    try {\n      // src/java/org/apache/lucene/expressions/js/Javascript.g:358:5: ( '0' | '1' .. '9' ( DECIMALDIGIT )* )\n      int alt13=2;\n      int LA13_0 = input.LA(1);\n      if ( (LA13_0=='0') ) {\n        alt13=1;\n      }\n      else if ( ((LA13_0 >= '1' && LA13_0 <= '9')) ) {\n        alt13=2;\n      }\n\n      else {\n        NoViableAltException nvae =\n          new NoViableAltException(\"\", 13, 0, input);\n        throw nvae;\n      }\n\n      switch (alt13) {\n        case 1 :\n          // src/java/org/apache/lucene/expressions/js/Javascript.g:358:7: '0'\n          {\n          match('0'); \n          }\n          break;\n        case 2 :\n          // src/java/org/apache/lucene/expressions/js/Javascript.g:359:7: '1' .. '9' ( DECIMALDIGIT )*\n          {\n          matchRange('1','9'); \n          // src/java/org/apache/lucene/expressions/js/Javascript.g:359:16: ( DECIMALDIGIT )*\n          loop12:\n          while (true) {\n            int alt12=2;\n            int LA12_0 = input.LA(1);\n            if ( ((LA12_0 >= '0' && LA12_0 <= '9')) ) {\n              alt12=1;\n            }\n\n            switch (alt12) {\n            case 1 :\n              // src/java/org/apache/lucene/expressions/js/Javascript.g:\n              {\n              if ( (input.LA(1) >= '0' && input.LA(1) <= '9') ) {\n                input.consume();\n              }\n              else {\n                MismatchedSetException mse = new MismatchedSetException(null,input);\n                recover(mse);\n                throw mse;\n              }\n              }\n              break;\n\n            default :\n              break loop12;\n            }\n          }\n\n          }\n          break;\n\n      }\n    }\n    finally {\n      // do for sure before leaving\n    }\n  }\n  // $ANTLR end \"DECIMALINTEGER\"\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8d639dc27b5b3eae561ef321b06f3cad9280c529","date":1383945027,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/expressions/src/java/org/apache/lucene/expressions/js/JavascriptLexer#mDECIMALINTEGER().mjava","pathOld":"lucene/expressions/src/java/org/apache/lucene/expressions/js/JavascriptLexer#mDECIMALINTEGER().mjava","sourceNew":"  // $ANTLR start \"DECIMALINTEGER\"\n  public final void mDECIMALINTEGER() throws RecognitionException {\n    try {\n      // src/java/org/apache/lucene/expressions/js/Javascript.g:363:5: ( '0' | '1' .. '9' ( DECIMALDIGIT )* )\n      int alt14=2;\n      int LA14_0 = input.LA(1);\n      if ( (LA14_0=='0') ) {\n        alt14=1;\n      }\n      else if ( ((LA14_0 >= '1' && LA14_0 <= '9')) ) {\n        alt14=2;\n      }\n\n      else {\n        NoViableAltException nvae =\n          new NoViableAltException(\"\", 14, 0, input);\n        throw nvae;\n      }\n\n      switch (alt14) {\n        case 1 :\n          // src/java/org/apache/lucene/expressions/js/Javascript.g:363:7: '0'\n          {\n          match('0'); \n          }\n          break;\n        case 2 :\n          // src/java/org/apache/lucene/expressions/js/Javascript.g:364:7: '1' .. '9' ( DECIMALDIGIT )*\n          {\n          matchRange('1','9'); \n          // src/java/org/apache/lucene/expressions/js/Javascript.g:364:16: ( DECIMALDIGIT )*\n          loop13:\n          while (true) {\n            int alt13=2;\n            int LA13_0 = input.LA(1);\n            if ( ((LA13_0 >= '0' && LA13_0 <= '9')) ) {\n              alt13=1;\n            }\n\n            switch (alt13) {\n            case 1 :\n              // src/java/org/apache/lucene/expressions/js/Javascript.g:\n              {\n              if ( (input.LA(1) >= '0' && input.LA(1) <= '9') ) {\n                input.consume();\n              }\n              else {\n                MismatchedSetException mse = new MismatchedSetException(null,input);\n                recover(mse);\n                throw mse;\n              }\n              }\n              break;\n\n            default :\n              break loop13;\n            }\n          }\n\n          }\n          break;\n\n      }\n    }\n    finally {\n      // do for sure before leaving\n    }\n  }\n  // $ANTLR end \"DECIMALINTEGER\"\n\n","sourceOld":"  // $ANTLR start \"DECIMALINTEGER\"\n  public final void mDECIMALINTEGER() throws RecognitionException {\n    try {\n      // src/java/org/apache/lucene/expressions/js/Javascript.g:358:5: ( '0' | '1' .. '9' ( DECIMALDIGIT )* )\n      int alt13=2;\n      int LA13_0 = input.LA(1);\n      if ( (LA13_0=='0') ) {\n        alt13=1;\n      }\n      else if ( ((LA13_0 >= '1' && LA13_0 <= '9')) ) {\n        alt13=2;\n      }\n\n      else {\n        NoViableAltException nvae =\n          new NoViableAltException(\"\", 13, 0, input);\n        throw nvae;\n      }\n\n      switch (alt13) {\n        case 1 :\n          // src/java/org/apache/lucene/expressions/js/Javascript.g:358:7: '0'\n          {\n          match('0'); \n          }\n          break;\n        case 2 :\n          // src/java/org/apache/lucene/expressions/js/Javascript.g:359:7: '1' .. '9' ( DECIMALDIGIT )*\n          {\n          matchRange('1','9'); \n          // src/java/org/apache/lucene/expressions/js/Javascript.g:359:16: ( DECIMALDIGIT )*\n          loop12:\n          while (true) {\n            int alt12=2;\n            int LA12_0 = input.LA(1);\n            if ( ((LA12_0 >= '0' && LA12_0 <= '9')) ) {\n              alt12=1;\n            }\n\n            switch (alt12) {\n            case 1 :\n              // src/java/org/apache/lucene/expressions/js/Javascript.g:\n              {\n              if ( (input.LA(1) >= '0' && input.LA(1) <= '9') ) {\n                input.consume();\n              }\n              else {\n                MismatchedSetException mse = new MismatchedSetException(null,input);\n                recover(mse);\n                throw mse;\n              }\n              }\n              break;\n\n            default :\n              break loop12;\n            }\n          }\n\n          }\n          break;\n\n      }\n    }\n    finally {\n      // do for sure before leaving\n    }\n  }\n  // $ANTLR end \"DECIMALINTEGER\"\n\n","bugFix":null,"bugIntro":["5b6aa541ae5bb3c0260e1c263d6897a7925fa00c"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5b6aa541ae5bb3c0260e1c263d6897a7925fa00c","date":1404947938,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/expressions/src/java/org/apache/lucene/expressions/js/JavascriptLexer#mDECIMALINTEGER().mjava","pathOld":"lucene/expressions/src/java/org/apache/lucene/expressions/js/JavascriptLexer#mDECIMALINTEGER().mjava","sourceNew":"  // $ANTLR start \"DECIMALINTEGER\"\n  public final void mDECIMALINTEGER() throws RecognitionException {\n    try {\n      // src/java/org/apache/lucene/expressions/js/Javascript.g:394:5: ( '0' | '1' .. '9' ( DECIMALDIGIT )* )\n      int alt21=2;\n      int LA21_0 = input.LA(1);\n      if ( (LA21_0=='0') ) {\n        alt21=1;\n      }\n      else if ( ((LA21_0 >= '1' && LA21_0 <= '9')) ) {\n        alt21=2;\n      }\n\n      else {\n        NoViableAltException nvae =\n          new NoViableAltException(\"\", 21, 0, input);\n        throw nvae;\n      }\n\n      switch (alt21) {\n        case 1 :\n          // src/java/org/apache/lucene/expressions/js/Javascript.g:394:7: '0'\n          {\n          match('0'); \n          }\n          break;\n        case 2 :\n          // src/java/org/apache/lucene/expressions/js/Javascript.g:395:7: '1' .. '9' ( DECIMALDIGIT )*\n          {\n          matchRange('1','9'); \n          // src/java/org/apache/lucene/expressions/js/Javascript.g:395:16: ( DECIMALDIGIT )*\n          loop20:\n          while (true) {\n            int alt20=2;\n            int LA20_0 = input.LA(1);\n            if ( ((LA20_0 >= '0' && LA20_0 <= '9')) ) {\n              alt20=1;\n            }\n\n            switch (alt20) {\n            case 1 :\n              // src/java/org/apache/lucene/expressions/js/Javascript.g:\n              {\n              if ( (input.LA(1) >= '0' && input.LA(1) <= '9') ) {\n                input.consume();\n              }\n              else {\n                MismatchedSetException mse = new MismatchedSetException(null,input);\n                recover(mse);\n                throw mse;\n              }\n              }\n              break;\n\n            default :\n              break loop20;\n            }\n          }\n\n          }\n          break;\n\n      }\n    }\n    finally {\n      // do for sure before leaving\n    }\n  }\n  // $ANTLR end \"DECIMALINTEGER\"\n\n","sourceOld":"  // $ANTLR start \"DECIMALINTEGER\"\n  public final void mDECIMALINTEGER() throws RecognitionException {\n    try {\n      // src/java/org/apache/lucene/expressions/js/Javascript.g:363:5: ( '0' | '1' .. '9' ( DECIMALDIGIT )* )\n      int alt14=2;\n      int LA14_0 = input.LA(1);\n      if ( (LA14_0=='0') ) {\n        alt14=1;\n      }\n      else if ( ((LA14_0 >= '1' && LA14_0 <= '9')) ) {\n        alt14=2;\n      }\n\n      else {\n        NoViableAltException nvae =\n          new NoViableAltException(\"\", 14, 0, input);\n        throw nvae;\n      }\n\n      switch (alt14) {\n        case 1 :\n          // src/java/org/apache/lucene/expressions/js/Javascript.g:363:7: '0'\n          {\n          match('0'); \n          }\n          break;\n        case 2 :\n          // src/java/org/apache/lucene/expressions/js/Javascript.g:364:7: '1' .. '9' ( DECIMALDIGIT )*\n          {\n          matchRange('1','9'); \n          // src/java/org/apache/lucene/expressions/js/Javascript.g:364:16: ( DECIMALDIGIT )*\n          loop13:\n          while (true) {\n            int alt13=2;\n            int LA13_0 = input.LA(1);\n            if ( ((LA13_0 >= '0' && LA13_0 <= '9')) ) {\n              alt13=1;\n            }\n\n            switch (alt13) {\n            case 1 :\n              // src/java/org/apache/lucene/expressions/js/Javascript.g:\n              {\n              if ( (input.LA(1) >= '0' && input.LA(1) <= '9') ) {\n                input.consume();\n              }\n              else {\n                MismatchedSetException mse = new MismatchedSetException(null,input);\n                recover(mse);\n                throw mse;\n              }\n              }\n              break;\n\n            default :\n              break loop13;\n            }\n          }\n\n          }\n          break;\n\n      }\n    }\n    finally {\n      // do for sure before leaving\n    }\n  }\n  // $ANTLR end \"DECIMALINTEGER\"\n\n","bugFix":["8d639dc27b5b3eae561ef321b06f3cad9280c529"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d23d4828afa583ebf35b4a541763af6206133458","date":1438931440,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/expressions/src/java/org/apache/lucene/expressions/js/JavascriptLexer#mDECIMALINTEGER().mjava","sourceNew":null,"sourceOld":"  // $ANTLR start \"DECIMALINTEGER\"\n  public final void mDECIMALINTEGER() throws RecognitionException {\n    try {\n      // src/java/org/apache/lucene/expressions/js/Javascript.g:394:5: ( '0' | '1' .. '9' ( DECIMALDIGIT )* )\n      int alt21=2;\n      int LA21_0 = input.LA(1);\n      if ( (LA21_0=='0') ) {\n        alt21=1;\n      }\n      else if ( ((LA21_0 >= '1' && LA21_0 <= '9')) ) {\n        alt21=2;\n      }\n\n      else {\n        NoViableAltException nvae =\n          new NoViableAltException(\"\", 21, 0, input);\n        throw nvae;\n      }\n\n      switch (alt21) {\n        case 1 :\n          // src/java/org/apache/lucene/expressions/js/Javascript.g:394:7: '0'\n          {\n          match('0'); \n          }\n          break;\n        case 2 :\n          // src/java/org/apache/lucene/expressions/js/Javascript.g:395:7: '1' .. '9' ( DECIMALDIGIT )*\n          {\n          matchRange('1','9'); \n          // src/java/org/apache/lucene/expressions/js/Javascript.g:395:16: ( DECIMALDIGIT )*\n          loop20:\n          while (true) {\n            int alt20=2;\n            int LA20_0 = input.LA(1);\n            if ( ((LA20_0 >= '0' && LA20_0 <= '9')) ) {\n              alt20=1;\n            }\n\n            switch (alt20) {\n            case 1 :\n              // src/java/org/apache/lucene/expressions/js/Javascript.g:\n              {\n              if ( (input.LA(1) >= '0' && input.LA(1) <= '9') ) {\n                input.consume();\n              }\n              else {\n                MismatchedSetException mse = new MismatchedSetException(null,input);\n                recover(mse);\n                throw mse;\n              }\n              }\n              break;\n\n            default :\n              break loop20;\n            }\n          }\n\n          }\n          break;\n\n      }\n    }\n    finally {\n      // do for sure before leaving\n    }\n  }\n  // $ANTLR end \"DECIMALINTEGER\"\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d23d4828afa583ebf35b4a541763af6206133458":["5b6aa541ae5bb3c0260e1c263d6897a7925fa00c"],"68ed114b20ecbed3707b1ee8e8d42af9c2ad1ae2":["3623d67605fbbdfce2fadea678e2f4bbe2ab2310"],"f18d4e1cdc7330101ca433af5e8564dfd894f2bf":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d1441eba4282a646ef88d12acb797483db37554e":["68ed114b20ecbed3707b1ee8e8d42af9c2ad1ae2"],"8d639dc27b5b3eae561ef321b06f3cad9280c529":["5f0e44787cffbb978aa2182761e3f9b184545a1e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5b6aa541ae5bb3c0260e1c263d6897a7925fa00c":["8d639dc27b5b3eae561ef321b06f3cad9280c529"],"3623d67605fbbdfce2fadea678e2f4bbe2ab2310":["f18d4e1cdc7330101ca433af5e8564dfd894f2bf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d23d4828afa583ebf35b4a541763af6206133458"],"5f0e44787cffbb978aa2182761e3f9b184545a1e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","d1441eba4282a646ef88d12acb797483db37554e"]},"commit2Childs":{"d23d4828afa583ebf35b4a541763af6206133458":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"68ed114b20ecbed3707b1ee8e8d42af9c2ad1ae2":["d1441eba4282a646ef88d12acb797483db37554e"],"f18d4e1cdc7330101ca433af5e8564dfd894f2bf":["3623d67605fbbdfce2fadea678e2f4bbe2ab2310"],"d1441eba4282a646ef88d12acb797483db37554e":["5f0e44787cffbb978aa2182761e3f9b184545a1e"],"8d639dc27b5b3eae561ef321b06f3cad9280c529":["5b6aa541ae5bb3c0260e1c263d6897a7925fa00c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f18d4e1cdc7330101ca433af5e8564dfd894f2bf","5f0e44787cffbb978aa2182761e3f9b184545a1e"],"5b6aa541ae5bb3c0260e1c263d6897a7925fa00c":["d23d4828afa583ebf35b4a541763af6206133458"],"3623d67605fbbdfce2fadea678e2f4bbe2ab2310":["68ed114b20ecbed3707b1ee8e8d42af9c2ad1ae2"],"5f0e44787cffbb978aa2182761e3f9b184545a1e":["8d639dc27b5b3eae561ef321b06f3cad9280c529"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}