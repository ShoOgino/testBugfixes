{"path":"src/test/org/apache/solr/schema/DateFieldTest#testParseMath().mjava","commits":[{"id":"dc403e1b9435fee7d9e574f6e940b76e76d702bf","date":1211234422,"type":0,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"src/test/org/apache/solr/schema/DateFieldTest#testParseMath().mjava","pathOld":"/dev/null","sourceNew":"  // as of Solr1.3\n  public void testParseMath() {\n    assertParseMath(820454699999l, \"1995-12-31T23:59:59.999765Z+5MINUTES\");\n    assertParseMath(820454699999l, \"1995-12-31T23:59:59.999Z+5MINUTES\");\n    assertParseMath(820454699990l, \"1995-12-31T23:59:59.99Z+5MINUTES\");\n    assertParseMath(194918400000l, \"1976-03-06T03:06:00Z/DAY\");\n    \n    // here the input isn't in the canonical form, but we should be forgiving\n    assertParseMath(820454699990l, \"1995-12-31T23:59:59.990Z+5MINUTES\");\n    assertParseMath(194918400000l, \"1976-03-06T03:06:00.0Z/DAY\");\n    assertParseMath(194918400000l, \"1976-03-06T03:06:00.00Z/DAY\");\n    assertParseMath(194918400000l, \"1976-03-06T03:06:00.000Z/DAY\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/schema/DateFieldTest#testParseMath().mjava","pathOld":"src/test/org/apache/solr/schema/DateFieldTest#testParseMath().mjava","sourceNew":"  // as of Solr1.3\n  public void testParseMath() {\n    assertParseMath(820454699999l, \"1995-12-31T23:59:59.999765Z+5MINUTES\");\n    assertParseMath(820454699999l, \"1995-12-31T23:59:59.999Z+5MINUTES\");\n    assertParseMath(820454699990l, \"1995-12-31T23:59:59.99Z+5MINUTES\");\n    assertParseMath(194918400000l, \"1976-03-06T03:06:00Z/DAY\");\n    \n    // here the input isn't in the canonical form, but we should be forgiving\n    assertParseMath(820454699990l, \"1995-12-31T23:59:59.990Z+5MINUTES\");\n    assertParseMath(194918400000l, \"1976-03-06T03:06:00.0Z/DAY\");\n    assertParseMath(194918400000l, \"1976-03-06T03:06:00.00Z/DAY\");\n    assertParseMath(194918400000l, \"1976-03-06T03:06:00.000Z/DAY\");\n  }\n\n","sourceOld":"  // as of Solr1.3\n  public void testParseMath() {\n    assertParseMath(820454699999l, \"1995-12-31T23:59:59.999765Z+5MINUTES\");\n    assertParseMath(820454699999l, \"1995-12-31T23:59:59.999Z+5MINUTES\");\n    assertParseMath(820454699990l, \"1995-12-31T23:59:59.99Z+5MINUTES\");\n    assertParseMath(194918400000l, \"1976-03-06T03:06:00Z/DAY\");\n    \n    // here the input isn't in the canonical form, but we should be forgiving\n    assertParseMath(820454699990l, \"1995-12-31T23:59:59.990Z+5MINUTES\");\n    assertParseMath(194918400000l, \"1976-03-06T03:06:00.0Z/DAY\");\n    assertParseMath(194918400000l, \"1976-03-06T03:06:00.00Z/DAY\");\n    assertParseMath(194918400000l, \"1976-03-06T03:06:00.000Z/DAY\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["dc403e1b9435fee7d9e574f6e940b76e76d702bf"],"dc403e1b9435fee7d9e574f6e940b76e76d702bf":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["dc403e1b9435fee7d9e574f6e940b76e76d702bf"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"dc403e1b9435fee7d9e574f6e940b76e76d702bf":["ad94625fb8d088209f46650c8097196fec67f00c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}