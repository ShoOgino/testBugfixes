{"path":"contrib/miscellaneous/src/test/org/apache/lucene/queryParser/precedence/TestPrecedenceQueryParser.QPTestFilter#incrementToken().mjava","commits":[{"id":"9b5756469957918cac40a831acec9cf01c8c2bb3","date":1249167152,"type":0,"author":"Michael Busch","isMerge":false,"pathNew":"contrib/miscellaneous/src/test/org/apache/lucene/queryParser/precedence/TestPrecedenceQueryParser.QPTestFilter#incrementToken().mjava","pathOld":"/dev/null","sourceNew":"    public boolean incrementToken() throws IOException {\n      if (inPhrase) {\n        inPhrase = false;\n        termAtt.setTermBuffer(\"phrase2\");\n        offsetAtt.setOffset(savedStart, savedEnd);\n        return true;\n      } else\n        while(input.incrementToken())\n          if (termAtt.term().equals(\"phrase\")) {\n            inPhrase = true;\n            savedStart = offsetAtt.startOffset();\n            savedEnd = offsetAtt.endOffset();\n            termAtt.setTermBuffer(\"phrase1\");\n            offsetAtt.setOffset(savedStart, savedEnd);\n            return true;\n          } else if (!termAtt.term().equals(\"stop\"))\n            return true;\n      return false;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"48bedd31c61edafb8baaff4bcbcac19449fb7c3a","date":1251468037,"type":5,"author":"Mark Robert Miller","isMerge":false,"pathNew":"contrib/misc/src/test/org/apache/lucene/queryParser/precedence/TestPrecedenceQueryParser.QPTestFilter#incrementToken().mjava","pathOld":"contrib/miscellaneous/src/test/org/apache/lucene/queryParser/precedence/TestPrecedenceQueryParser.QPTestFilter#incrementToken().mjava","sourceNew":"    public boolean incrementToken() throws IOException {\n      if (inPhrase) {\n        inPhrase = false;\n        termAtt.setTermBuffer(\"phrase2\");\n        offsetAtt.setOffset(savedStart, savedEnd);\n        return true;\n      } else\n        while(input.incrementToken())\n          if (termAtt.term().equals(\"phrase\")) {\n            inPhrase = true;\n            savedStart = offsetAtt.startOffset();\n            savedEnd = offsetAtt.endOffset();\n            termAtt.setTermBuffer(\"phrase1\");\n            offsetAtt.setOffset(savedStart, savedEnd);\n            return true;\n          } else if (!termAtt.term().equals(\"stop\"))\n            return true;\n      return false;\n    }\n\n","sourceOld":"    public boolean incrementToken() throws IOException {\n      if (inPhrase) {\n        inPhrase = false;\n        termAtt.setTermBuffer(\"phrase2\");\n        offsetAtt.setOffset(savedStart, savedEnd);\n        return true;\n      } else\n        while(input.incrementToken())\n          if (termAtt.term().equals(\"phrase\")) {\n            inPhrase = true;\n            savedStart = offsetAtt.startOffset();\n            savedEnd = offsetAtt.endOffset();\n            termAtt.setTermBuffer(\"phrase1\");\n            offsetAtt.setOffset(savedStart, savedEnd);\n            return true;\n          } else if (!termAtt.term().equals(\"stop\"))\n            return true;\n      return false;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"48bedd31c61edafb8baaff4bcbcac19449fb7c3a":["9b5756469957918cac40a831acec9cf01c8c2bb3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9b5756469957918cac40a831acec9cf01c8c2bb3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["48bedd31c61edafb8baaff4bcbcac19449fb7c3a"]},"commit2Childs":{"48bedd31c61edafb8baaff4bcbcac19449fb7c3a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9b5756469957918cac40a831acec9cf01c8c2bb3"],"9b5756469957918cac40a831acec9cf01c8c2bb3":["48bedd31c61edafb8baaff4bcbcac19449fb7c3a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}