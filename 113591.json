{"path":"lucene/core/src/java/org/apache/lucene/search/similarities/TFIDFSimilarity#simScorer(SimWeight,LeafReaderContext).mjava","commits":[{"id":"c9fb5f46e264daf5ba3860defe623a89d202dd87","date":1411516315,"type":0,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/similarities/TFIDFSimilarity#simScorer(SimWeight,LeafReaderContext).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public final SimScorer simScorer(SimWeight stats, LeafReaderContext context) throws IOException {\n    IDFStats idfstats = (IDFStats) stats;\n    return new TFIDFSimScorer(idfstats, context.reader().getNormValues(idfstats.field));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"615370d2b876c3435773b5174df2e2242ad7981a","date":1495117651,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/similarities/TFIDFSimilarity#simScorer(SimWeight,LeafReaderContext).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/similarities/TFIDFSimilarity#simScorer(SimWeight,LeafReaderContext).mjava","sourceNew":"  @Override\n  public final SimScorer simScorer(SimWeight stats, LeafReaderContext context) throws IOException {\n    IDFStats idfstats = (IDFStats) stats;\n    final float[] normTable;\n    if (context.reader().getMetaData().getCreatedVersionMajor() >= 7) {\n      // the norms only encode the length, we need a translation table that depends on how lengthNorm is implemented\n      normTable = idfstats.normTable;\n    } else {\n      // the norm is directly encoded in the index\n      normTable = OLD_NORM_TABLE;\n    }\n    return new TFIDFSimScorer(idfstats, context.reader().getNormValues(idfstats.field), normTable);\n  }\n\n","sourceOld":"  @Override\n  public final SimScorer simScorer(SimWeight stats, LeafReaderContext context) throws IOException {\n    IDFStats idfstats = (IDFStats) stats;\n    return new TFIDFSimScorer(idfstats, context.reader().getNormValues(idfstats.field));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/similarities/TFIDFSimilarity#simScorer(SimWeight,LeafReaderContext).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/similarities/TFIDFSimilarity#simScorer(SimWeight,LeafReaderContext).mjava","sourceNew":"  @Override\n  public final SimScorer simScorer(SimWeight stats, LeafReaderContext context) throws IOException {\n    IDFStats idfstats = (IDFStats) stats;\n    final float[] normTable;\n    if (context.reader().getMetaData().getCreatedVersionMajor() >= 7) {\n      // the norms only encode the length, we need a translation table that depends on how lengthNorm is implemented\n      normTable = idfstats.normTable;\n    } else {\n      // the norm is directly encoded in the index\n      normTable = OLD_NORM_TABLE;\n    }\n    return new TFIDFSimScorer(idfstats, context.reader().getNormValues(idfstats.field), normTable);\n  }\n\n","sourceOld":"  @Override\n  public final SimScorer simScorer(SimWeight stats, LeafReaderContext context) throws IOException {\n    IDFStats idfstats = (IDFStats) stats;\n    return new TFIDFSimScorer(idfstats, context.reader().getNormValues(idfstats.field));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cd7538cbbd9c304bc5396980e9802cd3a5bcf8e4","date":1499084229,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/similarities/TFIDFSimilarity#simScorer(SimWeight,LeafReaderContext).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/similarities/TFIDFSimilarity#simScorer(SimWeight,LeafReaderContext).mjava","sourceNew":"  @Override\n  public final SimScorer simScorer(SimWeight stats, LeafReaderContext context) throws IOException {\n    IDFStats idfstats = (IDFStats) stats;\n    // the norms only encode the length, we need a translation table that depends on how lengthNorm is implemented\n    final float[] normTable = idfstats.normTable;\n    return new TFIDFSimScorer(idfstats, context.reader().getNormValues(idfstats.field), normTable);\n  }\n\n","sourceOld":"  @Override\n  public final SimScorer simScorer(SimWeight stats, LeafReaderContext context) throws IOException {\n    IDFStats idfstats = (IDFStats) stats;\n    final float[] normTable;\n    if (context.reader().getMetaData().getCreatedVersionMajor() >= 7) {\n      // the norms only encode the length, we need a translation table that depends on how lengthNorm is implemented\n      normTable = idfstats.normTable;\n    } else {\n      // the norm is directly encoded in the index\n      normTable = OLD_NORM_TABLE;\n    }\n    return new TFIDFSimScorer(idfstats, context.reader().getNormValues(idfstats.field), normTable);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cc018b79379c67835b40b1259cd3dc931df60944","date":1499109112,"type":3,"author":"Anshum Gupta","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/similarities/TFIDFSimilarity#simScorer(SimWeight,LeafReaderContext).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/similarities/TFIDFSimilarity#simScorer(SimWeight,LeafReaderContext).mjava","sourceNew":"  @Override\n  public final SimScorer simScorer(SimWeight stats, LeafReaderContext context) throws IOException {\n    IDFStats idfstats = (IDFStats) stats;\n    // the norms only encode the length, we need a translation table that depends on how lengthNorm is implemented\n    final float[] normTable = idfstats.normTable;\n    return new TFIDFSimScorer(idfstats, context.reader().getNormValues(idfstats.field), normTable);\n  }\n\n","sourceOld":"  @Override\n  public final SimScorer simScorer(SimWeight stats, LeafReaderContext context) throws IOException {\n    IDFStats idfstats = (IDFStats) stats;\n    final float[] normTable;\n    if (context.reader().getMetaData().getCreatedVersionMajor() >= 7) {\n      // the norms only encode the length, we need a translation table that depends on how lengthNorm is implemented\n      normTable = idfstats.normTable;\n    } else {\n      // the norm is directly encoded in the index\n      normTable = OLD_NORM_TABLE;\n    }\n    return new TFIDFSimScorer(idfstats, context.reader().getNormValues(idfstats.field), normTable);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"30c8e5574b55d57947e989443dfde611646530ee","date":1499131153,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/similarities/TFIDFSimilarity#simScorer(SimWeight,LeafReaderContext).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/similarities/TFIDFSimilarity#simScorer(SimWeight,LeafReaderContext).mjava","sourceNew":"  @Override\n  public final SimScorer simScorer(SimWeight stats, LeafReaderContext context) throws IOException {\n    IDFStats idfstats = (IDFStats) stats;\n    // the norms only encode the length, we need a translation table that depends on how lengthNorm is implemented\n    final float[] normTable = idfstats.normTable;\n    return new TFIDFSimScorer(idfstats, context.reader().getNormValues(idfstats.field), normTable);\n  }\n\n","sourceOld":"  @Override\n  public final SimScorer simScorer(SimWeight stats, LeafReaderContext context) throws IOException {\n    IDFStats idfstats = (IDFStats) stats;\n    final float[] normTable;\n    if (context.reader().getMetaData().getCreatedVersionMajor() >= 7) {\n      // the norms only encode the length, we need a translation table that depends on how lengthNorm is implemented\n      normTable = idfstats.normTable;\n    } else {\n      // the norm is directly encoded in the index\n      normTable = OLD_NORM_TABLE;\n    }\n    return new TFIDFSimScorer(idfstats, context.reader().getNormValues(idfstats.field), normTable);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"68d6cb7f0f019661a784bd0e5a21e85b5f812af6","date":1515075216,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/search/similarities/TFIDFSimilarity#simScorer(SimWeight,LeafReaderContext).mjava","sourceNew":null,"sourceOld":"  @Override\n  public final SimScorer simScorer(SimWeight stats, LeafReaderContext context) throws IOException {\n    IDFStats idfstats = (IDFStats) stats;\n    // the norms only encode the length, we need a translation table that depends on how lengthNorm is implemented\n    final float[] normTable = idfstats.normTable;\n    return new TFIDFSimScorer(idfstats, context.reader().getNormValues(idfstats.field), normTable);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b94236357aaa22b76c10629851fe4e376e0cea82","date":1516710914,"type":4,"author":"Karl Wright","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/search/similarities/TFIDFSimilarity#simScorer(SimWeight,LeafReaderContext).mjava","sourceNew":null,"sourceOld":"  @Override\n  public final SimScorer simScorer(SimWeight stats, LeafReaderContext context) throws IOException {\n    IDFStats idfstats = (IDFStats) stats;\n    // the norms only encode the length, we need a translation table that depends on how lengthNorm is implemented\n    final float[] normTable = idfstats.normTable;\n    return new TFIDFSimScorer(idfstats, context.reader().getNormValues(idfstats.field), normTable);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b94236357aaa22b76c10629851fe4e376e0cea82":["cc018b79379c67835b40b1259cd3dc931df60944","68d6cb7f0f019661a784bd0e5a21e85b5f812af6"],"68d6cb7f0f019661a784bd0e5a21e85b5f812af6":["cc018b79379c67835b40b1259cd3dc931df60944"],"e9017cf144952056066919f1ebc7897ff9bd71b1":["c9fb5f46e264daf5ba3860defe623a89d202dd87","615370d2b876c3435773b5174df2e2242ad7981a"],"615370d2b876c3435773b5174df2e2242ad7981a":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cc018b79379c67835b40b1259cd3dc931df60944":["615370d2b876c3435773b5174df2e2242ad7981a","cd7538cbbd9c304bc5396980e9802cd3a5bcf8e4"],"30c8e5574b55d57947e989443dfde611646530ee":["e9017cf144952056066919f1ebc7897ff9bd71b1","cc018b79379c67835b40b1259cd3dc931df60944"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b94236357aaa22b76c10629851fe4e376e0cea82"],"cd7538cbbd9c304bc5396980e9802cd3a5bcf8e4":["615370d2b876c3435773b5174df2e2242ad7981a"]},"commit2Childs":{"b94236357aaa22b76c10629851fe4e376e0cea82":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"68d6cb7f0f019661a784bd0e5a21e85b5f812af6":["b94236357aaa22b76c10629851fe4e376e0cea82"],"e9017cf144952056066919f1ebc7897ff9bd71b1":["30c8e5574b55d57947e989443dfde611646530ee"],"615370d2b876c3435773b5174df2e2242ad7981a":["e9017cf144952056066919f1ebc7897ff9bd71b1","cc018b79379c67835b40b1259cd3dc931df60944","cd7538cbbd9c304bc5396980e9802cd3a5bcf8e4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"cc018b79379c67835b40b1259cd3dc931df60944":["b94236357aaa22b76c10629851fe4e376e0cea82","68d6cb7f0f019661a784bd0e5a21e85b5f812af6","30c8e5574b55d57947e989443dfde611646530ee"],"30c8e5574b55d57947e989443dfde611646530ee":[],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["e9017cf144952056066919f1ebc7897ff9bd71b1","615370d2b876c3435773b5174df2e2242ad7981a"],"cd7538cbbd9c304bc5396980e9802cd3a5bcf8e4":["cc018b79379c67835b40b1259cd3dc931df60944"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["30c8e5574b55d57947e989443dfde611646530ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}