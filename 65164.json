{"path":"solr/core/src/test/org/apache/solr/response/TestJavabinTupleStreamParser#serialize(Object).mjava","commits":[{"id":"da8b6cfd1b67b932db9907356935046c4d40d033","date":1479958221,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/response/TestJavabinTupleStreamParser#serialize(Object).mjava","pathOld":"/dev/null","sourceNew":"  public static byte[] serialize(Object o) throws IOException {\n    SolrQueryResponse response = new SolrQueryResponse();\n    response.getValues().add(\"results\", o);\n    ByteArrayOutputStream baos = new ByteArrayOutputStream();\n    new JavaBinCodec().marshal(response.getValues(), baos);\n    return baos.toByteArray();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"727bb765ff2542275f6d31f67be18d7104bae148","date":1480353976,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/response/TestJavabinTupleStreamParser#serialize(Object).mjava","pathOld":"/dev/null","sourceNew":"  public static byte[] serialize(Object o) throws IOException {\n    SolrQueryResponse response = new SolrQueryResponse();\n    response.getValues().add(\"results\", o);\n    ByteArrayOutputStream baos = new ByteArrayOutputStream();\n    new JavaBinCodec().marshal(response.getValues(), baos);\n    return baos.toByteArray();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"97dc2f8d4b90795c74a2f9a9b02bfc9aeffca6c2","date":1497850557,"type":3,"author":"Erick","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/response/TestJavabinTupleStreamParser#serialize(Object).mjava","pathOld":"solr/core/src/test/org/apache/solr/response/TestJavabinTupleStreamParser#serialize(Object).mjava","sourceNew":"  public static byte[] serialize(Object o) throws IOException {\n    SolrQueryResponse response = new SolrQueryResponse();\n    response.getValues().add(\"results\", o);\n    ByteArrayOutputStream baos = new ByteArrayOutputStream();\n    try (JavaBinCodec jbc = new JavaBinCodec()) {\n      jbc.marshal(response.getValues(), baos);\n    }\n    return baos.toByteArray();\n  }\n\n","sourceOld":"  public static byte[] serialize(Object o) throws IOException {\n    SolrQueryResponse response = new SolrQueryResponse();\n    response.getValues().add(\"results\", o);\n    ByteArrayOutputStream baos = new ByteArrayOutputStream();\n    new JavaBinCodec().marshal(response.getValues(), baos);\n    return baos.toByteArray();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","date":1498028748,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/response/TestJavabinTupleStreamParser#serialize(Object).mjava","pathOld":"solr/core/src/test/org/apache/solr/response/TestJavabinTupleStreamParser#serialize(Object).mjava","sourceNew":"  public static byte[] serialize(Object o) throws IOException {\n    SolrQueryResponse response = new SolrQueryResponse();\n    response.getValues().add(\"results\", o);\n    ByteArrayOutputStream baos = new ByteArrayOutputStream();\n    try (JavaBinCodec jbc = new JavaBinCodec()) {\n      jbc.marshal(response.getValues(), baos);\n    }\n    return baos.toByteArray();\n  }\n\n","sourceOld":"  public static byte[] serialize(Object o) throws IOException {\n    SolrQueryResponse response = new SolrQueryResponse();\n    response.getValues().add(\"results\", o);\n    ByteArrayOutputStream baos = new ByteArrayOutputStream();\n    new JavaBinCodec().marshal(response.getValues(), baos);\n    return baos.toByteArray();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/response/TestJavabinTupleStreamParser#serialize(Object).mjava","pathOld":"solr/core/src/test/org/apache/solr/response/TestJavabinTupleStreamParser#serialize(Object).mjava","sourceNew":"  public static byte[] serialize(Object o) throws IOException {\n    SolrQueryResponse response = new SolrQueryResponse();\n    response.getValues().add(\"results\", o);\n    ByteArrayOutputStream baos = new ByteArrayOutputStream();\n    try (JavaBinCodec jbc = new JavaBinCodec()) {\n      jbc.marshal(response.getValues(), baos);\n    }\n    return baos.toByteArray();\n  }\n\n","sourceOld":"  public static byte[] serialize(Object o) throws IOException {\n    SolrQueryResponse response = new SolrQueryResponse();\n    response.getValues().add(\"results\", o);\n    ByteArrayOutputStream baos = new ByteArrayOutputStream();\n    new JavaBinCodec().marshal(response.getValues(), baos);\n    return baos.toByteArray();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e98520789adb1d5ad05afb4956eca0944a929688","date":1592430701,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/response/TestJavabinTupleStreamParser#serialize(Object).mjava","pathOld":"solr/core/src/test/org/apache/solr/response/TestJavabinTupleStreamParser#serialize(Object).mjava","sourceNew":"  @SuppressWarnings({\"unchecked\"})\n  public static byte[] serialize(Object o) throws IOException {\n    SolrQueryResponse response = new SolrQueryResponse();\n    response.getValues().add(\"results\", o);\n    ByteArrayOutputStream baos = new ByteArrayOutputStream();\n    try (JavaBinCodec jbc = new JavaBinCodec()) {\n      jbc.marshal(response.getValues(), baos);\n    }\n    return baos.toByteArray();\n  }\n\n","sourceOld":"  public static byte[] serialize(Object o) throws IOException {\n    SolrQueryResponse response = new SolrQueryResponse();\n    response.getValues().add(\"results\", o);\n    ByteArrayOutputStream baos = new ByteArrayOutputStream();\n    try (JavaBinCodec jbc = new JavaBinCodec()) {\n      jbc.marshal(response.getValues(), baos);\n    }\n    return baos.toByteArray();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"da8b6cfd1b67b932db9907356935046c4d40d033":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"97dc2f8d4b90795c74a2f9a9b02bfc9aeffca6c2":["da8b6cfd1b67b932db9907356935046c4d40d033"],"727bb765ff2542275f6d31f67be18d7104bae148":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","da8b6cfd1b67b932db9907356935046c4d40d033"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"28288370235ed02234a64753cdbf0c6ec096304a":["da8b6cfd1b67b932db9907356935046c4d40d033","97dc2f8d4b90795c74a2f9a9b02bfc9aeffca6c2"],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":["da8b6cfd1b67b932db9907356935046c4d40d033","97dc2f8d4b90795c74a2f9a9b02bfc9aeffca6c2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e98520789adb1d5ad05afb4956eca0944a929688"],"e98520789adb1d5ad05afb4956eca0944a929688":["28288370235ed02234a64753cdbf0c6ec096304a"]},"commit2Childs":{"da8b6cfd1b67b932db9907356935046c4d40d033":["97dc2f8d4b90795c74a2f9a9b02bfc9aeffca6c2","727bb765ff2542275f6d31f67be18d7104bae148","28288370235ed02234a64753cdbf0c6ec096304a","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9"],"97dc2f8d4b90795c74a2f9a9b02bfc9aeffca6c2":["28288370235ed02234a64753cdbf0c6ec096304a","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9"],"727bb765ff2542275f6d31f67be18d7104bae148":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["da8b6cfd1b67b932db9907356935046c4d40d033","727bb765ff2542275f6d31f67be18d7104bae148"],"28288370235ed02234a64753cdbf0c6ec096304a":["e98520789adb1d5ad05afb4956eca0944a929688"],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"e98520789adb1d5ad05afb4956eca0944a929688":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["727bb765ff2542275f6d31f67be18d7104bae148","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}