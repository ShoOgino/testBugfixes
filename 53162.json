{"path":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionMessageHandler#processRebalanceLeaders(ZkNodeProps).mjava","commits":[{"id":"e31e6ce5848e5040d4c9ecbb25bc6ccf5d0894ac","date":1438841252,"type":1,"author":"Gregory Chanan","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionMessageHandler#processRebalanceLeaders(ZkNodeProps).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionProcessor#processRebalanceLeaders(ZkNodeProps).mjava","sourceNew":"  @SuppressWarnings(\"unchecked\")\n  private void processRebalanceLeaders(ZkNodeProps message) throws KeeperException, InterruptedException {\n    checkRequired(message, COLLECTION_PROP, SHARD_ID_PROP, CORE_NAME_PROP, ELECTION_NODE_PROP,\n        NODE_NAME_PROP, BASE_URL_PROP, REJOIN_AT_HEAD_PROP);\n\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(COLLECTION_PROP, message.getStr(COLLECTION_PROP));\n    params.set(SHARD_ID_PROP, message.getStr(SHARD_ID_PROP));\n    params.set(REJOIN_AT_HEAD_PROP, message.getStr(REJOIN_AT_HEAD_PROP));\n    params.set(CoreAdminParams.ACTION, CoreAdminAction.REJOINLEADERELECTION.toString());\n    params.set(CORE_NAME_PROP, message.getStr(CORE_NAME_PROP));\n    params.set(NODE_NAME_PROP, message.getStr(NODE_NAME_PROP));\n    params.set(ELECTION_NODE_PROP, message.getStr(ELECTION_NODE_PROP));\n    params.set(BASE_URL_PROP, message.getStr(BASE_URL_PROP));\n\n    String baseUrl = message.getStr(BASE_URL_PROP);\n    ShardRequest sreq = new ShardRequest();\n    sreq.nodeName = message.getStr(ZkStateReader.CORE_NAME_PROP);\n    // yes, they must use same admin handler path everywhere...\n    params.set(\"qt\", adminPath);\n    sreq.purpose = ShardRequest.PURPOSE_PRIVATE;\n    sreq.shards = new String[] {baseUrl};\n    sreq.actualShards = sreq.shards;\n    sreq.params = params;\n    ShardHandler shardHandler = shardHandlerFactory.getShardHandler();\n    shardHandler.submit(sreq, baseUrl, sreq.params);\n  }\n\n","sourceOld":"  @SuppressWarnings(\"unchecked\")\n  private void processRebalanceLeaders(ZkNodeProps message) throws KeeperException, InterruptedException {\n    checkRequired(message, COLLECTION_PROP, SHARD_ID_PROP, CORE_NAME_PROP, ELECTION_NODE_PROP,\n        NODE_NAME_PROP, BASE_URL_PROP, REJOIN_AT_HEAD_PROP);\n\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(COLLECTION_PROP, message.getStr(COLLECTION_PROP));\n    params.set(SHARD_ID_PROP, message.getStr(SHARD_ID_PROP));\n    params.set(REJOIN_AT_HEAD_PROP, message.getStr(REJOIN_AT_HEAD_PROP));\n    params.set(CoreAdminParams.ACTION, CoreAdminAction.REJOINLEADERELECTION.toString());\n    params.set(CORE_NAME_PROP, message.getStr(CORE_NAME_PROP));\n    params.set(NODE_NAME_PROP, message.getStr(NODE_NAME_PROP));\n    params.set(ELECTION_NODE_PROP, message.getStr(ELECTION_NODE_PROP));\n    params.set(BASE_URL_PROP, message.getStr(BASE_URL_PROP));\n\n    String baseUrl = message.getStr(BASE_URL_PROP);\n    ShardRequest sreq = new ShardRequest();\n    sreq.nodeName = message.getStr(ZkStateReader.CORE_NAME_PROP);\n    // yes, they must use same admin handler path everywhere...\n    params.set(\"qt\", adminPath);\n    sreq.purpose = ShardRequest.PURPOSE_PRIVATE;\n    sreq.shards = new String[] {baseUrl};\n    sreq.actualShards = sreq.shards;\n    sreq.params = params;\n    ShardHandler shardHandler = shardHandlerFactory.getShardHandler();\n    shardHandler.submit(sreq, baseUrl, sreq.params);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6b18ef9cd3f6ff4f7733e6d43eebec259e0e9064","date":1441124018,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionMessageHandler#processRebalanceLeaders(ZkNodeProps).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionMessageHandler#processRebalanceLeaders(ZkNodeProps).mjava","sourceNew":"  @SuppressWarnings(\"unchecked\")\n  private void processRebalanceLeaders(ZkNodeProps message) throws KeeperException, InterruptedException {\n    checkRequired(message, COLLECTION_PROP, SHARD_ID_PROP, CORE_NAME_PROP, ELECTION_NODE_PROP,\n        CORE_NODE_NAME_PROP, BASE_URL_PROP, REJOIN_AT_HEAD_PROP);\n\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(COLLECTION_PROP, message.getStr(COLLECTION_PROP));\n    params.set(SHARD_ID_PROP, message.getStr(SHARD_ID_PROP));\n    params.set(REJOIN_AT_HEAD_PROP, message.getStr(REJOIN_AT_HEAD_PROP));\n    params.set(CoreAdminParams.ACTION, CoreAdminAction.REJOINLEADERELECTION.toString());\n    params.set(CORE_NAME_PROP, message.getStr(CORE_NAME_PROP));\n    params.set(CORE_NODE_NAME_PROP, message.getStr(CORE_NODE_NAME_PROP));\n    params.set(ELECTION_NODE_PROP, message.getStr(ELECTION_NODE_PROP));\n    params.set(BASE_URL_PROP, message.getStr(BASE_URL_PROP));\n\n    String baseUrl = message.getStr(BASE_URL_PROP);\n    ShardRequest sreq = new ShardRequest();\n    sreq.nodeName = message.getStr(ZkStateReader.CORE_NAME_PROP);\n    // yes, they must use same admin handler path everywhere...\n    params.set(\"qt\", adminPath);\n    sreq.purpose = ShardRequest.PURPOSE_PRIVATE;\n    sreq.shards = new String[] {baseUrl};\n    sreq.actualShards = sreq.shards;\n    sreq.params = params;\n    ShardHandler shardHandler = shardHandlerFactory.getShardHandler();\n    shardHandler.submit(sreq, baseUrl, sreq.params);\n  }\n\n","sourceOld":"  @SuppressWarnings(\"unchecked\")\n  private void processRebalanceLeaders(ZkNodeProps message) throws KeeperException, InterruptedException {\n    checkRequired(message, COLLECTION_PROP, SHARD_ID_PROP, CORE_NAME_PROP, ELECTION_NODE_PROP,\n        NODE_NAME_PROP, BASE_URL_PROP, REJOIN_AT_HEAD_PROP);\n\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(COLLECTION_PROP, message.getStr(COLLECTION_PROP));\n    params.set(SHARD_ID_PROP, message.getStr(SHARD_ID_PROP));\n    params.set(REJOIN_AT_HEAD_PROP, message.getStr(REJOIN_AT_HEAD_PROP));\n    params.set(CoreAdminParams.ACTION, CoreAdminAction.REJOINLEADERELECTION.toString());\n    params.set(CORE_NAME_PROP, message.getStr(CORE_NAME_PROP));\n    params.set(NODE_NAME_PROP, message.getStr(NODE_NAME_PROP));\n    params.set(ELECTION_NODE_PROP, message.getStr(ELECTION_NODE_PROP));\n    params.set(BASE_URL_PROP, message.getStr(BASE_URL_PROP));\n\n    String baseUrl = message.getStr(BASE_URL_PROP);\n    ShardRequest sreq = new ShardRequest();\n    sreq.nodeName = message.getStr(ZkStateReader.CORE_NAME_PROP);\n    // yes, they must use same admin handler path everywhere...\n    params.set(\"qt\", adminPath);\n    sreq.purpose = ShardRequest.PURPOSE_PRIVATE;\n    sreq.shards = new String[] {baseUrl};\n    sreq.actualShards = sreq.shards;\n    sreq.params = params;\n    ShardHandler shardHandler = shardHandlerFactory.getShardHandler();\n    shardHandler.submit(sreq, baseUrl, sreq.params);\n  }\n\n","bugFix":["4e6b620c271c84c0f14919eec7b90083b292ee51"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"66e0b82bd39567aa2bf534e5282d05fb4a4a2c76","date":1471585465,"type":5,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionMessageHandler#processRebalanceLeaders(ClusterState,ZkNodeProps,NamedList).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionMessageHandler#processRebalanceLeaders(ZkNodeProps).mjava","sourceNew":"  @SuppressWarnings(\"unchecked\")\n  private void processRebalanceLeaders(ClusterState clusterState, ZkNodeProps message, NamedList results)\n      throws Exception {\n    checkRequired(message, COLLECTION_PROP, SHARD_ID_PROP, CORE_NAME_PROP, ELECTION_NODE_PROP,\n        CORE_NODE_NAME_PROP, BASE_URL_PROP, REJOIN_AT_HEAD_PROP);\n\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(COLLECTION_PROP, message.getStr(COLLECTION_PROP));\n    params.set(SHARD_ID_PROP, message.getStr(SHARD_ID_PROP));\n    params.set(REJOIN_AT_HEAD_PROP, message.getStr(REJOIN_AT_HEAD_PROP));\n    params.set(CoreAdminParams.ACTION, CoreAdminAction.REJOINLEADERELECTION.toString());\n    params.set(CORE_NAME_PROP, message.getStr(CORE_NAME_PROP));\n    params.set(CORE_NODE_NAME_PROP, message.getStr(CORE_NODE_NAME_PROP));\n    params.set(ELECTION_NODE_PROP, message.getStr(ELECTION_NODE_PROP));\n    params.set(BASE_URL_PROP, message.getStr(BASE_URL_PROP));\n\n    String baseUrl = message.getStr(BASE_URL_PROP);\n    ShardRequest sreq = new ShardRequest();\n    sreq.nodeName = message.getStr(ZkStateReader.CORE_NAME_PROP);\n    // yes, they must use same admin handler path everywhere...\n    params.set(\"qt\", adminPath);\n    sreq.purpose = ShardRequest.PURPOSE_PRIVATE;\n    sreq.shards = new String[] {baseUrl};\n    sreq.actualShards = sreq.shards;\n    sreq.params = params;\n    ShardHandler shardHandler = shardHandlerFactory.getShardHandler();\n    shardHandler.submit(sreq, baseUrl, sreq.params);\n  }\n\n","sourceOld":"  @SuppressWarnings(\"unchecked\")\n  private void processRebalanceLeaders(ZkNodeProps message) throws KeeperException, InterruptedException {\n    checkRequired(message, COLLECTION_PROP, SHARD_ID_PROP, CORE_NAME_PROP, ELECTION_NODE_PROP,\n        CORE_NODE_NAME_PROP, BASE_URL_PROP, REJOIN_AT_HEAD_PROP);\n\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(COLLECTION_PROP, message.getStr(COLLECTION_PROP));\n    params.set(SHARD_ID_PROP, message.getStr(SHARD_ID_PROP));\n    params.set(REJOIN_AT_HEAD_PROP, message.getStr(REJOIN_AT_HEAD_PROP));\n    params.set(CoreAdminParams.ACTION, CoreAdminAction.REJOINLEADERELECTION.toString());\n    params.set(CORE_NAME_PROP, message.getStr(CORE_NAME_PROP));\n    params.set(CORE_NODE_NAME_PROP, message.getStr(CORE_NODE_NAME_PROP));\n    params.set(ELECTION_NODE_PROP, message.getStr(ELECTION_NODE_PROP));\n    params.set(BASE_URL_PROP, message.getStr(BASE_URL_PROP));\n\n    String baseUrl = message.getStr(BASE_URL_PROP);\n    ShardRequest sreq = new ShardRequest();\n    sreq.nodeName = message.getStr(ZkStateReader.CORE_NAME_PROP);\n    // yes, they must use same admin handler path everywhere...\n    params.set(\"qt\", adminPath);\n    sreq.purpose = ShardRequest.PURPOSE_PRIVATE;\n    sreq.shards = new String[] {baseUrl};\n    sreq.actualShards = sreq.shards;\n    sreq.params = params;\n    ShardHandler shardHandler = shardHandlerFactory.getShardHandler();\n    shardHandler.submit(sreq, baseUrl, sreq.params);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"403d05f7f8d69b65659157eff1bc1d2717f04c66","date":1471692961,"type":5,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionMessageHandler#processRebalanceLeaders(ClusterState,ZkNodeProps,NamedList).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionMessageHandler#processRebalanceLeaders(ZkNodeProps).mjava","sourceNew":"  @SuppressWarnings(\"unchecked\")\n  private void processRebalanceLeaders(ClusterState clusterState, ZkNodeProps message, NamedList results)\n      throws Exception {\n    checkRequired(message, COLLECTION_PROP, SHARD_ID_PROP, CORE_NAME_PROP, ELECTION_NODE_PROP,\n        CORE_NODE_NAME_PROP, BASE_URL_PROP, REJOIN_AT_HEAD_PROP);\n\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(COLLECTION_PROP, message.getStr(COLLECTION_PROP));\n    params.set(SHARD_ID_PROP, message.getStr(SHARD_ID_PROP));\n    params.set(REJOIN_AT_HEAD_PROP, message.getStr(REJOIN_AT_HEAD_PROP));\n    params.set(CoreAdminParams.ACTION, CoreAdminAction.REJOINLEADERELECTION.toString());\n    params.set(CORE_NAME_PROP, message.getStr(CORE_NAME_PROP));\n    params.set(CORE_NODE_NAME_PROP, message.getStr(CORE_NODE_NAME_PROP));\n    params.set(ELECTION_NODE_PROP, message.getStr(ELECTION_NODE_PROP));\n    params.set(BASE_URL_PROP, message.getStr(BASE_URL_PROP));\n\n    String baseUrl = message.getStr(BASE_URL_PROP);\n    ShardRequest sreq = new ShardRequest();\n    sreq.nodeName = message.getStr(ZkStateReader.CORE_NAME_PROP);\n    // yes, they must use same admin handler path everywhere...\n    params.set(\"qt\", adminPath);\n    sreq.purpose = ShardRequest.PURPOSE_PRIVATE;\n    sreq.shards = new String[] {baseUrl};\n    sreq.actualShards = sreq.shards;\n    sreq.params = params;\n    ShardHandler shardHandler = shardHandlerFactory.getShardHandler();\n    shardHandler.submit(sreq, baseUrl, sreq.params);\n  }\n\n","sourceOld":"  @SuppressWarnings(\"unchecked\")\n  private void processRebalanceLeaders(ZkNodeProps message) throws KeeperException, InterruptedException {\n    checkRequired(message, COLLECTION_PROP, SHARD_ID_PROP, CORE_NAME_PROP, ELECTION_NODE_PROP,\n        CORE_NODE_NAME_PROP, BASE_URL_PROP, REJOIN_AT_HEAD_PROP);\n\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(COLLECTION_PROP, message.getStr(COLLECTION_PROP));\n    params.set(SHARD_ID_PROP, message.getStr(SHARD_ID_PROP));\n    params.set(REJOIN_AT_HEAD_PROP, message.getStr(REJOIN_AT_HEAD_PROP));\n    params.set(CoreAdminParams.ACTION, CoreAdminAction.REJOINLEADERELECTION.toString());\n    params.set(CORE_NAME_PROP, message.getStr(CORE_NAME_PROP));\n    params.set(CORE_NODE_NAME_PROP, message.getStr(CORE_NODE_NAME_PROP));\n    params.set(ELECTION_NODE_PROP, message.getStr(ELECTION_NODE_PROP));\n    params.set(BASE_URL_PROP, message.getStr(BASE_URL_PROP));\n\n    String baseUrl = message.getStr(BASE_URL_PROP);\n    ShardRequest sreq = new ShardRequest();\n    sreq.nodeName = message.getStr(ZkStateReader.CORE_NAME_PROP);\n    // yes, they must use same admin handler path everywhere...\n    params.set(\"qt\", adminPath);\n    sreq.purpose = ShardRequest.PURPOSE_PRIVATE;\n    sreq.shards = new String[] {baseUrl};\n    sreq.actualShards = sreq.shards;\n    sreq.params = params;\n    ShardHandler shardHandler = shardHandlerFactory.getShardHandler();\n    shardHandler.submit(sreq, baseUrl, sreq.params);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":4,"author":"Kevin Risden","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionMessageHandler#processRebalanceLeaders(ZkNodeProps).mjava","sourceNew":null,"sourceOld":"  @SuppressWarnings(\"unchecked\")\n  private void processRebalanceLeaders(ZkNodeProps message) throws KeeperException, InterruptedException {\n    checkRequired(message, COLLECTION_PROP, SHARD_ID_PROP, CORE_NAME_PROP, ELECTION_NODE_PROP,\n        CORE_NODE_NAME_PROP, BASE_URL_PROP, REJOIN_AT_HEAD_PROP);\n\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(COLLECTION_PROP, message.getStr(COLLECTION_PROP));\n    params.set(SHARD_ID_PROP, message.getStr(SHARD_ID_PROP));\n    params.set(REJOIN_AT_HEAD_PROP, message.getStr(REJOIN_AT_HEAD_PROP));\n    params.set(CoreAdminParams.ACTION, CoreAdminAction.REJOINLEADERELECTION.toString());\n    params.set(CORE_NAME_PROP, message.getStr(CORE_NAME_PROP));\n    params.set(CORE_NODE_NAME_PROP, message.getStr(CORE_NODE_NAME_PROP));\n    params.set(ELECTION_NODE_PROP, message.getStr(ELECTION_NODE_PROP));\n    params.set(BASE_URL_PROP, message.getStr(BASE_URL_PROP));\n\n    String baseUrl = message.getStr(BASE_URL_PROP);\n    ShardRequest sreq = new ShardRequest();\n    sreq.nodeName = message.getStr(ZkStateReader.CORE_NAME_PROP);\n    // yes, they must use same admin handler path everywhere...\n    params.set(\"qt\", adminPath);\n    sreq.purpose = ShardRequest.PURPOSE_PRIVATE;\n    sreq.shards = new String[] {baseUrl};\n    sreq.actualShards = sreq.shards;\n    sreq.params = params;\n    ShardHandler shardHandler = shardHandlerFactory.getShardHandler();\n    shardHandler.submit(sreq, baseUrl, sreq.params);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e31e6ce5848e5040d4c9ecbb25bc6ccf5d0894ac":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"403d05f7f8d69b65659157eff1bc1d2717f04c66":["6b18ef9cd3f6ff4f7733e6d43eebec259e0e9064","66e0b82bd39567aa2bf534e5282d05fb4a4a2c76"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"66e0b82bd39567aa2bf534e5282d05fb4a4a2c76":["6b18ef9cd3f6ff4f7733e6d43eebec259e0e9064"],"6b18ef9cd3f6ff4f7733e6d43eebec259e0e9064":["e31e6ce5848e5040d4c9ecbb25bc6ccf5d0894ac"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["6b18ef9cd3f6ff4f7733e6d43eebec259e0e9064","403d05f7f8d69b65659157eff1bc1d2717f04c66"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["403d05f7f8d69b65659157eff1bc1d2717f04c66"]},"commit2Childs":{"e31e6ce5848e5040d4c9ecbb25bc6ccf5d0894ac":["6b18ef9cd3f6ff4f7733e6d43eebec259e0e9064"],"403d05f7f8d69b65659157eff1bc1d2717f04c66":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e31e6ce5848e5040d4c9ecbb25bc6ccf5d0894ac"],"66e0b82bd39567aa2bf534e5282d05fb4a4a2c76":["403d05f7f8d69b65659157eff1bc1d2717f04c66"],"6b18ef9cd3f6ff4f7733e6d43eebec259e0e9064":["403d05f7f8d69b65659157eff1bc1d2717f04c66","66e0b82bd39567aa2bf534e5282d05fb4a4a2c76","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}