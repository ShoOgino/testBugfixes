{"path":"lucene/core/src/java/org/apache/lucene/index/PointValues.IntersectVisitor#visit(DocIdSetIterator,byte[]).mjava","commits":[{"id":"8a14a9a6131884330f34844dabc1ece206ceaea9","date":1561954503,"type":0,"author":"Ignacio Vera","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/PointValues.IntersectVisitor#visit(DocIdSetIterator,byte[]).mjava","pathOld":"/dev/null","sourceNew":"    /** Similar to {@link IntersectVisitor#visit(int, byte[])} but in this case the packedValue\n     * can have more than one docID associated to it. The provided iterator should not escape the\n     * scope of this method so that implementations of PointValues are free to reuse it,*/\n    default void visit(DocIdSetIterator iterator, byte[] packedValue) throws IOException {\n      int docID;\n      while ((docID = iterator.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n        visit(docID, packedValue);\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8a14a9a6131884330f34844dabc1ece206ceaea9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8a14a9a6131884330f34844dabc1ece206ceaea9"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8a14a9a6131884330f34844dabc1ece206ceaea9"],"8a14a9a6131884330f34844dabc1ece206ceaea9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}