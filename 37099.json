{"path":"lucene/core/src/java/org/apache/lucene/util/IOUtils#deleteFilesIfExist(Iterable[#-extends-Path]).mjava","commits":[{"id":"f4abec28b874149a7223e32cc7a01704c27790de","date":1410644789,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/IOUtils#deleteFilesIfExist(Iterable[#-extends-Path]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/IOUtils#deleteFilesIfExist(Iterable[#-extends-File]).mjava","sourceNew":"  /**\n   * Deletes all given <tt>Path</tt>s, if they exist.  Some of the\n   * <tt>File</tt>s may be null; they are\n   * ignored.  After everything is deleted, the method either\n   * throws the first exception it hit while deleting, or\n   * completes normally if there were no exceptions.\n   * \n   * @param files files to delete\n   */\n  public static void deleteFilesIfExist(Iterable<? extends Path> files) throws IOException {\n    Throwable th = null;\n\n    for (Path file : files) {\n      try {\n        if (file != null) {\n          Files.deleteIfExists(file);\n        }\n      } catch (Throwable t) {\n        addSuppressed(th, t);\n        if (th == null) {\n          th = t;\n        }\n      }\n    }\n\n    reThrow(th);\n  }\n\n","sourceOld":"  /**\n   * Deletes all given <tt>File</tt>s, if they exist.  Some of the\n   * <tt>File</tt>s may be null; they are\n   * ignored.  After everything is deleted, the method either\n   * throws the first exception it hit while deleting, or\n   * completes normally if there were no exceptions.\n   * \n   * @param files files to delete\n   */\n  public static void deleteFilesIfExist(Iterable<? extends File> files) throws IOException {\n    Throwable th = null;\n\n    for (File file : files) {\n      try {\n        if (file != null) {\n          Files.deleteIfExists(file.toPath());\n        }\n      } catch (Throwable t) {\n        addSuppressed(th, t);\n        if (th == null) {\n          th = t;\n        }\n      }\n    }\n\n    reThrow(th);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f1ad1994cbc8b43f9e88736fa981d6cb4deb4006","date":1415321966,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/IOUtils#deleteFilesIfExist(Collection[#-extends-Path]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/IOUtils#deleteFilesIfExist(Iterable[#-extends-Path]).mjava","sourceNew":"  /**\n   * Deletes all given <tt>Path</tt>s, if they exist.  Some of the\n   * <tt>File</tt>s may be null; they are\n   * ignored.  After everything is deleted, the method either\n   * throws the first exception it hit while deleting, or\n   * completes normally if there were no exceptions.\n   * \n   * @param files files to delete\n   */\n  public static void deleteFilesIfExist(Collection<? extends Path> files) throws IOException {\n    Throwable th = null;\n\n    for (Path file : files) {\n      try {\n        if (file != null) {\n          Files.deleteIfExists(file);\n        }\n      } catch (Throwable t) {\n        addSuppressed(th, t);\n        if (th == null) {\n          th = t;\n        }\n      }\n    }\n\n    reThrow(th);\n  }\n\n","sourceOld":"  /**\n   * Deletes all given <tt>Path</tt>s, if they exist.  Some of the\n   * <tt>File</tt>s may be null; they are\n   * ignored.  After everything is deleted, the method either\n   * throws the first exception it hit while deleting, or\n   * completes normally if there were no exceptions.\n   * \n   * @param files files to delete\n   */\n  public static void deleteFilesIfExist(Iterable<? extends Path> files) throws IOException {\n    Throwable th = null;\n\n    for (Path file : files) {\n      try {\n        if (file != null) {\n          Files.deleteIfExists(file);\n        }\n      } catch (Throwable t) {\n        addSuppressed(th, t);\n        if (th == null) {\n          th = t;\n        }\n      }\n    }\n\n    reThrow(th);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f1ad1994cbc8b43f9e88736fa981d6cb4deb4006":["f4abec28b874149a7223e32cc7a01704c27790de"],"f4abec28b874149a7223e32cc7a01704c27790de":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f1ad1994cbc8b43f9e88736fa981d6cb4deb4006"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f4abec28b874149a7223e32cc7a01704c27790de"],"f1ad1994cbc8b43f9e88736fa981d6cb4deb4006":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f4abec28b874149a7223e32cc7a01704c27790de":["f1ad1994cbc8b43f9e88736fa981d6cb4deb4006"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}