{"path":"lucene/core/src/java/org/apache/lucene/util/packed/DirectPackedReader#getInstance(int,int,IndexInput).mjava","commits":[{"id":"d36ccb9a1c11aeb91962e89bda4a2e643c8629b3","date":1401710950,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/packed/DirectPackedReader#getInstance(int,int,IndexInput).mjava","pathOld":"/dev/null","sourceNew":"  static DirectPackedReader getInstance(int bitsPerValue, int valueCount, IndexInput in) {\n    switch(bitsPerValue) {\n      case 1: return new DirectPackedReader1(valueCount, in);\n      case 2: return new DirectPackedReader2(valueCount, in);\n      case 4: return new DirectPackedReader4(valueCount, in);\n      case 8: return new DirectPackedReader8(valueCount, in);\n      case 12: return new DirectPackedReader12(valueCount, in);\n      case 16: return new DirectPackedReader16(valueCount, in);\n      case 20: return new DirectPackedReader20(valueCount, in);\n      case 24: return new DirectPackedReader24(valueCount, in);\n      case 28: return new DirectPackedReader28(valueCount, in);\n      case 32: return new DirectPackedReader32(valueCount, in);\n      case 40: return new DirectPackedReader40(valueCount, in);\n      case 48: return new DirectPackedReader48(valueCount, in);\n      case 56: return new DirectPackedReader56(valueCount, in);\n      case 64: return new DirectPackedReader64(valueCount, in);\n      default: return new DirectPackedReader(bitsPerValue, valueCount, in);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8106bc60c7452250f84c65cdb43ab6b1d8eb1534","date":1401906364,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/util/packed/DirectPackedReader#getInstance(int,int,IndexInput).mjava","sourceNew":null,"sourceOld":"  static DirectPackedReader getInstance(int bitsPerValue, int valueCount, IndexInput in) {\n    switch(bitsPerValue) {\n      case 1: return new DirectPackedReader1(valueCount, in);\n      case 2: return new DirectPackedReader2(valueCount, in);\n      case 4: return new DirectPackedReader4(valueCount, in);\n      case 8: return new DirectPackedReader8(valueCount, in);\n      case 12: return new DirectPackedReader12(valueCount, in);\n      case 16: return new DirectPackedReader16(valueCount, in);\n      case 20: return new DirectPackedReader20(valueCount, in);\n      case 24: return new DirectPackedReader24(valueCount, in);\n      case 28: return new DirectPackedReader28(valueCount, in);\n      case 32: return new DirectPackedReader32(valueCount, in);\n      case 40: return new DirectPackedReader40(valueCount, in);\n      case 48: return new DirectPackedReader48(valueCount, in);\n      case 56: return new DirectPackedReader56(valueCount, in);\n      case 64: return new DirectPackedReader64(valueCount, in);\n      default: return new DirectPackedReader(bitsPerValue, valueCount, in);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d36ccb9a1c11aeb91962e89bda4a2e643c8629b3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8106bc60c7452250f84c65cdb43ab6b1d8eb1534":["d36ccb9a1c11aeb91962e89bda4a2e643c8629b3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8106bc60c7452250f84c65cdb43ab6b1d8eb1534"]},"commit2Childs":{"d36ccb9a1c11aeb91962e89bda4a2e643c8629b3":["8106bc60c7452250f84c65cdb43ab6b1d8eb1534"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d36ccb9a1c11aeb91962e89bda4a2e643c8629b3"],"8106bc60c7452250f84c65cdb43ab6b1d8eb1534":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}