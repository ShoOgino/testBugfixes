{"path":"lucene/test-framework/src/java/org/apache/lucene/mockfile/VerboseFS#newByteChannel(Path,Set[#-extends-OpenOption],FileAttribute[#]...).mjava","commits":[{"id":"7cefb6c0aa217f293070c43e7a77682dd56e0a33","date":1416928878,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/mockfile/VerboseFS#newByteChannel(Path,Set[#-extends-OpenOption],FileAttribute[#]...).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public SeekableByteChannel newByteChannel(Path path, Set<? extends OpenOption> options, FileAttribute<?>... attrs) throws IOException {\n    Throwable exception = null;\n    try {\n      return super.newByteChannel(path, options, attrs);\n    } catch (Throwable t) {\n      exception = t;\n    } finally {\n      if (containsDestructive(options)) {\n        sop(\"newByteChannel\" + options + \": \" + path(path), exception);\n      }\n    }\n    throw new AssertionError();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6fe295c5f3f33764580ef58b31ba1fba716f2a28","date":1417512082,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/mockfile/VerboseFS#newByteChannel(Path,Set[#-extends-OpenOption],FileAttribute[#]...).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/mockfile/VerboseFS#newByteChannel(Path,Set[#-extends-OpenOption],FileAttribute[#]...).mjava","sourceNew":"  @Override\n  public SeekableByteChannel newByteChannel(Path path, Set<? extends OpenOption> options, FileAttribute<?>... attrs) throws IOException {\n    Throwable exception = null;\n    try {\n      return super.newByteChannel(path, options, attrs);\n    } catch (Throwable t) {\n      exception = t;\n    } finally {\n      if (containsDestructive(options)) {\n        sop(\"newByteChannel\" + options + \": \" + path(path), exception);\n      } else {\n        IOUtils.reThrow(exception);\n      }\n    }\n    throw new AssertionError();\n  }\n\n","sourceOld":"  @Override\n  public SeekableByteChannel newByteChannel(Path path, Set<? extends OpenOption> options, FileAttribute<?>... attrs) throws IOException {\n    Throwable exception = null;\n    try {\n      return super.newByteChannel(path, options, attrs);\n    } catch (Throwable t) {\n      exception = t;\n    } finally {\n      if (containsDestructive(options)) {\n        sop(\"newByteChannel\" + options + \": \" + path(path), exception);\n      }\n    }\n    throw new AssertionError();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"97fc96e6cc460e0ec1fb904a9c7ecd80680780c2","date":1493374641,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/mockfile/VerboseFS#newByteChannel(Path,Set[#-extends-OpenOption],FileAttribute[#]...).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/mockfile/VerboseFS#newByteChannel(Path,Set[#-extends-OpenOption],FileAttribute[#]...).mjava","sourceNew":"  @Override\n  public SeekableByteChannel newByteChannel(Path path, Set<? extends OpenOption> options, FileAttribute<?>... attrs) throws IOException {\n    Throwable exception = null;\n    try {\n      return super.newByteChannel(path, options, attrs);\n    } catch (Throwable t) {\n      exception = t;\n    } finally {\n      if (containsDestructive(options)) {\n        sop(\"newByteChannel\" + options + \": \" + path(path), exception);\n      } else {\n        if (exception != null) {\n          throw IOUtils.rethrowAlways(exception);\n        }\n      }\n    }\n    throw new AssertionError();\n  }\n\n","sourceOld":"  @Override\n  public SeekableByteChannel newByteChannel(Path path, Set<? extends OpenOption> options, FileAttribute<?>... attrs) throws IOException {\n    Throwable exception = null;\n    try {\n      return super.newByteChannel(path, options, attrs);\n    } catch (Throwable t) {\n      exception = t;\n    } finally {\n      if (containsDestructive(options)) {\n        sop(\"newByteChannel\" + options + \": \" + path(path), exception);\n      } else {\n        IOUtils.reThrow(exception);\n      }\n    }\n    throw new AssertionError();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/mockfile/VerboseFS#newByteChannel(Path,Set[#-extends-OpenOption],FileAttribute[#]...).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/mockfile/VerboseFS#newByteChannel(Path,Set[#-extends-OpenOption],FileAttribute[#]...).mjava","sourceNew":"  @Override\n  public SeekableByteChannel newByteChannel(Path path, Set<? extends OpenOption> options, FileAttribute<?>... attrs) throws IOException {\n    Throwable exception = null;\n    try {\n      return super.newByteChannel(path, options, attrs);\n    } catch (Throwable t) {\n      exception = t;\n    } finally {\n      if (containsDestructive(options)) {\n        sop(\"newByteChannel\" + options + \": \" + path(path), exception);\n      } else {\n        if (exception != null) {\n          throw IOUtils.rethrowAlways(exception);\n        }\n      }\n    }\n    throw new AssertionError();\n  }\n\n","sourceOld":"  @Override\n  public SeekableByteChannel newByteChannel(Path path, Set<? extends OpenOption> options, FileAttribute<?>... attrs) throws IOException {\n    Throwable exception = null;\n    try {\n      return super.newByteChannel(path, options, attrs);\n    } catch (Throwable t) {\n      exception = t;\n    } finally {\n      if (containsDestructive(options)) {\n        sop(\"newByteChannel\" + options + \": \" + path(path), exception);\n      } else {\n        IOUtils.reThrow(exception);\n      }\n    }\n    throw new AssertionError();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e9017cf144952056066919f1ebc7897ff9bd71b1":["6fe295c5f3f33764580ef58b31ba1fba716f2a28","97fc96e6cc460e0ec1fb904a9c7ecd80680780c2"],"97fc96e6cc460e0ec1fb904a9c7ecd80680780c2":["6fe295c5f3f33764580ef58b31ba1fba716f2a28"],"6fe295c5f3f33764580ef58b31ba1fba716f2a28":["7cefb6c0aa217f293070c43e7a77682dd56e0a33"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7cefb6c0aa217f293070c43e7a77682dd56e0a33":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["97fc96e6cc460e0ec1fb904a9c7ecd80680780c2"]},"commit2Childs":{"e9017cf144952056066919f1ebc7897ff9bd71b1":[],"97fc96e6cc460e0ec1fb904a9c7ecd80680780c2":["e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"6fe295c5f3f33764580ef58b31ba1fba716f2a28":["e9017cf144952056066919f1ebc7897ff9bd71b1","97fc96e6cc460e0ec1fb904a9c7ecd80680780c2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7cefb6c0aa217f293070c43e7a77682dd56e0a33"],"7cefb6c0aa217f293070c43e7a77682dd56e0a33":["6fe295c5f3f33764580ef58b31ba1fba716f2a28"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}