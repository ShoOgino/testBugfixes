{"path":"backwards/src/test/org/apache/lucene/analysis/TestToken#testTermBufferEquals().mjava","commits":[{"id":"480d01e5b0ef8efb136d51670fec297ae5ae2c9c","date":1268821447,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"backwards/src/test/org/apache/lucene/analysis/TestToken#testTermBufferEquals().mjava","pathOld":"/dev/null","sourceNew":"  public void testTermBufferEquals() throws Exception {\n    Token t1a = new Token();\n    char[] content1a = \"hello\".toCharArray();\n    t1a.setTermBuffer(content1a, 0, 5);\n    Token t1b = new Token();\n    char[] content1b = \"hello\".toCharArray();\n    t1b.setTermBuffer(content1b, 0, 5);\n    Token t2 = new Token();\n    char[] content2 = \"hello2\".toCharArray();\n    t2.setTermBuffer(content2, 0, 6);\n    assertTrue(t1a.equals(t1b));\n    assertFalse(t1a.equals(t2));\n    assertFalse(t2.equals(t1b));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/test/org/apache/lucene/analysis/TestToken#testTermBufferEquals().mjava","pathOld":"backwards/src/test/org/apache/lucene/analysis/TestToken#testTermBufferEquals().mjava","sourceNew":"  public void testTermBufferEquals() throws Exception {\n    Token t1a = new Token();\n    char[] content1a = \"hello\".toCharArray();\n    t1a.setTermBuffer(content1a, 0, 5);\n    Token t1b = new Token();\n    char[] content1b = \"hello\".toCharArray();\n    t1b.setTermBuffer(content1b, 0, 5);\n    Token t2 = new Token();\n    char[] content2 = \"hello2\".toCharArray();\n    t2.setTermBuffer(content2, 0, 6);\n    assertTrue(t1a.equals(t1b));\n    assertFalse(t1a.equals(t2));\n    assertFalse(t2.equals(t1b));\n  }\n\n","sourceOld":"  public void testTermBufferEquals() throws Exception {\n    Token t1a = new Token();\n    char[] content1a = \"hello\".toCharArray();\n    t1a.setTermBuffer(content1a, 0, 5);\n    Token t1b = new Token();\n    char[] content1b = \"hello\".toCharArray();\n    t1b.setTermBuffer(content1b, 0, 5);\n    Token t2 = new Token();\n    char[] content2 = \"hello2\".toCharArray();\n    t2.setTermBuffer(content2, 0, 6);\n    assertTrue(t1a.equals(t1b));\n    assertFalse(t1a.equals(t2));\n    assertFalse(t2.equals(t1b));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":6,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/analysis/TestToken#testTermBufferEquals().mjava","pathOld":"backwards/src/test/org/apache/lucene/analysis/TestToken#testTermBufferEquals().mjava","sourceNew":"  public void testTermBufferEquals() throws Exception {\n    Token t1a = new Token();\n    char[] content1a = \"hello\".toCharArray();\n    t1a.setTermBuffer(content1a, 0, 5);\n    Token t1b = new Token();\n    char[] content1b = \"hello\".toCharArray();\n    t1b.setTermBuffer(content1b, 0, 5);\n    Token t2 = new Token();\n    char[] content2 = \"hello2\".toCharArray();\n    t2.setTermBuffer(content2, 0, 6);\n    assertTrue(t1a.equals(t1b));\n    assertFalse(t1a.equals(t2));\n    assertFalse(t2.equals(t1b));\n  }\n\n","sourceOld":"  public void testTermBufferEquals() throws Exception {\n    Token t1a = new Token();\n    char[] content1a = \"hello\".toCharArray();\n    t1a.setTermBuffer(content1a, 0, 5);\n    Token t1b = new Token();\n    char[] content1b = \"hello\".toCharArray();\n    t1b.setTermBuffer(content1b, 0, 5);\n    Token t2 = new Token();\n    char[] content2 = \"hello2\".toCharArray();\n    t2.setTermBuffer(content2, 0, 6);\n    assertTrue(t1a.equals(t1b));\n    assertFalse(t1a.equals(t2));\n    assertFalse(t2.equals(t1b));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"]},"commit2Childs":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}