{"path":"lucene/analysis/common/src/test/org/apache/lucene/analysis/pt/TestPortugueseMinimalStemFilter#testKeyword().mjava","commits":[{"id":"5f81794c8dc3a3569f03abb41c8bf1ac25efc499","date":1342409686,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/pt/TestPortugueseMinimalStemFilter#testKeyword().mjava","pathOld":"/dev/null","sourceNew":"  public void testKeyword() throws IOException {\n    final CharArraySet exclusionSet = new CharArraySet(TEST_VERSION_CURRENT, asSet(\"quilométricas\"), false);\n    Analyzer a = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName, Reader reader) {\n        Tokenizer source = new MockTokenizer(reader, MockTokenizer.WHITESPACE, false);\n        TokenStream sink = new KeywordMarkerFilter(source, exclusionSet);\n        return new TokenStreamComponents(source, new PortugueseMinimalStemFilter(sink));\n      }\n    };\n    checkOneTerm(a, \"quilométricas\", \"quilométricas\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/pt/TestPortugueseMinimalStemFilter#testKeyword().mjava","pathOld":"/dev/null","sourceNew":"  public void testKeyword() throws IOException {\n    final CharArraySet exclusionSet = new CharArraySet(TEST_VERSION_CURRENT, asSet(\"quilométricas\"), false);\n    Analyzer a = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName, Reader reader) {\n        Tokenizer source = new MockTokenizer(reader, MockTokenizer.WHITESPACE, false);\n        TokenStream sink = new KeywordMarkerFilter(source, exclusionSet);\n        return new TokenStreamComponents(source, new PortugueseMinimalStemFilter(sink));\n      }\n    };\n    checkOneTerm(a, \"quilométricas\", \"quilométricas\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aba371508186796cc6151d8223a5b4e16d02e26e","date":1343474871,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/pt/TestPortugueseMinimalStemFilter#testKeyword().mjava","pathOld":"/dev/null","sourceNew":"  public void testKeyword() throws IOException {\n    final CharArraySet exclusionSet = new CharArraySet(TEST_VERSION_CURRENT, asSet(\"quilométricas\"), false);\n    Analyzer a = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName, Reader reader) {\n        Tokenizer source = new MockTokenizer(reader, MockTokenizer.WHITESPACE, false);\n        TokenStream sink = new KeywordMarkerFilter(source, exclusionSet);\n        return new TokenStreamComponents(source, new PortugueseMinimalStemFilter(sink));\n      }\n    };\n    checkOneTerm(a, \"quilométricas\", \"quilométricas\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a32c7218952a3082e8be4be1a325fd217603f365","date":1363034315,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/pt/TestPortugueseMinimalStemFilter#testKeyword().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/pt/TestPortugueseMinimalStemFilter#testKeyword().mjava","sourceNew":"  public void testKeyword() throws IOException {\n    final CharArraySet exclusionSet = new CharArraySet(TEST_VERSION_CURRENT, asSet(\"quilométricas\"), false);\n    Analyzer a = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName, Reader reader) {\n        Tokenizer source = new MockTokenizer(reader, MockTokenizer.WHITESPACE, false);\n        TokenStream sink = new SetKeywordMarkerFilter(source, exclusionSet);\n        return new TokenStreamComponents(source, new PortugueseMinimalStemFilter(sink));\n      }\n    };\n    checkOneTerm(a, \"quilométricas\", \"quilométricas\");\n  }\n\n","sourceOld":"  public void testKeyword() throws IOException {\n    final CharArraySet exclusionSet = new CharArraySet(TEST_VERSION_CURRENT, asSet(\"quilométricas\"), false);\n    Analyzer a = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName, Reader reader) {\n        Tokenizer source = new MockTokenizer(reader, MockTokenizer.WHITESPACE, false);\n        TokenStream sink = new KeywordMarkerFilter(source, exclusionSet);\n        return new TokenStreamComponents(source, new PortugueseMinimalStemFilter(sink));\n      }\n    };\n    checkOneTerm(a, \"quilométricas\", \"quilométricas\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae889fd5c8a69f6b5d130d3c895bfa5b04d07338","date":1389274049,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/pt/TestPortugueseMinimalStemFilter#testKeyword().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/pt/TestPortugueseMinimalStemFilter#testKeyword().mjava","sourceNew":"  public void testKeyword() throws IOException {\n    final CharArraySet exclusionSet = new CharArraySet(TEST_VERSION_CURRENT, asSet(\"quilométricas\"), false);\n    Analyzer a = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName) {\n        Tokenizer source = new MockTokenizer(MockTokenizer.WHITESPACE, false);\n        TokenStream sink = new SetKeywordMarkerFilter(source, exclusionSet);\n        return new TokenStreamComponents(source, new PortugueseMinimalStemFilter(sink));\n      }\n    };\n    checkOneTerm(a, \"quilométricas\", \"quilométricas\");\n  }\n\n","sourceOld":"  public void testKeyword() throws IOException {\n    final CharArraySet exclusionSet = new CharArraySet(TEST_VERSION_CURRENT, asSet(\"quilométricas\"), false);\n    Analyzer a = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName, Reader reader) {\n        Tokenizer source = new MockTokenizer(reader, MockTokenizer.WHITESPACE, false);\n        TokenStream sink = new SetKeywordMarkerFilter(source, exclusionSet);\n        return new TokenStreamComponents(source, new PortugueseMinimalStemFilter(sink));\n      }\n    };\n    checkOneTerm(a, \"quilométricas\", \"quilométricas\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ff4227bb146f97aabae888091c19e48c88dbb0db","date":1406758576,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/pt/TestPortugueseMinimalStemFilter#testKeyword().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/pt/TestPortugueseMinimalStemFilter#testKeyword().mjava","sourceNew":"  public void testKeyword() throws IOException {\n    final CharArraySet exclusionSet = new CharArraySet( asSet(\"quilométricas\"), false);\n    Analyzer a = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName) {\n        Tokenizer source = new MockTokenizer(MockTokenizer.WHITESPACE, false);\n        TokenStream sink = new SetKeywordMarkerFilter(source, exclusionSet);\n        return new TokenStreamComponents(source, new PortugueseMinimalStemFilter(sink));\n      }\n    };\n    checkOneTerm(a, \"quilométricas\", \"quilométricas\");\n  }\n\n","sourceOld":"  public void testKeyword() throws IOException {\n    final CharArraySet exclusionSet = new CharArraySet(TEST_VERSION_CURRENT, asSet(\"quilométricas\"), false);\n    Analyzer a = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName) {\n        Tokenizer source = new MockTokenizer(MockTokenizer.WHITESPACE, false);\n        TokenStream sink = new SetKeywordMarkerFilter(source, exclusionSet);\n        return new TokenStreamComponents(source, new PortugueseMinimalStemFilter(sink));\n      }\n    };\n    checkOneTerm(a, \"quilométricas\", \"quilométricas\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5cdab62f058ea765dd33deb05b4f19b7d626c801","date":1406803479,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/pt/TestPortugueseMinimalStemFilter#testKeyword().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/pt/TestPortugueseMinimalStemFilter#testKeyword().mjava","sourceNew":"  public void testKeyword() throws IOException {\n    final CharArraySet exclusionSet = new CharArraySet(TEST_VERSION_CURRENT, asSet(\"quilométricas\"), false);\n    Analyzer a = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName) {\n        Tokenizer source = new MockTokenizer(MockTokenizer.WHITESPACE, false);\n        TokenStream sink = new SetKeywordMarkerFilter(source, exclusionSet);\n        return new TokenStreamComponents(source, new PortugueseMinimalStemFilter(sink));\n      }\n    };\n    checkOneTerm(a, \"quilométricas\", \"quilométricas\");\n  }\n\n","sourceOld":"  public void testKeyword() throws IOException {\n    final CharArraySet exclusionSet = new CharArraySet( asSet(\"quilométricas\"), false);\n    Analyzer a = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName) {\n        Tokenizer source = new MockTokenizer(MockTokenizer.WHITESPACE, false);\n        TokenStream sink = new SetKeywordMarkerFilter(source, exclusionSet);\n        return new TokenStreamComponents(source, new PortugueseMinimalStemFilter(sink));\n      }\n    };\n    checkOneTerm(a, \"quilométricas\", \"quilométricas\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"379db3ad24c4f0214f30a122265a6d6be003a99d","date":1407537768,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/pt/TestPortugueseMinimalStemFilter#testKeyword().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/pt/TestPortugueseMinimalStemFilter#testKeyword().mjava","sourceNew":"  public void testKeyword() throws IOException {\n    final CharArraySet exclusionSet = new CharArraySet( asSet(\"quilométricas\"), false);\n    Analyzer a = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName) {\n        Tokenizer source = new MockTokenizer(MockTokenizer.WHITESPACE, false);\n        TokenStream sink = new SetKeywordMarkerFilter(source, exclusionSet);\n        return new TokenStreamComponents(source, new PortugueseMinimalStemFilter(sink));\n      }\n    };\n    checkOneTerm(a, \"quilométricas\", \"quilométricas\");\n  }\n\n","sourceOld":"  public void testKeyword() throws IOException {\n    final CharArraySet exclusionSet = new CharArraySet(TEST_VERSION_CURRENT, asSet(\"quilométricas\"), false);\n    Analyzer a = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName) {\n        Tokenizer source = new MockTokenizer(MockTokenizer.WHITESPACE, false);\n        TokenStream sink = new SetKeywordMarkerFilter(source, exclusionSet);\n        return new TokenStreamComponents(source, new PortugueseMinimalStemFilter(sink));\n      }\n    };\n    checkOneTerm(a, \"quilométricas\", \"quilométricas\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a56958d7f71a28824f20031ffbb2e13502a0274e","date":1425573902,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/pt/TestPortugueseMinimalStemFilter#testKeyword().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/pt/TestPortugueseMinimalStemFilter#testKeyword().mjava","sourceNew":"  public void testKeyword() throws IOException {\n    final CharArraySet exclusionSet = new CharArraySet( asSet(\"quilométricas\"), false);\n    Analyzer a = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName) {\n        Tokenizer source = new MockTokenizer(MockTokenizer.WHITESPACE, false);\n        TokenStream sink = new SetKeywordMarkerFilter(source, exclusionSet);\n        return new TokenStreamComponents(source, new PortugueseMinimalStemFilter(sink));\n      }\n    };\n    checkOneTerm(a, \"quilométricas\", \"quilométricas\");\n    a.close();\n  }\n\n","sourceOld":"  public void testKeyword() throws IOException {\n    final CharArraySet exclusionSet = new CharArraySet( asSet(\"quilométricas\"), false);\n    Analyzer a = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName) {\n        Tokenizer source = new MockTokenizer(MockTokenizer.WHITESPACE, false);\n        TokenStream sink = new SetKeywordMarkerFilter(source, exclusionSet);\n        return new TokenStreamComponents(source, new PortugueseMinimalStemFilter(sink));\n      }\n    };\n    checkOneTerm(a, \"quilométricas\", \"quilométricas\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/pt/TestPortugueseMinimalStemFilter#testKeyword().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/pt/TestPortugueseMinimalStemFilter#testKeyword().mjava","sourceNew":"  public void testKeyword() throws IOException {\n    final CharArraySet exclusionSet = new CharArraySet( asSet(\"quilométricas\"), false);\n    Analyzer a = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName) {\n        Tokenizer source = new MockTokenizer(MockTokenizer.WHITESPACE, false);\n        TokenStream sink = new SetKeywordMarkerFilter(source, exclusionSet);\n        return new TokenStreamComponents(source, new PortugueseMinimalStemFilter(sink));\n      }\n    };\n    checkOneTerm(a, \"quilométricas\", \"quilométricas\");\n    a.close();\n  }\n\n","sourceOld":"  public void testKeyword() throws IOException {\n    final CharArraySet exclusionSet = new CharArraySet( asSet(\"quilométricas\"), false);\n    Analyzer a = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName) {\n        Tokenizer source = new MockTokenizer(MockTokenizer.WHITESPACE, false);\n        TokenStream sink = new SetKeywordMarkerFilter(source, exclusionSet);\n        return new TokenStreamComponents(source, new PortugueseMinimalStemFilter(sink));\n      }\n    };\n    checkOneTerm(a, \"quilométricas\", \"quilométricas\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ff4227bb146f97aabae888091c19e48c88dbb0db":["ae889fd5c8a69f6b5d130d3c895bfa5b04d07338"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["379db3ad24c4f0214f30a122265a6d6be003a99d","a56958d7f71a28824f20031ffbb2e13502a0274e"],"aba371508186796cc6151d8223a5b4e16d02e26e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5f81794c8dc3a3569f03abb41c8bf1ac25efc499"],"ae889fd5c8a69f6b5d130d3c895bfa5b04d07338":["a32c7218952a3082e8be4be1a325fd217603f365"],"a32c7218952a3082e8be4be1a325fd217603f365":["5f81794c8dc3a3569f03abb41c8bf1ac25efc499"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5f81794c8dc3a3569f03abb41c8bf1ac25efc499"],"379db3ad24c4f0214f30a122265a6d6be003a99d":["5cdab62f058ea765dd33deb05b4f19b7d626c801"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a56958d7f71a28824f20031ffbb2e13502a0274e":["379db3ad24c4f0214f30a122265a6d6be003a99d"],"5cdab62f058ea765dd33deb05b4f19b7d626c801":["ff4227bb146f97aabae888091c19e48c88dbb0db"],"5f81794c8dc3a3569f03abb41c8bf1ac25efc499":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a56958d7f71a28824f20031ffbb2e13502a0274e"]},"commit2Childs":{"ff4227bb146f97aabae888091c19e48c88dbb0db":["5cdab62f058ea765dd33deb05b4f19b7d626c801"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"aba371508186796cc6151d8223a5b4e16d02e26e":[],"ae889fd5c8a69f6b5d130d3c895bfa5b04d07338":["ff4227bb146f97aabae888091c19e48c88dbb0db"],"a32c7218952a3082e8be4be1a325fd217603f365":["ae889fd5c8a69f6b5d130d3c895bfa5b04d07338"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"379db3ad24c4f0214f30a122265a6d6be003a99d":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","a56958d7f71a28824f20031ffbb2e13502a0274e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["aba371508186796cc6151d8223a5b4e16d02e26e","fe33227f6805edab2036cbb80645cc4e2d1fa424","5f81794c8dc3a3569f03abb41c8bf1ac25efc499"],"a56958d7f71a28824f20031ffbb2e13502a0274e":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5f81794c8dc3a3569f03abb41c8bf1ac25efc499":["aba371508186796cc6151d8223a5b4e16d02e26e","a32c7218952a3082e8be4be1a325fd217603f365","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"5cdab62f058ea765dd33deb05b4f19b7d626c801":["379db3ad24c4f0214f30a122265a6d6be003a99d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","aba371508186796cc6151d8223a5b4e16d02e26e","fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}