{"path":"backwards/src/java/org/apache/lucene/util/AttributeSource#restoreState(State).mjava","commits":[{"id":"480d01e5b0ef8efb136d51670fec297ae5ae2c9c","date":1268821447,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"backwards/src/java/org/apache/lucene/util/AttributeSource#restoreState(State).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Restores this state by copying the values of all attribute implementations\n   * that this state contains into the attributes implementations of the targetStream.\n   * The targetStream must contain a corresponding instance for each argument\n   * contained in this state (e.g. it is not possible to restore the state of\n   * an AttributeSource containing a TermAttribute into a AttributeSource using\n   * a Token instance as implementation).\n   * <p>\n   * Note that this method does not affect attributes of the targetStream\n   * that are not contained in this state. In other words, if for example\n   * the targetStream contains an OffsetAttribute, but this state doesn't, then\n   * the value of the OffsetAttribute remains unchanged. It might be desirable to\n   * reset its value to the default, in which case the caller should first\n   * call {@link TokenStream#clearAttributes()} on the targetStream.   \n   */\n  public void restoreState(State state) {\n    if (state == null)  return;\n    \n    do {\n      AttributeImpl targetImpl = attributeImpls.get(state.attribute.getClass());\n      if (targetImpl == null)\n        throw new IllegalArgumentException(\"State contains an AttributeImpl that is not in this AttributeSource\");\n      state.attribute.copyTo(targetImpl);\n      state = state.next;\n    } while (state != null);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/java/org/apache/lucene/util/AttributeSource#restoreState(State).mjava","pathOld":"backwards/src/java/org/apache/lucene/util/AttributeSource#restoreState(State).mjava","sourceNew":"  /**\n   * Restores this state by copying the values of all attribute implementations\n   * that this state contains into the attributes implementations of the targetStream.\n   * The targetStream must contain a corresponding instance for each argument\n   * contained in this state (e.g. it is not possible to restore the state of\n   * an AttributeSource containing a TermAttribute into a AttributeSource using\n   * a Token instance as implementation).\n   * <p>\n   * Note that this method does not affect attributes of the targetStream\n   * that are not contained in this state. In other words, if for example\n   * the targetStream contains an OffsetAttribute, but this state doesn't, then\n   * the value of the OffsetAttribute remains unchanged. It might be desirable to\n   * reset its value to the default, in which case the caller should first\n   * call {@link TokenStream#clearAttributes()} on the targetStream.   \n   */\n  public void restoreState(State state) {\n    if (state == null)  return;\n    \n    do {\n      AttributeImpl targetImpl = attributeImpls.get(state.attribute.getClass());\n      if (targetImpl == null)\n        throw new IllegalArgumentException(\"State contains an AttributeImpl that is not in this AttributeSource\");\n      state.attribute.copyTo(targetImpl);\n      state = state.next;\n    } while (state != null);\n  }\n\n","sourceOld":"  /**\n   * Restores this state by copying the values of all attribute implementations\n   * that this state contains into the attributes implementations of the targetStream.\n   * The targetStream must contain a corresponding instance for each argument\n   * contained in this state (e.g. it is not possible to restore the state of\n   * an AttributeSource containing a TermAttribute into a AttributeSource using\n   * a Token instance as implementation).\n   * <p>\n   * Note that this method does not affect attributes of the targetStream\n   * that are not contained in this state. In other words, if for example\n   * the targetStream contains an OffsetAttribute, but this state doesn't, then\n   * the value of the OffsetAttribute remains unchanged. It might be desirable to\n   * reset its value to the default, in which case the caller should first\n   * call {@link TokenStream#clearAttributes()} on the targetStream.   \n   */\n  public void restoreState(State state) {\n    if (state == null)  return;\n    \n    do {\n      AttributeImpl targetImpl = attributeImpls.get(state.attribute.getClass());\n      if (targetImpl == null)\n        throw new IllegalArgumentException(\"State contains an AttributeImpl that is not in this AttributeSource\");\n      state.attribute.copyTo(targetImpl);\n      state = state.next;\n    } while (state != null);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"]},"commit2Childs":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}