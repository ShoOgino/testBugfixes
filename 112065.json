{"path":"solr/src/test/org/apache/solr/spelling/SpellCheckCollatorTest#testCollateWithMultipleRequestHandlers().mjava","commits":[{"id":"cdcf766020b9b159d0b3a6ecae90ff1998ded019","date":1286818331,"type":0,"author":"Grant Ingersoll","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/spelling/SpellCheckCollatorTest#testCollateWithMultipleRequestHandlers().mjava","pathOld":"/dev/null","sourceNew":"\t@Test\n\tpublic void testCollateWithMultipleRequestHandlers() throws Exception\n\t{\n\t\tSolrCore core = h.getCore();\n\t\tSearchComponent speller = core.getSearchComponent(\"spellcheck\");\n\t\tassertTrue(\"speller is null and it shouldn't be\", speller != null);\n\t\t\n\t\tModifiableSolrParams params = new ModifiableSolrParams();\t\t\n\t\tparams.add(SpellCheckComponent.COMPONENT_NAME, \"true\");\n\t\tparams.add(SpellCheckComponent.SPELLCHECK_DICT, \"multipleFields\");\n\t\tparams.add(SpellCheckComponent.SPELLCHECK_BUILD, \"true\");\n\t\tparams.add(SpellCheckComponent.SPELLCHECK_COUNT, \"10\");\t\t\n\t\tparams.add(SpellCheckComponent.SPELLCHECK_COLLATE, \"true\");\n\t\tparams.add(SpellCheckComponent.SPELLCHECK_MAX_COLLATION_TRIES, \"1\");\n\t\tparams.add(SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"1\");\n\t\tparams.add(CommonParams.Q, \"peac\");\t\n\t\t\n\t\t//SpellCheckCompRH has no \"qf\" defined.  It will not find \"peace\" from \"peac\" despite it being in the dictionary\n\t\t//because requrying against this Request Handler results in 0 hits.\t\n\t\tSolrRequestHandler handler = core.getRequestHandler(\"spellCheckCompRH\");\n\t\tSolrQueryResponse rsp = new SolrQueryResponse();\n\t\trsp.add(\"responseHeader\", new SimpleOrderedMap());\n\t\thandler.handleRequest(new LocalSolrQueryRequest(core, params), rsp);\n\t\tNamedList values = rsp.getValues();\n\t\tNamedList spellCheck = (NamedList) values.get(\"spellcheck\");\n\t\tNamedList suggestions = (NamedList) spellCheck.get(\"suggestions\");\n\t\tString singleCollation = (String) suggestions.get(\"collation\");\n\t\tassertNull(singleCollation);\n\t\t\n\t\t//SpellCheckCompRH1 has \"lowerfilt1\" defined in the \"qf\" param.  It will find \"peace\" from \"peac\" because\n\t\t//requrying field \"lowerfilt1\" returns the hit.\n\t\tparams.remove(SpellCheckComponent.SPELLCHECK_BUILD);\n\t\thandler = core.getRequestHandler(\"spellCheckCompRH1\");\n\t\trsp = new SolrQueryResponse();\n\t\trsp.add(\"responseHeader\", new SimpleOrderedMap());\n\t\thandler.handleRequest(new LocalSolrQueryRequest(core, params), rsp);\n\t\tvalues = rsp.getValues();\n\t\tspellCheck = (NamedList) values.get(\"spellcheck\");\n\t\tsuggestions = (NamedList) spellCheck.get(\"suggestions\");\n\t\tsingleCollation = (String) suggestions.get(\"collation\");\n\t\tassertEquals(singleCollation, \"peace\");\t\t\n\t}\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"184f5dad988214d0632a44d18f2d9817c4b8bac5","date":1287350684,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/spelling/SpellCheckCollatorTest#testCollateWithMultipleRequestHandlers().mjava","pathOld":"solr/src/test/org/apache/solr/spelling/SpellCheckCollatorTest#testCollateWithMultipleRequestHandlers().mjava","sourceNew":"\t@Test\n\tpublic void testCollateWithMultipleRequestHandlers() throws Exception\n\t{\n\t\tSolrCore core = h.getCore();\n\t\tSearchComponent speller = core.getSearchComponent(\"spellcheck\");\n\t\tassertTrue(\"speller is null and it shouldn't be\", speller != null);\n\t\t\n\t\tModifiableSolrParams params = new ModifiableSolrParams();\t\t\n\t\tparams.add(SpellCheckComponent.COMPONENT_NAME, \"true\");\n\t\tparams.add(SpellCheckComponent.SPELLCHECK_DICT, \"multipleFields\");\n\t\tparams.add(SpellCheckComponent.SPELLCHECK_BUILD, \"true\");\n\t\tparams.add(SpellCheckComponent.SPELLCHECK_COUNT, \"10\");\t\t\n\t\tparams.add(SpellCheckComponent.SPELLCHECK_COLLATE, \"true\");\n\t\tparams.add(SpellCheckComponent.SPELLCHECK_MAX_COLLATION_TRIES, \"1\");\n\t\tparams.add(SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"1\");\n\t\tparams.add(CommonParams.Q, \"peac\");\t\n\t\t\n\t\t//SpellCheckCompRH has no \"qf\" defined.  It will not find \"peace\" from \"peac\" despite it being in the dictionary\n\t\t//because requrying against this Request Handler results in 0 hits.\t\n\t\tSolrRequestHandler handler = core.getRequestHandler(\"spellCheckCompRH\");\n\t\tSolrQueryResponse rsp = new SolrQueryResponse();\n\t\trsp.add(\"responseHeader\", new SimpleOrderedMap());\n\t\tSolrQueryRequest req = new LocalSolrQueryRequest(core, params);\n\t\thandler.handleRequest(req, rsp);\n\t\treq.close();\n\t\tNamedList values = rsp.getValues();\n\t\tNamedList spellCheck = (NamedList) values.get(\"spellcheck\");\n\t\tNamedList suggestions = (NamedList) spellCheck.get(\"suggestions\");\n\t\tString singleCollation = (String) suggestions.get(\"collation\");\n\t\tassertNull(singleCollation);\n\t\t\n\t\t//SpellCheckCompRH1 has \"lowerfilt1\" defined in the \"qf\" param.  It will find \"peace\" from \"peac\" because\n\t\t//requrying field \"lowerfilt1\" returns the hit.\n\t\tparams.remove(SpellCheckComponent.SPELLCHECK_BUILD);\n\t\thandler = core.getRequestHandler(\"spellCheckCompRH1\");\n\t\trsp = new SolrQueryResponse();\n\t\trsp.add(\"responseHeader\", new SimpleOrderedMap());\n\t\treq = new LocalSolrQueryRequest(core, params);\n\t\thandler.handleRequest(req, rsp);\n\t\treq.close();\n\t\tvalues = rsp.getValues();\n\t\tspellCheck = (NamedList) values.get(\"spellcheck\");\n\t\tsuggestions = (NamedList) spellCheck.get(\"suggestions\");\n\t\tsingleCollation = (String) suggestions.get(\"collation\");\n\t\tassertEquals(singleCollation, \"peace\");\t\t\n\t}\n\n","sourceOld":"\t@Test\n\tpublic void testCollateWithMultipleRequestHandlers() throws Exception\n\t{\n\t\tSolrCore core = h.getCore();\n\t\tSearchComponent speller = core.getSearchComponent(\"spellcheck\");\n\t\tassertTrue(\"speller is null and it shouldn't be\", speller != null);\n\t\t\n\t\tModifiableSolrParams params = new ModifiableSolrParams();\t\t\n\t\tparams.add(SpellCheckComponent.COMPONENT_NAME, \"true\");\n\t\tparams.add(SpellCheckComponent.SPELLCHECK_DICT, \"multipleFields\");\n\t\tparams.add(SpellCheckComponent.SPELLCHECK_BUILD, \"true\");\n\t\tparams.add(SpellCheckComponent.SPELLCHECK_COUNT, \"10\");\t\t\n\t\tparams.add(SpellCheckComponent.SPELLCHECK_COLLATE, \"true\");\n\t\tparams.add(SpellCheckComponent.SPELLCHECK_MAX_COLLATION_TRIES, \"1\");\n\t\tparams.add(SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"1\");\n\t\tparams.add(CommonParams.Q, \"peac\");\t\n\t\t\n\t\t//SpellCheckCompRH has no \"qf\" defined.  It will not find \"peace\" from \"peac\" despite it being in the dictionary\n\t\t//because requrying against this Request Handler results in 0 hits.\t\n\t\tSolrRequestHandler handler = core.getRequestHandler(\"spellCheckCompRH\");\n\t\tSolrQueryResponse rsp = new SolrQueryResponse();\n\t\trsp.add(\"responseHeader\", new SimpleOrderedMap());\n\t\thandler.handleRequest(new LocalSolrQueryRequest(core, params), rsp);\n\t\tNamedList values = rsp.getValues();\n\t\tNamedList spellCheck = (NamedList) values.get(\"spellcheck\");\n\t\tNamedList suggestions = (NamedList) spellCheck.get(\"suggestions\");\n\t\tString singleCollation = (String) suggestions.get(\"collation\");\n\t\tassertNull(singleCollation);\n\t\t\n\t\t//SpellCheckCompRH1 has \"lowerfilt1\" defined in the \"qf\" param.  It will find \"peace\" from \"peac\" because\n\t\t//requrying field \"lowerfilt1\" returns the hit.\n\t\tparams.remove(SpellCheckComponent.SPELLCHECK_BUILD);\n\t\thandler = core.getRequestHandler(\"spellCheckCompRH1\");\n\t\trsp = new SolrQueryResponse();\n\t\trsp.add(\"responseHeader\", new SimpleOrderedMap());\n\t\thandler.handleRequest(new LocalSolrQueryRequest(core, params), rsp);\n\t\tvalues = rsp.getValues();\n\t\tspellCheck = (NamedList) values.get(\"spellcheck\");\n\t\tsuggestions = (NamedList) spellCheck.get(\"suggestions\");\n\t\tsingleCollation = (String) suggestions.get(\"collation\");\n\t\tassertEquals(singleCollation, \"peace\");\t\t\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4ecea1664e8617d82eca3b8055a3c37cb4da8511","date":1287578668,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/spelling/SpellCheckCollatorTest#testCollateWithMultipleRequestHandlers().mjava","pathOld":"solr/src/test/org/apache/solr/spelling/SpellCheckCollatorTest#testCollateWithMultipleRequestHandlers().mjava","sourceNew":"\t@Test\n\tpublic void testCollateWithMultipleRequestHandlers() throws Exception\n\t{\n\t\tSolrCore core = h.getCore();\n\t\tSearchComponent speller = core.getSearchComponent(\"spellcheck\");\n\t\tassertTrue(\"speller is null and it shouldn't be\", speller != null);\n\t\t\n\t\tModifiableSolrParams params = new ModifiableSolrParams();\t\t\n\t\tparams.add(SpellCheckComponent.COMPONENT_NAME, \"true\");\n\t\tparams.add(SpellCheckComponent.SPELLCHECK_DICT, \"multipleFields\");\n\t\tparams.add(SpellCheckComponent.SPELLCHECK_BUILD, \"true\");\n\t\tparams.add(SpellCheckComponent.SPELLCHECK_COUNT, \"10\");\t\t\n\t\tparams.add(SpellCheckComponent.SPELLCHECK_COLLATE, \"true\");\n\t\tparams.add(SpellCheckComponent.SPELLCHECK_MAX_COLLATION_TRIES, \"1\");\n\t\tparams.add(SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"1\");\n\t\tparams.add(CommonParams.Q, \"peac\");\t\n\t\t\n\t\t//SpellCheckCompRH has no \"qf\" defined.  It will not find \"peace\" from \"peac\" despite it being in the dictionary\n\t\t//because requrying against this Request Handler results in 0 hits.\t\n\t\tSolrRequestHandler handler = core.getRequestHandler(\"spellCheckCompRH\");\n\t\tSolrQueryResponse rsp = new SolrQueryResponse();\n\t\trsp.add(\"responseHeader\", new SimpleOrderedMap());\n\t\tSolrQueryRequest req = new LocalSolrQueryRequest(core, params);\n\t\thandler.handleRequest(req, rsp);\n\t\treq.close();\n\t\tNamedList values = rsp.getValues();\n\t\tNamedList spellCheck = (NamedList) values.get(\"spellcheck\");\n\t\tNamedList suggestions = (NamedList) spellCheck.get(\"suggestions\");\n\t\tString singleCollation = (String) suggestions.get(\"collation\");\n\t\tassertNull(singleCollation);\n\t\t\n\t\t//SpellCheckCompRH1 has \"lowerfilt1\" defined in the \"qf\" param.  It will find \"peace\" from \"peac\" because\n\t\t//requrying field \"lowerfilt1\" returns the hit.\n\t\tparams.remove(SpellCheckComponent.SPELLCHECK_BUILD);\n\t\thandler = core.getRequestHandler(\"spellCheckCompRH1\");\n\t\trsp = new SolrQueryResponse();\n\t\trsp.add(\"responseHeader\", new SimpleOrderedMap());\n\t\treq = new LocalSolrQueryRequest(core, params);\n\t\thandler.handleRequest(req, rsp);\n\t\treq.close();\n\t\tvalues = rsp.getValues();\n\t\tspellCheck = (NamedList) values.get(\"spellcheck\");\n\t\tsuggestions = (NamedList) spellCheck.get(\"suggestions\");\n\t\tsingleCollation = (String) suggestions.get(\"collation\");\n\t\tassertEquals(singleCollation, \"peace\");\t\t\n\t}\n\n","sourceOld":"\t@Test\n\tpublic void testCollateWithMultipleRequestHandlers() throws Exception\n\t{\n\t\tSolrCore core = h.getCore();\n\t\tSearchComponent speller = core.getSearchComponent(\"spellcheck\");\n\t\tassertTrue(\"speller is null and it shouldn't be\", speller != null);\n\t\t\n\t\tModifiableSolrParams params = new ModifiableSolrParams();\t\t\n\t\tparams.add(SpellCheckComponent.COMPONENT_NAME, \"true\");\n\t\tparams.add(SpellCheckComponent.SPELLCHECK_DICT, \"multipleFields\");\n\t\tparams.add(SpellCheckComponent.SPELLCHECK_BUILD, \"true\");\n\t\tparams.add(SpellCheckComponent.SPELLCHECK_COUNT, \"10\");\t\t\n\t\tparams.add(SpellCheckComponent.SPELLCHECK_COLLATE, \"true\");\n\t\tparams.add(SpellCheckComponent.SPELLCHECK_MAX_COLLATION_TRIES, \"1\");\n\t\tparams.add(SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"1\");\n\t\tparams.add(CommonParams.Q, \"peac\");\t\n\t\t\n\t\t//SpellCheckCompRH has no \"qf\" defined.  It will not find \"peace\" from \"peac\" despite it being in the dictionary\n\t\t//because requrying against this Request Handler results in 0 hits.\t\n\t\tSolrRequestHandler handler = core.getRequestHandler(\"spellCheckCompRH\");\n\t\tSolrQueryResponse rsp = new SolrQueryResponse();\n\t\trsp.add(\"responseHeader\", new SimpleOrderedMap());\n\t\thandler.handleRequest(new LocalSolrQueryRequest(core, params), rsp);\n\t\tNamedList values = rsp.getValues();\n\t\tNamedList spellCheck = (NamedList) values.get(\"spellcheck\");\n\t\tNamedList suggestions = (NamedList) spellCheck.get(\"suggestions\");\n\t\tString singleCollation = (String) suggestions.get(\"collation\");\n\t\tassertNull(singleCollation);\n\t\t\n\t\t//SpellCheckCompRH1 has \"lowerfilt1\" defined in the \"qf\" param.  It will find \"peace\" from \"peac\" because\n\t\t//requrying field \"lowerfilt1\" returns the hit.\n\t\tparams.remove(SpellCheckComponent.SPELLCHECK_BUILD);\n\t\thandler = core.getRequestHandler(\"spellCheckCompRH1\");\n\t\trsp = new SolrQueryResponse();\n\t\trsp.add(\"responseHeader\", new SimpleOrderedMap());\n\t\thandler.handleRequest(new LocalSolrQueryRequest(core, params), rsp);\n\t\tvalues = rsp.getValues();\n\t\tspellCheck = (NamedList) values.get(\"spellcheck\");\n\t\tsuggestions = (NamedList) spellCheck.get(\"suggestions\");\n\t\tsingleCollation = (String) suggestions.get(\"collation\");\n\t\tassertEquals(singleCollation, \"peace\");\t\t\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/spelling/SpellCheckCollatorTest#testCollateWithMultipleRequestHandlers().mjava","pathOld":"/dev/null","sourceNew":"\t@Test\n\tpublic void testCollateWithMultipleRequestHandlers() throws Exception\n\t{\n\t\tSolrCore core = h.getCore();\n\t\tSearchComponent speller = core.getSearchComponent(\"spellcheck\");\n\t\tassertTrue(\"speller is null and it shouldn't be\", speller != null);\n\t\t\n\t\tModifiableSolrParams params = new ModifiableSolrParams();\t\t\n\t\tparams.add(SpellCheckComponent.COMPONENT_NAME, \"true\");\n\t\tparams.add(SpellCheckComponent.SPELLCHECK_DICT, \"multipleFields\");\n\t\tparams.add(SpellCheckComponent.SPELLCHECK_BUILD, \"true\");\n\t\tparams.add(SpellCheckComponent.SPELLCHECK_COUNT, \"10\");\t\t\n\t\tparams.add(SpellCheckComponent.SPELLCHECK_COLLATE, \"true\");\n\t\tparams.add(SpellCheckComponent.SPELLCHECK_MAX_COLLATION_TRIES, \"1\");\n\t\tparams.add(SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"1\");\n\t\tparams.add(CommonParams.Q, \"peac\");\t\n\t\t\n\t\t//SpellCheckCompRH has no \"qf\" defined.  It will not find \"peace\" from \"peac\" despite it being in the dictionary\n\t\t//because requrying against this Request Handler results in 0 hits.\t\n\t\tSolrRequestHandler handler = core.getRequestHandler(\"spellCheckCompRH\");\n\t\tSolrQueryResponse rsp = new SolrQueryResponse();\n\t\trsp.add(\"responseHeader\", new SimpleOrderedMap());\n\t\tSolrQueryRequest req = new LocalSolrQueryRequest(core, params);\n\t\thandler.handleRequest(req, rsp);\n\t\treq.close();\n\t\tNamedList values = rsp.getValues();\n\t\tNamedList spellCheck = (NamedList) values.get(\"spellcheck\");\n\t\tNamedList suggestions = (NamedList) spellCheck.get(\"suggestions\");\n\t\tString singleCollation = (String) suggestions.get(\"collation\");\n\t\tassertNull(singleCollation);\n\t\t\n\t\t//SpellCheckCompRH1 has \"lowerfilt1\" defined in the \"qf\" param.  It will find \"peace\" from \"peac\" because\n\t\t//requrying field \"lowerfilt1\" returns the hit.\n\t\tparams.remove(SpellCheckComponent.SPELLCHECK_BUILD);\n\t\thandler = core.getRequestHandler(\"spellCheckCompRH1\");\n\t\trsp = new SolrQueryResponse();\n\t\trsp.add(\"responseHeader\", new SimpleOrderedMap());\n\t\treq = new LocalSolrQueryRequest(core, params);\n\t\thandler.handleRequest(req, rsp);\n\t\treq.close();\n\t\tvalues = rsp.getValues();\n\t\tspellCheck = (NamedList) values.get(\"spellcheck\");\n\t\tsuggestions = (NamedList) spellCheck.get(\"suggestions\");\n\t\tsingleCollation = (String) suggestions.get(\"collation\");\n\t\tassertEquals(singleCollation, \"peace\");\t\t\n\t}\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/spelling/SpellCheckCollatorTest#testCollateWithMultipleRequestHandlers().mjava","pathOld":"solr/src/test/org/apache/solr/spelling/SpellCheckCollatorTest#testCollateWithMultipleRequestHandlers().mjava","sourceNew":"\t@Test\n\tpublic void testCollateWithMultipleRequestHandlers() throws Exception\n\t{\n\t\tSolrCore core = h.getCore();\n\t\tSearchComponent speller = core.getSearchComponent(\"spellcheck\");\n\t\tassertTrue(\"speller is null and it shouldn't be\", speller != null);\n\t\t\n\t\tModifiableSolrParams params = new ModifiableSolrParams();\t\t\n\t\tparams.add(SpellCheckComponent.COMPONENT_NAME, \"true\");\n\t\tparams.add(SpellCheckComponent.SPELLCHECK_DICT, \"multipleFields\");\n\t\tparams.add(SpellCheckComponent.SPELLCHECK_BUILD, \"true\");\n\t\tparams.add(SpellCheckComponent.SPELLCHECK_COUNT, \"10\");\t\t\n\t\tparams.add(SpellCheckComponent.SPELLCHECK_COLLATE, \"true\");\n\t\tparams.add(SpellCheckComponent.SPELLCHECK_MAX_COLLATION_TRIES, \"1\");\n\t\tparams.add(SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"1\");\n\t\tparams.add(CommonParams.Q, \"peac\");\t\n\t\t\n\t\t//SpellCheckCompRH has no \"qf\" defined.  It will not find \"peace\" from \"peac\" despite it being in the dictionary\n\t\t//because requrying against this Request Handler results in 0 hits.\t\n\t\tSolrRequestHandler handler = core.getRequestHandler(\"spellCheckCompRH\");\n\t\tSolrQueryResponse rsp = new SolrQueryResponse();\n\t\trsp.add(\"responseHeader\", new SimpleOrderedMap());\n\t\tSolrQueryRequest req = new LocalSolrQueryRequest(core, params);\n\t\thandler.handleRequest(req, rsp);\n\t\treq.close();\n\t\tNamedList values = rsp.getValues();\n\t\tNamedList spellCheck = (NamedList) values.get(\"spellcheck\");\n\t\tNamedList suggestions = (NamedList) spellCheck.get(\"suggestions\");\n\t\tString singleCollation = (String) suggestions.get(\"collation\");\n\t\tassertNull(singleCollation);\n\t\t\n\t\t//SpellCheckCompRH1 has \"lowerfilt1\" defined in the \"qf\" param.  It will find \"peace\" from \"peac\" because\n\t\t//requrying field \"lowerfilt1\" returns the hit.\n\t\tparams.remove(SpellCheckComponent.SPELLCHECK_BUILD);\n\t\thandler = core.getRequestHandler(\"spellCheckCompRH1\");\n\t\trsp = new SolrQueryResponse();\n\t\trsp.add(\"responseHeader\", new SimpleOrderedMap());\n\t\treq = new LocalSolrQueryRequest(core, params);\n\t\thandler.handleRequest(req, rsp);\n\t\treq.close();\n\t\tvalues = rsp.getValues();\n\t\tspellCheck = (NamedList) values.get(\"spellcheck\");\n\t\tsuggestions = (NamedList) spellCheck.get(\"suggestions\");\n\t\tsingleCollation = (String) suggestions.get(\"collation\");\n\t\tassertEquals(singleCollation, \"peace\");\t\t\n\t}\n\n","sourceOld":"\t@Test\n\tpublic void testCollateWithMultipleRequestHandlers() throws Exception\n\t{\n\t\tSolrCore core = h.getCore();\n\t\tSearchComponent speller = core.getSearchComponent(\"spellcheck\");\n\t\tassertTrue(\"speller is null and it shouldn't be\", speller != null);\n\t\t\n\t\tModifiableSolrParams params = new ModifiableSolrParams();\t\t\n\t\tparams.add(SpellCheckComponent.COMPONENT_NAME, \"true\");\n\t\tparams.add(SpellCheckComponent.SPELLCHECK_DICT, \"multipleFields\");\n\t\tparams.add(SpellCheckComponent.SPELLCHECK_BUILD, \"true\");\n\t\tparams.add(SpellCheckComponent.SPELLCHECK_COUNT, \"10\");\t\t\n\t\tparams.add(SpellCheckComponent.SPELLCHECK_COLLATE, \"true\");\n\t\tparams.add(SpellCheckComponent.SPELLCHECK_MAX_COLLATION_TRIES, \"1\");\n\t\tparams.add(SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"1\");\n\t\tparams.add(CommonParams.Q, \"peac\");\t\n\t\t\n\t\t//SpellCheckCompRH has no \"qf\" defined.  It will not find \"peace\" from \"peac\" despite it being in the dictionary\n\t\t//because requrying against this Request Handler results in 0 hits.\t\n\t\tSolrRequestHandler handler = core.getRequestHandler(\"spellCheckCompRH\");\n\t\tSolrQueryResponse rsp = new SolrQueryResponse();\n\t\trsp.add(\"responseHeader\", new SimpleOrderedMap());\n\t\tSolrQueryRequest req = new LocalSolrQueryRequest(core, params);\n\t\thandler.handleRequest(req, rsp);\n\t\treq.close();\n\t\tNamedList values = rsp.getValues();\n\t\tNamedList spellCheck = (NamedList) values.get(\"spellcheck\");\n\t\tNamedList suggestions = (NamedList) spellCheck.get(\"suggestions\");\n\t\tString singleCollation = (String) suggestions.get(\"collation\");\n\t\tassertNull(singleCollation);\n\t\t\n\t\t//SpellCheckCompRH1 has \"lowerfilt1\" defined in the \"qf\" param.  It will find \"peace\" from \"peac\" because\n\t\t//requrying field \"lowerfilt1\" returns the hit.\n\t\tparams.remove(SpellCheckComponent.SPELLCHECK_BUILD);\n\t\thandler = core.getRequestHandler(\"spellCheckCompRH1\");\n\t\trsp = new SolrQueryResponse();\n\t\trsp.add(\"responseHeader\", new SimpleOrderedMap());\n\t\treq = new LocalSolrQueryRequest(core, params);\n\t\thandler.handleRequest(req, rsp);\n\t\treq.close();\n\t\tvalues = rsp.getValues();\n\t\tspellCheck = (NamedList) values.get(\"spellcheck\");\n\t\tsuggestions = (NamedList) spellCheck.get(\"suggestions\");\n\t\tsingleCollation = (String) suggestions.get(\"collation\");\n\t\tassertEquals(singleCollation, \"peace\");\t\t\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/spelling/SpellCheckCollatorTest#testCollateWithMultipleRequestHandlers().mjava","pathOld":"solr/src/test/org/apache/solr/spelling/SpellCheckCollatorTest#testCollateWithMultipleRequestHandlers().mjava","sourceNew":"\t@Test\n\tpublic void testCollateWithMultipleRequestHandlers() throws Exception\n\t{\n\t\tSolrCore core = h.getCore();\n\t\tSearchComponent speller = core.getSearchComponent(\"spellcheck\");\n\t\tassertTrue(\"speller is null and it shouldn't be\", speller != null);\n\t\t\n\t\tModifiableSolrParams params = new ModifiableSolrParams();\t\t\n\t\tparams.add(SpellCheckComponent.COMPONENT_NAME, \"true\");\n\t\tparams.add(SpellCheckComponent.SPELLCHECK_DICT, \"multipleFields\");\n\t\tparams.add(SpellCheckComponent.SPELLCHECK_BUILD, \"true\");\n\t\tparams.add(SpellCheckComponent.SPELLCHECK_COUNT, \"10\");\t\t\n\t\tparams.add(SpellCheckComponent.SPELLCHECK_COLLATE, \"true\");\n\t\tparams.add(SpellCheckComponent.SPELLCHECK_MAX_COLLATION_TRIES, \"1\");\n\t\tparams.add(SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"1\");\n\t\tparams.add(CommonParams.Q, \"peac\");\t\n\t\t\n\t\t//SpellCheckCompRH has no \"qf\" defined.  It will not find \"peace\" from \"peac\" despite it being in the dictionary\n\t\t//because requrying against this Request Handler results in 0 hits.\t\n\t\tSolrRequestHandler handler = core.getRequestHandler(\"spellCheckCompRH\");\n\t\tSolrQueryResponse rsp = new SolrQueryResponse();\n\t\trsp.add(\"responseHeader\", new SimpleOrderedMap());\n\t\tSolrQueryRequest req = new LocalSolrQueryRequest(core, params);\n\t\thandler.handleRequest(req, rsp);\n\t\treq.close();\n\t\tNamedList values = rsp.getValues();\n\t\tNamedList spellCheck = (NamedList) values.get(\"spellcheck\");\n\t\tNamedList suggestions = (NamedList) spellCheck.get(\"suggestions\");\n\t\tString singleCollation = (String) suggestions.get(\"collation\");\n\t\tassertNull(singleCollation);\n\t\t\n\t\t//SpellCheckCompRH1 has \"lowerfilt1\" defined in the \"qf\" param.  It will find \"peace\" from \"peac\" because\n\t\t//requrying field \"lowerfilt1\" returns the hit.\n\t\tparams.remove(SpellCheckComponent.SPELLCHECK_BUILD);\n\t\thandler = core.getRequestHandler(\"spellCheckCompRH1\");\n\t\trsp = new SolrQueryResponse();\n\t\trsp.add(\"responseHeader\", new SimpleOrderedMap());\n\t\treq = new LocalSolrQueryRequest(core, params);\n\t\thandler.handleRequest(req, rsp);\n\t\treq.close();\n\t\tvalues = rsp.getValues();\n\t\tspellCheck = (NamedList) values.get(\"spellcheck\");\n\t\tsuggestions = (NamedList) spellCheck.get(\"suggestions\");\n\t\tsingleCollation = (String) suggestions.get(\"collation\");\n\t\tassertEquals(singleCollation, \"peace\");\t\t\n\t}\n\n","sourceOld":"\t@Test\n\tpublic void testCollateWithMultipleRequestHandlers() throws Exception\n\t{\n\t\tSolrCore core = h.getCore();\n\t\tSearchComponent speller = core.getSearchComponent(\"spellcheck\");\n\t\tassertTrue(\"speller is null and it shouldn't be\", speller != null);\n\t\t\n\t\tModifiableSolrParams params = new ModifiableSolrParams();\t\t\n\t\tparams.add(SpellCheckComponent.COMPONENT_NAME, \"true\");\n\t\tparams.add(SpellCheckComponent.SPELLCHECK_DICT, \"multipleFields\");\n\t\tparams.add(SpellCheckComponent.SPELLCHECK_BUILD, \"true\");\n\t\tparams.add(SpellCheckComponent.SPELLCHECK_COUNT, \"10\");\t\t\n\t\tparams.add(SpellCheckComponent.SPELLCHECK_COLLATE, \"true\");\n\t\tparams.add(SpellCheckComponent.SPELLCHECK_MAX_COLLATION_TRIES, \"1\");\n\t\tparams.add(SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"1\");\n\t\tparams.add(CommonParams.Q, \"peac\");\t\n\t\t\n\t\t//SpellCheckCompRH has no \"qf\" defined.  It will not find \"peace\" from \"peac\" despite it being in the dictionary\n\t\t//because requrying against this Request Handler results in 0 hits.\t\n\t\tSolrRequestHandler handler = core.getRequestHandler(\"spellCheckCompRH\");\n\t\tSolrQueryResponse rsp = new SolrQueryResponse();\n\t\trsp.add(\"responseHeader\", new SimpleOrderedMap());\n\t\tSolrQueryRequest req = new LocalSolrQueryRequest(core, params);\n\t\thandler.handleRequest(req, rsp);\n\t\treq.close();\n\t\tNamedList values = rsp.getValues();\n\t\tNamedList spellCheck = (NamedList) values.get(\"spellcheck\");\n\t\tNamedList suggestions = (NamedList) spellCheck.get(\"suggestions\");\n\t\tString singleCollation = (String) suggestions.get(\"collation\");\n\t\tassertNull(singleCollation);\n\t\t\n\t\t//SpellCheckCompRH1 has \"lowerfilt1\" defined in the \"qf\" param.  It will find \"peace\" from \"peac\" because\n\t\t//requrying field \"lowerfilt1\" returns the hit.\n\t\tparams.remove(SpellCheckComponent.SPELLCHECK_BUILD);\n\t\thandler = core.getRequestHandler(\"spellCheckCompRH1\");\n\t\trsp = new SolrQueryResponse();\n\t\trsp.add(\"responseHeader\", new SimpleOrderedMap());\n\t\treq = new LocalSolrQueryRequest(core, params);\n\t\thandler.handleRequest(req, rsp);\n\t\treq.close();\n\t\tvalues = rsp.getValues();\n\t\tspellCheck = (NamedList) values.get(\"spellcheck\");\n\t\tsuggestions = (NamedList) spellCheck.get(\"suggestions\");\n\t\tsingleCollation = (String) suggestions.get(\"collation\");\n\t\tassertEquals(singleCollation, \"peace\");\t\t\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/spelling/SpellCheckCollatorTest#testCollateWithMultipleRequestHandlers().mjava","pathOld":"solr/src/test/org/apache/solr/spelling/SpellCheckCollatorTest#testCollateWithMultipleRequestHandlers().mjava","sourceNew":"\t@Test\n\tpublic void testCollateWithMultipleRequestHandlers() throws Exception\n\t{\n\t\tSolrCore core = h.getCore();\n\t\tSearchComponent speller = core.getSearchComponent(\"spellcheck\");\n\t\tassertTrue(\"speller is null and it shouldn't be\", speller != null);\n\t\t\n\t\tModifiableSolrParams params = new ModifiableSolrParams();\t\t\n\t\tparams.add(SpellCheckComponent.COMPONENT_NAME, \"true\");\n\t\tparams.add(SpellCheckComponent.SPELLCHECK_DICT, \"multipleFields\");\n\t\tparams.add(SpellCheckComponent.SPELLCHECK_BUILD, \"true\");\n\t\tparams.add(SpellCheckComponent.SPELLCHECK_COUNT, \"10\");\t\t\n\t\tparams.add(SpellCheckComponent.SPELLCHECK_COLLATE, \"true\");\n\t\tparams.add(SpellCheckComponent.SPELLCHECK_MAX_COLLATION_TRIES, \"1\");\n\t\tparams.add(SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"1\");\n\t\tparams.add(CommonParams.Q, \"peac\");\t\n\t\t\n\t\t//SpellCheckCompRH has no \"qf\" defined.  It will not find \"peace\" from \"peac\" despite it being in the dictionary\n\t\t//because requrying against this Request Handler results in 0 hits.\t\n\t\tSolrRequestHandler handler = core.getRequestHandler(\"spellCheckCompRH\");\n\t\tSolrQueryResponse rsp = new SolrQueryResponse();\n\t\trsp.add(\"responseHeader\", new SimpleOrderedMap());\n\t\tSolrQueryRequest req = new LocalSolrQueryRequest(core, params);\n\t\thandler.handleRequest(req, rsp);\n\t\treq.close();\n\t\tNamedList values = rsp.getValues();\n\t\tNamedList spellCheck = (NamedList) values.get(\"spellcheck\");\n\t\tNamedList suggestions = (NamedList) spellCheck.get(\"suggestions\");\n\t\tString singleCollation = (String) suggestions.get(\"collation\");\n\t\tassertNull(singleCollation);\n\t\t\n\t\t//SpellCheckCompRH1 has \"lowerfilt1\" defined in the \"qf\" param.  It will find \"peace\" from \"peac\" because\n\t\t//requrying field \"lowerfilt1\" returns the hit.\n\t\tparams.remove(SpellCheckComponent.SPELLCHECK_BUILD);\n\t\thandler = core.getRequestHandler(\"spellCheckCompRH1\");\n\t\trsp = new SolrQueryResponse();\n\t\trsp.add(\"responseHeader\", new SimpleOrderedMap());\n\t\treq = new LocalSolrQueryRequest(core, params);\n\t\thandler.handleRequest(req, rsp);\n\t\treq.close();\n\t\tvalues = rsp.getValues();\n\t\tspellCheck = (NamedList) values.get(\"spellcheck\");\n\t\tsuggestions = (NamedList) spellCheck.get(\"suggestions\");\n\t\tsingleCollation = (String) suggestions.get(\"collation\");\n\t\tassertEquals(singleCollation, \"peace\");\t\t\n\t}\n\n","sourceOld":"\t@Test\n\tpublic void testCollateWithMultipleRequestHandlers() throws Exception\n\t{\n\t\tSolrCore core = h.getCore();\n\t\tSearchComponent speller = core.getSearchComponent(\"spellcheck\");\n\t\tassertTrue(\"speller is null and it shouldn't be\", speller != null);\n\t\t\n\t\tModifiableSolrParams params = new ModifiableSolrParams();\t\t\n\t\tparams.add(SpellCheckComponent.COMPONENT_NAME, \"true\");\n\t\tparams.add(SpellCheckComponent.SPELLCHECK_DICT, \"multipleFields\");\n\t\tparams.add(SpellCheckComponent.SPELLCHECK_BUILD, \"true\");\n\t\tparams.add(SpellCheckComponent.SPELLCHECK_COUNT, \"10\");\t\t\n\t\tparams.add(SpellCheckComponent.SPELLCHECK_COLLATE, \"true\");\n\t\tparams.add(SpellCheckComponent.SPELLCHECK_MAX_COLLATION_TRIES, \"1\");\n\t\tparams.add(SpellCheckComponent.SPELLCHECK_MAX_COLLATIONS, \"1\");\n\t\tparams.add(CommonParams.Q, \"peac\");\t\n\t\t\n\t\t//SpellCheckCompRH has no \"qf\" defined.  It will not find \"peace\" from \"peac\" despite it being in the dictionary\n\t\t//because requrying against this Request Handler results in 0 hits.\t\n\t\tSolrRequestHandler handler = core.getRequestHandler(\"spellCheckCompRH\");\n\t\tSolrQueryResponse rsp = new SolrQueryResponse();\n\t\trsp.add(\"responseHeader\", new SimpleOrderedMap());\n\t\tSolrQueryRequest req = new LocalSolrQueryRequest(core, params);\n\t\thandler.handleRequest(req, rsp);\n\t\treq.close();\n\t\tNamedList values = rsp.getValues();\n\t\tNamedList spellCheck = (NamedList) values.get(\"spellcheck\");\n\t\tNamedList suggestions = (NamedList) spellCheck.get(\"suggestions\");\n\t\tString singleCollation = (String) suggestions.get(\"collation\");\n\t\tassertNull(singleCollation);\n\t\t\n\t\t//SpellCheckCompRH1 has \"lowerfilt1\" defined in the \"qf\" param.  It will find \"peace\" from \"peac\" because\n\t\t//requrying field \"lowerfilt1\" returns the hit.\n\t\tparams.remove(SpellCheckComponent.SPELLCHECK_BUILD);\n\t\thandler = core.getRequestHandler(\"spellCheckCompRH1\");\n\t\trsp = new SolrQueryResponse();\n\t\trsp.add(\"responseHeader\", new SimpleOrderedMap());\n\t\treq = new LocalSolrQueryRequest(core, params);\n\t\thandler.handleRequest(req, rsp);\n\t\treq.close();\n\t\tvalues = rsp.getValues();\n\t\tspellCheck = (NamedList) values.get(\"spellcheck\");\n\t\tsuggestions = (NamedList) spellCheck.get(\"suggestions\");\n\t\tsingleCollation = (String) suggestions.get(\"collation\");\n\t\tassertEquals(singleCollation, \"peace\");\t\t\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["184f5dad988214d0632a44d18f2d9817c4b8bac5"],"cdcf766020b9b159d0b3a6ecae90ff1998ded019":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["184f5dad988214d0632a44d18f2d9817c4b8bac5","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["184f5dad988214d0632a44d18f2d9817c4b8bac5"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","184f5dad988214d0632a44d18f2d9817c4b8bac5"],"184f5dad988214d0632a44d18f2d9817c4b8bac5":["cdcf766020b9b159d0b3a6ecae90ff1998ded019"],"4ecea1664e8617d82eca3b8055a3c37cb4da8511":["cdcf766020b9b159d0b3a6ecae90ff1998ded019","184f5dad988214d0632a44d18f2d9817c4b8bac5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c26f00b574427b55127e869b935845554afde1fa"]},"commit2Childs":{"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"cdcf766020b9b159d0b3a6ecae90ff1998ded019":["184f5dad988214d0632a44d18f2d9817c4b8bac5","4ecea1664e8617d82eca3b8055a3c37cb4da8511"],"c26f00b574427b55127e869b935845554afde1fa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cdcf766020b9b159d0b3a6ecae90ff1998ded019","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"184f5dad988214d0632a44d18f2d9817c4b8bac5":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","4ecea1664e8617d82eca3b8055a3c37cb4da8511"],"4ecea1664e8617d82eca3b8055a3c37cb4da8511":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","4ecea1664e8617d82eca3b8055a3c37cb4da8511","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}