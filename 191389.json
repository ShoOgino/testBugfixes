{"path":"lucene/src/test/org/apache/lucene/search/TestMultiTermConstantScore#testBasicsRngCollating().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestMultiTermConstantScore#testBasicsRngCollating().mjava","pathOld":"src/test/org/apache/lucene/search/TestMultiTermConstantScore#testBasicsRngCollating().mjava","sourceNew":"  public void testBasicsRngCollating() throws IOException {\n    Collator c = Collator.getInstance(Locale.ENGLISH);\n    QueryUtils.check(csrq(\"data\", \"1\", \"6\", T, T, c));\n    QueryUtils.check(csrq(\"data\", \"A\", \"Z\", T, T, c));\n    QueryUtils.checkUnequal(csrq(\"data\", \"1\", \"6\", T, T, c), csrq(\"data\", \"A\",\n        \"Z\", T, T, c));\n  }\n\n","sourceOld":"  public void testBasicsRngCollating() throws IOException {\n    Collator c = Collator.getInstance(Locale.ENGLISH);\n    QueryUtils.check(csrq(\"data\", \"1\", \"6\", T, T, c));\n    QueryUtils.check(csrq(\"data\", \"A\", \"Z\", T, T, c));\n    QueryUtils.checkUnequal(csrq(\"data\", \"1\", \"6\", T, T, c), csrq(\"data\", \"A\",\n        \"Z\", T, T, c));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"150488c1317972164a9a824be05b1ba2ba0fc68c","date":1284316090,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestMultiTermConstantScore#testBasicsRngCollating().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestMultiTermConstantScore#testBasicsRngCollating().mjava","sourceNew":"  @Test\n  public void testBasicsRngCollating() throws IOException {\n    Collator c = Collator.getInstance(Locale.ENGLISH);\n    QueryUtils.check(csrq(\"data\", \"1\", \"6\", T, T, c));\n    QueryUtils.check(csrq(\"data\", \"A\", \"Z\", T, T, c));\n    QueryUtils.checkUnequal(csrq(\"data\", \"1\", \"6\", T, T, c), csrq(\"data\", \"A\",\n        \"Z\", T, T, c));\n  }\n\n","sourceOld":"  public void testBasicsRngCollating() throws IOException {\n    Collator c = Collator.getInstance(Locale.ENGLISH);\n    QueryUtils.check(csrq(\"data\", \"1\", \"6\", T, T, c));\n    QueryUtils.check(csrq(\"data\", \"A\", \"Z\", T, T, c));\n    QueryUtils.checkUnequal(csrq(\"data\", \"1\", \"6\", T, T, c), csrq(\"data\", \"A\",\n        \"Z\", T, T, c));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestMultiTermConstantScore#testBasicsRngCollating().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestMultiTermConstantScore#testBasicsRngCollating().mjava","sourceNew":"  @Test\n  public void testBasicsRngCollating() throws IOException {\n    Collator c = Collator.getInstance(Locale.ENGLISH);\n    QueryUtils.check(csrq(\"data\", \"1\", \"6\", T, T, c));\n    QueryUtils.check(csrq(\"data\", \"A\", \"Z\", T, T, c));\n    QueryUtils.checkUnequal(csrq(\"data\", \"1\", \"6\", T, T, c), csrq(\"data\", \"A\",\n        \"Z\", T, T, c));\n  }\n\n","sourceOld":"  public void testBasicsRngCollating() throws IOException {\n    Collator c = Collator.getInstance(Locale.ENGLISH);\n    QueryUtils.check(csrq(\"data\", \"1\", \"6\", T, T, c));\n    QueryUtils.check(csrq(\"data\", \"A\", \"Z\", T, T, c));\n    QueryUtils.checkUnequal(csrq(\"data\", \"1\", \"6\", T, T, c), csrq(\"data\", \"A\",\n        \"Z\", T, T, c));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3e492fb0f2bb0b4b47208286f9331ff55963c656","date":1298870150,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/test/org/apache/lucene/search/TestMultiTermConstantScore#testBasicsRngCollating().mjava","sourceNew":null,"sourceOld":"  @Test\n  public void testBasicsRngCollating() throws IOException {\n    Collator c = Collator.getInstance(Locale.ENGLISH);\n    QueryUtils.check(csrq(\"data\", \"1\", \"6\", T, T, c));\n    QueryUtils.check(csrq(\"data\", \"A\", \"Z\", T, T, c));\n    QueryUtils.checkUnequal(csrq(\"data\", \"1\", \"6\", T, T, c), csrq(\"data\", \"A\",\n        \"Z\", T, T, c));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d619839baa8ce5503e496b94a9e42ad6f079293f","date":1301309428,"type":4,"author":"Simon Willnauer","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/test/org/apache/lucene/search/TestMultiTermConstantScore#testBasicsRngCollating().mjava","sourceNew":null,"sourceOld":"  @Test\n  public void testBasicsRngCollating() throws IOException {\n    Collator c = Collator.getInstance(Locale.ENGLISH);\n    QueryUtils.check(csrq(\"data\", \"1\", \"6\", T, T, c));\n    QueryUtils.check(csrq(\"data\", \"A\", \"Z\", T, T, c));\n    QueryUtils.checkUnequal(csrq(\"data\", \"1\", \"6\", T, T, c), csrq(\"data\", \"A\",\n        \"Z\", T, T, c));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c0ef0193974807e4bddf5432a6b0287fe4d6c9df","date":1301476645,"type":4,"author":"Simon Willnauer","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/test/org/apache/lucene/search/TestMultiTermConstantScore#testBasicsRngCollating().mjava","sourceNew":null,"sourceOld":"  @Test\n  public void testBasicsRngCollating() throws IOException {\n    Collator c = Collator.getInstance(Locale.ENGLISH);\n    QueryUtils.check(csrq(\"data\", \"1\", \"6\", T, T, c));\n    QueryUtils.check(csrq(\"data\", \"A\", \"Z\", T, T, c));\n    QueryUtils.checkUnequal(csrq(\"data\", \"1\", \"6\", T, T, c), csrq(\"data\", \"A\",\n        \"Z\", T, T, c));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c0ef0193974807e4bddf5432a6b0287fe4d6c9df":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","3e492fb0f2bb0b4b47208286f9331ff55963c656"],"d619839baa8ce5503e496b94a9e42ad6f079293f":["150488c1317972164a9a824be05b1ba2ba0fc68c","3e492fb0f2bb0b4b47208286f9331ff55963c656"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3e492fb0f2bb0b4b47208286f9331ff55963c656":["150488c1317972164a9a824be05b1ba2ba0fc68c"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["9454a6510e2db155fb01faa5c049b06ece95fab9","150488c1317972164a9a824be05b1ba2ba0fc68c"],"150488c1317972164a9a824be05b1ba2ba0fc68c":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3e492fb0f2bb0b4b47208286f9331ff55963c656"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"c0ef0193974807e4bddf5432a6b0287fe4d6c9df":[],"d619839baa8ce5503e496b94a9e42ad6f079293f":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df"],"3e492fb0f2bb0b4b47208286f9331ff55963c656":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df","d619839baa8ce5503e496b94a9e42ad6f079293f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"150488c1317972164a9a824be05b1ba2ba0fc68c":["d619839baa8ce5503e496b94a9e42ad6f079293f","3e492fb0f2bb0b4b47208286f9331ff55963c656","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","150488c1317972164a9a824be05b1ba2ba0fc68c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df","d619839baa8ce5503e496b94a9e42ad6f079293f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}