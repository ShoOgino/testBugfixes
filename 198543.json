{"path":"backwards/src/java/org/apache/lucene/search/FieldCache#getFloats(IndexReader,String,FloatParser).mjava","commits":[{"id":"480d01e5b0ef8efb136d51670fec297ae5ae2c9c","date":1268821447,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"backwards/src/java/org/apache/lucene/search/FieldCache#getFloats(IndexReader,String,FloatParser).mjava","pathOld":"/dev/null","sourceNew":"  /** Checks the internal cache for an appropriate entry, and if\n   * none is found, reads the terms in <code>field</code> as floats and returns an array\n   * of size <code>reader.maxDoc()</code> of the value each document\n   * has in the given field.\n   * @param reader  Used to get field values.\n   * @param field   Which field contains the floats.\n   * @param parser  Computes float for string values.\n   * @return The values in the given field for each document.\n   * @throws IOException  If any error occurs.\n   */\n  public float[] getFloats (IndexReader reader, String field,\n                            FloatParser parser) throws IOException;\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/java/org/apache/lucene/search/FieldCache#getFloats(IndexReader,String,FloatParser).mjava","pathOld":"backwards/src/java/org/apache/lucene/search/FieldCache#getFloats(IndexReader,String,FloatParser).mjava","sourceNew":"  /** Checks the internal cache for an appropriate entry, and if\n   * none is found, reads the terms in <code>field</code> as floats and returns an array\n   * of size <code>reader.maxDoc()</code> of the value each document\n   * has in the given field.\n   * @param reader  Used to get field values.\n   * @param field   Which field contains the floats.\n   * @param parser  Computes float for string values.\n   * @return The values in the given field for each document.\n   * @throws IOException  If any error occurs.\n   */\n  public float[] getFloats (IndexReader reader, String field,\n                            FloatParser parser) throws IOException;\n\n","sourceOld":"  /** Checks the internal cache for an appropriate entry, and if\n   * none is found, reads the terms in <code>field</code> as floats and returns an array\n   * of size <code>reader.maxDoc()</code> of the value each document\n   * has in the given field.\n   * @param reader  Used to get field values.\n   * @param field   Which field contains the floats.\n   * @param parser  Computes float for string values.\n   * @return The values in the given field for each document.\n   * @throws IOException  If any error occurs.\n   */\n  public float[] getFloats (IndexReader reader, String field,\n                            FloatParser parser) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"]},"commit2Childs":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}