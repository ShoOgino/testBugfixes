{"path":"solr/src/java/org/apache/solr/core/SolrCore#setResponseHeaderValues(SolrRequestHandler,SolrQueryRequest,SolrQueryResponse).mjava","commits":[{"id":"893269407f5c988a4b2ee13c7ffc01ec43136c1d","date":1268598046,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/core/SolrCore#setResponseHeaderValues(SolrRequestHandler,SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"/dev/null","sourceNew":"  public static void setResponseHeaderValues(SolrRequestHandler handler, SolrQueryRequest req, SolrQueryResponse rsp) {\n    // TODO should check that responseHeader has not been replaced by handler\n\tNamedList responseHeader = rsp.getResponseHeader();\n    final int qtime=(int)(rsp.getEndTime() - req.getStartTime());\n    int status = 0;\n    Exception exception = rsp.getException();\n    if( exception != null ){\n      if( exception instanceof SolrException )\n        status = ((SolrException)exception).code();\n      else\n        status = 500;\n    }\n    responseHeader.add(\"status\",status);\n    responseHeader.add(\"QTime\",qtime);\n    rsp.getToLog().add(\"status\",status);\n    rsp.getToLog().add(\"QTime\",qtime);\n    \n    SolrParams params = req.getParams();\n    if( params.getBool(CommonParams.HEADER_ECHO_HANDLER, false) ) {\n      responseHeader.add(\"handler\", handler.getName() );\n    }\n    \n    // Values for echoParams... false/true/all or false/explicit/all ???\n    String ep = params.get( CommonParams.HEADER_ECHO_PARAMS, null );\n    if( ep != null ) {\n      EchoParamStyle echoParams = EchoParamStyle.get( ep );\n      if( echoParams == null ) {\n        throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\"Invalid value '\" + ep + \"' for \" + CommonParams.HEADER_ECHO_PARAMS \n            + \" parameter, use '\" + EchoParamStyle.EXPLICIT + \"' or '\" + EchoParamStyle.ALL + \"'\" );\n      }\n      if( echoParams == EchoParamStyle.EXPLICIT ) {\n        responseHeader.add(\"params\", req.getOriginalParams().toNamedList());\n      } else if( echoParams == EchoParamStyle.ALL ) {\n        responseHeader.add(\"params\", req.getParams().toNamedList());\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","date":1268599006,"type":4,"author":"Mark Robert Miller","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/src/java/org/apache/solr/core/SolrCore#setResponseHeaderValues(SolrRequestHandler,SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":null,"sourceOld":"  public static void setResponseHeaderValues(SolrRequestHandler handler, SolrQueryRequest req, SolrQueryResponse rsp) {\n    // TODO should check that responseHeader has not been replaced by handler\n\tNamedList responseHeader = rsp.getResponseHeader();\n    final int qtime=(int)(rsp.getEndTime() - req.getStartTime());\n    int status = 0;\n    Exception exception = rsp.getException();\n    if( exception != null ){\n      if( exception instanceof SolrException )\n        status = ((SolrException)exception).code();\n      else\n        status = 500;\n    }\n    responseHeader.add(\"status\",status);\n    responseHeader.add(\"QTime\",qtime);\n    rsp.getToLog().add(\"status\",status);\n    rsp.getToLog().add(\"QTime\",qtime);\n    \n    SolrParams params = req.getParams();\n    if( params.getBool(CommonParams.HEADER_ECHO_HANDLER, false) ) {\n      responseHeader.add(\"handler\", handler.getName() );\n    }\n    \n    // Values for echoParams... false/true/all or false/explicit/all ???\n    String ep = params.get( CommonParams.HEADER_ECHO_PARAMS, null );\n    if( ep != null ) {\n      EchoParamStyle echoParams = EchoParamStyle.get( ep );\n      if( echoParams == null ) {\n        throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\"Invalid value '\" + ep + \"' for \" + CommonParams.HEADER_ECHO_PARAMS \n            + \" parameter, use '\" + EchoParamStyle.EXPLICIT + \"' or '\" + EchoParamStyle.ALL + \"'\" );\n      }\n      if( echoParams == EchoParamStyle.EXPLICIT ) {\n        responseHeader.add(\"params\", req.getOriginalParams().toNamedList());\n      } else if( echoParams == EchoParamStyle.ALL ) {\n        responseHeader.add(\"params\", req.getParams().toNamedList());\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/core/SolrCore#setResponseHeaderValues(SolrRequestHandler,SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"src/java/org/apache/solr/core/SolrCore#setResponseHeaderValues(SolrRequestHandler,SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  public static void setResponseHeaderValues(SolrRequestHandler handler, SolrQueryRequest req, SolrQueryResponse rsp) {\n    // TODO should check that responseHeader has not been replaced by handler\n\tNamedList responseHeader = rsp.getResponseHeader();\n    final int qtime=(int)(rsp.getEndTime() - req.getStartTime());\n    int status = 0;\n    Exception exception = rsp.getException();\n    if( exception != null ){\n      if( exception instanceof SolrException )\n        status = ((SolrException)exception).code();\n      else\n        status = 500;\n    }\n    responseHeader.add(\"status\",status);\n    responseHeader.add(\"QTime\",qtime);\n    rsp.getToLog().add(\"status\",status);\n    rsp.getToLog().add(\"QTime\",qtime);\n    \n    SolrParams params = req.getParams();\n    if( params.getBool(CommonParams.HEADER_ECHO_HANDLER, false) ) {\n      responseHeader.add(\"handler\", handler.getName() );\n    }\n    \n    // Values for echoParams... false/true/all or false/explicit/all ???\n    String ep = params.get( CommonParams.HEADER_ECHO_PARAMS, null );\n    if( ep != null ) {\n      EchoParamStyle echoParams = EchoParamStyle.get( ep );\n      if( echoParams == null ) {\n        throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\"Invalid value '\" + ep + \"' for \" + CommonParams.HEADER_ECHO_PARAMS \n            + \" parameter, use '\" + EchoParamStyle.EXPLICIT + \"' or '\" + EchoParamStyle.ALL + \"'\" );\n      }\n      if( echoParams == EchoParamStyle.EXPLICIT ) {\n        responseHeader.add(\"params\", req.getOriginalParams().toNamedList());\n      } else if( echoParams == EchoParamStyle.ALL ) {\n        responseHeader.add(\"params\", req.getParams().toNamedList());\n      }\n    }\n  }\n\n","sourceOld":"  public static void setResponseHeaderValues(SolrRequestHandler handler, SolrQueryRequest req, SolrQueryResponse rsp) {\n    // TODO should check that responseHeader has not been replaced by handler\n\tNamedList responseHeader = rsp.getResponseHeader();\n    final int qtime=(int)(rsp.getEndTime() - req.getStartTime());\n    int status = 0;\n    Exception exception = rsp.getException();\n    if( exception != null ){\n      if( exception instanceof SolrException )\n        status = ((SolrException)exception).code();\n      else\n        status = 500;\n    }\n    responseHeader.add(\"status\",status);\n    responseHeader.add(\"QTime\",qtime);\n    rsp.getToLog().add(\"status\",status);\n    rsp.getToLog().add(\"QTime\",qtime);\n    \n    SolrParams params = req.getParams();\n    if( params.getBool(CommonParams.HEADER_ECHO_HANDLER, false) ) {\n      responseHeader.add(\"handler\", handler.getName() );\n    }\n    \n    // Values for echoParams... false/true/all or false/explicit/all ???\n    String ep = params.get( CommonParams.HEADER_ECHO_PARAMS, null );\n    if( ep != null ) {\n      EchoParamStyle echoParams = EchoParamStyle.get( ep );\n      if( echoParams == null ) {\n        throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\"Invalid value '\" + ep + \"' for \" + CommonParams.HEADER_ECHO_PARAMS \n            + \" parameter, use '\" + EchoParamStyle.EXPLICIT + \"' or '\" + EchoParamStyle.ALL + \"'\" );\n      }\n      if( echoParams == EchoParamStyle.EXPLICIT ) {\n        responseHeader.add(\"params\", req.getOriginalParams().toNamedList());\n      } else if( echoParams == EchoParamStyle.ALL ) {\n        responseHeader.add(\"params\", req.getParams().toNamedList());\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1da8d55113b689b06716246649de6f62430f15c0","date":1453508340,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/core/SolrCore#setResponseHeaderValues(SolrRequestHandler,SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"/dev/null","sourceNew":"  public static void setResponseHeaderValues(SolrRequestHandler handler, SolrQueryRequest req, SolrQueryResponse rsp) {\n    // TODO should check that responseHeader has not been replaced by handler\n\tNamedList responseHeader = rsp.getResponseHeader();\n    final int qtime=(int)(rsp.getEndTime() - req.getStartTime());\n    int status = 0;\n    Exception exception = rsp.getException();\n    if( exception != null ){\n      if( exception instanceof SolrException )\n        status = ((SolrException)exception).code();\n      else\n        status = 500;\n    }\n    responseHeader.add(\"status\",status);\n    responseHeader.add(\"QTime\",qtime);\n    rsp.getToLog().add(\"status\",status);\n    rsp.getToLog().add(\"QTime\",qtime);\n    \n    SolrParams params = req.getParams();\n    if( params.getBool(CommonParams.HEADER_ECHO_HANDLER, false) ) {\n      responseHeader.add(\"handler\", handler.getName() );\n    }\n    \n    // Values for echoParams... false/true/all or false/explicit/all ???\n    String ep = params.get( CommonParams.HEADER_ECHO_PARAMS, null );\n    if( ep != null ) {\n      EchoParamStyle echoParams = EchoParamStyle.get( ep );\n      if( echoParams == null ) {\n        throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\"Invalid value '\" + ep + \"' for \" + CommonParams.HEADER_ECHO_PARAMS \n            + \" parameter, use '\" + EchoParamStyle.EXPLICIT + \"' or '\" + EchoParamStyle.ALL + \"'\" );\n      }\n      if( echoParams == EchoParamStyle.EXPLICIT ) {\n        responseHeader.add(\"params\", req.getOriginalParams().toNamedList());\n      } else if( echoParams == EchoParamStyle.ALL ) {\n        responseHeader.add(\"params\", req.getParams().toNamedList());\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"755f2f419306d7297c8feee10d1897addf4b2dd0","date":1294442354,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/core/SolrCore#setResponseHeaderValues(SolrRequestHandler,SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/src/java/org/apache/solr/core/SolrCore#setResponseHeaderValues(SolrRequestHandler,SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  public static void setResponseHeaderValues(SolrRequestHandler handler, SolrQueryRequest req, SolrQueryResponse rsp) {\n    // TODO should check that responseHeader has not been replaced by handler\n    NamedList<Object> responseHeader = rsp.getResponseHeader();\n    final int qtime=(int)(rsp.getEndTime() - req.getStartTime());\n    int status = 0;\n    Exception exception = rsp.getException();\n    if( exception != null ){\n      if( exception instanceof SolrException )\n        status = ((SolrException)exception).code();\n      else\n        status = 500;\n    }\n    responseHeader.add(\"status\",status);\n    responseHeader.add(\"QTime\",qtime);\n    rsp.getToLog().add(\"status\",status);\n    rsp.getToLog().add(\"QTime\",qtime);\n    \n    SolrParams params = req.getParams();\n    if( params.getBool(CommonParams.HEADER_ECHO_HANDLER, false) ) {\n      responseHeader.add(\"handler\", handler.getName() );\n    }\n    \n    // Values for echoParams... false/true/all or false/explicit/all ???\n    String ep = params.get( CommonParams.HEADER_ECHO_PARAMS, null );\n    if( ep != null ) {\n      EchoParamStyle echoParams = EchoParamStyle.get( ep );\n      if( echoParams == null ) {\n        throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\"Invalid value '\" + ep + \"' for \" + CommonParams.HEADER_ECHO_PARAMS \n            + \" parameter, use '\" + EchoParamStyle.EXPLICIT + \"' or '\" + EchoParamStyle.ALL + \"'\" );\n      }\n      if( echoParams == EchoParamStyle.EXPLICIT ) {\n        responseHeader.add(\"params\", req.getOriginalParams().toNamedList());\n      } else if( echoParams == EchoParamStyle.ALL ) {\n        responseHeader.add(\"params\", req.getParams().toNamedList());\n      }\n    }\n  }\n\n","sourceOld":"  public static void setResponseHeaderValues(SolrRequestHandler handler, SolrQueryRequest req, SolrQueryResponse rsp) {\n    // TODO should check that responseHeader has not been replaced by handler\n\tNamedList responseHeader = rsp.getResponseHeader();\n    final int qtime=(int)(rsp.getEndTime() - req.getStartTime());\n    int status = 0;\n    Exception exception = rsp.getException();\n    if( exception != null ){\n      if( exception instanceof SolrException )\n        status = ((SolrException)exception).code();\n      else\n        status = 500;\n    }\n    responseHeader.add(\"status\",status);\n    responseHeader.add(\"QTime\",qtime);\n    rsp.getToLog().add(\"status\",status);\n    rsp.getToLog().add(\"QTime\",qtime);\n    \n    SolrParams params = req.getParams();\n    if( params.getBool(CommonParams.HEADER_ECHO_HANDLER, false) ) {\n      responseHeader.add(\"handler\", handler.getName() );\n    }\n    \n    // Values for echoParams... false/true/all or false/explicit/all ???\n    String ep = params.get( CommonParams.HEADER_ECHO_PARAMS, null );\n    if( ep != null ) {\n      EchoParamStyle echoParams = EchoParamStyle.get( ep );\n      if( echoParams == null ) {\n        throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\"Invalid value '\" + ep + \"' for \" + CommonParams.HEADER_ECHO_PARAMS \n            + \" parameter, use '\" + EchoParamStyle.EXPLICIT + \"' or '\" + EchoParamStyle.ALL + \"'\" );\n      }\n      if( echoParams == EchoParamStyle.EXPLICIT ) {\n        responseHeader.add(\"params\", req.getOriginalParams().toNamedList());\n      } else if( echoParams == EchoParamStyle.ALL ) {\n        responseHeader.add(\"params\", req.getParams().toNamedList());\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"868da859b43505d9d2a023bfeae6dd0c795f5295","date":1294948401,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/core/SolrCore#setResponseHeaderValues(SolrRequestHandler,SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/src/java/org/apache/solr/core/SolrCore#setResponseHeaderValues(SolrRequestHandler,SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  public static void setResponseHeaderValues(SolrRequestHandler handler, SolrQueryRequest req, SolrQueryResponse rsp) {\n    // TODO should check that responseHeader has not been replaced by handler\n    NamedList<Object> responseHeader = rsp.getResponseHeader();\n    final int qtime=(int)(rsp.getEndTime() - req.getStartTime());\n    int status = 0;\n    Exception exception = rsp.getException();\n    if( exception != null ){\n      if( exception instanceof SolrException )\n        status = ((SolrException)exception).code();\n      else\n        status = 500;\n    }\n    responseHeader.add(\"status\",status);\n    responseHeader.add(\"QTime\",qtime);\n    rsp.getToLog().add(\"status\",status);\n    rsp.getToLog().add(\"QTime\",qtime);\n    \n    SolrParams params = req.getParams();\n    if( params.getBool(CommonParams.HEADER_ECHO_HANDLER, false) ) {\n      responseHeader.add(\"handler\", handler.getName() );\n    }\n    \n    // Values for echoParams... false/true/all or false/explicit/all ???\n    String ep = params.get( CommonParams.HEADER_ECHO_PARAMS, null );\n    if( ep != null ) {\n      EchoParamStyle echoParams = EchoParamStyle.get( ep );\n      if( echoParams == null ) {\n        throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\"Invalid value '\" + ep + \"' for \" + CommonParams.HEADER_ECHO_PARAMS \n            + \" parameter, use '\" + EchoParamStyle.EXPLICIT + \"' or '\" + EchoParamStyle.ALL + \"'\" );\n      }\n      if( echoParams == EchoParamStyle.EXPLICIT ) {\n        responseHeader.add(\"params\", req.getOriginalParams().toNamedList());\n      } else if( echoParams == EchoParamStyle.ALL ) {\n        responseHeader.add(\"params\", req.getParams().toNamedList());\n      }\n    }\n  }\n\n","sourceOld":"  public static void setResponseHeaderValues(SolrRequestHandler handler, SolrQueryRequest req, SolrQueryResponse rsp) {\n    // TODO should check that responseHeader has not been replaced by handler\n\tNamedList responseHeader = rsp.getResponseHeader();\n    final int qtime=(int)(rsp.getEndTime() - req.getStartTime());\n    int status = 0;\n    Exception exception = rsp.getException();\n    if( exception != null ){\n      if( exception instanceof SolrException )\n        status = ((SolrException)exception).code();\n      else\n        status = 500;\n    }\n    responseHeader.add(\"status\",status);\n    responseHeader.add(\"QTime\",qtime);\n    rsp.getToLog().add(\"status\",status);\n    rsp.getToLog().add(\"QTime\",qtime);\n    \n    SolrParams params = req.getParams();\n    if( params.getBool(CommonParams.HEADER_ECHO_HANDLER, false) ) {\n      responseHeader.add(\"handler\", handler.getName() );\n    }\n    \n    // Values for echoParams... false/true/all or false/explicit/all ???\n    String ep = params.get( CommonParams.HEADER_ECHO_PARAMS, null );\n    if( ep != null ) {\n      EchoParamStyle echoParams = EchoParamStyle.get( ep );\n      if( echoParams == null ) {\n        throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\"Invalid value '\" + ep + \"' for \" + CommonParams.HEADER_ECHO_PARAMS \n            + \" parameter, use '\" + EchoParamStyle.EXPLICIT + \"' or '\" + EchoParamStyle.ALL + \"'\" );\n      }\n      if( echoParams == EchoParamStyle.EXPLICIT ) {\n        responseHeader.add(\"params\", req.getOriginalParams().toNamedList());\n      } else if( echoParams == EchoParamStyle.ALL ) {\n        responseHeader.add(\"params\", req.getParams().toNamedList());\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/core/SolrCore#setResponseHeaderValues(SolrRequestHandler,SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/src/java/org/apache/solr/core/SolrCore#setResponseHeaderValues(SolrRequestHandler,SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  public static void setResponseHeaderValues(SolrRequestHandler handler, SolrQueryRequest req, SolrQueryResponse rsp) {\n    // TODO should check that responseHeader has not been replaced by handler\n    NamedList<Object> responseHeader = rsp.getResponseHeader();\n    final int qtime=(int)(rsp.getEndTime() - req.getStartTime());\n    int status = 0;\n    Exception exception = rsp.getException();\n    if( exception != null ){\n      if( exception instanceof SolrException )\n        status = ((SolrException)exception).code();\n      else\n        status = 500;\n    }\n    responseHeader.add(\"status\",status);\n    responseHeader.add(\"QTime\",qtime);\n    rsp.getToLog().add(\"status\",status);\n    rsp.getToLog().add(\"QTime\",qtime);\n    \n    SolrParams params = req.getParams();\n    if( params.getBool(CommonParams.HEADER_ECHO_HANDLER, false) ) {\n      responseHeader.add(\"handler\", handler.getName() );\n    }\n    \n    // Values for echoParams... false/true/all or false/explicit/all ???\n    String ep = params.get( CommonParams.HEADER_ECHO_PARAMS, null );\n    if( ep != null ) {\n      EchoParamStyle echoParams = EchoParamStyle.get( ep );\n      if( echoParams == null ) {\n        throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\"Invalid value '\" + ep + \"' for \" + CommonParams.HEADER_ECHO_PARAMS \n            + \" parameter, use '\" + EchoParamStyle.EXPLICIT + \"' or '\" + EchoParamStyle.ALL + \"'\" );\n      }\n      if( echoParams == EchoParamStyle.EXPLICIT ) {\n        responseHeader.add(\"params\", req.getOriginalParams().toNamedList());\n      } else if( echoParams == EchoParamStyle.ALL ) {\n        responseHeader.add(\"params\", req.getParams().toNamedList());\n      }\n    }\n  }\n\n","sourceOld":"  public static void setResponseHeaderValues(SolrRequestHandler handler, SolrQueryRequest req, SolrQueryResponse rsp) {\n    // TODO should check that responseHeader has not been replaced by handler\n\tNamedList responseHeader = rsp.getResponseHeader();\n    final int qtime=(int)(rsp.getEndTime() - req.getStartTime());\n    int status = 0;\n    Exception exception = rsp.getException();\n    if( exception != null ){\n      if( exception instanceof SolrException )\n        status = ((SolrException)exception).code();\n      else\n        status = 500;\n    }\n    responseHeader.add(\"status\",status);\n    responseHeader.add(\"QTime\",qtime);\n    rsp.getToLog().add(\"status\",status);\n    rsp.getToLog().add(\"QTime\",qtime);\n    \n    SolrParams params = req.getParams();\n    if( params.getBool(CommonParams.HEADER_ECHO_HANDLER, false) ) {\n      responseHeader.add(\"handler\", handler.getName() );\n    }\n    \n    // Values for echoParams... false/true/all or false/explicit/all ???\n    String ep = params.get( CommonParams.HEADER_ECHO_PARAMS, null );\n    if( ep != null ) {\n      EchoParamStyle echoParams = EchoParamStyle.get( ep );\n      if( echoParams == null ) {\n        throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\"Invalid value '\" + ep + \"' for \" + CommonParams.HEADER_ECHO_PARAMS \n            + \" parameter, use '\" + EchoParamStyle.EXPLICIT + \"' or '\" + EchoParamStyle.ALL + \"'\" );\n      }\n      if( echoParams == EchoParamStyle.EXPLICIT ) {\n        responseHeader.add(\"params\", req.getOriginalParams().toNamedList());\n      } else if( echoParams == EchoParamStyle.ALL ) {\n        responseHeader.add(\"params\", req.getParams().toNamedList());\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCore#setResponseHeaderValues(SolrRequestHandler,SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/src/java/org/apache/solr/core/SolrCore#setResponseHeaderValues(SolrRequestHandler,SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  public static void setResponseHeaderValues(SolrRequestHandler handler, SolrQueryRequest req, SolrQueryResponse rsp) {\n    // TODO should check that responseHeader has not been replaced by handler\n    NamedList<Object> responseHeader = rsp.getResponseHeader();\n    final int qtime=(int)(rsp.getEndTime() - req.getStartTime());\n    int status = 0;\n    Exception exception = rsp.getException();\n    if( exception != null ){\n      if( exception instanceof SolrException )\n        status = ((SolrException)exception).code();\n      else\n        status = 500;\n    }\n    responseHeader.add(\"status\",status);\n    responseHeader.add(\"QTime\",qtime);\n    rsp.getToLog().add(\"status\",status);\n    rsp.getToLog().add(\"QTime\",qtime);\n    \n    SolrParams params = req.getParams();\n    if( params.getBool(CommonParams.HEADER_ECHO_HANDLER, false) ) {\n      responseHeader.add(\"handler\", handler.getName() );\n    }\n    \n    // Values for echoParams... false/true/all or false/explicit/all ???\n    String ep = params.get( CommonParams.HEADER_ECHO_PARAMS, null );\n    if( ep != null ) {\n      EchoParamStyle echoParams = EchoParamStyle.get( ep );\n      if( echoParams == null ) {\n        throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\"Invalid value '\" + ep + \"' for \" + CommonParams.HEADER_ECHO_PARAMS \n            + \" parameter, use '\" + EchoParamStyle.EXPLICIT + \"' or '\" + EchoParamStyle.ALL + \"'\" );\n      }\n      if( echoParams == EchoParamStyle.EXPLICIT ) {\n        responseHeader.add(\"params\", req.getOriginalParams().toNamedList());\n      } else if( echoParams == EchoParamStyle.ALL ) {\n        responseHeader.add(\"params\", req.getParams().toNamedList());\n      }\n    }\n  }\n\n","sourceOld":"  public static void setResponseHeaderValues(SolrRequestHandler handler, SolrQueryRequest req, SolrQueryResponse rsp) {\n    // TODO should check that responseHeader has not been replaced by handler\n    NamedList<Object> responseHeader = rsp.getResponseHeader();\n    final int qtime=(int)(rsp.getEndTime() - req.getStartTime());\n    int status = 0;\n    Exception exception = rsp.getException();\n    if( exception != null ){\n      if( exception instanceof SolrException )\n        status = ((SolrException)exception).code();\n      else\n        status = 500;\n    }\n    responseHeader.add(\"status\",status);\n    responseHeader.add(\"QTime\",qtime);\n    rsp.getToLog().add(\"status\",status);\n    rsp.getToLog().add(\"QTime\",qtime);\n    \n    SolrParams params = req.getParams();\n    if( params.getBool(CommonParams.HEADER_ECHO_HANDLER, false) ) {\n      responseHeader.add(\"handler\", handler.getName() );\n    }\n    \n    // Values for echoParams... false/true/all or false/explicit/all ???\n    String ep = params.get( CommonParams.HEADER_ECHO_PARAMS, null );\n    if( ep != null ) {\n      EchoParamStyle echoParams = EchoParamStyle.get( ep );\n      if( echoParams == null ) {\n        throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\"Invalid value '\" + ep + \"' for \" + CommonParams.HEADER_ECHO_PARAMS \n            + \" parameter, use '\" + EchoParamStyle.EXPLICIT + \"' or '\" + EchoParamStyle.ALL + \"'\" );\n      }\n      if( echoParams == EchoParamStyle.EXPLICIT ) {\n        responseHeader.add(\"params\", req.getOriginalParams().toNamedList());\n      } else if( echoParams == EchoParamStyle.ALL ) {\n        responseHeader.add(\"params\", req.getParams().toNamedList());\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCore#setResponseHeaderValues(SolrRequestHandler,SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/src/java/org/apache/solr/core/SolrCore#setResponseHeaderValues(SolrRequestHandler,SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  public static void setResponseHeaderValues(SolrRequestHandler handler, SolrQueryRequest req, SolrQueryResponse rsp) {\n    // TODO should check that responseHeader has not been replaced by handler\n    NamedList<Object> responseHeader = rsp.getResponseHeader();\n    final int qtime=(int)(rsp.getEndTime() - req.getStartTime());\n    int status = 0;\n    Exception exception = rsp.getException();\n    if( exception != null ){\n      if( exception instanceof SolrException )\n        status = ((SolrException)exception).code();\n      else\n        status = 500;\n    }\n    responseHeader.add(\"status\",status);\n    responseHeader.add(\"QTime\",qtime);\n    rsp.getToLog().add(\"status\",status);\n    rsp.getToLog().add(\"QTime\",qtime);\n    \n    SolrParams params = req.getParams();\n    if( params.getBool(CommonParams.HEADER_ECHO_HANDLER, false) ) {\n      responseHeader.add(\"handler\", handler.getName() );\n    }\n    \n    // Values for echoParams... false/true/all or false/explicit/all ???\n    String ep = params.get( CommonParams.HEADER_ECHO_PARAMS, null );\n    if( ep != null ) {\n      EchoParamStyle echoParams = EchoParamStyle.get( ep );\n      if( echoParams == null ) {\n        throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\"Invalid value '\" + ep + \"' for \" + CommonParams.HEADER_ECHO_PARAMS \n            + \" parameter, use '\" + EchoParamStyle.EXPLICIT + \"' or '\" + EchoParamStyle.ALL + \"'\" );\n      }\n      if( echoParams == EchoParamStyle.EXPLICIT ) {\n        responseHeader.add(\"params\", req.getOriginalParams().toNamedList());\n      } else if( echoParams == EchoParamStyle.ALL ) {\n        responseHeader.add(\"params\", req.getParams().toNamedList());\n      }\n    }\n  }\n\n","sourceOld":"  public static void setResponseHeaderValues(SolrRequestHandler handler, SolrQueryRequest req, SolrQueryResponse rsp) {\n    // TODO should check that responseHeader has not been replaced by handler\n    NamedList<Object> responseHeader = rsp.getResponseHeader();\n    final int qtime=(int)(rsp.getEndTime() - req.getStartTime());\n    int status = 0;\n    Exception exception = rsp.getException();\n    if( exception != null ){\n      if( exception instanceof SolrException )\n        status = ((SolrException)exception).code();\n      else\n        status = 500;\n    }\n    responseHeader.add(\"status\",status);\n    responseHeader.add(\"QTime\",qtime);\n    rsp.getToLog().add(\"status\",status);\n    rsp.getToLog().add(\"QTime\",qtime);\n    \n    SolrParams params = req.getParams();\n    if( params.getBool(CommonParams.HEADER_ECHO_HANDLER, false) ) {\n      responseHeader.add(\"handler\", handler.getName() );\n    }\n    \n    // Values for echoParams... false/true/all or false/explicit/all ???\n    String ep = params.get( CommonParams.HEADER_ECHO_PARAMS, null );\n    if( ep != null ) {\n      EchoParamStyle echoParams = EchoParamStyle.get( ep );\n      if( echoParams == null ) {\n        throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\"Invalid value '\" + ep + \"' for \" + CommonParams.HEADER_ECHO_PARAMS \n            + \" parameter, use '\" + EchoParamStyle.EXPLICIT + \"' or '\" + EchoParamStyle.ALL + \"'\" );\n      }\n      if( echoParams == EchoParamStyle.EXPLICIT ) {\n        responseHeader.add(\"params\", req.getOriginalParams().toNamedList());\n      } else if( echoParams == EchoParamStyle.ALL ) {\n        responseHeader.add(\"params\", req.getParams().toNamedList());\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCore#setResponseHeaderValues(SolrRequestHandler,SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/src/java/org/apache/solr/core/SolrCore#setResponseHeaderValues(SolrRequestHandler,SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  public static void setResponseHeaderValues(SolrRequestHandler handler, SolrQueryRequest req, SolrQueryResponse rsp) {\n    // TODO should check that responseHeader has not been replaced by handler\n    NamedList<Object> responseHeader = rsp.getResponseHeader();\n    final int qtime=(int)(rsp.getEndTime() - req.getStartTime());\n    int status = 0;\n    Exception exception = rsp.getException();\n    if( exception != null ){\n      if( exception instanceof SolrException )\n        status = ((SolrException)exception).code();\n      else\n        status = 500;\n    }\n    responseHeader.add(\"status\",status);\n    responseHeader.add(\"QTime\",qtime);\n    rsp.getToLog().add(\"status\",status);\n    rsp.getToLog().add(\"QTime\",qtime);\n    \n    SolrParams params = req.getParams();\n    if( params.getBool(CommonParams.HEADER_ECHO_HANDLER, false) ) {\n      responseHeader.add(\"handler\", handler.getName() );\n    }\n    \n    // Values for echoParams... false/true/all or false/explicit/all ???\n    String ep = params.get( CommonParams.HEADER_ECHO_PARAMS, null );\n    if( ep != null ) {\n      EchoParamStyle echoParams = EchoParamStyle.get( ep );\n      if( echoParams == null ) {\n        throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\"Invalid value '\" + ep + \"' for \" + CommonParams.HEADER_ECHO_PARAMS \n            + \" parameter, use '\" + EchoParamStyle.EXPLICIT + \"' or '\" + EchoParamStyle.ALL + \"'\" );\n      }\n      if( echoParams == EchoParamStyle.EXPLICIT ) {\n        responseHeader.add(\"params\", req.getOriginalParams().toNamedList());\n      } else if( echoParams == EchoParamStyle.ALL ) {\n        responseHeader.add(\"params\", req.getParams().toNamedList());\n      }\n    }\n  }\n\n","sourceOld":"  public static void setResponseHeaderValues(SolrRequestHandler handler, SolrQueryRequest req, SolrQueryResponse rsp) {\n    // TODO should check that responseHeader has not been replaced by handler\n    NamedList<Object> responseHeader = rsp.getResponseHeader();\n    final int qtime=(int)(rsp.getEndTime() - req.getStartTime());\n    int status = 0;\n    Exception exception = rsp.getException();\n    if( exception != null ){\n      if( exception instanceof SolrException )\n        status = ((SolrException)exception).code();\n      else\n        status = 500;\n    }\n    responseHeader.add(\"status\",status);\n    responseHeader.add(\"QTime\",qtime);\n    rsp.getToLog().add(\"status\",status);\n    rsp.getToLog().add(\"QTime\",qtime);\n    \n    SolrParams params = req.getParams();\n    if( params.getBool(CommonParams.HEADER_ECHO_HANDLER, false) ) {\n      responseHeader.add(\"handler\", handler.getName() );\n    }\n    \n    // Values for echoParams... false/true/all or false/explicit/all ???\n    String ep = params.get( CommonParams.HEADER_ECHO_PARAMS, null );\n    if( ep != null ) {\n      EchoParamStyle echoParams = EchoParamStyle.get( ep );\n      if( echoParams == null ) {\n        throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\"Invalid value '\" + ep + \"' for \" + CommonParams.HEADER_ECHO_PARAMS \n            + \" parameter, use '\" + EchoParamStyle.EXPLICIT + \"' or '\" + EchoParamStyle.ALL + \"'\" );\n      }\n      if( echoParams == EchoParamStyle.EXPLICIT ) {\n        responseHeader.add(\"params\", req.getOriginalParams().toNamedList());\n      } else if( echoParams == EchoParamStyle.ALL ) {\n        responseHeader.add(\"params\", req.getParams().toNamedList());\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"c26f00b574427b55127e869b935845554afde1fa":["755f2f419306d7297c8feee10d1897addf4b2dd0","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"1da8d55113b689b06716246649de6f62430f15c0":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","ad94625fb8d088209f46650c8097196fec67f00c"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["755f2f419306d7297c8feee10d1897addf4b2dd0"],"755f2f419306d7297c8feee10d1897addf4b2dd0":["1da8d55113b689b06716246649de6f62430f15c0"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["1da8d55113b689b06716246649de6f62430f15c0","755f2f419306d7297c8feee10d1897addf4b2dd0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["755f2f419306d7297c8feee10d1897addf4b2dd0"],"ad94625fb8d088209f46650c8097196fec67f00c":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"868da859b43505d9d2a023bfeae6dd0c795f5295":["1da8d55113b689b06716246649de6f62430f15c0","755f2f419306d7297c8feee10d1897addf4b2dd0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c26f00b574427b55127e869b935845554afde1fa"]},"commit2Childs":{"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["1da8d55113b689b06716246649de6f62430f15c0"],"c26f00b574427b55127e869b935845554afde1fa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["ad94625fb8d088209f46650c8097196fec67f00c"],"1da8d55113b689b06716246649de6f62430f15c0":["755f2f419306d7297c8feee10d1897addf4b2dd0","29ef99d61cda9641b6250bf9567329a6e65f901d","868da859b43505d9d2a023bfeae6dd0c795f5295"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"755f2f419306d7297c8feee10d1897addf4b2dd0":["c26f00b574427b55127e869b935845554afde1fa","c903c3d15906a3da96b8c0c2fb704491005fdbdb","29ef99d61cda9641b6250bf9567329a6e65f901d","a258fbb26824fd104ed795e5d9033d2d040049ee","868da859b43505d9d2a023bfeae6dd0c795f5295"],"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"ad94625fb8d088209f46650c8097196fec67f00c":["1da8d55113b689b06716246649de6f62430f15c0"],"868da859b43505d9d2a023bfeae6dd0c795f5295":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["29ef99d61cda9641b6250bf9567329a6e65f901d","a258fbb26824fd104ed795e5d9033d2d040049ee","868da859b43505d9d2a023bfeae6dd0c795f5295","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}