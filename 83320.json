{"path":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/TestPerfTasksLogic#testIndexWriterSettings().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/TestPerfTasksLogic#testIndexWriterSettings().mjava","pathOld":"modules/benchmark/src/test/org/apache/lucene/benchmark/byTask/TestPerfTasksLogic#testIndexWriterSettings().mjava","sourceNew":"  /**\n   * Test that IndexWriter settings stick.\n   */\n  public void testIndexWriterSettings() throws Exception {\n    // 1. alg definition (required in every \"logic\" test)\n    String algLines[] = {\n        \"# ----- properties \",\n        \"content.source=org.apache.lucene.benchmark.byTask.feeds.LineDocSource\",\n        \"docs.file=\" + getReuters20LinesFile(),\n        \"content.source.log.step=3\",\n        \"ram.flush.mb=-1\",\n        \"max.buffered=2\",\n        \"compound=cmpnd:true:false\",\n        \"doc.term.vector=vector:false:true\",\n        \"content.source.forever=false\",\n        \"directory=RAMDirectory\",\n        \"doc.stored=false\",\n        \"merge.factor=3\",\n        \"doc.tokenized=false\",\n        \"debug.level=1\",\n        \"# ----- alg \",\n        \"{ \\\"Rounds\\\"\",\n        \"  ResetSystemErase\",\n        \"  CreateIndex\",\n        \"  { \\\"AddDocs\\\"  AddDoc > : * \",\n        \"  NewRound\",\n        \"} : 2\",\n    };\n\n    // 2. execute the algorithm  (required in every \"logic\" test)\n    Benchmark benchmark = execBenchmark(algLines);\n    final IndexWriter writer = benchmark.getRunData().getIndexWriter();\n    assertEquals(2, writer.getConfig().getMaxBufferedDocs());\n    assertEquals(IndexWriterConfig.DISABLE_AUTO_FLUSH, (int) writer.getConfig().getRAMBufferSizeMB());\n    assertEquals(3, ((LogMergePolicy) writer.getConfig().getMergePolicy()).getMergeFactor());\n    assertFalse(((LogMergePolicy) writer.getConfig().getMergePolicy()).getUseCompoundFile());\n    writer.close();\n    Directory dir = benchmark.getRunData().getDirectory();\n    IndexReader reader = IndexReader.open(dir);\n    Fields tfv = reader.getTermVectors(0);\n    assertNotNull(tfv);\n    assertTrue(tfv.size() > 0);\n    reader.close();\n  }\n\n","sourceOld":"  /**\n   * Test that IndexWriter settings stick.\n   */\n  public void testIndexWriterSettings() throws Exception {\n    // 1. alg definition (required in every \"logic\" test)\n    String algLines[] = {\n        \"# ----- properties \",\n        \"content.source=org.apache.lucene.benchmark.byTask.feeds.LineDocSource\",\n        \"docs.file=\" + getReuters20LinesFile(),\n        \"content.source.log.step=3\",\n        \"ram.flush.mb=-1\",\n        \"max.buffered=2\",\n        \"compound=cmpnd:true:false\",\n        \"doc.term.vector=vector:false:true\",\n        \"content.source.forever=false\",\n        \"directory=RAMDirectory\",\n        \"doc.stored=false\",\n        \"merge.factor=3\",\n        \"doc.tokenized=false\",\n        \"debug.level=1\",\n        \"# ----- alg \",\n        \"{ \\\"Rounds\\\"\",\n        \"  ResetSystemErase\",\n        \"  CreateIndex\",\n        \"  { \\\"AddDocs\\\"  AddDoc > : * \",\n        \"  NewRound\",\n        \"} : 2\",\n    };\n\n    // 2. execute the algorithm  (required in every \"logic\" test)\n    Benchmark benchmark = execBenchmark(algLines);\n    final IndexWriter writer = benchmark.getRunData().getIndexWriter();\n    assertEquals(2, writer.getConfig().getMaxBufferedDocs());\n    assertEquals(IndexWriterConfig.DISABLE_AUTO_FLUSH, (int) writer.getConfig().getRAMBufferSizeMB());\n    assertEquals(3, ((LogMergePolicy) writer.getConfig().getMergePolicy()).getMergeFactor());\n    assertFalse(((LogMergePolicy) writer.getConfig().getMergePolicy()).getUseCompoundFile());\n    writer.close();\n    Directory dir = benchmark.getRunData().getDirectory();\n    IndexReader reader = IndexReader.open(dir);\n    Fields tfv = reader.getTermVectors(0);\n    assertNotNull(tfv);\n    assertTrue(tfv.size() > 0);\n    reader.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f","date":1338430031,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/TestPerfTasksLogic#testIndexWriterSettings().mjava","pathOld":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/TestPerfTasksLogic#testIndexWriterSettings().mjava","sourceNew":"  /**\n   * Test that IndexWriter settings stick.\n   */\n  public void testIndexWriterSettings() throws Exception {\n    // 1. alg definition (required in every \"logic\" test)\n    String algLines[] = {\n        \"# ----- properties \",\n        \"content.source=org.apache.lucene.benchmark.byTask.feeds.LineDocSource\",\n        \"docs.file=\" + getReuters20LinesFile(),\n        \"content.source.log.step=3\",\n        \"ram.flush.mb=-1\",\n        \"max.buffered=2\",\n        \"compound=cmpnd:true:false\",\n        \"doc.term.vector=vector:false:true\",\n        \"content.source.forever=false\",\n        \"directory=RAMDirectory\",\n        \"doc.stored=false\",\n        \"merge.factor=3\",\n        \"doc.tokenized=false\",\n        \"debug.level=1\",\n        \"# ----- alg \",\n        \"{ \\\"Rounds\\\"\",\n        \"  ResetSystemErase\",\n        \"  CreateIndex\",\n        \"  { \\\"AddDocs\\\"  AddDoc > : * \",\n        \"  NewRound\",\n        \"} : 2\",\n    };\n\n    // 2. execute the algorithm  (required in every \"logic\" test)\n    Benchmark benchmark = execBenchmark(algLines);\n    final IndexWriter writer = benchmark.getRunData().getIndexWriter();\n    assertEquals(2, writer.getConfig().getMaxBufferedDocs());\n    assertEquals(IndexWriterConfig.DISABLE_AUTO_FLUSH, (int) writer.getConfig().getRAMBufferSizeMB());\n    assertEquals(3, ((LogMergePolicy) writer.getConfig().getMergePolicy()).getMergeFactor());\n    assertFalse(((LogMergePolicy) writer.getConfig().getMergePolicy()).getUseCompoundFile());\n    writer.close();\n    Directory dir = benchmark.getRunData().getDirectory();\n    IndexReader reader = DirectoryReader.open(dir);\n    Fields tfv = reader.getTermVectors(0);\n    assertNotNull(tfv);\n    assertTrue(tfv.size() > 0);\n    reader.close();\n  }\n\n","sourceOld":"  /**\n   * Test that IndexWriter settings stick.\n   */\n  public void testIndexWriterSettings() throws Exception {\n    // 1. alg definition (required in every \"logic\" test)\n    String algLines[] = {\n        \"# ----- properties \",\n        \"content.source=org.apache.lucene.benchmark.byTask.feeds.LineDocSource\",\n        \"docs.file=\" + getReuters20LinesFile(),\n        \"content.source.log.step=3\",\n        \"ram.flush.mb=-1\",\n        \"max.buffered=2\",\n        \"compound=cmpnd:true:false\",\n        \"doc.term.vector=vector:false:true\",\n        \"content.source.forever=false\",\n        \"directory=RAMDirectory\",\n        \"doc.stored=false\",\n        \"merge.factor=3\",\n        \"doc.tokenized=false\",\n        \"debug.level=1\",\n        \"# ----- alg \",\n        \"{ \\\"Rounds\\\"\",\n        \"  ResetSystemErase\",\n        \"  CreateIndex\",\n        \"  { \\\"AddDocs\\\"  AddDoc > : * \",\n        \"  NewRound\",\n        \"} : 2\",\n    };\n\n    // 2. execute the algorithm  (required in every \"logic\" test)\n    Benchmark benchmark = execBenchmark(algLines);\n    final IndexWriter writer = benchmark.getRunData().getIndexWriter();\n    assertEquals(2, writer.getConfig().getMaxBufferedDocs());\n    assertEquals(IndexWriterConfig.DISABLE_AUTO_FLUSH, (int) writer.getConfig().getRAMBufferSizeMB());\n    assertEquals(3, ((LogMergePolicy) writer.getConfig().getMergePolicy()).getMergeFactor());\n    assertFalse(((LogMergePolicy) writer.getConfig().getMergePolicy()).getUseCompoundFile());\n    writer.close();\n    Directory dir = benchmark.getRunData().getDirectory();\n    IndexReader reader = IndexReader.open(dir);\n    Fields tfv = reader.getTermVectors(0);\n    assertNotNull(tfv);\n    assertTrue(tfv.size() > 0);\n    reader.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"088a7ef694fd43d5d9a4d200c4005865f773d1e7","date":1371136274,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/TestPerfTasksLogic#testIndexWriterSettings().mjava","pathOld":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/TestPerfTasksLogic#testIndexWriterSettings().mjava","sourceNew":"  /**\n   * Test that IndexWriter settings stick.\n   */\n  public void testIndexWriterSettings() throws Exception {\n    // 1. alg definition (required in every \"logic\" test)\n    String algLines[] = {\n        \"# ----- properties \",\n        \"content.source=org.apache.lucene.benchmark.byTask.feeds.LineDocSource\",\n        \"docs.file=\" + getReuters20LinesFile(),\n        \"content.source.log.step=3\",\n        \"ram.flush.mb=-1\",\n        \"max.buffered=2\",\n        \"compound=cmpnd:true:false\",\n        \"doc.term.vector=vector:false:true\",\n        \"content.source.forever=false\",\n        \"directory=RAMDirectory\",\n        \"doc.stored=false\",\n        \"merge.factor=3\",\n        \"doc.tokenized=false\",\n        \"debug.level=1\",\n        \"# ----- alg \",\n        \"{ \\\"Rounds\\\"\",\n        \"  ResetSystemErase\",\n        \"  CreateIndex\",\n        \"  { \\\"AddDocs\\\"  AddDoc > : * \",\n        \"  NewRound\",\n        \"} : 2\",\n    };\n\n    // 2. execute the algorithm  (required in every \"logic\" test)\n    Benchmark benchmark = execBenchmark(algLines);\n    final IndexWriter writer = benchmark.getRunData().getIndexWriter();\n    assertEquals(2, writer.getConfig().getMaxBufferedDocs());\n    assertEquals(IndexWriterConfig.DISABLE_AUTO_FLUSH, (int) writer.getConfig().getRAMBufferSizeMB());\n    assertEquals(3, ((LogMergePolicy) writer.getConfig().getMergePolicy()).getMergeFactor());\n    assertEquals(0.0d, writer.getConfig().getMergePolicy().getNoCFSRatio(), 0.0);\n    writer.close();\n    Directory dir = benchmark.getRunData().getDirectory();\n    IndexReader reader = DirectoryReader.open(dir);\n    Fields tfv = reader.getTermVectors(0);\n    assertNotNull(tfv);\n    assertTrue(tfv.size() > 0);\n    reader.close();\n  }\n\n","sourceOld":"  /**\n   * Test that IndexWriter settings stick.\n   */\n  public void testIndexWriterSettings() throws Exception {\n    // 1. alg definition (required in every \"logic\" test)\n    String algLines[] = {\n        \"# ----- properties \",\n        \"content.source=org.apache.lucene.benchmark.byTask.feeds.LineDocSource\",\n        \"docs.file=\" + getReuters20LinesFile(),\n        \"content.source.log.step=3\",\n        \"ram.flush.mb=-1\",\n        \"max.buffered=2\",\n        \"compound=cmpnd:true:false\",\n        \"doc.term.vector=vector:false:true\",\n        \"content.source.forever=false\",\n        \"directory=RAMDirectory\",\n        \"doc.stored=false\",\n        \"merge.factor=3\",\n        \"doc.tokenized=false\",\n        \"debug.level=1\",\n        \"# ----- alg \",\n        \"{ \\\"Rounds\\\"\",\n        \"  ResetSystemErase\",\n        \"  CreateIndex\",\n        \"  { \\\"AddDocs\\\"  AddDoc > : * \",\n        \"  NewRound\",\n        \"} : 2\",\n    };\n\n    // 2. execute the algorithm  (required in every \"logic\" test)\n    Benchmark benchmark = execBenchmark(algLines);\n    final IndexWriter writer = benchmark.getRunData().getIndexWriter();\n    assertEquals(2, writer.getConfig().getMaxBufferedDocs());\n    assertEquals(IndexWriterConfig.DISABLE_AUTO_FLUSH, (int) writer.getConfig().getRAMBufferSizeMB());\n    assertEquals(3, ((LogMergePolicy) writer.getConfig().getMergePolicy()).getMergeFactor());\n    assertFalse(((LogMergePolicy) writer.getConfig().getMergePolicy()).getUseCompoundFile());\n    writer.close();\n    Directory dir = benchmark.getRunData().getDirectory();\n    IndexReader reader = DirectoryReader.open(dir);\n    Fields tfv = reader.getTermVectors(0);\n    assertNotNull(tfv);\n    assertTrue(tfv.size() > 0);\n    reader.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"19275ba31e621f6da1b83bf13af75233876fd3d4","date":1374846698,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/TestPerfTasksLogic#testIndexWriterSettings().mjava","pathOld":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/TestPerfTasksLogic#testIndexWriterSettings().mjava","sourceNew":"  /**\n   * Test that IndexWriter settings stick.\n   */\n  public void testIndexWriterSettings() throws Exception {\n    // 1. alg definition (required in every \"logic\" test)\n    String algLines[] = {\n        \"# ----- properties \",\n        \"content.source=org.apache.lucene.benchmark.byTask.feeds.LineDocSource\",\n        \"docs.file=\" + getReuters20LinesFile(),\n        \"content.source.log.step=3\",\n        \"ram.flush.mb=-1\",\n        \"max.buffered=2\",\n        \"compound=cmpnd:true:false\",\n        \"doc.term.vector=vector:false:true\",\n        \"content.source.forever=false\",\n        \"directory=RAMDirectory\",\n        \"doc.stored=false\",\n        \"merge.factor=3\",\n        \"doc.tokenized=false\",\n        \"debug.level=1\",\n        \"# ----- alg \",\n        \"{ \\\"Rounds\\\"\",\n        \"  ResetSystemErase\",\n        \"  CreateIndex\",\n        \"  { \\\"AddDocs\\\"  AddDoc > : * \",\n        \"  NewRound\",\n        \"} : 2\",\n    };\n\n    // 2. execute the algorithm  (required in every \"logic\" test)\n    Benchmark benchmark = execBenchmark(algLines);\n    final IndexWriter writer = benchmark.getRunData().getIndexWriter();\n    assertEquals(2, writer.getConfig().getMaxBufferedDocs());\n    assertEquals(IndexWriterConfig.DISABLE_AUTO_FLUSH, (int) writer.getConfig().getRAMBufferSizeMB());\n    assertEquals(3, ((LogMergePolicy) writer.getConfig().getMergePolicy()).getMergeFactor());\n    assertEquals(0.0d, writer.getConfig().getMergePolicy().getNoCFSRatio(), 0.0);\n    writer.close();\n    Directory dir = benchmark.getRunData().getDirectory();\n    IndexReader reader = DirectoryReader.open(dir);\n    Fields tfv = reader.getTermVectors(0);\n    assertNotNull(tfv);\n    assertTrue(tfv.size() > 0);\n    reader.close();\n  }\n\n","sourceOld":"  /**\n   * Test that IndexWriter settings stick.\n   */\n  public void testIndexWriterSettings() throws Exception {\n    // 1. alg definition (required in every \"logic\" test)\n    String algLines[] = {\n        \"# ----- properties \",\n        \"content.source=org.apache.lucene.benchmark.byTask.feeds.LineDocSource\",\n        \"docs.file=\" + getReuters20LinesFile(),\n        \"content.source.log.step=3\",\n        \"ram.flush.mb=-1\",\n        \"max.buffered=2\",\n        \"compound=cmpnd:true:false\",\n        \"doc.term.vector=vector:false:true\",\n        \"content.source.forever=false\",\n        \"directory=RAMDirectory\",\n        \"doc.stored=false\",\n        \"merge.factor=3\",\n        \"doc.tokenized=false\",\n        \"debug.level=1\",\n        \"# ----- alg \",\n        \"{ \\\"Rounds\\\"\",\n        \"  ResetSystemErase\",\n        \"  CreateIndex\",\n        \"  { \\\"AddDocs\\\"  AddDoc > : * \",\n        \"  NewRound\",\n        \"} : 2\",\n    };\n\n    // 2. execute the algorithm  (required in every \"logic\" test)\n    Benchmark benchmark = execBenchmark(algLines);\n    final IndexWriter writer = benchmark.getRunData().getIndexWriter();\n    assertEquals(2, writer.getConfig().getMaxBufferedDocs());\n    assertEquals(IndexWriterConfig.DISABLE_AUTO_FLUSH, (int) writer.getConfig().getRAMBufferSizeMB());\n    assertEquals(3, ((LogMergePolicy) writer.getConfig().getMergePolicy()).getMergeFactor());\n    assertEquals(0.0d, writer.getConfig().getMergePolicy().getNoCFSRatio(), 0.0);\n    writer.close();\n    Directory dir = benchmark.getRunData().getDirectory();\n    IndexReader reader = DirectoryReader.open(dir);\n    Fields tfv = reader.getTermVectors(0);\n    assertNotNull(tfv);\n    assertTrue(tfv.size() > 0);\n    reader.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","date":1376366778,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/TestPerfTasksLogic#testIndexWriterSettings().mjava","pathOld":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/TestPerfTasksLogic#testIndexWriterSettings().mjava","sourceNew":"  /**\n   * Test that IndexWriter settings stick.\n   */\n  public void testIndexWriterSettings() throws Exception {\n    // 1. alg definition (required in every \"logic\" test)\n    String algLines[] = {\n        \"# ----- properties \",\n        \"content.source=org.apache.lucene.benchmark.byTask.feeds.LineDocSource\",\n        \"docs.file=\" + getReuters20LinesFile(),\n        \"content.source.log.step=3\",\n        \"ram.flush.mb=-1\",\n        \"max.buffered=2\",\n        \"compound=cmpnd:true:false\",\n        \"doc.term.vector=vector:false:true\",\n        \"content.source.forever=false\",\n        \"directory=RAMDirectory\",\n        \"doc.stored=false\",\n        \"merge.factor=3\",\n        \"doc.tokenized=false\",\n        \"debug.level=1\",\n        \"# ----- alg \",\n        \"{ \\\"Rounds\\\"\",\n        \"  ResetSystemErase\",\n        \"  CreateIndex\",\n        \"  { \\\"AddDocs\\\"  AddDoc > : * \",\n        \"  NewRound\",\n        \"} : 2\",\n    };\n\n    // 2. execute the algorithm  (required in every \"logic\" test)\n    Benchmark benchmark = execBenchmark(algLines);\n    final IndexWriter writer = benchmark.getRunData().getIndexWriter();\n    assertEquals(2, writer.getConfig().getMaxBufferedDocs());\n    assertEquals(IndexWriterConfig.DISABLE_AUTO_FLUSH, (int) writer.getConfig().getRAMBufferSizeMB());\n    assertEquals(3, ((LogMergePolicy) writer.getConfig().getMergePolicy()).getMergeFactor());\n    assertEquals(0.0d, writer.getConfig().getMergePolicy().getNoCFSRatio(), 0.0);\n    writer.close();\n    Directory dir = benchmark.getRunData().getDirectory();\n    IndexReader reader = DirectoryReader.open(dir);\n    Fields tfv = reader.getTermVectors(0);\n    assertNotNull(tfv);\n    assertTrue(tfv.size() > 0);\n    reader.close();\n  }\n\n","sourceOld":"  /**\n   * Test that IndexWriter settings stick.\n   */\n  public void testIndexWriterSettings() throws Exception {\n    // 1. alg definition (required in every \"logic\" test)\n    String algLines[] = {\n        \"# ----- properties \",\n        \"content.source=org.apache.lucene.benchmark.byTask.feeds.LineDocSource\",\n        \"docs.file=\" + getReuters20LinesFile(),\n        \"content.source.log.step=3\",\n        \"ram.flush.mb=-1\",\n        \"max.buffered=2\",\n        \"compound=cmpnd:true:false\",\n        \"doc.term.vector=vector:false:true\",\n        \"content.source.forever=false\",\n        \"directory=RAMDirectory\",\n        \"doc.stored=false\",\n        \"merge.factor=3\",\n        \"doc.tokenized=false\",\n        \"debug.level=1\",\n        \"# ----- alg \",\n        \"{ \\\"Rounds\\\"\",\n        \"  ResetSystemErase\",\n        \"  CreateIndex\",\n        \"  { \\\"AddDocs\\\"  AddDoc > : * \",\n        \"  NewRound\",\n        \"} : 2\",\n    };\n\n    // 2. execute the algorithm  (required in every \"logic\" test)\n    Benchmark benchmark = execBenchmark(algLines);\n    final IndexWriter writer = benchmark.getRunData().getIndexWriter();\n    assertEquals(2, writer.getConfig().getMaxBufferedDocs());\n    assertEquals(IndexWriterConfig.DISABLE_AUTO_FLUSH, (int) writer.getConfig().getRAMBufferSizeMB());\n    assertEquals(3, ((LogMergePolicy) writer.getConfig().getMergePolicy()).getMergeFactor());\n    assertEquals(0.0d, writer.getConfig().getMergePolicy().getNoCFSRatio(), 0.0);\n    writer.close();\n    Directory dir = benchmark.getRunData().getDirectory();\n    IndexReader reader = DirectoryReader.open(dir);\n    Fields tfv = reader.getTermVectors(0);\n    assertNotNull(tfv);\n    assertTrue(tfv.size() > 0);\n    reader.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/TestPerfTasksLogic#testIndexWriterSettings().mjava","pathOld":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/TestPerfTasksLogic#testIndexWriterSettings().mjava","sourceNew":"  /**\n   * Test that IndexWriter settings stick.\n   */\n  public void testIndexWriterSettings() throws Exception {\n    // 1. alg definition (required in every \"logic\" test)\n    String algLines[] = {\n        \"# ----- properties \",\n        \"content.source=org.apache.lucene.benchmark.byTask.feeds.LineDocSource\",\n        \"docs.file=\" + getReuters20LinesFile(),\n        \"content.source.log.step=3\",\n        \"ram.flush.mb=-1\",\n        \"max.buffered=2\",\n        \"compound=cmpnd:true:false\",\n        \"doc.term.vector=vector:false:true\",\n        \"content.source.forever=false\",\n        \"directory=RAMDirectory\",\n        \"doc.stored=false\",\n        \"merge.factor=3\",\n        \"doc.tokenized=false\",\n        \"debug.level=1\",\n        \"# ----- alg \",\n        \"{ \\\"Rounds\\\"\",\n        \"  ResetSystemErase\",\n        \"  CreateIndex\",\n        \"  { \\\"AddDocs\\\"  AddDoc > : * \",\n        \"  NewRound\",\n        \"} : 2\",\n    };\n\n    // 2. execute the algorithm  (required in every \"logic\" test)\n    Benchmark benchmark = execBenchmark(algLines);\n    final IndexWriter writer = benchmark.getRunData().getIndexWriter();\n    assertEquals(2, writer.getConfig().getMaxBufferedDocs());\n    assertEquals(IndexWriterConfig.DISABLE_AUTO_FLUSH, (int) writer.getConfig().getRAMBufferSizeMB());\n    assertEquals(3, ((LogMergePolicy) writer.getConfig().getMergePolicy()).getMergeFactor());\n    assertEquals(0.0d, writer.getConfig().getMergePolicy().getNoCFSRatio(), 0.0);\n    writer.shutdown();\n    Directory dir = benchmark.getRunData().getDirectory();\n    IndexReader reader = DirectoryReader.open(dir);\n    Fields tfv = reader.getTermVectors(0);\n    assertNotNull(tfv);\n    assertTrue(tfv.size() > 0);\n    reader.close();\n  }\n\n","sourceOld":"  /**\n   * Test that IndexWriter settings stick.\n   */\n  public void testIndexWriterSettings() throws Exception {\n    // 1. alg definition (required in every \"logic\" test)\n    String algLines[] = {\n        \"# ----- properties \",\n        \"content.source=org.apache.lucene.benchmark.byTask.feeds.LineDocSource\",\n        \"docs.file=\" + getReuters20LinesFile(),\n        \"content.source.log.step=3\",\n        \"ram.flush.mb=-1\",\n        \"max.buffered=2\",\n        \"compound=cmpnd:true:false\",\n        \"doc.term.vector=vector:false:true\",\n        \"content.source.forever=false\",\n        \"directory=RAMDirectory\",\n        \"doc.stored=false\",\n        \"merge.factor=3\",\n        \"doc.tokenized=false\",\n        \"debug.level=1\",\n        \"# ----- alg \",\n        \"{ \\\"Rounds\\\"\",\n        \"  ResetSystemErase\",\n        \"  CreateIndex\",\n        \"  { \\\"AddDocs\\\"  AddDoc > : * \",\n        \"  NewRound\",\n        \"} : 2\",\n    };\n\n    // 2. execute the algorithm  (required in every \"logic\" test)\n    Benchmark benchmark = execBenchmark(algLines);\n    final IndexWriter writer = benchmark.getRunData().getIndexWriter();\n    assertEquals(2, writer.getConfig().getMaxBufferedDocs());\n    assertEquals(IndexWriterConfig.DISABLE_AUTO_FLUSH, (int) writer.getConfig().getRAMBufferSizeMB());\n    assertEquals(3, ((LogMergePolicy) writer.getConfig().getMergePolicy()).getMergeFactor());\n    assertEquals(0.0d, writer.getConfig().getMergePolicy().getNoCFSRatio(), 0.0);\n    writer.close();\n    Directory dir = benchmark.getRunData().getDirectory();\n    IndexReader reader = DirectoryReader.open(dir);\n    Fields tfv = reader.getTermVectors(0);\n    assertNotNull(tfv);\n    assertTrue(tfv.size() > 0);\n    reader.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/TestPerfTasksLogic#testIndexWriterSettings().mjava","pathOld":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/TestPerfTasksLogic#testIndexWriterSettings().mjava","sourceNew":"  /**\n   * Test that IndexWriter settings stick.\n   */\n  public void testIndexWriterSettings() throws Exception {\n    // 1. alg definition (required in every \"logic\" test)\n    String algLines[] = {\n        \"# ----- properties \",\n        \"content.source=org.apache.lucene.benchmark.byTask.feeds.LineDocSource\",\n        \"docs.file=\" + getReuters20LinesFile(),\n        \"content.source.log.step=3\",\n        \"ram.flush.mb=-1\",\n        \"max.buffered=2\",\n        \"compound=cmpnd:true:false\",\n        \"doc.term.vector=vector:false:true\",\n        \"content.source.forever=false\",\n        \"directory=RAMDirectory\",\n        \"doc.stored=false\",\n        \"merge.factor=3\",\n        \"doc.tokenized=false\",\n        \"debug.level=1\",\n        \"# ----- alg \",\n        \"{ \\\"Rounds\\\"\",\n        \"  ResetSystemErase\",\n        \"  CreateIndex\",\n        \"  { \\\"AddDocs\\\"  AddDoc > : * \",\n        \"  NewRound\",\n        \"} : 2\",\n    };\n\n    // 2. execute the algorithm  (required in every \"logic\" test)\n    Benchmark benchmark = execBenchmark(algLines);\n    final IndexWriter writer = benchmark.getRunData().getIndexWriter();\n    assertEquals(2, writer.getConfig().getMaxBufferedDocs());\n    assertEquals(IndexWriterConfig.DISABLE_AUTO_FLUSH, (int) writer.getConfig().getRAMBufferSizeMB());\n    assertEquals(3, ((LogMergePolicy) writer.getConfig().getMergePolicy()).getMergeFactor());\n    assertEquals(0.0d, writer.getConfig().getMergePolicy().getNoCFSRatio(), 0.0);\n    writer.close();\n    Directory dir = benchmark.getRunData().getDirectory();\n    IndexReader reader = DirectoryReader.open(dir);\n    Fields tfv = reader.getTermVectors(0);\n    assertNotNull(tfv);\n    assertTrue(tfv.size() > 0);\n    reader.close();\n  }\n\n","sourceOld":"  /**\n   * Test that IndexWriter settings stick.\n   */\n  public void testIndexWriterSettings() throws Exception {\n    // 1. alg definition (required in every \"logic\" test)\n    String algLines[] = {\n        \"# ----- properties \",\n        \"content.source=org.apache.lucene.benchmark.byTask.feeds.LineDocSource\",\n        \"docs.file=\" + getReuters20LinesFile(),\n        \"content.source.log.step=3\",\n        \"ram.flush.mb=-1\",\n        \"max.buffered=2\",\n        \"compound=cmpnd:true:false\",\n        \"doc.term.vector=vector:false:true\",\n        \"content.source.forever=false\",\n        \"directory=RAMDirectory\",\n        \"doc.stored=false\",\n        \"merge.factor=3\",\n        \"doc.tokenized=false\",\n        \"debug.level=1\",\n        \"# ----- alg \",\n        \"{ \\\"Rounds\\\"\",\n        \"  ResetSystemErase\",\n        \"  CreateIndex\",\n        \"  { \\\"AddDocs\\\"  AddDoc > : * \",\n        \"  NewRound\",\n        \"} : 2\",\n    };\n\n    // 2. execute the algorithm  (required in every \"logic\" test)\n    Benchmark benchmark = execBenchmark(algLines);\n    final IndexWriter writer = benchmark.getRunData().getIndexWriter();\n    assertEquals(2, writer.getConfig().getMaxBufferedDocs());\n    assertEquals(IndexWriterConfig.DISABLE_AUTO_FLUSH, (int) writer.getConfig().getRAMBufferSizeMB());\n    assertEquals(3, ((LogMergePolicy) writer.getConfig().getMergePolicy()).getMergeFactor());\n    assertEquals(0.0d, writer.getConfig().getMergePolicy().getNoCFSRatio(), 0.0);\n    writer.shutdown();\n    Directory dir = benchmark.getRunData().getDirectory();\n    IndexReader reader = DirectoryReader.open(dir);\n    Fields tfv = reader.getTermVectors(0);\n    assertNotNull(tfv);\n    assertTrue(tfv.size() > 0);\n    reader.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d77dafd89756a5161d244985903e3487ca109182","date":1548679743,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/TestPerfTasksLogic#testIndexWriterSettings().mjava","pathOld":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/TestPerfTasksLogic#testIndexWriterSettings().mjava","sourceNew":"  /**\n   * Test that IndexWriter settings stick.\n   */\n  public void testIndexWriterSettings() throws Exception {\n    // 1. alg definition (required in every \"logic\" test)\n    String algLines[] = {\n        \"# ----- properties \",\n        \"content.source=org.apache.lucene.benchmark.byTask.feeds.LineDocSource\",\n        \"docs.file=\" + getReuters20LinesFile(),\n        \"content.source.log.step=3\",\n        \"ram.flush.mb=-1\",\n        \"max.buffered=2\",\n        \"compound=cmpnd:true:false\",\n        \"doc.term.vector=vector:false:true\",\n        \"content.source.forever=false\",\n        \"directory=ByteBuffersDirectory\",\n        \"doc.stored=false\",\n        \"merge.factor=3\",\n        \"doc.tokenized=false\",\n        \"debug.level=1\",\n        \"# ----- alg \",\n        \"{ \\\"Rounds\\\"\",\n        \"  ResetSystemErase\",\n        \"  CreateIndex\",\n        \"  { \\\"AddDocs\\\"  AddDoc > : * \",\n        \"  NewRound\",\n        \"} : 2\",\n    };\n\n    // 2. execute the algorithm  (required in every \"logic\" test)\n    Benchmark benchmark = execBenchmark(algLines);\n    final IndexWriter writer = benchmark.getRunData().getIndexWriter();\n    assertEquals(2, writer.getConfig().getMaxBufferedDocs());\n    assertEquals(IndexWriterConfig.DISABLE_AUTO_FLUSH, (int) writer.getConfig().getRAMBufferSizeMB());\n    assertEquals(3, ((LogMergePolicy) writer.getConfig().getMergePolicy()).getMergeFactor());\n    assertEquals(0.0d, writer.getConfig().getMergePolicy().getNoCFSRatio(), 0.0);\n    writer.close();\n    Directory dir = benchmark.getRunData().getDirectory();\n    IndexReader reader = DirectoryReader.open(dir);\n    Fields tfv = reader.getTermVectors(0);\n    assertNotNull(tfv);\n    assertTrue(tfv.size() > 0);\n    reader.close();\n  }\n\n","sourceOld":"  /**\n   * Test that IndexWriter settings stick.\n   */\n  public void testIndexWriterSettings() throws Exception {\n    // 1. alg definition (required in every \"logic\" test)\n    String algLines[] = {\n        \"# ----- properties \",\n        \"content.source=org.apache.lucene.benchmark.byTask.feeds.LineDocSource\",\n        \"docs.file=\" + getReuters20LinesFile(),\n        \"content.source.log.step=3\",\n        \"ram.flush.mb=-1\",\n        \"max.buffered=2\",\n        \"compound=cmpnd:true:false\",\n        \"doc.term.vector=vector:false:true\",\n        \"content.source.forever=false\",\n        \"directory=RAMDirectory\",\n        \"doc.stored=false\",\n        \"merge.factor=3\",\n        \"doc.tokenized=false\",\n        \"debug.level=1\",\n        \"# ----- alg \",\n        \"{ \\\"Rounds\\\"\",\n        \"  ResetSystemErase\",\n        \"  CreateIndex\",\n        \"  { \\\"AddDocs\\\"  AddDoc > : * \",\n        \"  NewRound\",\n        \"} : 2\",\n    };\n\n    // 2. execute the algorithm  (required in every \"logic\" test)\n    Benchmark benchmark = execBenchmark(algLines);\n    final IndexWriter writer = benchmark.getRunData().getIndexWriter();\n    assertEquals(2, writer.getConfig().getMaxBufferedDocs());\n    assertEquals(IndexWriterConfig.DISABLE_AUTO_FLUSH, (int) writer.getConfig().getRAMBufferSizeMB());\n    assertEquals(3, ((LogMergePolicy) writer.getConfig().getMergePolicy()).getMergeFactor());\n    assertEquals(0.0d, writer.getConfig().getMergePolicy().getNoCFSRatio(), 0.0);\n    writer.close();\n    Directory dir = benchmark.getRunData().getDirectory();\n    IndexReader reader = DirectoryReader.open(dir);\n    Fields tfv = reader.getTermVectors(0);\n    assertNotNull(tfv);\n    assertTrue(tfv.size() > 0);\n    reader.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"088a7ef694fd43d5d9a4d200c4005865f773d1e7":["e7e8d6f15900ee22ac3cb0a503f15dc952a3580f"],"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d0ef034a4f10871667ae75181537775ddcf8ade4":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":["088a7ef694fd43d5d9a4d200c4005865f773d1e7"],"d77dafd89756a5161d244985903e3487ca109182":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["19275ba31e621f6da1b83bf13af75233876fd3d4"],"19275ba31e621f6da1b83bf13af75233876fd3d4":["088a7ef694fd43d5d9a4d200c4005865f773d1e7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d77dafd89756a5161d244985903e3487ca109182"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["e7e8d6f15900ee22ac3cb0a503f15dc952a3580f"],"088a7ef694fd43d5d9a4d200c4005865f773d1e7":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","19275ba31e621f6da1b83bf13af75233876fd3d4"],"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f":["088a7ef694fd43d5d9a4d200c4005865f773d1e7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["d77dafd89756a5161d244985903e3487ca109182"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":[],"d77dafd89756a5161d244985903e3487ca109182":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"19275ba31e621f6da1b83bf13af75233876fd3d4":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}