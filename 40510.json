{"path":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#copyMinFullSetup(File).mjava","commits":[{"id":"e0571cb12a71d379cc6bd0d3b70fe1d8867a109d","date":1377475564,"type":0,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#copyMinFullSetup(File).mjava","pathOld":"/dev/null","sourceNew":"  // Creates minimal full setup, including the old solr.xml file that used to be hard coded in COnfigSolrXmlOld\n  public static void copyMinFullSetup(File dstRoot) throws IOException {\n    if (! dstRoot.exists()) {\n      assertTrue(\"Failed to make subdirectory \", dstRoot.mkdirs());\n    }\n    File xmlF = new File(SolrTestCaseJ4.TEST_HOME(), \"solr.xml\");\n    FileUtils.copyFile(xmlF, new File(dstRoot, \"solr.xml\"));\n    copyMinConf(dstRoot);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["83fbfcaab6a6cd5daf32752c0c35f0e0c15380e0"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3dffec77fb8f7d0e9ca4869dddd6af94528b4576","date":1377875202,"type":0,"author":"Han Jiang","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#copyMinFullSetup(File).mjava","pathOld":"/dev/null","sourceNew":"  // Creates minimal full setup, including the old solr.xml file that used to be hard coded in COnfigSolrXmlOld\n  public static void copyMinFullSetup(File dstRoot) throws IOException {\n    if (! dstRoot.exists()) {\n      assertTrue(\"Failed to make subdirectory \", dstRoot.mkdirs());\n    }\n    File xmlF = new File(SolrTestCaseJ4.TEST_HOME(), \"solr.xml\");\n    FileUtils.copyFile(xmlF, new File(dstRoot, \"solr.xml\"));\n    copyMinConf(dstRoot);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"83fbfcaab6a6cd5daf32752c0c35f0e0c15380e0","date":1377955248,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#copyMinFullSetup(File).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#copyMinFullSetup(File).mjava","sourceNew":"  // Creates minimal full setup, including the old solr.xml file that used to be hard coded in ConfigSolrXmlOld\n  // TODO: remove for 5.0\n  public static void copyMinFullSetup(File dstRoot) throws IOException {\n    if (! dstRoot.exists()) {\n      assertTrue(\"Failed to make subdirectory \", dstRoot.mkdirs());\n    }\n    File xmlF = new File(SolrTestCaseJ4.TEST_HOME(), \"solr.xml\");\n    FileUtils.copyFile(xmlF, new File(dstRoot, \"solr.xml\"));\n    copyMinConf(dstRoot);\n  }\n\n","sourceOld":"  // Creates minimal full setup, including the old solr.xml file that used to be hard coded in COnfigSolrXmlOld\n  public static void copyMinFullSetup(File dstRoot) throws IOException {\n    if (! dstRoot.exists()) {\n      assertTrue(\"Failed to make subdirectory \", dstRoot.mkdirs());\n    }\n    File xmlF = new File(SolrTestCaseJ4.TEST_HOME(), \"solr.xml\");\n    FileUtils.copyFile(xmlF, new File(dstRoot, \"solr.xml\"));\n    copyMinConf(dstRoot);\n  }\n\n","bugFix":["e0571cb12a71d379cc6bd0d3b70fe1d8867a109d"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9435d55e3ea95c5d94406d3affc36f9505b6a736","date":1491251232,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#copyMinFullSetup(File).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#copyMinFullSetup(File).mjava","sourceNew":"  // Creates minimal full setup, including solr.xml\n  public static void copyMinFullSetup(File dstRoot) throws IOException {\n    if (! dstRoot.exists()) {\n      assertTrue(\"Failed to make subdirectory \", dstRoot.mkdirs());\n    }\n    File xmlF = new File(SolrTestCaseJ4.TEST_HOME(), \"solr.xml\");\n    FileUtils.copyFile(xmlF, new File(dstRoot, \"solr.xml\"));\n    copyMinConf(dstRoot);\n  }\n\n","sourceOld":"  // Creates minimal full setup, including the old solr.xml file that used to be hard coded in ConfigSolrXmlOld\n  // TODO: remove for 5.0\n  public static void copyMinFullSetup(File dstRoot) throws IOException {\n    if (! dstRoot.exists()) {\n      assertTrue(\"Failed to make subdirectory \", dstRoot.mkdirs());\n    }\n    File xmlF = new File(SolrTestCaseJ4.TEST_HOME(), \"solr.xml\");\n    FileUtils.copyFile(xmlF, new File(dstRoot, \"solr.xml\"));\n    copyMinConf(dstRoot);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8b6a4b585aed7660a589375f6a09b90efd29c961","date":1491296430,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#copyMinFullSetup(File).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#copyMinFullSetup(File).mjava","sourceNew":"  // Creates minimal full setup, including solr.xml\n  public static void copyMinFullSetup(File dstRoot) throws IOException {\n    if (! dstRoot.exists()) {\n      assertTrue(\"Failed to make subdirectory \", dstRoot.mkdirs());\n    }\n    File xmlF = new File(SolrTestCaseJ4.TEST_HOME(), \"solr.xml\");\n    FileUtils.copyFile(xmlF, new File(dstRoot, \"solr.xml\"));\n    copyMinConf(dstRoot);\n  }\n\n","sourceOld":"  // Creates minimal full setup, including the old solr.xml file that used to be hard coded in ConfigSolrXmlOld\n  // TODO: remove for 5.0\n  public static void copyMinFullSetup(File dstRoot) throws IOException {\n    if (! dstRoot.exists()) {\n      assertTrue(\"Failed to make subdirectory \", dstRoot.mkdirs());\n    }\n    File xmlF = new File(SolrTestCaseJ4.TEST_HOME(), \"solr.xml\");\n    FileUtils.copyFile(xmlF, new File(dstRoot, \"solr.xml\"));\n    copyMinConf(dstRoot);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9435d55e3ea95c5d94406d3affc36f9505b6a736":["83fbfcaab6a6cd5daf32752c0c35f0e0c15380e0"],"83fbfcaab6a6cd5daf32752c0c35f0e0c15380e0":["e0571cb12a71d379cc6bd0d3b70fe1d8867a109d"],"e0571cb12a71d379cc6bd0d3b70fe1d8867a109d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","e0571cb12a71d379cc6bd0d3b70fe1d8867a109d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8b6a4b585aed7660a589375f6a09b90efd29c961":["83fbfcaab6a6cd5daf32752c0c35f0e0c15380e0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9435d55e3ea95c5d94406d3affc36f9505b6a736"]},"commit2Childs":{"9435d55e3ea95c5d94406d3affc36f9505b6a736":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"83fbfcaab6a6cd5daf32752c0c35f0e0c15380e0":["9435d55e3ea95c5d94406d3affc36f9505b6a736","8b6a4b585aed7660a589375f6a09b90efd29c961"],"e0571cb12a71d379cc6bd0d3b70fe1d8867a109d":["83fbfcaab6a6cd5daf32752c0c35f0e0c15380e0","3dffec77fb8f7d0e9ca4869dddd6af94528b4576"],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e0571cb12a71d379cc6bd0d3b70fe1d8867a109d","3dffec77fb8f7d0e9ca4869dddd6af94528b4576"],"8b6a4b585aed7660a589375f6a09b90efd29c961":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","8b6a4b585aed7660a589375f6a09b90efd29c961","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}