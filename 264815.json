{"path":"lucene/core/src/java/org/apache/lucene/util/bkd/BKDRadixSelector#BKDRadixSelector(int,int,int,Directory,String).mjava","commits":[{"id":"78bdc7d6906146edb12a1a6c1f765ba680ed5124","date":1549523533,"type":0,"author":"iverase","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/bkd/BKDRadixSelector#BKDRadixSelector(int,int,int,Directory,String).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Sole constructor.\n   */\n  public BKDRadixSelector(int numDim, int bytesPerDim, int maxPointsSortInHeap, Directory tempDir, String tempFileNamePrefix) {\n    this.bytesPerDim = bytesPerDim;\n    this.packedBytesLength = numDim * bytesPerDim;\n    this.bytesSorted = bytesPerDim + Integer.BYTES;\n    this.maxPointsSortInHeap = 2 * maxPointsSortInHeap;\n    int numberOfPointsOffline  = MAX_SIZE_OFFLINE_BUFFER / (packedBytesLength + Integer.BYTES);\n    this.offlineBuffer = new byte[numberOfPointsOffline * (packedBytesLength + Integer.BYTES)];\n    this.partitionBucket = new int[bytesSorted];\n    this.histogram = new long[bytesSorted][HISTOGRAM_SIZE];\n    this.bytesRef1.length = numDim * bytesPerDim;\n    this.tempDir = tempDir;\n    this.tempFileNamePrefix = tempFileNamePrefix;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a69ebf290ab26d026cc224e517e0d93d931ac87b","date":1549869083,"type":3,"author":"iverase","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/bkd/BKDRadixSelector#BKDRadixSelector(int,int,int,Directory,String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/bkd/BKDRadixSelector#BKDRadixSelector(int,int,int,Directory,String).mjava","sourceNew":"  /**\n   * Sole constructor.\n   */\n  public BKDRadixSelector(int numDim, int bytesPerDim, int maxPointsSortInHeap, Directory tempDir, String tempFileNamePrefix) {\n    this.bytesPerDim = bytesPerDim;\n    this.packedBytesLength = numDim * bytesPerDim;\n    this.bytesSorted = bytesPerDim + Integer.BYTES;\n    this.maxPointsSortInHeap = maxPointsSortInHeap;\n    int numberOfPointsOffline  = MAX_SIZE_OFFLINE_BUFFER / (packedBytesLength + Integer.BYTES);\n    this.offlineBuffer = new byte[numberOfPointsOffline * (packedBytesLength + Integer.BYTES)];\n    this.partitionBucket = new int[bytesSorted];\n    this.histogram = new long[bytesSorted][HISTOGRAM_SIZE];\n    this.bytesRef1.length = numDim * bytesPerDim;\n    this.tempDir = tempDir;\n    this.tempFileNamePrefix = tempFileNamePrefix;\n  }\n\n","sourceOld":"  /**\n   * Sole constructor.\n   */\n  public BKDRadixSelector(int numDim, int bytesPerDim, int maxPointsSortInHeap, Directory tempDir, String tempFileNamePrefix) {\n    this.bytesPerDim = bytesPerDim;\n    this.packedBytesLength = numDim * bytesPerDim;\n    this.bytesSorted = bytesPerDim + Integer.BYTES;\n    this.maxPointsSortInHeap = 2 * maxPointsSortInHeap;\n    int numberOfPointsOffline  = MAX_SIZE_OFFLINE_BUFFER / (packedBytesLength + Integer.BYTES);\n    this.offlineBuffer = new byte[numberOfPointsOffline * (packedBytesLength + Integer.BYTES)];\n    this.partitionBucket = new int[bytesSorted];\n    this.histogram = new long[bytesSorted][HISTOGRAM_SIZE];\n    this.bytesRef1.length = numDim * bytesPerDim;\n    this.tempDir = tempDir;\n    this.tempFileNamePrefix = tempFileNamePrefix;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c2344a1c769566d8c85cffcacc5e55153fa54b86","date":1550661298,"type":3,"author":"iverase","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/bkd/BKDRadixSelector#BKDRadixSelector(int,int,int,Directory,String).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/bkd/BKDRadixSelector#BKDRadixSelector(int,int,int,Directory,String).mjava","sourceNew":"  /**\n   * Sole constructor.\n   */\n  public BKDRadixSelector(int numDim, int bytesPerDim, int maxPointsSortInHeap, Directory tempDir, String tempFileNamePrefix) {\n    this.bytesPerDim = bytesPerDim;\n    this.packedBytesLength = numDim * bytesPerDim;\n    this.bytesSorted = bytesPerDim + Integer.BYTES;\n    this.maxPointsSortInHeap = maxPointsSortInHeap;\n    int numberOfPointsOffline  = MAX_SIZE_OFFLINE_BUFFER / (packedBytesLength + Integer.BYTES);\n    this.offlineBuffer = new byte[numberOfPointsOffline * (packedBytesLength + Integer.BYTES)];\n    this.partitionBucket = new int[bytesSorted];\n    this.histogram = new long[HISTOGRAM_SIZE];\n    this.scratch = new byte[bytesSorted];\n    this.tempDir = tempDir;\n    this.tempFileNamePrefix = tempFileNamePrefix;\n  }\n\n","sourceOld":"  /**\n   * Sole constructor.\n   */\n  public BKDRadixSelector(int numDim, int bytesPerDim, int maxPointsSortInHeap, Directory tempDir, String tempFileNamePrefix) {\n    this.bytesPerDim = bytesPerDim;\n    this.packedBytesLength = numDim * bytesPerDim;\n    this.bytesSorted = bytesPerDim + Integer.BYTES;\n    this.maxPointsSortInHeap = maxPointsSortInHeap;\n    int numberOfPointsOffline  = MAX_SIZE_OFFLINE_BUFFER / (packedBytesLength + Integer.BYTES);\n    this.offlineBuffer = new byte[numberOfPointsOffline * (packedBytesLength + Integer.BYTES)];\n    this.partitionBucket = new int[bytesSorted];\n    this.histogram = new long[bytesSorted][HISTOGRAM_SIZE];\n    this.bytesRef1.length = numDim * bytesPerDim;\n    this.tempDir = tempDir;\n    this.tempFileNamePrefix = tempFileNamePrefix;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7f06758793500ca773d0df1037290e6e404fb33","date":1562230223,"type":4,"author":"Ignacio Vera","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/util/bkd/BKDRadixSelector#BKDRadixSelector(int,int,int,Directory,String).mjava","sourceNew":null,"sourceOld":"  /**\n   * Sole constructor.\n   */\n  public BKDRadixSelector(int numDim, int bytesPerDim, int maxPointsSortInHeap, Directory tempDir, String tempFileNamePrefix) {\n    this.bytesPerDim = bytesPerDim;\n    this.packedBytesLength = numDim * bytesPerDim;\n    this.bytesSorted = bytesPerDim + Integer.BYTES;\n    this.maxPointsSortInHeap = maxPointsSortInHeap;\n    int numberOfPointsOffline  = MAX_SIZE_OFFLINE_BUFFER / (packedBytesLength + Integer.BYTES);\n    this.offlineBuffer = new byte[numberOfPointsOffline * (packedBytesLength + Integer.BYTES)];\n    this.partitionBucket = new int[bytesSorted];\n    this.histogram = new long[HISTOGRAM_SIZE];\n    this.scratch = new byte[bytesSorted];\n    this.tempDir = tempDir;\n    this.tempFileNamePrefix = tempFileNamePrefix;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c7f06758793500ca773d0df1037290e6e404fb33":["c2344a1c769566d8c85cffcacc5e55153fa54b86"],"c2344a1c769566d8c85cffcacc5e55153fa54b86":["a69ebf290ab26d026cc224e517e0d93d931ac87b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"78bdc7d6906146edb12a1a6c1f765ba680ed5124":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a69ebf290ab26d026cc224e517e0d93d931ac87b":["78bdc7d6906146edb12a1a6c1f765ba680ed5124"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c7f06758793500ca773d0df1037290e6e404fb33"]},"commit2Childs":{"c7f06758793500ca773d0df1037290e6e404fb33":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c2344a1c769566d8c85cffcacc5e55153fa54b86":["c7f06758793500ca773d0df1037290e6e404fb33"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["78bdc7d6906146edb12a1a6c1f765ba680ed5124"],"78bdc7d6906146edb12a1a6c1f765ba680ed5124":["a69ebf290ab26d026cc224e517e0d93d931ac87b"],"a69ebf290ab26d026cc224e517e0d93d931ac87b":["c2344a1c769566d8c85cffcacc5e55153fa54b86"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}