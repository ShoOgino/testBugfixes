{"path":"lucene/core/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testUpgradeThenMultipleCommits().mjava","commits":[{"id":"e05f4237f58dbf80bed6a25a6d290ad49b4d5972","date":1409090625,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testUpgradeThenMultipleCommits().mjava","pathOld":"/dev/null","sourceNew":"  // LUCENE-5907\n  public void testUpgradeThenMultipleCommits() throws Exception {\n    for (String name : oldNames) {\n      Directory dir = newDirectory(oldIndexDirs.get(name));\n\n      IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random()))\n                                           .setOpenMode(OpenMode.APPEND));\n      writer.addDocument(new Document());\n      writer.commit();\n      writer.addDocument(new Document());\n      writer.commit();\n      writer.close();\n      dir.close();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cc45c615dbb82bf79d5f9550286098367874fbf","date":1409571423,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/backward-codecs/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testUpgradeThenMultipleCommits().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testUpgradeThenMultipleCommits().mjava","sourceNew":"  // LUCENE-5907\n  public void testUpgradeThenMultipleCommits() throws Exception {\n    for (String name : oldNames) {\n      Directory dir = newDirectory(oldIndexDirs.get(name));\n\n      IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random()))\n                                           .setOpenMode(OpenMode.APPEND));\n      writer.addDocument(new Document());\n      writer.commit();\n      writer.addDocument(new Document());\n      writer.commit();\n      writer.close();\n      dir.close();\n    }\n  }\n\n","sourceOld":"  // LUCENE-5907\n  public void testUpgradeThenMultipleCommits() throws Exception {\n    for (String name : oldNames) {\n      Directory dir = newDirectory(oldIndexDirs.get(name));\n\n      IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random()))\n                                           .setOpenMode(OpenMode.APPEND));\n      writer.addDocument(new Document());\n      writer.commit();\n      writer.addDocument(new Document());\n      writer.commit();\n      writer.close();\n      dir.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"402ad3ddc9da7b70da1b167667a60ece6a1381fb","date":1409656478,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/backward-codecs/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testUpgradeThenMultipleCommits().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestBackwardsCompatibility#testUpgradeThenMultipleCommits().mjava","sourceNew":"  // LUCENE-5907\n  public void testUpgradeThenMultipleCommits() throws Exception {\n    for (String name : oldNames) {\n      Directory dir = newDirectory(oldIndexDirs.get(name));\n\n      IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random()))\n                                           .setOpenMode(OpenMode.APPEND));\n      writer.addDocument(new Document());\n      writer.commit();\n      writer.addDocument(new Document());\n      writer.commit();\n      writer.close();\n      dir.close();\n    }\n  }\n\n","sourceOld":"  // LUCENE-5907\n  public void testUpgradeThenMultipleCommits() throws Exception {\n    for (String name : oldNames) {\n      Directory dir = newDirectory(oldIndexDirs.get(name));\n\n      IndexWriter writer = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random()))\n                                           .setOpenMode(OpenMode.APPEND));\n      writer.addDocument(new Document());\n      writer.commit();\n      writer.addDocument(new Document());\n      writer.commit();\n      writer.close();\n      dir.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e05f4237f58dbf80bed6a25a6d290ad49b4d5972":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4cc45c615dbb82bf79d5f9550286098367874fbf":["e05f4237f58dbf80bed6a25a6d290ad49b4d5972"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"402ad3ddc9da7b70da1b167667a60ece6a1381fb":["e05f4237f58dbf80bed6a25a6d290ad49b4d5972","4cc45c615dbb82bf79d5f9550286098367874fbf"]},"commit2Childs":{"e05f4237f58dbf80bed6a25a6d290ad49b4d5972":["4cc45c615dbb82bf79d5f9550286098367874fbf","402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e05f4237f58dbf80bed6a25a6d290ad49b4d5972"],"4cc45c615dbb82bf79d5f9550286098367874fbf":["402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"402ad3ddc9da7b70da1b167667a60ece6a1381fb":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}