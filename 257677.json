{"path":"solr/core/src/java/org/apache/solr/cloud/autoscaling/sim/SimDistributedQueueFactory.SimDistributedQueue#offer(byte[]).mjava","commits":[{"id":"9ef8d00dbfbeb534eba8a219a5df9d99b2de6ab5","date":1556572478,"type":1,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/autoscaling/sim/SimDistributedQueueFactory.SimDistributedQueue#offer(byte[]).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/autoscaling/sim/SimDistributedQueueFactory.SimDistributedQueue#offer(byte[]).mjava","sourceNew":"    @Override\n    public void offer(byte[] data) throws Exception {\n      Timer.Context time = stats.time(dir + \"_offer\");\n      updateLock.lockInterruptibly();\n      try {\n        queue.offer(new Pair(String.format(Locale.ROOT, \"qn-%010d\", seq), data));\n        seq++;\n        log.trace(\"=== offer \" + System.nanoTime());\n        changed.signalAll();\n      } finally {\n        updateLock.unlock();\n        time.stop();\n      }\n    }\n\n","sourceOld":"    @Override\n    public void offer(byte[] data) throws Exception {\n      Timer.Context time = stats.time(dir + \"_offer\");\n      updateLock.lockInterruptibly();\n      try {\n        queue.offer(new Pair(String.format(Locale.ROOT, \"qn-%010d\", seq), data));\n        seq++;\n        log.trace(\"=== offer \" + System.nanoTime());\n        changed.signalAll();\n      } finally {\n        updateLock.unlock();\n        time.stop();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e35f2dde06b35aa9904949a3a93fabd090371077","date":1587906921,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/autoscaling/sim/SimDistributedQueueFactory.SimDistributedQueue#offer(byte[]).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/autoscaling/sim/SimDistributedQueueFactory.SimDistributedQueue#offer(byte[]).mjava","sourceNew":"    @Override\n    public void offer(byte[] data) throws Exception {\n      Timer.Context time = stats.time(dir + \"_offer\");\n      updateLock.lockInterruptibly();\n      try {\n        queue.offer(new Pair(String.format(Locale.ROOT, \"qn-%010d\", seq), data));\n        seq++;\n        if (log.isTraceEnabled()) {\n          log.trace(\"=== offer {}\", System.nanoTime());\n        }\n        changed.signalAll();\n      } finally {\n        updateLock.unlock();\n        time.stop();\n      }\n    }\n\n","sourceOld":"    @Override\n    public void offer(byte[] data) throws Exception {\n      Timer.Context time = stats.time(dir + \"_offer\");\n      updateLock.lockInterruptibly();\n      try {\n        queue.offer(new Pair(String.format(Locale.ROOT, \"qn-%010d\", seq), data));\n        seq++;\n        log.trace(\"=== offer \" + System.nanoTime());\n        changed.signalAll();\n      } finally {\n        updateLock.unlock();\n        time.stop();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"daa0f21a44e235a2299ea1fa913898b182dd7cce","date":1590952026,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/autoscaling/sim/SimDistributedQueueFactory.SimDistributedQueue#offer(byte[]).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/autoscaling/sim/SimDistributedQueueFactory.SimDistributedQueue#offer(byte[]).mjava","sourceNew":"    @Override\n    @SuppressWarnings({\"unchecked\", \"rawtypes\"})\n    public void offer(byte[] data) throws Exception {\n      Timer.Context time = stats.time(dir + \"_offer\");\n      updateLock.lockInterruptibly();\n      try {\n        queue.offer(new Pair(String.format(Locale.ROOT, \"qn-%010d\", seq), data));\n        seq++;\n        if (log.isTraceEnabled()) {\n          log.trace(\"=== offer {}\", System.nanoTime());\n        }\n        changed.signalAll();\n      } finally {\n        updateLock.unlock();\n        time.stop();\n      }\n    }\n\n","sourceOld":"    @Override\n    public void offer(byte[] data) throws Exception {\n      Timer.Context time = stats.time(dir + \"_offer\");\n      updateLock.lockInterruptibly();\n      try {\n        queue.offer(new Pair(String.format(Locale.ROOT, \"qn-%010d\", seq), data));\n        seq++;\n        if (log.isTraceEnabled()) {\n          log.trace(\"=== offer {}\", System.nanoTime());\n        }\n        changed.signalAll();\n      } finally {\n        updateLock.unlock();\n        time.stop();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f504512a03d978990cbff30db0522b354e846db","date":1595247421,"type":4,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/cloud/autoscaling/sim/SimDistributedQueueFactory.SimDistributedQueue#offer(byte[]).mjava","sourceNew":null,"sourceOld":"    @Override\n    @SuppressWarnings({\"unchecked\", \"rawtypes\"})\n    public void offer(byte[] data) throws Exception {\n      Timer.Context time = stats.time(dir + \"_offer\");\n      updateLock.lockInterruptibly();\n      try {\n        queue.offer(new Pair(String.format(Locale.ROOT, \"qn-%010d\", seq), data));\n        seq++;\n        if (log.isTraceEnabled()) {\n          log.trace(\"=== offer {}\", System.nanoTime());\n        }\n        changed.signalAll();\n      } finally {\n        updateLock.unlock();\n        time.stop();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3f504512a03d978990cbff30db0522b354e846db":["daa0f21a44e235a2299ea1fa913898b182dd7cce"],"daa0f21a44e235a2299ea1fa913898b182dd7cce":["e35f2dde06b35aa9904949a3a93fabd090371077"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e35f2dde06b35aa9904949a3a93fabd090371077":["9ef8d00dbfbeb534eba8a219a5df9d99b2de6ab5"],"9ef8d00dbfbeb534eba8a219a5df9d99b2de6ab5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3f504512a03d978990cbff30db0522b354e846db"]},"commit2Childs":{"3f504512a03d978990cbff30db0522b354e846db":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"daa0f21a44e235a2299ea1fa913898b182dd7cce":["3f504512a03d978990cbff30db0522b354e846db"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9ef8d00dbfbeb534eba8a219a5df9d99b2de6ab5"],"e35f2dde06b35aa9904949a3a93fabd090371077":["daa0f21a44e235a2299ea1fa913898b182dd7cce"],"9ef8d00dbfbeb534eba8a219a5df9d99b2de6ab5":["e35f2dde06b35aa9904949a3a93fabd090371077"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}