{"path":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest#testEnumFieldTypeStatus().mjava","commits":[{"id":"d12bbc45d641864ffe03291bc30f178eb34e434c","date":1426001646,"type":0,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest#testEnumFieldTypeStatus().mjava","pathOld":"/dev/null","sourceNew":"  public void testEnumFieldTypeStatus() throws Exception {\n    clearIndex();\n    \n    String fieldName = \"severity\";    \n    assertU(adoc(\"id\", \"0\", fieldName, \"Not Available\"));\n    assertU(adoc(\"id\", \"1\", fieldName, \"Not Available\"));\n    assertU(adoc(\"id\", \"2\", fieldName, \"Not Available\"));\n    assertU(adoc(\"id\", \"3\", fieldName, \"Not Available\"));\n    assertU(adoc(\"id\", \"4\", fieldName, \"Not Available\"));\n    assertU(adoc(\"id\", \"5\", fieldName, \"Low\"));\n    assertU(adoc(\"id\", \"6\", fieldName, \"Low\"));\n    assertU(adoc(\"id\", \"7\", fieldName, \"Low\"));\n    assertU(adoc(\"id\", \"8\", fieldName, \"Low\"));\n    assertU(adoc(\"id\", \"9\", fieldName, \"Medium\"));\n    assertU(adoc(\"id\", \"10\", fieldName, \"Medium\"));\n    assertU(adoc(\"id\", \"11\", fieldName, \"Medium\"));\n    assertU(adoc(\"id\", \"12\", fieldName, \"High\"));\n    assertU(adoc(\"id\", \"13\", fieldName, \"High\"));\n    assertU(adoc(\"id\", \"14\", fieldName, \"Critical\"));\n    \n    \n    for (int i = 20; i <= 30; i++) {\n      assertU(adoc(\"id\", \"\" + i));\n    }\n\n    assertU(commit());\n    \n    assertQ(\"enum\", req(\"q\",\"*:*\", \"stats\", \"true\", \"stats.field\", fieldName)\n            , \"//lst[@name='\" + fieldName + \"']/str[@name='min'][.='Not Available']\"\n            , \"//lst[@name='\" + fieldName + \"']/str[@name='max'][.='Critical']\"\n            , \"//lst[@name='\" + fieldName + \"']/long[@name='count'][.='15']\"\n            , \"//lst[@name='\" + fieldName + \"']/long[@name='missing'][.='11']\");\n    \n    \n    assertQ(\"enum calcdistinct\", req(\"q\",\"*:*\", \"stats\", \"true\", \"stats.field\", fieldName, \n                                     StatsParams.STATS_CALC_DISTINCT, \"true\")\n            , \"//lst[@name='\" + fieldName + \"']/str[@name='min'][.='Not Available']\"\n            , \"//lst[@name='\" + fieldName + \"']/str[@name='max'][.='Critical']\"\n            , \"//lst[@name='\" + fieldName + \"']/long[@name='count'][.='15']\"\n            , \"//lst[@name='\" + fieldName + \"']/long[@name='countDistinct'][.='5']\"\n            , \"count(//lst[@name='\" + fieldName + \"']/arr[@name='distinctValues']/*)=5\"\n            , \"//lst[@name='\" + fieldName + \"']/long[@name='missing'][.='11']\");\n    \n    \n    final String pre = \"//lst[@name='stats_fields']/lst[@name='\"+fieldName+\"']/lst[@name='facets']/lst[@name='severity']\";\n\n    assertQ(\"enum + stats.facet\", req(\"q\",\"*:*\", \"stats\", \"true\", \"stats.field\", fieldName, \n                                      \"stats.facet\", fieldName)\n            , pre + \"/lst[@name='High']/str[@name='min'][.='High']\"\n            , pre + \"/lst[@name='High']/str[@name='max'][.='High']\"\n            , pre + \"/lst[@name='High']/long[@name='count'][.='2']\"\n            , pre + \"/lst[@name='High']/long[@name='missing'][.='0']\"\n            , pre + \"/lst[@name='Low']/str[@name='min'][.='Low']\"\n            , pre + \"/lst[@name='Low']/str[@name='max'][.='Low']\"\n            , pre + \"/lst[@name='Low']/long[@name='count'][.='4']\"\n            , pre + \"/lst[@name='Low']/long[@name='missing'][.='0']\"\n            , pre + \"/lst[@name='Medium']/str[@name='min'][.='Medium']\"\n            , pre + \"/lst[@name='Medium']/str[@name='max'][.='Medium']\"\n            , pre + \"/lst[@name='Medium']/long[@name='count'][.='3']\"\n            , pre + \"/lst[@name='Medium']/long[@name='missing'][.='0']\"\n            , pre + \"/lst[@name='Not Available']/str[@name='min'][.='Not Available']\"\n            , pre + \"/lst[@name='Not Available']/str[@name='max'][.='Not Available']\"\n            , pre + \"/lst[@name='Not Available']/long[@name='count'][.='5']\"\n            , pre + \"/lst[@name='Not Available']/long[@name='missing'][.='0']\"\n            , pre + \"/lst[@name='Critical']/str[@name='min'][.='Critical']\"\n            , pre + \"/lst[@name='Critical']/str[@name='max'][.='Critical']\"\n            , pre + \"/lst[@name='Critical']/long[@name='count'][.='1']\"\n            , pre + \"/lst[@name='Critical']/long[@name='missing'][.='0']\"\n            );\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":0,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest#testEnumFieldTypeStatus().mjava","pathOld":"/dev/null","sourceNew":"  public void testEnumFieldTypeStatus() throws Exception {\n    clearIndex();\n    \n    String fieldName = \"severity\";    \n    assertU(adoc(\"id\", \"0\", fieldName, \"Not Available\"));\n    assertU(adoc(\"id\", \"1\", fieldName, \"Not Available\"));\n    assertU(adoc(\"id\", \"2\", fieldName, \"Not Available\"));\n    assertU(adoc(\"id\", \"3\", fieldName, \"Not Available\"));\n    assertU(adoc(\"id\", \"4\", fieldName, \"Not Available\"));\n    assertU(adoc(\"id\", \"5\", fieldName, \"Low\"));\n    assertU(adoc(\"id\", \"6\", fieldName, \"Low\"));\n    assertU(adoc(\"id\", \"7\", fieldName, \"Low\"));\n    assertU(adoc(\"id\", \"8\", fieldName, \"Low\"));\n    assertU(adoc(\"id\", \"9\", fieldName, \"Medium\"));\n    assertU(adoc(\"id\", \"10\", fieldName, \"Medium\"));\n    assertU(adoc(\"id\", \"11\", fieldName, \"Medium\"));\n    assertU(adoc(\"id\", \"12\", fieldName, \"High\"));\n    assertU(adoc(\"id\", \"13\", fieldName, \"High\"));\n    assertU(adoc(\"id\", \"14\", fieldName, \"Critical\"));\n    \n    \n    for (int i = 20; i <= 30; i++) {\n      assertU(adoc(\"id\", \"\" + i));\n    }\n\n    assertU(commit());\n    \n    assertQ(\"enum\", req(\"q\",\"*:*\", \"stats\", \"true\", \"stats.field\", fieldName)\n            , \"//lst[@name='\" + fieldName + \"']/str[@name='min'][.='Not Available']\"\n            , \"//lst[@name='\" + fieldName + \"']/str[@name='max'][.='Critical']\"\n            , \"//lst[@name='\" + fieldName + \"']/long[@name='count'][.='15']\"\n            , \"//lst[@name='\" + fieldName + \"']/long[@name='missing'][.='11']\");\n    \n    \n    assertQ(\"enum calcdistinct\", req(\"q\",\"*:*\", \"stats\", \"true\", \"stats.field\", fieldName, \n                                     StatsParams.STATS_CALC_DISTINCT, \"true\")\n            , \"//lst[@name='\" + fieldName + \"']/str[@name='min'][.='Not Available']\"\n            , \"//lst[@name='\" + fieldName + \"']/str[@name='max'][.='Critical']\"\n            , \"//lst[@name='\" + fieldName + \"']/long[@name='count'][.='15']\"\n            , \"//lst[@name='\" + fieldName + \"']/long[@name='countDistinct'][.='5']\"\n            , \"count(//lst[@name='\" + fieldName + \"']/arr[@name='distinctValues']/*)=5\"\n            , \"//lst[@name='\" + fieldName + \"']/long[@name='missing'][.='11']\");\n    \n    \n    final String pre = \"//lst[@name='stats_fields']/lst[@name='\"+fieldName+\"']/lst[@name='facets']/lst[@name='severity']\";\n\n    assertQ(\"enum + stats.facet\", req(\"q\",\"*:*\", \"stats\", \"true\", \"stats.field\", fieldName, \n                                      \"stats.facet\", fieldName)\n            , pre + \"/lst[@name='High']/str[@name='min'][.='High']\"\n            , pre + \"/lst[@name='High']/str[@name='max'][.='High']\"\n            , pre + \"/lst[@name='High']/long[@name='count'][.='2']\"\n            , pre + \"/lst[@name='High']/long[@name='missing'][.='0']\"\n            , pre + \"/lst[@name='Low']/str[@name='min'][.='Low']\"\n            , pre + \"/lst[@name='Low']/str[@name='max'][.='Low']\"\n            , pre + \"/lst[@name='Low']/long[@name='count'][.='4']\"\n            , pre + \"/lst[@name='Low']/long[@name='missing'][.='0']\"\n            , pre + \"/lst[@name='Medium']/str[@name='min'][.='Medium']\"\n            , pre + \"/lst[@name='Medium']/str[@name='max'][.='Medium']\"\n            , pre + \"/lst[@name='Medium']/long[@name='count'][.='3']\"\n            , pre + \"/lst[@name='Medium']/long[@name='missing'][.='0']\"\n            , pre + \"/lst[@name='Not Available']/str[@name='min'][.='Not Available']\"\n            , pre + \"/lst[@name='Not Available']/str[@name='max'][.='Not Available']\"\n            , pre + \"/lst[@name='Not Available']/long[@name='count'][.='5']\"\n            , pre + \"/lst[@name='Not Available']/long[@name='missing'][.='0']\"\n            , pre + \"/lst[@name='Critical']/str[@name='min'][.='Critical']\"\n            , pre + \"/lst[@name='Critical']/str[@name='max'][.='Critical']\"\n            , pre + \"/lst[@name='Critical']/long[@name='count'][.='1']\"\n            , pre + \"/lst[@name='Critical']/long[@name='missing'][.='0']\"\n            );\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4a4e2c829188fb99886a64558664d79c9ac0fdf1","date":1431021538,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest#testEnumFieldTypeStatus().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/StatsComponentTest#testEnumFieldTypeStatus().mjava","sourceNew":"  public void testEnumFieldTypeStatus() throws Exception {\n    clearIndex();\n    \n    String fieldName = \"severity\";    \n    assertU(adoc(\"id\", \"0\", fieldName, \"Not Available\"));\n    assertU(adoc(\"id\", \"1\", fieldName, \"Not Available\"));\n    assertU(adoc(\"id\", \"2\", fieldName, \"Not Available\"));\n    assertU(adoc(\"id\", \"3\", fieldName, \"Not Available\"));\n    assertU(adoc(\"id\", \"4\", fieldName, \"Not Available\"));\n    assertU(adoc(\"id\", \"5\", fieldName, \"Low\"));\n    assertU(adoc(\"id\", \"6\", fieldName, \"Low\"));\n    assertU(adoc(\"id\", \"7\", fieldName, \"Low\"));\n    assertU(adoc(\"id\", \"8\", fieldName, \"Low\"));\n    assertU(adoc(\"id\", \"9\", fieldName, \"Medium\"));\n    assertU(adoc(\"id\", \"10\", fieldName, \"Medium\"));\n    assertU(adoc(\"id\", \"11\", fieldName, \"Medium\"));\n    assertU(adoc(\"id\", \"12\", fieldName, \"High\"));\n    assertU(adoc(\"id\", \"13\", fieldName, \"High\"));\n    assertU(adoc(\"id\", \"14\", fieldName, \"Critical\"));\n    \n    \n    for (int i = 20; i <= 30; i++) {\n      assertU(adoc(\"id\", \"\" + i));\n    }\n\n    assertU(commit());\n    \n    assertQ(\"enum\", req(\"q\",\"*:*\", \"stats\", \"true\", \"stats.field\", fieldName)\n            , \"//lst[@name='\" + fieldName + \"']/str[@name='min'][.='Not Available']\"\n            , \"//lst[@name='\" + fieldName + \"']/str[@name='max'][.='Critical']\"\n            , \"//lst[@name='\" + fieldName + \"']/long[@name='count'][.='15']\"\n            , \"//lst[@name='\" + fieldName + \"']/long[@name='missing'][.='11']\");\n\n    assertQ(\"cardinality\", \n            req(\"q\",\"*:*\", \"stats\", \"true\", \"stats.field\", \"{!cardinality=true}\"+fieldName)\n            , \"//lst[@name='\" + fieldName + \"']/long[@name='cardinality'][.='5']\");\n    \n    assertQ(\"enum calcdistinct\", req(\"q\",\"*:*\", \"stats\", \"true\", \"stats.field\", fieldName, \n                                     StatsParams.STATS_CALC_DISTINCT, \"true\")\n            , \"//lst[@name='\" + fieldName + \"']/str[@name='min'][.='Not Available']\"\n            , \"//lst[@name='\" + fieldName + \"']/str[@name='max'][.='Critical']\"\n            , \"//lst[@name='\" + fieldName + \"']/long[@name='count'][.='15']\"\n            , \"//lst[@name='\" + fieldName + \"']/long[@name='countDistinct'][.='5']\"\n            , \"count(//lst[@name='\" + fieldName + \"']/arr[@name='distinctValues']/*)=5\"\n            , \"//lst[@name='\" + fieldName + \"']/long[@name='missing'][.='11']\");\n    \n    \n    final String pre = \"//lst[@name='stats_fields']/lst[@name='\"+fieldName+\"']/lst[@name='facets']/lst[@name='severity']\";\n\n    assertQ(\"enum + stats.facet\", req(\"q\",\"*:*\", \"stats\", \"true\", \"stats.field\", fieldName, \n                                      \"stats.facet\", fieldName)\n            , pre + \"/lst[@name='High']/str[@name='min'][.='High']\"\n            , pre + \"/lst[@name='High']/str[@name='max'][.='High']\"\n            , pre + \"/lst[@name='High']/long[@name='count'][.='2']\"\n            , pre + \"/lst[@name='High']/long[@name='missing'][.='0']\"\n            , pre + \"/lst[@name='Low']/str[@name='min'][.='Low']\"\n            , pre + \"/lst[@name='Low']/str[@name='max'][.='Low']\"\n            , pre + \"/lst[@name='Low']/long[@name='count'][.='4']\"\n            , pre + \"/lst[@name='Low']/long[@name='missing'][.='0']\"\n            , pre + \"/lst[@name='Medium']/str[@name='min'][.='Medium']\"\n            , pre + \"/lst[@name='Medium']/str[@name='max'][.='Medium']\"\n            , pre + \"/lst[@name='Medium']/long[@name='count'][.='3']\"\n            , pre + \"/lst[@name='Medium']/long[@name='missing'][.='0']\"\n            , pre + \"/lst[@name='Not Available']/str[@name='min'][.='Not Available']\"\n            , pre + \"/lst[@name='Not Available']/str[@name='max'][.='Not Available']\"\n            , pre + \"/lst[@name='Not Available']/long[@name='count'][.='5']\"\n            , pre + \"/lst[@name='Not Available']/long[@name='missing'][.='0']\"\n            , pre + \"/lst[@name='Critical']/str[@name='min'][.='Critical']\"\n            , pre + \"/lst[@name='Critical']/str[@name='max'][.='Critical']\"\n            , pre + \"/lst[@name='Critical']/long[@name='count'][.='1']\"\n            , pre + \"/lst[@name='Critical']/long[@name='missing'][.='0']\"\n            );\n  }\n\n","sourceOld":"  public void testEnumFieldTypeStatus() throws Exception {\n    clearIndex();\n    \n    String fieldName = \"severity\";    \n    assertU(adoc(\"id\", \"0\", fieldName, \"Not Available\"));\n    assertU(adoc(\"id\", \"1\", fieldName, \"Not Available\"));\n    assertU(adoc(\"id\", \"2\", fieldName, \"Not Available\"));\n    assertU(adoc(\"id\", \"3\", fieldName, \"Not Available\"));\n    assertU(adoc(\"id\", \"4\", fieldName, \"Not Available\"));\n    assertU(adoc(\"id\", \"5\", fieldName, \"Low\"));\n    assertU(adoc(\"id\", \"6\", fieldName, \"Low\"));\n    assertU(adoc(\"id\", \"7\", fieldName, \"Low\"));\n    assertU(adoc(\"id\", \"8\", fieldName, \"Low\"));\n    assertU(adoc(\"id\", \"9\", fieldName, \"Medium\"));\n    assertU(adoc(\"id\", \"10\", fieldName, \"Medium\"));\n    assertU(adoc(\"id\", \"11\", fieldName, \"Medium\"));\n    assertU(adoc(\"id\", \"12\", fieldName, \"High\"));\n    assertU(adoc(\"id\", \"13\", fieldName, \"High\"));\n    assertU(adoc(\"id\", \"14\", fieldName, \"Critical\"));\n    \n    \n    for (int i = 20; i <= 30; i++) {\n      assertU(adoc(\"id\", \"\" + i));\n    }\n\n    assertU(commit());\n    \n    assertQ(\"enum\", req(\"q\",\"*:*\", \"stats\", \"true\", \"stats.field\", fieldName)\n            , \"//lst[@name='\" + fieldName + \"']/str[@name='min'][.='Not Available']\"\n            , \"//lst[@name='\" + fieldName + \"']/str[@name='max'][.='Critical']\"\n            , \"//lst[@name='\" + fieldName + \"']/long[@name='count'][.='15']\"\n            , \"//lst[@name='\" + fieldName + \"']/long[@name='missing'][.='11']\");\n    \n    \n    assertQ(\"enum calcdistinct\", req(\"q\",\"*:*\", \"stats\", \"true\", \"stats.field\", fieldName, \n                                     StatsParams.STATS_CALC_DISTINCT, \"true\")\n            , \"//lst[@name='\" + fieldName + \"']/str[@name='min'][.='Not Available']\"\n            , \"//lst[@name='\" + fieldName + \"']/str[@name='max'][.='Critical']\"\n            , \"//lst[@name='\" + fieldName + \"']/long[@name='count'][.='15']\"\n            , \"//lst[@name='\" + fieldName + \"']/long[@name='countDistinct'][.='5']\"\n            , \"count(//lst[@name='\" + fieldName + \"']/arr[@name='distinctValues']/*)=5\"\n            , \"//lst[@name='\" + fieldName + \"']/long[@name='missing'][.='11']\");\n    \n    \n    final String pre = \"//lst[@name='stats_fields']/lst[@name='\"+fieldName+\"']/lst[@name='facets']/lst[@name='severity']\";\n\n    assertQ(\"enum + stats.facet\", req(\"q\",\"*:*\", \"stats\", \"true\", \"stats.field\", fieldName, \n                                      \"stats.facet\", fieldName)\n            , pre + \"/lst[@name='High']/str[@name='min'][.='High']\"\n            , pre + \"/lst[@name='High']/str[@name='max'][.='High']\"\n            , pre + \"/lst[@name='High']/long[@name='count'][.='2']\"\n            , pre + \"/lst[@name='High']/long[@name='missing'][.='0']\"\n            , pre + \"/lst[@name='Low']/str[@name='min'][.='Low']\"\n            , pre + \"/lst[@name='Low']/str[@name='max'][.='Low']\"\n            , pre + \"/lst[@name='Low']/long[@name='count'][.='4']\"\n            , pre + \"/lst[@name='Low']/long[@name='missing'][.='0']\"\n            , pre + \"/lst[@name='Medium']/str[@name='min'][.='Medium']\"\n            , pre + \"/lst[@name='Medium']/str[@name='max'][.='Medium']\"\n            , pre + \"/lst[@name='Medium']/long[@name='count'][.='3']\"\n            , pre + \"/lst[@name='Medium']/long[@name='missing'][.='0']\"\n            , pre + \"/lst[@name='Not Available']/str[@name='min'][.='Not Available']\"\n            , pre + \"/lst[@name='Not Available']/str[@name='max'][.='Not Available']\"\n            , pre + \"/lst[@name='Not Available']/long[@name='count'][.='5']\"\n            , pre + \"/lst[@name='Not Available']/long[@name='missing'][.='0']\"\n            , pre + \"/lst[@name='Critical']/str[@name='min'][.='Critical']\"\n            , pre + \"/lst[@name='Critical']/str[@name='max'][.='Critical']\"\n            , pre + \"/lst[@name='Critical']/long[@name='count'][.='1']\"\n            , pre + \"/lst[@name='Critical']/long[@name='missing'][.='0']\"\n            );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","d12bbc45d641864ffe03291bc30f178eb34e434c"],"4a4e2c829188fb99886a64558664d79c9ac0fdf1":["d12bbc45d641864ffe03291bc30f178eb34e434c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d12bbc45d641864ffe03291bc30f178eb34e434c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4a4e2c829188fb99886a64558664d79c9ac0fdf1"]},"commit2Childs":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"4a4e2c829188fb99886a64558664d79c9ac0fdf1":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","d12bbc45d641864ffe03291bc30f178eb34e434c"],"d12bbc45d641864ffe03291bc30f178eb34e434c":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","4a4e2c829188fb99886a64558664d79c9ac0fdf1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}