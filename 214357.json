{"path":"lucene/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#doSearching(Query).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#doSearching(Query).mjava","pathOld":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#doSearching(Query).mjava","sourceNew":"  public void doSearching(Query unReWrittenQuery) throws Exception {\n    searcher = new IndexSearcher(reader);\n    // for any multi-term queries to work (prefix, wildcard, range,fuzzy etc)\n    // you must use a rewritten query!\n    query = unReWrittenQuery.rewrite(reader);\n    if (VERBOSE) System.out.println(\"Searching for: \" + query.toString(FIELD_NAME));\n    hits = searcher.search(query, null, 1000);\n  }\n\n","sourceOld":"  public void doSearching(Query unReWrittenQuery) throws Exception {\n    searcher = new IndexSearcher(reader);\n    // for any multi-term queries to work (prefix, wildcard, range,fuzzy etc)\n    // you must use a rewritten query!\n    query = unReWrittenQuery.rewrite(reader);\n    if (VERBOSE) System.out.println(\"Searching for: \" + query.toString(FIELD_NAME));\n    hits = searcher.search(query, null, 1000);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad1f7eb1a6bbf19f3d32b3baf2dee3db844eccdc","date":1366056945,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#doSearching(Query).mjava","pathOld":"lucene/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#doSearching(Query).mjava","sourceNew":"  public void doSearching(Query unReWrittenQuery) throws Exception {\n    searcher = newSearcher(reader);\n    // for any multi-term queries to work (prefix, wildcard, range,fuzzy etc)\n    // you must use a rewritten query!\n    query = unReWrittenQuery.rewrite(reader);\n    if (VERBOSE) System.out.println(\"Searching for: \" + query.toString(FIELD_NAME));\n    hits = searcher.search(query, null, 1000);\n  }\n\n","sourceOld":"  public void doSearching(Query unReWrittenQuery) throws Exception {\n    searcher = new IndexSearcher(reader);\n    // for any multi-term queries to work (prefix, wildcard, range,fuzzy etc)\n    // you must use a rewritten query!\n    query = unReWrittenQuery.rewrite(reader);\n    if (VERBOSE) System.out.println(\"Searching for: \" + query.toString(FIELD_NAME));\n    hits = searcher.search(query, null, 1000);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f8ec642b0195d666cf3b5a6a6c2a80bdd3b756bc","date":1424799790,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#doSearching(Query).mjava","pathOld":"lucene/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#doSearching(Query).mjava","sourceNew":"  public void doSearching(Query unReWrittenQuery) throws Exception {\n    searcher = newSearcher(reader);\n    // for any multi-term queries to work (prefix, wildcard, range,fuzzy etc)\n    // you must use a rewritten query!\n    query = unReWrittenQuery.rewrite(reader);\n    if (VERBOSE) System.out.println(\"Searching for: \" + query.toString(FIELD_NAME));\n    hits = searcher.search(query, 1000);\n  }\n\n","sourceOld":"  public void doSearching(Query unReWrittenQuery) throws Exception {\n    searcher = newSearcher(reader);\n    // for any multi-term queries to work (prefix, wildcard, range,fuzzy etc)\n    // you must use a rewritten query!\n    query = unReWrittenQuery.rewrite(reader);\n    if (VERBOSE) System.out.println(\"Searching for: \" + query.toString(FIELD_NAME));\n    hits = searcher.search(query, null, 1000);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f8ec642b0195d666cf3b5a6a6c2a80bdd3b756bc":["ad1f7eb1a6bbf19f3d32b3baf2dee3db844eccdc"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ad1f7eb1a6bbf19f3d32b3baf2dee3db844eccdc":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f8ec642b0195d666cf3b5a6a6c2a80bdd3b756bc"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["ad1f7eb1a6bbf19f3d32b3baf2dee3db844eccdc"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"f8ec642b0195d666cf3b5a6a6c2a80bdd3b756bc":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ad1f7eb1a6bbf19f3d32b3baf2dee3db844eccdc":["f8ec642b0195d666cf3b5a6a6c2a80bdd3b756bc"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}