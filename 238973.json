{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/response/FieldStatsInfo#toString().mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/response/FieldStatsInfo#toString().mjava","pathOld":"solr/src/solrj/org/apache/solr/client/solrj/response/FieldStatsInfo#toString().mjava","sourceNew":"  @Override\n  public String toString()\n  {\n    StringBuilder sb = new StringBuilder();\n    sb.append( name );\n    sb.append( \": {\" );\n    if( min != null ) {\n      sb.append( \" min:\").append( min );\n    }\n    if( max != null ) {\n      sb.append( \" max:\").append( max );\n    }\n    if( sum != null ) {\n      sb.append( \" sum:\").append( sum );\n    }\n    if( count != null ) {\n      sb.append( \" count:\").append( count );\n    }\n    if( missing != null ) {\n      sb.append( \" missing:\").append( missing );\n    }\n    if( mean != null ) {\n      sb.append( \" mean:\").append( mean );\n    }\n    if( stddev != null ) {\n      sb.append( \" stddev:\").append(stddev);\n    }\n    sb.append( \" }\" );\n    return sb.toString();\n  }\n\n","sourceOld":"  @Override\n  public String toString()\n  {\n    StringBuilder sb = new StringBuilder();\n    sb.append( name );\n    sb.append( \": {\" );\n    if( min != null ) {\n      sb.append( \" min:\").append( min );\n    }\n    if( max != null ) {\n      sb.append( \" max:\").append( max );\n    }\n    if( sum != null ) {\n      sb.append( \" sum:\").append( sum );\n    }\n    if( count != null ) {\n      sb.append( \" count:\").append( count );\n    }\n    if( missing != null ) {\n      sb.append( \" missing:\").append( missing );\n    }\n    if( mean != null ) {\n      sb.append( \" mean:\").append( mean );\n    }\n    if( stddev != null ) {\n      sb.append( \" stddev:\").append(stddev);\n    }\n    sb.append( \" }\" );\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/response/FieldStatsInfo#toString().mjava","pathOld":"solr/src/solrj/org/apache/solr/client/solrj/response/FieldStatsInfo#toString().mjava","sourceNew":"  @Override\n  public String toString()\n  {\n    StringBuilder sb = new StringBuilder();\n    sb.append( name );\n    sb.append( \": {\" );\n    if( min != null ) {\n      sb.append( \" min:\").append( min );\n    }\n    if( max != null ) {\n      sb.append( \" max:\").append( max );\n    }\n    if( sum != null ) {\n      sb.append( \" sum:\").append( sum );\n    }\n    if( count != null ) {\n      sb.append( \" count:\").append( count );\n    }\n    if( missing != null ) {\n      sb.append( \" missing:\").append( missing );\n    }\n    if( mean != null ) {\n      sb.append( \" mean:\").append( mean );\n    }\n    if( stddev != null ) {\n      sb.append( \" stddev:\").append(stddev);\n    }\n    sb.append( \" }\" );\n    return sb.toString();\n  }\n\n","sourceOld":"  @Override\n  public String toString()\n  {\n    StringBuilder sb = new StringBuilder();\n    sb.append( name );\n    sb.append( \": {\" );\n    if( min != null ) {\n      sb.append( \" min:\").append( min );\n    }\n    if( max != null ) {\n      sb.append( \" max:\").append( max );\n    }\n    if( sum != null ) {\n      sb.append( \" sum:\").append( sum );\n    }\n    if( count != null ) {\n      sb.append( \" count:\").append( count );\n    }\n    if( missing != null ) {\n      sb.append( \" missing:\").append( missing );\n    }\n    if( mean != null ) {\n      sb.append( \" mean:\").append( mean );\n    }\n    if( stddev != null ) {\n      sb.append( \" stddev:\").append(stddev);\n    }\n    sb.append( \" }\" );\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/response/FieldStatsInfo#toString().mjava","pathOld":"solr/src/solrj/org/apache/solr/client/solrj/response/FieldStatsInfo#toString().mjava","sourceNew":"  @Override\n  public String toString()\n  {\n    StringBuilder sb = new StringBuilder();\n    sb.append( name );\n    sb.append( \": {\" );\n    if( min != null ) {\n      sb.append( \" min:\").append( min );\n    }\n    if( max != null ) {\n      sb.append( \" max:\").append( max );\n    }\n    if( sum != null ) {\n      sb.append( \" sum:\").append( sum );\n    }\n    if( count != null ) {\n      sb.append( \" count:\").append( count );\n    }\n    if( missing != null ) {\n      sb.append( \" missing:\").append( missing );\n    }\n    if( mean != null ) {\n      sb.append( \" mean:\").append( mean );\n    }\n    if( stddev != null ) {\n      sb.append( \" stddev:\").append(stddev);\n    }\n    sb.append( \" }\" );\n    return sb.toString();\n  }\n\n","sourceOld":"  @Override\n  public String toString()\n  {\n    StringBuilder sb = new StringBuilder();\n    sb.append( name );\n    sb.append( \": {\" );\n    if( min != null ) {\n      sb.append( \" min:\").append( min );\n    }\n    if( max != null ) {\n      sb.append( \" max:\").append( max );\n    }\n    if( sum != null ) {\n      sb.append( \" sum:\").append( sum );\n    }\n    if( count != null ) {\n      sb.append( \" count:\").append( count );\n    }\n    if( missing != null ) {\n      sb.append( \" missing:\").append( missing );\n    }\n    if( mean != null ) {\n      sb.append( \" mean:\").append( mean );\n    }\n    if( stddev != null ) {\n      sb.append( \" stddev:\").append(stddev);\n    }\n    sb.append( \" }\" );\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bf795ee457272965bd751f513787065bbf0a650a","date":1385015231,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/response/FieldStatsInfo#toString().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/response/FieldStatsInfo#toString().mjava","sourceNew":"  @Override\n  public String toString()\n  {\n    StringBuilder sb = new StringBuilder();\n    sb.append( name );\n    sb.append( \": {\" );\n    if( min != null ) {\n      sb.append( \" min:\").append( min );\n    }\n    if( max != null ) {\n      sb.append( \" max:\").append( max );\n    }\n    if( sum != null ) {\n      sb.append( \" sum:\").append( sum );\n    }\n    if( count != null ) {\n      sb.append( \" count:\").append( count );\n    }\n    if (countDistinct != null) {\n      sb.append(\" countDistinct:\").append(countDistinct);\n    }\n    if (distinctValues != null) {\n      sb.append(\" distinctValues:\").append(distinctValues);\n    }\n    if( missing != null ) {\n      sb.append( \" missing:\").append( missing );\n    }\n    if( mean != null ) {\n      sb.append( \" mean:\").append( mean );\n    }\n    if( stddev != null ) {\n      sb.append( \" stddev:\").append(stddev);\n    }\n    sb.append( \" }\" );\n    return sb.toString();\n  }\n\n","sourceOld":"  @Override\n  public String toString()\n  {\n    StringBuilder sb = new StringBuilder();\n    sb.append( name );\n    sb.append( \": {\" );\n    if( min != null ) {\n      sb.append( \" min:\").append( min );\n    }\n    if( max != null ) {\n      sb.append( \" max:\").append( max );\n    }\n    if( sum != null ) {\n      sb.append( \" sum:\").append( sum );\n    }\n    if( count != null ) {\n      sb.append( \" count:\").append( count );\n    }\n    if( missing != null ) {\n      sb.append( \" missing:\").append( missing );\n    }\n    if( mean != null ) {\n      sb.append( \" mean:\").append( mean );\n    }\n    if( stddev != null ) {\n      sb.append( \" stddev:\").append(stddev);\n    }\n    sb.append( \" }\" );\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"74f45af4339b0daf7a95c820ab88c1aea74fbce0","date":1387475327,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/response/FieldStatsInfo#toString().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/response/FieldStatsInfo#toString().mjava","sourceNew":"  @Override\n  public String toString()\n  {\n    StringBuilder sb = new StringBuilder();\n    sb.append( name );\n    sb.append( \": {\" );\n    if( min != null ) {\n      sb.append( \" min:\").append( min );\n    }\n    if( max != null ) {\n      sb.append( \" max:\").append( max );\n    }\n    if( sum != null ) {\n      sb.append( \" sum:\").append( sum );\n    }\n    if( count != null ) {\n      sb.append( \" count:\").append( count );\n    }\n    if (countDistinct != null) {\n      sb.append(\" countDistinct:\").append(countDistinct);\n    }\n    if (distinctValues != null) {\n      sb.append(\" distinctValues:\").append(distinctValues);\n    }\n    if( missing != null ) {\n      sb.append( \" missing:\").append( missing );\n    }\n    if( mean != null ) {\n      sb.append( \" mean:\").append( mean );\n    }\n    if( stddev != null ) {\n      sb.append( \" stddev:\").append(stddev);\n    }\n    sb.append( \" }\" );\n    return sb.toString();\n  }\n\n","sourceOld":"  @Override\n  public String toString()\n  {\n    StringBuilder sb = new StringBuilder();\n    sb.append( name );\n    sb.append( \": {\" );\n    if( min != null ) {\n      sb.append( \" min:\").append( min );\n    }\n    if( max != null ) {\n      sb.append( \" max:\").append( max );\n    }\n    if( sum != null ) {\n      sb.append( \" sum:\").append( sum );\n    }\n    if( count != null ) {\n      sb.append( \" count:\").append( count );\n    }\n    if( missing != null ) {\n      sb.append( \" missing:\").append( missing );\n    }\n    if( mean != null ) {\n      sb.append( \" mean:\").append( mean );\n    }\n    if( stddev != null ) {\n      sb.append( \" stddev:\").append(stddev);\n    }\n    sb.append( \" }\" );\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1002283cfd29923d517db7c33e07bb54aac7acd4","date":1427211199,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/response/FieldStatsInfo#toString().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/response/FieldStatsInfo#toString().mjava","sourceNew":"  @Override\n  public String toString()\n  {\n    StringBuilder sb = new StringBuilder();\n    sb.append( name );\n    sb.append( \": {\" );\n    if( min != null ) {\n      sb.append( \" min:\").append( min );\n    }\n    if( max != null ) {\n      sb.append( \" max:\").append( max );\n    }\n    if( sum != null ) {\n      sb.append( \" sum:\").append( sum );\n    }\n    if( count != null ) {\n      sb.append( \" count:\").append( count );\n    }\n    if (countDistinct != null) {\n      sb.append(\" countDistinct:\").append(countDistinct);\n    }\n    if (distinctValues != null) {\n      sb.append(\" distinctValues:\").append(distinctValues);\n    }\n    if( missing != null ) {\n      sb.append( \" missing:\").append( missing );\n    }\n    if( mean != null ) {\n      sb.append( \" mean:\").append( mean );\n    }\n    if( stddev != null ) {\n      sb.append( \" stddev:\").append(stddev);\n    }\n    if( percentiles != null ) {\n      sb.append( \" percentiles:\").append(percentiles);\n    }\n    \n    sb.append( \" }\" );\n    return sb.toString();\n  }\n\n","sourceOld":"  @Override\n  public String toString()\n  {\n    StringBuilder sb = new StringBuilder();\n    sb.append( name );\n    sb.append( \": {\" );\n    if( min != null ) {\n      sb.append( \" min:\").append( min );\n    }\n    if( max != null ) {\n      sb.append( \" max:\").append( max );\n    }\n    if( sum != null ) {\n      sb.append( \" sum:\").append( sum );\n    }\n    if( count != null ) {\n      sb.append( \" count:\").append( count );\n    }\n    if (countDistinct != null) {\n      sb.append(\" countDistinct:\").append(countDistinct);\n    }\n    if (distinctValues != null) {\n      sb.append(\" distinctValues:\").append(distinctValues);\n    }\n    if( missing != null ) {\n      sb.append( \" missing:\").append( missing );\n    }\n    if( mean != null ) {\n      sb.append( \" mean:\").append( mean );\n    }\n    if( stddev != null ) {\n      sb.append( \" stddev:\").append(stddev);\n    }\n    sb.append( \" }\" );\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/response/FieldStatsInfo#toString().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/response/FieldStatsInfo#toString().mjava","sourceNew":"  @Override\n  public String toString()\n  {\n    StringBuilder sb = new StringBuilder();\n    sb.append( name );\n    sb.append( \": {\" );\n    if( min != null ) {\n      sb.append( \" min:\").append( min );\n    }\n    if( max != null ) {\n      sb.append( \" max:\").append( max );\n    }\n    if( sum != null ) {\n      sb.append( \" sum:\").append( sum );\n    }\n    if( count != null ) {\n      sb.append( \" count:\").append( count );\n    }\n    if (countDistinct != null) {\n      sb.append(\" countDistinct:\").append(countDistinct);\n    }\n    if (distinctValues != null) {\n      sb.append(\" distinctValues:\").append(distinctValues);\n    }\n    if( missing != null ) {\n      sb.append( \" missing:\").append( missing );\n    }\n    if( mean != null ) {\n      sb.append( \" mean:\").append( mean );\n    }\n    if( stddev != null ) {\n      sb.append( \" stddev:\").append(stddev);\n    }\n    if( percentiles != null ) {\n      sb.append( \" percentiles:\").append(percentiles);\n    }\n    \n    sb.append( \" }\" );\n    return sb.toString();\n  }\n\n","sourceOld":"  @Override\n  public String toString()\n  {\n    StringBuilder sb = new StringBuilder();\n    sb.append( name );\n    sb.append( \": {\" );\n    if( min != null ) {\n      sb.append( \" min:\").append( min );\n    }\n    if( max != null ) {\n      sb.append( \" max:\").append( max );\n    }\n    if( sum != null ) {\n      sb.append( \" sum:\").append( sum );\n    }\n    if( count != null ) {\n      sb.append( \" count:\").append( count );\n    }\n    if (countDistinct != null) {\n      sb.append(\" countDistinct:\").append(countDistinct);\n    }\n    if (distinctValues != null) {\n      sb.append(\" distinctValues:\").append(distinctValues);\n    }\n    if( missing != null ) {\n      sb.append( \" missing:\").append( missing );\n    }\n    if( mean != null ) {\n      sb.append( \" mean:\").append( mean );\n    }\n    if( stddev != null ) {\n      sb.append( \" stddev:\").append(stddev);\n    }\n    sb.append( \" }\" );\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4a4e2c829188fb99886a64558664d79c9ac0fdf1","date":1431021538,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/response/FieldStatsInfo#toString().mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/response/FieldStatsInfo#toString().mjava","sourceNew":"  @Override\n  public String toString()\n  {\n    StringBuilder sb = new StringBuilder();\n    sb.append( name );\n    sb.append( \": {\" );\n    if( min != null ) {\n      sb.append( \" min:\").append( min );\n    }\n    if( max != null ) {\n      sb.append( \" max:\").append( max );\n    }\n    if( sum != null ) {\n      sb.append( \" sum:\").append( sum );\n    }\n    if( count != null ) {\n      sb.append( \" count:\").append( count );\n    }\n    if (countDistinct != null) {\n      sb.append(\" countDistinct:\").append(countDistinct);\n    }\n    if (distinctValues != null) {\n      sb.append(\" distinctValues:\").append(distinctValues);\n    }\n    if( missing != null ) {\n      sb.append( \" missing:\").append( missing );\n    }\n    if( mean != null ) {\n      sb.append( \" mean:\").append( mean );\n    }\n    if( stddev != null ) {\n      sb.append( \" stddev:\").append(stddev);\n    }\n    if( percentiles != null ) {\n      sb.append( \" percentiles:\").append(percentiles);\n    }\n    if( cardinality != null ) {\n      sb.append( \" cardinality:\").append(cardinality);\n    }\n    \n    sb.append( \" }\" );\n    return sb.toString();\n  }\n\n","sourceOld":"  @Override\n  public String toString()\n  {\n    StringBuilder sb = new StringBuilder();\n    sb.append( name );\n    sb.append( \": {\" );\n    if( min != null ) {\n      sb.append( \" min:\").append( min );\n    }\n    if( max != null ) {\n      sb.append( \" max:\").append( max );\n    }\n    if( sum != null ) {\n      sb.append( \" sum:\").append( sum );\n    }\n    if( count != null ) {\n      sb.append( \" count:\").append( count );\n    }\n    if (countDistinct != null) {\n      sb.append(\" countDistinct:\").append(countDistinct);\n    }\n    if (distinctValues != null) {\n      sb.append(\" distinctValues:\").append(distinctValues);\n    }\n    if( missing != null ) {\n      sb.append( \" missing:\").append( missing );\n    }\n    if( mean != null ) {\n      sb.append( \" mean:\").append( mean );\n    }\n    if( stddev != null ) {\n      sb.append( \" stddev:\").append(stddev);\n    }\n    if( percentiles != null ) {\n      sb.append( \" percentiles:\").append(percentiles);\n    }\n    \n    sb.append( \" }\" );\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["bf795ee457272965bd751f513787065bbf0a650a","1002283cfd29923d517db7c33e07bb54aac7acd4"],"4a4e2c829188fb99886a64558664d79c9ac0fdf1":["1002283cfd29923d517db7c33e07bb54aac7acd4"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":["c26f00b574427b55127e869b935845554afde1fa","bf795ee457272965bd751f513787065bbf0a650a"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"bf795ee457272965bd751f513787065bbf0a650a":["c26f00b574427b55127e869b935845554afde1fa"],"1002283cfd29923d517db7c33e07bb54aac7acd4":["bf795ee457272965bd751f513787065bbf0a650a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4a4e2c829188fb99886a64558664d79c9ac0fdf1"]},"commit2Childs":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"4a4e2c829188fb99886a64558664d79c9ac0fdf1":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["74f45af4339b0daf7a95c820ab88c1aea74fbce0","bf795ee457272965bd751f513787065bbf0a650a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"bf795ee457272965bd751f513787065bbf0a650a":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","74f45af4339b0daf7a95c820ab88c1aea74fbce0","1002283cfd29923d517db7c33e07bb54aac7acd4"],"1002283cfd29923d517db7c33e07bb54aac7acd4":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","4a4e2c829188fb99886a64558664d79c9ac0fdf1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","74f45af4339b0daf7a95c820ab88c1aea74fbce0","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}