{"path":"lucene/monitor/src/java/org/apache/lucene/monitor/ParallelMatcher#[T-extends-QueryMatch]_factory(ExecutorService,MatcherFactory[T]).mjava","commits":[{"id":"7c529b189e09de25455d82ebd7260748cf11ee14","date":1560415257,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/monitor/src/java/org/apache/lucene/monitor/ParallelMatcher#[T-extends-QueryMatch]_factory(ExecutorService,MatcherFactory[T]).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Create a new MatcherFactory for a ParallelMatcher\n   * <p>\n   * This factory will create a ParallelMatcher that uses as many threads as there are cores available\n   * to the JVM (as determined by {@code Runtime.getRuntime().availableProcessors()}).\n   *\n   * @param executor       the ExecutorService to use\n   * @param matcherFactory the MatcherFactory to use to create submatchers\n   * @param <T>            the type of QueryMatch generated\n   */\n  public static <T extends QueryMatch> MatcherFactory<T> factory(ExecutorService executor,\n                                                                         MatcherFactory<T> matcherFactory) {\n    int threads = Runtime.getRuntime().availableProcessors();\n    return new ParallelMatcherFactory<>(executor, matcherFactory, threads);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7c529b189e09de25455d82ebd7260748cf11ee14":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7c529b189e09de25455d82ebd7260748cf11ee14"]},"commit2Childs":{"7c529b189e09de25455d82ebd7260748cf11ee14":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7c529b189e09de25455d82ebd7260748cf11ee14"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}