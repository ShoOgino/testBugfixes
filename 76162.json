{"path":"lucene/core/src/java/org/apache/lucene/util/packed/DirectMonotonicReader.Meta#Meta(long,int).mjava","commits":[{"id":"a870f9917149dc600c4ad4417d615c1795de5864","date":1445975387,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/packed/DirectMonotonicReader.Meta#Meta(long,int).mjava","pathOld":"/dev/null","sourceNew":"    Meta(long numValues, int blockShift) {\n      this.numValues = numValues;\n      this.blockShift = blockShift;\n      long numBlocks = numValues >>> blockShift;\n      if ((numBlocks << blockShift) < numValues) {\n        numBlocks += 1;\n      }\n      this.numBlocks = (int) numBlocks;\n      this.mins = new long[this.numBlocks];\n      this.avgs = new float[this.numBlocks];\n      this.bpvs = new byte[this.numBlocks];\n      this.offsets = new long[this.numBlocks];\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"23e44daeaa8b89694d10df5999956c8e14a7dd09","date":1476689300,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/packed/DirectMonotonicReader.Meta#Meta(long,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/packed/DirectMonotonicReader.Meta#Meta(long,int).mjava","sourceNew":"    Meta(long numValues, int blockShift) {\n      this.blockShift = blockShift;\n      long numBlocks = numValues >>> blockShift;\n      if ((numBlocks << blockShift) < numValues) {\n        numBlocks += 1;\n      }\n      this.numBlocks = (int) numBlocks;\n      this.mins = new long[this.numBlocks];\n      this.avgs = new float[this.numBlocks];\n      this.bpvs = new byte[this.numBlocks];\n      this.offsets = new long[this.numBlocks];\n    }\n\n","sourceOld":"    Meta(long numValues, int blockShift) {\n      this.numValues = numValues;\n      this.blockShift = blockShift;\n      long numBlocks = numValues >>> blockShift;\n      if ((numBlocks << blockShift) < numValues) {\n        numBlocks += 1;\n      }\n      this.numBlocks = (int) numBlocks;\n      this.mins = new long[this.numBlocks];\n      this.avgs = new float[this.numBlocks];\n      this.bpvs = new byte[this.numBlocks];\n      this.offsets = new long[this.numBlocks];\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/packed/DirectMonotonicReader.Meta#Meta(long,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/packed/DirectMonotonicReader.Meta#Meta(long,int).mjava","sourceNew":"    Meta(long numValues, int blockShift) {\n      this.blockShift = blockShift;\n      long numBlocks = numValues >>> blockShift;\n      if ((numBlocks << blockShift) < numValues) {\n        numBlocks += 1;\n      }\n      this.numBlocks = (int) numBlocks;\n      this.mins = new long[this.numBlocks];\n      this.avgs = new float[this.numBlocks];\n      this.bpvs = new byte[this.numBlocks];\n      this.offsets = new long[this.numBlocks];\n    }\n\n","sourceOld":"    Meta(long numValues, int blockShift) {\n      this.numValues = numValues;\n      this.blockShift = blockShift;\n      long numBlocks = numValues >>> blockShift;\n      if ((numBlocks << blockShift) < numValues) {\n        numBlocks += 1;\n      }\n      this.numBlocks = (int) numBlocks;\n      this.mins = new long[this.numBlocks];\n      this.avgs = new float[this.numBlocks];\n      this.bpvs = new byte[this.numBlocks];\n      this.offsets = new long[this.numBlocks];\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"23e44daeaa8b89694d10df5999956c8e14a7dd09":["a870f9917149dc600c4ad4417d615c1795de5864"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a870f9917149dc600c4ad4417d615c1795de5864":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a870f9917149dc600c4ad4417d615c1795de5864","23e44daeaa8b89694d10df5999956c8e14a7dd09"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["23e44daeaa8b89694d10df5999956c8e14a7dd09"]},"commit2Childs":{"23e44daeaa8b89694d10df5999956c8e14a7dd09":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a870f9917149dc600c4ad4417d615c1795de5864"],"a870f9917149dc600c4ad4417d615c1795de5864":["23e44daeaa8b89694d10df5999956c8e14a7dd09","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}