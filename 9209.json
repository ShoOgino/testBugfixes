{"path":"lucene/analysis/uima/src/test/org/apache/lucene/analysis/uima/UIMABaseAnalyzerTest#baseUIMAAnalyzerIntegrationTest().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/uima/src/test/org/apache/lucene/analysis/uima/UIMABaseAnalyzerTest#baseUIMAAnalyzerIntegrationTest().mjava","pathOld":"modules/analysis/uima/src/test/org/apache/lucene/analysis/uima/UIMABaseAnalyzerTest#baseUIMAAnalyzerIntegrationTest().mjava","sourceNew":"  @Test\n  public void baseUIMAAnalyzerIntegrationTest() throws Exception {\n    Directory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(Version.LUCENE_40, analyzer));\n    // add the first doc\n    Document doc = new Document();\n    String dummyTitle = \"this is a dummy title \";\n    doc.add(new Field(\"title\", dummyTitle, TextField.TYPE_STORED));\n    String dummyContent = \"there is some content written here\";\n    doc.add(new Field(\"contents\", dummyContent, TextField.TYPE_STORED));\n    writer.addDocument(doc, analyzer);\n    writer.commit();\n\n    // try the search over the first doc\n    DirectoryReader directoryReader = DirectoryReader.open(dir);\n    IndexSearcher indexSearcher = new IndexSearcher(directoryReader);\n    TopDocs result = indexSearcher.search(new MatchAllDocsQuery(), 10);\n    assertTrue(result.totalHits > 0);\n    Document d = indexSearcher.doc(result.scoreDocs[0].doc);\n    assertNotNull(d);\n    assertNotNull(d.getField(\"title\"));\n    assertEquals(dummyTitle, d.getField(\"title\").stringValue());\n    assertNotNull(d.getField(\"contents\"));\n    assertEquals(dummyContent, d.getField(\"contents\").stringValue());\n\n    // add a second doc\n    doc = new Document();\n    String dogmasTitle = \"dogmas\";\n    doc.add(new Field(\"title\", dogmasTitle, TextField.TYPE_STORED));\n    String dogmasContents = \"white men can't jump\";\n    doc.add(new Field(\"contents\", dogmasContents, TextField.TYPE_STORED));\n    writer.addDocument(doc, analyzer);\n    writer.commit();\n\n    directoryReader.close();\n    directoryReader = DirectoryReader.open(dir);\n    indexSearcher = new IndexSearcher(directoryReader);\n    result = indexSearcher.search(new MatchAllDocsQuery(), 10);\n    Document d1 = indexSearcher.doc(result.scoreDocs[1].doc);\n    assertNotNull(d1);\n    assertNotNull(d1.getField(\"title\"));\n    assertEquals(dogmasTitle, d1.getField(\"title\").stringValue());\n    assertNotNull(d1.getField(\"contents\"));\n    assertEquals(dogmasContents, d1.getField(\"contents\").stringValue());\n\n    // do a matchalldocs query to retrieve both docs\n    indexSearcher = new IndexSearcher(directoryReader);\n    result = indexSearcher.search(new MatchAllDocsQuery(), 10);\n    assertEquals(2, result.totalHits);\n    writer.close();\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","sourceOld":"  @Test\n  public void baseUIMAAnalyzerIntegrationTest() throws Exception {\n    Directory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(Version.LUCENE_40, analyzer));\n    // add the first doc\n    Document doc = new Document();\n    String dummyTitle = \"this is a dummy title \";\n    doc.add(new Field(\"title\", dummyTitle, TextField.TYPE_STORED));\n    String dummyContent = \"there is some content written here\";\n    doc.add(new Field(\"contents\", dummyContent, TextField.TYPE_STORED));\n    writer.addDocument(doc, analyzer);\n    writer.commit();\n\n    // try the search over the first doc\n    DirectoryReader directoryReader = DirectoryReader.open(dir);\n    IndexSearcher indexSearcher = new IndexSearcher(directoryReader);\n    TopDocs result = indexSearcher.search(new MatchAllDocsQuery(), 10);\n    assertTrue(result.totalHits > 0);\n    Document d = indexSearcher.doc(result.scoreDocs[0].doc);\n    assertNotNull(d);\n    assertNotNull(d.getField(\"title\"));\n    assertEquals(dummyTitle, d.getField(\"title\").stringValue());\n    assertNotNull(d.getField(\"contents\"));\n    assertEquals(dummyContent, d.getField(\"contents\").stringValue());\n\n    // add a second doc\n    doc = new Document();\n    String dogmasTitle = \"dogmas\";\n    doc.add(new Field(\"title\", dogmasTitle, TextField.TYPE_STORED));\n    String dogmasContents = \"white men can't jump\";\n    doc.add(new Field(\"contents\", dogmasContents, TextField.TYPE_STORED));\n    writer.addDocument(doc, analyzer);\n    writer.commit();\n\n    directoryReader.close();\n    directoryReader = DirectoryReader.open(dir);\n    indexSearcher = new IndexSearcher(directoryReader);\n    result = indexSearcher.search(new MatchAllDocsQuery(), 10);\n    Document d1 = indexSearcher.doc(result.scoreDocs[1].doc);\n    assertNotNull(d1);\n    assertNotNull(d1.getField(\"title\"));\n    assertEquals(dogmasTitle, d1.getField(\"title\").stringValue());\n    assertNotNull(d1.getField(\"contents\"));\n    assertEquals(dogmasContents, d1.getField(\"contents\").stringValue());\n\n    // do a matchalldocs query to retrieve both docs\n    indexSearcher = new IndexSearcher(directoryReader);\n    result = indexSearcher.search(new MatchAllDocsQuery(), 10);\n    assertEquals(2, result.totalHits);\n    writer.close();\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"04f07771a2a7dd3a395700665ed839c3dae2def2","date":1339350139,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/analysis/uima/src/test/org/apache/lucene/analysis/uima/UIMABaseAnalyzerTest#baseUIMAAnalyzerIntegrationTest().mjava","pathOld":"lucene/analysis/uima/src/test/org/apache/lucene/analysis/uima/UIMABaseAnalyzerTest#baseUIMAAnalyzerIntegrationTest().mjava","sourceNew":"  @Test\n  public void baseUIMAAnalyzerIntegrationTest() throws Exception {\n    Directory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(Version.LUCENE_40, analyzer));\n    // add the first doc\n    Document doc = new Document();\n    String dummyTitle = \"this is a dummy title \";\n    doc.add(new TextField(\"title\", dummyTitle, Field.Store.YES));\n    String dummyContent = \"there is some content written here\";\n    doc.add(new TextField(\"contents\", dummyContent, Field.Store.YES));\n    writer.addDocument(doc, analyzer);\n    writer.commit();\n\n    // try the search over the first doc\n    DirectoryReader directoryReader = DirectoryReader.open(dir);\n    IndexSearcher indexSearcher = new IndexSearcher(directoryReader);\n    TopDocs result = indexSearcher.search(new MatchAllDocsQuery(), 10);\n    assertTrue(result.totalHits > 0);\n    Document d = indexSearcher.doc(result.scoreDocs[0].doc);\n    assertNotNull(d);\n    assertNotNull(d.getField(\"title\"));\n    assertEquals(dummyTitle, d.getField(\"title\").stringValue());\n    assertNotNull(d.getField(\"contents\"));\n    assertEquals(dummyContent, d.getField(\"contents\").stringValue());\n\n    // add a second doc\n    doc = new Document();\n    String dogmasTitle = \"dogmas\";\n    doc.add(new TextField(\"title\", dogmasTitle, Field.Store.YES));\n    String dogmasContents = \"white men can't jump\";\n    doc.add(new TextField(\"contents\", dogmasContents, Field.Store.YES));\n    writer.addDocument(doc, analyzer);\n    writer.commit();\n\n    directoryReader.close();\n    directoryReader = DirectoryReader.open(dir);\n    indexSearcher = new IndexSearcher(directoryReader);\n    result = indexSearcher.search(new MatchAllDocsQuery(), 10);\n    Document d1 = indexSearcher.doc(result.scoreDocs[1].doc);\n    assertNotNull(d1);\n    assertNotNull(d1.getField(\"title\"));\n    assertEquals(dogmasTitle, d1.getField(\"title\").stringValue());\n    assertNotNull(d1.getField(\"contents\"));\n    assertEquals(dogmasContents, d1.getField(\"contents\").stringValue());\n\n    // do a matchalldocs query to retrieve both docs\n    indexSearcher = new IndexSearcher(directoryReader);\n    result = indexSearcher.search(new MatchAllDocsQuery(), 10);\n    assertEquals(2, result.totalHits);\n    writer.close();\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","sourceOld":"  @Test\n  public void baseUIMAAnalyzerIntegrationTest() throws Exception {\n    Directory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(Version.LUCENE_40, analyzer));\n    // add the first doc\n    Document doc = new Document();\n    String dummyTitle = \"this is a dummy title \";\n    doc.add(new Field(\"title\", dummyTitle, TextField.TYPE_STORED));\n    String dummyContent = \"there is some content written here\";\n    doc.add(new Field(\"contents\", dummyContent, TextField.TYPE_STORED));\n    writer.addDocument(doc, analyzer);\n    writer.commit();\n\n    // try the search over the first doc\n    DirectoryReader directoryReader = DirectoryReader.open(dir);\n    IndexSearcher indexSearcher = new IndexSearcher(directoryReader);\n    TopDocs result = indexSearcher.search(new MatchAllDocsQuery(), 10);\n    assertTrue(result.totalHits > 0);\n    Document d = indexSearcher.doc(result.scoreDocs[0].doc);\n    assertNotNull(d);\n    assertNotNull(d.getField(\"title\"));\n    assertEquals(dummyTitle, d.getField(\"title\").stringValue());\n    assertNotNull(d.getField(\"contents\"));\n    assertEquals(dummyContent, d.getField(\"contents\").stringValue());\n\n    // add a second doc\n    doc = new Document();\n    String dogmasTitle = \"dogmas\";\n    doc.add(new Field(\"title\", dogmasTitle, TextField.TYPE_STORED));\n    String dogmasContents = \"white men can't jump\";\n    doc.add(new Field(\"contents\", dogmasContents, TextField.TYPE_STORED));\n    writer.addDocument(doc, analyzer);\n    writer.commit();\n\n    directoryReader.close();\n    directoryReader = DirectoryReader.open(dir);\n    indexSearcher = new IndexSearcher(directoryReader);\n    result = indexSearcher.search(new MatchAllDocsQuery(), 10);\n    Document d1 = indexSearcher.doc(result.scoreDocs[1].doc);\n    assertNotNull(d1);\n    assertNotNull(d1.getField(\"title\"));\n    assertEquals(dogmasTitle, d1.getField(\"title\").stringValue());\n    assertNotNull(d1.getField(\"contents\"));\n    assertEquals(dogmasContents, d1.getField(\"contents\").stringValue());\n\n    // do a matchalldocs query to retrieve both docs\n    indexSearcher = new IndexSearcher(directoryReader);\n    result = indexSearcher.search(new MatchAllDocsQuery(), 10);\n    assertEquals(2, result.totalHits);\n    writer.close();\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","bugFix":["2ac3b0ef79dfcf20e23ceb1d0e4165591014307f"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2b41cd5f854d4c62cbca2fab3372e4a1bfeb44f1","date":1342040076,"type":3,"author":"Tommaso Teofili","isMerge":false,"pathNew":"lucene/analysis/uima/src/test/org/apache/lucene/analysis/uima/UIMABaseAnalyzerTest#baseUIMAAnalyzerIntegrationTest().mjava","pathOld":"lucene/analysis/uima/src/test/org/apache/lucene/analysis/uima/UIMABaseAnalyzerTest#baseUIMAAnalyzerIntegrationTest().mjava","sourceNew":"  @Test\n  public void baseUIMAAnalyzerIntegrationTest() throws Exception {\n    Directory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(Version.LUCENE_40, analyzer));\n    // add the first doc\n    Document doc = new Document();\n    String dummyTitle = \"this is a dummy title \";\n    doc.add(new TextField(\"title\", dummyTitle, Field.Store.YES));\n    String dummyContent = \"there is some content written here\";\n    doc.add(new TextField(\"contents\", dummyContent, Field.Store.YES));\n    writer.addDocument(doc, analyzer);\n    writer.commit();\n\n    // try the search over the first doc\n    DirectoryReader directoryReader = DirectoryReader.open(dir);\n    IndexSearcher indexSearcher = new IndexSearcher(directoryReader);\n    TopDocs result = indexSearcher.search(new MatchAllDocsQuery(), 1);\n    assertTrue(result.totalHits > 0);\n    Document d = indexSearcher.doc(result.scoreDocs[0].doc);\n    assertNotNull(d);\n    assertNotNull(d.getField(\"title\"));\n    assertEquals(dummyTitle, d.getField(\"title\").stringValue());\n    assertNotNull(d.getField(\"contents\"));\n    assertEquals(dummyContent, d.getField(\"contents\").stringValue());\n\n    // add a second doc\n    doc = new Document();\n    String dogmasTitle = \"dogmas\";\n    doc.add(new TextField(\"title\", dogmasTitle, Field.Store.YES));\n    String dogmasContents = \"white men can't jump\";\n    doc.add(new TextField(\"contents\", dogmasContents, Field.Store.YES));\n    writer.addDocument(doc, analyzer);\n    writer.commit();\n\n    directoryReader.close();\n    directoryReader = DirectoryReader.open(dir);\n    indexSearcher = new IndexSearcher(directoryReader);\n    result = indexSearcher.search(new MatchAllDocsQuery(), 2);\n    Document d1 = indexSearcher.doc(result.scoreDocs[1].doc);\n    assertNotNull(d1);\n    assertNotNull(d1.getField(\"title\"));\n    assertEquals(dogmasTitle, d1.getField(\"title\").stringValue());\n    assertNotNull(d1.getField(\"contents\"));\n    assertEquals(dogmasContents, d1.getField(\"contents\").stringValue());\n\n    // do a matchalldocs query to retrieve both docs\n    indexSearcher = new IndexSearcher(directoryReader);\n    result = indexSearcher.search(new MatchAllDocsQuery(), 2);\n    assertEquals(2, result.totalHits);\n    writer.close();\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","sourceOld":"  @Test\n  public void baseUIMAAnalyzerIntegrationTest() throws Exception {\n    Directory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(Version.LUCENE_40, analyzer));\n    // add the first doc\n    Document doc = new Document();\n    String dummyTitle = \"this is a dummy title \";\n    doc.add(new TextField(\"title\", dummyTitle, Field.Store.YES));\n    String dummyContent = \"there is some content written here\";\n    doc.add(new TextField(\"contents\", dummyContent, Field.Store.YES));\n    writer.addDocument(doc, analyzer);\n    writer.commit();\n\n    // try the search over the first doc\n    DirectoryReader directoryReader = DirectoryReader.open(dir);\n    IndexSearcher indexSearcher = new IndexSearcher(directoryReader);\n    TopDocs result = indexSearcher.search(new MatchAllDocsQuery(), 10);\n    assertTrue(result.totalHits > 0);\n    Document d = indexSearcher.doc(result.scoreDocs[0].doc);\n    assertNotNull(d);\n    assertNotNull(d.getField(\"title\"));\n    assertEquals(dummyTitle, d.getField(\"title\").stringValue());\n    assertNotNull(d.getField(\"contents\"));\n    assertEquals(dummyContent, d.getField(\"contents\").stringValue());\n\n    // add a second doc\n    doc = new Document();\n    String dogmasTitle = \"dogmas\";\n    doc.add(new TextField(\"title\", dogmasTitle, Field.Store.YES));\n    String dogmasContents = \"white men can't jump\";\n    doc.add(new TextField(\"contents\", dogmasContents, Field.Store.YES));\n    writer.addDocument(doc, analyzer);\n    writer.commit();\n\n    directoryReader.close();\n    directoryReader = DirectoryReader.open(dir);\n    indexSearcher = new IndexSearcher(directoryReader);\n    result = indexSearcher.search(new MatchAllDocsQuery(), 10);\n    Document d1 = indexSearcher.doc(result.scoreDocs[1].doc);\n    assertNotNull(d1);\n    assertNotNull(d1.getField(\"title\"));\n    assertEquals(dogmasTitle, d1.getField(\"title\").stringValue());\n    assertNotNull(d1.getField(\"contents\"));\n    assertEquals(dogmasContents, d1.getField(\"contents\").stringValue());\n\n    // do a matchalldocs query to retrieve both docs\n    indexSearcher = new IndexSearcher(directoryReader);\n    result = indexSearcher.search(new MatchAllDocsQuery(), 10);\n    assertEquals(2, result.totalHits);\n    writer.close();\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"42135bfb552bead33a31120853659a2a2bfd6b9f","date":1342389253,"type":3,"author":"Tommaso Teofili","isMerge":false,"pathNew":"lucene/analysis/uima/src/test/org/apache/lucene/analysis/uima/UIMABaseAnalyzerTest#baseUIMAAnalyzerIntegrationTest().mjava","pathOld":"lucene/analysis/uima/src/test/org/apache/lucene/analysis/uima/UIMABaseAnalyzerTest#baseUIMAAnalyzerIntegrationTest().mjava","sourceNew":"  @Test\n  public void baseUIMAAnalyzerIntegrationTest() throws Exception {\n    Directory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(Version.LUCENE_50, analyzer));\n    // add the first doc\n    Document doc = new Document();\n    String dummyTitle = \"this is a dummy title \";\n    doc.add(new TextField(\"title\", dummyTitle, Field.Store.YES));\n    String dummyContent = \"there is some content written here\";\n    doc.add(new TextField(\"contents\", dummyContent, Field.Store.YES));\n    writer.addDocument(doc, analyzer);\n    writer.commit();\n\n    // try the search over the first doc\n    DirectoryReader directoryReader = DirectoryReader.open(dir);\n    IndexSearcher indexSearcher = new IndexSearcher(directoryReader);\n    TopDocs result = indexSearcher.search(new MatchAllDocsQuery(), 1);\n    assertTrue(result.totalHits > 0);\n    Document d = indexSearcher.doc(result.scoreDocs[0].doc);\n    assertNotNull(d);\n    assertNotNull(d.getField(\"title\"));\n    assertEquals(dummyTitle, d.getField(\"title\").stringValue());\n    assertNotNull(d.getField(\"contents\"));\n    assertEquals(dummyContent, d.getField(\"contents\").stringValue());\n\n    // add a second doc\n    doc = new Document();\n    String dogmasTitle = \"dogmas\";\n    doc.add(new TextField(\"title\", dogmasTitle, Field.Store.YES));\n    String dogmasContents = \"white men can't jump\";\n    doc.add(new TextField(\"contents\", dogmasContents, Field.Store.YES));\n    writer.addDocument(doc, analyzer);\n    writer.commit();\n\n    directoryReader.close();\n    directoryReader = DirectoryReader.open(dir);\n    indexSearcher = new IndexSearcher(directoryReader);\n    result = indexSearcher.search(new MatchAllDocsQuery(), 2);\n    Document d1 = indexSearcher.doc(result.scoreDocs[1].doc);\n    assertNotNull(d1);\n    assertNotNull(d1.getField(\"title\"));\n    assertEquals(dogmasTitle, d1.getField(\"title\").stringValue());\n    assertNotNull(d1.getField(\"contents\"));\n    assertEquals(dogmasContents, d1.getField(\"contents\").stringValue());\n\n    // do a matchalldocs query to retrieve both docs\n    indexSearcher = new IndexSearcher(directoryReader);\n    result = indexSearcher.search(new MatchAllDocsQuery(), 2);\n    assertEquals(2, result.totalHits);\n    writer.close();\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","sourceOld":"  @Test\n  public void baseUIMAAnalyzerIntegrationTest() throws Exception {\n    Directory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(Version.LUCENE_40, analyzer));\n    // add the first doc\n    Document doc = new Document();\n    String dummyTitle = \"this is a dummy title \";\n    doc.add(new TextField(\"title\", dummyTitle, Field.Store.YES));\n    String dummyContent = \"there is some content written here\";\n    doc.add(new TextField(\"contents\", dummyContent, Field.Store.YES));\n    writer.addDocument(doc, analyzer);\n    writer.commit();\n\n    // try the search over the first doc\n    DirectoryReader directoryReader = DirectoryReader.open(dir);\n    IndexSearcher indexSearcher = new IndexSearcher(directoryReader);\n    TopDocs result = indexSearcher.search(new MatchAllDocsQuery(), 1);\n    assertTrue(result.totalHits > 0);\n    Document d = indexSearcher.doc(result.scoreDocs[0].doc);\n    assertNotNull(d);\n    assertNotNull(d.getField(\"title\"));\n    assertEquals(dummyTitle, d.getField(\"title\").stringValue());\n    assertNotNull(d.getField(\"contents\"));\n    assertEquals(dummyContent, d.getField(\"contents\").stringValue());\n\n    // add a second doc\n    doc = new Document();\n    String dogmasTitle = \"dogmas\";\n    doc.add(new TextField(\"title\", dogmasTitle, Field.Store.YES));\n    String dogmasContents = \"white men can't jump\";\n    doc.add(new TextField(\"contents\", dogmasContents, Field.Store.YES));\n    writer.addDocument(doc, analyzer);\n    writer.commit();\n\n    directoryReader.close();\n    directoryReader = DirectoryReader.open(dir);\n    indexSearcher = new IndexSearcher(directoryReader);\n    result = indexSearcher.search(new MatchAllDocsQuery(), 2);\n    Document d1 = indexSearcher.doc(result.scoreDocs[1].doc);\n    assertNotNull(d1);\n    assertNotNull(d1.getField(\"title\"));\n    assertEquals(dogmasTitle, d1.getField(\"title\").stringValue());\n    assertNotNull(d1.getField(\"contents\"));\n    assertEquals(dogmasContents, d1.getField(\"contents\").stringValue());\n\n    // do a matchalldocs query to retrieve both docs\n    indexSearcher = new IndexSearcher(directoryReader);\n    result = indexSearcher.search(new MatchAllDocsQuery(), 2);\n    assertEquals(2, result.totalHits);\n    writer.close();\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1b91ac39e2aa0530982f5abb5ef8bff2537746f6","date":1342476408,"type":3,"author":"Tommaso Teofili","isMerge":false,"pathNew":"lucene/analysis/uima/src/test/org/apache/lucene/analysis/uima/UIMABaseAnalyzerTest#baseUIMAAnalyzerIntegrationTest().mjava","pathOld":"lucene/analysis/uima/src/test/org/apache/lucene/analysis/uima/UIMABaseAnalyzerTest#baseUIMAAnalyzerIntegrationTest().mjava","sourceNew":"  @Test\n  public void baseUIMAAnalyzerIntegrationTest() throws Exception {\n    Directory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, analyzer));\n    // add the first doc\n    Document doc = new Document();\n    String dummyTitle = \"this is a dummy title \";\n    doc.add(new TextField(\"title\", dummyTitle, Field.Store.YES));\n    String dummyContent = \"there is some content written here\";\n    doc.add(new TextField(\"contents\", dummyContent, Field.Store.YES));\n    writer.addDocument(doc, analyzer);\n    writer.commit();\n\n    // try the search over the first doc\n    DirectoryReader directoryReader = DirectoryReader.open(dir);\n    IndexSearcher indexSearcher = new IndexSearcher(directoryReader);\n    TopDocs result = indexSearcher.search(new MatchAllDocsQuery(), 1);\n    assertTrue(result.totalHits > 0);\n    Document d = indexSearcher.doc(result.scoreDocs[0].doc);\n    assertNotNull(d);\n    assertNotNull(d.getField(\"title\"));\n    assertEquals(dummyTitle, d.getField(\"title\").stringValue());\n    assertNotNull(d.getField(\"contents\"));\n    assertEquals(dummyContent, d.getField(\"contents\").stringValue());\n\n    // add a second doc\n    doc = new Document();\n    String dogmasTitle = \"dogmas\";\n    doc.add(new TextField(\"title\", dogmasTitle, Field.Store.YES));\n    String dogmasContents = \"white men can't jump\";\n    doc.add(new TextField(\"contents\", dogmasContents, Field.Store.YES));\n    writer.addDocument(doc, analyzer);\n    writer.commit();\n\n    directoryReader.close();\n    directoryReader = DirectoryReader.open(dir);\n    indexSearcher = new IndexSearcher(directoryReader);\n    result = indexSearcher.search(new MatchAllDocsQuery(), 2);\n    Document d1 = indexSearcher.doc(result.scoreDocs[1].doc);\n    assertNotNull(d1);\n    assertNotNull(d1.getField(\"title\"));\n    assertEquals(dogmasTitle, d1.getField(\"title\").stringValue());\n    assertNotNull(d1.getField(\"contents\"));\n    assertEquals(dogmasContents, d1.getField(\"contents\").stringValue());\n\n    // do a matchalldocs query to retrieve both docs\n    indexSearcher = new IndexSearcher(directoryReader);\n    result = indexSearcher.search(new MatchAllDocsQuery(), 2);\n    assertEquals(2, result.totalHits);\n    writer.close();\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","sourceOld":"  @Test\n  public void baseUIMAAnalyzerIntegrationTest() throws Exception {\n    Directory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(Version.LUCENE_50, analyzer));\n    // add the first doc\n    Document doc = new Document();\n    String dummyTitle = \"this is a dummy title \";\n    doc.add(new TextField(\"title\", dummyTitle, Field.Store.YES));\n    String dummyContent = \"there is some content written here\";\n    doc.add(new TextField(\"contents\", dummyContent, Field.Store.YES));\n    writer.addDocument(doc, analyzer);\n    writer.commit();\n\n    // try the search over the first doc\n    DirectoryReader directoryReader = DirectoryReader.open(dir);\n    IndexSearcher indexSearcher = new IndexSearcher(directoryReader);\n    TopDocs result = indexSearcher.search(new MatchAllDocsQuery(), 1);\n    assertTrue(result.totalHits > 0);\n    Document d = indexSearcher.doc(result.scoreDocs[0].doc);\n    assertNotNull(d);\n    assertNotNull(d.getField(\"title\"));\n    assertEquals(dummyTitle, d.getField(\"title\").stringValue());\n    assertNotNull(d.getField(\"contents\"));\n    assertEquals(dummyContent, d.getField(\"contents\").stringValue());\n\n    // add a second doc\n    doc = new Document();\n    String dogmasTitle = \"dogmas\";\n    doc.add(new TextField(\"title\", dogmasTitle, Field.Store.YES));\n    String dogmasContents = \"white men can't jump\";\n    doc.add(new TextField(\"contents\", dogmasContents, Field.Store.YES));\n    writer.addDocument(doc, analyzer);\n    writer.commit();\n\n    directoryReader.close();\n    directoryReader = DirectoryReader.open(dir);\n    indexSearcher = new IndexSearcher(directoryReader);\n    result = indexSearcher.search(new MatchAllDocsQuery(), 2);\n    Document d1 = indexSearcher.doc(result.scoreDocs[1].doc);\n    assertNotNull(d1);\n    assertNotNull(d1.getField(\"title\"));\n    assertEquals(dogmasTitle, d1.getField(\"title\").stringValue());\n    assertNotNull(d1.getField(\"contents\"));\n    assertEquals(dogmasContents, d1.getField(\"contents\").stringValue());\n\n    // do a matchalldocs query to retrieve both docs\n    indexSearcher = new IndexSearcher(directoryReader);\n    result = indexSearcher.search(new MatchAllDocsQuery(), 2);\n    assertEquals(2, result.totalHits);\n    writer.close();\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/analysis/uima/src/test/org/apache/lucene/analysis/uima/UIMABaseAnalyzerTest#baseUIMAAnalyzerIntegrationTest().mjava","pathOld":"lucene/analysis/uima/src/test/org/apache/lucene/analysis/uima/UIMABaseAnalyzerTest#baseUIMAAnalyzerIntegrationTest().mjava","sourceNew":"  @Test\n  public void baseUIMAAnalyzerIntegrationTest() throws Exception {\n    Directory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, analyzer));\n    // add the first doc\n    Document doc = new Document();\n    String dummyTitle = \"this is a dummy title \";\n    doc.add(new TextField(\"title\", dummyTitle, Field.Store.YES));\n    String dummyContent = \"there is some content written here\";\n    doc.add(new TextField(\"contents\", dummyContent, Field.Store.YES));\n    writer.addDocument(doc, analyzer);\n    writer.commit();\n\n    // try the search over the first doc\n    DirectoryReader directoryReader = DirectoryReader.open(dir);\n    IndexSearcher indexSearcher = new IndexSearcher(directoryReader);\n    TopDocs result = indexSearcher.search(new MatchAllDocsQuery(), 1);\n    assertTrue(result.totalHits > 0);\n    Document d = indexSearcher.doc(result.scoreDocs[0].doc);\n    assertNotNull(d);\n    assertNotNull(d.getField(\"title\"));\n    assertEquals(dummyTitle, d.getField(\"title\").stringValue());\n    assertNotNull(d.getField(\"contents\"));\n    assertEquals(dummyContent, d.getField(\"contents\").stringValue());\n\n    // add a second doc\n    doc = new Document();\n    String dogmasTitle = \"dogmas\";\n    doc.add(new TextField(\"title\", dogmasTitle, Field.Store.YES));\n    String dogmasContents = \"white men can't jump\";\n    doc.add(new TextField(\"contents\", dogmasContents, Field.Store.YES));\n    writer.addDocument(doc, analyzer);\n    writer.commit();\n\n    directoryReader.close();\n    directoryReader = DirectoryReader.open(dir);\n    indexSearcher = new IndexSearcher(directoryReader);\n    result = indexSearcher.search(new MatchAllDocsQuery(), 2);\n    Document d1 = indexSearcher.doc(result.scoreDocs[1].doc);\n    assertNotNull(d1);\n    assertNotNull(d1.getField(\"title\"));\n    assertEquals(dogmasTitle, d1.getField(\"title\").stringValue());\n    assertNotNull(d1.getField(\"contents\"));\n    assertEquals(dogmasContents, d1.getField(\"contents\").stringValue());\n\n    // do a matchalldocs query to retrieve both docs\n    indexSearcher = new IndexSearcher(directoryReader);\n    result = indexSearcher.search(new MatchAllDocsQuery(), 2);\n    assertEquals(2, result.totalHits);\n    writer.close();\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","sourceOld":"  @Test\n  public void baseUIMAAnalyzerIntegrationTest() throws Exception {\n    Directory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(Version.LUCENE_40, analyzer));\n    // add the first doc\n    Document doc = new Document();\n    String dummyTitle = \"this is a dummy title \";\n    doc.add(new TextField(\"title\", dummyTitle, Field.Store.YES));\n    String dummyContent = \"there is some content written here\";\n    doc.add(new TextField(\"contents\", dummyContent, Field.Store.YES));\n    writer.addDocument(doc, analyzer);\n    writer.commit();\n\n    // try the search over the first doc\n    DirectoryReader directoryReader = DirectoryReader.open(dir);\n    IndexSearcher indexSearcher = new IndexSearcher(directoryReader);\n    TopDocs result = indexSearcher.search(new MatchAllDocsQuery(), 10);\n    assertTrue(result.totalHits > 0);\n    Document d = indexSearcher.doc(result.scoreDocs[0].doc);\n    assertNotNull(d);\n    assertNotNull(d.getField(\"title\"));\n    assertEquals(dummyTitle, d.getField(\"title\").stringValue());\n    assertNotNull(d.getField(\"contents\"));\n    assertEquals(dummyContent, d.getField(\"contents\").stringValue());\n\n    // add a second doc\n    doc = new Document();\n    String dogmasTitle = \"dogmas\";\n    doc.add(new TextField(\"title\", dogmasTitle, Field.Store.YES));\n    String dogmasContents = \"white men can't jump\";\n    doc.add(new TextField(\"contents\", dogmasContents, Field.Store.YES));\n    writer.addDocument(doc, analyzer);\n    writer.commit();\n\n    directoryReader.close();\n    directoryReader = DirectoryReader.open(dir);\n    indexSearcher = new IndexSearcher(directoryReader);\n    result = indexSearcher.search(new MatchAllDocsQuery(), 10);\n    Document d1 = indexSearcher.doc(result.scoreDocs[1].doc);\n    assertNotNull(d1);\n    assertNotNull(d1.getField(\"title\"));\n    assertEquals(dogmasTitle, d1.getField(\"title\").stringValue());\n    assertNotNull(d1.getField(\"contents\"));\n    assertEquals(dogmasContents, d1.getField(\"contents\").stringValue());\n\n    // do a matchalldocs query to retrieve both docs\n    indexSearcher = new IndexSearcher(directoryReader);\n    result = indexSearcher.search(new MatchAllDocsQuery(), 10);\n    assertEquals(2, result.totalHits);\n    writer.close();\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a7e4907084808af8fdb14b9809e6dceaccf6867b","date":1343473006,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/analysis/uima/src/test/org/apache/lucene/analysis/uima/UIMABaseAnalyzerTest#baseUIMAAnalyzerIntegrationTest().mjava","pathOld":"lucene/analysis/uima/src/test/org/apache/lucene/analysis/uima/UIMABaseAnalyzerTest#baseUIMAAnalyzerIntegrationTest().mjava","sourceNew":"  @Test\n  public void baseUIMAAnalyzerIntegrationTest() throws Exception {\n    Directory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(Version.LUCENE_40, analyzer));\n    // add the first doc\n    Document doc = new Document();\n    String dummyTitle = \"this is a dummy title \";\n    doc.add(new TextField(\"title\", dummyTitle, Field.Store.YES));\n    String dummyContent = \"there is some content written here\";\n    doc.add(new TextField(\"contents\", dummyContent, Field.Store.YES));\n    writer.addDocument(doc, analyzer);\n    writer.commit();\n\n    // try the search over the first doc\n    DirectoryReader directoryReader = DirectoryReader.open(dir);\n    IndexSearcher indexSearcher = new IndexSearcher(directoryReader);\n    TopDocs result = indexSearcher.search(new MatchAllDocsQuery(), 10);\n    assertTrue(result.totalHits > 0);\n    StoredDocument d = indexSearcher.doc(result.scoreDocs[0].doc);\n    assertNotNull(d);\n    assertNotNull(d.getField(\"title\"));\n    assertEquals(dummyTitle, d.getField(\"title\").stringValue());\n    assertNotNull(d.getField(\"contents\"));\n    assertEquals(dummyContent, d.getField(\"contents\").stringValue());\n\n    // add a second doc\n    doc = new Document();\n    String dogmasTitle = \"dogmas\";\n    doc.add(new TextField(\"title\", dogmasTitle, Field.Store.YES));\n    String dogmasContents = \"white men can't jump\";\n    doc.add(new TextField(\"contents\", dogmasContents, Field.Store.YES));\n    writer.addDocument(doc, analyzer);\n    writer.commit();\n\n    directoryReader.close();\n    directoryReader = DirectoryReader.open(dir);\n    indexSearcher = new IndexSearcher(directoryReader);\n    result = indexSearcher.search(new MatchAllDocsQuery(), 10);\n    StoredDocument d1 = indexSearcher.doc(result.scoreDocs[1].doc);\n    assertNotNull(d1);\n    assertNotNull(d1.getField(\"title\"));\n    assertEquals(dogmasTitle, d1.getField(\"title\").stringValue());\n    assertNotNull(d1.getField(\"contents\"));\n    assertEquals(dogmasContents, d1.getField(\"contents\").stringValue());\n\n    // do a matchalldocs query to retrieve both docs\n    indexSearcher = new IndexSearcher(directoryReader);\n    result = indexSearcher.search(new MatchAllDocsQuery(), 10);\n    assertEquals(2, result.totalHits);\n    writer.close();\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","sourceOld":"  @Test\n  public void baseUIMAAnalyzerIntegrationTest() throws Exception {\n    Directory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(Version.LUCENE_40, analyzer));\n    // add the first doc\n    Document doc = new Document();\n    String dummyTitle = \"this is a dummy title \";\n    doc.add(new TextField(\"title\", dummyTitle, Field.Store.YES));\n    String dummyContent = \"there is some content written here\";\n    doc.add(new TextField(\"contents\", dummyContent, Field.Store.YES));\n    writer.addDocument(doc, analyzer);\n    writer.commit();\n\n    // try the search over the first doc\n    DirectoryReader directoryReader = DirectoryReader.open(dir);\n    IndexSearcher indexSearcher = new IndexSearcher(directoryReader);\n    TopDocs result = indexSearcher.search(new MatchAllDocsQuery(), 10);\n    assertTrue(result.totalHits > 0);\n    Document d = indexSearcher.doc(result.scoreDocs[0].doc);\n    assertNotNull(d);\n    assertNotNull(d.getField(\"title\"));\n    assertEquals(dummyTitle, d.getField(\"title\").stringValue());\n    assertNotNull(d.getField(\"contents\"));\n    assertEquals(dummyContent, d.getField(\"contents\").stringValue());\n\n    // add a second doc\n    doc = new Document();\n    String dogmasTitle = \"dogmas\";\n    doc.add(new TextField(\"title\", dogmasTitle, Field.Store.YES));\n    String dogmasContents = \"white men can't jump\";\n    doc.add(new TextField(\"contents\", dogmasContents, Field.Store.YES));\n    writer.addDocument(doc, analyzer);\n    writer.commit();\n\n    directoryReader.close();\n    directoryReader = DirectoryReader.open(dir);\n    indexSearcher = new IndexSearcher(directoryReader);\n    result = indexSearcher.search(new MatchAllDocsQuery(), 10);\n    Document d1 = indexSearcher.doc(result.scoreDocs[1].doc);\n    assertNotNull(d1);\n    assertNotNull(d1.getField(\"title\"));\n    assertEquals(dogmasTitle, d1.getField(\"title\").stringValue());\n    assertNotNull(d1.getField(\"contents\"));\n    assertEquals(dogmasContents, d1.getField(\"contents\").stringValue());\n\n    // do a matchalldocs query to retrieve both docs\n    indexSearcher = new IndexSearcher(directoryReader);\n    result = indexSearcher.search(new MatchAllDocsQuery(), 10);\n    assertEquals(2, result.totalHits);\n    writer.close();\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aba371508186796cc6151d8223a5b4e16d02e26e","date":1343474871,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/analysis/uima/src/test/org/apache/lucene/analysis/uima/UIMABaseAnalyzerTest#baseUIMAAnalyzerIntegrationTest().mjava","pathOld":"lucene/analysis/uima/src/test/org/apache/lucene/analysis/uima/UIMABaseAnalyzerTest#baseUIMAAnalyzerIntegrationTest().mjava","sourceNew":"  @Test\n  public void baseUIMAAnalyzerIntegrationTest() throws Exception {\n    Directory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, analyzer));\n    // add the first doc\n    Document doc = new Document();\n    String dummyTitle = \"this is a dummy title \";\n    doc.add(new TextField(\"title\", dummyTitle, Field.Store.YES));\n    String dummyContent = \"there is some content written here\";\n    doc.add(new TextField(\"contents\", dummyContent, Field.Store.YES));\n    writer.addDocument(doc, analyzer);\n    writer.commit();\n\n    // try the search over the first doc\n    DirectoryReader directoryReader = DirectoryReader.open(dir);\n    IndexSearcher indexSearcher = new IndexSearcher(directoryReader);\n    TopDocs result = indexSearcher.search(new MatchAllDocsQuery(), 1);\n    assertTrue(result.totalHits > 0);\n    StoredDocument d = indexSearcher.doc(result.scoreDocs[0].doc);\n    assertNotNull(d);\n    assertNotNull(d.getField(\"title\"));\n    assertEquals(dummyTitle, d.getField(\"title\").stringValue());\n    assertNotNull(d.getField(\"contents\"));\n    assertEquals(dummyContent, d.getField(\"contents\").stringValue());\n\n    // add a second doc\n    doc = new Document();\n    String dogmasTitle = \"dogmas\";\n    doc.add(new TextField(\"title\", dogmasTitle, Field.Store.YES));\n    String dogmasContents = \"white men can't jump\";\n    doc.add(new TextField(\"contents\", dogmasContents, Field.Store.YES));\n    writer.addDocument(doc, analyzer);\n    writer.commit();\n\n    directoryReader.close();\n    directoryReader = DirectoryReader.open(dir);\n    indexSearcher = new IndexSearcher(directoryReader);\n    result = indexSearcher.search(new MatchAllDocsQuery(), 2);\n    StoredDocument d1 = indexSearcher.doc(result.scoreDocs[1].doc);\n    assertNotNull(d1);\n    assertNotNull(d1.getField(\"title\"));\n    assertEquals(dogmasTitle, d1.getField(\"title\").stringValue());\n    assertNotNull(d1.getField(\"contents\"));\n    assertEquals(dogmasContents, d1.getField(\"contents\").stringValue());\n\n    // do a matchalldocs query to retrieve both docs\n    indexSearcher = new IndexSearcher(directoryReader);\n    result = indexSearcher.search(new MatchAllDocsQuery(), 2);\n    assertEquals(2, result.totalHits);\n    writer.close();\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","sourceOld":"  @Test\n  public void baseUIMAAnalyzerIntegrationTest() throws Exception {\n    Directory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(Version.LUCENE_40, analyzer));\n    // add the first doc\n    Document doc = new Document();\n    String dummyTitle = \"this is a dummy title \";\n    doc.add(new TextField(\"title\", dummyTitle, Field.Store.YES));\n    String dummyContent = \"there is some content written here\";\n    doc.add(new TextField(\"contents\", dummyContent, Field.Store.YES));\n    writer.addDocument(doc, analyzer);\n    writer.commit();\n\n    // try the search over the first doc\n    DirectoryReader directoryReader = DirectoryReader.open(dir);\n    IndexSearcher indexSearcher = new IndexSearcher(directoryReader);\n    TopDocs result = indexSearcher.search(new MatchAllDocsQuery(), 10);\n    assertTrue(result.totalHits > 0);\n    StoredDocument d = indexSearcher.doc(result.scoreDocs[0].doc);\n    assertNotNull(d);\n    assertNotNull(d.getField(\"title\"));\n    assertEquals(dummyTitle, d.getField(\"title\").stringValue());\n    assertNotNull(d.getField(\"contents\"));\n    assertEquals(dummyContent, d.getField(\"contents\").stringValue());\n\n    // add a second doc\n    doc = new Document();\n    String dogmasTitle = \"dogmas\";\n    doc.add(new TextField(\"title\", dogmasTitle, Field.Store.YES));\n    String dogmasContents = \"white men can't jump\";\n    doc.add(new TextField(\"contents\", dogmasContents, Field.Store.YES));\n    writer.addDocument(doc, analyzer);\n    writer.commit();\n\n    directoryReader.close();\n    directoryReader = DirectoryReader.open(dir);\n    indexSearcher = new IndexSearcher(directoryReader);\n    result = indexSearcher.search(new MatchAllDocsQuery(), 10);\n    StoredDocument d1 = indexSearcher.doc(result.scoreDocs[1].doc);\n    assertNotNull(d1);\n    assertNotNull(d1.getField(\"title\"));\n    assertEquals(dogmasTitle, d1.getField(\"title\").stringValue());\n    assertNotNull(d1.getField(\"contents\"));\n    assertEquals(dogmasContents, d1.getField(\"contents\").stringValue());\n\n    // do a matchalldocs query to retrieve both docs\n    indexSearcher = new IndexSearcher(directoryReader);\n    result = indexSearcher.search(new MatchAllDocsQuery(), 10);\n    assertEquals(2, result.totalHits);\n    writer.close();\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1d028314cced5858683a1bb4741423d0f934257b","date":1346596535,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/analysis/uima/src/test/org/apache/lucene/analysis/uima/UIMABaseAnalyzerTest#baseUIMAAnalyzerIntegrationTest().mjava","pathOld":"lucene/analysis/uima/src/test/org/apache/lucene/analysis/uima/UIMABaseAnalyzerTest#baseUIMAAnalyzerIntegrationTest().mjava","sourceNew":"  @Test\n  public void baseUIMAAnalyzerIntegrationTest() throws Exception {\n    Directory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, analyzer));\n    // add the first doc\n    Document doc = new Document();\n    String dummyTitle = \"this is a dummy title \";\n    doc.add(new TextField(\"title\", dummyTitle, Field.Store.YES));\n    String dummyContent = \"there is some content written here\";\n    doc.add(new TextField(\"contents\", dummyContent, Field.Store.YES));\n    writer.addDocument(doc, analyzer);\n    writer.commit();\n\n    // try the search over the first doc\n    DirectoryReader directoryReader = DirectoryReader.open(dir);\n    IndexSearcher indexSearcher = new IndexSearcher(directoryReader);\n    TopDocs result = indexSearcher.search(new MatchAllDocsQuery(), 1);\n    assertTrue(result.totalHits > 0);\n    StoredDocument d = indexSearcher.doc(result.scoreDocs[0].doc);\n    assertNotNull(d);\n    assertNotNull(d.getField(\"title\"));\n    assertEquals(dummyTitle, d.getField(\"title\").stringValue());\n    assertNotNull(d.getField(\"contents\"));\n    assertEquals(dummyContent, d.getField(\"contents\").stringValue());\n\n    // add a second doc\n    doc = new Document();\n    String dogmasTitle = \"dogmas\";\n    doc.add(new TextField(\"title\", dogmasTitle, Field.Store.YES));\n    String dogmasContents = \"white men can't jump\";\n    doc.add(new TextField(\"contents\", dogmasContents, Field.Store.YES));\n    writer.addDocument(doc, analyzer);\n    writer.commit();\n\n    directoryReader.close();\n    directoryReader = DirectoryReader.open(dir);\n    indexSearcher = new IndexSearcher(directoryReader);\n    result = indexSearcher.search(new MatchAllDocsQuery(), 2);\n    StoredDocument d1 = indexSearcher.doc(result.scoreDocs[1].doc);\n    assertNotNull(d1);\n    assertNotNull(d1.getField(\"title\"));\n    assertEquals(dogmasTitle, d1.getField(\"title\").stringValue());\n    assertNotNull(d1.getField(\"contents\"));\n    assertEquals(dogmasContents, d1.getField(\"contents\").stringValue());\n\n    // do a matchalldocs query to retrieve both docs\n    indexSearcher = new IndexSearcher(directoryReader);\n    result = indexSearcher.search(new MatchAllDocsQuery(), 2);\n    assertEquals(2, result.totalHits);\n    writer.close();\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","sourceOld":"  @Test\n  public void baseUIMAAnalyzerIntegrationTest() throws Exception {\n    Directory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, analyzer));\n    // add the first doc\n    Document doc = new Document();\n    String dummyTitle = \"this is a dummy title \";\n    doc.add(new TextField(\"title\", dummyTitle, Field.Store.YES));\n    String dummyContent = \"there is some content written here\";\n    doc.add(new TextField(\"contents\", dummyContent, Field.Store.YES));\n    writer.addDocument(doc, analyzer);\n    writer.commit();\n\n    // try the search over the first doc\n    DirectoryReader directoryReader = DirectoryReader.open(dir);\n    IndexSearcher indexSearcher = new IndexSearcher(directoryReader);\n    TopDocs result = indexSearcher.search(new MatchAllDocsQuery(), 1);\n    assertTrue(result.totalHits > 0);\n    Document d = indexSearcher.doc(result.scoreDocs[0].doc);\n    assertNotNull(d);\n    assertNotNull(d.getField(\"title\"));\n    assertEquals(dummyTitle, d.getField(\"title\").stringValue());\n    assertNotNull(d.getField(\"contents\"));\n    assertEquals(dummyContent, d.getField(\"contents\").stringValue());\n\n    // add a second doc\n    doc = new Document();\n    String dogmasTitle = \"dogmas\";\n    doc.add(new TextField(\"title\", dogmasTitle, Field.Store.YES));\n    String dogmasContents = \"white men can't jump\";\n    doc.add(new TextField(\"contents\", dogmasContents, Field.Store.YES));\n    writer.addDocument(doc, analyzer);\n    writer.commit();\n\n    directoryReader.close();\n    directoryReader = DirectoryReader.open(dir);\n    indexSearcher = new IndexSearcher(directoryReader);\n    result = indexSearcher.search(new MatchAllDocsQuery(), 2);\n    Document d1 = indexSearcher.doc(result.scoreDocs[1].doc);\n    assertNotNull(d1);\n    assertNotNull(d1.getField(\"title\"));\n    assertEquals(dogmasTitle, d1.getField(\"title\").stringValue());\n    assertNotNull(d1.getField(\"contents\"));\n    assertEquals(dogmasContents, d1.getField(\"contents\").stringValue());\n\n    // do a matchalldocs query to retrieve both docs\n    indexSearcher = new IndexSearcher(directoryReader);\n    result = indexSearcher.search(new MatchAllDocsQuery(), 2);\n    assertEquals(2, result.totalHits);\n    writer.close();\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad1f7eb1a6bbf19f3d32b3baf2dee3db844eccdc","date":1366056945,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/uima/src/test/org/apache/lucene/analysis/uima/UIMABaseAnalyzerTest#baseUIMAAnalyzerIntegrationTest().mjava","pathOld":"lucene/analysis/uima/src/test/org/apache/lucene/analysis/uima/UIMABaseAnalyzerTest#baseUIMAAnalyzerIntegrationTest().mjava","sourceNew":"  @Test\n  public void baseUIMAAnalyzerIntegrationTest() throws Exception {\n    Directory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, analyzer));\n    // add the first doc\n    Document doc = new Document();\n    String dummyTitle = \"this is a dummy title \";\n    doc.add(new TextField(\"title\", dummyTitle, Field.Store.YES));\n    String dummyContent = \"there is some content written here\";\n    doc.add(new TextField(\"contents\", dummyContent, Field.Store.YES));\n    writer.addDocument(doc, analyzer);\n    writer.commit();\n\n    // try the search over the first doc\n    DirectoryReader directoryReader = DirectoryReader.open(dir);\n    IndexSearcher indexSearcher = newSearcher(directoryReader);\n    TopDocs result = indexSearcher.search(new MatchAllDocsQuery(), 1);\n    assertTrue(result.totalHits > 0);\n    StoredDocument d = indexSearcher.doc(result.scoreDocs[0].doc);\n    assertNotNull(d);\n    assertNotNull(d.getField(\"title\"));\n    assertEquals(dummyTitle, d.getField(\"title\").stringValue());\n    assertNotNull(d.getField(\"contents\"));\n    assertEquals(dummyContent, d.getField(\"contents\").stringValue());\n\n    // add a second doc\n    doc = new Document();\n    String dogmasTitle = \"dogmas\";\n    doc.add(new TextField(\"title\", dogmasTitle, Field.Store.YES));\n    String dogmasContents = \"white men can't jump\";\n    doc.add(new TextField(\"contents\", dogmasContents, Field.Store.YES));\n    writer.addDocument(doc, analyzer);\n    writer.commit();\n\n    directoryReader.close();\n    directoryReader = DirectoryReader.open(dir);\n    indexSearcher = newSearcher(directoryReader);\n    result = indexSearcher.search(new MatchAllDocsQuery(), 2);\n    StoredDocument d1 = indexSearcher.doc(result.scoreDocs[1].doc);\n    assertNotNull(d1);\n    assertNotNull(d1.getField(\"title\"));\n    assertEquals(dogmasTitle, d1.getField(\"title\").stringValue());\n    assertNotNull(d1.getField(\"contents\"));\n    assertEquals(dogmasContents, d1.getField(\"contents\").stringValue());\n\n    // do a matchalldocs query to retrieve both docs\n    indexSearcher = newSearcher(directoryReader);\n    result = indexSearcher.search(new MatchAllDocsQuery(), 2);\n    assertEquals(2, result.totalHits);\n    writer.close();\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","sourceOld":"  @Test\n  public void baseUIMAAnalyzerIntegrationTest() throws Exception {\n    Directory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, analyzer));\n    // add the first doc\n    Document doc = new Document();\n    String dummyTitle = \"this is a dummy title \";\n    doc.add(new TextField(\"title\", dummyTitle, Field.Store.YES));\n    String dummyContent = \"there is some content written here\";\n    doc.add(new TextField(\"contents\", dummyContent, Field.Store.YES));\n    writer.addDocument(doc, analyzer);\n    writer.commit();\n\n    // try the search over the first doc\n    DirectoryReader directoryReader = DirectoryReader.open(dir);\n    IndexSearcher indexSearcher = new IndexSearcher(directoryReader);\n    TopDocs result = indexSearcher.search(new MatchAllDocsQuery(), 1);\n    assertTrue(result.totalHits > 0);\n    StoredDocument d = indexSearcher.doc(result.scoreDocs[0].doc);\n    assertNotNull(d);\n    assertNotNull(d.getField(\"title\"));\n    assertEquals(dummyTitle, d.getField(\"title\").stringValue());\n    assertNotNull(d.getField(\"contents\"));\n    assertEquals(dummyContent, d.getField(\"contents\").stringValue());\n\n    // add a second doc\n    doc = new Document();\n    String dogmasTitle = \"dogmas\";\n    doc.add(new TextField(\"title\", dogmasTitle, Field.Store.YES));\n    String dogmasContents = \"white men can't jump\";\n    doc.add(new TextField(\"contents\", dogmasContents, Field.Store.YES));\n    writer.addDocument(doc, analyzer);\n    writer.commit();\n\n    directoryReader.close();\n    directoryReader = DirectoryReader.open(dir);\n    indexSearcher = new IndexSearcher(directoryReader);\n    result = indexSearcher.search(new MatchAllDocsQuery(), 2);\n    StoredDocument d1 = indexSearcher.doc(result.scoreDocs[1].doc);\n    assertNotNull(d1);\n    assertNotNull(d1.getField(\"title\"));\n    assertEquals(dogmasTitle, d1.getField(\"title\").stringValue());\n    assertNotNull(d1.getField(\"contents\"));\n    assertEquals(dogmasContents, d1.getField(\"contents\").stringValue());\n\n    // do a matchalldocs query to retrieve both docs\n    indexSearcher = new IndexSearcher(directoryReader);\n    result = indexSearcher.search(new MatchAllDocsQuery(), 2);\n    assertEquals(2, result.totalHits);\n    writer.close();\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/analysis/uima/src/test/org/apache/lucene/analysis/uima/UIMABaseAnalyzerTest#baseUIMAAnalyzerIntegrationTest().mjava","pathOld":"lucene/analysis/uima/src/test/org/apache/lucene/analysis/uima/UIMABaseAnalyzerTest#baseUIMAAnalyzerIntegrationTest().mjava","sourceNew":"  @Test\n  public void baseUIMAAnalyzerIntegrationTest() throws Exception {\n    Directory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, analyzer));\n    // add the first doc\n    Document doc = new Document();\n    String dummyTitle = \"this is a dummy title \";\n    doc.add(new TextField(\"title\", dummyTitle, Field.Store.YES));\n    String dummyContent = \"there is some content written here\";\n    doc.add(new TextField(\"contents\", dummyContent, Field.Store.YES));\n    writer.addDocument(doc, analyzer);\n    writer.commit();\n\n    // try the search over the first doc\n    DirectoryReader directoryReader = DirectoryReader.open(dir);\n    IndexSearcher indexSearcher = newSearcher(directoryReader);\n    TopDocs result = indexSearcher.search(new MatchAllDocsQuery(), 1);\n    assertTrue(result.totalHits > 0);\n    StoredDocument d = indexSearcher.doc(result.scoreDocs[0].doc);\n    assertNotNull(d);\n    assertNotNull(d.getField(\"title\"));\n    assertEquals(dummyTitle, d.getField(\"title\").stringValue());\n    assertNotNull(d.getField(\"contents\"));\n    assertEquals(dummyContent, d.getField(\"contents\").stringValue());\n\n    // add a second doc\n    doc = new Document();\n    String dogmasTitle = \"dogmas\";\n    doc.add(new TextField(\"title\", dogmasTitle, Field.Store.YES));\n    String dogmasContents = \"white men can't jump\";\n    doc.add(new TextField(\"contents\", dogmasContents, Field.Store.YES));\n    writer.addDocument(doc, analyzer);\n    writer.commit();\n\n    directoryReader.close();\n    directoryReader = DirectoryReader.open(dir);\n    indexSearcher = newSearcher(directoryReader);\n    result = indexSearcher.search(new MatchAllDocsQuery(), 2);\n    StoredDocument d1 = indexSearcher.doc(result.scoreDocs[1].doc);\n    assertNotNull(d1);\n    assertNotNull(d1.getField(\"title\"));\n    assertEquals(dogmasTitle, d1.getField(\"title\").stringValue());\n    assertNotNull(d1.getField(\"contents\"));\n    assertEquals(dogmasContents, d1.getField(\"contents\").stringValue());\n\n    // do a matchalldocs query to retrieve both docs\n    indexSearcher = newSearcher(directoryReader);\n    result = indexSearcher.search(new MatchAllDocsQuery(), 2);\n    assertEquals(2, result.totalHits);\n    writer.shutdown();\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","sourceOld":"  @Test\n  public void baseUIMAAnalyzerIntegrationTest() throws Exception {\n    Directory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, analyzer));\n    // add the first doc\n    Document doc = new Document();\n    String dummyTitle = \"this is a dummy title \";\n    doc.add(new TextField(\"title\", dummyTitle, Field.Store.YES));\n    String dummyContent = \"there is some content written here\";\n    doc.add(new TextField(\"contents\", dummyContent, Field.Store.YES));\n    writer.addDocument(doc, analyzer);\n    writer.commit();\n\n    // try the search over the first doc\n    DirectoryReader directoryReader = DirectoryReader.open(dir);\n    IndexSearcher indexSearcher = newSearcher(directoryReader);\n    TopDocs result = indexSearcher.search(new MatchAllDocsQuery(), 1);\n    assertTrue(result.totalHits > 0);\n    StoredDocument d = indexSearcher.doc(result.scoreDocs[0].doc);\n    assertNotNull(d);\n    assertNotNull(d.getField(\"title\"));\n    assertEquals(dummyTitle, d.getField(\"title\").stringValue());\n    assertNotNull(d.getField(\"contents\"));\n    assertEquals(dummyContent, d.getField(\"contents\").stringValue());\n\n    // add a second doc\n    doc = new Document();\n    String dogmasTitle = \"dogmas\";\n    doc.add(new TextField(\"title\", dogmasTitle, Field.Store.YES));\n    String dogmasContents = \"white men can't jump\";\n    doc.add(new TextField(\"contents\", dogmasContents, Field.Store.YES));\n    writer.addDocument(doc, analyzer);\n    writer.commit();\n\n    directoryReader.close();\n    directoryReader = DirectoryReader.open(dir);\n    indexSearcher = newSearcher(directoryReader);\n    result = indexSearcher.search(new MatchAllDocsQuery(), 2);\n    StoredDocument d1 = indexSearcher.doc(result.scoreDocs[1].doc);\n    assertNotNull(d1);\n    assertNotNull(d1.getField(\"title\"));\n    assertEquals(dogmasTitle, d1.getField(\"title\").stringValue());\n    assertNotNull(d1.getField(\"contents\"));\n    assertEquals(dogmasContents, d1.getField(\"contents\").stringValue());\n\n    // do a matchalldocs query to retrieve both docs\n    indexSearcher = newSearcher(directoryReader);\n    result = indexSearcher.search(new MatchAllDocsQuery(), 2);\n    assertEquals(2, result.totalHits);\n    writer.close();\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"02ad2c4a40a966a34d9345163cf8517d4897cd24","date":1401120765,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/uima/src/test/org/apache/lucene/analysis/uima/UIMABaseAnalyzerTest#baseUIMAAnalyzerIntegrationTest().mjava","pathOld":"lucene/analysis/uima/src/test/org/apache/lucene/analysis/uima/UIMABaseAnalyzerTest#baseUIMAAnalyzerIntegrationTest().mjava","sourceNew":"  @Test\n  public void baseUIMAAnalyzerIntegrationTest() throws Exception {\n    Directory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, analyzer));\n    // add the first doc\n    Document doc = new Document();\n    String dummyTitle = \"this is a dummy title \";\n    doc.add(new TextField(\"title\", dummyTitle, Field.Store.YES));\n    String dummyContent = \"there is some content written here\";\n    doc.add(new TextField(\"contents\", dummyContent, Field.Store.YES));\n    writer.addDocument(doc, analyzer);\n    writer.commit();\n\n    // try the search over the first doc\n    DirectoryReader directoryReader = DirectoryReader.open(dir);\n    IndexSearcher indexSearcher = newSearcher(directoryReader);\n    TopDocs result = indexSearcher.search(new MatchAllDocsQuery(), 1);\n    assertTrue(result.totalHits > 0);\n    StoredDocument d = indexSearcher.doc(result.scoreDocs[0].doc);\n    assertNotNull(d);\n    assertNotNull(d.getField(\"title\"));\n    assertEquals(dummyTitle, d.getField(\"title\").stringValue());\n    assertNotNull(d.getField(\"contents\"));\n    assertEquals(dummyContent, d.getField(\"contents\").stringValue());\n\n    // add a second doc\n    doc = new Document();\n    String dogmasTitle = \"dogmas\";\n    doc.add(new TextField(\"title\", dogmasTitle, Field.Store.YES));\n    String dogmasContents = \"white men can't jump\";\n    doc.add(new TextField(\"contents\", dogmasContents, Field.Store.YES));\n    writer.addDocument(doc, analyzer);\n    writer.commit();\n\n    directoryReader.close();\n    directoryReader = DirectoryReader.open(dir);\n    indexSearcher = newSearcher(directoryReader);\n    result = indexSearcher.search(new MatchAllDocsQuery(), 2);\n    StoredDocument d1 = indexSearcher.doc(result.scoreDocs[1].doc);\n    assertNotNull(d1);\n    assertNotNull(d1.getField(\"title\"));\n    assertEquals(dogmasTitle, d1.getField(\"title\").stringValue());\n    assertNotNull(d1.getField(\"contents\"));\n    assertEquals(dogmasContents, d1.getField(\"contents\").stringValue());\n\n    // do a matchalldocs query to retrieve both docs\n    result = indexSearcher.search(new MatchAllDocsQuery(), 2);\n    assertEquals(2, result.totalHits);\n    writer.shutdown();\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","sourceOld":"  @Test\n  public void baseUIMAAnalyzerIntegrationTest() throws Exception {\n    Directory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, analyzer));\n    // add the first doc\n    Document doc = new Document();\n    String dummyTitle = \"this is a dummy title \";\n    doc.add(new TextField(\"title\", dummyTitle, Field.Store.YES));\n    String dummyContent = \"there is some content written here\";\n    doc.add(new TextField(\"contents\", dummyContent, Field.Store.YES));\n    writer.addDocument(doc, analyzer);\n    writer.commit();\n\n    // try the search over the first doc\n    DirectoryReader directoryReader = DirectoryReader.open(dir);\n    IndexSearcher indexSearcher = newSearcher(directoryReader);\n    TopDocs result = indexSearcher.search(new MatchAllDocsQuery(), 1);\n    assertTrue(result.totalHits > 0);\n    StoredDocument d = indexSearcher.doc(result.scoreDocs[0].doc);\n    assertNotNull(d);\n    assertNotNull(d.getField(\"title\"));\n    assertEquals(dummyTitle, d.getField(\"title\").stringValue());\n    assertNotNull(d.getField(\"contents\"));\n    assertEquals(dummyContent, d.getField(\"contents\").stringValue());\n\n    // add a second doc\n    doc = new Document();\n    String dogmasTitle = \"dogmas\";\n    doc.add(new TextField(\"title\", dogmasTitle, Field.Store.YES));\n    String dogmasContents = \"white men can't jump\";\n    doc.add(new TextField(\"contents\", dogmasContents, Field.Store.YES));\n    writer.addDocument(doc, analyzer);\n    writer.commit();\n\n    directoryReader.close();\n    directoryReader = DirectoryReader.open(dir);\n    indexSearcher = newSearcher(directoryReader);\n    result = indexSearcher.search(new MatchAllDocsQuery(), 2);\n    StoredDocument d1 = indexSearcher.doc(result.scoreDocs[1].doc);\n    assertNotNull(d1);\n    assertNotNull(d1.getField(\"title\"));\n    assertEquals(dogmasTitle, d1.getField(\"title\").stringValue());\n    assertNotNull(d1.getField(\"contents\"));\n    assertEquals(dogmasContents, d1.getField(\"contents\").stringValue());\n\n    // do a matchalldocs query to retrieve both docs\n    indexSearcher = newSearcher(directoryReader);\n    result = indexSearcher.search(new MatchAllDocsQuery(), 2);\n    assertEquals(2, result.totalHits);\n    writer.shutdown();\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/analysis/uima/src/test/org/apache/lucene/analysis/uima/UIMABaseAnalyzerTest#baseUIMAAnalyzerIntegrationTest().mjava","pathOld":"lucene/analysis/uima/src/test/org/apache/lucene/analysis/uima/UIMABaseAnalyzerTest#baseUIMAAnalyzerIntegrationTest().mjava","sourceNew":"  @Test\n  public void baseUIMAAnalyzerIntegrationTest() throws Exception {\n    Directory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(analyzer));\n    // add the first doc\n    Document doc = new Document();\n    String dummyTitle = \"this is a dummy title \";\n    doc.add(new TextField(\"title\", dummyTitle, Field.Store.YES));\n    String dummyContent = \"there is some content written here\";\n    doc.add(new TextField(\"contents\", dummyContent, Field.Store.YES));\n    writer.addDocument(doc, analyzer);\n    writer.commit();\n\n    // try the search over the first doc\n    DirectoryReader directoryReader = DirectoryReader.open(dir);\n    IndexSearcher indexSearcher = newSearcher(directoryReader);\n    TopDocs result = indexSearcher.search(new MatchAllDocsQuery(), 1);\n    assertTrue(result.totalHits > 0);\n    StoredDocument d = indexSearcher.doc(result.scoreDocs[0].doc);\n    assertNotNull(d);\n    assertNotNull(d.getField(\"title\"));\n    assertEquals(dummyTitle, d.getField(\"title\").stringValue());\n    assertNotNull(d.getField(\"contents\"));\n    assertEquals(dummyContent, d.getField(\"contents\").stringValue());\n\n    // add a second doc\n    doc = new Document();\n    String dogmasTitle = \"dogmas\";\n    doc.add(new TextField(\"title\", dogmasTitle, Field.Store.YES));\n    String dogmasContents = \"white men can't jump\";\n    doc.add(new TextField(\"contents\", dogmasContents, Field.Store.YES));\n    writer.addDocument(doc, analyzer);\n    writer.commit();\n\n    directoryReader.close();\n    directoryReader = DirectoryReader.open(dir);\n    indexSearcher = newSearcher(directoryReader);\n    result = indexSearcher.search(new MatchAllDocsQuery(), 2);\n    StoredDocument d1 = indexSearcher.doc(result.scoreDocs[1].doc);\n    assertNotNull(d1);\n    assertNotNull(d1.getField(\"title\"));\n    assertEquals(dogmasTitle, d1.getField(\"title\").stringValue());\n    assertNotNull(d1.getField(\"contents\"));\n    assertEquals(dogmasContents, d1.getField(\"contents\").stringValue());\n\n    // do a matchalldocs query to retrieve both docs\n    result = indexSearcher.search(new MatchAllDocsQuery(), 2);\n    assertEquals(2, result.totalHits);\n    writer.close();\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","sourceOld":"  @Test\n  public void baseUIMAAnalyzerIntegrationTest() throws Exception {\n    Directory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, analyzer));\n    // add the first doc\n    Document doc = new Document();\n    String dummyTitle = \"this is a dummy title \";\n    doc.add(new TextField(\"title\", dummyTitle, Field.Store.YES));\n    String dummyContent = \"there is some content written here\";\n    doc.add(new TextField(\"contents\", dummyContent, Field.Store.YES));\n    writer.addDocument(doc, analyzer);\n    writer.commit();\n\n    // try the search over the first doc\n    DirectoryReader directoryReader = DirectoryReader.open(dir);\n    IndexSearcher indexSearcher = newSearcher(directoryReader);\n    TopDocs result = indexSearcher.search(new MatchAllDocsQuery(), 1);\n    assertTrue(result.totalHits > 0);\n    StoredDocument d = indexSearcher.doc(result.scoreDocs[0].doc);\n    assertNotNull(d);\n    assertNotNull(d.getField(\"title\"));\n    assertEquals(dummyTitle, d.getField(\"title\").stringValue());\n    assertNotNull(d.getField(\"contents\"));\n    assertEquals(dummyContent, d.getField(\"contents\").stringValue());\n\n    // add a second doc\n    doc = new Document();\n    String dogmasTitle = \"dogmas\";\n    doc.add(new TextField(\"title\", dogmasTitle, Field.Store.YES));\n    String dogmasContents = \"white men can't jump\";\n    doc.add(new TextField(\"contents\", dogmasContents, Field.Store.YES));\n    writer.addDocument(doc, analyzer);\n    writer.commit();\n\n    directoryReader.close();\n    directoryReader = DirectoryReader.open(dir);\n    indexSearcher = newSearcher(directoryReader);\n    result = indexSearcher.search(new MatchAllDocsQuery(), 2);\n    StoredDocument d1 = indexSearcher.doc(result.scoreDocs[1].doc);\n    assertNotNull(d1);\n    assertNotNull(d1.getField(\"title\"));\n    assertEquals(dogmasTitle, d1.getField(\"title\").stringValue());\n    assertNotNull(d1.getField(\"contents\"));\n    assertEquals(dogmasContents, d1.getField(\"contents\").stringValue());\n\n    // do a matchalldocs query to retrieve both docs\n    result = indexSearcher.search(new MatchAllDocsQuery(), 2);\n    assertEquals(2, result.totalHits);\n    writer.shutdown();\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5c1c5aa8e88aa52c9e1cbfc696b611d3a56223c0","date":1422781929,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/analysis/uima/src/test/org/apache/lucene/analysis/uima/UIMABaseAnalyzerTest#baseUIMAAnalyzerIntegrationTest().mjava","pathOld":"lucene/analysis/uima/src/test/org/apache/lucene/analysis/uima/UIMABaseAnalyzerTest#baseUIMAAnalyzerIntegrationTest().mjava","sourceNew":"  @Test\n  public void baseUIMAAnalyzerIntegrationTest() throws Exception {\n    Directory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(analyzer));\n    // add the first doc\n    Document doc = new Document();\n    String dummyTitle = \"this is a dummy title \";\n    doc.add(new TextField(\"title\", dummyTitle, Field.Store.YES));\n    String dummyContent = \"there is some content written here\";\n    doc.add(new TextField(\"contents\", dummyContent, Field.Store.YES));\n    writer.addDocument(doc);\n    writer.commit();\n\n    // try the search over the first doc\n    DirectoryReader directoryReader = DirectoryReader.open(dir);\n    IndexSearcher indexSearcher = newSearcher(directoryReader);\n    TopDocs result = indexSearcher.search(new MatchAllDocsQuery(), 1);\n    assertTrue(result.totalHits > 0);\n    StoredDocument d = indexSearcher.doc(result.scoreDocs[0].doc);\n    assertNotNull(d);\n    assertNotNull(d.getField(\"title\"));\n    assertEquals(dummyTitle, d.getField(\"title\").stringValue());\n    assertNotNull(d.getField(\"contents\"));\n    assertEquals(dummyContent, d.getField(\"contents\").stringValue());\n\n    // add a second doc\n    doc = new Document();\n    String dogmasTitle = \"dogmas\";\n    doc.add(new TextField(\"title\", dogmasTitle, Field.Store.YES));\n    String dogmasContents = \"white men can't jump\";\n    doc.add(new TextField(\"contents\", dogmasContents, Field.Store.YES));\n    writer.addDocument(doc);\n    writer.commit();\n\n    directoryReader.close();\n    directoryReader = DirectoryReader.open(dir);\n    indexSearcher = newSearcher(directoryReader);\n    result = indexSearcher.search(new MatchAllDocsQuery(), 2);\n    StoredDocument d1 = indexSearcher.doc(result.scoreDocs[1].doc);\n    assertNotNull(d1);\n    assertNotNull(d1.getField(\"title\"));\n    assertEquals(dogmasTitle, d1.getField(\"title\").stringValue());\n    assertNotNull(d1.getField(\"contents\"));\n    assertEquals(dogmasContents, d1.getField(\"contents\").stringValue());\n\n    // do a matchalldocs query to retrieve both docs\n    result = indexSearcher.search(new MatchAllDocsQuery(), 2);\n    assertEquals(2, result.totalHits);\n    writer.close();\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","sourceOld":"  @Test\n  public void baseUIMAAnalyzerIntegrationTest() throws Exception {\n    Directory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(analyzer));\n    // add the first doc\n    Document doc = new Document();\n    String dummyTitle = \"this is a dummy title \";\n    doc.add(new TextField(\"title\", dummyTitle, Field.Store.YES));\n    String dummyContent = \"there is some content written here\";\n    doc.add(new TextField(\"contents\", dummyContent, Field.Store.YES));\n    writer.addDocument(doc, analyzer);\n    writer.commit();\n\n    // try the search over the first doc\n    DirectoryReader directoryReader = DirectoryReader.open(dir);\n    IndexSearcher indexSearcher = newSearcher(directoryReader);\n    TopDocs result = indexSearcher.search(new MatchAllDocsQuery(), 1);\n    assertTrue(result.totalHits > 0);\n    StoredDocument d = indexSearcher.doc(result.scoreDocs[0].doc);\n    assertNotNull(d);\n    assertNotNull(d.getField(\"title\"));\n    assertEquals(dummyTitle, d.getField(\"title\").stringValue());\n    assertNotNull(d.getField(\"contents\"));\n    assertEquals(dummyContent, d.getField(\"contents\").stringValue());\n\n    // add a second doc\n    doc = new Document();\n    String dogmasTitle = \"dogmas\";\n    doc.add(new TextField(\"title\", dogmasTitle, Field.Store.YES));\n    String dogmasContents = \"white men can't jump\";\n    doc.add(new TextField(\"contents\", dogmasContents, Field.Store.YES));\n    writer.addDocument(doc, analyzer);\n    writer.commit();\n\n    directoryReader.close();\n    directoryReader = DirectoryReader.open(dir);\n    indexSearcher = newSearcher(directoryReader);\n    result = indexSearcher.search(new MatchAllDocsQuery(), 2);\n    StoredDocument d1 = indexSearcher.doc(result.scoreDocs[1].doc);\n    assertNotNull(d1);\n    assertNotNull(d1.getField(\"title\"));\n    assertEquals(dogmasTitle, d1.getField(\"title\").stringValue());\n    assertNotNull(d1.getField(\"contents\"));\n    assertEquals(dogmasContents, d1.getField(\"contents\").stringValue());\n\n    // do a matchalldocs query to retrieve both docs\n    result = indexSearcher.search(new MatchAllDocsQuery(), 2);\n    assertEquals(2, result.totalHits);\n    writer.close();\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6654c5f3ec2e4a84ef867c82d4eec872c2372c8c","date":1453060490,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/analysis/uima/src/test/org/apache/lucene/analysis/uima/UIMABaseAnalyzerTest#baseUIMAAnalyzerIntegrationTest().mjava","pathOld":"lucene/analysis/uima/src/test/org/apache/lucene/analysis/uima/UIMABaseAnalyzerTest#baseUIMAAnalyzerIntegrationTest().mjava","sourceNew":"  @Test\n  public void baseUIMAAnalyzerIntegrationTest() throws Exception {\n    Directory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(analyzer));\n    // add the first doc\n    Document doc = new Document();\n    String dummyTitle = \"this is a dummy title \";\n    doc.add(new TextField(\"title\", dummyTitle, Field.Store.YES));\n    String dummyContent = \"there is some content written here\";\n    doc.add(new TextField(\"contents\", dummyContent, Field.Store.YES));\n    writer.addDocument(doc);\n    writer.commit();\n\n    // try the search over the first doc\n    DirectoryReader directoryReader = DirectoryReader.open(dir);\n    IndexSearcher indexSearcher = newSearcher(directoryReader);\n    TopDocs result = indexSearcher.search(new MatchAllDocsQuery(), 1);\n    assertTrue(result.totalHits > 0);\n    Document d = indexSearcher.doc(result.scoreDocs[0].doc);\n    assertNotNull(d);\n    assertNotNull(d.getField(\"title\"));\n    assertEquals(dummyTitle, d.getField(\"title\").stringValue());\n    assertNotNull(d.getField(\"contents\"));\n    assertEquals(dummyContent, d.getField(\"contents\").stringValue());\n\n    // add a second doc\n    doc = new Document();\n    String dogmasTitle = \"dogmas\";\n    doc.add(new TextField(\"title\", dogmasTitle, Field.Store.YES));\n    String dogmasContents = \"white men can't jump\";\n    doc.add(new TextField(\"contents\", dogmasContents, Field.Store.YES));\n    writer.addDocument(doc);\n    writer.commit();\n\n    directoryReader.close();\n    directoryReader = DirectoryReader.open(dir);\n    indexSearcher = newSearcher(directoryReader);\n    result = indexSearcher.search(new MatchAllDocsQuery(), 2);\n    Document d1 = indexSearcher.doc(result.scoreDocs[1].doc);\n    assertNotNull(d1);\n    assertNotNull(d1.getField(\"title\"));\n    assertEquals(dogmasTitle, d1.getField(\"title\").stringValue());\n    assertNotNull(d1.getField(\"contents\"));\n    assertEquals(dogmasContents, d1.getField(\"contents\").stringValue());\n\n    // do a matchalldocs query to retrieve both docs\n    result = indexSearcher.search(new MatchAllDocsQuery(), 2);\n    assertEquals(2, result.totalHits);\n    writer.close();\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","sourceOld":"  @Test\n  public void baseUIMAAnalyzerIntegrationTest() throws Exception {\n    Directory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(analyzer));\n    // add the first doc\n    Document doc = new Document();\n    String dummyTitle = \"this is a dummy title \";\n    doc.add(new TextField(\"title\", dummyTitle, Field.Store.YES));\n    String dummyContent = \"there is some content written here\";\n    doc.add(new TextField(\"contents\", dummyContent, Field.Store.YES));\n    writer.addDocument(doc);\n    writer.commit();\n\n    // try the search over the first doc\n    DirectoryReader directoryReader = DirectoryReader.open(dir);\n    IndexSearcher indexSearcher = newSearcher(directoryReader);\n    TopDocs result = indexSearcher.search(new MatchAllDocsQuery(), 1);\n    assertTrue(result.totalHits > 0);\n    StoredDocument d = indexSearcher.doc(result.scoreDocs[0].doc);\n    assertNotNull(d);\n    assertNotNull(d.getField(\"title\"));\n    assertEquals(dummyTitle, d.getField(\"title\").stringValue());\n    assertNotNull(d.getField(\"contents\"));\n    assertEquals(dummyContent, d.getField(\"contents\").stringValue());\n\n    // add a second doc\n    doc = new Document();\n    String dogmasTitle = \"dogmas\";\n    doc.add(new TextField(\"title\", dogmasTitle, Field.Store.YES));\n    String dogmasContents = \"white men can't jump\";\n    doc.add(new TextField(\"contents\", dogmasContents, Field.Store.YES));\n    writer.addDocument(doc);\n    writer.commit();\n\n    directoryReader.close();\n    directoryReader = DirectoryReader.open(dir);\n    indexSearcher = newSearcher(directoryReader);\n    result = indexSearcher.search(new MatchAllDocsQuery(), 2);\n    StoredDocument d1 = indexSearcher.doc(result.scoreDocs[1].doc);\n    assertNotNull(d1);\n    assertNotNull(d1.getField(\"title\"));\n    assertEquals(dogmasTitle, d1.getField(\"title\").stringValue());\n    assertNotNull(d1.getField(\"contents\"));\n    assertEquals(dogmasContents, d1.getField(\"contents\").stringValue());\n\n    // do a matchalldocs query to retrieve both docs\n    result = indexSearcher.search(new MatchAllDocsQuery(), 2);\n    assertEquals(2, result.totalHits);\n    writer.close();\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8c9a6ea78b00a421744e770568d8c2aab262e4cd","date":1530971937,"type":4,"author":"Alexandre Rafalovitch","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/analysis/uima/src/test/org/apache/lucene/analysis/uima/UIMABaseAnalyzerTest#baseUIMAAnalyzerIntegrationTest().mjava","sourceNew":null,"sourceOld":"  @Test\n  public void baseUIMAAnalyzerIntegrationTest() throws Exception {\n    Directory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(analyzer));\n    // add the first doc\n    Document doc = new Document();\n    String dummyTitle = \"this is a dummy title \";\n    doc.add(new TextField(\"title\", dummyTitle, Field.Store.YES));\n    String dummyContent = \"there is some content written here\";\n    doc.add(new TextField(\"contents\", dummyContent, Field.Store.YES));\n    writer.addDocument(doc);\n    writer.commit();\n\n    // try the search over the first doc\n    DirectoryReader directoryReader = DirectoryReader.open(dir);\n    IndexSearcher indexSearcher = newSearcher(directoryReader);\n    TopDocs result = indexSearcher.search(new MatchAllDocsQuery(), 1);\n    assertTrue(result.totalHits > 0);\n    Document d = indexSearcher.doc(result.scoreDocs[0].doc);\n    assertNotNull(d);\n    assertNotNull(d.getField(\"title\"));\n    assertEquals(dummyTitle, d.getField(\"title\").stringValue());\n    assertNotNull(d.getField(\"contents\"));\n    assertEquals(dummyContent, d.getField(\"contents\").stringValue());\n\n    // add a second doc\n    doc = new Document();\n    String dogmasTitle = \"dogmas\";\n    doc.add(new TextField(\"title\", dogmasTitle, Field.Store.YES));\n    String dogmasContents = \"white men can't jump\";\n    doc.add(new TextField(\"contents\", dogmasContents, Field.Store.YES));\n    writer.addDocument(doc);\n    writer.commit();\n\n    directoryReader.close();\n    directoryReader = DirectoryReader.open(dir);\n    indexSearcher = newSearcher(directoryReader);\n    result = indexSearcher.search(new MatchAllDocsQuery(), 2);\n    Document d1 = indexSearcher.doc(result.scoreDocs[1].doc);\n    assertNotNull(d1);\n    assertNotNull(d1.getField(\"title\"));\n    assertEquals(dogmasTitle, d1.getField(\"title\").stringValue());\n    assertNotNull(d1.getField(\"contents\"));\n    assertEquals(dogmasContents, d1.getField(\"contents\").stringValue());\n\n    // do a matchalldocs query to retrieve both docs\n    result = indexSearcher.search(new MatchAllDocsQuery(), 2);\n    assertEquals(2, result.totalHits);\n    writer.close();\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26","date":1531589977,"type":4,"author":"Michael Braun","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/analysis/uima/src/test/org/apache/lucene/analysis/uima/UIMABaseAnalyzerTest#baseUIMAAnalyzerIntegrationTest().mjava","sourceNew":null,"sourceOld":"  @Test\n  public void baseUIMAAnalyzerIntegrationTest() throws Exception {\n    Directory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(analyzer));\n    // add the first doc\n    Document doc = new Document();\n    String dummyTitle = \"this is a dummy title \";\n    doc.add(new TextField(\"title\", dummyTitle, Field.Store.YES));\n    String dummyContent = \"there is some content written here\";\n    doc.add(new TextField(\"contents\", dummyContent, Field.Store.YES));\n    writer.addDocument(doc);\n    writer.commit();\n\n    // try the search over the first doc\n    DirectoryReader directoryReader = DirectoryReader.open(dir);\n    IndexSearcher indexSearcher = newSearcher(directoryReader);\n    TopDocs result = indexSearcher.search(new MatchAllDocsQuery(), 1);\n    assertTrue(result.totalHits > 0);\n    Document d = indexSearcher.doc(result.scoreDocs[0].doc);\n    assertNotNull(d);\n    assertNotNull(d.getField(\"title\"));\n    assertEquals(dummyTitle, d.getField(\"title\").stringValue());\n    assertNotNull(d.getField(\"contents\"));\n    assertEquals(dummyContent, d.getField(\"contents\").stringValue());\n\n    // add a second doc\n    doc = new Document();\n    String dogmasTitle = \"dogmas\";\n    doc.add(new TextField(\"title\", dogmasTitle, Field.Store.YES));\n    String dogmasContents = \"white men can't jump\";\n    doc.add(new TextField(\"contents\", dogmasContents, Field.Store.YES));\n    writer.addDocument(doc);\n    writer.commit();\n\n    directoryReader.close();\n    directoryReader = DirectoryReader.open(dir);\n    indexSearcher = newSearcher(directoryReader);\n    result = indexSearcher.search(new MatchAllDocsQuery(), 2);\n    Document d1 = indexSearcher.doc(result.scoreDocs[1].doc);\n    assertNotNull(d1);\n    assertNotNull(d1.getField(\"title\"));\n    assertEquals(dogmasTitle, d1.getField(\"title\").stringValue());\n    assertNotNull(d1.getField(\"contents\"));\n    assertEquals(dogmasContents, d1.getField(\"contents\").stringValue());\n\n    // do a matchalldocs query to retrieve both docs\n    result = indexSearcher.search(new MatchAllDocsQuery(), 2);\n    assertEquals(2, result.totalHits);\n    writer.close();\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","date":1531905561,"type":4,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/analysis/uima/src/test/org/apache/lucene/analysis/uima/UIMABaseAnalyzerTest#baseUIMAAnalyzerIntegrationTest().mjava","sourceNew":null,"sourceOld":"  @Test\n  public void baseUIMAAnalyzerIntegrationTest() throws Exception {\n    Directory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(analyzer));\n    // add the first doc\n    Document doc = new Document();\n    String dummyTitle = \"this is a dummy title \";\n    doc.add(new TextField(\"title\", dummyTitle, Field.Store.YES));\n    String dummyContent = \"there is some content written here\";\n    doc.add(new TextField(\"contents\", dummyContent, Field.Store.YES));\n    writer.addDocument(doc);\n    writer.commit();\n\n    // try the search over the first doc\n    DirectoryReader directoryReader = DirectoryReader.open(dir);\n    IndexSearcher indexSearcher = newSearcher(directoryReader);\n    TopDocs result = indexSearcher.search(new MatchAllDocsQuery(), 1);\n    assertTrue(result.totalHits > 0);\n    Document d = indexSearcher.doc(result.scoreDocs[0].doc);\n    assertNotNull(d);\n    assertNotNull(d.getField(\"title\"));\n    assertEquals(dummyTitle, d.getField(\"title\").stringValue());\n    assertNotNull(d.getField(\"contents\"));\n    assertEquals(dummyContent, d.getField(\"contents\").stringValue());\n\n    // add a second doc\n    doc = new Document();\n    String dogmasTitle = \"dogmas\";\n    doc.add(new TextField(\"title\", dogmasTitle, Field.Store.YES));\n    String dogmasContents = \"white men can't jump\";\n    doc.add(new TextField(\"contents\", dogmasContents, Field.Store.YES));\n    writer.addDocument(doc);\n    writer.commit();\n\n    directoryReader.close();\n    directoryReader = DirectoryReader.open(dir);\n    indexSearcher = newSearcher(directoryReader);\n    result = indexSearcher.search(new MatchAllDocsQuery(), 2);\n    Document d1 = indexSearcher.doc(result.scoreDocs[1].doc);\n    assertNotNull(d1);\n    assertNotNull(d1.getField(\"title\"));\n    assertEquals(dogmasTitle, d1.getField(\"title\").stringValue());\n    assertNotNull(d1.getField(\"contents\"));\n    assertEquals(dogmasContents, d1.getField(\"contents\").stringValue());\n\n    // do a matchalldocs query to retrieve both docs\n    result = indexSearcher.search(new MatchAllDocsQuery(), 2);\n    assertEquals(2, result.totalHits);\n    writer.close();\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"02ad2c4a40a966a34d9345163cf8517d4897cd24":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"8c9a6ea78b00a421744e770568d8c2aab262e4cd":["6654c5f3ec2e4a84ef867c82d4eec872c2372c8c"],"5c1c5aa8e88aa52c9e1cbfc696b611d3a56223c0":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"04f07771a2a7dd3a395700665ed839c3dae2def2":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"1d028314cced5858683a1bb4741423d0f934257b":["1b91ac39e2aa0530982f5abb5ef8bff2537746f6","aba371508186796cc6151d8223a5b4e16d02e26e"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":["6654c5f3ec2e4a84ef867c82d4eec872c2372c8c","8c9a6ea78b00a421744e770568d8c2aab262e4cd"],"aba371508186796cc6151d8223a5b4e16d02e26e":["a7e4907084808af8fdb14b9809e6dceaccf6867b","1b91ac39e2aa0530982f5abb5ef8bff2537746f6"],"42135bfb552bead33a31120853659a2a2bfd6b9f":["2b41cd5f854d4c62cbca2fab3372e4a1bfeb44f1"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["04f07771a2a7dd3a395700665ed839c3dae2def2","1b91ac39e2aa0530982f5abb5ef8bff2537746f6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d0ef034a4f10871667ae75181537775ddcf8ade4":["02ad2c4a40a966a34d9345163cf8517d4897cd24"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["ad1f7eb1a6bbf19f3d32b3baf2dee3db844eccdc"],"1b91ac39e2aa0530982f5abb5ef8bff2537746f6":["42135bfb552bead33a31120853659a2a2bfd6b9f"],"2b41cd5f854d4c62cbca2fab3372e4a1bfeb44f1":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"ad1f7eb1a6bbf19f3d32b3baf2dee3db844eccdc":["1d028314cced5858683a1bb4741423d0f934257b"],"a7e4907084808af8fdb14b9809e6dceaccf6867b":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8c9a6ea78b00a421744e770568d8c2aab262e4cd"],"6654c5f3ec2e4a84ef867c82d4eec872c2372c8c":["5c1c5aa8e88aa52c9e1cbfc696b611d3a56223c0"],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":["6654c5f3ec2e4a84ef867c82d4eec872c2372c8c","8c9a6ea78b00a421744e770568d8c2aab262e4cd"]},"commit2Childs":{"02ad2c4a40a966a34d9345163cf8517d4897cd24":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"8c9a6ea78b00a421744e770568d8c2aab262e4cd":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"5c1c5aa8e88aa52c9e1cbfc696b611d3a56223c0":["6654c5f3ec2e4a84ef867c82d4eec872c2372c8c"],"04f07771a2a7dd3a395700665ed839c3dae2def2":["fe33227f6805edab2036cbb80645cc4e2d1fa424","2b41cd5f854d4c62cbca2fab3372e4a1bfeb44f1","a7e4907084808af8fdb14b9809e6dceaccf6867b"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"1d028314cced5858683a1bb4741423d0f934257b":["ad1f7eb1a6bbf19f3d32b3baf2dee3db844eccdc"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":[],"aba371508186796cc6151d8223a5b4e16d02e26e":["1d028314cced5858683a1bb4741423d0f934257b"],"42135bfb552bead33a31120853659a2a2bfd6b9f":["1b91ac39e2aa0530982f5abb5ef8bff2537746f6"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["5c1c5aa8e88aa52c9e1cbfc696b611d3a56223c0"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["02ad2c4a40a966a34d9345163cf8517d4897cd24"],"1b91ac39e2aa0530982f5abb5ef8bff2537746f6":["1d028314cced5858683a1bb4741423d0f934257b","aba371508186796cc6151d8223a5b4e16d02e26e","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"2b41cd5f854d4c62cbca2fab3372e4a1bfeb44f1":["42135bfb552bead33a31120853659a2a2bfd6b9f"],"a7e4907084808af8fdb14b9809e6dceaccf6867b":["aba371508186796cc6151d8223a5b4e16d02e26e"],"ad1f7eb1a6bbf19f3d32b3baf2dee3db844eccdc":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"6654c5f3ec2e4a84ef867c82d4eec872c2372c8c":["8c9a6ea78b00a421744e770568d8c2aab262e4cd","0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":[]},"heads":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}