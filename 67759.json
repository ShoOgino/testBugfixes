{"path":"contrib/remote/src/test/org/apache/lucene/search/TestRemoteSort#assertSameValues(HashMap[#,#],HashMap[#,#]).mjava","commits":[{"id":"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a","date":1267298041,"type":1,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/remote/src/test/org/apache/lucene/search/TestRemoteSort#assertSameValues(HashMap[#,#],HashMap[#,#]).mjava","pathOld":"contrib/remote/src/test/org/apache/lucene/search/TestRemoteSort#assertSameValues(HashMap,HashMap).mjava","sourceNew":"  // make sure all the values in the maps match\n  private void assertSameValues (HashMap<?, ?> m1, HashMap<?, ?> m2) {\n    int n = m1.size();\n    int m = m2.size();\n    assertEquals (n, m);\n    Iterator<?> iter = m1.keySet().iterator();\n    while (iter.hasNext()) {\n      Object key = iter.next();\n      Object o1 = m1.get(key);\n      Object o2 = m2.get(key);\n      if (o1 instanceof Float) {\n        assertEquals(((Float)o1).floatValue(), ((Float)o2).floatValue(), 1e-6);\n      } else {\n        assertEquals (m1.get(key), m2.get(key));\n      }\n    }\n  }\n\n","sourceOld":"  // make sure all the values in the maps match\n  private void assertSameValues (HashMap m1, HashMap m2) {\n    int n = m1.size();\n    int m = m2.size();\n    assertEquals (n, m);\n    Iterator iter = m1.keySet().iterator();\n    while (iter.hasNext()) {\n      Object key = iter.next();\n      Object o1 = m1.get(key);\n      Object o2 = m2.get(key);\n      if (o1 instanceof Float) {\n        assertEquals(((Float)o1).floatValue(), ((Float)o2).floatValue(), 1e-6);\n      } else {\n        assertEquals (m1.get(key), m2.get(key));\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/remote/src/test/org/apache/lucene/search/TestRemoteSort#assertSameValues(HashMap[#,#],HashMap[#,#]).mjava","pathOld":"contrib/remote/src/test/org/apache/lucene/search/TestRemoteSort#assertSameValues(HashMap[#,#],HashMap[#,#]).mjava","sourceNew":"  // make sure all the values in the maps match\n  private void assertSameValues (HashMap<?, ?> m1, HashMap<?, ?> m2) {\n    int n = m1.size();\n    int m = m2.size();\n    assertEquals (n, m);\n    Iterator<?> iter = m1.keySet().iterator();\n    while (iter.hasNext()) {\n      Object key = iter.next();\n      Object o1 = m1.get(key);\n      Object o2 = m2.get(key);\n      if (o1 instanceof Float) {\n        assertEquals(((Float)o1).floatValue(), ((Float)o2).floatValue(), 1e-6);\n      } else {\n        assertEquals (m1.get(key), m2.get(key));\n      }\n    }\n  }\n\n","sourceOld":"  // make sure all the values in the maps match\n  private void assertSameValues (HashMap<?, ?> m1, HashMap<?, ?> m2) {\n    int n = m1.size();\n    int m = m2.size();\n    assertEquals (n, m);\n    Iterator<?> iter = m1.keySet().iterator();\n    while (iter.hasNext()) {\n      Object key = iter.next();\n      Object o1 = m1.get(key);\n      Object o2 = m2.get(key);\n      if (o1 instanceof Float) {\n        assertEquals(((Float)o1).floatValue(), ((Float)o2).floatValue(), 1e-6);\n      } else {\n        assertEquals (m1.get(key), m2.get(key));\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a9ac13b5f0ce5ef1b2ce168367d993a79594b23a"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a9ac13b5f0ce5ef1b2ce168367d993a79594b23a"],"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}