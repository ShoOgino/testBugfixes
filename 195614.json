{"path":"contrib/lucli/src/java/lucli/LuceneMethods#info().mjava","commits":[{"id":"a4df60738409662c962b4ed3201d830cd3c14530","date":1114991851,"type":1,"author":"Erik Hatcher","isMerge":false,"pathNew":"contrib/lucli/src/java/lucli/LuceneMethods#info().mjava","pathOld":"contrib/lucli/src/lucli/LuceneMethods#info().mjava","sourceNew":"  public void info() throws java.io.IOException {\n    IndexReader indexReader = IndexReader.open(indexName);\n\n\n    getFieldInfo();\n    numDocs = indexReader.numDocs();\n    message(\"Index has \" + numDocs + \" documents \");\n    message(\"All Fields:\" + fields.toString());\n    message(\"Indexed Fields:\" + indexedFields.toString());\n\n    if (IndexReader.isLocked(indexName)) {\n      message(\"Index is locked\");\n    }\n    //IndexReader.getCurrentVersion(indexName);\n    //System.out.println(\"Version:\" + version);\n\n    indexReader.close();\n  }\n\n","sourceOld":"  public void info() throws java.io.IOException {\n    IndexReader indexReader = IndexReader.open(indexName);\n\n\n    getFieldInfo();\n    numDocs = indexReader.numDocs();\n    message(\"Index has \" + numDocs + \" documents \");\n    message(\"All Fields:\" + fields.toString());\n    message(\"Indexed Fields:\" + indexedFields.toString());\n\n    if (IndexReader.isLocked(indexName)) {\n      message(\"Index is locked\");\n    }\n    //IndexReader.getCurrentVersion(indexName);\n    //System.out.println(\"Version:\" + version);\n\n    indexReader.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4256bc1b3c94786287ccdfc751230374521843cf","date":1254612273,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/lucli/src/java/lucli/LuceneMethods#info().mjava","pathOld":"contrib/lucli/src/java/lucli/LuceneMethods#info().mjava","sourceNew":"  public void info() throws java.io.IOException {\n    IndexReader indexReader = IndexReader.open(indexName, true);\n\n\n    getFieldInfo();\n    numDocs = indexReader.numDocs();\n    message(\"Index has \" + numDocs + \" documents \");\n    message(\"All Fields:\" + fields.toString());\n    message(\"Indexed Fields:\" + indexedFields.toString());\n\n    if (IndexWriter.isLocked(indexName)) {\n      message(\"Index is locked\");\n    }\n    //IndexReader.getCurrentVersion(indexName);\n    //System.out.println(\"Version:\" + version);\n\n    indexReader.close();\n  }\n\n","sourceOld":"  public void info() throws java.io.IOException {\n    IndexReader indexReader = IndexReader.open(indexName);\n\n\n    getFieldInfo();\n    numDocs = indexReader.numDocs();\n    message(\"Index has \" + numDocs + \" documents \");\n    message(\"All Fields:\" + fields.toString());\n    message(\"Indexed Fields:\" + indexedFields.toString());\n\n    if (IndexReader.isLocked(indexName)) {\n      message(\"Index is locked\");\n    }\n    //IndexReader.getCurrentVersion(indexName);\n    //System.out.println(\"Version:\" + version);\n\n    indexReader.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/lucli/src/java/lucli/LuceneMethods#info().mjava","pathOld":"contrib/lucli/src/java/lucli/LuceneMethods#info().mjava","sourceNew":"  public void info() throws java.io.IOException {\n    IndexReader indexReader = IndexReader.open(indexName, true);\n\n\n    getFieldInfo();\n    numDocs = indexReader.numDocs();\n    message(\"Index has \" + numDocs + \" documents \");\n    message(\"All Fields:\" + fields.toString());\n    message(\"Indexed Fields:\" + indexedFields.toString());\n\n    if (IndexWriter.isLocked(indexName)) {\n      message(\"Index is locked\");\n    }\n    //IndexReader.getCurrentVersion(indexName);\n    //System.out.println(\"Version:\" + version);\n\n    indexReader.close();\n  }\n\n","sourceOld":"  public void info() throws java.io.IOException {\n    IndexReader indexReader = IndexReader.open(indexName, true);\n\n\n    getFieldInfo();\n    numDocs = indexReader.numDocs();\n    message(\"Index has \" + numDocs + \" documents \");\n    message(\"All Fields:\" + fields.toString());\n    message(\"Indexed Fields:\" + indexedFields.toString());\n\n    if (IndexWriter.isLocked(indexName)) {\n      message(\"Index is locked\");\n    }\n    //IndexReader.getCurrentVersion(indexName);\n    //System.out.println(\"Version:\" + version);\n\n    indexReader.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4256bc1b3c94786287ccdfc751230374521843cf":["a4df60738409662c962b4ed3201d830cd3c14530"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["4256bc1b3c94786287ccdfc751230374521843cf"],"a4df60738409662c962b4ed3201d830cd3c14530":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a4df60738409662c962b4ed3201d830cd3c14530"],"4256bc1b3c94786287ccdfc751230374521843cf":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a4df60738409662c962b4ed3201d830cd3c14530":["4256bc1b3c94786287ccdfc751230374521843cf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}