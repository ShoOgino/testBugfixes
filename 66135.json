{"path":"solr/core/src/test/org/apache/solr/util/hll/ExplicitHLLTest#randomValuesTest().mjava","commits":[{"id":"6faa211c4af605e3cf078a76d200c1dc348973f5","date":1437043657,"type":0,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/util/hll/ExplicitHLLTest#randomValuesTest().mjava","pathOld":"/dev/null","sourceNew":"    // ------------------------------------------------------------------------\n    /**\n     * Tests correctness against {@link java.util.HashSet}.\n     */\n    @Test\n    public void randomValuesTest() {\n        final int explicitThreshold = 4096;\n        final HashSet<Long> canonical = new HashSet<Long>();\n        final HLL hll = newHLL(explicitThreshold);\n\n        for(int i=0;i<explicitThreshold;i++){\n            long randomLong = randomLong();\n            canonical.add(randomLong);\n            hll.addRaw(randomLong);\n        }\n        final int canonicalCardinality = canonical.size();\n        assertEquals(hll.cardinality(), canonicalCardinality);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3b5ee4c66244bdfcc4796a114519d47701b2c026","date":1437132013,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/util/hll/ExplicitHLLTest#randomValuesTest().mjava","pathOld":"/dev/null","sourceNew":"    // ------------------------------------------------------------------------\n    /**\n     * Tests correctness against {@link java.util.HashSet}.\n     */\n    @Test\n    public void randomValuesTest() {\n        final int explicitThreshold = 4096;\n        final HashSet<Long> canonical = new HashSet<Long>();\n        final HLL hll = newHLL(explicitThreshold);\n\n        for(int i=0;i<explicitThreshold;i++){\n            long randomLong = randomLong();\n            canonical.add(randomLong);\n            hll.addRaw(randomLong);\n        }\n        final int canonicalCardinality = canonical.size();\n        assertEquals(hll.cardinality(), canonicalCardinality);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3b5ee4c66244bdfcc4796a114519d47701b2c026":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","6faa211c4af605e3cf078a76d200c1dc348973f5"],"6faa211c4af605e3cf078a76d200c1dc348973f5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3b5ee4c66244bdfcc4796a114519d47701b2c026"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3b5ee4c66244bdfcc4796a114519d47701b2c026","6faa211c4af605e3cf078a76d200c1dc348973f5"],"3b5ee4c66244bdfcc4796a114519d47701b2c026":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"6faa211c4af605e3cf078a76d200c1dc348973f5":["3b5ee4c66244bdfcc4796a114519d47701b2c026"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}