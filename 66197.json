{"path":"lucene/core/src/java/org/apache/lucene/search/FilteredDocIdSet#bits().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/FilteredDocIdSet#bits().mjava","pathOld":"lucene/src/java/org/apache/lucene/search/FilteredDocIdSet#bits().mjava","sourceNew":"  @Override\n  public Bits bits() throws IOException {\n    final Bits bits = _innerSet.bits();\n    return (bits == null) ? null : new Bits() {\n      public boolean get(int docid) {\n        return bits.get(docid) && FilteredDocIdSet.this.match(docid);\n      }\n\n      public int length() {\n        return bits.length();\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public Bits bits() throws IOException {\n    final Bits bits = _innerSet.bits();\n    return (bits == null) ? null : new Bits() {\n      public boolean get(int docid) {\n        return bits.get(docid) && FilteredDocIdSet.this.match(docid);\n      }\n\n      public int length() {\n        return bits.length();\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7530de27b87b961b51f01bd1299b7004d46e8823","date":1355236261,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/FilteredDocIdSet#bits().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/FilteredDocIdSet#bits().mjava","sourceNew":"  @Override\n  public Bits bits() throws IOException {\n    final Bits bits = _innerSet.bits();\n    return (bits == null) ? null : new Bits() {\n      @Override\n      public boolean get(int docid) {\n        return bits.get(docid) && FilteredDocIdSet.this.match(docid);\n      }\n\n      @Override\n      public int length() {\n        return bits.length();\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public Bits bits() throws IOException {\n    final Bits bits = _innerSet.bits();\n    return (bits == null) ? null : new Bits() {\n      public boolean get(int docid) {\n        return bits.get(docid) && FilteredDocIdSet.this.match(docid);\n      }\n\n      public int length() {\n        return bits.length();\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/FilteredDocIdSet#bits().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/FilteredDocIdSet#bits().mjava","sourceNew":"  @Override\n  public Bits bits() throws IOException {\n    final Bits bits = _innerSet.bits();\n    return (bits == null) ? null : new Bits() {\n      @Override\n      public boolean get(int docid) {\n        return bits.get(docid) && FilteredDocIdSet.this.match(docid);\n      }\n\n      @Override\n      public int length() {\n        return bits.length();\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public Bits bits() throws IOException {\n    final Bits bits = _innerSet.bits();\n    return (bits == null) ? null : new Bits() {\n      public boolean get(int docid) {\n        return bits.get(docid) && FilteredDocIdSet.this.match(docid);\n      }\n\n      public int length() {\n        return bits.length();\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d52e48927ca4ef3655a261f2230b968b6fdf3608","date":1444652107,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/FilteredDocIdSet#bits().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/FilteredDocIdSet#bits().mjava","sourceNew":"  @Override\n  public Bits bits() throws IOException {\n    final Bits bits = _innerSet.bits();\n    return (bits == null) ? null : new Bits() {\n      @Override\n      public boolean get(int docid) {\n        return bits.get(docid) && FilteredDocIdSet.this.match(docid);\n      }\n\n      @Override\n      public int length() {\n        return bits.length();\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public Bits bits() throws IOException {\n    final Bits bits = _innerSet.bits();\n    return (bits == null) ? null : new Bits() {\n      @Override\n      public boolean get(int docid) {\n        return bits.get(docid) && FilteredDocIdSet.this.match(docid);\n      }\n\n      @Override\n      public int length() {\n        return bits.length();\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","7530de27b87b961b51f01bd1299b7004d46e8823"],"d52e48927ca4ef3655a261f2230b968b6fdf3608":["7530de27b87b961b51f01bd1299b7004d46e8823"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7530de27b87b961b51f01bd1299b7004d46e8823":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d52e48927ca4ef3655a261f2230b968b6fdf3608"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"d52e48927ca4ef3655a261f2230b968b6fdf3608":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","7530de27b87b961b51f01bd1299b7004d46e8823"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"7530de27b87b961b51f01bd1299b7004d46e8823":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","d52e48927ca4ef3655a261f2230b968b6fdf3608"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}