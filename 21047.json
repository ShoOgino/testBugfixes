{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/SolrClientDataProvider#getReplicaInfo(String,Collection[String]).mjava","commits":[{"id":"86fff6c123a5a1d38adb665dd045347219798da9","date":1493623721,"type":1,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/SolrClientDataProvider#getReplicaInfo(String,Collection[String]).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/ClientDataProvider#getReplicaInfo(String,Collection[String]).mjava","sourceNew":"  @Override\n  public Map<String, Map<String, List<ReplicaInfo>>> getReplicaInfo(String node, Collection<String> keys) {\n    return data.get(node);//todo fill other details\n  }\n\n","sourceOld":"  @Override\n  public Map<String, Map<String, List<ReplicaInfo>>> getReplicaInfo(String node, Collection<String> keys) {\n    return data.get(node);//todo fill other details\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c44432b8bb386bf08570d74e402c79ae59bb3b99","date":1493713540,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/SolrClientDataProvider#getReplicaInfo(String,Collection[String]).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/SolrClientDataProvider#getReplicaInfo(String,Collection[String]).mjava","sourceNew":"  @Override\n  public Map<String, Map<String, List<ReplicaInfo>>> getReplicaInfo(String node, Collection<String> keys) {\n    return data.getOrDefault(node, Collections.emptyMap());//todo fill other details\n  }\n\n","sourceOld":"  @Override\n  public Map<String, Map<String, List<ReplicaInfo>>> getReplicaInfo(String node, Collection<String> keys) {\n    return data.get(node);//todo fill other details\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a513b6a92751e54c76fb5447948c9e7d437163a7","date":1496136565,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/SolrClientDataProvider#getReplicaInfo(String,Collection[String]).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public Map<String, Map<String, List<ReplicaInfo>>> getReplicaInfo(String node, Collection<String> keys) {\n    return data.getOrDefault(node, Collections.emptyMap());//todo fill other details\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"74aea047dff7f7c38a2d766827bd20d356f98c6a","date":1496721416,"type":0,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/SolrClientDataProvider#getReplicaInfo(String,Collection[String]).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public Map<String, Map<String, List<ReplicaInfo>>> getReplicaInfo(String node, Collection<String> keys) {\n    return data.getOrDefault(node, Collections.emptyMap());//todo fill other details\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1f6b20dc453cee198956989b90aa24bef0232bcf","date":1498221066,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/SolrClientDataProvider#getReplicaInfo(String,Collection[String]).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/SolrClientDataProvider#getReplicaInfo(String,Collection[String]).mjava","sourceNew":"  @Override\n  public Map<String, Map<String, List<ReplicaInfo>>> getReplicaInfo(String node, Collection<String> keys) {\n    return data.computeIfAbsent(node, s -> Collections.emptyMap());//todo fill other details\n  }\n\n","sourceOld":"  @Override\n  public Map<String, Map<String, List<ReplicaInfo>>> getReplicaInfo(String node, Collection<String> keys) {\n    return data.getOrDefault(node, Collections.emptyMap());//todo fill other details\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/SolrClientDataProvider#getReplicaInfo(String,Collection[String]).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public Map<String, Map<String, List<ReplicaInfo>>> getReplicaInfo(String node, Collection<String> keys) {\n    return data.getOrDefault(node, Collections.emptyMap());//todo fill other details\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c304e97e7c1d472bc70e801b35ee78583916c6cd","date":1507105431,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/SolrClientDataProvider#getReplicaInfo(String,Collection[String]).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/SolrClientDataProvider#getReplicaInfo(String,Collection[String]).mjava","sourceNew":"  @Override\n  public Map<String, Map<String, List<ReplicaInfo>>> getReplicaInfo(String node, Collection<String> keys) {\n    return data.computeIfAbsent(node, s -> Collections.emptyMap());//todo fill other details\n  }\n\n","sourceOld":"  @Override\n  public Map<String, Map<String, List<ReplicaInfo>>> getReplicaInfo(String node, Collection<String> keys) {\n    return data.getOrDefault(node, Collections.emptyMap());//todo fill other details\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"560c18d71dad43d675158783c3840f8c80d6d39c","date":1507105532,"type":3,"author":"Cao Manh Dat","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/SolrClientDataProvider#getReplicaInfo(String,Collection[String]).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/SolrClientDataProvider#getReplicaInfo(String,Collection[String]).mjava","sourceNew":"  @Override\n  public Map<String, Map<String, List<ReplicaInfo>>> getReplicaInfo(String node, Collection<String> keys) {\n    return data.computeIfAbsent(node, s -> Collections.emptyMap());//todo fill other details\n  }\n\n","sourceOld":"  @Override\n  public Map<String, Map<String, List<ReplicaInfo>>> getReplicaInfo(String node, Collection<String> keys) {\n    return data.getOrDefault(node, Collections.emptyMap());//todo fill other details\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"85212dad4ed576c7f7e6c165ee19e597b7b4efc8","date":1507997740,"type":5,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/SolrClientNodeStateProvider#getReplicaInfo(String,Collection[String]).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/SolrClientDataProvider#getReplicaInfo(String,Collection[String]).mjava","sourceNew":"  @Override\n  public Map<String, Map<String, List<ReplicaInfo>>> getReplicaInfo(String node, Collection<String> keys) {\n    return data.computeIfAbsent(node, s -> Collections.emptyMap());//todo fill other details\n  }\n\n","sourceOld":"  @Override\n  public Map<String, Map<String, List<ReplicaInfo>>> getReplicaInfo(String node, Collection<String> keys) {\n    return data.computeIfAbsent(node, s -> Collections.emptyMap());//todo fill other details\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c304e97e7c1d472bc70e801b35ee78583916c6cd":["28288370235ed02234a64753cdbf0c6ec096304a","1f6b20dc453cee198956989b90aa24bef0232bcf"],"74aea047dff7f7c38a2d766827bd20d356f98c6a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a513b6a92751e54c76fb5447948c9e7d437163a7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a513b6a92751e54c76fb5447948c9e7d437163a7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"85212dad4ed576c7f7e6c165ee19e597b7b4efc8":["560c18d71dad43d675158783c3840f8c80d6d39c"],"86fff6c123a5a1d38adb665dd045347219798da9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"560c18d71dad43d675158783c3840f8c80d6d39c":["28288370235ed02234a64753cdbf0c6ec096304a","c304e97e7c1d472bc70e801b35ee78583916c6cd"],"1f6b20dc453cee198956989b90aa24bef0232bcf":["c44432b8bb386bf08570d74e402c79ae59bb3b99"],"c44432b8bb386bf08570d74e402c79ae59bb3b99":["86fff6c123a5a1d38adb665dd045347219798da9"],"28288370235ed02234a64753cdbf0c6ec096304a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","74aea047dff7f7c38a2d766827bd20d356f98c6a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["85212dad4ed576c7f7e6c165ee19e597b7b4efc8"]},"commit2Childs":{"c304e97e7c1d472bc70e801b35ee78583916c6cd":["560c18d71dad43d675158783c3840f8c80d6d39c"],"74aea047dff7f7c38a2d766827bd20d356f98c6a":["28288370235ed02234a64753cdbf0c6ec096304a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["74aea047dff7f7c38a2d766827bd20d356f98c6a","a513b6a92751e54c76fb5447948c9e7d437163a7","86fff6c123a5a1d38adb665dd045347219798da9","28288370235ed02234a64753cdbf0c6ec096304a"],"a513b6a92751e54c76fb5447948c9e7d437163a7":["74aea047dff7f7c38a2d766827bd20d356f98c6a"],"85212dad4ed576c7f7e6c165ee19e597b7b4efc8":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"86fff6c123a5a1d38adb665dd045347219798da9":["c44432b8bb386bf08570d74e402c79ae59bb3b99"],"1f6b20dc453cee198956989b90aa24bef0232bcf":["c304e97e7c1d472bc70e801b35ee78583916c6cd"],"560c18d71dad43d675158783c3840f8c80d6d39c":["85212dad4ed576c7f7e6c165ee19e597b7b4efc8"],"c44432b8bb386bf08570d74e402c79ae59bb3b99":["1f6b20dc453cee198956989b90aa24bef0232bcf"],"28288370235ed02234a64753cdbf0c6ec096304a":["c304e97e7c1d472bc70e801b35ee78583916c6cd","560c18d71dad43d675158783c3840f8c80d6d39c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}