{"path":"contrib/snowball/src/java/org/tartarus/snowball/SnowballProgram#getCurrent().mjava","commits":[{"id":"b62da6a75575f59a016a076b4753dc6e20c74b44","date":1219528967,"type":0,"author":"Karl-Johan Wettin","isMerge":false,"pathNew":"contrib/snowball/src/java/org/tartarus/snowball/SnowballProgram#getCurrent().mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * Get the current string.\n     */\n    public String getCurrent()\n    {\n        String result = current.toString();\n        // Make a new StringBuffer.  If we reuse the old one, and a user of\n        // the library keeps a reference to the buffer returned (for example,\n        // by converting it to a String in a way which doesn't force a copy),\n        // the buffer size will not decrease, and we will risk wasting a large\n        // amount of memory.\n        // Thanks to Wolfram Esser for spotting this problem.\n        current = new StringBuffer();\n        return result;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb6b931e61d8769059702d36acf89a66034da97e","date":1255075078,"type":3,"author":"Karl-Johan Wettin","isMerge":false,"pathNew":"contrib/snowball/src/java/org/tartarus/snowball/SnowballProgram#getCurrent().mjava","pathOld":"contrib/snowball/src/java/org/tartarus/snowball/SnowballProgram#getCurrent().mjava","sourceNew":"    /**\n     * Get the current string.\n     */\n    public String getCurrent()\n    {\n        String result = current.toString();\n        // Make a new StringBuffer.  If we reuse the old one, and a user of\n        // the library keeps a reference to the buffer returned (for example,\n        // by converting it to a String in a way which doesn't force a copy),\n        // the buffer size will not decrease, and we will risk wasting a large\n        // amount of memory.\n        // Thanks to Wolfram Esser for spotting this problem.\n        current = new StringBuilder();\n        return result;\n    }\n\n","sourceOld":"    /**\n     * Get the current string.\n     */\n    public String getCurrent()\n    {\n        String result = current.toString();\n        // Make a new StringBuffer.  If we reuse the old one, and a user of\n        // the library keeps a reference to the buffer returned (for example,\n        // by converting it to a String in a way which doesn't force a copy),\n        // the buffer size will not decrease, and we will risk wasting a large\n        // amount of memory.\n        // Thanks to Wolfram Esser for spotting this problem.\n        current = new StringBuffer();\n        return result;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8bc7429500777cb3888bd40a90e5da1a57aa1681","date":1263421761,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"contrib/snowball/src/java/org/tartarus/snowball/SnowballProgram#getCurrent().mjava","pathOld":"contrib/snowball/src/java/org/tartarus/snowball/SnowballProgram#getCurrent().mjava","sourceNew":"    /**\n     * Get the current string.\n     */\n    public String getCurrent()\n    {\n      return new String(current, 0, limit);\n    }\n\n","sourceOld":"    /**\n     * Get the current string.\n     */\n    public String getCurrent()\n    {\n        String result = current.toString();\n        // Make a new StringBuffer.  If we reuse the old one, and a user of\n        // the library keeps a reference to the buffer returned (for example,\n        // by converting it to a String in a way which doesn't force a copy),\n        // the buffer size will not decrease, and we will risk wasting a large\n        // amount of memory.\n        // Thanks to Wolfram Esser for spotting this problem.\n        current = new StringBuilder();\n        return result;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a5aa159e1ac4009d23cea92797d3804da4f5e7ad","date":1264041909,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"contrib/analyzers/common/src/java/org/tartarus/snowball/SnowballProgram#getCurrent().mjava","pathOld":"contrib/snowball/src/java/org/tartarus/snowball/SnowballProgram#getCurrent().mjava","sourceNew":"    /**\n     * Get the current string.\n     */\n    public String getCurrent()\n    {\n      return new String(current, 0, limit);\n    }\n\n","sourceOld":"    /**\n     * Get the current string.\n     */\n    public String getCurrent()\n    {\n      return new String(current, 0, limit);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"38c26570a4fd6cf0856801c977a2bc9c28a5424c","date":1264074890,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/snowball/src/java/org/tartarus/snowball/SnowballProgram#getCurrent().mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * Get the current string.\n     */\n    public String getCurrent()\n    {\n      return new String(current, 0, limit);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d40ff39db4a2b90a440b97f2a7d7eda344f004ef","date":1264074978,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"contrib/snowball/src/java/org/tartarus/snowball/SnowballProgram#getCurrent().mjava","sourceNew":null,"sourceOld":"    /**\n     * Get the current string.\n     */\n    public String getCurrent()\n    {\n      return new String(current, 0, limit);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b62da6a75575f59a016a076b4753dc6e20c74b44":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a5aa159e1ac4009d23cea92797d3804da4f5e7ad":["8bc7429500777cb3888bd40a90e5da1a57aa1681"],"bb6b931e61d8769059702d36acf89a66034da97e":["b62da6a75575f59a016a076b4753dc6e20c74b44"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"38c26570a4fd6cf0856801c977a2bc9c28a5424c":["a5aa159e1ac4009d23cea92797d3804da4f5e7ad"],"d40ff39db4a2b90a440b97f2a7d7eda344f004ef":["38c26570a4fd6cf0856801c977a2bc9c28a5424c"],"8bc7429500777cb3888bd40a90e5da1a57aa1681":["bb6b931e61d8769059702d36acf89a66034da97e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d40ff39db4a2b90a440b97f2a7d7eda344f004ef"]},"commit2Childs":{"b62da6a75575f59a016a076b4753dc6e20c74b44":["bb6b931e61d8769059702d36acf89a66034da97e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b62da6a75575f59a016a076b4753dc6e20c74b44"],"a5aa159e1ac4009d23cea92797d3804da4f5e7ad":["38c26570a4fd6cf0856801c977a2bc9c28a5424c"],"bb6b931e61d8769059702d36acf89a66034da97e":["8bc7429500777cb3888bd40a90e5da1a57aa1681"],"38c26570a4fd6cf0856801c977a2bc9c28a5424c":["d40ff39db4a2b90a440b97f2a7d7eda344f004ef"],"d40ff39db4a2b90a440b97f2a7d7eda344f004ef":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"8bc7429500777cb3888bd40a90e5da1a57aa1681":["a5aa159e1ac4009d23cea92797d3804da4f5e7ad"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}