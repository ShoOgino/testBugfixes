{"path":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/Plane#recordBounds(PlanetModel,XYZBounds,Plane,Membership...).mjava","commits":[{"id":"b961ff1d2d65eab705046ed52539112d3a5f76e0","date":1463766553,"type":0,"author":"Karl Wright","isMerge":false,"pathNew":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/Plane#recordBounds(PlanetModel,XYZBounds,Plane,Membership...).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Accumulate (x,y,z) bounds information for this plane, intersected with another and the\n   * world.\n   * Updates min/max information using intersection points found.  These include the error\n   * envelope for the planes (D +/- MINIMUM_RESOLUTION).\n   * @param planetModel is the planet model to use in determining bounds.\n   * @param boundsInfo is the xyz info to update with additional bounding information.\n   * @param p is the other plane.\n   * @param bounds     are the surfaces delineating what's inside the shape.\n   */\n  public void recordBounds(final PlanetModel planetModel, final XYZBounds boundsInfo, final Plane p, final Membership... bounds) {\n    findIntersectionBounds(planetModel, boundsInfo, p, bounds);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d470c8182e92b264680e34081b75e70a9f2b3c89","date":1463985353,"type":0,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/Plane#recordBounds(PlanetModel,XYZBounds,Plane,Membership...).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Accumulate (x,y,z) bounds information for this plane, intersected with another and the\n   * world.\n   * Updates min/max information using intersection points found.  These include the error\n   * envelope for the planes (D +/- MINIMUM_RESOLUTION).\n   * @param planetModel is the planet model to use in determining bounds.\n   * @param boundsInfo is the xyz info to update with additional bounding information.\n   * @param p is the other plane.\n   * @param bounds     are the surfaces delineating what's inside the shape.\n   */\n  public void recordBounds(final PlanetModel planetModel, final XYZBounds boundsInfo, final Plane p, final Membership... bounds) {\n    findIntersectionBounds(planetModel, boundsInfo, p, bounds);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/Plane#recordBounds(PlanetModel,XYZBounds,Plane,Membership...).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Accumulate (x,y,z) bounds information for this plane, intersected with another and the\n   * world.\n   * Updates min/max information using intersection points found.  These include the error\n   * envelope for the planes (D +/- MINIMUM_RESOLUTION).\n   * @param planetModel is the planet model to use in determining bounds.\n   * @param boundsInfo is the xyz info to update with additional bounding information.\n   * @param p is the other plane.\n   * @param bounds     are the surfaces delineating what's inside the shape.\n   */\n  public void recordBounds(final PlanetModel planetModel, final XYZBounds boundsInfo, final Plane p, final Membership... bounds) {\n    findIntersectionBounds(planetModel, boundsInfo, p, bounds);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","d470c8182e92b264680e34081b75e70a9f2b3c89"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d470c8182e92b264680e34081b75e70a9f2b3c89"],"d470c8182e92b264680e34081b75e70a9f2b3c89":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","b961ff1d2d65eab705046ed52539112d3a5f76e0"],"b961ff1d2d65eab705046ed52539112d3a5f76e0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","d470c8182e92b264680e34081b75e70a9f2b3c89","b961ff1d2d65eab705046ed52539112d3a5f76e0"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"d470c8182e92b264680e34081b75e70a9f2b3c89":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"b961ff1d2d65eab705046ed52539112d3a5f76e0":["d470c8182e92b264680e34081b75e70a9f2b3c89"]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}