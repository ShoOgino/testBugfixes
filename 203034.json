{"path":"src/java/org/apache/lucene/analysis/CharArraySet#copy(Set[#]).mjava","commits":[{"id":"7fd9c6f9b5329d587a12a56f2b6d96b2f9b02fbe","date":1258372117,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/CharArraySet#copy(Set[#]).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Returns a copy of the given set as a {@link CharArraySet}. If the given set\n   * is a {@link CharArraySet} the ignoreCase property will be preserved.\n   * \n   * @param set\n   *          a set to copy\n   * @return a copy of the given set as a {@link CharArraySet}. If the given set\n   *         is a {@link CharArraySet} the ignoreCase property will be\n   *         preserved.\n   */\n  public static CharArraySet copy(Set<?> set) {\n    if (set == null)\n      throw new NullPointerException(\"Given set is null\");\n    if(set == EMPTY_SET)\n      return EMPTY_SET;\n    final boolean ignoreCase = set instanceof CharArraySet ? ((CharArraySet) set).ignoreCase\n        : false;\n    return new CharArraySet(set, ignoreCase);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7f6c85ffa816c86be877aa7a5029a5daa1336e7f","date":1259617761,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/CharArraySet#copy(Set[#]).mjava","pathOld":"src/java/org/apache/lucene/analysis/CharArraySet#copy(Set[#]).mjava","sourceNew":"  /**\n   * Returns a copy of the given set as a {@link CharArraySet}. If the given set\n   * is a {@link CharArraySet} the ignoreCase property will be preserved.\n   * \n   * @param set\n   *          a set to copy\n   * @return a copy of the given set as a {@link CharArraySet}. If the given set\n   *         is a {@link CharArraySet} the ignoreCase property will be\n   *         preserved.\n   * @deprecated use {@link #copy(Version, Set)} instead\n   */\n  public static CharArraySet copy(Set<?> set) {\n    return copy(Version.LUCENE_30, set);\n  }\n\n","sourceOld":"  /**\n   * Returns a copy of the given set as a {@link CharArraySet}. If the given set\n   * is a {@link CharArraySet} the ignoreCase property will be preserved.\n   * \n   * @param set\n   *          a set to copy\n   * @return a copy of the given set as a {@link CharArraySet}. If the given set\n   *         is a {@link CharArraySet} the ignoreCase property will be\n   *         preserved.\n   */\n  public static CharArraySet copy(Set<?> set) {\n    if (set == null)\n      throw new NullPointerException(\"Given set is null\");\n    if(set == EMPTY_SET)\n      return EMPTY_SET;\n    final boolean ignoreCase = set instanceof CharArraySet ? ((CharArraySet) set).ignoreCase\n        : false;\n    return new CharArraySet(set, ignoreCase);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3ddbb40e897ef945a09991763daff7fa6b72ba87","date":1261610677,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/CharArraySet#copy(Set[#]).mjava","pathOld":"src/java/org/apache/lucene/analysis/CharArraySet#copy(Set[#]).mjava","sourceNew":"  /**\n   * Returns a copy of the given set as a {@link CharArraySet}. If the given set\n   * is a {@link CharArraySet} the ignoreCase property will be preserved.\n   * \n   * @param set\n   *          a set to copy\n   * @return a copy of the given set as a {@link CharArraySet}. If the given set\n   *         is a {@link CharArraySet} the ignoreCase and matchVersion property will be\n   *         preserved.\n   * @deprecated use {@link #copy(Version, Set)} instead.\n   */\n  public static CharArraySet copy(final Set<?> set) {\n    if(set == EMPTY_SET)\n      return EMPTY_SET;\n    return (set instanceof CharArraySet) ? copy((CharArraySet) set) : copy(Version.LUCENE_30, set);\n  }\n\n","sourceOld":"  /**\n   * Returns a copy of the given set as a {@link CharArraySet}. If the given set\n   * is a {@link CharArraySet} the ignoreCase property will be preserved.\n   * \n   * @param set\n   *          a set to copy\n   * @return a copy of the given set as a {@link CharArraySet}. If the given set\n   *         is a {@link CharArraySet} the ignoreCase property will be\n   *         preserved.\n   * @deprecated use {@link #copy(Version, Set)} instead\n   */\n  public static CharArraySet copy(Set<?> set) {\n    return copy(Version.LUCENE_30, set);\n  }\n\n","bugFix":null,"bugIntro":["bde0d738d9d22d9a62102d9f1791ae4487fd2b53"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5384d626ad24f6a1d56141ba6b0b144d1b2eafc5","date":1262514702,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/CharArraySet#copy(Set[#]).mjava","pathOld":"src/java/org/apache/lucene/analysis/CharArraySet#copy(Set[#]).mjava","sourceNew":"  /**\n   * Returns a copy of the given set as a {@link CharArraySet}. If the given set\n   * is a {@link CharArraySet} the ignoreCase property will be preserved.\n   * \n   * @param set\n   *          a set to copy\n   * @return a copy of the given set as a {@link CharArraySet}. If the given set\n   *         is a {@link CharArraySet} the ignoreCase and matchVersion property will be\n   *         preserved.\n   * @deprecated use {@link #copy(Version, Set)} instead.\n   */\n  @Deprecated\n  public static CharArraySet copy(final Set<?> set) {\n    if(set == EMPTY_SET)\n      return EMPTY_SET;\n    return (set instanceof CharArraySet) ? copy((CharArraySet) set) : copy(Version.LUCENE_30, set);\n  }\n\n","sourceOld":"  /**\n   * Returns a copy of the given set as a {@link CharArraySet}. If the given set\n   * is a {@link CharArraySet} the ignoreCase property will be preserved.\n   * \n   * @param set\n   *          a set to copy\n   * @return a copy of the given set as a {@link CharArraySet}. If the given set\n   *         is a {@link CharArraySet} the ignoreCase and matchVersion property will be\n   *         preserved.\n   * @deprecated use {@link #copy(Version, Set)} instead.\n   */\n  public static CharArraySet copy(final Set<?> set) {\n    if(set == EMPTY_SET)\n      return EMPTY_SET;\n    return (set instanceof CharArraySet) ? copy((CharArraySet) set) : copy(Version.LUCENE_30, set);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"bde0d738d9d22d9a62102d9f1791ae4487fd2b53","date":1263739133,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/CharArraySet#copy(Set[#]).mjava","pathOld":"src/java/org/apache/lucene/analysis/CharArraySet#copy(Set[#]).mjava","sourceNew":"  /**\n   * Returns a copy of the given set as a {@link CharArraySet}. If the given set\n   * is a {@link CharArraySet} the ignoreCase property will be preserved.\n   * \n   * @param set\n   *          a set to copy\n   * @return a copy of the given set as a {@link CharArraySet}. If the given set\n   *         is a {@link CharArraySet} the ignoreCase and matchVersion property will be\n   *         preserved.\n   * @deprecated use {@link #copy(Version, Set)} instead.\n   */\n  @Deprecated\n  public static CharArraySet copy(final Set<?> set) {\n    if(set == EMPTY_SET)\n      return EMPTY_SET;\n    return copy(Version.LUCENE_30, set);\n  }\n\n","sourceOld":"  /**\n   * Returns a copy of the given set as a {@link CharArraySet}. If the given set\n   * is a {@link CharArraySet} the ignoreCase property will be preserved.\n   * \n   * @param set\n   *          a set to copy\n   * @return a copy of the given set as a {@link CharArraySet}. If the given set\n   *         is a {@link CharArraySet} the ignoreCase and matchVersion property will be\n   *         preserved.\n   * @deprecated use {@link #copy(Version, Set)} instead.\n   */\n  @Deprecated\n  public static CharArraySet copy(final Set<?> set) {\n    if(set == EMPTY_SET)\n      return EMPTY_SET;\n    return (set instanceof CharArraySet) ? copy((CharArraySet) set) : copy(Version.LUCENE_30, set);\n  }\n\n","bugFix":["3ddbb40e897ef945a09991763daff7fa6b72ba87"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/analysis/CharArraySet#copy(Set[#]).mjava","pathOld":"src/java/org/apache/lucene/analysis/CharArraySet#copy(Set[#]).mjava","sourceNew":"  /**\n   * Returns a copy of the given set as a {@link CharArraySet}. If the given set\n   * is a {@link CharArraySet} the ignoreCase property will be preserved.\n   * \n   * @param set\n   *          a set to copy\n   * @return a copy of the given set as a {@link CharArraySet}. If the given set\n   *         is a {@link CharArraySet} the ignoreCase and matchVersion property will be\n   *         preserved.\n   * @deprecated use {@link #copy(Version, Set)} instead.\n   */\n  @Deprecated\n  public static CharArraySet copy(final Set<?> set) {\n    if(set == EMPTY_SET)\n      return EMPTY_SET;\n    return copy(Version.LUCENE_30, set);\n  }\n\n","sourceOld":"  /**\n   * Returns a copy of the given set as a {@link CharArraySet}. If the given set\n   * is a {@link CharArraySet} the ignoreCase property will be preserved.\n   * \n   * @param set\n   *          a set to copy\n   * @return a copy of the given set as a {@link CharArraySet}. If the given set\n   *         is a {@link CharArraySet} the ignoreCase and matchVersion property will be\n   *         preserved.\n   * @deprecated use {@link #copy(Version, Set)} instead.\n   */\n  @Deprecated\n  public static CharArraySet copy(final Set<?> set) {\n    if(set == EMPTY_SET)\n      return EMPTY_SET;\n    return copy(Version.LUCENE_30, set);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5384d626ad24f6a1d56141ba6b0b144d1b2eafc5":["3ddbb40e897ef945a09991763daff7fa6b72ba87"],"bde0d738d9d22d9a62102d9f1791ae4487fd2b53":["5384d626ad24f6a1d56141ba6b0b144d1b2eafc5"],"3ddbb40e897ef945a09991763daff7fa6b72ba87":["7f6c85ffa816c86be877aa7a5029a5daa1336e7f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7fd9c6f9b5329d587a12a56f2b6d96b2f9b02fbe":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["bde0d738d9d22d9a62102d9f1791ae4487fd2b53"],"7f6c85ffa816c86be877aa7a5029a5daa1336e7f":["7fd9c6f9b5329d587a12a56f2b6d96b2f9b02fbe"]},"commit2Childs":{"5384d626ad24f6a1d56141ba6b0b144d1b2eafc5":["bde0d738d9d22d9a62102d9f1791ae4487fd2b53"],"3ddbb40e897ef945a09991763daff7fa6b72ba87":["5384d626ad24f6a1d56141ba6b0b144d1b2eafc5"],"bde0d738d9d22d9a62102d9f1791ae4487fd2b53":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7fd9c6f9b5329d587a12a56f2b6d96b2f9b02fbe"],"7fd9c6f9b5329d587a12a56f2b6d96b2f9b02fbe":["7f6c85ffa816c86be877aa7a5029a5daa1336e7f"],"7f6c85ffa816c86be877aa7a5029a5daa1336e7f":["3ddbb40e897ef945a09991763daff7fa6b72ba87"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}