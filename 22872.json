{"path":"solr/core/src/java/org/apache/solr/schema/CurrencyField#getRangeQuery(QParser,SchemaField,CurrencyValue,CurrencyValue,boolean,boolean).mjava","commits":[{"id":"c2635332d49f7c5a0b484950462a01775512628e","date":1331332806,"type":0,"author":"Jan Høydahl","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/CurrencyField#getRangeQuery(QParser,SchemaField,CurrencyValue,CurrencyValue,boolean,boolean).mjava","pathOld":"/dev/null","sourceNew":"  public Query getRangeQuery(QParser parser, SchemaField field, final CurrencyValue p1, final CurrencyValue p2, final boolean minInclusive, final boolean maxInclusive) {\n    String currencyCode = p1.getCurrencyCode();\n    final CurrencyValueSource vs = new CurrencyValueSource(field, currencyCode, parser);\n\n    return new SolrConstantScoreQuery(new ValueSourceRangeFilter(vs,\n            p1.getAmount() + \"\", p2.getAmount() + \"\", minInclusive, maxInclusive));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["517ef79d6addd788f531a6d48a001383b5cbc68d","065a346f4fa5753b5f30aa6604c804696389d793"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"38e3b736c7ca086d61b7dbb841c905ee115490da","date":1331657018,"type":0,"author":"Ryan McKinley","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/schema/CurrencyField#getRangeQuery(QParser,SchemaField,CurrencyValue,CurrencyValue,boolean,boolean).mjava","pathOld":"/dev/null","sourceNew":"  public Query getRangeQuery(QParser parser, SchemaField field, final CurrencyValue p1, final CurrencyValue p2, final boolean minInclusive, final boolean maxInclusive) {\n    String currencyCode = p1.getCurrencyCode();\n    final CurrencyValueSource vs = new CurrencyValueSource(field, currencyCode, parser);\n\n    return new SolrConstantScoreQuery(new ValueSourceRangeFilter(vs,\n            p1.getAmount() + \"\", p2.getAmount() + \"\", minInclusive, maxInclusive));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"065a346f4fa5753b5f30aa6604c804696389d793","date":1348531407,"type":3,"author":"Jan Høydahl","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/CurrencyField#getRangeQuery(QParser,SchemaField,CurrencyValue,CurrencyValue,boolean,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/CurrencyField#getRangeQuery(QParser,SchemaField,CurrencyValue,CurrencyValue,boolean,boolean).mjava","sourceNew":"  public Query getRangeQuery(QParser parser, SchemaField field, final CurrencyValue p1, final CurrencyValue p2, final boolean minInclusive, final boolean maxInclusive) {\n    String currencyCode = (p1 != null) ? p1.getCurrencyCode() :\n                          (p2 != null) ? p2.getCurrencyCode() : defaultCurrency;\n    final CurrencyValueSource vs = new CurrencyValueSource(field, currencyCode, parser);\n\n    return new SolrConstantScoreQuery(new ValueSourceRangeFilter(vs,\n            p1 == null ? null : p1.getAmount() + \"\" , p2 == null ? null : p2.getAmount() + \"\", minInclusive, maxInclusive));\n  }\n\n","sourceOld":"  public Query getRangeQuery(QParser parser, SchemaField field, final CurrencyValue p1, final CurrencyValue p2, final boolean minInclusive, final boolean maxInclusive) {\n    String currencyCode = p1.getCurrencyCode();\n    final CurrencyValueSource vs = new CurrencyValueSource(field, currencyCode, parser);\n\n    return new SolrConstantScoreQuery(new ValueSourceRangeFilter(vs,\n            p1.getAmount() + \"\", p2.getAmount() + \"\", minInclusive, maxInclusive));\n  }\n\n","bugFix":["c2635332d49f7c5a0b484950462a01775512628e"],"bugIntro":["517ef79d6addd788f531a6d48a001383b5cbc68d"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"517ef79d6addd788f531a6d48a001383b5cbc68d","date":1361900777,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/CurrencyField#getRangeQuery(QParser,SchemaField,CurrencyValue,CurrencyValue,boolean,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/CurrencyField#getRangeQuery(QParser,SchemaField,CurrencyValue,CurrencyValue,boolean,boolean).mjava","sourceNew":"  public Query getRangeQuery(QParser parser, SchemaField field, final CurrencyValue p1, final CurrencyValue p2, final boolean minInclusive, final boolean maxInclusive) {\n    String currencyCode = (p1 != null) ? p1.getCurrencyCode() :\n                          (p2 != null) ? p2.getCurrencyCode() : defaultCurrency;\n\n    // ValueSourceRangeFilter doesn't check exists(), so we have to\n    final Filter docsWithValues = new FieldValueFilter(getAmountField(field).getName());\n    final Filter vsRangeFilter = new ValueSourceRangeFilter\n      (new CurrencyValueSource(field, currencyCode, parser),\n       p1 == null ? null : p1.getAmount() + \"\", \n       p2 == null ? null : p2.getAmount() + \"\",\n       minInclusive, maxInclusive);\n    final Filter docsInRange = new ChainedFilter\n      (new Filter [] { docsWithValues, vsRangeFilter }, ChainedFilter.AND);\n\n    return new SolrConstantScoreQuery(docsInRange);\n    \n  }\n\n","sourceOld":"  public Query getRangeQuery(QParser parser, SchemaField field, final CurrencyValue p1, final CurrencyValue p2, final boolean minInclusive, final boolean maxInclusive) {\n    String currencyCode = (p1 != null) ? p1.getCurrencyCode() :\n                          (p2 != null) ? p2.getCurrencyCode() : defaultCurrency;\n    final CurrencyValueSource vs = new CurrencyValueSource(field, currencyCode, parser);\n\n    return new SolrConstantScoreQuery(new ValueSourceRangeFilter(vs,\n            p1 == null ? null : p1.getAmount() + \"\" , p2 == null ? null : p2.getAmount() + \"\", minInclusive, maxInclusive));\n  }\n\n","bugFix":["c2635332d49f7c5a0b484950462a01775512628e","065a346f4fa5753b5f30aa6604c804696389d793"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8af63063406a531a215fa9c65fae3eee06bc7ab3","date":1362428737,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/CurrencyField#getRangeQuery(QParser,SchemaField,CurrencyValue,CurrencyValue,boolean,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/CurrencyField#getRangeQuery(QParser,SchemaField,CurrencyValue,CurrencyValue,boolean,boolean).mjava","sourceNew":"  public Query getRangeQuery(QParser parser, SchemaField field, final CurrencyValue p1, final CurrencyValue p2, final boolean minInclusive, final boolean maxInclusive) {\n    String currencyCode = (p1 != null) ? p1.getCurrencyCode() :\n                          (p2 != null) ? p2.getCurrencyCode() : defaultCurrency;\n\n    // ValueSourceRangeFilter doesn't check exists(), so we have to\n    final Filter docsWithValues = new FieldValueFilter(getAmountField(field).getName());\n    final Filter vsRangeFilter = new ValueSourceRangeFilter\n      (new RawCurrencyValueSource(field, currencyCode, parser),\n       p1 == null ? null : p1.getAmount() + \"\", \n       p2 == null ? null : p2.getAmount() + \"\",\n       minInclusive, maxInclusive);\n    final Filter docsInRange = new ChainedFilter\n      (new Filter [] { docsWithValues, vsRangeFilter }, ChainedFilter.AND);\n\n    return new SolrConstantScoreQuery(docsInRange);\n    \n  }\n\n","sourceOld":"  public Query getRangeQuery(QParser parser, SchemaField field, final CurrencyValue p1, final CurrencyValue p2, final boolean minInclusive, final boolean maxInclusive) {\n    String currencyCode = (p1 != null) ? p1.getCurrencyCode() :\n                          (p2 != null) ? p2.getCurrencyCode() : defaultCurrency;\n\n    // ValueSourceRangeFilter doesn't check exists(), so we have to\n    final Filter docsWithValues = new FieldValueFilter(getAmountField(field).getName());\n    final Filter vsRangeFilter = new ValueSourceRangeFilter\n      (new CurrencyValueSource(field, currencyCode, parser),\n       p1 == null ? null : p1.getAmount() + \"\", \n       p2 == null ? null : p2.getAmount() + \"\",\n       minInclusive, maxInclusive);\n    final Filter docsInRange = new ChainedFilter\n      (new Filter [] { docsWithValues, vsRangeFilter }, ChainedFilter.AND);\n\n    return new SolrConstantScoreQuery(docsInRange);\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f78e5763f288fef7c1cc1ebd2530195ce46b5b28","date":1412245226,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/CurrencyField#getRangeQuery(QParser,SchemaField,CurrencyValue,CurrencyValue,boolean,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/CurrencyField#getRangeQuery(QParser,SchemaField,CurrencyValue,CurrencyValue,boolean,boolean).mjava","sourceNew":"  public Query getRangeQuery(QParser parser, SchemaField field, final CurrencyValue p1, final CurrencyValue p2, final boolean minInclusive, final boolean maxInclusive) {\n    String currencyCode = (p1 != null) ? p1.getCurrencyCode() :\n                          (p2 != null) ? p2.getCurrencyCode() : defaultCurrency;\n\n    // ValueSourceRangeFilter doesn't check exists(), so we have to\n    final Filter docsWithValues = new FieldValueFilter(getAmountField(field).getName());\n    final Filter vsRangeFilter = new ValueSourceRangeFilter\n      (new RawCurrencyValueSource(field, currencyCode, parser),\n       p1 == null ? null : p1.getAmount() + \"\", \n       p2 == null ? null : p2.getAmount() + \"\",\n       minInclusive, maxInclusive);\n    final BooleanFilter docsInRange = new BooleanFilter();\n    docsInRange.add(docsWithValues, Occur.MUST);\n    docsInRange.add(vsRangeFilter, Occur.MUST);\n\n    return new SolrConstantScoreQuery(docsInRange);\n    \n  }\n\n","sourceOld":"  public Query getRangeQuery(QParser parser, SchemaField field, final CurrencyValue p1, final CurrencyValue p2, final boolean minInclusive, final boolean maxInclusive) {\n    String currencyCode = (p1 != null) ? p1.getCurrencyCode() :\n                          (p2 != null) ? p2.getCurrencyCode() : defaultCurrency;\n\n    // ValueSourceRangeFilter doesn't check exists(), so we have to\n    final Filter docsWithValues = new FieldValueFilter(getAmountField(field).getName());\n    final Filter vsRangeFilter = new ValueSourceRangeFilter\n      (new RawCurrencyValueSource(field, currencyCode, parser),\n       p1 == null ? null : p1.getAmount() + \"\", \n       p2 == null ? null : p2.getAmount() + \"\",\n       minInclusive, maxInclusive);\n    final Filter docsInRange = new ChainedFilter\n      (new Filter [] { docsWithValues, vsRangeFilter }, ChainedFilter.AND);\n\n    return new SolrConstantScoreQuery(docsInRange);\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d9a47902d6207303f5ed3e7aaca62ca33433af66","date":1412435312,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/schema/CurrencyField#getRangeQuery(QParser,SchemaField,CurrencyValue,CurrencyValue,boolean,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/CurrencyField#getRangeQuery(QParser,SchemaField,CurrencyValue,CurrencyValue,boolean,boolean).mjava","sourceNew":"  public Query getRangeQuery(QParser parser, SchemaField field, final CurrencyValue p1, final CurrencyValue p2, final boolean minInclusive, final boolean maxInclusive) {\n    String currencyCode = (p1 != null) ? p1.getCurrencyCode() :\n                          (p2 != null) ? p2.getCurrencyCode() : defaultCurrency;\n\n    // ValueSourceRangeFilter doesn't check exists(), so we have to\n    final Filter docsWithValues = new FieldValueFilter(getAmountField(field).getName());\n    final Filter vsRangeFilter = new ValueSourceRangeFilter\n      (new RawCurrencyValueSource(field, currencyCode, parser),\n       p1 == null ? null : p1.getAmount() + \"\", \n       p2 == null ? null : p2.getAmount() + \"\",\n       minInclusive, maxInclusive);\n    final BooleanFilter docsInRange = new BooleanFilter();\n    docsInRange.add(docsWithValues, Occur.MUST);\n    docsInRange.add(vsRangeFilter, Occur.MUST);\n\n    return new SolrConstantScoreQuery(docsInRange);\n    \n  }\n\n","sourceOld":"  public Query getRangeQuery(QParser parser, SchemaField field, final CurrencyValue p1, final CurrencyValue p2, final boolean minInclusive, final boolean maxInclusive) {\n    String currencyCode = (p1 != null) ? p1.getCurrencyCode() :\n                          (p2 != null) ? p2.getCurrencyCode() : defaultCurrency;\n\n    // ValueSourceRangeFilter doesn't check exists(), so we have to\n    final Filter docsWithValues = new FieldValueFilter(getAmountField(field).getName());\n    final Filter vsRangeFilter = new ValueSourceRangeFilter\n      (new RawCurrencyValueSource(field, currencyCode, parser),\n       p1 == null ? null : p1.getAmount() + \"\", \n       p2 == null ? null : p2.getAmount() + \"\",\n       minInclusive, maxInclusive);\n    final Filter docsInRange = new ChainedFilter\n      (new Filter [] { docsWithValues, vsRangeFilter }, ChainedFilter.AND);\n\n    return new SolrConstantScoreQuery(docsInRange);\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"484e80062d7ab2729bc82f0311d6a97dd913961a","date":1424450206,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/CurrencyField#getRangeQuery(QParser,SchemaField,CurrencyValue,CurrencyValue,boolean,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/CurrencyField#getRangeQuery(QParser,SchemaField,CurrencyValue,CurrencyValue,boolean,boolean).mjava","sourceNew":"  public Query getRangeQuery(QParser parser, SchemaField field, final CurrencyValue p1, final CurrencyValue p2, final boolean minInclusive, final boolean maxInclusive) {\n    String currencyCode = (p1 != null) ? p1.getCurrencyCode() :\n                          (p2 != null) ? p2.getCurrencyCode() : defaultCurrency;\n\n    // ValueSourceRangeFilter doesn't check exists(), so we have to\n    final Filter docsWithValues = new QueryWrapperFilter(new FieldValueQuery(getAmountField(field).getName()));\n    final Filter vsRangeFilter = new ValueSourceRangeFilter\n      (new RawCurrencyValueSource(field, currencyCode, parser),\n       p1 == null ? null : p1.getAmount() + \"\", \n       p2 == null ? null : p2.getAmount() + \"\",\n       minInclusive, maxInclusive);\n    final BooleanFilter docsInRange = new BooleanFilter();\n    docsInRange.add(docsWithValues, Occur.MUST);\n    docsInRange.add(vsRangeFilter, Occur.MUST);\n\n    return new SolrConstantScoreQuery(docsInRange);\n    \n  }\n\n","sourceOld":"  public Query getRangeQuery(QParser parser, SchemaField field, final CurrencyValue p1, final CurrencyValue p2, final boolean minInclusive, final boolean maxInclusive) {\n    String currencyCode = (p1 != null) ? p1.getCurrencyCode() :\n                          (p2 != null) ? p2.getCurrencyCode() : defaultCurrency;\n\n    // ValueSourceRangeFilter doesn't check exists(), so we have to\n    final Filter docsWithValues = new FieldValueFilter(getAmountField(field).getName());\n    final Filter vsRangeFilter = new ValueSourceRangeFilter\n      (new RawCurrencyValueSource(field, currencyCode, parser),\n       p1 == null ? null : p1.getAmount() + \"\", \n       p2 == null ? null : p2.getAmount() + \"\",\n       minInclusive, maxInclusive);\n    final BooleanFilter docsInRange = new BooleanFilter();\n    docsInRange.add(docsWithValues, Occur.MUST);\n    docsInRange.add(vsRangeFilter, Occur.MUST);\n\n    return new SolrConstantScoreQuery(docsInRange);\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"099c774ddd27f4ad437ca5df14d153bab0a3affe","date":1424527689,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/CurrencyField#getRangeQuery(QParser,SchemaField,CurrencyValue,CurrencyValue,boolean,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/CurrencyField#getRangeQuery(QParser,SchemaField,CurrencyValue,CurrencyValue,boolean,boolean).mjava","sourceNew":"  public Query getRangeQuery(QParser parser, SchemaField field, final CurrencyValue p1, final CurrencyValue p2, final boolean minInclusive, final boolean maxInclusive) {\n    String currencyCode = (p1 != null) ? p1.getCurrencyCode() :\n                          (p2 != null) ? p2.getCurrencyCode() : defaultCurrency;\n\n    // ValueSourceRangeFilter doesn't check exists(), so we have to\n    final Filter docsWithValues = new QueryWrapperFilter(new FieldValueQuery(getAmountField(field).getName()));\n    final Filter vsRangeFilter = new ValueSourceRangeFilter\n      (new RawCurrencyValueSource(field, currencyCode, parser),\n       p1 == null ? null : p1.getAmount() + \"\", \n       p2 == null ? null : p2.getAmount() + \"\",\n       minInclusive, maxInclusive);\n    final BooleanQuery docsInRange = new BooleanQuery();\n    docsInRange.add(docsWithValues, Occur.FILTER);\n    docsInRange.add(vsRangeFilter, Occur.FILTER);\n\n    return new SolrConstantScoreQuery(new QueryWrapperFilter(docsInRange));\n  }\n\n","sourceOld":"  public Query getRangeQuery(QParser parser, SchemaField field, final CurrencyValue p1, final CurrencyValue p2, final boolean minInclusive, final boolean maxInclusive) {\n    String currencyCode = (p1 != null) ? p1.getCurrencyCode() :\n                          (p2 != null) ? p2.getCurrencyCode() : defaultCurrency;\n\n    // ValueSourceRangeFilter doesn't check exists(), so we have to\n    final Filter docsWithValues = new QueryWrapperFilter(new FieldValueQuery(getAmountField(field).getName()));\n    final Filter vsRangeFilter = new ValueSourceRangeFilter\n      (new RawCurrencyValueSource(field, currencyCode, parser),\n       p1 == null ? null : p1.getAmount() + \"\", \n       p2 == null ? null : p2.getAmount() + \"\",\n       minInclusive, maxInclusive);\n    final BooleanFilter docsInRange = new BooleanFilter();\n    docsInRange.add(docsWithValues, Occur.MUST);\n    docsInRange.add(vsRangeFilter, Occur.MUST);\n\n    return new SolrConstantScoreQuery(docsInRange);\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f68d01cf19df971dcdcb05e30247f4ad7ec9747","date":1434611645,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/CurrencyField#getRangeQuery(QParser,SchemaField,CurrencyValue,CurrencyValue,boolean,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/CurrencyField#getRangeQuery(QParser,SchemaField,CurrencyValue,CurrencyValue,boolean,boolean).mjava","sourceNew":"  public Query getRangeQuery(QParser parser, SchemaField field, final CurrencyValue p1, final CurrencyValue p2, final boolean minInclusive, final boolean maxInclusive) {\n    String currencyCode = (p1 != null) ? p1.getCurrencyCode() :\n                          (p2 != null) ? p2.getCurrencyCode() : defaultCurrency;\n\n    // ValueSourceRangeFilter doesn't check exists(), so we have to\n    final Filter docsWithValues = new QueryWrapperFilter(new FieldValueQuery(getAmountField(field).getName()));\n    final Filter vsRangeFilter = new ValueSourceRangeFilter\n      (new RawCurrencyValueSource(field, currencyCode, parser),\n       p1 == null ? null : p1.getAmount() + \"\", \n       p2 == null ? null : p2.getAmount() + \"\",\n       minInclusive, maxInclusive);\n    final BooleanQuery.Builder docsInRange = new BooleanQuery.Builder();\n    docsInRange.add(docsWithValues, Occur.FILTER);\n    docsInRange.add(vsRangeFilter, Occur.FILTER);\n\n    return new SolrConstantScoreQuery(new QueryWrapperFilter(docsInRange.build()));\n  }\n\n","sourceOld":"  public Query getRangeQuery(QParser parser, SchemaField field, final CurrencyValue p1, final CurrencyValue p2, final boolean minInclusive, final boolean maxInclusive) {\n    String currencyCode = (p1 != null) ? p1.getCurrencyCode() :\n                          (p2 != null) ? p2.getCurrencyCode() : defaultCurrency;\n\n    // ValueSourceRangeFilter doesn't check exists(), so we have to\n    final Filter docsWithValues = new QueryWrapperFilter(new FieldValueQuery(getAmountField(field).getName()));\n    final Filter vsRangeFilter = new ValueSourceRangeFilter\n      (new RawCurrencyValueSource(field, currencyCode, parser),\n       p1 == null ? null : p1.getAmount() + \"\", \n       p2 == null ? null : p2.getAmount() + \"\",\n       minInclusive, maxInclusive);\n    final BooleanQuery docsInRange = new BooleanQuery();\n    docsInRange.add(docsWithValues, Occur.FILTER);\n    docsInRange.add(vsRangeFilter, Occur.FILTER);\n\n    return new SolrConstantScoreQuery(new QueryWrapperFilter(docsInRange));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f107636c2cc82350a2607d774c092da5b73152e5","date":1498227268,"type":5,"author":"Steve Rowe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/CurrencyFieldType#getRangeQuery(QParser,SchemaField,CurrencyValue,CurrencyValue,boolean,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/CurrencyField#getRangeQuery(QParser,SchemaField,CurrencyValue,CurrencyValue,boolean,boolean).mjava","sourceNew":"  public Query getRangeQuery(QParser parser, SchemaField field, final CurrencyValue p1, final CurrencyValue p2, final boolean minInclusive, final boolean maxInclusive) {\n    String currencyCode = (p1 != null) ? p1.getCurrencyCode() :\n        (p2 != null) ? p2.getCurrencyCode() : defaultCurrency;\n\n    // ValueSourceRangeFilter doesn't check exists(), so we have to\n    final Filter docsWithValues = new QueryWrapperFilter(new FieldValueQuery(getAmountField(field).getName()));\n    final Filter vsRangeFilter = new ValueSourceRangeFilter\n        (new RawCurrencyValueSource(field, currencyCode, parser),\n            p1 == null ? null : p1.getAmount() + \"\",\n            p2 == null ? null : p2.getAmount() + \"\",\n            minInclusive, maxInclusive);\n    final BooleanQuery.Builder docsInRange = new BooleanQuery.Builder();\n    docsInRange.add(docsWithValues, Occur.FILTER);\n    docsInRange.add(vsRangeFilter, Occur.FILTER);\n\n    return new SolrConstantScoreQuery(new QueryWrapperFilter(docsInRange.build()));\n  }\n\n","sourceOld":"  public Query getRangeQuery(QParser parser, SchemaField field, final CurrencyValue p1, final CurrencyValue p2, final boolean minInclusive, final boolean maxInclusive) {\n    String currencyCode = (p1 != null) ? p1.getCurrencyCode() :\n                          (p2 != null) ? p2.getCurrencyCode() : defaultCurrency;\n\n    // ValueSourceRangeFilter doesn't check exists(), so we have to\n    final Filter docsWithValues = new QueryWrapperFilter(new FieldValueQuery(getAmountField(field).getName()));\n    final Filter vsRangeFilter = new ValueSourceRangeFilter\n      (new RawCurrencyValueSource(field, currencyCode, parser),\n       p1 == null ? null : p1.getAmount() + \"\", \n       p2 == null ? null : p2.getAmount() + \"\",\n       minInclusive, maxInclusive);\n    final BooleanQuery.Builder docsInRange = new BooleanQuery.Builder();\n    docsInRange.add(docsWithValues, Occur.FILTER);\n    docsInRange.add(vsRangeFilter, Occur.FILTER);\n\n    return new SolrConstantScoreQuery(new QueryWrapperFilter(docsInRange.build()));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7dfa64bc2074fb87d0ca70095a644c1ead107e1","date":1498356339,"type":5,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/schema/CurrencyFieldType#getRangeQuery(QParser,SchemaField,CurrencyValue,CurrencyValue,boolean,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/CurrencyField#getRangeQuery(QParser,SchemaField,CurrencyValue,CurrencyValue,boolean,boolean).mjava","sourceNew":"  public Query getRangeQuery(QParser parser, SchemaField field, final CurrencyValue p1, final CurrencyValue p2, final boolean minInclusive, final boolean maxInclusive) {\n    String currencyCode = (p1 != null) ? p1.getCurrencyCode() :\n        (p2 != null) ? p2.getCurrencyCode() : defaultCurrency;\n\n    // ValueSourceRangeFilter doesn't check exists(), so we have to\n    final Filter docsWithValues = new QueryWrapperFilter(new FieldValueQuery(getAmountField(field).getName()));\n    final Filter vsRangeFilter = new ValueSourceRangeFilter\n        (new RawCurrencyValueSource(field, currencyCode, parser),\n            p1 == null ? null : p1.getAmount() + \"\",\n            p2 == null ? null : p2.getAmount() + \"\",\n            minInclusive, maxInclusive);\n    final BooleanQuery.Builder docsInRange = new BooleanQuery.Builder();\n    docsInRange.add(docsWithValues, Occur.FILTER);\n    docsInRange.add(vsRangeFilter, Occur.FILTER);\n\n    return new SolrConstantScoreQuery(new QueryWrapperFilter(docsInRange.build()));\n  }\n\n","sourceOld":"  public Query getRangeQuery(QParser parser, SchemaField field, final CurrencyValue p1, final CurrencyValue p2, final boolean minInclusive, final boolean maxInclusive) {\n    String currencyCode = (p1 != null) ? p1.getCurrencyCode() :\n                          (p2 != null) ? p2.getCurrencyCode() : defaultCurrency;\n\n    // ValueSourceRangeFilter doesn't check exists(), so we have to\n    final Filter docsWithValues = new QueryWrapperFilter(new FieldValueQuery(getAmountField(field).getName()));\n    final Filter vsRangeFilter = new ValueSourceRangeFilter\n      (new RawCurrencyValueSource(field, currencyCode, parser),\n       p1 == null ? null : p1.getAmount() + \"\", \n       p2 == null ? null : p2.getAmount() + \"\",\n       minInclusive, maxInclusive);\n    final BooleanQuery.Builder docsInRange = new BooleanQuery.Builder();\n    docsInRange.add(docsWithValues, Occur.FILTER);\n    docsInRange.add(vsRangeFilter, Occur.FILTER);\n\n    return new SolrConstantScoreQuery(new QueryWrapperFilter(docsInRange.build()));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":4,"author":"Karl Wright","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/schema/CurrencyField#getRangeQuery(QParser,SchemaField,CurrencyValue,CurrencyValue,boolean,boolean).mjava","sourceNew":null,"sourceOld":"  public Query getRangeQuery(QParser parser, SchemaField field, final CurrencyValue p1, final CurrencyValue p2, final boolean minInclusive, final boolean maxInclusive) {\n    String currencyCode = (p1 != null) ? p1.getCurrencyCode() :\n                          (p2 != null) ? p2.getCurrencyCode() : defaultCurrency;\n\n    // ValueSourceRangeFilter doesn't check exists(), so we have to\n    final Filter docsWithValues = new QueryWrapperFilter(new FieldValueQuery(getAmountField(field).getName()));\n    final Filter vsRangeFilter = new ValueSourceRangeFilter\n      (new RawCurrencyValueSource(field, currencyCode, parser),\n       p1 == null ? null : p1.getAmount() + \"\", \n       p2 == null ? null : p2.getAmount() + \"\",\n       minInclusive, maxInclusive);\n    final BooleanQuery.Builder docsInRange = new BooleanQuery.Builder();\n    docsInRange.add(docsWithValues, Occur.FILTER);\n    docsInRange.add(vsRangeFilter, Occur.FILTER);\n\n    return new SolrConstantScoreQuery(new QueryWrapperFilter(docsInRange.build()));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"517ef79d6addd788f531a6d48a001383b5cbc68d":["065a346f4fa5753b5f30aa6604c804696389d793"],"38e3b736c7ca086d61b7dbb841c905ee115490da":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c2635332d49f7c5a0b484950462a01775512628e"],"8af63063406a531a215fa9c65fae3eee06bc7ab3":["517ef79d6addd788f531a6d48a001383b5cbc68d"],"099c774ddd27f4ad437ca5df14d153bab0a3affe":["484e80062d7ab2729bc82f0311d6a97dd913961a"],"484e80062d7ab2729bc82f0311d6a97dd913961a":["f78e5763f288fef7c1cc1ebd2530195ce46b5b28"],"d9a47902d6207303f5ed3e7aaca62ca33433af66":["8af63063406a531a215fa9c65fae3eee06bc7ab3","f78e5763f288fef7c1cc1ebd2530195ce46b5b28"],"f78e5763f288fef7c1cc1ebd2530195ce46b5b28":["8af63063406a531a215fa9c65fae3eee06bc7ab3"],"b7dfa64bc2074fb87d0ca70095a644c1ead107e1":["3f68d01cf19df971dcdcb05e30247f4ad7ec9747","f107636c2cc82350a2607d774c092da5b73152e5"],"065a346f4fa5753b5f30aa6604c804696389d793":["c2635332d49f7c5a0b484950462a01775512628e"],"28288370235ed02234a64753cdbf0c6ec096304a":["3f68d01cf19df971dcdcb05e30247f4ad7ec9747","f107636c2cc82350a2607d774c092da5b73152e5"],"f107636c2cc82350a2607d774c092da5b73152e5":["3f68d01cf19df971dcdcb05e30247f4ad7ec9747"],"3f68d01cf19df971dcdcb05e30247f4ad7ec9747":["099c774ddd27f4ad437ca5df14d153bab0a3affe"],"c2635332d49f7c5a0b484950462a01775512628e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["28288370235ed02234a64753cdbf0c6ec096304a"]},"commit2Childs":{"517ef79d6addd788f531a6d48a001383b5cbc68d":["8af63063406a531a215fa9c65fae3eee06bc7ab3"],"38e3b736c7ca086d61b7dbb841c905ee115490da":[],"8af63063406a531a215fa9c65fae3eee06bc7ab3":["d9a47902d6207303f5ed3e7aaca62ca33433af66","f78e5763f288fef7c1cc1ebd2530195ce46b5b28"],"099c774ddd27f4ad437ca5df14d153bab0a3affe":["3f68d01cf19df971dcdcb05e30247f4ad7ec9747"],"484e80062d7ab2729bc82f0311d6a97dd913961a":["099c774ddd27f4ad437ca5df14d153bab0a3affe"],"d9a47902d6207303f5ed3e7aaca62ca33433af66":[],"f78e5763f288fef7c1cc1ebd2530195ce46b5b28":["484e80062d7ab2729bc82f0311d6a97dd913961a","d9a47902d6207303f5ed3e7aaca62ca33433af66"],"b7dfa64bc2074fb87d0ca70095a644c1ead107e1":[],"065a346f4fa5753b5f30aa6604c804696389d793":["517ef79d6addd788f531a6d48a001383b5cbc68d"],"28288370235ed02234a64753cdbf0c6ec096304a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f107636c2cc82350a2607d774c092da5b73152e5":["b7dfa64bc2074fb87d0ca70095a644c1ead107e1","28288370235ed02234a64753cdbf0c6ec096304a"],"3f68d01cf19df971dcdcb05e30247f4ad7ec9747":["b7dfa64bc2074fb87d0ca70095a644c1ead107e1","28288370235ed02234a64753cdbf0c6ec096304a","f107636c2cc82350a2607d774c092da5b73152e5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["38e3b736c7ca086d61b7dbb841c905ee115490da","c2635332d49f7c5a0b484950462a01775512628e"],"c2635332d49f7c5a0b484950462a01775512628e":["38e3b736c7ca086d61b7dbb841c905ee115490da","065a346f4fa5753b5f30aa6604c804696389d793"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["38e3b736c7ca086d61b7dbb841c905ee115490da","d9a47902d6207303f5ed3e7aaca62ca33433af66","b7dfa64bc2074fb87d0ca70095a644c1ead107e1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}