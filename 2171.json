{"path":"lucene/contrib/misc/src/java/org/apache/lucene/misc/ChainedFilter#getDocIdSet(IndexReader,int[],int[]).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/misc/src/java/org/apache/lucene/misc/ChainedFilter#getDocIdSet(IndexReader,int[],int[]).mjava","pathOld":"contrib/misc/src/java/org/apache/lucene/misc/ChainedFilter#getDocIdSet(IndexReader,int[],int[]).mjava","sourceNew":"    /**\n     * Delegates to each filter in the chain.\n     * @param reader IndexReader\n     * @param logic Logical operation\n     * @return DocIdSet\n     */\n    private DocIdSet getDocIdSet(IndexReader reader, int[] logic, int[] index)\n    throws IOException\n    {\n        if (logic.length != chain.length)\n            throw new IllegalArgumentException(\"Invalid number of elements in logic array\");\n\n        OpenBitSetDISI result = initialResult(reader, logic[0], index);\n        for (; index[0] < chain.length; index[0]++)\n        {\n            doChain(result, logic[index[0]], chain[index[0]].getDocIdSet(reader));\n        }\n        return finalResult(result, reader.maxDoc());\n    }\n\n","sourceOld":"    /**\n     * Delegates to each filter in the chain.\n     * @param reader IndexReader\n     * @param logic Logical operation\n     * @return DocIdSet\n     */\n    private DocIdSet getDocIdSet(IndexReader reader, int[] logic, int[] index)\n    throws IOException\n    {\n        if (logic.length != chain.length)\n            throw new IllegalArgumentException(\"Invalid number of elements in logic array\");\n\n        OpenBitSetDISI result = initialResult(reader, logic[0], index);\n        for (; index[0] < chain.length; index[0]++)\n        {\n            doChain(result, logic[index[0]], chain[index[0]].getDocIdSet(reader));\n        }\n        return finalResult(result, reader.maxDoc());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"90329759f82c33c8fdb14d8bc0db5e81d17934b8","date":1270913806,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/queries/src/java/org/apache/lucene/search/ChainedFilter#getDocIdSet(IndexReader,int[],int[]).mjava","pathOld":"lucene/contrib/misc/src/java/org/apache/lucene/misc/ChainedFilter#getDocIdSet(IndexReader,int[],int[]).mjava","sourceNew":"    /**\n     * Delegates to each filter in the chain.\n     * @param reader IndexReader\n     * @param logic Logical operation\n     * @return DocIdSet\n     */\n    private DocIdSet getDocIdSet(IndexReader reader, int[] logic, int[] index)\n    throws IOException\n    {\n        if (logic.length != chain.length)\n            throw new IllegalArgumentException(\"Invalid number of elements in logic array\");\n\n        OpenBitSetDISI result = initialResult(reader, logic[0], index);\n        for (; index[0] < chain.length; index[0]++)\n        {\n            doChain(result, logic[index[0]], chain[index[0]].getDocIdSet(reader));\n        }\n        return finalResult(result, reader.maxDoc());\n    }\n\n","sourceOld":"    /**\n     * Delegates to each filter in the chain.\n     * @param reader IndexReader\n     * @param logic Logical operation\n     * @return DocIdSet\n     */\n    private DocIdSet getDocIdSet(IndexReader reader, int[] logic, int[] index)\n    throws IOException\n    {\n        if (logic.length != chain.length)\n            throw new IllegalArgumentException(\"Invalid number of elements in logic array\");\n\n        OpenBitSetDISI result = initialResult(reader, logic[0], index);\n        for (; index[0] < chain.length; index[0]++)\n        {\n            doChain(result, logic[index[0]], chain[index[0]].getDocIdSet(reader));\n        }\n        return finalResult(result, reader.maxDoc());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"90329759f82c33c8fdb14d8bc0db5e81d17934b8":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["90329759f82c33c8fdb14d8bc0db5e81d17934b8"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"90329759f82c33c8fdb14d8bc0db5e81d17934b8":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["90329759f82c33c8fdb14d8bc0db5e81d17934b8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}