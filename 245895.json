{"path":"sandbox/contributions/similarity/src/java/org/apache/lucene/search/similar/MoreLikeThis#addTermFrequencies(Map,TermFreqVector).mjava","commits":[{"id":"0d57805a939f8923b86ca8202ccef1f7cf548098","date":1105995946,"type":0,"author":"David Spencer","isMerge":false,"pathNew":"sandbox/contributions/similarity/src/java/org/apache/lucene/search/similar/MoreLikeThis#addTermFrequencies(Map,TermFreqVector).mjava","pathOld":"/dev/null","sourceNew":"\t/**\n\t * Adds terms and frequencies found in vector into the Map termFreqMap\n\t * @param termFreqMap a Map of terms and their frequencies\n\t * @param vector List of terms and their frequencies for a doc/field\n\t */\n\tprivate void addTermFrequencies(Map termFreqMap, TermFreqVector vector)\n\t{\n\t\tString[] terms = vector.getTerms();\n\t\tint freqs[]=vector.getTermFrequencies();\n\t\tfor (int j = 0; j < terms.length; j++) {\n\t\t    String term = terms[j];\n\t\t\n\t\t\tif(isNoiseWord(term)){\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t    // increment frequency\n\t\t    Int cnt = (Int) termFreqMap.get(term);\n\t\t    if (cnt == null) {\n\t\t    \tcnt=new Int();\n\t\t\t\ttermFreqMap.put(term, cnt);\n\t\t\t\tcnt.x=freqs[j];\t\t\t\t\n\t\t    }\n\t\t    else {\n\t\t        cnt.x+=freqs[j];\n\t\t    }\n\t\t}\n\t}\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aa8dcd4adc562c6e8da67c42872ef9194f8598fa","date":1108145465,"type":5,"author":"Erik Hatcher","isMerge":false,"pathNew":"contrib/similarity/src/java/org/apache/lucene/search/similar/MoreLikeThis#addTermFrequencies(Map,TermFreqVector).mjava","pathOld":"sandbox/contributions/similarity/src/java/org/apache/lucene/search/similar/MoreLikeThis#addTermFrequencies(Map,TermFreqVector).mjava","sourceNew":"\t/**\n\t * Adds terms and frequencies found in vector into the Map termFreqMap\n\t * @param termFreqMap a Map of terms and their frequencies\n\t * @param vector List of terms and their frequencies for a doc/field\n\t */\n\tprivate void addTermFrequencies(Map termFreqMap, TermFreqVector vector)\n\t{\n\t\tString[] terms = vector.getTerms();\n\t\tint freqs[]=vector.getTermFrequencies();\n\t\tfor (int j = 0; j < terms.length; j++) {\n\t\t    String term = terms[j];\n\t\t\n\t\t\tif(isNoiseWord(term)){\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t    // increment frequency\n\t\t    Int cnt = (Int) termFreqMap.get(term);\n\t\t    if (cnt == null) {\n\t\t    \tcnt=new Int();\n\t\t\t\ttermFreqMap.put(term, cnt);\n\t\t\t\tcnt.x=freqs[j];\t\t\t\t\n\t\t    }\n\t\t    else {\n\t\t        cnt.x+=freqs[j];\n\t\t    }\n\t\t}\n\t}\n\n","sourceOld":"\t/**\n\t * Adds terms and frequencies found in vector into the Map termFreqMap\n\t * @param termFreqMap a Map of terms and their frequencies\n\t * @param vector List of terms and their frequencies for a doc/field\n\t */\n\tprivate void addTermFrequencies(Map termFreqMap, TermFreqVector vector)\n\t{\n\t\tString[] terms = vector.getTerms();\n\t\tint freqs[]=vector.getTermFrequencies();\n\t\tfor (int j = 0; j < terms.length; j++) {\n\t\t    String term = terms[j];\n\t\t\n\t\t\tif(isNoiseWord(term)){\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t    // increment frequency\n\t\t    Int cnt = (Int) termFreqMap.get(term);\n\t\t    if (cnt == null) {\n\t\t    \tcnt=new Int();\n\t\t\t\ttermFreqMap.put(term, cnt);\n\t\t\t\tcnt.x=freqs[j];\t\t\t\t\n\t\t    }\n\t\t    else {\n\t\t        cnt.x+=freqs[j];\n\t\t    }\n\t\t}\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0d57805a939f8923b86ca8202ccef1f7cf548098":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"aa8dcd4adc562c6e8da67c42872ef9194f8598fa":["0d57805a939f8923b86ca8202ccef1f7cf548098"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["aa8dcd4adc562c6e8da67c42872ef9194f8598fa"]},"commit2Childs":{"0d57805a939f8923b86ca8202ccef1f7cf548098":["aa8dcd4adc562c6e8da67c42872ef9194f8598fa"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0d57805a939f8923b86ca8202ccef1f7cf548098"],"aa8dcd4adc562c6e8da67c42872ef9194f8598fa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}