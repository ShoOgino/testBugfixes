{"path":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/tasks/CountingHighlighterTestTask#getBenchmarkHighlighter(Query).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/tasks/CountingHighlighterTestTask#getBenchmarkHighlighter(Query).mjava","pathOld":"modules/benchmark/src/test/org/apache/lucene/benchmark/byTask/tasks/CountingHighlighterTestTask#getBenchmarkHighlighter(Query).mjava","sourceNew":"  @Override\n  public BenchmarkHighlighter getBenchmarkHighlighter(Query q) {\n    highlighter = new Highlighter(new SimpleHTMLFormatter(), new QueryScorer(q));\n    return new BenchmarkHighlighter() {\n      @Override\n      public int doHighlight(IndexReader reader, int doc, String field, Document document, Analyzer analyzer, String text) throws Exception {\n        TokenStream ts = TokenSources.getAnyTokenStream(reader, doc, field, document, analyzer);\n        TextFragment[] frag = highlighter.getBestTextFragments(ts, text, mergeContiguous, maxFrags);\n        numHighlightedResults += frag != null ? frag.length : 0;\n        return frag != null ? frag.length : 0;\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public BenchmarkHighlighter getBenchmarkHighlighter(Query q) {\n    highlighter = new Highlighter(new SimpleHTMLFormatter(), new QueryScorer(q));\n    return new BenchmarkHighlighter() {\n      @Override\n      public int doHighlight(IndexReader reader, int doc, String field, Document document, Analyzer analyzer, String text) throws Exception {\n        TokenStream ts = TokenSources.getAnyTokenStream(reader, doc, field, document, analyzer);\n        TextFragment[] frag = highlighter.getBestTextFragments(ts, text, mergeContiguous, maxFrags);\n        numHighlightedResults += frag != null ? frag.length : 0;\n        return frag != null ? frag.length : 0;\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a7e4907084808af8fdb14b9809e6dceaccf6867b","date":1343473006,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/tasks/CountingHighlighterTestTask#getBenchmarkHighlighter(Query).mjava","pathOld":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/tasks/CountingHighlighterTestTask#getBenchmarkHighlighter(Query).mjava","sourceNew":"  @Override\n  public BenchmarkHighlighter getBenchmarkHighlighter(Query q) {\n    highlighter = new Highlighter(new SimpleHTMLFormatter(), new QueryScorer(q));\n    return new BenchmarkHighlighter() {\n      @Override\n      public int doHighlight(IndexReader reader, int doc, String field, StoredDocument document, Analyzer analyzer, String text) throws Exception {\n        TokenStream ts = TokenSources.getAnyTokenStream(reader, doc, field, document, analyzer);\n        TextFragment[] frag = highlighter.getBestTextFragments(ts, text, mergeContiguous, maxFrags);\n        numHighlightedResults += frag != null ? frag.length : 0;\n        return frag != null ? frag.length : 0;\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public BenchmarkHighlighter getBenchmarkHighlighter(Query q) {\n    highlighter = new Highlighter(new SimpleHTMLFormatter(), new QueryScorer(q));\n    return new BenchmarkHighlighter() {\n      @Override\n      public int doHighlight(IndexReader reader, int doc, String field, Document document, Analyzer analyzer, String text) throws Exception {\n        TokenStream ts = TokenSources.getAnyTokenStream(reader, doc, field, document, analyzer);\n        TextFragment[] frag = highlighter.getBestTextFragments(ts, text, mergeContiguous, maxFrags);\n        numHighlightedResults += frag != null ? frag.length : 0;\n        return frag != null ? frag.length : 0;\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1d028314cced5858683a1bb4741423d0f934257b","date":1346596535,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/tasks/CountingHighlighterTestTask#getBenchmarkHighlighter(Query).mjava","pathOld":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/tasks/CountingHighlighterTestTask#getBenchmarkHighlighter(Query).mjava","sourceNew":"  @Override\n  public BenchmarkHighlighter getBenchmarkHighlighter(Query q) {\n    highlighter = new Highlighter(new SimpleHTMLFormatter(), new QueryScorer(q));\n    return new BenchmarkHighlighter() {\n      @Override\n      public int doHighlight(IndexReader reader, int doc, String field, StoredDocument document, Analyzer analyzer, String text) throws Exception {\n        TokenStream ts = TokenSources.getAnyTokenStream(reader, doc, field, document, analyzer);\n        TextFragment[] frag = highlighter.getBestTextFragments(ts, text, mergeContiguous, maxFrags);\n        numHighlightedResults += frag != null ? frag.length : 0;\n        return frag != null ? frag.length : 0;\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public BenchmarkHighlighter getBenchmarkHighlighter(Query q) {\n    highlighter = new Highlighter(new SimpleHTMLFormatter(), new QueryScorer(q));\n    return new BenchmarkHighlighter() {\n      @Override\n      public int doHighlight(IndexReader reader, int doc, String field, Document document, Analyzer analyzer, String text) throws Exception {\n        TokenStream ts = TokenSources.getAnyTokenStream(reader, doc, field, document, analyzer);\n        TextFragment[] frag = highlighter.getBestTextFragments(ts, text, mergeContiguous, maxFrags);\n        numHighlightedResults += frag != null ? frag.length : 0;\n        return frag != null ? frag.length : 0;\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5d62e4938659e263e96ae8188e11aea8a940aea5","date":1430230314,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/tasks/CountingHighlighterTestTask#getBenchmarkHighlighter(Query).mjava","pathOld":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/tasks/CountingHighlighterTestTask#getBenchmarkHighlighter(Query).mjava","sourceNew":"  @Override\n  public BenchmarkHighlighter getBenchmarkHighlighter(Query q) {\n    highlighter = new Highlighter(new SimpleHTMLFormatter(), new QueryScorer(q));\n    return new BenchmarkHighlighter() {\n      @Override\n      public int doHighlight(IndexReader reader, int doc, String field, StoredDocument document, Analyzer analyzer, String text) throws Exception {\n        final int maxStartOffset = highlighter.getMaxDocCharsToAnalyze() - 1;\n        TokenStream ts = TokenSources.getTokenStream(field, reader.getTermVectors(doc), text, analyzer, maxStartOffset);\n        TextFragment[] frag = highlighter.getBestTextFragments(ts, text, mergeContiguous, maxFrags);\n        numHighlightedResults += frag != null ? frag.length : 0;\n        return frag != null ? frag.length : 0;\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public BenchmarkHighlighter getBenchmarkHighlighter(Query q) {\n    highlighter = new Highlighter(new SimpleHTMLFormatter(), new QueryScorer(q));\n    return new BenchmarkHighlighter() {\n      @Override\n      public int doHighlight(IndexReader reader, int doc, String field, StoredDocument document, Analyzer analyzer, String text) throws Exception {\n        TokenStream ts = TokenSources.getAnyTokenStream(reader, doc, field, document, analyzer);\n        TextFragment[] frag = highlighter.getBestTextFragments(ts, text, mergeContiguous, maxFrags);\n        numHighlightedResults += frag != null ? frag.length : 0;\n        return frag != null ? frag.length : 0;\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6654c5f3ec2e4a84ef867c82d4eec872c2372c8c","date":1453060490,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/tasks/CountingHighlighterTestTask#getBenchmarkHighlighter(Query).mjava","pathOld":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/tasks/CountingHighlighterTestTask#getBenchmarkHighlighter(Query).mjava","sourceNew":"  @Override\n  public BenchmarkHighlighter getBenchmarkHighlighter(Query q) {\n    highlighter = new Highlighter(new SimpleHTMLFormatter(), new QueryScorer(q));\n    return new BenchmarkHighlighter() {\n      @Override\n      public int doHighlight(IndexReader reader, int doc, String field, Document document, Analyzer analyzer, String text) throws Exception {\n        final int maxStartOffset = highlighter.getMaxDocCharsToAnalyze() - 1;\n        TokenStream ts = TokenSources.getTokenStream(field, reader.getTermVectors(doc), text, analyzer, maxStartOffset);\n        TextFragment[] frag = highlighter.getBestTextFragments(ts, text, mergeContiguous, maxFrags);\n        numHighlightedResults += frag != null ? frag.length : 0;\n        return frag != null ? frag.length : 0;\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public BenchmarkHighlighter getBenchmarkHighlighter(Query q) {\n    highlighter = new Highlighter(new SimpleHTMLFormatter(), new QueryScorer(q));\n    return new BenchmarkHighlighter() {\n      @Override\n      public int doHighlight(IndexReader reader, int doc, String field, StoredDocument document, Analyzer analyzer, String text) throws Exception {\n        final int maxStartOffset = highlighter.getMaxDocCharsToAnalyze() - 1;\n        TokenStream ts = TokenSources.getTokenStream(field, reader.getTermVectors(doc), text, analyzer, maxStartOffset);\n        TextFragment[] frag = highlighter.getBestTextFragments(ts, text, mergeContiguous, maxFrags);\n        numHighlightedResults += frag != null ? frag.length : 0;\n        return frag != null ? frag.length : 0;\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"141e140cd2260284f58cb5cf2b17da4027e82094","date":1475848631,"type":4,"author":"David Smiley","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/tasks/CountingHighlighterTestTask#getBenchmarkHighlighter(Query).mjava","sourceNew":null,"sourceOld":"  @Override\n  public BenchmarkHighlighter getBenchmarkHighlighter(Query q) {\n    highlighter = new Highlighter(new SimpleHTMLFormatter(), new QueryScorer(q));\n    return new BenchmarkHighlighter() {\n      @Override\n      public int doHighlight(IndexReader reader, int doc, String field, Document document, Analyzer analyzer, String text) throws Exception {\n        final int maxStartOffset = highlighter.getMaxDocCharsToAnalyze() - 1;\n        TokenStream ts = TokenSources.getTokenStream(field, reader.getTermVectors(doc), text, analyzer, maxStartOffset);\n        TextFragment[] frag = highlighter.getBestTextFragments(ts, text, mergeContiguous, maxFrags);\n        numHighlightedResults += frag != null ? frag.length : 0;\n        return frag != null ? frag.length : 0;\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":4,"author":"Kevin Risden","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/tasks/CountingHighlighterTestTask#getBenchmarkHighlighter(Query).mjava","sourceNew":null,"sourceOld":"  @Override\n  public BenchmarkHighlighter getBenchmarkHighlighter(Query q) {\n    highlighter = new Highlighter(new SimpleHTMLFormatter(), new QueryScorer(q));\n    return new BenchmarkHighlighter() {\n      @Override\n      public int doHighlight(IndexReader reader, int doc, String field, Document document, Analyzer analyzer, String text) throws Exception {\n        final int maxStartOffset = highlighter.getMaxDocCharsToAnalyze() - 1;\n        TokenStream ts = TokenSources.getTokenStream(field, reader.getTermVectors(doc), text, analyzer, maxStartOffset);\n        TextFragment[] frag = highlighter.getBestTextFragments(ts, text, mergeContiguous, maxFrags);\n        numHighlightedResults += frag != null ? frag.length : 0;\n        return frag != null ? frag.length : 0;\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"1d028314cced5858683a1bb4741423d0f934257b":["b89678825b68eccaf09e6ab71675fc0b0af1e099","a7e4907084808af8fdb14b9809e6dceaccf6867b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5d62e4938659e263e96ae8188e11aea8a940aea5":["1d028314cced5858683a1bb4741423d0f934257b"],"141e140cd2260284f58cb5cf2b17da4027e82094":["6654c5f3ec2e4a84ef867c82d4eec872c2372c8c"],"a7e4907084808af8fdb14b9809e6dceaccf6867b":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["6654c5f3ec2e4a84ef867c82d4eec872c2372c8c","141e140cd2260284f58cb5cf2b17da4027e82094"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["141e140cd2260284f58cb5cf2b17da4027e82094"],"6654c5f3ec2e4a84ef867c82d4eec872c2372c8c":["5d62e4938659e263e96ae8188e11aea8a940aea5"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["1d028314cced5858683a1bb4741423d0f934257b","a7e4907084808af8fdb14b9809e6dceaccf6867b"],"1d028314cced5858683a1bb4741423d0f934257b":["5d62e4938659e263e96ae8188e11aea8a940aea5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"5d62e4938659e263e96ae8188e11aea8a940aea5":["6654c5f3ec2e4a84ef867c82d4eec872c2372c8c"],"a7e4907084808af8fdb14b9809e6dceaccf6867b":["1d028314cced5858683a1bb4741423d0f934257b"],"141e140cd2260284f58cb5cf2b17da4027e82094":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"6654c5f3ec2e4a84ef867c82d4eec872c2372c8c":["141e140cd2260284f58cb5cf2b17da4027e82094","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}