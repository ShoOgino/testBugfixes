{"path":"lucene/tools/src/java/org/apache/lucene/validation/LibVersionsCheckTask#collectDirectDependencies().mjava","commits":[{"id":"b3e4bd3aed493904d0bbb6c6e0394f619e175087","date":1401446035,"type":0,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/tools/src/java/org/apache/lucene/validation/LibVersionsCheckTask#collectDirectDependencies().mjava","pathOld":"/dev/null","sourceNew":"  private void collectDirectDependencies() {\n    InterpolatedProperties properties = new InterpolatedProperties();\n    try (InputStream inputStream = new FileInputStream(centralizedVersionsFile);\n         Reader reader = new InputStreamReader(inputStream, StandardCharsets.UTF_8)) {\n      properties.load(reader);\n    } catch (IOException e) {\n      throw new BuildException(\"Exception reading \" + centralizedVersionsFile + \": \" + e.toString(), e);\n    }\n    for (Object obj : properties.keySet()) {\n      String coordinate = (String)obj;\n      if (COORDINATE_KEY_PATTERN.matcher(coordinate).matches()) {\n        String direct = properties.getProperty(coordinate);\n        Versions versions = new Versions(direct);\n        directDependencies.put(coordinate, versions);\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"151d28379beec3adbc4c091c633cb33e496a2de3","date":1401909314,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/tools/src/java/org/apache/lucene/validation/LibVersionsCheckTask#collectDirectDependencies().mjava","pathOld":"lucene/tools/src/java/org/apache/lucene/validation/LibVersionsCheckTask#collectDirectDependencies().mjava","sourceNew":"  private void collectDirectDependencies() {\n    InterpolatedProperties properties = new InterpolatedProperties();\n    try (InputStream inputStream = new FileInputStream(centralizedVersionsFile);\n         Reader reader = new InputStreamReader(inputStream, StandardCharsets.UTF_8)) {\n      properties.load(reader);\n    } catch (IOException e) {\n      throw new BuildException(\"Exception reading \" + centralizedVersionsFile + \": \" + e.toString(), e);\n    }\n    for (Object obj : properties.keySet()) {\n      String coordinate = (String)obj;\n      Matcher matcher = COORDINATE_KEY_PATTERN.matcher(coordinate);\n      if (matcher.matches()) {\n        String org = matcher.group(2);\n        String name = matcher.group(3);\n        String directVersion = properties.getProperty(coordinate);\n        Dependency dependency = new Dependency(org, name, directVersion);\n        directDependencies.put(coordinate, dependency);\n      }\n    }\n  }\n\n","sourceOld":"  private void collectDirectDependencies() {\n    InterpolatedProperties properties = new InterpolatedProperties();\n    try (InputStream inputStream = new FileInputStream(centralizedVersionsFile);\n         Reader reader = new InputStreamReader(inputStream, StandardCharsets.UTF_8)) {\n      properties.load(reader);\n    } catch (IOException e) {\n      throw new BuildException(\"Exception reading \" + centralizedVersionsFile + \": \" + e.toString(), e);\n    }\n    for (Object obj : properties.keySet()) {\n      String coordinate = (String)obj;\n      if (COORDINATE_KEY_PATTERN.matcher(coordinate).matches()) {\n        String direct = properties.getProperty(coordinate);\n        Versions versions = new Versions(direct);\n        directDependencies.put(coordinate, versions);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e025cf1c07150c8db28879d785db17eb3a66ca9f","date":1598788864,"type":4,"author":"Dawid Weiss","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/tools/src/java/org/apache/lucene/validation/LibVersionsCheckTask#collectDirectDependencies().mjava","sourceNew":null,"sourceOld":"  private void collectDirectDependencies() {\n    InterpolatedProperties properties = new InterpolatedProperties();\n    try (InputStream inputStream = new FileInputStream(centralizedVersionsFile);\n         Reader reader = new InputStreamReader(inputStream, StandardCharsets.UTF_8)) {\n      properties.load(reader);\n    } catch (IOException e) {\n      throw new BuildException(\"Exception reading \" + centralizedVersionsFile + \": \" + e.toString(), e);\n    }\n    for (Object obj : properties.keySet()) {\n      String coordinate = (String)obj;\n      Matcher matcher = COORDINATE_KEY_PATTERN.matcher(coordinate);\n      if (matcher.matches()) {\n        String org = matcher.group(2);\n        String name = matcher.group(3);\n        String directVersion = properties.getProperty(coordinate);\n        Dependency dependency = new Dependency(org, name, directVersion);\n        directDependencies.put(coordinate, dependency);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"151d28379beec3adbc4c091c633cb33e496a2de3":["b3e4bd3aed493904d0bbb6c6e0394f619e175087"],"e025cf1c07150c8db28879d785db17eb3a66ca9f":["151d28379beec3adbc4c091c633cb33e496a2de3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b3e4bd3aed493904d0bbb6c6e0394f619e175087":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e025cf1c07150c8db28879d785db17eb3a66ca9f"]},"commit2Childs":{"151d28379beec3adbc4c091c633cb33e496a2de3":["e025cf1c07150c8db28879d785db17eb3a66ca9f"],"e025cf1c07150c8db28879d785db17eb3a66ca9f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b3e4bd3aed493904d0bbb6c6e0394f619e175087"],"b3e4bd3aed493904d0bbb6c6e0394f619e175087":["151d28379beec3adbc4c091c633cb33e496a2de3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}