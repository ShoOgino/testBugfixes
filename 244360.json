{"path":"solr/contrib/analytics/src/test/org/apache/solr/analytics/legacy/facet/LegacyQueryFacetCloudTest#queryTest().mjava","commits":[{"id":"3bd4c6955956e76c96eb12dfe64108ed03522983","date":1508262722,"type":0,"author":"Houston Putman","isMerge":false,"pathNew":"solr/contrib/analytics/src/test/org/apache/solr/analytics/legacy/facet/LegacyQueryFacetCloudTest#queryTest().mjava","pathOld":"/dev/null","sourceNew":"  @SuppressWarnings(\"unchecked\")\n  @Test\n  public void queryTest() throws Exception { \n    String[] params = new String[] {\n        \"o.ir.s.sum\", \"sum(int_id)\",\n        \"o.ir.s.mean\", \"mean(int_id)\",\n        \"o.ir.s.median\", \"median(int_id)\",\n        \"o.ir.s.percentile_8\", \"percentile(8,int_id)\",\n        \"o.ir.qf\", \"float1\",\n        \"o.ir.qf.float1.q\", \"float_fd:[* TO 50]\",\n        \"o.ir.qf\", \"float2\",\n        \"o.ir.qf.float2.q\", \"float_fd:[* TO 30]\",\n\n        \"o.lr.s.sum\", \"sum(long_ld)\",\n        \"o.lr.s.mean\", \"mean(long_ld)\",\n        \"o.lr.s.median\", \"median(long_ld)\",\n        \"o.lr.s.percentile_8\", \"percentile(8,long_ld)\",\n        \"o.lr.qf\", \"string\",\n        \"o.lr.qf.string.q\", \"string_sd:abc1\",\n        \"o.lr.qf.string.q\", \"string_sd:abc2\",\n        \n        \"o.fr.s.sum\", \"sum(float_fd)\",\n        \"o.fr.s.mean\", \"mean(float_fd)\",\n        \"o.fr.s.median\", \"median(float_fd)\",\n        \"o.fr.s.percentile_8\", \"percentile(8,float_fd)\",\n        \"o.fr.qf\", \"lad\",\n        \"o.fr.qf.lad.q\", \"long_ld:[20 TO *]\",\n        \"o.fr.qf.lad.q\", \"long_ld:[30 TO *]\",\n        \"o.fr.qf.lad.q\", \"double_dd:[* TO 50]\"\n    };\n    \n    NamedList<Object> response = queryLegacyCloudAnalytics(params);\n    String responseStr = response.toString();\n    \n    //Int One\n    ArrayList<Double> int1 = getValueList(response, \"ir\", \"queryFacets\", \"float1\", \"sum\", false);\n    ArrayList<Double> int1Test = calculateFacetedNumberStat(int1TestStart, \"sum\");\n    assertEquals(responseStr, int1, int1Test);\n    //Int Two\n    ArrayList<Integer> int2 = getValueList(response, \"ir\", \"queryFacets\", \"float2\", \"percentile_8\", false);\n    ArrayList<Integer> int2Test = (ArrayList<Integer>)calculateFacetedStat(int2TestStart, \"perc_8\");\n    assertEquals(responseStr, int2, int2Test);\n\n    //Long\n    ArrayList<Double> long1 = getValueList(response, \"lr\", \"queryFacets\", \"string\", \"median\", false);\n    ArrayList<Double> long1Test = calculateFacetedNumberStat(longTestStart, \"median\");\n    assertEquals(responseStr,long1,long1Test);\n\n    //Float\n    ArrayList<Double> float1 = getValueList(response, \"fr\", \"queryFacets\", \"lad\", \"mean\", false);\n    ArrayList<Double> float1Test = calculateFacetedNumberStat(floatTestStart, \"mean\");\n    assertEquals(responseStr, float1, float1Test);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1e4e64b7199d2f2a17be7f3926c7532553910dce","date":1564342581,"type":3,"author":"Jason Gerlowski","isMerge":false,"pathNew":"solr/contrib/analytics/src/test/org/apache/solr/analytics/legacy/facet/LegacyQueryFacetCloudTest#queryTest().mjava","pathOld":"solr/contrib/analytics/src/test/org/apache/solr/analytics/legacy/facet/LegacyQueryFacetCloudTest#queryTest().mjava","sourceNew":"  @SuppressWarnings(\"unchecked\")\n  @Test\n  public void queryTest() throws Exception {\n    String[] params = new String[] {\n        \"o.ir.s.sum\", \"sum(int_id)\",\n        \"o.ir.s.mean\", \"mean(int_id)\",\n        \"o.ir.s.median\", \"median(int_id)\",\n        \"o.ir.s.percentile_8\", \"percentile(8,int_id)\",\n        \"o.ir.qf\", \"float1\",\n        \"o.ir.qf.float1.q\", \"float_fd:[* TO 50]\",\n        \"o.ir.qf\", \"float2\",\n        \"o.ir.qf.float2.q\", \"float_fd:[* TO 30]\",\n\n        \"o.lr.s.sum\", \"sum(long_ld)\",\n        \"o.lr.s.mean\", \"mean(long_ld)\",\n        \"o.lr.s.median\", \"median(long_ld)\",\n        \"o.lr.s.percentile_8\", \"percentile(8,long_ld)\",\n        \"o.lr.qf\", \"string\",\n        \"o.lr.qf.string.q\", \"string_sd:abc1\",\n        \"o.lr.qf.string.q\", \"string_sd:abc2\",\n\n        \"o.fr.s.sum\", \"sum(float_fd)\",\n        \"o.fr.s.mean\", \"mean(float_fd)\",\n        \"o.fr.s.median\", \"median(float_fd)\",\n        \"o.fr.s.percentile_8\", \"percentile(8,float_fd)\",\n        \"o.fr.qf\", \"lad\",\n        \"o.fr.qf.lad.q\", \"long_ld:[20 TO *]\",\n        \"o.fr.qf.lad.q\", \"long_ld:[30 TO *]\",\n        \"o.fr.qf.lad.q\", \"double_dd:[* TO 50]\"\n    };\n\n    NamedList<Object> response = queryLegacyCloudAnalytics(params);\n    String responseStr = response.toString();\n\n    //Int One\n    ArrayList<Double> int1 = getValueList(response, \"ir\", \"queryFacets\", \"float1\", \"sum\", false);\n    ArrayList<Double> int1Test = calculateFacetedNumberStat(int1TestStart, \"sum\");\n    assertEquals(responseStr, int1, int1Test);\n    //Int Two\n    ArrayList<Integer> int2 = getValueList(response, \"ir\", \"queryFacets\", \"float2\", \"percentile_8\", false);\n    ArrayList<Integer> int2Test = (ArrayList<Integer>)calculateFacetedStat(int2TestStart, \"perc_8\");\n    assertEquals(responseStr, int2, int2Test);\n\n    //Long\n    ArrayList<Double> long1 = getValueList(response, \"lr\", \"queryFacets\", \"string\", \"median\", false);\n    ArrayList<Double> long1Test = calculateFacetedNumberStat(longTestStart, \"median\");\n    assertEquals(responseStr,long1,long1Test);\n\n    //Float\n    ArrayList<Double> float1 = getValueList(response, \"fr\", \"queryFacets\", \"lad\", \"mean\", false);\n    ArrayList<Double> float1Test = calculateFacetedNumberStat(floatTestStart, \"mean\");\n    assertEquals(responseStr, float1, float1Test);\n  }\n\n","sourceOld":"  @SuppressWarnings(\"unchecked\")\n  @Test\n  public void queryTest() throws Exception { \n    String[] params = new String[] {\n        \"o.ir.s.sum\", \"sum(int_id)\",\n        \"o.ir.s.mean\", \"mean(int_id)\",\n        \"o.ir.s.median\", \"median(int_id)\",\n        \"o.ir.s.percentile_8\", \"percentile(8,int_id)\",\n        \"o.ir.qf\", \"float1\",\n        \"o.ir.qf.float1.q\", \"float_fd:[* TO 50]\",\n        \"o.ir.qf\", \"float2\",\n        \"o.ir.qf.float2.q\", \"float_fd:[* TO 30]\",\n\n        \"o.lr.s.sum\", \"sum(long_ld)\",\n        \"o.lr.s.mean\", \"mean(long_ld)\",\n        \"o.lr.s.median\", \"median(long_ld)\",\n        \"o.lr.s.percentile_8\", \"percentile(8,long_ld)\",\n        \"o.lr.qf\", \"string\",\n        \"o.lr.qf.string.q\", \"string_sd:abc1\",\n        \"o.lr.qf.string.q\", \"string_sd:abc2\",\n        \n        \"o.fr.s.sum\", \"sum(float_fd)\",\n        \"o.fr.s.mean\", \"mean(float_fd)\",\n        \"o.fr.s.median\", \"median(float_fd)\",\n        \"o.fr.s.percentile_8\", \"percentile(8,float_fd)\",\n        \"o.fr.qf\", \"lad\",\n        \"o.fr.qf.lad.q\", \"long_ld:[20 TO *]\",\n        \"o.fr.qf.lad.q\", \"long_ld:[30 TO *]\",\n        \"o.fr.qf.lad.q\", \"double_dd:[* TO 50]\"\n    };\n    \n    NamedList<Object> response = queryLegacyCloudAnalytics(params);\n    String responseStr = response.toString();\n    \n    //Int One\n    ArrayList<Double> int1 = getValueList(response, \"ir\", \"queryFacets\", \"float1\", \"sum\", false);\n    ArrayList<Double> int1Test = calculateFacetedNumberStat(int1TestStart, \"sum\");\n    assertEquals(responseStr, int1, int1Test);\n    //Int Two\n    ArrayList<Integer> int2 = getValueList(response, \"ir\", \"queryFacets\", \"float2\", \"percentile_8\", false);\n    ArrayList<Integer> int2Test = (ArrayList<Integer>)calculateFacetedStat(int2TestStart, \"perc_8\");\n    assertEquals(responseStr, int2, int2Test);\n\n    //Long\n    ArrayList<Double> long1 = getValueList(response, \"lr\", \"queryFacets\", \"string\", \"median\", false);\n    ArrayList<Double> long1Test = calculateFacetedNumberStat(longTestStart, \"median\");\n    assertEquals(responseStr,long1,long1Test);\n\n    //Float\n    ArrayList<Double> float1 = getValueList(response, \"fr\", \"queryFacets\", \"lad\", \"mean\", false);\n    ArrayList<Double> float1Test = calculateFacetedNumberStat(floatTestStart, \"mean\");\n    assertEquals(responseStr, float1, float1Test);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f8061ddd97f3352007d927dae445884a6f3d857b","date":1564988276,"type":3,"author":"Atri Sharma","isMerge":true,"pathNew":"solr/contrib/analytics/src/test/org/apache/solr/analytics/legacy/facet/LegacyQueryFacetCloudTest#queryTest().mjava","pathOld":"solr/contrib/analytics/src/test/org/apache/solr/analytics/legacy/facet/LegacyQueryFacetCloudTest#queryTest().mjava","sourceNew":"  @SuppressWarnings(\"unchecked\")\n  @Test\n  public void queryTest() throws Exception {\n    String[] params = new String[] {\n        \"o.ir.s.sum\", \"sum(int_id)\",\n        \"o.ir.s.mean\", \"mean(int_id)\",\n        \"o.ir.s.median\", \"median(int_id)\",\n        \"o.ir.s.percentile_8\", \"percentile(8,int_id)\",\n        \"o.ir.qf\", \"float1\",\n        \"o.ir.qf.float1.q\", \"float_fd:[* TO 50]\",\n        \"o.ir.qf\", \"float2\",\n        \"o.ir.qf.float2.q\", \"float_fd:[* TO 30]\",\n\n        \"o.lr.s.sum\", \"sum(long_ld)\",\n        \"o.lr.s.mean\", \"mean(long_ld)\",\n        \"o.lr.s.median\", \"median(long_ld)\",\n        \"o.lr.s.percentile_8\", \"percentile(8,long_ld)\",\n        \"o.lr.qf\", \"string\",\n        \"o.lr.qf.string.q\", \"string_sd:abc1\",\n        \"o.lr.qf.string.q\", \"string_sd:abc2\",\n\n        \"o.fr.s.sum\", \"sum(float_fd)\",\n        \"o.fr.s.mean\", \"mean(float_fd)\",\n        \"o.fr.s.median\", \"median(float_fd)\",\n        \"o.fr.s.percentile_8\", \"percentile(8,float_fd)\",\n        \"o.fr.qf\", \"lad\",\n        \"o.fr.qf.lad.q\", \"long_ld:[20 TO *]\",\n        \"o.fr.qf.lad.q\", \"long_ld:[30 TO *]\",\n        \"o.fr.qf.lad.q\", \"double_dd:[* TO 50]\"\n    };\n\n    NamedList<Object> response = queryLegacyCloudAnalytics(params);\n    String responseStr = response.toString();\n\n    //Int One\n    ArrayList<Double> int1 = getValueList(response, \"ir\", \"queryFacets\", \"float1\", \"sum\", false);\n    ArrayList<Double> int1Test = calculateFacetedNumberStat(int1TestStart, \"sum\");\n    assertEquals(responseStr, int1, int1Test);\n    //Int Two\n    ArrayList<Integer> int2 = getValueList(response, \"ir\", \"queryFacets\", \"float2\", \"percentile_8\", false);\n    ArrayList<Integer> int2Test = (ArrayList<Integer>)calculateFacetedStat(int2TestStart, \"perc_8\");\n    assertEquals(responseStr, int2, int2Test);\n\n    //Long\n    ArrayList<Double> long1 = getValueList(response, \"lr\", \"queryFacets\", \"string\", \"median\", false);\n    ArrayList<Double> long1Test = calculateFacetedNumberStat(longTestStart, \"median\");\n    assertEquals(responseStr,long1,long1Test);\n\n    //Float\n    ArrayList<Double> float1 = getValueList(response, \"fr\", \"queryFacets\", \"lad\", \"mean\", false);\n    ArrayList<Double> float1Test = calculateFacetedNumberStat(floatTestStart, \"mean\");\n    assertEquals(responseStr, float1, float1Test);\n  }\n\n","sourceOld":"  @SuppressWarnings(\"unchecked\")\n  @Test\n  public void queryTest() throws Exception { \n    String[] params = new String[] {\n        \"o.ir.s.sum\", \"sum(int_id)\",\n        \"o.ir.s.mean\", \"mean(int_id)\",\n        \"o.ir.s.median\", \"median(int_id)\",\n        \"o.ir.s.percentile_8\", \"percentile(8,int_id)\",\n        \"o.ir.qf\", \"float1\",\n        \"o.ir.qf.float1.q\", \"float_fd:[* TO 50]\",\n        \"o.ir.qf\", \"float2\",\n        \"o.ir.qf.float2.q\", \"float_fd:[* TO 30]\",\n\n        \"o.lr.s.sum\", \"sum(long_ld)\",\n        \"o.lr.s.mean\", \"mean(long_ld)\",\n        \"o.lr.s.median\", \"median(long_ld)\",\n        \"o.lr.s.percentile_8\", \"percentile(8,long_ld)\",\n        \"o.lr.qf\", \"string\",\n        \"o.lr.qf.string.q\", \"string_sd:abc1\",\n        \"o.lr.qf.string.q\", \"string_sd:abc2\",\n        \n        \"o.fr.s.sum\", \"sum(float_fd)\",\n        \"o.fr.s.mean\", \"mean(float_fd)\",\n        \"o.fr.s.median\", \"median(float_fd)\",\n        \"o.fr.s.percentile_8\", \"percentile(8,float_fd)\",\n        \"o.fr.qf\", \"lad\",\n        \"o.fr.qf.lad.q\", \"long_ld:[20 TO *]\",\n        \"o.fr.qf.lad.q\", \"long_ld:[30 TO *]\",\n        \"o.fr.qf.lad.q\", \"double_dd:[* TO 50]\"\n    };\n    \n    NamedList<Object> response = queryLegacyCloudAnalytics(params);\n    String responseStr = response.toString();\n    \n    //Int One\n    ArrayList<Double> int1 = getValueList(response, \"ir\", \"queryFacets\", \"float1\", \"sum\", false);\n    ArrayList<Double> int1Test = calculateFacetedNumberStat(int1TestStart, \"sum\");\n    assertEquals(responseStr, int1, int1Test);\n    //Int Two\n    ArrayList<Integer> int2 = getValueList(response, \"ir\", \"queryFacets\", \"float2\", \"percentile_8\", false);\n    ArrayList<Integer> int2Test = (ArrayList<Integer>)calculateFacetedStat(int2TestStart, \"perc_8\");\n    assertEquals(responseStr, int2, int2Test);\n\n    //Long\n    ArrayList<Double> long1 = getValueList(response, \"lr\", \"queryFacets\", \"string\", \"median\", false);\n    ArrayList<Double> long1Test = calculateFacetedNumberStat(longTestStart, \"median\");\n    assertEquals(responseStr,long1,long1Test);\n\n    //Float\n    ArrayList<Double> float1 = getValueList(response, \"fr\", \"queryFacets\", \"lad\", \"mean\", false);\n    ArrayList<Double> float1Test = calculateFacetedNumberStat(floatTestStart, \"mean\");\n    assertEquals(responseStr, float1, float1Test);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1e4e64b7199d2f2a17be7f3926c7532553910dce":["3bd4c6955956e76c96eb12dfe64108ed03522983"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f8061ddd97f3352007d927dae445884a6f3d857b":["3bd4c6955956e76c96eb12dfe64108ed03522983","1e4e64b7199d2f2a17be7f3926c7532553910dce"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1e4e64b7199d2f2a17be7f3926c7532553910dce"],"3bd4c6955956e76c96eb12dfe64108ed03522983":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"1e4e64b7199d2f2a17be7f3926c7532553910dce":["f8061ddd97f3352007d927dae445884a6f3d857b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3bd4c6955956e76c96eb12dfe64108ed03522983"],"f8061ddd97f3352007d927dae445884a6f3d857b":[],"3bd4c6955956e76c96eb12dfe64108ed03522983":["1e4e64b7199d2f2a17be7f3926c7532553910dce","f8061ddd97f3352007d927dae445884a6f3d857b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["f8061ddd97f3352007d927dae445884a6f3d857b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}