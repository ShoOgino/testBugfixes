{"path":"src/java/org/apache/lucene/search/MultiPhraseQuery#equals(Object).mjava","commits":[{"id":"56911cabe824c80175960a9b1d0bc687269bc801","date":1135310586,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/MultiPhraseQuery#equals(Object).mjava","pathOld":"/dev/null","sourceNew":"  /** Returns true if <code>o</code> is equal to this. */\n  public boolean equals(Object o) {\n    if (!(o instanceof MultiPhraseQuery)) return false;\n    MultiPhraseQuery other = (MultiPhraseQuery)o;\n    return this.getBoost() == other.getBoost()\n      && this.slop == other.slop\n      && this.termArrays.equals(other.termArrays)\n      && this.positions.equals(other.positions);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["7757c08ec94a8148b09e422e72ff266b9a7dd4bc"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7757c08ec94a8148b09e422e72ff266b9a7dd4bc","date":1223667919,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/MultiPhraseQuery#equals(Object).mjava","pathOld":"src/java/org/apache/lucene/search/MultiPhraseQuery#equals(Object).mjava","sourceNew":"  /** Returns true if <code>o</code> is equal to this. */\n  public boolean equals(Object o) {\n    if (!(o instanceof MultiPhraseQuery)) return false;\n    MultiPhraseQuery other = (MultiPhraseQuery)o;\n    return this.getBoost() == other.getBoost()\n      && this.slop == other.slop\n      && termArraysEquals(this.termArrays, other.termArrays)\n      && this.positions.equals(other.positions);\n  }\n\n","sourceOld":"  /** Returns true if <code>o</code> is equal to this. */\n  public boolean equals(Object o) {\n    if (!(o instanceof MultiPhraseQuery)) return false;\n    MultiPhraseQuery other = (MultiPhraseQuery)o;\n    return this.getBoost() == other.getBoost()\n      && this.slop == other.slop\n      && this.termArrays.equals(other.termArrays)\n      && this.positions.equals(other.positions);\n  }\n\n","bugFix":["56911cabe824c80175960a9b1d0bc687269bc801"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"486cfd5a3f7481938475c113415d896f7a74a4a9","date":1256682581,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/MultiPhraseQuery#equals(Object).mjava","pathOld":"src/java/org/apache/lucene/search/MultiPhraseQuery#equals(Object).mjava","sourceNew":"  /** Returns true if <code>o</code> is equal to this. */\n  @Override\n  public boolean equals(Object o) {\n    if (!(o instanceof MultiPhraseQuery)) return false;\n    MultiPhraseQuery other = (MultiPhraseQuery)o;\n    return this.getBoost() == other.getBoost()\n      && this.slop == other.slop\n      && termArraysEquals(this.termArrays, other.termArrays)\n      && this.positions.equals(other.positions);\n  }\n\n","sourceOld":"  /** Returns true if <code>o</code> is equal to this. */\n  public boolean equals(Object o) {\n    if (!(o instanceof MultiPhraseQuery)) return false;\n    MultiPhraseQuery other = (MultiPhraseQuery)o;\n    return this.getBoost() == other.getBoost()\n      && this.slop == other.slop\n      && termArraysEquals(this.termArrays, other.termArrays)\n      && this.positions.equals(other.positions);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/MultiPhraseQuery#equals(Object).mjava","pathOld":"src/java/org/apache/lucene/search/MultiPhraseQuery#equals(Object).mjava","sourceNew":"  /** Returns true if <code>o</code> is equal to this. */\n  @Override\n  public boolean equals(Object o) {\n    if (!(o instanceof MultiPhraseQuery)) return false;\n    MultiPhraseQuery other = (MultiPhraseQuery)o;\n    return this.getBoost() == other.getBoost()\n      && this.slop == other.slop\n      && termArraysEquals(this.termArrays, other.termArrays)\n      && this.positions.equals(other.positions);\n  }\n\n","sourceOld":"  /** Returns true if <code>o</code> is equal to this. */\n  @Override\n  public boolean equals(Object o) {\n    if (!(o instanceof MultiPhraseQuery)) return false;\n    MultiPhraseQuery other = (MultiPhraseQuery)o;\n    return this.getBoost() == other.getBoost()\n      && this.slop == other.slop\n      && termArraysEquals(this.termArrays, other.termArrays)\n      && this.positions.equals(other.positions);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"486cfd5a3f7481938475c113415d896f7a74a4a9":["7757c08ec94a8148b09e422e72ff266b9a7dd4bc"],"7757c08ec94a8148b09e422e72ff266b9a7dd4bc":["56911cabe824c80175960a9b1d0bc687269bc801"],"56911cabe824c80175960a9b1d0bc687269bc801":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["486cfd5a3f7481938475c113415d896f7a74a4a9"]},"commit2Childs":{"486cfd5a3f7481938475c113415d896f7a74a4a9":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"7757c08ec94a8148b09e422e72ff266b9a7dd4bc":["486cfd5a3f7481938475c113415d896f7a74a4a9"],"56911cabe824c80175960a9b1d0bc687269bc801":["7757c08ec94a8148b09e422e72ff266b9a7dd4bc"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["56911cabe824c80175960a9b1d0bc687269bc801"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}