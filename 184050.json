{"path":"lucene/suggest/src/java/org/apache/lucene/search/suggest/FileDictionary.FileIterator#next().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/FileDictionary.FileIterator#next().mjava","pathOld":"modules/suggest/src/java/org/apache/lucene/search/suggest/FileDictionary.FileIterator#next().mjava","sourceNew":"    @Override\n    public BytesRef next() throws IOException {\n      if (done) {\n        return null;\n      }\n      line = in.readLine();\n      if (line != null) {\n        String[] fields = line.split(\"\\t\");\n        if (fields.length > 1) {\n          // keep reading floats for bw compat\n          try {\n            curFreq = Long.parseLong(fields[1]);\n          } catch (NumberFormatException e) {\n            curFreq = (long)Double.parseDouble(fields[1]);\n          }\n          spare.copyChars(fields[0]);\n        } else {\n          spare.copyChars(line);\n          curFreq = 1;\n        }\n        return spare;\n      } else {\n        done = true;\n        IOUtils.close(in);\n        return null;\n      }\n    }\n\n","sourceOld":"    @Override\n    public BytesRef next() throws IOException {\n      if (done) {\n        return null;\n      }\n      line = in.readLine();\n      if (line != null) {\n        String[] fields = line.split(\"\\t\");\n        if (fields.length > 1) {\n          // keep reading floats for bw compat\n          try {\n            curFreq = Long.parseLong(fields[1]);\n          } catch (NumberFormatException e) {\n            curFreq = (long)Double.parseDouble(fields[1]);\n          }\n          spare.copyChars(fields[0]);\n        } else {\n          spare.copyChars(line);\n          curFreq = 1;\n        }\n        return spare;\n      } else {\n        done = true;\n        IOUtils.close(in);\n        return null;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1ec8cb0daeb794c3ff1be45d2ed2d71ddae8e19b","date":1384304197,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/FileDictionary.FileIterator#next().mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/FileDictionary.FileIterator#next().mjava","sourceNew":"    @Override\n    public BytesRef next() throws IOException {\n      if (done) {\n        return null;\n      }\n      if (isFirstLine) {\n        isFirstLine = false;\n        return spare;\n      }\n      line = in.readLine();\n      if (line != null) {\n        String[] fields = line.split(fieldDelimiter);\n        if (fields.length > 3) {\n          throw new IllegalArgumentException(\"More than 3 fields in one line\");\n        } else if (fields.length == 3) { // term, weight and payload\n          spare.copyChars(fields[0]);\n          readWeight(fields[1]);\n          if (hasPayloads) {\n            curPayload.copyChars(fields[2]);\n          }\n        } else if (fields.length == 2) { // term, weight\n          spare.copyChars(fields[0]);\n          readWeight(fields[1]);\n          if (hasPayloads) { // have an empty payload\n            curPayload = new BytesRef();\n          }\n        } else { // only term\n          spare.copyChars(fields[0]);\n          curWeight = 1;\n          if (hasPayloads) {\n            curPayload = new BytesRef();\n          }\n        }\n        return spare;\n      } else {\n        done = true;\n        IOUtils.close(in);\n        return null;\n      }\n    }\n\n","sourceOld":"    @Override\n    public BytesRef next() throws IOException {\n      if (done) {\n        return null;\n      }\n      line = in.readLine();\n      if (line != null) {\n        String[] fields = line.split(\"\\t\");\n        if (fields.length > 1) {\n          // keep reading floats for bw compat\n          try {\n            curFreq = Long.parseLong(fields[1]);\n          } catch (NumberFormatException e) {\n            curFreq = (long)Double.parseDouble(fields[1]);\n          }\n          spare.copyChars(fields[0]);\n        } else {\n          spare.copyChars(line);\n          curFreq = 1;\n        }\n        return spare;\n      } else {\n        done = true;\n        IOUtils.close(in);\n        return null;\n      }\n    }\n\n","bugFix":null,"bugIntro":["7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50","date":1407854805,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/FileDictionary.FileIterator#next().mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/FileDictionary.FileIterator#next().mjava","sourceNew":"    @Override\n    public BytesRef next() throws IOException {\n      if (done) {\n        return null;\n      }\n      if (isFirstLine) {\n        isFirstLine = false;\n        return spare.get();\n      }\n      line = in.readLine();\n      if (line != null) {\n        String[] fields = line.split(fieldDelimiter);\n        if (fields.length > 3) {\n          throw new IllegalArgumentException(\"More than 3 fields in one line\");\n        } else if (fields.length == 3) { // term, weight and payload\n          spare.copyChars(fields[0]);\n          readWeight(fields[1]);\n          if (hasPayloads) {\n            curPayload.copyChars(fields[2]);\n          }\n        } else if (fields.length == 2) { // term, weight\n          spare.copyChars(fields[0]);\n          readWeight(fields[1]);\n          if (hasPayloads) { // have an empty payload\n            curPayload = new BytesRefBuilder();\n          }\n        } else { // only term\n          spare.copyChars(fields[0]);\n          curWeight = 1;\n          if (hasPayloads) {\n            curPayload = new BytesRefBuilder();\n          }\n        }\n        return spare.get();\n      } else {\n        done = true;\n        IOUtils.close(in);\n        return null;\n      }\n    }\n\n","sourceOld":"    @Override\n    public BytesRef next() throws IOException {\n      if (done) {\n        return null;\n      }\n      if (isFirstLine) {\n        isFirstLine = false;\n        return spare;\n      }\n      line = in.readLine();\n      if (line != null) {\n        String[] fields = line.split(fieldDelimiter);\n        if (fields.length > 3) {\n          throw new IllegalArgumentException(\"More than 3 fields in one line\");\n        } else if (fields.length == 3) { // term, weight and payload\n          spare.copyChars(fields[0]);\n          readWeight(fields[1]);\n          if (hasPayloads) {\n            curPayload.copyChars(fields[2]);\n          }\n        } else if (fields.length == 2) { // term, weight\n          spare.copyChars(fields[0]);\n          readWeight(fields[1]);\n          if (hasPayloads) { // have an empty payload\n            curPayload = new BytesRef();\n          }\n        } else { // only term\n          spare.copyChars(fields[0]);\n          curWeight = 1;\n          if (hasPayloads) {\n            curPayload = new BytesRef();\n          }\n        }\n        return spare;\n      } else {\n        done = true;\n        IOUtils.close(in);\n        return null;\n      }\n    }\n\n","bugFix":["d334a3e8e6b94298d8cf2802a403a096c06f0b92","1ec8cb0daeb794c3ff1be45d2ed2d71ddae8e19b"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50":["1ec8cb0daeb794c3ff1be45d2ed2d71ddae8e19b"],"1ec8cb0daeb794c3ff1be45d2ed2d71ddae8e19b":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["1ec8cb0daeb794c3ff1be45d2ed2d71ddae8e19b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"1ec8cb0daeb794c3ff1be45d2ed2d71ddae8e19b":["7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}