{"path":"lucene/core/src/java/org/apache/lucene/codecs/block/ForUtil#getHeader(int,int).mjava","commits":[{"id":"7250f5f8fbbaeebf817404fb2b3ce3b26161d5df","date":1343686506,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/block/ForUtil#getHeader(int,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/pfor/ForUtil#getHeader(int,int).mjava","sourceNew":"  /** \n   * Generate the 4 byte header, which contains (from lsb to msb):\n   *\n   * 8 bits for encoded block int size (excluded header, this limits DEFAULT_BLOCK_SIZE <= 2^8)\n   * 6 bits for num of frame bits (when 0, values in this block are all the same)\n   * other bits unused\n   *\n   */\n  static int getHeader(int encodedSize, int numBits) {\n    return  (encodedSize)\n          | ((numBits) << 8);\n  }\n\n","sourceOld":"  /** \n   * Generate the 4 byte header, which contains (from lsb to msb):\n   *\n   * 8 bits for encoded block int size (excluded header, this limits DEFAULT_BLOCK_SIZE <= 2^8)\n   * 6 bits for num of frame bits (when 0, values in this block are all the same)\n   * other bits unused\n   *\n   */\n  static int getHeader(int encodedSize, int numBits) {\n    return  (encodedSize)\n          | ((numBits) << 8);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8081d5018e8846bf4080f2809432c759996e749f","date":1344206372,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/block/ForUtil#getHeader(int,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/block/ForUtil#getHeader(int,int).mjava","sourceNew":"  /** \n   * Generate the 4 byte header, which contains (from lsb to msb):\n   *\n   * 6 bits for num of frame bits (when 0, values in this block are all the same)\n   * other bits for encoded block int size (excluded header), so we can use crazy block size\n   *\n   */\n  static int getHeader(int encodedSize, int numBits) {\n    return numBits | (encodedSize << 6);\n  }\n\n","sourceOld":"  /** \n   * Generate the 4 byte header, which contains (from lsb to msb):\n   *\n   * 8 bits for encoded block int size (excluded header, this limits DEFAULT_BLOCK_SIZE <= 2^8)\n   * 6 bits for num of frame bits (when 0, values in this block are all the same)\n   * other bits unused\n   *\n   */\n  static int getHeader(int encodedSize, int numBits) {\n    return  (encodedSize)\n          | ((numBits) << 8);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1b26a6a87f8d4abff54e2d160286e34f9418075b","date":1344342307,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/block/ForUtil#getHeader(int,int).mjava","sourceNew":null,"sourceOld":"  /** \n   * Generate the 4 byte header, which contains (from lsb to msb):\n   *\n   * 6 bits for num of frame bits (when 0, values in this block are all the same)\n   * other bits for encoded block int size (excluded header), so we can use crazy block size\n   *\n   */\n  static int getHeader(int encodedSize, int numBits) {\n    return numBits | (encodedSize << 6);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7250f5f8fbbaeebf817404fb2b3ce3b26161d5df":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1b26a6a87f8d4abff54e2d160286e34f9418075b":["8081d5018e8846bf4080f2809432c759996e749f"],"8081d5018e8846bf4080f2809432c759996e749f":["7250f5f8fbbaeebf817404fb2b3ce3b26161d5df"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"7250f5f8fbbaeebf817404fb2b3ce3b26161d5df":["8081d5018e8846bf4080f2809432c759996e749f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7250f5f8fbbaeebf817404fb2b3ce3b26161d5df","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"1b26a6a87f8d4abff54e2d160286e34f9418075b":[],"8081d5018e8846bf4080f2809432c759996e749f":["1b26a6a87f8d4abff54e2d160286e34f9418075b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["1b26a6a87f8d4abff54e2d160286e34f9418075b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}