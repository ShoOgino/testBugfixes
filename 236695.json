{"path":"lucene/codecs/src/java/org/apache/lucene/codecs/uniformsplit/FSTDictionary#read(DataInput,BlockDecoder).mjava","commits":[{"id":"09dfa411e0e1bbfad83c3e6629cf1fe24a7aed89","date":1567784912,"type":0,"author":"David Smiley","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/uniformsplit/FSTDictionary#read(DataInput,BlockDecoder).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Reads a {@link FSTDictionary} from the provided input.\n   * @param blockDecoder The {@link BlockDecoder} to use for specific decoding; or null if none.\n   */\n  protected static FSTDictionary read(DataInput input, BlockDecoder blockDecoder) throws IOException {\n    DataInput fstDataInput;\n    if (blockDecoder == null) {\n      fstDataInput = input;\n    } else {\n      long numBytes = input.readVLong();\n      BytesRef decodedBytes = blockDecoder.decode(input, numBytes);\n      fstDataInput = new ByteArrayDataInput(decodedBytes.bytes, 0, decodedBytes.length);\n    }\n    PositiveIntOutputs fstOutputs = PositiveIntOutputs.getSingleton();\n    FST<Long> dictionary = new FST<>(fstDataInput, fstOutputs);\n    return new FSTDictionary(dictionary);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"97ee06ea0335fd2077527d81c4c993c86e06f0da","date":1583768142,"type":5,"author":"Bruno Roustant","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/uniformsplit/FSTDictionary#read(DataInput,BlockDecoder,boolean).mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/uniformsplit/FSTDictionary#read(DataInput,BlockDecoder).mjava","sourceNew":"  /**\n   * Reads a {@link FSTDictionary} from the provided input.\n   * @param blockDecoder The {@link BlockDecoder} to use for specific decoding; or null if none.\n   */\n  protected static FSTDictionary read(DataInput input, BlockDecoder blockDecoder, boolean isFSTOnHeap) throws IOException {\n    DataInput fstDataInput;\n    if (blockDecoder == null) {\n      fstDataInput = input;\n    } else {\n      long numBytes = input.readVLong();\n      BytesRef decodedBytes = blockDecoder.decode(input, numBytes);\n      fstDataInput = new ByteArrayDataInput(decodedBytes.bytes, 0, decodedBytes.length);\n      // OffHeapFSTStore.init() requires a DataInput which is an instance of IndexInput.\n      // When the block is decoded we must load the FST on heap.\n      isFSTOnHeap = true;\n    }\n    PositiveIntOutputs fstOutputs = PositiveIntOutputs.getSingleton();\n    FST<Long> fst = isFSTOnHeap ? new FST<>(fstDataInput, fstOutputs)\n        : new FST<>(fstDataInput, fstOutputs, new OffHeapFSTStore());\n    return new FSTDictionary(fst);\n  }\n\n","sourceOld":"  /**\n   * Reads a {@link FSTDictionary} from the provided input.\n   * @param blockDecoder The {@link BlockDecoder} to use for specific decoding; or null if none.\n   */\n  protected static FSTDictionary read(DataInput input, BlockDecoder blockDecoder) throws IOException {\n    DataInput fstDataInput;\n    if (blockDecoder == null) {\n      fstDataInput = input;\n    } else {\n      long numBytes = input.readVLong();\n      BytesRef decodedBytes = blockDecoder.decode(input, numBytes);\n      fstDataInput = new ByteArrayDataInput(decodedBytes.bytes, 0, decodedBytes.length);\n    }\n    PositiveIntOutputs fstOutputs = PositiveIntOutputs.getSingleton();\n    FST<Long> dictionary = new FST<>(fstDataInput, fstOutputs);\n    return new FSTDictionary(dictionary);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"97ee06ea0335fd2077527d81c4c993c86e06f0da":["09dfa411e0e1bbfad83c3e6629cf1fe24a7aed89"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"09dfa411e0e1bbfad83c3e6629cf1fe24a7aed89":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["97ee06ea0335fd2077527d81c4c993c86e06f0da"]},"commit2Childs":{"97ee06ea0335fd2077527d81c4c993c86e06f0da":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["09dfa411e0e1bbfad83c3e6629cf1fe24a7aed89"],"09dfa411e0e1bbfad83c3e6629cf1fe24a7aed89":["97ee06ea0335fd2077527d81c4c993c86e06f0da"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}