{"path":"solr/core/src/test/org/apache/solr/uninverting/TestFieldCacheSort#testEmptyStringVsNullStringSort().mjava","commits":[{"id":"a076c3c721f685b7559308fdc2cd72d91bba67e5","date":1464168992,"type":1,"author":"Mike McCandless","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/uninverting/TestFieldCacheSort#testEmptyStringVsNullStringSort().mjava","pathOld":"lucene/misc/src/test/org/apache/lucene/uninverting/TestFieldCacheSort#testEmptyStringVsNullStringSort().mjava","sourceNew":"  public void testEmptyStringVsNullStringSort() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random())));\n    Document doc = new Document();\n    doc.add(newStringField(\"f\", \"\", Field.Store.NO));\n    doc.add(newStringField(\"t\", \"1\", Field.Store.NO));\n    w.addDocument(doc);\n    w.commit();\n    doc = new Document();\n    doc.add(newStringField(\"t\", \"1\", Field.Store.NO));\n    w.addDocument(doc);\n\n    IndexReader r = UninvertingReader.wrap(DirectoryReader.open(w), \n                    Collections.singletonMap(\"f\", Type.SORTED));\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    TopDocs hits = s.search(new TermQuery(new Term(\"t\", \"1\")), 10, new Sort(new SortField(\"f\", SortField.Type.STRING)));\n    assertEquals(2, hits.totalHits);\n    // null sorts first\n    assertEquals(1, hits.scoreDocs[0].doc);\n    assertEquals(0, hits.scoreDocs[1].doc);\n    TestUtil.checkReader(r);\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testEmptyStringVsNullStringSort() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random())));\n    Document doc = new Document();\n    doc.add(newStringField(\"f\", \"\", Field.Store.NO));\n    doc.add(newStringField(\"t\", \"1\", Field.Store.NO));\n    w.addDocument(doc);\n    w.commit();\n    doc = new Document();\n    doc.add(newStringField(\"t\", \"1\", Field.Store.NO));\n    w.addDocument(doc);\n\n    IndexReader r = UninvertingReader.wrap(DirectoryReader.open(w), \n                    Collections.singletonMap(\"f\", Type.SORTED));\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    TopDocs hits = s.search(new TermQuery(new Term(\"t\", \"1\")), 10, new Sort(new SortField(\"f\", SortField.Type.STRING)));\n    assertEquals(2, hits.totalHits);\n    // null sorts first\n    assertEquals(1, hits.scoreDocs[0].doc);\n    assertEquals(0, hits.scoreDocs[1].doc);\n    TestUtil.checkReader(r);\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0e121d43b5a10f2df530f406f935102656e9c4e8","date":1464198131,"type":1,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/uninverting/TestFieldCacheSort#testEmptyStringVsNullStringSort().mjava","pathOld":"lucene/misc/src/test/org/apache/lucene/uninverting/TestFieldCacheSort#testEmptyStringVsNullStringSort().mjava","sourceNew":"  public void testEmptyStringVsNullStringSort() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random())));\n    Document doc = new Document();\n    doc.add(newStringField(\"f\", \"\", Field.Store.NO));\n    doc.add(newStringField(\"t\", \"1\", Field.Store.NO));\n    w.addDocument(doc);\n    w.commit();\n    doc = new Document();\n    doc.add(newStringField(\"t\", \"1\", Field.Store.NO));\n    w.addDocument(doc);\n\n    IndexReader r = UninvertingReader.wrap(DirectoryReader.open(w), \n                    Collections.singletonMap(\"f\", Type.SORTED));\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    TopDocs hits = s.search(new TermQuery(new Term(\"t\", \"1\")), 10, new Sort(new SortField(\"f\", SortField.Type.STRING)));\n    assertEquals(2, hits.totalHits);\n    // null sorts first\n    assertEquals(1, hits.scoreDocs[0].doc);\n    assertEquals(0, hits.scoreDocs[1].doc);\n    TestUtil.checkReader(r);\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testEmptyStringVsNullStringSort() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random())));\n    Document doc = new Document();\n    doc.add(newStringField(\"f\", \"\", Field.Store.NO));\n    doc.add(newStringField(\"t\", \"1\", Field.Store.NO));\n    w.addDocument(doc);\n    w.commit();\n    doc = new Document();\n    doc.add(newStringField(\"t\", \"1\", Field.Store.NO));\n    w.addDocument(doc);\n\n    IndexReader r = UninvertingReader.wrap(DirectoryReader.open(w), \n                    Collections.singletonMap(\"f\", Type.SORTED));\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    TopDocs hits = s.search(new TermQuery(new Term(\"t\", \"1\")), 10, new Sort(new SortField(\"f\", SortField.Type.STRING)));\n    assertEquals(2, hits.totalHits);\n    // null sorts first\n    assertEquals(1, hits.scoreDocs[0].doc);\n    assertEquals(0, hits.scoreDocs[1].doc);\n    TestUtil.checkReader(r);\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"83870855d82aba6819217abeff5a40779dbb28b4","date":1464291012,"type":1,"author":"Mike McCandless","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/uninverting/TestFieldCacheSort#testEmptyStringVsNullStringSort().mjava","pathOld":"lucene/misc/src/test/org/apache/lucene/uninverting/TestFieldCacheSort#testEmptyStringVsNullStringSort().mjava","sourceNew":"  public void testEmptyStringVsNullStringSort() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random())));\n    Document doc = new Document();\n    doc.add(newStringField(\"f\", \"\", Field.Store.NO));\n    doc.add(newStringField(\"t\", \"1\", Field.Store.NO));\n    w.addDocument(doc);\n    w.commit();\n    doc = new Document();\n    doc.add(newStringField(\"t\", \"1\", Field.Store.NO));\n    w.addDocument(doc);\n\n    IndexReader r = UninvertingReader.wrap(DirectoryReader.open(w), \n                    Collections.singletonMap(\"f\", Type.SORTED));\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    TopDocs hits = s.search(new TermQuery(new Term(\"t\", \"1\")), 10, new Sort(new SortField(\"f\", SortField.Type.STRING)));\n    assertEquals(2, hits.totalHits);\n    // null sorts first\n    assertEquals(1, hits.scoreDocs[0].doc);\n    assertEquals(0, hits.scoreDocs[1].doc);\n    TestUtil.checkReader(r);\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testEmptyStringVsNullStringSort() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random())));\n    Document doc = new Document();\n    doc.add(newStringField(\"f\", \"\", Field.Store.NO));\n    doc.add(newStringField(\"t\", \"1\", Field.Store.NO));\n    w.addDocument(doc);\n    w.commit();\n    doc = new Document();\n    doc.add(newStringField(\"t\", \"1\", Field.Store.NO));\n    w.addDocument(doc);\n\n    IndexReader r = UninvertingReader.wrap(DirectoryReader.open(w), \n                    Collections.singletonMap(\"f\", Type.SORTED));\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    TopDocs hits = s.search(new TermQuery(new Term(\"t\", \"1\")), 10, new Sort(new SortField(\"f\", SortField.Type.STRING)));\n    assertEquals(2, hits.totalHits);\n    // null sorts first\n    assertEquals(1, hits.scoreDocs[0].doc);\n    assertEquals(0, hits.scoreDocs[1].doc);\n    TestUtil.checkReader(r);\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":1,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/uninverting/TestFieldCacheSort#testEmptyStringVsNullStringSort().mjava","pathOld":"lucene/misc/src/test/org/apache/lucene/uninverting/TestFieldCacheSort#testEmptyStringVsNullStringSort().mjava","sourceNew":"  public void testEmptyStringVsNullStringSort() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random())));\n    Document doc = new Document();\n    doc.add(newStringField(\"f\", \"\", Field.Store.NO));\n    doc.add(newStringField(\"t\", \"1\", Field.Store.NO));\n    w.addDocument(doc);\n    w.commit();\n    doc = new Document();\n    doc.add(newStringField(\"t\", \"1\", Field.Store.NO));\n    w.addDocument(doc);\n\n    IndexReader r = UninvertingReader.wrap(DirectoryReader.open(w), \n                    Collections.singletonMap(\"f\", Type.SORTED));\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    TopDocs hits = s.search(new TermQuery(new Term(\"t\", \"1\")), 10, new Sort(new SortField(\"f\", SortField.Type.STRING)));\n    assertEquals(2, hits.totalHits);\n    // null sorts first\n    assertEquals(1, hits.scoreDocs[0].doc);\n    assertEquals(0, hits.scoreDocs[1].doc);\n    TestUtil.checkReader(r);\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testEmptyStringVsNullStringSort() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random())));\n    Document doc = new Document();\n    doc.add(newStringField(\"f\", \"\", Field.Store.NO));\n    doc.add(newStringField(\"t\", \"1\", Field.Store.NO));\n    w.addDocument(doc);\n    w.commit();\n    doc = new Document();\n    doc.add(newStringField(\"t\", \"1\", Field.Store.NO));\n    w.addDocument(doc);\n\n    IndexReader r = UninvertingReader.wrap(DirectoryReader.open(w), \n                    Collections.singletonMap(\"f\", Type.SORTED));\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    TopDocs hits = s.search(new TermQuery(new Term(\"t\", \"1\")), 10, new Sort(new SortField(\"f\", SortField.Type.STRING)));\n    assertEquals(2, hits.totalHits);\n    // null sorts first\n    assertEquals(1, hits.scoreDocs[0].doc);\n    assertEquals(0, hits.scoreDocs[1].doc);\n    TestUtil.checkReader(r);\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"83788ad129a5154d5c6562c4e8ce3db48793aada","date":1532961485,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/uninverting/TestFieldCacheSort#testEmptyStringVsNullStringSort().mjava","pathOld":"solr/core/src/test/org/apache/solr/uninverting/TestFieldCacheSort#testEmptyStringVsNullStringSort().mjava","sourceNew":"  public void testEmptyStringVsNullStringSort() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random())));\n    Document doc = new Document();\n    doc.add(newStringField(\"f\", \"\", Field.Store.NO));\n    doc.add(newStringField(\"t\", \"1\", Field.Store.NO));\n    w.addDocument(doc);\n    w.commit();\n    doc = new Document();\n    doc.add(newStringField(\"t\", \"1\", Field.Store.NO));\n    w.addDocument(doc);\n\n    IndexReader r = UninvertingReader.wrap(DirectoryReader.open(w), \n                    Collections.singletonMap(\"f\", Type.SORTED));\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    TopDocs hits = s.search(new TermQuery(new Term(\"t\", \"1\")), 10, new Sort(new SortField(\"f\", SortField.Type.STRING)));\n    assertEquals(2, hits.totalHits.value);\n    // null sorts first\n    assertEquals(1, hits.scoreDocs[0].doc);\n    assertEquals(0, hits.scoreDocs[1].doc);\n    TestUtil.checkReader(r);\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testEmptyStringVsNullStringSort() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random())));\n    Document doc = new Document();\n    doc.add(newStringField(\"f\", \"\", Field.Store.NO));\n    doc.add(newStringField(\"t\", \"1\", Field.Store.NO));\n    w.addDocument(doc);\n    w.commit();\n    doc = new Document();\n    doc.add(newStringField(\"t\", \"1\", Field.Store.NO));\n    w.addDocument(doc);\n\n    IndexReader r = UninvertingReader.wrap(DirectoryReader.open(w), \n                    Collections.singletonMap(\"f\", Type.SORTED));\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    TopDocs hits = s.search(new TermQuery(new Term(\"t\", \"1\")), 10, new Sort(new SortField(\"f\", SortField.Type.STRING)));\n    assertEquals(2, hits.totalHits);\n    // null sorts first\n    assertEquals(1, hits.scoreDocs[0].doc);\n    assertEquals(0, hits.scoreDocs[1].doc);\n    TestUtil.checkReader(r);\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a076c3c721f685b7559308fdc2cd72d91bba67e5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"0e121d43b5a10f2df530f406f935102656e9c4e8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a076c3c721f685b7559308fdc2cd72d91bba67e5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"83788ad129a5154d5c6562c4e8ce3db48793aada":["0e121d43b5a10f2df530f406f935102656e9c4e8"],"83870855d82aba6819217abeff5a40779dbb28b4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0e121d43b5a10f2df530f406f935102656e9c4e8"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0e121d43b5a10f2df530f406f935102656e9c4e8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["83788ad129a5154d5c6562c4e8ce3db48793aada"]},"commit2Childs":{"a076c3c721f685b7559308fdc2cd72d91bba67e5":["0e121d43b5a10f2df530f406f935102656e9c4e8"],"0e121d43b5a10f2df530f406f935102656e9c4e8":["83788ad129a5154d5c6562c4e8ce3db48793aada","83870855d82aba6819217abeff5a40779dbb28b4","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a076c3c721f685b7559308fdc2cd72d91bba67e5","0e121d43b5a10f2df530f406f935102656e9c4e8","83870855d82aba6819217abeff5a40779dbb28b4","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"83788ad129a5154d5c6562c4e8ce3db48793aada":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"83870855d82aba6819217abeff5a40779dbb28b4":[],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["83870855d82aba6819217abeff5a40779dbb28b4","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}