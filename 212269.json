{"path":"solr/core/src/java/org/apache/solr/handler/loader/JavabinLoader#handleMultiStream(SolrQueryRequest,SolrQueryResponse,InputStream,UpdateRequestProcessor).mjava","commits":[{"id":"7b6c193737882b94fcb01749c75371bf7d7d4c93","date":1539067480,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/loader/JavabinLoader#handleMultiStream(SolrQueryRequest,SolrQueryResponse,InputStream,UpdateRequestProcessor).mjava","pathOld":"/dev/null","sourceNew":"  private void handleMultiStream(SolrQueryRequest req, SolrQueryResponse rsp, InputStream stream, UpdateRequestProcessor processor)\n      throws IOException {\n    FastInputStream in = FastInputStream.wrap(stream);\n    SolrParams old = req.getParams();\n    new JavaBinCodec() {\n      SolrParams params;\n      AddUpdateCommand addCmd = null;\n\n      @Override\n      public List<Object> readIterator(DataInputInputStream fis) throws IOException {\n        while (true) {\n          Object o = readVal(fis);\n          if (o == END_OBJ) break;\n          if (o instanceof NamedList) {\n            params = ((NamedList) o).toSolrParams();\n          } else {\n            try {\n              if (o instanceof byte[]) {\n                if (params != null) req.setParams(params);\n                byte[] buf = (byte[]) o;\n                contentStreamLoader.load(req, rsp, new ContentStreamBase.ByteArrayStream(buf, null), processor);\n              } else {\n                throw new RuntimeException(\"unsupported type \");\n              }\n            } catch (Exception e) {\n              throw new RuntimeException(e);\n            } finally {\n              params = null;\n              req.setParams(old);\n            }\n          }\n        }\n        return Collections.emptyList();\n      }\n\n    }.unmarshal(in);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba055e19afc289adcb5bedaf68513793a7254012","date":1591268575,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/loader/JavabinLoader#handleMultiStream(SolrQueryRequest,SolrQueryResponse,InputStream,UpdateRequestProcessor).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/loader/JavabinLoader#handleMultiStream(SolrQueryRequest,SolrQueryResponse,InputStream,UpdateRequestProcessor).mjava","sourceNew":"  private void handleMultiStream(SolrQueryRequest req, SolrQueryResponse rsp, InputStream stream, UpdateRequestProcessor processor)\n      throws IOException {\n    FastInputStream in = FastInputStream.wrap(stream);\n    SolrParams old = req.getParams();\n    try (JavaBinCodec jbc = new JavaBinCodec() {\n      SolrParams params;\n      AddUpdateCommand addCmd = null;\n\n      @Override\n      public List<Object> readIterator(DataInputInputStream fis) throws IOException {\n        while (true) {\n          Object o = readVal(fis);\n          if (o == END_OBJ) break;\n          if (o instanceof NamedList) {\n            params = ((NamedList) o).toSolrParams();\n          } else {\n            try {\n              if (o instanceof byte[]) {\n                if (params != null) req.setParams(params);\n                byte[] buf = (byte[]) o;\n                contentStreamLoader.load(req, rsp, new ContentStreamBase.ByteArrayStream(buf, null), processor);\n              } else {\n                throw new RuntimeException(\"unsupported type \");\n              }\n            } catch (Exception e) {\n              throw new RuntimeException(e);\n            } finally {\n              params = null;\n              req.setParams(old);\n            }\n          }\n        }\n        return Collections.emptyList();\n      }\n\n    }) {\n      jbc.unmarshal(in);\n    }\n  }\n\n","sourceOld":"  private void handleMultiStream(SolrQueryRequest req, SolrQueryResponse rsp, InputStream stream, UpdateRequestProcessor processor)\n      throws IOException {\n    FastInputStream in = FastInputStream.wrap(stream);\n    SolrParams old = req.getParams();\n    new JavaBinCodec() {\n      SolrParams params;\n      AddUpdateCommand addCmd = null;\n\n      @Override\n      public List<Object> readIterator(DataInputInputStream fis) throws IOException {\n        while (true) {\n          Object o = readVal(fis);\n          if (o == END_OBJ) break;\n          if (o instanceof NamedList) {\n            params = ((NamedList) o).toSolrParams();\n          } else {\n            try {\n              if (o instanceof byte[]) {\n                if (params != null) req.setParams(params);\n                byte[] buf = (byte[]) o;\n                contentStreamLoader.load(req, rsp, new ContentStreamBase.ByteArrayStream(buf, null), processor);\n              } else {\n                throw new RuntimeException(\"unsupported type \");\n              }\n            } catch (Exception e) {\n              throw new RuntimeException(e);\n            } finally {\n              params = null;\n              req.setParams(old);\n            }\n          }\n        }\n        return Collections.emptyList();\n      }\n\n    }.unmarshal(in);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7b6c193737882b94fcb01749c75371bf7d7d4c93":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ba055e19afc289adcb5bedaf68513793a7254012":["7b6c193737882b94fcb01749c75371bf7d7d4c93"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ba055e19afc289adcb5bedaf68513793a7254012"]},"commit2Childs":{"7b6c193737882b94fcb01749c75371bf7d7d4c93":["ba055e19afc289adcb5bedaf68513793a7254012"],"ba055e19afc289adcb5bedaf68513793a7254012":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7b6c193737882b94fcb01749c75371bf7d7d4c93"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}