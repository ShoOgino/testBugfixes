{"path":"contrib/fast-vector-highlighter/src/java/org/apache/lucene/search/vectorhighlight/BaseFragmentsBuilder#createFragments(IndexReader,int,String,FieldFragList,int).mjava","commits":[{"id":"d64148a458eb3ddf4d1bb1f1753cb9af194e1707","date":1247144811,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/fast-vector-highlighter/src/java/org/apache/lucene/search/vectorhighlight/BaseFragmentsBuilder#createFragments(IndexReader,int,String,FieldFragList,int).mjava","pathOld":"/dev/null","sourceNew":"  public String[] createFragments( IndexReader reader, int docId,\n      String fieldName, FieldFragList fieldFragList, int maxNumFragments )\n      throws IOException {\n    if( maxNumFragments < 0 )\n      throw new IllegalArgumentException( \"maxNumFragments(\" + maxNumFragments + \") must be positive number.\" );\n\n    List<WeightedFragInfo> fragInfos = getWeightedFragInfoList( fieldFragList.fragInfos );\n    \n    List<String> fragments = new ArrayList<String>( maxNumFragments );\n    String[] values = getFieldValues( reader, docId, fieldName );\n    StringBuilder buffer = new StringBuilder();\n    int[] nextValueIndex = { 0 };\n    for( int n = 0; n < maxNumFragments && n < fragInfos.size(); n++ ){\n      WeightedFragInfo fragInfo = fragInfos.get( n );\n      fragments.add( makeFragment( buffer, nextValueIndex, values, fragInfo ) );\n    }\n    return fragments.toArray( new String[fragments.size()] );\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["2dfb8d2feedf4f825f9c499838147d0ea9ba5f2d"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b59246f02dc11d9e8265c96d83e4b54052d63ac9","date":1250459811,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"contrib/fast-vector-highlighter/src/java/org/apache/lucene/search/vectorhighlight/BaseFragmentsBuilder#createFragments(IndexReader,int,String,FieldFragList,int).mjava","pathOld":"contrib/fast-vector-highlighter/src/java/org/apache/lucene/search/vectorhighlight/BaseFragmentsBuilder#createFragments(IndexReader,int,String,FieldFragList,int).mjava","sourceNew":"  public String[] createFragments( IndexReader reader, int docId,\n      String fieldName, FieldFragList fieldFragList, int maxNumFragments )\n      throws IOException {\n    if( maxNumFragments < 0 )\n      throw new IllegalArgumentException( \"maxNumFragments(\" + maxNumFragments + \") must be positive number.\" );\n\n    List<WeightedFragInfo> fragInfos = getWeightedFragInfoList( fieldFragList.fragInfos );\n    \n    List<String> fragments = new ArrayList<String>( maxNumFragments );\n    String[] values = getFieldValues( reader, docId, fieldName );\n    if( values.length == 0 ) return null;\n    StringBuilder buffer = new StringBuilder();\n    int[] nextValueIndex = { 0 };\n    for( int n = 0; n < maxNumFragments && n < fragInfos.size(); n++ ){\n      WeightedFragInfo fragInfo = fragInfos.get( n );\n      fragments.add( makeFragment( buffer, nextValueIndex, values, fragInfo ) );\n    }\n    return fragments.toArray( new String[fragments.size()] );\n  }\n\n","sourceOld":"  public String[] createFragments( IndexReader reader, int docId,\n      String fieldName, FieldFragList fieldFragList, int maxNumFragments )\n      throws IOException {\n    if( maxNumFragments < 0 )\n      throw new IllegalArgumentException( \"maxNumFragments(\" + maxNumFragments + \") must be positive number.\" );\n\n    List<WeightedFragInfo> fragInfos = getWeightedFragInfoList( fieldFragList.fragInfos );\n    \n    List<String> fragments = new ArrayList<String>( maxNumFragments );\n    String[] values = getFieldValues( reader, docId, fieldName );\n    StringBuilder buffer = new StringBuilder();\n    int[] nextValueIndex = { 0 };\n    for( int n = 0; n < maxNumFragments && n < fragInfos.size(); n++ ){\n      WeightedFragInfo fragInfo = fragInfos.get( n );\n      fragments.add( makeFragment( buffer, nextValueIndex, values, fragInfo ) );\n    }\n    return fragments.toArray( new String[fragments.size()] );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"2dfb8d2feedf4f825f9c499838147d0ea9ba5f2d","date":1267064671,"type":3,"author":"Koji Sekiguchi","isMerge":false,"pathNew":"contrib/fast-vector-highlighter/src/java/org/apache/lucene/search/vectorhighlight/BaseFragmentsBuilder#createFragments(IndexReader,int,String,FieldFragList,int).mjava","pathOld":"contrib/fast-vector-highlighter/src/java/org/apache/lucene/search/vectorhighlight/BaseFragmentsBuilder#createFragments(IndexReader,int,String,FieldFragList,int).mjava","sourceNew":"  public String[] createFragments( IndexReader reader, int docId,\n      String fieldName, FieldFragList fieldFragList, int maxNumFragments )\n      throws IOException {\n    if( maxNumFragments < 0 )\n      throw new IllegalArgumentException( \"maxNumFragments(\" + maxNumFragments + \") must be positive number.\" );\n\n    List<WeightedFragInfo> fragInfos = getWeightedFragInfoList( fieldFragList.fragInfos );\n    \n    List<String> fragments = new ArrayList<String>( maxNumFragments );\n    Field[] values = getFields( reader, docId, fieldName );\n    if( values.length == 0 ) return null;\n    StringBuilder buffer = new StringBuilder();\n    int[] nextValueIndex = { 0 };\n    for( int n = 0; n < maxNumFragments && n < fragInfos.size(); n++ ){\n      WeightedFragInfo fragInfo = fragInfos.get( n );\n      fragments.add( makeFragment( buffer, nextValueIndex, values, fragInfo ) );\n    }\n    return fragments.toArray( new String[fragments.size()] );\n  }\n\n","sourceOld":"  public String[] createFragments( IndexReader reader, int docId,\n      String fieldName, FieldFragList fieldFragList, int maxNumFragments )\n      throws IOException {\n    if( maxNumFragments < 0 )\n      throw new IllegalArgumentException( \"maxNumFragments(\" + maxNumFragments + \") must be positive number.\" );\n\n    List<WeightedFragInfo> fragInfos = getWeightedFragInfoList( fieldFragList.fragInfos );\n    \n    List<String> fragments = new ArrayList<String>( maxNumFragments );\n    String[] values = getFieldValues( reader, docId, fieldName );\n    if( values.length == 0 ) return null;\n    StringBuilder buffer = new StringBuilder();\n    int[] nextValueIndex = { 0 };\n    for( int n = 0; n < maxNumFragments && n < fragInfos.size(); n++ ){\n      WeightedFragInfo fragInfo = fragInfos.get( n );\n      fragments.add( makeFragment( buffer, nextValueIndex, values, fragInfo ) );\n    }\n    return fragments.toArray( new String[fragments.size()] );\n  }\n\n","bugFix":["d64148a458eb3ddf4d1bb1f1753cb9af194e1707"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/fast-vector-highlighter/src/java/org/apache/lucene/search/vectorhighlight/BaseFragmentsBuilder#createFragments(IndexReader,int,String,FieldFragList,int).mjava","pathOld":"contrib/fast-vector-highlighter/src/java/org/apache/lucene/search/vectorhighlight/BaseFragmentsBuilder#createFragments(IndexReader,int,String,FieldFragList,int).mjava","sourceNew":"  public String[] createFragments( IndexReader reader, int docId,\n      String fieldName, FieldFragList fieldFragList, int maxNumFragments )\n      throws IOException {\n    if( maxNumFragments < 0 )\n      throw new IllegalArgumentException( \"maxNumFragments(\" + maxNumFragments + \") must be positive number.\" );\n\n    List<WeightedFragInfo> fragInfos = getWeightedFragInfoList( fieldFragList.fragInfos );\n    \n    List<String> fragments = new ArrayList<String>( maxNumFragments );\n    Field[] values = getFields( reader, docId, fieldName );\n    if( values.length == 0 ) return null;\n    StringBuilder buffer = new StringBuilder();\n    int[] nextValueIndex = { 0 };\n    for( int n = 0; n < maxNumFragments && n < fragInfos.size(); n++ ){\n      WeightedFragInfo fragInfo = fragInfos.get( n );\n      fragments.add( makeFragment( buffer, nextValueIndex, values, fragInfo ) );\n    }\n    return fragments.toArray( new String[fragments.size()] );\n  }\n\n","sourceOld":"  public String[] createFragments( IndexReader reader, int docId,\n      String fieldName, FieldFragList fieldFragList, int maxNumFragments )\n      throws IOException {\n    if( maxNumFragments < 0 )\n      throw new IllegalArgumentException( \"maxNumFragments(\" + maxNumFragments + \") must be positive number.\" );\n\n    List<WeightedFragInfo> fragInfos = getWeightedFragInfoList( fieldFragList.fragInfos );\n    \n    List<String> fragments = new ArrayList<String>( maxNumFragments );\n    Field[] values = getFields( reader, docId, fieldName );\n    if( values.length == 0 ) return null;\n    StringBuilder buffer = new StringBuilder();\n    int[] nextValueIndex = { 0 };\n    for( int n = 0; n < maxNumFragments && n < fragInfos.size(); n++ ){\n      WeightedFragInfo fragInfo = fragInfos.get( n );\n      fragments.add( makeFragment( buffer, nextValueIndex, values, fragInfo ) );\n    }\n    return fragments.toArray( new String[fragments.size()] );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"2dfb8d2feedf4f825f9c499838147d0ea9ba5f2d":["b59246f02dc11d9e8265c96d83e4b54052d63ac9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b59246f02dc11d9e8265c96d83e4b54052d63ac9":["d64148a458eb3ddf4d1bb1f1753cb9af194e1707"],"d64148a458eb3ddf4d1bb1f1753cb9af194e1707":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["2dfb8d2feedf4f825f9c499838147d0ea9ba5f2d"]},"commit2Childs":{"2dfb8d2feedf4f825f9c499838147d0ea9ba5f2d":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d64148a458eb3ddf4d1bb1f1753cb9af194e1707"],"b59246f02dc11d9e8265c96d83e4b54052d63ac9":["2dfb8d2feedf4f825f9c499838147d0ea9ba5f2d"],"d64148a458eb3ddf4d1bb1f1753cb9af194e1707":["b59246f02dc11d9e8265c96d83e4b54052d63ac9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}