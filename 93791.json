{"path":"lucene/core/src/java/org/apache/lucene/util/bkd/HeapPointWriter#getPackedValueSlice(int).mjava","commits":[{"id":"c2344a1c769566d8c85cffcacc5e55153fa54b86","date":1550661298,"type":0,"author":"iverase","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/bkd/HeapPointWriter#getPackedValueSlice(int).mjava","pathOld":"/dev/null","sourceNew":"  /** Returns a reference, in <code>result</code>, to the byte[] slice holding this value */\n  public PointValue getPackedValueSlice(int index) {\n    assert index < nextWrite : \"nextWrite=\" + (nextWrite) + \" vs index=\" + index;\n    offlinePointValue.setValue(index * packedBytesLength, docIDs[index]);\n    return offlinePointValue;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["537608940e64412ad5ecbc22df70b1553cdeb44f"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"537608940e64412ad5ecbc22df70b1553cdeb44f","date":1551433447,"type":3,"author":"iverase","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/bkd/HeapPointWriter#getPackedValueSlice(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/bkd/HeapPointWriter#getPackedValueSlice(int).mjava","sourceNew":"  /** Returns a reference, in <code>result</code>, to the byte[] slice holding this value */\n  public PointValue getPackedValueSlice(int index) {\n    assert index < nextWrite : \"nextWrite=\" + (nextWrite) + \" vs index=\" + index;\n    pointValue.setValue(index * packedBytesLength, docIDs[index]);\n    return pointValue;\n  }\n\n","sourceOld":"  /** Returns a reference, in <code>result</code>, to the byte[] slice holding this value */\n  public PointValue getPackedValueSlice(int index) {\n    assert index < nextWrite : \"nextWrite=\" + (nextWrite) + \" vs index=\" + index;\n    offlinePointValue.setValue(index * packedBytesLength, docIDs[index]);\n    return offlinePointValue;\n  }\n\n","bugFix":["c2344a1c769566d8c85cffcacc5e55153fa54b86"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7f06758793500ca773d0df1037290e6e404fb33","date":1562230223,"type":3,"author":"Ignacio Vera","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/bkd/HeapPointWriter#getPackedValueSlice(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/bkd/HeapPointWriter#getPackedValueSlice(int).mjava","sourceNew":"  /** Returns a reference, in <code>result</code>, to the byte[] slice holding this value */\n  public PointValue getPackedValueSlice(int index) {\n    assert index < nextWrite : \"nextWrite=\" + (nextWrite) + \" vs index=\" + index;\n    pointValue.setOffset(index * packedBytesDocIDLength);\n    return pointValue;\n  }\n\n","sourceOld":"  /** Returns a reference, in <code>result</code>, to the byte[] slice holding this value */\n  public PointValue getPackedValueSlice(int index) {\n    assert index < nextWrite : \"nextWrite=\" + (nextWrite) + \" vs index=\" + index;\n    pointValue.setValue(index * packedBytesLength, docIDs[index]);\n    return pointValue;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb94bf667d51f9c390c99d97afb36b7caab6b6e9","date":1599548621,"type":3,"author":"Ignacio Vera","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/bkd/HeapPointWriter#getPackedValueSlice(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/bkd/HeapPointWriter#getPackedValueSlice(int).mjava","sourceNew":"  /** Returns a reference, in <code>result</code>, to the byte[] slice holding this value */\n  public PointValue getPackedValueSlice(int index) {\n    assert index < nextWrite : \"nextWrite=\" + (nextWrite) + \" vs index=\" + index;\n    pointValue.setOffset(index * config.bytesPerDoc);\n    return pointValue;\n  }\n\n","sourceOld":"  /** Returns a reference, in <code>result</code>, to the byte[] slice holding this value */\n  public PointValue getPackedValueSlice(int index) {\n    assert index < nextWrite : \"nextWrite=\" + (nextWrite) + \" vs index=\" + index;\n    pointValue.setOffset(index * packedBytesDocIDLength);\n    return pointValue;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c7f06758793500ca773d0df1037290e6e404fb33":["537608940e64412ad5ecbc22df70b1553cdeb44f"],"537608940e64412ad5ecbc22df70b1553cdeb44f":["c2344a1c769566d8c85cffcacc5e55153fa54b86"],"bb94bf667d51f9c390c99d97afb36b7caab6b6e9":["c7f06758793500ca773d0df1037290e6e404fb33"],"c2344a1c769566d8c85cffcacc5e55153fa54b86":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["bb94bf667d51f9c390c99d97afb36b7caab6b6e9"]},"commit2Childs":{"c7f06758793500ca773d0df1037290e6e404fb33":["bb94bf667d51f9c390c99d97afb36b7caab6b6e9"],"537608940e64412ad5ecbc22df70b1553cdeb44f":["c7f06758793500ca773d0df1037290e6e404fb33"],"bb94bf667d51f9c390c99d97afb36b7caab6b6e9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c2344a1c769566d8c85cffcacc5e55153fa54b86":["537608940e64412ad5ecbc22df70b1553cdeb44f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c2344a1c769566d8c85cffcacc5e55153fa54b86"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}