{"path":"src/java/org/apache/lucene/analysis/de/WordlistLoader#makeWordTable(String[],int).mjava","commits":[{"id":"3ee067e27d1cce6d2d5d64280007410c2e1a38d8","date":1001438945,"type":0,"author":"Doug Cutting","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/de/WordlistLoader#makeWordTable(String[],int).mjava","pathOld":"/dev/null","sourceNew":"\t/**\n\t * Builds the wordlist table.\n\t *\n\t * @param words   Word that where read.\n\t * @param length  Amount of words that where read into <tt>words</tt>.\n\t */\n\tprivate static Hashtable makeWordTable( String[] words, int length ) {\n\t\tHashtable table = new Hashtable( length );\n\t\tfor ( int i = 0; i < length; i++ ) {\n\t\t\ttable.put( words[i], words[i] );\n\t\t}\n\t\treturn table;\n\t}\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9b027969b494a02d6f7a03a43537cc6935afce2a","date":1008019104,"type":3,"author":"gschwarz","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/de/WordlistLoader#makeWordTable(String[],int).mjava","pathOld":"src/java/org/apache/lucene/analysis/de/WordlistLoader#makeWordTable(String[],int).mjava","sourceNew":"\t/**\n\t * Builds the wordlist table.\n\t *\n\t * @param words   Word that where read\n\t * @param length  Amount of words that where read into <tt>words</tt>\n\t */\n\tprivate static Hashtable makeWordTable( String[] words, int length ) {\n\t\tHashtable table = new Hashtable( length );\n\t\tfor ( int i = 0; i < length; i++ ) {\n\t\t\ttable.put( words[i], words[i] );\n\t\t}\n\t\treturn table;\n\t}\n\n","sourceOld":"\t/**\n\t * Builds the wordlist table.\n\t *\n\t * @param words   Word that where read.\n\t * @param length  Amount of words that where read into <tt>words</tt>.\n\t */\n\tprivate static Hashtable makeWordTable( String[] words, int length ) {\n\t\tHashtable table = new Hashtable( length );\n\t\tfor ( int i = 0; i < length; i++ ) {\n\t\t\ttable.put( words[i], words[i] );\n\t\t}\n\t\treturn table;\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f1b51af49aa8e1c86a2453fc1d1b618effb6ec8e","date":1029691996,"type":3,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/de/WordlistLoader#makeWordTable(String[],int).mjava","pathOld":"src/java/org/apache/lucene/analysis/de/WordlistLoader#makeWordTable(String[],int).mjava","sourceNew":"    /**\n     * Builds the wordlist table.\n     *\n     * @param words   Word that where read\n     * @param length  Amount of words that where read into <tt>words</tt>\n     */\n    private static Hashtable makeWordTable( String[] words, int length ) {\n\tHashtable table = new Hashtable( length );\n\tfor ( int i = 0; i < length; i++ ) {\n\t    table.put( words[i], words[i] );\n\t}\n\treturn table;\n    }\n\n","sourceOld":"\t/**\n\t * Builds the wordlist table.\n\t *\n\t * @param words   Word that where read\n\t * @param length  Amount of words that where read into <tt>words</tt>\n\t */\n\tprivate static Hashtable makeWordTable( String[] words, int length ) {\n\t\tHashtable table = new Hashtable( length );\n\t\tfor ( int i = 0; i < length; i++ ) {\n\t\t\ttable.put( words[i], words[i] );\n\t\t}\n\t\treturn table;\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"da84b655ba7795af0018633fd31fba21fb61e9c1","date":1078877882,"type":3,"author":"Erik Hatcher","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/de/WordlistLoader#makeWordTable(String[],int).mjava","pathOld":"src/java/org/apache/lucene/analysis/de/WordlistLoader#makeWordTable(String[],int).mjava","sourceNew":"  /**\n   * Builds the wordlist table.\n   *\n   * @param words   Word that where read\n   * @param length  Amount of words that where read into <tt>words</tt>\n   */\n  private static Hashtable makeWordTable(String[] words, int length) {\n    Hashtable table = new Hashtable(length);\n    for (int i = 0; i < length; i++) {\n      table.put(words[i], words[i]);\n    }\n    return table;\n  }\n\n","sourceOld":"    /**\n     * Builds the wordlist table.\n     *\n     * @param words   Word that where read\n     * @param length  Amount of words that where read into <tt>words</tt>\n     */\n    private static Hashtable makeWordTable( String[] words, int length ) {\n\tHashtable table = new Hashtable( length );\n\tfor ( int i = 0; i < length; i++ ) {\n\t    table.put( words[i], words[i] );\n\t}\n\treturn table;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d228cde601d14f5ebb8739acab29a9b9a3a8098e","date":1080579215,"type":3,"author":"Erik Hatcher","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/de/WordlistLoader#makeWordTable(String[],int).mjava","pathOld":"src/java/org/apache/lucene/analysis/de/WordlistLoader#makeWordTable(String[],int).mjava","sourceNew":"  /**\n   * Builds the wordlist table.\n   *\n   * @param words  Word that where read\n   * @param length Amount of words that where read into <tt>words</tt>\n   */\n  private static Hashtable makeWordTable(String[] words, int length) {\n    Hashtable table = new Hashtable(length);\n    for (int i = 0; i < length; i++) {\n      table.put(words[i], words[i]);\n    }\n    return table;\n  }\n\n","sourceOld":"  /**\n   * Builds the wordlist table.\n   *\n   * @param words   Word that where read\n   * @param length  Amount of words that where read into <tt>words</tt>\n   */\n  private static Hashtable makeWordTable(String[] words, int length) {\n    Hashtable table = new Hashtable(length);\n    for (int i = 0; i < length; i++) {\n      table.put(words[i], words[i]);\n    }\n    return table;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4230eef3a047e2a85e989e7ced62bf7fd4a9f859","date":1080661498,"type":4,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"/dev/null","pathOld":"src/java/org/apache/lucene/analysis/de/WordlistLoader#makeWordTable(String[],int).mjava","sourceNew":null,"sourceOld":"  /**\n   * Builds the wordlist table.\n   *\n   * @param words  Word that where read\n   * @param length Amount of words that where read into <tt>words</tt>\n   */\n  private static Hashtable makeWordTable(String[] words, int length) {\n    Hashtable table = new Hashtable(length);\n    for (int i = 0; i < length; i++) {\n      table.put(words[i], words[i]);\n    }\n    return table;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3ee067e27d1cce6d2d5d64280007410c2e1a38d8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4230eef3a047e2a85e989e7ced62bf7fd4a9f859":["d228cde601d14f5ebb8739acab29a9b9a3a8098e"],"da84b655ba7795af0018633fd31fba21fb61e9c1":["f1b51af49aa8e1c86a2453fc1d1b618effb6ec8e"],"f1b51af49aa8e1c86a2453fc1d1b618effb6ec8e":["9b027969b494a02d6f7a03a43537cc6935afce2a"],"9b027969b494a02d6f7a03a43537cc6935afce2a":["3ee067e27d1cce6d2d5d64280007410c2e1a38d8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d228cde601d14f5ebb8739acab29a9b9a3a8098e":["da84b655ba7795af0018633fd31fba21fb61e9c1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4230eef3a047e2a85e989e7ced62bf7fd4a9f859"]},"commit2Childs":{"3ee067e27d1cce6d2d5d64280007410c2e1a38d8":["9b027969b494a02d6f7a03a43537cc6935afce2a"],"4230eef3a047e2a85e989e7ced62bf7fd4a9f859":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"da84b655ba7795af0018633fd31fba21fb61e9c1":["d228cde601d14f5ebb8739acab29a9b9a3a8098e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3ee067e27d1cce6d2d5d64280007410c2e1a38d8"],"f1b51af49aa8e1c86a2453fc1d1b618effb6ec8e":["da84b655ba7795af0018633fd31fba21fb61e9c1"],"9b027969b494a02d6f7a03a43537cc6935afce2a":["f1b51af49aa8e1c86a2453fc1d1b618effb6ec8e"],"d228cde601d14f5ebb8739acab29a9b9a3a8098e":["4230eef3a047e2a85e989e7ced62bf7fd4a9f859"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}