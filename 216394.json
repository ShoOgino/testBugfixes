{"path":"lucene/suggest/src/java/org/apache/lucene/search/suggest/jaspell/JaspellLookup#store(OutputStream).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/jaspell/JaspellLookup#store(OutputStream).mjava","pathOld":"modules/suggest/src/java/org/apache/lucene/search/suggest/jaspell/JaspellLookup#store(OutputStream).mjava","sourceNew":"  @Override\n  public boolean store(OutputStream output) throws IOException {\n    TSTNode root = trie.getRoot();\n    if (root == null) { // empty tree\n      return false;\n    }\n    DataOutputStream out = new DataOutputStream(output);\n    try {\n      writeRecursively(out, root);\n      out.flush();\n    } finally {\n      IOUtils.close(out);\n    }\n    return true;\n  }\n\n","sourceOld":"  @Override\n  public boolean store(OutputStream output) throws IOException {\n    TSTNode root = trie.getRoot();\n    if (root == null) { // empty tree\n      return false;\n    }\n    DataOutputStream out = new DataOutputStream(output);\n    try {\n      writeRecursively(out, root);\n      out.flush();\n    } finally {\n      IOUtils.close(out);\n    }\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a645276cbaf5dc96a42fd473b9019bde352996c8","date":1391806699,"type":5,"author":"Areek Zillur","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/jaspell/JaspellLookup#store(DataOutput).mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/jaspell/JaspellLookup#store(OutputStream).mjava","sourceNew":"  @Override\n  public boolean store(DataOutput output) throws IOException {\n    output.writeVLong(count);\n    TSTNode root = trie.getRoot();\n    if (root == null) { // empty tree\n      return false;\n    }\n    writeRecursively(output, root);\n    return true;\n  }\n\n","sourceOld":"  @Override\n  public boolean store(OutputStream output) throws IOException {\n    TSTNode root = trie.getRoot();\n    if (root == null) { // empty tree\n      return false;\n    }\n    DataOutputStream out = new DataOutputStream(output);\n    try {\n      writeRecursively(out, root);\n      out.flush();\n    } finally {\n      IOUtils.close(out);\n    }\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a645276cbaf5dc96a42fd473b9019bde352996c8":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a645276cbaf5dc96a42fd473b9019bde352996c8"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a645276cbaf5dc96a42fd473b9019bde352996c8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a645276cbaf5dc96a42fd473b9019bde352996c8":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}