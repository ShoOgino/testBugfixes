{"path":"lucene/src/java/org/apache/lucene/index/codecs/StoredFieldsWriter#addDocument(Iterable[#-extends-IndexableField],FieldInfos).mjava","commits":[{"id":"06584e6e98d592b34e1329b384182f368d2025e8","date":1320850353,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/StoredFieldsWriter#addDocument(Iterable[#-extends-IndexableField],FieldInfos).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/DefaultFieldsWriter#addDocument(Iterable[#-extends-IndexableField],FieldInfos).mjava","sourceNew":"  /** sugar method for startDocument() + writeField() for every stored field in the document */\n  protected final void addDocument(Iterable<? extends IndexableField> doc, FieldInfos fieldInfos) throws IOException {\n    int storedCount = 0;\n    for (IndexableField field : doc) {\n      if (field.fieldType().stored()) {\n        storedCount++;\n      }\n    }\n    \n    startDocument(storedCount);\n\n    for (IndexableField field : doc) {\n      if (field.fieldType().stored()) {\n        writeField(fieldInfos.fieldNumber(field.name()), field);\n      }\n    }\n  }\n\n","sourceOld":"  public final void addDocument(Iterable<? extends IndexableField> doc, FieldInfos fieldInfos) throws IOException {\n    indexStream.writeLong(fieldsStream.getFilePointer());\n\n    int storedCount = 0;\n    for (IndexableField field : doc) {\n      if (field.fieldType().stored()) {\n        storedCount++;\n      }\n    }\n    fieldsStream.writeVInt(storedCount);\n\n    for (IndexableField field : doc) {\n      if (field.fieldType().stored()) {\n        writeField(fieldInfos.fieldNumber(field.name()), field);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cc749c053615f5871f3b95715fe292f34e70a53","date":1321470575,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/StoredFieldsWriter#addDocument(Iterable[#-extends-IndexableField],FieldInfos).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/StoredFieldsWriter#addDocument(Iterable[#-extends-IndexableField],FieldInfos).mjava","sourceNew":"  /** sugar method for startDocument() + writeField() for every stored field in the document */\n  protected final void addDocument(Iterable<? extends IndexableField> doc, FieldInfos fieldInfos) throws IOException {\n    int storedCount = 0;\n    for (IndexableField field : doc) {\n      if (field.fieldType().stored()) {\n        storedCount++;\n      }\n    }\n    \n    startDocument(storedCount);\n\n    for (IndexableField field : doc) {\n      if (field.fieldType().stored()) {\n        writeField(fieldInfos.fieldInfo(field.name()), field);\n      }\n    }\n  }\n\n","sourceOld":"  /** sugar method for startDocument() + writeField() for every stored field in the document */\n  protected final void addDocument(Iterable<? extends IndexableField> doc, FieldInfos fieldInfos) throws IOException {\n    int storedCount = 0;\n    for (IndexableField field : doc) {\n      if (field.fieldType().stored()) {\n        storedCount++;\n      }\n    }\n    \n    startDocument(storedCount);\n\n    for (IndexableField field : doc) {\n      if (field.fieldType().stored()) {\n        writeField(fieldInfos.fieldNumber(field.name()), field);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0ae5e3ed1232483b7b8a014f175a5fe43595982","date":1324062192,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/codecs/StoredFieldsWriter#addDocument(Iterable[#-extends-IndexableField],FieldInfos).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/StoredFieldsWriter#addDocument(Iterable[#-extends-IndexableField],FieldInfos).mjava","sourceNew":"  /** sugar method for startDocument() + writeField() for every stored field in the document */\n  protected final void addDocument(Iterable<? extends IndexableField> doc, FieldInfos fieldInfos) throws IOException {\n    int storedCount = 0;\n    for (IndexableField field : doc) {\n      if (field.fieldType().stored()) {\n        storedCount++;\n      }\n    }\n    \n    startDocument(storedCount);\n\n    for (IndexableField field : doc) {\n      if (field.fieldType().stored()) {\n        writeField(fieldInfos.fieldInfo(field.name()), field);\n      }\n    }\n  }\n\n","sourceOld":"  /** sugar method for startDocument() + writeField() for every stored field in the document */\n  protected final void addDocument(Iterable<? extends IndexableField> doc, FieldInfos fieldInfos) throws IOException {\n    int storedCount = 0;\n    for (IndexableField field : doc) {\n      if (field.fieldType().stored()) {\n        storedCount++;\n      }\n    }\n    \n    startDocument(storedCount);\n\n    for (IndexableField field : doc) {\n      if (field.fieldType().stored()) {\n        writeField(fieldInfos.fieldInfo(field.name()), field);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"06584e6e98d592b34e1329b384182f368d2025e8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cc749c053615f5871f3b95715fe292f34e70a53":["06584e6e98d592b34e1329b384182f368d2025e8"],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["3cc749c053615f5871f3b95715fe292f34e70a53"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"]},"commit2Childs":{"06584e6e98d592b34e1329b384182f368d2025e8":["3cc749c053615f5871f3b95715fe292f34e70a53"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["06584e6e98d592b34e1329b384182f368d2025e8"],"3cc749c053615f5871f3b95715fe292f34e70a53":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}