{"path":"modules/analysis/common/src/test/org/apache/lucene/analysis/core/TestStopFilter#testFirstPosInc().mjava","commits":[{"id":"54c9be9a3aac8e0bab09abb249165f90a6758f01","date":1331903190,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/core/TestStopFilter#testFirstPosInc().mjava","pathOld":"/dev/null","sourceNew":"  public void testFirstPosInc() throws Exception {\n    Analyzer analyzer = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName, Reader reader) {\n        Tokenizer tokenizer = new MockTokenizer(reader, MockTokenizer.WHITESPACE, false);\n        TokenFilter filter = new MockSynonymFilter(tokenizer);\n        StopFilter stopfilter = new StopFilter(TEST_VERSION_CURRENT, filter, StopAnalyzer.ENGLISH_STOP_WORDS_SET);\n        stopfilter.setEnablePositionIncrements(false);\n        return new TokenStreamComponents(tokenizer, stopfilter);\n      }\n    };\n    \n    assertAnalyzesTo(analyzer, \"the quick brown fox\",\n        new String[] { \"hte\", \"quick\", \"brown\", \"fox\" },\n        new int[] { 1, 1, 1, 1} );\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestStopFilter#testFirstPosInc().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/core/TestStopFilter#testFirstPosInc().mjava","sourceNew":"  public void testFirstPosInc() throws Exception {\n    Analyzer analyzer = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName, Reader reader) {\n        Tokenizer tokenizer = new MockTokenizer(reader, MockTokenizer.WHITESPACE, false);\n        TokenFilter filter = new MockSynonymFilter(tokenizer);\n        StopFilter stopfilter = new StopFilter(TEST_VERSION_CURRENT, filter, StopAnalyzer.ENGLISH_STOP_WORDS_SET);\n        stopfilter.setEnablePositionIncrements(false);\n        return new TokenStreamComponents(tokenizer, stopfilter);\n      }\n    };\n    \n    assertAnalyzesTo(analyzer, \"the quick brown fox\",\n        new String[] { \"hte\", \"quick\", \"brown\", \"fox\" },\n        new int[] { 1, 1, 1, 1} );\n  }\n\n","sourceOld":"  public void testFirstPosInc() throws Exception {\n    Analyzer analyzer = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName, Reader reader) {\n        Tokenizer tokenizer = new MockTokenizer(reader, MockTokenizer.WHITESPACE, false);\n        TokenFilter filter = new MockSynonymFilter(tokenizer);\n        StopFilter stopfilter = new StopFilter(TEST_VERSION_CURRENT, filter, StopAnalyzer.ENGLISH_STOP_WORDS_SET);\n        stopfilter.setEnablePositionIncrements(false);\n        return new TokenStreamComponents(tokenizer, stopfilter);\n      }\n    };\n    \n    assertAnalyzesTo(analyzer, \"the quick brown fox\",\n        new String[] { \"hte\", \"quick\", \"brown\", \"fox\" },\n        new int[] { 1, 1, 1, 1} );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["54c9be9a3aac8e0bab09abb249165f90a6758f01"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"54c9be9a3aac8e0bab09abb249165f90a6758f01":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["54c9be9a3aac8e0bab09abb249165f90a6758f01"],"54c9be9a3aac8e0bab09abb249165f90a6758f01":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}