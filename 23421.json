{"path":"lucene/core/src/test/org/apache/lucene/util/fst/TestUtil#buildFST(List[String],boolean,boolean).mjava","commits":[{"id":"71d31a7d5773508492505519bb5230b87c8937ad","date":1573681693,"type":1,"author":"Bruno Roustant","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/fst/TestUtil#buildFST(List[String],boolean,boolean).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/util/fst/TestUtil#buildFST(List[String],boolean).mjava","sourceNew":"  private FST<Object> buildFST(List<String> words, boolean allowArrayArcs, boolean allowDirectAddressing) throws Exception {\n    final Outputs<Object> outputs = NoOutputs.getSingleton();\n    final Builder<Object> b = new Builder<>(FST.INPUT_TYPE.BYTE1, 0, 0, true, true, Integer.MAX_VALUE, outputs, allowArrayArcs, 15);\n    if (!allowDirectAddressing) {\n      b.setDirectAddressingMaxOversizingFactor(-1f);\n    }\n\n    for (String word : words) {\n      b.add(Util.toIntsRef(new BytesRef(word), new IntsRefBuilder()), outputs.getNoOutput());\n    }\n    return b.finish();\n  }\n\n","sourceOld":"  private FST<Object> buildFST(List<String> words, boolean allowArrayArcs) throws Exception {\n    final Outputs<Object> outputs = NoOutputs.getSingleton();\n    final Builder<Object> b = new Builder<>(FST.INPUT_TYPE.BYTE1, 0, 0, true, true, Integer.MAX_VALUE, outputs, allowArrayArcs, 15);\n\n    for (String word : words) {\n      b.add(Util.toIntsRef(new BytesRef(word), new IntsRefBuilder()), outputs.getNoOutput());\n    }\n    return b.finish();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f5661e6a04d3172e262ad741b717924f2f1b6a5","date":1576244274,"type":3,"author":"Bruno Roustant","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/fst/TestUtil#buildFST(List[String],boolean,boolean).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/util/fst/TestUtil#buildFST(List[String],boolean,boolean).mjava","sourceNew":"  private FST<Object> buildFST(List<String> words, boolean allowArrayArcs, boolean allowDirectAddressing) throws Exception {\n    final Outputs<Object> outputs = NoOutputs.getSingleton();\n    final FSTCompiler.Builder<Object> builder = new FSTCompiler.Builder<>(FST.INPUT_TYPE.BYTE1, outputs)\n        .allowFixedLengthArcs(allowArrayArcs);\n    if (!allowDirectAddressing) {\n      builder.directAddressingMaxOversizingFactor(-1f);\n    }\n    final FSTCompiler<Object> fstCompiler = builder.build();\n\n    for (String word : words) {\n      fstCompiler.add(Util.toIntsRef(new BytesRef(word), new IntsRefBuilder()), outputs.getNoOutput());\n    }\n    return fstCompiler.compile();\n  }\n\n","sourceOld":"  private FST<Object> buildFST(List<String> words, boolean allowArrayArcs, boolean allowDirectAddressing) throws Exception {\n    final Outputs<Object> outputs = NoOutputs.getSingleton();\n    final Builder<Object> b = new Builder<>(FST.INPUT_TYPE.BYTE1, 0, 0, true, true, Integer.MAX_VALUE, outputs, allowArrayArcs, 15);\n    if (!allowDirectAddressing) {\n      b.setDirectAddressingMaxOversizingFactor(-1f);\n    }\n\n    for (String word : words) {\n      b.add(Util.toIntsRef(new BytesRef(word), new IntsRefBuilder()), outputs.getNoOutput());\n    }\n    return b.finish();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c5db9bff3aeb942c848a2ab8fa4b8b0737377deb","date":1576247714,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/util/fst/TestUtil#buildFST(List[String],boolean,boolean).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/util/fst/TestUtil#buildFST(List[String],boolean,boolean).mjava","sourceNew":"  private FST<Object> buildFST(List<String> words, boolean allowArrayArcs, boolean allowDirectAddressing) throws Exception {\n    final Outputs<Object> outputs = NoOutputs.getSingleton();\n    final FSTCompiler.Builder<Object> builder = new FSTCompiler.Builder<>(FST.INPUT_TYPE.BYTE1, outputs)\n        .allowFixedLengthArcs(allowArrayArcs);\n    if (!allowDirectAddressing) {\n      builder.directAddressingMaxOversizingFactor(-1f);\n    }\n    final FSTCompiler<Object> fstCompiler = builder.build();\n\n    for (String word : words) {\n      fstCompiler.add(Util.toIntsRef(new BytesRef(word), new IntsRefBuilder()), outputs.getNoOutput());\n    }\n    return fstCompiler.compile();\n  }\n\n","sourceOld":"  private FST<Object> buildFST(List<String> words, boolean allowArrayArcs, boolean allowDirectAddressing) throws Exception {\n    final Outputs<Object> outputs = NoOutputs.getSingleton();\n    final Builder<Object> b = new Builder<>(FST.INPUT_TYPE.BYTE1, 0, 0, true, true, Integer.MAX_VALUE, outputs, allowArrayArcs, 15);\n    if (!allowDirectAddressing) {\n      b.setDirectAddressingMaxOversizingFactor(-1f);\n    }\n\n    for (String word : words) {\n      b.add(Util.toIntsRef(new BytesRef(word), new IntsRefBuilder()), outputs.getNoOutput());\n    }\n    return b.finish();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"71d31a7d5773508492505519bb5230b87c8937ad":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c5db9bff3aeb942c848a2ab8fa4b8b0737377deb":["71d31a7d5773508492505519bb5230b87c8937ad","0f5661e6a04d3172e262ad741b717924f2f1b6a5"],"0f5661e6a04d3172e262ad741b717924f2f1b6a5":["71d31a7d5773508492505519bb5230b87c8937ad"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0f5661e6a04d3172e262ad741b717924f2f1b6a5"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["71d31a7d5773508492505519bb5230b87c8937ad"],"71d31a7d5773508492505519bb5230b87c8937ad":["c5db9bff3aeb942c848a2ab8fa4b8b0737377deb","0f5661e6a04d3172e262ad741b717924f2f1b6a5"],"c5db9bff3aeb942c848a2ab8fa4b8b0737377deb":[],"0f5661e6a04d3172e262ad741b717924f2f1b6a5":["c5db9bff3aeb942c848a2ab8fa4b8b0737377deb","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c5db9bff3aeb942c848a2ab8fa4b8b0737377deb","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}