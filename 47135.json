{"path":"lucene/join/src/java/org/apache/lucene/search/join/ToChildBlockJoinQuery.ToChildBlockJoinWeight#explain(LeafReaderContext,int).mjava","commits":[{"id":"c9fb5f46e264daf5ba3860defe623a89d202dd87","date":1411516315,"type":0,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/ToChildBlockJoinQuery.ToChildBlockJoinWeight#explain(LeafReaderContext,int).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public Explanation explain(LeafReaderContext reader, int doc) throws IOException {\n      // TODO\n      throw new UnsupportedOperationException(getClass().getName() +\n                                              \" cannot explain match on parent document\");\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["da6895c8fcaff91a5fcb72c54627339e3df1bb86"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"da6895c8fcaff91a5fcb72c54627339e3df1bb86","date":1435065290,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/ToChildBlockJoinQuery.ToChildBlockJoinWeight#explain(LeafReaderContext,int).mjava","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/ToChildBlockJoinQuery.ToChildBlockJoinWeight#explain(LeafReaderContext,int).mjava","sourceNew":"    @Override\n    public Explanation explain(LeafReaderContext context, int doc) throws IOException {\n      ToChildBlockJoinScorer scorer = (ToChildBlockJoinScorer) scorer(context, context.reader().getLiveDocs());\n      if (scorer != null && scorer.advance(doc) == doc) {\n        int parentDoc = scorer.getParentDoc();\n        return Explanation.match(\n          scorer.score(), \n          String.format(Locale.ROOT, \"Score based on parent document %d\", parentDoc + context.docBase), \n          parentWeight.explain(context, parentDoc)\n        );\n      }\n      return Explanation.noMatch(\"Not a match\");\n    }\n\n","sourceOld":"    @Override\n    public Explanation explain(LeafReaderContext reader, int doc) throws IOException {\n      // TODO\n      throw new UnsupportedOperationException(getClass().getName() +\n                                              \" cannot explain match on parent document\");\n    }\n\n","bugFix":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f4464508ee83288c8c4585b533f9faaa93aa314","date":1435240759,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/ToChildBlockJoinQuery.ToChildBlockJoinWeight#explain(LeafReaderContext,int).mjava","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/ToChildBlockJoinQuery.ToChildBlockJoinWeight#explain(LeafReaderContext,int).mjava","sourceNew":"    @Override\n    public Explanation explain(LeafReaderContext context, int doc) throws IOException {\n      ToChildBlockJoinScorer scorer = (ToChildBlockJoinScorer) scorer(context);\n      if (scorer != null && scorer.advance(doc) == doc) {\n        int parentDoc = scorer.getParentDoc();\n        return Explanation.match(\n          scorer.score(), \n          String.format(Locale.ROOT, \"Score based on parent document %d\", parentDoc + context.docBase), \n          parentWeight.explain(context, parentDoc)\n        );\n      }\n      return Explanation.noMatch(\"Not a match\");\n    }\n\n","sourceOld":"    @Override\n    public Explanation explain(LeafReaderContext context, int doc) throws IOException {\n      ToChildBlockJoinScorer scorer = (ToChildBlockJoinScorer) scorer(context, context.reader().getLiveDocs());\n      if (scorer != null && scorer.advance(doc) == doc) {\n        int parentDoc = scorer.getParentDoc();\n        return Explanation.match(\n          scorer.score(), \n          String.format(Locale.ROOT, \"Score based on parent document %d\", parentDoc + context.docBase), \n          parentWeight.explain(context, parentDoc)\n        );\n      }\n      return Explanation.noMatch(\"Not a match\");\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7dd748bb245633a8195281556bb0e68a6ea97d18","date":1449755030,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/ToChildBlockJoinQuery.ToChildBlockJoinWeight#explain(LeafReaderContext,int).mjava","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/ToChildBlockJoinQuery.ToChildBlockJoinWeight#explain(LeafReaderContext,int).mjava","sourceNew":"    @Override\n    public Explanation explain(LeafReaderContext context, int doc) throws IOException {\n      ToChildBlockJoinScorer scorer = (ToChildBlockJoinScorer) scorer(context);\n      if (scorer != null && scorer.iterator().advance(doc) == doc) {\n        int parentDoc = scorer.getParentDoc();\n        return Explanation.match(\n          scorer.score(), \n          String.format(Locale.ROOT, \"Score based on parent document %d\", parentDoc + context.docBase), \n          parentWeight.explain(context, parentDoc)\n        );\n      }\n      return Explanation.noMatch(\"Not a match\");\n    }\n\n","sourceOld":"    @Override\n    public Explanation explain(LeafReaderContext context, int doc) throws IOException {\n      ToChildBlockJoinScorer scorer = (ToChildBlockJoinScorer) scorer(context);\n      if (scorer != null && scorer.advance(doc) == doc) {\n        int parentDoc = scorer.getParentDoc();\n        return Explanation.match(\n          scorer.score(), \n          String.format(Locale.ROOT, \"Score based on parent document %d\", parentDoc + context.docBase), \n          parentWeight.explain(context, parentDoc)\n        );\n      }\n      return Explanation.noMatch(\"Not a match\");\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"96ab132e6f739772060bedf1719a057e97d5b759","date":1468422264,"type":3,"author":"Christine Poerschke","isMerge":false,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/ToChildBlockJoinQuery.ToChildBlockJoinWeight#explain(LeafReaderContext,int).mjava","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/ToChildBlockJoinQuery.ToChildBlockJoinWeight#explain(LeafReaderContext,int).mjava","sourceNew":"    @Override\n    public Explanation explain(LeafReaderContext context, int doc) throws IOException {\n      ToChildBlockJoinScorer scorer = (ToChildBlockJoinScorer) scorer(context);\n      if (scorer != null && scorer.iterator().advance(doc) == doc) {\n        int parentDoc = scorer.getParentDoc();\n        return Explanation.match(\n          scorer.score(), \n          String.format(Locale.ROOT, \"Score based on parent document %d\", parentDoc + context.docBase), \n          in.explain(context, parentDoc)\n        );\n      }\n      return Explanation.noMatch(\"Not a match\");\n    }\n\n","sourceOld":"    @Override\n    public Explanation explain(LeafReaderContext context, int doc) throws IOException {\n      ToChildBlockJoinScorer scorer = (ToChildBlockJoinScorer) scorer(context);\n      if (scorer != null && scorer.iterator().advance(doc) == doc) {\n        int parentDoc = scorer.getParentDoc();\n        return Explanation.match(\n          scorer.score(), \n          String.format(Locale.ROOT, \"Score based on parent document %d\", parentDoc + context.docBase), \n          parentWeight.explain(context, parentDoc)\n        );\n      }\n      return Explanation.noMatch(\"Not a match\");\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/ToChildBlockJoinQuery.ToChildBlockJoinWeight#explain(LeafReaderContext,int).mjava","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/ToChildBlockJoinQuery.ToChildBlockJoinWeight#explain(LeafReaderContext,int).mjava","sourceNew":"    @Override\n    public Explanation explain(LeafReaderContext context, int doc) throws IOException {\n      ToChildBlockJoinScorer scorer = (ToChildBlockJoinScorer) scorer(context);\n      if (scorer != null && scorer.iterator().advance(doc) == doc) {\n        int parentDoc = scorer.getParentDoc();\n        return Explanation.match(\n          scorer.score(), \n          String.format(Locale.ROOT, \"Score based on parent document %d\", parentDoc + context.docBase), \n          in.explain(context, parentDoc)\n        );\n      }\n      return Explanation.noMatch(\"Not a match\");\n    }\n\n","sourceOld":"    @Override\n    public Explanation explain(LeafReaderContext context, int doc) throws IOException {\n      ToChildBlockJoinScorer scorer = (ToChildBlockJoinScorer) scorer(context);\n      if (scorer != null && scorer.iterator().advance(doc) == doc) {\n        int parentDoc = scorer.getParentDoc();\n        return Explanation.match(\n          scorer.score(), \n          String.format(Locale.ROOT, \"Score based on parent document %d\", parentDoc + context.docBase), \n          parentWeight.explain(context, parentDoc)\n        );\n      }\n      return Explanation.noMatch(\"Not a match\");\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0f4464508ee83288c8c4585b533f9faaa93aa314":["da6895c8fcaff91a5fcb72c54627339e3df1bb86"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7dd748bb245633a8195281556bb0e68a6ea97d18":["0f4464508ee83288c8c4585b533f9faaa93aa314"],"96ab132e6f739772060bedf1719a057e97d5b759":["7dd748bb245633a8195281556bb0e68a6ea97d18"],"da6895c8fcaff91a5fcb72c54627339e3df1bb86":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["7dd748bb245633a8195281556bb0e68a6ea97d18","96ab132e6f739772060bedf1719a057e97d5b759"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["96ab132e6f739772060bedf1719a057e97d5b759"]},"commit2Childs":{"0f4464508ee83288c8c4585b533f9faaa93aa314":["7dd748bb245633a8195281556bb0e68a6ea97d18"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"7dd748bb245633a8195281556bb0e68a6ea97d18":["96ab132e6f739772060bedf1719a057e97d5b759","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"da6895c8fcaff91a5fcb72c54627339e3df1bb86":["0f4464508ee83288c8c4585b533f9faaa93aa314"],"96ab132e6f739772060bedf1719a057e97d5b759":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["da6895c8fcaff91a5fcb72c54627339e3df1bb86"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}