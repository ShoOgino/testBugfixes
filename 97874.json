{"path":"solr/core/src/java/org/apache/solr/cluster/placement/impl/PlacementRequestImpl#toPlacementRequest(Cluster,DocCollection,Assign.AssignRequest).mjava","commits":[{"id":"f5d9700b23e8e9b11b845fcecef89dbdf21373d9","date":1600294231,"type":0,"author":"Ilan Ginzburg","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cluster/placement/impl/PlacementRequestImpl#toPlacementRequest(Cluster,DocCollection,Assign.AssignRequest).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Returns a {@link PlacementRequest} that can be consumed by a plugin based on an internal Assign.AssignRequest\n   * for adding replicas + additional info (upon creation of a new collection or adding replicas to an existing one).\n   */\n  static PlacementRequestImpl toPlacementRequest(Cluster cluster, DocCollection docCollection,\n                                                 Assign.AssignRequest assignRequest) throws Assign.AssignmentException {\n    SolrCollection solrCollection = new SimpleClusterAbstractionsImpl.SolrCollectionImpl(docCollection);\n    Set<String> shardNames = new HashSet<>(assignRequest.shardNames);\n    if (shardNames.size() < 1) {\n      throw new Assign.AssignmentException(\"Bad assign request: no shards specified for collection \" + docCollection.getName());\n    }\n\n    final Set<Node> nodes;\n    // If no nodes specified, use all live nodes. If nodes are specified, use specified list.\n    if (assignRequest.nodes != null) {\n      nodes = SimpleClusterAbstractionsImpl.NodeImpl.getNodes(assignRequest.nodes);\n      if (nodes.isEmpty()) {\n        throw new Assign.AssignmentException(\"Bad assign request: empty list of nodes for collection \" + docCollection.getName());\n      }\n    } else {\n      nodes = cluster.getLiveNodes();\n      if (nodes.isEmpty()) {\n        throw new Assign.AssignmentException(\"Impossible assign request: no live nodes for collection \" + docCollection.getName());\n      }\n    }\n\n    return new PlacementRequestImpl(solrCollection, shardNames, nodes,\n        assignRequest.numNrtReplicas, assignRequest.numTlogReplicas, assignRequest.numPullReplicas);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"65352f844eb9e9a677ec4eb2abced4404f08181d","date":1600297608,"type":0,"author":"noblepaul","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cluster/placement/impl/PlacementRequestImpl#toPlacementRequest(Cluster,DocCollection,Assign.AssignRequest).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Returns a {@link PlacementRequest} that can be consumed by a plugin based on an internal Assign.AssignRequest\n   * for adding replicas + additional info (upon creation of a new collection or adding replicas to an existing one).\n   */\n  static PlacementRequestImpl toPlacementRequest(Cluster cluster, DocCollection docCollection,\n                                                 Assign.AssignRequest assignRequest) throws Assign.AssignmentException {\n    SolrCollection solrCollection = new SimpleClusterAbstractionsImpl.SolrCollectionImpl(docCollection);\n    Set<String> shardNames = new HashSet<>(assignRequest.shardNames);\n    if (shardNames.size() < 1) {\n      throw new Assign.AssignmentException(\"Bad assign request: no shards specified for collection \" + docCollection.getName());\n    }\n\n    final Set<Node> nodes;\n    // If no nodes specified, use all live nodes. If nodes are specified, use specified list.\n    if (assignRequest.nodes != null) {\n      nodes = SimpleClusterAbstractionsImpl.NodeImpl.getNodes(assignRequest.nodes);\n      if (nodes.isEmpty()) {\n        throw new Assign.AssignmentException(\"Bad assign request: empty list of nodes for collection \" + docCollection.getName());\n      }\n    } else {\n      nodes = cluster.getLiveNodes();\n      if (nodes.isEmpty()) {\n        throw new Assign.AssignmentException(\"Impossible assign request: no live nodes for collection \" + docCollection.getName());\n      }\n    }\n\n    return new PlacementRequestImpl(solrCollection, shardNames, nodes,\n        assignRequest.numNrtReplicas, assignRequest.numTlogReplicas, assignRequest.numPullReplicas);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f5d9700b23e8e9b11b845fcecef89dbdf21373d9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"65352f844eb9e9a677ec4eb2abced4404f08181d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f5d9700b23e8e9b11b845fcecef89dbdf21373d9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["65352f844eb9e9a677ec4eb2abced4404f08181d"]},"commit2Childs":{"f5d9700b23e8e9b11b845fcecef89dbdf21373d9":["65352f844eb9e9a677ec4eb2abced4404f08181d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f5d9700b23e8e9b11b845fcecef89dbdf21373d9","65352f844eb9e9a677ec4eb2abced4404f08181d"],"65352f844eb9e9a677ec4eb2abced4404f08181d":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}