{"path":"lucene/queries/src/java/org/apache/lucene/queries/function/valuesource/RangeMapFloatFunction#getValues(Map,AtomicReaderContext).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/function/valuesource/RangeMapFloatFunction#getValues(Map,AtomicReaderContext).mjava","pathOld":"modules/queries/src/java/org/apache/lucene/queries/function/valuesource/RangeMapFloatFunction#getValues(Map,AtomicReaderContext).mjava","sourceNew":"  @Override\n  public FunctionValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n    final FunctionValues vals =  source.getValues(context, readerContext);\n    return new FloatDocValues(this) {\n      @Override\n      public float floatVal(int doc) {\n        float val = vals.floatVal(doc);\n        return (val>=min && val<=max) ? target : (defaultVal == null ? val : defaultVal);\n      }\n      @Override\n      public String toString(int doc) {\n        return \"map(\" + vals.toString(doc) + \",min=\" + min + \",max=\" + max + \",target=\" + target + \")\";\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public FunctionValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n    final FunctionValues vals =  source.getValues(context, readerContext);\n    return new FloatDocValues(this) {\n      @Override\n      public float floatVal(int doc) {\n        float val = vals.floatVal(doc);\n        return (val>=min && val<=max) ? target : (defaultVal == null ? val : defaultVal);\n      }\n      @Override\n      public String toString(int doc) {\n        return \"map(\" + vals.toString(doc) + \",min=\" + min + \",max=\" + max + \",target=\" + target + \")\";\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"19275ba31e621f6da1b83bf13af75233876fd3d4","date":1374846698,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/function/valuesource/RangeMapFloatFunction#getValues(Map,AtomicReaderContext).mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/function/valuesource/RangeMapFloatFunction#getValues(Map,AtomicReaderContext).mjava","sourceNew":"  @Override\n  public FunctionValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n    final FunctionValues vals =  source.getValues(context, readerContext);\n    return new FloatDocValues(this) {\n      @Override\n      public float floatVal(int doc) {\n        float val = vals.floatVal(doc);\n        return (val>=min && val<=max) ? target : (defaultVal == null ? val : defaultVal);\n      }\n      @Override\n      public String toString(int doc) {\n        return \"map(\" + vals.toString(doc) + \",min=\" + min + \",max=\" + max + \",target=\" + target + \")\";\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public FunctionValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n    final FunctionValues vals =  source.getValues(context, readerContext);\n    return new FloatDocValues(this) {\n      @Override\n      public float floatVal(int doc) {\n        float val = vals.floatVal(doc);\n        return (val>=min && val<=max) ? target : (defaultVal == null ? val : defaultVal);\n      }\n      @Override\n      public String toString(int doc) {\n        return \"map(\" + vals.toString(doc) + \",min=\" + min + \",max=\" + max + \",target=\" + target + \")\";\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","date":1376366778,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/function/valuesource/RangeMapFloatFunction#getValues(Map,AtomicReaderContext).mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/function/valuesource/RangeMapFloatFunction#getValues(Map,AtomicReaderContext).mjava","sourceNew":"  @Override\n  public FunctionValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n    final FunctionValues vals =  source.getValues(context, readerContext);\n    return new FloatDocValues(this) {\n      @Override\n      public float floatVal(int doc) {\n        float val = vals.floatVal(doc);\n        return (val>=min && val<=max) ? target : (defaultVal == null ? val : defaultVal);\n      }\n      @Override\n      public String toString(int doc) {\n        return \"map(\" + vals.toString(doc) + \",min=\" + min + \",max=\" + max + \",target=\" + target + \")\";\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public FunctionValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n    final FunctionValues vals =  source.getValues(context, readerContext);\n    return new FloatDocValues(this) {\n      @Override\n      public float floatVal(int doc) {\n        float val = vals.floatVal(doc);\n        return (val>=min && val<=max) ? target : (defaultVal == null ? val : defaultVal);\n      }\n      @Override\n      public String toString(int doc) {\n        return \"map(\" + vals.toString(doc) + \",min=\" + min + \",max=\" + max + \",target=\" + target + \")\";\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2f8a098eef38bf48cf964fcd89c03e1e741130e9","date":1385973213,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/function/valuesource/RangeMapFloatFunction#getValues(Map,AtomicReaderContext).mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/function/valuesource/RangeMapFloatFunction#getValues(Map,AtomicReaderContext).mjava","sourceNew":"  @Override\n  public FunctionValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n    final FunctionValues vals =  source.getValues(context, readerContext);\n    final FunctionValues targets = target.getValues(context, readerContext);\n    final FunctionValues defaults = (this.defaultVal == null) ? null : defaultVal.getValues(context, readerContext);\n    return new FloatDocValues(this) {\n      @Override\n      public float floatVal(int doc) {\n        float val = vals.floatVal(doc);\n        return (val>=min && val<=max) ? targets.floatVal(doc) : (defaultVal == null ? val : defaults.floatVal(doc));\n      }\n      @Override\n      public String toString(int doc) {\n        return \"map(\" + vals.toString(doc) + \",min=\" + min + \",max=\" + max + \",target=\" + targets.toString(doc) + \")\";\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public FunctionValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n    final FunctionValues vals =  source.getValues(context, readerContext);\n    return new FloatDocValues(this) {\n      @Override\n      public float floatVal(int doc) {\n        float val = vals.floatVal(doc);\n        return (val>=min && val<=max) ? target : (defaultVal == null ? val : defaultVal);\n      }\n      @Override\n      public String toString(int doc) {\n        return \"map(\" + vals.toString(doc) + \",min=\" + min + \",max=\" + max + \",target=\" + target + \")\";\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"74f45af4339b0daf7a95c820ab88c1aea74fbce0","date":1387475327,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/function/valuesource/RangeMapFloatFunction#getValues(Map,AtomicReaderContext).mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/function/valuesource/RangeMapFloatFunction#getValues(Map,AtomicReaderContext).mjava","sourceNew":"  @Override\n  public FunctionValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n    final FunctionValues vals =  source.getValues(context, readerContext);\n    final FunctionValues targets = target.getValues(context, readerContext);\n    final FunctionValues defaults = (this.defaultVal == null) ? null : defaultVal.getValues(context, readerContext);\n    return new FloatDocValues(this) {\n      @Override\n      public float floatVal(int doc) {\n        float val = vals.floatVal(doc);\n        return (val>=min && val<=max) ? targets.floatVal(doc) : (defaultVal == null ? val : defaults.floatVal(doc));\n      }\n      @Override\n      public String toString(int doc) {\n        return \"map(\" + vals.toString(doc) + \",min=\" + min + \",max=\" + max + \",target=\" + targets.toString(doc) + \")\";\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public FunctionValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n    final FunctionValues vals =  source.getValues(context, readerContext);\n    return new FloatDocValues(this) {\n      @Override\n      public float floatVal(int doc) {\n        float val = vals.floatVal(doc);\n        return (val>=min && val<=max) ? target : (defaultVal == null ? val : defaultVal);\n      }\n      @Override\n      public String toString(int doc) {\n        return \"map(\" + vals.toString(doc) + \",min=\" + min + \",max=\" + max + \",target=\" + target + \")\";\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c9fb5f46e264daf5ba3860defe623a89d202dd87","date":1411516315,"type":4,"author":"Ryan Ernst","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/function/valuesource/RangeMapFloatFunction#getValues(Map,AtomicReaderContext).mjava","sourceNew":null,"sourceOld":"  @Override\n  public FunctionValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n    final FunctionValues vals =  source.getValues(context, readerContext);\n    final FunctionValues targets = target.getValues(context, readerContext);\n    final FunctionValues defaults = (this.defaultVal == null) ? null : defaultVal.getValues(context, readerContext);\n    return new FloatDocValues(this) {\n      @Override\n      public float floatVal(int doc) {\n        float val = vals.floatVal(doc);\n        return (val>=min && val<=max) ? targets.floatVal(doc) : (defaultVal == null ? val : defaults.floatVal(doc));\n      }\n      @Override\n      public String toString(int doc) {\n        return \"map(\" + vals.toString(doc) + \",min=\" + min + \",max=\" + max + \",target=\" + targets.toString(doc) + \")\";\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"2f8a098eef38bf48cf964fcd89c03e1e741130e9":["19275ba31e621f6da1b83bf13af75233876fd3d4"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":["19275ba31e621f6da1b83bf13af75233876fd3d4","2f8a098eef38bf48cf964fcd89c03e1e741130e9"],"19275ba31e621f6da1b83bf13af75233876fd3d4":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["2f8a098eef38bf48cf964fcd89c03e1e741130e9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c9fb5f46e264daf5ba3860defe623a89d202dd87"]},"commit2Childs":{"2f8a098eef38bf48cf964fcd89c03e1e741130e9":["74f45af4339b0daf7a95c820ab88c1aea74fbce0","c9fb5f46e264daf5ba3860defe623a89d202dd87"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","19275ba31e621f6da1b83bf13af75233876fd3d4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":[],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":[],"19275ba31e621f6da1b83bf13af75233876fd3d4":["2f8a098eef38bf48cf964fcd89c03e1e741130e9","74f45af4339b0daf7a95c820ab88c1aea74fbce0"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","74f45af4339b0daf7a95c820ab88c1aea74fbce0","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}