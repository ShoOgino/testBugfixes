{"path":"solr/core/src/java/org/apache/solr/core/CoreContainer.Initializer#initialize().mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreContainer.Initializer#initialize().mjava","pathOld":"solr/src/java/org/apache/solr/core/CoreContainer.Initializer#initialize().mjava","sourceNew":"    // core container instantiation\n    public CoreContainer initialize() throws IOException,\n        ParserConfigurationException, SAXException {\n      CoreContainer cores = null;\n      String solrHome = SolrResourceLoader.locateSolrHome();\n      // TODO : fix broken logic confusing solr.xml with solrconfig.xml\n      File fconf = new File(solrHome, solrConfigFilename == null ? \"solr.xml\"\n          : solrConfigFilename);\n      log.info(\"looking for solr.xml: \" + fconf.getAbsolutePath());\n      cores = new CoreContainer();\n      \n      if (fconf.exists()) {\n        cores.load(solrHome, fconf);\n      } else {\n        log.info(\"no solr.xml file found - using default\");\n        cores.load(solrHome, new InputSource(new ByteArrayInputStream(DEF_SOLR_XML.getBytes(\"UTF-8\"))));\n        cores.configFile = fconf;\n      }\n      \n      solrConfigFilename = cores.getConfigFile().getName();\n      \n      return cores;\n    }\n\n","sourceOld":"    // core container instantiation\n    public CoreContainer initialize() throws IOException,\n        ParserConfigurationException, SAXException {\n      CoreContainer cores = null;\n      String solrHome = SolrResourceLoader.locateSolrHome();\n      // TODO : fix broken logic confusing solr.xml with solrconfig.xml\n      File fconf = new File(solrHome, solrConfigFilename == null ? \"solr.xml\"\n          : solrConfigFilename);\n      log.info(\"looking for solr.xml: \" + fconf.getAbsolutePath());\n      cores = new CoreContainer();\n      \n      if (fconf.exists()) {\n        cores.load(solrHome, fconf);\n      } else {\n        log.info(\"no solr.xml file found - using default\");\n        cores.load(solrHome, new InputSource(new ByteArrayInputStream(DEF_SOLR_XML.getBytes(\"UTF-8\"))));\n        cores.configFile = fconf;\n      }\n      \n      solrConfigFilename = cores.getConfigFile().getName();\n      \n      return cores;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreContainer.Initializer#initialize().mjava","pathOld":"solr/src/java/org/apache/solr/core/CoreContainer.Initializer#initialize().mjava","sourceNew":"    // core container instantiation\n    public CoreContainer initialize() throws IOException,\n        ParserConfigurationException, SAXException {\n      CoreContainer cores = null;\n      String solrHome = SolrResourceLoader.locateSolrHome();\n      // TODO : fix broken logic confusing solr.xml with solrconfig.xml\n      File fconf = new File(solrHome, solrConfigFilename == null ? \"solr.xml\"\n          : solrConfigFilename);\n      log.info(\"looking for solr.xml: \" + fconf.getAbsolutePath());\n      cores = new CoreContainer();\n      \n      if (fconf.exists()) {\n        cores.load(solrHome, fconf);\n      } else {\n        log.info(\"no solr.xml file found - using default\");\n        cores.load(solrHome, new InputSource(new ByteArrayInputStream(DEF_SOLR_XML.getBytes(\"UTF-8\"))));\n        cores.configFile = fconf;\n      }\n      \n      solrConfigFilename = cores.getConfigFile().getName();\n      \n      return cores;\n    }\n\n","sourceOld":"    // core container instantiation\n    public CoreContainer initialize() throws IOException,\n        ParserConfigurationException, SAXException {\n      CoreContainer cores = null;\n      String solrHome = SolrResourceLoader.locateSolrHome();\n      // TODO : fix broken logic confusing solr.xml with solrconfig.xml\n      File fconf = new File(solrHome, solrConfigFilename == null ? \"solr.xml\"\n          : solrConfigFilename);\n      log.info(\"looking for solr.xml: \" + fconf.getAbsolutePath());\n      cores = new CoreContainer();\n      \n      if (fconf.exists()) {\n        cores.load(solrHome, fconf);\n      } else {\n        log.info(\"no solr.xml file found - using default\");\n        cores.load(solrHome, new InputSource(new ByteArrayInputStream(DEF_SOLR_XML.getBytes(\"UTF-8\"))));\n        cores.configFile = fconf;\n      }\n      \n      solrConfigFilename = cores.getConfigFile().getName();\n      \n      return cores;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreContainer.Initializer#initialize().mjava","pathOld":"solr/src/java/org/apache/solr/core/CoreContainer.Initializer#initialize().mjava","sourceNew":"    // core container instantiation\n    public CoreContainer initialize() throws IOException,\n        ParserConfigurationException, SAXException {\n      CoreContainer cores = null;\n      String solrHome = SolrResourceLoader.locateSolrHome();\n      // TODO : fix broken logic confusing solr.xml with solrconfig.xml\n      File fconf = new File(solrHome, solrConfigFilename == null ? \"solr.xml\"\n          : solrConfigFilename);\n      log.info(\"looking for solr.xml: \" + fconf.getAbsolutePath());\n      cores = new CoreContainer();\n      \n      if (fconf.exists()) {\n        cores.load(solrHome, fconf);\n      } else {\n        log.info(\"no solr.xml file found - using default\");\n        cores.load(solrHome, new InputSource(new ByteArrayInputStream(DEF_SOLR_XML.getBytes(\"UTF-8\"))));\n        cores.configFile = fconf;\n      }\n      \n      solrConfigFilename = cores.getConfigFile().getName();\n      \n      return cores;\n    }\n\n","sourceOld":"    // core container instantiation\n    public CoreContainer initialize() throws IOException,\n        ParserConfigurationException, SAXException {\n      CoreContainer cores = null;\n      String solrHome = SolrResourceLoader.locateSolrHome();\n      // TODO : fix broken logic confusing solr.xml with solrconfig.xml\n      File fconf = new File(solrHome, solrConfigFilename == null ? \"solr.xml\"\n          : solrConfigFilename);\n      log.info(\"looking for solr.xml: \" + fconf.getAbsolutePath());\n      cores = new CoreContainer();\n      \n      if (fconf.exists()) {\n        cores.load(solrHome, fconf);\n      } else {\n        log.info(\"no solr.xml file found - using default\");\n        cores.load(solrHome, new InputSource(new ByteArrayInputStream(DEF_SOLR_XML.getBytes(\"UTF-8\"))));\n        cores.configFile = fconf;\n      }\n      \n      solrConfigFilename = cores.getConfigFile().getName();\n      \n      return cores;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"19e21d98da803ac6174cb50a880e6289139756ca","date":1323342587,"type":3,"author":"Grant Ingersoll","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreContainer.Initializer#initialize().mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CoreContainer.Initializer#initialize().mjava","sourceNew":"    // core container instantiation\n    public CoreContainer initialize() throws IOException,\n        ParserConfigurationException, SAXException {\n      CoreContainer cores = null;\n      String solrHome = SolrResourceLoader.locateSolrHome();\n      // TODO : fix broken logic confusing solr.xml with solrconfig.xml\n      File fconf = new File(solrHome, solrConfigFilename == null ? \"solr.xml\"\n          : solrConfigFilename);\n      log.info(\"looking for solr.xml: \" + fconf.getAbsolutePath());\n      cores = new CoreContainer();\n      \n      if (fconf.exists()) {\n        cores.load(solrHome, fconf);\n      } else {\n        log.info(\"no solr.xml file found - using default\");\n        cores.load(solrHome, new InputSource(new ByteArrayInputStream(DEF_SOLR_XML.getBytes(\"UTF-8\"))));\n        cores.configFile = fconf;\n      }\n      \n      solrConfigFilename = cores.getConfigFile().getName();\n      if (cores.cores.isEmpty()){\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"No cores were created, please check the logs for errors\");\n      }\n      \n      return cores;\n    }\n\n","sourceOld":"    // core container instantiation\n    public CoreContainer initialize() throws IOException,\n        ParserConfigurationException, SAXException {\n      CoreContainer cores = null;\n      String solrHome = SolrResourceLoader.locateSolrHome();\n      // TODO : fix broken logic confusing solr.xml with solrconfig.xml\n      File fconf = new File(solrHome, solrConfigFilename == null ? \"solr.xml\"\n          : solrConfigFilename);\n      log.info(\"looking for solr.xml: \" + fconf.getAbsolutePath());\n      cores = new CoreContainer();\n      \n      if (fconf.exists()) {\n        cores.load(solrHome, fconf);\n      } else {\n        log.info(\"no solr.xml file found - using default\");\n        cores.load(solrHome, new InputSource(new ByteArrayInputStream(DEF_SOLR_XML.getBytes(\"UTF-8\"))));\n        cores.configFile = fconf;\n      }\n      \n      solrConfigFilename = cores.getConfigFile().getName();\n      \n      return cores;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"efc85580874d26ca9617f9ad61628d56f6859762","date":1323367273,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreContainer.Initializer#initialize().mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CoreContainer.Initializer#initialize().mjava","sourceNew":"    // core container instantiation\n    public CoreContainer initialize() throws IOException,\n        ParserConfigurationException, SAXException {\n      CoreContainer cores = null;\n      String solrHome = SolrResourceLoader.locateSolrHome();\n      // TODO : fix broken logic confusing solr.xml with solrconfig.xml\n      File fconf = new File(solrHome, solrConfigFilename == null ? \"solr.xml\"\n          : solrConfigFilename);\n      log.info(\"looking for solr.xml: \" + fconf.getAbsolutePath());\n      cores = new CoreContainer();\n      \n      if (fconf.exists()) {\n        cores.load(solrHome, fconf);\n      } else {\n        log.info(\"no solr.xml file found - using default\");\n        cores.load(solrHome, new InputSource(new ByteArrayInputStream(DEF_SOLR_XML.getBytes(\"UTF-8\"))));\n        cores.configFile = fconf;\n      }\n      \n      solrConfigFilename = cores.getConfigFile().getName();\n      if (cores.cores.isEmpty()){\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"No cores were created, please check the logs for errors\");\n      }\n      \n      return cores;\n    }\n\n","sourceOld":"    // core container instantiation\n    public CoreContainer initialize() throws IOException,\n        ParserConfigurationException, SAXException {\n      CoreContainer cores = null;\n      String solrHome = SolrResourceLoader.locateSolrHome();\n      // TODO : fix broken logic confusing solr.xml with solrconfig.xml\n      File fconf = new File(solrHome, solrConfigFilename == null ? \"solr.xml\"\n          : solrConfigFilename);\n      log.info(\"looking for solr.xml: \" + fconf.getAbsolutePath());\n      cores = new CoreContainer();\n      \n      if (fconf.exists()) {\n        cores.load(solrHome, fconf);\n      } else {\n        log.info(\"no solr.xml file found - using default\");\n        cores.load(solrHome, new InputSource(new ByteArrayInputStream(DEF_SOLR_XML.getBytes(\"UTF-8\"))));\n        cores.configFile = fconf;\n      }\n      \n      solrConfigFilename = cores.getConfigFile().getName();\n      \n      return cores;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","date":1323437438,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreContainer.Initializer#initialize().mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CoreContainer.Initializer#initialize().mjava","sourceNew":"    // core container instantiation\n    public CoreContainer initialize() throws IOException,\n        ParserConfigurationException, SAXException {\n      CoreContainer cores = null;\n      String solrHome = SolrResourceLoader.locateSolrHome();\n      // TODO : fix broken logic confusing solr.xml with solrconfig.xml\n      File fconf = new File(solrHome, solrConfigFilename == null ? \"solr.xml\"\n          : solrConfigFilename);\n      log.info(\"looking for solr.xml: \" + fconf.getAbsolutePath());\n      cores = new CoreContainer();\n      \n      if (fconf.exists()) {\n        cores.load(solrHome, fconf);\n      } else {\n        log.info(\"no solr.xml file found - using default\");\n        cores.load(solrHome, new InputSource(new ByteArrayInputStream(DEF_SOLR_XML.getBytes(\"UTF-8\"))));\n        cores.configFile = fconf;\n      }\n      \n      solrConfigFilename = cores.getConfigFile().getName();\n      if (cores.cores.isEmpty()){\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"No cores were created, please check the logs for errors\");\n      }\n      \n      return cores;\n    }\n\n","sourceOld":"    // core container instantiation\n    public CoreContainer initialize() throws IOException,\n        ParserConfigurationException, SAXException {\n      CoreContainer cores = null;\n      String solrHome = SolrResourceLoader.locateSolrHome();\n      // TODO : fix broken logic confusing solr.xml with solrconfig.xml\n      File fconf = new File(solrHome, solrConfigFilename == null ? \"solr.xml\"\n          : solrConfigFilename);\n      log.info(\"looking for solr.xml: \" + fconf.getAbsolutePath());\n      cores = new CoreContainer();\n      \n      if (fconf.exists()) {\n        cores.load(solrHome, fconf);\n      } else {\n        log.info(\"no solr.xml file found - using default\");\n        cores.load(solrHome, new InputSource(new ByteArrayInputStream(DEF_SOLR_XML.getBytes(\"UTF-8\"))));\n        cores.configFile = fconf;\n      }\n      \n      solrConfigFilename = cores.getConfigFile().getName();\n      \n      return cores;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2c007e7c4cf8c55bc2a5884e315123afaaeec87f","date":1327520966,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreContainer.Initializer#initialize().mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CoreContainer.Initializer#initialize().mjava","sourceNew":"    // core container instantiation\n    public CoreContainer initialize() throws IOException,\n        ParserConfigurationException, SAXException {\n      CoreContainer cores = null;\n      String solrHome = SolrResourceLoader.locateSolrHome();\n      File fconf = new File(solrHome, containerConfigFilename == null ? \"solr.xml\"\n          : containerConfigFilename);\n      log.info(\"looking for solr.xml: \" + fconf.getAbsolutePath());\n      cores = new CoreContainer();\n      \n      if (fconf.exists()) {\n        cores.load(solrHome, fconf);\n      } else {\n        log.info(\"no solr.xml file found - using default\");\n        cores.load(solrHome, new InputSource(new ByteArrayInputStream(DEF_SOLR_XML.getBytes(\"UTF-8\"))));\n        cores.configFile = fconf;\n      }\n      \n      containerConfigFilename = cores.getConfigFile().getName();\n      \n      return cores;\n    }\n\n","sourceOld":"    // core container instantiation\n    public CoreContainer initialize() throws IOException,\n        ParserConfigurationException, SAXException {\n      CoreContainer cores = null;\n      String solrHome = SolrResourceLoader.locateSolrHome();\n      // TODO : fix broken logic confusing solr.xml with solrconfig.xml\n      File fconf = new File(solrHome, solrConfigFilename == null ? \"solr.xml\"\n          : solrConfigFilename);\n      log.info(\"looking for solr.xml: \" + fconf.getAbsolutePath());\n      cores = new CoreContainer();\n      \n      if (fconf.exists()) {\n        cores.load(solrHome, fconf);\n      } else {\n        log.info(\"no solr.xml file found - using default\");\n        cores.load(solrHome, new InputSource(new ByteArrayInputStream(DEF_SOLR_XML.getBytes(\"UTF-8\"))));\n        cores.configFile = fconf;\n      }\n      \n      solrConfigFilename = cores.getConfigFile().getName();\n      if (cores.cores.isEmpty()){\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"No cores were created, please check the logs for errors\");\n      }\n      \n      return cores;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","date":1327523564,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreContainer.Initializer#initialize().mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CoreContainer.Initializer#initialize().mjava","sourceNew":"    // core container instantiation\n    public CoreContainer initialize() throws IOException,\n        ParserConfigurationException, SAXException {\n      CoreContainer cores = null;\n      String solrHome = SolrResourceLoader.locateSolrHome();\n      File fconf = new File(solrHome, containerConfigFilename == null ? \"solr.xml\"\n          : containerConfigFilename);\n      log.info(\"looking for solr.xml: \" + fconf.getAbsolutePath());\n      cores = new CoreContainer();\n      \n      if (fconf.exists()) {\n        cores.load(solrHome, fconf);\n      } else {\n        log.info(\"no solr.xml file found - using default\");\n        cores.load(solrHome, new InputSource(new ByteArrayInputStream(DEF_SOLR_XML.getBytes(\"UTF-8\"))));\n        cores.configFile = fconf;\n      }\n      \n      containerConfigFilename = cores.getConfigFile().getName();\n      \n      return cores;\n    }\n\n","sourceOld":"    // core container instantiation\n    public CoreContainer initialize() throws IOException,\n        ParserConfigurationException, SAXException {\n      CoreContainer cores = null;\n      String solrHome = SolrResourceLoader.locateSolrHome();\n      // TODO : fix broken logic confusing solr.xml with solrconfig.xml\n      File fconf = new File(solrHome, solrConfigFilename == null ? \"solr.xml\"\n          : solrConfigFilename);\n      log.info(\"looking for solr.xml: \" + fconf.getAbsolutePath());\n      cores = new CoreContainer();\n      \n      if (fconf.exists()) {\n        cores.load(solrHome, fconf);\n      } else {\n        log.info(\"no solr.xml file found - using default\");\n        cores.load(solrHome, new InputSource(new ByteArrayInputStream(DEF_SOLR_XML.getBytes(\"UTF-8\"))));\n        cores.configFile = fconf;\n      }\n      \n      solrConfigFilename = cores.getConfigFile().getName();\n      if (cores.cores.isEmpty()){\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"No cores were created, please check the logs for errors\");\n      }\n      \n      return cores;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0d22ac6a4146774c1bc8400160fc0b6150294e92","date":1327528604,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreContainer.Initializer#initialize().mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CoreContainer.Initializer#initialize().mjava","sourceNew":"    // core container instantiation\n    public CoreContainer initialize() throws IOException,\n        ParserConfigurationException, SAXException {\n      CoreContainer cores = null;\n      String solrHome = SolrResourceLoader.locateSolrHome();\n      File fconf = new File(solrHome, containerConfigFilename == null ? \"solr.xml\"\n          : containerConfigFilename);\n      log.info(\"looking for solr.xml: \" + fconf.getAbsolutePath());\n      cores = new CoreContainer();\n      \n      if (fconf.exists()) {\n        cores.load(solrHome, fconf);\n      } else {\n        log.info(\"no solr.xml file found - using default\");\n        cores.load(solrHome, new InputSource(new ByteArrayInputStream(DEF_SOLR_XML.getBytes(\"UTF-8\"))));\n        cores.configFile = fconf;\n      }\n      \n      containerConfigFilename = cores.getConfigFile().getName();\n      \n      return cores;\n    }\n\n","sourceOld":"    // core container instantiation\n    public CoreContainer initialize() throws IOException,\n        ParserConfigurationException, SAXException {\n      CoreContainer cores = null;\n      String solrHome = SolrResourceLoader.locateSolrHome();\n      // TODO : fix broken logic confusing solr.xml with solrconfig.xml\n      File fconf = new File(solrHome, solrConfigFilename == null ? \"solr.xml\"\n          : solrConfigFilename);\n      log.info(\"looking for solr.xml: \" + fconf.getAbsolutePath());\n      cores = new CoreContainer();\n      \n      if (fconf.exists()) {\n        cores.load(solrHome, fconf);\n      } else {\n        log.info(\"no solr.xml file found - using default\");\n        cores.load(solrHome, new InputSource(new ByteArrayInputStream(DEF_SOLR_XML.getBytes(\"UTF-8\"))));\n        cores.configFile = fconf;\n      }\n      \n      solrConfigFilename = cores.getConfigFile().getName();\n      if (cores.cores.isEmpty()){\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"No cores were created, please check the logs for errors\");\n      }\n      \n      return cores;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"083df6f7d2115772bdcf0f53c63aa859e664c69e","date":1332809829,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreContainer.Initializer#initialize().mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CoreContainer.Initializer#initialize().mjava","sourceNew":"    // core container instantiation\n    public CoreContainer initialize() throws IOException,\n        ParserConfigurationException, SAXException {\n      CoreContainer cores = null;\n      String solrHome = SolrResourceLoader.locateSolrHome();\n      File fconf = new File(solrHome, containerConfigFilename == null ? \"solr.xml\"\n          : containerConfigFilename);\n      log.info(\"looking for solr.xml: \" + fconf.getAbsolutePath());\n      cores = new CoreContainer(solrHome);\n      \n      if (fconf.exists()) {\n        cores.load(solrHome, fconf);\n      } else {\n        log.info(\"no solr.xml file found - using default\");\n        cores.load(solrHome, new InputSource(new ByteArrayInputStream(DEF_SOLR_XML.getBytes(\"UTF-8\"))));\n        cores.configFile = fconf;\n      }\n      \n      containerConfigFilename = cores.getConfigFile().getName();\n      \n      return cores;\n    }\n\n","sourceOld":"    // core container instantiation\n    public CoreContainer initialize() throws IOException,\n        ParserConfigurationException, SAXException {\n      CoreContainer cores = null;\n      String solrHome = SolrResourceLoader.locateSolrHome();\n      File fconf = new File(solrHome, containerConfigFilename == null ? \"solr.xml\"\n          : containerConfigFilename);\n      log.info(\"looking for solr.xml: \" + fconf.getAbsolutePath());\n      cores = new CoreContainer();\n      \n      if (fconf.exists()) {\n        cores.load(solrHome, fconf);\n      } else {\n        log.info(\"no solr.xml file found - using default\");\n        cores.load(solrHome, new InputSource(new ByteArrayInputStream(DEF_SOLR_XML.getBytes(\"UTF-8\"))));\n        cores.configFile = fconf;\n      }\n      \n      containerConfigFilename = cores.getConfigFile().getName();\n      \n      return cores;\n    }\n\n","bugFix":["e27d2a5a3c200620d24f5ef16f61fcf9b6f27c72"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b374d78db8148ec6796fdf37148b33897ab40a8c","date":1351606544,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreContainer.Initializer#initialize().mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CoreContainer.Initializer#initialize().mjava","sourceNew":"    // core container instantiation\n    public CoreContainer initialize() {\n      CoreContainer cores = null;\n      String solrHome = SolrResourceLoader.locateSolrHome();\n      File fconf = new File(solrHome, containerConfigFilename == null ? \"solr.xml\"\n          : containerConfigFilename);\n      log.info(\"looking for solr.xml: \" + fconf.getAbsolutePath());\n      cores = new CoreContainer(solrHome);\n      \n      if (fconf.exists()) {\n        cores.load(solrHome, fconf);\n      } else {\n        log.info(\"no solr.xml file found - using default\");\n        try {\n          cores.load(solrHome, new InputSource(new ByteArrayInputStream(DEF_SOLR_XML.getBytes(\"UTF-8\"))));\n        } catch (Exception e) {\n          throw new SolrException(ErrorCode.SERVER_ERROR,\n              \"CoreContainer.Initialize failed when trying to load default solr.xml file\", e);\n        }\n        cores.configFile = fconf;\n      }\n      \n      containerConfigFilename = cores.getConfigFile().getName();\n      \n      return cores;\n    }\n\n","sourceOld":"    // core container instantiation\n    public CoreContainer initialize() throws IOException,\n        ParserConfigurationException, SAXException {\n      CoreContainer cores = null;\n      String solrHome = SolrResourceLoader.locateSolrHome();\n      File fconf = new File(solrHome, containerConfigFilename == null ? \"solr.xml\"\n          : containerConfigFilename);\n      log.info(\"looking for solr.xml: \" + fconf.getAbsolutePath());\n      cores = new CoreContainer(solrHome);\n      \n      if (fconf.exists()) {\n        cores.load(solrHome, fconf);\n      } else {\n        log.info(\"no solr.xml file found - using default\");\n        cores.load(solrHome, new InputSource(new ByteArrayInputStream(DEF_SOLR_XML.getBytes(\"UTF-8\"))));\n        cores.configFile = fconf;\n      }\n      \n      containerConfigFilename = cores.getConfigFile().getName();\n      \n      return cores;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a837c064b67fa63a9394136e31218b908cdcf783","date":1362186072,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreContainer.Initializer#initialize().mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CoreContainer.Initializer#initialize().mjava","sourceNew":"    // core container instantiation\n    public CoreContainer initialize() throws FileNotFoundException {\n      CoreContainer cores = null;\n      String solrHome = SolrResourceLoader.locateSolrHome();\n      // ContainerConfigFilename could  could be a properties file\n      File fconf = new File(solrHome, containerConfigFilename == null ? \"solr.xml\"\n          : containerConfigFilename);\n\n      log.info(\"looking for solr config file: \" + fconf.getAbsolutePath());\n      cores = new CoreContainer(solrHome);\n\n      if (! fconf.exists()) {\n        if (StringUtils.isBlank(containerConfigFilename) || containerConfigFilename.endsWith(\".xml\")) {\n          fconf = new File(solrHome, SolrProperties.SOLR_PROPERTIES_FILE);\n        }\n      }\n      // Either we have a config file or not. If it ends in .properties, assume new-style.\n      \n      if (fconf.exists()) {\n        cores.load(solrHome, fconf);\n      } else {\n        log.info(\"no solr.xml or solr.properties file found - using default old-style solr.xml\");\n        try {\n          cores.load(solrHome, new ByteArrayInputStream(ConfigSolrXmlBackCompat.DEF_SOLR_XML.getBytes(\"UTF-8\")), true, null);\n        } catch (Exception e) {\n          throw new SolrException(ErrorCode.SERVER_ERROR,\n              \"CoreContainer.Initialize failed when trying to load default solr.xml file\", e);\n        }\n        cores.configFile = fconf;\n      }\n      \n      containerConfigFilename = cores.getConfigFile().getName();\n      \n      return cores;\n    }\n\n","sourceOld":"    // core container instantiation\n    public CoreContainer initialize() {\n      CoreContainer cores = null;\n      String solrHome = SolrResourceLoader.locateSolrHome();\n      File fconf = new File(solrHome, containerConfigFilename == null ? \"solr.xml\"\n          : containerConfigFilename);\n      log.info(\"looking for solr.xml: \" + fconf.getAbsolutePath());\n      cores = new CoreContainer(solrHome);\n      \n      if (fconf.exists()) {\n        cores.load(solrHome, fconf);\n      } else {\n        log.info(\"no solr.xml file found - using default\");\n        try {\n          cores.load(solrHome, new InputSource(new ByteArrayInputStream(DEF_SOLR_XML.getBytes(\"UTF-8\"))));\n        } catch (Exception e) {\n          throw new SolrException(ErrorCode.SERVER_ERROR,\n              \"CoreContainer.Initialize failed when trying to load default solr.xml file\", e);\n        }\n        cores.configFile = fconf;\n      }\n      \n      containerConfigFilename = cores.getConfigFile().getName();\n      \n      return cores;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9818efa55563ddfecdecafbdd43f4bee9f252e7d","date":1364853872,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreContainer.Initializer#initialize().mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CoreContainer.Initializer#initialize().mjava","sourceNew":"    // core container instantiation\n    public CoreContainer initialize() throws FileNotFoundException {\n      CoreContainer cores = null;\n      String solrHome = SolrResourceLoader.locateSolrHome();\n      // ContainerConfigFilename could  could be a properties file\n      File fconf = new File(solrHome, containerConfigFilename == null ? \"solr.xml\"\n          : containerConfigFilename);\n\n      log.info(\"looking for solr config file: \" + fconf.getAbsolutePath());\n      cores = new CoreContainer(solrHome);\n\n      // Either we have a config file or not.\n      \n      if (fconf.exists()) {\n        cores.load(solrHome, fconf);\n      } else {\n        log.info(\"no solr.xml found. using default old-style solr.xml\");\n        try {\n          cores.load(solrHome, new ByteArrayInputStream(ConfigSolrXml.DEF_SOLR_XML.getBytes(\"UTF-8\")), null);\n        } catch (Exception e) {\n          throw new SolrException(ErrorCode.SERVER_ERROR,\n              \"CoreContainer.Initialize failed when trying to load default solr.xml file\", e);\n        }\n        cores.configFile = fconf;\n      }\n      \n      containerConfigFilename = cores.getConfigFile().getName();\n      \n      return cores;\n    }\n\n","sourceOld":"    // core container instantiation\n    public CoreContainer initialize() throws FileNotFoundException {\n      CoreContainer cores = null;\n      String solrHome = SolrResourceLoader.locateSolrHome();\n      // ContainerConfigFilename could  could be a properties file\n      File fconf = new File(solrHome, containerConfigFilename == null ? \"solr.xml\"\n          : containerConfigFilename);\n\n      log.info(\"looking for solr config file: \" + fconf.getAbsolutePath());\n      cores = new CoreContainer(solrHome);\n\n      if (! fconf.exists()) {\n        if (StringUtils.isBlank(containerConfigFilename) || containerConfigFilename.endsWith(\".xml\")) {\n          fconf = new File(solrHome, SolrProperties.SOLR_PROPERTIES_FILE);\n        }\n      }\n      // Either we have a config file or not. If it ends in .properties, assume new-style.\n      \n      if (fconf.exists()) {\n        cores.load(solrHome, fconf);\n      } else {\n        log.info(\"no solr.xml or solr.properties file found - using default old-style solr.xml\");\n        try {\n          cores.load(solrHome, new ByteArrayInputStream(ConfigSolrXmlBackCompat.DEF_SOLR_XML.getBytes(\"UTF-8\")), true, null);\n        } catch (Exception e) {\n          throw new SolrException(ErrorCode.SERVER_ERROR,\n              \"CoreContainer.Initialize failed when trying to load default solr.xml file\", e);\n        }\n        cores.configFile = fconf;\n      }\n      \n      containerConfigFilename = cores.getConfigFile().getName();\n      \n      return cores;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7c73b6560033b6dcc828fbcc94ba9315c20f3c0","date":1366659310,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreContainer.Initializer#initialize().mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CoreContainer.Initializer#initialize().mjava","sourceNew":"    // core container instantiation\n    public CoreContainer initialize() throws FileNotFoundException {\n      CoreContainer cores = null;\n      String solrHome = SolrResourceLoader.locateSolrHome();\n      // ContainerConfigFilename could  could be a properties file\n      File fconf = new File(solrHome, containerConfigFilename == null ? \"solr.xml\"\n          : containerConfigFilename);\n\n      log.info(\"looking for solr config file: \" + fconf.getAbsolutePath());\n      cores = new CoreContainer(solrHome);\n\n      // Either we have a config file or not.\n      \n      if (fconf.exists()) {\n        cores.load(solrHome, fconf);\n      } else {\n        // Back compart support\n        log.info(\"no solr.xml found. using default old-style solr.xml\");\n        try {\n          cores.load(solrHome, new ByteArrayInputStream(ConfigSolrXmlOld.DEF_SOLR_XML.getBytes(\"UTF-8\")), null);\n        } catch (Exception e) {\n          throw new SolrException(ErrorCode.SERVER_ERROR,\n              \"CoreContainer.Initialize failed when trying to load default solr.xml file\", e);\n        }\n        cores.configFile = fconf;\n      }\n      \n      containerConfigFilename = cores.getConfigFile().getName();\n      \n      return cores;\n    }\n\n","sourceOld":"    // core container instantiation\n    public CoreContainer initialize() throws FileNotFoundException {\n      CoreContainer cores = null;\n      String solrHome = SolrResourceLoader.locateSolrHome();\n      // ContainerConfigFilename could  could be a properties file\n      File fconf = new File(solrHome, containerConfigFilename == null ? \"solr.xml\"\n          : containerConfigFilename);\n\n      log.info(\"looking for solr config file: \" + fconf.getAbsolutePath());\n      cores = new CoreContainer(solrHome);\n\n      // Either we have a config file or not.\n      \n      if (fconf.exists()) {\n        cores.load(solrHome, fconf);\n      } else {\n        log.info(\"no solr.xml found. using default old-style solr.xml\");\n        try {\n          cores.load(solrHome, new ByteArrayInputStream(ConfigSolrXml.DEF_SOLR_XML.getBytes(\"UTF-8\")), null);\n        } catch (Exception e) {\n          throw new SolrException(ErrorCode.SERVER_ERROR,\n              \"CoreContainer.Initialize failed when trying to load default solr.xml file\", e);\n        }\n        cores.configFile = fconf;\n      }\n      \n      containerConfigFilename = cores.getConfigFile().getName();\n      \n      return cores;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9409650933cc688e77e565092a25e58adfc2e18d","date":1366663164,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreContainer.Initializer#initialize().mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CoreContainer.Initializer#initialize().mjava","sourceNew":"    // core container instantiation\n    public CoreContainer initialize() throws FileNotFoundException {\n      CoreContainer cores = null;\n      String solrHome = SolrResourceLoader.locateSolrHome();\n      // ContainerConfigFilename could  could be a properties file\n      File fconf = new File(solrHome, \"solr.xml\");\n\n      log.info(\"looking for solr config file: \" + fconf.getAbsolutePath());\n      cores = new CoreContainer(solrHome);\n\n      // Either we have a config file or not.\n      \n      if (fconf.exists()) {\n        cores.load(solrHome, fconf);\n      } else {\n        // Back compart support\n        log.info(\"no solr.xml found. using default old-style solr.xml\");\n        try {\n          cores.load(solrHome, new ByteArrayInputStream(ConfigSolrXmlOld.DEF_SOLR_XML.getBytes(\"UTF-8\")), null);\n        } catch (Exception e) {\n          throw new SolrException(ErrorCode.SERVER_ERROR,\n              \"CoreContainer.Initialize failed when trying to load default solr.xml file\", e);\n        }\n        cores.configFile = fconf;\n      }\n      \n      return cores;\n    }\n\n","sourceOld":"    // core container instantiation\n    public CoreContainer initialize() throws FileNotFoundException {\n      CoreContainer cores = null;\n      String solrHome = SolrResourceLoader.locateSolrHome();\n      // ContainerConfigFilename could  could be a properties file\n      File fconf = new File(solrHome, containerConfigFilename == null ? \"solr.xml\"\n          : containerConfigFilename);\n\n      log.info(\"looking for solr config file: \" + fconf.getAbsolutePath());\n      cores = new CoreContainer(solrHome);\n\n      // Either we have a config file or not.\n      \n      if (fconf.exists()) {\n        cores.load(solrHome, fconf);\n      } else {\n        // Back compart support\n        log.info(\"no solr.xml found. using default old-style solr.xml\");\n        try {\n          cores.load(solrHome, new ByteArrayInputStream(ConfigSolrXmlOld.DEF_SOLR_XML.getBytes(\"UTF-8\")), null);\n        } catch (Exception e) {\n          throw new SolrException(ErrorCode.SERVER_ERROR,\n              \"CoreContainer.Initialize failed when trying to load default solr.xml file\", e);\n        }\n        cores.configFile = fconf;\n      }\n      \n      containerConfigFilename = cores.getConfigFile().getName();\n      \n      return cores;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e3eac61f0ed7a1ba8a2d2f6298467a8141dcbbc9","date":1366986755,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreContainer.Initializer#initialize().mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CoreContainer.Initializer#initialize().mjava","sourceNew":"    // core container instantiation\n    public CoreContainer initialize() throws FileNotFoundException {\n      CoreContainer cores = null;\n      String solrHome = SolrResourceLoader.locateSolrHome();\n      // ContainerConfigFilename could  could be a properties file\n      File fconf = new File(solrHome, \"solr.xml\");\n\n      log.info(\"looking for solr config file: \" + fconf.getAbsolutePath());\n      cores = new CoreContainer(solrHome);\n\n      // first we find zkhost, then we check for solr.xml in zk\n      // 1. look for zkhost from sys prop 2. look for zkhost in {solr.home}/solr.properties\n      \n      // Either we have a config file or not.\n      \n      if (fconf.exists()) {\n        cores.load(solrHome, fconf);\n      } else {\n        // Back compart support\n        log.info(\"no solr.xml found. using default old-style solr.xml\");\n        try {\n          cores.load(solrHome, new ByteArrayInputStream(ConfigSolrXmlOld.DEF_SOLR_XML.getBytes(\"UTF-8\")), null);\n        } catch (Exception e) {\n          throw new SolrException(ErrorCode.SERVER_ERROR,\n              \"CoreContainer.Initialize failed when trying to load default solr.xml file\", e);\n        }\n        cores.configFile = fconf;\n      }\n      \n      return cores;\n    }\n\n","sourceOld":"    // core container instantiation\n    public CoreContainer initialize() throws FileNotFoundException {\n      CoreContainer cores = null;\n      String solrHome = SolrResourceLoader.locateSolrHome();\n      // ContainerConfigFilename could  could be a properties file\n      File fconf = new File(solrHome, \"solr.xml\");\n\n      log.info(\"looking for solr config file: \" + fconf.getAbsolutePath());\n      cores = new CoreContainer(solrHome);\n\n      // Either we have a config file or not.\n      \n      if (fconf.exists()) {\n        cores.load(solrHome, fconf);\n      } else {\n        // Back compart support\n        log.info(\"no solr.xml found. using default old-style solr.xml\");\n        try {\n          cores.load(solrHome, new ByteArrayInputStream(ConfigSolrXmlOld.DEF_SOLR_XML.getBytes(\"UTF-8\")), null);\n        } catch (Exception e) {\n          throw new SolrException(ErrorCode.SERVER_ERROR,\n              \"CoreContainer.Initialize failed when trying to load default solr.xml file\", e);\n        }\n        cores.configFile = fconf;\n      }\n      \n      return cores;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d264f386d864b5751209060e8886ca9845f70469","date":1372172126,"type":4,"author":"Alan Woodward","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/core/CoreContainer.Initializer#initialize().mjava","sourceNew":null,"sourceOld":"    // core container instantiation\n    public CoreContainer initialize() throws FileNotFoundException {\n      CoreContainer cores = null;\n      String solrHome = SolrResourceLoader.locateSolrHome();\n      // ContainerConfigFilename could  could be a properties file\n      File fconf = new File(solrHome, \"solr.xml\");\n\n      log.info(\"looking for solr config file: \" + fconf.getAbsolutePath());\n      cores = new CoreContainer(solrHome);\n\n      // first we find zkhost, then we check for solr.xml in zk\n      // 1. look for zkhost from sys prop 2. look for zkhost in {solr.home}/solr.properties\n      \n      // Either we have a config file or not.\n      \n      if (fconf.exists()) {\n        cores.load(solrHome, fconf);\n      } else {\n        // Back compart support\n        log.info(\"no solr.xml found. using default old-style solr.xml\");\n        try {\n          cores.load(solrHome, new ByteArrayInputStream(ConfigSolrXmlOld.DEF_SOLR_XML.getBytes(\"UTF-8\")), null);\n        } catch (Exception e) {\n          throw new SolrException(ErrorCode.SERVER_ERROR,\n              \"CoreContainer.Initialize failed when trying to load default solr.xml file\", e);\n        }\n        cores.configFile = fconf;\n      }\n      \n      return cores;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"354983dcdf70c800bf2573d10b54a7391b1dc167","date":1372183171,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreContainer.Initializer#initialize().mjava","pathOld":"/dev/null","sourceNew":"    // core container instantiation\n    public CoreContainer initialize() throws FileNotFoundException {\n      CoreContainer cores = null;\n      String solrHome = SolrResourceLoader.locateSolrHome();\n      // ContainerConfigFilename could  could be a properties file\n      File fconf = new File(solrHome, \"solr.xml\");\n\n      log.info(\"looking for solr config file: \" + fconf.getAbsolutePath());\n      cores = new CoreContainer(solrHome);\n\n      // first we find zkhost, then we check for solr.xml in zk\n      // 1. look for zkhost from sys prop 2. look for zkhost in {solr.home}/solr.properties\n      \n      // Either we have a config file or not.\n      \n      if (fconf.exists()) {\n        cores.load(solrHome, fconf);\n      } else {\n        // Back compart support\n        log.info(\"no solr.xml found. using default old-style solr.xml\");\n        try {\n          cores.load(solrHome, new ByteArrayInputStream(ConfigSolrXmlOld.DEF_SOLR_XML.getBytes(\"UTF-8\")), null);\n        } catch (Exception e) {\n          throw new SolrException(ErrorCode.SERVER_ERROR,\n              \"CoreContainer.Initialize failed when trying to load default solr.xml file\", e);\n        }\n        cores.configFile = fconf;\n      }\n      \n      return cores;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"849494cf2f3a96af5c8c84995108ddd8456fcd04","date":1372277913,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreContainer.Initializer#initialize().mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CoreContainer.Initializer#initialize().mjava","sourceNew":"    // core container instantiation\n    public CoreContainer initialize() throws FileNotFoundException {\n      CoreContainer cores = null;\n      String solrHome = SolrResourceLoader.locateSolrHome();\n      // ContainerConfigFilename could  could be a properties file\n      File fconf = new File(solrHome, \"solr.xml\");\n\n      log.info(\"looking for solr config file: \" + fconf.getAbsolutePath());\n      cores = new CoreContainer(solrHome);\n\n      // first we find zkhost, then we check for solr.xml in zk\n      // 1. look for zkhost from sys prop 2. TODO: look for zkhost in {solr.home}/solr.properties\n      \n      // Either we have a config file or not.\n      \n      if (fconf.exists()) {\n        cores.load(solrHome, fconf);\n      } else {\n        // Back compart support\n        log.info(\"no solr.xml found. using default old-style solr.xml\");\n        try {\n          cores.load(solrHome, new ByteArrayInputStream(ConfigSolrXmlOld.DEF_SOLR_XML.getBytes(\"UTF-8\")), null);\n        } catch (Exception e) {\n          throw new SolrException(ErrorCode.SERVER_ERROR,\n              \"CoreContainer.Initialize failed when trying to load default solr.xml file\", e);\n        }\n        cores.configFile = fconf;\n      }\n      \n      return cores;\n    }\n\n","sourceOld":"    // core container instantiation\n    public CoreContainer initialize() throws FileNotFoundException {\n      CoreContainer cores = null;\n      String solrHome = SolrResourceLoader.locateSolrHome();\n      // ContainerConfigFilename could  could be a properties file\n      File fconf = new File(solrHome, \"solr.xml\");\n\n      log.info(\"looking for solr config file: \" + fconf.getAbsolutePath());\n      cores = new CoreContainer(solrHome);\n\n      // first we find zkhost, then we check for solr.xml in zk\n      // 1. look for zkhost from sys prop 2. look for zkhost in {solr.home}/solr.properties\n      \n      // Either we have a config file or not.\n      \n      if (fconf.exists()) {\n        cores.load(solrHome, fconf);\n      } else {\n        // Back compart support\n        log.info(\"no solr.xml found. using default old-style solr.xml\");\n        try {\n          cores.load(solrHome, new ByteArrayInputStream(ConfigSolrXmlOld.DEF_SOLR_XML.getBytes(\"UTF-8\")), null);\n        } catch (Exception e) {\n          throw new SolrException(ErrorCode.SERVER_ERROR,\n              \"CoreContainer.Initialize failed when trying to load default solr.xml file\", e);\n        }\n        cores.configFile = fconf;\n      }\n      \n      return cores;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7116474e2e390259937401cf928323e0cbc75e60","date":1372780249,"type":4,"author":"Alan Woodward","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/core/CoreContainer.Initializer#initialize().mjava","sourceNew":null,"sourceOld":"    // core container instantiation\n    public CoreContainer initialize() throws FileNotFoundException {\n      CoreContainer cores = null;\n      String solrHome = SolrResourceLoader.locateSolrHome();\n      // ContainerConfigFilename could  could be a properties file\n      File fconf = new File(solrHome, \"solr.xml\");\n\n      log.info(\"looking for solr config file: \" + fconf.getAbsolutePath());\n      cores = new CoreContainer(solrHome);\n\n      // first we find zkhost, then we check for solr.xml in zk\n      // 1. look for zkhost from sys prop 2. TODO: look for zkhost in {solr.home}/solr.properties\n      \n      // Either we have a config file or not.\n      \n      if (fconf.exists()) {\n        cores.load(solrHome, fconf);\n      } else {\n        // Back compart support\n        log.info(\"no solr.xml found. using default old-style solr.xml\");\n        try {\n          cores.load(solrHome, new ByteArrayInputStream(ConfigSolrXmlOld.DEF_SOLR_XML.getBytes(\"UTF-8\")), null);\n        } catch (Exception e) {\n          throw new SolrException(ErrorCode.SERVER_ERROR,\n              \"CoreContainer.Initialize failed when trying to load default solr.xml file\", e);\n        }\n        cores.configFile = fconf;\n      }\n      \n      return cores;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"37a0f60745e53927c4c876cfe5b5a58170f0646c","date":1373994005,"type":4,"author":"Han Jiang","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/core/CoreContainer.Initializer#initialize().mjava","sourceNew":null,"sourceOld":"    // core container instantiation\n    public CoreContainer initialize() throws FileNotFoundException {\n      CoreContainer cores = null;\n      String solrHome = SolrResourceLoader.locateSolrHome();\n      // ContainerConfigFilename could  could be a properties file\n      File fconf = new File(solrHome, \"solr.xml\");\n\n      log.info(\"looking for solr config file: \" + fconf.getAbsolutePath());\n      cores = new CoreContainer(solrHome);\n\n      // first we find zkhost, then we check for solr.xml in zk\n      // 1. look for zkhost from sys prop 2. look for zkhost in {solr.home}/solr.properties\n      \n      // Either we have a config file or not.\n      \n      if (fconf.exists()) {\n        cores.load(solrHome, fconf);\n      } else {\n        // Back compart support\n        log.info(\"no solr.xml found. using default old-style solr.xml\");\n        try {\n          cores.load(solrHome, new ByteArrayInputStream(ConfigSolrXmlOld.DEF_SOLR_XML.getBytes(\"UTF-8\")), null);\n        } catch (Exception e) {\n          throw new SolrException(ErrorCode.SERVER_ERROR,\n              \"CoreContainer.Initialize failed when trying to load default solr.xml file\", e);\n        }\n        cores.configFile = fconf;\n      }\n      \n      return cores;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7116474e2e390259937401cf928323e0cbc75e60":["849494cf2f3a96af5c8c84995108ddd8456fcd04"],"e3eac61f0ed7a1ba8a2d2f6298467a8141dcbbc9":["9409650933cc688e77e565092a25e58adfc2e18d"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":["e3eac61f0ed7a1ba8a2d2f6298467a8141dcbbc9","7116474e2e390259937401cf928323e0cbc75e60"],"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00":["c26f00b574427b55127e869b935845554afde1fa","19e21d98da803ac6174cb50a880e6289139756ca"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"354983dcdf70c800bf2573d10b54a7391b1dc167":["d264f386d864b5751209060e8886ca9845f70469"],"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d":["19e21d98da803ac6174cb50a880e6289139756ca","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"d264f386d864b5751209060e8886ca9845f70469":["e3eac61f0ed7a1ba8a2d2f6298467a8141dcbbc9"],"c7c73b6560033b6dcc828fbcc94ba9315c20f3c0":["9818efa55563ddfecdecafbdd43f4bee9f252e7d"],"083df6f7d2115772bdcf0f53c63aa859e664c69e":["2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"849494cf2f3a96af5c8c84995108ddd8456fcd04":["354983dcdf70c800bf2573d10b54a7391b1dc167"],"9818efa55563ddfecdecafbdd43f4bee9f252e7d":["a837c064b67fa63a9394136e31218b908cdcf783"],"0d22ac6a4146774c1bc8400160fc0b6150294e92":["19e21d98da803ac6174cb50a880e6289139756ca","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"9409650933cc688e77e565092a25e58adfc2e18d":["c7c73b6560033b6dcc828fbcc94ba9315c20f3c0"],"19e21d98da803ac6174cb50a880e6289139756ca":["c26f00b574427b55127e869b935845554afde1fa"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b374d78db8148ec6796fdf37148b33897ab40a8c":["083df6f7d2115772bdcf0f53c63aa859e664c69e"],"2c007e7c4cf8c55bc2a5884e315123afaaeec87f":["19e21d98da803ac6174cb50a880e6289139756ca"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a837c064b67fa63a9394136e31218b908cdcf783":["b374d78db8148ec6796fdf37148b33897ab40a8c"],"efc85580874d26ca9617f9ad61628d56f6859762":["c26f00b574427b55127e869b935845554afde1fa","19e21d98da803ac6174cb50a880e6289139756ca"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7116474e2e390259937401cf928323e0cbc75e60"]},"commit2Childs":{"7116474e2e390259937401cf928323e0cbc75e60":["37a0f60745e53927c4c876cfe5b5a58170f0646c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e3eac61f0ed7a1ba8a2d2f6298467a8141dcbbc9":["37a0f60745e53927c4c876cfe5b5a58170f0646c","d264f386d864b5751209060e8886ca9845f70469"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":[],"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00":[],"c26f00b574427b55127e869b935845554afde1fa":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","19e21d98da803ac6174cb50a880e6289139756ca","efc85580874d26ca9617f9ad61628d56f6859762"],"354983dcdf70c800bf2573d10b54a7391b1dc167":["849494cf2f3a96af5c8c84995108ddd8456fcd04"],"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d":[],"d264f386d864b5751209060e8886ca9845f70469":["354983dcdf70c800bf2573d10b54a7391b1dc167"],"c7c73b6560033b6dcc828fbcc94ba9315c20f3c0":["9409650933cc688e77e565092a25e58adfc2e18d"],"083df6f7d2115772bdcf0f53c63aa859e664c69e":["b374d78db8148ec6796fdf37148b33897ab40a8c"],"849494cf2f3a96af5c8c84995108ddd8456fcd04":["7116474e2e390259937401cf928323e0cbc75e60"],"9818efa55563ddfecdecafbdd43f4bee9f252e7d":["c7c73b6560033b6dcc828fbcc94ba9315c20f3c0"],"0d22ac6a4146774c1bc8400160fc0b6150294e92":[],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"9409650933cc688e77e565092a25e58adfc2e18d":["e3eac61f0ed7a1ba8a2d2f6298467a8141dcbbc9"],"19e21d98da803ac6174cb50a880e6289139756ca":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","0d22ac6a4146774c1bc8400160fc0b6150294e92","2c007e7c4cf8c55bc2a5884e315123afaaeec87f","efc85580874d26ca9617f9ad61628d56f6859762"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c26f00b574427b55127e869b935845554afde1fa","c903c3d15906a3da96b8c0c2fb704491005fdbdb","a258fbb26824fd104ed795e5d9033d2d040049ee"],"2c007e7c4cf8c55bc2a5884e315123afaaeec87f":["a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","083df6f7d2115772bdcf0f53c63aa859e664c69e","0d22ac6a4146774c1bc8400160fc0b6150294e92"],"b374d78db8148ec6796fdf37148b33897ab40a8c":["a837c064b67fa63a9394136e31218b908cdcf783"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"a837c064b67fa63a9394136e31218b908cdcf783":["9818efa55563ddfecdecafbdd43f4bee9f252e7d"],"efc85580874d26ca9617f9ad61628d56f6859762":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["37a0f60745e53927c4c876cfe5b5a58170f0646c","ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","0d22ac6a4146774c1bc8400160fc0b6150294e92","a258fbb26824fd104ed795e5d9033d2d040049ee","efc85580874d26ca9617f9ad61628d56f6859762","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}