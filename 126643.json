{"path":"contrib/queryparser/src/test/org/apache/lucene/queryParser/standard/TestQPHelper.CannedTokenStream#incrementToken().mjava","commits":[{"id":"eb94fea58d0ae0c50600a3e0bfa85db754a3e01e","date":1249929999,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/queryparser/src/test/org/apache/lucene/queryParser/standard/TestQPHelper.CannedTokenStream#incrementToken().mjava","pathOld":"/dev/null","sourceNew":"    public boolean incrementToken() {\n      if (upto == 4) {\n        return false;\n      }\n      PositionIncrementAttribute posIncr = (PositionIncrementAttribute) addAttribute(PositionIncrementAttribute.class);\n      TermAttribute term = (TermAttribute) addAttribute(TermAttribute.class);\n      if (upto == 0) {\n        posIncr.setPositionIncrement(1);\n        term.setTermBuffer(\"a\");\n      } else if (upto == 1) {\n        posIncr.setPositionIncrement(1);\n        term.setTermBuffer(\"b\");\n      } else if (upto == 2) {\n        posIncr.setPositionIncrement(0);\n        term.setTermBuffer(\"c\");\n      } else {\n        posIncr.setPositionIncrement(0);\n        term.setTermBuffer(\"d\");\n      }\n      upto++;\n      return true;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8d78f014fded44fbde905f4f84cdc21907b371e8","date":1254383623,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/queryparser/src/test/org/apache/lucene/queryParser/standard/TestQPHelper.CannedTokenStream#incrementToken().mjava","pathOld":"contrib/queryparser/src/test/org/apache/lucene/queryParser/standard/TestQPHelper.CannedTokenStream#incrementToken().mjava","sourceNew":"    public boolean incrementToken() {\n      if (upto == 4) {\n        return false;\n      }\n      PositionIncrementAttribute posIncr = addAttribute(PositionIncrementAttribute.class);\n      TermAttribute term = addAttribute(TermAttribute.class);\n      if (upto == 0) {\n        posIncr.setPositionIncrement(1);\n        term.setTermBuffer(\"a\");\n      } else if (upto == 1) {\n        posIncr.setPositionIncrement(1);\n        term.setTermBuffer(\"b\");\n      } else if (upto == 2) {\n        posIncr.setPositionIncrement(0);\n        term.setTermBuffer(\"c\");\n      } else {\n        posIncr.setPositionIncrement(0);\n        term.setTermBuffer(\"d\");\n      }\n      upto++;\n      return true;\n    }\n\n","sourceOld":"    public boolean incrementToken() {\n      if (upto == 4) {\n        return false;\n      }\n      PositionIncrementAttribute posIncr = (PositionIncrementAttribute) addAttribute(PositionIncrementAttribute.class);\n      TermAttribute term = (TermAttribute) addAttribute(TermAttribute.class);\n      if (upto == 0) {\n        posIncr.setPositionIncrement(1);\n        term.setTermBuffer(\"a\");\n      } else if (upto == 1) {\n        posIncr.setPositionIncrement(1);\n        term.setTermBuffer(\"b\");\n      } else if (upto == 2) {\n        posIncr.setPositionIncrement(0);\n        term.setTermBuffer(\"c\");\n      } else {\n        posIncr.setPositionIncrement(0);\n        term.setTermBuffer(\"d\");\n      }\n      upto++;\n      return true;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"439b0fe2f799d1c722151e88e32bdefad8d34ebe","date":1255282509,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/queryparser/src/test/org/apache/lucene/queryParser/standard/TestQPHelper.CannedTokenStream#incrementToken().mjava","pathOld":"contrib/queryparser/src/test/org/apache/lucene/queryParser/standard/TestQPHelper.CannedTokenStream#incrementToken().mjava","sourceNew":"    public boolean incrementToken() {\n      if (upto == 4) {\n        return false;\n      }\n      if (upto == 0) {\n        posIncr.setPositionIncrement(1);\n        term.setTermBuffer(\"a\");\n      } else if (upto == 1) {\n        posIncr.setPositionIncrement(1);\n        term.setTermBuffer(\"b\");\n      } else if (upto == 2) {\n        posIncr.setPositionIncrement(0);\n        term.setTermBuffer(\"c\");\n      } else {\n        posIncr.setPositionIncrement(0);\n        term.setTermBuffer(\"d\");\n      }\n      upto++;\n      return true;\n    }\n\n","sourceOld":"    public boolean incrementToken() {\n      if (upto == 4) {\n        return false;\n      }\n      PositionIncrementAttribute posIncr = addAttribute(PositionIncrementAttribute.class);\n      TermAttribute term = addAttribute(TermAttribute.class);\n      if (upto == 0) {\n        posIncr.setPositionIncrement(1);\n        term.setTermBuffer(\"a\");\n      } else if (upto == 1) {\n        posIncr.setPositionIncrement(1);\n        term.setTermBuffer(\"b\");\n      } else if (upto == 2) {\n        posIncr.setPositionIncrement(0);\n        term.setTermBuffer(\"c\");\n      } else {\n        posIncr.setPositionIncrement(0);\n        term.setTermBuffer(\"d\");\n      }\n      upto++;\n      return true;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d57eb7c98c08c03af6e4cd83509df31c81ac16af","date":1257684312,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"contrib/queryparser/src/test/org/apache/lucene/queryParser/standard/TestQPHelper.CannedTokenStream#incrementToken().mjava","pathOld":"contrib/queryparser/src/test/org/apache/lucene/queryParser/standard/TestQPHelper.CannedTokenStream#incrementToken().mjava","sourceNew":"    @Override\n    public boolean incrementToken() {\n      if (upto == 4) {\n        return false;\n      }\n      if (upto == 0) {\n        posIncr.setPositionIncrement(1);\n        term.setTermBuffer(\"a\");\n      } else if (upto == 1) {\n        posIncr.setPositionIncrement(1);\n        term.setTermBuffer(\"b\");\n      } else if (upto == 2) {\n        posIncr.setPositionIncrement(0);\n        term.setTermBuffer(\"c\");\n      } else {\n        posIncr.setPositionIncrement(0);\n        term.setTermBuffer(\"d\");\n      }\n      upto++;\n      return true;\n    }\n\n","sourceOld":"    public boolean incrementToken() {\n      if (upto == 4) {\n        return false;\n      }\n      if (upto == 0) {\n        posIncr.setPositionIncrement(1);\n        term.setTermBuffer(\"a\");\n      } else if (upto == 1) {\n        posIncr.setPositionIncrement(1);\n        term.setTermBuffer(\"b\");\n      } else if (upto == 2) {\n        posIncr.setPositionIncrement(0);\n        term.setTermBuffer(\"c\");\n      } else {\n        posIncr.setPositionIncrement(0);\n        term.setTermBuffer(\"d\");\n      }\n      upto++;\n      return true;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"360d15dc189fb48153cb62234f7d20819e4e292e","date":1263562938,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/queryparser/src/test/org/apache/lucene/queryParser/standard/TestQPHelper.CannedTokenStream#incrementToken().mjava","pathOld":"contrib/queryparser/src/test/org/apache/lucene/queryParser/standard/TestQPHelper.CannedTokenStream#incrementToken().mjava","sourceNew":"    @Override\n    public boolean incrementToken() {\n      clearAttributes();\n      if (upto == 4) {\n        return false;\n      }\n      if (upto == 0) {\n        posIncr.setPositionIncrement(1);\n        term.setTermBuffer(\"a\");\n      } else if (upto == 1) {\n        posIncr.setPositionIncrement(1);\n        term.setTermBuffer(\"b\");\n      } else if (upto == 2) {\n        posIncr.setPositionIncrement(0);\n        term.setTermBuffer(\"c\");\n      } else {\n        posIncr.setPositionIncrement(0);\n        term.setTermBuffer(\"d\");\n      }\n      upto++;\n      return true;\n    }\n\n","sourceOld":"    @Override\n    public boolean incrementToken() {\n      if (upto == 4) {\n        return false;\n      }\n      if (upto == 0) {\n        posIncr.setPositionIncrement(1);\n        term.setTermBuffer(\"a\");\n      } else if (upto == 1) {\n        posIncr.setPositionIncrement(1);\n        term.setTermBuffer(\"b\");\n      } else if (upto == 2) {\n        posIncr.setPositionIncrement(0);\n        term.setTermBuffer(\"c\");\n      } else {\n        posIncr.setPositionIncrement(0);\n        term.setTermBuffer(\"d\");\n      }\n      upto++;\n      return true;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/standard/TestQPHelper.CannedTokenStream#incrementToken().mjava","pathOld":"contrib/queryparser/src/test/org/apache/lucene/queryParser/standard/TestQPHelper.CannedTokenStream#incrementToken().mjava","sourceNew":"    @Override\n    public boolean incrementToken() {\n      clearAttributes();\n      if (upto == 4) {\n        return false;\n      }\n      if (upto == 0) {\n        posIncr.setPositionIncrement(1);\n        term.setTermBuffer(\"a\");\n      } else if (upto == 1) {\n        posIncr.setPositionIncrement(1);\n        term.setTermBuffer(\"b\");\n      } else if (upto == 2) {\n        posIncr.setPositionIncrement(0);\n        term.setTermBuffer(\"c\");\n      } else {\n        posIncr.setPositionIncrement(0);\n        term.setTermBuffer(\"d\");\n      }\n      upto++;\n      return true;\n    }\n\n","sourceOld":"    @Override\n    public boolean incrementToken() {\n      clearAttributes();\n      if (upto == 4) {\n        return false;\n      }\n      if (upto == 0) {\n        posIncr.setPositionIncrement(1);\n        term.setTermBuffer(\"a\");\n      } else if (upto == 1) {\n        posIncr.setPositionIncrement(1);\n        term.setTermBuffer(\"b\");\n      } else if (upto == 2) {\n        posIncr.setPositionIncrement(0);\n        term.setTermBuffer(\"c\");\n      } else {\n        posIncr.setPositionIncrement(0);\n        term.setTermBuffer(\"d\");\n      }\n      upto++;\n      return true;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"eb94fea58d0ae0c50600a3e0bfa85db754a3e01e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d57eb7c98c08c03af6e4cd83509df31c81ac16af":["439b0fe2f799d1c722151e88e32bdefad8d34ebe"],"439b0fe2f799d1c722151e88e32bdefad8d34ebe":["8d78f014fded44fbde905f4f84cdc21907b371e8"],"8d78f014fded44fbde905f4f84cdc21907b371e8":["eb94fea58d0ae0c50600a3e0bfa85db754a3e01e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["360d15dc189fb48153cb62234f7d20819e4e292e"],"360d15dc189fb48153cb62234f7d20819e4e292e":["d57eb7c98c08c03af6e4cd83509df31c81ac16af"]},"commit2Childs":{"eb94fea58d0ae0c50600a3e0bfa85db754a3e01e":["8d78f014fded44fbde905f4f84cdc21907b371e8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["eb94fea58d0ae0c50600a3e0bfa85db754a3e01e"],"d57eb7c98c08c03af6e4cd83509df31c81ac16af":["360d15dc189fb48153cb62234f7d20819e4e292e"],"439b0fe2f799d1c722151e88e32bdefad8d34ebe":["d57eb7c98c08c03af6e4cd83509df31c81ac16af"],"8d78f014fded44fbde905f4f84cdc21907b371e8":["439b0fe2f799d1c722151e88e32bdefad8d34ebe"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"360d15dc189fb48153cb62234f7d20819e4e292e":["9454a6510e2db155fb01faa5c049b06ece95fab9"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}