{"path":"lucene/core/src/test/org/apache/lucene/document/TestLatLonShape#testRandomPolygons().mjava","commits":[{"id":"09c1e6d465800c73af60624bf9d4459a19f7940c","date":1579293280,"type":1,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/document/TestLatLonShape#testRandomPolygons().mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/document/TestLatLonShape#testRandomPolygons().mjava","sourceNew":"  @Ignore\n  public void testRandomPolygons() throws Exception {\n    int numVertices;\n    int numPolys = RandomNumbers.randomIntBetween(random(), 10, 20);\n\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    Polygon polygon;\n    Document document;\n    for (int i = 0; i < numPolys; i++) {\n      document = new Document();\n      numVertices = TestUtil.nextInt(random(), 100000, 200000);\n      polygon = GeoTestUtil.createRegularPolygon(0, 0, atLeast(1000000), numVertices);\n      addPolygonsToDoc(FIELDNAME, document, polygon);\n      writer.addDocument(document);\n    }\n\n    // search and verify we found our doc\n    IndexReader reader = writer.getReader();\n    IndexSearcher searcher = newSearcher(reader);\n    assertEquals(0, searcher.count(newRectQuery(\"field\", -89.9, -89.8, -179.9, -179.8d)));\n\n    reader.close();\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  @Ignore\n  public void testRandomPolygons() throws Exception {\n    int numVertices;\n    int numPolys = RandomNumbers.randomIntBetween(random(), 10, 20);\n\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    Polygon polygon;\n    Document document;\n    for (int i = 0; i < numPolys; i++) {\n      document = new Document();\n      numVertices = TestUtil.nextInt(random(), 100000, 200000);\n      polygon = GeoTestUtil.createRegularPolygon(0, 0, atLeast(1000000), numVertices);\n      addPolygonsToDoc(FIELDNAME, document, polygon);\n      writer.addDocument(document);\n    }\n\n    // search and verify we found our doc\n    IndexReader reader = writer.getReader();\n    IndexSearcher searcher = newSearcher(reader);\n    assertEquals(0, searcher.count(newRectQuery(\"field\", -89.9, -89.8, -179.9, -179.8d)));\n\n    reader.close();\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"09c1e6d465800c73af60624bf9d4459a19f7940c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["09c1e6d465800c73af60624bf9d4459a19f7940c"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["09c1e6d465800c73af60624bf9d4459a19f7940c"],"09c1e6d465800c73af60624bf9d4459a19f7940c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}