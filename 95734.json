{"path":"solr/core/src/java/org/apache/solr/core/ZkContainer#getSolrConfigFromZk(String,String,SolrResourceLoader).mjava","commits":[{"id":"b29abed5661c7911e4b45d5a3d79a186268e28c4","date":1366675770,"type":1,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/ZkContainer#getSolrConfigFromZk(String,String,SolrResourceLoader).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CoreContainer#getSolrConfigFromZk(String,String,SolrResourceLoader).mjava","sourceNew":"  public SolrConfig getSolrConfigFromZk(String zkConfigName, String solrConfigFileName,\n      SolrResourceLoader resourceLoader) {\n    SolrConfig cfg = null;\n    try {\n      byte[] config = zkController.getConfigFileData(zkConfigName,\n          solrConfigFileName);\n      InputSource is = new InputSource(new ByteArrayInputStream(config));\n      is.setSystemId(SystemIdResolver\n          .createSystemIdFromResourceName(solrConfigFileName));\n      cfg = solrConfigFileName == null ? new SolrConfig(resourceLoader,\n          SolrConfig.DEFAULT_CONF_FILE, is) : new SolrConfig(resourceLoader,\n          solrConfigFileName, is);\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"getSolrConfigFromZK failed for \" + zkConfigName + \" \"\n              + solrConfigFileName, e);\n    }\n    return cfg;\n  }\n\n","sourceOld":"  public SolrConfig getSolrConfigFromZk(String zkConfigName, String solrConfigFileName,\n      SolrResourceLoader resourceLoader) {\n    SolrConfig cfg = null;\n    try {\n      byte[] config = zkController.getConfigFileData(zkConfigName,\n          solrConfigFileName);\n      InputSource is = new InputSource(new ByteArrayInputStream(config));\n      is.setSystemId(SystemIdResolver\n          .createSystemIdFromResourceName(solrConfigFileName));\n      cfg = solrConfigFileName == null ? new SolrConfig(resourceLoader,\n          SolrConfig.DEFAULT_CONF_FILE, is) : new SolrConfig(resourceLoader,\n          solrConfigFileName, is);\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"getSolrConfigFromZK failed for \" + zkConfigName + \" \"\n              + solrConfigFileName, e);\n    }\n    return cfg;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2d4e985daefcb892b529223b478c47985fc3c483","date":1395658491,"type":4,"author":"Alan Woodward","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/core/ZkContainer#getSolrConfigFromZk(String,String,SolrResourceLoader).mjava","sourceNew":null,"sourceOld":"  public SolrConfig getSolrConfigFromZk(String zkConfigName, String solrConfigFileName,\n      SolrResourceLoader resourceLoader) {\n    SolrConfig cfg = null;\n    try {\n      byte[] config = zkController.getConfigFileData(zkConfigName,\n          solrConfigFileName);\n      InputSource is = new InputSource(new ByteArrayInputStream(config));\n      is.setSystemId(SystemIdResolver\n          .createSystemIdFromResourceName(solrConfigFileName));\n      cfg = solrConfigFileName == null ? new SolrConfig(resourceLoader,\n          SolrConfig.DEFAULT_CONF_FILE, is) : new SolrConfig(resourceLoader,\n          solrConfigFileName, is);\n    } catch (Exception e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n          \"getSolrConfigFromZK failed for \" + zkConfigName + \" \"\n              + solrConfigFileName, e);\n    }\n    return cfg;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b29abed5661c7911e4b45d5a3d79a186268e28c4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2d4e985daefcb892b529223b478c47985fc3c483":["b29abed5661c7911e4b45d5a3d79a186268e28c4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2d4e985daefcb892b529223b478c47985fc3c483"]},"commit2Childs":{"b29abed5661c7911e4b45d5a3d79a186268e28c4":["2d4e985daefcb892b529223b478c47985fc3c483"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b29abed5661c7911e4b45d5a3d79a186268e28c4"],"2d4e985daefcb892b529223b478c47985fc3c483":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}