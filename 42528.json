{"path":"lucene/facet/src/java/org/apache/lucene/facet/FacetsCollector#search(IndexSearcher,Query,Filter,int,Sort,Collector).mjava","commits":[{"id":"fd83550e4b0bdd36e7d9dca9273264100782440b","date":1385761753,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/FacetsCollector#search(IndexSearcher,Query,Filter,int,Sort,Collector).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/Facets#search(IndexSearcher,Query,Filter,int,Sort,FacetsCollector).mjava","sourceNew":"  /** Utility method, to search and also collect all hits\n   *  into the provided {@link Collector}. */\n  public static TopFieldDocs search(IndexSearcher searcher, Query q, Filter filter, int n, Sort sort, Collector fc) throws IOException {\n    if (sort == null) {\n      throw new IllegalArgumentException(\"sort must not be null\");\n    }\n    return (TopFieldDocs) doSearch(searcher, null, q, filter, n, sort, false, false, fc);\n  }\n\n","sourceOld":"  /** Utility method, to search and also collect all hits\n   *  into the provided {@link FacetsCollector}. */\n  public static TopFieldDocs search(IndexSearcher searcher, Query q, Filter filter, int n, Sort sort, FacetsCollector fc) throws IOException {\n    if (sort == null) {\n      throw new IllegalArgumentException(\"sort must not be null\");\n    }\n    return (TopFieldDocs) doSearch(searcher, null, q, filter, n, sort, false, false, fc);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cc728b07df73b197e6d940d27f9b08b63918f13","date":1388834348,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/FacetsCollector#search(IndexSearcher,Query,Filter,int,Sort,Collector).mjava","pathOld":"/dev/null","sourceNew":"  /** Utility method, to search and also collect all hits\n   *  into the provided {@link Collector}. */\n  public static TopFieldDocs search(IndexSearcher searcher, Query q, Filter filter, int n, Sort sort, Collector fc) throws IOException {\n    if (sort == null) {\n      throw new IllegalArgumentException(\"sort must not be null\");\n    }\n    return (TopFieldDocs) doSearch(searcher, null, q, filter, n, sort, false, false, fc);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dd6be878365e339c75cc43ad7d5df95ab4ea21e5","date":1435762101,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/FacetsCollector#search(IndexSearcher,Query,int,Sort,Collector).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/FacetsCollector#search(IndexSearcher,Query,Filter,int,Sort,Collector).mjava","sourceNew":"  /** Utility method, to search and also collect all hits\n   *  into the provided {@link Collector}. */\n  public static TopFieldDocs search(IndexSearcher searcher, Query q, int n, Sort sort, Collector fc) throws IOException {\n    if (sort == null) {\n      throw new IllegalArgumentException(\"sort must not be null\");\n    }\n    return (TopFieldDocs) doSearch(searcher, null, q, n, sort, false, false, fc);\n  }\n\n","sourceOld":"  /** Utility method, to search and also collect all hits\n   *  into the provided {@link Collector}. */\n  public static TopFieldDocs search(IndexSearcher searcher, Query q, Filter filter, int n, Sort sort, Collector fc) throws IOException {\n    if (sort == null) {\n      throw new IllegalArgumentException(\"sort must not be null\");\n    }\n    return (TopFieldDocs) doSearch(searcher, null, q, filter, n, sort, false, false, fc);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"fd83550e4b0bdd36e7d9dca9273264100782440b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","fd83550e4b0bdd36e7d9dca9273264100782440b"],"dd6be878365e339c75cc43ad7d5df95ab4ea21e5":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["dd6be878365e339c75cc43ad7d5df95ab4ea21e5"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["fd83550e4b0bdd36e7d9dca9273264100782440b","3cc728b07df73b197e6d940d27f9b08b63918f13"],"fd83550e4b0bdd36e7d9dca9273264100782440b":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["dd6be878365e339c75cc43ad7d5df95ab4ea21e5"],"dd6be878365e339c75cc43ad7d5df95ab4ea21e5":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}