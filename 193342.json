{"path":"src/java/org/apache/solr/util/FindClasses[SuggestMissingFactories]#FindClasses(File...).mjava","commits":[{"id":"ff7c5f059d5a1dc549d20043d719ec940ef90bda","date":1194565212,"type":0,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"src/java/org/apache/solr/util/FindClasses[SuggestMissingFactories]#FindClasses(File...).mjava","pathOld":"/dev/null","sourceNew":"  public FindClasses(File... jars) throws IOException {\n\n        \n    jarFiles = new JarFile[jars.length];\n    URL[] urls = new URL[jars.length];\n    try {\n      for (int i =0; i < jars.length; i++) {\n        jarFiles[i] = new JarFile(jars[i]);\n        urls[i] = jars[i].toURL();\n      }\n    } catch (MalformedURLException e) {\n      throw new RuntimeException\n        (\"WTF, how can JarFile.toURL() be malformed?\", e);\n    }\n        \n    this.cl = new URLClassLoader(urls, this.getClass().getClassLoader());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c90f01e1c0f11ee52212ab38c6d4393b3be8a646","date":1223059437,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/util/FindClasses[SuggestMissingFactories]#FindClasses(File...).mjava","pathOld":"src/java/org/apache/solr/util/FindClasses[SuggestMissingFactories]#FindClasses(File...).mjava","sourceNew":"  public FindClasses(File... jars) throws IOException {\n\n        \n    jarFiles = new JarFile[jars.length];\n    URL[] urls = new URL[jars.length];\n    try {\n      for (int i =0; i < jars.length; i++) {\n        jarFiles[i] = new JarFile(jars[i]);\n        urls[i] = jars[i].toURI().toURL();\n      }\n    } catch (MalformedURLException e) {\n      throw new RuntimeException\n        (\"WTF, how can JarFile.toURL() be malformed?\", e);\n    }\n        \n    this.cl = new URLClassLoader(urls, this.getClass().getClassLoader());\n  }\n\n","sourceOld":"  public FindClasses(File... jars) throws IOException {\n\n        \n    jarFiles = new JarFile[jars.length];\n    URL[] urls = new URL[jars.length];\n    try {\n      for (int i =0; i < jars.length; i++) {\n        jarFiles[i] = new JarFile(jars[i]);\n        urls[i] = jars[i].toURL();\n      }\n    } catch (MalformedURLException e) {\n      throw new RuntimeException\n        (\"WTF, how can JarFile.toURL() be malformed?\", e);\n    }\n        \n    this.cl = new URLClassLoader(urls, this.getClass().getClassLoader());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/util/FindClasses[SuggestMissingFactories]#FindClasses(File...).mjava","pathOld":"src/java/org/apache/solr/util/FindClasses[SuggestMissingFactories]#FindClasses(File...).mjava","sourceNew":"  public FindClasses(File... jars) throws IOException {\n\n        \n    jarFiles = new JarFile[jars.length];\n    URL[] urls = new URL[jars.length];\n    try {\n      for (int i =0; i < jars.length; i++) {\n        jarFiles[i] = new JarFile(jars[i]);\n        urls[i] = jars[i].toURI().toURL();\n      }\n    } catch (MalformedURLException e) {\n      throw new RuntimeException\n        (\"WTF, how can JarFile.toURL() be malformed?\", e);\n    }\n        \n    this.cl = new URLClassLoader(urls, this.getClass().getClassLoader());\n  }\n\n","sourceOld":"  public FindClasses(File... jars) throws IOException {\n\n        \n    jarFiles = new JarFile[jars.length];\n    URL[] urls = new URL[jars.length];\n    try {\n      for (int i =0; i < jars.length; i++) {\n        jarFiles[i] = new JarFile(jars[i]);\n        urls[i] = jars[i].toURI().toURL();\n      }\n    } catch (MalformedURLException e) {\n      throw new RuntimeException\n        (\"WTF, how can JarFile.toURL() be malformed?\", e);\n    }\n        \n    this.cl = new URLClassLoader(urls, this.getClass().getClassLoader());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c90f01e1c0f11ee52212ab38c6d4393b3be8a646":["ff7c5f059d5a1dc549d20043d719ec940ef90bda"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ff7c5f059d5a1dc549d20043d719ec940ef90bda":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["c90f01e1c0f11ee52212ab38c6d4393b3be8a646"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"c90f01e1c0f11ee52212ab38c6d4393b3be8a646":["ad94625fb8d088209f46650c8097196fec67f00c"],"ff7c5f059d5a1dc549d20043d719ec940ef90bda":["c90f01e1c0f11ee52212ab38c6d4393b3be8a646"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["ff7c5f059d5a1dc549d20043d719ec940ef90bda"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}