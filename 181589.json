{"path":"solr/solrj/src/java/org/apache/solr/common/util/NamedList#NamedList(List[Object]).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/NamedList#NamedList(List[Object]).mjava","pathOld":"solr/src/common/org/apache/solr/common/util/NamedList#NamedList(List[Object]).mjava","sourceNew":"  /**\n   * Creates an instance backed by an explicitly specified list of\n   * pairwise names/values.\n   *\n   * <p>\n   * When using this constructor, runtime typesafety is only garunteed if the all\n   * even numbered elements of the input list are of type \"T\".\n   * </p>\n   *\n   * @param nameValuePairs underlying List which should be used to implement a NamedList\n   * @deprecated Use {@link #NamedList(java.util.Map.Entry[])} for the NamedList instantiation\n   */\n  @Deprecated\n  public NamedList(List<Object> nameValuePairs) {\n    nvPairs=nameValuePairs;\n  }\n\n","sourceOld":"  /**\n   * Creates an instance backed by an explicitly specified list of\n   * pairwise names/values.\n   *\n   * <p>\n   * When using this constructor, runtime typesafety is only garunteed if the all\n   * even numbered elements of the input list are of type \"T\".\n   * </p>\n   *\n   * @param nameValuePairs underlying List which should be used to implement a NamedList\n   * @deprecated Use {@link #NamedList(java.util.Map.Entry[])} for the NamedList instantiation\n   */\n  @Deprecated\n  public NamedList(List<Object> nameValuePairs) {\n    nvPairs=nameValuePairs;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/NamedList#NamedList(List[Object]).mjava","pathOld":"solr/src/common/org/apache/solr/common/util/NamedList#NamedList(List[Object]).mjava","sourceNew":"  /**\n   * Creates an instance backed by an explicitly specified list of\n   * pairwise names/values.\n   *\n   * <p>\n   * When using this constructor, runtime typesafety is only garunteed if the all\n   * even numbered elements of the input list are of type \"T\".\n   * </p>\n   *\n   * @param nameValuePairs underlying List which should be used to implement a NamedList\n   * @deprecated Use {@link #NamedList(java.util.Map.Entry[])} for the NamedList instantiation\n   */\n  @Deprecated\n  public NamedList(List<Object> nameValuePairs) {\n    nvPairs=nameValuePairs;\n  }\n\n","sourceOld":"  /**\n   * Creates an instance backed by an explicitly specified list of\n   * pairwise names/values.\n   *\n   * <p>\n   * When using this constructor, runtime typesafety is only garunteed if the all\n   * even numbered elements of the input list are of type \"T\".\n   * </p>\n   *\n   * @param nameValuePairs underlying List which should be used to implement a NamedList\n   * @deprecated Use {@link #NamedList(java.util.Map.Entry[])} for the NamedList instantiation\n   */\n  @Deprecated\n  public NamedList(List<Object> nameValuePairs) {\n    nvPairs=nameValuePairs;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/NamedList#NamedList(List[Object]).mjava","pathOld":"solr/src/common/org/apache/solr/common/util/NamedList#NamedList(List[Object]).mjava","sourceNew":"  /**\n   * Creates an instance backed by an explicitly specified list of\n   * pairwise names/values.\n   *\n   * <p>\n   * When using this constructor, runtime typesafety is only garunteed if the all\n   * even numbered elements of the input list are of type \"T\".\n   * </p>\n   *\n   * @param nameValuePairs underlying List which should be used to implement a NamedList\n   * @deprecated Use {@link #NamedList(java.util.Map.Entry[])} for the NamedList instantiation\n   */\n  @Deprecated\n  public NamedList(List<Object> nameValuePairs) {\n    nvPairs=nameValuePairs;\n  }\n\n","sourceOld":"  /**\n   * Creates an instance backed by an explicitly specified list of\n   * pairwise names/values.\n   *\n   * <p>\n   * When using this constructor, runtime typesafety is only garunteed if the all\n   * even numbered elements of the input list are of type \"T\".\n   * </p>\n   *\n   * @param nameValuePairs underlying List which should be used to implement a NamedList\n   * @deprecated Use {@link #NamedList(java.util.Map.Entry[])} for the NamedList instantiation\n   */\n  @Deprecated\n  public NamedList(List<Object> nameValuePairs) {\n    nvPairs=nameValuePairs;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"87ec9ddb9890f9278a2c1198fb570881cbf048a3","date":1335150499,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/NamedList#NamedList(List[Object]).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/NamedList#NamedList(List[Object]).mjava","sourceNew":"  /**\n   * Creates an instance backed by an explicitly specified list of\n   * pairwise names/values.\n   *\n   * <p>\n   * When using this constructor, runtime typesafety is only guaranteed if the all\n   * even numbered elements of the input list are of type \"T\".\n   * </p>\n   *\n   * @param nameValuePairs underlying List which should be used to implement a NamedList\n   * @deprecated Use {@link #NamedList(java.util.Map.Entry[])} for the NamedList instantiation\n   */\n  @Deprecated\n  public NamedList(List<Object> nameValuePairs) {\n    nvPairs=nameValuePairs;\n  }\n\n","sourceOld":"  /**\n   * Creates an instance backed by an explicitly specified list of\n   * pairwise names/values.\n   *\n   * <p>\n   * When using this constructor, runtime typesafety is only garunteed if the all\n   * even numbered elements of the input list are of type \"T\".\n   * </p>\n   *\n   * @param nameValuePairs underlying List which should be used to implement a NamedList\n   * @deprecated Use {@link #NamedList(java.util.Map.Entry[])} for the NamedList instantiation\n   */\n  @Deprecated\n  public NamedList(List<Object> nameValuePairs) {\n    nvPairs=nameValuePairs;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"09cb84e8f7cc3f05b42efa917e6377e8909c74b5","date":1369035595,"type":3,"author":"Shawn Heisey","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/NamedList#NamedList(List[Object]).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/NamedList#NamedList(List[Object]).mjava","sourceNew":"  /**\n   * Creates an instance backed by an explicitly specified list of\n   * pairwise names/values.\n   *\n   * <p>\n   * When using this constructor, runtime type safety is only guaranteed if\n   * all even numbered elements of the input list are of type \"T\".\n   * </p>\n   *\n   * @param nameValuePairs underlying List which should be used to implement a NamedList\n   * @deprecated Use {@link #NamedList(java.util.Map.Entry[])} for the NamedList instantiation\n   */\n  @Deprecated\n  public NamedList(List<Object> nameValuePairs) {\n    nvPairs=nameValuePairs;\n  }\n\n","sourceOld":"  /**\n   * Creates an instance backed by an explicitly specified list of\n   * pairwise names/values.\n   *\n   * <p>\n   * When using this constructor, runtime typesafety is only guaranteed if the all\n   * even numbered elements of the input list are of type \"T\".\n   * </p>\n   *\n   * @param nameValuePairs underlying List which should be used to implement a NamedList\n   * @deprecated Use {@link #NamedList(java.util.Map.Entry[])} for the NamedList instantiation\n   */\n  @Deprecated\n  public NamedList(List<Object> nameValuePairs) {\n    nvPairs=nameValuePairs;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"63a1978c6710c767fa084741e3d6424840003a62","date":1495850671,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/NamedList#NamedList(List[Object]).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/NamedList#NamedList(List[Object]).mjava","sourceNew":"  /**\n   * Creates an instance backed by an explicitly specified list of\n   * pairwise names/values.\n   *\n   * <p>\n   * When using this constructor, runtime type safety is only guaranteed if\n   * all even numbered elements of the input list are of type \"T\".\n   * </p>\n   * <p>\n   * This method is package protected and exists solely so SimpleOrderedMap and clone() can utilize it\n   * </p>\n   * <p>\n   * TODO: this method was formerly public, now that it's not we can change the impl details of \n   * this class to be based on a Map.Entry[] \n   * </p>\n   * @lucene.internal\n   * @see #nameValueMapToList\n   */\n  NamedList(List<Object> nameValuePairs) {\n    nvPairs=nameValuePairs;\n  }\n\n","sourceOld":"  /**\n   * Creates an instance backed by an explicitly specified list of\n   * pairwise names/values.\n   *\n   * <p>\n   * When using this constructor, runtime type safety is only guaranteed if\n   * all even numbered elements of the input list are of type \"T\".\n   * </p>\n   *\n   * @param nameValuePairs underlying List which should be used to implement a NamedList\n   * @deprecated Use {@link #NamedList(java.util.Map.Entry[])} for the NamedList instantiation\n   */\n  @Deprecated\n  public NamedList(List<Object> nameValuePairs) {\n    nvPairs=nameValuePairs;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d1f5728f32a4a256b36cfabd7a2636452f599bb9","date":1496231774,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/NamedList#NamedList(List[Object]).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/NamedList#NamedList(List[Object]).mjava","sourceNew":"  /**\n   * Creates an instance backed by an explicitly specified list of\n   * pairwise names/values.\n   *\n   * <p>\n   * When using this constructor, runtime type safety is only guaranteed if\n   * all even numbered elements of the input list are of type \"T\".\n   * </p>\n   * <p>\n   * This method is package protected and exists solely so SimpleOrderedMap and clone() can utilize it\n   * </p>\n   * <p>\n   * TODO: this method was formerly public, now that it's not we can change the impl details of \n   * this class to be based on a Map.Entry[] \n   * </p>\n   * @lucene.internal\n   * @see #nameValueMapToList\n   */\n  NamedList(List<Object> nameValuePairs) {\n    nvPairs=nameValuePairs;\n  }\n\n","sourceOld":"  /**\n   * Creates an instance backed by an explicitly specified list of\n   * pairwise names/values.\n   *\n   * <p>\n   * When using this constructor, runtime type safety is only guaranteed if\n   * all even numbered elements of the input list are of type \"T\".\n   * </p>\n   *\n   * @param nameValuePairs underlying List which should be used to implement a NamedList\n   * @deprecated Use {@link #NamedList(java.util.Map.Entry[])} for the NamedList instantiation\n   */\n  @Deprecated\n  public NamedList(List<Object> nameValuePairs) {\n    nvPairs=nameValuePairs;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/NamedList#NamedList(List[Object]).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/NamedList#NamedList(List[Object]).mjava","sourceNew":"  /**\n   * Creates an instance backed by an explicitly specified list of\n   * pairwise names/values.\n   *\n   * <p>\n   * When using this constructor, runtime type safety is only guaranteed if\n   * all even numbered elements of the input list are of type \"T\".\n   * </p>\n   * <p>\n   * This method is package protected and exists solely so SimpleOrderedMap and clone() can utilize it\n   * </p>\n   * <p>\n   * TODO: this method was formerly public, now that it's not we can change the impl details of \n   * this class to be based on a Map.Entry[] \n   * </p>\n   * @lucene.internal\n   * @see #nameValueMapToList\n   */\n  NamedList(List<Object> nameValuePairs) {\n    nvPairs=nameValuePairs;\n  }\n\n","sourceOld":"  /**\n   * Creates an instance backed by an explicitly specified list of\n   * pairwise names/values.\n   *\n   * <p>\n   * When using this constructor, runtime type safety is only guaranteed if\n   * all even numbered elements of the input list are of type \"T\".\n   * </p>\n   *\n   * @param nameValuePairs underlying List which should be used to implement a NamedList\n   * @deprecated Use {@link #NamedList(java.util.Map.Entry[])} for the NamedList instantiation\n   */\n  @Deprecated\n  public NamedList(List<Object> nameValuePairs) {\n    nvPairs=nameValuePairs;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e9017cf144952056066919f1ebc7897ff9bd71b1":["09cb84e8f7cc3f05b42efa917e6377e8909c74b5","63a1978c6710c767fa084741e3d6424840003a62"],"87ec9ddb9890f9278a2c1198fb570881cbf048a3":["c26f00b574427b55127e869b935845554afde1fa"],"63a1978c6710c767fa084741e3d6424840003a62":["09cb84e8f7cc3f05b42efa917e6377e8909c74b5"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d1f5728f32a4a256b36cfabd7a2636452f599bb9":["09cb84e8f7cc3f05b42efa917e6377e8909c74b5","63a1978c6710c767fa084741e3d6424840003a62"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d1f5728f32a4a256b36cfabd7a2636452f599bb9"],"09cb84e8f7cc3f05b42efa917e6377e8909c74b5":["87ec9ddb9890f9278a2c1198fb570881cbf048a3"]},"commit2Childs":{"e9017cf144952056066919f1ebc7897ff9bd71b1":[],"63a1978c6710c767fa084741e3d6424840003a62":["e9017cf144952056066919f1ebc7897ff9bd71b1","d1f5728f32a4a256b36cfabd7a2636452f599bb9"],"87ec9ddb9890f9278a2c1198fb570881cbf048a3":["09cb84e8f7cc3f05b42efa917e6377e8909c74b5"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["87ec9ddb9890f9278a2c1198fb570881cbf048a3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"d1f5728f32a4a256b36cfabd7a2636452f599bb9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"09cb84e8f7cc3f05b42efa917e6377e8909c74b5":["e9017cf144952056066919f1ebc7897ff9bd71b1","63a1978c6710c767fa084741e3d6424840003a62","d1f5728f32a4a256b36cfabd7a2636452f599bb9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e9017cf144952056066919f1ebc7897ff9bd71b1","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}