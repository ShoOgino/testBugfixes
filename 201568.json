{"path":"contrib/memory/src/java/org/apache/lucene/index/memory/PatternAnalyzer#PatternAnalyzer(Version,Pattern,boolean,Set).mjava","commits":[{"id":"ba1116b3450a9c1642c89445d131b37344055245","date":1256329517,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/memory/src/java/org/apache/lucene/index/memory/PatternAnalyzer#PatternAnalyzer(Version,Pattern,boolean,Set).mjava","pathOld":"contrib/memory/src/java/org/apache/lucene/index/memory/PatternAnalyzer#PatternAnalyzer(Pattern,boolean,Set).mjava","sourceNew":"  /**\n   * Constructs a new instance with the given parameters.\n   * \n   * @param matchVersion If >= {@link Version#LUCENE_29}, StopFilter.enablePositionIncrement is set to true\n   * @param pattern\n   *            a regular expression delimiting tokens\n   * @param toLowerCase\n   *            if <code>true</code> returns tokens after applying\n   *            String.toLowerCase()\n   * @param stopWords\n   *            if non-null, ignores all tokens that are contained in the\n   *            given stop set (after previously having applied toLowerCase()\n   *            if applicable). For example, created via\n   *            {@link StopFilter#makeStopSet(String[])}and/or\n   *            {@link org.apache.lucene.analysis.WordlistLoader}as in\n   *            <code>WordlistLoader.getWordSet(new File(\"samples/fulltext/stopwords.txt\")</code>\n   *            or <a href=\"http://www.unine.ch/info/clef/\">other stop words\n   *            lists </a>.\n   */\n  public PatternAnalyzer(Version matchVersion, Pattern pattern, boolean toLowerCase, Set stopWords) {\n    if (pattern == null) \n      throw new IllegalArgumentException(\"pattern must not be null\");\n    \n    if (eqPattern(NON_WORD_PATTERN, pattern)) pattern = NON_WORD_PATTERN;\n    else if (eqPattern(WHITESPACE_PATTERN, pattern)) pattern = WHITESPACE_PATTERN;\n    \n    if (stopWords != null && stopWords.size() == 0) stopWords = null;\n    \n    this.pattern = pattern;\n    this.toLowerCase = toLowerCase;\n    this.stopWords = stopWords;\n    this.matchVersion = matchVersion;\n  }\n\n","sourceOld":"  /**\n   * Constructs a new instance with the given parameters.\n   * \n   * @param pattern\n   *            a regular expression delimiting tokens\n   * @param toLowerCase\n   *            if <code>true</code> returns tokens after applying\n   *            String.toLowerCase()\n   * @param stopWords\n   *            if non-null, ignores all tokens that are contained in the\n   *            given stop set (after previously having applied toLowerCase()\n   *            if applicable). For example, created via\n   *            {@link StopFilter#makeStopSet(String[])}and/or\n   *            {@link org.apache.lucene.analysis.WordlistLoader}as in\n   *            <code>WordlistLoader.getWordSet(new File(\"samples/fulltext/stopwords.txt\")</code>\n   *            or <a href=\"http://www.unine.ch/info/clef/\">other stop words\n   *            lists </a>.\n   */\n  public PatternAnalyzer(Pattern pattern, boolean toLowerCase, Set stopWords) {\n    if (pattern == null) \n      throw new IllegalArgumentException(\"pattern must not be null\");\n    \n    if (eqPattern(NON_WORD_PATTERN, pattern)) pattern = NON_WORD_PATTERN;\n    else if (eqPattern(WHITESPACE_PATTERN, pattern)) pattern = WHITESPACE_PATTERN;\n    \n    if (stopWords != null && stopWords.size() == 0) stopWords = null;\n    \n    this.pattern = pattern;\n    this.toLowerCase = toLowerCase;\n    this.stopWords = stopWords;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f11899016a0460a7ea2e4b008d002e1e75c7d867","date":1256772085,"type":5,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/memory/src/java/org/apache/lucene/index/memory/PatternAnalyzer#PatternAnalyzer(Version,Pattern,boolean,Set[#]).mjava","pathOld":"contrib/memory/src/java/org/apache/lucene/index/memory/PatternAnalyzer#PatternAnalyzer(Version,Pattern,boolean,Set).mjava","sourceNew":"  /**\n   * Constructs a new instance with the given parameters.\n   * \n   * @param matchVersion If >= {@link Version#LUCENE_29}, StopFilter.enablePositionIncrement is set to true\n   * @param pattern\n   *            a regular expression delimiting tokens\n   * @param toLowerCase\n   *            if <code>true</code> returns tokens after applying\n   *            String.toLowerCase()\n   * @param stopWords\n   *            if non-null, ignores all tokens that are contained in the\n   *            given stop set (after previously having applied toLowerCase()\n   *            if applicable). For example, created via\n   *            {@link StopFilter#makeStopSet(String[])}and/or\n   *            {@link org.apache.lucene.analysis.WordlistLoader}as in\n   *            <code>WordlistLoader.getWordSet(new File(\"samples/fulltext/stopwords.txt\")</code>\n   *            or <a href=\"http://www.unine.ch/info/clef/\">other stop words\n   *            lists </a>.\n   */\n  public PatternAnalyzer(Version matchVersion, Pattern pattern, boolean toLowerCase, Set<?> stopWords) {\n    if (pattern == null) \n      throw new IllegalArgumentException(\"pattern must not be null\");\n    \n    if (eqPattern(NON_WORD_PATTERN, pattern)) pattern = NON_WORD_PATTERN;\n    else if (eqPattern(WHITESPACE_PATTERN, pattern)) pattern = WHITESPACE_PATTERN;\n    \n    if (stopWords != null && stopWords.size() == 0) stopWords = null;\n    \n    this.pattern = pattern;\n    this.toLowerCase = toLowerCase;\n    this.stopWords = stopWords;\n    this.matchVersion = matchVersion;\n  }\n\n","sourceOld":"  /**\n   * Constructs a new instance with the given parameters.\n   * \n   * @param matchVersion If >= {@link Version#LUCENE_29}, StopFilter.enablePositionIncrement is set to true\n   * @param pattern\n   *            a regular expression delimiting tokens\n   * @param toLowerCase\n   *            if <code>true</code> returns tokens after applying\n   *            String.toLowerCase()\n   * @param stopWords\n   *            if non-null, ignores all tokens that are contained in the\n   *            given stop set (after previously having applied toLowerCase()\n   *            if applicable). For example, created via\n   *            {@link StopFilter#makeStopSet(String[])}and/or\n   *            {@link org.apache.lucene.analysis.WordlistLoader}as in\n   *            <code>WordlistLoader.getWordSet(new File(\"samples/fulltext/stopwords.txt\")</code>\n   *            or <a href=\"http://www.unine.ch/info/clef/\">other stop words\n   *            lists </a>.\n   */\n  public PatternAnalyzer(Version matchVersion, Pattern pattern, boolean toLowerCase, Set stopWords) {\n    if (pattern == null) \n      throw new IllegalArgumentException(\"pattern must not be null\");\n    \n    if (eqPattern(NON_WORD_PATTERN, pattern)) pattern = NON_WORD_PATTERN;\n    else if (eqPattern(WHITESPACE_PATTERN, pattern)) pattern = WHITESPACE_PATTERN;\n    \n    if (stopWords != null && stopWords.size() == 0) stopWords = null;\n    \n    this.pattern = pattern;\n    this.toLowerCase = toLowerCase;\n    this.stopWords = stopWords;\n    this.matchVersion = matchVersion;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f11899016a0460a7ea2e4b008d002e1e75c7d867"],"f11899016a0460a7ea2e4b008d002e1e75c7d867":["ba1116b3450a9c1642c89445d131b37344055245"],"ba1116b3450a9c1642c89445d131b37344055245":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ba1116b3450a9c1642c89445d131b37344055245"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"f11899016a0460a7ea2e4b008d002e1e75c7d867":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ba1116b3450a9c1642c89445d131b37344055245":["f11899016a0460a7ea2e4b008d002e1e75c7d867"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}