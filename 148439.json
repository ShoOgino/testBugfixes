{"path":"lucene/core/src/test/org/apache/lucene/index/TestTransactionRollback#rollBackLast(int).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestTransactionRollback#rollBackLast(int).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestTransactionRollback#rollBackLast(int).mjava","sourceNew":"  //Rolls back index to a chosen ID\n  private void rollBackLast(int id) throws Exception {\n\t\t\n    // System.out.println(\"Attempting to rollback to \"+id);\n    String ids=\"-\"+id;\n    IndexCommit last=null;\n    Collection<IndexCommit> commits = DirectoryReader.listCommits(dir);\n    for (Iterator<IndexCommit> iterator = commits.iterator(); iterator.hasNext();) {\n      IndexCommit commit =  iterator.next();\n      Map<String,String> ud=commit.getUserData();\n      if (ud.size() > 0)\n        if (ud.get(\"index\").endsWith(ids))\n          last=commit;\n    }\n\n    if (last==null)\n      throw new RuntimeException(\"Couldn't find commit point \"+id);\n\t\t\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random)).setIndexDeletionPolicy(\n        new RollbackDeletionPolicy(id)).setIndexCommit(last));\n    Map<String,String> data = new HashMap<String,String>();\n    data.put(\"index\", \"Rolled back to 1-\"+id);\n    w.commit(data);\n    w.close();\n  }\n\n","sourceOld":"  //Rolls back index to a chosen ID\n  private void rollBackLast(int id) throws Exception {\n\t\t\n    // System.out.println(\"Attempting to rollback to \"+id);\n    String ids=\"-\"+id;\n    IndexCommit last=null;\n    Collection<IndexCommit> commits = DirectoryReader.listCommits(dir);\n    for (Iterator<IndexCommit> iterator = commits.iterator(); iterator.hasNext();) {\n      IndexCommit commit =  iterator.next();\n      Map<String,String> ud=commit.getUserData();\n      if (ud.size() > 0)\n        if (ud.get(\"index\").endsWith(ids))\n          last=commit;\n    }\n\n    if (last==null)\n      throw new RuntimeException(\"Couldn't find commit point \"+id);\n\t\t\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random)).setIndexDeletionPolicy(\n        new RollbackDeletionPolicy(id)).setIndexCommit(last));\n    Map<String,String> data = new HashMap<String,String>();\n    data.put(\"index\", \"Rolled back to 1-\"+id);\n    w.commit(data);\n    w.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"629c38c4ae4e303d0617e05fbfe508140b32f0a3","date":1334500904,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestTransactionRollback#rollBackLast(int).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestTransactionRollback#rollBackLast(int).mjava","sourceNew":"  //Rolls back index to a chosen ID\n  private void rollBackLast(int id) throws Exception {\n\t\t\n    // System.out.println(\"Attempting to rollback to \"+id);\n    String ids=\"-\"+id;\n    IndexCommit last=null;\n    Collection<IndexCommit> commits = DirectoryReader.listCommits(dir);\n    for (Iterator<IndexCommit> iterator = commits.iterator(); iterator.hasNext();) {\n      IndexCommit commit =  iterator.next();\n      Map<String,String> ud=commit.getUserData();\n      if (ud.size() > 0)\n        if (ud.get(\"index\").endsWith(ids))\n          last=commit;\n    }\n\n    if (last==null)\n      throw new RuntimeException(\"Couldn't find commit point \"+id);\n\t\t\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random())).setIndexDeletionPolicy(\n        new RollbackDeletionPolicy(id)).setIndexCommit(last));\n    Map<String,String> data = new HashMap<String,String>();\n    data.put(\"index\", \"Rolled back to 1-\"+id);\n    w.commit(data);\n    w.close();\n  }\n\n","sourceOld":"  //Rolls back index to a chosen ID\n  private void rollBackLast(int id) throws Exception {\n\t\t\n    // System.out.println(\"Attempting to rollback to \"+id);\n    String ids=\"-\"+id;\n    IndexCommit last=null;\n    Collection<IndexCommit> commits = DirectoryReader.listCommits(dir);\n    for (Iterator<IndexCommit> iterator = commits.iterator(); iterator.hasNext();) {\n      IndexCommit commit =  iterator.next();\n      Map<String,String> ud=commit.getUserData();\n      if (ud.size() > 0)\n        if (ud.get(\"index\").endsWith(ids))\n          last=commit;\n    }\n\n    if (last==null)\n      throw new RuntimeException(\"Couldn't find commit point \"+id);\n\t\t\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random)).setIndexDeletionPolicy(\n        new RollbackDeletionPolicy(id)).setIndexCommit(last));\n    Map<String,String> data = new HashMap<String,String>();\n    data.put(\"index\", \"Rolled back to 1-\"+id);\n    w.commit(data);\n    w.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4093b270ba337f9c25a4c0e6cb2ae2c07f697376","date":1347897716,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestTransactionRollback#rollBackLast(int).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestTransactionRollback#rollBackLast(int).mjava","sourceNew":"  //Rolls back index to a chosen ID\n  private void rollBackLast(int id) throws Exception {\n\n    // System.out.println(\"Attempting to rollback to \"+id);\n    String ids=\"-\"+id;\n    IndexCommit last=null;\n    Collection<IndexCommit> commits = DirectoryReader.listCommits(dir);\n    for (Iterator<IndexCommit> iterator = commits.iterator(); iterator.hasNext();) {\n      IndexCommit commit =  iterator.next();\n      Map<String,String> ud=commit.getUserData();\n      if (ud.size() > 0)\n        if (ud.get(\"index\").endsWith(ids))\n          last=commit;\n    }\n\n    if (last==null)\n      throw new RuntimeException(\"Couldn't find commit point \"+id);\n\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random())).setIndexDeletionPolicy(\n        new RollbackDeletionPolicy(id)).setIndexCommit(last));\n    Map<String,String> data = new HashMap<String,String>();\n    data.put(\"index\", \"Rolled back to 1-\"+id);\n    w.commit(data);\n    w.close();\n  }\n\n","sourceOld":"  //Rolls back index to a chosen ID\n  private void rollBackLast(int id) throws Exception {\n\t\t\n    // System.out.println(\"Attempting to rollback to \"+id);\n    String ids=\"-\"+id;\n    IndexCommit last=null;\n    Collection<IndexCommit> commits = DirectoryReader.listCommits(dir);\n    for (Iterator<IndexCommit> iterator = commits.iterator(); iterator.hasNext();) {\n      IndexCommit commit =  iterator.next();\n      Map<String,String> ud=commit.getUserData();\n      if (ud.size() > 0)\n        if (ud.get(\"index\").endsWith(ids))\n          last=commit;\n    }\n\n    if (last==null)\n      throw new RuntimeException(\"Couldn't find commit point \"+id);\n\t\t\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random())).setIndexDeletionPolicy(\n        new RollbackDeletionPolicy(id)).setIndexCommit(last));\n    Map<String,String> data = new HashMap<String,String>();\n    data.put(\"index\", \"Rolled back to 1-\"+id);\n    w.commit(data);\n    w.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9eae2a56dc810a17cf807d831f720dec931a03de","date":1349262073,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestTransactionRollback#rollBackLast(int).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestTransactionRollback#rollBackLast(int).mjava","sourceNew":"  //Rolls back index to a chosen ID\n  private void rollBackLast(int id) throws Exception {\n\n    // System.out.println(\"Attempting to rollback to \"+id);\n    String ids=\"-\"+id;\n    IndexCommit last=null;\n    Collection<IndexCommit> commits = DirectoryReader.listCommits(dir);\n    for (Iterator<IndexCommit> iterator = commits.iterator(); iterator.hasNext();) {\n      IndexCommit commit =  iterator.next();\n      Map<String,String> ud=commit.getUserData();\n      if (ud.size() > 0) {\n        if (ud.get(\"index\").endsWith(ids)) {\n          last = commit;\n        }\n      }\n    }\n\n    if (last==null) {\n      throw new RuntimeException(\"Couldn't find commit point \"+id);\n    }\n\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random())).setIndexDeletionPolicy(\n        new RollbackDeletionPolicy(id)).setIndexCommit(last));\n    Map<String,String> data = new HashMap<String,String>();\n    data.put(\"index\", \"Rolled back to 1-\"+id);\n    w.commit(data);\n    w.close();\n  }\n\n","sourceOld":"  //Rolls back index to a chosen ID\n  private void rollBackLast(int id) throws Exception {\n\n    // System.out.println(\"Attempting to rollback to \"+id);\n    String ids=\"-\"+id;\n    IndexCommit last=null;\n    Collection<IndexCommit> commits = DirectoryReader.listCommits(dir);\n    for (Iterator<IndexCommit> iterator = commits.iterator(); iterator.hasNext();) {\n      IndexCommit commit =  iterator.next();\n      Map<String,String> ud=commit.getUserData();\n      if (ud.size() > 0)\n        if (ud.get(\"index\").endsWith(ids))\n          last=commit;\n    }\n\n    if (last==null)\n      throw new RuntimeException(\"Couldn't find commit point \"+id);\n\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random())).setIndexDeletionPolicy(\n        new RollbackDeletionPolicy(id)).setIndexCommit(last));\n    Map<String,String> data = new HashMap<String,String>();\n    data.put(\"index\", \"Rolled back to 1-\"+id);\n    w.commit(data);\n    w.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b47e1512544568a22b82c96169d466fae8a4b79e","date":1354519309,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestTransactionRollback#rollBackLast(int).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestTransactionRollback#rollBackLast(int).mjava","sourceNew":"  //Rolls back index to a chosen ID\n  private void rollBackLast(int id) throws Exception {\n\n    // System.out.println(\"Attempting to rollback to \"+id);\n    String ids=\"-\"+id;\n    IndexCommit last=null;\n    Collection<IndexCommit> commits = DirectoryReader.listCommits(dir);\n    for (Iterator<IndexCommit> iterator = commits.iterator(); iterator.hasNext();) {\n      IndexCommit commit =  iterator.next();\n      Map<String,String> ud=commit.getUserData();\n      if (ud.size() > 0) {\n        if (ud.get(\"index\").endsWith(ids)) {\n          last = commit;\n        }\n      }\n    }\n\n    if (last==null) {\n      throw new RuntimeException(\"Couldn't find commit point \"+id);\n    }\n\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random())).setIndexDeletionPolicy(\n        new RollbackDeletionPolicy(id)).setIndexCommit(last));\n    Map<String,String> data = new HashMap<String,String>();\n    data.put(\"index\", \"Rolled back to 1-\"+id);\n    w.setCommitData(data);\n    w.close();\n  }\n\n","sourceOld":"  //Rolls back index to a chosen ID\n  private void rollBackLast(int id) throws Exception {\n\n    // System.out.println(\"Attempting to rollback to \"+id);\n    String ids=\"-\"+id;\n    IndexCommit last=null;\n    Collection<IndexCommit> commits = DirectoryReader.listCommits(dir);\n    for (Iterator<IndexCommit> iterator = commits.iterator(); iterator.hasNext();) {\n      IndexCommit commit =  iterator.next();\n      Map<String,String> ud=commit.getUserData();\n      if (ud.size() > 0) {\n        if (ud.get(\"index\").endsWith(ids)) {\n          last = commit;\n        }\n      }\n    }\n\n    if (last==null) {\n      throw new RuntimeException(\"Couldn't find commit point \"+id);\n    }\n\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random())).setIndexDeletionPolicy(\n        new RollbackDeletionPolicy(id)).setIndexCommit(last));\n    Map<String,String> data = new HashMap<String,String>();\n    data.put(\"index\", \"Rolled back to 1-\"+id);\n    w.commit(data);\n    w.close();\n  }\n\n","bugFix":null,"bugIntro":["71e1a70f18d64b93db3ef618e606d6df5062f747"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"407687e67faf6e1f02a211ca078d8e3eed631027","date":1355157407,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestTransactionRollback#rollBackLast(int).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestTransactionRollback#rollBackLast(int).mjava","sourceNew":"  //Rolls back index to a chosen ID\n  private void rollBackLast(int id) throws Exception {\n\n    // System.out.println(\"Attempting to rollback to \"+id);\n    String ids=\"-\"+id;\n    IndexCommit last=null;\n    Collection<IndexCommit> commits = DirectoryReader.listCommits(dir);\n    for (Iterator<IndexCommit> iterator = commits.iterator(); iterator.hasNext();) {\n      IndexCommit commit =  iterator.next();\n      Map<String,String> ud=commit.getUserData();\n      if (ud.size() > 0) {\n        if (ud.get(\"index\").endsWith(ids)) {\n          last = commit;\n        }\n      }\n    }\n\n    if (last==null) {\n      throw new RuntimeException(\"Couldn't find commit point \"+id);\n    }\n\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random())).setIndexDeletionPolicy(\n        new RollbackDeletionPolicy(id)).setIndexCommit(last));\n    Map<String,String> data = new HashMap<String,String>();\n    data.put(\"index\", \"Rolled back to 1-\"+id);\n    w.setCommitData(data);\n    w.close();\n  }\n\n","sourceOld":"  //Rolls back index to a chosen ID\n  private void rollBackLast(int id) throws Exception {\n\n    // System.out.println(\"Attempting to rollback to \"+id);\n    String ids=\"-\"+id;\n    IndexCommit last=null;\n    Collection<IndexCommit> commits = DirectoryReader.listCommits(dir);\n    for (Iterator<IndexCommit> iterator = commits.iterator(); iterator.hasNext();) {\n      IndexCommit commit =  iterator.next();\n      Map<String,String> ud=commit.getUserData();\n      if (ud.size() > 0) {\n        if (ud.get(\"index\").endsWith(ids)) {\n          last = commit;\n        }\n      }\n    }\n\n    if (last==null) {\n      throw new RuntimeException(\"Couldn't find commit point \"+id);\n    }\n\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random())).setIndexDeletionPolicy(\n        new RollbackDeletionPolicy(id)).setIndexCommit(last));\n    Map<String,String> data = new HashMap<String,String>();\n    data.put(\"index\", \"Rolled back to 1-\"+id);\n    w.commit(data);\n    w.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestTransactionRollback#rollBackLast(int).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestTransactionRollback#rollBackLast(int).mjava","sourceNew":"  //Rolls back index to a chosen ID\n  private void rollBackLast(int id) throws Exception {\n\n    // System.out.println(\"Attempting to rollback to \"+id);\n    String ids=\"-\"+id;\n    IndexCommit last=null;\n    Collection<IndexCommit> commits = DirectoryReader.listCommits(dir);\n    for (Iterator<IndexCommit> iterator = commits.iterator(); iterator.hasNext();) {\n      IndexCommit commit =  iterator.next();\n      Map<String,String> ud=commit.getUserData();\n      if (ud.size() > 0) {\n        if (ud.get(\"index\").endsWith(ids)) {\n          last = commit;\n        }\n      }\n    }\n\n    if (last==null) {\n      throw new RuntimeException(\"Couldn't find commit point \"+id);\n    }\n\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random())).setIndexDeletionPolicy(\n        new RollbackDeletionPolicy(id)).setIndexCommit(last));\n    Map<String,String> data = new HashMap<>();\n    data.put(\"index\", \"Rolled back to 1-\"+id);\n    w.setCommitData(data);\n    w.close();\n  }\n\n","sourceOld":"  //Rolls back index to a chosen ID\n  private void rollBackLast(int id) throws Exception {\n\n    // System.out.println(\"Attempting to rollback to \"+id);\n    String ids=\"-\"+id;\n    IndexCommit last=null;\n    Collection<IndexCommit> commits = DirectoryReader.listCommits(dir);\n    for (Iterator<IndexCommit> iterator = commits.iterator(); iterator.hasNext();) {\n      IndexCommit commit =  iterator.next();\n      Map<String,String> ud=commit.getUserData();\n      if (ud.size() > 0) {\n        if (ud.get(\"index\").endsWith(ids)) {\n          last = commit;\n        }\n      }\n    }\n\n    if (last==null) {\n      throw new RuntimeException(\"Couldn't find commit point \"+id);\n    }\n\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random())).setIndexDeletionPolicy(\n        new RollbackDeletionPolicy(id)).setIndexCommit(last));\n    Map<String,String> data = new HashMap<String,String>();\n    data.put(\"index\", \"Rolled back to 1-\"+id);\n    w.setCommitData(data);\n    w.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestTransactionRollback#rollBackLast(int).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestTransactionRollback#rollBackLast(int).mjava","sourceNew":"  //Rolls back index to a chosen ID\n  private void rollBackLast(int id) throws Exception {\n\n    // System.out.println(\"Attempting to rollback to \"+id);\n    String ids=\"-\"+id;\n    IndexCommit last=null;\n    Collection<IndexCommit> commits = DirectoryReader.listCommits(dir);\n    for (Iterator<IndexCommit> iterator = commits.iterator(); iterator.hasNext();) {\n      IndexCommit commit =  iterator.next();\n      Map<String,String> ud=commit.getUserData();\n      if (ud.size() > 0) {\n        if (ud.get(\"index\").endsWith(ids)) {\n          last = commit;\n        }\n      }\n    }\n\n    if (last==null) {\n      throw new RuntimeException(\"Couldn't find commit point \"+id);\n    }\n\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random())).setIndexDeletionPolicy(\n        new RollbackDeletionPolicy(id)).setIndexCommit(last));\n    Map<String,String> data = new HashMap<>();\n    data.put(\"index\", \"Rolled back to 1-\"+id);\n    w.setCommitData(data);\n    w.shutdown();\n  }\n\n","sourceOld":"  //Rolls back index to a chosen ID\n  private void rollBackLast(int id) throws Exception {\n\n    // System.out.println(\"Attempting to rollback to \"+id);\n    String ids=\"-\"+id;\n    IndexCommit last=null;\n    Collection<IndexCommit> commits = DirectoryReader.listCommits(dir);\n    for (Iterator<IndexCommit> iterator = commits.iterator(); iterator.hasNext();) {\n      IndexCommit commit =  iterator.next();\n      Map<String,String> ud=commit.getUserData();\n      if (ud.size() > 0) {\n        if (ud.get(\"index\").endsWith(ids)) {\n          last = commit;\n        }\n      }\n    }\n\n    if (last==null) {\n      throw new RuntimeException(\"Couldn't find commit point \"+id);\n    }\n\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random())).setIndexDeletionPolicy(\n        new RollbackDeletionPolicy(id)).setIndexCommit(last));\n    Map<String,String> data = new HashMap<>();\n    data.put(\"index\", \"Rolled back to 1-\"+id);\n    w.setCommitData(data);\n    w.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e","date":1406737224,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestTransactionRollback#rollBackLast(int).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestTransactionRollback#rollBackLast(int).mjava","sourceNew":"  //Rolls back index to a chosen ID\n  private void rollBackLast(int id) throws Exception {\n\n    // System.out.println(\"Attempting to rollback to \"+id);\n    String ids=\"-\"+id;\n    IndexCommit last=null;\n    Collection<IndexCommit> commits = DirectoryReader.listCommits(dir);\n    for (Iterator<IndexCommit> iterator = commits.iterator(); iterator.hasNext();) {\n      IndexCommit commit =  iterator.next();\n      Map<String,String> ud=commit.getUserData();\n      if (ud.size() > 0) {\n        if (ud.get(\"index\").endsWith(ids)) {\n          last = commit;\n        }\n      }\n    }\n\n    if (last==null) {\n      throw new RuntimeException(\"Couldn't find commit point \"+id);\n    }\n\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random()))\n                                           .setIndexDeletionPolicy(new RollbackDeletionPolicy(id))\n                                           .setIndexCommit(last));\n    Map<String,String> data = new HashMap<>();\n    data.put(\"index\", \"Rolled back to 1-\"+id);\n    w.setCommitData(data);\n    w.shutdown();\n  }\n\n","sourceOld":"  //Rolls back index to a chosen ID\n  private void rollBackLast(int id) throws Exception {\n\n    // System.out.println(\"Attempting to rollback to \"+id);\n    String ids=\"-\"+id;\n    IndexCommit last=null;\n    Collection<IndexCommit> commits = DirectoryReader.listCommits(dir);\n    for (Iterator<IndexCommit> iterator = commits.iterator(); iterator.hasNext();) {\n      IndexCommit commit =  iterator.next();\n      Map<String,String> ud=commit.getUserData();\n      if (ud.size() > 0) {\n        if (ud.get(\"index\").endsWith(ids)) {\n          last = commit;\n        }\n      }\n    }\n\n    if (last==null) {\n      throw new RuntimeException(\"Couldn't find commit point \"+id);\n    }\n\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer(random())).setIndexDeletionPolicy(\n        new RollbackDeletionPolicy(id)).setIndexCommit(last));\n    Map<String,String> data = new HashMap<>();\n    data.put(\"index\", \"Rolled back to 1-\"+id);\n    w.setCommitData(data);\n    w.shutdown();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestTransactionRollback#rollBackLast(int).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestTransactionRollback#rollBackLast(int).mjava","sourceNew":"  //Rolls back index to a chosen ID\n  private void rollBackLast(int id) throws Exception {\n\n    // System.out.println(\"Attempting to rollback to \"+id);\n    String ids=\"-\"+id;\n    IndexCommit last=null;\n    Collection<IndexCommit> commits = DirectoryReader.listCommits(dir);\n    for (Iterator<IndexCommit> iterator = commits.iterator(); iterator.hasNext();) {\n      IndexCommit commit =  iterator.next();\n      Map<String,String> ud=commit.getUserData();\n      if (ud.size() > 0) {\n        if (ud.get(\"index\").endsWith(ids)) {\n          last = commit;\n        }\n      }\n    }\n\n    if (last==null) {\n      throw new RuntimeException(\"Couldn't find commit point \"+id);\n    }\n\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random()))\n                                           .setIndexDeletionPolicy(new RollbackDeletionPolicy(id))\n                                           .setIndexCommit(last));\n    Map<String,String> data = new HashMap<>();\n    data.put(\"index\", \"Rolled back to 1-\"+id);\n    w.setCommitData(data);\n    w.close();\n  }\n\n","sourceOld":"  //Rolls back index to a chosen ID\n  private void rollBackLast(int id) throws Exception {\n\n    // System.out.println(\"Attempting to rollback to \"+id);\n    String ids=\"-\"+id;\n    IndexCommit last=null;\n    Collection<IndexCommit> commits = DirectoryReader.listCommits(dir);\n    for (Iterator<IndexCommit> iterator = commits.iterator(); iterator.hasNext();) {\n      IndexCommit commit =  iterator.next();\n      Map<String,String> ud=commit.getUserData();\n      if (ud.size() > 0) {\n        if (ud.get(\"index\").endsWith(ids)) {\n          last = commit;\n        }\n      }\n    }\n\n    if (last==null) {\n      throw new RuntimeException(\"Couldn't find commit point \"+id);\n    }\n\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random()))\n                                           .setIndexDeletionPolicy(new RollbackDeletionPolicy(id))\n                                           .setIndexCommit(last));\n    Map<String,String> data = new HashMap<>();\n    data.put(\"index\", \"Rolled back to 1-\"+id);\n    w.setCommitData(data);\n    w.shutdown();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"71e1a70f18d64b93db3ef618e606d6df5062f747","date":1466156390,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestTransactionRollback#rollBackLast(int).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestTransactionRollback#rollBackLast(int).mjava","sourceNew":"  //Rolls back index to a chosen ID\n  private void rollBackLast(int id) throws Exception {\n\n    // System.out.println(\"Attempting to rollback to \"+id);\n    String ids=\"-\"+id;\n    IndexCommit last=null;\n    Collection<IndexCommit> commits = DirectoryReader.listCommits(dir);\n    for (Iterator<IndexCommit> iterator = commits.iterator(); iterator.hasNext();) {\n      IndexCommit commit =  iterator.next();\n      Map<String,String> ud=commit.getUserData();\n      if (ud.size() > 0) {\n        if (ud.get(\"index\").endsWith(ids)) {\n          last = commit;\n        }\n      }\n    }\n\n    if (last==null) {\n      throw new RuntimeException(\"Couldn't find commit point \"+id);\n    }\n\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random()))\n                                           .setIndexDeletionPolicy(new RollbackDeletionPolicy(id))\n                                           .setIndexCommit(last));\n    Map<String,String> data = new HashMap<>();\n    data.put(\"index\", \"Rolled back to 1-\"+id);\n    w.setLiveCommitData(data.entrySet());\n    w.close();\n  }\n\n","sourceOld":"  //Rolls back index to a chosen ID\n  private void rollBackLast(int id) throws Exception {\n\n    // System.out.println(\"Attempting to rollback to \"+id);\n    String ids=\"-\"+id;\n    IndexCommit last=null;\n    Collection<IndexCommit> commits = DirectoryReader.listCommits(dir);\n    for (Iterator<IndexCommit> iterator = commits.iterator(); iterator.hasNext();) {\n      IndexCommit commit =  iterator.next();\n      Map<String,String> ud=commit.getUserData();\n      if (ud.size() > 0) {\n        if (ud.get(\"index\").endsWith(ids)) {\n          last = commit;\n        }\n      }\n    }\n\n    if (last==null) {\n      throw new RuntimeException(\"Couldn't find commit point \"+id);\n    }\n\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random()))\n                                           .setIndexDeletionPolicy(new RollbackDeletionPolicy(id))\n                                           .setIndexCommit(last));\n    Map<String,String> data = new HashMap<>();\n    data.put(\"index\", \"Rolled back to 1-\"+id);\n    w.setCommitData(data);\n    w.close();\n  }\n\n","bugFix":["b47e1512544568a22b82c96169d466fae8a4b79e"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestTransactionRollback#rollBackLast(int).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestTransactionRollback#rollBackLast(int).mjava","sourceNew":"  //Rolls back index to a chosen ID\n  private void rollBackLast(int id) throws Exception {\n\n    // System.out.println(\"Attempting to rollback to \"+id);\n    String ids=\"-\"+id;\n    IndexCommit last=null;\n    Collection<IndexCommit> commits = DirectoryReader.listCommits(dir);\n    for (Iterator<IndexCommit> iterator = commits.iterator(); iterator.hasNext();) {\n      IndexCommit commit =  iterator.next();\n      Map<String,String> ud=commit.getUserData();\n      if (ud.size() > 0) {\n        if (ud.get(\"index\").endsWith(ids)) {\n          last = commit;\n        }\n      }\n    }\n\n    if (last==null) {\n      throw new RuntimeException(\"Couldn't find commit point \"+id);\n    }\n\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random()))\n                                           .setIndexDeletionPolicy(new RollbackDeletionPolicy(id))\n                                           .setIndexCommit(last));\n    Map<String,String> data = new HashMap<>();\n    data.put(\"index\", \"Rolled back to 1-\"+id);\n    w.setLiveCommitData(data.entrySet());\n    w.close();\n  }\n\n","sourceOld":"  //Rolls back index to a chosen ID\n  private void rollBackLast(int id) throws Exception {\n\n    // System.out.println(\"Attempting to rollback to \"+id);\n    String ids=\"-\"+id;\n    IndexCommit last=null;\n    Collection<IndexCommit> commits = DirectoryReader.listCommits(dir);\n    for (Iterator<IndexCommit> iterator = commits.iterator(); iterator.hasNext();) {\n      IndexCommit commit =  iterator.next();\n      Map<String,String> ud=commit.getUserData();\n      if (ud.size() > 0) {\n        if (ud.get(\"index\").endsWith(ids)) {\n          last = commit;\n        }\n      }\n    }\n\n    if (last==null) {\n      throw new RuntimeException(\"Couldn't find commit point \"+id);\n    }\n\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random()))\n                                           .setIndexDeletionPolicy(new RollbackDeletionPolicy(id))\n                                           .setIndexCommit(last));\n    Map<String,String> data = new HashMap<>();\n    data.put(\"index\", \"Rolled back to 1-\"+id);\n    w.setCommitData(data);\n    w.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["b47e1512544568a22b82c96169d466fae8a4b79e"],"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"71e1a70f18d64b93db3ef618e606d6df5062f747":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"9eae2a56dc810a17cf807d831f720dec931a03de":["4093b270ba337f9c25a4c0e6cb2ae2c07f697376"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"407687e67faf6e1f02a211ca078d8e3eed631027":["9eae2a56dc810a17cf807d831f720dec931a03de","b47e1512544568a22b82c96169d466fae8a4b79e"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["d0ef034a4f10871667ae75181537775ddcf8ade4","71e1a70f18d64b93db3ef618e606d6df5062f747"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d0ef034a4f10871667ae75181537775ddcf8ade4":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"b47e1512544568a22b82c96169d466fae8a4b79e":["9eae2a56dc810a17cf807d831f720dec931a03de"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["71e1a70f18d64b93db3ef618e606d6df5062f747"],"4093b270ba337f9c25a4c0e6cb2ae2c07f697376":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"]},"commit2Childs":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"71e1a70f18d64b93db3ef618e606d6df5062f747":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9eae2a56dc810a17cf807d831f720dec931a03de":["407687e67faf6e1f02a211ca078d8e3eed631027","b47e1512544568a22b82c96169d466fae8a4b79e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"407687e67faf6e1f02a211ca078d8e3eed631027":[],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["71e1a70f18d64b93db3ef618e606d6df5062f747","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"b47e1512544568a22b82c96169d466fae8a4b79e":["634f330c54fd3f9f491d52036dc3f40b4f4d8934","407687e67faf6e1f02a211ca078d8e3eed631027"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["4093b270ba337f9c25a4c0e6cb2ae2c07f697376"],"4093b270ba337f9c25a4c0e6cb2ae2c07f697376":["9eae2a56dc810a17cf807d831f720dec931a03de"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["407687e67faf6e1f02a211ca078d8e3eed631027","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}