{"path":"lucene/src/test/org/apache/lucene/index/TestDocValuesIndexing#testDifferentTypedDocValuesField().mjava","commits":[{"id":"a0ae5e3ed1232483b7b8a014f175a5fe43595982","date":1324062192,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestDocValuesIndexing#testDifferentTypedDocValuesField().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/values/TestDocValuesIndexing#testDifferentTypedDocValuesField().mjava","sourceNew":"  public void testDifferentTypedDocValuesField() throws Exception {\n    Directory d = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random, d);\n    Document doc = new Document();\n    DocValuesField f = new DocValuesField(\"field\");\n    f.setInt(17);\n    // Index doc values are single-valued so we should not\n    // be able to add same field more than once:\n    doc.add(f);\n    DocValuesField f2 = new DocValuesField(\"field\");\n    f2.setFloat(22.0);\n    doc.add(f2);\n    try {\n      w.addDocument(doc);\n      fail(\"didn't hit expected exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n\n    doc = new Document();\n    doc.add(f);\n    w.addDocument(doc);\n    w.forceMerge(1);\n    IndexReader r = w.getReader();\n    w.close();\n    assertEquals(17, r.getSequentialSubReaders()[0].docValues(\"field\").load().getInt(0));\n    r.close();\n    d.close();\n  }\n\n","sourceOld":"  public void testDifferentTypedDocValuesField() throws Exception {\n    Directory d = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random, d);\n    Document doc = new Document();\n    DocValuesField f = new DocValuesField(\"field\");\n    f.setInt(17);\n    // Index doc values are single-valued so we should not\n    // be able to add same field more than once:\n    doc.add(f);\n    DocValuesField f2 = new DocValuesField(\"field\");\n    f2.setFloat(22.0);\n    doc.add(f2);\n    try {\n      w.addDocument(doc);\n      fail(\"didn't hit expected exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n\n    doc = new Document();\n    doc.add(f);\n    w.addDocument(doc);\n    w.forceMerge(1);\n    IndexReader r = w.getReader();\n    w.close();\n    assertEquals(17, r.getSequentialSubReaders()[0].docValues(\"field\").load().getInt(0));\n    r.close();\n    d.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fa0f44f887719e97183771e977cfc4bfb485b766","date":1326668713,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestDocValuesIndexing#testDifferentTypedDocValuesField().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestDocValuesIndexing#testDifferentTypedDocValuesField().mjava","sourceNew":"  public void testDifferentTypedDocValuesField() throws Exception {\n    Directory d = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random, d);\n    Document doc = new Document();\n    // Index doc values are single-valued so we should not\n    // be able to add same field more than once:\n    Field f;\n    doc.add(f = new DocValuesField(\"field\", 17, Type.VAR_INTS));\n    doc.add(new DocValuesField(\"field\", 22.0, Type.FLOAT_32));\n    try {\n      w.addDocument(doc);\n      fail(\"didn't hit expected exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n\n    doc = new Document();\n    doc.add(f);\n    w.addDocument(doc);\n    w.forceMerge(1);\n    IndexReader r = w.getReader();\n    w.close();\n    assertEquals(17, r.getSequentialSubReaders()[0].docValues(\"field\").load().getInt(0));\n    r.close();\n    d.close();\n  }\n\n","sourceOld":"  public void testDifferentTypedDocValuesField() throws Exception {\n    Directory d = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random, d);\n    Document doc = new Document();\n    DocValuesField f = new DocValuesField(\"field\");\n    f.setInt(17);\n    // Index doc values are single-valued so we should not\n    // be able to add same field more than once:\n    doc.add(f);\n    DocValuesField f2 = new DocValuesField(\"field\");\n    f2.setFloat(22.0);\n    doc.add(f2);\n    try {\n      w.addDocument(doc);\n      fail(\"didn't hit expected exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n\n    doc = new Document();\n    doc.add(f);\n    w.addDocument(doc);\n    w.forceMerge(1);\n    IndexReader r = w.getReader();\n    w.close();\n    assertEquals(17, r.getSequentialSubReaders()[0].docValues(\"field\").load().getInt(0));\n    r.close();\n    d.close();\n  }\n\n","bugFix":["594a11fd830b89fd08a253593d8e5062e20f5564","1e59c344a45b9502f40ec44f5fe4e20ed2291dbe"],"bugIntro":["cd659803551ebd8ca09b9e4ad7abd18d3d558f9d"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"868186558eb3a854ce7e720a52bb445795d54910","date":1327853682,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestDocValuesIndexing#testDifferentTypedDocValuesField().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestDocValuesIndexing#testDifferentTypedDocValuesField().mjava","sourceNew":"  public void testDifferentTypedDocValuesField() throws Exception {\n    Directory d = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random, d);\n    Document doc = new Document();\n    // Index doc values are single-valued so we should not\n    // be able to add same field more than once:\n    Field f;\n    doc.add(f = new DocValuesField(\"field\", 17, Type.VAR_INTS));\n    doc.add(new DocValuesField(\"field\", 22.0, Type.FLOAT_32));\n    try {\n      w.addDocument(doc);\n      fail(\"didn't hit expected exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n\n    doc = new Document();\n    doc.add(f);\n    w.addDocument(doc);\n    w.forceMerge(1);\n    DirectoryReader r = w.getReader();\n    w.close();\n    assertEquals(17, getOnlySegmentReader(r).docValues(\"field\").load().getInt(0));\n    r.close();\n    d.close();\n  }\n\n","sourceOld":"  public void testDifferentTypedDocValuesField() throws Exception {\n    Directory d = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random, d);\n    Document doc = new Document();\n    // Index doc values are single-valued so we should not\n    // be able to add same field more than once:\n    Field f;\n    doc.add(f = new DocValuesField(\"field\", 17, Type.VAR_INTS));\n    doc.add(new DocValuesField(\"field\", 22.0, Type.FLOAT_32));\n    try {\n      w.addDocument(doc);\n      fail(\"didn't hit expected exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n\n    doc = new Document();\n    doc.add(f);\n    w.addDocument(doc);\n    w.forceMerge(1);\n    IndexReader r = w.getReader();\n    w.close();\n    assertEquals(17, r.getSequentialSubReaders()[0].docValues(\"field\").load().getInt(0));\n    r.close();\n    d.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5cab9a86bd67202d20b6adc463008c8e982b070a","date":1327966443,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestDocValuesIndexing#testDifferentTypedDocValuesField().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestDocValuesIndexing#testDifferentTypedDocValuesField().mjava","sourceNew":"  public void testDifferentTypedDocValuesField() throws Exception {\n    Directory d = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random, d);\n    Document doc = new Document();\n    // Index doc values are single-valued so we should not\n    // be able to add same field more than once:\n    Field f;\n    doc.add(f = new DocValuesField(\"field\", 17, Type.VAR_INTS));\n    doc.add(new DocValuesField(\"field\", 22.0, Type.FLOAT_32));\n    try {\n      w.addDocument(doc);\n      fail(\"didn't hit expected exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n\n    doc = new Document();\n    doc.add(f);\n    w.addDocument(doc);\n    w.forceMerge(1);\n    DirectoryReader r = w.getReader();\n    w.close();\n    assertEquals(17, getOnlySegmentReader(r).docValues(\"field\").load().getInt(0));\n    r.close();\n    d.close();\n  }\n\n","sourceOld":"  public void testDifferentTypedDocValuesField() throws Exception {\n    Directory d = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random, d);\n    Document doc = new Document();\n    // Index doc values are single-valued so we should not\n    // be able to add same field more than once:\n    Field f;\n    doc.add(f = new DocValuesField(\"field\", 17, Type.VAR_INTS));\n    doc.add(new DocValuesField(\"field\", 22.0, Type.FLOAT_32));\n    try {\n      w.addDocument(doc);\n      fail(\"didn't hit expected exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n\n    doc = new Document();\n    doc.add(f);\n    w.addDocument(doc);\n    w.forceMerge(1);\n    IndexReader r = w.getReader();\n    w.close();\n    assertEquals(17, r.getSequentialSubReaders()[0].docValues(\"field\").load().getInt(0));\n    r.close();\n    d.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDocValuesIndexing#testDifferentTypedDocValuesField().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestDocValuesIndexing#testDifferentTypedDocValuesField().mjava","sourceNew":"  public void testDifferentTypedDocValuesField() throws Exception {\n    Directory d = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random, d);\n    Document doc = new Document();\n    // Index doc values are single-valued so we should not\n    // be able to add same field more than once:\n    Field f;\n    doc.add(f = new DocValuesField(\"field\", 17, Type.VAR_INTS));\n    doc.add(new DocValuesField(\"field\", 22.0, Type.FLOAT_32));\n    try {\n      w.addDocument(doc);\n      fail(\"didn't hit expected exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n\n    doc = new Document();\n    doc.add(f);\n    w.addDocument(doc);\n    w.forceMerge(1);\n    DirectoryReader r = w.getReader();\n    w.close();\n    assertEquals(17, getOnlySegmentReader(r).docValues(\"field\").load().getInt(0));\n    r.close();\n    d.close();\n  }\n\n","sourceOld":"  public void testDifferentTypedDocValuesField() throws Exception {\n    Directory d = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random, d);\n    Document doc = new Document();\n    // Index doc values are single-valued so we should not\n    // be able to add same field more than once:\n    Field f;\n    doc.add(f = new DocValuesField(\"field\", 17, Type.VAR_INTS));\n    doc.add(new DocValuesField(\"field\", 22.0, Type.FLOAT_32));\n    try {\n      w.addDocument(doc);\n      fail(\"didn't hit expected exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected\n    }\n\n    doc = new Document();\n    doc.add(f);\n    w.addDocument(doc);\n    w.forceMerge(1);\n    DirectoryReader r = w.getReader();\n    w.close();\n    assertEquals(17, getOnlySegmentReader(r).docValues(\"field\").load().getInt(0));\n    r.close();\n    d.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"fa0f44f887719e97183771e977cfc4bfb485b766":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5cab9a86bd67202d20b6adc463008c8e982b070a":["fa0f44f887719e97183771e977cfc4bfb485b766","868186558eb3a854ce7e720a52bb445795d54910"],"868186558eb3a854ce7e720a52bb445795d54910":["fa0f44f887719e97183771e977cfc4bfb485b766"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"],"fa0f44f887719e97183771e977cfc4bfb485b766":["5cab9a86bd67202d20b6adc463008c8e982b070a","868186558eb3a854ce7e720a52bb445795d54910"],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["fa0f44f887719e97183771e977cfc4bfb485b766"],"5cab9a86bd67202d20b6adc463008c8e982b070a":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"868186558eb3a854ce7e720a52bb445795d54910":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}