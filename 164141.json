{"path":"lucene/src/java/org/apache/lucene/util/AttributeSource#getAttributeImplsIterator().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/util/AttributeSource#getAttributeImplsIterator().mjava","pathOld":"src/java/org/apache/lucene/util/AttributeSource#getAttributeImplsIterator().mjava","sourceNew":"  /** Returns a new iterator that iterates all unique Attribute implementations.\n   * This iterator may contain less entries that {@link #getAttributeClassesIterator},\n   * if one instance implements more than one Attribute interface.\n   */\n  public Iterator<AttributeImpl> getAttributeImplsIterator() {\n    if (hasAttributes()) {\n      if (currentState == null) {\n        computeCurrentState();\n      }\n      final State initState = currentState;\n      return new Iterator<AttributeImpl>() {\n        private State state = initState;\n      \n        public void remove() {\n          throw new UnsupportedOperationException();\n        }\n        \n        public AttributeImpl next() {\n          if (state == null)\n            throw new NoSuchElementException();\n          final AttributeImpl att = state.attribute;\n          state = state.next;\n          return att;\n        }\n        \n        public boolean hasNext() {\n          return state != null;\n        }\n      };\n    } else {\n      return Collections.<AttributeImpl>emptySet().iterator();\n    }\n  }\n\n","sourceOld":"  /** Returns a new iterator that iterates all unique Attribute implementations.\n   * This iterator may contain less entries that {@link #getAttributeClassesIterator},\n   * if one instance implements more than one Attribute interface.\n   */\n  public Iterator<AttributeImpl> getAttributeImplsIterator() {\n    if (hasAttributes()) {\n      if (currentState == null) {\n        computeCurrentState();\n      }\n      final State initState = currentState;\n      return new Iterator<AttributeImpl>() {\n        private State state = initState;\n      \n        public void remove() {\n          throw new UnsupportedOperationException();\n        }\n        \n        public AttributeImpl next() {\n          if (state == null)\n            throw new NoSuchElementException();\n          final AttributeImpl att = state.attribute;\n          state = state.next;\n          return att;\n        }\n        \n        public boolean hasNext() {\n          return state != null;\n        }\n      };\n    } else {\n      return Collections.<AttributeImpl>emptySet().iterator();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1fcb8fbcaef0032d0677e8db53f7255fd6af4367","date":1298817686,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/util/AttributeSource#getAttributeImplsIterator().mjava","pathOld":"lucene/src/java/org/apache/lucene/util/AttributeSource#getAttributeImplsIterator().mjava","sourceNew":"  /** Returns a new iterator that iterates all unique Attribute implementations.\n   * This iterator may contain less entries that {@link #getAttributeClassesIterator},\n   * if one instance implements more than one Attribute interface.\n   */\n  public final Iterator<AttributeImpl> getAttributeImplsIterator() {\n    if (hasAttributes()) {\n      if (currentState == null) {\n        computeCurrentState();\n      }\n      final State initState = currentState;\n      return new Iterator<AttributeImpl>() {\n        private State state = initState;\n      \n        public void remove() {\n          throw new UnsupportedOperationException();\n        }\n        \n        public AttributeImpl next() {\n          if (state == null)\n            throw new NoSuchElementException();\n          final AttributeImpl att = state.attribute;\n          state = state.next;\n          return att;\n        }\n        \n        public boolean hasNext() {\n          return state != null;\n        }\n      };\n    } else {\n      return Collections.<AttributeImpl>emptySet().iterator();\n    }\n  }\n\n","sourceOld":"  /** Returns a new iterator that iterates all unique Attribute implementations.\n   * This iterator may contain less entries that {@link #getAttributeClassesIterator},\n   * if one instance implements more than one Attribute interface.\n   */\n  public Iterator<AttributeImpl> getAttributeImplsIterator() {\n    if (hasAttributes()) {\n      if (currentState == null) {\n        computeCurrentState();\n      }\n      final State initState = currentState;\n      return new Iterator<AttributeImpl>() {\n        private State state = initState;\n      \n        public void remove() {\n          throw new UnsupportedOperationException();\n        }\n        \n        public AttributeImpl next() {\n          if (state == null)\n            throw new NoSuchElementException();\n          final AttributeImpl att = state.attribute;\n          state = state.next;\n          return att;\n        }\n        \n        public boolean hasNext() {\n          return state != null;\n        }\n      };\n    } else {\n      return Collections.<AttributeImpl>emptySet().iterator();\n    }\n  }\n\n","bugFix":["8d78f014fded44fbde905f4f84cdc21907b371e8"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d619839baa8ce5503e496b94a9e42ad6f079293f","date":1301309428,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/util/AttributeSource#getAttributeImplsIterator().mjava","pathOld":"lucene/src/java/org/apache/lucene/util/AttributeSource#getAttributeImplsIterator().mjava","sourceNew":"  /** Returns a new iterator that iterates all unique Attribute implementations.\n   * This iterator may contain less entries that {@link #getAttributeClassesIterator},\n   * if one instance implements more than one Attribute interface.\n   */\n  public final Iterator<AttributeImpl> getAttributeImplsIterator() {\n    if (hasAttributes()) {\n      if (currentState == null) {\n        computeCurrentState();\n      }\n      final State initState = currentState;\n      return new Iterator<AttributeImpl>() {\n        private State state = initState;\n      \n        public void remove() {\n          throw new UnsupportedOperationException();\n        }\n        \n        public AttributeImpl next() {\n          if (state == null)\n            throw new NoSuchElementException();\n          final AttributeImpl att = state.attribute;\n          state = state.next;\n          return att;\n        }\n        \n        public boolean hasNext() {\n          return state != null;\n        }\n      };\n    } else {\n      return Collections.<AttributeImpl>emptySet().iterator();\n    }\n  }\n\n","sourceOld":"  /** Returns a new iterator that iterates all unique Attribute implementations.\n   * This iterator may contain less entries that {@link #getAttributeClassesIterator},\n   * if one instance implements more than one Attribute interface.\n   */\n  public Iterator<AttributeImpl> getAttributeImplsIterator() {\n    if (hasAttributes()) {\n      if (currentState == null) {\n        computeCurrentState();\n      }\n      final State initState = currentState;\n      return new Iterator<AttributeImpl>() {\n        private State state = initState;\n      \n        public void remove() {\n          throw new UnsupportedOperationException();\n        }\n        \n        public AttributeImpl next() {\n          if (state == null)\n            throw new NoSuchElementException();\n          final AttributeImpl att = state.attribute;\n          state = state.next;\n          return att;\n        }\n        \n        public boolean hasNext() {\n          return state != null;\n        }\n      };\n    } else {\n      return Collections.<AttributeImpl>emptySet().iterator();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c0ef0193974807e4bddf5432a6b0287fe4d6c9df","date":1301476645,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/util/AttributeSource#getAttributeImplsIterator().mjava","pathOld":"lucene/src/java/org/apache/lucene/util/AttributeSource#getAttributeImplsIterator().mjava","sourceNew":"  /** Returns a new iterator that iterates all unique Attribute implementations.\n   * This iterator may contain less entries that {@link #getAttributeClassesIterator},\n   * if one instance implements more than one Attribute interface.\n   */\n  public final Iterator<AttributeImpl> getAttributeImplsIterator() {\n    if (hasAttributes()) {\n      if (currentState == null) {\n        computeCurrentState();\n      }\n      final State initState = currentState;\n      return new Iterator<AttributeImpl>() {\n        private State state = initState;\n      \n        public void remove() {\n          throw new UnsupportedOperationException();\n        }\n        \n        public AttributeImpl next() {\n          if (state == null)\n            throw new NoSuchElementException();\n          final AttributeImpl att = state.attribute;\n          state = state.next;\n          return att;\n        }\n        \n        public boolean hasNext() {\n          return state != null;\n        }\n      };\n    } else {\n      return Collections.<AttributeImpl>emptySet().iterator();\n    }\n  }\n\n","sourceOld":"  /** Returns a new iterator that iterates all unique Attribute implementations.\n   * This iterator may contain less entries that {@link #getAttributeClassesIterator},\n   * if one instance implements more than one Attribute interface.\n   */\n  public Iterator<AttributeImpl> getAttributeImplsIterator() {\n    if (hasAttributes()) {\n      if (currentState == null) {\n        computeCurrentState();\n      }\n      final State initState = currentState;\n      return new Iterator<AttributeImpl>() {\n        private State state = initState;\n      \n        public void remove() {\n          throw new UnsupportedOperationException();\n        }\n        \n        public AttributeImpl next() {\n          if (state == null)\n            throw new NoSuchElementException();\n          final AttributeImpl att = state.attribute;\n          state = state.next;\n          return att;\n        }\n        \n        public boolean hasNext() {\n          return state != null;\n        }\n      };\n    } else {\n      return Collections.<AttributeImpl>emptySet().iterator();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"47ef98c97dcd0008187c6ae3c5b4dfe61fbe55cf","date":1303512308,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/util/AttributeSource#getAttributeImplsIterator().mjava","pathOld":"lucene/src/java/org/apache/lucene/util/AttributeSource#getAttributeImplsIterator().mjava","sourceNew":"  /** Returns a new iterator that iterates all unique Attribute implementations.\n   * This iterator may contain less entries that {@link #getAttributeClassesIterator},\n   * if one instance implements more than one Attribute interface.\n   */\n  public final Iterator<AttributeImpl> getAttributeImplsIterator() {\n    final State initState = getCurrentState();\n    if (initState != null) {\n      return new Iterator<AttributeImpl>() {\n        private State state = initState;\n      \n        public void remove() {\n          throw new UnsupportedOperationException();\n        }\n        \n        public AttributeImpl next() {\n          if (state == null)\n            throw new NoSuchElementException();\n          final AttributeImpl att = state.attribute;\n          state = state.next;\n          return att;\n        }\n        \n        public boolean hasNext() {\n          return state != null;\n        }\n      };\n    } else {\n      return Collections.<AttributeImpl>emptySet().iterator();\n    }\n  }\n\n","sourceOld":"  /** Returns a new iterator that iterates all unique Attribute implementations.\n   * This iterator may contain less entries that {@link #getAttributeClassesIterator},\n   * if one instance implements more than one Attribute interface.\n   */\n  public final Iterator<AttributeImpl> getAttributeImplsIterator() {\n    if (hasAttributes()) {\n      if (currentState == null) {\n        computeCurrentState();\n      }\n      final State initState = currentState;\n      return new Iterator<AttributeImpl>() {\n        private State state = initState;\n      \n        public void remove() {\n          throw new UnsupportedOperationException();\n        }\n        \n        public AttributeImpl next() {\n          if (state == null)\n            throw new NoSuchElementException();\n          final AttributeImpl att = state.attribute;\n          state = state.next;\n          return att;\n        }\n        \n        public boolean hasNext() {\n          return state != null;\n        }\n      };\n    } else {\n      return Collections.<AttributeImpl>emptySet().iterator();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d493718201f0d0c54c773fb323d87bbd2fbffe41","date":1303546048,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/util/AttributeSource#getAttributeImplsIterator().mjava","pathOld":"lucene/src/java/org/apache/lucene/util/AttributeSource#getAttributeImplsIterator().mjava","sourceNew":"  /** Returns a new iterator that iterates all unique Attribute implementations.\n   * This iterator may contain less entries that {@link #getAttributeClassesIterator},\n   * if one instance implements more than one Attribute interface.\n   */\n  public final Iterator<AttributeImpl> getAttributeImplsIterator() {\n    final State initState = getCurrentState();\n    if (initState != null) {\n      return new Iterator<AttributeImpl>() {\n        private State state = initState;\n      \n        public void remove() {\n          throw new UnsupportedOperationException();\n        }\n        \n        public AttributeImpl next() {\n          if (state == null)\n            throw new NoSuchElementException();\n          final AttributeImpl att = state.attribute;\n          state = state.next;\n          return att;\n        }\n        \n        public boolean hasNext() {\n          return state != null;\n        }\n      };\n    } else {\n      return Collections.<AttributeImpl>emptySet().iterator();\n    }\n  }\n\n","sourceOld":"  /** Returns a new iterator that iterates all unique Attribute implementations.\n   * This iterator may contain less entries that {@link #getAttributeClassesIterator},\n   * if one instance implements more than one Attribute interface.\n   */\n  public final Iterator<AttributeImpl> getAttributeImplsIterator() {\n    if (hasAttributes()) {\n      if (currentState == null) {\n        computeCurrentState();\n      }\n      final State initState = currentState;\n      return new Iterator<AttributeImpl>() {\n        private State state = initState;\n      \n        public void remove() {\n          throw new UnsupportedOperationException();\n        }\n        \n        public AttributeImpl next() {\n          if (state == null)\n            throw new NoSuchElementException();\n          final AttributeImpl att = state.attribute;\n          state = state.next;\n          return att;\n        }\n        \n        public boolean hasNext() {\n          return state != null;\n        }\n      };\n    } else {\n      return Collections.<AttributeImpl>emptySet().iterator();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/util/AttributeSource#getAttributeImplsIterator().mjava","pathOld":"lucene/src/java/org/apache/lucene/util/AttributeSource#getAttributeImplsIterator().mjava","sourceNew":"  /** Returns a new iterator that iterates all unique Attribute implementations.\n   * This iterator may contain less entries that {@link #getAttributeClassesIterator},\n   * if one instance implements more than one Attribute interface.\n   */\n  public final Iterator<AttributeImpl> getAttributeImplsIterator() {\n    final State initState = getCurrentState();\n    if (initState != null) {\n      return new Iterator<AttributeImpl>() {\n        private State state = initState;\n      \n        public void remove() {\n          throw new UnsupportedOperationException();\n        }\n        \n        public AttributeImpl next() {\n          if (state == null)\n            throw new NoSuchElementException();\n          final AttributeImpl att = state.attribute;\n          state = state.next;\n          return att;\n        }\n        \n        public boolean hasNext() {\n          return state != null;\n        }\n      };\n    } else {\n      return Collections.<AttributeImpl>emptySet().iterator();\n    }\n  }\n\n","sourceOld":"  /** Returns a new iterator that iterates all unique Attribute implementations.\n   * This iterator may contain less entries that {@link #getAttributeClassesIterator},\n   * if one instance implements more than one Attribute interface.\n   */\n  public final Iterator<AttributeImpl> getAttributeImplsIterator() {\n    if (hasAttributes()) {\n      if (currentState == null) {\n        computeCurrentState();\n      }\n      final State initState = currentState;\n      return new Iterator<AttributeImpl>() {\n        private State state = initState;\n      \n        public void remove() {\n          throw new UnsupportedOperationException();\n        }\n        \n        public AttributeImpl next() {\n          if (state == null)\n            throw new NoSuchElementException();\n          final AttributeImpl att = state.attribute;\n          state = state.next;\n          return att;\n        }\n        \n        public boolean hasNext() {\n          return state != null;\n        }\n      };\n    } else {\n      return Collections.<AttributeImpl>emptySet().iterator();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/util/AttributeSource#getAttributeImplsIterator().mjava","pathOld":"lucene/src/java/org/apache/lucene/util/AttributeSource#getAttributeImplsIterator().mjava","sourceNew":"  /** Returns a new iterator that iterates all unique Attribute implementations.\n   * This iterator may contain less entries that {@link #getAttributeClassesIterator},\n   * if one instance implements more than one Attribute interface.\n   */\n  public final Iterator<AttributeImpl> getAttributeImplsIterator() {\n    final State initState = getCurrentState();\n    if (initState != null) {\n      return new Iterator<AttributeImpl>() {\n        private State state = initState;\n      \n        public void remove() {\n          throw new UnsupportedOperationException();\n        }\n        \n        public AttributeImpl next() {\n          if (state == null)\n            throw new NoSuchElementException();\n          final AttributeImpl att = state.attribute;\n          state = state.next;\n          return att;\n        }\n        \n        public boolean hasNext() {\n          return state != null;\n        }\n      };\n    } else {\n      return Collections.<AttributeImpl>emptySet().iterator();\n    }\n  }\n\n","sourceOld":"  /** Returns a new iterator that iterates all unique Attribute implementations.\n   * This iterator may contain less entries that {@link #getAttributeClassesIterator},\n   * if one instance implements more than one Attribute interface.\n   */\n  public final Iterator<AttributeImpl> getAttributeImplsIterator() {\n    if (hasAttributes()) {\n      if (currentState == null) {\n        computeCurrentState();\n      }\n      final State initState = currentState;\n      return new Iterator<AttributeImpl>() {\n        private State state = initState;\n      \n        public void remove() {\n          throw new UnsupportedOperationException();\n        }\n        \n        public AttributeImpl next() {\n          if (state == null)\n            throw new NoSuchElementException();\n          final AttributeImpl att = state.attribute;\n          state = state.next;\n          return att;\n        }\n        \n        public boolean hasNext() {\n          return state != null;\n        }\n      };\n    } else {\n      return Collections.<AttributeImpl>emptySet().iterator();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/AttributeSource#getAttributeImplsIterator().mjava","pathOld":"lucene/src/java/org/apache/lucene/util/AttributeSource#getAttributeImplsIterator().mjava","sourceNew":"  /** Returns a new iterator that iterates all unique Attribute implementations.\n   * This iterator may contain less entries that {@link #getAttributeClassesIterator},\n   * if one instance implements more than one Attribute interface.\n   */\n  public final Iterator<AttributeImpl> getAttributeImplsIterator() {\n    final State initState = getCurrentState();\n    if (initState != null) {\n      return new Iterator<AttributeImpl>() {\n        private State state = initState;\n      \n        public void remove() {\n          throw new UnsupportedOperationException();\n        }\n        \n        public AttributeImpl next() {\n          if (state == null)\n            throw new NoSuchElementException();\n          final AttributeImpl att = state.attribute;\n          state = state.next;\n          return att;\n        }\n        \n        public boolean hasNext() {\n          return state != null;\n        }\n      };\n    } else {\n      return Collections.<AttributeImpl>emptySet().iterator();\n    }\n  }\n\n","sourceOld":"  /** Returns a new iterator that iterates all unique Attribute implementations.\n   * This iterator may contain less entries that {@link #getAttributeClassesIterator},\n   * if one instance implements more than one Attribute interface.\n   */\n  public final Iterator<AttributeImpl> getAttributeImplsIterator() {\n    final State initState = getCurrentState();\n    if (initState != null) {\n      return new Iterator<AttributeImpl>() {\n        private State state = initState;\n      \n        public void remove() {\n          throw new UnsupportedOperationException();\n        }\n        \n        public AttributeImpl next() {\n          if (state == null)\n            throw new NoSuchElementException();\n          final AttributeImpl att = state.attribute;\n          state = state.next;\n          return att;\n        }\n        \n        public boolean hasNext() {\n          return state != null;\n        }\n      };\n    } else {\n      return Collections.<AttributeImpl>emptySet().iterator();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1fcb8fbcaef0032d0677e8db53f7255fd6af4367":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"c0ef0193974807e4bddf5432a6b0287fe4d6c9df":["9454a6510e2db155fb01faa5c049b06ece95fab9","1fcb8fbcaef0032d0677e8db53f7255fd6af4367"],"d619839baa8ce5503e496b94a9e42ad6f079293f":["9454a6510e2db155fb01faa5c049b06ece95fab9","1fcb8fbcaef0032d0677e8db53f7255fd6af4367"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["47ef98c97dcd0008187c6ae3c5b4dfe61fbe55cf"],"a3776dccca01c11e7046323cfad46a3b4a471233":["1fcb8fbcaef0032d0677e8db53f7255fd6af4367","47ef98c97dcd0008187c6ae3c5b4dfe61fbe55cf"],"47ef98c97dcd0008187c6ae3c5b4dfe61fbe55cf":["1fcb8fbcaef0032d0677e8db53f7255fd6af4367"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["d619839baa8ce5503e496b94a9e42ad6f079293f","47ef98c97dcd0008187c6ae3c5b4dfe61fbe55cf"],"d493718201f0d0c54c773fb323d87bbd2fbffe41":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df","47ef98c97dcd0008187c6ae3c5b4dfe61fbe55cf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"1fcb8fbcaef0032d0677e8db53f7255fd6af4367":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df","d619839baa8ce5503e496b94a9e42ad6f079293f","a3776dccca01c11e7046323cfad46a3b4a471233","47ef98c97dcd0008187c6ae3c5b4dfe61fbe55cf"],"c0ef0193974807e4bddf5432a6b0287fe4d6c9df":["d493718201f0d0c54c773fb323d87bbd2fbffe41"],"d619839baa8ce5503e496b94a9e42ad6f079293f":["135621f3a0670a9394eb563224a3b76cc4dddc0f"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a3776dccca01c11e7046323cfad46a3b4a471233":[],"47ef98c97dcd0008187c6ae3c5b4dfe61fbe55cf":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","a3776dccca01c11e7046323cfad46a3b4a471233","135621f3a0670a9394eb563224a3b76cc4dddc0f","d493718201f0d0c54c773fb323d87bbd2fbffe41"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":[],"d493718201f0d0c54c773fb323d87bbd2fbffe41":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["1fcb8fbcaef0032d0677e8db53f7255fd6af4367","c0ef0193974807e4bddf5432a6b0287fe4d6c9df","d619839baa8ce5503e496b94a9e42ad6f079293f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a3776dccca01c11e7046323cfad46a3b4a471233","135621f3a0670a9394eb563224a3b76cc4dddc0f","d493718201f0d0c54c773fb323d87bbd2fbffe41","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}