{"path":"solr/core/src/java/org/apache/solr/util/TestInjection#injectSplitFailureBeforeReplicaCreation().mjava","commits":[{"id":"d1d231959c9d0545adc421b7a2fefa7db47300d8","date":1472269133,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/TestInjection#injectSplitFailureBeforeReplicaCreation().mjava","pathOld":"/dev/null","sourceNew":"  public static boolean injectSplitFailureBeforeReplicaCreation() {\n    if (splitFailureBeforeReplicaCreation != null)  {\n      Random rand = random();\n      if (null == rand) return true;\n\n      Pair<Boolean,Integer> pair = parseValue(splitFailureBeforeReplicaCreation);\n      boolean enabled = pair.first();\n      int chanceIn100 = pair.second();\n      if (enabled && rand.nextInt(100) >= (100 - chanceIn100)) {\n        log.info(\"Injecting failure in creating replica for sub-shard\");\n        throw new SolrException(ErrorCode.SERVER_ERROR, \"Unable to create replica\");\n      }\n    }\n\n    return true;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["685af99397b6da31116a2cac747ed255d217d080"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"17e5da53e4e5bd659e22add9bba1cfa222e7e30d","date":1475435902,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/TestInjection#injectSplitFailureBeforeReplicaCreation().mjava","pathOld":"/dev/null","sourceNew":"  public static boolean injectSplitFailureBeforeReplicaCreation() {\n    if (splitFailureBeforeReplicaCreation != null)  {\n      Random rand = random();\n      if (null == rand) return true;\n\n      Pair<Boolean,Integer> pair = parseValue(splitFailureBeforeReplicaCreation);\n      boolean enabled = pair.first();\n      int chanceIn100 = pair.second();\n      if (enabled && rand.nextInt(100) >= (100 - chanceIn100)) {\n        log.info(\"Injecting failure in creating replica for sub-shard\");\n        throw new SolrException(ErrorCode.SERVER_ERROR, \"Unable to create replica\");\n      }\n    }\n\n    return true;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/TestInjection#injectSplitFailureBeforeReplicaCreation().mjava","pathOld":"/dev/null","sourceNew":"  public static boolean injectSplitFailureBeforeReplicaCreation() {\n    if (splitFailureBeforeReplicaCreation != null)  {\n      Random rand = random();\n      if (null == rand) return true;\n\n      Pair<Boolean,Integer> pair = parseValue(splitFailureBeforeReplicaCreation);\n      boolean enabled = pair.first();\n      int chanceIn100 = pair.second();\n      if (enabled && rand.nextInt(100) >= (100 - chanceIn100)) {\n        log.info(\"Injecting failure in creating replica for sub-shard\");\n        throw new SolrException(ErrorCode.SERVER_ERROR, \"Unable to create replica\");\n      }\n    }\n\n    return true;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"685af99397b6da31116a2cac747ed255d217d080","date":1530038134,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/TestInjection#injectSplitFailureBeforeReplicaCreation().mjava","pathOld":"solr/core/src/java/org/apache/solr/util/TestInjection#injectSplitFailureBeforeReplicaCreation().mjava","sourceNew":"  public static boolean injectSplitFailureBeforeReplicaCreation() {\n    return injectSplitFailure(splitFailureBeforeReplicaCreation, \"before creating replica for sub-shard\");\n  }\n\n","sourceOld":"  public static boolean injectSplitFailureBeforeReplicaCreation() {\n    if (splitFailureBeforeReplicaCreation != null)  {\n      Random rand = random();\n      if (null == rand) return true;\n\n      Pair<Boolean,Integer> pair = parseValue(splitFailureBeforeReplicaCreation);\n      boolean enabled = pair.first();\n      int chanceIn100 = pair.second();\n      if (enabled && rand.nextInt(100) >= (100 - chanceIn100)) {\n        log.info(\"Injecting failure in creating replica for sub-shard\");\n        throw new SolrException(ErrorCode.SERVER_ERROR, \"Unable to create replica\");\n      }\n    }\n\n    return true;\n  }\n\n","bugFix":["d1d231959c9d0545adc421b7a2fefa7db47300d8"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26","date":1531589977,"type":3,"author":"Michael Braun","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/TestInjection#injectSplitFailureBeforeReplicaCreation().mjava","pathOld":"solr/core/src/java/org/apache/solr/util/TestInjection#injectSplitFailureBeforeReplicaCreation().mjava","sourceNew":"  public static boolean injectSplitFailureBeforeReplicaCreation() {\n    return injectSplitFailure(splitFailureBeforeReplicaCreation, \"before creating replica for sub-shard\");\n  }\n\n","sourceOld":"  public static boolean injectSplitFailureBeforeReplicaCreation() {\n    if (splitFailureBeforeReplicaCreation != null)  {\n      Random rand = random();\n      if (null == rand) return true;\n\n      Pair<Boolean,Integer> pair = parseValue(splitFailureBeforeReplicaCreation);\n      boolean enabled = pair.first();\n      int chanceIn100 = pair.second();\n      if (enabled && rand.nextInt(100) >= (100 - chanceIn100)) {\n        log.info(\"Injecting failure in creating replica for sub-shard\");\n        throw new SolrException(ErrorCode.SERVER_ERROR, \"Unable to create replica\");\n      }\n    }\n\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","date":1531905561,"type":3,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/TestInjection#injectSplitFailureBeforeReplicaCreation().mjava","pathOld":"solr/core/src/java/org/apache/solr/util/TestInjection#injectSplitFailureBeforeReplicaCreation().mjava","sourceNew":"  public static boolean injectSplitFailureBeforeReplicaCreation() {\n    return injectSplitFailure(splitFailureBeforeReplicaCreation, \"before creating replica for sub-shard\");\n  }\n\n","sourceOld":"  public static boolean injectSplitFailureBeforeReplicaCreation() {\n    if (splitFailureBeforeReplicaCreation != null)  {\n      Random rand = random();\n      if (null == rand) return true;\n\n      Pair<Boolean,Integer> pair = parseValue(splitFailureBeforeReplicaCreation);\n      boolean enabled = pair.first();\n      int chanceIn100 = pair.second();\n      if (enabled && rand.nextInt(100) >= (100 - chanceIn100)) {\n        log.info(\"Injecting failure in creating replica for sub-shard\");\n        throw new SolrException(ErrorCode.SERVER_ERROR, \"Unable to create replica\");\n      }\n    }\n\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d1d231959c9d0545adc421b7a2fefa7db47300d8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d","685af99397b6da31116a2cac747ed255d217d080"],"685af99397b6da31116a2cac747ed255d217d080":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","d1d231959c9d0545adc421b7a2fefa7db47300d8"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["685af99397b6da31116a2cac747ed255d217d080"],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d","685af99397b6da31116a2cac747ed255d217d080"]},"commit2Childs":{"d1d231959c9d0545adc421b7a2fefa7db47300d8":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":[],"685af99397b6da31116a2cac747ed255d217d080":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d1d231959c9d0545adc421b7a2fefa7db47300d8","17e5da53e4e5bd659e22add9bba1cfa222e7e30d","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","685af99397b6da31116a2cac747ed255d217d080","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":[]},"heads":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}