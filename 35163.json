{"path":"solr/src/java/org/apache/solr/response/BaseResponseWriter.SingleResponseWriter#isStreamingDocs().mjava","commits":[{"id":"893269407f5c988a4b2ee13c7ffc01ec43136c1d","date":1268598046,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/response/BaseResponseWriter.SingleResponseWriter#isStreamingDocs().mjava","pathOld":"/dev/null","sourceNew":"    /**\r\n     * Overriding this method to return false forces all\r\n     * {@link SolrInputDocument}s to be spit out as a {@link SolrDocumentList}\r\n     * so they can be processed as a whole, rather than on a doc-by-doc basis.\r\n     * If set to false, this method calls\r\n     * {@link #writeAllDocs(DocListInfo, List)}, else if set to true, then this\r\n     * method forces calling {@link #writeDoc(SolrDocument)} on a doc-by-doc\r\n     * basis. one\r\n     * \r\n     * @return True to force {@link #writeDoc(SolrDocument)} to be called, False\r\n     *         to force {@link #writeAllDocs(DocListInfo, List)} to be called.\r\n     */\r\n    public boolean isStreamingDocs() { return true; }\r\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","date":1268599006,"type":4,"author":"Mark Robert Miller","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/src/java/org/apache/solr/response/BaseResponseWriter.SingleResponseWriter#isStreamingDocs().mjava","sourceNew":null,"sourceOld":"    /**\r\n     * Overriding this method to return false forces all\r\n     * {@link SolrInputDocument}s to be spit out as a {@link SolrDocumentList}\r\n     * so they can be processed as a whole, rather than on a doc-by-doc basis.\r\n     * If set to false, this method calls\r\n     * {@link #writeAllDocs(DocListInfo, List)}, else if set to true, then this\r\n     * method forces calling {@link #writeDoc(SolrDocument)} on a doc-by-doc\r\n     * basis. one\r\n     * \r\n     * @return True to force {@link #writeDoc(SolrDocument)} to be called, False\r\n     *         to force {@link #writeAllDocs(DocListInfo, List)} to be called.\r\n     */\r\n    public boolean isStreamingDocs() { return true; }\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/response/BaseResponseWriter.SingleResponseWriter#isStreamingDocs().mjava","pathOld":"src/java/org/apache/solr/response/BaseResponseWriter.SingleResponseWriter#isStreamingDocs().mjava","sourceNew":"    /**\r\n     * Overriding this method to return false forces all\r\n     * {@link SolrInputDocument}s to be spit out as a {@link SolrDocumentList}\r\n     * so they can be processed as a whole, rather than on a doc-by-doc basis.\r\n     * If set to false, this method calls\r\n     * {@link #writeAllDocs(DocListInfo, List)}, else if set to true, then this\r\n     * method forces calling {@link #writeDoc(SolrDocument)} on a doc-by-doc\r\n     * basis. one\r\n     * \r\n     * @return True to force {@link #writeDoc(SolrDocument)} to be called, False\r\n     *         to force {@link #writeAllDocs(DocListInfo, List)} to be called.\r\n     */\r\n    public boolean isStreamingDocs() { return true; }\r\n\n","sourceOld":"    /**\r\n     * Overriding this method to return false forces all\r\n     * {@link SolrInputDocument}s to be spit out as a {@link SolrDocumentList}\r\n     * so they can be processed as a whole, rather than on a doc-by-doc basis.\r\n     * If set to false, this method calls\r\n     * {@link #writeAllDocs(DocListInfo, List)}, else if set to true, then this\r\n     * method forces calling {@link #writeDoc(SolrDocument)} on a doc-by-doc\r\n     * basis. one\r\n     * \r\n     * @return True to force {@link #writeDoc(SolrDocument)} to be called, False\r\n     *         to force {@link #writeAllDocs(DocListInfo, List)} to be called.\r\n     */\r\n    public boolean isStreamingDocs() { return true; }\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1da8d55113b689b06716246649de6f62430f15c0","date":1453508340,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/response/BaseResponseWriter.SingleResponseWriter#isStreamingDocs().mjava","pathOld":"/dev/null","sourceNew":"    /**\r\n     * Overriding this method to return false forces all\r\n     * {@link SolrInputDocument}s to be spit out as a {@link SolrDocumentList}\r\n     * so they can be processed as a whole, rather than on a doc-by-doc basis.\r\n     * If set to false, this method calls\r\n     * {@link #writeAllDocs(DocListInfo, List)}, else if set to true, then this\r\n     * method forces calling {@link #writeDoc(SolrDocument)} on a doc-by-doc\r\n     * basis. one\r\n     * \r\n     * @return True to force {@link #writeDoc(SolrDocument)} to be called, False\r\n     *         to force {@link #writeAllDocs(DocListInfo, List)} to be called.\r\n     */\r\n    public boolean isStreamingDocs() { return true; }\r\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dff3adc4fd8094e3973a5ecbbe8968ae45a86a55","date":1270182973,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/response/BaseResponseWriter.SingleResponseWriter#isStreamingDocs().mjava","pathOld":"solr/src/java/org/apache/solr/response/BaseResponseWriter.SingleResponseWriter#isStreamingDocs().mjava","sourceNew":"    /**\n     * Overriding this method to return false forces all\n     * {@link SolrInputDocument}s to be spit out as a {@link SolrDocumentList}\n     * so they can be processed as a whole, rather than on a doc-by-doc basis.\n     * If set to false, this method calls\n     * {@link #writeAllDocs(DocListInfo, List)}, else if set to true, then this\n     * method forces calling {@link #writeDoc(SolrDocument)} on a doc-by-doc\n     * basis. one\n     * \n     * @return True to force {@link #writeDoc(SolrDocument)} to be called, False\n     *         to force {@link #writeAllDocs(DocListInfo, List)} to be called.\n     */\n    public boolean isStreamingDocs() { return true; }\n\n","sourceOld":"    /**\r\n     * Overriding this method to return false forces all\r\n     * {@link SolrInputDocument}s to be spit out as a {@link SolrDocumentList}\r\n     * so they can be processed as a whole, rather than on a doc-by-doc basis.\r\n     * If set to false, this method calls\r\n     * {@link #writeAllDocs(DocListInfo, List)}, else if set to true, then this\r\n     * method forces calling {@link #writeDoc(SolrDocument)} on a doc-by-doc\r\n     * basis. one\r\n     * \r\n     * @return True to force {@link #writeDoc(SolrDocument)} to be called, False\r\n     *         to force {@link #writeAllDocs(DocListInfo, List)} to be called.\r\n     */\r\n    public boolean isStreamingDocs() { return true; }\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f16d28cc015e89676eb4465f05e003f430057587","date":1296442780,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/response/BaseResponseWriter.SingleResponseWriter#isStreamingDocs().mjava","pathOld":"solr/src/java/org/apache/solr/response/BaseResponseWriter.SingleResponseWriter#isStreamingDocs().mjava","sourceNew":"    /**\n     * Overriding this method to return false forces all\n     * {@link SolrInputDocument}s to be spit out as a {@link SolrDocumentList}\n     * so they can be processed as a whole, rather than on a doc-by-doc basis.\n     * If set to false, this method calls\n     * {@link #writeAllDocs(BaseResponseWriter.DocListInfo, List)}, else if set to true, then this\n     * method forces calling {@link #writeDoc(SolrDocument)} on a doc-by-doc\n     * basis. one\n     * \n     * @return True to force {@link #writeDoc(SolrDocument)} to be called, False\n     *         to force {@link #writeAllDocs(BaseResponseWriter.DocListInfo, List)} to be called.\n     */\n    public boolean isStreamingDocs() { return true; }\n\n","sourceOld":"    /**\n     * Overriding this method to return false forces all\n     * {@link SolrInputDocument}s to be spit out as a {@link SolrDocumentList}\n     * so they can be processed as a whole, rather than on a doc-by-doc basis.\n     * If set to false, this method calls\n     * {@link #writeAllDocs(DocListInfo, List)}, else if set to true, then this\n     * method forces calling {@link #writeDoc(SolrDocument)} on a doc-by-doc\n     * basis. one\n     * \n     * @return True to force {@link #writeDoc(SolrDocument)} to be called, False\n     *         to force {@link #writeAllDocs(DocListInfo, List)} to be called.\n     */\n    public boolean isStreamingDocs() { return true; }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/response/BaseResponseWriter.SingleResponseWriter#isStreamingDocs().mjava","pathOld":"solr/src/java/org/apache/solr/response/BaseResponseWriter.SingleResponseWriter#isStreamingDocs().mjava","sourceNew":"    /**\n     * Overriding this method to return false forces all\n     * {@link SolrInputDocument}s to be spit out as a {@link SolrDocumentList}\n     * so they can be processed as a whole, rather than on a doc-by-doc basis.\n     * If set to false, this method calls\n     * {@link #writeAllDocs(BaseResponseWriter.DocListInfo, List)}, else if set to true, then this\n     * method forces calling {@link #writeDoc(SolrDocument)} on a doc-by-doc\n     * basis. one\n     * \n     * @return True to force {@link #writeDoc(SolrDocument)} to be called, False\n     *         to force {@link #writeAllDocs(BaseResponseWriter.DocListInfo, List)} to be called.\n     */\n    public boolean isStreamingDocs() { return true; }\n\n","sourceOld":"    /**\n     * Overriding this method to return false forces all\n     * {@link SolrInputDocument}s to be spit out as a {@link SolrDocumentList}\n     * so they can be processed as a whole, rather than on a doc-by-doc basis.\n     * If set to false, this method calls\n     * {@link #writeAllDocs(DocListInfo, List)}, else if set to true, then this\n     * method forces calling {@link #writeDoc(SolrDocument)} on a doc-by-doc\n     * basis. one\n     * \n     * @return True to force {@link #writeDoc(SolrDocument)} to be called, False\n     *         to force {@link #writeAllDocs(DocListInfo, List)} to be called.\n     */\n    public boolean isStreamingDocs() { return true; }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/response/BaseResponseWriter.SingleResponseWriter#isStreamingDocs().mjava","pathOld":"solr/src/java/org/apache/solr/response/BaseResponseWriter.SingleResponseWriter#isStreamingDocs().mjava","sourceNew":"    /**\n     * Overriding this method to return false forces all\n     * {@link SolrInputDocument}s to be spit out as a {@link SolrDocumentList}\n     * so they can be processed as a whole, rather than on a doc-by-doc basis.\n     * If set to false, this method calls\n     * {@link #writeAllDocs(BaseResponseWriter.DocListInfo, List)}, else if set to true, then this\n     * method forces calling {@link #writeDoc(SolrDocument)} on a doc-by-doc\n     * basis. one\n     * \n     * @return True to force {@link #writeDoc(SolrDocument)} to be called, False\n     *         to force {@link #writeAllDocs(BaseResponseWriter.DocListInfo, List)} to be called.\n     */\n    public boolean isStreamingDocs() { return true; }\n\n","sourceOld":"    /**\n     * Overriding this method to return false forces all\n     * {@link SolrInputDocument}s to be spit out as a {@link SolrDocumentList}\n     * so they can be processed as a whole, rather than on a doc-by-doc basis.\n     * If set to false, this method calls\n     * {@link #writeAllDocs(DocListInfo, List)}, else if set to true, then this\n     * method forces calling {@link #writeDoc(SolrDocument)} on a doc-by-doc\n     * basis. one\n     * \n     * @return True to force {@link #writeDoc(SolrDocument)} to be called, False\n     *         to force {@link #writeAllDocs(DocListInfo, List)} to be called.\n     */\n    public boolean isStreamingDocs() { return true; }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c5ea1095b056cbefa393b519c151cd8d4c60088f","date":1304398632,"type":4,"author":"Ryan McKinley","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/src/java/org/apache/solr/response/BaseResponseWriter.SingleResponseWriter#isStreamingDocs().mjava","sourceNew":null,"sourceOld":"    /**\n     * Overriding this method to return false forces all\n     * {@link SolrInputDocument}s to be spit out as a {@link SolrDocumentList}\n     * so they can be processed as a whole, rather than on a doc-by-doc basis.\n     * If set to false, this method calls\n     * {@link #writeAllDocs(BaseResponseWriter.DocListInfo, List)}, else if set to true, then this\n     * method forces calling {@link #writeDoc(SolrDocument)} on a doc-by-doc\n     * basis. one\n     * \n     * @return True to force {@link #writeDoc(SolrDocument)} to be called, False\n     *         to force {@link #writeAllDocs(BaseResponseWriter.DocListInfo, List)} to be called.\n     */\n    public boolean isStreamingDocs() { return true; }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c700f8d0842d3e52bb2bdfbfdc046a137e836edb","date":1305285499,"type":4,"author":"Simon Willnauer","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/src/java/org/apache/solr/response/BaseResponseWriter.SingleResponseWriter#isStreamingDocs().mjava","sourceNew":null,"sourceOld":"    /**\n     * Overriding this method to return false forces all\n     * {@link SolrInputDocument}s to be spit out as a {@link SolrDocumentList}\n     * so they can be processed as a whole, rather than on a doc-by-doc basis.\n     * If set to false, this method calls\n     * {@link #writeAllDocs(BaseResponseWriter.DocListInfo, List)}, else if set to true, then this\n     * method forces calling {@link #writeDoc(SolrDocument)} on a doc-by-doc\n     * basis. one\n     * \n     * @return True to force {@link #writeDoc(SolrDocument)} to be called, False\n     *         to force {@link #writeAllDocs(BaseResponseWriter.DocListInfo, List)} to be called.\n     */\n    public boolean isStreamingDocs() { return true; }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":4,"author":"Steven Rowe","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/src/java/org/apache/solr/response/BaseResponseWriter.SingleResponseWriter#isStreamingDocs().mjava","sourceNew":null,"sourceOld":"    /**\n     * Overriding this method to return false forces all\n     * {@link SolrInputDocument}s to be spit out as a {@link SolrDocumentList}\n     * so they can be processed as a whole, rather than on a doc-by-doc basis.\n     * If set to false, this method calls\n     * {@link #writeAllDocs(BaseResponseWriter.DocListInfo, List)}, else if set to true, then this\n     * method forces calling {@link #writeDoc(SolrDocument)} on a doc-by-doc\n     * basis. one\n     * \n     * @return True to force {@link #writeDoc(SolrDocument)} to be called, False\n     *         to force {@link #writeAllDocs(BaseResponseWriter.DocListInfo, List)} to be called.\n     */\n    public boolean isStreamingDocs() { return true; }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c5ea1095b056cbefa393b519c151cd8d4c60088f":["f16d28cc015e89676eb4465f05e003f430057587"],"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"f16d28cc015e89676eb4465f05e003f430057587":["dff3adc4fd8094e3973a5ecbbe8968ae45a86a55"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"1da8d55113b689b06716246649de6f62430f15c0":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","ad94625fb8d088209f46650c8097196fec67f00c"],"a3776dccca01c11e7046323cfad46a3b4a471233":["f16d28cc015e89676eb4465f05e003f430057587","c5ea1095b056cbefa393b519c151cd8d4c60088f"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["dff3adc4fd8094e3973a5ecbbe8968ae45a86a55","f16d28cc015e89676eb4465f05e003f430057587"],"dff3adc4fd8094e3973a5ecbbe8968ae45a86a55":["1da8d55113b689b06716246649de6f62430f15c0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c700f8d0842d3e52bb2bdfbfdc046a137e836edb":["29ef99d61cda9641b6250bf9567329a6e65f901d","c5ea1095b056cbefa393b519c151cd8d4c60088f"],"ad94625fb8d088209f46650c8097196fec67f00c":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["dff3adc4fd8094e3973a5ecbbe8968ae45a86a55","f16d28cc015e89676eb4465f05e003f430057587"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c5ea1095b056cbefa393b519c151cd8d4c60088f"]},"commit2Childs":{"c5ea1095b056cbefa393b519c151cd8d4c60088f":["a3776dccca01c11e7046323cfad46a3b4a471233","c700f8d0842d3e52bb2bdfbfdc046a137e836edb","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["1da8d55113b689b06716246649de6f62430f15c0"],"f16d28cc015e89676eb4465f05e003f430057587":["c5ea1095b056cbefa393b519c151cd8d4c60088f","a3776dccca01c11e7046323cfad46a3b4a471233","29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["ad94625fb8d088209f46650c8097196fec67f00c"],"1da8d55113b689b06716246649de6f62430f15c0":["dff3adc4fd8094e3973a5ecbbe8968ae45a86a55"],"a3776dccca01c11e7046323cfad46a3b4a471233":[],"29ef99d61cda9641b6250bf9567329a6e65f901d":["c700f8d0842d3e52bb2bdfbfdc046a137e836edb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"dff3adc4fd8094e3973a5ecbbe8968ae45a86a55":["f16d28cc015e89676eb4465f05e003f430057587","29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"c700f8d0842d3e52bb2bdfbfdc046a137e836edb":[],"ad94625fb8d088209f46650c8097196fec67f00c":["1da8d55113b689b06716246649de6f62430f15c0"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a3776dccca01c11e7046323cfad46a3b4a471233","c700f8d0842d3e52bb2bdfbfdc046a137e836edb","bde51b089eb7f86171eb3406e38a274743f9b7ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}