{"path":"lucene/src/java/org/apache/lucene/index/codecs/BlockTreeTermsReader#close().mjava","commits":[{"id":"60ba444201d2570214b6fcf1d15600dc1a01f548","date":1313868045,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/BlockTreeTermsReader#close().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void close() throws IOException {\n    try {\n      IOUtils.closeSafely(false, in, postingsReader);\n    } finally { \n      for(FieldReader field : fields.values()) {\n        field.close();\n      }\n      // Clear so refs to terms index is GCable even if\n      // app hangs onto us:\n      fields.clear();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"24230fe54121f9be9d85f2c2067536296785e421","date":1314462346,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/BlockTreeTermsReader#close().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/BlockTreeTermsReader#close().mjava","sourceNew":"  @Override\n  public void close() throws IOException {\n    try {\n      IOUtils.close(in, postingsReader);\n    } finally { \n      for(FieldReader field : fields.values()) {\n        field.close();\n      }\n      // Clear so refs to terms index is GCable even if\n      // app hangs onto us:\n      fields.clear();\n    }\n  }\n\n","sourceOld":"  @Override\n  public void close() throws IOException {\n    try {\n      IOUtils.closeSafely(false, in, postingsReader);\n    } finally { \n      for(FieldReader field : fields.values()) {\n        field.close();\n      }\n      // Clear so refs to terms index is GCable even if\n      // app hangs onto us:\n      fields.clear();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e2297162a22c55456e200caef2cbcb00fe381120","date":1321551342,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/BlockTreeTermsReader#close().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/BlockTreeTermsReader#close().mjava","sourceNew":"  @Override\n  public void close() throws IOException {\n    try {\n      IOUtils.close(in, postingsReader);\n    } finally { \n      // Clear so refs to terms index is GCable even if\n      // app hangs onto us:\n      fields.clear();\n    }\n  }\n\n","sourceOld":"  @Override\n  public void close() throws IOException {\n    try {\n      IOUtils.close(in, postingsReader);\n    } finally { \n      for(FieldReader field : fields.values()) {\n        field.close();\n      }\n      // Clear so refs to terms index is GCable even if\n      // app hangs onto us:\n      fields.clear();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0ae5e3ed1232483b7b8a014f175a5fe43595982","date":1324062192,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/codecs/BlockTreeTermsReader#close().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/BlockTreeTermsReader#close().mjava","sourceNew":"  @Override\n  public void close() throws IOException {\n    try {\n      IOUtils.close(in, postingsReader);\n    } finally { \n      // Clear so refs to terms index is GCable even if\n      // app hangs onto us:\n      fields.clear();\n    }\n  }\n\n","sourceOld":"  @Override\n  public void close() throws IOException {\n    try {\n      IOUtils.close(in, postingsReader);\n    } finally { \n      // Clear so refs to terms index is GCable even if\n      // app hangs onto us:\n      fields.clear();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"24230fe54121f9be9d85f2c2067536296785e421":["60ba444201d2570214b6fcf1d15600dc1a01f548"],"60ba444201d2570214b6fcf1d15600dc1a01f548":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e2297162a22c55456e200caef2cbcb00fe381120":["24230fe54121f9be9d85f2c2067536296785e421"],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["e2297162a22c55456e200caef2cbcb00fe381120"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"]},"commit2Childs":{"24230fe54121f9be9d85f2c2067536296785e421":["e2297162a22c55456e200caef2cbcb00fe381120"],"60ba444201d2570214b6fcf1d15600dc1a01f548":["24230fe54121f9be9d85f2c2067536296785e421"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["60ba444201d2570214b6fcf1d15600dc1a01f548"],"e2297162a22c55456e200caef2cbcb00fe381120":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}