{"path":"contrib/queryparser/src/test/org/apache/lucene/queryParser/standard/TestMultiFieldQPHelper#assertStopQueryEquals(String,String).mjava","commits":[{"id":"e8a848e758754282137f42bf85793c278e250390","date":1249640668,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/queryparser/src/test/org/apache/lucene/queryParser/standard/TestMultiFieldQPHelper#assertStopQueryEquals(String,String).mjava","pathOld":"contrib/queryparser/src/test/org/apache/lucene/queryParser/original/TestMultiFieldQPHelper#assertStopQueryEquals(String,String).mjava","sourceNew":"  // verify parsing of query using a stopping analyzer\n  private void assertStopQueryEquals(String qtxt, String expectedRes)\n      throws Exception {\n    String[] fields = { \"b\", \"t\" };\n    Occur occur[] = { Occur.SHOULD, Occur.SHOULD };\n    TestQPHelper.QPTestAnalyzer a = new TestQPHelper.QPTestAnalyzer();\n    StandardQueryParser mfqp = new StandardQueryParser();\n    mfqp.setMultiFields(fields);\n    mfqp.setAnalyzer(a);\n\n    Query q = mfqp.parse(qtxt, null);\n    assertEquals(expectedRes, q.toString());\n\n    q = QueryParserUtil.parse(qtxt, fields, occur, a);\n    assertEquals(expectedRes, q.toString());\n  }\n\n","sourceOld":"  // verify parsing of query using a stopping analyzer\n  private void assertStopQueryEquals(String qtxt, String expectedRes)\n      throws Exception {\n    String[] fields = { \"b\", \"t\" };\n    Occur occur[] = { Occur.SHOULD, Occur.SHOULD };\n    TestQPHelper.QPTestAnalyzer a = new TestQPHelper.QPTestAnalyzer();\n    OriginalQueryParserHelper mfqp = new OriginalQueryParserHelper();\n    mfqp.setMultiFields(fields);\n    mfqp.setAnalyzer(a);\n\n    Query q = mfqp.parse(qtxt, null);\n    assertEquals(expectedRes, q.toString());\n\n    q = QueryParserUtil.parse(qtxt, fields, occur, a);\n    assertEquals(expectedRes, q.toString());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/standard/TestMultiFieldQPHelper#assertStopQueryEquals(String,String).mjava","pathOld":"contrib/queryparser/src/test/org/apache/lucene/queryParser/standard/TestMultiFieldQPHelper#assertStopQueryEquals(String,String).mjava","sourceNew":"  // verify parsing of query using a stopping analyzer\n  private void assertStopQueryEquals(String qtxt, String expectedRes)\n      throws Exception {\n    String[] fields = { \"b\", \"t\" };\n    Occur occur[] = { Occur.SHOULD, Occur.SHOULD };\n    TestQPHelper.QPTestAnalyzer a = new TestQPHelper.QPTestAnalyzer();\n    StandardQueryParser mfqp = new StandardQueryParser();\n    mfqp.setMultiFields(fields);\n    mfqp.setAnalyzer(a);\n\n    Query q = mfqp.parse(qtxt, null);\n    assertEquals(expectedRes, q.toString());\n\n    q = QueryParserUtil.parse(qtxt, fields, occur, a);\n    assertEquals(expectedRes, q.toString());\n  }\n\n","sourceOld":"  // verify parsing of query using a stopping analyzer\n  private void assertStopQueryEquals(String qtxt, String expectedRes)\n      throws Exception {\n    String[] fields = { \"b\", \"t\" };\n    Occur occur[] = { Occur.SHOULD, Occur.SHOULD };\n    TestQPHelper.QPTestAnalyzer a = new TestQPHelper.QPTestAnalyzer();\n    StandardQueryParser mfqp = new StandardQueryParser();\n    mfqp.setMultiFields(fields);\n    mfqp.setAnalyzer(a);\n\n    Query q = mfqp.parse(qtxt, null);\n    assertEquals(expectedRes, q.toString());\n\n    q = QueryParserUtil.parse(qtxt, fields, occur, a);\n    assertEquals(expectedRes, q.toString());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e8a848e758754282137f42bf85793c278e250390":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["e8a848e758754282137f42bf85793c278e250390"]},"commit2Childs":{"e8a848e758754282137f42bf85793c278e250390":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e8a848e758754282137f42bf85793c278e250390"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}