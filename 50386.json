{"path":"lucene/src/test-framework/org/apache/lucene/index/codecs/preflexrw/PreFlexFieldsWriter#PreFlexFieldsWriter(SegmentWriteState).mjava","commits":[{"id":"f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce","date":1297021734,"type":1,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/test-framework/org/apache/lucene/index/codecs/preflexrw/PreFlexFieldsWriter#PreFlexFieldsWriter(SegmentWriteState).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/codecs/preflexrw/PreFlexFieldsWriter#PreFlexFieldsWriter(SegmentWriteState).mjava","sourceNew":"  public PreFlexFieldsWriter(SegmentWriteState state) throws IOException {\n    termsOut = new TermInfosWriter(state.directory,\n                                   state.segmentName,\n                                   state.fieldInfos,\n                                   state.termIndexInterval);\n\n    final String freqFile = IndexFileNames.segmentFileName(state.segmentName, \"\", PreFlexCodec.FREQ_EXTENSION);\n    freqOut = state.directory.createOutput(freqFile);\n    totalNumDocs = state.numDocs;\n\n    if (state.fieldInfos.hasProx()) {\n      final String proxFile = IndexFileNames.segmentFileName(state.segmentName, \"\", PreFlexCodec.PROX_EXTENSION);\n      proxOut = state.directory.createOutput(proxFile);\n    } else {\n      proxOut = null;\n    }\n\n    skipListWriter = new DefaultSkipListWriter(termsOut.skipInterval,\n                                               termsOut.maxSkipLevels,\n                                               totalNumDocs,\n                                               freqOut,\n                                               proxOut);\n    //System.out.println(\"\\nw start seg=\" + segment);\n  }\n\n","sourceOld":"  public PreFlexFieldsWriter(SegmentWriteState state) throws IOException {\n    termsOut = new TermInfosWriter(state.directory,\n                                   state.segmentName,\n                                   state.fieldInfos,\n                                   state.termIndexInterval);\n\n    final String freqFile = IndexFileNames.segmentFileName(state.segmentName, \"\", PreFlexCodec.FREQ_EXTENSION);\n    freqOut = state.directory.createOutput(freqFile);\n    totalNumDocs = state.numDocs;\n\n    if (state.fieldInfos.hasProx()) {\n      final String proxFile = IndexFileNames.segmentFileName(state.segmentName, \"\", PreFlexCodec.PROX_EXTENSION);\n      proxOut = state.directory.createOutput(proxFile);\n    } else {\n      proxOut = null;\n    }\n\n    skipListWriter = new DefaultSkipListWriter(termsOut.skipInterval,\n                                               termsOut.maxSkipLevels,\n                                               totalNumDocs,\n                                               freqOut,\n                                               proxOut);\n    //System.out.println(\"\\nw start seg=\" + segment);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":1,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/index/codecs/preflexrw/PreFlexFieldsWriter#PreFlexFieldsWriter(SegmentWriteState).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/codecs/preflexrw/PreFlexFieldsWriter#PreFlexFieldsWriter(SegmentWriteState).mjava","sourceNew":"  public PreFlexFieldsWriter(SegmentWriteState state) throws IOException {\n    termsOut = new TermInfosWriter(state.directory,\n                                   state.segmentName,\n                                   state.fieldInfos,\n                                   state.termIndexInterval);\n\n    final String freqFile = IndexFileNames.segmentFileName(state.segmentName, \"\", PreFlexCodec.FREQ_EXTENSION);\n    freqOut = state.directory.createOutput(freqFile);\n    totalNumDocs = state.numDocs;\n\n    if (state.fieldInfos.hasProx()) {\n      final String proxFile = IndexFileNames.segmentFileName(state.segmentName, \"\", PreFlexCodec.PROX_EXTENSION);\n      proxOut = state.directory.createOutput(proxFile);\n    } else {\n      proxOut = null;\n    }\n\n    skipListWriter = new DefaultSkipListWriter(termsOut.skipInterval,\n                                               termsOut.maxSkipLevels,\n                                               totalNumDocs,\n                                               freqOut,\n                                               proxOut);\n    //System.out.println(\"\\nw start seg=\" + segment);\n  }\n\n","sourceOld":"  public PreFlexFieldsWriter(SegmentWriteState state) throws IOException {\n    termsOut = new TermInfosWriter(state.directory,\n                                   state.segmentName,\n                                   state.fieldInfos,\n                                   state.termIndexInterval);\n\n    final String freqFile = IndexFileNames.segmentFileName(state.segmentName, \"\", PreFlexCodec.FREQ_EXTENSION);\n    freqOut = state.directory.createOutput(freqFile);\n    totalNumDocs = state.numDocs;\n\n    if (state.fieldInfos.hasProx()) {\n      final String proxFile = IndexFileNames.segmentFileName(state.segmentName, \"\", PreFlexCodec.PROX_EXTENSION);\n      proxOut = state.directory.createOutput(proxFile);\n    } else {\n      proxOut = null;\n    }\n\n    skipListWriter = new DefaultSkipListWriter(termsOut.skipInterval,\n                                               termsOut.maxSkipLevels,\n                                               totalNumDocs,\n                                               freqOut,\n                                               proxOut);\n    //System.out.println(\"\\nw start seg=\" + segment);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":1,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/index/codecs/preflexrw/PreFlexFieldsWriter#PreFlexFieldsWriter(SegmentWriteState).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/codecs/preflexrw/PreFlexFieldsWriter#PreFlexFieldsWriter(SegmentWriteState).mjava","sourceNew":"  public PreFlexFieldsWriter(SegmentWriteState state) throws IOException {\n    termsOut = new TermInfosWriter(state.directory,\n                                   state.segmentName,\n                                   state.fieldInfos,\n                                   state.termIndexInterval);\n\n    final String freqFile = IndexFileNames.segmentFileName(state.segmentName, \"\", PreFlexCodec.FREQ_EXTENSION);\n    freqOut = state.directory.createOutput(freqFile);\n    totalNumDocs = state.numDocs;\n\n    if (state.fieldInfos.hasProx()) {\n      final String proxFile = IndexFileNames.segmentFileName(state.segmentName, \"\", PreFlexCodec.PROX_EXTENSION);\n      proxOut = state.directory.createOutput(proxFile);\n    } else {\n      proxOut = null;\n    }\n\n    skipListWriter = new DefaultSkipListWriter(termsOut.skipInterval,\n                                               termsOut.maxSkipLevels,\n                                               totalNumDocs,\n                                               freqOut,\n                                               proxOut);\n    //System.out.println(\"\\nw start seg=\" + segment);\n  }\n\n","sourceOld":"  public PreFlexFieldsWriter(SegmentWriteState state) throws IOException {\n    termsOut = new TermInfosWriter(state.directory,\n                                   state.segmentName,\n                                   state.fieldInfos,\n                                   state.termIndexInterval);\n\n    final String freqFile = IndexFileNames.segmentFileName(state.segmentName, \"\", PreFlexCodec.FREQ_EXTENSION);\n    freqOut = state.directory.createOutput(freqFile);\n    totalNumDocs = state.numDocs;\n\n    if (state.fieldInfos.hasProx()) {\n      final String proxFile = IndexFileNames.segmentFileName(state.segmentName, \"\", PreFlexCodec.PROX_EXTENSION);\n      proxOut = state.directory.createOutput(proxFile);\n    } else {\n      proxOut = null;\n    }\n\n    skipListWriter = new DefaultSkipListWriter(termsOut.skipInterval,\n                                               termsOut.maxSkipLevels,\n                                               totalNumDocs,\n                                               freqOut,\n                                               proxOut);\n    //System.out.println(\"\\nw start seg=\" + segment);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"639c36565ce03aed5b0fce7c9e4448e53a1f7efd","date":1308580104,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/test-framework/org/apache/lucene/index/codecs/preflexrw/PreFlexFieldsWriter#PreFlexFieldsWriter(SegmentWriteState).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/index/codecs/preflexrw/PreFlexFieldsWriter#PreFlexFieldsWriter(SegmentWriteState).mjava","sourceNew":"  public PreFlexFieldsWriter(SegmentWriteState state) throws IOException {\n    termsOut = new TermInfosWriter(state.directory,\n                                   state.segmentName,\n                                   state.fieldInfos,\n                                   state.termIndexInterval);\n\n    final String freqFile = IndexFileNames.segmentFileName(state.segmentName, \"\", PreFlexCodec.FREQ_EXTENSION);\n    freqOut = state.directory.createOutput(freqFile, state.context);\n    totalNumDocs = state.numDocs;\n\n    if (state.fieldInfos.hasProx()) {\n      final String proxFile = IndexFileNames.segmentFileName(state.segmentName, \"\", PreFlexCodec.PROX_EXTENSION);\n      proxOut = state.directory.createOutput(proxFile, state.context);\n    } else {\n      proxOut = null;\n    }\n\n    skipListWriter = new DefaultSkipListWriter(termsOut.skipInterval,\n                                               termsOut.maxSkipLevels,\n                                               totalNumDocs,\n                                               freqOut,\n                                               proxOut);\n    //System.out.println(\"\\nw start seg=\" + segment);\n  }\n\n","sourceOld":"  public PreFlexFieldsWriter(SegmentWriteState state) throws IOException {\n    termsOut = new TermInfosWriter(state.directory,\n                                   state.segmentName,\n                                   state.fieldInfos,\n                                   state.termIndexInterval);\n\n    final String freqFile = IndexFileNames.segmentFileName(state.segmentName, \"\", PreFlexCodec.FREQ_EXTENSION);\n    freqOut = state.directory.createOutput(freqFile);\n    totalNumDocs = state.numDocs;\n\n    if (state.fieldInfos.hasProx()) {\n      final String proxFile = IndexFileNames.segmentFileName(state.segmentName, \"\", PreFlexCodec.PROX_EXTENSION);\n      proxOut = state.directory.createOutput(proxFile);\n    } else {\n      proxOut = null;\n    }\n\n    skipListWriter = new DefaultSkipListWriter(termsOut.skipInterval,\n                                               termsOut.maxSkipLevels,\n                                               totalNumDocs,\n                                               freqOut,\n                                               proxOut);\n    //System.out.println(\"\\nw start seg=\" + segment);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ddc4c914be86e34b54f70023f45a60fa7f04e929","date":1310115160,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/index/codecs/preflexrw/PreFlexFieldsWriter#PreFlexFieldsWriter(SegmentWriteState).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/index/codecs/preflexrw/PreFlexFieldsWriter#PreFlexFieldsWriter(SegmentWriteState).mjava","sourceNew":"  public PreFlexFieldsWriter(SegmentWriteState state) throws IOException {\n    termsOut = new TermInfosWriter(state.directory,\n                                   state.segmentName,\n                                   state.fieldInfos,\n                                   state.termIndexInterval);\n\n    final String freqFile = IndexFileNames.segmentFileName(state.segmentName, \"\", PreFlexCodec.FREQ_EXTENSION);\n    freqOut = state.directory.createOutput(freqFile, state.context);\n    totalNumDocs = state.numDocs;\n\n    if (state.fieldInfos.hasProx()) {\n      final String proxFile = IndexFileNames.segmentFileName(state.segmentName, \"\", PreFlexCodec.PROX_EXTENSION);\n      proxOut = state.directory.createOutput(proxFile, state.context);\n    } else {\n      proxOut = null;\n    }\n\n    skipListWriter = new DefaultSkipListWriter(termsOut.skipInterval,\n                                               termsOut.maxSkipLevels,\n                                               totalNumDocs,\n                                               freqOut,\n                                               proxOut);\n    //System.out.println(\"\\nw start seg=\" + segment);\n  }\n\n","sourceOld":"  public PreFlexFieldsWriter(SegmentWriteState state) throws IOException {\n    termsOut = new TermInfosWriter(state.directory,\n                                   state.segmentName,\n                                   state.fieldInfos,\n                                   state.termIndexInterval);\n\n    final String freqFile = IndexFileNames.segmentFileName(state.segmentName, \"\", PreFlexCodec.FREQ_EXTENSION);\n    freqOut = state.directory.createOutput(freqFile);\n    totalNumDocs = state.numDocs;\n\n    if (state.fieldInfos.hasProx()) {\n      final String proxFile = IndexFileNames.segmentFileName(state.segmentName, \"\", PreFlexCodec.PROX_EXTENSION);\n      proxOut = state.directory.createOutput(proxFile);\n    } else {\n      proxOut = null;\n    }\n\n    skipListWriter = new DefaultSkipListWriter(termsOut.skipInterval,\n                                               termsOut.maxSkipLevels,\n                                               totalNumDocs,\n                                               freqOut,\n                                               proxOut);\n    //System.out.println(\"\\nw start seg=\" + segment);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5d004d0e0b3f65bb40da76d476d659d7888270e8","date":1310158940,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/index/codecs/preflexrw/PreFlexFieldsWriter#PreFlexFieldsWriter(SegmentWriteState).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/index/codecs/preflexrw/PreFlexFieldsWriter#PreFlexFieldsWriter(SegmentWriteState).mjava","sourceNew":"  public PreFlexFieldsWriter(SegmentWriteState state) throws IOException {\n    termsOut = new TermInfosWriter(state.directory,\n                                   state.segmentName,\n                                   state.fieldInfos,\n                                   state.termIndexInterval);\n\n    final String freqFile = IndexFileNames.segmentFileName(state.segmentName, \"\", PreFlexCodec.FREQ_EXTENSION);\n    freqOut = state.directory.createOutput(freqFile, state.context);\n    totalNumDocs = state.numDocs;\n\n    if (state.fieldInfos.hasProx()) {\n      final String proxFile = IndexFileNames.segmentFileName(state.segmentName, \"\", PreFlexCodec.PROX_EXTENSION);\n      proxOut = state.directory.createOutput(proxFile, state.context);\n    } else {\n      proxOut = null;\n    }\n\n    skipListWriter = new DefaultSkipListWriter(termsOut.skipInterval,\n                                               termsOut.maxSkipLevels,\n                                               totalNumDocs,\n                                               freqOut,\n                                               proxOut);\n    //System.out.println(\"\\nw start seg=\" + segment);\n  }\n\n","sourceOld":"  public PreFlexFieldsWriter(SegmentWriteState state) throws IOException {\n    termsOut = new TermInfosWriter(state.directory,\n                                   state.segmentName,\n                                   state.fieldInfos,\n                                   state.termIndexInterval);\n\n    final String freqFile = IndexFileNames.segmentFileName(state.segmentName, \"\", PreFlexCodec.FREQ_EXTENSION);\n    freqOut = state.directory.createOutput(freqFile);\n    totalNumDocs = state.numDocs;\n\n    if (state.fieldInfos.hasProx()) {\n      final String proxFile = IndexFileNames.segmentFileName(state.segmentName, \"\", PreFlexCodec.PROX_EXTENSION);\n      proxOut = state.directory.createOutput(proxFile);\n    } else {\n      proxOut = null;\n    }\n\n    skipListWriter = new DefaultSkipListWriter(termsOut.skipInterval,\n                                               termsOut.maxSkipLevels,\n                                               totalNumDocs,\n                                               freqOut,\n                                               proxOut);\n    //System.out.println(\"\\nw start seg=\" + segment);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7b91922b55d15444d554721b352861d028eb8278","date":1320421415,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test-framework/java/org/apache/lucene/index/codecs/preflexrw/PreFlexFieldsWriter#PreFlexFieldsWriter(SegmentWriteState).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/index/codecs/preflexrw/PreFlexFieldsWriter#PreFlexFieldsWriter(SegmentWriteState).mjava","sourceNew":"  public PreFlexFieldsWriter(SegmentWriteState state) throws IOException {\n    termsOut = new TermInfosWriter(state.directory,\n                                   state.segmentName,\n                                   state.fieldInfos,\n                                   state.termIndexInterval);\n\n    final String freqFile = IndexFileNames.segmentFileName(state.segmentName, \"\", Lucene3xPostingsFormat.FREQ_EXTENSION);\n    freqOut = state.directory.createOutput(freqFile, state.context);\n    totalNumDocs = state.numDocs;\n\n    if (state.fieldInfos.hasProx()) {\n      final String proxFile = IndexFileNames.segmentFileName(state.segmentName, \"\", Lucene3xPostingsFormat.PROX_EXTENSION);\n      proxOut = state.directory.createOutput(proxFile, state.context);\n    } else {\n      proxOut = null;\n    }\n\n    skipListWriter = new DefaultSkipListWriter(termsOut.skipInterval,\n                                               termsOut.maxSkipLevels,\n                                               totalNumDocs,\n                                               freqOut,\n                                               proxOut);\n    //System.out.println(\"\\nw start seg=\" + segment);\n  }\n\n","sourceOld":"  public PreFlexFieldsWriter(SegmentWriteState state) throws IOException {\n    termsOut = new TermInfosWriter(state.directory,\n                                   state.segmentName,\n                                   state.fieldInfos,\n                                   state.termIndexInterval);\n\n    final String freqFile = IndexFileNames.segmentFileName(state.segmentName, \"\", PreFlexCodec.FREQ_EXTENSION);\n    freqOut = state.directory.createOutput(freqFile, state.context);\n    totalNumDocs = state.numDocs;\n\n    if (state.fieldInfos.hasProx()) {\n      final String proxFile = IndexFileNames.segmentFileName(state.segmentName, \"\", PreFlexCodec.PROX_EXTENSION);\n      proxOut = state.directory.createOutput(proxFile, state.context);\n    } else {\n      proxOut = null;\n    }\n\n    skipListWriter = new DefaultSkipListWriter(termsOut.skipInterval,\n                                               termsOut.maxSkipLevels,\n                                               totalNumDocs,\n                                               freqOut,\n                                               proxOut);\n    //System.out.println(\"\\nw start seg=\" + segment);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7b91922b55d15444d554721b352861d028eb8278":["ddc4c914be86e34b54f70023f45a60fa7f04e929"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"639c36565ce03aed5b0fce7c9e4448e53a1f7efd":["f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce"],"5d004d0e0b3f65bb40da76d476d659d7888270e8":["f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce","ddc4c914be86e34b54f70023f45a60fa7f04e929"],"ddc4c914be86e34b54f70023f45a60fa7f04e929":["f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce","639c36565ce03aed5b0fce7c9e4448e53a1f7efd"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7b91922b55d15444d554721b352861d028eb8278"],"f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"7b91922b55d15444d554721b352861d028eb8278":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac","f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce"],"639c36565ce03aed5b0fce7c9e4448e53a1f7efd":["ddc4c914be86e34b54f70023f45a60fa7f04e929"],"5d004d0e0b3f65bb40da76d476d659d7888270e8":[],"ddc4c914be86e34b54f70023f45a60fa7f04e929":["7b91922b55d15444d554721b352861d028eb8278","5d004d0e0b3f65bb40da76d476d659d7888270e8"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":[],"f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce":["29ef99d61cda9641b6250bf9567329a6e65f901d","639c36565ce03aed5b0fce7c9e4448e53a1f7efd","5d004d0e0b3f65bb40da76d476d659d7888270e8","ddc4c914be86e34b54f70023f45a60fa7f04e929","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["29ef99d61cda9641b6250bf9567329a6e65f901d","5d004d0e0b3f65bb40da76d476d659d7888270e8","bde51b089eb7f86171eb3406e38a274743f9b7ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}