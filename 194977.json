{"path":"contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestDateFormatTransformer#testTransformRow_SingleRow().mjava","commits":[{"id":"4d4f1b2c5601680b01c4bb95a43fe6fb73f03103","date":1217446558,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestDateFormatTransformer#testTransformRow_SingleRow().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  @SuppressWarnings(\"unchecked\")\n  public void testTransformRow_SingleRow() throws Exception {\n    List fields = new ArrayList();\n    fields.add(AbstractDataImportHandlerTest.createMap(DataImporter.COLUMN,\n            \"lastModified\"));\n    fields.add(AbstractDataImportHandlerTest.createMap(DataImporter.COLUMN,\n            \"dateAdded\", RegexTransformer.SRC_COL_NAME, \"lastModified\",\n            DateFormatTransformer.DATE_TIME_FMT, \"MM/dd/yyyy\"));\n\n    SimpleDateFormat format = new SimpleDateFormat(\"MM/dd/yyyy\");\n    Date now = format.parse(format.format(new Date()));\n\n    Map row = AbstractDataImportHandlerTest.createMap(\"lastModified\", format\n            .format(now));\n\n    VariableResolverImpl resolver = new VariableResolverImpl();\n    resolver.addNamespace(\"e\", row);\n\n    Context context = AbstractDataImportHandlerTest.getContext(null, resolver,\n            null, 0, fields, null);\n    new DateFormatTransformer().transformRow(row, context);\n    Assert.assertEquals(now, row.get(\"dateAdded\"));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["ec93834386bed35d2664923b0cc98cf7e36168a4","ec93834386bed35d2664923b0cc98cf7e36168a4"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"594d4ee17b3d941ed34827ca6646e378cf7d8d2a","date":1239868870,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestDateFormatTransformer#testTransformRow_SingleRow().mjava","pathOld":"contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestDateFormatTransformer#testTransformRow_SingleRow().mjava","sourceNew":"  @Test\n  @SuppressWarnings(\"unchecked\")\n  public void testTransformRow_SingleRow() throws Exception {\n    List fields = new ArrayList();\n    fields.add(AbstractDataImportHandlerTest.createMap(DataImporter.COLUMN,\n            \"lastModified\"));\n    fields.add(AbstractDataImportHandlerTest.createMap(DataImporter.COLUMN,\n            \"dateAdded\", RegexTransformer.SRC_COL_NAME, \"lastModified\",\n            DateFormatTransformer.DATE_TIME_FMT, \"MM/dd/yyyy\"));\n\n    SimpleDateFormat format = new SimpleDateFormat(\"MM/dd/yyyy\");\n    Date now = format.parse(format.format(new Date()));\n\n    Map row = AbstractDataImportHandlerTest.createMap(\"lastModified\", format\n            .format(now));\n\n    VariableResolverImpl resolver = new VariableResolverImpl();\n    resolver.addNamespace(\"e\", row);\n\n    Context context = AbstractDataImportHandlerTest.getContext(null, resolver,\n            null, Context.FULL_DUMP, fields, null);\n    new DateFormatTransformer().transformRow(row, context);\n    Assert.assertEquals(now, row.get(\"dateAdded\"));\n  }\n\n","sourceOld":"  @Test\n  @SuppressWarnings(\"unchecked\")\n  public void testTransformRow_SingleRow() throws Exception {\n    List fields = new ArrayList();\n    fields.add(AbstractDataImportHandlerTest.createMap(DataImporter.COLUMN,\n            \"lastModified\"));\n    fields.add(AbstractDataImportHandlerTest.createMap(DataImporter.COLUMN,\n            \"dateAdded\", RegexTransformer.SRC_COL_NAME, \"lastModified\",\n            DateFormatTransformer.DATE_TIME_FMT, \"MM/dd/yyyy\"));\n\n    SimpleDateFormat format = new SimpleDateFormat(\"MM/dd/yyyy\");\n    Date now = format.parse(format.format(new Date()));\n\n    Map row = AbstractDataImportHandlerTest.createMap(\"lastModified\", format\n            .format(now));\n\n    VariableResolverImpl resolver = new VariableResolverImpl();\n    resolver.addNamespace(\"e\", row);\n\n    Context context = AbstractDataImportHandlerTest.getContext(null, resolver,\n            null, 0, fields, null);\n    new DateFormatTransformer().transformRow(row, context);\n    Assert.assertEquals(now, row.get(\"dateAdded\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestDateFormatTransformer#testTransformRow_SingleRow().mjava","pathOld":"contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestDateFormatTransformer#testTransformRow_SingleRow().mjava","sourceNew":"  @Test\n  @SuppressWarnings(\"unchecked\")\n  public void testTransformRow_SingleRow() throws Exception {\n    List fields = new ArrayList();\n    fields.add(AbstractDataImportHandlerTest.createMap(DataImporter.COLUMN,\n            \"lastModified\"));\n    fields.add(AbstractDataImportHandlerTest.createMap(DataImporter.COLUMN,\n            \"dateAdded\", RegexTransformer.SRC_COL_NAME, \"lastModified\",\n            DateFormatTransformer.DATE_TIME_FMT, \"MM/dd/yyyy\"));\n\n    SimpleDateFormat format = new SimpleDateFormat(\"MM/dd/yyyy\");\n    Date now = format.parse(format.format(new Date()));\n\n    Map row = AbstractDataImportHandlerTest.createMap(\"lastModified\", format\n            .format(now));\n\n    VariableResolverImpl resolver = new VariableResolverImpl();\n    resolver.addNamespace(\"e\", row);\n\n    Context context = AbstractDataImportHandlerTest.getContext(null, resolver,\n            null, Context.FULL_DUMP, fields, null);\n    new DateFormatTransformer().transformRow(row, context);\n    Assert.assertEquals(now, row.get(\"dateAdded\"));\n  }\n\n","sourceOld":"  @Test\n  @SuppressWarnings(\"unchecked\")\n  public void testTransformRow_SingleRow() throws Exception {\n    List fields = new ArrayList();\n    fields.add(AbstractDataImportHandlerTest.createMap(DataImporter.COLUMN,\n            \"lastModified\"));\n    fields.add(AbstractDataImportHandlerTest.createMap(DataImporter.COLUMN,\n            \"dateAdded\", RegexTransformer.SRC_COL_NAME, \"lastModified\",\n            DateFormatTransformer.DATE_TIME_FMT, \"MM/dd/yyyy\"));\n\n    SimpleDateFormat format = new SimpleDateFormat(\"MM/dd/yyyy\");\n    Date now = format.parse(format.format(new Date()));\n\n    Map row = AbstractDataImportHandlerTest.createMap(\"lastModified\", format\n            .format(now));\n\n    VariableResolverImpl resolver = new VariableResolverImpl();\n    resolver.addNamespace(\"e\", row);\n\n    Context context = AbstractDataImportHandlerTest.getContext(null, resolver,\n            null, Context.FULL_DUMP, fields, null);\n    new DateFormatTransformer().transformRow(row, context);\n    Assert.assertEquals(now, row.get(\"dateAdded\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"4d4f1b2c5601680b01c4bb95a43fe6fb73f03103":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["594d4ee17b3d941ed34827ca6646e378cf7d8d2a"],"594d4ee17b3d941ed34827ca6646e378cf7d8d2a":["4d4f1b2c5601680b01c4bb95a43fe6fb73f03103"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"4d4f1b2c5601680b01c4bb95a43fe6fb73f03103":["594d4ee17b3d941ed34827ca6646e378cf7d8d2a"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["4d4f1b2c5601680b01c4bb95a43fe6fb73f03103"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"594d4ee17b3d941ed34827ca6646e378cf7d8d2a":["ad94625fb8d088209f46650c8097196fec67f00c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}