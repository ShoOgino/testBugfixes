{"path":"lucene/src/java/org/apache/lucene/search/UnionDocsAndPositionsEnum[MultiPhraseQuery].DocsQueue#DocsQueue(List[DocsAndPositionsEnum]).mjava","commits":[{"id":"955c32f886db6f6356c9fcdea6b1f1cb4effda24","date":1270581567,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/UnionDocsAndPositionsEnum[MultiPhraseQuery].DocsQueue#DocsQueue(List[DocsAndPositionsEnum]).mjava","pathOld":"/dev/null","sourceNew":"    DocsQueue(List<DocsAndPositionsEnum> docsEnums) throws IOException {\n      initialize(docsEnums.size());\n\n      Iterator<DocsAndPositionsEnum> i = docsEnums.iterator();\n      while (i.hasNext()) {\n        DocsAndPositionsEnum postings = (DocsAndPositionsEnum) i.next();\n        if (postings.nextDoc() != DocsAndPositionsEnum.NO_MORE_DOCS) {\n          add(postings);\n        }\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["1da2c39cf47fc10dc839d8c37890a2b009081e76"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"068265517d1fbc623f5aeaee57fcd8df925678e4","date":1286043654,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/UnionDocsAndPositionsEnum[MultiPhraseQuery].DocsQueue#DocsQueue(List[DocsAndPositionsEnum]).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/UnionDocsAndPositionsEnum[MultiPhraseQuery].DocsQueue#DocsQueue(List[DocsAndPositionsEnum]).mjava","sourceNew":"    DocsQueue(List<DocsAndPositionsEnum> docsEnums) throws IOException {\n      initialize(docsEnums.size());\n\n      Iterator<DocsAndPositionsEnum> i = docsEnums.iterator();\n      while (i.hasNext()) {\n        DocsAndPositionsEnum postings = i.next();\n        if (postings.nextDoc() != DocsAndPositionsEnum.NO_MORE_DOCS) {\n          add(postings);\n        }\n      }\n    }\n\n","sourceOld":"    DocsQueue(List<DocsAndPositionsEnum> docsEnums) throws IOException {\n      initialize(docsEnums.size());\n\n      Iterator<DocsAndPositionsEnum> i = docsEnums.iterator();\n      while (i.hasNext()) {\n        DocsAndPositionsEnum postings = (DocsAndPositionsEnum) i.next();\n        if (postings.nextDoc() != DocsAndPositionsEnum.NO_MORE_DOCS) {\n          add(postings);\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/UnionDocsAndPositionsEnum[MultiPhraseQuery].DocsQueue#DocsQueue(List[DocsAndPositionsEnum]).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/UnionDocsAndPositionsEnum[MultiPhraseQuery].DocsQueue#DocsQueue(List[DocsAndPositionsEnum]).mjava","sourceNew":"    DocsQueue(List<DocsAndPositionsEnum> docsEnums) throws IOException {\n      initialize(docsEnums.size());\n\n      Iterator<DocsAndPositionsEnum> i = docsEnums.iterator();\n      while (i.hasNext()) {\n        DocsAndPositionsEnum postings = i.next();\n        if (postings.nextDoc() != DocsAndPositionsEnum.NO_MORE_DOCS) {\n          add(postings);\n        }\n      }\n    }\n\n","sourceOld":"    DocsQueue(List<DocsAndPositionsEnum> docsEnums) throws IOException {\n      initialize(docsEnums.size());\n\n      Iterator<DocsAndPositionsEnum> i = docsEnums.iterator();\n      while (i.hasNext()) {\n        DocsAndPositionsEnum postings = (DocsAndPositionsEnum) i.next();\n        if (postings.nextDoc() != DocsAndPositionsEnum.NO_MORE_DOCS) {\n          add(postings);\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1da2c39cf47fc10dc839d8c37890a2b009081e76","date":1299662336,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/UnionDocsAndPositionsEnum[MultiPhraseQuery].DocsQueue#DocsQueue(List[DocsAndPositionsEnum]).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/UnionDocsAndPositionsEnum[MultiPhraseQuery].DocsQueue#DocsQueue(List[DocsAndPositionsEnum]).mjava","sourceNew":"    DocsQueue(List<DocsAndPositionsEnum> docsEnums) throws IOException {\n      super(docsEnums.size());\n\n      Iterator<DocsAndPositionsEnum> i = docsEnums.iterator();\n      while (i.hasNext()) {\n        DocsAndPositionsEnum postings = i.next();\n        if (postings.nextDoc() != DocsAndPositionsEnum.NO_MORE_DOCS) {\n          add(postings);\n        }\n      }\n    }\n\n","sourceOld":"    DocsQueue(List<DocsAndPositionsEnum> docsEnums) throws IOException {\n      initialize(docsEnums.size());\n\n      Iterator<DocsAndPositionsEnum> i = docsEnums.iterator();\n      while (i.hasNext()) {\n        DocsAndPositionsEnum postings = i.next();\n        if (postings.nextDoc() != DocsAndPositionsEnum.NO_MORE_DOCS) {\n          add(postings);\n        }\n      }\n    }\n\n","bugFix":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d619839baa8ce5503e496b94a9e42ad6f079293f","date":1301309428,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/UnionDocsAndPositionsEnum[MultiPhraseQuery].DocsQueue#DocsQueue(List[DocsAndPositionsEnum]).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/UnionDocsAndPositionsEnum[MultiPhraseQuery].DocsQueue#DocsQueue(List[DocsAndPositionsEnum]).mjava","sourceNew":"    DocsQueue(List<DocsAndPositionsEnum> docsEnums) throws IOException {\n      super(docsEnums.size());\n\n      Iterator<DocsAndPositionsEnum> i = docsEnums.iterator();\n      while (i.hasNext()) {\n        DocsAndPositionsEnum postings = i.next();\n        if (postings.nextDoc() != DocsAndPositionsEnum.NO_MORE_DOCS) {\n          add(postings);\n        }\n      }\n    }\n\n","sourceOld":"    DocsQueue(List<DocsAndPositionsEnum> docsEnums) throws IOException {\n      initialize(docsEnums.size());\n\n      Iterator<DocsAndPositionsEnum> i = docsEnums.iterator();\n      while (i.hasNext()) {\n        DocsAndPositionsEnum postings = i.next();\n        if (postings.nextDoc() != DocsAndPositionsEnum.NO_MORE_DOCS) {\n          add(postings);\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c0ef0193974807e4bddf5432a6b0287fe4d6c9df","date":1301476645,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/UnionDocsAndPositionsEnum[MultiPhraseQuery].DocsQueue#DocsQueue(List[DocsAndPositionsEnum]).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/UnionDocsAndPositionsEnum[MultiPhraseQuery].DocsQueue#DocsQueue(List[DocsAndPositionsEnum]).mjava","sourceNew":"    DocsQueue(List<DocsAndPositionsEnum> docsEnums) throws IOException {\n      super(docsEnums.size());\n\n      Iterator<DocsAndPositionsEnum> i = docsEnums.iterator();\n      while (i.hasNext()) {\n        DocsAndPositionsEnum postings = i.next();\n        if (postings.nextDoc() != DocsAndPositionsEnum.NO_MORE_DOCS) {\n          add(postings);\n        }\n      }\n    }\n\n","sourceOld":"    DocsQueue(List<DocsAndPositionsEnum> docsEnums) throws IOException {\n      initialize(docsEnums.size());\n\n      Iterator<DocsAndPositionsEnum> i = docsEnums.iterator();\n      while (i.hasNext()) {\n        DocsAndPositionsEnum postings = i.next();\n        if (postings.nextDoc() != DocsAndPositionsEnum.NO_MORE_DOCS) {\n          add(postings);\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/UnionDocsAndPositionsEnum[MultiPhraseQuery].DocsQueue#DocsQueue(List[DocsAndPositionsEnum]).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/UnionDocsAndPositionsEnum[MultiPhraseQuery].DocsQueue#DocsQueue(List[DocsAndPositionsEnum]).mjava","sourceNew":"    DocsQueue(List<DocsAndPositionsEnum> docsEnums) throws IOException {\n      super(docsEnums.size());\n\n      Iterator<DocsAndPositionsEnum> i = docsEnums.iterator();\n      while (i.hasNext()) {\n        DocsAndPositionsEnum postings = i.next();\n        if (postings.nextDoc() != DocsAndPositionsEnum.NO_MORE_DOCS) {\n          add(postings);\n        }\n      }\n    }\n\n","sourceOld":"    DocsQueue(List<DocsAndPositionsEnum> docsEnums) throws IOException {\n      super(docsEnums.size());\n\n      Iterator<DocsAndPositionsEnum> i = docsEnums.iterator();\n      while (i.hasNext()) {\n        DocsAndPositionsEnum postings = i.next();\n        if (postings.nextDoc() != DocsAndPositionsEnum.NO_MORE_DOCS) {\n          add(postings);\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1da2c39cf47fc10dc839d8c37890a2b009081e76":["068265517d1fbc623f5aeaee57fcd8df925678e4"],"c0ef0193974807e4bddf5432a6b0287fe4d6c9df":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","1da2c39cf47fc10dc839d8c37890a2b009081e76"],"d619839baa8ce5503e496b94a9e42ad6f079293f":["068265517d1fbc623f5aeaee57fcd8df925678e4","1da2c39cf47fc10dc839d8c37890a2b009081e76"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["1da2c39cf47fc10dc839d8c37890a2b009081e76"],"068265517d1fbc623f5aeaee57fcd8df925678e4":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["955c32f886db6f6356c9fcdea6b1f1cb4effda24","068265517d1fbc623f5aeaee57fcd8df925678e4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"1da2c39cf47fc10dc839d8c37890a2b009081e76":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df","d619839baa8ce5503e496b94a9e42ad6f079293f","3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"c0ef0193974807e4bddf5432a6b0287fe4d6c9df":[],"d619839baa8ce5503e496b94a9e42ad6f079293f":[],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"068265517d1fbc623f5aeaee57fcd8df925678e4":["1da2c39cf47fc10dc839d8c37890a2b009081e76","d619839baa8ce5503e496b94a9e42ad6f079293f","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["068265517d1fbc623f5aeaee57fcd8df925678e4","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df","d619839baa8ce5503e496b94a9e42ad6f079293f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}