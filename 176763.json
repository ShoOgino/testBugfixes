{"path":"solr/core/src/test/org/apache/solr/update/processor/IgnoreCommitOptimizeUpdateProcessorFactoryTest#processCommit(String,boolean,Boolean).mjava","commits":[{"id":"197ef3757cbbe5b443d8db292634534498adf4c6","date":1427902182,"type":0,"author":"Timothy Potter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/processor/IgnoreCommitOptimizeUpdateProcessorFactoryTest#processCommit(String,boolean,Boolean).mjava","pathOld":"/dev/null","sourceNew":"  SolrQueryResponse processCommit(final String chain, boolean optimize, Boolean commitEndPoint) throws IOException {\n    SolrCore core = h.getCore();\n    UpdateRequestProcessorChain pc = core.getUpdateProcessingChain(chain);\n    assertNotNull(\"No Chain named: \" + chain, pc);\n\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    SolrQueryRequest req = new LocalSolrQueryRequest(core, new ModifiableSolrParams());\n\n    if (commitEndPoint != null) {\n      ((ModifiableSolrParams)req.getParams()).set(\n          DistributedUpdateProcessor.COMMIT_END_POINT, commitEndPoint.booleanValue());\n    }\n\n    try {\n      SolrRequestInfo.setRequestInfo(new SolrRequestInfo(req,rsp));\n      CommitUpdateCommand cmd = new CommitUpdateCommand(req, false);\n      cmd.optimize = optimize;\n      UpdateRequestProcessor processor = pc.createProcessor(req, rsp);\n      processor.processCommit(cmd);\n    } finally {\n      SolrRequestInfo.clearRequestInfo();\n      req.close();\n    }\n    return rsp;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"743e614fc76baead7dbf380c3b9530cd9ba72334","date":1427902234,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/update/processor/IgnoreCommitOptimizeUpdateProcessorFactoryTest#processCommit(String,boolean,Boolean).mjava","pathOld":"/dev/null","sourceNew":"  SolrQueryResponse processCommit(final String chain, boolean optimize, Boolean commitEndPoint) throws IOException {\n    SolrCore core = h.getCore();\n    UpdateRequestProcessorChain pc = core.getUpdateProcessingChain(chain);\n    assertNotNull(\"No Chain named: \" + chain, pc);\n\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    SolrQueryRequest req = new LocalSolrQueryRequest(core, new ModifiableSolrParams());\n\n    if (commitEndPoint != null) {\n      ((ModifiableSolrParams)req.getParams()).set(\n          DistributedUpdateProcessor.COMMIT_END_POINT, commitEndPoint.booleanValue());\n    }\n\n    try {\n      SolrRequestInfo.setRequestInfo(new SolrRequestInfo(req,rsp));\n      CommitUpdateCommand cmd = new CommitUpdateCommand(req, false);\n      cmd.optimize = optimize;\n      UpdateRequestProcessor processor = pc.createProcessor(req, rsp);\n      processor.processCommit(cmd);\n    } finally {\n      SolrRequestInfo.clearRequestInfo();\n      req.close();\n    }\n    return rsp;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"743e614fc76baead7dbf380c3b9530cd9ba72334":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","197ef3757cbbe5b443d8db292634534498adf4c6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"197ef3757cbbe5b443d8db292634534498adf4c6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["197ef3757cbbe5b443d8db292634534498adf4c6"]},"commit2Childs":{"743e614fc76baead7dbf380c3b9530cd9ba72334":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["743e614fc76baead7dbf380c3b9530cd9ba72334","197ef3757cbbe5b443d8db292634534498adf4c6"],"197ef3757cbbe5b443d8db292634534498adf4c6":["743e614fc76baead7dbf380c3b9530cd9ba72334","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["743e614fc76baead7dbf380c3b9530cd9ba72334","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}