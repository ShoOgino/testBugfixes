{"path":"backwards/src/test/org/apache/lucene/index/TestIndexWriter#testInvalidUTF16().mjava","commits":[{"id":"480d01e5b0ef8efb136d51670fec297ae5ae2c9c","date":1268821447,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"backwards/src/test/org/apache/lucene/index/TestIndexWriter#testInvalidUTF16().mjava","pathOld":"/dev/null","sourceNew":"  // LUCENE-510\n  public void testInvalidUTF16() throws Throwable {\n    MockRAMDirectory dir = new MockRAMDirectory();\n    IndexWriter w = new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.UNLIMITED);\n    Document doc = new Document();\n\n    final int count = utf8Data.length/2;\n    for(int i=0;i<count;i++)\n      doc.add(new Field(\"f\" + i, utf8Data[2*i], Field.Store.YES, Field.Index.ANALYZED));\n    w.addDocument(doc);\n    w.close();\n\n    IndexReader ir = IndexReader.open(dir, true);\n    Document doc2 = ir.document(0);\n    for(int i=0;i<count;i++) {\n      assertEquals(\"field \" + i + \" was not indexed correctly\", 1, ir.docFreq(new Term(\"f\"+i, utf8Data[2*i+1])));\n      assertEquals(\"field \" + i + \" is incorrect\", utf8Data[2*i+1], doc2.getField(\"f\"+i).stringValue());\n    }\n    ir.close();\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/test/org/apache/lucene/index/TestIndexWriter#testInvalidUTF16().mjava","pathOld":"backwards/src/test/org/apache/lucene/index/TestIndexWriter#testInvalidUTF16().mjava","sourceNew":"  // LUCENE-510\n  public void testInvalidUTF16() throws Throwable {\n    MockRAMDirectory dir = new MockRAMDirectory();\n    IndexWriter w = new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.UNLIMITED);\n    Document doc = new Document();\n\n    final int count = utf8Data.length/2;\n    for(int i=0;i<count;i++)\n      doc.add(new Field(\"f\" + i, utf8Data[2*i], Field.Store.YES, Field.Index.ANALYZED));\n    w.addDocument(doc);\n    w.close();\n\n    IndexReader ir = IndexReader.open(dir, true);\n    Document doc2 = ir.document(0);\n    for(int i=0;i<count;i++) {\n      assertEquals(\"field \" + i + \" was not indexed correctly\", 1, ir.docFreq(new Term(\"f\"+i, utf8Data[2*i+1])));\n      assertEquals(\"field \" + i + \" is incorrect\", utf8Data[2*i+1], doc2.getField(\"f\"+i).stringValue());\n    }\n    ir.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-510\n  public void testInvalidUTF16() throws Throwable {\n    MockRAMDirectory dir = new MockRAMDirectory();\n    IndexWriter w = new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.UNLIMITED);\n    Document doc = new Document();\n\n    final int count = utf8Data.length/2;\n    for(int i=0;i<count;i++)\n      doc.add(new Field(\"f\" + i, utf8Data[2*i], Field.Store.YES, Field.Index.ANALYZED));\n    w.addDocument(doc);\n    w.close();\n\n    IndexReader ir = IndexReader.open(dir, true);\n    Document doc2 = ir.document(0);\n    for(int i=0;i<count;i++) {\n      assertEquals(\"field \" + i + \" was not indexed correctly\", 1, ir.docFreq(new Term(\"f\"+i, utf8Data[2*i+1])));\n      assertEquals(\"field \" + i + \" is incorrect\", utf8Data[2*i+1], doc2.getField(\"f\"+i).stringValue());\n    }\n    ir.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"]},"commit2Childs":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}