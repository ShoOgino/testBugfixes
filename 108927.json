{"path":"lucene/core/src/test/org/apache/lucene/util/TestFixedBitSet#copyOf(BitSet,int).mjava","commits":[{"id":"7581da3051efe8071ae92ac7eca27a270bc4611e","date":1373613227,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/TestFixedBitSet#copyOf(BitSet,int).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public FixedBitSet copyOf(BitSet bs, int length) throws IOException {\n    final FixedBitSet set = new FixedBitSet(length);\n    for (int doc = bs.nextSetBit(0); doc != -1; doc = bs.nextSetBit(doc + 1)) {\n      set.set(doc);\n    }\n    return set;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"37a0f60745e53927c4c876cfe5b5a58170f0646c","date":1373994005,"type":0,"author":"Han Jiang","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/util/TestFixedBitSet#copyOf(BitSet,int).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public FixedBitSet copyOf(BitSet bs, int length) throws IOException {\n    final FixedBitSet set = new FixedBitSet(length);\n    for (int doc = bs.nextSetBit(0); doc != -1; doc = bs.nextSetBit(doc + 1)) {\n      set.set(doc);\n    }\n    return set;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"80c55596a764e2d397e982828e75fcac5ce430a0","date":1413987559,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/TestFixedBitSet#copyOf(BitSet,int).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/util/TestFixedBitSet#copyOf(BitSet,int).mjava","sourceNew":"  @Override\n  public FixedBitDocIdSet copyOf(BitSet bs, int length) throws IOException {\n    final FixedBitSet set = new FixedBitSet(length);\n    for (int doc = bs.nextSetBit(0); doc != -1; doc = bs.nextSetBit(doc + 1)) {\n      set.set(doc);\n    }\n    return new FixedBitDocIdSet(set);\n  }\n\n","sourceOld":"  @Override\n  public FixedBitSet copyOf(BitSet bs, int length) throws IOException {\n    final FixedBitSet set = new FixedBitSet(length);\n    for (int doc = bs.nextSetBit(0); doc != -1; doc = bs.nextSetBit(doc + 1)) {\n      set.set(doc);\n    }\n    return set;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0abcec02c9851c46c70a75bd42fb6e4d5348ac9e","date":1414135939,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/TestFixedBitSet#copyOf(BitSet,int).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/util/TestFixedBitSet#copyOf(BitSet,int).mjava","sourceNew":"  @Override\n  public FixedBitSet copyOf(BitSet bs, int length) throws IOException {\n    final FixedBitSet set = new FixedBitSet(length);\n    for (int doc = bs.nextSetBit(0); doc != DocIdSetIterator.NO_MORE_DOCS; doc = doc + 1 >= length ? DocIdSetIterator.NO_MORE_DOCS : bs.nextSetBit(doc + 1)) {\n      set.set(doc);\n    }\n    return set;\n  }\n\n","sourceOld":"  @Override\n  public FixedBitDocIdSet copyOf(BitSet bs, int length) throws IOException {\n    final FixedBitSet set = new FixedBitSet(length);\n    for (int doc = bs.nextSetBit(0); doc != -1; doc = bs.nextSetBit(doc + 1)) {\n      set.set(doc);\n    }\n    return new FixedBitDocIdSet(set);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"37a0f60745e53927c4c876cfe5b5a58170f0646c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","7581da3051efe8071ae92ac7eca27a270bc4611e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"80c55596a764e2d397e982828e75fcac5ce430a0":["7581da3051efe8071ae92ac7eca27a270bc4611e"],"7581da3051efe8071ae92ac7eca27a270bc4611e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"0abcec02c9851c46c70a75bd42fb6e4d5348ac9e":["80c55596a764e2d397e982828e75fcac5ce430a0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0abcec02c9851c46c70a75bd42fb6e4d5348ac9e"]},"commit2Childs":{"37a0f60745e53927c4c876cfe5b5a58170f0646c":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["37a0f60745e53927c4c876cfe5b5a58170f0646c","7581da3051efe8071ae92ac7eca27a270bc4611e"],"80c55596a764e2d397e982828e75fcac5ce430a0":["0abcec02c9851c46c70a75bd42fb6e4d5348ac9e"],"7581da3051efe8071ae92ac7eca27a270bc4611e":["37a0f60745e53927c4c876cfe5b5a58170f0646c","80c55596a764e2d397e982828e75fcac5ce430a0"],"0abcec02c9851c46c70a75bd42fb6e4d5348ac9e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["37a0f60745e53927c4c876cfe5b5a58170f0646c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}