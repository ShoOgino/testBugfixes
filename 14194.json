{"path":"solr/core/src/test/org/apache/solr/cloud/OverseerTest.MockZKController#deleteNode(String).mjava","commits":[{"id":"f5d497ef5f4afb803f608c705a49782def2f7082","date":1327943814,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/OverseerTest.MockZKController#deleteNode(String).mjava","pathOld":"/dev/null","sourceNew":"    private void deleteNode(final String path) {\n      try {\n        Stat stat = zkClient.exists(path, null, false);\n        zkClient.delete(path, stat.getVersion(), false);\n      } catch (KeeperException e) {\n        fail(\"Unexpected KeeperException!\" + e);\n      } catch (InterruptedException e) {\n        fail(\"Unexpected InterruptedException!\" + e);\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5b6fdfce35d0adb18836cf8711abe487a934df33","date":1327946200,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/OverseerTest.MockZKController#deleteNode(String).mjava","pathOld":"/dev/null","sourceNew":"    private void deleteNode(final String path) {\n      try {\n        Stat stat = zkClient.exists(path, null, false);\n        zkClient.delete(path, stat.getVersion(), false);\n      } catch (KeeperException e) {\n        fail(\"Unexpected KeeperException!\" + e);\n      } catch (InterruptedException e) {\n        fail(\"Unexpected InterruptedException!\" + e);\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"410e066f093e407222d9681429d209084e783149","date":1327958394,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/OverseerTest.MockZKController#deleteNode(String).mjava","pathOld":"/dev/null","sourceNew":"    private void deleteNode(final String path) {\n      try {\n        Stat stat = zkClient.exists(path, null, false);\n        zkClient.delete(path, stat.getVersion(), false);\n      } catch (KeeperException e) {\n        fail(\"Unexpected KeeperException!\" + e);\n      } catch (InterruptedException e) {\n        fail(\"Unexpected InterruptedException!\" + e);\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c51a2dcb8b4e1820a44f35f11961110201e06cdb","date":1329994529,"type":3,"author":"Sami Siren","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/OverseerTest.MockZKController#deleteNode(String).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/OverseerTest.MockZKController#deleteNode(String).mjava","sourceNew":"    private void deleteNode(final String path) {\n      try {\n        Stat stat = zkClient.exists(path, null, false);\n        if (stat != null) {\n          zkClient.delete(path, stat.getVersion(), false);\n        }\n      } catch (KeeperException e) {\n        fail(\"Unexpected KeeperException!\" + e);\n      } catch (InterruptedException e) {\n        fail(\"Unexpected InterruptedException!\" + e);\n      }\n    }\n\n","sourceOld":"    private void deleteNode(final String path) {\n      try {\n        Stat stat = zkClient.exists(path, null, false);\n        zkClient.delete(path, stat.getVersion(), false);\n      } catch (KeeperException e) {\n        fail(\"Unexpected KeeperException!\" + e);\n      } catch (InterruptedException e) {\n        fail(\"Unexpected InterruptedException!\" + e);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","date":1331075828,"type":3,"author":"Ryan McKinley","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/OverseerTest.MockZKController#deleteNode(String).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/OverseerTest.MockZKController#deleteNode(String).mjava","sourceNew":"    private void deleteNode(final String path) {\n      try {\n        Stat stat = zkClient.exists(path, null, false);\n        if (stat != null) {\n          zkClient.delete(path, stat.getVersion(), false);\n        }\n      } catch (KeeperException e) {\n        fail(\"Unexpected KeeperException!\" + e);\n      } catch (InterruptedException e) {\n        fail(\"Unexpected InterruptedException!\" + e);\n      }\n    }\n\n","sourceOld":"    private void deleteNode(final String path) {\n      try {\n        Stat stat = zkClient.exists(path, null, false);\n        zkClient.delete(path, stat.getVersion(), false);\n      } catch (KeeperException e) {\n        fail(\"Unexpected KeeperException!\" + e);\n      } catch (InterruptedException e) {\n        fail(\"Unexpected InterruptedException!\" + e);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28dbf9f6044a75c80174f13dfe05a6101354269a","date":1355850574,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/OverseerTest.MockZKController#deleteNode(String).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/OverseerTest.MockZKController#deleteNode(String).mjava","sourceNew":"    private void deleteNode(final String path) {\n      try {\n        Stat stat = zkClient.exists(path, null, true);\n        if (stat != null) {\n          zkClient.delete(path, stat.getVersion(), true);\n        }\n      } catch (KeeperException e) {\n        fail(\"Unexpected KeeperException!\" + e);\n      } catch (InterruptedException e) {\n        fail(\"Unexpected InterruptedException!\" + e);\n      }\n    }\n\n","sourceOld":"    private void deleteNode(final String path) {\n      try {\n        Stat stat = zkClient.exists(path, null, false);\n        if (stat != null) {\n          zkClient.delete(path, stat.getVersion(), false);\n        }\n      } catch (KeeperException e) {\n        fail(\"Unexpected KeeperException!\" + e);\n      } catch (InterruptedException e) {\n        fail(\"Unexpected InterruptedException!\" + e);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/OverseerTest.MockZKController#deleteNode(String).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/OverseerTest.MockZKController#deleteNode(String).mjava","sourceNew":"    private void deleteNode(final String path) {\n      try {\n        Stat stat = zkClient.exists(path, null, true);\n        if (stat != null) {\n          zkClient.delete(path, stat.getVersion(), true);\n        }\n      } catch (KeeperException e) {\n        fail(\"Unexpected KeeperException!\" + e);\n      } catch (InterruptedException e) {\n        fail(\"Unexpected InterruptedException!\" + e);\n      }\n    }\n\n","sourceOld":"    private void deleteNode(final String path) {\n      try {\n        Stat stat = zkClient.exists(path, null, false);\n        if (stat != null) {\n          zkClient.delete(path, stat.getVersion(), false);\n        }\n      } catch (KeeperException e) {\n        fail(\"Unexpected KeeperException!\" + e);\n      } catch (InterruptedException e) {\n        fail(\"Unexpected InterruptedException!\" + e);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2d7e4f853b998a03d72d5b82562f9aa71ce33c44","date":1393462308,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/OverseerTest.MockZKController#deleteNode(String).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/OverseerTest.MockZKController#deleteNode(String).mjava","sourceNew":"    private void deleteNode(final String path) {\n      \n      try {\n        zkClient.delete(path, -1, true);\n      } catch (NoNodeException e) {\n        // fine\n        log.warn(\"cancelElection did not find election node to remove\");\n      } catch (KeeperException e) {\n        fail(\"Unexpected KeeperException!\" + e);\n      } catch (InterruptedException e) {\n        fail(\"Unexpected InterruptedException!\" + e);\n      }\n    }\n\n","sourceOld":"    private void deleteNode(final String path) {\n      try {\n        Stat stat = zkClient.exists(path, null, true);\n        if (stat != null) {\n          zkClient.delete(path, stat.getVersion(), true);\n        }\n      } catch (KeeperException e) {\n        fail(\"Unexpected KeeperException!\" + e);\n      } catch (InterruptedException e) {\n        fail(\"Unexpected InterruptedException!\" + e);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"13f445c5bd6f19fd57d5a3ca0a35244c96f45aa8","date":1393532551,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/OverseerTest.MockZKController#deleteNode(String).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/OverseerTest.MockZKController#deleteNode(String).mjava","sourceNew":"    private void deleteNode(final String path) {\n      \n      try {\n        zkClient.delete(path, -1, true);\n      } catch (NoNodeException e) {\n        // fine\n        log.warn(\"cancelElection did not find election node to remove\");\n      } catch (KeeperException e) {\n        fail(\"Unexpected KeeperException!\" + e);\n      } catch (InterruptedException e) {\n        fail(\"Unexpected InterruptedException!\" + e);\n      }\n    }\n\n","sourceOld":"    private void deleteNode(final String path) {\n      try {\n        Stat stat = zkClient.exists(path, null, true);\n        if (stat != null) {\n          zkClient.delete(path, stat.getVersion(), true);\n        }\n      } catch (KeeperException e) {\n        fail(\"Unexpected KeeperException!\" + e);\n      } catch (InterruptedException e) {\n        fail(\"Unexpected InterruptedException!\" + e);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0db83f1bb855a4ac824c9a2a8e1ee9b29a039c15","date":1554259533,"type":3,"author":"Gus Heck","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/OverseerTest.MockZKController#deleteNode(String).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/OverseerTest.MockZKController#deleteNode(String).mjava","sourceNew":"    private void deleteNode(final String path) {\n\n      try {\n        zkClient.delete(path, -1, true);\n      } catch (NoNodeException e) {\n        // fine\n        log.warn(\"cancelElection did not find election node to remove\");\n      } catch (KeeperException e) {\n        fail(\"Unexpected KeeperException!\" + e);\n      } catch (InterruptedException e) {\n        fail(\"Unexpected InterruptedException!\" + e);\n      }\n    }\n\n","sourceOld":"    private void deleteNode(final String path) {\n      \n      try {\n        zkClient.delete(path, -1, true);\n      } catch (NoNodeException e) {\n        // fine\n        log.warn(\"cancelElection did not find election node to remove\");\n      } catch (KeeperException e) {\n        fail(\"Unexpected KeeperException!\" + e);\n      } catch (InterruptedException e) {\n        fail(\"Unexpected InterruptedException!\" + e);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["c51a2dcb8b4e1820a44f35f11961110201e06cdb","28dbf9f6044a75c80174f13dfe05a6101354269a"],"2d7e4f853b998a03d72d5b82562f9aa71ce33c44":["28dbf9f6044a75c80174f13dfe05a6101354269a"],"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":["f5d497ef5f4afb803f608c705a49782def2f7082","c51a2dcb8b4e1820a44f35f11961110201e06cdb"],"410e066f093e407222d9681429d209084e783149":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f5d497ef5f4afb803f608c705a49782def2f7082"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5b6fdfce35d0adb18836cf8711abe487a934df33":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f5d497ef5f4afb803f608c705a49782def2f7082"],"0db83f1bb855a4ac824c9a2a8e1ee9b29a039c15":["2d7e4f853b998a03d72d5b82562f9aa71ce33c44"],"28dbf9f6044a75c80174f13dfe05a6101354269a":["c51a2dcb8b4e1820a44f35f11961110201e06cdb"],"f5d497ef5f4afb803f608c705a49782def2f7082":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"13f445c5bd6f19fd57d5a3ca0a35244c96f45aa8":["28dbf9f6044a75c80174f13dfe05a6101354269a","2d7e4f853b998a03d72d5b82562f9aa71ce33c44"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0db83f1bb855a4ac824c9a2a8e1ee9b29a039c15"],"c51a2dcb8b4e1820a44f35f11961110201e06cdb":["f5d497ef5f4afb803f608c705a49782def2f7082"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"2d7e4f853b998a03d72d5b82562f9aa71ce33c44":["0db83f1bb855a4ac824c9a2a8e1ee9b29a039c15","13f445c5bd6f19fd57d5a3ca0a35244c96f45aa8"],"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":[],"410e066f093e407222d9681429d209084e783149":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["410e066f093e407222d9681429d209084e783149","5b6fdfce35d0adb18836cf8711abe487a934df33","f5d497ef5f4afb803f608c705a49782def2f7082"],"5b6fdfce35d0adb18836cf8711abe487a934df33":[],"28dbf9f6044a75c80174f13dfe05a6101354269a":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","2d7e4f853b998a03d72d5b82562f9aa71ce33c44","13f445c5bd6f19fd57d5a3ca0a35244c96f45aa8"],"0db83f1bb855a4ac824c9a2a8e1ee9b29a039c15":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f5d497ef5f4afb803f608c705a49782def2f7082":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","410e066f093e407222d9681429d209084e783149","5b6fdfce35d0adb18836cf8711abe487a934df33","c51a2dcb8b4e1820a44f35f11961110201e06cdb"],"13f445c5bd6f19fd57d5a3ca0a35244c96f45aa8":[],"c51a2dcb8b4e1820a44f35f11961110201e06cdb":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","28dbf9f6044a75c80174f13dfe05a6101354269a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","410e066f093e407222d9681429d209084e783149","5b6fdfce35d0adb18836cf8711abe487a934df33","13f445c5bd6f19fd57d5a3ca0a35244c96f45aa8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}