{"path":"solr/core/src/test/org/apache/solr/request/TestIntervalFaceting#assertStringInterval(String,String,String,String).mjava","commits":[{"id":"84b24f47dd3dfa4e2396cd6f819a35445b0a53fd","date":1406137403,"type":0,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/request/TestIntervalFaceting#assertStringInterval(String,String,String,String).mjava","pathOld":"/dev/null","sourceNew":"  private void assertStringInterval(String fieldName, String intervalStr,\n                                    String expectedStart, String expectedEnd) throws SyntaxError {\n    SchemaField f = h.getCore().getLatestSchema().getField(fieldName);\n    FacetInterval interval = new FacetInterval(f, intervalStr);\n\n    assertEquals(\"Expected start \" + expectedStart + \" but found \" + f.getType().toObject(f, interval.start),\n        interval.start, new BytesRef(f.getType().toInternal(expectedStart)));\n\n    assertEquals(\"Expected end \" + expectedEnd + \" but found \" + f.getType().toObject(f, interval.end),\n        interval.end, new BytesRef(f.getType().toInternal(expectedEnd)));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0e3055974cda209e4f95efadcd904f0ebf03ada","date":1406238198,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/request/TestIntervalFaceting#assertStringInterval(String,String,String,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/request/TestIntervalFaceting#assertStringInterval(String,String,String,String).mjava","sourceNew":"  private void assertStringInterval(String fieldName, String intervalStr,\n                                    String expectedStart, String expectedEnd) throws SyntaxError {\n    SchemaField f = h.getCore().getLatestSchema().getField(fieldName);\n    FacetInterval interval = new FacetInterval(f, intervalStr, new ModifiableSolrParams());\n\n    assertEquals(\"Expected start \" + expectedStart + \" but found \" + f.getType().toObject(f, interval.start),\n        interval.start, new BytesRef(f.getType().toInternal(expectedStart)));\n\n    assertEquals(\"Expected end \" + expectedEnd + \" but found \" + f.getType().toObject(f, interval.end),\n        interval.end, new BytesRef(f.getType().toInternal(expectedEnd)));\n  }\n\n","sourceOld":"  private void assertStringInterval(String fieldName, String intervalStr,\n                                    String expectedStart, String expectedEnd) throws SyntaxError {\n    SchemaField f = h.getCore().getLatestSchema().getField(fieldName);\n    FacetInterval interval = new FacetInterval(f, intervalStr);\n\n    assertEquals(\"Expected start \" + expectedStart + \" but found \" + f.getType().toObject(f, interval.start),\n        interval.start, new BytesRef(f.getType().toInternal(expectedStart)));\n\n    assertEquals(\"Expected end \" + expectedEnd + \" but found \" + f.getType().toObject(f, interval.end),\n        interval.end, new BytesRef(f.getType().toInternal(expectedEnd)));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"84b24f47dd3dfa4e2396cd6f819a35445b0a53fd":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e3055974cda209e4f95efadcd904f0ebf03ada":["84b24f47dd3dfa4e2396cd6f819a35445b0a53fd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e3055974cda209e4f95efadcd904f0ebf03ada"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["84b24f47dd3dfa4e2396cd6f819a35445b0a53fd"],"84b24f47dd3dfa4e2396cd6f819a35445b0a53fd":["a0e3055974cda209e4f95efadcd904f0ebf03ada"],"a0e3055974cda209e4f95efadcd904f0ebf03ada":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}