{"path":"solr/core/src/test/org/apache/solr/search/facet/TestJsonFacets#testTolerant().mjava","commits":[{"id":"bbe0e5f73e31966c742f7d203e432bb9eb72affc","date":1433430083,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/facet/TestJsonFacets#testTolerant().mjava","pathOld":"/dev/null","sourceNew":"  public void testTolerant() throws Exception {\n    initServers();\n    Client client = servers.getClient(random().nextInt());\n    client.queryDefaults().set(\"shards\", servers.getShards() + \",[ff01::114]:33332:/ignore_exception\");\n    indexSimple(client);\n\n    try {\n      client.testJQ(params(\"ignore_exception\", \"true\", \"shards.tolerant\", \"false\", \"q\", \"*:*\"\n              , \"json.facet\", \"{f:{type:terms, field:cat_s}}\"\n          )\n          , \"facets=={ count:6,\" +\n              \"f:{ buckets:[{val:B,count:3},{val:A,count:2}] }\" +\n              \"}\"\n      );\n      fail(\"we should have failed\");\n    } catch (Exception e) {\n      // ok\n    }\n\n    client.testJQ(params(\"ignore_exception\", \"true\", \"shards.tolerant\", \"true\", \"q\", \"*:*\"\n            , \"json.facet\", \"{f:{type:terms, field:cat_s}}\"\n        )\n        , \"facets=={ count:6,\" +\n            \"f:{ buckets:[{val:B,count:3},{val:A,count:2}] }\" +\n            \"}\"\n    );\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4d51e7db479b42602c7e23ba871b177387268179","date":1547581497,"type":3,"author":"Tomas Fernandez Lobbe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/facet/TestJsonFacets#testTolerant().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/facet/TestJsonFacets#testTolerant().mjava","sourceNew":"  public void testTolerant() throws Exception {\n    initServers();\n    Client client = servers.getClient(random().nextInt());\n    client.queryDefaults().set(\"shards\", servers.getShards() + \",[ff01::114]:33332/ignore_exception\");\n    indexSimple(client);\n\n    try {\n      client.testJQ(params(\"ignore_exception\", \"true\", \"shards.tolerant\", \"false\", \"q\", \"*:*\"\n              , \"json.facet\", \"{f:{type:terms, field:cat_s}}\"\n          )\n          , \"facets=={ count:6,\" +\n              \"f:{ buckets:[{val:B,count:3},{val:A,count:2}] }\" +\n              \"}\"\n      );\n      fail(\"we should have failed\");\n    } catch (Exception e) {\n      // ok\n    }\n\n    client.testJQ(params(\"ignore_exception\", \"true\", \"shards.tolerant\", \"true\", \"q\", \"*:*\"\n            , \"json.facet\", \"{f:{type:terms, field:cat_s}}\"\n        )\n        , \"facets=={ count:6,\" +\n            \"f:{ buckets:[{val:B,count:3},{val:A,count:2}] }\" +\n            \"}\"\n    );\n  }\n\n","sourceOld":"  public void testTolerant() throws Exception {\n    initServers();\n    Client client = servers.getClient(random().nextInt());\n    client.queryDefaults().set(\"shards\", servers.getShards() + \",[ff01::114]:33332:/ignore_exception\");\n    indexSimple(client);\n\n    try {\n      client.testJQ(params(\"ignore_exception\", \"true\", \"shards.tolerant\", \"false\", \"q\", \"*:*\"\n              , \"json.facet\", \"{f:{type:terms, field:cat_s}}\"\n          )\n          , \"facets=={ count:6,\" +\n              \"f:{ buckets:[{val:B,count:3},{val:A,count:2}] }\" +\n              \"}\"\n      );\n      fail(\"we should have failed\");\n    } catch (Exception e) {\n      // ok\n    }\n\n    client.testJQ(params(\"ignore_exception\", \"true\", \"shards.tolerant\", \"true\", \"q\", \"*:*\"\n            , \"json.facet\", \"{f:{type:terms, field:cat_s}}\"\n        )\n        , \"facets=={ count:6,\" +\n            \"f:{ buckets:[{val:B,count:3},{val:A,count:2}] }\" +\n            \"}\"\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bc78b7d15e7b8627fa6d1b946da3a39f0225508d","date":1576086705,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/facet/TestJsonFacets#testTolerant().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/facet/TestJsonFacets#testTolerant().mjava","sourceNew":"  public void testTolerant() throws Exception {\n    initServers();\n    Client client = servers.getClient(random().nextInt());\n    client.queryDefaults().set(\"shards\", servers.getShards() + \",\" + DEAD_HOST_1 + \"/ignore_exception\");\n    indexSimple(client);\n\n    try {\n      client.testJQ(params(\"ignore_exception\", \"true\", \"shards.tolerant\", \"false\", \"q\", \"*:*\"\n              , \"json.facet\", \"{f:{type:terms, field:cat_s}}\"\n          )\n          , \"facets=={ count:6,\" +\n              \"f:{ buckets:[{val:B,count:3},{val:A,count:2}] }\" +\n              \"}\"\n      );\n      fail(\"we should have failed\");\n    } catch (Exception e) {\n      // ok\n    }\n\n    client.testJQ(params(\"ignore_exception\", \"true\", \"shards.tolerant\", \"true\", \"q\", \"*:*\"\n            , \"json.facet\", \"{f:{type:terms, field:cat_s}}\"\n        )\n        , \"facets=={ count:6,\" +\n            \"f:{ buckets:[{val:B,count:3},{val:A,count:2}] }\" +\n            \"}\"\n    );\n  }\n\n","sourceOld":"  public void testTolerant() throws Exception {\n    initServers();\n    Client client = servers.getClient(random().nextInt());\n    client.queryDefaults().set(\"shards\", servers.getShards() + \",[ff01::114]:33332/ignore_exception\");\n    indexSimple(client);\n\n    try {\n      client.testJQ(params(\"ignore_exception\", \"true\", \"shards.tolerant\", \"false\", \"q\", \"*:*\"\n              , \"json.facet\", \"{f:{type:terms, field:cat_s}}\"\n          )\n          , \"facets=={ count:6,\" +\n              \"f:{ buckets:[{val:B,count:3},{val:A,count:2}] }\" +\n              \"}\"\n      );\n      fail(\"we should have failed\");\n    } catch (Exception e) {\n      // ok\n    }\n\n    client.testJQ(params(\"ignore_exception\", \"true\", \"shards.tolerant\", \"true\", \"q\", \"*:*\"\n            , \"json.facet\", \"{f:{type:terms, field:cat_s}}\"\n        )\n        , \"facets=={ count:6,\" +\n            \"f:{ buckets:[{val:B,count:3},{val:A,count:2}] }\" +\n            \"}\"\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"df724d84dab24a0cc54bec95a8680867adc7f171","date":1576156608,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/search/facet/TestJsonFacets#testTolerant().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/facet/TestJsonFacets#testTolerant().mjava","sourceNew":"  public void testTolerant() throws Exception {\n    initServers();\n    Client client = servers.getClient(random().nextInt());\n    client.queryDefaults().set(\"shards\", servers.getShards() + \",\" + DEAD_HOST_1 + \"/ignore_exception\");\n    indexSimple(client);\n\n    try {\n      client.testJQ(params(\"ignore_exception\", \"true\", \"shards.tolerant\", \"false\", \"q\", \"*:*\"\n              , \"json.facet\", \"{f:{type:terms, field:cat_s}}\"\n          )\n          , \"facets=={ count:6,\" +\n              \"f:{ buckets:[{val:B,count:3},{val:A,count:2}] }\" +\n              \"}\"\n      );\n      fail(\"we should have failed\");\n    } catch (Exception e) {\n      // ok\n    }\n\n    client.testJQ(params(\"ignore_exception\", \"true\", \"shards.tolerant\", \"true\", \"q\", \"*:*\"\n            , \"json.facet\", \"{f:{type:terms, field:cat_s}}\"\n        )\n        , \"facets=={ count:6,\" +\n            \"f:{ buckets:[{val:B,count:3},{val:A,count:2}] }\" +\n            \"}\"\n    );\n  }\n\n","sourceOld":"  public void testTolerant() throws Exception {\n    initServers();\n    Client client = servers.getClient(random().nextInt());\n    client.queryDefaults().set(\"shards\", servers.getShards() + \",[ff01::114]:33332/ignore_exception\");\n    indexSimple(client);\n\n    try {\n      client.testJQ(params(\"ignore_exception\", \"true\", \"shards.tolerant\", \"false\", \"q\", \"*:*\"\n              , \"json.facet\", \"{f:{type:terms, field:cat_s}}\"\n          )\n          , \"facets=={ count:6,\" +\n              \"f:{ buckets:[{val:B,count:3},{val:A,count:2}] }\" +\n              \"}\"\n      );\n      fail(\"we should have failed\");\n    } catch (Exception e) {\n      // ok\n    }\n\n    client.testJQ(params(\"ignore_exception\", \"true\", \"shards.tolerant\", \"true\", \"q\", \"*:*\"\n            , \"json.facet\", \"{f:{type:terms, field:cat_s}}\"\n        )\n        , \"facets=={ count:6,\" +\n            \"f:{ buckets:[{val:B,count:3},{val:A,count:2}] }\" +\n            \"}\"\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"df724d84dab24a0cc54bec95a8680867adc7f171":["4d51e7db479b42602c7e23ba871b177387268179","bc78b7d15e7b8627fa6d1b946da3a39f0225508d"],"4d51e7db479b42602c7e23ba871b177387268179":["bbe0e5f73e31966c742f7d203e432bb9eb72affc"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["bc78b7d15e7b8627fa6d1b946da3a39f0225508d"],"bc78b7d15e7b8627fa6d1b946da3a39f0225508d":["4d51e7db479b42602c7e23ba871b177387268179"],"bbe0e5f73e31966c742f7d203e432bb9eb72affc":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"df724d84dab24a0cc54bec95a8680867adc7f171":[],"4d51e7db479b42602c7e23ba871b177387268179":["df724d84dab24a0cc54bec95a8680867adc7f171","bc78b7d15e7b8627fa6d1b946da3a39f0225508d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["bbe0e5f73e31966c742f7d203e432bb9eb72affc"],"bc78b7d15e7b8627fa6d1b946da3a39f0225508d":["df724d84dab24a0cc54bec95a8680867adc7f171","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"bbe0e5f73e31966c742f7d203e432bb9eb72affc":["4d51e7db479b42602c7e23ba871b177387268179"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["df724d84dab24a0cc54bec95a8680867adc7f171","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}