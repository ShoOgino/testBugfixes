{"path":"lucene/analysis/common/src/java/org/apache/lucene/analysis/payloads/DelimitedPayloadTokenFilterFactory#DelimitedPayloadTokenFilterFactory(Map[String,String]).mjava","commits":[{"id":"57da959ec15bb701bd1d1bf3c613b69009ff4bfd","date":1364833800,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/payloads/DelimitedPayloadTokenFilterFactory#DelimitedPayloadTokenFilterFactory(Map[String,String]).mjava","pathOld":"/dev/null","sourceNew":"  /** Creates a new DelimitedPayloadTokenFilterFactory */\n  public DelimitedPayloadTokenFilterFactory(Map<String, String> args) {\n    super(args);\n    encoderClass = args.remove(ENCODER_ATTR);\n    if (encoderClass == null) {\n      throw new IllegalArgumentException(\"Parameter \" + ENCODER_ATTR + \" is mandatory\");\n    }\n    String delim = args.remove(DELIMITER_ATTR);\n    if (delim == null) {\n      delimiter = '|';\n    } else if (delim.length() == 1) {\n      delimiter = delim.charAt(0);\n    } else {\n      throw new IllegalArgumentException(\"Delimiter must be one character only\");\n    }\n    if (!args.isEmpty()) {\n      throw new IllegalArgumentException(\"Unknown parameters: \" + args);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dcae30df9fe9300569835aef42ec65802c7c0afb","date":1364859933,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/payloads/DelimitedPayloadTokenFilterFactory#DelimitedPayloadTokenFilterFactory(Map[String,String]).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/payloads/DelimitedPayloadTokenFilterFactory#DelimitedPayloadTokenFilterFactory(Map[String,String]).mjava","sourceNew":"  /** Creates a new DelimitedPayloadTokenFilterFactory */\n  public DelimitedPayloadTokenFilterFactory(Map<String, String> args) {\n    super(args);\n    encoderClass = require(args, ENCODER_ATTR);\n    delimiter = getChar(args, DELIMITER_ATTR, '|');\n    if (!args.isEmpty()) {\n      throw new IllegalArgumentException(\"Unknown parameters: \" + args);\n    }\n  }\n\n","sourceOld":"  /** Creates a new DelimitedPayloadTokenFilterFactory */\n  public DelimitedPayloadTokenFilterFactory(Map<String, String> args) {\n    super(args);\n    encoderClass = args.remove(ENCODER_ATTR);\n    if (encoderClass == null) {\n      throw new IllegalArgumentException(\"Parameter \" + ENCODER_ATTR + \" is mandatory\");\n    }\n    String delim = args.remove(DELIMITER_ATTR);\n    if (delim == null) {\n      delimiter = '|';\n    } else if (delim.length() == 1) {\n      delimiter = delim.charAt(0);\n    } else {\n      throw new IllegalArgumentException(\"Delimiter must be one character only\");\n    }\n    if (!args.isEmpty()) {\n      throw new IllegalArgumentException(\"Unknown parameters: \" + args);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"dcae30df9fe9300569835aef42ec65802c7c0afb":["57da959ec15bb701bd1d1bf3c613b69009ff4bfd"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"57da959ec15bb701bd1d1bf3c613b69009ff4bfd":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["dcae30df9fe9300569835aef42ec65802c7c0afb"]},"commit2Childs":{"dcae30df9fe9300569835aef42ec65802c7c0afb":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["57da959ec15bb701bd1d1bf3c613b69009ff4bfd"],"57da959ec15bb701bd1d1bf3c613b69009ff4bfd":["dcae30df9fe9300569835aef42ec65802c7c0afb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}