{"path":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestSearcherTaxonomyManager#testReplaceTaxonomyDirectory().mjava","commits":[{"id":"d47a51687a906464022060653be52ed62dfa2c18","date":1391087530,"type":0,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestSearcherTaxonomyManager#testReplaceTaxonomyDirectory().mjava","pathOld":"/dev/null","sourceNew":"  public void testReplaceTaxonomyDirectory() throws Exception {\n    Directory indexDir = newDirectory();\n    Directory taxoDir = newDirectory();\n    IndexWriter w = new IndexWriter(indexDir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    DirectoryTaxonomyWriter tw = new DirectoryTaxonomyWriter(taxoDir);\n    w.commit();\n    tw.commit();\n\n    Directory taxoDir2 = newDirectory();\n    DirectoryTaxonomyWriter tw2 = new DirectoryTaxonomyWriter(taxoDir2);\n    tw2.addCategory(new FacetLabel(\"a\", \"b\"));\n    tw2.close();\n\n    SearcherTaxonomyManager mgr = new SearcherTaxonomyManager(indexDir, taxoDir, null);\n    SearcherAndTaxonomy pair = mgr.acquire();\n    try {\n      assertEquals(1, pair.taxonomyReader.getSize());\n    } finally {\n      mgr.release(pair);\n    }\n    \n    w.addDocument(new Document());\n    tw.replaceTaxonomy(taxoDir2);\n    taxoDir2.close();\n    w.commit();\n    tw.commit();\n\n    mgr.maybeRefresh();\n    pair = mgr.acquire();\n    try {\n      assertEquals(3, pair.taxonomyReader.getSize());\n    } finally {\n      mgr.release(pair);\n    }\n\n    IOUtils.close(mgr, tw, w, taxoDir, indexDir);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestSearcherTaxonomyManager#testReplaceTaxonomyDirectory().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestSearcherTaxonomyManager#testReplaceTaxonomyDirectory().mjava","sourceNew":"  public void testReplaceTaxonomyDirectory() throws Exception {\n    Directory indexDir = newDirectory();\n    Directory taxoDir = newDirectory();\n    IndexWriter w = new IndexWriter(indexDir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    DirectoryTaxonomyWriter tw = new DirectoryTaxonomyWriter(taxoDir);\n    w.commit();\n    tw.commit();\n\n    Directory taxoDir2 = newDirectory();\n    DirectoryTaxonomyWriter tw2 = new DirectoryTaxonomyWriter(taxoDir2);\n    tw2.addCategory(new FacetLabel(\"a\", \"b\"));\n    tw2.close();\n\n    SearcherTaxonomyManager mgr = new SearcherTaxonomyManager(indexDir, taxoDir, null);\n    SearcherAndTaxonomy pair = mgr.acquire();\n    try {\n      assertEquals(1, pair.taxonomyReader.getSize());\n    } finally {\n      mgr.release(pair);\n    }\n    \n    w.addDocument(new Document());\n    tw.replaceTaxonomy(taxoDir2);\n    taxoDir2.close();\n    w.commit();\n    tw.commit();\n\n    mgr.maybeRefresh();\n    pair = mgr.acquire();\n    try {\n      assertEquals(3, pair.taxonomyReader.getSize());\n    } finally {\n      mgr.release(pair);\n    }\n\n    w.shutdown();\n    IOUtils.close(mgr, tw, taxoDir, indexDir);\n  }\n\n","sourceOld":"  public void testReplaceTaxonomyDirectory() throws Exception {\n    Directory indexDir = newDirectory();\n    Directory taxoDir = newDirectory();\n    IndexWriter w = new IndexWriter(indexDir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    DirectoryTaxonomyWriter tw = new DirectoryTaxonomyWriter(taxoDir);\n    w.commit();\n    tw.commit();\n\n    Directory taxoDir2 = newDirectory();\n    DirectoryTaxonomyWriter tw2 = new DirectoryTaxonomyWriter(taxoDir2);\n    tw2.addCategory(new FacetLabel(\"a\", \"b\"));\n    tw2.close();\n\n    SearcherTaxonomyManager mgr = new SearcherTaxonomyManager(indexDir, taxoDir, null);\n    SearcherAndTaxonomy pair = mgr.acquire();\n    try {\n      assertEquals(1, pair.taxonomyReader.getSize());\n    } finally {\n      mgr.release(pair);\n    }\n    \n    w.addDocument(new Document());\n    tw.replaceTaxonomy(taxoDir2);\n    taxoDir2.close();\n    w.commit();\n    tw.commit();\n\n    mgr.maybeRefresh();\n    pair = mgr.acquire();\n    try {\n      assertEquals(3, pair.taxonomyReader.getSize());\n    } finally {\n      mgr.release(pair);\n    }\n\n    IOUtils.close(mgr, tw, w, taxoDir, indexDir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e","date":1406737224,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestSearcherTaxonomyManager#testReplaceTaxonomyDirectory().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestSearcherTaxonomyManager#testReplaceTaxonomyDirectory().mjava","sourceNew":"  public void testReplaceTaxonomyDirectory() throws Exception {\n    Directory indexDir = newDirectory();\n    Directory taxoDir = newDirectory();\n    IndexWriter w = new IndexWriter(indexDir, newIndexWriterConfig(new MockAnalyzer(random())));\n    DirectoryTaxonomyWriter tw = new DirectoryTaxonomyWriter(taxoDir);\n    w.commit();\n    tw.commit();\n\n    Directory taxoDir2 = newDirectory();\n    DirectoryTaxonomyWriter tw2 = new DirectoryTaxonomyWriter(taxoDir2);\n    tw2.addCategory(new FacetLabel(\"a\", \"b\"));\n    tw2.close();\n\n    SearcherTaxonomyManager mgr = new SearcherTaxonomyManager(indexDir, taxoDir, null);\n    SearcherAndTaxonomy pair = mgr.acquire();\n    try {\n      assertEquals(1, pair.taxonomyReader.getSize());\n    } finally {\n      mgr.release(pair);\n    }\n    \n    w.addDocument(new Document());\n    tw.replaceTaxonomy(taxoDir2);\n    taxoDir2.close();\n    w.commit();\n    tw.commit();\n\n    mgr.maybeRefresh();\n    pair = mgr.acquire();\n    try {\n      assertEquals(3, pair.taxonomyReader.getSize());\n    } finally {\n      mgr.release(pair);\n    }\n\n    w.shutdown();\n    IOUtils.close(mgr, tw, taxoDir, indexDir);\n  }\n\n","sourceOld":"  public void testReplaceTaxonomyDirectory() throws Exception {\n    Directory indexDir = newDirectory();\n    Directory taxoDir = newDirectory();\n    IndexWriter w = new IndexWriter(indexDir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    DirectoryTaxonomyWriter tw = new DirectoryTaxonomyWriter(taxoDir);\n    w.commit();\n    tw.commit();\n\n    Directory taxoDir2 = newDirectory();\n    DirectoryTaxonomyWriter tw2 = new DirectoryTaxonomyWriter(taxoDir2);\n    tw2.addCategory(new FacetLabel(\"a\", \"b\"));\n    tw2.close();\n\n    SearcherTaxonomyManager mgr = new SearcherTaxonomyManager(indexDir, taxoDir, null);\n    SearcherAndTaxonomy pair = mgr.acquire();\n    try {\n      assertEquals(1, pair.taxonomyReader.getSize());\n    } finally {\n      mgr.release(pair);\n    }\n    \n    w.addDocument(new Document());\n    tw.replaceTaxonomy(taxoDir2);\n    taxoDir2.close();\n    w.commit();\n    tw.commit();\n\n    mgr.maybeRefresh();\n    pair = mgr.acquire();\n    try {\n      assertEquals(3, pair.taxonomyReader.getSize());\n    } finally {\n      mgr.release(pair);\n    }\n\n    w.shutdown();\n    IOUtils.close(mgr, tw, taxoDir, indexDir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestSearcherTaxonomyManager#testReplaceTaxonomyDirectory().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestSearcherTaxonomyManager#testReplaceTaxonomyDirectory().mjava","sourceNew":"  public void testReplaceTaxonomyDirectory() throws Exception {\n    Directory indexDir = newDirectory();\n    Directory taxoDir = newDirectory();\n    IndexWriter w = new IndexWriter(indexDir, newIndexWriterConfig(new MockAnalyzer(random())));\n    DirectoryTaxonomyWriter tw = new DirectoryTaxonomyWriter(taxoDir);\n    w.commit();\n    tw.commit();\n\n    Directory taxoDir2 = newDirectory();\n    DirectoryTaxonomyWriter tw2 = new DirectoryTaxonomyWriter(taxoDir2);\n    tw2.addCategory(new FacetLabel(\"a\", \"b\"));\n    tw2.close();\n\n    SearcherTaxonomyManager mgr = new SearcherTaxonomyManager(indexDir, taxoDir, null);\n    SearcherAndTaxonomy pair = mgr.acquire();\n    try {\n      assertEquals(1, pair.taxonomyReader.getSize());\n    } finally {\n      mgr.release(pair);\n    }\n    \n    w.addDocument(new Document());\n    tw.replaceTaxonomy(taxoDir2);\n    taxoDir2.close();\n    w.commit();\n    tw.commit();\n\n    mgr.maybeRefresh();\n    pair = mgr.acquire();\n    try {\n      assertEquals(3, pair.taxonomyReader.getSize());\n    } finally {\n      mgr.release(pair);\n    }\n\n    w.close();\n    IOUtils.close(mgr, tw, taxoDir, indexDir);\n  }\n\n","sourceOld":"  public void testReplaceTaxonomyDirectory() throws Exception {\n    Directory indexDir = newDirectory();\n    Directory taxoDir = newDirectory();\n    IndexWriter w = new IndexWriter(indexDir, newIndexWriterConfig(new MockAnalyzer(random())));\n    DirectoryTaxonomyWriter tw = new DirectoryTaxonomyWriter(taxoDir);\n    w.commit();\n    tw.commit();\n\n    Directory taxoDir2 = newDirectory();\n    DirectoryTaxonomyWriter tw2 = new DirectoryTaxonomyWriter(taxoDir2);\n    tw2.addCategory(new FacetLabel(\"a\", \"b\"));\n    tw2.close();\n\n    SearcherTaxonomyManager mgr = new SearcherTaxonomyManager(indexDir, taxoDir, null);\n    SearcherAndTaxonomy pair = mgr.acquire();\n    try {\n      assertEquals(1, pair.taxonomyReader.getSize());\n    } finally {\n      mgr.release(pair);\n    }\n    \n    w.addDocument(new Document());\n    tw.replaceTaxonomy(taxoDir2);\n    taxoDir2.close();\n    w.commit();\n    tw.commit();\n\n    mgr.maybeRefresh();\n    pair = mgr.acquire();\n    try {\n      assertEquals(3, pair.taxonomyReader.getSize());\n    } finally {\n      mgr.release(pair);\n    }\n\n    w.shutdown();\n    IOUtils.close(mgr, tw, taxoDir, indexDir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d47a51687a906464022060653be52ed62dfa2c18":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d0ef034a4f10871667ae75181537775ddcf8ade4":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["d47a51687a906464022060653be52ed62dfa2c18"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d0ef034a4f10871667ae75181537775ddcf8ade4"]},"commit2Childs":{"d47a51687a906464022060653be52ed62dfa2c18":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d47a51687a906464022060653be52ed62dfa2c18"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}