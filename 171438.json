{"path":"contrib/gdata-server/src/core/src/java/org/apache/lucene/gdata/search/index/IndexController#initialize().mjava","commits":[{"id":"4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe","date":1166036663,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/gdata-server/src/core/src/java/org/apache/lucene/gdata/search/index/IndexController#initialize().mjava","pathOld":"contrib/gdata-server/src/core/java/org/apache/lucene/gdata/search/index/IndexController#initialize().mjava","sourceNew":"    /**\n     * @see org.apache.lucene.gdata.search.SearchComponent#initialize()\n     */\n    public synchronized void initialize() {\n        if (this.isInitialized.get())\n            throw new IllegalStateException(\n                    \"IndexController is already initialized\");\n        this.destroyed.set(false);\n        /*\n         * if this fails the server must not startup --> throw runtime exception\n         */\n        GDataServerRegistry.getRegistry().registerEntryEventListener(this);\n\n        GDataServerRegistry.getRegistry().registerEntryEventListener(this);\n        Collection<ProvidedService> services = GDataServerRegistry\n                .getRegistry().getServices();\n        this.indexerMap = new ConcurrentHashMap<String, ServiceIndex>(services\n                .size());\n       \n        for (ProvidedService service : services) {\n            IndexSchema schema = service.getIndexSchema();\n            /*\n             * initialize will fail if mandatory values are not set. This is\n             * just a\n             */\n            schema.initialize();\n            addIndexSchema(schema);\n        }\n        this.isInitialized.set(true);\n        \n\n    }\n\n","sourceOld":"    /**\n     * @see org.apache.lucene.gdata.search.SearchComponent#initialize()\n     */\n    public synchronized void initialize() {\n        if (this.isInitialized.get())\n            throw new IllegalStateException(\n                    \"IndexController is already initialized\");\n        this.destroyed.set(false);\n        /*\n         * if this fails the server must not startup --> throw runtime exception\n         */\n        GDataServerRegistry.getRegistry().registerEntryEventListener(this);\n\n        GDataServerRegistry.getRegistry().registerEntryEventListener(this);\n        Collection<ProvidedService> services = GDataServerRegistry\n                .getRegistry().getServices();\n        this.indexerMap = new ConcurrentHashMap<String, ServiceIndex>(services\n                .size());\n       \n        for (ProvidedService service : services) {\n            IndexSchema schema = service.getIndexSchema();\n            /*\n             * initialize will fail if mandatory values are not set. This is\n             * just a\n             */\n            schema.initialize();\n            addIndexSchema(schema);\n        }\n        this.isInitialized.set(true);\n        \n\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"353a38bbb8d8067d74d6039986c7ce44c2f6cdbe","date":1195519587,"type":4,"author":"Michael Busch","isMerge":false,"pathNew":"/dev/null","pathOld":"contrib/gdata-server/src/core/src/java/org/apache/lucene/gdata/search/index/IndexController#initialize().mjava","sourceNew":null,"sourceOld":"    /**\n     * @see org.apache.lucene.gdata.search.SearchComponent#initialize()\n     */\n    public synchronized void initialize() {\n        if (this.isInitialized.get())\n            throw new IllegalStateException(\n                    \"IndexController is already initialized\");\n        this.destroyed.set(false);\n        /*\n         * if this fails the server must not startup --> throw runtime exception\n         */\n        GDataServerRegistry.getRegistry().registerEntryEventListener(this);\n\n        GDataServerRegistry.getRegistry().registerEntryEventListener(this);\n        Collection<ProvidedService> services = GDataServerRegistry\n                .getRegistry().getServices();\n        this.indexerMap = new ConcurrentHashMap<String, ServiceIndex>(services\n                .size());\n       \n        for (ProvidedService service : services) {\n            IndexSchema schema = service.getIndexSchema();\n            /*\n             * initialize will fail if mandatory values are not set. This is\n             * just a\n             */\n            schema.initialize();\n            addIndexSchema(schema);\n        }\n        this.isInitialized.set(true);\n        \n\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"353a38bbb8d8067d74d6039986c7ce44c2f6cdbe":["4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["353a38bbb8d8067d74d6039986c7ce44c2f6cdbe"]},"commit2Childs":{"4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe":["353a38bbb8d8067d74d6039986c7ce44c2f6cdbe"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe"],"353a38bbb8d8067d74d6039986c7ce44c2f6cdbe":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}