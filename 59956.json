{"path":"lucene/core/src/test/org/apache/lucene/search/FuzzyTermOnShortTermsTest#getDirectory(Analyzer,String[]).mjava","commits":[{"id":"33e6cd929924316f9ab2bf03fe69821632f01108","date":1379021189,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/FuzzyTermOnShortTermsTest#getDirectory(Analyzer,String[]).mjava","pathOld":"/dev/null","sourceNew":"   public static Directory getDirectory(Analyzer analyzer, String[] vals) throws IOException{\n      Directory directory = newDirectory();\n      RandomIndexWriter writer = new RandomIndexWriter(random(), directory,\n          newIndexWriterConfig(TEST_VERSION_CURRENT, analyzer)\n          .setMaxBufferedDocs(_TestUtil.nextInt(random(), 100, 1000)).setMergePolicy(newLogMergePolicy()));\n\n      for (String s : vals){\n         Document d = new Document();\n         d.add(newTextField(FIELD, s, Field.Store.YES));\n         writer.addDocument(d);\n            \n      }\n      writer.close();\n      return directory;\n   }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6613659748fe4411a7dcf85266e55db1f95f7315","date":1392773913,"type":3,"author":"Benson Margulies","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/FuzzyTermOnShortTermsTest#getDirectory(Analyzer,String[]).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/FuzzyTermOnShortTermsTest#getDirectory(Analyzer,String[]).mjava","sourceNew":"   public static Directory getDirectory(Analyzer analyzer, String[] vals) throws IOException{\n      Directory directory = newDirectory();\n      RandomIndexWriter writer = new RandomIndexWriter(random(), directory,\n          newIndexWriterConfig(TEST_VERSION_CURRENT, analyzer)\n          .setMaxBufferedDocs(TestUtil.nextInt(random(), 100, 1000)).setMergePolicy(newLogMergePolicy()));\n\n      for (String s : vals){\n         Document d = new Document();\n         d.add(newTextField(FIELD, s, Field.Store.YES));\n         writer.addDocument(d);\n            \n      }\n      writer.close();\n      return directory;\n   }\n\n","sourceOld":"   public static Directory getDirectory(Analyzer analyzer, String[] vals) throws IOException{\n      Directory directory = newDirectory();\n      RandomIndexWriter writer = new RandomIndexWriter(random(), directory,\n          newIndexWriterConfig(TEST_VERSION_CURRENT, analyzer)\n          .setMaxBufferedDocs(_TestUtil.nextInt(random(), 100, 1000)).setMergePolicy(newLogMergePolicy()));\n\n      for (String s : vals){\n         Document d = new Document();\n         d.add(newTextField(FIELD, s, Field.Store.YES));\n         writer.addDocument(d);\n            \n      }\n      writer.close();\n      return directory;\n   }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/FuzzyTermOnShortTermsTest#getDirectory(Analyzer,String[]).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/FuzzyTermOnShortTermsTest#getDirectory(Analyzer,String[]).mjava","sourceNew":"   public static Directory getDirectory(Analyzer analyzer, String[] vals) throws IOException{\n      Directory directory = newDirectory();\n      RandomIndexWriter writer = new RandomIndexWriter(random(), directory,\n          newIndexWriterConfig(TEST_VERSION_CURRENT, analyzer)\n          .setMaxBufferedDocs(TestUtil.nextInt(random(), 100, 1000)).setMergePolicy(newLogMergePolicy()));\n\n      for (String s : vals){\n         Document d = new Document();\n         d.add(newTextField(FIELD, s, Field.Store.YES));\n         writer.addDocument(d);\n            \n      }\n      writer.shutdown();\n      return directory;\n   }\n\n","sourceOld":"   public static Directory getDirectory(Analyzer analyzer, String[] vals) throws IOException{\n      Directory directory = newDirectory();\n      RandomIndexWriter writer = new RandomIndexWriter(random(), directory,\n          newIndexWriterConfig(TEST_VERSION_CURRENT, analyzer)\n          .setMaxBufferedDocs(TestUtil.nextInt(random(), 100, 1000)).setMergePolicy(newLogMergePolicy()));\n\n      for (String s : vals){\n         Document d = new Document();\n         d.add(newTextField(FIELD, s, Field.Store.YES));\n         writer.addDocument(d);\n            \n      }\n      writer.close();\n      return directory;\n   }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e","date":1406737224,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/FuzzyTermOnShortTermsTest#getDirectory(Analyzer,String[]).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/FuzzyTermOnShortTermsTest#getDirectory(Analyzer,String[]).mjava","sourceNew":"   public static Directory getDirectory(Analyzer analyzer, String[] vals) throws IOException{\n      Directory directory = newDirectory();\n      RandomIndexWriter writer = new RandomIndexWriter(random(), directory,\n          newIndexWriterConfig(analyzer)\n          .setMaxBufferedDocs(TestUtil.nextInt(random(), 100, 1000)).setMergePolicy(newLogMergePolicy()));\n\n      for (String s : vals){\n         Document d = new Document();\n         d.add(newTextField(FIELD, s, Field.Store.YES));\n         writer.addDocument(d);\n            \n      }\n      writer.shutdown();\n      return directory;\n   }\n\n","sourceOld":"   public static Directory getDirectory(Analyzer analyzer, String[] vals) throws IOException{\n      Directory directory = newDirectory();\n      RandomIndexWriter writer = new RandomIndexWriter(random(), directory,\n          newIndexWriterConfig(TEST_VERSION_CURRENT, analyzer)\n          .setMaxBufferedDocs(TestUtil.nextInt(random(), 100, 1000)).setMergePolicy(newLogMergePolicy()));\n\n      for (String s : vals){\n         Document d = new Document();\n         d.add(newTextField(FIELD, s, Field.Store.YES));\n         writer.addDocument(d);\n            \n      }\n      writer.shutdown();\n      return directory;\n   }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/FuzzyTermOnShortTermsTest#getDirectory(Analyzer,String[]).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/FuzzyTermOnShortTermsTest#getDirectory(Analyzer,String[]).mjava","sourceNew":"   public static Directory getDirectory(Analyzer analyzer, String[] vals) throws IOException{\n      Directory directory = newDirectory();\n      RandomIndexWriter writer = new RandomIndexWriter(random(), directory,\n          newIndexWriterConfig(analyzer)\n          .setMaxBufferedDocs(TestUtil.nextInt(random(), 100, 1000)).setMergePolicy(newLogMergePolicy()));\n\n      for (String s : vals){\n         Document d = new Document();\n         d.add(newTextField(FIELD, s, Field.Store.YES));\n         writer.addDocument(d);\n            \n      }\n      writer.close();\n      return directory;\n   }\n\n","sourceOld":"   public static Directory getDirectory(Analyzer analyzer, String[] vals) throws IOException{\n      Directory directory = newDirectory();\n      RandomIndexWriter writer = new RandomIndexWriter(random(), directory,\n          newIndexWriterConfig(analyzer)\n          .setMaxBufferedDocs(TestUtil.nextInt(random(), 100, 1000)).setMergePolicy(newLogMergePolicy()));\n\n      for (String s : vals){\n         Document d = new Document();\n         d.add(newTextField(FIELD, s, Field.Store.YES));\n         writer.addDocument(d);\n            \n      }\n      writer.shutdown();\n      return directory;\n   }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"6613659748fe4411a7dcf85266e55db1f95f7315":["33e6cd929924316f9ab2bf03fe69821632f01108"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d0ef034a4f10871667ae75181537775ddcf8ade4":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["6613659748fe4411a7dcf85266e55db1f95f7315"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"33e6cd929924316f9ab2bf03fe69821632f01108":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"6613659748fe4411a7dcf85266e55db1f95f7315":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["33e6cd929924316f9ab2bf03fe69821632f01108"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"33e6cd929924316f9ab2bf03fe69821632f01108":["6613659748fe4411a7dcf85266e55db1f95f7315"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}