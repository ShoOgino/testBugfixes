{"path":"solr/core/src/test/org/apache/solr/internal/csv/CSVParserTest#testNextToken2().mjava","commits":[{"id":"a62060bf935e54f2cf73861fbc773508ab49aeb9","date":1333411307,"type":0,"author":"Christopher John Male","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/internal/csv/CSVParserTest#testNextToken2().mjava","pathOld":"/dev/null","sourceNew":"  // multiline including comments (and empty lines)\n  public void testNextToken2() throws IOException {\n    /*   file:   1,2,3,\n     *           a,b x,c\n     *\n     *           # this is a comment \n     *           d,e,\n     * \n     */\n    String code = \"1,2,3,\\na,b x,c\\n#foo\\n\\nd,e,\\n\\n\";\n    CSVStrategy strategy = (CSVStrategy)CSVStrategy.DEFAULT_STRATEGY.clone();\n    // strategy.setIgnoreEmptyLines(false);\n    strategy.setCommentStart('#');\n\n    TestCSVParser parser = new TestCSVParser(new StringReader(code), strategy);\n\n\n    assertEquals(CSVParser.TT_TOKEN + \";1;\", parser.testNextToken());\n    assertEquals(CSVParser.TT_TOKEN + \";2;\", parser.testNextToken());\n    assertEquals(CSVParser.TT_TOKEN + \";3;\", parser.testNextToken());\n    assertEquals(CSVParser.TT_EORECORD + \";;\", parser.testNextToken());\n    assertEquals(CSVParser.TT_TOKEN + \";a;\", parser.testNextToken());\n    assertEquals(CSVParser.TT_TOKEN + \";b x;\", parser.testNextToken());\n    assertEquals(CSVParser.TT_EORECORD + \";c;\", parser.testNextToken());\n    assertEquals(CSVParser.TT_EORECORD + \";;\", parser.testNextToken());\n    assertEquals(CSVParser.TT_TOKEN + \";d;\", parser.testNextToken());\n    assertEquals(CSVParser.TT_TOKEN + \";e;\", parser.testNextToken());\n    assertEquals(CSVParser.TT_EORECORD + \";;\", parser.testNextToken());\n    assertEquals(CSVParser.TT_EOF + \";;\", parser.testNextToken());    \n    assertEquals(CSVParser.TT_EOF + \";;\", parser.testNextToken());    \n    \n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a62060bf935e54f2cf73861fbc773508ab49aeb9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a62060bf935e54f2cf73861fbc773508ab49aeb9"]},"commit2Childs":{"a62060bf935e54f2cf73861fbc773508ab49aeb9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a62060bf935e54f2cf73861fbc773508ab49aeb9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}