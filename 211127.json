{"path":"contrib/snowball/src/java/org/tartarus/snowball/ext/GermanStemmer#r_postlude().mjava","commits":[{"id":"b62da6a75575f59a016a076b4753dc6e20c74b44","date":1219528967,"type":1,"author":"Karl-Johan Wettin","isMerge":false,"pathNew":"contrib/snowball/src/java/org/tartarus/snowball/ext/GermanStemmer#r_postlude().mjava","pathOld":"contrib/snowball/src/java/net/sf/snowball/ext/GermanStemmer#r_postlude().mjava","sourceNew":"        private boolean r_postlude() {\n            int among_var;\n            int v_1;\n            // repeat, line 55\n            replab0: while(true)\n            {\n                v_1 = cursor;\n                lab1: do {\n                    // (, line 55\n                    // [, line 57\n                    bra = cursor;\n                    // substring, line 57\n                    among_var = find_among(a_0, 6);\n                    if (among_var == 0)\n                    {\n                        break lab1;\n                    }\n                    // ], line 57\n                    ket = cursor;\n                    switch(among_var) {\n                        case 0:\n                            break lab1;\n                        case 1:\n                            // (, line 58\n                            // <-, line 58\n                            slice_from(\"y\");\n                            break;\n                        case 2:\n                            // (, line 59\n                            // <-, line 59\n                            slice_from(\"u\");\n                            break;\n                        case 3:\n                            // (, line 60\n                            // <-, line 60\n                            slice_from(\"a\");\n                            break;\n                        case 4:\n                            // (, line 61\n                            // <-, line 61\n                            slice_from(\"o\");\n                            break;\n                        case 5:\n                            // (, line 62\n                            // <-, line 62\n                            slice_from(\"u\");\n                            break;\n                        case 6:\n                            // (, line 63\n                            // next, line 63\n                            if (cursor >= limit)\n                            {\n                                break lab1;\n                            }\n                            cursor++;\n                            break;\n                    }\n                    continue replab0;\n                } while (false);\n                cursor = v_1;\n                break replab0;\n            }\n            return true;\n        }\n\n","sourceOld":"        private boolean r_postlude() {\n            int among_var;\n            int v_1;\n            // repeat, line 53\n            replab0: while(true)\n            {\n                v_1 = cursor;\n                lab1: do {\n                    // (, line 53\n                    // [, line 55\n                    bra = cursor;\n                    // substring, line 55\n                    among_var = find_among(a_0, 6);\n                    if (among_var == 0)\n                    {\n                        break lab1;\n                    }\n                    // ], line 55\n                    ket = cursor;\n                    switch(among_var) {\n                        case 0:\n                            break lab1;\n                        case 1:\n                            // (, line 56\n                            // <-, line 56\n                            slice_from(\"y\");\n                            break;\n                        case 2:\n                            // (, line 57\n                            // <-, line 57\n                            slice_from(\"u\");\n                            break;\n                        case 3:\n                            // (, line 58\n                            // <-, line 58\n                            slice_from(\"a\");\n                            break;\n                        case 4:\n                            // (, line 59\n                            // <-, line 59\n                            slice_from(\"o\");\n                            break;\n                        case 5:\n                            // (, line 60\n                            // <-, line 60\n                            slice_from(\"u\");\n                            break;\n                        case 6:\n                            // (, line 61\n                            // next, line 61\n                            if (cursor >= limit)\n                            {\n                                break lab1;\n                            }\n                            cursor++;\n                            break;\n                    }\n                    continue replab0;\n                } while (false);\n                cursor = v_1;\n                break replab0;\n            }\n            return true;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a5aa159e1ac4009d23cea92797d3804da4f5e7ad","date":1264041909,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"contrib/analyzers/common/src/java/org/tartarus/snowball/ext/GermanStemmer#r_postlude().mjava","pathOld":"contrib/snowball/src/java/org/tartarus/snowball/ext/GermanStemmer#r_postlude().mjava","sourceNew":"        private boolean r_postlude() {\n            int among_var;\n            int v_1;\n            // repeat, line 55\n            replab0: while(true)\n            {\n                v_1 = cursor;\n                lab1: do {\n                    // (, line 55\n                    // [, line 57\n                    bra = cursor;\n                    // substring, line 57\n                    among_var = find_among(a_0, 6);\n                    if (among_var == 0)\n                    {\n                        break lab1;\n                    }\n                    // ], line 57\n                    ket = cursor;\n                    switch(among_var) {\n                        case 0:\n                            break lab1;\n                        case 1:\n                            // (, line 58\n                            // <-, line 58\n                            slice_from(\"y\");\n                            break;\n                        case 2:\n                            // (, line 59\n                            // <-, line 59\n                            slice_from(\"u\");\n                            break;\n                        case 3:\n                            // (, line 60\n                            // <-, line 60\n                            slice_from(\"a\");\n                            break;\n                        case 4:\n                            // (, line 61\n                            // <-, line 61\n                            slice_from(\"o\");\n                            break;\n                        case 5:\n                            // (, line 62\n                            // <-, line 62\n                            slice_from(\"u\");\n                            break;\n                        case 6:\n                            // (, line 63\n                            // next, line 63\n                            if (cursor >= limit)\n                            {\n                                break lab1;\n                            }\n                            cursor++;\n                            break;\n                    }\n                    continue replab0;\n                } while (false);\n                cursor = v_1;\n                break replab0;\n            }\n            return true;\n        }\n\n","sourceOld":"        private boolean r_postlude() {\n            int among_var;\n            int v_1;\n            // repeat, line 55\n            replab0: while(true)\n            {\n                v_1 = cursor;\n                lab1: do {\n                    // (, line 55\n                    // [, line 57\n                    bra = cursor;\n                    // substring, line 57\n                    among_var = find_among(a_0, 6);\n                    if (among_var == 0)\n                    {\n                        break lab1;\n                    }\n                    // ], line 57\n                    ket = cursor;\n                    switch(among_var) {\n                        case 0:\n                            break lab1;\n                        case 1:\n                            // (, line 58\n                            // <-, line 58\n                            slice_from(\"y\");\n                            break;\n                        case 2:\n                            // (, line 59\n                            // <-, line 59\n                            slice_from(\"u\");\n                            break;\n                        case 3:\n                            // (, line 60\n                            // <-, line 60\n                            slice_from(\"a\");\n                            break;\n                        case 4:\n                            // (, line 61\n                            // <-, line 61\n                            slice_from(\"o\");\n                            break;\n                        case 5:\n                            // (, line 62\n                            // <-, line 62\n                            slice_from(\"u\");\n                            break;\n                        case 6:\n                            // (, line 63\n                            // next, line 63\n                            if (cursor >= limit)\n                            {\n                                break lab1;\n                            }\n                            cursor++;\n                            break;\n                    }\n                    continue replab0;\n                } while (false);\n                cursor = v_1;\n                break replab0;\n            }\n            return true;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"38c26570a4fd6cf0856801c977a2bc9c28a5424c","date":1264074890,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/snowball/src/java/org/tartarus/snowball/ext/GermanStemmer#r_postlude().mjava","pathOld":"/dev/null","sourceNew":"        private boolean r_postlude() {\n            int among_var;\n            int v_1;\n            // repeat, line 55\n            replab0: while(true)\n            {\n                v_1 = cursor;\n                lab1: do {\n                    // (, line 55\n                    // [, line 57\n                    bra = cursor;\n                    // substring, line 57\n                    among_var = find_among(a_0, 6);\n                    if (among_var == 0)\n                    {\n                        break lab1;\n                    }\n                    // ], line 57\n                    ket = cursor;\n                    switch(among_var) {\n                        case 0:\n                            break lab1;\n                        case 1:\n                            // (, line 58\n                            // <-, line 58\n                            slice_from(\"y\");\n                            break;\n                        case 2:\n                            // (, line 59\n                            // <-, line 59\n                            slice_from(\"u\");\n                            break;\n                        case 3:\n                            // (, line 60\n                            // <-, line 60\n                            slice_from(\"a\");\n                            break;\n                        case 4:\n                            // (, line 61\n                            // <-, line 61\n                            slice_from(\"o\");\n                            break;\n                        case 5:\n                            // (, line 62\n                            // <-, line 62\n                            slice_from(\"u\");\n                            break;\n                        case 6:\n                            // (, line 63\n                            // next, line 63\n                            if (cursor >= limit)\n                            {\n                                break lab1;\n                            }\n                            cursor++;\n                            break;\n                    }\n                    continue replab0;\n                } while (false);\n                cursor = v_1;\n                break replab0;\n            }\n            return true;\n        }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d40ff39db4a2b90a440b97f2a7d7eda344f004ef","date":1264074978,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"contrib/snowball/src/java/org/tartarus/snowball/ext/GermanStemmer#r_postlude().mjava","sourceNew":null,"sourceOld":"        private boolean r_postlude() {\n            int among_var;\n            int v_1;\n            // repeat, line 55\n            replab0: while(true)\n            {\n                v_1 = cursor;\n                lab1: do {\n                    // (, line 55\n                    // [, line 57\n                    bra = cursor;\n                    // substring, line 57\n                    among_var = find_among(a_0, 6);\n                    if (among_var == 0)\n                    {\n                        break lab1;\n                    }\n                    // ], line 57\n                    ket = cursor;\n                    switch(among_var) {\n                        case 0:\n                            break lab1;\n                        case 1:\n                            // (, line 58\n                            // <-, line 58\n                            slice_from(\"y\");\n                            break;\n                        case 2:\n                            // (, line 59\n                            // <-, line 59\n                            slice_from(\"u\");\n                            break;\n                        case 3:\n                            // (, line 60\n                            // <-, line 60\n                            slice_from(\"a\");\n                            break;\n                        case 4:\n                            // (, line 61\n                            // <-, line 61\n                            slice_from(\"o\");\n                            break;\n                        case 5:\n                            // (, line 62\n                            // <-, line 62\n                            slice_from(\"u\");\n                            break;\n                        case 6:\n                            // (, line 63\n                            // next, line 63\n                            if (cursor >= limit)\n                            {\n                                break lab1;\n                            }\n                            cursor++;\n                            break;\n                    }\n                    continue replab0;\n                } while (false);\n                cursor = v_1;\n                break replab0;\n            }\n            return true;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b62da6a75575f59a016a076b4753dc6e20c74b44":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a5aa159e1ac4009d23cea92797d3804da4f5e7ad":["b62da6a75575f59a016a076b4753dc6e20c74b44"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"38c26570a4fd6cf0856801c977a2bc9c28a5424c":["a5aa159e1ac4009d23cea92797d3804da4f5e7ad"],"d40ff39db4a2b90a440b97f2a7d7eda344f004ef":["38c26570a4fd6cf0856801c977a2bc9c28a5424c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d40ff39db4a2b90a440b97f2a7d7eda344f004ef"]},"commit2Childs":{"b62da6a75575f59a016a076b4753dc6e20c74b44":["a5aa159e1ac4009d23cea92797d3804da4f5e7ad"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b62da6a75575f59a016a076b4753dc6e20c74b44"],"a5aa159e1ac4009d23cea92797d3804da4f5e7ad":["38c26570a4fd6cf0856801c977a2bc9c28a5424c"],"38c26570a4fd6cf0856801c977a2bc9c28a5424c":["d40ff39db4a2b90a440b97f2a7d7eda344f004ef"],"d40ff39db4a2b90a440b97f2a7d7eda344f004ef":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}