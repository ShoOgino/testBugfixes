{"path":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/ConcurrentUpdateSolrClientBadInputTest#assertExceptionThrownWithMessageContaining(Class,List[String],LuceneTestCase.ThrowingRunnable).mjava","commits":[{"id":"8f9b0f8c5b9a784bf4fd8edc474e270470d1c417","date":1539483336,"type":0,"author":"Jason Gerlowski","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/ConcurrentUpdateSolrClientBadInputTest#assertExceptionThrownWithMessageContaining(Class,List[String],LuceneTestCase.ThrowingRunnable).mjava","pathOld":"/dev/null","sourceNew":"  private void assertExceptionThrownWithMessageContaining(Class expectedType, List<String> expectedStrings, LuceneTestCase.ThrowingRunnable runnable) {\n    Throwable thrown = expectThrows(expectedType, runnable);\n\n    if (expectedStrings != null) {\n      for (String expectedString : expectedStrings) {\n        assertThat(thrown.getMessage(), containsString(expectedString));\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9ba1b632c041956c93c41aa1143d16a567014891","date":1592328473,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/ConcurrentUpdateSolrClientBadInputTest#assertExceptionThrownWithMessageContaining(Class,List[String],LuceneTestCase.ThrowingRunnable).mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/impl/ConcurrentUpdateSolrClientBadInputTest#assertExceptionThrownWithMessageContaining(Class,List[String],LuceneTestCase.ThrowingRunnable).mjava","sourceNew":"  private void assertExceptionThrownWithMessageContaining(@SuppressWarnings({\"rawtypes\"})Class expectedType,\n                                                          List<String> expectedStrings, LuceneTestCase.ThrowingRunnable runnable) {\n    @SuppressWarnings({\"unchecked\"})\n    Throwable thrown = expectThrows(expectedType, runnable);\n\n    if (expectedStrings != null) {\n      for (String expectedString : expectedStrings) {\n        assertThat(thrown.getMessage(), containsString(expectedString));\n      }\n    }\n  }\n\n","sourceOld":"  private void assertExceptionThrownWithMessageContaining(Class expectedType, List<String> expectedStrings, LuceneTestCase.ThrowingRunnable runnable) {\n    Throwable thrown = expectThrows(expectedType, runnable);\n\n    if (expectedStrings != null) {\n      for (String expectedString : expectedStrings) {\n        assertThat(thrown.getMessage(), containsString(expectedString));\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9ba1b632c041956c93c41aa1143d16a567014891":["8f9b0f8c5b9a784bf4fd8edc474e270470d1c417"],"8f9b0f8c5b9a784bf4fd8edc474e270470d1c417":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9ba1b632c041956c93c41aa1143d16a567014891"]},"commit2Childs":{"9ba1b632c041956c93c41aa1143d16a567014891":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"8f9b0f8c5b9a784bf4fd8edc474e270470d1c417":["9ba1b632c041956c93c41aa1143d16a567014891"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8f9b0f8c5b9a784bf4fd8edc474e270470d1c417"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}