{"path":"solr/core/src/test/org/apache/solr/security/hadoop/TestZkAclsWithHadoopAuth#walkZkTree(ZooKeeper,String,String).mjava","commits":[{"id":"ff7e60660726fd43b5f9d130e3de39e69252227a","date":1502275613,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/security/hadoop/TestZkAclsWithHadoopAuth#walkZkTree(ZooKeeper,String,String).mjava","pathOld":"/dev/null","sourceNew":"  private void walkZkTree (ZooKeeper keeper, String zkChroot, String path) throws Exception {\n    if (isSecurityZNode(zkChroot, path)) {\n      checkSecurityACLs(keeper, path);\n    } else {\n      checkNonSecurityACLs(keeper, path);\n    }\n\n    List<String> children = keeper.getChildren(path, false);\n    for (String child : children) {\n      String subpath = path.endsWith(\"/\") ? path + child : path + \"/\" + child;\n      walkZkTree(keeper, zkChroot, subpath);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"58884af1f68e9d61c217c753fbd6266d86a63b14","date":1502363401,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/security/hadoop/TestZkAclsWithHadoopAuth#walkZkTree(ZooKeeper,String,String).mjava","pathOld":"/dev/null","sourceNew":"  private void walkZkTree (ZooKeeper keeper, String zkChroot, String path) throws Exception {\n    if (isSecurityZNode(zkChroot, path)) {\n      checkSecurityACLs(keeper, path);\n    } else {\n      checkNonSecurityACLs(keeper, path);\n    }\n\n    List<String> children = keeper.getChildren(path, false);\n    for (String child : children) {\n      String subpath = path.endsWith(\"/\") ? path + child : path + \"/\" + child;\n      walkZkTree(keeper, zkChroot, subpath);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"93d40a0287bd8a5b69a8df49a797dcd4a8b1a7be","date":1502692251,"type":0,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/security/hadoop/TestZkAclsWithHadoopAuth#walkZkTree(ZooKeeper,String,String).mjava","pathOld":"/dev/null","sourceNew":"  private void walkZkTree (ZooKeeper keeper, String zkChroot, String path) throws Exception {\n    if (isSecurityZNode(zkChroot, path)) {\n      checkSecurityACLs(keeper, path);\n    } else {\n      checkNonSecurityACLs(keeper, path);\n    }\n\n    List<String> children = keeper.getChildren(path, false);\n    for (String child : children) {\n      String subpath = path.endsWith(\"/\") ? path + child : path + \"/\" + child;\n      walkZkTree(keeper, zkChroot, subpath);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"58884af1f68e9d61c217c753fbd6266d86a63b14":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ff7e60660726fd43b5f9d130e3de39e69252227a"],"ff7e60660726fd43b5f9d130e3de39e69252227a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"93d40a0287bd8a5b69a8df49a797dcd4a8b1a7be":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ff7e60660726fd43b5f9d130e3de39e69252227a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ff7e60660726fd43b5f9d130e3de39e69252227a"]},"commit2Childs":{"58884af1f68e9d61c217c753fbd6266d86a63b14":[],"ff7e60660726fd43b5f9d130e3de39e69252227a":["58884af1f68e9d61c217c753fbd6266d86a63b14","93d40a0287bd8a5b69a8df49a797dcd4a8b1a7be","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["58884af1f68e9d61c217c753fbd6266d86a63b14","ff7e60660726fd43b5f9d130e3de39e69252227a","93d40a0287bd8a5b69a8df49a797dcd4a8b1a7be"],"93d40a0287bd8a5b69a8df49a797dcd4a8b1a7be":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["58884af1f68e9d61c217c753fbd6266d86a63b14","93d40a0287bd8a5b69a8df49a797dcd4a8b1a7be","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}