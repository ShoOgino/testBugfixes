{"path":"lucene/facet/src/java/org/apache/lucene/facet/partitions/PartitionsFacetResultsHandler#fetchPartitionResult(int).mjava","commits":[{"id":"607428da722dcb3e86bbd11c63de8986e6275c36","date":1360334150,"type":1,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/partitions/PartitionsFacetResultsHandler#fetchPartitionResult(int).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/partitions/search/PartitionsFacetResultsHandler#fetchPartitionResult(int).mjava","sourceNew":"  /**\n   * Fetch results of a single partition, given facet arrays for that partition,\n   * and based on the matching documents and faceted search parameters.\n   * @param offset\n   *          offset in input arrays where partition starts\n   * \n   * @return temporary facet result, potentially, to be passed back to\n   *         <b>this</b> result handler for merging, or <b>null</b> in case that\n   *         constructor parameter, <code>facetRequest</code>, requests an\n   *         illegal FacetResult, like, e.g., a root node category path that\n   *         does not exist in constructor parameter <code>taxonomyReader</code>\n   *         .\n   * @throws IOException\n   *           on error\n   */\n  public abstract IntermediateFacetResult fetchPartitionResult(int offset) throws IOException;\n\n","sourceOld":"  /**\n   * Fetch results of a single partition, given facet arrays for that partition,\n   * and based on the matching documents and faceted search parameters.\n   * @param offset\n   *          offset in input arrays where partition starts\n   * \n   * @return temporary facet result, potentially, to be passed back to\n   *         <b>this</b> result handler for merging, or <b>null</b> in case that\n   *         constructor parameter, <code>facetRequest</code>, requests an\n   *         illegal FacetResult, like, e.g., a root node category path that\n   *         does not exist in constructor parameter <code>taxonomyReader</code>\n   *         .\n   * @throws IOException\n   *           on error\n   */\n  public abstract IntermediateFacetResult fetchPartitionResult(int offset) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d33e19a97046248623a7591aeaa6547233fd15e2","date":1385424777,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/partitions/PartitionsFacetResultsHandler#fetchPartitionResult(int).mjava","sourceNew":null,"sourceOld":"  /**\n   * Fetch results of a single partition, given facet arrays for that partition,\n   * and based on the matching documents and faceted search parameters.\n   * @param offset\n   *          offset in input arrays where partition starts\n   * \n   * @return temporary facet result, potentially, to be passed back to\n   *         <b>this</b> result handler for merging, or <b>null</b> in case that\n   *         constructor parameter, <code>facetRequest</code>, requests an\n   *         illegal FacetResult, like, e.g., a root node category path that\n   *         does not exist in constructor parameter <code>taxonomyReader</code>\n   *         .\n   * @throws IOException\n   *           on error\n   */\n  public abstract IntermediateFacetResult fetchPartitionResult(int offset) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cc728b07df73b197e6d940d27f9b08b63918f13","date":1388834348,"type":4,"author":"Michael McCandless","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/partitions/PartitionsFacetResultsHandler#fetchPartitionResult(int).mjava","sourceNew":null,"sourceOld":"  /**\n   * Fetch results of a single partition, given facet arrays for that partition,\n   * and based on the matching documents and faceted search parameters.\n   * @param offset\n   *          offset in input arrays where partition starts\n   * \n   * @return temporary facet result, potentially, to be passed back to\n   *         <b>this</b> result handler for merging, or <b>null</b> in case that\n   *         constructor parameter, <code>facetRequest</code>, requests an\n   *         illegal FacetResult, like, e.g., a root node category path that\n   *         does not exist in constructor parameter <code>taxonomyReader</code>\n   *         .\n   * @throws IOException\n   *           on error\n   */\n  public abstract IntermediateFacetResult fetchPartitionResult(int offset) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"607428da722dcb3e86bbd11c63de8986e6275c36":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d33e19a97046248623a7591aeaa6547233fd15e2":["607428da722dcb3e86bbd11c63de8986e6275c36"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cc728b07df73b197e6d940d27f9b08b63918f13":["607428da722dcb3e86bbd11c63de8986e6275c36","d33e19a97046248623a7591aeaa6547233fd15e2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3cc728b07df73b197e6d940d27f9b08b63918f13"]},"commit2Childs":{"607428da722dcb3e86bbd11c63de8986e6275c36":["d33e19a97046248623a7591aeaa6547233fd15e2","3cc728b07df73b197e6d940d27f9b08b63918f13"],"d33e19a97046248623a7591aeaa6547233fd15e2":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["607428da722dcb3e86bbd11c63de8986e6275c36"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}