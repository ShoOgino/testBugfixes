{"path":"solr/core/src/java/org/apache/solr/schema/BoolField#createFields(SchemaField,Object).mjava","commits":[{"id":"acd9883560fd89e6448b2b447302fe543040cd4f","date":1488478696,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/BoolField#createFields(SchemaField,Object).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/BoolField#createFields(SchemaField,Object,float).mjava","sourceNew":"  @Override\n  public List<IndexableField> createFields(SchemaField field, Object value) {\n    IndexableField fval = createField(field, value);\n\n    if (field.hasDocValues()) {\n      IndexableField docval;\n      final BytesRef bytes = new BytesRef(toInternal(value.toString()));\n      if (field.multiValued()) {\n        docval = new SortedSetDocValuesField(field.getName(), bytes);\n      } else {\n        docval = new SortedDocValuesField(field.getName(), bytes);\n      }\n\n      // Only create a list of we have 2 values...\n      if (fval != null) {\n        List<IndexableField> fields = new ArrayList<>(2);\n        fields.add(fval);\n        fields.add(docval);\n        return fields;\n      }\n\n      fval = docval;\n    }\n    return Collections.singletonList(fval);\n  }\n\n","sourceOld":"  @Override\n  public List<IndexableField> createFields(SchemaField field, Object value, float boost) {\n    IndexableField fval = createField(field, value, boost);\n\n    if (field.hasDocValues()) {\n      IndexableField docval;\n      final BytesRef bytes = new BytesRef(toInternal(value.toString()));\n      if (field.multiValued()) {\n        docval = new SortedSetDocValuesField(field.getName(), bytes);\n      } else {\n        docval = new SortedDocValuesField(field.getName(), bytes);\n      }\n\n      // Only create a list of we have 2 values...\n      if (fval != null) {\n        List<IndexableField> fields = new ArrayList<>(2);\n        fields.add(fval);\n        fields.add(docval);\n        return fields;\n      }\n\n      fval = docval;\n    }\n    return Collections.singletonList(fval);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"acd9883560fd89e6448b2b447302fe543040cd4f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["acd9883560fd89e6448b2b447302fe543040cd4f"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["acd9883560fd89e6448b2b447302fe543040cd4f"],"acd9883560fd89e6448b2b447302fe543040cd4f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}