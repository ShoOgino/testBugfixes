{"path":"lucene/src/test/org/apache/lucene/index/TestIndexReaderClone#testCloneWithDeletes().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReaderClone#testCloneWithDeletes().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexReaderClone#testCloneWithDeletes().mjava","sourceNew":"  // LUCENE-1648\n  public void testCloneWithDeletes() throws Throwable {\n    final Directory dir1 = new MockRAMDirectory();\n    TestIndexReaderReopen.createIndex(dir1, false);\n    IndexReader origReader = IndexReader.open(dir1, false);\n    origReader.deleteDocument(1);\n\n    IndexReader clonedReader = (IndexReader) origReader.clone();\n    origReader.close();\n    clonedReader.close();\n\n    IndexReader r = IndexReader.open(dir1, false);\n    assertTrue(r.isDeleted(1));\n    r.close();\n    dir1.close();\n  }\n\n","sourceOld":"  // LUCENE-1648\n  public void testCloneWithDeletes() throws Throwable {\n    final Directory dir1 = new MockRAMDirectory();\n    TestIndexReaderReopen.createIndex(dir1, false);\n    IndexReader origReader = IndexReader.open(dir1, false);\n    origReader.deleteDocument(1);\n\n    IndexReader clonedReader = (IndexReader) origReader.clone();\n    origReader.close();\n    clonedReader.close();\n\n    IndexReader r = IndexReader.open(dir1, false);\n    assertTrue(r.isDeleted(1));\n    r.close();\n    dir1.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b21422ff1d1d56499dec481f193b402e5e8def5b","date":1281472367,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReaderClone#testCloneWithDeletes().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReaderClone#testCloneWithDeletes().mjava","sourceNew":"  // LUCENE-1648\n  public void testCloneWithDeletes() throws Throwable {\n    final Directory dir1 = new MockRAMDirectory();\n    TestIndexReaderReopen.createIndex(random, dir1, false);\n    IndexReader origReader = IndexReader.open(dir1, false);\n    origReader.deleteDocument(1);\n\n    IndexReader clonedReader = (IndexReader) origReader.clone();\n    origReader.close();\n    clonedReader.close();\n\n    IndexReader r = IndexReader.open(dir1, false);\n    assertTrue(r.isDeleted(1));\n    r.close();\n    dir1.close();\n  }\n\n","sourceOld":"  // LUCENE-1648\n  public void testCloneWithDeletes() throws Throwable {\n    final Directory dir1 = new MockRAMDirectory();\n    TestIndexReaderReopen.createIndex(dir1, false);\n    IndexReader origReader = IndexReader.open(dir1, false);\n    origReader.deleteDocument(1);\n\n    IndexReader clonedReader = (IndexReader) origReader.clone();\n    origReader.close();\n    clonedReader.close();\n\n    IndexReader r = IndexReader.open(dir1, false);\n    assertTrue(r.isDeleted(1));\n    r.close();\n    dir1.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c","date":1281646583,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReaderClone#testCloneWithDeletes().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReaderClone#testCloneWithDeletes().mjava","sourceNew":"  // LUCENE-1648\n  public void testCloneWithDeletes() throws Throwable {\n    final Directory dir1 = newDirectory(random);\n    TestIndexReaderReopen.createIndex(random, dir1, false);\n    IndexReader origReader = IndexReader.open(dir1, false);\n    origReader.deleteDocument(1);\n\n    IndexReader clonedReader = (IndexReader) origReader.clone();\n    origReader.close();\n    clonedReader.close();\n\n    IndexReader r = IndexReader.open(dir1, false);\n    assertTrue(r.isDeleted(1));\n    r.close();\n    dir1.close();\n  }\n\n","sourceOld":"  // LUCENE-1648\n  public void testCloneWithDeletes() throws Throwable {\n    final Directory dir1 = new MockRAMDirectory();\n    TestIndexReaderReopen.createIndex(random, dir1, false);\n    IndexReader origReader = IndexReader.open(dir1, false);\n    origReader.deleteDocument(1);\n\n    IndexReader clonedReader = (IndexReader) origReader.clone();\n    origReader.close();\n    clonedReader.close();\n\n    IndexReader r = IndexReader.open(dir1, false);\n    assertTrue(r.isDeleted(1));\n    r.close();\n    dir1.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"406e7055a3e99d3fa6ce49a555a51dd18b321806","date":1282520243,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReaderClone#testCloneWithDeletes().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReaderClone#testCloneWithDeletes().mjava","sourceNew":"  // LUCENE-1648\n  public void testCloneWithDeletes() throws Throwable {\n    final Directory dir1 = newDirectory(random);\n    TestIndexReaderReopen.createIndex(random, dir1, false);\n    IndexReader origReader = IndexReader.open(dir1, false);\n    origReader.deleteDocument(1);\n\n    IndexReader clonedReader = (IndexReader) origReader.clone();\n    origReader.close();\n    clonedReader.close();\n\n    IndexReader r = IndexReader.open(dir1, false);\n    assertTrue(MultiFields.getDeletedDocs(r).get(1));\n    r.close();\n    dir1.close();\n  }\n\n","sourceOld":"  // LUCENE-1648\n  public void testCloneWithDeletes() throws Throwable {\n    final Directory dir1 = newDirectory(random);\n    TestIndexReaderReopen.createIndex(random, dir1, false);\n    IndexReader origReader = IndexReader.open(dir1, false);\n    origReader.deleteDocument(1);\n\n    IndexReader clonedReader = (IndexReader) origReader.clone();\n    origReader.close();\n    clonedReader.close();\n\n    IndexReader r = IndexReader.open(dir1, false);\n    assertTrue(r.isDeleted(1));\n    r.close();\n    dir1.close();\n  }\n\n","bugFix":["5fe49edd7581c377876998430f9547519f41a60a"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1f653cfcf159baeaafe5d01682a911e95bba4012","date":1284122058,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReaderClone#testCloneWithDeletes().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReaderClone#testCloneWithDeletes().mjava","sourceNew":"  // LUCENE-1648\n  public void testCloneWithDeletes() throws Throwable {\n    final Directory dir1 = newDirectory();\n    TestIndexReaderReopen.createIndex(random, dir1, false);\n    IndexReader origReader = IndexReader.open(dir1, false);\n    origReader.deleteDocument(1);\n\n    IndexReader clonedReader = (IndexReader) origReader.clone();\n    origReader.close();\n    clonedReader.close();\n\n    IndexReader r = IndexReader.open(dir1, false);\n    assertTrue(MultiFields.getDeletedDocs(r).get(1));\n    r.close();\n    dir1.close();\n  }\n\n","sourceOld":"  // LUCENE-1648\n  public void testCloneWithDeletes() throws Throwable {\n    final Directory dir1 = newDirectory(random);\n    TestIndexReaderReopen.createIndex(random, dir1, false);\n    IndexReader origReader = IndexReader.open(dir1, false);\n    origReader.deleteDocument(1);\n\n    IndexReader clonedReader = (IndexReader) origReader.clone();\n    origReader.close();\n    clonedReader.close();\n\n    IndexReader r = IndexReader.open(dir1, false);\n    assertTrue(MultiFields.getDeletedDocs(r).get(1));\n    r.close();\n    dir1.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReaderClone#testCloneWithDeletes().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReaderClone#testCloneWithDeletes().mjava","sourceNew":"  // LUCENE-1648\n  public void testCloneWithDeletes() throws Throwable {\n    final Directory dir1 = newDirectory();\n    TestIndexReaderReopen.createIndex(random, dir1, false);\n    IndexReader origReader = IndexReader.open(dir1, false);\n    origReader.deleteDocument(1);\n\n    IndexReader clonedReader = (IndexReader) origReader.clone();\n    origReader.close();\n    clonedReader.close();\n\n    IndexReader r = IndexReader.open(dir1, false);\n    assertTrue(MultiFields.getDeletedDocs(r).get(1));\n    r.close();\n    dir1.close();\n  }\n\n","sourceOld":"  // LUCENE-1648\n  public void testCloneWithDeletes() throws Throwable {\n    final Directory dir1 = new MockRAMDirectory();\n    TestIndexReaderReopen.createIndex(dir1, false);\n    IndexReader origReader = IndexReader.open(dir1, false);\n    origReader.deleteDocument(1);\n\n    IndexReader clonedReader = (IndexReader) origReader.clone();\n    origReader.close();\n    clonedReader.close();\n\n    IndexReader r = IndexReader.open(dir1, false);\n    assertTrue(r.isDeleted(1));\n    r.close();\n    dir1.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e7bd246bb7bc35ac22edfee9157e034dfc4e65eb","date":1309960478,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReaderClone#testCloneWithDeletes().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReaderClone#testCloneWithDeletes().mjava","sourceNew":"  // LUCENE-1648\n  public void testCloneWithDeletes() throws Throwable {\n    final Directory dir1 = newDirectory();\n    TestIndexReaderReopen.createIndex(random, dir1, false);\n    IndexReader origReader = IndexReader.open(dir1, false);\n    origReader.deleteDocument(1);\n\n    IndexReader clonedReader = (IndexReader) origReader.clone();\n    origReader.close();\n    clonedReader.close();\n\n    IndexReader r = IndexReader.open(dir1, false);\n    assertFalse(MultiFields.getLiveDocs(r).get(1));\n    r.close();\n    dir1.close();\n  }\n\n","sourceOld":"  // LUCENE-1648\n  public void testCloneWithDeletes() throws Throwable {\n    final Directory dir1 = newDirectory();\n    TestIndexReaderReopen.createIndex(random, dir1, false);\n    IndexReader origReader = IndexReader.open(dir1, false);\n    origReader.deleteDocument(1);\n\n    IndexReader clonedReader = (IndexReader) origReader.clone();\n    origReader.close();\n    clonedReader.close();\n\n    IndexReader r = IndexReader.open(dir1, false);\n    assertTrue(MultiFields.getDeletedDocs(r).get(1));\n    r.close();\n    dir1.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"817d8435e9135b756f08ce6710ab0baac51bdf88","date":1309986993,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReaderClone#testCloneWithDeletes().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReaderClone#testCloneWithDeletes().mjava","sourceNew":"  // LUCENE-1648\n  public void testCloneWithDeletes() throws Throwable {\n    final Directory dir1 = newDirectory();\n    TestIndexReaderReopen.createIndex(random, dir1, false);\n    IndexReader origReader = IndexReader.open(dir1, false);\n    origReader.deleteDocument(1);\n\n    IndexReader clonedReader = (IndexReader) origReader.clone();\n    origReader.close();\n    clonedReader.close();\n\n    IndexReader r = IndexReader.open(dir1, false);\n    assertFalse(MultiFields.getLiveDocs(r).get(1));\n    r.close();\n    dir1.close();\n  }\n\n","sourceOld":"  // LUCENE-1648\n  public void testCloneWithDeletes() throws Throwable {\n    final Directory dir1 = newDirectory();\n    TestIndexReaderReopen.createIndex(random, dir1, false);\n    IndexReader origReader = IndexReader.open(dir1, false);\n    origReader.deleteDocument(1);\n\n    IndexReader clonedReader = (IndexReader) origReader.clone();\n    origReader.close();\n    clonedReader.close();\n\n    IndexReader r = IndexReader.open(dir1, false);\n    assertTrue(MultiFields.getDeletedDocs(r).get(1));\n    r.close();\n    dir1.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d083e83f225b11e5fdd900e83d26ddb385b6955c","date":1310029438,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReaderClone#testCloneWithDeletes().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReaderClone#testCloneWithDeletes().mjava","sourceNew":"  // LUCENE-1648\n  public void testCloneWithDeletes() throws Throwable {\n    final Directory dir1 = newDirectory();\n    TestIndexReaderReopen.createIndex(random, dir1, false);\n    IndexReader origReader = IndexReader.open(dir1, false);\n    origReader.deleteDocument(1);\n\n    IndexReader clonedReader = (IndexReader) origReader.clone();\n    origReader.close();\n    clonedReader.close();\n\n    IndexReader r = IndexReader.open(dir1, false);\n    assertFalse(MultiFields.getLiveDocs(r).get(1));\n    r.close();\n    dir1.close();\n  }\n\n","sourceOld":"  // LUCENE-1648\n  public void testCloneWithDeletes() throws Throwable {\n    final Directory dir1 = newDirectory();\n    TestIndexReaderReopen.createIndex(random, dir1, false);\n    IndexReader origReader = IndexReader.open(dir1, false);\n    origReader.deleteDocument(1);\n\n    IndexReader clonedReader = (IndexReader) origReader.clone();\n    origReader.close();\n    clonedReader.close();\n\n    IndexReader r = IndexReader.open(dir1, false);\n    assertTrue(MultiFields.getDeletedDocs(r).get(1));\n    r.close();\n    dir1.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"75ec8c9aaa10ac00b30fd4c2465409770c838f7b","date":1323020115,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReaderClone#testCloneWithDeletes().mjava","sourceNew":null,"sourceOld":"  // LUCENE-1648\n  public void testCloneWithDeletes() throws Throwable {\n    final Directory dir1 = newDirectory();\n    TestIndexReaderReopen.createIndex(random, dir1, false);\n    IndexReader origReader = IndexReader.open(dir1, false);\n    origReader.deleteDocument(1);\n\n    IndexReader clonedReader = (IndexReader) origReader.clone();\n    origReader.close();\n    clonedReader.close();\n\n    IndexReader r = IndexReader.open(dir1, false);\n    assertFalse(MultiFields.getLiveDocs(r).get(1));\n    r.close();\n    dir1.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3615ce4a1f785ae1b779244de52c6a7d99227e60","date":1323422019,"type":4,"author":"Uwe Schindler","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReaderClone#testCloneWithDeletes().mjava","sourceNew":null,"sourceOld":"  // LUCENE-1648\n  public void testCloneWithDeletes() throws Throwable {\n    final Directory dir1 = newDirectory();\n    TestIndexReaderReopen.createIndex(random, dir1, false);\n    IndexReader origReader = IndexReader.open(dir1, false);\n    origReader.deleteDocument(1);\n\n    IndexReader clonedReader = (IndexReader) origReader.clone();\n    origReader.close();\n    clonedReader.close();\n\n    IndexReader r = IndexReader.open(dir1, false);\n    assertFalse(MultiFields.getLiveDocs(r).get(1));\n    r.close();\n    dir1.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","date":1323437438,"type":4,"author":"Robert Muir","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReaderClone#testCloneWithDeletes().mjava","sourceNew":null,"sourceOld":"  // LUCENE-1648\n  public void testCloneWithDeletes() throws Throwable {\n    final Directory dir1 = newDirectory();\n    TestIndexReaderReopen.createIndex(random, dir1, false);\n    IndexReader origReader = IndexReader.open(dir1, false);\n    origReader.deleteDocument(1);\n\n    IndexReader clonedReader = (IndexReader) origReader.clone();\n    origReader.close();\n    clonedReader.close();\n\n    IndexReader r = IndexReader.open(dir1, false);\n    assertFalse(MultiFields.getLiveDocs(r).get(1));\n    r.close();\n    dir1.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"75ec8c9aaa10ac00b30fd4c2465409770c838f7b":["e7bd246bb7bc35ac22edfee9157e034dfc4e65eb"],"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c":["b21422ff1d1d56499dec481f193b402e5e8def5b"],"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00":["e7bd246bb7bc35ac22edfee9157e034dfc4e65eb","3615ce4a1f785ae1b779244de52c6a7d99227e60"],"e7bd246bb7bc35ac22edfee9157e034dfc4e65eb":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["9454a6510e2db155fb01faa5c049b06ece95fab9","1f653cfcf159baeaafe5d01682a911e95bba4012"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":["1f653cfcf159baeaafe5d01682a911e95bba4012","e7bd246bb7bc35ac22edfee9157e034dfc4e65eb"],"817d8435e9135b756f08ce6710ab0baac51bdf88":["1f653cfcf159baeaafe5d01682a911e95bba4012","e7bd246bb7bc35ac22edfee9157e034dfc4e65eb"],"1f653cfcf159baeaafe5d01682a911e95bba4012":["406e7055a3e99d3fa6ce49a555a51dd18b321806"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3615ce4a1f785ae1b779244de52c6a7d99227e60":["e7bd246bb7bc35ac22edfee9157e034dfc4e65eb","75ec8c9aaa10ac00b30fd4c2465409770c838f7b"],"406e7055a3e99d3fa6ce49a555a51dd18b321806":["ab9633cb67e3c0aec3c066147a23a957d6e7ad8c"],"b21422ff1d1d56499dec481f193b402e5e8def5b":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3615ce4a1f785ae1b779244de52c6a7d99227e60"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"75ec8c9aaa10ac00b30fd4c2465409770c838f7b":["3615ce4a1f785ae1b779244de52c6a7d99227e60"],"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c":["406e7055a3e99d3fa6ce49a555a51dd18b321806"],"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00":[],"e7bd246bb7bc35ac22edfee9157e034dfc4e65eb":["75ec8c9aaa10ac00b30fd4c2465409770c838f7b","ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88","3615ce4a1f785ae1b779244de52c6a7d99227e60"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"d083e83f225b11e5fdd900e83d26ddb385b6955c":[],"817d8435e9135b756f08ce6710ab0baac51bdf88":[],"1f653cfcf159baeaafe5d01682a911e95bba4012":["e7bd246bb7bc35ac22edfee9157e034dfc4e65eb","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"3615ce4a1f785ae1b779244de52c6a7d99227e60":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"406e7055a3e99d3fa6ce49a555a51dd18b321806":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"b21422ff1d1d56499dec481f193b402e5e8def5b":["ab9633cb67e3c0aec3c066147a23a957d6e7ad8c"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","b21422ff1d1d56499dec481f193b402e5e8def5b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}