{"path":"contrib/memory/src/java/org/apache/lucene/index/memory/SynonymTokenFilter#incrementToken().mjava","commits":[{"id":"9b5756469957918cac40a831acec9cf01c8c2bb3","date":1249167152,"type":1,"author":"Michael Busch","isMerge":false,"pathNew":"contrib/memory/src/java/org/apache/lucene/index/memory/SynonymTokenFilter#incrementToken().mjava","pathOld":"contrib/memory/src/java/org/apache/lucene/index/memory/SynonymTokenFilter#next(Token).mjava","sourceNew":"  /** Returns the next token in the stream, or null at EOS. */\n  public final boolean incrementToken() throws IOException {\n    while (todo > 0 && index < stack.length) { // pop from stack\n      if (createToken(stack[index++], current)) {\n        todo--;\n        return true;\n      }\n    }\n    \n    if (!input.incrementToken()) return false; // EOS; iterator exhausted \n    \n    stack = synonyms.getSynonyms(termAtt.term()); // push onto stack\n    if (stack.length > maxSynonyms) randomize(stack);\n    index = 0;\n    current = captureState();\n    todo = maxSynonyms;\n    return true;\n  }\n\n","sourceOld":"  /** Returns the next token in the stream, or null at EOS. */\n  public Token next(final Token reusableToken) throws IOException {\n    assert reusableToken != null;\n    while (todo > 0 && index < stack.length) { // pop from stack\n      Token nextToken = createToken(stack[index++], current, reusableToken);\n      if (nextToken != null) {\n        todo--;\n        return nextToken;\n      }\n    }\n    \n    Token nextToken = input.next(reusableToken);\n    if (nextToken == null) return null; // EOS; iterator exhausted\n    \n    stack = synonyms.getSynonyms(nextToken.term()); // push onto stack\n    if (stack.length > maxSynonyms) randomize(stack);\n    index = 0;\n    current = (Token) nextToken.clone();\n    todo = maxSynonyms;\n    return nextToken;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d68e5c46e6a5ebdf4dafec4a123344092b915cc0","date":1256752193,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"contrib/wordnet/src/java/org/apache/lucene/wordnet/SynonymTokenFilter#incrementToken().mjava","pathOld":"contrib/memory/src/java/org/apache/lucene/index/memory/SynonymTokenFilter#incrementToken().mjava","sourceNew":"  /** Returns the next token in the stream, or null at EOS. */\n  public final boolean incrementToken() throws IOException {\n    while (todo > 0 && index < stack.length) { // pop from stack\n      if (createToken(stack[index++], current)) {\n        todo--;\n        return true;\n      }\n    }\n    \n    if (!input.incrementToken()) return false; // EOS; iterator exhausted \n    \n    stack = synonyms.getSynonyms(termAtt.term()); // push onto stack\n    if (stack.length > maxSynonyms) randomize(stack);\n    index = 0;\n    current = captureState();\n    todo = maxSynonyms;\n    return true;\n  }\n\n","sourceOld":"  /** Returns the next token in the stream, or null at EOS. */\n  public final boolean incrementToken() throws IOException {\n    while (todo > 0 && index < stack.length) { // pop from stack\n      if (createToken(stack[index++], current)) {\n        todo--;\n        return true;\n      }\n    }\n    \n    if (!input.incrementToken()) return false; // EOS; iterator exhausted \n    \n    stack = synonyms.getSynonyms(termAtt.term()); // push onto stack\n    if (stack.length > maxSynonyms) randomize(stack);\n    index = 0;\n    current = captureState();\n    todo = maxSynonyms;\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9b5756469957918cac40a831acec9cf01c8c2bb3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d68e5c46e6a5ebdf4dafec4a123344092b915cc0"],"d68e5c46e6a5ebdf4dafec4a123344092b915cc0":["9b5756469957918cac40a831acec9cf01c8c2bb3"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9b5756469957918cac40a831acec9cf01c8c2bb3"],"9b5756469957918cac40a831acec9cf01c8c2bb3":["d68e5c46e6a5ebdf4dafec4a123344092b915cc0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"d68e5c46e6a5ebdf4dafec4a123344092b915cc0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}