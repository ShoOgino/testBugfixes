{"path":"lucene/backwards/src/test/org/apache/lucene/search/TestScoreCachingWrappingScorer#testGetScores().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/test/org/apache/lucene/search/TestScoreCachingWrappingScorer#testGetScores().mjava","pathOld":"backwards/src/test/org/apache/lucene/search/TestScoreCachingWrappingScorer#testGetScores().mjava","sourceNew":"  public void testGetScores() throws Exception {\n    \n    Scorer s = new SimpleScorer();\n    ScoreCachingCollector scc = new ScoreCachingCollector(scores.length);\n    scc.setScorer(s);\n    \n    // We need to iterate on the scorer so that its doc() advances.\n    int doc;\n    while ((doc = s.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n      scc.collect(doc);\n    }\n    \n    for (int i = 0; i < scores.length; i++) {\n      assertEquals(scores[i], scc.mscores[i], 0f);\n    }\n    \n  }\n\n","sourceOld":"  public void testGetScores() throws Exception {\n    \n    Scorer s = new SimpleScorer();\n    ScoreCachingCollector scc = new ScoreCachingCollector(scores.length);\n    scc.setScorer(s);\n    \n    // We need to iterate on the scorer so that its doc() advances.\n    int doc;\n    while ((doc = s.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n      scc.collect(doc);\n    }\n    \n    for (int i = 0; i < scores.length; i++) {\n      assertEquals(scores[i], scc.mscores[i], 0f);\n    }\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6","date":1272983566,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/backwards/src/test/org/apache/lucene/search/TestScoreCachingWrappingScorer#testGetScores().mjava","sourceNew":null,"sourceOld":"  public void testGetScores() throws Exception {\n    \n    Scorer s = new SimpleScorer();\n    ScoreCachingCollector scc = new ScoreCachingCollector(scores.length);\n    scc.setScorer(s);\n    \n    // We need to iterate on the scorer so that its doc() advances.\n    int doc;\n    while ((doc = s.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n      scc.collect(doc);\n    }\n    \n    for (int i = 0; i < scores.length; i++) {\n      assertEquals(scores[i], scc.mscores[i], 0f);\n    }\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}