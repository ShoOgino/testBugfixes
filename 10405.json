{"path":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testEmptyNorm().mjava","commits":[{"id":"00330c2dc6ff06b4972e9b6bb62d0dd1bc64a3ba","date":1412089824,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testEmptyNorm().mjava","pathOld":"/dev/null","sourceNew":"  public void testEmptyNorm() throws Exception {\n    Directory d = newDirectory();\n    IndexWriter w = new IndexWriter(d, newIndexWriterConfig(new MockAnalyzer(random())));\n    Document doc = new Document();\n    doc.add(new TextField(\"foo\", new CannedTokenStream()));\n    w.addDocument(doc);\n    w.commit();\n    w.close();\n    DirectoryReader r = DirectoryReader.open(d);\n    assertEquals(0, getOnlySegmentReader(r).getNormValues(\"foo\").get(0));\n    r.close();\n    d.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["0bdb67d0b49ddf963c3bfc4975fce171ad3aacb1"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d9a47902d6207303f5ed3e7aaca62ca33433af66","date":1412435312,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testEmptyNorm().mjava","pathOld":"/dev/null","sourceNew":"  public void testEmptyNorm() throws Exception {\n    Directory d = newDirectory();\n    IndexWriter w = new IndexWriter(d, newIndexWriterConfig(new MockAnalyzer(random())));\n    Document doc = new Document();\n    doc.add(new TextField(\"foo\", new CannedTokenStream()));\n    w.addDocument(doc);\n    w.commit();\n    w.close();\n    DirectoryReader r = DirectoryReader.open(d);\n    assertEquals(0, getOnlySegmentReader(r).getNormValues(\"foo\").get(0));\n    r.close();\n    d.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0bdb67d0b49ddf963c3bfc4975fce171ad3aacb1","date":1457644139,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testEmptyNorm().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testEmptyNorm().mjava","sourceNew":"  public void testEmptyNorm() throws Exception {\n    Directory d = newDirectory();\n    IndexWriter w = new IndexWriter(d, newIndexWriterConfig(new MockAnalyzer(random())));\n    Document doc = new Document();\n    doc.add(new TextField(\"foo\", new CannedTokenStream()));\n    w.addDocument(doc);\n    w.commit();\n    w.close();\n    DirectoryReader r = DirectoryReader.open(d);\n    assertEquals(0, getOnlyLeafReader(r).getNormValues(\"foo\").get(0));\n    r.close();\n    d.close();\n  }\n\n","sourceOld":"  public void testEmptyNorm() throws Exception {\n    Directory d = newDirectory();\n    IndexWriter w = new IndexWriter(d, newIndexWriterConfig(new MockAnalyzer(random())));\n    Document doc = new Document();\n    doc.add(new TextField(\"foo\", new CannedTokenStream()));\n    w.addDocument(doc);\n    w.commit();\n    w.close();\n    DirectoryReader r = DirectoryReader.open(d);\n    assertEquals(0, getOnlySegmentReader(r).getNormValues(\"foo\").get(0));\n    r.close();\n    d.close();\n  }\n\n","bugFix":["00330c2dc6ff06b4972e9b6bb62d0dd1bc64a3ba"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6652c74b2358a0b13223817a6a793bf1c9d0749d","date":1474465301,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testEmptyNorm().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testEmptyNorm().mjava","sourceNew":"  public void testEmptyNorm() throws Exception {\n    Directory d = newDirectory();\n    IndexWriter w = new IndexWriter(d, newIndexWriterConfig(new MockAnalyzer(random())));\n    Document doc = new Document();\n    doc.add(new TextField(\"foo\", new CannedTokenStream()));\n    w.addDocument(doc);\n    w.commit();\n    w.close();\n    DirectoryReader r = DirectoryReader.open(d);\n    NumericDocValues norms = getOnlyLeafReader(r).getNormValues(\"foo\");\n    assertEquals(0, norms.nextDoc());\n    assertEquals(0, norms.longValue());\n    r.close();\n    d.close();\n  }\n\n","sourceOld":"  public void testEmptyNorm() throws Exception {\n    Directory d = newDirectory();\n    IndexWriter w = new IndexWriter(d, newIndexWriterConfig(new MockAnalyzer(random())));\n    Document doc = new Document();\n    doc.add(new TextField(\"foo\", new CannedTokenStream()));\n    w.addDocument(doc);\n    w.commit();\n    w.close();\n    DirectoryReader r = DirectoryReader.open(d);\n    assertEquals(0, getOnlyLeafReader(r).getNormValues(\"foo\").get(0));\n    r.close();\n    d.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17e5da53e4e5bd659e22add9bba1cfa222e7e30d","date":1475435902,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testEmptyNorm().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testEmptyNorm().mjava","sourceNew":"  public void testEmptyNorm() throws Exception {\n    Directory d = newDirectory();\n    IndexWriter w = new IndexWriter(d, newIndexWriterConfig(new MockAnalyzer(random())));\n    Document doc = new Document();\n    doc.add(new TextField(\"foo\", new CannedTokenStream()));\n    w.addDocument(doc);\n    w.commit();\n    w.close();\n    DirectoryReader r = DirectoryReader.open(d);\n    NumericDocValues norms = getOnlyLeafReader(r).getNormValues(\"foo\");\n    assertEquals(0, norms.nextDoc());\n    assertEquals(0, norms.longValue());\n    r.close();\n    d.close();\n  }\n\n","sourceOld":"  public void testEmptyNorm() throws Exception {\n    Directory d = newDirectory();\n    IndexWriter w = new IndexWriter(d, newIndexWriterConfig(new MockAnalyzer(random())));\n    Document doc = new Document();\n    doc.add(new TextField(\"foo\", new CannedTokenStream()));\n    w.addDocument(doc);\n    w.commit();\n    w.close();\n    DirectoryReader r = DirectoryReader.open(d);\n    assertEquals(0, getOnlyLeafReader(r).getNormValues(\"foo\").get(0));\n    r.close();\n    d.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testEmptyNorm().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testEmptyNorm().mjava","sourceNew":"  public void testEmptyNorm() throws Exception {\n    Directory d = newDirectory();\n    IndexWriter w = new IndexWriter(d, newIndexWriterConfig(new MockAnalyzer(random())));\n    Document doc = new Document();\n    doc.add(new TextField(\"foo\", new CannedTokenStream()));\n    w.addDocument(doc);\n    w.commit();\n    w.close();\n    DirectoryReader r = DirectoryReader.open(d);\n    NumericDocValues norms = getOnlyLeafReader(r).getNormValues(\"foo\");\n    assertEquals(0, norms.nextDoc());\n    assertEquals(0, norms.longValue());\n    r.close();\n    d.close();\n  }\n\n","sourceOld":"  public void testEmptyNorm() throws Exception {\n    Directory d = newDirectory();\n    IndexWriter w = new IndexWriter(d, newIndexWriterConfig(new MockAnalyzer(random())));\n    Document doc = new Document();\n    doc.add(new TextField(\"foo\", new CannedTokenStream()));\n    w.addDocument(doc);\n    w.commit();\n    w.close();\n    DirectoryReader r = DirectoryReader.open(d);\n    assertEquals(0, getOnlyLeafReader(r).getNormValues(\"foo\").get(0));\n    r.close();\n    d.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0bdb67d0b49ddf963c3bfc4975fce171ad3aacb1":["00330c2dc6ff06b4972e9b6bb62d0dd1bc64a3ba"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["0bdb67d0b49ddf963c3bfc4975fce171ad3aacb1","6652c74b2358a0b13223817a6a793bf1c9d0749d"],"6652c74b2358a0b13223817a6a793bf1c9d0749d":["0bdb67d0b49ddf963c3bfc4975fce171ad3aacb1"],"d9a47902d6207303f5ed3e7aaca62ca33433af66":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","00330c2dc6ff06b4972e9b6bb62d0dd1bc64a3ba"],"00330c2dc6ff06b4972e9b6bb62d0dd1bc64a3ba":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["0bdb67d0b49ddf963c3bfc4975fce171ad3aacb1","17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"]},"commit2Childs":{"0bdb67d0b49ddf963c3bfc4975fce171ad3aacb1":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d","6652c74b2358a0b13223817a6a793bf1c9d0749d","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d9a47902d6207303f5ed3e7aaca62ca33433af66","00330c2dc6ff06b4972e9b6bb62d0dd1bc64a3ba"],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"6652c74b2358a0b13223817a6a793bf1c9d0749d":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"d9a47902d6207303f5ed3e7aaca62ca33433af66":[],"00330c2dc6ff06b4972e9b6bb62d0dd1bc64a3ba":["0bdb67d0b49ddf963c3bfc4975fce171ad3aacb1","d9a47902d6207303f5ed3e7aaca62ca33433af66"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d9a47902d6207303f5ed3e7aaca62ca33433af66","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}