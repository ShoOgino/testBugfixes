{"path":"contrib/queryparser/src/test/org/apache/lucene/queryParser/standard/TestQPHelper#testMultiPhraseQuery().mjava","commits":[{"id":"eb94fea58d0ae0c50600a3e0bfa85db754a3e01e","date":1249929999,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/queryparser/src/test/org/apache/lucene/queryParser/standard/TestQPHelper#testMultiPhraseQuery().mjava","pathOld":"/dev/null","sourceNew":"  public void testMultiPhraseQuery() throws Exception {\n    MockRAMDirectory dir = new MockRAMDirectory();\n    IndexWriter w = new IndexWriter(dir, new CannedAnalyzer(), IndexWriter.MaxFieldLength.UNLIMITED);\n    Document doc = new Document();\n    doc.add(new Field(\"field\", \"\", Field.Store.NO, Field.Index.ANALYZED));\n    w.addDocument(doc);\n    IndexReader r = w.getReader();\n    IndexSearcher s = new IndexSearcher(r);\n    \n    Query q = new StandardQueryParser(new CannedAnalyzer()).parse(\"\\\"a\\\"\", \"field\");\n    assertTrue(q instanceof MultiPhraseQuery);\n    assertEquals(1, s.search(q, 10).totalHits);\n    r.close();\n    w.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1cedb00d2dd44640194401179358a2e3ba6051bf","date":1268243626,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/queryparser/src/test/org/apache/lucene/queryParser/standard/TestQPHelper#testMultiPhraseQuery().mjava","pathOld":"contrib/queryparser/src/test/org/apache/lucene/queryParser/standard/TestQPHelper#testMultiPhraseQuery().mjava","sourceNew":"  public void testMultiPhraseQuery() throws Exception {\n    MockRAMDirectory dir = new MockRAMDirectory();\n    IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT).setAnalyzer(new CannedAnalyzer()));\n    Document doc = new Document();\n    doc.add(new Field(\"field\", \"\", Field.Store.NO, Field.Index.ANALYZED));\n    w.addDocument(doc);\n    IndexReader r = w.getReader();\n    IndexSearcher s = new IndexSearcher(r);\n    \n    Query q = new StandardQueryParser(new CannedAnalyzer()).parse(\"\\\"a\\\"\", \"field\");\n    assertTrue(q instanceof MultiPhraseQuery);\n    assertEquals(1, s.search(q, 10).totalHits);\n    r.close();\n    w.close();\n  }\n\n","sourceOld":"  public void testMultiPhraseQuery() throws Exception {\n    MockRAMDirectory dir = new MockRAMDirectory();\n    IndexWriter w = new IndexWriter(dir, new CannedAnalyzer(), IndexWriter.MaxFieldLength.UNLIMITED);\n    Document doc = new Document();\n    doc.add(new Field(\"field\", \"\", Field.Store.NO, Field.Index.ANALYZED));\n    w.addDocument(doc);\n    IndexReader r = w.getReader();\n    IndexSearcher s = new IndexSearcher(r);\n    \n    Query q = new StandardQueryParser(new CannedAnalyzer()).parse(\"\\\"a\\\"\", \"field\");\n    assertTrue(q instanceof MultiPhraseQuery);\n    assertEquals(1, s.search(q, 10).totalHits);\n    r.close();\n    w.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e52fea2c4081a1e552b98506691990be59503168","date":1268250331,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/queryparser/src/test/org/apache/lucene/queryParser/standard/TestQPHelper#testMultiPhraseQuery().mjava","pathOld":"contrib/queryparser/src/test/org/apache/lucene/queryParser/standard/TestQPHelper#testMultiPhraseQuery().mjava","sourceNew":"  public void testMultiPhraseQuery() throws Exception {\n    MockRAMDirectory dir = new MockRAMDirectory();\n    IndexWriter w = new IndexWriter(dir, new CannedAnalyzer(), IndexWriter.MaxFieldLength.UNLIMITED);\n    Document doc = new Document();\n    doc.add(new Field(\"field\", \"\", Field.Store.NO, Field.Index.ANALYZED));\n    w.addDocument(doc);\n    IndexReader r = w.getReader();\n    IndexSearcher s = new IndexSearcher(r);\n    \n    Query q = new StandardQueryParser(new CannedAnalyzer()).parse(\"\\\"a\\\"\", \"field\");\n    assertTrue(q instanceof MultiPhraseQuery);\n    assertEquals(1, s.search(q, 10).totalHits);\n    r.close();\n    w.close();\n  }\n\n","sourceOld":"  public void testMultiPhraseQuery() throws Exception {\n    MockRAMDirectory dir = new MockRAMDirectory();\n    IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT).setAnalyzer(new CannedAnalyzer()));\n    Document doc = new Document();\n    doc.add(new Field(\"field\", \"\", Field.Store.NO, Field.Index.ANALYZED));\n    w.addDocument(doc);\n    IndexReader r = w.getReader();\n    IndexSearcher s = new IndexSearcher(r);\n    \n    Query q = new StandardQueryParser(new CannedAnalyzer()).parse(\"\\\"a\\\"\", \"field\");\n    assertTrue(q instanceof MultiPhraseQuery);\n    assertEquals(1, s.search(q, 10).totalHits);\n    r.close();\n    w.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8","date":1268494368,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/queryparser/src/test/org/apache/lucene/queryParser/standard/TestQPHelper#testMultiPhraseQuery().mjava","pathOld":"contrib/queryparser/src/test/org/apache/lucene/queryParser/standard/TestQPHelper#testMultiPhraseQuery().mjava","sourceNew":"  public void testMultiPhraseQuery() throws Exception {\n    MockRAMDirectory dir = new MockRAMDirectory();\n    IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new CannedAnalyzer()));\n    Document doc = new Document();\n    doc.add(new Field(\"field\", \"\", Field.Store.NO, Field.Index.ANALYZED));\n    w.addDocument(doc);\n    IndexReader r = w.getReader();\n    IndexSearcher s = new IndexSearcher(r);\n    \n    Query q = new StandardQueryParser(new CannedAnalyzer()).parse(\"\\\"a\\\"\", \"field\");\n    assertTrue(q instanceof MultiPhraseQuery);\n    assertEquals(1, s.search(q, 10).totalHits);\n    r.close();\n    w.close();\n  }\n\n","sourceOld":"  public void testMultiPhraseQuery() throws Exception {\n    MockRAMDirectory dir = new MockRAMDirectory();\n    IndexWriter w = new IndexWriter(dir, new CannedAnalyzer(), IndexWriter.MaxFieldLength.UNLIMITED);\n    Document doc = new Document();\n    doc.add(new Field(\"field\", \"\", Field.Store.NO, Field.Index.ANALYZED));\n    w.addDocument(doc);\n    IndexReader r = w.getReader();\n    IndexSearcher s = new IndexSearcher(r);\n    \n    Query q = new StandardQueryParser(new CannedAnalyzer()).parse(\"\\\"a\\\"\", \"field\");\n    assertTrue(q instanceof MultiPhraseQuery);\n    assertEquals(1, s.search(q, 10).totalHits);\n    r.close();\n    w.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/standard/TestQPHelper#testMultiPhraseQuery().mjava","pathOld":"contrib/queryparser/src/test/org/apache/lucene/queryParser/standard/TestQPHelper#testMultiPhraseQuery().mjava","sourceNew":"  public void testMultiPhraseQuery() throws Exception {\n    MockRAMDirectory dir = new MockRAMDirectory();\n    IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new CannedAnalyzer()));\n    Document doc = new Document();\n    doc.add(new Field(\"field\", \"\", Field.Store.NO, Field.Index.ANALYZED));\n    w.addDocument(doc);\n    IndexReader r = w.getReader();\n    IndexSearcher s = new IndexSearcher(r);\n    \n    Query q = new StandardQueryParser(new CannedAnalyzer()).parse(\"\\\"a\\\"\", \"field\");\n    assertTrue(q instanceof MultiPhraseQuery);\n    assertEquals(1, s.search(q, 10).totalHits);\n    r.close();\n    w.close();\n  }\n\n","sourceOld":"  public void testMultiPhraseQuery() throws Exception {\n    MockRAMDirectory dir = new MockRAMDirectory();\n    IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new CannedAnalyzer()));\n    Document doc = new Document();\n    doc.add(new Field(\"field\", \"\", Field.Store.NO, Field.Index.ANALYZED));\n    w.addDocument(doc);\n    IndexReader r = w.getReader();\n    IndexSearcher s = new IndexSearcher(r);\n    \n    Query q = new StandardQueryParser(new CannedAnalyzer()).parse(\"\\\"a\\\"\", \"field\");\n    assertTrue(q instanceof MultiPhraseQuery);\n    assertEquals(1, s.search(q, 10).totalHits);\n    r.close();\n    w.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8":["e52fea2c4081a1e552b98506691990be59503168"],"eb94fea58d0ae0c50600a3e0bfa85db754a3e01e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1cedb00d2dd44640194401179358a2e3ba6051bf":["eb94fea58d0ae0c50600a3e0bfa85db754a3e01e"],"e52fea2c4081a1e552b98506691990be59503168":["1cedb00d2dd44640194401179358a2e3ba6051bf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8"]},"commit2Childs":{"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"eb94fea58d0ae0c50600a3e0bfa85db754a3e01e":["1cedb00d2dd44640194401179358a2e3ba6051bf"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["eb94fea58d0ae0c50600a3e0bfa85db754a3e01e"],"1cedb00d2dd44640194401179358a2e3ba6051bf":["e52fea2c4081a1e552b98506691990be59503168"],"e52fea2c4081a1e552b98506691990be59503168":["84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}