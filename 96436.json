{"path":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermFirstPassGroupingCollector#copyDocGroupValue(BytesRef,BytesRef).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermFirstPassGroupingCollector#copyDocGroupValue(BytesRef,BytesRef).mjava","pathOld":"modules/grouping/src/java/org/apache/lucene/search/grouping/term/TermFirstPassGroupingCollector#copyDocGroupValue(BytesRef,BytesRef).mjava","sourceNew":"  @Override\n  protected BytesRef copyDocGroupValue(BytesRef groupValue, BytesRef reuse) {\n    if (groupValue == null) {\n      return null;\n    } else if (reuse != null) {\n      reuse.copyBytes(groupValue);\n      return reuse;\n    } else {\n      return BytesRef.deepCopyOf(groupValue);\n    }\n  }\n\n","sourceOld":"  @Override\n  protected BytesRef copyDocGroupValue(BytesRef groupValue, BytesRef reuse) {\n    if (groupValue == null) {\n      return null;\n    } else if (reuse != null) {\n      reuse.copyBytes(groupValue);\n      return reuse;\n    } else {\n      return BytesRef.deepCopyOf(groupValue);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50","date":1407854805,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermFirstPassGroupingCollector#copyDocGroupValue(BytesRef,BytesRef).mjava","pathOld":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermFirstPassGroupingCollector#copyDocGroupValue(BytesRef,BytesRef).mjava","sourceNew":"  @Override\n  protected BytesRef copyDocGroupValue(BytesRef groupValue, BytesRef reuse) {\n    if (groupValue == null) {\n      return null;\n    } else if (reuse != null) {\n      reuse.bytes = ArrayUtil.grow(reuse.bytes, groupValue.length);\n      reuse.offset = 0;\n      reuse.length = groupValue.length;\n      System.arraycopy(groupValue.bytes, groupValue.offset, reuse.bytes, 0, groupValue.length);\n      return reuse;\n    } else {\n      return BytesRef.deepCopyOf(groupValue);\n    }\n  }\n\n","sourceOld":"  @Override\n  protected BytesRef copyDocGroupValue(BytesRef groupValue, BytesRef reuse) {\n    if (groupValue == null) {\n      return null;\n    } else if (reuse != null) {\n      reuse.copyBytes(groupValue);\n      return reuse;\n    } else {\n      return BytesRef.deepCopyOf(groupValue);\n    }\n  }\n\n","bugFix":["e6e919043fa85ee891123768dd655a98edbbf63c"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7ae958a739da1866696f442384393ba2f13e33e5","date":1491819018,"type":4,"author":"Alan Woodward","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermFirstPassGroupingCollector#copyDocGroupValue(BytesRef,BytesRef).mjava","sourceNew":null,"sourceOld":"  @Override\n  protected BytesRef copyDocGroupValue(BytesRef groupValue, BytesRef reuse) {\n    if (groupValue == null) {\n      return null;\n    } else if (reuse != null) {\n      reuse.bytes = ArrayUtil.grow(reuse.bytes, groupValue.length);\n      reuse.offset = 0;\n      reuse.length = groupValue.length;\n      System.arraycopy(groupValue.bytes, groupValue.offset, reuse.bytes, 0, groupValue.length);\n      return reuse;\n    } else {\n      return BytesRef.deepCopyOf(groupValue);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54ca69905c5d9d1529286f06ab1d12c68f6c13cb","date":1492683554,"type":4,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermFirstPassGroupingCollector#copyDocGroupValue(BytesRef,BytesRef).mjava","sourceNew":null,"sourceOld":"  @Override\n  protected BytesRef copyDocGroupValue(BytesRef groupValue, BytesRef reuse) {\n    if (groupValue == null) {\n      return null;\n    } else if (reuse != null) {\n      reuse.bytes = ArrayUtil.grow(reuse.bytes, groupValue.length);\n      reuse.offset = 0;\n      reuse.length = groupValue.length;\n      System.arraycopy(groupValue.bytes, groupValue.offset, reuse.bytes, 0, groupValue.length);\n      return reuse;\n    } else {\n      return BytesRef.deepCopyOf(groupValue);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":["7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7ae958a739da1866696f442384393ba2f13e33e5"],"7ae958a739da1866696f442384393ba2f13e33e5":["7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50"]},"commit2Childs":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":[],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","7ae958a739da1866696f442384393ba2f13e33e5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"7ae958a739da1866696f442384393ba2f13e33e5":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}