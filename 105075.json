{"path":"lucene/monitor/src/java/org/apache/lucene/monitor/TermWeightor#termFreqWeightor(Map[String,Integer],double,double).mjava","commits":[{"id":"7c529b189e09de25455d82ebd7260748cf11ee14","date":1560415257,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/monitor/src/java/org/apache/lucene/monitor/TermWeightor#termFreqWeightor(Map[String,Integer],double,double).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * QueryTerms will be assigned a weight based on their term frequency\n   *\n   * More infrequent terms are weighted higher.  Terms are weighted according\n   * to the function {@code w = (n / freq) + k}.  Terms with no associated\n   * frequency receive a weight of value {@code 1}\n   *\n   * @param frequencies a map of terms to frequencies\n   * @param n           a scaling factor\n   * @param k           the minimum weight to scale to\n   */\n  static TermWeightor termFreqWeightor(Map<String, Integer> frequencies, double n, double k) {\n    return value -> {\n      Integer mapVal = frequencies.get(value.text());\n      if (mapVal != null)\n        return (n / mapVal) + k;\n      return 1;\n    };\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7c529b189e09de25455d82ebd7260748cf11ee14":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7c529b189e09de25455d82ebd7260748cf11ee14"]},"commit2Childs":{"7c529b189e09de25455d82ebd7260748cf11ee14":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7c529b189e09de25455d82ebd7260748cf11ee14"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}