{"path":"lucene/core/src/java/org/apache/lucene/index/SegmentMerger#SegmentMerger(List[AtomicReader],SegmentInfo,InfoStream,Directory,MergeState.CheckAbort,FieldInfos.FieldNumbers,IOContext).mjava","commits":[{"id":"a45bec74b98f6fc05f52770cfb425739e6563960","date":1375119292,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentMerger#SegmentMerger(List[AtomicReader],SegmentInfo,InfoStream,Directory,MergeState.CheckAbort,FieldInfos.FieldNumbers,IOContext).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentMerger#SegmentMerger(List[AtomicReader],SegmentInfo,InfoStream,Directory,int,MergeState.CheckAbort,FieldInfos.FieldNumbers,IOContext).mjava","sourceNew":"  // note, just like in codec apis Directory 'dir' is NOT the same as segmentInfo.dir!!\n  SegmentMerger(List<AtomicReader> readers, SegmentInfo segmentInfo, InfoStream infoStream, Directory dir,\n                MergeState.CheckAbort checkAbort, FieldInfos.FieldNumbers fieldNumbers, IOContext context) {\n    mergeState = new MergeState(readers, segmentInfo, infoStream, checkAbort);\n    directory = dir;\n    this.codec = segmentInfo.getCodec();\n    this.context = context;\n    this.fieldInfosBuilder = new FieldInfos.Builder(fieldNumbers);\n  }\n\n","sourceOld":"  // note, just like in codec apis Directory 'dir' is NOT the same as segmentInfo.dir!!\n  SegmentMerger(List<AtomicReader> readers, SegmentInfo segmentInfo, InfoStream infoStream, Directory dir, int termIndexInterval,\n                MergeState.CheckAbort checkAbort, FieldInfos.FieldNumbers fieldNumbers, IOContext context) {\n    mergeState = new MergeState(readers, segmentInfo, infoStream, checkAbort);\n    directory = dir;\n    this.termIndexInterval = termIndexInterval;\n    this.codec = segmentInfo.getCodec();\n    this.context = context;\n    this.fieldInfosBuilder = new FieldInfos.Builder(fieldNumbers);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","date":1376366778,"type":1,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentMerger#SegmentMerger(List[AtomicReader],SegmentInfo,InfoStream,Directory,MergeState.CheckAbort,FieldInfos.FieldNumbers,IOContext).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentMerger#SegmentMerger(List[AtomicReader],SegmentInfo,InfoStream,Directory,int,MergeState.CheckAbort,FieldInfos.FieldNumbers,IOContext).mjava","sourceNew":"  // note, just like in codec apis Directory 'dir' is NOT the same as segmentInfo.dir!!\n  SegmentMerger(List<AtomicReader> readers, SegmentInfo segmentInfo, InfoStream infoStream, Directory dir,\n                MergeState.CheckAbort checkAbort, FieldInfos.FieldNumbers fieldNumbers, IOContext context) {\n    mergeState = new MergeState(readers, segmentInfo, infoStream, checkAbort);\n    directory = dir;\n    this.codec = segmentInfo.getCodec();\n    this.context = context;\n    this.fieldInfosBuilder = new FieldInfos.Builder(fieldNumbers);\n  }\n\n","sourceOld":"  // note, just like in codec apis Directory 'dir' is NOT the same as segmentInfo.dir!!\n  SegmentMerger(List<AtomicReader> readers, SegmentInfo segmentInfo, InfoStream infoStream, Directory dir, int termIndexInterval,\n                MergeState.CheckAbort checkAbort, FieldInfos.FieldNumbers fieldNumbers, IOContext context) {\n    mergeState = new MergeState(readers, segmentInfo, infoStream, checkAbort);\n    directory = dir;\n    this.termIndexInterval = termIndexInterval;\n    this.codec = segmentInfo.getCodec();\n    this.context = context;\n    this.fieldInfosBuilder = new FieldInfos.Builder(fieldNumbers);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0859dec0aa7a485aa0081147f533c5987b4b47ac","date":1376498602,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentMerger#SegmentMerger(List[AtomicReader],SegmentInfo,InfoStream,Directory,MergeState.CheckAbort,FieldInfos.FieldNumbers,IOContext).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentMerger#SegmentMerger(List[AtomicReader],SegmentInfo,InfoStream,Directory,MergeState.CheckAbort,FieldInfos.FieldNumbers,IOContext).mjava","sourceNew":"  // note, just like in codec apis Directory 'dir' is NOT the same as segmentInfo.dir!!\n  SegmentMerger(List<AtomicReader> readers, SegmentInfo segmentInfo, InfoStream infoStream, Directory dir,\n                MergeState.CheckAbort checkAbort, FieldInfos.FieldNumbers fieldNumbers, IOContext context) throws IOException {\n    mergeState = new MergeState(readers, segmentInfo, infoStream, checkAbort);\n    directory = dir;\n    this.codec = segmentInfo.getCodec();\n    this.context = context;\n    this.fieldInfosBuilder = new FieldInfos.Builder(fieldNumbers);\n    mergeState.segmentInfo.setDocCount(setDocMaps());\n  }\n\n","sourceOld":"  // note, just like in codec apis Directory 'dir' is NOT the same as segmentInfo.dir!!\n  SegmentMerger(List<AtomicReader> readers, SegmentInfo segmentInfo, InfoStream infoStream, Directory dir,\n                MergeState.CheckAbort checkAbort, FieldInfos.FieldNumbers fieldNumbers, IOContext context) {\n    mergeState = new MergeState(readers, segmentInfo, infoStream, checkAbort);\n    directory = dir;\n    this.codec = segmentInfo.getCodec();\n    this.context = context;\n    this.fieldInfosBuilder = new FieldInfos.Builder(fieldNumbers);\n  }\n\n","bugFix":["ad252c98ff183bc59bd0617be14fa46f9696d6fc"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3dffec77fb8f7d0e9ca4869dddd6af94528b4576","date":1377875202,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentMerger#SegmentMerger(List[AtomicReader],SegmentInfo,InfoStream,Directory,MergeState.CheckAbort,FieldInfos.FieldNumbers,IOContext).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentMerger#SegmentMerger(List[AtomicReader],SegmentInfo,InfoStream,Directory,MergeState.CheckAbort,FieldInfos.FieldNumbers,IOContext).mjava","sourceNew":"  // note, just like in codec apis Directory 'dir' is NOT the same as segmentInfo.dir!!\n  SegmentMerger(List<AtomicReader> readers, SegmentInfo segmentInfo, InfoStream infoStream, Directory dir,\n                MergeState.CheckAbort checkAbort, FieldInfos.FieldNumbers fieldNumbers, IOContext context) throws IOException {\n    mergeState = new MergeState(readers, segmentInfo, infoStream, checkAbort);\n    directory = dir;\n    this.codec = segmentInfo.getCodec();\n    this.context = context;\n    this.fieldInfosBuilder = new FieldInfos.Builder(fieldNumbers);\n    mergeState.segmentInfo.setDocCount(setDocMaps());\n  }\n\n","sourceOld":"  // note, just like in codec apis Directory 'dir' is NOT the same as segmentInfo.dir!!\n  SegmentMerger(List<AtomicReader> readers, SegmentInfo segmentInfo, InfoStream infoStream, Directory dir,\n                MergeState.CheckAbort checkAbort, FieldInfos.FieldNumbers fieldNumbers, IOContext context) {\n    mergeState = new MergeState(readers, segmentInfo, infoStream, checkAbort);\n    directory = dir;\n    this.codec = segmentInfo.getCodec();\n    this.context = context;\n    this.fieldInfosBuilder = new FieldInfos.Builder(fieldNumbers);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1f3b037cd083286b2af89f96e768f85dcd8072d6","date":1396337805,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentMerger#SegmentMerger(List[AtomicReader],SegmentInfo,InfoStream,Directory,MergeState.CheckAbort,FieldInfos.FieldNumbers,IOContext,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentMerger#SegmentMerger(List[AtomicReader],SegmentInfo,InfoStream,Directory,MergeState.CheckAbort,FieldInfos.FieldNumbers,IOContext).mjava","sourceNew":"  // note, just like in codec apis Directory 'dir' is NOT the same as segmentInfo.dir!!\n  SegmentMerger(List<AtomicReader> readers, SegmentInfo segmentInfo, InfoStream infoStream, Directory dir,\n                MergeState.CheckAbort checkAbort, FieldInfos.FieldNumbers fieldNumbers, IOContext context, boolean validate) throws IOException {\n    // validate incoming readers\n    if (validate) {\n      for (AtomicReader reader : readers) {\n        reader.checkIntegrity();\n      }\n    }\n    mergeState = new MergeState(readers, segmentInfo, infoStream, checkAbort);\n    directory = dir;\n    this.codec = segmentInfo.getCodec();\n    this.context = context;\n    this.fieldInfosBuilder = new FieldInfos.Builder(fieldNumbers);\n    mergeState.segmentInfo.setDocCount(setDocMaps());\n  }\n\n","sourceOld":"  // note, just like in codec apis Directory 'dir' is NOT the same as segmentInfo.dir!!\n  SegmentMerger(List<AtomicReader> readers, SegmentInfo segmentInfo, InfoStream infoStream, Directory dir,\n                MergeState.CheckAbort checkAbort, FieldInfos.FieldNumbers fieldNumbers, IOContext context) throws IOException {\n    mergeState = new MergeState(readers, segmentInfo, infoStream, checkAbort);\n    directory = dir;\n    this.codec = segmentInfo.getCodec();\n    this.context = context;\n    this.fieldInfosBuilder = new FieldInfos.Builder(fieldNumbers);\n    mergeState.segmentInfo.setDocCount(setDocMaps());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5eb2511ababf862ea11e10761c70ee560cd84510","date":1396607225,"type":5,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentMerger#SegmentMerger(List[AtomicReader],SegmentInfo,InfoStream,Directory,MergeState.CheckAbort,FieldInfos.FieldNumbers,IOContext,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentMerger#SegmentMerger(List[AtomicReader],SegmentInfo,InfoStream,Directory,MergeState.CheckAbort,FieldInfos.FieldNumbers,IOContext).mjava","sourceNew":"  // note, just like in codec apis Directory 'dir' is NOT the same as segmentInfo.dir!!\n  SegmentMerger(List<AtomicReader> readers, SegmentInfo segmentInfo, InfoStream infoStream, Directory dir,\n                MergeState.CheckAbort checkAbort, FieldInfos.FieldNumbers fieldNumbers, IOContext context, boolean validate) throws IOException {\n    // validate incoming readers\n    if (validate) {\n      for (AtomicReader reader : readers) {\n        reader.checkIntegrity();\n      }\n    }\n    mergeState = new MergeState(readers, segmentInfo, infoStream, checkAbort);\n    directory = dir;\n    this.codec = segmentInfo.getCodec();\n    this.context = context;\n    this.fieldInfosBuilder = new FieldInfos.Builder(fieldNumbers);\n    mergeState.segmentInfo.setDocCount(setDocMaps());\n  }\n\n","sourceOld":"  // note, just like in codec apis Directory 'dir' is NOT the same as segmentInfo.dir!!\n  SegmentMerger(List<AtomicReader> readers, SegmentInfo segmentInfo, InfoStream infoStream, Directory dir,\n                MergeState.CheckAbort checkAbort, FieldInfos.FieldNumbers fieldNumbers, IOContext context) throws IOException {\n    mergeState = new MergeState(readers, segmentInfo, infoStream, checkAbort);\n    directory = dir;\n    this.codec = segmentInfo.getCodec();\n    this.context = context;\n    this.fieldInfosBuilder = new FieldInfos.Builder(fieldNumbers);\n    mergeState.segmentInfo.setDocCount(setDocMaps());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5eb2511ababf862ea11e10761c70ee560cd84510":["0859dec0aa7a485aa0081147f533c5987b4b47ac","1f3b037cd083286b2af89f96e768f85dcd8072d6"],"1f3b037cd083286b2af89f96e768f85dcd8072d6":["0859dec0aa7a485aa0081147f533c5987b4b47ac"],"0859dec0aa7a485aa0081147f533c5987b4b47ac":["a45bec74b98f6fc05f52770cfb425739e6563960"],"a45bec74b98f6fc05f52770cfb425739e6563960":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","0859dec0aa7a485aa0081147f533c5987b4b47ac"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1f3b037cd083286b2af89f96e768f85dcd8072d6"]},"commit2Childs":{"5eb2511ababf862ea11e10761c70ee560cd84510":[],"1f3b037cd083286b2af89f96e768f85dcd8072d6":["5eb2511ababf862ea11e10761c70ee560cd84510","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"0859dec0aa7a485aa0081147f533c5987b4b47ac":["5eb2511ababf862ea11e10761c70ee560cd84510","1f3b037cd083286b2af89f96e768f85dcd8072d6","3dffec77fb8f7d0e9ca4869dddd6af94528b4576"],"a45bec74b98f6fc05f52770cfb425739e6563960":["0859dec0aa7a485aa0081147f533c5987b4b47ac"],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a45bec74b98f6fc05f52770cfb425739e6563960","8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5eb2511ababf862ea11e10761c70ee560cd84510","3dffec77fb8f7d0e9ca4869dddd6af94528b4576","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}