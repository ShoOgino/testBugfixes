{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/HttpClientUtil#setAllowCompression(DefaultHttpClient,boolean).mjava","commits":[{"id":"eb99886ff640d94edb43e0d36112a2b7023379ba","date":1338292884,"type":0,"author":"Sami Siren","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/HttpClientUtil#setAllowCompression(DefaultHttpClient,boolean).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Control HTTP payload compression.\n   * \n   * @param allowCompression\n   *          true will enable compression (needs support from server), false\n   *          will disable compression.\n   */\n  public static void setAllowCompression(DefaultHttpClient httpClient,\n      boolean allowCompression) {\n    httpClient\n        .removeRequestInterceptorByClass(UseCompressionRequestInterceptor.class);\n    httpClient\n        .removeResponseInterceptorByClass(UseCompressionResponseInterceptor.class);\n    if (allowCompression) {\n      httpClient.addRequestInterceptor(new UseCompressionRequestInterceptor());\n      httpClient\n          .addResponseInterceptor(new UseCompressionResponseInterceptor());\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"859081acf00749f5dd462772c571d611d4a4d2db","date":1459527719,"type":4,"author":"markrmiller","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/HttpClientUtil#setAllowCompression(DefaultHttpClient,boolean).mjava","sourceNew":null,"sourceOld":"  /**\n   * Control HTTP payload compression.\n   * \n   * @param allowCompression\n   *          true will enable compression (needs support from server), false\n   *          will disable compression.\n   */\n  public static void setAllowCompression(DefaultHttpClient httpClient,\n      boolean allowCompression) {\n    httpClient\n        .removeRequestInterceptorByClass(UseCompressionRequestInterceptor.class);\n    httpClient\n        .removeResponseInterceptorByClass(UseCompressionResponseInterceptor.class);\n    if (allowCompression) {\n      httpClient.addRequestInterceptor(new UseCompressionRequestInterceptor());\n      httpClient\n          .addResponseInterceptor(new UseCompressionResponseInterceptor());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"859081acf00749f5dd462772c571d611d4a4d2db":["eb99886ff640d94edb43e0d36112a2b7023379ba"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"eb99886ff640d94edb43e0d36112a2b7023379ba":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["859081acf00749f5dd462772c571d611d4a4d2db"]},"commit2Childs":{"859081acf00749f5dd462772c571d611d4a4d2db":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["eb99886ff640d94edb43e0d36112a2b7023379ba"],"eb99886ff640d94edb43e0d36112a2b7023379ba":["859081acf00749f5dd462772c571d611d4a4d2db"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}