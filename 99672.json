{"path":"lucene/src/java/org/apache/lucene/index/IndexReader#open(Directory,IndexCommit,int).mjava","commits":[{"id":"1c5b026d03cbbb03ca4c0b97d14e9839682281dc","date":1323049298,"type":1,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexReader#open(Directory,IndexCommit,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexReader#open(Directory,IndexDeletionPolicy,IndexCommit,boolean,int).mjava","sourceNew":"  private static IndexReader open(final Directory directory, final IndexCommit commit, int termInfosIndexDivisor) throws CorruptIndexException, IOException {\n    return DirectoryReader.open(directory, commit, termInfosIndexDivisor);\n  }\n\n","sourceOld":"  private static IndexReader open(final Directory directory, final IndexDeletionPolicy deletionPolicy, final IndexCommit commit, final boolean readOnly, int termInfosIndexDivisor) throws CorruptIndexException, IOException {\n    // nocommit: deletionPolicy is ignored -> remove it, same for readonly\n    return DirectoryReader.open(directory, commit, termInfosIndexDivisor);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cb4972c6aaf6c714c8f5957b5aeb14dcce34b75f","date":1323210518,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexReader#open(Directory,IndexCommit,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexReader#open(Directory,IndexCommit,int).mjava","sourceNew":"  /** Expert: returns an IndexReader reading the index in the given\n   *  {@link IndexCommit}.\n   * @param directory the index directory\n   * @param commit the commit point to open\n   * @param termInfosIndexDivisor Subsamples which indexed\n   *  terms are loaded into RAM. This has the same effect as {@link\n   *  IndexWriterConfig#setTermIndexInterval} except that setting\n   *  must be done at indexing time while this setting can be\n   *  set per reader.  When set to N, then one in every\n   *  N*termIndexInterval terms in the index is loaded into\n   *  memory.  By setting this to a value > 1 you can reduce\n   *  memory usage, at the expense of higher latency when\n   *  loading a TermInfo.  The default value is 1.  Set this\n   *  to -1 to skip loading the terms index entirely.\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   */\n  public static IndexReader open(final Directory directory, final IndexCommit commit, int termInfosIndexDivisor) throws CorruptIndexException, IOException {\n    return DirectoryReader.open(directory, commit, termInfosIndexDivisor);\n  }\n\n","sourceOld":"  private static IndexReader open(final Directory directory, final IndexCommit commit, int termInfosIndexDivisor) throws CorruptIndexException, IOException {\n    return DirectoryReader.open(directory, commit, termInfosIndexDivisor);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3615ce4a1f785ae1b779244de52c6a7d99227e60","date":1323422019,"type":1,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexReader#open(Directory,IndexCommit,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexReader#open(Directory,IndexDeletionPolicy,boolean,int).mjava","sourceNew":"  /** Expert: returns an IndexReader reading the index in the given\n   *  {@link IndexCommit}.\n   * @param directory the index directory\n   * @param commit the commit point to open\n   * @param termInfosIndexDivisor Subsamples which indexed\n   *  terms are loaded into RAM. This has the same effect as {@link\n   *  IndexWriterConfig#setTermIndexInterval} except that setting\n   *  must be done at indexing time while this setting can be\n   *  set per reader.  When set to N, then one in every\n   *  N*termIndexInterval terms in the index is loaded into\n   *  memory.  By setting this to a value > 1 you can reduce\n   *  memory usage, at the expense of higher latency when\n   *  loading a TermInfo.  The default value is 1.  Set this\n   *  to -1 to skip loading the terms index entirely.\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   */\n  public static IndexReader open(final Directory directory, final IndexCommit commit, int termInfosIndexDivisor) throws CorruptIndexException, IOException {\n    return DirectoryReader.open(directory, commit, termInfosIndexDivisor);\n  }\n\n","sourceOld":"  /** Expert: returns an IndexReader reading the index in\n   *  the given Directory, with a custom {@link\n   *  IndexDeletionPolicy}.  You should pass readOnly=true,\n   *  since it gives much better concurrent performance,\n   *  unless you intend to do write operations (delete\n   *  documents or change norms) with the reader.\n   * @param directory the index directory\n   * @param deletionPolicy a custom deletion policy (only used\n   *  if you use this reader to perform deletes or to set\n   *  norms); see {@link IndexWriter} for details.\n   * @param readOnly true if no changes (deletions, norms) will be made with this IndexReader\n   * @param termInfosIndexDivisor Subsamples which indexed\n   *  terms are loaded into RAM. This has the same effect as {@link\n   *  IndexWriterConfig#setTermIndexInterval} except that setting\n   *  must be done at indexing time while this setting can be\n   *  set per reader.  When set to N, then one in every\n   *  N*termIndexInterval terms in the index is loaded into\n   *  memory.  By setting this to a value > 1 you can reduce\n   *  memory usage, at the expense of higher latency when\n   *  loading a TermInfo.  The default value is 1.  Set this\n   *  to -1 to skip loading the terms index entirely.\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   */\n  public static IndexReader open(final Directory directory, IndexDeletionPolicy deletionPolicy, boolean readOnly, int termInfosIndexDivisor) throws CorruptIndexException, IOException {\n    return open(directory, deletionPolicy, null, readOnly, termInfosIndexDivisor);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"46a5d1e8f9b7ae49f68d7821e3f199e3df5921fa","date":1323422392,"type":5,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexReader#open(IndexCommit,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexReader#open(Directory,IndexCommit,int).mjava","sourceNew":"  /** Expert: returns an IndexReader reading the index in the given\n   *  {@link IndexCommit} and termInfosIndexDivisor.\n   * @param commit the commit point to open\n   * @param termInfosIndexDivisor Subsamples which indexed\n   *  terms are loaded into RAM. This has the same effect as {@link\n   *  IndexWriterConfig#setTermIndexInterval} except that setting\n   *  must be done at indexing time while this setting can be\n   *  set per reader.  When set to N, then one in every\n   *  N*termIndexInterval terms in the index is loaded into\n   *  memory.  By setting this to a value > 1 you can reduce\n   *  memory usage, at the expense of higher latency when\n   *  loading a TermInfo.  The default value is 1.  Set this\n   *  to -1 to skip loading the terms index entirely.\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   */\n  public static IndexReader open(final IndexCommit commit, int termInfosIndexDivisor) throws CorruptIndexException, IOException {\n    return DirectoryReader.open(commit.getDirectory(), commit, termInfosIndexDivisor);\n  }\n\n","sourceOld":"  /** Expert: returns an IndexReader reading the index in the given\n   *  {@link IndexCommit}.\n   * @param directory the index directory\n   * @param commit the commit point to open\n   * @param termInfosIndexDivisor Subsamples which indexed\n   *  terms are loaded into RAM. This has the same effect as {@link\n   *  IndexWriterConfig#setTermIndexInterval} except that setting\n   *  must be done at indexing time while this setting can be\n   *  set per reader.  When set to N, then one in every\n   *  N*termIndexInterval terms in the index is loaded into\n   *  memory.  By setting this to a value > 1 you can reduce\n   *  memory usage, at the expense of higher latency when\n   *  loading a TermInfo.  The default value is 1.  Set this\n   *  to -1 to skip loading the terms index entirely.\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   */\n  public static IndexReader open(final Directory directory, final IndexCommit commit, int termInfosIndexDivisor) throws CorruptIndexException, IOException {\n    return DirectoryReader.open(directory, commit, termInfosIndexDivisor);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"46a5d1e8f9b7ae49f68d7821e3f199e3df5921fa":["3615ce4a1f785ae1b779244de52c6a7d99227e60"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3615ce4a1f785ae1b779244de52c6a7d99227e60":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","cb4972c6aaf6c714c8f5957b5aeb14dcce34b75f"],"1c5b026d03cbbb03ca4c0b97d14e9839682281dc":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cb4972c6aaf6c714c8f5957b5aeb14dcce34b75f":["1c5b026d03cbbb03ca4c0b97d14e9839682281dc"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["46a5d1e8f9b7ae49f68d7821e3f199e3df5921fa"]},"commit2Childs":{"46a5d1e8f9b7ae49f68d7821e3f199e3df5921fa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3615ce4a1f785ae1b779244de52c6a7d99227e60","1c5b026d03cbbb03ca4c0b97d14e9839682281dc"],"3615ce4a1f785ae1b779244de52c6a7d99227e60":["46a5d1e8f9b7ae49f68d7821e3f199e3df5921fa"],"1c5b026d03cbbb03ca4c0b97d14e9839682281dc":["cb4972c6aaf6c714c8f5957b5aeb14dcce34b75f"],"cb4972c6aaf6c714c8f5957b5aeb14dcce34b75f":["3615ce4a1f785ae1b779244de52c6a7d99227e60"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}