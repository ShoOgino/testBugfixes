{"path":"lucene/core/src/java/org/apache/lucene/index/FieldInfos.FieldNumbers#verifyConsistentDimensions(Integer,String,int,int,int).mjava","commits":[{"id":"f6652c943595e92c187ee904c382863013eae28f","date":1539042663,"type":1,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/FieldInfos.FieldNumbers#verifyConsistentDimensions(Integer,String,int,int,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/FieldInfos.FieldNumbers#verifyConsistentDimensions(Integer,String,int,int).mjava","sourceNew":"    synchronized void verifyConsistentDimensions(Integer number, String name, int dataDimensionCount, int indexDimensionCount, int dimensionNumBytes) {\n      if (name.equals(numberToName.get(number)) == false) {\n        throw new IllegalArgumentException(\"field number \" + number + \" is already mapped to field name \\\"\" + numberToName.get(number) + \"\\\", not \\\"\" + name + \"\\\"\");\n      }\n      if (number.equals(nameToNumber.get(name)) == false) {\n        throw new IllegalArgumentException(\"field name \\\"\" + name + \"\\\" is already mapped to field number \\\"\" + nameToNumber.get(name) + \"\\\", not \\\"\" + number + \"\\\"\");\n      }\n      FieldDimensions dim = dimensions.get(name);\n      if (dim != null) {\n        if (dim.dataDimensionCount != dataDimensionCount) {\n          throw new IllegalArgumentException(\"cannot change point data dimension count from \" + dim.dataDimensionCount + \" to \" + dataDimensionCount + \" for field=\\\"\" + name + \"\\\"\");\n        }\n        if (dim.indexDimensionCount != indexDimensionCount) {\n          throw new IllegalArgumentException(\"cannot change point index dimension count from \" + dim.indexDimensionCount + \" to \" + indexDimensionCount + \" for field=\\\"\" + name + \"\\\"\");\n        }\n        if (dim.dimensionNumBytes != dimensionNumBytes) {\n          throw new IllegalArgumentException(\"cannot change point numBytes from \" + dim.dimensionNumBytes + \" to \" + dimensionNumBytes + \" for field=\\\"\" + name + \"\\\"\");\n        }\n      }\n    }\n\n","sourceOld":"    synchronized void verifyConsistentDimensions(Integer number, String name, int dimensionCount, int dimensionNumBytes) {\n      if (name.equals(numberToName.get(number)) == false) {\n        throw new IllegalArgumentException(\"field number \" + number + \" is already mapped to field name \\\"\" + numberToName.get(number) + \"\\\", not \\\"\" + name + \"\\\"\");\n      }\n      if (number.equals(nameToNumber.get(name)) == false) {\n        throw new IllegalArgumentException(\"field name \\\"\" + name + \"\\\" is already mapped to field number \\\"\" + nameToNumber.get(name) + \"\\\", not \\\"\" + number + \"\\\"\");\n      }\n      FieldDimensions dim = dimensions.get(name);\n      if (dim != null) {\n        if (dim.dimensionCount != dimensionCount) {\n          throw new IllegalArgumentException(\"cannot change point dimension count from \" + dim.dimensionCount + \" to \" + dimensionCount + \" for field=\\\"\" + name + \"\\\"\");\n        }\n        if (dim.dimensionNumBytes != dimensionNumBytes) {\n          throw new IllegalArgumentException(\"cannot change point numBytes from \" + dim.dimensionNumBytes + \" to \" + dimensionNumBytes + \" for field=\\\"\" + name + \"\\\"\");\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"59ed8c026ba85e3c42fb89605b2032dc6f9cc241","date":1581113294,"type":3,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/FieldInfos.FieldNumbers#verifyConsistentDimensions(Integer,String,int,int,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/FieldInfos.FieldNumbers#verifyConsistentDimensions(Integer,String,int,int,int).mjava","sourceNew":"    synchronized void verifyConsistentDimensions(Integer number, String name, int dataDimensionCount, int indexDimensionCount, int dimensionNumBytes) {\n      if (name.equals(numberToName.get(number)) == false) {\n        throw new IllegalArgumentException(\"field number \" + number + \" is already mapped to field name \\\"\" + numberToName.get(number) + \"\\\", not \\\"\" + name + \"\\\"\");\n      }\n      if (number.equals(nameToNumber.get(name)) == false) {\n        throw new IllegalArgumentException(\"field name \\\"\" + name + \"\\\" is already mapped to field number \\\"\" + nameToNumber.get(name) + \"\\\", not \\\"\" + number + \"\\\"\");\n      }\n      FieldDimensions dim = dimensions.get(name);\n      if (dim != null) {\n        if (dim.dimensionCount != dataDimensionCount) {\n          throw new IllegalArgumentException(\"cannot change point dimension count from \" + dim.dimensionCount + \" to \" + dataDimensionCount + \" for field=\\\"\" + name + \"\\\"\");\n        }\n        if (dim.indexDimensionCount != indexDimensionCount) {\n          throw new IllegalArgumentException(\"cannot change point index dimension count from \" + dim.indexDimensionCount + \" to \" + indexDimensionCount + \" for field=\\\"\" + name + \"\\\"\");\n        }\n        if (dim.dimensionNumBytes != dimensionNumBytes) {\n          throw new IllegalArgumentException(\"cannot change point numBytes from \" + dim.dimensionNumBytes + \" to \" + dimensionNumBytes + \" for field=\\\"\" + name + \"\\\"\");\n        }\n      }\n    }\n\n","sourceOld":"    synchronized void verifyConsistentDimensions(Integer number, String name, int dataDimensionCount, int indexDimensionCount, int dimensionNumBytes) {\n      if (name.equals(numberToName.get(number)) == false) {\n        throw new IllegalArgumentException(\"field number \" + number + \" is already mapped to field name \\\"\" + numberToName.get(number) + \"\\\", not \\\"\" + name + \"\\\"\");\n      }\n      if (number.equals(nameToNumber.get(name)) == false) {\n        throw new IllegalArgumentException(\"field name \\\"\" + name + \"\\\" is already mapped to field number \\\"\" + nameToNumber.get(name) + \"\\\", not \\\"\" + number + \"\\\"\");\n      }\n      FieldDimensions dim = dimensions.get(name);\n      if (dim != null) {\n        if (dim.dataDimensionCount != dataDimensionCount) {\n          throw new IllegalArgumentException(\"cannot change point data dimension count from \" + dim.dataDimensionCount + \" to \" + dataDimensionCount + \" for field=\\\"\" + name + \"\\\"\");\n        }\n        if (dim.indexDimensionCount != indexDimensionCount) {\n          throw new IllegalArgumentException(\"cannot change point index dimension count from \" + dim.indexDimensionCount + \" to \" + indexDimensionCount + \" for field=\\\"\" + name + \"\\\"\");\n        }\n        if (dim.dimensionNumBytes != dimensionNumBytes) {\n          throw new IllegalArgumentException(\"cannot change point numBytes from \" + dim.dimensionNumBytes + \" to \" + dimensionNumBytes + \" for field=\\\"\" + name + \"\\\"\");\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"59ed8c026ba85e3c42fb89605b2032dc6f9cc241":["f6652c943595e92c187ee904c382863013eae28f"],"f6652c943595e92c187ee904c382863013eae28f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["59ed8c026ba85e3c42fb89605b2032dc6f9cc241"]},"commit2Childs":{"59ed8c026ba85e3c42fb89605b2032dc6f9cc241":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f6652c943595e92c187ee904c382863013eae28f":["59ed8c026ba85e3c42fb89605b2032dc6f9cc241"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f6652c943595e92c187ee904c382863013eae28f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}