{"path":"lucene/core/src/java/org/apache/lucene/index/DocValues#setCache(SourceCache).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocValues#setCache(SourceCache).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocValues#setCache(SourceCache).mjava","sourceNew":"  /**\n   * Sets the {@link SourceCache} used by this {@link DocValues} instance. This\n   * method should be called before {@link #load()} is called. All {@link Source} instances in the currently used cache will be closed\n   * before the new cache is installed.\n   * <p>\n   * Note: All instances previously obtained from {@link #load()} will be lost.\n   * \n   * @throws IllegalArgumentException\n   *           if the given cache is <code>null</code>\n   * \n   */\n  public void setCache(SourceCache cache) {\n    if (cache == null)\n      throw new IllegalArgumentException(\"cache must not be null\");\n    synchronized (cacheLock) {\n      SourceCache toClose = this.cache;\n      this.cache = cache;\n      toClose.close(this);\n    }\n  }\n\n","sourceOld":"  /**\n   * Sets the {@link SourceCache} used by this {@link DocValues} instance. This\n   * method should be called before {@link #load()} is called. All {@link Source} instances in the currently used cache will be closed\n   * before the new cache is installed.\n   * <p>\n   * Note: All instances previously obtained from {@link #load()} will be lost.\n   * \n   * @throws IllegalArgumentException\n   *           if the given cache is <code>null</code>\n   * \n   */\n  public void setCache(SourceCache cache) {\n    if (cache == null)\n      throw new IllegalArgumentException(\"cache must not be null\");\n    synchronized (cacheLock) {\n      SourceCache toClose = this.cache;\n      this.cache = cache;\n      toClose.close(this);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d91f606c5d64e2c5fcf6065a8b96f9edd88851d7","date":1352213037,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocValues#setCache(SourceCache).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocValues#setCache(SourceCache).mjava","sourceNew":"  /**\n   * Sets the {@link SourceCache} used by this {@link DocValues} instance. This\n   * method should be called before {@link #loadSource()} is called. All {@link Source} instances in the currently used cache will be closed\n   * before the new cache is installed.\n   * <p>\n   * Note: All instances previously obtained from {@link #loadSource()} will be lost.\n   * \n   * @throws IllegalArgumentException\n   *           if the given cache is <code>null</code>\n   * \n   */\n  public void setCache(SourceCache cache) {\n    if (cache == null)\n      throw new IllegalArgumentException(\"cache must not be null\");\n    synchronized (cacheLock) {\n      SourceCache toClose = this.cache;\n      this.cache = cache;\n      toClose.close(this);\n    }\n  }\n\n","sourceOld":"  /**\n   * Sets the {@link SourceCache} used by this {@link DocValues} instance. This\n   * method should be called before {@link #load()} is called. All {@link Source} instances in the currently used cache will be closed\n   * before the new cache is installed.\n   * <p>\n   * Note: All instances previously obtained from {@link #load()} will be lost.\n   * \n   * @throws IllegalArgumentException\n   *           if the given cache is <code>null</code>\n   * \n   */\n  public void setCache(SourceCache cache) {\n    if (cache == null)\n      throw new IllegalArgumentException(\"cache must not be null\");\n    synchronized (cacheLock) {\n      SourceCache toClose = this.cache;\n      this.cache = cache;\n      toClose.close(this);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0837ab0472feecb3a54260729d845f839e1cbd72","date":1358283639,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocValues#setCache(SourceCache).mjava","sourceNew":null,"sourceOld":"  /**\n   * Sets the {@link SourceCache} used by this {@link DocValues} instance. This\n   * method should be called before {@link #loadSource()} is called. All {@link Source} instances in the currently used cache will be closed\n   * before the new cache is installed.\n   * <p>\n   * Note: All instances previously obtained from {@link #loadSource()} will be lost.\n   * \n   * @throws IllegalArgumentException\n   *           if the given cache is <code>null</code>\n   * \n   */\n  public void setCache(SourceCache cache) {\n    if (cache == null)\n      throw new IllegalArgumentException(\"cache must not be null\");\n    synchronized (cacheLock) {\n      SourceCache toClose = this.cache;\n      this.cache = cache;\n      toClose.close(this);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d4d69c535930b5cce125cff868d40f6373dc27d4","date":1360270101,"type":4,"author":"Robert Muir","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocValues#setCache(SourceCache).mjava","sourceNew":null,"sourceOld":"  /**\n   * Sets the {@link SourceCache} used by this {@link DocValues} instance. This\n   * method should be called before {@link #loadSource()} is called. All {@link Source} instances in the currently used cache will be closed\n   * before the new cache is installed.\n   * <p>\n   * Note: All instances previously obtained from {@link #loadSource()} will be lost.\n   * \n   * @throws IllegalArgumentException\n   *           if the given cache is <code>null</code>\n   * \n   */\n  public void setCache(SourceCache cache) {\n    if (cache == null)\n      throw new IllegalArgumentException(\"cache must not be null\");\n    synchronized (cacheLock) {\n      SourceCache toClose = this.cache;\n      this.cache = cache;\n      toClose.close(this);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d4d69c535930b5cce125cff868d40f6373dc27d4":["d91f606c5d64e2c5fcf6065a8b96f9edd88851d7","0837ab0472feecb3a54260729d845f839e1cbd72"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0837ab0472feecb3a54260729d845f839e1cbd72":["d91f606c5d64e2c5fcf6065a8b96f9edd88851d7"],"d91f606c5d64e2c5fcf6065a8b96f9edd88851d7":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d4d69c535930b5cce125cff868d40f6373dc27d4"]},"commit2Childs":{"d4d69c535930b5cce125cff868d40f6373dc27d4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["d91f606c5d64e2c5fcf6065a8b96f9edd88851d7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"0837ab0472feecb3a54260729d845f839e1cbd72":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"d91f606c5d64e2c5fcf6065a8b96f9edd88851d7":["d4d69c535930b5cce125cff868d40f6373dc27d4","0837ab0472feecb3a54260729d845f839e1cbd72"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}