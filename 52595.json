{"path":"solr/core/src/java/org/apache/solr/servlet/SolrDispatchFilter#loadConfigSolr(SolrResourceLoader).mjava","commits":[{"id":"7917a219001fa51c4289d6a8e1a98606995170b7","date":1376673362,"type":0,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/servlet/SolrDispatchFilter#loadConfigSolr(SolrResourceLoader).mjava","pathOld":"/dev/null","sourceNew":"  private ConfigSolr loadConfigSolr(SolrResourceLoader loader) {\n\n    String solrxmlLocation = System.getProperty(\"solr.solrxml.location\", \"solrhome\");\n\n    if (solrxmlLocation == null || \"solrhome\".equalsIgnoreCase(solrxmlLocation))\n      return ConfigSolr.fromSolrHome(loader, loader.getInstanceDir());\n\n    if (\"zookeeper\".equalsIgnoreCase(solrxmlLocation)) {\n      String zkHost = System.getProperty(\"zkHost\");\n      log.info(\"Trying to read solr.xml from \" + zkHost);\n      if (StringUtils.isEmpty(zkHost))\n        throw new SolrException(ErrorCode.SERVER_ERROR,\n            \"Could not load solr.xml from zookeeper: zkHost system property not set\");\n      SolrZkClient zkClient = new SolrZkClient(zkHost, 30000);\n      try {\n        if (!zkClient.exists(\"/solr.xml\", true))\n          throw new SolrException(ErrorCode.SERVER_ERROR, \"Could not load solr.xml from zookeeper: node not found\");\n        byte[] data = zkClient.getData(\"/solr.xml\", null, null, true);\n        return ConfigSolr.fromInputStream(loader, new ByteArrayInputStream(data));\n      } catch (Exception e) {\n        throw new SolrException(ErrorCode.SERVER_ERROR, \"Could not load solr.xml from zookeeper\", e);\n      } finally {\n        zkClient.close();\n      }\n    }\n\n    throw new SolrException(ErrorCode.SERVER_ERROR,\n        \"Bad solr.solrxml.location set: \" + solrxmlLocation + \" - should be 'solrhome' or 'zookeeper'\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"31d4861802ca404d78ca1d15f4550eec415b9199","date":1376947894,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/servlet/SolrDispatchFilter#loadConfigSolr(SolrResourceLoader).mjava","pathOld":"/dev/null","sourceNew":"  private ConfigSolr loadConfigSolr(SolrResourceLoader loader) {\n\n    String solrxmlLocation = System.getProperty(\"solr.solrxml.location\", \"solrhome\");\n\n    if (solrxmlLocation == null || \"solrhome\".equalsIgnoreCase(solrxmlLocation))\n      return ConfigSolr.fromSolrHome(loader, loader.getInstanceDir());\n\n    if (\"zookeeper\".equalsIgnoreCase(solrxmlLocation)) {\n      String zkHost = System.getProperty(\"zkHost\");\n      log.info(\"Trying to read solr.xml from \" + zkHost);\n      if (StringUtils.isEmpty(zkHost))\n        throw new SolrException(ErrorCode.SERVER_ERROR,\n            \"Could not load solr.xml from zookeeper: zkHost system property not set\");\n      SolrZkClient zkClient = new SolrZkClient(zkHost, 30000);\n      try {\n        if (!zkClient.exists(\"/solr.xml\", true))\n          throw new SolrException(ErrorCode.SERVER_ERROR, \"Could not load solr.xml from zookeeper: node not found\");\n        byte[] data = zkClient.getData(\"/solr.xml\", null, null, true);\n        return ConfigSolr.fromInputStream(loader, new ByteArrayInputStream(data));\n      } catch (Exception e) {\n        throw new SolrException(ErrorCode.SERVER_ERROR, \"Could not load solr.xml from zookeeper\", e);\n      } finally {\n        zkClient.close();\n      }\n    }\n\n    throw new SolrException(ErrorCode.SERVER_ERROR,\n        \"Bad solr.solrxml.location set: \" + solrxmlLocation + \" - should be 'solrhome' or 'zookeeper'\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3dffec77fb8f7d0e9ca4869dddd6af94528b4576","date":1377875202,"type":0,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/servlet/SolrDispatchFilter#loadConfigSolr(SolrResourceLoader).mjava","pathOld":"/dev/null","sourceNew":"  private ConfigSolr loadConfigSolr(SolrResourceLoader loader) {\n\n    String solrxmlLocation = System.getProperty(\"solr.solrxml.location\", \"solrhome\");\n\n    if (solrxmlLocation == null || \"solrhome\".equalsIgnoreCase(solrxmlLocation))\n      return ConfigSolr.fromSolrHome(loader, loader.getInstanceDir());\n\n    if (\"zookeeper\".equalsIgnoreCase(solrxmlLocation)) {\n      String zkHost = System.getProperty(\"zkHost\");\n      log.info(\"Trying to read solr.xml from \" + zkHost);\n      if (StringUtils.isEmpty(zkHost))\n        throw new SolrException(ErrorCode.SERVER_ERROR,\n            \"Could not load solr.xml from zookeeper: zkHost system property not set\");\n      SolrZkClient zkClient = new SolrZkClient(zkHost, 30000);\n      try {\n        if (!zkClient.exists(\"/solr.xml\", true))\n          throw new SolrException(ErrorCode.SERVER_ERROR, \"Could not load solr.xml from zookeeper: node not found\");\n        byte[] data = zkClient.getData(\"/solr.xml\", null, null, true);\n        return ConfigSolr.fromInputStream(loader, new ByteArrayInputStream(data));\n      } catch (Exception e) {\n        throw new SolrException(ErrorCode.SERVER_ERROR, \"Could not load solr.xml from zookeeper\", e);\n      } finally {\n        zkClient.close();\n      }\n    }\n\n    throw new SolrException(ErrorCode.SERVER_ERROR,\n        \"Bad solr.solrxml.location set: \" + solrxmlLocation + \" - should be 'solrhome' or 'zookeeper'\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e15199583d3635cb940942caed05132dd6c4c7c6","date":1424875551,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/servlet/SolrDispatchFilter#loadConfigSolr(SolrResourceLoader).mjava","pathOld":"solr/core/src/java/org/apache/solr/servlet/SolrDispatchFilter#loadConfigSolr(SolrResourceLoader).mjava","sourceNew":"  private NodeConfig loadConfigSolr(SolrResourceLoader loader) {\n\n    String solrxmlLocation = System.getProperty(\"solr.solrxml.location\", \"solrhome\");\n\n    if (solrxmlLocation == null || \"solrhome\".equalsIgnoreCase(solrxmlLocation))\n      return SolrXmlConfig.fromSolrHome(loader, loader.getInstanceDir());\n\n    if (\"zookeeper\".equalsIgnoreCase(solrxmlLocation)) {\n      String zkHost = System.getProperty(\"zkHost\");\n      log.info(\"Trying to read solr.xml from \" + zkHost);\n      if (StringUtils.isEmpty(zkHost))\n        throw new SolrException(ErrorCode.SERVER_ERROR,\n            \"Could not load solr.xml from zookeeper: zkHost system property not set\");\n      SolrZkClient zkClient = new SolrZkClient(zkHost, 30000);\n      try {\n        if (!zkClient.exists(\"/solr.xml\", true))\n          throw new SolrException(ErrorCode.SERVER_ERROR, \"Could not load solr.xml from zookeeper: node not found\");\n        byte[] data = zkClient.getData(\"/solr.xml\", null, null, true);\n        return SolrXmlConfig.fromInputStream(loader, new ByteArrayInputStream(data));\n      } catch (Exception e) {\n        throw new SolrException(ErrorCode.SERVER_ERROR, \"Could not load solr.xml from zookeeper\", e);\n      } finally {\n        zkClient.close();\n      }\n    }\n\n    throw new SolrException(ErrorCode.SERVER_ERROR,\n        \"Bad solr.solrxml.location set: \" + solrxmlLocation + \" - should be 'solrhome' or 'zookeeper'\");\n  }\n\n","sourceOld":"  private ConfigSolr loadConfigSolr(SolrResourceLoader loader) {\n\n    String solrxmlLocation = System.getProperty(\"solr.solrxml.location\", \"solrhome\");\n\n    if (solrxmlLocation == null || \"solrhome\".equalsIgnoreCase(solrxmlLocation))\n      return ConfigSolr.fromSolrHome(loader, loader.getInstanceDir());\n\n    if (\"zookeeper\".equalsIgnoreCase(solrxmlLocation)) {\n      String zkHost = System.getProperty(\"zkHost\");\n      log.info(\"Trying to read solr.xml from \" + zkHost);\n      if (StringUtils.isEmpty(zkHost))\n        throw new SolrException(ErrorCode.SERVER_ERROR,\n            \"Could not load solr.xml from zookeeper: zkHost system property not set\");\n      SolrZkClient zkClient = new SolrZkClient(zkHost, 30000);\n      try {\n        if (!zkClient.exists(\"/solr.xml\", true))\n          throw new SolrException(ErrorCode.SERVER_ERROR, \"Could not load solr.xml from zookeeper: node not found\");\n        byte[] data = zkClient.getData(\"/solr.xml\", null, null, true);\n        return ConfigSolr.fromInputStream(loader, new ByteArrayInputStream(data));\n      } catch (Exception e) {\n        throw new SolrException(ErrorCode.SERVER_ERROR, \"Could not load solr.xml from zookeeper\", e);\n      } finally {\n        zkClient.close();\n      }\n    }\n\n    throw new SolrException(ErrorCode.SERVER_ERROR,\n        \"Bad solr.solrxml.location set: \" + solrxmlLocation + \" - should be 'solrhome' or 'zookeeper'\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9bc766d645fa848f86c381c7f6acf2c881c99399","date":1425549246,"type":5,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/servlet/SolrDispatchFilter#loadNodeConfig(String,Properties).mjava","pathOld":"solr/core/src/java/org/apache/solr/servlet/SolrDispatchFilter#loadConfigSolr(SolrResourceLoader).mjava","sourceNew":"  private NodeConfig loadNodeConfig(String solrHome, Properties nodeProperties) {\n\n    SolrResourceLoader loader = new SolrResourceLoader(solrHome, null, nodeProperties);\n\n    String solrxmlLocation = System.getProperty(\"solr.solrxml.location\", \"solrhome\");\n\n    if (solrxmlLocation == null || \"solrhome\".equalsIgnoreCase(solrxmlLocation))\n      return SolrXmlConfig.fromSolrHome(loader, loader.getInstanceDir());\n\n    if (\"zookeeper\".equalsIgnoreCase(solrxmlLocation)) {\n      String zkHost = System.getProperty(\"zkHost\");\n      log.info(\"Trying to read solr.xml from \" + zkHost);\n      if (StringUtils.isEmpty(zkHost))\n        throw new SolrException(ErrorCode.SERVER_ERROR,\n            \"Could not load solr.xml from zookeeper: zkHost system property not set\");\n      try (SolrZkClient zkClient = new SolrZkClient(zkHost, 30000)) {\n        if (!zkClient.exists(\"/solr.xml\", true))\n          throw new SolrException(ErrorCode.SERVER_ERROR, \"Could not load solr.xml from zookeeper: node not found\");\n        byte[] data = zkClient.getData(\"/solr.xml\", null, null, true);\n        return SolrXmlConfig.fromInputStream(loader, new ByteArrayInputStream(data));\n      } catch (Exception e) {\n        throw new SolrException(ErrorCode.SERVER_ERROR, \"Could not load solr.xml from zookeeper\", e);\n      }\n    }\n\n    throw new SolrException(ErrorCode.SERVER_ERROR,\n        \"Bad solr.solrxml.location set: \" + solrxmlLocation + \" - should be 'solrhome' or 'zookeeper'\");\n  }\n\n","sourceOld":"  private NodeConfig loadConfigSolr(SolrResourceLoader loader) {\n\n    String solrxmlLocation = System.getProperty(\"solr.solrxml.location\", \"solrhome\");\n\n    if (solrxmlLocation == null || \"solrhome\".equalsIgnoreCase(solrxmlLocation))\n      return SolrXmlConfig.fromSolrHome(loader, loader.getInstanceDir());\n\n    if (\"zookeeper\".equalsIgnoreCase(solrxmlLocation)) {\n      String zkHost = System.getProperty(\"zkHost\");\n      log.info(\"Trying to read solr.xml from \" + zkHost);\n      if (StringUtils.isEmpty(zkHost))\n        throw new SolrException(ErrorCode.SERVER_ERROR,\n            \"Could not load solr.xml from zookeeper: zkHost system property not set\");\n      SolrZkClient zkClient = new SolrZkClient(zkHost, 30000);\n      try {\n        if (!zkClient.exists(\"/solr.xml\", true))\n          throw new SolrException(ErrorCode.SERVER_ERROR, \"Could not load solr.xml from zookeeper: node not found\");\n        byte[] data = zkClient.getData(\"/solr.xml\", null, null, true);\n        return SolrXmlConfig.fromInputStream(loader, new ByteArrayInputStream(data));\n      } catch (Exception e) {\n        throw new SolrException(ErrorCode.SERVER_ERROR, \"Could not load solr.xml from zookeeper\", e);\n      } finally {\n        zkClient.close();\n      }\n    }\n\n    throw new SolrException(ErrorCode.SERVER_ERROR,\n        \"Bad solr.solrxml.location set: \" + solrxmlLocation + \" - should be 'solrhome' or 'zookeeper'\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":4,"author":"Ryan Ernst","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/servlet/SolrDispatchFilter#loadConfigSolr(SolrResourceLoader).mjava","sourceNew":null,"sourceOld":"  private ConfigSolr loadConfigSolr(SolrResourceLoader loader) {\n\n    String solrxmlLocation = System.getProperty(\"solr.solrxml.location\", \"solrhome\");\n\n    if (solrxmlLocation == null || \"solrhome\".equalsIgnoreCase(solrxmlLocation))\n      return ConfigSolr.fromSolrHome(loader, loader.getInstanceDir());\n\n    if (\"zookeeper\".equalsIgnoreCase(solrxmlLocation)) {\n      String zkHost = System.getProperty(\"zkHost\");\n      log.info(\"Trying to read solr.xml from \" + zkHost);\n      if (StringUtils.isEmpty(zkHost))\n        throw new SolrException(ErrorCode.SERVER_ERROR,\n            \"Could not load solr.xml from zookeeper: zkHost system property not set\");\n      SolrZkClient zkClient = new SolrZkClient(zkHost, 30000);\n      try {\n        if (!zkClient.exists(\"/solr.xml\", true))\n          throw new SolrException(ErrorCode.SERVER_ERROR, \"Could not load solr.xml from zookeeper: node not found\");\n        byte[] data = zkClient.getData(\"/solr.xml\", null, null, true);\n        return ConfigSolr.fromInputStream(loader, new ByteArrayInputStream(data));\n      } catch (Exception e) {\n        throw new SolrException(ErrorCode.SERVER_ERROR, \"Could not load solr.xml from zookeeper\", e);\n      } finally {\n        zkClient.close();\n      }\n    }\n\n    throw new SolrException(ErrorCode.SERVER_ERROR,\n        \"Bad solr.solrxml.location set: \" + solrxmlLocation + \" - should be 'solrhome' or 'zookeeper'\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["7917a219001fa51c4289d6a8e1a98606995170b7","9bc766d645fa848f86c381c7f6acf2c881c99399"],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","7917a219001fa51c4289d6a8e1a98606995170b7"],"31d4861802ca404d78ca1d15f4550eec415b9199":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","7917a219001fa51c4289d6a8e1a98606995170b7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9bc766d645fa848f86c381c7f6acf2c881c99399":["e15199583d3635cb940942caed05132dd6c4c7c6"],"7917a219001fa51c4289d6a8e1a98606995170b7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9bc766d645fa848f86c381c7f6acf2c881c99399"],"e15199583d3635cb940942caed05132dd6c4c7c6":["7917a219001fa51c4289d6a8e1a98606995170b7"]},"commit2Childs":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":[],"31d4861802ca404d78ca1d15f4550eec415b9199":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","31d4861802ca404d78ca1d15f4550eec415b9199","7917a219001fa51c4289d6a8e1a98606995170b7"],"9bc766d645fa848f86c381c7f6acf2c881c99399":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"7917a219001fa51c4289d6a8e1a98606995170b7":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","3dffec77fb8f7d0e9ca4869dddd6af94528b4576","31d4861802ca404d78ca1d15f4550eec415b9199","e15199583d3635cb940942caed05132dd6c4c7c6"],"e15199583d3635cb940942caed05132dd6c4c7c6":["9bc766d645fa848f86c381c7f6acf2c881c99399"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","3dffec77fb8f7d0e9ca4869dddd6af94528b4576","31d4861802ca404d78ca1d15f4550eec415b9199","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}