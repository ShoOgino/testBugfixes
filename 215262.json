{"path":"lucene/core/src/java/org/apache/lucene/search/spans/SpanPositionCheckQuery#rewrite(IndexReader).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/spans/SpanPositionCheckQuery#rewrite(IndexReader).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/spans/SpanPositionCheckQuery#rewrite(IndexReader).mjava","sourceNew":"  @Override\n  public Query rewrite(IndexReader reader) throws IOException {\n    SpanPositionCheckQuery clone = null;\n\n    SpanQuery rewritten = (SpanQuery) match.rewrite(reader);\n    if (rewritten != match) {\n      clone = (SpanPositionCheckQuery) this.clone();\n      clone.match = rewritten;\n    }\n\n    if (clone != null) {\n      return clone;                        // some clauses rewrote\n    } else {\n      return this;                         // no clauses rewrote\n    }\n  }\n\n","sourceOld":"  @Override\n  public Query rewrite(IndexReader reader) throws IOException {\n    SpanPositionCheckQuery clone = null;\n\n    SpanQuery rewritten = (SpanQuery) match.rewrite(reader);\n    if (rewritten != match) {\n      clone = (SpanPositionCheckQuery) this.clone();\n      clone.match = rewritten;\n    }\n\n    if (clone != null) {\n      return clone;                        // some clauses rewrote\n    } else {\n      return this;                         // no clauses rewrote\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2dfdf766e55e943d942055d7de53c7ad6bc45283","date":1441632886,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/spans/SpanPositionCheckQuery#rewrite(IndexReader).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/spans/SpanPositionCheckQuery#rewrite(IndexReader).mjava","sourceNew":"  @Override\n  public Query rewrite(IndexReader reader) throws IOException {\n    SpanQuery rewritten = (SpanQuery) match.rewrite(reader);\n    if (rewritten != match) {\n      try {\n        SpanPositionCheckQuery clone = (SpanPositionCheckQuery) this.clone();\n        clone.match = rewritten;\n        return clone;\n      } catch (CloneNotSupportedException e) {\n        throw new AssertionError(e);\n      }\n    }\n\n    return super.rewrite(reader);\n  }\n\n","sourceOld":"  @Override\n  public Query rewrite(IndexReader reader) throws IOException {\n    SpanPositionCheckQuery clone = null;\n\n    SpanQuery rewritten = (SpanQuery) match.rewrite(reader);\n    if (rewritten != match) {\n      clone = (SpanPositionCheckQuery) this.clone();\n      clone.match = rewritten;\n    }\n\n    if (clone != null) {\n      return clone;                        // some clauses rewrote\n    } else {\n      return this;                         // no clauses rewrote\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2dfdf766e55e943d942055d7de53c7ad6bc45283":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2dfdf766e55e943d942055d7de53c7ad6bc45283"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["2dfdf766e55e943d942055d7de53c7ad6bc45283"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"2dfdf766e55e943d942055d7de53c7ad6bc45283":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}