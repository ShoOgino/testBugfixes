{"path":"solr/core/src/java/org/apache/solr/handler/component/FieldFacetStats#facet(int,Double).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/FieldFacetStats#facet(int,Double).mjava","pathOld":"solr/src/java/org/apache/solr/handler/component/FieldFacetStats#facet(int,Double).mjava","sourceNew":"  public boolean facet(int docID, Double v) {\n    int term = si.getOrd(docID);\n    int arrIdx = term - startTermIndex;\n    if (arrIdx >= 0 && arrIdx < nTerms) {\n      final BytesRef br = si.lookup(term, tempBR);\n      String key = ft.indexedToReadable(br == null ? null : br.utf8ToString());\n      StatsValues stats = facetStatsValues.get(key);\n      if (stats == null) {\n        stats = new StatsValues();\n        facetStatsValues.put(key, stats);\n      }\n\n      if (v != null) {\n        stats.accumulate(v);\n      } else {\n        stats.missing++;\n        return false;\n      }\n      return true;\n    }\n    return false;\n  }\n\n","sourceOld":"  public boolean facet(int docID, Double v) {\n    int term = si.getOrd(docID);\n    int arrIdx = term - startTermIndex;\n    if (arrIdx >= 0 && arrIdx < nTerms) {\n      final BytesRef br = si.lookup(term, tempBR);\n      String key = ft.indexedToReadable(br == null ? null : br.utf8ToString());\n      StatsValues stats = facetStatsValues.get(key);\n      if (stats == null) {\n        stats = new StatsValues();\n        facetStatsValues.put(key, stats);\n      }\n\n      if (v != null) {\n        stats.accumulate(v);\n      } else {\n        stats.missing++;\n        return false;\n      }\n      return true;\n    }\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/FieldFacetStats#facet(int,Double).mjava","pathOld":"solr/src/java/org/apache/solr/handler/component/FieldFacetStats#facet(int,Double).mjava","sourceNew":"  public boolean facet(int docID, Double v) {\n    int term = si.getOrd(docID);\n    int arrIdx = term - startTermIndex;\n    if (arrIdx >= 0 && arrIdx < nTerms) {\n      final BytesRef br = si.lookup(term, tempBR);\n      String key = ft.indexedToReadable(br == null ? null : br.utf8ToString());\n      StatsValues stats = facetStatsValues.get(key);\n      if (stats == null) {\n        stats = new StatsValues();\n        facetStatsValues.put(key, stats);\n      }\n\n      if (v != null) {\n        stats.accumulate(v);\n      } else {\n        stats.missing++;\n        return false;\n      }\n      return true;\n    }\n    return false;\n  }\n\n","sourceOld":"  public boolean facet(int docID, Double v) {\n    int term = si.getOrd(docID);\n    int arrIdx = term - startTermIndex;\n    if (arrIdx >= 0 && arrIdx < nTerms) {\n      final BytesRef br = si.lookup(term, tempBR);\n      String key = ft.indexedToReadable(br == null ? null : br.utf8ToString());\n      StatsValues stats = facetStatsValues.get(key);\n      if (stats == null) {\n        stats = new StatsValues();\n        facetStatsValues.put(key, stats);\n      }\n\n      if (v != null) {\n        stats.accumulate(v);\n      } else {\n        stats.missing++;\n        return false;\n      }\n      return true;\n    }\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/FieldFacetStats#facet(int,Double).mjava","pathOld":"solr/src/java/org/apache/solr/handler/component/FieldFacetStats#facet(int,Double).mjava","sourceNew":"  public boolean facet(int docID, Double v) {\n    int term = si.getOrd(docID);\n    int arrIdx = term - startTermIndex;\n    if (arrIdx >= 0 && arrIdx < nTerms) {\n      final BytesRef br = si.lookup(term, tempBR);\n      String key = ft.indexedToReadable(br == null ? null : br.utf8ToString());\n      StatsValues stats = facetStatsValues.get(key);\n      if (stats == null) {\n        stats = new StatsValues();\n        facetStatsValues.put(key, stats);\n      }\n\n      if (v != null) {\n        stats.accumulate(v);\n      } else {\n        stats.missing++;\n        return false;\n      }\n      return true;\n    }\n    return false;\n  }\n\n","sourceOld":"  public boolean facet(int docID, Double v) {\n    int term = si.getOrd(docID);\n    int arrIdx = term - startTermIndex;\n    if (arrIdx >= 0 && arrIdx < nTerms) {\n      final BytesRef br = si.lookup(term, tempBR);\n      String key = ft.indexedToReadable(br == null ? null : br.utf8ToString());\n      StatsValues stats = facetStatsValues.get(key);\n      if (stats == null) {\n        stats = new StatsValues();\n        facetStatsValues.put(key, stats);\n      }\n\n      if (v != null) {\n        stats.accumulate(v);\n      } else {\n        stats.missing++;\n        return false;\n      }\n      return true;\n    }\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"11982a7b6834a8571852448312db4624c32990b5","date":1321300684,"type":5,"author":"Ryan McKinley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/FieldFacetStats#facet(int,BytesRef).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/FieldFacetStats#facet(int,Double).mjava","sourceNew":"  public boolean facet(int docID, BytesRef v) {\n    int term = si.getOrd(docID);\n    int arrIdx = term - startTermIndex;\n    if (arrIdx >= 0 && arrIdx < nTerms) {\n      final BytesRef br = si.lookup(term, tempBR);\n      String key = (br == null)?null:facet_sf.getType().indexedToReadable(br.utf8ToString());\n      StatsValues stats = facetStatsValues.get(key);\n      if (stats == null) {\n        stats = StatsValuesFactory.createStatsValues(field_sf);\n        facetStatsValues.put(key, stats);\n      }\n\n      if (v != null && v.length>0) {\n        stats.accumulate(v);\n      } else {\n        stats.missing();\n        return false;\n      }\n      return true;\n    }\n    return false;\n  }\n\n","sourceOld":"  public boolean facet(int docID, Double v) {\n    int term = si.getOrd(docID);\n    int arrIdx = term - startTermIndex;\n    if (arrIdx >= 0 && arrIdx < nTerms) {\n      final BytesRef br = si.lookup(term, tempBR);\n      String key = ft.indexedToReadable(br == null ? null : br.utf8ToString());\n      StatsValues stats = facetStatsValues.get(key);\n      if (stats == null) {\n        stats = new StatsValues();\n        facetStatsValues.put(key, stats);\n      }\n\n      if (v != null) {\n        stats.accumulate(v);\n      } else {\n        stats.missing++;\n        return false;\n      }\n      return true;\n    }\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["11982a7b6834a8571852448312db4624c32990b5"],"11982a7b6834a8571852448312db4624c32990b5":["c26f00b574427b55127e869b935845554afde1fa"]},"commit2Childs":{"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["11982a7b6834a8571852448312db4624c32990b5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"11982a7b6834a8571852448312db4624c32990b5":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}