{"path":"lucene/sandbox/src/java/org/apache/lucene/search/intervals/DisjunctionIntervalsSource#matches(String,LeafReaderContext,int).mjava","commits":[{"id":"2375622520a4e480775e3104a2f9a423536755b4","date":1536005521,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/search/intervals/DisjunctionIntervalsSource#matches(String,LeafReaderContext,int).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public MatchesIterator matches(String field, LeafReaderContext ctx, int doc) throws IOException {\n    List<MatchesIterator> subMatches = new ArrayList<>();\n    for (IntervalsSource subSource : subSources) {\n      MatchesIterator mi = subSource.matches(field, ctx, doc);\n      if (mi != null) {\n        subMatches.add(mi);\n      }\n    }\n    return MatchesUtils.disjunction(subMatches);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"97ee2282ff806e9bc9d705f389cf40451ab81c3e","date":1561721333,"type":5,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/intervals/DisjunctionIntervalsSource#matches(String,LeafReaderContext,int).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/search/intervals/DisjunctionIntervalsSource#matches(String,LeafReaderContext,int).mjava","sourceNew":"  @Override\n  public MatchesIterator matches(String field, LeafReaderContext ctx, int doc) throws IOException {\n    List<MatchesIterator> subMatches = new ArrayList<>();\n    for (IntervalsSource subSource : subSources) {\n      MatchesIterator mi = subSource.matches(field, ctx, doc);\n      if (mi != null) {\n        subMatches.add(mi);\n      }\n    }\n    return MatchesUtils.disjunction(subMatches);\n  }\n\n","sourceOld":"  @Override\n  public MatchesIterator matches(String field, LeafReaderContext ctx, int doc) throws IOException {\n    List<MatchesIterator> subMatches = new ArrayList<>();\n    for (IntervalsSource subSource : subSources) {\n      MatchesIterator mi = subSource.matches(field, ctx, doc);\n      if (mi != null) {\n        subMatches.add(mi);\n      }\n    }\n    return MatchesUtils.disjunction(subMatches);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"97ee2282ff806e9bc9d705f389cf40451ab81c3e":["2375622520a4e480775e3104a2f9a423536755b4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2375622520a4e480775e3104a2f9a423536755b4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["97ee2282ff806e9bc9d705f389cf40451ab81c3e"]},"commit2Childs":{"97ee2282ff806e9bc9d705f389cf40451ab81c3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["2375622520a4e480775e3104a2f9a423536755b4"],"2375622520a4e480775e3104a2f9a423536755b4":["97ee2282ff806e9bc9d705f389cf40451ab81c3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}