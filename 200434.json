{"path":"lucene/join/src/java/org/apache/lucene/search/join/ToChildBlockJoinQuery#rewrite(IndexReader).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/ToChildBlockJoinQuery#rewrite(IndexReader).mjava","pathOld":"modules/join/src/java/org/apache/lucene/search/join/ToChildBlockJoinQuery#rewrite(IndexReader).mjava","sourceNew":"  @Override\n  public Query rewrite(IndexReader reader) throws IOException {\n    final Query parentRewrite = parentQuery.rewrite(reader);\n    if (parentRewrite != parentQuery) {\n      Query rewritten = new ToChildBlockJoinQuery(parentQuery,\n                                parentRewrite,\n                                parentsFilter,\n                                doScores);\n      rewritten.setBoost(getBoost());\n      return rewritten;\n    } else {\n      return this;\n    }\n  }\n\n","sourceOld":"  @Override\n  public Query rewrite(IndexReader reader) throws IOException {\n    final Query parentRewrite = parentQuery.rewrite(reader);\n    if (parentRewrite != parentQuery) {\n      Query rewritten = new ToChildBlockJoinQuery(parentQuery,\n                                parentRewrite,\n                                parentsFilter,\n                                doScores);\n      rewritten.setBoost(getBoost());\n      return rewritten;\n    } else {\n      return this;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fb17639909a369c1e64866842e5c213440acc17e","date":1423238093,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/ToChildBlockJoinQuery#rewrite(IndexReader).mjava","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/ToChildBlockJoinQuery#rewrite(IndexReader).mjava","sourceNew":"  @Override\n  public Query rewrite(IndexReader reader) throws IOException {\n    final Query parentRewrite = parentQuery.rewrite(reader);\n    if (parentRewrite != parentQuery) {\n      Query rewritten = new ToChildBlockJoinQuery(parentQuery,\n                                parentRewrite,\n                                parentsFilter);\n      rewritten.setBoost(getBoost());\n      return rewritten;\n    } else {\n      return this;\n    }\n  }\n\n","sourceOld":"  @Override\n  public Query rewrite(IndexReader reader) throws IOException {\n    final Query parentRewrite = parentQuery.rewrite(reader);\n    if (parentRewrite != parentQuery) {\n      Query rewritten = new ToChildBlockJoinQuery(parentQuery,\n                                parentRewrite,\n                                parentsFilter,\n                                doScores);\n      rewritten.setBoost(getBoost());\n      return rewritten;\n    } else {\n      return this;\n    }\n  }\n\n","bugFix":null,"bugIntro":["200b7947d6511b7efec84c7060730370ecb305d4"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"2dfdf766e55e943d942055d7de53c7ad6bc45283","date":1441632886,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/ToChildBlockJoinQuery#rewrite(IndexReader).mjava","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/ToChildBlockJoinQuery#rewrite(IndexReader).mjava","sourceNew":"  @Override\n  public Query rewrite(IndexReader reader) throws IOException {\n    final Query parentRewrite = parentQuery.rewrite(reader);\n    if (parentRewrite != parentQuery) {\n      return new ToChildBlockJoinQuery(parentQuery,\n                                parentRewrite,\n                                parentsFilter);\n    } else {\n      return super.rewrite(reader);\n    }\n  }\n\n","sourceOld":"  @Override\n  public Query rewrite(IndexReader reader) throws IOException {\n    final Query parentRewrite = parentQuery.rewrite(reader);\n    if (parentRewrite != parentQuery) {\n      Query rewritten = new ToChildBlockJoinQuery(parentQuery,\n                                parentRewrite,\n                                parentsFilter);\n      rewritten.setBoost(getBoost());\n      return rewritten;\n    } else {\n      return this;\n    }\n  }\n\n","bugFix":null,"bugIntro":["200b7947d6511b7efec84c7060730370ecb305d4"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"200b7947d6511b7efec84c7060730370ecb305d4","date":1487253427,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/ToChildBlockJoinQuery#rewrite(IndexReader).mjava","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/ToChildBlockJoinQuery#rewrite(IndexReader).mjava","sourceNew":"  @Override\n  public Query rewrite(IndexReader reader) throws IOException {\n    final Query parentRewrite = parentQuery.rewrite(reader);\n    if (parentRewrite != parentQuery) {\n      return new ToChildBlockJoinQuery(parentRewrite, parentsFilter);\n    } else {\n      return super.rewrite(reader);\n    }\n  }\n\n","sourceOld":"  @Override\n  public Query rewrite(IndexReader reader) throws IOException {\n    final Query parentRewrite = parentQuery.rewrite(reader);\n    if (parentRewrite != parentQuery) {\n      return new ToChildBlockJoinQuery(parentQuery,\n                                parentRewrite,\n                                parentsFilter);\n    } else {\n      return super.rewrite(reader);\n    }\n  }\n\n","bugFix":["6bd4a7478aca8c3880512b730b28bf3239340635","fb17639909a369c1e64866842e5c213440acc17e","2dfdf766e55e943d942055d7de53c7ad6bc45283"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"fb17639909a369c1e64866842e5c213440acc17e":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"200b7947d6511b7efec84c7060730370ecb305d4":["2dfdf766e55e943d942055d7de53c7ad6bc45283"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2dfdf766e55e943d942055d7de53c7ad6bc45283":["fb17639909a369c1e64866842e5c213440acc17e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["200b7947d6511b7efec84c7060730370ecb305d4"]},"commit2Childs":{"fb17639909a369c1e64866842e5c213440acc17e":["2dfdf766e55e943d942055d7de53c7ad6bc45283"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["fb17639909a369c1e64866842e5c213440acc17e"],"200b7947d6511b7efec84c7060730370ecb305d4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"2dfdf766e55e943d942055d7de53c7ad6bc45283":["200b7947d6511b7efec84c7060730370ecb305d4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}