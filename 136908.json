{"path":"lucene/src/java/org/apache/lucene/search/IndexSearcher#explain(Weight,int).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/IndexSearcher#explain(Weight,int).mjava","pathOld":"src/java/org/apache/lucene/search/IndexSearcher#explain(Weight,int).mjava","sourceNew":"  @Override\n  public Explanation explain(Weight weight, int doc) throws IOException {\n    int n = ReaderUtil.subIndex(doc, docStarts);\n    int deBasedDoc = doc - docStarts[n];\n    \n    return weight.explain(subReaders[n], deBasedDoc);\n  }\n\n","sourceOld":"  @Override\n  public Explanation explain(Weight weight, int doc) throws IOException {\n    int n = ReaderUtil.subIndex(doc, docStarts);\n    int deBasedDoc = doc - docStarts[n];\n    \n    return weight.explain(subReaders[n], deBasedDoc);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8b241ea5e635d896cc0af83cd96ffd0322e0aba7","date":1294226200,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/IndexSearcher#explain(Weight,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/IndexSearcher#explain(Weight,int).mjava","sourceNew":"  /** Expert: low-level implementation method\n   * Returns an Explanation that describes how <code>doc</code> scored against\n   * <code>weight</code>.\n   *\n   * <p>This is intended to be used in developing Similarity implementations,\n   * and, for good performance, should not be displayed with every hit.\n   * Computing an explanation is as expensive as executing the query over the\n   * entire index.\n   * <p>Applications should call {@link Searcher#explain(Query, int)}.\n   * @throws BooleanQuery.TooManyClauses\n   */\n  protected Explanation explain(Weight weight, int doc) throws IOException {\n    int n = ReaderUtil.subIndex(doc, docStarts);\n    int deBasedDoc = doc - docStarts[n];\n    \n    return weight.explain(subReaders[n], deBasedDoc);\n  }\n\n","sourceOld":"  @Override\n  public Explanation explain(Weight weight, int doc) throws IOException {\n    int n = ReaderUtil.subIndex(doc, docStarts);\n    int deBasedDoc = doc - docStarts[n];\n    \n    return weight.explain(subReaders[n], deBasedDoc);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8a1aa37d6135cf6c605c23e4ff9becf07f6049c7","date":1294253125,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/IndexSearcher#explain(Weight,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/IndexSearcher#explain(Weight,int).mjava","sourceNew":"  /** Expert: low-level implementation method\n   * Returns an Explanation that describes how <code>doc</code> scored against\n   * <code>weight</code>.\n   *\n   * <p>This is intended to be used in developing Similarity implementations,\n   * and, for good performance, should not be displayed with every hit.\n   * Computing an explanation is as expensive as executing the query over the\n   * entire index.\n   * <p>Applications should call {@link IndexSearcher#explain(Query, int)}.\n   * @throws BooleanQuery.TooManyClauses\n   */\n  protected Explanation explain(Weight weight, int doc) throws IOException {\n    int n = ReaderUtil.subIndex(doc, docStarts);\n    int deBasedDoc = doc - docStarts[n];\n    \n    return weight.explain(subReaders[n], deBasedDoc);\n  }\n\n","sourceOld":"  /** Expert: low-level implementation method\n   * Returns an Explanation that describes how <code>doc</code> scored against\n   * <code>weight</code>.\n   *\n   * <p>This is intended to be used in developing Similarity implementations,\n   * and, for good performance, should not be displayed with every hit.\n   * Computing an explanation is as expensive as executing the query over the\n   * entire index.\n   * <p>Applications should call {@link Searcher#explain(Query, int)}.\n   * @throws BooleanQuery.TooManyClauses\n   */\n  protected Explanation explain(Weight weight, int doc) throws IOException {\n    int n = ReaderUtil.subIndex(doc, docStarts);\n    int deBasedDoc = doc - docStarts[n];\n    \n    return weight.explain(subReaders[n], deBasedDoc);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"70ad682703b8585f5d0a637efec044d57ec05efb","date":1294259117,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/IndexSearcher#explain(Weight,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/IndexSearcher#explain(Weight,int).mjava","sourceNew":"  /** Expert: low-level implementation method\n   * Returns an Explanation that describes how <code>doc</code> scored against\n   * <code>weight</code>.\n   *\n   * <p>This is intended to be used in developing Similarity implementations,\n   * and, for good performance, should not be displayed with every hit.\n   * Computing an explanation is as expensive as executing the query over the\n   * entire index.\n   * <p>Applications should call {@link Searcher#explain(Query, int)}.\n   * @throws BooleanQuery.TooManyClauses\n   */\n  protected Explanation explain(Weight weight, int doc) throws IOException {\n    int n = ReaderUtil.subIndex(doc, docStarts);\n    int deBasedDoc = doc - docStarts[n];\n    \n    return weight.explain(subReaders[n], deBasedDoc);\n  }\n\n","sourceOld":"  @Override\n  public Explanation explain(Weight weight, int doc) throws IOException {\n    int n = ReaderUtil.subIndex(doc, docStarts);\n    int deBasedDoc = doc - docStarts[n];\n    \n    return weight.explain(subReaders[n], deBasedDoc);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2dadf0f3286a34a0fee6e788ffce88624bf2984e","date":1294260428,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/IndexSearcher#explain(Weight,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/IndexSearcher#explain(Weight,int).mjava","sourceNew":"  /** Expert: low-level implementation method\n   * Returns an Explanation that describes how <code>doc</code> scored against\n   * <code>weight</code>.\n   *\n   * <p>This is intended to be used in developing Similarity implementations,\n   * and, for good performance, should not be displayed with every hit.\n   * Computing an explanation is as expensive as executing the query over the\n   * entire index.\n   * <p>Applications should call {@link IndexSearcher#explain(Query, int)}.\n   * @throws BooleanQuery.TooManyClauses\n   */\n  protected Explanation explain(Weight weight, int doc) throws IOException {\n    int n = ReaderUtil.subIndex(doc, leafContexts);\n    int deBasedDoc = doc - leafContexts[n].docBase;\n    \n    return weight.explain(leafContexts[n], deBasedDoc);\n  }\n\n","sourceOld":"  /** Expert: low-level implementation method\n   * Returns an Explanation that describes how <code>doc</code> scored against\n   * <code>weight</code>.\n   *\n   * <p>This is intended to be used in developing Similarity implementations,\n   * and, for good performance, should not be displayed with every hit.\n   * Computing an explanation is as expensive as executing the query over the\n   * entire index.\n   * <p>Applications should call {@link IndexSearcher#explain(Query, int)}.\n   * @throws BooleanQuery.TooManyClauses\n   */\n  protected Explanation explain(Weight weight, int doc) throws IOException {\n    int n = ReaderUtil.subIndex(doc, docStarts);\n    int deBasedDoc = doc - docStarts[n];\n    \n    return weight.explain(subReaders[n], deBasedDoc);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"868da859b43505d9d2a023bfeae6dd0c795f5295","date":1294948401,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/IndexSearcher#explain(Weight,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/IndexSearcher#explain(Weight,int).mjava","sourceNew":"  /** Expert: low-level implementation method\n   * Returns an Explanation that describes how <code>doc</code> scored against\n   * <code>weight</code>.\n   *\n   * <p>This is intended to be used in developing Similarity implementations,\n   * and, for good performance, should not be displayed with every hit.\n   * Computing an explanation is as expensive as executing the query over the\n   * entire index.\n   * <p>Applications should call {@link IndexSearcher#explain(Query, int)}.\n   * @throws BooleanQuery.TooManyClauses\n   */\n  protected Explanation explain(Weight weight, int doc) throws IOException {\n    int n = ReaderUtil.subIndex(doc, leafContexts);\n    int deBasedDoc = doc - leafContexts[n].docBase;\n    \n    return weight.explain(leafContexts[n], deBasedDoc);\n  }\n\n","sourceOld":"  @Override\n  public Explanation explain(Weight weight, int doc) throws IOException {\n    int n = ReaderUtil.subIndex(doc, docStarts);\n    int deBasedDoc = doc - docStarts[n];\n    \n    return weight.explain(subReaders[n], deBasedDoc);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/IndexSearcher#explain(Weight,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/IndexSearcher#explain(Weight,int).mjava","sourceNew":"  /** Expert: low-level implementation method\n   * Returns an Explanation that describes how <code>doc</code> scored against\n   * <code>weight</code>.\n   *\n   * <p>This is intended to be used in developing Similarity implementations,\n   * and, for good performance, should not be displayed with every hit.\n   * Computing an explanation is as expensive as executing the query over the\n   * entire index.\n   * <p>Applications should call {@link IndexSearcher#explain(Query, int)}.\n   * @throws BooleanQuery.TooManyClauses\n   */\n  protected Explanation explain(Weight weight, int doc) throws IOException {\n    int n = ReaderUtil.subIndex(doc, leafContexts);\n    int deBasedDoc = doc - leafContexts[n].docBase;\n    \n    return weight.explain(leafContexts[n], deBasedDoc);\n  }\n\n","sourceOld":"  /** Expert: low-level implementation method\n   * Returns an Explanation that describes how <code>doc</code> scored against\n   * <code>weight</code>.\n   *\n   * <p>This is intended to be used in developing Similarity implementations,\n   * and, for good performance, should not be displayed with every hit.\n   * Computing an explanation is as expensive as executing the query over the\n   * entire index.\n   * <p>Applications should call {@link Searcher#explain(Query, int)}.\n   * @throws BooleanQuery.TooManyClauses\n   */\n  protected Explanation explain(Weight weight, int doc) throws IOException {\n    int n = ReaderUtil.subIndex(doc, docStarts);\n    int deBasedDoc = doc - docStarts[n];\n    \n    return weight.explain(subReaders[n], deBasedDoc);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/IndexSearcher#explain(Weight,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/IndexSearcher#explain(Weight,int).mjava","sourceNew":"  /** Expert: low-level implementation method\n   * Returns an Explanation that describes how <code>doc</code> scored against\n   * <code>weight</code>.\n   *\n   * <p>This is intended to be used in developing Similarity implementations,\n   * and, for good performance, should not be displayed with every hit.\n   * Computing an explanation is as expensive as executing the query over the\n   * entire index.\n   * <p>Applications should call {@link IndexSearcher#explain(Query, int)}.\n   * @throws BooleanQuery.TooManyClauses\n   */\n  protected Explanation explain(Weight weight, int doc) throws IOException {\n    int n = ReaderUtil.subIndex(doc, leafContexts);\n    int deBasedDoc = doc - leafContexts[n].docBase;\n    \n    return weight.explain(leafContexts[n], deBasedDoc);\n  }\n\n","sourceOld":"  /** Expert: low-level implementation method\n   * Returns an Explanation that describes how <code>doc</code> scored against\n   * <code>weight</code>.\n   *\n   * <p>This is intended to be used in developing Similarity implementations,\n   * and, for good performance, should not be displayed with every hit.\n   * Computing an explanation is as expensive as executing the query over the\n   * entire index.\n   * <p>Applications should call {@link IndexSearcher#explain(Query, int)}.\n   * @throws BooleanQuery.TooManyClauses\n   */\n  protected Explanation explain(Weight weight, int doc) throws IOException {\n    int n = ReaderUtil.subIndex(doc, leafContexts);\n    int deBasedDoc = doc - leafContexts[n].docBase;\n    \n    return weight.explain(leafContexts[n], deBasedDoc);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"70ad682703b8585f5d0a637efec044d57ec05efb":["9454a6510e2db155fb01faa5c049b06ece95fab9","8b241ea5e635d896cc0af83cd96ffd0322e0aba7"],"8b241ea5e635d896cc0af83cd96ffd0322e0aba7":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["2dadf0f3286a34a0fee6e788ffce88624bf2984e"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["70ad682703b8585f5d0a637efec044d57ec05efb","2dadf0f3286a34a0fee6e788ffce88624bf2984e"],"2dadf0f3286a34a0fee6e788ffce88624bf2984e":["8a1aa37d6135cf6c605c23e4ff9becf07f6049c7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8a1aa37d6135cf6c605c23e4ff9becf07f6049c7":["8b241ea5e635d896cc0af83cd96ffd0322e0aba7"],"868da859b43505d9d2a023bfeae6dd0c795f5295":["9454a6510e2db155fb01faa5c049b06ece95fab9","2dadf0f3286a34a0fee6e788ffce88624bf2984e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"70ad682703b8585f5d0a637efec044d57ec05efb":["29ef99d61cda9641b6250bf9567329a6e65f901d"],"8b241ea5e635d896cc0af83cd96ffd0322e0aba7":["70ad682703b8585f5d0a637efec044d57ec05efb","8a1aa37d6135cf6c605c23e4ff9becf07f6049c7"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"2dadf0f3286a34a0fee6e788ffce88624bf2984e":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","29ef99d61cda9641b6250bf9567329a6e65f901d","868da859b43505d9d2a023bfeae6dd0c795f5295"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"8a1aa37d6135cf6c605c23e4ff9becf07f6049c7":["2dadf0f3286a34a0fee6e788ffce88624bf2984e"],"868da859b43505d9d2a023bfeae6dd0c795f5295":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["70ad682703b8585f5d0a637efec044d57ec05efb","8b241ea5e635d896cc0af83cd96ffd0322e0aba7","868da859b43505d9d2a023bfeae6dd0c795f5295"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["29ef99d61cda9641b6250bf9567329a6e65f901d","868da859b43505d9d2a023bfeae6dd0c795f5295","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}