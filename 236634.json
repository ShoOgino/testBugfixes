{"path":"solr/solrj/src/java/org/apache/solr/common/util/Utf8CharSequence#write(int,byte[],int).mjava","commits":[{"id":"0b2ba7b58bce0f80c97a5eb2f11febac26681566","date":1542686312,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/Utf8CharSequence#write(int,byte[],int).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Write the bytes into a buffer. The objective is to avoid the local bytes being exposed to\n   * other classes if the implementation is expected to be immutable. It writes as many bytes as\n   * possible into the buffer and then return how many bytes were written. It's the responsibility\n   * of the caller to call this method repeatedly and ensure that everything is completely written\n   *\n   * @param start position from which to start writing\n   * @param buffer the buffer to which to write to\n   * @param pos    position to start writing\n   * @return no:of bytes written\n   */\n  int write(int start, byte[] buffer, int pos);\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7b5b9bd55a953275a0efc3c5272ed76129541fb","date":1546921668,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/Utf8CharSequence#write(int,byte[],int).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/Utf8CharSequence#write(int,byte[],int).mjava","sourceNew":"  /**\n   * Write the bytes into a buffer. The objective is to avoid the local bytes being exposed to\n   * other classes if the implementation is expected to be immutable. It writes as many bytes as\n   * possible into the buffer and then return how many bytes were written. It's the responsibility\n   * of the caller to call this method repeatedly and ensure that everything is completely written\n   *\n   * @param start  position from which to start writing\n   * @param buffer the buffer to which to write to\n   * @param pos    position to start writing\n   * @return no:of bytes written\n   */\n  int write(int start, byte[] buffer, int pos);\n\n","sourceOld":"  /**\n   * Write the bytes into a buffer. The objective is to avoid the local bytes being exposed to\n   * other classes if the implementation is expected to be immutable. It writes as many bytes as\n   * possible into the buffer and then return how many bytes were written. It's the responsibility\n   * of the caller to call this method repeatedly and ensure that everything is completely written\n   *\n   * @param start position from which to start writing\n   * @param buffer the buffer to which to write to\n   * @param pos    position to start writing\n   * @return no:of bytes written\n   */\n  int write(int start, byte[] buffer, int pos);\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b7b5b9bd55a953275a0efc3c5272ed76129541fb":["0b2ba7b58bce0f80c97a5eb2f11febac26681566"],"0b2ba7b58bce0f80c97a5eb2f11febac26681566":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b7b5b9bd55a953275a0efc3c5272ed76129541fb"]},"commit2Childs":{"b7b5b9bd55a953275a0efc3c5272ed76129541fb":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"0b2ba7b58bce0f80c97a5eb2f11febac26681566":["b7b5b9bd55a953275a0efc3c5272ed76129541fb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0b2ba7b58bce0f80c97a5eb2f11febac26681566"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}