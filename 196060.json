{"path":"lucene/core/src/test/org/apache/lucene/index/BinaryTokenStream#incrementToken().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/BinaryTokenStream#incrementToken().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/BinaryTokenStream#incrementToken().mjava","sourceNew":"  @Override\n  public boolean incrementToken() throws IOException {\n    if (available) {\n      available = false;\n      return true;\n    }\n    return false;\n  }\n\n","sourceOld":"  @Override\n  public boolean incrementToken() throws IOException {\n    if (available) {\n      available = false;\n      return true;\n    }\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4d3e8520fd031bab31fd0e4d480e55958bc45efe","date":1340901565,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/BinaryTokenStream#incrementToken().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/BinaryTokenStream#incrementToken().mjava","sourceNew":"  @Override\n  public boolean incrementToken() {\n    if (available) {\n      available = false;\n      return true;\n    }\n    return false;\n  }\n\n","sourceOld":"  @Override\n  public boolean incrementToken() throws IOException {\n    if (available) {\n      available = false;\n      return true;\n    }\n    return false;\n  }\n\n","bugFix":["e36340c25bc4d51dfec6b5669b58042e9180b596"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/BinaryTokenStream#incrementToken().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/BinaryTokenStream#incrementToken().mjava","sourceNew":"  @Override\n  public boolean incrementToken() {\n    if (available) {\n      available = false;\n      return true;\n    }\n    return false;\n  }\n\n","sourceOld":"  @Override\n  public boolean incrementToken() throws IOException {\n    if (available) {\n      available = false;\n      return true;\n    }\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f3f8a0f8bebc057ea4bdf65150b3fdc539db3d03","date":1377018786,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/BinaryTokenStream#incrementToken().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/BinaryTokenStream#incrementToken().mjava","sourceNew":"  @Override\n  public boolean incrementToken() {\n    if (available) {\n      clearAttributes();\n      available = false;\n      bytesAtt.setBytesRef(bytes);\n      return true;\n    }\n    return false;\n  }\n\n","sourceOld":"  @Override\n  public boolean incrementToken() {\n    if (available) {\n      available = false;\n      return true;\n    }\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3dffec77fb8f7d0e9ca4869dddd6af94528b4576","date":1377875202,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/BinaryTokenStream#incrementToken().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/BinaryTokenStream#incrementToken().mjava","sourceNew":"  @Override\n  public boolean incrementToken() {\n    if (available) {\n      clearAttributes();\n      available = false;\n      bytesAtt.setBytesRef(bytes);\n      return true;\n    }\n    return false;\n  }\n\n","sourceOld":"  @Override\n  public boolean incrementToken() {\n    if (available) {\n      available = false;\n      return true;\n    }\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"52c7e49be259508735752fba88085255014a6ecf","date":1398706273,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/BinaryTokenStream#incrementToken().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/BinaryTokenStream#incrementToken().mjava","sourceNew":"  @Override\n  public boolean incrementToken() {\n    if (available) {\n      clearAttributes();\n      available = false;\n      return true;\n    }\n    return false;\n  }\n\n","sourceOld":"  @Override\n  public boolean incrementToken() {\n    if (available) {\n      clearAttributes();\n      available = false;\n      bytesAtt.setBytesRef(bytes);\n      return true;\n    }\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3394716f52b34ab259ad5247e7595d9f9db6e935","date":1398791921,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/BinaryTokenStream#incrementToken().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/BinaryTokenStream#incrementToken().mjava","sourceNew":"  @Override\n  public boolean incrementToken() {\n    if (available) {\n      clearAttributes();\n      available = false;\n      return true;\n    }\n    return false;\n  }\n\n","sourceOld":"  @Override\n  public boolean incrementToken() {\n    if (available) {\n      clearAttributes();\n      available = false;\n      bytesAtt.setBytesRef(bytes);\n      return true;\n    }\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c0cd85fde84cb318b4dc97710dcf15e2959a1bbe","date":1398844771,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/BinaryTokenStream#incrementToken().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/BinaryTokenStream#incrementToken().mjava","sourceNew":"  @Override\n  public boolean incrementToken() {\n    if (available) {\n      clearAttributes();\n      available = false;\n      return true;\n    }\n    return false;\n  }\n\n","sourceOld":"  @Override\n  public boolean incrementToken() {\n    if (available) {\n      clearAttributes();\n      available = false;\n      bytesAtt.setBytesRef(bytes);\n      return true;\n    }\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"804b857d1066ab5185b3b9101bde41b0b71426ec","date":1435846169,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/test/org/apache/lucene/index/BinaryTokenStream#incrementToken().mjava","sourceNew":null,"sourceOld":"  @Override\n  public boolean incrementToken() {\n    if (available) {\n      clearAttributes();\n      available = false;\n      return true;\n    }\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"804b857d1066ab5185b3b9101bde41b0b71426ec":["3394716f52b34ab259ad5247e7595d9f9db6e935"],"3394716f52b34ab259ad5247e7595d9f9db6e935":["f3f8a0f8bebc057ea4bdf65150b3fdc539db3d03","52c7e49be259508735752fba88085255014a6ecf"],"c0cd85fde84cb318b4dc97710dcf15e2959a1bbe":["f3f8a0f8bebc057ea4bdf65150b3fdc539db3d03","3394716f52b34ab259ad5247e7595d9f9db6e935"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":["4d3e8520fd031bab31fd0e4d480e55958bc45efe","f3f8a0f8bebc057ea4bdf65150b3fdc539db3d03"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4d3e8520fd031bab31fd0e4d480e55958bc45efe":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"f3f8a0f8bebc057ea4bdf65150b3fdc539db3d03":["4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"52c7e49be259508735752fba88085255014a6ecf":["f3f8a0f8bebc057ea4bdf65150b3fdc539db3d03"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["804b857d1066ab5185b3b9101bde41b0b71426ec"]},"commit2Childs":{"804b857d1066ab5185b3b9101bde41b0b71426ec":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3394716f52b34ab259ad5247e7595d9f9db6e935":["804b857d1066ab5185b3b9101bde41b0b71426ec","c0cd85fde84cb318b4dc97710dcf15e2959a1bbe"],"c0cd85fde84cb318b4dc97710dcf15e2959a1bbe":[],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["fe33227f6805edab2036cbb80645cc4e2d1fa424","4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":[],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"4d3e8520fd031bab31fd0e4d480e55958bc45efe":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","fe33227f6805edab2036cbb80645cc4e2d1fa424","f3f8a0f8bebc057ea4bdf65150b3fdc539db3d03"],"f3f8a0f8bebc057ea4bdf65150b3fdc539db3d03":["3394716f52b34ab259ad5247e7595d9f9db6e935","c0cd85fde84cb318b4dc97710dcf15e2959a1bbe","3dffec77fb8f7d0e9ca4869dddd6af94528b4576","52c7e49be259508735752fba88085255014a6ecf"],"52c7e49be259508735752fba88085255014a6ecf":["3394716f52b34ab259ad5247e7595d9f9db6e935"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c0cd85fde84cb318b4dc97710dcf15e2959a1bbe","3dffec77fb8f7d0e9ca4869dddd6af94528b4576","fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}