{"path":"solr/src/test/org/apache/solr/handler/component/QueryElevationComponentTest#testElevationReloading().mjava","commits":[{"id":"893269407f5c988a4b2ee13c7ffc01ec43136c1d","date":1268598046,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/handler/component/QueryElevationComponentTest#testElevationReloading().mjava","pathOld":"/dev/null","sourceNew":"  public void testElevationReloading() throws Exception\n  {\n    SolrCore core = h.getCore();\n\n    String testfile = \"data-elevation.xml\";\n    File f = new File( core.getDataDir(), testfile );\n    writeFile( f, \"aaa\", \"A\" );\n    \n    QueryElevationComponent comp = (QueryElevationComponent)core.getSearchComponent(\"elevate\");\n    NamedList<String> args = new NamedList<String>();\n    args.add( QueryElevationComponent.CONFIG_FILE, testfile );\n    comp.init( args );\n    comp.inform( core );\n    \n    IndexReader reader = core.getSearcher().get().getReader();\n    Map<String, ElevationObj> map = comp.getElevationMap(reader, core);\n    assertTrue( map.get( \"aaa\" ).priority.containsKey( \"A\" ) );\n    assertNull( map.get( \"bbb\" ) );\n    \n    // now change the file\n    writeFile( f, \"bbb\", \"B\" );\n    assertU(adoc(\"id\", \"10000\")); // will get same reader if no index change\n    assertU(commit());\n    \n    reader = core.getSearcher().get().getReader();\n    map = comp.getElevationMap(reader, core);\n    assertNull( map.get( \"aaa\" ) );\n    assertTrue( map.get( \"bbb\" ).priority.containsKey( \"B\" ) );\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","date":1268599006,"type":4,"author":"Mark Robert Miller","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/src/test/org/apache/solr/handler/component/QueryElevationComponentTest#testElevationReloading().mjava","sourceNew":null,"sourceOld":"  public void testElevationReloading() throws Exception\n  {\n    SolrCore core = h.getCore();\n\n    String testfile = \"data-elevation.xml\";\n    File f = new File( core.getDataDir(), testfile );\n    writeFile( f, \"aaa\", \"A\" );\n    \n    QueryElevationComponent comp = (QueryElevationComponent)core.getSearchComponent(\"elevate\");\n    NamedList<String> args = new NamedList<String>();\n    args.add( QueryElevationComponent.CONFIG_FILE, testfile );\n    comp.init( args );\n    comp.inform( core );\n    \n    IndexReader reader = core.getSearcher().get().getReader();\n    Map<String, ElevationObj> map = comp.getElevationMap(reader, core);\n    assertTrue( map.get( \"aaa\" ).priority.containsKey( \"A\" ) );\n    assertNull( map.get( \"bbb\" ) );\n    \n    // now change the file\n    writeFile( f, \"bbb\", \"B\" );\n    assertU(adoc(\"id\", \"10000\")); // will get same reader if no index change\n    assertU(commit());\n    \n    reader = core.getSearcher().get().getReader();\n    map = comp.getElevationMap(reader, core);\n    assertNull( map.get( \"aaa\" ) );\n    assertTrue( map.get( \"bbb\" ).priority.containsKey( \"B\" ) );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/handler/component/QueryElevationComponentTest#testElevationReloading().mjava","pathOld":"src/test/org/apache/solr/handler/component/QueryElevationComponentTest#testElevationReloading().mjava","sourceNew":"  public void testElevationReloading() throws Exception\n  {\n    SolrCore core = h.getCore();\n\n    String testfile = \"data-elevation.xml\";\n    File f = new File( core.getDataDir(), testfile );\n    writeFile( f, \"aaa\", \"A\" );\n    \n    QueryElevationComponent comp = (QueryElevationComponent)core.getSearchComponent(\"elevate\");\n    NamedList<String> args = new NamedList<String>();\n    args.add( QueryElevationComponent.CONFIG_FILE, testfile );\n    comp.init( args );\n    comp.inform( core );\n    \n    IndexReader reader = core.getSearcher().get().getReader();\n    Map<String, ElevationObj> map = comp.getElevationMap(reader, core);\n    assertTrue( map.get( \"aaa\" ).priority.containsKey( \"A\" ) );\n    assertNull( map.get( \"bbb\" ) );\n    \n    // now change the file\n    writeFile( f, \"bbb\", \"B\" );\n    assertU(adoc(\"id\", \"10000\")); // will get same reader if no index change\n    assertU(commit());\n    \n    reader = core.getSearcher().get().getReader();\n    map = comp.getElevationMap(reader, core);\n    assertNull( map.get( \"aaa\" ) );\n    assertTrue( map.get( \"bbb\" ).priority.containsKey( \"B\" ) );\n  }\n\n","sourceOld":"  public void testElevationReloading() throws Exception\n  {\n    SolrCore core = h.getCore();\n\n    String testfile = \"data-elevation.xml\";\n    File f = new File( core.getDataDir(), testfile );\n    writeFile( f, \"aaa\", \"A\" );\n    \n    QueryElevationComponent comp = (QueryElevationComponent)core.getSearchComponent(\"elevate\");\n    NamedList<String> args = new NamedList<String>();\n    args.add( QueryElevationComponent.CONFIG_FILE, testfile );\n    comp.init( args );\n    comp.inform( core );\n    \n    IndexReader reader = core.getSearcher().get().getReader();\n    Map<String, ElevationObj> map = comp.getElevationMap(reader, core);\n    assertTrue( map.get( \"aaa\" ).priority.containsKey( \"A\" ) );\n    assertNull( map.get( \"bbb\" ) );\n    \n    // now change the file\n    writeFile( f, \"bbb\", \"B\" );\n    assertU(adoc(\"id\", \"10000\")); // will get same reader if no index change\n    assertU(commit());\n    \n    reader = core.getSearcher().get().getReader();\n    map = comp.getElevationMap(reader, core);\n    assertNull( map.get( \"aaa\" ) );\n    assertTrue( map.get( \"bbb\" ).priority.containsKey( \"B\" ) );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1da8d55113b689b06716246649de6f62430f15c0","date":1453508340,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/handler/component/QueryElevationComponentTest#testElevationReloading().mjava","pathOld":"/dev/null","sourceNew":"  public void testElevationReloading() throws Exception\n  {\n    SolrCore core = h.getCore();\n\n    String testfile = \"data-elevation.xml\";\n    File f = new File( core.getDataDir(), testfile );\n    writeFile( f, \"aaa\", \"A\" );\n    \n    QueryElevationComponent comp = (QueryElevationComponent)core.getSearchComponent(\"elevate\");\n    NamedList<String> args = new NamedList<String>();\n    args.add( QueryElevationComponent.CONFIG_FILE, testfile );\n    comp.init( args );\n    comp.inform( core );\n    \n    IndexReader reader = core.getSearcher().get().getReader();\n    Map<String, ElevationObj> map = comp.getElevationMap(reader, core);\n    assertTrue( map.get( \"aaa\" ).priority.containsKey( \"A\" ) );\n    assertNull( map.get( \"bbb\" ) );\n    \n    // now change the file\n    writeFile( f, \"bbb\", \"B\" );\n    assertU(adoc(\"id\", \"10000\")); // will get same reader if no index change\n    assertU(commit());\n    \n    reader = core.getSearcher().get().getReader();\n    map = comp.getElevationMap(reader, core);\n    assertNull( map.get( \"aaa\" ) );\n    assertTrue( map.get( \"bbb\" ).priority.containsKey( \"B\" ) );\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"afeb033b2bd36d8ce9d82142b197da4dde13068b","date":1269115863,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/handler/component/QueryElevationComponentTest#testElevationReloading().mjava","pathOld":"solr/src/test/org/apache/solr/handler/component/QueryElevationComponentTest#testElevationReloading().mjava","sourceNew":"  @Test\n  public void testElevationReloading() throws Exception\n  {\n    SolrCore core = h.getCore();\n\n    String testfile = \"data-elevation.xml\";\n    File f = new File( core.getDataDir(), testfile );\n    writeFile( f, \"aaa\", \"A\" );\n    \n    QueryElevationComponent comp = (QueryElevationComponent)core.getSearchComponent(\"elevate\");\n    NamedList<String> args = new NamedList<String>();\n    args.add( QueryElevationComponent.CONFIG_FILE, testfile );\n    comp.init( args );\n    comp.inform( core );\n    \n    IndexReader reader = core.getSearcher().get().getReader();\n    Map<String, ElevationObj> map = comp.getElevationMap(reader, core);\n    assertTrue( map.get( \"aaa\" ).priority.containsKey( \"A\" ) );\n    assertNull( map.get( \"bbb\" ) );\n    \n    // now change the file\n    writeFile( f, \"bbb\", \"B\" );\n    assertU(adoc(\"id\", \"10000\")); // will get same reader if no index change\n    assertU(commit());\n    \n    reader = core.getSearcher().get().getReader();\n    map = comp.getElevationMap(reader, core);\n    assertNull( map.get( \"aaa\" ) );\n    assertTrue( map.get( \"bbb\" ).priority.containsKey( \"B\" ) );\n  }\n\n","sourceOld":"  public void testElevationReloading() throws Exception\n  {\n    SolrCore core = h.getCore();\n\n    String testfile = \"data-elevation.xml\";\n    File f = new File( core.getDataDir(), testfile );\n    writeFile( f, \"aaa\", \"A\" );\n    \n    QueryElevationComponent comp = (QueryElevationComponent)core.getSearchComponent(\"elevate\");\n    NamedList<String> args = new NamedList<String>();\n    args.add( QueryElevationComponent.CONFIG_FILE, testfile );\n    comp.init( args );\n    comp.inform( core );\n    \n    IndexReader reader = core.getSearcher().get().getReader();\n    Map<String, ElevationObj> map = comp.getElevationMap(reader, core);\n    assertTrue( map.get( \"aaa\" ).priority.containsKey( \"A\" ) );\n    assertNull( map.get( \"bbb\" ) );\n    \n    // now change the file\n    writeFile( f, \"bbb\", \"B\" );\n    assertU(adoc(\"id\", \"10000\")); // will get same reader if no index change\n    assertU(commit());\n    \n    reader = core.getSearcher().get().getReader();\n    map = comp.getElevationMap(reader, core);\n    assertNull( map.get( \"aaa\" ) );\n    assertTrue( map.get( \"bbb\" ).priority.containsKey( \"B\" ) );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"be20f9fed1d3edcb1c84abcc39df87a90fab22df","date":1275590285,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/handler/component/QueryElevationComponentTest#testElevationReloading().mjava","pathOld":"solr/src/test/org/apache/solr/handler/component/QueryElevationComponentTest#testElevationReloading().mjava","sourceNew":"  @Test\n  public void testElevationReloading() throws Exception\n  {\n    SolrCore core = h.getCore();\n\n    String testfile = \"data-elevation.xml\";\n    File f = new File( core.getDataDir(), testfile );\n    writeFile( f, \"aaa\", \"A\" );\n    \n    QueryElevationComponent comp = (QueryElevationComponent)core.getSearchComponent(\"elevate\");\n    NamedList<String> args = new NamedList<String>();\n    args.add( QueryElevationComponent.CONFIG_FILE, testfile );\n    comp.init( args );\n    comp.inform( core );\n    \n    IndexReader reader = core.getSearcher().get().getReader();\n    Map<String, ElevationObj> map = comp.getElevationMap(reader, core);\n    assertTrue( map.get( \"aaa\" ).priority.containsKey( new BytesRef(\"A\") ) );\n    assertNull( map.get( \"bbb\" ) );\n    \n    // now change the file\n    writeFile( f, \"bbb\", \"B\" );\n    assertU(adoc(\"id\", \"10000\")); // will get same reader if no index change\n    assertU(commit());\n    \n    reader = core.getSearcher().get().getReader();\n    map = comp.getElevationMap(reader, core);\n    assertNull( map.get( \"aaa\" ) );\n    assertTrue( map.get( \"bbb\" ).priority.containsKey( new BytesRef(\"B\") ) );\n  }\n\n","sourceOld":"  @Test\n  public void testElevationReloading() throws Exception\n  {\n    SolrCore core = h.getCore();\n\n    String testfile = \"data-elevation.xml\";\n    File f = new File( core.getDataDir(), testfile );\n    writeFile( f, \"aaa\", \"A\" );\n    \n    QueryElevationComponent comp = (QueryElevationComponent)core.getSearchComponent(\"elevate\");\n    NamedList<String> args = new NamedList<String>();\n    args.add( QueryElevationComponent.CONFIG_FILE, testfile );\n    comp.init( args );\n    comp.inform( core );\n    \n    IndexReader reader = core.getSearcher().get().getReader();\n    Map<String, ElevationObj> map = comp.getElevationMap(reader, core);\n    assertTrue( map.get( \"aaa\" ).priority.containsKey( \"A\" ) );\n    assertNull( map.get( \"bbb\" ) );\n    \n    // now change the file\n    writeFile( f, \"bbb\", \"B\" );\n    assertU(adoc(\"id\", \"10000\")); // will get same reader if no index change\n    assertU(commit());\n    \n    reader = core.getSearcher().get().getReader();\n    map = comp.getElevationMap(reader, core);\n    assertNull( map.get( \"aaa\" ) );\n    assertTrue( map.get( \"bbb\" ).priority.containsKey( \"B\" ) );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cdd1db40ae856a49ef526079829c557533f2b50f","date":1287093509,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/handler/component/QueryElevationComponentTest#testElevationReloading().mjava","pathOld":"solr/src/test/org/apache/solr/handler/component/QueryElevationComponentTest#testElevationReloading().mjava","sourceNew":"  @Test\n  public void testElevationReloading() throws Exception\n  {\n    String testfile = \"data-elevation.xml\";\n    File f = new File( h.getCore().getDataDir(), testfile );\n    writeFile( f, \"aaa\", \"A\" );\n    \n    QueryElevationComponent comp = (QueryElevationComponent)h.getCore().getSearchComponent(\"elevate\");\n    NamedList<String> args = new NamedList<String>();\n    args.add( QueryElevationComponent.CONFIG_FILE, testfile );\n    comp.init( args );\n    comp.inform( h.getCore() );\n\n    SolrQueryRequest req = req();\n    IndexReader reader = req.getSearcher().getReader();\n    Map<String, ElevationObj> map = comp.getElevationMap(reader, h.getCore());\n    assertTrue( map.get( \"aaa\" ).priority.containsKey( new BytesRef(\"A\") ) );\n    assertNull( map.get( \"bbb\" ) );\n    req.close();\n    \n    // now change the file\n    writeFile( f, \"bbb\", \"B\" );\n    assertU(adoc(\"id\", \"10000\")); // will get same reader if no index change\n    assertU(commit());\n\n    req = req();\n    reader = req.getSearcher().getReader();\n    map = comp.getElevationMap(reader, h.getCore());\n    assertNull( map.get( \"aaa\" ) );\n    assertTrue( map.get( \"bbb\" ).priority.containsKey( new BytesRef(\"B\") ) );\n    req.close();\n  }\n\n","sourceOld":"  @Test\n  public void testElevationReloading() throws Exception\n  {\n    SolrCore core = h.getCore();\n\n    String testfile = \"data-elevation.xml\";\n    File f = new File( core.getDataDir(), testfile );\n    writeFile( f, \"aaa\", \"A\" );\n    \n    QueryElevationComponent comp = (QueryElevationComponent)core.getSearchComponent(\"elevate\");\n    NamedList<String> args = new NamedList<String>();\n    args.add( QueryElevationComponent.CONFIG_FILE, testfile );\n    comp.init( args );\n    comp.inform( core );\n    \n    IndexReader reader = core.getSearcher().get().getReader();\n    Map<String, ElevationObj> map = comp.getElevationMap(reader, core);\n    assertTrue( map.get( \"aaa\" ).priority.containsKey( new BytesRef(\"A\") ) );\n    assertNull( map.get( \"bbb\" ) );\n    \n    // now change the file\n    writeFile( f, \"bbb\", \"B\" );\n    assertU(adoc(\"id\", \"10000\")); // will get same reader if no index change\n    assertU(commit());\n    \n    reader = core.getSearcher().get().getReader();\n    map = comp.getElevationMap(reader, core);\n    assertNull( map.get( \"aaa\" ) );\n    assertTrue( map.get( \"bbb\" ).priority.containsKey( new BytesRef(\"B\") ) );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4ecea1664e8617d82eca3b8055a3c37cb4da8511","date":1287578668,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/handler/component/QueryElevationComponentTest#testElevationReloading().mjava","pathOld":"solr/src/test/org/apache/solr/handler/component/QueryElevationComponentTest#testElevationReloading().mjava","sourceNew":"  @Test\n  public void testElevationReloading() throws Exception\n  {\n    String testfile = \"data-elevation.xml\";\n    File f = new File( h.getCore().getDataDir(), testfile );\n    writeFile( f, \"aaa\", \"A\" );\n    \n    QueryElevationComponent comp = (QueryElevationComponent)h.getCore().getSearchComponent(\"elevate\");\n    NamedList<String> args = new NamedList<String>();\n    args.add( QueryElevationComponent.CONFIG_FILE, testfile );\n    comp.init( args );\n    comp.inform( h.getCore() );\n\n    SolrQueryRequest req = req();\n    IndexReader reader = req.getSearcher().getReader();\n    Map<String, ElevationObj> map = comp.getElevationMap(reader, h.getCore());\n    assertTrue( map.get( \"aaa\" ).priority.containsKey( new BytesRef(\"A\") ) );\n    assertNull( map.get( \"bbb\" ) );\n    req.close();\n    \n    // now change the file\n    writeFile( f, \"bbb\", \"B\" );\n    assertU(adoc(\"id\", \"10000\")); // will get same reader if no index change\n    assertU(commit());\n\n    req = req();\n    reader = req.getSearcher().getReader();\n    map = comp.getElevationMap(reader, h.getCore());\n    assertNull( map.get( \"aaa\" ) );\n    assertTrue( map.get( \"bbb\" ).priority.containsKey( new BytesRef(\"B\") ) );\n    req.close();\n  }\n\n","sourceOld":"  @Test\n  public void testElevationReloading() throws Exception\n  {\n    SolrCore core = h.getCore();\n\n    String testfile = \"data-elevation.xml\";\n    File f = new File( core.getDataDir(), testfile );\n    writeFile( f, \"aaa\", \"A\" );\n    \n    QueryElevationComponent comp = (QueryElevationComponent)core.getSearchComponent(\"elevate\");\n    NamedList<String> args = new NamedList<String>();\n    args.add( QueryElevationComponent.CONFIG_FILE, testfile );\n    comp.init( args );\n    comp.inform( core );\n    \n    IndexReader reader = core.getSearcher().get().getReader();\n    Map<String, ElevationObj> map = comp.getElevationMap(reader, core);\n    assertTrue( map.get( \"aaa\" ).priority.containsKey( new BytesRef(\"A\") ) );\n    assertNull( map.get( \"bbb\" ) );\n    \n    // now change the file\n    writeFile( f, \"bbb\", \"B\" );\n    assertU(adoc(\"id\", \"10000\")); // will get same reader if no index change\n    assertU(commit());\n    \n    reader = core.getSearcher().get().getReader();\n    map = comp.getElevationMap(reader, core);\n    assertNull( map.get( \"aaa\" ) );\n    assertTrue( map.get( \"bbb\" ).priority.containsKey( new BytesRef(\"B\") ) );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/handler/component/QueryElevationComponentTest#testElevationReloading().mjava","pathOld":"solr/src/test/org/apache/solr/handler/component/QueryElevationComponentTest#testElevationReloading().mjava","sourceNew":"  @Test\n  public void testElevationReloading() throws Exception\n  {\n    String testfile = \"data-elevation.xml\";\n    File f = new File( h.getCore().getDataDir(), testfile );\n    writeFile( f, \"aaa\", \"A\" );\n    \n    QueryElevationComponent comp = (QueryElevationComponent)h.getCore().getSearchComponent(\"elevate\");\n    NamedList<String> args = new NamedList<String>();\n    args.add( QueryElevationComponent.CONFIG_FILE, testfile );\n    comp.init( args );\n    comp.inform( h.getCore() );\n\n    SolrQueryRequest req = req();\n    IndexReader reader = req.getSearcher().getReader();\n    Map<String, ElevationObj> map = comp.getElevationMap(reader, h.getCore());\n    assertTrue( map.get( \"aaa\" ).priority.containsKey( new BytesRef(\"A\") ) );\n    assertNull( map.get( \"bbb\" ) );\n    req.close();\n    \n    // now change the file\n    writeFile( f, \"bbb\", \"B\" );\n    assertU(adoc(\"id\", \"10000\")); // will get same reader if no index change\n    assertU(commit());\n\n    req = req();\n    reader = req.getSearcher().getReader();\n    map = comp.getElevationMap(reader, h.getCore());\n    assertNull( map.get( \"aaa\" ) );\n    assertTrue( map.get( \"bbb\" ).priority.containsKey( new BytesRef(\"B\") ) );\n    req.close();\n  }\n\n","sourceOld":"  @Test\n  public void testElevationReloading() throws Exception\n  {\n    SolrCore core = h.getCore();\n\n    String testfile = \"data-elevation.xml\";\n    File f = new File( core.getDataDir(), testfile );\n    writeFile( f, \"aaa\", \"A\" );\n    \n    QueryElevationComponent comp = (QueryElevationComponent)core.getSearchComponent(\"elevate\");\n    NamedList<String> args = new NamedList<String>();\n    args.add( QueryElevationComponent.CONFIG_FILE, testfile );\n    comp.init( args );\n    comp.inform( core );\n    \n    IndexReader reader = core.getSearcher().get().getReader();\n    Map<String, ElevationObj> map = comp.getElevationMap(reader, core);\n    assertTrue( map.get( \"aaa\" ).priority.containsKey( new BytesRef(\"A\") ) );\n    assertNull( map.get( \"bbb\" ) );\n    \n    // now change the file\n    writeFile( f, \"bbb\", \"B\" );\n    assertU(adoc(\"id\", \"10000\")); // will get same reader if no index change\n    assertU(commit());\n    \n    reader = core.getSearcher().get().getReader();\n    map = comp.getElevationMap(reader, core);\n    assertNull( map.get( \"aaa\" ) );\n    assertTrue( map.get( \"bbb\" ).priority.containsKey( new BytesRef(\"B\") ) );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c220849f876de24a79f756f65b3eb045db59f63f","date":1294902803,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/handler/component/QueryElevationComponentTest#testElevationReloading().mjava","pathOld":"solr/src/test/org/apache/solr/handler/component/QueryElevationComponentTest#testElevationReloading().mjava","sourceNew":"  @Test\n  public void testElevationReloading() throws Exception\n  {\n    String testfile = \"data-elevation.xml\";\n    File f = new File( h.getCore().getDataDir(), testfile );\n    writeFile( f, \"aaa\", \"A\" );\n    \n    QueryElevationComponent comp = (QueryElevationComponent)h.getCore().getSearchComponent(\"elevate\");\n    NamedList<String> args = new NamedList<String>();\n    args.add( QueryElevationComponent.CONFIG_FILE, testfile );\n    comp.init( args );\n    comp.inform( h.getCore() );\n\n    SolrQueryRequest req = req();\n    IndexReader reader = req.getSearcher().getIndexReader();\n    Map<String, ElevationObj> map = comp.getElevationMap(reader, h.getCore());\n    assertTrue( map.get( \"aaa\" ).priority.containsKey( new BytesRef(\"A\") ) );\n    assertNull( map.get( \"bbb\" ) );\n    req.close();\n    \n    // now change the file\n    writeFile( f, \"bbb\", \"B\" );\n    assertU(adoc(\"id\", \"10000\")); // will get same reader if no index change\n    assertU(commit());\n\n    req = req();\n    reader = req.getSearcher().getIndexReader();\n    map = comp.getElevationMap(reader, h.getCore());\n    assertNull( map.get( \"aaa\" ) );\n    assertTrue( map.get( \"bbb\" ).priority.containsKey( new BytesRef(\"B\") ) );\n    req.close();\n  }\n\n","sourceOld":"  @Test\n  public void testElevationReloading() throws Exception\n  {\n    String testfile = \"data-elevation.xml\";\n    File f = new File( h.getCore().getDataDir(), testfile );\n    writeFile( f, \"aaa\", \"A\" );\n    \n    QueryElevationComponent comp = (QueryElevationComponent)h.getCore().getSearchComponent(\"elevate\");\n    NamedList<String> args = new NamedList<String>();\n    args.add( QueryElevationComponent.CONFIG_FILE, testfile );\n    comp.init( args );\n    comp.inform( h.getCore() );\n\n    SolrQueryRequest req = req();\n    IndexReader reader = req.getSearcher().getReader();\n    Map<String, ElevationObj> map = comp.getElevationMap(reader, h.getCore());\n    assertTrue( map.get( \"aaa\" ).priority.containsKey( new BytesRef(\"A\") ) );\n    assertNull( map.get( \"bbb\" ) );\n    req.close();\n    \n    // now change the file\n    writeFile( f, \"bbb\", \"B\" );\n    assertU(adoc(\"id\", \"10000\")); // will get same reader if no index change\n    assertU(commit());\n\n    req = req();\n    reader = req.getSearcher().getReader();\n    map = comp.getElevationMap(reader, h.getCore());\n    assertNull( map.get( \"aaa\" ) );\n    assertTrue( map.get( \"bbb\" ).priority.containsKey( new BytesRef(\"B\") ) );\n    req.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"868da859b43505d9d2a023bfeae6dd0c795f5295","date":1294948401,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/handler/component/QueryElevationComponentTest#testElevationReloading().mjava","pathOld":"solr/src/test/org/apache/solr/handler/component/QueryElevationComponentTest#testElevationReloading().mjava","sourceNew":"  @Test\n  public void testElevationReloading() throws Exception\n  {\n    String testfile = \"data-elevation.xml\";\n    File f = new File( h.getCore().getDataDir(), testfile );\n    writeFile( f, \"aaa\", \"A\" );\n    \n    QueryElevationComponent comp = (QueryElevationComponent)h.getCore().getSearchComponent(\"elevate\");\n    NamedList<String> args = new NamedList<String>();\n    args.add( QueryElevationComponent.CONFIG_FILE, testfile );\n    comp.init( args );\n    comp.inform( h.getCore() );\n\n    SolrQueryRequest req = req();\n    IndexReader reader = req.getSearcher().getIndexReader();\n    Map<String, ElevationObj> map = comp.getElevationMap(reader, h.getCore());\n    assertTrue( map.get( \"aaa\" ).priority.containsKey( new BytesRef(\"A\") ) );\n    assertNull( map.get( \"bbb\" ) );\n    req.close();\n    \n    // now change the file\n    writeFile( f, \"bbb\", \"B\" );\n    assertU(adoc(\"id\", \"10000\")); // will get same reader if no index change\n    assertU(commit());\n\n    req = req();\n    reader = req.getSearcher().getIndexReader();\n    map = comp.getElevationMap(reader, h.getCore());\n    assertNull( map.get( \"aaa\" ) );\n    assertTrue( map.get( \"bbb\" ).priority.containsKey( new BytesRef(\"B\") ) );\n    req.close();\n  }\n\n","sourceOld":"  @Test\n  public void testElevationReloading() throws Exception\n  {\n    String testfile = \"data-elevation.xml\";\n    File f = new File( h.getCore().getDataDir(), testfile );\n    writeFile( f, \"aaa\", \"A\" );\n    \n    QueryElevationComponent comp = (QueryElevationComponent)h.getCore().getSearchComponent(\"elevate\");\n    NamedList<String> args = new NamedList<String>();\n    args.add( QueryElevationComponent.CONFIG_FILE, testfile );\n    comp.init( args );\n    comp.inform( h.getCore() );\n\n    SolrQueryRequest req = req();\n    IndexReader reader = req.getSearcher().getReader();\n    Map<String, ElevationObj> map = comp.getElevationMap(reader, h.getCore());\n    assertTrue( map.get( \"aaa\" ).priority.containsKey( new BytesRef(\"A\") ) );\n    assertNull( map.get( \"bbb\" ) );\n    req.close();\n    \n    // now change the file\n    writeFile( f, \"bbb\", \"B\" );\n    assertU(adoc(\"id\", \"10000\")); // will get same reader if no index change\n    assertU(commit());\n\n    req = req();\n    reader = req.getSearcher().getReader();\n    map = comp.getElevationMap(reader, h.getCore());\n    assertNull( map.get( \"aaa\" ) );\n    assertTrue( map.get( \"bbb\" ).priority.containsKey( new BytesRef(\"B\") ) );\n    req.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/handler/component/QueryElevationComponentTest#testElevationReloading().mjava","pathOld":"solr/src/test/org/apache/solr/handler/component/QueryElevationComponentTest#testElevationReloading().mjava","sourceNew":"  @Test\n  public void testElevationReloading() throws Exception\n  {\n    String testfile = \"data-elevation.xml\";\n    File f = new File( h.getCore().getDataDir(), testfile );\n    writeFile( f, \"aaa\", \"A\" );\n    \n    QueryElevationComponent comp = (QueryElevationComponent)h.getCore().getSearchComponent(\"elevate\");\n    NamedList<String> args = new NamedList<String>();\n    args.add( QueryElevationComponent.CONFIG_FILE, testfile );\n    comp.init( args );\n    comp.inform( h.getCore() );\n\n    SolrQueryRequest req = req();\n    IndexReader reader = req.getSearcher().getIndexReader();\n    Map<String, ElevationObj> map = comp.getElevationMap(reader, h.getCore());\n    assertTrue( map.get( \"aaa\" ).priority.containsKey( new BytesRef(\"A\") ) );\n    assertNull( map.get( \"bbb\" ) );\n    req.close();\n    \n    // now change the file\n    writeFile( f, \"bbb\", \"B\" );\n    assertU(adoc(\"id\", \"10000\")); // will get same reader if no index change\n    assertU(commit());\n\n    req = req();\n    reader = req.getSearcher().getIndexReader();\n    map = comp.getElevationMap(reader, h.getCore());\n    assertNull( map.get( \"aaa\" ) );\n    assertTrue( map.get( \"bbb\" ).priority.containsKey( new BytesRef(\"B\") ) );\n    req.close();\n  }\n\n","sourceOld":"  @Test\n  public void testElevationReloading() throws Exception\n  {\n    String testfile = \"data-elevation.xml\";\n    File f = new File( h.getCore().getDataDir(), testfile );\n    writeFile( f, \"aaa\", \"A\" );\n    \n    QueryElevationComponent comp = (QueryElevationComponent)h.getCore().getSearchComponent(\"elevate\");\n    NamedList<String> args = new NamedList<String>();\n    args.add( QueryElevationComponent.CONFIG_FILE, testfile );\n    comp.init( args );\n    comp.inform( h.getCore() );\n\n    SolrQueryRequest req = req();\n    IndexReader reader = req.getSearcher().getReader();\n    Map<String, ElevationObj> map = comp.getElevationMap(reader, h.getCore());\n    assertTrue( map.get( \"aaa\" ).priority.containsKey( new BytesRef(\"A\") ) );\n    assertNull( map.get( \"bbb\" ) );\n    req.close();\n    \n    // now change the file\n    writeFile( f, \"bbb\", \"B\" );\n    assertU(adoc(\"id\", \"10000\")); // will get same reader if no index change\n    assertU(commit());\n\n    req = req();\n    reader = req.getSearcher().getReader();\n    map = comp.getElevationMap(reader, h.getCore());\n    assertNull( map.get( \"aaa\" ) );\n    assertTrue( map.get( \"bbb\" ).priority.containsKey( new BytesRef(\"B\") ) );\n    req.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/QueryElevationComponentTest#testElevationReloading().mjava","pathOld":"solr/src/test/org/apache/solr/handler/component/QueryElevationComponentTest#testElevationReloading().mjava","sourceNew":"  @Test\n  public void testElevationReloading() throws Exception\n  {\n    String testfile = \"data-elevation.xml\";\n    File f = new File( h.getCore().getDataDir(), testfile );\n    writeFile( f, \"aaa\", \"A\" );\n    \n    QueryElevationComponent comp = (QueryElevationComponent)h.getCore().getSearchComponent(\"elevate\");\n    NamedList<String> args = new NamedList<String>();\n    args.add( QueryElevationComponent.CONFIG_FILE, testfile );\n    comp.init( args );\n    comp.inform( h.getCore() );\n\n    SolrQueryRequest req = req();\n    IndexReader reader = req.getSearcher().getIndexReader();\n    Map<String, ElevationObj> map = comp.getElevationMap(reader, h.getCore());\n    assertTrue( map.get( \"aaa\" ).priority.containsKey( new BytesRef(\"A\") ) );\n    assertNull( map.get( \"bbb\" ) );\n    req.close();\n    \n    // now change the file\n    writeFile( f, \"bbb\", \"B\" );\n    assertU(adoc(\"id\", \"10000\")); // will get same reader if no index change\n    assertU(commit());\n\n    req = req();\n    reader = req.getSearcher().getIndexReader();\n    map = comp.getElevationMap(reader, h.getCore());\n    assertNull( map.get( \"aaa\" ) );\n    assertTrue( map.get( \"bbb\" ).priority.containsKey( new BytesRef(\"B\") ) );\n    req.close();\n  }\n\n","sourceOld":"  @Test\n  public void testElevationReloading() throws Exception\n  {\n    String testfile = \"data-elevation.xml\";\n    File f = new File( h.getCore().getDataDir(), testfile );\n    writeFile( f, \"aaa\", \"A\" );\n    \n    QueryElevationComponent comp = (QueryElevationComponent)h.getCore().getSearchComponent(\"elevate\");\n    NamedList<String> args = new NamedList<String>();\n    args.add( QueryElevationComponent.CONFIG_FILE, testfile );\n    comp.init( args );\n    comp.inform( h.getCore() );\n\n    SolrQueryRequest req = req();\n    IndexReader reader = req.getSearcher().getIndexReader();\n    Map<String, ElevationObj> map = comp.getElevationMap(reader, h.getCore());\n    assertTrue( map.get( \"aaa\" ).priority.containsKey( new BytesRef(\"A\") ) );\n    assertNull( map.get( \"bbb\" ) );\n    req.close();\n    \n    // now change the file\n    writeFile( f, \"bbb\", \"B\" );\n    assertU(adoc(\"id\", \"10000\")); // will get same reader if no index change\n    assertU(commit());\n\n    req = req();\n    reader = req.getSearcher().getIndexReader();\n    map = comp.getElevationMap(reader, h.getCore());\n    assertNull( map.get( \"aaa\" ) );\n    assertTrue( map.get( \"bbb\" ).priority.containsKey( new BytesRef(\"B\") ) );\n    req.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/QueryElevationComponentTest#testElevationReloading().mjava","pathOld":"solr/src/test/org/apache/solr/handler/component/QueryElevationComponentTest#testElevationReloading().mjava","sourceNew":"  @Test\n  public void testElevationReloading() throws Exception\n  {\n    String testfile = \"data-elevation.xml\";\n    File f = new File( h.getCore().getDataDir(), testfile );\n    writeFile( f, \"aaa\", \"A\" );\n    \n    QueryElevationComponent comp = (QueryElevationComponent)h.getCore().getSearchComponent(\"elevate\");\n    NamedList<String> args = new NamedList<String>();\n    args.add( QueryElevationComponent.CONFIG_FILE, testfile );\n    comp.init( args );\n    comp.inform( h.getCore() );\n\n    SolrQueryRequest req = req();\n    IndexReader reader = req.getSearcher().getIndexReader();\n    Map<String, ElevationObj> map = comp.getElevationMap(reader, h.getCore());\n    assertTrue( map.get( \"aaa\" ).priority.containsKey( new BytesRef(\"A\") ) );\n    assertNull( map.get( \"bbb\" ) );\n    req.close();\n    \n    // now change the file\n    writeFile( f, \"bbb\", \"B\" );\n    assertU(adoc(\"id\", \"10000\")); // will get same reader if no index change\n    assertU(commit());\n\n    req = req();\n    reader = req.getSearcher().getIndexReader();\n    map = comp.getElevationMap(reader, h.getCore());\n    assertNull( map.get( \"aaa\" ) );\n    assertTrue( map.get( \"bbb\" ).priority.containsKey( new BytesRef(\"B\") ) );\n    req.close();\n  }\n\n","sourceOld":"  @Test\n  public void testElevationReloading() throws Exception\n  {\n    String testfile = \"data-elevation.xml\";\n    File f = new File( h.getCore().getDataDir(), testfile );\n    writeFile( f, \"aaa\", \"A\" );\n    \n    QueryElevationComponent comp = (QueryElevationComponent)h.getCore().getSearchComponent(\"elevate\");\n    NamedList<String> args = new NamedList<String>();\n    args.add( QueryElevationComponent.CONFIG_FILE, testfile );\n    comp.init( args );\n    comp.inform( h.getCore() );\n\n    SolrQueryRequest req = req();\n    IndexReader reader = req.getSearcher().getIndexReader();\n    Map<String, ElevationObj> map = comp.getElevationMap(reader, h.getCore());\n    assertTrue( map.get( \"aaa\" ).priority.containsKey( new BytesRef(\"A\") ) );\n    assertNull( map.get( \"bbb\" ) );\n    req.close();\n    \n    // now change the file\n    writeFile( f, \"bbb\", \"B\" );\n    assertU(adoc(\"id\", \"10000\")); // will get same reader if no index change\n    assertU(commit());\n\n    req = req();\n    reader = req.getSearcher().getIndexReader();\n    map = comp.getElevationMap(reader, h.getCore());\n    assertNull( map.get( \"aaa\" ) );\n    assertTrue( map.get( \"bbb\" ).priority.containsKey( new BytesRef(\"B\") ) );\n    req.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/QueryElevationComponentTest#testElevationReloading().mjava","pathOld":"solr/src/test/org/apache/solr/handler/component/QueryElevationComponentTest#testElevationReloading().mjava","sourceNew":"  @Test\n  public void testElevationReloading() throws Exception\n  {\n    String testfile = \"data-elevation.xml\";\n    File f = new File( h.getCore().getDataDir(), testfile );\n    writeFile( f, \"aaa\", \"A\" );\n    \n    QueryElevationComponent comp = (QueryElevationComponent)h.getCore().getSearchComponent(\"elevate\");\n    NamedList<String> args = new NamedList<String>();\n    args.add( QueryElevationComponent.CONFIG_FILE, testfile );\n    comp.init( args );\n    comp.inform( h.getCore() );\n\n    SolrQueryRequest req = req();\n    IndexReader reader = req.getSearcher().getIndexReader();\n    Map<String, ElevationObj> map = comp.getElevationMap(reader, h.getCore());\n    assertTrue( map.get( \"aaa\" ).priority.containsKey( new BytesRef(\"A\") ) );\n    assertNull( map.get( \"bbb\" ) );\n    req.close();\n    \n    // now change the file\n    writeFile( f, \"bbb\", \"B\" );\n    assertU(adoc(\"id\", \"10000\")); // will get same reader if no index change\n    assertU(commit());\n\n    req = req();\n    reader = req.getSearcher().getIndexReader();\n    map = comp.getElevationMap(reader, h.getCore());\n    assertNull( map.get( \"aaa\" ) );\n    assertTrue( map.get( \"bbb\" ).priority.containsKey( new BytesRef(\"B\") ) );\n    req.close();\n  }\n\n","sourceOld":"  @Test\n  public void testElevationReloading() throws Exception\n  {\n    String testfile = \"data-elevation.xml\";\n    File f = new File( h.getCore().getDataDir(), testfile );\n    writeFile( f, \"aaa\", \"A\" );\n    \n    QueryElevationComponent comp = (QueryElevationComponent)h.getCore().getSearchComponent(\"elevate\");\n    NamedList<String> args = new NamedList<String>();\n    args.add( QueryElevationComponent.CONFIG_FILE, testfile );\n    comp.init( args );\n    comp.inform( h.getCore() );\n\n    SolrQueryRequest req = req();\n    IndexReader reader = req.getSearcher().getIndexReader();\n    Map<String, ElevationObj> map = comp.getElevationMap(reader, h.getCore());\n    assertTrue( map.get( \"aaa\" ).priority.containsKey( new BytesRef(\"A\") ) );\n    assertNull( map.get( \"bbb\" ) );\n    req.close();\n    \n    // now change the file\n    writeFile( f, \"bbb\", \"B\" );\n    assertU(adoc(\"id\", \"10000\")); // will get same reader if no index change\n    assertU(commit());\n\n    req = req();\n    reader = req.getSearcher().getIndexReader();\n    map = comp.getElevationMap(reader, h.getCore());\n    assertNull( map.get( \"aaa\" ) );\n    assertTrue( map.get( \"bbb\" ).priority.containsKey( new BytesRef(\"B\") ) );\n    req.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"be20f9fed1d3edcb1c84abcc39df87a90fab22df":["afeb033b2bd36d8ce9d82142b197da4dde13068b"],"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"c26f00b574427b55127e869b935845554afde1fa":["c220849f876de24a79f756f65b3eb045db59f63f","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["be20f9fed1d3edcb1c84abcc39df87a90fab22df","cdd1db40ae856a49ef526079829c557533f2b50f"],"1da8d55113b689b06716246649de6f62430f15c0":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","ad94625fb8d088209f46650c8097196fec67f00c"],"c220849f876de24a79f756f65b3eb045db59f63f":["cdd1db40ae856a49ef526079829c557533f2b50f"],"cdd1db40ae856a49ef526079829c557533f2b50f":["be20f9fed1d3edcb1c84abcc39df87a90fab22df"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c220849f876de24a79f756f65b3eb045db59f63f"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["4ecea1664e8617d82eca3b8055a3c37cb4da8511","c220849f876de24a79f756f65b3eb045db59f63f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"afeb033b2bd36d8ce9d82142b197da4dde13068b":["1da8d55113b689b06716246649de6f62430f15c0"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["c220849f876de24a79f756f65b3eb045db59f63f"],"ad94625fb8d088209f46650c8097196fec67f00c":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"4ecea1664e8617d82eca3b8055a3c37cb4da8511":["be20f9fed1d3edcb1c84abcc39df87a90fab22df","cdd1db40ae856a49ef526079829c557533f2b50f"],"868da859b43505d9d2a023bfeae6dd0c795f5295":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","c220849f876de24a79f756f65b3eb045db59f63f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c26f00b574427b55127e869b935845554afde1fa"]},"commit2Childs":{"be20f9fed1d3edcb1c84abcc39df87a90fab22df":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cdd1db40ae856a49ef526079829c557533f2b50f","4ecea1664e8617d82eca3b8055a3c37cb4da8511"],"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["1da8d55113b689b06716246649de6f62430f15c0"],"c26f00b574427b55127e869b935845554afde1fa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["ad94625fb8d088209f46650c8097196fec67f00c"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["868da859b43505d9d2a023bfeae6dd0c795f5295"],"1da8d55113b689b06716246649de6f62430f15c0":["afeb033b2bd36d8ce9d82142b197da4dde13068b"],"c220849f876de24a79f756f65b3eb045db59f63f":["c26f00b574427b55127e869b935845554afde1fa","c903c3d15906a3da96b8c0c2fb704491005fdbdb","29ef99d61cda9641b6250bf9567329a6e65f901d","a258fbb26824fd104ed795e5d9033d2d040049ee","868da859b43505d9d2a023bfeae6dd0c795f5295"],"cdd1db40ae856a49ef526079829c557533f2b50f":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","c220849f876de24a79f756f65b3eb045db59f63f","4ecea1664e8617d82eca3b8055a3c37cb4da8511"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"afeb033b2bd36d8ce9d82142b197da4dde13068b":["be20f9fed1d3edcb1c84abcc39df87a90fab22df"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"ad94625fb8d088209f46650c8097196fec67f00c":["1da8d55113b689b06716246649de6f62430f15c0"],"4ecea1664e8617d82eca3b8055a3c37cb4da8511":["29ef99d61cda9641b6250bf9567329a6e65f901d"],"868da859b43505d9d2a023bfeae6dd0c795f5295":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["29ef99d61cda9641b6250bf9567329a6e65f901d","a258fbb26824fd104ed795e5d9033d2d040049ee","868da859b43505d9d2a023bfeae6dd0c795f5295","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}