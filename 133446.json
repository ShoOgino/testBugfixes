{"path":"src/java/org/apache/solr/core/MultiCore#register(SolrCore).mjava","commits":[{"id":"048361614025800e582bfc7a7b0329dc6fd6a95e","date":1196999392,"type":0,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/core/MultiCore#register(SolrCore).mjava","pathOld":"/dev/null","sourceNew":"  public SolrCore register( SolrCore core ) {\n    if( core == null ) {\n      throw new RuntimeException( \"Can not register a null core.\" );\n    }\n    String name = core.getName();\n    if( name == null || name.length() == 0 ) {\n      throw new RuntimeException( \"Invalid core name.\" );\n    }\n    SolrCore old = cores.put(name, core);\n    if( old == null ) {\n      log.info( \"registering core: \"+name );\n    } else {\n      log.info( \"replacing core: \"+name );\n    }\n    return old;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["1a45fbd60083428b1b13884c5c8c2e33e7e71ee7"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1a45fbd60083428b1b13884c5c8c2e33e7e71ee7","date":1198275819,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/core/MultiCore#register(SolrCore).mjava","pathOld":"src/java/org/apache/solr/core/MultiCore#register(SolrCore).mjava","sourceNew":"  public SolrCore register( SolrCore core ) {\n    if( core == null ) {\n      throw new RuntimeException( \"Can not register a null core.\" );\n    }\n    String name = core.getName();\n    if( name == null || \n        name.length() < 1 ||\n        name.indexOf( '/'  ) >= 0 ||\n        name.indexOf( '\\\\' ) >= 0 ){\n      throw new RuntimeException( \"Invalid core name: \"+name );\n    }\n    \n    SolrCore old = cores.put(name, core);\n    if( old == null ) {\n      log.info( \"registering core: \"+name );\n    } else {\n      log.info( \"replacing core: \"+name );\n    }\n    return old;\n  }\n\n","sourceOld":"  public SolrCore register( SolrCore core ) {\n    if( core == null ) {\n      throw new RuntimeException( \"Can not register a null core.\" );\n    }\n    String name = core.getName();\n    if( name == null || name.length() == 0 ) {\n      throw new RuntimeException( \"Invalid core name.\" );\n    }\n    SolrCore old = cores.put(name, core);\n    if( old == null ) {\n      log.info( \"registering core: \"+name );\n    } else {\n      log.info( \"replacing core: \"+name );\n    }\n    return old;\n  }\n\n","bugFix":["048361614025800e582bfc7a7b0329dc6fd6a95e"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6dc6ab6902f8f70ae43365947ccf44c25986906d","date":1204603577,"type":5,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/core/MultiCore#register(CoreDescriptor).mjava","pathOld":"src/java/org/apache/solr/core/MultiCore#register(SolrCore).mjava","sourceNew":"  public CoreDescriptor register( CoreDescriptor descr ) {\n    if( descr == null ) {\n      throw new RuntimeException( \"Can not register a null core.\" );\n    }\n    String name = descr.getName();\n    if( name == null || \n        name.length() < 1 ||\n        name.indexOf( '/'  ) >= 0 ||\n        name.indexOf( '\\\\' ) >= 0 ){\n      throw new RuntimeException( \"Invalid core name: \"+name );\n    }\n    \n    CoreDescriptor old = cores.put(name, descr);\n    if( old == null ) {\n      log.info( \"registering core: \"+name );\n      return null;\n    } \n    else {\n      log.info( \"replacing core: \"+name );\n      return old;\n    }\n  }\n\n","sourceOld":"  public SolrCore register( SolrCore core ) {\n    if( core == null ) {\n      throw new RuntimeException( \"Can not register a null core.\" );\n    }\n    String name = core.getName();\n    if( name == null || \n        name.length() < 1 ||\n        name.indexOf( '/'  ) >= 0 ||\n        name.indexOf( '\\\\' ) >= 0 ){\n      throw new RuntimeException( \"Invalid core name: \"+name );\n    }\n    \n    SolrCore old = cores.put(name, core);\n    if( old == null ) {\n      log.info( \"registering core: \"+name );\n    } else {\n      log.info( \"replacing core: \"+name );\n    }\n    return old;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"048361614025800e582bfc7a7b0329dc6fd6a95e":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6dc6ab6902f8f70ae43365947ccf44c25986906d":["1a45fbd60083428b1b13884c5c8c2e33e7e71ee7"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"1a45fbd60083428b1b13884c5c8c2e33e7e71ee7":["048361614025800e582bfc7a7b0329dc6fd6a95e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"048361614025800e582bfc7a7b0329dc6fd6a95e":["1a45fbd60083428b1b13884c5c8c2e33e7e71ee7"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["048361614025800e582bfc7a7b0329dc6fd6a95e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"6dc6ab6902f8f70ae43365947ccf44c25986906d":[],"1a45fbd60083428b1b13884c5c8c2e33e7e71ee7":["6dc6ab6902f8f70ae43365947ccf44c25986906d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["6dc6ab6902f8f70ae43365947ccf44c25986906d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}