{"path":"src/java/org/apache/lucene/queryParser/QueryParser#getOperator().mjava","commits":[{"id":"9dc3f3d3156ee3e335155b8a8f44f7e926db09ef","date":1063245093,"type":0,"author":"Erik Hatcher","isMerge":false,"pathNew":"src/java/org/apache/lucene/queryParser/QueryParser#getOperator().mjava","pathOld":"/dev/null","sourceNew":"  public int getOperator() {\n    return operator;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bd9bdafc45175f108b0e45b1335f905caeb5786f","date":1065194037,"type":3,"author":"Erik Hatcher","isMerge":false,"pathNew":"src/java/org/apache/lucene/queryParser/QueryParser#getOperator().mjava","pathOld":"src/java/org/apache/lucene/queryParser/QueryParser#getOperator().mjava","sourceNew":"  /**\n   * Gets implicit operator setting, which will be either DEFAULT_OPERATOR_AND\n   * or DEFAULT_OPERATOR_AND.\n   */\n  public int getOperator() {\n    return operator;\n  }\n\n","sourceOld":"  public int getOperator() {\n    return operator;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e6ae82b0c1260ed5d01ec234fd8c3faa7bb51547","date":1065195640,"type":3,"author":"Erik Hatcher","isMerge":false,"pathNew":"src/java/org/apache/lucene/queryParser/QueryParser#getOperator().mjava","pathOld":"src/java/org/apache/lucene/queryParser/QueryParser#getOperator().mjava","sourceNew":"  /**\n   * Gets implicit operator setting, which will be either DEFAULT_OPERATOR_AND\n   * or DEFAULT_OPERATOR_OR.\n   */\n  public int getOperator() {\n    return operator;\n  }\n\n","sourceOld":"  /**\n   * Gets implicit operator setting, which will be either DEFAULT_OPERATOR_AND\n   * or DEFAULT_OPERATOR_AND.\n   */\n  public int getOperator() {\n    return operator;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e91de5ec6f7cbc7a33934e225e4c932bdf0effe7","date":1101251614,"type":3,"author":"Daniel Naber","isMerge":false,"pathNew":"src/java/org/apache/lucene/queryParser/QueryParser#getOperator().mjava","pathOld":"src/java/org/apache/lucene/queryParser/QueryParser#getOperator().mjava","sourceNew":"  /**\n   * Gets implicit operator setting, which will be either DEFAULT_OPERATOR_AND\n   * or DEFAULT_OPERATOR_OR.\n   * @deprecated use {@link #getDefaultOperator()} instead\n   */\n  public int getOperator() {\n    if(operator == AND_OPERATOR)\n      return DEFAULT_OPERATOR_AND;\n    else if(operator == OR_OPERATOR)\n      return DEFAULT_OPERATOR_OR;\n    else\n      throw new IllegalStateException(\"Unknown operator \" + operator);\n  }\n\n","sourceOld":"  /**\n   * Gets implicit operator setting, which will be either DEFAULT_OPERATOR_AND\n   * or DEFAULT_OPERATOR_OR.\n   */\n  public int getOperator() {\n    return operator;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c69e98ffd83f56083b99e5443ca713cd5783a2ae","date":1142955392,"type":4,"author":"Yonik Seeley","isMerge":false,"pathNew":"/dev/null","pathOld":"src/java/org/apache/lucene/queryParser/QueryParser#getOperator().mjava","sourceNew":null,"sourceOld":"  /**\n   * Gets implicit operator setting, which will be either DEFAULT_OPERATOR_AND\n   * or DEFAULT_OPERATOR_OR.\n   * @deprecated use {@link #getDefaultOperator()} instead\n   */\n  public int getOperator() {\n    if(operator == AND_OPERATOR)\n      return DEFAULT_OPERATOR_AND;\n    else if(operator == OR_OPERATOR)\n      return DEFAULT_OPERATOR_OR;\n    else\n      throw new IllegalStateException(\"Unknown operator \" + operator);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"bd9bdafc45175f108b0e45b1335f905caeb5786f":["9dc3f3d3156ee3e335155b8a8f44f7e926db09ef"],"c69e98ffd83f56083b99e5443ca713cd5783a2ae":["e91de5ec6f7cbc7a33934e225e4c932bdf0effe7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e91de5ec6f7cbc7a33934e225e4c932bdf0effe7":["e6ae82b0c1260ed5d01ec234fd8c3faa7bb51547"],"9dc3f3d3156ee3e335155b8a8f44f7e926db09ef":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e6ae82b0c1260ed5d01ec234fd8c3faa7bb51547":["bd9bdafc45175f108b0e45b1335f905caeb5786f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c69e98ffd83f56083b99e5443ca713cd5783a2ae"]},"commit2Childs":{"bd9bdafc45175f108b0e45b1335f905caeb5786f":["e6ae82b0c1260ed5d01ec234fd8c3faa7bb51547"],"c69e98ffd83f56083b99e5443ca713cd5783a2ae":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9dc3f3d3156ee3e335155b8a8f44f7e926db09ef"],"9dc3f3d3156ee3e335155b8a8f44f7e926db09ef":["bd9bdafc45175f108b0e45b1335f905caeb5786f"],"e91de5ec6f7cbc7a33934e225e4c932bdf0effe7":["c69e98ffd83f56083b99e5443ca713cd5783a2ae"],"e6ae82b0c1260ed5d01ec234fd8c3faa7bb51547":["e91de5ec6f7cbc7a33934e225e4c932bdf0effe7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}