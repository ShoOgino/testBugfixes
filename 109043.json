{"path":"solr/core/src/java/org/apache/solr/search/facet/FacetRangeProcessor[FacetRange].DateCalc#DateCalc(SchemaField,Date).mjava","commits":[{"id":"330e80d31a51e837b9cc906035e114377c0501dc","date":1429994103,"type":1,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetRangeProcessor[FacetRange].DateCalc#DateCalc(SchemaField,Date).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/FacetRangeProcessor[FacetRange].DateRangeEndpointCalculator#DateRangeEndpointCalculator(SchemaField,Date).mjava","sourceNew":"    public DateCalc(final SchemaField f,\n                    final Date now) {\n      super(f);\n      this.now = now;\n      if (! (field.getType() instanceof TrieDateField) ) {\n        throw new IllegalArgumentException(\"SchemaField must use field type extending TrieDateField or DateRangeField\");\n      }\n    }\n\n","sourceOld":"    public DateRangeEndpointCalculator(final SchemaField f,\n                                       final Date now) {\n      super(f);\n      this.now = now;\n      if (! (field.getType() instanceof TrieDateField) ) {\n        throw new IllegalArgumentException\n            (TYPE_ERR_MSG);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bd6d549522dba74ecfaf6104137279c657460200","date":1498176149,"type":3,"author":"Cao Manh Dat","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetRangeProcessor[FacetRange].DateCalc#DateCalc(SchemaField,Date).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/FacetRangeProcessor[FacetRange].DateCalc#DateCalc(SchemaField,Date).mjava","sourceNew":"    public DateCalc(final SchemaField f,\n                    final Date now) {\n      super(f);\n      this.now = now;\n      if (! (field.getType() instanceof TrieDateField) && !(field.getType().isPointField()) ) {\n        throw new IllegalArgumentException(\"SchemaField must use field type extending TrieDateField, DateRangeField or PointField\");\n      }\n    }\n\n","sourceOld":"    public DateCalc(final SchemaField f,\n                    final Date now) {\n      super(f);\n      this.now = now;\n      if (! (field.getType() instanceof TrieDateField) && !(field.getType().isPointField()) ) {\n        throw new IllegalArgumentException(\"SchemaField must use field type extending TrieDateField or DateRangeField\");\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0138536655ed6adafa2e07c09cd3c9572112922f","date":1497930179,"type":3,"author":"Cao Manh Dat","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetRangeProcessor[FacetRange].DateCalc#DateCalc(SchemaField,Date).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/FacetRangeProcessor[FacetRange].DateCalc#DateCalc(SchemaField,Date).mjava","sourceNew":"    public DateCalc(final SchemaField f,\n                    final Date now) {\n      super(f);\n      this.now = now;\n      if (! (field.getType() instanceof TrieDateField) && !(field.getType().isPointField()) ) {\n        throw new IllegalArgumentException(\"SchemaField must use field type extending TrieDateField or DateRangeField\");\n      }\n    }\n\n","sourceOld":"    public DateCalc(final SchemaField f,\n                    final Date now) {\n      super(f);\n      this.now = now;\n      if (! (field.getType() instanceof TrieDateField) ) {\n        throw new IllegalArgumentException(\"SchemaField must use field type extending TrieDateField or DateRangeField\");\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","date":1498028748,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetRangeProcessor[FacetRange].DateCalc#DateCalc(SchemaField,Date).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/FacetRangeProcessor[FacetRange].DateCalc#DateCalc(SchemaField,Date).mjava","sourceNew":"    public DateCalc(final SchemaField f,\n                    final Date now) {\n      super(f);\n      this.now = now;\n      if (! (field.getType() instanceof TrieDateField) && !(field.getType().isPointField()) ) {\n        throw new IllegalArgumentException(\"SchemaField must use field type extending TrieDateField or DateRangeField\");\n      }\n    }\n\n","sourceOld":"    public DateCalc(final SchemaField f,\n                    final Date now) {\n      super(f);\n      this.now = now;\n      if (! (field.getType() instanceof TrieDateField) ) {\n        throw new IllegalArgumentException(\"SchemaField must use field type extending TrieDateField or DateRangeField\");\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7dfa64bc2074fb87d0ca70095a644c1ead107e1","date":1498356339,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetRangeProcessor[FacetRange].DateCalc#DateCalc(SchemaField,Date).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/FacetRangeProcessor[FacetRange].DateCalc#DateCalc(SchemaField,Date).mjava","sourceNew":"    public DateCalc(final SchemaField f,\n                    final Date now) {\n      super(f);\n      this.now = now;\n      if (! (field.getType() instanceof TrieDateField) && !(field.getType().isPointField()) ) {\n        throw new IllegalArgumentException(\"SchemaField must use field type extending TrieDateField, DateRangeField or PointField\");\n      }\n    }\n\n","sourceOld":"    public DateCalc(final SchemaField f,\n                    final Date now) {\n      super(f);\n      this.now = now;\n      if (! (field.getType() instanceof TrieDateField) && !(field.getType().isPointField()) ) {\n        throw new IllegalArgumentException(\"SchemaField must use field type extending TrieDateField or DateRangeField\");\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetRangeProcessor[FacetRange].DateCalc#DateCalc(SchemaField,Date).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/FacetRangeProcessor[FacetRange].DateCalc#DateCalc(SchemaField,Date).mjava","sourceNew":"    public DateCalc(final SchemaField f,\n                    final Date now) {\n      super(f);\n      this.now = now;\n      if (! (field.getType() instanceof TrieDateField) && !(field.getType().isPointField()) ) {\n        throw new IllegalArgumentException(\"SchemaField must use field type extending TrieDateField, DateRangeField or PointField\");\n      }\n    }\n\n","sourceOld":"    public DateCalc(final SchemaField f,\n                    final Date now) {\n      super(f);\n      this.now = now;\n      if (! (field.getType() instanceof TrieDateField) ) {\n        throw new IllegalArgumentException(\"SchemaField must use field type extending TrieDateField or DateRangeField\");\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7b0066948e0de656266973a9b8ff51247a0c2da5","date":1580831800,"type":3,"author":"Munendra S N","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetRangeProcessor[FacetRange].DateCalc#DateCalc(SchemaField,Date).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/FacetRangeProcessor[FacetRange].DateCalc#DateCalc(SchemaField,Date).mjava","sourceNew":"    public DateCalc(final SchemaField f,\n                    final Date now) {\n      super(f);\n      this.now = now;\n      if (!(field.getType() instanceof TrieDateField || field.getType().isPointField() ||\n          field.getType() instanceof DateRangeField)) {\n        throw new IllegalArgumentException(\"SchemaField must use field type extending TrieDateField, DateRangeField or PointField\");\n      }\n    }\n\n","sourceOld":"    public DateCalc(final SchemaField f,\n                    final Date now) {\n      super(f);\n      this.now = now;\n      if (! (field.getType() instanceof TrieDateField) && !(field.getType().isPointField()) ) {\n        throw new IllegalArgumentException(\"SchemaField must use field type extending TrieDateField, DateRangeField or PointField\");\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a56a9893014b284af4d1af451e6c02e7ffdf5b6e","date":1590065972,"type":5,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetRangeProcessor.DateCalc#DateCalc(SchemaField,Date).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/FacetRangeProcessor[FacetRange].DateCalc#DateCalc(SchemaField,Date).mjava","sourceNew":"    public DateCalc(final SchemaField f,\n                    final Date now) {\n      super(f);\n      this.now = now;\n      if (!(field.getType() instanceof TrieDateField || field.getType().isPointField() ||\n          field.getType() instanceof DateRangeField)) {\n        throw new IllegalArgumentException(\"SchemaField must use field type extending TrieDateField, DateRangeField or PointField\");\n      }\n    }\n\n","sourceOld":"    public DateCalc(final SchemaField f,\n                    final Date now) {\n      super(f);\n      this.now = now;\n      if (!(field.getType() instanceof TrieDateField || field.getType().isPointField() ||\n          field.getType() instanceof DateRangeField)) {\n        throw new IllegalArgumentException(\"SchemaField must use field type extending TrieDateField, DateRangeField or PointField\");\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"330e80d31a51e837b9cc906035e114377c0501dc":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a56a9893014b284af4d1af451e6c02e7ffdf5b6e":["7b0066948e0de656266973a9b8ff51247a0c2da5"],"bd6d549522dba74ecfaf6104137279c657460200":["0138536655ed6adafa2e07c09cd3c9572112922f"],"7b0066948e0de656266973a9b8ff51247a0c2da5":["28288370235ed02234a64753cdbf0c6ec096304a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0138536655ed6adafa2e07c09cd3c9572112922f":["330e80d31a51e837b9cc906035e114377c0501dc"],"b7dfa64bc2074fb87d0ca70095a644c1ead107e1":["2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9","bd6d549522dba74ecfaf6104137279c657460200"],"28288370235ed02234a64753cdbf0c6ec096304a":["330e80d31a51e837b9cc906035e114377c0501dc","bd6d549522dba74ecfaf6104137279c657460200"],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":["330e80d31a51e837b9cc906035e114377c0501dc","0138536655ed6adafa2e07c09cd3c9572112922f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a56a9893014b284af4d1af451e6c02e7ffdf5b6e"]},"commit2Childs":{"330e80d31a51e837b9cc906035e114377c0501dc":["0138536655ed6adafa2e07c09cd3c9572112922f","28288370235ed02234a64753cdbf0c6ec096304a","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9"],"a56a9893014b284af4d1af451e6c02e7ffdf5b6e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"bd6d549522dba74ecfaf6104137279c657460200":["b7dfa64bc2074fb87d0ca70095a644c1ead107e1","28288370235ed02234a64753cdbf0c6ec096304a"],"7b0066948e0de656266973a9b8ff51247a0c2da5":["a56a9893014b284af4d1af451e6c02e7ffdf5b6e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["330e80d31a51e837b9cc906035e114377c0501dc"],"0138536655ed6adafa2e07c09cd3c9572112922f":["bd6d549522dba74ecfaf6104137279c657460200","2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9"],"b7dfa64bc2074fb87d0ca70095a644c1ead107e1":[],"28288370235ed02234a64753cdbf0c6ec096304a":["7b0066948e0de656266973a9b8ff51247a0c2da5"],"2a3ed3f77cdd034e789d00d1ca8bb7054c9fb8e9":["b7dfa64bc2074fb87d0ca70095a644c1ead107e1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b7dfa64bc2074fb87d0ca70095a644c1ead107e1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}