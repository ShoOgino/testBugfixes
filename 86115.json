{"path":"lucene/src/test/org/apache/lucene/index/TestIndexWriterReader#testExpungeDeletes().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterReader#testExpungeDeletes().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriterReader#testExpungeDeletes().mjava","sourceNew":"  public void testExpungeDeletes() throws Throwable {\n    Directory dir = new MockRAMDirectory();\n    final IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n    Document doc = new Document();\n    doc.add(new Field(\"field\", \"a b c\", Field.Store.NO, Field.Index.ANALYZED));\n    Field id = new Field(\"id\", \"\", Field.Store.NO, Field.Index.NOT_ANALYZED);\n    doc.add(id);\n    id.setValue(\"0\");\n    w.addDocument(doc);\n    id.setValue(\"1\");\n    w.addDocument(doc);\n    w.deleteDocuments(new Term(\"id\", \"0\"));\n\n    IndexReader r = w.getReader();\n    w.expungeDeletes();\n    w.close();\n    r.close();\n    r = IndexReader.open(dir, true);\n    assertEquals(1, r.numDocs());\n    assertFalse(r.hasDeletions());\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testExpungeDeletes() throws Throwable {\n    Directory dir = new MockRAMDirectory();\n    final IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n    Document doc = new Document();\n    doc.add(new Field(\"field\", \"a b c\", Field.Store.NO, Field.Index.ANALYZED));\n    Field id = new Field(\"id\", \"\", Field.Store.NO, Field.Index.NOT_ANALYZED);\n    doc.add(id);\n    id.setValue(\"0\");\n    w.addDocument(doc);\n    id.setValue(\"1\");\n    w.addDocument(doc);\n    w.deleteDocuments(new Term(\"id\", \"0\"));\n\n    IndexReader r = w.getReader();\n    w.expungeDeletes();\n    w.close();\n    r.close();\n    r = IndexReader.open(dir, true);\n    assertEquals(1, r.numDocs());\n    assertFalse(r.hasDeletions());\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d572389229127c297dd1fa5ce4758e1cec41e799","date":1273610938,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterReader#testExpungeDeletes().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterReader#testExpungeDeletes().mjava","sourceNew":"  public void testExpungeDeletes() throws Throwable {\n    Directory dir = new MockRAMDirectory();\n    final IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n    Document doc = new Document();\n    doc.add(new Field(\"field\", \"a b c\", Field.Store.NO, Field.Index.ANALYZED));\n    Field id = new Field(\"id\", \"\", Field.Store.NO, Field.Index.NOT_ANALYZED);\n    doc.add(id);\n    id.setValue(\"0\");\n    w.addDocument(doc);\n    id.setValue(\"1\");\n    w.addDocument(doc);\n    w.deleteDocuments(new Term(\"id\", \"0\"));\n\n    IndexReader r = w.getReader();\n    w.expungeDeletes();\n    w.close();\n    r.close();\n    r = IndexReader.open(dir, true);\n    assertEquals(1, r.numDocs());\n    assertFalse(r.hasDeletions());\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testExpungeDeletes() throws Throwable {\n    Directory dir = new MockRAMDirectory();\n    final IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n    Document doc = new Document();\n    doc.add(new Field(\"field\", \"a b c\", Field.Store.NO, Field.Index.ANALYZED));\n    Field id = new Field(\"id\", \"\", Field.Store.NO, Field.Index.NOT_ANALYZED);\n    doc.add(id);\n    id.setValue(\"0\");\n    w.addDocument(doc);\n    id.setValue(\"1\");\n    w.addDocument(doc);\n    w.deleteDocuments(new Term(\"id\", \"0\"));\n\n    IndexReader r = w.getReader();\n    w.expungeDeletes();\n    w.close();\n    r.close();\n    r = IndexReader.open(dir, true);\n    assertEquals(1, r.numDocs());\n    assertFalse(r.hasDeletions());\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b21422ff1d1d56499dec481f193b402e5e8def5b","date":1281472367,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterReader#testExpungeDeletes().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterReader#testExpungeDeletes().mjava","sourceNew":"  public void testExpungeDeletes() throws Throwable {\n    Directory dir = new MockRAMDirectory();\n    final IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()));\n    Document doc = new Document();\n    doc.add(new Field(\"field\", \"a b c\", Field.Store.NO, Field.Index.ANALYZED));\n    Field id = new Field(\"id\", \"\", Field.Store.NO, Field.Index.NOT_ANALYZED);\n    doc.add(id);\n    id.setValue(\"0\");\n    w.addDocument(doc);\n    id.setValue(\"1\");\n    w.addDocument(doc);\n    w.deleteDocuments(new Term(\"id\", \"0\"));\n\n    IndexReader r = w.getReader();\n    w.expungeDeletes();\n    w.close();\n    r.close();\n    r = IndexReader.open(dir, true);\n    assertEquals(1, r.numDocs());\n    assertFalse(r.hasDeletions());\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testExpungeDeletes() throws Throwable {\n    Directory dir = new MockRAMDirectory();\n    final IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n    Document doc = new Document();\n    doc.add(new Field(\"field\", \"a b c\", Field.Store.NO, Field.Index.ANALYZED));\n    Field id = new Field(\"id\", \"\", Field.Store.NO, Field.Index.NOT_ANALYZED);\n    doc.add(id);\n    id.setValue(\"0\");\n    w.addDocument(doc);\n    id.setValue(\"1\");\n    w.addDocument(doc);\n    w.deleteDocuments(new Term(\"id\", \"0\"));\n\n    IndexReader r = w.getReader();\n    w.expungeDeletes();\n    w.close();\n    r.close();\n    r = IndexReader.open(dir, true);\n    assertEquals(1, r.numDocs());\n    assertFalse(r.hasDeletions());\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c","date":1281646583,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterReader#testExpungeDeletes().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterReader#testExpungeDeletes().mjava","sourceNew":"  public void testExpungeDeletes() throws Throwable {\n    Directory dir = newDirectory(random);\n    final IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()));\n    Document doc = new Document();\n    doc.add(new Field(\"field\", \"a b c\", Field.Store.NO, Field.Index.ANALYZED));\n    Field id = new Field(\"id\", \"\", Field.Store.NO, Field.Index.NOT_ANALYZED);\n    doc.add(id);\n    id.setValue(\"0\");\n    w.addDocument(doc);\n    id.setValue(\"1\");\n    w.addDocument(doc);\n    w.deleteDocuments(new Term(\"id\", \"0\"));\n\n    IndexReader r = w.getReader();\n    w.expungeDeletes();\n    w.close();\n    r.close();\n    r = IndexReader.open(dir, true);\n    assertEquals(1, r.numDocs());\n    assertFalse(r.hasDeletions());\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testExpungeDeletes() throws Throwable {\n    Directory dir = new MockRAMDirectory();\n    final IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()));\n    Document doc = new Document();\n    doc.add(new Field(\"field\", \"a b c\", Field.Store.NO, Field.Index.ANALYZED));\n    Field id = new Field(\"id\", \"\", Field.Store.NO, Field.Index.NOT_ANALYZED);\n    doc.add(id);\n    id.setValue(\"0\");\n    w.addDocument(doc);\n    id.setValue(\"1\");\n    w.addDocument(doc);\n    w.deleteDocuments(new Term(\"id\", \"0\"));\n\n    IndexReader r = w.getReader();\n    w.expungeDeletes();\n    w.close();\n    r.close();\n    r = IndexReader.open(dir, true);\n    assertEquals(1, r.numDocs());\n    assertFalse(r.hasDeletions());\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1f653cfcf159baeaafe5d01682a911e95bba4012","date":1284122058,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterReader#testExpungeDeletes().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterReader#testExpungeDeletes().mjava","sourceNew":"  public void testExpungeDeletes() throws Throwable {\n    Directory dir = newDirectory();\n    final IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()));\n    Document doc = new Document();\n    doc.add(new Field(\"field\", \"a b c\", Field.Store.NO, Field.Index.ANALYZED));\n    Field id = new Field(\"id\", \"\", Field.Store.NO, Field.Index.NOT_ANALYZED);\n    doc.add(id);\n    id.setValue(\"0\");\n    w.addDocument(doc);\n    id.setValue(\"1\");\n    w.addDocument(doc);\n    w.deleteDocuments(new Term(\"id\", \"0\"));\n\n    IndexReader r = w.getReader();\n    w.expungeDeletes();\n    w.close();\n    r.close();\n    r = IndexReader.open(dir, true);\n    assertEquals(1, r.numDocs());\n    assertFalse(r.hasDeletions());\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testExpungeDeletes() throws Throwable {\n    Directory dir = newDirectory(random);\n    final IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()));\n    Document doc = new Document();\n    doc.add(new Field(\"field\", \"a b c\", Field.Store.NO, Field.Index.ANALYZED));\n    Field id = new Field(\"id\", \"\", Field.Store.NO, Field.Index.NOT_ANALYZED);\n    doc.add(id);\n    id.setValue(\"0\");\n    w.addDocument(doc);\n    id.setValue(\"1\");\n    w.addDocument(doc);\n    w.deleteDocuments(new Term(\"id\", \"0\"));\n\n    IndexReader r = w.getReader();\n    w.expungeDeletes();\n    w.close();\n    r.close();\n    r = IndexReader.open(dir, true);\n    assertEquals(1, r.numDocs());\n    assertFalse(r.hasDeletions());\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"132903c28af3aa6f67284b78de91c0f0a99488c2","date":1284282129,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterReader#testExpungeDeletes().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterReader#testExpungeDeletes().mjava","sourceNew":"  public void testExpungeDeletes() throws Throwable {\n    Directory dir = newDirectory();\n    final IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()));\n    Document doc = new Document();\n    doc.add(newField(\"field\", \"a b c\", Field.Store.NO, Field.Index.ANALYZED));\n    Field id = newField(\"id\", \"\", Field.Store.NO, Field.Index.NOT_ANALYZED);\n    doc.add(id);\n    id.setValue(\"0\");\n    w.addDocument(doc);\n    id.setValue(\"1\");\n    w.addDocument(doc);\n    w.deleteDocuments(new Term(\"id\", \"0\"));\n\n    IndexReader r = w.getReader();\n    w.expungeDeletes();\n    w.close();\n    r.close();\n    r = IndexReader.open(dir, true);\n    assertEquals(1, r.numDocs());\n    assertFalse(r.hasDeletions());\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testExpungeDeletes() throws Throwable {\n    Directory dir = newDirectory();\n    final IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()));\n    Document doc = new Document();\n    doc.add(new Field(\"field\", \"a b c\", Field.Store.NO, Field.Index.ANALYZED));\n    Field id = new Field(\"id\", \"\", Field.Store.NO, Field.Index.NOT_ANALYZED);\n    doc.add(id);\n    id.setValue(\"0\");\n    w.addDocument(doc);\n    id.setValue(\"1\");\n    w.addDocument(doc);\n    w.deleteDocuments(new Term(\"id\", \"0\"));\n\n    IndexReader r = w.getReader();\n    w.expungeDeletes();\n    w.close();\n    r.close();\n    r = IndexReader.open(dir, true);\n    assertEquals(1, r.numDocs());\n    assertFalse(r.hasDeletions());\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterReader#testExpungeDeletes().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterReader#testExpungeDeletes().mjava","sourceNew":"  public void testExpungeDeletes() throws Throwable {\n    Directory dir = newDirectory();\n    final IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()));\n    Document doc = new Document();\n    doc.add(newField(\"field\", \"a b c\", Field.Store.NO, Field.Index.ANALYZED));\n    Field id = newField(\"id\", \"\", Field.Store.NO, Field.Index.NOT_ANALYZED);\n    doc.add(id);\n    id.setValue(\"0\");\n    w.addDocument(doc);\n    id.setValue(\"1\");\n    w.addDocument(doc);\n    w.deleteDocuments(new Term(\"id\", \"0\"));\n\n    IndexReader r = w.getReader();\n    w.expungeDeletes();\n    w.close();\n    r.close();\n    r = IndexReader.open(dir, true);\n    assertEquals(1, r.numDocs());\n    assertFalse(r.hasDeletions());\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testExpungeDeletes() throws Throwable {\n    Directory dir = new MockRAMDirectory();\n    final IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()));\n    Document doc = new Document();\n    doc.add(new Field(\"field\", \"a b c\", Field.Store.NO, Field.Index.ANALYZED));\n    Field id = new Field(\"id\", \"\", Field.Store.NO, Field.Index.NOT_ANALYZED);\n    doc.add(id);\n    id.setValue(\"0\");\n    w.addDocument(doc);\n    id.setValue(\"1\");\n    w.addDocument(doc);\n    w.deleteDocuments(new Term(\"id\", \"0\"));\n\n    IndexReader r = w.getReader();\n    w.expungeDeletes();\n    w.close();\n    r.close();\n    r = IndexReader.open(dir, true);\n    assertEquals(1, r.numDocs());\n    assertFalse(r.hasDeletions());\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c19f985e36a65cc969e8e564fe337a0d41512075","date":1296330536,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterReader#testExpungeDeletes().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterReader#testExpungeDeletes().mjava","sourceNew":"  public void testExpungeDeletes() throws Throwable {\n    Directory dir = newDirectory();\n    final IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setMergePolicy(newLogMergePolicy()));\n    Document doc = new Document();\n    doc.add(newField(\"field\", \"a b c\", Field.Store.NO, Field.Index.ANALYZED));\n    Field id = newField(\"id\", \"\", Field.Store.NO, Field.Index.NOT_ANALYZED);\n    doc.add(id);\n    id.setValue(\"0\");\n    w.addDocument(doc);\n    id.setValue(\"1\");\n    w.addDocument(doc);\n    w.deleteDocuments(new Term(\"id\", \"0\"));\n\n    IndexReader r = w.getReader();\n    w.expungeDeletes();\n    w.close();\n    r.close();\n    r = IndexReader.open(dir, true);\n    assertEquals(1, r.numDocs());\n    assertFalse(r.hasDeletions());\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testExpungeDeletes() throws Throwable {\n    Directory dir = newDirectory();\n    final IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()));\n    Document doc = new Document();\n    doc.add(newField(\"field\", \"a b c\", Field.Store.NO, Field.Index.ANALYZED));\n    Field id = newField(\"id\", \"\", Field.Store.NO, Field.Index.NOT_ANALYZED);\n    doc.add(id);\n    id.setValue(\"0\");\n    w.addDocument(doc);\n    id.setValue(\"1\");\n    w.addDocument(doc);\n    w.deleteDocuments(new Term(\"id\", \"0\"));\n\n    IndexReader r = w.getReader();\n    w.expungeDeletes();\n    w.close();\n    r.close();\n    r = IndexReader.open(dir, true);\n    assertEquals(1, r.numDocs());\n    assertFalse(r.hasDeletions());\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterReader#testExpungeDeletes().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterReader#testExpungeDeletes().mjava","sourceNew":"  public void testExpungeDeletes() throws Throwable {\n    Directory dir = newDirectory();\n    final IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setMergePolicy(newLogMergePolicy()));\n    Document doc = new Document();\n    doc.add(newField(\"field\", \"a b c\", Field.Store.NO, Field.Index.ANALYZED));\n    Field id = newField(\"id\", \"\", Field.Store.NO, Field.Index.NOT_ANALYZED);\n    doc.add(id);\n    id.setValue(\"0\");\n    w.addDocument(doc);\n    id.setValue(\"1\");\n    w.addDocument(doc);\n    w.deleteDocuments(new Term(\"id\", \"0\"));\n\n    IndexReader r = w.getReader();\n    w.expungeDeletes();\n    w.close();\n    r.close();\n    r = IndexReader.open(dir, true);\n    assertEquals(1, r.numDocs());\n    assertFalse(r.hasDeletions());\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testExpungeDeletes() throws Throwable {\n    Directory dir = newDirectory();\n    final IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()));\n    Document doc = new Document();\n    doc.add(newField(\"field\", \"a b c\", Field.Store.NO, Field.Index.ANALYZED));\n    Field id = newField(\"id\", \"\", Field.Store.NO, Field.Index.NOT_ANALYZED);\n    doc.add(id);\n    id.setValue(\"0\");\n    w.addDocument(doc);\n    id.setValue(\"1\");\n    w.addDocument(doc);\n    w.deleteDocuments(new Term(\"id\", \"0\"));\n\n    IndexReader r = w.getReader();\n    w.expungeDeletes();\n    w.close();\n    r.close();\n    r = IndexReader.open(dir, true);\n    assertEquals(1, r.numDocs());\n    assertFalse(r.hasDeletions());\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterReader#testExpungeDeletes().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterReader#testExpungeDeletes().mjava","sourceNew":"  public void testExpungeDeletes() throws Throwable {\n    Directory dir = newDirectory();\n    final IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setMergePolicy(newLogMergePolicy()));\n    Document doc = new Document();\n    doc.add(newField(\"field\", \"a b c\", Field.Store.NO, Field.Index.ANALYZED));\n    Field id = newField(\"id\", \"\", Field.Store.NO, Field.Index.NOT_ANALYZED);\n    doc.add(id);\n    id.setValue(\"0\");\n    w.addDocument(doc);\n    id.setValue(\"1\");\n    w.addDocument(doc);\n    w.deleteDocuments(new Term(\"id\", \"0\"));\n\n    IndexReader r = w.getReader();\n    w.expungeDeletes();\n    w.close();\n    r.close();\n    r = IndexReader.open(dir, true);\n    assertEquals(1, r.numDocs());\n    assertFalse(r.hasDeletions());\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testExpungeDeletes() throws Throwable {\n    Directory dir = newDirectory();\n    final IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()));\n    Document doc = new Document();\n    doc.add(newField(\"field\", \"a b c\", Field.Store.NO, Field.Index.ANALYZED));\n    Field id = newField(\"id\", \"\", Field.Store.NO, Field.Index.NOT_ANALYZED);\n    doc.add(id);\n    id.setValue(\"0\");\n    w.addDocument(doc);\n    id.setValue(\"1\");\n    w.addDocument(doc);\n    w.deleteDocuments(new Term(\"id\", \"0\"));\n\n    IndexReader r = w.getReader();\n    w.expungeDeletes();\n    w.close();\n    r.close();\n    r = IndexReader.open(dir, true);\n    assertEquals(1, r.numDocs());\n    assertFalse(r.hasDeletions());\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f2c5f0cb44df114db4228c8f77861714b5cabaea","date":1302542431,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterReader#testExpungeDeletes().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterReader#testExpungeDeletes().mjava","sourceNew":"  public void testExpungeDeletes() throws Throwable {\n    Directory dir = newDirectory();\n    final IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy()));\n    Document doc = new Document();\n    doc.add(newField(\"field\", \"a b c\", Field.Store.NO, Field.Index.ANALYZED));\n    Field id = newField(\"id\", \"\", Field.Store.NO, Field.Index.NOT_ANALYZED);\n    doc.add(id);\n    id.setValue(\"0\");\n    w.addDocument(doc);\n    id.setValue(\"1\");\n    w.addDocument(doc);\n    w.deleteDocuments(new Term(\"id\", \"0\"));\n\n    IndexReader r = w.getReader();\n    w.expungeDeletes();\n    w.close();\n    r.close();\n    r = IndexReader.open(dir, true);\n    assertEquals(1, r.numDocs());\n    assertFalse(r.hasDeletions());\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testExpungeDeletes() throws Throwable {\n    Directory dir = newDirectory();\n    final IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setMergePolicy(newLogMergePolicy()));\n    Document doc = new Document();\n    doc.add(newField(\"field\", \"a b c\", Field.Store.NO, Field.Index.ANALYZED));\n    Field id = newField(\"id\", \"\", Field.Store.NO, Field.Index.NOT_ANALYZED);\n    doc.add(id);\n    id.setValue(\"0\");\n    w.addDocument(doc);\n    id.setValue(\"1\");\n    w.addDocument(doc);\n    w.deleteDocuments(new Term(\"id\", \"0\"));\n\n    IndexReader r = w.getReader();\n    w.expungeDeletes();\n    w.close();\n    r.close();\n    r = IndexReader.open(dir, true);\n    assertEquals(1, r.numDocs());\n    assertFalse(r.hasDeletions());\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"962d04139994fce5193143ef35615499a9a96d78","date":1302693744,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterReader#testExpungeDeletes().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterReader#testExpungeDeletes().mjava","sourceNew":"  public void testExpungeDeletes() throws Throwable {\n    Directory dir = newDirectory();\n    final IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy()));\n    Document doc = new Document();\n    doc.add(newField(\"field\", \"a b c\", Field.Store.NO, Field.Index.ANALYZED));\n    Field id = newField(\"id\", \"\", Field.Store.NO, Field.Index.NOT_ANALYZED);\n    doc.add(id);\n    id.setValue(\"0\");\n    w.addDocument(doc);\n    id.setValue(\"1\");\n    w.addDocument(doc);\n    w.deleteDocuments(new Term(\"id\", \"0\"));\n\n    IndexReader r = w.getReader();\n    w.expungeDeletes();\n    w.close();\n    r.close();\n    r = IndexReader.open(dir, true);\n    assertEquals(1, r.numDocs());\n    assertFalse(r.hasDeletions());\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testExpungeDeletes() throws Throwable {\n    Directory dir = newDirectory();\n    final IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setMergePolicy(newLogMergePolicy()));\n    Document doc = new Document();\n    doc.add(newField(\"field\", \"a b c\", Field.Store.NO, Field.Index.ANALYZED));\n    Field id = newField(\"id\", \"\", Field.Store.NO, Field.Index.NOT_ANALYZED);\n    doc.add(id);\n    id.setValue(\"0\");\n    w.addDocument(doc);\n    id.setValue(\"1\");\n    w.addDocument(doc);\n    w.deleteDocuments(new Term(\"id\", \"0\"));\n\n    IndexReader r = w.getReader();\n    w.expungeDeletes();\n    w.close();\n    r.close();\n    r = IndexReader.open(dir, true);\n    assertEquals(1, r.numDocs());\n    assertFalse(r.hasDeletions());\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterReader#testExpungeDeletes().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterReader#testExpungeDeletes().mjava","sourceNew":"  public void testExpungeDeletes() throws Throwable {\n    Directory dir = newDirectory();\n    final IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy()));\n    Document doc = new Document();\n    doc.add(newField(\"field\", \"a b c\", Field.Store.NO, Field.Index.ANALYZED));\n    Field id = newField(\"id\", \"\", Field.Store.NO, Field.Index.NOT_ANALYZED);\n    doc.add(id);\n    id.setValue(\"0\");\n    w.addDocument(doc);\n    id.setValue(\"1\");\n    w.addDocument(doc);\n    w.deleteDocuments(new Term(\"id\", \"0\"));\n\n    IndexReader r = w.getReader();\n    w.expungeDeletes();\n    w.close();\n    r.close();\n    r = IndexReader.open(dir, true);\n    assertEquals(1, r.numDocs());\n    assertFalse(r.hasDeletions());\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testExpungeDeletes() throws Throwable {\n    Directory dir = newDirectory();\n    final IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setMergePolicy(newLogMergePolicy()));\n    Document doc = new Document();\n    doc.add(newField(\"field\", \"a b c\", Field.Store.NO, Field.Index.ANALYZED));\n    Field id = newField(\"id\", \"\", Field.Store.NO, Field.Index.NOT_ANALYZED);\n    doc.add(id);\n    id.setValue(\"0\");\n    w.addDocument(doc);\n    id.setValue(\"1\");\n    w.addDocument(doc);\n    w.deleteDocuments(new Term(\"id\", \"0\"));\n\n    IndexReader r = w.getReader();\n    w.expungeDeletes();\n    w.close();\n    r.close();\n    r = IndexReader.open(dir, true);\n    assertEquals(1, r.numDocs());\n    assertFalse(r.hasDeletions());\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterReader#testExpungeDeletes().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterReader#testExpungeDeletes().mjava","sourceNew":"  public void testExpungeDeletes() throws Throwable {\n    Directory dir = newDirectory();\n    final IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy()));\n    Document doc = new Document();\n    doc.add(newField(\"field\", \"a b c\", Field.Store.NO, Field.Index.ANALYZED));\n    Field id = newField(\"id\", \"\", Field.Store.NO, Field.Index.NOT_ANALYZED);\n    doc.add(id);\n    id.setValue(\"0\");\n    w.addDocument(doc);\n    id.setValue(\"1\");\n    w.addDocument(doc);\n    w.deleteDocuments(new Term(\"id\", \"0\"));\n\n    IndexReader r = w.getReader();\n    w.expungeDeletes();\n    w.close();\n    r.close();\n    r = IndexReader.open(dir, true);\n    assertEquals(1, r.numDocs());\n    assertFalse(r.hasDeletions());\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testExpungeDeletes() throws Throwable {\n    Directory dir = newDirectory();\n    final IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setMergePolicy(newLogMergePolicy()));\n    Document doc = new Document();\n    doc.add(newField(\"field\", \"a b c\", Field.Store.NO, Field.Index.ANALYZED));\n    Field id = newField(\"id\", \"\", Field.Store.NO, Field.Index.NOT_ANALYZED);\n    doc.add(id);\n    id.setValue(\"0\");\n    w.addDocument(doc);\n    id.setValue(\"1\");\n    w.addDocument(doc);\n    w.deleteDocuments(new Term(\"id\", \"0\"));\n\n    IndexReader r = w.getReader();\n    w.expungeDeletes();\n    w.close();\n    r.close();\n    r = IndexReader.open(dir, true);\n    assertEquals(1, r.numDocs());\n    assertFalse(r.hasDeletions());\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1509f151d7692d84fae414b2b799ac06ba60fcb4","date":1314451621,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterReader#testExpungeDeletes().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterReader#testExpungeDeletes().mjava","sourceNew":"  public void testExpungeDeletes() throws Throwable {\n    Directory dir = newDirectory();\n    final IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy()));\n    Document doc = new Document();\n    doc.add(newField(\"field\", \"a b c\", TextField.TYPE_UNSTORED));\n    Field id = newField(\"id\", \"\", StringField.TYPE_UNSTORED);\n    doc.add(id);\n    id.setValue(\"0\");\n    w.addDocument(doc);\n    id.setValue(\"1\");\n    w.addDocument(doc);\n    w.deleteDocuments(new Term(\"id\", \"0\"));\n\n    IndexReader r = w.getReader();\n    w.expungeDeletes();\n    w.close();\n    r.close();\n    r = IndexReader.open(dir, true);\n    assertEquals(1, r.numDocs());\n    assertFalse(r.hasDeletions());\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testExpungeDeletes() throws Throwable {\n    Directory dir = newDirectory();\n    final IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy()));\n    Document doc = new Document();\n    doc.add(newField(\"field\", \"a b c\", Field.Store.NO, Field.Index.ANALYZED));\n    Field id = newField(\"id\", \"\", Field.Store.NO, Field.Index.NOT_ANALYZED);\n    doc.add(id);\n    id.setValue(\"0\");\n    w.addDocument(doc);\n    id.setValue(\"1\");\n    w.addDocument(doc);\n    w.deleteDocuments(new Term(\"id\", \"0\"));\n\n    IndexReader r = w.getReader();\n    w.expungeDeletes();\n    w.close();\n    r.close();\n    r = IndexReader.open(dir, true);\n    assertEquals(1, r.numDocs());\n    assertFalse(r.hasDeletions());\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"34ce7c842452c79b12c45a8feb64e4597c7110e8","date":1321637224,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterReader#testForceMergeDeletes().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterReader#testExpungeDeletes().mjava","sourceNew":"  public void testForceMergeDeletes() throws Throwable {\n    Directory dir = newDirectory();\n    final IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy()));\n    Document doc = new Document();\n    doc.add(newField(\"field\", \"a b c\", TextField.TYPE_UNSTORED));\n    Field id = newField(\"id\", \"\", StringField.TYPE_UNSTORED);\n    doc.add(id);\n    id.setValue(\"0\");\n    w.addDocument(doc);\n    id.setValue(\"1\");\n    w.addDocument(doc);\n    w.deleteDocuments(new Term(\"id\", \"0\"));\n\n    IndexReader r = w.getReader();\n    w.forceMergeDeletes();\n    w.close();\n    r.close();\n    r = IndexReader.open(dir, true);\n    assertEquals(1, r.numDocs());\n    assertFalse(r.hasDeletions());\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testExpungeDeletes() throws Throwable {\n    Directory dir = newDirectory();\n    final IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy()));\n    Document doc = new Document();\n    doc.add(newField(\"field\", \"a b c\", TextField.TYPE_UNSTORED));\n    Field id = newField(\"id\", \"\", StringField.TYPE_UNSTORED);\n    doc.add(id);\n    id.setValue(\"0\");\n    w.addDocument(doc);\n    id.setValue(\"1\");\n    w.addDocument(doc);\n    w.deleteDocuments(new Term(\"id\", \"0\"));\n\n    IndexReader r = w.getReader();\n    w.expungeDeletes();\n    w.close();\n    r.close();\n    r = IndexReader.open(dir, true);\n    assertEquals(1, r.numDocs());\n    assertFalse(r.hasDeletions());\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c":["b21422ff1d1d56499dec481f193b402e5e8def5b"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["29ef99d61cda9641b6250bf9567329a6e65f901d","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"d572389229127c297dd1fa5ce4758e1cec41e799":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"132903c28af3aa6f67284b78de91c0f0a99488c2":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"962d04139994fce5193143ef35615499a9a96d78":["bde51b089eb7f86171eb3406e38a274743f9b7ac","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["d572389229127c297dd1fa5ce4758e1cec41e799","132903c28af3aa6f67284b78de91c0f0a99488c2"],"34ce7c842452c79b12c45a8feb64e4597c7110e8":["1509f151d7692d84fae414b2b799ac06ba60fcb4"],"c19f985e36a65cc969e8e564fe337a0d41512075":["132903c28af3aa6f67284b78de91c0f0a99488c2"],"f2c5f0cb44df114db4228c8f77861714b5cabaea":["c19f985e36a65cc969e8e564fe337a0d41512075"],"1f653cfcf159baeaafe5d01682a911e95bba4012":["ab9633cb67e3c0aec3c066147a23a957d6e7ad8c"],"a3776dccca01c11e7046323cfad46a3b4a471233":["c19f985e36a65cc969e8e564fe337a0d41512075","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["132903c28af3aa6f67284b78de91c0f0a99488c2","c19f985e36a65cc969e8e564fe337a0d41512075"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["f2c5f0cb44df114db4228c8f77861714b5cabaea"],"b21422ff1d1d56499dec481f193b402e5e8def5b":["d572389229127c297dd1fa5ce4758e1cec41e799"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","c19f985e36a65cc969e8e564fe337a0d41512075"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["34ce7c842452c79b12c45a8feb64e4597c7110e8"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":[],"d572389229127c297dd1fa5ce4758e1cec41e799":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","b21422ff1d1d56499dec481f193b402e5e8def5b"],"132903c28af3aa6f67284b78de91c0f0a99488c2":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","c19f985e36a65cc969e8e564fe337a0d41512075","29ef99d61cda9641b6250bf9567329a6e65f901d"],"962d04139994fce5193143ef35615499a9a96d78":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["bde51b089eb7f86171eb3406e38a274743f9b7ac"],"34ce7c842452c79b12c45a8feb64e4597c7110e8":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c19f985e36a65cc969e8e564fe337a0d41512075":["f2c5f0cb44df114db4228c8f77861714b5cabaea","a3776dccca01c11e7046323cfad46a3b4a471233","29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"f2c5f0cb44df114db4228c8f77861714b5cabaea":["135621f3a0670a9394eb563224a3b76cc4dddc0f","962d04139994fce5193143ef35615499a9a96d78","a3776dccca01c11e7046323cfad46a3b4a471233","1509f151d7692d84fae414b2b799ac06ba60fcb4"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["135621f3a0670a9394eb563224a3b76cc4dddc0f"],"1f653cfcf159baeaafe5d01682a911e95bba4012":["132903c28af3aa6f67284b78de91c0f0a99488c2"],"a3776dccca01c11e7046323cfad46a3b4a471233":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["34ce7c842452c79b12c45a8feb64e4597c7110e8"],"b21422ff1d1d56499dec481f193b402e5e8def5b":["ab9633cb67e3c0aec3c066147a23a957d6e7ad8c"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["962d04139994fce5193143ef35615499a9a96d78"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["d572389229127c297dd1fa5ce4758e1cec41e799"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["135621f3a0670a9394eb563224a3b76cc4dddc0f","962d04139994fce5193143ef35615499a9a96d78","a3776dccca01c11e7046323cfad46a3b4a471233","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}