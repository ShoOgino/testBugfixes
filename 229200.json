{"path":"solr/core/src/test/org/apache/solr/cloud/SolrXmlInZkTest#testNotInZkAndShouldBe().mjava","commits":[{"id":"7917a219001fa51c4289d6a8e1a98606995170b7","date":1376673362,"type":0,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/SolrXmlInZkTest#testNotInZkAndShouldBe().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testNotInZkAndShouldBe() throws Exception {\n    try {\n      setUpZkAndDiskXml(false, true);\n      fail(\"Should have gotten an exception here!\");\n    } catch (InvocationTargetException ite) {\n      SolrException se = (SolrException) ite.getTargetException();\n      assertEquals(\"Should have an exception here, file not in ZK.\",\n          \"Could not load solr.xml from zookeeper\", se.getMessage());\n    } finally {\n      closeZK();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["e0571cb12a71d379cc6bd0d3b70fe1d8867a109d"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"31d4861802ca404d78ca1d15f4550eec415b9199","date":1376947894,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/SolrXmlInZkTest#testNotInZkAndShouldBe().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testNotInZkAndShouldBe() throws Exception {\n    try {\n      setUpZkAndDiskXml(false, true);\n      fail(\"Should have gotten an exception here!\");\n    } catch (InvocationTargetException ite) {\n      SolrException se = (SolrException) ite.getTargetException();\n      assertEquals(\"Should have an exception here, file not in ZK.\",\n          \"Could not load solr.xml from zookeeper\", se.getMessage());\n    } finally {\n      closeZK();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e0571cb12a71d379cc6bd0d3b70fe1d8867a109d","date":1377475564,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/SolrXmlInZkTest#testNotInZkAndShouldBe().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/SolrXmlInZkTest#testNotInZkAndShouldBe().mjava","sourceNew":"  @Test\n  public void testNotInZkAndShouldBe() throws Exception {\n    try {\n      setUpZkAndDiskXml(false, true);\n      fail(\"Should have gotten an exception here!\");\n    } catch (InvocationTargetException ite) {\n      assertEquals(\"Should have an exception here, file not in ZK.\",\n          \"Could not load solr.xml from zookeeper\", ite.getTargetException().getMessage());\n    } finally {\n      closeZK();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testNotInZkAndShouldBe() throws Exception {\n    try {\n      setUpZkAndDiskXml(false, true);\n      fail(\"Should have gotten an exception here!\");\n    } catch (InvocationTargetException ite) {\n      SolrException se = (SolrException) ite.getTargetException();\n      assertEquals(\"Should have an exception here, file not in ZK.\",\n          \"Could not load solr.xml from zookeeper\", se.getMessage());\n    } finally {\n      closeZK();\n    }\n  }\n\n","bugFix":["7917a219001fa51c4289d6a8e1a98606995170b7"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3dffec77fb8f7d0e9ca4869dddd6af94528b4576","date":1377875202,"type":0,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/SolrXmlInZkTest#testNotInZkAndShouldBe().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testNotInZkAndShouldBe() throws Exception {\n    try {\n      setUpZkAndDiskXml(false, true);\n      fail(\"Should have gotten an exception here!\");\n    } catch (InvocationTargetException ite) {\n      assertEquals(\"Should have an exception here, file not in ZK.\",\n          \"Could not load solr.xml from zookeeper\", ite.getTargetException().getMessage());\n    } finally {\n      closeZK();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f9bf0405a1117d91d112b095f83c2df500c7b3c","date":1437869727,"type":4,"author":"Jan HÃ¸ydahl","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/cloud/SolrXmlInZkTest#testNotInZkAndShouldBe().mjava","sourceNew":null,"sourceOld":"  @Test\n  public void testNotInZkAndShouldBe() throws Exception {\n    try {\n      setUpZkAndDiskXml(false, true);\n      fail(\"Should have gotten an exception here!\");\n    } catch (InvocationTargetException ite) {\n      assertEquals(\"Should have an exception here, file not in ZK.\",\n          \"Could not load solr.xml from zookeeper\", ite.getTargetException().getMessage());\n    } finally {\n      closeZK();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e0571cb12a71d379cc6bd0d3b70fe1d8867a109d":["7917a219001fa51c4289d6a8e1a98606995170b7"],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","e0571cb12a71d379cc6bd0d3b70fe1d8867a109d"],"31d4861802ca404d78ca1d15f4550eec415b9199":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","7917a219001fa51c4289d6a8e1a98606995170b7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0f9bf0405a1117d91d112b095f83c2df500c7b3c":["e0571cb12a71d379cc6bd0d3b70fe1d8867a109d"],"7917a219001fa51c4289d6a8e1a98606995170b7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0f9bf0405a1117d91d112b095f83c2df500c7b3c"]},"commit2Childs":{"e0571cb12a71d379cc6bd0d3b70fe1d8867a109d":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","0f9bf0405a1117d91d112b095f83c2df500c7b3c"],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":[],"31d4861802ca404d78ca1d15f4550eec415b9199":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","31d4861802ca404d78ca1d15f4550eec415b9199","7917a219001fa51c4289d6a8e1a98606995170b7"],"0f9bf0405a1117d91d112b095f83c2df500c7b3c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"7917a219001fa51c4289d6a8e1a98606995170b7":["e0571cb12a71d379cc6bd0d3b70fe1d8867a109d","31d4861802ca404d78ca1d15f4550eec415b9199"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","31d4861802ca404d78ca1d15f4550eec415b9199","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}