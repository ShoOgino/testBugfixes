{"path":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DocBuilder#getEntityProcessorWrapper(Entity).mjava","commits":[{"id":"4ebea96bbe279c4a8dc0cd5cd1f987cc9b33436c","date":1335805170,"type":1,"author":"James Dyer","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DocBuilder#getEntityProcessorWrapper(Entity).mjava","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DocBuilder#getEntityProcessor(DataConfig.Entity).mjava","sourceNew":"  private EntityProcessorWrapper getEntityProcessorWrapper(Entity entity) {\n    EntityProcessor entityProcessor = null;\n    if (entity.getProcessorName() == null) {\n      entityProcessor = new SqlEntityProcessor();\n    } else {\n      try {\n        entityProcessor = (EntityProcessor) loadClass(entity.getProcessorName(), dataImporter.getCore())\n                .newInstance();\n      } catch (Exception e) {\n        wrapAndThrow (SEVERE,e,\n                \"Unable to load EntityProcessor implementation for entity:\" + entity.getName());\n      }\n    }\n    EntityProcessorWrapper epw = new EntityProcessorWrapper(entityProcessor, entity, this);\n    for(Entity e1 : entity.getChildren()) {\n      epw.getChildren().add(getEntityProcessorWrapper(e1));\n    }\n      \n    return epw;\n  }\n\n","sourceOld":"  private EntityProcessorWrapper getEntityProcessor(DataConfig.Entity entity) {\n    if (entity.processor != null)\n      return entity.processor;\n    EntityProcessor entityProcessor = null;\n    if (entity.proc == null) {\n      entityProcessor = new SqlEntityProcessor();\n    } else {\n      try {\n        entityProcessor = (EntityProcessor) loadClass(entity.proc, dataImporter.getCore())\n                .newInstance();\n      } catch (Exception e) {\n        wrapAndThrow (SEVERE,e,\n                \"Unable to load EntityProcessor implementation for entity:\" + entity.name);\n      }\n    }\n    return entity.processor = new EntityProcessorWrapper(entityProcessor, this);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29d10c9c22fbdfa86201e6eb9d1cdd3a3870dde5","date":1406290788,"type":3,"author":"Erik Hatcher","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DocBuilder#getEntityProcessorWrapper(Entity).mjava","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DocBuilder#getEntityProcessorWrapper(Entity).mjava","sourceNew":"  public EntityProcessorWrapper getEntityProcessorWrapper(Entity entity) {\n    EntityProcessor entityProcessor = null;\n    if (entity.getProcessorName() == null) {\n      entityProcessor = new SqlEntityProcessor();\n    } else {\n      try {\n        entityProcessor = (EntityProcessor) loadClass(entity.getProcessorName(), dataImporter.getCore())\n                .newInstance();\n      } catch (Exception e) {\n        wrapAndThrow (SEVERE,e,\n                \"Unable to load EntityProcessor implementation for entity:\" + entity.getName());\n      }\n    }\n    EntityProcessorWrapper epw = new EntityProcessorWrapper(entityProcessor, entity, this);\n    for(Entity e1 : entity.getChildren()) {\n      epw.getChildren().add(getEntityProcessorWrapper(e1));\n    }\n      \n    return epw;\n  }\n\n","sourceOld":"  private EntityProcessorWrapper getEntityProcessorWrapper(Entity entity) {\n    EntityProcessor entityProcessor = null;\n    if (entity.getProcessorName() == null) {\n      entityProcessor = new SqlEntityProcessor();\n    } else {\n      try {\n        entityProcessor = (EntityProcessor) loadClass(entity.getProcessorName(), dataImporter.getCore())\n                .newInstance();\n      } catch (Exception e) {\n        wrapAndThrow (SEVERE,e,\n                \"Unable to load EntityProcessor implementation for entity:\" + entity.getName());\n      }\n    }\n    EntityProcessorWrapper epw = new EntityProcessorWrapper(entityProcessor, entity, this);\n    for(Entity e1 : entity.getChildren()) {\n      epw.getChildren().add(getEntityProcessorWrapper(e1));\n    }\n      \n    return epw;\n  }\n\n","bugFix":["4ebea96bbe279c4a8dc0cd5cd1f987cc9b33436c"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b88a121b875f9ae2ac50f85cf46dcb680f126357","date":1555416009,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DocBuilder#getEntityProcessorWrapper(Entity).mjava","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DocBuilder#getEntityProcessorWrapper(Entity).mjava","sourceNew":"  public EntityProcessorWrapper getEntityProcessorWrapper(Entity entity) {\n    EntityProcessor entityProcessor = null;\n    if (entity.getProcessorName() == null) {\n      entityProcessor = new SqlEntityProcessor();\n    } else {\n      try {\n        entityProcessor = (EntityProcessor) loadClass(entity.getProcessorName(), dataImporter.getCore())\n            .getConstructor().newInstance();\n      } catch (Exception e) {\n        wrapAndThrow (SEVERE,e,\n                \"Unable to load EntityProcessor implementation for entity:\" + entity.getName());\n      }\n    }\n    EntityProcessorWrapper epw = new EntityProcessorWrapper(entityProcessor, entity, this);\n    for(Entity e1 : entity.getChildren()) {\n      epw.getChildren().add(getEntityProcessorWrapper(e1));\n    }\n      \n    return epw;\n  }\n\n","sourceOld":"  public EntityProcessorWrapper getEntityProcessorWrapper(Entity entity) {\n    EntityProcessor entityProcessor = null;\n    if (entity.getProcessorName() == null) {\n      entityProcessor = new SqlEntityProcessor();\n    } else {\n      try {\n        entityProcessor = (EntityProcessor) loadClass(entity.getProcessorName(), dataImporter.getCore())\n                .newInstance();\n      } catch (Exception e) {\n        wrapAndThrow (SEVERE,e,\n                \"Unable to load EntityProcessor implementation for entity:\" + entity.getName());\n      }\n    }\n    EntityProcessorWrapper epw = new EntityProcessorWrapper(entityProcessor, entity, this);\n    for(Entity e1 : entity.getChildren()) {\n      epw.getChildren().add(getEntityProcessorWrapper(e1));\n    }\n      \n    return epw;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"024e13388acbf5562fcbb77a129620982a5e2d79","date":1591531835,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DocBuilder#getEntityProcessorWrapper(Entity).mjava","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DocBuilder#getEntityProcessorWrapper(Entity).mjava","sourceNew":"  @SuppressWarnings({\"unchecked\"})\n  public EntityProcessorWrapper getEntityProcessorWrapper(Entity entity) {\n    EntityProcessor entityProcessor = null;\n    if (entity.getProcessorName() == null) {\n      entityProcessor = new SqlEntityProcessor();\n    } else {\n      try {\n        entityProcessor = (EntityProcessor) loadClass(entity.getProcessorName(), dataImporter.getCore())\n            .getConstructor().newInstance();\n      } catch (Exception e) {\n        wrapAndThrow (SEVERE,e,\n                \"Unable to load EntityProcessor implementation for entity:\" + entity.getName());\n      }\n    }\n    EntityProcessorWrapper epw = new EntityProcessorWrapper(entityProcessor, entity, this);\n    for(Entity e1 : entity.getChildren()) {\n      epw.getChildren().add(getEntityProcessorWrapper(e1));\n    }\n      \n    return epw;\n  }\n\n","sourceOld":"  public EntityProcessorWrapper getEntityProcessorWrapper(Entity entity) {\n    EntityProcessor entityProcessor = null;\n    if (entity.getProcessorName() == null) {\n      entityProcessor = new SqlEntityProcessor();\n    } else {\n      try {\n        entityProcessor = (EntityProcessor) loadClass(entity.getProcessorName(), dataImporter.getCore())\n            .getConstructor().newInstance();\n      } catch (Exception e) {\n        wrapAndThrow (SEVERE,e,\n                \"Unable to load EntityProcessor implementation for entity:\" + entity.getName());\n      }\n    }\n    EntityProcessorWrapper epw = new EntityProcessorWrapper(entityProcessor, entity, this);\n    for(Entity e1 : entity.getChildren()) {\n      epw.getChildren().add(getEntityProcessorWrapper(e1));\n    }\n      \n    return epw;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b","date":1598712724,"type":4,"author":"Alexandre Rafalovitch","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DocBuilder#getEntityProcessorWrapper(Entity).mjava","sourceNew":null,"sourceOld":"  @SuppressWarnings({\"unchecked\"})\n  public EntityProcessorWrapper getEntityProcessorWrapper(Entity entity) {\n    EntityProcessor entityProcessor = null;\n    if (entity.getProcessorName() == null) {\n      entityProcessor = new SqlEntityProcessor();\n    } else {\n      try {\n        entityProcessor = (EntityProcessor) loadClass(entity.getProcessorName(), dataImporter.getCore())\n            .getConstructor().newInstance();\n      } catch (Exception e) {\n        wrapAndThrow (SEVERE,e,\n                \"Unable to load EntityProcessor implementation for entity:\" + entity.getName());\n      }\n    }\n    EntityProcessorWrapper epw = new EntityProcessorWrapper(entityProcessor, entity, this);\n    for(Entity e1 : entity.getChildren()) {\n      epw.getChildren().add(getEntityProcessorWrapper(e1));\n    }\n      \n    return epw;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["024e13388acbf5562fcbb77a129620982a5e2d79"],"b88a121b875f9ae2ac50f85cf46dcb680f126357":["29d10c9c22fbdfa86201e6eb9d1cdd3a3870dde5"],"024e13388acbf5562fcbb77a129620982a5e2d79":["b88a121b875f9ae2ac50f85cf46dcb680f126357"],"4ebea96bbe279c4a8dc0cd5cd1f987cc9b33436c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"29d10c9c22fbdfa86201e6eb9d1cdd3a3870dde5":["4ebea96bbe279c4a8dc0cd5cd1f987cc9b33436c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b"]},"commit2Childs":{"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b88a121b875f9ae2ac50f85cf46dcb680f126357":["024e13388acbf5562fcbb77a129620982a5e2d79"],"024e13388acbf5562fcbb77a129620982a5e2d79":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b"],"4ebea96bbe279c4a8dc0cd5cd1f987cc9b33436c":["29d10c9c22fbdfa86201e6eb9d1cdd3a3870dde5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4ebea96bbe279c4a8dc0cd5cd1f987cc9b33436c"],"29d10c9c22fbdfa86201e6eb9d1cdd3a3870dde5":["b88a121b875f9ae2ac50f85cf46dcb680f126357"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}