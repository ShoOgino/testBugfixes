{"path":"src/java/org/apache/solr/util/test/TestNumberUtils#test(Comparable,Comparable,Converter).mjava","commits":[{"id":"0c3e228bf650e96f3002a8fb73dd0c13d55af077","date":1138253849,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/util/test/TestNumberUtils#test(Comparable,Comparable,Converter).mjava","pathOld":"/dev/null","sourceNew":"  public static void test(Comparable n1, Comparable n2, Converter conv) {\n    String s1=n1.toString();\n    String s2=n2.toString();\n    String v1 = conv.toInternal(s1);\n    String v2 = conv.toInternal(s2);\n    String out1=conv.toExternal(v1);\n    String out2=conv.toExternal(v2);\n\n    int c1 = n1.compareTo(n2);\n    int c2 = v1.compareTo(v2);\n    if (c1==0 && !(c2==0) || c1 < 0 && !(c2<0) || c1>0 && !(c2>0)\n        || !out1.equals(s1) || !out2.equals(s2))\n    {\n      System.out.println(\"Comparison error:\"+s1+\",\"+s2);\n      System.out.print(\"v1=\");\n      for (int ii=0; ii<v1.length(); ii++) {\n        System.out.print(\" \" + (int)v1.charAt(ii));\n      }\n      System.out.print(\"\\nv2=\");\n      for (int ii=0; ii<v2.length(); ii++) {\n        System.out.print(\" \" + (int)v2.charAt(ii));\n      }\n      System.out.println(\"\\nout1='\"+out1+\"', out2='\" + out2 + \"'\");\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a65a1a6171dfe798e06ba17f494a7a8747a11baa","date":1212716672,"type":4,"author":"Ryan McKinley","isMerge":false,"pathNew":"/dev/null","pathOld":"src/java/org/apache/solr/util/test/TestNumberUtils#test(Comparable,Comparable,Converter).mjava","sourceNew":null,"sourceOld":"  public static void test(Comparable n1, Comparable n2, Converter conv) {\n    String s1=n1.toString();\n    String s2=n2.toString();\n    String v1 = conv.toInternal(s1);\n    String v2 = conv.toInternal(s2);\n    String out1=conv.toExternal(v1);\n    String out2=conv.toExternal(v2);\n\n    int c1 = n1.compareTo(n2);\n    int c2 = v1.compareTo(v2);\n    if (c1==0 && !(c2==0) || c1 < 0 && !(c2<0) || c1>0 && !(c2>0)\n        || !out1.equals(s1) || !out2.equals(s2))\n    {\n      System.out.println(\"Comparison error:\"+s1+\",\"+s2);\n      System.out.print(\"v1=\");\n      for (int ii=0; ii<v1.length(); ii++) {\n        System.out.print(\" \" + (int)v1.charAt(ii));\n      }\n      System.out.print(\"\\nv2=\");\n      for (int ii=0; ii<v2.length(); ii++) {\n        System.out.print(\" \" + (int)v2.charAt(ii));\n      }\n      System.out.println(\"\\nout1='\"+out1+\"', out2='\" + out2 + \"'\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a65a1a6171dfe798e06ba17f494a7a8747a11baa":["0c3e228bf650e96f3002a8fb73dd0c13d55af077"],"0c3e228bf650e96f3002a8fb73dd0c13d55af077":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a65a1a6171dfe798e06ba17f494a7a8747a11baa":[],"0c3e228bf650e96f3002a8fb73dd0c13d55af077":["a65a1a6171dfe798e06ba17f494a7a8747a11baa"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["0c3e228bf650e96f3002a8fb73dd0c13d55af077"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a65a1a6171dfe798e06ba17f494a7a8747a11baa","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}