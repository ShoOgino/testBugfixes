{"path":"src/test/org/apache/lucene/index/TestIndexWriter#testBadSegment().mjava","commits":[{"id":"11764865fb318bf86302eab36bdf9cd00c50c110","date":1190109214,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriter#testBadSegment().mjava","pathOld":"src/test/org/apache/lucene/index/TestTermVectorsWriter#testBadSegment().mjava","sourceNew":"  /**\n   * Test that no NullPointerException will be raised,\n   * when adding one document with a single, empty field\n   * and term vectors enabled.\n   * @throws IOException\n   *\n   */\n  public void testBadSegment() throws IOException {\n    MockRAMDirectory dir = new MockRAMDirectory();\n    IndexWriter ir = new IndexWriter(dir, new StandardAnalyzer(), true);\n    \n    Document document = new Document();\n    document.add(new Field(\"tvtest\", \"\", Field.Store.NO, Field.Index.TOKENIZED,\n        Field.TermVector.YES));\n    ir.addDocument(document);\n    ir.close();\n    dir.close();\n  }\n\n","sourceOld":"  /**\n   * Test that no NullPointerException will be raised,\n   * when adding one document with a single, empty field\n   * and term vectors enabled.\n   * @throws IOException\n   *\n   */\n  public void testBadSegment() throws IOException {\n    dir = new RAMDirectory();\n    IndexWriter ir = new IndexWriter(dir, new StandardAnalyzer(), true);\n    \n    Document document = new Document();\n    document.add(new Field(\"tvtest\", \"\", Field.Store.NO, Field.Index.TOKENIZED,\n        Field.TermVector.YES));\n    ir.addDocument(document);\n    ir.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fd9aba6db0f2adde620bb61f591ed18dcfee36ac","date":1201778618,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriter#testBadSegment().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriter#testBadSegment().mjava","sourceNew":"  /**\n   * Test that no NullPointerException will be raised,\n   * when adding one document with a single, empty field\n   * and term vectors enabled.\n   * @throws IOException\n   *\n   */\n  public void testBadSegment() throws IOException {\n    MockRAMDirectory dir = new MockRAMDirectory();\n    IndexWriter ir = new IndexWriter(dir, new StandardAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n    \n    Document document = new Document();\n    document.add(new Field(\"tvtest\", \"\", Field.Store.NO, Field.Index.TOKENIZED,\n        Field.TermVector.YES));\n    ir.addDocument(document);\n    ir.close();\n    dir.close();\n  }\n\n","sourceOld":"  /**\n   * Test that no NullPointerException will be raised,\n   * when adding one document with a single, empty field\n   * and term vectors enabled.\n   * @throws IOException\n   *\n   */\n  public void testBadSegment() throws IOException {\n    MockRAMDirectory dir = new MockRAMDirectory();\n    IndexWriter ir = new IndexWriter(dir, new StandardAnalyzer(), true);\n    \n    Document document = new Document();\n    document.add(new Field(\"tvtest\", \"\", Field.Store.NO, Field.Index.TOKENIZED,\n        Field.TermVector.YES));\n    ir.addDocument(document);\n    ir.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a","date":1221082732,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriter#testBadSegment().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriter#testBadSegment().mjava","sourceNew":"  /**\n   * Test that no NullPointerException will be raised,\n   * when adding one document with a single, empty field\n   * and term vectors enabled.\n   * @throws IOException\n   *\n   */\n  public void testBadSegment() throws IOException {\n    MockRAMDirectory dir = new MockRAMDirectory();\n    IndexWriter ir = new IndexWriter(dir, new StandardAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n    \n    Document document = new Document();\n    document.add(new Field(\"tvtest\", \"\", Field.Store.NO, Field.Index.ANALYZED,\n        Field.TermVector.YES));\n    ir.addDocument(document);\n    ir.close();\n    dir.close();\n  }\n\n","sourceOld":"  /**\n   * Test that no NullPointerException will be raised,\n   * when adding one document with a single, empty field\n   * and term vectors enabled.\n   * @throws IOException\n   *\n   */\n  public void testBadSegment() throws IOException {\n    MockRAMDirectory dir = new MockRAMDirectory();\n    IndexWriter ir = new IndexWriter(dir, new StandardAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n    \n    Document document = new Document();\n    document.add(new Field(\"tvtest\", \"\", Field.Store.NO, Field.Index.TOKENIZED,\n        Field.TermVector.YES));\n    ir.addDocument(document);\n    ir.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3215ae1377fc1ca1790921d75dd39cb764743b85","date":1237371771,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriter#xxxtestBadSegment().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriter#testBadSegment().mjava","sourceNew":"  /**\n   * Test that no NullPointerException will be raised,\n   * when adding one document with a single, empty field\n   * and term vectors enabled.\n   * @throws IOException\n   *\n   */\n  public void xxxtestBadSegment() throws IOException {\n    MockRAMDirectory dir = new MockRAMDirectory();\n    IndexWriter ir = new IndexWriter(dir, new StandardAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n    \n    Document document = new Document();\n    document.add(new Field(\"tvtest\", \"\", Field.Store.NO, Field.Index.ANALYZED,\n        Field.TermVector.YES));\n    ir.addDocument(document);\n    ir.close();\n    dir.close();\n  }\n\n","sourceOld":"  /**\n   * Test that no NullPointerException will be raised,\n   * when adding one document with a single, empty field\n   * and term vectors enabled.\n   * @throws IOException\n   *\n   */\n  public void testBadSegment() throws IOException {\n    MockRAMDirectory dir = new MockRAMDirectory();\n    IndexWriter ir = new IndexWriter(dir, new StandardAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n    \n    Document document = new Document();\n    document.add(new Field(\"tvtest\", \"\", Field.Store.NO, Field.Index.ANALYZED,\n        Field.TermVector.YES));\n    ir.addDocument(document);\n    ir.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"09c482d1e63332617181729a225b215c452d8a79","date":1237396006,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriter#testBadSegment().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriter#xxxtestBadSegment().mjava","sourceNew":"  /**\n   * Test that no NullPointerException will be raised,\n   * when adding one document with a single, empty field\n   * and term vectors enabled.\n   * @throws IOException\n   *\n   */\n  public void testBadSegment() throws IOException {\n    MockRAMDirectory dir = new MockRAMDirectory();\n    IndexWriter ir = new IndexWriter(dir, new StandardAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n    \n    Document document = new Document();\n    document.add(new Field(\"tvtest\", \"\", Field.Store.NO, Field.Index.ANALYZED,\n        Field.TermVector.YES));\n    ir.addDocument(document);\n    ir.close();\n    dir.close();\n  }\n\n","sourceOld":"  /**\n   * Test that no NullPointerException will be raised,\n   * when adding one document with a single, empty field\n   * and term vectors enabled.\n   * @throws IOException\n   *\n   */\n  public void xxxtestBadSegment() throws IOException {\n    MockRAMDirectory dir = new MockRAMDirectory();\n    IndexWriter ir = new IndexWriter(dir, new StandardAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n    \n    Document document = new Document();\n    document.add(new Field(\"tvtest\", \"\", Field.Store.NO, Field.Index.ANALYZED,\n        Field.TermVector.YES));\n    ir.addDocument(document);\n    ir.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4b41b991de69ba7b72d5e90cfcee25699a1a7fc9","date":1256127131,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriter#testBadSegment().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriter#testBadSegment().mjava","sourceNew":"  /**\n   * Test that no NullPointerException will be raised,\n   * when adding one document with a single, empty field\n   * and term vectors enabled.\n   * @throws IOException\n   *\n   */\n  public void testBadSegment() throws IOException {\n    MockRAMDirectory dir = new MockRAMDirectory();\n    IndexWriter ir = new IndexWriter(dir, new StandardAnalyzer(org.apache.lucene.util.Version.LUCENE_CURRENT), true, IndexWriter.MaxFieldLength.LIMITED);\n    \n    Document document = new Document();\n    document.add(new Field(\"tvtest\", \"\", Field.Store.NO, Field.Index.ANALYZED,\n        Field.TermVector.YES));\n    ir.addDocument(document);\n    ir.close();\n    dir.close();\n  }\n\n","sourceOld":"  /**\n   * Test that no NullPointerException will be raised,\n   * when adding one document with a single, empty field\n   * and term vectors enabled.\n   * @throws IOException\n   *\n   */\n  public void testBadSegment() throws IOException {\n    MockRAMDirectory dir = new MockRAMDirectory();\n    IndexWriter ir = new IndexWriter(dir, new StandardAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n    \n    Document document = new Document();\n    document.add(new Field(\"tvtest\", \"\", Field.Store.NO, Field.Index.ANALYZED,\n        Field.TermVector.YES));\n    ir.addDocument(document);\n    ir.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"55f083e91bb056b57de136da1dfc3b9b6ecc4ef6","date":1265808957,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriter#testBadSegment().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriter#testBadSegment().mjava","sourceNew":"  /**\n   * Test that no NullPointerException will be raised,\n   * when adding one document with a single, empty field\n   * and term vectors enabled.\n   * @throws IOException\n   *\n   */\n  public void testBadSegment() throws IOException {\n    MockRAMDirectory dir = new MockRAMDirectory();\n    IndexWriter ir = new IndexWriter(dir, new StandardAnalyzer(TEST_VERSION_CURRENT), true, IndexWriter.MaxFieldLength.LIMITED);\n    \n    Document document = new Document();\n    document.add(new Field(\"tvtest\", \"\", Field.Store.NO, Field.Index.ANALYZED,\n        Field.TermVector.YES));\n    ir.addDocument(document);\n    ir.close();\n    dir.close();\n  }\n\n","sourceOld":"  /**\n   * Test that no NullPointerException will be raised,\n   * when adding one document with a single, empty field\n   * and term vectors enabled.\n   * @throws IOException\n   *\n   */\n  public void testBadSegment() throws IOException {\n    MockRAMDirectory dir = new MockRAMDirectory();\n    IndexWriter ir = new IndexWriter(dir, new StandardAnalyzer(org.apache.lucene.util.Version.LUCENE_CURRENT), true, IndexWriter.MaxFieldLength.LIMITED);\n    \n    Document document = new Document();\n    document.add(new Field(\"tvtest\", \"\", Field.Store.NO, Field.Index.ANALYZED,\n        Field.TermVector.YES));\n    ir.addDocument(document);\n    ir.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1cedb00d2dd44640194401179358a2e3ba6051bf","date":1268243626,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriter#testBadSegment().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriter#testBadSegment().mjava","sourceNew":"  /**\n   * Test that no NullPointerException will be raised,\n   * when adding one document with a single, empty field\n   * and term vectors enabled.\n   * @throws IOException\n   *\n   */\n  public void testBadSegment() throws IOException {\n    MockRAMDirectory dir = new MockRAMDirectory();\n    IndexWriter ir = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT));\n    \n    Document document = new Document();\n    document.add(new Field(\"tvtest\", \"\", Store.NO, Index.ANALYZED, TermVector.YES));\n    ir.addDocument(document);\n    ir.close();\n    dir.close();\n  }\n\n","sourceOld":"  /**\n   * Test that no NullPointerException will be raised,\n   * when adding one document with a single, empty field\n   * and term vectors enabled.\n   * @throws IOException\n   *\n   */\n  public void testBadSegment() throws IOException {\n    MockRAMDirectory dir = new MockRAMDirectory();\n    IndexWriter ir = new IndexWriter(dir, new StandardAnalyzer(TEST_VERSION_CURRENT), true, IndexWriter.MaxFieldLength.LIMITED);\n    \n    Document document = new Document();\n    document.add(new Field(\"tvtest\", \"\", Field.Store.NO, Field.Index.ANALYZED,\n        Field.TermVector.YES));\n    ir.addDocument(document);\n    ir.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e52fea2c4081a1e552b98506691990be59503168","date":1268250331,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriter#testBadSegment().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriter#testBadSegment().mjava","sourceNew":"  /**\n   * Test that no NullPointerException will be raised,\n   * when adding one document with a single, empty field\n   * and term vectors enabled.\n   * @throws IOException\n   *\n   */\n  public void testBadSegment() throws IOException {\n    MockRAMDirectory dir = new MockRAMDirectory();\n    IndexWriter ir = new IndexWriter(dir, new StandardAnalyzer(TEST_VERSION_CURRENT), true, IndexWriter.MaxFieldLength.LIMITED);\n    \n    Document document = new Document();\n    document.add(new Field(\"tvtest\", \"\", Field.Store.NO, Field.Index.ANALYZED,\n        Field.TermVector.YES));\n    ir.addDocument(document);\n    ir.close();\n    dir.close();\n  }\n\n","sourceOld":"  /**\n   * Test that no NullPointerException will be raised,\n   * when adding one document with a single, empty field\n   * and term vectors enabled.\n   * @throws IOException\n   *\n   */\n  public void testBadSegment() throws IOException {\n    MockRAMDirectory dir = new MockRAMDirectory();\n    IndexWriter ir = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT));\n    \n    Document document = new Document();\n    document.add(new Field(\"tvtest\", \"\", Store.NO, Index.ANALYZED, TermVector.YES));\n    ir.addDocument(document);\n    ir.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8","date":1268494368,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriter#testBadSegment().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriter#testBadSegment().mjava","sourceNew":"  /**\n   * Test that no NullPointerException will be raised,\n   * when adding one document with a single, empty field\n   * and term vectors enabled.\n   * @throws IOException\n   *\n   */\n  public void testBadSegment() throws IOException {\n    MockRAMDirectory dir = new MockRAMDirectory();\n    IndexWriter iw = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new StandardAnalyzer(TEST_VERSION_CURRENT)));\n    \n    Document document = new Document();\n    document.add(new Field(\"tvtest\", \"\", Store.NO, Index.ANALYZED, TermVector.YES));\n    iw.addDocument(document);\n    iw.close();\n    dir.close();\n  }\n\n","sourceOld":"  /**\n   * Test that no NullPointerException will be raised,\n   * when adding one document with a single, empty field\n   * and term vectors enabled.\n   * @throws IOException\n   *\n   */\n  public void testBadSegment() throws IOException {\n    MockRAMDirectory dir = new MockRAMDirectory();\n    IndexWriter ir = new IndexWriter(dir, new StandardAnalyzer(TEST_VERSION_CURRENT), true, IndexWriter.MaxFieldLength.LIMITED);\n    \n    Document document = new Document();\n    document.add(new Field(\"tvtest\", \"\", Field.Store.NO, Field.Index.ANALYZED,\n        Field.TermVector.YES));\n    ir.addDocument(document);\n    ir.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testBadSegment().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriter#testBadSegment().mjava","sourceNew":"  /**\n   * Test that no NullPointerException will be raised,\n   * when adding one document with a single, empty field\n   * and term vectors enabled.\n   * @throws IOException\n   *\n   */\n  public void testBadSegment() throws IOException {\n    MockRAMDirectory dir = new MockRAMDirectory();\n    IndexWriter iw = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new StandardAnalyzer(TEST_VERSION_CURRENT)));\n    \n    Document document = new Document();\n    document.add(new Field(\"tvtest\", \"\", Store.NO, Index.ANALYZED, TermVector.YES));\n    iw.addDocument(document);\n    iw.close();\n    dir.close();\n  }\n\n","sourceOld":"  /**\n   * Test that no NullPointerException will be raised,\n   * when adding one document with a single, empty field\n   * and term vectors enabled.\n   * @throws IOException\n   *\n   */\n  public void testBadSegment() throws IOException {\n    MockRAMDirectory dir = new MockRAMDirectory();\n    IndexWriter iw = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new StandardAnalyzer(TEST_VERSION_CURRENT)));\n    \n    Document document = new Document();\n    document.add(new Field(\"tvtest\", \"\", Store.NO, Index.ANALYZED, TermVector.YES));\n    iw.addDocument(document);\n    iw.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"55f083e91bb056b57de136da1dfc3b9b6ecc4ef6":["4b41b991de69ba7b72d5e90cfcee25699a1a7fc9"],"11764865fb318bf86302eab36bdf9cd00c50c110":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3215ae1377fc1ca1790921d75dd39cb764743b85":["b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a"],"1cedb00d2dd44640194401179358a2e3ba6051bf":["55f083e91bb056b57de136da1dfc3b9b6ecc4ef6"],"b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a":["fd9aba6db0f2adde620bb61f591ed18dcfee36ac"],"e52fea2c4081a1e552b98506691990be59503168":["1cedb00d2dd44640194401179358a2e3ba6051bf"],"fd9aba6db0f2adde620bb61f591ed18dcfee36ac":["11764865fb318bf86302eab36bdf9cd00c50c110"],"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8":["e52fea2c4081a1e552b98506691990be59503168"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4b41b991de69ba7b72d5e90cfcee25699a1a7fc9":["09c482d1e63332617181729a225b215c452d8a79"],"09c482d1e63332617181729a225b215c452d8a79":["3215ae1377fc1ca1790921d75dd39cb764743b85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8"]},"commit2Childs":{"55f083e91bb056b57de136da1dfc3b9b6ecc4ef6":["1cedb00d2dd44640194401179358a2e3ba6051bf"],"11764865fb318bf86302eab36bdf9cd00c50c110":["fd9aba6db0f2adde620bb61f591ed18dcfee36ac"],"3215ae1377fc1ca1790921d75dd39cb764743b85":["09c482d1e63332617181729a225b215c452d8a79"],"1cedb00d2dd44640194401179358a2e3ba6051bf":["e52fea2c4081a1e552b98506691990be59503168"],"b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a":["3215ae1377fc1ca1790921d75dd39cb764743b85"],"e52fea2c4081a1e552b98506691990be59503168":["84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8"],"fd9aba6db0f2adde620bb61f591ed18dcfee36ac":["b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a"],"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["11764865fb318bf86302eab36bdf9cd00c50c110"],"4b41b991de69ba7b72d5e90cfcee25699a1a7fc9":["55f083e91bb056b57de136da1dfc3b9b6ecc4ef6"],"09c482d1e63332617181729a225b215c452d8a79":["4b41b991de69ba7b72d5e90cfcee25699a1a7fc9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}