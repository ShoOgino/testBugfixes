{"path":"solr/core/src/test/org/apache/solr/update/processor/FieldMutatingUpdateProcessorTest#testLastValue().mjava","commits":[{"id":"be9a5d1846ac0beb625ba68da060e16119d9f51e","date":1328820081,"type":0,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/processor/FieldMutatingUpdateProcessorTest#testLastValue().mjava","pathOld":"/dev/null","sourceNew":"  public void testLastValue() throws Exception {\n    SolrInputDocument d = null;\n\n    // basics\n\n    d = processAdd(\"last-value\", \n                   doc(f(\"id\", \"1111\"),\n                       f(\"foo_s\", \"string1\", \"string222\"),\n                       f(\"bar_s\", \"string3\"),\n                       f(\"yak_t\", \"string4\", \"string5\")));\n\n    assertNotNull(d);\n\n    assertEquals(Arrays.asList(\"string222\"),\n                 d.getFieldValues(\"foo_s\"));\n    assertEquals(Arrays.asList(\"string3\"), \n                 d.getFieldValues(\"bar_s\"));\n    assertEquals(Arrays.asList(\"string4\", \"string5\"), \n                 d.getFieldValues(\"yak_t\"));\n\n    // test optimizations (and force test of defaults)\n\n    SolrInputField special = null;\n\n    // test something that's definitely a SortedSet\n\n    special = new SolrInputField(\"foo_s\");\n    special.setValue(new TreeSet<String>\n                     (Arrays.asList(\"ggg\", \"first\", \"last\", \"hhh\")), 1.2F);\n    \n    d = processAdd(\"last-value\", \n                   doc(f(\"id\", \"1111\"),\n                       special));\n\n    assertNotNull(d);\n\n    assertEquals(\"last\", d.getFieldValue(\"foo_s\"));\n\n    // test something that's definitely a List\n    \n    special = new SolrInputField(\"foo_s\");\n    special.setValue(Arrays.asList(\"first\", \"ggg\", \"hhh\", \"last\"), 1.2F);\n    \n    d = processAdd(\"last-value\", \n                   doc(f(\"id\", \"1111\"),\n                       special));\n\n    assertNotNull(d);\n\n    assertEquals(\"last\", d.getFieldValue(\"foo_s\"));\n\n    // test something that is definitely not a List or SortedSet \n    // (ie: get default behavior of Collection using iterator)\n\n    special = new SolrInputField(\"foo_s\");\n    special.setValue(new LinkedHashSet<String>\n                     (Arrays.asList(\"first\", \"ggg\", \"hhh\", \"last\")), 1.2F);\n    \n    d = processAdd(\"last-value\", \n                   doc(f(\"id\", \"1111\"),\n                       special));\n\n    assertNotNull(d);\n\n    assertEquals(\"last\", d.getFieldValue(\"foo_s\"));\n    \n   \n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/processor/FieldMutatingUpdateProcessorTest#testLastValue().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/processor/FieldMutatingUpdateProcessorTest#testLastValue().mjava","sourceNew":"  public void testLastValue() throws Exception {\n    SolrInputDocument d = null;\n\n    // basics\n\n    d = processAdd(\"last-value\", \n                   doc(f(\"id\", \"1111\"),\n                       f(\"foo_s\", \"string1\", \"string222\"),\n                       f(\"bar_s\", \"string3\"),\n                       f(\"yak_t\", \"string4\", \"string5\")));\n\n    assertNotNull(d);\n\n    assertEquals(Arrays.asList(\"string222\"),\n                 d.getFieldValues(\"foo_s\"));\n    assertEquals(Arrays.asList(\"string3\"), \n                 d.getFieldValues(\"bar_s\"));\n    assertEquals(Arrays.asList(\"string4\", \"string5\"), \n                 d.getFieldValues(\"yak_t\"));\n\n    // test optimizations (and force test of defaults)\n\n    SolrInputField special = null;\n\n    // test something that's definitely a SortedSet\n\n    special = new SolrInputField(\"foo_s\");\n    special.setValue(new TreeSet<>\n                     (Arrays.asList(\"ggg\", \"first\", \"last\", \"hhh\")), 1.2F);\n    \n    d = processAdd(\"last-value\", \n                   doc(f(\"id\", \"1111\"),\n                       special));\n\n    assertNotNull(d);\n\n    assertEquals(\"last\", d.getFieldValue(\"foo_s\"));\n\n    // test something that's definitely a List\n    \n    special = new SolrInputField(\"foo_s\");\n    special.setValue(Arrays.asList(\"first\", \"ggg\", \"hhh\", \"last\"), 1.2F);\n    \n    d = processAdd(\"last-value\", \n                   doc(f(\"id\", \"1111\"),\n                       special));\n\n    assertNotNull(d);\n\n    assertEquals(\"last\", d.getFieldValue(\"foo_s\"));\n\n    // test something that is definitely not a List or SortedSet \n    // (ie: get default behavior of Collection using iterator)\n\n    special = new SolrInputField(\"foo_s\");\n    special.setValue(new LinkedHashSet<>\n                     (Arrays.asList(\"first\", \"ggg\", \"hhh\", \"last\")), 1.2F);\n    \n    d = processAdd(\"last-value\", \n                   doc(f(\"id\", \"1111\"),\n                       special));\n\n    assertNotNull(d);\n\n    assertEquals(\"last\", d.getFieldValue(\"foo_s\"));\n    \n   \n  }\n\n","sourceOld":"  public void testLastValue() throws Exception {\n    SolrInputDocument d = null;\n\n    // basics\n\n    d = processAdd(\"last-value\", \n                   doc(f(\"id\", \"1111\"),\n                       f(\"foo_s\", \"string1\", \"string222\"),\n                       f(\"bar_s\", \"string3\"),\n                       f(\"yak_t\", \"string4\", \"string5\")));\n\n    assertNotNull(d);\n\n    assertEquals(Arrays.asList(\"string222\"),\n                 d.getFieldValues(\"foo_s\"));\n    assertEquals(Arrays.asList(\"string3\"), \n                 d.getFieldValues(\"bar_s\"));\n    assertEquals(Arrays.asList(\"string4\", \"string5\"), \n                 d.getFieldValues(\"yak_t\"));\n\n    // test optimizations (and force test of defaults)\n\n    SolrInputField special = null;\n\n    // test something that's definitely a SortedSet\n\n    special = new SolrInputField(\"foo_s\");\n    special.setValue(new TreeSet<String>\n                     (Arrays.asList(\"ggg\", \"first\", \"last\", \"hhh\")), 1.2F);\n    \n    d = processAdd(\"last-value\", \n                   doc(f(\"id\", \"1111\"),\n                       special));\n\n    assertNotNull(d);\n\n    assertEquals(\"last\", d.getFieldValue(\"foo_s\"));\n\n    // test something that's definitely a List\n    \n    special = new SolrInputField(\"foo_s\");\n    special.setValue(Arrays.asList(\"first\", \"ggg\", \"hhh\", \"last\"), 1.2F);\n    \n    d = processAdd(\"last-value\", \n                   doc(f(\"id\", \"1111\"),\n                       special));\n\n    assertNotNull(d);\n\n    assertEquals(\"last\", d.getFieldValue(\"foo_s\"));\n\n    // test something that is definitely not a List or SortedSet \n    // (ie: get default behavior of Collection using iterator)\n\n    special = new SolrInputField(\"foo_s\");\n    special.setValue(new LinkedHashSet<String>\n                     (Arrays.asList(\"first\", \"ggg\", \"hhh\", \"last\")), 1.2F);\n    \n    d = processAdd(\"last-value\", \n                   doc(f(\"id\", \"1111\"),\n                       special));\n\n    assertNotNull(d);\n\n    assertEquals(\"last\", d.getFieldValue(\"foo_s\"));\n    \n   \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"acd9883560fd89e6448b2b447302fe543040cd4f","date":1488478696,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/processor/FieldMutatingUpdateProcessorTest#testLastValue().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/processor/FieldMutatingUpdateProcessorTest#testLastValue().mjava","sourceNew":"  public void testLastValue() throws Exception {\n    SolrInputDocument d = null;\n\n    // basics\n\n    d = processAdd(\"last-value\", \n                   doc(f(\"id\", \"1111\"),\n                       f(\"foo_s\", \"string1\", \"string222\"),\n                       f(\"bar_s\", \"string3\"),\n                       f(\"yak_t\", \"string4\", \"string5\")));\n\n    assertNotNull(d);\n\n    assertEquals(Arrays.asList(\"string222\"),\n                 d.getFieldValues(\"foo_s\"));\n    assertEquals(Arrays.asList(\"string3\"), \n                 d.getFieldValues(\"bar_s\"));\n    assertEquals(Arrays.asList(\"string4\", \"string5\"), \n                 d.getFieldValues(\"yak_t\"));\n\n    // test optimizations (and force test of defaults)\n\n    SolrInputField special = null;\n\n    // test something that's definitely a SortedSet\n\n    special = new SolrInputField(\"foo_s\");\n    special.setValue(new TreeSet<>\n                     (Arrays.asList(\"ggg\", \"first\", \"last\", \"hhh\")));\n    \n    d = processAdd(\"last-value\", \n                   doc(f(\"id\", \"1111\"),\n                       special));\n\n    assertNotNull(d);\n\n    assertEquals(\"last\", d.getFieldValue(\"foo_s\"));\n\n    // test something that's definitely a List\n    \n    special = new SolrInputField(\"foo_s\");\n    special.setValue(Arrays.asList(\"first\", \"ggg\", \"hhh\", \"last\"));\n    \n    d = processAdd(\"last-value\", \n                   doc(f(\"id\", \"1111\"),\n                       special));\n\n    assertNotNull(d);\n\n    assertEquals(\"last\", d.getFieldValue(\"foo_s\"));\n\n    // test something that is definitely not a List or SortedSet \n    // (ie: get default behavior of Collection using iterator)\n\n    special = new SolrInputField(\"foo_s\");\n    special.setValue(new LinkedHashSet<>\n                     (Arrays.asList(\"first\", \"ggg\", \"hhh\", \"last\")));\n    \n    d = processAdd(\"last-value\", \n                   doc(f(\"id\", \"1111\"),\n                       special));\n\n    assertNotNull(d);\n\n    assertEquals(\"last\", d.getFieldValue(\"foo_s\"));\n    \n   \n  }\n\n","sourceOld":"  public void testLastValue() throws Exception {\n    SolrInputDocument d = null;\n\n    // basics\n\n    d = processAdd(\"last-value\", \n                   doc(f(\"id\", \"1111\"),\n                       f(\"foo_s\", \"string1\", \"string222\"),\n                       f(\"bar_s\", \"string3\"),\n                       f(\"yak_t\", \"string4\", \"string5\")));\n\n    assertNotNull(d);\n\n    assertEquals(Arrays.asList(\"string222\"),\n                 d.getFieldValues(\"foo_s\"));\n    assertEquals(Arrays.asList(\"string3\"), \n                 d.getFieldValues(\"bar_s\"));\n    assertEquals(Arrays.asList(\"string4\", \"string5\"), \n                 d.getFieldValues(\"yak_t\"));\n\n    // test optimizations (and force test of defaults)\n\n    SolrInputField special = null;\n\n    // test something that's definitely a SortedSet\n\n    special = new SolrInputField(\"foo_s\");\n    special.setValue(new TreeSet<>\n                     (Arrays.asList(\"ggg\", \"first\", \"last\", \"hhh\")), 1.2F);\n    \n    d = processAdd(\"last-value\", \n                   doc(f(\"id\", \"1111\"),\n                       special));\n\n    assertNotNull(d);\n\n    assertEquals(\"last\", d.getFieldValue(\"foo_s\"));\n\n    // test something that's definitely a List\n    \n    special = new SolrInputField(\"foo_s\");\n    special.setValue(Arrays.asList(\"first\", \"ggg\", \"hhh\", \"last\"), 1.2F);\n    \n    d = processAdd(\"last-value\", \n                   doc(f(\"id\", \"1111\"),\n                       special));\n\n    assertNotNull(d);\n\n    assertEquals(\"last\", d.getFieldValue(\"foo_s\"));\n\n    // test something that is definitely not a List or SortedSet \n    // (ie: get default behavior of Collection using iterator)\n\n    special = new SolrInputField(\"foo_s\");\n    special.setValue(new LinkedHashSet<>\n                     (Arrays.asList(\"first\", \"ggg\", \"hhh\", \"last\")), 1.2F);\n    \n    d = processAdd(\"last-value\", \n                   doc(f(\"id\", \"1111\"),\n                       special));\n\n    assertNotNull(d);\n\n    assertEquals(\"last\", d.getFieldValue(\"foo_s\"));\n    \n   \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["be9a5d1846ac0beb625ba68da060e16119d9f51e"],"be9a5d1846ac0beb625ba68da060e16119d9f51e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"acd9883560fd89e6448b2b447302fe543040cd4f":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["acd9883560fd89e6448b2b447302fe543040cd4f"]},"commit2Childs":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["acd9883560fd89e6448b2b447302fe543040cd4f"],"be9a5d1846ac0beb625ba68da060e16119d9f51e":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["be9a5d1846ac0beb625ba68da060e16119d9f51e"],"acd9883560fd89e6448b2b447302fe543040cd4f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}