{"path":"client/java/solrj/src/org/apache/solr/client/solrj/embedded/EmbeddedSolrServer#EmbeddedSolrServer(SolrCore).mjava","commits":[{"id":"acdd729ace9db5d0803eea4849ddc3c2ba196127","date":1181861605,"type":0,"author":"Ryan McKinley","isMerge":false,"pathNew":"client/java/solrj/src/org/apache/solr/client/solrj/embedded/EmbeddedSolrServer#EmbeddedSolrServer(SolrCore).mjava","pathOld":"/dev/null","sourceNew":"  public EmbeddedSolrServer( SolrCore core )\n  {\n    this.core = core;\n    this.parser = new SolrRequestParsers( core, SolrConfig.config );\n    \n    // by default use the XML one\n    _processor = new XMLResponseParser();\n\n    _invariantParams = new ModifiableSolrParams();\n    _invariantParams.set( SolrParams.WT, _processor.getWriterType() );\n    _invariantParams.set( SolrParams.VERSION, \"2.2\" );\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["c28792ff7d1774c306e16afbd44ded91a417049b"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c4fe52b26cfcf59d6b3f30b128e9f5985f2fa4ef","date":1185993405,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"client/java/solrj/src/org/apache/solr/client/solrj/embedded/EmbeddedSolrServer#EmbeddedSolrServer(SolrCore).mjava","pathOld":"client/java/solrj/src/org/apache/solr/client/solrj/embedded/EmbeddedSolrServer#EmbeddedSolrServer(SolrCore).mjava","sourceNew":"  public EmbeddedSolrServer( SolrCore core )\n  {\n    this.core = core;\n    this.parser = new SolrRequestParsers( core, SolrConfig.config );\n    \n    // by default use the XML one\n    _processor = new XMLResponseParser();\n\n    _invariantParams = new ModifiableSolrParams();\n    _invariantParams.set( CommonParams.WT, _processor.getWriterType() );\n    _invariantParams.set( CommonParams.VERSION, \"2.2\" );\n  }\n\n","sourceOld":"  public EmbeddedSolrServer( SolrCore core )\n  {\n    this.core = core;\n    this.parser = new SolrRequestParsers( core, SolrConfig.config );\n    \n    // by default use the XML one\n    _processor = new XMLResponseParser();\n\n    _invariantParams = new ModifiableSolrParams();\n    _invariantParams.set( SolrParams.WT, _processor.getWriterType() );\n    _invariantParams.set( SolrParams.VERSION, \"2.2\" );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"6d6338c87060be5f66757a94945975f3bbd377a9","date":1189278234,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"client/java/solrj/src/org/apache/solr/client/solrj/embedded/EmbeddedSolrServer#EmbeddedSolrServer(SolrCore).mjava","pathOld":"client/java/solrj/src/org/apache/solr/client/solrj/embedded/EmbeddedSolrServer#EmbeddedSolrServer(SolrCore).mjava","sourceNew":"  public EmbeddedSolrServer( SolrCore core )\n  {\n    this.core = core;\n    this.parser = new SolrRequestParsers( core );\n    \n    // by default use the XML one\n    _processor = new XMLResponseParser();\n\n    _invariantParams = new ModifiableSolrParams();\n    _invariantParams.set( CommonParams.WT, _processor.getWriterType() );\n    _invariantParams.set( CommonParams.VERSION, \"2.2\" );\n  }\n\n","sourceOld":"  public EmbeddedSolrServer( SolrCore core )\n  {\n    this.core = core;\n    this.parser = new SolrRequestParsers( core, SolrConfig.config );\n    \n    // by default use the XML one\n    _processor = new XMLResponseParser();\n\n    _invariantParams = new ModifiableSolrParams();\n    _invariantParams.set( CommonParams.WT, _processor.getWriterType() );\n    _invariantParams.set( CommonParams.VERSION, \"2.2\" );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"abbfb3ad1f90df8ebf4751c8e72b2756ace50699","date":1190497478,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"client/java/solrj/src/org/apache/solr/client/solrj/embedded/EmbeddedSolrServer#EmbeddedSolrServer(SolrCore).mjava","pathOld":"client/java/solrj/src/org/apache/solr/client/solrj/embedded/EmbeddedSolrServer#EmbeddedSolrServer(SolrCore).mjava","sourceNew":"  public EmbeddedSolrServer( SolrCore core )\n  {\n    this.core = core;\n    this.parser = new SolrRequestParsers( true, Long.MAX_VALUE );\n    \n    // by default use the XML one\n    _processor = new XMLResponseParser();\n\n    _invariantParams = new ModifiableSolrParams();\n    _invariantParams.set( CommonParams.WT, _processor.getWriterType() );\n    _invariantParams.set( CommonParams.VERSION, \"2.2\" );\n  }\n\n","sourceOld":"  public EmbeddedSolrServer( SolrCore core )\n  {\n    this.core = core;\n    this.parser = new SolrRequestParsers( core );\n    \n    // by default use the XML one\n    _processor = new XMLResponseParser();\n\n    _invariantParams = new ModifiableSolrParams();\n    _invariantParams.set( CommonParams.WT, _processor.getWriterType() );\n    _invariantParams.set( CommonParams.VERSION, \"2.2\" );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"048361614025800e582bfc7a7b0329dc6fd6a95e","date":1196999392,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"client/java/solrj/src/org/apache/solr/client/solrj/embedded/EmbeddedSolrServer#EmbeddedSolrServer(SolrCore).mjava","pathOld":"client/java/solrj/src/org/apache/solr/client/solrj/embedded/EmbeddedSolrServer#EmbeddedSolrServer(SolrCore).mjava","sourceNew":"  public EmbeddedSolrServer( SolrCore core )\n  {\n    this.core = core;\n    this.useMultiCore = false;\n    this.parser = init();\n  }\n\n","sourceOld":"  public EmbeddedSolrServer( SolrCore core )\n  {\n    this.core = core;\n    this.parser = new SolrRequestParsers( true, Long.MAX_VALUE );\n    \n    // by default use the XML one\n    _processor = new XMLResponseParser();\n\n    _invariantParams = new ModifiableSolrParams();\n    _invariantParams.set( CommonParams.WT, _processor.getWriterType() );\n    _invariantParams.set( CommonParams.VERSION, \"2.2\" );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"41bffa147dec8d55cfa362ef9aca41509819ae04","date":1201997733,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"client/java/solrj/src/org/apache/solr/client/solrj/embedded/EmbeddedSolrServer#EmbeddedSolrServer(SolrCore).mjava","pathOld":"client/java/solrj/src/org/apache/solr/client/solrj/embedded/EmbeddedSolrServer#EmbeddedSolrServer(SolrCore).mjava","sourceNew":"  public EmbeddedSolrServer( SolrCore core )\n  {\n    this.core = core;\n    this.coreName = null;\n    this.parser = init();\n  }\n\n","sourceOld":"  public EmbeddedSolrServer( SolrCore core )\n  {\n    this.core = core;\n    this.useMultiCore = false;\n    this.parser = init();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"58b41d4093a9662306bdc051e4b46643deff70de","date":1205090944,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"client/java/solrj/src/org/apache/solr/client/solrj/embedded/EmbeddedSolrServer#EmbeddedSolrServer(SolrCore).mjava","pathOld":"client/java/solrj/src/org/apache/solr/client/solrj/embedded/EmbeddedSolrServer#EmbeddedSolrServer(SolrCore).mjava","sourceNew":"  public EmbeddedSolrServer( SolrCore core )\n  {\n    if ( core == null ) {\n      throw new NullPointerException(\"SolrCore instance required\");\n    }\n    this.core = core;\n    this.multicore = null;\n    this.coreName = null;\n    this.parser = init();\n  }\n\n","sourceOld":"  public EmbeddedSolrServer( SolrCore core )\n  {\n    this.core = core;\n    this.coreName = null;\n    this.parser = init();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ed2c4ed5c29fe660a8439d197834decc1649a057","date":1216696633,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"client/java/solrj/src/org/apache/solr/client/solrj/embedded/EmbeddedSolrServer#EmbeddedSolrServer(SolrCore).mjava","pathOld":"client/java/solrj/src/org/apache/solr/client/solrj/embedded/EmbeddedSolrServer#EmbeddedSolrServer(SolrCore).mjava","sourceNew":"  public EmbeddedSolrServer( SolrCore core )\n  {\n    if ( core == null ) {\n      throw new NullPointerException(\"SolrCore instance required\");\n    }\n    this.core = core;\n    this.multicore = null;\n    this.coreName = null;\n\n    _parser = new SolrRequestParsers( null );\n  }\n\n","sourceOld":"  public EmbeddedSolrServer( SolrCore core )\n  {\n    if ( core == null ) {\n      throw new NullPointerException(\"SolrCore instance required\");\n    }\n    this.core = core;\n    this.multicore = null;\n    this.coreName = null;\n    this.parser = init();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4926b5318ba4167d360445a0c5f3fc8af2cf8c49","date":1218678599,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"client/java/solrj/src/org/apache/solr/client/solrj/embedded/EmbeddedSolrServer#EmbeddedSolrServer(SolrCore).mjava","pathOld":"client/java/solrj/src/org/apache/solr/client/solrj/embedded/EmbeddedSolrServer#EmbeddedSolrServer(SolrCore).mjava","sourceNew":"  public EmbeddedSolrServer( SolrCore core )\n  {\n    if ( core == null ) {\n      throw new NullPointerException(\"SolrCore instance required\");\n    }\n    this.core = core;\n    if (core.getCoreDescriptor() != null) {\n      this.multicore = core.getCoreDescriptor().getMultiCore();\n      this.coreName = core.getCoreDescriptor().getName();\n    } else {\n      this.multicore = null;\n      this.coreName = null;\n    }\n    _parser = new SolrRequestParsers( null );\n  }\n\n","sourceOld":"  public EmbeddedSolrServer( SolrCore core )\n  {\n    if ( core == null ) {\n      throw new NullPointerException(\"SolrCore instance required\");\n    }\n    this.core = core;\n    this.multicore = null;\n    this.coreName = null;\n\n    _parser = new SolrRequestParsers( null );\n  }\n\n","bugFix":null,"bugIntro":["c28792ff7d1774c306e16afbd44ded91a417049b"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c28792ff7d1774c306e16afbd44ded91a417049b","date":1219072108,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"client/java/solrj/src/org/apache/solr/client/solrj/embedded/EmbeddedSolrServer#EmbeddedSolrServer(SolrCore).mjava","pathOld":"client/java/solrj/src/org/apache/solr/client/solrj/embedded/EmbeddedSolrServer#EmbeddedSolrServer(SolrCore).mjava","sourceNew":"  /**\n   * Use the other constructor using a CoreContainer and a name.\n   * @param core\n   * @deprecated\n   */\n  @Deprecated\n  public EmbeddedSolrServer( SolrCore core )\n  {\n    if ( core == null ) {\n      throw new NullPointerException(\"SolrCore instance required\");\n    }\n    CoreDescriptor dcore = core.getCoreDescriptor();\n    if (dcore == null)\n      throw new NullPointerException(\"CoreDescriptor required\");\n    \n    CoreContainer cores = dcore.getCoreContainer();\n    if (cores == null)\n      throw new NullPointerException(\"CoreContainer required\");\n    \n    coreName = dcore.getName();\n    coreContainer = cores;\n    _parser = new SolrRequestParsers( null );\n  }\n\n","sourceOld":"  public EmbeddedSolrServer( SolrCore core )\n  {\n    if ( core == null ) {\n      throw new NullPointerException(\"SolrCore instance required\");\n    }\n    this.core = core;\n    if (core.getCoreDescriptor() != null) {\n      this.multicore = core.getCoreDescriptor().getMultiCore();\n      this.coreName = core.getCoreDescriptor().getName();\n    } else {\n      this.multicore = null;\n      this.coreName = null;\n    }\n    _parser = new SolrRequestParsers( null );\n  }\n\n","bugFix":["4926b5318ba4167d360445a0c5f3fc8af2cf8c49","acdd729ace9db5d0803eea4849ddc3c2ba196127"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e3602d5eab954caecc726ab136ad580ac1ceb917","date":1228676831,"type":5,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/webapp/src/org/apache/solr/client/solrj/embedded/EmbeddedSolrServer#EmbeddedSolrServer(SolrCore).mjava","pathOld":"client/java/solrj/src/org/apache/solr/client/solrj/embedded/EmbeddedSolrServer#EmbeddedSolrServer(SolrCore).mjava","sourceNew":"  /**\n   * Use the other constructor using a CoreContainer and a name.\n   * @param core\n   * @deprecated\n   */\n  @Deprecated\n  public EmbeddedSolrServer( SolrCore core )\n  {\n    if ( core == null ) {\n      throw new NullPointerException(\"SolrCore instance required\");\n    }\n    CoreDescriptor dcore = core.getCoreDescriptor();\n    if (dcore == null)\n      throw new NullPointerException(\"CoreDescriptor required\");\n    \n    CoreContainer cores = dcore.getCoreContainer();\n    if (cores == null)\n      throw new NullPointerException(\"CoreContainer required\");\n    \n    coreName = dcore.getName();\n    coreContainer = cores;\n    _parser = new SolrRequestParsers( null );\n  }\n\n","sourceOld":"  /**\n   * Use the other constructor using a CoreContainer and a name.\n   * @param core\n   * @deprecated\n   */\n  @Deprecated\n  public EmbeddedSolrServer( SolrCore core )\n  {\n    if ( core == null ) {\n      throw new NullPointerException(\"SolrCore instance required\");\n    }\n    CoreDescriptor dcore = core.getCoreDescriptor();\n    if (dcore == null)\n      throw new NullPointerException(\"CoreDescriptor required\");\n    \n    CoreContainer cores = dcore.getCoreContainer();\n    if (cores == null)\n      throw new NullPointerException(\"CoreContainer required\");\n    \n    coreName = dcore.getName();\n    coreContainer = cores;\n    _parser = new SolrRequestParsers( null );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6d6338c87060be5f66757a94945975f3bbd377a9":["c4fe52b26cfcf59d6b3f30b128e9f5985f2fa4ef"],"ed2c4ed5c29fe660a8439d197834decc1649a057":["58b41d4093a9662306bdc051e4b46643deff70de"],"41bffa147dec8d55cfa362ef9aca41509819ae04":["048361614025800e582bfc7a7b0329dc6fd6a95e"],"acdd729ace9db5d0803eea4849ddc3c2ba196127":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"c28792ff7d1774c306e16afbd44ded91a417049b":["4926b5318ba4167d360445a0c5f3fc8af2cf8c49"],"58b41d4093a9662306bdc051e4b46643deff70de":["41bffa147dec8d55cfa362ef9aca41509819ae04"],"abbfb3ad1f90df8ebf4751c8e72b2756ace50699":["6d6338c87060be5f66757a94945975f3bbd377a9"],"c4fe52b26cfcf59d6b3f30b128e9f5985f2fa4ef":["acdd729ace9db5d0803eea4849ddc3c2ba196127"],"e3602d5eab954caecc726ab136ad580ac1ceb917":["c28792ff7d1774c306e16afbd44ded91a417049b"],"4926b5318ba4167d360445a0c5f3fc8af2cf8c49":["ed2c4ed5c29fe660a8439d197834decc1649a057"],"048361614025800e582bfc7a7b0329dc6fd6a95e":["abbfb3ad1f90df8ebf4751c8e72b2756ace50699"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"6d6338c87060be5f66757a94945975f3bbd377a9":["abbfb3ad1f90df8ebf4751c8e72b2756ace50699"],"ed2c4ed5c29fe660a8439d197834decc1649a057":["4926b5318ba4167d360445a0c5f3fc8af2cf8c49"],"41bffa147dec8d55cfa362ef9aca41509819ae04":["58b41d4093a9662306bdc051e4b46643deff70de"],"acdd729ace9db5d0803eea4849ddc3c2ba196127":["c4fe52b26cfcf59d6b3f30b128e9f5985f2fa4ef"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["acdd729ace9db5d0803eea4849ddc3c2ba196127"],"58b41d4093a9662306bdc051e4b46643deff70de":["ed2c4ed5c29fe660a8439d197834decc1649a057"],"c28792ff7d1774c306e16afbd44ded91a417049b":["e3602d5eab954caecc726ab136ad580ac1ceb917"],"abbfb3ad1f90df8ebf4751c8e72b2756ace50699":["048361614025800e582bfc7a7b0329dc6fd6a95e"],"c4fe52b26cfcf59d6b3f30b128e9f5985f2fa4ef":["6d6338c87060be5f66757a94945975f3bbd377a9"],"e3602d5eab954caecc726ab136ad580ac1ceb917":[],"048361614025800e582bfc7a7b0329dc6fd6a95e":["41bffa147dec8d55cfa362ef9aca41509819ae04"],"4926b5318ba4167d360445a0c5f3fc8af2cf8c49":["c28792ff7d1774c306e16afbd44ded91a417049b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e3602d5eab954caecc726ab136ad580ac1ceb917","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}