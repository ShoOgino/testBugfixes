{"path":"lucene/core/src/java/org/apache/lucene/util/bkd/HeapPointReader#HeapPointReader(List[byte[]],int,int,long[],int[],int,int).mjava","commits":[{"id":"e3ce1ef883d26aa73919aa2d53991726e96caa13","date":1445421402,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/bkd/HeapPointReader#HeapPointReader(List[byte[]],int,int,long[],int[],int,int).mjava","pathOld":"/dev/null","sourceNew":"  HeapPointReader(List<byte[]> blocks, int valuesPerBlock, int packedBytesLength, long[] ords, int[] docIDs, int start, int end) {\n    this.blocks = blocks;\n    this.valuesPerBlock = valuesPerBlock;\n    this.ords = ords;\n    this.docIDs = docIDs;\n    curRead = start-1;\n    this.end = end;\n    this.packedBytesLength = packedBytesLength;\n    scratch = new byte[packedBytesLength];\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9a5a0f27d9486cd33de88627ed3d2ff8dc5074ca","date":1457777566,"type":5,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/bkd/HeapPointReader#HeapPointReader(List[byte[]],int,int,int[],long[],int[],int,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/bkd/HeapPointReader#HeapPointReader(List[byte[]],int,int,long[],int[],int,int).mjava","sourceNew":"  HeapPointReader(List<byte[]> blocks, int valuesPerBlock, int packedBytesLength, int[] ords, long[] ordsLong, int[] docIDs, int start, int end) {\n    this.blocks = blocks;\n    this.valuesPerBlock = valuesPerBlock;\n    this.ords = ords;\n    this.ordsLong = ordsLong;\n    this.docIDs = docIDs;\n    curRead = start-1;\n    this.end = end;\n    this.packedBytesLength = packedBytesLength;\n    scratch = new byte[packedBytesLength];\n  }\n\n","sourceOld":"  HeapPointReader(List<byte[]> blocks, int valuesPerBlock, int packedBytesLength, long[] ords, int[] docIDs, int start, int end) {\n    this.blocks = blocks;\n    this.valuesPerBlock = valuesPerBlock;\n    this.ords = ords;\n    this.docIDs = docIDs;\n    curRead = start-1;\n    this.end = end;\n    this.packedBytesLength = packedBytesLength;\n    scratch = new byte[packedBytesLength];\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9a5a0f27d9486cd33de88627ed3d2ff8dc5074ca":["e3ce1ef883d26aa73919aa2d53991726e96caa13"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e3ce1ef883d26aa73919aa2d53991726e96caa13":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9a5a0f27d9486cd33de88627ed3d2ff8dc5074ca"]},"commit2Childs":{"9a5a0f27d9486cd33de88627ed3d2ff8dc5074ca":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e3ce1ef883d26aa73919aa2d53991726e96caa13"],"e3ce1ef883d26aa73919aa2d53991726e96caa13":["9a5a0f27d9486cd33de88627ed3d2ff8dc5074ca"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}