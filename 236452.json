{"path":"solr/core/src/test/org/apache/solr/search/function/TestFunctionQuery#makeExternalFile(String,String).mjava","commits":[{"id":"9d3d365762604952e436b51980101dfc84cc1b3e","date":1396298116,"type":1,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/function/TestFunctionQuery#makeExternalFile(String,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/search/function/TestFunctionQuery#makeExternalFile(String,String,String).mjava","sourceNew":"  void makeExternalFile(String field, String contents) {\n    String dir = h.getCore().getDataDir();\n    String filename = dir + \"/external_\" + field + \".\" + (start++);\n    try {\n      Writer out = new OutputStreamWriter(new FileOutputStream(filename), StandardCharsets.UTF_8);\n      out.write(contents);\n      out.close();\n    } catch (Exception e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","sourceOld":"  void makeExternalFile(String field, String contents, String charset) {\n    String dir = h.getCore().getDataDir();\n    String filename = dir + \"/external_\" + field + \".\" + (start++);\n    try {\n      Writer out = new OutputStreamWriter(new FileOutputStream(filename), charset);\n      out.write(contents);\n      out.close();\n    } catch (Exception e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5eb2511ababf862ea11e10761c70ee560cd84510","date":1396607225,"type":1,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/search/function/TestFunctionQuery#makeExternalFile(String,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/search/function/TestFunctionQuery#makeExternalFile(String,String,String).mjava","sourceNew":"  void makeExternalFile(String field, String contents) {\n    String dir = h.getCore().getDataDir();\n    String filename = dir + \"/external_\" + field + \".\" + (start++);\n    try {\n      Writer out = new OutputStreamWriter(new FileOutputStream(filename), StandardCharsets.UTF_8);\n      out.write(contents);\n      out.close();\n    } catch (Exception e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","sourceOld":"  void makeExternalFile(String field, String contents, String charset) {\n    String dir = h.getCore().getDataDir();\n    String filename = dir + \"/external_\" + field + \".\" + (start++);\n    try {\n      Writer out = new OutputStreamWriter(new FileOutputStream(filename), charset);\n      out.write(contents);\n      out.close();\n    } catch (Exception e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0d1071f88e3697a2eb3ed682c527f5c35859bad0","date":1565425271,"type":3,"author":"Munendra S N","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/function/TestFunctionQuery#makeExternalFile(String,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/search/function/TestFunctionQuery#makeExternalFile(String,String).mjava","sourceNew":"  void makeExternalFile(String field, String contents) {\n    String dir = h.getCore().getDataDir();\n    String filename = dir + \"/external_\" + field + \".\" + (start++);\n\n    try (Writer out = new OutputStreamWriter(new FileOutputStream(filename), StandardCharsets.UTF_8)) {\n      out.write(contents);\n    } catch (Exception e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","sourceOld":"  void makeExternalFile(String field, String contents) {\n    String dir = h.getCore().getDataDir();\n    String filename = dir + \"/external_\" + field + \".\" + (start++);\n    try {\n      Writer out = new OutputStreamWriter(new FileOutputStream(filename), StandardCharsets.UTF_8);\n      out.write(contents);\n      out.close();\n    } catch (Exception e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5eb2511ababf862ea11e10761c70ee560cd84510":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","9d3d365762604952e436b51980101dfc84cc1b3e"],"9d3d365762604952e436b51980101dfc84cc1b3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0d1071f88e3697a2eb3ed682c527f5c35859bad0":["9d3d365762604952e436b51980101dfc84cc1b3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0d1071f88e3697a2eb3ed682c527f5c35859bad0"]},"commit2Childs":{"5eb2511ababf862ea11e10761c70ee560cd84510":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5eb2511ababf862ea11e10761c70ee560cd84510","9d3d365762604952e436b51980101dfc84cc1b3e"],"9d3d365762604952e436b51980101dfc84cc1b3e":["5eb2511ababf862ea11e10761c70ee560cd84510","0d1071f88e3697a2eb3ed682c527f5c35859bad0"],"0d1071f88e3697a2eb3ed682c527f5c35859bad0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5eb2511ababf862ea11e10761c70ee560cd84510","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}