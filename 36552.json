{"path":"solr/core/src/test/org/apache/solr/highlight/TestUnifiedSolrHighlighter#testBreakIteratorWhole().mjava","commits":[{"id":"9b477a26b744a7d5f4b94bdb5886d59cc82e3c24","date":1483849957,"type":1,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/highlight/TestUnifiedSolrHighlighter#testBreakIteratorWhole().mjava","pathOld":"solr/core/src/test/org/apache/solr/highlight/TestUnifiedSolrHighlighter#testBreakIterator2().mjava","sourceNew":"  public void testBreakIteratorWhole() {\n    assertU(adoc(\"text\", \"Document one has a first sentence. Document two has a second sentence.\", \"id\", \"103\"));\n    assertU(commit());\n    assertQ(\"different breakiterator\", \n        req(\"q\", \"text:document\", \"sort\", \"id asc\", \"hl\", \"true\", \"hl.bs.type\", \"WHOLE\", \"hl.fragsize\", \"-1\"),\n        \"//lst[@name='highlighting']/lst[@name='103']/arr[@name='text']/str='<em>Document</em> one has a first sentence. <em>Document</em> two has a second sentence.'\");\n  }\n\n","sourceOld":"  public void testBreakIterator2() {\n    assertU(adoc(\"text\", \"Document one has a first sentence. Document two has a second sentence.\", \"id\", \"103\"));\n    assertU(commit());\n    assertQ(\"different breakiterator\", \n        req(\"q\", \"text:document\", \"sort\", \"id asc\", \"hl\", \"true\", \"hl.bs.type\", \"WHOLE\"),\n        \"//lst[@name='highlighting']/lst[@name='103']/arr[@name='text']/str='<em>Document</em> one has a first sentence. <em>Document</em> two has a second sentence.'\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"09ab8ee44ca898536770d0106a7c0ee4be4f0eb7","date":1484239864,"type":1,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/highlight/TestUnifiedSolrHighlighter#testBreakIteratorWhole().mjava","pathOld":"solr/core/src/test/org/apache/solr/highlight/TestUnifiedSolrHighlighter#testBreakIterator2().mjava","sourceNew":"  public void testBreakIteratorWhole() {\n    assertU(adoc(\"text\", \"Document one has a first sentence. Document two has a second sentence.\", \"id\", \"103\"));\n    assertU(commit());\n    assertQ(\"different breakiterator\", \n        req(\"q\", \"text:document\", \"sort\", \"id asc\", \"hl\", \"true\", \"hl.bs.type\", \"WHOLE\", \"hl.fragsize\", \"-1\"),\n        \"//lst[@name='highlighting']/lst[@name='103']/arr[@name='text']/str='<em>Document</em> one has a first sentence. <em>Document</em> two has a second sentence.'\");\n  }\n\n","sourceOld":"  public void testBreakIterator2() {\n    assertU(adoc(\"text\", \"Document one has a first sentence. Document two has a second sentence.\", \"id\", \"103\"));\n    assertU(commit());\n    assertQ(\"different breakiterator\", \n        req(\"q\", \"text:document\", \"sort\", \"id asc\", \"hl\", \"true\", \"hl.bs.type\", \"WHOLE\"),\n        \"//lst[@name='highlighting']/lst[@name='103']/arr[@name='text']/str='<em>Document</em> one has a first sentence. <em>Document</em> two has a second sentence.'\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e4876c675e62c804368ecef725b3a4041b3accbe","date":1484658471,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/highlight/TestUnifiedSolrHighlighter#testBreakIteratorWhole().mjava","pathOld":"solr/core/src/test/org/apache/solr/highlight/TestUnifiedSolrHighlighter#testBreakIteratorWhole().mjava","sourceNew":"  public void testBreakIteratorWhole() {\n    assertU(adoc(\"text\", \"Document one has a first sentence. Document two has a second sentence.\", \"id\", \"103\"));\n    assertU(commit());\n    assertQ(\"WHOLE breakiterator\",\n        req(\"q\", \"text:document\", \"sort\", \"id asc\", \"hl\", \"true\", \"hl.bs.type\", \"WHOLE\", \"hl.fragsize\", \"-1\"),\n        \"//lst[@name='highlighting']/lst[@name='103']/arr[@name='text']/str='<em>Document</em> one has a first sentence. <em>Document</em> two has a second sentence.'\");\n    assertQ(\"hl.fragsize 0 is equivalent to WHOLE\",\n        req(\"q\", \"text:document\", \"sort\", \"id asc\", \"hl\", \"true\", \"hl.fragsize\", \"0\"),\n        \"//lst[@name='highlighting']/lst[@name='103']/arr[@name='text']/str='<em>Document</em> one has a first sentence. <em>Document</em> two has a second sentence.'\");\n  }\n\n","sourceOld":"  public void testBreakIteratorWhole() {\n    assertU(adoc(\"text\", \"Document one has a first sentence. Document two has a second sentence.\", \"id\", \"103\"));\n    assertU(commit());\n    assertQ(\"different breakiterator\", \n        req(\"q\", \"text:document\", \"sort\", \"id asc\", \"hl\", \"true\", \"hl.bs.type\", \"WHOLE\", \"hl.fragsize\", \"-1\"),\n        \"//lst[@name='highlighting']/lst[@name='103']/arr[@name='text']/str='<em>Document</em> one has a first sentence. <em>Document</em> two has a second sentence.'\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"302d34f2c66e8d489ee13078305c330cbf67b226","date":1484754357,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/highlight/TestUnifiedSolrHighlighter#testBreakIteratorWhole().mjava","pathOld":"solr/core/src/test/org/apache/solr/highlight/TestUnifiedSolrHighlighter#testBreakIteratorWhole().mjava","sourceNew":"  public void testBreakIteratorWhole() {\n    assertU(adoc(\"text\", \"Document one has a first sentence. Document two has a second sentence.\", \"id\", \"103\"));\n    assertU(commit());\n    assertQ(\"WHOLE breakiterator\",\n        req(\"q\", \"text:document\", \"sort\", \"id asc\", \"hl\", \"true\", \"hl.bs.type\", \"WHOLE\", \"hl.fragsize\", \"-1\"),\n        \"//lst[@name='highlighting']/lst[@name='103']/arr[@name='text']/str='<em>Document</em> one has a first sentence. <em>Document</em> two has a second sentence.'\");\n    assertQ(\"hl.fragsize 0 is equivalent to WHOLE\",\n        req(\"q\", \"text:document\", \"sort\", \"id asc\", \"hl\", \"true\", \"hl.fragsize\", \"0\"),\n        \"//lst[@name='highlighting']/lst[@name='103']/arr[@name='text']/str='<em>Document</em> one has a first sentence. <em>Document</em> two has a second sentence.'\");\n  }\n\n","sourceOld":"  public void testBreakIteratorWhole() {\n    assertU(adoc(\"text\", \"Document one has a first sentence. Document two has a second sentence.\", \"id\", \"103\"));\n    assertU(commit());\n    assertQ(\"different breakiterator\", \n        req(\"q\", \"text:document\", \"sort\", \"id asc\", \"hl\", \"true\", \"hl.bs.type\", \"WHOLE\", \"hl.fragsize\", \"-1\"),\n        \"//lst[@name='highlighting']/lst[@name='103']/arr[@name='text']/str='<em>Document</em> one has a first sentence. <em>Document</em> two has a second sentence.'\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9b477a26b744a7d5f4b94bdb5886d59cc82e3c24":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e4876c675e62c804368ecef725b3a4041b3accbe":["9b477a26b744a7d5f4b94bdb5886d59cc82e3c24"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"09ab8ee44ca898536770d0106a7c0ee4be4f0eb7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","9b477a26b744a7d5f4b94bdb5886d59cc82e3c24"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e4876c675e62c804368ecef725b3a4041b3accbe"],"302d34f2c66e8d489ee13078305c330cbf67b226":["09ab8ee44ca898536770d0106a7c0ee4be4f0eb7","e4876c675e62c804368ecef725b3a4041b3accbe"]},"commit2Childs":{"9b477a26b744a7d5f4b94bdb5886d59cc82e3c24":["e4876c675e62c804368ecef725b3a4041b3accbe","09ab8ee44ca898536770d0106a7c0ee4be4f0eb7"],"e4876c675e62c804368ecef725b3a4041b3accbe":["cd5edd1f2b162a5cfa08efd17851a07373a96817","302d34f2c66e8d489ee13078305c330cbf67b226"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9b477a26b744a7d5f4b94bdb5886d59cc82e3c24","09ab8ee44ca898536770d0106a7c0ee4be4f0eb7"],"09ab8ee44ca898536770d0106a7c0ee4be4f0eb7":["302d34f2c66e8d489ee13078305c330cbf67b226"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"302d34f2c66e8d489ee13078305c330cbf67b226":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","302d34f2c66e8d489ee13078305c330cbf67b226"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}