{"path":"modules/spatial-lucene/src/main/java/org/apache/lucene/spatial/base/distance/DistanceUtils#distVincentyRAD(double,double,double,double).mjava","commits":[{"id":"b17c5c53627893d93f9261826cc6d9c447c5ee3a","date":1329777932,"type":0,"author":"David Wayne Smiley","isMerge":false,"pathNew":"modules/spatial-lucene/src/main/java/org/apache/lucene/spatial/base/distance/DistanceUtils#distVincentyRAD(double,double,double,double).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Calculates the great circle distance using the Vincenty Formula, simplified for a spherical model. This formula\n   * is accurate for any pair of points. The equation\n   * was taken from <a href=\"http://en.wikipedia.org/wiki/Great-circle_distance\">Wikipedia</a>.\n   * <p/>\n   * The arguments are in radians, and the result is in radians.\n   */\n  public static double distVincentyRAD(double lat1, double lon1, double lat2, double lon2) {\n    // Check for same position\n    if (lat1 == lat2 && lon1 == lon2)\n      return 0.0;\n\n    double cosLat1 = Math.cos(lat1);\n    double cosLat2 = Math.cos(lat2);\n    double sinLat1 = Math.sin(lat1);\n    double sinLat2 = Math.sin(lat2);\n    double dLon = lon2 - lon1;\n    double cosDLon = Math.cos(dLon);\n    double sinDLon = Math.sin(dLon);\n\n    double a = cosLat2 * sinDLon;\n    double b = cosLat1*sinLat2 - sinLat1*cosLat2*cosDLon;\n    double c = sinLat1*sinLat2 + cosLat1*cosLat2*cosDLon;\n    \n    return Math.atan2(Math.sqrt(a*a+b*b),c);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ef186f4ac90644cd4e8df6b66acb56a52e5ca602","date":1329778037,"type":5,"author":"David Wayne Smiley","isMerge":false,"pathNew":"modules/spatial/src/main/java/org/apache/lucene/spatial/base/distance/DistanceUtils#distVincentyRAD(double,double,double,double).mjava","pathOld":"modules/spatial-lucene/src/main/java/org/apache/lucene/spatial/base/distance/DistanceUtils#distVincentyRAD(double,double,double,double).mjava","sourceNew":"  /**\n   * Calculates the great circle distance using the Vincenty Formula, simplified for a spherical model. This formula\n   * is accurate for any pair of points. The equation\n   * was taken from <a href=\"http://en.wikipedia.org/wiki/Great-circle_distance\">Wikipedia</a>.\n   * <p/>\n   * The arguments are in radians, and the result is in radians.\n   */\n  public static double distVincentyRAD(double lat1, double lon1, double lat2, double lon2) {\n    // Check for same position\n    if (lat1 == lat2 && lon1 == lon2)\n      return 0.0;\n\n    double cosLat1 = Math.cos(lat1);\n    double cosLat2 = Math.cos(lat2);\n    double sinLat1 = Math.sin(lat1);\n    double sinLat2 = Math.sin(lat2);\n    double dLon = lon2 - lon1;\n    double cosDLon = Math.cos(dLon);\n    double sinDLon = Math.sin(dLon);\n\n    double a = cosLat2 * sinDLon;\n    double b = cosLat1*sinLat2 - sinLat1*cosLat2*cosDLon;\n    double c = sinLat1*sinLat2 + cosLat1*cosLat2*cosDLon;\n    \n    return Math.atan2(Math.sqrt(a*a+b*b),c);\n  }\n\n","sourceOld":"  /**\n   * Calculates the great circle distance using the Vincenty Formula, simplified for a spherical model. This formula\n   * is accurate for any pair of points. The equation\n   * was taken from <a href=\"http://en.wikipedia.org/wiki/Great-circle_distance\">Wikipedia</a>.\n   * <p/>\n   * The arguments are in radians, and the result is in radians.\n   */\n  public static double distVincentyRAD(double lat1, double lon1, double lat2, double lon2) {\n    // Check for same position\n    if (lat1 == lat2 && lon1 == lon2)\n      return 0.0;\n\n    double cosLat1 = Math.cos(lat1);\n    double cosLat2 = Math.cos(lat2);\n    double sinLat1 = Math.sin(lat1);\n    double sinLat2 = Math.sin(lat2);\n    double dLon = lon2 - lon1;\n    double cosDLon = Math.cos(dLon);\n    double sinDLon = Math.sin(dLon);\n\n    double a = cosLat2 * sinDLon;\n    double b = cosLat1*sinLat2 - sinLat1*cosLat2*cosDLon;\n    double c = sinLat1*sinLat2 + cosLat1*cosLat2*cosDLon;\n    \n    return Math.atan2(Math.sqrt(a*a+b*b),c);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ef186f4ac90644cd4e8df6b66acb56a52e5ca602":["b17c5c53627893d93f9261826cc6d9c447c5ee3a"],"b17c5c53627893d93f9261826cc6d9c447c5ee3a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b17c5c53627893d93f9261826cc6d9c447c5ee3a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ef186f4ac90644cd4e8df6b66acb56a52e5ca602":[],"b17c5c53627893d93f9261826cc6d9c447c5ee3a":["ef186f4ac90644cd4e8df6b66acb56a52e5ca602"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ef186f4ac90644cd4e8df6b66acb56a52e5ca602","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}