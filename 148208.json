{"path":"solr/solrj/src/test/org/apache/solr/client/solrj/request/TestCoreAdmin#testConfigSet().mjava","commits":[{"id":"2d4e985daefcb892b529223b478c47985fc3c483","date":1395658491,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/request/TestCoreAdmin#testConfigSet().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testConfigSet() throws Exception {\n\n    SolrServer server = getSolrAdmin();\n    File testDir = createTestDirectory();\n\n    File newCoreInstanceDir = new File(testDir, \"newcore\");\n\n    CoreAdminRequest.Create req = new CoreAdminRequest.Create();\n    req.setCoreName(\"corewithconfigset\");\n    req.setInstanceDir(newCoreInstanceDir.getAbsolutePath());\n    req.setConfigSet(\"configset-2\");\n\n    CoreAdminResponse response = req.process(server);\n    assertThat((String) response.getResponse().get(\"core\"), is(\"corewithconfigset\"));\n\n    SolrCore core = null;\n    try {\n      core = cores.getCore(\"corewithconfigset\");\n      assertThat(core, is(notNullValue()));\n    }\n    finally {\n      if (core != null)\n        core.close();\n    }\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e332392bbbdd01cb69ad6a89051f483cda38e15e","date":1395758779,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/request/TestCoreAdmin#testConfigSet().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/request/TestCoreAdmin#testConfigSet().mjava","sourceNew":"  @Test\n  public void testConfigSet() throws Exception {\n\n    SolrServer server = getSolrAdmin();\n    File testDir = createTestDirectory();\n\n    File newCoreInstanceDir = new File(testDir, \"newcore\");\n\n    CoreAdminRequest.Create req = new CoreAdminRequest.Create();\n    req.setCoreName(\"corewithconfigset\");\n    req.setInstanceDir(newCoreInstanceDir.getAbsolutePath());\n    req.setConfigSet(\"configset-2\");\n\n    CoreAdminResponse response = req.process(server);\n    assertThat((String) response.getResponse().get(\"core\"), is(\"corewithconfigset\"));\n\n    try (SolrCore core = cores.getCore(\"corewithconfigset\")) {\n      assertThat(core, is(notNullValue()));\n    }\n\n  }\n\n","sourceOld":"  @Test\n  public void testConfigSet() throws Exception {\n\n    SolrServer server = getSolrAdmin();\n    File testDir = createTestDirectory();\n\n    File newCoreInstanceDir = new File(testDir, \"newcore\");\n\n    CoreAdminRequest.Create req = new CoreAdminRequest.Create();\n    req.setCoreName(\"corewithconfigset\");\n    req.setInstanceDir(newCoreInstanceDir.getAbsolutePath());\n    req.setConfigSet(\"configset-2\");\n\n    CoreAdminResponse response = req.process(server);\n    assertThat((String) response.getResponse().get(\"core\"), is(\"corewithconfigset\"));\n\n    SolrCore core = null;\n    try {\n      core = cores.getCore(\"corewithconfigset\");\n      assertThat(core, is(notNullValue()));\n    }\n    finally {\n      if (core != null)\n        core.close();\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0d579490a72f2e6297eaa648940611234c57cf1","date":1395917140,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/request/TestCoreAdmin#testConfigSet().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/request/TestCoreAdmin#testConfigSet().mjava","sourceNew":"  @Test\n  public void testConfigSet() throws Exception {\n\n    SolrServer server = getSolrAdmin();\n    File testDir = TestUtil.createTempDir(LuceneTestCase.getTestClass().getSimpleName());\n\n    File newCoreInstanceDir = new File(testDir, \"newcore\");\n\n    CoreAdminRequest.Create req = new CoreAdminRequest.Create();\n    req.setCoreName(\"corewithconfigset\");\n    req.setInstanceDir(newCoreInstanceDir.getAbsolutePath());\n    req.setConfigSet(\"configset-2\");\n\n    CoreAdminResponse response = req.process(server);\n    assertThat((String) response.getResponse().get(\"core\"), is(\"corewithconfigset\"));\n\n    try (SolrCore core = cores.getCore(\"corewithconfigset\")) {\n      assertThat(core, is(notNullValue()));\n    }\n\n  }\n\n","sourceOld":"  @Test\n  public void testConfigSet() throws Exception {\n\n    SolrServer server = getSolrAdmin();\n    File testDir = createTestDirectory();\n\n    File newCoreInstanceDir = new File(testDir, \"newcore\");\n\n    CoreAdminRequest.Create req = new CoreAdminRequest.Create();\n    req.setCoreName(\"corewithconfigset\");\n    req.setInstanceDir(newCoreInstanceDir.getAbsolutePath());\n    req.setConfigSet(\"configset-2\");\n\n    CoreAdminResponse response = req.process(server);\n    assertThat((String) response.getResponse().get(\"core\"), is(\"corewithconfigset\"));\n\n    try (SolrCore core = cores.getCore(\"corewithconfigset\")) {\n      assertThat(core, is(notNullValue()));\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a9a24bae1e63c3bb5ff2fb47b0119240d840ee7c","date":1396633078,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/request/TestCoreAdmin#testConfigSet().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/request/TestCoreAdmin#testConfigSet().mjava","sourceNew":"  @Test\n  public void testConfigSet() throws Exception {\n\n    SolrServer server = getSolrAdmin();\n    File testDir = createTempDir(LuceneTestCase.getTestClass().getSimpleName());\n\n    File newCoreInstanceDir = new File(testDir, \"newcore\");\n\n    CoreAdminRequest.Create req = new CoreAdminRequest.Create();\n    req.setCoreName(\"corewithconfigset\");\n    req.setInstanceDir(newCoreInstanceDir.getAbsolutePath());\n    req.setConfigSet(\"configset-2\");\n\n    CoreAdminResponse response = req.process(server);\n    assertThat((String) response.getResponse().get(\"core\"), is(\"corewithconfigset\"));\n\n    try (SolrCore core = cores.getCore(\"corewithconfigset\")) {\n      assertThat(core, is(notNullValue()));\n    }\n\n  }\n\n","sourceOld":"  @Test\n  public void testConfigSet() throws Exception {\n\n    SolrServer server = getSolrAdmin();\n    File testDir = TestUtil.createTempDir(LuceneTestCase.getTestClass().getSimpleName());\n\n    File newCoreInstanceDir = new File(testDir, \"newcore\");\n\n    CoreAdminRequest.Create req = new CoreAdminRequest.Create();\n    req.setCoreName(\"corewithconfigset\");\n    req.setInstanceDir(newCoreInstanceDir.getAbsolutePath());\n    req.setConfigSet(\"configset-2\");\n\n    CoreAdminResponse response = req.process(server);\n    assertThat((String) response.getResponse().get(\"core\"), is(\"corewithconfigset\"));\n\n    try (SolrCore core = cores.getCore(\"corewithconfigset\")) {\n      assertThat(core, is(notNullValue()));\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a0f5bb79c600763ffe7b8141df59a3169d31e48","date":1396689440,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/request/TestCoreAdmin#testConfigSet().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/request/TestCoreAdmin#testConfigSet().mjava","sourceNew":"  @Test\n  public void testConfigSet() throws Exception {\n\n    SolrServer server = getSolrAdmin();\n    File testDir = createTempDir(LuceneTestCase.getTestClass().getSimpleName());\n\n    File newCoreInstanceDir = new File(testDir, \"newcore\");\n\n    CoreAdminRequest.Create req = new CoreAdminRequest.Create();\n    req.setCoreName(\"corewithconfigset\");\n    req.setInstanceDir(newCoreInstanceDir.getAbsolutePath());\n    req.setConfigSet(\"configset-2\");\n\n    CoreAdminResponse response = req.process(server);\n    assertThat((String) response.getResponse().get(\"core\"), is(\"corewithconfigset\"));\n\n    try (SolrCore core = cores.getCore(\"corewithconfigset\")) {\n      assertThat(core, is(notNullValue()));\n    }\n\n  }\n\n","sourceOld":"  @Test\n  public void testConfigSet() throws Exception {\n\n    SolrServer server = getSolrAdmin();\n    File testDir = createTestDirectory();\n\n    File newCoreInstanceDir = new File(testDir, \"newcore\");\n\n    CoreAdminRequest.Create req = new CoreAdminRequest.Create();\n    req.setCoreName(\"corewithconfigset\");\n    req.setInstanceDir(newCoreInstanceDir.getAbsolutePath());\n    req.setConfigSet(\"configset-2\");\n\n    CoreAdminResponse response = req.process(server);\n    assertThat((String) response.getResponse().get(\"core\"), is(\"corewithconfigset\"));\n\n    try (SolrCore core = cores.getCore(\"corewithconfigset\")) {\n      assertThat(core, is(notNullValue()));\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f4abec28b874149a7223e32cc7a01704c27790de","date":1410644789,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/request/TestCoreAdmin#testConfigSet().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/request/TestCoreAdmin#testConfigSet().mjava","sourceNew":"  @Test\n  public void testConfigSet() throws Exception {\n\n    SolrServer server = getSolrAdmin();\n    File testDir = createTempDir(LuceneTestCase.getTestClass().getSimpleName()).toFile();\n\n    File newCoreInstanceDir = new File(testDir, \"newcore\");\n\n    CoreAdminRequest.Create req = new CoreAdminRequest.Create();\n    req.setCoreName(\"corewithconfigset\");\n    req.setInstanceDir(newCoreInstanceDir.getAbsolutePath());\n    req.setConfigSet(\"configset-2\");\n\n    CoreAdminResponse response = req.process(server);\n    assertThat((String) response.getResponse().get(\"core\"), is(\"corewithconfigset\"));\n\n    try (SolrCore core = cores.getCore(\"corewithconfigset\")) {\n      assertThat(core, is(notNullValue()));\n    }\n\n  }\n\n","sourceOld":"  @Test\n  public void testConfigSet() throws Exception {\n\n    SolrServer server = getSolrAdmin();\n    File testDir = createTempDir(LuceneTestCase.getTestClass().getSimpleName());\n\n    File newCoreInstanceDir = new File(testDir, \"newcore\");\n\n    CoreAdminRequest.Create req = new CoreAdminRequest.Create();\n    req.setCoreName(\"corewithconfigset\");\n    req.setInstanceDir(newCoreInstanceDir.getAbsolutePath());\n    req.setConfigSet(\"configset-2\");\n\n    CoreAdminResponse response = req.process(server);\n    assertThat((String) response.getResponse().get(\"core\"), is(\"corewithconfigset\"));\n\n    try (SolrCore core = cores.getCore(\"corewithconfigset\")) {\n      assertThat(core, is(notNullValue()));\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bafca15d8e408346a67f4282ad1143b88023893b","date":1420034748,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/request/TestCoreAdmin#testConfigSet().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/request/TestCoreAdmin#testConfigSet().mjava","sourceNew":"  @Test\n  public void testConfigSet() throws Exception {\n\n    SolrClient client = getSolrAdmin();\n    File testDir = createTempDir(LuceneTestCase.getTestClass().getSimpleName()).toFile();\n\n    File newCoreInstanceDir = new File(testDir, \"newcore\");\n\n    CoreAdminRequest.Create req = new CoreAdminRequest.Create();\n    req.setCoreName(\"corewithconfigset\");\n    req.setInstanceDir(newCoreInstanceDir.getAbsolutePath());\n    req.setConfigSet(\"configset-2\");\n\n    CoreAdminResponse response = req.process(client);\n    assertThat((String) response.getResponse().get(\"core\"), is(\"corewithconfigset\"));\n\n    try (SolrCore core = cores.getCore(\"corewithconfigset\")) {\n      assertThat(core, is(notNullValue()));\n    }\n\n  }\n\n","sourceOld":"  @Test\n  public void testConfigSet() throws Exception {\n\n    SolrServer server = getSolrAdmin();\n    File testDir = createTempDir(LuceneTestCase.getTestClass().getSimpleName()).toFile();\n\n    File newCoreInstanceDir = new File(testDir, \"newcore\");\n\n    CoreAdminRequest.Create req = new CoreAdminRequest.Create();\n    req.setCoreName(\"corewithconfigset\");\n    req.setInstanceDir(newCoreInstanceDir.getAbsolutePath());\n    req.setConfigSet(\"configset-2\");\n\n    CoreAdminResponse response = req.process(server);\n    assertThat((String) response.getResponse().get(\"core\"), is(\"corewithconfigset\"));\n\n    try (SolrCore core = cores.getCore(\"corewithconfigset\")) {\n      assertThat(core, is(notNullValue()));\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c75c0fad5a9b6633e919ce2e9f96e1f0c496d373","date":1592489632,"type":3,"author":"Jan Høydahl","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/request/TestCoreAdmin#testConfigSet().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/request/TestCoreAdmin#testConfigSet().mjava","sourceNew":"  @Test\n  public void testConfigSet() throws Exception {\n\n    SolrClient client = getSolrAdmin();\n    File testDir = createTempDir(LuceneTestCase.getTestClass().getSimpleName()).toFile();\n    File newCoreInstanceDir = new File(testDir, \"newcore\");\n    cores.getAllowPaths().add(testDir.toPath()); // Allow the test dir\n\n    CoreAdminRequest.Create req = new CoreAdminRequest.Create();\n    req.setCoreName(\"corewithconfigset\");\n    req.setInstanceDir(newCoreInstanceDir.getAbsolutePath());\n    req.setConfigSet(\"configset-2\");\n\n    CoreAdminResponse response = req.process(client);\n    assertThat((String) response.getResponse().get(\"core\"), is(\"corewithconfigset\"));\n\n    try (SolrCore core = cores.getCore(\"corewithconfigset\")) {\n      assertThat(core, is(notNullValue()));\n    }\n\n  }\n\n","sourceOld":"  @Test\n  public void testConfigSet() throws Exception {\n\n    SolrClient client = getSolrAdmin();\n    File testDir = createTempDir(LuceneTestCase.getTestClass().getSimpleName()).toFile();\n\n    File newCoreInstanceDir = new File(testDir, \"newcore\");\n\n    CoreAdminRequest.Create req = new CoreAdminRequest.Create();\n    req.setCoreName(\"corewithconfigset\");\n    req.setInstanceDir(newCoreInstanceDir.getAbsolutePath());\n    req.setConfigSet(\"configset-2\");\n\n    CoreAdminResponse response = req.process(client);\n    assertThat((String) response.getResponse().get(\"core\"), is(\"corewithconfigset\"));\n\n    try (SolrCore core = cores.getCore(\"corewithconfigset\")) {\n      assertThat(core, is(notNullValue()));\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c75c0fad5a9b6633e919ce2e9f96e1f0c496d373":["bafca15d8e408346a67f4282ad1143b88023893b"],"2a0f5bb79c600763ffe7b8141df59a3169d31e48":["e332392bbbdd01cb69ad6a89051f483cda38e15e","a9a24bae1e63c3bb5ff2fb47b0119240d840ee7c"],"a9a24bae1e63c3bb5ff2fb47b0119240d840ee7c":["d0d579490a72f2e6297eaa648940611234c57cf1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e332392bbbdd01cb69ad6a89051f483cda38e15e":["2d4e985daefcb892b529223b478c47985fc3c483"],"bafca15d8e408346a67f4282ad1143b88023893b":["f4abec28b874149a7223e32cc7a01704c27790de"],"2d4e985daefcb892b529223b478c47985fc3c483":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f4abec28b874149a7223e32cc7a01704c27790de":["2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"d0d579490a72f2e6297eaa648940611234c57cf1":["e332392bbbdd01cb69ad6a89051f483cda38e15e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c75c0fad5a9b6633e919ce2e9f96e1f0c496d373"]},"commit2Childs":{"c75c0fad5a9b6633e919ce2e9f96e1f0c496d373":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"2a0f5bb79c600763ffe7b8141df59a3169d31e48":["f4abec28b874149a7223e32cc7a01704c27790de"],"a9a24bae1e63c3bb5ff2fb47b0119240d840ee7c":["2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["2d4e985daefcb892b529223b478c47985fc3c483"],"e332392bbbdd01cb69ad6a89051f483cda38e15e":["2a0f5bb79c600763ffe7b8141df59a3169d31e48","d0d579490a72f2e6297eaa648940611234c57cf1"],"bafca15d8e408346a67f4282ad1143b88023893b":["c75c0fad5a9b6633e919ce2e9f96e1f0c496d373"],"2d4e985daefcb892b529223b478c47985fc3c483":["e332392bbbdd01cb69ad6a89051f483cda38e15e"],"d0d579490a72f2e6297eaa648940611234c57cf1":["a9a24bae1e63c3bb5ff2fb47b0119240d840ee7c"],"f4abec28b874149a7223e32cc7a01704c27790de":["bafca15d8e408346a67f4282ad1143b88023893b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}