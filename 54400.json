{"path":"lucene/core/src/test/org/apache/lucene/search/TestFloatRangeFieldQueries#nextRange(int).mjava","commits":[{"id":"4a52b01a73cacbd2d360240e72d64c0ba353618f","date":1489389749,"type":1,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestFloatRangeFieldQueries#nextRange(int).mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/search/TestFloatRangeFieldQueries#nextRange(int).mjava","sourceNew":"  @Override\n  protected Range nextRange(int dimensions) throws Exception {\n    float[] min = new float[dimensions];\n    float[] max = new float[dimensions];\n\n    float minV, maxV;\n    for (int d=0; d<dimensions; ++d) {\n      minV = nextFloatInternal();\n      maxV = nextFloatInternal();\n      min[d] = Math.min(minV, maxV);\n      max[d] = Math.max(minV, maxV);\n    }\n    return new FloatTestRange(min, max);\n  }\n\n","sourceOld":"  @Override\n  protected Range nextRange(int dimensions) {\n    float[] min = new float[dimensions];\n    float[] max = new float[dimensions];\n\n    float minV, maxV;\n    for (int d=0; d<dimensions; ++d) {\n      minV = nextFloatInternal();\n      maxV = nextFloatInternal();\n      min[d] = Math.min(minV, maxV);\n      max[d] = Math.max(minV, maxV);\n    }\n    return new FloatRange(min, max);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4a52b01a73cacbd2d360240e72d64c0ba353618f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4a52b01a73cacbd2d360240e72d64c0ba353618f"]},"commit2Childs":{"4a52b01a73cacbd2d360240e72d64c0ba353618f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4a52b01a73cacbd2d360240e72d64c0ba353618f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}