{"path":"solr/solrj/src/java/org/apache/solr/common/util/ByteArrayUtf8CharSequence#_equals(byte[],int,int,byte[],int,int).mjava","commits":[{"id":"0b2ba7b58bce0f80c97a5eb2f11febac26681566","date":1542686312,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/ByteArrayUtf8CharSequence#_equals(byte[],int,int,byte[],int,int).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Behaves like Java 9's Arrays.equals\n   *\n   * @see <a href=\"http://download.java.net/java/jdk9/docs/api/java/util/Arrays.html#equals-byte:A-int-int-byte:A-int-int-\">Arrays.equals</a>\n   */\n  public static boolean _equals(byte[] a, int aFromIndex, int aToIndex, byte[] b, int bFromIndex, int bToIndex) {\n    checkFromToIndex(aFromIndex, aToIndex, a.length);\n    checkFromToIndex(bFromIndex, bToIndex, b.length);\n    int aLen = aToIndex - aFromIndex;\n    int bLen = bToIndex - bFromIndex;\n    // lengths differ: cannot be equal\n    if (aLen != bLen) {\n      return false;\n    }\n    for (int i = 0; i < aLen; i++) {\n      if (a[i + aFromIndex] != b[i + bFromIndex]) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0b2ba7b58bce0f80c97a5eb2f11febac26681566":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0b2ba7b58bce0f80c97a5eb2f11febac26681566"]},"commit2Childs":{"0b2ba7b58bce0f80c97a5eb2f11febac26681566":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0b2ba7b58bce0f80c97a5eb2f11febac26681566"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}