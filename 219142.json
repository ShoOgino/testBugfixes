{"path":"src/java/org/apache/solr/analysis/SnowballPorterFilterFactory#init(Map[String,String]).mjava","commits":[{"id":"4a28af38ad5449ab39a3f5fb74663a7106dda48d","date":1153149473,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/analysis/SnowballPorterFilterFactory#init(Map[String,String]).mjava","pathOld":"/dev/null","sourceNew":"  public void init(Map<String, String> args) {\n    super.init(args);\n    final String cfgLanguage = args.get(\"language\");\n    if(cfgLanguage!=null) language = cfgLanguage;\n    SolrCore.log.fine(\"SnowballPorterFilterFactory: language=\" + language);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6d6338c87060be5f66757a94945975f3bbd377a9","date":1189278234,"type":5,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/analysis/SnowballPorterFilterFactory#init(SolrConfig,Map[String,String]).mjava","pathOld":"src/java/org/apache/solr/analysis/SnowballPorterFilterFactory#init(Map[String,String]).mjava","sourceNew":"  public void init(SolrConfig solrConfig, Map<String, String> args) {\n    super.init(solrConfig, args);\n    final String cfgLanguage = args.get(\"language\");\n    if(cfgLanguage!=null) language = cfgLanguage;\n    SolrCore.log.fine(\"SnowballPorterFilterFactory: language=\" + language);\n  }\n\n","sourceOld":"  public void init(Map<String, String> args) {\n    super.init(args);\n    final String cfgLanguage = args.get(\"language\");\n    if(cfgLanguage!=null) language = cfgLanguage;\n    SolrCore.log.fine(\"SnowballPorterFilterFactory: language=\" + language);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fcf52a7da226d8d3756cc8bf9f3ae1f39952b014","date":1195912306,"type":1,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/analysis/SnowballPorterFilterFactory#init(Map[String,String]).mjava","pathOld":"src/java/org/apache/solr/analysis/SnowballPorterFilterFactory#init(SolrConfig,Map[String,String]).mjava","sourceNew":"  @Override\n  public void init(Map<String, String> args) {\n    super.init(args);\n    final String cfgLanguage = args.get(\"language\");\n    if(cfgLanguage!=null) language = cfgLanguage;\n    SolrCore.log.fine(\"SnowballPorterFilterFactory: language=\" + language);\n  }\n\n","sourceOld":"  public void init(SolrConfig solrConfig, Map<String, String> args) {\n    super.init(solrConfig, args);\n    final String cfgLanguage = args.get(\"language\");\n    if(cfgLanguage!=null) language = cfgLanguage;\n    SolrCore.log.fine(\"SnowballPorterFilterFactory: language=\" + language);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"adfb3d12e90cd23bf600b1f66454cd3aea311a39","date":1217321545,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"src/java/org/apache/solr/analysis/SnowballPorterFilterFactory#init(Map[String,String]).mjava","pathOld":"src/java/org/apache/solr/analysis/SnowballPorterFilterFactory#init(Map[String,String]).mjava","sourceNew":"  @Override\n  public void init(Map<String, String> args) {\n    super.init(args);\n    final String cfgLanguage = args.get(\"language\");\n    if(cfgLanguage!=null) language = cfgLanguage;\n  }\n\n","sourceOld":"  @Override\n  public void init(Map<String, String> args) {\n    super.init(args);\n    final String cfgLanguage = args.get(\"language\");\n    if(cfgLanguage!=null) language = cfgLanguage;\n    SolrCore.log.fine(\"SnowballPorterFilterFactory: language=\" + language);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"32dc1d18deceeee22c7af0480c58787bb47a8cc9","date":1219852966,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/analysis/SnowballPorterFilterFactory#init(Map[String,String]).mjava","pathOld":"src/java/org/apache/solr/analysis/SnowballPorterFilterFactory#init(Map[String,String]).mjava","sourceNew":"  @Override\n  public void init(Map<String, String> args) {\n    super.init(args);\n    final String cfgLanguage = args.get(\"language\");\n    if(cfgLanguage!=null) language = cfgLanguage;\n\n    try {\n      stemClass = Class.forName(\"org.tartarus.snowball.ext.\" + language + \"Stemmer\");\n    } catch (ClassNotFoundException e) {\n      throw new RuntimeException(\"Can't find class for stemmer language \" + language, e);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void init(Map<String, String> args) {\n    super.init(args);\n    final String cfgLanguage = args.get(\"language\");\n    if(cfgLanguage!=null) language = cfgLanguage;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/analysis/SnowballPorterFilterFactory#init(Map[String,String]).mjava","pathOld":"src/java/org/apache/solr/analysis/SnowballPorterFilterFactory#init(Map[String,String]).mjava","sourceNew":"  @Override\n  public void init(Map<String, String> args) {\n    super.init(args);\n    final String cfgLanguage = args.get(\"language\");\n    if(cfgLanguage!=null) language = cfgLanguage;\n\n    try {\n      stemClass = Class.forName(\"org.tartarus.snowball.ext.\" + language + \"Stemmer\");\n    } catch (ClassNotFoundException e) {\n      throw new RuntimeException(\"Can't find class for stemmer language \" + language, e);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void init(Map<String, String> args) {\n    super.init(args);\n    final String cfgLanguage = args.get(\"language\");\n    if(cfgLanguage!=null) language = cfgLanguage;\n\n    try {\n      stemClass = Class.forName(\"org.tartarus.snowball.ext.\" + language + \"Stemmer\");\n    } catch (ClassNotFoundException e) {\n      throw new RuntimeException(\"Can't find class for stemmer language \" + language, e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6d6338c87060be5f66757a94945975f3bbd377a9":["4a28af38ad5449ab39a3f5fb74663a7106dda48d"],"32dc1d18deceeee22c7af0480c58787bb47a8cc9":["adfb3d12e90cd23bf600b1f66454cd3aea311a39"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["32dc1d18deceeee22c7af0480c58787bb47a8cc9"],"fcf52a7da226d8d3756cc8bf9f3ae1f39952b014":["6d6338c87060be5f66757a94945975f3bbd377a9"],"adfb3d12e90cd23bf600b1f66454cd3aea311a39":["fcf52a7da226d8d3756cc8bf9f3ae1f39952b014"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4a28af38ad5449ab39a3f5fb74663a7106dda48d":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"]},"commit2Childs":{"6d6338c87060be5f66757a94945975f3bbd377a9":["fcf52a7da226d8d3756cc8bf9f3ae1f39952b014"],"32dc1d18deceeee22c7af0480c58787bb47a8cc9":["ad94625fb8d088209f46650c8097196fec67f00c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["4a28af38ad5449ab39a3f5fb74663a7106dda48d"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"fcf52a7da226d8d3756cc8bf9f3ae1f39952b014":["adfb3d12e90cd23bf600b1f66454cd3aea311a39"],"adfb3d12e90cd23bf600b1f66454cd3aea311a39":["32dc1d18deceeee22c7af0480c58787bb47a8cc9"],"4a28af38ad5449ab39a3f5fb74663a7106dda48d":["6d6338c87060be5f66757a94945975f3bbd377a9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}