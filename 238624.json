{"path":"contrib/misc/src/test/org/apache/lucene/misc/ChainedFilterTest#setUp().mjava","commits":[{"id":"48bedd31c61edafb8baaff4bcbcac19449fb7c3a","date":1251468037,"type":1,"author":"Mark Robert Miller","isMerge":false,"pathNew":"contrib/misc/src/test/org/apache/lucene/misc/ChainedFilterTest#setUp().mjava","pathOld":"contrib/miscellaneous/src/test/org/apache/lucene/misc/ChainedFilterTest#setUp().mjava","sourceNew":"  public void setUp() throws Exception {\n    directory = new RAMDirectory();\n    IndexWriter writer =\n       new IndexWriter(directory, new WhitespaceAnalyzer(), true);\n\n    Calendar cal = Calendar.getInstance();\n    cal.setTimeInMillis(1041397200000L); // 2003 January 01\n\n    for (int i = 0; i < MAX; i++) {\n      Document doc = new Document();\n      doc.add(new Field(\"key\", \"\" + (i + 1), Field.Store.YES, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"owner\", (i < MAX / 2) ? \"bob\" : \"sue\", Field.Store.YES, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"date\", cal.getTime().toString(), Field.Store.YES, Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n\n      cal.add(Calendar.DATE, 1);\n    }\n\n    writer.close();\n\n    searcher = new IndexSearcher(directory);\n\n    // query for everything to make life easier\n    BooleanQuery bq = new BooleanQuery();\n    bq.add(new TermQuery(new Term(\"owner\", \"bob\")), BooleanClause.Occur.SHOULD);\n    bq.add(new TermQuery(new Term(\"owner\", \"sue\")), BooleanClause.Occur.SHOULD);\n    query = bq;\n\n    // date filter matches everything too\n    //Date pastTheEnd = parseDate(\"2099 Jan 1\");\n    // dateFilter = DateFilter.Before(\"date\", pastTheEnd);\n    // just treat dates as strings and select the whole range for now...\n    dateFilter = new TermRangeFilter(\"date\",\"\",\"ZZZZ\",true,true);\n\n    bobFilter = new QueryWrapperFilter(\n        new TermQuery(new Term(\"owner\", \"bob\")));\n    sueFilter = new QueryWrapperFilter(\n        new TermQuery(new Term(\"owner\", \"sue\")));\n  }\n\n","sourceOld":"  public void setUp() throws Exception {\n    directory = new RAMDirectory();\n    IndexWriter writer =\n       new IndexWriter(directory, new WhitespaceAnalyzer(), true);\n\n    Calendar cal = Calendar.getInstance();\n    cal.setTimeInMillis(1041397200000L); // 2003 January 01\n\n    for (int i = 0; i < MAX; i++) {\n      Document doc = new Document();\n      doc.add(new Field(\"key\", \"\" + (i + 1), Field.Store.YES, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"owner\", (i < MAX / 2) ? \"bob\" : \"sue\", Field.Store.YES, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"date\", cal.getTime().toString(), Field.Store.YES, Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n\n      cal.add(Calendar.DATE, 1);\n    }\n\n    writer.close();\n\n    searcher = new IndexSearcher(directory);\n\n    // query for everything to make life easier\n    BooleanQuery bq = new BooleanQuery();\n    bq.add(new TermQuery(new Term(\"owner\", \"bob\")), BooleanClause.Occur.SHOULD);\n    bq.add(new TermQuery(new Term(\"owner\", \"sue\")), BooleanClause.Occur.SHOULD);\n    query = bq;\n\n    // date filter matches everything too\n    //Date pastTheEnd = parseDate(\"2099 Jan 1\");\n    // dateFilter = DateFilter.Before(\"date\", pastTheEnd);\n    // just treat dates as strings and select the whole range for now...\n    dateFilter = new TermRangeFilter(\"date\",\"\",\"ZZZZ\",true,true);\n\n    bobFilter = new QueryWrapperFilter(\n        new TermQuery(new Term(\"owner\", \"bob\")));\n    sueFilter = new QueryWrapperFilter(\n        new TermQuery(new Term(\"owner\", \"sue\")));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4256bc1b3c94786287ccdfc751230374521843cf","date":1254612273,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/misc/src/test/org/apache/lucene/misc/ChainedFilterTest#setUp().mjava","pathOld":"contrib/misc/src/test/org/apache/lucene/misc/ChainedFilterTest#setUp().mjava","sourceNew":"  public void setUp() throws Exception {\n    directory = new RAMDirectory();\n    IndexWriter writer =\n       new IndexWriter(directory, new WhitespaceAnalyzer(), true);\n\n    Calendar cal = Calendar.getInstance();\n    cal.setTimeInMillis(1041397200000L); // 2003 January 01\n\n    for (int i = 0; i < MAX; i++) {\n      Document doc = new Document();\n      doc.add(new Field(\"key\", \"\" + (i + 1), Field.Store.YES, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"owner\", (i < MAX / 2) ? \"bob\" : \"sue\", Field.Store.YES, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"date\", cal.getTime().toString(), Field.Store.YES, Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n\n      cal.add(Calendar.DATE, 1);\n    }\n\n    writer.close();\n\n    searcher = new IndexSearcher(directory, true);\n\n    // query for everything to make life easier\n    BooleanQuery bq = new BooleanQuery();\n    bq.add(new TermQuery(new Term(\"owner\", \"bob\")), BooleanClause.Occur.SHOULD);\n    bq.add(new TermQuery(new Term(\"owner\", \"sue\")), BooleanClause.Occur.SHOULD);\n    query = bq;\n\n    // date filter matches everything too\n    //Date pastTheEnd = parseDate(\"2099 Jan 1\");\n    // dateFilter = DateFilter.Before(\"date\", pastTheEnd);\n    // just treat dates as strings and select the whole range for now...\n    dateFilter = new TermRangeFilter(\"date\",\"\",\"ZZZZ\",true,true);\n\n    bobFilter = new QueryWrapperFilter(\n        new TermQuery(new Term(\"owner\", \"bob\")));\n    sueFilter = new QueryWrapperFilter(\n        new TermQuery(new Term(\"owner\", \"sue\")));\n  }\n\n","sourceOld":"  public void setUp() throws Exception {\n    directory = new RAMDirectory();\n    IndexWriter writer =\n       new IndexWriter(directory, new WhitespaceAnalyzer(), true);\n\n    Calendar cal = Calendar.getInstance();\n    cal.setTimeInMillis(1041397200000L); // 2003 January 01\n\n    for (int i = 0; i < MAX; i++) {\n      Document doc = new Document();\n      doc.add(new Field(\"key\", \"\" + (i + 1), Field.Store.YES, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"owner\", (i < MAX / 2) ? \"bob\" : \"sue\", Field.Store.YES, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"date\", cal.getTime().toString(), Field.Store.YES, Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n\n      cal.add(Calendar.DATE, 1);\n    }\n\n    writer.close();\n\n    searcher = new IndexSearcher(directory);\n\n    // query for everything to make life easier\n    BooleanQuery bq = new BooleanQuery();\n    bq.add(new TermQuery(new Term(\"owner\", \"bob\")), BooleanClause.Occur.SHOULD);\n    bq.add(new TermQuery(new Term(\"owner\", \"sue\")), BooleanClause.Occur.SHOULD);\n    query = bq;\n\n    // date filter matches everything too\n    //Date pastTheEnd = parseDate(\"2099 Jan 1\");\n    // dateFilter = DateFilter.Before(\"date\", pastTheEnd);\n    // just treat dates as strings and select the whole range for now...\n    dateFilter = new TermRangeFilter(\"date\",\"\",\"ZZZZ\",true,true);\n\n    bobFilter = new QueryWrapperFilter(\n        new TermQuery(new Term(\"owner\", \"bob\")));\n    sueFilter = new QueryWrapperFilter(\n        new TermQuery(new Term(\"owner\", \"sue\")));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"87c966e9308847938a7c905c2e46a56d8df788b8","date":1255035452,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/misc/src/test/org/apache/lucene/misc/ChainedFilterTest#setUp().mjava","pathOld":"contrib/misc/src/test/org/apache/lucene/misc/ChainedFilterTest#setUp().mjava","sourceNew":"  public void setUp() throws Exception {\n    directory = new RAMDirectory();\n    IndexWriter writer =\n       new IndexWriter(directory, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.UNLIMITED);\n\n    Calendar cal = Calendar.getInstance();\n    cal.setTimeInMillis(1041397200000L); // 2003 January 01\n\n    for (int i = 0; i < MAX; i++) {\n      Document doc = new Document();\n      doc.add(new Field(\"key\", \"\" + (i + 1), Field.Store.YES, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"owner\", (i < MAX / 2) ? \"bob\" : \"sue\", Field.Store.YES, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"date\", cal.getTime().toString(), Field.Store.YES, Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n\n      cal.add(Calendar.DATE, 1);\n    }\n\n    writer.close();\n\n    searcher = new IndexSearcher(directory, true);\n\n    // query for everything to make life easier\n    BooleanQuery bq = new BooleanQuery();\n    bq.add(new TermQuery(new Term(\"owner\", \"bob\")), BooleanClause.Occur.SHOULD);\n    bq.add(new TermQuery(new Term(\"owner\", \"sue\")), BooleanClause.Occur.SHOULD);\n    query = bq;\n\n    // date filter matches everything too\n    //Date pastTheEnd = parseDate(\"2099 Jan 1\");\n    // dateFilter = DateFilter.Before(\"date\", pastTheEnd);\n    // just treat dates as strings and select the whole range for now...\n    dateFilter = new TermRangeFilter(\"date\",\"\",\"ZZZZ\",true,true);\n\n    bobFilter = new QueryWrapperFilter(\n        new TermQuery(new Term(\"owner\", \"bob\")));\n    sueFilter = new QueryWrapperFilter(\n        new TermQuery(new Term(\"owner\", \"sue\")));\n  }\n\n","sourceOld":"  public void setUp() throws Exception {\n    directory = new RAMDirectory();\n    IndexWriter writer =\n       new IndexWriter(directory, new WhitespaceAnalyzer(), true);\n\n    Calendar cal = Calendar.getInstance();\n    cal.setTimeInMillis(1041397200000L); // 2003 January 01\n\n    for (int i = 0; i < MAX; i++) {\n      Document doc = new Document();\n      doc.add(new Field(\"key\", \"\" + (i + 1), Field.Store.YES, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"owner\", (i < MAX / 2) ? \"bob\" : \"sue\", Field.Store.YES, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"date\", cal.getTime().toString(), Field.Store.YES, Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n\n      cal.add(Calendar.DATE, 1);\n    }\n\n    writer.close();\n\n    searcher = new IndexSearcher(directory, true);\n\n    // query for everything to make life easier\n    BooleanQuery bq = new BooleanQuery();\n    bq.add(new TermQuery(new Term(\"owner\", \"bob\")), BooleanClause.Occur.SHOULD);\n    bq.add(new TermQuery(new Term(\"owner\", \"sue\")), BooleanClause.Occur.SHOULD);\n    query = bq;\n\n    // date filter matches everything too\n    //Date pastTheEnd = parseDate(\"2099 Jan 1\");\n    // dateFilter = DateFilter.Before(\"date\", pastTheEnd);\n    // just treat dates as strings and select the whole range for now...\n    dateFilter = new TermRangeFilter(\"date\",\"\",\"ZZZZ\",true,true);\n\n    bobFilter = new QueryWrapperFilter(\n        new TermQuery(new Term(\"owner\", \"bob\")));\n    sueFilter = new QueryWrapperFilter(\n        new TermQuery(new Term(\"owner\", \"sue\")));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d57eb7c98c08c03af6e4cd83509df31c81ac16af","date":1257684312,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"contrib/misc/src/test/org/apache/lucene/misc/ChainedFilterTest#setUp().mjava","pathOld":"contrib/misc/src/test/org/apache/lucene/misc/ChainedFilterTest#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    directory = new RAMDirectory();\n    IndexWriter writer =\n       new IndexWriter(directory, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.UNLIMITED);\n\n    Calendar cal = Calendar.getInstance();\n    cal.setTimeInMillis(1041397200000L); // 2003 January 01\n\n    for (int i = 0; i < MAX; i++) {\n      Document doc = new Document();\n      doc.add(new Field(\"key\", \"\" + (i + 1), Field.Store.YES, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"owner\", (i < MAX / 2) ? \"bob\" : \"sue\", Field.Store.YES, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"date\", cal.getTime().toString(), Field.Store.YES, Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n\n      cal.add(Calendar.DATE, 1);\n    }\n\n    writer.close();\n\n    searcher = new IndexSearcher(directory, true);\n\n    // query for everything to make life easier\n    BooleanQuery bq = new BooleanQuery();\n    bq.add(new TermQuery(new Term(\"owner\", \"bob\")), BooleanClause.Occur.SHOULD);\n    bq.add(new TermQuery(new Term(\"owner\", \"sue\")), BooleanClause.Occur.SHOULD);\n    query = bq;\n\n    // date filter matches everything too\n    //Date pastTheEnd = parseDate(\"2099 Jan 1\");\n    // dateFilter = DateFilter.Before(\"date\", pastTheEnd);\n    // just treat dates as strings and select the whole range for now...\n    dateFilter = new TermRangeFilter(\"date\",\"\",\"ZZZZ\",true,true);\n\n    bobFilter = new QueryWrapperFilter(\n        new TermQuery(new Term(\"owner\", \"bob\")));\n    sueFilter = new QueryWrapperFilter(\n        new TermQuery(new Term(\"owner\", \"sue\")));\n  }\n\n","sourceOld":"  public void setUp() throws Exception {\n    directory = new RAMDirectory();\n    IndexWriter writer =\n       new IndexWriter(directory, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.UNLIMITED);\n\n    Calendar cal = Calendar.getInstance();\n    cal.setTimeInMillis(1041397200000L); // 2003 January 01\n\n    for (int i = 0; i < MAX; i++) {\n      Document doc = new Document();\n      doc.add(new Field(\"key\", \"\" + (i + 1), Field.Store.YES, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"owner\", (i < MAX / 2) ? \"bob\" : \"sue\", Field.Store.YES, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"date\", cal.getTime().toString(), Field.Store.YES, Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n\n      cal.add(Calendar.DATE, 1);\n    }\n\n    writer.close();\n\n    searcher = new IndexSearcher(directory, true);\n\n    // query for everything to make life easier\n    BooleanQuery bq = new BooleanQuery();\n    bq.add(new TermQuery(new Term(\"owner\", \"bob\")), BooleanClause.Occur.SHOULD);\n    bq.add(new TermQuery(new Term(\"owner\", \"sue\")), BooleanClause.Occur.SHOULD);\n    query = bq;\n\n    // date filter matches everything too\n    //Date pastTheEnd = parseDate(\"2099 Jan 1\");\n    // dateFilter = DateFilter.Before(\"date\", pastTheEnd);\n    // just treat dates as strings and select the whole range for now...\n    dateFilter = new TermRangeFilter(\"date\",\"\",\"ZZZZ\",true,true);\n\n    bobFilter = new QueryWrapperFilter(\n        new TermQuery(new Term(\"owner\", \"bob\")));\n    sueFilter = new QueryWrapperFilter(\n        new TermQuery(new Term(\"owner\", \"sue\")));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"64a84446b679daf1e25d901bf647686ade7fc1f0","date":1260811919,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"contrib/misc/src/test/org/apache/lucene/misc/ChainedFilterTest#setUp().mjava","pathOld":"contrib/misc/src/test/org/apache/lucene/misc/ChainedFilterTest#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    directory = new RAMDirectory();\n    IndexWriter writer =\n       new IndexWriter(directory, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.UNLIMITED);\n\n    Calendar cal = new GregorianCalendar();\n    cal.clear();\n    cal.setTimeInMillis(1041397200000L); // 2003 January 01\n\n    for (int i = 0; i < MAX; i++) {\n      Document doc = new Document();\n      doc.add(new Field(\"key\", \"\" + (i + 1), Field.Store.YES, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"owner\", (i < MAX / 2) ? \"bob\" : \"sue\", Field.Store.YES, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"date\", cal.getTime().toString(), Field.Store.YES, Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n\n      cal.add(Calendar.DATE, 1);\n    }\n\n    writer.close();\n\n    searcher = new IndexSearcher(directory, true);\n\n    // query for everything to make life easier\n    BooleanQuery bq = new BooleanQuery();\n    bq.add(new TermQuery(new Term(\"owner\", \"bob\")), BooleanClause.Occur.SHOULD);\n    bq.add(new TermQuery(new Term(\"owner\", \"sue\")), BooleanClause.Occur.SHOULD);\n    query = bq;\n\n    // date filter matches everything too\n    //Date pastTheEnd = parseDate(\"2099 Jan 1\");\n    // dateFilter = DateFilter.Before(\"date\", pastTheEnd);\n    // just treat dates as strings and select the whole range for now...\n    dateFilter = new TermRangeFilter(\"date\",\"\",\"ZZZZ\",true,true);\n\n    bobFilter = new QueryWrapperFilter(\n        new TermQuery(new Term(\"owner\", \"bob\")));\n    sueFilter = new QueryWrapperFilter(\n        new TermQuery(new Term(\"owner\", \"sue\")));\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    directory = new RAMDirectory();\n    IndexWriter writer =\n       new IndexWriter(directory, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.UNLIMITED);\n\n    Calendar cal = Calendar.getInstance();\n    cal.setTimeInMillis(1041397200000L); // 2003 January 01\n\n    for (int i = 0; i < MAX; i++) {\n      Document doc = new Document();\n      doc.add(new Field(\"key\", \"\" + (i + 1), Field.Store.YES, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"owner\", (i < MAX / 2) ? \"bob\" : \"sue\", Field.Store.YES, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"date\", cal.getTime().toString(), Field.Store.YES, Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n\n      cal.add(Calendar.DATE, 1);\n    }\n\n    writer.close();\n\n    searcher = new IndexSearcher(directory, true);\n\n    // query for everything to make life easier\n    BooleanQuery bq = new BooleanQuery();\n    bq.add(new TermQuery(new Term(\"owner\", \"bob\")), BooleanClause.Occur.SHOULD);\n    bq.add(new TermQuery(new Term(\"owner\", \"sue\")), BooleanClause.Occur.SHOULD);\n    query = bq;\n\n    // date filter matches everything too\n    //Date pastTheEnd = parseDate(\"2099 Jan 1\");\n    // dateFilter = DateFilter.Before(\"date\", pastTheEnd);\n    // just treat dates as strings and select the whole range for now...\n    dateFilter = new TermRangeFilter(\"date\",\"\",\"ZZZZ\",true,true);\n\n    bobFilter = new QueryWrapperFilter(\n        new TermQuery(new Term(\"owner\", \"bob\")));\n    sueFilter = new QueryWrapperFilter(\n        new TermQuery(new Term(\"owner\", \"sue\")));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6ced3401b9c4e7ed2be67711dbc83e48b81aa736","date":1265394056,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/misc/src/test/org/apache/lucene/misc/ChainedFilterTest#setUp().mjava","pathOld":"contrib/misc/src/test/org/apache/lucene/misc/ChainedFilterTest#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    directory = new RAMDirectory();\n    IndexWriter writer =\n       new IndexWriter(directory, new WhitespaceAnalyzer(Version.LUCENE_CURRENT), true, IndexWriter.MaxFieldLength.UNLIMITED);\n\n    Calendar cal = new GregorianCalendar();\n    cal.clear();\n    cal.setTimeInMillis(1041397200000L); // 2003 January 01\n\n    for (int i = 0; i < MAX; i++) {\n      Document doc = new Document();\n      doc.add(new Field(\"key\", \"\" + (i + 1), Field.Store.YES, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"owner\", (i < MAX / 2) ? \"bob\" : \"sue\", Field.Store.YES, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"date\", cal.getTime().toString(), Field.Store.YES, Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n\n      cal.add(Calendar.DATE, 1);\n    }\n\n    writer.close();\n\n    searcher = new IndexSearcher(directory, true);\n\n    // query for everything to make life easier\n    BooleanQuery bq = new BooleanQuery();\n    bq.add(new TermQuery(new Term(\"owner\", \"bob\")), BooleanClause.Occur.SHOULD);\n    bq.add(new TermQuery(new Term(\"owner\", \"sue\")), BooleanClause.Occur.SHOULD);\n    query = bq;\n\n    // date filter matches everything too\n    //Date pastTheEnd = parseDate(\"2099 Jan 1\");\n    // dateFilter = DateFilter.Before(\"date\", pastTheEnd);\n    // just treat dates as strings and select the whole range for now...\n    dateFilter = new TermRangeFilter(\"date\",\"\",\"ZZZZ\",true,true);\n\n    bobFilter = new QueryWrapperFilter(\n        new TermQuery(new Term(\"owner\", \"bob\")));\n    sueFilter = new QueryWrapperFilter(\n        new TermQuery(new Term(\"owner\", \"sue\")));\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    directory = new RAMDirectory();\n    IndexWriter writer =\n       new IndexWriter(directory, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.UNLIMITED);\n\n    Calendar cal = new GregorianCalendar();\n    cal.clear();\n    cal.setTimeInMillis(1041397200000L); // 2003 January 01\n\n    for (int i = 0; i < MAX; i++) {\n      Document doc = new Document();\n      doc.add(new Field(\"key\", \"\" + (i + 1), Field.Store.YES, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"owner\", (i < MAX / 2) ? \"bob\" : \"sue\", Field.Store.YES, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"date\", cal.getTime().toString(), Field.Store.YES, Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n\n      cal.add(Calendar.DATE, 1);\n    }\n\n    writer.close();\n\n    searcher = new IndexSearcher(directory, true);\n\n    // query for everything to make life easier\n    BooleanQuery bq = new BooleanQuery();\n    bq.add(new TermQuery(new Term(\"owner\", \"bob\")), BooleanClause.Occur.SHOULD);\n    bq.add(new TermQuery(new Term(\"owner\", \"sue\")), BooleanClause.Occur.SHOULD);\n    query = bq;\n\n    // date filter matches everything too\n    //Date pastTheEnd = parseDate(\"2099 Jan 1\");\n    // dateFilter = DateFilter.Before(\"date\", pastTheEnd);\n    // just treat dates as strings and select the whole range for now...\n    dateFilter = new TermRangeFilter(\"date\",\"\",\"ZZZZ\",true,true);\n\n    bobFilter = new QueryWrapperFilter(\n        new TermQuery(new Term(\"owner\", \"bob\")));\n    sueFilter = new QueryWrapperFilter(\n        new TermQuery(new Term(\"owner\", \"sue\")));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a","date":1267298041,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/misc/src/test/org/apache/lucene/misc/ChainedFilterTest#setUp().mjava","pathOld":"contrib/misc/src/test/org/apache/lucene/misc/ChainedFilterTest#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    directory = new RAMDirectory();\n    IndexWriter writer =\n       new IndexWriter(directory, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), true, IndexWriter.MaxFieldLength.UNLIMITED);\n\n    Calendar cal = new GregorianCalendar();\n    cal.clear();\n    cal.setTimeInMillis(1041397200000L); // 2003 January 01\n\n    for (int i = 0; i < MAX; i++) {\n      Document doc = new Document();\n      doc.add(new Field(\"key\", \"\" + (i + 1), Field.Store.YES, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"owner\", (i < MAX / 2) ? \"bob\" : \"sue\", Field.Store.YES, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"date\", cal.getTime().toString(), Field.Store.YES, Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n\n      cal.add(Calendar.DATE, 1);\n    }\n\n    writer.close();\n\n    searcher = new IndexSearcher(directory, true);\n\n    // query for everything to make life easier\n    BooleanQuery bq = new BooleanQuery();\n    bq.add(new TermQuery(new Term(\"owner\", \"bob\")), BooleanClause.Occur.SHOULD);\n    bq.add(new TermQuery(new Term(\"owner\", \"sue\")), BooleanClause.Occur.SHOULD);\n    query = bq;\n\n    // date filter matches everything too\n    //Date pastTheEnd = parseDate(\"2099 Jan 1\");\n    // dateFilter = DateFilter.Before(\"date\", pastTheEnd);\n    // just treat dates as strings and select the whole range for now...\n    dateFilter = new TermRangeFilter(\"date\",\"\",\"ZZZZ\",true,true);\n\n    bobFilter = new QueryWrapperFilter(\n        new TermQuery(new Term(\"owner\", \"bob\")));\n    sueFilter = new QueryWrapperFilter(\n        new TermQuery(new Term(\"owner\", \"sue\")));\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    directory = new RAMDirectory();\n    IndexWriter writer =\n       new IndexWriter(directory, new WhitespaceAnalyzer(Version.LUCENE_CURRENT), true, IndexWriter.MaxFieldLength.UNLIMITED);\n\n    Calendar cal = new GregorianCalendar();\n    cal.clear();\n    cal.setTimeInMillis(1041397200000L); // 2003 January 01\n\n    for (int i = 0; i < MAX; i++) {\n      Document doc = new Document();\n      doc.add(new Field(\"key\", \"\" + (i + 1), Field.Store.YES, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"owner\", (i < MAX / 2) ? \"bob\" : \"sue\", Field.Store.YES, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"date\", cal.getTime().toString(), Field.Store.YES, Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n\n      cal.add(Calendar.DATE, 1);\n    }\n\n    writer.close();\n\n    searcher = new IndexSearcher(directory, true);\n\n    // query for everything to make life easier\n    BooleanQuery bq = new BooleanQuery();\n    bq.add(new TermQuery(new Term(\"owner\", \"bob\")), BooleanClause.Occur.SHOULD);\n    bq.add(new TermQuery(new Term(\"owner\", \"sue\")), BooleanClause.Occur.SHOULD);\n    query = bq;\n\n    // date filter matches everything too\n    //Date pastTheEnd = parseDate(\"2099 Jan 1\");\n    // dateFilter = DateFilter.Before(\"date\", pastTheEnd);\n    // just treat dates as strings and select the whole range for now...\n    dateFilter = new TermRangeFilter(\"date\",\"\",\"ZZZZ\",true,true);\n\n    bobFilter = new QueryWrapperFilter(\n        new TermQuery(new Term(\"owner\", \"bob\")));\n    sueFilter = new QueryWrapperFilter(\n        new TermQuery(new Term(\"owner\", \"sue\")));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1cedb00d2dd44640194401179358a2e3ba6051bf","date":1268243626,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/misc/src/test/org/apache/lucene/misc/ChainedFilterTest#setUp().mjava","pathOld":"contrib/misc/src/test/org/apache/lucene/misc/ChainedFilterTest#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    directory = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(directory, new IndexWriterConfig(TEST_VERSION_CURRENT));\n\n    Calendar cal = new GregorianCalendar();\n    cal.clear();\n    cal.setTimeInMillis(1041397200000L); // 2003 January 01\n\n    for (int i = 0; i < MAX; i++) {\n      Document doc = new Document();\n      doc.add(new Field(\"key\", \"\" + (i + 1), Field.Store.YES, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"owner\", (i < MAX / 2) ? \"bob\" : \"sue\", Field.Store.YES, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"date\", cal.getTime().toString(), Field.Store.YES, Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n\n      cal.add(Calendar.DATE, 1);\n    }\n\n    writer.close();\n\n    searcher = new IndexSearcher(directory, true);\n\n    // query for everything to make life easier\n    BooleanQuery bq = new BooleanQuery();\n    bq.add(new TermQuery(new Term(\"owner\", \"bob\")), BooleanClause.Occur.SHOULD);\n    bq.add(new TermQuery(new Term(\"owner\", \"sue\")), BooleanClause.Occur.SHOULD);\n    query = bq;\n\n    // date filter matches everything too\n    //Date pastTheEnd = parseDate(\"2099 Jan 1\");\n    // dateFilter = DateFilter.Before(\"date\", pastTheEnd);\n    // just treat dates as strings and select the whole range for now...\n    dateFilter = new TermRangeFilter(\"date\",\"\",\"ZZZZ\",true,true);\n\n    bobFilter = new QueryWrapperFilter(\n        new TermQuery(new Term(\"owner\", \"bob\")));\n    sueFilter = new QueryWrapperFilter(\n        new TermQuery(new Term(\"owner\", \"sue\")));\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    directory = new RAMDirectory();\n    IndexWriter writer =\n       new IndexWriter(directory, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), true, IndexWriter.MaxFieldLength.UNLIMITED);\n\n    Calendar cal = new GregorianCalendar();\n    cal.clear();\n    cal.setTimeInMillis(1041397200000L); // 2003 January 01\n\n    for (int i = 0; i < MAX; i++) {\n      Document doc = new Document();\n      doc.add(new Field(\"key\", \"\" + (i + 1), Field.Store.YES, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"owner\", (i < MAX / 2) ? \"bob\" : \"sue\", Field.Store.YES, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"date\", cal.getTime().toString(), Field.Store.YES, Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n\n      cal.add(Calendar.DATE, 1);\n    }\n\n    writer.close();\n\n    searcher = new IndexSearcher(directory, true);\n\n    // query for everything to make life easier\n    BooleanQuery bq = new BooleanQuery();\n    bq.add(new TermQuery(new Term(\"owner\", \"bob\")), BooleanClause.Occur.SHOULD);\n    bq.add(new TermQuery(new Term(\"owner\", \"sue\")), BooleanClause.Occur.SHOULD);\n    query = bq;\n\n    // date filter matches everything too\n    //Date pastTheEnd = parseDate(\"2099 Jan 1\");\n    // dateFilter = DateFilter.Before(\"date\", pastTheEnd);\n    // just treat dates as strings and select the whole range for now...\n    dateFilter = new TermRangeFilter(\"date\",\"\",\"ZZZZ\",true,true);\n\n    bobFilter = new QueryWrapperFilter(\n        new TermQuery(new Term(\"owner\", \"bob\")));\n    sueFilter = new QueryWrapperFilter(\n        new TermQuery(new Term(\"owner\", \"sue\")));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e52fea2c4081a1e552b98506691990be59503168","date":1268250331,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/misc/src/test/org/apache/lucene/misc/ChainedFilterTest#setUp().mjava","pathOld":"contrib/misc/src/test/org/apache/lucene/misc/ChainedFilterTest#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    directory = new RAMDirectory();\n    IndexWriter writer =\n       new IndexWriter(directory, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), true, IndexWriter.MaxFieldLength.UNLIMITED);\n\n    Calendar cal = new GregorianCalendar();\n    cal.clear();\n    cal.setTimeInMillis(1041397200000L); // 2003 January 01\n\n    for (int i = 0; i < MAX; i++) {\n      Document doc = new Document();\n      doc.add(new Field(\"key\", \"\" + (i + 1), Field.Store.YES, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"owner\", (i < MAX / 2) ? \"bob\" : \"sue\", Field.Store.YES, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"date\", cal.getTime().toString(), Field.Store.YES, Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n\n      cal.add(Calendar.DATE, 1);\n    }\n\n    writer.close();\n\n    searcher = new IndexSearcher(directory, true);\n\n    // query for everything to make life easier\n    BooleanQuery bq = new BooleanQuery();\n    bq.add(new TermQuery(new Term(\"owner\", \"bob\")), BooleanClause.Occur.SHOULD);\n    bq.add(new TermQuery(new Term(\"owner\", \"sue\")), BooleanClause.Occur.SHOULD);\n    query = bq;\n\n    // date filter matches everything too\n    //Date pastTheEnd = parseDate(\"2099 Jan 1\");\n    // dateFilter = DateFilter.Before(\"date\", pastTheEnd);\n    // just treat dates as strings and select the whole range for now...\n    dateFilter = new TermRangeFilter(\"date\",\"\",\"ZZZZ\",true,true);\n\n    bobFilter = new QueryWrapperFilter(\n        new TermQuery(new Term(\"owner\", \"bob\")));\n    sueFilter = new QueryWrapperFilter(\n        new TermQuery(new Term(\"owner\", \"sue\")));\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    directory = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(directory, new IndexWriterConfig(TEST_VERSION_CURRENT));\n\n    Calendar cal = new GregorianCalendar();\n    cal.clear();\n    cal.setTimeInMillis(1041397200000L); // 2003 January 01\n\n    for (int i = 0; i < MAX; i++) {\n      Document doc = new Document();\n      doc.add(new Field(\"key\", \"\" + (i + 1), Field.Store.YES, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"owner\", (i < MAX / 2) ? \"bob\" : \"sue\", Field.Store.YES, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"date\", cal.getTime().toString(), Field.Store.YES, Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n\n      cal.add(Calendar.DATE, 1);\n    }\n\n    writer.close();\n\n    searcher = new IndexSearcher(directory, true);\n\n    // query for everything to make life easier\n    BooleanQuery bq = new BooleanQuery();\n    bq.add(new TermQuery(new Term(\"owner\", \"bob\")), BooleanClause.Occur.SHOULD);\n    bq.add(new TermQuery(new Term(\"owner\", \"sue\")), BooleanClause.Occur.SHOULD);\n    query = bq;\n\n    // date filter matches everything too\n    //Date pastTheEnd = parseDate(\"2099 Jan 1\");\n    // dateFilter = DateFilter.Before(\"date\", pastTheEnd);\n    // just treat dates as strings and select the whole range for now...\n    dateFilter = new TermRangeFilter(\"date\",\"\",\"ZZZZ\",true,true);\n\n    bobFilter = new QueryWrapperFilter(\n        new TermQuery(new Term(\"owner\", \"bob\")));\n    sueFilter = new QueryWrapperFilter(\n        new TermQuery(new Term(\"owner\", \"sue\")));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8","date":1268494368,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/misc/src/test/org/apache/lucene/misc/ChainedFilterTest#setUp().mjava","pathOld":"contrib/misc/src/test/org/apache/lucene/misc/ChainedFilterTest#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    directory = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(directory, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n\n    Calendar cal = new GregorianCalendar();\n    cal.clear();\n    cal.setTimeInMillis(1041397200000L); // 2003 January 01\n\n    for (int i = 0; i < MAX; i++) {\n      Document doc = new Document();\n      doc.add(new Field(\"key\", \"\" + (i + 1), Field.Store.YES, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"owner\", (i < MAX / 2) ? \"bob\" : \"sue\", Field.Store.YES, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"date\", cal.getTime().toString(), Field.Store.YES, Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n\n      cal.add(Calendar.DATE, 1);\n    }\n\n    writer.close();\n\n    searcher = new IndexSearcher(directory, true);\n\n    // query for everything to make life easier\n    BooleanQuery bq = new BooleanQuery();\n    bq.add(new TermQuery(new Term(\"owner\", \"bob\")), BooleanClause.Occur.SHOULD);\n    bq.add(new TermQuery(new Term(\"owner\", \"sue\")), BooleanClause.Occur.SHOULD);\n    query = bq;\n\n    // date filter matches everything too\n    //Date pastTheEnd = parseDate(\"2099 Jan 1\");\n    // dateFilter = DateFilter.Before(\"date\", pastTheEnd);\n    // just treat dates as strings and select the whole range for now...\n    dateFilter = new TermRangeFilter(\"date\",\"\",\"ZZZZ\",true,true);\n\n    bobFilter = new QueryWrapperFilter(\n        new TermQuery(new Term(\"owner\", \"bob\")));\n    sueFilter = new QueryWrapperFilter(\n        new TermQuery(new Term(\"owner\", \"sue\")));\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    directory = new RAMDirectory();\n    IndexWriter writer =\n       new IndexWriter(directory, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), true, IndexWriter.MaxFieldLength.UNLIMITED);\n\n    Calendar cal = new GregorianCalendar();\n    cal.clear();\n    cal.setTimeInMillis(1041397200000L); // 2003 January 01\n\n    for (int i = 0; i < MAX; i++) {\n      Document doc = new Document();\n      doc.add(new Field(\"key\", \"\" + (i + 1), Field.Store.YES, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"owner\", (i < MAX / 2) ? \"bob\" : \"sue\", Field.Store.YES, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"date\", cal.getTime().toString(), Field.Store.YES, Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n\n      cal.add(Calendar.DATE, 1);\n    }\n\n    writer.close();\n\n    searcher = new IndexSearcher(directory, true);\n\n    // query for everything to make life easier\n    BooleanQuery bq = new BooleanQuery();\n    bq.add(new TermQuery(new Term(\"owner\", \"bob\")), BooleanClause.Occur.SHOULD);\n    bq.add(new TermQuery(new Term(\"owner\", \"sue\")), BooleanClause.Occur.SHOULD);\n    query = bq;\n\n    // date filter matches everything too\n    //Date pastTheEnd = parseDate(\"2099 Jan 1\");\n    // dateFilter = DateFilter.Before(\"date\", pastTheEnd);\n    // just treat dates as strings and select the whole range for now...\n    dateFilter = new TermRangeFilter(\"date\",\"\",\"ZZZZ\",true,true);\n\n    bobFilter = new QueryWrapperFilter(\n        new TermQuery(new Term(\"owner\", \"bob\")));\n    sueFilter = new QueryWrapperFilter(\n        new TermQuery(new Term(\"owner\", \"sue\")));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/misc/src/test/org/apache/lucene/misc/ChainedFilterTest#setUp().mjava","pathOld":"contrib/misc/src/test/org/apache/lucene/misc/ChainedFilterTest#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    directory = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(directory, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n\n    Calendar cal = new GregorianCalendar();\n    cal.clear();\n    cal.setTimeInMillis(1041397200000L); // 2003 January 01\n\n    for (int i = 0; i < MAX; i++) {\n      Document doc = new Document();\n      doc.add(new Field(\"key\", \"\" + (i + 1), Field.Store.YES, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"owner\", (i < MAX / 2) ? \"bob\" : \"sue\", Field.Store.YES, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"date\", cal.getTime().toString(), Field.Store.YES, Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n\n      cal.add(Calendar.DATE, 1);\n    }\n\n    writer.close();\n\n    searcher = new IndexSearcher(directory, true);\n\n    // query for everything to make life easier\n    BooleanQuery bq = new BooleanQuery();\n    bq.add(new TermQuery(new Term(\"owner\", \"bob\")), BooleanClause.Occur.SHOULD);\n    bq.add(new TermQuery(new Term(\"owner\", \"sue\")), BooleanClause.Occur.SHOULD);\n    query = bq;\n\n    // date filter matches everything too\n    //Date pastTheEnd = parseDate(\"2099 Jan 1\");\n    // dateFilter = DateFilter.Before(\"date\", pastTheEnd);\n    // just treat dates as strings and select the whole range for now...\n    dateFilter = new TermRangeFilter(\"date\",\"\",\"ZZZZ\",true,true);\n\n    bobFilter = new QueryWrapperFilter(\n        new TermQuery(new Term(\"owner\", \"bob\")));\n    sueFilter = new QueryWrapperFilter(\n        new TermQuery(new Term(\"owner\", \"sue\")));\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    directory = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(directory, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n\n    Calendar cal = new GregorianCalendar();\n    cal.clear();\n    cal.setTimeInMillis(1041397200000L); // 2003 January 01\n\n    for (int i = 0; i < MAX; i++) {\n      Document doc = new Document();\n      doc.add(new Field(\"key\", \"\" + (i + 1), Field.Store.YES, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"owner\", (i < MAX / 2) ? \"bob\" : \"sue\", Field.Store.YES, Field.Index.NOT_ANALYZED));\n      doc.add(new Field(\"date\", cal.getTime().toString(), Field.Store.YES, Field.Index.NOT_ANALYZED));\n      writer.addDocument(doc);\n\n      cal.add(Calendar.DATE, 1);\n    }\n\n    writer.close();\n\n    searcher = new IndexSearcher(directory, true);\n\n    // query for everything to make life easier\n    BooleanQuery bq = new BooleanQuery();\n    bq.add(new TermQuery(new Term(\"owner\", \"bob\")), BooleanClause.Occur.SHOULD);\n    bq.add(new TermQuery(new Term(\"owner\", \"sue\")), BooleanClause.Occur.SHOULD);\n    query = bq;\n\n    // date filter matches everything too\n    //Date pastTheEnd = parseDate(\"2099 Jan 1\");\n    // dateFilter = DateFilter.Before(\"date\", pastTheEnd);\n    // just treat dates as strings and select the whole range for now...\n    dateFilter = new TermRangeFilter(\"date\",\"\",\"ZZZZ\",true,true);\n\n    bobFilter = new QueryWrapperFilter(\n        new TermQuery(new Term(\"owner\", \"bob\")));\n    sueFilter = new QueryWrapperFilter(\n        new TermQuery(new Term(\"owner\", \"sue\")));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"64a84446b679daf1e25d901bf647686ade7fc1f0":["d57eb7c98c08c03af6e4cd83509df31c81ac16af"],"48bedd31c61edafb8baaff4bcbcac19449fb7c3a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"1cedb00d2dd44640194401179358a2e3ba6051bf":["a9ac13b5f0ce5ef1b2ce168367d993a79594b23a"],"d57eb7c98c08c03af6e4cd83509df31c81ac16af":["87c966e9308847938a7c905c2e46a56d8df788b8"],"e52fea2c4081a1e552b98506691990be59503168":["1cedb00d2dd44640194401179358a2e3ba6051bf"],"6ced3401b9c4e7ed2be67711dbc83e48b81aa736":["64a84446b679daf1e25d901bf647686ade7fc1f0"],"4256bc1b3c94786287ccdfc751230374521843cf":["48bedd31c61edafb8baaff4bcbcac19449fb7c3a"],"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8":["e52fea2c4081a1e552b98506691990be59503168"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"87c966e9308847938a7c905c2e46a56d8df788b8":["4256bc1b3c94786287ccdfc751230374521843cf"],"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a":["6ced3401b9c4e7ed2be67711dbc83e48b81aa736"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8"]},"commit2Childs":{"64a84446b679daf1e25d901bf647686ade7fc1f0":["6ced3401b9c4e7ed2be67711dbc83e48b81aa736"],"48bedd31c61edafb8baaff4bcbcac19449fb7c3a":["4256bc1b3c94786287ccdfc751230374521843cf"],"1cedb00d2dd44640194401179358a2e3ba6051bf":["e52fea2c4081a1e552b98506691990be59503168"],"d57eb7c98c08c03af6e4cd83509df31c81ac16af":["64a84446b679daf1e25d901bf647686ade7fc1f0"],"e52fea2c4081a1e552b98506691990be59503168":["84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8"],"6ced3401b9c4e7ed2be67711dbc83e48b81aa736":["a9ac13b5f0ce5ef1b2ce168367d993a79594b23a"],"4256bc1b3c94786287ccdfc751230374521843cf":["87c966e9308847938a7c905c2e46a56d8df788b8"],"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["48bedd31c61edafb8baaff4bcbcac19449fb7c3a"],"87c966e9308847938a7c905c2e46a56d8df788b8":["d57eb7c98c08c03af6e4cd83509df31c81ac16af"],"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a":["1cedb00d2dd44640194401179358a2e3ba6051bf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}