{"path":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/standard/TestQPHelper#testMultiPhraseQuery().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/standard/TestQPHelper#testMultiPhraseQuery().mjava","pathOld":"contrib/queryparser/src/test/org/apache/lucene/queryParser/standard/TestQPHelper#testMultiPhraseQuery().mjava","sourceNew":"  public void testMultiPhraseQuery() throws Exception {\n    MockRAMDirectory dir = new MockRAMDirectory();\n    IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new CannedAnalyzer()));\n    Document doc = new Document();\n    doc.add(new Field(\"field\", \"\", Field.Store.NO, Field.Index.ANALYZED));\n    w.addDocument(doc);\n    IndexReader r = w.getReader();\n    IndexSearcher s = new IndexSearcher(r);\n    \n    Query q = new StandardQueryParser(new CannedAnalyzer()).parse(\"\\\"a\\\"\", \"field\");\n    assertTrue(q instanceof MultiPhraseQuery);\n    assertEquals(1, s.search(q, 10).totalHits);\n    r.close();\n    w.close();\n  }\n\n","sourceOld":"  public void testMultiPhraseQuery() throws Exception {\n    MockRAMDirectory dir = new MockRAMDirectory();\n    IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new CannedAnalyzer()));\n    Document doc = new Document();\n    doc.add(new Field(\"field\", \"\", Field.Store.NO, Field.Index.ANALYZED));\n    w.addDocument(doc);\n    IndexReader r = w.getReader();\n    IndexSearcher s = new IndexSearcher(r);\n    \n    Query q = new StandardQueryParser(new CannedAnalyzer()).parse(\"\\\"a\\\"\", \"field\");\n    assertTrue(q instanceof MultiPhraseQuery);\n    assertEquals(1, s.search(q, 10).totalHits);\n    r.close();\n    w.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c","date":1281646583,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/standard/TestQPHelper#testMultiPhraseQuery().mjava","pathOld":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/standard/TestQPHelper#testMultiPhraseQuery().mjava","sourceNew":"  public void testMultiPhraseQuery() throws Exception {\n    Random random = newRandom();\n    MockRAMDirectory dir = newDirectory(random);\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new CannedAnalyzer()));\n    Document doc = new Document();\n    doc.add(new Field(\"field\", \"\", Field.Store.NO, Field.Index.ANALYZED));\n    w.addDocument(doc);\n    IndexReader r = w.getReader();\n    IndexSearcher s = new IndexSearcher(r);\n    \n    Query q = new StandardQueryParser(new CannedAnalyzer()).parse(\"\\\"a\\\"\", \"field\");\n    assertTrue(q instanceof MultiPhraseQuery);\n    assertEquals(1, s.search(q, 10).totalHits);\n    r.close();\n    w.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testMultiPhraseQuery() throws Exception {\n    MockRAMDirectory dir = new MockRAMDirectory();\n    IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new CannedAnalyzer()));\n    Document doc = new Document();\n    doc.add(new Field(\"field\", \"\", Field.Store.NO, Field.Index.ANALYZED));\n    w.addDocument(doc);\n    IndexReader r = w.getReader();\n    IndexSearcher s = new IndexSearcher(r);\n    \n    Query q = new StandardQueryParser(new CannedAnalyzer()).parse(\"\\\"a\\\"\", \"field\");\n    assertTrue(q instanceof MultiPhraseQuery);\n    assertEquals(1, s.search(q, 10).totalHits);\n    r.close();\n    w.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a05409176bd65129d67a785ee70e881e238a9aef","date":1282582843,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/standard/TestQPHelper#testMultiPhraseQuery().mjava","pathOld":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/standard/TestQPHelper#testMultiPhraseQuery().mjava","sourceNew":"  public void testMultiPhraseQuery() throws Exception {\n    Random random = newRandom();\n    Directory dir = newDirectory(random);\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new CannedAnalyzer()));\n    Document doc = new Document();\n    doc.add(new Field(\"field\", \"\", Field.Store.NO, Field.Index.ANALYZED));\n    w.addDocument(doc);\n    IndexReader r = w.getReader();\n    IndexSearcher s = new IndexSearcher(r);\n    \n    Query q = new StandardQueryParser(new CannedAnalyzer()).parse(\"\\\"a\\\"\", \"field\");\n    assertTrue(q instanceof MultiPhraseQuery);\n    assertEquals(1, s.search(q, 10).totalHits);\n    r.close();\n    w.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testMultiPhraseQuery() throws Exception {\n    Random random = newRandom();\n    MockRAMDirectory dir = newDirectory(random);\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new CannedAnalyzer()));\n    Document doc = new Document();\n    doc.add(new Field(\"field\", \"\", Field.Store.NO, Field.Index.ANALYZED));\n    w.addDocument(doc);\n    IndexReader r = w.getReader();\n    IndexSearcher s = new IndexSearcher(r);\n    \n    Query q = new StandardQueryParser(new CannedAnalyzer()).parse(\"\\\"a\\\"\", \"field\");\n    assertTrue(q instanceof MultiPhraseQuery);\n    assertEquals(1, s.search(q, 10).totalHits);\n    r.close();\n    w.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1f653cfcf159baeaafe5d01682a911e95bba4012","date":1284122058,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/standard/TestQPHelper#testMultiPhraseQuery().mjava","pathOld":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/standard/TestQPHelper#testMultiPhraseQuery().mjava","sourceNew":"  public void testMultiPhraseQuery() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new CannedAnalyzer()));\n    Document doc = new Document();\n    doc.add(new Field(\"field\", \"\", Field.Store.NO, Field.Index.ANALYZED));\n    w.addDocument(doc);\n    IndexReader r = w.getReader();\n    IndexSearcher s = new IndexSearcher(r);\n    \n    Query q = new StandardQueryParser(new CannedAnalyzer()).parse(\"\\\"a\\\"\", \"field\");\n    assertTrue(q instanceof MultiPhraseQuery);\n    assertEquals(1, s.search(q, 10).totalHits);\n    r.close();\n    w.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testMultiPhraseQuery() throws Exception {\n    Random random = newRandom();\n    Directory dir = newDirectory(random);\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new CannedAnalyzer()));\n    Document doc = new Document();\n    doc.add(new Field(\"field\", \"\", Field.Store.NO, Field.Index.ANALYZED));\n    w.addDocument(doc);\n    IndexReader r = w.getReader();\n    IndexSearcher s = new IndexSearcher(r);\n    \n    Query q = new StandardQueryParser(new CannedAnalyzer()).parse(\"\\\"a\\\"\", \"field\");\n    assertTrue(q instanceof MultiPhraseQuery);\n    assertEquals(1, s.search(q, 10).totalHits);\n    r.close();\n    w.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"132903c28af3aa6f67284b78de91c0f0a99488c2","date":1284282129,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/standard/TestQPHelper#testMultiPhraseQuery().mjava","pathOld":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/standard/TestQPHelper#testMultiPhraseQuery().mjava","sourceNew":"  public void testMultiPhraseQuery() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new CannedAnalyzer()));\n    Document doc = new Document();\n    doc.add(newField(\"field\", \"\", Field.Store.NO, Field.Index.ANALYZED));\n    w.addDocument(doc);\n    IndexReader r = w.getReader();\n    IndexSearcher s = new IndexSearcher(r);\n    \n    Query q = new StandardQueryParser(new CannedAnalyzer()).parse(\"\\\"a\\\"\", \"field\");\n    assertTrue(q instanceof MultiPhraseQuery);\n    assertEquals(1, s.search(q, 10).totalHits);\n    r.close();\n    w.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testMultiPhraseQuery() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new CannedAnalyzer()));\n    Document doc = new Document();\n    doc.add(new Field(\"field\", \"\", Field.Store.NO, Field.Index.ANALYZED));\n    w.addDocument(doc);\n    IndexReader r = w.getReader();\n    IndexSearcher s = new IndexSearcher(r);\n    \n    Query q = new StandardQueryParser(new CannedAnalyzer()).parse(\"\\\"a\\\"\", \"field\");\n    assertTrue(q instanceof MultiPhraseQuery);\n    assertEquals(1, s.search(q, 10).totalHits);\n    r.close();\n    w.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"296e4ed69ccbda3c7b5fdb86c7acaa43c9074e01","date":1286712181,"type":3,"author":"Grant Ingersoll","isMerge":false,"pathNew":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/standard/TestQPHelper#testMultiPhraseQuery().mjava","pathOld":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/standard/TestQPHelper#testMultiPhraseQuery().mjava","sourceNew":"  public void testMultiPhraseQuery() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new CannedAnalyzer()));\n    Document doc = new Document();\n    doc.add(newField(\"field\", \"\", Field.Store.NO, Field.Index.ANALYZED));\n    w.addDocument(doc);\n    IndexReader r = IndexReader.open(w);\n    IndexSearcher s = new IndexSearcher(r);\n    \n    Query q = new StandardQueryParser(new CannedAnalyzer()).parse(\"\\\"a\\\"\", \"field\");\n    assertTrue(q instanceof MultiPhraseQuery);\n    assertEquals(1, s.search(q, 10).totalHits);\n    r.close();\n    w.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testMultiPhraseQuery() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new CannedAnalyzer()));\n    Document doc = new Document();\n    doc.add(newField(\"field\", \"\", Field.Store.NO, Field.Index.ANALYZED));\n    w.addDocument(doc);\n    IndexReader r = w.getReader();\n    IndexSearcher s = new IndexSearcher(r);\n    \n    Query q = new StandardQueryParser(new CannedAnalyzer()).parse(\"\\\"a\\\"\", \"field\");\n    assertTrue(q instanceof MultiPhraseQuery);\n    assertEquals(1, s.search(q, 10).totalHits);\n    r.close();\n    w.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/standard/TestQPHelper#testMultiPhraseQuery().mjava","pathOld":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/standard/TestQPHelper#testMultiPhraseQuery().mjava","sourceNew":"  public void testMultiPhraseQuery() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new CannedAnalyzer()));\n    Document doc = new Document();\n    doc.add(newField(\"field\", \"\", Field.Store.NO, Field.Index.ANALYZED));\n    w.addDocument(doc);\n    IndexReader r = IndexReader.open(w);\n    IndexSearcher s = new IndexSearcher(r);\n    \n    Query q = new StandardQueryParser(new CannedAnalyzer()).parse(\"\\\"a\\\"\", \"field\");\n    assertTrue(q instanceof MultiPhraseQuery);\n    assertEquals(1, s.search(q, 10).totalHits);\n    r.close();\n    w.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testMultiPhraseQuery() throws Exception {\n    MockRAMDirectory dir = new MockRAMDirectory();\n    IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new CannedAnalyzer()));\n    Document doc = new Document();\n    doc.add(new Field(\"field\", \"\", Field.Store.NO, Field.Index.ANALYZED));\n    w.addDocument(doc);\n    IndexReader r = w.getReader();\n    IndexSearcher s = new IndexSearcher(r);\n    \n    Query q = new StandardQueryParser(new CannedAnalyzer()).parse(\"\\\"a\\\"\", \"field\");\n    assertTrue(q instanceof MultiPhraseQuery);\n    assertEquals(1, s.search(q, 10).totalHits);\n    r.close();\n    w.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"eb378f8bdee16a26810e086303a4a86b4930ea12","date":1296410797,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/standard/TestQPHelper#testMultiPhraseQuery().mjava","pathOld":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/standard/TestQPHelper#testMultiPhraseQuery().mjava","sourceNew":"  public void testMultiPhraseQuery() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new CannedAnalyzer()));\n    Document doc = new Document();\n    doc.add(newField(\"field\", \"\", Field.Store.NO, Field.Index.ANALYZED));\n    w.addDocument(doc);\n    IndexReader r = IndexReader.open(w, true);\n    IndexSearcher s = new IndexSearcher(r);\n    \n    Query q = new StandardQueryParser(new CannedAnalyzer()).parse(\"\\\"a\\\"\", \"field\");\n    assertTrue(q instanceof MultiPhraseQuery);\n    assertEquals(1, s.search(q, 10).totalHits);\n    r.close();\n    w.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testMultiPhraseQuery() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new CannedAnalyzer()));\n    Document doc = new Document();\n    doc.add(newField(\"field\", \"\", Field.Store.NO, Field.Index.ANALYZED));\n    w.addDocument(doc);\n    IndexReader r = IndexReader.open(w);\n    IndexSearcher s = new IndexSearcher(r);\n    \n    Query q = new StandardQueryParser(new CannedAnalyzer()).parse(\"\\\"a\\\"\", \"field\");\n    assertTrue(q instanceof MultiPhraseQuery);\n    assertEquals(1, s.search(q, 10).totalHits);\n    r.close();\n    w.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"790e1fde4caa765b3faaad3fbcd25c6973450336","date":1296689245,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/standard/TestQPHelper#testMultiPhraseQuery().mjava","pathOld":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/standard/TestQPHelper#testMultiPhraseQuery().mjava","sourceNew":"  public void testMultiPhraseQuery() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new CannedAnalyzer()));\n    Document doc = new Document();\n    doc.add(newField(\"field\", \"\", Field.Store.NO, Field.Index.ANALYZED));\n    w.addDocument(doc);\n    IndexReader r = IndexReader.open(w, true);\n    IndexSearcher s = newSearcher(r);\n    \n    Query q = new StandardQueryParser(new CannedAnalyzer()).parse(\"\\\"a\\\"\", \"field\");\n    assertTrue(q instanceof MultiPhraseQuery);\n    assertEquals(1, s.search(q, 10).totalHits);\n    s.close();\n    r.close();\n    w.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testMultiPhraseQuery() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new CannedAnalyzer()));\n    Document doc = new Document();\n    doc.add(newField(\"field\", \"\", Field.Store.NO, Field.Index.ANALYZED));\n    w.addDocument(doc);\n    IndexReader r = IndexReader.open(w, true);\n    IndexSearcher s = new IndexSearcher(r);\n    \n    Query q = new StandardQueryParser(new CannedAnalyzer()).parse(\"\\\"a\\\"\", \"field\");\n    assertTrue(q instanceof MultiPhraseQuery);\n    assertEquals(1, s.search(q, 10).totalHits);\n    r.close();\n    w.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/standard/TestQPHelper#testMultiPhraseQuery().mjava","pathOld":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/standard/TestQPHelper#testMultiPhraseQuery().mjava","sourceNew":"  public void testMultiPhraseQuery() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new CannedAnalyzer()));\n    Document doc = new Document();\n    doc.add(newField(\"field\", \"\", Field.Store.NO, Field.Index.ANALYZED));\n    w.addDocument(doc);\n    IndexReader r = IndexReader.open(w, true);\n    IndexSearcher s = newSearcher(r);\n    \n    Query q = new StandardQueryParser(new CannedAnalyzer()).parse(\"\\\"a\\\"\", \"field\");\n    assertTrue(q instanceof MultiPhraseQuery);\n    assertEquals(1, s.search(q, 10).totalHits);\n    s.close();\n    r.close();\n    w.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testMultiPhraseQuery() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new CannedAnalyzer()));\n    Document doc = new Document();\n    doc.add(newField(\"field\", \"\", Field.Store.NO, Field.Index.ANALYZED));\n    w.addDocument(doc);\n    IndexReader r = IndexReader.open(w);\n    IndexSearcher s = new IndexSearcher(r);\n    \n    Query q = new StandardQueryParser(new CannedAnalyzer()).parse(\"\\\"a\\\"\", \"field\");\n    assertTrue(q instanceof MultiPhraseQuery);\n    assertEquals(1, s.search(q, 10).totalHits);\n    r.close();\n    w.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/standard/TestQPHelper#testMultiPhraseQuery().mjava","pathOld":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/standard/TestQPHelper#testMultiPhraseQuery().mjava","sourceNew":"  public void testMultiPhraseQuery() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new CannedAnalyzer()));\n    Document doc = new Document();\n    doc.add(newField(\"field\", \"\", Field.Store.NO, Field.Index.ANALYZED));\n    w.addDocument(doc);\n    IndexReader r = IndexReader.open(w, true);\n    IndexSearcher s = newSearcher(r);\n    \n    Query q = new StandardQueryParser(new CannedAnalyzer()).parse(\"\\\"a\\\"\", \"field\");\n    assertTrue(q instanceof MultiPhraseQuery);\n    assertEquals(1, s.search(q, 10).totalHits);\n    s.close();\n    r.close();\n    w.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testMultiPhraseQuery() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new CannedAnalyzer()));\n    Document doc = new Document();\n    doc.add(newField(\"field\", \"\", Field.Store.NO, Field.Index.ANALYZED));\n    w.addDocument(doc);\n    IndexReader r = IndexReader.open(w);\n    IndexSearcher s = new IndexSearcher(r);\n    \n    Query q = new StandardQueryParser(new CannedAnalyzer()).parse(\"\\\"a\\\"\", \"field\");\n    assertTrue(q instanceof MultiPhraseQuery);\n    assertEquals(1, s.search(q, 10).totalHits);\n    r.close();\n    w.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cf7d991c51b580d4b7bf2ad583dba058c0a2dd1","date":1310612214,"type":5,"author":"Christopher John Male","isMerge":false,"pathNew":"modules/queryparser/src/test/org/apache/lucene/queryparser/flexible/standard/TestQPHelper#testMultiPhraseQuery().mjava","pathOld":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/standard/TestQPHelper#testMultiPhraseQuery().mjava","sourceNew":"  public void testMultiPhraseQuery() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new CannedAnalyzer()));\n    Document doc = new Document();\n    doc.add(newField(\"field\", \"\", Field.Store.NO, Field.Index.ANALYZED));\n    w.addDocument(doc);\n    IndexReader r = IndexReader.open(w, true);\n    IndexSearcher s = newSearcher(r);\n    \n    Query q = new StandardQueryParser(new CannedAnalyzer()).parse(\"\\\"a\\\"\", \"field\");\n    assertTrue(q instanceof MultiPhraseQuery);\n    assertEquals(1, s.search(q, 10).totalHits);\n    s.close();\n    r.close();\n    w.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testMultiPhraseQuery() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new CannedAnalyzer()));\n    Document doc = new Document();\n    doc.add(newField(\"field\", \"\", Field.Store.NO, Field.Index.ANALYZED));\n    w.addDocument(doc);\n    IndexReader r = IndexReader.open(w, true);\n    IndexSearcher s = newSearcher(r);\n    \n    Query q = new StandardQueryParser(new CannedAnalyzer()).parse(\"\\\"a\\\"\", \"field\");\n    assertTrue(q instanceof MultiPhraseQuery);\n    assertEquals(1, s.search(q, 10).totalHits);\n    s.close();\n    r.close();\n    w.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4cf7d991c51b580d4b7bf2ad583dba058c0a2dd1":["790e1fde4caa765b3faaad3fbcd25c6973450336"],"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"132903c28af3aa6f67284b78de91c0f0a99488c2":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["9454a6510e2db155fb01faa5c049b06ece95fab9","296e4ed69ccbda3c7b5fdb86c7acaa43c9074e01"],"eb378f8bdee16a26810e086303a4a86b4930ea12":["296e4ed69ccbda3c7b5fdb86c7acaa43c9074e01"],"790e1fde4caa765b3faaad3fbcd25c6973450336":["eb378f8bdee16a26810e086303a4a86b4930ea12"],"296e4ed69ccbda3c7b5fdb86c7acaa43c9074e01":["132903c28af3aa6f67284b78de91c0f0a99488c2"],"1f653cfcf159baeaafe5d01682a911e95bba4012":["a05409176bd65129d67a785ee70e881e238a9aef"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["296e4ed69ccbda3c7b5fdb86c7acaa43c9074e01","790e1fde4caa765b3faaad3fbcd25c6973450336"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a05409176bd65129d67a785ee70e881e238a9aef":["ab9633cb67e3c0aec3c066147a23a957d6e7ad8c"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","790e1fde4caa765b3faaad3fbcd25c6973450336"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4cf7d991c51b580d4b7bf2ad583dba058c0a2dd1"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"4cf7d991c51b580d4b7bf2ad583dba058c0a2dd1":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c":["a05409176bd65129d67a785ee70e881e238a9aef"],"132903c28af3aa6f67284b78de91c0f0a99488c2":["296e4ed69ccbda3c7b5fdb86c7acaa43c9074e01"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["bde51b089eb7f86171eb3406e38a274743f9b7ac"],"eb378f8bdee16a26810e086303a4a86b4930ea12":["790e1fde4caa765b3faaad3fbcd25c6973450336"],"790e1fde4caa765b3faaad3fbcd25c6973450336":["4cf7d991c51b580d4b7bf2ad583dba058c0a2dd1","29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"296e4ed69ccbda3c7b5fdb86c7acaa43c9074e01":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","eb378f8bdee16a26810e086303a4a86b4930ea12","29ef99d61cda9641b6250bf9567329a6e65f901d"],"1f653cfcf159baeaafe5d01682a911e95bba4012":["132903c28af3aa6f67284b78de91c0f0a99488c2"],"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a05409176bd65129d67a785ee70e881e238a9aef":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["ab9633cb67e3c0aec3c066147a23a957d6e7ad8c","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}