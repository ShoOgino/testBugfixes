{"path":"lucene/src/test/org/apache/lucene/index/TestIndexWriterOnJRECrash#testNRTThreads().mjava","commits":[{"id":"53f6c67ebf2e8c3ab674868621bfa5e99e4ea163","date":1291984276,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterOnJRECrash#testNRTThreads().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void testNRTThreads() throws Exception {\n    String vendor = Constants.JAVA_VENDOR;\n    assumeTrue(vendor + \" JRE not supported.\", \n        vendor.startsWith(\"Sun\") || vendor.startsWith(\"IBM\"));\n    \n    // if we are not the fork\n    if (System.getProperty(\"tests.crashmode\") == null) {\n      // try up to 10 times to create an index\n      for (int i = 0; i < 10; i++) {\n        forkTest();\n        // if we succeeded in finding an index, we are done.\n        if (checkIndexes(tempDir))\n          return;\n      }\n    } else {\n      // we are the fork, setup a crashing thread\n      final int crashTime = _TestUtil.nextInt(random, 500, 4000);\n      Thread t = new Thread() {\n        @Override\n        public void run() {\n          try {\n            Thread.sleep(crashTime);\n          } catch (InterruptedException e) {}\n          crashJRE();\n        }\n      };\n      t.setPriority(Thread.MAX_PRIORITY);\n      t.start();\n      // run the test until we crash.\n      for (int i = 0; i < 1000; i++) {\n        super.testNRTThreads();\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"daffebbe3cdd83b11a50d517323609120c3089c5","date":1292268116,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterOnJRECrash#testNRTThreads().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterOnJRECrash#testNRTThreads().mjava","sourceNew":"  @Override\n  public void testNRTThreads() throws Exception {\n    String vendor = Constants.JAVA_VENDOR;\n    assumeTrue(vendor + \" JRE not supported.\", \n        vendor.startsWith(\"Sun\") || vendor.startsWith(\"IBM\") || vendor.startsWith(\"Apple\"));\n    \n    // if we are not the fork\n    if (System.getProperty(\"tests.crashmode\") == null) {\n      // try up to 10 times to create an index\n      for (int i = 0; i < 10; i++) {\n        forkTest();\n        // if we succeeded in finding an index, we are done.\n        if (checkIndexes(tempDir))\n          return;\n      }\n    } else {\n      // we are the fork, setup a crashing thread\n      final int crashTime = _TestUtil.nextInt(random, 500, 4000);\n      Thread t = new Thread() {\n        @Override\n        public void run() {\n          try {\n            Thread.sleep(crashTime);\n          } catch (InterruptedException e) {}\n          crashJRE();\n        }\n      };\n      t.setPriority(Thread.MAX_PRIORITY);\n      t.start();\n      // run the test until we crash.\n      for (int i = 0; i < 1000; i++) {\n        super.testNRTThreads();\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void testNRTThreads() throws Exception {\n    String vendor = Constants.JAVA_VENDOR;\n    assumeTrue(vendor + \" JRE not supported.\", \n        vendor.startsWith(\"Sun\") || vendor.startsWith(\"IBM\"));\n    \n    // if we are not the fork\n    if (System.getProperty(\"tests.crashmode\") == null) {\n      // try up to 10 times to create an index\n      for (int i = 0; i < 10; i++) {\n        forkTest();\n        // if we succeeded in finding an index, we are done.\n        if (checkIndexes(tempDir))\n          return;\n      }\n    } else {\n      // we are the fork, setup a crashing thread\n      final int crashTime = _TestUtil.nextInt(random, 500, 4000);\n      Thread t = new Thread() {\n        @Override\n        public void run() {\n          try {\n            Thread.sleep(crashTime);\n          } catch (InterruptedException e) {}\n          crashJRE();\n        }\n      };\n      t.setPriority(Thread.MAX_PRIORITY);\n      t.start();\n      // run the test until we crash.\n      for (int i = 0; i < 1000; i++) {\n        super.testNRTThreads();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab5cb6a74aefb78aa0569857970b9151dfe2e787","date":1292842407,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterOnJRECrash#testNRTThreads().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void testNRTThreads() throws Exception {\n    String vendor = Constants.JAVA_VENDOR;\n    assumeTrue(vendor + \" JRE not supported.\", \n        vendor.startsWith(\"Sun\") || vendor.startsWith(\"IBM\") || vendor.startsWith(\"Apple\"));\n    \n    // if we are not the fork\n    if (System.getProperty(\"tests.crashmode\") == null) {\n      // try up to 10 times to create an index\n      for (int i = 0; i < 10; i++) {\n        forkTest();\n        // if we succeeded in finding an index, we are done.\n        if (checkIndexes(tempDir))\n          return;\n      }\n    } else {\n      // we are the fork, setup a crashing thread\n      final int crashTime = _TestUtil.nextInt(random, 500, 4000);\n      Thread t = new Thread() {\n        @Override\n        public void run() {\n          try {\n            Thread.sleep(crashTime);\n          } catch (InterruptedException e) {}\n          crashJRE();\n        }\n      };\n      t.setPriority(Thread.MAX_PRIORITY);\n      t.start();\n      // run the test until we crash.\n      for (int i = 0; i < 1000; i++) {\n        super.testNRTThreads();\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterOnJRECrash#testNRTThreads().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void testNRTThreads() throws Exception {\n    String vendor = Constants.JAVA_VENDOR;\n    assumeTrue(vendor + \" JRE not supported.\",\n        vendor.startsWith(\"Sun\") || vendor.startsWith(\"IBM\") || vendor.startsWith(\"Apple\"));\n\n    // if we are not the fork\n    if (System.getProperty(\"tests.crashmode\") == null) {\n      // try up to 10 times to create an index\n      for (int i = 0; i < 10; i++) {\n        forkTest();\n        // if we succeeded in finding an index, we are done.\n        if (checkIndexes(tempDir))\n          return;\n      }\n    } else {\n      // we are the fork, setup a crashing thread\n      final int crashTime = _TestUtil.nextInt(random, 500, 4000);\n      Thread t = new Thread() {\n        @Override\n        public void run() {\n          try {\n            Thread.sleep(crashTime);\n          } catch (InterruptedException e) {}\n          crashJRE();\n        }\n      };\n      t.setPriority(Thread.MAX_PRIORITY);\n      t.start();\n      // run the test until we crash.\n      for (int i = 0; i < 1000; i++) {\n        super.testNRTThreads();\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0c72a3da4d2da11f51cd898496dd30e850ece4e6","date":1295443053,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterOnJRECrash#testNRTThreads().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterOnJRECrash#testNRTThreads().mjava","sourceNew":"  @Override\n  public void testNRTThreads() throws Exception {\n    String vendor = Constants.JAVA_VENDOR;\n    assumeTrue(vendor + \" JRE not supported.\", \n        vendor.startsWith(\"Sun\") || vendor.startsWith(\"Apple\"));\n    \n    // if we are not the fork\n    if (System.getProperty(\"tests.crashmode\") == null) {\n      // try up to 10 times to create an index\n      for (int i = 0; i < 10; i++) {\n        forkTest();\n        // if we succeeded in finding an index, we are done.\n        if (checkIndexes(tempDir))\n          return;\n      }\n    } else {\n      // we are the fork, setup a crashing thread\n      final int crashTime = _TestUtil.nextInt(random, 500, 4000);\n      Thread t = new Thread() {\n        @Override\n        public void run() {\n          try {\n            Thread.sleep(crashTime);\n          } catch (InterruptedException e) {}\n          crashJRE();\n        }\n      };\n      t.setPriority(Thread.MAX_PRIORITY);\n      t.start();\n      // run the test until we crash.\n      for (int i = 0; i < 1000; i++) {\n        super.testNRTThreads();\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void testNRTThreads() throws Exception {\n    String vendor = Constants.JAVA_VENDOR;\n    assumeTrue(vendor + \" JRE not supported.\", \n        vendor.startsWith(\"Sun\") || vendor.startsWith(\"IBM\") || vendor.startsWith(\"Apple\"));\n    \n    // if we are not the fork\n    if (System.getProperty(\"tests.crashmode\") == null) {\n      // try up to 10 times to create an index\n      for (int i = 0; i < 10; i++) {\n        forkTest();\n        // if we succeeded in finding an index, we are done.\n        if (checkIndexes(tempDir))\n          return;\n      }\n    } else {\n      // we are the fork, setup a crashing thread\n      final int crashTime = _TestUtil.nextInt(random, 500, 4000);\n      Thread t = new Thread() {\n        @Override\n        public void run() {\n          try {\n            Thread.sleep(crashTime);\n          } catch (InterruptedException e) {}\n          crashJRE();\n        }\n      };\n      t.setPriority(Thread.MAX_PRIORITY);\n      t.start();\n      // run the test until we crash.\n      for (int i = 0; i < 1000; i++) {\n        super.testNRTThreads();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e79a6d080bdd5b2a8f56342cf571b5476de04180","date":1295638686,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterOnJRECrash#testNRTThreads().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterOnJRECrash#testNRTThreads().mjava","sourceNew":"  @Override\n  public void testNRTThreads() throws Exception {\n    String vendor = Constants.JAVA_VENDOR;\n    assumeTrue(vendor + \" JRE not supported.\",\n        vendor.startsWith(\"Sun\") || vendor.startsWith(\"Apple\"));\n\n    // if we are not the fork\n    if (System.getProperty(\"tests.crashmode\") == null) {\n      // try up to 10 times to create an index\n      for (int i = 0; i < 10; i++) {\n        forkTest();\n        // if we succeeded in finding an index, we are done.\n        if (checkIndexes(tempDir))\n          return;\n      }\n    } else {\n      // we are the fork, setup a crashing thread\n      final int crashTime = _TestUtil.nextInt(random, 500, 4000);\n      Thread t = new Thread() {\n        @Override\n        public void run() {\n          try {\n            Thread.sleep(crashTime);\n          } catch (InterruptedException e) {}\n          crashJRE();\n        }\n      };\n      t.setPriority(Thread.MAX_PRIORITY);\n      t.start();\n      // run the test until we crash.\n      for (int i = 0; i < 1000; i++) {\n        super.testNRTThreads();\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void testNRTThreads() throws Exception {\n    String vendor = Constants.JAVA_VENDOR;\n    assumeTrue(vendor + \" JRE not supported.\",\n        vendor.startsWith(\"Sun\") || vendor.startsWith(\"IBM\") || vendor.startsWith(\"Apple\"));\n\n    // if we are not the fork\n    if (System.getProperty(\"tests.crashmode\") == null) {\n      // try up to 10 times to create an index\n      for (int i = 0; i < 10; i++) {\n        forkTest();\n        // if we succeeded in finding an index, we are done.\n        if (checkIndexes(tempDir))\n          return;\n      }\n    } else {\n      // we are the fork, setup a crashing thread\n      final int crashTime = _TestUtil.nextInt(random, 500, 4000);\n      Thread t = new Thread() {\n        @Override\n        public void run() {\n          try {\n            Thread.sleep(crashTime);\n          } catch (InterruptedException e) {}\n          crashJRE();\n        }\n      };\n      t.setPriority(Thread.MAX_PRIORITY);\n      t.start();\n      // run the test until we crash.\n      for (int i = 0; i < 1000; i++) {\n        super.testNRTThreads();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterOnJRECrash#testNRTThreads().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterOnJRECrash#testNRTThreads().mjava","sourceNew":"  @Override\n  public void testNRTThreads() throws Exception {\n    String vendor = Constants.JAVA_VENDOR;\n    assumeTrue(vendor + \" JRE not supported.\", \n        vendor.startsWith(\"Sun\") || vendor.startsWith(\"Apple\"));\n    \n    // if we are not the fork\n    if (System.getProperty(\"tests.crashmode\") == null) {\n      // try up to 10 times to create an index\n      for (int i = 0; i < 10; i++) {\n        forkTest();\n        // if we succeeded in finding an index, we are done.\n        if (checkIndexes(tempDir))\n          return;\n      }\n    } else {\n      // we are the fork, setup a crashing thread\n      final int crashTime = _TestUtil.nextInt(random, 500, 4000);\n      Thread t = new Thread() {\n        @Override\n        public void run() {\n          try {\n            Thread.sleep(crashTime);\n          } catch (InterruptedException e) {}\n          crashJRE();\n        }\n      };\n      t.setPriority(Thread.MAX_PRIORITY);\n      t.start();\n      // run the test until we crash.\n      for (int i = 0; i < 1000; i++) {\n        super.testNRTThreads();\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void testNRTThreads() throws Exception {\n    String vendor = Constants.JAVA_VENDOR;\n    assumeTrue(vendor + \" JRE not supported.\", \n        vendor.startsWith(\"Sun\") || vendor.startsWith(\"IBM\") || vendor.startsWith(\"Apple\"));\n    \n    // if we are not the fork\n    if (System.getProperty(\"tests.crashmode\") == null) {\n      // try up to 10 times to create an index\n      for (int i = 0; i < 10; i++) {\n        forkTest();\n        // if we succeeded in finding an index, we are done.\n        if (checkIndexes(tempDir))\n          return;\n      }\n    } else {\n      // we are the fork, setup a crashing thread\n      final int crashTime = _TestUtil.nextInt(random, 500, 4000);\n      Thread t = new Thread() {\n        @Override\n        public void run() {\n          try {\n            Thread.sleep(crashTime);\n          } catch (InterruptedException e) {}\n          crashJRE();\n        }\n      };\n      t.setPriority(Thread.MAX_PRIORITY);\n      t.start();\n      // run the test until we crash.\n      for (int i = 0; i < 1000; i++) {\n        super.testNRTThreads();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0762b640e0d0d12b6edb96db68986e13145c3484","date":1307575932,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterOnJRECrash#testNRTThreads().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterOnJRECrash#testNRTThreads().mjava","sourceNew":"  @Override\n  public void testNRTThreads() throws Exception {\n    String vendor = Constants.JAVA_VENDOR;\n    assumeTrue(vendor + \" JRE not supported.\", \n        vendor.startsWith(\"Sun\") || vendor.startsWith(\"Apple\"));\n    \n    // if we are not the fork\n    if (System.getProperty(\"tests.crashmode\") == null) {\n      // try up to 10 times to create an index\n      for (int i = 0; i < 10; i++) {\n        forkTest();\n        // if we succeeded in finding an index, we are done.\n        if (checkIndexes(tempDir))\n          return;\n      }\n    } else {\n      // we are the fork, setup a crashing thread\n      final int crashTime = TEST_NIGHTLY ? _TestUtil.nextInt(random, 500, 4000) : _TestUtil.nextInt(random, 300, 1000);\n      Thread t = new Thread() {\n        @Override\n        public void run() {\n          try {\n            Thread.sleep(crashTime);\n          } catch (InterruptedException e) {}\n          crashJRE();\n        }\n      };\n      t.setPriority(Thread.MAX_PRIORITY);\n      t.start();\n      // run the test until we crash.\n      for (int i = 0; i < 1000; i++) {\n        super.testNRTThreads();\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void testNRTThreads() throws Exception {\n    String vendor = Constants.JAVA_VENDOR;\n    assumeTrue(vendor + \" JRE not supported.\", \n        vendor.startsWith(\"Sun\") || vendor.startsWith(\"Apple\"));\n    \n    // if we are not the fork\n    if (System.getProperty(\"tests.crashmode\") == null) {\n      // try up to 10 times to create an index\n      for (int i = 0; i < 10; i++) {\n        forkTest();\n        // if we succeeded in finding an index, we are done.\n        if (checkIndexes(tempDir))\n          return;\n      }\n    } else {\n      // we are the fork, setup a crashing thread\n      final int crashTime = _TestUtil.nextInt(random, 500, 4000);\n      Thread t = new Thread() {\n        @Override\n        public void run() {\n          try {\n            Thread.sleep(crashTime);\n          } catch (InterruptedException e) {}\n          crashJRE();\n        }\n      };\n      t.setPriority(Thread.MAX_PRIORITY);\n      t.start();\n      // run the test until we crash.\n      for (int i = 0; i < 1000; i++) {\n        super.testNRTThreads();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"77cf4379b2824f6ea34b091c495d6e95c38ff9e2","date":1307610475,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterOnJRECrash#testNRTThreads().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterOnJRECrash#testNRTThreads().mjava","sourceNew":"  @Override\n  public void testNRTThreads() throws Exception {\n    String vendor = Constants.JAVA_VENDOR;\n    assumeTrue(vendor + \" JRE not supported.\", \n        vendor.startsWith(\"Sun\") || vendor.startsWith(\"Apple\"));\n    \n    // if we are not the fork\n    if (System.getProperty(\"tests.crashmode\") == null) {\n      // try up to 10 times to create an index\n      for (int i = 0; i < 10; i++) {\n        forkTest();\n        // if we succeeded in finding an index, we are done.\n        if (checkIndexes(tempDir))\n          return;\n      }\n    } else {\n      // we are the fork, setup a crashing thread\n      final int crashTime = TEST_NIGHTLY ? _TestUtil.nextInt(random, 500, 4000) : _TestUtil.nextInt(random, 300, 1000);\n      Thread t = new Thread() {\n        @Override\n        public void run() {\n          try {\n            Thread.sleep(crashTime);\n          } catch (InterruptedException e) {}\n          crashJRE();\n        }\n      };\n      t.setPriority(Thread.MAX_PRIORITY);\n      t.start();\n      // run the test until we crash.\n      for (int i = 0; i < 1000; i++) {\n        super.testNRTThreads();\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void testNRTThreads() throws Exception {\n    String vendor = Constants.JAVA_VENDOR;\n    assumeTrue(vendor + \" JRE not supported.\", \n        vendor.startsWith(\"Sun\") || vendor.startsWith(\"Apple\"));\n    \n    // if we are not the fork\n    if (System.getProperty(\"tests.crashmode\") == null) {\n      // try up to 10 times to create an index\n      for (int i = 0; i < 10; i++) {\n        forkTest();\n        // if we succeeded in finding an index, we are done.\n        if (checkIndexes(tempDir))\n          return;\n      }\n    } else {\n      // we are the fork, setup a crashing thread\n      final int crashTime = _TestUtil.nextInt(random, 500, 4000);\n      Thread t = new Thread() {\n        @Override\n        public void run() {\n          try {\n            Thread.sleep(crashTime);\n          } catch (InterruptedException e) {}\n          crashJRE();\n        }\n      };\n      t.setPriority(Thread.MAX_PRIORITY);\n      t.start();\n      // run the test until we crash.\n      for (int i = 0; i < 1000; i++) {\n        super.testNRTThreads();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","date":1307729864,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterOnJRECrash#testNRTThreads().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterOnJRECrash#testNRTThreads().mjava","sourceNew":"  @Override\n  public void testNRTThreads() throws Exception {\n    String vendor = Constants.JAVA_VENDOR;\n    assumeTrue(vendor + \" JRE not supported.\", \n        vendor.startsWith(\"Sun\") || vendor.startsWith(\"Apple\"));\n    \n    // if we are not the fork\n    if (System.getProperty(\"tests.crashmode\") == null) {\n      // try up to 10 times to create an index\n      for (int i = 0; i < 10; i++) {\n        forkTest();\n        // if we succeeded in finding an index, we are done.\n        if (checkIndexes(tempDir))\n          return;\n      }\n    } else {\n      // we are the fork, setup a crashing thread\n      final int crashTime = TEST_NIGHTLY ? _TestUtil.nextInt(random, 500, 4000) : _TestUtil.nextInt(random, 300, 1000);\n      Thread t = new Thread() {\n        @Override\n        public void run() {\n          try {\n            Thread.sleep(crashTime);\n          } catch (InterruptedException e) {}\n          crashJRE();\n        }\n      };\n      t.setPriority(Thread.MAX_PRIORITY);\n      t.start();\n      // run the test until we crash.\n      for (int i = 0; i < 1000; i++) {\n        super.testNRTThreads();\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void testNRTThreads() throws Exception {\n    String vendor = Constants.JAVA_VENDOR;\n    assumeTrue(vendor + \" JRE not supported.\", \n        vendor.startsWith(\"Sun\") || vendor.startsWith(\"Apple\"));\n    \n    // if we are not the fork\n    if (System.getProperty(\"tests.crashmode\") == null) {\n      // try up to 10 times to create an index\n      for (int i = 0; i < 10; i++) {\n        forkTest();\n        // if we succeeded in finding an index, we are done.\n        if (checkIndexes(tempDir))\n          return;\n      }\n    } else {\n      // we are the fork, setup a crashing thread\n      final int crashTime = _TestUtil.nextInt(random, 500, 4000);\n      Thread t = new Thread() {\n        @Override\n        public void run() {\n          try {\n            Thread.sleep(crashTime);\n          } catch (InterruptedException e) {}\n          crashJRE();\n        }\n      };\n      t.setPriority(Thread.MAX_PRIORITY);\n      t.start();\n      // run the test until we crash.\n      for (int i = 0; i < 1000; i++) {\n        super.testNRTThreads();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a48ce78ef9c638df43d61dc30b4625347b47016e","date":1308554244,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterOnJRECrash#testNRTThreads().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterOnJRECrash#testNRTThreads().mjava","sourceNew":"  @Override\n  public void testNRTThreads() throws Exception {\n    String vendor = Constants.JAVA_VENDOR;\n    assumeTrue(vendor + \" JRE not supported.\", \n        vendor.startsWith(\"Sun\") || vendor.startsWith(\"Apple\"));\n    \n    // if we are not the fork\n    if (System.getProperty(\"tests.crashmode\") == null) {\n      // try up to 10 times to create an index\n      for (int i = 0; i < 10; i++) {\n        forkTest();\n        // if we succeeded in finding an index, we are done.\n        if (checkIndexes(tempDir))\n          return;\n      }\n    } else {\n      // we are the fork, setup a crashing thread\n      final int crashTime = _TestUtil.nextInt(random, 3000, 4000);\n      Thread t = new Thread() {\n        @Override\n        public void run() {\n          try {\n            Thread.sleep(crashTime);\n          } catch (InterruptedException e) {}\n          crashJRE();\n        }\n      };\n      t.setPriority(Thread.MAX_PRIORITY);\n      t.start();\n      // run the test until we crash.\n      for (int i = 0; i < 1000; i++) {\n        super.testNRTThreads();\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void testNRTThreads() throws Exception {\n    String vendor = Constants.JAVA_VENDOR;\n    assumeTrue(vendor + \" JRE not supported.\", \n        vendor.startsWith(\"Sun\") || vendor.startsWith(\"Apple\"));\n    \n    // if we are not the fork\n    if (System.getProperty(\"tests.crashmode\") == null) {\n      // try up to 10 times to create an index\n      for (int i = 0; i < 10; i++) {\n        forkTest();\n        // if we succeeded in finding an index, we are done.\n        if (checkIndexes(tempDir))\n          return;\n      }\n    } else {\n      // we are the fork, setup a crashing thread\n      final int crashTime = TEST_NIGHTLY ? _TestUtil.nextInt(random, 500, 4000) : _TestUtil.nextInt(random, 300, 1000);\n      Thread t = new Thread() {\n        @Override\n        public void run() {\n          try {\n            Thread.sleep(crashTime);\n          } catch (InterruptedException e) {}\n          crashJRE();\n        }\n      };\n      t.setPriority(Thread.MAX_PRIORITY);\n      t.start();\n      // run the test until we crash.\n      for (int i = 0; i < 1000; i++) {\n        super.testNRTThreads();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"718f8730b97959cb87aaeadc9fafb9513f3c1bfe","date":1308670382,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterOnJRECrash#testNRTThreads().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterOnJRECrash#testNRTThreads().mjava","sourceNew":"  @Override\n  public void testNRTThreads() throws Exception {\n    String vendor = Constants.JAVA_VENDOR;\n    assumeTrue(vendor + \" JRE not supported.\", \n        vendor.startsWith(\"Sun\") || vendor.startsWith(\"Apple\"));\n    \n    // if we are not the fork\n    if (System.getProperty(\"tests.crashmode\") == null) {\n      // try up to 10 times to create an index\n      for (int i = 0; i < 10; i++) {\n        forkTest();\n        // if we succeeded in finding an index, we are done.\n        if (checkIndexes(tempDir))\n          return;\n      }\n    } else {\n      // we are the fork, setup a crashing thread\n      final int crashTime = _TestUtil.nextInt(random, 3000, 4000);\n      Thread t = new Thread() {\n        @Override\n        public void run() {\n          try {\n            Thread.sleep(crashTime);\n          } catch (InterruptedException e) {}\n          crashJRE();\n        }\n      };\n      t.setPriority(Thread.MAX_PRIORITY);\n      t.start();\n      // run the test until we crash.\n      for (int i = 0; i < 1000; i++) {\n        super.testNRTThreads();\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void testNRTThreads() throws Exception {\n    String vendor = Constants.JAVA_VENDOR;\n    assumeTrue(vendor + \" JRE not supported.\", \n        vendor.startsWith(\"Sun\") || vendor.startsWith(\"Apple\"));\n    \n    // if we are not the fork\n    if (System.getProperty(\"tests.crashmode\") == null) {\n      // try up to 10 times to create an index\n      for (int i = 0; i < 10; i++) {\n        forkTest();\n        // if we succeeded in finding an index, we are done.\n        if (checkIndexes(tempDir))\n          return;\n      }\n    } else {\n      // we are the fork, setup a crashing thread\n      final int crashTime = TEST_NIGHTLY ? _TestUtil.nextInt(random, 500, 4000) : _TestUtil.nextInt(random, 300, 1000);\n      Thread t = new Thread() {\n        @Override\n        public void run() {\n          try {\n            Thread.sleep(crashTime);\n          } catch (InterruptedException e) {}\n          crashJRE();\n        }\n      };\n      t.setPriority(Thread.MAX_PRIORITY);\n      t.start();\n      // run the test until we crash.\n      for (int i = 0; i < 1000; i++) {\n        super.testNRTThreads();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6e93e8251fcc355b1ed7d79aaff249c2ae40ba71","date":1309295333,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterOnJRECrash#testNRTThreads().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterOnJRECrash#testNRTThreads().mjava","sourceNew":"  @Override @Nightly\n  public void testNRTThreads() throws Exception {\n    String vendor = Constants.JAVA_VENDOR;\n    assumeTrue(vendor + \" JRE not supported.\", \n        vendor.startsWith(\"Sun\") || vendor.startsWith(\"Apple\"));\n    \n    // if we are not the fork\n    if (System.getProperty(\"tests.crashmode\") == null) {\n      // try up to 10 times to create an index\n      for (int i = 0; i < 10; i++) {\n        forkTest();\n        // if we succeeded in finding an index, we are done.\n        if (checkIndexes(tempDir))\n          return;\n      }\n    } else {\n      // we are the fork, setup a crashing thread\n      final int crashTime = _TestUtil.nextInt(random, 3000, 4000);\n      Thread t = new Thread() {\n        @Override\n        public void run() {\n          try {\n            Thread.sleep(crashTime);\n          } catch (InterruptedException e) {}\n          crashJRE();\n        }\n      };\n      t.setPriority(Thread.MAX_PRIORITY);\n      t.start();\n      // run the test until we crash.\n      for (int i = 0; i < 1000; i++) {\n        super.testNRTThreads();\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void testNRTThreads() throws Exception {\n    String vendor = Constants.JAVA_VENDOR;\n    assumeTrue(vendor + \" JRE not supported.\", \n        vendor.startsWith(\"Sun\") || vendor.startsWith(\"Apple\"));\n    \n    // if we are not the fork\n    if (System.getProperty(\"tests.crashmode\") == null) {\n      // try up to 10 times to create an index\n      for (int i = 0; i < 10; i++) {\n        forkTest();\n        // if we succeeded in finding an index, we are done.\n        if (checkIndexes(tempDir))\n          return;\n      }\n    } else {\n      // we are the fork, setup a crashing thread\n      final int crashTime = _TestUtil.nextInt(random, 3000, 4000);\n      Thread t = new Thread() {\n        @Override\n        public void run() {\n          try {\n            Thread.sleep(crashTime);\n          } catch (InterruptedException e) {}\n          crashJRE();\n        }\n      };\n      t.setPriority(Thread.MAX_PRIORITY);\n      t.start();\n      // run the test until we crash.\n      for (int i = 0; i < 1000; i++) {\n        super.testNRTThreads();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"817d8435e9135b756f08ce6710ab0baac51bdf88","date":1309986993,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterOnJRECrash#testNRTThreads().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterOnJRECrash#testNRTThreads().mjava","sourceNew":"  @Override @Nightly\n  public void testNRTThreads() throws Exception {\n    String vendor = Constants.JAVA_VENDOR;\n    assumeTrue(vendor + \" JRE not supported.\", \n        vendor.startsWith(\"Sun\") || vendor.startsWith(\"Apple\"));\n    \n    // if we are not the fork\n    if (System.getProperty(\"tests.crashmode\") == null) {\n      // try up to 10 times to create an index\n      for (int i = 0; i < 10; i++) {\n        forkTest();\n        // if we succeeded in finding an index, we are done.\n        if (checkIndexes(tempDir))\n          return;\n      }\n    } else {\n      // we are the fork, setup a crashing thread\n      final int crashTime = _TestUtil.nextInt(random, 3000, 4000);\n      Thread t = new Thread() {\n        @Override\n        public void run() {\n          try {\n            Thread.sleep(crashTime);\n          } catch (InterruptedException e) {}\n          crashJRE();\n        }\n      };\n      t.setPriority(Thread.MAX_PRIORITY);\n      t.start();\n      // run the test until we crash.\n      for (int i = 0; i < 1000; i++) {\n        super.testNRTThreads();\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void testNRTThreads() throws Exception {\n    String vendor = Constants.JAVA_VENDOR;\n    assumeTrue(vendor + \" JRE not supported.\", \n        vendor.startsWith(\"Sun\") || vendor.startsWith(\"Apple\"));\n    \n    // if we are not the fork\n    if (System.getProperty(\"tests.crashmode\") == null) {\n      // try up to 10 times to create an index\n      for (int i = 0; i < 10; i++) {\n        forkTest();\n        // if we succeeded in finding an index, we are done.\n        if (checkIndexes(tempDir))\n          return;\n      }\n    } else {\n      // we are the fork, setup a crashing thread\n      final int crashTime = _TestUtil.nextInt(random, 3000, 4000);\n      Thread t = new Thread() {\n        @Override\n        public void run() {\n          try {\n            Thread.sleep(crashTime);\n          } catch (InterruptedException e) {}\n          crashJRE();\n        }\n      };\n      t.setPriority(Thread.MAX_PRIORITY);\n      t.start();\n      // run the test until we crash.\n      for (int i = 0; i < 1000; i++) {\n        super.testNRTThreads();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d083e83f225b11e5fdd900e83d26ddb385b6955c","date":1310029438,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterOnJRECrash#testNRTThreads().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterOnJRECrash#testNRTThreads().mjava","sourceNew":"  @Override @Nightly\n  public void testNRTThreads() throws Exception {\n    String vendor = Constants.JAVA_VENDOR;\n    assumeTrue(vendor + \" JRE not supported.\", \n        vendor.startsWith(\"Sun\") || vendor.startsWith(\"Apple\"));\n    \n    // if we are not the fork\n    if (System.getProperty(\"tests.crashmode\") == null) {\n      // try up to 10 times to create an index\n      for (int i = 0; i < 10; i++) {\n        forkTest();\n        // if we succeeded in finding an index, we are done.\n        if (checkIndexes(tempDir))\n          return;\n      }\n    } else {\n      // we are the fork, setup a crashing thread\n      final int crashTime = _TestUtil.nextInt(random, 3000, 4000);\n      Thread t = new Thread() {\n        @Override\n        public void run() {\n          try {\n            Thread.sleep(crashTime);\n          } catch (InterruptedException e) {}\n          crashJRE();\n        }\n      };\n      t.setPriority(Thread.MAX_PRIORITY);\n      t.start();\n      // run the test until we crash.\n      for (int i = 0; i < 1000; i++) {\n        super.testNRTThreads();\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void testNRTThreads() throws Exception {\n    String vendor = Constants.JAVA_VENDOR;\n    assumeTrue(vendor + \" JRE not supported.\", \n        vendor.startsWith(\"Sun\") || vendor.startsWith(\"Apple\"));\n    \n    // if we are not the fork\n    if (System.getProperty(\"tests.crashmode\") == null) {\n      // try up to 10 times to create an index\n      for (int i = 0; i < 10; i++) {\n        forkTest();\n        // if we succeeded in finding an index, we are done.\n        if (checkIndexes(tempDir))\n          return;\n      }\n    } else {\n      // we are the fork, setup a crashing thread\n      final int crashTime = _TestUtil.nextInt(random, 3000, 4000);\n      Thread t = new Thread() {\n        @Override\n        public void run() {\n          try {\n            Thread.sleep(crashTime);\n          } catch (InterruptedException e) {}\n          crashJRE();\n        }\n      };\n      t.setPriority(Thread.MAX_PRIORITY);\n      t.start();\n      // run the test until we crash.\n      for (int i = 0; i < 1000; i++) {\n        super.testNRTThreads();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a21da19b17ddba84255be4a2bf80c84c51e43eac","date":1313275965,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterOnJRECrash#testNRTThreads().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterOnJRECrash#testNRTThreads().mjava","sourceNew":"  @Override @Nightly\n  public void testNRTThreads() throws Exception {\n    String vendor = Constants.JAVA_VENDOR;\n    assumeTrue(vendor + \" JRE not supported.\", \n        vendor.startsWith(\"Oracle\") || vendor.startsWith(\"Sun\") || vendor.startsWith(\"Apple\"));\n    \n    // if we are not the fork\n    if (System.getProperty(\"tests.crashmode\") == null) {\n      // try up to 10 times to create an index\n      for (int i = 0; i < 10; i++) {\n        forkTest();\n        // if we succeeded in finding an index, we are done.\n        if (checkIndexes(tempDir))\n          return;\n      }\n    } else {\n      // we are the fork, setup a crashing thread\n      final int crashTime = _TestUtil.nextInt(random, 3000, 4000);\n      Thread t = new Thread() {\n        @Override\n        public void run() {\n          try {\n            Thread.sleep(crashTime);\n          } catch (InterruptedException e) {}\n          crashJRE();\n        }\n      };\n      t.setPriority(Thread.MAX_PRIORITY);\n      t.start();\n      // run the test until we crash.\n      for (int i = 0; i < 1000; i++) {\n        super.testNRTThreads();\n      }\n    }\n  }\n\n","sourceOld":"  @Override @Nightly\n  public void testNRTThreads() throws Exception {\n    String vendor = Constants.JAVA_VENDOR;\n    assumeTrue(vendor + \" JRE not supported.\", \n        vendor.startsWith(\"Sun\") || vendor.startsWith(\"Apple\"));\n    \n    // if we are not the fork\n    if (System.getProperty(\"tests.crashmode\") == null) {\n      // try up to 10 times to create an index\n      for (int i = 0; i < 10; i++) {\n        forkTest();\n        // if we succeeded in finding an index, we are done.\n        if (checkIndexes(tempDir))\n          return;\n      }\n    } else {\n      // we are the fork, setup a crashing thread\n      final int crashTime = _TestUtil.nextInt(random, 3000, 4000);\n      Thread t = new Thread() {\n        @Override\n        public void run() {\n          try {\n            Thread.sleep(crashTime);\n          } catch (InterruptedException e) {}\n          crashJRE();\n        }\n      };\n      t.setPriority(Thread.MAX_PRIORITY);\n      t.start();\n      // run the test until we crash.\n      for (int i = 0; i < 1000; i++) {\n        super.testNRTThreads();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterOnJRECrash#testNRTThreads().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterOnJRECrash#testNRTThreads().mjava","sourceNew":"  @Override @Nightly\n  public void testNRTThreads() throws Exception {\n    String vendor = Constants.JAVA_VENDOR;\n    assumeTrue(vendor + \" JRE not supported.\", \n        vendor.startsWith(\"Oracle\") || vendor.startsWith(\"Sun\") || vendor.startsWith(\"Apple\"));\n    \n    // if we are not the fork\n    if (System.getProperty(\"tests.crashmode\") == null) {\n      // try up to 10 times to create an index\n      for (int i = 0; i < 10; i++) {\n        forkTest();\n        // if we succeeded in finding an index, we are done.\n        if (checkIndexes(tempDir))\n          return;\n      }\n    } else {\n      // we are the fork, setup a crashing thread\n      final int crashTime = _TestUtil.nextInt(random, 3000, 4000);\n      Thread t = new Thread() {\n        @Override\n        public void run() {\n          try {\n            Thread.sleep(crashTime);\n          } catch (InterruptedException e) {}\n          crashJRE();\n        }\n      };\n      t.setPriority(Thread.MAX_PRIORITY);\n      t.start();\n      // run the test until we crash.\n      for (int i = 0; i < 1000; i++) {\n        super.testNRTThreads();\n      }\n    }\n  }\n\n","sourceOld":"  @Override @Nightly\n  public void testNRTThreads() throws Exception {\n    String vendor = Constants.JAVA_VENDOR;\n    assumeTrue(vendor + \" JRE not supported.\", \n        vendor.startsWith(\"Oracle\") || vendor.startsWith(\"Sun\") || vendor.startsWith(\"Apple\"));\n    \n    // if we are not the fork\n    if (System.getProperty(\"tests.crashmode\") == null) {\n      // try up to 10 times to create an index\n      for (int i = 0; i < 10; i++) {\n        forkTest();\n        // if we succeeded in finding an index, we are done.\n        if (checkIndexes(tempDir))\n          return;\n      }\n    } else {\n      // we are the fork, setup a crashing thread\n      final int crashTime = _TestUtil.nextInt(random, 3000, 4000);\n      Thread t = new Thread() {\n        @Override\n        public void run() {\n          try {\n            Thread.sleep(crashTime);\n          } catch (InterruptedException e) {}\n          crashJRE();\n        }\n      };\n      t.setPriority(Thread.MAX_PRIORITY);\n      t.start();\n      // run the test until we crash.\n      for (int i = 0; i < 1000; i++) {\n        super.testNRTThreads();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655":["0c72a3da4d2da11f51cd898496dd30e850ece4e6","0762b640e0d0d12b6edb96db68986e13145c3484"],"0762b640e0d0d12b6edb96db68986e13145c3484":["0c72a3da4d2da11f51cd898496dd30e850ece4e6"],"0c72a3da4d2da11f51cd898496dd30e850ece4e6":["daffebbe3cdd83b11a50d517323609120c3089c5"],"daffebbe3cdd83b11a50d517323609120c3089c5":["53f6c67ebf2e8c3ab674868621bfa5e99e4ea163"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a21da19b17ddba84255be4a2bf80c84c51e43eac"],"a21da19b17ddba84255be4a2bf80c84c51e43eac":["6e93e8251fcc355b1ed7d79aaff249c2ae40ba71"],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","daffebbe3cdd83b11a50d517323609120c3089c5"],"a48ce78ef9c638df43d61dc30b4625347b47016e":["0762b640e0d0d12b6edb96db68986e13145c3484"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","daffebbe3cdd83b11a50d517323609120c3089c5"],"53f6c67ebf2e8c3ab674868621bfa5e99e4ea163":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":["a48ce78ef9c638df43d61dc30b4625347b47016e","6e93e8251fcc355b1ed7d79aaff249c2ae40ba71"],"e79a6d080bdd5b2a8f56342cf571b5476de04180":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","0c72a3da4d2da11f51cd898496dd30e850ece4e6"],"817d8435e9135b756f08ce6710ab0baac51bdf88":["718f8730b97959cb87aaeadc9fafb9513f3c1bfe","6e93e8251fcc355b1ed7d79aaff249c2ae40ba71"],"6e93e8251fcc355b1ed7d79aaff249c2ae40ba71":["a48ce78ef9c638df43d61dc30b4625347b47016e"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["ab5cb6a74aefb78aa0569857970b9151dfe2e787","0c72a3da4d2da11f51cd898496dd30e850ece4e6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"718f8730b97959cb87aaeadc9fafb9513f3c1bfe":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","a48ce78ef9c638df43d61dc30b4625347b47016e"],"77cf4379b2824f6ea34b091c495d6e95c38ff9e2":["29ef99d61cda9641b6250bf9567329a6e65f901d","0762b640e0d0d12b6edb96db68986e13145c3484"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655":["718f8730b97959cb87aaeadc9fafb9513f3c1bfe"],"0c72a3da4d2da11f51cd898496dd30e850ece4e6":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","0762b640e0d0d12b6edb96db68986e13145c3484","e79a6d080bdd5b2a8f56342cf571b5476de04180","29ef99d61cda9641b6250bf9567329a6e65f901d"],"0762b640e0d0d12b6edb96db68986e13145c3484":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","a48ce78ef9c638df43d61dc30b4625347b47016e","77cf4379b2824f6ea34b091c495d6e95c38ff9e2"],"daffebbe3cdd83b11a50d517323609120c3089c5":["0c72a3da4d2da11f51cd898496dd30e850ece4e6","ab5cb6a74aefb78aa0569857970b9151dfe2e787","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a21da19b17ddba84255be4a2bf80c84c51e43eac":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":["29ef99d61cda9641b6250bf9567329a6e65f901d"],"a48ce78ef9c638df43d61dc30b4625347b47016e":["d083e83f225b11e5fdd900e83d26ddb385b6955c","6e93e8251fcc355b1ed7d79aaff249c2ae40ba71","718f8730b97959cb87aaeadc9fafb9513f3c1bfe"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["e79a6d080bdd5b2a8f56342cf571b5476de04180"],"53f6c67ebf2e8c3ab674868621bfa5e99e4ea163":["daffebbe3cdd83b11a50d517323609120c3089c5"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":[],"e79a6d080bdd5b2a8f56342cf571b5476de04180":[],"817d8435e9135b756f08ce6710ab0baac51bdf88":[],"6e93e8251fcc355b1ed7d79aaff249c2ae40ba71":["a21da19b17ddba84255be4a2bf80c84c51e43eac","d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["77cf4379b2824f6ea34b091c495d6e95c38ff9e2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ab5cb6a74aefb78aa0569857970b9151dfe2e787","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","53f6c67ebf2e8c3ab674868621bfa5e99e4ea163"],"718f8730b97959cb87aaeadc9fafb9513f3c1bfe":["817d8435e9135b756f08ce6710ab0baac51bdf88"],"77cf4379b2824f6ea34b091c495d6e95c38ff9e2":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d083e83f225b11e5fdd900e83d26ddb385b6955c","e79a6d080bdd5b2a8f56342cf571b5476de04180","817d8435e9135b756f08ce6710ab0baac51bdf88","77cf4379b2824f6ea34b091c495d6e95c38ff9e2","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}