{"path":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#getCoreStatus(CoreContainer,String).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#getCoreStatus(CoreContainer,String).mjava","pathOld":"solr/src/java/org/apache/solr/handler/admin/CoreAdminHandler#getCoreStatus(CoreContainer,String).mjava","sourceNew":"  protected NamedList<Object> getCoreStatus(CoreContainer cores, String cname) throws IOException {\n    NamedList<Object> info = new SimpleOrderedMap<Object>();\n    SolrCore core = cores.getCore(cname);\n    if (core != null) {\n      try {\n        info.add(\"name\", core.getName());\n        info.add(\"instanceDir\", normalizePath(core.getResourceLoader().getInstanceDir()));\n        info.add(\"dataDir\", normalizePath(core.getDataDir()));\n        info.add(\"startTime\", new Date(core.getStartTime()));\n        info.add(\"uptime\", System.currentTimeMillis() - core.getStartTime());\n        RefCounted<SolrIndexSearcher> searcher = core.getSearcher();\n        try {\n          info.add(\"index\", LukeRequestHandler.getIndexInfo(searcher.get().getIndexReader(), false));\n        } finally {\n          searcher.decref();\n        }\n      } finally {\n        core.close();\n      }\n    }\n    return info;\n  }\n\n","sourceOld":"  protected NamedList<Object> getCoreStatus(CoreContainer cores, String cname) throws IOException {\n    NamedList<Object> info = new SimpleOrderedMap<Object>();\n    SolrCore core = cores.getCore(cname);\n    if (core != null) {\n      try {\n        info.add(\"name\", core.getName());\n        info.add(\"instanceDir\", normalizePath(core.getResourceLoader().getInstanceDir()));\n        info.add(\"dataDir\", normalizePath(core.getDataDir()));\n        info.add(\"startTime\", new Date(core.getStartTime()));\n        info.add(\"uptime\", System.currentTimeMillis() - core.getStartTime());\n        RefCounted<SolrIndexSearcher> searcher = core.getSearcher();\n        try {\n          info.add(\"index\", LukeRequestHandler.getIndexInfo(searcher.get().getIndexReader(), false));\n        } finally {\n          searcher.decref();\n        }\n      } finally {\n        core.close();\n      }\n    }\n    return info;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#getCoreStatus(CoreContainer,String).mjava","pathOld":"solr/src/java/org/apache/solr/handler/admin/CoreAdminHandler#getCoreStatus(CoreContainer,String).mjava","sourceNew":"  protected NamedList<Object> getCoreStatus(CoreContainer cores, String cname) throws IOException {\n    NamedList<Object> info = new SimpleOrderedMap<Object>();\n    SolrCore core = cores.getCore(cname);\n    if (core != null) {\n      try {\n        info.add(\"name\", core.getName());\n        info.add(\"instanceDir\", normalizePath(core.getResourceLoader().getInstanceDir()));\n        info.add(\"dataDir\", normalizePath(core.getDataDir()));\n        info.add(\"startTime\", new Date(core.getStartTime()));\n        info.add(\"uptime\", System.currentTimeMillis() - core.getStartTime());\n        RefCounted<SolrIndexSearcher> searcher = core.getSearcher();\n        try {\n          info.add(\"index\", LukeRequestHandler.getIndexInfo(searcher.get().getIndexReader(), false));\n        } finally {\n          searcher.decref();\n        }\n      } finally {\n        core.close();\n      }\n    }\n    return info;\n  }\n\n","sourceOld":"  protected NamedList<Object> getCoreStatus(CoreContainer cores, String cname) throws IOException {\n    NamedList<Object> info = new SimpleOrderedMap<Object>();\n    SolrCore core = cores.getCore(cname);\n    if (core != null) {\n      try {\n        info.add(\"name\", core.getName());\n        info.add(\"instanceDir\", normalizePath(core.getResourceLoader().getInstanceDir()));\n        info.add(\"dataDir\", normalizePath(core.getDataDir()));\n        info.add(\"startTime\", new Date(core.getStartTime()));\n        info.add(\"uptime\", System.currentTimeMillis() - core.getStartTime());\n        RefCounted<SolrIndexSearcher> searcher = core.getSearcher();\n        try {\n          info.add(\"index\", LukeRequestHandler.getIndexInfo(searcher.get().getIndexReader(), false));\n        } finally {\n          searcher.decref();\n        }\n      } finally {\n        core.close();\n      }\n    }\n    return info;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#getCoreStatus(CoreContainer,String).mjava","pathOld":"solr/src/java/org/apache/solr/handler/admin/CoreAdminHandler#getCoreStatus(CoreContainer,String).mjava","sourceNew":"  protected NamedList<Object> getCoreStatus(CoreContainer cores, String cname) throws IOException {\n    NamedList<Object> info = new SimpleOrderedMap<Object>();\n    SolrCore core = cores.getCore(cname);\n    if (core != null) {\n      try {\n        info.add(\"name\", core.getName());\n        info.add(\"instanceDir\", normalizePath(core.getResourceLoader().getInstanceDir()));\n        info.add(\"dataDir\", normalizePath(core.getDataDir()));\n        info.add(\"startTime\", new Date(core.getStartTime()));\n        info.add(\"uptime\", System.currentTimeMillis() - core.getStartTime());\n        RefCounted<SolrIndexSearcher> searcher = core.getSearcher();\n        try {\n          info.add(\"index\", LukeRequestHandler.getIndexInfo(searcher.get().getIndexReader(), false));\n        } finally {\n          searcher.decref();\n        }\n      } finally {\n        core.close();\n      }\n    }\n    return info;\n  }\n\n","sourceOld":"  protected NamedList<Object> getCoreStatus(CoreContainer cores, String cname) throws IOException {\n    NamedList<Object> info = new SimpleOrderedMap<Object>();\n    SolrCore core = cores.getCore(cname);\n    if (core != null) {\n      try {\n        info.add(\"name\", core.getName());\n        info.add(\"instanceDir\", normalizePath(core.getResourceLoader().getInstanceDir()));\n        info.add(\"dataDir\", normalizePath(core.getDataDir()));\n        info.add(\"startTime\", new Date(core.getStartTime()));\n        info.add(\"uptime\", System.currentTimeMillis() - core.getStartTime());\n        RefCounted<SolrIndexSearcher> searcher = core.getSearcher();\n        try {\n          info.add(\"index\", LukeRequestHandler.getIndexInfo(searcher.get().getIndexReader(), false));\n        } finally {\n          searcher.decref();\n        }\n      } finally {\n        core.close();\n      }\n    }\n    return info;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba74b188d46af33b86ff8e5a500d6f066852a182","date":1312857652,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#getCoreStatus(CoreContainer,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#getCoreStatus(CoreContainer,String).mjava","sourceNew":"  protected NamedList<Object> getCoreStatus(CoreContainer cores, String cname) throws IOException {\n    NamedList<Object> info = new SimpleOrderedMap<Object>();\n    SolrCore core = cores.getCore(cname);\n    if (core != null) {\n      try {\n        info.add(\"name\", core.getName());\n        info.add(\"instanceDir\", normalizePath(core.getResourceLoader().getInstanceDir()));\n        info.add(\"dataDir\", normalizePath(core.getDataDir()));\n        info.add(\"startTime\", new Date(core.getStartTime()));\n        info.add(\"uptime\", System.currentTimeMillis() - core.getStartTime());\n        RefCounted<SolrIndexSearcher> searcher = core.getSearcher();\n        try {\n          SimpleOrderedMap<Object> indexInfo = LukeRequestHandler.getIndexInfo(searcher.get().getIndexReader(), false);\n          long size = getIndexSize(core);\n          indexInfo.add(\"sizeInBytes\", size);\n          indexInfo.add(\"size\", NumberUtils.readableSize(size));\n          info.add(\"index\", indexInfo);\n        } finally {\n          searcher.decref();\n        }\n      } finally {\n        core.close();\n      }\n    }\n    return info;\n  }\n\n","sourceOld":"  protected NamedList<Object> getCoreStatus(CoreContainer cores, String cname) throws IOException {\n    NamedList<Object> info = new SimpleOrderedMap<Object>();\n    SolrCore core = cores.getCore(cname);\n    if (core != null) {\n      try {\n        info.add(\"name\", core.getName());\n        info.add(\"instanceDir\", normalizePath(core.getResourceLoader().getInstanceDir()));\n        info.add(\"dataDir\", normalizePath(core.getDataDir()));\n        info.add(\"startTime\", new Date(core.getStartTime()));\n        info.add(\"uptime\", System.currentTimeMillis() - core.getStartTime());\n        RefCounted<SolrIndexSearcher> searcher = core.getSearcher();\n        try {\n          info.add(\"index\", LukeRequestHandler.getIndexInfo(searcher.get().getIndexReader(), false));\n        } finally {\n          searcher.decref();\n        }\n      } finally {\n        core.close();\n      }\n    }\n    return info;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b6912d3e0a9ef2865124c6822bc9e4cfd3581c6c","date":1329188942,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#getCoreStatus(CoreContainer,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#getCoreStatus(CoreContainer,String).mjava","sourceNew":"  protected NamedList<Object> getCoreStatus(CoreContainer cores, String cname) throws IOException {\n    NamedList<Object> info = new SimpleOrderedMap<Object>();\n    SolrCore core = cores.getCore(cname);\n    if (core != null) {\n      try {\n        info.add(\"name\", core.getName());\n        info.add(\"instanceDir\", normalizePath(core.getResourceLoader().getInstanceDir()));\n        info.add(\"dataDir\", normalizePath(core.getDataDir()));\n        info.add(\"startTime\", new Date(core.getStartTime()));\n        info.add(\"uptime\", System.currentTimeMillis() - core.getStartTime());\n        RefCounted<SolrIndexSearcher> searcher = core.getSearcher();\n        try {\n          SimpleOrderedMap<Object> indexInfo = LukeRequestHandler.getIndexInfo(searcher.get().getIndexReader());\n          long size = getIndexSize(core);\n          indexInfo.add(\"sizeInBytes\", size);\n          indexInfo.add(\"size\", NumberUtils.readableSize(size));\n          info.add(\"index\", indexInfo);\n        } finally {\n          searcher.decref();\n        }\n      } finally {\n        core.close();\n      }\n    }\n    return info;\n  }\n\n","sourceOld":"  protected NamedList<Object> getCoreStatus(CoreContainer cores, String cname) throws IOException {\n    NamedList<Object> info = new SimpleOrderedMap<Object>();\n    SolrCore core = cores.getCore(cname);\n    if (core != null) {\n      try {\n        info.add(\"name\", core.getName());\n        info.add(\"instanceDir\", normalizePath(core.getResourceLoader().getInstanceDir()));\n        info.add(\"dataDir\", normalizePath(core.getDataDir()));\n        info.add(\"startTime\", new Date(core.getStartTime()));\n        info.add(\"uptime\", System.currentTimeMillis() - core.getStartTime());\n        RefCounted<SolrIndexSearcher> searcher = core.getSearcher();\n        try {\n          SimpleOrderedMap<Object> indexInfo = LukeRequestHandler.getIndexInfo(searcher.get().getIndexReader(), false);\n          long size = getIndexSize(core);\n          indexInfo.add(\"sizeInBytes\", size);\n          indexInfo.add(\"size\", NumberUtils.readableSize(size));\n          info.add(\"index\", indexInfo);\n        } finally {\n          searcher.decref();\n        }\n      } finally {\n        core.close();\n      }\n    }\n    return info;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b5e93f7f303144d3309a3b2ba5a62f1f17575ce4","date":1334239613,"type":3,"author":"Stefan Matheis","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#getCoreStatus(CoreContainer,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#getCoreStatus(CoreContainer,String).mjava","sourceNew":"  protected NamedList<Object> getCoreStatus(CoreContainer cores, String cname) throws IOException {\n    NamedList<Object> info = new SimpleOrderedMap<Object>();\n    SolrCore core = cores.getCore(cname);\n    if (core != null) {\n      try {\n        info.add(\"name\", core.getName());\n        info.add(\"instanceDir\", normalizePath(core.getResourceLoader().getInstanceDir()));\n        info.add(\"dataDir\", normalizePath(core.getDataDir()));\n        info.add(\"config\", core.getConfigResource());\n        info.add(\"schema\", core.getSchemaResource());\n        info.add(\"startTime\", new Date(core.getStartTime()));\n        info.add(\"uptime\", System.currentTimeMillis() - core.getStartTime());\n        RefCounted<SolrIndexSearcher> searcher = core.getSearcher();\n        try {\n          SimpleOrderedMap<Object> indexInfo = LukeRequestHandler.getIndexInfo(searcher.get().getIndexReader());\n          long size = getIndexSize(core);\n          indexInfo.add(\"sizeInBytes\", size);\n          indexInfo.add(\"size\", NumberUtils.readableSize(size));\n          info.add(\"index\", indexInfo);\n        } finally {\n          searcher.decref();\n        }\n      } finally {\n        core.close();\n      }\n    }\n    return info;\n  }\n\n","sourceOld":"  protected NamedList<Object> getCoreStatus(CoreContainer cores, String cname) throws IOException {\n    NamedList<Object> info = new SimpleOrderedMap<Object>();\n    SolrCore core = cores.getCore(cname);\n    if (core != null) {\n      try {\n        info.add(\"name\", core.getName());\n        info.add(\"instanceDir\", normalizePath(core.getResourceLoader().getInstanceDir()));\n        info.add(\"dataDir\", normalizePath(core.getDataDir()));\n        info.add(\"startTime\", new Date(core.getStartTime()));\n        info.add(\"uptime\", System.currentTimeMillis() - core.getStartTime());\n        RefCounted<SolrIndexSearcher> searcher = core.getSearcher();\n        try {\n          SimpleOrderedMap<Object> indexInfo = LukeRequestHandler.getIndexInfo(searcher.get().getIndexReader());\n          long size = getIndexSize(core);\n          indexInfo.add(\"sizeInBytes\", size);\n          indexInfo.add(\"size\", NumberUtils.readableSize(size));\n          info.add(\"index\", indexInfo);\n        } finally {\n          searcher.decref();\n        }\n      } finally {\n        core.close();\n      }\n    }\n    return info;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e635cfcf66f9e8b914c54c24d337820e475f44a5","date":1335303739,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#getCoreStatus(CoreContainer,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#getCoreStatus(CoreContainer,String).mjava","sourceNew":"  protected NamedList<Object> getCoreStatus(CoreContainer cores, String cname) throws IOException {\n    NamedList<Object> info = new SimpleOrderedMap<Object>();\n    SolrCore core = cores.getCore(cname);\n    if (core != null) {\n      try {\n        info.add(\"name\", core.getName());\n        info.add(\"isDefaultCore\", core.getName().equals(cores.getDefaultCoreName()));\n        info.add(\"instanceDir\", normalizePath(core.getResourceLoader().getInstanceDir()));\n        info.add(\"dataDir\", normalizePath(core.getDataDir()));\n        info.add(\"config\", core.getConfigResource());\n        info.add(\"schema\", core.getSchemaResource());\n        info.add(\"startTime\", new Date(core.getStartTime()));\n        info.add(\"uptime\", System.currentTimeMillis() - core.getStartTime());\n        RefCounted<SolrIndexSearcher> searcher = core.getSearcher();\n        try {\n          SimpleOrderedMap<Object> indexInfo = LukeRequestHandler.getIndexInfo(searcher.get().getIndexReader());\n          long size = getIndexSize(core);\n          indexInfo.add(\"sizeInBytes\", size);\n          indexInfo.add(\"size\", NumberUtils.readableSize(size));\n          info.add(\"index\", indexInfo);\n        } finally {\n          searcher.decref();\n        }\n      } finally {\n        core.close();\n      }\n    }\n    return info;\n  }\n\n","sourceOld":"  protected NamedList<Object> getCoreStatus(CoreContainer cores, String cname) throws IOException {\n    NamedList<Object> info = new SimpleOrderedMap<Object>();\n    SolrCore core = cores.getCore(cname);\n    if (core != null) {\n      try {\n        info.add(\"name\", core.getName());\n        info.add(\"instanceDir\", normalizePath(core.getResourceLoader().getInstanceDir()));\n        info.add(\"dataDir\", normalizePath(core.getDataDir()));\n        info.add(\"config\", core.getConfigResource());\n        info.add(\"schema\", core.getSchemaResource());\n        info.add(\"startTime\", new Date(core.getStartTime()));\n        info.add(\"uptime\", System.currentTimeMillis() - core.getStartTime());\n        RefCounted<SolrIndexSearcher> searcher = core.getSearcher();\n        try {\n          SimpleOrderedMap<Object> indexInfo = LukeRequestHandler.getIndexInfo(searcher.get().getIndexReader());\n          long size = getIndexSize(core);\n          indexInfo.add(\"sizeInBytes\", size);\n          indexInfo.add(\"size\", NumberUtils.readableSize(size));\n          info.add(\"index\", indexInfo);\n        } finally {\n          searcher.decref();\n        }\n      } finally {\n        core.close();\n      }\n    }\n    return info;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"901a50ac0a5d082fcdd15805491ef4b2d686907a","date":1358167485,"type":5,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#getCoreStatus(CoreContainer,String,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#getCoreStatus(CoreContainer,String).mjava","sourceNew":"  protected NamedList<Object> getCoreStatus(CoreContainer cores, String cname, boolean isIndexInfoNeeded) throws IOException {\n    NamedList<Object> info = new SimpleOrderedMap<Object>();\n    SolrCore core = cores.getCore(cname);\n    if (core != null) {\n      try {\n        info.add(\"name\", core.getName());\n        info.add(\"isDefaultCore\", core.getName().equals(cores.getDefaultCoreName()));\n        info.add(\"instanceDir\", normalizePath(core.getResourceLoader().getInstanceDir()));\n        info.add(\"dataDir\", normalizePath(core.getDataDir()));\n        info.add(\"config\", core.getConfigResource());\n        info.add(\"schema\", core.getSchemaResource());\n        info.add(\"startTime\", new Date(core.getStartTime()));\n        info.add(\"uptime\", System.currentTimeMillis() - core.getStartTime());\n        if (isIndexInfoNeeded) {\n          RefCounted<SolrIndexSearcher> searcher = core.getSearcher();\n          try {\n            SimpleOrderedMap<Object> indexInfo = LukeRequestHandler.getIndexInfo(searcher.get().getIndexReader());\n            long size = getIndexSize(core);\n            indexInfo.add(\"sizeInBytes\", size);\n            indexInfo.add(\"size\", NumberUtils.readableSize(size));\n            info.add(\"index\", indexInfo);\n          } finally {\n            searcher.decref();\n          }\n        }\n      } finally {\n        core.close();\n      }\n    }\n    return info;\n  }\n\n","sourceOld":"  protected NamedList<Object> getCoreStatus(CoreContainer cores, String cname) throws IOException {\n    NamedList<Object> info = new SimpleOrderedMap<Object>();\n    SolrCore core = cores.getCore(cname);\n    if (core != null) {\n      try {\n        info.add(\"name\", core.getName());\n        info.add(\"isDefaultCore\", core.getName().equals(cores.getDefaultCoreName()));\n        info.add(\"instanceDir\", normalizePath(core.getResourceLoader().getInstanceDir()));\n        info.add(\"dataDir\", normalizePath(core.getDataDir()));\n        info.add(\"config\", core.getConfigResource());\n        info.add(\"schema\", core.getSchemaResource());\n        info.add(\"startTime\", new Date(core.getStartTime()));\n        info.add(\"uptime\", System.currentTimeMillis() - core.getStartTime());\n        RefCounted<SolrIndexSearcher> searcher = core.getSearcher();\n        try {\n          SimpleOrderedMap<Object> indexInfo = LukeRequestHandler.getIndexInfo(searcher.get().getIndexReader());\n          long size = getIndexSize(core);\n          indexInfo.add(\"sizeInBytes\", size);\n          indexInfo.add(\"size\", NumberUtils.readableSize(size));\n          info.add(\"index\", indexInfo);\n        } finally {\n          searcher.decref();\n        }\n      } finally {\n        core.close();\n      }\n    }\n    return info;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8917bfede3b4ca30f4305c1e391e9218959cd723","date":1358189662,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#getCoreStatus(CoreContainer,String,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#getCoreStatus(CoreContainer,String).mjava","sourceNew":"  protected NamedList<Object> getCoreStatus(CoreContainer cores, String cname, boolean isIndexInfoNeeded) throws IOException {\n    NamedList<Object> info = new SimpleOrderedMap<Object>();\n    SolrCore core = cores.getCore(cname);\n    if (core != null) {\n      try {\n        info.add(\"name\", core.getName());\n        info.add(\"isDefaultCore\", core.getName().equals(cores.getDefaultCoreName()));\n        info.add(\"instanceDir\", normalizePath(core.getResourceLoader().getInstanceDir()));\n        info.add(\"dataDir\", normalizePath(core.getDataDir()));\n        info.add(\"config\", core.getConfigResource());\n        info.add(\"schema\", core.getSchemaResource());\n        info.add(\"startTime\", new Date(core.getStartTime()));\n        info.add(\"uptime\", System.currentTimeMillis() - core.getStartTime());\n        if (isIndexInfoNeeded) {\n          RefCounted<SolrIndexSearcher> searcher = core.getSearcher();\n          try {\n            SimpleOrderedMap<Object> indexInfo = LukeRequestHandler.getIndexInfo(searcher.get().getIndexReader());\n            long size = getIndexSize(core);\n            indexInfo.add(\"sizeInBytes\", size);\n            indexInfo.add(\"size\", NumberUtils.readableSize(size));\n            info.add(\"index\", indexInfo);\n          } finally {\n            searcher.decref();\n          }\n        }\n      } finally {\n        core.close();\n      }\n    }\n    return info;\n  }\n\n","sourceOld":"  protected NamedList<Object> getCoreStatus(CoreContainer cores, String cname) throws IOException {\n    NamedList<Object> info = new SimpleOrderedMap<Object>();\n    SolrCore core = cores.getCore(cname);\n    if (core != null) {\n      try {\n        info.add(\"name\", core.getName());\n        info.add(\"isDefaultCore\", core.getName().equals(cores.getDefaultCoreName()));\n        info.add(\"instanceDir\", normalizePath(core.getResourceLoader().getInstanceDir()));\n        info.add(\"dataDir\", normalizePath(core.getDataDir()));\n        info.add(\"config\", core.getConfigResource());\n        info.add(\"schema\", core.getSchemaResource());\n        info.add(\"startTime\", new Date(core.getStartTime()));\n        info.add(\"uptime\", System.currentTimeMillis() - core.getStartTime());\n        RefCounted<SolrIndexSearcher> searcher = core.getSearcher();\n        try {\n          SimpleOrderedMap<Object> indexInfo = LukeRequestHandler.getIndexInfo(searcher.get().getIndexReader());\n          long size = getIndexSize(core);\n          indexInfo.add(\"sizeInBytes\", size);\n          indexInfo.add(\"size\", NumberUtils.readableSize(size));\n          info.add(\"index\", indexInfo);\n        } finally {\n          searcher.decref();\n        }\n      } finally {\n        core.close();\n      }\n    }\n    return info;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"901a50ac0a5d082fcdd15805491ef4b2d686907a":["e635cfcf66f9e8b914c54c24d337820e475f44a5"],"ba74b188d46af33b86ff8e5a500d6f066852a182":["c26f00b574427b55127e869b935845554afde1fa"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b5e93f7f303144d3309a3b2ba5a62f1f17575ce4":["b6912d3e0a9ef2865124c6822bc9e4cfd3581c6c"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"8917bfede3b4ca30f4305c1e391e9218959cd723":["e635cfcf66f9e8b914c54c24d337820e475f44a5","901a50ac0a5d082fcdd15805491ef4b2d686907a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e635cfcf66f9e8b914c54c24d337820e475f44a5":["b5e93f7f303144d3309a3b2ba5a62f1f17575ce4"],"b6912d3e0a9ef2865124c6822bc9e4cfd3581c6c":["ba74b188d46af33b86ff8e5a500d6f066852a182"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["901a50ac0a5d082fcdd15805491ef4b2d686907a"]},"commit2Childs":{"901a50ac0a5d082fcdd15805491ef4b2d686907a":["8917bfede3b4ca30f4305c1e391e9218959cd723","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ba74b188d46af33b86ff8e5a500d6f066852a182":["b6912d3e0a9ef2865124c6822bc9e4cfd3581c6c"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["ba74b188d46af33b86ff8e5a500d6f066852a182"],"b5e93f7f303144d3309a3b2ba5a62f1f17575ce4":["e635cfcf66f9e8b914c54c24d337820e475f44a5"],"8917bfede3b4ca30f4305c1e391e9218959cd723":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"e635cfcf66f9e8b914c54c24d337820e475f44a5":["901a50ac0a5d082fcdd15805491ef4b2d686907a","8917bfede3b4ca30f4305c1e391e9218959cd723"],"b6912d3e0a9ef2865124c6822bc9e4cfd3581c6c":["b5e93f7f303144d3309a3b2ba5a62f1f17575ce4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["8917bfede3b4ca30f4305c1e391e9218959cd723","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}