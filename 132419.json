{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/SolrServer#add(SolrInputDocument,int).mjava","commits":[{"id":"5436756e1a3ea4cf3e2fd8ae7f4c4c58ccea9052","date":1316003309,"type":0,"author":"Jan Høydahl","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/SolrServer#add(SolrInputDocument,int).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Adds a single document specifying max time before it becomes committed\n   * @param doc  the input document\n   * @param commitWithinMs  max time (in ms) before a commit will happen \n   * @throws SolrServerException\n   * @throws IOException\n   * @since solr 3.4\n   */\n  public UpdateResponse add(SolrInputDocument doc, int commitWithinMs) throws SolrServerException, IOException {\n    UpdateRequest req = new UpdateRequest();\n    req.add(doc);\n    req.setCommitWithin(commitWithinMs);\n    return req.process(this);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"530c8af3465a3903b305a6cb5e2fc03e6b374e32","date":1316003837,"type":3,"author":"Jan Høydahl","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/SolrServer#add(SolrInputDocument,int).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/SolrServer#add(SolrInputDocument,int).mjava","sourceNew":"  /**\n   * Adds a single document specifying max time before it becomes committed\n   * @param doc  the input document\n   * @param commitWithinMs  max time (in ms) before a commit will happen \n   * @throws SolrServerException\n   * @throws IOException\n   * @since solr 3.5\n   */\n  public UpdateResponse add(SolrInputDocument doc, int commitWithinMs) throws SolrServerException, IOException {\n    UpdateRequest req = new UpdateRequest();\n    req.add(doc);\n    req.setCommitWithin(commitWithinMs);\n    return req.process(this);\n  }\n\n","sourceOld":"  /**\n   * Adds a single document specifying max time before it becomes committed\n   * @param doc  the input document\n   * @param commitWithinMs  max time (in ms) before a commit will happen \n   * @throws SolrServerException\n   * @throws IOException\n   * @since solr 3.4\n   */\n  public UpdateResponse add(SolrInputDocument doc, int commitWithinMs) throws SolrServerException, IOException {\n    UpdateRequest req = new UpdateRequest();\n    req.add(doc);\n    req.setCommitWithin(commitWithinMs);\n    return req.process(this);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069","date":1348430063,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/SolrServer#add(SolrInputDocument,int).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/SolrServer#add(SolrInputDocument,int).mjava","sourceNew":"  /**\n   * Adds a single document specifying max time before it becomes committed\n   * @param doc  the input document\n   * @param commitWithinMs  max time (in ms) before a commit will happen \n   * @throws IOException If there is a low-level I/O error.\n   * @since solr 3.5\n   */\n  public UpdateResponse add(SolrInputDocument doc, int commitWithinMs) throws SolrServerException, IOException {\n    UpdateRequest req = new UpdateRequest();\n    req.add(doc);\n    req.setCommitWithin(commitWithinMs);\n    return req.process(this);\n  }\n\n","sourceOld":"  /**\n   * Adds a single document specifying max time before it becomes committed\n   * @param doc  the input document\n   * @param commitWithinMs  max time (in ms) before a commit will happen \n   * @throws SolrServerException\n   * @throws IOException\n   * @since solr 3.5\n   */\n  public UpdateResponse add(SolrInputDocument doc, int commitWithinMs) throws SolrServerException, IOException {\n    UpdateRequest req = new UpdateRequest();\n    req.add(doc);\n    req.setCommitWithin(commitWithinMs);\n    return req.process(this);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bafca15d8e408346a67f4282ad1143b88023893b","date":1420034748,"type":5,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/SolrClient#add(SolrInputDocument,int).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/SolrServer#add(SolrInputDocument,int).mjava","sourceNew":"  /**\n   * Adds a single document specifying max time before it becomes committed\n   * @param doc  the input document\n   * @param commitWithinMs  max time (in ms) before a commit will happen \n   * @throws IOException If there is a low-level I/O error.\n   * @since solr 3.5\n   */\n  public UpdateResponse add(SolrInputDocument doc, int commitWithinMs) throws SolrServerException, IOException {\n    UpdateRequest req = new UpdateRequest();\n    req.add(doc);\n    req.setCommitWithin(commitWithinMs);\n    return req.process(this);\n  }\n\n","sourceOld":"  /**\n   * Adds a single document specifying max time before it becomes committed\n   * @param doc  the input document\n   * @param commitWithinMs  max time (in ms) before a commit will happen \n   * @throws IOException If there is a low-level I/O error.\n   * @since solr 3.5\n   */\n  public UpdateResponse add(SolrInputDocument doc, int commitWithinMs) throws SolrServerException, IOException {\n    UpdateRequest req = new UpdateRequest();\n    req.add(doc);\n    req.setCommitWithin(commitWithinMs);\n    return req.process(this);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069":["530c8af3465a3903b305a6cb5e2fc03e6b374e32"],"5436756e1a3ea4cf3e2fd8ae7f4c4c58ccea9052":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bafca15d8e408346a67f4282ad1143b88023893b":["c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069"],"530c8af3465a3903b305a6cb5e2fc03e6b374e32":["5436756e1a3ea4cf3e2fd8ae7f4c4c58ccea9052"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["bafca15d8e408346a67f4282ad1143b88023893b"]},"commit2Childs":{"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069":["bafca15d8e408346a67f4282ad1143b88023893b"],"5436756e1a3ea4cf3e2fd8ae7f4c4c58ccea9052":["530c8af3465a3903b305a6cb5e2fc03e6b374e32"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5436756e1a3ea4cf3e2fd8ae7f4c4c58ccea9052"],"530c8af3465a3903b305a6cb5e2fc03e6b374e32":["c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069"],"bafca15d8e408346a67f4282ad1143b88023893b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}