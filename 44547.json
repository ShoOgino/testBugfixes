{"path":"lucene/highlighter/src/test/org/apache/lucene/search/vectorhighlight/SimpleFragmentsBuilderTest#testTagsAndEncoder().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/highlighter/src/test/org/apache/lucene/search/vectorhighlight/SimpleFragmentsBuilderTest#testTagsAndEncoder().mjava","pathOld":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/vectorhighlight/SimpleFragmentsBuilderTest#testTagsAndEncoder().mjava","sourceNew":"  public void testTagsAndEncoder() throws Exception {\n    FieldFragList ffl = ffl(new TermQuery(new Term(F, \"a\")), \"<h1> a </h1>\" );\n    SimpleFragmentsBuilder sfb = new SimpleFragmentsBuilder();\n    String[] preTags = { \"[\" };\n    String[] postTags = { \"]\" };\n    assertEquals( \"&lt;h1&gt; [a] &lt;/h1&gt;\",\n        sfb.createFragment( reader, 0, F, ffl, preTags, postTags, new SimpleHTMLEncoder() ) );\n  }\n\n","sourceOld":"  public void testTagsAndEncoder() throws Exception {\n    FieldFragList ffl = ffl(new TermQuery(new Term(F, \"a\")), \"<h1> a </h1>\" );\n    SimpleFragmentsBuilder sfb = new SimpleFragmentsBuilder();\n    String[] preTags = { \"[\" };\n    String[] postTags = { \"]\" };\n    assertEquals( \"&lt;h1&gt; [a] &lt;/h1&gt;\",\n        sfb.createFragment( reader, 0, F, ffl, preTags, postTags, new SimpleHTMLEncoder() ) );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c09d84ab341d07aadd6de4b175be4a75e70bdf42","date":1377813706,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/highlighter/src/test/org/apache/lucene/search/vectorhighlight/SimpleFragmentsBuilderTest#testTagsAndEncoder().mjava","pathOld":"lucene/highlighter/src/test/org/apache/lucene/search/vectorhighlight/SimpleFragmentsBuilderTest#testTagsAndEncoder().mjava","sourceNew":"  public void testTagsAndEncoder() throws Exception {\n    FieldFragList ffl = ffl(new TermQuery(new Term(F, \"a\")), \"<h1> a </h1>\" );\n    SimpleFragmentsBuilder sfb = new SimpleFragmentsBuilder();\n    String[] preTags = { \"[\" };\n    String[] postTags = { \"]\" };\n    assertEquals( \"&lt;h1&gt; [a] &lt;&#x2F;h1&gt;\",\n        sfb.createFragment( reader, 0, F, ffl, preTags, postTags, new SimpleHTMLEncoder() ) );\n  }\n\n","sourceOld":"  public void testTagsAndEncoder() throws Exception {\n    FieldFragList ffl = ffl(new TermQuery(new Term(F, \"a\")), \"<h1> a </h1>\" );\n    SimpleFragmentsBuilder sfb = new SimpleFragmentsBuilder();\n    String[] preTags = { \"[\" };\n    String[] postTags = { \"]\" };\n    assertEquals( \"&lt;h1&gt; [a] &lt;/h1&gt;\",\n        sfb.createFragment( reader, 0, F, ffl, preTags, postTags, new SimpleHTMLEncoder() ) );\n  }\n\n","bugFix":["ac034d22a2af5ab70b9d27bb478acd7810092eb4"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3dffec77fb8f7d0e9ca4869dddd6af94528b4576","date":1377875202,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"lucene/highlighter/src/test/org/apache/lucene/search/vectorhighlight/SimpleFragmentsBuilderTest#testTagsAndEncoder().mjava","pathOld":"lucene/highlighter/src/test/org/apache/lucene/search/vectorhighlight/SimpleFragmentsBuilderTest#testTagsAndEncoder().mjava","sourceNew":"  public void testTagsAndEncoder() throws Exception {\n    FieldFragList ffl = ffl(new TermQuery(new Term(F, \"a\")), \"<h1> a </h1>\" );\n    SimpleFragmentsBuilder sfb = new SimpleFragmentsBuilder();\n    String[] preTags = { \"[\" };\n    String[] postTags = { \"]\" };\n    assertEquals( \"&lt;h1&gt; [a] &lt;&#x2F;h1&gt;\",\n        sfb.createFragment( reader, 0, F, ffl, preTags, postTags, new SimpleHTMLEncoder() ) );\n  }\n\n","sourceOld":"  public void testTagsAndEncoder() throws Exception {\n    FieldFragList ffl = ffl(new TermQuery(new Term(F, \"a\")), \"<h1> a </h1>\" );\n    SimpleFragmentsBuilder sfb = new SimpleFragmentsBuilder();\n    String[] preTags = { \"[\" };\n    String[] postTags = { \"]\" };\n    assertEquals( \"&lt;h1&gt; [a] &lt;/h1&gt;\",\n        sfb.createFragment( reader, 0, F, ffl, preTags, postTags, new SimpleHTMLEncoder() ) );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":["b89678825b68eccaf09e6ab71675fc0b0af1e099","c09d84ab341d07aadd6de4b175be4a75e70bdf42"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c09d84ab341d07aadd6de4b175be4a75e70bdf42":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c09d84ab341d07aadd6de4b175be4a75e70bdf42"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","c09d84ab341d07aadd6de4b175be4a75e70bdf42"],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"c09d84ab341d07aadd6de4b175be4a75e70bdf42":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}