{"path":"src/java/org/apache/solr/highlight/LuceneRegexFragmenter[RegexFragmenter]#LuceneRegexFragmenter(int,int,float,int,Pattern).mjava","commits":[{"id":"94251da2db5138d2a83776d362239f1fffc18786","date":1184909663,"type":0,"author":"Mike Klaas","isMerge":false,"pathNew":"src/java/org/apache/solr/highlight/LuceneRegexFragmenter[RegexFragmenter]#LuceneRegexFragmenter(int,int,float,int,Pattern).mjava","pathOld":"/dev/null","sourceNew":"  public LuceneRegexFragmenter(int targetFragChars, \n                               int incrementGapThreshold,\n                               float slop,\n                               int maxAnalyzedChars,\n                               Pattern targetPattern) {\n    this.targetFragChars = targetFragChars;\n    this.incrementGapThreshold = incrementGapThreshold;    \n    this.slop = slop;\n    this.maxAnalyzedChars = maxAnalyzedChars;\n    this.textRE = targetPattern;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/highlight/LuceneRegexFragmenter[RegexFragmenter]#LuceneRegexFragmenter(int,int,float,int,Pattern).mjava","pathOld":"src/java/org/apache/solr/highlight/LuceneRegexFragmenter[RegexFragmenter]#LuceneRegexFragmenter(int,int,float,int,Pattern).mjava","sourceNew":"  public LuceneRegexFragmenter(int targetFragChars, \n                               int incrementGapThreshold,\n                               float slop,\n                               int maxAnalyzedChars,\n                               Pattern targetPattern) {\n    this.targetFragChars = targetFragChars;\n    this.incrementGapThreshold = incrementGapThreshold;    \n    this.slop = slop;\n    this.maxAnalyzedChars = maxAnalyzedChars;\n    this.textRE = targetPattern;\n  }\n\n","sourceOld":"  public LuceneRegexFragmenter(int targetFragChars, \n                               int incrementGapThreshold,\n                               float slop,\n                               int maxAnalyzedChars,\n                               Pattern targetPattern) {\n    this.targetFragChars = targetFragChars;\n    this.incrementGapThreshold = incrementGapThreshold;    \n    this.slop = slop;\n    this.maxAnalyzedChars = maxAnalyzedChars;\n    this.textRE = targetPattern;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"94251da2db5138d2a83776d362239f1fffc18786":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"ad94625fb8d088209f46650c8097196fec67f00c":["94251da2db5138d2a83776d362239f1fffc18786"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["94251da2db5138d2a83776d362239f1fffc18786"],"94251da2db5138d2a83776d362239f1fffc18786":["ad94625fb8d088209f46650c8097196fec67f00c"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}