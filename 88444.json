{"path":"lucene/core/src/test/org/apache/lucene/codecs/perfield/TestPerFieldPostingsFormat2.MockCodec#getPostingsFormatForField(String).mjava","commits":[{"id":"339cf89fb32d53dacb17aa56f2b6bf87eb4a3a67","date":1348934182,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/codecs/perfield/TestPerFieldPostingsFormat2.MockCodec#getPostingsFormatForField(String).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/codecs/perfield/TestPerFieldPostingsFormat.MockCodec#getPostingsFormatForField(String).mjava","sourceNew":"    @Override\n    public PostingsFormat getPostingsFormatForField(String field) {\n      if (field.equals(\"id\")) {\n        return simpleText;\n      } else if (field.equals(\"content\")) {\n        return mockSep;\n      } else {\n        return lucene40;\n      }\n    }\n\n","sourceOld":"    @Override\n    public PostingsFormat getPostingsFormatForField(String field) {\n      if (field.equals(\"id\")) {\n        return simpleText;\n      } else if (field.equals(\"content\")) {\n        return mockSep;\n      } else {\n        return lucene40;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"91d86ebcdb45ce6a1b2584e2603f76db47523d0a","date":1396466913,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/codecs/perfield/TestPerFieldPostingsFormat2.MockCodec#getPostingsFormatForField(String).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/codecs/perfield/TestPerFieldPostingsFormat2.MockCodec#getPostingsFormatForField(String).mjava","sourceNew":"    @Override\n    public PostingsFormat getPostingsFormatForField(String field) {\n      if (field.equals(\"id\")) {\n        return simpleText;\n      } else if (field.equals(\"content\")) {\n        return memory;\n      } else {\n        return lucene40;\n      }\n    }\n\n","sourceOld":"    @Override\n    public PostingsFormat getPostingsFormatForField(String field) {\n      if (field.equals(\"id\")) {\n        return simpleText;\n      } else if (field.equals(\"content\")) {\n        return mockSep;\n      } else {\n        return lucene40;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5eb2511ababf862ea11e10761c70ee560cd84510","date":1396607225,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/codecs/perfield/TestPerFieldPostingsFormat2.MockCodec#getPostingsFormatForField(String).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/codecs/perfield/TestPerFieldPostingsFormat2.MockCodec#getPostingsFormatForField(String).mjava","sourceNew":"    @Override\n    public PostingsFormat getPostingsFormatForField(String field) {\n      if (field.equals(\"id\")) {\n        return simpleText;\n      } else if (field.equals(\"content\")) {\n        return memory;\n      } else {\n        return lucene40;\n      }\n    }\n\n","sourceOld":"    @Override\n    public PostingsFormat getPostingsFormatForField(String field) {\n      if (field.equals(\"id\")) {\n        return simpleText;\n      } else if (field.equals(\"content\")) {\n        return mockSep;\n      } else {\n        return lucene40;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e49088db00ea6cb232fbde9c8c646c721d4d049f","date":1411433559,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/codecs/perfield/TestPerFieldPostingsFormat2.MockCodec#getPostingsFormatForField(String).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/codecs/perfield/TestPerFieldPostingsFormat2.MockCodec#getPostingsFormatForField(String).mjava","sourceNew":"    @Override\n    public PostingsFormat getPostingsFormatForField(String field) {\n      if (field.equals(\"id\")) {\n        return simpleText;\n      } else if (field.equals(\"content\")) {\n        return memory;\n      } else {\n        return luceneDefault;\n      }\n    }\n\n","sourceOld":"    @Override\n    public PostingsFormat getPostingsFormatForField(String field) {\n      if (field.equals(\"id\")) {\n        return simpleText;\n      } else if (field.equals(\"content\")) {\n        return memory;\n      } else {\n        return lucene40;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"71488d7f5786ae87541276121ecb69705a11a295","date":1465498138,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/codecs/perfield/TestPerFieldPostingsFormat2.MockCodec#getPostingsFormatForField(String).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/codecs/perfield/TestPerFieldPostingsFormat2.MockCodec#getPostingsFormatForField(String).mjava","sourceNew":"    @Override\n    public PostingsFormat getPostingsFormatForField(String field) {\n      if (field.equals(\"id\")) {\n        return direct;\n      } else if (field.equals(\"content\")) {\n        return memory;\n      } else {\n        return luceneDefault;\n      }\n    }\n\n","sourceOld":"    @Override\n    public PostingsFormat getPostingsFormatForField(String field) {\n      if (field.equals(\"id\")) {\n        return simpleText;\n      } else if (field.equals(\"content\")) {\n        return memory;\n      } else {\n        return luceneDefault;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/codecs/perfield/TestPerFieldPostingsFormat2.MockCodec#getPostingsFormatForField(String).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/codecs/perfield/TestPerFieldPostingsFormat2.MockCodec#getPostingsFormatForField(String).mjava","sourceNew":"    @Override\n    public PostingsFormat getPostingsFormatForField(String field) {\n      if (field.equals(\"id\")) {\n        return direct;\n      } else if (field.equals(\"content\")) {\n        return memory;\n      } else {\n        return luceneDefault;\n      }\n    }\n\n","sourceOld":"    @Override\n    public PostingsFormat getPostingsFormatForField(String field) {\n      if (field.equals(\"id\")) {\n        return simpleText;\n      } else if (field.equals(\"content\")) {\n        return memory;\n      } else {\n        return luceneDefault;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"24f89e8a6aac05753cde4c83d62a74356098200d","date":1525768331,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/codecs/perfield/TestPerFieldPostingsFormat2.MockCodec#getPostingsFormatForField(String).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/codecs/perfield/TestPerFieldPostingsFormat2.MockCodec#getPostingsFormatForField(String).mjava","sourceNew":"    @Override\n    public PostingsFormat getPostingsFormatForField(String field) {\n      if (field.equals(\"id\")) {\n        return direct;\n      } else {\n        return luceneDefault;\n      }\n    }\n\n","sourceOld":"    @Override\n    public PostingsFormat getPostingsFormatForField(String field) {\n      if (field.equals(\"id\")) {\n        return direct;\n      } else if (field.equals(\"content\")) {\n        return memory;\n      } else {\n        return luceneDefault;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5eb2511ababf862ea11e10761c70ee560cd84510":["339cf89fb32d53dacb17aa56f2b6bf87eb4a3a67","91d86ebcdb45ce6a1b2584e2603f76db47523d0a"],"e49088db00ea6cb232fbde9c8c646c721d4d049f":["91d86ebcdb45ce6a1b2584e2603f76db47523d0a"],"24f89e8a6aac05753cde4c83d62a74356098200d":["71488d7f5786ae87541276121ecb69705a11a295"],"91d86ebcdb45ce6a1b2584e2603f76db47523d0a":["339cf89fb32d53dacb17aa56f2b6bf87eb4a3a67"],"339cf89fb32d53dacb17aa56f2b6bf87eb4a3a67":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"71488d7f5786ae87541276121ecb69705a11a295":["e49088db00ea6cb232fbde9c8c646c721d4d049f"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["e49088db00ea6cb232fbde9c8c646c721d4d049f","71488d7f5786ae87541276121ecb69705a11a295"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["24f89e8a6aac05753cde4c83d62a74356098200d"]},"commit2Childs":{"5eb2511ababf862ea11e10761c70ee560cd84510":[],"e49088db00ea6cb232fbde9c8c646c721d4d049f":["71488d7f5786ae87541276121ecb69705a11a295","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"91d86ebcdb45ce6a1b2584e2603f76db47523d0a":["5eb2511ababf862ea11e10761c70ee560cd84510","e49088db00ea6cb232fbde9c8c646c721d4d049f"],"24f89e8a6aac05753cde4c83d62a74356098200d":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"339cf89fb32d53dacb17aa56f2b6bf87eb4a3a67":["5eb2511ababf862ea11e10761c70ee560cd84510","91d86ebcdb45ce6a1b2584e2603f76db47523d0a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["339cf89fb32d53dacb17aa56f2b6bf87eb4a3a67"],"71488d7f5786ae87541276121ecb69705a11a295":["24f89e8a6aac05753cde4c83d62a74356098200d","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5eb2511ababf862ea11e10761c70ee560cd84510","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}