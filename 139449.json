{"path":"src/demo/org/apache/lucene/demo/html/SimpleCharStream#ExpandBuff(boolean).mjava","commits":[{"id":"9dc3f3d3156ee3e335155b8a8f44f7e926db09ef","date":1063245093,"type":0,"author":"Erik Hatcher","isMerge":false,"pathNew":"src/demo/org/apache/lucene/demo/html/SimpleCharStream#ExpandBuff(boolean).mjava","pathOld":"/dev/null","sourceNew":"  protected void ExpandBuff(boolean wrapAround)\n  {\n     char[] newbuffer = new char[bufsize + 2048];\n     int newbufline[] = new int[bufsize + 2048];\n     int newbufcolumn[] = new int[bufsize + 2048];\n\n     try\n     {\n        if (wrapAround)\n        {\n           System.arraycopy(buffer, tokenBegin, newbuffer, 0, bufsize - tokenBegin);\n           System.arraycopy(buffer, 0, newbuffer,\n                                             bufsize - tokenBegin, bufpos);\n           buffer = newbuffer;\n\n           System.arraycopy(bufline, tokenBegin, newbufline, 0, bufsize - tokenBegin);\n           System.arraycopy(bufline, 0, newbufline, bufsize - tokenBegin, bufpos);\n           bufline = newbufline;\n\n           System.arraycopy(bufcolumn, tokenBegin, newbufcolumn, 0, bufsize - tokenBegin);\n           System.arraycopy(bufcolumn, 0, newbufcolumn, bufsize - tokenBegin, bufpos);\n           bufcolumn = newbufcolumn;\n\n           maxNextCharInd = (bufpos += (bufsize - tokenBegin));\n        }\n        else\n        {\n           System.arraycopy(buffer, tokenBegin, newbuffer, 0, bufsize - tokenBegin);\n           buffer = newbuffer;\n\n           System.arraycopy(bufline, tokenBegin, newbufline, 0, bufsize - tokenBegin);\n           bufline = newbufline;\n\n           System.arraycopy(bufcolumn, tokenBegin, newbufcolumn, 0, bufsize - tokenBegin);\n           bufcolumn = newbufcolumn;\n\n           maxNextCharInd = (bufpos -= tokenBegin);\n        }\n     }\n     catch (Throwable t)\n     {\n        throw new Error(t.getMessage());\n     }\n\n\n     bufsize += 2048;\n     available = bufsize;\n     tokenBegin = 0;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/demo/org/apache/lucene/demo/html/SimpleCharStream#ExpandBuff(boolean).mjava","pathOld":"src/demo/org/apache/lucene/demo/html/SimpleCharStream#ExpandBuff(boolean).mjava","sourceNew":"  protected void ExpandBuff(boolean wrapAround)\n  {\n     char[] newbuffer = new char[bufsize + 2048];\n     int newbufline[] = new int[bufsize + 2048];\n     int newbufcolumn[] = new int[bufsize + 2048];\n\n     try\n     {\n        if (wrapAround)\n        {\n           System.arraycopy(buffer, tokenBegin, newbuffer, 0, bufsize - tokenBegin);\n           System.arraycopy(buffer, 0, newbuffer,\n                                             bufsize - tokenBegin, bufpos);\n           buffer = newbuffer;\n\n           System.arraycopy(bufline, tokenBegin, newbufline, 0, bufsize - tokenBegin);\n           System.arraycopy(bufline, 0, newbufline, bufsize - tokenBegin, bufpos);\n           bufline = newbufline;\n\n           System.arraycopy(bufcolumn, tokenBegin, newbufcolumn, 0, bufsize - tokenBegin);\n           System.arraycopy(bufcolumn, 0, newbufcolumn, bufsize - tokenBegin, bufpos);\n           bufcolumn = newbufcolumn;\n\n           maxNextCharInd = (bufpos += (bufsize - tokenBegin));\n        }\n        else\n        {\n           System.arraycopy(buffer, tokenBegin, newbuffer, 0, bufsize - tokenBegin);\n           buffer = newbuffer;\n\n           System.arraycopy(bufline, tokenBegin, newbufline, 0, bufsize - tokenBegin);\n           bufline = newbufline;\n\n           System.arraycopy(bufcolumn, tokenBegin, newbufcolumn, 0, bufsize - tokenBegin);\n           bufcolumn = newbufcolumn;\n\n           maxNextCharInd = (bufpos -= tokenBegin);\n        }\n     }\n     catch (Throwable t)\n     {\n        throw new Error(t.getMessage());\n     }\n\n\n     bufsize += 2048;\n     available = bufsize;\n     tokenBegin = 0;\n  }\n\n","sourceOld":"  protected void ExpandBuff(boolean wrapAround)\n  {\n     char[] newbuffer = new char[bufsize + 2048];\n     int newbufline[] = new int[bufsize + 2048];\n     int newbufcolumn[] = new int[bufsize + 2048];\n\n     try\n     {\n        if (wrapAround)\n        {\n           System.arraycopy(buffer, tokenBegin, newbuffer, 0, bufsize - tokenBegin);\n           System.arraycopy(buffer, 0, newbuffer,\n                                             bufsize - tokenBegin, bufpos);\n           buffer = newbuffer;\n\n           System.arraycopy(bufline, tokenBegin, newbufline, 0, bufsize - tokenBegin);\n           System.arraycopy(bufline, 0, newbufline, bufsize - tokenBegin, bufpos);\n           bufline = newbufline;\n\n           System.arraycopy(bufcolumn, tokenBegin, newbufcolumn, 0, bufsize - tokenBegin);\n           System.arraycopy(bufcolumn, 0, newbufcolumn, bufsize - tokenBegin, bufpos);\n           bufcolumn = newbufcolumn;\n\n           maxNextCharInd = (bufpos += (bufsize - tokenBegin));\n        }\n        else\n        {\n           System.arraycopy(buffer, tokenBegin, newbuffer, 0, bufsize - tokenBegin);\n           buffer = newbuffer;\n\n           System.arraycopy(bufline, tokenBegin, newbufline, 0, bufsize - tokenBegin);\n           bufline = newbufline;\n\n           System.arraycopy(bufcolumn, tokenBegin, newbufcolumn, 0, bufsize - tokenBegin);\n           bufcolumn = newbufcolumn;\n\n           maxNextCharInd = (bufpos -= tokenBegin);\n        }\n     }\n     catch (Throwable t)\n     {\n        throw new Error(t.getMessage());\n     }\n\n\n     bufsize += 2048;\n     available = bufsize;\n     tokenBegin = 0;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9dc3f3d3156ee3e335155b8a8f44f7e926db09ef":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["9dc3f3d3156ee3e335155b8a8f44f7e926db09ef"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9dc3f3d3156ee3e335155b8a8f44f7e926db09ef"],"9dc3f3d3156ee3e335155b8a8f44f7e926db09ef":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}