{"path":"contrib/spatial/src/java/org/apache/lucene/spatial/geometry/LatLng#toCartesian().mjava","commits":[{"id":"04a4a94db1eb59c8583adb166acfe686a031bedc","date":1230622637,"type":0,"author":"Ryan McKinley","isMerge":false,"pathNew":"contrib/spatial/src/java/org/apache/lucene/spatial/geometry/LatLng#toCartesian().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Convert the lat/lng into the cartesian coordinate plane such that all\n   * world coordinates are represented in the first quadrant.\n   * The x dimension corresponds to latitude and y corresponds to longitude.\n   * The translation starts with the normalized latlng and adds 180 to the latitude and \n   * 90 to the longitude (subject to fixed point scaling).\n   * \n   * @return\n   */\n  public CartesianPoint toCartesian() {\n    LatLng ll=normalize();\n    \n    int lat=ll.getFixedLat();\n    int lng=ll.getFixedLng();\n    \n    return new CartesianPoint(\n        lng+180*FixedLatLng.SCALE_FACTOR_INT,\n        lat+90*FixedLatLng.SCALE_FACTOR_INT\n    );\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d41c10b9c61bc826acd344f499e062fb46bc42ae","date":1249408917,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/spatial/src/java/org/apache/lucene/spatial/geometry/LatLng#toCartesian().mjava","pathOld":"contrib/spatial/src/java/org/apache/lucene/spatial/geometry/LatLng#toCartesian().mjava","sourceNew":"  /**\n   * Convert the lat/lng into the cartesian coordinate plane such that all\n   * world coordinates are represented in the first quadrant.\n   * The x dimension corresponds to latitude and y corresponds to longitude.\n   * The translation starts with the normalized latlng and adds 180 to the latitude and \n   * 90 to the longitude (subject to fixed point scaling).\n   */\n  public CartesianPoint toCartesian() {\n    LatLng ll=normalize();\n    \n    int lat=ll.getFixedLat();\n    int lng=ll.getFixedLng();\n    \n    return new CartesianPoint(\n        lng+180*FixedLatLng.SCALE_FACTOR_INT,\n        lat+90*FixedLatLng.SCALE_FACTOR_INT\n    );\n  }\n\n","sourceOld":"  /**\n   * Convert the lat/lng into the cartesian coordinate plane such that all\n   * world coordinates are represented in the first quadrant.\n   * The x dimension corresponds to latitude and y corresponds to longitude.\n   * The translation starts with the normalized latlng and adds 180 to the latitude and \n   * 90 to the longitude (subject to fixed point scaling).\n   * \n   * @return\n   */\n  public CartesianPoint toCartesian() {\n    LatLng ll=normalize();\n    \n    int lat=ll.getFixedLat();\n    int lng=ll.getFixedLng();\n    \n    return new CartesianPoint(\n        lng+180*FixedLatLng.SCALE_FACTOR_INT,\n        lat+90*FixedLatLng.SCALE_FACTOR_INT\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/spatial/src/java/org/apache/lucene/spatial/geometry/LatLng#toCartesian().mjava","pathOld":"contrib/spatial/src/java/org/apache/lucene/spatial/geometry/LatLng#toCartesian().mjava","sourceNew":"  /**\n   * Convert the lat/lng into the cartesian coordinate plane such that all\n   * world coordinates are represented in the first quadrant.\n   * The x dimension corresponds to latitude and y corresponds to longitude.\n   * The translation starts with the normalized latlng and adds 180 to the latitude and \n   * 90 to the longitude (subject to fixed point scaling).\n   */\n  public CartesianPoint toCartesian() {\n    LatLng ll=normalize();\n    \n    int lat=ll.getFixedLat();\n    int lng=ll.getFixedLng();\n    \n    return new CartesianPoint(\n        lng+180*FixedLatLng.SCALE_FACTOR_INT,\n        lat+90*FixedLatLng.SCALE_FACTOR_INT\n    );\n  }\n\n","sourceOld":"  /**\n   * Convert the lat/lng into the cartesian coordinate plane such that all\n   * world coordinates are represented in the first quadrant.\n   * The x dimension corresponds to latitude and y corresponds to longitude.\n   * The translation starts with the normalized latlng and adds 180 to the latitude and \n   * 90 to the longitude (subject to fixed point scaling).\n   */\n  public CartesianPoint toCartesian() {\n    LatLng ll=normalize();\n    \n    int lat=ll.getFixedLat();\n    int lng=ll.getFixedLng();\n    \n    return new CartesianPoint(\n        lng+180*FixedLatLng.SCALE_FACTOR_INT,\n        lat+90*FixedLatLng.SCALE_FACTOR_INT\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"04a4a94db1eb59c8583adb166acfe686a031bedc":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d41c10b9c61bc826acd344f499e062fb46bc42ae":["04a4a94db1eb59c8583adb166acfe686a031bedc"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["d41c10b9c61bc826acd344f499e062fb46bc42ae"]},"commit2Childs":{"04a4a94db1eb59c8583adb166acfe686a031bedc":["d41c10b9c61bc826acd344f499e062fb46bc42ae"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["04a4a94db1eb59c8583adb166acfe686a031bedc"],"d41c10b9c61bc826acd344f499e062fb46bc42ae":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}