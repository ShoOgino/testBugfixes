{"path":"solr/src/java/org/apache/solr/analysis/WordDelimiterFilter.WordDelimiterConcatenation#write().mjava","commits":[{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/analysis/WordDelimiterFilter.WordDelimiterConcatenation#write().mjava","pathOld":"src/java/org/apache/solr/analysis/WordDelimiterFilter.WordDelimiterConcatenation#write().mjava","sourceNew":"    /**\n     * Writes the concatenation to the attributes\n     */\n    void write() {\n      clearAttributes();\n      if (termAtttribute.termLength() < buffer.length()) {\n        termAtttribute.resizeTermBuffer(buffer.length());\n      }\n      char termbuffer[] = termAtttribute.termBuffer();\n      \n      buffer.getChars(0, buffer.length(), termbuffer, 0);\n      termAtttribute.setTermLength(buffer.length());\n        \n      if (hasIllegalOffsets) {\n        offsetAttribute.setOffset(savedStartOffset, savedEndOffset);\n      }\n      else {\n        offsetAttribute.setOffset(startOffset, endOffset);\n      }\n      posIncAttribute.setPositionIncrement(position(true));\n      typeAttribute.setType(savedType);\n      accumPosInc = 0;\n    }\n\n","sourceOld":"    /**\n     * Writes the concatenation to the attributes\n     */\n    void write() {\n      clearAttributes();\n      if (termAtttribute.termLength() < buffer.length()) {\n        termAtttribute.resizeTermBuffer(buffer.length());\n      }\n      char termbuffer[] = termAtttribute.termBuffer();\n      \n      buffer.getChars(0, buffer.length(), termbuffer, 0);\n      termAtttribute.setTermLength(buffer.length());\n        \n      if (hasIllegalOffsets) {\n        offsetAttribute.setOffset(savedStartOffset, savedEndOffset);\n      }\n      else {\n        offsetAttribute.setOffset(startOffset, endOffset);\n      }\n      posIncAttribute.setPositionIncrement(position(true));\n      typeAttribute.setType(savedType);\n      accumPosInc = 0;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1da8d55113b689b06716246649de6f62430f15c0","date":1453508340,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/analysis/WordDelimiterFilter.WordDelimiterConcatenation#write().mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * Writes the concatenation to the attributes\n     */\n    void write() {\n      clearAttributes();\n      if (termAtttribute.termLength() < buffer.length()) {\n        termAtttribute.resizeTermBuffer(buffer.length());\n      }\n      char termbuffer[] = termAtttribute.termBuffer();\n      \n      buffer.getChars(0, buffer.length(), termbuffer, 0);\n      termAtttribute.setTermLength(buffer.length());\n        \n      if (hasIllegalOffsets) {\n        offsetAttribute.setOffset(savedStartOffset, savedEndOffset);\n      }\n      else {\n        offsetAttribute.setOffset(startOffset, endOffset);\n      }\n      posIncAttribute.setPositionIncrement(position(true));\n      typeAttribute.setType(savedType);\n      accumPosInc = 0;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ff46adc3717c29b5e2c0cb21b7ee087c26931595","date":1269729642,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/analysis/WordDelimiterFilter.WordDelimiterConcatenation#write().mjava","pathOld":"solr/src/java/org/apache/solr/analysis/WordDelimiterFilter.WordDelimiterConcatenation#write().mjava","sourceNew":"    /**\n     * Writes the concatenation to the attributes\n     */\n    void write() {\n      clearAttributes();\n      if (termAttribute.termLength() < buffer.length()) {\n        termAttribute.resizeTermBuffer(buffer.length());\n      }\n      char termbuffer[] = termAttribute.termBuffer();\n      \n      buffer.getChars(0, buffer.length(), termbuffer, 0);\n      termAttribute.setTermLength(buffer.length());\n        \n      if (hasIllegalOffsets) {\n        offsetAttribute.setOffset(savedStartOffset, savedEndOffset);\n      }\n      else {\n        offsetAttribute.setOffset(startOffset, endOffset);\n      }\n      posIncAttribute.setPositionIncrement(position(true));\n      typeAttribute.setType(savedType);\n      accumPosInc = 0;\n    }\n\n","sourceOld":"    /**\n     * Writes the concatenation to the attributes\n     */\n    void write() {\n      clearAttributes();\n      if (termAtttribute.termLength() < buffer.length()) {\n        termAtttribute.resizeTermBuffer(buffer.length());\n      }\n      char termbuffer[] = termAtttribute.termBuffer();\n      \n      buffer.getChars(0, buffer.length(), termbuffer, 0);\n      termAtttribute.setTermLength(buffer.length());\n        \n      if (hasIllegalOffsets) {\n        offsetAttribute.setOffset(savedStartOffset, savedEndOffset);\n      }\n      else {\n        offsetAttribute.setOffset(startOffset, endOffset);\n      }\n      posIncAttribute.setPositionIncrement(position(true));\n      typeAttribute.setType(savedType);\n      accumPosInc = 0;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d085fb336a7208eea2214e5ffcc803960819b60b","date":1270981894,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/analysis/WordDelimiterFilter.WordDelimiterConcatenation#write().mjava","pathOld":"solr/src/java/org/apache/solr/analysis/WordDelimiterFilter.WordDelimiterConcatenation#write().mjava","sourceNew":"    /**\n     * Writes the concatenation to the attributes\n     */\n    void write() {\n      clearAttributes();\n      if (termAttribute.length() < buffer.length()) {\n        termAttribute.resizeBuffer(buffer.length());\n      }\n      char termbuffer[] = termAttribute.buffer();\n      \n      buffer.getChars(0, buffer.length(), termbuffer, 0);\n      termAttribute.setLength(buffer.length());\n        \n      if (hasIllegalOffsets) {\n        offsetAttribute.setOffset(savedStartOffset, savedEndOffset);\n      }\n      else {\n        offsetAttribute.setOffset(startOffset, endOffset);\n      }\n      posIncAttribute.setPositionIncrement(position(true));\n      typeAttribute.setType(savedType);\n      accumPosInc = 0;\n    }\n\n","sourceOld":"    /**\n     * Writes the concatenation to the attributes\n     */\n    void write() {\n      clearAttributes();\n      if (termAttribute.termLength() < buffer.length()) {\n        termAttribute.resizeTermBuffer(buffer.length());\n      }\n      char termbuffer[] = termAttribute.termBuffer();\n      \n      buffer.getChars(0, buffer.length(), termbuffer, 0);\n      termAttribute.setTermLength(buffer.length());\n        \n      if (hasIllegalOffsets) {\n        offsetAttribute.setOffset(savedStartOffset, savedEndOffset);\n      }\n      else {\n        offsetAttribute.setOffset(startOffset, endOffset);\n      }\n      posIncAttribute.setPositionIncrement(position(true));\n      typeAttribute.setType(savedType);\n      accumPosInc = 0;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8598a11db0eb9efa116ba7656c437f5bed7de0f7","date":1272964265,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/analyzers/common/src/java/org/apache/lucene/analysis/miscellaneous/WordDelimiterFilter.WordDelimiterConcatenation#write().mjava","pathOld":"solr/src/java/org/apache/solr/analysis/WordDelimiterFilter.WordDelimiterConcatenation#write().mjava","sourceNew":"    /**\n     * Writes the concatenation to the attributes\n     */\n    void write() {\n      clearAttributes();\n      if (termAttribute.length() < buffer.length()) {\n        termAttribute.resizeBuffer(buffer.length());\n      }\n      char termbuffer[] = termAttribute.buffer();\n      \n      buffer.getChars(0, buffer.length(), termbuffer, 0);\n      termAttribute.setLength(buffer.length());\n        \n      if (hasIllegalOffsets) {\n        offsetAttribute.setOffset(savedStartOffset, savedEndOffset);\n      }\n      else {\n        offsetAttribute.setOffset(startOffset, endOffset);\n      }\n      posIncAttribute.setPositionIncrement(position(true));\n      typeAttribute.setType(savedType);\n      accumPosInc = 0;\n    }\n\n","sourceOld":"    /**\n     * Writes the concatenation to the attributes\n     */\n    void write() {\n      clearAttributes();\n      if (termAttribute.length() < buffer.length()) {\n        termAttribute.resizeBuffer(buffer.length());\n      }\n      char termbuffer[] = termAttribute.buffer();\n      \n      buffer.getChars(0, buffer.length(), termbuffer, 0);\n      termAttribute.setLength(buffer.length());\n        \n      if (hasIllegalOffsets) {\n        offsetAttribute.setOffset(savedStartOffset, savedEndOffset);\n      }\n      else {\n        offsetAttribute.setOffset(startOffset, endOffset);\n      }\n      posIncAttribute.setPositionIncrement(position(true));\n      typeAttribute.setType(savedType);\n      accumPosInc = 0;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1da8d55113b689b06716246649de6f62430f15c0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ad94625fb8d088209f46650c8097196fec67f00c"],"ff46adc3717c29b5e2c0cb21b7ee087c26931595":["1da8d55113b689b06716246649de6f62430f15c0"],"8598a11db0eb9efa116ba7656c437f5bed7de0f7":["d085fb336a7208eea2214e5ffcc803960819b60b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"d085fb336a7208eea2214e5ffcc803960819b60b":["ff46adc3717c29b5e2c0cb21b7ee087c26931595"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8598a11db0eb9efa116ba7656c437f5bed7de0f7"]},"commit2Childs":{"1da8d55113b689b06716246649de6f62430f15c0":["ff46adc3717c29b5e2c0cb21b7ee087c26931595"],"ff46adc3717c29b5e2c0cb21b7ee087c26931595":["d085fb336a7208eea2214e5ffcc803960819b60b"],"8598a11db0eb9efa116ba7656c437f5bed7de0f7":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1da8d55113b689b06716246649de6f62430f15c0"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["ad94625fb8d088209f46650c8097196fec67f00c"],"ad94625fb8d088209f46650c8097196fec67f00c":["1da8d55113b689b06716246649de6f62430f15c0"],"d085fb336a7208eea2214e5ffcc803960819b60b":["8598a11db0eb9efa116ba7656c437f5bed7de0f7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}