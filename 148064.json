{"path":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/MockInitialContextFactory#MockInitialContextFactory().mjava","commits":[{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/MockInitialContextFactory#MockInitialContextFactory().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/MockInitialContextFactory#MockInitialContextFactory().mjava","sourceNew":"  public MockInitialContextFactory() {\n    mockControl = EasyMock.createStrictControl();\n    context = mockControl.createMock(javax.naming.Context.class);\n\n    try {\n      EasyMock.expect(context.lookup((String) EasyMock.anyObject())).andAnswer(\n          new IAnswer<Object>() {\n            public Object answer() throws Throwable {\n              return objects.get(EasyMock.getCurrentArguments()[0]);\n            }\n          }).anyTimes();\n\n    } catch (NamingException e) {\n      throw new RuntimeException(e);\n    }\n\n    mockControl.replay();\n  }\n\n","sourceOld":"  public MockInitialContextFactory() {\n    mockControl = EasyMock.createStrictControl();\n    context = mockControl.createMock(javax.naming.Context.class);\n\n    try {\n      EasyMock.expect(context.lookup((String) EasyMock.anyObject())).andAnswer(\n          new IAnswer<Object>() {\n            public Object answer() throws Throwable {\n              return objects.get(EasyMock.getCurrentArguments()[0]);\n            }\n          }).anyTimes();\n\n    } catch (NamingException e) {\n      throw new RuntimeException(e);\n    }\n\n    mockControl.replay();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/MockInitialContextFactory#MockInitialContextFactory().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/MockInitialContextFactory#MockInitialContextFactory().mjava","sourceNew":"  public MockInitialContextFactory() {\n    mockControl = EasyMock.createStrictControl();\n    context = mockControl.createMock(javax.naming.Context.class);\n\n    try {\n      EasyMock.expect(context.lookup((String) EasyMock.anyObject())).andAnswer(\n          new IAnswer<Object>() {\n            public Object answer() throws Throwable {\n              return objects.get(EasyMock.getCurrentArguments()[0]);\n            }\n          }).anyTimes();\n\n    } catch (NamingException e) {\n      throw new RuntimeException(e);\n    }\n\n    mockControl.replay();\n  }\n\n","sourceOld":"  public MockInitialContextFactory() {\n    mockControl = EasyMock.createStrictControl();\n    context = mockControl.createMock(javax.naming.Context.class);\n\n    try {\n      EasyMock.expect(context.lookup((String) EasyMock.anyObject())).andAnswer(\n          new IAnswer<Object>() {\n            public Object answer() throws Throwable {\n              return objects.get(EasyMock.getCurrentArguments()[0]);\n            }\n          }).anyTimes();\n\n    } catch (NamingException e) {\n      throw new RuntimeException(e);\n    }\n\n    mockControl.replay();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7530de27b87b961b51f01bd1299b7004d46e8823","date":1355236261,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/MockInitialContextFactory#MockInitialContextFactory().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/MockInitialContextFactory#MockInitialContextFactory().mjava","sourceNew":"  public MockInitialContextFactory() {\n    mockControl = EasyMock.createStrictControl();\n    context = mockControl.createMock(javax.naming.Context.class);\n\n    try {\n      EasyMock.expect(context.lookup((String) EasyMock.anyObject())).andAnswer(\n          new IAnswer<Object>() {\n            @Override\n            public Object answer() throws Throwable {\n              return objects.get(EasyMock.getCurrentArguments()[0]);\n            }\n          }).anyTimes();\n\n    } catch (NamingException e) {\n      throw new RuntimeException(e);\n    }\n\n    mockControl.replay();\n  }\n\n","sourceOld":"  public MockInitialContextFactory() {\n    mockControl = EasyMock.createStrictControl();\n    context = mockControl.createMock(javax.naming.Context.class);\n\n    try {\n      EasyMock.expect(context.lookup((String) EasyMock.anyObject())).andAnswer(\n          new IAnswer<Object>() {\n            public Object answer() throws Throwable {\n              return objects.get(EasyMock.getCurrentArguments()[0]);\n            }\n          }).anyTimes();\n\n    } catch (NamingException e) {\n      throw new RuntimeException(e);\n    }\n\n    mockControl.replay();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/MockInitialContextFactory#MockInitialContextFactory().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/MockInitialContextFactory#MockInitialContextFactory().mjava","sourceNew":"  public MockInitialContextFactory() {\n    mockControl = EasyMock.createStrictControl();\n    context = mockControl.createMock(javax.naming.Context.class);\n\n    try {\n      EasyMock.expect(context.lookup((String) EasyMock.anyObject())).andAnswer(\n          new IAnswer<Object>() {\n            @Override\n            public Object answer() throws Throwable {\n              return objects.get(EasyMock.getCurrentArguments()[0]);\n            }\n          }).anyTimes();\n\n    } catch (NamingException e) {\n      throw new RuntimeException(e);\n    }\n\n    mockControl.replay();\n  }\n\n","sourceOld":"  public MockInitialContextFactory() {\n    mockControl = EasyMock.createStrictControl();\n    context = mockControl.createMock(javax.naming.Context.class);\n\n    try {\n      EasyMock.expect(context.lookup((String) EasyMock.anyObject())).andAnswer(\n          new IAnswer<Object>() {\n            public Object answer() throws Throwable {\n              return objects.get(EasyMock.getCurrentArguments()[0]);\n            }\n          }).anyTimes();\n\n    } catch (NamingException e) {\n      throw new RuntimeException(e);\n    }\n\n    mockControl.replay();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f7a0f6f6b8a4cc8b82386e74e45ab3c097f2453e","date":1487462440,"type":3,"author":"Cao Manh Dat","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/MockInitialContextFactory#MockInitialContextFactory().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/MockInitialContextFactory#MockInitialContextFactory().mjava","sourceNew":"  public MockInitialContextFactory() {\n    context = mock(javax.naming.Context.class);\n\n    try {\n      when(context.lookup(anyString())).thenAnswer(invocation -> objects.get(invocation.getArgument(0)));\n\n    } catch (NamingException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","sourceOld":"  public MockInitialContextFactory() {\n    mockControl = EasyMock.createStrictControl();\n    context = mockControl.createMock(javax.naming.Context.class);\n\n    try {\n      EasyMock.expect(context.lookup((String) EasyMock.anyObject())).andAnswer(\n          new IAnswer<Object>() {\n            @Override\n            public Object answer() throws Throwable {\n              return objects.get(EasyMock.getCurrentArguments()[0]);\n            }\n          }).anyTimes();\n\n    } catch (NamingException e) {\n      throw new RuntimeException(e);\n    }\n\n    mockControl.replay();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b","date":1598712724,"type":4,"author":"Alexandre Rafalovitch","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/MockInitialContextFactory#MockInitialContextFactory().mjava","sourceNew":null,"sourceOld":"  public MockInitialContextFactory() {\n    context = mock(javax.naming.Context.class);\n\n    try {\n      when(context.lookup(anyString())).thenAnswer(invocation -> objects.get(invocation.getArgument(0)));\n\n    } catch (NamingException e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["c26f00b574427b55127e869b935845554afde1fa","7530de27b87b961b51f01bd1299b7004d46e8823"],"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["f7a0f6f6b8a4cc8b82386e74e45ab3c097f2453e"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f7a0f6f6b8a4cc8b82386e74e45ab3c097f2453e":["7530de27b87b961b51f01bd1299b7004d46e8823"],"7530de27b87b961b51f01bd1299b7004d46e8823":["c26f00b574427b55127e869b935845554afde1fa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","7530de27b87b961b51f01bd1299b7004d46e8823"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","c26f00b574427b55127e869b935845554afde1fa"],"f7a0f6f6b8a4cc8b82386e74e45ab3c097f2453e":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b"],"7530de27b87b961b51f01bd1299b7004d46e8823":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","f7a0f6f6b8a4cc8b82386e74e45ab3c097f2453e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}