{"path":"lucene/src/test/org/apache/lucene/index/TestIndexFileDeleter#copyFile(Directory,String,String).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexFileDeleter#copyFile(Directory,String,String).mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexFileDeleter#copyFile(Directory,String,String).mjava","sourceNew":"  public void copyFile(Directory dir, String src, String dest) throws IOException {\n    IndexInput in = dir.openInput(src);\n    IndexOutput out = dir.createOutput(dest);\n    byte[] b = new byte[1024];\n    long remainder = in.length();\n    while(remainder > 0) {\n      int len = (int) Math.min(b.length, remainder);\n      in.readBytes(b, 0, len);\n      out.writeBytes(b, len);\n      remainder -= len;\n    }\n    in.close();\n    out.close();\n  }\n\n","sourceOld":"  public void copyFile(Directory dir, String src, String dest) throws IOException {\n    IndexInput in = dir.openInput(src);\n    IndexOutput out = dir.createOutput(dest);\n    byte[] b = new byte[1024];\n    long remainder = in.length();\n    while(remainder > 0) {\n      int len = (int) Math.min(b.length, remainder);\n      in.readBytes(b, 0, len);\n      out.writeBytes(b, len);\n      remainder -= len;\n    }\n    in.close();\n    out.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"639c36565ce03aed5b0fce7c9e4448e53a1f7efd","date":1308580104,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexFileDeleter#copyFile(Directory,String,String).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexFileDeleter#copyFile(Directory,String,String).mjava","sourceNew":"  public void copyFile(Directory dir, String src, String dest) throws IOException {\n    IndexInput in = dir.openInput(src, IOContext.DEFAULT);\n    IndexOutput out = dir.createOutput(dest, IOContext.DEFAULT);\n    byte[] b = new byte[1024];\n    long remainder = in.length();\n    while(remainder > 0) {\n      int len = (int) Math.min(b.length, remainder);\n      in.readBytes(b, 0, len);\n      out.writeBytes(b, len);\n      remainder -= len;\n    }\n    in.close();\n    out.close();\n  }\n\n","sourceOld":"  public void copyFile(Directory dir, String src, String dest) throws IOException {\n    IndexInput in = dir.openInput(src);\n    IndexOutput out = dir.createOutput(dest);\n    byte[] b = new byte[1024];\n    long remainder = in.length();\n    while(remainder > 0) {\n      int len = (int) Math.min(b.length, remainder);\n      in.readBytes(b, 0, len);\n      out.writeBytes(b, len);\n      remainder -= len;\n    }\n    in.close();\n    out.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b6f9be74ca7baaef11857ad002cad40419979516","date":1309449808,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexFileDeleter#copyFile(Directory,String,String).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexFileDeleter#copyFile(Directory,String,String).mjava","sourceNew":"  public void copyFile(Directory dir, String src, String dest) throws IOException {\n    IndexInput in = dir.openInput(src, newIOContext(random));\n    IndexOutput out = dir.createOutput(dest, newIOContext(random));\n    byte[] b = new byte[1024];\n    long remainder = in.length();\n    while(remainder > 0) {\n      int len = (int) Math.min(b.length, remainder);\n      in.readBytes(b, 0, len);\n      out.writeBytes(b, len);\n      remainder -= len;\n    }\n    in.close();\n    out.close();\n  }\n\n","sourceOld":"  public void copyFile(Directory dir, String src, String dest) throws IOException {\n    IndexInput in = dir.openInput(src, IOContext.DEFAULT);\n    IndexOutput out = dir.createOutput(dest, IOContext.DEFAULT);\n    byte[] b = new byte[1024];\n    long remainder = in.length();\n    while(remainder > 0) {\n      int len = (int) Math.min(b.length, remainder);\n      in.readBytes(b, 0, len);\n      out.writeBytes(b, len);\n      remainder -= len;\n    }\n    in.close();\n    out.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ddc4c914be86e34b54f70023f45a60fa7f04e929","date":1310115160,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexFileDeleter#copyFile(Directory,String,String).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexFileDeleter#copyFile(Directory,String,String).mjava","sourceNew":"  public void copyFile(Directory dir, String src, String dest) throws IOException {\n    IndexInput in = dir.openInput(src, newIOContext(random));\n    IndexOutput out = dir.createOutput(dest, newIOContext(random));\n    byte[] b = new byte[1024];\n    long remainder = in.length();\n    while(remainder > 0) {\n      int len = (int) Math.min(b.length, remainder);\n      in.readBytes(b, 0, len);\n      out.writeBytes(b, len);\n      remainder -= len;\n    }\n    in.close();\n    out.close();\n  }\n\n","sourceOld":"  public void copyFile(Directory dir, String src, String dest) throws IOException {\n    IndexInput in = dir.openInput(src);\n    IndexOutput out = dir.createOutput(dest);\n    byte[] b = new byte[1024];\n    long remainder = in.length();\n    while(remainder > 0) {\n      int len = (int) Math.min(b.length, remainder);\n      in.readBytes(b, 0, len);\n      out.writeBytes(b, len);\n      remainder -= len;\n    }\n    in.close();\n    out.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5d004d0e0b3f65bb40da76d476d659d7888270e8","date":1310158940,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexFileDeleter#copyFile(Directory,String,String).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexFileDeleter#copyFile(Directory,String,String).mjava","sourceNew":"  public void copyFile(Directory dir, String src, String dest) throws IOException {\n    IndexInput in = dir.openInput(src, newIOContext(random));\n    IndexOutput out = dir.createOutput(dest, newIOContext(random));\n    byte[] b = new byte[1024];\n    long remainder = in.length();\n    while(remainder > 0) {\n      int len = (int) Math.min(b.length, remainder);\n      in.readBytes(b, 0, len);\n      out.writeBytes(b, len);\n      remainder -= len;\n    }\n    in.close();\n    out.close();\n  }\n\n","sourceOld":"  public void copyFile(Directory dir, String src, String dest) throws IOException {\n    IndexInput in = dir.openInput(src);\n    IndexOutput out = dir.createOutput(dest);\n    byte[] b = new byte[1024];\n    long remainder = in.length();\n    while(remainder > 0) {\n      int len = (int) Math.min(b.length, remainder);\n      in.readBytes(b, 0, len);\n      out.writeBytes(b, len);\n      remainder -= len;\n    }\n    in.close();\n    out.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexFileDeleter#copyFile(Directory,String,String).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexFileDeleter#copyFile(Directory,String,String).mjava","sourceNew":"  public void copyFile(Directory dir, String src, String dest) throws IOException {\n    IndexInput in = dir.openInput(src, newIOContext(random));\n    IndexOutput out = dir.createOutput(dest, newIOContext(random));\n    byte[] b = new byte[1024];\n    long remainder = in.length();\n    while(remainder > 0) {\n      int len = (int) Math.min(b.length, remainder);\n      in.readBytes(b, 0, len);\n      out.writeBytes(b, len);\n      remainder -= len;\n    }\n    in.close();\n    out.close();\n  }\n\n","sourceOld":"  public void copyFile(Directory dir, String src, String dest) throws IOException {\n    IndexInput in = dir.openInput(src, newIOContext(random));\n    IndexOutput out = dir.createOutput(dest, newIOContext(random));\n    byte[] b = new byte[1024];\n    long remainder = in.length();\n    while(remainder > 0) {\n      int len = (int) Math.min(b.length, remainder);\n      in.readBytes(b, 0, len);\n      out.writeBytes(b, len);\n      remainder -= len;\n    }\n    in.close();\n    out.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["ddc4c914be86e34b54f70023f45a60fa7f04e929"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b6f9be74ca7baaef11857ad002cad40419979516":["639c36565ce03aed5b0fce7c9e4448e53a1f7efd"],"639c36565ce03aed5b0fce7c9e4448e53a1f7efd":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"5d004d0e0b3f65bb40da76d476d659d7888270e8":["9454a6510e2db155fb01faa5c049b06ece95fab9","ddc4c914be86e34b54f70023f45a60fa7f04e929"],"ddc4c914be86e34b54f70023f45a60fa7f04e929":["9454a6510e2db155fb01faa5c049b06ece95fab9","b6f9be74ca7baaef11857ad002cad40419979516"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"b6f9be74ca7baaef11857ad002cad40419979516":["ddc4c914be86e34b54f70023f45a60fa7f04e929"],"639c36565ce03aed5b0fce7c9e4448e53a1f7efd":["b6f9be74ca7baaef11857ad002cad40419979516"],"5d004d0e0b3f65bb40da76d476d659d7888270e8":[],"ddc4c914be86e34b54f70023f45a60fa7f04e929":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","5d004d0e0b3f65bb40da76d476d659d7888270e8"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["639c36565ce03aed5b0fce7c9e4448e53a1f7efd","5d004d0e0b3f65bb40da76d476d659d7888270e8","ddc4c914be86e34b54f70023f45a60fa7f04e929"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5d004d0e0b3f65bb40da76d476d659d7888270e8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}