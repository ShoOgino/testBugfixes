{"path":"src/test/org/apache/lucene/index/TestCompoundFile#setUp_2().mjava","commits":[{"id":"8fb95844e4ba5160067c64c5eb1cd8a09f7a94f1","date":1064527311,"type":0,"author":"Dmitry Serebrennikov","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestCompoundFile#setUp_2().mjava","pathOld":"/dev/null","sourceNew":"    /** Setup a larger compound file with a number of components, each of \n     *  which is a sequential file (so that we can easily tell that we are\n     *  reading in the right byte). The methods sets up 20 files - f0 to f19, \n     *  the size of each file is 1000 bytes.\n     */\n    private void setUp_2() throws IOException {\n        CompoundFileWriter cw = new CompoundFileWriter(dir, \"f.comp\");\n        for (int i=0; i<20; i++) {\n            createSequenceFile(dir, \"f\" + i, (byte) 0, 2000);\n            cw.addFile(\"f\" + i);\n        }\n        cw.close();\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1acbe60842541f8c38e2d60b03591478c9f91546","date":1066055498,"type":3,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestCompoundFile#setUp_2().mjava","pathOld":"src/test/org/apache/lucene/index/TestCompoundFile#setUp_2().mjava","sourceNew":"    /** Setup a larger compound file with a number of components, each of\n     *  which is a sequential file (so that we can easily tell that we are\n     *  reading in the right byte). The methods sets up 20 files - f0 to f19,\n     *  the size of each file is 1000 bytes.\n     */\n    private void setUp_2() throws IOException {\n        CompoundFileWriter cw = new CompoundFileWriter(dir, \"f.comp\");\n        for (int i=0; i<20; i++) {\n            createSequenceFile(dir, \"f\" + i, (byte) 0, 2000);\n            cw.addFile(\"f\" + i);\n        }\n        cw.close();\n    }\n\n","sourceOld":"    /** Setup a larger compound file with a number of components, each of \n     *  which is a sequential file (so that we can easily tell that we are\n     *  reading in the right byte). The methods sets up 20 files - f0 to f19, \n     *  the size of each file is 1000 bytes.\n     */\n    private void setUp_2() throws IOException {\n        CompoundFileWriter cw = new CompoundFileWriter(dir, \"f.comp\");\n        for (int i=0; i<20; i++) {\n            createSequenceFile(dir, \"f\" + i, (byte) 0, 2000);\n            cw.addFile(\"f\" + i);\n        }\n        cw.close();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestCompoundFile#setUp_2().mjava","pathOld":"src/test/org/apache/lucene/index/TestCompoundFile#setUp_2().mjava","sourceNew":"    /** Setup a larger compound file with a number of components, each of\n     *  which is a sequential file (so that we can easily tell that we are\n     *  reading in the right byte). The methods sets up 20 files - f0 to f19,\n     *  the size of each file is 1000 bytes.\n     */\n    private void setUp_2() throws IOException {\n        CompoundFileWriter cw = new CompoundFileWriter(dir, \"f.comp\");\n        for (int i=0; i<20; i++) {\n            createSequenceFile(dir, \"f\" + i, (byte) 0, 2000);\n            cw.addFile(\"f\" + i);\n        }\n        cw.close();\n    }\n\n","sourceOld":"    /** Setup a larger compound file with a number of components, each of\n     *  which is a sequential file (so that we can easily tell that we are\n     *  reading in the right byte). The methods sets up 20 files - f0 to f19,\n     *  the size of each file is 1000 bytes.\n     */\n    private void setUp_2() throws IOException {\n        CompoundFileWriter cw = new CompoundFileWriter(dir, \"f.comp\");\n        for (int i=0; i<20; i++) {\n            createSequenceFile(dir, \"f\" + i, (byte) 0, 2000);\n            cw.addFile(\"f\" + i);\n        }\n        cw.close();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1acbe60842541f8c38e2d60b03591478c9f91546":["8fb95844e4ba5160067c64c5eb1cd8a09f7a94f1"],"8fb95844e4ba5160067c64c5eb1cd8a09f7a94f1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["1acbe60842541f8c38e2d60b03591478c9f91546"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8fb95844e4ba5160067c64c5eb1cd8a09f7a94f1"],"1acbe60842541f8c38e2d60b03591478c9f91546":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"8fb95844e4ba5160067c64c5eb1cd8a09f7a94f1":["1acbe60842541f8c38e2d60b03591478c9f91546"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}