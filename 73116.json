{"path":"solr/core/src/test/org/apache/solr/cloud/autoscaling/sim/TestSimTriggerIntegration.TestEventQueueAction#process(TriggerEvent,ActionContext).mjava","commits":[{"id":"a6a5c1c40529f15b445e6720dfde1967e139bff1","date":1535375643,"type":1,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/autoscaling/sim/TestSimTriggerIntegration.TestEventQueueAction#process(TriggerEvent,ActionContext).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/autoscaling/sim/TestTriggerIntegration.TestEventQueueAction#process(TriggerEvent,ActionContext).mjava","sourceNew":"    @Override\n    public void process(TriggerEvent event, ActionContext actionContext) {\n      log.info(\"-- event: \" + event);\n      events.add(event);\n      getActionStarted().countDown();\n      try {\n        Thread.sleep(eventQueueActionWait);\n        triggerFired.compareAndSet(false, true);\n        getActionCompleted().countDown();\n      } catch (InterruptedException e) {\n        getActionInterrupted().countDown();\n        return;\n      }\n    }\n\n","sourceOld":"    @Override\n    public void process(TriggerEvent event, ActionContext actionContext) {\n      log.info(\"-- event: \" + event);\n      events.add(event);\n      getActionStarted().countDown();\n      try {\n        Thread.sleep(eventQueueActionWait);\n        triggerFired.compareAndSet(false, true);\n        getActionCompleted().countDown();\n      } catch (InterruptedException e) {\n        getActionInterrupted().countDown();\n        return;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba6afbcc1d4884e6e28d624a8a9bc666c6a42445","date":1551718463,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/autoscaling/sim/TestSimTriggerIntegration.TestEventQueueAction#process(TriggerEvent,ActionContext).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/autoscaling/sim/TestSimTriggerIntegration.TestEventQueueAction#process(TriggerEvent,ActionContext).mjava","sourceNew":"    @Override\n    public void process(TriggerEvent event, ActionContext actionContext) {\n      // make a local copy of the latch so we're using it consistently even as test thread changes tings\n      final CountDownLatch stallLatch = stall;\n      log.info(\"processing: stall={} event={} \", stallLatch, event);\n      events.add(event);\n      getActionStarted().countDown();\n      try {\n        if (stallLatch.await(60, TimeUnit.SECONDS)) {\n          log.info(\"Firing trigger event after await()ing 'stall' countdown\");\n          triggerFired.set(true);\n        } else {\n          log.error(\"Timed out await()ing 'stall' countdown\");\n        }\n        getActionCompleted().countDown();\n      } catch (InterruptedException e) {\n        log.info(\"Interrupted\");\n        getActionInterrupted().countDown();\n      }\n    }\n\n","sourceOld":"    @Override\n    public void process(TriggerEvent event, ActionContext actionContext) {\n      log.info(\"-- event: \" + event);\n      events.add(event);\n      getActionStarted().countDown();\n      try {\n        Thread.sleep(eventQueueActionWait);\n        triggerFired.compareAndSet(false, true);\n        getActionCompleted().countDown();\n      } catch (InterruptedException e) {\n        getActionInterrupted().countDown();\n        return;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f504512a03d978990cbff30db0522b354e846db","date":1595247421,"type":4,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/cloud/autoscaling/sim/TestSimTriggerIntegration.TestEventQueueAction#process(TriggerEvent,ActionContext).mjava","sourceNew":null,"sourceOld":"    @Override\n    public void process(TriggerEvent event, ActionContext actionContext) {\n      // make a local copy of the latch so we're using it consistently even as test thread changes tings\n      final CountDownLatch stallLatch = stall;\n      log.info(\"processing: stall={} event={} \", stallLatch, event);\n      events.add(event);\n      getActionStarted().countDown();\n      try {\n        if (stallLatch.await(60, TimeUnit.SECONDS)) {\n          log.info(\"Firing trigger event after await()ing 'stall' countdown\");\n          triggerFired.set(true);\n        } else {\n          log.error(\"Timed out await()ing 'stall' countdown\");\n        }\n        getActionCompleted().countDown();\n      } catch (InterruptedException e) {\n        log.info(\"Interrupted\");\n        getActionInterrupted().countDown();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a6a5c1c40529f15b445e6720dfde1967e139bff1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ba6afbcc1d4884e6e28d624a8a9bc666c6a42445":["a6a5c1c40529f15b445e6720dfde1967e139bff1"],"3f504512a03d978990cbff30db0522b354e846db":["ba6afbcc1d4884e6e28d624a8a9bc666c6a42445"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3f504512a03d978990cbff30db0522b354e846db"]},"commit2Childs":{"a6a5c1c40529f15b445e6720dfde1967e139bff1":["ba6afbcc1d4884e6e28d624a8a9bc666c6a42445"],"ba6afbcc1d4884e6e28d624a8a9bc666c6a42445":["3f504512a03d978990cbff30db0522b354e846db"],"3f504512a03d978990cbff30db0522b354e846db":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a6a5c1c40529f15b445e6720dfde1967e139bff1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}