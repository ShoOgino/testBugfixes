{"path":"lucene/backwards/src/java/org/apache/lucene/index/SegmentReader#doClose().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/java/org/apache/lucene/index/SegmentReader#doClose().mjava","pathOld":"backwards/src/java/org/apache/lucene/index/SegmentReader#doClose().mjava","sourceNew":"  @Override\n  protected void doClose() throws IOException {\n    termVectorsLocal.close();\n    fieldsReaderLocal.close();\n    \n    if (deletedDocs != null) {\n      deletedDocsRef.decRef();\n      // null so if an app hangs on to us we still free most ram\n      deletedDocs = null;\n    }\n\n    for (final Norm norm : norms.values()) {\n      norm.decRef();\n    }\n    if (core != null) {\n      core.decRef();\n    }\n  }\n\n","sourceOld":"  @Override\n  protected void doClose() throws IOException {\n    termVectorsLocal.close();\n    fieldsReaderLocal.close();\n    \n    if (deletedDocs != null) {\n      deletedDocsRef.decRef();\n      // null so if an app hangs on to us we still free most ram\n      deletedDocs = null;\n    }\n\n    for (final Norm norm : norms.values()) {\n      norm.decRef();\n    }\n    if (core != null) {\n      core.decRef();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6","date":1272983566,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/backwards/src/java/org/apache/lucene/index/SegmentReader#doClose().mjava","sourceNew":null,"sourceOld":"  @Override\n  protected void doClose() throws IOException {\n    termVectorsLocal.close();\n    fieldsReaderLocal.close();\n    \n    if (deletedDocs != null) {\n      deletedDocsRef.decRef();\n      // null so if an app hangs on to us we still free most ram\n      deletedDocs = null;\n    }\n\n    for (final Norm norm : norms.values()) {\n      norm.decRef();\n    }\n    if (core != null) {\n      core.decRef();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}