{"path":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40TermVectorsWriter#finishDocument().mjava","commits":[{"id":"fc7a7bb1aa79cf53564793bb5ffa270250c679da","date":1357817084,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40TermVectorsWriter#finishDocument().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void finishDocument() throws IOException {\n    assert fieldCount == numVectorFields;\n    for (int i = 1; i < fieldCount; i++) {\n      tvd.writeVLong(fps[i] - fps[i-1]);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4e6354dd7c71fe122926fc53d7d29f715b1283db","date":1357915185,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40TermVectorsWriter#finishDocument().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void finishDocument() throws IOException {\n    assert fieldCount == numVectorFields;\n    for (int i = 1; i < fieldCount; i++) {\n      tvd.writeVLong(fps[i] - fps[i-1]);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"22a2e66dfda83847e80095b8693c660742ab3e9c","date":1408628796,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/lucene40/Lucene40TermVectorsWriter#finishDocument().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40TermVectorsWriter#finishDocument().mjava","sourceNew":"  @Override\n  public void finishDocument() throws IOException {\n    assert fieldCount == numVectorFields;\n    for (int i = 1; i < fieldCount; i++) {\n      tvd.writeVLong(fps[i] - fps[i-1]);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void finishDocument() throws IOException {\n    assert fieldCount == numVectorFields;\n    for (int i = 1; i < fieldCount; i++) {\n      tvd.writeVLong(fps[i] - fps[i-1]);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"fc7a7bb1aa79cf53564793bb5ffa270250c679da":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"22a2e66dfda83847e80095b8693c660742ab3e9c":["fc7a7bb1aa79cf53564793bb5ffa270250c679da"],"4e6354dd7c71fe122926fc53d7d29f715b1283db":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","fc7a7bb1aa79cf53564793bb5ffa270250c679da"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["22a2e66dfda83847e80095b8693c660742ab3e9c"]},"commit2Childs":{"fc7a7bb1aa79cf53564793bb5ffa270250c679da":["22a2e66dfda83847e80095b8693c660742ab3e9c","4e6354dd7c71fe122926fc53d7d29f715b1283db"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["fc7a7bb1aa79cf53564793bb5ffa270250c679da","4e6354dd7c71fe122926fc53d7d29f715b1283db"],"22a2e66dfda83847e80095b8693c660742ab3e9c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4e6354dd7c71fe122926fc53d7d29f715b1283db":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4e6354dd7c71fe122926fc53d7d29f715b1283db","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}