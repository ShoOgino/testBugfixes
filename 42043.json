{"path":"src/java/org/apache/solr/analysis/StopFilterFactory#inform(ResourceLoader).mjava","commits":[{"id":"fcf52a7da226d8d3756cc8bf9f3ae1f39952b014","date":1195912306,"type":1,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/analysis/StopFilterFactory#inform(ResourceLoader).mjava","pathOld":"src/java/org/apache/solr/analysis/StopFilterFactory#init(SolrConfig,Map[String,String]).mjava","sourceNew":"  public void inform(ResourceLoader loader) {\n    String stopWordFile = args.get(\"words\");\n    ignoreCase = getBoolean(\"ignoreCase\",false);\n\n    if (stopWordFile != null) {\n      try {\n        List<String> wlist = loader.getLines(stopWordFile);\n        stopWords = StopFilter.makeStopSet((String[])wlist.toArray(new String[0]), ignoreCase);\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void init(SolrConfig solrConfig, Map<String, String> args) {\n    super.init(solrConfig, args);\n    String stopWordFile = args.get(\"words\");\n    ignoreCase = getBoolean(\"ignoreCase\",false);\n\n    if (stopWordFile != null) {\n      try {\n        List<String> wlist = solrConfig.getLines(stopWordFile);\n        stopWords = StopFilter.makeStopSet((String[])wlist.toArray(new String[0]), ignoreCase);\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ce67c309ce69bfeb9b0e8ad4655ae138efaad03a","date":1201148073,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/analysis/StopFilterFactory#inform(ResourceLoader).mjava","pathOld":"src/java/org/apache/solr/analysis/StopFilterFactory#inform(ResourceLoader).mjava","sourceNew":"  public void inform(ResourceLoader loader) {\n    String stopWordFile = args.get(\"words\");\n    ignoreCase = getBoolean(\"ignoreCase\",false);\n\n    if (stopWordFile != null) {\n      try {\n        List<String> wlist = loader.getLines(stopWordFile);\n        stopWords = StopFilter.makeStopSet((String[])wlist.toArray(new String[0]), ignoreCase);\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    } else {\n      stopWords = StopFilter.makeStopSet(StopAnalyzer.ENGLISH_STOP_WORDS, ignoreCase);\n    }\n  }\n\n","sourceOld":"  public void inform(ResourceLoader loader) {\n    String stopWordFile = args.get(\"words\");\n    ignoreCase = getBoolean(\"ignoreCase\",false);\n\n    if (stopWordFile != null) {\n      try {\n        List<String> wlist = loader.getLines(stopWordFile);\n        stopWords = StopFilter.makeStopSet((String[])wlist.toArray(new String[0]), ignoreCase);\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cb17c560cd5066da4385788dbbc1a4e1c0b22ee6","date":1208297958,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"src/java/org/apache/solr/analysis/StopFilterFactory#inform(ResourceLoader).mjava","pathOld":"src/java/org/apache/solr/analysis/StopFilterFactory#inform(ResourceLoader).mjava","sourceNew":"  public void inform(ResourceLoader loader) {\n    String stopWordFile = args.get(\"words\");\n    ignoreCase = getBoolean(\"ignoreCase\",false);\n    enablePositionIncrements = getBoolean(\"enablePositionIncrements\",false);\n\n    if (stopWordFile != null) {\n      try {\n        List<String> wlist = loader.getLines(stopWordFile);\n        stopWords = StopFilter.makeStopSet((String[])wlist.toArray(new String[0]), ignoreCase);\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    } else {\n      stopWords = StopFilter.makeStopSet(StopAnalyzer.ENGLISH_STOP_WORDS, ignoreCase);\n    }\n  }\n\n","sourceOld":"  public void inform(ResourceLoader loader) {\n    String stopWordFile = args.get(\"words\");\n    ignoreCase = getBoolean(\"ignoreCase\",false);\n\n    if (stopWordFile != null) {\n      try {\n        List<String> wlist = loader.getLines(stopWordFile);\n        stopWords = StopFilter.makeStopSet((String[])wlist.toArray(new String[0]), ignoreCase);\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    } else {\n      stopWords = StopFilter.makeStopSet(StopAnalyzer.ENGLISH_STOP_WORDS, ignoreCase);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"460ea70a086b1e40166cc236947edc7e52a3ddf9","date":1217405516,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"src/java/org/apache/solr/analysis/StopFilterFactory#inform(ResourceLoader).mjava","pathOld":"src/java/org/apache/solr/analysis/StopFilterFactory#inform(ResourceLoader).mjava","sourceNew":"  public void inform(ResourceLoader loader) {\n    String stopWordFiles = args.get(\"words\");\n    ignoreCase = getBoolean(\"ignoreCase\",false);\n    enablePositionIncrements = getBoolean(\"enablePositionIncrements\",false);\n\n    if (stopWordFiles != null) {\n      if (stopWords == null)\n        stopWords = new HashSet<String>();\n      try {\n        java.io.File keepWordsFile = new File(stopWordFiles);\n        if (keepWordsFile.exists()) {\n          List<String> wlist = loader.getLines(stopWordFiles);\n          stopWords = StopFilter.makeStopSet((String[])wlist.toArray(new String[0]), ignoreCase);\n        } else  {\n          List<String> files = StrUtils.splitFileNames(stopWordFiles);\n          for (String file : files) {\n            List<String> wlist = loader.getLines(file.trim());\n            stopWords.addAll(StopFilter.makeStopSet((String[])wlist.toArray(new String[0]), ignoreCase));\n          }\n        }\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    } else {\n      stopWords = StopFilter.makeStopSet(StopAnalyzer.ENGLISH_STOP_WORDS, ignoreCase);\n    }\n  }\n\n","sourceOld":"  public void inform(ResourceLoader loader) {\n    String stopWordFile = args.get(\"words\");\n    ignoreCase = getBoolean(\"ignoreCase\",false);\n    enablePositionIncrements = getBoolean(\"enablePositionIncrements\",false);\n\n    if (stopWordFile != null) {\n      try {\n        List<String> wlist = loader.getLines(stopWordFile);\n        stopWords = StopFilter.makeStopSet((String[])wlist.toArray(new String[0]), ignoreCase);\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    } else {\n      stopWords = StopFilter.makeStopSet(StopAnalyzer.ENGLISH_STOP_WORDS, ignoreCase);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fb04b610ed800cee9bf5697f6462cf645d4f4866","date":1238616464,"type":3,"author":"Grant Ingersoll","isMerge":false,"pathNew":"src/java/org/apache/solr/analysis/StopFilterFactory#inform(ResourceLoader).mjava","pathOld":"src/java/org/apache/solr/analysis/StopFilterFactory#inform(ResourceLoader).mjava","sourceNew":"  public void inform(ResourceLoader loader) {\n    String stopWordFiles = args.get(\"words\");\n    ignoreCase = getBoolean(\"ignoreCase\",false);\n    enablePositionIncrements = getBoolean(\"enablePositionIncrements\",false);\n\n    if (stopWordFiles != null) {\n      try {\n        List<String> files = StrUtils.splitFileNames(stopWordFiles);\n          if (stopWords == null && files.size() > 0){\n            //default stopwords list has 35 or so words, but maybe don't make it that big to start\n            stopWords = new CharArraySet(files.size() * 10, ignoreCase);\n          }\n          for (String file : files) {\n            List<String> wlist = loader.getLines(file.trim());\n            //TODO: once StopFilter.makeStopSet(List) method is available, switch to using that so we can avoid a toArray() call\n            stopWords.addAll(StopFilter.makeStopSet((String[])wlist.toArray(new String[0]), ignoreCase));\n          }\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    } else {\n      stopWords = (CharArraySet) StopFilter.makeStopSet(StopAnalyzer.ENGLISH_STOP_WORDS, ignoreCase);\n    }\n  }\n\n","sourceOld":"  public void inform(ResourceLoader loader) {\n    String stopWordFiles = args.get(\"words\");\n    ignoreCase = getBoolean(\"ignoreCase\",false);\n    enablePositionIncrements = getBoolean(\"enablePositionIncrements\",false);\n\n    if (stopWordFiles != null) {\n      if (stopWords == null)\n        stopWords = new HashSet<String>();\n      try {\n        java.io.File keepWordsFile = new File(stopWordFiles);\n        if (keepWordsFile.exists()) {\n          List<String> wlist = loader.getLines(stopWordFiles);\n          stopWords = StopFilter.makeStopSet((String[])wlist.toArray(new String[0]), ignoreCase);\n        } else  {\n          List<String> files = StrUtils.splitFileNames(stopWordFiles);\n          for (String file : files) {\n            List<String> wlist = loader.getLines(file.trim());\n            stopWords.addAll(StopFilter.makeStopSet((String[])wlist.toArray(new String[0]), ignoreCase));\n          }\n        }\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    } else {\n      stopWords = StopFilter.makeStopSet(StopAnalyzer.ENGLISH_STOP_WORDS, ignoreCase);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ef28ac95f5f85bbf872801277448c0924b0a6827","date":1268600312,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"src/java/org/apache/solr/analysis/StopFilterFactory#inform(ResourceLoader).mjava","pathOld":"src/java/org/apache/solr/analysis/StopFilterFactory#inform(ResourceLoader).mjava","sourceNew":"  public void inform(ResourceLoader loader) {\n    String stopWordFiles = args.get(\"words\");\n    ignoreCase = getBoolean(\"ignoreCase\",false);\n    enablePositionIncrements = getBoolean(\"enablePositionIncrements\",false);\n\n    if (stopWordFiles != null) {\n      try {\n        List<String> files = StrUtils.splitFileNames(stopWordFiles);\n          if (stopWords == null && files.size() > 0){\n            //default stopwords list has 35 or so words, but maybe don't make it that big to start\n            stopWords = new CharArraySet(files.size() * 10, ignoreCase);\n          }\n          for (String file : files) {\n            List<String> wlist = loader.getLines(file.trim());\n            //TODO: once StopFilter.makeStopSet(List) method is available, switch to using that so we can avoid a toArray() call\n            stopWords.addAll(StopFilter.makeStopSet((String[])wlist.toArray(new String[0]), ignoreCase));\n          }\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    } else {\n      stopWords = (CharArraySet) StopAnalyzer.ENGLISH_STOP_WORDS_SET;\n    }\n  }\n\n","sourceOld":"  public void inform(ResourceLoader loader) {\n    String stopWordFiles = args.get(\"words\");\n    ignoreCase = getBoolean(\"ignoreCase\",false);\n    enablePositionIncrements = getBoolean(\"enablePositionIncrements\",false);\n\n    if (stopWordFiles != null) {\n      try {\n        List<String> files = StrUtils.splitFileNames(stopWordFiles);\n          if (stopWords == null && files.size() > 0){\n            //default stopwords list has 35 or so words, but maybe don't make it that big to start\n            stopWords = new CharArraySet(files.size() * 10, ignoreCase);\n          }\n          for (String file : files) {\n            List<String> wlist = loader.getLines(file.trim());\n            //TODO: once StopFilter.makeStopSet(List) method is available, switch to using that so we can avoid a toArray() call\n            stopWords.addAll(StopFilter.makeStopSet((String[])wlist.toArray(new String[0]), ignoreCase));\n          }\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    } else {\n      stopWords = (CharArraySet) StopFilter.makeStopSet(StopAnalyzer.ENGLISH_STOP_WORDS, ignoreCase);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"692b1470ea5d9211741619cb5a1e1c94b3f8ddf9","date":1268601830,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"src/java/org/apache/solr/analysis/StopFilterFactory#inform(ResourceLoader).mjava","pathOld":"src/java/org/apache/solr/analysis/StopFilterFactory#inform(ResourceLoader).mjava","sourceNew":"  public void inform(ResourceLoader loader) {\n    String stopWordFiles = args.get(\"words\");\n    ignoreCase = getBoolean(\"ignoreCase\",false);\n    enablePositionIncrements = getBoolean(\"enablePositionIncrements\",false);\n\n    if (stopWordFiles != null) {\n      try {\n        List<String> files = StrUtils.splitFileNames(stopWordFiles);\n          if (stopWords == null && files.size() > 0){\n            //default stopwords list has 35 or so words, but maybe don't make it that big to start\n            stopWords = new CharArraySet(files.size() * 10, ignoreCase);\n          }\n          for (String file : files) {\n            List<String> wlist = loader.getLines(file.trim());\n            //TODO: once StopFilter.makeStopSet(List) method is available, switch to using that so we can avoid a toArray() call\n            stopWords.addAll(StopFilter.makeStopSet((String[])wlist.toArray(new String[0]), ignoreCase));\n          }\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    } else {\n      stopWords = new CharArraySet(StopAnalyzer.ENGLISH_STOP_WORDS_SET, ignoreCase);\n    }\n  }\n\n","sourceOld":"  public void inform(ResourceLoader loader) {\n    String stopWordFiles = args.get(\"words\");\n    ignoreCase = getBoolean(\"ignoreCase\",false);\n    enablePositionIncrements = getBoolean(\"enablePositionIncrements\",false);\n\n    if (stopWordFiles != null) {\n      try {\n        List<String> files = StrUtils.splitFileNames(stopWordFiles);\n          if (stopWords == null && files.size() > 0){\n            //default stopwords list has 35 or so words, but maybe don't make it that big to start\n            stopWords = new CharArraySet(files.size() * 10, ignoreCase);\n          }\n          for (String file : files) {\n            List<String> wlist = loader.getLines(file.trim());\n            //TODO: once StopFilter.makeStopSet(List) method is available, switch to using that so we can avoid a toArray() call\n            stopWords.addAll(StopFilter.makeStopSet((String[])wlist.toArray(new String[0]), ignoreCase));\n          }\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    } else {\n      stopWords = (CharArraySet) StopAnalyzer.ENGLISH_STOP_WORDS_SET;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bf0e17cfd70114fa265a0ac990861cc37685024e","date":1268618829,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/solr/analysis/StopFilterFactory#inform(ResourceLoader).mjava","pathOld":"src/java/org/apache/solr/analysis/StopFilterFactory#inform(ResourceLoader).mjava","sourceNew":"  public void inform(ResourceLoader loader) {\n    String stopWordFiles = args.get(\"words\");\n    ignoreCase = getBoolean(\"ignoreCase\",false);\n    enablePositionIncrements = getBoolean(\"enablePositionIncrements\",false);\n\n    if (stopWordFiles != null) {\n      try {\n        List<String> files = StrUtils.splitFileNames(stopWordFiles);\n          if (stopWords == null && files.size() > 0){\n            //default stopwords list has 35 or so words, but maybe don't make it that big to start\n            stopWords = new CharArraySet(files.size() * 10, ignoreCase);\n          }\n          for (String file : files) {\n            List<String> wlist = loader.getLines(file.trim());\n            stopWords.addAll(StopFilter.makeStopSet(wlist, ignoreCase));\n          }\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    } else {\n      stopWords = new CharArraySet(StopAnalyzer.ENGLISH_STOP_WORDS_SET, ignoreCase);\n    }\n  }\n\n","sourceOld":"  public void inform(ResourceLoader loader) {\n    String stopWordFiles = args.get(\"words\");\n    ignoreCase = getBoolean(\"ignoreCase\",false);\n    enablePositionIncrements = getBoolean(\"enablePositionIncrements\",false);\n\n    if (stopWordFiles != null) {\n      try {\n        List<String> files = StrUtils.splitFileNames(stopWordFiles);\n          if (stopWords == null && files.size() > 0){\n            //default stopwords list has 35 or so words, but maybe don't make it that big to start\n            stopWords = new CharArraySet(files.size() * 10, ignoreCase);\n          }\n          for (String file : files) {\n            List<String> wlist = loader.getLines(file.trim());\n            //TODO: once StopFilter.makeStopSet(List) method is available, switch to using that so we can avoid a toArray() call\n            stopWords.addAll(StopFilter.makeStopSet((String[])wlist.toArray(new String[0]), ignoreCase));\n          }\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    } else {\n      stopWords = new CharArraySet(StopAnalyzer.ENGLISH_STOP_WORDS_SET, ignoreCase);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/analysis/StopFilterFactory#inform(ResourceLoader).mjava","pathOld":"src/java/org/apache/solr/analysis/StopFilterFactory#inform(ResourceLoader).mjava","sourceNew":"  public void inform(ResourceLoader loader) {\n    String stopWordFiles = args.get(\"words\");\n    ignoreCase = getBoolean(\"ignoreCase\",false);\n    enablePositionIncrements = getBoolean(\"enablePositionIncrements\",false);\n\n    if (stopWordFiles != null) {\n      try {\n        List<String> files = StrUtils.splitFileNames(stopWordFiles);\n          if (stopWords == null && files.size() > 0){\n            //default stopwords list has 35 or so words, but maybe don't make it that big to start\n            stopWords = new CharArraySet(files.size() * 10, ignoreCase);\n          }\n          for (String file : files) {\n            List<String> wlist = loader.getLines(file.trim());\n            stopWords.addAll(StopFilter.makeStopSet(wlist, ignoreCase));\n          }\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    } else {\n      stopWords = new CharArraySet(StopAnalyzer.ENGLISH_STOP_WORDS_SET, ignoreCase);\n    }\n  }\n\n","sourceOld":"  public void inform(ResourceLoader loader) {\n    String stopWordFiles = args.get(\"words\");\n    ignoreCase = getBoolean(\"ignoreCase\",false);\n    enablePositionIncrements = getBoolean(\"enablePositionIncrements\",false);\n\n    if (stopWordFiles != null) {\n      try {\n        List<String> files = StrUtils.splitFileNames(stopWordFiles);\n          if (stopWords == null && files.size() > 0){\n            //default stopwords list has 35 or so words, but maybe don't make it that big to start\n            stopWords = new CharArraySet(files.size() * 10, ignoreCase);\n          }\n          for (String file : files) {\n            List<String> wlist = loader.getLines(file.trim());\n            stopWords.addAll(StopFilter.makeStopSet(wlist, ignoreCase));\n          }\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    } else {\n      stopWords = new CharArraySet(StopAnalyzer.ENGLISH_STOP_WORDS_SET, ignoreCase);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"692b1470ea5d9211741619cb5a1e1c94b3f8ddf9":["ef28ac95f5f85bbf872801277448c0924b0a6827"],"460ea70a086b1e40166cc236947edc7e52a3ddf9":["cb17c560cd5066da4385788dbbc1a4e1c0b22ee6"],"cb17c560cd5066da4385788dbbc1a4e1c0b22ee6":["ce67c309ce69bfeb9b0e8ad4655ae138efaad03a"],"fb04b610ed800cee9bf5697f6462cf645d4f4866":["460ea70a086b1e40166cc236947edc7e52a3ddf9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"bf0e17cfd70114fa265a0ac990861cc37685024e":["692b1470ea5d9211741619cb5a1e1c94b3f8ddf9"],"ef28ac95f5f85bbf872801277448c0924b0a6827":["fb04b610ed800cee9bf5697f6462cf645d4f4866"],"ad94625fb8d088209f46650c8097196fec67f00c":["bf0e17cfd70114fa265a0ac990861cc37685024e"],"fcf52a7da226d8d3756cc8bf9f3ae1f39952b014":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"ce67c309ce69bfeb9b0e8ad4655ae138efaad03a":["fcf52a7da226d8d3756cc8bf9f3ae1f39952b014"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"692b1470ea5d9211741619cb5a1e1c94b3f8ddf9":["bf0e17cfd70114fa265a0ac990861cc37685024e"],"460ea70a086b1e40166cc236947edc7e52a3ddf9":["fb04b610ed800cee9bf5697f6462cf645d4f4866"],"cb17c560cd5066da4385788dbbc1a4e1c0b22ee6":["460ea70a086b1e40166cc236947edc7e52a3ddf9"],"fb04b610ed800cee9bf5697f6462cf645d4f4866":["ef28ac95f5f85bbf872801277448c0924b0a6827"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["fcf52a7da226d8d3756cc8bf9f3ae1f39952b014"],"ef28ac95f5f85bbf872801277448c0924b0a6827":["692b1470ea5d9211741619cb5a1e1c94b3f8ddf9"],"bf0e17cfd70114fa265a0ac990861cc37685024e":["ad94625fb8d088209f46650c8097196fec67f00c"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"fcf52a7da226d8d3756cc8bf9f3ae1f39952b014":["ce67c309ce69bfeb9b0e8ad4655ae138efaad03a"],"ce67c309ce69bfeb9b0e8ad4655ae138efaad03a":["cb17c560cd5066da4385788dbbc1a4e1c0b22ee6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}