{"path":"contrib/surround/src/test/org/apache/lucene/queryParser/surround/query/BooleanQueryTst#doTest().mjava","commits":[{"id":"317dfa9adeff47074f27d16dc7550d7628d1a6ee","date":1132096702,"type":1,"author":"Daniel Naber","isMerge":false,"pathNew":"contrib/surround/src/test/org/apache/lucene/queryParser/surround/query/BooleanQueryTst#doTest().mjava","pathOld":"contrib/surround/src/test/org/apache/lucene/queryParser/surround/query/BooleanQueryTest#doTest().mjava","sourceNew":"  public void doTest() throws Exception {\n\n    if (verbose) {    \n        System.out.println(\"\");\n        System.out.println(\"Query: \" + queryText);\n    }\n    \n    SrndQuery lq = QueryParser.parse(queryText);\n    \n    /* if (verbose) System.out.println(\"Srnd: \" + lq.toString()); */\n    \n    Query query = lq.makeLuceneQueryField(fieldName, qf);\n    /* if (verbose) System.out.println(\"Lucene: \" + query.toString()); */\n\n    TestCollector tc = new TestCollector();\n    Searcher searcher = new IndexSearcher(dBase.getDb());\n    try {\n      searcher.search(query, tc);\n    } finally {\n      searcher.close();\n    }\n    tc.checkNrHits();\n  }\n\n","sourceOld":"  public void doTest() throws Exception {\n\n    if (verbose) {    \n        System.out.println(\"\");\n        System.out.println(\"Query: \" + queryText);\n    }\n    \n    SrndQuery lq = QueryParser.parse(queryText);\n    \n    /* if (verbose) System.out.println(\"Srnd: \" + lq.toString()); */\n    \n    Query query = lq.makeLuceneQueryField(fieldName, qf);\n    /* if (verbose) System.out.println(\"Lucene: \" + query.toString()); */\n\n    TestCollector tc = new TestCollector();\n    Searcher searcher = new IndexSearcher(dBase.getDb());\n    try {\n      searcher.search(query, tc);\n    } finally {\n      searcher.close();\n    }\n    tc.checkNrHits();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4256bc1b3c94786287ccdfc751230374521843cf","date":1254612273,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/surround/src/test/org/apache/lucene/queryParser/surround/query/BooleanQueryTst#doTest().mjava","pathOld":"contrib/surround/src/test/org/apache/lucene/queryParser/surround/query/BooleanQueryTst#doTest().mjava","sourceNew":"  public void doTest() throws Exception {\n\n    if (verbose) {    \n        System.out.println(\"\");\n        System.out.println(\"Query: \" + queryText);\n    }\n    \n    SrndQuery lq = QueryParser.parse(queryText);\n    \n    /* if (verbose) System.out.println(\"Srnd: \" + lq.toString()); */\n    \n    Query query = lq.makeLuceneQueryField(fieldName, qf);\n    /* if (verbose) System.out.println(\"Lucene: \" + query.toString()); */\n\n    TestCollector tc = new TestCollector();\n    Searcher searcher = new IndexSearcher(dBase.getDb(), true);\n    try {\n      searcher.search(query, tc);\n    } finally {\n      searcher.close();\n    }\n    tc.checkNrHits();\n  }\n\n","sourceOld":"  public void doTest() throws Exception {\n\n    if (verbose) {    \n        System.out.println(\"\");\n        System.out.println(\"Query: \" + queryText);\n    }\n    \n    SrndQuery lq = QueryParser.parse(queryText);\n    \n    /* if (verbose) System.out.println(\"Srnd: \" + lq.toString()); */\n    \n    Query query = lq.makeLuceneQueryField(fieldName, qf);\n    /* if (verbose) System.out.println(\"Lucene: \" + query.toString()); */\n\n    TestCollector tc = new TestCollector();\n    Searcher searcher = new IndexSearcher(dBase.getDb());\n    try {\n      searcher.search(query, tc);\n    } finally {\n      searcher.close();\n    }\n    tc.checkNrHits();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/surround/src/test/org/apache/lucene/queryParser/surround/query/BooleanQueryTst#doTest().mjava","pathOld":"contrib/surround/src/test/org/apache/lucene/queryParser/surround/query/BooleanQueryTst#doTest().mjava","sourceNew":"  public void doTest() throws Exception {\n\n    if (verbose) {    \n        System.out.println(\"\");\n        System.out.println(\"Query: \" + queryText);\n    }\n    \n    SrndQuery lq = QueryParser.parse(queryText);\n    \n    /* if (verbose) System.out.println(\"Srnd: \" + lq.toString()); */\n    \n    Query query = lq.makeLuceneQueryField(fieldName, qf);\n    /* if (verbose) System.out.println(\"Lucene: \" + query.toString()); */\n\n    TestCollector tc = new TestCollector();\n    Searcher searcher = new IndexSearcher(dBase.getDb(), true);\n    try {\n      searcher.search(query, tc);\n    } finally {\n      searcher.close();\n    }\n    tc.checkNrHits();\n  }\n\n","sourceOld":"  public void doTest() throws Exception {\n\n    if (verbose) {    \n        System.out.println(\"\");\n        System.out.println(\"Query: \" + queryText);\n    }\n    \n    SrndQuery lq = QueryParser.parse(queryText);\n    \n    /* if (verbose) System.out.println(\"Srnd: \" + lq.toString()); */\n    \n    Query query = lq.makeLuceneQueryField(fieldName, qf);\n    /* if (verbose) System.out.println(\"Lucene: \" + query.toString()); */\n\n    TestCollector tc = new TestCollector();\n    Searcher searcher = new IndexSearcher(dBase.getDb(), true);\n    try {\n      searcher.search(query, tc);\n    } finally {\n      searcher.close();\n    }\n    tc.checkNrHits();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"317dfa9adeff47074f27d16dc7550d7628d1a6ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4256bc1b3c94786287ccdfc751230374521843cf":["317dfa9adeff47074f27d16dc7550d7628d1a6ee"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["4256bc1b3c94786287ccdfc751230374521843cf"]},"commit2Childs":{"317dfa9adeff47074f27d16dc7550d7628d1a6ee":["4256bc1b3c94786287ccdfc751230374521843cf"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["317dfa9adeff47074f27d16dc7550d7628d1a6ee"],"4256bc1b3c94786287ccdfc751230374521843cf":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}