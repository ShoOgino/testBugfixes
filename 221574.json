{"path":"lucene/memory/src/test/org/apache/lucene/index/memory/MemoryIndexTest#readQueries(String).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/memory/src/test/org/apache/lucene/index/memory/MemoryIndexTest#readQueries(String).mjava","pathOld":"lucene/contrib/memory/src/test/org/apache/lucene/index/memory/MemoryIndexTest#readQueries(String).mjava","sourceNew":"  /**\n   * read a set of queries from a resource file\n   */\n  private Set<String> readQueries(String resource) throws IOException {\n    Set<String> queries = new HashSet<String>();\n    InputStream stream = getClass().getResourceAsStream(resource);\n    BufferedReader reader = new BufferedReader(new InputStreamReader(stream, \"UTF-8\"));\n    String line = null;\n    while ((line = reader.readLine()) != null) {\n      line = line.trim();\n      if (line.length() > 0 && !line.startsWith(\"#\") && !line.startsWith(\"//\")) {\n        queries.add(line);\n      }\n    }\n    return queries;\n  }\n\n","sourceOld":"  /**\n   * read a set of queries from a resource file\n   */\n  private Set<String> readQueries(String resource) throws IOException {\n    Set<String> queries = new HashSet<String>();\n    InputStream stream = getClass().getResourceAsStream(resource);\n    BufferedReader reader = new BufferedReader(new InputStreamReader(stream, \"UTF-8\"));\n    String line = null;\n    while ((line = reader.readLine()) != null) {\n      line = line.trim();\n      if (line.length() > 0 && !line.startsWith(\"#\") && !line.startsWith(\"//\")) {\n        queries.add(line);\n      }\n    }\n    return queries;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/memory/src/test/org/apache/lucene/index/memory/MemoryIndexTest#readQueries(String).mjava","pathOld":"lucene/memory/src/test/org/apache/lucene/index/memory/MemoryIndexTest#readQueries(String).mjava","sourceNew":"  /**\n   * read a set of queries from a resource file\n   */\n  private Set<String> readQueries(String resource) throws IOException {\n    Set<String> queries = new HashSet<>();\n    InputStream stream = getClass().getResourceAsStream(resource);\n    BufferedReader reader = new BufferedReader(new InputStreamReader(stream, \"UTF-8\"));\n    String line = null;\n    while ((line = reader.readLine()) != null) {\n      line = line.trim();\n      if (line.length() > 0 && !line.startsWith(\"#\") && !line.startsWith(\"//\")) {\n        queries.add(line);\n      }\n    }\n    return queries;\n  }\n\n","sourceOld":"  /**\n   * read a set of queries from a resource file\n   */\n  private Set<String> readQueries(String resource) throws IOException {\n    Set<String> queries = new HashSet<String>();\n    InputStream stream = getClass().getResourceAsStream(resource);\n    BufferedReader reader = new BufferedReader(new InputStreamReader(stream, \"UTF-8\"));\n    String line = null;\n    while ((line = reader.readLine()) != null) {\n      line = line.trim();\n      if (line.length() > 0 && !line.startsWith(\"#\") && !line.startsWith(\"//\")) {\n        queries.add(line);\n      }\n    }\n    return queries;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7d89d7e4e5101347833eea558851bf4209218619","date":1396265641,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/memory/src/test/org/apache/lucene/index/memory/MemoryIndexTest#readQueries(String).mjava","pathOld":"lucene/memory/src/test/org/apache/lucene/index/memory/MemoryIndexTest#readQueries(String).mjava","sourceNew":"  /**\n   * read a set of queries from a resource file\n   */\n  private Set<String> readQueries(String resource) throws IOException {\n    Set<String> queries = new HashSet<>();\n    InputStream stream = getClass().getResourceAsStream(resource);\n    BufferedReader reader = new BufferedReader(new InputStreamReader(stream, StandardCharsets.UTF_8));\n    String line = null;\n    while ((line = reader.readLine()) != null) {\n      line = line.trim();\n      if (line.length() > 0 && !line.startsWith(\"#\") && !line.startsWith(\"//\")) {\n        queries.add(line);\n      }\n    }\n    return queries;\n  }\n\n","sourceOld":"  /**\n   * read a set of queries from a resource file\n   */\n  private Set<String> readQueries(String resource) throws IOException {\n    Set<String> queries = new HashSet<>();\n    InputStream stream = getClass().getResourceAsStream(resource);\n    BufferedReader reader = new BufferedReader(new InputStreamReader(stream, \"UTF-8\"));\n    String line = null;\n    while ((line = reader.readLine()) != null) {\n      line = line.trim();\n      if (line.length() > 0 && !line.startsWith(\"#\") && !line.startsWith(\"//\")) {\n        queries.add(line);\n      }\n    }\n    return queries;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5eb2511ababf862ea11e10761c70ee560cd84510","date":1396607225,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/memory/src/test/org/apache/lucene/index/memory/MemoryIndexTest#readQueries(String).mjava","pathOld":"lucene/memory/src/test/org/apache/lucene/index/memory/MemoryIndexTest#readQueries(String).mjava","sourceNew":"  /**\n   * read a set of queries from a resource file\n   */\n  private Set<String> readQueries(String resource) throws IOException {\n    Set<String> queries = new HashSet<>();\n    InputStream stream = getClass().getResourceAsStream(resource);\n    BufferedReader reader = new BufferedReader(new InputStreamReader(stream, StandardCharsets.UTF_8));\n    String line = null;\n    while ((line = reader.readLine()) != null) {\n      line = line.trim();\n      if (line.length() > 0 && !line.startsWith(\"#\") && !line.startsWith(\"//\")) {\n        queries.add(line);\n      }\n    }\n    return queries;\n  }\n\n","sourceOld":"  /**\n   * read a set of queries from a resource file\n   */\n  private Set<String> readQueries(String resource) throws IOException {\n    Set<String> queries = new HashSet<>();\n    InputStream stream = getClass().getResourceAsStream(resource);\n    BufferedReader reader = new BufferedReader(new InputStreamReader(stream, \"UTF-8\"));\n    String line = null;\n    while ((line = reader.readLine()) != null) {\n      line = line.trim();\n      if (line.length() > 0 && !line.startsWith(\"#\") && !line.startsWith(\"//\")) {\n        queries.add(line);\n      }\n    }\n    return queries;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"761333d77c7f29123c00c93b107b743f32f012e6","date":1411986072,"type":5,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/memory/src/test/org/apache/lucene/index/memory/TestMemoryIndexAgainstRAMDir#readQueries(String).mjava","pathOld":"lucene/memory/src/test/org/apache/lucene/index/memory/MemoryIndexTest#readQueries(String).mjava","sourceNew":"  /**\n   * read a set of queries from a resource file\n   */\n  private Set<String> readQueries(String resource) throws IOException {\n    Set<String> queries = new HashSet<>();\n    InputStream stream = getClass().getResourceAsStream(resource);\n    BufferedReader reader = new BufferedReader(new InputStreamReader(stream, StandardCharsets.UTF_8));\n    String line = null;\n    while ((line = reader.readLine()) != null) {\n      line = line.trim();\n      if (line.length() > 0 && !line.startsWith(\"#\") && !line.startsWith(\"//\")) {\n        queries.add(line);\n      }\n    }\n    return queries;\n  }\n\n","sourceOld":"  /**\n   * read a set of queries from a resource file\n   */\n  private Set<String> readQueries(String resource) throws IOException {\n    Set<String> queries = new HashSet<>();\n    InputStream stream = getClass().getResourceAsStream(resource);\n    BufferedReader reader = new BufferedReader(new InputStreamReader(stream, StandardCharsets.UTF_8));\n    String line = null;\n    while ((line = reader.readLine()) != null) {\n      line = line.trim();\n      if (line.length() > 0 && !line.startsWith(\"#\") && !line.startsWith(\"//\")) {\n        queries.add(line);\n      }\n    }\n    return queries;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d9a47902d6207303f5ed3e7aaca62ca33433af66","date":1412435312,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/memory/src/test/org/apache/lucene/index/memory/TestMemoryIndexAgainstRAMDir#readQueries(String).mjava","pathOld":"lucene/memory/src/test/org/apache/lucene/index/memory/MemoryIndexTest#readQueries(String).mjava","sourceNew":"  /**\n   * read a set of queries from a resource file\n   */\n  private Set<String> readQueries(String resource) throws IOException {\n    Set<String> queries = new HashSet<>();\n    InputStream stream = getClass().getResourceAsStream(resource);\n    BufferedReader reader = new BufferedReader(new InputStreamReader(stream, StandardCharsets.UTF_8));\n    String line = null;\n    while ((line = reader.readLine()) != null) {\n      line = line.trim();\n      if (line.length() > 0 && !line.startsWith(\"#\") && !line.startsWith(\"//\")) {\n        queries.add(line);\n      }\n    }\n    return queries;\n  }\n\n","sourceOld":"  /**\n   * read a set of queries from a resource file\n   */\n  private Set<String> readQueries(String resource) throws IOException {\n    Set<String> queries = new HashSet<>();\n    InputStream stream = getClass().getResourceAsStream(resource);\n    BufferedReader reader = new BufferedReader(new InputStreamReader(stream, StandardCharsets.UTF_8));\n    String line = null;\n    while ((line = reader.readLine()) != null) {\n      line = line.trim();\n      if (line.length() > 0 && !line.startsWith(\"#\") && !line.startsWith(\"//\")) {\n        queries.add(line);\n      }\n    }\n    return queries;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5eb2511ababf862ea11e10761c70ee560cd84510":["634f330c54fd3f9f491d52036dc3f40b4f4d8934","7d89d7e4e5101347833eea558851bf4209218619"],"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d9a47902d6207303f5ed3e7aaca62ca33433af66":["7d89d7e4e5101347833eea558851bf4209218619","761333d77c7f29123c00c93b107b743f32f012e6"],"7d89d7e4e5101347833eea558851bf4209218619":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"761333d77c7f29123c00c93b107b743f32f012e6":["7d89d7e4e5101347833eea558851bf4209218619"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["761333d77c7f29123c00c93b107b743f32f012e6"]},"commit2Childs":{"5eb2511ababf862ea11e10761c70ee560cd84510":[],"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["5eb2511ababf862ea11e10761c70ee560cd84510","7d89d7e4e5101347833eea558851bf4209218619"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"d9a47902d6207303f5ed3e7aaca62ca33433af66":[],"7d89d7e4e5101347833eea558851bf4209218619":["5eb2511ababf862ea11e10761c70ee560cd84510","d9a47902d6207303f5ed3e7aaca62ca33433af66","761333d77c7f29123c00c93b107b743f32f012e6"],"761333d77c7f29123c00c93b107b743f32f012e6":["d9a47902d6207303f5ed3e7aaca62ca33433af66","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5eb2511ababf862ea11e10761c70ee560cd84510","d9a47902d6207303f5ed3e7aaca62ca33433af66","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}