{"path":"modules/spatial/src/test/org/apache/lucene/spatial/prefix/BaseRecursivePrefixTreeStrategyTestCase#testFilterWithVariableScanLevel().mjava","commits":[{"id":"de3ae51f6d7d658f4c6d1cc9b74cc4b5e45f294e","date":1330665960,"type":1,"author":"David Wayne Smiley","isMerge":false,"pathNew":"modules/spatial/src/test/org/apache/lucene/spatial/prefix/BaseRecursivePrefixTreeStrategyTestCase#testFilterWithVariableScanLevel().mjava","pathOld":"modules/spatial/src/test/org/apache/lucene/spatial/strategy/prefix/BaseRecursivePrefixTreeStrategyTestCase#testFilterWithVariableScanLevel().mjava","sourceNew":"  @Test\n  public void testFilterWithVariableScanLevel() throws IOException {\n    getAddAndVerifyIndexedDocuments(DATA_WORLD_CITIES_POINTS);\n\n    //execute queries for each prefix grid scan level\n    for(int i = 0; i <= maxLength; i++) {\n      ((RecursivePrefixTreeStrategy)strategy).setPrefixGridScanLevel(i);\n      executeQueries(SpatialMatchConcern.FILTER, QTEST_Cities_IsWithin_BBox);\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testFilterWithVariableScanLevel() throws IOException {\n    getAddAndVerifyIndexedDocuments(DATA_WORLD_CITIES_POINTS);\n\n    //execute queries for each prefix grid scan level\n    for(int i = 0; i <= maxLength; i++) {\n      ((RecursivePrefixTreeStrategy)strategy).setPrefixGridScanLevel(i);\n      executeQueries(SpatialMatchConcern.FILTER, QTEST_Cities_IsWithin_BBox);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e47768b261c28e7e6032060e8331475c81057953","date":1331681297,"type":0,"author":"Ryan McKinley","isMerge":true,"pathNew":"modules/spatial/src/test/org/apache/lucene/spatial/prefix/BaseRecursivePrefixTreeStrategyTestCase#testFilterWithVariableScanLevel().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testFilterWithVariableScanLevel() throws IOException {\n    getAddAndVerifyIndexedDocuments(DATA_WORLD_CITIES_POINTS);\n\n    //execute queries for each prefix grid scan level\n    for(int i = 0; i <= maxLength; i++) {\n      ((RecursivePrefixTreeStrategy)strategy).setPrefixGridScanLevel(i);\n      executeQueries(SpatialMatchConcern.FILTER, QTEST_Cities_IsWithin_BBox);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/prefix/BaseRecursivePrefixTreeStrategyTestCase#testFilterWithVariableScanLevel().mjava","pathOld":"modules/spatial/src/test/org/apache/lucene/spatial/prefix/BaseRecursivePrefixTreeStrategyTestCase#testFilterWithVariableScanLevel().mjava","sourceNew":"  @Test\n  public void testFilterWithVariableScanLevel() throws IOException {\n    getAddAndVerifyIndexedDocuments(DATA_WORLD_CITIES_POINTS);\n\n    //execute queries for each prefix grid scan level\n    for(int i = 0; i <= maxLength; i++) {\n      ((RecursivePrefixTreeStrategy)strategy).setPrefixGridScanLevel(i);\n      executeQueries(SpatialMatchConcern.FILTER, QTEST_Cities_IsWithin_BBox);\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testFilterWithVariableScanLevel() throws IOException {\n    getAddAndVerifyIndexedDocuments(DATA_WORLD_CITIES_POINTS);\n\n    //execute queries for each prefix grid scan level\n    for(int i = 0; i <= maxLength; i++) {\n      ((RecursivePrefixTreeStrategy)strategy).setPrefixGridScanLevel(i);\n      executeQueries(SpatialMatchConcern.FILTER, QTEST_Cities_IsWithin_BBox);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["e47768b261c28e7e6032060e8331475c81057953"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e47768b261c28e7e6032060e8331475c81057953":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","de3ae51f6d7d658f4c6d1cc9b74cc4b5e45f294e"],"de3ae51f6d7d658f4c6d1cc9b74cc4b5e45f294e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e47768b261c28e7e6032060e8331475c81057953","de3ae51f6d7d658f4c6d1cc9b74cc4b5e45f294e"],"e47768b261c28e7e6032060e8331475c81057953":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"de3ae51f6d7d658f4c6d1cc9b74cc4b5e45f294e":["e47768b261c28e7e6032060e8331475c81057953"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}