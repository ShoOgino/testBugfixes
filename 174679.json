{"path":"src/java/org/apache/lucene/index/IndexWriter#init(Directory,Analyzer,IndexDeletionPolicy,int,IndexingChain,IndexCommit).mjava","commits":[{"id":"ce99e2b80b5a9cb2b9b59c01219e5397b081dcd8","date":1255049357,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexWriter#init(Directory,Analyzer,IndexDeletionPolicy,int,IndexingChain,IndexCommit).mjava","pathOld":"src/java/org/apache/lucene/index/IndexWriter#init(Directory,Analyzer,IndexDeletionPolicy,boolean,int,IndexingChain,IndexCommit).mjava","sourceNew":"  private void init(Directory d, Analyzer a, IndexDeletionPolicy deletionPolicy, \n                    int maxFieldLength, IndexingChain indexingChain, IndexCommit commit)\n    throws CorruptIndexException, LockObtainFailedException, IOException {\n    if (IndexReader.indexExists(d)) {\n      init(d, a, false, deletionPolicy, maxFieldLength, indexingChain, commit);\n    } else {\n      init(d, a, true, deletionPolicy, maxFieldLength, indexingChain, commit);\n    }\n  }\n\n","sourceOld":"  private void init(Directory d, Analyzer a, IndexDeletionPolicy deletionPolicy, \n                    boolean autoCommit, int maxFieldLength, IndexingChain indexingChain, IndexCommit commit)\n    throws CorruptIndexException, LockObtainFailedException, IOException {\n    if (IndexReader.indexExists(d)) {\n      init(d, a, false, deletionPolicy, autoCommit, maxFieldLength, indexingChain, commit);\n    } else {\n      init(d, a, true, deletionPolicy, autoCommit, maxFieldLength, indexingChain, commit);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1cedb00d2dd44640194401179358a2e3ba6051bf","date":1268243626,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"src/java/org/apache/lucene/index/IndexWriter#init(Directory,Analyzer,IndexDeletionPolicy,int,IndexingChain,IndexCommit).mjava","sourceNew":null,"sourceOld":"  private void init(Directory d, Analyzer a, IndexDeletionPolicy deletionPolicy, \n                    int maxFieldLength, IndexingChain indexingChain, IndexCommit commit)\n    throws CorruptIndexException, LockObtainFailedException, IOException {\n    if (IndexReader.indexExists(d)) {\n      init(d, a, false, deletionPolicy, maxFieldLength, indexingChain, commit);\n    } else {\n      init(d, a, true, deletionPolicy, maxFieldLength, indexingChain, commit);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e52fea2c4081a1e552b98506691990be59503168","date":1268250331,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexWriter#init(Directory,Analyzer,IndexDeletionPolicy,int,IndexingChain,IndexCommit).mjava","pathOld":"/dev/null","sourceNew":"  private void init(Directory d, Analyzer a, IndexDeletionPolicy deletionPolicy, \n                    int maxFieldLength, IndexingChain indexingChain, IndexCommit commit)\n    throws CorruptIndexException, LockObtainFailedException, IOException {\n    if (IndexReader.indexExists(d)) {\n      init(d, a, false, deletionPolicy, maxFieldLength, indexingChain, commit);\n    } else {\n      init(d, a, true, deletionPolicy, maxFieldLength, indexingChain, commit);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8","date":1268494368,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"src/java/org/apache/lucene/index/IndexWriter#init(Directory,Analyzer,IndexDeletionPolicy,int,IndexingChain,IndexCommit).mjava","sourceNew":null,"sourceOld":"  private void init(Directory d, Analyzer a, IndexDeletionPolicy deletionPolicy, \n                    int maxFieldLength, IndexingChain indexingChain, IndexCommit commit)\n    throws CorruptIndexException, LockObtainFailedException, IOException {\n    if (IndexReader.indexExists(d)) {\n      init(d, a, false, deletionPolicy, maxFieldLength, indexingChain, commit);\n    } else {\n      init(d, a, true, deletionPolicy, maxFieldLength, indexingChain, commit);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8":["e52fea2c4081a1e552b98506691990be59503168"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1cedb00d2dd44640194401179358a2e3ba6051bf":["ce99e2b80b5a9cb2b9b59c01219e5397b081dcd8"],"ce99e2b80b5a9cb2b9b59c01219e5397b081dcd8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e52fea2c4081a1e552b98506691990be59503168":["1cedb00d2dd44640194401179358a2e3ba6051bf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8"]},"commit2Childs":{"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ce99e2b80b5a9cb2b9b59c01219e5397b081dcd8"],"1cedb00d2dd44640194401179358a2e3ba6051bf":["e52fea2c4081a1e552b98506691990be59503168"],"ce99e2b80b5a9cb2b9b59c01219e5397b081dcd8":["1cedb00d2dd44640194401179358a2e3ba6051bf"],"e52fea2c4081a1e552b98506691990be59503168":["84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}