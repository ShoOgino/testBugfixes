{"path":"solr/core/src/test/org/apache/solr/request/TestIntervalFaceting#testChangeKey().mjava","commits":[{"id":"a0e3055974cda209e4f95efadcd904f0ebf03ada","date":1406238198,"type":0,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/request/TestIntervalFaceting#testChangeKey().mjava","pathOld":"/dev/null","sourceNew":"  public void testChangeKey() {\n    assertU(adoc(\"id\", \"1\", \"test_s_dv\", \"dog\"));\n    assertU(adoc(\"id\", \"2\", \"test_s_dv\", \"cat\"));\n    assertU(adoc(\"id\", \"3\", \"test_s_dv\", \"bird\"));\n    assertU(adoc(\"id\", \"4\", \"test_s_dv\", \"cat\"));\n    assertU(adoc(\"id\", \"5\", \"test_s_dv\", \"turtle\"));\n    assertU(adoc(\"id\", \"6\", \"test_s_dv\", \"dog\"));\n    assertU(adoc(\"id\", \"7\", \"test_s_dv\", \"dog\"));\n    assertU(adoc(\"id\", \"8\", \"test_s_dv\", \"dog\"));\n    assertU(adoc(\"id\", \"9\", \"test_s_dv\", \"cat\"));\n    assertU(adoc(\"id\", \"10\"));\n    assertU(commit());\n    \n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"facet.interval\", \"test_s_dv\", \n        \"f.test_s_dv.facet.interval.set\", \"{!key=foo}[bird,bird]\", \n        \"f.test_s_dv.facet.interval.set\", \"{!key='bar'}(bird,dog)\"), \n        \"//lst[@name='facet_intervals']/lst[@name='test_s_dv']/int[@name='foo'][.=1]\",\n        \"//lst[@name='facet_intervals']/lst[@name='test_s_dv']/int[@name='bar'][.=3]\");\n    \n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"facet.interval\", \"test_s_dv\", \n        \"f.test_s_dv.facet.interval.set\", \"{!key=Birds}[bird,bird]\", \n        \"f.test_s_dv.facet.interval.set\", \"{!key='foo bar'}(bird,dog)\"), \n        \"//lst[@name='facet_intervals']/lst[@name='test_s_dv']/int[@name='Birds'][.=1]\",\n        \"//lst[@name='facet_intervals']/lst[@name='test_s_dv']/int[@name='foo bar'][.=3]\");\n    \n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"facet.interval\", \"test_s_dv\", \n        \"f.test_s_dv.facet.interval.set\", \"{!key=$p}[bird,bird]\", \n        \"p\", \"foo bar\"), \n        \"//lst[@name='facet_intervals']/lst[@name='test_s_dv']/int[@name='foo bar'][.=1]\");\n    \n    assertQ(req(\"q\", \"*:*\", \"facet\", \"true\", \"facet.interval\", \"test_s_dv\", \n        \"f.test_s_dv.facet.interval.set\", \"{!key='[bird,\\\\}'}[bird,*]\", \n        \"f.test_s_dv.facet.interval.set\", \"{!key='\\\\{bird,dog\\\\}'}(bird,dog)\",\n        \"f.test_s_dv.facet.interval.set\", \"{!key='foo'}(bird,dog})\"), \n        \"//lst[@name='facet_intervals']/lst[@name='test_s_dv']/int[@name='[bird,}'][.=9]\",\n        \"//lst[@name='facet_intervals']/lst[@name='test_s_dv']/int[@name='{bird,dog}'][.=3]\",\n        \"//lst[@name='facet_intervals']/lst[@name='test_s_dv']/int[@name='foo'][.=7]\");\n    \n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a0e3055974cda209e4f95efadcd904f0ebf03ada":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e3055974cda209e4f95efadcd904f0ebf03ada"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a0e3055974cda209e4f95efadcd904f0ebf03ada"],"a0e3055974cda209e4f95efadcd904f0ebf03ada":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}