{"path":"lucene/core/src/test/org/apache/lucene/index/TestDeletionPolicy.KeepAllDeletionPolicy#onCommit(List[#-extends-IndexCommit]).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDeletionPolicy.KeepAllDeletionPolicy#onCommit(List[#-extends-IndexCommit]).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestDeletionPolicy.KeepAllDeletionPolicy#onCommit(List[#-extends-IndexCommit]).mjava","sourceNew":"    public void onCommit(List<? extends IndexCommit> commits) throws IOException {\n      IndexCommit lastCommit =  commits.get(commits.size()-1);\n      DirectoryReader r = DirectoryReader.open(dir);\n      assertEquals(\"lastCommit.segmentCount()=\" + lastCommit.getSegmentCount() + \" vs IndexReader.segmentCount=\" + r.getSequentialSubReaders().length, r.getSequentialSubReaders().length, lastCommit.getSegmentCount());\n      r.close();\n      verifyCommitOrder(commits);\n      numOnCommit++;\n    }\n\n","sourceOld":"    public void onCommit(List<? extends IndexCommit> commits) throws IOException {\n      IndexCommit lastCommit =  commits.get(commits.size()-1);\n      DirectoryReader r = DirectoryReader.open(dir);\n      assertEquals(\"lastCommit.segmentCount()=\" + lastCommit.getSegmentCount() + \" vs IndexReader.segmentCount=\" + r.getSequentialSubReaders().length, r.getSequentialSubReaders().length, lastCommit.getSegmentCount());\n      r.close();\n      verifyCommitOrder(commits);\n      numOnCommit++;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4c5ae929ce8aa0c4856f0d6bfd4c196bc2d3eb9c","date":1340090669,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDeletionPolicy.KeepAllDeletionPolicy#onCommit(List[#-extends-IndexCommit]).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDeletionPolicy.KeepAllDeletionPolicy#onCommit(List[#-extends-IndexCommit]).mjava","sourceNew":"    public void onCommit(List<? extends IndexCommit> commits) throws IOException {\n      IndexCommit lastCommit =  commits.get(commits.size()-1);\n      DirectoryReader r = DirectoryReader.open(dir);\n      assertEquals(\"lastCommit.segmentCount()=\" + lastCommit.getSegmentCount() + \" vs IndexReader.segmentCount=\" + r.getSequentialSubReaders().size(), r.getSequentialSubReaders().size(), lastCommit.getSegmentCount());\n      r.close();\n      verifyCommitOrder(commits);\n      numOnCommit++;\n    }\n\n","sourceOld":"    public void onCommit(List<? extends IndexCommit> commits) throws IOException {\n      IndexCommit lastCommit =  commits.get(commits.size()-1);\n      DirectoryReader r = DirectoryReader.open(dir);\n      assertEquals(\"lastCommit.segmentCount()=\" + lastCommit.getSegmentCount() + \" vs IndexReader.segmentCount=\" + r.getSequentialSubReaders().length, r.getSequentialSubReaders().length, lastCommit.getSegmentCount());\n      r.close();\n      verifyCommitOrder(commits);\n      numOnCommit++;\n    }\n\n","bugFix":null,"bugIntro":["ced66195b26fdb1f77ee00e2a77ec6918dedd766"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ced66195b26fdb1f77ee00e2a77ec6918dedd766","date":1344948886,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDeletionPolicy.KeepAllDeletionPolicy#onCommit(List[#-extends-IndexCommit]).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDeletionPolicy.KeepAllDeletionPolicy#onCommit(List[#-extends-IndexCommit]).mjava","sourceNew":"    public void onCommit(List<? extends IndexCommit> commits) throws IOException {\n      IndexCommit lastCommit =  commits.get(commits.size()-1);\n      DirectoryReader r = DirectoryReader.open(dir);\n      assertEquals(\"lastCommit.segmentCount()=\" + lastCommit.getSegmentCount() + \" vs IndexReader.segmentCount=\" + r.leaves().size(), r.leaves().size(), lastCommit.getSegmentCount());\n      r.close();\n      verifyCommitOrder(commits);\n      numOnCommit++;\n    }\n\n","sourceOld":"    public void onCommit(List<? extends IndexCommit> commits) throws IOException {\n      IndexCommit lastCommit =  commits.get(commits.size()-1);\n      DirectoryReader r = DirectoryReader.open(dir);\n      assertEquals(\"lastCommit.segmentCount()=\" + lastCommit.getSegmentCount() + \" vs IndexReader.segmentCount=\" + r.getSequentialSubReaders().size(), r.getSequentialSubReaders().size(), lastCommit.getSegmentCount());\n      r.close();\n      verifyCommitOrder(commits);\n      numOnCommit++;\n    }\n\n","bugFix":["4c5ae929ce8aa0c4856f0d6bfd4c196bc2d3eb9c"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c1fe8ee1a5a1ef00a9c4793ec26f17bd90342198","date":1345029782,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDeletionPolicy.KeepAllDeletionPolicy#onCommit(List[#-extends-IndexCommit]).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDeletionPolicy.KeepAllDeletionPolicy#onCommit(List[#-extends-IndexCommit]).mjava","sourceNew":"    public void onCommit(List<? extends IndexCommit> commits) throws IOException {\n      IndexCommit lastCommit =  commits.get(commits.size()-1);\n      DirectoryReader r = DirectoryReader.open(dir);\n      assertEquals(\"lastCommit.segmentCount()=\" + lastCommit.getSegmentCount() + \" vs IndexReader.segmentCount=\" + r.leaves().size(), r.leaves().size(), lastCommit.getSegmentCount());\n      r.close();\n      verifyCommitOrder(commits);\n      numOnCommit++;\n    }\n\n","sourceOld":"    public void onCommit(List<? extends IndexCommit> commits) throws IOException {\n      IndexCommit lastCommit =  commits.get(commits.size()-1);\n      DirectoryReader r = DirectoryReader.open(dir);\n      assertEquals(\"lastCommit.segmentCount()=\" + lastCommit.getSegmentCount() + \" vs IndexReader.segmentCount=\" + r.getSequentialSubReaders().size(), r.getSequentialSubReaders().size(), lastCommit.getSegmentCount());\n      r.close();\n      verifyCommitOrder(commits);\n      numOnCommit++;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3c188105a9aae04f56c24996f98f8333fc825d2e","date":1345031914,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDeletionPolicy.KeepAllDeletionPolicy#onCommit(List[#-extends-IndexCommit]).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDeletionPolicy.KeepAllDeletionPolicy#onCommit(List[#-extends-IndexCommit]).mjava","sourceNew":"    public void onCommit(List<? extends IndexCommit> commits) throws IOException {\n      IndexCommit lastCommit =  commits.get(commits.size()-1);\n      DirectoryReader r = DirectoryReader.open(dir);\n      assertEquals(\"lastCommit.segmentCount()=\" + lastCommit.getSegmentCount() + \" vs IndexReader.segmentCount=\" + r.leaves().size(), r.leaves().size(), lastCommit.getSegmentCount());\n      r.close();\n      verifyCommitOrder(commits);\n      numOnCommit++;\n    }\n\n","sourceOld":"    public void onCommit(List<? extends IndexCommit> commits) throws IOException {\n      IndexCommit lastCommit =  commits.get(commits.size()-1);\n      DirectoryReader r = DirectoryReader.open(dir);\n      assertEquals(\"lastCommit.segmentCount()=\" + lastCommit.getSegmentCount() + \" vs IndexReader.segmentCount=\" + r.getSequentialSubReaders().size(), r.getSequentialSubReaders().size(), lastCommit.getSegmentCount());\n      r.close();\n      verifyCommitOrder(commits);\n      numOnCommit++;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1c93396a1df03720cb20e2c2f513a6fa59b21e4c","date":1345032673,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDeletionPolicy.KeepAllDeletionPolicy#onCommit(List[#-extends-IndexCommit]).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDeletionPolicy.KeepAllDeletionPolicy#onCommit(List[#-extends-IndexCommit]).mjava","sourceNew":"    public void onCommit(List<? extends IndexCommit> commits) throws IOException {\n      IndexCommit lastCommit =  commits.get(commits.size()-1);\n      DirectoryReader r = DirectoryReader.open(dir);\n      assertEquals(\"lastCommit.segmentCount()=\" + lastCommit.getSegmentCount() + \" vs IndexReader.segmentCount=\" + r.getSequentialSubReaders().size(), r.getSequentialSubReaders().size(), lastCommit.getSegmentCount());\n      r.close();\n      verifyCommitOrder(commits);\n      numOnCommit++;\n    }\n\n","sourceOld":"    public void onCommit(List<? extends IndexCommit> commits) throws IOException {\n      IndexCommit lastCommit =  commits.get(commits.size()-1);\n      DirectoryReader r = DirectoryReader.open(dir);\n      assertEquals(\"lastCommit.segmentCount()=\" + lastCommit.getSegmentCount() + \" vs IndexReader.segmentCount=\" + r.leaves().size(), r.leaves().size(), lastCommit.getSegmentCount());\n      r.close();\n      verifyCommitOrder(commits);\n      numOnCommit++;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b05c56a41b733e02a189c48895922b5bd8c7f3d1","date":1345033322,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDeletionPolicy.KeepAllDeletionPolicy#onCommit(List[#-extends-IndexCommit]).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDeletionPolicy.KeepAllDeletionPolicy#onCommit(List[#-extends-IndexCommit]).mjava","sourceNew":"    public void onCommit(List<? extends IndexCommit> commits) throws IOException {\n      IndexCommit lastCommit =  commits.get(commits.size()-1);\n      DirectoryReader r = DirectoryReader.open(dir);\n      assertEquals(\"lastCommit.segmentCount()=\" + lastCommit.getSegmentCount() + \" vs IndexReader.segmentCount=\" + r.leaves().size(), r.leaves().size(), lastCommit.getSegmentCount());\n      r.close();\n      verifyCommitOrder(commits);\n      numOnCommit++;\n    }\n\n","sourceOld":"    public void onCommit(List<? extends IndexCommit> commits) throws IOException {\n      IndexCommit lastCommit =  commits.get(commits.size()-1);\n      DirectoryReader r = DirectoryReader.open(dir);\n      assertEquals(\"lastCommit.segmentCount()=\" + lastCommit.getSegmentCount() + \" vs IndexReader.segmentCount=\" + r.getSequentialSubReaders().size(), r.getSequentialSubReaders().size(), lastCommit.getSegmentCount());\n      r.close();\n      verifyCommitOrder(commits);\n      numOnCommit++;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7530de27b87b961b51f01bd1299b7004d46e8823","date":1355236261,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDeletionPolicy.KeepAllDeletionPolicy#onCommit(List[#-extends-IndexCommit]).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDeletionPolicy.KeepAllDeletionPolicy#onCommit(List[#-extends-IndexCommit]).mjava","sourceNew":"    @Override\n    public void onCommit(List<? extends IndexCommit> commits) throws IOException {\n      IndexCommit lastCommit =  commits.get(commits.size()-1);\n      DirectoryReader r = DirectoryReader.open(dir);\n      assertEquals(\"lastCommit.segmentCount()=\" + lastCommit.getSegmentCount() + \" vs IndexReader.segmentCount=\" + r.leaves().size(), r.leaves().size(), lastCommit.getSegmentCount());\n      r.close();\n      verifyCommitOrder(commits);\n      numOnCommit++;\n    }\n\n","sourceOld":"    public void onCommit(List<? extends IndexCommit> commits) throws IOException {\n      IndexCommit lastCommit =  commits.get(commits.size()-1);\n      DirectoryReader r = DirectoryReader.open(dir);\n      assertEquals(\"lastCommit.segmentCount()=\" + lastCommit.getSegmentCount() + \" vs IndexReader.segmentCount=\" + r.leaves().size(), r.leaves().size(), lastCommit.getSegmentCount());\n      r.close();\n      verifyCommitOrder(commits);\n      numOnCommit++;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDeletionPolicy.KeepAllDeletionPolicy#onCommit(List[#-extends-IndexCommit]).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDeletionPolicy.KeepAllDeletionPolicy#onCommit(List[#-extends-IndexCommit]).mjava","sourceNew":"    @Override\n    public void onCommit(List<? extends IndexCommit> commits) throws IOException {\n      IndexCommit lastCommit =  commits.get(commits.size()-1);\n      DirectoryReader r = DirectoryReader.open(dir);\n      assertEquals(\"lastCommit.segmentCount()=\" + lastCommit.getSegmentCount() + \" vs IndexReader.segmentCount=\" + r.leaves().size(), r.leaves().size(), lastCommit.getSegmentCount());\n      r.close();\n      verifyCommitOrder(commits);\n      numOnCommit++;\n    }\n\n","sourceOld":"    public void onCommit(List<? extends IndexCommit> commits) throws IOException {\n      IndexCommit lastCommit =  commits.get(commits.size()-1);\n      DirectoryReader r = DirectoryReader.open(dir);\n      assertEquals(\"lastCommit.segmentCount()=\" + lastCommit.getSegmentCount() + \" vs IndexReader.segmentCount=\" + r.leaves().size(), r.leaves().size(), lastCommit.getSegmentCount());\n      r.close();\n      verifyCommitOrder(commits);\n      numOnCommit++;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["ced66195b26fdb1f77ee00e2a77ec6918dedd766","7530de27b87b961b51f01bd1299b7004d46e8823"],"3c188105a9aae04f56c24996f98f8333fc825d2e":["4c5ae929ce8aa0c4856f0d6bfd4c196bc2d3eb9c"],"4c5ae929ce8aa0c4856f0d6bfd4c196bc2d3eb9c":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"b05c56a41b733e02a189c48895922b5bd8c7f3d1":["1c93396a1df03720cb20e2c2f513a6fa59b21e4c","ced66195b26fdb1f77ee00e2a77ec6918dedd766"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1c93396a1df03720cb20e2c2f513a6fa59b21e4c":["3c188105a9aae04f56c24996f98f8333fc825d2e"],"c1fe8ee1a5a1ef00a9c4793ec26f17bd90342198":["4c5ae929ce8aa0c4856f0d6bfd4c196bc2d3eb9c","ced66195b26fdb1f77ee00e2a77ec6918dedd766"],"7530de27b87b961b51f01bd1299b7004d46e8823":["ced66195b26fdb1f77ee00e2a77ec6918dedd766"],"ced66195b26fdb1f77ee00e2a77ec6918dedd766":["4c5ae929ce8aa0c4856f0d6bfd4c196bc2d3eb9c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7530de27b87b961b51f01bd1299b7004d46e8823"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"3c188105a9aae04f56c24996f98f8333fc825d2e":["1c93396a1df03720cb20e2c2f513a6fa59b21e4c"],"4c5ae929ce8aa0c4856f0d6bfd4c196bc2d3eb9c":["3c188105a9aae04f56c24996f98f8333fc825d2e","c1fe8ee1a5a1ef00a9c4793ec26f17bd90342198","ced66195b26fdb1f77ee00e2a77ec6918dedd766"],"b05c56a41b733e02a189c48895922b5bd8c7f3d1":[],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["4c5ae929ce8aa0c4856f0d6bfd4c196bc2d3eb9c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"1c93396a1df03720cb20e2c2f513a6fa59b21e4c":["b05c56a41b733e02a189c48895922b5bd8c7f3d1"],"c1fe8ee1a5a1ef00a9c4793ec26f17bd90342198":[],"7530de27b87b961b51f01bd1299b7004d46e8823":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ced66195b26fdb1f77ee00e2a77ec6918dedd766":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","b05c56a41b733e02a189c48895922b5bd8c7f3d1","c1fe8ee1a5a1ef00a9c4793ec26f17bd90342198","7530de27b87b961b51f01bd1299b7004d46e8823"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","b05c56a41b733e02a189c48895922b5bd8c7f3d1","c1fe8ee1a5a1ef00a9c4793ec26f17bd90342198","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}