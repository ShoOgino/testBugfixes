{"path":"lucene/src/test-framework/org/apache/lucene/util/automaton/DaciukMihovAutomatonBuilder#addSuffix(State,CharSequence,int).mjava","commits":[{"id":"60ba444201d2570214b6fcf1d15600dc1a01f548","date":1313868045,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/automaton/DaciukMihovAutomatonBuilder#addSuffix(State,CharSequence,int).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Add a suffix of <code>current</code> starting at <code>fromIndex</code>\n   * (inclusive) to state <code>state</code>.\n   */\n  private void addSuffix(State state, CharSequence current, int fromIndex) {\n    final int len = current.length();\n    while (fromIndex < len) {\n      int cp = Character.codePointAt(current, fromIndex);\n      state = state.newState(cp);\n      fromIndex += Character.charCount(cp);\n    }\n    state.is_final = true;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7b91922b55d15444d554721b352861d028eb8278","date":1320421415,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test-framework/java/org/apache/lucene/util/automaton/DaciukMihovAutomatonBuilder#addSuffix(State,CharSequence,int).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/util/automaton/DaciukMihovAutomatonBuilder#addSuffix(State,CharSequence,int).mjava","sourceNew":"  /**\n   * Add a suffix of <code>current</code> starting at <code>fromIndex</code>\n   * (inclusive) to state <code>state</code>.\n   */\n  private void addSuffix(State state, CharSequence current, int fromIndex) {\n    final int len = current.length();\n    while (fromIndex < len) {\n      int cp = Character.codePointAt(current, fromIndex);\n      state = state.newState(cp);\n      fromIndex += Character.charCount(cp);\n    }\n    state.is_final = true;\n  }\n\n","sourceOld":"  /**\n   * Add a suffix of <code>current</code> starting at <code>fromIndex</code>\n   * (inclusive) to state <code>state</code>.\n   */\n  private void addSuffix(State state, CharSequence current, int fromIndex) {\n    final int len = current.length();\n    while (fromIndex < len) {\n      int cp = Character.codePointAt(current, fromIndex);\n      state = state.newState(cp);\n      fromIndex += Character.charCount(cp);\n    }\n    state.is_final = true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"60ba444201d2570214b6fcf1d15600dc1a01f548":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"7b91922b55d15444d554721b352861d028eb8278":["60ba444201d2570214b6fcf1d15600dc1a01f548"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7b91922b55d15444d554721b352861d028eb8278"]},"commit2Childs":{"60ba444201d2570214b6fcf1d15600dc1a01f548":["7b91922b55d15444d554721b352861d028eb8278"],"7b91922b55d15444d554721b352861d028eb8278":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["60ba444201d2570214b6fcf1d15600dc1a01f548"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}