{"path":"src/java/org/apache/solr/schema/UUIDField#toInternal(String).mjava","commits":[{"id":"ba8cc958bf3f205a3c17a0077196036e9f5a7498","date":1187940516,"type":0,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"src/java/org/apache/solr/schema/UUIDField#toInternal(String).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Generates a UUID if val is either null, empty or \"NEW\".\n   * \n   * Otherwise it behaves much like a StrField but checks that the value given\n   * is indeed a valid UUID.\n   * \n   * @param val The value of the field\n   * @see org.apache.solr.schema.FieldType#toInternal(java.lang.String)\n   */\n  @Override\n  public String toInternal(String val) {\n    if (val == null || 0==val.length() || NEW.equals(val)) {\n      return UUID.randomUUID().toString().toLowerCase();\n    } else {\n      // we do some basic validation if 'val' looks like an UUID\n      if (val.length() != 36 || val.charAt(8) != DASH || val.charAt(13) != DASH\n          || val.charAt(18) != DASH || val.charAt(23) != DASH) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n            \"Invalid UUID String: '\" + val + \"'\");\n      }\n\n      return val.toLowerCase();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/schema/UUIDField#toInternal(String).mjava","pathOld":"src/java/org/apache/solr/schema/UUIDField#toInternal(String).mjava","sourceNew":"  /**\n   * Generates a UUID if val is either null, empty or \"NEW\".\n   * \n   * Otherwise it behaves much like a StrField but checks that the value given\n   * is indeed a valid UUID.\n   * \n   * @param val The value of the field\n   * @see org.apache.solr.schema.FieldType#toInternal(java.lang.String)\n   */\n  @Override\n  public String toInternal(String val) {\n    if (val == null || 0==val.length() || NEW.equals(val)) {\n      return UUID.randomUUID().toString().toLowerCase();\n    } else {\n      // we do some basic validation if 'val' looks like an UUID\n      if (val.length() != 36 || val.charAt(8) != DASH || val.charAt(13) != DASH\n          || val.charAt(18) != DASH || val.charAt(23) != DASH) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n            \"Invalid UUID String: '\" + val + \"'\");\n      }\n\n      return val.toLowerCase();\n    }\n  }\n\n","sourceOld":"  /**\n   * Generates a UUID if val is either null, empty or \"NEW\".\n   * \n   * Otherwise it behaves much like a StrField but checks that the value given\n   * is indeed a valid UUID.\n   * \n   * @param val The value of the field\n   * @see org.apache.solr.schema.FieldType#toInternal(java.lang.String)\n   */\n  @Override\n  public String toInternal(String val) {\n    if (val == null || 0==val.length() || NEW.equals(val)) {\n      return UUID.randomUUID().toString().toLowerCase();\n    } else {\n      // we do some basic validation if 'val' looks like an UUID\n      if (val.length() != 36 || val.charAt(8) != DASH || val.charAt(13) != DASH\n          || val.charAt(18) != DASH || val.charAt(23) != DASH) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n            \"Invalid UUID String: '\" + val + \"'\");\n      }\n\n      return val.toLowerCase();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["ba8cc958bf3f205a3c17a0077196036e9f5a7498"],"ba8cc958bf3f205a3c17a0077196036e9f5a7498":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["ba8cc958bf3f205a3c17a0077196036e9f5a7498"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"ba8cc958bf3f205a3c17a0077196036e9f5a7498":["ad94625fb8d088209f46650c8097196fec67f00c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}