{"path":"src/java/org/apache/solr/core/JmxMonitoredMap#JmxMonitoredMap(String,JmxConfiguration).mjava","commits":[{"id":"6ec2a01e62b7b206d9466aafaf04d8a9d6aee77b","date":1217355237,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"src/java/org/apache/solr/core/JmxMonitoredMap#JmxMonitoredMap(String,JmxConfiguration).mjava","pathOld":"/dev/null","sourceNew":"  public JmxMonitoredMap(String coreName, JmxConfiguration jmxConfig) {\n    jmxRootName = \"solr\" + (coreName == null ? \"\" : \"/\" + coreName);\n\n    if (jmxConfig.agentId != null && jmxConfig.serviceUrl != null) {\n      throw new SolrException(\n              SolrException.ErrorCode.SERVER_ERROR,\n              \"Incorrect JMX Configuration in solrconfig.xml, both agentId and serviceUrl cannot be specified at the same time\");\n    }\n\n    if (jmxConfig.serviceUrl == null) {\n      List<MBeanServer> servers = null;\n\n      if (jmxConfig.agentId == null) {\n        // Try to find the first MBeanServer\n        servers = MBeanServerFactory.findMBeanServer(null);\n      } else if (jmxConfig.agentId != null) {\n        // Try to find the first MBean server with the given agentId\n        servers = MBeanServerFactory.findMBeanServer(jmxConfig.agentId);\n        // throw Exception if no servers were found with the given agentId\n        if (servers == null || servers.isEmpty())\n          throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n                  \"No JMX Servers found with agentId: \" + jmxConfig.agentId);\n      }\n\n      if (servers == null || servers.isEmpty()) {\n        LOG\n                .info(\"No JMX servers found, not exposing Solr information with JMX.\");\n        return;\n      }\n      server = servers.get(0);\n      LOG.info(\"JMX monitoring is enabled. Adding Solr mbeans to JMX Server: \"\n              + server);\n    } else {\n      try {\n        // Create a new MBeanServer with the given serviceUrl\n        server = MBeanServerFactory.newMBeanServer();\n        JMXConnectorServer connector = JMXConnectorServerFactory\n                .newJMXConnectorServer(new JMXServiceURL(jmxConfig.serviceUrl),\n                        null, server);\n        connector.start();\n        LOG.info(\"JMX monitoring is enabled at \" + jmxConfig.serviceUrl);\n      } catch (Exception e) {\n        // Release the reference\n        server = null;\n        throw new RuntimeException(\"Could not start JMX monitoring \", e);\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/core/JmxMonitoredMap#JmxMonitoredMap(String,JmxConfiguration).mjava","pathOld":"src/java/org/apache/solr/core/JmxMonitoredMap#JmxMonitoredMap(String,JmxConfiguration).mjava","sourceNew":"  public JmxMonitoredMap(String coreName, JmxConfiguration jmxConfig) {\n    jmxRootName = \"solr\" + (coreName == null ? \"\" : \"/\" + coreName);\n\n    if (jmxConfig.agentId != null && jmxConfig.serviceUrl != null) {\n      throw new SolrException(\n              SolrException.ErrorCode.SERVER_ERROR,\n              \"Incorrect JMX Configuration in solrconfig.xml, both agentId and serviceUrl cannot be specified at the same time\");\n    }\n\n    if (jmxConfig.serviceUrl == null) {\n      List<MBeanServer> servers = null;\n\n      if (jmxConfig.agentId == null) {\n        // Try to find the first MBeanServer\n        servers = MBeanServerFactory.findMBeanServer(null);\n      } else if (jmxConfig.agentId != null) {\n        // Try to find the first MBean server with the given agentId\n        servers = MBeanServerFactory.findMBeanServer(jmxConfig.agentId);\n        // throw Exception if no servers were found with the given agentId\n        if (servers == null || servers.isEmpty())\n          throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n                  \"No JMX Servers found with agentId: \" + jmxConfig.agentId);\n      }\n\n      if (servers == null || servers.isEmpty()) {\n        LOG\n                .info(\"No JMX servers found, not exposing Solr information with JMX.\");\n        return;\n      }\n      server = servers.get(0);\n      LOG.info(\"JMX monitoring is enabled. Adding Solr mbeans to JMX Server: \"\n              + server);\n    } else {\n      try {\n        // Create a new MBeanServer with the given serviceUrl\n        server = MBeanServerFactory.newMBeanServer();\n        JMXConnectorServer connector = JMXConnectorServerFactory\n                .newJMXConnectorServer(new JMXServiceURL(jmxConfig.serviceUrl),\n                        null, server);\n        connector.start();\n        LOG.info(\"JMX monitoring is enabled at \" + jmxConfig.serviceUrl);\n      } catch (Exception e) {\n        // Release the reference\n        server = null;\n        throw new RuntimeException(\"Could not start JMX monitoring \", e);\n      }\n    }\n  }\n\n","sourceOld":"  public JmxMonitoredMap(String coreName, JmxConfiguration jmxConfig) {\n    jmxRootName = \"solr\" + (coreName == null ? \"\" : \"/\" + coreName);\n\n    if (jmxConfig.agentId != null && jmxConfig.serviceUrl != null) {\n      throw new SolrException(\n              SolrException.ErrorCode.SERVER_ERROR,\n              \"Incorrect JMX Configuration in solrconfig.xml, both agentId and serviceUrl cannot be specified at the same time\");\n    }\n\n    if (jmxConfig.serviceUrl == null) {\n      List<MBeanServer> servers = null;\n\n      if (jmxConfig.agentId == null) {\n        // Try to find the first MBeanServer\n        servers = MBeanServerFactory.findMBeanServer(null);\n      } else if (jmxConfig.agentId != null) {\n        // Try to find the first MBean server with the given agentId\n        servers = MBeanServerFactory.findMBeanServer(jmxConfig.agentId);\n        // throw Exception if no servers were found with the given agentId\n        if (servers == null || servers.isEmpty())\n          throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n                  \"No JMX Servers found with agentId: \" + jmxConfig.agentId);\n      }\n\n      if (servers == null || servers.isEmpty()) {\n        LOG\n                .info(\"No JMX servers found, not exposing Solr information with JMX.\");\n        return;\n      }\n      server = servers.get(0);\n      LOG.info(\"JMX monitoring is enabled. Adding Solr mbeans to JMX Server: \"\n              + server);\n    } else {\n      try {\n        // Create a new MBeanServer with the given serviceUrl\n        server = MBeanServerFactory.newMBeanServer();\n        JMXConnectorServer connector = JMXConnectorServerFactory\n                .newJMXConnectorServer(new JMXServiceURL(jmxConfig.serviceUrl),\n                        null, server);\n        connector.start();\n        LOG.info(\"JMX monitoring is enabled at \" + jmxConfig.serviceUrl);\n      } catch (Exception e) {\n        // Release the reference\n        server = null;\n        throw new RuntimeException(\"Could not start JMX monitoring \", e);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"6ec2a01e62b7b206d9466aafaf04d8a9d6aee77b":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"ad94625fb8d088209f46650c8097196fec67f00c":["6ec2a01e62b7b206d9466aafaf04d8a9d6aee77b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["6ec2a01e62b7b206d9466aafaf04d8a9d6aee77b"],"6ec2a01e62b7b206d9466aafaf04d8a9d6aee77b":["ad94625fb8d088209f46650c8097196fec67f00c"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}