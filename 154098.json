{"path":"backwards/src/java/org/apache/lucene/util/AttributeSource#[A-extends-Attribute]_addAttribute(Class[A]).mjava","commits":[{"id":"480d01e5b0ef8efb136d51670fec297ae5ae2c9c","date":1268821447,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"backwards/src/java/org/apache/lucene/util/AttributeSource#[A-extends-Attribute]_addAttribute(Class[A]).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * The caller must pass in a Class&lt;? extends Attribute&gt; value.\n   * This method first checks if an instance of that class is \n   * already in this AttributeSource and returns it. Otherwise a\n   * new instance is created, added to this AttributeSource and returned. \n   */\n  public <A extends Attribute> A addAttribute(Class<A> attClass) {\n    AttributeImpl attImpl = attributes.get(attClass);\n    if (attImpl == null) {\n      if (!(attClass.isInterface() && Attribute.class.isAssignableFrom(attClass))) {\n        throw new IllegalArgumentException(\n          \"addAttribute() only accepts an interface that extends Attribute, but \" +\n          attClass.getName() + \" does not fulfil this contract.\"\n        );\n      }\n      addAttributeImpl(attImpl = this.factory.createAttributeInstance(attClass));\n    }\n    return attClass.cast(attImpl);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/java/org/apache/lucene/util/AttributeSource#[A-extends-Attribute]_addAttribute(Class[A]).mjava","pathOld":"backwards/src/java/org/apache/lucene/util/AttributeSource#[A-extends-Attribute]_addAttribute(Class[A]).mjava","sourceNew":"  /**\n   * The caller must pass in a Class&lt;? extends Attribute&gt; value.\n   * This method first checks if an instance of that class is \n   * already in this AttributeSource and returns it. Otherwise a\n   * new instance is created, added to this AttributeSource and returned. \n   */\n  public <A extends Attribute> A addAttribute(Class<A> attClass) {\n    AttributeImpl attImpl = attributes.get(attClass);\n    if (attImpl == null) {\n      if (!(attClass.isInterface() && Attribute.class.isAssignableFrom(attClass))) {\n        throw new IllegalArgumentException(\n          \"addAttribute() only accepts an interface that extends Attribute, but \" +\n          attClass.getName() + \" does not fulfil this contract.\"\n        );\n      }\n      addAttributeImpl(attImpl = this.factory.createAttributeInstance(attClass));\n    }\n    return attClass.cast(attImpl);\n  }\n\n","sourceOld":"  /**\n   * The caller must pass in a Class&lt;? extends Attribute&gt; value.\n   * This method first checks if an instance of that class is \n   * already in this AttributeSource and returns it. Otherwise a\n   * new instance is created, added to this AttributeSource and returned. \n   */\n  public <A extends Attribute> A addAttribute(Class<A> attClass) {\n    AttributeImpl attImpl = attributes.get(attClass);\n    if (attImpl == null) {\n      if (!(attClass.isInterface() && Attribute.class.isAssignableFrom(attClass))) {\n        throw new IllegalArgumentException(\n          \"addAttribute() only accepts an interface that extends Attribute, but \" +\n          attClass.getName() + \" does not fulfil this contract.\"\n        );\n      }\n      addAttributeImpl(attImpl = this.factory.createAttributeInstance(attClass));\n    }\n    return attClass.cast(attImpl);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"]},"commit2Childs":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}