{"path":"lucene/core/src/java/org/apache/lucene/util/CharsRef#subSequence(int,int).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/CharsRef#subSequence(int,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/CharsRef#subSequence(int,int).mjava","sourceNew":"  public CharSequence subSequence(int start, int end) {\n    return new CharsRef(chars, offset + start, offset + end - 1);\n  }\n\n","sourceOld":"  public CharSequence subSequence(int start, int end) {\n    return new CharsRef(chars, offset + start, offset + end - 1);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ecb9a70c11e1f9dea44bb46bc2f75ed0c2603b57","date":1338306244,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/CharsRef#subSequence(int,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/CharsRef#subSequence(int,int).mjava","sourceNew":"  public CharSequence subSequence(int start, int end) {\n    // NOTE: must do a real check here to meet the specs of CharSequence\n    if (start < 0 || end > length || start > end) {\n      throw new IndexOutOfBoundsException();\n    }\n    return new CharsRef(chars, offset + start, offset + end);\n  }\n\n","sourceOld":"  public CharSequence subSequence(int start, int end) {\n    return new CharsRef(chars, offset + start, offset + end - 1);\n  }\n\n","bugFix":["a1b3a24d5d9b47345473ff564f5cc127a7b526b4"],"bugIntro":["8ac870f1b2b56640544c830e5957b1ccd7812135"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7530de27b87b961b51f01bd1299b7004d46e8823","date":1355236261,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/CharsRef#subSequence(int,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/CharsRef#subSequence(int,int).mjava","sourceNew":"  @Override\n  public CharSequence subSequence(int start, int end) {\n    // NOTE: must do a real check here to meet the specs of CharSequence\n    if (start < 0 || end > length || start > end) {\n      throw new IndexOutOfBoundsException();\n    }\n    return new CharsRef(chars, offset + start, offset + end);\n  }\n\n","sourceOld":"  public CharSequence subSequence(int start, int end) {\n    // NOTE: must do a real check here to meet the specs of CharSequence\n    if (start < 0 || end > length || start > end) {\n      throw new IndexOutOfBoundsException();\n    }\n    return new CharsRef(chars, offset + start, offset + end);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/CharsRef#subSequence(int,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/CharsRef#subSequence(int,int).mjava","sourceNew":"  @Override\n  public CharSequence subSequence(int start, int end) {\n    // NOTE: must do a real check here to meet the specs of CharSequence\n    if (start < 0 || end > length || start > end) {\n      throw new IndexOutOfBoundsException();\n    }\n    return new CharsRef(chars, offset + start, offset + end);\n  }\n\n","sourceOld":"  public CharSequence subSequence(int start, int end) {\n    // NOTE: must do a real check here to meet the specs of CharSequence\n    if (start < 0 || end > length || start > end) {\n      throw new IndexOutOfBoundsException();\n    }\n    return new CharsRef(chars, offset + start, offset + end);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"8ac870f1b2b56640544c830e5957b1ccd7812135","date":1357759883,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/CharsRef#subSequence(int,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/CharsRef#subSequence(int,int).mjava","sourceNew":"  @Override\n  public CharSequence subSequence(int start, int end) {\n    // NOTE: must do a real check here to meet the specs of CharSequence\n    if (start < 0 || end > length || start > end) {\n      throw new IndexOutOfBoundsException();\n    }\n    return new CharsRef(chars, offset + start, end - start);\n  }\n\n","sourceOld":"  @Override\n  public CharSequence subSequence(int start, int end) {\n    // NOTE: must do a real check here to meet the specs of CharSequence\n    if (start < 0 || end > length || start > end) {\n      throw new IndexOutOfBoundsException();\n    }\n    return new CharsRef(chars, offset + start, offset + end);\n  }\n\n","bugFix":["ecb9a70c11e1f9dea44bb46bc2f75ed0c2603b57"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4e6354dd7c71fe122926fc53d7d29f715b1283db","date":1357915185,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/CharsRef#subSequence(int,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/CharsRef#subSequence(int,int).mjava","sourceNew":"  @Override\n  public CharSequence subSequence(int start, int end) {\n    // NOTE: must do a real check here to meet the specs of CharSequence\n    if (start < 0 || end > length || start > end) {\n      throw new IndexOutOfBoundsException();\n    }\n    return new CharsRef(chars, offset + start, end - start);\n  }\n\n","sourceOld":"  @Override\n  public CharSequence subSequence(int start, int end) {\n    // NOTE: must do a real check here to meet the specs of CharSequence\n    if (start < 0 || end > length || start > end) {\n      throw new IndexOutOfBoundsException();\n    }\n    return new CharsRef(chars, offset + start, offset + end);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"456d7e7092cb043c740b4674301660ee8abc26fe","date":1517645879,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/CharsRef#subSequence(int,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/CharsRef#subSequence(int,int).mjava","sourceNew":"  @Override\n  public CharSequence subSequence(int start, int end) {\n    // NOTE: must do a real check here to meet the specs of CharSequence\n    FutureObjects.checkFromToIndex(start, end, length);\n    return new CharsRef(chars, offset + start, end - start);\n  }\n\n","sourceOld":"  @Override\n  public CharSequence subSequence(int start, int end) {\n    // NOTE: must do a real check here to meet the specs of CharSequence\n    if (start < 0 || end > length || start > end) {\n      throw new IndexOutOfBoundsException();\n    }\n    return new CharsRef(chars, offset + start, end - start);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b88a121b875f9ae2ac50f85cf46dcb680f126357","date":1555416009,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/CharsRef#subSequence(int,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/CharsRef#subSequence(int,int).mjava","sourceNew":"  @Override\n  public CharSequence subSequence(int start, int end) {\n    // NOTE: must do a real check here to meet the specs of CharSequence\n    Objects.checkFromToIndex(start, end, length);\n    return new CharsRef(chars, offset + start, end - start);\n  }\n\n","sourceOld":"  @Override\n  public CharSequence subSequence(int start, int end) {\n    // NOTE: must do a real check here to meet the specs of CharSequence\n    FutureObjects.checkFromToIndex(start, end, length);\n    return new CharsRef(chars, offset + start, end - start);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["ecb9a70c11e1f9dea44bb46bc2f75ed0c2603b57","7530de27b87b961b51f01bd1299b7004d46e8823"],"b88a121b875f9ae2ac50f85cf46dcb680f126357":["456d7e7092cb043c740b4674301660ee8abc26fe"],"456d7e7092cb043c740b4674301660ee8abc26fe":["8ac870f1b2b56640544c830e5957b1ccd7812135"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ecb9a70c11e1f9dea44bb46bc2f75ed0c2603b57":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"7530de27b87b961b51f01bd1299b7004d46e8823":["ecb9a70c11e1f9dea44bb46bc2f75ed0c2603b57"],"4e6354dd7c71fe122926fc53d7d29f715b1283db":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","8ac870f1b2b56640544c830e5957b1ccd7812135"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b88a121b875f9ae2ac50f85cf46dcb680f126357"],"8ac870f1b2b56640544c830e5957b1ccd7812135":["7530de27b87b961b51f01bd1299b7004d46e8823"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["4e6354dd7c71fe122926fc53d7d29f715b1283db"],"b88a121b875f9ae2ac50f85cf46dcb680f126357":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"456d7e7092cb043c740b4674301660ee8abc26fe":["b88a121b875f9ae2ac50f85cf46dcb680f126357"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["ecb9a70c11e1f9dea44bb46bc2f75ed0c2603b57"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"ecb9a70c11e1f9dea44bb46bc2f75ed0c2603b57":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","7530de27b87b961b51f01bd1299b7004d46e8823"],"7530de27b87b961b51f01bd1299b7004d46e8823":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","8ac870f1b2b56640544c830e5957b1ccd7812135"],"4e6354dd7c71fe122926fc53d7d29f715b1283db":[],"8ac870f1b2b56640544c830e5957b1ccd7812135":["456d7e7092cb043c740b4674301660ee8abc26fe","4e6354dd7c71fe122926fc53d7d29f715b1283db"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4e6354dd7c71fe122926fc53d7d29f715b1283db","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}