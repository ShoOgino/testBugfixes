{"path":"src/java/org/apache/lucene/analysis/CharArraySet#getSlot(char[],int,int).mjava","commits":[{"id":"050b03edbe9b8423ff4c09685c6f03d900e86b83","date":1195514584,"type":1,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/CharArraySet#getSlot(char[],int,int).mjava","pathOld":"src/java/org/apache/lucene/analysis/CharArraySet#contains(char[],int).mjava","sourceNew":"  private int getSlot(char[] text, int off, int len) {\n    int code = getHashCode(text, len);\n    int pos = code & (entries.length-1);\n    char[] text2 = entries[pos];\n    if (text2 != null && !equals(text, off, len, text2)) {\n      final int inc = ((code>>8)+code)|1;\n      do {\n        code += inc;\n        pos = code & (entries.length-1);\n        text2 = entries[pos];\n      } while (text2 != null && !equals(text, off, len, text2));\n    }\n    return pos;\n  }\n\n","sourceOld":"  /** Returns true if the characters in text up to length\n   *  len is present in the set. */\n  public boolean contains(char[] text, int len) {\n    int code = getHashCode(text, len);\n    int pos = code & mask;\n    char[] text2 = entries[pos];\n    if (text2 != null && !equals(text, len, text2)) {\n      final int inc = ((code>>8)+code)|1;\n      do {\n        code += inc;\n        pos = code & mask;\n        text2 = entries[pos];\n      } while (text2 != null && !equals(text, len, text2));\n    }\n    return text2 != null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b9d74f8959bf981a44d81bdca4690869cd137de2","date":1202220152,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/CharArraySet#getSlot(char[],int,int).mjava","pathOld":"src/java/org/apache/lucene/analysis/CharArraySet#getSlot(char[],int,int).mjava","sourceNew":"  private int getSlot(char[] text, int off, int len) {\n    int code = getHashCode(text, off, len);\n    int pos = code & (entries.length-1);\n    char[] text2 = entries[pos];\n    if (text2 != null && !equals(text, off, len, text2)) {\n      final int inc = ((code>>8)+code)|1;\n      do {\n        code += inc;\n        pos = code & (entries.length-1);\n        text2 = entries[pos];\n      } while (text2 != null && !equals(text, off, len, text2));\n    }\n    return pos;\n  }\n\n","sourceOld":"  private int getSlot(char[] text, int off, int len) {\n    int code = getHashCode(text, len);\n    int pos = code & (entries.length-1);\n    char[] text2 = entries[pos];\n    if (text2 != null && !equals(text, off, len, text2)) {\n      final int inc = ((code>>8)+code)|1;\n      do {\n        code += inc;\n        pos = code & (entries.length-1);\n        text2 = entries[pos];\n      } while (text2 != null && !equals(text, off, len, text2));\n    }\n    return pos;\n  }\n\n","bugFix":["050b03edbe9b8423ff4c09685c6f03d900e86b83"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3c09067bd60a59f680992d62794689898c0148ac","date":1265200673,"type":5,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/CharArrayMap#getSlot(char[],int,int).mjava","pathOld":"src/java/org/apache/lucene/analysis/CharArraySet#getSlot(char[],int,int).mjava","sourceNew":"  private int getSlot(char[] text, int off, int len) {\n    int code = getHashCode(text, off, len);\n    int pos = code & (keys.length-1);\n    char[] text2 = keys[pos];\n    if (text2 != null && !equals(text, off, len, text2)) {\n      final int inc = ((code>>8)+code)|1;\n      do {\n        code += inc;\n        pos = code & (keys.length-1);\n        text2 = keys[pos];\n      } while (text2 != null && !equals(text, off, len, text2));\n    }\n    return pos;\n  }\n\n","sourceOld":"  private int getSlot(char[] text, int off, int len) {\n    int code = getHashCode(text, off, len);\n    int pos = code & (entries.length-1);\n    char[] text2 = entries[pos];\n    if (text2 != null && !equals(text, off, len, text2)) {\n      final int inc = ((code>>8)+code)|1;\n      do {\n        code += inc;\n        pos = code & (entries.length-1);\n        text2 = entries[pos];\n      } while (text2 != null && !equals(text, off, len, text2));\n    }\n    return pos;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3c09067bd60a59f680992d62794689898c0148ac":["b9d74f8959bf981a44d81bdca4690869cd137de2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"050b03edbe9b8423ff4c09685c6f03d900e86b83":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b9d74f8959bf981a44d81bdca4690869cd137de2":["050b03edbe9b8423ff4c09685c6f03d900e86b83"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3c09067bd60a59f680992d62794689898c0148ac"]},"commit2Childs":{"3c09067bd60a59f680992d62794689898c0148ac":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["050b03edbe9b8423ff4c09685c6f03d900e86b83"],"050b03edbe9b8423ff4c09685c6f03d900e86b83":["b9d74f8959bf981a44d81bdca4690869cd137de2"],"b9d74f8959bf981a44d81bdca4690869cd137de2":["3c09067bd60a59f680992d62794689898c0148ac"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}