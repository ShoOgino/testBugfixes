{"path":"lucene/core/src/java/org/apache/lucene/search/TermQuery#createWeight(IndexSearcher,boolean).mjava","commits":[{"id":"fb17639909a369c1e64866842e5c213440acc17e","date":1423238093,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/TermQuery#createWeight(IndexSearcher,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/TermQuery#createWeight(IndexSearcher).mjava","sourceNew":"  @Override\n  public Weight createWeight(IndexSearcher searcher, boolean needsScores) throws IOException {\n    final IndexReaderContext context = searcher.getTopReaderContext();\n    final TermContext termState;\n    if (perReaderTermState == null\n        || perReaderTermState.topReaderContext != context) {\n      // make TermQuery single-pass if we don't have a PRTS or if the context\n      // differs!\n      termState = TermContext.build(context, term);\n    } else {\n      // PRTS was pre-build for this IS\n      termState = this.perReaderTermState;\n    }\n    \n    // we must not ignore the given docFreq - if set use the given value (lie)\n    if (docFreq != -1) termState.setDocFreq(docFreq);\n    \n    return new TermWeight(searcher, needsScores, termState);\n  }\n\n","sourceOld":"  @Override\n  public Weight createWeight(IndexSearcher searcher) throws IOException {\n    final IndexReaderContext context = searcher.getTopReaderContext();\n    final TermContext termState;\n    if (perReaderTermState == null\n        || perReaderTermState.topReaderContext != context) {\n      // make TermQuery single-pass if we don't have a PRTS or if the context\n      // differs!\n      termState = TermContext.build(context, term);\n    } else {\n      // PRTS was pre-build for this IS\n      termState = this.perReaderTermState;\n    }\n    \n    // we must not ignore the given docFreq - if set use the given value (lie)\n    if (docFreq != -1) termState.setDocFreq(docFreq);\n    \n    return new TermWeight(searcher, termState);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"954e59be3da8dc1b046646ad7af4b466852009d3","date":1423482367,"type":5,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/TermQuery#createWeight(IndexSearcher,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/TermQuery#createWeight(IndexSearcher,boolean).mjava","sourceNew":"  @Override\n  public Weight createWeight(IndexSearcher searcher, int postingsFlags) throws IOException {\n    final IndexReaderContext context = searcher.getTopReaderContext();\n    final TermContext termState;\n    if (perReaderTermState == null\n        || perReaderTermState.topReaderContext != context) {\n      // make TermQuery single-pass if we don't have a PRTS or if the context\n      // differs!\n      termState = TermContext.build(context, term);\n    } else {\n      // PRTS was pre-build for this IS\n      termState = this.perReaderTermState;\n    }\n    \n    // we must not ignore the given docFreq - if set use the given value (lie)\n    if (docFreq != -1) termState.setDocFreq(docFreq);\n    \n    return new TermWeight(searcher, postingsFlags, termState);\n  }\n\n","sourceOld":"  @Override\n  public Weight createWeight(IndexSearcher searcher, boolean needsScores) throws IOException {\n    final IndexReaderContext context = searcher.getTopReaderContext();\n    final TermContext termState;\n    if (perReaderTermState == null\n        || perReaderTermState.topReaderContext != context) {\n      // make TermQuery single-pass if we don't have a PRTS or if the context\n      // differs!\n      termState = TermContext.build(context, term);\n    } else {\n      // PRTS was pre-build for this IS\n      termState = this.perReaderTermState;\n    }\n    \n    // we must not ignore the given docFreq - if set use the given value (lie)\n    if (docFreq != -1) termState.setDocFreq(docFreq);\n    \n    return new TermWeight(searcher, needsScores, termState);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"6a47d642ab24da1a811adce4bda9cc52c520ca13","date":1423483323,"type":1,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/TermQuery#createWeight(IndexSearcher,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/TermQuery#createWeight(IndexSearcher,int).mjava","sourceNew":"  @Override\n  public Weight createWeight(IndexSearcher searcher, boolean needsScores) throws IOException {\n    final IndexReaderContext context = searcher.getTopReaderContext();\n    final TermContext termState;\n    if (perReaderTermState == null\n        || perReaderTermState.topReaderContext != context) {\n      // make TermQuery single-pass if we don't have a PRTS or if the context\n      // differs!\n      termState = TermContext.build(context, term);\n    } else {\n      // PRTS was pre-build for this IS\n      termState = this.perReaderTermState;\n    }\n    \n    // we must not ignore the given docFreq - if set use the given value (lie)\n    if (docFreq != -1) termState.setDocFreq(docFreq);\n    \n    return new TermWeight(searcher, needsScores, termState);\n  }\n\n","sourceOld":"  @Override\n  public Weight createWeight(IndexSearcher searcher, int postingsFlags) throws IOException {\n    final IndexReaderContext context = searcher.getTopReaderContext();\n    final TermContext termState;\n    if (perReaderTermState == null\n        || perReaderTermState.topReaderContext != context) {\n      // make TermQuery single-pass if we don't have a PRTS or if the context\n      // differs!\n      termState = TermContext.build(context, term);\n    } else {\n      // PRTS was pre-build for this IS\n      termState = this.perReaderTermState;\n    }\n    \n    // we must not ignore the given docFreq - if set use the given value (lie)\n    if (docFreq != -1) termState.setDocFreq(docFreq);\n    \n    return new TermWeight(searcher, postingsFlags, termState);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"365f98746545c0785c9778597f8558f5f91db4ad","date":1429195989,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/TermQuery#createWeight(IndexSearcher,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/TermQuery#createWeight(IndexSearcher,boolean).mjava","sourceNew":"  @Override\n  public Weight createWeight(IndexSearcher searcher, boolean needsScores) throws IOException {\n    final IndexReaderContext context = searcher.getTopReaderContext();\n    final TermContext termState;\n    if (perReaderTermState == null\n        || perReaderTermState.topReaderContext != context) {\n      // make TermQuery single-pass if we don't have a PRTS or if the context\n      // differs!\n      termState = TermContext.build(context, term);\n    } else {\n      // PRTS was pre-build for this IS\n      termState = this.perReaderTermState;\n    }\n    \n    return new TermWeight(searcher, needsScores, termState);\n  }\n\n","sourceOld":"  @Override\n  public Weight createWeight(IndexSearcher searcher, boolean needsScores) throws IOException {\n    final IndexReaderContext context = searcher.getTopReaderContext();\n    final TermContext termState;\n    if (perReaderTermState == null\n        || perReaderTermState.topReaderContext != context) {\n      // make TermQuery single-pass if we don't have a PRTS or if the context\n      // differs!\n      termState = TermContext.build(context, term);\n    } else {\n      // PRTS was pre-build for this IS\n      termState = this.perReaderTermState;\n    }\n    \n    // we must not ignore the given docFreq - if set use the given value (lie)\n    if (docFreq != -1) termState.setDocFreq(docFreq);\n    \n    return new TermWeight(searcher, needsScores, termState);\n  }\n\n","bugFix":["0f3cee3d20b0c786e6fca20539454262e29edcab","51f5280f31484820499077f41fcdfe92d527d9dc","fa1a999d6674423e5c4ac858b410283f6fe03f20"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0ab7a7b7d9840c6df78aaf2d36b9e8765da1069c","date":1433506692,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/TermQuery#createWeight(IndexSearcher,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/TermQuery#createWeight(IndexSearcher,boolean).mjava","sourceNew":"  @Override\n  public Weight createWeight(IndexSearcher searcher, boolean needsScores) throws IOException {\n    final IndexReaderContext context = searcher.getTopReaderContext();\n    final TermContext termState;\n    if (perReaderTermState == null\n        || perReaderTermState.topReaderContext != context) {\n      // make TermQuery single-pass if we don't have a PRTS or if the context\n      // differs!\n      termState = TermContext.build(context, term);\n    } else {\n      // PRTS was pre-build for this IS\n      termState = this.perReaderTermState;\n    }\n\n    return new TermWeight(searcher, needsScores, termState);\n  }\n\n","sourceOld":"  @Override\n  public Weight createWeight(IndexSearcher searcher, boolean needsScores) throws IOException {\n    final IndexReaderContext context = searcher.getTopReaderContext();\n    final TermContext termState;\n    if (perReaderTermState == null\n        || perReaderTermState.topReaderContext != context) {\n      // make TermQuery single-pass if we don't have a PRTS or if the context\n      // differs!\n      termState = TermContext.build(context, term);\n    } else {\n      // PRTS was pre-build for this IS\n      termState = this.perReaderTermState;\n    }\n    \n    return new TermWeight(searcher, needsScores, termState);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"02e175abd2c4c1611c5a9647486ae8ba249a94c1","date":1468327116,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/TermQuery#createWeight(IndexSearcher,boolean,float).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/TermQuery#createWeight(IndexSearcher,boolean).mjava","sourceNew":"  @Override\n  public Weight createWeight(IndexSearcher searcher, boolean needsScores, float boost) throws IOException {\n    final IndexReaderContext context = searcher.getTopReaderContext();\n    final TermContext termState;\n    if (perReaderTermState == null\n        || perReaderTermState.topReaderContext != context) {\n      // make TermQuery single-pass if we don't have a PRTS or if the context\n      // differs!\n      termState = TermContext.build(context, term);\n    } else {\n      // PRTS was pre-build for this IS\n      termState = this.perReaderTermState;\n    }\n\n    return new TermWeight(searcher, needsScores, boost, termState);\n  }\n\n","sourceOld":"  @Override\n  public Weight createWeight(IndexSearcher searcher, boolean needsScores) throws IOException {\n    final IndexReaderContext context = searcher.getTopReaderContext();\n    final TermContext termState;\n    if (perReaderTermState == null\n        || perReaderTermState.topReaderContext != context) {\n      // make TermQuery single-pass if we don't have a PRTS or if the context\n      // differs!\n      termState = TermContext.build(context, term);\n    } else {\n      // PRTS was pre-build for this IS\n      termState = this.perReaderTermState;\n    }\n\n    return new TermWeight(searcher, needsScores, termState);\n  }\n\n","bugFix":null,"bugIntro":["3bd3db3e8f35bef1d4d3f0411933b3190297302a"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":4,"author":"Kevin Risden","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/search/TermQuery#createWeight(IndexSearcher,boolean).mjava","sourceNew":null,"sourceOld":"  @Override\n  public Weight createWeight(IndexSearcher searcher, boolean needsScores) throws IOException {\n    final IndexReaderContext context = searcher.getTopReaderContext();\n    final TermContext termState;\n    if (perReaderTermState == null\n        || perReaderTermState.topReaderContext != context) {\n      // make TermQuery single-pass if we don't have a PRTS or if the context\n      // differs!\n      termState = TermContext.build(context, term);\n    } else {\n      // PRTS was pre-build for this IS\n      termState = this.perReaderTermState;\n    }\n\n    return new TermWeight(searcher, needsScores, termState);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6a47d642ab24da1a811adce4bda9cc52c520ca13":["954e59be3da8dc1b046646ad7af4b466852009d3"],"fb17639909a369c1e64866842e5c213440acc17e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"365f98746545c0785c9778597f8558f5f91db4ad":["6a47d642ab24da1a811adce4bda9cc52c520ca13"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"02e175abd2c4c1611c5a9647486ae8ba249a94c1":["0ab7a7b7d9840c6df78aaf2d36b9e8765da1069c"],"0ab7a7b7d9840c6df78aaf2d36b9e8765da1069c":["365f98746545c0785c9778597f8558f5f91db4ad"],"954e59be3da8dc1b046646ad7af4b466852009d3":["fb17639909a369c1e64866842e5c213440acc17e"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["0ab7a7b7d9840c6df78aaf2d36b9e8765da1069c","02e175abd2c4c1611c5a9647486ae8ba249a94c1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["02e175abd2c4c1611c5a9647486ae8ba249a94c1"]},"commit2Childs":{"6a47d642ab24da1a811adce4bda9cc52c520ca13":["365f98746545c0785c9778597f8558f5f91db4ad"],"fb17639909a369c1e64866842e5c213440acc17e":["954e59be3da8dc1b046646ad7af4b466852009d3"],"365f98746545c0785c9778597f8558f5f91db4ad":["0ab7a7b7d9840c6df78aaf2d36b9e8765da1069c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["fb17639909a369c1e64866842e5c213440acc17e"],"02e175abd2c4c1611c5a9647486ae8ba249a94c1":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"0ab7a7b7d9840c6df78aaf2d36b9e8765da1069c":["02e175abd2c4c1611c5a9647486ae8ba249a94c1","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"954e59be3da8dc1b046646ad7af4b466852009d3":["6a47d642ab24da1a811adce4bda9cc52c520ca13"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}