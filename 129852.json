{"path":"src/java/org/apache/lucene/search/PhrasePositions#nextPosition().mjava","commits":[{"id":"91109046a59c58ee0ee5d0d2767b08d1f30d6702","date":1000830588,"type":0,"author":"Jason van Zyl","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/PhrasePositions#nextPosition().mjava","pathOld":"/dev/null","sourceNew":"  final boolean nextPosition() throws IOException {\n    if (count-- > 0) {\t\t\t\t  // read subsequent pos's\n      position = tp.nextPosition() - offset;\n      return true;\n    } else\n      return false;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b3e493496c35fb4f17315b8827d1ba1ae1585554","date":1177392767,"type":3,"author":"Doron Cohen","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/PhrasePositions#nextPosition().mjava","pathOld":"src/java/org/apache/lucene/search/PhrasePositions#nextPosition().mjava","sourceNew":"  /**\n   * Go to next location of this term current document, and set \n   * <code>position</code> as <code>location - offset</code>, so that a \n   * matching exact phrase is easily identified when all PhrasePositions \n   * have exactly the same <code>position</code>.\n   */\n  final boolean nextPosition() throws IOException {\n    if (count-- > 0) {\t\t\t\t  // read subsequent pos's\n      position = tp.nextPosition() - offset;\n      return true;\n    } else\n      return false;\n  }\n\n","sourceOld":"  final boolean nextPosition() throws IOException {\n    if (count-- > 0) {\t\t\t\t  // read subsequent pos's\n      position = tp.nextPosition() - offset;\n      return true;\n    } else\n      return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/PhrasePositions#nextPosition().mjava","pathOld":"src/java/org/apache/lucene/search/PhrasePositions#nextPosition().mjava","sourceNew":"  /**\n   * Go to next location of this term current document, and set \n   * <code>position</code> as <code>location - offset</code>, so that a \n   * matching exact phrase is easily identified when all PhrasePositions \n   * have exactly the same <code>position</code>.\n   */\n  final boolean nextPosition() throws IOException {\n    if (count-- > 0) {\t\t\t\t  // read subsequent pos's\n      position = tp.nextPosition() - offset;\n      return true;\n    } else\n      return false;\n  }\n\n","sourceOld":"  /**\n   * Go to next location of this term current document, and set \n   * <code>position</code> as <code>location - offset</code>, so that a \n   * matching exact phrase is easily identified when all PhrasePositions \n   * have exactly the same <code>position</code>.\n   */\n  final boolean nextPosition() throws IOException {\n    if (count-- > 0) {\t\t\t\t  // read subsequent pos's\n      position = tp.nextPosition() - offset;\n      return true;\n    } else\n      return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b3e493496c35fb4f17315b8827d1ba1ae1585554":["91109046a59c58ee0ee5d0d2767b08d1f30d6702"],"91109046a59c58ee0ee5d0d2767b08d1f30d6702":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["b3e493496c35fb4f17315b8827d1ba1ae1585554"]},"commit2Childs":{"b3e493496c35fb4f17315b8827d1ba1ae1585554":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"91109046a59c58ee0ee5d0d2767b08d1f30d6702":["b3e493496c35fb4f17315b8827d1ba1ae1585554"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["91109046a59c58ee0ee5d0d2767b08d1f30d6702"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}