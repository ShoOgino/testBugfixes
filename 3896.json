{"path":"contrib/extraction/src/main/java/org/apache/solr/handler/extraction/ExtractingDocumentLoader#ExtractingDocumentLoader(SolrQueryRequest,UpdateRequestProcessor,TikaConfig,SolrContentHandlerFactory).mjava","commits":[{"id":"46dfcd540005e76a7db876d494ac74e82c476523","date":1229095104,"type":1,"author":"Grant Ingersoll","isMerge":false,"pathNew":"contrib/extraction/src/main/java/org/apache/solr/handler/extraction/ExtractingDocumentLoader#ExtractingDocumentLoader(SolrQueryRequest,UpdateRequestProcessor,TikaConfig,SolrContentHandlerFactory).mjava","pathOld":"contrib/extraction/src/main/java/org/apache/solr/handler/ExtractingDocumentLoader#ExtractingDocumentLoader(SolrQueryRequest,UpdateRequestProcessor,TikaConfig,SolrContentHandlerFactory).mjava","sourceNew":"  ExtractingDocumentLoader(SolrQueryRequest req, UpdateRequestProcessor processor,\n                           TikaConfig config, SolrContentHandlerFactory factory) {\n    this.params = req.getParams();\n    schema = req.getSchema();\n    this.config = config;\n    this.processor = processor;\n\n    templateAdd = new AddUpdateCommand();\n    templateAdd.allowDups = false;\n    templateAdd.overwriteCommitted = true;\n    templateAdd.overwritePending = true;\n\n    if (params.getBool(UpdateParams.OVERWRITE, true)) {\n      templateAdd.allowDups = false;\n      templateAdd.overwriteCommitted = true;\n      templateAdd.overwritePending = true;\n    } else {\n      templateAdd.allowDups = true;\n      templateAdd.overwriteCommitted = false;\n      templateAdd.overwritePending = false;\n    }\n    //this is lightweight\n    autoDetectParser = new AutoDetectParser(config);\n    this.factory = factory;\n  }\n\n","sourceOld":"  ExtractingDocumentLoader(SolrQueryRequest req, UpdateRequestProcessor processor,\n                           TikaConfig config, SolrContentHandlerFactory factory) {\n    this.params = req.getParams();\n    schema = req.getSchema();\n    this.config = config;\n    this.processor = processor;\n\n    templateAdd = new AddUpdateCommand();\n    templateAdd.allowDups = false;\n    templateAdd.overwriteCommitted = true;\n    templateAdd.overwritePending = true;\n\n    if (params.getBool(UpdateParams.OVERWRITE, true)) {\n      templateAdd.allowDups = false;\n      templateAdd.overwriteCommitted = true;\n      templateAdd.overwritePending = true;\n    } else {\n      templateAdd.allowDups = true;\n      templateAdd.overwriteCommitted = false;\n      templateAdd.overwritePending = false;\n    }\n    //this is lightweight\n    autoDetectParser = new AutoDetectParser(config);\n    this.factory = factory;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bfaaedeb31dd7b87efa9e64c9ce0b5a6d77ce353","date":1256309235,"type":3,"author":"Grant Ingersoll","isMerge":false,"pathNew":"contrib/extraction/src/main/java/org/apache/solr/handler/extraction/ExtractingDocumentLoader#ExtractingDocumentLoader(SolrQueryRequest,UpdateRequestProcessor,TikaConfig,SolrContentHandlerFactory).mjava","pathOld":"contrib/extraction/src/main/java/org/apache/solr/handler/extraction/ExtractingDocumentLoader#ExtractingDocumentLoader(SolrQueryRequest,UpdateRequestProcessor,TikaConfig,SolrContentHandlerFactory).mjava","sourceNew":"  public ExtractingDocumentLoader(SolrQueryRequest req, UpdateRequestProcessor processor,\n                           TikaConfig config, SolrContentHandlerFactory factory) {\n    this.params = req.getParams();\n    schema = req.getSchema();\n    this.config = config;\n    this.processor = processor;\n\n    templateAdd = new AddUpdateCommand();\n    templateAdd.allowDups = false;\n    templateAdd.overwriteCommitted = true;\n    templateAdd.overwritePending = true;\n\n    if (params.getBool(UpdateParams.OVERWRITE, true)) {\n      templateAdd.allowDups = false;\n      templateAdd.overwriteCommitted = true;\n      templateAdd.overwritePending = true;\n    } else {\n      templateAdd.allowDups = true;\n      templateAdd.overwriteCommitted = false;\n      templateAdd.overwritePending = false;\n    }\n    //this is lightweight\n    autoDetectParser = new AutoDetectParser(config);\n    this.factory = factory;\n  }\n\n","sourceOld":"  ExtractingDocumentLoader(SolrQueryRequest req, UpdateRequestProcessor processor,\n                           TikaConfig config, SolrContentHandlerFactory factory) {\n    this.params = req.getParams();\n    schema = req.getSchema();\n    this.config = config;\n    this.processor = processor;\n\n    templateAdd = new AddUpdateCommand();\n    templateAdd.allowDups = false;\n    templateAdd.overwriteCommitted = true;\n    templateAdd.overwritePending = true;\n\n    if (params.getBool(UpdateParams.OVERWRITE, true)) {\n      templateAdd.allowDups = false;\n      templateAdd.overwriteCommitted = true;\n      templateAdd.overwritePending = true;\n    } else {\n      templateAdd.allowDups = true;\n      templateAdd.overwriteCommitted = false;\n      templateAdd.overwritePending = false;\n    }\n    //this is lightweight\n    autoDetectParser = new AutoDetectParser(config);\n    this.factory = factory;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/contrib/extraction/src/main/java/org/apache/solr/handler/extraction/ExtractingDocumentLoader#ExtractingDocumentLoader(SolrQueryRequest,UpdateRequestProcessor,TikaConfig,SolrContentHandlerFactory).mjava","pathOld":"contrib/extraction/src/main/java/org/apache/solr/handler/extraction/ExtractingDocumentLoader#ExtractingDocumentLoader(SolrQueryRequest,UpdateRequestProcessor,TikaConfig,SolrContentHandlerFactory).mjava","sourceNew":"  public ExtractingDocumentLoader(SolrQueryRequest req, UpdateRequestProcessor processor,\n                           TikaConfig config, SolrContentHandlerFactory factory) {\n    this.params = req.getParams();\n    schema = req.getSchema();\n    this.config = config;\n    this.processor = processor;\n\n    templateAdd = new AddUpdateCommand();\n    templateAdd.allowDups = false;\n    templateAdd.overwriteCommitted = true;\n    templateAdd.overwritePending = true;\n\n    if (params.getBool(UpdateParams.OVERWRITE, true)) {\n      templateAdd.allowDups = false;\n      templateAdd.overwriteCommitted = true;\n      templateAdd.overwritePending = true;\n    } else {\n      templateAdd.allowDups = true;\n      templateAdd.overwriteCommitted = false;\n      templateAdd.overwritePending = false;\n    }\n    //this is lightweight\n    autoDetectParser = new AutoDetectParser(config);\n    this.factory = factory;\n  }\n\n","sourceOld":"  public ExtractingDocumentLoader(SolrQueryRequest req, UpdateRequestProcessor processor,\n                           TikaConfig config, SolrContentHandlerFactory factory) {\n    this.params = req.getParams();\n    schema = req.getSchema();\n    this.config = config;\n    this.processor = processor;\n\n    templateAdd = new AddUpdateCommand();\n    templateAdd.allowDups = false;\n    templateAdd.overwriteCommitted = true;\n    templateAdd.overwritePending = true;\n\n    if (params.getBool(UpdateParams.OVERWRITE, true)) {\n      templateAdd.allowDups = false;\n      templateAdd.overwriteCommitted = true;\n      templateAdd.overwritePending = true;\n    } else {\n      templateAdd.allowDups = true;\n      templateAdd.overwriteCommitted = false;\n      templateAdd.overwritePending = false;\n    }\n    //this is lightweight\n    autoDetectParser = new AutoDetectParser(config);\n    this.factory = factory;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"bfaaedeb31dd7b87efa9e64c9ce0b5a6d77ce353":["46dfcd540005e76a7db876d494ac74e82c476523"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["bfaaedeb31dd7b87efa9e64c9ce0b5a6d77ce353"],"46dfcd540005e76a7db876d494ac74e82c476523":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"bfaaedeb31dd7b87efa9e64c9ce0b5a6d77ce353":["ad94625fb8d088209f46650c8097196fec67f00c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["46dfcd540005e76a7db876d494ac74e82c476523"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"46dfcd540005e76a7db876d494ac74e82c476523":["bfaaedeb31dd7b87efa9e64c9ce0b5a6d77ce353"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}