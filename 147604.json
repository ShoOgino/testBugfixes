{"path":"solr/core/src/java/org/apache/solr/handler/IndexFetcher.FileFetcher#cleanup().mjava","commits":[{"id":"20f6b7cff3771384f27af0f059795d7e64aff6b9","date":1425498309,"type":1,"author":"Ramkumar Aiyengar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/IndexFetcher.FileFetcher#cleanup().mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/SnapPuller.FileFetcher#cleanup().mjava","sourceNew":"    /**\n     * cleanup everything\n     */\n    private void cleanup() {\n      try {\n        file.close();\n      } catch (Exception e) {/* no-op */\n        LOG.error(\"Error closing file: {}\", this.saveAs, e);\n      }\n      if (bytesDownloaded != size) {\n        //if the download is not complete then\n        //delete the file being downloaded\n        try {\n          file.delete();\n        } catch (Exception e) {\n          LOG.error(\"Error deleting file: {}\", this.saveAs, e);\n        }\n        //if the failure is due to a user abort it is returned normally else an exception is thrown\n        if (!aborted)\n          throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n              \"Unable to download \" + fileName + \" completely. Downloaded \"\n                  + bytesDownloaded + \"!=\" + size);\n      }\n    }\n\n","sourceOld":"    /**\n     * cleanup everything\n     */\n    private void cleanup() {\n      try {\n        file.close();\n      } catch (Exception e) {/* no-op */\n        LOG.error(\"Error closing file: {}\", this.saveAs, e);\n      }\n      if (bytesDownloaded != size) {\n        //if the download is not complete then\n        //delete the file being downloaded\n        try {\n          file.delete();\n        } catch (Exception e) {\n          LOG.error(\"Error deleting file: {}\", this.saveAs, e);\n        }\n        //if the failure is due to a user abort it is returned normally else an exception is thrown\n        if (!aborted)\n          throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n              \"Unable to download \" + fileName + \" completely. Downloaded \"\n                  + bytesDownloaded + \"!=\" + size);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":1,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/IndexFetcher.FileFetcher#cleanup().mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/SnapPuller.FileFetcher#cleanup().mjava","sourceNew":"    /**\n     * cleanup everything\n     */\n    private void cleanup() {\n      try {\n        file.close();\n      } catch (Exception e) {/* no-op */\n        LOG.error(\"Error closing file: {}\", this.saveAs, e);\n      }\n      if (bytesDownloaded != size) {\n        //if the download is not complete then\n        //delete the file being downloaded\n        try {\n          file.delete();\n        } catch (Exception e) {\n          LOG.error(\"Error deleting file: {}\", this.saveAs, e);\n        }\n        //if the failure is due to a user abort it is returned normally else an exception is thrown\n        if (!aborted)\n          throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n              \"Unable to download \" + fileName + \" completely. Downloaded \"\n                  + bytesDownloaded + \"!=\" + size);\n      }\n    }\n\n","sourceOld":"    /**\n     * cleanup everything\n     */\n    private void cleanup() {\n      try {\n        file.close();\n      } catch (Exception e) {/* no-op */\n        LOG.error(\"Error closing file: {}\", this.saveAs, e);\n      }\n      if (bytesDownloaded != size) {\n        //if the download is not complete then\n        //delete the file being downloaded\n        try {\n          file.delete();\n        } catch (Exception e) {\n          LOG.error(\"Error deleting file: {}\", this.saveAs, e);\n        }\n        //if the failure is due to a user abort it is returned normally else an exception is thrown\n        if (!aborted)\n          throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n              \"Unable to download \" + fileName + \" completely. Downloaded \"\n                  + bytesDownloaded + \"!=\" + size);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9c81f7e703d7ccca5bc78beb61253f0a8a22afd","date":1534976797,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/IndexFetcher.FileFetcher#cleanup().mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/IndexFetcher.FileFetcher#cleanup().mjava","sourceNew":"    /**\n     * cleanup everything\n     */\n    private void cleanup() {\n      try {\n        file.close();\n      } catch (Exception e) {/* no-op */\n        log.error(\"Error closing file: {}\", this.saveAs, e);\n      }\n      if (bytesDownloaded != size) {\n        //if the download is not complete then\n        //delete the file being downloaded\n        try {\n          file.delete();\n        } catch (Exception e) {\n          log.error(\"Error deleting file: {}\", this.saveAs, e);\n        }\n        //if the failure is due to a user abort it is returned normally else an exception is thrown\n        if (!aborted)\n          throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n              \"Unable to download \" + fileName + \" completely. Downloaded \"\n                  + bytesDownloaded + \"!=\" + size);\n      }\n    }\n\n","sourceOld":"    /**\n     * cleanup everything\n     */\n    private void cleanup() {\n      try {\n        file.close();\n      } catch (Exception e) {/* no-op */\n        LOG.error(\"Error closing file: {}\", this.saveAs, e);\n      }\n      if (bytesDownloaded != size) {\n        //if the download is not complete then\n        //delete the file being downloaded\n        try {\n          file.delete();\n        } catch (Exception e) {\n          LOG.error(\"Error deleting file: {}\", this.saveAs, e);\n        }\n        //if the failure is due to a user abort it is returned normally else an exception is thrown\n        if (!aborted)\n          throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n              \"Unable to download \" + fileName + \" completely. Downloaded \"\n                  + bytesDownloaded + \"!=\" + size);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","20f6b7cff3771384f27af0f059795d7e64aff6b9"],"20f6b7cff3771384f27af0f059795d7e64aff6b9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e9c81f7e703d7ccca5bc78beb61253f0a8a22afd"],"e9c81f7e703d7ccca5bc78beb61253f0a8a22afd":["20f6b7cff3771384f27af0f059795d7e64aff6b9"]},"commit2Childs":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"20f6b7cff3771384f27af0f059795d7e64aff6b9":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","e9c81f7e703d7ccca5bc78beb61253f0a8a22afd"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","20f6b7cff3771384f27af0f059795d7e64aff6b9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"e9c81f7e703d7ccca5bc78beb61253f0a8a22afd":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}