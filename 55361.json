{"path":"lucene/test-framework/src/java/org/apache/lucene/codecs/lucene3x/PreFlexRWTermVectorsWriter#startTerm(BytesRef,int).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/lucene3x/PreFlexRWTermVectorsWriter#startTerm(BytesRef,int).mjava","pathOld":"lucene/src/test-framework/java/org/apache/lucene/codecs/lucene3x/PreFlexRWTermVectorsWriter#startTerm(BytesRef,int).mjava","sourceNew":"  @Override\n  public void startTerm(BytesRef term, int freq) throws IOException {\n    final int prefix = StringHelper.bytesDifference(lastTerm, term);\n    final int suffix = term.length - prefix;\n    tvf.writeVInt(prefix);\n    tvf.writeVInt(suffix);\n    tvf.writeBytes(term.bytes, term.offset + prefix, suffix);\n    tvf.writeVInt(freq);\n    lastTerm.copyBytes(term);\n    lastPosition = lastOffset = 0;\n    \n    if (offsets && positions) {\n      // we might need to buffer if its a non-bulk merge\n      offsetStartBuffer = ArrayUtil.grow(offsetStartBuffer, freq);\n      offsetEndBuffer = ArrayUtil.grow(offsetEndBuffer, freq);\n      offsetIndex = 0;\n      offsetFreq = freq;\n    }\n  }\n\n","sourceOld":"  @Override\n  public void startTerm(BytesRef term, int freq) throws IOException {\n    final int prefix = StringHelper.bytesDifference(lastTerm, term);\n    final int suffix = term.length - prefix;\n    tvf.writeVInt(prefix);\n    tvf.writeVInt(suffix);\n    tvf.writeBytes(term.bytes, term.offset + prefix, suffix);\n    tvf.writeVInt(freq);\n    lastTerm.copyBytes(term);\n    lastPosition = lastOffset = 0;\n    \n    if (offsets && positions) {\n      // we might need to buffer if its a non-bulk merge\n      offsetStartBuffer = ArrayUtil.grow(offsetStartBuffer, freq);\n      offsetEndBuffer = ArrayUtil.grow(offsetEndBuffer, freq);\n      offsetIndex = 0;\n      offsetFreq = freq;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"57ae3024996ccdb3c36c42cb890e1efb37df4ce8","date":1338343651,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/lucene3x/PreFlexRWTermVectorsWriter#startTerm(BytesRef,int).mjava","sourceNew":null,"sourceOld":"  @Override\n  public void startTerm(BytesRef term, int freq) throws IOException {\n    final int prefix = StringHelper.bytesDifference(lastTerm, term);\n    final int suffix = term.length - prefix;\n    tvf.writeVInt(prefix);\n    tvf.writeVInt(suffix);\n    tvf.writeBytes(term.bytes, term.offset + prefix, suffix);\n    tvf.writeVInt(freq);\n    lastTerm.copyBytes(term);\n    lastPosition = lastOffset = 0;\n    \n    if (offsets && positions) {\n      // we might need to buffer if its a non-bulk merge\n      offsetStartBuffer = ArrayUtil.grow(offsetStartBuffer, freq);\n      offsetEndBuffer = ArrayUtil.grow(offsetEndBuffer, freq);\n      offsetIndex = 0;\n      offsetFreq = freq;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"57ae3024996ccdb3c36c42cb890e1efb37df4ce8":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["57ae3024996ccdb3c36c42cb890e1efb37df4ce8"]},"commit2Childs":{"57ae3024996ccdb3c36c42cb890e1efb37df4ce8":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["57ae3024996ccdb3c36c42cb890e1efb37df4ce8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}