{"path":"solr/contrib/analysis-extras/src/main/java/org/apache/solr/analysis/ICUNormalizer2FilterFactory#init(Map[String,String]).mjava","commits":[{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/analysis-extras/src/main/java/org/apache/solr/analysis/ICUNormalizer2FilterFactory#init(Map[String,String]).mjava","pathOld":"solr/contrib/analysis-extras/src/java/org/apache/solr/analysis/ICUNormalizer2FilterFactory#init(Map[String,String]).mjava","sourceNew":"  // TODO: support custom normalization\n  @Override\n  public void init(Map<String,String> args) {\n    super.init(args);\n    String name = args.get(\"name\");\n    if (name == null)\n      name = \"nfkc_cf\";\n    String mode = args.get(\"mode\");\n    if (mode == null)\n      mode = \"compose\";\n    \n    if (mode.equals(\"compose\"))\n      normalizer = Normalizer2.getInstance(null, name, Normalizer2.Mode.COMPOSE);\n    else if (mode.equals(\"decompose\"))\n      normalizer = Normalizer2.getInstance(null, name, Normalizer2.Mode.DECOMPOSE);\n    else \n      throw new SolrException(ErrorCode.SERVER_ERROR, \"Invalid mode: \" + mode);\n    \n    String filter = args.get(\"filter\");\n    if (filter != null) {\n      UnicodeSet set = new UnicodeSet(filter);\n      if (!set.isEmpty()) {\n        set.freeze();\n        normalizer = new FilteredNormalizer2(normalizer, set);\n      }\n    }\n  }\n\n","sourceOld":"  // TODO: support custom normalization\n  @Override\n  public void init(Map<String,String> args) {\n    super.init(args);\n    String name = args.get(\"name\");\n    if (name == null)\n      name = \"nfkc_cf\";\n    String mode = args.get(\"mode\");\n    if (mode == null)\n      mode = \"compose\";\n    \n    if (mode.equals(\"compose\"))\n      normalizer = Normalizer2.getInstance(null, name, Normalizer2.Mode.COMPOSE);\n    else if (mode.equals(\"decompose\"))\n      normalizer = Normalizer2.getInstance(null, name, Normalizer2.Mode.DECOMPOSE);\n    else \n      throw new SolrException(ErrorCode.SERVER_ERROR, \"Invalid mode: \" + mode);\n    \n    String filter = args.get(\"filter\");\n    if (filter != null) {\n      UnicodeSet set = new UnicodeSet(filter);\n      if (!set.isEmpty()) {\n        set.freeze();\n        normalizer = new FilteredNormalizer2(normalizer, set);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/analysis-extras/src/java/org/apache/solr/analysis/ICUNormalizer2FilterFactory#init(Map[String,String]).mjava","pathOld":"solr/contrib/analysis-extras/src/main/java/org/apache/solr/analysis/ICUNormalizer2FilterFactory#init(Map[String,String]).mjava","sourceNew":"  // TODO: support custom normalization\n  @Override\n  public void init(Map<String,String> args) {\n    super.init(args);\n    String name = args.get(\"name\");\n    if (name == null)\n      name = \"nfkc_cf\";\n    String mode = args.get(\"mode\");\n    if (mode == null)\n      mode = \"compose\";\n    \n    if (mode.equals(\"compose\"))\n      normalizer = Normalizer2.getInstance(null, name, Normalizer2.Mode.COMPOSE);\n    else if (mode.equals(\"decompose\"))\n      normalizer = Normalizer2.getInstance(null, name, Normalizer2.Mode.DECOMPOSE);\n    else \n      throw new SolrException(ErrorCode.SERVER_ERROR, \"Invalid mode: \" + mode);\n    \n    String filter = args.get(\"filter\");\n    if (filter != null) {\n      UnicodeSet set = new UnicodeSet(filter);\n      if (!set.isEmpty()) {\n        set.freeze();\n        normalizer = new FilteredNormalizer2(normalizer, set);\n      }\n    }\n  }\n\n","sourceOld":"  // TODO: support custom normalization\n  @Override\n  public void init(Map<String,String> args) {\n    super.init(args);\n    String name = args.get(\"name\");\n    if (name == null)\n      name = \"nfkc_cf\";\n    String mode = args.get(\"mode\");\n    if (mode == null)\n      mode = \"compose\";\n    \n    if (mode.equals(\"compose\"))\n      normalizer = Normalizer2.getInstance(null, name, Normalizer2.Mode.COMPOSE);\n    else if (mode.equals(\"decompose\"))\n      normalizer = Normalizer2.getInstance(null, name, Normalizer2.Mode.DECOMPOSE);\n    else \n      throw new SolrException(ErrorCode.SERVER_ERROR, \"Invalid mode: \" + mode);\n    \n    String filter = args.get(\"filter\");\n    if (filter != null) {\n      UnicodeSet set = new UnicodeSet(filter);\n      if (!set.isEmpty()) {\n        set.freeze();\n        normalizer = new FilteredNormalizer2(normalizer, set);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["a3776dccca01c11e7046323cfad46a3b4a471233","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a3776dccca01c11e7046323cfad46a3b4a471233":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":[],"a3776dccca01c11e7046323cfad46a3b4a471233":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","a3776dccca01c11e7046323cfad46a3b4a471233","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}