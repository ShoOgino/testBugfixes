{"path":"lucene/src/java/org/apache/lucene/index/IndexWriter#addDocument(Document).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriter#addDocument(Document).mjava","pathOld":"src/java/org/apache/lucene/index/IndexWriter#addDocument(Document).mjava","sourceNew":"  /**\n   * Adds a document to this index.  If the document contains more than\n   * {@link #setMaxFieldLength(int)} terms for a given field, the remainder are\n   * discarded.\n   *\n   * <p> Note that if an Exception is hit (for example disk full)\n   * then the index will be consistent, but this document\n   * may not have been added.  Furthermore, it's possible\n   * the index will have one segment in non-compound format\n   * even when using compound files (when a merge has\n   * partially succeeded).</p>\n   *\n   * <p> This method periodically flushes pending documents\n   * to the Directory (see <a href=\"#flush\">above</a>), and\n   * also periodically triggers segment merges in the index\n   * according to the {@link MergePolicy} in use.</p>\n   *\n   * <p>Merges temporarily consume space in the\n   * directory. The amount of space required is up to 1X the\n   * size of all segments being merged, when no\n   * readers/searchers are open against the index, and up to\n   * 2X the size of all segments being merged when\n   * readers/searchers are open against the index (see\n   * {@link #optimize()} for details). The sequence of\n   * primitive merge operations performed is governed by the\n   * merge policy.\n   *\n   * <p>Note that each term in the document can be no longer\n   * than 16383 characters, otherwise an\n   * IllegalArgumentException will be thrown.</p>\n   *\n   * <p>Note that it's possible to create an invalid Unicode\n   * string in java if a UTF16 surrogate pair is malformed.\n   * In this case, the invalid characters are silently\n   * replaced with the Unicode replacement character\n   * U+FFFD.</p>\n   *\n   * <p><b>NOTE</b>: if this method hits an OutOfMemoryError\n   * you should immediately close the writer.  See <a\n   * href=\"#OOME\">above</a> for details.</p>\n   *\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   */\n  public void addDocument(Document doc) throws CorruptIndexException, IOException {\n    addDocument(doc, analyzer);\n  }\n\n","sourceOld":"  /**\n   * Adds a document to this index.  If the document contains more than\n   * {@link #setMaxFieldLength(int)} terms for a given field, the remainder are\n   * discarded.\n   *\n   * <p> Note that if an Exception is hit (for example disk full)\n   * then the index will be consistent, but this document\n   * may not have been added.  Furthermore, it's possible\n   * the index will have one segment in non-compound format\n   * even when using compound files (when a merge has\n   * partially succeeded).</p>\n   *\n   * <p> This method periodically flushes pending documents\n   * to the Directory (see <a href=\"#flush\">above</a>), and\n   * also periodically triggers segment merges in the index\n   * according to the {@link MergePolicy} in use.</p>\n   *\n   * <p>Merges temporarily consume space in the\n   * directory. The amount of space required is up to 1X the\n   * size of all segments being merged, when no\n   * readers/searchers are open against the index, and up to\n   * 2X the size of all segments being merged when\n   * readers/searchers are open against the index (see\n   * {@link #optimize()} for details). The sequence of\n   * primitive merge operations performed is governed by the\n   * merge policy.\n   *\n   * <p>Note that each term in the document can be no longer\n   * than 16383 characters, otherwise an\n   * IllegalArgumentException will be thrown.</p>\n   *\n   * <p>Note that it's possible to create an invalid Unicode\n   * string in java if a UTF16 surrogate pair is malformed.\n   * In this case, the invalid characters are silently\n   * replaced with the Unicode replacement character\n   * U+FFFD.</p>\n   *\n   * <p><b>NOTE</b>: if this method hits an OutOfMemoryError\n   * you should immediately close the writer.  See <a\n   * href=\"#OOME\">above</a> for details.</p>\n   *\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   */\n  public void addDocument(Document doc) throws CorruptIndexException, IOException {\n    addDocument(doc, analyzer);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9b832cbed6eb3d54a8bb9339296bdda8eeb53014","date":1279708040,"type":3,"author":"Michael Busch","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriter#addDocument(Document).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriter#addDocument(Document).mjava","sourceNew":"  /**\n   * Adds a document to this index.  If the document contains more than\n   * {@link #setMaxFieldLength(int)} terms for a given field, the remainder are\n   * discarded.\n   *\n   * <p> Note that if an Exception is hit (for example disk full)\n   * then the index will be consistent, but this document\n   * may not have been added.  Furthermore, it's possible\n   * the index will have one segment in non-compound format\n   * even when using compound files (when a merge has\n   * partially succeeded).</p>\n   *\n   * <p> This method periodically flushes pending documents\n   * to the Directory (see <a href=\"#flush\">above</a>), and\n   * also periodically triggers segment merges in the index\n   * according to the {@link MergePolicy} in use.</p>\n   *\n   * <p>Merges temporarily consume space in the\n   * directory. The amount of space required is up to 1X the\n   * size of all segments being merged, when no\n   * readers/searchers are open against the index, and up to\n   * 2X the size of all segments being merged when\n   * readers/searchers are open against the index (see\n   * {@link #optimize()} for details). The sequence of\n   * primitive merge operations performed is governed by the\n   * merge policy.\n   *\n   * <p>Note that each term in the document can be no longer\n   * than 16383 characters, otherwise an\n   * IllegalArgumentException will be thrown.</p>\n   *\n   * <p>Note that it's possible to create an invalid Unicode\n   * string in java if a UTF16 surrogate pair is malformed.\n   * In this case, the invalid characters are silently\n   * replaced with the Unicode replacement character\n   * U+FFFD.</p>\n   *\n   * <p><b>NOTE</b>: if this method hits an OutOfMemoryError\n   * you should immediately close the writer.  See <a\n   * href=\"#OOME\">above</a> for details.</p>\n   *\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   */\n  public long addDocument(Document doc) throws CorruptIndexException, IOException {\n    return addDocument(doc, analyzer);\n  }\n\n","sourceOld":"  /**\n   * Adds a document to this index.  If the document contains more than\n   * {@link #setMaxFieldLength(int)} terms for a given field, the remainder are\n   * discarded.\n   *\n   * <p> Note that if an Exception is hit (for example disk full)\n   * then the index will be consistent, but this document\n   * may not have been added.  Furthermore, it's possible\n   * the index will have one segment in non-compound format\n   * even when using compound files (when a merge has\n   * partially succeeded).</p>\n   *\n   * <p> This method periodically flushes pending documents\n   * to the Directory (see <a href=\"#flush\">above</a>), and\n   * also periodically triggers segment merges in the index\n   * according to the {@link MergePolicy} in use.</p>\n   *\n   * <p>Merges temporarily consume space in the\n   * directory. The amount of space required is up to 1X the\n   * size of all segments being merged, when no\n   * readers/searchers are open against the index, and up to\n   * 2X the size of all segments being merged when\n   * readers/searchers are open against the index (see\n   * {@link #optimize()} for details). The sequence of\n   * primitive merge operations performed is governed by the\n   * merge policy.\n   *\n   * <p>Note that each term in the document can be no longer\n   * than 16383 characters, otherwise an\n   * IllegalArgumentException will be thrown.</p>\n   *\n   * <p>Note that it's possible to create an invalid Unicode\n   * string in java if a UTF16 surrogate pair is malformed.\n   * In this case, the invalid characters are silently\n   * replaced with the Unicode replacement character\n   * U+FFFD.</p>\n   *\n   * <p><b>NOTE</b>: if this method hits an OutOfMemoryError\n   * you should immediately close the writer.  See <a\n   * href=\"#OOME\">above</a> for details.</p>\n   *\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   */\n  public void addDocument(Document doc) throws CorruptIndexException, IOException {\n    addDocument(doc, analyzer);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"334c1175813aea771a71728cd2c4ee4754fd0603","date":1279710173,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriter#addDocument(Document).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriter#addDocument(Document).mjava","sourceNew":"  /**\n   * Adds a document to this index.  If the document contains more than\n   * {@link #setMaxFieldLength(int)} terms for a given field, the remainder are\n   * discarded.\n   *\n   * <p> Note that if an Exception is hit (for example disk full)\n   * then the index will be consistent, but this document\n   * may not have been added.  Furthermore, it's possible\n   * the index will have one segment in non-compound format\n   * even when using compound files (when a merge has\n   * partially succeeded).</p>\n   *\n   * <p> This method periodically flushes pending documents\n   * to the Directory (see <a href=\"#flush\">above</a>), and\n   * also periodically triggers segment merges in the index\n   * according to the {@link MergePolicy} in use.</p>\n   *\n   * <p>Merges temporarily consume space in the\n   * directory. The amount of space required is up to 1X the\n   * size of all segments being merged, when no\n   * readers/searchers are open against the index, and up to\n   * 2X the size of all segments being merged when\n   * readers/searchers are open against the index (see\n   * {@link #optimize()} for details). The sequence of\n   * primitive merge operations performed is governed by the\n   * merge policy.\n   *\n   * <p>Note that each term in the document can be no longer\n   * than 16383 characters, otherwise an\n   * IllegalArgumentException will be thrown.</p>\n   *\n   * <p>Note that it's possible to create an invalid Unicode\n   * string in java if a UTF16 surrogate pair is malformed.\n   * In this case, the invalid characters are silently\n   * replaced with the Unicode replacement character\n   * U+FFFD.</p>\n   *\n   * <p><b>NOTE</b>: if this method hits an OutOfMemoryError\n   * you should immediately close the writer.  See <a\n   * href=\"#OOME\">above</a> for details.</p>\n   *\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   */\n  public void addDocument(Document doc) throws CorruptIndexException, IOException {\n    addDocument(doc, analyzer);\n  }\n\n","sourceOld":"  /**\n   * Adds a document to this index.  If the document contains more than\n   * {@link #setMaxFieldLength(int)} terms for a given field, the remainder are\n   * discarded.\n   *\n   * <p> Note that if an Exception is hit (for example disk full)\n   * then the index will be consistent, but this document\n   * may not have been added.  Furthermore, it's possible\n   * the index will have one segment in non-compound format\n   * even when using compound files (when a merge has\n   * partially succeeded).</p>\n   *\n   * <p> This method periodically flushes pending documents\n   * to the Directory (see <a href=\"#flush\">above</a>), and\n   * also periodically triggers segment merges in the index\n   * according to the {@link MergePolicy} in use.</p>\n   *\n   * <p>Merges temporarily consume space in the\n   * directory. The amount of space required is up to 1X the\n   * size of all segments being merged, when no\n   * readers/searchers are open against the index, and up to\n   * 2X the size of all segments being merged when\n   * readers/searchers are open against the index (see\n   * {@link #optimize()} for details). The sequence of\n   * primitive merge operations performed is governed by the\n   * merge policy.\n   *\n   * <p>Note that each term in the document can be no longer\n   * than 16383 characters, otherwise an\n   * IllegalArgumentException will be thrown.</p>\n   *\n   * <p>Note that it's possible to create an invalid Unicode\n   * string in java if a UTF16 surrogate pair is malformed.\n   * In this case, the invalid characters are silently\n   * replaced with the Unicode replacement character\n   * U+FFFD.</p>\n   *\n   * <p><b>NOTE</b>: if this method hits an OutOfMemoryError\n   * you should immediately close the writer.  See <a\n   * href=\"#OOME\">above</a> for details.</p>\n   *\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   */\n  public long addDocument(Document doc) throws CorruptIndexException, IOException {\n    return addDocument(doc, analyzer);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8fe956d65251358d755c56f14fe8380644790e47","date":1279711318,"type":3,"author":"Michael Busch","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriter#addDocument(Document).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriter#addDocument(Document).mjava","sourceNew":"  /**\n   * Adds a document to this index.  If the document contains more than\n   * {@link #setMaxFieldLength(int)} terms for a given field, the remainder are\n   * discarded.\n   *\n   * <p> Note that if an Exception is hit (for example disk full)\n   * then the index will be consistent, but this document\n   * may not have been added.  Furthermore, it's possible\n   * the index will have one segment in non-compound format\n   * even when using compound files (when a merge has\n   * partially succeeded).</p>\n   *\n   * <p> This method periodically flushes pending documents\n   * to the Directory (see <a href=\"#flush\">above</a>), and\n   * also periodically triggers segment merges in the index\n   * according to the {@link MergePolicy} in use.</p>\n   *\n   * <p>Merges temporarily consume space in the\n   * directory. The amount of space required is up to 1X the\n   * size of all segments being merged, when no\n   * readers/searchers are open against the index, and up to\n   * 2X the size of all segments being merged when\n   * readers/searchers are open against the index (see\n   * {@link #optimize()} for details). The sequence of\n   * primitive merge operations performed is governed by the\n   * merge policy.\n   *\n   * <p>Note that each term in the document can be no longer\n   * than 16383 characters, otherwise an\n   * IllegalArgumentException will be thrown.</p>\n   *\n   * <p>Note that it's possible to create an invalid Unicode\n   * string in java if a UTF16 surrogate pair is malformed.\n   * In this case, the invalid characters are silently\n   * replaced with the Unicode replacement character\n   * U+FFFD.</p>\n   *\n   * <p><b>NOTE</b>: if this method hits an OutOfMemoryError\n   * you should immediately close the writer.  See <a\n   * href=\"#OOME\">above</a> for details.</p>\n   *\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   */\n  public long addDocument(Document doc) throws CorruptIndexException, IOException {\n    return addDocument(doc, analyzer);\n  }\n\n","sourceOld":"  /**\n   * Adds a document to this index.  If the document contains more than\n   * {@link #setMaxFieldLength(int)} terms for a given field, the remainder are\n   * discarded.\n   *\n   * <p> Note that if an Exception is hit (for example disk full)\n   * then the index will be consistent, but this document\n   * may not have been added.  Furthermore, it's possible\n   * the index will have one segment in non-compound format\n   * even when using compound files (when a merge has\n   * partially succeeded).</p>\n   *\n   * <p> This method periodically flushes pending documents\n   * to the Directory (see <a href=\"#flush\">above</a>), and\n   * also periodically triggers segment merges in the index\n   * according to the {@link MergePolicy} in use.</p>\n   *\n   * <p>Merges temporarily consume space in the\n   * directory. The amount of space required is up to 1X the\n   * size of all segments being merged, when no\n   * readers/searchers are open against the index, and up to\n   * 2X the size of all segments being merged when\n   * readers/searchers are open against the index (see\n   * {@link #optimize()} for details). The sequence of\n   * primitive merge operations performed is governed by the\n   * merge policy.\n   *\n   * <p>Note that each term in the document can be no longer\n   * than 16383 characters, otherwise an\n   * IllegalArgumentException will be thrown.</p>\n   *\n   * <p>Note that it's possible to create an invalid Unicode\n   * string in java if a UTF16 surrogate pair is malformed.\n   * In this case, the invalid characters are silently\n   * replaced with the Unicode replacement character\n   * U+FFFD.</p>\n   *\n   * <p><b>NOTE</b>: if this method hits an OutOfMemoryError\n   * you should immediately close the writer.  See <a\n   * href=\"#OOME\">above</a> for details.</p>\n   *\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   */\n  public void addDocument(Document doc) throws CorruptIndexException, IOException {\n    addDocument(doc, analyzer);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"38a62612cfa4e104080d89d7751a8f1a258ac335","date":1291442315,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriter#addDocument(Document).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriter#addDocument(Document).mjava","sourceNew":"  /**\n   * Adds a document to this index.  If the document contains more than\n   * {@link IndexWriterConfig#setMaxFieldLength(int)} terms for a given field, \n   * the remainder are discarded.\n   *\n   * <p> Note that if an Exception is hit (for example disk full)\n   * then the index will be consistent, but this document\n   * may not have been added.  Furthermore, it's possible\n   * the index will have one segment in non-compound format\n   * even when using compound files (when a merge has\n   * partially succeeded).</p>\n   *\n   * <p> This method periodically flushes pending documents\n   * to the Directory (see <a href=\"#flush\">above</a>), and\n   * also periodically triggers segment merges in the index\n   * according to the {@link MergePolicy} in use.</p>\n   *\n   * <p>Merges temporarily consume space in the\n   * directory. The amount of space required is up to 1X the\n   * size of all segments being merged, when no\n   * readers/searchers are open against the index, and up to\n   * 2X the size of all segments being merged when\n   * readers/searchers are open against the index (see\n   * {@link #optimize()} for details). The sequence of\n   * primitive merge operations performed is governed by the\n   * merge policy.\n   *\n   * <p>Note that each term in the document can be no longer\n   * than 16383 characters, otherwise an\n   * IllegalArgumentException will be thrown.</p>\n   *\n   * <p>Note that it's possible to create an invalid Unicode\n   * string in java if a UTF16 surrogate pair is malformed.\n   * In this case, the invalid characters are silently\n   * replaced with the Unicode replacement character\n   * U+FFFD.</p>\n   *\n   * <p><b>NOTE</b>: if this method hits an OutOfMemoryError\n   * you should immediately close the writer.  See <a\n   * href=\"#OOME\">above</a> for details.</p>\n   *\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   */\n  public void addDocument(Document doc) throws CorruptIndexException, IOException {\n    addDocument(doc, analyzer);\n  }\n\n","sourceOld":"  /**\n   * Adds a document to this index.  If the document contains more than\n   * {@link #setMaxFieldLength(int)} terms for a given field, the remainder are\n   * discarded.\n   *\n   * <p> Note that if an Exception is hit (for example disk full)\n   * then the index will be consistent, but this document\n   * may not have been added.  Furthermore, it's possible\n   * the index will have one segment in non-compound format\n   * even when using compound files (when a merge has\n   * partially succeeded).</p>\n   *\n   * <p> This method periodically flushes pending documents\n   * to the Directory (see <a href=\"#flush\">above</a>), and\n   * also periodically triggers segment merges in the index\n   * according to the {@link MergePolicy} in use.</p>\n   *\n   * <p>Merges temporarily consume space in the\n   * directory. The amount of space required is up to 1X the\n   * size of all segments being merged, when no\n   * readers/searchers are open against the index, and up to\n   * 2X the size of all segments being merged when\n   * readers/searchers are open against the index (see\n   * {@link #optimize()} for details). The sequence of\n   * primitive merge operations performed is governed by the\n   * merge policy.\n   *\n   * <p>Note that each term in the document can be no longer\n   * than 16383 characters, otherwise an\n   * IllegalArgumentException will be thrown.</p>\n   *\n   * <p>Note that it's possible to create an invalid Unicode\n   * string in java if a UTF16 surrogate pair is malformed.\n   * In this case, the invalid characters are silently\n   * replaced with the Unicode replacement character\n   * U+FFFD.</p>\n   *\n   * <p><b>NOTE</b>: if this method hits an OutOfMemoryError\n   * you should immediately close the writer.  See <a\n   * href=\"#OOME\">above</a> for details.</p>\n   *\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   */\n  public void addDocument(Document doc) throws CorruptIndexException, IOException {\n    addDocument(doc, analyzer);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4a69e5860d014751cc9329dfeb441a6d8fd1ed8e","date":1291833341,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriter#addDocument(Document).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriter#addDocument(Document).mjava","sourceNew":"  /**\n   * Adds a document to this index.  If the document contains more than\n   * {@link IndexWriterConfig#setMaxFieldLength(int)} terms for a given field, \n   * the remainder are discarded.\n   *\n   * <p> Note that if an Exception is hit (for example disk full)\n   * then the index will be consistent, but this document\n   * may not have been added.  Furthermore, it's possible\n   * the index will have one segment in non-compound format\n   * even when using compound files (when a merge has\n   * partially succeeded).</p>\n   *\n   * <p> This method periodically flushes pending documents\n   * to the Directory (see <a href=\"#flush\">above</a>), and\n   * also periodically triggers segment merges in the index\n   * according to the {@link MergePolicy} in use.</p>\n   *\n   * <p>Merges temporarily consume space in the\n   * directory. The amount of space required is up to 1X the\n   * size of all segments being merged, when no\n   * readers/searchers are open against the index, and up to\n   * 2X the size of all segments being merged when\n   * readers/searchers are open against the index (see\n   * {@link #optimize()} for details). The sequence of\n   * primitive merge operations performed is governed by the\n   * merge policy.\n   *\n   * <p>Note that each term in the document can be no longer\n   * than 16383 characters, otherwise an\n   * IllegalArgumentException will be thrown.</p>\n   *\n   * <p>Note that it's possible to create an invalid Unicode\n   * string in java if a UTF16 surrogate pair is malformed.\n   * In this case, the invalid characters are silently\n   * replaced with the Unicode replacement character\n   * U+FFFD.</p>\n   *\n   * <p><b>NOTE</b>: if this method hits an OutOfMemoryError\n   * you should immediately close the writer.  See <a\n   * href=\"#OOME\">above</a> for details.</p>\n   *\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   */\n  public void addDocument(Document doc) throws CorruptIndexException, IOException {\n    addDocument(doc, analyzer);\n  }\n\n","sourceOld":"  /**\n   * Adds a document to this index.  If the document contains more than\n   * {@link #setMaxFieldLength(int)} terms for a given field, the remainder are\n   * discarded.\n   *\n   * <p> Note that if an Exception is hit (for example disk full)\n   * then the index will be consistent, but this document\n   * may not have been added.  Furthermore, it's possible\n   * the index will have one segment in non-compound format\n   * even when using compound files (when a merge has\n   * partially succeeded).</p>\n   *\n   * <p> This method periodically flushes pending documents\n   * to the Directory (see <a href=\"#flush\">above</a>), and\n   * also periodically triggers segment merges in the index\n   * according to the {@link MergePolicy} in use.</p>\n   *\n   * <p>Merges temporarily consume space in the\n   * directory. The amount of space required is up to 1X the\n   * size of all segments being merged, when no\n   * readers/searchers are open against the index, and up to\n   * 2X the size of all segments being merged when\n   * readers/searchers are open against the index (see\n   * {@link #optimize()} for details). The sequence of\n   * primitive merge operations performed is governed by the\n   * merge policy.\n   *\n   * <p>Note that each term in the document can be no longer\n   * than 16383 characters, otherwise an\n   * IllegalArgumentException will be thrown.</p>\n   *\n   * <p>Note that it's possible to create an invalid Unicode\n   * string in java if a UTF16 surrogate pair is malformed.\n   * In this case, the invalid characters are silently\n   * replaced with the Unicode replacement character\n   * U+FFFD.</p>\n   *\n   * <p><b>NOTE</b>: if this method hits an OutOfMemoryError\n   * you should immediately close the writer.  See <a\n   * href=\"#OOME\">above</a> for details.</p>\n   *\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   */\n  public void addDocument(Document doc) throws CorruptIndexException, IOException {\n    addDocument(doc, analyzer);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriter#addDocument(Document).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriter#addDocument(Document).mjava","sourceNew":"  /**\n   * Adds a document to this index.  If the document contains more than\n   * {@link IndexWriterConfig#setMaxFieldLength(int)} terms for a given field,\n   * the remainder are discarded.\n   *\n   * <p> Note that if an Exception is hit (for example disk full)\n   * then the index will be consistent, but this document\n   * may not have been added.  Furthermore, it's possible\n   * the index will have one segment in non-compound format\n   * even when using compound files (when a merge has\n   * partially succeeded).</p>\n   *\n   * <p> This method periodically flushes pending documents\n   * to the Directory (see <a href=\"#flush\">above</a>), and\n   * also periodically triggers segment merges in the index\n   * according to the {@link MergePolicy} in use.</p>\n   *\n   * <p>Merges temporarily consume space in the\n   * directory. The amount of space required is up to 1X the\n   * size of all segments being merged, when no\n   * readers/searchers are open against the index, and up to\n   * 2X the size of all segments being merged when\n   * readers/searchers are open against the index (see\n   * {@link #optimize()} for details). The sequence of\n   * primitive merge operations performed is governed by the\n   * merge policy.\n   *\n   * <p>Note that each term in the document can be no longer\n   * than 16383 characters, otherwise an\n   * IllegalArgumentException will be thrown.</p>\n   *\n   * <p>Note that it's possible to create an invalid Unicode\n   * string in java if a UTF16 surrogate pair is malformed.\n   * In this case, the invalid characters are silently\n   * replaced with the Unicode replacement character\n   * U+FFFD.</p>\n   *\n   * <p><b>NOTE</b>: if this method hits an OutOfMemoryError\n   * you should immediately close the writer.  See <a\n   * href=\"#OOME\">above</a> for details.</p>\n   *\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   */\n  public void addDocument(Document doc) throws CorruptIndexException, IOException {\n    addDocument(doc, analyzer);\n  }\n\n","sourceOld":"  /**\n   * Adds a document to this index.  If the document contains more than\n   * {@link #setMaxFieldLength(int)} terms for a given field, the remainder are\n   * discarded.\n   *\n   * <p> Note that if an Exception is hit (for example disk full)\n   * then the index will be consistent, but this document\n   * may not have been added.  Furthermore, it's possible\n   * the index will have one segment in non-compound format\n   * even when using compound files (when a merge has\n   * partially succeeded).</p>\n   *\n   * <p> This method periodically flushes pending documents\n   * to the Directory (see <a href=\"#flush\">above</a>), and\n   * also periodically triggers segment merges in the index\n   * according to the {@link MergePolicy} in use.</p>\n   *\n   * <p>Merges temporarily consume space in the\n   * directory. The amount of space required is up to 1X the\n   * size of all segments being merged, when no\n   * readers/searchers are open against the index, and up to\n   * 2X the size of all segments being merged when\n   * readers/searchers are open against the index (see\n   * {@link #optimize()} for details). The sequence of\n   * primitive merge operations performed is governed by the\n   * merge policy.\n   *\n   * <p>Note that each term in the document can be no longer\n   * than 16383 characters, otherwise an\n   * IllegalArgumentException will be thrown.</p>\n   *\n   * <p>Note that it's possible to create an invalid Unicode\n   * string in java if a UTF16 surrogate pair is malformed.\n   * In this case, the invalid characters are silently\n   * replaced with the Unicode replacement character\n   * U+FFFD.</p>\n   *\n   * <p><b>NOTE</b>: if this method hits an OutOfMemoryError\n   * you should immediately close the writer.  See <a\n   * href=\"#OOME\">above</a> for details.</p>\n   *\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   */\n  public long addDocument(Document doc) throws CorruptIndexException, IOException {\n    return addDocument(doc, analyzer);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c2047784e704fe141e0ff36affac8a7cb6c7bbec","date":1295352100,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriter#addDocument(Document).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriter#addDocument(Document).mjava","sourceNew":"  /**\n   * Adds a document to this index.\n   *\n   * <p> Note that if an Exception is hit (for example disk full)\n   * then the index will be consistent, but this document\n   * may not have been added.  Furthermore, it's possible\n   * the index will have one segment in non-compound format\n   * even when using compound files (when a merge has\n   * partially succeeded).</p>\n   *\n   * <p> This method periodically flushes pending documents\n   * to the Directory (see <a href=\"#flush\">above</a>), and\n   * also periodically triggers segment merges in the index\n   * according to the {@link MergePolicy} in use.</p>\n   *\n   * <p>Merges temporarily consume space in the\n   * directory. The amount of space required is up to 1X the\n   * size of all segments being merged, when no\n   * readers/searchers are open against the index, and up to\n   * 2X the size of all segments being merged when\n   * readers/searchers are open against the index (see\n   * {@link #optimize()} for details). The sequence of\n   * primitive merge operations performed is governed by the\n   * merge policy.\n   *\n   * <p>Note that each term in the document can be no longer\n   * than 16383 characters, otherwise an\n   * IllegalArgumentException will be thrown.</p>\n   *\n   * <p>Note that it's possible to create an invalid Unicode\n   * string in java if a UTF16 surrogate pair is malformed.\n   * In this case, the invalid characters are silently\n   * replaced with the Unicode replacement character\n   * U+FFFD.</p>\n   *\n   * <p><b>NOTE</b>: if this method hits an OutOfMemoryError\n   * you should immediately close the writer.  See <a\n   * href=\"#OOME\">above</a> for details.</p>\n   *\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   */\n  public void addDocument(Document doc) throws CorruptIndexException, IOException {\n    addDocument(doc, analyzer);\n  }\n\n","sourceOld":"  /**\n   * Adds a document to this index.  If the document contains more than\n   * {@link IndexWriterConfig#setMaxFieldLength(int)} terms for a given field, \n   * the remainder are discarded.\n   *\n   * <p> Note that if an Exception is hit (for example disk full)\n   * then the index will be consistent, but this document\n   * may not have been added.  Furthermore, it's possible\n   * the index will have one segment in non-compound format\n   * even when using compound files (when a merge has\n   * partially succeeded).</p>\n   *\n   * <p> This method periodically flushes pending documents\n   * to the Directory (see <a href=\"#flush\">above</a>), and\n   * also periodically triggers segment merges in the index\n   * according to the {@link MergePolicy} in use.</p>\n   *\n   * <p>Merges temporarily consume space in the\n   * directory. The amount of space required is up to 1X the\n   * size of all segments being merged, when no\n   * readers/searchers are open against the index, and up to\n   * 2X the size of all segments being merged when\n   * readers/searchers are open against the index (see\n   * {@link #optimize()} for details). The sequence of\n   * primitive merge operations performed is governed by the\n   * merge policy.\n   *\n   * <p>Note that each term in the document can be no longer\n   * than 16383 characters, otherwise an\n   * IllegalArgumentException will be thrown.</p>\n   *\n   * <p>Note that it's possible to create an invalid Unicode\n   * string in java if a UTF16 surrogate pair is malformed.\n   * In this case, the invalid characters are silently\n   * replaced with the Unicode replacement character\n   * U+FFFD.</p>\n   *\n   * <p><b>NOTE</b>: if this method hits an OutOfMemoryError\n   * you should immediately close the writer.  See <a\n   * href=\"#OOME\">above</a> for details.</p>\n   *\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   */\n  public void addDocument(Document doc) throws CorruptIndexException, IOException {\n    addDocument(doc, analyzer);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriter#addDocument(Document).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriter#addDocument(Document).mjava","sourceNew":"  /**\n   * Adds a document to this index.\n   *\n   * <p> Note that if an Exception is hit (for example disk full)\n   * then the index will be consistent, but this document\n   * may not have been added.  Furthermore, it's possible\n   * the index will have one segment in non-compound format\n   * even when using compound files (when a merge has\n   * partially succeeded).</p>\n   *\n   * <p> This method periodically flushes pending documents\n   * to the Directory (see <a href=\"#flush\">above</a>), and\n   * also periodically triggers segment merges in the index\n   * according to the {@link MergePolicy} in use.</p>\n   *\n   * <p>Merges temporarily consume space in the\n   * directory. The amount of space required is up to 1X the\n   * size of all segments being merged, when no\n   * readers/searchers are open against the index, and up to\n   * 2X the size of all segments being merged when\n   * readers/searchers are open against the index (see\n   * {@link #optimize()} for details). The sequence of\n   * primitive merge operations performed is governed by the\n   * merge policy.\n   *\n   * <p>Note that each term in the document can be no longer\n   * than 16383 characters, otherwise an\n   * IllegalArgumentException will be thrown.</p>\n   *\n   * <p>Note that it's possible to create an invalid Unicode\n   * string in java if a UTF16 surrogate pair is malformed.\n   * In this case, the invalid characters are silently\n   * replaced with the Unicode replacement character\n   * U+FFFD.</p>\n   *\n   * <p><b>NOTE</b>: if this method hits an OutOfMemoryError\n   * you should immediately close the writer.  See <a\n   * href=\"#OOME\">above</a> for details.</p>\n   *\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   */\n  public void addDocument(Document doc) throws CorruptIndexException, IOException {\n    addDocument(doc, analyzer);\n  }\n\n","sourceOld":"  /**\n   * Adds a document to this index.  If the document contains more than\n   * {@link IndexWriterConfig#setMaxFieldLength(int)} terms for a given field, \n   * the remainder are discarded.\n   *\n   * <p> Note that if an Exception is hit (for example disk full)\n   * then the index will be consistent, but this document\n   * may not have been added.  Furthermore, it's possible\n   * the index will have one segment in non-compound format\n   * even when using compound files (when a merge has\n   * partially succeeded).</p>\n   *\n   * <p> This method periodically flushes pending documents\n   * to the Directory (see <a href=\"#flush\">above</a>), and\n   * also periodically triggers segment merges in the index\n   * according to the {@link MergePolicy} in use.</p>\n   *\n   * <p>Merges temporarily consume space in the\n   * directory. The amount of space required is up to 1X the\n   * size of all segments being merged, when no\n   * readers/searchers are open against the index, and up to\n   * 2X the size of all segments being merged when\n   * readers/searchers are open against the index (see\n   * {@link #optimize()} for details). The sequence of\n   * primitive merge operations performed is governed by the\n   * merge policy.\n   *\n   * <p>Note that each term in the document can be no longer\n   * than 16383 characters, otherwise an\n   * IllegalArgumentException will be thrown.</p>\n   *\n   * <p>Note that it's possible to create an invalid Unicode\n   * string in java if a UTF16 surrogate pair is malformed.\n   * In this case, the invalid characters are silently\n   * replaced with the Unicode replacement character\n   * U+FFFD.</p>\n   *\n   * <p><b>NOTE</b>: if this method hits an OutOfMemoryError\n   * you should immediately close the writer.  See <a\n   * href=\"#OOME\">above</a> for details.</p>\n   *\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   */\n  public void addDocument(Document doc) throws CorruptIndexException, IOException {\n    addDocument(doc, analyzer);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c0ef0193974807e4bddf5432a6b0287fe4d6c9df","date":1301476645,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriter#addDocument(Document).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriter#addDocument(Document).mjava","sourceNew":"  /**\n   * Adds a document to this index.\n   *\n   * <p> Note that if an Exception is hit (for example disk full)\n   * then the index will be consistent, but this document\n   * may not have been added.  Furthermore, it's possible\n   * the index will have one segment in non-compound format\n   * even when using compound files (when a merge has\n   * partially succeeded).</p>\n   *\n   * <p> This method periodically flushes pending documents\n   * to the Directory (see <a href=\"#flush\">above</a>), and\n   * also periodically triggers segment merges in the index\n   * according to the {@link MergePolicy} in use.</p>\n   *\n   * <p>Merges temporarily consume space in the\n   * directory. The amount of space required is up to 1X the\n   * size of all segments being merged, when no\n   * readers/searchers are open against the index, and up to\n   * 2X the size of all segments being merged when\n   * readers/searchers are open against the index (see\n   * {@link #optimize()} for details). The sequence of\n   * primitive merge operations performed is governed by the\n   * merge policy.\n   *\n   * <p>Note that each term in the document can be no longer\n   * than 16383 characters, otherwise an\n   * IllegalArgumentException will be thrown.</p>\n   *\n   * <p>Note that it's possible to create an invalid Unicode\n   * string in java if a UTF16 surrogate pair is malformed.\n   * In this case, the invalid characters are silently\n   * replaced with the Unicode replacement character\n   * U+FFFD.</p>\n   *\n   * <p><b>NOTE</b>: if this method hits an OutOfMemoryError\n   * you should immediately close the writer.  See <a\n   * href=\"#OOME\">above</a> for details.</p>\n   *\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   */\n  public void addDocument(Document doc) throws CorruptIndexException, IOException {\n    addDocument(doc, analyzer);\n  }\n\n","sourceOld":"  /**\n   * Adds a document to this index.  If the document contains more than\n   * {@link IndexWriterConfig#setMaxFieldLength(int)} terms for a given field,\n   * the remainder are discarded.\n   *\n   * <p> Note that if an Exception is hit (for example disk full)\n   * then the index will be consistent, but this document\n   * may not have been added.  Furthermore, it's possible\n   * the index will have one segment in non-compound format\n   * even when using compound files (when a merge has\n   * partially succeeded).</p>\n   *\n   * <p> This method periodically flushes pending documents\n   * to the Directory (see <a href=\"#flush\">above</a>), and\n   * also periodically triggers segment merges in the index\n   * according to the {@link MergePolicy} in use.</p>\n   *\n   * <p>Merges temporarily consume space in the\n   * directory. The amount of space required is up to 1X the\n   * size of all segments being merged, when no\n   * readers/searchers are open against the index, and up to\n   * 2X the size of all segments being merged when\n   * readers/searchers are open against the index (see\n   * {@link #optimize()} for details). The sequence of\n   * primitive merge operations performed is governed by the\n   * merge policy.\n   *\n   * <p>Note that each term in the document can be no longer\n   * than 16383 characters, otherwise an\n   * IllegalArgumentException will be thrown.</p>\n   *\n   * <p>Note that it's possible to create an invalid Unicode\n   * string in java if a UTF16 surrogate pair is malformed.\n   * In this case, the invalid characters are silently\n   * replaced with the Unicode replacement character\n   * U+FFFD.</p>\n   *\n   * <p><b>NOTE</b>: if this method hits an OutOfMemoryError\n   * you should immediately close the writer.  See <a\n   * href=\"#OOME\">above</a> for details.</p>\n   *\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   */\n  public void addDocument(Document doc) throws CorruptIndexException, IOException {\n    addDocument(doc, analyzer);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1509f151d7692d84fae414b2b799ac06ba60fcb4","date":1314451621,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriter#addDocument(Iterable[#-extends-IndexableField]).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriter#addDocument(Document).mjava","sourceNew":"  /**\n   * Adds a document to this index.\n   *\n   * <p> Note that if an Exception is hit (for example disk full)\n   * then the index will be consistent, but this document\n   * may not have been added.  Furthermore, it's possible\n   * the index will have one segment in non-compound format\n   * even when using compound files (when a merge has\n   * partially succeeded).</p>\n   *\n   * <p> This method periodically flushes pending documents\n   * to the Directory (see <a href=\"#flush\">above</a>), and\n   * also periodically triggers segment merges in the index\n   * according to the {@link MergePolicy} in use.</p>\n   *\n   * <p>Merges temporarily consume space in the\n   * directory. The amount of space required is up to 1X the\n   * size of all segments being merged, when no\n   * readers/searchers are open against the index, and up to\n   * 2X the size of all segments being merged when\n   * readers/searchers are open against the index (see\n   * {@link #optimize()} for details). The sequence of\n   * primitive merge operations performed is governed by the\n   * merge policy.\n   *\n   * <p>Note that each term in the document can be no longer\n   * than 16383 characters, otherwise an\n   * IllegalArgumentException will be thrown.</p>\n   *\n   * <p>Note that it's possible to create an invalid Unicode\n   * string in java if a UTF16 surrogate pair is malformed.\n   * In this case, the invalid characters are silently\n   * replaced with the Unicode replacement character\n   * U+FFFD.</p>\n   *\n   * <p><b>NOTE</b>: if this method hits an OutOfMemoryError\n   * you should immediately close the writer.  See <a\n   * href=\"#OOME\">above</a> for details.</p>\n   *\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   */\n  public void addDocument(Iterable<? extends IndexableField> doc) throws CorruptIndexException, IOException {\n    addDocument(doc, analyzer);\n  }\n\n","sourceOld":"  /**\n   * Adds a document to this index.\n   *\n   * <p> Note that if an Exception is hit (for example disk full)\n   * then the index will be consistent, but this document\n   * may not have been added.  Furthermore, it's possible\n   * the index will have one segment in non-compound format\n   * even when using compound files (when a merge has\n   * partially succeeded).</p>\n   *\n   * <p> This method periodically flushes pending documents\n   * to the Directory (see <a href=\"#flush\">above</a>), and\n   * also periodically triggers segment merges in the index\n   * according to the {@link MergePolicy} in use.</p>\n   *\n   * <p>Merges temporarily consume space in the\n   * directory. The amount of space required is up to 1X the\n   * size of all segments being merged, when no\n   * readers/searchers are open against the index, and up to\n   * 2X the size of all segments being merged when\n   * readers/searchers are open against the index (see\n   * {@link #optimize()} for details). The sequence of\n   * primitive merge operations performed is governed by the\n   * merge policy.\n   *\n   * <p>Note that each term in the document can be no longer\n   * than 16383 characters, otherwise an\n   * IllegalArgumentException will be thrown.</p>\n   *\n   * <p>Note that it's possible to create an invalid Unicode\n   * string in java if a UTF16 surrogate pair is malformed.\n   * In this case, the invalid characters are silently\n   * replaced with the Unicode replacement character\n   * U+FFFD.</p>\n   *\n   * <p><b>NOTE</b>: if this method hits an OutOfMemoryError\n   * you should immediately close the writer.  See <a\n   * href=\"#OOME\">above</a> for details.</p>\n   *\n   * @throws CorruptIndexException if the index is corrupt\n   * @throws IOException if there is a low-level IO error\n   */\n  public void addDocument(Document doc) throws CorruptIndexException, IOException {\n    addDocument(doc, analyzer);\n  }\n\n","bugFix":null,"bugIntro":["4d3e8520fd031bab31fd0e4d480e55958bc45efe","4d3e8520fd031bab31fd0e4d480e55958bc45efe","4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"38a62612cfa4e104080d89d7751a8f1a258ac335":["334c1175813aea771a71728cd2c4ee4754fd0603"],"4a69e5860d014751cc9329dfeb441a6d8fd1ed8e":["334c1175813aea771a71728cd2c4ee4754fd0603"],"334c1175813aea771a71728cd2c4ee4754fd0603":["9b832cbed6eb3d54a8bb9339296bdda8eeb53014"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["8fe956d65251358d755c56f14fe8380644790e47","38a62612cfa4e104080d89d7751a8f1a258ac335"],"9b832cbed6eb3d54a8bb9339296bdda8eeb53014":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"c2047784e704fe141e0ff36affac8a7cb6c7bbec":["38a62612cfa4e104080d89d7751a8f1a258ac335"],"c0ef0193974807e4bddf5432a6b0287fe4d6c9df":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","c2047784e704fe141e0ff36affac8a7cb6c7bbec"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["4a69e5860d014751cc9329dfeb441a6d8fd1ed8e","c2047784e704fe141e0ff36affac8a7cb6c7bbec"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8fe956d65251358d755c56f14fe8380644790e47":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["c2047784e704fe141e0ff36affac8a7cb6c7bbec"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1509f151d7692d84fae414b2b799ac06ba60fcb4"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"38a62612cfa4e104080d89d7751a8f1a258ac335":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","c2047784e704fe141e0ff36affac8a7cb6c7bbec"],"4a69e5860d014751cc9329dfeb441a6d8fd1ed8e":["29ef99d61cda9641b6250bf9567329a6e65f901d"],"334c1175813aea771a71728cd2c4ee4754fd0603":["38a62612cfa4e104080d89d7751a8f1a258ac335","4a69e5860d014751cc9329dfeb441a6d8fd1ed8e"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df"],"9b832cbed6eb3d54a8bb9339296bdda8eeb53014":["334c1175813aea771a71728cd2c4ee4754fd0603"],"c2047784e704fe141e0ff36affac8a7cb6c7bbec":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df","29ef99d61cda9641b6250bf9567329a6e65f901d","1509f151d7692d84fae414b2b799ac06ba60fcb4"],"c0ef0193974807e4bddf5432a6b0287fe4d6c9df":[],"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"8fe956d65251358d755c56f14fe8380644790e47":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["9b832cbed6eb3d54a8bb9339296bdda8eeb53014","8fe956d65251358d755c56f14fe8380644790e47"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df","29ef99d61cda9641b6250bf9567329a6e65f901d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}