{"path":"contrib/miscellaneous/src/java/org/apache/lucene/queryParser/precedence/PrecedenceQueryParser#jj_add_error_token(int,int).mjava","commits":[{"id":"e9a6ad8e299e8d7e15e32e68d75b73ed7d04756a","date":1114594353,"type":1,"author":"Erik Hatcher","isMerge":false,"pathNew":"contrib/miscellaneous/src/java/org/apache/lucene/queryParser/precedence/PrecedenceQueryParser#jj_add_error_token(int,int).mjava","pathOld":"src/java/org/apache/lucene/queryParser/precedence/PrecedenceQueryParser#jj_add_error_token(int,int).mjava","sourceNew":"  private void jj_add_error_token(int kind, int pos) {\n    if (pos >= 100) return;\n    if (pos == jj_endpos + 1) {\n      jj_lasttokens[jj_endpos++] = kind;\n    } else if (jj_endpos != 0) {\n      jj_expentry = new int[jj_endpos];\n      for (int i = 0; i < jj_endpos; i++) {\n        jj_expentry[i] = jj_lasttokens[i];\n      }\n      boolean exists = false;\n      for (java.util.Enumeration e = jj_expentries.elements(); e.hasMoreElements();) {\n        int[] oldentry = (int[])(e.nextElement());\n        if (oldentry.length == jj_expentry.length) {\n          exists = true;\n          for (int i = 0; i < jj_expentry.length; i++) {\n            if (oldentry[i] != jj_expentry[i]) {\n              exists = false;\n              break;\n            }\n          }\n          if (exists) break;\n        }\n      }\n      if (!exists) jj_expentries.addElement(jj_expentry);\n      if (pos != 0) jj_lasttokens[(jj_endpos = pos) - 1] = kind;\n    }\n  }\n\n","sourceOld":"  private void jj_add_error_token(int kind, int pos) {\n    if (pos >= 100) return;\n    if (pos == jj_endpos + 1) {\n      jj_lasttokens[jj_endpos++] = kind;\n    } else if (jj_endpos != 0) {\n      jj_expentry = new int[jj_endpos];\n      for (int i = 0; i < jj_endpos; i++) {\n        jj_expentry[i] = jj_lasttokens[i];\n      }\n      boolean exists = false;\n      for (java.util.Enumeration e = jj_expentries.elements(); e.hasMoreElements();) {\n        int[] oldentry = (int[])(e.nextElement());\n        if (oldentry.length == jj_expentry.length) {\n          exists = true;\n          for (int i = 0; i < jj_expentry.length; i++) {\n            if (oldentry[i] != jj_expentry[i]) {\n              exists = false;\n              break;\n            }\n          }\n          if (exists) break;\n        }\n      }\n      if (!exists) jj_expentries.addElement(jj_expentry);\n      if (pos != 0) jj_lasttokens[(jj_endpos = pos) - 1] = kind;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"48bedd31c61edafb8baaff4bcbcac19449fb7c3a","date":1251468037,"type":5,"author":"Mark Robert Miller","isMerge":false,"pathNew":"contrib/misc/src/java/org/apache/lucene/queryParser/precedence/PrecedenceQueryParser#jj_add_error_token(int,int).mjava","pathOld":"contrib/miscellaneous/src/java/org/apache/lucene/queryParser/precedence/PrecedenceQueryParser#jj_add_error_token(int,int).mjava","sourceNew":"  private void jj_add_error_token(int kind, int pos) {\n    if (pos >= 100) return;\n    if (pos == jj_endpos + 1) {\n      jj_lasttokens[jj_endpos++] = kind;\n    } else if (jj_endpos != 0) {\n      jj_expentry = new int[jj_endpos];\n      for (int i = 0; i < jj_endpos; i++) {\n        jj_expentry[i] = jj_lasttokens[i];\n      }\n      boolean exists = false;\n      for (java.util.Enumeration e = jj_expentries.elements(); e.hasMoreElements();) {\n        int[] oldentry = (int[])(e.nextElement());\n        if (oldentry.length == jj_expentry.length) {\n          exists = true;\n          for (int i = 0; i < jj_expentry.length; i++) {\n            if (oldentry[i] != jj_expentry[i]) {\n              exists = false;\n              break;\n            }\n          }\n          if (exists) break;\n        }\n      }\n      if (!exists) jj_expentries.addElement(jj_expentry);\n      if (pos != 0) jj_lasttokens[(jj_endpos = pos) - 1] = kind;\n    }\n  }\n\n","sourceOld":"  private void jj_add_error_token(int kind, int pos) {\n    if (pos >= 100) return;\n    if (pos == jj_endpos + 1) {\n      jj_lasttokens[jj_endpos++] = kind;\n    } else if (jj_endpos != 0) {\n      jj_expentry = new int[jj_endpos];\n      for (int i = 0; i < jj_endpos; i++) {\n        jj_expentry[i] = jj_lasttokens[i];\n      }\n      boolean exists = false;\n      for (java.util.Enumeration e = jj_expentries.elements(); e.hasMoreElements();) {\n        int[] oldentry = (int[])(e.nextElement());\n        if (oldentry.length == jj_expentry.length) {\n          exists = true;\n          for (int i = 0; i < jj_expentry.length; i++) {\n            if (oldentry[i] != jj_expentry[i]) {\n              exists = false;\n              break;\n            }\n          }\n          if (exists) break;\n        }\n      }\n      if (!exists) jj_expentries.addElement(jj_expentry);\n      if (pos != 0) jj_lasttokens[(jj_endpos = pos) - 1] = kind;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"48bedd31c61edafb8baaff4bcbcac19449fb7c3a":["e9a6ad8e299e8d7e15e32e68d75b73ed7d04756a"],"e9a6ad8e299e8d7e15e32e68d75b73ed7d04756a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["48bedd31c61edafb8baaff4bcbcac19449fb7c3a"]},"commit2Childs":{"48bedd31c61edafb8baaff4bcbcac19449fb7c3a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e9a6ad8e299e8d7e15e32e68d75b73ed7d04756a":["48bedd31c61edafb8baaff4bcbcac19449fb7c3a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e9a6ad8e299e8d7e15e32e68d75b73ed7d04756a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}