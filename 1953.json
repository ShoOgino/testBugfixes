{"path":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamDecoratorTest#testHavingStream().mjava","commits":[{"id":"8ff654a6d1fb7a79aedaa65c23cc052fdc770aaf","date":1522951207,"type":1,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamDecoratorTest#testHavingStream().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionTest#testHavingStream().mjava","sourceNew":"  @Test\n  public void testHavingStream() throws Exception {\n\n    SolrClientCache solrClientCache = new SolrClientCache();\n\n    new UpdateRequest()\n        .add(id, \"0\", \"a_s\", \"hello0\", \"a_i\", \"0\", \"a_f\", \"1\", \"subject\", \"blah blah blah 0\")\n        .add(id, \"2\", \"a_s\", \"hello0\", \"a_i\", \"2\", \"a_f\", \"2\", \"subject\", \"blah blah blah 2\")\n        .add(id, \"3\", \"a_s\", \"hello3\", \"a_i\", \"3\", \"a_f\", \"3\", \"subject\", \"blah blah blah 3\")\n        .add(id, \"4\", \"a_s\", \"hello4\", \"a_i\", \"4\", \"a_f\", \"4\", \"subject\", \"blah blah blah 4\")\n        .add(id, \"1\", \"a_s\", \"hello0\", \"a_i\", \"1\", \"a_f\", \"5\", \"subject\", \"blah blah blah 1\")\n        .add(id, \"5\", \"a_s\", \"hello3\", \"a_i\", \"5\", \"a_f\", \"6\", \"subject\", \"blah blah blah 5\")\n        .add(id, \"6\", \"a_s\", \"hello4\", \"a_i\", \"6\", \"a_f\", \"7\", \"subject\", \"blah blah blah 6\")\n        .add(id, \"7\", \"a_s\", \"hello3\", \"a_i\", \"7\", \"a_f\", \"8\", \"subject\", \"blah blah blah 7\")\n        .add(id, \"8\", \"a_s\", \"hello3\", \"a_i\", \"8\", \"a_f\", \"9\", \"subject\", \"blah blah blah 8\")\n        .add(id, \"9\", \"a_s\", \"hello0\", \"a_i\", \"9\", \"a_f\", \"10\", \"subject\", \"blah blah blah 9\")\n        .commit(cluster.getSolrClient(), COLLECTIONORALIAS);\n\n    TupleStream stream;\n    List<Tuple> tuples;\n\n    StreamFactory factory = new StreamFactory()\n        .withCollectionZkHost(COLLECTIONORALIAS, cluster.getZkServer().getZkAddress())\n        .withFunctionName(\"search\", CloudSolrStream.class)\n        .withFunctionName(\"having\", HavingStream.class)\n        .withFunctionName(\"rollup\", RollupStream.class)\n        .withFunctionName(\"sum\", SumMetric.class)\n        .withFunctionName(\"and\", AndEvaluator.class)\n        .withFunctionName(\"or\", OrEvaluator.class)\n        .withFunctionName(\"not\", NotEvaluator.class)\n        .withFunctionName(\"gt\", GreaterThanEvaluator.class)\n        .withFunctionName(\"lt\", LessThanEvaluator.class)\n        .withFunctionName(\"eq\", EqualToEvaluator.class)\n        .withFunctionName(\"lteq\", LessThanEqualToEvaluator.class)\n        .withFunctionName(\"gteq\", GreaterThanEqualToEvaluator.class);\n\n    stream = factory.constructStream(\"having(search(\" + COLLECTIONORALIAS + \", q=*:*, fl=\\\"id,a_s,a_i,a_f\\\", sort=\\\"a_f asc\\\"), eq(a_i, 9))\");\n    StreamContext context = new StreamContext();\n    context.setSolrClientCache(solrClientCache);\n    stream.setStreamContext(context);\n    tuples = getTuples(stream);\n\n    assert(tuples.size() == 1);\n    Tuple t = tuples.get(0);\n    assertTrue(t.getString(\"id\").equals(\"9\"));\n\n    stream = factory.constructStream(\"having(search(\" + COLLECTIONORALIAS + \", q=*:*, fl=\\\"id,a_s,a_i,a_f\\\", sort=\\\"a_f asc\\\"), and(eq(a_i, 9),lt(a_i, 10)))\");\n    context = new StreamContext();\n    context.setSolrClientCache(solrClientCache);\n    stream.setStreamContext(context);\n    tuples = getTuples(stream);\n\n    assert(tuples.size() == 1);\n    t = tuples.get(0);\n    assertTrue(t.getString(\"id\").equals(\"9\"));\n\n    stream = factory.constructStream(\"having(search(\" + COLLECTIONORALIAS + \", q=*:*, fl=\\\"id,a_s,a_i,a_f\\\", sort=\\\"a_f asc\\\"), or(eq(a_i, 9),eq(a_i, 8)))\");\n    context = new StreamContext();\n    context.setSolrClientCache(solrClientCache);\n    stream.setStreamContext(context);\n    tuples = getTuples(stream);\n\n    assert(tuples.size() == 2);\n    t = tuples.get(0);\n    assertTrue(t.getString(\"id\").equals(\"8\"));\n\n    t = tuples.get(1);\n    assertTrue(t.getString(\"id\").equals(\"9\"));\n\n\n    stream = factory.constructStream(\"having(search(\" + COLLECTIONORALIAS + \", q=*:*, fl=\\\"id,a_s,a_i,a_f\\\", sort=\\\"a_f asc\\\"), and(eq(a_i, 9),not(eq(a_i, 9))))\");\n    context = new StreamContext();\n    context.setSolrClientCache(solrClientCache);\n    stream.setStreamContext(context);\n    tuples = getTuples(stream);\n\n    assert(tuples.size() == 0);\n\n    stream = factory.constructStream(\"having(search(\" + COLLECTIONORALIAS + \", q=*:*, fl=\\\"id,a_s,a_i,a_f\\\", sort=\\\"a_f asc\\\"), and(lteq(a_i, 9), gteq(a_i, 8)))\");\n    context = new StreamContext();\n    context.setSolrClientCache(solrClientCache);\n    stream.setStreamContext(context);\n    tuples = getTuples(stream);\n\n    assert(tuples.size() == 2);\n\n    t = tuples.get(0);\n    assertTrue(t.getString(\"id\").equals(\"8\"));\n\n    t = tuples.get(1);\n    assertTrue(t.getString(\"id\").equals(\"9\"));\n\n    stream = factory.constructStream(\"having(rollup(over=a_f, sum(a_i), search(\" + COLLECTIONORALIAS + \", q=*:*, fl=\\\"id,a_s,a_i,a_f\\\", sort=\\\"a_f asc\\\")), and(eq(sum(a_i), 9),eq(sum(a_i), 9)))\");\n    context = new StreamContext();\n    context.setSolrClientCache(solrClientCache);\n    stream.setStreamContext(context);\n    tuples = getTuples(stream);\n\n    assert(tuples.size() == 1);\n    t = tuples.get(0);\n    assertTrue(t.getDouble(\"a_f\") == 10.0D);\n\n    solrClientCache.close();\n  }\n\n","sourceOld":"  @Test\n  public void testHavingStream() throws Exception {\n\n    SolrClientCache solrClientCache = new SolrClientCache();\n\n    new UpdateRequest()\n        .add(id, \"0\", \"a_s\", \"hello0\", \"a_i\", \"0\", \"a_f\", \"1\", \"subject\", \"blah blah blah 0\")\n        .add(id, \"2\", \"a_s\", \"hello0\", \"a_i\", \"2\", \"a_f\", \"2\", \"subject\", \"blah blah blah 2\")\n        .add(id, \"3\", \"a_s\", \"hello3\", \"a_i\", \"3\", \"a_f\", \"3\", \"subject\", \"blah blah blah 3\")\n        .add(id, \"4\", \"a_s\", \"hello4\", \"a_i\", \"4\", \"a_f\", \"4\", \"subject\", \"blah blah blah 4\")\n        .add(id, \"1\", \"a_s\", \"hello0\", \"a_i\", \"1\", \"a_f\", \"5\", \"subject\", \"blah blah blah 1\")\n        .add(id, \"5\", \"a_s\", \"hello3\", \"a_i\", \"5\", \"a_f\", \"6\", \"subject\", \"blah blah blah 5\")\n        .add(id, \"6\", \"a_s\", \"hello4\", \"a_i\", \"6\", \"a_f\", \"7\", \"subject\", \"blah blah blah 6\")\n        .add(id, \"7\", \"a_s\", \"hello3\", \"a_i\", \"7\", \"a_f\", \"8\", \"subject\", \"blah blah blah 7\")\n        .add(id, \"8\", \"a_s\", \"hello3\", \"a_i\", \"8\", \"a_f\", \"9\", \"subject\", \"blah blah blah 8\")\n        .add(id, \"9\", \"a_s\", \"hello0\", \"a_i\", \"9\", \"a_f\", \"10\", \"subject\", \"blah blah blah 9\")\n        .commit(cluster.getSolrClient(), COLLECTIONORALIAS);\n\n    TupleStream stream;\n    List<Tuple> tuples;\n\n    StreamFactory factory = new StreamFactory()\n        .withCollectionZkHost(COLLECTIONORALIAS, cluster.getZkServer().getZkAddress())\n        .withFunctionName(\"search\", CloudSolrStream.class)\n        .withFunctionName(\"having\", HavingStream.class)\n        .withFunctionName(\"rollup\", RollupStream.class)\n        .withFunctionName(\"sum\", SumMetric.class)\n        .withFunctionName(\"and\", AndEvaluator.class)\n        .withFunctionName(\"or\", OrEvaluator.class)\n        .withFunctionName(\"not\", NotEvaluator.class)\n        .withFunctionName(\"gt\", GreaterThanEvaluator.class)\n        .withFunctionName(\"lt\", LessThanEvaluator.class)\n        .withFunctionName(\"eq\", EqualToEvaluator.class)\n        .withFunctionName(\"lteq\", LessThanEqualToEvaluator.class)\n        .withFunctionName(\"gteq\", GreaterThanEqualToEvaluator.class);\n\n    stream = factory.constructStream(\"having(search(\" + COLLECTIONORALIAS + \", q=*:*, fl=\\\"id,a_s,a_i,a_f\\\", sort=\\\"a_f asc\\\"), eq(a_i, 9))\");\n    StreamContext context = new StreamContext();\n    context.setSolrClientCache(solrClientCache);\n    stream.setStreamContext(context);\n    tuples = getTuples(stream);\n\n    assert(tuples.size() == 1);\n    Tuple t = tuples.get(0);\n    assertTrue(t.getString(\"id\").equals(\"9\"));\n\n    stream = factory.constructStream(\"having(search(\" + COLLECTIONORALIAS + \", q=*:*, fl=\\\"id,a_s,a_i,a_f\\\", sort=\\\"a_f asc\\\"), and(eq(a_i, 9),lt(a_i, 10)))\");\n    context = new StreamContext();\n    context.setSolrClientCache(solrClientCache);\n    stream.setStreamContext(context);\n    tuples = getTuples(stream);\n\n    assert(tuples.size() == 1);\n    t = tuples.get(0);\n    assertTrue(t.getString(\"id\").equals(\"9\"));\n\n    stream = factory.constructStream(\"having(search(\" + COLLECTIONORALIAS + \", q=*:*, fl=\\\"id,a_s,a_i,a_f\\\", sort=\\\"a_f asc\\\"), or(eq(a_i, 9),eq(a_i, 8)))\");\n    context = new StreamContext();\n    context.setSolrClientCache(solrClientCache);\n    stream.setStreamContext(context);\n    tuples = getTuples(stream);\n\n    assert(tuples.size() == 2);\n    t = tuples.get(0);\n    assertTrue(t.getString(\"id\").equals(\"8\"));\n\n    t = tuples.get(1);\n    assertTrue(t.getString(\"id\").equals(\"9\"));\n\n\n    stream = factory.constructStream(\"having(search(\" + COLLECTIONORALIAS + \", q=*:*, fl=\\\"id,a_s,a_i,a_f\\\", sort=\\\"a_f asc\\\"), and(eq(a_i, 9),not(eq(a_i, 9))))\");\n    context = new StreamContext();\n    context.setSolrClientCache(solrClientCache);\n    stream.setStreamContext(context);\n    tuples = getTuples(stream);\n\n    assert(tuples.size() == 0);\n\n\n    stream = factory.constructStream(\"having(search(\" + COLLECTIONORALIAS + \", q=*:*, fl=\\\"id,a_s,a_i,a_f\\\", sort=\\\"a_f asc\\\"), and(lteq(a_i, 9), gteq(a_i, 8)))\");\n    context = new StreamContext();\n    context.setSolrClientCache(solrClientCache);\n    stream.setStreamContext(context);\n    tuples = getTuples(stream);\n\n    assert(tuples.size() == 2);\n\n    t = tuples.get(0);\n    assertTrue(t.getString(\"id\").equals(\"8\"));\n\n    t = tuples.get(1);\n    assertTrue(t.getString(\"id\").equals(\"9\"));\n\n    stream = factory.constructStream(\"having(rollup(over=a_f, sum(a_i), search(\" + COLLECTIONORALIAS + \", q=*:*, fl=\\\"id,a_s,a_i,a_f\\\", sort=\\\"a_f asc\\\")), and(eq(sum(a_i), 9),eq(sum(a_i), 9)))\");\n    context = new StreamContext();\n    context.setSolrClientCache(solrClientCache);\n    stream.setStreamContext(context);\n    tuples = getTuples(stream);\n\n    assert(tuples.size() == 1);\n    t = tuples.get(0);\n    assertTrue(t.getDouble(\"a_f\") == 10.0D);\n\n    solrClientCache.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8ff654a6d1fb7a79aedaa65c23cc052fdc770aaf"],"8ff654a6d1fb7a79aedaa65c23cc052fdc770aaf":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8ff654a6d1fb7a79aedaa65c23cc052fdc770aaf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"8ff654a6d1fb7a79aedaa65c23cc052fdc770aaf":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}