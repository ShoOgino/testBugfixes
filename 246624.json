{"path":"lucene/test-framework/src/java/org/apache/lucene/util/TestRuleSetupAndRestoreInstanceEnv#before().mjava","commits":[{"id":"5da0b42730b6b99b31389ef94cb97384e83b9ede","date":1337107665,"type":0,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/TestRuleSetupAndRestoreInstanceEnv#before().mjava","pathOld":"/dev/null","sourceNew":"  protected void before() {\n    savedBoolMaxClauseCount = BooleanQuery.getMaxClauseCount();\n\n    final String defFormat = _TestUtil.getPostingsFormat(\"thisCodeMakesAbsolutelyNoSenseCanWeDeleteIt\");\n    if (LuceneTestCase.shouldAvoidCodec(defFormat)) {\n      throw new AssumptionViolatedException(\n          \"Method not allowed to use codec: \" + defFormat + \".\");\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["197be891529ba2dea8287e2251906be9533dc8ea"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"6a88536886c93d729596349585802a38c63436ce","date":1338402624,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/TestRuleSetupAndRestoreInstanceEnv#before().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/TestRuleSetupAndRestoreInstanceEnv#before().mjava","sourceNew":"  protected void before() {\n    savedBoolMaxClauseCount = BooleanQuery.getMaxClauseCount();\n\n    Codec codec = Codec.getDefault();\n    if (LuceneTestCase.shouldAvoidCodec(codec.getName())) {\n      throw new AssumptionViolatedException(\n          \"Method not allowed to use codec: \" + codec.getName() + \".\");\n    }\n    // TODO: make this more efficient\n    if (codec instanceof RandomCodec) {\n      for (String name : ((RandomCodec)codec).formatNames) {\n        if (LuceneTestCase.shouldAvoidCodec(name)) {\n          throw new AssumptionViolatedException(\n              \"Method not allowed to use postings format: \" + name + \".\");\n        }\n      }\n    }\n    PostingsFormat pf = codec.postingsFormat();\n    if (LuceneTestCase.shouldAvoidCodec(pf.getName())) {\n      throw new AssumptionViolatedException(\n          \"Method not allowed to use postings format: \" + pf.getName() + \".\");\n    }\n    \n  }\n\n","sourceOld":"  protected void before() {\n    savedBoolMaxClauseCount = BooleanQuery.getMaxClauseCount();\n\n    final String defFormat = _TestUtil.getPostingsFormat(\"thisCodeMakesAbsolutelyNoSenseCanWeDeleteIt\");\n    if (LuceneTestCase.shouldAvoidCodec(defFormat)) {\n      throw new AssumptionViolatedException(\n          \"Method not allowed to use codec: \" + defFormat + \".\");\n    }\n  }\n\n","bugFix":null,"bugIntro":["197be891529ba2dea8287e2251906be9533dc8ea"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"197be891529ba2dea8287e2251906be9533dc8ea","date":1339266828,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/TestRuleSetupAndRestoreInstanceEnv#before().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/TestRuleSetupAndRestoreInstanceEnv#before().mjava","sourceNew":"  protected void before() {\n    savedBoolMaxClauseCount = BooleanQuery.getMaxClauseCount();\n  }\n\n","sourceOld":"  protected void before() {\n    savedBoolMaxClauseCount = BooleanQuery.getMaxClauseCount();\n\n    Codec codec = Codec.getDefault();\n    if (LuceneTestCase.shouldAvoidCodec(codec.getName())) {\n      throw new AssumptionViolatedException(\n          \"Method not allowed to use codec: \" + codec.getName() + \".\");\n    }\n    // TODO: make this more efficient\n    if (codec instanceof RandomCodec) {\n      for (String name : ((RandomCodec)codec).formatNames) {\n        if (LuceneTestCase.shouldAvoidCodec(name)) {\n          throw new AssumptionViolatedException(\n              \"Method not allowed to use postings format: \" + name + \".\");\n        }\n      }\n    }\n    PostingsFormat pf = codec.postingsFormat();\n    if (LuceneTestCase.shouldAvoidCodec(pf.getName())) {\n      throw new AssumptionViolatedException(\n          \"Method not allowed to use postings format: \" + pf.getName() + \".\");\n    }\n    \n  }\n\n","bugFix":["6a88536886c93d729596349585802a38c63436ce","5da0b42730b6b99b31389ef94cb97384e83b9ede"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7530de27b87b961b51f01bd1299b7004d46e8823","date":1355236261,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/TestRuleSetupAndRestoreInstanceEnv#before().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/TestRuleSetupAndRestoreInstanceEnv#before().mjava","sourceNew":"  @Override\n  protected void before() {\n    savedBoolMaxClauseCount = BooleanQuery.getMaxClauseCount();\n  }\n\n","sourceOld":"  protected void before() {\n    savedBoolMaxClauseCount = BooleanQuery.getMaxClauseCount();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/TestRuleSetupAndRestoreInstanceEnv#before().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/TestRuleSetupAndRestoreInstanceEnv#before().mjava","sourceNew":"  @Override\n  protected void before() {\n    savedBoolMaxClauseCount = BooleanQuery.getMaxClauseCount();\n  }\n\n","sourceOld":"  protected void before() {\n    savedBoolMaxClauseCount = BooleanQuery.getMaxClauseCount();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"36c70eb3b44de4355a7168b762cadc0f1cf194bc","date":1561542955,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/TestRuleSetupAndRestoreInstanceEnv#before().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/TestRuleSetupAndRestoreInstanceEnv#before().mjava","sourceNew":"  @Override\n  protected void before() {\n    savedBoolMaxClauseCount = IndexSearcher.getMaxClauseCount();\n  }\n\n","sourceOld":"  @Override\n  protected void before() {\n    savedBoolMaxClauseCount = BooleanQuery.getMaxClauseCount();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["197be891529ba2dea8287e2251906be9533dc8ea","7530de27b87b961b51f01bd1299b7004d46e8823"],"5da0b42730b6b99b31389ef94cb97384e83b9ede":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"197be891529ba2dea8287e2251906be9533dc8ea":["6a88536886c93d729596349585802a38c63436ce"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6a88536886c93d729596349585802a38c63436ce":["5da0b42730b6b99b31389ef94cb97384e83b9ede"],"36c70eb3b44de4355a7168b762cadc0f1cf194bc":["7530de27b87b961b51f01bd1299b7004d46e8823"],"7530de27b87b961b51f01bd1299b7004d46e8823":["197be891529ba2dea8287e2251906be9533dc8ea"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["36c70eb3b44de4355a7168b762cadc0f1cf194bc"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"5da0b42730b6b99b31389ef94cb97384e83b9ede":["6a88536886c93d729596349585802a38c63436ce"],"197be891529ba2dea8287e2251906be9533dc8ea":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","7530de27b87b961b51f01bd1299b7004d46e8823"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5da0b42730b6b99b31389ef94cb97384e83b9ede"],"6a88536886c93d729596349585802a38c63436ce":["197be891529ba2dea8287e2251906be9533dc8ea"],"7530de27b87b961b51f01bd1299b7004d46e8823":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","36c70eb3b44de4355a7168b762cadc0f1cf194bc"],"36c70eb3b44de4355a7168b762cadc0f1cf194bc":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}