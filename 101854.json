{"path":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextPerDocProducer.SimpleTextDocValues#load().mjava","commits":[{"id":"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2","date":1346834651,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextPerDocProducer.SimpleTextDocValues#load().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/simpletext/SimpleTextPerDocProducer.SimpleTextDocValues#load().mjava","sourceNew":"    @Override\n    public Source load() throws IOException {\n      boolean success = false;\n      IndexInput in = input.clone();\n      try {\n        Source source = null;\n        switch (type) {\n        case BYTES_FIXED_DEREF:\n        case BYTES_FIXED_SORTED:\n        case BYTES_FIXED_STRAIGHT:\n        case BYTES_VAR_DEREF:\n        case BYTES_VAR_SORTED:\n        case BYTES_VAR_STRAIGHT:\n          source = read(in, new ValueReader(type, docCount, comp));\n          break;\n        case FIXED_INTS_16:\n        case FIXED_INTS_32:\n        case VAR_INTS:\n        case FIXED_INTS_64:\n        case FIXED_INTS_8:\n        case FLOAT_32:\n        case FLOAT_64:\n          source = read(in, new ValueReader(type, docCount, null));\n          break;\n        default:\n          throw new IllegalArgumentException(\"unknown type: \" + type);\n        }\n        assert source != null;\n        success = true;\n        return source;\n      } finally {\n        if (!success) {\n          IOUtils.closeWhileHandlingException(in);\n        } else {\n          IOUtils.close(in);\n        }\n      }\n    }\n\n","sourceOld":"    @Override\n    public Source load() throws IOException {\n      boolean success = false;\n      IndexInput in = input.clone();\n      try {\n        Source source = null;\n        switch (type) {\n        case BYTES_FIXED_DEREF:\n        case BYTES_FIXED_SORTED:\n        case BYTES_FIXED_STRAIGHT:\n        case BYTES_VAR_DEREF:\n        case BYTES_VAR_SORTED:\n        case BYTES_VAR_STRAIGHT:\n          source = read(in, new ValueReader(type, docCount, comp));\n          break;\n        case FIXED_INTS_16:\n        case FIXED_INTS_32:\n        case VAR_INTS:\n        case FIXED_INTS_64:\n        case FIXED_INTS_8:\n        case FLOAT_32:\n        case FLOAT_64:\n          source = read(in, new ValueReader(type, docCount, null));\n          break;\n        default:\n          throw new IllegalArgumentException(\"unknown type: \" + type);\n        }\n        assert source != null;\n        success = true;\n        return source;\n      } finally {\n        if (!success) {\n          IOUtils.closeWhileHandlingException(in);\n        } else {\n          IOUtils.close(in);\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d91f606c5d64e2c5fcf6065a8b96f9edd88851d7","date":1352213037,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextPerDocProducer.SimpleTextDocValues#loadSource().mjava","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/simpletext/SimpleTextPerDocProducer.SimpleTextDocValues#load().mjava","sourceNew":"    @Override\n    protected Source loadSource() throws IOException {\n      boolean success = false;\n      IndexInput in = input.clone();\n      try {\n        Source source = null;\n        switch (type) {\n        case BYTES_FIXED_DEREF:\n        case BYTES_FIXED_SORTED:\n        case BYTES_FIXED_STRAIGHT:\n        case BYTES_VAR_DEREF:\n        case BYTES_VAR_SORTED:\n        case BYTES_VAR_STRAIGHT:\n          source = read(in, new ValueReader(type, docCount, comp));\n          break;\n        case FIXED_INTS_16:\n        case FIXED_INTS_32:\n        case VAR_INTS:\n        case FIXED_INTS_64:\n        case FIXED_INTS_8:\n        case FLOAT_32:\n        case FLOAT_64:\n          source = read(in, new ValueReader(type, docCount, null));\n          break;\n        default:\n          throw new IllegalArgumentException(\"unknown type: \" + type);\n        }\n        assert source != null;\n        success = true;\n        return source;\n      } finally {\n        if (!success) {\n          IOUtils.closeWhileHandlingException(in);\n        } else {\n          IOUtils.close(in);\n        }\n      }\n    }\n\n","sourceOld":"    @Override\n    public Source load() throws IOException {\n      boolean success = false;\n      IndexInput in = input.clone();\n      try {\n        Source source = null;\n        switch (type) {\n        case BYTES_FIXED_DEREF:\n        case BYTES_FIXED_SORTED:\n        case BYTES_FIXED_STRAIGHT:\n        case BYTES_VAR_DEREF:\n        case BYTES_VAR_SORTED:\n        case BYTES_VAR_STRAIGHT:\n          source = read(in, new ValueReader(type, docCount, comp));\n          break;\n        case FIXED_INTS_16:\n        case FIXED_INTS_32:\n        case VAR_INTS:\n        case FIXED_INTS_64:\n        case FIXED_INTS_8:\n        case FLOAT_32:\n        case FLOAT_64:\n          source = read(in, new ValueReader(type, docCount, null));\n          break;\n        default:\n          throw new IllegalArgumentException(\"unknown type: \" + type);\n        }\n        assert source != null;\n        success = true;\n        return source;\n      } finally {\n        if (!success) {\n          IOUtils.closeWhileHandlingException(in);\n        } else {\n          IOUtils.close(in);\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d91f606c5d64e2c5fcf6065a8b96f9edd88851d7":["3e45d45bc3730ddd1341f4eb6025f33b8482e6e2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d91f606c5d64e2c5fcf6065a8b96f9edd88851d7"]},"commit2Childs":{"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2":["d91f606c5d64e2c5fcf6065a8b96f9edd88851d7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3e45d45bc3730ddd1341f4eb6025f33b8482e6e2"],"d91f606c5d64e2c5fcf6065a8b96f9edd88851d7":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}