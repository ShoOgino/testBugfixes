{"path":"lucene/src/java/org/apache/lucene/search/FieldValueHitQueue.OneComparatorFieldValueHitQueue#lessThan(Entry,Entry).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/FieldValueHitQueue.OneComparatorFieldValueHitQueue#lessThan(Entry,Entry).mjava","pathOld":"src/java/org/apache/lucene/search/FieldValueHitQueue.OneComparatorFieldValueHitQueue#lessThan(Entry,Entry).mjava","sourceNew":"    /**\n     * Returns whether <code>a</code> is less relevant than <code>b</code>.\n     * @param a ScoreDoc\n     * @param b ScoreDoc\n     * @return <code>true</code> if document <code>a</code> should be sorted after document <code>b</code>.\n     */\n    @Override\n    protected boolean lessThan(final Entry hitA, final Entry hitB) {\n\n      assert hitA != hitB;\n      assert hitA.slot != hitB.slot;\n\n      final int c = oneReverseMul * comparator.compare(hitA.slot, hitB.slot);\n      if (c != 0) {\n        return c > 0;\n      }\n\n      // avoid random sort order that could lead to duplicates (bug #31241):\n      return hitA.doc > hitB.doc;\n    }\n\n","sourceOld":"    /**\n     * Returns whether <code>a</code> is less relevant than <code>b</code>.\n     * @param a ScoreDoc\n     * @param b ScoreDoc\n     * @return <code>true</code> if document <code>a</code> should be sorted after document <code>b</code>.\n     */\n    @Override\n    protected boolean lessThan(final Entry hitA, final Entry hitB) {\n\n      assert hitA != hitB;\n      assert hitA.slot != hitB.slot;\n\n      final int c = oneReverseMul * comparator.compare(hitA.slot, hitB.slot);\n      if (c != 0) {\n        return c > 0;\n      }\n\n      // avoid random sort order that could lead to duplicates (bug #31241):\n      return hitA.doc > hitB.doc;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"460b79c7e263b28663bc8ebf63eeeaa58b19f5b1","date":1284498269,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/FieldValueHitQueue.OneComparatorFieldValueHitQueue#lessThan(Entry,Entry).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/FieldValueHitQueue.OneComparatorFieldValueHitQueue#lessThan(Entry,Entry).mjava","sourceNew":"    /**\n     * Returns whether <code>a</code> is less relevant than <code>b</code>.\n     * @param a ScoreDoc\n     * @param b ScoreDoc\n     * @return <code>true</code> if document <code>a</code> should be sorted after document <code>b</code>.\n     */\n    @Override\n    protected boolean lessThan(final Entry hitA, final Entry hitB) {\n\n      assert hitA != hitB;\n      assert hitA.slot != hitB.slot;\n\n      final int c = oneReverseMul * firstComparator.compare(hitA.slot, hitB.slot);\n      if (c != 0) {\n        return c > 0;\n      }\n\n      // avoid random sort order that could lead to duplicates (bug #31241):\n      return hitA.doc > hitB.doc;\n    }\n\n","sourceOld":"    /**\n     * Returns whether <code>a</code> is less relevant than <code>b</code>.\n     * @param a ScoreDoc\n     * @param b ScoreDoc\n     * @return <code>true</code> if document <code>a</code> should be sorted after document <code>b</code>.\n     */\n    @Override\n    protected boolean lessThan(final Entry hitA, final Entry hitB) {\n\n      assert hitA != hitB;\n      assert hitA.slot != hitB.slot;\n\n      final int c = oneReverseMul * comparator.compare(hitA.slot, hitB.slot);\n      if (c != 0) {\n        return c > 0;\n      }\n\n      // avoid random sort order that could lead to duplicates (bug #31241):\n      return hitA.doc > hitB.doc;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/FieldValueHitQueue.OneComparatorFieldValueHitQueue#lessThan(Entry,Entry).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/FieldValueHitQueue.OneComparatorFieldValueHitQueue#lessThan(Entry,Entry).mjava","sourceNew":"    /**\n     * Returns whether <code>a</code> is less relevant than <code>b</code>.\n     * @param a ScoreDoc\n     * @param b ScoreDoc\n     * @return <code>true</code> if document <code>a</code> should be sorted after document <code>b</code>.\n     */\n    @Override\n    protected boolean lessThan(final Entry hitA, final Entry hitB) {\n\n      assert hitA != hitB;\n      assert hitA.slot != hitB.slot;\n\n      final int c = oneReverseMul * firstComparator.compare(hitA.slot, hitB.slot);\n      if (c != 0) {\n        return c > 0;\n      }\n\n      // avoid random sort order that could lead to duplicates (bug #31241):\n      return hitA.doc > hitB.doc;\n    }\n\n","sourceOld":"    /**\n     * Returns whether <code>a</code> is less relevant than <code>b</code>.\n     * @param a ScoreDoc\n     * @param b ScoreDoc\n     * @return <code>true</code> if document <code>a</code> should be sorted after document <code>b</code>.\n     */\n    @Override\n    protected boolean lessThan(final Entry hitA, final Entry hitB) {\n\n      assert hitA != hitB;\n      assert hitA.slot != hitB.slot;\n\n      final int c = oneReverseMul * comparator.compare(hitA.slot, hitB.slot);\n      if (c != 0) {\n        return c > 0;\n      }\n\n      // avoid random sort order that could lead to duplicates (bug #31241):\n      return hitA.doc > hitB.doc;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/FieldValueHitQueue.OneComparatorFieldValueHitQueue#lessThan(Entry,Entry).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/FieldValueHitQueue.OneComparatorFieldValueHitQueue#lessThan(Entry,Entry).mjava","sourceNew":"    /**\n     * Returns whether <code>a</code> is less relevant than <code>b</code>.\n     * @param a ScoreDoc\n     * @param b ScoreDoc\n     * @return <code>true</code> if document <code>a</code> should be sorted after document <code>b</code>.\n     */\n    @Override\n    protected boolean lessThan(final Entry hitA, final Entry hitB) {\n\n      assert hitA != hitB;\n      assert hitA.slot != hitB.slot;\n\n      final int c = oneReverseMul * firstComparator.compare(hitA.slot, hitB.slot);\n      if (c != 0) {\n        return c > 0;\n      }\n\n      // avoid random sort order that could lead to duplicates (bug #31241):\n      return hitA.doc > hitB.doc;\n    }\n\n","sourceOld":"    /**\n     * Returns whether <code>a</code> is less relevant than <code>b</code>.\n     * @param a ScoreDoc\n     * @param b ScoreDoc\n     * @return <code>true</code> if document <code>a</code> should be sorted after document <code>b</code>.\n     */\n    @Override\n    protected boolean lessThan(final Entry hitA, final Entry hitB) {\n\n      assert hitA != hitB;\n      assert hitA.slot != hitB.slot;\n\n      final int c = oneReverseMul * firstComparator.compare(hitA.slot, hitB.slot);\n      if (c != 0) {\n        return c > 0;\n      }\n\n      // avoid random sort order that could lead to duplicates (bug #31241):\n      return hitA.doc > hitB.doc;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"460b79c7e263b28663bc8ebf63eeeaa58b19f5b1":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["460b79c7e263b28663bc8ebf63eeeaa58b19f5b1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["9454a6510e2db155fb01faa5c049b06ece95fab9","460b79c7e263b28663bc8ebf63eeeaa58b19f5b1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"460b79c7e263b28663bc8ebf63eeeaa58b19f5b1":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["460b79c7e263b28663bc8ebf63eeeaa58b19f5b1","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}