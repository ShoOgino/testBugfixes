{"path":"modules/analysis/common/src/test/org/apache/lucene/analysis/hunspell/HunspellDictionaryTest#testHunspellDictionary_loadDicAff().mjava","commits":[{"id":"8f976917c54bb925b908d73fc4c2092e4abb8508","date":1315634439,"type":0,"author":"Christopher John Male","isMerge":false,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/hunspell/HunspellDictionaryTest#testHunspellDictionary_loadDicAff().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testHunspellDictionary_loadDicAff() throws IOException, ParseException {\n    InputStream affixStream = getClass().getResourceAsStream(\"test.aff\");\n    InputStream dictStream = getClass().getResourceAsStream(\"test.dic\");\n\n    HunspellDictionary dictionary = new HunspellDictionary(affixStream, dictStream, Version.LUCENE_40);\n    assertEquals(2, dictionary.lookupSuffix(new char[]{'e'}, 0, 1).size());\n    assertEquals(1, dictionary.lookupPrefix(new char[]{'s'}, 0, 1).size());\n    assertEquals(1, dictionary.lookupWord(new char[]{'o', 'l', 'r'}, 0, 3).size());\n\n    affixStream.close();\n    dictStream.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"77d6144bb77983c683128c11b708057809173cff","date":1317852535,"type":3,"author":"Jan HÃ¸ydahl","isMerge":false,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/hunspell/HunspellDictionaryTest#testHunspellDictionary_loadDicAff().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/hunspell/HunspellDictionaryTest#testHunspellDictionary_loadDicAff().mjava","sourceNew":"  @Test\n  public void testHunspellDictionary_loadDicAff() throws IOException, ParseException {\n    InputStream affixStream = getClass().getResourceAsStream(\"test.aff\");\n    InputStream dictStream = getClass().getResourceAsStream(\"test.dic\");\n\n    HunspellDictionary dictionary = new HunspellDictionary(affixStream, dictStream, Version.LUCENE_40);\n    assertEquals(3, dictionary.lookupSuffix(new char[]{'e'}, 0, 1).size());\n    assertEquals(1, dictionary.lookupPrefix(new char[]{'s'}, 0, 1).size());\n    assertEquals(1, dictionary.lookupWord(new char[]{'o', 'l', 'r'}, 0, 3).size());\n\n    affixStream.close();\n    dictStream.close();\n  }\n\n","sourceOld":"  @Test\n  public void testHunspellDictionary_loadDicAff() throws IOException, ParseException {\n    InputStream affixStream = getClass().getResourceAsStream(\"test.aff\");\n    InputStream dictStream = getClass().getResourceAsStream(\"test.dic\");\n\n    HunspellDictionary dictionary = new HunspellDictionary(affixStream, dictStream, Version.LUCENE_40);\n    assertEquals(2, dictionary.lookupSuffix(new char[]{'e'}, 0, 1).size());\n    assertEquals(1, dictionary.lookupPrefix(new char[]{'s'}, 0, 1).size());\n    assertEquals(1, dictionary.lookupWord(new char[]{'o', 'l', 'r'}, 0, 3).size());\n\n    affixStream.close();\n    dictStream.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"72ab80d51a939058c43b9e2b9901c567041502d9","date":1326199598,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/hunspell/HunspellDictionaryTest#testHunspellDictionary_loadDicAff().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/hunspell/HunspellDictionaryTest#testHunspellDictionary_loadDicAff().mjava","sourceNew":"  @Test\n  public void testHunspellDictionary_loadDicAff() throws IOException, ParseException {\n    InputStream affixStream = getClass().getResourceAsStream(\"test.aff\");\n    InputStream dictStream = getClass().getResourceAsStream(\"test.dic\");\n\n    HunspellDictionary dictionary = new HunspellDictionary(affixStream, dictStream, TEST_VERSION_CURRENT);\n    assertEquals(3, dictionary.lookupSuffix(new char[]{'e'}, 0, 1).size());\n    assertEquals(1, dictionary.lookupPrefix(new char[]{'s'}, 0, 1).size());\n    assertEquals(1, dictionary.lookupWord(new char[]{'o', 'l', 'r'}, 0, 3).size());\n\n    affixStream.close();\n    dictStream.close();\n  }\n\n","sourceOld":"  @Test\n  public void testHunspellDictionary_loadDicAff() throws IOException, ParseException {\n    InputStream affixStream = getClass().getResourceAsStream(\"test.aff\");\n    InputStream dictStream = getClass().getResourceAsStream(\"test.dic\");\n\n    HunspellDictionary dictionary = new HunspellDictionary(affixStream, dictStream, Version.LUCENE_40);\n    assertEquals(3, dictionary.lookupSuffix(new char[]{'e'}, 0, 1).size());\n    assertEquals(1, dictionary.lookupPrefix(new char[]{'s'}, 0, 1).size());\n    assertEquals(1, dictionary.lookupWord(new char[]{'o', 'l', 'r'}, 0, 3).size());\n\n    affixStream.close();\n    dictStream.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/hunspell/HunspellDictionaryTest#testHunspellDictionary_loadDicAff().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/hunspell/HunspellDictionaryTest#testHunspellDictionary_loadDicAff().mjava","sourceNew":"  @Test\n  public void testHunspellDictionary_loadDicAff() throws IOException, ParseException {\n    InputStream affixStream = getClass().getResourceAsStream(\"test.aff\");\n    InputStream dictStream = getClass().getResourceAsStream(\"test.dic\");\n\n    HunspellDictionary dictionary = new HunspellDictionary(affixStream, dictStream, TEST_VERSION_CURRENT);\n    assertEquals(3, dictionary.lookupSuffix(new char[]{'e'}, 0, 1).size());\n    assertEquals(1, dictionary.lookupPrefix(new char[]{'s'}, 0, 1).size());\n    assertEquals(1, dictionary.lookupWord(new char[]{'o', 'l', 'r'}, 0, 3).size());\n\n    affixStream.close();\n    dictStream.close();\n  }\n\n","sourceOld":"  @Test\n  public void testHunspellDictionary_loadDicAff() throws IOException, ParseException {\n    InputStream affixStream = getClass().getResourceAsStream(\"test.aff\");\n    InputStream dictStream = getClass().getResourceAsStream(\"test.dic\");\n\n    HunspellDictionary dictionary = new HunspellDictionary(affixStream, dictStream, TEST_VERSION_CURRENT);\n    assertEquals(3, dictionary.lookupSuffix(new char[]{'e'}, 0, 1).size());\n    assertEquals(1, dictionary.lookupPrefix(new char[]{'s'}, 0, 1).size());\n    assertEquals(1, dictionary.lookupWord(new char[]{'o', 'l', 'r'}, 0, 3).size());\n\n    affixStream.close();\n    dictStream.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["72ab80d51a939058c43b9e2b9901c567041502d9"],"72ab80d51a939058c43b9e2b9901c567041502d9":["77d6144bb77983c683128c11b708057809173cff"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8f976917c54bb925b908d73fc4c2092e4abb8508":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"77d6144bb77983c683128c11b708057809173cff":["8f976917c54bb925b908d73fc4c2092e4abb8508"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"72ab80d51a939058c43b9e2b9901c567041502d9":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8f976917c54bb925b908d73fc4c2092e4abb8508"],"8f976917c54bb925b908d73fc4c2092e4abb8508":["77d6144bb77983c683128c11b708057809173cff"],"77d6144bb77983c683128c11b708057809173cff":["72ab80d51a939058c43b9e2b9901c567041502d9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}