{"path":"modules/spatial-lucene/src/test/java/org/apache/lucene/spatial/base/distance/TestDistances#testDistCalcPointOnBearing(double).mjava","commits":[{"id":"b17c5c53627893d93f9261826cc6d9c447c5ee3a","date":1329777932,"type":0,"author":"David Wayne Smiley","isMerge":false,"pathNew":"modules/spatial-lucene/src/test/java/org/apache/lucene/spatial/base/distance/TestDistances#testDistCalcPointOnBearing(double).mjava","pathOld":"/dev/null","sourceNew":"  private void testDistCalcPointOnBearing(double dist) {\n    for(int angDEG = 0; angDEG < 360; angDEG += random.nextInt(20)+1) {\n      Point c = ctx.makePoint(random.nextInt(360),-90+random.nextInt(181));\n\n      //0 distance means same point\n      Point p2 = dc().pointOnBearing(c, 0, angDEG, ctx);\n      assertEquals(c,p2);\n\n      p2 = dc().pointOnBearing(c, dist, angDEG, ctx);\n      double calcDist = dc().distance(c, p2);\n      assertEqualsRatio(dist, calcDist);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ef186f4ac90644cd4e8df6b66acb56a52e5ca602","date":1329778037,"type":5,"author":"David Wayne Smiley","isMerge":false,"pathNew":"modules/spatial/src/test/java/org/apache/lucene/spatial/base/distance/TestDistances#testDistCalcPointOnBearing(double).mjava","pathOld":"modules/spatial-lucene/src/test/java/org/apache/lucene/spatial/base/distance/TestDistances#testDistCalcPointOnBearing(double).mjava","sourceNew":"  private void testDistCalcPointOnBearing(double dist) {\n    for(int angDEG = 0; angDEG < 360; angDEG += random.nextInt(20)+1) {\n      Point c = ctx.makePoint(random.nextInt(360),-90+random.nextInt(181));\n\n      //0 distance means same point\n      Point p2 = dc().pointOnBearing(c, 0, angDEG, ctx);\n      assertEquals(c,p2);\n\n      p2 = dc().pointOnBearing(c, dist, angDEG, ctx);\n      double calcDist = dc().distance(c, p2);\n      assertEqualsRatio(dist, calcDist);\n    }\n  }\n\n","sourceOld":"  private void testDistCalcPointOnBearing(double dist) {\n    for(int angDEG = 0; angDEG < 360; angDEG += random.nextInt(20)+1) {\n      Point c = ctx.makePoint(random.nextInt(360),-90+random.nextInt(181));\n\n      //0 distance means same point\n      Point p2 = dc().pointOnBearing(c, 0, angDEG, ctx);\n      assertEquals(c,p2);\n\n      p2 = dc().pointOnBearing(c, dist, angDEG, ctx);\n      double calcDist = dc().distance(c, p2);\n      assertEqualsRatio(dist, calcDist);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ef186f4ac90644cd4e8df6b66acb56a52e5ca602":["b17c5c53627893d93f9261826cc6d9c447c5ee3a"],"b17c5c53627893d93f9261826cc6d9c447c5ee3a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b17c5c53627893d93f9261826cc6d9c447c5ee3a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ef186f4ac90644cd4e8df6b66acb56a52e5ca602":[],"b17c5c53627893d93f9261826cc6d9c447c5ee3a":["ef186f4ac90644cd4e8df6b66acb56a52e5ca602"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ef186f4ac90644cd4e8df6b66acb56a52e5ca602","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}