{"path":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/geom/SimpleGeoPolygonRelationshipsTest#testGeoSimplePolygon3().mjava","commits":[{"id":"0ca94ad4d6120f10fa13ce40a60a7fd1ede51705","date":1501767131,"type":0,"author":"Karl Wright","isMerge":false,"pathNew":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/geom/SimpleGeoPolygonRelationshipsTest#testGeoSimplePolygon3().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Test with two shapes with no crossing edges and all points inside in convex case.\n   */\n  @Test\n  public void testGeoSimplePolygon3() {\n\n    //POLYGON ((19.845091 -60.452631, 20.119948 -61.655652, 23.207901 -61.453298, 22.820804 -60.257713, 19.845091 -60.452631)) disjoint\n    GeoPolygon originalConvexPol = buildConvexGeoPolygon(19.84509, -60.452631,\n        20.119948, -61.655652,\n        23.207901, -61.453298,\n        22.820804, -60.257713);\n\n    GeoPolygon originalConcavePol = buildConcaveGeoPolygon(19.84509, -60.452631,\n        20.119948, -61.655652,\n        23.207901, -61.453298,\n        22.820804, -60.257713);\n\n    GeoPolygon originalComplexPol = buildComplexGeoPolygon(19.84509, -60.452631,\n        20.119948, -61.655652,\n        23.207901, -61.453298,\n        22.820804, -60.257713);\n\n    //POLYGON ((20.0 -61.1, 20.1 -61.1, 20.1 -60.5, 20.0  -60.5,20.0 -61.1))\n    GeoPolygon polConvex = buildConvexGeoPolygon(20.0, -61.1,\n        20.1, -61.1,\n        20.1, -60.5,\n        20.0, -60.5);\n\n    GeoPolygon polConcave = buildConcaveGeoPolygon(20.0, -61.1,\n        20.1, -61.1,\n        20.1, -60.5,\n        20.0, -60.5);\n\n    //Convex\n    int rel = originalConvexPol.getRelationship(polConvex);\n    assertEquals(GeoArea.WITHIN,  rel);\n    rel = polConvex.getRelationship(originalConvexPol);\n    assertEquals(GeoArea.CONTAINS,  rel);\n\n    rel = originalConvexPol.getRelationship(polConcave);\n    assertEquals(GeoArea.OVERLAPS,  rel);\n    rel = polConcave.getRelationship(originalConvexPol);\n    assertEquals(GeoArea.OVERLAPS,  rel);\n\n    //Concave\n    rel = originalConcavePol.getRelationship(polConcave);\n    assertEquals(GeoArea.CONTAINS,  rel);\n    rel = polConcave.getRelationship(originalConcavePol);\n    assertEquals(GeoArea.WITHIN,  rel);//check\n\n    rel = originalConcavePol.getRelationship(polConvex);\n    assertEquals(GeoArea.DISJOINT,  rel);\n    rel = polConvex.getRelationship(originalConcavePol);\n    assertEquals(GeoArea.DISJOINT,  rel);\n\n    //Complex\n    rel = originalComplexPol.getRelationship(polConvex);\n    assertEquals(GeoArea.WITHIN,  rel);\n    rel = polConvex.getRelationship(originalComplexPol);\n    assertEquals(GeoArea.CONTAINS,  rel);\n\n    rel = originalComplexPol.getRelationship(polConcave);\n    assertEquals(GeoArea.OVERLAPS,  rel);\n    rel = polConcave.getRelationship(originalComplexPol);\n    assertEquals(GeoArea.OVERLAPS,  rel);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7a23cf16c8fa265dc0a564adcabb55e3f054e0ac","date":1502192746,"type":0,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/geom/SimpleGeoPolygonRelationshipsTest#testGeoSimplePolygon3().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Test with two shapes with no crossing edges and all points inside in convex case.\n   */\n  @Test\n  public void testGeoSimplePolygon3() {\n\n    //POLYGON ((19.845091 -60.452631, 20.119948 -61.655652, 23.207901 -61.453298, 22.820804 -60.257713, 19.845091 -60.452631)) disjoint\n    GeoPolygon originalConvexPol = buildConvexGeoPolygon(19.84509, -60.452631,\n        20.119948, -61.655652,\n        23.207901, -61.453298,\n        22.820804, -60.257713);\n\n    GeoPolygon originalConcavePol = buildConcaveGeoPolygon(19.84509, -60.452631,\n        20.119948, -61.655652,\n        23.207901, -61.453298,\n        22.820804, -60.257713);\n\n    GeoPolygon originalComplexPol = buildComplexGeoPolygon(19.84509, -60.452631,\n        20.119948, -61.655652,\n        23.207901, -61.453298,\n        22.820804, -60.257713);\n\n    //POLYGON ((20.0 -61.1, 20.1 -61.1, 20.1 -60.5, 20.0  -60.5,20.0 -61.1))\n    GeoPolygon polConvex = buildConvexGeoPolygon(20.0, -61.1,\n        20.1, -61.1,\n        20.1, -60.5,\n        20.0, -60.5);\n\n    GeoPolygon polConcave = buildConcaveGeoPolygon(20.0, -61.1,\n        20.1, -61.1,\n        20.1, -60.5,\n        20.0, -60.5);\n\n    //Convex\n    int rel = originalConvexPol.getRelationship(polConvex);\n    assertEquals(GeoArea.WITHIN,  rel);\n    rel = polConvex.getRelationship(originalConvexPol);\n    assertEquals(GeoArea.CONTAINS,  rel);\n\n    rel = originalConvexPol.getRelationship(polConcave);\n    assertEquals(GeoArea.OVERLAPS,  rel);\n    rel = polConcave.getRelationship(originalConvexPol);\n    assertEquals(GeoArea.OVERLAPS,  rel);\n\n    //Concave\n    rel = originalConcavePol.getRelationship(polConcave);\n    assertEquals(GeoArea.CONTAINS,  rel);\n    rel = polConcave.getRelationship(originalConcavePol);\n    assertEquals(GeoArea.WITHIN,  rel);//check\n\n    rel = originalConcavePol.getRelationship(polConvex);\n    assertEquals(GeoArea.DISJOINT,  rel);\n    rel = polConvex.getRelationship(originalConcavePol);\n    assertEquals(GeoArea.DISJOINT,  rel);\n\n    //Complex\n    rel = originalComplexPol.getRelationship(polConvex);\n    assertEquals(GeoArea.WITHIN,  rel);\n    rel = polConvex.getRelationship(originalComplexPol);\n    assertEquals(GeoArea.CONTAINS,  rel);\n\n    rel = originalComplexPol.getRelationship(polConcave);\n    assertEquals(GeoArea.OVERLAPS,  rel);\n    rel = polConcave.getRelationship(originalComplexPol);\n    assertEquals(GeoArea.OVERLAPS,  rel);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7a23cf16c8fa265dc0a564adcabb55e3f054e0ac":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0ca94ad4d6120f10fa13ce40a60a7fd1ede51705"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0ca94ad4d6120f10fa13ce40a60a7fd1ede51705":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0ca94ad4d6120f10fa13ce40a60a7fd1ede51705"]},"commit2Childs":{"7a23cf16c8fa265dc0a564adcabb55e3f054e0ac":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7a23cf16c8fa265dc0a564adcabb55e3f054e0ac","0ca94ad4d6120f10fa13ce40a60a7fd1ede51705"],"0ca94ad4d6120f10fa13ce40a60a7fd1ede51705":["7a23cf16c8fa265dc0a564adcabb55e3f054e0ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7a23cf16c8fa265dc0a564adcabb55e3f054e0ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}