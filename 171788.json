{"path":"lucene/src/java/org/apache/lucene/codecs/sep/SepDocValuesConsumer#files(Directory,SegmentInfo,Set[String]).mjava","commits":[{"id":"a0ae5e3ed1232483b7b8a014f175a5fe43595982","date":1324062192,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/codecs/sep/SepDocValuesConsumer#files(Directory,SegmentInfo,Set[String]).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/sep/SepDocValuesConsumer#files(Directory,SegmentInfo,Set[String]).mjava","sourceNew":"  @SuppressWarnings(\"fallthrough\")\n  public static void files(Directory dir, SegmentInfo segmentInfo,\n      Set<String> files) throws IOException {\n    FieldInfos fieldInfos = segmentInfo.getFieldInfos();\n    for (FieldInfo fieldInfo : fieldInfos) {\n      if (fieldInfo.hasDocValues()) {\n        String filename = docValuesId(segmentInfo.name, fieldInfo.number);\n        switch (fieldInfo.getDocValuesType()) {\n          case BYTES_FIXED_DEREF:\n          case BYTES_VAR_DEREF:\n          case BYTES_VAR_STRAIGHT:\n          case BYTES_FIXED_SORTED:\n          case BYTES_VAR_SORTED:\n            files.add(IndexFileNames.segmentFileName(filename, \"\",\n                Writer.INDEX_EXTENSION));\n            assert dir.fileExists(IndexFileNames.segmentFileName(filename, \"\",\n                Writer.INDEX_EXTENSION));\n            // until here all types use an index\n          case BYTES_FIXED_STRAIGHT:\n          case FLOAT_32:\n          case FLOAT_64:\n          case VAR_INTS:\n          case FIXED_INTS_16:\n          case FIXED_INTS_32:\n          case FIXED_INTS_64:\n          case FIXED_INTS_8:\n            files.add(IndexFileNames.segmentFileName(filename, \"\",\n                Writer.DATA_EXTENSION));\n            assert dir.fileExists(IndexFileNames.segmentFileName(filename, \"\",\n                Writer.DATA_EXTENSION));\n            break;\n          default:\n            assert false;\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @SuppressWarnings(\"fallthrough\")\n  public static void files(Directory dir, SegmentInfo segmentInfo,\n      Set<String> files) throws IOException {\n    FieldInfos fieldInfos = segmentInfo.getFieldInfos();\n    for (FieldInfo fieldInfo : fieldInfos) {\n      if (fieldInfo.hasDocValues()) {\n        String filename = docValuesId(segmentInfo.name, fieldInfo.number);\n        switch (fieldInfo.getDocValuesType()) {\n          case BYTES_FIXED_DEREF:\n          case BYTES_VAR_DEREF:\n          case BYTES_VAR_STRAIGHT:\n          case BYTES_FIXED_SORTED:\n          case BYTES_VAR_SORTED:\n            files.add(IndexFileNames.segmentFileName(filename, \"\",\n                Writer.INDEX_EXTENSION));\n            assert dir.fileExists(IndexFileNames.segmentFileName(filename, \"\",\n                Writer.INDEX_EXTENSION));\n            // until here all types use an index\n          case BYTES_FIXED_STRAIGHT:\n          case FLOAT_32:\n          case FLOAT_64:\n          case VAR_INTS:\n          case FIXED_INTS_16:\n          case FIXED_INTS_32:\n          case FIXED_INTS_64:\n          case FIXED_INTS_8:\n            files.add(IndexFileNames.segmentFileName(filename, \"\",\n                Writer.DATA_EXTENSION));\n            assert dir.fileExists(IndexFileNames.segmentFileName(filename, \"\",\n                Writer.DATA_EXTENSION));\n            break;\n          default:\n            assert false;\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f6e3376a314fcc2b31bc46d399c2ff23552b78d6","date":1325780477,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/codecs/sep/SepDocValuesConsumer#files(Directory,SegmentInfo,Set[String]).mjava","pathOld":"lucene/src/java/org/apache/lucene/codecs/sep/SepDocValuesConsumer#files(Directory,SegmentInfo,Set[String]).mjava","sourceNew":"  public static void files(Directory dir, SegmentInfo segmentInfo,\n      Set<String> files) throws IOException {\n    files(dir, segmentInfo.getFieldInfos(), segmentInfo.name, files);\n  }\n\n","sourceOld":"  @SuppressWarnings(\"fallthrough\")\n  public static void files(Directory dir, SegmentInfo segmentInfo,\n      Set<String> files) throws IOException {\n    FieldInfos fieldInfos = segmentInfo.getFieldInfos();\n    for (FieldInfo fieldInfo : fieldInfos) {\n      if (fieldInfo.hasDocValues()) {\n        String filename = docValuesId(segmentInfo.name, fieldInfo.number);\n        switch (fieldInfo.getDocValuesType()) {\n          case BYTES_FIXED_DEREF:\n          case BYTES_VAR_DEREF:\n          case BYTES_VAR_STRAIGHT:\n          case BYTES_FIXED_SORTED:\n          case BYTES_VAR_SORTED:\n            files.add(IndexFileNames.segmentFileName(filename, \"\",\n                Writer.INDEX_EXTENSION));\n            assert dir.fileExists(IndexFileNames.segmentFileName(filename, \"\",\n                Writer.INDEX_EXTENSION));\n            // until here all types use an index\n          case BYTES_FIXED_STRAIGHT:\n          case FLOAT_32:\n          case FLOAT_64:\n          case VAR_INTS:\n          case FIXED_INTS_16:\n          case FIXED_INTS_32:\n          case FIXED_INTS_64:\n          case FIXED_INTS_8:\n            files.add(IndexFileNames.segmentFileName(filename, \"\",\n                Writer.DATA_EXTENSION));\n            assert dir.fileExists(IndexFileNames.segmentFileName(filename, \"\",\n                Writer.DATA_EXTENSION));\n            break;\n          default:\n            assert false;\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"78977ccc47b451a8e645b77504e2ef0a05e4b1a3","date":1327846052,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/codecs/sep/SepDocValuesConsumer#files(Directory,SegmentInfo,Set[String]).mjava","sourceNew":null,"sourceOld":"  public static void files(Directory dir, SegmentInfo segmentInfo,\n      Set<String> files) throws IOException {\n    files(dir, segmentInfo.getFieldInfos(), segmentInfo.name, files);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"296df632fd63421ea20756fa11ad36fbc6f4c8a9","date":1327957998,"type":4,"author":"Robert Muir","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/codecs/sep/SepDocValuesConsumer#files(Directory,SegmentInfo,Set[String]).mjava","sourceNew":null,"sourceOld":"  public static void files(Directory dir, SegmentInfo segmentInfo,\n      Set<String> files) throws IOException {\n    files(dir, segmentInfo.getFieldInfos(), segmentInfo.name, files);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"410e066f093e407222d9681429d209084e783149","date":1327958394,"type":4,"author":"Robert Muir","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/codecs/sep/SepDocValuesConsumer#files(Directory,SegmentInfo,Set[String]).mjava","sourceNew":null,"sourceOld":"  public static void files(Directory dir, SegmentInfo segmentInfo,\n      Set<String> files) throws IOException {\n    files(dir, segmentInfo.getFieldInfos(), segmentInfo.name, files);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"410e066f093e407222d9681429d209084e783149":["f6e3376a314fcc2b31bc46d399c2ff23552b78d6","296df632fd63421ea20756fa11ad36fbc6f4c8a9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"78977ccc47b451a8e645b77504e2ef0a05e4b1a3":["f6e3376a314fcc2b31bc46d399c2ff23552b78d6"],"f6e3376a314fcc2b31bc46d399c2ff23552b78d6":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"],"296df632fd63421ea20756fa11ad36fbc6f4c8a9":["f6e3376a314fcc2b31bc46d399c2ff23552b78d6","78977ccc47b451a8e645b77504e2ef0a05e4b1a3"],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["296df632fd63421ea20756fa11ad36fbc6f4c8a9"]},"commit2Childs":{"410e066f093e407222d9681429d209084e783149":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"],"78977ccc47b451a8e645b77504e2ef0a05e4b1a3":["296df632fd63421ea20756fa11ad36fbc6f4c8a9"],"f6e3376a314fcc2b31bc46d399c2ff23552b78d6":["410e066f093e407222d9681429d209084e783149","78977ccc47b451a8e645b77504e2ef0a05e4b1a3","296df632fd63421ea20756fa11ad36fbc6f4c8a9"],"296df632fd63421ea20756fa11ad36fbc6f4c8a9":["410e066f093e407222d9681429d209084e783149","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["f6e3376a314fcc2b31bc46d399c2ff23552b78d6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["410e066f093e407222d9681429d209084e783149","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}