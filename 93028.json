{"path":"src/test/org/apache/lucene/util/English#longToEnglish(long,StringBuilder).mjava","commits":[{"id":"73bb46ed4280a718f93e07c715d5a3debae30e04","date":1262788595,"type":0,"author":"Grant Ingersoll","isMerge":false,"pathNew":"src/test/org/apache/lucene/util/English#longToEnglish(long,StringBuilder).mjava","pathOld":"/dev/null","sourceNew":"  public static void longToEnglish(long i, StringBuilder result) {\n    if (i == 0) {\n      result.append(\"zero\");\n      return;\n    }\n    if (i < 0) {\n      result.append(\"minus \");\n      i = -i;\n    }\n    if (i >= 1000000000000000000l) {        // quadrillion\n      longToEnglish(i / 1000000000000000000l, result);\n      result.append(\"quintillion, \");\n      i = i % 1000000000000000000l;\n    }\n    if (i >= 1000000000000000l) {        // quadrillion\n      longToEnglish(i / 1000000000000000l, result);\n      result.append(\"quadrillion, \");\n      i = i % 1000000000000000l;\n    }\n    if (i >= 1000000000000l) {        // trillions\n      longToEnglish(i / 1000000000000l, result);\n      result.append(\"trillion, \");\n      i = i % 1000000000000l;\n    }\n    if (i >= 1000000000) {        // billions\n      longToEnglish(i / 1000000000, result);\n      result.append(\"billion, \");\n      i = i % 1000000000;\n    }\n    if (i >= 1000000) {          // millions\n      longToEnglish(i / 1000000, result);\n      result.append(\"million, \");\n      i = i % 1000000;\n    }\n    if (i >= 1000) {          // thousands\n      longToEnglish(i / 1000, result);\n      result.append(\"thousand, \");\n      i = i % 1000;\n    }\n    if (i >= 100) {          // hundreds\n      longToEnglish(i / 100, result);\n      result.append(\"hundred \");\n      i = i % 100;\n    }\n    //we know we are smaller here so we can cast\n    if (i >= 20) {\n      switch (((int) i) / 10) {\n        case 9:\n          result.append(\"ninety\");\n          break;\n        case 8:\n          result.append(\"eighty\");\n          break;\n        case 7:\n          result.append(\"seventy\");\n          break;\n        case 6:\n          result.append(\"sixty\");\n          break;\n        case 5:\n          result.append(\"fifty\");\n          break;\n        case 4:\n          result.append(\"forty\");\n          break;\n        case 3:\n          result.append(\"thirty\");\n          break;\n        case 2:\n          result.append(\"twenty\");\n          break;\n      }\n      i = i % 10;\n      if (i == 0)\n        result.append(\" \");\n      else\n        result.append(\"-\");\n    }\n    switch ((int) i) {\n      case 19:\n        result.append(\"nineteen \");\n        break;\n      case 18:\n        result.append(\"eighteen \");\n        break;\n      case 17:\n        result.append(\"seventeen \");\n        break;\n      case 16:\n        result.append(\"sixteen \");\n        break;\n      case 15:\n        result.append(\"fifteen \");\n        break;\n      case 14:\n        result.append(\"fourteen \");\n        break;\n      case 13:\n        result.append(\"thirteen \");\n        break;\n      case 12:\n        result.append(\"twelve \");\n        break;\n      case 11:\n        result.append(\"eleven \");\n        break;\n      case 10:\n        result.append(\"ten \");\n        break;\n      case 9:\n        result.append(\"nine \");\n        break;\n      case 8:\n        result.append(\"eight \");\n        break;\n      case 7:\n        result.append(\"seven \");\n        break;\n      case 6:\n        result.append(\"six \");\n        break;\n      case 5:\n        result.append(\"five \");\n        break;\n      case 4:\n        result.append(\"four \");\n        break;\n      case 3:\n        result.append(\"three \");\n        break;\n      case 2:\n        result.append(\"two \");\n        break;\n      case 1:\n        result.append(\"one \");\n        break;\n      case 0:\n        result.append(\"\");\n        break;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a98b8c38f9deecda3308528189354e84cc35f4c1","date":1263504215,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"src/java/org/apache/lucene/util/English#longToEnglish(long,StringBuilder).mjava","pathOld":"src/test/org/apache/lucene/util/English#longToEnglish(long,StringBuilder).mjava","sourceNew":"  public static void longToEnglish(long i, StringBuilder result) {\n    if (i == 0) {\n      result.append(\"zero\");\n      return;\n    }\n    if (i < 0) {\n      result.append(\"minus \");\n      i = -i;\n    }\n    if (i >= 1000000000000000000l) {        // quadrillion\n      longToEnglish(i / 1000000000000000000l, result);\n      result.append(\"quintillion, \");\n      i = i % 1000000000000000000l;\n    }\n    if (i >= 1000000000000000l) {        // quadrillion\n      longToEnglish(i / 1000000000000000l, result);\n      result.append(\"quadrillion, \");\n      i = i % 1000000000000000l;\n    }\n    if (i >= 1000000000000l) {        // trillions\n      longToEnglish(i / 1000000000000l, result);\n      result.append(\"trillion, \");\n      i = i % 1000000000000l;\n    }\n    if (i >= 1000000000) {        // billions\n      longToEnglish(i / 1000000000, result);\n      result.append(\"billion, \");\n      i = i % 1000000000;\n    }\n    if (i >= 1000000) {          // millions\n      longToEnglish(i / 1000000, result);\n      result.append(\"million, \");\n      i = i % 1000000;\n    }\n    if (i >= 1000) {          // thousands\n      longToEnglish(i / 1000, result);\n      result.append(\"thousand, \");\n      i = i % 1000;\n    }\n    if (i >= 100) {          // hundreds\n      longToEnglish(i / 100, result);\n      result.append(\"hundred \");\n      i = i % 100;\n    }\n    //we know we are smaller here so we can cast\n    if (i >= 20) {\n      switch (((int) i) / 10) {\n        case 9:\n          result.append(\"ninety\");\n          break;\n        case 8:\n          result.append(\"eighty\");\n          break;\n        case 7:\n          result.append(\"seventy\");\n          break;\n        case 6:\n          result.append(\"sixty\");\n          break;\n        case 5:\n          result.append(\"fifty\");\n          break;\n        case 4:\n          result.append(\"forty\");\n          break;\n        case 3:\n          result.append(\"thirty\");\n          break;\n        case 2:\n          result.append(\"twenty\");\n          break;\n      }\n      i = i % 10;\n      if (i == 0)\n        result.append(\" \");\n      else\n        result.append(\"-\");\n    }\n    switch ((int) i) {\n      case 19:\n        result.append(\"nineteen \");\n        break;\n      case 18:\n        result.append(\"eighteen \");\n        break;\n      case 17:\n        result.append(\"seventeen \");\n        break;\n      case 16:\n        result.append(\"sixteen \");\n        break;\n      case 15:\n        result.append(\"fifteen \");\n        break;\n      case 14:\n        result.append(\"fourteen \");\n        break;\n      case 13:\n        result.append(\"thirteen \");\n        break;\n      case 12:\n        result.append(\"twelve \");\n        break;\n      case 11:\n        result.append(\"eleven \");\n        break;\n      case 10:\n        result.append(\"ten \");\n        break;\n      case 9:\n        result.append(\"nine \");\n        break;\n      case 8:\n        result.append(\"eight \");\n        break;\n      case 7:\n        result.append(\"seven \");\n        break;\n      case 6:\n        result.append(\"six \");\n        break;\n      case 5:\n        result.append(\"five \");\n        break;\n      case 4:\n        result.append(\"four \");\n        break;\n      case 3:\n        result.append(\"three \");\n        break;\n      case 2:\n        result.append(\"two \");\n        break;\n      case 1:\n        result.append(\"one \");\n        break;\n      case 0:\n        result.append(\"\");\n        break;\n    }\n  }\n\n","sourceOld":"  public static void longToEnglish(long i, StringBuilder result) {\n    if (i == 0) {\n      result.append(\"zero\");\n      return;\n    }\n    if (i < 0) {\n      result.append(\"minus \");\n      i = -i;\n    }\n    if (i >= 1000000000000000000l) {        // quadrillion\n      longToEnglish(i / 1000000000000000000l, result);\n      result.append(\"quintillion, \");\n      i = i % 1000000000000000000l;\n    }\n    if (i >= 1000000000000000l) {        // quadrillion\n      longToEnglish(i / 1000000000000000l, result);\n      result.append(\"quadrillion, \");\n      i = i % 1000000000000000l;\n    }\n    if (i >= 1000000000000l) {        // trillions\n      longToEnglish(i / 1000000000000l, result);\n      result.append(\"trillion, \");\n      i = i % 1000000000000l;\n    }\n    if (i >= 1000000000) {        // billions\n      longToEnglish(i / 1000000000, result);\n      result.append(\"billion, \");\n      i = i % 1000000000;\n    }\n    if (i >= 1000000) {          // millions\n      longToEnglish(i / 1000000, result);\n      result.append(\"million, \");\n      i = i % 1000000;\n    }\n    if (i >= 1000) {          // thousands\n      longToEnglish(i / 1000, result);\n      result.append(\"thousand, \");\n      i = i % 1000;\n    }\n    if (i >= 100) {          // hundreds\n      longToEnglish(i / 100, result);\n      result.append(\"hundred \");\n      i = i % 100;\n    }\n    //we know we are smaller here so we can cast\n    if (i >= 20) {\n      switch (((int) i) / 10) {\n        case 9:\n          result.append(\"ninety\");\n          break;\n        case 8:\n          result.append(\"eighty\");\n          break;\n        case 7:\n          result.append(\"seventy\");\n          break;\n        case 6:\n          result.append(\"sixty\");\n          break;\n        case 5:\n          result.append(\"fifty\");\n          break;\n        case 4:\n          result.append(\"forty\");\n          break;\n        case 3:\n          result.append(\"thirty\");\n          break;\n        case 2:\n          result.append(\"twenty\");\n          break;\n      }\n      i = i % 10;\n      if (i == 0)\n        result.append(\" \");\n      else\n        result.append(\"-\");\n    }\n    switch ((int) i) {\n      case 19:\n        result.append(\"nineteen \");\n        break;\n      case 18:\n        result.append(\"eighteen \");\n        break;\n      case 17:\n        result.append(\"seventeen \");\n        break;\n      case 16:\n        result.append(\"sixteen \");\n        break;\n      case 15:\n        result.append(\"fifteen \");\n        break;\n      case 14:\n        result.append(\"fourteen \");\n        break;\n      case 13:\n        result.append(\"thirteen \");\n        break;\n      case 12:\n        result.append(\"twelve \");\n        break;\n      case 11:\n        result.append(\"eleven \");\n        break;\n      case 10:\n        result.append(\"ten \");\n        break;\n      case 9:\n        result.append(\"nine \");\n        break;\n      case 8:\n        result.append(\"eight \");\n        break;\n      case 7:\n        result.append(\"seven \");\n        break;\n      case 6:\n        result.append(\"six \");\n        break;\n      case 5:\n        result.append(\"five \");\n        break;\n      case 4:\n        result.append(\"four \");\n        break;\n      case 3:\n        result.append(\"three \");\n        break;\n      case 2:\n        result.append(\"two \");\n        break;\n      case 1:\n        result.append(\"one \");\n        break;\n      case 0:\n        result.append(\"\");\n        break;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a98b8c38f9deecda3308528189354e84cc35f4c1":["73bb46ed4280a718f93e07c715d5a3debae30e04"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"73bb46ed4280a718f93e07c715d5a3debae30e04":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a98b8c38f9deecda3308528189354e84cc35f4c1"]},"commit2Childs":{"a98b8c38f9deecda3308528189354e84cc35f4c1":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["73bb46ed4280a718f93e07c715d5a3debae30e04"],"73bb46ed4280a718f93e07c715d5a3debae30e04":["a98b8c38f9deecda3308528189354e84cc35f4c1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}