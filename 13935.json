{"path":"solr/core/src/java/org/apache/solr/update/SolrIndexWriter#setCommitData(IndexWriter,long).mjava","commits":[{"id":"be320990bdc77e643388fa801e75017f19289c42","date":1489477067,"type":1,"author":"Cao Manh Dat","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/SolrIndexWriter#setCommitData(IndexWriter,long).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/SolrIndexWriter#setCommitData(IndexWriter).mjava","sourceNew":"  @SuppressForbidden(reason = \"Need currentTimeMillis, commit time should be used only for debugging purposes, \" +\n      \" but currently suspiciously used for replication as well\")\n  public static void setCommitData(IndexWriter iw, long commitCommandVersion) {\n    log.info(\"Calling setCommitData with IW:\" + iw.toString() + \" commitCommandVersion:\"+commitCommandVersion);\n    final Map<String,String> commitData = new HashMap<>();\n    commitData.put(COMMIT_TIME_MSEC_KEY, String.valueOf(System.currentTimeMillis()));\n    commitData.put(COMMIT_COMMAND_VERSION, String.valueOf(commitCommandVersion));\n    iw.setLiveCommitData(commitData.entrySet());\n  }\n\n","sourceOld":"  @SuppressForbidden(reason = \"Need currentTimeMillis, commit time should be used only for debugging purposes, \" +\n      \" but currently suspiciously used for replication as well\")\n  public static void setCommitData(IndexWriter iw) {\n    log.info(\"Calling setCommitData with IW:\" + iw.toString());\n    final Map<String,String> commitData = new HashMap<>();\n    commitData.put(COMMIT_TIME_MSEC_KEY, String.valueOf(System.currentTimeMillis()));\n    iw.setLiveCommitData(commitData.entrySet());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f996f8177b9204bdc92f7164460c6cefad9ac99a","date":1489482690,"type":1,"author":"Cao Manh Dat","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/SolrIndexWriter#setCommitData(IndexWriter,long).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/SolrIndexWriter#setCommitData(IndexWriter).mjava","sourceNew":"  @SuppressForbidden(reason = \"Need currentTimeMillis, commit time should be used only for debugging purposes, \" +\n      \" but currently suspiciously used for replication as well\")\n  public static void setCommitData(IndexWriter iw, long commitCommandVersion) {\n    log.info(\"Calling setCommitData with IW:\" + iw.toString() + \" commitCommandVersion:\"+commitCommandVersion);\n    final Map<String,String> commitData = new HashMap<>();\n    commitData.put(COMMIT_TIME_MSEC_KEY, String.valueOf(System.currentTimeMillis()));\n    commitData.put(COMMIT_COMMAND_VERSION, String.valueOf(commitCommandVersion));\n    iw.setLiveCommitData(commitData.entrySet());\n  }\n\n","sourceOld":"  @SuppressForbidden(reason = \"Need currentTimeMillis, commit time should be used only for debugging purposes, \" +\n      \" but currently suspiciously used for replication as well\")\n  public static void setCommitData(IndexWriter iw) {\n    log.info(\"Calling setCommitData with IW:\" + iw.toString());\n    final Map<String,String> commitData = new HashMap<>();\n    commitData.put(COMMIT_TIME_MSEC_KEY, String.valueOf(System.currentTimeMillis()));\n    iw.setLiveCommitData(commitData.entrySet());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab68488225b6a6c357dda72ed11dedca9914a192","date":1490013111,"type":1,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/SolrIndexWriter#setCommitData(IndexWriter,long).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/SolrIndexWriter#setCommitData(IndexWriter).mjava","sourceNew":"  @SuppressForbidden(reason = \"Need currentTimeMillis, commit time should be used only for debugging purposes, \" +\n      \" but currently suspiciously used for replication as well\")\n  public static void setCommitData(IndexWriter iw, long commitCommandVersion) {\n    log.info(\"Calling setCommitData with IW:\" + iw.toString() + \" commitCommandVersion:\"+commitCommandVersion);\n    final Map<String,String> commitData = new HashMap<>();\n    commitData.put(COMMIT_TIME_MSEC_KEY, String.valueOf(System.currentTimeMillis()));\n    commitData.put(COMMIT_COMMAND_VERSION, String.valueOf(commitCommandVersion));\n    iw.setLiveCommitData(commitData.entrySet());\n  }\n\n","sourceOld":"  @SuppressForbidden(reason = \"Need currentTimeMillis, commit time should be used only for debugging purposes, \" +\n      \" but currently suspiciously used for replication as well\")\n  public static void setCommitData(IndexWriter iw) {\n    log.info(\"Calling setCommitData with IW:\" + iw.toString());\n    final Map<String,String> commitData = new HashMap<>();\n    commitData.put(COMMIT_TIME_MSEC_KEY, String.valueOf(System.currentTimeMillis()));\n    iw.setLiveCommitData(commitData.entrySet());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"740d649f013f07efbeb73ca854f106c60166e7c0","date":1587431295,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/SolrIndexWriter#setCommitData(IndexWriter,long).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/SolrIndexWriter#setCommitData(IndexWriter,long).mjava","sourceNew":"  @SuppressForbidden(reason = \"Need currentTimeMillis, commit time should be used only for debugging purposes, \" +\n      \" but currently suspiciously used for replication as well\")\n  public static void setCommitData(IndexWriter iw, long commitCommandVersion) {\n    log.info(\"Calling setCommitData with IW:{} commitCommandVersion:{}\", iw, commitCommandVersion);\n    final Map<String,String> commitData = new HashMap<>();\n    commitData.put(COMMIT_TIME_MSEC_KEY, String.valueOf(System.currentTimeMillis()));\n    commitData.put(COMMIT_COMMAND_VERSION, String.valueOf(commitCommandVersion));\n    iw.setLiveCommitData(commitData.entrySet());\n  }\n\n","sourceOld":"  @SuppressForbidden(reason = \"Need currentTimeMillis, commit time should be used only for debugging purposes, \" +\n      \" but currently suspiciously used for replication as well\")\n  public static void setCommitData(IndexWriter iw, long commitCommandVersion) {\n    log.info(\"Calling setCommitData with IW:\" + iw.toString() + \" commitCommandVersion:\"+commitCommandVersion);\n    final Map<String,String> commitData = new HashMap<>();\n    commitData.put(COMMIT_TIME_MSEC_KEY, String.valueOf(System.currentTimeMillis()));\n    commitData.put(COMMIT_COMMAND_VERSION, String.valueOf(commitCommandVersion));\n    iw.setLiveCommitData(commitData.entrySet());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b0dfcb99e767e8eafdede3faac6831984ac849fc","date":1589042999,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/SolrIndexWriter#setCommitData(IndexWriter,long).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/SolrIndexWriter#setCommitData(IndexWriter,long).mjava","sourceNew":"  @SuppressForbidden(reason = \"Need currentTimeMillis, commit time should be used only for debugging purposes, \" +\n      \" but currently suspiciously used for replication as well\")\n  public static void setCommitData(IndexWriter iw, long commitCommandVersion) {\n    log.debug(\"Calling setCommitData with IW:{} commitCommandVersion:{}\", iw, commitCommandVersion);\n    final Map<String,String> commitData = new HashMap<>();\n    commitData.put(COMMIT_TIME_MSEC_KEY, String.valueOf(System.currentTimeMillis()));\n    commitData.put(COMMIT_COMMAND_VERSION, String.valueOf(commitCommandVersion));\n    iw.setLiveCommitData(commitData.entrySet());\n  }\n\n","sourceOld":"  @SuppressForbidden(reason = \"Need currentTimeMillis, commit time should be used only for debugging purposes, \" +\n      \" but currently suspiciously used for replication as well\")\n  public static void setCommitData(IndexWriter iw, long commitCommandVersion) {\n    log.info(\"Calling setCommitData with IW:{} commitCommandVersion:{}\", iw, commitCommandVersion);\n    final Map<String,String> commitData = new HashMap<>();\n    commitData.put(COMMIT_TIME_MSEC_KEY, String.valueOf(System.currentTimeMillis()));\n    commitData.put(COMMIT_COMMAND_VERSION, String.valueOf(commitCommandVersion));\n    iw.setLiveCommitData(commitData.entrySet());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b0dfcb99e767e8eafdede3faac6831984ac849fc":["740d649f013f07efbeb73ca854f106c60166e7c0"],"740d649f013f07efbeb73ca854f106c60166e7c0":["be320990bdc77e643388fa801e75017f19289c42"],"f996f8177b9204bdc92f7164460c6cefad9ac99a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"be320990bdc77e643388fa801e75017f19289c42":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ab68488225b6a6c357dda72ed11dedca9914a192":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f996f8177b9204bdc92f7164460c6cefad9ac99a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b0dfcb99e767e8eafdede3faac6831984ac849fc"]},"commit2Childs":{"b0dfcb99e767e8eafdede3faac6831984ac849fc":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"740d649f013f07efbeb73ca854f106c60166e7c0":["b0dfcb99e767e8eafdede3faac6831984ac849fc"],"f996f8177b9204bdc92f7164460c6cefad9ac99a":["ab68488225b6a6c357dda72ed11dedca9914a192"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f996f8177b9204bdc92f7164460c6cefad9ac99a","be320990bdc77e643388fa801e75017f19289c42","ab68488225b6a6c357dda72ed11dedca9914a192"],"be320990bdc77e643388fa801e75017f19289c42":["740d649f013f07efbeb73ca854f106c60166e7c0"],"ab68488225b6a6c357dda72ed11dedca9914a192":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ab68488225b6a6c357dda72ed11dedca9914a192","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}