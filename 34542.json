{"path":"lucene/analysis/common/src/java/org/apache/lucene/analysis/compound/hyphenation/HyphenationTree#addPattern(String,String).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/compound/hyphenation/HyphenationTree#addPattern(String,String).mjava","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/compound/hyphenation/HyphenationTree#addPattern(String,String).mjava","sourceNew":"  /**\n   * Add a pattern to the tree. Mainly, to be used by\n   * {@link PatternParser PatternParser} class as callback to add a pattern to\n   * the tree.\n   * \n   * @param pattern the hyphenation pattern\n   * @param ivalue interletter weight values indicating the desirability and\n   *        priority of hyphenating at a given point within the pattern. It\n   *        should contain only digit characters. (i.e. '0' to '9').\n   */\n  public void addPattern(String pattern, String ivalue) {\n    int k = ivalues.find(ivalue);\n    if (k <= 0) {\n      k = packValues(ivalue);\n      ivalues.insert(ivalue, (char) k);\n    }\n    insert(pattern, (char) k);\n  }\n\n","sourceOld":"  /**\n   * Add a pattern to the tree. Mainly, to be used by\n   * {@link PatternParser PatternParser} class as callback to add a pattern to\n   * the tree.\n   * \n   * @param pattern the hyphenation pattern\n   * @param ivalue interletter weight values indicating the desirability and\n   *        priority of hyphenating at a given point within the pattern. It\n   *        should contain only digit characters. (i.e. '0' to '9').\n   */\n  public void addPattern(String pattern, String ivalue) {\n    int k = ivalues.find(ivalue);\n    if (k <= 0) {\n      k = packValues(ivalue);\n      ivalues.insert(ivalue, (char) k);\n    }\n    insert(pattern, (char) k);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7530de27b87b961b51f01bd1299b7004d46e8823","date":1355236261,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/compound/hyphenation/HyphenationTree#addPattern(String,String).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/compound/hyphenation/HyphenationTree#addPattern(String,String).mjava","sourceNew":"  /**\n   * Add a pattern to the tree. Mainly, to be used by\n   * {@link PatternParser PatternParser} class as callback to add a pattern to\n   * the tree.\n   * \n   * @param pattern the hyphenation pattern\n   * @param ivalue interletter weight values indicating the desirability and\n   *        priority of hyphenating at a given point within the pattern. It\n   *        should contain only digit characters. (i.e. '0' to '9').\n   */\n  @Override\n  public void addPattern(String pattern, String ivalue) {\n    int k = ivalues.find(ivalue);\n    if (k <= 0) {\n      k = packValues(ivalue);\n      ivalues.insert(ivalue, (char) k);\n    }\n    insert(pattern, (char) k);\n  }\n\n","sourceOld":"  /**\n   * Add a pattern to the tree. Mainly, to be used by\n   * {@link PatternParser PatternParser} class as callback to add a pattern to\n   * the tree.\n   * \n   * @param pattern the hyphenation pattern\n   * @param ivalue interletter weight values indicating the desirability and\n   *        priority of hyphenating at a given point within the pattern. It\n   *        should contain only digit characters. (i.e. '0' to '9').\n   */\n  public void addPattern(String pattern, String ivalue) {\n    int k = ivalues.find(ivalue);\n    if (k <= 0) {\n      k = packValues(ivalue);\n      ivalues.insert(ivalue, (char) k);\n    }\n    insert(pattern, (char) k);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/compound/hyphenation/HyphenationTree#addPattern(String,String).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/compound/hyphenation/HyphenationTree#addPattern(String,String).mjava","sourceNew":"  /**\n   * Add a pattern to the tree. Mainly, to be used by\n   * {@link PatternParser PatternParser} class as callback to add a pattern to\n   * the tree.\n   * \n   * @param pattern the hyphenation pattern\n   * @param ivalue interletter weight values indicating the desirability and\n   *        priority of hyphenating at a given point within the pattern. It\n   *        should contain only digit characters. (i.e. '0' to '9').\n   */\n  @Override\n  public void addPattern(String pattern, String ivalue) {\n    int k = ivalues.find(ivalue);\n    if (k <= 0) {\n      k = packValues(ivalue);\n      ivalues.insert(ivalue, (char) k);\n    }\n    insert(pattern, (char) k);\n  }\n\n","sourceOld":"  /**\n   * Add a pattern to the tree. Mainly, to be used by\n   * {@link PatternParser PatternParser} class as callback to add a pattern to\n   * the tree.\n   * \n   * @param pattern the hyphenation pattern\n   * @param ivalue interletter weight values indicating the desirability and\n   *        priority of hyphenating at a given point within the pattern. It\n   *        should contain only digit characters. (i.e. '0' to '9').\n   */\n  public void addPattern(String pattern, String ivalue) {\n    int k = ivalues.find(ivalue);\n    if (k <= 0) {\n      k = packValues(ivalue);\n      ivalues.insert(ivalue, (char) k);\n    }\n    insert(pattern, (char) k);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["b89678825b68eccaf09e6ab71675fc0b0af1e099","7530de27b87b961b51f01bd1299b7004d46e8823"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7530de27b87b961b51f01bd1299b7004d46e8823":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7530de27b87b961b51f01bd1299b7004d46e8823"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","7530de27b87b961b51f01bd1299b7004d46e8823"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"7530de27b87b961b51f01bd1299b7004d46e8823":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}