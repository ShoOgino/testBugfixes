{"path":"lucene/core/src/java/org/apache/lucene/util/packed/EliasFanoDecoder#toBeforeCurrentHighBit().mjava","commits":[{"id":"21d517f3b4989fcd30eda0cad105d5fdcaeb5d7c","date":1373406544,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/packed/EliasFanoDecoder#toBeforeCurrentHighBit().mjava","pathOld":"/dev/null","sourceNew":"  /** Decrement efindex and setBitForIndex and\n   * shift curHighLong so that it does not contain the high bits after setBitForIndex.\n   * @return true iff efindex still >= 0\n   */\n  private boolean toBeforeCurrentHighBit() {\n    efIndex -= 1;\n    if (efIndex < 0) {\n      return false;\n    }\n    setBitForIndex -= 1;\n    int highIndex = (int)(setBitForIndex >>> LOG2_LONG_SIZE);\n    curHighLong = efEncoder.upperLongs[highIndex] << getCurrentLeftShift();\n    return true;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"37a0f60745e53927c4c876cfe5b5a58170f0646c","date":1373994005,"type":0,"author":"Han Jiang","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/packed/EliasFanoDecoder#toBeforeCurrentHighBit().mjava","pathOld":"/dev/null","sourceNew":"  /** Decrement efindex and setBitForIndex and\n   * shift curHighLong so that it does not contain the high bits after setBitForIndex.\n   * @return true iff efindex still >= 0\n   */\n  private boolean toBeforeCurrentHighBit() {\n    efIndex -= 1;\n    if (efIndex < 0) {\n      return false;\n    }\n    setBitForIndex -= 1;\n    int highIndex = (int)(setBitForIndex >>> LOG2_LONG_SIZE);\n    curHighLong = efEncoder.upperLongs[highIndex] << getCurrentLeftShift();\n    return true;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b1eb427f2c6beed80d1724555fc1db003ccf3030","date":1417137397,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/packed/EliasFanoDecoder#toBeforeCurrentHighBit().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/packed/EliasFanoDecoder#toBeforeCurrentHighBit().mjava","sourceNew":"  /** Decrement efindex and setBitForIndex and\n   * shift curHighLong so that it does not contain the high bits after setBitForIndex.\n   * @return true iff efindex still {@code >= 0}\n   */\n  private boolean toBeforeCurrentHighBit() {\n    efIndex -= 1;\n    if (efIndex < 0) {\n      return false;\n    }\n    setBitForIndex -= 1;\n    int highIndex = (int)(setBitForIndex >>> LOG2_LONG_SIZE);\n    curHighLong = efEncoder.upperLongs[highIndex] << getCurrentLeftShift();\n    return true;\n  }\n\n","sourceOld":"  /** Decrement efindex and setBitForIndex and\n   * shift curHighLong so that it does not contain the high bits after setBitForIndex.\n   * @return true iff efindex still >= 0\n   */\n  private boolean toBeforeCurrentHighBit() {\n    efIndex -= 1;\n    if (efIndex < 0) {\n      return false;\n    }\n    setBitForIndex -= 1;\n    int highIndex = (int)(setBitForIndex >>> LOG2_LONG_SIZE);\n    curHighLong = efEncoder.upperLongs[highIndex] << getCurrentLeftShift();\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"556259cdb46d4f7fb27f4688c4efcb3eaee4a550","date":1432028057,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/util/packed/EliasFanoDecoder#toBeforeCurrentHighBit().mjava","sourceNew":null,"sourceOld":"  /** Decrement efindex and setBitForIndex and\n   * shift curHighLong so that it does not contain the high bits after setBitForIndex.\n   * @return true iff efindex still {@code >= 0}\n   */\n  private boolean toBeforeCurrentHighBit() {\n    efIndex -= 1;\n    if (efIndex < 0) {\n      return false;\n    }\n    setBitForIndex -= 1;\n    int highIndex = (int)(setBitForIndex >>> LOG2_LONG_SIZE);\n    curHighLong = efEncoder.upperLongs[highIndex] << getCurrentLeftShift();\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"556259cdb46d4f7fb27f4688c4efcb3eaee4a550":["b1eb427f2c6beed80d1724555fc1db003ccf3030"],"b1eb427f2c6beed80d1724555fc1db003ccf3030":["21d517f3b4989fcd30eda0cad105d5fdcaeb5d7c"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","21d517f3b4989fcd30eda0cad105d5fdcaeb5d7c"],"21d517f3b4989fcd30eda0cad105d5fdcaeb5d7c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["556259cdb46d4f7fb27f4688c4efcb3eaee4a550"]},"commit2Childs":{"556259cdb46d4f7fb27f4688c4efcb3eaee4a550":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b1eb427f2c6beed80d1724555fc1db003ccf3030":["556259cdb46d4f7fb27f4688c4efcb3eaee4a550"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":[],"21d517f3b4989fcd30eda0cad105d5fdcaeb5d7c":["b1eb427f2c6beed80d1724555fc1db003ccf3030","37a0f60745e53927c4c876cfe5b5a58170f0646c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["37a0f60745e53927c4c876cfe5b5a58170f0646c","21d517f3b4989fcd30eda0cad105d5fdcaeb5d7c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["37a0f60745e53927c4c876cfe5b5a58170f0646c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}