{"path":"lucene/contrib/analyzers/common/src/java/org/apache/lucene/analysis/br/BrazilianStemmer#changeTerm(String).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/analyzers/common/src/java/org/apache/lucene/analysis/br/BrazilianStemmer#changeTerm(String).mjava","pathOld":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/br/BrazilianStemmer#changeTerm(String).mjava","sourceNew":"\t/**\n   * 1) Turn to lowercase\n   * 2) Remove accents\n   * 3) ã -> a ; õ -> o\n   * 4) ç -> c\n   *\n   * @return null or a string transformed\n\t */\n\tprivate String changeTerm( String value ) {\n    int     j;\n    String  r = \"\" ;\n\n    // be-safe !!!\n    if (value == null) {\n      return null ;\n    }\n\n    value = value.toLowerCase() ;\n    for (j=0 ; j < value.length() ; j++) {\n      if ((value.charAt(j) == 'á') ||\n          (value.charAt(j) == 'â') ||\n          (value.charAt(j) == 'ã')) {\n        r= r + \"a\" ; continue ;\n      }\n      if ((value.charAt(j) == 'é') ||\n          (value.charAt(j) == 'ê')) {\n        r= r + \"e\" ; continue ;\n      }\n      if (value.charAt(j) == 'í') {\n        r= r + \"i\" ; continue ;\n      }\n      if ((value.charAt(j) == 'ó') ||\n          (value.charAt(j) == 'ô') ||\n          (value.charAt(j) == 'õ')) {\n        r= r + \"o\" ; continue ;\n      }\n      if ((value.charAt(j) == 'ú') ||\n          (value.charAt(j) == 'ü')) {\n        r= r + \"u\" ; continue ;\n      }\n      if (value.charAt(j) == 'ç') {\n        r= r + \"c\" ; continue ;\n      }\n      if (value.charAt(j) == 'ñ') {\n        r= r + \"n\" ; continue ;\n      }\n\n      r= r+ value.charAt(j) ;\n    }\n\n    return r ;\n  }\n\n","sourceOld":"\t/**\n   * 1) Turn to lowercase\n   * 2) Remove accents\n   * 3) ã -> a ; õ -> o\n   * 4) ç -> c\n   *\n   * @return null or a string transformed\n\t */\n\tprivate String changeTerm( String value ) {\n    int     j;\n    String  r = \"\" ;\n\n    // be-safe !!!\n    if (value == null) {\n      return null ;\n    }\n\n    value = value.toLowerCase() ;\n    for (j=0 ; j < value.length() ; j++) {\n      if ((value.charAt(j) == 'á') ||\n          (value.charAt(j) == 'â') ||\n          (value.charAt(j) == 'ã')) {\n        r= r + \"a\" ; continue ;\n      }\n      if ((value.charAt(j) == 'é') ||\n          (value.charAt(j) == 'ê')) {\n        r= r + \"e\" ; continue ;\n      }\n      if (value.charAt(j) == 'í') {\n        r= r + \"i\" ; continue ;\n      }\n      if ((value.charAt(j) == 'ó') ||\n          (value.charAt(j) == 'ô') ||\n          (value.charAt(j) == 'õ')) {\n        r= r + \"o\" ; continue ;\n      }\n      if ((value.charAt(j) == 'ú') ||\n          (value.charAt(j) == 'ü')) {\n        r= r + \"u\" ; continue ;\n      }\n      if (value.charAt(j) == 'ç') {\n        r= r + \"c\" ; continue ;\n      }\n      if (value.charAt(j) == 'ñ') {\n        r= r + \"n\" ; continue ;\n      }\n\n      r= r+ value.charAt(j) ;\n    }\n\n    return r ;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f080986da691a3bba7b757f43ab72cdc82b57ce","date":1273069619,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/br/BrazilianStemmer#changeTerm(String).mjava","pathOld":"lucene/contrib/analyzers/common/src/java/org/apache/lucene/analysis/br/BrazilianStemmer#changeTerm(String).mjava","sourceNew":"\t/**\n   * 1) Turn to lowercase\n   * 2) Remove accents\n   * 3) ã -> a ; õ -> o\n   * 4) ç -> c\n   *\n   * @return null or a string transformed\n\t */\n\tprivate String changeTerm( String value ) {\n    int     j;\n    String  r = \"\" ;\n\n    // be-safe !!!\n    if (value == null) {\n      return null ;\n    }\n\n    value = value.toLowerCase() ;\n    for (j=0 ; j < value.length() ; j++) {\n      if ((value.charAt(j) == 'á') ||\n          (value.charAt(j) == 'â') ||\n          (value.charAt(j) == 'ã')) {\n        r= r + \"a\" ; continue ;\n      }\n      if ((value.charAt(j) == 'é') ||\n          (value.charAt(j) == 'ê')) {\n        r= r + \"e\" ; continue ;\n      }\n      if (value.charAt(j) == 'í') {\n        r= r + \"i\" ; continue ;\n      }\n      if ((value.charAt(j) == 'ó') ||\n          (value.charAt(j) == 'ô') ||\n          (value.charAt(j) == 'õ')) {\n        r= r + \"o\" ; continue ;\n      }\n      if ((value.charAt(j) == 'ú') ||\n          (value.charAt(j) == 'ü')) {\n        r= r + \"u\" ; continue ;\n      }\n      if (value.charAt(j) == 'ç') {\n        r= r + \"c\" ; continue ;\n      }\n      if (value.charAt(j) == 'ñ') {\n        r= r + \"n\" ; continue ;\n      }\n\n      r= r+ value.charAt(j) ;\n    }\n\n    return r ;\n  }\n\n","sourceOld":"\t/**\n   * 1) Turn to lowercase\n   * 2) Remove accents\n   * 3) ã -> a ; õ -> o\n   * 4) ç -> c\n   *\n   * @return null or a string transformed\n\t */\n\tprivate String changeTerm( String value ) {\n    int     j;\n    String  r = \"\" ;\n\n    // be-safe !!!\n    if (value == null) {\n      return null ;\n    }\n\n    value = value.toLowerCase() ;\n    for (j=0 ; j < value.length() ; j++) {\n      if ((value.charAt(j) == 'á') ||\n          (value.charAt(j) == 'â') ||\n          (value.charAt(j) == 'ã')) {\n        r= r + \"a\" ; continue ;\n      }\n      if ((value.charAt(j) == 'é') ||\n          (value.charAt(j) == 'ê')) {\n        r= r + \"e\" ; continue ;\n      }\n      if (value.charAt(j) == 'í') {\n        r= r + \"i\" ; continue ;\n      }\n      if ((value.charAt(j) == 'ó') ||\n          (value.charAt(j) == 'ô') ||\n          (value.charAt(j) == 'õ')) {\n        r= r + \"o\" ; continue ;\n      }\n      if ((value.charAt(j) == 'ú') ||\n          (value.charAt(j) == 'ü')) {\n        r= r + \"u\" ; continue ;\n      }\n      if (value.charAt(j) == 'ç') {\n        r= r + \"c\" ; continue ;\n      }\n      if (value.charAt(j) == 'ñ') {\n        r= r + \"n\" ; continue ;\n      }\n\n      r= r+ value.charAt(j) ;\n    }\n\n    return r ;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}