{"path":"src/java/org/apache/lucene/search/SortField#hashCode().mjava","commits":[{"id":"f0222e7dc83a5ca35b7c946760f853b5c6474ea9","date":1228750096,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/SortField#hashCode().mjava","pathOld":"/dev/null","sourceNew":"  /** Returns a hash code value for this object.  If a\n   *  {@link #SortComparatorSource} was provided, it must\n   *  properly implement hashCode. */\n  public int hashCode() {\n    int hash=type^0x346565dd + Boolean.valueOf(reverse).hashCode()^0xaf5998bb;\n    if (field != null) hash += field.hashCode()^0xff5685dd;\n    if (locale != null) hash += locale.hashCode()^0x08150815;\n    if (factory != null) hash += factory.hashCode()^0x34987555;\n    return hash;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3766097c9c41a30d67e9b548c62d017abf8e07ac","date":1228770465,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/SortField#hashCode().mjava","pathOld":"src/java/org/apache/lucene/search/SortField#hashCode().mjava","sourceNew":"  /** Returns true if <code>o</code> is equal to this.  If a\n   *  {@link SortComparatorSource} or {@link\n   *  FieldCache.Parser} was provided, it must properly\n   *  implement hashCode (unless a singleton is always\n   *  used). */\n  public int hashCode() {\n    int hash=type^0x346565dd + Boolean.valueOf(reverse).hashCode()^0xaf5998bb;\n    if (field != null) hash += field.hashCode()^0xff5685dd;\n    if (locale != null) hash += locale.hashCode()^0x08150815;\n    if (factory != null) hash += factory.hashCode()^0x34987555;\n    if (parser != null) hash += parser.hashCode()^0x3aaf56ff;\n    return hash;\n  }\n\n","sourceOld":"  /** Returns a hash code value for this object.  If a\n   *  {@link #SortComparatorSource} was provided, it must\n   *  properly implement hashCode. */\n  public int hashCode() {\n    int hash=type^0x346565dd + Boolean.valueOf(reverse).hashCode()^0xaf5998bb;\n    if (field != null) hash += field.hashCode()^0xff5685dd;\n    if (locale != null) hash += locale.hashCode()^0x08150815;\n    if (factory != null) hash += factory.hashCode()^0x34987555;\n    return hash;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"318d45e3854065297d5f5209436dc39c24482e9a","date":1235397590,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/SortField#hashCode().mjava","pathOld":"src/java/org/apache/lucene/search/SortField#hashCode().mjava","sourceNew":"  /** Returns true if <code>o</code> is equal to this.  If a\n   *  {@link SortComparatorSource} (deprecated) or {@link\n   *  FieldCache.Parser} was provided, it must properly\n   *  implement hashCode (unless a singleton is always\n   *  used). */\n  public int hashCode() {\n    int hash=type^0x346565dd + Boolean.valueOf(reverse).hashCode()^0xaf5998bb;\n    if (field != null) hash += field.hashCode()^0xff5685dd;\n    if (locale != null) hash += locale.hashCode()^0x08150815;\n    if (factory != null) hash += factory.hashCode()^0x34987555;\n    if (parser != null) hash += parser.hashCode()^0x3aaf56ff;\n    return hash;\n  }\n\n","sourceOld":"  /** Returns true if <code>o</code> is equal to this.  If a\n   *  {@link SortComparatorSource} or {@link\n   *  FieldCache.Parser} was provided, it must properly\n   *  implement hashCode (unless a singleton is always\n   *  used). */\n  public int hashCode() {\n    int hash=type^0x346565dd + Boolean.valueOf(reverse).hashCode()^0xaf5998bb;\n    if (field != null) hash += field.hashCode()^0xff5685dd;\n    if (locale != null) hash += locale.hashCode()^0x08150815;\n    if (factory != null) hash += factory.hashCode()^0x34987555;\n    if (parser != null) hash += parser.hashCode()^0x3aaf56ff;\n    return hash;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d4351d3c6f0fa8525a71739ed19ae23c96faf932","date":1244335494,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/SortField#hashCode().mjava","pathOld":"src/java/org/apache/lucene/search/SortField#hashCode().mjava","sourceNew":"  /** Returns true if <code>o</code> is equal to this.  If a\n   *  {@link SortComparatorSource} (deprecated) or {@link\n   *  FieldCache.Parser} was provided, it must properly\n   *  implement hashCode (unless a singleton is always\n   *  used). */\n  public int hashCode() {\n    int hash=type^0x346565dd + Boolean.valueOf(reverse).hashCode()^0xaf5998bb;\n    if (field != null) hash += field.hashCode()^0xff5685dd;\n    if (locale != null) hash += locale.hashCode()^0x08150815;\n    if (factory != null) hash += factory.hashCode()^0x34987555;\n    if (comparatorSource != null) hash += comparatorSource.hashCode();\n    if (parser != null) hash += parser.hashCode()^0x3aaf56ff;\n    return hash;\n  }\n\n","sourceOld":"  /** Returns true if <code>o</code> is equal to this.  If a\n   *  {@link SortComparatorSource} (deprecated) or {@link\n   *  FieldCache.Parser} was provided, it must properly\n   *  implement hashCode (unless a singleton is always\n   *  used). */\n  public int hashCode() {\n    int hash=type^0x346565dd + Boolean.valueOf(reverse).hashCode()^0xaf5998bb;\n    if (field != null) hash += field.hashCode()^0xff5685dd;\n    if (locale != null) hash += locale.hashCode()^0x08150815;\n    if (factory != null) hash += factory.hashCode()^0x34987555;\n    if (parser != null) hash += parser.hashCode()^0x3aaf56ff;\n    return hash;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ded38b25fe842ef1efc6715745bb8d8ed8e2fc99","date":1255432705,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/SortField#hashCode().mjava","pathOld":"src/java/org/apache/lucene/search/SortField#hashCode().mjava","sourceNew":"  /** Returns true if <code>o</code> is equal to this.  If a\n   *  {@link FieldComparatorSource} or {@link\n   *  FieldCache.Parser} was provided, it must properly\n   *  implement hashCode (unless a singleton is always\n   *  used). */\n  public int hashCode() {\n    int hash=type^0x346565dd + Boolean.valueOf(reverse).hashCode()^0xaf5998bb;\n    if (field != null) hash += field.hashCode()^0xff5685dd;\n    if (locale != null) hash += locale.hashCode()^0x08150815;\n    if (comparatorSource != null) hash += comparatorSource.hashCode();\n    if (parser != null) hash += parser.hashCode()^0x3aaf56ff;\n    return hash;\n  }\n\n","sourceOld":"  /** Returns true if <code>o</code> is equal to this.  If a\n   *  {@link SortComparatorSource} (deprecated) or {@link\n   *  FieldCache.Parser} was provided, it must properly\n   *  implement hashCode (unless a singleton is always\n   *  used). */\n  public int hashCode() {\n    int hash=type^0x346565dd + Boolean.valueOf(reverse).hashCode()^0xaf5998bb;\n    if (field != null) hash += field.hashCode()^0xff5685dd;\n    if (locale != null) hash += locale.hashCode()^0x08150815;\n    if (factory != null) hash += factory.hashCode()^0x34987555;\n    if (comparatorSource != null) hash += comparatorSource.hashCode();\n    if (parser != null) hash += parser.hashCode()^0x3aaf56ff;\n    return hash;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8a9e385641d717e641408d8fbbc62be8fc766357","date":1256746606,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/SortField#hashCode().mjava","pathOld":"src/java/org/apache/lucene/search/SortField#hashCode().mjava","sourceNew":"  /** Returns true if <code>o</code> is equal to this.  If a\n   *  {@link FieldComparatorSource} or {@link\n   *  FieldCache.Parser} was provided, it must properly\n   *  implement hashCode (unless a singleton is always\n   *  used). */\n  @Override\n  public int hashCode() {\n    int hash=type^0x346565dd + Boolean.valueOf(reverse).hashCode()^0xaf5998bb;\n    if (field != null) hash += field.hashCode()^0xff5685dd;\n    if (locale != null) hash += locale.hashCode()^0x08150815;\n    if (comparatorSource != null) hash += comparatorSource.hashCode();\n    if (parser != null) hash += parser.hashCode()^0x3aaf56ff;\n    return hash;\n  }\n\n","sourceOld":"  /** Returns true if <code>o</code> is equal to this.  If a\n   *  {@link FieldComparatorSource} or {@link\n   *  FieldCache.Parser} was provided, it must properly\n   *  implement hashCode (unless a singleton is always\n   *  used). */\n  public int hashCode() {\n    int hash=type^0x346565dd + Boolean.valueOf(reverse).hashCode()^0xaf5998bb;\n    if (field != null) hash += field.hashCode()^0xff5685dd;\n    if (locale != null) hash += locale.hashCode()^0x08150815;\n    if (comparatorSource != null) hash += comparatorSource.hashCode();\n    if (parser != null) hash += parser.hashCode()^0x3aaf56ff;\n    return hash;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/SortField#hashCode().mjava","pathOld":"src/java/org/apache/lucene/search/SortField#hashCode().mjava","sourceNew":"  /** Returns true if <code>o</code> is equal to this.  If a\n   *  {@link FieldComparatorSource} or {@link\n   *  FieldCache.Parser} was provided, it must properly\n   *  implement hashCode (unless a singleton is always\n   *  used). */\n  @Override\n  public int hashCode() {\n    int hash=type^0x346565dd + Boolean.valueOf(reverse).hashCode()^0xaf5998bb;\n    if (field != null) hash += field.hashCode()^0xff5685dd;\n    if (locale != null) hash += locale.hashCode()^0x08150815;\n    if (comparatorSource != null) hash += comparatorSource.hashCode();\n    if (parser != null) hash += parser.hashCode()^0x3aaf56ff;\n    return hash;\n  }\n\n","sourceOld":"  /** Returns true if <code>o</code> is equal to this.  If a\n   *  {@link FieldComparatorSource} or {@link\n   *  FieldCache.Parser} was provided, it must properly\n   *  implement hashCode (unless a singleton is always\n   *  used). */\n  @Override\n  public int hashCode() {\n    int hash=type^0x346565dd + Boolean.valueOf(reverse).hashCode()^0xaf5998bb;\n    if (field != null) hash += field.hashCode()^0xff5685dd;\n    if (locale != null) hash += locale.hashCode()^0x08150815;\n    if (comparatorSource != null) hash += comparatorSource.hashCode();\n    if (parser != null) hash += parser.hashCode()^0x3aaf56ff;\n    return hash;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f0222e7dc83a5ca35b7c946760f853b5c6474ea9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3766097c9c41a30d67e9b548c62d017abf8e07ac":["f0222e7dc83a5ca35b7c946760f853b5c6474ea9"],"8a9e385641d717e641408d8fbbc62be8fc766357":["ded38b25fe842ef1efc6715745bb8d8ed8e2fc99"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ded38b25fe842ef1efc6715745bb8d8ed8e2fc99":["d4351d3c6f0fa8525a71739ed19ae23c96faf932"],"318d45e3854065297d5f5209436dc39c24482e9a":["3766097c9c41a30d67e9b548c62d017abf8e07ac"],"d4351d3c6f0fa8525a71739ed19ae23c96faf932":["318d45e3854065297d5f5209436dc39c24482e9a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["8a9e385641d717e641408d8fbbc62be8fc766357"]},"commit2Childs":{"f0222e7dc83a5ca35b7c946760f853b5c6474ea9":["3766097c9c41a30d67e9b548c62d017abf8e07ac"],"3766097c9c41a30d67e9b548c62d017abf8e07ac":["318d45e3854065297d5f5209436dc39c24482e9a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f0222e7dc83a5ca35b7c946760f853b5c6474ea9"],"8a9e385641d717e641408d8fbbc62be8fc766357":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"ded38b25fe842ef1efc6715745bb8d8ed8e2fc99":["8a9e385641d717e641408d8fbbc62be8fc766357"],"318d45e3854065297d5f5209436dc39c24482e9a":["d4351d3c6f0fa8525a71739ed19ae23c96faf932"],"d4351d3c6f0fa8525a71739ed19ae23c96faf932":["ded38b25fe842ef1efc6715745bb8d8ed8e2fc99"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}