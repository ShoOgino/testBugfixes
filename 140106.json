{"path":"contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianShapeFilter#bits(IndexReader).mjava","commits":[{"id":"04a4a94db1eb59c8583adb166acfe686a031bedc","date":1230622637,"type":0,"author":"Ryan McKinley","isMerge":false,"pathNew":"contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianShapeFilter#bits(IndexReader).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public BitSet bits(IndexReader reader) throws IOException {\n    long start = System.currentTimeMillis();\n      \n    BitSet bits = new BitSet(reader.maxDoc());\n\n    TermDocs termDocs = reader.termDocs();\n    List<Double> area = shape.getArea();\n    int sz = area.size();\n    log.info(\"Area size \"+ sz);\n    \n    // iterate through each boxid\n    for (int i =0; i< sz; i++) {\n      double boxId = area.get(i).doubleValue();\n          \n      termDocs.seek(new Term(fieldName,\n          NumberUtils.double2sortableStr(boxId)));\n      \n      // iterate through all documents\n      // which have this boxId\n      while (termDocs.next()) {\n        bits.set(termDocs.doc());\n      }\n    }\n    \n    long end = System.currentTimeMillis();\n    log.info(\"BoundaryBox Time Taken: \"+ (end - start) + \" found: \"+bits.cardinality()+\" candidates\");\n    return bits;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["e59cead675ff912b2ffdac41ca1a2fa7d905b8fa"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"2d6be147c89de7996054b96873a638b6adc5cea1","date":1244667566,"type":3,"author":"Patrick O'Leary","isMerge":false,"pathNew":"contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianShapeFilter#bits(IndexReader).mjava","pathOld":"contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianShapeFilter#bits(IndexReader).mjava","sourceNew":"  @Override\n  public BitSet bits(IndexReader reader) throws IOException {\n    long start = System.currentTimeMillis();\n      \n    BitSet bits = new BitSet(reader.maxDoc());\n\n    TermDocs termDocs = reader.termDocs();\n    List<Double> area = shape.getArea();\n    int sz = area.size();\n    log.fine(\"Area size \"+ sz);\n    \n    // iterate through each boxid\n    for (int i =0; i< sz; i++) {\n      double boxId = area.get(i).doubleValue();\n          \n      termDocs.seek(new Term(fieldName,\n          NumberUtils.double2sortableStr(boxId)));\n      \n      // iterate through all documents\n      // which have this boxId\n      while (termDocs.next()) {\n        bits.set(termDocs.doc());\n      }\n    }\n    \n    long end = System.currentTimeMillis();\n    log.fine(\"BoundaryBox Time Taken: \"+ (end - start) + \" found: \"+bits.cardinality()+\" candidates\");\n    return bits;\n  }\n\n","sourceOld":"  @Override\n  public BitSet bits(IndexReader reader) throws IOException {\n    long start = System.currentTimeMillis();\n      \n    BitSet bits = new BitSet(reader.maxDoc());\n\n    TermDocs termDocs = reader.termDocs();\n    List<Double> area = shape.getArea();\n    int sz = area.size();\n    log.info(\"Area size \"+ sz);\n    \n    // iterate through each boxid\n    for (int i =0; i< sz; i++) {\n      double boxId = area.get(i).doubleValue();\n          \n      termDocs.seek(new Term(fieldName,\n          NumberUtils.double2sortableStr(boxId)));\n      \n      // iterate through all documents\n      // which have this boxId\n      while (termDocs.next()) {\n        bits.set(termDocs.doc());\n      }\n    }\n    \n    long end = System.currentTimeMillis();\n    log.info(\"BoundaryBox Time Taken: \"+ (end - start) + \" found: \"+bits.cardinality()+\" candidates\");\n    return bits;\n  }\n\n","bugFix":null,"bugIntro":["e59cead675ff912b2ffdac41ca1a2fa7d905b8fa"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"60fe82b6af0f490fe9a473a5315847479e78f73f","date":1247758686,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianShapeFilter#bits(IndexReader).mjava","pathOld":"contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianShapeFilter#bits(IndexReader).mjava","sourceNew":"  @Override\n  public BitSet bits(IndexReader reader) throws IOException {\n    long start = System.currentTimeMillis();\n      \n    BitSet bits = new BitSet(reader.maxDoc());\n\n    TermDocs termDocs = reader.termDocs();\n    List<Double> area = shape.getArea();\n    int sz = area.size();\n    log.fine(\"Area size \"+ sz);\n    \n    // iterate through each boxid\n    for (int i =0; i< sz; i++) {\n      double boxId = area.get(i).doubleValue();\n      termDocs.seek(new Term(fieldName,\n          NumericUtils.doubleToPrefixCoded(boxId)));\n      \n      // iterate through all documents\n      // which have this boxId\n      while (termDocs.next()) {\n        bits.set(termDocs.doc());\n      }\n    }\n    \n    long end = System.currentTimeMillis();\n    log.fine(\"BoundaryBox Time Taken: \"+ (end - start) + \" found: \"+bits.cardinality()+\" candidates\");\n    return bits;\n  }\n\n","sourceOld":"  @Override\n  public BitSet bits(IndexReader reader) throws IOException {\n    long start = System.currentTimeMillis();\n      \n    BitSet bits = new BitSet(reader.maxDoc());\n\n    TermDocs termDocs = reader.termDocs();\n    List<Double> area = shape.getArea();\n    int sz = area.size();\n    log.fine(\"Area size \"+ sz);\n    \n    // iterate through each boxid\n    for (int i =0; i< sz; i++) {\n      double boxId = area.get(i).doubleValue();\n          \n      termDocs.seek(new Term(fieldName,\n          NumberUtils.double2sortableStr(boxId)));\n      \n      // iterate through all documents\n      // which have this boxId\n      while (termDocs.next()) {\n        bits.set(termDocs.doc());\n      }\n    }\n    \n    long end = System.currentTimeMillis();\n    log.fine(\"BoundaryBox Time Taken: \"+ (end - start) + \" found: \"+bits.cardinality()+\" candidates\");\n    return bits;\n  }\n\n","bugFix":null,"bugIntro":["e59cead675ff912b2ffdac41ca1a2fa7d905b8fa"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d41c10b9c61bc826acd344f499e062fb46bc42ae","date":1249408917,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianShapeFilter#getDocIdSet(IndexReader).mjava","pathOld":"contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianShapeFilter#bits(IndexReader).mjava","sourceNew":"  @Override\n  public DocIdSet getDocIdSet(IndexReader reader) throws IOException {\n    long start = System.currentTimeMillis();\n      \n    OpenBitSet bits = new OpenBitSet(reader.maxDoc());\n\n    TermDocs termDocs = reader.termDocs();\n    List<Double> area = shape.getArea();\n    int sz = area.size();\n    log.fine(\"Area size \"+ sz);\n\n    // iterate through each boxid\n    for (int i =0; i< sz; i++) {\n      double boxId = area.get(i).doubleValue();\n      termDocs.seek(new Term(fieldName,\n          NumericUtils.doubleToPrefixCoded(boxId)));\n      \n      // iterate through all documents\n      // which have this boxId\n      while (termDocs.next()) {\n        bits.fastSet(termDocs.doc());\n      }\n    }\n    \n    long end = System.currentTimeMillis();\n    log.fine(\"BoundaryBox Time Taken: \"+ (end - start) + \" found: \"+bits.cardinality()+\" candidates\");\n    return bits;\n  }\n\n","sourceOld":"  @Override\n  public BitSet bits(IndexReader reader) throws IOException {\n    long start = System.currentTimeMillis();\n      \n    BitSet bits = new BitSet(reader.maxDoc());\n\n    TermDocs termDocs = reader.termDocs();\n    List<Double> area = shape.getArea();\n    int sz = area.size();\n    log.fine(\"Area size \"+ sz);\n    \n    // iterate through each boxid\n    for (int i =0; i< sz; i++) {\n      double boxId = area.get(i).doubleValue();\n      termDocs.seek(new Term(fieldName,\n          NumericUtils.doubleToPrefixCoded(boxId)));\n      \n      // iterate through all documents\n      // which have this boxId\n      while (termDocs.next()) {\n        bits.set(termDocs.doc());\n      }\n    }\n    \n    long end = System.currentTimeMillis();\n    log.fine(\"BoundaryBox Time Taken: \"+ (end - start) + \" found: \"+bits.cardinality()+\" candidates\");\n    return bits;\n  }\n\n","bugFix":null,"bugIntro":["e59cead675ff912b2ffdac41ca1a2fa7d905b8fa"],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"04a4a94db1eb59c8583adb166acfe686a031bedc":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"2d6be147c89de7996054b96873a638b6adc5cea1":["04a4a94db1eb59c8583adb166acfe686a031bedc"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d41c10b9c61bc826acd344f499e062fb46bc42ae":["60fe82b6af0f490fe9a473a5315847479e78f73f"],"60fe82b6af0f490fe9a473a5315847479e78f73f":["2d6be147c89de7996054b96873a638b6adc5cea1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d41c10b9c61bc826acd344f499e062fb46bc42ae"]},"commit2Childs":{"04a4a94db1eb59c8583adb166acfe686a031bedc":["2d6be147c89de7996054b96873a638b6adc5cea1"],"2d6be147c89de7996054b96873a638b6adc5cea1":["60fe82b6af0f490fe9a473a5315847479e78f73f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["04a4a94db1eb59c8583adb166acfe686a031bedc"],"d41c10b9c61bc826acd344f499e062fb46bc42ae":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"60fe82b6af0f490fe9a473a5315847479e78f73f":["d41c10b9c61bc826acd344f499e062fb46bc42ae"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}