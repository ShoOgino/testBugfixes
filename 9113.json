{"path":"solr/src/java/org/apache/solr/schema/IndexSchema#addDynamicField(List[DynamicField],SchemaField).mjava","commits":[{"id":"893269407f5c988a4b2ee13c7ffc01ec43136c1d","date":1268598046,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/schema/IndexSchema#addDynamicField(List[DynamicField],SchemaField).mjava","pathOld":"/dev/null","sourceNew":"  private void addDynamicField(List<DynamicField> dFields, SchemaField f) {\n    boolean dup = isDuplicateDynField(dFields, f);\n    if( !dup ) {\n      addDynamicFieldNoDupCheck(dFields, f);\n    } else {\n      String msg = \"[schema.xml] Duplicate DynamicField definition for '\"\n              + f.getName() + \"' ignoring: \" + f.toString();\n\n      Throwable t = new SolrException(SolrException.ErrorCode.SERVER_ERROR, msg);\n      SolrException.logOnce(log, null, t);\n      SolrConfig.severeErrors.add(t);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","date":1268599006,"type":4,"author":"Mark Robert Miller","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/src/java/org/apache/solr/schema/IndexSchema#addDynamicField(List[DynamicField],SchemaField).mjava","sourceNew":null,"sourceOld":"  private void addDynamicField(List<DynamicField> dFields, SchemaField f) {\n    boolean dup = isDuplicateDynField(dFields, f);\n    if( !dup ) {\n      addDynamicFieldNoDupCheck(dFields, f);\n    } else {\n      String msg = \"[schema.xml] Duplicate DynamicField definition for '\"\n              + f.getName() + \"' ignoring: \" + f.toString();\n\n      Throwable t = new SolrException(SolrException.ErrorCode.SERVER_ERROR, msg);\n      SolrException.logOnce(log, null, t);\n      SolrConfig.severeErrors.add(t);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/schema/IndexSchema#addDynamicField(List[DynamicField],SchemaField).mjava","pathOld":"src/java/org/apache/solr/schema/IndexSchema#addDynamicField(List[DynamicField],SchemaField).mjava","sourceNew":"  private void addDynamicField(List<DynamicField> dFields, SchemaField f) {\n    boolean dup = isDuplicateDynField(dFields, f);\n    if( !dup ) {\n      addDynamicFieldNoDupCheck(dFields, f);\n    } else {\n      String msg = \"[schema.xml] Duplicate DynamicField definition for '\"\n              + f.getName() + \"' ignoring: \" + f.toString();\n\n      Throwable t = new SolrException(SolrException.ErrorCode.SERVER_ERROR, msg);\n      SolrException.logOnce(log, null, t);\n      SolrConfig.severeErrors.add(t);\n    }\n  }\n\n","sourceOld":"  private void addDynamicField(List<DynamicField> dFields, SchemaField f) {\n    boolean dup = isDuplicateDynField(dFields, f);\n    if( !dup ) {\n      addDynamicFieldNoDupCheck(dFields, f);\n    } else {\n      String msg = \"[schema.xml] Duplicate DynamicField definition for '\"\n              + f.getName() + \"' ignoring: \" + f.toString();\n\n      Throwable t = new SolrException(SolrException.ErrorCode.SERVER_ERROR, msg);\n      SolrException.logOnce(log, null, t);\n      SolrConfig.severeErrors.add(t);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1da8d55113b689b06716246649de6f62430f15c0","date":1453508340,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/schema/IndexSchema#addDynamicField(List[DynamicField],SchemaField).mjava","pathOld":"/dev/null","sourceNew":"  private void addDynamicField(List<DynamicField> dFields, SchemaField f) {\n    boolean dup = isDuplicateDynField(dFields, f);\n    if( !dup ) {\n      addDynamicFieldNoDupCheck(dFields, f);\n    } else {\n      String msg = \"[schema.xml] Duplicate DynamicField definition for '\"\n              + f.getName() + \"' ignoring: \" + f.toString();\n\n      Throwable t = new SolrException(SolrException.ErrorCode.SERVER_ERROR, msg);\n      SolrException.logOnce(log, null, t);\n      SolrConfig.severeErrors.add(t);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"0aea57ab530d174e645bf6e14d04db1e243e13d7","date":1274216848,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/schema/IndexSchema#addDynamicField(List[DynamicField],SchemaField).mjava","pathOld":"solr/src/java/org/apache/solr/schema/IndexSchema#addDynamicField(List[DynamicField],SchemaField).mjava","sourceNew":"  private void addDynamicField(List<DynamicField> dFields, SchemaField f) {\n    boolean dup = isDuplicateDynField(dFields, f);\n    if( !dup ) {\n      addDynamicFieldNoDupCheck(dFields, f);\n    } else {\n      String msg = \"[schema.xml] Duplicate DynamicField definition for '\"\n              + f.getName() + \"'\";\n\n      SolrException t = new SolrException(SolrException.ErrorCode.SERVER_ERROR, msg);\n      SolrException.logOnce(log, null, t);\n      SolrConfig.severeErrors.add(t);\n      throw t;\n    }\n  }\n\n","sourceOld":"  private void addDynamicField(List<DynamicField> dFields, SchemaField f) {\n    boolean dup = isDuplicateDynField(dFields, f);\n    if( !dup ) {\n      addDynamicFieldNoDupCheck(dFields, f);\n    } else {\n      String msg = \"[schema.xml] Duplicate DynamicField definition for '\"\n              + f.getName() + \"' ignoring: \" + f.toString();\n\n      Throwable t = new SolrException(SolrException.ErrorCode.SERVER_ERROR, msg);\n      SolrException.logOnce(log, null, t);\n      SolrConfig.severeErrors.add(t);\n    }\n  }\n\n","bugFix":["abec2fd822be07fc74ef5ba3609b9c5625a87d6d"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/IndexSchema#addDynamicField(List[DynamicField],SchemaField).mjava","pathOld":"solr/src/java/org/apache/solr/schema/IndexSchema#addDynamicField(List[DynamicField],SchemaField).mjava","sourceNew":"  private void addDynamicField(List<DynamicField> dFields, SchemaField f) {\n    boolean dup = isDuplicateDynField(dFields, f);\n    if( !dup ) {\n      addDynamicFieldNoDupCheck(dFields, f);\n    } else {\n      String msg = \"[schema.xml] Duplicate DynamicField definition for '\"\n              + f.getName() + \"'\";\n\n      SolrException t = new SolrException(SolrException.ErrorCode.SERVER_ERROR, msg);\n      SolrException.logOnce(log, null, t);\n      SolrConfig.severeErrors.add(t);\n      throw t;\n    }\n  }\n\n","sourceOld":"  private void addDynamicField(List<DynamicField> dFields, SchemaField f) {\n    boolean dup = isDuplicateDynField(dFields, f);\n    if( !dup ) {\n      addDynamicFieldNoDupCheck(dFields, f);\n    } else {\n      String msg = \"[schema.xml] Duplicate DynamicField definition for '\"\n              + f.getName() + \"'\";\n\n      SolrException t = new SolrException(SolrException.ErrorCode.SERVER_ERROR, msg);\n      SolrException.logOnce(log, null, t);\n      SolrConfig.severeErrors.add(t);\n      throw t;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/IndexSchema#addDynamicField(List[DynamicField],SchemaField).mjava","pathOld":"solr/src/java/org/apache/solr/schema/IndexSchema#addDynamicField(List[DynamicField],SchemaField).mjava","sourceNew":"  private void addDynamicField(List<DynamicField> dFields, SchemaField f) {\n    boolean dup = isDuplicateDynField(dFields, f);\n    if( !dup ) {\n      addDynamicFieldNoDupCheck(dFields, f);\n    } else {\n      String msg = \"[schema.xml] Duplicate DynamicField definition for '\"\n              + f.getName() + \"'\";\n\n      SolrException t = new SolrException(SolrException.ErrorCode.SERVER_ERROR, msg);\n      SolrException.logOnce(log, null, t);\n      SolrConfig.severeErrors.add(t);\n      throw t;\n    }\n  }\n\n","sourceOld":"  private void addDynamicField(List<DynamicField> dFields, SchemaField f) {\n    boolean dup = isDuplicateDynField(dFields, f);\n    if( !dup ) {\n      addDynamicFieldNoDupCheck(dFields, f);\n    } else {\n      String msg = \"[schema.xml] Duplicate DynamicField definition for '\"\n              + f.getName() + \"'\";\n\n      SolrException t = new SolrException(SolrException.ErrorCode.SERVER_ERROR, msg);\n      SolrException.logOnce(log, null, t);\n      SolrConfig.severeErrors.add(t);\n      throw t;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/schema/IndexSchema#addDynamicField(List[DynamicField],SchemaField).mjava","pathOld":"solr/src/java/org/apache/solr/schema/IndexSchema#addDynamicField(List[DynamicField],SchemaField).mjava","sourceNew":"  private void addDynamicField(List<DynamicField> dFields, SchemaField f) {\n    boolean dup = isDuplicateDynField(dFields, f);\n    if( !dup ) {\n      addDynamicFieldNoDupCheck(dFields, f);\n    } else {\n      String msg = \"[schema.xml] Duplicate DynamicField definition for '\"\n              + f.getName() + \"'\";\n\n      SolrException t = new SolrException(SolrException.ErrorCode.SERVER_ERROR, msg);\n      SolrException.logOnce(log, null, t);\n      SolrConfig.severeErrors.add(t);\n      throw t;\n    }\n  }\n\n","sourceOld":"  private void addDynamicField(List<DynamicField> dFields, SchemaField f) {\n    boolean dup = isDuplicateDynField(dFields, f);\n    if( !dup ) {\n      addDynamicFieldNoDupCheck(dFields, f);\n    } else {\n      String msg = \"[schema.xml] Duplicate DynamicField definition for '\"\n              + f.getName() + \"'\";\n\n      SolrException t = new SolrException(SolrException.ErrorCode.SERVER_ERROR, msg);\n      SolrException.logOnce(log, null, t);\n      SolrConfig.severeErrors.add(t);\n      throw t;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1da8d55113b689b06716246649de6f62430f15c0":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","ad94625fb8d088209f46650c8097196fec67f00c"],"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"0aea57ab530d174e645bf6e14d04db1e243e13d7":["1da8d55113b689b06716246649de6f62430f15c0"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["0aea57ab530d174e645bf6e14d04db1e243e13d7"],"c26f00b574427b55127e869b935845554afde1fa":["0aea57ab530d174e645bf6e14d04db1e243e13d7","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["0aea57ab530d174e645bf6e14d04db1e243e13d7"],"ad94625fb8d088209f46650c8097196fec67f00c":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c26f00b574427b55127e869b935845554afde1fa"]},"commit2Childs":{"1da8d55113b689b06716246649de6f62430f15c0":["0aea57ab530d174e645bf6e14d04db1e243e13d7"],"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8"],"0aea57ab530d174e645bf6e14d04db1e243e13d7":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["1da8d55113b689b06716246649de6f62430f15c0"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["ad94625fb8d088209f46650c8097196fec67f00c"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"ad94625fb8d088209f46650c8097196fec67f00c":["1da8d55113b689b06716246649de6f62430f15c0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}