{"path":"lucene/core/src/java/org/apache/lucene/index/NumberDVWriter#reset().mjava","commits":[{"id":"9b637fb447c5b4257f6b4532d84ca91e456c1f2a","date":1352405059,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/NumberDVWriter#reset().mjava","pathOld":"/dev/null","sourceNew":"  // nocommit do we really need this...?  can't parent alloc\n  // a new instance after flush?\n  private void reset() {\n    pending.clear();\n    pending.trimToSize();\n    iwBytesUsed.addAndGet(-bytesUsed);\n    anyValues = false;\n    minValue = maxValue = 0;\n    bytesUsed = 0;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7ad1376d356a33e10b3b9b95708ddc83252499a6","date":1353008654,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/NumberDVWriter#reset().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/NumberDVWriter#reset().mjava","sourceNew":"  // nocommit do we really need this...?  can't parent alloc\n  // a new instance after flush?\n  private void reset() {\n    pending = new AppendingLongBuffer();\n    updateBytesUsed();\n    anyValues = false;\n    minValue = maxValue = 0;\n  }\n\n","sourceOld":"  // nocommit do we really need this...?  can't parent alloc\n  // a new instance after flush?\n  private void reset() {\n    pending.clear();\n    pending.trimToSize();\n    iwBytesUsed.addAndGet(-bytesUsed);\n    anyValues = false;\n    minValue = maxValue = 0;\n    bytesUsed = 0;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a761b207f161726214a84533bf56a78f6c21ff56","date":1354384027,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/NumberDVWriter#reset().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/NumberDVWriter#reset().mjava","sourceNew":"  // nocommit do we really need this...?  can't/doesn't parent alloc\n  // a new instance after flush?\n  void reset() {\n    pending = new AppendingLongBuffer();\n    updateBytesUsed();\n    anyValues = false;\n    minValue = maxValue = 0;\n  }\n\n","sourceOld":"  // nocommit do we really need this...?  can't parent alloc\n  // a new instance after flush?\n  private void reset() {\n    pending = new AppendingLongBuffer();\n    updateBytesUsed();\n    anyValues = false;\n    minValue = maxValue = 0;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"32fb848e256860b63adc9c2b068f386032c77b67","date":1357587205,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/NumberDVWriter#reset().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/NumberDVWriter#reset().mjava","sourceNew":"  // nocommit do we really need this...?  can't/doesn't parent alloc\n  // a new instance after flush?\n  void reset() {\n    pending = new AppendingLongBuffer();\n    updateBytesUsed();\n  }\n\n","sourceOld":"  // nocommit do we really need this...?  can't/doesn't parent alloc\n  // a new instance after flush?\n  void reset() {\n    pending = new AppendingLongBuffer();\n    updateBytesUsed();\n    anyValues = false;\n    minValue = maxValue = 0;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e5d36d3b999ce76a1e80788e5d243f513c69d50","date":1359044508,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/NumericDocValuesWriter#reset().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/NumberDVWriter#reset().mjava","sourceNew":"  // nocommit do we really need this...?  can't/doesn't parent alloc\n  // a new instance after flush?\n  void reset() {\n    // nocommit\n    //pending = new AppendingLongBuffer();\n    //updateBytesUsed();\n  }\n\n","sourceOld":"  // nocommit do we really need this...?  can't/doesn't parent alloc\n  // a new instance after flush?\n  void reset() {\n    pending = new AppendingLongBuffer();\n    updateBytesUsed();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7ad1376d356a33e10b3b9b95708ddc83252499a6":["9b637fb447c5b4257f6b4532d84ca91e456c1f2a"],"a761b207f161726214a84533bf56a78f6c21ff56":["7ad1376d356a33e10b3b9b95708ddc83252499a6"],"2e5d36d3b999ce76a1e80788e5d243f513c69d50":["32fb848e256860b63adc9c2b068f386032c77b67"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9b637fb447c5b4257f6b4532d84ca91e456c1f2a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"32fb848e256860b63adc9c2b068f386032c77b67":["a761b207f161726214a84533bf56a78f6c21ff56"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"7ad1376d356a33e10b3b9b95708ddc83252499a6":["a761b207f161726214a84533bf56a78f6c21ff56"],"a761b207f161726214a84533bf56a78f6c21ff56":["32fb848e256860b63adc9c2b068f386032c77b67"],"2e5d36d3b999ce76a1e80788e5d243f513c69d50":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9b637fb447c5b4257f6b4532d84ca91e456c1f2a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9b637fb447c5b4257f6b4532d84ca91e456c1f2a":["7ad1376d356a33e10b3b9b95708ddc83252499a6"],"32fb848e256860b63adc9c2b068f386032c77b67":["2e5d36d3b999ce76a1e80788e5d243f513c69d50"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["2e5d36d3b999ce76a1e80788e5d243f513c69d50","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}