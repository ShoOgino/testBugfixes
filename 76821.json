{"path":"src/java/org/apache/solr/search/WildcardFilter#getDocIdSet(IndexReader).mjava","commits":[{"id":"d964716078bb50d7bcd908536ac068a86a771a5d","date":1219956864,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/search/WildcardFilter#getDocIdSet(IndexReader).mjava","pathOld":"/dev/null","sourceNew":"  public DocIdSet getDocIdSet(IndexReader reader) throws IOException {\n    final OpenBitSet bitSet = new OpenBitSet(reader.maxDoc());\n    new WildcardGenerator(term) {\n      public void handleDoc(int doc) {\n        bitSet.set(doc);\n      }\n    }.generate(reader);\n    return bitSet;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"69bfb2d3b7da75ee8914093b06592ac4a871bc28","date":1220028881,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/search/WildcardFilter#getDocIdSet(IndexReader).mjava","pathOld":"src/java/org/apache/solr/search/WildcardFilter#getDocIdSet(IndexReader).mjava","sourceNew":"  @Override\n  public DocIdSet getDocIdSet(IndexReader reader) throws IOException {\n    final OpenBitSet bitSet = new OpenBitSet(reader.maxDoc());\n    new WildcardGenerator(term) {\n      public void handleDoc(int doc) {\n        bitSet.set(doc);\n      }\n    }.generate(reader);\n    return bitSet;\n  }\n\n","sourceOld":"  public DocIdSet getDocIdSet(IndexReader reader) throws IOException {\n    final OpenBitSet bitSet = new OpenBitSet(reader.maxDoc());\n    new WildcardGenerator(term) {\n      public void handleDoc(int doc) {\n        bitSet.set(doc);\n      }\n    }.generate(reader);\n    return bitSet;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/search/WildcardFilter#getDocIdSet(IndexReader).mjava","pathOld":"src/java/org/apache/solr/search/WildcardFilter#getDocIdSet(IndexReader).mjava","sourceNew":"  @Override\n  public DocIdSet getDocIdSet(IndexReader reader) throws IOException {\n    final OpenBitSet bitSet = new OpenBitSet(reader.maxDoc());\n    new WildcardGenerator(term) {\n      public void handleDoc(int doc) {\n        bitSet.set(doc);\n      }\n    }.generate(reader);\n    return bitSet;\n  }\n\n","sourceOld":"  @Override\n  public DocIdSet getDocIdSet(IndexReader reader) throws IOException {\n    final OpenBitSet bitSet = new OpenBitSet(reader.maxDoc());\n    new WildcardGenerator(term) {\n      public void handleDoc(int doc) {\n        bitSet.set(doc);\n      }\n    }.generate(reader);\n    return bitSet;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"d964716078bb50d7bcd908536ac068a86a771a5d":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"ad94625fb8d088209f46650c8097196fec67f00c":["69bfb2d3b7da75ee8914093b06592ac4a871bc28"],"69bfb2d3b7da75ee8914093b06592ac4a871bc28":["d964716078bb50d7bcd908536ac068a86a771a5d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["d964716078bb50d7bcd908536ac068a86a771a5d"],"d964716078bb50d7bcd908536ac068a86a771a5d":["69bfb2d3b7da75ee8914093b06592ac4a871bc28"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"69bfb2d3b7da75ee8914093b06592ac4a871bc28":["ad94625fb8d088209f46650c8097196fec67f00c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}