{"path":"lucene/core/src/test/org/apache/lucene/search/TestQueryVisitor#testExtractTermsAndBoosts().mjava","commits":[{"id":"5b9ffb60dc4bdc972b1403ad2ab2f5b4d9ce4cf7","date":1552575873,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestQueryVisitor#testExtractTermsAndBoosts().mjava","pathOld":"/dev/null","sourceNew":"  public void testExtractTermsAndBoosts() {\n    Map<Term, Float> termsToBoosts = new HashMap<>();\n    query.visit(new BoostedTermExtractor(1, termsToBoosts));\n    Map<Term, Float> expected = new HashMap<>();\n    expected.put(new Term(\"field1\", \"t1\"), 1f);\n    expected.put(new Term(\"field1\", \"tm2\"), 1f);\n    expected.put(new Term(\"field1\", \"tm3\"), 2f);\n    expected.put(new Term(\"field1\", \"term4\"), 3f);\n    expected.put(new Term(\"field1\", \"term5\"), 3f);\n    expected.put(new Term(\"field1\", \"term6\"), 1f);\n    expected.put(new Term(\"field1\", \"term7\"), 1f);\n    expected.put(new Term(\"field2\", \"term10\"), 6f);\n    assertThat(termsToBoosts, equalTo(expected));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5b9ffb60dc4bdc972b1403ad2ab2f5b4d9ce4cf7"],"5b9ffb60dc4bdc972b1403ad2ab2f5b4d9ce4cf7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5b9ffb60dc4bdc972b1403ad2ab2f5b4d9ce4cf7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"5b9ffb60dc4bdc972b1403ad2ab2f5b4d9ce4cf7":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}