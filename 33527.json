{"path":"modules/analysis/kuromoji/src/java/org/apache/lucene/analysis/ja/util/CSVUtil#parse(String).mjava","commits":[{"id":"98d45c1ff2c99694b6de2201175f9b8b8b27b597","date":1332757908,"type":1,"author":"Christian Moen","isMerge":false,"pathNew":"modules/analysis/kuromoji/src/java/org/apache/lucene/analysis/ja/util/CSVUtil#parse(String).mjava","pathOld":"modules/analysis/kuromoji/src/java/org/apache/lucene/analysis/kuromoji/util/CSVUtil#parse(String).mjava","sourceNew":"  /**\n   * Parse CSV line\n   * @param line\n   * @return Array of values\n   */\n  public static String[] parse(String line) {\n    boolean insideQuote = false;\n    ArrayList<String> result = new ArrayList<String>();\t\t\n    int quoteCount = 0;\n    StringBuilder sb = new StringBuilder();\n    for(int i = 0; i < line.length(); i++) {\n      char c = line.charAt(i);\n      \n      if(c == QUOTE) {\n        insideQuote = !insideQuote;\n        quoteCount++;\n      }\n      \n      if(c == COMMA && !insideQuote) {\n        String value = sb.toString();\n        value = unQuoteUnEscape(value);\n        result.add(value);\n        sb.setLength(0);\n        continue;\n      }\n      \n      sb.append(c);\n    }\n    \n    result.add(sb.toString());\n    \n    // Validate\n    if(quoteCount % 2 != 0) {\n      return new String[0];\n    }\n    \n    return result.toArray(new String[result.size()]);\n  }\n\n","sourceOld":"  /**\n   * Parse CSV line\n   * @param line\n   * @return Array of values\n   */\n  public static String[] parse(String line) {\n    boolean insideQuote = false;\n    ArrayList<String> result = new ArrayList<String>();\t\t\n    int quoteCount = 0;\n    StringBuilder sb = new StringBuilder();\n    for(int i = 0; i < line.length(); i++) {\n      char c = line.charAt(i);\n      \n      if(c == QUOTE) {\n        insideQuote = !insideQuote;\n        quoteCount++;\n      }\n      \n      if(c == COMMA && !insideQuote) {\n        String value = sb.toString();\n        value = unQuoteUnEscape(value);\n        result.add(value);\n        sb.setLength(0);\n        continue;\n      }\n      \n      sb.append(c);\n    }\n    \n    result.add(sb.toString());\n    \n    // Validate\n    if(quoteCount % 2 != 0) {\n      return new String[0];\n    }\n    \n    return result.toArray(new String[result.size()]);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/kuromoji/src/java/org/apache/lucene/analysis/ja/util/CSVUtil#parse(String).mjava","pathOld":"modules/analysis/kuromoji/src/java/org/apache/lucene/analysis/ja/util/CSVUtil#parse(String).mjava","sourceNew":"  /**\n   * Parse CSV line\n   * @param line\n   * @return Array of values\n   */\n  public static String[] parse(String line) {\n    boolean insideQuote = false;\n    ArrayList<String> result = new ArrayList<String>();\t\t\n    int quoteCount = 0;\n    StringBuilder sb = new StringBuilder();\n    for(int i = 0; i < line.length(); i++) {\n      char c = line.charAt(i);\n      \n      if(c == QUOTE) {\n        insideQuote = !insideQuote;\n        quoteCount++;\n      }\n      \n      if(c == COMMA && !insideQuote) {\n        String value = sb.toString();\n        value = unQuoteUnEscape(value);\n        result.add(value);\n        sb.setLength(0);\n        continue;\n      }\n      \n      sb.append(c);\n    }\n    \n    result.add(sb.toString());\n    \n    // Validate\n    if(quoteCount % 2 != 0) {\n      return new String[0];\n    }\n    \n    return result.toArray(new String[result.size()]);\n  }\n\n","sourceOld":"  /**\n   * Parse CSV line\n   * @param line\n   * @return Array of values\n   */\n  public static String[] parse(String line) {\n    boolean insideQuote = false;\n    ArrayList<String> result = new ArrayList<String>();\t\t\n    int quoteCount = 0;\n    StringBuilder sb = new StringBuilder();\n    for(int i = 0; i < line.length(); i++) {\n      char c = line.charAt(i);\n      \n      if(c == QUOTE) {\n        insideQuote = !insideQuote;\n        quoteCount++;\n      }\n      \n      if(c == COMMA && !insideQuote) {\n        String value = sb.toString();\n        value = unQuoteUnEscape(value);\n        result.add(value);\n        sb.setLength(0);\n        continue;\n      }\n      \n      sb.append(c);\n    }\n    \n    result.add(sb.toString());\n    \n    // Validate\n    if(quoteCount % 2 != 0) {\n      return new String[0];\n    }\n    \n    return result.toArray(new String[result.size()]);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["98d45c1ff2c99694b6de2201175f9b8b8b27b597"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"98d45c1ff2c99694b6de2201175f9b8b8b27b597":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["98d45c1ff2c99694b6de2201175f9b8b8b27b597"],"98d45c1ff2c99694b6de2201175f9b8b8b27b597":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}