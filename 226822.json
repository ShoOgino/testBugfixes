{"path":"contrib/xml-query-parser/src/test/org/apache/lucene/xmlparser/TestParser#dumpResults(String,Query,int).mjava","commits":[{"id":"d3c3c2404d1200c39220fa15054fae854db4e1ee","date":1140827958,"type":0,"author":"Mark Harwood","isMerge":false,"pathNew":"contrib/xml-query-parser/src/test/org/apache/lucene/xmlparser/TestParser#dumpResults(String,Query,int).mjava","pathOld":"/dev/null","sourceNew":"\tprivate void dumpResults(String qType,Query q, int numDocs) throws IOException\r\n\t{\r\n\t\tHits h = searcher.search(q);\r\n\t\tassertTrue(qType +\" should produce results \", h.length()>0);\r\n\t\tif(printResults)\r\n\t\t{\r\n\t\t\tSystem.out.println(\"=========\"+qType+\"============\");\r\n\t\t\tfor(int i=0;i<Math.min(numDocs,h.length());i++)\r\n\t\t\t{\r\n\t\t\t\torg.apache.lucene.document.Document ldoc=h.doc(i);\r\n\t\t\t\tSystem.out.println(\"[\"+ldoc.get(\"date\")+\"]\"+ldoc.get(\"contents\"));\r\n\t\t\t}\r\n\t\t\tSystem.out.println();\r\n\t\t}\r\n\t}\r\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6a361a621b184d9b73c9c9a37323a9845b8f8260","date":1226370946,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"contrib/xml-query-parser/src/test/org/apache/lucene/xmlparser/TestParser#dumpResults(String,Query,int).mjava","pathOld":"contrib/xml-query-parser/src/test/org/apache/lucene/xmlparser/TestParser#dumpResults(String,Query,int).mjava","sourceNew":"\tprivate void dumpResults(String qType,Query q, int numDocs) throws IOException\n\t{\n\t\tHits h = searcher.search(q);\n\t\tassertTrue(qType +\" should produce results \", h.length()>0);\n\t\tif(printResults)\n\t\t{\n\t\t\tSystem.out.println(\"=========\"+qType+\"============\");\n\t\t\tfor(int i=0;i<Math.min(numDocs,h.length());i++)\n\t\t\t{\n\t\t\t\torg.apache.lucene.document.Document ldoc=h.doc(i);\n\t\t\t\tSystem.out.println(\"[\"+ldoc.get(\"date\")+\"]\"+ldoc.get(\"contents\"));\n\t\t\t}\n\t\t\tSystem.out.println();\n\t\t}\n\t}\n\n","sourceOld":"\tprivate void dumpResults(String qType,Query q, int numDocs) throws IOException\r\n\t{\r\n\t\tHits h = searcher.search(q);\r\n\t\tassertTrue(qType +\" should produce results \", h.length()>0);\r\n\t\tif(printResults)\r\n\t\t{\r\n\t\t\tSystem.out.println(\"=========\"+qType+\"============\");\r\n\t\t\tfor(int i=0;i<Math.min(numDocs,h.length());i++)\r\n\t\t\t{\r\n\t\t\t\torg.apache.lucene.document.Document ldoc=h.doc(i);\r\n\t\t\t\tSystem.out.println(\"[\"+ldoc.get(\"date\")+\"]\"+ldoc.get(\"contents\"));\r\n\t\t\t}\r\n\t\t\tSystem.out.println();\r\n\t\t}\r\n\t}\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f148c02ddd6ba981c65ca685d0e56c3a98368e1","date":1254892102,"type":3,"author":"Michael Busch","isMerge":false,"pathNew":"contrib/xml-query-parser/src/test/org/apache/lucene/xmlparser/TestParser#dumpResults(String,Query,int).mjava","pathOld":"contrib/xml-query-parser/src/test/org/apache/lucene/xmlparser/TestParser#dumpResults(String,Query,int).mjava","sourceNew":"\tprivate void dumpResults(String qType,Query q, int numDocs) throws IOException\n\t{\n\t\tTopDocs hits = searcher.search(q, null, numDocs);\n\t\tassertTrue(qType +\" should produce results \", hits.totalHits>0);\n\t\tif(printResults)\n\t\t{\n\t\t\tSystem.out.println(\"=========\"+qType+\"============\");\n\t\t\tScoreDoc[] scoreDocs = hits.scoreDocs;\n\t\t\tfor(int i=0;i<Math.min(numDocs,hits.totalHits);i++)\n\t\t\t{\n\t\t\t\torg.apache.lucene.document.Document ldoc=searcher.doc(scoreDocs[i].doc);\n\t\t\t\tSystem.out.println(\"[\"+ldoc.get(\"date\")+\"]\"+ldoc.get(\"contents\"));\n\t\t\t}\n\t\t\tSystem.out.println();\n\t\t}\n\t}\n\n","sourceOld":"\tprivate void dumpResults(String qType,Query q, int numDocs) throws IOException\n\t{\n\t\tHits h = searcher.search(q);\n\t\tassertTrue(qType +\" should produce results \", h.length()>0);\n\t\tif(printResults)\n\t\t{\n\t\t\tSystem.out.println(\"=========\"+qType+\"============\");\n\t\t\tfor(int i=0;i<Math.min(numDocs,h.length());i++)\n\t\t\t{\n\t\t\t\torg.apache.lucene.document.Document ldoc=h.doc(i);\n\t\t\t\tSystem.out.println(\"[\"+ldoc.get(\"date\")+\"]\"+ldoc.get(\"contents\"));\n\t\t\t}\n\t\t\tSystem.out.println();\n\t\t}\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"42607aa380c892dc1ec0ab26e86a575c28e13618","date":1268641604,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/xml-query-parser/src/test/org/apache/lucene/xmlparser/TestParser#dumpResults(String,Query,int).mjava","pathOld":"contrib/xml-query-parser/src/test/org/apache/lucene/xmlparser/TestParser#dumpResults(String,Query,int).mjava","sourceNew":"\tprivate void dumpResults(String qType,Query q, int numDocs) throws IOException\n\t{\n\t\tTopDocs hits = searcher.search(q, null, numDocs);\n\t\tassertTrue(qType +\" should produce results \", hits.totalHits>0);\n\t\tif(VERBOSE)\n\t\t{\n\t\t\tSystem.out.println(\"=========\"+qType+\"============\");\n\t\t\tScoreDoc[] scoreDocs = hits.scoreDocs;\n\t\t\tfor(int i=0;i<Math.min(numDocs,hits.totalHits);i++)\n\t\t\t{\n\t\t\t\torg.apache.lucene.document.Document ldoc=searcher.doc(scoreDocs[i].doc);\n\t\t\t\tSystem.out.println(\"[\"+ldoc.get(\"date\")+\"]\"+ldoc.get(\"contents\"));\n\t\t\t}\n\t\t\tSystem.out.println();\n\t\t}\n\t}\n\n","sourceOld":"\tprivate void dumpResults(String qType,Query q, int numDocs) throws IOException\n\t{\n\t\tTopDocs hits = searcher.search(q, null, numDocs);\n\t\tassertTrue(qType +\" should produce results \", hits.totalHits>0);\n\t\tif(printResults)\n\t\t{\n\t\t\tSystem.out.println(\"=========\"+qType+\"============\");\n\t\t\tScoreDoc[] scoreDocs = hits.scoreDocs;\n\t\t\tfor(int i=0;i<Math.min(numDocs,hits.totalHits);i++)\n\t\t\t{\n\t\t\t\torg.apache.lucene.document.Document ldoc=searcher.doc(scoreDocs[i].doc);\n\t\t\t\tSystem.out.println(\"[\"+ldoc.get(\"date\")+\"]\"+ldoc.get(\"contents\"));\n\t\t\t}\n\t\t\tSystem.out.println();\n\t\t}\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/xml-query-parser/src/test/org/apache/lucene/xmlparser/TestParser#dumpResults(String,Query,int).mjava","pathOld":"contrib/xml-query-parser/src/test/org/apache/lucene/xmlparser/TestParser#dumpResults(String,Query,int).mjava","sourceNew":"\tprivate void dumpResults(String qType,Query q, int numDocs) throws IOException\n\t{\n\t\tTopDocs hits = searcher.search(q, null, numDocs);\n\t\tassertTrue(qType +\" should produce results \", hits.totalHits>0);\n\t\tif(VERBOSE)\n\t\t{\n\t\t\tSystem.out.println(\"=========\"+qType+\"============\");\n\t\t\tScoreDoc[] scoreDocs = hits.scoreDocs;\n\t\t\tfor(int i=0;i<Math.min(numDocs,hits.totalHits);i++)\n\t\t\t{\n\t\t\t\torg.apache.lucene.document.Document ldoc=searcher.doc(scoreDocs[i].doc);\n\t\t\t\tSystem.out.println(\"[\"+ldoc.get(\"date\")+\"]\"+ldoc.get(\"contents\"));\n\t\t\t}\n\t\t\tSystem.out.println();\n\t\t}\n\t}\n\n","sourceOld":"\tprivate void dumpResults(String qType,Query q, int numDocs) throws IOException\n\t{\n\t\tTopDocs hits = searcher.search(q, null, numDocs);\n\t\tassertTrue(qType +\" should produce results \", hits.totalHits>0);\n\t\tif(VERBOSE)\n\t\t{\n\t\t\tSystem.out.println(\"=========\"+qType+\"============\");\n\t\t\tScoreDoc[] scoreDocs = hits.scoreDocs;\n\t\t\tfor(int i=0;i<Math.min(numDocs,hits.totalHits);i++)\n\t\t\t{\n\t\t\t\torg.apache.lucene.document.Document ldoc=searcher.doc(scoreDocs[i].doc);\n\t\t\t\tSystem.out.println(\"[\"+ldoc.get(\"date\")+\"]\"+ldoc.get(\"contents\"));\n\t\t\t}\n\t\t\tSystem.out.println();\n\t\t}\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6a361a621b184d9b73c9c9a37323a9845b8f8260":["d3c3c2404d1200c39220fa15054fae854db4e1ee"],"d3c3c2404d1200c39220fa15054fae854db4e1ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"42607aa380c892dc1ec0ab26e86a575c28e13618":["0f148c02ddd6ba981c65ca685d0e56c3a98368e1"],"0f148c02ddd6ba981c65ca685d0e56c3a98368e1":["6a361a621b184d9b73c9c9a37323a9845b8f8260"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["42607aa380c892dc1ec0ab26e86a575c28e13618"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d3c3c2404d1200c39220fa15054fae854db4e1ee"],"6a361a621b184d9b73c9c9a37323a9845b8f8260":["0f148c02ddd6ba981c65ca685d0e56c3a98368e1"],"d3c3c2404d1200c39220fa15054fae854db4e1ee":["6a361a621b184d9b73c9c9a37323a9845b8f8260"],"42607aa380c892dc1ec0ab26e86a575c28e13618":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"0f148c02ddd6ba981c65ca685d0e56c3a98368e1":["42607aa380c892dc1ec0ab26e86a575c28e13618"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}