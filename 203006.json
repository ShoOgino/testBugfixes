{"path":"lucene/misc/src/java/org/apache/lucene/index/sorter/EarlyTerminatingSortingCollector#EarlyTerminatingSortingCollector(Collector,Sorter,int).mjava","commits":[{"id":"4d1c249f01722fe2de6d60de2f0aade417fbb638","date":1365517193,"type":0,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/misc/src/java/org/apache/lucene/index/sorter/EarlyTerminatingSortingCollector#EarlyTerminatingSortingCollector(Collector,Sorter,int).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Create a new {@link EarlyTerminatingSortingCollector} instance.\n   * \n   * @param in\n   *          the collector to wrap\n   * @param sorter\n   *          the same sorter as the one which is used by {@link IndexWriter}'s\n   *          {@link SortingMergePolicy}\n   * @param numDocsToCollect\n   *          the number of documents to collect on each segment. When wrapping\n   *          a {@link TopDocsCollector}, this number should be the number of\n   *          hits.\n   */\n  public EarlyTerminatingSortingCollector(Collector in, Sorter sorter, int numDocsToCollect) {\n    if (numDocsToCollect <= 0) {\n      throw new IllegalStateException(\"numDocsToCollect must always be > 0, got \" + segmentTotalCollect);\n    }\n    this.in = in;\n    this.sorter = sorter;\n    this.numDocsToCollect = numDocsToCollect;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b060a9c887ff2c6f4280953afc6fb6000934dae5","date":1394119540,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/misc/src/java/org/apache/lucene/index/sorter/EarlyTerminatingSortingCollector#EarlyTerminatingSortingCollector(Collector,Sort,int).mjava","pathOld":"lucene/misc/src/java/org/apache/lucene/index/sorter/EarlyTerminatingSortingCollector#EarlyTerminatingSortingCollector(Collector,Sorter,int).mjava","sourceNew":"  /**\n   * Create a new {@link EarlyTerminatingSortingCollector} instance.\n   * \n   * @param in\n   *          the collector to wrap\n   * @param sort\n   *          the sort you are sorting the search results on\n   * @param numDocsToCollect\n   *          the number of documents to collect on each segment. When wrapping\n   *          a {@link TopDocsCollector}, this number should be the number of\n   *          hits.\n   */\n  public EarlyTerminatingSortingCollector(Collector in, Sort sort, int numDocsToCollect) {\n    if (numDocsToCollect <= 0) {\n      throw new IllegalStateException(\"numDocsToCollect must always be > 0, got \" + segmentTotalCollect);\n    }\n    this.in = in;\n    this.sort = sort;\n    this.numDocsToCollect = numDocsToCollect;\n  }\n\n","sourceOld":"  /**\n   * Create a new {@link EarlyTerminatingSortingCollector} instance.\n   * \n   * @param in\n   *          the collector to wrap\n   * @param sorter\n   *          the same sorter as the one which is used by {@link IndexWriter}'s\n   *          {@link SortingMergePolicy}\n   * @param numDocsToCollect\n   *          the number of documents to collect on each segment. When wrapping\n   *          a {@link TopDocsCollector}, this number should be the number of\n   *          hits.\n   */\n  public EarlyTerminatingSortingCollector(Collector in, Sorter sorter, int numDocsToCollect) {\n    if (numDocsToCollect <= 0) {\n      throw new IllegalStateException(\"numDocsToCollect must always be > 0, got \" + segmentTotalCollect);\n    }\n    this.in = in;\n    this.sorter = sorter;\n    this.numDocsToCollect = numDocsToCollect;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4637747f71df783fc2014ef1f1e0418466e3bed6","date":1394196311,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/misc/src/java/org/apache/lucene/index/sorter/EarlyTerminatingSortingCollector#EarlyTerminatingSortingCollector(Collector,Sort,int).mjava","pathOld":"lucene/misc/src/java/org/apache/lucene/index/sorter/EarlyTerminatingSortingCollector#EarlyTerminatingSortingCollector(Collector,Sorter,int).mjava","sourceNew":"  /**\n   * Create a new {@link EarlyTerminatingSortingCollector} instance.\n   * \n   * @param in\n   *          the collector to wrap\n   * @param sort\n   *          the sort you are sorting the search results on\n   * @param numDocsToCollect\n   *          the number of documents to collect on each segment. When wrapping\n   *          a {@link TopDocsCollector}, this number should be the number of\n   *          hits.\n   */\n  public EarlyTerminatingSortingCollector(Collector in, Sort sort, int numDocsToCollect) {\n    if (numDocsToCollect <= 0) {\n      throw new IllegalStateException(\"numDocsToCollect must always be > 0, got \" + segmentTotalCollect);\n    }\n    this.in = in;\n    this.sort = sort;\n    this.numDocsToCollect = numDocsToCollect;\n  }\n\n","sourceOld":"  /**\n   * Create a new {@link EarlyTerminatingSortingCollector} instance.\n   * \n   * @param in\n   *          the collector to wrap\n   * @param sorter\n   *          the same sorter as the one which is used by {@link IndexWriter}'s\n   *          {@link SortingMergePolicy}\n   * @param numDocsToCollect\n   *          the number of documents to collect on each segment. When wrapping\n   *          a {@link TopDocsCollector}, this number should be the number of\n   *          hits.\n   */\n  public EarlyTerminatingSortingCollector(Collector in, Sorter sorter, int numDocsToCollect) {\n    if (numDocsToCollect <= 0) {\n      throw new IllegalStateException(\"numDocsToCollect must always be > 0, got \" + segmentTotalCollect);\n    }\n    this.in = in;\n    this.sorter = sorter;\n    this.numDocsToCollect = numDocsToCollect;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"96ea64d994d340044e0d57aeb6a5871539d10ca5","date":1394225445,"type":5,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/misc/src/java/org/apache/lucene/index/sorter/EarlyTerminatingSortingCollector#EarlyTerminatingSortingCollector(Collector,Sort,int).mjava","pathOld":"lucene/misc/src/java/org/apache/lucene/index/sorter/EarlyTerminatingSortingCollector#EarlyTerminatingSortingCollector(Collector,Sorter,int).mjava","sourceNew":"  /**\n   * Create a new {@link EarlyTerminatingSortingCollector} instance.\n   * \n   * @param in\n   *          the collector to wrap\n   * @param sort\n   *          the sort you are sorting the search results on\n   * @param numDocsToCollect\n   *          the number of documents to collect on each segment. When wrapping\n   *          a {@link TopDocsCollector}, this number should be the number of\n   *          hits.\n   */\n  public EarlyTerminatingSortingCollector(Collector in, Sort sort, int numDocsToCollect) {\n    if (numDocsToCollect <= 0) {\n      throw new IllegalStateException(\"numDocsToCollect must always be > 0, got \" + segmentTotalCollect);\n    }\n    this.in = in;\n    this.sort = sort;\n    this.numDocsToCollect = numDocsToCollect;\n  }\n\n","sourceOld":"  /**\n   * Create a new {@link EarlyTerminatingSortingCollector} instance.\n   * \n   * @param in\n   *          the collector to wrap\n   * @param sorter\n   *          the same sorter as the one which is used by {@link IndexWriter}'s\n   *          {@link SortingMergePolicy}\n   * @param numDocsToCollect\n   *          the number of documents to collect on each segment. When wrapping\n   *          a {@link TopDocsCollector}, this number should be the number of\n   *          hits.\n   */\n  public EarlyTerminatingSortingCollector(Collector in, Sorter sorter, int numDocsToCollect) {\n    if (numDocsToCollect <= 0) {\n      throw new IllegalStateException(\"numDocsToCollect must always be > 0, got \" + segmentTotalCollect);\n    }\n    this.in = in;\n    this.sorter = sorter;\n    this.numDocsToCollect = numDocsToCollect;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"96ea64d994d340044e0d57aeb6a5871539d10ca5":["4d1c249f01722fe2de6d60de2f0aade417fbb638","4637747f71df783fc2014ef1f1e0418466e3bed6"],"b060a9c887ff2c6f4280953afc6fb6000934dae5":["4d1c249f01722fe2de6d60de2f0aade417fbb638"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4d1c249f01722fe2de6d60de2f0aade417fbb638":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4637747f71df783fc2014ef1f1e0418466e3bed6":["4d1c249f01722fe2de6d60de2f0aade417fbb638","b060a9c887ff2c6f4280953afc6fb6000934dae5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4637747f71df783fc2014ef1f1e0418466e3bed6"]},"commit2Childs":{"96ea64d994d340044e0d57aeb6a5871539d10ca5":[],"b060a9c887ff2c6f4280953afc6fb6000934dae5":["4637747f71df783fc2014ef1f1e0418466e3bed6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4d1c249f01722fe2de6d60de2f0aade417fbb638"],"4d1c249f01722fe2de6d60de2f0aade417fbb638":["96ea64d994d340044e0d57aeb6a5871539d10ca5","b060a9c887ff2c6f4280953afc6fb6000934dae5","4637747f71df783fc2014ef1f1e0418466e3bed6"],"4637747f71df783fc2014ef1f1e0418466e3bed6":["96ea64d994d340044e0d57aeb6a5871539d10ca5","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["96ea64d994d340044e0d57aeb6a5871539d10ca5","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}