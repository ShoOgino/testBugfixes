{"path":"lucene/test-framework/src/java/org/apache/lucene/util/_TestUtil#docs(Random,IndexReader,String,BytesRef,Bits,DocsEnum,int).mjava","commits":[{"id":"02331260bb246364779cb6f04919ca47900d01bb","date":1343749884,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/_TestUtil#docs(Random,IndexReader,String,BytesRef,Bits,DocsEnum,int).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/_TestUtil#docs(Random,IndexReader,String,BytesRef,Bits,DocsEnum,boolean).mjava","sourceNew":"  // Returns a DocsEnum, but randomly sometimes uses a\n  // DocsAndFreqsEnum, DocsAndPositionsEnum.  Returns null\n  // if field/term doesn't exist:\n  public static DocsEnum docs(Random random, IndexReader r, String field, BytesRef term, Bits liveDocs, DocsEnum reuse, int flags) throws IOException {\n    final Terms terms = MultiFields.getTerms(r, field);\n    if (terms == null) {\n      return null;\n    }\n    final TermsEnum termsEnum = terms.iterator(null);\n    if (!termsEnum.seekExact(term, random.nextBoolean())) {\n      return null;\n    }\n    return docs(random, termsEnum, liveDocs, reuse, flags);\n  }\n\n","sourceOld":"  // Returns a DocsEnum, but randomly sometimes uses a\n  // DocsAndFreqsEnum, DocsAndPositionsEnum.  Returns null\n  // if field/term doesn't exist:\n  public static DocsEnum docs(Random random, IndexReader r, String field, BytesRef term, Bits liveDocs, DocsEnum reuse, boolean needsFreqs) throws IOException {\n    final Terms terms = MultiFields.getTerms(r, field);\n    if (terms == null) {\n      return null;\n    }\n    final TermsEnum termsEnum = terms.iterator(null);\n    if (!termsEnum.seekExact(term, random.nextBoolean())) {\n      return null;\n    }\n    return docs(random, termsEnum, liveDocs, reuse, needsFreqs);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","date":1343768312,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/_TestUtil#docs(Random,IndexReader,String,BytesRef,Bits,DocsEnum,int).mjava","pathOld":"/dev/null","sourceNew":"  // Returns a DocsEnum, but randomly sometimes uses a\n  // DocsAndFreqsEnum, DocsAndPositionsEnum.  Returns null\n  // if field/term doesn't exist:\n  public static DocsEnum docs(Random random, IndexReader r, String field, BytesRef term, Bits liveDocs, DocsEnum reuse, int flags) throws IOException {\n    final Terms terms = MultiFields.getTerms(r, field);\n    if (terms == null) {\n      return null;\n    }\n    final TermsEnum termsEnum = terms.iterator(null);\n    if (!termsEnum.seekExact(term, random.nextBoolean())) {\n      return null;\n    }\n    return docs(random, termsEnum, liveDocs, reuse, flags);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d6f074e73200c07d54f242d3880a8da5a35ff97b","date":1344507653,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/_TestUtil#docs(Random,IndexReader,String,BytesRef,Bits,DocsEnum,int).mjava","pathOld":"/dev/null","sourceNew":"  // Returns a DocsEnum, but randomly sometimes uses a\n  // DocsAndFreqsEnum, DocsAndPositionsEnum.  Returns null\n  // if field/term doesn't exist:\n  public static DocsEnum docs(Random random, IndexReader r, String field, BytesRef term, Bits liveDocs, DocsEnum reuse, int flags) throws IOException {\n    final Terms terms = MultiFields.getTerms(r, field);\n    if (terms == null) {\n      return null;\n    }\n    final TermsEnum termsEnum = terms.iterator(null);\n    if (!termsEnum.seekExact(term, random.nextBoolean())) {\n      return null;\n    }\n    return docs(random, termsEnum, liveDocs, reuse, flags);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"eee5f2a24465d2c9a5f86ab84b7c35041a30fda8","date":1373996650,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/_TestUtil#docs(Random,IndexReader,String,BytesRef,Bits,DocsEnum,int).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/_TestUtil#docs(Random,IndexReader,String,BytesRef,Bits,DocsEnum,int).mjava","sourceNew":"  // Returns a DocsEnum, but randomly sometimes uses a\n  // DocsAndFreqsEnum, DocsAndPositionsEnum.  Returns null\n  // if field/term doesn't exist:\n  public static DocsEnum docs(Random random, IndexReader r, String field, BytesRef term, Bits liveDocs, DocsEnum reuse, int flags) throws IOException {\n    final Terms terms = MultiFields.getTerms(r, field);\n    if (terms == null) {\n      return null;\n    }\n    final TermsEnum termsEnum = terms.iterator(null);\n    if (!termsEnum.seekExact(term)) {\n      return null;\n    }\n    return docs(random, termsEnum, liveDocs, reuse, flags);\n  }\n\n","sourceOld":"  // Returns a DocsEnum, but randomly sometimes uses a\n  // DocsAndFreqsEnum, DocsAndPositionsEnum.  Returns null\n  // if field/term doesn't exist:\n  public static DocsEnum docs(Random random, IndexReader r, String field, BytesRef term, Bits liveDocs, DocsEnum reuse, int flags) throws IOException {\n    final Terms terms = MultiFields.getTerms(r, field);\n    if (terms == null) {\n      return null;\n    }\n    final TermsEnum termsEnum = terms.iterator(null);\n    if (!termsEnum.seekExact(term, random.nextBoolean())) {\n      return null;\n    }\n    return docs(random, termsEnum, liveDocs, reuse, flags);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","date":1376366778,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/_TestUtil#docs(Random,IndexReader,String,BytesRef,Bits,DocsEnum,int).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/_TestUtil#docs(Random,IndexReader,String,BytesRef,Bits,DocsEnum,int).mjava","sourceNew":"  // Returns a DocsEnum, but randomly sometimes uses a\n  // DocsAndFreqsEnum, DocsAndPositionsEnum.  Returns null\n  // if field/term doesn't exist:\n  public static DocsEnum docs(Random random, IndexReader r, String field, BytesRef term, Bits liveDocs, DocsEnum reuse, int flags) throws IOException {\n    final Terms terms = MultiFields.getTerms(r, field);\n    if (terms == null) {\n      return null;\n    }\n    final TermsEnum termsEnum = terms.iterator(null);\n    if (!termsEnum.seekExact(term)) {\n      return null;\n    }\n    return docs(random, termsEnum, liveDocs, reuse, flags);\n  }\n\n","sourceOld":"  // Returns a DocsEnum, but randomly sometimes uses a\n  // DocsAndFreqsEnum, DocsAndPositionsEnum.  Returns null\n  // if field/term doesn't exist:\n  public static DocsEnum docs(Random random, IndexReader r, String field, BytesRef term, Bits liveDocs, DocsEnum reuse, int flags) throws IOException {\n    final Terms terms = MultiFields.getTerms(r, field);\n    if (terms == null) {\n      return null;\n    }\n    final TermsEnum termsEnum = terms.iterator(null);\n    if (!termsEnum.seekExact(term, random.nextBoolean())) {\n      return null;\n    }\n    return docs(random, termsEnum, liveDocs, reuse, flags);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6613659748fe4411a7dcf85266e55db1f95f7315","date":1392773913,"type":5,"author":"Benson Margulies","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/TestUtil#docs(Random,IndexReader,String,BytesRef,Bits,DocsEnum,int).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/_TestUtil#docs(Random,IndexReader,String,BytesRef,Bits,DocsEnum,int).mjava","sourceNew":"  // Returns a DocsEnum, but randomly sometimes uses a\n  // DocsAndFreqsEnum, DocsAndPositionsEnum.  Returns null\n  // if field/term doesn't exist:\n  public static DocsEnum docs(Random random, IndexReader r, String field, BytesRef term, Bits liveDocs, DocsEnum reuse, int flags) throws IOException {\n    final Terms terms = MultiFields.getTerms(r, field);\n    if (terms == null) {\n      return null;\n    }\n    final TermsEnum termsEnum = terms.iterator(null);\n    if (!termsEnum.seekExact(term)) {\n      return null;\n    }\n    return docs(random, termsEnum, liveDocs, reuse, flags);\n  }\n\n","sourceOld":"  // Returns a DocsEnum, but randomly sometimes uses a\n  // DocsAndFreqsEnum, DocsAndPositionsEnum.  Returns null\n  // if field/term doesn't exist:\n  public static DocsEnum docs(Random random, IndexReader r, String field, BytesRef term, Bits liveDocs, DocsEnum reuse, int flags) throws IOException {\n    final Terms terms = MultiFields.getTerms(r, field);\n    if (terms == null) {\n      return null;\n    }\n    final TermsEnum termsEnum = terms.iterator(null);\n    if (!termsEnum.seekExact(term)) {\n      return null;\n    }\n    return docs(random, termsEnum, liveDocs, reuse, flags);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6613659748fe4411a7dcf85266e55db1f95f7315":["eee5f2a24465d2c9a5f86ab84b7c35041a30fda8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","02331260bb246364779cb6f04919ca47900d01bb"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":["02331260bb246364779cb6f04919ca47900d01bb"],"d6f074e73200c07d54f242d3880a8da5a35ff97b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","02331260bb246364779cb6f04919ca47900d01bb"],"eee5f2a24465d2c9a5f86ab84b7c35041a30fda8":["02331260bb246364779cb6f04919ca47900d01bb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6613659748fe4411a7dcf85266e55db1f95f7315"],"02331260bb246364779cb6f04919ca47900d01bb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"6613659748fe4411a7dcf85266e55db1f95f7315":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","d6f074e73200c07d54f242d3880a8da5a35ff97b","02331260bb246364779cb6f04919ca47900d01bb"],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":[],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":[],"d6f074e73200c07d54f242d3880a8da5a35ff97b":[],"eee5f2a24465d2c9a5f86ab84b7c35041a30fda8":["6613659748fe4411a7dcf85266e55db1f95f7315"],"02331260bb246364779cb6f04919ca47900d01bb":["b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","d6f074e73200c07d54f242d3880a8da5a35ff97b","eee5f2a24465d2c9a5f86ab84b7c35041a30fda8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","d6f074e73200c07d54f242d3880a8da5a35ff97b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}