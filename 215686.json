{"path":"backwards/src/java/org/apache/lucene/store/FSDirectory#open(File,LockFactory).mjava","commits":[{"id":"480d01e5b0ef8efb136d51670fec297ae5ae2c9c","date":1268821447,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"backwards/src/java/org/apache/lucene/store/FSDirectory#open(File,LockFactory).mjava","pathOld":"/dev/null","sourceNew":"  /** Just like {@link #open(File)}, but allows you to\n   *  also specify a custom {@link LockFactory}. */\n  public static FSDirectory open(File path, LockFactory lockFactory) throws IOException {\n    /* For testing:\n    MMapDirectory dir=new MMapDirectory(path, lockFactory);\n    dir.setUseUnmap(true);\n    return dir;\n    */\n\n    if (Constants.WINDOWS) {\n      return new SimpleFSDirectory(path, lockFactory);\n    } else {\n      return new NIOFSDirectory(path, lockFactory);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/java/org/apache/lucene/store/FSDirectory#open(File,LockFactory).mjava","pathOld":"backwards/src/java/org/apache/lucene/store/FSDirectory#open(File,LockFactory).mjava","sourceNew":"  /** Just like {@link #open(File)}, but allows you to\n   *  also specify a custom {@link LockFactory}. */\n  public static FSDirectory open(File path, LockFactory lockFactory) throws IOException {\n    /* For testing:\n    MMapDirectory dir=new MMapDirectory(path, lockFactory);\n    dir.setUseUnmap(true);\n    return dir;\n    */\n\n    if (Constants.WINDOWS) {\n      return new SimpleFSDirectory(path, lockFactory);\n    } else {\n      return new NIOFSDirectory(path, lockFactory);\n    }\n  }\n\n","sourceOld":"  /** Just like {@link #open(File)}, but allows you to\n   *  also specify a custom {@link LockFactory}. */\n  public static FSDirectory open(File path, LockFactory lockFactory) throws IOException {\n    /* For testing:\n    MMapDirectory dir=new MMapDirectory(path, lockFactory);\n    dir.setUseUnmap(true);\n    return dir;\n    */\n\n    if (Constants.WINDOWS) {\n      return new SimpleFSDirectory(path, lockFactory);\n    } else {\n      return new NIOFSDirectory(path, lockFactory);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"]},"commit2Childs":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}