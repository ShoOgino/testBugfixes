{"path":"solr/core/src/java/org/apache/solr/handler/component/StringStatsValues[StatsValuesFactory]#updateMinMax(String,String).mjava","commits":[{"id":"11982a7b6834a8571852448312db4624c32990b5","date":1321300684,"type":0,"author":"Ryan McKinley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/StringStatsValues[StatsValuesFactory]#updateMinMax(String,String).mjava","pathOld":"/dev/null","sourceNew":"   /**\n   * {@inheritDoc}\n   */\n  protected void updateMinMax(String min, String max) {\n    this.max = max(this.max, max);\n    this.min = min(this.min, min);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7530de27b87b961b51f01bd1299b7004d46e8823","date":1355236261,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/StringStatsValues[StatsValuesFactory]#updateMinMax(String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/StringStatsValues[StatsValuesFactory]#updateMinMax(String,String).mjava","sourceNew":"   /**\n   * {@inheritDoc}\n   */\n  @Override\n  protected void updateMinMax(String min, String max) {\n    this.max = max(this.max, max);\n    this.min = min(this.min, min);\n  }\n\n","sourceOld":"   /**\n   * {@inheritDoc}\n   */\n  protected void updateMinMax(String min, String max) {\n    this.max = max(this.max, max);\n    this.min = min(this.min, min);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/StringStatsValues[StatsValuesFactory]#updateMinMax(String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/StringStatsValues[StatsValuesFactory]#updateMinMax(String,String).mjava","sourceNew":"   /**\n   * {@inheritDoc}\n   */\n  @Override\n  protected void updateMinMax(String min, String max) {\n    this.max = max(this.max, max);\n    this.min = min(this.min, min);\n  }\n\n","sourceOld":"   /**\n   * {@inheritDoc}\n   */\n  protected void updateMinMax(String min, String max) {\n    this.max = max(this.max, max);\n    this.min = min(this.min, min);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d12bbc45d641864ffe03291bc30f178eb34e434c","date":1426001646,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/StringStatsValues[StatsValuesFactory]#updateMinMax(String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/StringStatsValues[StatsValuesFactory]#updateMinMax(String,String).mjava","sourceNew":"   /**\n   * {@inheritDoc}\n   */\n  @Override\n  protected void updateMinMax(String min, String max) {\n    if (computeMin) { // nested if to encourage JIT to optimize aware final var?\n      this.min = min(this.min, min);\n    }\n    if (computeMax) { // nested if to encourage JIT to optimize aware final var?\n      this.max = max(this.max, max);\n    }\n  }\n\n","sourceOld":"   /**\n   * {@inheritDoc}\n   */\n  @Override\n  protected void updateMinMax(String min, String max) {\n    this.max = max(this.max, max);\n    this.min = min(this.min, min);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1002283cfd29923d517db7c33e07bb54aac7acd4","date":1427211199,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/StringStatsValues[StatsValuesFactory]#updateMinMax(String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/StringStatsValues[StatsValuesFactory]#updateMinMax(String,String).mjava","sourceNew":"  /**\n   * {@inheritDoc}\n   */\n  @Override\n  protected void updateMinMax(String min, String max) {\n    if (computeMin) { // nested if to encourage JIT to optimize aware final var?\n      this.min = min(this.min, min);\n    }\n    if (computeMax) { // nested if to encourage JIT to optimize aware final var?\n      this.max = max(this.max, max);\n    }\n  }\n\n","sourceOld":"   /**\n   * {@inheritDoc}\n   */\n  @Override\n  protected void updateMinMax(String min, String max) {\n    if (computeMin) { // nested if to encourage JIT to optimize aware final var?\n      this.min = min(this.min, min);\n    }\n    if (computeMax) { // nested if to encourage JIT to optimize aware final var?\n      this.max = max(this.max, max);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/StringStatsValues[StatsValuesFactory]#updateMinMax(String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/StringStatsValues[StatsValuesFactory]#updateMinMax(String,String).mjava","sourceNew":"  /**\n   * {@inheritDoc}\n   */\n  @Override\n  protected void updateMinMax(String min, String max) {\n    if (computeMin) { // nested if to encourage JIT to optimize aware final var?\n      this.min = min(this.min, min);\n    }\n    if (computeMax) { // nested if to encourage JIT to optimize aware final var?\n      this.max = max(this.max, max);\n    }\n  }\n\n","sourceOld":"   /**\n   * {@inheritDoc}\n   */\n  @Override\n  protected void updateMinMax(String min, String max) {\n    this.max = max(this.max, max);\n    this.min = min(this.min, min);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a80a37ae73034270b57bfd57a44f8fcadc952fa0","date":1515440719,"type":3,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/StringStatsValues[StatsValuesFactory]#updateMinMax(String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/StringStatsValues[StatsValuesFactory]#updateMinMax(String,String).mjava","sourceNew":"  @Override\n  protected void updateMinMax(String min, String max) {\n    if (computeMin) { // nested if to encourage JIT to optimize aware final var?\n      this.min = min(this.min, min);\n    }\n    if (computeMax) { // nested if to encourage JIT to optimize aware final var?\n      this.max = max(this.max, max);\n    }\n  }\n\n","sourceOld":"  /**\n   * {@inheritDoc}\n   */\n  @Override\n  protected void updateMinMax(String min, String max) {\n    if (computeMin) { // nested if to encourage JIT to optimize aware final var?\n      this.min = min(this.min, min);\n    }\n    if (computeMax) { // nested if to encourage JIT to optimize aware final var?\n      this.max = max(this.max, max);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b94236357aaa22b76c10629851fe4e376e0cea82","date":1516710914,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/StringStatsValues[StatsValuesFactory]#updateMinMax(String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/StringStatsValues[StatsValuesFactory]#updateMinMax(String,String).mjava","sourceNew":"  @Override\n  protected void updateMinMax(String min, String max) {\n    if (computeMin) { // nested if to encourage JIT to optimize aware final var?\n      this.min = min(this.min, min);\n    }\n    if (computeMax) { // nested if to encourage JIT to optimize aware final var?\n      this.max = max(this.max, max);\n    }\n  }\n\n","sourceOld":"  /**\n   * {@inheritDoc}\n   */\n  @Override\n  protected void updateMinMax(String min, String max) {\n    if (computeMin) { // nested if to encourage JIT to optimize aware final var?\n      this.min = min(this.min, min);\n    }\n    if (computeMax) { // nested if to encourage JIT to optimize aware final var?\n      this.max = max(this.max, max);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"248f6ecc900c3a5633fd5ca6f564ea8b717720da","date":1588863846,"type":4,"author":"Mike Drob","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/handler/component/StringStatsValues[StatsValuesFactory]#updateMinMax(String,String).mjava","sourceNew":null,"sourceOld":"  @Override\n  protected void updateMinMax(String min, String max) {\n    if (computeMin) { // nested if to encourage JIT to optimize aware final var?\n      this.min = min(this.min, min);\n    }\n    if (computeMax) { // nested if to encourage JIT to optimize aware final var?\n      this.max = max(this.max, max);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["11982a7b6834a8571852448312db4624c32990b5","7530de27b87b961b51f01bd1299b7004d46e8823"],"b94236357aaa22b76c10629851fe4e376e0cea82":["1002283cfd29923d517db7c33e07bb54aac7acd4","a80a37ae73034270b57bfd57a44f8fcadc952fa0"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["7530de27b87b961b51f01bd1299b7004d46e8823","1002283cfd29923d517db7c33e07bb54aac7acd4"],"a80a37ae73034270b57bfd57a44f8fcadc952fa0":["1002283cfd29923d517db7c33e07bb54aac7acd4"],"248f6ecc900c3a5633fd5ca6f564ea8b717720da":["b94236357aaa22b76c10629851fe4e376e0cea82"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d12bbc45d641864ffe03291bc30f178eb34e434c":["7530de27b87b961b51f01bd1299b7004d46e8823"],"7530de27b87b961b51f01bd1299b7004d46e8823":["11982a7b6834a8571852448312db4624c32990b5"],"1002283cfd29923d517db7c33e07bb54aac7acd4":["d12bbc45d641864ffe03291bc30f178eb34e434c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["248f6ecc900c3a5633fd5ca6f564ea8b717720da"],"11982a7b6834a8571852448312db4624c32990b5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"b94236357aaa22b76c10629851fe4e376e0cea82":["248f6ecc900c3a5633fd5ca6f564ea8b717720da"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"a80a37ae73034270b57bfd57a44f8fcadc952fa0":["b94236357aaa22b76c10629851fe4e376e0cea82"],"248f6ecc900c3a5633fd5ca6f564ea8b717720da":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["11982a7b6834a8571852448312db4624c32990b5"],"d12bbc45d641864ffe03291bc30f178eb34e434c":["1002283cfd29923d517db7c33e07bb54aac7acd4"],"7530de27b87b961b51f01bd1299b7004d46e8823":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","d12bbc45d641864ffe03291bc30f178eb34e434c"],"1002283cfd29923d517db7c33e07bb54aac7acd4":["b94236357aaa22b76c10629851fe4e376e0cea82","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","a80a37ae73034270b57bfd57a44f8fcadc952fa0"],"11982a7b6834a8571852448312db4624c32990b5":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","7530de27b87b961b51f01bd1299b7004d46e8823"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}