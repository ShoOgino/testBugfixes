{"path":"lucene/core/src/test/org/apache/lucene/search/TestTermScorer#setUp().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestTermScorer#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestTermScorer#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    directory = newDirectory();\n    \n    RandomIndexWriter writer = new RandomIndexWriter(random, directory, \n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random))\n        .setMergePolicy(newLogMergePolicy())\n        .setSimilarity(new DefaultSimilarity()));\n    for (int i = 0; i < values.length; i++) {\n      Document doc = new Document();\n      doc\n          .add(newField(FIELD, values[i], TextField.TYPE_STORED));\n      writer.addDocument(doc);\n    }\n    indexReader = SlowCompositeReaderWrapper.wrap(writer.getReader());\n    writer.close();\n    indexSearcher = newSearcher(indexReader);\n    indexSearcher.setSimilarity(new DefaultSimilarity());\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    directory = newDirectory();\n    \n    RandomIndexWriter writer = new RandomIndexWriter(random, directory, \n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random))\n        .setMergePolicy(newLogMergePolicy())\n        .setSimilarity(new DefaultSimilarity()));\n    for (int i = 0; i < values.length; i++) {\n      Document doc = new Document();\n      doc\n          .add(newField(FIELD, values[i], TextField.TYPE_STORED));\n      writer.addDocument(doc);\n    }\n    indexReader = SlowCompositeReaderWrapper.wrap(writer.getReader());\n    writer.close();\n    indexSearcher = newSearcher(indexReader);\n    indexSearcher.setSimilarity(new DefaultSimilarity());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"629c38c4ae4e303d0617e05fbfe508140b32f0a3","date":1334500904,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestTermScorer#setUp().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestTermScorer#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    directory = newDirectory();\n    \n    RandomIndexWriter writer = new RandomIndexWriter(random(), directory, \n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()))\n        .setMergePolicy(newLogMergePolicy())\n        .setSimilarity(new DefaultSimilarity()));\n    for (int i = 0; i < values.length; i++) {\n      Document doc = new Document();\n      doc\n          .add(newField(FIELD, values[i], TextField.TYPE_STORED));\n      writer.addDocument(doc);\n    }\n    indexReader = SlowCompositeReaderWrapper.wrap(writer.getReader());\n    writer.close();\n    indexSearcher = newSearcher(indexReader);\n    indexSearcher.setSimilarity(new DefaultSimilarity());\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    directory = newDirectory();\n    \n    RandomIndexWriter writer = new RandomIndexWriter(random, directory, \n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random))\n        .setMergePolicy(newLogMergePolicy())\n        .setSimilarity(new DefaultSimilarity()));\n    for (int i = 0; i < values.length; i++) {\n      Document doc = new Document();\n      doc\n          .add(newField(FIELD, values[i], TextField.TYPE_STORED));\n      writer.addDocument(doc);\n    }\n    indexReader = SlowCompositeReaderWrapper.wrap(writer.getReader());\n    writer.close();\n    indexSearcher = newSearcher(indexReader);\n    indexSearcher.setSimilarity(new DefaultSimilarity());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"04f07771a2a7dd3a395700665ed839c3dae2def2","date":1339350139,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestTermScorer#setUp().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestTermScorer#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    directory = newDirectory();\n    \n    RandomIndexWriter writer = new RandomIndexWriter(random(), directory, \n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()))\n        .setMergePolicy(newLogMergePolicy())\n        .setSimilarity(new DefaultSimilarity()));\n    for (int i = 0; i < values.length; i++) {\n      Document doc = new Document();\n      doc\n          .add(newTextField(FIELD, values[i], Field.Store.YES));\n      writer.addDocument(doc);\n    }\n    indexReader = SlowCompositeReaderWrapper.wrap(writer.getReader());\n    writer.close();\n    indexSearcher = newSearcher(indexReader);\n    indexSearcher.setSimilarity(new DefaultSimilarity());\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    directory = newDirectory();\n    \n    RandomIndexWriter writer = new RandomIndexWriter(random(), directory, \n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()))\n        .setMergePolicy(newLogMergePolicy())\n        .setSimilarity(new DefaultSimilarity()));\n    for (int i = 0; i < values.length; i++) {\n      Document doc = new Document();\n      doc\n          .add(newField(FIELD, values[i], TextField.TYPE_STORED));\n      writer.addDocument(doc);\n    }\n    indexReader = SlowCompositeReaderWrapper.wrap(writer.getReader());\n    writer.close();\n    indexSearcher = newSearcher(indexReader);\n    indexSearcher.setSimilarity(new DefaultSimilarity());\n  }\n\n","bugFix":["1509f151d7692d84fae414b2b799ac06ba60fcb4"],"bugIntro":["0bdb67d0b49ddf963c3bfc4975fce171ad3aacb1"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestTermScorer#setUp().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestTermScorer#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    directory = newDirectory();\n    \n    RandomIndexWriter writer = new RandomIndexWriter(random(), directory, \n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()))\n        .setMergePolicy(newLogMergePolicy())\n        .setSimilarity(new DefaultSimilarity()));\n    for (int i = 0; i < values.length; i++) {\n      Document doc = new Document();\n      doc\n          .add(newTextField(FIELD, values[i], Field.Store.YES));\n      writer.addDocument(doc);\n    }\n    indexReader = SlowCompositeReaderWrapper.wrap(writer.getReader());\n    writer.shutdown();\n    indexSearcher = newSearcher(indexReader);\n    indexSearcher.setSimilarity(new DefaultSimilarity());\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    directory = newDirectory();\n    \n    RandomIndexWriter writer = new RandomIndexWriter(random(), directory, \n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()))\n        .setMergePolicy(newLogMergePolicy())\n        .setSimilarity(new DefaultSimilarity()));\n    for (int i = 0; i < values.length; i++) {\n      Document doc = new Document();\n      doc\n          .add(newTextField(FIELD, values[i], Field.Store.YES));\n      writer.addDocument(doc);\n    }\n    indexReader = SlowCompositeReaderWrapper.wrap(writer.getReader());\n    writer.close();\n    indexSearcher = newSearcher(indexReader);\n    indexSearcher.setSimilarity(new DefaultSimilarity());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e","date":1406737224,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestTermScorer#setUp().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestTermScorer#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    directory = newDirectory();\n    \n    RandomIndexWriter writer = new RandomIndexWriter(random(), directory, \n        newIndexWriterConfig(new MockAnalyzer(random()))\n        .setMergePolicy(newLogMergePolicy())\n        .setSimilarity(new DefaultSimilarity()));\n    for (int i = 0; i < values.length; i++) {\n      Document doc = new Document();\n      doc\n          .add(newTextField(FIELD, values[i], Field.Store.YES));\n      writer.addDocument(doc);\n    }\n    indexReader = SlowCompositeReaderWrapper.wrap(writer.getReader());\n    writer.shutdown();\n    indexSearcher = newSearcher(indexReader);\n    indexSearcher.setSimilarity(new DefaultSimilarity());\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    directory = newDirectory();\n    \n    RandomIndexWriter writer = new RandomIndexWriter(random(), directory, \n        newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()))\n        .setMergePolicy(newLogMergePolicy())\n        .setSimilarity(new DefaultSimilarity()));\n    for (int i = 0; i < values.length; i++) {\n      Document doc = new Document();\n      doc\n          .add(newTextField(FIELD, values[i], Field.Store.YES));\n      writer.addDocument(doc);\n    }\n    indexReader = SlowCompositeReaderWrapper.wrap(writer.getReader());\n    writer.shutdown();\n    indexSearcher = newSearcher(indexReader);\n    indexSearcher.setSimilarity(new DefaultSimilarity());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestTermScorer#setUp().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestTermScorer#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    directory = newDirectory();\n    \n    RandomIndexWriter writer = new RandomIndexWriter(random(), directory, \n        newIndexWriterConfig(new MockAnalyzer(random()))\n        .setMergePolicy(newLogMergePolicy())\n        .setSimilarity(new DefaultSimilarity()));\n    for (int i = 0; i < values.length; i++) {\n      Document doc = new Document();\n      doc\n          .add(newTextField(FIELD, values[i], Field.Store.YES));\n      writer.addDocument(doc);\n    }\n    indexReader = SlowCompositeReaderWrapper.wrap(writer.getReader());\n    writer.close();\n    indexSearcher = newSearcher(indexReader);\n    indexSearcher.setSimilarity(new DefaultSimilarity());\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    directory = newDirectory();\n    \n    RandomIndexWriter writer = new RandomIndexWriter(random(), directory, \n        newIndexWriterConfig(new MockAnalyzer(random()))\n        .setMergePolicy(newLogMergePolicy())\n        .setSimilarity(new DefaultSimilarity()));\n    for (int i = 0; i < values.length; i++) {\n      Document doc = new Document();\n      doc\n          .add(newTextField(FIELD, values[i], Field.Store.YES));\n      writer.addDocument(doc);\n    }\n    indexReader = SlowCompositeReaderWrapper.wrap(writer.getReader());\n    writer.shutdown();\n    indexSearcher = newSearcher(indexReader);\n    indexSearcher.setSimilarity(new DefaultSimilarity());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"81d0720146de53dd3a4a023d2a3d1089d86d748d","date":1442268215,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestTermScorer#setUp().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestTermScorer#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    directory = newDirectory();\n    \n    RandomIndexWriter writer = new RandomIndexWriter(random(), directory, \n        newIndexWriterConfig(new MockAnalyzer(random()))\n        .setMergePolicy(newLogMergePolicy())\n        .setSimilarity(new ClassicSimilarity()));\n    for (int i = 0; i < values.length; i++) {\n      Document doc = new Document();\n      doc\n          .add(newTextField(FIELD, values[i], Field.Store.YES));\n      writer.addDocument(doc);\n    }\n    indexReader = SlowCompositeReaderWrapper.wrap(writer.getReader());\n    writer.close();\n    indexSearcher = newSearcher(indexReader);\n    indexSearcher.setSimilarity(new ClassicSimilarity());\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    directory = newDirectory();\n    \n    RandomIndexWriter writer = new RandomIndexWriter(random(), directory, \n        newIndexWriterConfig(new MockAnalyzer(random()))\n        .setMergePolicy(newLogMergePolicy())\n        .setSimilarity(new DefaultSimilarity()));\n    for (int i = 0; i < values.length; i++) {\n      Document doc = new Document();\n      doc\n          .add(newTextField(FIELD, values[i], Field.Store.YES));\n      writer.addDocument(doc);\n    }\n    indexReader = SlowCompositeReaderWrapper.wrap(writer.getReader());\n    writer.close();\n    indexSearcher = newSearcher(indexReader);\n    indexSearcher.setSimilarity(new DefaultSimilarity());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"0bdb67d0b49ddf963c3bfc4975fce171ad3aacb1","date":1457644139,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestTermScorer#setUp().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestTermScorer#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    directory = newDirectory();\n    \n    RandomIndexWriter writer = new RandomIndexWriter(random(), directory, \n        newIndexWriterConfig(new MockAnalyzer(random()))\n        .setMergePolicy(newLogMergePolicy())\n        .setSimilarity(new ClassicSimilarity()));\n    for (int i = 0; i < values.length; i++) {\n      Document doc = new Document();\n      doc.add(newTextField(FIELD, values[i], Field.Store.YES));\n      writer.addDocument(doc);\n    }\n    writer.forceMerge(1);\n    indexReader = getOnlyLeafReader(writer.getReader());\n    writer.close();\n    indexSearcher = newSearcher(indexReader);\n    indexSearcher.setSimilarity(new ClassicSimilarity());\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    directory = newDirectory();\n    \n    RandomIndexWriter writer = new RandomIndexWriter(random(), directory, \n        newIndexWriterConfig(new MockAnalyzer(random()))\n        .setMergePolicy(newLogMergePolicy())\n        .setSimilarity(new ClassicSimilarity()));\n    for (int i = 0; i < values.length; i++) {\n      Document doc = new Document();\n      doc\n          .add(newTextField(FIELD, values[i], Field.Store.YES));\n      writer.addDocument(doc);\n    }\n    indexReader = SlowCompositeReaderWrapper.wrap(writer.getReader());\n    writer.close();\n    indexSearcher = newSearcher(indexReader);\n    indexSearcher.setSimilarity(new ClassicSimilarity());\n  }\n\n","bugFix":["04f07771a2a7dd3a395700665ed839c3dae2def2","386d1b0dcb065f1bfc494b1407cb41c536b95485","c084e47df29de3330311d69dabf515ceaa989512"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"92d78b9eaee60d8212373f3e709e4c19adbdb9c4","date":1457776583,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestTermScorer#setUp().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestTermScorer#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    directory = newDirectory();\n    \n    RandomIndexWriter writer = new RandomIndexWriter(random(), directory, \n        newIndexWriterConfig(new MockAnalyzer(random()))\n        .setMergePolicy(newLogMergePolicy())\n        .setSimilarity(new ClassicSimilarity()));\n    for (int i = 0; i < values.length; i++) {\n      Document doc = new Document();\n      doc.add(newTextField(FIELD, values[i], Field.Store.YES));\n      writer.addDocument(doc);\n    }\n    writer.forceMerge(1);\n    indexReader = getOnlyLeafReader(writer.getReader());\n    writer.close();\n    indexSearcher = newSearcher(indexReader, false);\n    indexSearcher.setSimilarity(new ClassicSimilarity());\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    directory = newDirectory();\n    \n    RandomIndexWriter writer = new RandomIndexWriter(random(), directory, \n        newIndexWriterConfig(new MockAnalyzer(random()))\n        .setMergePolicy(newLogMergePolicy())\n        .setSimilarity(new ClassicSimilarity()));\n    for (int i = 0; i < values.length; i++) {\n      Document doc = new Document();\n      doc.add(newTextField(FIELD, values[i], Field.Store.YES));\n      writer.addDocument(doc);\n    }\n    writer.forceMerge(1);\n    indexReader = getOnlyLeafReader(writer.getReader());\n    writer.close();\n    indexSearcher = newSearcher(indexReader);\n    indexSearcher.setSimilarity(new ClassicSimilarity());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0bdb67d0b49ddf963c3bfc4975fce171ad3aacb1":["81d0720146de53dd3a4a023d2a3d1089d86d748d"],"04f07771a2a7dd3a395700665ed839c3dae2def2":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d0ef034a4f10871667ae75181537775ddcf8ade4":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"81d0720146de53dd3a4a023d2a3d1089d86d748d":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["92d78b9eaee60d8212373f3e709e4c19adbdb9c4"],"92d78b9eaee60d8212373f3e709e4c19adbdb9c4":["0bdb67d0b49ddf963c3bfc4975fce171ad3aacb1"]},"commit2Childs":{"0bdb67d0b49ddf963c3bfc4975fce171ad3aacb1":["92d78b9eaee60d8212373f3e709e4c19adbdb9c4"],"04f07771a2a7dd3a395700665ed839c3dae2def2":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["81d0720146de53dd3a4a023d2a3d1089d86d748d"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"81d0720146de53dd3a4a023d2a3d1089d86d748d":["0bdb67d0b49ddf963c3bfc4975fce171ad3aacb1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"92d78b9eaee60d8212373f3e709e4c19adbdb9c4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}