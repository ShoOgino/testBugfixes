{"path":"solr/core/src/java/org/apache/solr/api/AnnotatedApi#readSpec(Class).mjava","commits":[{"id":"6ba409fa7dec3437c7631ef2582c2ad91a8368b1","date":1570400397,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/api/AnnotatedApi#readSpec(Class).mjava","pathOld":"/dev/null","sourceNew":"  private static SpecProvider readSpec(Class klas) {\n    EndPoint endPoint = (EndPoint) klas.getAnnotation(EndPoint.class);\n    if (endPoint == null) throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Invalid class :  \"+ klas.getName());\n    EndPoint endPoint1 = (EndPoint) klas.getAnnotation(EndPoint.class);\n    return () -> {\n      Map map = new LinkedHashMap();\n      List<String> methods = new ArrayList<>();\n      for (SolrRequest.METHOD method : endPoint1.method()) {\n        methods.add(method.name());\n      }\n      map.put(\"methods\", methods);\n      map.put(\"url\", new ValidatingJsonMap(Collections.singletonMap(\"paths\", Arrays.asList(endPoint1.path()))));\n      Map<String, Object> cmds = new HashMap<>();\n\n      for (Method method : klas.getMethods()) {\n        Command command = method.getAnnotation(Command.class);\n        if (command != null && !command.name().isBlank()) {\n          cmds.put(command.name(), AnnotatedApi.createSchema(method));\n        }\n      }\n      if (!cmds.isEmpty()) {\n        map.put(\"commands\", cmds);\n      }\n      return new ValidatingJsonMap(map);\n    };\n\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8257f3fa8a15874bc0ab76c6a2c732b9a0a725f8","date":1570799519,"type":3,"author":"noble","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/api/AnnotatedApi#readSpec(Class).mjava","pathOld":"solr/core/src/java/org/apache/solr/api/AnnotatedApi#readSpec(Class).mjava","sourceNew":"  private static SpecProvider readSpec(Class klas) {\n    EndPoint endPoint = (EndPoint) klas.getAnnotation(EndPoint.class);\n    if (endPoint == null)\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Invalid class :  \" + klas.getName());\n    return () -> {\n      Map map = new LinkedHashMap();\n      List<String> methods = new ArrayList<>();\n      for (SolrRequest.METHOD method : endPoint.method()) {\n        methods.add(method.name());\n      }\n      map.put(\"methods\", methods);\n      map.put(\"url\", new ValidatingJsonMap(Collections.singletonMap(\"paths\", Arrays.asList(endPoint.path()))));\n      Map<String, Object> cmds = new HashMap<>();\n\n      for (Method method : klas.getMethods()) {\n        Command command = method.getAnnotation(Command.class);\n        if (command != null && !command.name().isEmpty()) {\n          cmds.put(command.name(), AnnotatedApi.createSchema(method));\n        }\n      }\n      if (!cmds.isEmpty()) {\n        map.put(\"commands\", cmds);\n      }\n      return new ValidatingJsonMap(map);\n    };\n\n\n  }\n\n","sourceOld":"  private static SpecProvider readSpec(Class klas) {\n    EndPoint endPoint = (EndPoint) klas.getAnnotation(EndPoint.class);\n    if (endPoint == null) throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Invalid class :  \"+ klas.getName());\n    EndPoint endPoint1 = (EndPoint) klas.getAnnotation(EndPoint.class);\n    return () -> {\n      Map map = new LinkedHashMap();\n      List<String> methods = new ArrayList<>();\n      for (SolrRequest.METHOD method : endPoint1.method()) {\n        methods.add(method.name());\n      }\n      map.put(\"methods\", methods);\n      map.put(\"url\", new ValidatingJsonMap(Collections.singletonMap(\"paths\", Arrays.asList(endPoint1.path()))));\n      Map<String, Object> cmds = new HashMap<>();\n\n      for (Method method : klas.getMethods()) {\n        Command command = method.getAnnotation(Command.class);\n        if (command != null && !command.name().isBlank()) {\n          cmds.put(command.name(), AnnotatedApi.createSchema(method));\n        }\n      }\n      if (!cmds.isEmpty()) {\n        map.put(\"commands\", cmds);\n      }\n      return new ValidatingJsonMap(map);\n    };\n\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"38d63171317f90b25910c2374de2e33c55c243f5","date":1570800220,"type":3,"author":"noble","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/api/AnnotatedApi#readSpec(Class).mjava","pathOld":"solr/core/src/java/org/apache/solr/api/AnnotatedApi#readSpec(Class).mjava","sourceNew":"  private static SpecProvider readSpec(Class klas) {\n    EndPoint endPoint = (EndPoint) klas.getAnnotation(EndPoint.class);\n    if (endPoint == null) throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Invalid class :  \"+ klas.getName());\n    EndPoint endPoint1 = (EndPoint) klas.getAnnotation(EndPoint.class);\n    return () -> {\n      Map map = new LinkedHashMap();\n      List<String> methods = new ArrayList<>();\n      for (SolrRequest.METHOD method : endPoint1.method()) {\n        methods.add(method.name());\n      }\n      map.put(\"methods\", methods);\n      map.put(\"url\", new ValidatingJsonMap(Collections.singletonMap(\"paths\", Arrays.asList(endPoint1.path()))));\n      Map<String, Object> cmds = new HashMap<>();\n\n      for (Method method : klas.getMethods()) {\n        Command command = method.getAnnotation(Command.class);\n        if (command != null && !command.name().isBlank()) {\n          cmds.put(command.name(), AnnotatedApi.createSchema(method));\n        }\n      }\n      if (!cmds.isEmpty()) {\n        map.put(\"commands\", cmds);\n      }\n      return new ValidatingJsonMap(map);\n    };\n\n\n  }\n\n","sourceOld":"  private static SpecProvider readSpec(Class klas) {\n    EndPoint endPoint = (EndPoint) klas.getAnnotation(EndPoint.class);\n    if (endPoint == null)\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Invalid class :  \" + klas.getName());\n    return () -> {\n      Map map = new LinkedHashMap();\n      List<String> methods = new ArrayList<>();\n      for (SolrRequest.METHOD method : endPoint.method()) {\n        methods.add(method.name());\n      }\n      map.put(\"methods\", methods);\n      map.put(\"url\", new ValidatingJsonMap(Collections.singletonMap(\"paths\", Arrays.asList(endPoint.path()))));\n      Map<String, Object> cmds = new HashMap<>();\n\n      for (Method method : klas.getMethods()) {\n        Command command = method.getAnnotation(Command.class);\n        if (command != null && !command.name().isEmpty()) {\n          cmds.put(command.name(), AnnotatedApi.createSchema(method));\n        }\n      }\n      if (!cmds.isEmpty()) {\n        map.put(\"commands\", cmds);\n      }\n      return new ValidatingJsonMap(map);\n    };\n\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4505d603fb135c5279b5c6b1fc375feeeff582f1","date":1570801145,"type":3,"author":"noble","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/api/AnnotatedApi#readSpec(Class).mjava","pathOld":"solr/core/src/java/org/apache/solr/api/AnnotatedApi#readSpec(Class).mjava","sourceNew":"  private static SpecProvider readSpec(Class klas) {\n    EndPoint endPoint = (EndPoint) klas.getAnnotation(EndPoint.class);\n    if (endPoint == null)\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Invalid class :  \" + klas.getName());\n    return () -> {\n      Map map = new LinkedHashMap();\n      List<String> methods = new ArrayList<>();\n      for (SolrRequest.METHOD method : endPoint.method()) {\n        methods.add(method.name());\n      }\n      map.put(\"methods\", methods);\n      map.put(\"url\", new ValidatingJsonMap(Collections.singletonMap(\"paths\", Arrays.asList(endPoint.path()))));\n      Map<String, Object> cmds = new HashMap<>();\n\n      for (Method method : klas.getMethods()) {\n        Command command = method.getAnnotation(Command.class);\n        if (command != null && !command.name().isEmpty()) {\n          cmds.put(command.name(), AnnotatedApi.createSchema(method));\n        }\n      }\n      if (!cmds.isEmpty()) {\n        map.put(\"commands\", cmds);\n      }\n      return new ValidatingJsonMap(map);\n    };\n\n\n  }\n\n","sourceOld":"  private static SpecProvider readSpec(Class klas) {\n    EndPoint endPoint = (EndPoint) klas.getAnnotation(EndPoint.class);\n    if (endPoint == null) throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Invalid class :  \"+ klas.getName());\n    EndPoint endPoint1 = (EndPoint) klas.getAnnotation(EndPoint.class);\n    return () -> {\n      Map map = new LinkedHashMap();\n      List<String> methods = new ArrayList<>();\n      for (SolrRequest.METHOD method : endPoint1.method()) {\n        methods.add(method.name());\n      }\n      map.put(\"methods\", methods);\n      map.put(\"url\", new ValidatingJsonMap(Collections.singletonMap(\"paths\", Arrays.asList(endPoint1.path()))));\n      Map<String, Object> cmds = new HashMap<>();\n\n      for (Method method : klas.getMethods()) {\n        Command command = method.getAnnotation(Command.class);\n        if (command != null && !command.name().isBlank()) {\n          cmds.put(command.name(), AnnotatedApi.createSchema(method));\n        }\n      }\n      if (!cmds.isEmpty()) {\n        map.put(\"commands\", cmds);\n      }\n      return new ValidatingJsonMap(map);\n    };\n\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b0b597c65628ca9e73913a07e81691f8229bae35","date":1571224353,"type":0,"author":"jimczi","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/api/AnnotatedApi#readSpec(Class).mjava","pathOld":"/dev/null","sourceNew":"  private static SpecProvider readSpec(Class klas) {\n    EndPoint endPoint = (EndPoint) klas.getAnnotation(EndPoint.class);\n    if (endPoint == null)\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Invalid class :  \" + klas.getName());\n    return () -> {\n      Map map = new LinkedHashMap();\n      List<String> methods = new ArrayList<>();\n      for (SolrRequest.METHOD method : endPoint.method()) {\n        methods.add(method.name());\n      }\n      map.put(\"methods\", methods);\n      map.put(\"url\", new ValidatingJsonMap(Collections.singletonMap(\"paths\", Arrays.asList(endPoint.path()))));\n      Map<String, Object> cmds = new HashMap<>();\n\n      for (Method method : klas.getMethods()) {\n        Command command = method.getAnnotation(Command.class);\n        if (command != null && !command.name().isEmpty()) {\n          cmds.put(command.name(), AnnotatedApi.createSchema(method));\n        }\n      }\n      if (!cmds.isEmpty()) {\n        map.put(\"commands\", cmds);\n      }\n      return new ValidatingJsonMap(map);\n    };\n\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0cdbfc1e5714aafb41cabb055936a38ba4db5362","date":1587983533,"type":5,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/api/AnnotatedApi#readSpec(EndPoint,List[Method]).mjava","pathOld":"solr/core/src/java/org/apache/solr/api/AnnotatedApi#readSpec(Class).mjava","sourceNew":"  private static SpecProvider readSpec(EndPoint endPoint, List<Method> m) {\n    return () -> {\n      Map map = new LinkedHashMap();\n      List<String> methods = new ArrayList<>();\n      for (SolrRequest.METHOD method : endPoint.method()) {\n        methods.add(method.name());\n      }\n      map.put(\"methods\", methods);\n      map.put(\"url\", new ValidatingJsonMap(Collections.singletonMap(\"paths\", Arrays.asList(endPoint.path()))));\n      Map<String, Object> cmds = new HashMap<>();\n\n      for (Method method : m) {\n        Command command = method.getAnnotation(Command.class);\n        if (command != null && !command.name().isEmpty()) {\n          cmds.put(command.name(), AnnotatedApi.createSchema(method));\n        }\n      }\n      if (!cmds.isEmpty()) {\n        map.put(\"commands\", cmds);\n      }\n      return new ValidatingJsonMap(map);\n    };\n\n  }\n\n","sourceOld":"  private static SpecProvider readSpec(Class klas) {\n    EndPoint endPoint = (EndPoint) klas.getAnnotation(EndPoint.class);\n    if (endPoint == null)\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Invalid class :  \" + klas.getName());\n    return () -> {\n      Map map = new LinkedHashMap();\n      List<String> methods = new ArrayList<>();\n      for (SolrRequest.METHOD method : endPoint.method()) {\n        methods.add(method.name());\n      }\n      map.put(\"methods\", methods);\n      map.put(\"url\", new ValidatingJsonMap(Collections.singletonMap(\"paths\", Arrays.asList(endPoint.path()))));\n      Map<String, Object> cmds = new HashMap<>();\n\n      for (Method method : klas.getMethods()) {\n        Command command = method.getAnnotation(Command.class);\n        if (command != null && !command.name().isEmpty()) {\n          cmds.put(command.name(), AnnotatedApi.createSchema(method));\n        }\n      }\n      if (!cmds.isEmpty()) {\n        map.put(\"commands\", cmds);\n      }\n      return new ValidatingJsonMap(map);\n    };\n\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"38d63171317f90b25910c2374de2e33c55c243f5":["8257f3fa8a15874bc0ab76c6a2c732b9a0a725f8"],"8257f3fa8a15874bc0ab76c6a2c732b9a0a725f8":["6ba409fa7dec3437c7631ef2582c2ad91a8368b1"],"0cdbfc1e5714aafb41cabb055936a38ba4db5362":["4505d603fb135c5279b5c6b1fc375feeeff582f1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6ba409fa7dec3437c7631ef2582c2ad91a8368b1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4505d603fb135c5279b5c6b1fc375feeeff582f1":["38d63171317f90b25910c2374de2e33c55c243f5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0cdbfc1e5714aafb41cabb055936a38ba4db5362"],"b0b597c65628ca9e73913a07e81691f8229bae35":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","4505d603fb135c5279b5c6b1fc375feeeff582f1"]},"commit2Childs":{"38d63171317f90b25910c2374de2e33c55c243f5":["4505d603fb135c5279b5c6b1fc375feeeff582f1"],"8257f3fa8a15874bc0ab76c6a2c732b9a0a725f8":["38d63171317f90b25910c2374de2e33c55c243f5"],"0cdbfc1e5714aafb41cabb055936a38ba4db5362":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6ba409fa7dec3437c7631ef2582c2ad91a8368b1","b0b597c65628ca9e73913a07e81691f8229bae35"],"6ba409fa7dec3437c7631ef2582c2ad91a8368b1":["8257f3fa8a15874bc0ab76c6a2c732b9a0a725f8"],"4505d603fb135c5279b5c6b1fc375feeeff582f1":["0cdbfc1e5714aafb41cabb055936a38ba4db5362","b0b597c65628ca9e73913a07e81691f8229bae35"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"b0b597c65628ca9e73913a07e81691f8229bae35":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","b0b597c65628ca9e73913a07e81691f8229bae35"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}