{"path":"src/java/org/apache/lucene/analysis/TokenStream#end().mjava","commits":[{"id":"457c790b0d3d5883da64fb842ea54813004bb796","date":1248495093,"type":0,"author":"Michael Busch","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/TokenStream#end().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * This method is called by the consumer after the last token has been consumed, \n   * i.e. after {@link #incrementToken()} returned <code>false</code> (using the new TokenStream API)\n   * or after {@link #next(Token)} or {@link #next()} returned <code>null</code> (old TokenStream API).\n   * <p/>\n   * This method can be used to perform any end-of-stream operations, such as setting the final\n   * offset of a stream. The final offset of a stream might differ from the offset of the last token\n   * e.g. in case one or more whitespaces followed after the last token, but a {@link WhitespaceTokenizer}\n   * was used.\n   * \n   * @throws IOException\n   */\n  public void end() throws IOException {\n    // do nothing by default\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f4993710af1ffe1511739260d41658f3cfba23e5","date":1250782932,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/TokenStream#end().mjava","pathOld":"src/java/org/apache/lucene/analysis/TokenStream#end().mjava","sourceNew":"  /**\n   * This method is called by the consumer after the last token has been consumed, \n   * ie after {@link #incrementToken()} returned <code>false</code> (using the new TokenStream API)\n   * or after {@link #next(Token)} or {@link #next()} returned <code>null</code> (old TokenStream API).\n   * <p/>\n   * This method can be used to perform any end-of-stream operations, such as setting the final\n   * offset of a stream. The final offset of a stream might differ from the offset of the last token\n   * eg in case one or more whitespaces followed after the last token, but a {@link WhitespaceTokenizer}\n   * was used.\n   * \n   * @throws IOException\n   */\n  public void end() throws IOException {\n    // do nothing by default\n  }\n\n","sourceOld":"  /**\n   * This method is called by the consumer after the last token has been consumed, \n   * i.e. after {@link #incrementToken()} returned <code>false</code> (using the new TokenStream API)\n   * or after {@link #next(Token)} or {@link #next()} returned <code>null</code> (old TokenStream API).\n   * <p/>\n   * This method can be used to perform any end-of-stream operations, such as setting the final\n   * offset of a stream. The final offset of a stream might differ from the offset of the last token\n   * e.g. in case one or more whitespaces followed after the last token, but a {@link WhitespaceTokenizer}\n   * was used.\n   * \n   * @throws IOException\n   */\n  public void end() throws IOException {\n    // do nothing by default\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"39c72a0a1f317a4165b759c7842b5d73d7858d1d","date":1251209760,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/TokenStream#end().mjava","pathOld":"src/java/org/apache/lucene/analysis/TokenStream#end().mjava","sourceNew":"  /**\n   * This method is called by the consumer after the last token has been\n   * consumed, eg after {@link #incrementToken()} returned <code>false</code>\n   * (using the new {@link TokenStream} API) or after {@link #next(Token)} or\n   * {@link #next()} returned <code>null</code> (old {@link TokenStream} API).\n   * <p/>\n   * This method can be used to perform any end-of-stream operations, such as\n   * setting the final offset of a stream. The final offset of a stream might\n   * differ from the offset of the last token eg in case one or more whitespaces\n   * followed after the last token, but a {@link WhitespaceTokenizer} was used.\n   * \n   * @throws IOException\n   */\n  public void end() throws IOException {\n    // do nothing by default\n  }\n\n","sourceOld":"  /**\n   * This method is called by the consumer after the last token has been consumed, \n   * ie after {@link #incrementToken()} returned <code>false</code> (using the new TokenStream API)\n   * or after {@link #next(Token)} or {@link #next()} returned <code>null</code> (old TokenStream API).\n   * <p/>\n   * This method can be used to perform any end-of-stream operations, such as setting the final\n   * offset of a stream. The final offset of a stream might differ from the offset of the last token\n   * eg in case one or more whitespaces followed after the last token, but a {@link WhitespaceTokenizer}\n   * was used.\n   * \n   * @throws IOException\n   */\n  public void end() throws IOException {\n    // do nothing by default\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8b494acb55b671ca43504fbe9f6120ae44819ecb","date":1251652238,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/TokenStream#end().mjava","pathOld":"src/java/org/apache/lucene/analysis/TokenStream#end().mjava","sourceNew":"  /**\n   * This method is called by the consumer after the last token has been\n   * consumed, after {@link #incrementToken()} returned <code>false</code>\n   * (using the new <code>TokenStream</code> API). Streams implementing the old API\n   * should upgrade to use this feature.\n   * <p/>\n   * This method can be used to perform any end-of-stream operations, such as\n   * setting the final offset of a stream. The final offset of a stream might\n   * differ from the offset of the last token eg in case one or more whitespaces\n   * followed after the last token, but a {@link WhitespaceTokenizer} was used.\n   * \n   * @throws IOException\n   */\n  public void end() throws IOException {\n    // do nothing by default\n  }\n\n","sourceOld":"  /**\n   * This method is called by the consumer after the last token has been\n   * consumed, eg after {@link #incrementToken()} returned <code>false</code>\n   * (using the new {@link TokenStream} API) or after {@link #next(Token)} or\n   * {@link #next()} returned <code>null</code> (old {@link TokenStream} API).\n   * <p/>\n   * This method can be used to perform any end-of-stream operations, such as\n   * setting the final offset of a stream. The final offset of a stream might\n   * differ from the offset of the last token eg in case one or more whitespaces\n   * followed after the last token, but a {@link WhitespaceTokenizer} was used.\n   * \n   * @throws IOException\n   */\n  public void end() throws IOException {\n    // do nothing by default\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":4,"author":"Dawid Weiss","isMerge":false,"pathNew":"/dev/null","pathOld":"src/java/org/apache/lucene/analysis/TokenStream#end().mjava","sourceNew":null,"sourceOld":"  /**\n   * This method is called by the consumer after the last token has been\n   * consumed, after {@link #incrementToken()} returned <code>false</code>\n   * (using the new <code>TokenStream</code> API). Streams implementing the old API\n   * should upgrade to use this feature.\n   * <p/>\n   * This method can be used to perform any end-of-stream operations, such as\n   * setting the final offset of a stream. The final offset of a stream might\n   * differ from the offset of the last token eg in case one or more whitespaces\n   * followed after the last token, but a {@link WhitespaceTokenizer} was used.\n   * \n   * @throws IOException\n   */\n  public void end() throws IOException {\n    // do nothing by default\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"457c790b0d3d5883da64fb842ea54813004bb796":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f4993710af1ffe1511739260d41658f3cfba23e5":["457c790b0d3d5883da64fb842ea54813004bb796"],"8b494acb55b671ca43504fbe9f6120ae44819ecb":["39c72a0a1f317a4165b759c7842b5d73d7858d1d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["8b494acb55b671ca43504fbe9f6120ae44819ecb"],"39c72a0a1f317a4165b759c7842b5d73d7858d1d":["f4993710af1ffe1511739260d41658f3cfba23e5"]},"commit2Childs":{"457c790b0d3d5883da64fb842ea54813004bb796":["f4993710af1ffe1511739260d41658f3cfba23e5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["457c790b0d3d5883da64fb842ea54813004bb796"],"f4993710af1ffe1511739260d41658f3cfba23e5":["39c72a0a1f317a4165b759c7842b5d73d7858d1d"],"8b494acb55b671ca43504fbe9f6120ae44819ecb":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"39c72a0a1f317a4165b759c7842b5d73d7858d1d":["8b494acb55b671ca43504fbe9f6120ae44819ecb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}