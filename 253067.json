{"path":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#setUp().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#setUp().mjava","pathOld":"src/test/org/apache/lucene/util/LuceneTestCase#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    \n    savedUncaughtExceptionHandler = Thread.getDefaultUncaughtExceptionHandler();\n    Thread.setDefaultUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler() {\n      public void uncaughtException(Thread t, Throwable e) {\n        uncaughtExceptions.add(new UncaughtExceptionEntry(t, e));\n        if (savedUncaughtExceptionHandler != null)\n          savedUncaughtExceptionHandler.uncaughtException(t, e);\n      }\n    });\n    \n    ConcurrentMergeScheduler.setTestMode();\n    savedBoolMaxClauseCount = BooleanQuery.getMaxClauseCount();\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    \n    savedUncaughtExceptionHandler = Thread.getDefaultUncaughtExceptionHandler();\n    Thread.setDefaultUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler() {\n      public void uncaughtException(Thread t, Throwable e) {\n        uncaughtExceptions.add(new UncaughtExceptionEntry(t, e));\n        if (savedUncaughtExceptionHandler != null)\n          savedUncaughtExceptionHandler.uncaughtException(t, e);\n      }\n    });\n    \n    ConcurrentMergeScheduler.setTestMode();\n    savedBoolMaxClauseCount = BooleanQuery.getMaxClauseCount();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"37087ea13c0fde1ce1a3b5579f60f827414045a9","date":1279206637,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    assertFalse(\"ensure your tearDown() calls super.tearDown()!!!\", setup);\n    setup = true;\n    savedUncaughtExceptionHandler = Thread.getDefaultUncaughtExceptionHandler();\n    Thread.setDefaultUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler() {\n      public void uncaughtException(Thread t, Throwable e) {\n        uncaughtExceptions.add(new UncaughtExceptionEntry(t, e));\n        if (savedUncaughtExceptionHandler != null)\n          savedUncaughtExceptionHandler.uncaughtException(t, e);\n      }\n    });\n    \n    ConcurrentMergeScheduler.setTestMode();\n    savedBoolMaxClauseCount = BooleanQuery.getMaxClauseCount();\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    \n    savedUncaughtExceptionHandler = Thread.getDefaultUncaughtExceptionHandler();\n    Thread.setDefaultUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler() {\n      public void uncaughtException(Thread t, Throwable e) {\n        uncaughtExceptions.add(new UncaughtExceptionEntry(t, e));\n        if (savedUncaughtExceptionHandler != null)\n          savedUncaughtExceptionHandler.uncaughtException(t, e);\n      }\n    });\n    \n    ConcurrentMergeScheduler.setTestMode();\n    savedBoolMaxClauseCount = BooleanQuery.getMaxClauseCount();\n  }\n\n","bugFix":null,"bugIntro":["5f0dc13f9e59664be282b46015a020c945dc2a48","5f0dc13f9e59664be282b46015a020c945dc2a48","5f0dc13f9e59664be282b46015a020c945dc2a48"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5f4e87790277826a2aea119328600dfb07761f32","date":1279827275,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    assertFalse(\"ensure your tearDown() calls super.tearDown()!!!\", setup);\n    setup = true;\n    savedUncaughtExceptionHandler = Thread.getDefaultUncaughtExceptionHandler();\n    Thread.setDefaultUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler() {\n      public void uncaughtException(Thread t, Throwable e) {\n        uncaughtExceptions.add(new UncaughtExceptionEntry(t, e));\n        if (savedUncaughtExceptionHandler != null)\n          savedUncaughtExceptionHandler.uncaughtException(t, e);\n      }\n    });\n    \n    ConcurrentMergeScheduler.setTestMode();\n    savedBoolMaxClauseCount = BooleanQuery.getMaxClauseCount();\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    \n    savedUncaughtExceptionHandler = Thread.getDefaultUncaughtExceptionHandler();\n    Thread.setDefaultUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler() {\n      public void uncaughtException(Thread t, Throwable e) {\n        uncaughtExceptions.add(new UncaughtExceptionEntry(t, e));\n        if (savedUncaughtExceptionHandler != null)\n          savedUncaughtExceptionHandler.uncaughtException(t, e);\n      }\n    });\n    \n    ConcurrentMergeScheduler.setTestMode();\n    savedBoolMaxClauseCount = BooleanQuery.getMaxClauseCount();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"163fe85a71d778fd2b7747f65ca27b54829e2e57","date":1279898785,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    assertFalse(\"ensure your tearDown() calls super.tearDown()!!!\", setup);\n    setup = true;\n    savedUncaughtExceptionHandler = Thread.getDefaultUncaughtExceptionHandler();\n    Thread.setDefaultUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler() {\n      public void uncaughtException(Thread t, Throwable e) {\n        uncaughtExceptions.add(new UncaughtExceptionEntry(t, e));\n        if (savedUncaughtExceptionHandler != null)\n          savedUncaughtExceptionHandler.uncaughtException(t, e);\n      }\n    });\n    \n    ConcurrentMergeScheduler.setTestMode();\n    savedBoolMaxClauseCount = BooleanQuery.getMaxClauseCount();\n    savedDefaultCodec = CodecProvider.getDefaultCodec();\n    CodecProvider.setDefaultCodec(_TestUtil.getTestCodec());\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    assertFalse(\"ensure your tearDown() calls super.tearDown()!!!\", setup);\n    setup = true;\n    savedUncaughtExceptionHandler = Thread.getDefaultUncaughtExceptionHandler();\n    Thread.setDefaultUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler() {\n      public void uncaughtException(Thread t, Throwable e) {\n        uncaughtExceptions.add(new UncaughtExceptionEntry(t, e));\n        if (savedUncaughtExceptionHandler != null)\n          savedUncaughtExceptionHandler.uncaughtException(t, e);\n      }\n    });\n    \n    ConcurrentMergeScheduler.setTestMode();\n    savedBoolMaxClauseCount = BooleanQuery.getMaxClauseCount();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"e35534ac782c9c9d1227a10245ab7729d9eef22f","date":1279904940,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    assertFalse(\"ensure your tearDown() calls super.tearDown()!!!\", setup);\n    setup = true;\n    savedUncaughtExceptionHandler = Thread.getDefaultUncaughtExceptionHandler();\n    Thread.setDefaultUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler() {\n      public void uncaughtException(Thread t, Throwable e) {\n        uncaughtExceptions.add(new UncaughtExceptionEntry(t, e));\n        if (savedUncaughtExceptionHandler != null)\n          savedUncaughtExceptionHandler.uncaughtException(t, e);\n      }\n    });\n    \n    ConcurrentMergeScheduler.setTestMode();\n    savedBoolMaxClauseCount = BooleanQuery.getMaxClauseCount();\n    savedDefaultCodec = CodecProvider.getDefaultCodec();\n    codec = _TestUtil.getTestCodec();\n    //nocommit\n    if (codec.equals(\"PreFlex\")) {\n        CodecProvider.getDefault().register(new PreFlexRWCodec());\n    } \n    CodecProvider.setDefaultCodec(codec);\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    assertFalse(\"ensure your tearDown() calls super.tearDown()!!!\", setup);\n    setup = true;\n    savedUncaughtExceptionHandler = Thread.getDefaultUncaughtExceptionHandler();\n    Thread.setDefaultUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler() {\n      public void uncaughtException(Thread t, Throwable e) {\n        uncaughtExceptions.add(new UncaughtExceptionEntry(t, e));\n        if (savedUncaughtExceptionHandler != null)\n          savedUncaughtExceptionHandler.uncaughtException(t, e);\n      }\n    });\n    \n    ConcurrentMergeScheduler.setTestMode();\n    savedBoolMaxClauseCount = BooleanQuery.getMaxClauseCount();\n    savedDefaultCodec = CodecProvider.getDefaultCodec();\n    CodecProvider.setDefaultCodec(_TestUtil.getTestCodec());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"236e69f7c6c636bfd65b7a9031c9e6fb15b508ec","date":1279906406,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    assertFalse(\"ensure your tearDown() calls super.tearDown()!!!\", setup);\n    setup = true;\n    savedUncaughtExceptionHandler = Thread.getDefaultUncaughtExceptionHandler();\n    Thread.setDefaultUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler() {\n      public void uncaughtException(Thread t, Throwable e) {\n        uncaughtExceptions.add(new UncaughtExceptionEntry(t, e));\n        if (savedUncaughtExceptionHandler != null)\n          savedUncaughtExceptionHandler.uncaughtException(t, e);\n      }\n    });\n    \n    ConcurrentMergeScheduler.setTestMode();\n    savedBoolMaxClauseCount = BooleanQuery.getMaxClauseCount();\n    savedDefaultCodec = CodecProvider.getDefaultCodec();\n    codec = _TestUtil.getTestCodec();\n    if (codec.equals(\"random\"))\n      codec = CodecProvider.CORE_CODECS[seedRnd.nextInt(CodecProvider.CORE_CODECS.length)];\n    //nocommit\n    if (codec.equals(\"PreFlex\")) {\n        CodecProvider.getDefault().register(new PreFlexRWCodec());\n    } \n    CodecProvider.setDefaultCodec(codec);\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    assertFalse(\"ensure your tearDown() calls super.tearDown()!!!\", setup);\n    setup = true;\n    savedUncaughtExceptionHandler = Thread.getDefaultUncaughtExceptionHandler();\n    Thread.setDefaultUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler() {\n      public void uncaughtException(Thread t, Throwable e) {\n        uncaughtExceptions.add(new UncaughtExceptionEntry(t, e));\n        if (savedUncaughtExceptionHandler != null)\n          savedUncaughtExceptionHandler.uncaughtException(t, e);\n      }\n    });\n    \n    ConcurrentMergeScheduler.setTestMode();\n    savedBoolMaxClauseCount = BooleanQuery.getMaxClauseCount();\n    savedDefaultCodec = CodecProvider.getDefaultCodec();\n    codec = _TestUtil.getTestCodec();\n    //nocommit\n    if (codec.equals(\"PreFlex\")) {\n        CodecProvider.getDefault().register(new PreFlexRWCodec());\n    } \n    CodecProvider.setDefaultCodec(codec);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"24b91b08ba3110a0904b8ba9803276bf9a9b5f6d","date":1279972526,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    assertFalse(\"ensure your tearDown() calls super.tearDown()!!!\", setup);\n    setup = true;\n    savedUncaughtExceptionHandler = Thread.getDefaultUncaughtExceptionHandler();\n    Thread.setDefaultUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler() {\n      public void uncaughtException(Thread t, Throwable e) {\n        uncaughtExceptions.add(new UncaughtExceptionEntry(t, e));\n        if (savedUncaughtExceptionHandler != null)\n          savedUncaughtExceptionHandler.uncaughtException(t, e);\n      }\n    });\n    \n    ConcurrentMergeScheduler.setTestMode();\n    savedBoolMaxClauseCount = BooleanQuery.getMaxClauseCount();\n    savedDefaultCodec = CodecProvider.getDefaultCodec();\n\n    codec = _TestUtil.getTestCodec();\n    if (codec.equals(\"random\"))\n      codec = CodecProvider.CORE_CODECS[seedRnd.nextInt(CodecProvider.CORE_CODECS.length)];\n\n    // If we're running w/ PreFlex codec we must swap in the\n    // test-only PreFlexRW codec (since core PreFlex can\n    // only read segments):\n    if (codec.equals(\"PreFlex\")) {\n      CodecProvider.getDefault().register(new PreFlexRWCodec(null));\n    } \n    CodecProvider.setDefaultCodec(codec);\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    assertFalse(\"ensure your tearDown() calls super.tearDown()!!!\", setup);\n    setup = true;\n    savedUncaughtExceptionHandler = Thread.getDefaultUncaughtExceptionHandler();\n    Thread.setDefaultUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler() {\n      public void uncaughtException(Thread t, Throwable e) {\n        uncaughtExceptions.add(new UncaughtExceptionEntry(t, e));\n        if (savedUncaughtExceptionHandler != null)\n          savedUncaughtExceptionHandler.uncaughtException(t, e);\n      }\n    });\n    \n    ConcurrentMergeScheduler.setTestMode();\n    savedBoolMaxClauseCount = BooleanQuery.getMaxClauseCount();\n    savedDefaultCodec = CodecProvider.getDefaultCodec();\n    codec = _TestUtil.getTestCodec();\n    if (codec.equals(\"random\"))\n      codec = CodecProvider.CORE_CODECS[seedRnd.nextInt(CodecProvider.CORE_CODECS.length)];\n    //nocommit\n    if (codec.equals(\"PreFlex\")) {\n        CodecProvider.getDefault().register(new PreFlexRWCodec());\n    } \n    CodecProvider.setDefaultCodec(codec);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"399a364d374f2132b6d9ff9fd7f997a9f2ef734f","date":1279978822,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    assertFalse(\"ensure your tearDown() calls super.tearDown()!!!\", setup);\n    setup = true;\n    savedUncaughtExceptionHandler = Thread.getDefaultUncaughtExceptionHandler();\n    Thread.setDefaultUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler() {\n      public void uncaughtException(Thread t, Throwable e) {\n        uncaughtExceptions.add(new UncaughtExceptionEntry(t, e));\n        if (savedUncaughtExceptionHandler != null)\n          savedUncaughtExceptionHandler.uncaughtException(t, e);\n      }\n    });\n    \n    ConcurrentMergeScheduler.setTestMode();\n    savedBoolMaxClauseCount = BooleanQuery.getMaxClauseCount();\n    savedDefaultCodec = CodecProvider.getDefaultCodec();\n\n    codec = _TestUtil.getTestCodec();\n    if (codec.equals(\"random\"))\n      codec = CodecProvider.CORE_CODECS[seedRnd.nextInt(CodecProvider.CORE_CODECS.length)];\n\n    // If we're running w/ PreFlex codec we must swap in the\n    // test-only PreFlexRW codec (since core PreFlex can\n    // only read segments):\n    if (codec.equals(\"PreFlex\")) {\n      CodecProvider.getDefault().register(new PreFlexRWCodec());\n    } \n    CodecProvider.setDefaultCodec(codec);\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    assertFalse(\"ensure your tearDown() calls super.tearDown()!!!\", setup);\n    setup = true;\n    savedUncaughtExceptionHandler = Thread.getDefaultUncaughtExceptionHandler();\n    Thread.setDefaultUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler() {\n      public void uncaughtException(Thread t, Throwable e) {\n        uncaughtExceptions.add(new UncaughtExceptionEntry(t, e));\n        if (savedUncaughtExceptionHandler != null)\n          savedUncaughtExceptionHandler.uncaughtException(t, e);\n      }\n    });\n    \n    ConcurrentMergeScheduler.setTestMode();\n    savedBoolMaxClauseCount = BooleanQuery.getMaxClauseCount();\n    savedDefaultCodec = CodecProvider.getDefaultCodec();\n\n    codec = _TestUtil.getTestCodec();\n    if (codec.equals(\"random\"))\n      codec = CodecProvider.CORE_CODECS[seedRnd.nextInt(CodecProvider.CORE_CODECS.length)];\n\n    // If we're running w/ PreFlex codec we must swap in the\n    // test-only PreFlexRW codec (since core PreFlex can\n    // only read segments):\n    if (codec.equals(\"PreFlex\")) {\n      CodecProvider.getDefault().register(new PreFlexRWCodec(null));\n    } \n    CodecProvider.setDefaultCodec(codec);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c9f6bb0c3d7b1c1dd8aeab43a34a89f050069e97","date":1280158618,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    assertFalse(\"ensure your tearDown() calls super.tearDown()!!!\", setup);\n    setup = true;\n    savedUncaughtExceptionHandler = Thread.getDefaultUncaughtExceptionHandler();\n    Thread.setDefaultUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler() {\n      public void uncaughtException(Thread t, Throwable e) {\n        uncaughtExceptions.add(new UncaughtExceptionEntry(t, e));\n        if (savedUncaughtExceptionHandler != null)\n          savedUncaughtExceptionHandler.uncaughtException(t, e);\n      }\n    });\n    \n    ConcurrentMergeScheduler.setTestMode();\n    savedBoolMaxClauseCount = BooleanQuery.getMaxClauseCount();\n    savedDefaultCodec = CodecProvider.getDefaultCodec();\n\n    codec = _TestUtil.getTestCodec();\n    if (codec.equals(\"random\"))\n      codec = CodecProvider.CORE_CODECS[seedRnd.nextInt(CodecProvider.CORE_CODECS.length)];\n\n    // If we're running w/ PreFlex codec we must swap in the\n    // test-only PreFlexRW codec (since core PreFlex can\n    // only read segments):\n    if (codec.equals(\"PreFlex\")) {\n      preFlexSav = LuceneTestCaseJ4.installPreFlexRW();\n    } \n    CodecProvider.setDefaultCodec(codec);\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    assertFalse(\"ensure your tearDown() calls super.tearDown()!!!\", setup);\n    setup = true;\n    savedUncaughtExceptionHandler = Thread.getDefaultUncaughtExceptionHandler();\n    Thread.setDefaultUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler() {\n      public void uncaughtException(Thread t, Throwable e) {\n        uncaughtExceptions.add(new UncaughtExceptionEntry(t, e));\n        if (savedUncaughtExceptionHandler != null)\n          savedUncaughtExceptionHandler.uncaughtException(t, e);\n      }\n    });\n    \n    ConcurrentMergeScheduler.setTestMode();\n    savedBoolMaxClauseCount = BooleanQuery.getMaxClauseCount();\n    savedDefaultCodec = CodecProvider.getDefaultCodec();\n\n    codec = _TestUtil.getTestCodec();\n    if (codec.equals(\"random\"))\n      codec = CodecProvider.CORE_CODECS[seedRnd.nextInt(CodecProvider.CORE_CODECS.length)];\n\n    // If we're running w/ PreFlex codec we must swap in the\n    // test-only PreFlexRW codec (since core PreFlex can\n    // only read segments):\n    if (codec.equals(\"PreFlex\")) {\n      CodecProvider.getDefault().register(new PreFlexRWCodec());\n    } \n    CodecProvider.setDefaultCodec(codec);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4b103252dee6afa1b6d7a622c773d178788eb85a","date":1280180143,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    assertFalse(\"ensure your tearDown() calls super.tearDown()!!!\", setup);\n    setup = true;\n    savedUncaughtExceptionHandler = Thread.getDefaultUncaughtExceptionHandler();\n    Thread.setDefaultUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler() {\n      public void uncaughtException(Thread t, Throwable e) {\n        uncaughtExceptions.add(new UncaughtExceptionEntry(t, e));\n        if (savedUncaughtExceptionHandler != null)\n          savedUncaughtExceptionHandler.uncaughtException(t, e);\n      }\n    });\n    \n    ConcurrentMergeScheduler.setTestMode();\n    savedBoolMaxClauseCount = BooleanQuery.getMaxClauseCount();\n    savedDefaultCodec = CodecProvider.getDefaultCodec();\n\n    codec = _TestUtil.getTestCodec();\n    if (codec.equals(\"random\"))\n      codec = CodecProvider.CORE_CODECS[seedRnd.nextInt(CodecProvider.CORE_CODECS.length)];\n\n    // If we're running w/ PreFlex codec we must swap in the\n    // test-only PreFlexRW codec (since core PreFlex can\n    // only read segments):\n    if (codec.equals(\"PreFlex\")) {\n      preFlexSav = LuceneTestCaseJ4.installPreFlexRW();\n    } \n    CodecProvider.setDefaultCodec(codec);\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    assertFalse(\"ensure your tearDown() calls super.tearDown()!!!\", setup);\n    setup = true;\n    savedUncaughtExceptionHandler = Thread.getDefaultUncaughtExceptionHandler();\n    Thread.setDefaultUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler() {\n      public void uncaughtException(Thread t, Throwable e) {\n        uncaughtExceptions.add(new UncaughtExceptionEntry(t, e));\n        if (savedUncaughtExceptionHandler != null)\n          savedUncaughtExceptionHandler.uncaughtException(t, e);\n      }\n    });\n    \n    ConcurrentMergeScheduler.setTestMode();\n    savedBoolMaxClauseCount = BooleanQuery.getMaxClauseCount();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a0e45742e10e8e3b98e854babe6dbb07a4197b71","date":1280230285,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    assertFalse(\"ensure your tearDown() calls super.tearDown()!!!\", setup);\n    setup = true;\n    savedUncaughtExceptionHandler = Thread.getDefaultUncaughtExceptionHandler();\n    Thread.setDefaultUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler() {\n      public void uncaughtException(Thread t, Throwable e) {\n        uncaughtExceptions.add(new UncaughtExceptionEntry(t, e));\n        if (savedUncaughtExceptionHandler != null)\n          savedUncaughtExceptionHandler.uncaughtException(t, e);\n      }\n    });\n    \n    ConcurrentMergeScheduler.setTestMode();\n    savedBoolMaxClauseCount = BooleanQuery.getMaxClauseCount();\n    savedDefaultCodec = CodecProvider.getDefaultCodec();\n\n    codec = TEST_CODEC;\n    if (codec.equals(\"random\"))\n      codec = CodecProvider.CORE_CODECS[seedRnd.nextInt(CodecProvider.CORE_CODECS.length)];\n\n    // If we're running w/ PreFlex codec we must swap in the\n    // test-only PreFlexRW codec (since core PreFlex can\n    // only read segments):\n    if (codec.equals(\"PreFlex\")) {\n      preFlexSav = LuceneTestCaseJ4.installPreFlexRW();\n    } \n    CodecProvider.setDefaultCodec(codec);\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    assertFalse(\"ensure your tearDown() calls super.tearDown()!!!\", setup);\n    setup = true;\n    savedUncaughtExceptionHandler = Thread.getDefaultUncaughtExceptionHandler();\n    Thread.setDefaultUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler() {\n      public void uncaughtException(Thread t, Throwable e) {\n        uncaughtExceptions.add(new UncaughtExceptionEntry(t, e));\n        if (savedUncaughtExceptionHandler != null)\n          savedUncaughtExceptionHandler.uncaughtException(t, e);\n      }\n    });\n    \n    ConcurrentMergeScheduler.setTestMode();\n    savedBoolMaxClauseCount = BooleanQuery.getMaxClauseCount();\n    savedDefaultCodec = CodecProvider.getDefaultCodec();\n\n    codec = _TestUtil.getTestCodec();\n    if (codec.equals(\"random\"))\n      codec = CodecProvider.CORE_CODECS[seedRnd.nextInt(CodecProvider.CORE_CODECS.length)];\n\n    // If we're running w/ PreFlex codec we must swap in the\n    // test-only PreFlexRW codec (since core PreFlex can\n    // only read segments):\n    if (codec.equals(\"PreFlex\")) {\n      preFlexSav = LuceneTestCaseJ4.installPreFlexRW();\n    } \n    CodecProvider.setDefaultCodec(codec);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3242a09f703274d3b9283f2064a1a33064b53a1b","date":1280263474,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    assertFalse(\"ensure your tearDown() calls super.tearDown()!!!\", setup);\n    setup = true;\n    savedUncaughtExceptionHandler = Thread.getDefaultUncaughtExceptionHandler();\n    Thread.setDefaultUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler() {\n      public void uncaughtException(Thread t, Throwable e) {\n        uncaughtExceptions.add(new UncaughtExceptionEntry(t, e));\n        if (savedUncaughtExceptionHandler != null)\n          savedUncaughtExceptionHandler.uncaughtException(t, e);\n      }\n    });\n    \n    ConcurrentMergeScheduler.setTestMode();\n    savedBoolMaxClauseCount = BooleanQuery.getMaxClauseCount();\n    savedDefaultCodec = CodecProvider.getDefaultCodec();\n\n    codec = TEST_CODEC;\n    if (codec.equals(\"random\"))\n      codec = CodecProvider.CORE_CODECS[seedRnd.nextInt(CodecProvider.CORE_CODECS.length)];\n\n    // If we're running w/ PreFlex codec we must swap in the\n    // test-only PreFlexRW codec (since core PreFlex can\n    // only read segments):\n    if (codec.equals(\"PreFlex\")) {\n      preFlexSav = LuceneTestCaseJ4.installPreFlexRW();\n    } \n    CodecProvider.setDefaultCodec(codec);\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    assertFalse(\"ensure your tearDown() calls super.tearDown()!!!\", setup);\n    setup = true;\n    savedUncaughtExceptionHandler = Thread.getDefaultUncaughtExceptionHandler();\n    Thread.setDefaultUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler() {\n      public void uncaughtException(Thread t, Throwable e) {\n        uncaughtExceptions.add(new UncaughtExceptionEntry(t, e));\n        if (savedUncaughtExceptionHandler != null)\n          savedUncaughtExceptionHandler.uncaughtException(t, e);\n      }\n    });\n    \n    ConcurrentMergeScheduler.setTestMode();\n    savedBoolMaxClauseCount = BooleanQuery.getMaxClauseCount();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"108e81824177a1a9f2507addadb8894e1cdf9afc","date":1280934266,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    assertFalse(\"ensure your tearDown() calls super.tearDown()!!!\", setup);\n    setup = true;\n    savedUncaughtExceptionHandler = Thread.getDefaultUncaughtExceptionHandler();\n    Thread.setDefaultUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler() {\n      public void uncaughtException(Thread t, Throwable e) {\n        uncaughtExceptions.add(new UncaughtExceptionEntry(t, e));\n        if (savedUncaughtExceptionHandler != null)\n          savedUncaughtExceptionHandler.uncaughtException(t, e);\n      }\n    });\n    \n    ConcurrentMergeScheduler.setTestMode();\n    savedBoolMaxClauseCount = BooleanQuery.getMaxClauseCount();\n    codec = LuceneTestCaseJ4.installTestCodecs();\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    assertFalse(\"ensure your tearDown() calls super.tearDown()!!!\", setup);\n    setup = true;\n    savedUncaughtExceptionHandler = Thread.getDefaultUncaughtExceptionHandler();\n    Thread.setDefaultUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler() {\n      public void uncaughtException(Thread t, Throwable e) {\n        uncaughtExceptions.add(new UncaughtExceptionEntry(t, e));\n        if (savedUncaughtExceptionHandler != null)\n          savedUncaughtExceptionHandler.uncaughtException(t, e);\n      }\n    });\n    \n    ConcurrentMergeScheduler.setTestMode();\n    savedBoolMaxClauseCount = BooleanQuery.getMaxClauseCount();\n    savedDefaultCodec = CodecProvider.getDefaultCodec();\n\n    codec = TEST_CODEC;\n    if (codec.equals(\"random\"))\n      codec = CodecProvider.CORE_CODECS[seedRnd.nextInt(CodecProvider.CORE_CODECS.length)];\n\n    // If we're running w/ PreFlex codec we must swap in the\n    // test-only PreFlexRW codec (since core PreFlex can\n    // only read segments):\n    if (codec.equals(\"PreFlex\")) {\n      preFlexSav = LuceneTestCaseJ4.installPreFlexRW();\n    } \n    CodecProvider.setDefaultCodec(codec);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"6e49d7950c2623fba7129a12bfc1b773bdd38f1b","date":1281317143,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    assertFalse(\"ensure your tearDown() calls super.tearDown()!!!\", setup);\n    setup = true;\n    savedUncaughtExceptionHandler = Thread.getDefaultUncaughtExceptionHandler();\n    Thread.setDefaultUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler() {\n      public void uncaughtException(Thread t, Throwable e) {\n        uncaughtExceptions.add(new UncaughtExceptionEntry(t, e));\n        if (savedUncaughtExceptionHandler != null)\n          savedUncaughtExceptionHandler.uncaughtException(t, e);\n      }\n    });\n    \n    ConcurrentMergeScheduler.setTestMode();\n    savedBoolMaxClauseCount = BooleanQuery.getMaxClauseCount();\n    codec = LuceneTestCaseJ4.installTestCodecs();\n    savedLocale = Locale.getDefault();\n    locale = TEST_LOCALE.equals(\"random\") \n      ? LuceneTestCaseJ4.randomLocale(seedRnd) \n      : LuceneTestCaseJ4.localeForName(TEST_LOCALE);\n    Locale.setDefault(locale);\n    savedTimeZone = TimeZone.getDefault();\n    timeZone = TEST_TIMEZONE.equals(\"random\")\n      ? LuceneTestCaseJ4.randomTimeZone(seedRnd)\n      : TimeZone.getTimeZone(TEST_TIMEZONE);\n    TimeZone.setDefault(timeZone);\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    assertFalse(\"ensure your tearDown() calls super.tearDown()!!!\", setup);\n    setup = true;\n    savedUncaughtExceptionHandler = Thread.getDefaultUncaughtExceptionHandler();\n    Thread.setDefaultUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler() {\n      public void uncaughtException(Thread t, Throwable e) {\n        uncaughtExceptions.add(new UncaughtExceptionEntry(t, e));\n        if (savedUncaughtExceptionHandler != null)\n          savedUncaughtExceptionHandler.uncaughtException(t, e);\n      }\n    });\n    \n    ConcurrentMergeScheduler.setTestMode();\n    savedBoolMaxClauseCount = BooleanQuery.getMaxClauseCount();\n    codec = LuceneTestCaseJ4.installTestCodecs();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c","date":1281646583,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    assertFalse(\"ensure your tearDown() calls super.tearDown()!!!\", setup);\n    setup = true;\n    stores = new IdentityHashMap<MockRAMDirectory,StackTraceElement[]>();\n    savedUncaughtExceptionHandler = Thread.getDefaultUncaughtExceptionHandler();\n    Thread.setDefaultUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler() {\n      public void uncaughtException(Thread t, Throwable e) {\n        uncaughtExceptions.add(new UncaughtExceptionEntry(t, e));\n        if (savedUncaughtExceptionHandler != null)\n          savedUncaughtExceptionHandler.uncaughtException(t, e);\n      }\n    });\n    \n    ConcurrentMergeScheduler.setTestMode();\n    savedBoolMaxClauseCount = BooleanQuery.getMaxClauseCount();\n    codec = LuceneTestCaseJ4.installTestCodecs();\n    savedLocale = Locale.getDefault();\n    locale = TEST_LOCALE.equals(\"random\") \n      ? LuceneTestCaseJ4.randomLocale(seedRnd) \n      : LuceneTestCaseJ4.localeForName(TEST_LOCALE);\n    Locale.setDefault(locale);\n    savedTimeZone = TimeZone.getDefault();\n    timeZone = TEST_TIMEZONE.equals(\"random\")\n      ? LuceneTestCaseJ4.randomTimeZone(seedRnd)\n      : TimeZone.getTimeZone(TEST_TIMEZONE);\n    TimeZone.setDefault(timeZone);\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    assertFalse(\"ensure your tearDown() calls super.tearDown()!!!\", setup);\n    setup = true;\n    savedUncaughtExceptionHandler = Thread.getDefaultUncaughtExceptionHandler();\n    Thread.setDefaultUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler() {\n      public void uncaughtException(Thread t, Throwable e) {\n        uncaughtExceptions.add(new UncaughtExceptionEntry(t, e));\n        if (savedUncaughtExceptionHandler != null)\n          savedUncaughtExceptionHandler.uncaughtException(t, e);\n      }\n    });\n    \n    ConcurrentMergeScheduler.setTestMode();\n    savedBoolMaxClauseCount = BooleanQuery.getMaxClauseCount();\n    codec = LuceneTestCaseJ4.installTestCodecs();\n    savedLocale = Locale.getDefault();\n    locale = TEST_LOCALE.equals(\"random\") \n      ? LuceneTestCaseJ4.randomLocale(seedRnd) \n      : LuceneTestCaseJ4.localeForName(TEST_LOCALE);\n    Locale.setDefault(locale);\n    savedTimeZone = TimeZone.getDefault();\n    timeZone = TEST_TIMEZONE.equals(\"random\")\n      ? LuceneTestCaseJ4.randomTimeZone(seedRnd)\n      : TimeZone.getTimeZone(TEST_TIMEZONE);\n    TimeZone.setDefault(timeZone);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a05409176bd65129d67a785ee70e881e238a9aef","date":1282582843,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    assertFalse(\"ensure your tearDown() calls super.tearDown()!!!\", setup);\n    setup = true;\n    stores = new IdentityHashMap<MockDirectoryWrapper,StackTraceElement[]>();\n    savedUncaughtExceptionHandler = Thread.getDefaultUncaughtExceptionHandler();\n    Thread.setDefaultUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler() {\n      public void uncaughtException(Thread t, Throwable e) {\n        uncaughtExceptions.add(new UncaughtExceptionEntry(t, e));\n        if (savedUncaughtExceptionHandler != null)\n          savedUncaughtExceptionHandler.uncaughtException(t, e);\n      }\n    });\n    \n    ConcurrentMergeScheduler.setTestMode();\n    savedBoolMaxClauseCount = BooleanQuery.getMaxClauseCount();\n    codec = LuceneTestCaseJ4.installTestCodecs();\n    savedLocale = Locale.getDefault();\n    locale = TEST_LOCALE.equals(\"random\") \n      ? LuceneTestCaseJ4.randomLocale(seedRnd) \n      : LuceneTestCaseJ4.localeForName(TEST_LOCALE);\n    Locale.setDefault(locale);\n    savedTimeZone = TimeZone.getDefault();\n    timeZone = TEST_TIMEZONE.equals(\"random\")\n      ? LuceneTestCaseJ4.randomTimeZone(seedRnd)\n      : TimeZone.getTimeZone(TEST_TIMEZONE);\n    TimeZone.setDefault(timeZone);\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    assertFalse(\"ensure your tearDown() calls super.tearDown()!!!\", setup);\n    setup = true;\n    stores = new IdentityHashMap<MockRAMDirectory,StackTraceElement[]>();\n    savedUncaughtExceptionHandler = Thread.getDefaultUncaughtExceptionHandler();\n    Thread.setDefaultUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler() {\n      public void uncaughtException(Thread t, Throwable e) {\n        uncaughtExceptions.add(new UncaughtExceptionEntry(t, e));\n        if (savedUncaughtExceptionHandler != null)\n          savedUncaughtExceptionHandler.uncaughtException(t, e);\n      }\n    });\n    \n    ConcurrentMergeScheduler.setTestMode();\n    savedBoolMaxClauseCount = BooleanQuery.getMaxClauseCount();\n    codec = LuceneTestCaseJ4.installTestCodecs();\n    savedLocale = Locale.getDefault();\n    locale = TEST_LOCALE.equals(\"random\") \n      ? LuceneTestCaseJ4.randomLocale(seedRnd) \n      : LuceneTestCaseJ4.localeForName(TEST_LOCALE);\n    Locale.setDefault(locale);\n    savedTimeZone = TimeZone.getDefault();\n    timeZone = TEST_TIMEZONE.equals(\"random\")\n      ? LuceneTestCaseJ4.randomTimeZone(seedRnd)\n      : TimeZone.getTimeZone(TEST_TIMEZONE);\n    TimeZone.setDefault(timeZone);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1f653cfcf159baeaafe5d01682a911e95bba4012","date":1284122058,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    assertFalse(\"ensure your tearDown() calls super.tearDown()!!!\", setup);\n    seed = Long.valueOf(TEST_SEED.equals(\"random\") ? seedRnd.nextLong() : Long.parseLong(TEST_SEED));\n    random = new Random(seed);\n    setup = true;\n    stores = new IdentityHashMap<MockDirectoryWrapper,StackTraceElement[]>();\n    savedUncaughtExceptionHandler = Thread.getDefaultUncaughtExceptionHandler();\n    Thread.setDefaultUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler() {\n      public void uncaughtException(Thread t, Throwable e) {\n        uncaughtExceptions.add(new UncaughtExceptionEntry(t, e));\n        if (savedUncaughtExceptionHandler != null)\n          savedUncaughtExceptionHandler.uncaughtException(t, e);\n      }\n    });\n    \n    ConcurrentMergeScheduler.setTestMode();\n    savedBoolMaxClauseCount = BooleanQuery.getMaxClauseCount();\n    codec = LuceneTestCaseJ4.installTestCodecs();\n    savedLocale = Locale.getDefault();\n    locale = TEST_LOCALE.equals(\"random\") \n      ? LuceneTestCaseJ4.randomLocale(seedRnd) \n      : LuceneTestCaseJ4.localeForName(TEST_LOCALE);\n    Locale.setDefault(locale);\n    savedTimeZone = TimeZone.getDefault();\n    timeZone = TEST_TIMEZONE.equals(\"random\")\n      ? LuceneTestCaseJ4.randomTimeZone(seedRnd)\n      : TimeZone.getTimeZone(TEST_TIMEZONE);\n    TimeZone.setDefault(timeZone);\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    assertFalse(\"ensure your tearDown() calls super.tearDown()!!!\", setup);\n    setup = true;\n    stores = new IdentityHashMap<MockDirectoryWrapper,StackTraceElement[]>();\n    savedUncaughtExceptionHandler = Thread.getDefaultUncaughtExceptionHandler();\n    Thread.setDefaultUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler() {\n      public void uncaughtException(Thread t, Throwable e) {\n        uncaughtExceptions.add(new UncaughtExceptionEntry(t, e));\n        if (savedUncaughtExceptionHandler != null)\n          savedUncaughtExceptionHandler.uncaughtException(t, e);\n      }\n    });\n    \n    ConcurrentMergeScheduler.setTestMode();\n    savedBoolMaxClauseCount = BooleanQuery.getMaxClauseCount();\n    codec = LuceneTestCaseJ4.installTestCodecs();\n    savedLocale = Locale.getDefault();\n    locale = TEST_LOCALE.equals(\"random\") \n      ? LuceneTestCaseJ4.randomLocale(seedRnd) \n      : LuceneTestCaseJ4.localeForName(TEST_LOCALE);\n    Locale.setDefault(locale);\n    savedTimeZone = TimeZone.getDefault();\n    timeZone = TEST_TIMEZONE.equals(\"random\")\n      ? LuceneTestCaseJ4.randomTimeZone(seedRnd)\n      : TimeZone.getTimeZone(TEST_TIMEZONE);\n    TimeZone.setDefault(timeZone);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"43b04c27924fe393e38e9f0986e32c634f261859","date":1284399440,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#setUp().mjava","sourceNew":"  @Before\n  public void setUp() throws Exception {\n    Assert.assertFalse(\"ensure your tearDown() calls super.tearDown()!!!\", setup);\n    setup = true;\n    seed = Long.valueOf(TEST_SEED.equals(\"random\") ? seedRnd.nextLong() : Long.parseLong(TEST_SEED));\n    random = new Random(seed);\n    savedUncaughtExceptionHandler = Thread.getDefaultUncaughtExceptionHandler();\n    Thread.setDefaultUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler() {\n      public void uncaughtException(Thread t, Throwable e) {\n        uncaughtExceptions.add(new UncaughtExceptionEntry(t, e));\n        if (savedUncaughtExceptionHandler != null)\n          savedUncaughtExceptionHandler.uncaughtException(t, e);\n      }\n    });\n    \n    ConcurrentMergeScheduler.setTestMode();\n    savedBoolMaxClauseCount = BooleanQuery.getMaxClauseCount();\n    seed = null;\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    assertFalse(\"ensure your tearDown() calls super.tearDown()!!!\", setup);\n    seed = Long.valueOf(TEST_SEED.equals(\"random\") ? seedRnd.nextLong() : Long.parseLong(TEST_SEED));\n    random = new Random(seed);\n    setup = true;\n    stores = new IdentityHashMap<MockDirectoryWrapper,StackTraceElement[]>();\n    savedUncaughtExceptionHandler = Thread.getDefaultUncaughtExceptionHandler();\n    Thread.setDefaultUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler() {\n      public void uncaughtException(Thread t, Throwable e) {\n        uncaughtExceptions.add(new UncaughtExceptionEntry(t, e));\n        if (savedUncaughtExceptionHandler != null)\n          savedUncaughtExceptionHandler.uncaughtException(t, e);\n      }\n    });\n    \n    ConcurrentMergeScheduler.setTestMode();\n    savedBoolMaxClauseCount = BooleanQuery.getMaxClauseCount();\n    codec = LuceneTestCaseJ4.installTestCodecs();\n    savedLocale = Locale.getDefault();\n    locale = TEST_LOCALE.equals(\"random\") \n      ? LuceneTestCaseJ4.randomLocale(seedRnd) \n      : LuceneTestCaseJ4.localeForName(TEST_LOCALE);\n    Locale.setDefault(locale);\n    savedTimeZone = TimeZone.getDefault();\n    timeZone = TEST_TIMEZONE.equals(\"random\")\n      ? LuceneTestCaseJ4.randomTimeZone(seedRnd)\n      : TimeZone.getTimeZone(TEST_TIMEZONE);\n    TimeZone.setDefault(timeZone);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5f9dba8ffba48fba97d7a90fd45f6da87ba55736","date":1285244347,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#setUp().mjava","sourceNew":"  @Before\n  public void setUp() throws Exception {\n    seed = \"random\".equals(TEST_SEED) ? seedRand.nextLong() : UUID.fromString(TEST_SEED).getLeastSignificantBits();\n    random.setSeed(seed);\n    Assert.assertFalse(\"ensure your tearDown() calls super.tearDown()!!!\", setup);\n    setup = true;\n    savedUncaughtExceptionHandler = Thread.getDefaultUncaughtExceptionHandler();\n    Thread.setDefaultUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler() {\n      public void uncaughtException(Thread t, Throwable e) {\n        uncaughtExceptions.add(new UncaughtExceptionEntry(t, e));\n        if (savedUncaughtExceptionHandler != null)\n          savedUncaughtExceptionHandler.uncaughtException(t, e);\n      }\n    });\n    \n    ConcurrentMergeScheduler.setTestMode();\n    savedBoolMaxClauseCount = BooleanQuery.getMaxClauseCount();\n  }\n\n","sourceOld":"  @Before\n  public void setUp() throws Exception {\n    Assert.assertFalse(\"ensure your tearDown() calls super.tearDown()!!!\", setup);\n    setup = true;\n    seed = Long.valueOf(TEST_SEED.equals(\"random\") ? seedRnd.nextLong() : Long.parseLong(TEST_SEED));\n    random = new Random(seed);\n    savedUncaughtExceptionHandler = Thread.getDefaultUncaughtExceptionHandler();\n    Thread.setDefaultUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler() {\n      public void uncaughtException(Thread t, Throwable e) {\n        uncaughtExceptions.add(new UncaughtExceptionEntry(t, e));\n        if (savedUncaughtExceptionHandler != null)\n          savedUncaughtExceptionHandler.uncaughtException(t, e);\n      }\n    });\n    \n    ConcurrentMergeScheduler.setTestMode();\n    savedBoolMaxClauseCount = BooleanQuery.getMaxClauseCount();\n    seed = null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"8d47f68d60cbff5718136b945ba8c55982342f38","date":1285583375,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#setUp().mjava","sourceNew":"  @Before\n  public void setUp() throws Exception {\n    seed = \"random\".equals(TEST_SEED) ? seedRand.nextLong() : TwoLongs.fromString(TEST_SEED).l2;\n    random.setSeed(seed);\n    Assert.assertFalse(\"ensure your tearDown() calls super.tearDown()!!!\", setup);\n    setup = true;\n    savedUncaughtExceptionHandler = Thread.getDefaultUncaughtExceptionHandler();\n    Thread.setDefaultUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler() {\n      public void uncaughtException(Thread t, Throwable e) {\n        uncaughtExceptions.add(new UncaughtExceptionEntry(t, e));\n        if (savedUncaughtExceptionHandler != null)\n          savedUncaughtExceptionHandler.uncaughtException(t, e);\n      }\n    });\n    \n    ConcurrentMergeScheduler.setTestMode();\n    savedBoolMaxClauseCount = BooleanQuery.getMaxClauseCount();\n  }\n\n","sourceOld":"  @Before\n  public void setUp() throws Exception {\n    seed = \"random\".equals(TEST_SEED) ? seedRand.nextLong() : UUID.fromString(TEST_SEED).getLeastSignificantBits();\n    random.setSeed(seed);\n    Assert.assertFalse(\"ensure your tearDown() calls super.tearDown()!!!\", setup);\n    setup = true;\n    savedUncaughtExceptionHandler = Thread.getDefaultUncaughtExceptionHandler();\n    Thread.setDefaultUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler() {\n      public void uncaughtException(Thread t, Throwable e) {\n        uncaughtExceptions.add(new UncaughtExceptionEntry(t, e));\n        if (savedUncaughtExceptionHandler != null)\n          savedUncaughtExceptionHandler.uncaughtException(t, e);\n      }\n    });\n    \n    ConcurrentMergeScheduler.setTestMode();\n    savedBoolMaxClauseCount = BooleanQuery.getMaxClauseCount();\n  }\n\n","bugFix":null,"bugIntro":["b88f145033cba453c8f65cc86eb444c625ee86c0","b88f145033cba453c8f65cc86eb444c625ee86c0","b88f145033cba453c8f65cc86eb444c625ee86c0"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"e42b97f2dcf8cca9bf6437e7d0dd3e8711f7413f","date":1287243791,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#setUp().mjava","sourceNew":"  @Before\n  public void setUp() throws Exception {\n    seed = \"random\".equals(TEST_SEED) ? seedRand.nextLong() : TwoLongs.fromString(TEST_SEED).l2;\n    random.setSeed(seed);\n    assertFalse(\"ensure your tearDown() calls super.tearDown()!!!\", setup);\n    setup = true;\n    savedUncaughtExceptionHandler = Thread.getDefaultUncaughtExceptionHandler();\n    Thread.setDefaultUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler() {\n      public void uncaughtException(Thread t, Throwable e) {\n        uncaughtExceptions.add(new UncaughtExceptionEntry(t, e));\n        if (savedUncaughtExceptionHandler != null)\n          savedUncaughtExceptionHandler.uncaughtException(t, e);\n      }\n    });\n    \n    ConcurrentMergeScheduler.setTestMode();\n    savedBoolMaxClauseCount = BooleanQuery.getMaxClauseCount();\n  }\n\n","sourceOld":"  @Before\n  public void setUp() throws Exception {\n    seed = \"random\".equals(TEST_SEED) ? seedRand.nextLong() : TwoLongs.fromString(TEST_SEED).l2;\n    random.setSeed(seed);\n    Assert.assertFalse(\"ensure your tearDown() calls super.tearDown()!!!\", setup);\n    setup = true;\n    savedUncaughtExceptionHandler = Thread.getDefaultUncaughtExceptionHandler();\n    Thread.setDefaultUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler() {\n      public void uncaughtException(Thread t, Throwable e) {\n        uncaughtExceptions.add(new UncaughtExceptionEntry(t, e));\n        if (savedUncaughtExceptionHandler != null)\n          savedUncaughtExceptionHandler.uncaughtException(t, e);\n      }\n    });\n    \n    ConcurrentMergeScheduler.setTestMode();\n    savedBoolMaxClauseCount = BooleanQuery.getMaxClauseCount();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4ecea1664e8617d82eca3b8055a3c37cb4da8511","date":1287578668,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#setUp().mjava","sourceNew":"  @Before\n  public void setUp() throws Exception {\n    seed = \"random\".equals(TEST_SEED) ? seedRand.nextLong() : TwoLongs.fromString(TEST_SEED).l2;\n    random.setSeed(seed);\n    assertFalse(\"ensure your tearDown() calls super.tearDown()!!!\", setup);\n    setup = true;\n    savedUncaughtExceptionHandler = Thread.getDefaultUncaughtExceptionHandler();\n    Thread.setDefaultUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler() {\n      public void uncaughtException(Thread t, Throwable e) {\n        uncaughtExceptions.add(new UncaughtExceptionEntry(t, e));\n        if (savedUncaughtExceptionHandler != null)\n          savedUncaughtExceptionHandler.uncaughtException(t, e);\n      }\n    });\n    \n    ConcurrentMergeScheduler.setTestMode();\n    savedBoolMaxClauseCount = BooleanQuery.getMaxClauseCount();\n  }\n\n","sourceOld":"  @Before\n  public void setUp() throws Exception {\n    seed = \"random\".equals(TEST_SEED) ? seedRand.nextLong() : TwoLongs.fromString(TEST_SEED).l2;\n    random.setSeed(seed);\n    Assert.assertFalse(\"ensure your tearDown() calls super.tearDown()!!!\", setup);\n    setup = true;\n    savedUncaughtExceptionHandler = Thread.getDefaultUncaughtExceptionHandler();\n    Thread.setDefaultUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler() {\n      public void uncaughtException(Thread t, Throwable e) {\n        uncaughtExceptions.add(new UncaughtExceptionEntry(t, e));\n        if (savedUncaughtExceptionHandler != null)\n          savedUncaughtExceptionHandler.uncaughtException(t, e);\n      }\n    });\n    \n    ConcurrentMergeScheduler.setTestMode();\n    savedBoolMaxClauseCount = BooleanQuery.getMaxClauseCount();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7fc5a2665a7fa1b9450097ae658193a11ee4d02c","date":1292699695,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#setUp().mjava","sourceNew":"  @Before\n  public void setUp() throws Exception {\n    seed = \"random\".equals(TEST_SEED) ? seedRand.nextLong() : TwoLongs.fromString(TEST_SEED).l2;\n    random.setSeed(seed);\n    assertFalse(\"ensure your tearDown() calls super.tearDown()!!!\", setup);\n    setup = true;\n    savedUncaughtExceptionHandler = Thread.getDefaultUncaughtExceptionHandler();\n    Thread.setDefaultUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler() {\n      public void uncaughtException(Thread t, Throwable e) {\n        testsFailed = true;\n        uncaughtExceptions.add(new UncaughtExceptionEntry(t, e));\n        if (savedUncaughtExceptionHandler != null)\n          savedUncaughtExceptionHandler.uncaughtException(t, e);\n      }\n    });\n    \n    savedBoolMaxClauseCount = BooleanQuery.getMaxClauseCount();\n  }\n\n","sourceOld":"  @Before\n  public void setUp() throws Exception {\n    seed = \"random\".equals(TEST_SEED) ? seedRand.nextLong() : TwoLongs.fromString(TEST_SEED).l2;\n    random.setSeed(seed);\n    assertFalse(\"ensure your tearDown() calls super.tearDown()!!!\", setup);\n    setup = true;\n    savedUncaughtExceptionHandler = Thread.getDefaultUncaughtExceptionHandler();\n    Thread.setDefaultUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler() {\n      public void uncaughtException(Thread t, Throwable e) {\n        uncaughtExceptions.add(new UncaughtExceptionEntry(t, e));\n        if (savedUncaughtExceptionHandler != null)\n          savedUncaughtExceptionHandler.uncaughtException(t, e);\n      }\n    });\n    \n    ConcurrentMergeScheduler.setTestMode();\n    savedBoolMaxClauseCount = BooleanQuery.getMaxClauseCount();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ab5cb6a74aefb78aa0569857970b9151dfe2e787","date":1292842407,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#setUp().mjava","sourceNew":"  @Before\n  public void setUp() throws Exception {\n    seed = \"random\".equals(TEST_SEED) ? seedRand.nextLong() : TwoLongs.fromString(TEST_SEED).l2;\n    random.setSeed(seed);\n    assertFalse(\"ensure your tearDown() calls super.tearDown()!!!\", setup);\n    setup = true;\n    savedUncaughtExceptionHandler = Thread.getDefaultUncaughtExceptionHandler();\n    Thread.setDefaultUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler() {\n      public void uncaughtException(Thread t, Throwable e) {\n        testsFailed = true;\n        uncaughtExceptions.add(new UncaughtExceptionEntry(t, e));\n        if (savedUncaughtExceptionHandler != null)\n          savedUncaughtExceptionHandler.uncaughtException(t, e);\n      }\n    });\n    \n    savedBoolMaxClauseCount = BooleanQuery.getMaxClauseCount();\n  }\n\n","sourceOld":"  @Before\n  public void setUp() throws Exception {\n    seed = \"random\".equals(TEST_SEED) ? seedRand.nextLong() : TwoLongs.fromString(TEST_SEED).l2;\n    random.setSeed(seed);\n    assertFalse(\"ensure your tearDown() calls super.tearDown()!!!\", setup);\n    setup = true;\n    savedUncaughtExceptionHandler = Thread.getDefaultUncaughtExceptionHandler();\n    Thread.setDefaultUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler() {\n      public void uncaughtException(Thread t, Throwable e) {\n        uncaughtExceptions.add(new UncaughtExceptionEntry(t, e));\n        if (savedUncaughtExceptionHandler != null)\n          savedUncaughtExceptionHandler.uncaughtException(t, e);\n      }\n    });\n    \n    ConcurrentMergeScheduler.setTestMode();\n    savedBoolMaxClauseCount = BooleanQuery.getMaxClauseCount();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#setUp().mjava","sourceNew":"  @Before\n  public void setUp() throws Exception {\n    seed = \"random\".equals(TEST_SEED) ? seedRand.nextLong() : TwoLongs.fromString(TEST_SEED).l2;\n    random.setSeed(seed);\n    assertFalse(\"ensure your tearDown() calls super.tearDown()!!!\", setup);\n    setup = true;\n    savedUncaughtExceptionHandler = Thread.getDefaultUncaughtExceptionHandler();\n    Thread.setDefaultUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler() {\n      public void uncaughtException(Thread t, Throwable e) {\n        testsFailed = true;\n        uncaughtExceptions.add(new UncaughtExceptionEntry(t, e));\n        if (savedUncaughtExceptionHandler != null)\n          savedUncaughtExceptionHandler.uncaughtException(t, e);\n      }\n    });\n\n    savedBoolMaxClauseCount = BooleanQuery.getMaxClauseCount();\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    assertFalse(\"ensure your tearDown() calls super.tearDown()!!!\", setup);\n    setup = true;\n    savedUncaughtExceptionHandler = Thread.getDefaultUncaughtExceptionHandler();\n    Thread.setDefaultUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler() {\n      public void uncaughtException(Thread t, Throwable e) {\n        uncaughtExceptions.add(new UncaughtExceptionEntry(t, e));\n        if (savedUncaughtExceptionHandler != null)\n          savedUncaughtExceptionHandler.uncaughtException(t, e);\n      }\n    });\n    \n    ConcurrentMergeScheduler.setTestMode();\n    savedBoolMaxClauseCount = BooleanQuery.getMaxClauseCount();\n    savedDefaultCodec = CodecProvider.getDefaultCodec();\n\n    codec = TEST_CODEC;\n    if (codec.equals(\"random\"))\n      codec = CodecProvider.CORE_CODECS[seedRnd.nextInt(CodecProvider.CORE_CODECS.length)];\n\n    // If we're running w/ PreFlex codec we must swap in the\n    // test-only PreFlexRW codec (since core PreFlex can\n    // only read segments):\n    if (codec.equals(\"PreFlex\")) {\n      preFlexSav = LuceneTestCaseJ4.installPreFlexRW();\n    } \n    CodecProvider.setDefaultCodec(codec);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce","date":1297021734,"type":5,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#setUp().mjava","sourceNew":"  @Before\n  public void setUp() throws Exception {\n    seed = \"random\".equals(TEST_SEED) ? seedRand.nextLong() : TwoLongs.fromString(TEST_SEED).l2;\n    random.setSeed(seed);\n    assertFalse(\"ensure your tearDown() calls super.tearDown()!!!\", setup);\n    setup = true;\n    savedUncaughtExceptionHandler = Thread.getDefaultUncaughtExceptionHandler();\n    Thread.setDefaultUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler() {\n      public void uncaughtException(Thread t, Throwable e) {\n        testsFailed = true;\n        uncaughtExceptions.add(new UncaughtExceptionEntry(t, e));\n        if (savedUncaughtExceptionHandler != null)\n          savedUncaughtExceptionHandler.uncaughtException(t, e);\n      }\n    });\n    \n    savedBoolMaxClauseCount = BooleanQuery.getMaxClauseCount();\n  }\n\n","sourceOld":"  @Before\n  public void setUp() throws Exception {\n    seed = \"random\".equals(TEST_SEED) ? seedRand.nextLong() : TwoLongs.fromString(TEST_SEED).l2;\n    random.setSeed(seed);\n    assertFalse(\"ensure your tearDown() calls super.tearDown()!!!\", setup);\n    setup = true;\n    savedUncaughtExceptionHandler = Thread.getDefaultUncaughtExceptionHandler();\n    Thread.setDefaultUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler() {\n      public void uncaughtException(Thread t, Throwable e) {\n        testsFailed = true;\n        uncaughtExceptions.add(new UncaughtExceptionEntry(t, e));\n        if (savedUncaughtExceptionHandler != null)\n          savedUncaughtExceptionHandler.uncaughtException(t, e);\n      }\n    });\n    \n    savedBoolMaxClauseCount = BooleanQuery.getMaxClauseCount();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":5,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#setUp().mjava","sourceNew":"  @Before\n  public void setUp() throws Exception {\n    seed = \"random\".equals(TEST_SEED) ? seedRand.nextLong() : TwoLongs.fromString(TEST_SEED).l2;\n    random.setSeed(seed);\n    assertFalse(\"ensure your tearDown() calls super.tearDown()!!!\", setup);\n    setup = true;\n    savedUncaughtExceptionHandler = Thread.getDefaultUncaughtExceptionHandler();\n    Thread.setDefaultUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler() {\n      public void uncaughtException(Thread t, Throwable e) {\n        testsFailed = true;\n        uncaughtExceptions.add(new UncaughtExceptionEntry(t, e));\n        if (savedUncaughtExceptionHandler != null)\n          savedUncaughtExceptionHandler.uncaughtException(t, e);\n      }\n    });\n    \n    savedBoolMaxClauseCount = BooleanQuery.getMaxClauseCount();\n  }\n\n","sourceOld":"  @Before\n  public void setUp() throws Exception {\n    seed = \"random\".equals(TEST_SEED) ? seedRand.nextLong() : TwoLongs.fromString(TEST_SEED).l2;\n    random.setSeed(seed);\n    assertFalse(\"ensure your tearDown() calls super.tearDown()!!!\", setup);\n    setup = true;\n    savedUncaughtExceptionHandler = Thread.getDefaultUncaughtExceptionHandler();\n    Thread.setDefaultUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler() {\n      public void uncaughtException(Thread t, Throwable e) {\n        testsFailed = true;\n        uncaughtExceptions.add(new UncaughtExceptionEntry(t, e));\n        if (savedUncaughtExceptionHandler != null)\n          savedUncaughtExceptionHandler.uncaughtException(t, e);\n      }\n    });\n    \n    savedBoolMaxClauseCount = BooleanQuery.getMaxClauseCount();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":5,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/util/LuceneTestCase#setUp().mjava","sourceNew":"  @Before\n  public void setUp() throws Exception {\n    seed = \"random\".equals(TEST_SEED) ? seedRand.nextLong() : TwoLongs.fromString(TEST_SEED).l2;\n    random.setSeed(seed);\n    assertFalse(\"ensure your tearDown() calls super.tearDown()!!!\", setup);\n    setup = true;\n    savedUncaughtExceptionHandler = Thread.getDefaultUncaughtExceptionHandler();\n    Thread.setDefaultUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler() {\n      public void uncaughtException(Thread t, Throwable e) {\n        testsFailed = true;\n        uncaughtExceptions.add(new UncaughtExceptionEntry(t, e));\n        if (savedUncaughtExceptionHandler != null)\n          savedUncaughtExceptionHandler.uncaughtException(t, e);\n      }\n    });\n\n    savedBoolMaxClauseCount = BooleanQuery.getMaxClauseCount();\n  }\n\n","sourceOld":"  @Before\n  public void setUp() throws Exception {\n    seed = \"random\".equals(TEST_SEED) ? seedRand.nextLong() : TwoLongs.fromString(TEST_SEED).l2;\n    random.setSeed(seed);\n    assertFalse(\"ensure your tearDown() calls super.tearDown()!!!\", setup);\n    setup = true;\n    savedUncaughtExceptionHandler = Thread.getDefaultUncaughtExceptionHandler();\n    Thread.setDefaultUncaughtExceptionHandler(new Thread.UncaughtExceptionHandler() {\n      public void uncaughtException(Thread t, Throwable e) {\n        testsFailed = true;\n        uncaughtExceptions.add(new UncaughtExceptionEntry(t, e));\n        if (savedUncaughtExceptionHandler != null)\n          savedUncaughtExceptionHandler.uncaughtException(t, e);\n      }\n    });\n\n    savedBoolMaxClauseCount = BooleanQuery.getMaxClauseCount();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e45742e10e8e3b98e854babe6dbb07a4197b71":["4b103252dee6afa1b6d7a622c773d178788eb85a"],"6e49d7950c2623fba7129a12bfc1b773bdd38f1b":["108e81824177a1a9f2507addadb8894e1cdf9afc"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["3242a09f703274d3b9283f2064a1a33064b53a1b","7fc5a2665a7fa1b9450097ae658193a11ee4d02c"],"c9f6bb0c3d7b1c1dd8aeab43a34a89f050069e97":["399a364d374f2132b6d9ff9fd7f997a9f2ef734f"],"5f9dba8ffba48fba97d7a90fd45f6da87ba55736":["43b04c27924fe393e38e9f0986e32c634f261859"],"43b04c27924fe393e38e9f0986e32c634f261859":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce":["7fc5a2665a7fa1b9450097ae658193a11ee4d02c"],"e35534ac782c9c9d1227a10245ab7729d9eef22f":["163fe85a71d778fd2b7747f65ca27b54829e2e57"],"1f653cfcf159baeaafe5d01682a911e95bba4012":["a05409176bd65129d67a785ee70e881e238a9aef"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["ab5cb6a74aefb78aa0569857970b9151dfe2e787","f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a05409176bd65129d67a785ee70e881e238a9aef":["ab9633cb67e3c0aec3c066147a23a957d6e7ad8c"],"e42b97f2dcf8cca9bf6437e7d0dd3e8711f7413f":["8d47f68d60cbff5718136b945ba8c55982342f38"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"24b91b08ba3110a0904b8ba9803276bf9a9b5f6d":["236e69f7c6c636bfd65b7a9031c9e6fb15b508ec"],"7fc5a2665a7fa1b9450097ae658193a11ee4d02c":["e42b97f2dcf8cca9bf6437e7d0dd3e8711f7413f"],"3242a09f703274d3b9283f2064a1a33064b53a1b":["5f4e87790277826a2aea119328600dfb07761f32","a0e45742e10e8e3b98e854babe6dbb07a4197b71"],"4b103252dee6afa1b6d7a622c773d178788eb85a":["37087ea13c0fde1ce1a3b5579f60f827414045a9","c9f6bb0c3d7b1c1dd8aeab43a34a89f050069e97"],"163fe85a71d778fd2b7747f65ca27b54829e2e57":["37087ea13c0fde1ce1a3b5579f60f827414045a9"],"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c":["6e49d7950c2623fba7129a12bfc1b773bdd38f1b"],"108e81824177a1a9f2507addadb8894e1cdf9afc":["a0e45742e10e8e3b98e854babe6dbb07a4197b71"],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":["4ecea1664e8617d82eca3b8055a3c37cb4da8511","7fc5a2665a7fa1b9450097ae658193a11ee4d02c"],"5f4e87790277826a2aea119328600dfb07761f32":["9454a6510e2db155fb01faa5c049b06ece95fab9","37087ea13c0fde1ce1a3b5579f60f827414045a9"],"8d47f68d60cbff5718136b945ba8c55982342f38":["5f9dba8ffba48fba97d7a90fd45f6da87ba55736"],"236e69f7c6c636bfd65b7a9031c9e6fb15b508ec":["e35534ac782c9c9d1227a10245ab7729d9eef22f"],"399a364d374f2132b6d9ff9fd7f997a9f2ef734f":["24b91b08ba3110a0904b8ba9803276bf9a9b5f6d"],"37087ea13c0fde1ce1a3b5579f60f827414045a9":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"4ecea1664e8617d82eca3b8055a3c37cb4da8511":["8d47f68d60cbff5718136b945ba8c55982342f38","e42b97f2dcf8cca9bf6437e7d0dd3e8711f7413f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce"]},"commit2Childs":{"a0e45742e10e8e3b98e854babe6dbb07a4197b71":["3242a09f703274d3b9283f2064a1a33064b53a1b","108e81824177a1a9f2507addadb8894e1cdf9afc"],"6e49d7950c2623fba7129a12bfc1b773bdd38f1b":["ab9633cb67e3c0aec3c066147a23a957d6e7ad8c"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["bde51b089eb7f86171eb3406e38a274743f9b7ac"],"c9f6bb0c3d7b1c1dd8aeab43a34a89f050069e97":["4b103252dee6afa1b6d7a622c773d178788eb85a"],"5f9dba8ffba48fba97d7a90fd45f6da87ba55736":["8d47f68d60cbff5718136b945ba8c55982342f38"],"43b04c27924fe393e38e9f0986e32c634f261859":["5f9dba8ffba48fba97d7a90fd45f6da87ba55736"],"f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce":["29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e35534ac782c9c9d1227a10245ab7729d9eef22f":["236e69f7c6c636bfd65b7a9031c9e6fb15b508ec"],"1f653cfcf159baeaafe5d01682a911e95bba4012":["43b04c27924fe393e38e9f0986e32c634f261859"],"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a05409176bd65129d67a785ee70e881e238a9aef":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"e42b97f2dcf8cca9bf6437e7d0dd3e8711f7413f":["7fc5a2665a7fa1b9450097ae658193a11ee4d02c","4ecea1664e8617d82eca3b8055a3c37cb4da8511"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["5f4e87790277826a2aea119328600dfb07761f32","37087ea13c0fde1ce1a3b5579f60f827414045a9"],"24b91b08ba3110a0904b8ba9803276bf9a9b5f6d":["399a364d374f2132b6d9ff9fd7f997a9f2ef734f"],"7fc5a2665a7fa1b9450097ae658193a11ee4d02c":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce","ab5cb6a74aefb78aa0569857970b9151dfe2e787"],"3242a09f703274d3b9283f2064a1a33064b53a1b":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"4b103252dee6afa1b6d7a622c773d178788eb85a":["a0e45742e10e8e3b98e854babe6dbb07a4197b71"],"163fe85a71d778fd2b7747f65ca27b54829e2e57":["e35534ac782c9c9d1227a10245ab7729d9eef22f"],"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c":["a05409176bd65129d67a785ee70e881e238a9aef"],"108e81824177a1a9f2507addadb8894e1cdf9afc":["6e49d7950c2623fba7129a12bfc1b773bdd38f1b"],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":["29ef99d61cda9641b6250bf9567329a6e65f901d"],"5f4e87790277826a2aea119328600dfb07761f32":["3242a09f703274d3b9283f2064a1a33064b53a1b"],"8d47f68d60cbff5718136b945ba8c55982342f38":["e42b97f2dcf8cca9bf6437e7d0dd3e8711f7413f","4ecea1664e8617d82eca3b8055a3c37cb4da8511"],"236e69f7c6c636bfd65b7a9031c9e6fb15b508ec":["24b91b08ba3110a0904b8ba9803276bf9a9b5f6d"],"399a364d374f2132b6d9ff9fd7f997a9f2ef734f":["c9f6bb0c3d7b1c1dd8aeab43a34a89f050069e97"],"37087ea13c0fde1ce1a3b5579f60f827414045a9":["4b103252dee6afa1b6d7a622c773d178788eb85a","163fe85a71d778fd2b7747f65ca27b54829e2e57","5f4e87790277826a2aea119328600dfb07761f32"],"4ecea1664e8617d82eca3b8055a3c37cb4da8511":["ab5cb6a74aefb78aa0569857970b9151dfe2e787"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}