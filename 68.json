{"path":"src/test/org/apache/lucene/store/_TestHelper#isFSInputStreamClone(IndexInput).mjava","commits":[{"id":"e971ba25509e21a130fef61f0687be0446ca27a0","date":1095369217,"type":1,"author":"Doug Cutting","isMerge":false,"pathNew":"src/test/org/apache/lucene/store/_TestHelper#isFSInputStreamClone(IndexInput).mjava","pathOld":"src/test/org/apache/lucene/store/_TestHelper#isFSInputStreamClone(InputStream).mjava","sourceNew":"    /** Returns true if the provided input stream is an FSInputStream and\n     *  is a clone, that is it does not own its underlying file descriptor.\n     */\n    public static boolean isFSInputStreamClone(IndexInput is) {\n        if (isFSInputStream(is)) {\n            return ((FSInputStream) is).isClone;\n        } else {\n            return false;\n        }\n    }\n\n","sourceOld":"    /** Returns true if the provided input stream is an FSInputStream and\n     *  is a clone, that is it does not own its underlying file descriptor.\n     */\n    public static boolean isFSInputStreamClone(InputStream is) {\n        if (isFSInputStream(is)) {\n            return ((FSInputStream) is).isClone;\n        } else {\n            return false;\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"77f2eb0d13b43db148a5e4f61c166fa3688a2df9","date":1096404326,"type":5,"author":"Doug Cutting","isMerge":false,"pathNew":"src/test/org/apache/lucene/store/_TestHelper#isFSIndexInputClone(IndexInput).mjava","pathOld":"src/test/org/apache/lucene/store/_TestHelper#isFSInputStreamClone(IndexInput).mjava","sourceNew":"    /** Returns true if the provided input stream is an FSIndexInput and\n     *  is a clone, that is it does not own its underlying file descriptor.\n     */\n    public static boolean isFSIndexInputClone(IndexInput is) {\n        if (isFSIndexInput(is)) {\n            return ((FSIndexInput) is).isClone;\n        } else {\n            return false;\n        }\n    }\n\n","sourceOld":"    /** Returns true if the provided input stream is an FSInputStream and\n     *  is a clone, that is it does not own its underlying file descriptor.\n     */\n    public static boolean isFSInputStreamClone(IndexInput is) {\n        if (isFSInputStream(is)) {\n            return ((FSInputStream) is).isClone;\n        } else {\n            return false;\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e971ba25509e21a130fef61f0687be0446ca27a0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"77f2eb0d13b43db148a5e4f61c166fa3688a2df9":["e971ba25509e21a130fef61f0687be0446ca27a0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["77f2eb0d13b43db148a5e4f61c166fa3688a2df9"]},"commit2Childs":{"e971ba25509e21a130fef61f0687be0446ca27a0":["77f2eb0d13b43db148a5e4f61c166fa3688a2df9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e971ba25509e21a130fef61f0687be0446ca27a0"],"77f2eb0d13b43db148a5e4f61c166fa3688a2df9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}