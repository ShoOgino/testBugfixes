{"path":"solr/core/src/java/org/apache/solr/cloud/autoscaling/AutoScalingHandler#zkSetListener(ZkStateReader,String,Map[String,Object]).mjava","commits":[{"id":"32c42b3b8d01657c1fa648ce7faafee5d9a68f07","date":1490344676,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/autoscaling/AutoScalingHandler#zkSetListener(ZkStateReader,String,Map[String,Object]).mjava","pathOld":"/dev/null","sourceNew":"  private void zkSetListener(ZkStateReader reader, String listenerName, Map<String, Object> listenerProperties) throws KeeperException, InterruptedException {\n    while (true) {\n      Stat stat = new Stat();\n      ZkNodeProps loaded = null;\n      byte[] data = reader.getZkClient().getData(SOLR_AUTOSCALING_CONF_PATH, null, stat, true);\n      loaded = ZkNodeProps.load(data);\n      Map<String, Object> listeners = (Map<String, Object>) loaded.get(\"listeners\");\n      if (listeners == null) listeners = new HashMap<>(1);\n      if (listenerProperties != null) {\n        listeners.put(listenerName, listenerProperties);\n      } else {\n        listeners.remove(listenerName);\n      }\n      loaded = loaded.plus(\"listeners\", listeners);\n      try {\n        reader.getZkClient().setData(SOLR_AUTOSCALING_CONF_PATH, Utils.toJSON(loaded), stat.getVersion(), true);\n      } catch (KeeperException.BadVersionException bve) {\n        // somebody else has changed the configuration so we must retry\n        continue;\n      }\n      break;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"219ac4e012cb38bcfcd8f4290dccd4f5b4d7bc25","date":1499961129,"type":4,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/cloud/autoscaling/AutoScalingHandler#zkSetListener(ZkStateReader,String,Map[String,Object]).mjava","sourceNew":null,"sourceOld":"  private void zkSetListener(ZkStateReader reader, String listenerName, Map<String, Object> listenerProperties) throws KeeperException, InterruptedException {\n    while (true) {\n      Stat stat = new Stat();\n      ZkNodeProps loaded = null;\n      byte[] data = reader.getZkClient().getData(SOLR_AUTOSCALING_CONF_PATH, null, stat, true);\n      loaded = ZkNodeProps.load(data);\n      Map<String, Object> listeners = (Map<String, Object>) loaded.get(\"listeners\");\n      if (listeners == null) listeners = new HashMap<>(1);\n      if (listenerProperties != null) {\n        listeners.put(listenerName, listenerProperties);\n      } else {\n        listeners.remove(listenerName);\n      }\n      loaded = loaded.plus(\"listeners\", listeners);\n      try {\n        reader.getZkClient().setData(SOLR_AUTOSCALING_CONF_PATH, Utils.toJSON(loaded), stat.getVersion(), true);\n      } catch (KeeperException.BadVersionException bve) {\n        // somebody else has changed the configuration so we must retry\n        continue;\n      }\n      break;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"32c42b3b8d01657c1fa648ce7faafee5d9a68f07":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"219ac4e012cb38bcfcd8f4290dccd4f5b4d7bc25":["32c42b3b8d01657c1fa648ce7faafee5d9a68f07"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"32c42b3b8d01657c1fa648ce7faafee5d9a68f07":["219ac4e012cb38bcfcd8f4290dccd4f5b4d7bc25"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["32c42b3b8d01657c1fa648ce7faafee5d9a68f07","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"219ac4e012cb38bcfcd8f4290dccd4f5b4d7bc25":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["219ac4e012cb38bcfcd8f4290dccd4f5b4d7bc25","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}