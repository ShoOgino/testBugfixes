{"path":"src/java/org/apache/lucene/index/IndexWriter#newSegmentName().mjava","commits":[{"id":"91109046a59c58ee0ee5d0d2767b08d1f30d6702","date":1000830588,"type":0,"author":"Jason van Zyl","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexWriter#newSegmentName().mjava","pathOld":"/dev/null","sourceNew":"  private final synchronized String newSegmentName() {\n    return \"_\" + Integer.toString(segmentInfos.counter++, Character.MAX_RADIX);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["6b772434f9f358356f8eedc2e017b9ddfb2615ec"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"6b772434f9f358356f8eedc2e017b9ddfb2615ec","date":1170327312,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexWriter#newSegmentName().mjava","pathOld":"src/java/org/apache/lucene/index/IndexWriter#newSegmentName().mjava","sourceNew":"  final synchronized String newSegmentName() {\n    return \"_\" + Integer.toString(segmentInfos.counter++, Character.MAX_RADIX);\n  }\n\n","sourceOld":"  private final synchronized String newSegmentName() {\n    return \"_\" + Integer.toString(segmentInfos.counter++, Character.MAX_RADIX);\n  }\n\n","bugFix":["91109046a59c58ee0ee5d0d2767b08d1f30d6702"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4350b17bd363cd13a95171b8df1ca62ea4c3e71c","date":1183562198,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexWriter#newSegmentName().mjava","pathOld":"src/java/org/apache/lucene/index/IndexWriter#newSegmentName().mjava","sourceNew":"  final String newSegmentName() {\n    return \"_\" + Integer.toString(segmentInfos.counter++, Character.MAX_RADIX);\n  }\n\n","sourceOld":"  final synchronized String newSegmentName() {\n    return \"_\" + Integer.toString(segmentInfos.counter++, Character.MAX_RADIX);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b1405362241b561f5590ff4a87d5d6e173bcd9cf","date":1190107634,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexWriter#newSegmentName().mjava","pathOld":"src/java/org/apache/lucene/index/IndexWriter#newSegmentName().mjava","sourceNew":"  final String newSegmentName() {\n    // Cannot synchronize on IndexWriter because that causes\n    // deadlock\n    synchronized(segmentInfos) {\n      return \"_\" + Integer.toString(segmentInfos.counter++, Character.MAX_RADIX);\n    }\n  }\n\n","sourceOld":"  final String newSegmentName() {\n    return \"_\" + Integer.toString(segmentInfos.counter++, Character.MAX_RADIX);\n  }\n\n","bugFix":null,"bugIntro":["0617d2d25b13b9a49450ea49ceb06123ebd6542a"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3dafe85e64882d66ce66ed420d8678b85022b466","date":1190126644,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexWriter#newSegmentName().mjava","pathOld":"src/java/org/apache/lucene/index/IndexWriter#newSegmentName().mjava","sourceNew":"  final String newSegmentName() {\n    // Cannot synchronize on IndexWriter because that causes\n    // deadlock\n    synchronized(segmentInfos) {\n      // Important to set commitPending so that the\n      // segmentInfos is written on close.  Otherwise we\n      // could close, re-open and re-return the same segment\n      // name that was previously returned which can cause\n      // problems at least with ConcurrentMergeScheduler.\n      commitPending = true;\n      return \"_\" + Integer.toString(segmentInfos.counter++, Character.MAX_RADIX);\n    }\n  }\n\n","sourceOld":"  final String newSegmentName() {\n    // Cannot synchronize on IndexWriter because that causes\n    // deadlock\n    synchronized(segmentInfos) {\n      return \"_\" + Integer.toString(segmentInfos.counter++, Character.MAX_RADIX);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a2fc4b864a5dc2c630bb1fa94091e89e69f8f8be","date":1204801324,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexWriter#newSegmentName().mjava","pathOld":"src/java/org/apache/lucene/index/IndexWriter#newSegmentName().mjava","sourceNew":"  final String newSegmentName() {\n    // Cannot synchronize on IndexWriter because that causes\n    // deadlock\n    synchronized(segmentInfos) {\n      // Important to increment changeCount so that the\n      // segmentInfos is written on close.  Otherwise we\n      // could close, re-open and re-return the same segment\n      // name that was previously returned which can cause\n      // problems at least with ConcurrentMergeScheduler.\n      changeCount++;\n      return \"_\" + Integer.toString(segmentInfos.counter++, Character.MAX_RADIX);\n    }\n  }\n\n","sourceOld":"  final String newSegmentName() {\n    // Cannot synchronize on IndexWriter because that causes\n    // deadlock\n    synchronized(segmentInfos) {\n      // Important to set commitPending so that the\n      // segmentInfos is written on close.  Otherwise we\n      // could close, re-open and re-return the same segment\n      // name that was previously returned which can cause\n      // problems at least with ConcurrentMergeScheduler.\n      commitPending = true;\n      return \"_\" + Integer.toString(segmentInfos.counter++, Character.MAX_RADIX);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriter#newSegmentName().mjava","pathOld":"src/java/org/apache/lucene/index/IndexWriter#newSegmentName().mjava","sourceNew":"  final String newSegmentName() {\n    // Cannot synchronize on IndexWriter because that causes\n    // deadlock\n    synchronized(segmentInfos) {\n      // Important to increment changeCount so that the\n      // segmentInfos is written on close.  Otherwise we\n      // could close, re-open and re-return the same segment\n      // name that was previously returned which can cause\n      // problems at least with ConcurrentMergeScheduler.\n      changeCount++;\n      return \"_\" + Integer.toString(segmentInfos.counter++, Character.MAX_RADIX);\n    }\n  }\n\n","sourceOld":"  final String newSegmentName() {\n    // Cannot synchronize on IndexWriter because that causes\n    // deadlock\n    synchronized(segmentInfos) {\n      // Important to increment changeCount so that the\n      // segmentInfos is written on close.  Otherwise we\n      // could close, re-open and re-return the same segment\n      // name that was previously returned which can cause\n      // problems at least with ConcurrentMergeScheduler.\n      changeCount++;\n      return \"_\" + Integer.toString(segmentInfos.counter++, Character.MAX_RADIX);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"b1405362241b561f5590ff4a87d5d6e173bcd9cf":["4350b17bd363cd13a95171b8df1ca62ea4c3e71c"],"91109046a59c58ee0ee5d0d2767b08d1f30d6702":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3dafe85e64882d66ce66ed420d8678b85022b466":["b1405362241b561f5590ff4a87d5d6e173bcd9cf"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a2fc4b864a5dc2c630bb1fa94091e89e69f8f8be":["3dafe85e64882d66ce66ed420d8678b85022b466"],"4350b17bd363cd13a95171b8df1ca62ea4c3e71c":["6b772434f9f358356f8eedc2e017b9ddfb2615ec"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a2fc4b864a5dc2c630bb1fa94091e89e69f8f8be"],"6b772434f9f358356f8eedc2e017b9ddfb2615ec":["91109046a59c58ee0ee5d0d2767b08d1f30d6702"]},"commit2Childs":{"b1405362241b561f5590ff4a87d5d6e173bcd9cf":["3dafe85e64882d66ce66ed420d8678b85022b466"],"91109046a59c58ee0ee5d0d2767b08d1f30d6702":["6b772434f9f358356f8eedc2e017b9ddfb2615ec"],"3dafe85e64882d66ce66ed420d8678b85022b466":["a2fc4b864a5dc2c630bb1fa94091e89e69f8f8be"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["91109046a59c58ee0ee5d0d2767b08d1f30d6702"],"a2fc4b864a5dc2c630bb1fa94091e89e69f8f8be":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"4350b17bd363cd13a95171b8df1ca62ea4c3e71c":["b1405362241b561f5590ff4a87d5d6e173bcd9cf"],"6b772434f9f358356f8eedc2e017b9ddfb2615ec":["4350b17bd363cd13a95171b8df1ca62ea4c3e71c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}