{"path":"lucene/src/java/org/apache/lucene/search/PhraseQuery#createWeight(IndexSearcher).mjava","commits":[{"id":"8b241ea5e635d896cc0af83cd96ffd0322e0aba7","date":1294226200,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/PhraseQuery#createWeight(IndexSearcher).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/PhraseQuery#createWeight(Searcher).mjava","sourceNew":"  @Override\n  public Weight createWeight(IndexSearcher searcher) throws IOException {\n    if (terms.size() == 1) {\t\t\t  // optimize one-term case\n      Term term = terms.get(0);\n      Query termQuery = new TermQuery(term);\n      termQuery.setBoost(getBoost());\n      return termQuery.createWeight(searcher);\n    }\n    return new PhraseWeight(searcher);\n  }\n\n","sourceOld":"  @Override\n  public Weight createWeight(Searcher searcher) throws IOException {\n    if (terms.size() == 1) {\t\t\t  // optimize one-term case\n      Term term = terms.get(0);\n      Query termQuery = new TermQuery(term);\n      termQuery.setBoost(getBoost());\n      return termQuery.createWeight(searcher);\n    }\n    return new PhraseWeight(searcher);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"70ad682703b8585f5d0a637efec044d57ec05efb","date":1294259117,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/PhraseQuery#createWeight(IndexSearcher).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public Weight createWeight(IndexSearcher searcher) throws IOException {\n    if (terms.size() == 1) {\t\t\t  // optimize one-term case\n      Term term = terms.get(0);\n      Query termQuery = new TermQuery(term);\n      termQuery.setBoost(getBoost());\n      return termQuery.createWeight(searcher);\n    }\n    return new PhraseWeight(searcher);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"868da859b43505d9d2a023bfeae6dd0c795f5295","date":1294948401,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/PhraseQuery#createWeight(IndexSearcher).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public Weight createWeight(IndexSearcher searcher) throws IOException {\n    if (terms.size() == 1) {\t\t\t  // optimize one-term case\n      Term term = terms.get(0);\n      Query termQuery = new TermQuery(term);\n      termQuery.setBoost(getBoost());\n      return termQuery.createWeight(searcher);\n    }\n    return new PhraseWeight(searcher);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"60e3b31201fd9bb5d73884faa5a38c63ea9239f2","date":1315756041,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/PhraseQuery#createWeight(IndexSearcher).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/PhraseQuery#createWeight(IndexSearcher).mjava","sourceNew":"  @Override\n  public Weight createWeight(IndexSearcher searcher) throws IOException {\n    return new PhraseWeight(searcher);\n  }\n\n","sourceOld":"  @Override\n  public Weight createWeight(IndexSearcher searcher) throws IOException {\n    if (terms.size() == 1) {\t\t\t  // optimize one-term case\n      Term term = terms.get(0);\n      Query termQuery = new TermQuery(term);\n      termQuery.setBoost(getBoost());\n      return termQuery.createWeight(searcher);\n    }\n    return new PhraseWeight(searcher);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/PhraseQuery#createWeight(IndexSearcher).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/PhraseQuery#createWeight(IndexSearcher).mjava","sourceNew":"  @Override\n  public Weight createWeight(IndexSearcher searcher) throws IOException {\n    return new PhraseWeight(searcher);\n  }\n\n","sourceOld":"  @Override\n  public Weight createWeight(IndexSearcher searcher) throws IOException {\n    return new PhraseWeight(searcher);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"70ad682703b8585f5d0a637efec044d57ec05efb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","8b241ea5e635d896cc0af83cd96ffd0322e0aba7"],"8b241ea5e635d896cc0af83cd96ffd0322e0aba7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["60e3b31201fd9bb5d73884faa5a38c63ea9239f2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"60e3b31201fd9bb5d73884faa5a38c63ea9239f2":["8b241ea5e635d896cc0af83cd96ffd0322e0aba7"],"868da859b43505d9d2a023bfeae6dd0c795f5295":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","8b241ea5e635d896cc0af83cd96ffd0322e0aba7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"70ad682703b8585f5d0a637efec044d57ec05efb":[],"8b241ea5e635d896cc0af83cd96ffd0322e0aba7":["70ad682703b8585f5d0a637efec044d57ec05efb","60e3b31201fd9bb5d73884faa5a38c63ea9239f2","868da859b43505d9d2a023bfeae6dd0c795f5295"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["70ad682703b8585f5d0a637efec044d57ec05efb","8b241ea5e635d896cc0af83cd96ffd0322e0aba7","868da859b43505d9d2a023bfeae6dd0c795f5295"],"60e3b31201fd9bb5d73884faa5a38c63ea9239f2":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"868da859b43505d9d2a023bfeae6dd0c795f5295":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["70ad682703b8585f5d0a637efec044d57ec05efb","868da859b43505d9d2a023bfeae6dd0c795f5295","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}