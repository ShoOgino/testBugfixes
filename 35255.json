{"path":"lucene/core/src/java/org/apache/lucene/codecs/blocktree/FieldReader.IntersectEnum.Frame#loadNextFloorBlock().mjava","commits":[{"id":"d289450fa5030c34b5e378c04bcb03a026aad9f4","date":1400178141,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/blocktree/FieldReader.IntersectEnum.Frame#loadNextFloorBlock().mjava","pathOld":"/dev/null","sourceNew":"      void loadNextFloorBlock() throws IOException {\n        assert numFollowFloorBlocks > 0;\n        //if (DEBUG) System.out.println(\"    loadNextFoorBlock trans=\" + transitions[transitionIndex]);\n\n        do {\n          fp = fpOrig + (floorDataReader.readVLong() >>> 1);\n          numFollowFloorBlocks--;\n          // if (DEBUG) System.out.println(\"    skip floor block2!  nextFloorLabel=\" + (char) nextFloorLabel + \" vs target=\" + (char) transitions[transitionIndex].getMin() + \" newFP=\" + fp + \" numFollowFloorBlocks=\" + numFollowFloorBlocks);\n          if (numFollowFloorBlocks != 0) {\n            nextFloorLabel = floorDataReader.readByte() & 0xff;\n          } else {\n            nextFloorLabel = 256;\n          }\n          // if (DEBUG) System.out.println(\"    nextFloorLabel=\" + (char) nextFloorLabel);\n        } while (numFollowFloorBlocks != 0 && nextFloorLabel <= transitions[transitionIndex].getMin());\n\n        load(null);\n      }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c8e28215c157245fd00f3954f8f0d4f45c2b0fd3","date":1400179494,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/blocktree/FieldReader.IntersectEnum.Frame#loadNextFloorBlock().mjava","sourceNew":null,"sourceOld":"      void loadNextFloorBlock() throws IOException {\n        assert numFollowFloorBlocks > 0;\n        //if (DEBUG) System.out.println(\"    loadNextFoorBlock trans=\" + transitions[transitionIndex]);\n\n        do {\n          fp = fpOrig + (floorDataReader.readVLong() >>> 1);\n          numFollowFloorBlocks--;\n          // if (DEBUG) System.out.println(\"    skip floor block2!  nextFloorLabel=\" + (char) nextFloorLabel + \" vs target=\" + (char) transitions[transitionIndex].getMin() + \" newFP=\" + fp + \" numFollowFloorBlocks=\" + numFollowFloorBlocks);\n          if (numFollowFloorBlocks != 0) {\n            nextFloorLabel = floorDataReader.readByte() & 0xff;\n          } else {\n            nextFloorLabel = 256;\n          }\n          // if (DEBUG) System.out.println(\"    nextFloorLabel=\" + (char) nextFloorLabel);\n        } while (numFollowFloorBlocks != 0 && nextFloorLabel <= transitions[transitionIndex].getMin());\n\n        load(null);\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d289450fa5030c34b5e378c04bcb03a026aad9f4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c8e28215c157245fd00f3954f8f0d4f45c2b0fd3":["d289450fa5030c34b5e378c04bcb03a026aad9f4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"d289450fa5030c34b5e378c04bcb03a026aad9f4":["c8e28215c157245fd00f3954f8f0d4f45c2b0fd3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d289450fa5030c34b5e378c04bcb03a026aad9f4","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c8e28215c157245fd00f3954f8f0d4f45c2b0fd3":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c8e28215c157245fd00f3954f8f0d4f45c2b0fd3","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}