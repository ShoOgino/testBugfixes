{"path":"lucene/src/java/org/apache/lucene/codecs/memory/MemoryPostingsFormat.TermsWriter.PostingsWriter#startDoc(int,int).mjava","commits":[{"id":"a0ae5e3ed1232483b7b8a014f175a5fe43595982","date":1324062192,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/codecs/memory/MemoryPostingsFormat.TermsWriter.PostingsWriter#startDoc(int,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/memory/MemoryPostingsFormat.TermsWriter.PostingsWriter#startDoc(int,int).mjava","sourceNew":"      @Override\n      public void startDoc(int docID, int termDocFreq) throws IOException {\n        if (VERBOSE) System.out.println(\"    startDoc docID=\" + docID + \" freq=\" + termDocFreq);\n        final int delta = docID - lastDocID;\n        assert docID == 0 || delta > 0;\n        lastDocID = docID;\n        docCount++;\n\n        if (field.indexOptions == IndexOptions.DOCS_ONLY) {\n          buffer.writeVInt(delta);\n        } else if (termDocFreq == 1) {\n          buffer.writeVInt((delta<<1) | 1);\n        } else {\n          buffer.writeVInt(delta<<1);\n          assert termDocFreq > 0;\n          buffer.writeVInt(termDocFreq);\n        }\n\n        lastPos = 0;\n      }\n\n","sourceOld":"      @Override\n      public void startDoc(int docID, int termDocFreq) throws IOException {\n        if (VERBOSE) System.out.println(\"    startDoc docID=\" + docID + \" freq=\" + termDocFreq);\n        final int delta = docID - lastDocID;\n        assert docID == 0 || delta > 0;\n        lastDocID = docID;\n        docCount++;\n\n        if (field.indexOptions == IndexOptions.DOCS_ONLY) {\n          buffer.writeVInt(delta);\n        } else if (termDocFreq == 1) {\n          buffer.writeVInt((delta<<1) | 1);\n        } else {\n          buffer.writeVInt(delta<<1);\n          assert termDocFreq > 0;\n          buffer.writeVInt(termDocFreq);\n        }\n\n        lastPos = 0;\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/memory/MemoryPostingsFormat.TermsWriter.PostingsWriter#startDoc(int,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/codecs/memory/MemoryPostingsFormat.TermsWriter.PostingsWriter#startDoc(int,int).mjava","sourceNew":"      @Override\n      public void startDoc(int docID, int termDocFreq) throws IOException {\n        if (VERBOSE) System.out.println(\"    startDoc docID=\" + docID + \" freq=\" + termDocFreq);\n        final int delta = docID - lastDocID;\n        assert docID == 0 || delta > 0;\n        lastDocID = docID;\n        docCount++;\n\n        if (field.indexOptions == IndexOptions.DOCS_ONLY) {\n          buffer.writeVInt(delta);\n        } else if (termDocFreq == 1) {\n          buffer.writeVInt((delta<<1) | 1);\n        } else {\n          buffer.writeVInt(delta<<1);\n          assert termDocFreq > 0;\n          buffer.writeVInt(termDocFreq);\n        }\n\n        lastPos = 0;\n      }\n\n","sourceOld":"      @Override\n      public void startDoc(int docID, int termDocFreq) throws IOException {\n        if (VERBOSE) System.out.println(\"    startDoc docID=\" + docID + \" freq=\" + termDocFreq);\n        final int delta = docID - lastDocID;\n        assert docID == 0 || delta > 0;\n        lastDocID = docID;\n        docCount++;\n\n        if (field.indexOptions == IndexOptions.DOCS_ONLY) {\n          buffer.writeVInt(delta);\n        } else if (termDocFreq == 1) {\n          buffer.writeVInt((delta<<1) | 1);\n        } else {\n          buffer.writeVInt(delta<<1);\n          assert termDocFreq > 0;\n          buffer.writeVInt(termDocFreq);\n        }\n\n        lastPos = 0;\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}