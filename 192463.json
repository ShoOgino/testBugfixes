{"path":"src/java/org/apache/solr/handler/admin/AdminHandlers#inform(SolrCore).mjava","commits":[{"id":"3eb62bd8ac67d982b8eb36c180c96f3cbb8ea1ae","date":1198950041,"type":0,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/admin/AdminHandlers#inform(SolrCore).mjava","pathOld":"/dev/null","sourceNew":"  public void inform(SolrCore core) \n  {\n    String path = null;\n    for( Map.Entry<String, SolrRequestHandler> entry : core.getRequestHandlers().entrySet() ) {\n      if( entry.getValue() == this ) {\n        path = entry.getKey();\n        break;\n      }\n    }\n    if( path == null ) {\n      throw new SolrException( SolrException.ErrorCode.SERVER_ERROR, \n          \"The AdminHandler is not registered with the current core.\" );\n    }\n    if( !path.startsWith( \"/\" ) ) {\n      throw new SolrException( SolrException.ErrorCode.SERVER_ERROR, \n        \"The AdminHandler needs to be registered to a path.  Typically this is '/admin'\" );\n    }\n    // Remove the parent handler \n    core.registerRequestHandler(path, null);\n    if( !path.endsWith( \"/\" ) ) {\n      path += \"/\";\n    }\n    \n    StandardHandler[] list = new StandardHandler[] {\n      new StandardHandler( \"luke\", new LukeRequestHandler() ),\n      new StandardHandler( \"system\", new SystemInfoHandler() ),\n      new StandardHandler( \"plugins\", new PluginInfoHandler() ),\n      new StandardHandler( \"threads\", new ThreadDumpHandler() ),\n      new StandardHandler( \"properties\", new PropertiesRequestHandler() )\n    };\n    \n    for( StandardHandler handler : list ) {\n      if( core.getRequestHandler( path+handler.name ) == null ) {\n        handler.handler.init( initArgs );\n        core.registerRequestHandler( path+handler.name, handler.handler );\n        if( handler.handler instanceof SolrCoreAware ) {\n          ((SolrCoreAware)handler).inform(core);\n        }\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5947b6265298cdb14a6489a5fbaf8073a1b7203d","date":1199294130,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/admin/AdminHandlers#inform(SolrCore).mjava","pathOld":"src/java/org/apache/solr/handler/admin/AdminHandlers#inform(SolrCore).mjava","sourceNew":"  public void inform(SolrCore core) \n  {\n    String path = null;\n    for( Map.Entry<String, SolrRequestHandler> entry : core.getRequestHandlers().entrySet() ) {\n      if( entry.getValue() == this ) {\n        path = entry.getKey();\n        break;\n      }\n    }\n    if( path == null ) {\n      throw new SolrException( SolrException.ErrorCode.SERVER_ERROR, \n          \"The AdminHandler is not registered with the current core.\" );\n    }\n    if( !path.startsWith( \"/\" ) ) {\n      throw new SolrException( SolrException.ErrorCode.SERVER_ERROR, \n        \"The AdminHandler needs to be registered to a path.  Typically this is '/admin'\" );\n    }\n    // Remove the parent handler \n    core.registerRequestHandler(path, null);\n    if( !path.endsWith( \"/\" ) ) {\n      path += \"/\";\n    }\n    \n    StandardHandler[] list = new StandardHandler[] {\n      new StandardHandler( \"luke\", new LukeRequestHandler() ),\n      new StandardHandler( \"system\", new SystemInfoHandler() ),\n      new StandardHandler( \"plugins\", new PluginInfoHandler() ),\n      new StandardHandler( \"threads\", new ThreadDumpHandler() ),\n      new StandardHandler( \"properties\", new PropertiesRequestHandler() ),\n      new StandardHandler( \"file\", new ShowFileRequestHandler() )\n    };\n    \n    for( StandardHandler handler : list ) {\n      if( core.getRequestHandler( path+handler.name ) == null ) {\n        handler.handler.init( initArgs );\n        core.registerRequestHandler( path+handler.name, handler.handler );\n        if( handler.handler instanceof SolrCoreAware ) {\n          ((SolrCoreAware)handler).inform(core);\n        }\n      }\n    }\n  }\n\n","sourceOld":"  public void inform(SolrCore core) \n  {\n    String path = null;\n    for( Map.Entry<String, SolrRequestHandler> entry : core.getRequestHandlers().entrySet() ) {\n      if( entry.getValue() == this ) {\n        path = entry.getKey();\n        break;\n      }\n    }\n    if( path == null ) {\n      throw new SolrException( SolrException.ErrorCode.SERVER_ERROR, \n          \"The AdminHandler is not registered with the current core.\" );\n    }\n    if( !path.startsWith( \"/\" ) ) {\n      throw new SolrException( SolrException.ErrorCode.SERVER_ERROR, \n        \"The AdminHandler needs to be registered to a path.  Typically this is '/admin'\" );\n    }\n    // Remove the parent handler \n    core.registerRequestHandler(path, null);\n    if( !path.endsWith( \"/\" ) ) {\n      path += \"/\";\n    }\n    \n    StandardHandler[] list = new StandardHandler[] {\n      new StandardHandler( \"luke\", new LukeRequestHandler() ),\n      new StandardHandler( \"system\", new SystemInfoHandler() ),\n      new StandardHandler( \"plugins\", new PluginInfoHandler() ),\n      new StandardHandler( \"threads\", new ThreadDumpHandler() ),\n      new StandardHandler( \"properties\", new PropertiesRequestHandler() )\n    };\n    \n    for( StandardHandler handler : list ) {\n      if( core.getRequestHandler( path+handler.name ) == null ) {\n        handler.handler.init( initArgs );\n        core.registerRequestHandler( path+handler.name, handler.handler );\n        if( handler.handler instanceof SolrCoreAware ) {\n          ((SolrCoreAware)handler).inform(core);\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/handler/admin/AdminHandlers#inform(SolrCore).mjava","pathOld":"src/java/org/apache/solr/handler/admin/AdminHandlers#inform(SolrCore).mjava","sourceNew":"  public void inform(SolrCore core) \n  {\n    String path = null;\n    for( Map.Entry<String, SolrRequestHandler> entry : core.getRequestHandlers().entrySet() ) {\n      if( entry.getValue() == this ) {\n        path = entry.getKey();\n        break;\n      }\n    }\n    if( path == null ) {\n      throw new SolrException( SolrException.ErrorCode.SERVER_ERROR, \n          \"The AdminHandler is not registered with the current core.\" );\n    }\n    if( !path.startsWith( \"/\" ) ) {\n      throw new SolrException( SolrException.ErrorCode.SERVER_ERROR, \n        \"The AdminHandler needs to be registered to a path.  Typically this is '/admin'\" );\n    }\n    // Remove the parent handler \n    core.registerRequestHandler(path, null);\n    if( !path.endsWith( \"/\" ) ) {\n      path += \"/\";\n    }\n    \n    StandardHandler[] list = new StandardHandler[] {\n      new StandardHandler( \"luke\", new LukeRequestHandler() ),\n      new StandardHandler( \"system\", new SystemInfoHandler() ),\n      new StandardHandler( \"plugins\", new PluginInfoHandler() ),\n      new StandardHandler( \"threads\", new ThreadDumpHandler() ),\n      new StandardHandler( \"properties\", new PropertiesRequestHandler() ),\n      new StandardHandler( \"file\", new ShowFileRequestHandler() )\n    };\n    \n    for( StandardHandler handler : list ) {\n      if( core.getRequestHandler( path+handler.name ) == null ) {\n        handler.handler.init( initArgs );\n        core.registerRequestHandler( path+handler.name, handler.handler );\n        if( handler.handler instanceof SolrCoreAware ) {\n          ((SolrCoreAware)handler).inform(core);\n        }\n      }\n    }\n  }\n\n","sourceOld":"  public void inform(SolrCore core) \n  {\n    String path = null;\n    for( Map.Entry<String, SolrRequestHandler> entry : core.getRequestHandlers().entrySet() ) {\n      if( entry.getValue() == this ) {\n        path = entry.getKey();\n        break;\n      }\n    }\n    if( path == null ) {\n      throw new SolrException( SolrException.ErrorCode.SERVER_ERROR, \n          \"The AdminHandler is not registered with the current core.\" );\n    }\n    if( !path.startsWith( \"/\" ) ) {\n      throw new SolrException( SolrException.ErrorCode.SERVER_ERROR, \n        \"The AdminHandler needs to be registered to a path.  Typically this is '/admin'\" );\n    }\n    // Remove the parent handler \n    core.registerRequestHandler(path, null);\n    if( !path.endsWith( \"/\" ) ) {\n      path += \"/\";\n    }\n    \n    StandardHandler[] list = new StandardHandler[] {\n      new StandardHandler( \"luke\", new LukeRequestHandler() ),\n      new StandardHandler( \"system\", new SystemInfoHandler() ),\n      new StandardHandler( \"plugins\", new PluginInfoHandler() ),\n      new StandardHandler( \"threads\", new ThreadDumpHandler() ),\n      new StandardHandler( \"properties\", new PropertiesRequestHandler() ),\n      new StandardHandler( \"file\", new ShowFileRequestHandler() )\n    };\n    \n    for( StandardHandler handler : list ) {\n      if( core.getRequestHandler( path+handler.name ) == null ) {\n        handler.handler.init( initArgs );\n        core.registerRequestHandler( path+handler.name, handler.handler );\n        if( handler.handler instanceof SolrCoreAware ) {\n          ((SolrCoreAware)handler).inform(core);\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3eb62bd8ac67d982b8eb36c180c96f3cbb8ea1ae":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"5947b6265298cdb14a6489a5fbaf8073a1b7203d":["3eb62bd8ac67d982b8eb36c180c96f3cbb8ea1ae"],"ad94625fb8d088209f46650c8097196fec67f00c":["5947b6265298cdb14a6489a5fbaf8073a1b7203d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"3eb62bd8ac67d982b8eb36c180c96f3cbb8ea1ae":["5947b6265298cdb14a6489a5fbaf8073a1b7203d"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["3eb62bd8ac67d982b8eb36c180c96f3cbb8ea1ae"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5947b6265298cdb14a6489a5fbaf8073a1b7203d":["ad94625fb8d088209f46650c8097196fec67f00c"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}