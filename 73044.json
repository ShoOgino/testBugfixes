{"path":"solr/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testReloadOnStart().mjava","commits":[{"id":"893269407f5c988a4b2ee13c7ffc01ec43136c1d","date":1268598046,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testReloadOnStart().mjava","pathOld":"/dev/null","sourceNew":"  public void testReloadOnStart() throws Exception {\n    assertU(adoc(\"id\", \"0\", \"lowerfilt\", \"This is a title\"));\n    assertU(commit());\n    SolrQueryRequest request = req(\"qt\", \"spellCheckCompRH\", \"q\", \"*:*\",\n        \"spellcheck.q\", \"ttle\", \"spellcheck\", \"true\", \"spellcheck.dictionary\",\n        \"default\", \"spellcheck.build\", \"true\");\n    assertQ(request, \"//arr[@name='suggestion'][.='title']\");\n\n    NamedList args = new NamedList();\n    NamedList spellchecker = new NamedList();\n    spellchecker.add(AbstractLuceneSpellChecker.DICTIONARY_NAME, \"default\");\n    spellchecker.add(AbstractLuceneSpellChecker.FIELD, \"lowerfilt\");\n    spellchecker.add(AbstractLuceneSpellChecker.INDEX_DIR, \"spellchecker1\");\n    args.add(\"spellchecker\", spellchecker);\n\n    SpellCheckComponent checker = new SpellCheckComponent();\n    checker.init(args);\n    checker.inform(h.getCore());\n\n    request = req(\"qt\", \"spellCheckCompRH\", \"q\", \"*:*\", \"spellcheck.q\", \"ttle\",\n        \"spellcheck\", \"true\", \"spellcheck.dictionary\", \"default\",\n        \"spellcheck.reload\", \"true\");\n    ResponseBuilder rb = new ResponseBuilder();\n    rb.req = request;\n    rb.rsp = new SolrQueryResponse();\n    rb.components = new ArrayList(h.getCore().getSearchComponents().values());\n    checker.prepare(rb);\n\n    try {\n      checker.process(rb);\n    } catch (NullPointerException e) {\n      fail(\"NullPointerException due to reload not initializing analyzers\");\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","date":1268599006,"type":4,"author":"Mark Robert Miller","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testReloadOnStart().mjava","sourceNew":null,"sourceOld":"  public void testReloadOnStart() throws Exception {\n    assertU(adoc(\"id\", \"0\", \"lowerfilt\", \"This is a title\"));\n    assertU(commit());\n    SolrQueryRequest request = req(\"qt\", \"spellCheckCompRH\", \"q\", \"*:*\",\n        \"spellcheck.q\", \"ttle\", \"spellcheck\", \"true\", \"spellcheck.dictionary\",\n        \"default\", \"spellcheck.build\", \"true\");\n    assertQ(request, \"//arr[@name='suggestion'][.='title']\");\n\n    NamedList args = new NamedList();\n    NamedList spellchecker = new NamedList();\n    spellchecker.add(AbstractLuceneSpellChecker.DICTIONARY_NAME, \"default\");\n    spellchecker.add(AbstractLuceneSpellChecker.FIELD, \"lowerfilt\");\n    spellchecker.add(AbstractLuceneSpellChecker.INDEX_DIR, \"spellchecker1\");\n    args.add(\"spellchecker\", spellchecker);\n\n    SpellCheckComponent checker = new SpellCheckComponent();\n    checker.init(args);\n    checker.inform(h.getCore());\n\n    request = req(\"qt\", \"spellCheckCompRH\", \"q\", \"*:*\", \"spellcheck.q\", \"ttle\",\n        \"spellcheck\", \"true\", \"spellcheck.dictionary\", \"default\",\n        \"spellcheck.reload\", \"true\");\n    ResponseBuilder rb = new ResponseBuilder();\n    rb.req = request;\n    rb.rsp = new SolrQueryResponse();\n    rb.components = new ArrayList(h.getCore().getSearchComponents().values());\n    checker.prepare(rb);\n\n    try {\n      checker.process(rb);\n    } catch (NullPointerException e) {\n      fail(\"NullPointerException due to reload not initializing analyzers\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testReloadOnStart().mjava","pathOld":"src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testReloadOnStart().mjava","sourceNew":"  public void testReloadOnStart() throws Exception {\n    assertU(adoc(\"id\", \"0\", \"lowerfilt\", \"This is a title\"));\n    assertU(commit());\n    SolrQueryRequest request = req(\"qt\", \"spellCheckCompRH\", \"q\", \"*:*\",\n        \"spellcheck.q\", \"ttle\", \"spellcheck\", \"true\", \"spellcheck.dictionary\",\n        \"default\", \"spellcheck.build\", \"true\");\n    assertQ(request, \"//arr[@name='suggestion'][.='title']\");\n\n    NamedList args = new NamedList();\n    NamedList spellchecker = new NamedList();\n    spellchecker.add(AbstractLuceneSpellChecker.DICTIONARY_NAME, \"default\");\n    spellchecker.add(AbstractLuceneSpellChecker.FIELD, \"lowerfilt\");\n    spellchecker.add(AbstractLuceneSpellChecker.INDEX_DIR, \"spellchecker1\");\n    args.add(\"spellchecker\", spellchecker);\n\n    SpellCheckComponent checker = new SpellCheckComponent();\n    checker.init(args);\n    checker.inform(h.getCore());\n\n    request = req(\"qt\", \"spellCheckCompRH\", \"q\", \"*:*\", \"spellcheck.q\", \"ttle\",\n        \"spellcheck\", \"true\", \"spellcheck.dictionary\", \"default\",\n        \"spellcheck.reload\", \"true\");\n    ResponseBuilder rb = new ResponseBuilder();\n    rb.req = request;\n    rb.rsp = new SolrQueryResponse();\n    rb.components = new ArrayList(h.getCore().getSearchComponents().values());\n    checker.prepare(rb);\n\n    try {\n      checker.process(rb);\n    } catch (NullPointerException e) {\n      fail(\"NullPointerException due to reload not initializing analyzers\");\n    }\n  }\n\n","sourceOld":"  public void testReloadOnStart() throws Exception {\n    assertU(adoc(\"id\", \"0\", \"lowerfilt\", \"This is a title\"));\n    assertU(commit());\n    SolrQueryRequest request = req(\"qt\", \"spellCheckCompRH\", \"q\", \"*:*\",\n        \"spellcheck.q\", \"ttle\", \"spellcheck\", \"true\", \"spellcheck.dictionary\",\n        \"default\", \"spellcheck.build\", \"true\");\n    assertQ(request, \"//arr[@name='suggestion'][.='title']\");\n\n    NamedList args = new NamedList();\n    NamedList spellchecker = new NamedList();\n    spellchecker.add(AbstractLuceneSpellChecker.DICTIONARY_NAME, \"default\");\n    spellchecker.add(AbstractLuceneSpellChecker.FIELD, \"lowerfilt\");\n    spellchecker.add(AbstractLuceneSpellChecker.INDEX_DIR, \"spellchecker1\");\n    args.add(\"spellchecker\", spellchecker);\n\n    SpellCheckComponent checker = new SpellCheckComponent();\n    checker.init(args);\n    checker.inform(h.getCore());\n\n    request = req(\"qt\", \"spellCheckCompRH\", \"q\", \"*:*\", \"spellcheck.q\", \"ttle\",\n        \"spellcheck\", \"true\", \"spellcheck.dictionary\", \"default\",\n        \"spellcheck.reload\", \"true\");\n    ResponseBuilder rb = new ResponseBuilder();\n    rb.req = request;\n    rb.rsp = new SolrQueryResponse();\n    rb.components = new ArrayList(h.getCore().getSearchComponents().values());\n    checker.prepare(rb);\n\n    try {\n      checker.process(rb);\n    } catch (NullPointerException e) {\n      fail(\"NullPointerException due to reload not initializing analyzers\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1da8d55113b689b06716246649de6f62430f15c0","date":1453508340,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testReloadOnStart().mjava","pathOld":"/dev/null","sourceNew":"  public void testReloadOnStart() throws Exception {\n    assertU(adoc(\"id\", \"0\", \"lowerfilt\", \"This is a title\"));\n    assertU(commit());\n    SolrQueryRequest request = req(\"qt\", \"spellCheckCompRH\", \"q\", \"*:*\",\n        \"spellcheck.q\", \"ttle\", \"spellcheck\", \"true\", \"spellcheck.dictionary\",\n        \"default\", \"spellcheck.build\", \"true\");\n    assertQ(request, \"//arr[@name='suggestion'][.='title']\");\n\n    NamedList args = new NamedList();\n    NamedList spellchecker = new NamedList();\n    spellchecker.add(AbstractLuceneSpellChecker.DICTIONARY_NAME, \"default\");\n    spellchecker.add(AbstractLuceneSpellChecker.FIELD, \"lowerfilt\");\n    spellchecker.add(AbstractLuceneSpellChecker.INDEX_DIR, \"spellchecker1\");\n    args.add(\"spellchecker\", spellchecker);\n\n    SpellCheckComponent checker = new SpellCheckComponent();\n    checker.init(args);\n    checker.inform(h.getCore());\n\n    request = req(\"qt\", \"spellCheckCompRH\", \"q\", \"*:*\", \"spellcheck.q\", \"ttle\",\n        \"spellcheck\", \"true\", \"spellcheck.dictionary\", \"default\",\n        \"spellcheck.reload\", \"true\");\n    ResponseBuilder rb = new ResponseBuilder();\n    rb.req = request;\n    rb.rsp = new SolrQueryResponse();\n    rb.components = new ArrayList(h.getCore().getSearchComponents().values());\n    checker.prepare(rb);\n\n    try {\n      checker.process(rb);\n    } catch (NullPointerException e) {\n      fail(\"NullPointerException due to reload not initializing analyzers\");\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d94d4f1c6cd11a42dfb22d21e36fa6b582ee09c3","date":1269092670,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testReloadOnStart().mjava","pathOld":"solr/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testReloadOnStart().mjava","sourceNew":"  @Test\n  public void testReloadOnStart() throws Exception {\n    assertU(adoc(\"id\", \"0\", \"lowerfilt\", \"This is a title\"));\n    assertU(commit());\n    SolrQueryRequest request = req(\"qt\", \"spellCheckCompRH\", \"q\", \"*:*\",\n        \"spellcheck.q\", \"ttle\", \"spellcheck\", \"true\", \"spellcheck.dictionary\",\n        \"default\", \"spellcheck.build\", \"true\");\n    assertQ(request, \"//arr[@name='suggestion'][.='title']\");\n\n    NamedList args = new NamedList();\n    NamedList spellchecker = new NamedList();\n    spellchecker.add(AbstractLuceneSpellChecker.DICTIONARY_NAME, \"default\");\n    spellchecker.add(AbstractLuceneSpellChecker.FIELD, \"lowerfilt\");\n    spellchecker.add(AbstractLuceneSpellChecker.INDEX_DIR, \"spellchecker1\");\n    args.add(\"spellchecker\", spellchecker);\n\n    SpellCheckComponent checker = new SpellCheckComponent();\n    checker.init(args);\n    checker.inform(h.getCore());\n\n    request = req(\"qt\", \"spellCheckCompRH\", \"q\", \"*:*\", \"spellcheck.q\", \"ttle\",\n        \"spellcheck\", \"true\", \"spellcheck.dictionary\", \"default\",\n        \"spellcheck.reload\", \"true\");\n    ResponseBuilder rb = new ResponseBuilder();\n    rb.req = request;\n    rb.rsp = new SolrQueryResponse();\n    rb.components = new ArrayList(h.getCore().getSearchComponents().values());\n    checker.prepare(rb);\n\n    try {\n      checker.process(rb);\n    } catch (NullPointerException e) {\n      fail(\"NullPointerException due to reload not initializing analyzers\");\n    }\n  }\n\n","sourceOld":"  public void testReloadOnStart() throws Exception {\n    assertU(adoc(\"id\", \"0\", \"lowerfilt\", \"This is a title\"));\n    assertU(commit());\n    SolrQueryRequest request = req(\"qt\", \"spellCheckCompRH\", \"q\", \"*:*\",\n        \"spellcheck.q\", \"ttle\", \"spellcheck\", \"true\", \"spellcheck.dictionary\",\n        \"default\", \"spellcheck.build\", \"true\");\n    assertQ(request, \"//arr[@name='suggestion'][.='title']\");\n\n    NamedList args = new NamedList();\n    NamedList spellchecker = new NamedList();\n    spellchecker.add(AbstractLuceneSpellChecker.DICTIONARY_NAME, \"default\");\n    spellchecker.add(AbstractLuceneSpellChecker.FIELD, \"lowerfilt\");\n    spellchecker.add(AbstractLuceneSpellChecker.INDEX_DIR, \"spellchecker1\");\n    args.add(\"spellchecker\", spellchecker);\n\n    SpellCheckComponent checker = new SpellCheckComponent();\n    checker.init(args);\n    checker.inform(h.getCore());\n\n    request = req(\"qt\", \"spellCheckCompRH\", \"q\", \"*:*\", \"spellcheck.q\", \"ttle\",\n        \"spellcheck\", \"true\", \"spellcheck.dictionary\", \"default\",\n        \"spellcheck.reload\", \"true\");\n    ResponseBuilder rb = new ResponseBuilder();\n    rb.req = request;\n    rb.rsp = new SolrQueryResponse();\n    rb.components = new ArrayList(h.getCore().getSearchComponents().values());\n    checker.prepare(rb);\n\n    try {\n      checker.process(rb);\n    } catch (NullPointerException e) {\n      fail(\"NullPointerException due to reload not initializing analyzers\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4f176b352a988eb72e2af3a739c6de8bf24808ce","date":1287101027,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testReloadOnStart().mjava","pathOld":"solr/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testReloadOnStart().mjava","sourceNew":"  @Test\n  public void testReloadOnStart() throws Exception {\n    assertU(adoc(\"id\", \"0\", \"lowerfilt\", \"This is a title\"));\n    assertU(commit());\n    SolrQueryRequest request = req(\"qt\", \"spellCheckCompRH\", \"q\", \"*:*\",\n        \"spellcheck.q\", \"ttle\", \"spellcheck\", \"true\", \"spellcheck.dictionary\",\n        \"default\", \"spellcheck.build\", \"true\");\n    assertQ(request, \"//arr[@name='suggestion'][.='title']\");\n\n    NamedList args = new NamedList();\n    NamedList spellchecker = new NamedList();\n    spellchecker.add(AbstractLuceneSpellChecker.DICTIONARY_NAME, \"default\");\n    spellchecker.add(AbstractLuceneSpellChecker.FIELD, \"lowerfilt\");\n    spellchecker.add(AbstractLuceneSpellChecker.INDEX_DIR, \"spellchecker1\");\n    args.add(\"spellchecker\", spellchecker);\n\n    // TODO: this is really fragile - find a higher level way to test this.\n    SpellCheckComponent checker = new SpellCheckComponent();\n    checker.init(args);\n    checker.inform(h.getCore());\n\n    request = req(\"qt\", \"spellCheckCompRH\", \"q\", \"*:*\", \"spellcheck.q\", \"ttle\",\n        \"spellcheck\", \"true\", \"spellcheck.dictionary\", \"default\",\n        \"spellcheck.reload\", \"true\");\n    ResponseBuilder rb = new ResponseBuilder();\n    rb.req = request;\n    rb.rsp = new SolrQueryResponse();\n    rb.components = new ArrayList(h.getCore().getSearchComponents().values());\n    checker.prepare(rb);\n\n    try {\n      checker.process(rb);\n    } catch (NullPointerException e) {\n      fail(\"NullPointerException due to reload not initializing analyzers\");\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testReloadOnStart() throws Exception {\n    assertU(adoc(\"id\", \"0\", \"lowerfilt\", \"This is a title\"));\n    assertU(commit());\n    SolrQueryRequest request = req(\"qt\", \"spellCheckCompRH\", \"q\", \"*:*\",\n        \"spellcheck.q\", \"ttle\", \"spellcheck\", \"true\", \"spellcheck.dictionary\",\n        \"default\", \"spellcheck.build\", \"true\");\n    assertQ(request, \"//arr[@name='suggestion'][.='title']\");\n\n    NamedList args = new NamedList();\n    NamedList spellchecker = new NamedList();\n    spellchecker.add(AbstractLuceneSpellChecker.DICTIONARY_NAME, \"default\");\n    spellchecker.add(AbstractLuceneSpellChecker.FIELD, \"lowerfilt\");\n    spellchecker.add(AbstractLuceneSpellChecker.INDEX_DIR, \"spellchecker1\");\n    args.add(\"spellchecker\", spellchecker);\n\n    SpellCheckComponent checker = new SpellCheckComponent();\n    checker.init(args);\n    checker.inform(h.getCore());\n\n    request = req(\"qt\", \"spellCheckCompRH\", \"q\", \"*:*\", \"spellcheck.q\", \"ttle\",\n        \"spellcheck\", \"true\", \"spellcheck.dictionary\", \"default\",\n        \"spellcheck.reload\", \"true\");\n    ResponseBuilder rb = new ResponseBuilder();\n    rb.req = request;\n    rb.rsp = new SolrQueryResponse();\n    rb.components = new ArrayList(h.getCore().getSearchComponents().values());\n    checker.prepare(rb);\n\n    try {\n      checker.process(rb);\n    } catch (NullPointerException e) {\n      fail(\"NullPointerException due to reload not initializing analyzers\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"22fa530f69d5072497256bf739fd597d089bcd0b","date":1287103853,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testReloadOnStart().mjava","pathOld":"solr/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testReloadOnStart().mjava","sourceNew":"  @Test\n  public void testReloadOnStart() throws Exception {\n    assertU(adoc(\"id\", \"0\", \"lowerfilt\", \"This is a title\"));\n    assertU(commit());\n    SolrQueryRequest request = req(\"qt\", \"spellCheckCompRH\", \"q\", \"*:*\",\n        \"spellcheck.q\", \"ttle\", \"spellcheck\", \"true\", \"spellcheck.dictionary\",\n        \"default\", \"spellcheck.build\", \"true\");\n    assertQ(request, \"//arr[@name='suggestion'][.='title']\");\n\n    NamedList args = new NamedList();\n    NamedList spellchecker = new NamedList();\n    spellchecker.add(AbstractLuceneSpellChecker.DICTIONARY_NAME, \"default\");\n    spellchecker.add(AbstractLuceneSpellChecker.FIELD, \"lowerfilt\");\n    spellchecker.add(AbstractLuceneSpellChecker.INDEX_DIR, \"spellchecker1\");\n    args.add(\"spellchecker\", spellchecker);\n\n    // TODO: this is really fragile and error prone - find a higher level way to test this.\n    SpellCheckComponent checker = new SpellCheckComponent();\n    checker.init(args);\n    checker.inform(h.getCore());\n\n    request = req(\"qt\", \"spellCheckCompRH\", \"q\", \"*:*\", \"spellcheck.q\", \"ttle\",\n        \"spellcheck\", \"true\", \"spellcheck.dictionary\", \"default\",\n        \"spellcheck.reload\", \"true\");\n    ResponseBuilder rb = new ResponseBuilder();\n    rb.req = request;\n    rb.rsp = new SolrQueryResponse();\n    rb.components = new ArrayList(h.getCore().getSearchComponents().values());\n    checker.prepare(rb);\n\n    try {\n      checker.process(rb);\n    } catch (NullPointerException e) {\n      fail(\"NullPointerException due to reload not initializing analyzers\");\n    }\n\n    rb.req.close();\n  }\n\n","sourceOld":"  @Test\n  public void testReloadOnStart() throws Exception {\n    assertU(adoc(\"id\", \"0\", \"lowerfilt\", \"This is a title\"));\n    assertU(commit());\n    SolrQueryRequest request = req(\"qt\", \"spellCheckCompRH\", \"q\", \"*:*\",\n        \"spellcheck.q\", \"ttle\", \"spellcheck\", \"true\", \"spellcheck.dictionary\",\n        \"default\", \"spellcheck.build\", \"true\");\n    assertQ(request, \"//arr[@name='suggestion'][.='title']\");\n\n    NamedList args = new NamedList();\n    NamedList spellchecker = new NamedList();\n    spellchecker.add(AbstractLuceneSpellChecker.DICTIONARY_NAME, \"default\");\n    spellchecker.add(AbstractLuceneSpellChecker.FIELD, \"lowerfilt\");\n    spellchecker.add(AbstractLuceneSpellChecker.INDEX_DIR, \"spellchecker1\");\n    args.add(\"spellchecker\", spellchecker);\n\n    // TODO: this is really fragile - find a higher level way to test this.\n    SpellCheckComponent checker = new SpellCheckComponent();\n    checker.init(args);\n    checker.inform(h.getCore());\n\n    request = req(\"qt\", \"spellCheckCompRH\", \"q\", \"*:*\", \"spellcheck.q\", \"ttle\",\n        \"spellcheck\", \"true\", \"spellcheck.dictionary\", \"default\",\n        \"spellcheck.reload\", \"true\");\n    ResponseBuilder rb = new ResponseBuilder();\n    rb.req = request;\n    rb.rsp = new SolrQueryResponse();\n    rb.components = new ArrayList(h.getCore().getSearchComponents().values());\n    checker.prepare(rb);\n\n    try {\n      checker.process(rb);\n    } catch (NullPointerException e) {\n      fail(\"NullPointerException due to reload not initializing analyzers\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4ecea1664e8617d82eca3b8055a3c37cb4da8511","date":1287578668,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testReloadOnStart().mjava","pathOld":"solr/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testReloadOnStart().mjava","sourceNew":"  @Test\n  public void testReloadOnStart() throws Exception {\n    assertU(adoc(\"id\", \"0\", \"lowerfilt\", \"This is a title\"));\n    assertU(commit());\n    SolrQueryRequest request = req(\"qt\", \"spellCheckCompRH\", \"q\", \"*:*\",\n        \"spellcheck.q\", \"ttle\", \"spellcheck\", \"true\", \"spellcheck.dictionary\",\n        \"default\", \"spellcheck.build\", \"true\");\n    assertQ(request, \"//arr[@name='suggestion'][.='title']\");\n\n    NamedList args = new NamedList();\n    NamedList spellchecker = new NamedList();\n    spellchecker.add(AbstractLuceneSpellChecker.DICTIONARY_NAME, \"default\");\n    spellchecker.add(AbstractLuceneSpellChecker.FIELD, \"lowerfilt\");\n    spellchecker.add(AbstractLuceneSpellChecker.INDEX_DIR, \"spellchecker1\");\n    args.add(\"spellchecker\", spellchecker);\n\n    // TODO: this is really fragile and error prone - find a higher level way to test this.\n    SpellCheckComponent checker = new SpellCheckComponent();\n    checker.init(args);\n    checker.inform(h.getCore());\n\n    request = req(\"qt\", \"spellCheckCompRH\", \"q\", \"*:*\", \"spellcheck.q\", \"ttle\",\n        \"spellcheck\", \"true\", \"spellcheck.dictionary\", \"default\",\n        \"spellcheck.reload\", \"true\");\n    ResponseBuilder rb = new ResponseBuilder();\n    rb.req = request;\n    rb.rsp = new SolrQueryResponse();\n    rb.components = new ArrayList(h.getCore().getSearchComponents().values());\n    checker.prepare(rb);\n\n    try {\n      checker.process(rb);\n    } catch (NullPointerException e) {\n      fail(\"NullPointerException due to reload not initializing analyzers\");\n    }\n\n    rb.req.close();\n  }\n\n","sourceOld":"  @Test\n  public void testReloadOnStart() throws Exception {\n    assertU(adoc(\"id\", \"0\", \"lowerfilt\", \"This is a title\"));\n    assertU(commit());\n    SolrQueryRequest request = req(\"qt\", \"spellCheckCompRH\", \"q\", \"*:*\",\n        \"spellcheck.q\", \"ttle\", \"spellcheck\", \"true\", \"spellcheck.dictionary\",\n        \"default\", \"spellcheck.build\", \"true\");\n    assertQ(request, \"//arr[@name='suggestion'][.='title']\");\n\n    NamedList args = new NamedList();\n    NamedList spellchecker = new NamedList();\n    spellchecker.add(AbstractLuceneSpellChecker.DICTIONARY_NAME, \"default\");\n    spellchecker.add(AbstractLuceneSpellChecker.FIELD, \"lowerfilt\");\n    spellchecker.add(AbstractLuceneSpellChecker.INDEX_DIR, \"spellchecker1\");\n    args.add(\"spellchecker\", spellchecker);\n\n    SpellCheckComponent checker = new SpellCheckComponent();\n    checker.init(args);\n    checker.inform(h.getCore());\n\n    request = req(\"qt\", \"spellCheckCompRH\", \"q\", \"*:*\", \"spellcheck.q\", \"ttle\",\n        \"spellcheck\", \"true\", \"spellcheck.dictionary\", \"default\",\n        \"spellcheck.reload\", \"true\");\n    ResponseBuilder rb = new ResponseBuilder();\n    rb.req = request;\n    rb.rsp = new SolrQueryResponse();\n    rb.components = new ArrayList(h.getCore().getSearchComponents().values());\n    checker.prepare(rb);\n\n    try {\n      checker.process(rb);\n    } catch (NullPointerException e) {\n      fail(\"NullPointerException due to reload not initializing analyzers\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"227a2cd43fc1affe16eb4c4ab4423fbc276bd81d","date":1292210954,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testReloadOnStart().mjava","pathOld":"solr/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testReloadOnStart().mjava","sourceNew":"  @Test\n  public void testReloadOnStart() throws Exception {\n    assertU(adoc(\"id\", \"0\", \"lowerfilt\", \"This is a title\"));\n    assertU(commit());\n    SolrQueryRequest request = req(\"qt\", \"spellCheckCompRH\", \"q\", \"*:*\",\n        \"spellcheck.q\", \"ttle\", \"spellcheck\", \"true\", \"spellcheck.dictionary\",\n        \"default\", \"spellcheck.build\", \"true\");\n    assertQ(request, \"//arr[@name='suggestion'][.='title']\");\n\n    NamedList args = new NamedList();\n    NamedList spellchecker = new NamedList();\n    spellchecker.add(AbstractLuceneSpellChecker.DICTIONARY_NAME, \"default\");\n    spellchecker.add(AbstractLuceneSpellChecker.FIELD, \"lowerfilt\");\n    spellchecker.add(AbstractLuceneSpellChecker.INDEX_DIR, \"spellchecker1\");\n    args.add(\"spellchecker\", spellchecker);\n\n    // TODO: this is really fragile and error prone - find a higher level way to test this.\n    SpellCheckComponent checker = new SpellCheckComponent();\n    checker.init(args);\n    checker.inform(h.getCore());\n\n    request = req(\"qt\", \"spellCheckCompRH\", \"q\", \"*:*\", \"spellcheck.q\", \"ttle\",\n        \"spellcheck\", \"true\", \"spellcheck.dictionary\", \"default\",\n        \"spellcheck.reload\", \"true\");\n    ResponseBuilder rb = new ResponseBuilder(request, new SolrQueryResponse(), new ArrayList(h.getCore().getSearchComponents().values()));\n    checker.prepare(rb);\n\n    try {\n      checker.process(rb);\n    } catch (NullPointerException e) {\n      fail(\"NullPointerException due to reload not initializing analyzers\");\n    }\n\n    rb.req.close();\n  }\n\n","sourceOld":"  @Test\n  public void testReloadOnStart() throws Exception {\n    assertU(adoc(\"id\", \"0\", \"lowerfilt\", \"This is a title\"));\n    assertU(commit());\n    SolrQueryRequest request = req(\"qt\", \"spellCheckCompRH\", \"q\", \"*:*\",\n        \"spellcheck.q\", \"ttle\", \"spellcheck\", \"true\", \"spellcheck.dictionary\",\n        \"default\", \"spellcheck.build\", \"true\");\n    assertQ(request, \"//arr[@name='suggestion'][.='title']\");\n\n    NamedList args = new NamedList();\n    NamedList spellchecker = new NamedList();\n    spellchecker.add(AbstractLuceneSpellChecker.DICTIONARY_NAME, \"default\");\n    spellchecker.add(AbstractLuceneSpellChecker.FIELD, \"lowerfilt\");\n    spellchecker.add(AbstractLuceneSpellChecker.INDEX_DIR, \"spellchecker1\");\n    args.add(\"spellchecker\", spellchecker);\n\n    // TODO: this is really fragile and error prone - find a higher level way to test this.\n    SpellCheckComponent checker = new SpellCheckComponent();\n    checker.init(args);\n    checker.inform(h.getCore());\n\n    request = req(\"qt\", \"spellCheckCompRH\", \"q\", \"*:*\", \"spellcheck.q\", \"ttle\",\n        \"spellcheck\", \"true\", \"spellcheck.dictionary\", \"default\",\n        \"spellcheck.reload\", \"true\");\n    ResponseBuilder rb = new ResponseBuilder();\n    rb.req = request;\n    rb.rsp = new SolrQueryResponse();\n    rb.components = new ArrayList(h.getCore().getSearchComponents().values());\n    checker.prepare(rb);\n\n    try {\n      checker.process(rb);\n    } catch (NullPointerException e) {\n      fail(\"NullPointerException due to reload not initializing analyzers\");\n    }\n\n    rb.req.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab5cb6a74aefb78aa0569857970b9151dfe2e787","date":1292842407,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testReloadOnStart().mjava","pathOld":"solr/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testReloadOnStart().mjava","sourceNew":"  @Test\n  public void testReloadOnStart() throws Exception {\n    assertU(adoc(\"id\", \"0\", \"lowerfilt\", \"This is a title\"));\n    assertU(commit());\n    SolrQueryRequest request = req(\"qt\", \"spellCheckCompRH\", \"q\", \"*:*\",\n        \"spellcheck.q\", \"ttle\", \"spellcheck\", \"true\", \"spellcheck.dictionary\",\n        \"default\", \"spellcheck.build\", \"true\");\n    assertQ(request, \"//arr[@name='suggestion'][.='title']\");\n\n    NamedList args = new NamedList();\n    NamedList spellchecker = new NamedList();\n    spellchecker.add(AbstractLuceneSpellChecker.DICTIONARY_NAME, \"default\");\n    spellchecker.add(AbstractLuceneSpellChecker.FIELD, \"lowerfilt\");\n    spellchecker.add(AbstractLuceneSpellChecker.INDEX_DIR, \"spellchecker1\");\n    args.add(\"spellchecker\", spellchecker);\n\n    // TODO: this is really fragile and error prone - find a higher level way to test this.\n    SpellCheckComponent checker = new SpellCheckComponent();\n    checker.init(args);\n    checker.inform(h.getCore());\n\n    request = req(\"qt\", \"spellCheckCompRH\", \"q\", \"*:*\", \"spellcheck.q\", \"ttle\",\n        \"spellcheck\", \"true\", \"spellcheck.dictionary\", \"default\",\n        \"spellcheck.reload\", \"true\");\n    ResponseBuilder rb = new ResponseBuilder(request, new SolrQueryResponse(), new ArrayList(h.getCore().getSearchComponents().values()));\n    checker.prepare(rb);\n\n    try {\n      checker.process(rb);\n    } catch (NullPointerException e) {\n      fail(\"NullPointerException due to reload not initializing analyzers\");\n    }\n\n    rb.req.close();\n  }\n\n","sourceOld":"  @Test\n  public void testReloadOnStart() throws Exception {\n    assertU(adoc(\"id\", \"0\", \"lowerfilt\", \"This is a title\"));\n    assertU(commit());\n    SolrQueryRequest request = req(\"qt\", \"spellCheckCompRH\", \"q\", \"*:*\",\n        \"spellcheck.q\", \"ttle\", \"spellcheck\", \"true\", \"spellcheck.dictionary\",\n        \"default\", \"spellcheck.build\", \"true\");\n    assertQ(request, \"//arr[@name='suggestion'][.='title']\");\n\n    NamedList args = new NamedList();\n    NamedList spellchecker = new NamedList();\n    spellchecker.add(AbstractLuceneSpellChecker.DICTIONARY_NAME, \"default\");\n    spellchecker.add(AbstractLuceneSpellChecker.FIELD, \"lowerfilt\");\n    spellchecker.add(AbstractLuceneSpellChecker.INDEX_DIR, \"spellchecker1\");\n    args.add(\"spellchecker\", spellchecker);\n\n    // TODO: this is really fragile and error prone - find a higher level way to test this.\n    SpellCheckComponent checker = new SpellCheckComponent();\n    checker.init(args);\n    checker.inform(h.getCore());\n\n    request = req(\"qt\", \"spellCheckCompRH\", \"q\", \"*:*\", \"spellcheck.q\", \"ttle\",\n        \"spellcheck\", \"true\", \"spellcheck.dictionary\", \"default\",\n        \"spellcheck.reload\", \"true\");\n    ResponseBuilder rb = new ResponseBuilder();\n    rb.req = request;\n    rb.rsp = new SolrQueryResponse();\n    rb.components = new ArrayList(h.getCore().getSearchComponents().values());\n    checker.prepare(rb);\n\n    try {\n      checker.process(rb);\n    } catch (NullPointerException e) {\n      fail(\"NullPointerException due to reload not initializing analyzers\");\n    }\n\n    rb.req.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testReloadOnStart().mjava","pathOld":"solr/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testReloadOnStart().mjava","sourceNew":"  @Test\n  public void testReloadOnStart() throws Exception {\n    assertU(adoc(\"id\", \"0\", \"lowerfilt\", \"This is a title\"));\n    assertU(commit());\n    SolrQueryRequest request = req(\"qt\", \"spellCheckCompRH\", \"q\", \"*:*\",\n        \"spellcheck.q\", \"ttle\", \"spellcheck\", \"true\", \"spellcheck.dictionary\",\n        \"default\", \"spellcheck.build\", \"true\");\n    assertQ(request, \"//arr[@name='suggestion'][.='title']\");\n\n    NamedList args = new NamedList();\n    NamedList spellchecker = new NamedList();\n    spellchecker.add(AbstractLuceneSpellChecker.DICTIONARY_NAME, \"default\");\n    spellchecker.add(AbstractLuceneSpellChecker.FIELD, \"lowerfilt\");\n    spellchecker.add(AbstractLuceneSpellChecker.INDEX_DIR, \"spellchecker1\");\n    args.add(\"spellchecker\", spellchecker);\n\n    // TODO: this is really fragile and error prone - find a higher level way to test this.\n    SpellCheckComponent checker = new SpellCheckComponent();\n    checker.init(args);\n    checker.inform(h.getCore());\n\n    request = req(\"qt\", \"spellCheckCompRH\", \"q\", \"*:*\", \"spellcheck.q\", \"ttle\",\n        \"spellcheck\", \"true\", \"spellcheck.dictionary\", \"default\",\n        \"spellcheck.reload\", \"true\");\n    ResponseBuilder rb = new ResponseBuilder(request, new SolrQueryResponse(), new ArrayList(h.getCore().getSearchComponents().values()));\n    checker.prepare(rb);\n\n    try {\n      checker.process(rb);\n    } catch (NullPointerException e) {\n      fail(\"NullPointerException due to reload not initializing analyzers\");\n    }\n\n    rb.req.close();\n  }\n\n","sourceOld":"  @Test\n  public void testReloadOnStart() throws Exception {\n    assertU(adoc(\"id\", \"0\", \"lowerfilt\", \"This is a title\"));\n    assertU(commit());\n    SolrQueryRequest request = req(\"qt\", \"spellCheckCompRH\", \"q\", \"*:*\",\n        \"spellcheck.q\", \"ttle\", \"spellcheck\", \"true\", \"spellcheck.dictionary\",\n        \"default\", \"spellcheck.build\", \"true\");\n    assertQ(request, \"//arr[@name='suggestion'][.='title']\");\n\n    NamedList args = new NamedList();\n    NamedList spellchecker = new NamedList();\n    spellchecker.add(AbstractLuceneSpellChecker.DICTIONARY_NAME, \"default\");\n    spellchecker.add(AbstractLuceneSpellChecker.FIELD, \"lowerfilt\");\n    spellchecker.add(AbstractLuceneSpellChecker.INDEX_DIR, \"spellchecker1\");\n    args.add(\"spellchecker\", spellchecker);\n\n    SpellCheckComponent checker = new SpellCheckComponent();\n    checker.init(args);\n    checker.inform(h.getCore());\n\n    request = req(\"qt\", \"spellCheckCompRH\", \"q\", \"*:*\", \"spellcheck.q\", \"ttle\",\n        \"spellcheck\", \"true\", \"spellcheck.dictionary\", \"default\",\n        \"spellcheck.reload\", \"true\");\n    ResponseBuilder rb = new ResponseBuilder();\n    rb.req = request;\n    rb.rsp = new SolrQueryResponse();\n    rb.components = new ArrayList(h.getCore().getSearchComponents().values());\n    checker.prepare(rb);\n\n    try {\n      checker.process(rb);\n    } catch (NullPointerException e) {\n      fail(\"NullPointerException due to reload not initializing analyzers\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testReloadOnStart().mjava","pathOld":"solr/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testReloadOnStart().mjava","sourceNew":"  @Test\n  public void testReloadOnStart() throws Exception {\n    assertU(adoc(\"id\", \"0\", \"lowerfilt\", \"This is a title\"));\n    assertU(commit());\n    SolrQueryRequest request = req(\"qt\", \"spellCheckCompRH\", \"q\", \"*:*\",\n        \"spellcheck.q\", \"ttle\", \"spellcheck\", \"true\", \"spellcheck.dictionary\",\n        \"default\", \"spellcheck.build\", \"true\");\n    assertQ(request, \"//arr[@name='suggestion'][.='title']\");\n\n    NamedList args = new NamedList();\n    NamedList spellchecker = new NamedList();\n    spellchecker.add(AbstractLuceneSpellChecker.DICTIONARY_NAME, \"default\");\n    spellchecker.add(AbstractLuceneSpellChecker.FIELD, \"lowerfilt\");\n    spellchecker.add(AbstractLuceneSpellChecker.INDEX_DIR, \"spellchecker1\");\n    args.add(\"spellchecker\", spellchecker);\n\n    // TODO: this is really fragile and error prone - find a higher level way to test this.\n    SpellCheckComponent checker = new SpellCheckComponent();\n    checker.init(args);\n    checker.inform(h.getCore());\n\n    request = req(\"qt\", \"spellCheckCompRH\", \"q\", \"*:*\", \"spellcheck.q\", \"ttle\",\n        \"spellcheck\", \"true\", \"spellcheck.dictionary\", \"default\",\n        \"spellcheck.reload\", \"true\");\n    ResponseBuilder rb = new ResponseBuilder(request, new SolrQueryResponse(), new ArrayList(h.getCore().getSearchComponents().values()));\n    checker.prepare(rb);\n\n    try {\n      checker.process(rb);\n    } catch (NullPointerException e) {\n      fail(\"NullPointerException due to reload not initializing analyzers\");\n    }\n\n    rb.req.close();\n  }\n\n","sourceOld":"  @Test\n  public void testReloadOnStart() throws Exception {\n    assertU(adoc(\"id\", \"0\", \"lowerfilt\", \"This is a title\"));\n    assertU(commit());\n    SolrQueryRequest request = req(\"qt\", \"spellCheckCompRH\", \"q\", \"*:*\",\n        \"spellcheck.q\", \"ttle\", \"spellcheck\", \"true\", \"spellcheck.dictionary\",\n        \"default\", \"spellcheck.build\", \"true\");\n    assertQ(request, \"//arr[@name='suggestion'][.='title']\");\n\n    NamedList args = new NamedList();\n    NamedList spellchecker = new NamedList();\n    spellchecker.add(AbstractLuceneSpellChecker.DICTIONARY_NAME, \"default\");\n    spellchecker.add(AbstractLuceneSpellChecker.FIELD, \"lowerfilt\");\n    spellchecker.add(AbstractLuceneSpellChecker.INDEX_DIR, \"spellchecker1\");\n    args.add(\"spellchecker\", spellchecker);\n\n    // TODO: this is really fragile and error prone - find a higher level way to test this.\n    SpellCheckComponent checker = new SpellCheckComponent();\n    checker.init(args);\n    checker.inform(h.getCore());\n\n    request = req(\"qt\", \"spellCheckCompRH\", \"q\", \"*:*\", \"spellcheck.q\", \"ttle\",\n        \"spellcheck\", \"true\", \"spellcheck.dictionary\", \"default\",\n        \"spellcheck.reload\", \"true\");\n    ResponseBuilder rb = new ResponseBuilder(request, new SolrQueryResponse(), new ArrayList(h.getCore().getSearchComponents().values()));\n    checker.prepare(rb);\n\n    try {\n      checker.process(rb);\n    } catch (NullPointerException e) {\n      fail(\"NullPointerException due to reload not initializing analyzers\");\n    }\n\n    rb.req.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testReloadOnStart().mjava","pathOld":"solr/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testReloadOnStart().mjava","sourceNew":"  @Test\n  public void testReloadOnStart() throws Exception {\n    assertU(adoc(\"id\", \"0\", \"lowerfilt\", \"This is a title\"));\n    assertU(commit());\n    SolrQueryRequest request = req(\"qt\", \"spellCheckCompRH\", \"q\", \"*:*\",\n        \"spellcheck.q\", \"ttle\", \"spellcheck\", \"true\", \"spellcheck.dictionary\",\n        \"default\", \"spellcheck.build\", \"true\");\n    assertQ(request, \"//arr[@name='suggestion'][.='title']\");\n\n    NamedList args = new NamedList();\n    NamedList spellchecker = new NamedList();\n    spellchecker.add(AbstractLuceneSpellChecker.DICTIONARY_NAME, \"default\");\n    spellchecker.add(AbstractLuceneSpellChecker.FIELD, \"lowerfilt\");\n    spellchecker.add(AbstractLuceneSpellChecker.INDEX_DIR, \"spellchecker1\");\n    args.add(\"spellchecker\", spellchecker);\n\n    // TODO: this is really fragile and error prone - find a higher level way to test this.\n    SpellCheckComponent checker = new SpellCheckComponent();\n    checker.init(args);\n    checker.inform(h.getCore());\n\n    request = req(\"qt\", \"spellCheckCompRH\", \"q\", \"*:*\", \"spellcheck.q\", \"ttle\",\n        \"spellcheck\", \"true\", \"spellcheck.dictionary\", \"default\",\n        \"spellcheck.reload\", \"true\");\n    ResponseBuilder rb = new ResponseBuilder(request, new SolrQueryResponse(), new ArrayList(h.getCore().getSearchComponents().values()));\n    checker.prepare(rb);\n\n    try {\n      checker.process(rb);\n    } catch (NullPointerException e) {\n      fail(\"NullPointerException due to reload not initializing analyzers\");\n    }\n\n    rb.req.close();\n  }\n\n","sourceOld":"  @Test\n  public void testReloadOnStart() throws Exception {\n    assertU(adoc(\"id\", \"0\", \"lowerfilt\", \"This is a title\"));\n    assertU(commit());\n    SolrQueryRequest request = req(\"qt\", \"spellCheckCompRH\", \"q\", \"*:*\",\n        \"spellcheck.q\", \"ttle\", \"spellcheck\", \"true\", \"spellcheck.dictionary\",\n        \"default\", \"spellcheck.build\", \"true\");\n    assertQ(request, \"//arr[@name='suggestion'][.='title']\");\n\n    NamedList args = new NamedList();\n    NamedList spellchecker = new NamedList();\n    spellchecker.add(AbstractLuceneSpellChecker.DICTIONARY_NAME, \"default\");\n    spellchecker.add(AbstractLuceneSpellChecker.FIELD, \"lowerfilt\");\n    spellchecker.add(AbstractLuceneSpellChecker.INDEX_DIR, \"spellchecker1\");\n    args.add(\"spellchecker\", spellchecker);\n\n    // TODO: this is really fragile and error prone - find a higher level way to test this.\n    SpellCheckComponent checker = new SpellCheckComponent();\n    checker.init(args);\n    checker.inform(h.getCore());\n\n    request = req(\"qt\", \"spellCheckCompRH\", \"q\", \"*:*\", \"spellcheck.q\", \"ttle\",\n        \"spellcheck\", \"true\", \"spellcheck.dictionary\", \"default\",\n        \"spellcheck.reload\", \"true\");\n    ResponseBuilder rb = new ResponseBuilder(request, new SolrQueryResponse(), new ArrayList(h.getCore().getSearchComponents().values()));\n    checker.prepare(rb);\n\n    try {\n      checker.process(rb);\n    } catch (NullPointerException e) {\n      fail(\"NullPointerException due to reload not initializing analyzers\");\n    }\n\n    rb.req.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testReloadOnStart().mjava","pathOld":"solr/src/test/org/apache/solr/handler/component/SpellCheckComponentTest#testReloadOnStart().mjava","sourceNew":"  @Test\n  public void testReloadOnStart() throws Exception {\n    assertU(adoc(\"id\", \"0\", \"lowerfilt\", \"This is a title\"));\n    assertU(commit());\n    SolrQueryRequest request = req(\"qt\", \"spellCheckCompRH\", \"q\", \"*:*\",\n        \"spellcheck.q\", \"ttle\", \"spellcheck\", \"true\", \"spellcheck.dictionary\",\n        \"default\", \"spellcheck.build\", \"true\");\n    assertQ(request, \"//arr[@name='suggestion'][.='title']\");\n\n    NamedList args = new NamedList();\n    NamedList spellchecker = new NamedList();\n    spellchecker.add(AbstractLuceneSpellChecker.DICTIONARY_NAME, \"default\");\n    spellchecker.add(AbstractLuceneSpellChecker.FIELD, \"lowerfilt\");\n    spellchecker.add(AbstractLuceneSpellChecker.INDEX_DIR, \"spellchecker1\");\n    args.add(\"spellchecker\", spellchecker);\n\n    // TODO: this is really fragile and error prone - find a higher level way to test this.\n    SpellCheckComponent checker = new SpellCheckComponent();\n    checker.init(args);\n    checker.inform(h.getCore());\n\n    request = req(\"qt\", \"spellCheckCompRH\", \"q\", \"*:*\", \"spellcheck.q\", \"ttle\",\n        \"spellcheck\", \"true\", \"spellcheck.dictionary\", \"default\",\n        \"spellcheck.reload\", \"true\");\n    ResponseBuilder rb = new ResponseBuilder(request, new SolrQueryResponse(), new ArrayList(h.getCore().getSearchComponents().values()));\n    checker.prepare(rb);\n\n    try {\n      checker.process(rb);\n    } catch (NullPointerException e) {\n      fail(\"NullPointerException due to reload not initializing analyzers\");\n    }\n\n    rb.req.close();\n  }\n\n","sourceOld":"  @Test\n  public void testReloadOnStart() throws Exception {\n    assertU(adoc(\"id\", \"0\", \"lowerfilt\", \"This is a title\"));\n    assertU(commit());\n    SolrQueryRequest request = req(\"qt\", \"spellCheckCompRH\", \"q\", \"*:*\",\n        \"spellcheck.q\", \"ttle\", \"spellcheck\", \"true\", \"spellcheck.dictionary\",\n        \"default\", \"spellcheck.build\", \"true\");\n    assertQ(request, \"//arr[@name='suggestion'][.='title']\");\n\n    NamedList args = new NamedList();\n    NamedList spellchecker = new NamedList();\n    spellchecker.add(AbstractLuceneSpellChecker.DICTIONARY_NAME, \"default\");\n    spellchecker.add(AbstractLuceneSpellChecker.FIELD, \"lowerfilt\");\n    spellchecker.add(AbstractLuceneSpellChecker.INDEX_DIR, \"spellchecker1\");\n    args.add(\"spellchecker\", spellchecker);\n\n    // TODO: this is really fragile and error prone - find a higher level way to test this.\n    SpellCheckComponent checker = new SpellCheckComponent();\n    checker.init(args);\n    checker.inform(h.getCore());\n\n    request = req(\"qt\", \"spellCheckCompRH\", \"q\", \"*:*\", \"spellcheck.q\", \"ttle\",\n        \"spellcheck\", \"true\", \"spellcheck.dictionary\", \"default\",\n        \"spellcheck.reload\", \"true\");\n    ResponseBuilder rb = new ResponseBuilder(request, new SolrQueryResponse(), new ArrayList(h.getCore().getSearchComponents().values()));\n    checker.prepare(rb);\n\n    try {\n      checker.process(rb);\n    } catch (NullPointerException e) {\n      fail(\"NullPointerException due to reload not initializing analyzers\");\n    }\n\n    rb.req.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"c26f00b574427b55127e869b935845554afde1fa":["227a2cd43fc1affe16eb4c4ab4423fbc276bd81d","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":["4ecea1664e8617d82eca3b8055a3c37cb4da8511","227a2cd43fc1affe16eb4c4ab4423fbc276bd81d"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["d94d4f1c6cd11a42dfb22d21e36fa6b582ee09c3","227a2cd43fc1affe16eb4c4ab4423fbc276bd81d"],"1da8d55113b689b06716246649de6f62430f15c0":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","ad94625fb8d088209f46650c8097196fec67f00c"],"4f176b352a988eb72e2af3a739c6de8bf24808ce":["d94d4f1c6cd11a42dfb22d21e36fa6b582ee09c3"],"d94d4f1c6cd11a42dfb22d21e36fa6b582ee09c3":["1da8d55113b689b06716246649de6f62430f15c0"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["227a2cd43fc1affe16eb4c4ab4423fbc276bd81d"],"22fa530f69d5072497256bf739fd597d089bcd0b":["4f176b352a988eb72e2af3a739c6de8bf24808ce"],"227a2cd43fc1affe16eb4c4ab4423fbc276bd81d":["22fa530f69d5072497256bf739fd597d089bcd0b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["227a2cd43fc1affe16eb4c4ab4423fbc276bd81d"],"ad94625fb8d088209f46650c8097196fec67f00c":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"4ecea1664e8617d82eca3b8055a3c37cb4da8511":["d94d4f1c6cd11a42dfb22d21e36fa6b582ee09c3","22fa530f69d5072497256bf739fd597d089bcd0b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c26f00b574427b55127e869b935845554afde1fa"]},"commit2Childs":{"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["1da8d55113b689b06716246649de6f62430f15c0"],"c26f00b574427b55127e869b935845554afde1fa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["ad94625fb8d088209f46650c8097196fec67f00c"],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"1da8d55113b689b06716246649de6f62430f15c0":["d94d4f1c6cd11a42dfb22d21e36fa6b582ee09c3"],"4f176b352a988eb72e2af3a739c6de8bf24808ce":["22fa530f69d5072497256bf739fd597d089bcd0b"],"d94d4f1c6cd11a42dfb22d21e36fa6b582ee09c3":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","4f176b352a988eb72e2af3a739c6de8bf24808ce","4ecea1664e8617d82eca3b8055a3c37cb4da8511"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"22fa530f69d5072497256bf739fd597d089bcd0b":["227a2cd43fc1affe16eb4c4ab4423fbc276bd81d","4ecea1664e8617d82eca3b8055a3c37cb4da8511"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"227a2cd43fc1affe16eb4c4ab4423fbc276bd81d":["c26f00b574427b55127e869b935845554afde1fa","ab5cb6a74aefb78aa0569857970b9151dfe2e787","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","c903c3d15906a3da96b8c0c2fb704491005fdbdb","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"ad94625fb8d088209f46650c8097196fec67f00c":["1da8d55113b689b06716246649de6f62430f15c0"],"4ecea1664e8617d82eca3b8055a3c37cb4da8511":["ab5cb6a74aefb78aa0569857970b9151dfe2e787"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ab5cb6a74aefb78aa0569857970b9151dfe2e787","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}