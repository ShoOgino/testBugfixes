{"path":"src/test/org/apache/solr/analysis/TestMappingCharFilter#testChained().mjava","commits":[{"id":"00c1e7284eb0e728903446dd05972acc9905dd53","date":1226627781,"type":0,"author":"Koji Sekiguchi","isMerge":false,"pathNew":"src/test/org/apache/solr/analysis/TestMappingCharFilter#testChained().mjava","pathOld":"/dev/null","sourceNew":"  //\n  //\n  //        0123456789\n  //(in)    aaaa ll h\n  //(out-1) aa llll i\n  //(out-2) a llllllll i\n  //\n  // aaaa,0,4 => a,0,4\n  //   ll,5,7 => llllllll,5,7\n  //    h,8,9 => i,8,9\n  public void testChained() throws Exception {\n    CharStream cs = new MappingCharFilter( normMap,\n        new MappingCharFilter( normMap, new CharReader( new StringReader( \"aaaa ll h\" ) ) ) );\n    TokenStream ts = new CharStreamAwareWhitespaceTokenizer( cs );\n    List<Token> real = getTokens( ts );\n    List<Token> expect = tokens( \"a,1,0,4 llllllll,1,5,7 i,1,8,9\" );\n    assertTokEqualOff( expect, real );\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28c0138f618eb6728ba8fd2428b4f978fc379780","date":1237964337,"type":3,"author":"Koji Sekiguchi","isMerge":false,"pathNew":"src/test/org/apache/solr/analysis/TestMappingCharFilter#testChained().mjava","pathOld":"src/test/org/apache/solr/analysis/TestMappingCharFilter#testChained().mjava","sourceNew":"  //\n  //\n  //        0123456789\n  //(in)    aaaa ll h\n  //(out-1) aa llll i\n  //(out-2) a llllllll i\n  //\n  // aaaa,0,4 => a,0,4\n  //   ll,5,7 => llllllll,5,7\n  //    h,8,9 => i,8,9\n  public void testChained() throws Exception {\n    CharStream cs = new MappingCharFilter( normMap,\n        new MappingCharFilter( normMap, CharReader.get( new StringReader( \"aaaa ll h\" ) ) ) );\n    TokenStream ts = new CharStreamAwareWhitespaceTokenizer( cs );\n    List<Token> real = getTokens( ts );\n    List<Token> expect = tokens( \"a,1,0,4 llllllll,1,5,7 i,1,8,9\" );\n    assertTokEqualOff( expect, real );\n  }\n\n","sourceOld":"  //\n  //\n  //        0123456789\n  //(in)    aaaa ll h\n  //(out-1) aa llll i\n  //(out-2) a llllllll i\n  //\n  // aaaa,0,4 => a,0,4\n  //   ll,5,7 => llllllll,5,7\n  //    h,8,9 => i,8,9\n  public void testChained() throws Exception {\n    CharStream cs = new MappingCharFilter( normMap,\n        new MappingCharFilter( normMap, new CharReader( new StringReader( \"aaaa ll h\" ) ) ) );\n    TokenStream ts = new CharStreamAwareWhitespaceTokenizer( cs );\n    List<Token> real = getTokens( ts );\n    List<Token> expect = tokens( \"a,1,0,4 llllllll,1,5,7 i,1,8,9\" );\n    assertTokEqualOff( expect, real );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1e77721aaf23393f6ea7926045ae6f8efea0ce8e","date":1247678464,"type":4,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"/dev/null","pathOld":"src/test/org/apache/solr/analysis/TestMappingCharFilter#testChained().mjava","sourceNew":null,"sourceOld":"  //\n  //\n  //        0123456789\n  //(in)    aaaa ll h\n  //(out-1) aa llll i\n  //(out-2) a llllllll i\n  //\n  // aaaa,0,4 => a,0,4\n  //   ll,5,7 => llllllll,5,7\n  //    h,8,9 => i,8,9\n  public void testChained() throws Exception {\n    CharStream cs = new MappingCharFilter( normMap,\n        new MappingCharFilter( normMap, CharReader.get( new StringReader( \"aaaa ll h\" ) ) ) );\n    TokenStream ts = new CharStreamAwareWhitespaceTokenizer( cs );\n    List<Token> real = getTokens( ts );\n    List<Token> expect = tokens( \"a,1,0,4 llllllll,1,5,7 i,1,8,9\" );\n    assertTokEqualOff( expect, real );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1e77721aaf23393f6ea7926045ae6f8efea0ce8e":["28c0138f618eb6728ba8fd2428b4f978fc379780"],"28c0138f618eb6728ba8fd2428b4f978fc379780":["00c1e7284eb0e728903446dd05972acc9905dd53"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"00c1e7284eb0e728903446dd05972acc9905dd53":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"1e77721aaf23393f6ea7926045ae6f8efea0ce8e":[],"28c0138f618eb6728ba8fd2428b4f978fc379780":["1e77721aaf23393f6ea7926045ae6f8efea0ce8e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["00c1e7284eb0e728903446dd05972acc9905dd53"],"00c1e7284eb0e728903446dd05972acc9905dd53":["28c0138f618eb6728ba8fd2428b4f978fc379780"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["1e77721aaf23393f6ea7926045ae6f8efea0ce8e","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}