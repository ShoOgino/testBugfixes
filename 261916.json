{"path":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/MathExpressionTest#testTimeDifferencingDefaultLag().mjava","commits":[{"id":"8ff654a6d1fb7a79aedaa65c23cc052fdc770aaf","date":1522951207,"type":1,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/MathExpressionTest#testTimeDifferencingDefaultLag().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionTest#testTimeDifferencingDefaultLag().mjava","sourceNew":"  @Test\n  public void testTimeDifferencingDefaultLag() throws Exception {\n    String cexpr = \"diff(array(1709.0, 1621.0, 1973.0, 1812.0, 1975.0, 1862.0, 1940.0, 2013.0, 1596.0, 1725.0, 1676.0, 1814.0, 1615.0, 1557.0, 1891.0, 1956.0, 1885.0, 1623.0, 1903.0, 1997.0))\";\n    ModifiableSolrParams paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cexpr);\n    paramsLoc.set(\"qt\", \"/stream\");\n    String url = cluster.getJettySolrRunners().get(0).getBaseUrl().toString()+\"/\"+COLLECTIONORALIAS;\n    TupleStream solrStream = new SolrStream(url, paramsLoc);\n    StreamContext context = new StreamContext();\n    solrStream.setStreamContext(context);\n    List<Tuple> tuples = getTuples(solrStream);\n    assertTrue(tuples.size() == 1);\n    List<Number> out = (List<Number>)tuples.get(0).get(\"return-value\");\n    assertTrue(out.size() == 19);\n    assertEquals(out.get(0).doubleValue(),-88.0, 0.01);\n    assertEquals(out.get(1).doubleValue(),352.0, 0.01);\n    assertEquals(out.get(2).doubleValue(),-161.0, 0.01);\n    assertEquals(out.get(3).doubleValue(),163.0, 0.01);\n    assertEquals(out.get(4).doubleValue(),-113.0, 0.01);\n    assertEquals(out.get(5).doubleValue(),78.0, 0.01);\n    assertEquals(out.get(6).doubleValue(),73.0, 0.01);\n    assertEquals(out.get(7).doubleValue(),-417.0, 0.01);\n    assertEquals(out.get(8).doubleValue(),129.0, 0.01);\n    assertEquals(out.get(9).doubleValue(),-49.0, 0.01);\n    assertEquals(out.get(10).doubleValue(),138.0, 0.01);\n    assertEquals(out.get(11).doubleValue(),-199.0, 0.01);\n    assertEquals(out.get(12).doubleValue(),-58.0, 0.01);\n    assertEquals(out.get(13).doubleValue(),334.0, 0.01);\n    assertEquals(out.get(14).doubleValue(),65.0, 0.01);\n    assertEquals(out.get(15).doubleValue(),-71.0, 0.01);\n    assertEquals(out.get(16).doubleValue(),-262.0, 0.01);\n    assertEquals(out.get(17).doubleValue(),280.0, 0.01);\n    assertEquals(out.get(18).doubleValue(),94.0, 0.01);\n  }\n\n","sourceOld":"  @Test\n  public void testTimeDifferencingDefaultLag() throws Exception {\n    String cexpr = \"diff(array(1709.0, 1621.0, 1973.0, 1812.0, 1975.0, 1862.0, 1940.0, 2013.0, 1596.0, 1725.0, 1676.0, 1814.0, 1615.0, 1557.0, 1891.0, 1956.0, 1885.0, 1623.0, 1903.0, 1997.0))\";\n    ModifiableSolrParams paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cexpr);\n    paramsLoc.set(\"qt\", \"/stream\");\n    String url = cluster.getJettySolrRunners().get(0).getBaseUrl().toString()+\"/\"+COLLECTIONORALIAS;\n    TupleStream solrStream = new SolrStream(url, paramsLoc);\n    StreamContext context = new StreamContext();\n    solrStream.setStreamContext(context);\n    List<Tuple> tuples = getTuples(solrStream);\n    assertTrue(tuples.size() == 1);\n    List<Number> out = (List<Number>)tuples.get(0).get(\"return-value\");\n    assertTrue(out.size() == 19);\n    assertEquals(out.get(0).doubleValue(),-88.0, 0.01);\n    assertEquals(out.get(1).doubleValue(),352.0, 0.01);\n    assertEquals(out.get(2).doubleValue(),-161.0, 0.01);\n    assertEquals(out.get(3).doubleValue(),163.0, 0.01);\n    assertEquals(out.get(4).doubleValue(),-113.0, 0.01);\n    assertEquals(out.get(5).doubleValue(),78.0, 0.01);\n    assertEquals(out.get(6).doubleValue(),73.0, 0.01);\n    assertEquals(out.get(7).doubleValue(),-417.0, 0.01);\n    assertEquals(out.get(8).doubleValue(),129.0, 0.01);\n    assertEquals(out.get(9).doubleValue(),-49.0, 0.01);\n    assertEquals(out.get(10).doubleValue(),138.0, 0.01);\n    assertEquals(out.get(11).doubleValue(),-199.0, 0.01);\n    assertEquals(out.get(12).doubleValue(),-58.0, 0.01);\n    assertEquals(out.get(13).doubleValue(),334.0, 0.01);\n    assertEquals(out.get(14).doubleValue(),65.0, 0.01);\n    assertEquals(out.get(15).doubleValue(),-71.0, 0.01);\n    assertEquals(out.get(16).doubleValue(),-262.0, 0.01);\n    assertEquals(out.get(17).doubleValue(),280.0, 0.01);\n    assertEquals(out.get(18).doubleValue(),94.0, 0.01);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9ba1b632c041956c93c41aa1143d16a567014891","date":1592328473,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/MathExpressionTest#testTimeDifferencingDefaultLag().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/MathExpressionTest#testTimeDifferencingDefaultLag().mjava","sourceNew":"  @Test\n  public void testTimeDifferencingDefaultLag() throws Exception {\n    String cexpr = \"diff(array(1709.0, 1621.0, 1973.0, 1812.0, 1975.0, 1862.0, 1940.0, 2013.0, 1596.0, 1725.0, 1676.0, 1814.0, 1615.0, 1557.0, 1891.0, 1956.0, 1885.0, 1623.0, 1903.0, 1997.0))\";\n    ModifiableSolrParams paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cexpr);\n    paramsLoc.set(\"qt\", \"/stream\");\n    String url = cluster.getJettySolrRunners().get(0).getBaseUrl().toString()+\"/\"+COLLECTIONORALIAS;\n    TupleStream solrStream = new SolrStream(url, paramsLoc);\n    StreamContext context = new StreamContext();\n    solrStream.setStreamContext(context);\n    List<Tuple> tuples = getTuples(solrStream);\n    assertTrue(tuples.size() == 1);\n    @SuppressWarnings({\"unchecked\"})\n    List<Number> out = (List<Number>)tuples.get(0).get(\"return-value\");\n    assertTrue(out.size() == 19);\n    assertEquals(out.get(0).doubleValue(),-88.0, 0.01);\n    assertEquals(out.get(1).doubleValue(),352.0, 0.01);\n    assertEquals(out.get(2).doubleValue(),-161.0, 0.01);\n    assertEquals(out.get(3).doubleValue(),163.0, 0.01);\n    assertEquals(out.get(4).doubleValue(),-113.0, 0.01);\n    assertEquals(out.get(5).doubleValue(),78.0, 0.01);\n    assertEquals(out.get(6).doubleValue(),73.0, 0.01);\n    assertEquals(out.get(7).doubleValue(),-417.0, 0.01);\n    assertEquals(out.get(8).doubleValue(),129.0, 0.01);\n    assertEquals(out.get(9).doubleValue(),-49.0, 0.01);\n    assertEquals(out.get(10).doubleValue(),138.0, 0.01);\n    assertEquals(out.get(11).doubleValue(),-199.0, 0.01);\n    assertEquals(out.get(12).doubleValue(),-58.0, 0.01);\n    assertEquals(out.get(13).doubleValue(),334.0, 0.01);\n    assertEquals(out.get(14).doubleValue(),65.0, 0.01);\n    assertEquals(out.get(15).doubleValue(),-71.0, 0.01);\n    assertEquals(out.get(16).doubleValue(),-262.0, 0.01);\n    assertEquals(out.get(17).doubleValue(),280.0, 0.01);\n    assertEquals(out.get(18).doubleValue(),94.0, 0.01);\n  }\n\n","sourceOld":"  @Test\n  public void testTimeDifferencingDefaultLag() throws Exception {\n    String cexpr = \"diff(array(1709.0, 1621.0, 1973.0, 1812.0, 1975.0, 1862.0, 1940.0, 2013.0, 1596.0, 1725.0, 1676.0, 1814.0, 1615.0, 1557.0, 1891.0, 1956.0, 1885.0, 1623.0, 1903.0, 1997.0))\";\n    ModifiableSolrParams paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cexpr);\n    paramsLoc.set(\"qt\", \"/stream\");\n    String url = cluster.getJettySolrRunners().get(0).getBaseUrl().toString()+\"/\"+COLLECTIONORALIAS;\n    TupleStream solrStream = new SolrStream(url, paramsLoc);\n    StreamContext context = new StreamContext();\n    solrStream.setStreamContext(context);\n    List<Tuple> tuples = getTuples(solrStream);\n    assertTrue(tuples.size() == 1);\n    List<Number> out = (List<Number>)tuples.get(0).get(\"return-value\");\n    assertTrue(out.size() == 19);\n    assertEquals(out.get(0).doubleValue(),-88.0, 0.01);\n    assertEquals(out.get(1).doubleValue(),352.0, 0.01);\n    assertEquals(out.get(2).doubleValue(),-161.0, 0.01);\n    assertEquals(out.get(3).doubleValue(),163.0, 0.01);\n    assertEquals(out.get(4).doubleValue(),-113.0, 0.01);\n    assertEquals(out.get(5).doubleValue(),78.0, 0.01);\n    assertEquals(out.get(6).doubleValue(),73.0, 0.01);\n    assertEquals(out.get(7).doubleValue(),-417.0, 0.01);\n    assertEquals(out.get(8).doubleValue(),129.0, 0.01);\n    assertEquals(out.get(9).doubleValue(),-49.0, 0.01);\n    assertEquals(out.get(10).doubleValue(),138.0, 0.01);\n    assertEquals(out.get(11).doubleValue(),-199.0, 0.01);\n    assertEquals(out.get(12).doubleValue(),-58.0, 0.01);\n    assertEquals(out.get(13).doubleValue(),334.0, 0.01);\n    assertEquals(out.get(14).doubleValue(),65.0, 0.01);\n    assertEquals(out.get(15).doubleValue(),-71.0, 0.01);\n    assertEquals(out.get(16).doubleValue(),-262.0, 0.01);\n    assertEquals(out.get(17).doubleValue(),280.0, 0.01);\n    assertEquals(out.get(18).doubleValue(),94.0, 0.01);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9ba1b632c041956c93c41aa1143d16a567014891":["8ff654a6d1fb7a79aedaa65c23cc052fdc770aaf"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9ba1b632c041956c93c41aa1143d16a567014891"],"8ff654a6d1fb7a79aedaa65c23cc052fdc770aaf":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"9ba1b632c041956c93c41aa1143d16a567014891":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8ff654a6d1fb7a79aedaa65c23cc052fdc770aaf"],"8ff654a6d1fb7a79aedaa65c23cc052fdc770aaf":["9ba1b632c041956c93c41aa1143d16a567014891"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}