{"path":"lucene/core/src/java/org/apache/lucene/util/fst/FST#ramBytesUsed().mjava","commits":[{"id":"8405d98acebb7e287bf7ac40e937ba05b8661285","date":1401433291,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/fst/FST#ramBytesUsed().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/fst/FST#sizeInBytes().mjava","sourceNew":"  @Override\n  public long ramBytesUsed() {\n    long size = bytes.getPosition();\n    if (packed) {\n      size += nodeRefToAddress.ramBytesUsed();\n    } else if (nodeAddress != null) {\n      size += nodeAddress.ramBytesUsed();\n      size += inCounts.ramBytesUsed();\n    }\n    return size;\n  }\n\n","sourceOld":"  /** Returns bytes used to represent the FST */\n  public long sizeInBytes() {\n    long size = bytes.getPosition();\n    if (packed) {\n      size += nodeRefToAddress.ramBytesUsed();\n    } else if (nodeAddress != null) {\n      size += nodeAddress.ramBytesUsed();\n      size += inCounts.ramBytesUsed();\n    }\n    return size;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d943163030bbd7a9caf93cb5fea92257390a2a99","date":1403094254,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/fst/FST#ramBytesUsed().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/fst/FST#ramBytesUsed().mjava","sourceNew":"  @Override\n  public long ramBytesUsed() {\n    long size = BASE_RAM_BYTES_USED;\n    size += bytes.ramBytesUsed();\n    if (packed) {\n      size += nodeRefToAddress.ramBytesUsed();\n    } else if (nodeAddress != null) {\n      size += nodeAddress.ramBytesUsed();\n      size += inCounts.ramBytesUsed();\n    }\n    size += ramBytesUsed(cachedRootArcs);\n    size += ramBytesUsed(assertingCachedRootArcs);\n    size += RamUsageEstimator.sizeOf(bytesPerArc);\n    return size;\n  }\n\n","sourceOld":"  @Override\n  public long ramBytesUsed() {\n    long size = bytes.getPosition();\n    if (packed) {\n      size += nodeRefToAddress.ramBytesUsed();\n    } else if (nodeAddress != null) {\n      size += nodeAddress.ramBytesUsed();\n      size += inCounts.ramBytesUsed();\n    }\n    return size;\n  }\n\n","bugFix":null,"bugIntro":["7f32ed90e12610550e1363aea43afe3d6e292cf9"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"e57c73924f3b8c19defa62e96bfa34a4922d49c2","date":1403106358,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/fst/FST#ramBytesUsed().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/fst/FST#ramBytesUsed().mjava","sourceNew":"  @Override\n  public long ramBytesUsed() {\n    long size = BASE_RAM_BYTES_USED;\n    size += bytes.ramBytesUsed();\n    if (packed) {\n      size += nodeRefToAddress.ramBytesUsed();\n    } else if (nodeAddress != null) {\n      size += nodeAddress.ramBytesUsed();\n      size += inCounts.ramBytesUsed();\n    }\n    size += ramBytesUsed(cachedRootArcs);\n    size += ramBytesUsed(assertingCachedRootArcs);\n    size += RamUsageEstimator.sizeOf(bytesPerArc);\n    return size;\n  }\n\n","sourceOld":"  @Override\n  public long ramBytesUsed() {\n    long size = bytes.getPosition();\n    if (packed) {\n      size += nodeRefToAddress.ramBytesUsed();\n    } else if (nodeAddress != null) {\n      size += nodeAddress.ramBytesUsed();\n      size += inCounts.ramBytesUsed();\n    }\n    return size;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"296b90cb97974607dd1213a42df0918898461711","date":1408023569,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/fst/FST#ramBytesUsed().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/fst/FST#ramBytesUsed().mjava","sourceNew":"  @Override\n  public long ramBytesUsed() {\n    long size = BASE_RAM_BYTES_USED;\n    size += bytes.ramBytesUsed();\n    if (packed) {\n      size += nodeRefToAddress.ramBytesUsed();\n    } else if (nodeAddress != null) {\n      size += nodeAddress.ramBytesUsed();\n      size += inCounts.ramBytesUsed();\n    }\n    size += cachedArcsBytesUsed;\n    size += RamUsageEstimator.sizeOf(bytesPerArc);\n    return size;\n  }\n\n","sourceOld":"  @Override\n  public long ramBytesUsed() {\n    long size = BASE_RAM_BYTES_USED;\n    size += bytes.ramBytesUsed();\n    if (packed) {\n      size += nodeRefToAddress.ramBytesUsed();\n    } else if (nodeAddress != null) {\n      size += nodeAddress.ramBytesUsed();\n      size += inCounts.ramBytesUsed();\n    }\n    size += ramBytesUsed(cachedRootArcs);\n    size += ramBytesUsed(assertingCachedRootArcs);\n    size += RamUsageEstimator.sizeOf(bytesPerArc);\n    return size;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7f32ed90e12610550e1363aea43afe3d6e292cf9","date":1418230105,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/fst/FST#ramBytesUsed().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/fst/FST#ramBytesUsed().mjava","sourceNew":"  @Override\n  public long ramBytesUsed() {\n    long size = BASE_RAM_BYTES_USED;\n    size += bytes.ramBytesUsed();\n    if (packed) {\n      size += nodeRefToAddress.ramBytesUsed();\n    } else if (nodeAddress != null) {\n      size += nodeAddress.ramBytesUsed();\n      size += inCounts.ramBytesUsed();\n    }\n    size += cachedArcsBytesUsed;\n    size += RamUsageEstimator.sizeOf(reusedBytesPerArc);\n    return size;\n  }\n\n","sourceOld":"  @Override\n  public long ramBytesUsed() {\n    long size = BASE_RAM_BYTES_USED;\n    size += bytes.ramBytesUsed();\n    if (packed) {\n      size += nodeRefToAddress.ramBytesUsed();\n    } else if (nodeAddress != null) {\n      size += nodeAddress.ramBytesUsed();\n      size += inCounts.ramBytesUsed();\n    }\n    size += cachedArcsBytesUsed;\n    size += RamUsageEstimator.sizeOf(bytesPerArc);\n    return size;\n  }\n\n","bugFix":["d943163030bbd7a9caf93cb5fea92257390a2a99"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1abb939fb41b2fe4f89fd518f3da288c0213341d","date":1435657417,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/fst/FST#ramBytesUsed().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/fst/FST#ramBytesUsed().mjava","sourceNew":"  @Override\n  public long ramBytesUsed() {\n    long size = BASE_RAM_BYTES_USED;\n    if (bytesArray != null) {\n      size += bytesArray.length;\n    } else {\n      size += bytes.ramBytesUsed();\n    }\n    if (packed) {\n      size += nodeRefToAddress.ramBytesUsed();\n    } else if (nodeAddress != null) {\n      size += nodeAddress.ramBytesUsed();\n      size += inCounts.ramBytesUsed();\n    }\n    size += cachedArcsBytesUsed;\n    return size;\n  }\n\n","sourceOld":"  @Override\n  public long ramBytesUsed() {\n    long size = BASE_RAM_BYTES_USED;\n    size += bytes.ramBytesUsed();\n    if (packed) {\n      size += nodeRefToAddress.ramBytesUsed();\n    } else if (nodeAddress != null) {\n      size += nodeAddress.ramBytesUsed();\n      size += inCounts.ramBytesUsed();\n    }\n    size += cachedArcsBytesUsed;\n    size += RamUsageEstimator.sizeOf(reusedBytesPerArc);\n    return size;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6244579a467d5f2673ac98265d74bddbea1a8114","date":1478786509,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/fst/FST#ramBytesUsed().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/fst/FST#ramBytesUsed().mjava","sourceNew":"  @Override\n  public long ramBytesUsed() {\n    long size = BASE_RAM_BYTES_USED;\n    if (bytesArray != null) {\n      size += bytesArray.length;\n    } else {\n      size += bytes.ramBytesUsed();\n    }\n    size += cachedArcsBytesUsed;\n    return size;\n  }\n\n","sourceOld":"  @Override\n  public long ramBytesUsed() {\n    long size = BASE_RAM_BYTES_USED;\n    if (bytesArray != null) {\n      size += bytesArray.length;\n    } else {\n      size += bytes.ramBytesUsed();\n    }\n    if (packed) {\n      size += nodeRefToAddress.ramBytesUsed();\n    } else if (nodeAddress != null) {\n      size += nodeAddress.ramBytesUsed();\n      size += inCounts.ramBytesUsed();\n    }\n    size += cachedArcsBytesUsed;\n    return size;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"199dfa410f1fdbfd3294106b04096cce5ed34b21","date":1478812506,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/fst/FST#ramBytesUsed().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/fst/FST#ramBytesUsed().mjava","sourceNew":"  @Override\n  public long ramBytesUsed() {\n    long size = BASE_RAM_BYTES_USED;\n    if (bytesArray != null) {\n      size += bytesArray.length;\n    } else {\n      size += bytes.ramBytesUsed();\n    }\n    size += cachedArcsBytesUsed;\n    return size;\n  }\n\n","sourceOld":"  @Override\n  public long ramBytesUsed() {\n    long size = BASE_RAM_BYTES_USED;\n    if (bytesArray != null) {\n      size += bytesArray.length;\n    } else {\n      size += bytes.ramBytesUsed();\n    }\n    if (packed) {\n      size += nodeRefToAddress.ramBytesUsed();\n    } else if (nodeAddress != null) {\n      size += nodeAddress.ramBytesUsed();\n      size += inCounts.ramBytesUsed();\n    }\n    size += cachedArcsBytesUsed;\n    return size;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dcc12263939c1d6c4b4a2015f67d1b6d97f375a4","date":1550598742,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/fst/FST#ramBytesUsed().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/fst/FST#ramBytesUsed().mjava","sourceNew":"  @Override\n  public long ramBytesUsed() {\n    long size = BASE_RAM_BYTES_USED;\n    if (this.fstStore != null) {\n      size += this.fstStore.ramBytesUsed();\n    } else {\n      size += bytes.ramBytesUsed();\n    }\n\n    size += cachedArcsBytesUsed;\n    return size;\n  }\n\n","sourceOld":"  @Override\n  public long ramBytesUsed() {\n    long size = BASE_RAM_BYTES_USED;\n    if (bytesArray != null) {\n      size += bytesArray.length;\n    } else {\n      size += bytes.ramBytesUsed();\n    }\n    size += cachedArcsBytesUsed;\n    return size;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cfe04a006c42318f41df58bdd061cc1065b5f688","date":1574780842,"type":3,"author":"Bruno Roustant","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/fst/FST#ramBytesUsed().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/fst/FST#ramBytesUsed().mjava","sourceNew":"  @Override\n  public long ramBytesUsed() {\n    long size = BASE_RAM_BYTES_USED;\n    if (this.fstStore != null) {\n      size += this.fstStore.ramBytesUsed();\n    } else {\n      size += bytes.ramBytesUsed();\n    }\n\n    return size;\n  }\n\n","sourceOld":"  @Override\n  public long ramBytesUsed() {\n    long size = BASE_RAM_BYTES_USED;\n    if (this.fstStore != null) {\n      size += this.fstStore.ramBytesUsed();\n    } else {\n      size += bytes.ramBytesUsed();\n    }\n\n    size += cachedArcsBytesUsed;\n    return size;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1abb939fb41b2fe4f89fd518f3da288c0213341d":["7f32ed90e12610550e1363aea43afe3d6e292cf9"],"8405d98acebb7e287bf7ac40e937ba05b8661285":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e57c73924f3b8c19defa62e96bfa34a4922d49c2":["8405d98acebb7e287bf7ac40e937ba05b8661285","d943163030bbd7a9caf93cb5fea92257390a2a99"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d943163030bbd7a9caf93cb5fea92257390a2a99":["8405d98acebb7e287bf7ac40e937ba05b8661285"],"6244579a467d5f2673ac98265d74bddbea1a8114":["1abb939fb41b2fe4f89fd518f3da288c0213341d"],"199dfa410f1fdbfd3294106b04096cce5ed34b21":["1abb939fb41b2fe4f89fd518f3da288c0213341d","6244579a467d5f2673ac98265d74bddbea1a8114"],"296b90cb97974607dd1213a42df0918898461711":["d943163030bbd7a9caf93cb5fea92257390a2a99"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["cfe04a006c42318f41df58bdd061cc1065b5f688"],"cfe04a006c42318f41df58bdd061cc1065b5f688":["dcc12263939c1d6c4b4a2015f67d1b6d97f375a4"],"dcc12263939c1d6c4b4a2015f67d1b6d97f375a4":["6244579a467d5f2673ac98265d74bddbea1a8114"],"7f32ed90e12610550e1363aea43afe3d6e292cf9":["296b90cb97974607dd1213a42df0918898461711"]},"commit2Childs":{"1abb939fb41b2fe4f89fd518f3da288c0213341d":["6244579a467d5f2673ac98265d74bddbea1a8114","199dfa410f1fdbfd3294106b04096cce5ed34b21"],"8405d98acebb7e287bf7ac40e937ba05b8661285":["e57c73924f3b8c19defa62e96bfa34a4922d49c2","d943163030bbd7a9caf93cb5fea92257390a2a99"],"e57c73924f3b8c19defa62e96bfa34a4922d49c2":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8405d98acebb7e287bf7ac40e937ba05b8661285"],"d943163030bbd7a9caf93cb5fea92257390a2a99":["e57c73924f3b8c19defa62e96bfa34a4922d49c2","296b90cb97974607dd1213a42df0918898461711"],"6244579a467d5f2673ac98265d74bddbea1a8114":["199dfa410f1fdbfd3294106b04096cce5ed34b21","dcc12263939c1d6c4b4a2015f67d1b6d97f375a4"],"199dfa410f1fdbfd3294106b04096cce5ed34b21":[],"296b90cb97974607dd1213a42df0918898461711":["7f32ed90e12610550e1363aea43afe3d6e292cf9"],"7f32ed90e12610550e1363aea43afe3d6e292cf9":["1abb939fb41b2fe4f89fd518f3da288c0213341d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"cfe04a006c42318f41df58bdd061cc1065b5f688":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"dcc12263939c1d6c4b4a2015f67d1b6d97f375a4":["cfe04a006c42318f41df58bdd061cc1065b5f688"]},"heads":["e57c73924f3b8c19defa62e96bfa34a4922d49c2","199dfa410f1fdbfd3294106b04096cce5ed34b21","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}