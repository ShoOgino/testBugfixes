{"path":"lucene/core/src/java/org/apache/lucene/codecs/lucene87/BugfixDeflater_JDK8252739#createBugfix(Deflater,int).mjava","commits":[{"id":"ed895147bd2a42a346cf4711e35fbe452fc1df6f","date":1599729179,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene87/BugfixDeflater_JDK8252739#createBugfix(Deflater,int).mjava","pathOld":"/dev/null","sourceNew":"  /**\r\n   * Creates a bugfix for {@link Deflater} instances, which works around JDK-8252739.\r\n   * <p>\r\n   * Use this whenever you intend to call {@link Deflater#setDictionary(byte[], int, int)}\r\n   * on a {@code Deflater}.\r\n   * */\r\n  @SuppressForbidden(reason = \"Works around bug, so it must call forbidden method\")\r\n  public static BugfixDeflater_JDK8252739 createBugfix(Deflater deflater, int dictLength) {\r\n    if (dictLength < 0) {\r\n      throw new IllegalArgumentException(\"dictLength must be >= 0\");\r\n    }\r\n    if (IS_BUGGY_JDK) {\r\n      final byte[] dictBytesScratch = new byte[dictLength];\r\n      return (dictBytes, off, len) -> {\r\n        if (off > 0) {\r\n          System.arraycopy(dictBytes, off, dictBytesScratch, 0, len);\r\n          deflater.setDictionary(dictBytesScratch, 0, len);\r\n        } else {\r\n          deflater.setDictionary(dictBytes, off, len);\r\n        }\r\n      };\r\n    } else {\r\n      return deflater::setDictionary;\r\n    }\r\n  }\r\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b45f542a44cc5225bc57913f3ec59d5016398f14","date":1600254540,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene87/BugfixDeflater_JDK8252739#createBugfix(Deflater).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene87/BugfixDeflater_JDK8252739#createBugfix(Deflater,int).mjava","sourceNew":"  /**\r\n   * Creates a bugfix for {@link Deflater} instances, which works around JDK-8252739.\r\n   * <p>\r\n   * Use this whenever you intend to call {@link Deflater#setDictionary(byte[], int, int)}\r\n   * on a {@code Deflater}.\r\n   * */\r\n  @SuppressForbidden(reason = \"Works around bug, so it must call forbidden method\")\r\n  public static BugfixDeflater_JDK8252739 createBugfix(Deflater deflater) {\r\n    if (IS_BUGGY_JDK) {\r\n      final BytesRefBuilder dictBytesScratch = new BytesRefBuilder();\r\n      return (dictBytes, off, len) -> {\r\n        if (off > 0) {\r\n          dictBytesScratch.grow(len);\r\n          System.arraycopy(dictBytes, off, dictBytesScratch.bytes(), 0, len);\r\n          deflater.setDictionary(dictBytesScratch.bytes(), 0, len);\r\n        } else {\r\n          deflater.setDictionary(dictBytes, off, len);\r\n        }\r\n      };\r\n    } else {\r\n      return deflater::setDictionary;\r\n    }\r\n  }\r\n\n","sourceOld":"  /**\r\n   * Creates a bugfix for {@link Deflater} instances, which works around JDK-8252739.\r\n   * <p>\r\n   * Use this whenever you intend to call {@link Deflater#setDictionary(byte[], int, int)}\r\n   * on a {@code Deflater}.\r\n   * */\r\n  @SuppressForbidden(reason = \"Works around bug, so it must call forbidden method\")\r\n  public static BugfixDeflater_JDK8252739 createBugfix(Deflater deflater, int dictLength) {\r\n    if (dictLength < 0) {\r\n      throw new IllegalArgumentException(\"dictLength must be >= 0\");\r\n    }\r\n    if (IS_BUGGY_JDK) {\r\n      final byte[] dictBytesScratch = new byte[dictLength];\r\n      return (dictBytes, off, len) -> {\r\n        if (off > 0) {\r\n          System.arraycopy(dictBytes, off, dictBytesScratch, 0, len);\r\n          deflater.setDictionary(dictBytesScratch, 0, len);\r\n        } else {\r\n          deflater.setDictionary(dictBytes, off, len);\r\n        }\r\n      };\r\n    } else {\r\n      return deflater::setDictionary;\r\n    }\r\n  }\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"65352f844eb9e9a677ec4eb2abced4404f08181d","date":1600297608,"type":5,"author":"noblepaul","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene87/BugfixDeflater_JDK8252739#createBugfix(Deflater).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene87/BugfixDeflater_JDK8252739#createBugfix(Deflater,int).mjava","sourceNew":"  /**\r\n   * Creates a bugfix for {@link Deflater} instances, which works around JDK-8252739.\r\n   * <p>\r\n   * Use this whenever you intend to call {@link Deflater#setDictionary(byte[], int, int)}\r\n   * on a {@code Deflater}.\r\n   * */\r\n  @SuppressForbidden(reason = \"Works around bug, so it must call forbidden method\")\r\n  public static BugfixDeflater_JDK8252739 createBugfix(Deflater deflater) {\r\n    if (IS_BUGGY_JDK) {\r\n      final BytesRefBuilder dictBytesScratch = new BytesRefBuilder();\r\n      return (dictBytes, off, len) -> {\r\n        if (off > 0) {\r\n          dictBytesScratch.grow(len);\r\n          System.arraycopy(dictBytes, off, dictBytesScratch.bytes(), 0, len);\r\n          deflater.setDictionary(dictBytesScratch.bytes(), 0, len);\r\n        } else {\r\n          deflater.setDictionary(dictBytes, off, len);\r\n        }\r\n      };\r\n    } else {\r\n      return deflater::setDictionary;\r\n    }\r\n  }\r\n\n","sourceOld":"  /**\r\n   * Creates a bugfix for {@link Deflater} instances, which works around JDK-8252739.\r\n   * <p>\r\n   * Use this whenever you intend to call {@link Deflater#setDictionary(byte[], int, int)}\r\n   * on a {@code Deflater}.\r\n   * */\r\n  @SuppressForbidden(reason = \"Works around bug, so it must call forbidden method\")\r\n  public static BugfixDeflater_JDK8252739 createBugfix(Deflater deflater, int dictLength) {\r\n    if (dictLength < 0) {\r\n      throw new IllegalArgumentException(\"dictLength must be >= 0\");\r\n    }\r\n    if (IS_BUGGY_JDK) {\r\n      final byte[] dictBytesScratch = new byte[dictLength];\r\n      return (dictBytes, off, len) -> {\r\n        if (off > 0) {\r\n          System.arraycopy(dictBytes, off, dictBytesScratch, 0, len);\r\n          deflater.setDictionary(dictBytesScratch, 0, len);\r\n        } else {\r\n          deflater.setDictionary(dictBytes, off, len);\r\n        }\r\n      };\r\n    } else {\r\n      return deflater::setDictionary;\r\n    }\r\n  }\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"65352f844eb9e9a677ec4eb2abced4404f08181d":["ed895147bd2a42a346cf4711e35fbe452fc1df6f","b45f542a44cc5225bc57913f3ec59d5016398f14"],"b45f542a44cc5225bc57913f3ec59d5016398f14":["ed895147bd2a42a346cf4711e35fbe452fc1df6f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["65352f844eb9e9a677ec4eb2abced4404f08181d"],"ed895147bd2a42a346cf4711e35fbe452fc1df6f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ed895147bd2a42a346cf4711e35fbe452fc1df6f"],"65352f844eb9e9a677ec4eb2abced4404f08181d":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b45f542a44cc5225bc57913f3ec59d5016398f14":["65352f844eb9e9a677ec4eb2abced4404f08181d"],"ed895147bd2a42a346cf4711e35fbe452fc1df6f":["65352f844eb9e9a677ec4eb2abced4404f08181d","b45f542a44cc5225bc57913f3ec59d5016398f14"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}