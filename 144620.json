{"path":"solr/core/src/java/org/apache/solr/handler/CdcrRequestHandler#init(NamedList).mjava","commits":[{"id":"86290366cefc1b9d4eced13b430858c4a4c0421d","date":1432321109,"type":0,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/CdcrRequestHandler#init(NamedList).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void init(NamedList args) {\n    super.init(args);\n\n    if (args != null) {\n      // Configuration of the Update Log Synchronizer\n      Object updateLogSynchonizerParam = args.get(CdcrParams.UPDATE_LOG_SYNCHRONIZER_PARAM);\n      if (updateLogSynchonizerParam != null && updateLogSynchonizerParam instanceof NamedList) {\n        updateLogSynchronizerConfiguration = SolrParams.toSolrParams((NamedList) updateLogSynchonizerParam);\n      }\n\n      // Configuration of the Replicator\n      Object replicatorParam = args.get(CdcrParams.REPLICATOR_PARAM);\n      if (replicatorParam != null && replicatorParam instanceof NamedList) {\n        replicatorConfiguration = SolrParams.toSolrParams((NamedList) replicatorParam);\n      }\n\n      // Configuration of the Buffer\n      Object bufferParam = args.get(CdcrParams.BUFFER_PARAM);\n      if (bufferParam != null && bufferParam instanceof NamedList) {\n        bufferConfiguration = SolrParams.toSolrParams((NamedList) bufferParam);\n      }\n\n      // Configuration of the Replicas\n      replicasConfiguration = new HashMap<>();\n      List replicas = args.getAll(CdcrParams.REPLICA_PARAM);\n      for (Object replica : replicas) {\n        if (replicas != null && replica instanceof NamedList) {\n          SolrParams params = SolrParams.toSolrParams((NamedList) replica);\n          if (!replicasConfiguration.containsKey(params.get(CdcrParams.SOURCE_COLLECTION_PARAM))) {\n            replicasConfiguration.put(params.get(CdcrParams.SOURCE_COLLECTION_PARAM), new ArrayList<SolrParams>());\n          }\n          replicasConfiguration.get(params.get(CdcrParams.SOURCE_COLLECTION_PARAM)).add(params);\n        }\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"61655e38c2bbf0c3157cece14985b14dde2899af","date":1445352399,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/CdcrRequestHandler#init(NamedList).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/CdcrRequestHandler#init(NamedList).mjava","sourceNew":"  @Override\n  public void init(NamedList args) {\n    super.init(args);\n\n    if (args != null) {\n      // Configuration of the Update Log Synchronizer\n      Object updateLogSynchonizerParam = args.get(CdcrParams.UPDATE_LOG_SYNCHRONIZER_PARAM);\n      if (updateLogSynchonizerParam != null && updateLogSynchonizerParam instanceof NamedList) {\n        updateLogSynchronizerConfiguration = SolrParams.toSolrParams((NamedList) updateLogSynchonizerParam);\n      }\n\n      // Configuration of the Replicator\n      Object replicatorParam = args.get(CdcrParams.REPLICATOR_PARAM);\n      if (replicatorParam != null && replicatorParam instanceof NamedList) {\n        replicatorConfiguration = SolrParams.toSolrParams((NamedList) replicatorParam);\n      }\n\n      // Configuration of the Buffer\n      Object bufferParam = args.get(CdcrParams.BUFFER_PARAM);\n      if (bufferParam != null && bufferParam instanceof NamedList) {\n        bufferConfiguration = SolrParams.toSolrParams((NamedList) bufferParam);\n      }\n\n      // Configuration of the Replicas\n      replicasConfiguration = new HashMap<>();\n      List replicas = args.getAll(CdcrParams.REPLICA_PARAM);\n      for (Object replica : replicas) {\n        if (replica != null && replica instanceof NamedList) {\n          SolrParams params = SolrParams.toSolrParams((NamedList) replica);\n          if (!replicasConfiguration.containsKey(params.get(CdcrParams.SOURCE_COLLECTION_PARAM))) {\n            replicasConfiguration.put(params.get(CdcrParams.SOURCE_COLLECTION_PARAM), new ArrayList<>());\n          }\n          replicasConfiguration.get(params.get(CdcrParams.SOURCE_COLLECTION_PARAM)).add(params);\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void init(NamedList args) {\n    super.init(args);\n\n    if (args != null) {\n      // Configuration of the Update Log Synchronizer\n      Object updateLogSynchonizerParam = args.get(CdcrParams.UPDATE_LOG_SYNCHRONIZER_PARAM);\n      if (updateLogSynchonizerParam != null && updateLogSynchonizerParam instanceof NamedList) {\n        updateLogSynchronizerConfiguration = SolrParams.toSolrParams((NamedList) updateLogSynchonizerParam);\n      }\n\n      // Configuration of the Replicator\n      Object replicatorParam = args.get(CdcrParams.REPLICATOR_PARAM);\n      if (replicatorParam != null && replicatorParam instanceof NamedList) {\n        replicatorConfiguration = SolrParams.toSolrParams((NamedList) replicatorParam);\n      }\n\n      // Configuration of the Buffer\n      Object bufferParam = args.get(CdcrParams.BUFFER_PARAM);\n      if (bufferParam != null && bufferParam instanceof NamedList) {\n        bufferConfiguration = SolrParams.toSolrParams((NamedList) bufferParam);\n      }\n\n      // Configuration of the Replicas\n      replicasConfiguration = new HashMap<>();\n      List replicas = args.getAll(CdcrParams.REPLICA_PARAM);\n      for (Object replica : replicas) {\n        if (replicas != null && replica instanceof NamedList) {\n          SolrParams params = SolrParams.toSolrParams((NamedList) replica);\n          if (!replicasConfiguration.containsKey(params.get(CdcrParams.SOURCE_COLLECTION_PARAM))) {\n            replicasConfiguration.put(params.get(CdcrParams.SOURCE_COLLECTION_PARAM), new ArrayList<SolrParams>());\n          }\n          replicasConfiguration.get(params.get(CdcrParams.SOURCE_COLLECTION_PARAM)).add(params);\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"129e5b874f99ae4e04f39c337c940dda690f2d38","date":1524504409,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/CdcrRequestHandler#init(NamedList).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/CdcrRequestHandler#init(NamedList).mjava","sourceNew":"  @Override\n  public void init(NamedList args) {\n    super.init(args);\n\n    if (args != null) {\n      // Configuration of the Update Log Synchronizer\n      Object updateLogSynchonizerParam = args.get(CdcrParams.UPDATE_LOG_SYNCHRONIZER_PARAM);\n      if (updateLogSynchonizerParam != null && updateLogSynchonizerParam instanceof NamedList) {\n        updateLogSynchronizerConfiguration = ((NamedList) updateLogSynchonizerParam).toSolrParams();\n      }\n\n      // Configuration of the Replicator\n      Object replicatorParam = args.get(CdcrParams.REPLICATOR_PARAM);\n      if (replicatorParam != null && replicatorParam instanceof NamedList) {\n        replicatorConfiguration = ((NamedList) replicatorParam).toSolrParams();\n      }\n\n      // Configuration of the Buffer\n      Object bufferParam = args.get(CdcrParams.BUFFER_PARAM);\n      if (bufferParam != null && bufferParam instanceof NamedList) {\n        bufferConfiguration = ((NamedList) bufferParam).toSolrParams();\n      }\n\n      // Configuration of the Replicas\n      replicasConfiguration = new HashMap<>();\n      List replicas = args.getAll(CdcrParams.REPLICA_PARAM);\n      for (Object replica : replicas) {\n        if (replica != null && replica instanceof NamedList) {\n          SolrParams params = ((NamedList) replica).toSolrParams();\n          if (!replicasConfiguration.containsKey(params.get(CdcrParams.SOURCE_COLLECTION_PARAM))) {\n            replicasConfiguration.put(params.get(CdcrParams.SOURCE_COLLECTION_PARAM), new ArrayList<>());\n          }\n          replicasConfiguration.get(params.get(CdcrParams.SOURCE_COLLECTION_PARAM)).add(params);\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void init(NamedList args) {\n    super.init(args);\n\n    if (args != null) {\n      // Configuration of the Update Log Synchronizer\n      Object updateLogSynchonizerParam = args.get(CdcrParams.UPDATE_LOG_SYNCHRONIZER_PARAM);\n      if (updateLogSynchonizerParam != null && updateLogSynchonizerParam instanceof NamedList) {\n        updateLogSynchronizerConfiguration = SolrParams.toSolrParams((NamedList) updateLogSynchonizerParam);\n      }\n\n      // Configuration of the Replicator\n      Object replicatorParam = args.get(CdcrParams.REPLICATOR_PARAM);\n      if (replicatorParam != null && replicatorParam instanceof NamedList) {\n        replicatorConfiguration = SolrParams.toSolrParams((NamedList) replicatorParam);\n      }\n\n      // Configuration of the Buffer\n      Object bufferParam = args.get(CdcrParams.BUFFER_PARAM);\n      if (bufferParam != null && bufferParam instanceof NamedList) {\n        bufferConfiguration = SolrParams.toSolrParams((NamedList) bufferParam);\n      }\n\n      // Configuration of the Replicas\n      replicasConfiguration = new HashMap<>();\n      List replicas = args.getAll(CdcrParams.REPLICA_PARAM);\n      for (Object replica : replicas) {\n        if (replica != null && replica instanceof NamedList) {\n          SolrParams params = SolrParams.toSolrParams((NamedList) replica);\n          if (!replicasConfiguration.containsKey(params.get(CdcrParams.SOURCE_COLLECTION_PARAM))) {\n            replicasConfiguration.put(params.get(CdcrParams.SOURCE_COLLECTION_PARAM), new ArrayList<>());\n          }\n          replicasConfiguration.get(params.get(CdcrParams.SOURCE_COLLECTION_PARAM)).add(params);\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2caf6d6e842e1a4e4ae68ec6dfa5139c31a84ec5","date":1591384964,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/CdcrRequestHandler#init(NamedList).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/CdcrRequestHandler#init(NamedList).mjava","sourceNew":"  @Override\n  public void init(@SuppressWarnings({\"rawtypes\"})NamedList args) {\n    super.init(args);\n\n    if (args != null) {\n      // Configuration of the Update Log Synchronizer\n      Object updateLogSynchonizerParam = args.get(CdcrParams.UPDATE_LOG_SYNCHRONIZER_PARAM);\n      if (updateLogSynchonizerParam != null && updateLogSynchonizerParam instanceof NamedList) {\n        updateLogSynchronizerConfiguration = ((NamedList) updateLogSynchonizerParam).toSolrParams();\n      }\n\n      // Configuration of the Replicator\n      Object replicatorParam = args.get(CdcrParams.REPLICATOR_PARAM);\n      if (replicatorParam != null && replicatorParam instanceof NamedList) {\n        replicatorConfiguration = ((NamedList) replicatorParam).toSolrParams();\n      }\n\n      // Configuration of the Buffer\n      Object bufferParam = args.get(CdcrParams.BUFFER_PARAM);\n      if (bufferParam != null && bufferParam instanceof NamedList) {\n        bufferConfiguration = ((NamedList) bufferParam).toSolrParams();\n      }\n\n      // Configuration of the Replicas\n      replicasConfiguration = new HashMap<>();\n      @SuppressWarnings({\"rawtypes\"})\n      List replicas = args.getAll(CdcrParams.REPLICA_PARAM);\n      for (Object replica : replicas) {\n        if (replica != null && replica instanceof NamedList) {\n          SolrParams params = ((NamedList) replica).toSolrParams();\n          if (!replicasConfiguration.containsKey(params.get(CdcrParams.SOURCE_COLLECTION_PARAM))) {\n            replicasConfiguration.put(params.get(CdcrParams.SOURCE_COLLECTION_PARAM), new ArrayList<>());\n          }\n          replicasConfiguration.get(params.get(CdcrParams.SOURCE_COLLECTION_PARAM)).add(params);\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void init(NamedList args) {\n    super.init(args);\n\n    if (args != null) {\n      // Configuration of the Update Log Synchronizer\n      Object updateLogSynchonizerParam = args.get(CdcrParams.UPDATE_LOG_SYNCHRONIZER_PARAM);\n      if (updateLogSynchonizerParam != null && updateLogSynchonizerParam instanceof NamedList) {\n        updateLogSynchronizerConfiguration = ((NamedList) updateLogSynchonizerParam).toSolrParams();\n      }\n\n      // Configuration of the Replicator\n      Object replicatorParam = args.get(CdcrParams.REPLICATOR_PARAM);\n      if (replicatorParam != null && replicatorParam instanceof NamedList) {\n        replicatorConfiguration = ((NamedList) replicatorParam).toSolrParams();\n      }\n\n      // Configuration of the Buffer\n      Object bufferParam = args.get(CdcrParams.BUFFER_PARAM);\n      if (bufferParam != null && bufferParam instanceof NamedList) {\n        bufferConfiguration = ((NamedList) bufferParam).toSolrParams();\n      }\n\n      // Configuration of the Replicas\n      replicasConfiguration = new HashMap<>();\n      List replicas = args.getAll(CdcrParams.REPLICA_PARAM);\n      for (Object replica : replicas) {\n        if (replica != null && replica instanceof NamedList) {\n          SolrParams params = ((NamedList) replica).toSolrParams();\n          if (!replicasConfiguration.containsKey(params.get(CdcrParams.SOURCE_COLLECTION_PARAM))) {\n            replicasConfiguration.put(params.get(CdcrParams.SOURCE_COLLECTION_PARAM), new ArrayList<>());\n          }\n          replicasConfiguration.get(params.get(CdcrParams.SOURCE_COLLECTION_PARAM)).add(params);\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9472fffd6d00e0cc9b2e881d20e9961f13cc8520","date":1593687569,"type":3,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/CdcrRequestHandler#init(NamedList).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/CdcrRequestHandler#init(NamedList).mjava","sourceNew":"  @Override\n  public void init(@SuppressWarnings({\"rawtypes\"})NamedList args) {\n    super.init(args);\n\n    log.warn(\"CDCR (in its current form) is deprecated as of 8.6 and shall be removed in 9.0. See SOLR-14022 for details.\");\n\n    if (args != null) {\n      // Configuration of the Update Log Synchronizer\n      Object updateLogSynchonizerParam = args.get(CdcrParams.UPDATE_LOG_SYNCHRONIZER_PARAM);\n      if (updateLogSynchonizerParam != null && updateLogSynchonizerParam instanceof NamedList) {\n        updateLogSynchronizerConfiguration = ((NamedList) updateLogSynchonizerParam).toSolrParams();\n      }\n\n      // Configuration of the Replicator\n      Object replicatorParam = args.get(CdcrParams.REPLICATOR_PARAM);\n      if (replicatorParam != null && replicatorParam instanceof NamedList) {\n        replicatorConfiguration = ((NamedList) replicatorParam).toSolrParams();\n      }\n\n      // Configuration of the Buffer\n      Object bufferParam = args.get(CdcrParams.BUFFER_PARAM);\n      if (bufferParam != null && bufferParam instanceof NamedList) {\n        bufferConfiguration = ((NamedList) bufferParam).toSolrParams();\n      }\n\n      // Configuration of the Replicas\n      replicasConfiguration = new HashMap<>();\n      @SuppressWarnings({\"rawtypes\"})\n      List replicas = args.getAll(CdcrParams.REPLICA_PARAM);\n      for (Object replica : replicas) {\n        if (replica != null && replica instanceof NamedList) {\n          SolrParams params = ((NamedList) replica).toSolrParams();\n          if (!replicasConfiguration.containsKey(params.get(CdcrParams.SOURCE_COLLECTION_PARAM))) {\n            replicasConfiguration.put(params.get(CdcrParams.SOURCE_COLLECTION_PARAM), new ArrayList<>());\n          }\n          replicasConfiguration.get(params.get(CdcrParams.SOURCE_COLLECTION_PARAM)).add(params);\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void init(@SuppressWarnings({\"rawtypes\"})NamedList args) {\n    super.init(args);\n\n    if (args != null) {\n      // Configuration of the Update Log Synchronizer\n      Object updateLogSynchonizerParam = args.get(CdcrParams.UPDATE_LOG_SYNCHRONIZER_PARAM);\n      if (updateLogSynchonizerParam != null && updateLogSynchonizerParam instanceof NamedList) {\n        updateLogSynchronizerConfiguration = ((NamedList) updateLogSynchonizerParam).toSolrParams();\n      }\n\n      // Configuration of the Replicator\n      Object replicatorParam = args.get(CdcrParams.REPLICATOR_PARAM);\n      if (replicatorParam != null && replicatorParam instanceof NamedList) {\n        replicatorConfiguration = ((NamedList) replicatorParam).toSolrParams();\n      }\n\n      // Configuration of the Buffer\n      Object bufferParam = args.get(CdcrParams.BUFFER_PARAM);\n      if (bufferParam != null && bufferParam instanceof NamedList) {\n        bufferConfiguration = ((NamedList) bufferParam).toSolrParams();\n      }\n\n      // Configuration of the Replicas\n      replicasConfiguration = new HashMap<>();\n      @SuppressWarnings({\"rawtypes\"})\n      List replicas = args.getAll(CdcrParams.REPLICA_PARAM);\n      for (Object replica : replicas) {\n        if (replica != null && replica instanceof NamedList) {\n          SolrParams params = ((NamedList) replica).toSolrParams();\n          if (!replicasConfiguration.containsKey(params.get(CdcrParams.SOURCE_COLLECTION_PARAM))) {\n            replicasConfiguration.put(params.get(CdcrParams.SOURCE_COLLECTION_PARAM), new ArrayList<>());\n          }\n          replicasConfiguration.get(params.get(CdcrParams.SOURCE_COLLECTION_PARAM)).add(params);\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"23ec6d2969d61cadbfd0a5452e9be1f9999e8aa1","date":1598647393,"type":4,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/handler/CdcrRequestHandler#init(NamedList).mjava","sourceNew":null,"sourceOld":"  @Override\n  public void init(@SuppressWarnings({\"rawtypes\"})NamedList args) {\n    super.init(args);\n\n    log.warn(\"CDCR (in its current form) is deprecated as of 8.6 and shall be removed in 9.0. See SOLR-14022 for details.\");\n\n    if (args != null) {\n      // Configuration of the Update Log Synchronizer\n      Object updateLogSynchonizerParam = args.get(CdcrParams.UPDATE_LOG_SYNCHRONIZER_PARAM);\n      if (updateLogSynchonizerParam != null && updateLogSynchonizerParam instanceof NamedList) {\n        updateLogSynchronizerConfiguration = ((NamedList) updateLogSynchonizerParam).toSolrParams();\n      }\n\n      // Configuration of the Replicator\n      Object replicatorParam = args.get(CdcrParams.REPLICATOR_PARAM);\n      if (replicatorParam != null && replicatorParam instanceof NamedList) {\n        replicatorConfiguration = ((NamedList) replicatorParam).toSolrParams();\n      }\n\n      // Configuration of the Buffer\n      Object bufferParam = args.get(CdcrParams.BUFFER_PARAM);\n      if (bufferParam != null && bufferParam instanceof NamedList) {\n        bufferConfiguration = ((NamedList) bufferParam).toSolrParams();\n      }\n\n      // Configuration of the Replicas\n      replicasConfiguration = new HashMap<>();\n      @SuppressWarnings({\"rawtypes\"})\n      List replicas = args.getAll(CdcrParams.REPLICA_PARAM);\n      for (Object replica : replicas) {\n        if (replica != null && replica instanceof NamedList) {\n          SolrParams params = ((NamedList) replica).toSolrParams();\n          if (!replicasConfiguration.containsKey(params.get(CdcrParams.SOURCE_COLLECTION_PARAM))) {\n            replicasConfiguration.put(params.get(CdcrParams.SOURCE_COLLECTION_PARAM), new ArrayList<>());\n          }\n          replicasConfiguration.get(params.get(CdcrParams.SOURCE_COLLECTION_PARAM)).add(params);\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"61655e38c2bbf0c3157cece14985b14dde2899af":["86290366cefc1b9d4eced13b430858c4a4c0421d"],"86290366cefc1b9d4eced13b430858c4a4c0421d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"129e5b874f99ae4e04f39c337c940dda690f2d38":["61655e38c2bbf0c3157cece14985b14dde2899af"],"9472fffd6d00e0cc9b2e881d20e9961f13cc8520":["2caf6d6e842e1a4e4ae68ec6dfa5139c31a84ec5"],"2caf6d6e842e1a4e4ae68ec6dfa5139c31a84ec5":["129e5b874f99ae4e04f39c337c940dda690f2d38"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"23ec6d2969d61cadbfd0a5452e9be1f9999e8aa1":["9472fffd6d00e0cc9b2e881d20e9961f13cc8520"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["23ec6d2969d61cadbfd0a5452e9be1f9999e8aa1"]},"commit2Childs":{"61655e38c2bbf0c3157cece14985b14dde2899af":["129e5b874f99ae4e04f39c337c940dda690f2d38"],"86290366cefc1b9d4eced13b430858c4a4c0421d":["61655e38c2bbf0c3157cece14985b14dde2899af"],"129e5b874f99ae4e04f39c337c940dda690f2d38":["2caf6d6e842e1a4e4ae68ec6dfa5139c31a84ec5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["86290366cefc1b9d4eced13b430858c4a4c0421d"],"9472fffd6d00e0cc9b2e881d20e9961f13cc8520":["23ec6d2969d61cadbfd0a5452e9be1f9999e8aa1"],"2caf6d6e842e1a4e4ae68ec6dfa5139c31a84ec5":["9472fffd6d00e0cc9b2e881d20e9961f13cc8520"],"23ec6d2969d61cadbfd0a5452e9be1f9999e8aa1":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}