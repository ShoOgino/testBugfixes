{"path":"lucene/sandbox/src/java/org/apache/lucene/search/DocValuesTermsQuery#equals(Object).mjava","commits":[{"id":"9fb0efe75e5c6021561f115dfe334b74786364ba","date":1434366074,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/search/DocValuesTermsQuery#equals(Object).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/DocValuesTermsQuery#equals(Object).mjava","sourceNew":"  @Override\n  public boolean equals(Object obj) {\n    if (obj instanceof DocValuesTermsQuery == false) {\n      return false;\n    }\n    DocValuesTermsQuery that = (DocValuesTermsQuery) obj;\n    if (!super.equals(obj)) {\n      return false;\n    }\n    if (!field.equals(that.field)) {\n      return false;\n    }\n    return Arrays.equals(terms, that.terms);\n  }\n\n","sourceOld":"  @Override\n  public boolean equals(Object obj) {\n    if (obj instanceof DocValuesTermsQuery == false) {\n      return false;\n    }\n    DocValuesTermsQuery that = (DocValuesTermsQuery) obj;\n    if (!super.equals(obj)) {\n      return false;\n    }\n    if (!field.equals(that.field)) {\n      return false;\n    }\n    return Arrays.equals(terms, that.terms);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2dfdf766e55e943d942055d7de53c7ad6bc45283","date":1441632886,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/search/DocValuesTermsQuery#equals(Object).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/search/DocValuesTermsQuery#equals(Object).mjava","sourceNew":"  @Override\n  public boolean equals(Object obj) {\n    if (super.equals(obj) == false) {\n      return false;\n    }\n    DocValuesTermsQuery that = (DocValuesTermsQuery) obj;\n    if (!field.equals(that.field)) {\n      return false;\n    }\n    return Arrays.equals(terms, that.terms);\n  }\n\n","sourceOld":"  @Override\n  public boolean equals(Object obj) {\n    if (obj instanceof DocValuesTermsQuery == false) {\n      return false;\n    }\n    DocValuesTermsQuery that = (DocValuesTermsQuery) obj;\n    if (!super.equals(obj)) {\n      return false;\n    }\n    if (!field.equals(that.field)) {\n      return false;\n    }\n    return Arrays.equals(terms, that.terms);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0e7bc21595222ae4f75509300fbb7726691f387f","date":1464078795,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/search/DocValuesTermsQuery#equals(Object).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/search/DocValuesTermsQuery#equals(Object).mjava","sourceNew":"  @Override\n  public boolean equals(Object other) {\n    return sameClassAs(other) &&\n           equalsTo(getClass().cast(other));\n  }\n\n","sourceOld":"  @Override\n  public boolean equals(Object obj) {\n    if (super.equals(obj) == false) {\n      return false;\n    }\n    DocValuesTermsQuery that = (DocValuesTermsQuery) obj;\n    if (!field.equals(that.field)) {\n      return false;\n    }\n    return Arrays.equals(terms, that.terms);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/search/DocValuesTermsQuery#equals(Object).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/search/DocValuesTermsQuery#equals(Object).mjava","sourceNew":"  @Override\n  public boolean equals(Object other) {\n    return sameClassAs(other) &&\n           equalsTo(getClass().cast(other));\n  }\n\n","sourceOld":"  @Override\n  public boolean equals(Object obj) {\n    if (super.equals(obj) == false) {\n      return false;\n    }\n    DocValuesTermsQuery that = (DocValuesTermsQuery) obj;\n    if (!field.equals(that.field)) {\n      return false;\n    }\n    return Arrays.equals(terms, that.terms);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0e7bc21595222ae4f75509300fbb7726691f387f":["2dfdf766e55e943d942055d7de53c7ad6bc45283"],"2dfdf766e55e943d942055d7de53c7ad6bc45283":["9fb0efe75e5c6021561f115dfe334b74786364ba"],"9fb0efe75e5c6021561f115dfe334b74786364ba":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["2dfdf766e55e943d942055d7de53c7ad6bc45283","0e7bc21595222ae4f75509300fbb7726691f387f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0e7bc21595222ae4f75509300fbb7726691f387f"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9fb0efe75e5c6021561f115dfe334b74786364ba"],"0e7bc21595222ae4f75509300fbb7726691f387f":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"2dfdf766e55e943d942055d7de53c7ad6bc45283":["0e7bc21595222ae4f75509300fbb7726691f387f","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"9fb0efe75e5c6021561f115dfe334b74786364ba":["2dfdf766e55e943d942055d7de53c7ad6bc45283"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}