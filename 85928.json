{"path":"src/java/org/apache/lucene/search/Query#weight(Searcher).mjava","commits":[{"id":"27274410c91546fcfc28e692abd2dd77ca99be4b","date":1042501834,"type":0,"author":"Doug Cutting","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/Query#weight(Searcher).mjava","pathOld":"/dev/null","sourceNew":"  /** Expert: Constructs an initializes a Weight for a top-level query. */\n  public Weight weight(Searcher searcher)\n    throws IOException {\n    Query query = searcher.rewrite(this);\n    Weight weight = query.createWeight(searcher);\n    float sum = weight.sumOfSquaredWeights();\n    float norm = searcher.getSimilarity().queryNorm(sum);\n    weight.normalize(norm);\n    return weight;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8bf3ec8f8b7d926e51ec6723d33679ea12e5d23c","date":1076095160,"type":3,"author":"Doug Cutting","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/Query#weight(Searcher).mjava","pathOld":"src/java/org/apache/lucene/search/Query#weight(Searcher).mjava","sourceNew":"  /** Expert: Constructs an initializes a Weight for a top-level query. */\n  public Weight weight(Searcher searcher)\n    throws IOException {\n    Query query = searcher.rewrite(this);\n    Weight weight = query.createWeight(searcher);\n    float sum = weight.sumOfSquaredWeights();\n    float norm = getSimilarity(searcher).queryNorm(sum);\n    weight.normalize(norm);\n    return weight;\n  }\n\n","sourceOld":"  /** Expert: Constructs an initializes a Weight for a top-level query. */\n  public Weight weight(Searcher searcher)\n    throws IOException {\n    Query query = searcher.rewrite(this);\n    Weight weight = query.createWeight(searcher);\n    float sum = weight.sumOfSquaredWeights();\n    float norm = searcher.getSimilarity().queryNorm(sum);\n    weight.normalize(norm);\n    return weight;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9b0e15d83678c88079a6f8a2e32f32c0d82d0632","date":1131733942,"type":3,"author":"Daniel Naber","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/Query#weight(Searcher).mjava","pathOld":"src/java/org/apache/lucene/search/Query#weight(Searcher).mjava","sourceNew":"  /** Expert: Constructs and initializes a Weight for a top-level query. */\n  public Weight weight(Searcher searcher)\n    throws IOException {\n    Query query = searcher.rewrite(this);\n    Weight weight = query.createWeight(searcher);\n    float sum = weight.sumOfSquaredWeights();\n    float norm = getSimilarity(searcher).queryNorm(sum);\n    weight.normalize(norm);\n    return weight;\n  }\n\n","sourceOld":"  /** Expert: Constructs an initializes a Weight for a top-level query. */\n  public Weight weight(Searcher searcher)\n    throws IOException {\n    Query query = searcher.rewrite(this);\n    Weight weight = query.createWeight(searcher);\n    float sum = weight.sumOfSquaredWeights();\n    float norm = getSimilarity(searcher).queryNorm(sum);\n    weight.normalize(norm);\n    return weight;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"052fac7830290bd38a04cddee1a121ee07656b56","date":1245780702,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/Query#weight(Searcher).mjava","pathOld":"src/java/org/apache/lucene/search/Query#weight(Searcher).mjava","sourceNew":"  /**\n   * Expert: Constructs and initializes a Weight for a top-level query.\n   * \n   * @deprecated use {@link #queryWeight(Searcher)} instead.\n   */\n  public Weight weight(Searcher searcher) throws IOException {\n    return queryWeight(searcher);\n  }\n\n","sourceOld":"  /** Expert: Constructs and initializes a Weight for a top-level query. */\n  public Weight weight(Searcher searcher)\n    throws IOException {\n    Query query = searcher.rewrite(this);\n    Weight weight = query.createWeight(searcher);\n    float sum = weight.sumOfSquaredWeights();\n    float norm = getSimilarity(searcher).queryNorm(sum);\n    weight.normalize(norm);\n    return weight;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe941135bdfc28c81e20b4d21422f8726af34925","date":1250040150,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/Query#weight(Searcher).mjava","pathOld":"src/java/org/apache/lucene/search/Query#weight(Searcher).mjava","sourceNew":"  /**\n   * Expert: Constructs and initializes a Weight for a top-level query.\n   */\n  public Weight weight(Searcher searcher) throws IOException {\n    Query query = searcher.rewrite(this);\n    Weight weight = query.createWeight(searcher);\n    float sum = weight.sumOfSquaredWeights();\n    float norm = getSimilarity(searcher).queryNorm(sum);\n    weight.normalize(norm);\n    return weight;\n  }\n\n","sourceOld":"  /**\n   * Expert: Constructs and initializes a Weight for a top-level query.\n   * \n   * @deprecated use {@link #queryWeight(Searcher)} instead.\n   */\n  public Weight weight(Searcher searcher) throws IOException {\n    return queryWeight(searcher);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"09ac736b44b0376611f02e5b1820e77d696612c8","date":1266524748,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/Query#weight(Searcher).mjava","pathOld":"src/java/org/apache/lucene/search/Query#weight(Searcher).mjava","sourceNew":"  /**\n   * Expert: Constructs and initializes a Weight for a top-level query.\n   */\n  public Weight weight(Searcher searcher) throws IOException {\n    Query query = searcher.rewrite(this);\n    Weight weight = query.createWeight(searcher);\n    float sum = weight.sumOfSquaredWeights();\n    float norm = getSimilarity(searcher).queryNorm(sum);\n    if (Float.isInfinite(norm) || Float.isNaN(norm))\n      norm = 1.0f;\n    weight.normalize(norm);\n    return weight;\n  }\n\n","sourceOld":"  /**\n   * Expert: Constructs and initializes a Weight for a top-level query.\n   */\n  public Weight weight(Searcher searcher) throws IOException {\n    Query query = searcher.rewrite(this);\n    Weight weight = query.createWeight(searcher);\n    float sum = weight.sumOfSquaredWeights();\n    float norm = getSimilarity(searcher).queryNorm(sum);\n    weight.normalize(norm);\n    return weight;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/Query#weight(Searcher).mjava","pathOld":"src/java/org/apache/lucene/search/Query#weight(Searcher).mjava","sourceNew":"  /**\n   * Expert: Constructs and initializes a Weight for a top-level query.\n   */\n  public Weight weight(Searcher searcher) throws IOException {\n    Query query = searcher.rewrite(this);\n    Weight weight = query.createWeight(searcher);\n    float sum = weight.sumOfSquaredWeights();\n    float norm = getSimilarity(searcher).queryNorm(sum);\n    if (Float.isInfinite(norm) || Float.isNaN(norm))\n      norm = 1.0f;\n    weight.normalize(norm);\n    return weight;\n  }\n\n","sourceOld":"  /**\n   * Expert: Constructs and initializes a Weight for a top-level query.\n   */\n  public Weight weight(Searcher searcher) throws IOException {\n    Query query = searcher.rewrite(this);\n    Weight weight = query.createWeight(searcher);\n    float sum = weight.sumOfSquaredWeights();\n    float norm = getSimilarity(searcher).queryNorm(sum);\n    if (Float.isInfinite(norm) || Float.isNaN(norm))\n      norm = 1.0f;\n    weight.normalize(norm);\n    return weight;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9b0e15d83678c88079a6f8a2e32f32c0d82d0632":["8bf3ec8f8b7d926e51ec6723d33679ea12e5d23c"],"27274410c91546fcfc28e692abd2dd77ca99be4b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"fe941135bdfc28c81e20b4d21422f8726af34925":["052fac7830290bd38a04cddee1a121ee07656b56"],"09ac736b44b0376611f02e5b1820e77d696612c8":["fe941135bdfc28c81e20b4d21422f8726af34925"],"8bf3ec8f8b7d926e51ec6723d33679ea12e5d23c":["27274410c91546fcfc28e692abd2dd77ca99be4b"],"052fac7830290bd38a04cddee1a121ee07656b56":["9b0e15d83678c88079a6f8a2e32f32c0d82d0632"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["09ac736b44b0376611f02e5b1820e77d696612c8"]},"commit2Childs":{"9b0e15d83678c88079a6f8a2e32f32c0d82d0632":["052fac7830290bd38a04cddee1a121ee07656b56"],"27274410c91546fcfc28e692abd2dd77ca99be4b":["8bf3ec8f8b7d926e51ec6723d33679ea12e5d23c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["27274410c91546fcfc28e692abd2dd77ca99be4b"],"fe941135bdfc28c81e20b4d21422f8726af34925":["09ac736b44b0376611f02e5b1820e77d696612c8"],"09ac736b44b0376611f02e5b1820e77d696612c8":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"8bf3ec8f8b7d926e51ec6723d33679ea12e5d23c":["9b0e15d83678c88079a6f8a2e32f32c0d82d0632"],"052fac7830290bd38a04cddee1a121ee07656b56":["fe941135bdfc28c81e20b4d21422f8726af34925"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}