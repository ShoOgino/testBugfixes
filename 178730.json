{"path":"lucene/core/src/test/org/apache/lucene/search/TestNRTManager#testEvilSearcherFactory().mjava","commits":[{"id":"c380c22ff3b659b2d7412a3335f853d354d17568","date":1329505731,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestNRTManager#testEvilSearcherFactory().mjava","pathOld":"/dev/null","sourceNew":"  public void testEvilSearcherFactory() throws Exception {\n    final Directory dir = newDirectory();\n    final RandomIndexWriter w = new RandomIndexWriter(random, dir);\n    w.commit();\n\n    final IndexReader other = DirectoryReader.open(dir);\n\n    final SearcherFactory theEvilOne = new SearcherFactory() {\n      @Override\n      public IndexSearcher newSearcher(IndexReader ignored) throws IOException {\n        return new IndexSearcher(other);\n      }\n      };\n\n    try {\n      new NRTManager(new NRTManager.TrackingIndexWriter(w.w), theEvilOne);\n    } catch (IllegalStateException ise) {\n      // expected\n    }\n    w.close();\n    other.close();\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["05fe562aa248790944d43cdd478f512572835ba0","4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"629c38c4ae4e303d0617e05fbfe508140b32f0a3","date":1334500904,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestNRTManager#testEvilSearcherFactory().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestNRTManager#testEvilSearcherFactory().mjava","sourceNew":"  public void testEvilSearcherFactory() throws Exception {\n    final Directory dir = newDirectory();\n    final RandomIndexWriter w = new RandomIndexWriter(random(), dir);\n    w.commit();\n\n    final IndexReader other = DirectoryReader.open(dir);\n\n    final SearcherFactory theEvilOne = new SearcherFactory() {\n      @Override\n      public IndexSearcher newSearcher(IndexReader ignored) throws IOException {\n        return new IndexSearcher(other);\n      }\n      };\n\n    try {\n      new NRTManager(new NRTManager.TrackingIndexWriter(w.w), theEvilOne);\n    } catch (IllegalStateException ise) {\n      // expected\n    }\n    w.close();\n    other.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testEvilSearcherFactory() throws Exception {\n    final Directory dir = newDirectory();\n    final RandomIndexWriter w = new RandomIndexWriter(random, dir);\n    w.commit();\n\n    final IndexReader other = DirectoryReader.open(dir);\n\n    final SearcherFactory theEvilOne = new SearcherFactory() {\n      @Override\n      public IndexSearcher newSearcher(IndexReader ignored) throws IOException {\n        return new IndexSearcher(other);\n      }\n      };\n\n    try {\n      new NRTManager(new NRTManager.TrackingIndexWriter(w.w), theEvilOne);\n    } catch (IllegalStateException ise) {\n      // expected\n    }\n    w.close();\n    other.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4d3e8520fd031bab31fd0e4d480e55958bc45efe","date":1340901565,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestNRTManager#testEvilSearcherFactory().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestNRTManager#testEvilSearcherFactory().mjava","sourceNew":"  public void testEvilSearcherFactory() throws Exception {\n    final Directory dir = newDirectory();\n    final RandomIndexWriter w = new RandomIndexWriter(random(), dir);\n    w.commit();\n\n    final IndexReader other = DirectoryReader.open(dir);\n\n    final SearcherFactory theEvilOne = new SearcherFactory() {\n      @Override\n      public IndexSearcher newSearcher(IndexReader ignored) {\n        return new IndexSearcher(other);\n      }\n      };\n\n    try {\n      new NRTManager(new NRTManager.TrackingIndexWriter(w.w), theEvilOne);\n    } catch (IllegalStateException ise) {\n      // expected\n    }\n    w.close();\n    other.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testEvilSearcherFactory() throws Exception {\n    final Directory dir = newDirectory();\n    final RandomIndexWriter w = new RandomIndexWriter(random(), dir);\n    w.commit();\n\n    final IndexReader other = DirectoryReader.open(dir);\n\n    final SearcherFactory theEvilOne = new SearcherFactory() {\n      @Override\n      public IndexSearcher newSearcher(IndexReader ignored) throws IOException {\n        return new IndexSearcher(other);\n      }\n      };\n\n    try {\n      new NRTManager(new NRTManager.TrackingIndexWriter(w.w), theEvilOne);\n    } catch (IllegalStateException ise) {\n      // expected\n    }\n    w.close();\n    other.close();\n    dir.close();\n  }\n\n","bugFix":["c380c22ff3b659b2d7412a3335f853d354d17568"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestNRTManager#testEvilSearcherFactory().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestNRTManager#testEvilSearcherFactory().mjava","sourceNew":"  public void testEvilSearcherFactory() throws Exception {\n    final Directory dir = newDirectory();\n    final RandomIndexWriter w = new RandomIndexWriter(random(), dir);\n    w.commit();\n\n    final IndexReader other = DirectoryReader.open(dir);\n\n    final SearcherFactory theEvilOne = new SearcherFactory() {\n      @Override\n      public IndexSearcher newSearcher(IndexReader ignored) {\n        return new IndexSearcher(other);\n      }\n      };\n\n    try {\n      new NRTManager(new NRTManager.TrackingIndexWriter(w.w), theEvilOne);\n    } catch (IllegalStateException ise) {\n      // expected\n    }\n    w.close();\n    other.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testEvilSearcherFactory() throws Exception {\n    final Directory dir = newDirectory();\n    final RandomIndexWriter w = new RandomIndexWriter(random(), dir);\n    w.commit();\n\n    final IndexReader other = DirectoryReader.open(dir);\n\n    final SearcherFactory theEvilOne = new SearcherFactory() {\n      @Override\n      public IndexSearcher newSearcher(IndexReader ignored) throws IOException {\n        return new IndexSearcher(other);\n      }\n      };\n\n    try {\n      new NRTManager(new NRTManager.TrackingIndexWriter(w.w), theEvilOne);\n    } catch (IllegalStateException ise) {\n      // expected\n    }\n    w.close();\n    other.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3b0e8c39ca08b5a02de6edcd33d6f3b90b865173","date":1365631993,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestNRTManager#testEvilSearcherFactory().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestNRTManager#testEvilSearcherFactory().mjava","sourceNew":"  public void testEvilSearcherFactory() throws Exception {\n    final Directory dir = newDirectory();\n    final RandomIndexWriter w = new RandomIndexWriter(random(), dir);\n    w.commit();\n\n    final IndexReader other = DirectoryReader.open(dir);\n\n    final SearcherFactory theEvilOne = new SearcherFactory() {\n      @Override\n      public IndexSearcher newSearcher(IndexReader ignored) {\n        return LuceneTestCase.newSearcher(other);\n      }\n      };\n\n    try {\n      new NRTManager(new NRTManager.TrackingIndexWriter(w.w), theEvilOne);\n    } catch (IllegalStateException ise) {\n      // expected\n    }\n    w.close();\n    other.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testEvilSearcherFactory() throws Exception {\n    final Directory dir = newDirectory();\n    final RandomIndexWriter w = new RandomIndexWriter(random(), dir);\n    w.commit();\n\n    final IndexReader other = DirectoryReader.open(dir);\n\n    final SearcherFactory theEvilOne = new SearcherFactory() {\n      @Override\n      public IndexSearcher newSearcher(IndexReader ignored) {\n        return new IndexSearcher(other);\n      }\n      };\n\n    try {\n      new NRTManager(new NRTManager.TrackingIndexWriter(w.w), theEvilOne);\n    } catch (IllegalStateException ise) {\n      // expected\n    }\n    w.close();\n    other.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c2045b132a2396bb23dff28d2d9f349a6907d36e","date":1367513076,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestControlledRealTimeReopenThread#testEvilSearcherFactory().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestNRTManager#testEvilSearcherFactory().mjava","sourceNew":"  public void testEvilSearcherFactory() throws Exception {\n    final Directory dir = newDirectory();\n    final RandomIndexWriter w = new RandomIndexWriter(random(), dir);\n    w.commit();\n\n    final IndexReader other = DirectoryReader.open(dir);\n\n    final SearcherFactory theEvilOne = new SearcherFactory() {\n      @Override\n      public IndexSearcher newSearcher(IndexReader ignored) {\n        return LuceneTestCase.newSearcher(other);\n      }\n      };\n\n    try {\n      new SearcherManager(w.w, false, theEvilOne);\n    } catch (IllegalStateException ise) {\n      // expected\n    }\n    w.close();\n    other.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testEvilSearcherFactory() throws Exception {\n    final Directory dir = newDirectory();\n    final RandomIndexWriter w = new RandomIndexWriter(random(), dir);\n    w.commit();\n\n    final IndexReader other = DirectoryReader.open(dir);\n\n    final SearcherFactory theEvilOne = new SearcherFactory() {\n      @Override\n      public IndexSearcher newSearcher(IndexReader ignored) {\n        return LuceneTestCase.newSearcher(other);\n      }\n      };\n\n    try {\n      new NRTManager(new NRTManager.TrackingIndexWriter(w.w), theEvilOne);\n    } catch (IllegalStateException ise) {\n      // expected\n    }\n    w.close();\n    other.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"c2045b132a2396bb23dff28d2d9f349a6907d36e":["3b0e8c39ca08b5a02de6edcd33d6f3b90b865173"],"c380c22ff3b659b2d7412a3335f853d354d17568":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["629c38c4ae4e303d0617e05fbfe508140b32f0a3","4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4d3e8520fd031bab31fd0e4d480e55958bc45efe":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["c380c22ff3b659b2d7412a3335f853d354d17568"],"3b0e8c39ca08b5a02de6edcd33d6f3b90b865173":["4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c2045b132a2396bb23dff28d2d9f349a6907d36e"]},"commit2Childs":{"c2045b132a2396bb23dff28d2d9f349a6907d36e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c380c22ff3b659b2d7412a3335f853d354d17568":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c380c22ff3b659b2d7412a3335f853d354d17568"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["fe33227f6805edab2036cbb80645cc4e2d1fa424","4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"4d3e8520fd031bab31fd0e4d480e55958bc45efe":["fe33227f6805edab2036cbb80645cc4e2d1fa424","3b0e8c39ca08b5a02de6edcd33d6f3b90b865173"],"3b0e8c39ca08b5a02de6edcd33d6f3b90b865173":["c2045b132a2396bb23dff28d2d9f349a6907d36e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}