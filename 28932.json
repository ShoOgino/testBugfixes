{"path":"modules/analysis/common/src/java/org/apache/lucene/analysis/compound/CompoundWordTokenFilterBase#makeDictionary(Version,String[]).mjava","commits":[{"id":"0f080986da691a3bba7b757f43ab72cdc82b57ce","date":1273069619,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/compound/CompoundWordTokenFilterBase#makeDictionary(Version,String[]).mjava","pathOld":"lucene/contrib/analyzers/common/src/java/org/apache/lucene/analysis/compound/CompoundWordTokenFilterBase#makeDictionary(Version,String[]).mjava","sourceNew":"  public static final Set<?> makeDictionary(final Version matchVersion, final String[] dictionary) {\n    // is the below really case insensitive? \n    CharArraySet dict = new CharArraySet(matchVersion, dictionary.length, false);\n    addAllLowerCase(dict, Arrays.asList(dictionary));\n    return dict;\n  }\n\n","sourceOld":"  public static final Set<?> makeDictionary(final Version matchVersion, final String[] dictionary) {\n    // is the below really case insensitive? \n    CharArraySet dict = new CharArraySet(matchVersion, dictionary.length, false);\n    addAllLowerCase(dict, Arrays.asList(dictionary));\n    return dict;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b1176cc473fd402233610120f0af6fca86314bcc","date":1274270317,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/compound/CompoundWordTokenFilterBase#makeDictionary(Version,String[]).mjava","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/compound/CompoundWordTokenFilterBase#makeDictionary(Version,String[]).mjava","sourceNew":"  public static final Set<?> makeDictionary(final Version matchVersion, final String[] dictionary) {\n    if (dictionary == null) {\n      return null;\n    }\n    // is the below really case insensitive? \n    CharArraySet dict = new CharArraySet(matchVersion, dictionary.length, false);\n    addAllLowerCase(dict, Arrays.asList(dictionary));\n    return dict;\n  }\n\n","sourceOld":"  public static final Set<?> makeDictionary(final Version matchVersion, final String[] dictionary) {\n    // is the below really case insensitive? \n    CharArraySet dict = new CharArraySet(matchVersion, dictionary.length, false);\n    addAllLowerCase(dict, Arrays.asList(dictionary));\n    return dict;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4e8cc373c801e54cec75daf9f52792cb4b17f536","date":1291116159,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/compound/CompoundWordTokenFilterBase#makeDictionary(Version,String[]).mjava","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/compound/CompoundWordTokenFilterBase#makeDictionary(Version,String[]).mjava","sourceNew":"  public static Set<?> makeDictionary(final Version matchVersion, final String[] dictionary) {\n    if (dictionary == null) {\n      return null;\n    }\n    // is the below really case insensitive? \n    CharArraySet dict = new CharArraySet(matchVersion, dictionary.length, false);\n    addAllLowerCase(dict, Arrays.asList(dictionary));\n    return dict;\n  }\n\n","sourceOld":"  public static final Set<?> makeDictionary(final Version matchVersion, final String[] dictionary) {\n    if (dictionary == null) {\n      return null;\n    }\n    // is the below really case insensitive? \n    CharArraySet dict = new CharArraySet(matchVersion, dictionary.length, false);\n    addAllLowerCase(dict, Arrays.asList(dictionary));\n    return dict;\n  }\n\n","bugFix":null,"bugIntro":["1e15bea9339982eec538668b67ae252b28e0003e"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3bb13258feba31ab676502787ab2e1779f129b7a","date":1291596436,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/compound/CompoundWordTokenFilterBase#makeDictionary(Version,String[]).mjava","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/compound/CompoundWordTokenFilterBase#makeDictionary(Version,String[]).mjava","sourceNew":"  public static Set<?> makeDictionary(final Version matchVersion, final String[] dictionary) {\n    if (dictionary == null) {\n      return null;\n    }\n    // is the below really case insensitive? \n    CharArraySet dict = new CharArraySet(matchVersion, dictionary.length, false);\n    addAllLowerCase(dict, Arrays.asList(dictionary));\n    return dict;\n  }\n\n","sourceOld":"  public static final Set<?> makeDictionary(final Version matchVersion, final String[] dictionary) {\n    if (dictionary == null) {\n      return null;\n    }\n    // is the below really case insensitive? \n    CharArraySet dict = new CharArraySet(matchVersion, dictionary.length, false);\n    addAllLowerCase(dict, Arrays.asList(dictionary));\n    return dict;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/compound/CompoundWordTokenFilterBase#makeDictionary(Version,String[]).mjava","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/compound/CompoundWordTokenFilterBase#makeDictionary(Version,String[]).mjava","sourceNew":"  public static Set<?> makeDictionary(final Version matchVersion, final String[] dictionary) {\n    if (dictionary == null) {\n      return null;\n    }\n    // is the below really case insensitive? \n    CharArraySet dict = new CharArraySet(matchVersion, dictionary.length, false);\n    addAllLowerCase(dict, Arrays.asList(dictionary));\n    return dict;\n  }\n\n","sourceOld":"  public static final Set<?> makeDictionary(final Version matchVersion, final String[] dictionary) {\n    if (dictionary == null) {\n      return null;\n    }\n    // is the below really case insensitive? \n    CharArraySet dict = new CharArraySet(matchVersion, dictionary.length, false);\n    addAllLowerCase(dict, Arrays.asList(dictionary));\n    return dict;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1e15bea9339982eec538668b67ae252b28e0003e","date":1319539476,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/compound/CompoundWordTokenFilterBase#makeDictionary(Version,String[]).mjava","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/compound/CompoundWordTokenFilterBase#makeDictionary(Version,String[]).mjava","sourceNew":"  /** @deprecated Only available for backwards compatibility. */\n  @Deprecated\n  public static CharArraySet makeDictionary(final Version matchVersion, final String[] dictionary) {\n    if (dictionary == null) {\n      return null;\n    }\n    return new CharArraySet(matchVersion, Arrays.asList(dictionary), true);\n  }\n\n","sourceOld":"  public static Set<?> makeDictionary(final Version matchVersion, final String[] dictionary) {\n    if (dictionary == null) {\n      return null;\n    }\n    // is the below really case insensitive? \n    CharArraySet dict = new CharArraySet(matchVersion, dictionary.length, false);\n    addAllLowerCase(dict, Arrays.asList(dictionary));\n    return dict;\n  }\n\n","bugFix":["4e8cc373c801e54cec75daf9f52792cb4b17f536","7f6c85ffa816c86be877aa7a5029a5daa1336e7f"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"906468dad7061882fe0b86de96423c16d5e9bc1e","date":1319542276,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/compound/CompoundWordTokenFilterBase#makeDictionary(Version,String[]).mjava","sourceNew":null,"sourceOld":"  /** @deprecated Only available for backwards compatibility. */\n  @Deprecated\n  public static CharArraySet makeDictionary(final Version matchVersion, final String[] dictionary) {\n    if (dictionary == null) {\n      return null;\n    }\n    return new CharArraySet(matchVersion, Arrays.asList(dictionary), true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1e15bea9339982eec538668b67ae252b28e0003e":["4e8cc373c801e54cec75daf9f52792cb4b17f536"],"b1176cc473fd402233610120f0af6fca86314bcc":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"906468dad7061882fe0b86de96423c16d5e9bc1e":["1e15bea9339982eec538668b67ae252b28e0003e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["b1176cc473fd402233610120f0af6fca86314bcc","4e8cc373c801e54cec75daf9f52792cb4b17f536"],"3bb13258feba31ab676502787ab2e1779f129b7a":["b1176cc473fd402233610120f0af6fca86314bcc","4e8cc373c801e54cec75daf9f52792cb4b17f536"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["906468dad7061882fe0b86de96423c16d5e9bc1e"],"4e8cc373c801e54cec75daf9f52792cb4b17f536":["b1176cc473fd402233610120f0af6fca86314bcc"]},"commit2Childs":{"1e15bea9339982eec538668b67ae252b28e0003e":["906468dad7061882fe0b86de96423c16d5e9bc1e"],"b1176cc473fd402233610120f0af6fca86314bcc":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","3bb13258feba31ab676502787ab2e1779f129b7a","4e8cc373c801e54cec75daf9f52792cb4b17f536"],"906468dad7061882fe0b86de96423c16d5e9bc1e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["b1176cc473fd402233610120f0af6fca86314bcc"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"3bb13258feba31ab676502787ab2e1779f129b7a":[],"4e8cc373c801e54cec75daf9f52792cb4b17f536":["1e15bea9339982eec538668b67ae252b28e0003e","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","3bb13258feba31ab676502787ab2e1779f129b7a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","3bb13258feba31ab676502787ab2e1779f129b7a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}