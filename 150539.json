{"path":"src/java/org/apache/lucene/index/IndexReader#getUniqueTermCount().mjava","commits":[{"id":"3fca8d7c4b4950b771c367c69facf00e13dc4a20","date":1239092714,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexReader#getUniqueTermCount().mjava","pathOld":"/dev/null","sourceNew":"  /** Returns the number of unique terms (across all fields)\n   *  in this reader.\n   *\n   *  This method returns long, even though internally\n   *  Lucene cannot handle more than 2^31 unique terms, for\n   *  a possible future when this limitation is removed.\n   *\n   *  @throws UnsupportedOperationException if this count\n   *  cannot be easily determined (eg Multi*Readers).\n   *  Instead, you should call {@link\n   *  #getSequentialSubReaders} and ask each sub reader for\n   *  its unique term count. */\n  public long getUniqueTermCount() throws IOException {\n    throw new UnsupportedOperationException(\"this reader does not implement getUniqueTermCount()\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexReader#getUniqueTermCount().mjava","pathOld":"src/java/org/apache/lucene/index/IndexReader#getUniqueTermCount().mjava","sourceNew":"  /** Returns the number of unique terms (across all fields)\n   *  in this reader.\n   *\n   *  This method returns long, even though internally\n   *  Lucene cannot handle more than 2^31 unique terms, for\n   *  a possible future when this limitation is removed.\n   *\n   *  @throws UnsupportedOperationException if this count\n   *  cannot be easily determined (eg Multi*Readers).\n   *  Instead, you should call {@link\n   *  #getSequentialSubReaders} and ask each sub reader for\n   *  its unique term count. */\n  public long getUniqueTermCount() throws IOException {\n    throw new UnsupportedOperationException(\"this reader does not implement getUniqueTermCount()\");\n  }\n\n","sourceOld":"  /** Returns the number of unique terms (across all fields)\n   *  in this reader.\n   *\n   *  This method returns long, even though internally\n   *  Lucene cannot handle more than 2^31 unique terms, for\n   *  a possible future when this limitation is removed.\n   *\n   *  @throws UnsupportedOperationException if this count\n   *  cannot be easily determined (eg Multi*Readers).\n   *  Instead, you should call {@link\n   *  #getSequentialSubReaders} and ask each sub reader for\n   *  its unique term count. */\n  public long getUniqueTermCount() throws IOException {\n    throw new UnsupportedOperationException(\"this reader does not implement getUniqueTermCount()\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3fca8d7c4b4950b771c367c69facf00e13dc4a20":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["3fca8d7c4b4950b771c367c69facf00e13dc4a20"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3fca8d7c4b4950b771c367c69facf00e13dc4a20"],"3fca8d7c4b4950b771c367c69facf00e13dc4a20":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}