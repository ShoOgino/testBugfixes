{"path":"lucene/src/test/org/apache/lucene/index/TestSegmentInfo#testSizeInBytesCache().mjava","commits":[{"id":"9ca8e3e7b05d7108f423be06781dbb3ad85e6b04","date":1294842573,"type":0,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestSegmentInfo#testSizeInBytesCache().mjava","pathOld":"/dev/null","sourceNew":"  public void testSizeInBytesCache() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer());\n    IndexWriter writer = new IndexWriter(dir, conf);\n    Document doc = new Document();\n    doc.add(new Field(\"a\", \"value\", Store.YES, Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.close();\n    \n    SegmentInfos sis = new SegmentInfos();\n    sis.read(dir);\n    SegmentInfo si = sis.info(0);\n    long sizeInBytesNoStore = si.sizeInBytes(false);\n    long sizeInBytesWithStore = si.sizeInBytes(true);\n    assertTrue(\"sizeInBytesNoStore=\" + sizeInBytesNoStore + \" sizeInBytesWithStore=\" + sizeInBytesWithStore, sizeInBytesWithStore > sizeInBytesNoStore);\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"868da859b43505d9d2a023bfeae6dd0c795f5295","date":1294948401,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestSegmentInfo#testSizeInBytesCache().mjava","pathOld":"/dev/null","sourceNew":"  public void testSizeInBytesCache() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer());\n    IndexWriter writer = new IndexWriter(dir, conf);\n    Document doc = new Document();\n    doc.add(new Field(\"a\", \"value\", Store.YES, Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.close();\n    \n    SegmentInfos sis = new SegmentInfos();\n    sis.read(dir);\n    SegmentInfo si = sis.info(0);\n    long sizeInBytesNoStore = si.sizeInBytes(false);\n    long sizeInBytesWithStore = si.sizeInBytes(true);\n    assertTrue(\"sizeInBytesNoStore=\" + sizeInBytesNoStore + \" sizeInBytesWithStore=\" + sizeInBytesWithStore, sizeInBytesWithStore > sizeInBytesNoStore);\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c58b50677b74bb699dcf17b44c13ea6bb644c95b","date":1296256342,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestSegmentInfo#testSizeInBytesCache().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestSegmentInfo#testSizeInBytesCache().mjava","sourceNew":"  public void testSizeInBytesCache() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer());\n    IndexWriter writer = new IndexWriter(dir, conf);\n    writer.setInfoStream(VERBOSE ? System.out : null);\n    Document doc = new Document();\n    doc.add(new Field(\"a\", \"value\", Store.YES, Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.close();\n    \n    SegmentInfos sis = new SegmentInfos();\n    sis.read(dir);\n    SegmentInfo si = sis.info(0);\n    long sizeInBytesNoStore = si.sizeInBytes(false);\n    long sizeInBytesWithStore = si.sizeInBytes(true);\n    assertTrue(\"sizeInBytesNoStore=\" + sizeInBytesNoStore + \" sizeInBytesWithStore=\" + sizeInBytesWithStore, sizeInBytesWithStore > sizeInBytesNoStore);\n    dir.close();\n  }\n\n","sourceOld":"  public void testSizeInBytesCache() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer());\n    IndexWriter writer = new IndexWriter(dir, conf);\n    Document doc = new Document();\n    doc.add(new Field(\"a\", \"value\", Store.YES, Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.close();\n    \n    SegmentInfos sis = new SegmentInfos();\n    sis.read(dir);\n    SegmentInfo si = sis.info(0);\n    long sizeInBytesNoStore = si.sizeInBytes(false);\n    long sizeInBytesWithStore = si.sizeInBytes(true);\n    assertTrue(\"sizeInBytesNoStore=\" + sizeInBytesNoStore + \" sizeInBytesWithStore=\" + sizeInBytesWithStore, sizeInBytesWithStore > sizeInBytesNoStore);\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c19f985e36a65cc969e8e564fe337a0d41512075","date":1296330536,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestSegmentInfo#testSizeInBytesCache().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestSegmentInfo#testSizeInBytesCache().mjava","sourceNew":"  public void testSizeInBytesCache() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setMergePolicy(newLogMergePolicy());\n    IndexWriter writer = new IndexWriter(dir, conf);\n    writer.setInfoStream(VERBOSE ? System.out : null);\n    Document doc = new Document();\n    doc.add(new Field(\"a\", \"value\", Store.YES, Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.close();\n    \n    SegmentInfos sis = new SegmentInfos();\n    sis.read(dir);\n    SegmentInfo si = sis.info(0);\n    long sizeInBytesNoStore = si.sizeInBytes(false);\n    long sizeInBytesWithStore = si.sizeInBytes(true);\n    assertTrue(\"sizeInBytesNoStore=\" + sizeInBytesNoStore + \" sizeInBytesWithStore=\" + sizeInBytesWithStore, sizeInBytesWithStore > sizeInBytesNoStore);\n    dir.close();\n  }\n\n","sourceOld":"  public void testSizeInBytesCache() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer());\n    IndexWriter writer = new IndexWriter(dir, conf);\n    writer.setInfoStream(VERBOSE ? System.out : null);\n    Document doc = new Document();\n    doc.add(new Field(\"a\", \"value\", Store.YES, Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.close();\n    \n    SegmentInfos sis = new SegmentInfos();\n    sis.read(dir);\n    SegmentInfo si = sis.info(0);\n    long sizeInBytesNoStore = si.sizeInBytes(false);\n    long sizeInBytesWithStore = si.sizeInBytes(true);\n    assertTrue(\"sizeInBytesNoStore=\" + sizeInBytesNoStore + \" sizeInBytesWithStore=\" + sizeInBytesWithStore, sizeInBytesWithStore > sizeInBytesNoStore);\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestSegmentInfo#testSizeInBytesCache().mjava","pathOld":"/dev/null","sourceNew":"  public void testSizeInBytesCache() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setMergePolicy(newLogMergePolicy());\n    IndexWriter writer = new IndexWriter(dir, conf);\n    writer.setInfoStream(VERBOSE ? System.out : null);\n    Document doc = new Document();\n    doc.add(new Field(\"a\", \"value\", Store.YES, Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.close();\n    \n    SegmentInfos sis = new SegmentInfos();\n    sis.read(dir);\n    SegmentInfo si = sis.info(0);\n    long sizeInBytesNoStore = si.sizeInBytes(false);\n    long sizeInBytesWithStore = si.sizeInBytes(true);\n    assertTrue(\"sizeInBytesNoStore=\" + sizeInBytesNoStore + \" sizeInBytesWithStore=\" + sizeInBytesWithStore, sizeInBytesWithStore > sizeInBytesNoStore);\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestSegmentInfo#testSizeInBytesCache().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestSegmentInfo#testSizeInBytesCache().mjava","sourceNew":"  public void testSizeInBytesCache() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setMergePolicy(newLogMergePolicy());\n    IndexWriter writer = new IndexWriter(dir, conf);\n    writer.setInfoStream(VERBOSE ? System.out : null);\n    Document doc = new Document();\n    doc.add(new Field(\"a\", \"value\", Store.YES, Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.close();\n    \n    SegmentInfos sis = new SegmentInfos();\n    sis.read(dir);\n    SegmentInfo si = sis.info(0);\n    long sizeInBytesNoStore = si.sizeInBytes(false);\n    long sizeInBytesWithStore = si.sizeInBytes(true);\n    assertTrue(\"sizeInBytesNoStore=\" + sizeInBytesNoStore + \" sizeInBytesWithStore=\" + sizeInBytesWithStore, sizeInBytesWithStore > sizeInBytesNoStore);\n    dir.close();\n  }\n\n","sourceOld":"  public void testSizeInBytesCache() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer());\n    IndexWriter writer = new IndexWriter(dir, conf);\n    Document doc = new Document();\n    doc.add(new Field(\"a\", \"value\", Store.YES, Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.close();\n    \n    SegmentInfos sis = new SegmentInfos();\n    sis.read(dir);\n    SegmentInfo si = sis.info(0);\n    long sizeInBytesNoStore = si.sizeInBytes(false);\n    long sizeInBytesWithStore = si.sizeInBytes(true);\n    assertTrue(\"sizeInBytesNoStore=\" + sizeInBytesNoStore + \" sizeInBytesWithStore=\" + sizeInBytesWithStore, sizeInBytesWithStore > sizeInBytesNoStore);\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f2c5f0cb44df114db4228c8f77861714b5cabaea","date":1302542431,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestSegmentInfo#testSizeInBytesCache().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestSegmentInfo#testSizeInBytesCache().mjava","sourceNew":"  public void testSizeInBytesCache() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy());\n    IndexWriter writer = new IndexWriter(dir, conf);\n    writer.setInfoStream(VERBOSE ? System.out : null);\n    Document doc = new Document();\n    doc.add(new Field(\"a\", \"value\", Store.YES, Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.close();\n    \n    SegmentInfos sis = new SegmentInfos();\n    sis.read(dir);\n    SegmentInfo si = sis.info(0);\n    long sizeInBytesNoStore = si.sizeInBytes(false);\n    long sizeInBytesWithStore = si.sizeInBytes(true);\n    assertTrue(\"sizeInBytesNoStore=\" + sizeInBytesNoStore + \" sizeInBytesWithStore=\" + sizeInBytesWithStore, sizeInBytesWithStore > sizeInBytesNoStore);\n    dir.close();\n  }\n\n","sourceOld":"  public void testSizeInBytesCache() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setMergePolicy(newLogMergePolicy());\n    IndexWriter writer = new IndexWriter(dir, conf);\n    writer.setInfoStream(VERBOSE ? System.out : null);\n    Document doc = new Document();\n    doc.add(new Field(\"a\", \"value\", Store.YES, Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.close();\n    \n    SegmentInfos sis = new SegmentInfos();\n    sis.read(dir);\n    SegmentInfo si = sis.info(0);\n    long sizeInBytesNoStore = si.sizeInBytes(false);\n    long sizeInBytesWithStore = si.sizeInBytes(true);\n    assertTrue(\"sizeInBytesNoStore=\" + sizeInBytesNoStore + \" sizeInBytesWithStore=\" + sizeInBytesWithStore, sizeInBytesWithStore > sizeInBytesNoStore);\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"962d04139994fce5193143ef35615499a9a96d78","date":1302693744,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestSegmentInfo#testSizeInBytesCache().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestSegmentInfo#testSizeInBytesCache().mjava","sourceNew":"  public void testSizeInBytesCache() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy());\n    IndexWriter writer = new IndexWriter(dir, conf);\n    writer.setInfoStream(VERBOSE ? System.out : null);\n    Document doc = new Document();\n    doc.add(new Field(\"a\", \"value\", Store.YES, Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.close();\n    \n    SegmentInfos sis = new SegmentInfos();\n    sis.read(dir);\n    SegmentInfo si = sis.info(0);\n    long sizeInBytesNoStore = si.sizeInBytes(false);\n    long sizeInBytesWithStore = si.sizeInBytes(true);\n    assertTrue(\"sizeInBytesNoStore=\" + sizeInBytesNoStore + \" sizeInBytesWithStore=\" + sizeInBytesWithStore, sizeInBytesWithStore > sizeInBytesNoStore);\n    dir.close();\n  }\n\n","sourceOld":"  public void testSizeInBytesCache() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setMergePolicy(newLogMergePolicy());\n    IndexWriter writer = new IndexWriter(dir, conf);\n    writer.setInfoStream(VERBOSE ? System.out : null);\n    Document doc = new Document();\n    doc.add(new Field(\"a\", \"value\", Store.YES, Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.close();\n    \n    SegmentInfos sis = new SegmentInfos();\n    sis.read(dir);\n    SegmentInfo si = sis.info(0);\n    long sizeInBytesNoStore = si.sizeInBytes(false);\n    long sizeInBytesWithStore = si.sizeInBytes(true);\n    assertTrue(\"sizeInBytesNoStore=\" + sizeInBytesNoStore + \" sizeInBytesWithStore=\" + sizeInBytesWithStore, sizeInBytesWithStore > sizeInBytesNoStore);\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestSegmentInfo#testSizeInBytesCache().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestSegmentInfo#testSizeInBytesCache().mjava","sourceNew":"  public void testSizeInBytesCache() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy());\n    IndexWriter writer = new IndexWriter(dir, conf);\n    writer.setInfoStream(VERBOSE ? System.out : null);\n    Document doc = new Document();\n    doc.add(new Field(\"a\", \"value\", Store.YES, Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.close();\n    \n    SegmentInfos sis = new SegmentInfos();\n    sis.read(dir);\n    SegmentInfo si = sis.info(0);\n    long sizeInBytesNoStore = si.sizeInBytes(false);\n    long sizeInBytesWithStore = si.sizeInBytes(true);\n    assertTrue(\"sizeInBytesNoStore=\" + sizeInBytesNoStore + \" sizeInBytesWithStore=\" + sizeInBytesWithStore, sizeInBytesWithStore > sizeInBytesNoStore);\n    dir.close();\n  }\n\n","sourceOld":"  public void testSizeInBytesCache() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setMergePolicy(newLogMergePolicy());\n    IndexWriter writer = new IndexWriter(dir, conf);\n    writer.setInfoStream(VERBOSE ? System.out : null);\n    Document doc = new Document();\n    doc.add(new Field(\"a\", \"value\", Store.YES, Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.close();\n    \n    SegmentInfos sis = new SegmentInfos();\n    sis.read(dir);\n    SegmentInfo si = sis.info(0);\n    long sizeInBytesNoStore = si.sizeInBytes(false);\n    long sizeInBytesWithStore = si.sizeInBytes(true);\n    assertTrue(\"sizeInBytesNoStore=\" + sizeInBytesNoStore + \" sizeInBytesWithStore=\" + sizeInBytesWithStore, sizeInBytesWithStore > sizeInBytesNoStore);\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestSegmentInfo#testSizeInBytesCache().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestSegmentInfo#testSizeInBytesCache().mjava","sourceNew":"  public void testSizeInBytesCache() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy());\n    IndexWriter writer = new IndexWriter(dir, conf);\n    writer.setInfoStream(VERBOSE ? System.out : null);\n    Document doc = new Document();\n    doc.add(new Field(\"a\", \"value\", Store.YES, Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.close();\n    \n    SegmentInfos sis = new SegmentInfos();\n    sis.read(dir);\n    SegmentInfo si = sis.info(0);\n    long sizeInBytesNoStore = si.sizeInBytes(false);\n    long sizeInBytesWithStore = si.sizeInBytes(true);\n    assertTrue(\"sizeInBytesNoStore=\" + sizeInBytesNoStore + \" sizeInBytesWithStore=\" + sizeInBytesWithStore, sizeInBytesWithStore > sizeInBytesNoStore);\n    dir.close();\n  }\n\n","sourceOld":"  public void testSizeInBytesCache() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setMergePolicy(newLogMergePolicy());\n    IndexWriter writer = new IndexWriter(dir, conf);\n    writer.setInfoStream(VERBOSE ? System.out : null);\n    Document doc = new Document();\n    doc.add(new Field(\"a\", \"value\", Store.YES, Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.close();\n    \n    SegmentInfos sis = new SegmentInfos();\n    sis.read(dir);\n    SegmentInfo si = sis.info(0);\n    long sizeInBytesNoStore = si.sizeInBytes(false);\n    long sizeInBytesWithStore = si.sizeInBytes(true);\n    assertTrue(\"sizeInBytesNoStore=\" + sizeInBytesNoStore + \" sizeInBytesWithStore=\" + sizeInBytesWithStore, sizeInBytesWithStore > sizeInBytesNoStore);\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1509f151d7692d84fae414b2b799ac06ba60fcb4","date":1314451621,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestSegmentInfo#testSizeInBytesCache().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestSegmentInfo#testSizeInBytesCache().mjava","sourceNew":"  public void testSizeInBytesCache() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy());\n    IndexWriter writer = new IndexWriter(dir, conf);\n    writer.setInfoStream(VERBOSE ? System.out : null);\n    Document doc = new Document();\n    doc.add(new Field(\"a\", TextField.TYPE_STORED, \"value\"));\n    writer.addDocument(doc);\n    writer.close();\n    \n    SegmentInfos sis = new SegmentInfos();\n    sis.read(dir);\n    SegmentInfo si = sis.info(0);\n    long sizeInBytesNoStore = si.sizeInBytes(false);\n    long sizeInBytesWithStore = si.sizeInBytes(true);\n    assertTrue(\"sizeInBytesNoStore=\" + sizeInBytesNoStore + \" sizeInBytesWithStore=\" + sizeInBytesWithStore, sizeInBytesWithStore > sizeInBytesNoStore);\n    dir.close();\n  }\n\n","sourceOld":"  public void testSizeInBytesCache() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy());\n    IndexWriter writer = new IndexWriter(dir, conf);\n    writer.setInfoStream(VERBOSE ? System.out : null);\n    Document doc = new Document();\n    doc.add(new Field(\"a\", \"value\", Store.YES, Index.ANALYZED));\n    writer.addDocument(doc);\n    writer.close();\n    \n    SegmentInfos sis = new SegmentInfos();\n    sis.read(dir);\n    SegmentInfo si = sis.info(0);\n    long sizeInBytesNoStore = si.sizeInBytes(false);\n    long sizeInBytesWithStore = si.sizeInBytes(true);\n    assertTrue(\"sizeInBytesNoStore=\" + sizeInBytesNoStore + \" sizeInBytesWithStore=\" + sizeInBytesWithStore, sizeInBytesWithStore > sizeInBytesNoStore);\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7e4db59c6b6c10e25322cfb41c4c19d78b4298bd","date":1317197236,"type":3,"author":"Christopher John Male","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestSegmentInfo#testSizeInBytesCache().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestSegmentInfo#testSizeInBytesCache().mjava","sourceNew":"  public void testSizeInBytesCache() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy());\n    IndexWriter writer = new IndexWriter(dir, conf);\n    writer.setInfoStream(VERBOSE ? System.out : null);\n    Document doc = new Document();\n    doc.add(new Field(\"a\", \"value\", TextField.TYPE_STORED));\n    writer.addDocument(doc);\n    writer.close();\n    \n    SegmentInfos sis = new SegmentInfos();\n    sis.read(dir);\n    SegmentInfo si = sis.info(0);\n    long sizeInBytesNoStore = si.sizeInBytes(false);\n    long sizeInBytesWithStore = si.sizeInBytes(true);\n    assertTrue(\"sizeInBytesNoStore=\" + sizeInBytesNoStore + \" sizeInBytesWithStore=\" + sizeInBytesWithStore, sizeInBytesWithStore > sizeInBytesNoStore);\n    dir.close();\n  }\n\n","sourceOld":"  public void testSizeInBytesCache() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy());\n    IndexWriter writer = new IndexWriter(dir, conf);\n    writer.setInfoStream(VERBOSE ? System.out : null);\n    Document doc = new Document();\n    doc.add(new Field(\"a\", TextField.TYPE_STORED, \"value\"));\n    writer.addDocument(doc);\n    writer.close();\n    \n    SegmentInfos sis = new SegmentInfos();\n    sis.read(dir);\n    SegmentInfo si = sis.info(0);\n    long sizeInBytesNoStore = si.sizeInBytes(false);\n    long sizeInBytesWithStore = si.sizeInBytes(true);\n    assertTrue(\"sizeInBytesNoStore=\" + sizeInBytesNoStore + \" sizeInBytesWithStore=\" + sizeInBytesWithStore, sizeInBytesWithStore > sizeInBytesNoStore);\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"06584e6e98d592b34e1329b384182f368d2025e8","date":1320850353,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestSegmentInfo#testSizeInBytesCache().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestSegmentInfo#testSizeInBytesCache().mjava","sourceNew":"  public void testSizeInBytesCache() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy());\n    IndexWriter writer = new IndexWriter(dir, conf);\n    Document doc = new Document();\n    doc.add(new Field(\"a\", \"value\", TextField.TYPE_STORED));\n    writer.addDocument(doc);\n    writer.close();\n    \n    SegmentInfos sis = new SegmentInfos();\n    sis.read(dir);\n    SegmentInfo si = sis.info(0);\n    long sizeInBytesNoStore = si.sizeInBytes(false);\n    long sizeInBytesWithStore = si.sizeInBytes(true);\n    assertTrue(\"sizeInBytesNoStore=\" + sizeInBytesNoStore + \" sizeInBytesWithStore=\" + sizeInBytesWithStore, sizeInBytesWithStore > sizeInBytesNoStore);\n    dir.close();\n  }\n\n","sourceOld":"  public void testSizeInBytesCache() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy());\n    IndexWriter writer = new IndexWriter(dir, conf);\n    writer.setInfoStream(VERBOSE ? System.out : null);\n    Document doc = new Document();\n    doc.add(new Field(\"a\", \"value\", TextField.TYPE_STORED));\n    writer.addDocument(doc);\n    writer.close();\n    \n    SegmentInfos sis = new SegmentInfos();\n    sis.read(dir);\n    SegmentInfo si = sis.info(0);\n    long sizeInBytesNoStore = si.sizeInBytes(false);\n    long sizeInBytesWithStore = si.sizeInBytes(true);\n    assertTrue(\"sizeInBytesNoStore=\" + sizeInBytesNoStore + \" sizeInBytesWithStore=\" + sizeInBytesWithStore, sizeInBytesWithStore > sizeInBytesNoStore);\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"853713e230bedc03301dd29e00764247dd5e3e02","date":1327927949,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/test/org/apache/lucene/index/TestSegmentInfo#testSizeInBytesCache().mjava","sourceNew":null,"sourceOld":"  public void testSizeInBytesCache() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy());\n    IndexWriter writer = new IndexWriter(dir, conf);\n    Document doc = new Document();\n    doc.add(new Field(\"a\", \"value\", TextField.TYPE_STORED));\n    writer.addDocument(doc);\n    writer.close();\n    \n    SegmentInfos sis = new SegmentInfos();\n    sis.read(dir);\n    SegmentInfo si = sis.info(0);\n    long sizeInBytesNoStore = si.sizeInBytes(false);\n    long sizeInBytesWithStore = si.sizeInBytes(true);\n    assertTrue(\"sizeInBytesNoStore=\" + sizeInBytesNoStore + \" sizeInBytesWithStore=\" + sizeInBytesWithStore, sizeInBytesWithStore > sizeInBytesNoStore);\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"296df632fd63421ea20756fa11ad36fbc6f4c8a9","date":1327957998,"type":4,"author":"Robert Muir","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/test/org/apache/lucene/index/TestSegmentInfo#testSizeInBytesCache().mjava","sourceNew":null,"sourceOld":"  public void testSizeInBytesCache() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy());\n    IndexWriter writer = new IndexWriter(dir, conf);\n    Document doc = new Document();\n    doc.add(new Field(\"a\", \"value\", TextField.TYPE_STORED));\n    writer.addDocument(doc);\n    writer.close();\n    \n    SegmentInfos sis = new SegmentInfos();\n    sis.read(dir);\n    SegmentInfo si = sis.info(0);\n    long sizeInBytesNoStore = si.sizeInBytes(false);\n    long sizeInBytesWithStore = si.sizeInBytes(true);\n    assertTrue(\"sizeInBytesNoStore=\" + sizeInBytesNoStore + \" sizeInBytesWithStore=\" + sizeInBytesWithStore, sizeInBytesWithStore > sizeInBytesNoStore);\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"410e066f093e407222d9681429d209084e783149","date":1327958394,"type":4,"author":"Robert Muir","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/test/org/apache/lucene/index/TestSegmentInfo#testSizeInBytesCache().mjava","sourceNew":null,"sourceOld":"  public void testSizeInBytesCache() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy());\n    IndexWriter writer = new IndexWriter(dir, conf);\n    Document doc = new Document();\n    doc.add(new Field(\"a\", \"value\", TextField.TYPE_STORED));\n    writer.addDocument(doc);\n    writer.close();\n    \n    SegmentInfos sis = new SegmentInfos();\n    sis.read(dir);\n    SegmentInfo si = sis.info(0);\n    long sizeInBytesNoStore = si.sizeInBytes(false);\n    long sizeInBytesWithStore = si.sizeInBytes(true);\n    assertTrue(\"sizeInBytesNoStore=\" + sizeInBytesNoStore + \" sizeInBytesWithStore=\" + sizeInBytesWithStore, sizeInBytesWithStore > sizeInBytesNoStore);\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"410e066f093e407222d9681429d209084e783149":["06584e6e98d592b34e1329b384182f368d2025e8","296df632fd63421ea20756fa11ad36fbc6f4c8a9"],"06584e6e98d592b34e1329b384182f368d2025e8":["7e4db59c6b6c10e25322cfb41c4c19d78b4298bd"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["29ef99d61cda9641b6250bf9567329a6e65f901d","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"9ca8e3e7b05d7108f423be06781dbb3ad85e6b04":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"962d04139994fce5193143ef35615499a9a96d78":["bde51b089eb7f86171eb3406e38a274743f9b7ac","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"296df632fd63421ea20756fa11ad36fbc6f4c8a9":["06584e6e98d592b34e1329b384182f368d2025e8","853713e230bedc03301dd29e00764247dd5e3e02"],"c19f985e36a65cc969e8e564fe337a0d41512075":["c58b50677b74bb699dcf17b44c13ea6bb644c95b"],"853713e230bedc03301dd29e00764247dd5e3e02":["06584e6e98d592b34e1329b384182f368d2025e8"],"f2c5f0cb44df114db4228c8f77861714b5cabaea":["c19f985e36a65cc969e8e564fe337a0d41512075"],"a3776dccca01c11e7046323cfad46a3b4a471233":["c19f985e36a65cc969e8e564fe337a0d41512075","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c19f985e36a65cc969e8e564fe337a0d41512075"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["f2c5f0cb44df114db4228c8f77861714b5cabaea"],"c58b50677b74bb699dcf17b44c13ea6bb644c95b":["9ca8e3e7b05d7108f423be06781dbb3ad85e6b04"],"868da859b43505d9d2a023bfeae6dd0c795f5295":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","9ca8e3e7b05d7108f423be06781dbb3ad85e6b04"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["868da859b43505d9d2a023bfeae6dd0c795f5295","c19f985e36a65cc969e8e564fe337a0d41512075"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["296df632fd63421ea20756fa11ad36fbc6f4c8a9"],"7e4db59c6b6c10e25322cfb41c4c19d78b4298bd":["1509f151d7692d84fae414b2b799ac06ba60fcb4"]},"commit2Childs":{"410e066f093e407222d9681429d209084e783149":[],"06584e6e98d592b34e1329b384182f368d2025e8":["410e066f093e407222d9681429d209084e783149","296df632fd63421ea20756fa11ad36fbc6f4c8a9","853713e230bedc03301dd29e00764247dd5e3e02"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":[],"9ca8e3e7b05d7108f423be06781dbb3ad85e6b04":["c58b50677b74bb699dcf17b44c13ea6bb644c95b","868da859b43505d9d2a023bfeae6dd0c795f5295"],"962d04139994fce5193143ef35615499a9a96d78":[],"296df632fd63421ea20756fa11ad36fbc6f4c8a9":["410e066f093e407222d9681429d209084e783149","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"853713e230bedc03301dd29e00764247dd5e3e02":["296df632fd63421ea20756fa11ad36fbc6f4c8a9"],"c19f985e36a65cc969e8e564fe337a0d41512075":["f2c5f0cb44df114db4228c8f77861714b5cabaea","a3776dccca01c11e7046323cfad46a3b4a471233","29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"f2c5f0cb44df114db4228c8f77861714b5cabaea":["135621f3a0670a9394eb563224a3b76cc4dddc0f","962d04139994fce5193143ef35615499a9a96d78","a3776dccca01c11e7046323cfad46a3b4a471233","1509f151d7692d84fae414b2b799ac06ba60fcb4"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["135621f3a0670a9394eb563224a3b76cc4dddc0f"],"a3776dccca01c11e7046323cfad46a3b4a471233":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9ca8e3e7b05d7108f423be06781dbb3ad85e6b04","29ef99d61cda9641b6250bf9567329a6e65f901d","868da859b43505d9d2a023bfeae6dd0c795f5295"],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["7e4db59c6b6c10e25322cfb41c4c19d78b4298bd"],"c58b50677b74bb699dcf17b44c13ea6bb644c95b":["c19f985e36a65cc969e8e564fe337a0d41512075"],"868da859b43505d9d2a023bfeae6dd0c795f5295":["bde51b089eb7f86171eb3406e38a274743f9b7ac"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["962d04139994fce5193143ef35615499a9a96d78"],"7e4db59c6b6c10e25322cfb41c4c19d78b4298bd":["06584e6e98d592b34e1329b384182f368d2025e8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["410e066f093e407222d9681429d209084e783149","135621f3a0670a9394eb563224a3b76cc4dddc0f","962d04139994fce5193143ef35615499a9a96d78","a3776dccca01c11e7046323cfad46a3b4a471233","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}