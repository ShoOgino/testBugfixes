{"path":"lucene/core/src/java/org/apache/lucene/search/spans/SpanWeight#buildSimWeight(SpanQuery,IndexSearcher,Map[Term,TermContext]).mjava","commits":[{"id":"d4b6308fa66dc96de36abfae5d3e7c92c805e227","date":1432916588,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/spans/SpanWeight#buildSimWeight(SpanQuery,IndexSearcher,Map[Term,TermContext]).mjava","pathOld":"/dev/null","sourceNew":"  private Similarity.SimWeight buildSimWeight(SpanQuery query, IndexSearcher searcher, Map<Term, TermContext> termContexts) throws IOException {\n    if (termContexts == null || termContexts.size() == 0 || query.getField() == null)\n      return null;\n    TermStatistics[] termStats = new TermStatistics[termContexts.size()];\n    int i = 0;\n    for (Term term : termContexts.keySet()) {\n      termStats[i] = searcher.termStatistics(term, termContexts.get(term));\n      i++;\n    }\n    CollectionStatistics collectionStats = searcher.collectionStatistics(query.getField());\n    return searcher.getSimilarity().computeWeight(query.getBoost(), collectionStats, termStats);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"485545da3b4429d6f138b4baac573a97820ee93b","date":1433876557,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/spans/SpanWeight#buildSimWeight(SpanQuery,IndexSearcher,Map[Term,TermContext]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/spans/SpanWeight#buildSimWeight(SpanQuery,IndexSearcher,Map[Term,TermContext]).mjava","sourceNew":"  private Similarity.SimWeight buildSimWeight(SpanQuery query, IndexSearcher searcher, Map<Term, TermContext> termContexts) throws IOException {\n    if (termContexts == null || termContexts.size() == 0 || query.getField() == null)\n      return null;\n    TermStatistics[] termStats = new TermStatistics[termContexts.size()];\n    int i = 0;\n    for (Term term : termContexts.keySet()) {\n      termStats[i] = searcher.termStatistics(term, termContexts.get(term));\n      i++;\n    }\n    CollectionStatistics collectionStats = searcher.collectionStatistics(query.getField());\n    return searcher.getSimilarity(true).computeWeight(query.getBoost(), collectionStats, termStats);\n  }\n\n","sourceOld":"  private Similarity.SimWeight buildSimWeight(SpanQuery query, IndexSearcher searcher, Map<Term, TermContext> termContexts) throws IOException {\n    if (termContexts == null || termContexts.size() == 0 || query.getField() == null)\n      return null;\n    TermStatistics[] termStats = new TermStatistics[termContexts.size()];\n    int i = 0;\n    for (Term term : termContexts.keySet()) {\n      termStats[i] = searcher.termStatistics(term, termContexts.get(term));\n      i++;\n    }\n    CollectionStatistics collectionStats = searcher.collectionStatistics(query.getField());\n    return searcher.getSimilarity().computeWeight(query.getBoost(), collectionStats, termStats);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2dfdf766e55e943d942055d7de53c7ad6bc45283","date":1441632886,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/spans/SpanWeight#buildSimWeight(SpanQuery,IndexSearcher,Map[Term,TermContext]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/spans/SpanWeight#buildSimWeight(SpanQuery,IndexSearcher,Map[Term,TermContext]).mjava","sourceNew":"  private Similarity.SimWeight buildSimWeight(SpanQuery query, IndexSearcher searcher, Map<Term, TermContext> termContexts) throws IOException {\n    if (termContexts == null || termContexts.size() == 0 || query.getField() == null)\n      return null;\n    TermStatistics[] termStats = new TermStatistics[termContexts.size()];\n    int i = 0;\n    for (Term term : termContexts.keySet()) {\n      termStats[i] = searcher.termStatistics(term, termContexts.get(term));\n      i++;\n    }\n    CollectionStatistics collectionStats = searcher.collectionStatistics(query.getField());\n    return searcher.getSimilarity(true).computeWeight(collectionStats, termStats);\n  }\n\n","sourceOld":"  private Similarity.SimWeight buildSimWeight(SpanQuery query, IndexSearcher searcher, Map<Term, TermContext> termContexts) throws IOException {\n    if (termContexts == null || termContexts.size() == 0 || query.getField() == null)\n      return null;\n    TermStatistics[] termStats = new TermStatistics[termContexts.size()];\n    int i = 0;\n    for (Term term : termContexts.keySet()) {\n      termStats[i] = searcher.termStatistics(term, termContexts.get(term));\n      i++;\n    }\n    CollectionStatistics collectionStats = searcher.collectionStatistics(query.getField());\n    return searcher.getSimilarity(true).computeWeight(query.getBoost(), collectionStats, termStats);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"02e175abd2c4c1611c5a9647486ae8ba249a94c1","date":1468327116,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/spans/SpanWeight#buildSimWeight(SpanQuery,IndexSearcher,Map[Term,TermContext],float).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/spans/SpanWeight#buildSimWeight(SpanQuery,IndexSearcher,Map[Term,TermContext]).mjava","sourceNew":"  private Similarity.SimWeight buildSimWeight(SpanQuery query, IndexSearcher searcher, Map<Term, TermContext> termContexts, float boost) throws IOException {\n    if (termContexts == null || termContexts.size() == 0 || query.getField() == null)\n      return null;\n    TermStatistics[] termStats = new TermStatistics[termContexts.size()];\n    int i = 0;\n    for (Term term : termContexts.keySet()) {\n      termStats[i] = searcher.termStatistics(term, termContexts.get(term));\n      i++;\n    }\n    CollectionStatistics collectionStats = searcher.collectionStatistics(query.getField());\n    return searcher.getSimilarity(true).computeWeight(boost, collectionStats, termStats);\n  }\n\n","sourceOld":"  private Similarity.SimWeight buildSimWeight(SpanQuery query, IndexSearcher searcher, Map<Term, TermContext> termContexts) throws IOException {\n    if (termContexts == null || termContexts.size() == 0 || query.getField() == null)\n      return null;\n    TermStatistics[] termStats = new TermStatistics[termContexts.size()];\n    int i = 0;\n    for (Term term : termContexts.keySet()) {\n      termStats[i] = searcher.termStatistics(term, termContexts.get(term));\n      i++;\n    }\n    CollectionStatistics collectionStats = searcher.collectionStatistics(query.getField());\n    return searcher.getSimilarity(true).computeWeight(collectionStats, termStats);\n  }\n\n","bugFix":null,"bugIntro":["c3119ed4143b91eaf5ac74a4dc4625f5036d472c"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":4,"author":"Kevin Risden","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/search/spans/SpanWeight#buildSimWeight(SpanQuery,IndexSearcher,Map[Term,TermContext]).mjava","sourceNew":null,"sourceOld":"  private Similarity.SimWeight buildSimWeight(SpanQuery query, IndexSearcher searcher, Map<Term, TermContext> termContexts) throws IOException {\n    if (termContexts == null || termContexts.size() == 0 || query.getField() == null)\n      return null;\n    TermStatistics[] termStats = new TermStatistics[termContexts.size()];\n    int i = 0;\n    for (Term term : termContexts.keySet()) {\n      termStats[i] = searcher.termStatistics(term, termContexts.get(term));\n      i++;\n    }\n    CollectionStatistics collectionStats = searcher.collectionStatistics(query.getField());\n    return searcher.getSimilarity(true).computeWeight(collectionStats, termStats);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2dfdf766e55e943d942055d7de53c7ad6bc45283":["485545da3b4429d6f138b4baac573a97820ee93b"],"02e175abd2c4c1611c5a9647486ae8ba249a94c1":["2dfdf766e55e943d942055d7de53c7ad6bc45283"],"485545da3b4429d6f138b4baac573a97820ee93b":["d4b6308fa66dc96de36abfae5d3e7c92c805e227"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["2dfdf766e55e943d942055d7de53c7ad6bc45283","02e175abd2c4c1611c5a9647486ae8ba249a94c1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["02e175abd2c4c1611c5a9647486ae8ba249a94c1"],"d4b6308fa66dc96de36abfae5d3e7c92c805e227":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d4b6308fa66dc96de36abfae5d3e7c92c805e227"],"2dfdf766e55e943d942055d7de53c7ad6bc45283":["02e175abd2c4c1611c5a9647486ae8ba249a94c1","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"485545da3b4429d6f138b4baac573a97820ee93b":["2dfdf766e55e943d942055d7de53c7ad6bc45283"],"02e175abd2c4c1611c5a9647486ae8ba249a94c1":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"d4b6308fa66dc96de36abfae5d3e7c92c805e227":["485545da3b4429d6f138b4baac573a97820ee93b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}