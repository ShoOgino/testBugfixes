{"path":"lucene/src/java/org/apache/lucene/codecs/lucene40/Lucene40PostingsReader.SegmentDocsAndPositionsAndPayloadsEnum#SegmentDocsAndPositionsAndPayloadsEnum(IndexInput,IndexInput).mjava","commits":[{"id":"a0ae5e3ed1232483b7b8a014f175a5fe43595982","date":1324062192,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/codecs/lucene40/Lucene40PostingsReader.SegmentDocsAndPositionsAndPayloadsEnum#SegmentDocsAndPositionsAndPayloadsEnum(IndexInput,IndexInput).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/lucene40/Lucene40PostingsReader.SegmentDocsAndPositionsAndPayloadsEnum#SegmentDocsAndPositionsAndPayloadsEnum(IndexInput,IndexInput).mjava","sourceNew":"    public SegmentDocsAndPositionsAndPayloadsEnum(IndexInput freqIn, IndexInput proxIn) throws IOException {\n      startFreqIn = freqIn;\n      this.freqIn = (IndexInput) freqIn.clone();\n      this.proxIn = (IndexInput) proxIn.clone();\n    }\n\n","sourceOld":"    public SegmentDocsAndPositionsAndPayloadsEnum(IndexInput freqIn, IndexInput proxIn) throws IOException {\n      startFreqIn = freqIn;\n      this.freqIn = (IndexInput) freqIn.clone();\n      this.proxIn = (IndexInput) proxIn.clone();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a44b232879361a7ace3520b5b313094a9a35e044","date":1327356188,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/codecs/lucene40/Lucene40PostingsReader.SegmentFullPositionsEnum#SegmentFullPositionsEnum(IndexInput,IndexInput).mjava","pathOld":"lucene/src/java/org/apache/lucene/codecs/lucene40/Lucene40PostingsReader.SegmentDocsAndPositionsAndPayloadsEnum#SegmentDocsAndPositionsAndPayloadsEnum(IndexInput,IndexInput).mjava","sourceNew":"    public SegmentFullPositionsEnum(IndexInput freqIn, IndexInput proxIn) throws IOException {\n      startFreqIn = freqIn;\n      this.freqIn = (IndexInput) freqIn.clone();\n      this.proxIn = (IndexInput) proxIn.clone();\n    }\n\n","sourceOld":"    public SegmentDocsAndPositionsAndPayloadsEnum(IndexInput freqIn, IndexInput proxIn) throws IOException {\n      startFreqIn = freqIn;\n      this.freqIn = (IndexInput) freqIn.clone();\n      this.proxIn = (IndexInput) proxIn.clone();\n    }\n\n","bugFix":null,"bugIntro":["4d3e8520fd031bab31fd0e4d480e55958bc45efe","4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5a89676536a5d3e2e875a9eed6b3f22a63cca643","date":1327356915,"type":5,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/codecs/lucene40/Lucene40PostingsReader.SegmentFullPositionsEnum#SegmentFullPositionsEnum(IndexInput,IndexInput).mjava","pathOld":"lucene/src/java/org/apache/lucene/codecs/lucene40/Lucene40PostingsReader.SegmentDocsAndPositionsAndPayloadsEnum#SegmentDocsAndPositionsAndPayloadsEnum(IndexInput,IndexInput).mjava","sourceNew":"    public SegmentFullPositionsEnum(IndexInput freqIn, IndexInput proxIn) throws IOException {\n      startFreqIn = freqIn;\n      this.freqIn = (IndexInput) freqIn.clone();\n      this.proxIn = (IndexInput) proxIn.clone();\n    }\n\n","sourceOld":"    public SegmentDocsAndPositionsAndPayloadsEnum(IndexInput freqIn, IndexInput proxIn) throws IOException {\n      startFreqIn = freqIn;\n      this.freqIn = (IndexInput) freqIn.clone();\n      this.proxIn = (IndexInput) proxIn.clone();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","date":1327523564,"type":4,"author":"Robert Muir","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/codecs/lucene40/Lucene40PostingsReader.SegmentDocsAndPositionsAndPayloadsEnum#SegmentDocsAndPositionsAndPayloadsEnum(IndexInput,IndexInput).mjava","sourceNew":null,"sourceOld":"    public SegmentDocsAndPositionsAndPayloadsEnum(IndexInput freqIn, IndexInput proxIn) throws IOException {\n      startFreqIn = freqIn;\n      this.freqIn = (IndexInput) freqIn.clone();\n      this.proxIn = (IndexInput) proxIn.clone();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5a89676536a5d3e2e875a9eed6b3f22a63cca643":["a0ae5e3ed1232483b7b8a014f175a5fe43595982","a44b232879361a7ace3520b5b313094a9a35e044"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d":["a0ae5e3ed1232483b7b8a014f175a5fe43595982","a44b232879361a7ace3520b5b313094a9a35e044"],"a44b232879361a7ace3520b5b313094a9a35e044":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a44b232879361a7ace3520b5b313094a9a35e044"]},"commit2Childs":{"5a89676536a5d3e2e875a9eed6b3f22a63cca643":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"],"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d":[],"a44b232879361a7ace3520b5b313094a9a35e044":["5a89676536a5d3e2e875a9eed6b3f22a63cca643","a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["5a89676536a5d3e2e875a9eed6b3f22a63cca643","a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","a44b232879361a7ace3520b5b313094a9a35e044"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5a89676536a5d3e2e875a9eed6b3f22a63cca643","a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}