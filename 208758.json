{"path":"lucene/join/src/test/org/apache/lucene/search/join/TestJoinUtil#testSimpleWithScoring().mjava","commits":[{"id":"77855215e331ce146763531cb9b0c050726f6ae5","date":1338323851,"type":0,"author":"Martijn van Groningen","isMerge":false,"pathNew":"lucene/join/src/test/org/apache/lucene/search/join/TestJoinUtil#testSimpleWithScoring().mjava","pathOld":"/dev/null","sourceNew":"  public void testSimpleWithScoring() throws Exception {\n    final String idField = \"id\";\n    final String toField = \"movieId\";\n\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random(),\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT,\n            new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n\n    // 0\n    Document doc = new Document();\n    doc.add(new Field(\"description\", \"A random movie\", TextField.TYPE_UNSTORED));\n    doc.add(new Field(\"name\", \"Movie 1\", TextField.TYPE_UNSTORED));\n    doc.add(new Field(idField, \"1\", TextField.TYPE_UNSTORED));\n    w.addDocument(doc);\n\n    // 1\n    doc = new Document();\n    doc.add(new Field(\"subtitle\", \"The first subtitle of this movie\", TextField.TYPE_UNSTORED));\n    doc.add(new Field(idField, \"2\", TextField.TYPE_UNSTORED));\n    doc.add(new Field(toField, \"1\", TextField.TYPE_UNSTORED));\n    w.addDocument(doc);\n\n    // 2\n    doc = new Document();\n    doc.add(new Field(\"subtitle\", \"random subtitle; random event movie\", TextField.TYPE_UNSTORED));\n    doc.add(new Field(idField, \"3\", TextField.TYPE_UNSTORED));\n    doc.add(new Field(toField, \"1\", TextField.TYPE_UNSTORED));\n    w.addDocument(doc);\n\n    // 3\n    doc = new Document();\n    doc.add(new Field(\"description\", \"A second random movie\", TextField.TYPE_UNSTORED));\n    doc.add(new Field(\"name\", \"Movie 2\", TextField.TYPE_UNSTORED));\n    doc.add(new Field(idField, \"4\", TextField.TYPE_UNSTORED));\n    w.addDocument(doc);\n    w.commit();\n\n    // 4\n    doc = new Document();\n    doc.add(new Field(\"subtitle\", \"a very random event happened during christmas night\", TextField.TYPE_UNSTORED));\n    doc.add(new Field(idField, \"5\", TextField.TYPE_UNSTORED));\n    doc.add(new Field(toField, \"4\", TextField.TYPE_UNSTORED));\n    w.addDocument(doc);\n\n    // 5\n    doc = new Document();\n    doc.add(new Field(\"subtitle\", \"movie end movie test 123 test 123 random\", TextField.TYPE_UNSTORED));\n    doc.add(new Field(idField, \"6\", TextField.TYPE_UNSTORED));\n    doc.add(new Field(toField, \"4\", TextField.TYPE_UNSTORED));\n    w.addDocument(doc);\n\n    IndexSearcher indexSearcher = new IndexSearcher(w.getReader());\n    w.close();\n\n    // Search for movie via subtitle\n    Query joinQuery =\n        JoinUtil.createJoinQuery(toField, false, idField, new TermQuery(new Term(\"subtitle\", \"random\")), indexSearcher, ScoreMode.Max);\n    TopDocs result = indexSearcher.search(joinQuery, 10);\n    assertEquals(2, result.totalHits);\n    assertEquals(0, result.scoreDocs[0].doc);\n    assertEquals(3, result.scoreDocs[1].doc);\n\n    // Score mode max.\n    joinQuery = JoinUtil.createJoinQuery(toField, false, idField, new TermQuery(new Term(\"subtitle\", \"movie\")), indexSearcher, ScoreMode.Max);\n    result = indexSearcher.search(joinQuery, 10);\n    assertEquals(2, result.totalHits);\n    assertEquals(3, result.scoreDocs[0].doc);\n    assertEquals(0, result.scoreDocs[1].doc);\n\n    // Score mode total\n    joinQuery = JoinUtil.createJoinQuery(toField, false, idField, new TermQuery(new Term(\"subtitle\", \"movie\")), indexSearcher, ScoreMode.Total);\n    result = indexSearcher.search(joinQuery, 10);\n    assertEquals(2, result.totalHits);\n    assertEquals(0, result.scoreDocs[0].doc);\n    assertEquals(3, result.scoreDocs[1].doc);\n\n    //Score mode avg\n    joinQuery = JoinUtil.createJoinQuery(toField, false, idField, new TermQuery(new Term(\"subtitle\", \"movie\")), indexSearcher, ScoreMode.Avg);\n    result = indexSearcher.search(joinQuery, 10);\n    assertEquals(2, result.totalHits);\n    assertEquals(3, result.scoreDocs[0].doc);\n    assertEquals(0, result.scoreDocs[1].doc);\n\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"04f07771a2a7dd3a395700665ed839c3dae2def2","date":1339350139,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/join/src/test/org/apache/lucene/search/join/TestJoinUtil#testSimpleWithScoring().mjava","pathOld":"lucene/join/src/test/org/apache/lucene/search/join/TestJoinUtil#testSimpleWithScoring().mjava","sourceNew":"  public void testSimpleWithScoring() throws Exception {\n    final String idField = \"id\";\n    final String toField = \"movieId\";\n\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random(),\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT,\n            new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n\n    // 0\n    Document doc = new Document();\n    doc.add(new TextField(\"description\", \"A random movie\", Field.Store.NO));\n    doc.add(new TextField(\"name\", \"Movie 1\", Field.Store.NO));\n    doc.add(new TextField(idField, \"1\", Field.Store.NO));\n    w.addDocument(doc);\n\n    // 1\n    doc = new Document();\n    doc.add(new TextField(\"subtitle\", \"The first subtitle of this movie\", Field.Store.NO));\n    doc.add(new TextField(idField, \"2\", Field.Store.NO));\n    doc.add(new TextField(toField, \"1\", Field.Store.NO));\n    w.addDocument(doc);\n\n    // 2\n    doc = new Document();\n    doc.add(new TextField(\"subtitle\", \"random subtitle; random event movie\", Field.Store.NO));\n    doc.add(new TextField(idField, \"3\", Field.Store.NO));\n    doc.add(new TextField(toField, \"1\", Field.Store.NO));\n    w.addDocument(doc);\n\n    // 3\n    doc = new Document();\n    doc.add(new TextField(\"description\", \"A second random movie\", Field.Store.NO));\n    doc.add(new TextField(\"name\", \"Movie 2\", Field.Store.NO));\n    doc.add(new TextField(idField, \"4\", Field.Store.NO));\n    w.addDocument(doc);\n    w.commit();\n\n    // 4\n    doc = new Document();\n    doc.add(new TextField(\"subtitle\", \"a very random event happened during christmas night\", Field.Store.NO));\n    doc.add(new TextField(idField, \"5\", Field.Store.NO));\n    doc.add(new TextField(toField, \"4\", Field.Store.NO));\n    w.addDocument(doc);\n\n    // 5\n    doc = new Document();\n    doc.add(new TextField(\"subtitle\", \"movie end movie test 123 test 123 random\", Field.Store.NO));\n    doc.add(new TextField(idField, \"6\", Field.Store.NO));\n    doc.add(new TextField(toField, \"4\", Field.Store.NO));\n    w.addDocument(doc);\n\n    IndexSearcher indexSearcher = new IndexSearcher(w.getReader());\n    w.close();\n\n    // Search for movie via subtitle\n    Query joinQuery =\n        JoinUtil.createJoinQuery(toField, false, idField, new TermQuery(new Term(\"subtitle\", \"random\")), indexSearcher, ScoreMode.Max);\n    TopDocs result = indexSearcher.search(joinQuery, 10);\n    assertEquals(2, result.totalHits);\n    assertEquals(0, result.scoreDocs[0].doc);\n    assertEquals(3, result.scoreDocs[1].doc);\n\n    // Score mode max.\n    joinQuery = JoinUtil.createJoinQuery(toField, false, idField, new TermQuery(new Term(\"subtitle\", \"movie\")), indexSearcher, ScoreMode.Max);\n    result = indexSearcher.search(joinQuery, 10);\n    assertEquals(2, result.totalHits);\n    assertEquals(3, result.scoreDocs[0].doc);\n    assertEquals(0, result.scoreDocs[1].doc);\n\n    // Score mode total\n    joinQuery = JoinUtil.createJoinQuery(toField, false, idField, new TermQuery(new Term(\"subtitle\", \"movie\")), indexSearcher, ScoreMode.Total);\n    result = indexSearcher.search(joinQuery, 10);\n    assertEquals(2, result.totalHits);\n    assertEquals(0, result.scoreDocs[0].doc);\n    assertEquals(3, result.scoreDocs[1].doc);\n\n    //Score mode avg\n    joinQuery = JoinUtil.createJoinQuery(toField, false, idField, new TermQuery(new Term(\"subtitle\", \"movie\")), indexSearcher, ScoreMode.Avg);\n    result = indexSearcher.search(joinQuery, 10);\n    assertEquals(2, result.totalHits);\n    assertEquals(3, result.scoreDocs[0].doc);\n    assertEquals(0, result.scoreDocs[1].doc);\n\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testSimpleWithScoring() throws Exception {\n    final String idField = \"id\";\n    final String toField = \"movieId\";\n\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random(),\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT,\n            new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n\n    // 0\n    Document doc = new Document();\n    doc.add(new Field(\"description\", \"A random movie\", TextField.TYPE_UNSTORED));\n    doc.add(new Field(\"name\", \"Movie 1\", TextField.TYPE_UNSTORED));\n    doc.add(new Field(idField, \"1\", TextField.TYPE_UNSTORED));\n    w.addDocument(doc);\n\n    // 1\n    doc = new Document();\n    doc.add(new Field(\"subtitle\", \"The first subtitle of this movie\", TextField.TYPE_UNSTORED));\n    doc.add(new Field(idField, \"2\", TextField.TYPE_UNSTORED));\n    doc.add(new Field(toField, \"1\", TextField.TYPE_UNSTORED));\n    w.addDocument(doc);\n\n    // 2\n    doc = new Document();\n    doc.add(new Field(\"subtitle\", \"random subtitle; random event movie\", TextField.TYPE_UNSTORED));\n    doc.add(new Field(idField, \"3\", TextField.TYPE_UNSTORED));\n    doc.add(new Field(toField, \"1\", TextField.TYPE_UNSTORED));\n    w.addDocument(doc);\n\n    // 3\n    doc = new Document();\n    doc.add(new Field(\"description\", \"A second random movie\", TextField.TYPE_UNSTORED));\n    doc.add(new Field(\"name\", \"Movie 2\", TextField.TYPE_UNSTORED));\n    doc.add(new Field(idField, \"4\", TextField.TYPE_UNSTORED));\n    w.addDocument(doc);\n    w.commit();\n\n    // 4\n    doc = new Document();\n    doc.add(new Field(\"subtitle\", \"a very random event happened during christmas night\", TextField.TYPE_UNSTORED));\n    doc.add(new Field(idField, \"5\", TextField.TYPE_UNSTORED));\n    doc.add(new Field(toField, \"4\", TextField.TYPE_UNSTORED));\n    w.addDocument(doc);\n\n    // 5\n    doc = new Document();\n    doc.add(new Field(\"subtitle\", \"movie end movie test 123 test 123 random\", TextField.TYPE_UNSTORED));\n    doc.add(new Field(idField, \"6\", TextField.TYPE_UNSTORED));\n    doc.add(new Field(toField, \"4\", TextField.TYPE_UNSTORED));\n    w.addDocument(doc);\n\n    IndexSearcher indexSearcher = new IndexSearcher(w.getReader());\n    w.close();\n\n    // Search for movie via subtitle\n    Query joinQuery =\n        JoinUtil.createJoinQuery(toField, false, idField, new TermQuery(new Term(\"subtitle\", \"random\")), indexSearcher, ScoreMode.Max);\n    TopDocs result = indexSearcher.search(joinQuery, 10);\n    assertEquals(2, result.totalHits);\n    assertEquals(0, result.scoreDocs[0].doc);\n    assertEquals(3, result.scoreDocs[1].doc);\n\n    // Score mode max.\n    joinQuery = JoinUtil.createJoinQuery(toField, false, idField, new TermQuery(new Term(\"subtitle\", \"movie\")), indexSearcher, ScoreMode.Max);\n    result = indexSearcher.search(joinQuery, 10);\n    assertEquals(2, result.totalHits);\n    assertEquals(3, result.scoreDocs[0].doc);\n    assertEquals(0, result.scoreDocs[1].doc);\n\n    // Score mode total\n    joinQuery = JoinUtil.createJoinQuery(toField, false, idField, new TermQuery(new Term(\"subtitle\", \"movie\")), indexSearcher, ScoreMode.Total);\n    result = indexSearcher.search(joinQuery, 10);\n    assertEquals(2, result.totalHits);\n    assertEquals(0, result.scoreDocs[0].doc);\n    assertEquals(3, result.scoreDocs[1].doc);\n\n    //Score mode avg\n    joinQuery = JoinUtil.createJoinQuery(toField, false, idField, new TermQuery(new Term(\"subtitle\", \"movie\")), indexSearcher, ScoreMode.Avg);\n    result = indexSearcher.search(joinQuery, 10);\n    assertEquals(2, result.totalHits);\n    assertEquals(3, result.scoreDocs[0].doc);\n    assertEquals(0, result.scoreDocs[1].doc);\n\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","bugFix":["77855215e331ce146763531cb9b0c050726f6ae5"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/join/src/test/org/apache/lucene/search/join/TestJoinUtil#testSimpleWithScoring().mjava","pathOld":"lucene/join/src/test/org/apache/lucene/search/join/TestJoinUtil#testSimpleWithScoring().mjava","sourceNew":"  public void testSimpleWithScoring() throws Exception {\n    final String idField = \"id\";\n    final String toField = \"movieId\";\n\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random(),\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT,\n            new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n\n    // 0\n    Document doc = new Document();\n    doc.add(new TextField(\"description\", \"A random movie\", Field.Store.NO));\n    doc.add(new TextField(\"name\", \"Movie 1\", Field.Store.NO));\n    doc.add(new TextField(idField, \"1\", Field.Store.NO));\n    w.addDocument(doc);\n\n    // 1\n    doc = new Document();\n    doc.add(new TextField(\"subtitle\", \"The first subtitle of this movie\", Field.Store.NO));\n    doc.add(new TextField(idField, \"2\", Field.Store.NO));\n    doc.add(new TextField(toField, \"1\", Field.Store.NO));\n    w.addDocument(doc);\n\n    // 2\n    doc = new Document();\n    doc.add(new TextField(\"subtitle\", \"random subtitle; random event movie\", Field.Store.NO));\n    doc.add(new TextField(idField, \"3\", Field.Store.NO));\n    doc.add(new TextField(toField, \"1\", Field.Store.NO));\n    w.addDocument(doc);\n\n    // 3\n    doc = new Document();\n    doc.add(new TextField(\"description\", \"A second random movie\", Field.Store.NO));\n    doc.add(new TextField(\"name\", \"Movie 2\", Field.Store.NO));\n    doc.add(new TextField(idField, \"4\", Field.Store.NO));\n    w.addDocument(doc);\n    w.commit();\n\n    // 4\n    doc = new Document();\n    doc.add(new TextField(\"subtitle\", \"a very random event happened during christmas night\", Field.Store.NO));\n    doc.add(new TextField(idField, \"5\", Field.Store.NO));\n    doc.add(new TextField(toField, \"4\", Field.Store.NO));\n    w.addDocument(doc);\n\n    // 5\n    doc = new Document();\n    doc.add(new TextField(\"subtitle\", \"movie end movie test 123 test 123 random\", Field.Store.NO));\n    doc.add(new TextField(idField, \"6\", Field.Store.NO));\n    doc.add(new TextField(toField, \"4\", Field.Store.NO));\n    w.addDocument(doc);\n\n    IndexSearcher indexSearcher = new IndexSearcher(w.getReader());\n    w.shutdown();\n\n    // Search for movie via subtitle\n    Query joinQuery =\n        JoinUtil.createJoinQuery(toField, false, idField, new TermQuery(new Term(\"subtitle\", \"random\")), indexSearcher, ScoreMode.Max);\n    TopDocs result = indexSearcher.search(joinQuery, 10);\n    assertEquals(2, result.totalHits);\n    assertEquals(0, result.scoreDocs[0].doc);\n    assertEquals(3, result.scoreDocs[1].doc);\n\n    // Score mode max.\n    joinQuery = JoinUtil.createJoinQuery(toField, false, idField, new TermQuery(new Term(\"subtitle\", \"movie\")), indexSearcher, ScoreMode.Max);\n    result = indexSearcher.search(joinQuery, 10);\n    assertEquals(2, result.totalHits);\n    assertEquals(3, result.scoreDocs[0].doc);\n    assertEquals(0, result.scoreDocs[1].doc);\n\n    // Score mode total\n    joinQuery = JoinUtil.createJoinQuery(toField, false, idField, new TermQuery(new Term(\"subtitle\", \"movie\")), indexSearcher, ScoreMode.Total);\n    result = indexSearcher.search(joinQuery, 10);\n    assertEquals(2, result.totalHits);\n    assertEquals(0, result.scoreDocs[0].doc);\n    assertEquals(3, result.scoreDocs[1].doc);\n\n    //Score mode avg\n    joinQuery = JoinUtil.createJoinQuery(toField, false, idField, new TermQuery(new Term(\"subtitle\", \"movie\")), indexSearcher, ScoreMode.Avg);\n    result = indexSearcher.search(joinQuery, 10);\n    assertEquals(2, result.totalHits);\n    assertEquals(3, result.scoreDocs[0].doc);\n    assertEquals(0, result.scoreDocs[1].doc);\n\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testSimpleWithScoring() throws Exception {\n    final String idField = \"id\";\n    final String toField = \"movieId\";\n\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random(),\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT,\n            new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n\n    // 0\n    Document doc = new Document();\n    doc.add(new TextField(\"description\", \"A random movie\", Field.Store.NO));\n    doc.add(new TextField(\"name\", \"Movie 1\", Field.Store.NO));\n    doc.add(new TextField(idField, \"1\", Field.Store.NO));\n    w.addDocument(doc);\n\n    // 1\n    doc = new Document();\n    doc.add(new TextField(\"subtitle\", \"The first subtitle of this movie\", Field.Store.NO));\n    doc.add(new TextField(idField, \"2\", Field.Store.NO));\n    doc.add(new TextField(toField, \"1\", Field.Store.NO));\n    w.addDocument(doc);\n\n    // 2\n    doc = new Document();\n    doc.add(new TextField(\"subtitle\", \"random subtitle; random event movie\", Field.Store.NO));\n    doc.add(new TextField(idField, \"3\", Field.Store.NO));\n    doc.add(new TextField(toField, \"1\", Field.Store.NO));\n    w.addDocument(doc);\n\n    // 3\n    doc = new Document();\n    doc.add(new TextField(\"description\", \"A second random movie\", Field.Store.NO));\n    doc.add(new TextField(\"name\", \"Movie 2\", Field.Store.NO));\n    doc.add(new TextField(idField, \"4\", Field.Store.NO));\n    w.addDocument(doc);\n    w.commit();\n\n    // 4\n    doc = new Document();\n    doc.add(new TextField(\"subtitle\", \"a very random event happened during christmas night\", Field.Store.NO));\n    doc.add(new TextField(idField, \"5\", Field.Store.NO));\n    doc.add(new TextField(toField, \"4\", Field.Store.NO));\n    w.addDocument(doc);\n\n    // 5\n    doc = new Document();\n    doc.add(new TextField(\"subtitle\", \"movie end movie test 123 test 123 random\", Field.Store.NO));\n    doc.add(new TextField(idField, \"6\", Field.Store.NO));\n    doc.add(new TextField(toField, \"4\", Field.Store.NO));\n    w.addDocument(doc);\n\n    IndexSearcher indexSearcher = new IndexSearcher(w.getReader());\n    w.close();\n\n    // Search for movie via subtitle\n    Query joinQuery =\n        JoinUtil.createJoinQuery(toField, false, idField, new TermQuery(new Term(\"subtitle\", \"random\")), indexSearcher, ScoreMode.Max);\n    TopDocs result = indexSearcher.search(joinQuery, 10);\n    assertEquals(2, result.totalHits);\n    assertEquals(0, result.scoreDocs[0].doc);\n    assertEquals(3, result.scoreDocs[1].doc);\n\n    // Score mode max.\n    joinQuery = JoinUtil.createJoinQuery(toField, false, idField, new TermQuery(new Term(\"subtitle\", \"movie\")), indexSearcher, ScoreMode.Max);\n    result = indexSearcher.search(joinQuery, 10);\n    assertEquals(2, result.totalHits);\n    assertEquals(3, result.scoreDocs[0].doc);\n    assertEquals(0, result.scoreDocs[1].doc);\n\n    // Score mode total\n    joinQuery = JoinUtil.createJoinQuery(toField, false, idField, new TermQuery(new Term(\"subtitle\", \"movie\")), indexSearcher, ScoreMode.Total);\n    result = indexSearcher.search(joinQuery, 10);\n    assertEquals(2, result.totalHits);\n    assertEquals(0, result.scoreDocs[0].doc);\n    assertEquals(3, result.scoreDocs[1].doc);\n\n    //Score mode avg\n    joinQuery = JoinUtil.createJoinQuery(toField, false, idField, new TermQuery(new Term(\"subtitle\", \"movie\")), indexSearcher, ScoreMode.Avg);\n    result = indexSearcher.search(joinQuery, 10);\n    assertEquals(2, result.totalHits);\n    assertEquals(3, result.scoreDocs[0].doc);\n    assertEquals(0, result.scoreDocs[1].doc);\n\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c","date":1399816179,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/join/src/test/org/apache/lucene/search/join/TestJoinUtil#testSimpleWithScoring().mjava","pathOld":"lucene/join/src/test/org/apache/lucene/search/join/TestJoinUtil#testSimpleWithScoring().mjava","sourceNew":"  public void testSimpleWithScoring() throws Exception {\n    final String idField = \"id\";\n    final String toField = \"movieId\";\n\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random(),\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT,\n            new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n\n    // 0\n    Document doc = new Document();\n    doc.add(new TextField(\"description\", \"A random movie\", Field.Store.NO));\n    doc.add(new TextField(\"name\", \"Movie 1\", Field.Store.NO));\n    doc.add(new TextField(idField, \"1\", Field.Store.NO));\n    doc.add(new SortedDocValuesField(idField, new BytesRef(\"1\")));\n    w.addDocument(doc);\n\n    // 1\n    doc = new Document();\n    doc.add(new TextField(\"subtitle\", \"The first subtitle of this movie\", Field.Store.NO));\n    doc.add(new TextField(idField, \"2\", Field.Store.NO));\n    doc.add(new SortedDocValuesField(idField, new BytesRef(\"2\")));\n    doc.add(new TextField(toField, \"1\", Field.Store.NO));\n    doc.add(new SortedDocValuesField(toField, new BytesRef(\"1\")));\n    w.addDocument(doc);\n\n    // 2\n    doc = new Document();\n    doc.add(new TextField(\"subtitle\", \"random subtitle; random event movie\", Field.Store.NO));\n    doc.add(new TextField(idField, \"3\", Field.Store.NO));\n    doc.add(new SortedDocValuesField(idField, new BytesRef(\"3\")));\n    doc.add(new TextField(toField, \"1\", Field.Store.NO));\n    doc.add(new SortedDocValuesField(toField, new BytesRef(\"1\")));\n    w.addDocument(doc);\n\n    // 3\n    doc = new Document();\n    doc.add(new TextField(\"description\", \"A second random movie\", Field.Store.NO));\n    doc.add(new TextField(\"name\", \"Movie 2\", Field.Store.NO));\n    doc.add(new TextField(idField, \"4\", Field.Store.NO));\n    doc.add(new SortedDocValuesField(idField, new BytesRef(\"4\")));\n    w.addDocument(doc);\n    w.commit();\n\n    // 4\n    doc = new Document();\n    doc.add(new TextField(\"subtitle\", \"a very random event happened during christmas night\", Field.Store.NO));\n    doc.add(new TextField(idField, \"5\", Field.Store.NO));\n    doc.add(new SortedDocValuesField(idField, new BytesRef(\"5\")));\n    doc.add(new TextField(toField, \"4\", Field.Store.NO));\n    doc.add(new SortedDocValuesField(toField, new BytesRef(\"4\")));\n    w.addDocument(doc);\n\n    // 5\n    doc = new Document();\n    doc.add(new TextField(\"subtitle\", \"movie end movie test 123 test 123 random\", Field.Store.NO));\n    doc.add(new TextField(idField, \"6\", Field.Store.NO));\n    doc.add(new SortedDocValuesField(idField, new BytesRef(\"6\")));\n    doc.add(new TextField(toField, \"4\", Field.Store.NO));\n    doc.add(new SortedDocValuesField(toField, new BytesRef(\"4\")));\n    w.addDocument(doc);\n\n    IndexSearcher indexSearcher = new IndexSearcher(w.getReader());\n    w.shutdown();\n\n    // Search for movie via subtitle\n    Query joinQuery =\n        JoinUtil.createJoinQuery(toField, false, idField, new TermQuery(new Term(\"subtitle\", \"random\")), indexSearcher, ScoreMode.Max);\n    TopDocs result = indexSearcher.search(joinQuery, 10);\n    assertEquals(2, result.totalHits);\n    assertEquals(0, result.scoreDocs[0].doc);\n    assertEquals(3, result.scoreDocs[1].doc);\n\n    // Score mode max.\n    joinQuery = JoinUtil.createJoinQuery(toField, false, idField, new TermQuery(new Term(\"subtitle\", \"movie\")), indexSearcher, ScoreMode.Max);\n    result = indexSearcher.search(joinQuery, 10);\n    assertEquals(2, result.totalHits);\n    assertEquals(3, result.scoreDocs[0].doc);\n    assertEquals(0, result.scoreDocs[1].doc);\n\n    // Score mode total\n    joinQuery = JoinUtil.createJoinQuery(toField, false, idField, new TermQuery(new Term(\"subtitle\", \"movie\")), indexSearcher, ScoreMode.Total);\n    result = indexSearcher.search(joinQuery, 10);\n    assertEquals(2, result.totalHits);\n    assertEquals(0, result.scoreDocs[0].doc);\n    assertEquals(3, result.scoreDocs[1].doc);\n\n    //Score mode avg\n    joinQuery = JoinUtil.createJoinQuery(toField, false, idField, new TermQuery(new Term(\"subtitle\", \"movie\")), indexSearcher, ScoreMode.Avg);\n    result = indexSearcher.search(joinQuery, 10);\n    assertEquals(2, result.totalHits);\n    assertEquals(3, result.scoreDocs[0].doc);\n    assertEquals(0, result.scoreDocs[1].doc);\n\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testSimpleWithScoring() throws Exception {\n    final String idField = \"id\";\n    final String toField = \"movieId\";\n\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random(),\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT,\n            new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n\n    // 0\n    Document doc = new Document();\n    doc.add(new TextField(\"description\", \"A random movie\", Field.Store.NO));\n    doc.add(new TextField(\"name\", \"Movie 1\", Field.Store.NO));\n    doc.add(new TextField(idField, \"1\", Field.Store.NO));\n    w.addDocument(doc);\n\n    // 1\n    doc = new Document();\n    doc.add(new TextField(\"subtitle\", \"The first subtitle of this movie\", Field.Store.NO));\n    doc.add(new TextField(idField, \"2\", Field.Store.NO));\n    doc.add(new TextField(toField, \"1\", Field.Store.NO));\n    w.addDocument(doc);\n\n    // 2\n    doc = new Document();\n    doc.add(new TextField(\"subtitle\", \"random subtitle; random event movie\", Field.Store.NO));\n    doc.add(new TextField(idField, \"3\", Field.Store.NO));\n    doc.add(new TextField(toField, \"1\", Field.Store.NO));\n    w.addDocument(doc);\n\n    // 3\n    doc = new Document();\n    doc.add(new TextField(\"description\", \"A second random movie\", Field.Store.NO));\n    doc.add(new TextField(\"name\", \"Movie 2\", Field.Store.NO));\n    doc.add(new TextField(idField, \"4\", Field.Store.NO));\n    w.addDocument(doc);\n    w.commit();\n\n    // 4\n    doc = new Document();\n    doc.add(new TextField(\"subtitle\", \"a very random event happened during christmas night\", Field.Store.NO));\n    doc.add(new TextField(idField, \"5\", Field.Store.NO));\n    doc.add(new TextField(toField, \"4\", Field.Store.NO));\n    w.addDocument(doc);\n\n    // 5\n    doc = new Document();\n    doc.add(new TextField(\"subtitle\", \"movie end movie test 123 test 123 random\", Field.Store.NO));\n    doc.add(new TextField(idField, \"6\", Field.Store.NO));\n    doc.add(new TextField(toField, \"4\", Field.Store.NO));\n    w.addDocument(doc);\n\n    IndexSearcher indexSearcher = new IndexSearcher(w.getReader());\n    w.shutdown();\n\n    // Search for movie via subtitle\n    Query joinQuery =\n        JoinUtil.createJoinQuery(toField, false, idField, new TermQuery(new Term(\"subtitle\", \"random\")), indexSearcher, ScoreMode.Max);\n    TopDocs result = indexSearcher.search(joinQuery, 10);\n    assertEquals(2, result.totalHits);\n    assertEquals(0, result.scoreDocs[0].doc);\n    assertEquals(3, result.scoreDocs[1].doc);\n\n    // Score mode max.\n    joinQuery = JoinUtil.createJoinQuery(toField, false, idField, new TermQuery(new Term(\"subtitle\", \"movie\")), indexSearcher, ScoreMode.Max);\n    result = indexSearcher.search(joinQuery, 10);\n    assertEquals(2, result.totalHits);\n    assertEquals(3, result.scoreDocs[0].doc);\n    assertEquals(0, result.scoreDocs[1].doc);\n\n    // Score mode total\n    joinQuery = JoinUtil.createJoinQuery(toField, false, idField, new TermQuery(new Term(\"subtitle\", \"movie\")), indexSearcher, ScoreMode.Total);\n    result = indexSearcher.search(joinQuery, 10);\n    assertEquals(2, result.totalHits);\n    assertEquals(0, result.scoreDocs[0].doc);\n    assertEquals(3, result.scoreDocs[1].doc);\n\n    //Score mode avg\n    joinQuery = JoinUtil.createJoinQuery(toField, false, idField, new TermQuery(new Term(\"subtitle\", \"movie\")), indexSearcher, ScoreMode.Avg);\n    result = indexSearcher.search(joinQuery, 10);\n    assertEquals(2, result.totalHits);\n    assertEquals(3, result.scoreDocs[0].doc);\n    assertEquals(0, result.scoreDocs[1].doc);\n\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"93dd449115a9247533e44bab47e8429e5dccbc6d","date":1400258396,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/join/src/test/org/apache/lucene/search/join/TestJoinUtil#testSimpleWithScoring().mjava","pathOld":"lucene/join/src/test/org/apache/lucene/search/join/TestJoinUtil#testSimpleWithScoring().mjava","sourceNew":"  public void testSimpleWithScoring() throws Exception {\n    final String idField = \"id\";\n    final String toField = \"movieId\";\n\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random(),\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT,\n            new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n\n    // 0\n    Document doc = new Document();\n    doc.add(new TextField(\"description\", \"A random movie\", Field.Store.NO));\n    doc.add(new TextField(\"name\", \"Movie 1\", Field.Store.NO));\n    doc.add(new TextField(idField, \"1\", Field.Store.NO));\n    doc.add(new SortedDocValuesField(idField, new BytesRef(\"1\")));\n    w.addDocument(doc);\n\n    // 1\n    doc = new Document();\n    doc.add(new TextField(\"subtitle\", \"The first subtitle of this movie\", Field.Store.NO));\n    doc.add(new TextField(idField, \"2\", Field.Store.NO));\n    doc.add(new SortedDocValuesField(idField, new BytesRef(\"2\")));\n    doc.add(new TextField(toField, \"1\", Field.Store.NO));\n    doc.add(new SortedDocValuesField(toField, new BytesRef(\"1\")));\n    w.addDocument(doc);\n\n    // 2\n    doc = new Document();\n    doc.add(new TextField(\"subtitle\", \"random subtitle; random event movie\", Field.Store.NO));\n    doc.add(new TextField(idField, \"3\", Field.Store.NO));\n    doc.add(new SortedDocValuesField(idField, new BytesRef(\"3\")));\n    doc.add(new TextField(toField, \"1\", Field.Store.NO));\n    doc.add(new SortedDocValuesField(toField, new BytesRef(\"1\")));\n    w.addDocument(doc);\n\n    // 3\n    doc = new Document();\n    doc.add(new TextField(\"description\", \"A second random movie\", Field.Store.NO));\n    doc.add(new TextField(\"name\", \"Movie 2\", Field.Store.NO));\n    doc.add(new TextField(idField, \"4\", Field.Store.NO));\n    doc.add(new SortedDocValuesField(idField, new BytesRef(\"4\")));\n    w.addDocument(doc);\n    w.commit();\n\n    // 4\n    doc = new Document();\n    doc.add(new TextField(\"subtitle\", \"a very random event happened during christmas night\", Field.Store.NO));\n    doc.add(new TextField(idField, \"5\", Field.Store.NO));\n    doc.add(new SortedDocValuesField(idField, new BytesRef(\"5\")));\n    doc.add(new TextField(toField, \"4\", Field.Store.NO));\n    doc.add(new SortedDocValuesField(toField, new BytesRef(\"4\")));\n    w.addDocument(doc);\n\n    // 5\n    doc = new Document();\n    doc.add(new TextField(\"subtitle\", \"movie end movie test 123 test 123 random\", Field.Store.NO));\n    doc.add(new TextField(idField, \"6\", Field.Store.NO));\n    doc.add(new SortedDocValuesField(idField, new BytesRef(\"6\")));\n    doc.add(new TextField(toField, \"4\", Field.Store.NO));\n    doc.add(new SortedDocValuesField(toField, new BytesRef(\"4\")));\n    w.addDocument(doc);\n\n    IndexSearcher indexSearcher = new IndexSearcher(w.getReader());\n    w.shutdown();\n\n    // Search for movie via subtitle\n    Query joinQuery =\n        JoinUtil.createJoinQuery(toField, false, idField, new TermQuery(new Term(\"subtitle\", \"random\")), indexSearcher, ScoreMode.Max);\n    TopDocs result = indexSearcher.search(joinQuery, 10);\n    assertEquals(2, result.totalHits);\n    assertEquals(0, result.scoreDocs[0].doc);\n    assertEquals(3, result.scoreDocs[1].doc);\n\n    // Score mode max.\n    joinQuery = JoinUtil.createJoinQuery(toField, false, idField, new TermQuery(new Term(\"subtitle\", \"movie\")), indexSearcher, ScoreMode.Max);\n    result = indexSearcher.search(joinQuery, 10);\n    assertEquals(2, result.totalHits);\n    assertEquals(3, result.scoreDocs[0].doc);\n    assertEquals(0, result.scoreDocs[1].doc);\n\n    // Score mode total\n    joinQuery = JoinUtil.createJoinQuery(toField, false, idField, new TermQuery(new Term(\"subtitle\", \"movie\")), indexSearcher, ScoreMode.Total);\n    result = indexSearcher.search(joinQuery, 10);\n    assertEquals(2, result.totalHits);\n    assertEquals(0, result.scoreDocs[0].doc);\n    assertEquals(3, result.scoreDocs[1].doc);\n\n    //Score mode avg\n    joinQuery = JoinUtil.createJoinQuery(toField, false, idField, new TermQuery(new Term(\"subtitle\", \"movie\")), indexSearcher, ScoreMode.Avg);\n    result = indexSearcher.search(joinQuery, 10);\n    assertEquals(2, result.totalHits);\n    assertEquals(3, result.scoreDocs[0].doc);\n    assertEquals(0, result.scoreDocs[1].doc);\n\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testSimpleWithScoring() throws Exception {\n    final String idField = \"id\";\n    final String toField = \"movieId\";\n\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random(),\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT,\n            new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n\n    // 0\n    Document doc = new Document();\n    doc.add(new TextField(\"description\", \"A random movie\", Field.Store.NO));\n    doc.add(new TextField(\"name\", \"Movie 1\", Field.Store.NO));\n    doc.add(new TextField(idField, \"1\", Field.Store.NO));\n    w.addDocument(doc);\n\n    // 1\n    doc = new Document();\n    doc.add(new TextField(\"subtitle\", \"The first subtitle of this movie\", Field.Store.NO));\n    doc.add(new TextField(idField, \"2\", Field.Store.NO));\n    doc.add(new TextField(toField, \"1\", Field.Store.NO));\n    w.addDocument(doc);\n\n    // 2\n    doc = new Document();\n    doc.add(new TextField(\"subtitle\", \"random subtitle; random event movie\", Field.Store.NO));\n    doc.add(new TextField(idField, \"3\", Field.Store.NO));\n    doc.add(new TextField(toField, \"1\", Field.Store.NO));\n    w.addDocument(doc);\n\n    // 3\n    doc = new Document();\n    doc.add(new TextField(\"description\", \"A second random movie\", Field.Store.NO));\n    doc.add(new TextField(\"name\", \"Movie 2\", Field.Store.NO));\n    doc.add(new TextField(idField, \"4\", Field.Store.NO));\n    w.addDocument(doc);\n    w.commit();\n\n    // 4\n    doc = new Document();\n    doc.add(new TextField(\"subtitle\", \"a very random event happened during christmas night\", Field.Store.NO));\n    doc.add(new TextField(idField, \"5\", Field.Store.NO));\n    doc.add(new TextField(toField, \"4\", Field.Store.NO));\n    w.addDocument(doc);\n\n    // 5\n    doc = new Document();\n    doc.add(new TextField(\"subtitle\", \"movie end movie test 123 test 123 random\", Field.Store.NO));\n    doc.add(new TextField(idField, \"6\", Field.Store.NO));\n    doc.add(new TextField(toField, \"4\", Field.Store.NO));\n    w.addDocument(doc);\n\n    IndexSearcher indexSearcher = new IndexSearcher(w.getReader());\n    w.shutdown();\n\n    // Search for movie via subtitle\n    Query joinQuery =\n        JoinUtil.createJoinQuery(toField, false, idField, new TermQuery(new Term(\"subtitle\", \"random\")), indexSearcher, ScoreMode.Max);\n    TopDocs result = indexSearcher.search(joinQuery, 10);\n    assertEquals(2, result.totalHits);\n    assertEquals(0, result.scoreDocs[0].doc);\n    assertEquals(3, result.scoreDocs[1].doc);\n\n    // Score mode max.\n    joinQuery = JoinUtil.createJoinQuery(toField, false, idField, new TermQuery(new Term(\"subtitle\", \"movie\")), indexSearcher, ScoreMode.Max);\n    result = indexSearcher.search(joinQuery, 10);\n    assertEquals(2, result.totalHits);\n    assertEquals(3, result.scoreDocs[0].doc);\n    assertEquals(0, result.scoreDocs[1].doc);\n\n    // Score mode total\n    joinQuery = JoinUtil.createJoinQuery(toField, false, idField, new TermQuery(new Term(\"subtitle\", \"movie\")), indexSearcher, ScoreMode.Total);\n    result = indexSearcher.search(joinQuery, 10);\n    assertEquals(2, result.totalHits);\n    assertEquals(0, result.scoreDocs[0].doc);\n    assertEquals(3, result.scoreDocs[1].doc);\n\n    //Score mode avg\n    joinQuery = JoinUtil.createJoinQuery(toField, false, idField, new TermQuery(new Term(\"subtitle\", \"movie\")), indexSearcher, ScoreMode.Avg);\n    result = indexSearcher.search(joinQuery, 10);\n    assertEquals(2, result.totalHits);\n    assertEquals(3, result.scoreDocs[0].doc);\n    assertEquals(0, result.scoreDocs[1].doc);\n\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"56572ec06f1407c066d6b7399413178b33176cd8","date":1400495675,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/join/src/test/org/apache/lucene/search/join/TestJoinUtil#testSimpleWithScoring().mjava","pathOld":"lucene/join/src/test/org/apache/lucene/search/join/TestJoinUtil#testSimpleWithScoring().mjava","sourceNew":"  public void testSimpleWithScoring() throws Exception {\n    final String idField = \"id\";\n    final String toField = \"movieId\";\n\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random(),\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT,\n            new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n\n    // 0\n    Document doc = new Document();\n    doc.add(new TextField(\"description\", \"A random movie\", Field.Store.NO));\n    doc.add(new TextField(\"name\", \"Movie 1\", Field.Store.NO));\n    doc.add(new TextField(idField, \"1\", Field.Store.NO));\n    doc.add(new SortedDocValuesField(idField, new BytesRef(\"1\")));\n    w.addDocument(doc);\n\n    // 1\n    doc = new Document();\n    doc.add(new TextField(\"subtitle\", \"The first subtitle of this movie\", Field.Store.NO));\n    doc.add(new TextField(idField, \"2\", Field.Store.NO));\n    doc.add(new SortedDocValuesField(idField, new BytesRef(\"2\")));\n    doc.add(new TextField(toField, \"1\", Field.Store.NO));\n    doc.add(new SortedDocValuesField(toField, new BytesRef(\"1\")));\n    w.addDocument(doc);\n\n    // 2\n    doc = new Document();\n    doc.add(new TextField(\"subtitle\", \"random subtitle; random event movie\", Field.Store.NO));\n    doc.add(new TextField(idField, \"3\", Field.Store.NO));\n    doc.add(new SortedDocValuesField(idField, new BytesRef(\"3\")));\n    doc.add(new TextField(toField, \"1\", Field.Store.NO));\n    doc.add(new SortedDocValuesField(toField, new BytesRef(\"1\")));\n    w.addDocument(doc);\n\n    // 3\n    doc = new Document();\n    doc.add(new TextField(\"description\", \"A second random movie\", Field.Store.NO));\n    doc.add(new TextField(\"name\", \"Movie 2\", Field.Store.NO));\n    doc.add(new TextField(idField, \"4\", Field.Store.NO));\n    doc.add(new SortedDocValuesField(idField, new BytesRef(\"4\")));\n    w.addDocument(doc);\n    w.commit();\n\n    // 4\n    doc = new Document();\n    doc.add(new TextField(\"subtitle\", \"a very random event happened during christmas night\", Field.Store.NO));\n    doc.add(new TextField(idField, \"5\", Field.Store.NO));\n    doc.add(new SortedDocValuesField(idField, new BytesRef(\"5\")));\n    doc.add(new TextField(toField, \"4\", Field.Store.NO));\n    doc.add(new SortedDocValuesField(toField, new BytesRef(\"4\")));\n    w.addDocument(doc);\n\n    // 5\n    doc = new Document();\n    doc.add(new TextField(\"subtitle\", \"movie end movie test 123 test 123 random\", Field.Store.NO));\n    doc.add(new TextField(idField, \"6\", Field.Store.NO));\n    doc.add(new SortedDocValuesField(idField, new BytesRef(\"6\")));\n    doc.add(new TextField(toField, \"4\", Field.Store.NO));\n    doc.add(new SortedDocValuesField(toField, new BytesRef(\"4\")));\n    w.addDocument(doc);\n\n    IndexSearcher indexSearcher = new IndexSearcher(w.getReader());\n    w.shutdown();\n\n    // Search for movie via subtitle\n    Query joinQuery =\n        JoinUtil.createJoinQuery(toField, false, idField, new TermQuery(new Term(\"subtitle\", \"random\")), indexSearcher, ScoreMode.Max);\n    TopDocs result = indexSearcher.search(joinQuery, 10);\n    assertEquals(2, result.totalHits);\n    assertEquals(0, result.scoreDocs[0].doc);\n    assertEquals(3, result.scoreDocs[1].doc);\n\n    // Score mode max.\n    joinQuery = JoinUtil.createJoinQuery(toField, false, idField, new TermQuery(new Term(\"subtitle\", \"movie\")), indexSearcher, ScoreMode.Max);\n    result = indexSearcher.search(joinQuery, 10);\n    assertEquals(2, result.totalHits);\n    assertEquals(3, result.scoreDocs[0].doc);\n    assertEquals(0, result.scoreDocs[1].doc);\n\n    // Score mode total\n    joinQuery = JoinUtil.createJoinQuery(toField, false, idField, new TermQuery(new Term(\"subtitle\", \"movie\")), indexSearcher, ScoreMode.Total);\n    result = indexSearcher.search(joinQuery, 10);\n    assertEquals(2, result.totalHits);\n    assertEquals(0, result.scoreDocs[0].doc);\n    assertEquals(3, result.scoreDocs[1].doc);\n\n    //Score mode avg\n    joinQuery = JoinUtil.createJoinQuery(toField, false, idField, new TermQuery(new Term(\"subtitle\", \"movie\")), indexSearcher, ScoreMode.Avg);\n    result = indexSearcher.search(joinQuery, 10);\n    assertEquals(2, result.totalHits);\n    assertEquals(3, result.scoreDocs[0].doc);\n    assertEquals(0, result.scoreDocs[1].doc);\n\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testSimpleWithScoring() throws Exception {\n    final String idField = \"id\";\n    final String toField = \"movieId\";\n\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random(),\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT,\n            new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n\n    // 0\n    Document doc = new Document();\n    doc.add(new TextField(\"description\", \"A random movie\", Field.Store.NO));\n    doc.add(new TextField(\"name\", \"Movie 1\", Field.Store.NO));\n    doc.add(new TextField(idField, \"1\", Field.Store.NO));\n    w.addDocument(doc);\n\n    // 1\n    doc = new Document();\n    doc.add(new TextField(\"subtitle\", \"The first subtitle of this movie\", Field.Store.NO));\n    doc.add(new TextField(idField, \"2\", Field.Store.NO));\n    doc.add(new TextField(toField, \"1\", Field.Store.NO));\n    w.addDocument(doc);\n\n    // 2\n    doc = new Document();\n    doc.add(new TextField(\"subtitle\", \"random subtitle; random event movie\", Field.Store.NO));\n    doc.add(new TextField(idField, \"3\", Field.Store.NO));\n    doc.add(new TextField(toField, \"1\", Field.Store.NO));\n    w.addDocument(doc);\n\n    // 3\n    doc = new Document();\n    doc.add(new TextField(\"description\", \"A second random movie\", Field.Store.NO));\n    doc.add(new TextField(\"name\", \"Movie 2\", Field.Store.NO));\n    doc.add(new TextField(idField, \"4\", Field.Store.NO));\n    w.addDocument(doc);\n    w.commit();\n\n    // 4\n    doc = new Document();\n    doc.add(new TextField(\"subtitle\", \"a very random event happened during christmas night\", Field.Store.NO));\n    doc.add(new TextField(idField, \"5\", Field.Store.NO));\n    doc.add(new TextField(toField, \"4\", Field.Store.NO));\n    w.addDocument(doc);\n\n    // 5\n    doc = new Document();\n    doc.add(new TextField(\"subtitle\", \"movie end movie test 123 test 123 random\", Field.Store.NO));\n    doc.add(new TextField(idField, \"6\", Field.Store.NO));\n    doc.add(new TextField(toField, \"4\", Field.Store.NO));\n    w.addDocument(doc);\n\n    IndexSearcher indexSearcher = new IndexSearcher(w.getReader());\n    w.shutdown();\n\n    // Search for movie via subtitle\n    Query joinQuery =\n        JoinUtil.createJoinQuery(toField, false, idField, new TermQuery(new Term(\"subtitle\", \"random\")), indexSearcher, ScoreMode.Max);\n    TopDocs result = indexSearcher.search(joinQuery, 10);\n    assertEquals(2, result.totalHits);\n    assertEquals(0, result.scoreDocs[0].doc);\n    assertEquals(3, result.scoreDocs[1].doc);\n\n    // Score mode max.\n    joinQuery = JoinUtil.createJoinQuery(toField, false, idField, new TermQuery(new Term(\"subtitle\", \"movie\")), indexSearcher, ScoreMode.Max);\n    result = indexSearcher.search(joinQuery, 10);\n    assertEquals(2, result.totalHits);\n    assertEquals(3, result.scoreDocs[0].doc);\n    assertEquals(0, result.scoreDocs[1].doc);\n\n    // Score mode total\n    joinQuery = JoinUtil.createJoinQuery(toField, false, idField, new TermQuery(new Term(\"subtitle\", \"movie\")), indexSearcher, ScoreMode.Total);\n    result = indexSearcher.search(joinQuery, 10);\n    assertEquals(2, result.totalHits);\n    assertEquals(0, result.scoreDocs[0].doc);\n    assertEquals(3, result.scoreDocs[1].doc);\n\n    //Score mode avg\n    joinQuery = JoinUtil.createJoinQuery(toField, false, idField, new TermQuery(new Term(\"subtitle\", \"movie\")), indexSearcher, ScoreMode.Avg);\n    result = indexSearcher.search(joinQuery, 10);\n    assertEquals(2, result.totalHits);\n    assertEquals(3, result.scoreDocs[0].doc);\n    assertEquals(0, result.scoreDocs[1].doc);\n\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e","date":1406737224,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/join/src/test/org/apache/lucene/search/join/TestJoinUtil#testSimpleWithScoring().mjava","pathOld":"lucene/join/src/test/org/apache/lucene/search/join/TestJoinUtil#testSimpleWithScoring().mjava","sourceNew":"  public void testSimpleWithScoring() throws Exception {\n    final String idField = \"id\";\n    final String toField = \"movieId\";\n\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random(),\n        dir,\n        newIndexWriterConfig(new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n\n    // 0\n    Document doc = new Document();\n    doc.add(new TextField(\"description\", \"A random movie\", Field.Store.NO));\n    doc.add(new TextField(\"name\", \"Movie 1\", Field.Store.NO));\n    doc.add(new TextField(idField, \"1\", Field.Store.NO));\n    doc.add(new SortedDocValuesField(idField, new BytesRef(\"1\")));\n    w.addDocument(doc);\n\n    // 1\n    doc = new Document();\n    doc.add(new TextField(\"subtitle\", \"The first subtitle of this movie\", Field.Store.NO));\n    doc.add(new TextField(idField, \"2\", Field.Store.NO));\n    doc.add(new SortedDocValuesField(idField, new BytesRef(\"2\")));\n    doc.add(new TextField(toField, \"1\", Field.Store.NO));\n    doc.add(new SortedDocValuesField(toField, new BytesRef(\"1\")));\n    w.addDocument(doc);\n\n    // 2\n    doc = new Document();\n    doc.add(new TextField(\"subtitle\", \"random subtitle; random event movie\", Field.Store.NO));\n    doc.add(new TextField(idField, \"3\", Field.Store.NO));\n    doc.add(new SortedDocValuesField(idField, new BytesRef(\"3\")));\n    doc.add(new TextField(toField, \"1\", Field.Store.NO));\n    doc.add(new SortedDocValuesField(toField, new BytesRef(\"1\")));\n    w.addDocument(doc);\n\n    // 3\n    doc = new Document();\n    doc.add(new TextField(\"description\", \"A second random movie\", Field.Store.NO));\n    doc.add(new TextField(\"name\", \"Movie 2\", Field.Store.NO));\n    doc.add(new TextField(idField, \"4\", Field.Store.NO));\n    doc.add(new SortedDocValuesField(idField, new BytesRef(\"4\")));\n    w.addDocument(doc);\n    w.commit();\n\n    // 4\n    doc = new Document();\n    doc.add(new TextField(\"subtitle\", \"a very random event happened during christmas night\", Field.Store.NO));\n    doc.add(new TextField(idField, \"5\", Field.Store.NO));\n    doc.add(new SortedDocValuesField(idField, new BytesRef(\"5\")));\n    doc.add(new TextField(toField, \"4\", Field.Store.NO));\n    doc.add(new SortedDocValuesField(toField, new BytesRef(\"4\")));\n    w.addDocument(doc);\n\n    // 5\n    doc = new Document();\n    doc.add(new TextField(\"subtitle\", \"movie end movie test 123 test 123 random\", Field.Store.NO));\n    doc.add(new TextField(idField, \"6\", Field.Store.NO));\n    doc.add(new SortedDocValuesField(idField, new BytesRef(\"6\")));\n    doc.add(new TextField(toField, \"4\", Field.Store.NO));\n    doc.add(new SortedDocValuesField(toField, new BytesRef(\"4\")));\n    w.addDocument(doc);\n\n    IndexSearcher indexSearcher = new IndexSearcher(w.getReader());\n    w.shutdown();\n\n    // Search for movie via subtitle\n    Query joinQuery =\n        JoinUtil.createJoinQuery(toField, false, idField, new TermQuery(new Term(\"subtitle\", \"random\")), indexSearcher, ScoreMode.Max);\n    TopDocs result = indexSearcher.search(joinQuery, 10);\n    assertEquals(2, result.totalHits);\n    assertEquals(0, result.scoreDocs[0].doc);\n    assertEquals(3, result.scoreDocs[1].doc);\n\n    // Score mode max.\n    joinQuery = JoinUtil.createJoinQuery(toField, false, idField, new TermQuery(new Term(\"subtitle\", \"movie\")), indexSearcher, ScoreMode.Max);\n    result = indexSearcher.search(joinQuery, 10);\n    assertEquals(2, result.totalHits);\n    assertEquals(3, result.scoreDocs[0].doc);\n    assertEquals(0, result.scoreDocs[1].doc);\n\n    // Score mode total\n    joinQuery = JoinUtil.createJoinQuery(toField, false, idField, new TermQuery(new Term(\"subtitle\", \"movie\")), indexSearcher, ScoreMode.Total);\n    result = indexSearcher.search(joinQuery, 10);\n    assertEquals(2, result.totalHits);\n    assertEquals(0, result.scoreDocs[0].doc);\n    assertEquals(3, result.scoreDocs[1].doc);\n\n    //Score mode avg\n    joinQuery = JoinUtil.createJoinQuery(toField, false, idField, new TermQuery(new Term(\"subtitle\", \"movie\")), indexSearcher, ScoreMode.Avg);\n    result = indexSearcher.search(joinQuery, 10);\n    assertEquals(2, result.totalHits);\n    assertEquals(3, result.scoreDocs[0].doc);\n    assertEquals(0, result.scoreDocs[1].doc);\n\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testSimpleWithScoring() throws Exception {\n    final String idField = \"id\";\n    final String toField = \"movieId\";\n\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random(),\n        dir,\n        newIndexWriterConfig(TEST_VERSION_CURRENT,\n            new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n\n    // 0\n    Document doc = new Document();\n    doc.add(new TextField(\"description\", \"A random movie\", Field.Store.NO));\n    doc.add(new TextField(\"name\", \"Movie 1\", Field.Store.NO));\n    doc.add(new TextField(idField, \"1\", Field.Store.NO));\n    doc.add(new SortedDocValuesField(idField, new BytesRef(\"1\")));\n    w.addDocument(doc);\n\n    // 1\n    doc = new Document();\n    doc.add(new TextField(\"subtitle\", \"The first subtitle of this movie\", Field.Store.NO));\n    doc.add(new TextField(idField, \"2\", Field.Store.NO));\n    doc.add(new SortedDocValuesField(idField, new BytesRef(\"2\")));\n    doc.add(new TextField(toField, \"1\", Field.Store.NO));\n    doc.add(new SortedDocValuesField(toField, new BytesRef(\"1\")));\n    w.addDocument(doc);\n\n    // 2\n    doc = new Document();\n    doc.add(new TextField(\"subtitle\", \"random subtitle; random event movie\", Field.Store.NO));\n    doc.add(new TextField(idField, \"3\", Field.Store.NO));\n    doc.add(new SortedDocValuesField(idField, new BytesRef(\"3\")));\n    doc.add(new TextField(toField, \"1\", Field.Store.NO));\n    doc.add(new SortedDocValuesField(toField, new BytesRef(\"1\")));\n    w.addDocument(doc);\n\n    // 3\n    doc = new Document();\n    doc.add(new TextField(\"description\", \"A second random movie\", Field.Store.NO));\n    doc.add(new TextField(\"name\", \"Movie 2\", Field.Store.NO));\n    doc.add(new TextField(idField, \"4\", Field.Store.NO));\n    doc.add(new SortedDocValuesField(idField, new BytesRef(\"4\")));\n    w.addDocument(doc);\n    w.commit();\n\n    // 4\n    doc = new Document();\n    doc.add(new TextField(\"subtitle\", \"a very random event happened during christmas night\", Field.Store.NO));\n    doc.add(new TextField(idField, \"5\", Field.Store.NO));\n    doc.add(new SortedDocValuesField(idField, new BytesRef(\"5\")));\n    doc.add(new TextField(toField, \"4\", Field.Store.NO));\n    doc.add(new SortedDocValuesField(toField, new BytesRef(\"4\")));\n    w.addDocument(doc);\n\n    // 5\n    doc = new Document();\n    doc.add(new TextField(\"subtitle\", \"movie end movie test 123 test 123 random\", Field.Store.NO));\n    doc.add(new TextField(idField, \"6\", Field.Store.NO));\n    doc.add(new SortedDocValuesField(idField, new BytesRef(\"6\")));\n    doc.add(new TextField(toField, \"4\", Field.Store.NO));\n    doc.add(new SortedDocValuesField(toField, new BytesRef(\"4\")));\n    w.addDocument(doc);\n\n    IndexSearcher indexSearcher = new IndexSearcher(w.getReader());\n    w.shutdown();\n\n    // Search for movie via subtitle\n    Query joinQuery =\n        JoinUtil.createJoinQuery(toField, false, idField, new TermQuery(new Term(\"subtitle\", \"random\")), indexSearcher, ScoreMode.Max);\n    TopDocs result = indexSearcher.search(joinQuery, 10);\n    assertEquals(2, result.totalHits);\n    assertEquals(0, result.scoreDocs[0].doc);\n    assertEquals(3, result.scoreDocs[1].doc);\n\n    // Score mode max.\n    joinQuery = JoinUtil.createJoinQuery(toField, false, idField, new TermQuery(new Term(\"subtitle\", \"movie\")), indexSearcher, ScoreMode.Max);\n    result = indexSearcher.search(joinQuery, 10);\n    assertEquals(2, result.totalHits);\n    assertEquals(3, result.scoreDocs[0].doc);\n    assertEquals(0, result.scoreDocs[1].doc);\n\n    // Score mode total\n    joinQuery = JoinUtil.createJoinQuery(toField, false, idField, new TermQuery(new Term(\"subtitle\", \"movie\")), indexSearcher, ScoreMode.Total);\n    result = indexSearcher.search(joinQuery, 10);\n    assertEquals(2, result.totalHits);\n    assertEquals(0, result.scoreDocs[0].doc);\n    assertEquals(3, result.scoreDocs[1].doc);\n\n    //Score mode avg\n    joinQuery = JoinUtil.createJoinQuery(toField, false, idField, new TermQuery(new Term(\"subtitle\", \"movie\")), indexSearcher, ScoreMode.Avg);\n    result = indexSearcher.search(joinQuery, 10);\n    assertEquals(2, result.totalHits);\n    assertEquals(3, result.scoreDocs[0].doc);\n    assertEquals(0, result.scoreDocs[1].doc);\n\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/join/src/test/org/apache/lucene/search/join/TestJoinUtil#testSimpleWithScoring().mjava","pathOld":"lucene/join/src/test/org/apache/lucene/search/join/TestJoinUtil#testSimpleWithScoring().mjava","sourceNew":"  public void testSimpleWithScoring() throws Exception {\n    final String idField = \"id\";\n    final String toField = \"movieId\";\n\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random(),\n        dir,\n        newIndexWriterConfig(new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n\n    // 0\n    Document doc = new Document();\n    doc.add(new TextField(\"description\", \"A random movie\", Field.Store.NO));\n    doc.add(new TextField(\"name\", \"Movie 1\", Field.Store.NO));\n    doc.add(new TextField(idField, \"1\", Field.Store.NO));\n    doc.add(new SortedDocValuesField(idField, new BytesRef(\"1\")));\n    w.addDocument(doc);\n\n    // 1\n    doc = new Document();\n    doc.add(new TextField(\"subtitle\", \"The first subtitle of this movie\", Field.Store.NO));\n    doc.add(new TextField(idField, \"2\", Field.Store.NO));\n    doc.add(new SortedDocValuesField(idField, new BytesRef(\"2\")));\n    doc.add(new TextField(toField, \"1\", Field.Store.NO));\n    doc.add(new SortedDocValuesField(toField, new BytesRef(\"1\")));\n    w.addDocument(doc);\n\n    // 2\n    doc = new Document();\n    doc.add(new TextField(\"subtitle\", \"random subtitle; random event movie\", Field.Store.NO));\n    doc.add(new TextField(idField, \"3\", Field.Store.NO));\n    doc.add(new SortedDocValuesField(idField, new BytesRef(\"3\")));\n    doc.add(new TextField(toField, \"1\", Field.Store.NO));\n    doc.add(new SortedDocValuesField(toField, new BytesRef(\"1\")));\n    w.addDocument(doc);\n\n    // 3\n    doc = new Document();\n    doc.add(new TextField(\"description\", \"A second random movie\", Field.Store.NO));\n    doc.add(new TextField(\"name\", \"Movie 2\", Field.Store.NO));\n    doc.add(new TextField(idField, \"4\", Field.Store.NO));\n    doc.add(new SortedDocValuesField(idField, new BytesRef(\"4\")));\n    w.addDocument(doc);\n    w.commit();\n\n    // 4\n    doc = new Document();\n    doc.add(new TextField(\"subtitle\", \"a very random event happened during christmas night\", Field.Store.NO));\n    doc.add(new TextField(idField, \"5\", Field.Store.NO));\n    doc.add(new SortedDocValuesField(idField, new BytesRef(\"5\")));\n    doc.add(new TextField(toField, \"4\", Field.Store.NO));\n    doc.add(new SortedDocValuesField(toField, new BytesRef(\"4\")));\n    w.addDocument(doc);\n\n    // 5\n    doc = new Document();\n    doc.add(new TextField(\"subtitle\", \"movie end movie test 123 test 123 random\", Field.Store.NO));\n    doc.add(new TextField(idField, \"6\", Field.Store.NO));\n    doc.add(new SortedDocValuesField(idField, new BytesRef(\"6\")));\n    doc.add(new TextField(toField, \"4\", Field.Store.NO));\n    doc.add(new SortedDocValuesField(toField, new BytesRef(\"4\")));\n    w.addDocument(doc);\n\n    IndexSearcher indexSearcher = new IndexSearcher(w.getReader());\n    w.close();\n\n    // Search for movie via subtitle\n    Query joinQuery =\n        JoinUtil.createJoinQuery(toField, false, idField, new TermQuery(new Term(\"subtitle\", \"random\")), indexSearcher, ScoreMode.Max);\n    TopDocs result = indexSearcher.search(joinQuery, 10);\n    assertEquals(2, result.totalHits);\n    assertEquals(0, result.scoreDocs[0].doc);\n    assertEquals(3, result.scoreDocs[1].doc);\n\n    // Score mode max.\n    joinQuery = JoinUtil.createJoinQuery(toField, false, idField, new TermQuery(new Term(\"subtitle\", \"movie\")), indexSearcher, ScoreMode.Max);\n    result = indexSearcher.search(joinQuery, 10);\n    assertEquals(2, result.totalHits);\n    assertEquals(3, result.scoreDocs[0].doc);\n    assertEquals(0, result.scoreDocs[1].doc);\n\n    // Score mode total\n    joinQuery = JoinUtil.createJoinQuery(toField, false, idField, new TermQuery(new Term(\"subtitle\", \"movie\")), indexSearcher, ScoreMode.Total);\n    result = indexSearcher.search(joinQuery, 10);\n    assertEquals(2, result.totalHits);\n    assertEquals(0, result.scoreDocs[0].doc);\n    assertEquals(3, result.scoreDocs[1].doc);\n\n    //Score mode avg\n    joinQuery = JoinUtil.createJoinQuery(toField, false, idField, new TermQuery(new Term(\"subtitle\", \"movie\")), indexSearcher, ScoreMode.Avg);\n    result = indexSearcher.search(joinQuery, 10);\n    assertEquals(2, result.totalHits);\n    assertEquals(3, result.scoreDocs[0].doc);\n    assertEquals(0, result.scoreDocs[1].doc);\n\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testSimpleWithScoring() throws Exception {\n    final String idField = \"id\";\n    final String toField = \"movieId\";\n\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random(),\n        dir,\n        newIndexWriterConfig(new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n\n    // 0\n    Document doc = new Document();\n    doc.add(new TextField(\"description\", \"A random movie\", Field.Store.NO));\n    doc.add(new TextField(\"name\", \"Movie 1\", Field.Store.NO));\n    doc.add(new TextField(idField, \"1\", Field.Store.NO));\n    doc.add(new SortedDocValuesField(idField, new BytesRef(\"1\")));\n    w.addDocument(doc);\n\n    // 1\n    doc = new Document();\n    doc.add(new TextField(\"subtitle\", \"The first subtitle of this movie\", Field.Store.NO));\n    doc.add(new TextField(idField, \"2\", Field.Store.NO));\n    doc.add(new SortedDocValuesField(idField, new BytesRef(\"2\")));\n    doc.add(new TextField(toField, \"1\", Field.Store.NO));\n    doc.add(new SortedDocValuesField(toField, new BytesRef(\"1\")));\n    w.addDocument(doc);\n\n    // 2\n    doc = new Document();\n    doc.add(new TextField(\"subtitle\", \"random subtitle; random event movie\", Field.Store.NO));\n    doc.add(new TextField(idField, \"3\", Field.Store.NO));\n    doc.add(new SortedDocValuesField(idField, new BytesRef(\"3\")));\n    doc.add(new TextField(toField, \"1\", Field.Store.NO));\n    doc.add(new SortedDocValuesField(toField, new BytesRef(\"1\")));\n    w.addDocument(doc);\n\n    // 3\n    doc = new Document();\n    doc.add(new TextField(\"description\", \"A second random movie\", Field.Store.NO));\n    doc.add(new TextField(\"name\", \"Movie 2\", Field.Store.NO));\n    doc.add(new TextField(idField, \"4\", Field.Store.NO));\n    doc.add(new SortedDocValuesField(idField, new BytesRef(\"4\")));\n    w.addDocument(doc);\n    w.commit();\n\n    // 4\n    doc = new Document();\n    doc.add(new TextField(\"subtitle\", \"a very random event happened during christmas night\", Field.Store.NO));\n    doc.add(new TextField(idField, \"5\", Field.Store.NO));\n    doc.add(new SortedDocValuesField(idField, new BytesRef(\"5\")));\n    doc.add(new TextField(toField, \"4\", Field.Store.NO));\n    doc.add(new SortedDocValuesField(toField, new BytesRef(\"4\")));\n    w.addDocument(doc);\n\n    // 5\n    doc = new Document();\n    doc.add(new TextField(\"subtitle\", \"movie end movie test 123 test 123 random\", Field.Store.NO));\n    doc.add(new TextField(idField, \"6\", Field.Store.NO));\n    doc.add(new SortedDocValuesField(idField, new BytesRef(\"6\")));\n    doc.add(new TextField(toField, \"4\", Field.Store.NO));\n    doc.add(new SortedDocValuesField(toField, new BytesRef(\"4\")));\n    w.addDocument(doc);\n\n    IndexSearcher indexSearcher = new IndexSearcher(w.getReader());\n    w.shutdown();\n\n    // Search for movie via subtitle\n    Query joinQuery =\n        JoinUtil.createJoinQuery(toField, false, idField, new TermQuery(new Term(\"subtitle\", \"random\")), indexSearcher, ScoreMode.Max);\n    TopDocs result = indexSearcher.search(joinQuery, 10);\n    assertEquals(2, result.totalHits);\n    assertEquals(0, result.scoreDocs[0].doc);\n    assertEquals(3, result.scoreDocs[1].doc);\n\n    // Score mode max.\n    joinQuery = JoinUtil.createJoinQuery(toField, false, idField, new TermQuery(new Term(\"subtitle\", \"movie\")), indexSearcher, ScoreMode.Max);\n    result = indexSearcher.search(joinQuery, 10);\n    assertEquals(2, result.totalHits);\n    assertEquals(3, result.scoreDocs[0].doc);\n    assertEquals(0, result.scoreDocs[1].doc);\n\n    // Score mode total\n    joinQuery = JoinUtil.createJoinQuery(toField, false, idField, new TermQuery(new Term(\"subtitle\", \"movie\")), indexSearcher, ScoreMode.Total);\n    result = indexSearcher.search(joinQuery, 10);\n    assertEquals(2, result.totalHits);\n    assertEquals(0, result.scoreDocs[0].doc);\n    assertEquals(3, result.scoreDocs[1].doc);\n\n    //Score mode avg\n    joinQuery = JoinUtil.createJoinQuery(toField, false, idField, new TermQuery(new Term(\"subtitle\", \"movie\")), indexSearcher, ScoreMode.Avg);\n    result = indexSearcher.search(joinQuery, 10);\n    assertEquals(2, result.totalHits);\n    assertEquals(3, result.scoreDocs[0].doc);\n    assertEquals(0, result.scoreDocs[1].doc);\n\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"83788ad129a5154d5c6562c4e8ce3db48793aada","date":1532961485,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/join/src/test/org/apache/lucene/search/join/TestJoinUtil#testSimpleWithScoring().mjava","pathOld":"lucene/join/src/test/org/apache/lucene/search/join/TestJoinUtil#testSimpleWithScoring().mjava","sourceNew":"  public void testSimpleWithScoring() throws Exception {\n    final String idField = \"id\";\n    final String toField = \"movieId\";\n\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random(),\n        dir,\n        newIndexWriterConfig(new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n\n    // 0\n    Document doc = new Document();\n    doc.add(new TextField(\"description\", \"A random movie\", Field.Store.NO));\n    doc.add(new TextField(\"name\", \"Movie 1\", Field.Store.NO));\n    doc.add(new TextField(idField, \"1\", Field.Store.NO));\n    doc.add(new SortedDocValuesField(idField, new BytesRef(\"1\")));\n    w.addDocument(doc);\n\n    // 1\n    doc = new Document();\n    doc.add(new TextField(\"subtitle\", \"The first subtitle of this movie\", Field.Store.NO));\n    doc.add(new TextField(idField, \"2\", Field.Store.NO));\n    doc.add(new SortedDocValuesField(idField, new BytesRef(\"2\")));\n    doc.add(new TextField(toField, \"1\", Field.Store.NO));\n    doc.add(new SortedDocValuesField(toField, new BytesRef(\"1\")));\n    w.addDocument(doc);\n\n    // 2\n    doc = new Document();\n    doc.add(new TextField(\"subtitle\", \"random subtitle; random event movie\", Field.Store.NO));\n    doc.add(new TextField(idField, \"3\", Field.Store.NO));\n    doc.add(new SortedDocValuesField(idField, new BytesRef(\"3\")));\n    doc.add(new TextField(toField, \"1\", Field.Store.NO));\n    doc.add(new SortedDocValuesField(toField, new BytesRef(\"1\")));\n    w.addDocument(doc);\n\n    // 3\n    doc = new Document();\n    doc.add(new TextField(\"description\", \"A second random movie\", Field.Store.NO));\n    doc.add(new TextField(\"name\", \"Movie 2\", Field.Store.NO));\n    doc.add(new TextField(idField, \"4\", Field.Store.NO));\n    doc.add(new SortedDocValuesField(idField, new BytesRef(\"4\")));\n    w.addDocument(doc);\n    w.commit();\n\n    // 4\n    doc = new Document();\n    doc.add(new TextField(\"subtitle\", \"a very random event happened during christmas night\", Field.Store.NO));\n    doc.add(new TextField(idField, \"5\", Field.Store.NO));\n    doc.add(new SortedDocValuesField(idField, new BytesRef(\"5\")));\n    doc.add(new TextField(toField, \"4\", Field.Store.NO));\n    doc.add(new SortedDocValuesField(toField, new BytesRef(\"4\")));\n    w.addDocument(doc);\n\n    // 5\n    doc = new Document();\n    doc.add(new TextField(\"subtitle\", \"movie end movie test 123 test 123 random\", Field.Store.NO));\n    doc.add(new TextField(idField, \"6\", Field.Store.NO));\n    doc.add(new SortedDocValuesField(idField, new BytesRef(\"6\")));\n    doc.add(new TextField(toField, \"4\", Field.Store.NO));\n    doc.add(new SortedDocValuesField(toField, new BytesRef(\"4\")));\n    w.addDocument(doc);\n\n    IndexSearcher indexSearcher = new IndexSearcher(w.getReader());\n    w.close();\n\n    // Search for movie via subtitle\n    Query joinQuery =\n        JoinUtil.createJoinQuery(toField, false, idField, new TermQuery(new Term(\"subtitle\", \"random\")), indexSearcher, ScoreMode.Max);\n    TopDocs result = indexSearcher.search(joinQuery, 10);\n    assertEquals(2, result.totalHits.value);\n    assertEquals(0, result.scoreDocs[0].doc);\n    assertEquals(3, result.scoreDocs[1].doc);\n\n    // Score mode max.\n    joinQuery = JoinUtil.createJoinQuery(toField, false, idField, new TermQuery(new Term(\"subtitle\", \"movie\")), indexSearcher, ScoreMode.Max);\n    result = indexSearcher.search(joinQuery, 10);\n    assertEquals(2, result.totalHits.value);\n    assertEquals(3, result.scoreDocs[0].doc);\n    assertEquals(0, result.scoreDocs[1].doc);\n\n    // Score mode total\n    joinQuery = JoinUtil.createJoinQuery(toField, false, idField, new TermQuery(new Term(\"subtitle\", \"movie\")), indexSearcher, ScoreMode.Total);\n    result = indexSearcher.search(joinQuery, 10);\n    assertEquals(2, result.totalHits.value);\n    assertEquals(0, result.scoreDocs[0].doc);\n    assertEquals(3, result.scoreDocs[1].doc);\n\n    //Score mode avg\n    joinQuery = JoinUtil.createJoinQuery(toField, false, idField, new TermQuery(new Term(\"subtitle\", \"movie\")), indexSearcher, ScoreMode.Avg);\n    result = indexSearcher.search(joinQuery, 10);\n    assertEquals(2, result.totalHits.value);\n    assertEquals(3, result.scoreDocs[0].doc);\n    assertEquals(0, result.scoreDocs[1].doc);\n\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testSimpleWithScoring() throws Exception {\n    final String idField = \"id\";\n    final String toField = \"movieId\";\n\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(\n        random(),\n        dir,\n        newIndexWriterConfig(new MockAnalyzer(random())).setMergePolicy(newLogMergePolicy()));\n\n    // 0\n    Document doc = new Document();\n    doc.add(new TextField(\"description\", \"A random movie\", Field.Store.NO));\n    doc.add(new TextField(\"name\", \"Movie 1\", Field.Store.NO));\n    doc.add(new TextField(idField, \"1\", Field.Store.NO));\n    doc.add(new SortedDocValuesField(idField, new BytesRef(\"1\")));\n    w.addDocument(doc);\n\n    // 1\n    doc = new Document();\n    doc.add(new TextField(\"subtitle\", \"The first subtitle of this movie\", Field.Store.NO));\n    doc.add(new TextField(idField, \"2\", Field.Store.NO));\n    doc.add(new SortedDocValuesField(idField, new BytesRef(\"2\")));\n    doc.add(new TextField(toField, \"1\", Field.Store.NO));\n    doc.add(new SortedDocValuesField(toField, new BytesRef(\"1\")));\n    w.addDocument(doc);\n\n    // 2\n    doc = new Document();\n    doc.add(new TextField(\"subtitle\", \"random subtitle; random event movie\", Field.Store.NO));\n    doc.add(new TextField(idField, \"3\", Field.Store.NO));\n    doc.add(new SortedDocValuesField(idField, new BytesRef(\"3\")));\n    doc.add(new TextField(toField, \"1\", Field.Store.NO));\n    doc.add(new SortedDocValuesField(toField, new BytesRef(\"1\")));\n    w.addDocument(doc);\n\n    // 3\n    doc = new Document();\n    doc.add(new TextField(\"description\", \"A second random movie\", Field.Store.NO));\n    doc.add(new TextField(\"name\", \"Movie 2\", Field.Store.NO));\n    doc.add(new TextField(idField, \"4\", Field.Store.NO));\n    doc.add(new SortedDocValuesField(idField, new BytesRef(\"4\")));\n    w.addDocument(doc);\n    w.commit();\n\n    // 4\n    doc = new Document();\n    doc.add(new TextField(\"subtitle\", \"a very random event happened during christmas night\", Field.Store.NO));\n    doc.add(new TextField(idField, \"5\", Field.Store.NO));\n    doc.add(new SortedDocValuesField(idField, new BytesRef(\"5\")));\n    doc.add(new TextField(toField, \"4\", Field.Store.NO));\n    doc.add(new SortedDocValuesField(toField, new BytesRef(\"4\")));\n    w.addDocument(doc);\n\n    // 5\n    doc = new Document();\n    doc.add(new TextField(\"subtitle\", \"movie end movie test 123 test 123 random\", Field.Store.NO));\n    doc.add(new TextField(idField, \"6\", Field.Store.NO));\n    doc.add(new SortedDocValuesField(idField, new BytesRef(\"6\")));\n    doc.add(new TextField(toField, \"4\", Field.Store.NO));\n    doc.add(new SortedDocValuesField(toField, new BytesRef(\"4\")));\n    w.addDocument(doc);\n\n    IndexSearcher indexSearcher = new IndexSearcher(w.getReader());\n    w.close();\n\n    // Search for movie via subtitle\n    Query joinQuery =\n        JoinUtil.createJoinQuery(toField, false, idField, new TermQuery(new Term(\"subtitle\", \"random\")), indexSearcher, ScoreMode.Max);\n    TopDocs result = indexSearcher.search(joinQuery, 10);\n    assertEquals(2, result.totalHits);\n    assertEquals(0, result.scoreDocs[0].doc);\n    assertEquals(3, result.scoreDocs[1].doc);\n\n    // Score mode max.\n    joinQuery = JoinUtil.createJoinQuery(toField, false, idField, new TermQuery(new Term(\"subtitle\", \"movie\")), indexSearcher, ScoreMode.Max);\n    result = indexSearcher.search(joinQuery, 10);\n    assertEquals(2, result.totalHits);\n    assertEquals(3, result.scoreDocs[0].doc);\n    assertEquals(0, result.scoreDocs[1].doc);\n\n    // Score mode total\n    joinQuery = JoinUtil.createJoinQuery(toField, false, idField, new TermQuery(new Term(\"subtitle\", \"movie\")), indexSearcher, ScoreMode.Total);\n    result = indexSearcher.search(joinQuery, 10);\n    assertEquals(2, result.totalHits);\n    assertEquals(0, result.scoreDocs[0].doc);\n    assertEquals(3, result.scoreDocs[1].doc);\n\n    //Score mode avg\n    joinQuery = JoinUtil.createJoinQuery(toField, false, idField, new TermQuery(new Term(\"subtitle\", \"movie\")), indexSearcher, ScoreMode.Avg);\n    result = indexSearcher.search(joinQuery, 10);\n    assertEquals(2, result.totalHits);\n    assertEquals(3, result.scoreDocs[0].doc);\n    assertEquals(0, result.scoreDocs[1].doc);\n\n    indexSearcher.getIndexReader().close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"04f07771a2a7dd3a395700665ed839c3dae2def2":["77855215e331ce146763531cb9b0c050726f6ae5"],"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["93dd449115a9247533e44bab47e8429e5dccbc6d"],"93dd449115a9247533e44bab47e8429e5dccbc6d":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a","b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d0ef034a4f10871667ae75181537775ddcf8ade4":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"77855215e331ce146763531cb9b0c050726f6ae5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"83788ad129a5154d5c6562c4e8ce3db48793aada":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"56572ec06f1407c066d6b7399413178b33176cd8":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a","93dd449115a9247533e44bab47e8429e5dccbc6d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["83788ad129a5154d5c6562c4e8ce3db48793aada"]},"commit2Childs":{"04f07771a2a7dd3a395700665ed839c3dae2def2":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"93dd449115a9247533e44bab47e8429e5dccbc6d":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e","56572ec06f1407c066d6b7399413178b33176cd8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["77855215e331ce146763531cb9b0c050726f6ae5"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["83788ad129a5154d5c6562c4e8ce3db48793aada"],"b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c":["93dd449115a9247533e44bab47e8429e5dccbc6d"],"77855215e331ce146763531cb9b0c050726f6ae5":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["93dd449115a9247533e44bab47e8429e5dccbc6d","b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c","56572ec06f1407c066d6b7399413178b33176cd8"],"83788ad129a5154d5c6562c4e8ce3db48793aada":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"56572ec06f1407c066d6b7399413178b33176cd8":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["56572ec06f1407c066d6b7399413178b33176cd8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}