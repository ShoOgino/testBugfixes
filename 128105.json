{"path":"solr/core/src/test/org/apache/solr/handler/BinaryUpdateRequestHandlerTest#testRequestParams().mjava","commits":[{"id":"5193d9b4b0cc722fb207d3bf732d06a6779ec4d0","date":1326817087,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/BinaryUpdateRequestHandlerTest#testRequestParams().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testRequestParams() throws Exception {\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.addField(\"id\", \"1\");\n    UpdateRequest ureq = new UpdateRequest();\n    ureq.add(doc);\n    ureq.setParam(UpdateParams.COMMIT_WITHIN, \"100\");\n    ureq.setParam(UpdateParams.OVERWRITE, Boolean.toString(false));\n\n    BinaryRequestWriter brw = new BinaryRequestWriter();\n    BufferingRequestProcessor p = new BufferingRequestProcessor(null);\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    BinaryUpdateRequestHandler handler = new BinaryUpdateRequestHandler();\n    SolrQueryRequest req = req();\n    ContentStreamLoader csl = handler.newLoader(req, p);\n\n    csl.load(req, rsp, brw.getContentStream(ureq));\n\n    AddUpdateCommand add = p.addCommands.get(0);\n    System.out.println(add.solrDoc);\n    assertEquals(false, add.overwrite);\n    assertEquals(100, add.commitWithin);\n\n    req.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"042e4d934397657ba04c82b46cc5665076bc5c58","date":1336511170,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/BinaryUpdateRequestHandlerTest#testRequestParams().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/BinaryUpdateRequestHandlerTest#testRequestParams().mjava","sourceNew":"  @Test\n  public void testRequestParams() throws Exception {\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.addField(\"id\", \"1\");\n    UpdateRequest ureq = new UpdateRequest();\n    ureq.add(doc);\n    ureq.setParam(UpdateParams.COMMIT_WITHIN, \"100\");\n    ureq.setParam(UpdateParams.OVERWRITE, Boolean.toString(false));\n\n    BinaryRequestWriter brw = new BinaryRequestWriter();\n    BufferingRequestProcessor p = new BufferingRequestProcessor(null);\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    UpdateRequestHandler handler = new UpdateRequestHandler();\n    handler.init(new NamedList());\n    SolrQueryRequest req = req();\n    ContentStreamLoader csl = handler.newLoader(req, p);\n\n    csl.load(req, rsp, brw.getContentStream(ureq), p);\n\n    AddUpdateCommand add = p.addCommands.get(0);\n    System.out.println(add.solrDoc);\n    assertEquals(false, add.overwrite);\n    assertEquals(100, add.commitWithin);\n\n    req.close();\n  }\n\n","sourceOld":"  @Test\n  public void testRequestParams() throws Exception {\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.addField(\"id\", \"1\");\n    UpdateRequest ureq = new UpdateRequest();\n    ureq.add(doc);\n    ureq.setParam(UpdateParams.COMMIT_WITHIN, \"100\");\n    ureq.setParam(UpdateParams.OVERWRITE, Boolean.toString(false));\n\n    BinaryRequestWriter brw = new BinaryRequestWriter();\n    BufferingRequestProcessor p = new BufferingRequestProcessor(null);\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    BinaryUpdateRequestHandler handler = new BinaryUpdateRequestHandler();\n    SolrQueryRequest req = req();\n    ContentStreamLoader csl = handler.newLoader(req, p);\n\n    csl.load(req, rsp, brw.getContentStream(ureq));\n\n    AddUpdateCommand add = p.addCommands.get(0);\n    System.out.println(add.solrDoc);\n    assertEquals(false, add.overwrite);\n    assertEquals(100, add.commitWithin);\n\n    req.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"97bcd657104d24ce5e89db102939e68a6784bdda","date":1509417991,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/BinaryUpdateRequestHandlerTest#testRequestParams().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/BinaryUpdateRequestHandlerTest#testRequestParams().mjava","sourceNew":"  @Test\n  public void testRequestParams() throws Exception {\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.addField(\"id\", \"1\");\n    UpdateRequest ureq = new UpdateRequest();\n    ureq.add(doc);\n    ureq.setParam(UpdateParams.COMMIT_WITHIN, \"100\");\n    ureq.setParam(UpdateParams.OVERWRITE, Boolean.toString(false));\n\n    BinaryRequestWriter brw = new BinaryRequestWriter();\n    BufferingRequestProcessor p = new BufferingRequestProcessor(null);\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    UpdateRequestHandler handler = new UpdateRequestHandler();\n    handler.init(new NamedList());\n    SolrQueryRequest req = req();\n    ContentStreamLoader csl = handler.newLoader(req, p);\n\n    RequestWriter.ContentWriter cw = brw.getContentWriter(ureq);\n    ByteArrayOutputStream baos = new ByteArrayOutputStream();\n    cw.write(baos);\n    ContentStreamBase.ByteArrayStream cs = new ContentStreamBase.ByteArrayStream(baos.toByteArray(), null, \"application/javabin\");\n    csl.load(req, rsp, cs, p);\n    AddUpdateCommand add = p.addCommands.get(0);\n    System.out.println(add.solrDoc);\n    assertEquals(false, add.overwrite);\n    assertEquals(100, add.commitWithin);\n\n    req.close();\n  }\n\n","sourceOld":"  @Test\n  public void testRequestParams() throws Exception {\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.addField(\"id\", \"1\");\n    UpdateRequest ureq = new UpdateRequest();\n    ureq.add(doc);\n    ureq.setParam(UpdateParams.COMMIT_WITHIN, \"100\");\n    ureq.setParam(UpdateParams.OVERWRITE, Boolean.toString(false));\n\n    BinaryRequestWriter brw = new BinaryRequestWriter();\n    BufferingRequestProcessor p = new BufferingRequestProcessor(null);\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    UpdateRequestHandler handler = new UpdateRequestHandler();\n    handler.init(new NamedList());\n    SolrQueryRequest req = req();\n    ContentStreamLoader csl = handler.newLoader(req, p);\n\n    csl.load(req, rsp, brw.getContentStream(ureq), p);\n\n    AddUpdateCommand add = p.addCommands.get(0);\n    System.out.println(add.solrDoc);\n    assertEquals(false, add.overwrite);\n    assertEquals(100, add.commitWithin);\n\n    req.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba055e19afc289adcb5bedaf68513793a7254012","date":1591268575,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/BinaryUpdateRequestHandlerTest#testRequestParams().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/BinaryUpdateRequestHandlerTest#testRequestParams().mjava","sourceNew":"  @Test\n  public void testRequestParams() throws Exception {\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.addField(\"id\", \"1\");\n    UpdateRequest ureq = new UpdateRequest();\n    ureq.add(doc);\n    ureq.setParam(UpdateParams.COMMIT_WITHIN, \"100\");\n    ureq.setParam(UpdateParams.OVERWRITE, Boolean.toString(false));\n\n    BinaryRequestWriter brw = new BinaryRequestWriter();\n    BufferingRequestProcessor p = new BufferingRequestProcessor(null);\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    try (SolrQueryRequest req = req(); UpdateRequestHandler handler = new UpdateRequestHandler()) {\n      handler.init(new NamedList());\n      ContentStreamLoader csl = handler.newLoader(req, p);\n      RequestWriter.ContentWriter cw = brw.getContentWriter(ureq);\n      ByteArrayOutputStream baos = new ByteArrayOutputStream();\n      cw.write(baos);\n      ContentStreamBase.ByteArrayStream cs = new ContentStreamBase.ByteArrayStream(baos.toByteArray(), null, \"application/javabin\");\n      csl.load(req, rsp, cs, p);\n      AddUpdateCommand add = p.addCommands.get(0);\n      System.out.println(add.solrDoc);\n      assertEquals(false, add.overwrite);\n      assertEquals(100, add.commitWithin);\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testRequestParams() throws Exception {\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.addField(\"id\", \"1\");\n    UpdateRequest ureq = new UpdateRequest();\n    ureq.add(doc);\n    ureq.setParam(UpdateParams.COMMIT_WITHIN, \"100\");\n    ureq.setParam(UpdateParams.OVERWRITE, Boolean.toString(false));\n\n    BinaryRequestWriter brw = new BinaryRequestWriter();\n    BufferingRequestProcessor p = new BufferingRequestProcessor(null);\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    UpdateRequestHandler handler = new UpdateRequestHandler();\n    handler.init(new NamedList());\n    SolrQueryRequest req = req();\n    ContentStreamLoader csl = handler.newLoader(req, p);\n\n    RequestWriter.ContentWriter cw = brw.getContentWriter(ureq);\n    ByteArrayOutputStream baos = new ByteArrayOutputStream();\n    cw.write(baos);\n    ContentStreamBase.ByteArrayStream cs = new ContentStreamBase.ByteArrayStream(baos.toByteArray(), null, \"application/javabin\");\n    csl.load(req, rsp, cs, p);\n    AddUpdateCommand add = p.addCommands.get(0);\n    System.out.println(add.solrDoc);\n    assertEquals(false, add.overwrite);\n    assertEquals(100, add.commitWithin);\n\n    req.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e98520789adb1d5ad05afb4956eca0944a929688","date":1592430701,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/BinaryUpdateRequestHandlerTest#testRequestParams().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/BinaryUpdateRequestHandlerTest#testRequestParams().mjava","sourceNew":"  @Test\n  @SuppressWarnings({\"rawtypes\"})\n  public void testRequestParams() throws Exception {\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.addField(\"id\", \"1\");\n    UpdateRequest ureq = new UpdateRequest();\n    ureq.add(doc);\n    ureq.setParam(UpdateParams.COMMIT_WITHIN, \"100\");\n    ureq.setParam(UpdateParams.OVERWRITE, Boolean.toString(false));\n\n    BinaryRequestWriter brw = new BinaryRequestWriter();\n    BufferingRequestProcessor p = new BufferingRequestProcessor(null);\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    try (SolrQueryRequest req = req(); UpdateRequestHandler handler = new UpdateRequestHandler()) {\n      handler.init(new NamedList());\n      ContentStreamLoader csl = handler.newLoader(req, p);\n      RequestWriter.ContentWriter cw = brw.getContentWriter(ureq);\n      ByteArrayOutputStream baos = new ByteArrayOutputStream();\n      cw.write(baos);\n      ContentStreamBase.ByteArrayStream cs = new ContentStreamBase.ByteArrayStream(baos.toByteArray(), null, \"application/javabin\");\n      csl.load(req, rsp, cs, p);\n      AddUpdateCommand add = p.addCommands.get(0);\n      System.out.println(add.solrDoc);\n      assertEquals(false, add.overwrite);\n      assertEquals(100, add.commitWithin);\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testRequestParams() throws Exception {\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.addField(\"id\", \"1\");\n    UpdateRequest ureq = new UpdateRequest();\n    ureq.add(doc);\n    ureq.setParam(UpdateParams.COMMIT_WITHIN, \"100\");\n    ureq.setParam(UpdateParams.OVERWRITE, Boolean.toString(false));\n\n    BinaryRequestWriter brw = new BinaryRequestWriter();\n    BufferingRequestProcessor p = new BufferingRequestProcessor(null);\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    try (SolrQueryRequest req = req(); UpdateRequestHandler handler = new UpdateRequestHandler()) {\n      handler.init(new NamedList());\n      ContentStreamLoader csl = handler.newLoader(req, p);\n      RequestWriter.ContentWriter cw = brw.getContentWriter(ureq);\n      ByteArrayOutputStream baos = new ByteArrayOutputStream();\n      cw.write(baos);\n      ContentStreamBase.ByteArrayStream cs = new ContentStreamBase.ByteArrayStream(baos.toByteArray(), null, \"application/javabin\");\n      csl.load(req, rsp, cs, p);\n      AddUpdateCommand add = p.addCommands.get(0);\n      System.out.println(add.solrDoc);\n      assertEquals(false, add.overwrite);\n      assertEquals(100, add.commitWithin);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ba055e19afc289adcb5bedaf68513793a7254012":["97bcd657104d24ce5e89db102939e68a6784bdda"],"042e4d934397657ba04c82b46cc5665076bc5c58":["5193d9b4b0cc722fb207d3bf732d06a6779ec4d0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"97bcd657104d24ce5e89db102939e68a6784bdda":["042e4d934397657ba04c82b46cc5665076bc5c58"],"5193d9b4b0cc722fb207d3bf732d06a6779ec4d0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e98520789adb1d5ad05afb4956eca0944a929688"],"e98520789adb1d5ad05afb4956eca0944a929688":["ba055e19afc289adcb5bedaf68513793a7254012"]},"commit2Childs":{"ba055e19afc289adcb5bedaf68513793a7254012":["e98520789adb1d5ad05afb4956eca0944a929688"],"042e4d934397657ba04c82b46cc5665076bc5c58":["97bcd657104d24ce5e89db102939e68a6784bdda"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5193d9b4b0cc722fb207d3bf732d06a6779ec4d0"],"97bcd657104d24ce5e89db102939e68a6784bdda":["ba055e19afc289adcb5bedaf68513793a7254012"],"5193d9b4b0cc722fb207d3bf732d06a6779ec4d0":["042e4d934397657ba04c82b46cc5665076bc5c58"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"e98520789adb1d5ad05afb4956eca0944a929688":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}