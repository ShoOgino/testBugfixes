{"path":"lucene/src/java/org/apache/lucene/index/IndexReader#docValues(String).mjava","commits":[{"id":"0e28c49f1fb6215a550fdadcf3805aa629b63ec0","date":1288081775,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexReader#docValues(String).mjava","pathOld":"/dev/null","sourceNew":"  public DocValues docValues(String field) throws IOException {\n    final Fields fields = fields();\n    if (fields == null) {\n      return null;\n    }\n    return fields.docValues(field);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexReader#docValues(String).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexReader#docValues(String).mjava","sourceNew":"  public DocValues docValues(String field) throws IOException {\n    final PerDocValues perDoc = perDocValues();\n    if (perDoc == null) {\n      return null;\n    }\n    return perDoc.docValues(field);\n  }\n\n","sourceOld":"  public DocValues docValues(String field) throws IOException {\n    final Fields fields = fields();\n    if (fields == null) {\n      return null;\n    }\n    return fields.docValues(field);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"41e5bbad683f7546e96f08ffe8bc50cf447f2586","date":1307113213,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexReader#docValues(String).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexReader#docValues(String).mjava","sourceNew":"  public IndexDocValues docValues(String field) throws IOException {\n    final PerDocValues perDoc = perDocValues();\n    if (perDoc == null) {\n      return null;\n    }\n    return perDoc.docValues(field);\n  }\n\n","sourceOld":"  public DocValues docValues(String field) throws IOException {\n    final PerDocValues perDoc = perDocValues();\n    if (perDoc == null) {\n      return null;\n    }\n    return perDoc.docValues(field);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"245b64c37f29b58edef53dfa639676263fe374b6","date":1307622300,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexReader#docValues(String).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexReader#docValues(String).mjava","sourceNew":"  public final IndexDocValues docValues(String field) throws IOException {\n    final PerDocValues perDoc = perDocValues();\n    if (perDoc == null) {\n      return null;\n    }\n    return perDoc.docValues(field);\n  }\n\n","sourceOld":"  public IndexDocValues docValues(String field) throws IOException {\n    final PerDocValues perDoc = perDocValues();\n    if (perDoc == null) {\n      return null;\n    }\n    return perDoc.docValues(field);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e8d7ba2175f47e280231533f7d3016249cea88b","date":1307711934,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexReader#docValues(String).mjava","pathOld":"/dev/null","sourceNew":"  public final IndexDocValues docValues(String field) throws IOException {\n    final PerDocValues perDoc = perDocValues();\n    if (perDoc == null) {\n      return null;\n    }\n    return perDoc.docValues(field);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","date":1307729864,"type":0,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexReader#docValues(String).mjava","pathOld":"/dev/null","sourceNew":"  public final IndexDocValues docValues(String field) throws IOException {\n    final PerDocValues perDoc = perDocValues();\n    if (perDoc == null) {\n      return null;\n    }\n    return perDoc.docValues(field);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0ddeeafb97cacc0f0e449e34a246cb6dda2c712b","date":1316619234,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexReader#docValues(String).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexReader#docValues(String).mjava","sourceNew":"  public final IndexDocValues docValues(String field) throws IOException {\n    ensureOpen();\n    final PerDocValues perDoc = perDocValues();\n    if (perDoc == null) {\n      return null;\n    }\n    return perDoc.docValues(field);\n  }\n\n","sourceOld":"  public final IndexDocValues docValues(String field) throws IOException {\n    final PerDocValues perDoc = perDocValues();\n    if (perDoc == null) {\n      return null;\n    }\n    return perDoc.docValues(field);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1e59c344a45b9502f40ec44f5fe4e20ed2291dbe","date":1323449025,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexReader#docValues(String).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexReader#docValues(String).mjava","sourceNew":"  public final DocValues docValues(String field) throws IOException {\n    ensureOpen();\n    final PerDocValues perDoc = perDocValues();\n    if (perDoc == null) {\n      return null;\n    }\n    return perDoc.docValues(field);\n  }\n\n","sourceOld":"  public final IndexDocValues docValues(String field) throws IOException {\n    ensureOpen();\n    final PerDocValues perDoc = perDocValues();\n    if (perDoc == null) {\n      return null;\n    }\n    return perDoc.docValues(field);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cac4d5fa6c305b94f6232a70bda07f096ad0348c","date":1323538980,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexReader#docValues(String).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexReader#docValues(String).mjava","sourceNew":"  /**\n   * Returns {@link DocValues} for this field.\n   * This method may return null if the reader has no per-document\n   * values stored.\n   *\n   * <p><b>NOTE</b>: if this is a multi reader ({@link\n   * #getSequentialSubReaders} is not null) then this\n   * method will throw UnsupportedOperationException.  If\n   * you really need {@link DocValues} for such a reader,\n   * use {@link MultiDocValues#getDocValues(IndexReader,String)}.  However, for\n   * performance reasons, it's best to get all sub-readers\n   * using {@link ReaderUtil#gatherSubReaders} and iterate\n   * through them yourself. */\n  public abstract DocValues docValues(String field) throws IOException;\n\n","sourceOld":"  public final DocValues docValues(String field) throws IOException {\n    ensureOpen();\n    final PerDocValues perDoc = perDocValues();\n    if (perDoc == null) {\n      return null;\n    }\n    return perDoc.docValues(field);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d638301ad1cfcae567b681b893bc8781f0ee48a5","date":1323801546,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexReader#docValues(String).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexReader#docValues(String).mjava","sourceNew":"  /**\n   * Returns {@link DocValues} for this field.\n   * This method may return null if the reader has no per-document\n   * values stored.\n   *\n   * <p><b>NOTE</b>: if this is a multi reader ({@link\n   * #getSequentialSubReaders} is not null) then this\n   * method will throw UnsupportedOperationException.  If\n   * you really need {@link DocValues} for such a reader,\n   * use {@link MultiDocValues#getDocValues(IndexReader,String)}.  However, for\n   * performance reasons, it's best to get all sub-readers\n   * using {@link ReaderUtil#gatherSubReaders} and iterate\n   * through them yourself. */\n  public abstract DocValues docValues(String field) throws IOException;\n\n","sourceOld":"  public final IndexDocValues docValues(String field) throws IOException {\n    ensureOpen();\n    final PerDocValues perDoc = perDocValues();\n    if (perDoc == null) {\n      return null;\n    }\n    return perDoc.docValues(field);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2725b2d479964ea5aaea0ba4ae2634716f3ec26c","date":1327188170,"type":5,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/AtomicIndexReader#docValues(String).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexReader#docValues(String).mjava","sourceNew":"  /**\n   * Returns {@link DocValues} for this field.\n   * This method may return null if the reader has no per-document\n   * values stored.\n   *\n   * <p><b>NOTE</b>: if this is a multi reader ({@link\n   * #getSequentialSubReaders} is not null) then this\n   * method will throw UnsupportedOperationException.  If\n   * you really need {@link DocValues} for such a reader,\n   * use {@link MultiDocValues#getDocValues(IndexReader,String)}.  However, for\n   * performance reasons, it's best to get all sub-readers\n   * using {@link ReaderUtil#gatherSubReaders} and iterate\n   * through them yourself. */\n  public abstract DocValues docValues(String field) throws IOException;\n\n","sourceOld":"  /**\n   * Returns {@link DocValues} for this field.\n   * This method may return null if the reader has no per-document\n   * values stored.\n   *\n   * <p><b>NOTE</b>: if this is a multi reader ({@link\n   * #getSequentialSubReaders} is not null) then this\n   * method will throw UnsupportedOperationException.  If\n   * you really need {@link DocValues} for such a reader,\n   * use {@link MultiDocValues#getDocValues(IndexReader,String)}.  However, for\n   * performance reasons, it's best to get all sub-readers\n   * using {@link ReaderUtil#gatherSubReaders} and iterate\n   * through them yourself. */\n  public abstract DocValues docValues(String field) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5cab9a86bd67202d20b6adc463008c8e982b070a","date":1327966443,"type":5,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/AtomicReader#docValues(String).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexReader#docValues(String).mjava","sourceNew":"  /**\n   * Returns {@link DocValues} for this field.\n   * This method may return null if the reader has no per-document\n   * values stored.\n   */\n  public abstract DocValues docValues(String field) throws IOException;\n\n","sourceOld":"  /**\n   * Returns {@link DocValues} for this field.\n   * This method may return null if the reader has no per-document\n   * values stored.\n   *\n   * <p><b>NOTE</b>: if this is a multi reader ({@link\n   * #getSequentialSubReaders} is not null) then this\n   * method will throw UnsupportedOperationException.  If\n   * you really need {@link DocValues} for such a reader,\n   * use {@link MultiDocValues#getDocValues(IndexReader,String)}.  However, for\n   * performance reasons, it's best to get all sub-readers\n   * using {@link ReaderUtil#gatherSubReaders} and iterate\n   * through them yourself. */\n  public abstract DocValues docValues(String field) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"245b64c37f29b58edef53dfa639676263fe374b6":["41e5bbad683f7546e96f08ffe8bc50cf447f2586"],"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2e8d7ba2175f47e280231533f7d3016249cea88b"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["0e28c49f1fb6215a550fdadcf3805aa629b63ec0","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5cab9a86bd67202d20b6adc463008c8e982b070a":["d638301ad1cfcae567b681b893bc8781f0ee48a5","2725b2d479964ea5aaea0ba4ae2634716f3ec26c"],"d638301ad1cfcae567b681b893bc8781f0ee48a5":["0ddeeafb97cacc0f0e449e34a246cb6dda2c712b","cac4d5fa6c305b94f6232a70bda07f096ad0348c"],"0ddeeafb97cacc0f0e449e34a246cb6dda2c712b":["2e8d7ba2175f47e280231533f7d3016249cea88b"],"2e8d7ba2175f47e280231533f7d3016249cea88b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","245b64c37f29b58edef53dfa639676263fe374b6"],"cac4d5fa6c305b94f6232a70bda07f096ad0348c":["1e59c344a45b9502f40ec44f5fe4e20ed2291dbe"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1e59c344a45b9502f40ec44f5fe4e20ed2291dbe":["0ddeeafb97cacc0f0e449e34a246cb6dda2c712b"],"41e5bbad683f7546e96f08ffe8bc50cf447f2586":["135621f3a0670a9394eb563224a3b76cc4dddc0f"],"0e28c49f1fb6215a550fdadcf3805aa629b63ec0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"2725b2d479964ea5aaea0ba4ae2634716f3ec26c":["d638301ad1cfcae567b681b893bc8781f0ee48a5"]},"commit2Childs":{"245b64c37f29b58edef53dfa639676263fe374b6":["2e8d7ba2175f47e280231533f7d3016249cea88b"],"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655":[],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["41e5bbad683f7546e96f08ffe8bc50cf447f2586"],"5cab9a86bd67202d20b6adc463008c8e982b070a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d638301ad1cfcae567b681b893bc8781f0ee48a5":["5cab9a86bd67202d20b6adc463008c8e982b070a","2725b2d479964ea5aaea0ba4ae2634716f3ec26c"],"0ddeeafb97cacc0f0e449e34a246cb6dda2c712b":["d638301ad1cfcae567b681b893bc8781f0ee48a5","1e59c344a45b9502f40ec44f5fe4e20ed2291dbe"],"2e8d7ba2175f47e280231533f7d3016249cea88b":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","0ddeeafb97cacc0f0e449e34a246cb6dda2c712b"],"cac4d5fa6c305b94f6232a70bda07f096ad0348c":["d638301ad1cfcae567b681b893bc8781f0ee48a5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","135621f3a0670a9394eb563224a3b76cc4dddc0f","2e8d7ba2175f47e280231533f7d3016249cea88b","0e28c49f1fb6215a550fdadcf3805aa629b63ec0"],"1e59c344a45b9502f40ec44f5fe4e20ed2291dbe":["cac4d5fa6c305b94f6232a70bda07f096ad0348c"],"41e5bbad683f7546e96f08ffe8bc50cf447f2586":["245b64c37f29b58edef53dfa639676263fe374b6"],"0e28c49f1fb6215a550fdadcf3805aa629b63ec0":["135621f3a0670a9394eb563224a3b76cc4dddc0f"],"2725b2d479964ea5aaea0ba4ae2634716f3ec26c":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}