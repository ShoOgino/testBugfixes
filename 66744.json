{"path":"src/java/org/apache/lucene/index/ConcurrentMergeScheduler#mergeThreadCount().mjava","commits":[{"id":"290c401c31db375e771805c3ba7ac5f64c7370dc","date":1192034795,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/ConcurrentMergeScheduler#mergeThreadCount().mjava","pathOld":"/dev/null","sourceNew":"  private synchronized int mergeThreadCount() {\n    return mergeThreads.size();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["d5f48f93ebe46929b99824596327a9dc6d6130d9"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d5f48f93ebe46929b99824596327a9dc6d6130d9","date":1193648456,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/ConcurrentMergeScheduler#mergeThreadCount().mjava","pathOld":"src/java/org/apache/lucene/index/ConcurrentMergeScheduler#mergeThreadCount().mjava","sourceNew":"  private synchronized int mergeThreadCount() {\n    int count = 0;\n    final int numThreads = mergeThreads.size();\n    for(int i=0;i<numThreads;i++)\n      if (((MergeThread) mergeThreads.get(i)).isAlive())\n        count++;\n    return count;\n  }\n\n","sourceOld":"  private synchronized int mergeThreadCount() {\n    return mergeThreads.size();\n  }\n\n","bugFix":["290c401c31db375e771805c3ba7ac5f64c7370dc"],"bugIntro":["60679157c78fc286ee35471398529a1e5749621c"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4e1ce9be74263e9659aad8a6ee1f213193710b71","date":1256298843,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/ConcurrentMergeScheduler#mergeThreadCount().mjava","pathOld":"src/java/org/apache/lucene/index/ConcurrentMergeScheduler#mergeThreadCount().mjava","sourceNew":"  private synchronized int mergeThreadCount() {\n    int count = 0;\n    final int numThreads = mergeThreads.size();\n    for(int i=0;i<numThreads;i++)\n      if (mergeThreads.get(i).isAlive())\n        count++;\n    return count;\n  }\n\n","sourceOld":"  private synchronized int mergeThreadCount() {\n    int count = 0;\n    final int numThreads = mergeThreads.size();\n    for(int i=0;i<numThreads;i++)\n      if (((MergeThread) mergeThreads.get(i)).isAlive())\n        count++;\n    return count;\n  }\n\n","bugFix":null,"bugIntro":["60679157c78fc286ee35471398529a1e5749621c"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/ConcurrentMergeScheduler#mergeThreadCount().mjava","pathOld":"src/java/org/apache/lucene/index/ConcurrentMergeScheduler#mergeThreadCount().mjava","sourceNew":"  private synchronized int mergeThreadCount() {\n    int count = 0;\n    final int numThreads = mergeThreads.size();\n    for(int i=0;i<numThreads;i++)\n      if (mergeThreads.get(i).isAlive())\n        count++;\n    return count;\n  }\n\n","sourceOld":"  private synchronized int mergeThreadCount() {\n    int count = 0;\n    final int numThreads = mergeThreads.size();\n    for(int i=0;i<numThreads;i++)\n      if (mergeThreads.get(i).isAlive())\n        count++;\n    return count;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"4e1ce9be74263e9659aad8a6ee1f213193710b71":["d5f48f93ebe46929b99824596327a9dc6d6130d9"],"d5f48f93ebe46929b99824596327a9dc6d6130d9":["290c401c31db375e771805c3ba7ac5f64c7370dc"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"290c401c31db375e771805c3ba7ac5f64c7370dc":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["4e1ce9be74263e9659aad8a6ee1f213193710b71"]},"commit2Childs":{"4e1ce9be74263e9659aad8a6ee1f213193710b71":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"d5f48f93ebe46929b99824596327a9dc6d6130d9":["4e1ce9be74263e9659aad8a6ee1f213193710b71"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["290c401c31db375e771805c3ba7ac5f64c7370dc"],"290c401c31db375e771805c3ba7ac5f64c7370dc":["d5f48f93ebe46929b99824596327a9dc6d6130d9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}