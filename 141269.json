{"path":"solr/core/src/test/org/apache/solr/cloud/autoscaling/TestPolicyCloud#after().mjava","commits":[{"id":"4328dc3f7309b4c82d12f9e9420a487a1b9945dd","date":1496650286,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/autoscaling/TestPolicyCloud#after().mjava","pathOld":"/dev/null","sourceNew":"  @After\n  public void after() throws Exception {\n    cluster.deleteAllCollections();\n    cluster.getSolrClient().getZkStateReader().getZkClient().setData(ZkStateReader.SOLR_AUTOSCALING_CONF_PATH,\n        \"{}\".getBytes(StandardCharsets.UTF_8), true);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"74aea047dff7f7c38a2d766827bd20d356f98c6a","date":1496721416,"type":0,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/autoscaling/TestPolicyCloud#after().mjava","pathOld":"/dev/null","sourceNew":"  @After\n  public void after() throws Exception {\n    cluster.deleteAllCollections();\n    cluster.getSolrClient().getZkStateReader().getZkClient().setData(ZkStateReader.SOLR_AUTOSCALING_CONF_PATH,\n        \"{}\".getBytes(StandardCharsets.UTF_8), true);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":0,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/autoscaling/TestPolicyCloud#after().mjava","pathOld":"/dev/null","sourceNew":"  @After\n  public void after() throws Exception {\n    cluster.deleteAllCollections();\n    cluster.getSolrClient().getZkStateReader().getZkClient().setData(ZkStateReader.SOLR_AUTOSCALING_CONF_PATH,\n        \"{}\".getBytes(StandardCharsets.UTF_8), true);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/autoscaling/TestPolicyCloud#after().mjava","pathOld":"/dev/null","sourceNew":"  @After\n  public void after() throws Exception {\n    cluster.deleteAllCollections();\n    cluster.getSolrClient().getZkStateReader().getZkClient().setData(ZkStateReader.SOLR_AUTOSCALING_CONF_PATH,\n        \"{}\".getBytes(StandardCharsets.UTF_8), true);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"067ba8c807b0f23eae8bf41bc27046a87b548134","date":1587570399,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/autoscaling/TestPolicyCloud#after().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/autoscaling/TestPolicyCloud#after().mjava","sourceNew":"  @After\n  public void after() throws Exception {\n    cluster.deleteAllCollections();\n    cluster.getSolrClient().getZkStateReader().getZkClient().setData(ZkStateReader.SOLR_AUTOSCALING_CONF_PATH,\n        \"{}\".getBytes(StandardCharsets.UTF_8), true);\n    // remove default policy\n    String commands =  \"{set-cluster-policy : []}\";\n    cluster.getSolrClient().request(AutoScalingRequest.create(SolrRequest.METHOD.POST, commands));\n  }\n\n","sourceOld":"  @After\n  public void after() throws Exception {\n    cluster.deleteAllCollections();\n    cluster.getSolrClient().getZkStateReader().getZkClient().setData(ZkStateReader.SOLR_AUTOSCALING_CONF_PATH,\n        \"{}\".getBytes(StandardCharsets.UTF_8), true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"108c5dda328bff75f18be6fcc8f4ad96986e4f77","date":1587638068,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/autoscaling/TestPolicyCloud#after().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/autoscaling/TestPolicyCloud#after().mjava","sourceNew":"  @After\n  public void after() throws Exception {\n    cluster.deleteAllCollections();\n    cluster.getSolrClient().getZkStateReader().getZkClient().setData(ZkStateReader.SOLR_AUTOSCALING_CONF_PATH,\n        \"{}\".getBytes(StandardCharsets.UTF_8), true);\n  }\n\n","sourceOld":"  @After\n  public void after() throws Exception {\n    cluster.deleteAllCollections();\n    cluster.getSolrClient().getZkStateReader().getZkClient().setData(ZkStateReader.SOLR_AUTOSCALING_CONF_PATH,\n        \"{}\".getBytes(StandardCharsets.UTF_8), true);\n    // remove default policy\n    String commands =  \"{set-cluster-policy : []}\";\n    cluster.getSolrClient().request(AutoScalingRequest.create(SolrRequest.METHOD.POST, commands));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f504512a03d978990cbff30db0522b354e846db","date":1595247421,"type":4,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/cloud/autoscaling/TestPolicyCloud#after().mjava","sourceNew":null,"sourceOld":"  @After\n  public void after() throws Exception {\n    cluster.deleteAllCollections();\n    cluster.getSolrClient().getZkStateReader().getZkClient().setData(ZkStateReader.SOLR_AUTOSCALING_CONF_PATH,\n        \"{}\".getBytes(StandardCharsets.UTF_8), true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e9017cf144952056066919f1ebc7897ff9bd71b1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","74aea047dff7f7c38a2d766827bd20d356f98c6a"],"3f504512a03d978990cbff30db0522b354e846db":["108c5dda328bff75f18be6fcc8f4ad96986e4f77"],"74aea047dff7f7c38a2d766827bd20d356f98c6a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","4328dc3f7309b4c82d12f9e9420a487a1b9945dd"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"067ba8c807b0f23eae8bf41bc27046a87b548134":["28288370235ed02234a64753cdbf0c6ec096304a"],"108c5dda328bff75f18be6fcc8f4ad96986e4f77":["067ba8c807b0f23eae8bf41bc27046a87b548134"],"28288370235ed02234a64753cdbf0c6ec096304a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","74aea047dff7f7c38a2d766827bd20d356f98c6a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3f504512a03d978990cbff30db0522b354e846db"],"4328dc3f7309b4c82d12f9e9420a487a1b9945dd":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"e9017cf144952056066919f1ebc7897ff9bd71b1":[],"3f504512a03d978990cbff30db0522b354e846db":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"74aea047dff7f7c38a2d766827bd20d356f98c6a":["e9017cf144952056066919f1ebc7897ff9bd71b1","28288370235ed02234a64753cdbf0c6ec096304a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e9017cf144952056066919f1ebc7897ff9bd71b1","74aea047dff7f7c38a2d766827bd20d356f98c6a","28288370235ed02234a64753cdbf0c6ec096304a","4328dc3f7309b4c82d12f9e9420a487a1b9945dd"],"067ba8c807b0f23eae8bf41bc27046a87b548134":["108c5dda328bff75f18be6fcc8f4ad96986e4f77"],"108c5dda328bff75f18be6fcc8f4ad96986e4f77":["3f504512a03d978990cbff30db0522b354e846db"],"28288370235ed02234a64753cdbf0c6ec096304a":["067ba8c807b0f23eae8bf41bc27046a87b548134"],"4328dc3f7309b4c82d12f9e9420a487a1b9945dd":["74aea047dff7f7c38a2d766827bd20d356f98c6a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}