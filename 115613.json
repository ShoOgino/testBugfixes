{"path":"lucene/test-framework/src/java/org/apache/lucene/index/BaseDocValuesFormatTestCase#assertEquals(int,SortedSetDocValues,SortedSetDocValues).mjava","commits":[{"id":"eaa9cc5fd5ad1b5f7be93da05bdbd3ccf4be4bb3","date":1361060670,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BaseDocValuesFormatTestCase#assertEquals(int,SortedSetDocValues,SortedSetDocValues).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/TestDemoDocValue#assertEquals(int,SortedSetDocValues,SortedSetDocValues).mjava","sourceNew":"  private void assertEquals(int maxDoc, SortedSetDocValues expected, SortedSetDocValues actual) throws Exception {\n    // can be null for the segment if no docs actually had any SortedDocValues\n    // in this case FC.getDocTermsOrds returns EMPTY\n    if (actual == null) {\n      assertEquals(SortedSetDocValues.EMPTY, expected);\n      return;\n    }\n    assertEquals(expected.getValueCount(), actual.getValueCount());\n    // compare ord lists\n    for (int i = 0; i < maxDoc; i++) {\n      expected.setDocument(i);\n      actual.setDocument(i);\n      long expectedOrd;\n      while ((expectedOrd = expected.nextOrd()) != NO_MORE_ORDS) {\n        assertEquals(expectedOrd, actual.nextOrd());\n      }\n      assertEquals(NO_MORE_ORDS, actual.nextOrd());\n    }\n    \n    // compare ord dictionary\n    BytesRef expectedBytes = new BytesRef();\n    BytesRef actualBytes = new BytesRef();\n    for (long i = 0; i < expected.getValueCount(); i++) {\n      expected.lookupTerm(expectedBytes);\n      actual.lookupTerm(actualBytes);\n      assertEquals(expectedBytes, actualBytes);\n    }\n  }\n\n","sourceOld":"  private void assertEquals(int maxDoc, SortedSetDocValues expected, SortedSetDocValues actual) throws Exception {\n    // can be null for the segment if no docs actually had any SortedDocValues\n    // in this case FC.getDocTermsOrds returns EMPTY\n    if (actual == null) {\n      assertEquals(SortedSetDocValues.EMPTY, expected);\n      return;\n    }\n    assertEquals(expected.getValueCount(), actual.getValueCount());\n    // compare ord lists\n    for (int i = 0; i < maxDoc; i++) {\n      expected.setDocument(i);\n      actual.setDocument(i);\n      long expectedOrd;\n      while ((expectedOrd = expected.nextOrd()) != NO_MORE_ORDS) {\n        assertEquals(expectedOrd, actual.nextOrd());\n      }\n      assertEquals(NO_MORE_ORDS, actual.nextOrd());\n    }\n    \n    // compare ord dictionary\n    BytesRef expectedBytes = new BytesRef();\n    BytesRef actualBytes = new BytesRef();\n    for (long i = 0; i < expected.getValueCount(); i++) {\n      expected.lookupTerm(expectedBytes);\n      actual.lookupTerm(actualBytes);\n      assertEquals(expectedBytes, actualBytes);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ddbb72a33557d2b5bc22ee95daf3281c43560502","date":1361334582,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BaseDocValuesFormatTestCase#assertEquals(int,SortedSetDocValues,SortedSetDocValues).mjava","pathOld":"/dev/null","sourceNew":"  private void assertEquals(int maxDoc, SortedSetDocValues expected, SortedSetDocValues actual) throws Exception {\n    // can be null for the segment if no docs actually had any SortedDocValues\n    // in this case FC.getDocTermsOrds returns EMPTY\n    if (actual == null) {\n      assertEquals(SortedSetDocValues.EMPTY, expected);\n      return;\n    }\n    assertEquals(expected.getValueCount(), actual.getValueCount());\n    // compare ord lists\n    for (int i = 0; i < maxDoc; i++) {\n      expected.setDocument(i);\n      actual.setDocument(i);\n      long expectedOrd;\n      while ((expectedOrd = expected.nextOrd()) != NO_MORE_ORDS) {\n        assertEquals(expectedOrd, actual.nextOrd());\n      }\n      assertEquals(NO_MORE_ORDS, actual.nextOrd());\n    }\n    \n    // compare ord dictionary\n    BytesRef expectedBytes = new BytesRef();\n    BytesRef actualBytes = new BytesRef();\n    for (long i = 0; i < expected.getValueCount(); i++) {\n      expected.lookupTerm(expectedBytes);\n      actual.lookupTerm(actualBytes);\n      assertEquals(expectedBytes, actualBytes);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"0ad01348544f9eb6ee985c300245013a75addfc6","date":1376095061,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BaseDocValuesFormatTestCase#assertEquals(int,SortedSetDocValues,SortedSetDocValues).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/BaseDocValuesFormatTestCase#assertEquals(int,SortedSetDocValues,SortedSetDocValues).mjava","sourceNew":"  private void assertEquals(int maxDoc, SortedSetDocValues expected, SortedSetDocValues actual) throws Exception {\n    // can be null for the segment if no docs actually had any SortedDocValues\n    // in this case FC.getDocTermsOrds returns EMPTY\n    if (actual == null) {\n      assertEquals(SortedSetDocValues.EMPTY, expected);\n      return;\n    }\n    assertEquals(expected.getValueCount(), actual.getValueCount());\n    // compare ord lists\n    for (int i = 0; i < maxDoc; i++) {\n      expected.setDocument(i);\n      actual.setDocument(i);\n      long expectedOrd;\n      while ((expectedOrd = expected.nextOrd()) != NO_MORE_ORDS) {\n        assertEquals(expectedOrd, actual.nextOrd());\n      }\n      assertEquals(NO_MORE_ORDS, actual.nextOrd());\n    }\n    \n    // compare ord dictionary\n    BytesRef expectedBytes = new BytesRef();\n    BytesRef actualBytes = new BytesRef();\n    for (long i = 0; i < expected.getValueCount(); i++) {\n      expected.lookupTerm(expectedBytes);\n      actual.lookupTerm(actualBytes);\n      assertEquals(expectedBytes, actualBytes);\n    }\n    \n    // compare termsenum\n    assertEquals(expected.getValueCount(), expected.termsEnum(), actual.termsEnum());\n  }\n\n","sourceOld":"  private void assertEquals(int maxDoc, SortedSetDocValues expected, SortedSetDocValues actual) throws Exception {\n    // can be null for the segment if no docs actually had any SortedDocValues\n    // in this case FC.getDocTermsOrds returns EMPTY\n    if (actual == null) {\n      assertEquals(SortedSetDocValues.EMPTY, expected);\n      return;\n    }\n    assertEquals(expected.getValueCount(), actual.getValueCount());\n    // compare ord lists\n    for (int i = 0; i < maxDoc; i++) {\n      expected.setDocument(i);\n      actual.setDocument(i);\n      long expectedOrd;\n      while ((expectedOrd = expected.nextOrd()) != NO_MORE_ORDS) {\n        assertEquals(expectedOrd, actual.nextOrd());\n      }\n      assertEquals(NO_MORE_ORDS, actual.nextOrd());\n    }\n    \n    // compare ord dictionary\n    BytesRef expectedBytes = new BytesRef();\n    BytesRef actualBytes = new BytesRef();\n    for (long i = 0; i < expected.getValueCount(); i++) {\n      expected.lookupTerm(expectedBytes);\n      actual.lookupTerm(actualBytes);\n      assertEquals(expectedBytes, actualBytes);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","date":1376366778,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BaseDocValuesFormatTestCase#assertEquals(int,SortedSetDocValues,SortedSetDocValues).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/BaseDocValuesFormatTestCase#assertEquals(int,SortedSetDocValues,SortedSetDocValues).mjava","sourceNew":"  private void assertEquals(int maxDoc, SortedSetDocValues expected, SortedSetDocValues actual) throws Exception {\n    // can be null for the segment if no docs actually had any SortedDocValues\n    // in this case FC.getDocTermsOrds returns EMPTY\n    if (actual == null) {\n      assertEquals(SortedSetDocValues.EMPTY, expected);\n      return;\n    }\n    assertEquals(expected.getValueCount(), actual.getValueCount());\n    // compare ord lists\n    for (int i = 0; i < maxDoc; i++) {\n      expected.setDocument(i);\n      actual.setDocument(i);\n      long expectedOrd;\n      while ((expectedOrd = expected.nextOrd()) != NO_MORE_ORDS) {\n        assertEquals(expectedOrd, actual.nextOrd());\n      }\n      assertEquals(NO_MORE_ORDS, actual.nextOrd());\n    }\n    \n    // compare ord dictionary\n    BytesRef expectedBytes = new BytesRef();\n    BytesRef actualBytes = new BytesRef();\n    for (long i = 0; i < expected.getValueCount(); i++) {\n      expected.lookupTerm(expectedBytes);\n      actual.lookupTerm(actualBytes);\n      assertEquals(expectedBytes, actualBytes);\n    }\n    \n    // compare termsenum\n    assertEquals(expected.getValueCount(), expected.termsEnum(), actual.termsEnum());\n  }\n\n","sourceOld":"  private void assertEquals(int maxDoc, SortedSetDocValues expected, SortedSetDocValues actual) throws Exception {\n    // can be null for the segment if no docs actually had any SortedDocValues\n    // in this case FC.getDocTermsOrds returns EMPTY\n    if (actual == null) {\n      assertEquals(SortedSetDocValues.EMPTY, expected);\n      return;\n    }\n    assertEquals(expected.getValueCount(), actual.getValueCount());\n    // compare ord lists\n    for (int i = 0; i < maxDoc; i++) {\n      expected.setDocument(i);\n      actual.setDocument(i);\n      long expectedOrd;\n      while ((expectedOrd = expected.nextOrd()) != NO_MORE_ORDS) {\n        assertEquals(expectedOrd, actual.nextOrd());\n      }\n      assertEquals(NO_MORE_ORDS, actual.nextOrd());\n    }\n    \n    // compare ord dictionary\n    BytesRef expectedBytes = new BytesRef();\n    BytesRef actualBytes = new BytesRef();\n    for (long i = 0; i < expected.getValueCount(); i++) {\n      expected.lookupTerm(expectedBytes);\n      actual.lookupTerm(actualBytes);\n      assertEquals(expectedBytes, actualBytes);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8429ddf2214f2bf8abcbb5484fefef6aaf5c417e","date":1397206443,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BaseDocValuesFormatTestCase#assertEquals(int,SortedSetDocValues,SortedSetDocValues).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/BaseDocValuesFormatTestCase#assertEquals(int,SortedSetDocValues,SortedSetDocValues).mjava","sourceNew":"  private void assertEquals(int maxDoc, SortedSetDocValues expected, SortedSetDocValues actual) throws Exception {\n    // can be null for the segment if no docs actually had any SortedDocValues\n    // in this case FC.getDocTermsOrds returns EMPTY\n    if (actual == null) {\n      assertEquals(DocValues.EMPTY_SORTED_SET, expected);\n      return;\n    }\n    assertEquals(expected.getValueCount(), actual.getValueCount());\n    // compare ord lists\n    for (int i = 0; i < maxDoc; i++) {\n      expected.setDocument(i);\n      actual.setDocument(i);\n      long expectedOrd;\n      while ((expectedOrd = expected.nextOrd()) != NO_MORE_ORDS) {\n        assertEquals(expectedOrd, actual.nextOrd());\n      }\n      assertEquals(NO_MORE_ORDS, actual.nextOrd());\n    }\n    \n    // compare ord dictionary\n    BytesRef expectedBytes = new BytesRef();\n    BytesRef actualBytes = new BytesRef();\n    for (long i = 0; i < expected.getValueCount(); i++) {\n      expected.lookupTerm(expectedBytes);\n      actual.lookupTerm(actualBytes);\n      assertEquals(expectedBytes, actualBytes);\n    }\n    \n    // compare termsenum\n    assertEquals(expected.getValueCount(), expected.termsEnum(), actual.termsEnum());\n  }\n\n","sourceOld":"  private void assertEquals(int maxDoc, SortedSetDocValues expected, SortedSetDocValues actual) throws Exception {\n    // can be null for the segment if no docs actually had any SortedDocValues\n    // in this case FC.getDocTermsOrds returns EMPTY\n    if (actual == null) {\n      assertEquals(SortedSetDocValues.EMPTY, expected);\n      return;\n    }\n    assertEquals(expected.getValueCount(), actual.getValueCount());\n    // compare ord lists\n    for (int i = 0; i < maxDoc; i++) {\n      expected.setDocument(i);\n      actual.setDocument(i);\n      long expectedOrd;\n      while ((expectedOrd = expected.nextOrd()) != NO_MORE_ORDS) {\n        assertEquals(expectedOrd, actual.nextOrd());\n      }\n      assertEquals(NO_MORE_ORDS, actual.nextOrd());\n    }\n    \n    // compare ord dictionary\n    BytesRef expectedBytes = new BytesRef();\n    BytesRef actualBytes = new BytesRef();\n    for (long i = 0; i < expected.getValueCount(); i++) {\n      expected.lookupTerm(expectedBytes);\n      actual.lookupTerm(actualBytes);\n      assertEquals(expectedBytes, actualBytes);\n    }\n    \n    // compare termsenum\n    assertEquals(expected.getValueCount(), expected.termsEnum(), actual.termsEnum());\n  }\n\n","bugFix":["2ac70df4ea6e1a73f0f9414138622eb5d6b19b4e"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c","date":1399816179,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/misc/src/test/org/apache/lucene/uninverting/TestFieldCacheVsDocValues#assertEquals(int,SortedSetDocValues,SortedSetDocValues).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/BaseDocValuesFormatTestCase#assertEquals(int,SortedSetDocValues,SortedSetDocValues).mjava","sourceNew":"  private void assertEquals(int maxDoc, SortedSetDocValues expected, SortedSetDocValues actual) throws Exception {\n    // can be null for the segment if no docs actually had any SortedDocValues\n    // in this case FC.getDocTermsOrds returns EMPTY\n    if (actual == null) {\n      assertEquals(DocValues.EMPTY_SORTED_SET, expected);\n      return;\n    }\n    assertEquals(expected.getValueCount(), actual.getValueCount());\n    // compare ord lists\n    for (int i = 0; i < maxDoc; i++) {\n      expected.setDocument(i);\n      actual.setDocument(i);\n      long expectedOrd;\n      while ((expectedOrd = expected.nextOrd()) != NO_MORE_ORDS) {\n        assertEquals(expectedOrd, actual.nextOrd());\n      }\n      assertEquals(NO_MORE_ORDS, actual.nextOrd());\n    }\n    \n    // compare ord dictionary\n    BytesRef expectedBytes = new BytesRef();\n    BytesRef actualBytes = new BytesRef();\n    for (long i = 0; i < expected.getValueCount(); i++) {\n      expected.lookupTerm(expectedBytes);\n      actual.lookupTerm(actualBytes);\n      assertEquals(expectedBytes, actualBytes);\n    }\n    \n    // compare termsenum\n    assertEquals(expected.getValueCount(), expected.termsEnum(), actual.termsEnum());\n  }\n\n","sourceOld":"  private void assertEquals(int maxDoc, SortedSetDocValues expected, SortedSetDocValues actual) throws Exception {\n    // can be null for the segment if no docs actually had any SortedDocValues\n    // in this case FC.getDocTermsOrds returns EMPTY\n    if (actual == null) {\n      assertEquals(DocValues.EMPTY_SORTED_SET, expected);\n      return;\n    }\n    assertEquals(expected.getValueCount(), actual.getValueCount());\n    // compare ord lists\n    for (int i = 0; i < maxDoc; i++) {\n      expected.setDocument(i);\n      actual.setDocument(i);\n      long expectedOrd;\n      while ((expectedOrd = expected.nextOrd()) != NO_MORE_ORDS) {\n        assertEquals(expectedOrd, actual.nextOrd());\n      }\n      assertEquals(NO_MORE_ORDS, actual.nextOrd());\n    }\n    \n    // compare ord dictionary\n    BytesRef expectedBytes = new BytesRef();\n    BytesRef actualBytes = new BytesRef();\n    for (long i = 0; i < expected.getValueCount(); i++) {\n      expected.lookupTerm(expectedBytes);\n      actual.lookupTerm(actualBytes);\n      assertEquals(expectedBytes, actualBytes);\n    }\n    \n    // compare termsenum\n    assertEquals(expected.getValueCount(), expected.termsEnum(), actual.termsEnum());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"93dd449115a9247533e44bab47e8429e5dccbc6d","date":1400258396,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/misc/src/test/org/apache/lucene/uninverting/TestFieldCacheVsDocValues#assertEquals(int,SortedSetDocValues,SortedSetDocValues).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/BaseDocValuesFormatTestCase#assertEquals(int,SortedSetDocValues,SortedSetDocValues).mjava","sourceNew":"  private void assertEquals(int maxDoc, SortedSetDocValues expected, SortedSetDocValues actual) throws Exception {\n    // can be null for the segment if no docs actually had any SortedDocValues\n    // in this case FC.getDocTermsOrds returns EMPTY\n    if (actual == null) {\n      assertEquals(DocValues.EMPTY_SORTED_SET, expected);\n      return;\n    }\n    assertEquals(expected.getValueCount(), actual.getValueCount());\n    // compare ord lists\n    for (int i = 0; i < maxDoc; i++) {\n      expected.setDocument(i);\n      actual.setDocument(i);\n      long expectedOrd;\n      while ((expectedOrd = expected.nextOrd()) != NO_MORE_ORDS) {\n        assertEquals(expectedOrd, actual.nextOrd());\n      }\n      assertEquals(NO_MORE_ORDS, actual.nextOrd());\n    }\n    \n    // compare ord dictionary\n    BytesRef expectedBytes = new BytesRef();\n    BytesRef actualBytes = new BytesRef();\n    for (long i = 0; i < expected.getValueCount(); i++) {\n      expected.lookupTerm(expectedBytes);\n      actual.lookupTerm(actualBytes);\n      assertEquals(expectedBytes, actualBytes);\n    }\n    \n    // compare termsenum\n    assertEquals(expected.getValueCount(), expected.termsEnum(), actual.termsEnum());\n  }\n\n","sourceOld":"  private void assertEquals(int maxDoc, SortedSetDocValues expected, SortedSetDocValues actual) throws Exception {\n    // can be null for the segment if no docs actually had any SortedDocValues\n    // in this case FC.getDocTermsOrds returns EMPTY\n    if (actual == null) {\n      assertEquals(DocValues.EMPTY_SORTED_SET, expected);\n      return;\n    }\n    assertEquals(expected.getValueCount(), actual.getValueCount());\n    // compare ord lists\n    for (int i = 0; i < maxDoc; i++) {\n      expected.setDocument(i);\n      actual.setDocument(i);\n      long expectedOrd;\n      while ((expectedOrd = expected.nextOrd()) != NO_MORE_ORDS) {\n        assertEquals(expectedOrd, actual.nextOrd());\n      }\n      assertEquals(NO_MORE_ORDS, actual.nextOrd());\n    }\n    \n    // compare ord dictionary\n    BytesRef expectedBytes = new BytesRef();\n    BytesRef actualBytes = new BytesRef();\n    for (long i = 0; i < expected.getValueCount(); i++) {\n      expected.lookupTerm(expectedBytes);\n      actual.lookupTerm(actualBytes);\n      assertEquals(expectedBytes, actualBytes);\n    }\n    \n    // compare termsenum\n    assertEquals(expected.getValueCount(), expected.termsEnum(), actual.termsEnum());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"56572ec06f1407c066d6b7399413178b33176cd8","date":1400495675,"type":5,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/misc/src/test/org/apache/lucene/uninverting/TestFieldCacheVsDocValues#assertEquals(int,SortedSetDocValues,SortedSetDocValues).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/BaseDocValuesFormatTestCase#assertEquals(int,SortedSetDocValues,SortedSetDocValues).mjava","sourceNew":"  private void assertEquals(int maxDoc, SortedSetDocValues expected, SortedSetDocValues actual) throws Exception {\n    // can be null for the segment if no docs actually had any SortedDocValues\n    // in this case FC.getDocTermsOrds returns EMPTY\n    if (actual == null) {\n      assertEquals(DocValues.EMPTY_SORTED_SET, expected);\n      return;\n    }\n    assertEquals(expected.getValueCount(), actual.getValueCount());\n    // compare ord lists\n    for (int i = 0; i < maxDoc; i++) {\n      expected.setDocument(i);\n      actual.setDocument(i);\n      long expectedOrd;\n      while ((expectedOrd = expected.nextOrd()) != NO_MORE_ORDS) {\n        assertEquals(expectedOrd, actual.nextOrd());\n      }\n      assertEquals(NO_MORE_ORDS, actual.nextOrd());\n    }\n    \n    // compare ord dictionary\n    BytesRef expectedBytes = new BytesRef();\n    BytesRef actualBytes = new BytesRef();\n    for (long i = 0; i < expected.getValueCount(); i++) {\n      expected.lookupTerm(expectedBytes);\n      actual.lookupTerm(actualBytes);\n      assertEquals(expectedBytes, actualBytes);\n    }\n    \n    // compare termsenum\n    assertEquals(expected.getValueCount(), expected.termsEnum(), actual.termsEnum());\n  }\n\n","sourceOld":"  private void assertEquals(int maxDoc, SortedSetDocValues expected, SortedSetDocValues actual) throws Exception {\n    // can be null for the segment if no docs actually had any SortedDocValues\n    // in this case FC.getDocTermsOrds returns EMPTY\n    if (actual == null) {\n      assertEquals(DocValues.EMPTY_SORTED_SET, expected);\n      return;\n    }\n    assertEquals(expected.getValueCount(), actual.getValueCount());\n    // compare ord lists\n    for (int i = 0; i < maxDoc; i++) {\n      expected.setDocument(i);\n      actual.setDocument(i);\n      long expectedOrd;\n      while ((expectedOrd = expected.nextOrd()) != NO_MORE_ORDS) {\n        assertEquals(expectedOrd, actual.nextOrd());\n      }\n      assertEquals(NO_MORE_ORDS, actual.nextOrd());\n    }\n    \n    // compare ord dictionary\n    BytesRef expectedBytes = new BytesRef();\n    BytesRef actualBytes = new BytesRef();\n    for (long i = 0; i < expected.getValueCount(); i++) {\n      expected.lookupTerm(expectedBytes);\n      actual.lookupTerm(actualBytes);\n      assertEquals(expectedBytes, actualBytes);\n    }\n    \n    // compare termsenum\n    assertEquals(expected.getValueCount(), expected.termsEnum(), actual.termsEnum());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"93dd449115a9247533e44bab47e8429e5dccbc6d":["8429ddf2214f2bf8abcbb5484fefef6aaf5c417e","b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":["ddbb72a33557d2b5bc22ee95daf3281c43560502"],"b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c":["8429ddf2214f2bf8abcbb5484fefef6aaf5c417e"],"0ad01348544f9eb6ee985c300245013a75addfc6":["ddbb72a33557d2b5bc22ee95daf3281c43560502"],"ddbb72a33557d2b5bc22ee95daf3281c43560502":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","eaa9cc5fd5ad1b5f7be93da05bdbd3ccf4be4bb3"],"eaa9cc5fd5ad1b5f7be93da05bdbd3ccf4be4bb3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"56572ec06f1407c066d6b7399413178b33176cd8":["8429ddf2214f2bf8abcbb5484fefef6aaf5c417e","93dd449115a9247533e44bab47e8429e5dccbc6d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["93dd449115a9247533e44bab47e8429e5dccbc6d"],"8429ddf2214f2bf8abcbb5484fefef6aaf5c417e":["0ad01348544f9eb6ee985c300245013a75addfc6"]},"commit2Childs":{"93dd449115a9247533e44bab47e8429e5dccbc6d":["56572ec06f1407c066d6b7399413178b33176cd8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ddbb72a33557d2b5bc22ee95daf3281c43560502","eaa9cc5fd5ad1b5f7be93da05bdbd3ccf4be4bb3"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":[],"b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c":["93dd449115a9247533e44bab47e8429e5dccbc6d"],"0ad01348544f9eb6ee985c300245013a75addfc6":["8429ddf2214f2bf8abcbb5484fefef6aaf5c417e"],"ddbb72a33557d2b5bc22ee95daf3281c43560502":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","0ad01348544f9eb6ee985c300245013a75addfc6"],"eaa9cc5fd5ad1b5f7be93da05bdbd3ccf4be4bb3":["ddbb72a33557d2b5bc22ee95daf3281c43560502"],"56572ec06f1407c066d6b7399413178b33176cd8":[],"8429ddf2214f2bf8abcbb5484fefef6aaf5c417e":["93dd449115a9247533e44bab47e8429e5dccbc6d","b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c","56572ec06f1407c066d6b7399413178b33176cd8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","56572ec06f1407c066d6b7399413178b33176cd8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}