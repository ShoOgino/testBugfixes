{"path":"contrib/gdata-server/src/core/java/org/apache/lucene/gdata/storage/lucenestorage/StorageModifier#StorageModifier(StorageCoreController,IndexModifier,StorageBuffer,int,int).mjava","commits":[{"id":"5824af871ba6863399636aa5989bfc0ef2ea448c","date":1166013128,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/gdata-server/src/core/java/org/apache/lucene/gdata/storage/lucenestorage/StorageModifier#StorageModifier(StorageCoreController,IndexModifier,StorageBuffer,int,int).mjava","pathOld":"contrib/gdata-server/src/java/org/apache/lucene/gdata/storage/lucenestorage/StorageModifier#StorageModifier(StorageCoreController,IndexModifier,StorageBuffer,int,int).mjava","sourceNew":"    /**\n     * Creates a new StorageModifier\n     * \n     * @param controller -\n     *            the registered StorageController\n     * @param modifier -\n     *            the IndexModifier\n     * @param buffer -\n     *            the StorageBuffer\n     * @param persitsFactor -\n     *            the factor when the changes will be persisted to the storage\n     *            index\n     * @param optimizeInterval -\n     *            after how many storage operations the index will be optimized\n     */\n    protected StorageModifier(final StorageCoreController controller,\n            final IndexModifier modifier, final StorageBuffer buffer,\n            int persitsFactor, int optimizeInterval) {\n        this.deletedDocumentQueue = new LinkedList<Term>();\n        this.deletedForUpdateDocumentQueue = new LinkedList<Term>();\n        this.documentMap = new HashMap<String, Document>(persitsFactor);\n        this.forceWriteDocuments = new ArrayList<Document>(5);\n        this.forceWriteTerms = new ArrayList<Term>(5);\n        this.buffer = buffer;\n        this.controller = controller;\n\n        this.persistFactor = persitsFactor > 0 ? persitsFactor\n                : DEFAULT_PERSIST_FACTOR;\n        this.modifier = modifier;\n        this.optimizeInterval = optimizeInterval < DEFAULT_OPTIMIZE_INTERVAL ? DEFAULT_OPTIMIZE_INTERVAL\n                : optimizeInterval;\n\n    }\n\n","sourceOld":"    /**\n     * Creates a new StorageModifier\n     * \n     * @param controller -\n     *            the registered StorageController\n     * @param modifier -\n     *            the IndexModifier\n     * @param buffer -\n     *            the StorageBuffer\n     * @param persitsFactor -\n     *            the factor when the changes will be persisted to the storage\n     *            index\n     * @param optimizeInterval -\n     *            after how many storage operations the index will be optimized\n     */\n    protected StorageModifier(final StorageCoreController controller,\n            final IndexModifier modifier, final StorageBuffer buffer,\n            int persitsFactor, int optimizeInterval) {\n        this.deletedDocumentQueue = new LinkedList<Term>();\n        this.deletedForUpdateDocumentQueue = new LinkedList<Term>();\n        this.documentMap = new HashMap<String, Document>(persitsFactor);\n        this.forceWriteDocuments = new ArrayList<Document>(5);\n        this.forceWriteTerms = new ArrayList<Term>(5);\n        this.buffer = buffer;\n        this.controller = controller;\n\n        this.persistFactor = persitsFactor > 0 ? persitsFactor\n                : DEFAULT_PERSIST_FACTOR;\n        this.modifier = modifier;\n        this.optimizeInterval = optimizeInterval < DEFAULT_OPTIMIZE_INTERVAL ? DEFAULT_OPTIMIZE_INTERVAL\n                : optimizeInterval;\n\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe","date":1166036663,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/gdata-server/src/core/src/java/org/apache/lucene/gdata/storage/lucenestorage/StorageModifier#StorageModifier(StorageCoreController,IndexModifier,StorageBuffer,int,int).mjava","pathOld":"contrib/gdata-server/src/core/java/org/apache/lucene/gdata/storage/lucenestorage/StorageModifier#StorageModifier(StorageCoreController,IndexModifier,StorageBuffer,int,int).mjava","sourceNew":"    /**\n     * Creates a new StorageModifier\n     * \n     * @param controller -\n     *            the registered StorageController\n     * @param modifier -\n     *            the IndexModifier\n     * @param buffer -\n     *            the StorageBuffer\n     * @param persitsFactor -\n     *            the factor when the changes will be persisted to the storage\n     *            index\n     * @param optimizeInterval -\n     *            after how many storage operations the index will be optimized\n     */\n    protected StorageModifier(final StorageCoreController controller,\n            final IndexModifier modifier, final StorageBuffer buffer,\n            int persitsFactor, int optimizeInterval) {\n        this.deletedDocumentQueue = new LinkedList<Term>();\n        this.deletedForUpdateDocumentQueue = new LinkedList<Term>();\n        this.documentMap = new HashMap<String, Document>(persitsFactor);\n        this.forceWriteDocuments = new ArrayList<Document>(5);\n        this.forceWriteTerms = new ArrayList<Term>(5);\n        this.buffer = buffer;\n        this.controller = controller;\n\n        this.persistFactor = persitsFactor > 0 ? persitsFactor\n                : DEFAULT_PERSIST_FACTOR;\n        this.modifier = modifier;\n        this.optimizeInterval = optimizeInterval < DEFAULT_OPTIMIZE_INTERVAL ? DEFAULT_OPTIMIZE_INTERVAL\n                : optimizeInterval;\n\n    }\n\n","sourceOld":"    /**\n     * Creates a new StorageModifier\n     * \n     * @param controller -\n     *            the registered StorageController\n     * @param modifier -\n     *            the IndexModifier\n     * @param buffer -\n     *            the StorageBuffer\n     * @param persitsFactor -\n     *            the factor when the changes will be persisted to the storage\n     *            index\n     * @param optimizeInterval -\n     *            after how many storage operations the index will be optimized\n     */\n    protected StorageModifier(final StorageCoreController controller,\n            final IndexModifier modifier, final StorageBuffer buffer,\n            int persitsFactor, int optimizeInterval) {\n        this.deletedDocumentQueue = new LinkedList<Term>();\n        this.deletedForUpdateDocumentQueue = new LinkedList<Term>();\n        this.documentMap = new HashMap<String, Document>(persitsFactor);\n        this.forceWriteDocuments = new ArrayList<Document>(5);\n        this.forceWriteTerms = new ArrayList<Term>(5);\n        this.buffer = buffer;\n        this.controller = controller;\n\n        this.persistFactor = persitsFactor > 0 ? persitsFactor\n                : DEFAULT_PERSIST_FACTOR;\n        this.modifier = modifier;\n        this.optimizeInterval = optimizeInterval < DEFAULT_OPTIMIZE_INTERVAL ? DEFAULT_OPTIMIZE_INTERVAL\n                : optimizeInterval;\n\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe":["5824af871ba6863399636aa5989bfc0ef2ea448c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5824af871ba6863399636aa5989bfc0ef2ea448c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe"]},"commit2Childs":{"4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5824af871ba6863399636aa5989bfc0ef2ea448c"],"5824af871ba6863399636aa5989bfc0ef2ea448c":["4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}