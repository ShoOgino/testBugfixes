{"path":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionTest#testMultiCollection().mjava","commits":[{"id":"5a209db4770770843a101e5dfe46086a63507fd3","date":1544624168,"type":0,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionTest#testMultiCollection().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testMultiCollection() throws Exception {\n\n    CollectionAdminRequest.createCollection(\"collection2\", \"conf\", 2, 1).process(cluster.getSolrClient());\n    cluster.waitForActiveCollection(\"collection2\", 2, 2);\n\n    new UpdateRequest()\n        .add(id, \"0\", \"a_s\", \"hello\", \"a_i\", \"0\", \"a_f\", \"0\", \"s_multi\", \"aaaa\", \"test_dt\", getDateString(\"2016\", \"5\", \"1\"), \"i_multi\", \"4\", \"i_multi\", \"7\")\n        .add(id, \"2\", \"a_s\", \"hello\", \"a_i\", \"2\", \"a_f\", \"0\", \"s_multi\", \"aaaa1\", \"test_dt\", getDateString(\"2016\", \"5\", \"1\"), \"i_multi\", \"44\", \"i_multi\", \"77\")\n        .add(id, \"3\", \"a_s\", \"hello\", \"a_i\", \"3\", \"a_f\", \"3\", \"s_multi\", \"aaaa2\", \"test_dt\", getDateString(\"2016\", \"5\", \"1\"), \"i_multi\", \"444\", \"i_multi\", \"777\")\n        .add(id, \"4\", \"a_s\", \"hello\", \"a_i\", \"4\", \"a_f\", \"4\", \"s_multi\", \"aaaa3\", \"test_dt\", getDateString(\"2016\", \"5\", \"1\"), \"i_multi\", \"4444\", \"i_multi\", \"7777\")\n        .add(id, \"1\", \"a_s\", \"hello\", \"a_i\", \"1\", \"a_f\", \"1\", \"s_multi\", \"aaaa4\", \"test_dt\", getDateString(\"2016\", \"5\", \"1\"), \"i_multi\", \"44444\", \"i_multi\", \"77777\")\n        .commit(cluster.getSolrClient(), \"collection1\");\n\n    new UpdateRequest()\n        .add(id, \"10\", \"a_s\", \"hello\", \"a_i\", \"10\", \"a_f\", \"0\", \"s_multi\", \"aaaa\", \"test_dt\", getDateString(\"2016\", \"5\", \"1\"), \"i_multi\", \"4\", \"i_multi\", \"7\")\n        .add(id, \"12\", \"a_s\", \"hello\", \"a_i\", \"12\", \"a_f\", \"0\", \"s_multi\", \"aaaa1\", \"test_dt\", getDateString(\"2016\", \"5\", \"1\"), \"i_multi\", \"44\", \"i_multi\", \"77\")\n        .add(id, \"13\", \"a_s\", \"hello\", \"a_i\", \"13\", \"a_f\", \"3\", \"s_multi\", \"aaaa2\", \"test_dt\", getDateString(\"2016\", \"5\", \"1\"),  \"i_multi\", \"444\", \"i_multi\", \"777\")\n        .add(id, \"14\", \"a_s\", \"hello\", \"a_i\", \"14\", \"a_f\", \"4\", \"s_multi\", \"aaaa3\", \"test_dt\", getDateString(\"2016\", \"5\", \"1\"), \"i_multi\", \"4444\", \"i_multi\", \"7777\")\n        .add(id, \"11\", \"a_s\", \"hello\", \"a_i\", \"11\", \"a_f\", \"1\", \"s_multi\", \"aaaa4\", \"test_dt\", getDateString(\"2016\", \"5\", \"1\"), \"i_multi\", \"44444\", \"i_multi\", \"77777\")\n        .commit(cluster.getSolrClient(), \"collection2\");\n\n\n    List<Tuple> tuples;\n    StreamContext streamContext = new StreamContext();\n    SolrClientCache solrClientCache = new SolrClientCache();\n    streamContext.setSolrClientCache(solrClientCache);\n    List<String> shardUrls = TupleStream.getShards(cluster.getZkServer().getZkAddress(), COLLECTIONORALIAS, streamContext);\n\n    try {\n      StringBuilder buf = new StringBuilder();\n      for (String shardUrl : shardUrls) {\n        if (buf.length() > 0) {\n          buf.append(\",\");\n        }\n        buf.append(shardUrl);\n      }\n\n      ModifiableSolrParams solrParams = new ModifiableSolrParams();\n      solrParams.add(\"qt\", \"/stream\");\n      solrParams.add(\"expr\", \"search(\\\"collection1, collection2\\\", q=\\\"*:*\\\", fl=\\\"id, a_i\\\", rows=50, sort=\\\"a_i asc\\\")\");\n      SolrStream solrStream = new SolrStream(shardUrls.get(0), solrParams);\n      solrStream.setStreamContext(streamContext);\n      tuples = getTuples(solrStream);\n      assert (tuples.size() == 10);\n      assertOrder(tuples, 0, 1, 2, 3, 4,10,11,12,13,14);\n\n      //Test with export handler, different code path.\n\n      solrParams = new ModifiableSolrParams();\n      solrParams.add(\"qt\", \"/stream\");\n      solrParams.add(\"expr\", \"search(\\\"collection1, collection2\\\", q=\\\"*:*\\\", fl=\\\"id, a_i\\\", sort=\\\"a_i asc\\\", qt=\\\"/export\\\")\");\n      solrStream = new SolrStream(shardUrls.get(0), solrParams);\n      solrStream.setStreamContext(streamContext);\n      tuples = getTuples(solrStream);\n      assert (tuples.size() == 10);\n      assertOrder(tuples, 0, 1, 2, 3, 4,10,11,12,13,14);\n\n\n      solrParams = new ModifiableSolrParams();\n      solrParams.add(\"qt\", \"/stream\");\n      solrParams.add(\"expr\", \"facet(\\\"collection1, collection2\\\", q=\\\"*:*\\\", buckets=\\\"a_s\\\", bucketSorts=\\\"count(*) asc\\\", count(*))\");\n      solrStream = new SolrStream(shardUrls.get(0), solrParams);\n      solrStream.setStreamContext(streamContext);\n      tuples = getTuples(solrStream);\n      assert (tuples.size() == 1);\n      Tuple tuple = tuples.get(0);\n      assertEquals(tuple.getString(\"a_s\"), \"hello\");\n      assertEquals(tuple.getLong(\"count(*)\").longValue(), 10);\n\n      String expr = \"timeseries(\\\"collection1, collection2\\\", q=\\\"*:*\\\", \" +\n              \"start=\\\"2016-01-01T01:00:00.000Z\\\", \" +\n              \"end=\\\"2016-12-01T01:00:00.000Z\\\", \" +\n              \"gap=\\\"+1YEAR\\\", \" +\n              \"field=\\\"test_dt\\\", \" +\n              \"format=\\\"yyyy\\\",\"+\n              \"count(*))\";\n\n      solrParams = new ModifiableSolrParams();\n      solrParams.add(\"qt\", \"/stream\");\n      solrParams.add(\"expr\", expr);\n      solrStream = new SolrStream(shardUrls.get(0), solrParams);\n      solrStream.setStreamContext(streamContext);\n      tuples = getTuples(solrStream);\n      assert (tuples.size() == 1);\n      tuple = tuples.get(0);\n      assertEquals(tuple.getString(\"test_dt\"), \"2016\");\n      assertEquals(tuple.getLong(\"count(*)\").longValue(), 10);\n\n      //Test parallel\n\n      solrParams = new ModifiableSolrParams();\n      solrParams.add(\"qt\", \"/stream\");\n      solrParams.add(\"expr\", \"parallel(collection1, sort=\\\"a_i asc\\\", workers=2, search(\\\"collection1, collection2\\\", q=\\\"*:*\\\", fl=\\\"id, a_i\\\", sort=\\\"a_i asc\\\", qt=\\\"/export\\\", partitionKeys=\\\"a_s\\\"))\");\n      solrStream = new SolrStream(shardUrls.get(0), solrParams);\n      solrStream.setStreamContext(streamContext);\n      tuples = getTuples(solrStream);\n      assert (tuples.size() == 10);\n      assertOrder(tuples, 0, 1, 2, 3, 4,10,11,12,13,14);\n\n    } finally {\n      CollectionAdminRequest.deleteCollection(\"collection2\").process(cluster.getSolrClient());\n      solrClientCache.close();\n    }\n\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5a209db4770770843a101e5dfe46086a63507fd3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5a209db4770770843a101e5dfe46086a63507fd3"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5a209db4770770843a101e5dfe46086a63507fd3"],"5a209db4770770843a101e5dfe46086a63507fd3":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}