{"path":"lucene/core/src/java/org/apache/lucene/store/Directory#copy(Directory,String,String,IOContext).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/store/Directory#copy(Directory,String,String,IOContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/store/Directory#copy(Directory,String,String,IOContext).mjava","sourceNew":"  /**\n   * Copies the file <i>src</i> to {@link Directory} <i>to</i> under the new\n   * file name <i>dest</i>.\n   * <p>\n   * If you want to copy the entire source directory to the destination one, you\n   * can do so like this:\n   * \n   * <pre>\n   * Directory to; // the directory to copy to\n   * for (String file : dir.listAll()) {\n   *   dir.copy(to, file, newFile); // newFile can be either file, or a new name\n   * }\n   * </pre>\n   * <p>\n   * <b>NOTE:</b> this method does not check whether <i>dest<i> exist and will\n   * overwrite it if it does.\n   */\n  public void copy(Directory to, String src, String dest, IOContext context) throws IOException {\n    IndexOutput os = null;\n    IndexInput is = null;\n    IOException priorException = null;\n    try {\n      os = to.createOutput(dest, context);\n      is = openInput(src, context);\n      is.copyBytes(os, is.length());\n    } catch (IOException ioe) {\n      priorException = ioe;\n    } finally {\n      IOUtils.closeWhileHandlingException(priorException, os, is);\n    }\n  }\n\n","sourceOld":"  /**\n   * Copies the file <i>src</i> to {@link Directory} <i>to</i> under the new\n   * file name <i>dest</i>.\n   * <p>\n   * If you want to copy the entire source directory to the destination one, you\n   * can do so like this:\n   * \n   * <pre>\n   * Directory to; // the directory to copy to\n   * for (String file : dir.listAll()) {\n   *   dir.copy(to, file, newFile); // newFile can be either file, or a new name\n   * }\n   * </pre>\n   * <p>\n   * <b>NOTE:</b> this method does not check whether <i>dest<i> exist and will\n   * overwrite it if it does.\n   */\n  public void copy(Directory to, String src, String dest, IOContext context) throws IOException {\n    IndexOutput os = null;\n    IndexInput is = null;\n    IOException priorException = null;\n    try {\n      os = to.createOutput(dest, context);\n      is = openInput(src, context);\n      is.copyBytes(os, is.length());\n    } catch (IOException ioe) {\n      priorException = ioe;\n    } finally {\n      IOUtils.closeWhileHandlingException(priorException, os, is);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"45cf1d94fcb652df755491e6ec0390e70031c9d0","date":1346155278,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/store/Directory#copy(Directory,String,String,IOContext).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/store/Directory#copy(Directory,String,String,IOContext).mjava","sourceNew":"  /**\n   * Copies the file <i>src</i> to {@link Directory} <i>to</i> under the new\n   * file name <i>dest</i>.\n   * <p>\n   * If you want to copy the entire source directory to the destination one, you\n   * can do so like this:\n   * \n   * <pre>\n   * Directory to; // the directory to copy to\n   * for (String file : dir.listAll()) {\n   *   dir.copy(to, file, newFile); // newFile can be either file, or a new name\n   * }\n   * </pre>\n   * <p>\n   * <b>NOTE:</b> this method does not check whether <i>dest</i> exist and will\n   * overwrite it if it does.\n   */\n  public void copy(Directory to, String src, String dest, IOContext context) throws IOException {\n    IndexOutput os = null;\n    IndexInput is = null;\n    IOException priorException = null;\n    try {\n      os = to.createOutput(dest, context);\n      is = openInput(src, context);\n      is.copyBytes(os, is.length());\n    } catch (IOException ioe) {\n      priorException = ioe;\n    } finally {\n      IOUtils.closeWhileHandlingException(priorException, os, is);\n    }\n  }\n\n","sourceOld":"  /**\n   * Copies the file <i>src</i> to {@link Directory} <i>to</i> under the new\n   * file name <i>dest</i>.\n   * <p>\n   * If you want to copy the entire source directory to the destination one, you\n   * can do so like this:\n   * \n   * <pre>\n   * Directory to; // the directory to copy to\n   * for (String file : dir.listAll()) {\n   *   dir.copy(to, file, newFile); // newFile can be either file, or a new name\n   * }\n   * </pre>\n   * <p>\n   * <b>NOTE:</b> this method does not check whether <i>dest<i> exist and will\n   * overwrite it if it does.\n   */\n  public void copy(Directory to, String src, String dest, IOContext context) throws IOException {\n    IndexOutput os = null;\n    IndexInput is = null;\n    IOException priorException = null;\n    try {\n      os = to.createOutput(dest, context);\n      is = openInput(src, context);\n      is.copyBytes(os, is.length());\n    } catch (IOException ioe) {\n      priorException = ioe;\n    } finally {\n      IOUtils.closeWhileHandlingException(priorException, os, is);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"05a14b2611ead08655a2b2bdc61632eb31316e57","date":1346366621,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/store/Directory#copy(Directory,String,String,IOContext).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/store/Directory#copy(Directory,String,String,IOContext).mjava","sourceNew":"  /**\n   * Copies the file <i>src</i> to {@link Directory} <i>to</i> under the new\n   * file name <i>dest</i>.\n   * <p>\n   * If you want to copy the entire source directory to the destination one, you\n   * can do so like this:\n   * \n   * <pre>\n   * Directory to; // the directory to copy to\n   * for (String file : dir.listAll()) {\n   *   dir.copy(to, file, newFile); // newFile can be either file, or a new name\n   * }\n   * </pre>\n   * <p>\n   * <b>NOTE:</b> this method does not check whether <i>dest</i> exist and will\n   * overwrite it if it does.\n   */\n  public void copy(Directory to, String src, String dest, IOContext context) throws IOException {\n    IndexOutput os = null;\n    IndexInput is = null;\n    IOException priorException = null;\n    try {\n      os = to.createOutput(dest, context);\n      is = openInput(src, context);\n      is.copyBytes(os, is.length());\n    } catch (IOException ioe) {\n      priorException = ioe;\n    } finally {\n      IOUtils.closeWhileHandlingException(priorException, os, is);\n    }\n  }\n\n","sourceOld":"  /**\n   * Copies the file <i>src</i> to {@link Directory} <i>to</i> under the new\n   * file name <i>dest</i>.\n   * <p>\n   * If you want to copy the entire source directory to the destination one, you\n   * can do so like this:\n   * \n   * <pre>\n   * Directory to; // the directory to copy to\n   * for (String file : dir.listAll()) {\n   *   dir.copy(to, file, newFile); // newFile can be either file, or a new name\n   * }\n   * </pre>\n   * <p>\n   * <b>NOTE:</b> this method does not check whether <i>dest<i> exist and will\n   * overwrite it if it does.\n   */\n  public void copy(Directory to, String src, String dest, IOContext context) throws IOException {\n    IndexOutput os = null;\n    IndexInput is = null;\n    IOException priorException = null;\n    try {\n      os = to.createOutput(dest, context);\n      is = openInput(src, context);\n      is.copyBytes(os, is.length());\n    } catch (IOException ioe) {\n      priorException = ioe;\n    } finally {\n      IOUtils.closeWhileHandlingException(priorException, os, is);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"66ad5d52334c6be735b490059924589a69b97bd6","date":1347452151,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/store/Directory#copy(Directory,String,String,IOContext).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/store/Directory#copy(Directory,String,String,IOContext).mjava","sourceNew":"  /**\n   * Copies the file <i>src</i> to {@link Directory} <i>to</i> under the new\n   * file name <i>dest</i>.\n   * <p>\n   * If you want to copy the entire source directory to the destination one, you\n   * can do so like this:\n   * \n   * <pre>\n   * Directory to; // the directory to copy to\n   * for (String file : dir.listAll()) {\n   *   dir.copy(to, file, newFile); // newFile can be either file, or a new name\n   * }\n   * </pre>\n   * <p>\n   * <b>NOTE:</b> this method does not check whether <i>dest</i> exist and will\n   * overwrite it if it does.\n   */\n  public void copy(Directory to, String src, String dest, IOContext context) throws IOException {\n    IndexOutput os = null;\n    IndexInput is = null;\n    IOException priorException = null;\n    try {\n      os = to.createOutput(dest, context);\n      is = openInput(src, context);\n      os.copyBytes(is, is.length());\n    } catch (IOException ioe) {\n      priorException = ioe;\n    } finally {\n      IOUtils.closeWhileHandlingException(priorException, os, is);\n    }\n  }\n\n","sourceOld":"  /**\n   * Copies the file <i>src</i> to {@link Directory} <i>to</i> under the new\n   * file name <i>dest</i>.\n   * <p>\n   * If you want to copy the entire source directory to the destination one, you\n   * can do so like this:\n   * \n   * <pre>\n   * Directory to; // the directory to copy to\n   * for (String file : dir.listAll()) {\n   *   dir.copy(to, file, newFile); // newFile can be either file, or a new name\n   * }\n   * </pre>\n   * <p>\n   * <b>NOTE:</b> this method does not check whether <i>dest</i> exist and will\n   * overwrite it if it does.\n   */\n  public void copy(Directory to, String src, String dest, IOContext context) throws IOException {\n    IndexOutput os = null;\n    IndexInput is = null;\n    IOException priorException = null;\n    try {\n      os = to.createOutput(dest, context);\n      is = openInput(src, context);\n      is.copyBytes(os, is.length());\n    } catch (IOException ioe) {\n      priorException = ioe;\n    } finally {\n      IOUtils.closeWhileHandlingException(priorException, os, is);\n    }\n  }\n\n","bugFix":["d05b801583d7568b68b06c67b22136d2a3b3e3bb"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8471c0f357621e859602d44e1af230581b739319","date":1347468766,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/store/Directory#copy(Directory,String,String,IOContext).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/store/Directory#copy(Directory,String,String,IOContext).mjava","sourceNew":"  /**\n   * Copies the file <i>src</i> to {@link Directory} <i>to</i> under the new\n   * file name <i>dest</i>.\n   * <p>\n   * If you want to copy the entire source directory to the destination one, you\n   * can do so like this:\n   * \n   * <pre class=\"prettyprint\">\n   * Directory to; // the directory to copy to\n   * for (String file : dir.listAll()) {\n   *   dir.copy(to, file, newFile); // newFile can be either file, or a new name\n   * }\n   * </pre>\n   * <p>\n   * <b>NOTE:</b> this method does not check whether <i>dest</i> exist and will\n   * overwrite it if it does.\n   */\n  public void copy(Directory to, String src, String dest, IOContext context) throws IOException {\n    IndexOutput os = null;\n    IndexInput is = null;\n    IOException priorException = null;\n    try {\n      os = to.createOutput(dest, context);\n      is = openInput(src, context);\n      os.copyBytes(is, is.length());\n    } catch (IOException ioe) {\n      priorException = ioe;\n    } finally {\n      IOUtils.closeWhileHandlingException(priorException, os, is);\n    }\n  }\n\n","sourceOld":"  /**\n   * Copies the file <i>src</i> to {@link Directory} <i>to</i> under the new\n   * file name <i>dest</i>.\n   * <p>\n   * If you want to copy the entire source directory to the destination one, you\n   * can do so like this:\n   * \n   * <pre>\n   * Directory to; // the directory to copy to\n   * for (String file : dir.listAll()) {\n   *   dir.copy(to, file, newFile); // newFile can be either file, or a new name\n   * }\n   * </pre>\n   * <p>\n   * <b>NOTE:</b> this method does not check whether <i>dest</i> exist and will\n   * overwrite it if it does.\n   */\n  public void copy(Directory to, String src, String dest, IOContext context) throws IOException {\n    IndexOutput os = null;\n    IndexInput is = null;\n    IOException priorException = null;\n    try {\n      os = to.createOutput(dest, context);\n      is = openInput(src, context);\n      os.copyBytes(is, is.length());\n    } catch (IOException ioe) {\n      priorException = ioe;\n    } finally {\n      IOUtils.closeWhileHandlingException(priorException, os, is);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9eae2a56dc810a17cf807d831f720dec931a03de","date":1349262073,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/store/Directory#copy(Directory,String,String,IOContext).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/store/Directory#copy(Directory,String,String,IOContext).mjava","sourceNew":"  /**\n   * Copies the file <i>src</i> to {@link Directory} <i>to</i> under the new\n   * file name <i>dest</i>.\n   * <p>\n   * If you want to copy the entire source directory to the destination one, you\n   * can do so like this:\n   * \n   * <pre class=\"prettyprint\">\n   * Directory to; // the directory to copy to\n   * for (String file : dir.listAll()) {\n   *   dir.copy(to, file, newFile); // newFile can be either file, or a new name\n   * }\n   * </pre>\n   * <p>\n   * <b>NOTE:</b> this method does not check whether <i>dest</i> exist and will\n   * overwrite it if it does.\n   */\n  public void copy(Directory to, String src, String dest, IOContext context) throws IOException {\n    IndexOutput os = null;\n    IndexInput is = null;\n    IOException priorException = null;\n    try {\n      os = to.createOutput(dest, context);\n      is = openInput(src, context);\n      os.copyBytes(is, is.length());\n    } catch (IOException ioe) {\n      priorException = ioe;\n    } finally {\n      boolean success = false;\n      try {\n        IOUtils.closeWhileHandlingException(priorException, os, is);\n        success = true;\n      } finally {\n        if (!success) {\n          try {\n            to.deleteFile(dest);\n          } catch (Throwable t) {\n          }\n        }\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * Copies the file <i>src</i> to {@link Directory} <i>to</i> under the new\n   * file name <i>dest</i>.\n   * <p>\n   * If you want to copy the entire source directory to the destination one, you\n   * can do so like this:\n   * \n   * <pre class=\"prettyprint\">\n   * Directory to; // the directory to copy to\n   * for (String file : dir.listAll()) {\n   *   dir.copy(to, file, newFile); // newFile can be either file, or a new name\n   * }\n   * </pre>\n   * <p>\n   * <b>NOTE:</b> this method does not check whether <i>dest</i> exist and will\n   * overwrite it if it does.\n   */\n  public void copy(Directory to, String src, String dest, IOContext context) throws IOException {\n    IndexOutput os = null;\n    IndexInput is = null;\n    IOException priorException = null;\n    try {\n      os = to.createOutput(dest, context);\n      is = openInput(src, context);\n      os.copyBytes(is, is.length());\n    } catch (IOException ioe) {\n      priorException = ioe;\n    } finally {\n      IOUtils.closeWhileHandlingException(priorException, os, is);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"30e0912f3a3069b115cfea44ff612c44d6906386","date":1365631344,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/store/Directory#copy(Directory,String,String,IOContext).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/store/Directory#copy(Directory,String,String,IOContext).mjava","sourceNew":"  /**\n   * Copies the file <i>src</i> to {@link Directory} <i>to</i> under the new\n   * file name <i>dest</i>.\n   * <p>\n   * If you want to copy the entire source directory to the destination one, you\n   * can do so like this:\n   * \n   * <pre class=\"prettyprint\">\n   * Directory to; // the directory to copy to\n   * for (String file : dir.listAll()) {\n   *   dir.copy(to, file, newFile, IOContext.DEFAULT); // newFile can be either file, or a new name\n   * }\n   * </pre>\n   * <p>\n   * <b>NOTE:</b> this method does not check whether <i>dest</i> exist and will\n   * overwrite it if it does.\n   */\n  public void copy(Directory to, String src, String dest, IOContext context) throws IOException {\n    IndexOutput os = null;\n    IndexInput is = null;\n    IOException priorException = null;\n    try {\n      os = to.createOutput(dest, context);\n      is = openInput(src, context);\n      os.copyBytes(is, is.length());\n    } catch (IOException ioe) {\n      priorException = ioe;\n    } finally {\n      boolean success = false;\n      try {\n        IOUtils.closeWhileHandlingException(priorException, os, is);\n        success = true;\n      } finally {\n        if (!success) {\n          try {\n            to.deleteFile(dest);\n          } catch (Throwable t) {\n          }\n        }\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * Copies the file <i>src</i> to {@link Directory} <i>to</i> under the new\n   * file name <i>dest</i>.\n   * <p>\n   * If you want to copy the entire source directory to the destination one, you\n   * can do so like this:\n   * \n   * <pre class=\"prettyprint\">\n   * Directory to; // the directory to copy to\n   * for (String file : dir.listAll()) {\n   *   dir.copy(to, file, newFile); // newFile can be either file, or a new name\n   * }\n   * </pre>\n   * <p>\n   * <b>NOTE:</b> this method does not check whether <i>dest</i> exist and will\n   * overwrite it if it does.\n   */\n  public void copy(Directory to, String src, String dest, IOContext context) throws IOException {\n    IndexOutput os = null;\n    IndexInput is = null;\n    IOException priorException = null;\n    try {\n      os = to.createOutput(dest, context);\n      is = openInput(src, context);\n      os.copyBytes(is, is.length());\n    } catch (IOException ioe) {\n      priorException = ioe;\n    } finally {\n      boolean success = false;\n      try {\n        IOUtils.closeWhileHandlingException(priorException, os, is);\n        success = true;\n      } finally {\n        if (!success) {\n          try {\n            to.deleteFile(dest);\n          } catch (Throwable t) {\n          }\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"43e3527ed736c46c0f0ab28181937b9de5ef7c63","date":1399502658,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/store/Directory#copy(Directory,String,String,IOContext).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/store/Directory#copy(Directory,String,String,IOContext).mjava","sourceNew":"  /**\n   * Copies the file <i>src</i> to {@link Directory} <i>to</i> under the new\n   * file name <i>dest</i>.\n   * <p>\n   * If you want to copy the entire source directory to the destination one, you\n   * can do so like this:\n   * \n   * <pre class=\"prettyprint\">\n   * Directory to; // the directory to copy to\n   * for (String file : dir.listAll()) {\n   *   dir.copy(to, file, newFile, IOContext.DEFAULT); // newFile can be either file, or a new name\n   * }\n   * </pre>\n   * <p>\n   * <b>NOTE:</b> this method does not check whether <i>dest</i> exist and will\n   * overwrite it if it does.\n   */\n  public void copy(Directory to, String src, String dest, IOContext context) throws IOException {\n    IndexOutput os = null;\n    IndexInput is = null;\n    boolean success = false;\n    try {\n      os = to.createOutput(dest, context);\n      is = openInput(src, context);\n      os.copyBytes(is, is.length());\n      success = true;\n    } finally {\n      if (success) {\n        IOUtils.close(os, is);\n      } else {\n        IOUtils.closeWhileHandlingException(os, is);\n        try {\n          to.deleteFile(dest);\n        } catch (Throwable t) {\n        }\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * Copies the file <i>src</i> to {@link Directory} <i>to</i> under the new\n   * file name <i>dest</i>.\n   * <p>\n   * If you want to copy the entire source directory to the destination one, you\n   * can do so like this:\n   * \n   * <pre class=\"prettyprint\">\n   * Directory to; // the directory to copy to\n   * for (String file : dir.listAll()) {\n   *   dir.copy(to, file, newFile, IOContext.DEFAULT); // newFile can be either file, or a new name\n   * }\n   * </pre>\n   * <p>\n   * <b>NOTE:</b> this method does not check whether <i>dest</i> exist and will\n   * overwrite it if it does.\n   */\n  public void copy(Directory to, String src, String dest, IOContext context) throws IOException {\n    IndexOutput os = null;\n    IndexInput is = null;\n    IOException priorException = null;\n    try {\n      os = to.createOutput(dest, context);\n      is = openInput(src, context);\n      os.copyBytes(is, is.length());\n    } catch (IOException ioe) {\n      priorException = ioe;\n    } finally {\n      boolean success = false;\n      try {\n        IOUtils.closeWhileHandlingException(priorException, os, is);\n        success = true;\n      } finally {\n        if (!success) {\n          try {\n            to.deleteFile(dest);\n          } catch (Throwable t) {\n          }\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"52d4cfb22484037a9b8e9080e03aeaff60954880","date":1420125313,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/store/Directory#copyFrom(Directory,String,String,IOContext).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/store/Directory#copy(Directory,String,String,IOContext).mjava","sourceNew":"  /**\n   * Copies the file <i>src</i> in <i>from</i> to this directory under the new\n   * file name <i>dest</i>.\n   * <p>\n   * If you want to copy the entire source directory to the destination one, you\n   * can do so like this:\n   * \n   * <pre class=\"prettyprint\">\n   * Directory to; // the directory to copy to\n   * for (String file : dir.listAll()) {\n   *   to.copyFrom(dir, file, newFile, IOContext.DEFAULT); // newFile can be either file, or a new name\n   * }\n   * </pre>\n   * <p>\n   * <b>NOTE:</b> this method does not check whether <i>dest</i> exist and will\n   * overwrite it if it does.\n   */\n  public void copyFrom(Directory from, String src, String dest, IOContext context) throws IOException {\n    boolean success = false;\n    try (IndexInput is = from.openInput(src, context);\n         IndexOutput os = createOutput(dest, context)) {\n      os.copyBytes(is, is.length());\n      success = true;\n    } finally {\n      if (!success) {\n        IOUtils.deleteFilesIgnoringExceptions(this, dest);\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * Copies the file <i>src</i> to {@link Directory} <i>to</i> under the new\n   * file name <i>dest</i>.\n   * <p>\n   * If you want to copy the entire source directory to the destination one, you\n   * can do so like this:\n   * \n   * <pre class=\"prettyprint\">\n   * Directory to; // the directory to copy to\n   * for (String file : dir.listAll()) {\n   *   dir.copy(to, file, newFile, IOContext.DEFAULT); // newFile can be either file, or a new name\n   * }\n   * </pre>\n   * <p>\n   * <b>NOTE:</b> this method does not check whether <i>dest</i> exist and will\n   * overwrite it if it does.\n   */\n  public void copy(Directory to, String src, String dest, IOContext context) throws IOException {\n    IndexOutput os = null;\n    IndexInput is = null;\n    boolean success = false;\n    try {\n      os = to.createOutput(dest, context);\n      is = openInput(src, context);\n      os.copyBytes(is, is.length());\n      success = true;\n    } finally {\n      if (success) {\n        IOUtils.close(os, is);\n      } else {\n        IOUtils.closeWhileHandlingException(os, is);\n        try {\n          to.deleteFile(dest);\n        } catch (Throwable t) {\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8471c0f357621e859602d44e1af230581b739319":["66ad5d52334c6be735b490059924589a69b97bd6"],"9eae2a56dc810a17cf807d831f720dec931a03de":["8471c0f357621e859602d44e1af230581b739319"],"45cf1d94fcb652df755491e6ec0390e70031c9d0":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"43e3527ed736c46c0f0ab28181937b9de5ef7c63":["30e0912f3a3069b115cfea44ff612c44d6906386"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"52d4cfb22484037a9b8e9080e03aeaff60954880":["43e3527ed736c46c0f0ab28181937b9de5ef7c63"],"66ad5d52334c6be735b490059924589a69b97bd6":["45cf1d94fcb652df755491e6ec0390e70031c9d0"],"30e0912f3a3069b115cfea44ff612c44d6906386":["9eae2a56dc810a17cf807d831f720dec931a03de"],"05a14b2611ead08655a2b2bdc61632eb31316e57":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","45cf1d94fcb652df755491e6ec0390e70031c9d0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["52d4cfb22484037a9b8e9080e03aeaff60954880"]},"commit2Childs":{"8471c0f357621e859602d44e1af230581b739319":["9eae2a56dc810a17cf807d831f720dec931a03de"],"9eae2a56dc810a17cf807d831f720dec931a03de":["30e0912f3a3069b115cfea44ff612c44d6906386"],"45cf1d94fcb652df755491e6ec0390e70031c9d0":["66ad5d52334c6be735b490059924589a69b97bd6","05a14b2611ead08655a2b2bdc61632eb31316e57"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["45cf1d94fcb652df755491e6ec0390e70031c9d0","05a14b2611ead08655a2b2bdc61632eb31316e57"],"43e3527ed736c46c0f0ab28181937b9de5ef7c63":["52d4cfb22484037a9b8e9080e03aeaff60954880"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"66ad5d52334c6be735b490059924589a69b97bd6":["8471c0f357621e859602d44e1af230581b739319"],"52d4cfb22484037a9b8e9080e03aeaff60954880":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"30e0912f3a3069b115cfea44ff612c44d6906386":["43e3527ed736c46c0f0ab28181937b9de5ef7c63"],"05a14b2611ead08655a2b2bdc61632eb31316e57":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["05a14b2611ead08655a2b2bdc61632eb31316e57","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}