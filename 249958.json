{"path":"lucene/core/src/java/org/apache/lucene/codecs/lucene80/IndexedDISI#writeBitSet(DocIdSetIterator,IndexOutput).mjava","commits":[{"id":"03e17b020972a0d6e8d6823f545571a66646a167","date":1547847724,"type":0,"author":"Toke Eskildsen","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene80/IndexedDISI#writeBitSet(DocIdSetIterator,IndexOutput).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Writes the docIDs from it to out, in logical blocks, one for each 65536 docIDs in monotonically increasing\n   * gap-less order. DENSE blocks uses {@link #DEFAULT_DENSE_RANK_POWER} of 9 (every 512 docIDs / 8 longs).\n   * The caller must keep track of the number of jump-table entries (returned by this method) as well as the\n   * denseRankPower (9 for this method) and provide them when constructing an IndexedDISI for reading.\n   * @param it  the document IDs.\n   * @param out destination for the blocks.\n   * @throws IOException if there was an error writing to out.\n   * @return the number of jump-table entries following the blocks, -1 for no entries.\n   *         This should be stored in meta and used when creating an instance of IndexedDISI.\n   */\n  static short writeBitSet(DocIdSetIterator it, IndexOutput out) throws IOException {\n    return writeBitSet(it, out, DEFAULT_DENSE_RANK_POWER);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c89f1ef80a9432f4eabaeda9a1e135cd72e60836","date":1547972642,"type":0,"author":"Tommaso Teofili","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene80/IndexedDISI#writeBitSet(DocIdSetIterator,IndexOutput).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Writes the docIDs from it to out, in logical blocks, one for each 65536 docIDs in monotonically increasing\n   * gap-less order. DENSE blocks uses {@link #DEFAULT_DENSE_RANK_POWER} of 9 (every 512 docIDs / 8 longs).\n   * The caller must keep track of the number of jump-table entries (returned by this method) as well as the\n   * denseRankPower (9 for this method) and provide them when constructing an IndexedDISI for reading.\n   * @param it  the document IDs.\n   * @param out destination for the blocks.\n   * @throws IOException if there was an error writing to out.\n   * @return the number of jump-table entries following the blocks, -1 for no entries.\n   *         This should be stored in meta and used when creating an instance of IndexedDISI.\n   */\n  static short writeBitSet(DocIdSetIterator it, IndexOutput out) throws IOException {\n    return writeBitSet(it, out, DEFAULT_DENSE_RANK_POWER);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"03e17b020972a0d6e8d6823f545571a66646a167":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c89f1ef80a9432f4eabaeda9a1e135cd72e60836":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","03e17b020972a0d6e8d6823f545571a66646a167"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["03e17b020972a0d6e8d6823f545571a66646a167"]},"commit2Childs":{"03e17b020972a0d6e8d6823f545571a66646a167":["c89f1ef80a9432f4eabaeda9a1e135cd72e60836","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c89f1ef80a9432f4eabaeda9a1e135cd72e60836":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["03e17b020972a0d6e8d6823f545571a66646a167","c89f1ef80a9432f4eabaeda9a1e135cd72e60836"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c89f1ef80a9432f4eabaeda9a1e135cd72e60836","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}