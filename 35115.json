{"path":"solr/core/src/test/org/apache/solr/cloud/ReplicaPropertiesBase#doPropertyAction(CloudSolrServer,String...).mjava","commits":[{"id":"64707d25b6352cf02909d3916038a3b3cec7f0a8","date":1412782122,"type":2,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ReplicaPropertiesBase#doPropertyAction(CloudSolrServer,String...).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestCollectionAPI#doPropertyAction(CloudSolrServer,String...).mjava","sourceNew":"  void doPropertyAction(CloudSolrServer client, String... paramsIn) throws IOException, SolrServerException {\n    assertTrue(\"paramsIn must be an even multiple of 2, it is: \" + paramsIn.length, (paramsIn.length % 2) == 0);\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    for (int idx = 0; idx < paramsIn.length; idx += 2) {\n      params.set(paramsIn[idx], paramsIn[idx + 1]);\n    }\n    QueryRequest request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    client.request(request);\n\n  }\n\n","sourceOld":"  private void doPropertyAction(CloudSolrServer client, String... paramsIn) throws IOException, SolrServerException {\n    assertTrue(\"paramsIn must be an even multiple of 2, it is: \" + paramsIn.length, (paramsIn.length % 2) == 0);\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    for (int idx = 0; idx < paramsIn.length; idx += 2) {\n      params.set(paramsIn[idx], paramsIn[idx + 1]);\n    }\n    QueryRequest request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    client.request(request);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"55980207f1977bd1463465de1659b821347e2fa8","date":1413336386,"type":2,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ReplicaPropertiesBase#doPropertyAction(CloudSolrServer,String...).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestCollectionAPI#doPropertyAction(CloudSolrServer,String...).mjava","sourceNew":"  void doPropertyAction(CloudSolrServer client, String... paramsIn) throws IOException, SolrServerException {\n    assertTrue(\"paramsIn must be an even multiple of 2, it is: \" + paramsIn.length, (paramsIn.length % 2) == 0);\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    for (int idx = 0; idx < paramsIn.length; idx += 2) {\n      params.set(paramsIn[idx], paramsIn[idx + 1]);\n    }\n    QueryRequest request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    client.request(request);\n\n  }\n\n","sourceOld":"  private void doPropertyAction(CloudSolrServer client, String... paramsIn) throws IOException, SolrServerException {\n    assertTrue(\"paramsIn must be an even multiple of 2, it is: \" + paramsIn.length, (paramsIn.length % 2) == 0);\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    for (int idx = 0; idx < paramsIn.length; idx += 2) {\n      params.set(paramsIn[idx], paramsIn[idx + 1]);\n    }\n    QueryRequest request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    client.request(request);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1bd110770d1b52ca7d7201410a102c468c540967","date":1419034668,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ReplicaPropertiesBase#doPropertyAction(CloudSolrServer,String...).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ReplicaPropertiesBase#doPropertyAction(CloudSolrServer,String...).mjava","sourceNew":"  NamedList<Object> doPropertyAction(CloudSolrServer client, String... paramsIn) throws IOException, SolrServerException {\n    assertTrue(\"paramsIn must be an even multiple of 2, it is: \" + paramsIn.length, (paramsIn.length % 2) == 0);\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    for (int idx = 0; idx < paramsIn.length; idx += 2) {\n      params.set(paramsIn[idx], paramsIn[idx + 1]);\n    }\n    QueryRequest request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    return client.request(request);\n  }\n\n","sourceOld":"  void doPropertyAction(CloudSolrServer client, String... paramsIn) throws IOException, SolrServerException {\n    assertTrue(\"paramsIn must be an even multiple of 2, it is: \" + paramsIn.length, (paramsIn.length % 2) == 0);\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    for (int idx = 0; idx < paramsIn.length; idx += 2) {\n      params.set(paramsIn[idx], paramsIn[idx + 1]);\n    }\n    QueryRequest request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    client.request(request);\n\n  }\n\n","bugFix":["dc2bafa00000be70227a04c29e3f885ff41e531d","64707d25b6352cf02909d3916038a3b3cec7f0a8"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ec3dbdc850ca18bf4aef9acb85f2ea0554306d","date":1419896224,"type":3,"author":"Anshum Gupta","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ReplicaPropertiesBase#doPropertyAction(CloudSolrServer,String...).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ReplicaPropertiesBase#doPropertyAction(CloudSolrServer,String...).mjava","sourceNew":"  public static NamedList<Object> doPropertyAction(CloudSolrServer client, String... paramsIn) throws IOException, SolrServerException {\n    assertTrue(\"paramsIn must be an even multiple of 2, it is: \" + paramsIn.length, (paramsIn.length % 2) == 0);\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    for (int idx = 0; idx < paramsIn.length; idx += 2) {\n      params.set(paramsIn[idx], paramsIn[idx + 1]);\n    }\n    QueryRequest request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    return client.request(request);\n  }\n\n","sourceOld":"  NamedList<Object> doPropertyAction(CloudSolrServer client, String... paramsIn) throws IOException, SolrServerException {\n    assertTrue(\"paramsIn must be an even multiple of 2, it is: \" + paramsIn.length, (paramsIn.length % 2) == 0);\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    for (int idx = 0; idx < paramsIn.length; idx += 2) {\n      params.set(paramsIn[idx], paramsIn[idx + 1]);\n    }\n    QueryRequest request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    return client.request(request);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bafca15d8e408346a67f4282ad1143b88023893b","date":1420034748,"type":5,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ReplicaPropertiesBase#doPropertyAction(CloudSolrClient,String...).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ReplicaPropertiesBase#doPropertyAction(CloudSolrServer,String...).mjava","sourceNew":"  public static NamedList<Object> doPropertyAction(CloudSolrClient client, String... paramsIn) throws IOException, SolrServerException {\n    assertTrue(\"paramsIn must be an even multiple of 2, it is: \" + paramsIn.length, (paramsIn.length % 2) == 0);\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    for (int idx = 0; idx < paramsIn.length; idx += 2) {\n      params.set(paramsIn[idx], paramsIn[idx + 1]);\n    }\n    QueryRequest request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    return client.request(request);\n  }\n\n","sourceOld":"  public static NamedList<Object> doPropertyAction(CloudSolrServer client, String... paramsIn) throws IOException, SolrServerException {\n    assertTrue(\"paramsIn must be an even multiple of 2, it is: \" + paramsIn.length, (paramsIn.length % 2) == 0);\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    for (int idx = 0; idx < paramsIn.length; idx += 2) {\n      params.set(paramsIn[idx], paramsIn[idx + 1]);\n    }\n    QueryRequest request = new QueryRequest(params);\n    request.setPath(\"/admin/collections\");\n    return client.request(request);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"55980207f1977bd1463465de1659b821347e2fa8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","64707d25b6352cf02909d3916038a3b3cec7f0a8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1bd110770d1b52ca7d7201410a102c468c540967":["64707d25b6352cf02909d3916038a3b3cec7f0a8"],"64707d25b6352cf02909d3916038a3b3cec7f0a8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"bafca15d8e408346a67f4282ad1143b88023893b":["d0ec3dbdc850ca18bf4aef9acb85f2ea0554306d"],"d0ec3dbdc850ca18bf4aef9acb85f2ea0554306d":["1bd110770d1b52ca7d7201410a102c468c540967"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["bafca15d8e408346a67f4282ad1143b88023893b"]},"commit2Childs":{"55980207f1977bd1463465de1659b821347e2fa8":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["55980207f1977bd1463465de1659b821347e2fa8","64707d25b6352cf02909d3916038a3b3cec7f0a8"],"64707d25b6352cf02909d3916038a3b3cec7f0a8":["55980207f1977bd1463465de1659b821347e2fa8","1bd110770d1b52ca7d7201410a102c468c540967"],"1bd110770d1b52ca7d7201410a102c468c540967":["d0ec3dbdc850ca18bf4aef9acb85f2ea0554306d"],"bafca15d8e408346a67f4282ad1143b88023893b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d0ec3dbdc850ca18bf4aef9acb85f2ea0554306d":["bafca15d8e408346a67f4282ad1143b88023893b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["55980207f1977bd1463465de1659b821347e2fa8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}