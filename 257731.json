{"path":"lucene/core/src/java/org/apache/lucene/index/IndexUpgrader#upgrade().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexUpgrader#upgrade().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexUpgrader#upgrade().mjava","sourceNew":"  public void upgrade() throws IOException {\n    if (!DirectoryReader.indexExists(dir)) {\n      throw new IndexNotFoundException(dir.toString());\n    }\n  \n    if (!deletePriorCommits) {\n      final Collection<IndexCommit> commits = DirectoryReader.listCommits(dir);\n      if (commits.size() > 1) {\n        throw new IllegalArgumentException(\"This tool was invoked to not delete prior commit points, but the following commits were found: \" + commits);\n      }\n    }\n    \n    final IndexWriterConfig c = (IndexWriterConfig) iwc.clone();\n    c.setMergePolicy(new UpgradeIndexMergePolicy(c.getMergePolicy()));\n    c.setIndexDeletionPolicy(new KeepOnlyLastCommitDeletionPolicy());\n    \n    final IndexWriter w = new IndexWriter(dir, c);\n    try {\n      InfoStream infoStream = c.getInfoStream();\n      if (infoStream.isEnabled(\"IndexUpgrader\")) {\n        infoStream.message(\"IndexUpgrader\", \"Upgrading all pre-\" + Constants.LUCENE_MAIN_VERSION + \" segments of index directory '\" + dir + \"' to version \" + Constants.LUCENE_MAIN_VERSION + \"...\");\n      }\n      w.forceMerge(1);\n      if (infoStream.isEnabled(\"IndexUpgrader\")) {\n        infoStream.message(\"IndexUpgrader\", \"All segments upgraded to version \" + Constants.LUCENE_MAIN_VERSION);\n      }\n    } finally {\n      w.close();\n    }\n  }\n\n","sourceOld":"  public void upgrade() throws IOException {\n    if (!DirectoryReader.indexExists(dir)) {\n      throw new IndexNotFoundException(dir.toString());\n    }\n  \n    if (!deletePriorCommits) {\n      final Collection<IndexCommit> commits = DirectoryReader.listCommits(dir);\n      if (commits.size() > 1) {\n        throw new IllegalArgumentException(\"This tool was invoked to not delete prior commit points, but the following commits were found: \" + commits);\n      }\n    }\n    \n    final IndexWriterConfig c = (IndexWriterConfig) iwc.clone();\n    c.setMergePolicy(new UpgradeIndexMergePolicy(c.getMergePolicy()));\n    c.setIndexDeletionPolicy(new KeepOnlyLastCommitDeletionPolicy());\n    \n    final IndexWriter w = new IndexWriter(dir, c);\n    try {\n      InfoStream infoStream = c.getInfoStream();\n      if (infoStream.isEnabled(\"IndexUpgrader\")) {\n        infoStream.message(\"IndexUpgrader\", \"Upgrading all pre-\" + Constants.LUCENE_MAIN_VERSION + \" segments of index directory '\" + dir + \"' to version \" + Constants.LUCENE_MAIN_VERSION + \"...\");\n      }\n      w.forceMerge(1);\n      if (infoStream.isEnabled(\"IndexUpgrader\")) {\n        infoStream.message(\"IndexUpgrader\", \"All segments upgraded to version \" + Constants.LUCENE_MAIN_VERSION);\n      }\n    } finally {\n      w.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"399d5903979ca52514d2bc7e3a362e1c45885c94","date":1333042474,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexUpgrader#upgrade().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexUpgrader#upgrade().mjava","sourceNew":"  public void upgrade() throws IOException {\n    if (!DirectoryReader.indexExists(dir)) {\n      throw new IndexNotFoundException(dir.toString());\n    }\n  \n    if (!deletePriorCommits) {\n      final Collection<IndexCommit> commits = DirectoryReader.listCommits(dir);\n      if (commits.size() > 1) {\n        throw new IllegalArgumentException(\"This tool was invoked to not delete prior commit points, but the following commits were found: \" + commits);\n      }\n    }\n    \n    final IndexWriterConfig c = iwc.clone();\n    c.setMergePolicy(new UpgradeIndexMergePolicy(c.getMergePolicy()));\n    c.setIndexDeletionPolicy(new KeepOnlyLastCommitDeletionPolicy());\n    \n    final IndexWriter w = new IndexWriter(dir, c);\n    try {\n      InfoStream infoStream = c.getInfoStream();\n      if (infoStream.isEnabled(\"IndexUpgrader\")) {\n        infoStream.message(\"IndexUpgrader\", \"Upgrading all pre-\" + Constants.LUCENE_MAIN_VERSION + \" segments of index directory '\" + dir + \"' to version \" + Constants.LUCENE_MAIN_VERSION + \"...\");\n      }\n      w.forceMerge(1);\n      if (infoStream.isEnabled(\"IndexUpgrader\")) {\n        infoStream.message(\"IndexUpgrader\", \"All segments upgraded to version \" + Constants.LUCENE_MAIN_VERSION);\n      }\n    } finally {\n      w.close();\n    }\n  }\n\n","sourceOld":"  public void upgrade() throws IOException {\n    if (!DirectoryReader.indexExists(dir)) {\n      throw new IndexNotFoundException(dir.toString());\n    }\n  \n    if (!deletePriorCommits) {\n      final Collection<IndexCommit> commits = DirectoryReader.listCommits(dir);\n      if (commits.size() > 1) {\n        throw new IllegalArgumentException(\"This tool was invoked to not delete prior commit points, but the following commits were found: \" + commits);\n      }\n    }\n    \n    final IndexWriterConfig c = (IndexWriterConfig) iwc.clone();\n    c.setMergePolicy(new UpgradeIndexMergePolicy(c.getMergePolicy()));\n    c.setIndexDeletionPolicy(new KeepOnlyLastCommitDeletionPolicy());\n    \n    final IndexWriter w = new IndexWriter(dir, c);\n    try {\n      InfoStream infoStream = c.getInfoStream();\n      if (infoStream.isEnabled(\"IndexUpgrader\")) {\n        infoStream.message(\"IndexUpgrader\", \"Upgrading all pre-\" + Constants.LUCENE_MAIN_VERSION + \" segments of index directory '\" + dir + \"' to version \" + Constants.LUCENE_MAIN_VERSION + \"...\");\n      }\n      w.forceMerge(1);\n      if (infoStream.isEnabled(\"IndexUpgrader\")) {\n        infoStream.message(\"IndexUpgrader\", \"All segments upgraded to version \" + Constants.LUCENE_MAIN_VERSION);\n      }\n    } finally {\n      w.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c14aed69f37b57db63b1fccc0740b17060a08f2b","date":1348227091,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexUpgrader#upgrade().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexUpgrader#upgrade().mjava","sourceNew":"  /** Perform the upgrade. */\n  public void upgrade() throws IOException {\n    if (!DirectoryReader.indexExists(dir)) {\n      throw new IndexNotFoundException(dir.toString());\n    }\n  \n    if (!deletePriorCommits) {\n      final Collection<IndexCommit> commits = DirectoryReader.listCommits(dir);\n      if (commits.size() > 1) {\n        throw new IllegalArgumentException(\"This tool was invoked to not delete prior commit points, but the following commits were found: \" + commits);\n      }\n    }\n    \n    final IndexWriterConfig c = iwc.clone();\n    c.setMergePolicy(new UpgradeIndexMergePolicy(c.getMergePolicy()));\n    c.setIndexDeletionPolicy(new KeepOnlyLastCommitDeletionPolicy());\n    \n    final IndexWriter w = new IndexWriter(dir, c);\n    try {\n      InfoStream infoStream = c.getInfoStream();\n      if (infoStream.isEnabled(\"IndexUpgrader\")) {\n        infoStream.message(\"IndexUpgrader\", \"Upgrading all pre-\" + Constants.LUCENE_MAIN_VERSION + \" segments of index directory '\" + dir + \"' to version \" + Constants.LUCENE_MAIN_VERSION + \"...\");\n      }\n      w.forceMerge(1);\n      if (infoStream.isEnabled(\"IndexUpgrader\")) {\n        infoStream.message(\"IndexUpgrader\", \"All segments upgraded to version \" + Constants.LUCENE_MAIN_VERSION);\n      }\n    } finally {\n      w.close();\n    }\n  }\n\n","sourceOld":"  public void upgrade() throws IOException {\n    if (!DirectoryReader.indexExists(dir)) {\n      throw new IndexNotFoundException(dir.toString());\n    }\n  \n    if (!deletePriorCommits) {\n      final Collection<IndexCommit> commits = DirectoryReader.listCommits(dir);\n      if (commits.size() > 1) {\n        throw new IllegalArgumentException(\"This tool was invoked to not delete prior commit points, but the following commits were found: \" + commits);\n      }\n    }\n    \n    final IndexWriterConfig c = iwc.clone();\n    c.setMergePolicy(new UpgradeIndexMergePolicy(c.getMergePolicy()));\n    c.setIndexDeletionPolicy(new KeepOnlyLastCommitDeletionPolicy());\n    \n    final IndexWriter w = new IndexWriter(dir, c);\n    try {\n      InfoStream infoStream = c.getInfoStream();\n      if (infoStream.isEnabled(\"IndexUpgrader\")) {\n        infoStream.message(\"IndexUpgrader\", \"Upgrading all pre-\" + Constants.LUCENE_MAIN_VERSION + \" segments of index directory '\" + dir + \"' to version \" + Constants.LUCENE_MAIN_VERSION + \"...\");\n      }\n      w.forceMerge(1);\n      if (infoStream.isEnabled(\"IndexUpgrader\")) {\n        infoStream.message(\"IndexUpgrader\", \"All segments upgraded to version \" + Constants.LUCENE_MAIN_VERSION);\n      }\n    } finally {\n      w.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexUpgrader#upgrade().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexUpgrader#upgrade().mjava","sourceNew":"  /** Perform the upgrade. */\n  public void upgrade() throws IOException {\n    if (!DirectoryReader.indexExists(dir)) {\n      throw new IndexNotFoundException(dir.toString());\n    }\n  \n    if (!deletePriorCommits) {\n      final Collection<IndexCommit> commits = DirectoryReader.listCommits(dir);\n      if (commits.size() > 1) {\n        throw new IllegalArgumentException(\"This tool was invoked to not delete prior commit points, but the following commits were found: \" + commits);\n      }\n    }\n    \n    final IndexWriterConfig c = iwc.clone();\n    c.setMergePolicy(new UpgradeIndexMergePolicy(c.getMergePolicy()));\n    c.setIndexDeletionPolicy(new KeepOnlyLastCommitDeletionPolicy());\n    \n    final IndexWriter w = new IndexWriter(dir, c);\n    try {\n      InfoStream infoStream = c.getInfoStream();\n      if (infoStream.isEnabled(\"IndexUpgrader\")) {\n        infoStream.message(\"IndexUpgrader\", \"Upgrading all pre-\" + Constants.LUCENE_MAIN_VERSION + \" segments of index directory '\" + dir + \"' to version \" + Constants.LUCENE_MAIN_VERSION + \"...\");\n      }\n      w.forceMerge(1);\n      if (infoStream.isEnabled(\"IndexUpgrader\")) {\n        infoStream.message(\"IndexUpgrader\", \"All segments upgraded to version \" + Constants.LUCENE_MAIN_VERSION);\n      }\n    } finally {\n      w.shutdown();\n    }\n  }\n\n","sourceOld":"  /** Perform the upgrade. */\n  public void upgrade() throws IOException {\n    if (!DirectoryReader.indexExists(dir)) {\n      throw new IndexNotFoundException(dir.toString());\n    }\n  \n    if (!deletePriorCommits) {\n      final Collection<IndexCommit> commits = DirectoryReader.listCommits(dir);\n      if (commits.size() > 1) {\n        throw new IllegalArgumentException(\"This tool was invoked to not delete prior commit points, but the following commits were found: \" + commits);\n      }\n    }\n    \n    final IndexWriterConfig c = iwc.clone();\n    c.setMergePolicy(new UpgradeIndexMergePolicy(c.getMergePolicy()));\n    c.setIndexDeletionPolicy(new KeepOnlyLastCommitDeletionPolicy());\n    \n    final IndexWriter w = new IndexWriter(dir, c);\n    try {\n      InfoStream infoStream = c.getInfoStream();\n      if (infoStream.isEnabled(\"IndexUpgrader\")) {\n        infoStream.message(\"IndexUpgrader\", \"Upgrading all pre-\" + Constants.LUCENE_MAIN_VERSION + \" segments of index directory '\" + dir + \"' to version \" + Constants.LUCENE_MAIN_VERSION + \"...\");\n      }\n      w.forceMerge(1);\n      if (infoStream.isEnabled(\"IndexUpgrader\")) {\n        infoStream.message(\"IndexUpgrader\", \"All segments upgraded to version \" + Constants.LUCENE_MAIN_VERSION);\n      }\n    } finally {\n      w.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"cfc45818441587d8004ff1a119fb60ac9ecb9a14","date":1401437797,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexUpgrader#upgrade().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexUpgrader#upgrade().mjava","sourceNew":"  /** Perform the upgrade. */\n  public void upgrade() throws IOException {\n    if (!DirectoryReader.indexExists(dir)) {\n      throw new IndexNotFoundException(dir.toString());\n    }\n  \n    if (!deletePriorCommits) {\n      final Collection<IndexCommit> commits = DirectoryReader.listCommits(dir);\n      if (commits.size() > 1) {\n        throw new IllegalArgumentException(\"This tool was invoked to not delete prior commit points, but the following commits were found: \" + commits);\n      }\n    }\n    \n    iwc.setMergePolicy(new UpgradeIndexMergePolicy(iwc.getMergePolicy()));\n    iwc.setIndexDeletionPolicy(new KeepOnlyLastCommitDeletionPolicy());\n    \n    final IndexWriter w = new IndexWriter(dir, iwc);\n    try {\n      InfoStream infoStream = iwc.getInfoStream();\n      if (infoStream.isEnabled(\"IndexUpgrader\")) {\n        infoStream.message(\"IndexUpgrader\", \"Upgrading all pre-\" + Constants.LUCENE_MAIN_VERSION + \" segments of index directory '\" + dir + \"' to version \" + Constants.LUCENE_MAIN_VERSION + \"...\");\n      }\n      w.forceMerge(1);\n      if (infoStream.isEnabled(\"IndexUpgrader\")) {\n        infoStream.message(\"IndexUpgrader\", \"All segments upgraded to version \" + Constants.LUCENE_MAIN_VERSION);\n      }\n    } finally {\n      w.shutdown();\n    }\n  }\n\n","sourceOld":"  /** Perform the upgrade. */\n  public void upgrade() throws IOException {\n    if (!DirectoryReader.indexExists(dir)) {\n      throw new IndexNotFoundException(dir.toString());\n    }\n  \n    if (!deletePriorCommits) {\n      final Collection<IndexCommit> commits = DirectoryReader.listCommits(dir);\n      if (commits.size() > 1) {\n        throw new IllegalArgumentException(\"This tool was invoked to not delete prior commit points, but the following commits were found: \" + commits);\n      }\n    }\n    \n    final IndexWriterConfig c = iwc.clone();\n    c.setMergePolicy(new UpgradeIndexMergePolicy(c.getMergePolicy()));\n    c.setIndexDeletionPolicy(new KeepOnlyLastCommitDeletionPolicy());\n    \n    final IndexWriter w = new IndexWriter(dir, c);\n    try {\n      InfoStream infoStream = c.getInfoStream();\n      if (infoStream.isEnabled(\"IndexUpgrader\")) {\n        infoStream.message(\"IndexUpgrader\", \"Upgrading all pre-\" + Constants.LUCENE_MAIN_VERSION + \" segments of index directory '\" + dir + \"' to version \" + Constants.LUCENE_MAIN_VERSION + \"...\");\n      }\n      w.forceMerge(1);\n      if (infoStream.isEnabled(\"IndexUpgrader\")) {\n        infoStream.message(\"IndexUpgrader\", \"All segments upgraded to version \" + Constants.LUCENE_MAIN_VERSION);\n      }\n    } finally {\n      w.shutdown();\n    }\n  }\n\n","bugFix":null,"bugIntro":["f55287c70f41272745a56bdc3efa9ebb800a83b1"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexUpgrader#upgrade().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexUpgrader#upgrade().mjava","sourceNew":"  /** Perform the upgrade. */\n  public void upgrade() throws IOException {\n    if (!DirectoryReader.indexExists(dir)) {\n      throw new IndexNotFoundException(dir.toString());\n    }\n  \n    if (!deletePriorCommits) {\n      final Collection<IndexCommit> commits = DirectoryReader.listCommits(dir);\n      if (commits.size() > 1) {\n        throw new IllegalArgumentException(\"This tool was invoked to not delete prior commit points, but the following commits were found: \" + commits);\n      }\n    }\n    \n    iwc.setMergePolicy(new UpgradeIndexMergePolicy(iwc.getMergePolicy()));\n    iwc.setIndexDeletionPolicy(new KeepOnlyLastCommitDeletionPolicy());\n    \n    final IndexWriter w = new IndexWriter(dir, iwc);\n    try {\n      InfoStream infoStream = iwc.getInfoStream();\n      if (infoStream.isEnabled(\"IndexUpgrader\")) {\n        infoStream.message(\"IndexUpgrader\", \"Upgrading all pre-\" + Constants.LUCENE_MAIN_VERSION + \" segments of index directory '\" + dir + \"' to version \" + Constants.LUCENE_MAIN_VERSION + \"...\");\n      }\n      w.forceMerge(1);\n      if (infoStream.isEnabled(\"IndexUpgrader\")) {\n        infoStream.message(\"IndexUpgrader\", \"All segments upgraded to version \" + Constants.LUCENE_MAIN_VERSION);\n      }\n    } finally {\n      w.close();\n    }\n  }\n\n","sourceOld":"  /** Perform the upgrade. */\n  public void upgrade() throws IOException {\n    if (!DirectoryReader.indexExists(dir)) {\n      throw new IndexNotFoundException(dir.toString());\n    }\n  \n    if (!deletePriorCommits) {\n      final Collection<IndexCommit> commits = DirectoryReader.listCommits(dir);\n      if (commits.size() > 1) {\n        throw new IllegalArgumentException(\"This tool was invoked to not delete prior commit points, but the following commits were found: \" + commits);\n      }\n    }\n    \n    iwc.setMergePolicy(new UpgradeIndexMergePolicy(iwc.getMergePolicy()));\n    iwc.setIndexDeletionPolicy(new KeepOnlyLastCommitDeletionPolicy());\n    \n    final IndexWriter w = new IndexWriter(dir, iwc);\n    try {\n      InfoStream infoStream = iwc.getInfoStream();\n      if (infoStream.isEnabled(\"IndexUpgrader\")) {\n        infoStream.message(\"IndexUpgrader\", \"Upgrading all pre-\" + Constants.LUCENE_MAIN_VERSION + \" segments of index directory '\" + dir + \"' to version \" + Constants.LUCENE_MAIN_VERSION + \"...\");\n      }\n      w.forceMerge(1);\n      if (infoStream.isEnabled(\"IndexUpgrader\")) {\n        infoStream.message(\"IndexUpgrader\", \"All segments upgraded to version \" + Constants.LUCENE_MAIN_VERSION);\n      }\n    } finally {\n      w.shutdown();\n    }\n  }\n\n","bugFix":null,"bugIntro":["f55287c70f41272745a56bdc3efa9ebb800a83b1"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"057a1793765d068ea9302f1a29e21734ee58d41e","date":1408130117,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexUpgrader#upgrade().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexUpgrader#upgrade().mjava","sourceNew":"  /** Perform the upgrade. */\n  public void upgrade() throws IOException {\n    if (!DirectoryReader.indexExists(dir)) {\n      throw new IndexNotFoundException(dir.toString());\n    }\n  \n    if (!deletePriorCommits) {\n      final Collection<IndexCommit> commits = DirectoryReader.listCommits(dir);\n      if (commits.size() > 1) {\n        throw new IllegalArgumentException(\"This tool was invoked to not delete prior commit points, but the following commits were found: \" + commits);\n      }\n    }\n    \n    iwc.setMergePolicy(new UpgradeIndexMergePolicy(iwc.getMergePolicy()));\n    iwc.setIndexDeletionPolicy(new KeepOnlyLastCommitDeletionPolicy());\n    \n    final IndexWriter w = new IndexWriter(dir, iwc);\n    try {\n      InfoStream infoStream = iwc.getInfoStream();\n      if (infoStream.isEnabled(\"IndexUpgrader\")) {\n        infoStream.message(\"IndexUpgrader\", \"Upgrading all pre-\" + Version.LATEST + \" segments of index directory '\" + dir + \"' to version \" + Version.LATEST + \"...\");\n      }\n      w.forceMerge(1);\n      if (infoStream.isEnabled(\"IndexUpgrader\")) {\n        infoStream.message(\"IndexUpgrader\", \"All segments upgraded to version \" + Version.LATEST);\n      }\n    } finally {\n      w.close();\n    }\n  }\n\n","sourceOld":"  /** Perform the upgrade. */\n  public void upgrade() throws IOException {\n    if (!DirectoryReader.indexExists(dir)) {\n      throw new IndexNotFoundException(dir.toString());\n    }\n  \n    if (!deletePriorCommits) {\n      final Collection<IndexCommit> commits = DirectoryReader.listCommits(dir);\n      if (commits.size() > 1) {\n        throw new IllegalArgumentException(\"This tool was invoked to not delete prior commit points, but the following commits were found: \" + commits);\n      }\n    }\n    \n    iwc.setMergePolicy(new UpgradeIndexMergePolicy(iwc.getMergePolicy()));\n    iwc.setIndexDeletionPolicy(new KeepOnlyLastCommitDeletionPolicy());\n    \n    final IndexWriter w = new IndexWriter(dir, iwc);\n    try {\n      InfoStream infoStream = iwc.getInfoStream();\n      if (infoStream.isEnabled(\"IndexUpgrader\")) {\n        infoStream.message(\"IndexUpgrader\", \"Upgrading all pre-\" + Constants.LUCENE_MAIN_VERSION + \" segments of index directory '\" + dir + \"' to version \" + Constants.LUCENE_MAIN_VERSION + \"...\");\n      }\n      w.forceMerge(1);\n      if (infoStream.isEnabled(\"IndexUpgrader\")) {\n        infoStream.message(\"IndexUpgrader\", \"All segments upgraded to version \" + Constants.LUCENE_MAIN_VERSION);\n      }\n    } finally {\n      w.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":["f55287c70f41272745a56bdc3efa9ebb800a83b1"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"f55287c70f41272745a56bdc3efa9ebb800a83b1","date":1436194211,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexUpgrader#upgrade().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexUpgrader#upgrade().mjava","sourceNew":"  /** Perform the upgrade. */\n  public void upgrade() throws IOException {\n    if (!DirectoryReader.indexExists(dir)) {\n      throw new IndexNotFoundException(dir.toString());\n    }\n  \n    if (!deletePriorCommits) {\n      final Collection<IndexCommit> commits = DirectoryReader.listCommits(dir);\n      if (commits.size() > 1) {\n        throw new IllegalArgumentException(\"This tool was invoked to not delete prior commit points, but the following commits were found: \" + commits);\n      }\n    }\n    \n    iwc.setMergePolicy(new UpgradeIndexMergePolicy(iwc.getMergePolicy()));\n    iwc.setIndexDeletionPolicy(new KeepOnlyLastCommitDeletionPolicy());\n    \n    try (final IndexWriter w = new IndexWriter(dir, iwc)) {\n      InfoStream infoStream = iwc.getInfoStream();\n      if (infoStream.isEnabled(LOG_PREFIX)) {\n        infoStream.message(LOG_PREFIX, \"Upgrading all pre-\" + Version.LATEST + \" segments of index directory '\" + dir + \"' to version \" + Version.LATEST + \"...\");\n      }\n      w.forceMerge(1);\n      if (infoStream.isEnabled(LOG_PREFIX)) {\n        infoStream.message(LOG_PREFIX, \"All segments upgraded to version \" + Version.LATEST);\n        infoStream.message(LOG_PREFIX, \"Enforcing commit to rewrite all index metadata...\");\n      }\n      w.setCommitData(w.getCommitData()); // fake change to enforce a commit (e.g. if index has no segments)\n      assert w.hasUncommittedChanges();\n      w.commit();\n      if (infoStream.isEnabled(LOG_PREFIX)) {\n        infoStream.message(LOG_PREFIX, \"Committed upgraded metadata to index.\");\n      }\n    }\n  }\n\n","sourceOld":"  /** Perform the upgrade. */\n  public void upgrade() throws IOException {\n    if (!DirectoryReader.indexExists(dir)) {\n      throw new IndexNotFoundException(dir.toString());\n    }\n  \n    if (!deletePriorCommits) {\n      final Collection<IndexCommit> commits = DirectoryReader.listCommits(dir);\n      if (commits.size() > 1) {\n        throw new IllegalArgumentException(\"This tool was invoked to not delete prior commit points, but the following commits were found: \" + commits);\n      }\n    }\n    \n    iwc.setMergePolicy(new UpgradeIndexMergePolicy(iwc.getMergePolicy()));\n    iwc.setIndexDeletionPolicy(new KeepOnlyLastCommitDeletionPolicy());\n    \n    final IndexWriter w = new IndexWriter(dir, iwc);\n    try {\n      InfoStream infoStream = iwc.getInfoStream();\n      if (infoStream.isEnabled(\"IndexUpgrader\")) {\n        infoStream.message(\"IndexUpgrader\", \"Upgrading all pre-\" + Version.LATEST + \" segments of index directory '\" + dir + \"' to version \" + Version.LATEST + \"...\");\n      }\n      w.forceMerge(1);\n      if (infoStream.isEnabled(\"IndexUpgrader\")) {\n        infoStream.message(\"IndexUpgrader\", \"All segments upgraded to version \" + Version.LATEST);\n      }\n    } finally {\n      w.close();\n    }\n  }\n\n","bugFix":["057a1793765d068ea9302f1a29e21734ee58d41e","d0ef034a4f10871667ae75181537775ddcf8ade4","536f6911665ce844b868182b8d0ca107ea0eceab","58c6bbc222f074c844e736e6fb23647e3db9cfe3","cfc45818441587d8004ff1a119fb60ac9ecb9a14"],"bugIntro":["71e1a70f18d64b93db3ef618e606d6df5062f747"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"71e1a70f18d64b93db3ef618e606d6df5062f747","date":1466156390,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexUpgrader#upgrade().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexUpgrader#upgrade().mjava","sourceNew":"  /** Perform the upgrade. */\n  public void upgrade() throws IOException {\n    if (!DirectoryReader.indexExists(dir)) {\n      throw new IndexNotFoundException(dir.toString());\n    }\n  \n    if (!deletePriorCommits) {\n      final Collection<IndexCommit> commits = DirectoryReader.listCommits(dir);\n      if (commits.size() > 1) {\n        throw new IllegalArgumentException(\"This tool was invoked to not delete prior commit points, but the following commits were found: \" + commits);\n      }\n    }\n    \n    iwc.setMergePolicy(new UpgradeIndexMergePolicy(iwc.getMergePolicy()));\n    iwc.setIndexDeletionPolicy(new KeepOnlyLastCommitDeletionPolicy());\n    \n    try (final IndexWriter w = new IndexWriter(dir, iwc)) {\n      InfoStream infoStream = iwc.getInfoStream();\n      if (infoStream.isEnabled(LOG_PREFIX)) {\n        infoStream.message(LOG_PREFIX, \"Upgrading all pre-\" + Version.LATEST + \" segments of index directory '\" + dir + \"' to version \" + Version.LATEST + \"...\");\n      }\n      w.forceMerge(1);\n      if (infoStream.isEnabled(LOG_PREFIX)) {\n        infoStream.message(LOG_PREFIX, \"All segments upgraded to version \" + Version.LATEST);\n        infoStream.message(LOG_PREFIX, \"Enforcing commit to rewrite all index metadata...\");\n      }\n      w.setLiveCommitData(w.getLiveCommitData()); // fake change to enforce a commit (e.g. if index has no segments)\n      assert w.hasUncommittedChanges();\n      w.commit();\n      if (infoStream.isEnabled(LOG_PREFIX)) {\n        infoStream.message(LOG_PREFIX, \"Committed upgraded metadata to index.\");\n      }\n    }\n  }\n\n","sourceOld":"  /** Perform the upgrade. */\n  public void upgrade() throws IOException {\n    if (!DirectoryReader.indexExists(dir)) {\n      throw new IndexNotFoundException(dir.toString());\n    }\n  \n    if (!deletePriorCommits) {\n      final Collection<IndexCommit> commits = DirectoryReader.listCommits(dir);\n      if (commits.size() > 1) {\n        throw new IllegalArgumentException(\"This tool was invoked to not delete prior commit points, but the following commits were found: \" + commits);\n      }\n    }\n    \n    iwc.setMergePolicy(new UpgradeIndexMergePolicy(iwc.getMergePolicy()));\n    iwc.setIndexDeletionPolicy(new KeepOnlyLastCommitDeletionPolicy());\n    \n    try (final IndexWriter w = new IndexWriter(dir, iwc)) {\n      InfoStream infoStream = iwc.getInfoStream();\n      if (infoStream.isEnabled(LOG_PREFIX)) {\n        infoStream.message(LOG_PREFIX, \"Upgrading all pre-\" + Version.LATEST + \" segments of index directory '\" + dir + \"' to version \" + Version.LATEST + \"...\");\n      }\n      w.forceMerge(1);\n      if (infoStream.isEnabled(LOG_PREFIX)) {\n        infoStream.message(LOG_PREFIX, \"All segments upgraded to version \" + Version.LATEST);\n        infoStream.message(LOG_PREFIX, \"Enforcing commit to rewrite all index metadata...\");\n      }\n      w.setCommitData(w.getCommitData()); // fake change to enforce a commit (e.g. if index has no segments)\n      assert w.hasUncommittedChanges();\n      w.commit();\n      if (infoStream.isEnabled(LOG_PREFIX)) {\n        infoStream.message(LOG_PREFIX, \"Committed upgraded metadata to index.\");\n      }\n    }\n  }\n\n","bugFix":["f55287c70f41272745a56bdc3efa9ebb800a83b1"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexUpgrader#upgrade().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexUpgrader#upgrade().mjava","sourceNew":"  /** Perform the upgrade. */\n  public void upgrade() throws IOException {\n    if (!DirectoryReader.indexExists(dir)) {\n      throw new IndexNotFoundException(dir.toString());\n    }\n  \n    if (!deletePriorCommits) {\n      final Collection<IndexCommit> commits = DirectoryReader.listCommits(dir);\n      if (commits.size() > 1) {\n        throw new IllegalArgumentException(\"This tool was invoked to not delete prior commit points, but the following commits were found: \" + commits);\n      }\n    }\n    \n    iwc.setMergePolicy(new UpgradeIndexMergePolicy(iwc.getMergePolicy()));\n    iwc.setIndexDeletionPolicy(new KeepOnlyLastCommitDeletionPolicy());\n    \n    try (final IndexWriter w = new IndexWriter(dir, iwc)) {\n      InfoStream infoStream = iwc.getInfoStream();\n      if (infoStream.isEnabled(LOG_PREFIX)) {\n        infoStream.message(LOG_PREFIX, \"Upgrading all pre-\" + Version.LATEST + \" segments of index directory '\" + dir + \"' to version \" + Version.LATEST + \"...\");\n      }\n      w.forceMerge(1);\n      if (infoStream.isEnabled(LOG_PREFIX)) {\n        infoStream.message(LOG_PREFIX, \"All segments upgraded to version \" + Version.LATEST);\n        infoStream.message(LOG_PREFIX, \"Enforcing commit to rewrite all index metadata...\");\n      }\n      w.setLiveCommitData(w.getLiveCommitData()); // fake change to enforce a commit (e.g. if index has no segments)\n      assert w.hasUncommittedChanges();\n      w.commit();\n      if (infoStream.isEnabled(LOG_PREFIX)) {\n        infoStream.message(LOG_PREFIX, \"Committed upgraded metadata to index.\");\n      }\n    }\n  }\n\n","sourceOld":"  /** Perform the upgrade. */\n  public void upgrade() throws IOException {\n    if (!DirectoryReader.indexExists(dir)) {\n      throw new IndexNotFoundException(dir.toString());\n    }\n  \n    if (!deletePriorCommits) {\n      final Collection<IndexCommit> commits = DirectoryReader.listCommits(dir);\n      if (commits.size() > 1) {\n        throw new IllegalArgumentException(\"This tool was invoked to not delete prior commit points, but the following commits were found: \" + commits);\n      }\n    }\n    \n    iwc.setMergePolicy(new UpgradeIndexMergePolicy(iwc.getMergePolicy()));\n    iwc.setIndexDeletionPolicy(new KeepOnlyLastCommitDeletionPolicy());\n    \n    try (final IndexWriter w = new IndexWriter(dir, iwc)) {\n      InfoStream infoStream = iwc.getInfoStream();\n      if (infoStream.isEnabled(LOG_PREFIX)) {\n        infoStream.message(LOG_PREFIX, \"Upgrading all pre-\" + Version.LATEST + \" segments of index directory '\" + dir + \"' to version \" + Version.LATEST + \"...\");\n      }\n      w.forceMerge(1);\n      if (infoStream.isEnabled(LOG_PREFIX)) {\n        infoStream.message(LOG_PREFIX, \"All segments upgraded to version \" + Version.LATEST);\n        infoStream.message(LOG_PREFIX, \"Enforcing commit to rewrite all index metadata...\");\n      }\n      w.setCommitData(w.getCommitData()); // fake change to enforce a commit (e.g. if index has no segments)\n      assert w.hasUncommittedChanges();\n      w.commit();\n      if (infoStream.isEnabled(LOG_PREFIX)) {\n        infoStream.message(LOG_PREFIX, \"Committed upgraded metadata to index.\");\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"71e1a70f18d64b93db3ef618e606d6df5062f747":["f55287c70f41272745a56bdc3efa9ebb800a83b1"],"cfc45818441587d8004ff1a119fb60ac9ecb9a14":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"f55287c70f41272745a56bdc3efa9ebb800a83b1":["057a1793765d068ea9302f1a29e21734ee58d41e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d0ef034a4f10871667ae75181537775ddcf8ade4":["cfc45818441587d8004ff1a119fb60ac9ecb9a14"],"399d5903979ca52514d2bc7e3a362e1c45885c94":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["c14aed69f37b57db63b1fccc0740b17060a08f2b"],"057a1793765d068ea9302f1a29e21734ee58d41e":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"c14aed69f37b57db63b1fccc0740b17060a08f2b":["399d5903979ca52514d2bc7e3a362e1c45885c94"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["f55287c70f41272745a56bdc3efa9ebb800a83b1","71e1a70f18d64b93db3ef618e606d6df5062f747"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["71e1a70f18d64b93db3ef618e606d6df5062f747"]},"commit2Childs":{"71e1a70f18d64b93db3ef618e606d6df5062f747":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cfc45818441587d8004ff1a119fb60ac9ecb9a14":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"f55287c70f41272745a56bdc3efa9ebb800a83b1":["71e1a70f18d64b93db3ef618e606d6df5062f747","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["399d5903979ca52514d2bc7e3a362e1c45885c94"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["057a1793765d068ea9302f1a29e21734ee58d41e"],"399d5903979ca52514d2bc7e3a362e1c45885c94":["c14aed69f37b57db63b1fccc0740b17060a08f2b"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["cfc45818441587d8004ff1a119fb60ac9ecb9a14"],"057a1793765d068ea9302f1a29e21734ee58d41e":["f55287c70f41272745a56bdc3efa9ebb800a83b1"],"c14aed69f37b57db63b1fccc0740b17060a08f2b":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}