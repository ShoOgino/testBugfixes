{"path":"lucene/core/src/test/org/apache/lucene/search/TestPointQueries#testBasicDoubles().mjava","commits":[{"id":"ebfbe42b2dae57f9ac08706e76b0ab8bdf7011c8","date":1456349953,"type":0,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestPointQueries#testBasicDoubles().mjava","pathOld":"/dev/null","sourceNew":"  public void testBasicDoubles() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(new MockAnalyzer(random())));\n\n    Document doc = new Document();\n    doc.add(new DoublePoint(\"point\", -7.0));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new DoublePoint(\"point\", 0.0));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new DoublePoint(\"point\", 3.0));\n    w.addDocument(doc);\n\n    DirectoryReader r = DirectoryReader.open(w);\n    IndexSearcher s = new IndexSearcher(r);\n    assertEquals(2, s.count(DoublePoint.newRangeQuery(\"point\", -8.0, false, 1.0, false)));\n    assertEquals(3, s.count(DoublePoint.newRangeQuery(\"point\", -7.0, true, 3.0, true)));\n    assertEquals(1, s.count(DoublePoint.newExactQuery(\"point\", -7.0)));\n    assertEquals(0, s.count(DoublePoint.newExactQuery(\"point\", -6.0)));\n    w.close();\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["1800b996d8677670482a071dcb7a48b08c423ace"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"868f63baffb79407d4b49f3c0be8dc4725ffc6e1","date":1456423715,"type":0,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestPointQueries#testBasicDoubles().mjava","pathOld":"/dev/null","sourceNew":"  public void testBasicDoubles() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(new MockAnalyzer(random())));\n\n    Document doc = new Document();\n    doc.add(new DoublePoint(\"point\", -7.0));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new DoublePoint(\"point\", 0.0));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new DoublePoint(\"point\", 3.0));\n    w.addDocument(doc);\n\n    DirectoryReader r = DirectoryReader.open(w);\n    IndexSearcher s = new IndexSearcher(r);\n    assertEquals(2, s.count(DoublePoint.newRangeQuery(\"point\", -8.0, false, 1.0, false)));\n    assertEquals(3, s.count(DoublePoint.newRangeQuery(\"point\", -7.0, true, 3.0, true)));\n    assertEquals(1, s.count(DoublePoint.newExactQuery(\"point\", -7.0)));\n    assertEquals(0, s.count(DoublePoint.newExactQuery(\"point\", -6.0)));\n    w.close();\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1800b996d8677670482a071dcb7a48b08c423ace","date":1456955558,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestPointQueries#testBasicDoubles().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestPointQueries#testBasicDoubles().mjava","sourceNew":"  public void testBasicDoubles() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(new MockAnalyzer(random())));\n\n    Document doc = new Document();\n    doc.add(new DoublePoint(\"point\", -7.0));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new DoublePoint(\"point\", 0.0));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new DoublePoint(\"point\", 3.0));\n    w.addDocument(doc);\n\n    DirectoryReader r = DirectoryReader.open(w);\n    IndexSearcher s = new IndexSearcher(r);\n    assertEquals(2, s.count(DoublePoint.newRangeQuery(\"point\", -8.0, 1.0)));\n    assertEquals(3, s.count(DoublePoint.newRangeQuery(\"point\", -7.0, 3.0)));\n    assertEquals(1, s.count(DoublePoint.newExactQuery(\"point\", -7.0)));\n    assertEquals(0, s.count(DoublePoint.newExactQuery(\"point\", -6.0)));\n    w.close();\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testBasicDoubles() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(new MockAnalyzer(random())));\n\n    Document doc = new Document();\n    doc.add(new DoublePoint(\"point\", -7.0));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new DoublePoint(\"point\", 0.0));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new DoublePoint(\"point\", 3.0));\n    w.addDocument(doc);\n\n    DirectoryReader r = DirectoryReader.open(w);\n    IndexSearcher s = new IndexSearcher(r);\n    assertEquals(2, s.count(DoublePoint.newRangeQuery(\"point\", -8.0, false, 1.0, false)));\n    assertEquals(3, s.count(DoublePoint.newRangeQuery(\"point\", -7.0, true, 3.0, true)));\n    assertEquals(1, s.count(DoublePoint.newExactQuery(\"point\", -7.0)));\n    assertEquals(0, s.count(DoublePoint.newExactQuery(\"point\", -6.0)));\n    w.close();\n    r.close();\n    dir.close();\n  }\n\n","bugFix":["ebfbe42b2dae57f9ac08706e76b0ab8bdf7011c8"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c422e924212367b334b4938f1fd3e44438e88c40","date":1456962933,"type":3,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestPointQueries#testBasicDoubles().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestPointQueries#testBasicDoubles().mjava","sourceNew":"  public void testBasicDoubles() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(new MockAnalyzer(random())));\n\n    Document doc = new Document();\n    doc.add(new DoublePoint(\"point\", -7.0));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new DoublePoint(\"point\", 0.0));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new DoublePoint(\"point\", 3.0));\n    w.addDocument(doc);\n\n    DirectoryReader r = DirectoryReader.open(w);\n    IndexSearcher s = new IndexSearcher(r);\n    assertEquals(2, s.count(DoublePoint.newRangeQuery(\"point\", -8.0, 1.0)));\n    assertEquals(3, s.count(DoublePoint.newRangeQuery(\"point\", -7.0, 3.0)));\n    assertEquals(1, s.count(DoublePoint.newExactQuery(\"point\", -7.0)));\n    assertEquals(0, s.count(DoublePoint.newExactQuery(\"point\", -6.0)));\n    w.close();\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testBasicDoubles() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(new MockAnalyzer(random())));\n\n    Document doc = new Document();\n    doc.add(new DoublePoint(\"point\", -7.0));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new DoublePoint(\"point\", 0.0));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new DoublePoint(\"point\", 3.0));\n    w.addDocument(doc);\n\n    DirectoryReader r = DirectoryReader.open(w);\n    IndexSearcher s = new IndexSearcher(r);\n    assertEquals(2, s.count(DoublePoint.newRangeQuery(\"point\", -8.0, false, 1.0, false)));\n    assertEquals(3, s.count(DoublePoint.newRangeQuery(\"point\", -7.0, true, 3.0, true)));\n    assertEquals(1, s.count(DoublePoint.newExactQuery(\"point\", -7.0)));\n    assertEquals(0, s.count(DoublePoint.newExactQuery(\"point\", -6.0)));\n    w.close();\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cf1a614098b46c9c22afebd7b898ae4d1d2fc273","date":1457088850,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestPointQueries#testBasicDoubles().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestPointQueries#testBasicDoubles().mjava","sourceNew":"  public void testBasicDoubles() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(new MockAnalyzer(random())));\n\n    Document doc = new Document();\n    doc.add(new DoublePoint(\"point\", -7.0));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new DoublePoint(\"point\", 0.0));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new DoublePoint(\"point\", 3.0));\n    w.addDocument(doc);\n\n    DirectoryReader r = DirectoryReader.open(w);\n    IndexSearcher s = new IndexSearcher(r);\n    assertEquals(2, s.count(DoublePoint.newRangeQuery(\"point\", -8.0, 1.0)));\n    assertEquals(3, s.count(DoublePoint.newRangeQuery(\"point\", -7.0, 3.0)));\n    assertEquals(1, s.count(DoublePoint.newExactQuery(\"point\", -7.0)));\n    assertEquals(0, s.count(DoublePoint.newExactQuery(\"point\", -6.0)));\n    w.close();\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testBasicDoubles() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, new IndexWriterConfig(new MockAnalyzer(random())));\n\n    Document doc = new Document();\n    doc.add(new DoublePoint(\"point\", -7.0));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new DoublePoint(\"point\", 0.0));\n    w.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new DoublePoint(\"point\", 3.0));\n    w.addDocument(doc);\n\n    DirectoryReader r = DirectoryReader.open(w);\n    IndexSearcher s = new IndexSearcher(r);\n    assertEquals(2, s.count(DoublePoint.newRangeQuery(\"point\", -8.0, false, 1.0, false)));\n    assertEquals(3, s.count(DoublePoint.newRangeQuery(\"point\", -7.0, true, 3.0, true)));\n    assertEquals(1, s.count(DoublePoint.newExactQuery(\"point\", -7.0)));\n    assertEquals(0, s.count(DoublePoint.newExactQuery(\"point\", -6.0)));\n    w.close();\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ebfbe42b2dae57f9ac08706e76b0ab8bdf7011c8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"868f63baffb79407d4b49f3c0be8dc4725ffc6e1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ebfbe42b2dae57f9ac08706e76b0ab8bdf7011c8"],"cf1a614098b46c9c22afebd7b898ae4d1d2fc273":["868f63baffb79407d4b49f3c0be8dc4725ffc6e1","c422e924212367b334b4938f1fd3e44438e88c40"],"c422e924212367b334b4938f1fd3e44438e88c40":["868f63baffb79407d4b49f3c0be8dc4725ffc6e1","1800b996d8677670482a071dcb7a48b08c423ace"],"1800b996d8677670482a071dcb7a48b08c423ace":["868f63baffb79407d4b49f3c0be8dc4725ffc6e1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["cf1a614098b46c9c22afebd7b898ae4d1d2fc273"]},"commit2Childs":{"ebfbe42b2dae57f9ac08706e76b0ab8bdf7011c8":["868f63baffb79407d4b49f3c0be8dc4725ffc6e1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ebfbe42b2dae57f9ac08706e76b0ab8bdf7011c8","868f63baffb79407d4b49f3c0be8dc4725ffc6e1"],"868f63baffb79407d4b49f3c0be8dc4725ffc6e1":["cf1a614098b46c9c22afebd7b898ae4d1d2fc273","c422e924212367b334b4938f1fd3e44438e88c40","1800b996d8677670482a071dcb7a48b08c423ace"],"cf1a614098b46c9c22afebd7b898ae4d1d2fc273":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c422e924212367b334b4938f1fd3e44438e88c40":["cf1a614098b46c9c22afebd7b898ae4d1d2fc273"],"1800b996d8677670482a071dcb7a48b08c423ace":["c422e924212367b334b4938f1fd3e44438e88c40"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}