{"path":"lucene/core/src/test/org/apache/lucene/search/TestPhraseQuery#testToString().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestPhraseQuery#testToString().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestPhraseQuery#testToString().mjava","sourceNew":"  public void testToString() throws Exception {\n    PhraseQuery q = new PhraseQuery(); // Query \"this hi this is a test is\"\n    q.add(new Term(\"field\", \"hi\"), 1);\n    q.add(new Term(\"field\", \"test\"), 5);\n    \n    assertEquals(\"field:\\\"? hi ? ? ? test\\\"\", q.toString());\n    q.add(new Term(\"field\", \"hello\"), 1);\n    assertEquals(\"field:\\\"? hi|hello ? ? ? test\\\"\", q.toString());\n  }\n\n","sourceOld":"  public void testToString() throws Exception {\n    PhraseQuery q = new PhraseQuery(); // Query \"this hi this is a test is\"\n    q.add(new Term(\"field\", \"hi\"), 1);\n    q.add(new Term(\"field\", \"test\"), 5);\n    \n    assertEquals(\"field:\\\"? hi ? ? ? test\\\"\", q.toString());\n    q.add(new Term(\"field\", \"hello\"), 1);\n    assertEquals(\"field:\\\"? hi|hello ? ? ? test\\\"\", q.toString());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6fb5dc223475059e18daa29ecbc9ee827971f72c","date":1424359649,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestPhraseQuery#testToString().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestPhraseQuery#testToString().mjava","sourceNew":"  public void testToString() throws Exception {\n    PhraseQuery q = new PhraseQuery();\n    assertEquals(\"\\\"\\\"\", q.toString());\n\n    q.add(new Term(\"field\", \"hi\"), 1);\n    assertEquals(\"field:\\\"? hi\\\"\", q.toString());\n\n    q = new PhraseQuery(); // Query \"this hi this is a test is\"\n    q.add(new Term(\"field\", \"hi\"), 1);\n    q.add(new Term(\"field\", \"test\"), 5);\n    \n    assertEquals(\"field:\\\"? hi ? ? ? test\\\"\", q.toString());\n\n    q = new PhraseQuery();\n    q.add(new Term(\"field\", \"hi\"), 1);\n    q.add(new Term(\"field\", \"hello\"), 1);\n    q.add(new Term(\"field\", \"test\"), 5);\n    assertEquals(\"field:\\\"? hi|hello ? ? ? test\\\"\", q.toString());\n\n    q.setSlop(5);\n    assertEquals(\"field:\\\"? hi|hello ? ? ? test\\\"~5\", q.toString());\n\n    q.setBoost(2);\n    assertEquals(\"field:\\\"? hi|hello ? ? ? test\\\"~5^2.0\", q.toString());\n  }\n\n","sourceOld":"  public void testToString() throws Exception {\n    PhraseQuery q = new PhraseQuery(); // Query \"this hi this is a test is\"\n    q.add(new Term(\"field\", \"hi\"), 1);\n    q.add(new Term(\"field\", \"test\"), 5);\n    \n    assertEquals(\"field:\\\"? hi ? ? ? test\\\"\", q.toString());\n    q.add(new Term(\"field\", \"hello\"), 1);\n    assertEquals(\"field:\\\"? hi|hello ? ? ? test\\\"\", q.toString());\n  }\n\n","bugFix":["112629f1dfd1451722c6047bcf593e6efc96f5f4"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9e1499c5d26c936238506df90a3c02c76707722","date":1434449920,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestPhraseQuery#testToString().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestPhraseQuery#testToString().mjava","sourceNew":"  public void testToString() throws Exception {\n    PhraseQuery q = new PhraseQuery(\"field\", new String[0]);\n    assertEquals(\"\\\"\\\"\", q.toString());\n\n    PhraseQuery.Builder builder = new PhraseQuery.Builder();\n    builder.add(new Term(\"field\", \"hi\"), 1);\n    q = builder.build();\n    assertEquals(\"field:\\\"? hi\\\"\", q.toString());\n\n    \n    builder = new PhraseQuery.Builder();\n    builder.add(new Term(\"field\", \"hi\"), 1);\n    builder.add(new Term(\"field\", \"test\"), 5);\n    q = builder.build(); // Query \"this hi this is a test is\"\n\n    assertEquals(\"field:\\\"? hi ? ? ? test\\\"\", q.toString());\n\n    builder = new PhraseQuery.Builder();\n    builder.add(new Term(\"field\", \"hi\"), 1);\n    builder.add(new Term(\"field\", \"hello\"), 1);\n    builder.add(new Term(\"field\", \"test\"), 5);\n    q = builder.build();\n    assertEquals(\"field:\\\"? hi|hello ? ? ? test\\\"\", q.toString());\n\n    builder = new PhraseQuery.Builder();\n    builder.add(new Term(\"field\", \"hi\"), 1);\n    builder.add(new Term(\"field\", \"hello\"), 1);\n    builder.add(new Term(\"field\", \"test\"), 5);\n    builder.setSlop(5);\n    q = builder.build();\n    assertEquals(\"field:\\\"? hi|hello ? ? ? test\\\"~5\", q.toString());\n\n    q.setBoost(2);\n    assertEquals(\"field:\\\"? hi|hello ? ? ? test\\\"~5^2.0\", q.toString());\n  }\n\n","sourceOld":"  public void testToString() throws Exception {\n    PhraseQuery q = new PhraseQuery();\n    assertEquals(\"\\\"\\\"\", q.toString());\n\n    q.add(new Term(\"field\", \"hi\"), 1);\n    assertEquals(\"field:\\\"? hi\\\"\", q.toString());\n\n    q = new PhraseQuery(); // Query \"this hi this is a test is\"\n    q.add(new Term(\"field\", \"hi\"), 1);\n    q.add(new Term(\"field\", \"test\"), 5);\n    \n    assertEquals(\"field:\\\"? hi ? ? ? test\\\"\", q.toString());\n\n    q = new PhraseQuery();\n    q.add(new Term(\"field\", \"hi\"), 1);\n    q.add(new Term(\"field\", \"hello\"), 1);\n    q.add(new Term(\"field\", \"test\"), 5);\n    assertEquals(\"field:\\\"? hi|hello ? ? ? test\\\"\", q.toString());\n\n    q.setSlop(5);\n    assertEquals(\"field:\\\"? hi|hello ? ? ? test\\\"~5\", q.toString());\n\n    q.setBoost(2);\n    assertEquals(\"field:\\\"? hi|hello ? ? ? test\\\"~5^2.0\", q.toString());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2dfdf766e55e943d942055d7de53c7ad6bc45283","date":1441632886,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestPhraseQuery#testToString().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestPhraseQuery#testToString().mjava","sourceNew":"  public void testToString() throws Exception {\n    PhraseQuery q = new PhraseQuery(\"field\", new String[0]);\n    assertEquals(\"\\\"\\\"\", q.toString());\n\n    PhraseQuery.Builder builder = new PhraseQuery.Builder();\n    builder.add(new Term(\"field\", \"hi\"), 1);\n    q = builder.build();\n    assertEquals(\"field:\\\"? hi\\\"\", q.toString());\n\n    \n    builder = new PhraseQuery.Builder();\n    builder.add(new Term(\"field\", \"hi\"), 1);\n    builder.add(new Term(\"field\", \"test\"), 5);\n    q = builder.build(); // Query \"this hi this is a test is\"\n\n    assertEquals(\"field:\\\"? hi ? ? ? test\\\"\", q.toString());\n\n    builder = new PhraseQuery.Builder();\n    builder.add(new Term(\"field\", \"hi\"), 1);\n    builder.add(new Term(\"field\", \"hello\"), 1);\n    builder.add(new Term(\"field\", \"test\"), 5);\n    q = builder.build();\n    assertEquals(\"field:\\\"? hi|hello ? ? ? test\\\"\", q.toString());\n\n    builder = new PhraseQuery.Builder();\n    builder.add(new Term(\"field\", \"hi\"), 1);\n    builder.add(new Term(\"field\", \"hello\"), 1);\n    builder.add(new Term(\"field\", \"test\"), 5);\n    builder.setSlop(5);\n    q = builder.build();\n    assertEquals(\"field:\\\"? hi|hello ? ? ? test\\\"~5\", q.toString());\n  }\n\n","sourceOld":"  public void testToString() throws Exception {\n    PhraseQuery q = new PhraseQuery(\"field\", new String[0]);\n    assertEquals(\"\\\"\\\"\", q.toString());\n\n    PhraseQuery.Builder builder = new PhraseQuery.Builder();\n    builder.add(new Term(\"field\", \"hi\"), 1);\n    q = builder.build();\n    assertEquals(\"field:\\\"? hi\\\"\", q.toString());\n\n    \n    builder = new PhraseQuery.Builder();\n    builder.add(new Term(\"field\", \"hi\"), 1);\n    builder.add(new Term(\"field\", \"test\"), 5);\n    q = builder.build(); // Query \"this hi this is a test is\"\n\n    assertEquals(\"field:\\\"? hi ? ? ? test\\\"\", q.toString());\n\n    builder = new PhraseQuery.Builder();\n    builder.add(new Term(\"field\", \"hi\"), 1);\n    builder.add(new Term(\"field\", \"hello\"), 1);\n    builder.add(new Term(\"field\", \"test\"), 5);\n    q = builder.build();\n    assertEquals(\"field:\\\"? hi|hello ? ? ? test\\\"\", q.toString());\n\n    builder = new PhraseQuery.Builder();\n    builder.add(new Term(\"field\", \"hi\"), 1);\n    builder.add(new Term(\"field\", \"hello\"), 1);\n    builder.add(new Term(\"field\", \"test\"), 5);\n    builder.setSlop(5);\n    q = builder.build();\n    assertEquals(\"field:\\\"? hi|hello ? ? ? test\\\"~5\", q.toString());\n\n    q.setBoost(2);\n    assertEquals(\"field:\\\"? hi|hello ? ? ? test\\\"~5^2.0\", q.toString());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e9e1499c5d26c936238506df90a3c02c76707722":["6fb5dc223475059e18daa29ecbc9ee827971f72c"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2dfdf766e55e943d942055d7de53c7ad6bc45283":["e9e1499c5d26c936238506df90a3c02c76707722"],"6fb5dc223475059e18daa29ecbc9ee827971f72c":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2dfdf766e55e943d942055d7de53c7ad6bc45283"]},"commit2Childs":{"e9e1499c5d26c936238506df90a3c02c76707722":["2dfdf766e55e943d942055d7de53c7ad6bc45283"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["6fb5dc223475059e18daa29ecbc9ee827971f72c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"2dfdf766e55e943d942055d7de53c7ad6bc45283":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"6fb5dc223475059e18daa29ecbc9ee827971f72c":["e9e1499c5d26c936238506df90a3c02c76707722"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}