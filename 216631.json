{"path":"solr/core/src/java/org/apache/solr/search/join/GraphPointsCollector#addEdgeIdsToResult(int).mjava","commits":[{"id":"487de3f55283f58d7e02a16993f8be55bbe32061","date":1502123368,"type":1,"author":"yonik","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/join/GraphPointsCollector#addEdgeIdsToResult(int).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/join/GraphPointsCollector[GraphTermsCollector]#addEdgeIdsToResult(int).mjava","sourceNew":"  @Override\n  void addEdgeIdsToResult(int doc) throws IOException {\n    // set the doc to pull the edges ids for.\n    int valuesDoc = values.docID();\n    if (valuesDoc < doc) {\n      valuesDoc = values.advance(doc);\n    }\n    if (valuesDoc == doc) {\n      int count = values.docValueCount();\n      for (int i = 0; i < count; i++) {\n        long v = values.nextValue();\n        set.add(v);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  void addEdgeIdsToResult(int doc) throws IOException {\n    // set the doc to pull the edges ids for.\n    int valuesDoc = values.docID();\n    if (valuesDoc < doc) {\n      valuesDoc = values.advance(doc);\n    }\n    if (valuesDoc == doc) {\n      int count = values.docValueCount();\n      for (int i = 0; i < count; i++) {\n        long v = values.nextValue();\n        set.add(v);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7a23cf16c8fa265dc0a564adcabb55e3f054e0ac","date":1502192746,"type":0,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/join/GraphPointsCollector#addEdgeIdsToResult(int).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  void addEdgeIdsToResult(int doc) throws IOException {\n    // set the doc to pull the edges ids for.\n    int valuesDoc = values.docID();\n    if (valuesDoc < doc) {\n      valuesDoc = values.advance(doc);\n    }\n    if (valuesDoc == doc) {\n      int count = values.docValueCount();\n      for (int i = 0; i < count; i++) {\n        long v = values.nextValue();\n        set.add(v);\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"58884af1f68e9d61c217c753fbd6266d86a63b14","date":1502363401,"type":1,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/join/GraphPointsCollector#addEdgeIdsToResult(int).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/join/GraphPointsCollector[GraphTermsCollector]#addEdgeIdsToResult(int).mjava","sourceNew":"  @Override\n  void addEdgeIdsToResult(int doc) throws IOException {\n    // set the doc to pull the edges ids for.\n    int valuesDoc = values.docID();\n    if (valuesDoc < doc) {\n      valuesDoc = values.advance(doc);\n    }\n    if (valuesDoc == doc) {\n      int count = values.docValueCount();\n      for (int i = 0; i < count; i++) {\n        long v = values.nextValue();\n        set.add(v);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  void addEdgeIdsToResult(int doc) throws IOException {\n    // set the doc to pull the edges ids for.\n    int valuesDoc = values.docID();\n    if (valuesDoc < doc) {\n      valuesDoc = values.advance(doc);\n    }\n    if (valuesDoc == doc) {\n      int count = values.docValueCount();\n      for (int i = 0; i < count; i++) {\n        long v = values.nextValue();\n        set.add(v);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"677081274af275e5542f60ea1611826c49f04213","date":1505842785,"type":3,"author":"yonik","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/join/GraphPointsCollector#addEdgeIdsToResult(int).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/join/GraphPointsCollector#addEdgeIdsToResult(int).mjava","sourceNew":"  @Override\n  void addEdgeIdsToResult(int doc) throws IOException {\n    // set the doc to pull the edges ids for.\n    int valuesDoc = values.docID();\n    if (valuesDoc < doc) {\n      valuesDoc = values.advance(doc);\n    }\n    if (valuesDoc == doc) {\n      int count = values.docValueCount();\n      for (int i = 0; i < count; i++) {\n        // duplicates may be produced for a single doc, but won't matter here.\n        long v = values.nextValue();\n        set.add(v);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  void addEdgeIdsToResult(int doc) throws IOException {\n    // set the doc to pull the edges ids for.\n    int valuesDoc = values.docID();\n    if (valuesDoc < doc) {\n      valuesDoc = values.advance(doc);\n    }\n    if (valuesDoc == doc) {\n      int count = values.docValueCount();\n      for (int i = 0; i < count; i++) {\n        long v = values.nextValue();\n        set.add(v);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"04af4a840c8f501ba34e09e382b8f8ace82aa51e","date":1505847466,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/join/GraphPointsCollector#addEdgeIdsToResult(int).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/join/GraphPointsCollector#addEdgeIdsToResult(int).mjava","sourceNew":"  @Override\n  void addEdgeIdsToResult(int doc) throws IOException {\n    // set the doc to pull the edges ids for.\n    int valuesDoc = values.docID();\n    if (valuesDoc < doc) {\n      valuesDoc = values.advance(doc);\n    }\n    if (valuesDoc == doc) {\n      int count = values.docValueCount();\n      for (int i = 0; i < count; i++) {\n        // duplicates may be produced for a single doc, but won't matter here.\n        long v = values.nextValue();\n        set.add(v);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  void addEdgeIdsToResult(int doc) throws IOException {\n    // set the doc to pull the edges ids for.\n    int valuesDoc = values.docID();\n    if (valuesDoc < doc) {\n      valuesDoc = values.advance(doc);\n    }\n    if (valuesDoc == doc) {\n      int count = values.docValueCount();\n      for (int i = 0; i < count; i++) {\n        long v = values.nextValue();\n        set.add(v);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7a23cf16c8fa265dc0a564adcabb55e3f054e0ac":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","487de3f55283f58d7e02a16993f8be55bbe32061"],"58884af1f68e9d61c217c753fbd6266d86a63b14":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","487de3f55283f58d7e02a16993f8be55bbe32061"],"04af4a840c8f501ba34e09e382b8f8ace82aa51e":["7a23cf16c8fa265dc0a564adcabb55e3f054e0ac","677081274af275e5542f60ea1611826c49f04213"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"487de3f55283f58d7e02a16993f8be55bbe32061":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["677081274af275e5542f60ea1611826c49f04213"],"677081274af275e5542f60ea1611826c49f04213":["487de3f55283f58d7e02a16993f8be55bbe32061"]},"commit2Childs":{"7a23cf16c8fa265dc0a564adcabb55e3f054e0ac":["04af4a840c8f501ba34e09e382b8f8ace82aa51e"],"58884af1f68e9d61c217c753fbd6266d86a63b14":[],"04af4a840c8f501ba34e09e382b8f8ace82aa51e":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7a23cf16c8fa265dc0a564adcabb55e3f054e0ac","58884af1f68e9d61c217c753fbd6266d86a63b14","487de3f55283f58d7e02a16993f8be55bbe32061"],"487de3f55283f58d7e02a16993f8be55bbe32061":["7a23cf16c8fa265dc0a564adcabb55e3f054e0ac","58884af1f68e9d61c217c753fbd6266d86a63b14","677081274af275e5542f60ea1611826c49f04213"],"677081274af275e5542f60ea1611826c49f04213":["04af4a840c8f501ba34e09e382b8f8ace82aa51e","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["58884af1f68e9d61c217c753fbd6266d86a63b14","04af4a840c8f501ba34e09e382b8f8ace82aa51e","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}