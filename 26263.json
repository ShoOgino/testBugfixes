{"path":"lucene/core/src/java/org/apache/lucene/search/FieldValueFilter#getDocIdSet(LeafReaderContext,Bits).mjava","commits":[{"id":"c9fb5f46e264daf5ba3860defe623a89d202dd87","date":1411516315,"type":0,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/FieldValueFilter#getDocIdSet(LeafReaderContext,Bits).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public DocIdSet getDocIdSet(LeafReaderContext context, Bits acceptDocs)\n      throws IOException {\n    final Bits docsWithField = DocValues.getDocsWithField(\n        context.reader(), field);\n    if (negate) {\n      if (docsWithField instanceof MatchAllBits) {\n        return null;\n      }\n      return new DocValuesDocIdSet(context.reader().maxDoc(), acceptDocs) {\n        @Override\n        protected final boolean matchDoc(int doc) {\n          return !docsWithField.get(doc);\n        }\n      };\n    } else {\n      if (docsWithField instanceof MatchNoBits) {\n        return null;\n      }\n      if (docsWithField instanceof DocIdSet) {\n        // UweSays: this is always the case for our current impl - but who knows\n        // :-)\n        return BitsFilteredDocIdSet.wrap((DocIdSet) docsWithField, acceptDocs);\n      }\n      return new DocValuesDocIdSet(context.reader().maxDoc(), acceptDocs) {\n        @Override\n        protected final boolean matchDoc(int doc) {\n          return docsWithField.get(doc);\n        }\n      };\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["5864882f6163c513e490c855adeb66eff0a9988e"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5864882f6163c513e490c855adeb66eff0a9988e","date":1415178293,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/FieldValueFilter#getDocIdSet(LeafReaderContext,Bits).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/FieldValueFilter#getDocIdSet(LeafReaderContext,Bits).mjava","sourceNew":"  @Override\n  public DocIdSet getDocIdSet(LeafReaderContext context, Bits acceptDocs)\n      throws IOException {\n    final Bits docsWithField = DocValues.getDocsWithField(\n        context.reader(), field);\n    if (negate) {\n      if (docsWithField instanceof MatchAllBits) {\n        return null;\n      }\n      return new DocValuesDocIdSet(context.reader().maxDoc(), acceptDocs) {\n        @Override\n        protected final boolean matchDoc(int doc) {\n          return !docsWithField.get(doc);\n        }\n      };\n    } else {\n      if (docsWithField instanceof MatchNoBits) {\n        return null;\n      }\n      if (docsWithField instanceof BitSet) {\n        // UweSays: this is always the case for our current impl - but who knows\n        // :-)\n        return BitsFilteredDocIdSet.wrap(new BitDocIdSet((BitSet) docsWithField), acceptDocs);\n      }\n      return new DocValuesDocIdSet(context.reader().maxDoc(), acceptDocs) {\n        @Override\n        protected final boolean matchDoc(int doc) {\n          return docsWithField.get(doc);\n        }\n      };\n    }\n  }\n\n","sourceOld":"  @Override\n  public DocIdSet getDocIdSet(LeafReaderContext context, Bits acceptDocs)\n      throws IOException {\n    final Bits docsWithField = DocValues.getDocsWithField(\n        context.reader(), field);\n    if (negate) {\n      if (docsWithField instanceof MatchAllBits) {\n        return null;\n      }\n      return new DocValuesDocIdSet(context.reader().maxDoc(), acceptDocs) {\n        @Override\n        protected final boolean matchDoc(int doc) {\n          return !docsWithField.get(doc);\n        }\n      };\n    } else {\n      if (docsWithField instanceof MatchNoBits) {\n        return null;\n      }\n      if (docsWithField instanceof DocIdSet) {\n        // UweSays: this is always the case for our current impl - but who knows\n        // :-)\n        return BitsFilteredDocIdSet.wrap((DocIdSet) docsWithField, acceptDocs);\n      }\n      return new DocValuesDocIdSet(context.reader().maxDoc(), acceptDocs) {\n        @Override\n        protected final boolean matchDoc(int doc) {\n          return docsWithField.get(doc);\n        }\n      };\n    }\n  }\n\n","bugFix":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"484e80062d7ab2729bc82f0311d6a97dd913961a","date":1424450206,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/search/FieldValueFilter#getDocIdSet(LeafReaderContext,Bits).mjava","sourceNew":null,"sourceOld":"  @Override\n  public DocIdSet getDocIdSet(LeafReaderContext context, Bits acceptDocs)\n      throws IOException {\n    final Bits docsWithField = DocValues.getDocsWithField(\n        context.reader(), field);\n    if (negate) {\n      if (docsWithField instanceof MatchAllBits) {\n        return null;\n      }\n      return new DocValuesDocIdSet(context.reader().maxDoc(), acceptDocs) {\n        @Override\n        protected final boolean matchDoc(int doc) {\n          return !docsWithField.get(doc);\n        }\n      };\n    } else {\n      if (docsWithField instanceof MatchNoBits) {\n        return null;\n      }\n      if (docsWithField instanceof BitSet) {\n        // UweSays: this is always the case for our current impl - but who knows\n        // :-)\n        return BitsFilteredDocIdSet.wrap(new BitDocIdSet((BitSet) docsWithField), acceptDocs);\n      }\n      return new DocValuesDocIdSet(context.reader().maxDoc(), acceptDocs) {\n        @Override\n        protected final boolean matchDoc(int doc) {\n          return docsWithField.get(doc);\n        }\n      };\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5864882f6163c513e490c855adeb66eff0a9988e":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"484e80062d7ab2729bc82f0311d6a97dd913961a":["5864882f6163c513e490c855adeb66eff0a9988e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["484e80062d7ab2729bc82f0311d6a97dd913961a"]},"commit2Childs":{"5864882f6163c513e490c855adeb66eff0a9988e":["484e80062d7ab2729bc82f0311d6a97dd913961a"],"484e80062d7ab2729bc82f0311d6a97dd913961a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["5864882f6163c513e490c855adeb66eff0a9988e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}