{"path":"lucene/core/src/test/org/apache/lucene/index/TestReaderClosed#test().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestReaderClosed#test().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestReaderClosed#test().mjava","sourceNew":"  public void test() throws Exception {\n    TermRangeQuery query = TermRangeQuery.newStringRange(\"field\", \"a\", \"z\", true, true);\n    searcher.search(query, 5);\n    reader.close();\n    try {\n      searcher.search(query, 5);\n    } catch (AlreadyClosedException ace) {\n      // expected\n    }\n  }\n\n","sourceOld":"  public void test() throws Exception {\n    TermRangeQuery query = TermRangeQuery.newStringRange(\"field\", \"a\", \"z\", true, true);\n    searcher.search(query, 5);\n    reader.close();\n    try {\n      searcher.search(query, 5);\n    } catch (AlreadyClosedException ace) {\n      // expected\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a2a81b3988dfbdfb187c425043b89868e359b238","date":1329919075,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestReaderClosed#test().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestReaderClosed#test().mjava","sourceNew":"  public void test() throws Exception {\n    assertTrue(reader.getRefCount() > 0);\n    IndexSearcher searcher = newSearcher(reader);\n    TermRangeQuery query = TermRangeQuery.newStringRange(\"field\", \"a\", \"z\", true, true);\n    searcher.search(query, 5);\n    reader.close();\n    try {\n      searcher.search(query, 5);\n    } catch (AlreadyClosedException ace) {\n      // expected\n    }\n  }\n\n","sourceOld":"  public void test() throws Exception {\n    TermRangeQuery query = TermRangeQuery.newStringRange(\"field\", \"a\", \"z\", true, true);\n    searcher.search(query, 5);\n    reader.close();\n    try {\n      searcher.search(query, 5);\n    } catch (AlreadyClosedException ace) {\n      // expected\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","date":1331075828,"type":3,"author":"Ryan McKinley","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestReaderClosed#test().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestReaderClosed#test().mjava","sourceNew":"  public void test() throws Exception {\n    assertTrue(reader.getRefCount() > 0);\n    IndexSearcher searcher = newSearcher(reader);\n    TermRangeQuery query = TermRangeQuery.newStringRange(\"field\", \"a\", \"z\", true, true);\n    searcher.search(query, 5);\n    reader.close();\n    try {\n      searcher.search(query, 5);\n    } catch (AlreadyClosedException ace) {\n      // expected\n    }\n  }\n\n","sourceOld":"  public void test() throws Exception {\n    TermRangeQuery query = TermRangeQuery.newStringRange(\"field\", \"a\", \"z\", true, true);\n    searcher.search(query, 5);\n    reader.close();\n    try {\n      searcher.search(query, 5);\n    } catch (AlreadyClosedException ace) {\n      // expected\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4794390efb2baf35034d35222edc9ef5594783a5","date":1412086858,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestReaderClosed#test().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestReaderClosed#test().mjava","sourceNew":"  public void test() throws Exception {\n    assertTrue(reader.getRefCount() > 0);\n    IndexSearcher searcher = newSearcher(reader);\n    TermRangeQuery query = TermRangeQuery.newStringRange(\"field\", \"a\", \"z\", true, true);\n    searcher.search(query, 5);\n    reader.close();\n    try {\n      searcher.search(query, 5);\n    } catch (AlreadyClosedException ace) {\n      // expected\n    } catch (RejectedExecutionException ree) {\n      // expected if the searcher has been created with threads since LuceneTestCase\n      // closes the thread-pool in a reader close listener\n    }\n  }\n\n","sourceOld":"  public void test() throws Exception {\n    assertTrue(reader.getRefCount() > 0);\n    IndexSearcher searcher = newSearcher(reader);\n    TermRangeQuery query = TermRangeQuery.newStringRange(\"field\", \"a\", \"z\", true, true);\n    searcher.search(query, 5);\n    reader.close();\n    try {\n      searcher.search(query, 5);\n    } catch (AlreadyClosedException ace) {\n      // expected\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d9a47902d6207303f5ed3e7aaca62ca33433af66","date":1412435312,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestReaderClosed#test().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestReaderClosed#test().mjava","sourceNew":"  public void test() throws Exception {\n    assertTrue(reader.getRefCount() > 0);\n    IndexSearcher searcher = newSearcher(reader);\n    TermRangeQuery query = TermRangeQuery.newStringRange(\"field\", \"a\", \"z\", true, true);\n    searcher.search(query, 5);\n    reader.close();\n    try {\n      searcher.search(query, 5);\n    } catch (AlreadyClosedException ace) {\n      // expected\n    } catch (RejectedExecutionException ree) {\n      // expected if the searcher has been created with threads since LuceneTestCase\n      // closes the thread-pool in a reader close listener\n    }\n  }\n\n","sourceOld":"  public void test() throws Exception {\n    assertTrue(reader.getRefCount() > 0);\n    IndexSearcher searcher = newSearcher(reader);\n    TermRangeQuery query = TermRangeQuery.newStringRange(\"field\", \"a\", \"z\", true, true);\n    searcher.search(query, 5);\n    reader.close();\n    try {\n      searcher.search(query, 5);\n    } catch (AlreadyClosedException ace) {\n      // expected\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","a2a81b3988dfbdfb187c425043b89868e359b238"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d9a47902d6207303f5ed3e7aaca62ca33433af66":["a2a81b3988dfbdfb187c425043b89868e359b238","4794390efb2baf35034d35222edc9ef5594783a5"],"a2a81b3988dfbdfb187c425043b89868e359b238":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4794390efb2baf35034d35222edc9ef5594783a5"],"4794390efb2baf35034d35222edc9ef5594783a5":["a2a81b3988dfbdfb187c425043b89868e359b238"]},"commit2Childs":{"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":[],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","a2a81b3988dfbdfb187c425043b89868e359b238"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"d9a47902d6207303f5ed3e7aaca62ca33433af66":[],"a2a81b3988dfbdfb187c425043b89868e359b238":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","d9a47902d6207303f5ed3e7aaca62ca33433af66","4794390efb2baf35034d35222edc9ef5594783a5"],"4794390efb2baf35034d35222edc9ef5594783a5":["d9a47902d6207303f5ed3e7aaca62ca33433af66","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","d9a47902d6207303f5ed3e7aaca62ca33433af66","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}