{"path":"src/java/org/apache/lucene/index/DocumentWriter#writeNorms(Document,String).mjava","commits":[{"id":"91109046a59c58ee0ee5d0d2767b08d1f30d6702","date":1000830588,"type":0,"author":"Jason van Zyl","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/DocumentWriter#writeNorms(Document,String).mjava","pathOld":"/dev/null","sourceNew":"  private final void writeNorms(Document doc, String segment)\n       throws IOException {\n    Enumeration fields  = doc.fields();\n    while (fields.hasMoreElements()) {\n      Field field = (Field)fields.nextElement();\n      if (field.isIndexed()) {\n\tint fieldNumber = fieldInfos.fieldNumber(field.name());\n\tOutputStream norm = directory.createFile(segment + \".f\" + fieldNumber);\n\ttry {\n\t  norm.writeByte(Similarity.norm(fieldLengths[fieldNumber]));\n\t} finally {\n\t  norm.close();\n\t}\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"14aec0a40da5a9c26f8752701a5aa10f78f5017d","date":1027969875,"type":3,"author":"Doug Cutting","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/DocumentWriter#writeNorms(Document,String).mjava","pathOld":"src/java/org/apache/lucene/index/DocumentWriter#writeNorms(Document,String).mjava","sourceNew":"  private final void writeNorms(Document doc, String segment)\n       throws IOException {\n    Enumeration fields  = doc.fields();\n    while (fields.hasMoreElements()) {\n      Field field = (Field)fields.nextElement();\n      if (field.isIndexed()) {\n\tint n = fieldInfos.fieldNumber(field.name());\n        float norm =\n          fieldBoosts[n] * Similarity.normalizeLength(fieldLengths[n]);\n\tOutputStream norms = directory.createFile(segment + \".f\" + n);\n\ttry {\n\t  norms.writeByte(Similarity.encodeNorm(norm));\n\t} finally {\n\t  norms.close();\n\t}\n      }\n    }\n  }\n\n","sourceOld":"  private final void writeNorms(Document doc, String segment)\n       throws IOException {\n    Enumeration fields  = doc.fields();\n    while (fields.hasMoreElements()) {\n      Field field = (Field)fields.nextElement();\n      if (field.isIndexed()) {\n\tint fieldNumber = fieldInfos.fieldNumber(field.name());\n\tOutputStream norm = directory.createFile(segment + \".f\" + fieldNumber);\n\ttry {\n\t  norm.writeByte(Similarity.norm(fieldLengths[fieldNumber]));\n\t} finally {\n\t  norm.close();\n\t}\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6f5efa46fb27648cd98137d9898d819e115911bc","date":1036690287,"type":3,"author":"Doug Cutting","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/DocumentWriter#writeNorms(Document,String).mjava","pathOld":"src/java/org/apache/lucene/index/DocumentWriter#writeNorms(Document,String).mjava","sourceNew":"  private final void writeNorms(Document doc, String segment)\n       throws IOException {\n    Enumeration fields  = doc.fields();\n    while (fields.hasMoreElements()) {\n      Field field = (Field)fields.nextElement();\n      if (field.isIndexed()) {\n\tint n = fieldInfos.fieldNumber(field.name());\n        float norm =\n          fieldBoosts[n] * similarity.lengthNorm(field.name(),fieldLengths[n]);\n\tOutputStream norms = directory.createFile(segment + \".f\" + n);\n\ttry {\n\t  norms.writeByte(similarity.encodeNorm(norm));\n\t} finally {\n\t  norms.close();\n\t}\n      }\n    }\n  }\n\n","sourceOld":"  private final void writeNorms(Document doc, String segment)\n       throws IOException {\n    Enumeration fields  = doc.fields();\n    while (fields.hasMoreElements()) {\n      Field field = (Field)fields.nextElement();\n      if (field.isIndexed()) {\n\tint n = fieldInfos.fieldNumber(field.name());\n        float norm =\n          fieldBoosts[n] * Similarity.normalizeLength(fieldLengths[n]);\n\tOutputStream norms = directory.createFile(segment + \".f\" + n);\n\ttry {\n\t  norms.writeByte(Similarity.encodeNorm(norm));\n\t} finally {\n\t  norms.close();\n\t}\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"66f8ac981e8707cfae011613a8168a2edeb0b6e3","date":1064079760,"type":3,"author":"Erik Hatcher","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/DocumentWriter#writeNorms(Document,String).mjava","pathOld":"src/java/org/apache/lucene/index/DocumentWriter#writeNorms(Document,String).mjava","sourceNew":"  private final void writeNorms(Document doc, String segment)\n    throws IOException {\n    Enumeration fields = doc.fields();\n    while (fields.hasMoreElements()) {\n      Field field = (Field) fields.nextElement();\n      if (field.isIndexed()) {\n        int n = fieldInfos.fieldNumber(field.name());\n        float norm =\n          fieldBoosts[n] * similarity.lengthNorm(field.name(), fieldLengths[n]);\n        OutputStream norms = directory.createFile(segment + \".f\" + n);\n        try {\n          norms.writeByte(similarity.encodeNorm(norm));\n        } finally {\n          norms.close();\n        }\n      }\n    }\n  }\n\n","sourceOld":"  private final void writeNorms(Document doc, String segment)\n       throws IOException {\n    Enumeration fields  = doc.fields();\n    while (fields.hasMoreElements()) {\n      Field field = (Field)fields.nextElement();\n      if (field.isIndexed()) {\n\tint n = fieldInfos.fieldNumber(field.name());\n        float norm =\n          fieldBoosts[n] * similarity.lengthNorm(field.name(),fieldLengths[n]);\n\tOutputStream norms = directory.createFile(segment + \".f\" + n);\n\ttry {\n\t  norms.writeByte(similarity.encodeNorm(norm));\n\t} finally {\n\t  norms.close();\n\t}\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2ef9d8f446efc33e4fc919333c39cd20410ffa11","date":1072129218,"type":3,"author":"Doug Cutting","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/DocumentWriter#writeNorms(Document,String).mjava","pathOld":"src/java/org/apache/lucene/index/DocumentWriter#writeNorms(Document,String).mjava","sourceNew":"  private final void writeNorms(Document doc, String segment)\n    throws IOException {\n    Enumeration fields = doc.fields();\n    while (fields.hasMoreElements()) {\n      Field field = (Field) fields.nextElement();\n      if (field.isIndexed()) {\n        int n = fieldInfos.fieldNumber(field.name());\n        float norm =\n          fieldBoosts[n] * similarity.lengthNorm(field.name(),fieldLengths[n]);\n        OutputStream norms = directory.createFile(segment + \".f\" + n);\n        try {\n          norms.writeByte(similarity.encodeNorm(norm));\n        } finally {\n          norms.close();\n        }\n      }\n    }\n  }\n\n","sourceOld":"  private final void writeNorms(Document doc, String segment)\n    throws IOException {\n    Enumeration fields = doc.fields();\n    while (fields.hasMoreElements()) {\n      Field field = (Field) fields.nextElement();\n      if (field.isIndexed()) {\n        int n = fieldInfos.fieldNumber(field.name());\n        float norm =\n          fieldBoosts[n] * similarity.lengthNorm(field.name(), fieldLengths[n]);\n        OutputStream norms = directory.createFile(segment + \".f\" + n);\n        try {\n          norms.writeByte(similarity.encodeNorm(norm));\n        } finally {\n          norms.close();\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"770281b8a8459cafcdd2354b6a06078fea2d83c9","date":1077308096,"type":3,"author":"Doug Cutting","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/DocumentWriter#writeNorms(Document,String).mjava","pathOld":"src/java/org/apache/lucene/index/DocumentWriter#writeNorms(Document,String).mjava","sourceNew":"  private final void writeNorms(Document doc, String segment)\n          throws IOException {\n    Enumeration fields = doc.fields();\n    while (fields.hasMoreElements()) {\n      Field field = (Field) fields.nextElement();\n      if (field.isIndexed()) {\n        int n = fieldInfos.fieldNumber(field.name());\n        float norm =\n                fieldBoosts[n] * similarity.lengthNorm(field.name(), fieldLengths[n]);\n        OutputStream norms = directory.createFile(segment + \".f\" + n);\n        try {\n          norms.writeByte(similarity.encodeNorm(norm));\n        } finally {\n          norms.close();\n        }\n      }\n    }\n  }\n\n","sourceOld":"  private final void writeNorms(Document doc, String segment)\n    throws IOException {\n    Enumeration fields = doc.fields();\n    while (fields.hasMoreElements()) {\n      Field field = (Field) fields.nextElement();\n      if (field.isIndexed()) {\n        int n = fieldInfos.fieldNumber(field.name());\n        float norm =\n          fieldBoosts[n] * similarity.lengthNorm(field.name(),fieldLengths[n]);\n        OutputStream norms = directory.createFile(segment + \".f\" + n);\n        try {\n          norms.writeByte(similarity.encodeNorm(norm));\n        } finally {\n          norms.close();\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1541510f043418067d6b48b13886ed6262c18036","date":1082110520,"type":3,"author":"Christoph Goller","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/DocumentWriter#writeNorms(Document,String).mjava","pathOld":"src/java/org/apache/lucene/index/DocumentWriter#writeNorms(Document,String).mjava","sourceNew":"  private final void writeNorms(Document doc, String segment) throws IOException { \n    for(int n = 0; n < fieldInfos.size(); n++){\n      FieldInfo fi = fieldInfos.fieldInfo(n);\n      if(fi.isIndexed){\n        float norm = fieldBoosts[n] * similarity.lengthNorm(fi.name, fieldLengths[n]);\n        OutputStream norms = directory.createFile(segment + \".f\" + n);\n        try {\n          norms.writeByte(similarity.encodeNorm(norm));\n        } finally {\n          norms.close();\n        }\n      }\n    }\n  }\n\n","sourceOld":"  private final void writeNorms(Document doc, String segment)\n          throws IOException {\n    Enumeration fields = doc.fields();\n    while (fields.hasMoreElements()) {\n      Field field = (Field) fields.nextElement();\n      if (field.isIndexed()) {\n        int n = fieldInfos.fieldNumber(field.name());\n        float norm =\n                fieldBoosts[n] * similarity.lengthNorm(field.name(), fieldLengths[n]);\n        OutputStream norms = directory.createFile(segment + \".f\" + n);\n        try {\n          norms.writeByte(similarity.encodeNorm(norm));\n        } finally {\n          norms.close();\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b76c8ed2fba08f733855ee9091d1ee24d960f8fe","date":1089440341,"type":3,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/DocumentWriter#writeNorms(Document,String).mjava","pathOld":"src/java/org/apache/lucene/index/DocumentWriter#writeNorms(Document,String).mjava","sourceNew":"  private final void writeNorms(Document doc, String segment) throws IOException { \n    for(int n = 0; n < fieldInfos.size(); n++){\n      FieldInfo fi = fieldInfos.fieldInfo(n);\n      if(fi.isIndexed){\n        float norm = fieldBoosts[n] * similarity.lengthNorm(fi.name, fieldLengths[n]);\n        OutputStream norms = directory.createFile(segment + \".f\" + n);\n        try {\n          norms.writeByte(Similarity.encodeNorm(norm));\n        } finally {\n          norms.close();\n        }\n      }\n    }\n  }\n\n","sourceOld":"  private final void writeNorms(Document doc, String segment) throws IOException { \n    for(int n = 0; n < fieldInfos.size(); n++){\n      FieldInfo fi = fieldInfos.fieldInfo(n);\n      if(fi.isIndexed){\n        float norm = fieldBoosts[n] * similarity.lengthNorm(fi.name, fieldLengths[n]);\n        OutputStream norms = directory.createFile(segment + \".f\" + n);\n        try {\n          norms.writeByte(similarity.encodeNorm(norm));\n        } finally {\n          norms.close();\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dda77265180d41bf85c84c995e25eda7b8e1b74d","date":1096395352,"type":3,"author":"Doug Cutting","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/DocumentWriter#writeNorms(Document,String).mjava","pathOld":"src/java/org/apache/lucene/index/DocumentWriter#writeNorms(Document,String).mjava","sourceNew":"  private final void writeNorms(Document doc, String segment) throws IOException { \n    for(int n = 0; n < fieldInfos.size(); n++){\n      FieldInfo fi = fieldInfos.fieldInfo(n);\n      if(fi.isIndexed){\n        float norm = fieldBoosts[n] * similarity.lengthNorm(fi.name, fieldLengths[n]);\n        IndexOutput norms = directory.createOutput(segment + \".f\" + n);\n        try {\n          norms.writeByte(Similarity.encodeNorm(norm));\n        } finally {\n          norms.close();\n        }\n      }\n    }\n  }\n\n","sourceOld":"  private final void writeNorms(Document doc, String segment) throws IOException { \n    for(int n = 0; n < fieldInfos.size(); n++){\n      FieldInfo fi = fieldInfos.fieldInfo(n);\n      if(fi.isIndexed){\n        float norm = fieldBoosts[n] * similarity.lengthNorm(fi.name, fieldLengths[n]);\n        OutputStream norms = directory.createFile(segment + \".f\" + n);\n        try {\n          norms.writeByte(Similarity.encodeNorm(norm));\n        } finally {\n          norms.close();\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6177f0f28ace66d1538b1e6ac5f1773e5449a0b0","date":1096997448,"type":5,"author":"Christoph Goller","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/DocumentWriter#writeNorms(String).mjava","pathOld":"src/java/org/apache/lucene/index/DocumentWriter#writeNorms(Document,String).mjava","sourceNew":"  private final void writeNorms(String segment) throws IOException { \n    for(int n = 0; n < fieldInfos.size(); n++){\n      FieldInfo fi = fieldInfos.fieldInfo(n);\n      if(fi.isIndexed){\n        float norm = fieldBoosts[n] * similarity.lengthNorm(fi.name, fieldLengths[n]);\n        IndexOutput norms = directory.createOutput(segment + \".f\" + n);\n        try {\n          norms.writeByte(Similarity.encodeNorm(norm));\n        } finally {\n          norms.close();\n        }\n      }\n    }\n  }\n\n","sourceOld":"  private final void writeNorms(Document doc, String segment) throws IOException { \n    for(int n = 0; n < fieldInfos.size(); n++){\n      FieldInfo fi = fieldInfos.fieldInfo(n);\n      if(fi.isIndexed){\n        float norm = fieldBoosts[n] * similarity.lengthNorm(fi.name, fieldLengths[n]);\n        IndexOutput norms = directory.createOutput(segment + \".f\" + n);\n        try {\n          norms.writeByte(Similarity.encodeNorm(norm));\n        } finally {\n          norms.close();\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"770281b8a8459cafcdd2354b6a06078fea2d83c9":["2ef9d8f446efc33e4fc919333c39cd20410ffa11"],"14aec0a40da5a9c26f8752701a5aa10f78f5017d":["91109046a59c58ee0ee5d0d2767b08d1f30d6702"],"91109046a59c58ee0ee5d0d2767b08d1f30d6702":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"1541510f043418067d6b48b13886ed6262c18036":["770281b8a8459cafcdd2354b6a06078fea2d83c9"],"2ef9d8f446efc33e4fc919333c39cd20410ffa11":["66f8ac981e8707cfae011613a8168a2edeb0b6e3"],"dda77265180d41bf85c84c995e25eda7b8e1b74d":["b76c8ed2fba08f733855ee9091d1ee24d960f8fe"],"b76c8ed2fba08f733855ee9091d1ee24d960f8fe":["1541510f043418067d6b48b13886ed6262c18036"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6177f0f28ace66d1538b1e6ac5f1773e5449a0b0":["dda77265180d41bf85c84c995e25eda7b8e1b74d"],"6f5efa46fb27648cd98137d9898d819e115911bc":["14aec0a40da5a9c26f8752701a5aa10f78f5017d"],"66f8ac981e8707cfae011613a8168a2edeb0b6e3":["6f5efa46fb27648cd98137d9898d819e115911bc"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6177f0f28ace66d1538b1e6ac5f1773e5449a0b0"]},"commit2Childs":{"770281b8a8459cafcdd2354b6a06078fea2d83c9":["1541510f043418067d6b48b13886ed6262c18036"],"14aec0a40da5a9c26f8752701a5aa10f78f5017d":["6f5efa46fb27648cd98137d9898d819e115911bc"],"91109046a59c58ee0ee5d0d2767b08d1f30d6702":["14aec0a40da5a9c26f8752701a5aa10f78f5017d"],"1541510f043418067d6b48b13886ed6262c18036":["b76c8ed2fba08f733855ee9091d1ee24d960f8fe"],"2ef9d8f446efc33e4fc919333c39cd20410ffa11":["770281b8a8459cafcdd2354b6a06078fea2d83c9"],"dda77265180d41bf85c84c995e25eda7b8e1b74d":["6177f0f28ace66d1538b1e6ac5f1773e5449a0b0"],"b76c8ed2fba08f733855ee9091d1ee24d960f8fe":["dda77265180d41bf85c84c995e25eda7b8e1b74d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["91109046a59c58ee0ee5d0d2767b08d1f30d6702"],"6177f0f28ace66d1538b1e6ac5f1773e5449a0b0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"6f5efa46fb27648cd98137d9898d819e115911bc":["66f8ac981e8707cfae011613a8168a2edeb0b6e3"],"66f8ac981e8707cfae011613a8168a2edeb0b6e3":["2ef9d8f446efc33e4fc919333c39cd20410ffa11"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}