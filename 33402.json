{"path":"solr/core/src/test/org/apache/hadoop/http/HttpServer2#bindForSinglePort(ServerConnector,int).mjava","commits":[{"id":"99b97f030e743d8dd4d7685202f71718d7e5af22","date":1548957620,"type":0,"author":"markrmiller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/hadoop/http/HttpServer2#bindForSinglePort(ServerConnector,int).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Bind using single configured port. If findPort is true, we will try to bind\n   * after incrementing port till a free port is found.\n   * @param listener jetty listener.\n   * @param port port which is set in the listener.\n   * @throws Exception exception on binding\n   */\n  private void bindForSinglePort(ServerConnector listener, int port)\n      throws Exception {\n    while (true) {\n      try {\n        bindListener(listener);\n        break;\n      } catch (BindException ex) {\n        if (port == 0 || !findPort) {\n          throw constructBindException(listener, ex);\n        }\n      }\n      // try the next port number\n      listener.setPort(++port);\n      Thread.sleep(100);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"34b74c124d68d8e306d6ef09624f3cd053b8a2fd","date":1548981962,"type":4,"author":"Kevin Risden","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/hadoop/http/HttpServer2#bindForSinglePort(ServerConnector,int).mjava","sourceNew":null,"sourceOld":"  /**\n   * Bind using single configured port. If findPort is true, we will try to bind\n   * after incrementing port till a free port is found.\n   * @param listener jetty listener.\n   * @param port port which is set in the listener.\n   * @throws Exception exception on binding\n   */\n  private void bindForSinglePort(ServerConnector listener, int port)\n      throws Exception {\n    while (true) {\n      try {\n        bindListener(listener);\n        break;\n      } catch (BindException ex) {\n        if (port == 0 || !findPort) {\n          throw constructBindException(listener, ex);\n        }\n      }\n      // try the next port number\n      listener.setPort(++port);\n      Thread.sleep(100);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"44ca189138a5b6e1989d12ab992fab60e235ddc7","date":1549051496,"type":0,"author":"markrmiller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/hadoop/http/HttpServer2#bindForSinglePort(ServerConnector,int).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Bind using single configured port. If findPort is true, we will try to bind\n   * after incrementing port till a free port is found.\n   * @param listener jetty listener.\n   * @param port port which is set in the listener.\n   * @throws Exception exception on binding\n   */\n  private void bindForSinglePort(ServerConnector listener, int port)\n      throws Exception {\n    while (true) {\n      try {\n        bindListener(listener);\n        break;\n      } catch (BindException ex) {\n        if (port == 0 || !findPort) {\n          throw constructBindException(listener, ex);\n        }\n      }\n      // try the next port number\n      listener.setPort(++port);\n      Thread.sleep(100);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"34b74c124d68d8e306d6ef09624f3cd053b8a2fd":["99b97f030e743d8dd4d7685202f71718d7e5af22"],"99b97f030e743d8dd4d7685202f71718d7e5af22":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"44ca189138a5b6e1989d12ab992fab60e235ddc7":["34b74c124d68d8e306d6ef09624f3cd053b8a2fd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["44ca189138a5b6e1989d12ab992fab60e235ddc7"]},"commit2Childs":{"34b74c124d68d8e306d6ef09624f3cd053b8a2fd":["44ca189138a5b6e1989d12ab992fab60e235ddc7"],"99b97f030e743d8dd4d7685202f71718d7e5af22":["34b74c124d68d8e306d6ef09624f3cd053b8a2fd"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["99b97f030e743d8dd4d7685202f71718d7e5af22"],"44ca189138a5b6e1989d12ab992fab60e235ddc7":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}