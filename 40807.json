{"path":"lucene/core/src/java/org/apache/lucene/search/TopDocsCollector#topDocs(int).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/TopDocsCollector#topDocs(int).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/TopDocsCollector#topDocs(int).mjava","sourceNew":"  /**\n   * Returns the documents in the rage [start .. pq.size()) that were collected\n   * by this collector. Note that if start >= pq.size(), an empty TopDocs is\n   * returned.<br>\n   * This method is convenient to call if the application always asks for the\n   * last results, starting from the last 'page'.<br>\n   * <b>NOTE:</b> you cannot call this method more than once for each search\n   * execution. If you need to call it more than once, passing each time a\n   * different <code>start</code>, you should call {@link #topDocs()} and work\n   * with the returned {@link TopDocs} object, which will contain all the\n   * results this search execution collected.\n   */\n  public TopDocs topDocs(int start) {\n    // In case pq was populated with sentinel values, there might be less\n    // results than pq.size(). Therefore return all results until either\n    // pq.size() or totalHits.\n    return topDocs(start, topDocsSize());\n  }\n\n","sourceOld":"  /**\n   * Returns the documents in the rage [start .. pq.size()) that were collected\n   * by this collector. Note that if start >= pq.size(), an empty TopDocs is\n   * returned.<br>\n   * This method is convenient to call if the application always asks for the\n   * last results, starting from the last 'page'.<br>\n   * <b>NOTE:</b> you cannot call this method more than once for each search\n   * execution. If you need to call it more than once, passing each time a\n   * different <code>start</code>, you should call {@link #topDocs()} and work\n   * with the returned {@link TopDocs} object, which will contain all the\n   * results this search execution collected.\n   */\n  public TopDocs topDocs(int start) {\n    // In case pq was populated with sentinel values, there might be less\n    // results than pq.size(). Therefore return all results until either\n    // pq.size() or totalHits.\n    return topDocs(start, topDocsSize());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b1eb427f2c6beed80d1724555fc1db003ccf3030","date":1417137397,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/TopDocsCollector#topDocs(int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/TopDocsCollector#topDocs(int).mjava","sourceNew":"  /**\n   * Returns the documents in the range [start .. pq.size()) that were collected\n   * by this collector. Note that if {@code start >= pq.size()}, an empty TopDocs is\n   * returned.<br>\n   * This method is convenient to call if the application always asks for the\n   * last results, starting from the last 'page'.<br>\n   * <b>NOTE:</b> you cannot call this method more than once for each search\n   * execution. If you need to call it more than once, passing each time a\n   * different <code>start</code>, you should call {@link #topDocs()} and work\n   * with the returned {@link TopDocs} object, which will contain all the\n   * results this search execution collected.\n   */\n  public TopDocs topDocs(int start) {\n    // In case pq was populated with sentinel values, there might be less\n    // results than pq.size(). Therefore return all results until either\n    // pq.size() or totalHits.\n    return topDocs(start, topDocsSize());\n  }\n\n","sourceOld":"  /**\n   * Returns the documents in the rage [start .. pq.size()) that were collected\n   * by this collector. Note that if start >= pq.size(), an empty TopDocs is\n   * returned.<br>\n   * This method is convenient to call if the application always asks for the\n   * last results, starting from the last 'page'.<br>\n   * <b>NOTE:</b> you cannot call this method more than once for each search\n   * execution. If you need to call it more than once, passing each time a\n   * different <code>start</code>, you should call {@link #topDocs()} and work\n   * with the returned {@link TopDocs} object, which will contain all the\n   * results this search execution collected.\n   */\n  public TopDocs topDocs(int start) {\n    // In case pq was populated with sentinel values, there might be less\n    // results than pq.size(). Therefore return all results until either\n    // pq.size() or totalHits.\n    return topDocs(start, topDocsSize());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b1eb427f2c6beed80d1724555fc1db003ccf3030":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b1eb427f2c6beed80d1724555fc1db003ccf3030"]},"commit2Childs":{"b1eb427f2c6beed80d1724555fc1db003ccf3030":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["b1eb427f2c6beed80d1724555fc1db003ccf3030"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}