{"path":"src/java/org/apache/solr/search/CacheConfig#getConfig(SolrConfig,Node).mjava","commits":[{"id":"94fdcbef0182cbb32b3519de6a3d7d4d7bcb11d7","date":1189312484,"type":1,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/search/CacheConfig#getConfig(SolrConfig,Node).mjava","pathOld":"src/java/org/apache/solr/search/CacheConfig#getConfig(Node).mjava","sourceNew":"  public static CacheConfig getConfig(SolrConfig solrConfig, Node node) {\n    if (node==null) return null;\n    CacheConfig config = new CacheConfig();\n    config.nodeName = node.getNodeName();\n    config.args = DOMUtil.toMap(node.getAttributes());\n    String nameAttr = (String)config.args.get(\"name\");  // OPTIONAL\n    if (nameAttr==null) {\n      config.args.put(\"name\",config.nodeName);\n    }\n\n    config.cacheImpl = (String)config.args.get(\"class\");\n    config.regenImpl = (String)config.args.get(\"regenerator\");\n    config.clazz = solrConfig.findClass(config.cacheImpl);\n    if (config.regenImpl != null) {\n      config.regenerator = (CacheRegenerator) solrConfig.newInstance(config.regenImpl);\n    }\n\n\n    return config;\n  }\n\n","sourceOld":"  public static CacheConfig getConfig(Node node) {\n    if (node==null) return null;\n    CacheConfig config = new CacheConfig();\n    config.nodeName = node.getNodeName();\n    config.args = DOMUtil.toMap(node.getAttributes());\n    String nameAttr = (String)config.args.get(\"name\");  // OPTIONAL\n    if (nameAttr==null) {\n      config.args.put(\"name\",config.nodeName);\n    }\n\n    config.cacheImpl = (String)config.args.get(\"class\");\n    config.regenImpl = (String)config.args.get(\"regenerator\");\n    config.clazz = Config.findClass(config.cacheImpl);\n    if (config.regenImpl != null) {\n      config.regenerator = (CacheRegenerator) Config.newInstance(config.regenImpl);\n    }\n\n\n    return config;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fcf52a7da226d8d3756cc8bf9f3ae1f39952b014","date":1195912306,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/search/CacheConfig#getConfig(SolrConfig,Node).mjava","pathOld":"src/java/org/apache/solr/search/CacheConfig#getConfig(SolrConfig,Node).mjava","sourceNew":"  public static CacheConfig getConfig(SolrConfig solrConfig, Node node) {\n    if (node==null) return null;\n    CacheConfig config = new CacheConfig();\n    config.nodeName = node.getNodeName();\n    config.args = DOMUtil.toMap(node.getAttributes());\n    String nameAttr = (String)config.args.get(\"name\");  // OPTIONAL\n    if (nameAttr==null) {\n      config.args.put(\"name\",config.nodeName);\n    }\n\n    SolrResourceLoader loader = solrConfig.getResourceLoader();\n    config.cacheImpl = (String)config.args.get(\"class\");\n    config.regenImpl = (String)config.args.get(\"regenerator\");\n    config.clazz = loader.findClass(config.cacheImpl);\n    if (config.regenImpl != null) {\n      config.regenerator = (CacheRegenerator) loader.newInstance(config.regenImpl);\n    }\n    \n    return config;\n  }\n\n","sourceOld":"  public static CacheConfig getConfig(SolrConfig solrConfig, Node node) {\n    if (node==null) return null;\n    CacheConfig config = new CacheConfig();\n    config.nodeName = node.getNodeName();\n    config.args = DOMUtil.toMap(node.getAttributes());\n    String nameAttr = (String)config.args.get(\"name\");  // OPTIONAL\n    if (nameAttr==null) {\n      config.args.put(\"name\",config.nodeName);\n    }\n\n    config.cacheImpl = (String)config.args.get(\"class\");\n    config.regenImpl = (String)config.args.get(\"regenerator\");\n    config.clazz = solrConfig.findClass(config.cacheImpl);\n    if (config.regenImpl != null) {\n      config.regenerator = (CacheRegenerator) solrConfig.newInstance(config.regenImpl);\n    }\n\n\n    return config;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"69acec0c1c784d54f33dc4424de6f736d4f52cca","date":1253874298,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"src/java/org/apache/solr/search/CacheConfig#getConfig(SolrConfig,Node).mjava","pathOld":"src/java/org/apache/solr/search/CacheConfig#getConfig(SolrConfig,Node).mjava","sourceNew":"  public static CacheConfig getConfig(SolrConfig solrConfig, Node node) {\n    if (node==null) return null;\n    CacheConfig config = new CacheConfig();\n    config.nodeName = node.getNodeName();\n    config.args = DOMUtil.toMap(node.getAttributes());\n    String nameAttr = config.args.get(\"name\");  // OPTIONAL\n    if (nameAttr==null) {\n      config.args.put(\"name\",config.nodeName);\n    }\n\n    SolrResourceLoader loader = solrConfig.getResourceLoader();\n    config.cacheImpl = config.args.get(\"class\");\n    config.regenImpl = config.args.get(\"regenerator\");\n    config.clazz = loader.findClass(config.cacheImpl);\n    if (config.regenImpl != null) {\n      config.regenerator = (CacheRegenerator) loader.newInstance(config.regenImpl);\n    }\n    \n    return config;\n  }\n\n","sourceOld":"  public static CacheConfig getConfig(SolrConfig solrConfig, Node node) {\n    if (node==null) return null;\n    CacheConfig config = new CacheConfig();\n    config.nodeName = node.getNodeName();\n    config.args = DOMUtil.toMap(node.getAttributes());\n    String nameAttr = (String)config.args.get(\"name\");  // OPTIONAL\n    if (nameAttr==null) {\n      config.args.put(\"name\",config.nodeName);\n    }\n\n    SolrResourceLoader loader = solrConfig.getResourceLoader();\n    config.cacheImpl = (String)config.args.get(\"class\");\n    config.regenImpl = (String)config.args.get(\"regenerator\");\n    config.clazz = loader.findClass(config.cacheImpl);\n    if (config.regenImpl != null) {\n      config.regenerator = (CacheRegenerator) loader.newInstance(config.regenImpl);\n    }\n    \n    return config;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/search/CacheConfig#getConfig(SolrConfig,Node).mjava","pathOld":"src/java/org/apache/solr/search/CacheConfig#getConfig(SolrConfig,Node).mjava","sourceNew":"  public static CacheConfig getConfig(SolrConfig solrConfig, Node node) {\n    if (node==null) return null;\n    CacheConfig config = new CacheConfig();\n    config.nodeName = node.getNodeName();\n    config.args = DOMUtil.toMap(node.getAttributes());\n    String nameAttr = config.args.get(\"name\");  // OPTIONAL\n    if (nameAttr==null) {\n      config.args.put(\"name\",config.nodeName);\n    }\n\n    SolrResourceLoader loader = solrConfig.getResourceLoader();\n    config.cacheImpl = config.args.get(\"class\");\n    config.regenImpl = config.args.get(\"regenerator\");\n    config.clazz = loader.findClass(config.cacheImpl);\n    if (config.regenImpl != null) {\n      config.regenerator = (CacheRegenerator) loader.newInstance(config.regenImpl);\n    }\n    \n    return config;\n  }\n\n","sourceOld":"  public static CacheConfig getConfig(SolrConfig solrConfig, Node node) {\n    if (node==null) return null;\n    CacheConfig config = new CacheConfig();\n    config.nodeName = node.getNodeName();\n    config.args = DOMUtil.toMap(node.getAttributes());\n    String nameAttr = config.args.get(\"name\");  // OPTIONAL\n    if (nameAttr==null) {\n      config.args.put(\"name\",config.nodeName);\n    }\n\n    SolrResourceLoader loader = solrConfig.getResourceLoader();\n    config.cacheImpl = config.args.get(\"class\");\n    config.regenImpl = config.args.get(\"regenerator\");\n    config.clazz = loader.findClass(config.cacheImpl);\n    if (config.regenImpl != null) {\n      config.regenerator = (CacheRegenerator) loader.newInstance(config.regenImpl);\n    }\n    \n    return config;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"69acec0c1c784d54f33dc4424de6f736d4f52cca":["fcf52a7da226d8d3756cc8bf9f3ae1f39952b014"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["69acec0c1c784d54f33dc4424de6f736d4f52cca"],"fcf52a7da226d8d3756cc8bf9f3ae1f39952b014":["94fdcbef0182cbb32b3519de6a3d7d4d7bcb11d7"],"94fdcbef0182cbb32b3519de6a3d7d4d7bcb11d7":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"69acec0c1c784d54f33dc4424de6f736d4f52cca":["ad94625fb8d088209f46650c8097196fec67f00c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["94fdcbef0182cbb32b3519de6a3d7d4d7bcb11d7"],"fcf52a7da226d8d3756cc8bf9f3ae1f39952b014":["69acec0c1c784d54f33dc4424de6f736d4f52cca"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"94fdcbef0182cbb32b3519de6a3d7d4d7bcb11d7":["fcf52a7da226d8d3756cc8bf9f3ae1f39952b014"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}