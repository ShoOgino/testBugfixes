{"path":"lucene/src/test/org/apache/lucene/index/TestFieldsReader#setUp().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestFieldsReader#setUp().mjava","pathOld":"src/test/org/apache/lucene/index/TestFieldsReader#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    fieldInfos = new FieldInfos();\n    DocHelper.setupDoc(testDoc);\n    fieldInfos.add(testDoc);\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n    ((LogMergePolicy) writer.getMergePolicy()).setUseCompoundFile(false);\n    ((LogMergePolicy) writer.getMergePolicy()).setUseCompoundDocStore(false);\n    writer.addDocument(testDoc);\n    writer.close();\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    fieldInfos = new FieldInfos();\n    DocHelper.setupDoc(testDoc);\n    fieldInfos.add(testDoc);\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n    ((LogMergePolicy) writer.getMergePolicy()).setUseCompoundFile(false);\n    ((LogMergePolicy) writer.getMergePolicy()).setUseCompoundDocStore(false);\n    writer.addDocument(testDoc);\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7ab99e8c71442b92c320e218141dee04a9b91ce8","date":1269203801,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestFieldsReader#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestFieldsReader#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    fieldInfos = new FieldInfos();\n    DocHelper.setupDoc(testDoc);\n    fieldInfos.add(testDoc);\n    IndexWriterConfig conf = new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT));\n    ((LogMergePolicy) conf.getMergePolicy()).setUseCompoundFile(false);\n    ((LogMergePolicy) conf.getMergePolicy()).setUseCompoundDocStore(false);\n    IndexWriter writer = new IndexWriter(dir, conf);\n    writer.addDocument(testDoc);\n    writer.close();\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    fieldInfos = new FieldInfos();\n    DocHelper.setupDoc(testDoc);\n    fieldInfos.add(testDoc);\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)));\n    ((LogMergePolicy) writer.getMergePolicy()).setUseCompoundFile(false);\n    ((LogMergePolicy) writer.getMergePolicy()).setUseCompoundDocStore(false);\n    writer.addDocument(testDoc);\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d572389229127c297dd1fa5ce4758e1cec41e799","date":1273610938,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestFieldsReader#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestFieldsReader#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    fieldInfos = new FieldInfos();\n    DocHelper.setupDoc(testDoc);\n    fieldInfos.add(testDoc);\n    IndexWriterConfig conf = new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer());\n    ((LogMergePolicy) conf.getMergePolicy()).setUseCompoundFile(false);\n    ((LogMergePolicy) conf.getMergePolicy()).setUseCompoundDocStore(false);\n    IndexWriter writer = new IndexWriter(dir, conf);\n    writer.addDocument(testDoc);\n    writer.close();\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    fieldInfos = new FieldInfos();\n    DocHelper.setupDoc(testDoc);\n    fieldInfos.add(testDoc);\n    IndexWriterConfig conf = new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT));\n    ((LogMergePolicy) conf.getMergePolicy()).setUseCompoundFile(false);\n    ((LogMergePolicy) conf.getMergePolicy()).setUseCompoundDocStore(false);\n    IndexWriter writer = new IndexWriter(dir, conf);\n    writer.addDocument(testDoc);\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8dc26bfa5ebbc55b5a04fbec545dfcec647b046b","date":1280297653,"type":3,"author":"Michael Busch","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestFieldsReader#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestFieldsReader#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    fieldInfos = new FieldInfos();\n    DocHelper.setupDoc(testDoc);\n    fieldInfos.add(testDoc);\n    IndexWriterConfig conf = new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer());\n    ((LogMergePolicy) conf.getMergePolicy()).setUseCompoundFile(false);\n    IndexWriter writer = new IndexWriter(dir, conf);\n    writer.addDocument(testDoc);\n    writer.close();\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    fieldInfos = new FieldInfos();\n    DocHelper.setupDoc(testDoc);\n    fieldInfos.add(testDoc);\n    IndexWriterConfig conf = new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer());\n    ((LogMergePolicy) conf.getMergePolicy()).setUseCompoundFile(false);\n    ((LogMergePolicy) conf.getMergePolicy()).setUseCompoundDocStore(false);\n    IndexWriter writer = new IndexWriter(dir, conf);\n    writer.addDocument(testDoc);\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b21422ff1d1d56499dec481f193b402e5e8def5b","date":1281472367,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestFieldsReader#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestFieldsReader#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    fieldInfos = new FieldInfos();\n    DocHelper.setupDoc(testDoc);\n    fieldInfos.add(testDoc);\n    random = newRandom();\n    IndexWriterConfig conf = newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer());\n    ((LogMergePolicy) conf.getMergePolicy()).setUseCompoundFile(false);\n    ((LogMergePolicy) conf.getMergePolicy()).setUseCompoundDocStore(false);\n    IndexWriter writer = new IndexWriter(dir, conf);\n    writer.addDocument(testDoc);\n    writer.close();\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    fieldInfos = new FieldInfos();\n    DocHelper.setupDoc(testDoc);\n    fieldInfos.add(testDoc);\n    IndexWriterConfig conf = new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer());\n    ((LogMergePolicy) conf.getMergePolicy()).setUseCompoundFile(false);\n    ((LogMergePolicy) conf.getMergePolicy()).setUseCompoundDocStore(false);\n    IndexWriter writer = new IndexWriter(dir, conf);\n    writer.addDocument(testDoc);\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c","date":1281646583,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestFieldsReader#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestFieldsReader#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    fieldInfos = new FieldInfos();\n    DocHelper.setupDoc(testDoc);\n    fieldInfos.add(testDoc);\n    random = newRandom();\n    dir = newDirectory(random);\n    IndexWriterConfig conf = newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer());\n    ((LogMergePolicy) conf.getMergePolicy()).setUseCompoundFile(false);\n    ((LogMergePolicy) conf.getMergePolicy()).setUseCompoundDocStore(false);\n    IndexWriter writer = new IndexWriter(dir, conf);\n    writer.addDocument(testDoc);\n    writer.close();\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    fieldInfos = new FieldInfos();\n    DocHelper.setupDoc(testDoc);\n    fieldInfos.add(testDoc);\n    random = newRandom();\n    IndexWriterConfig conf = newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer());\n    ((LogMergePolicy) conf.getMergePolicy()).setUseCompoundFile(false);\n    ((LogMergePolicy) conf.getMergePolicy()).setUseCompoundDocStore(false);\n    IndexWriter writer = new IndexWriter(dir, conf);\n    writer.addDocument(testDoc);\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1f653cfcf159baeaafe5d01682a911e95bba4012","date":1284122058,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestFieldsReader#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestFieldsReader#setUp().mjava","sourceNew":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    fieldInfos = new FieldInfos();\n    DocHelper.setupDoc(testDoc);\n    fieldInfos.add(testDoc);\n    dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer());\n    ((LogMergePolicy) conf.getMergePolicy()).setUseCompoundFile(false);\n    ((LogMergePolicy) conf.getMergePolicy()).setUseCompoundDocStore(false);\n    IndexWriter writer = new IndexWriter(dir, conf);\n    writer.addDocument(testDoc);\n    writer.close();\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    fieldInfos = new FieldInfos();\n    DocHelper.setupDoc(testDoc);\n    fieldInfos.add(testDoc);\n    random = newRandom();\n    dir = newDirectory(random);\n    IndexWriterConfig conf = newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer());\n    ((LogMergePolicy) conf.getMergePolicy()).setUseCompoundFile(false);\n    ((LogMergePolicy) conf.getMergePolicy()).setUseCompoundDocStore(false);\n    IndexWriter writer = new IndexWriter(dir, conf);\n    writer.addDocument(testDoc);\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"43b04c27924fe393e38e9f0986e32c634f261859","date":1284399440,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestFieldsReader#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestFieldsReader#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    fieldInfos = new FieldInfos();\n    DocHelper.setupDoc(testDoc);\n    fieldInfos.add(testDoc);\n    dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer());\n    ((LogMergePolicy) conf.getMergePolicy()).setUseCompoundFile(false);\n    ((LogMergePolicy) conf.getMergePolicy()).setUseCompoundDocStore(false);\n    IndexWriter writer = new IndexWriter(dir, conf);\n    writer.addDocument(testDoc);\n    writer.close();\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    fieldInfos = new FieldInfos();\n    DocHelper.setupDoc(testDoc);\n    fieldInfos.add(testDoc);\n    dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer());\n    ((LogMergePolicy) conf.getMergePolicy()).setUseCompoundFile(false);\n    ((LogMergePolicy) conf.getMergePolicy()).setUseCompoundDocStore(false);\n    IndexWriter writer = new IndexWriter(dir, conf);\n    writer.addDocument(testDoc);\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3975a9b3cd376547ea9b1b3e5ea09e0d67001e56","date":1285778148,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestFieldsReader#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestFieldsReader#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    fieldInfos = new FieldInfos();\n    DocHelper.setupDoc(testDoc);\n    fieldInfos.add(testDoc);\n    dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer());\n    ((LogMergePolicy) conf.getMergePolicy()).setUseCompoundFile(false);\n    ((LogMergePolicy) conf.getMergePolicy()).setUseCompoundDocStore(false);\n    IndexWriter writer = new IndexWriter(dir, conf);\n    writer.addDocument(testDoc);\n    writer.close();\n    FaultyIndexInput.doFail = false;\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    fieldInfos = new FieldInfos();\n    DocHelper.setupDoc(testDoc);\n    fieldInfos.add(testDoc);\n    dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer());\n    ((LogMergePolicy) conf.getMergePolicy()).setUseCompoundFile(false);\n    ((LogMergePolicy) conf.getMergePolicy()).setUseCompoundDocStore(false);\n    IndexWriter writer = new IndexWriter(dir, conf);\n    writer.addDocument(testDoc);\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4948bc5d29211f0c9b5ccc31b2632cdd27066ea5","date":1292695408,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestFieldsReader#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestFieldsReader#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    fieldInfos = new FieldInfos();\n    DocHelper.setupDoc(testDoc);\n    fieldInfos.add(testDoc);\n    dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer());\n    ((LogMergePolicy) conf.getMergePolicy()).setUseCompoundFile(false);\n    IndexWriter writer = new IndexWriter(dir, conf);\n    writer.addDocument(testDoc);\n    writer.close();\n    FaultyIndexInput.doFail = false;\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    fieldInfos = new FieldInfos();\n    DocHelper.setupDoc(testDoc);\n    fieldInfos.add(testDoc);\n    dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer());\n    ((LogMergePolicy) conf.getMergePolicy()).setUseCompoundFile(false);\n    ((LogMergePolicy) conf.getMergePolicy()).setUseCompoundDocStore(false);\n    IndexWriter writer = new IndexWriter(dir, conf);\n    writer.addDocument(testDoc);\n    writer.close();\n    FaultyIndexInput.doFail = false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab5cb6a74aefb78aa0569857970b9151dfe2e787","date":1292842407,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestFieldsReader#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestFieldsReader#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    fieldInfos = new FieldInfos();\n    DocHelper.setupDoc(testDoc);\n    fieldInfos.add(testDoc);\n    dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer());\n    ((LogMergePolicy) conf.getMergePolicy()).setUseCompoundFile(false);\n    IndexWriter writer = new IndexWriter(dir, conf);\n    writer.addDocument(testDoc);\n    writer.close();\n    FaultyIndexInput.doFail = false;\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    fieldInfos = new FieldInfos();\n    DocHelper.setupDoc(testDoc);\n    fieldInfos.add(testDoc);\n    dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer());\n    ((LogMergePolicy) conf.getMergePolicy()).setUseCompoundFile(false);\n    ((LogMergePolicy) conf.getMergePolicy()).setUseCompoundDocStore(false);\n    IndexWriter writer = new IndexWriter(dir, conf);\n    writer.addDocument(testDoc);\n    writer.close();\n    FaultyIndexInput.doFail = false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestFieldsReader#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestFieldsReader#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    fieldInfos = new FieldInfos();\n    DocHelper.setupDoc(testDoc);\n    fieldInfos.add(testDoc);\n    dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer());\n    ((LogMergePolicy) conf.getMergePolicy()).setUseCompoundFile(false);\n    IndexWriter writer = new IndexWriter(dir, conf);\n    writer.addDocument(testDoc);\n    writer.close();\n    FaultyIndexInput.doFail = false;\n  }\n\n","sourceOld":"  @Override\n  protected void setUp() throws Exception {\n    super.setUp();\n    fieldInfos = new FieldInfos();\n    DocHelper.setupDoc(testDoc);\n    fieldInfos.add(testDoc);\n    IndexWriterConfig conf = new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer());\n    ((LogMergePolicy) conf.getMergePolicy()).setUseCompoundFile(false);\n    IndexWriter writer = new IndexWriter(dir, conf);\n    writer.addDocument(testDoc);\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c19f985e36a65cc969e8e564fe337a0d41512075","date":1296330536,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestFieldsReader#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestFieldsReader#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    fieldInfos = new FieldInfos();\n    DocHelper.setupDoc(testDoc);\n    fieldInfos.add(testDoc);\n    dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setMergePolicy(newLogMergePolicy());\n    ((LogMergePolicy) conf.getMergePolicy()).setUseCompoundFile(false);\n    IndexWriter writer = new IndexWriter(dir, conf);\n    writer.addDocument(testDoc);\n    writer.close();\n    FaultyIndexInput.doFail = false;\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    fieldInfos = new FieldInfos();\n    DocHelper.setupDoc(testDoc);\n    fieldInfos.add(testDoc);\n    dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer());\n    ((LogMergePolicy) conf.getMergePolicy()).setUseCompoundFile(false);\n    IndexWriter writer = new IndexWriter(dir, conf);\n    writer.addDocument(testDoc);\n    writer.close();\n    FaultyIndexInput.doFail = false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestFieldsReader#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestFieldsReader#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    fieldInfos = new FieldInfos();\n    DocHelper.setupDoc(testDoc);\n    fieldInfos.add(testDoc);\n    dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setMergePolicy(newLogMergePolicy());\n    ((LogMergePolicy) conf.getMergePolicy()).setUseCompoundFile(false);\n    IndexWriter writer = new IndexWriter(dir, conf);\n    writer.addDocument(testDoc);\n    writer.close();\n    FaultyIndexInput.doFail = false;\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    fieldInfos = new FieldInfos();\n    DocHelper.setupDoc(testDoc);\n    fieldInfos.add(testDoc);\n    dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer());\n    ((LogMergePolicy) conf.getMergePolicy()).setUseCompoundFile(false);\n    IndexWriter writer = new IndexWriter(dir, conf);\n    writer.addDocument(testDoc);\n    writer.close();\n    FaultyIndexInput.doFail = false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestFieldsReader#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestFieldsReader#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    fieldInfos = new FieldInfos();\n    DocHelper.setupDoc(testDoc);\n    fieldInfos.add(testDoc);\n    dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setMergePolicy(newLogMergePolicy());\n    ((LogMergePolicy) conf.getMergePolicy()).setUseCompoundFile(false);\n    IndexWriter writer = new IndexWriter(dir, conf);\n    writer.addDocument(testDoc);\n    writer.close();\n    FaultyIndexInput.doFail = false;\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    fieldInfos = new FieldInfos();\n    DocHelper.setupDoc(testDoc);\n    fieldInfos.add(testDoc);\n    dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer());\n    ((LogMergePolicy) conf.getMergePolicy()).setUseCompoundFile(false);\n    IndexWriter writer = new IndexWriter(dir, conf);\n    writer.addDocument(testDoc);\n    writer.close();\n    FaultyIndexInput.doFail = false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1224a4027481acce15495b03bce9b48b93b42722","date":1300792329,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestFieldsReader#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestFieldsReader#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    fieldInfos = new FieldInfos();\n    DocHelper.setupDoc(testDoc);\n    _TestUtil.add(testDoc, fieldInfos);\n    dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setMergePolicy(newLogMergePolicy());\n    ((LogMergePolicy) conf.getMergePolicy()).setUseCompoundFile(false);\n    IndexWriter writer = new IndexWriter(dir, conf);\n    writer.addDocument(testDoc);\n    writer.close();\n    FaultyIndexInput.doFail = false;\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    fieldInfos = new FieldInfos();\n    DocHelper.setupDoc(testDoc);\n    fieldInfos.add(testDoc);\n    dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setMergePolicy(newLogMergePolicy());\n    ((LogMergePolicy) conf.getMergePolicy()).setUseCompoundFile(false);\n    IndexWriter writer = new IndexWriter(dir, conf);\n    writer.addDocument(testDoc);\n    writer.close();\n    FaultyIndexInput.doFail = false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d619839baa8ce5503e496b94a9e42ad6f079293f","date":1301309428,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestFieldsReader#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestFieldsReader#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    fieldInfos = new FieldInfos();\n    DocHelper.setupDoc(testDoc);\n    _TestUtil.add(testDoc, fieldInfos);\n    dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setMergePolicy(newLogMergePolicy());\n    ((LogMergePolicy) conf.getMergePolicy()).setUseCompoundFile(false);\n    IndexWriter writer = new IndexWriter(dir, conf);\n    writer.addDocument(testDoc);\n    writer.close();\n    FaultyIndexInput.doFail = false;\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    fieldInfos = new FieldInfos();\n    DocHelper.setupDoc(testDoc);\n    fieldInfos.add(testDoc);\n    dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setMergePolicy(newLogMergePolicy());\n    ((LogMergePolicy) conf.getMergePolicy()).setUseCompoundFile(false);\n    IndexWriter writer = new IndexWriter(dir, conf);\n    writer.addDocument(testDoc);\n    writer.close();\n    FaultyIndexInput.doFail = false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c0ef0193974807e4bddf5432a6b0287fe4d6c9df","date":1301476645,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestFieldsReader#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestFieldsReader#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    fieldInfos = new FieldInfos();\n    DocHelper.setupDoc(testDoc);\n    _TestUtil.add(testDoc, fieldInfos);\n    dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setMergePolicy(newLogMergePolicy());\n    ((LogMergePolicy) conf.getMergePolicy()).setUseCompoundFile(false);\n    IndexWriter writer = new IndexWriter(dir, conf);\n    writer.addDocument(testDoc);\n    writer.close();\n    FaultyIndexInput.doFail = false;\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    fieldInfos = new FieldInfos();\n    DocHelper.setupDoc(testDoc);\n    fieldInfos.add(testDoc);\n    dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setMergePolicy(newLogMergePolicy());\n    ((LogMergePolicy) conf.getMergePolicy()).setUseCompoundFile(false);\n    IndexWriter writer = new IndexWriter(dir, conf);\n    writer.addDocument(testDoc);\n    writer.close();\n    FaultyIndexInput.doFail = false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f2c5f0cb44df114db4228c8f77861714b5cabaea","date":1302542431,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestFieldsReader#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestFieldsReader#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    fieldInfos = new FieldInfos();\n    DocHelper.setupDoc(testDoc);\n    _TestUtil.add(testDoc, fieldInfos);\n    dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy());\n    ((LogMergePolicy) conf.getMergePolicy()).setUseCompoundFile(false);\n    IndexWriter writer = new IndexWriter(dir, conf);\n    writer.addDocument(testDoc);\n    writer.close();\n    FaultyIndexInput.doFail = false;\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    fieldInfos = new FieldInfos();\n    DocHelper.setupDoc(testDoc);\n    _TestUtil.add(testDoc, fieldInfos);\n    dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setMergePolicy(newLogMergePolicy());\n    ((LogMergePolicy) conf.getMergePolicy()).setUseCompoundFile(false);\n    IndexWriter writer = new IndexWriter(dir, conf);\n    writer.addDocument(testDoc);\n    writer.close();\n    FaultyIndexInput.doFail = false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"962d04139994fce5193143ef35615499a9a96d78","date":1302693744,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestFieldsReader#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestFieldsReader#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    fieldInfos = new FieldInfos();\n    DocHelper.setupDoc(testDoc);\n    _TestUtil.add(testDoc, fieldInfos);\n    dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy());\n    ((LogMergePolicy) conf.getMergePolicy()).setUseCompoundFile(false);\n    IndexWriter writer = new IndexWriter(dir, conf);\n    writer.addDocument(testDoc);\n    writer.close();\n    FaultyIndexInput.doFail = false;\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    fieldInfos = new FieldInfos();\n    DocHelper.setupDoc(testDoc);\n    _TestUtil.add(testDoc, fieldInfos);\n    dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setMergePolicy(newLogMergePolicy());\n    ((LogMergePolicy) conf.getMergePolicy()).setUseCompoundFile(false);\n    IndexWriter writer = new IndexWriter(dir, conf);\n    writer.addDocument(testDoc);\n    writer.close();\n    FaultyIndexInput.doFail = false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestFieldsReader#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestFieldsReader#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    fieldInfos = new FieldInfos();\n    DocHelper.setupDoc(testDoc);\n    _TestUtil.add(testDoc, fieldInfos);\n    dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy());\n    ((LogMergePolicy) conf.getMergePolicy()).setUseCompoundFile(false);\n    IndexWriter writer = new IndexWriter(dir, conf);\n    writer.addDocument(testDoc);\n    writer.close();\n    FaultyIndexInput.doFail = false;\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    fieldInfos = new FieldInfos();\n    DocHelper.setupDoc(testDoc);\n    _TestUtil.add(testDoc, fieldInfos);\n    dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setMergePolicy(newLogMergePolicy());\n    ((LogMergePolicy) conf.getMergePolicy()).setUseCompoundFile(false);\n    IndexWriter writer = new IndexWriter(dir, conf);\n    writer.addDocument(testDoc);\n    writer.close();\n    FaultyIndexInput.doFail = false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestFieldsReader#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestFieldsReader#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    fieldInfos = new FieldInfos();\n    DocHelper.setupDoc(testDoc);\n    _TestUtil.add(testDoc, fieldInfos);\n    dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy());\n    ((LogMergePolicy) conf.getMergePolicy()).setUseCompoundFile(false);\n    IndexWriter writer = new IndexWriter(dir, conf);\n    writer.addDocument(testDoc);\n    writer.close();\n    FaultyIndexInput.doFail = false;\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    fieldInfos = new FieldInfos();\n    DocHelper.setupDoc(testDoc);\n    _TestUtil.add(testDoc, fieldInfos);\n    dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setMergePolicy(newLogMergePolicy());\n    ((LogMergePolicy) conf.getMergePolicy()).setUseCompoundFile(false);\n    IndexWriter writer = new IndexWriter(dir, conf);\n    writer.addDocument(testDoc);\n    writer.close();\n    FaultyIndexInput.doFail = false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ff6fd241dc6610f7f81b62e3ba4cedf105939623","date":1307331653,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestFieldsReader#beforeClass().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestFieldsReader#setUp().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    fieldInfos = new FieldInfos();\n    DocHelper.setupDoc(testDoc);\n    _TestUtil.add(testDoc, fieldInfos);\n    dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy());\n    ((LogMergePolicy) conf.getMergePolicy()).setUseCompoundFile(false);\n    IndexWriter writer = new IndexWriter(dir, conf);\n    writer.addDocument(testDoc);\n    writer.close();\n    FaultyIndexInput.doFail = false;\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    fieldInfos = new FieldInfos();\n    DocHelper.setupDoc(testDoc);\n    _TestUtil.add(testDoc, fieldInfos);\n    dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy());\n    ((LogMergePolicy) conf.getMergePolicy()).setUseCompoundFile(false);\n    IndexWriter writer = new IndexWriter(dir, conf);\n    writer.addDocument(testDoc);\n    writer.close();\n    FaultyIndexInput.doFail = false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"79c2cb24929f2649a8875fb629086171f914d5ce","date":1307332717,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestFieldsReader#beforeClass().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestFieldsReader#setUp().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    fieldInfos = new FieldInfos();\n    DocHelper.setupDoc(testDoc);\n    _TestUtil.add(testDoc, fieldInfos);\n    dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy());\n    ((LogMergePolicy) conf.getMergePolicy()).setUseCompoundFile(false);\n    IndexWriter writer = new IndexWriter(dir, conf);\n    writer.addDocument(testDoc);\n    writer.close();\n    FaultyIndexInput.doFail = false;\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    fieldInfos = new FieldInfos();\n    DocHelper.setupDoc(testDoc);\n    _TestUtil.add(testDoc, fieldInfos);\n    dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy());\n    ((LogMergePolicy) conf.getMergePolicy()).setUseCompoundFile(false);\n    IndexWriter writer = new IndexWriter(dir, conf);\n    writer.addDocument(testDoc);\n    writer.close();\n    FaultyIndexInput.doFail = false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"77cf4379b2824f6ea34b091c495d6e95c38ff9e2","date":1307610475,"type":5,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestFieldsReader#beforeClass().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestFieldsReader#setUp().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    fieldInfos = new FieldInfos();\n    DocHelper.setupDoc(testDoc);\n    _TestUtil.add(testDoc, fieldInfos);\n    dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy());\n    ((LogMergePolicy) conf.getMergePolicy()).setUseCompoundFile(false);\n    IndexWriter writer = new IndexWriter(dir, conf);\n    writer.addDocument(testDoc);\n    writer.close();\n    FaultyIndexInput.doFail = false;\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    fieldInfos = new FieldInfos();\n    DocHelper.setupDoc(testDoc);\n    _TestUtil.add(testDoc, fieldInfos);\n    dir = newDirectory();\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMergePolicy(newLogMergePolicy());\n    ((LogMergePolicy) conf.getMergePolicy()).setUseCompoundFile(false);\n    IndexWriter writer = new IndexWriter(dir, conf);\n    writer.addDocument(testDoc);\n    writer.close();\n    FaultyIndexInput.doFail = false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ddd48d551694853a3b1dda2ecd441b954ed6fdc7","date":1308904563,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestFieldsReader#setUp().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    FaultyIndexInput.doFail = false;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2553b00f699380c64959ccb27991289aae87be2e","date":1309290151,"type":0,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestFieldsReader#setUp().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    FaultyIndexInput.doFail = false;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d083e83f225b11e5fdd900e83d26ddb385b6955c","date":1310029438,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestFieldsReader#setUp().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    FaultyIndexInput.doFail = false;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1509f151d7692d84fae414b2b799ac06ba60fcb4","date":1314451621,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/contrib/misc/src/test/org/apache/lucene/index/TestContribParallelReader#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestFieldsReader#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    single = single(random);\n    parallel = parallel(random);\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    FaultyIndexInput.doFail = false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3975a9b3cd376547ea9b1b3e5ea09e0d67001e56":["43b04c27924fe393e38e9f0986e32c634f261859"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["8dc26bfa5ebbc55b5a04fbec545dfcec647b046b","4948bc5d29211f0c9b5ccc31b2632cdd27066ea5"],"ddd48d551694853a3b1dda2ecd441b954ed6fdc7":["ff6fd241dc6610f7f81b62e3ba4cedf105939623"],"c19f985e36a65cc969e8e564fe337a0d41512075":["4948bc5d29211f0c9b5ccc31b2632cdd27066ea5"],"43b04c27924fe393e38e9f0986e32c634f261859":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"c0ef0193974807e4bddf5432a6b0287fe4d6c9df":["bde51b089eb7f86171eb3406e38a274743f9b7ac","1224a4027481acce15495b03bce9b48b93b42722"],"f2c5f0cb44df114db4228c8f77861714b5cabaea":["1224a4027481acce15495b03bce9b48b93b42722"],"79c2cb24929f2649a8875fb629086171f914d5ce":["a3776dccca01c11e7046323cfad46a3b4a471233","ff6fd241dc6610f7f81b62e3ba4cedf105939623"],"1f653cfcf159baeaafe5d01682a911e95bba4012":["ab9633cb67e3c0aec3c066147a23a957d6e7ad8c"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["ab5cb6a74aefb78aa0569857970b9151dfe2e787","c19f985e36a65cc969e8e564fe337a0d41512075"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["ddd48d551694853a3b1dda2ecd441b954ed6fdc7"],"4948bc5d29211f0c9b5ccc31b2632cdd27066ea5":["3975a9b3cd376547ea9b1b3e5ea09e0d67001e56"],"b21422ff1d1d56499dec481f193b402e5e8def5b":["d572389229127c297dd1fa5ce4758e1cec41e799"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","c19f985e36a65cc969e8e564fe337a0d41512075"],"1224a4027481acce15495b03bce9b48b93b42722":["c19f985e36a65cc969e8e564fe337a0d41512075"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ff6fd241dc6610f7f81b62e3ba4cedf105939623":["f2c5f0cb44df114db4228c8f77861714b5cabaea"],"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c":["b21422ff1d1d56499dec481f193b402e5e8def5b"],"7ab99e8c71442b92c320e218141dee04a9b91ce8":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["d619839baa8ce5503e496b94a9e42ad6f079293f","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"d572389229127c297dd1fa5ce4758e1cec41e799":["7ab99e8c71442b92c320e218141dee04a9b91ce8"],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":["3975a9b3cd376547ea9b1b3e5ea09e0d67001e56","4948bc5d29211f0c9b5ccc31b2632cdd27066ea5"],"962d04139994fce5193143ef35615499a9a96d78":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"2553b00f699380c64959ccb27991289aae87be2e":["79c2cb24929f2649a8875fb629086171f914d5ce","ddd48d551694853a3b1dda2ecd441b954ed6fdc7"],"8dc26bfa5ebbc55b5a04fbec545dfcec647b046b":["d572389229127c297dd1fa5ce4758e1cec41e799"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":["ff6fd241dc6610f7f81b62e3ba4cedf105939623","ddd48d551694853a3b1dda2ecd441b954ed6fdc7"],"d619839baa8ce5503e496b94a9e42ad6f079293f":["29ef99d61cda9641b6250bf9567329a6e65f901d","1224a4027481acce15495b03bce9b48b93b42722"],"a3776dccca01c11e7046323cfad46a3b4a471233":["1224a4027481acce15495b03bce9b48b93b42722","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"77cf4379b2824f6ea34b091c495d6e95c38ff9e2":["135621f3a0670a9394eb563224a3b76cc4dddc0f","ff6fd241dc6610f7f81b62e3ba4cedf105939623"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1509f151d7692d84fae414b2b799ac06ba60fcb4"]},"commit2Childs":{"3975a9b3cd376547ea9b1b3e5ea09e0d67001e56":["4948bc5d29211f0c9b5ccc31b2632cdd27066ea5","ab5cb6a74aefb78aa0569857970b9151dfe2e787"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["bde51b089eb7f86171eb3406e38a274743f9b7ac"],"43b04c27924fe393e38e9f0986e32c634f261859":["3975a9b3cd376547ea9b1b3e5ea09e0d67001e56"],"ddd48d551694853a3b1dda2ecd441b954ed6fdc7":["1509f151d7692d84fae414b2b799ac06ba60fcb4","2553b00f699380c64959ccb27991289aae87be2e","d083e83f225b11e5fdd900e83d26ddb385b6955c"],"c19f985e36a65cc969e8e564fe337a0d41512075":["29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac","1224a4027481acce15495b03bce9b48b93b42722"],"c0ef0193974807e4bddf5432a6b0287fe4d6c9df":["962d04139994fce5193143ef35615499a9a96d78"],"f2c5f0cb44df114db4228c8f77861714b5cabaea":["ff6fd241dc6610f7f81b62e3ba4cedf105939623","135621f3a0670a9394eb563224a3b76cc4dddc0f","962d04139994fce5193143ef35615499a9a96d78","a3776dccca01c11e7046323cfad46a3b4a471233"],"79c2cb24929f2649a8875fb629086171f914d5ce":["2553b00f699380c64959ccb27991289aae87be2e"],"1f653cfcf159baeaafe5d01682a911e95bba4012":["43b04c27924fe393e38e9f0986e32c634f261859"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["d619839baa8ce5503e496b94a9e42ad6f079293f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4948bc5d29211f0c9b5ccc31b2632cdd27066ea5":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","c19f985e36a65cc969e8e564fe337a0d41512075","ab5cb6a74aefb78aa0569857970b9151dfe2e787"],"b21422ff1d1d56499dec481f193b402e5e8def5b":["ab9633cb67e3c0aec3c066147a23a957d6e7ad8c"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df"],"1224a4027481acce15495b03bce9b48b93b42722":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df","f2c5f0cb44df114db4228c8f77861714b5cabaea","d619839baa8ce5503e496b94a9e42ad6f079293f","a3776dccca01c11e7046323cfad46a3b4a471233"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["7ab99e8c71442b92c320e218141dee04a9b91ce8"],"ff6fd241dc6610f7f81b62e3ba4cedf105939623":["ddd48d551694853a3b1dda2ecd441b954ed6fdc7","79c2cb24929f2649a8875fb629086171f914d5ce","d083e83f225b11e5fdd900e83d26ddb385b6955c","77cf4379b2824f6ea34b091c495d6e95c38ff9e2"],"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"7ab99e8c71442b92c320e218141dee04a9b91ce8":["d572389229127c297dd1fa5ce4758e1cec41e799"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["77cf4379b2824f6ea34b091c495d6e95c38ff9e2"],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":["29ef99d61cda9641b6250bf9567329a6e65f901d"],"d572389229127c297dd1fa5ce4758e1cec41e799":["b21422ff1d1d56499dec481f193b402e5e8def5b","8dc26bfa5ebbc55b5a04fbec545dfcec647b046b"],"962d04139994fce5193143ef35615499a9a96d78":[],"2553b00f699380c64959ccb27991289aae87be2e":[],"8dc26bfa5ebbc55b5a04fbec545dfcec647b046b":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":[],"d619839baa8ce5503e496b94a9e42ad6f079293f":["135621f3a0670a9394eb563224a3b76cc4dddc0f"],"a3776dccca01c11e7046323cfad46a3b4a471233":["79c2cb24929f2649a8875fb629086171f914d5ce"],"77cf4379b2824f6ea34b091c495d6e95c38ff9e2":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["962d04139994fce5193143ef35615499a9a96d78","2553b00f699380c64959ccb27991289aae87be2e","d083e83f225b11e5fdd900e83d26ddb385b6955c","77cf4379b2824f6ea34b091c495d6e95c38ff9e2","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}