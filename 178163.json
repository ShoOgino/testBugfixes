{"path":"lucene/core/src/test/org/apache/lucene/codecs/lucene87/TestLucene87StoredFieldsFormatHighCompression#testMixedCompressions().mjava","commits":[{"id":"0db8230c9dbe474fc18e1e71cf04c1ada8046ec9","date":1598432674,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/codecs/lucene87/TestLucene87StoredFieldsFormatHighCompression#testMixedCompressions().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/codecs/lucene50/TestLucene50StoredFieldsFormatHighCompression#testMixedCompressions().mjava","sourceNew":"  /**\n   * Change compression params (leaving it the same for old segments)\n   * and tests that nothing breaks.\n   */\n  public void testMixedCompressions() throws Exception {\n    Directory dir = newDirectory();\n    for (int i = 0; i < 10; i++) {\n      IndexWriterConfig iwc = newIndexWriterConfig();\n      iwc.setCodec(new Lucene87Codec(RandomPicks.randomFrom(random(), Mode.values())));\n      IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig());\n      Document doc = new Document();\n      doc.add(new StoredField(\"field1\", \"value1\"));\n      doc.add(new StoredField(\"field2\", \"value2\"));\n      iw.addDocument(doc);\n      if (random().nextInt(4) == 0) {\n        iw.forceMerge(1);\n      }\n      iw.commit();\n      iw.close();\n    }\n    \n    DirectoryReader ir = DirectoryReader.open(dir);\n    assertEquals(10, ir.numDocs());\n    for (int i = 0; i < 10; i++) {\n      Document doc = ir.document(i);\n      assertEquals(\"value1\", doc.get(\"field1\"));\n      assertEquals(\"value2\", doc.get(\"field2\"));\n    }\n    ir.close();\n    // checkindex\n    dir.close();\n  }\n\n","sourceOld":"  /**\n   * Change compression params (leaving it the same for old segments)\n   * and tests that nothing breaks.\n   */\n  public void testMixedCompressions() throws Exception {\n    Directory dir = newDirectory();\n    for (int i = 0; i < 10; i++) {\n      IndexWriterConfig iwc = newIndexWriterConfig();\n      iwc.setCodec(new Lucene86Codec(RandomPicks.randomFrom(random(), Mode.values())));\n      IndexWriter iw = new IndexWriter(dir, newIndexWriterConfig());\n      Document doc = new Document();\n      doc.add(new StoredField(\"field1\", \"value1\"));\n      doc.add(new StoredField(\"field2\", \"value2\"));\n      iw.addDocument(doc);\n      if (random().nextInt(4) == 0) {\n        iw.forceMerge(1);\n      }\n      iw.commit();\n      iw.close();\n    }\n    \n    DirectoryReader ir = DirectoryReader.open(dir);\n    assertEquals(10, ir.numDocs());\n    for (int i = 0; i < 10; i++) {\n      Document doc = ir.document(i);\n      assertEquals(\"value1\", doc.get(\"field1\"));\n      assertEquals(\"value2\", doc.get(\"field2\"));\n    }\n    ir.close();\n    // checkindex\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0db8230c9dbe474fc18e1e71cf04c1ada8046ec9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0db8230c9dbe474fc18e1e71cf04c1ada8046ec9"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0db8230c9dbe474fc18e1e71cf04c1ada8046ec9"],"0db8230c9dbe474fc18e1e71cf04c1ada8046ec9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}