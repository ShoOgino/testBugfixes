{"path":"lucene/src/java/org/apache/lucene/codecs/lucene3x/Lucene3xTermVectorsReader.TVTermsEnum#seekCeil(BytesRef,boolean).mjava","commits":[{"id":"5013b6ff92e8f7f62cd228936ce019f8819b092b","date":1326844034,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/codecs/lucene3x/Lucene3xTermVectorsReader.TVTermsEnum#seekCeil(BytesRef,boolean).mjava","pathOld":"/dev/null","sourceNew":"    // NOTE: slow!  (linear scan)\n    @Override\n    public SeekStatus seekCeil(BytesRef text, boolean useCache)\n      throws IOException {\n      if (nextTerm != 0 && text.compareTo(term) < 0) {\n        nextTerm = 0;\n        tvf.seek(tvfFP);\n      }\n\n      while (next() != null) {\n        final int cmp = text.compareTo(term);\n        if (cmp < 0) {\n          return SeekStatus.NOT_FOUND;\n        } else if (cmp == 0) {\n          return SeekStatus.FOUND;\n        }\n      }\n\n      return SeekStatus.END;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"426bf91d9f9500f9c52dbdc111f6c1762cf54e20","date":1326909425,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/codecs/lucene3x/Lucene3xTermVectorsReader.TVTermsEnum#seekCeil(BytesRef,boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/codecs/lucene3x/Lucene3xTermVectorsReader.TVTermsEnum#seekCeil(BytesRef,boolean).mjava","sourceNew":"    // NOTE: slow!  (linear scan)\n    @Override\n    public SeekStatus seekCeil(BytesRef text, boolean useCache) throws IOException {\n      Comparator<BytesRef> comparator = getComparator();\n      for (int i = 0; i < numTerms; i++) {\n        int cmp = comparator.compare(text, termAndPostings[i].term);\n        if (cmp < 0) {\n          currentTerm = i;\n          return SeekStatus.NOT_FOUND;\n        } else if (cmp == 0) {\n          currentTerm = i;\n          return SeekStatus.FOUND;\n        }\n      }\n      currentTerm = termAndPostings.length;\n      return SeekStatus.END;\n    }\n\n","sourceOld":"    // NOTE: slow!  (linear scan)\n    @Override\n    public SeekStatus seekCeil(BytesRef text, boolean useCache)\n      throws IOException {\n      if (nextTerm != 0 && text.compareTo(term) < 0) {\n        nextTerm = 0;\n        tvf.seek(tvfFP);\n      }\n\n      while (next() != null) {\n        final int cmp = text.compareTo(term);\n        if (cmp < 0) {\n          return SeekStatus.NOT_FOUND;\n        } else if (cmp == 0) {\n          return SeekStatus.FOUND;\n        }\n      }\n\n      return SeekStatus.END;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene3x/Lucene3xTermVectorsReader.TVTermsEnum#seekCeil(BytesRef,boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/codecs/lucene3x/Lucene3xTermVectorsReader.TVTermsEnum#seekCeil(BytesRef,boolean).mjava","sourceNew":"    // NOTE: slow!  (linear scan)\n    @Override\n    public SeekStatus seekCeil(BytesRef text, boolean useCache) throws IOException {\n      Comparator<BytesRef> comparator = getComparator();\n      for (int i = 0; i < numTerms; i++) {\n        int cmp = comparator.compare(text, termAndPostings[i].term);\n        if (cmp < 0) {\n          currentTerm = i;\n          return SeekStatus.NOT_FOUND;\n        } else if (cmp == 0) {\n          currentTerm = i;\n          return SeekStatus.FOUND;\n        }\n      }\n      currentTerm = termAndPostings.length;\n      return SeekStatus.END;\n    }\n\n","sourceOld":"    // NOTE: slow!  (linear scan)\n    @Override\n    public SeekStatus seekCeil(BytesRef text, boolean useCache) throws IOException {\n      Comparator<BytesRef> comparator = getComparator();\n      for (int i = 0; i < numTerms; i++) {\n        int cmp = comparator.compare(text, termAndPostings[i].term);\n        if (cmp < 0) {\n          currentTerm = i;\n          return SeekStatus.NOT_FOUND;\n        } else if (cmp == 0) {\n          currentTerm = i;\n          return SeekStatus.FOUND;\n        }\n      }\n      currentTerm = termAndPostings.length;\n      return SeekStatus.END;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5013b6ff92e8f7f62cd228936ce019f8819b092b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["426bf91d9f9500f9c52dbdc111f6c1762cf54e20"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"426bf91d9f9500f9c52dbdc111f6c1762cf54e20":["5013b6ff92e8f7f62cd228936ce019f8819b092b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"5013b6ff92e8f7f62cd228936ce019f8819b092b":["426bf91d9f9500f9c52dbdc111f6c1762cf54e20"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5013b6ff92e8f7f62cd228936ce019f8819b092b"],"426bf91d9f9500f9c52dbdc111f6c1762cf54e20":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}