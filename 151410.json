{"path":"lucene/core/src/test/org/apache/lucene/analysis/TestGraphTokenizers.RemoveATokens#incrementToken().mjava","commits":[{"id":"6795c6bc2f5a6b2a2230cb20ff4744003faf7802","date":1333839972,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/analysis/TestGraphTokenizers.RemoveATokens#incrementToken().mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public boolean incrementToken() throws IOException {\n      while (true) {\n        final boolean gotOne = input.incrementToken();\n        if (!gotOne) {\n          return false;\n        } else if (termAtt.toString().equals(\"a\")) {\n          pendingPosInc += posIncAtt.getPositionIncrement();\n        } else {\n          posIncAtt.setPositionIncrement(pendingPosInc + posIncAtt.getPositionIncrement());\n          pendingPosInc = 0;\n          return true;\n        }\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b52491e71f0d5d0f0160d6ed0d39e0dd661be68a","date":1429550638,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/test/org/apache/lucene/analysis/TestGraphTokenizers.RemoveATokens#incrementToken().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/analysis/TestGraphTokenizers.RemoveATokens#incrementToken().mjava","sourceNew":"    @Override\n    public boolean incrementToken() throws IOException {\n      while (true) {\n        final boolean gotOne = input.incrementToken();\n        if (!gotOne) {\n          return false;\n        } else if (termAtt.toString().equals(\"a\")) {\n          pendingPosInc += posIncAtt.getPositionIncrement();\n        } else {\n          posIncAtt.setPositionIncrement(pendingPosInc + posIncAtt.getPositionIncrement());\n          pendingPosInc = 0;\n          return true;\n        }\n      }\n    }\n\n","sourceOld":"    @Override\n    public boolean incrementToken() throws IOException {\n      while (true) {\n        final boolean gotOne = input.incrementToken();\n        if (!gotOne) {\n          return false;\n        } else if (termAtt.toString().equals(\"a\")) {\n          pendingPosInc += posIncAtt.getPositionIncrement();\n        } else {\n          posIncAtt.setPositionIncrement(pendingPosInc + posIncAtt.getPositionIncrement());\n          pendingPosInc = 0;\n          return true;\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"085e5eccb1e06e3bfb487813880adc54c888dd02","date":1483875517,"type":1,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/analysis/TestGraphTokenizers.RemoveATokens#incrementToken().mjava","pathOld":"lucene/test-framework/src/test/org/apache/lucene/analysis/TestGraphTokenizers.RemoveATokens#incrementToken().mjava","sourceNew":"    @Override\n    public boolean incrementToken() throws IOException {\n      while (true) {\n        final boolean gotOne = input.incrementToken();\n        if (!gotOne) {\n          return false;\n        } else if (termAtt.toString().equals(\"a\")) {\n          pendingPosInc += posIncAtt.getPositionIncrement();\n        } else {\n          posIncAtt.setPositionIncrement(pendingPosInc + posIncAtt.getPositionIncrement());\n          pendingPosInc = 0;\n          return true;\n        }\n      }\n    }\n\n","sourceOld":"    @Override\n    public boolean incrementToken() throws IOException {\n      while (true) {\n        final boolean gotOne = input.incrementToken();\n        if (!gotOne) {\n          return false;\n        } else if (termAtt.toString().equals(\"a\")) {\n          pendingPosInc += posIncAtt.getPositionIncrement();\n        } else {\n          posIncAtt.setPositionIncrement(pendingPosInc + posIncAtt.getPositionIncrement());\n          pendingPosInc = 0;\n          return true;\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"09ab8ee44ca898536770d0106a7c0ee4be4f0eb7","date":1484239864,"type":1,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/analysis/TestGraphTokenizers.RemoveATokens#incrementToken().mjava","pathOld":"lucene/test-framework/src/test/org/apache/lucene/analysis/TestGraphTokenizers.RemoveATokens#incrementToken().mjava","sourceNew":"    @Override\n    public boolean incrementToken() throws IOException {\n      while (true) {\n        final boolean gotOne = input.incrementToken();\n        if (!gotOne) {\n          return false;\n        } else if (termAtt.toString().equals(\"a\")) {\n          pendingPosInc += posIncAtt.getPositionIncrement();\n        } else {\n          posIncAtt.setPositionIncrement(pendingPosInc + posIncAtt.getPositionIncrement());\n          pendingPosInc = 0;\n          return true;\n        }\n      }\n    }\n\n","sourceOld":"    @Override\n    public boolean incrementToken() throws IOException {\n      while (true) {\n        final boolean gotOne = input.incrementToken();\n        if (!gotOne) {\n          return false;\n        } else if (termAtt.toString().equals(\"a\")) {\n          pendingPosInc += posIncAtt.getPositionIncrement();\n        } else {\n          posIncAtt.setPositionIncrement(pendingPosInc + posIncAtt.getPositionIncrement());\n          pendingPosInc = 0;\n          return true;\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"09ab8ee44ca898536770d0106a7c0ee4be4f0eb7":["b52491e71f0d5d0f0160d6ed0d39e0dd661be68a","085e5eccb1e06e3bfb487813880adc54c888dd02"],"b52491e71f0d5d0f0160d6ed0d39e0dd661be68a":["6795c6bc2f5a6b2a2230cb20ff4744003faf7802"],"085e5eccb1e06e3bfb487813880adc54c888dd02":["b52491e71f0d5d0f0160d6ed0d39e0dd661be68a"],"6795c6bc2f5a6b2a2230cb20ff4744003faf7802":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["085e5eccb1e06e3bfb487813880adc54c888dd02"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6795c6bc2f5a6b2a2230cb20ff4744003faf7802"],"09ab8ee44ca898536770d0106a7c0ee4be4f0eb7":[],"b52491e71f0d5d0f0160d6ed0d39e0dd661be68a":["09ab8ee44ca898536770d0106a7c0ee4be4f0eb7","085e5eccb1e06e3bfb487813880adc54c888dd02"],"085e5eccb1e06e3bfb487813880adc54c888dd02":["09ab8ee44ca898536770d0106a7c0ee4be4f0eb7","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"6795c6bc2f5a6b2a2230cb20ff4744003faf7802":["b52491e71f0d5d0f0160d6ed0d39e0dd661be68a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["09ab8ee44ca898536770d0106a7c0ee4be4f0eb7","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}