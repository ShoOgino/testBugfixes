{"path":"src/java/org/apache/solr/util/SolrPluginUtils#getNumberParam(SolrQueryRequest,String,Number).mjava","commits":[{"id":"e4b5867a57b32674ce740e66e6a7da8db3d4dd33","date":1148163441,"type":0,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"src/java/org/apache/solr/util/SolrPluginUtils#getNumberParam(SolrQueryRequest,String,Number).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Treats the param value as a Number, returns the default if nothing is\n   * there or if it's not a number.\n   */\n  public static Number getNumberParam(SolrQueryRequest req,\n                                      String param, Number def) {\n        \n    Number r = def;\n    String v = req.getParam(param);\n    if (null == v || \"\".equals(v.trim())) {\n      return r;\n    }\n    try {\n      r = new Float(v);\n    } catch (NumberFormatException e) {\n      /* :NOOP\" */\n    }\n    return r;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c0907819f524a744c3377371e616839271317ac6","date":1157570948,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"src/java/org/apache/solr/util/SolrPluginUtils#getNumberParam(SolrQueryRequest,String,Number).mjava","pathOld":"src/java/org/apache/solr/util/SolrPluginUtils#getNumberParam(SolrQueryRequest,String,Number).mjava","sourceNew":"  /**\n   * Treats the param value as a Number, returns the default if nothing is\n   * there or if it's not a number.\n   * @deprecated use SolrParam.getFloat(String,float)\n   */\n  public static Number getNumberParam(SolrQueryRequest req,\n                                      String param, Number def) {\n        \n    Number r = def;\n    String v = req.getParam(param);\n    if (null == v || \"\".equals(v.trim())) {\n      return r;\n    }\n    try {\n      r = new Float(v);\n    } catch (NumberFormatException e) {\n      /* :NOOP\" */\n    }\n    return r;\n  }\n\n","sourceOld":"  /**\n   * Treats the param value as a Number, returns the default if nothing is\n   * there or if it's not a number.\n   */\n  public static Number getNumberParam(SolrQueryRequest req,\n                                      String param, Number def) {\n        \n    Number r = def;\n    String v = req.getParam(param);\n    if (null == v || \"\".equals(v.trim())) {\n      return r;\n    }\n    try {\n      r = new Float(v);\n    } catch (NumberFormatException e) {\n      /* :NOOP\" */\n    }\n    return r;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/util/SolrPluginUtils#getNumberParam(SolrQueryRequest,String,Number).mjava","pathOld":"src/java/org/apache/solr/util/SolrPluginUtils#getNumberParam(SolrQueryRequest,String,Number).mjava","sourceNew":"  /**\n   * Treats the param value as a Number, returns the default if nothing is\n   * there or if it's not a number.\n   * @deprecated use SolrParam.getFloat(String,float)\n   */\n  public static Number getNumberParam(SolrQueryRequest req,\n                                      String param, Number def) {\n        \n    Number r = def;\n    String v = req.getParam(param);\n    if (null == v || \"\".equals(v.trim())) {\n      return r;\n    }\n    try {\n      r = new Float(v);\n    } catch (NumberFormatException e) {\n      /* :NOOP\" */\n    }\n    return r;\n  }\n\n","sourceOld":"  /**\n   * Treats the param value as a Number, returns the default if nothing is\n   * there or if it's not a number.\n   * @deprecated use SolrParam.getFloat(String,float)\n   */\n  public static Number getNumberParam(SolrQueryRequest req,\n                                      String param, Number def) {\n        \n    Number r = def;\n    String v = req.getParam(param);\n    if (null == v || \"\".equals(v.trim())) {\n      return r;\n    }\n    try {\n      r = new Float(v);\n    } catch (NumberFormatException e) {\n      /* :NOOP\" */\n    }\n    return r;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e4b5867a57b32674ce740e66e6a7da8db3d4dd33":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["c0907819f524a744c3377371e616839271317ac6"],"c0907819f524a744c3377371e616839271317ac6":["e4b5867a57b32674ce740e66e6a7da8db3d4dd33"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"e4b5867a57b32674ce740e66e6a7da8db3d4dd33":["c0907819f524a744c3377371e616839271317ac6"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["e4b5867a57b32674ce740e66e6a7da8db3d4dd33"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"c0907819f524a744c3377371e616839271317ac6":["ad94625fb8d088209f46650c8097196fec67f00c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}