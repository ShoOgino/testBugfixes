{"path":"contrib/highlighter/src/java/org/apache/lucene/search/highlight/WeightedSpanTermExtractor.PositionCheckingMap#put(K,WeightedSpanTerm).mjava","commits":[{"id":"ffdf794cee8d43eb612df752c592cef2dc3e75ae","date":1256465578,"type":1,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/highlighter/src/java/org/apache/lucene/search/highlight/WeightedSpanTermExtractor.PositionCheckingMap#put(K,WeightedSpanTerm).mjava","pathOld":"contrib/highlighter/src/java/org/apache/lucene/search/highlight/WeightedSpanTermExtractor.PositionCheckingMap#put(Object,Object).mjava","sourceNew":"    public WeightedSpanTerm put(K key, WeightedSpanTerm value) {\n      WeightedSpanTerm prev = super.put(key, value);\n      if (prev == null) return prev;\n      WeightedSpanTerm prevTerm = prev;\n      WeightedSpanTerm newTerm = value;\n      if (!prevTerm.positionSensitive) {\n        newTerm.positionSensitive = false;\n      }\n      return prev;\n    }\n\n","sourceOld":"    public Object put(Object key, Object value) {\n      Object prev = super.put(key, value);\n      if (prev == null) return prev;\n      WeightedSpanTerm prevTerm = (WeightedSpanTerm)prev;\n      WeightedSpanTerm newTerm = (WeightedSpanTerm)value;\n      if (!prevTerm.positionSensitive) {\n        newTerm.positionSensitive = false;\n      }\n      return prev;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d57eb7c98c08c03af6e4cd83509df31c81ac16af","date":1257684312,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"contrib/highlighter/src/java/org/apache/lucene/search/highlight/WeightedSpanTermExtractor.PositionCheckingMap#put(K,WeightedSpanTerm).mjava","pathOld":"contrib/highlighter/src/java/org/apache/lucene/search/highlight/WeightedSpanTermExtractor.PositionCheckingMap#put(K,WeightedSpanTerm).mjava","sourceNew":"    @Override\n    public WeightedSpanTerm put(K key, WeightedSpanTerm value) {\n      WeightedSpanTerm prev = super.put(key, value);\n      if (prev == null) return prev;\n      WeightedSpanTerm prevTerm = prev;\n      WeightedSpanTerm newTerm = value;\n      if (!prevTerm.positionSensitive) {\n        newTerm.positionSensitive = false;\n      }\n      return prev;\n    }\n\n","sourceOld":"    public WeightedSpanTerm put(K key, WeightedSpanTerm value) {\n      WeightedSpanTerm prev = super.put(key, value);\n      if (prev == null) return prev;\n      WeightedSpanTerm prevTerm = prev;\n      WeightedSpanTerm newTerm = value;\n      if (!prevTerm.positionSensitive) {\n        newTerm.positionSensitive = false;\n      }\n      return prev;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/highlighter/src/java/org/apache/lucene/search/highlight/WeightedSpanTermExtractor.PositionCheckingMap#put(K,WeightedSpanTerm).mjava","pathOld":"contrib/highlighter/src/java/org/apache/lucene/search/highlight/WeightedSpanTermExtractor.PositionCheckingMap#put(K,WeightedSpanTerm).mjava","sourceNew":"    @Override\n    public WeightedSpanTerm put(K key, WeightedSpanTerm value) {\n      WeightedSpanTerm prev = super.put(key, value);\n      if (prev == null) return prev;\n      WeightedSpanTerm prevTerm = prev;\n      WeightedSpanTerm newTerm = value;\n      if (!prevTerm.positionSensitive) {\n        newTerm.positionSensitive = false;\n      }\n      return prev;\n    }\n\n","sourceOld":"    @Override\n    public WeightedSpanTerm put(K key, WeightedSpanTerm value) {\n      WeightedSpanTerm prev = super.put(key, value);\n      if (prev == null) return prev;\n      WeightedSpanTerm prevTerm = prev;\n      WeightedSpanTerm newTerm = value;\n      if (!prevTerm.positionSensitive) {\n        newTerm.positionSensitive = false;\n      }\n      return prev;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ffdf794cee8d43eb612df752c592cef2dc3e75ae":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d57eb7c98c08c03af6e4cd83509df31c81ac16af":["ffdf794cee8d43eb612df752c592cef2dc3e75ae"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["d57eb7c98c08c03af6e4cd83509df31c81ac16af"]},"commit2Childs":{"ffdf794cee8d43eb612df752c592cef2dc3e75ae":["d57eb7c98c08c03af6e4cd83509df31c81ac16af"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ffdf794cee8d43eb612df752c592cef2dc3e75ae"],"d57eb7c98c08c03af6e4cd83509df31c81ac16af":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}