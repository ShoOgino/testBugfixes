{"path":"solr/test-framework/src/java/org/apache/solr/cloud/ZkTestServer#waitForServerUp(String,long).mjava","commits":[{"id":"bb222a3f9d9421d5c95afce73013fbd8de07ea1f","date":1543514331,"type":0,"author":"markrmiller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/ZkTestServer#waitForServerUp(String,long).mjava","pathOld":"/dev/null","sourceNew":"  public static boolean waitForServerUp(String hp, long timeoutMs) {\n    final TimeOut timeout = new TimeOut(timeoutMs, TimeUnit.MILLISECONDS, TimeSource.NANO_TIME);\n    while (true) {\n      try {\n        HostPort hpobj = parseHostPortList(hp).get(0);\n        send4LetterWord(hpobj.host, hpobj.port, \"stat\");\n        return true;\n      } catch (IOException e) {\n        e.printStackTrace();\n      }\n      \n      if (timeout.hasTimedOut()) {\n        throw new RuntimeException(\"Time out waiting for ZooKeeper to startup!\");\n      }\n      try {\n        Thread.sleep(250);\n      } catch (InterruptedException e) {\n        // ignore\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0db83f1bb855a4ac824c9a2a8e1ee9b29a039c15","date":1554259533,"type":3,"author":"Gus Heck","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/ZkTestServer#waitForServerUp(String,long).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/ZkTestServer#waitForServerUp(String,long).mjava","sourceNew":"  public static boolean waitForServerUp(String hp, long timeoutMs) {\n    final TimeOut timeout = new TimeOut(timeoutMs, TimeUnit.MILLISECONDS, TimeSource.NANO_TIME);\n    while (true) {\n      try {\n        HostPort hpobj = parseHostPortList(hp).get(0);\n        send4LetterWord(hpobj.host, hpobj.port, \"stat\");\n        return true;\n      } catch (IOException e) {\n        e.printStackTrace();\n      }\n\n      if (timeout.hasTimedOut()) {\n        throw new RuntimeException(\"Time out waiting for ZooKeeper to startup!\");\n      }\n      try {\n        Thread.sleep(250);\n      } catch (InterruptedException e) {\n        // ignore\n      }\n    }\n  }\n\n","sourceOld":"  public static boolean waitForServerUp(String hp, long timeoutMs) {\n    final TimeOut timeout = new TimeOut(timeoutMs, TimeUnit.MILLISECONDS, TimeSource.NANO_TIME);\n    while (true) {\n      try {\n        HostPort hpobj = parseHostPortList(hp).get(0);\n        send4LetterWord(hpobj.host, hpobj.port, \"stat\");\n        return true;\n      } catch (IOException e) {\n        e.printStackTrace();\n      }\n      \n      if (timeout.hasTimedOut()) {\n        throw new RuntimeException(\"Time out waiting for ZooKeeper to startup!\");\n      }\n      try {\n        Thread.sleep(250);\n      } catch (InterruptedException e) {\n        // ignore\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b06f42faae0ab79dde1a569756990bb96283580d","date":1566418420,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/ZkTestServer#waitForServerUp(String,long).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/ZkTestServer#waitForServerUp(String,long).mjava","sourceNew":"  public static boolean waitForServerUp(String hp, long timeoutMs) {\n    log.info(\"waitForServerUp: {}\", hp);\n    final TimeOut timeout = new TimeOut(timeoutMs, TimeUnit.MILLISECONDS, TimeSource.NANO_TIME);\n    while (true) {\n      try {\n        HostPort hpobj = parseHostPortList(hp).get(0);\n        send4LetterWord(hpobj.host, hpobj.port, \"stat\");\n        return true;\n      } catch (IOException e) {\n        e.printStackTrace();\n      }\n\n      if (timeout.hasTimedOut()) {\n        throw new RuntimeException(\"Time out waiting for ZooKeeper to startup!\");\n      }\n      try {\n        Thread.sleep(250);\n      } catch (InterruptedException e) {\n        // ignore\n      }\n    }\n  }\n\n","sourceOld":"  public static boolean waitForServerUp(String hp, long timeoutMs) {\n    final TimeOut timeout = new TimeOut(timeoutMs, TimeUnit.MILLISECONDS, TimeSource.NANO_TIME);\n    while (true) {\n      try {\n        HostPort hpobj = parseHostPortList(hp).get(0);\n        send4LetterWord(hpobj.host, hpobj.port, \"stat\");\n        return true;\n      } catch (IOException e) {\n        e.printStackTrace();\n      }\n\n      if (timeout.hasTimedOut()) {\n        throw new RuntimeException(\"Time out waiting for ZooKeeper to startup!\");\n      }\n      try {\n        Thread.sleep(250);\n      } catch (InterruptedException e) {\n        // ignore\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b06f42faae0ab79dde1a569756990bb96283580d":["0db83f1bb855a4ac824c9a2a8e1ee9b29a039c15"],"0db83f1bb855a4ac824c9a2a8e1ee9b29a039c15":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b06f42faae0ab79dde1a569756990bb96283580d"]},"commit2Childs":{"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["0db83f1bb855a4ac824c9a2a8e1ee9b29a039c15"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"b06f42faae0ab79dde1a569756990bb96283580d":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"0db83f1bb855a4ac824c9a2a8e1ee9b29a039c15":["b06f42faae0ab79dde1a569756990bb96283580d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}