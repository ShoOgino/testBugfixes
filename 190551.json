{"path":"solr/core/src/test/org/apache/solr/search/TestRecoveryHdfs#testVersionsOnRestart().mjava","commits":[{"id":"849494cf2f3a96af5c8c84995108ddd8456fcd04","date":1372277913,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestRecoveryHdfs#testVersionsOnRestart().mjava","pathOld":"/dev/null","sourceNew":"  // make sure that on a restart, versions don't start too low\n  @Test\n  public void testVersionsOnRestart() throws Exception {\n    clearIndex();\n    assertU(commit());\n\n    assertU(adoc(\"id\",\"D1\", \"val_i\",\"1\"));\n    assertU(adoc(\"id\",\"D2\", \"val_i\",\"1\"));\n    assertU(commit());\n    long v1 = getVer(req(\"q\",\"id:D1\"));\n    long v1a = getVer(req(\"q\",\"id:D2\"));\n\n    h.close();\n    createCore();\n\n    assertU(adoc(\"id\",\"D1\", \"val_i\",\"2\"));\n    assertU(commit());\n    long v2 = getVer(req(\"q\",\"id:D1\"));\n\n    assert(v2 > v1);\n\n    assertJQ(req(\"qt\",\"/get\", \"getVersions\",\"2\")\n        ,\"/versions==[\" + v2 + \",\" + v1a + \"]\"\n    );\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"37a0f60745e53927c4c876cfe5b5a58170f0646c","date":1373994005,"type":0,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/search/TestRecoveryHdfs#testVersionsOnRestart().mjava","pathOld":"/dev/null","sourceNew":"  // make sure that on a restart, versions don't start too low\n  @Test\n  public void testVersionsOnRestart() throws Exception {\n    clearIndex();\n    assertU(commit());\n\n    assertU(adoc(\"id\",\"D1\", \"val_i\",\"1\"));\n    assertU(adoc(\"id\",\"D2\", \"val_i\",\"1\"));\n    assertU(commit());\n    long v1 = getVer(req(\"q\",\"id:D1\"));\n    long v1a = getVer(req(\"q\",\"id:D2\"));\n\n    h.close();\n    createCore();\n\n    assertU(adoc(\"id\",\"D1\", \"val_i\",\"2\"));\n    assertU(commit());\n    long v2 = getVer(req(\"q\",\"id:D1\"));\n\n    assert(v2 > v1);\n\n    assertJQ(req(\"qt\",\"/get\", \"getVersions\",\"2\")\n        ,\"/versions==[\" + v2 + \",\" + v1a + \"]\"\n    );\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2c801a37c38aedbd2ddbd27f2aaeb30cd5c7af0f","date":1552317217,"type":3,"author":"Kevin Risden","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestRecoveryHdfs#testVersionsOnRestart().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestRecoveryHdfs#testVersionsOnRestart().mjava","sourceNew":"  // make sure that on a restart, versions don't start too low\n  @Test\n  public void testVersionsOnRestart() throws Exception {\n    clearIndex();\n    assertU(commit());\n\n    assertU(adoc(\"id\",\"D1\", \"val_i\",\"1\"));\n    assertU(adoc(\"id\",\"D2\", \"val_i\",\"1\"));\n    assertU(commit());\n    long v1 = getVer(req(\"q\",\"id:D1\"));\n    long v1a = getVer(req(\"q\",\"id:D2\"));\n\n    h.close();\n    createCore();\n\n    assertU(adoc(\"id\",\"D1\", \"val_i\",\"2\"));\n    assertU(commit());\n    long v2 = getVer(req(\"q\",\"id:D1\"));\n\n    assert(v2 > v1);\n\n    assertJQ(req(\"qt\",\"/get\", \"getVersions\",\"2\")\n        ,\"/versions==[\" + v2 + \",\" + v1a + \"]\"\n    );\n  }\n\n","sourceOld":"  // make sure that on a restart, versions don't start too low\n  @Test\n  public void testVersionsOnRestart() throws Exception {\n    clearIndex();\n    assertU(commit());\n\n    assertU(adoc(\"id\",\"D1\", \"val_i\",\"1\"));\n    assertU(adoc(\"id\",\"D2\", \"val_i\",\"1\"));\n    assertU(commit());\n    long v1 = getVer(req(\"q\",\"id:D1\"));\n    long v1a = getVer(req(\"q\",\"id:D2\"));\n\n    h.close();\n    createCore();\n\n    assertU(adoc(\"id\",\"D1\", \"val_i\",\"2\"));\n    assertU(commit());\n    long v2 = getVer(req(\"q\",\"id:D1\"));\n\n    assert(v2 > v1);\n\n    assertJQ(req(\"qt\",\"/get\", \"getVersions\",\"2\")\n        ,\"/versions==[\" + v2 + \",\" + v1a + \"]\"\n    );\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"849494cf2f3a96af5c8c84995108ddd8456fcd04":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"2c801a37c38aedbd2ddbd27f2aaeb30cd5c7af0f":["849494cf2f3a96af5c8c84995108ddd8456fcd04"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","849494cf2f3a96af5c8c84995108ddd8456fcd04"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2c801a37c38aedbd2ddbd27f2aaeb30cd5c7af0f"]},"commit2Childs":{"849494cf2f3a96af5c8c84995108ddd8456fcd04":["2c801a37c38aedbd2ddbd27f2aaeb30cd5c7af0f","37a0f60745e53927c4c876cfe5b5a58170f0646c"],"2c801a37c38aedbd2ddbd27f2aaeb30cd5c7af0f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["849494cf2f3a96af5c8c84995108ddd8456fcd04","37a0f60745e53927c4c876cfe5b5a58170f0646c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["37a0f60745e53927c4c876cfe5b5a58170f0646c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}