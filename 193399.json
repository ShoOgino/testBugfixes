{"path":"lucene/core/src/test/org/apache/lucene/util/fst/TestFSTs.FSTTester#run(FST[T],IntsRef,int[]).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/fst/TestFSTs.FSTTester#run(FST[T],IntsRef,int[]).mjava","pathOld":"lucene/src/test/org/apache/lucene/util/fst/TestFSTs.FSTTester#run(FST[T],IntsRef,int[]).mjava","sourceNew":"    // runs the term, returning the output, or null if term\n    // isn't accepted.  if prefixLength is non-null it must be\n    // length 1 int array; prefixLength[0] is set to the length\n    // of the term prefix that matches\n    private T run(FST<T> fst, IntsRef term, int[] prefixLength) throws IOException {\n      assert prefixLength == null || prefixLength.length == 1;\n      final FST.Arc<T> arc = fst.getFirstArc(new FST.Arc<T>());\n      final T NO_OUTPUT = fst.outputs.getNoOutput();\n      T output = NO_OUTPUT;\n      final FST.BytesReader fstReader = fst.getBytesReader(0);\n\n      for(int i=0;i<=term.length;i++) {\n        final int label;\n        if (i == term.length) {\n          label = FST.END_LABEL;\n        } else {\n          label = term.ints[term.offset+i];\n        }\n        // System.out.println(\"   loop i=\" + i + \" label=\" + label + \" output=\" + fst.outputs.outputToString(output) + \" curArc: target=\" + arc.target + \" isFinal?=\" + arc.isFinal());\n        if (fst.findTargetArc(label, arc, arc, fstReader) == null) {\n          // System.out.println(\"    not found\");\n          if (prefixLength != null) {\n            prefixLength[0] = i;\n            return output;\n          } else {\n            return null;\n          }\n        }\n        output = fst.outputs.add(output, arc.output);\n      }\n\n      if (prefixLength != null) {\n        prefixLength[0] = term.length;\n      }\n\n      return output;\n    }\n\n","sourceOld":"    // runs the term, returning the output, or null if term\n    // isn't accepted.  if prefixLength is non-null it must be\n    // length 1 int array; prefixLength[0] is set to the length\n    // of the term prefix that matches\n    private T run(FST<T> fst, IntsRef term, int[] prefixLength) throws IOException {\n      assert prefixLength == null || prefixLength.length == 1;\n      final FST.Arc<T> arc = fst.getFirstArc(new FST.Arc<T>());\n      final T NO_OUTPUT = fst.outputs.getNoOutput();\n      T output = NO_OUTPUT;\n      final FST.BytesReader fstReader = fst.getBytesReader(0);\n\n      for(int i=0;i<=term.length;i++) {\n        final int label;\n        if (i == term.length) {\n          label = FST.END_LABEL;\n        } else {\n          label = term.ints[term.offset+i];\n        }\n        // System.out.println(\"   loop i=\" + i + \" label=\" + label + \" output=\" + fst.outputs.outputToString(output) + \" curArc: target=\" + arc.target + \" isFinal?=\" + arc.isFinal());\n        if (fst.findTargetArc(label, arc, arc, fstReader) == null) {\n          // System.out.println(\"    not found\");\n          if (prefixLength != null) {\n            prefixLength[0] = i;\n            return output;\n          } else {\n            return null;\n          }\n        }\n        output = fst.outputs.add(output, arc.output);\n      }\n\n      if (prefixLength != null) {\n        prefixLength[0] = term.length;\n      }\n\n      return output;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5ebe14aae60589c9bb6423f3cce02d5f599e1540","date":1348361556,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/test/org/apache/lucene/util/fst/TestFSTs.FSTTester#run(FST[T],IntsRef,int[]).mjava","sourceNew":null,"sourceOld":"    // runs the term, returning the output, or null if term\n    // isn't accepted.  if prefixLength is non-null it must be\n    // length 1 int array; prefixLength[0] is set to the length\n    // of the term prefix that matches\n    private T run(FST<T> fst, IntsRef term, int[] prefixLength) throws IOException {\n      assert prefixLength == null || prefixLength.length == 1;\n      final FST.Arc<T> arc = fst.getFirstArc(new FST.Arc<T>());\n      final T NO_OUTPUT = fst.outputs.getNoOutput();\n      T output = NO_OUTPUT;\n      final FST.BytesReader fstReader = fst.getBytesReader(0);\n\n      for(int i=0;i<=term.length;i++) {\n        final int label;\n        if (i == term.length) {\n          label = FST.END_LABEL;\n        } else {\n          label = term.ints[term.offset+i];\n        }\n        // System.out.println(\"   loop i=\" + i + \" label=\" + label + \" output=\" + fst.outputs.outputToString(output) + \" curArc: target=\" + arc.target + \" isFinal?=\" + arc.isFinal());\n        if (fst.findTargetArc(label, arc, arc, fstReader) == null) {\n          // System.out.println(\"    not found\");\n          if (prefixLength != null) {\n            prefixLength[0] = i;\n            return output;\n          } else {\n            return null;\n          }\n        }\n        output = fst.outputs.add(output, arc.output);\n      }\n\n      if (prefixLength != null) {\n        prefixLength[0] = term.length;\n      }\n\n      return output;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5ebe14aae60589c9bb6423f3cce02d5f599e1540":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5ebe14aae60589c9bb6423f3cce02d5f599e1540"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["5ebe14aae60589c9bb6423f3cce02d5f599e1540"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"5ebe14aae60589c9bb6423f3cce02d5f599e1540":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}