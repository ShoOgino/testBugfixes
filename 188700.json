{"path":"solr/core/src/java/org/apache/solr/rest/schema/analysis/ManagedSynonymFilterFactory.SynonymManager#doGet(BaseSolrResource,String).mjava","commits":[{"id":"9ed5f4bd4ee593745097b1ec9f0110b1997a9e58","date":1396480148,"type":0,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/rest/schema/analysis/ManagedSynonymFilterFactory.SynonymManager#doGet(BaseSolrResource,String).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public void doGet(BaseSolrResource endpoint, String childId) {\n      SolrQueryResponse response = endpoint.getSolrResponse();\n      if (childId != null) {\n        boolean ignoreCase = getIgnoreCase();\n        String key = applyCaseSetting(ignoreCase, childId);\n        Set<String> output = synonymMappings.get(key);\n        if (output == null) {\n          throw new SolrException(ErrorCode.NOT_FOUND,\n              String.format(Locale.ROOT, \"%s not found in %s\", key, getResourceId()));\n        }\n        response.add(key, output);\n      } else {\n        response.add(SYNONYM_MAPPINGS, buildMapToStore(synonymMappings));      \n      }\n    }  \n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5eb2511ababf862ea11e10761c70ee560cd84510","date":1396607225,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/rest/schema/analysis/ManagedSynonymFilterFactory.SynonymManager#doGet(BaseSolrResource,String).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public void doGet(BaseSolrResource endpoint, String childId) {\n      SolrQueryResponse response = endpoint.getSolrResponse();\n      if (childId != null) {\n        boolean ignoreCase = getIgnoreCase();\n        String key = applyCaseSetting(ignoreCase, childId);\n        Set<String> output = synonymMappings.get(key);\n        if (output == null) {\n          throw new SolrException(ErrorCode.NOT_FOUND,\n              String.format(Locale.ROOT, \"%s not found in %s\", key, getResourceId()));\n        }\n        response.add(key, output);\n      } else {\n        response.add(SYNONYM_MAPPINGS, buildMapToStore(synonymMappings));      \n      }\n    }  \n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3c897483ab479f5d1bcdd40400d20ef417b3b837","date":1400781817,"type":3,"author":"Timothy Potter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/rest/schema/analysis/ManagedSynonymFilterFactory.SynonymManager#doGet(BaseSolrResource,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/rest/schema/analysis/ManagedSynonymFilterFactory.SynonymManager#doGet(BaseSolrResource,String).mjava","sourceNew":"    @Override\n    public void doGet(BaseSolrResource endpoint, String childId) {\n      SolrQueryResponse response = endpoint.getSolrResponse();\n      if (childId != null) {\n        boolean ignoreCase = getIgnoreCase();\n        String key = applyCaseSetting(ignoreCase, childId);\n        \n        // if ignoreCase==true, then we get the mappings using the lower-cased key\n        // and then return a union of all case-sensitive keys, if false, then\n        // we only return the mappings for the exact case requested\n        CasePreservedSynonymMappings cpsm = synonymMappings.get(key);\n        Set<String> mappings = (cpsm != null) ? cpsm.getMappings(ignoreCase, childId) : null;\n        if (mappings == null)\n          throw new SolrException(ErrorCode.NOT_FOUND,\n              String.format(Locale.ROOT, \"%s not found in %s\", childId, getResourceId()));          \n        \n        response.add(childId, mappings);\n      } else {\n        response.add(SYNONYM_MAPPINGS, buildMapToStore(getStoredView()));      \n      }\n    }  \n\n","sourceOld":"    @Override\n    public void doGet(BaseSolrResource endpoint, String childId) {\n      SolrQueryResponse response = endpoint.getSolrResponse();\n      if (childId != null) {\n        boolean ignoreCase = getIgnoreCase();\n        String key = applyCaseSetting(ignoreCase, childId);\n        Set<String> output = synonymMappings.get(key);\n        if (output == null) {\n          throw new SolrException(ErrorCode.NOT_FOUND,\n              String.format(Locale.ROOT, \"%s not found in %s\", key, getResourceId()));\n        }\n        response.add(key, output);\n      } else {\n        response.add(SYNONYM_MAPPINGS, buildMapToStore(synonymMappings));      \n      }\n    }  \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5eb2511ababf862ea11e10761c70ee560cd84510":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","9ed5f4bd4ee593745097b1ec9f0110b1997a9e58"],"9ed5f4bd4ee593745097b1ec9f0110b1997a9e58":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3c897483ab479f5d1bcdd40400d20ef417b3b837":["9ed5f4bd4ee593745097b1ec9f0110b1997a9e58"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3c897483ab479f5d1bcdd40400d20ef417b3b837"]},"commit2Childs":{"5eb2511ababf862ea11e10761c70ee560cd84510":[],"9ed5f4bd4ee593745097b1ec9f0110b1997a9e58":["5eb2511ababf862ea11e10761c70ee560cd84510","3c897483ab479f5d1bcdd40400d20ef417b3b837"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5eb2511ababf862ea11e10761c70ee560cd84510","9ed5f4bd4ee593745097b1ec9f0110b1997a9e58"],"3c897483ab479f5d1bcdd40400d20ef417b3b837":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5eb2511ababf862ea11e10761c70ee560cd84510","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}