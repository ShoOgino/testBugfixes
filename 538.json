{"path":"solr/core/src/test/org/apache/solr/update/SolrIndexSplitterTest#testSplitAlternately().mjava","commits":[{"id":"7ba13b1e8eb54daafdac40183a898b820ac9f73b","date":1365684595,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/SolrIndexSplitterTest#testSplitAlternately().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testSplitAlternately() throws Exception {\n    LocalSolrQueryRequest request = null;\n    Directory directory = null;\n    try {\n      // add an even number of docs\n      int max = (1 + random().nextInt(10)) * 3;\n      log.info(\"Adding {} number of documents\", max);\n      for (int i = 0; i < max; i++) {\n        assertU(adoc(\"id\", String.valueOf(i)));\n      }\n      assertU(commit());\n\n      request = lrf.makeRequest(\"q\", \"dummy\");\n\n      SplitIndexCommand command = new SplitIndexCommand(request,\n          Lists.newArrayList(indexDir1.getAbsolutePath(), indexDir2.getAbsolutePath(), indexDir3.getAbsolutePath()), null, null);\n      new SolrIndexSplitter(command).split();\n\n      directory = h.getCore().getDirectoryFactory().get(indexDir1.getAbsolutePath(),\n          DirectoryFactory.DirContext.DEFAULT, h.getCore().getSolrConfig().indexConfig.lockType);\n      DirectoryReader reader = DirectoryReader.open(directory);\n      assertEquals(\"split index1 has wrong number of documents\", max / 3, reader.numDocs());\n      reader.close();\n      h.getCore().getDirectoryFactory().release(directory);\n      directory = h.getCore().getDirectoryFactory().get(indexDir2.getAbsolutePath(),\n          DirectoryFactory.DirContext.DEFAULT, h.getCore().getSolrConfig().indexConfig.lockType);\n      reader = DirectoryReader.open(directory);\n      assertEquals(\"split index2 has wrong number of documents\", max / 3, reader.numDocs());\n      reader.close();\n      h.getCore().getDirectoryFactory().release(directory);\n      directory = h.getCore().getDirectoryFactory().get(indexDir3.getAbsolutePath(),\n          DirectoryFactory.DirContext.DEFAULT, h.getCore().getSolrConfig().indexConfig.lockType);\n      reader = DirectoryReader.open(directory);\n      assertEquals(\"split index3 has wrong number of documents\", max / 3, reader.numDocs());\n      reader.close();\n      h.getCore().getDirectoryFactory().release(directory);\n      directory = null;\n    } finally {\n      if (request != null) request.close(); // decrefs the searcher\n      if (directory != null)  {\n        // perhaps an assert failed, release the directory\n        h.getCore().getDirectoryFactory().release(directory);\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["a5cd9341c578f132de886964218bbefe52bdcd83"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a5cd9341c578f132de886964218bbefe52bdcd83","date":1368036656,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/SolrIndexSplitterTest#testSplitAlternately().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/SolrIndexSplitterTest#testSplitAlternately().mjava","sourceNew":"  @Test\n  public void testSplitAlternately() throws Exception {\n    LocalSolrQueryRequest request = null;\n    Directory directory = null;\n    try {\n      // add an even number of docs\n      int max = (1 + random().nextInt(10)) * 3;\n      log.info(\"Adding {} number of documents\", max);\n      for (int i = 0; i < max; i++) {\n        assertU(adoc(\"id\", String.valueOf(i)));\n      }\n      assertU(commit());\n\n      request = lrf.makeRequest(\"q\", \"dummy\");\n\n      SplitIndexCommand command = new SplitIndexCommand(request,\n          Lists.newArrayList(indexDir1.getAbsolutePath(), indexDir2.getAbsolutePath(), indexDir3.getAbsolutePath()), null, null, new PlainIdRouter());\n      new SolrIndexSplitter(command).split();\n\n      directory = h.getCore().getDirectoryFactory().get(indexDir1.getAbsolutePath(),\n          DirectoryFactory.DirContext.DEFAULT, h.getCore().getSolrConfig().indexConfig.lockType);\n      DirectoryReader reader = DirectoryReader.open(directory);\n      assertEquals(\"split index1 has wrong number of documents\", max / 3, reader.numDocs());\n      reader.close();\n      h.getCore().getDirectoryFactory().release(directory);\n      directory = h.getCore().getDirectoryFactory().get(indexDir2.getAbsolutePath(),\n          DirectoryFactory.DirContext.DEFAULT, h.getCore().getSolrConfig().indexConfig.lockType);\n      reader = DirectoryReader.open(directory);\n      assertEquals(\"split index2 has wrong number of documents\", max / 3, reader.numDocs());\n      reader.close();\n      h.getCore().getDirectoryFactory().release(directory);\n      directory = h.getCore().getDirectoryFactory().get(indexDir3.getAbsolutePath(),\n          DirectoryFactory.DirContext.DEFAULT, h.getCore().getSolrConfig().indexConfig.lockType);\n      reader = DirectoryReader.open(directory);\n      assertEquals(\"split index3 has wrong number of documents\", max / 3, reader.numDocs());\n      reader.close();\n      h.getCore().getDirectoryFactory().release(directory);\n      directory = null;\n    } finally {\n      if (request != null) request.close(); // decrefs the searcher\n      if (directory != null)  {\n        // perhaps an assert failed, release the directory\n        h.getCore().getDirectoryFactory().release(directory);\n      }\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testSplitAlternately() throws Exception {\n    LocalSolrQueryRequest request = null;\n    Directory directory = null;\n    try {\n      // add an even number of docs\n      int max = (1 + random().nextInt(10)) * 3;\n      log.info(\"Adding {} number of documents\", max);\n      for (int i = 0; i < max; i++) {\n        assertU(adoc(\"id\", String.valueOf(i)));\n      }\n      assertU(commit());\n\n      request = lrf.makeRequest(\"q\", \"dummy\");\n\n      SplitIndexCommand command = new SplitIndexCommand(request,\n          Lists.newArrayList(indexDir1.getAbsolutePath(), indexDir2.getAbsolutePath(), indexDir3.getAbsolutePath()), null, null);\n      new SolrIndexSplitter(command).split();\n\n      directory = h.getCore().getDirectoryFactory().get(indexDir1.getAbsolutePath(),\n          DirectoryFactory.DirContext.DEFAULT, h.getCore().getSolrConfig().indexConfig.lockType);\n      DirectoryReader reader = DirectoryReader.open(directory);\n      assertEquals(\"split index1 has wrong number of documents\", max / 3, reader.numDocs());\n      reader.close();\n      h.getCore().getDirectoryFactory().release(directory);\n      directory = h.getCore().getDirectoryFactory().get(indexDir2.getAbsolutePath(),\n          DirectoryFactory.DirContext.DEFAULT, h.getCore().getSolrConfig().indexConfig.lockType);\n      reader = DirectoryReader.open(directory);\n      assertEquals(\"split index2 has wrong number of documents\", max / 3, reader.numDocs());\n      reader.close();\n      h.getCore().getDirectoryFactory().release(directory);\n      directory = h.getCore().getDirectoryFactory().get(indexDir3.getAbsolutePath(),\n          DirectoryFactory.DirContext.DEFAULT, h.getCore().getSolrConfig().indexConfig.lockType);\n      reader = DirectoryReader.open(directory);\n      assertEquals(\"split index3 has wrong number of documents\", max / 3, reader.numDocs());\n      reader.close();\n      h.getCore().getDirectoryFactory().release(directory);\n      directory = null;\n    } finally {\n      if (request != null) request.close(); // decrefs the searcher\n      if (directory != null)  {\n        // perhaps an assert failed, release the directory\n        h.getCore().getDirectoryFactory().release(directory);\n      }\n    }\n  }\n\n","bugFix":["7ba13b1e8eb54daafdac40183a898b820ac9f73b"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1816753738ff1f27f11b38030e83c0ded050b7a4","date":1380106089,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/SolrIndexSplitterTest#testSplitAlternately().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/SolrIndexSplitterTest#testSplitAlternately().mjava","sourceNew":"  @Test\n  public void testSplitAlternately() throws Exception {\n    LocalSolrQueryRequest request = null;\n    Directory directory = null;\n    try {\n      // add an even number of docs\n      int max = (1 + random().nextInt(10)) * 3;\n      log.info(\"Adding {} number of documents\", max);\n      for (int i = 0; i < max; i++) {\n        assertU(adoc(\"id\", String.valueOf(i)));\n      }\n      assertU(commit());\n\n      request = lrf.makeRequest(\"q\", \"dummy\");\n\n      SplitIndexCommand command = new SplitIndexCommand(request,\n          Lists.newArrayList(indexDir1.getAbsolutePath(), indexDir2.getAbsolutePath(), indexDir3.getAbsolutePath()), null, null, new PlainIdRouter(), null);\n      new SolrIndexSplitter(command).split();\n\n      directory = h.getCore().getDirectoryFactory().get(indexDir1.getAbsolutePath(),\n          DirectoryFactory.DirContext.DEFAULT, h.getCore().getSolrConfig().indexConfig.lockType);\n      DirectoryReader reader = DirectoryReader.open(directory);\n      assertEquals(\"split index1 has wrong number of documents\", max / 3, reader.numDocs());\n      reader.close();\n      h.getCore().getDirectoryFactory().release(directory);\n      directory = h.getCore().getDirectoryFactory().get(indexDir2.getAbsolutePath(),\n          DirectoryFactory.DirContext.DEFAULT, h.getCore().getSolrConfig().indexConfig.lockType);\n      reader = DirectoryReader.open(directory);\n      assertEquals(\"split index2 has wrong number of documents\", max / 3, reader.numDocs());\n      reader.close();\n      h.getCore().getDirectoryFactory().release(directory);\n      directory = h.getCore().getDirectoryFactory().get(indexDir3.getAbsolutePath(),\n          DirectoryFactory.DirContext.DEFAULT, h.getCore().getSolrConfig().indexConfig.lockType);\n      reader = DirectoryReader.open(directory);\n      assertEquals(\"split index3 has wrong number of documents\", max / 3, reader.numDocs());\n      reader.close();\n      h.getCore().getDirectoryFactory().release(directory);\n      directory = null;\n    } finally {\n      if (request != null) request.close(); // decrefs the searcher\n      if (directory != null)  {\n        // perhaps an assert failed, release the directory\n        h.getCore().getDirectoryFactory().release(directory);\n      }\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testSplitAlternately() throws Exception {\n    LocalSolrQueryRequest request = null;\n    Directory directory = null;\n    try {\n      // add an even number of docs\n      int max = (1 + random().nextInt(10)) * 3;\n      log.info(\"Adding {} number of documents\", max);\n      for (int i = 0; i < max; i++) {\n        assertU(adoc(\"id\", String.valueOf(i)));\n      }\n      assertU(commit());\n\n      request = lrf.makeRequest(\"q\", \"dummy\");\n\n      SplitIndexCommand command = new SplitIndexCommand(request,\n          Lists.newArrayList(indexDir1.getAbsolutePath(), indexDir2.getAbsolutePath(), indexDir3.getAbsolutePath()), null, null, new PlainIdRouter());\n      new SolrIndexSplitter(command).split();\n\n      directory = h.getCore().getDirectoryFactory().get(indexDir1.getAbsolutePath(),\n          DirectoryFactory.DirContext.DEFAULT, h.getCore().getSolrConfig().indexConfig.lockType);\n      DirectoryReader reader = DirectoryReader.open(directory);\n      assertEquals(\"split index1 has wrong number of documents\", max / 3, reader.numDocs());\n      reader.close();\n      h.getCore().getDirectoryFactory().release(directory);\n      directory = h.getCore().getDirectoryFactory().get(indexDir2.getAbsolutePath(),\n          DirectoryFactory.DirContext.DEFAULT, h.getCore().getSolrConfig().indexConfig.lockType);\n      reader = DirectoryReader.open(directory);\n      assertEquals(\"split index2 has wrong number of documents\", max / 3, reader.numDocs());\n      reader.close();\n      h.getCore().getDirectoryFactory().release(directory);\n      directory = h.getCore().getDirectoryFactory().get(indexDir3.getAbsolutePath(),\n          DirectoryFactory.DirContext.DEFAULT, h.getCore().getSolrConfig().indexConfig.lockType);\n      reader = DirectoryReader.open(directory);\n      assertEquals(\"split index3 has wrong number of documents\", max / 3, reader.numDocs());\n      reader.close();\n      h.getCore().getDirectoryFactory().release(directory);\n      directory = null;\n    } finally {\n      if (request != null) request.close(); // decrefs the searcher\n      if (directory != null)  {\n        // perhaps an assert failed, release the directory\n        h.getCore().getDirectoryFactory().release(directory);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fbe8b2974b783dfe1b0160f39e4de0315fa51adb","date":1382029739,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/SolrIndexSplitterTest#testSplitAlternately().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/SolrIndexSplitterTest#testSplitAlternately().mjava","sourceNew":"  @Test\n  public void testSplitAlternately() throws Exception {\n    LocalSolrQueryRequest request = null;\n    Directory directory = null;\n    try {\n      // add an even number of docs\n      int max = (1 + random().nextInt(10)) * 3;\n      log.info(\"Adding {} number of documents\", max);\n      for (int i = 0; i < max; i++) {\n        assertU(adoc(\"id\", String.valueOf(i)));\n      }\n      assertU(commit());\n\n      request = lrf.makeRequest(\"q\", \"dummy\");\n\n      SplitIndexCommand command = new SplitIndexCommand(request,\n          Lists.newArrayList(indexDir1.getAbsolutePath(), indexDir2.getAbsolutePath(), indexDir3.getAbsolutePath()), null, null, new PlainIdRouter(), null, null);\n      new SolrIndexSplitter(command).split();\n\n      directory = h.getCore().getDirectoryFactory().get(indexDir1.getAbsolutePath(),\n          DirectoryFactory.DirContext.DEFAULT, h.getCore().getSolrConfig().indexConfig.lockType);\n      DirectoryReader reader = DirectoryReader.open(directory);\n      assertEquals(\"split index1 has wrong number of documents\", max / 3, reader.numDocs());\n      reader.close();\n      h.getCore().getDirectoryFactory().release(directory);\n      directory = h.getCore().getDirectoryFactory().get(indexDir2.getAbsolutePath(),\n          DirectoryFactory.DirContext.DEFAULT, h.getCore().getSolrConfig().indexConfig.lockType);\n      reader = DirectoryReader.open(directory);\n      assertEquals(\"split index2 has wrong number of documents\", max / 3, reader.numDocs());\n      reader.close();\n      h.getCore().getDirectoryFactory().release(directory);\n      directory = h.getCore().getDirectoryFactory().get(indexDir3.getAbsolutePath(),\n          DirectoryFactory.DirContext.DEFAULT, h.getCore().getSolrConfig().indexConfig.lockType);\n      reader = DirectoryReader.open(directory);\n      assertEquals(\"split index3 has wrong number of documents\", max / 3, reader.numDocs());\n      reader.close();\n      h.getCore().getDirectoryFactory().release(directory);\n      directory = null;\n    } finally {\n      if (request != null) request.close(); // decrefs the searcher\n      if (directory != null)  {\n        // perhaps an assert failed, release the directory\n        h.getCore().getDirectoryFactory().release(directory);\n      }\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testSplitAlternately() throws Exception {\n    LocalSolrQueryRequest request = null;\n    Directory directory = null;\n    try {\n      // add an even number of docs\n      int max = (1 + random().nextInt(10)) * 3;\n      log.info(\"Adding {} number of documents\", max);\n      for (int i = 0; i < max; i++) {\n        assertU(adoc(\"id\", String.valueOf(i)));\n      }\n      assertU(commit());\n\n      request = lrf.makeRequest(\"q\", \"dummy\");\n\n      SplitIndexCommand command = new SplitIndexCommand(request,\n          Lists.newArrayList(indexDir1.getAbsolutePath(), indexDir2.getAbsolutePath(), indexDir3.getAbsolutePath()), null, null, new PlainIdRouter(), null);\n      new SolrIndexSplitter(command).split();\n\n      directory = h.getCore().getDirectoryFactory().get(indexDir1.getAbsolutePath(),\n          DirectoryFactory.DirContext.DEFAULT, h.getCore().getSolrConfig().indexConfig.lockType);\n      DirectoryReader reader = DirectoryReader.open(directory);\n      assertEquals(\"split index1 has wrong number of documents\", max / 3, reader.numDocs());\n      reader.close();\n      h.getCore().getDirectoryFactory().release(directory);\n      directory = h.getCore().getDirectoryFactory().get(indexDir2.getAbsolutePath(),\n          DirectoryFactory.DirContext.DEFAULT, h.getCore().getSolrConfig().indexConfig.lockType);\n      reader = DirectoryReader.open(directory);\n      assertEquals(\"split index2 has wrong number of documents\", max / 3, reader.numDocs());\n      reader.close();\n      h.getCore().getDirectoryFactory().release(directory);\n      directory = h.getCore().getDirectoryFactory().get(indexDir3.getAbsolutePath(),\n          DirectoryFactory.DirContext.DEFAULT, h.getCore().getSolrConfig().indexConfig.lockType);\n      reader = DirectoryReader.open(directory);\n      assertEquals(\"split index3 has wrong number of documents\", max / 3, reader.numDocs());\n      reader.close();\n      h.getCore().getDirectoryFactory().release(directory);\n      directory = null;\n    } finally {\n      if (request != null) request.close(); // decrefs the searcher\n      if (directory != null)  {\n        // perhaps an assert failed, release the directory\n        h.getCore().getDirectoryFactory().release(directory);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"20c968c14aace7cf49843bf2c1fafc7fd3845659","date":1533133859,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/SolrIndexSplitterTest#testSplitAlternately().mjava","pathOld":"solr/core/src/test/org/apache/solr/update/SolrIndexSplitterTest#testSplitAlternately().mjava","sourceNew":"  @Test\n  public void testSplitAlternately() throws Exception {\n    doTestSplitAlternately(SolrIndexSplitter.SplitMethod.REWRITE);\n  }\n\n","sourceOld":"  @Test\n  public void testSplitAlternately() throws Exception {\n    LocalSolrQueryRequest request = null;\n    Directory directory = null;\n    try {\n      // add an even number of docs\n      int max = (1 + random().nextInt(10)) * 3;\n      log.info(\"Adding {} number of documents\", max);\n      for (int i = 0; i < max; i++) {\n        assertU(adoc(\"id\", String.valueOf(i)));\n      }\n      assertU(commit());\n\n      request = lrf.makeRequest(\"q\", \"dummy\");\n\n      SplitIndexCommand command = new SplitIndexCommand(request,\n          Lists.newArrayList(indexDir1.getAbsolutePath(), indexDir2.getAbsolutePath(), indexDir3.getAbsolutePath()), null, null, new PlainIdRouter(), null, null);\n      new SolrIndexSplitter(command).split();\n\n      directory = h.getCore().getDirectoryFactory().get(indexDir1.getAbsolutePath(),\n          DirectoryFactory.DirContext.DEFAULT, h.getCore().getSolrConfig().indexConfig.lockType);\n      DirectoryReader reader = DirectoryReader.open(directory);\n      assertEquals(\"split index1 has wrong number of documents\", max / 3, reader.numDocs());\n      reader.close();\n      h.getCore().getDirectoryFactory().release(directory);\n      directory = h.getCore().getDirectoryFactory().get(indexDir2.getAbsolutePath(),\n          DirectoryFactory.DirContext.DEFAULT, h.getCore().getSolrConfig().indexConfig.lockType);\n      reader = DirectoryReader.open(directory);\n      assertEquals(\"split index2 has wrong number of documents\", max / 3, reader.numDocs());\n      reader.close();\n      h.getCore().getDirectoryFactory().release(directory);\n      directory = h.getCore().getDirectoryFactory().get(indexDir3.getAbsolutePath(),\n          DirectoryFactory.DirContext.DEFAULT, h.getCore().getSolrConfig().indexConfig.lockType);\n      reader = DirectoryReader.open(directory);\n      assertEquals(\"split index3 has wrong number of documents\", max / 3, reader.numDocs());\n      reader.close();\n      h.getCore().getDirectoryFactory().release(directory);\n      directory = null;\n    } finally {\n      if (request != null) request.close(); // decrefs the searcher\n      if (directory != null)  {\n        // perhaps an assert failed, release the directory\n        h.getCore().getDirectoryFactory().release(directory);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"fbe8b2974b783dfe1b0160f39e4de0315fa51adb":["1816753738ff1f27f11b38030e83c0ded050b7a4"],"1816753738ff1f27f11b38030e83c0ded050b7a4":["a5cd9341c578f132de886964218bbefe52bdcd83"],"a5cd9341c578f132de886964218bbefe52bdcd83":["7ba13b1e8eb54daafdac40183a898b820ac9f73b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"20c968c14aace7cf49843bf2c1fafc7fd3845659":["fbe8b2974b783dfe1b0160f39e4de0315fa51adb"],"7ba13b1e8eb54daafdac40183a898b820ac9f73b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["20c968c14aace7cf49843bf2c1fafc7fd3845659"]},"commit2Childs":{"fbe8b2974b783dfe1b0160f39e4de0315fa51adb":["20c968c14aace7cf49843bf2c1fafc7fd3845659"],"1816753738ff1f27f11b38030e83c0ded050b7a4":["fbe8b2974b783dfe1b0160f39e4de0315fa51adb"],"a5cd9341c578f132de886964218bbefe52bdcd83":["1816753738ff1f27f11b38030e83c0ded050b7a4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7ba13b1e8eb54daafdac40183a898b820ac9f73b"],"7ba13b1e8eb54daafdac40183a898b820ac9f73b":["a5cd9341c578f132de886964218bbefe52bdcd83"],"20c968c14aace7cf49843bf2c1fafc7fd3845659":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}