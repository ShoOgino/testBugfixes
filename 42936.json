{"path":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#getTaxoArrays().mjava","commits":[{"id":"3d58d08788c3fd51172ba34474cca42499d6391b","date":1354802133,"type":1,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#getTaxoArrays().mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#getParentArray().mjava","sourceNew":"  private ParallelTaxonomyArrays getTaxoArrays() throws IOException {\n    if (taxoArrays == null) {\n      synchronized (this) {\n        if (taxoArrays == null) {\n          initReaderManager();\n          DirectoryReader reader = readerManager.acquire();\n          try {\n            // according to Java Concurrency, this might perform better on some\n            // JVMs, since the object initialization doesn't happen on the\n            // volatile member.\n            ParallelTaxonomyArrays tmpArrays = new ParallelTaxonomyArrays(reader);\n            taxoArrays = tmpArrays;\n          } finally {\n            readerManager.release(reader);\n          }\n        }\n      }\n    }\n    return taxoArrays;\n  }\n\n","sourceOld":"  private ParentArray getParentArray() throws IOException {\n    if (parentArray == null) {\n      synchronized (this) {\n        if (parentArray == null) {\n          initReaderManager();\n          DirectoryReader reader = readerManager.acquire();\n          try {\n            parentArray = new ParentArray(reader);\n          } finally {\n            readerManager.release(reader);\n          }\n        }\n      }\n    }\n    return parentArray;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"407687e67faf6e1f02a211ca078d8e3eed631027","date":1355157407,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#getTaxoArrays().mjava","pathOld":"/dev/null","sourceNew":"  private ParallelTaxonomyArrays getTaxoArrays() throws IOException {\n    if (taxoArrays == null) {\n      synchronized (this) {\n        if (taxoArrays == null) {\n          initReaderManager();\n          DirectoryReader reader = readerManager.acquire();\n          try {\n            // according to Java Concurrency, this might perform better on some\n            // JVMs, since the object initialization doesn't happen on the\n            // volatile member.\n            ParallelTaxonomyArrays tmpArrays = new ParallelTaxonomyArrays(reader);\n            taxoArrays = tmpArrays;\n          } finally {\n            readerManager.release(reader);\n          }\n        }\n      }\n    }\n    return taxoArrays;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f2ae7e371df56ccde467b71db7e82066f05a5972","date":1363620258,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#getTaxoArrays().mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/DirectoryTaxonomyWriter#getTaxoArrays().mjava","sourceNew":"  private TaxonomyIndexArrays getTaxoArrays() throws IOException {\n    if (taxoArrays == null) {\n      synchronized (this) {\n        if (taxoArrays == null) {\n          initReaderManager();\n          DirectoryReader reader = readerManager.acquire();\n          try {\n            // according to Java Concurrency, this might perform better on some\n            // JVMs, since the object initialization doesn't happen on the\n            // volatile member.\n            TaxonomyIndexArrays tmpArrays = new TaxonomyIndexArrays(reader);\n            taxoArrays = tmpArrays;\n          } finally {\n            readerManager.release(reader);\n          }\n        }\n      }\n    }\n    return taxoArrays;\n  }\n\n","sourceOld":"  private ParallelTaxonomyArrays getTaxoArrays() throws IOException {\n    if (taxoArrays == null) {\n      synchronized (this) {\n        if (taxoArrays == null) {\n          initReaderManager();\n          DirectoryReader reader = readerManager.acquire();\n          try {\n            // according to Java Concurrency, this might perform better on some\n            // JVMs, since the object initialization doesn't happen on the\n            // volatile member.\n            ParallelTaxonomyArrays tmpArrays = new ParallelTaxonomyArrays(reader);\n            taxoArrays = tmpArrays;\n          } finally {\n            readerManager.release(reader);\n          }\n        }\n      }\n    }\n    return taxoArrays;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f2ae7e371df56ccde467b71db7e82066f05a5972":["3d58d08788c3fd51172ba34474cca42499d6391b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"407687e67faf6e1f02a211ca078d8e3eed631027":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3d58d08788c3fd51172ba34474cca42499d6391b"],"3d58d08788c3fd51172ba34474cca42499d6391b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f2ae7e371df56ccde467b71db7e82066f05a5972"]},"commit2Childs":{"f2ae7e371df56ccde467b71db7e82066f05a5972":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["407687e67faf6e1f02a211ca078d8e3eed631027","3d58d08788c3fd51172ba34474cca42499d6391b"],"407687e67faf6e1f02a211ca078d8e3eed631027":[],"3d58d08788c3fd51172ba34474cca42499d6391b":["f2ae7e371df56ccde467b71db7e82066f05a5972","407687e67faf6e1f02a211ca078d8e3eed631027"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["407687e67faf6e1f02a211ca078d8e3eed631027","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}