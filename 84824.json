{"path":"lucene/core/src/java/org/apache/lucene/index/SlowCodecReaderWrapper#wrap(LeafReader).mjava","commits":[{"id":"505bff044e47a553f461b6f4484d1d08faf4ac85","date":1420728783,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SlowCodecReaderWrapper#wrap(LeafReader).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Returns a {@code CodecReader} view of reader. \n   * <p>\n   * If {@code reader} is already a {@code CodecReader}, it is returned\n   * directly. Otherwise, a (slow) view is returned.\n   */\n  public static CodecReader wrap(final LeafReader reader) throws IOException {\n    if (reader instanceof CodecReader) {\n      return (CodecReader)reader;\n    } else {\n      // simulate it slowly, over the leafReader api:\n      reader.checkIntegrity();\n      return new CodecReader() {\n\n        @Override\n        public TermVectorsReader getTermVectorsReader() {\n          reader.ensureOpen();\n          return readerToTermVectorsReader(reader);\n        }\n\n        @Override\n        public StoredFieldsReader getFieldsReader() {\n          reader.ensureOpen();\n          return readerToStoredFieldsReader(reader);\n        }\n\n        @Override\n        public NormsProducer getNormsReader() {\n          reader.ensureOpen();\n          return readerToNormsProducer(reader);\n        }\n\n        @Override\n        public DocValuesProducer getDocValuesReader() {\n          reader.ensureOpen();\n          return readerToDocValuesProducer(reader);\n        }\n\n        @Override\n        public FieldsProducer getPostingsReader() {\n          reader.ensureOpen();\n          try {\n            return readerToFieldsProducer(reader);\n          } catch (IOException bogus) {\n            throw new AssertionError(bogus);\n          }\n        }\n\n        @Override\n        public FieldInfos getFieldInfos() {\n          return reader.getFieldInfos();\n        }\n\n        @Override\n        public Bits getLiveDocs() {\n          return reader.getLiveDocs();\n        }\n\n        @Override\n        public int numDocs() {\n          return reader.numDocs();\n        }\n\n        @Override\n        public int maxDoc() {\n          return reader.maxDoc();\n        }\n\n        @Override\n        public void addCoreClosedListener(CoreClosedListener listener) {\n          reader.addCoreClosedListener(listener);\n        }\n\n        @Override\n        public void removeCoreClosedListener(CoreClosedListener listener) {\n          reader.removeCoreClosedListener(listener);\n        }\n      };\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ca792c26af46bd6c4a08d81117c60440cf6a7e3d","date":1445938295,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SlowCodecReaderWrapper#wrap(LeafReader).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SlowCodecReaderWrapper#wrap(LeafReader).mjava","sourceNew":"  /**\n   * Returns a {@code CodecReader} view of reader. \n   * <p>\n   * If {@code reader} is already a {@code CodecReader}, it is returned\n   * directly. Otherwise, a (slow) view is returned.\n   */\n  public static CodecReader wrap(final LeafReader reader) throws IOException {\n    if (reader instanceof CodecReader) {\n      return (CodecReader)reader;\n    } else {\n      // simulate it slowly, over the leafReader api:\n      reader.checkIntegrity();\n      return new CodecReader() {\n\n        @Override\n        public TermVectorsReader getTermVectorsReader() {\n          reader.ensureOpen();\n          return readerToTermVectorsReader(reader);\n        }\n\n        @Override\n        public StoredFieldsReader getFieldsReader() {\n          reader.ensureOpen();\n          return readerToStoredFieldsReader(reader);\n        }\n\n        @Override\n        public NormsProducer getNormsReader() {\n          reader.ensureOpen();\n          return readerToNormsProducer(reader);\n        }\n\n        @Override\n        public DocValuesProducer getDocValuesReader() {\n          reader.ensureOpen();\n          return readerToDocValuesProducer(reader);\n        }\n\n        @Override\n        public FieldsProducer getPostingsReader() {\n          reader.ensureOpen();\n          try {\n            return readerToFieldsProducer(reader);\n          } catch (IOException bogus) {\n            throw new AssertionError(bogus);\n          }\n        }\n\n        @Override\n        public FieldInfos getFieldInfos() {\n          return reader.getFieldInfos();\n        }\n\n        @Override\n        public DimensionalValues getDimensionalValues() {\n          return reader.getDimensionalValues();\n        }\n\n        @Override\n        public DimensionalReader getDimensionalReader() {\n          return dimensionalValuesToReader(reader.getDimensionalValues());\n        }\n\n        @Override\n        public Bits getLiveDocs() {\n          return reader.getLiveDocs();\n        }\n\n        @Override\n        public int numDocs() {\n          return reader.numDocs();\n        }\n\n        @Override\n        public int maxDoc() {\n          return reader.maxDoc();\n        }\n\n        @Override\n        public void addCoreClosedListener(CoreClosedListener listener) {\n          reader.addCoreClosedListener(listener);\n        }\n\n        @Override\n        public void removeCoreClosedListener(CoreClosedListener listener) {\n          reader.removeCoreClosedListener(listener);\n        }\n      };\n    }\n  }\n\n","sourceOld":"  /**\n   * Returns a {@code CodecReader} view of reader. \n   * <p>\n   * If {@code reader} is already a {@code CodecReader}, it is returned\n   * directly. Otherwise, a (slow) view is returned.\n   */\n  public static CodecReader wrap(final LeafReader reader) throws IOException {\n    if (reader instanceof CodecReader) {\n      return (CodecReader)reader;\n    } else {\n      // simulate it slowly, over the leafReader api:\n      reader.checkIntegrity();\n      return new CodecReader() {\n\n        @Override\n        public TermVectorsReader getTermVectorsReader() {\n          reader.ensureOpen();\n          return readerToTermVectorsReader(reader);\n        }\n\n        @Override\n        public StoredFieldsReader getFieldsReader() {\n          reader.ensureOpen();\n          return readerToStoredFieldsReader(reader);\n        }\n\n        @Override\n        public NormsProducer getNormsReader() {\n          reader.ensureOpen();\n          return readerToNormsProducer(reader);\n        }\n\n        @Override\n        public DocValuesProducer getDocValuesReader() {\n          reader.ensureOpen();\n          return readerToDocValuesProducer(reader);\n        }\n\n        @Override\n        public FieldsProducer getPostingsReader() {\n          reader.ensureOpen();\n          try {\n            return readerToFieldsProducer(reader);\n          } catch (IOException bogus) {\n            throw new AssertionError(bogus);\n          }\n        }\n\n        @Override\n        public FieldInfos getFieldInfos() {\n          return reader.getFieldInfos();\n        }\n\n        @Override\n        public Bits getLiveDocs() {\n          return reader.getLiveDocs();\n        }\n\n        @Override\n        public int numDocs() {\n          return reader.numDocs();\n        }\n\n        @Override\n        public int maxDoc() {\n          return reader.maxDoc();\n        }\n\n        @Override\n        public void addCoreClosedListener(CoreClosedListener listener) {\n          reader.addCoreClosedListener(listener);\n        }\n\n        @Override\n        public void removeCoreClosedListener(CoreClosedListener listener) {\n          reader.removeCoreClosedListener(listener);\n        }\n      };\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1eee4175312c41f89aa23427f9e4edfc00deeaac","date":1446373190,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SlowCodecReaderWrapper#wrap(LeafReader).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SlowCodecReaderWrapper#wrap(LeafReader).mjava","sourceNew":"  /**\n   * Returns a {@code CodecReader} view of reader. \n   * <p>\n   * If {@code reader} is already a {@code CodecReader}, it is returned\n   * directly. Otherwise, a (slow) view is returned.\n   */\n  public static CodecReader wrap(final LeafReader reader) throws IOException {\n    if (reader instanceof CodecReader) {\n      return (CodecReader) reader;\n    } else {\n      // simulate it slowly, over the leafReader api:\n      reader.checkIntegrity();\n      return new CodecReader() {\n\n        @Override\n        public TermVectorsReader getTermVectorsReader() {\n          reader.ensureOpen();\n          return readerToTermVectorsReader(reader);\n        }\n\n        @Override\n        public StoredFieldsReader getFieldsReader() {\n          reader.ensureOpen();\n          return readerToStoredFieldsReader(reader);\n        }\n\n        @Override\n        public NormsProducer getNormsReader() {\n          reader.ensureOpen();\n          return readerToNormsProducer(reader);\n        }\n\n        @Override\n        public DocValuesProducer getDocValuesReader() {\n          reader.ensureOpen();\n          return readerToDocValuesProducer(reader);\n        }\n\n        @Override\n        public FieldsProducer getPostingsReader() {\n          reader.ensureOpen();\n          try {\n            return readerToFieldsProducer(reader);\n          } catch (IOException bogus) {\n            throw new AssertionError(bogus);\n          }\n        }\n\n        @Override\n        public FieldInfos getFieldInfos() {\n          return reader.getFieldInfos();\n        }\n\n        @Override\n        public DimensionalValues getDimensionalValues() {\n          return reader.getDimensionalValues();\n        }\n\n        @Override\n        public DimensionalReader getDimensionalReader() {\n          return dimensionalValuesToReader(reader.getDimensionalValues());\n        }\n\n        @Override\n        public Bits getLiveDocs() {\n          return reader.getLiveDocs();\n        }\n\n        @Override\n        public int numDocs() {\n          return reader.numDocs();\n        }\n\n        @Override\n        public int maxDoc() {\n          return reader.maxDoc();\n        }\n\n        @Override\n        public void addCoreClosedListener(CoreClosedListener listener) {\n          reader.addCoreClosedListener(listener);\n        }\n\n        @Override\n        public void removeCoreClosedListener(CoreClosedListener listener) {\n          reader.removeCoreClosedListener(listener);\n        }\n      };\n    }\n  }\n\n","sourceOld":"  /**\n   * Returns a {@code CodecReader} view of reader. \n   * <p>\n   * If {@code reader} is already a {@code CodecReader}, it is returned\n   * directly. Otherwise, a (slow) view is returned.\n   */\n  public static CodecReader wrap(final LeafReader reader) throws IOException {\n    if (reader instanceof CodecReader) {\n      return (CodecReader)reader;\n    } else {\n      // simulate it slowly, over the leafReader api:\n      reader.checkIntegrity();\n      return new CodecReader() {\n\n        @Override\n        public TermVectorsReader getTermVectorsReader() {\n          reader.ensureOpen();\n          return readerToTermVectorsReader(reader);\n        }\n\n        @Override\n        public StoredFieldsReader getFieldsReader() {\n          reader.ensureOpen();\n          return readerToStoredFieldsReader(reader);\n        }\n\n        @Override\n        public NormsProducer getNormsReader() {\n          reader.ensureOpen();\n          return readerToNormsProducer(reader);\n        }\n\n        @Override\n        public DocValuesProducer getDocValuesReader() {\n          reader.ensureOpen();\n          return readerToDocValuesProducer(reader);\n        }\n\n        @Override\n        public FieldsProducer getPostingsReader() {\n          reader.ensureOpen();\n          try {\n            return readerToFieldsProducer(reader);\n          } catch (IOException bogus) {\n            throw new AssertionError(bogus);\n          }\n        }\n\n        @Override\n        public FieldInfos getFieldInfos() {\n          return reader.getFieldInfos();\n        }\n\n        @Override\n        public DimensionalValues getDimensionalValues() {\n          return reader.getDimensionalValues();\n        }\n\n        @Override\n        public DimensionalReader getDimensionalReader() {\n          return dimensionalValuesToReader(reader.getDimensionalValues());\n        }\n\n        @Override\n        public Bits getLiveDocs() {\n          return reader.getLiveDocs();\n        }\n\n        @Override\n        public int numDocs() {\n          return reader.numDocs();\n        }\n\n        @Override\n        public int maxDoc() {\n          return reader.maxDoc();\n        }\n\n        @Override\n        public void addCoreClosedListener(CoreClosedListener listener) {\n          reader.addCoreClosedListener(listener);\n        }\n\n        @Override\n        public void removeCoreClosedListener(CoreClosedListener listener) {\n          reader.removeCoreClosedListener(listener);\n        }\n      };\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cab7a79353f33d1a94cd307bf33aa5148601ebe6","date":1453391888,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SlowCodecReaderWrapper#wrap(LeafReader).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SlowCodecReaderWrapper#wrap(LeafReader).mjava","sourceNew":"  /**\n   * Returns a {@code CodecReader} view of reader. \n   * <p>\n   * If {@code reader} is already a {@code CodecReader}, it is returned\n   * directly. Otherwise, a (slow) view is returned.\n   */\n  public static CodecReader wrap(final LeafReader reader) throws IOException {\n    if (reader instanceof CodecReader) {\n      return (CodecReader) reader;\n    } else {\n      // simulate it slowly, over the leafReader api:\n      reader.checkIntegrity();\n      return new CodecReader() {\n\n        @Override\n        public TermVectorsReader getTermVectorsReader() {\n          reader.ensureOpen();\n          return readerToTermVectorsReader(reader);\n        }\n\n        @Override\n        public StoredFieldsReader getFieldsReader() {\n          reader.ensureOpen();\n          return readerToStoredFieldsReader(reader);\n        }\n\n        @Override\n        public NormsProducer getNormsReader() {\n          reader.ensureOpen();\n          return readerToNormsProducer(reader);\n        }\n\n        @Override\n        public DocValuesProducer getDocValuesReader() {\n          reader.ensureOpen();\n          return readerToDocValuesProducer(reader);\n        }\n\n        @Override\n        public FieldsProducer getPostingsReader() {\n          reader.ensureOpen();\n          try {\n            return readerToFieldsProducer(reader);\n          } catch (IOException bogus) {\n            throw new AssertionError(bogus);\n          }\n        }\n\n        @Override\n        public FieldInfos getFieldInfos() {\n          return reader.getFieldInfos();\n        }\n\n        @Override\n        public PointValues getPointValues() {\n          return reader.getPointValues();\n        }\n\n        @Override\n        public PointReader getPointReader() {\n          return pointValuesToReader(reader.getPointValues());\n        }\n\n        @Override\n        public Bits getLiveDocs() {\n          return reader.getLiveDocs();\n        }\n\n        @Override\n        public int numDocs() {\n          return reader.numDocs();\n        }\n\n        @Override\n        public int maxDoc() {\n          return reader.maxDoc();\n        }\n\n        @Override\n        public void addCoreClosedListener(CoreClosedListener listener) {\n          reader.addCoreClosedListener(listener);\n        }\n\n        @Override\n        public void removeCoreClosedListener(CoreClosedListener listener) {\n          reader.removeCoreClosedListener(listener);\n        }\n      };\n    }\n  }\n\n","sourceOld":"  /**\n   * Returns a {@code CodecReader} view of reader. \n   * <p>\n   * If {@code reader} is already a {@code CodecReader}, it is returned\n   * directly. Otherwise, a (slow) view is returned.\n   */\n  public static CodecReader wrap(final LeafReader reader) throws IOException {\n    if (reader instanceof CodecReader) {\n      return (CodecReader) reader;\n    } else {\n      // simulate it slowly, over the leafReader api:\n      reader.checkIntegrity();\n      return new CodecReader() {\n\n        @Override\n        public TermVectorsReader getTermVectorsReader() {\n          reader.ensureOpen();\n          return readerToTermVectorsReader(reader);\n        }\n\n        @Override\n        public StoredFieldsReader getFieldsReader() {\n          reader.ensureOpen();\n          return readerToStoredFieldsReader(reader);\n        }\n\n        @Override\n        public NormsProducer getNormsReader() {\n          reader.ensureOpen();\n          return readerToNormsProducer(reader);\n        }\n\n        @Override\n        public DocValuesProducer getDocValuesReader() {\n          reader.ensureOpen();\n          return readerToDocValuesProducer(reader);\n        }\n\n        @Override\n        public FieldsProducer getPostingsReader() {\n          reader.ensureOpen();\n          try {\n            return readerToFieldsProducer(reader);\n          } catch (IOException bogus) {\n            throw new AssertionError(bogus);\n          }\n        }\n\n        @Override\n        public FieldInfos getFieldInfos() {\n          return reader.getFieldInfos();\n        }\n\n        @Override\n        public DimensionalValues getDimensionalValues() {\n          return reader.getDimensionalValues();\n        }\n\n        @Override\n        public DimensionalReader getDimensionalReader() {\n          return dimensionalValuesToReader(reader.getDimensionalValues());\n        }\n\n        @Override\n        public Bits getLiveDocs() {\n          return reader.getLiveDocs();\n        }\n\n        @Override\n        public int numDocs() {\n          return reader.numDocs();\n        }\n\n        @Override\n        public int maxDoc() {\n          return reader.maxDoc();\n        }\n\n        @Override\n        public void addCoreClosedListener(CoreClosedListener listener) {\n          reader.addCoreClosedListener(listener);\n        }\n\n        @Override\n        public void removeCoreClosedListener(CoreClosedListener listener) {\n          reader.removeCoreClosedListener(listener);\n        }\n      };\n    }\n  }\n\n","bugFix":null,"bugIntro":["4522ffca5a1f420c6a02198c9332d7c596a30ca5"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4522ffca5a1f420c6a02198c9332d7c596a30ca5","date":1457270822,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SlowCodecReaderWrapper#wrap(LeafReader).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SlowCodecReaderWrapper#wrap(LeafReader).mjava","sourceNew":"  /**\n   * Returns a {@code CodecReader} view of reader. \n   * <p>\n   * If {@code reader} is already a {@code CodecReader}, it is returned\n   * directly. Otherwise, a (slow) view is returned.\n   */\n  public static CodecReader wrap(final LeafReader reader) throws IOException {\n    if (reader instanceof CodecReader) {\n      return (CodecReader) reader;\n    } else {\n      // simulate it slowly, over the leafReader api:\n      reader.checkIntegrity();\n      return new CodecReader() {\n\n        @Override\n        public TermVectorsReader getTermVectorsReader() {\n          reader.ensureOpen();\n          return readerToTermVectorsReader(reader);\n        }\n\n        @Override\n        public StoredFieldsReader getFieldsReader() {\n          reader.ensureOpen();\n          return readerToStoredFieldsReader(reader);\n        }\n\n        @Override\n        public NormsProducer getNormsReader() {\n          reader.ensureOpen();\n          return readerToNormsProducer(reader);\n        }\n\n        @Override\n        public DocValuesProducer getDocValuesReader() {\n          reader.ensureOpen();\n          return readerToDocValuesProducer(reader);\n        }\n\n        @Override\n        public FieldsProducer getPostingsReader() {\n          reader.ensureOpen();\n          try {\n            return readerToFieldsProducer(reader);\n          } catch (IOException bogus) {\n            throw new AssertionError(bogus);\n          }\n        }\n\n        @Override\n        public FieldInfos getFieldInfos() {\n          return reader.getFieldInfos();\n        }\n\n        @Override\n        public PointValues getPointValues() {\n          return reader.getPointValues();\n        }\n\n        @Override\n        public PointsReader getPointsReader() {\n          return pointValuesToReader(reader.getPointValues());\n        }\n\n        @Override\n        public Bits getLiveDocs() {\n          return reader.getLiveDocs();\n        }\n\n        @Override\n        public int numDocs() {\n          return reader.numDocs();\n        }\n\n        @Override\n        public int maxDoc() {\n          return reader.maxDoc();\n        }\n\n        @Override\n        public void addCoreClosedListener(CoreClosedListener listener) {\n          reader.addCoreClosedListener(listener);\n        }\n\n        @Override\n        public void removeCoreClosedListener(CoreClosedListener listener) {\n          reader.removeCoreClosedListener(listener);\n        }\n      };\n    }\n  }\n\n","sourceOld":"  /**\n   * Returns a {@code CodecReader} view of reader. \n   * <p>\n   * If {@code reader} is already a {@code CodecReader}, it is returned\n   * directly. Otherwise, a (slow) view is returned.\n   */\n  public static CodecReader wrap(final LeafReader reader) throws IOException {\n    if (reader instanceof CodecReader) {\n      return (CodecReader) reader;\n    } else {\n      // simulate it slowly, over the leafReader api:\n      reader.checkIntegrity();\n      return new CodecReader() {\n\n        @Override\n        public TermVectorsReader getTermVectorsReader() {\n          reader.ensureOpen();\n          return readerToTermVectorsReader(reader);\n        }\n\n        @Override\n        public StoredFieldsReader getFieldsReader() {\n          reader.ensureOpen();\n          return readerToStoredFieldsReader(reader);\n        }\n\n        @Override\n        public NormsProducer getNormsReader() {\n          reader.ensureOpen();\n          return readerToNormsProducer(reader);\n        }\n\n        @Override\n        public DocValuesProducer getDocValuesReader() {\n          reader.ensureOpen();\n          return readerToDocValuesProducer(reader);\n        }\n\n        @Override\n        public FieldsProducer getPostingsReader() {\n          reader.ensureOpen();\n          try {\n            return readerToFieldsProducer(reader);\n          } catch (IOException bogus) {\n            throw new AssertionError(bogus);\n          }\n        }\n\n        @Override\n        public FieldInfos getFieldInfos() {\n          return reader.getFieldInfos();\n        }\n\n        @Override\n        public PointValues getPointValues() {\n          return reader.getPointValues();\n        }\n\n        @Override\n        public PointReader getPointReader() {\n          return pointValuesToReader(reader.getPointValues());\n        }\n\n        @Override\n        public Bits getLiveDocs() {\n          return reader.getLiveDocs();\n        }\n\n        @Override\n        public int numDocs() {\n          return reader.numDocs();\n        }\n\n        @Override\n        public int maxDoc() {\n          return reader.maxDoc();\n        }\n\n        @Override\n        public void addCoreClosedListener(CoreClosedListener listener) {\n          reader.addCoreClosedListener(listener);\n        }\n\n        @Override\n        public void removeCoreClosedListener(CoreClosedListener listener) {\n          reader.removeCoreClosedListener(listener);\n        }\n      };\n    }\n  }\n\n","bugFix":["cab7a79353f33d1a94cd307bf33aa5148601ebe6"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ceaef6cfc68c8ab22a684192e469a8280f9e6e70","date":1462354657,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SlowCodecReaderWrapper#wrap(LeafReader).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SlowCodecReaderWrapper#wrap(LeafReader).mjava","sourceNew":"  /**\n   * Returns a {@code CodecReader} view of reader. \n   * <p>\n   * If {@code reader} is already a {@code CodecReader}, it is returned\n   * directly. Otherwise, a (slow) view is returned.\n   */\n  public static CodecReader wrap(final LeafReader reader) throws IOException {\n    if (reader instanceof CodecReader) {\n      return (CodecReader) reader;\n    } else {\n      // simulate it slowly, over the leafReader api:\n      reader.checkIntegrity();\n      return new CodecReader() {\n\n        @Override\n        public TermVectorsReader getTermVectorsReader() {\n          reader.ensureOpen();\n          return readerToTermVectorsReader(reader);\n        }\n\n        @Override\n        public StoredFieldsReader getFieldsReader() {\n          reader.ensureOpen();\n          return readerToStoredFieldsReader(reader);\n        }\n\n        @Override\n        public NormsProducer getNormsReader() {\n          reader.ensureOpen();\n          return readerToNormsProducer(reader);\n        }\n\n        @Override\n        public DocValuesProducer getDocValuesReader() {\n          reader.ensureOpen();\n          return readerToDocValuesProducer(reader);\n        }\n\n        @Override\n        public FieldsProducer getPostingsReader() {\n          reader.ensureOpen();\n          try {\n            return readerToFieldsProducer(reader);\n          } catch (IOException bogus) {\n            throw new AssertionError(bogus);\n          }\n        }\n\n        @Override\n        public FieldInfos getFieldInfos() {\n          return reader.getFieldInfos();\n        }\n\n        @Override\n        public PointValues getPointValues() {\n          return reader.getPointValues();\n        }\n\n        @Override\n        public PointsReader getPointsReader() {\n          return pointValuesToReader(reader.getPointValues());\n        }\n\n        @Override\n        public Bits getLiveDocs() {\n          return reader.getLiveDocs();\n        }\n\n        @Override\n        public int numDocs() {\n          return reader.numDocs();\n        }\n\n        @Override\n        public int maxDoc() {\n          return reader.maxDoc();\n        }\n\n        @Override\n        public void addCoreClosedListener(CoreClosedListener listener) {\n          reader.addCoreClosedListener(listener);\n        }\n\n        @Override\n        public void removeCoreClosedListener(CoreClosedListener listener) {\n          reader.removeCoreClosedListener(listener);\n        }\n\n        @Override\n        public String toString() {\n          return \"SlowCodecReaderWrapper(\" + reader + \")\";\n        }\n\n        @Override\n        public Sort getIndexSort() {\n          return reader.getIndexSort();\n        }\n      };\n    }\n  }\n\n","sourceOld":"  /**\n   * Returns a {@code CodecReader} view of reader. \n   * <p>\n   * If {@code reader} is already a {@code CodecReader}, it is returned\n   * directly. Otherwise, a (slow) view is returned.\n   */\n  public static CodecReader wrap(final LeafReader reader) throws IOException {\n    if (reader instanceof CodecReader) {\n      return (CodecReader) reader;\n    } else {\n      // simulate it slowly, over the leafReader api:\n      reader.checkIntegrity();\n      return new CodecReader() {\n\n        @Override\n        public TermVectorsReader getTermVectorsReader() {\n          reader.ensureOpen();\n          return readerToTermVectorsReader(reader);\n        }\n\n        @Override\n        public StoredFieldsReader getFieldsReader() {\n          reader.ensureOpen();\n          return readerToStoredFieldsReader(reader);\n        }\n\n        @Override\n        public NormsProducer getNormsReader() {\n          reader.ensureOpen();\n          return readerToNormsProducer(reader);\n        }\n\n        @Override\n        public DocValuesProducer getDocValuesReader() {\n          reader.ensureOpen();\n          return readerToDocValuesProducer(reader);\n        }\n\n        @Override\n        public FieldsProducer getPostingsReader() {\n          reader.ensureOpen();\n          try {\n            return readerToFieldsProducer(reader);\n          } catch (IOException bogus) {\n            throw new AssertionError(bogus);\n          }\n        }\n\n        @Override\n        public FieldInfos getFieldInfos() {\n          return reader.getFieldInfos();\n        }\n\n        @Override\n        public PointValues getPointValues() {\n          return reader.getPointValues();\n        }\n\n        @Override\n        public PointsReader getPointsReader() {\n          return pointValuesToReader(reader.getPointValues());\n        }\n\n        @Override\n        public Bits getLiveDocs() {\n          return reader.getLiveDocs();\n        }\n\n        @Override\n        public int numDocs() {\n          return reader.numDocs();\n        }\n\n        @Override\n        public int maxDoc() {\n          return reader.maxDoc();\n        }\n\n        @Override\n        public void addCoreClosedListener(CoreClosedListener listener) {\n          reader.addCoreClosedListener(listener);\n        }\n\n        @Override\n        public void removeCoreClosedListener(CoreClosedListener listener) {\n          reader.removeCoreClosedListener(listener);\n        }\n      };\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3d33e731a93d4b57e662ff094f64f94a745422d4","date":1463128289,"type":3,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SlowCodecReaderWrapper#wrap(LeafReader).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SlowCodecReaderWrapper#wrap(LeafReader).mjava","sourceNew":"  /**\n   * Returns a {@code CodecReader} view of reader. \n   * <p>\n   * If {@code reader} is already a {@code CodecReader}, it is returned\n   * directly. Otherwise, a (slow) view is returned.\n   */\n  public static CodecReader wrap(final LeafReader reader) throws IOException {\n    if (reader instanceof CodecReader) {\n      return (CodecReader) reader;\n    } else {\n      // simulate it slowly, over the leafReader api:\n      reader.checkIntegrity();\n      return new CodecReader() {\n\n        @Override\n        public TermVectorsReader getTermVectorsReader() {\n          reader.ensureOpen();\n          return readerToTermVectorsReader(reader);\n        }\n\n        @Override\n        public StoredFieldsReader getFieldsReader() {\n          reader.ensureOpen();\n          return readerToStoredFieldsReader(reader);\n        }\n\n        @Override\n        public NormsProducer getNormsReader() {\n          reader.ensureOpen();\n          return readerToNormsProducer(reader);\n        }\n\n        @Override\n        public DocValuesProducer getDocValuesReader() {\n          reader.ensureOpen();\n          return readerToDocValuesProducer(reader);\n        }\n\n        @Override\n        public FieldsProducer getPostingsReader() {\n          reader.ensureOpen();\n          try {\n            return readerToFieldsProducer(reader);\n          } catch (IOException bogus) {\n            throw new AssertionError(bogus);\n          }\n        }\n\n        @Override\n        public FieldInfos getFieldInfos() {\n          return reader.getFieldInfos();\n        }\n\n        @Override\n        public PointValues getPointValues() {\n          return reader.getPointValues();\n        }\n\n        @Override\n        public PointsReader getPointsReader() {\n          return pointValuesToReader(reader.getPointValues());\n        }\n\n        @Override\n        public Bits getLiveDocs() {\n          return reader.getLiveDocs();\n        }\n\n        @Override\n        public int numDocs() {\n          return reader.numDocs();\n        }\n\n        @Override\n        public int maxDoc() {\n          return reader.maxDoc();\n        }\n\n        @Override\n        public void addCoreClosedListener(CoreClosedListener listener) {\n          reader.addCoreClosedListener(listener);\n        }\n\n        @Override\n        public void removeCoreClosedListener(CoreClosedListener listener) {\n          reader.removeCoreClosedListener(listener);\n        }\n\n        @Override\n        public String toString() {\n          return \"SlowCodecReaderWrapper(\" + reader + \")\";\n        }\n\n        @Override\n        public Sort getIndexSort() {\n          return reader.getIndexSort();\n        }\n      };\n    }\n  }\n\n","sourceOld":"  /**\n   * Returns a {@code CodecReader} view of reader. \n   * <p>\n   * If {@code reader} is already a {@code CodecReader}, it is returned\n   * directly. Otherwise, a (slow) view is returned.\n   */\n  public static CodecReader wrap(final LeafReader reader) throws IOException {\n    if (reader instanceof CodecReader) {\n      return (CodecReader) reader;\n    } else {\n      // simulate it slowly, over the leafReader api:\n      reader.checkIntegrity();\n      return new CodecReader() {\n\n        @Override\n        public TermVectorsReader getTermVectorsReader() {\n          reader.ensureOpen();\n          return readerToTermVectorsReader(reader);\n        }\n\n        @Override\n        public StoredFieldsReader getFieldsReader() {\n          reader.ensureOpen();\n          return readerToStoredFieldsReader(reader);\n        }\n\n        @Override\n        public NormsProducer getNormsReader() {\n          reader.ensureOpen();\n          return readerToNormsProducer(reader);\n        }\n\n        @Override\n        public DocValuesProducer getDocValuesReader() {\n          reader.ensureOpen();\n          return readerToDocValuesProducer(reader);\n        }\n\n        @Override\n        public FieldsProducer getPostingsReader() {\n          reader.ensureOpen();\n          try {\n            return readerToFieldsProducer(reader);\n          } catch (IOException bogus) {\n            throw new AssertionError(bogus);\n          }\n        }\n\n        @Override\n        public FieldInfos getFieldInfos() {\n          return reader.getFieldInfos();\n        }\n\n        @Override\n        public PointValues getPointValues() {\n          return reader.getPointValues();\n        }\n\n        @Override\n        public PointsReader getPointsReader() {\n          return pointValuesToReader(reader.getPointValues());\n        }\n\n        @Override\n        public Bits getLiveDocs() {\n          return reader.getLiveDocs();\n        }\n\n        @Override\n        public int numDocs() {\n          return reader.numDocs();\n        }\n\n        @Override\n        public int maxDoc() {\n          return reader.maxDoc();\n        }\n\n        @Override\n        public void addCoreClosedListener(CoreClosedListener listener) {\n          reader.addCoreClosedListener(listener);\n        }\n\n        @Override\n        public void removeCoreClosedListener(CoreClosedListener listener) {\n          reader.removeCoreClosedListener(listener);\n        }\n      };\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0ad30c6a479e764150a3316e57263319775f1df2","date":1463395403,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SlowCodecReaderWrapper#wrap(LeafReader).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SlowCodecReaderWrapper#wrap(LeafReader).mjava","sourceNew":"  /**\n   * Returns a {@code CodecReader} view of reader. \n   * <p>\n   * If {@code reader} is already a {@code CodecReader}, it is returned\n   * directly. Otherwise, a (slow) view is returned.\n   */\n  public static CodecReader wrap(final LeafReader reader) throws IOException {\n    if (reader instanceof CodecReader) {\n      return (CodecReader) reader;\n    } else {\n      // simulate it slowly, over the leafReader api:\n      reader.checkIntegrity();\n      return new CodecReader() {\n\n        @Override\n        public TermVectorsReader getTermVectorsReader() {\n          reader.ensureOpen();\n          return readerToTermVectorsReader(reader);\n        }\n\n        @Override\n        public StoredFieldsReader getFieldsReader() {\n          reader.ensureOpen();\n          return readerToStoredFieldsReader(reader);\n        }\n\n        @Override\n        public NormsProducer getNormsReader() {\n          reader.ensureOpen();\n          return readerToNormsProducer(reader);\n        }\n\n        @Override\n        public DocValuesProducer getDocValuesReader() {\n          reader.ensureOpen();\n          return readerToDocValuesProducer(reader);\n        }\n\n        @Override\n        public FieldsProducer getPostingsReader() {\n          reader.ensureOpen();\n          try {\n            return readerToFieldsProducer(reader);\n          } catch (IOException bogus) {\n            throw new AssertionError(bogus);\n          }\n        }\n\n        @Override\n        public FieldInfos getFieldInfos() {\n          return reader.getFieldInfos();\n        }\n\n        @Override\n        public PointValues getPointValues() {\n          return reader.getPointValues();\n        }\n\n        @Override\n        public PointsReader getPointsReader() {\n          return pointValuesToReader(reader.getPointValues());\n        }\n\n        @Override\n        public Bits getLiveDocs() {\n          return reader.getLiveDocs();\n        }\n\n        @Override\n        public int numDocs() {\n          return reader.numDocs();\n        }\n\n        @Override\n        public int maxDoc() {\n          return reader.maxDoc();\n        }\n\n        @Override\n        public void addCoreClosedListener(CoreClosedListener listener) {\n          reader.addCoreClosedListener(listener);\n        }\n\n        @Override\n        public void removeCoreClosedListener(CoreClosedListener listener) {\n          reader.removeCoreClosedListener(listener);\n        }\n\n        @Override\n        public String toString() {\n          return \"SlowCodecReaderWrapper(\" + reader + \")\";\n        }\n\n        @Override\n        public Sort getIndexSort() {\n          return reader.getIndexSort();\n        }\n      };\n    }\n  }\n\n","sourceOld":"  /**\n   * Returns a {@code CodecReader} view of reader. \n   * <p>\n   * If {@code reader} is already a {@code CodecReader}, it is returned\n   * directly. Otherwise, a (slow) view is returned.\n   */\n  public static CodecReader wrap(final LeafReader reader) throws IOException {\n    if (reader instanceof CodecReader) {\n      return (CodecReader) reader;\n    } else {\n      // simulate it slowly, over the leafReader api:\n      reader.checkIntegrity();\n      return new CodecReader() {\n\n        @Override\n        public TermVectorsReader getTermVectorsReader() {\n          reader.ensureOpen();\n          return readerToTermVectorsReader(reader);\n        }\n\n        @Override\n        public StoredFieldsReader getFieldsReader() {\n          reader.ensureOpen();\n          return readerToStoredFieldsReader(reader);\n        }\n\n        @Override\n        public NormsProducer getNormsReader() {\n          reader.ensureOpen();\n          return readerToNormsProducer(reader);\n        }\n\n        @Override\n        public DocValuesProducer getDocValuesReader() {\n          reader.ensureOpen();\n          return readerToDocValuesProducer(reader);\n        }\n\n        @Override\n        public FieldsProducer getPostingsReader() {\n          reader.ensureOpen();\n          try {\n            return readerToFieldsProducer(reader);\n          } catch (IOException bogus) {\n            throw new AssertionError(bogus);\n          }\n        }\n\n        @Override\n        public FieldInfos getFieldInfos() {\n          return reader.getFieldInfos();\n        }\n\n        @Override\n        public PointValues getPointValues() {\n          return reader.getPointValues();\n        }\n\n        @Override\n        public PointsReader getPointsReader() {\n          return pointValuesToReader(reader.getPointValues());\n        }\n\n        @Override\n        public Bits getLiveDocs() {\n          return reader.getLiveDocs();\n        }\n\n        @Override\n        public int numDocs() {\n          return reader.numDocs();\n        }\n\n        @Override\n        public int maxDoc() {\n          return reader.maxDoc();\n        }\n\n        @Override\n        public void addCoreClosedListener(CoreClosedListener listener) {\n          reader.addCoreClosedListener(listener);\n        }\n\n        @Override\n        public void removeCoreClosedListener(CoreClosedListener listener) {\n          reader.removeCoreClosedListener(listener);\n        }\n      };\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d470c8182e92b264680e34081b75e70a9f2b3c89","date":1463985353,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SlowCodecReaderWrapper#wrap(LeafReader).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SlowCodecReaderWrapper#wrap(LeafReader).mjava","sourceNew":"  /**\n   * Returns a {@code CodecReader} view of reader. \n   * <p>\n   * If {@code reader} is already a {@code CodecReader}, it is returned\n   * directly. Otherwise, a (slow) view is returned.\n   */\n  public static CodecReader wrap(final LeafReader reader) throws IOException {\n    if (reader instanceof CodecReader) {\n      return (CodecReader) reader;\n    } else {\n      // simulate it slowly, over the leafReader api:\n      reader.checkIntegrity();\n      return new CodecReader() {\n\n        @Override\n        public TermVectorsReader getTermVectorsReader() {\n          reader.ensureOpen();\n          return readerToTermVectorsReader(reader);\n        }\n\n        @Override\n        public StoredFieldsReader getFieldsReader() {\n          reader.ensureOpen();\n          return readerToStoredFieldsReader(reader);\n        }\n\n        @Override\n        public NormsProducer getNormsReader() {\n          reader.ensureOpen();\n          return readerToNormsProducer(reader);\n        }\n\n        @Override\n        public DocValuesProducer getDocValuesReader() {\n          reader.ensureOpen();\n          return readerToDocValuesProducer(reader);\n        }\n\n        @Override\n        public FieldsProducer getPostingsReader() {\n          reader.ensureOpen();\n          try {\n            return readerToFieldsProducer(reader);\n          } catch (IOException bogus) {\n            throw new AssertionError(bogus);\n          }\n        }\n\n        @Override\n        public FieldInfos getFieldInfos() {\n          return reader.getFieldInfos();\n        }\n\n        @Override\n        public PointValues getPointValues() {\n          return reader.getPointValues();\n        }\n\n        @Override\n        public PointsReader getPointsReader() {\n          return pointValuesToReader(reader.getPointValues());\n        }\n\n        @Override\n        public Bits getLiveDocs() {\n          return reader.getLiveDocs();\n        }\n\n        @Override\n        public int numDocs() {\n          return reader.numDocs();\n        }\n\n        @Override\n        public int maxDoc() {\n          return reader.maxDoc();\n        }\n\n        @Override\n        public void addCoreClosedListener(CoreClosedListener listener) {\n          reader.addCoreClosedListener(listener);\n        }\n\n        @Override\n        public void removeCoreClosedListener(CoreClosedListener listener) {\n          reader.removeCoreClosedListener(listener);\n        }\n\n        @Override\n        public String toString() {\n          return \"SlowCodecReaderWrapper(\" + reader + \")\";\n        }\n\n        @Override\n        public Sort getIndexSort() {\n          return reader.getIndexSort();\n        }\n      };\n    }\n  }\n\n","sourceOld":"  /**\n   * Returns a {@code CodecReader} view of reader. \n   * <p>\n   * If {@code reader} is already a {@code CodecReader}, it is returned\n   * directly. Otherwise, a (slow) view is returned.\n   */\n  public static CodecReader wrap(final LeafReader reader) throws IOException {\n    if (reader instanceof CodecReader) {\n      return (CodecReader) reader;\n    } else {\n      // simulate it slowly, over the leafReader api:\n      reader.checkIntegrity();\n      return new CodecReader() {\n\n        @Override\n        public TermVectorsReader getTermVectorsReader() {\n          reader.ensureOpen();\n          return readerToTermVectorsReader(reader);\n        }\n\n        @Override\n        public StoredFieldsReader getFieldsReader() {\n          reader.ensureOpen();\n          return readerToStoredFieldsReader(reader);\n        }\n\n        @Override\n        public NormsProducer getNormsReader() {\n          reader.ensureOpen();\n          return readerToNormsProducer(reader);\n        }\n\n        @Override\n        public DocValuesProducer getDocValuesReader() {\n          reader.ensureOpen();\n          return readerToDocValuesProducer(reader);\n        }\n\n        @Override\n        public FieldsProducer getPostingsReader() {\n          reader.ensureOpen();\n          try {\n            return readerToFieldsProducer(reader);\n          } catch (IOException bogus) {\n            throw new AssertionError(bogus);\n          }\n        }\n\n        @Override\n        public FieldInfos getFieldInfos() {\n          return reader.getFieldInfos();\n        }\n\n        @Override\n        public PointValues getPointValues() {\n          return reader.getPointValues();\n        }\n\n        @Override\n        public PointsReader getPointsReader() {\n          return pointValuesToReader(reader.getPointValues());\n        }\n\n        @Override\n        public Bits getLiveDocs() {\n          return reader.getLiveDocs();\n        }\n\n        @Override\n        public int numDocs() {\n          return reader.numDocs();\n        }\n\n        @Override\n        public int maxDoc() {\n          return reader.maxDoc();\n        }\n\n        @Override\n        public void addCoreClosedListener(CoreClosedListener listener) {\n          reader.addCoreClosedListener(listener);\n        }\n\n        @Override\n        public void removeCoreClosedListener(CoreClosedListener listener) {\n          reader.removeCoreClosedListener(listener);\n        }\n      };\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"367f57e2ee85b7f7e28cfe73370a22cf67624f65","date":1476778467,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SlowCodecReaderWrapper#wrap(LeafReader).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SlowCodecReaderWrapper#wrap(LeafReader).mjava","sourceNew":"  /**\n   * Returns a {@code CodecReader} view of reader. \n   * <p>\n   * If {@code reader} is already a {@code CodecReader}, it is returned\n   * directly. Otherwise, a (slow) view is returned.\n   */\n  public static CodecReader wrap(final LeafReader reader) throws IOException {\n    if (reader instanceof CodecReader) {\n      return (CodecReader) reader;\n    } else {\n      // simulate it slowly, over the leafReader api:\n      reader.checkIntegrity();\n      return new CodecReader() {\n\n        @Override\n        public TermVectorsReader getTermVectorsReader() {\n          reader.ensureOpen();\n          return readerToTermVectorsReader(reader);\n        }\n\n        @Override\n        public StoredFieldsReader getFieldsReader() {\n          reader.ensureOpen();\n          return readerToStoredFieldsReader(reader);\n        }\n\n        @Override\n        public NormsProducer getNormsReader() {\n          reader.ensureOpen();\n          return readerToNormsProducer(reader);\n        }\n\n        @Override\n        public DocValuesProducer getDocValuesReader() {\n          reader.ensureOpen();\n          return readerToDocValuesProducer(reader);\n        }\n\n        @Override\n        public FieldsProducer getPostingsReader() {\n          reader.ensureOpen();\n          try {\n            return readerToFieldsProducer(reader);\n          } catch (IOException bogus) {\n            throw new AssertionError(bogus);\n          }\n        }\n\n        @Override\n        public FieldInfos getFieldInfos() {\n          return reader.getFieldInfos();\n        }\n\n        @Override\n        public PointsReader getPointsReader() {\n          return pointValuesToReader(reader);\n        }\n\n        @Override\n        public Bits getLiveDocs() {\n          return reader.getLiveDocs();\n        }\n\n        @Override\n        public int numDocs() {\n          return reader.numDocs();\n        }\n\n        @Override\n        public int maxDoc() {\n          return reader.maxDoc();\n        }\n\n        @Override\n        public void addCoreClosedListener(CoreClosedListener listener) {\n          reader.addCoreClosedListener(listener);\n        }\n\n        @Override\n        public void removeCoreClosedListener(CoreClosedListener listener) {\n          reader.removeCoreClosedListener(listener);\n        }\n\n        @Override\n        public String toString() {\n          return \"SlowCodecReaderWrapper(\" + reader + \")\";\n        }\n\n        @Override\n        public Sort getIndexSort() {\n          return reader.getIndexSort();\n        }\n      };\n    }\n  }\n\n","sourceOld":"  /**\n   * Returns a {@code CodecReader} view of reader. \n   * <p>\n   * If {@code reader} is already a {@code CodecReader}, it is returned\n   * directly. Otherwise, a (slow) view is returned.\n   */\n  public static CodecReader wrap(final LeafReader reader) throws IOException {\n    if (reader instanceof CodecReader) {\n      return (CodecReader) reader;\n    } else {\n      // simulate it slowly, over the leafReader api:\n      reader.checkIntegrity();\n      return new CodecReader() {\n\n        @Override\n        public TermVectorsReader getTermVectorsReader() {\n          reader.ensureOpen();\n          return readerToTermVectorsReader(reader);\n        }\n\n        @Override\n        public StoredFieldsReader getFieldsReader() {\n          reader.ensureOpen();\n          return readerToStoredFieldsReader(reader);\n        }\n\n        @Override\n        public NormsProducer getNormsReader() {\n          reader.ensureOpen();\n          return readerToNormsProducer(reader);\n        }\n\n        @Override\n        public DocValuesProducer getDocValuesReader() {\n          reader.ensureOpen();\n          return readerToDocValuesProducer(reader);\n        }\n\n        @Override\n        public FieldsProducer getPostingsReader() {\n          reader.ensureOpen();\n          try {\n            return readerToFieldsProducer(reader);\n          } catch (IOException bogus) {\n            throw new AssertionError(bogus);\n          }\n        }\n\n        @Override\n        public FieldInfos getFieldInfos() {\n          return reader.getFieldInfos();\n        }\n\n        @Override\n        public PointValues getPointValues() {\n          return reader.getPointValues();\n        }\n\n        @Override\n        public PointsReader getPointsReader() {\n          return pointValuesToReader(reader.getPointValues());\n        }\n\n        @Override\n        public Bits getLiveDocs() {\n          return reader.getLiveDocs();\n        }\n\n        @Override\n        public int numDocs() {\n          return reader.numDocs();\n        }\n\n        @Override\n        public int maxDoc() {\n          return reader.maxDoc();\n        }\n\n        @Override\n        public void addCoreClosedListener(CoreClosedListener listener) {\n          reader.addCoreClosedListener(listener);\n        }\n\n        @Override\n        public void removeCoreClosedListener(CoreClosedListener listener) {\n          reader.removeCoreClosedListener(listener);\n        }\n\n        @Override\n        public String toString() {\n          return \"SlowCodecReaderWrapper(\" + reader + \")\";\n        }\n\n        @Override\n        public Sort getIndexSort() {\n          return reader.getIndexSort();\n        }\n      };\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SlowCodecReaderWrapper#wrap(LeafReader).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SlowCodecReaderWrapper#wrap(LeafReader).mjava","sourceNew":"  /**\n   * Returns a {@code CodecReader} view of reader. \n   * <p>\n   * If {@code reader} is already a {@code CodecReader}, it is returned\n   * directly. Otherwise, a (slow) view is returned.\n   */\n  public static CodecReader wrap(final LeafReader reader) throws IOException {\n    if (reader instanceof CodecReader) {\n      return (CodecReader) reader;\n    } else {\n      // simulate it slowly, over the leafReader api:\n      reader.checkIntegrity();\n      return new CodecReader() {\n\n        @Override\n        public TermVectorsReader getTermVectorsReader() {\n          reader.ensureOpen();\n          return readerToTermVectorsReader(reader);\n        }\n\n        @Override\n        public StoredFieldsReader getFieldsReader() {\n          reader.ensureOpen();\n          return readerToStoredFieldsReader(reader);\n        }\n\n        @Override\n        public NormsProducer getNormsReader() {\n          reader.ensureOpen();\n          return readerToNormsProducer(reader);\n        }\n\n        @Override\n        public DocValuesProducer getDocValuesReader() {\n          reader.ensureOpen();\n          return readerToDocValuesProducer(reader);\n        }\n\n        @Override\n        public FieldsProducer getPostingsReader() {\n          reader.ensureOpen();\n          try {\n            return readerToFieldsProducer(reader);\n          } catch (IOException bogus) {\n            throw new AssertionError(bogus);\n          }\n        }\n\n        @Override\n        public FieldInfos getFieldInfos() {\n          return reader.getFieldInfos();\n        }\n\n        @Override\n        public PointsReader getPointsReader() {\n          return pointValuesToReader(reader);\n        }\n\n        @Override\n        public Bits getLiveDocs() {\n          return reader.getLiveDocs();\n        }\n\n        @Override\n        public int numDocs() {\n          return reader.numDocs();\n        }\n\n        @Override\n        public int maxDoc() {\n          return reader.maxDoc();\n        }\n\n        @Override\n        public void addCoreClosedListener(CoreClosedListener listener) {\n          reader.addCoreClosedListener(listener);\n        }\n\n        @Override\n        public void removeCoreClosedListener(CoreClosedListener listener) {\n          reader.removeCoreClosedListener(listener);\n        }\n\n        @Override\n        public String toString() {\n          return \"SlowCodecReaderWrapper(\" + reader + \")\";\n        }\n\n        @Override\n        public Sort getIndexSort() {\n          return reader.getIndexSort();\n        }\n      };\n    }\n  }\n\n","sourceOld":"  /**\n   * Returns a {@code CodecReader} view of reader. \n   * <p>\n   * If {@code reader} is already a {@code CodecReader}, it is returned\n   * directly. Otherwise, a (slow) view is returned.\n   */\n  public static CodecReader wrap(final LeafReader reader) throws IOException {\n    if (reader instanceof CodecReader) {\n      return (CodecReader) reader;\n    } else {\n      // simulate it slowly, over the leafReader api:\n      reader.checkIntegrity();\n      return new CodecReader() {\n\n        @Override\n        public TermVectorsReader getTermVectorsReader() {\n          reader.ensureOpen();\n          return readerToTermVectorsReader(reader);\n        }\n\n        @Override\n        public StoredFieldsReader getFieldsReader() {\n          reader.ensureOpen();\n          return readerToStoredFieldsReader(reader);\n        }\n\n        @Override\n        public NormsProducer getNormsReader() {\n          reader.ensureOpen();\n          return readerToNormsProducer(reader);\n        }\n\n        @Override\n        public DocValuesProducer getDocValuesReader() {\n          reader.ensureOpen();\n          return readerToDocValuesProducer(reader);\n        }\n\n        @Override\n        public FieldsProducer getPostingsReader() {\n          reader.ensureOpen();\n          try {\n            return readerToFieldsProducer(reader);\n          } catch (IOException bogus) {\n            throw new AssertionError(bogus);\n          }\n        }\n\n        @Override\n        public FieldInfos getFieldInfos() {\n          return reader.getFieldInfos();\n        }\n\n        @Override\n        public PointValues getPointValues() {\n          return reader.getPointValues();\n        }\n\n        @Override\n        public PointsReader getPointsReader() {\n          return pointValuesToReader(reader.getPointValues());\n        }\n\n        @Override\n        public Bits getLiveDocs() {\n          return reader.getLiveDocs();\n        }\n\n        @Override\n        public int numDocs() {\n          return reader.numDocs();\n        }\n\n        @Override\n        public int maxDoc() {\n          return reader.maxDoc();\n        }\n\n        @Override\n        public void addCoreClosedListener(CoreClosedListener listener) {\n          reader.addCoreClosedListener(listener);\n        }\n\n        @Override\n        public void removeCoreClosedListener(CoreClosedListener listener) {\n          reader.removeCoreClosedListener(listener);\n        }\n      };\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d211216c83f01894810543d1c107160a9ae3650b","date":1488289605,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SlowCodecReaderWrapper#wrap(LeafReader).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SlowCodecReaderWrapper#wrap(LeafReader).mjava","sourceNew":"  /**\n   * Returns a {@code CodecReader} view of reader. \n   * <p>\n   * If {@code reader} is already a {@code CodecReader}, it is returned\n   * directly. Otherwise, a (slow) view is returned.\n   */\n  public static CodecReader wrap(final LeafReader reader) throws IOException {\n    if (reader instanceof CodecReader) {\n      return (CodecReader) reader;\n    } else {\n      // simulate it slowly, over the leafReader api:\n      reader.checkIntegrity();\n      return new CodecReader() {\n\n        @Override\n        public TermVectorsReader getTermVectorsReader() {\n          reader.ensureOpen();\n          return readerToTermVectorsReader(reader);\n        }\n\n        @Override\n        public StoredFieldsReader getFieldsReader() {\n          reader.ensureOpen();\n          return readerToStoredFieldsReader(reader);\n        }\n\n        @Override\n        public NormsProducer getNormsReader() {\n          reader.ensureOpen();\n          return readerToNormsProducer(reader);\n        }\n\n        @Override\n        public DocValuesProducer getDocValuesReader() {\n          reader.ensureOpen();\n          return readerToDocValuesProducer(reader);\n        }\n\n        @Override\n        public FieldsProducer getPostingsReader() {\n          reader.ensureOpen();\n          try {\n            return readerToFieldsProducer(reader);\n          } catch (IOException bogus) {\n            throw new AssertionError(bogus);\n          }\n        }\n\n        @Override\n        public FieldInfos getFieldInfos() {\n          return reader.getFieldInfos();\n        }\n\n        @Override\n        public PointsReader getPointsReader() {\n          return pointValuesToReader(reader);\n        }\n\n        @Override\n        public Bits getLiveDocs() {\n          return reader.getLiveDocs();\n        }\n\n        @Override\n        public int numDocs() {\n          return reader.numDocs();\n        }\n\n        @Override\n        public int maxDoc() {\n          return reader.maxDoc();\n        }\n\n        @Override\n        public CacheHelper getCoreCacheHelper() {\n          return reader.getCoreCacheHelper();\n        }\n\n        @Override\n        public CacheHelper getReaderCacheHelper() {\n          return reader.getReaderCacheHelper();\n        }\n\n        @Override\n        public String toString() {\n          return \"SlowCodecReaderWrapper(\" + reader + \")\";\n        }\n\n        @Override\n        public Sort getIndexSort() {\n          return reader.getIndexSort();\n        }\n      };\n    }\n  }\n\n","sourceOld":"  /**\n   * Returns a {@code CodecReader} view of reader. \n   * <p>\n   * If {@code reader} is already a {@code CodecReader}, it is returned\n   * directly. Otherwise, a (slow) view is returned.\n   */\n  public static CodecReader wrap(final LeafReader reader) throws IOException {\n    if (reader instanceof CodecReader) {\n      return (CodecReader) reader;\n    } else {\n      // simulate it slowly, over the leafReader api:\n      reader.checkIntegrity();\n      return new CodecReader() {\n\n        @Override\n        public TermVectorsReader getTermVectorsReader() {\n          reader.ensureOpen();\n          return readerToTermVectorsReader(reader);\n        }\n\n        @Override\n        public StoredFieldsReader getFieldsReader() {\n          reader.ensureOpen();\n          return readerToStoredFieldsReader(reader);\n        }\n\n        @Override\n        public NormsProducer getNormsReader() {\n          reader.ensureOpen();\n          return readerToNormsProducer(reader);\n        }\n\n        @Override\n        public DocValuesProducer getDocValuesReader() {\n          reader.ensureOpen();\n          return readerToDocValuesProducer(reader);\n        }\n\n        @Override\n        public FieldsProducer getPostingsReader() {\n          reader.ensureOpen();\n          try {\n            return readerToFieldsProducer(reader);\n          } catch (IOException bogus) {\n            throw new AssertionError(bogus);\n          }\n        }\n\n        @Override\n        public FieldInfos getFieldInfos() {\n          return reader.getFieldInfos();\n        }\n\n        @Override\n        public PointsReader getPointsReader() {\n          return pointValuesToReader(reader);\n        }\n\n        @Override\n        public Bits getLiveDocs() {\n          return reader.getLiveDocs();\n        }\n\n        @Override\n        public int numDocs() {\n          return reader.numDocs();\n        }\n\n        @Override\n        public int maxDoc() {\n          return reader.maxDoc();\n        }\n\n        @Override\n        public void addCoreClosedListener(CoreClosedListener listener) {\n          reader.addCoreClosedListener(listener);\n        }\n\n        @Override\n        public void removeCoreClosedListener(CoreClosedListener listener) {\n          reader.removeCoreClosedListener(listener);\n        }\n\n        @Override\n        public String toString() {\n          return \"SlowCodecReaderWrapper(\" + reader + \")\";\n        }\n\n        @Override\n        public Sort getIndexSort() {\n          return reader.getIndexSort();\n        }\n      };\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"31741cf1390044e38a2ec3127cf302ba841bfd75","date":1491292636,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SlowCodecReaderWrapper#wrap(LeafReader).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SlowCodecReaderWrapper#wrap(LeafReader).mjava","sourceNew":"  /**\n   * Returns a {@code CodecReader} view of reader. \n   * <p>\n   * If {@code reader} is already a {@code CodecReader}, it is returned\n   * directly. Otherwise, a (slow) view is returned.\n   */\n  public static CodecReader wrap(final LeafReader reader) throws IOException {\n    if (reader instanceof CodecReader) {\n      return (CodecReader) reader;\n    } else {\n      // simulate it slowly, over the leafReader api:\n      reader.checkIntegrity();\n      return new CodecReader() {\n\n        @Override\n        public TermVectorsReader getTermVectorsReader() {\n          reader.ensureOpen();\n          return readerToTermVectorsReader(reader);\n        }\n\n        @Override\n        public StoredFieldsReader getFieldsReader() {\n          reader.ensureOpen();\n          return readerToStoredFieldsReader(reader);\n        }\n\n        @Override\n        public NormsProducer getNormsReader() {\n          reader.ensureOpen();\n          return readerToNormsProducer(reader);\n        }\n\n        @Override\n        public DocValuesProducer getDocValuesReader() {\n          reader.ensureOpen();\n          return readerToDocValuesProducer(reader);\n        }\n\n        @Override\n        public FieldsProducer getPostingsReader() {\n          reader.ensureOpen();\n          try {\n            return readerToFieldsProducer(reader);\n          } catch (IOException bogus) {\n            throw new AssertionError(bogus);\n          }\n        }\n\n        @Override\n        public FieldInfos getFieldInfos() {\n          return reader.getFieldInfos();\n        }\n\n        @Override\n        public PointsReader getPointsReader() {\n          return pointValuesToReader(reader);\n        }\n\n        @Override\n        public Bits getLiveDocs() {\n          return reader.getLiveDocs();\n        }\n\n        @Override\n        public int numDocs() {\n          return reader.numDocs();\n        }\n\n        @Override\n        public int maxDoc() {\n          return reader.maxDoc();\n        }\n\n        @Override\n        public CacheHelper getCoreCacheHelper() {\n          return reader.getCoreCacheHelper();\n        }\n\n        @Override\n        public CacheHelper getReaderCacheHelper() {\n          return reader.getReaderCacheHelper();\n        }\n\n        @Override\n        public String toString() {\n          return \"SlowCodecReaderWrapper(\" + reader + \")\";\n        }\n\n        @Override\n        public LeafMetaData getMetaData() {\n          return reader.getMetaData();\n        }\n      };\n    }\n  }\n\n","sourceOld":"  /**\n   * Returns a {@code CodecReader} view of reader. \n   * <p>\n   * If {@code reader} is already a {@code CodecReader}, it is returned\n   * directly. Otherwise, a (slow) view is returned.\n   */\n  public static CodecReader wrap(final LeafReader reader) throws IOException {\n    if (reader instanceof CodecReader) {\n      return (CodecReader) reader;\n    } else {\n      // simulate it slowly, over the leafReader api:\n      reader.checkIntegrity();\n      return new CodecReader() {\n\n        @Override\n        public TermVectorsReader getTermVectorsReader() {\n          reader.ensureOpen();\n          return readerToTermVectorsReader(reader);\n        }\n\n        @Override\n        public StoredFieldsReader getFieldsReader() {\n          reader.ensureOpen();\n          return readerToStoredFieldsReader(reader);\n        }\n\n        @Override\n        public NormsProducer getNormsReader() {\n          reader.ensureOpen();\n          return readerToNormsProducer(reader);\n        }\n\n        @Override\n        public DocValuesProducer getDocValuesReader() {\n          reader.ensureOpen();\n          return readerToDocValuesProducer(reader);\n        }\n\n        @Override\n        public FieldsProducer getPostingsReader() {\n          reader.ensureOpen();\n          try {\n            return readerToFieldsProducer(reader);\n          } catch (IOException bogus) {\n            throw new AssertionError(bogus);\n          }\n        }\n\n        @Override\n        public FieldInfos getFieldInfos() {\n          return reader.getFieldInfos();\n        }\n\n        @Override\n        public PointsReader getPointsReader() {\n          return pointValuesToReader(reader);\n        }\n\n        @Override\n        public Bits getLiveDocs() {\n          return reader.getLiveDocs();\n        }\n\n        @Override\n        public int numDocs() {\n          return reader.numDocs();\n        }\n\n        @Override\n        public int maxDoc() {\n          return reader.maxDoc();\n        }\n\n        @Override\n        public CacheHelper getCoreCacheHelper() {\n          return reader.getCoreCacheHelper();\n        }\n\n        @Override\n        public CacheHelper getReaderCacheHelper() {\n          return reader.getReaderCacheHelper();\n        }\n\n        @Override\n        public String toString() {\n          return \"SlowCodecReaderWrapper(\" + reader + \")\";\n        }\n\n        @Override\n        public Sort getIndexSort() {\n          return reader.getIndexSort();\n        }\n      };\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"92212fd254551a0b1156aafc3a1a6ed1a43932ad","date":1491296431,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SlowCodecReaderWrapper#wrap(LeafReader).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SlowCodecReaderWrapper#wrap(LeafReader).mjava","sourceNew":"  /**\n   * Returns a {@code CodecReader} view of reader. \n   * <p>\n   * If {@code reader} is already a {@code CodecReader}, it is returned\n   * directly. Otherwise, a (slow) view is returned.\n   */\n  public static CodecReader wrap(final LeafReader reader) throws IOException {\n    if (reader instanceof CodecReader) {\n      return (CodecReader) reader;\n    } else {\n      // simulate it slowly, over the leafReader api:\n      reader.checkIntegrity();\n      return new CodecReader() {\n\n        @Override\n        public TermVectorsReader getTermVectorsReader() {\n          reader.ensureOpen();\n          return readerToTermVectorsReader(reader);\n        }\n\n        @Override\n        public StoredFieldsReader getFieldsReader() {\n          reader.ensureOpen();\n          return readerToStoredFieldsReader(reader);\n        }\n\n        @Override\n        public NormsProducer getNormsReader() {\n          reader.ensureOpen();\n          return readerToNormsProducer(reader);\n        }\n\n        @Override\n        public DocValuesProducer getDocValuesReader() {\n          reader.ensureOpen();\n          return readerToDocValuesProducer(reader);\n        }\n\n        @Override\n        public FieldsProducer getPostingsReader() {\n          reader.ensureOpen();\n          try {\n            return readerToFieldsProducer(reader);\n          } catch (IOException bogus) {\n            throw new AssertionError(bogus);\n          }\n        }\n\n        @Override\n        public FieldInfos getFieldInfos() {\n          return reader.getFieldInfos();\n        }\n\n        @Override\n        public PointsReader getPointsReader() {\n          return pointValuesToReader(reader);\n        }\n\n        @Override\n        public Bits getLiveDocs() {\n          return reader.getLiveDocs();\n        }\n\n        @Override\n        public int numDocs() {\n          return reader.numDocs();\n        }\n\n        @Override\n        public int maxDoc() {\n          return reader.maxDoc();\n        }\n\n        @Override\n        public CacheHelper getCoreCacheHelper() {\n          return reader.getCoreCacheHelper();\n        }\n\n        @Override\n        public CacheHelper getReaderCacheHelper() {\n          return reader.getReaderCacheHelper();\n        }\n\n        @Override\n        public String toString() {\n          return \"SlowCodecReaderWrapper(\" + reader + \")\";\n        }\n\n        @Override\n        public LeafMetaData getMetaData() {\n          return reader.getMetaData();\n        }\n      };\n    }\n  }\n\n","sourceOld":"  /**\n   * Returns a {@code CodecReader} view of reader. \n   * <p>\n   * If {@code reader} is already a {@code CodecReader}, it is returned\n   * directly. Otherwise, a (slow) view is returned.\n   */\n  public static CodecReader wrap(final LeafReader reader) throws IOException {\n    if (reader instanceof CodecReader) {\n      return (CodecReader) reader;\n    } else {\n      // simulate it slowly, over the leafReader api:\n      reader.checkIntegrity();\n      return new CodecReader() {\n\n        @Override\n        public TermVectorsReader getTermVectorsReader() {\n          reader.ensureOpen();\n          return readerToTermVectorsReader(reader);\n        }\n\n        @Override\n        public StoredFieldsReader getFieldsReader() {\n          reader.ensureOpen();\n          return readerToStoredFieldsReader(reader);\n        }\n\n        @Override\n        public NormsProducer getNormsReader() {\n          reader.ensureOpen();\n          return readerToNormsProducer(reader);\n        }\n\n        @Override\n        public DocValuesProducer getDocValuesReader() {\n          reader.ensureOpen();\n          return readerToDocValuesProducer(reader);\n        }\n\n        @Override\n        public FieldsProducer getPostingsReader() {\n          reader.ensureOpen();\n          try {\n            return readerToFieldsProducer(reader);\n          } catch (IOException bogus) {\n            throw new AssertionError(bogus);\n          }\n        }\n\n        @Override\n        public FieldInfos getFieldInfos() {\n          return reader.getFieldInfos();\n        }\n\n        @Override\n        public PointsReader getPointsReader() {\n          return pointValuesToReader(reader);\n        }\n\n        @Override\n        public Bits getLiveDocs() {\n          return reader.getLiveDocs();\n        }\n\n        @Override\n        public int numDocs() {\n          return reader.numDocs();\n        }\n\n        @Override\n        public int maxDoc() {\n          return reader.maxDoc();\n        }\n\n        @Override\n        public CacheHelper getCoreCacheHelper() {\n          return reader.getCoreCacheHelper();\n        }\n\n        @Override\n        public CacheHelper getReaderCacheHelper() {\n          return reader.getReaderCacheHelper();\n        }\n\n        @Override\n        public String toString() {\n          return \"SlowCodecReaderWrapper(\" + reader + \")\";\n        }\n\n        @Override\n        public Sort getIndexSort() {\n          return reader.getIndexSort();\n        }\n      };\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"cab7a79353f33d1a94cd307bf33aa5148601ebe6":["1eee4175312c41f89aa23427f9e4edfc00deeaac"],"367f57e2ee85b7f7e28cfe73370a22cf67624f65":["d470c8182e92b264680e34081b75e70a9f2b3c89"],"0ad30c6a479e764150a3316e57263319775f1df2":["4522ffca5a1f420c6a02198c9332d7c596a30ca5","3d33e731a93d4b57e662ff094f64f94a745422d4"],"505bff044e47a553f461b6f4484d1d08faf4ac85":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["4522ffca5a1f420c6a02198c9332d7c596a30ca5","367f57e2ee85b7f7e28cfe73370a22cf67624f65"],"31741cf1390044e38a2ec3127cf302ba841bfd75":["d211216c83f01894810543d1c107160a9ae3650b"],"d470c8182e92b264680e34081b75e70a9f2b3c89":["4522ffca5a1f420c6a02198c9332d7c596a30ca5","0ad30c6a479e764150a3316e57263319775f1df2"],"4522ffca5a1f420c6a02198c9332d7c596a30ca5":["cab7a79353f33d1a94cd307bf33aa5148601ebe6"],"ceaef6cfc68c8ab22a684192e469a8280f9e6e70":["4522ffca5a1f420c6a02198c9332d7c596a30ca5"],"d211216c83f01894810543d1c107160a9ae3650b":["367f57e2ee85b7f7e28cfe73370a22cf67624f65"],"ca792c26af46bd6c4a08d81117c60440cf6a7e3d":["505bff044e47a553f461b6f4484d1d08faf4ac85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1eee4175312c41f89aa23427f9e4edfc00deeaac":["ca792c26af46bd6c4a08d81117c60440cf6a7e3d"],"92212fd254551a0b1156aafc3a1a6ed1a43932ad":["d211216c83f01894810543d1c107160a9ae3650b"],"3d33e731a93d4b57e662ff094f64f94a745422d4":["4522ffca5a1f420c6a02198c9332d7c596a30ca5","ceaef6cfc68c8ab22a684192e469a8280f9e6e70"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["31741cf1390044e38a2ec3127cf302ba841bfd75"]},"commit2Childs":{"cab7a79353f33d1a94cd307bf33aa5148601ebe6":["4522ffca5a1f420c6a02198c9332d7c596a30ca5"],"367f57e2ee85b7f7e28cfe73370a22cf67624f65":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","d211216c83f01894810543d1c107160a9ae3650b"],"0ad30c6a479e764150a3316e57263319775f1df2":["d470c8182e92b264680e34081b75e70a9f2b3c89"],"505bff044e47a553f461b6f4484d1d08faf4ac85":["ca792c26af46bd6c4a08d81117c60440cf6a7e3d"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"d470c8182e92b264680e34081b75e70a9f2b3c89":["367f57e2ee85b7f7e28cfe73370a22cf67624f65"],"31741cf1390044e38a2ec3127cf302ba841bfd75":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4522ffca5a1f420c6a02198c9332d7c596a30ca5":["0ad30c6a479e764150a3316e57263319775f1df2","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","d470c8182e92b264680e34081b75e70a9f2b3c89","ceaef6cfc68c8ab22a684192e469a8280f9e6e70","3d33e731a93d4b57e662ff094f64f94a745422d4"],"ceaef6cfc68c8ab22a684192e469a8280f9e6e70":["3d33e731a93d4b57e662ff094f64f94a745422d4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["505bff044e47a553f461b6f4484d1d08faf4ac85"],"d211216c83f01894810543d1c107160a9ae3650b":["31741cf1390044e38a2ec3127cf302ba841bfd75","92212fd254551a0b1156aafc3a1a6ed1a43932ad"],"ca792c26af46bd6c4a08d81117c60440cf6a7e3d":["1eee4175312c41f89aa23427f9e4edfc00deeaac"],"1eee4175312c41f89aa23427f9e4edfc00deeaac":["cab7a79353f33d1a94cd307bf33aa5148601ebe6"],"92212fd254551a0b1156aafc3a1a6ed1a43932ad":[],"3d33e731a93d4b57e662ff094f64f94a745422d4":["0ad30c6a479e764150a3316e57263319775f1df2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","92212fd254551a0b1156aafc3a1a6ed1a43932ad","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}