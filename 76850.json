{"path":"solr/core/src/test/org/apache/solr/TestTrie#testTrieIntRangeSearch().mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/TestTrie#testTrieIntRangeSearch().mjava","pathOld":"solr/src/test/org/apache/solr/TestTrie#testTrieIntRangeSearch().mjava","sourceNew":"  @Test\n  public void testTrieIntRangeSearch() throws Exception {\n    for (int i = 0; i < 10; i++) {\n      assertU(adoc(\"id\", String.valueOf(i), \"tint\", String.valueOf(i)));\n    }\n    assertU(commit());\n    assertQ(\"Range filter must match only 5 documents\", req(\"q\", \"*:*\", \"fq\", \"tint:[2 TO 6]\"), \"//*[@numFound='5']\");\n    for (int i = 1; i < 11; i++) {\n      assertU(adoc(\"id\", String.valueOf(-i), \"tint\", String.valueOf(-i)));\n    }\n    assertU(commit());\n    assertQ(\"Range filter must match only 5 documents\", req(\"q\", \"*:*\", \"fq\", \"tint:[-6 TO -2]\"), \"//*[@numFound='5']\");\n\n    // Test open ended range searches\n    assertQ(\"Range filter tint:[-9 to *] must match 20 documents\", req(\"q\", \"*:*\", \"fq\", \"tint:[-10 TO *]\"), \"//*[@numFound='20']\");\n    assertQ(\"Range filter tint:[* to 9] must match 20 documents\", req(\"q\", \"*:*\", \"fq\", \"tint:[* TO 10]\"), \"//*[@numFound='20']\");\n    assertQ(\"Range filter tint:[* to *] must match 20 documents\", req(\"q\", \"*:*\", \"fq\", \"tint:[* TO *]\"), \"//*[@numFound='20']\");\n\n    // Sorting\n    assertQ(\"Sort descending does not work correctly on tint fields\", req(\"q\", \"*:*\", \"sort\", \"tint desc\"), \"//*[@numFound='20']\", \"//int[@name='tint'][.='9']\");\n    assertQ(\"Sort ascending does not work correctly on tint fields\", req(\"q\", \"*:*\", \"sort\", \"tint asc\"), \"//*[@numFound='20']\", \"//int[@name='tint'][.='-10']\");\n\n    // Function queries\n    assertQ(\"Function queries does not work correctly on tint fields\", req(\"q\", \"_val_:\\\"sum(tint,1)\\\"\"), \"//*[@numFound='20']\", \"//int[@name='tint'][.='9']\");\n  }\n\n","sourceOld":"  @Test\n  public void testTrieIntRangeSearch() throws Exception {\n    for (int i = 0; i < 10; i++) {\n      assertU(adoc(\"id\", String.valueOf(i), \"tint\", String.valueOf(i)));\n    }\n    assertU(commit());\n    assertQ(\"Range filter must match only 5 documents\", req(\"q\", \"*:*\", \"fq\", \"tint:[2 TO 6]\"), \"//*[@numFound='5']\");\n    for (int i = 1; i < 11; i++) {\n      assertU(adoc(\"id\", String.valueOf(-i), \"tint\", String.valueOf(-i)));\n    }\n    assertU(commit());\n    assertQ(\"Range filter must match only 5 documents\", req(\"q\", \"*:*\", \"fq\", \"tint:[-6 TO -2]\"), \"//*[@numFound='5']\");\n\n    // Test open ended range searches\n    assertQ(\"Range filter tint:[-9 to *] must match 20 documents\", req(\"q\", \"*:*\", \"fq\", \"tint:[-10 TO *]\"), \"//*[@numFound='20']\");\n    assertQ(\"Range filter tint:[* to 9] must match 20 documents\", req(\"q\", \"*:*\", \"fq\", \"tint:[* TO 10]\"), \"//*[@numFound='20']\");\n    assertQ(\"Range filter tint:[* to *] must match 20 documents\", req(\"q\", \"*:*\", \"fq\", \"tint:[* TO *]\"), \"//*[@numFound='20']\");\n\n    // Sorting\n    assertQ(\"Sort descending does not work correctly on tint fields\", req(\"q\", \"*:*\", \"sort\", \"tint desc\"), \"//*[@numFound='20']\", \"//int[@name='tint'][.='9']\");\n    assertQ(\"Sort ascending does not work correctly on tint fields\", req(\"q\", \"*:*\", \"sort\", \"tint asc\"), \"//*[@numFound='20']\", \"//int[@name='tint'][.='-10']\");\n\n    // Function queries\n    assertQ(\"Function queries does not work correctly on tint fields\", req(\"q\", \"_val_:\\\"sum(tint,1)\\\"\"), \"//*[@numFound='20']\", \"//int[@name='tint'][.='9']\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/TestTrie#testTrieIntRangeSearch().mjava","pathOld":"solr/src/test/org/apache/solr/TestTrie#testTrieIntRangeSearch().mjava","sourceNew":"  @Test\n  public void testTrieIntRangeSearch() throws Exception {\n    for (int i = 0; i < 10; i++) {\n      assertU(adoc(\"id\", String.valueOf(i), \"tint\", String.valueOf(i)));\n    }\n    assertU(commit());\n    assertQ(\"Range filter must match only 5 documents\", req(\"q\", \"*:*\", \"fq\", \"tint:[2 TO 6]\"), \"//*[@numFound='5']\");\n    for (int i = 1; i < 11; i++) {\n      assertU(adoc(\"id\", String.valueOf(-i), \"tint\", String.valueOf(-i)));\n    }\n    assertU(commit());\n    assertQ(\"Range filter must match only 5 documents\", req(\"q\", \"*:*\", \"fq\", \"tint:[-6 TO -2]\"), \"//*[@numFound='5']\");\n\n    // Test open ended range searches\n    assertQ(\"Range filter tint:[-9 to *] must match 20 documents\", req(\"q\", \"*:*\", \"fq\", \"tint:[-10 TO *]\"), \"//*[@numFound='20']\");\n    assertQ(\"Range filter tint:[* to 9] must match 20 documents\", req(\"q\", \"*:*\", \"fq\", \"tint:[* TO 10]\"), \"//*[@numFound='20']\");\n    assertQ(\"Range filter tint:[* to *] must match 20 documents\", req(\"q\", \"*:*\", \"fq\", \"tint:[* TO *]\"), \"//*[@numFound='20']\");\n\n    // Sorting\n    assertQ(\"Sort descending does not work correctly on tint fields\", req(\"q\", \"*:*\", \"sort\", \"tint desc\"), \"//*[@numFound='20']\", \"//int[@name='tint'][.='9']\");\n    assertQ(\"Sort ascending does not work correctly on tint fields\", req(\"q\", \"*:*\", \"sort\", \"tint asc\"), \"//*[@numFound='20']\", \"//int[@name='tint'][.='-10']\");\n\n    // Function queries\n    assertQ(\"Function queries does not work correctly on tint fields\", req(\"q\", \"_val_:\\\"sum(tint,1)\\\"\"), \"//*[@numFound='20']\", \"//int[@name='tint'][.='9']\");\n  }\n\n","sourceOld":"  @Test\n  public void testTrieIntRangeSearch() throws Exception {\n    for (int i = 0; i < 10; i++) {\n      assertU(adoc(\"id\", String.valueOf(i), \"tint\", String.valueOf(i)));\n    }\n    assertU(commit());\n    assertQ(\"Range filter must match only 5 documents\", req(\"q\", \"*:*\", \"fq\", \"tint:[2 TO 6]\"), \"//*[@numFound='5']\");\n    for (int i = 1; i < 11; i++) {\n      assertU(adoc(\"id\", String.valueOf(-i), \"tint\", String.valueOf(-i)));\n    }\n    assertU(commit());\n    assertQ(\"Range filter must match only 5 documents\", req(\"q\", \"*:*\", \"fq\", \"tint:[-6 TO -2]\"), \"//*[@numFound='5']\");\n\n    // Test open ended range searches\n    assertQ(\"Range filter tint:[-9 to *] must match 20 documents\", req(\"q\", \"*:*\", \"fq\", \"tint:[-10 TO *]\"), \"//*[@numFound='20']\");\n    assertQ(\"Range filter tint:[* to 9] must match 20 documents\", req(\"q\", \"*:*\", \"fq\", \"tint:[* TO 10]\"), \"//*[@numFound='20']\");\n    assertQ(\"Range filter tint:[* to *] must match 20 documents\", req(\"q\", \"*:*\", \"fq\", \"tint:[* TO *]\"), \"//*[@numFound='20']\");\n\n    // Sorting\n    assertQ(\"Sort descending does not work correctly on tint fields\", req(\"q\", \"*:*\", \"sort\", \"tint desc\"), \"//*[@numFound='20']\", \"//int[@name='tint'][.='9']\");\n    assertQ(\"Sort ascending does not work correctly on tint fields\", req(\"q\", \"*:*\", \"sort\", \"tint asc\"), \"//*[@numFound='20']\", \"//int[@name='tint'][.='-10']\");\n\n    // Function queries\n    assertQ(\"Function queries does not work correctly on tint fields\", req(\"q\", \"_val_:\\\"sum(tint,1)\\\"\"), \"//*[@numFound='20']\", \"//int[@name='tint'][.='9']\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/TestTrie#testTrieIntRangeSearch().mjava","pathOld":"solr/src/test/org/apache/solr/TestTrie#testTrieIntRangeSearch().mjava","sourceNew":"  @Test\n  public void testTrieIntRangeSearch() throws Exception {\n    for (int i = 0; i < 10; i++) {\n      assertU(adoc(\"id\", String.valueOf(i), \"tint\", String.valueOf(i)));\n    }\n    assertU(commit());\n    assertQ(\"Range filter must match only 5 documents\", req(\"q\", \"*:*\", \"fq\", \"tint:[2 TO 6]\"), \"//*[@numFound='5']\");\n    for (int i = 1; i < 11; i++) {\n      assertU(adoc(\"id\", String.valueOf(-i), \"tint\", String.valueOf(-i)));\n    }\n    assertU(commit());\n    assertQ(\"Range filter must match only 5 documents\", req(\"q\", \"*:*\", \"fq\", \"tint:[-6 TO -2]\"), \"//*[@numFound='5']\");\n\n    // Test open ended range searches\n    assertQ(\"Range filter tint:[-9 to *] must match 20 documents\", req(\"q\", \"*:*\", \"fq\", \"tint:[-10 TO *]\"), \"//*[@numFound='20']\");\n    assertQ(\"Range filter tint:[* to 9] must match 20 documents\", req(\"q\", \"*:*\", \"fq\", \"tint:[* TO 10]\"), \"//*[@numFound='20']\");\n    assertQ(\"Range filter tint:[* to *] must match 20 documents\", req(\"q\", \"*:*\", \"fq\", \"tint:[* TO *]\"), \"//*[@numFound='20']\");\n\n    // Sorting\n    assertQ(\"Sort descending does not work correctly on tint fields\", req(\"q\", \"*:*\", \"sort\", \"tint desc\"), \"//*[@numFound='20']\", \"//int[@name='tint'][.='9']\");\n    assertQ(\"Sort ascending does not work correctly on tint fields\", req(\"q\", \"*:*\", \"sort\", \"tint asc\"), \"//*[@numFound='20']\", \"//int[@name='tint'][.='-10']\");\n\n    // Function queries\n    assertQ(\"Function queries does not work correctly on tint fields\", req(\"q\", \"_val_:\\\"sum(tint,1)\\\"\"), \"//*[@numFound='20']\", \"//int[@name='tint'][.='9']\");\n  }\n\n","sourceOld":"  @Test\n  public void testTrieIntRangeSearch() throws Exception {\n    for (int i = 0; i < 10; i++) {\n      assertU(adoc(\"id\", String.valueOf(i), \"tint\", String.valueOf(i)));\n    }\n    assertU(commit());\n    assertQ(\"Range filter must match only 5 documents\", req(\"q\", \"*:*\", \"fq\", \"tint:[2 TO 6]\"), \"//*[@numFound='5']\");\n    for (int i = 1; i < 11; i++) {\n      assertU(adoc(\"id\", String.valueOf(-i), \"tint\", String.valueOf(-i)));\n    }\n    assertU(commit());\n    assertQ(\"Range filter must match only 5 documents\", req(\"q\", \"*:*\", \"fq\", \"tint:[-6 TO -2]\"), \"//*[@numFound='5']\");\n\n    // Test open ended range searches\n    assertQ(\"Range filter tint:[-9 to *] must match 20 documents\", req(\"q\", \"*:*\", \"fq\", \"tint:[-10 TO *]\"), \"//*[@numFound='20']\");\n    assertQ(\"Range filter tint:[* to 9] must match 20 documents\", req(\"q\", \"*:*\", \"fq\", \"tint:[* TO 10]\"), \"//*[@numFound='20']\");\n    assertQ(\"Range filter tint:[* to *] must match 20 documents\", req(\"q\", \"*:*\", \"fq\", \"tint:[* TO *]\"), \"//*[@numFound='20']\");\n\n    // Sorting\n    assertQ(\"Sort descending does not work correctly on tint fields\", req(\"q\", \"*:*\", \"sort\", \"tint desc\"), \"//*[@numFound='20']\", \"//int[@name='tint'][.='9']\");\n    assertQ(\"Sort ascending does not work correctly on tint fields\", req(\"q\", \"*:*\", \"sort\", \"tint asc\"), \"//*[@numFound='20']\", \"//int[@name='tint'][.='-10']\");\n\n    // Function queries\n    assertQ(\"Function queries does not work correctly on tint fields\", req(\"q\", \"_val_:\\\"sum(tint,1)\\\"\"), \"//*[@numFound='20']\", \"//int[@name='tint'][.='9']\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c26f00b574427b55127e869b935845554afde1fa"]},"commit2Childs":{"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}