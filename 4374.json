{"path":"solr/core/src/test/org/apache/solr/util/SolrPluginUtilsTest#testParseFieldBoosts().mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/util/SolrPluginUtilsTest#testParseFieldBoosts().mjava","pathOld":"solr/src/test/org/apache/solr/util/SolrPluginUtilsTest#testParseFieldBoosts().mjava","sourceNew":"  @Test\n  public void testParseFieldBoosts() throws Exception {\n\n    Map<String,Float> e1 = new HashMap<String,Float>();\n    e1.put(\"fieldOne\",2.3f);\n    e1.put(\"fieldTwo\",null);\n    e1.put(\"fieldThree\",-0.4f);\n\n    assertEquals(\"basic e1\", e1, SolrPluginUtils.parseFieldBoosts\n                 (\"fieldOne^2.3 fieldTwo fieldThree^-0.4\"));\n    assertEquals(\"spacey e1\", e1, SolrPluginUtils.parseFieldBoosts\n                 (\"  fieldOne^2.3   fieldTwo fieldThree^-0.4   \"));\n    assertEquals(\"really spacey e1\", e1, SolrPluginUtils.parseFieldBoosts\n                 (\" \\t fieldOne^2.3 \\n  fieldTwo fieldThree^-0.4   \"));\n    assertEquals(\"really spacey e1\", e1, SolrPluginUtils.parseFieldBoosts\n                 (new String[]{\" \\t fieldOne^2.3 \\n\",\n                               \"  fieldTwo fieldThree^-0.4   \",\n                               \" \"}));\n\n    Map<String,Float> e2 = new HashMap<String,Float>();\n    assertEquals(\"empty e2\", e2, SolrPluginUtils.parseFieldBoosts\n                 (\"\"));\n    assertEquals(\"spacey e2\", e2, SolrPluginUtils.parseFieldBoosts\n                 (\"   \\t   \"));\n  }\n\n","sourceOld":"  @Test\n  public void testParseFieldBoosts() throws Exception {\n\n    Map<String,Float> e1 = new HashMap<String,Float>();\n    e1.put(\"fieldOne\",2.3f);\n    e1.put(\"fieldTwo\",null);\n    e1.put(\"fieldThree\",-0.4f);\n\n    assertEquals(\"basic e1\", e1, SolrPluginUtils.parseFieldBoosts\n                 (\"fieldOne^2.3 fieldTwo fieldThree^-0.4\"));\n    assertEquals(\"spacey e1\", e1, SolrPluginUtils.parseFieldBoosts\n                 (\"  fieldOne^2.3   fieldTwo fieldThree^-0.4   \"));\n    assertEquals(\"really spacey e1\", e1, SolrPluginUtils.parseFieldBoosts\n                 (\" \\t fieldOne^2.3 \\n  fieldTwo fieldThree^-0.4   \"));\n    assertEquals(\"really spacey e1\", e1, SolrPluginUtils.parseFieldBoosts\n                 (new String[]{\" \\t fieldOne^2.3 \\n\",\n                               \"  fieldTwo fieldThree^-0.4   \",\n                               \" \"}));\n\n    Map<String,Float> e2 = new HashMap<String,Float>();\n    assertEquals(\"empty e2\", e2, SolrPluginUtils.parseFieldBoosts\n                 (\"\"));\n    assertEquals(\"spacey e2\", e2, SolrPluginUtils.parseFieldBoosts\n                 (\"   \\t   \"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/util/SolrPluginUtilsTest#testParseFieldBoosts().mjava","pathOld":"solr/src/test/org/apache/solr/util/SolrPluginUtilsTest#testParseFieldBoosts().mjava","sourceNew":"  @Test\n  public void testParseFieldBoosts() throws Exception {\n\n    Map<String,Float> e1 = new HashMap<String,Float>();\n    e1.put(\"fieldOne\",2.3f);\n    e1.put(\"fieldTwo\",null);\n    e1.put(\"fieldThree\",-0.4f);\n\n    assertEquals(\"basic e1\", e1, SolrPluginUtils.parseFieldBoosts\n                 (\"fieldOne^2.3 fieldTwo fieldThree^-0.4\"));\n    assertEquals(\"spacey e1\", e1, SolrPluginUtils.parseFieldBoosts\n                 (\"  fieldOne^2.3   fieldTwo fieldThree^-0.4   \"));\n    assertEquals(\"really spacey e1\", e1, SolrPluginUtils.parseFieldBoosts\n                 (\" \\t fieldOne^2.3 \\n  fieldTwo fieldThree^-0.4   \"));\n    assertEquals(\"really spacey e1\", e1, SolrPluginUtils.parseFieldBoosts\n                 (new String[]{\" \\t fieldOne^2.3 \\n\",\n                               \"  fieldTwo fieldThree^-0.4   \",\n                               \" \"}));\n\n    Map<String,Float> e2 = new HashMap<String,Float>();\n    assertEquals(\"empty e2\", e2, SolrPluginUtils.parseFieldBoosts\n                 (\"\"));\n    assertEquals(\"spacey e2\", e2, SolrPluginUtils.parseFieldBoosts\n                 (\"   \\t   \"));\n  }\n\n","sourceOld":"  @Test\n  public void testParseFieldBoosts() throws Exception {\n\n    Map<String,Float> e1 = new HashMap<String,Float>();\n    e1.put(\"fieldOne\",2.3f);\n    e1.put(\"fieldTwo\",null);\n    e1.put(\"fieldThree\",-0.4f);\n\n    assertEquals(\"basic e1\", e1, SolrPluginUtils.parseFieldBoosts\n                 (\"fieldOne^2.3 fieldTwo fieldThree^-0.4\"));\n    assertEquals(\"spacey e1\", e1, SolrPluginUtils.parseFieldBoosts\n                 (\"  fieldOne^2.3   fieldTwo fieldThree^-0.4   \"));\n    assertEquals(\"really spacey e1\", e1, SolrPluginUtils.parseFieldBoosts\n                 (\" \\t fieldOne^2.3 \\n  fieldTwo fieldThree^-0.4   \"));\n    assertEquals(\"really spacey e1\", e1, SolrPluginUtils.parseFieldBoosts\n                 (new String[]{\" \\t fieldOne^2.3 \\n\",\n                               \"  fieldTwo fieldThree^-0.4   \",\n                               \" \"}));\n\n    Map<String,Float> e2 = new HashMap<String,Float>();\n    assertEquals(\"empty e2\", e2, SolrPluginUtils.parseFieldBoosts\n                 (\"\"));\n    assertEquals(\"spacey e2\", e2, SolrPluginUtils.parseFieldBoosts\n                 (\"   \\t   \"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/util/SolrPluginUtilsTest#testParseFieldBoosts().mjava","pathOld":"solr/src/test/org/apache/solr/util/SolrPluginUtilsTest#testParseFieldBoosts().mjava","sourceNew":"  @Test\n  public void testParseFieldBoosts() throws Exception {\n\n    Map<String,Float> e1 = new HashMap<String,Float>();\n    e1.put(\"fieldOne\",2.3f);\n    e1.put(\"fieldTwo\",null);\n    e1.put(\"fieldThree\",-0.4f);\n\n    assertEquals(\"basic e1\", e1, SolrPluginUtils.parseFieldBoosts\n                 (\"fieldOne^2.3 fieldTwo fieldThree^-0.4\"));\n    assertEquals(\"spacey e1\", e1, SolrPluginUtils.parseFieldBoosts\n                 (\"  fieldOne^2.3   fieldTwo fieldThree^-0.4   \"));\n    assertEquals(\"really spacey e1\", e1, SolrPluginUtils.parseFieldBoosts\n                 (\" \\t fieldOne^2.3 \\n  fieldTwo fieldThree^-0.4   \"));\n    assertEquals(\"really spacey e1\", e1, SolrPluginUtils.parseFieldBoosts\n                 (new String[]{\" \\t fieldOne^2.3 \\n\",\n                               \"  fieldTwo fieldThree^-0.4   \",\n                               \" \"}));\n\n    Map<String,Float> e2 = new HashMap<String,Float>();\n    assertEquals(\"empty e2\", e2, SolrPluginUtils.parseFieldBoosts\n                 (\"\"));\n    assertEquals(\"spacey e2\", e2, SolrPluginUtils.parseFieldBoosts\n                 (\"   \\t   \"));\n  }\n\n","sourceOld":"  @Test\n  public void testParseFieldBoosts() throws Exception {\n\n    Map<String,Float> e1 = new HashMap<String,Float>();\n    e1.put(\"fieldOne\",2.3f);\n    e1.put(\"fieldTwo\",null);\n    e1.put(\"fieldThree\",-0.4f);\n\n    assertEquals(\"basic e1\", e1, SolrPluginUtils.parseFieldBoosts\n                 (\"fieldOne^2.3 fieldTwo fieldThree^-0.4\"));\n    assertEquals(\"spacey e1\", e1, SolrPluginUtils.parseFieldBoosts\n                 (\"  fieldOne^2.3   fieldTwo fieldThree^-0.4   \"));\n    assertEquals(\"really spacey e1\", e1, SolrPluginUtils.parseFieldBoosts\n                 (\" \\t fieldOne^2.3 \\n  fieldTwo fieldThree^-0.4   \"));\n    assertEquals(\"really spacey e1\", e1, SolrPluginUtils.parseFieldBoosts\n                 (new String[]{\" \\t fieldOne^2.3 \\n\",\n                               \"  fieldTwo fieldThree^-0.4   \",\n                               \" \"}));\n\n    Map<String,Float> e2 = new HashMap<String,Float>();\n    assertEquals(\"empty e2\", e2, SolrPluginUtils.parseFieldBoosts\n                 (\"\"));\n    assertEquals(\"spacey e2\", e2, SolrPluginUtils.parseFieldBoosts\n                 (\"   \\t   \"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/util/SolrPluginUtilsTest#testParseFieldBoosts().mjava","pathOld":"solr/core/src/test/org/apache/solr/util/SolrPluginUtilsTest#testParseFieldBoosts().mjava","sourceNew":"  @Test\n  public void testParseFieldBoosts() throws Exception {\n\n    Map<String,Float> e1 = new HashMap<>();\n    e1.put(\"fieldOne\",2.3f);\n    e1.put(\"fieldTwo\",null);\n    e1.put(\"fieldThree\",-0.4f);\n\n    assertEquals(\"basic e1\", e1, SolrPluginUtils.parseFieldBoosts\n                 (\"fieldOne^2.3 fieldTwo fieldThree^-0.4\"));\n    assertEquals(\"spacey e1\", e1, SolrPluginUtils.parseFieldBoosts\n                 (\"  fieldOne^2.3   fieldTwo fieldThree^-0.4   \"));\n    assertEquals(\"really spacey e1\", e1, SolrPluginUtils.parseFieldBoosts\n                 (\" \\t fieldOne^2.3 \\n  fieldTwo fieldThree^-0.4   \"));\n    assertEquals(\"really spacey e1\", e1, SolrPluginUtils.parseFieldBoosts\n                 (new String[]{\" \\t fieldOne^2.3 \\n\",\n                               \"  fieldTwo fieldThree^-0.4   \",\n                               \" \"}));\n\n    Map<String,Float> e2 = new HashMap<>();\n    assertEquals(\"empty e2\", e2, SolrPluginUtils.parseFieldBoosts\n                 (\"\"));\n    assertEquals(\"spacey e2\", e2, SolrPluginUtils.parseFieldBoosts\n                 (\"   \\t   \"));\n  }\n\n","sourceOld":"  @Test\n  public void testParseFieldBoosts() throws Exception {\n\n    Map<String,Float> e1 = new HashMap<String,Float>();\n    e1.put(\"fieldOne\",2.3f);\n    e1.put(\"fieldTwo\",null);\n    e1.put(\"fieldThree\",-0.4f);\n\n    assertEquals(\"basic e1\", e1, SolrPluginUtils.parseFieldBoosts\n                 (\"fieldOne^2.3 fieldTwo fieldThree^-0.4\"));\n    assertEquals(\"spacey e1\", e1, SolrPluginUtils.parseFieldBoosts\n                 (\"  fieldOne^2.3   fieldTwo fieldThree^-0.4   \"));\n    assertEquals(\"really spacey e1\", e1, SolrPluginUtils.parseFieldBoosts\n                 (\" \\t fieldOne^2.3 \\n  fieldTwo fieldThree^-0.4   \"));\n    assertEquals(\"really spacey e1\", e1, SolrPluginUtils.parseFieldBoosts\n                 (new String[]{\" \\t fieldOne^2.3 \\n\",\n                               \"  fieldTwo fieldThree^-0.4   \",\n                               \" \"}));\n\n    Map<String,Float> e2 = new HashMap<String,Float>();\n    assertEquals(\"empty e2\", e2, SolrPluginUtils.parseFieldBoosts\n                 (\"\"));\n    assertEquals(\"spacey e2\", e2, SolrPluginUtils.parseFieldBoosts\n                 (\"   \\t   \"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["c26f00b574427b55127e869b935845554afde1fa"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"]},"commit2Childs":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}