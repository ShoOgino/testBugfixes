{"path":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testCorruptFirstCommit().mjava","commits":[{"id":"30e0912f3a3069b115cfea44ff612c44d6906386","date":1365631344,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testCorruptFirstCommit().mjava","pathOld":"/dev/null","sourceNew":"  // LUCENE-2727/LUCENE-2812/LUCENE-4738:\n  public void testCorruptFirstCommit() throws Exception {\n    for(int i=0;i<6;i++) {\n      BaseDirectoryWrapper dir = newDirectory();\n      dir.createOutput(\"segments_0\", IOContext.DEFAULT).close();\n      IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n      int mode = i/2;\n      if (mode == 0) {\n        iwc.setOpenMode(OpenMode.CREATE);\n      } else if (mode == 1) {\n        iwc.setOpenMode(OpenMode.APPEND);\n      } else if (mode == 2) {\n        iwc.setOpenMode(OpenMode.CREATE_OR_APPEND);\n      }\n\n      if (VERBOSE) {\n        System.out.println(\"\\nTEST: i=\" + i);\n      }\n\n      try {\n        if ((i & 1) == 0) {\n          new IndexWriter(dir, iwc).close();\n        } else {\n          new IndexWriter(dir, iwc).rollback();\n        }\n        if (mode != 0) {\n          fail(\"expected exception\");\n        }\n      } catch (IOException ioe) {\n        // OpenMode.APPEND should throw an exception since no\n        // index exists:\n        if (mode == 0) {\n          // Unexpected\n          throw ioe;\n        }\n      }\n\n      if (VERBOSE) {\n        System.out.println(\"  at close: \" + Arrays.toString(dir.listAll()));\n      }\n\n      if (mode != 0) {\n        dir.setCheckIndexOnClose(false);\n      }\n      dir.close();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testCorruptFirstCommit().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testCorruptFirstCommit().mjava","sourceNew":"  // LUCENE-2727/LUCENE-2812/LUCENE-4738:\n  public void testCorruptFirstCommit() throws Exception {\n    for(int i=0;i<6;i++) {\n      BaseDirectoryWrapper dir = newDirectory();\n      dir.createOutput(\"segments_0\", IOContext.DEFAULT).close();\n      IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n      int mode = i/2;\n      if (mode == 0) {\n        iwc.setOpenMode(OpenMode.CREATE);\n      } else if (mode == 1) {\n        iwc.setOpenMode(OpenMode.APPEND);\n      } else if (mode == 2) {\n        iwc.setOpenMode(OpenMode.CREATE_OR_APPEND);\n      }\n\n      if (VERBOSE) {\n        System.out.println(\"\\nTEST: i=\" + i);\n      }\n\n      try {\n        if ((i & 1) == 0) {\n          new IndexWriter(dir, iwc).shutdown();\n        } else {\n          new IndexWriter(dir, iwc).rollback();\n        }\n        if (mode != 0) {\n          fail(\"expected exception\");\n        }\n      } catch (IOException ioe) {\n        // OpenMode.APPEND should throw an exception since no\n        // index exists:\n        if (mode == 0) {\n          // Unexpected\n          throw ioe;\n        }\n      }\n\n      if (VERBOSE) {\n        System.out.println(\"  at close: \" + Arrays.toString(dir.listAll()));\n      }\n\n      if (mode != 0) {\n        dir.setCheckIndexOnClose(false);\n      }\n      dir.close();\n    }\n  }\n\n","sourceOld":"  // LUCENE-2727/LUCENE-2812/LUCENE-4738:\n  public void testCorruptFirstCommit() throws Exception {\n    for(int i=0;i<6;i++) {\n      BaseDirectoryWrapper dir = newDirectory();\n      dir.createOutput(\"segments_0\", IOContext.DEFAULT).close();\n      IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n      int mode = i/2;\n      if (mode == 0) {\n        iwc.setOpenMode(OpenMode.CREATE);\n      } else if (mode == 1) {\n        iwc.setOpenMode(OpenMode.APPEND);\n      } else if (mode == 2) {\n        iwc.setOpenMode(OpenMode.CREATE_OR_APPEND);\n      }\n\n      if (VERBOSE) {\n        System.out.println(\"\\nTEST: i=\" + i);\n      }\n\n      try {\n        if ((i & 1) == 0) {\n          new IndexWriter(dir, iwc).close();\n        } else {\n          new IndexWriter(dir, iwc).rollback();\n        }\n        if (mode != 0) {\n          fail(\"expected exception\");\n        }\n      } catch (IOException ioe) {\n        // OpenMode.APPEND should throw an exception since no\n        // index exists:\n        if (mode == 0) {\n          // Unexpected\n          throw ioe;\n        }\n      }\n\n      if (VERBOSE) {\n        System.out.println(\"  at close: \" + Arrays.toString(dir.listAll()));\n      }\n\n      if (mode != 0) {\n        dir.setCheckIndexOnClose(false);\n      }\n      dir.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e","date":1406737224,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testCorruptFirstCommit().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testCorruptFirstCommit().mjava","sourceNew":"  // LUCENE-2727/LUCENE-2812/LUCENE-4738:\n  public void testCorruptFirstCommit() throws Exception {\n    for(int i=0;i<6;i++) {\n      BaseDirectoryWrapper dir = newDirectory();\n      dir.createOutput(\"segments_0\", IOContext.DEFAULT).close();\n      IndexWriterConfig iwc = newIndexWriterConfig(new MockAnalyzer(random()));\n      int mode = i/2;\n      if (mode == 0) {\n        iwc.setOpenMode(OpenMode.CREATE);\n      } else if (mode == 1) {\n        iwc.setOpenMode(OpenMode.APPEND);\n      } else if (mode == 2) {\n        iwc.setOpenMode(OpenMode.CREATE_OR_APPEND);\n      }\n\n      if (VERBOSE) {\n        System.out.println(\"\\nTEST: i=\" + i);\n      }\n\n      try {\n        if ((i & 1) == 0) {\n          new IndexWriter(dir, iwc).shutdown();\n        } else {\n          new IndexWriter(dir, iwc).rollback();\n        }\n        if (mode != 0) {\n          fail(\"expected exception\");\n        }\n      } catch (IOException ioe) {\n        // OpenMode.APPEND should throw an exception since no\n        // index exists:\n        if (mode == 0) {\n          // Unexpected\n          throw ioe;\n        }\n      }\n\n      if (VERBOSE) {\n        System.out.println(\"  at close: \" + Arrays.toString(dir.listAll()));\n      }\n\n      if (mode != 0) {\n        dir.setCheckIndexOnClose(false);\n      }\n      dir.close();\n    }\n  }\n\n","sourceOld":"  // LUCENE-2727/LUCENE-2812/LUCENE-4738:\n  public void testCorruptFirstCommit() throws Exception {\n    for(int i=0;i<6;i++) {\n      BaseDirectoryWrapper dir = newDirectory();\n      dir.createOutput(\"segments_0\", IOContext.DEFAULT).close();\n      IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n      int mode = i/2;\n      if (mode == 0) {\n        iwc.setOpenMode(OpenMode.CREATE);\n      } else if (mode == 1) {\n        iwc.setOpenMode(OpenMode.APPEND);\n      } else if (mode == 2) {\n        iwc.setOpenMode(OpenMode.CREATE_OR_APPEND);\n      }\n\n      if (VERBOSE) {\n        System.out.println(\"\\nTEST: i=\" + i);\n      }\n\n      try {\n        if ((i & 1) == 0) {\n          new IndexWriter(dir, iwc).shutdown();\n        } else {\n          new IndexWriter(dir, iwc).rollback();\n        }\n        if (mode != 0) {\n          fail(\"expected exception\");\n        }\n      } catch (IOException ioe) {\n        // OpenMode.APPEND should throw an exception since no\n        // index exists:\n        if (mode == 0) {\n          // Unexpected\n          throw ioe;\n        }\n      }\n\n      if (VERBOSE) {\n        System.out.println(\"  at close: \" + Arrays.toString(dir.listAll()));\n      }\n\n      if (mode != 0) {\n        dir.setCheckIndexOnClose(false);\n      }\n      dir.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testCorruptFirstCommit().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testCorruptFirstCommit().mjava","sourceNew":"  // LUCENE-2727/LUCENE-2812/LUCENE-4738:\n  public void testCorruptFirstCommit() throws Exception {\n    for(int i=0;i<6;i++) {\n      BaseDirectoryWrapper dir = newDirectory();\n      dir.createOutput(\"segments_0\", IOContext.DEFAULT).close();\n      IndexWriterConfig iwc = newIndexWriterConfig(new MockAnalyzer(random()));\n      int mode = i/2;\n      if (mode == 0) {\n        iwc.setOpenMode(OpenMode.CREATE);\n      } else if (mode == 1) {\n        iwc.setOpenMode(OpenMode.APPEND);\n      } else if (mode == 2) {\n        iwc.setOpenMode(OpenMode.CREATE_OR_APPEND);\n      }\n\n      if (VERBOSE) {\n        System.out.println(\"\\nTEST: i=\" + i);\n      }\n\n      try {\n        if ((i & 1) == 0) {\n          new IndexWriter(dir, iwc).close();\n        } else {\n          new IndexWriter(dir, iwc).rollback();\n        }\n        if (mode != 0) {\n          fail(\"expected exception\");\n        }\n      } catch (IOException ioe) {\n        // OpenMode.APPEND should throw an exception since no\n        // index exists:\n        if (mode == 0) {\n          // Unexpected\n          throw ioe;\n        }\n      }\n\n      if (VERBOSE) {\n        System.out.println(\"  at close: \" + Arrays.toString(dir.listAll()));\n      }\n\n      if (mode != 0) {\n        dir.setCheckIndexOnClose(false);\n      }\n      dir.close();\n    }\n  }\n\n","sourceOld":"  // LUCENE-2727/LUCENE-2812/LUCENE-4738:\n  public void testCorruptFirstCommit() throws Exception {\n    for(int i=0;i<6;i++) {\n      BaseDirectoryWrapper dir = newDirectory();\n      dir.createOutput(\"segments_0\", IOContext.DEFAULT).close();\n      IndexWriterConfig iwc = newIndexWriterConfig(new MockAnalyzer(random()));\n      int mode = i/2;\n      if (mode == 0) {\n        iwc.setOpenMode(OpenMode.CREATE);\n      } else if (mode == 1) {\n        iwc.setOpenMode(OpenMode.APPEND);\n      } else if (mode == 2) {\n        iwc.setOpenMode(OpenMode.CREATE_OR_APPEND);\n      }\n\n      if (VERBOSE) {\n        System.out.println(\"\\nTEST: i=\" + i);\n      }\n\n      try {\n        if ((i & 1) == 0) {\n          new IndexWriter(dir, iwc).shutdown();\n        } else {\n          new IndexWriter(dir, iwc).rollback();\n        }\n        if (mode != 0) {\n          fail(\"expected exception\");\n        }\n      } catch (IOException ioe) {\n        // OpenMode.APPEND should throw an exception since no\n        // index exists:\n        if (mode == 0) {\n          // Unexpected\n          throw ioe;\n        }\n      }\n\n      if (VERBOSE) {\n        System.out.println(\"  at close: \" + Arrays.toString(dir.listAll()));\n      }\n\n      if (mode != 0) {\n        dir.setCheckIndexOnClose(false);\n      }\n      dir.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a115a48ec36e765c943b95657fb72ce5e9813daa","date":1409388177,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testCorruptFirstCommit().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testCorruptFirstCommit().mjava","sourceNew":"  // LUCENE-2727/LUCENE-2812/LUCENE-4738:\n  public void testCorruptFirstCommit() throws Exception {\n    for(int i=0;i<6;i++) {\n      BaseDirectoryWrapper dir = newDirectory();\n\n      // Create a corrupt first commit:\n      dir.createOutput(\"segments_0\", IOContext.DEFAULT).close();\n\n      IndexWriterConfig iwc = newIndexWriterConfig(new MockAnalyzer(random()));\n      int mode = i/2;\n      if (mode == 0) {\n        iwc.setOpenMode(OpenMode.CREATE);\n      } else if (mode == 1) {\n        iwc.setOpenMode(OpenMode.APPEND);\n      } else if (mode == 2) {\n        iwc.setOpenMode(OpenMode.CREATE_OR_APPEND);\n      }\n\n      if (VERBOSE) {\n        System.out.println(\"\\nTEST: i=\" + i);\n      }\n\n      try {\n        if ((i & 1) == 0) {\n          new IndexWriter(dir, iwc).close();\n        } else {\n          new IndexWriter(dir, iwc).rollback();\n        }\n        if (mode != 0) {\n          fail(\"expected exception\");\n        }\n      } catch (IOException ioe) {\n        // OpenMode.APPEND should throw an exception since no\n        // index exists:\n        if (mode == 0) {\n          // Unexpected\n          throw ioe;\n        }\n      }\n\n      if (VERBOSE) {\n        System.out.println(\"  at close: \" + Arrays.toString(dir.listAll()));\n      }\n\n      if (mode != 0) {\n        dir.setCheckIndexOnClose(false);\n      }\n\n      if (dir instanceof MockDirectoryWrapper) {\n        MockDirectoryWrapper mdw = (MockDirectoryWrapper) dir;\n        if (Arrays.equals(new String[] {\"segments_0\"}, dir.listAll()) &&\n            mdw.didTryToDelete(\"segments_0\")) {\n          // This means virus checker blocked IW deleting the corrupt first commit\n          dir.setCheckIndexOnClose(false);\n        }\n      }\n\n      dir.close();\n    }\n  }\n\n","sourceOld":"  // LUCENE-2727/LUCENE-2812/LUCENE-4738:\n  public void testCorruptFirstCommit() throws Exception {\n    for(int i=0;i<6;i++) {\n      BaseDirectoryWrapper dir = newDirectory();\n      dir.createOutput(\"segments_0\", IOContext.DEFAULT).close();\n      IndexWriterConfig iwc = newIndexWriterConfig(new MockAnalyzer(random()));\n      int mode = i/2;\n      if (mode == 0) {\n        iwc.setOpenMode(OpenMode.CREATE);\n      } else if (mode == 1) {\n        iwc.setOpenMode(OpenMode.APPEND);\n      } else if (mode == 2) {\n        iwc.setOpenMode(OpenMode.CREATE_OR_APPEND);\n      }\n\n      if (VERBOSE) {\n        System.out.println(\"\\nTEST: i=\" + i);\n      }\n\n      try {\n        if ((i & 1) == 0) {\n          new IndexWriter(dir, iwc).close();\n        } else {\n          new IndexWriter(dir, iwc).rollback();\n        }\n        if (mode != 0) {\n          fail(\"expected exception\");\n        }\n      } catch (IOException ioe) {\n        // OpenMode.APPEND should throw an exception since no\n        // index exists:\n        if (mode == 0) {\n          // Unexpected\n          throw ioe;\n        }\n      }\n\n      if (VERBOSE) {\n        System.out.println(\"  at close: \" + Arrays.toString(dir.listAll()));\n      }\n\n      if (mode != 0) {\n        dir.setCheckIndexOnClose(false);\n      }\n      dir.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e19f6ad6759fbc831a41372e6b2b1303fbccd52b","date":1410985754,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testCorruptFirstCommit().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testCorruptFirstCommit().mjava","sourceNew":"  // LUCENE-2727/LUCENE-2812/LUCENE-4738:\n  public void testCorruptFirstCommit() throws Exception {\n    for(int i=0;i<6;i++) {\n      BaseDirectoryWrapper dir = newDirectory();\n\n      // Create a corrupt first commit:\n      dir.createOutput(\"segments_0\", IOContext.DEFAULT).close();\n\n      IndexWriterConfig iwc = newIndexWriterConfig(new MockAnalyzer(random()));\n      int mode = i/2;\n      if (mode == 0) {\n        iwc.setOpenMode(OpenMode.CREATE);\n      } else if (mode == 1) {\n        iwc.setOpenMode(OpenMode.APPEND);\n      } else if (mode == 2) {\n        iwc.setOpenMode(OpenMode.CREATE_OR_APPEND);\n      }\n\n      if (VERBOSE) {\n        System.out.println(\"\\nTEST: i=\" + i);\n      }\n\n      try {\n        if ((i & 1) == 0) {\n          new IndexWriter(dir, iwc).close();\n        } else {\n          new IndexWriter(dir, iwc).rollback();\n        }\n        if (mode != 0) {\n          fail(\"expected exception\");\n        }\n      } catch (IOException ioe) {\n        // OpenMode.APPEND should throw an exception since no\n        // index exists:\n        if (mode == 0) {\n          // Unexpected\n          throw ioe;\n        }\n      }\n\n      if (VERBOSE) {\n        System.out.println(\"  at close: \" + Arrays.toString(dir.listAll()));\n      }\n\n      if (mode != 0) {\n        dir.setCheckIndexOnClose(false);\n      }\n\n      if (dir instanceof MockDirectoryWrapper) {\n        MockDirectoryWrapper mdw = (MockDirectoryWrapper) dir;\n        String[] files = dir.listAll();\n        Arrays.sort(files);\n        if ((Arrays.equals(new String[] {\"segments_0\"}, files) ||\n             Arrays.equals(new String[] {\"segments_0\", \"write.lock\"}, files)) &&\n            mdw.didTryToDelete(\"segments_0\")) {\n          // This means virus checker blocked IW deleting the corrupt first commit\n          dir.setCheckIndexOnClose(false);\n        }\n      }\n\n      dir.close();\n    }\n  }\n\n","sourceOld":"  // LUCENE-2727/LUCENE-2812/LUCENE-4738:\n  public void testCorruptFirstCommit() throws Exception {\n    for(int i=0;i<6;i++) {\n      BaseDirectoryWrapper dir = newDirectory();\n\n      // Create a corrupt first commit:\n      dir.createOutput(\"segments_0\", IOContext.DEFAULT).close();\n\n      IndexWriterConfig iwc = newIndexWriterConfig(new MockAnalyzer(random()));\n      int mode = i/2;\n      if (mode == 0) {\n        iwc.setOpenMode(OpenMode.CREATE);\n      } else if (mode == 1) {\n        iwc.setOpenMode(OpenMode.APPEND);\n      } else if (mode == 2) {\n        iwc.setOpenMode(OpenMode.CREATE_OR_APPEND);\n      }\n\n      if (VERBOSE) {\n        System.out.println(\"\\nTEST: i=\" + i);\n      }\n\n      try {\n        if ((i & 1) == 0) {\n          new IndexWriter(dir, iwc).close();\n        } else {\n          new IndexWriter(dir, iwc).rollback();\n        }\n        if (mode != 0) {\n          fail(\"expected exception\");\n        }\n      } catch (IOException ioe) {\n        // OpenMode.APPEND should throw an exception since no\n        // index exists:\n        if (mode == 0) {\n          // Unexpected\n          throw ioe;\n        }\n      }\n\n      if (VERBOSE) {\n        System.out.println(\"  at close: \" + Arrays.toString(dir.listAll()));\n      }\n\n      if (mode != 0) {\n        dir.setCheckIndexOnClose(false);\n      }\n\n      if (dir instanceof MockDirectoryWrapper) {\n        MockDirectoryWrapper mdw = (MockDirectoryWrapper) dir;\n        if (Arrays.equals(new String[] {\"segments_0\"}, dir.listAll()) &&\n            mdw.didTryToDelete(\"segments_0\")) {\n          // This means virus checker blocked IW deleting the corrupt first commit\n          dir.setCheckIndexOnClose(false);\n        }\n      }\n\n      dir.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b2c4ebd55cd85880ea64684e0de8419b78898577","date":1430473306,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testCorruptFirstCommit().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testCorruptFirstCommit().mjava","sourceNew":"  // LUCENE-2727/LUCENE-2812/LUCENE-4738:\n  public void testCorruptFirstCommit() throws Exception {\n    for(int i=0;i<6;i++) {\n      BaseDirectoryWrapper dir = newDirectory();\n\n      // Create a corrupt first commit:\n      dir.createOutput(IndexFileNames.fileNameFromGeneration(IndexFileNames.PENDING_SEGMENTS,\n                                                             \"\",\n                                                             0), IOContext.DEFAULT).close();\n\n      IndexWriterConfig iwc = newIndexWriterConfig(new MockAnalyzer(random()));\n      int mode = i/2;\n      if (mode == 0) {\n        iwc.setOpenMode(OpenMode.CREATE);\n      } else if (mode == 1) {\n        iwc.setOpenMode(OpenMode.APPEND);\n      } else if (mode == 2) {\n        iwc.setOpenMode(OpenMode.CREATE_OR_APPEND);\n      }\n\n      if (VERBOSE) {\n        System.out.println(\"\\nTEST: i=\" + i);\n      }\n\n      try {\n        if ((i & 1) == 0) {\n          new IndexWriter(dir, iwc).close();\n        } else {\n          new IndexWriter(dir, iwc).rollback();\n        }\n      } catch (IOException ioe) {\n        // OpenMode.APPEND should throw an exception since no\n        // index exists:\n        if (mode == 0) {\n          // Unexpected\n          throw ioe;\n        }\n      }\n\n      if (VERBOSE) {\n        System.out.println(\"  at close: \" + Arrays.toString(dir.listAll()));\n      }\n\n      if (mode != 0) {\n        dir.setCheckIndexOnClose(false);\n      }\n\n      if (dir instanceof MockDirectoryWrapper) {\n        MockDirectoryWrapper mdw = (MockDirectoryWrapper) dir;\n        String[] files = dir.listAll();\n        Arrays.sort(files);\n        if ((Arrays.equals(new String[] {\"segments_0\"}, files) ||\n             Arrays.equals(new String[] {\"segments_0\", \"write.lock\"}, files)) &&\n            mdw.didTryToDelete(\"segments_0\")) {\n          // This means virus checker blocked IW deleting the corrupt first commit\n          dir.setCheckIndexOnClose(false);\n        }\n      }\n\n      dir.close();\n    }\n  }\n\n","sourceOld":"  // LUCENE-2727/LUCENE-2812/LUCENE-4738:\n  public void testCorruptFirstCommit() throws Exception {\n    for(int i=0;i<6;i++) {\n      BaseDirectoryWrapper dir = newDirectory();\n\n      // Create a corrupt first commit:\n      dir.createOutput(\"segments_0\", IOContext.DEFAULT).close();\n\n      IndexWriterConfig iwc = newIndexWriterConfig(new MockAnalyzer(random()));\n      int mode = i/2;\n      if (mode == 0) {\n        iwc.setOpenMode(OpenMode.CREATE);\n      } else if (mode == 1) {\n        iwc.setOpenMode(OpenMode.APPEND);\n      } else if (mode == 2) {\n        iwc.setOpenMode(OpenMode.CREATE_OR_APPEND);\n      }\n\n      if (VERBOSE) {\n        System.out.println(\"\\nTEST: i=\" + i);\n      }\n\n      try {\n        if ((i & 1) == 0) {\n          new IndexWriter(dir, iwc).close();\n        } else {\n          new IndexWriter(dir, iwc).rollback();\n        }\n        if (mode != 0) {\n          fail(\"expected exception\");\n        }\n      } catch (IOException ioe) {\n        // OpenMode.APPEND should throw an exception since no\n        // index exists:\n        if (mode == 0) {\n          // Unexpected\n          throw ioe;\n        }\n      }\n\n      if (VERBOSE) {\n        System.out.println(\"  at close: \" + Arrays.toString(dir.listAll()));\n      }\n\n      if (mode != 0) {\n        dir.setCheckIndexOnClose(false);\n      }\n\n      if (dir instanceof MockDirectoryWrapper) {\n        MockDirectoryWrapper mdw = (MockDirectoryWrapper) dir;\n        String[] files = dir.listAll();\n        Arrays.sort(files);\n        if ((Arrays.equals(new String[] {\"segments_0\"}, files) ||\n             Arrays.equals(new String[] {\"segments_0\", \"write.lock\"}, files)) &&\n            mdw.didTryToDelete(\"segments_0\")) {\n          // This means virus checker blocked IW deleting the corrupt first commit\n          dir.setCheckIndexOnClose(false);\n        }\n      }\n\n      dir.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6bfe104fc023fadc9e709f8d17403d2cc61133fe","date":1454446396,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testCorruptFirstCommit().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testCorruptFirstCommit().mjava","sourceNew":"  // LUCENE-2727/LUCENE-2812/LUCENE-4738:\n  public void testCorruptFirstCommit() throws Exception {\n    for(int i=0;i<6;i++) {\n      BaseDirectoryWrapper dir = newDirectory();\n\n      // Create a corrupt first commit:\n      dir.createOutput(IndexFileNames.fileNameFromGeneration(IndexFileNames.PENDING_SEGMENTS,\n                                                             \"\",\n                                                             0), IOContext.DEFAULT).close();\n\n      IndexWriterConfig iwc = newIndexWriterConfig(new MockAnalyzer(random()));\n      int mode = i/2;\n      if (mode == 0) {\n        iwc.setOpenMode(OpenMode.CREATE);\n      } else if (mode == 1) {\n        iwc.setOpenMode(OpenMode.APPEND);\n      } else if (mode == 2) {\n        iwc.setOpenMode(OpenMode.CREATE_OR_APPEND);\n      }\n\n      if (VERBOSE) {\n        System.out.println(\"\\nTEST: i=\" + i);\n      }\n\n      try {\n        if ((i & 1) == 0) {\n          new IndexWriter(dir, iwc).close();\n        } else {\n          new IndexWriter(dir, iwc).rollback();\n        }\n      } catch (IOException ioe) {\n        // OpenMode.APPEND should throw an exception since no\n        // index exists:\n        if (mode == 0) {\n          // Unexpected\n          throw ioe;\n        }\n      }\n\n      if (VERBOSE) {\n        System.out.println(\"  at close: \" + Arrays.toString(dir.listAll()));\n      }\n\n      if (mode != 0) {\n        dir.setCheckIndexOnClose(false);\n      }\n\n      dir.close();\n    }\n  }\n\n","sourceOld":"  // LUCENE-2727/LUCENE-2812/LUCENE-4738:\n  public void testCorruptFirstCommit() throws Exception {\n    for(int i=0;i<6;i++) {\n      BaseDirectoryWrapper dir = newDirectory();\n\n      // Create a corrupt first commit:\n      dir.createOutput(IndexFileNames.fileNameFromGeneration(IndexFileNames.PENDING_SEGMENTS,\n                                                             \"\",\n                                                             0), IOContext.DEFAULT).close();\n\n      IndexWriterConfig iwc = newIndexWriterConfig(new MockAnalyzer(random()));\n      int mode = i/2;\n      if (mode == 0) {\n        iwc.setOpenMode(OpenMode.CREATE);\n      } else if (mode == 1) {\n        iwc.setOpenMode(OpenMode.APPEND);\n      } else if (mode == 2) {\n        iwc.setOpenMode(OpenMode.CREATE_OR_APPEND);\n      }\n\n      if (VERBOSE) {\n        System.out.println(\"\\nTEST: i=\" + i);\n      }\n\n      try {\n        if ((i & 1) == 0) {\n          new IndexWriter(dir, iwc).close();\n        } else {\n          new IndexWriter(dir, iwc).rollback();\n        }\n      } catch (IOException ioe) {\n        // OpenMode.APPEND should throw an exception since no\n        // index exists:\n        if (mode == 0) {\n          // Unexpected\n          throw ioe;\n        }\n      }\n\n      if (VERBOSE) {\n        System.out.println(\"  at close: \" + Arrays.toString(dir.listAll()));\n      }\n\n      if (mode != 0) {\n        dir.setCheckIndexOnClose(false);\n      }\n\n      if (dir instanceof MockDirectoryWrapper) {\n        MockDirectoryWrapper mdw = (MockDirectoryWrapper) dir;\n        String[] files = dir.listAll();\n        Arrays.sort(files);\n        if ((Arrays.equals(new String[] {\"segments_0\"}, files) ||\n             Arrays.equals(new String[] {\"segments_0\", \"write.lock\"}, files)) &&\n            mdw.didTryToDelete(\"segments_0\")) {\n          // This means virus checker blocked IW deleting the corrupt first commit\n          dir.setCheckIndexOnClose(false);\n        }\n      }\n\n      dir.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b470f36a9372c97283360b1304eacbde22df6c0d","date":1454765175,"type":3,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testCorruptFirstCommit().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testCorruptFirstCommit().mjava","sourceNew":"  // LUCENE-2727/LUCENE-2812/LUCENE-4738:\n  public void testCorruptFirstCommit() throws Exception {\n    for(int i=0;i<6;i++) {\n      BaseDirectoryWrapper dir = newDirectory();\n\n      // Create a corrupt first commit:\n      dir.createOutput(IndexFileNames.fileNameFromGeneration(IndexFileNames.PENDING_SEGMENTS,\n                                                             \"\",\n                                                             0), IOContext.DEFAULT).close();\n\n      IndexWriterConfig iwc = newIndexWriterConfig(new MockAnalyzer(random()));\n      int mode = i/2;\n      if (mode == 0) {\n        iwc.setOpenMode(OpenMode.CREATE);\n      } else if (mode == 1) {\n        iwc.setOpenMode(OpenMode.APPEND);\n      } else if (mode == 2) {\n        iwc.setOpenMode(OpenMode.CREATE_OR_APPEND);\n      }\n\n      if (VERBOSE) {\n        System.out.println(\"\\nTEST: i=\" + i);\n      }\n\n      try {\n        if ((i & 1) == 0) {\n          new IndexWriter(dir, iwc).close();\n        } else {\n          new IndexWriter(dir, iwc).rollback();\n        }\n      } catch (IOException ioe) {\n        // OpenMode.APPEND should throw an exception since no\n        // index exists:\n        if (mode == 0) {\n          // Unexpected\n          throw ioe;\n        }\n      }\n\n      if (VERBOSE) {\n        System.out.println(\"  at close: \" + Arrays.toString(dir.listAll()));\n      }\n\n      if (mode != 0) {\n        dir.setCheckIndexOnClose(false);\n      }\n\n      dir.close();\n    }\n  }\n\n","sourceOld":"  // LUCENE-2727/LUCENE-2812/LUCENE-4738:\n  public void testCorruptFirstCommit() throws Exception {\n    for(int i=0;i<6;i++) {\n      BaseDirectoryWrapper dir = newDirectory();\n\n      // Create a corrupt first commit:\n      dir.createOutput(IndexFileNames.fileNameFromGeneration(IndexFileNames.PENDING_SEGMENTS,\n                                                             \"\",\n                                                             0), IOContext.DEFAULT).close();\n\n      IndexWriterConfig iwc = newIndexWriterConfig(new MockAnalyzer(random()));\n      int mode = i/2;\n      if (mode == 0) {\n        iwc.setOpenMode(OpenMode.CREATE);\n      } else if (mode == 1) {\n        iwc.setOpenMode(OpenMode.APPEND);\n      } else if (mode == 2) {\n        iwc.setOpenMode(OpenMode.CREATE_OR_APPEND);\n      }\n\n      if (VERBOSE) {\n        System.out.println(\"\\nTEST: i=\" + i);\n      }\n\n      try {\n        if ((i & 1) == 0) {\n          new IndexWriter(dir, iwc).close();\n        } else {\n          new IndexWriter(dir, iwc).rollback();\n        }\n      } catch (IOException ioe) {\n        // OpenMode.APPEND should throw an exception since no\n        // index exists:\n        if (mode == 0) {\n          // Unexpected\n          throw ioe;\n        }\n      }\n\n      if (VERBOSE) {\n        System.out.println(\"  at close: \" + Arrays.toString(dir.listAll()));\n      }\n\n      if (mode != 0) {\n        dir.setCheckIndexOnClose(false);\n      }\n\n      if (dir instanceof MockDirectoryWrapper) {\n        MockDirectoryWrapper mdw = (MockDirectoryWrapper) dir;\n        String[] files = dir.listAll();\n        Arrays.sort(files);\n        if ((Arrays.equals(new String[] {\"segments_0\"}, files) ||\n             Arrays.equals(new String[] {\"segments_0\", \"write.lock\"}, files)) &&\n            mdw.didTryToDelete(\"segments_0\")) {\n          // This means virus checker blocked IW deleting the corrupt first commit\n          dir.setCheckIndexOnClose(false);\n        }\n      }\n\n      dir.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1e6acbaae7af722f17204ceccf0f7db5753eccf3","date":1454775255,"type":3,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testCorruptFirstCommit().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testCorruptFirstCommit().mjava","sourceNew":"  // LUCENE-2727/LUCENE-2812/LUCENE-4738:\n  public void testCorruptFirstCommit() throws Exception {\n    for(int i=0;i<6;i++) {\n      BaseDirectoryWrapper dir = newDirectory();\n\n      // Create a corrupt first commit:\n      dir.createOutput(IndexFileNames.fileNameFromGeneration(IndexFileNames.PENDING_SEGMENTS,\n                                                             \"\",\n                                                             0), IOContext.DEFAULT).close();\n\n      IndexWriterConfig iwc = newIndexWriterConfig(new MockAnalyzer(random()));\n      int mode = i/2;\n      if (mode == 0) {\n        iwc.setOpenMode(OpenMode.CREATE);\n      } else if (mode == 1) {\n        iwc.setOpenMode(OpenMode.APPEND);\n      } else if (mode == 2) {\n        iwc.setOpenMode(OpenMode.CREATE_OR_APPEND);\n      }\n\n      if (VERBOSE) {\n        System.out.println(\"\\nTEST: i=\" + i);\n      }\n\n      try {\n        if ((i & 1) == 0) {\n          new IndexWriter(dir, iwc).close();\n        } else {\n          new IndexWriter(dir, iwc).rollback();\n        }\n      } catch (IOException ioe) {\n        // OpenMode.APPEND should throw an exception since no\n        // index exists:\n        if (mode == 0) {\n          // Unexpected\n          throw ioe;\n        }\n      }\n\n      if (VERBOSE) {\n        System.out.println(\"  at close: \" + Arrays.toString(dir.listAll()));\n      }\n\n      if (mode != 0) {\n        dir.setCheckIndexOnClose(false);\n      }\n\n      dir.close();\n    }\n  }\n\n","sourceOld":"  // LUCENE-2727/LUCENE-2812/LUCENE-4738:\n  public void testCorruptFirstCommit() throws Exception {\n    for(int i=0;i<6;i++) {\n      BaseDirectoryWrapper dir = newDirectory();\n\n      // Create a corrupt first commit:\n      dir.createOutput(IndexFileNames.fileNameFromGeneration(IndexFileNames.PENDING_SEGMENTS,\n                                                             \"\",\n                                                             0), IOContext.DEFAULT).close();\n\n      IndexWriterConfig iwc = newIndexWriterConfig(new MockAnalyzer(random()));\n      int mode = i/2;\n      if (mode == 0) {\n        iwc.setOpenMode(OpenMode.CREATE);\n      } else if (mode == 1) {\n        iwc.setOpenMode(OpenMode.APPEND);\n      } else if (mode == 2) {\n        iwc.setOpenMode(OpenMode.CREATE_OR_APPEND);\n      }\n\n      if (VERBOSE) {\n        System.out.println(\"\\nTEST: i=\" + i);\n      }\n\n      try {\n        if ((i & 1) == 0) {\n          new IndexWriter(dir, iwc).close();\n        } else {\n          new IndexWriter(dir, iwc).rollback();\n        }\n      } catch (IOException ioe) {\n        // OpenMode.APPEND should throw an exception since no\n        // index exists:\n        if (mode == 0) {\n          // Unexpected\n          throw ioe;\n        }\n      }\n\n      if (VERBOSE) {\n        System.out.println(\"  at close: \" + Arrays.toString(dir.listAll()));\n      }\n\n      if (mode != 0) {\n        dir.setCheckIndexOnClose(false);\n      }\n\n      if (dir instanceof MockDirectoryWrapper) {\n        MockDirectoryWrapper mdw = (MockDirectoryWrapper) dir;\n        String[] files = dir.listAll();\n        Arrays.sort(files);\n        if ((Arrays.equals(new String[] {\"segments_0\"}, files) ||\n             Arrays.equals(new String[] {\"segments_0\", \"write.lock\"}, files)) &&\n            mdw.didTryToDelete(\"segments_0\")) {\n          // This means virus checker blocked IW deleting the corrupt first commit\n          dir.setCheckIndexOnClose(false);\n        }\n      }\n\n      dir.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5a207d19eac354d649c3f0e2cce070017c78125e","date":1454776470,"type":3,"author":"Erick Erickson","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testCorruptFirstCommit().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testCorruptFirstCommit().mjava","sourceNew":"  // LUCENE-2727/LUCENE-2812/LUCENE-4738:\n  public void testCorruptFirstCommit() throws Exception {\n    for(int i=0;i<6;i++) {\n      BaseDirectoryWrapper dir = newDirectory();\n\n      // Create a corrupt first commit:\n      dir.createOutput(IndexFileNames.fileNameFromGeneration(IndexFileNames.PENDING_SEGMENTS,\n                                                             \"\",\n                                                             0), IOContext.DEFAULT).close();\n\n      IndexWriterConfig iwc = newIndexWriterConfig(new MockAnalyzer(random()));\n      int mode = i/2;\n      if (mode == 0) {\n        iwc.setOpenMode(OpenMode.CREATE);\n      } else if (mode == 1) {\n        iwc.setOpenMode(OpenMode.APPEND);\n      } else if (mode == 2) {\n        iwc.setOpenMode(OpenMode.CREATE_OR_APPEND);\n      }\n\n      if (VERBOSE) {\n        System.out.println(\"\\nTEST: i=\" + i);\n      }\n\n      try {\n        if ((i & 1) == 0) {\n          new IndexWriter(dir, iwc).close();\n        } else {\n          new IndexWriter(dir, iwc).rollback();\n        }\n      } catch (IOException ioe) {\n        // OpenMode.APPEND should throw an exception since no\n        // index exists:\n        if (mode == 0) {\n          // Unexpected\n          throw ioe;\n        }\n      }\n\n      if (VERBOSE) {\n        System.out.println(\"  at close: \" + Arrays.toString(dir.listAll()));\n      }\n\n      if (mode != 0) {\n        dir.setCheckIndexOnClose(false);\n      }\n\n      dir.close();\n    }\n  }\n\n","sourceOld":"  // LUCENE-2727/LUCENE-2812/LUCENE-4738:\n  public void testCorruptFirstCommit() throws Exception {\n    for(int i=0;i<6;i++) {\n      BaseDirectoryWrapper dir = newDirectory();\n\n      // Create a corrupt first commit:\n      dir.createOutput(IndexFileNames.fileNameFromGeneration(IndexFileNames.PENDING_SEGMENTS,\n                                                             \"\",\n                                                             0), IOContext.DEFAULT).close();\n\n      IndexWriterConfig iwc = newIndexWriterConfig(new MockAnalyzer(random()));\n      int mode = i/2;\n      if (mode == 0) {\n        iwc.setOpenMode(OpenMode.CREATE);\n      } else if (mode == 1) {\n        iwc.setOpenMode(OpenMode.APPEND);\n      } else if (mode == 2) {\n        iwc.setOpenMode(OpenMode.CREATE_OR_APPEND);\n      }\n\n      if (VERBOSE) {\n        System.out.println(\"\\nTEST: i=\" + i);\n      }\n\n      try {\n        if ((i & 1) == 0) {\n          new IndexWriter(dir, iwc).close();\n        } else {\n          new IndexWriter(dir, iwc).rollback();\n        }\n      } catch (IOException ioe) {\n        // OpenMode.APPEND should throw an exception since no\n        // index exists:\n        if (mode == 0) {\n          // Unexpected\n          throw ioe;\n        }\n      }\n\n      if (VERBOSE) {\n        System.out.println(\"  at close: \" + Arrays.toString(dir.listAll()));\n      }\n\n      if (mode != 0) {\n        dir.setCheckIndexOnClose(false);\n      }\n\n      if (dir instanceof MockDirectoryWrapper) {\n        MockDirectoryWrapper mdw = (MockDirectoryWrapper) dir;\n        String[] files = dir.listAll();\n        Arrays.sort(files);\n        if ((Arrays.equals(new String[] {\"segments_0\"}, files) ||\n             Arrays.equals(new String[] {\"segments_0\", \"write.lock\"}, files)) &&\n            mdw.didTryToDelete(\"segments_0\")) {\n          // This means virus checker blocked IW deleting the corrupt first commit\n          dir.setCheckIndexOnClose(false);\n        }\n      }\n\n      dir.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"5a207d19eac354d649c3f0e2cce070017c78125e":["b2c4ebd55cd85880ea64684e0de8419b78898577","b470f36a9372c97283360b1304eacbde22df6c0d"],"b2c4ebd55cd85880ea64684e0de8419b78898577":["e19f6ad6759fbc831a41372e6b2b1303fbccd52b"],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":["b2c4ebd55cd85880ea64684e0de8419b78898577","b470f36a9372c97283360b1304eacbde22df6c0d"],"b470f36a9372c97283360b1304eacbde22df6c0d":["b2c4ebd55cd85880ea64684e0de8419b78898577","6bfe104fc023fadc9e709f8d17403d2cc61133fe"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d0ef034a4f10871667ae75181537775ddcf8ade4":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"6bfe104fc023fadc9e709f8d17403d2cc61133fe":["b2c4ebd55cd85880ea64684e0de8419b78898577"],"e19f6ad6759fbc831a41372e6b2b1303fbccd52b":["a115a48ec36e765c943b95657fb72ce5e9813daa"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["30e0912f3a3069b115cfea44ff612c44d6906386"],"30e0912f3a3069b115cfea44ff612c44d6906386":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a115a48ec36e765c943b95657fb72ce5e9813daa":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5a207d19eac354d649c3f0e2cce070017c78125e"]},"commit2Childs":{"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"5a207d19eac354d649c3f0e2cce070017c78125e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b2c4ebd55cd85880ea64684e0de8419b78898577":["5a207d19eac354d649c3f0e2cce070017c78125e","1e6acbaae7af722f17204ceccf0f7db5753eccf3","b470f36a9372c97283360b1304eacbde22df6c0d","6bfe104fc023fadc9e709f8d17403d2cc61133fe"],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":[],"b470f36a9372c97283360b1304eacbde22df6c0d":["5a207d19eac354d649c3f0e2cce070017c78125e","1e6acbaae7af722f17204ceccf0f7db5753eccf3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["30e0912f3a3069b115cfea44ff612c44d6906386"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["a115a48ec36e765c943b95657fb72ce5e9813daa"],"6bfe104fc023fadc9e709f8d17403d2cc61133fe":["b470f36a9372c97283360b1304eacbde22df6c0d"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"e19f6ad6759fbc831a41372e6b2b1303fbccd52b":["b2c4ebd55cd85880ea64684e0de8419b78898577"],"30e0912f3a3069b115cfea44ff612c44d6906386":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"a115a48ec36e765c943b95657fb72ce5e9813daa":["e19f6ad6759fbc831a41372e6b2b1303fbccd52b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["1e6acbaae7af722f17204ceccf0f7db5753eccf3","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}