{"path":"lucene/src/test/org/apache/lucene/index/TestIndexReader#assertTermDocsCount(String,IndexReader,Term,int).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReader#assertTermDocsCount(String,IndexReader,Term,int).mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexReader#assertTermDocsCount(String,IndexReader,Term,int).mjava","sourceNew":"  private void assertTermDocsCount(String msg,\n                                     IndexReader reader,\n                                     Term term,\n                                     int expected)\n    throws IOException\n    {\n        TermDocs tdocs = null;\n\n        try {\n            tdocs = reader.termDocs(term);\n            assertNotNull(msg + \", null TermDocs\", tdocs);\n            int count = 0;\n            while(tdocs.next()) {\n                count++;\n            }\n            assertEquals(msg + \", count mismatch\", expected, count);\n\n        } finally {\n            if (tdocs != null)\n                tdocs.close();\n        }\n\n    }\n\n","sourceOld":"  private void assertTermDocsCount(String msg,\n                                     IndexReader reader,\n                                     Term term,\n                                     int expected)\n    throws IOException\n    {\n        TermDocs tdocs = null;\n\n        try {\n            tdocs = reader.termDocs(term);\n            assertNotNull(msg + \", null TermDocs\", tdocs);\n            int count = 0;\n            while(tdocs.next()) {\n                count++;\n            }\n            assertEquals(msg + \", count mismatch\", expected, count);\n\n        } finally {\n            if (tdocs != null)\n                tdocs.close();\n        }\n\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28427ef110c4c5bf5b4057731b83110bd1e13724","date":1276701452,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReader#assertTermDocsCount(String,IndexReader,Term,int).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReader#assertTermDocsCount(String,IndexReader,Term,int).mjava","sourceNew":"  private void assertTermDocsCount(String msg,\n                                     IndexReader reader,\n                                     Term term,\n                                     int expected)\n    throws IOException\n    {\n        DocsEnum tdocs = MultiFields.getTermDocsEnum(reader,\n                                                     MultiFields.getDeletedDocs(reader),\n                                                     term.field(),\n                                                     new BytesRef(term.text()));\n        int count = 0;\n        if (tdocs != null) {\n          while(tdocs.nextDoc()!= tdocs.NO_MORE_DOCS) {\n            count++;\n          }\n        }\n        assertEquals(msg + \", count mismatch\", expected, count);\n    }\n\n","sourceOld":"  private void assertTermDocsCount(String msg,\n                                     IndexReader reader,\n                                     Term term,\n                                     int expected)\n    throws IOException\n    {\n        TermDocs tdocs = null;\n\n        try {\n            tdocs = reader.termDocs(term);\n            assertNotNull(msg + \", null TermDocs\", tdocs);\n            int count = 0;\n            while(tdocs.next()) {\n                count++;\n            }\n            assertEquals(msg + \", count mismatch\", expected, count);\n\n        } finally {\n            if (tdocs != null)\n                tdocs.close();\n        }\n\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5f4e87790277826a2aea119328600dfb07761f32","date":1279827275,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReader#assertTermDocsCount(String,IndexReader,Term,int).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReader#assertTermDocsCount(String,IndexReader,Term,int).mjava","sourceNew":"  private void assertTermDocsCount(String msg,\n                                     IndexReader reader,\n                                     Term term,\n                                     int expected)\n    throws IOException\n    {\n        DocsEnum tdocs = MultiFields.getTermDocsEnum(reader,\n                                                     MultiFields.getDeletedDocs(reader),\n                                                     term.field(),\n                                                     new BytesRef(term.text()));\n        int count = 0;\n        if (tdocs != null) {\n          while(tdocs.nextDoc()!= tdocs.NO_MORE_DOCS) {\n            count++;\n          }\n        }\n        assertEquals(msg + \", count mismatch\", expected, count);\n    }\n\n","sourceOld":"  private void assertTermDocsCount(String msg,\n                                     IndexReader reader,\n                                     Term term,\n                                     int expected)\n    throws IOException\n    {\n        TermDocs tdocs = null;\n\n        try {\n            tdocs = reader.termDocs(term);\n            assertNotNull(msg + \", null TermDocs\", tdocs);\n            int count = 0;\n            while(tdocs.next()) {\n                count++;\n            }\n            assertEquals(msg + \", count mismatch\", expected, count);\n\n        } finally {\n            if (tdocs != null)\n                tdocs.close();\n        }\n\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a13a126d15299d5c1e117ea99ddae6fb0fa3f209","date":1291909583,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReader#assertTermDocsCount(String,IndexReader,Term,int).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReader#assertTermDocsCount(String,IndexReader,Term,int).mjava","sourceNew":"  private void assertTermDocsCount(String msg,\n                                     IndexReader reader,\n                                     Term term,\n                                     int expected)\n    throws IOException {\n        DocsEnum tdocs = MultiFields.getTermDocsEnum(reader,\n                                                     MultiFields.getDeletedDocs(reader),\n                                                     term.field(),\n                                                     new BytesRef(term.text()));\n        int count = 0;\n        if (tdocs != null) {\n          while(tdocs.nextDoc()!= DocIdSetIterator.NO_MORE_DOCS) {\n            count++;\n          }\n        }\n        assertEquals(msg + \", count mismatch\", expected, count);\n    }\n\n","sourceOld":"  private void assertTermDocsCount(String msg,\n                                     IndexReader reader,\n                                     Term term,\n                                     int expected)\n    throws IOException\n    {\n        DocsEnum tdocs = MultiFields.getTermDocsEnum(reader,\n                                                     MultiFields.getDeletedDocs(reader),\n                                                     term.field(),\n                                                     new BytesRef(term.text()));\n        int count = 0;\n        if (tdocs != null) {\n          while(tdocs.nextDoc()!= tdocs.NO_MORE_DOCS) {\n            count++;\n          }\n        }\n        assertEquals(msg + \", count mismatch\", expected, count);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab5cb6a74aefb78aa0569857970b9151dfe2e787","date":1292842407,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReader#assertTermDocsCount(String,IndexReader,Term,int).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReader#assertTermDocsCount(String,IndexReader,Term,int).mjava","sourceNew":"  private void assertTermDocsCount(String msg,\n                                     IndexReader reader,\n                                     Term term,\n                                     int expected)\n    throws IOException {\n        DocsEnum tdocs = MultiFields.getTermDocsEnum(reader,\n                                                     MultiFields.getDeletedDocs(reader),\n                                                     term.field(),\n                                                     new BytesRef(term.text()));\n        int count = 0;\n        if (tdocs != null) {\n          while(tdocs.nextDoc()!= DocIdSetIterator.NO_MORE_DOCS) {\n            count++;\n          }\n        }\n        assertEquals(msg + \", count mismatch\", expected, count);\n    }\n\n","sourceOld":"  private void assertTermDocsCount(String msg,\n                                     IndexReader reader,\n                                     Term term,\n                                     int expected)\n    throws IOException\n    {\n        DocsEnum tdocs = MultiFields.getTermDocsEnum(reader,\n                                                     MultiFields.getDeletedDocs(reader),\n                                                     term.field(),\n                                                     new BytesRef(term.text()));\n        int count = 0;\n        if (tdocs != null) {\n          while(tdocs.nextDoc()!= tdocs.NO_MORE_DOCS) {\n            count++;\n          }\n        }\n        assertEquals(msg + \", count mismatch\", expected, count);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReader#assertTermDocsCount(String,IndexReader,Term,int).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReader#assertTermDocsCount(String,IndexReader,Term,int).mjava","sourceNew":"  private void assertTermDocsCount(String msg,\n                                     IndexReader reader,\n                                     Term term,\n                                     int expected)\n    throws IOException {\n        DocsEnum tdocs = MultiFields.getTermDocsEnum(reader,\n                                                     MultiFields.getDeletedDocs(reader),\n                                                     term.field(),\n                                                     new BytesRef(term.text()));\n        int count = 0;\n        if (tdocs != null) {\n          while(tdocs.nextDoc()!= DocIdSetIterator.NO_MORE_DOCS) {\n            count++;\n          }\n        }\n        assertEquals(msg + \", count mismatch\", expected, count);\n    }\n\n","sourceOld":"  private void assertTermDocsCount(String msg,\n                                     IndexReader reader,\n                                     Term term,\n                                     int expected)\n    throws IOException\n    {\n        DocsEnum tdocs = MultiFields.getTermDocsEnum(reader,\n                                                     MultiFields.getDeletedDocs(reader),\n                                                     term.field(),\n                                                     new BytesRef(term.text()));\n        int count = 0;\n        if (tdocs != null) {\n          while(tdocs.nextDoc()!= tdocs.NO_MORE_DOCS) {\n            count++;\n          }\n        }\n        assertEquals(msg + \", count mismatch\", expected, count);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ff6fd241dc6610f7f81b62e3ba4cedf105939623","date":1307331653,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReader#assertTermDocsCount(String,IndexReader,Term,int).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReader#assertTermDocsCount(String,IndexReader,Term,int).mjava","sourceNew":"  static void assertTermDocsCount(String msg,\n                                     IndexReader reader,\n                                     Term term,\n                                     int expected)\n    throws IOException {\n        DocsEnum tdocs = MultiFields.getTermDocsEnum(reader,\n                                                     MultiFields.getDeletedDocs(reader),\n                                                     term.field(),\n                                                     new BytesRef(term.text()));\n        int count = 0;\n        if (tdocs != null) {\n          while(tdocs.nextDoc()!= DocIdSetIterator.NO_MORE_DOCS) {\n            count++;\n          }\n        }\n        assertEquals(msg + \", count mismatch\", expected, count);\n    }\n\n","sourceOld":"  private void assertTermDocsCount(String msg,\n                                     IndexReader reader,\n                                     Term term,\n                                     int expected)\n    throws IOException {\n        DocsEnum tdocs = MultiFields.getTermDocsEnum(reader,\n                                                     MultiFields.getDeletedDocs(reader),\n                                                     term.field(),\n                                                     new BytesRef(term.text()));\n        int count = 0;\n        if (tdocs != null) {\n          while(tdocs.nextDoc()!= DocIdSetIterator.NO_MORE_DOCS) {\n            count++;\n          }\n        }\n        assertEquals(msg + \", count mismatch\", expected, count);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"79c2cb24929f2649a8875fb629086171f914d5ce","date":1307332717,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReader#assertTermDocsCount(String,IndexReader,Term,int).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReader#assertTermDocsCount(String,IndexReader,Term,int).mjava","sourceNew":"  static void assertTermDocsCount(String msg,\n                                     IndexReader reader,\n                                     Term term,\n                                     int expected)\n    throws IOException {\n        DocsEnum tdocs = MultiFields.getTermDocsEnum(reader,\n                                                     MultiFields.getDeletedDocs(reader),\n                                                     term.field(),\n                                                     new BytesRef(term.text()));\n        int count = 0;\n        if (tdocs != null) {\n          while(tdocs.nextDoc()!= DocIdSetIterator.NO_MORE_DOCS) {\n            count++;\n          }\n        }\n        assertEquals(msg + \", count mismatch\", expected, count);\n    }\n\n","sourceOld":"  private void assertTermDocsCount(String msg,\n                                     IndexReader reader,\n                                     Term term,\n                                     int expected)\n    throws IOException {\n        DocsEnum tdocs = MultiFields.getTermDocsEnum(reader,\n                                                     MultiFields.getDeletedDocs(reader),\n                                                     term.field(),\n                                                     new BytesRef(term.text()));\n        int count = 0;\n        if (tdocs != null) {\n          while(tdocs.nextDoc()!= DocIdSetIterator.NO_MORE_DOCS) {\n            count++;\n          }\n        }\n        assertEquals(msg + \", count mismatch\", expected, count);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"77cf4379b2824f6ea34b091c495d6e95c38ff9e2","date":1307610475,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReader#assertTermDocsCount(String,IndexReader,Term,int).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReader#assertTermDocsCount(String,IndexReader,Term,int).mjava","sourceNew":"  static void assertTermDocsCount(String msg,\n                                     IndexReader reader,\n                                     Term term,\n                                     int expected)\n    throws IOException {\n        DocsEnum tdocs = MultiFields.getTermDocsEnum(reader,\n                                                     MultiFields.getDeletedDocs(reader),\n                                                     term.field(),\n                                                     new BytesRef(term.text()));\n        int count = 0;\n        if (tdocs != null) {\n          while(tdocs.nextDoc()!= DocIdSetIterator.NO_MORE_DOCS) {\n            count++;\n          }\n        }\n        assertEquals(msg + \", count mismatch\", expected, count);\n    }\n\n","sourceOld":"  private void assertTermDocsCount(String msg,\n                                     IndexReader reader,\n                                     Term term,\n                                     int expected)\n    throws IOException {\n        DocsEnum tdocs = MultiFields.getTermDocsEnum(reader,\n                                                     MultiFields.getDeletedDocs(reader),\n                                                     term.field(),\n                                                     new BytesRef(term.text()));\n        int count = 0;\n        if (tdocs != null) {\n          while(tdocs.nextDoc()!= DocIdSetIterator.NO_MORE_DOCS) {\n            count++;\n          }\n        }\n        assertEquals(msg + \", count mismatch\", expected, count);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e7bd246bb7bc35ac22edfee9157e034dfc4e65eb","date":1309960478,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReader#assertTermDocsCount(String,IndexReader,Term,int).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReader#assertTermDocsCount(String,IndexReader,Term,int).mjava","sourceNew":"  static void assertTermDocsCount(String msg,\n                                     IndexReader reader,\n                                     Term term,\n                                     int expected)\n    throws IOException {\n        DocsEnum tdocs = MultiFields.getTermDocsEnum(reader,\n                                                     MultiFields.getLiveDocs(reader),\n                                                     term.field(),\n                                                     new BytesRef(term.text()));\n        int count = 0;\n        if (tdocs != null) {\n          while(tdocs.nextDoc()!= DocIdSetIterator.NO_MORE_DOCS) {\n            count++;\n          }\n        }\n        assertEquals(msg + \", count mismatch\", expected, count);\n    }\n\n","sourceOld":"  static void assertTermDocsCount(String msg,\n                                     IndexReader reader,\n                                     Term term,\n                                     int expected)\n    throws IOException {\n        DocsEnum tdocs = MultiFields.getTermDocsEnum(reader,\n                                                     MultiFields.getDeletedDocs(reader),\n                                                     term.field(),\n                                                     new BytesRef(term.text()));\n        int count = 0;\n        if (tdocs != null) {\n          while(tdocs.nextDoc()!= DocIdSetIterator.NO_MORE_DOCS) {\n            count++;\n          }\n        }\n        assertEquals(msg + \", count mismatch\", expected, count);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"817d8435e9135b756f08ce6710ab0baac51bdf88","date":1309986993,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReader#assertTermDocsCount(String,IndexReader,Term,int).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReader#assertTermDocsCount(String,IndexReader,Term,int).mjava","sourceNew":"  static void assertTermDocsCount(String msg,\n                                     IndexReader reader,\n                                     Term term,\n                                     int expected)\n    throws IOException {\n        DocsEnum tdocs = MultiFields.getTermDocsEnum(reader,\n                                                     MultiFields.getLiveDocs(reader),\n                                                     term.field(),\n                                                     new BytesRef(term.text()));\n        int count = 0;\n        if (tdocs != null) {\n          while(tdocs.nextDoc()!= DocIdSetIterator.NO_MORE_DOCS) {\n            count++;\n          }\n        }\n        assertEquals(msg + \", count mismatch\", expected, count);\n    }\n\n","sourceOld":"  static void assertTermDocsCount(String msg,\n                                     IndexReader reader,\n                                     Term term,\n                                     int expected)\n    throws IOException {\n        DocsEnum tdocs = MultiFields.getTermDocsEnum(reader,\n                                                     MultiFields.getDeletedDocs(reader),\n                                                     term.field(),\n                                                     new BytesRef(term.text()));\n        int count = 0;\n        if (tdocs != null) {\n          while(tdocs.nextDoc()!= DocIdSetIterator.NO_MORE_DOCS) {\n            count++;\n          }\n        }\n        assertEquals(msg + \", count mismatch\", expected, count);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d083e83f225b11e5fdd900e83d26ddb385b6955c","date":1310029438,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReader#assertTermDocsCount(String,IndexReader,Term,int).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReader#assertTermDocsCount(String,IndexReader,Term,int).mjava","sourceNew":"  static void assertTermDocsCount(String msg,\n                                     IndexReader reader,\n                                     Term term,\n                                     int expected)\n    throws IOException {\n        DocsEnum tdocs = MultiFields.getTermDocsEnum(reader,\n                                                     MultiFields.getLiveDocs(reader),\n                                                     term.field(),\n                                                     new BytesRef(term.text()));\n        int count = 0;\n        if (tdocs != null) {\n          while(tdocs.nextDoc()!= DocIdSetIterator.NO_MORE_DOCS) {\n            count++;\n          }\n        }\n        assertEquals(msg + \", count mismatch\", expected, count);\n    }\n\n","sourceOld":"  static void assertTermDocsCount(String msg,\n                                     IndexReader reader,\n                                     Term term,\n                                     int expected)\n    throws IOException {\n        DocsEnum tdocs = MultiFields.getTermDocsEnum(reader,\n                                                     MultiFields.getDeletedDocs(reader),\n                                                     term.field(),\n                                                     new BytesRef(term.text()));\n        int count = 0;\n        if (tdocs != null) {\n          while(tdocs.nextDoc()!= DocIdSetIterator.NO_MORE_DOCS) {\n            count++;\n          }\n        }\n        assertEquals(msg + \", count mismatch\", expected, count);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"872cff1d3a554e0cd64014cd97f88d3002b0f491","date":1323024658,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReader#assertTermDocsCount(String,IndexReader,Term,int).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReader#assertTermDocsCount(String,IndexReader,Term,int).mjava","sourceNew":"  static void assertTermDocsCount(String msg,\n                                     IndexReader reader,\n                                     Term term,\n                                     int expected)\n    throws IOException {\n    DocsEnum tdocs = _TestUtil.docs(random, reader,\n                                    term.field(),\n                                    new BytesRef(term.text()),\n                                    MultiFields.getLiveDocs(reader),\n                                    null,\n                                    false);\n    int count = 0;\n    if (tdocs != null) {\n      while(tdocs.nextDoc()!= DocIdSetIterator.NO_MORE_DOCS) {\n        count++;\n      }\n    }\n    assertEquals(msg + \", count mismatch\", expected, count);\n  }\n\n","sourceOld":"  static void assertTermDocsCount(String msg,\n                                     IndexReader reader,\n                                     Term term,\n                                     int expected)\n    throws IOException {\n        DocsEnum tdocs = MultiFields.getTermDocsEnum(reader,\n                                                     MultiFields.getLiveDocs(reader),\n                                                     term.field(),\n                                                     new BytesRef(term.text()));\n        int count = 0;\n        if (tdocs != null) {\n          while(tdocs.nextDoc()!= DocIdSetIterator.NO_MORE_DOCS) {\n            count++;\n          }\n        }\n        assertEquals(msg + \", count mismatch\", expected, count);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b65b350ca9588f9fc76ce7d6804160d06c45ff42","date":1323026297,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReader#assertTermDocsCount(String,IndexReader,Term,int).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReader#assertTermDocsCount(String,IndexReader,Term,int).mjava","sourceNew":"  static void assertTermDocsCount(String msg,\n                                     IndexReader reader,\n                                     Term term,\n                                     int expected)\n    throws IOException {\n    DocsEnum tdocs = _TestUtil.docs(random, reader,\n                                    term.field(),\n                                    new BytesRef(term.text()),\n                                    MultiFields.getLiveDocs(reader),\n                                    null,\n                                    false);\n    int count = 0;\n    if (tdocs != null) {\n      while(tdocs.nextDoc()!= DocIdSetIterator.NO_MORE_DOCS) {\n        count++;\n      }\n    }\n    assertEquals(msg + \", count mismatch\", expected, count);\n  }\n\n","sourceOld":"  static void assertTermDocsCount(String msg,\n                                     IndexReader reader,\n                                     Term term,\n                                     int expected)\n    throws IOException {\n        DocsEnum tdocs = MultiFields.getTermDocsEnum(reader,\n                                                     MultiFields.getLiveDocs(reader),\n                                                     term.field(),\n                                                     new BytesRef(term.text()));\n        int count = 0;\n        if (tdocs != null) {\n          while(tdocs.nextDoc()!= DocIdSetIterator.NO_MORE_DOCS) {\n            count++;\n          }\n        }\n        assertEquals(msg + \", count mismatch\", expected, count);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexReader#assertTermDocsCount(String,IndexReader,Term,int).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReader#assertTermDocsCount(String,IndexReader,Term,int).mjava","sourceNew":"  static void assertTermDocsCount(String msg,\n                                     IndexReader reader,\n                                     Term term,\n                                     int expected)\n    throws IOException {\n    DocsEnum tdocs = _TestUtil.docs(random, reader,\n                                    term.field(),\n                                    new BytesRef(term.text()),\n                                    MultiFields.getLiveDocs(reader),\n                                    null,\n                                    false);\n    int count = 0;\n    if (tdocs != null) {\n      while(tdocs.nextDoc()!= DocIdSetIterator.NO_MORE_DOCS) {\n        count++;\n      }\n    }\n    assertEquals(msg + \", count mismatch\", expected, count);\n  }\n\n","sourceOld":"  static void assertTermDocsCount(String msg,\n                                     IndexReader reader,\n                                     Term term,\n                                     int expected)\n    throws IOException {\n    DocsEnum tdocs = _TestUtil.docs(random, reader,\n                                    term.field(),\n                                    new BytesRef(term.text()),\n                                    MultiFields.getLiveDocs(reader),\n                                    null,\n                                    false);\n    int count = 0;\n    if (tdocs != null) {\n      while(tdocs.nextDoc()!= DocIdSetIterator.NO_MORE_DOCS) {\n        count++;\n      }\n    }\n    assertEquals(msg + \", count mismatch\", expected, count);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a13a126d15299d5c1e117ea99ddae6fb0fa3f209":["28427ef110c4c5bf5b4057731b83110bd1e13724"],"ff6fd241dc6610f7f81b62e3ba4cedf105939623":["a13a126d15299d5c1e117ea99ddae6fb0fa3f209"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["872cff1d3a554e0cd64014cd97f88d3002b0f491"],"e7bd246bb7bc35ac22edfee9157e034dfc4e65eb":["ff6fd241dc6610f7f81b62e3ba4cedf105939623"],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":["28427ef110c4c5bf5b4057731b83110bd1e13724","a13a126d15299d5c1e117ea99ddae6fb0fa3f209"],"872cff1d3a554e0cd64014cd97f88d3002b0f491":["e7bd246bb7bc35ac22edfee9157e034dfc4e65eb"],"5f4e87790277826a2aea119328600dfb07761f32":["9454a6510e2db155fb01faa5c049b06ece95fab9","28427ef110c4c5bf5b4057731b83110bd1e13724"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["5f4e87790277826a2aea119328600dfb07761f32","a13a126d15299d5c1e117ea99ddae6fb0fa3f209"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":["ff6fd241dc6610f7f81b62e3ba4cedf105939623","e7bd246bb7bc35ac22edfee9157e034dfc4e65eb"],"817d8435e9135b756f08ce6710ab0baac51bdf88":["79c2cb24929f2649a8875fb629086171f914d5ce","e7bd246bb7bc35ac22edfee9157e034dfc4e65eb"],"b65b350ca9588f9fc76ce7d6804160d06c45ff42":["e7bd246bb7bc35ac22edfee9157e034dfc4e65eb","872cff1d3a554e0cd64014cd97f88d3002b0f491"],"79c2cb24929f2649a8875fb629086171f914d5ce":["a13a126d15299d5c1e117ea99ddae6fb0fa3f209","ff6fd241dc6610f7f81b62e3ba4cedf105939623"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"28427ef110c4c5bf5b4057731b83110bd1e13724":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"77cf4379b2824f6ea34b091c495d6e95c38ff9e2":["ab5cb6a74aefb78aa0569857970b9151dfe2e787","ff6fd241dc6610f7f81b62e3ba4cedf105939623"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a13a126d15299d5c1e117ea99ddae6fb0fa3f209":["ff6fd241dc6610f7f81b62e3ba4cedf105939623","ab5cb6a74aefb78aa0569857970b9151dfe2e787","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","79c2cb24929f2649a8875fb629086171f914d5ce"],"ff6fd241dc6610f7f81b62e3ba4cedf105939623":["e7bd246bb7bc35ac22edfee9157e034dfc4e65eb","d083e83f225b11e5fdd900e83d26ddb385b6955c","79c2cb24929f2649a8875fb629086171f914d5ce","77cf4379b2824f6ea34b091c495d6e95c38ff9e2"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e7bd246bb7bc35ac22edfee9157e034dfc4e65eb":["872cff1d3a554e0cd64014cd97f88d3002b0f491","d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88","b65b350ca9588f9fc76ce7d6804160d06c45ff42"],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":["77cf4379b2824f6ea34b091c495d6e95c38ff9e2"],"872cff1d3a554e0cd64014cd97f88d3002b0f491":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","b65b350ca9588f9fc76ce7d6804160d06c45ff42"],"5f4e87790277826a2aea119328600dfb07761f32":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"d083e83f225b11e5fdd900e83d26ddb385b6955c":[],"817d8435e9135b756f08ce6710ab0baac51bdf88":[],"79c2cb24929f2649a8875fb629086171f914d5ce":["817d8435e9135b756f08ce6710ab0baac51bdf88"],"b65b350ca9588f9fc76ce7d6804160d06c45ff42":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"28427ef110c4c5bf5b4057731b83110bd1e13724":["a13a126d15299d5c1e117ea99ddae6fb0fa3f209","ab5cb6a74aefb78aa0569857970b9151dfe2e787","5f4e87790277826a2aea119328600dfb07761f32"],"77cf4379b2824f6ea34b091c495d6e95c38ff9e2":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["5f4e87790277826a2aea119328600dfb07761f32","28427ef110c4c5bf5b4057731b83110bd1e13724"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88","b65b350ca9588f9fc76ce7d6804160d06c45ff42","77cf4379b2824f6ea34b091c495d6e95c38ff9e2","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}