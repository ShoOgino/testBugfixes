{"path":"contrib/spellchecker/src/java/org/apache/lucene/search/spell/LuceneDictionary.LuceneIterator#LuceneIterator().mjava","commits":[{"id":"da63b3051a3d2a355b6ad088b8ca31f068790813","date":1115339168,"type":0,"author":"Erik Hatcher","isMerge":false,"pathNew":"contrib/spellchecker/src/java/org/apache/lucene/search/spell/LuceneDictionary.LuceneIterator#LuceneIterator().mjava","pathOld":"/dev/null","sourceNew":"    public LuceneIterator() {\n      try {\n        termEnum = reader.terms(new Term(field, \"\"));\n      } catch (IOException ex) {\n        ex.printStackTrace();\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f372ce30b98339ec7deae785a29a96d2d3c07b12","date":1150609646,"type":3,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"contrib/spellchecker/src/java/org/apache/lucene/search/spell/LuceneDictionary.LuceneIterator#LuceneIterator().mjava","pathOld":"contrib/spellchecker/src/java/org/apache/lucene/search/spell/LuceneDictionary.LuceneIterator#LuceneIterator().mjava","sourceNew":"    LuceneIterator() {\n      try {\n        termEnum = reader.terms(new Term(field, \"\"));\n      } catch (IOException e) {\n        e.printStackTrace();\n      }\n    }\n\n","sourceOld":"    public LuceneIterator() {\n      try {\n        termEnum = reader.terms(new Term(field, \"\"));\n      } catch (IOException ex) {\n        ex.printStackTrace();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"96308b901685e8ec12a3856f788a7d9d98c22e50","date":1180177598,"type":3,"author":"Daniel Naber","isMerge":false,"pathNew":"contrib/spellchecker/src/java/org/apache/lucene/search/spell/LuceneDictionary.LuceneIterator#LuceneIterator().mjava","pathOld":"contrib/spellchecker/src/java/org/apache/lucene/search/spell/LuceneDictionary.LuceneIterator#LuceneIterator().mjava","sourceNew":"    LuceneIterator() {\n      try {\n        termEnum = reader.terms(new Term(field, \"\"));\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    }\n\n","sourceOld":"    LuceneIterator() {\n      try {\n        termEnum = reader.terms(new Term(field, \"\"));\n      } catch (IOException e) {\n        e.printStackTrace();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9d73678020862536617f065bb3d28a71d8c4020c","date":1219142439,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/spellchecker/src/java/org/apache/lucene/search/spell/LuceneDictionary.LuceneIterator#LuceneIterator().mjava","pathOld":"contrib/spellchecker/src/java/org/apache/lucene/search/spell/LuceneDictionary.LuceneIterator#LuceneIterator().mjava","sourceNew":"    LuceneIterator() {\n      try {\n        termEnum = reader.terms(new Term(field));\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    }\n\n","sourceOld":"    LuceneIterator() {\n      try {\n        termEnum = reader.terms(new Term(field, \"\"));\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/spellchecker/src/java/org/apache/lucene/search/spell/LuceneDictionary.LuceneIterator#LuceneIterator().mjava","pathOld":"contrib/spellchecker/src/java/org/apache/lucene/search/spell/LuceneDictionary.LuceneIterator#LuceneIterator().mjava","sourceNew":"    LuceneIterator() {\n      try {\n        termEnum = reader.terms(new Term(field));\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    }\n\n","sourceOld":"    LuceneIterator() {\n      try {\n        termEnum = reader.terms(new Term(field));\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f372ce30b98339ec7deae785a29a96d2d3c07b12":["da63b3051a3d2a355b6ad088b8ca31f068790813"],"da63b3051a3d2a355b6ad088b8ca31f068790813":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"96308b901685e8ec12a3856f788a7d9d98c22e50":["f372ce30b98339ec7deae785a29a96d2d3c07b12"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["9d73678020862536617f065bb3d28a71d8c4020c"],"9d73678020862536617f065bb3d28a71d8c4020c":["96308b901685e8ec12a3856f788a7d9d98c22e50"]},"commit2Childs":{"f372ce30b98339ec7deae785a29a96d2d3c07b12":["96308b901685e8ec12a3856f788a7d9d98c22e50"],"da63b3051a3d2a355b6ad088b8ca31f068790813":["f372ce30b98339ec7deae785a29a96d2d3c07b12"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["da63b3051a3d2a355b6ad088b8ca31f068790813"],"96308b901685e8ec12a3856f788a7d9d98c22e50":["9d73678020862536617f065bb3d28a71d8c4020c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9d73678020862536617f065bb3d28a71d8c4020c":["9454a6510e2db155fb01faa5c049b06ece95fab9"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}