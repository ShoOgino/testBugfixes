{"path":"lucene/core/src/java/org/apache/lucene/search/IndexSearcher#search(Query,int,Sort).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/IndexSearcher#search(Query,int,Sort).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/IndexSearcher#search(Query,int,Sort).mjava","sourceNew":"  /**\n   * Search implementation with arbitrary sorting and no filter.\n   * @param query The query to search for\n   * @param n Return only the top n results\n   * @param sort The {@link org.apache.lucene.search.Sort} object\n   * @return The top docs, sorted according to the supplied {@link org.apache.lucene.search.Sort} instance\n   * @throws IOException\n   */\n  public TopFieldDocs search(Query query, int n,\n                             Sort sort) throws IOException {\n    return search(createNormalizedWeight(query), n, sort);\n  }\n\n","sourceOld":"  /**\n   * Search implementation with arbitrary sorting and no filter.\n   * @param query The query to search for\n   * @param n Return only the top n results\n   * @param sort The {@link org.apache.lucene.search.Sort} object\n   * @return The top docs, sorted according to the supplied {@link org.apache.lucene.search.Sort} instance\n   * @throws IOException\n   */\n  public TopFieldDocs search(Query query, int n,\n                             Sort sort) throws IOException {\n    return search(createNormalizedWeight(query), n, sort);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fb02351ae2b114dd41585916d1e35fb2cff98fb0","date":1337171337,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/IndexSearcher#search(Query,int,Sort).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/IndexSearcher#search(Query,int,Sort).mjava","sourceNew":"  /**\n   * Search implementation with arbitrary sorting and no filter.\n   * @param query The query to search for\n   * @param n Return only the top n results\n   * @param sort The {@link org.apache.lucene.search.Sort} object\n   * @return The top docs, sorted according to the supplied {@link org.apache.lucene.search.Sort} instance\n   * @throws IOException\n   */\n  public TopFieldDocs search(Query query, int n,\n                             Sort sort) throws IOException {\n    return search(createNormalizedWeight(query), n, sort, false, false);\n  }\n\n","sourceOld":"  /**\n   * Search implementation with arbitrary sorting and no filter.\n   * @param query The query to search for\n   * @param n Return only the top n results\n   * @param sort The {@link org.apache.lucene.search.Sort} object\n   * @return The top docs, sorted according to the supplied {@link org.apache.lucene.search.Sort} instance\n   * @throws IOException\n   */\n  public TopFieldDocs search(Query query, int n,\n                             Sort sort) throws IOException {\n    return search(createNormalizedWeight(query), n, sort);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ef0d8a69209261514c5739c770bba706c2308450","date":1337607597,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/IndexSearcher#search(Query,int,Sort).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/IndexSearcher#search(Query,int,Sort).mjava","sourceNew":"  /**\n   * Search implementation with arbitrary sorting and no filter.\n   * @param query The query to search for\n   * @param n Return only the top n results\n   * @param sort The {@link org.apache.lucene.search.Sort} object\n   * @return The top docs, sorted according to the supplied {@link org.apache.lucene.search.Sort} instance\n   * @throws IOException\n   */\n  public TopFieldDocs search(Query query, int n,\n                             Sort sort) throws IOException {\n    return search(createNormalizedWeight(query), n, sort, false, false);\n  }\n\n","sourceOld":"  /**\n   * Search implementation with arbitrary sorting and no filter.\n   * @param query The query to search for\n   * @param n Return only the top n results\n   * @param sort The {@link org.apache.lucene.search.Sort} object\n   * @return The top docs, sorted according to the supplied {@link org.apache.lucene.search.Sort} instance\n   * @throws IOException\n   */\n  public TopFieldDocs search(Query query, int n,\n                             Sort sort) throws IOException {\n    return search(createNormalizedWeight(query), n, sort);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069","date":1348430063,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/IndexSearcher#search(Query,int,Sort).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/IndexSearcher#search(Query,int,Sort).mjava","sourceNew":"  /**\n   * Search implementation with arbitrary sorting and no filter.\n   * @param query The query to search for\n   * @param n Return only the top n results\n   * @param sort The {@link org.apache.lucene.search.Sort} object\n   * @return The top docs, sorted according to the supplied {@link org.apache.lucene.search.Sort} instance\n   * @throws IOException if there is a low-level I/O error\n   */\n  public TopFieldDocs search(Query query, int n,\n                             Sort sort) throws IOException {\n    return search(createNormalizedWeight(query), n, sort, false, false);\n  }\n\n","sourceOld":"  /**\n   * Search implementation with arbitrary sorting and no filter.\n   * @param query The query to search for\n   * @param n Return only the top n results\n   * @param sort The {@link org.apache.lucene.search.Sort} object\n   * @return The top docs, sorted according to the supplied {@link org.apache.lucene.search.Sort} instance\n   * @throws IOException\n   */\n  public TopFieldDocs search(Query query, int n,\n                             Sort sort) throws IOException {\n    return search(createNormalizedWeight(query), n, sort, false, false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fb17639909a369c1e64866842e5c213440acc17e","date":1423238093,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/IndexSearcher#search(Query,int,Sort).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/IndexSearcher#search(Query,int,Sort).mjava","sourceNew":"  /**\n   * Search implementation with arbitrary sorting and no filter.\n   * @param query The query to search for\n   * @param n Return only the top n results\n   * @param sort The {@link org.apache.lucene.search.Sort} object\n   * @return The top docs, sorted according to the supplied {@link org.apache.lucene.search.Sort} instance\n   * @throws IOException if there is a low-level I/O error\n   */\n  public TopFieldDocs search(Query query, int n,\n                             Sort sort) throws IOException {\n    return search(query, null, n, sort, false, false);\n  }\n\n","sourceOld":"  /**\n   * Search implementation with arbitrary sorting and no filter.\n   * @param query The query to search for\n   * @param n Return only the top n results\n   * @param sort The {@link org.apache.lucene.search.Sort} object\n   * @return The top docs, sorted according to the supplied {@link org.apache.lucene.search.Sort} instance\n   * @throws IOException if there is a low-level I/O error\n   */\n  public TopFieldDocs search(Query query, int n,\n                             Sort sort) throws IOException {\n    return search(createNormalizedWeight(query), n, sort, false, false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f8ec642b0195d666cf3b5a6a6c2a80bdd3b756bc","date":1424799790,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/IndexSearcher#search(Query,int,Sort).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/IndexSearcher#search(Query,int,Sort).mjava","sourceNew":"  /**\n   * Search implementation with arbitrary sorting.\n   * @param query The query to search for\n   * @param n Return only the top n results\n   * @param sort The {@link org.apache.lucene.search.Sort} object\n   * @return The top docs, sorted according to the supplied {@link org.apache.lucene.search.Sort} instance\n   * @throws IOException if there is a low-level I/O error\n   */\n  public TopFieldDocs search(Query query, int n, Sort sort) throws IOException {\n    return searchAfter(null, query, n, sort, false, false);\n  }\n\n","sourceOld":"  /**\n   * Search implementation with arbitrary sorting and no filter.\n   * @param query The query to search for\n   * @param n Return only the top n results\n   * @param sort The {@link org.apache.lucene.search.Sort} object\n   * @return The top docs, sorted according to the supplied {@link org.apache.lucene.search.Sort} instance\n   * @throws IOException if there is a low-level I/O error\n   */\n  public TopFieldDocs search(Query query, int n,\n                             Sort sort) throws IOException {\n    return search(query, null, n, sort, false, false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"81fff83bdb893c1471efd78f6a9a3ce4f98120b9","date":1531895937,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/IndexSearcher#search(Query,int,Sort).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/IndexSearcher#search(Query,int,Sort).mjava","sourceNew":"  /**\n   * Search implementation with arbitrary sorting.\n   * @param query The query to search for\n   * @param n Return only the top n results\n   * @param sort The {@link org.apache.lucene.search.Sort} object\n   * @return The top docs, sorted according to the supplied {@link org.apache.lucene.search.Sort} instance\n   * @throws IOException if there is a low-level I/O error\n   */\n  public TopFieldDocs search(Query query, int n, Sort sort) throws IOException {\n    return searchAfter(null, query, n, sort, false);\n  }\n\n","sourceOld":"  /**\n   * Search implementation with arbitrary sorting.\n   * @param query The query to search for\n   * @param n Return only the top n results\n   * @param sort The {@link org.apache.lucene.search.Sort} object\n   * @return The top docs, sorted according to the supplied {@link org.apache.lucene.search.Sort} instance\n   * @throws IOException if there is a low-level I/O error\n   */\n  public TopFieldDocs search(Query query, int n, Sort sort) throws IOException {\n    return searchAfter(null, query, n, sort, false, false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","date":1531905561,"type":3,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/IndexSearcher#search(Query,int,Sort).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/IndexSearcher#search(Query,int,Sort).mjava","sourceNew":"  /**\n   * Search implementation with arbitrary sorting.\n   * @param query The query to search for\n   * @param n Return only the top n results\n   * @param sort The {@link org.apache.lucene.search.Sort} object\n   * @return The top docs, sorted according to the supplied {@link org.apache.lucene.search.Sort} instance\n   * @throws IOException if there is a low-level I/O error\n   */\n  public TopFieldDocs search(Query query, int n, Sort sort) throws IOException {\n    return searchAfter(null, query, n, sort, false);\n  }\n\n","sourceOld":"  /**\n   * Search implementation with arbitrary sorting.\n   * @param query The query to search for\n   * @param n Return only the top n results\n   * @param sort The {@link org.apache.lucene.search.Sort} object\n   * @return The top docs, sorted according to the supplied {@link org.apache.lucene.search.Sort} instance\n   * @throws IOException if there is a low-level I/O error\n   */\n  public TopFieldDocs search(Query query, int n, Sort sort) throws IOException {\n    return searchAfter(null, query, n, sort, false, false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069":["fb02351ae2b114dd41585916d1e35fb2cff98fb0"],"fb02351ae2b114dd41585916d1e35fb2cff98fb0":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"fb17639909a369c1e64866842e5c213440acc17e":["c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":["f8ec642b0195d666cf3b5a6a6c2a80bdd3b756bc","81fff83bdb893c1471efd78f6a9a3ce4f98120b9"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f8ec642b0195d666cf3b5a6a6c2a80bdd3b756bc":["fb17639909a369c1e64866842e5c213440acc17e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"81fff83bdb893c1471efd78f6a9a3ce4f98120b9":["f8ec642b0195d666cf3b5a6a6c2a80bdd3b756bc"],"ef0d8a69209261514c5739c770bba706c2308450":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","fb02351ae2b114dd41585916d1e35fb2cff98fb0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["81fff83bdb893c1471efd78f6a9a3ce4f98120b9"]},"commit2Childs":{"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069":["fb17639909a369c1e64866842e5c213440acc17e"],"fb02351ae2b114dd41585916d1e35fb2cff98fb0":["c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069","ef0d8a69209261514c5739c770bba706c2308450"],"fb17639909a369c1e64866842e5c213440acc17e":["f8ec642b0195d666cf3b5a6a6c2a80bdd3b756bc"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":[],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["fb02351ae2b114dd41585916d1e35fb2cff98fb0","ef0d8a69209261514c5739c770bba706c2308450"],"f8ec642b0195d666cf3b5a6a6c2a80bdd3b756bc":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","81fff83bdb893c1471efd78f6a9a3ce4f98120b9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"81fff83bdb893c1471efd78f6a9a3ce4f98120b9":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ef0d8a69209261514c5739c770bba706c2308450":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","ef0d8a69209261514c5739c770bba706c2308450","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}