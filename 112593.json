{"path":"lucene/src/java/org/apache/lucene/store/FSDirectory#setMaxMergeWriteLimiter(RateLimiter).mjava","commits":[{"id":"fa1383b0dca888793c3f9eda613430699a90aebf","date":1315600538,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/store/FSDirectory#setMaxMergeWriteLimiter(RateLimiter).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Sets the rate limiter to be used to limit (approx) MB/sec allowed\n   * by all IO performed when merging. Pass null to have no limit.\n   *\n   * <p>Passing an instance of rate limiter compared to setting it using\n   * {@link #setMaxMergeWriteMBPerSec(Double)} allows to use the same limiter\n   * instance across several directories globally limiting IO when merging\n   * across them.\n   *\n   * @lucene.experimental */\n  public void setMaxMergeWriteLimiter(RateLimiter mergeWriteRateLimiter) {\n    this.mergeWriteRateLimiter = mergeWriteRateLimiter;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/store/FSDirectory#setMaxMergeWriteLimiter(RateLimiter).mjava","pathOld":"lucene/src/java/org/apache/lucene/store/FSDirectory#setMaxMergeWriteLimiter(RateLimiter).mjava","sourceNew":"  /**\n   * Sets the rate limiter to be used to limit (approx) MB/sec allowed\n   * by all IO performed when merging. Pass null to have no limit.\n   *\n   * <p>Passing an instance of rate limiter compared to setting it using\n   * {@link #setMaxMergeWriteMBPerSec(Double)} allows to use the same limiter\n   * instance across several directories globally limiting IO when merging\n   * across them.\n   *\n   * @lucene.experimental */\n  public void setMaxMergeWriteLimiter(RateLimiter mergeWriteRateLimiter) {\n    this.mergeWriteRateLimiter = mergeWriteRateLimiter;\n  }\n\n","sourceOld":"  /**\n   * Sets the rate limiter to be used to limit (approx) MB/sec allowed\n   * by all IO performed when merging. Pass null to have no limit.\n   *\n   * <p>Passing an instance of rate limiter compared to setting it using\n   * {@link #setMaxMergeWriteMBPerSec(Double)} allows to use the same limiter\n   * instance across several directories globally limiting IO when merging\n   * across them.\n   *\n   * @lucene.experimental */\n  public void setMaxMergeWriteLimiter(RateLimiter mergeWriteRateLimiter) {\n    this.mergeWriteRateLimiter = mergeWriteRateLimiter;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["fa1383b0dca888793c3f9eda613430699a90aebf"],"fa1383b0dca888793c3f9eda613430699a90aebf":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"fa1383b0dca888793c3f9eda613430699a90aebf":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["fa1383b0dca888793c3f9eda613430699a90aebf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}