{"path":"modules/queries/src/java/org/apache/lucene/queries/DuplicateFilter#equals(Object).mjava","commits":[{"id":"1f9f2355d68aab1348539f7a1603279405e566a4","date":1313634992,"type":1,"author":"Christopher John Male","isMerge":false,"pathNew":"modules/queries/src/java/org/apache/lucene/queries/DuplicateFilter#equals(Object).mjava","pathOld":"lucene/contrib/queries/src/java/org/apache/lucene/search/DuplicateFilter#equals(Object).mjava","sourceNew":"  @Override\n  public boolean equals(Object obj) {\n    if (this == obj) {\n      return true;\n    }\n    if ((obj == null) || (obj.getClass() != this.getClass())) {\n      return false;\n    }\n\n    DuplicateFilter other = (DuplicateFilter) obj;\n    return keepMode == other.keepMode &&\n        processingMode == other.processingMode &&\n        fieldName != null && fieldName.equals(other.fieldName);\n  }\n\n","sourceOld":"  @Override\n  public boolean equals(Object obj) {\n    if (this == obj) {\n      return true;\n    }\n    if ((obj == null) || (obj.getClass() != this.getClass())) {\n      return false;\n    }\n\n    DuplicateFilter other = (DuplicateFilter) obj;\n    return keepMode == other.keepMode &&\n        processingMode == other.processingMode &&\n        fieldName != null && fieldName.equals(other.fieldName);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f9fdc0777b84633cc8cfa8995ff5b0d411e4515b","date":1313816278,"type":5,"author":"Christopher John Male","isMerge":false,"pathNew":"lucene/contrib/sandbox/src/java/org/apache/lucene/sandbox/queries/DuplicateFilter#equals(Object).mjava","pathOld":"modules/queries/src/java/org/apache/lucene/queries/DuplicateFilter#equals(Object).mjava","sourceNew":"  @Override\n  public boolean equals(Object obj) {\n    if (this == obj) {\n      return true;\n    }\n    if ((obj == null) || (obj.getClass() != this.getClass())) {\n      return false;\n    }\n\n    DuplicateFilter other = (DuplicateFilter) obj;\n    return keepMode == other.keepMode &&\n        processingMode == other.processingMode &&\n        fieldName != null && fieldName.equals(other.fieldName);\n  }\n\n","sourceOld":"  @Override\n  public boolean equals(Object obj) {\n    if (this == obj) {\n      return true;\n    }\n    if ((obj == null) || (obj.getClass() != this.getClass())) {\n      return false;\n    }\n\n    DuplicateFilter other = (DuplicateFilter) obj;\n    return keepMode == other.keepMode &&\n        processingMode == other.processingMode &&\n        fieldName != null && fieldName.equals(other.fieldName);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"f9fdc0777b84633cc8cfa8995ff5b0d411e4515b":["1f9f2355d68aab1348539f7a1603279405e566a4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f9fdc0777b84633cc8cfa8995ff5b0d411e4515b"],"1f9f2355d68aab1348539f7a1603279405e566a4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"f9fdc0777b84633cc8cfa8995ff5b0d411e4515b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1f9f2355d68aab1348539f7a1603279405e566a4"],"1f9f2355d68aab1348539f7a1603279405e566a4":["f9fdc0777b84633cc8cfa8995ff5b0d411e4515b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}