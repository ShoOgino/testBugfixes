{"path":"src/webapp/src/org/apache/solr/servlet/LogLevelSelection#getEffectiveLevel(Logger).mjava","commits":[{"id":"ce877199e67ce181d609aede33e85656c0cf48ab","date":1217829826,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"src/webapp/src/org/apache/solr/servlet/LogLevelSelection#getEffectiveLevel(Logger).mjava","pathOld":"/dev/null","sourceNew":"  private Level getEffectiveLevel(Logger logger) {\n    Level level = logger.getLevel();\n    if (level != null) {\n      return level;\n    }\n    for (Level l : LEVELS) {\n      if (l == null) {\n        continue;\n      }\n      if (logger.isLoggable(l)) {\n        level = l;\n      }\n    }\n    return level;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["57d3a9bfcf62f7bacbd04cbb687d3b7e9768d3ac"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"0a642c99fb4c969430dceee261b6c8531dd7347c","date":1218134322,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"src/webapp/src/org/apache/solr/servlet/LogLevelSelection#getEffectiveLevel(Logger).mjava","pathOld":"src/webapp/src/org/apache/solr/servlet/LogLevelSelection#getEffectiveLevel(Logger).mjava","sourceNew":"  private Level getEffectiveLevel(Logger logger) {\n    Level level = logger.getLevel();\n    if (level != null) {\n      return level;\n    }\n    for (Level l : LEVELS) {\n      if (l == null) {\n        continue;\n      }\n      if (logger.isLoggable(l)) {\n        level = l;\n      }\n    }\n    return level != null ? level : Level.OFF;\n  }\n\n","sourceOld":"  private Level getEffectiveLevel(Logger logger) {\n    Level level = logger.getLevel();\n    if (level != null) {\n      return level;\n    }\n    for (Level l : LEVELS) {\n      if (l == null) {\n        continue;\n      }\n      if (logger.isLoggable(l)) {\n        level = l;\n      }\n    }\n    return level;\n  }\n\n","bugFix":null,"bugIntro":["57d3a9bfcf62f7bacbd04cbb687d3b7e9768d3ac"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"57d3a9bfcf62f7bacbd04cbb687d3b7e9768d3ac","date":1221674527,"type":3,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"src/webapp/src/org/apache/solr/servlet/LogLevelSelection#getEffectiveLevel(Logger).mjava","pathOld":"src/webapp/src/org/apache/solr/servlet/LogLevelSelection#getEffectiveLevel(Logger).mjava","sourceNew":"  private Level getEffectiveLevel(Logger logger) {\n    Level level = logger.getLevel();\n    if (level != null) {\n      return level;\n    }\n    for (Level l : LEVELS) {\n      if (l == null) {\n        // avoid NPE\n        continue;\n      }\n      if (logger.isLoggable(l)) {\n        // return first level loggable\n        return l;\n      }\n    }\n    return Level.OFF;\n  }\n\n","sourceOld":"  private Level getEffectiveLevel(Logger logger) {\n    Level level = logger.getLevel();\n    if (level != null) {\n      return level;\n    }\n    for (Level l : LEVELS) {\n      if (l == null) {\n        continue;\n      }\n      if (logger.isLoggable(l)) {\n        level = l;\n      }\n    }\n    return level != null ? level : Level.OFF;\n  }\n\n","bugFix":["0a642c99fb4c969430dceee261b6c8531dd7347c","ce877199e67ce181d609aede33e85656c0cf48ab"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/webapp/src/org/apache/solr/servlet/LogLevelSelection#getEffectiveLevel(Logger).mjava","pathOld":"src/webapp/src/org/apache/solr/servlet/LogLevelSelection#getEffectiveLevel(Logger).mjava","sourceNew":"  private Level getEffectiveLevel(Logger logger) {\n    Level level = logger.getLevel();\n    if (level != null) {\n      return level;\n    }\n    for (Level l : LEVELS) {\n      if (l == null) {\n        // avoid NPE\n        continue;\n      }\n      if (logger.isLoggable(l)) {\n        // return first level loggable\n        return l;\n      }\n    }\n    return Level.OFF;\n  }\n\n","sourceOld":"  private Level getEffectiveLevel(Logger logger) {\n    Level level = logger.getLevel();\n    if (level != null) {\n      return level;\n    }\n    for (Level l : LEVELS) {\n      if (l == null) {\n        // avoid NPE\n        continue;\n      }\n      if (logger.isLoggable(l)) {\n        // return first level loggable\n        return l;\n      }\n    }\n    return Level.OFF;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ce877199e67ce181d609aede33e85656c0cf48ab":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"0a642c99fb4c969430dceee261b6c8531dd7347c":["ce877199e67ce181d609aede33e85656c0cf48ab"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"57d3a9bfcf62f7bacbd04cbb687d3b7e9768d3ac":["0a642c99fb4c969430dceee261b6c8531dd7347c"],"ad94625fb8d088209f46650c8097196fec67f00c":["57d3a9bfcf62f7bacbd04cbb687d3b7e9768d3ac"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"ce877199e67ce181d609aede33e85656c0cf48ab":["0a642c99fb4c969430dceee261b6c8531dd7347c"],"0a642c99fb4c969430dceee261b6c8531dd7347c":["57d3a9bfcf62f7bacbd04cbb687d3b7e9768d3ac"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["ce877199e67ce181d609aede33e85656c0cf48ab"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"57d3a9bfcf62f7bacbd04cbb687d3b7e9768d3ac":["ad94625fb8d088209f46650c8097196fec67f00c"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}