{"path":"lucene/highlighter/src/java/org/apache/lucene/search/uhighlight/Passage#addMatch(int,int,BytesRef,int).mjava","commits":[{"id":"8764ca7bb74ee716c839b9545a93ec4a578c2005","date":1517564468,"type":1,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/highlighter/src/java/org/apache/lucene/search/uhighlight/Passage#addMatch(int,int,BytesRef,int).mjava","pathOld":"lucene/highlighter/src/java/org/apache/lucene/search/uhighlight/Passage#addMatch(int,int,BytesRef).mjava","sourceNew":"  /** @lucene.internal */\n  public void addMatch(int startOffset, int endOffset, BytesRef term, int termFreqInDoc) {\n    assert startOffset >= this.startOffset && startOffset <= this.endOffset;\n    if (numMatches == matchStarts.length) {\n      int newLength = ArrayUtil.oversize(numMatches + 1, RamUsageEstimator.NUM_BYTES_OBJECT_REF);\n      int newMatchStarts[] = new int[newLength];\n      int newMatchEnds[] = new int[newLength];\n      int newMatchTermFreqInDoc[] = new int[newLength];\n      BytesRef newMatchTerms[] = new BytesRef[newLength];\n      System.arraycopy(matchStarts, 0, newMatchStarts, 0, numMatches);\n      System.arraycopy(matchEnds, 0, newMatchEnds, 0, numMatches);\n      System.arraycopy(matchTerms, 0, newMatchTerms, 0, numMatches);\n      System.arraycopy(matchTermFreqInDoc, 0, newMatchTermFreqInDoc, 0, numMatches);\n      matchStarts = newMatchStarts;\n      matchEnds = newMatchEnds;\n      matchTerms = newMatchTerms;\n      matchTermFreqInDoc = newMatchTermFreqInDoc;\n    }\n    assert matchStarts.length == matchEnds.length && matchEnds.length == matchTerms.length;\n    matchStarts[numMatches] = startOffset;\n    matchEnds[numMatches] = endOffset;\n    matchTerms[numMatches] = term;\n    matchTermFreqInDoc[numMatches] = termFreqInDoc;\n    numMatches++;\n  }\n\n","sourceOld":"  /** @lucene.internal */\n  public void addMatch(int startOffset, int endOffset, BytesRef term) {\n    assert startOffset >= this.startOffset && startOffset <= this.endOffset;\n    if (numMatches == matchStarts.length) {\n      int newLength = ArrayUtil.oversize(numMatches + 1, RamUsageEstimator.NUM_BYTES_OBJECT_REF);\n      int newMatchStarts[] = new int[newLength];\n      int newMatchEnds[] = new int[newLength];\n      BytesRef newMatchTerms[] = new BytesRef[newLength];\n      System.arraycopy(matchStarts, 0, newMatchStarts, 0, numMatches);\n      System.arraycopy(matchEnds, 0, newMatchEnds, 0, numMatches);\n      System.arraycopy(matchTerms, 0, newMatchTerms, 0, numMatches);\n      matchStarts = newMatchStarts;\n      matchEnds = newMatchEnds;\n      matchTerms = newMatchTerms;\n    }\n    assert matchStarts.length == matchEnds.length && matchEnds.length == matchTerms.length;\n    matchStarts[numMatches] = startOffset;\n    matchEnds[numMatches] = endOffset;\n    matchTerms[numMatches] = term;\n    numMatches++;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8764ca7bb74ee716c839b9545a93ec4a578c2005":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8764ca7bb74ee716c839b9545a93ec4a578c2005"]},"commit2Childs":{"8764ca7bb74ee716c839b9545a93ec4a578c2005":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8764ca7bb74ee716c839b9545a93ec4a578c2005"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}