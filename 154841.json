{"path":"lucene/core/src/test/org/apache/lucene/index/TestUniqueTermCount#setUp().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestUniqueTermCount#setUp().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestUniqueTermCount#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    IndexWriterConfig config = newIndexWriterConfig(TEST_VERSION_CURRENT, \n                                                    new MockAnalyzer(random, MockTokenizer.SIMPLE, true)).setMergePolicy(newLogMergePolicy());\n    config.setSimilarity(new TestSimilarity());\n    RandomIndexWriter writer = new RandomIndexWriter(random, dir, config);\n    Document doc = new Document();\n    Field foo = newField(\"foo\", \"\", TextField.TYPE_UNSTORED);\n    doc.add(foo);\n    for (int i = 0; i < 100; i++) {\n      foo.setValue(addValue());\n      writer.addDocument(doc);\n    }\n    reader = writer.getReader();\n    writer.close();\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    IndexWriterConfig config = newIndexWriterConfig(TEST_VERSION_CURRENT, \n                                                    new MockAnalyzer(random, MockTokenizer.SIMPLE, true)).setMergePolicy(newLogMergePolicy());\n    config.setSimilarity(new TestSimilarity());\n    RandomIndexWriter writer = new RandomIndexWriter(random, dir, config);\n    Document doc = new Document();\n    Field foo = newField(\"foo\", \"\", TextField.TYPE_UNSTORED);\n    doc.add(foo);\n    for (int i = 0; i < 100; i++) {\n      foo.setValue(addValue());\n      writer.addDocument(doc);\n    }\n    reader = writer.getReader();\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a78a90fc9701e511308346ea29f4f5e548bb39fe","date":1329489995,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestUniqueTermCount#setUp().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestUniqueTermCount#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    IndexWriterConfig config = newIndexWriterConfig(TEST_VERSION_CURRENT, \n                                                    new MockAnalyzer(random, MockTokenizer.SIMPLE, true)).setMergePolicy(newLogMergePolicy());\n    config.setSimilarity(new TestSimilarity());\n    RandomIndexWriter writer = new RandomIndexWriter(random, dir, config);\n    Document doc = new Document();\n    Field foo = newField(\"foo\", \"\", TextField.TYPE_UNSTORED);\n    doc.add(foo);\n    for (int i = 0; i < 100; i++) {\n      foo.setStringValue(addValue());\n      writer.addDocument(doc);\n    }\n    reader = writer.getReader();\n    writer.close();\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    IndexWriterConfig config = newIndexWriterConfig(TEST_VERSION_CURRENT, \n                                                    new MockAnalyzer(random, MockTokenizer.SIMPLE, true)).setMergePolicy(newLogMergePolicy());\n    config.setSimilarity(new TestSimilarity());\n    RandomIndexWriter writer = new RandomIndexWriter(random, dir, config);\n    Document doc = new Document();\n    Field foo = newField(\"foo\", \"\", TextField.TYPE_UNSTORED);\n    doc.add(foo);\n    for (int i = 0; i < 100; i++) {\n      foo.setValue(addValue());\n      writer.addDocument(doc);\n    }\n    reader = writer.getReader();\n    writer.close();\n  }\n\n","bugFix":["f4f2f9fd0a641ccc0cc6a4fb4e53d7ec1ab14a94"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"629c38c4ae4e303d0617e05fbfe508140b32f0a3","date":1334500904,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestUniqueTermCount#setUp().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestUniqueTermCount#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    IndexWriterConfig config = newIndexWriterConfig(TEST_VERSION_CURRENT, \n                                                    new MockAnalyzer(random(), MockTokenizer.SIMPLE, true)).setMergePolicy(newLogMergePolicy());\n    config.setSimilarity(new TestSimilarity());\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir, config);\n    Document doc = new Document();\n    Field foo = newField(\"foo\", \"\", TextField.TYPE_UNSTORED);\n    doc.add(foo);\n    for (int i = 0; i < 100; i++) {\n      foo.setStringValue(addValue());\n      writer.addDocument(doc);\n    }\n    reader = writer.getReader();\n    writer.close();\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    IndexWriterConfig config = newIndexWriterConfig(TEST_VERSION_CURRENT, \n                                                    new MockAnalyzer(random, MockTokenizer.SIMPLE, true)).setMergePolicy(newLogMergePolicy());\n    config.setSimilarity(new TestSimilarity());\n    RandomIndexWriter writer = new RandomIndexWriter(random, dir, config);\n    Document doc = new Document();\n    Field foo = newField(\"foo\", \"\", TextField.TYPE_UNSTORED);\n    doc.add(foo);\n    for (int i = 0; i < 100; i++) {\n      foo.setStringValue(addValue());\n      writer.addDocument(doc);\n    }\n    reader = writer.getReader();\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"04f07771a2a7dd3a395700665ed839c3dae2def2","date":1339350139,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestUniqueTermCount#setUp().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestUniqueTermCount#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    IndexWriterConfig config = newIndexWriterConfig(TEST_VERSION_CURRENT, \n                                                    new MockAnalyzer(random(), MockTokenizer.SIMPLE, true)).setMergePolicy(newLogMergePolicy());\n    config.setSimilarity(new TestSimilarity());\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir, config);\n    Document doc = new Document();\n    Field foo = newTextField(\"foo\", \"\", Field.Store.NO);\n    doc.add(foo);\n    for (int i = 0; i < 100; i++) {\n      foo.setStringValue(addValue());\n      writer.addDocument(doc);\n    }\n    reader = writer.getReader();\n    writer.close();\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    IndexWriterConfig config = newIndexWriterConfig(TEST_VERSION_CURRENT, \n                                                    new MockAnalyzer(random(), MockTokenizer.SIMPLE, true)).setMergePolicy(newLogMergePolicy());\n    config.setSimilarity(new TestSimilarity());\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir, config);\n    Document doc = new Document();\n    Field foo = newField(\"foo\", \"\", TextField.TYPE_UNSTORED);\n    doc.add(foo);\n    for (int i = 0; i < 100; i++) {\n      foo.setStringValue(addValue());\n      writer.addDocument(doc);\n    }\n    reader = writer.getReader();\n    writer.close();\n  }\n\n","bugFix":["1509f151d7692d84fae414b2b799ac06ba60fcb4"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"0837ab0472feecb3a54260729d845f839e1cbd72","date":1358283639,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestUniqueTermCount#setUp().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestUniqueTermCount#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    MockAnalyzer analyzer = new MockAnalyzer(random(), MockTokenizer.SIMPLE, true);\n    IndexWriterConfig config = newIndexWriterConfig(TEST_VERSION_CURRENT, analyzer);\n    config.setMergePolicy(newLogMergePolicy());\n    config.setSimilarity(new TestSimilarity());\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir, config);\n    Document doc = new Document();\n    Field foo = newTextField(\"foo\", \"\", Field.Store.NO);\n    doc.add(foo);\n    for (int i = 0; i < 100; i++) {\n      foo.setStringValue(addValue());\n      writer.addDocument(doc);\n    }\n    reader = writer.getReader();\n    writer.close();\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    IndexWriterConfig config = newIndexWriterConfig(TEST_VERSION_CURRENT, \n                                                    new MockAnalyzer(random(), MockTokenizer.SIMPLE, true)).setMergePolicy(newLogMergePolicy());\n    config.setSimilarity(new TestSimilarity());\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir, config);\n    Document doc = new Document();\n    Field foo = newTextField(\"foo\", \"\", Field.Store.NO);\n    doc.add(foo);\n    for (int i = 0; i < 100; i++) {\n      foo.setStringValue(addValue());\n      writer.addDocument(doc);\n    }\n    reader = writer.getReader();\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d4d69c535930b5cce125cff868d40f6373dc27d4","date":1360270101,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestUniqueTermCount#setUp().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestUniqueTermCount#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    MockAnalyzer analyzer = new MockAnalyzer(random(), MockTokenizer.SIMPLE, true);\n    IndexWriterConfig config = newIndexWriterConfig(TEST_VERSION_CURRENT, analyzer);\n    config.setMergePolicy(newLogMergePolicy());\n    config.setSimilarity(new TestSimilarity());\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir, config);\n    Document doc = new Document();\n    Field foo = newTextField(\"foo\", \"\", Field.Store.NO);\n    doc.add(foo);\n    for (int i = 0; i < 100; i++) {\n      foo.setStringValue(addValue());\n      writer.addDocument(doc);\n    }\n    reader = writer.getReader();\n    writer.close();\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    IndexWriterConfig config = newIndexWriterConfig(TEST_VERSION_CURRENT, \n                                                    new MockAnalyzer(random(), MockTokenizer.SIMPLE, true)).setMergePolicy(newLogMergePolicy());\n    config.setSimilarity(new TestSimilarity());\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir, config);\n    Document doc = new Document();\n    Field foo = newTextField(\"foo\", \"\", Field.Store.NO);\n    doc.add(foo);\n    for (int i = 0; i < 100; i++) {\n      foo.setStringValue(addValue());\n      writer.addDocument(doc);\n    }\n    reader = writer.getReader();\n    writer.close();\n  }\n\n","bugFix":["629c38c4ae4e303d0617e05fbfe508140b32f0a3","f4f2f9fd0a641ccc0cc6a4fb4e53d7ec1ab14a94"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestUniqueTermCount#setUp().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestUniqueTermCount#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    MockAnalyzer analyzer = new MockAnalyzer(random(), MockTokenizer.SIMPLE, true);\n    IndexWriterConfig config = newIndexWriterConfig(TEST_VERSION_CURRENT, analyzer);\n    config.setMergePolicy(newLogMergePolicy());\n    config.setSimilarity(new TestSimilarity());\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir, config);\n    Document doc = new Document();\n    Field foo = newTextField(\"foo\", \"\", Field.Store.NO);\n    doc.add(foo);\n    for (int i = 0; i < 100; i++) {\n      foo.setStringValue(addValue());\n      writer.addDocument(doc);\n    }\n    reader = writer.getReader();\n    writer.shutdown();\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    MockAnalyzer analyzer = new MockAnalyzer(random(), MockTokenizer.SIMPLE, true);\n    IndexWriterConfig config = newIndexWriterConfig(TEST_VERSION_CURRENT, analyzer);\n    config.setMergePolicy(newLogMergePolicy());\n    config.setSimilarity(new TestSimilarity());\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir, config);\n    Document doc = new Document();\n    Field foo = newTextField(\"foo\", \"\", Field.Store.NO);\n    doc.add(foo);\n    for (int i = 0; i < 100; i++) {\n      foo.setStringValue(addValue());\n      writer.addDocument(doc);\n    }\n    reader = writer.getReader();\n    writer.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e","date":1406737224,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestUniqueTermCount#setUp().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestUniqueTermCount#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    MockAnalyzer analyzer = new MockAnalyzer(random(), MockTokenizer.SIMPLE, true);\n    IndexWriterConfig config = newIndexWriterConfig(analyzer);\n    config.setMergePolicy(newLogMergePolicy());\n    config.setSimilarity(new TestSimilarity());\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir, config);\n    Document doc = new Document();\n    Field foo = newTextField(\"foo\", \"\", Field.Store.NO);\n    doc.add(foo);\n    for (int i = 0; i < 100; i++) {\n      foo.setStringValue(addValue());\n      writer.addDocument(doc);\n    }\n    reader = writer.getReader();\n    writer.shutdown();\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    MockAnalyzer analyzer = new MockAnalyzer(random(), MockTokenizer.SIMPLE, true);\n    IndexWriterConfig config = newIndexWriterConfig(TEST_VERSION_CURRENT, analyzer);\n    config.setMergePolicy(newLogMergePolicy());\n    config.setSimilarity(new TestSimilarity());\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir, config);\n    Document doc = new Document();\n    Field foo = newTextField(\"foo\", \"\", Field.Store.NO);\n    doc.add(foo);\n    for (int i = 0; i < 100; i++) {\n      foo.setStringValue(addValue());\n      writer.addDocument(doc);\n    }\n    reader = writer.getReader();\n    writer.shutdown();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestUniqueTermCount#setUp().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestUniqueTermCount#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    MockAnalyzer analyzer = new MockAnalyzer(random(), MockTokenizer.SIMPLE, true);\n    IndexWriterConfig config = newIndexWriterConfig(analyzer);\n    config.setMergePolicy(newLogMergePolicy());\n    config.setSimilarity(new TestSimilarity());\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir, config);\n    Document doc = new Document();\n    Field foo = newTextField(\"foo\", \"\", Field.Store.NO);\n    doc.add(foo);\n    for (int i = 0; i < 100; i++) {\n      foo.setStringValue(addValue());\n      writer.addDocument(doc);\n    }\n    reader = writer.getReader();\n    writer.close();\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dir = newDirectory();\n    MockAnalyzer analyzer = new MockAnalyzer(random(), MockTokenizer.SIMPLE, true);\n    IndexWriterConfig config = newIndexWriterConfig(analyzer);\n    config.setMergePolicy(newLogMergePolicy());\n    config.setSimilarity(new TestSimilarity());\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir, config);\n    Document doc = new Document();\n    Field foo = newTextField(\"foo\", \"\", Field.Store.NO);\n    doc.add(foo);\n    for (int i = 0; i < 100; i++) {\n      foo.setStringValue(addValue());\n      writer.addDocument(doc);\n    }\n    reader = writer.getReader();\n    writer.shutdown();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"04f07771a2a7dd3a395700665ed839c3dae2def2":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"a78a90fc9701e511308346ea29f4f5e548bb39fe":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["04f07771a2a7dd3a395700665ed839c3dae2def2","0837ab0472feecb3a54260729d845f839e1cbd72"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d0ef034a4f10871667ae75181537775ddcf8ade4":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"0837ab0472feecb3a54260729d845f839e1cbd72":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["a78a90fc9701e511308346ea29f4f5e548bb39fe"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d0ef034a4f10871667ae75181537775ddcf8ade4"]},"commit2Childs":{"04f07771a2a7dd3a395700665ed839c3dae2def2":["d4d69c535930b5cce125cff868d40f6373dc27d4","0837ab0472feecb3a54260729d845f839e1cbd72"],"a78a90fc9701e511308346ea29f4f5e548bb39fe":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a78a90fc9701e511308346ea29f4f5e548bb39fe"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"0837ab0472feecb3a54260729d845f839e1cbd72":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}