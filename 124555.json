{"path":"lucene/core/src/test/org/apache/lucene/search/TestSort#testEmptyStringVsNullStringSort().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestSort#testEmptyStringVsNullStringSort().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestSort#testEmptyStringVsNullStringSort().mjava","sourceNew":"  public void testEmptyStringVsNullStringSort() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(\n                        TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    Document doc = new Document();\n    doc.add(newField(\"f\", \"\", StringField.TYPE_UNSTORED));\n    doc.add(newField(\"t\", \"1\", StringField.TYPE_UNSTORED));\n    w.addDocument(doc);\n    w.commit();\n    doc = new Document();\n    doc.add(newField(\"t\", \"1\", StringField.TYPE_UNSTORED));\n    w.addDocument(doc);\n\n    IndexReader r = IndexReader.open(w, true);\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    TopDocs hits = s.search(new TermQuery(new Term(\"t\", \"1\")), null, 10, new Sort(new SortField(\"f\", SortField.Type.STRING)));\n    assertEquals(2, hits.totalHits);\n    // null sorts first\n    assertEquals(1, hits.scoreDocs[0].doc);\n    assertEquals(0, hits.scoreDocs[1].doc);\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testEmptyStringVsNullStringSort() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(\n                        TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    Document doc = new Document();\n    doc.add(newField(\"f\", \"\", StringField.TYPE_UNSTORED));\n    doc.add(newField(\"t\", \"1\", StringField.TYPE_UNSTORED));\n    w.addDocument(doc);\n    w.commit();\n    doc = new Document();\n    doc.add(newField(\"t\", \"1\", StringField.TYPE_UNSTORED));\n    w.addDocument(doc);\n\n    IndexReader r = IndexReader.open(w, true);\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    TopDocs hits = s.search(new TermQuery(new Term(\"t\", \"1\")), null, 10, new Sort(new SortField(\"f\", SortField.Type.STRING)));\n    assertEquals(2, hits.totalHits);\n    // null sorts first\n    assertEquals(1, hits.scoreDocs[0].doc);\n    assertEquals(0, hits.scoreDocs[1].doc);\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"629c38c4ae4e303d0617e05fbfe508140b32f0a3","date":1334500904,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestSort#testEmptyStringVsNullStringSort().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestSort#testEmptyStringVsNullStringSort().mjava","sourceNew":"  public void testEmptyStringVsNullStringSort() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(\n                        TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    Document doc = new Document();\n    doc.add(newField(\"f\", \"\", StringField.TYPE_UNSTORED));\n    doc.add(newField(\"t\", \"1\", StringField.TYPE_UNSTORED));\n    w.addDocument(doc);\n    w.commit();\n    doc = new Document();\n    doc.add(newField(\"t\", \"1\", StringField.TYPE_UNSTORED));\n    w.addDocument(doc);\n\n    IndexReader r = IndexReader.open(w, true);\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    TopDocs hits = s.search(new TermQuery(new Term(\"t\", \"1\")), null, 10, new Sort(new SortField(\"f\", SortField.Type.STRING)));\n    assertEquals(2, hits.totalHits);\n    // null sorts first\n    assertEquals(1, hits.scoreDocs[0].doc);\n    assertEquals(0, hits.scoreDocs[1].doc);\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testEmptyStringVsNullStringSort() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(\n                        TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    Document doc = new Document();\n    doc.add(newField(\"f\", \"\", StringField.TYPE_UNSTORED));\n    doc.add(newField(\"t\", \"1\", StringField.TYPE_UNSTORED));\n    w.addDocument(doc);\n    w.commit();\n    doc = new Document();\n    doc.add(newField(\"t\", \"1\", StringField.TYPE_UNSTORED));\n    w.addDocument(doc);\n\n    IndexReader r = IndexReader.open(w, true);\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    TopDocs hits = s.search(new TermQuery(new Term(\"t\", \"1\")), null, 10, new Sort(new SortField(\"f\", SortField.Type.STRING)));\n    assertEquals(2, hits.totalHits);\n    // null sorts first\n    assertEquals(1, hits.scoreDocs[0].doc);\n    assertEquals(0, hits.scoreDocs[1].doc);\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f","date":1338430031,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestSort#testEmptyStringVsNullStringSort().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestSort#testEmptyStringVsNullStringSort().mjava","sourceNew":"  public void testEmptyStringVsNullStringSort() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(\n                        TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    Document doc = new Document();\n    doc.add(newField(\"f\", \"\", StringField.TYPE_UNSTORED));\n    doc.add(newField(\"t\", \"1\", StringField.TYPE_UNSTORED));\n    w.addDocument(doc);\n    w.commit();\n    doc = new Document();\n    doc.add(newField(\"t\", \"1\", StringField.TYPE_UNSTORED));\n    w.addDocument(doc);\n\n    IndexReader r = DirectoryReader.open(w, true);\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    TopDocs hits = s.search(new TermQuery(new Term(\"t\", \"1\")), null, 10, new Sort(new SortField(\"f\", SortField.Type.STRING)));\n    assertEquals(2, hits.totalHits);\n    // null sorts first\n    assertEquals(1, hits.scoreDocs[0].doc);\n    assertEquals(0, hits.scoreDocs[1].doc);\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testEmptyStringVsNullStringSort() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(\n                        TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    Document doc = new Document();\n    doc.add(newField(\"f\", \"\", StringField.TYPE_UNSTORED));\n    doc.add(newField(\"t\", \"1\", StringField.TYPE_UNSTORED));\n    w.addDocument(doc);\n    w.commit();\n    doc = new Document();\n    doc.add(newField(\"t\", \"1\", StringField.TYPE_UNSTORED));\n    w.addDocument(doc);\n\n    IndexReader r = IndexReader.open(w, true);\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    TopDocs hits = s.search(new TermQuery(new Term(\"t\", \"1\")), null, 10, new Sort(new SortField(\"f\", SortField.Type.STRING)));\n    assertEquals(2, hits.totalHits);\n    // null sorts first\n    assertEquals(1, hits.scoreDocs[0].doc);\n    assertEquals(0, hits.scoreDocs[1].doc);\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"04f07771a2a7dd3a395700665ed839c3dae2def2","date":1339350139,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestSort#testEmptyStringVsNullStringSort().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestSort#testEmptyStringVsNullStringSort().mjava","sourceNew":"  public void testEmptyStringVsNullStringSort() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(\n                        TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    Document doc = new Document();\n    doc.add(newStringField(\"f\", \"\", Field.Store.NO));\n    doc.add(newStringField(\"t\", \"1\", Field.Store.NO));\n    w.addDocument(doc);\n    w.commit();\n    doc = new Document();\n    doc.add(newStringField(\"t\", \"1\", Field.Store.NO));\n    w.addDocument(doc);\n\n    IndexReader r = DirectoryReader.open(w, true);\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    TopDocs hits = s.search(new TermQuery(new Term(\"t\", \"1\")), null, 10, new Sort(new SortField(\"f\", SortField.Type.STRING)));\n    assertEquals(2, hits.totalHits);\n    // null sorts first\n    assertEquals(1, hits.scoreDocs[0].doc);\n    assertEquals(0, hits.scoreDocs[1].doc);\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testEmptyStringVsNullStringSort() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(\n                        TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    Document doc = new Document();\n    doc.add(newField(\"f\", \"\", StringField.TYPE_UNSTORED));\n    doc.add(newField(\"t\", \"1\", StringField.TYPE_UNSTORED));\n    w.addDocument(doc);\n    w.commit();\n    doc = new Document();\n    doc.add(newField(\"t\", \"1\", StringField.TYPE_UNSTORED));\n    w.addDocument(doc);\n\n    IndexReader r = DirectoryReader.open(w, true);\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    TopDocs hits = s.search(new TermQuery(new Term(\"t\", \"1\")), null, 10, new Sort(new SortField(\"f\", SortField.Type.STRING)));\n    assertEquals(2, hits.totalHits);\n    // null sorts first\n    assertEquals(1, hits.scoreDocs[0].doc);\n    assertEquals(0, hits.scoreDocs[1].doc);\n    r.close();\n    dir.close();\n  }\n\n","bugFix":["1509f151d7692d84fae414b2b799ac06ba60fcb4"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e4d968497a1e5d9b3a36621b61b75486ec05ae49","date":1360852942,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestSort2#testEmptyStringVsNullStringSort().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestSort#testEmptyStringVsNullStringSort().mjava","sourceNew":"  public void testEmptyStringVsNullStringSort() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(\n                        TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    Document doc = new Document();\n    doc.add(newStringField(\"f\", \"\", Field.Store.NO));\n    doc.add(newStringField(\"t\", \"1\", Field.Store.NO));\n    w.addDocument(doc);\n    w.commit();\n    doc = new Document();\n    doc.add(newStringField(\"t\", \"1\", Field.Store.NO));\n    w.addDocument(doc);\n\n    IndexReader r = DirectoryReader.open(w, true);\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    TopDocs hits = s.search(new TermQuery(new Term(\"t\", \"1\")), null, 10, new Sort(new SortField(\"f\", SortField.Type.STRING)));\n    assertEquals(2, hits.totalHits);\n    // null sorts first\n    assertEquals(1, hits.scoreDocs[0].doc);\n    assertEquals(0, hits.scoreDocs[1].doc);\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testEmptyStringVsNullStringSort() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(\n                        TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    Document doc = new Document();\n    doc.add(newStringField(\"f\", \"\", Field.Store.NO));\n    doc.add(newStringField(\"t\", \"1\", Field.Store.NO));\n    w.addDocument(doc);\n    w.commit();\n    doc = new Document();\n    doc.add(newStringField(\"t\", \"1\", Field.Store.NO));\n    w.addDocument(doc);\n\n    IndexReader r = DirectoryReader.open(w, true);\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    TopDocs hits = s.search(new TermQuery(new Term(\"t\", \"1\")), null, 10, new Sort(new SortField(\"f\", SortField.Type.STRING)));\n    assertEquals(2, hits.totalHits);\n    // null sorts first\n    assertEquals(1, hits.scoreDocs[0].doc);\n    assertEquals(0, hits.scoreDocs[1].doc);\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5f183729ece15402db94402d482f29ebac4f7f54","date":1360963151,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestSort#testEmptyStringVsNullStringSort().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestSort2#testEmptyStringVsNullStringSort().mjava","sourceNew":"  public void testEmptyStringVsNullStringSort() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(\n                        TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    Document doc = new Document();\n    doc.add(newStringField(\"f\", \"\", Field.Store.NO));\n    doc.add(newStringField(\"t\", \"1\", Field.Store.NO));\n    w.addDocument(doc);\n    w.commit();\n    doc = new Document();\n    doc.add(newStringField(\"t\", \"1\", Field.Store.NO));\n    w.addDocument(doc);\n\n    IndexReader r = DirectoryReader.open(w, true);\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    TopDocs hits = s.search(new TermQuery(new Term(\"t\", \"1\")), null, 10, new Sort(new SortField(\"f\", SortField.Type.STRING)));\n    assertEquals(2, hits.totalHits);\n    // null sorts first\n    assertEquals(1, hits.scoreDocs[0].doc);\n    assertEquals(0, hits.scoreDocs[1].doc);\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testEmptyStringVsNullStringSort() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(\n                        TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    Document doc = new Document();\n    doc.add(newStringField(\"f\", \"\", Field.Store.NO));\n    doc.add(newStringField(\"t\", \"1\", Field.Store.NO));\n    w.addDocument(doc);\n    w.commit();\n    doc = new Document();\n    doc.add(newStringField(\"t\", \"1\", Field.Store.NO));\n    w.addDocument(doc);\n\n    IndexReader r = DirectoryReader.open(w, true);\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    TopDocs hits = s.search(new TermQuery(new Term(\"t\", \"1\")), null, 10, new Sort(new SortField(\"f\", SortField.Type.STRING)));\n    assertEquals(2, hits.totalHits);\n    // null sorts first\n    assertEquals(1, hits.scoreDocs[0].doc);\n    assertEquals(0, hits.scoreDocs[1].doc);\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3b41f996b22bd5518650f897d050088ff808ec03","date":1360969107,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestSort2#testEmptyStringVsNullStringSort().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestSort#testEmptyStringVsNullStringSort().mjava","sourceNew":"  public void testEmptyStringVsNullStringSort() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(\n                        TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    Document doc = new Document();\n    doc.add(newStringField(\"f\", \"\", Field.Store.NO));\n    doc.add(newStringField(\"t\", \"1\", Field.Store.NO));\n    w.addDocument(doc);\n    w.commit();\n    doc = new Document();\n    doc.add(newStringField(\"t\", \"1\", Field.Store.NO));\n    w.addDocument(doc);\n\n    IndexReader r = DirectoryReader.open(w, true);\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    TopDocs hits = s.search(new TermQuery(new Term(\"t\", \"1\")), null, 10, new Sort(new SortField(\"f\", SortField.Type.STRING)));\n    assertEquals(2, hits.totalHits);\n    // null sorts first\n    assertEquals(1, hits.scoreDocs[0].doc);\n    assertEquals(0, hits.scoreDocs[1].doc);\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testEmptyStringVsNullStringSort() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(\n                        TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    Document doc = new Document();\n    doc.add(newStringField(\"f\", \"\", Field.Store.NO));\n    doc.add(newStringField(\"t\", \"1\", Field.Store.NO));\n    w.addDocument(doc);\n    w.commit();\n    doc = new Document();\n    doc.add(newStringField(\"t\", \"1\", Field.Store.NO));\n    w.addDocument(doc);\n\n    IndexReader r = DirectoryReader.open(w, true);\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    TopDocs hits = s.search(new TermQuery(new Term(\"t\", \"1\")), null, 10, new Sort(new SortField(\"f\", SortField.Type.STRING)));\n    assertEquals(2, hits.totalHits);\n    // null sorts first\n    assertEquals(1, hits.scoreDocs[0].doc);\n    assertEquals(0, hits.scoreDocs[1].doc);\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"95303ff3749680c743b9425f9cf99e6e4065e8a8","date":1361061922,"type":1,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestSort#testEmptyStringVsNullStringSort().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestSort2#testEmptyStringVsNullStringSort().mjava","sourceNew":"  public void testEmptyStringVsNullStringSort() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(\n                        TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    Document doc = new Document();\n    doc.add(newStringField(\"f\", \"\", Field.Store.NO));\n    doc.add(newStringField(\"t\", \"1\", Field.Store.NO));\n    w.addDocument(doc);\n    w.commit();\n    doc = new Document();\n    doc.add(newStringField(\"t\", \"1\", Field.Store.NO));\n    w.addDocument(doc);\n\n    IndexReader r = DirectoryReader.open(w, true);\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    TopDocs hits = s.search(new TermQuery(new Term(\"t\", \"1\")), null, 10, new Sort(new SortField(\"f\", SortField.Type.STRING)));\n    assertEquals(2, hits.totalHits);\n    // null sorts first\n    assertEquals(1, hits.scoreDocs[0].doc);\n    assertEquals(0, hits.scoreDocs[1].doc);\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testEmptyStringVsNullStringSort() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(\n                        TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    Document doc = new Document();\n    doc.add(newStringField(\"f\", \"\", Field.Store.NO));\n    doc.add(newStringField(\"t\", \"1\", Field.Store.NO));\n    w.addDocument(doc);\n    w.commit();\n    doc = new Document();\n    doc.add(newStringField(\"t\", \"1\", Field.Store.NO));\n    w.addDocument(doc);\n\n    IndexReader r = DirectoryReader.open(w, true);\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    TopDocs hits = s.search(new TermQuery(new Term(\"t\", \"1\")), null, 10, new Sort(new SortField(\"f\", SortField.Type.STRING)));\n    assertEquals(2, hits.totalHits);\n    // null sorts first\n    assertEquals(1, hits.scoreDocs[0].doc);\n    assertEquals(0, hits.scoreDocs[1].doc);\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestSort#testEmptyStringVsNullStringSort().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestSort#testEmptyStringVsNullStringSort().mjava","sourceNew":"  public void testEmptyStringVsNullStringSort() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(\n                        TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    Document doc = new Document();\n    doc.add(newStringField(\"f\", \"\", Field.Store.NO));\n    doc.add(newStringField(\"t\", \"1\", Field.Store.NO));\n    w.addDocument(doc);\n    w.commit();\n    doc = new Document();\n    doc.add(newStringField(\"t\", \"1\", Field.Store.NO));\n    w.addDocument(doc);\n\n    IndexReader r = DirectoryReader.open(w, true);\n    w.shutdown();\n    IndexSearcher s = newSearcher(r);\n    TopDocs hits = s.search(new TermQuery(new Term(\"t\", \"1\")), null, 10, new Sort(new SortField(\"f\", SortField.Type.STRING)));\n    assertEquals(2, hits.totalHits);\n    // null sorts first\n    assertEquals(1, hits.scoreDocs[0].doc);\n    assertEquals(0, hits.scoreDocs[1].doc);\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testEmptyStringVsNullStringSort() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(\n                        TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    Document doc = new Document();\n    doc.add(newStringField(\"f\", \"\", Field.Store.NO));\n    doc.add(newStringField(\"t\", \"1\", Field.Store.NO));\n    w.addDocument(doc);\n    w.commit();\n    doc = new Document();\n    doc.add(newStringField(\"t\", \"1\", Field.Store.NO));\n    w.addDocument(doc);\n\n    IndexReader r = DirectoryReader.open(w, true);\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    TopDocs hits = s.search(new TermQuery(new Term(\"t\", \"1\")), null, 10, new Sort(new SortField(\"f\", SortField.Type.STRING)));\n    assertEquals(2, hits.totalHits);\n    // null sorts first\n    assertEquals(1, hits.scoreDocs[0].doc);\n    assertEquals(0, hits.scoreDocs[1].doc);\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c","date":1399816179,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/misc/src/test/org/apache/lucene/uninverting/TestFieldCacheSort#testEmptyStringVsNullStringSort().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestSort#testEmptyStringVsNullStringSort().mjava","sourceNew":"  public void testEmptyStringVsNullStringSort() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(\n                        TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    Document doc = new Document();\n    doc.add(newStringField(\"f\", \"\", Field.Store.NO));\n    doc.add(newStringField(\"t\", \"1\", Field.Store.NO));\n    w.addDocument(doc);\n    w.commit();\n    doc = new Document();\n    doc.add(newStringField(\"t\", \"1\", Field.Store.NO));\n    w.addDocument(doc);\n\n    IndexReader r = UninvertingReader.wrap(DirectoryReader.open(w, true), \n                    Collections.singletonMap(\"f\", Type.SORTED));\n    w.shutdown();\n    IndexSearcher s = newSearcher(r);\n    TopDocs hits = s.search(new TermQuery(new Term(\"t\", \"1\")), null, 10, new Sort(new SortField(\"f\", SortField.Type.STRING)));\n    assertEquals(2, hits.totalHits);\n    // null sorts first\n    assertEquals(1, hits.scoreDocs[0].doc);\n    assertEquals(0, hits.scoreDocs[1].doc);\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testEmptyStringVsNullStringSort() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(\n                        TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    Document doc = new Document();\n    doc.add(newStringField(\"f\", \"\", Field.Store.NO));\n    doc.add(newStringField(\"t\", \"1\", Field.Store.NO));\n    w.addDocument(doc);\n    w.commit();\n    doc = new Document();\n    doc.add(newStringField(\"t\", \"1\", Field.Store.NO));\n    w.addDocument(doc);\n\n    IndexReader r = DirectoryReader.open(w, true);\n    w.shutdown();\n    IndexSearcher s = newSearcher(r);\n    TopDocs hits = s.search(new TermQuery(new Term(\"t\", \"1\")), null, 10, new Sort(new SortField(\"f\", SortField.Type.STRING)));\n    assertEquals(2, hits.totalHits);\n    // null sorts first\n    assertEquals(1, hits.scoreDocs[0].doc);\n    assertEquals(0, hits.scoreDocs[1].doc);\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"93dd449115a9247533e44bab47e8429e5dccbc6d","date":1400258396,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/misc/src/test/org/apache/lucene/uninverting/TestFieldCacheSort#testEmptyStringVsNullStringSort().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestSort#testEmptyStringVsNullStringSort().mjava","sourceNew":"  public void testEmptyStringVsNullStringSort() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(\n                        TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    Document doc = new Document();\n    doc.add(newStringField(\"f\", \"\", Field.Store.NO));\n    doc.add(newStringField(\"t\", \"1\", Field.Store.NO));\n    w.addDocument(doc);\n    w.commit();\n    doc = new Document();\n    doc.add(newStringField(\"t\", \"1\", Field.Store.NO));\n    w.addDocument(doc);\n\n    IndexReader r = UninvertingReader.wrap(DirectoryReader.open(w, true), \n                    Collections.singletonMap(\"f\", Type.SORTED));\n    w.shutdown();\n    IndexSearcher s = newSearcher(r);\n    TopDocs hits = s.search(new TermQuery(new Term(\"t\", \"1\")), null, 10, new Sort(new SortField(\"f\", SortField.Type.STRING)));\n    assertEquals(2, hits.totalHits);\n    // null sorts first\n    assertEquals(1, hits.scoreDocs[0].doc);\n    assertEquals(0, hits.scoreDocs[1].doc);\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testEmptyStringVsNullStringSort() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(\n                        TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    Document doc = new Document();\n    doc.add(newStringField(\"f\", \"\", Field.Store.NO));\n    doc.add(newStringField(\"t\", \"1\", Field.Store.NO));\n    w.addDocument(doc);\n    w.commit();\n    doc = new Document();\n    doc.add(newStringField(\"t\", \"1\", Field.Store.NO));\n    w.addDocument(doc);\n\n    IndexReader r = DirectoryReader.open(w, true);\n    w.shutdown();\n    IndexSearcher s = newSearcher(r);\n    TopDocs hits = s.search(new TermQuery(new Term(\"t\", \"1\")), null, 10, new Sort(new SortField(\"f\", SortField.Type.STRING)));\n    assertEquals(2, hits.totalHits);\n    // null sorts first\n    assertEquals(1, hits.scoreDocs[0].doc);\n    assertEquals(0, hits.scoreDocs[1].doc);\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"56572ec06f1407c066d6b7399413178b33176cd8","date":1400495675,"type":5,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/misc/src/test/org/apache/lucene/uninverting/TestFieldCacheSort#testEmptyStringVsNullStringSort().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestSort#testEmptyStringVsNullStringSort().mjava","sourceNew":"  public void testEmptyStringVsNullStringSort() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(\n                        TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    Document doc = new Document();\n    doc.add(newStringField(\"f\", \"\", Field.Store.NO));\n    doc.add(newStringField(\"t\", \"1\", Field.Store.NO));\n    w.addDocument(doc);\n    w.commit();\n    doc = new Document();\n    doc.add(newStringField(\"t\", \"1\", Field.Store.NO));\n    w.addDocument(doc);\n\n    IndexReader r = UninvertingReader.wrap(DirectoryReader.open(w, true), \n                    Collections.singletonMap(\"f\", Type.SORTED));\n    w.shutdown();\n    IndexSearcher s = newSearcher(r);\n    TopDocs hits = s.search(new TermQuery(new Term(\"t\", \"1\")), null, 10, new Sort(new SortField(\"f\", SortField.Type.STRING)));\n    assertEquals(2, hits.totalHits);\n    // null sorts first\n    assertEquals(1, hits.scoreDocs[0].doc);\n    assertEquals(0, hits.scoreDocs[1].doc);\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testEmptyStringVsNullStringSort() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(\n                        TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    Document doc = new Document();\n    doc.add(newStringField(\"f\", \"\", Field.Store.NO));\n    doc.add(newStringField(\"t\", \"1\", Field.Store.NO));\n    w.addDocument(doc);\n    w.commit();\n    doc = new Document();\n    doc.add(newStringField(\"t\", \"1\", Field.Store.NO));\n    w.addDocument(doc);\n\n    IndexReader r = DirectoryReader.open(w, true);\n    w.shutdown();\n    IndexSearcher s = newSearcher(r);\n    TopDocs hits = s.search(new TermQuery(new Term(\"t\", \"1\")), null, 10, new Sort(new SortField(\"f\", SortField.Type.STRING)));\n    assertEquals(2, hits.totalHits);\n    // null sorts first\n    assertEquals(1, hits.scoreDocs[0].doc);\n    assertEquals(0, hits.scoreDocs[1].doc);\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"56572ec06f1407c066d6b7399413178b33176cd8":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a","93dd449115a9247533e44bab47e8429e5dccbc6d"],"04f07771a2a7dd3a395700665ed839c3dae2def2":["e7e8d6f15900ee22ac3cb0a503f15dc952a3580f"],"5f183729ece15402db94402d482f29ebac4f7f54":["e4d968497a1e5d9b3a36621b61b75486ec05ae49"],"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"95303ff3749680c743b9425f9cf99e6e4065e8a8":["3b41f996b22bd5518650f897d050088ff808ec03","5f183729ece15402db94402d482f29ebac4f7f54"],"93dd449115a9247533e44bab47e8429e5dccbc6d":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a","b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c"],"3b41f996b22bd5518650f897d050088ff808ec03":["04f07771a2a7dd3a395700665ed839c3dae2def2","e4d968497a1e5d9b3a36621b61b75486ec05ae49"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["5f183729ece15402db94402d482f29ebac4f7f54"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"e4d968497a1e5d9b3a36621b61b75486ec05ae49":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["93dd449115a9247533e44bab47e8429e5dccbc6d"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c":["93dd449115a9247533e44bab47e8429e5dccbc6d"],"56572ec06f1407c066d6b7399413178b33176cd8":[],"04f07771a2a7dd3a395700665ed839c3dae2def2":["3b41f996b22bd5518650f897d050088ff808ec03","e4d968497a1e5d9b3a36621b61b75486ec05ae49"],"5f183729ece15402db94402d482f29ebac4f7f54":["95303ff3749680c743b9425f9cf99e6e4065e8a8","ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"95303ff3749680c743b9425f9cf99e6e4065e8a8":[],"93dd449115a9247533e44bab47e8429e5dccbc6d":["56572ec06f1407c066d6b7399413178b33176cd8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3b41f996b22bd5518650f897d050088ff808ec03":["95303ff3749680c743b9425f9cf99e6e4065e8a8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c","56572ec06f1407c066d6b7399413178b33176cd8","93dd449115a9247533e44bab47e8429e5dccbc6d"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["e7e8d6f15900ee22ac3cb0a503f15dc952a3580f"],"e4d968497a1e5d9b3a36621b61b75486ec05ae49":["5f183729ece15402db94402d482f29ebac4f7f54","3b41f996b22bd5518650f897d050088ff808ec03"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["56572ec06f1407c066d6b7399413178b33176cd8","95303ff3749680c743b9425f9cf99e6e4065e8a8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}