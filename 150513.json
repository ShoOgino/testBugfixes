{"path":"solr/core/src/java/org/apache/solr/search/SolrCacheHolder#reloadCache(RuntimeLib).mjava","commits":[{"id":"4af46531b18b232091de91d62b90e917445bd3d8","date":1566244186,"type":0,"author":"noble","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/SolrCacheHolder#reloadCache(RuntimeLib).mjava","pathOld":"/dev/null","sourceNew":"  private void reloadCache(RuntimeLib lib) {\n    if (lib.getZnodeVersion() > info.znodeVersion) {\n      info = new CacheConfig.CacheInfo(info.cfg, info.core);\n      delegate = info.cache;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6e360143e9d6f677ecfe06b0c5204ee70bdb2a3c","date":1566455239,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/SolrCacheHolder#reloadCache(RuntimeLib).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/SolrCacheHolder#reloadCache(RuntimeLib).mjava","sourceNew":"  private void reloadCache(RuntimeLib lib) {\n    int znodeVersion = info.runtimeLib == null ? -1 : info.runtimeLib.getZnodeVersion();\n    if (lib.getZnodeVersion() > znodeVersion) {\n      log.info(\"Cache {} being reloaded, package: {} loaded from: {} \", delegate.getClass().getSimpleName(), info.pkg, lib.getUrl());\n      info = new CacheConfig.CacheInfo(info.cfg, info.core);\n      delegate.close();\n      delegate = info.cache;\n      delegate.initializeMetrics(metrics);\n\n    }\n  }\n\n","sourceOld":"  private void reloadCache(RuntimeLib lib) {\n    if (lib.getZnodeVersion() > info.znodeVersion) {\n      info = new CacheConfig.CacheInfo(info.cfg, info.core);\n      delegate = info.cache;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17c468812fc0c60f3d66b176339dc70564d8c3cb","date":1567918667,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/SolrCacheHolder#reloadCache(RuntimeLib).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/SolrCacheHolder#reloadCache(RuntimeLib).mjava","sourceNew":"  private void reloadCache(RuntimeLib lib) {\n    int znodeVersion = info.runtimeLib == null ? -1 : info.runtimeLib.getZnodeVersion();\n    if (lib.getZnodeVersion() > znodeVersion) {\n      log.info(\"Cache {} being reloaded, package: {} loaded from: {} \", delegate.getClass().getSimpleName(), info.pkg, lib.getUrl());\n      info = new CacheConfig.CacheInfo(info.cfg, info.core);\n      delegate.close();\n      delegate = info.cache;\n      if(metricsInfo != null){\n        metricsInfo.init(delegate);\n\n      }\n\n    }\n  }\n\n","sourceOld":"  private void reloadCache(RuntimeLib lib) {\n    int znodeVersion = info.runtimeLib == null ? -1 : info.runtimeLib.getZnodeVersion();\n    if (lib.getZnodeVersion() > znodeVersion) {\n      log.info(\"Cache {} being reloaded, package: {} loaded from: {} \", delegate.getClass().getSimpleName(), info.pkg, lib.getUrl());\n      info = new CacheConfig.CacheInfo(info.cfg, info.core);\n      delegate.close();\n      delegate = info.cache;\n      delegate.initializeMetrics(metrics);\n\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"52275555c0ae3b55430cef26ad7fca3f02440944","date":1568033329,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/SolrCacheHolder#reloadCache(RuntimeLib).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/SolrCacheHolder#reloadCache(RuntimeLib).mjava","sourceNew":"  private void reloadCache(RuntimeLib lib) {\n    int znodeVersion = info.runtimeLib == null ? -1 : info.runtimeLib.getZnodeVersion();\n    if (lib.getZnodeVersion() > znodeVersion) {\n      log.info(\"Cache {} being reloaded, package: {} loaded from: {} \", delegate.getClass().getSimpleName(), info.pkg, lib.getUrl());\n      info = new CacheConfig.CacheInfo(info.cfg, info.core);\n      delegate.close();\n      delegate = info.cache;\n      if(metricsInfo != null){\n        metricsInfo.init(delegate);\n\n      }\n\n    }\n  }\n\n","sourceOld":"  private void reloadCache(RuntimeLib lib) {\n    int znodeVersion = info.runtimeLib == null ? -1 : info.runtimeLib.getZnodeVersion();\n    if (lib.getZnodeVersion() > znodeVersion) {\n      log.info(\"Cache {} being reloaded, package: {} loaded from: {} \", delegate.getClass().getSimpleName(), info.pkg, lib.getUrl());\n      info = new CacheConfig.CacheInfo(info.cfg, info.core);\n      delegate.close();\n      delegate = info.cache;\n      delegate.initializeMetrics(metrics);\n\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c44cc06c26e456fe9c215072b79fce30babe3975","date":1570365040,"type":4,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/search/SolrCacheHolder#reloadCache(RuntimeLib).mjava","sourceNew":null,"sourceOld":"  private void reloadCache(RuntimeLib lib) {\n    int znodeVersion = info.runtimeLib == null ? -1 : info.runtimeLib.getZnodeVersion();\n    if (lib.getZnodeVersion() > znodeVersion) {\n      log.info(\"Cache {} being reloaded, package: {} loaded from: {} \", delegate.getClass().getSimpleName(), info.pkg, lib.getUrl());\n      info = new CacheConfig.CacheInfo(info.cfg, info.core);\n      delegate.close();\n      delegate = info.cache;\n      if(metricsInfo != null){\n        metricsInfo.init(delegate);\n\n      }\n\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b0b597c65628ca9e73913a07e81691f8229bae35","date":1571224353,"type":4,"author":"jimczi","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/search/SolrCacheHolder#reloadCache(RuntimeLib).mjava","sourceNew":null,"sourceOld":"  private void reloadCache(RuntimeLib lib) {\n    int znodeVersion = info.runtimeLib == null ? -1 : info.runtimeLib.getZnodeVersion();\n    if (lib.getZnodeVersion() > znodeVersion) {\n      log.info(\"Cache {} being reloaded, package: {} loaded from: {} \", delegate.getClass().getSimpleName(), info.pkg, lib.getUrl());\n      info = new CacheConfig.CacheInfo(info.cfg, info.core);\n      delegate.close();\n      delegate = info.cache;\n      if(metricsInfo != null){\n        metricsInfo.init(delegate);\n\n      }\n\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"52275555c0ae3b55430cef26ad7fca3f02440944":["6e360143e9d6f677ecfe06b0c5204ee70bdb2a3c","17c468812fc0c60f3d66b176339dc70564d8c3cb"],"4af46531b18b232091de91d62b90e917445bd3d8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"6e360143e9d6f677ecfe06b0c5204ee70bdb2a3c":["4af46531b18b232091de91d62b90e917445bd3d8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c44cc06c26e456fe9c215072b79fce30babe3975":["52275555c0ae3b55430cef26ad7fca3f02440944"],"17c468812fc0c60f3d66b176339dc70564d8c3cb":["6e360143e9d6f677ecfe06b0c5204ee70bdb2a3c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c44cc06c26e456fe9c215072b79fce30babe3975"],"b0b597c65628ca9e73913a07e81691f8229bae35":["52275555c0ae3b55430cef26ad7fca3f02440944","c44cc06c26e456fe9c215072b79fce30babe3975"]},"commit2Childs":{"52275555c0ae3b55430cef26ad7fca3f02440944":["c44cc06c26e456fe9c215072b79fce30babe3975","b0b597c65628ca9e73913a07e81691f8229bae35"],"4af46531b18b232091de91d62b90e917445bd3d8":["6e360143e9d6f677ecfe06b0c5204ee70bdb2a3c"],"6e360143e9d6f677ecfe06b0c5204ee70bdb2a3c":["52275555c0ae3b55430cef26ad7fca3f02440944","17c468812fc0c60f3d66b176339dc70564d8c3cb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4af46531b18b232091de91d62b90e917445bd3d8"],"c44cc06c26e456fe9c215072b79fce30babe3975":["cd5edd1f2b162a5cfa08efd17851a07373a96817","b0b597c65628ca9e73913a07e81691f8229bae35"],"17c468812fc0c60f3d66b176339dc70564d8c3cb":["52275555c0ae3b55430cef26ad7fca3f02440944"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"b0b597c65628ca9e73913a07e81691f8229bae35":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","b0b597c65628ca9e73913a07e81691f8229bae35"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}