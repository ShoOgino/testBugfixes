{"path":"solr/core/src/test/org/apache/solr/cloud/ZkTestServer#run().mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkTestServer#run().mjava","pathOld":"solr/src/test/org/apache/solr/cloud/ZkTestServer#run().mjava","sourceNew":"  public void run() throws InterruptedException {\n    // we don't call super.setUp\n    zooThread = new Thread() {\n      \n      @Override\n      public void run() {\n        ServerConfig config = new ServerConfig() {\n\n          {\n            setClientPort(ZkTestServer.this.clientPort);\n            this.dataDir = zkDir;\n            this.dataLogDir = zkDir;\n            this.tickTime = 1500;\n          }\n          \n          public void setClientPort(int clientPort) {\n            if (clientPortAddress != null) {\n              try {\n                this.clientPortAddress = new InetSocketAddress(\n                        InetAddress.getByName(clientPortAddress.getHostName()), clientPort);\n              } catch (UnknownHostException e) {\n                throw new RuntimeException(e);\n              }\n            } else {\n              this.clientPortAddress = new InetSocketAddress(clientPort);\n            }\n          }\n        };\n\n        try {\n          zkServer.runFromConfig(config);\n        } catch (Throwable e) {\n          throw new RuntimeException(e);\n        }\n      }\n    };\n\n    zooThread.setDaemon(true);\n    zooThread.start();\n\n    int cnt = 0;\n    int port = -1;\n    try {\n       port = getPort();\n    } catch(IllegalStateException e) {\n      \n    }\n    while (port < 1) {\n      Thread.sleep(100);\n      try {\n        port = getPort();\n      } catch(IllegalStateException e) {\n        \n      }\n      if (cnt == 40) {\n        throw new RuntimeException(\"Could not get the port for ZooKeeper server\");\n      }\n      cnt++;\n    }\n  }\n\n","sourceOld":"  public void run() throws InterruptedException {\n    // we don't call super.setUp\n    zooThread = new Thread() {\n      \n      @Override\n      public void run() {\n        ServerConfig config = new ServerConfig() {\n\n          {\n            setClientPort(ZkTestServer.this.clientPort);\n            this.dataDir = zkDir;\n            this.dataLogDir = zkDir;\n            this.tickTime = 1500;\n          }\n          \n          public void setClientPort(int clientPort) {\n            if (clientPortAddress != null) {\n              try {\n                this.clientPortAddress = new InetSocketAddress(\n                        InetAddress.getByName(clientPortAddress.getHostName()), clientPort);\n              } catch (UnknownHostException e) {\n                throw new RuntimeException(e);\n              }\n            } else {\n              this.clientPortAddress = new InetSocketAddress(clientPort);\n            }\n          }\n        };\n\n        try {\n          zkServer.runFromConfig(config);\n        } catch (Throwable e) {\n          throw new RuntimeException(e);\n        }\n      }\n    };\n\n    zooThread.setDaemon(true);\n    zooThread.start();\n\n    int cnt = 0;\n    int port = -1;\n    try {\n       port = getPort();\n    } catch(IllegalStateException e) {\n      \n    }\n    while (port < 1) {\n      Thread.sleep(100);\n      try {\n        port = getPort();\n      } catch(IllegalStateException e) {\n        \n      }\n      if (cnt == 40) {\n        throw new RuntimeException(\"Could not get the port for ZooKeeper server\");\n      }\n      cnt++;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkTestServer#run().mjava","pathOld":"solr/src/test/org/apache/solr/cloud/ZkTestServer#run().mjava","sourceNew":"  public void run() throws InterruptedException {\n    // we don't call super.setUp\n    zooThread = new Thread() {\n      \n      @Override\n      public void run() {\n        ServerConfig config = new ServerConfig() {\n\n          {\n            setClientPort(ZkTestServer.this.clientPort);\n            this.dataDir = zkDir;\n            this.dataLogDir = zkDir;\n            this.tickTime = 1500;\n          }\n          \n          public void setClientPort(int clientPort) {\n            if (clientPortAddress != null) {\n              try {\n                this.clientPortAddress = new InetSocketAddress(\n                        InetAddress.getByName(clientPortAddress.getHostName()), clientPort);\n              } catch (UnknownHostException e) {\n                throw new RuntimeException(e);\n              }\n            } else {\n              this.clientPortAddress = new InetSocketAddress(clientPort);\n            }\n          }\n        };\n\n        try {\n          zkServer.runFromConfig(config);\n        } catch (Throwable e) {\n          throw new RuntimeException(e);\n        }\n      }\n    };\n\n    zooThread.setDaemon(true);\n    zooThread.start();\n\n    int cnt = 0;\n    int port = -1;\n    try {\n       port = getPort();\n    } catch(IllegalStateException e) {\n      \n    }\n    while (port < 1) {\n      Thread.sleep(100);\n      try {\n        port = getPort();\n      } catch(IllegalStateException e) {\n        \n      }\n      if (cnt == 40) {\n        throw new RuntimeException(\"Could not get the port for ZooKeeper server\");\n      }\n      cnt++;\n    }\n  }\n\n","sourceOld":"  public void run() throws InterruptedException {\n    // we don't call super.setUp\n    zooThread = new Thread() {\n      \n      @Override\n      public void run() {\n        ServerConfig config = new ServerConfig() {\n\n          {\n            setClientPort(ZkTestServer.this.clientPort);\n            this.dataDir = zkDir;\n            this.dataLogDir = zkDir;\n            this.tickTime = 1500;\n          }\n          \n          public void setClientPort(int clientPort) {\n            if (clientPortAddress != null) {\n              try {\n                this.clientPortAddress = new InetSocketAddress(\n                        InetAddress.getByName(clientPortAddress.getHostName()), clientPort);\n              } catch (UnknownHostException e) {\n                throw new RuntimeException(e);\n              }\n            } else {\n              this.clientPortAddress = new InetSocketAddress(clientPort);\n            }\n          }\n        };\n\n        try {\n          zkServer.runFromConfig(config);\n        } catch (Throwable e) {\n          throw new RuntimeException(e);\n        }\n      }\n    };\n\n    zooThread.setDaemon(true);\n    zooThread.start();\n\n    int cnt = 0;\n    int port = -1;\n    try {\n       port = getPort();\n    } catch(IllegalStateException e) {\n      \n    }\n    while (port < 1) {\n      Thread.sleep(100);\n      try {\n        port = getPort();\n      } catch(IllegalStateException e) {\n        \n      }\n      if (cnt == 40) {\n        throw new RuntimeException(\"Could not get the port for ZooKeeper server\");\n      }\n      cnt++;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkTestServer#run().mjava","pathOld":"solr/src/test/org/apache/solr/cloud/ZkTestServer#run().mjava","sourceNew":"  public void run() throws InterruptedException {\n    // we don't call super.setUp\n    zooThread = new Thread() {\n      \n      @Override\n      public void run() {\n        ServerConfig config = new ServerConfig() {\n\n          {\n            setClientPort(ZkTestServer.this.clientPort);\n            this.dataDir = zkDir;\n            this.dataLogDir = zkDir;\n            this.tickTime = 1500;\n          }\n          \n          public void setClientPort(int clientPort) {\n            if (clientPortAddress != null) {\n              try {\n                this.clientPortAddress = new InetSocketAddress(\n                        InetAddress.getByName(clientPortAddress.getHostName()), clientPort);\n              } catch (UnknownHostException e) {\n                throw new RuntimeException(e);\n              }\n            } else {\n              this.clientPortAddress = new InetSocketAddress(clientPort);\n            }\n          }\n        };\n\n        try {\n          zkServer.runFromConfig(config);\n        } catch (Throwable e) {\n          throw new RuntimeException(e);\n        }\n      }\n    };\n\n    zooThread.setDaemon(true);\n    zooThread.start();\n\n    int cnt = 0;\n    int port = -1;\n    try {\n       port = getPort();\n    } catch(IllegalStateException e) {\n      \n    }\n    while (port < 1) {\n      Thread.sleep(100);\n      try {\n        port = getPort();\n      } catch(IllegalStateException e) {\n        \n      }\n      if (cnt == 40) {\n        throw new RuntimeException(\"Could not get the port for ZooKeeper server\");\n      }\n      cnt++;\n    }\n  }\n\n","sourceOld":"  public void run() throws InterruptedException {\n    // we don't call super.setUp\n    zooThread = new Thread() {\n      \n      @Override\n      public void run() {\n        ServerConfig config = new ServerConfig() {\n\n          {\n            setClientPort(ZkTestServer.this.clientPort);\n            this.dataDir = zkDir;\n            this.dataLogDir = zkDir;\n            this.tickTime = 1500;\n          }\n          \n          public void setClientPort(int clientPort) {\n            if (clientPortAddress != null) {\n              try {\n                this.clientPortAddress = new InetSocketAddress(\n                        InetAddress.getByName(clientPortAddress.getHostName()), clientPort);\n              } catch (UnknownHostException e) {\n                throw new RuntimeException(e);\n              }\n            } else {\n              this.clientPortAddress = new InetSocketAddress(clientPort);\n            }\n          }\n        };\n\n        try {\n          zkServer.runFromConfig(config);\n        } catch (Throwable e) {\n          throw new RuntimeException(e);\n        }\n      }\n    };\n\n    zooThread.setDaemon(true);\n    zooThread.start();\n\n    int cnt = 0;\n    int port = -1;\n    try {\n       port = getPort();\n    } catch(IllegalStateException e) {\n      \n    }\n    while (port < 1) {\n      Thread.sleep(100);\n      try {\n        port = getPort();\n      } catch(IllegalStateException e) {\n        \n      }\n      if (cnt == 40) {\n        throw new RuntimeException(\"Could not get the port for ZooKeeper server\");\n      }\n      cnt++;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2c007e7c4cf8c55bc2a5884e315123afaaeec87f","date":1327520966,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkTestServer#run().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ZkTestServer#run().mjava","sourceNew":"  public void run() throws InterruptedException {\n    log.info(\"STARTING ZK TEST SERVER\");\n    // we don't call super.setUp\n    zooThread = new Thread() {\n      \n      @Override\n      public void run() {\n        ServerConfig config = new ServerConfig() {\n\n          {\n            setClientPort(ZkTestServer.this.clientPort);\n            this.dataDir = zkDir;\n            this.dataLogDir = zkDir;\n            this.tickTime = theTickTime;\n          }\n          \n          public void setClientPort(int clientPort) {\n            if (clientPortAddress != null) {\n              try {\n                this.clientPortAddress = new InetSocketAddress(\n                        InetAddress.getByName(clientPortAddress.getHostName()), clientPort);\n              } catch (UnknownHostException e) {\n                throw new RuntimeException(e);\n              }\n            } else {\n              this.clientPortAddress = new InetSocketAddress(clientPort);\n            }\n          }\n        };\n\n        try {\n          zkServer.runFromConfig(config);\n        } catch (Throwable e) {\n          throw new RuntimeException(e);\n        }\n      }\n    };\n\n    zooThread.setDaemon(true);\n    zooThread.start();\n\n    int cnt = 0;\n    int port = -1;\n    try {\n       port = getPort();\n    } catch(IllegalStateException e) {\n      \n    }\n    while (port < 1) {\n      Thread.sleep(100);\n      try {\n        port = getPort();\n      } catch(IllegalStateException e) {\n        \n      }\n      if (cnt == 100) {\n        throw new RuntimeException(\"Could not get the port for ZooKeeper server\");\n      }\n      cnt++;\n    }\n  }\n\n","sourceOld":"  public void run() throws InterruptedException {\n    // we don't call super.setUp\n    zooThread = new Thread() {\n      \n      @Override\n      public void run() {\n        ServerConfig config = new ServerConfig() {\n\n          {\n            setClientPort(ZkTestServer.this.clientPort);\n            this.dataDir = zkDir;\n            this.dataLogDir = zkDir;\n            this.tickTime = 1500;\n          }\n          \n          public void setClientPort(int clientPort) {\n            if (clientPortAddress != null) {\n              try {\n                this.clientPortAddress = new InetSocketAddress(\n                        InetAddress.getByName(clientPortAddress.getHostName()), clientPort);\n              } catch (UnknownHostException e) {\n                throw new RuntimeException(e);\n              }\n            } else {\n              this.clientPortAddress = new InetSocketAddress(clientPort);\n            }\n          }\n        };\n\n        try {\n          zkServer.runFromConfig(config);\n        } catch (Throwable e) {\n          throw new RuntimeException(e);\n        }\n      }\n    };\n\n    zooThread.setDaemon(true);\n    zooThread.start();\n\n    int cnt = 0;\n    int port = -1;\n    try {\n       port = getPort();\n    } catch(IllegalStateException e) {\n      \n    }\n    while (port < 1) {\n      Thread.sleep(100);\n      try {\n        port = getPort();\n      } catch(IllegalStateException e) {\n        \n      }\n      if (cnt == 40) {\n        throw new RuntimeException(\"Could not get the port for ZooKeeper server\");\n      }\n      cnt++;\n    }\n  }\n\n","bugFix":null,"bugIntro":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f","bb222a3f9d9421d5c95afce73013fbd8de07ea1f","bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","date":1327523564,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkTestServer#run().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ZkTestServer#run().mjava","sourceNew":"  public void run() throws InterruptedException {\n    log.info(\"STARTING ZK TEST SERVER\");\n    // we don't call super.setUp\n    zooThread = new Thread() {\n      \n      @Override\n      public void run() {\n        ServerConfig config = new ServerConfig() {\n\n          {\n            setClientPort(ZkTestServer.this.clientPort);\n            this.dataDir = zkDir;\n            this.dataLogDir = zkDir;\n            this.tickTime = theTickTime;\n          }\n          \n          public void setClientPort(int clientPort) {\n            if (clientPortAddress != null) {\n              try {\n                this.clientPortAddress = new InetSocketAddress(\n                        InetAddress.getByName(clientPortAddress.getHostName()), clientPort);\n              } catch (UnknownHostException e) {\n                throw new RuntimeException(e);\n              }\n            } else {\n              this.clientPortAddress = new InetSocketAddress(clientPort);\n            }\n          }\n        };\n\n        try {\n          zkServer.runFromConfig(config);\n        } catch (Throwable e) {\n          throw new RuntimeException(e);\n        }\n      }\n    };\n\n    zooThread.setDaemon(true);\n    zooThread.start();\n\n    int cnt = 0;\n    int port = -1;\n    try {\n       port = getPort();\n    } catch(IllegalStateException e) {\n      \n    }\n    while (port < 1) {\n      Thread.sleep(100);\n      try {\n        port = getPort();\n      } catch(IllegalStateException e) {\n        \n      }\n      if (cnt == 100) {\n        throw new RuntimeException(\"Could not get the port for ZooKeeper server\");\n      }\n      cnt++;\n    }\n  }\n\n","sourceOld":"  public void run() throws InterruptedException {\n    // we don't call super.setUp\n    zooThread = new Thread() {\n      \n      @Override\n      public void run() {\n        ServerConfig config = new ServerConfig() {\n\n          {\n            setClientPort(ZkTestServer.this.clientPort);\n            this.dataDir = zkDir;\n            this.dataLogDir = zkDir;\n            this.tickTime = 1500;\n          }\n          \n          public void setClientPort(int clientPort) {\n            if (clientPortAddress != null) {\n              try {\n                this.clientPortAddress = new InetSocketAddress(\n                        InetAddress.getByName(clientPortAddress.getHostName()), clientPort);\n              } catch (UnknownHostException e) {\n                throw new RuntimeException(e);\n              }\n            } else {\n              this.clientPortAddress = new InetSocketAddress(clientPort);\n            }\n          }\n        };\n\n        try {\n          zkServer.runFromConfig(config);\n        } catch (Throwable e) {\n          throw new RuntimeException(e);\n        }\n      }\n    };\n\n    zooThread.setDaemon(true);\n    zooThread.start();\n\n    int cnt = 0;\n    int port = -1;\n    try {\n       port = getPort();\n    } catch(IllegalStateException e) {\n      \n    }\n    while (port < 1) {\n      Thread.sleep(100);\n      try {\n        port = getPort();\n      } catch(IllegalStateException e) {\n        \n      }\n      if (cnt == 40) {\n        throw new RuntimeException(\"Could not get the port for ZooKeeper server\");\n      }\n      cnt++;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0d22ac6a4146774c1bc8400160fc0b6150294e92","date":1327528604,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkTestServer#run().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ZkTestServer#run().mjava","sourceNew":"  public void run() throws InterruptedException {\n    log.info(\"STARTING ZK TEST SERVER\");\n    // we don't call super.setUp\n    zooThread = new Thread() {\n      \n      @Override\n      public void run() {\n        ServerConfig config = new ServerConfig() {\n\n          {\n            setClientPort(ZkTestServer.this.clientPort);\n            this.dataDir = zkDir;\n            this.dataLogDir = zkDir;\n            this.tickTime = theTickTime;\n          }\n          \n          public void setClientPort(int clientPort) {\n            if (clientPortAddress != null) {\n              try {\n                this.clientPortAddress = new InetSocketAddress(\n                        InetAddress.getByName(clientPortAddress.getHostName()), clientPort);\n              } catch (UnknownHostException e) {\n                throw new RuntimeException(e);\n              }\n            } else {\n              this.clientPortAddress = new InetSocketAddress(clientPort);\n            }\n          }\n        };\n\n        try {\n          zkServer.runFromConfig(config);\n        } catch (Throwable e) {\n          throw new RuntimeException(e);\n        }\n      }\n    };\n\n    zooThread.setDaemon(true);\n    zooThread.start();\n\n    int cnt = 0;\n    int port = -1;\n    try {\n       port = getPort();\n    } catch(IllegalStateException e) {\n      \n    }\n    while (port < 1) {\n      Thread.sleep(100);\n      try {\n        port = getPort();\n      } catch(IllegalStateException e) {\n        \n      }\n      if (cnt == 100) {\n        throw new RuntimeException(\"Could not get the port for ZooKeeper server\");\n      }\n      cnt++;\n    }\n  }\n\n","sourceOld":"  public void run() throws InterruptedException {\n    // we don't call super.setUp\n    zooThread = new Thread() {\n      \n      @Override\n      public void run() {\n        ServerConfig config = new ServerConfig() {\n\n          {\n            setClientPort(ZkTestServer.this.clientPort);\n            this.dataDir = zkDir;\n            this.dataLogDir = zkDir;\n            this.tickTime = 1500;\n          }\n          \n          public void setClientPort(int clientPort) {\n            if (clientPortAddress != null) {\n              try {\n                this.clientPortAddress = new InetSocketAddress(\n                        InetAddress.getByName(clientPortAddress.getHostName()), clientPort);\n              } catch (UnknownHostException e) {\n                throw new RuntimeException(e);\n              }\n            } else {\n              this.clientPortAddress = new InetSocketAddress(clientPort);\n            }\n          }\n        };\n\n        try {\n          zkServer.runFromConfig(config);\n        } catch (Throwable e) {\n          throw new RuntimeException(e);\n        }\n      }\n    };\n\n    zooThread.setDaemon(true);\n    zooThread.start();\n\n    int cnt = 0;\n    int port = -1;\n    try {\n       port = getPort();\n    } catch(IllegalStateException e) {\n      \n    }\n    while (port < 1) {\n      Thread.sleep(100);\n      try {\n        port = getPort();\n      } catch(IllegalStateException e) {\n        \n      }\n      if (cnt == 40) {\n        throw new RuntimeException(\"Could not get the port for ZooKeeper server\");\n      }\n      cnt++;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6b834dd353486678973f4157b3ba402ac3a7ca88","date":1329782329,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkTestServer#run().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ZkTestServer#run().mjava","sourceNew":"  public void run() throws InterruptedException {\n    log.info(\"STARTING ZK TEST SERVER\");\n    // we don't call super.setUp\n    zooThread = new Thread() {\n      \n      @Override\n      public void run() {\n        ServerConfig config = new ServerConfig() {\n\n          {\n            setClientPort(ZkTestServer.this.clientPort);\n            this.dataDir = zkDir;\n            this.dataLogDir = zkDir;\n            this.tickTime = theTickTime;\n          }\n          \n          public void setClientPort(int clientPort) {\n            if (clientPortAddress != null) {\n              try {\n                this.clientPortAddress = new InetSocketAddress(\n                        InetAddress.getByName(clientPortAddress.getHostName()), clientPort);\n              } catch (UnknownHostException e) {\n                throw new RuntimeException(e);\n              }\n            } else {\n              this.clientPortAddress = new InetSocketAddress(clientPort);\n            }\n          }\n        };\n\n        try {\n          zkServer.runFromConfig(config);\n        } catch (Throwable e) {\n          throw new RuntimeException(e);\n        }\n      }\n    };\n\n    zooThread.setDaemon(true);\n    zooThread.start();\n\n    int cnt = 0;\n    int port = -1;\n    try {\n       port = getPort();\n    } catch(IllegalStateException e) {\n      \n    }\n    while (port < 1) {\n      Thread.sleep(100);\n      try {\n        port = getPort();\n      } catch(IllegalStateException e) {\n        \n      }\n      if (cnt == 500) {\n        throw new RuntimeException(\"Could not get the port for ZooKeeper server\");\n      }\n      cnt++;\n    }\n  }\n\n","sourceOld":"  public void run() throws InterruptedException {\n    log.info(\"STARTING ZK TEST SERVER\");\n    // we don't call super.setUp\n    zooThread = new Thread() {\n      \n      @Override\n      public void run() {\n        ServerConfig config = new ServerConfig() {\n\n          {\n            setClientPort(ZkTestServer.this.clientPort);\n            this.dataDir = zkDir;\n            this.dataLogDir = zkDir;\n            this.tickTime = theTickTime;\n          }\n          \n          public void setClientPort(int clientPort) {\n            if (clientPortAddress != null) {\n              try {\n                this.clientPortAddress = new InetSocketAddress(\n                        InetAddress.getByName(clientPortAddress.getHostName()), clientPort);\n              } catch (UnknownHostException e) {\n                throw new RuntimeException(e);\n              }\n            } else {\n              this.clientPortAddress = new InetSocketAddress(clientPort);\n            }\n          }\n        };\n\n        try {\n          zkServer.runFromConfig(config);\n        } catch (Throwable e) {\n          throw new RuntimeException(e);\n        }\n      }\n    };\n\n    zooThread.setDaemon(true);\n    zooThread.start();\n\n    int cnt = 0;\n    int port = -1;\n    try {\n       port = getPort();\n    } catch(IllegalStateException e) {\n      \n    }\n    while (port < 1) {\n      Thread.sleep(100);\n      try {\n        port = getPort();\n      } catch(IllegalStateException e) {\n        \n      }\n      if (cnt == 100) {\n        throw new RuntimeException(\"Could not get the port for ZooKeeper server\");\n      }\n      cnt++;\n    }\n  }\n\n","bugFix":null,"bugIntro":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f","bb222a3f9d9421d5c95afce73013fbd8de07ea1f","bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","date":1331075828,"type":3,"author":"Ryan McKinley","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ZkTestServer#run().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ZkTestServer#run().mjava","sourceNew":"  public void run() throws InterruptedException {\n    log.info(\"STARTING ZK TEST SERVER\");\n    // we don't call super.setUp\n    zooThread = new Thread() {\n      \n      @Override\n      public void run() {\n        ServerConfig config = new ServerConfig() {\n\n          {\n            setClientPort(ZkTestServer.this.clientPort);\n            this.dataDir = zkDir;\n            this.dataLogDir = zkDir;\n            this.tickTime = theTickTime;\n          }\n          \n          public void setClientPort(int clientPort) {\n            if (clientPortAddress != null) {\n              try {\n                this.clientPortAddress = new InetSocketAddress(\n                        InetAddress.getByName(clientPortAddress.getHostName()), clientPort);\n              } catch (UnknownHostException e) {\n                throw new RuntimeException(e);\n              }\n            } else {\n              this.clientPortAddress = new InetSocketAddress(clientPort);\n            }\n          }\n        };\n\n        try {\n          zkServer.runFromConfig(config);\n        } catch (Throwable e) {\n          throw new RuntimeException(e);\n        }\n      }\n    };\n\n    zooThread.setDaemon(true);\n    zooThread.start();\n\n    int cnt = 0;\n    int port = -1;\n    try {\n       port = getPort();\n    } catch(IllegalStateException e) {\n      \n    }\n    while (port < 1) {\n      Thread.sleep(100);\n      try {\n        port = getPort();\n      } catch(IllegalStateException e) {\n        \n      }\n      if (cnt == 500) {\n        throw new RuntimeException(\"Could not get the port for ZooKeeper server\");\n      }\n      cnt++;\n    }\n  }\n\n","sourceOld":"  public void run() throws InterruptedException {\n    log.info(\"STARTING ZK TEST SERVER\");\n    // we don't call super.setUp\n    zooThread = new Thread() {\n      \n      @Override\n      public void run() {\n        ServerConfig config = new ServerConfig() {\n\n          {\n            setClientPort(ZkTestServer.this.clientPort);\n            this.dataDir = zkDir;\n            this.dataLogDir = zkDir;\n            this.tickTime = theTickTime;\n          }\n          \n          public void setClientPort(int clientPort) {\n            if (clientPortAddress != null) {\n              try {\n                this.clientPortAddress = new InetSocketAddress(\n                        InetAddress.getByName(clientPortAddress.getHostName()), clientPort);\n              } catch (UnknownHostException e) {\n                throw new RuntimeException(e);\n              }\n            } else {\n              this.clientPortAddress = new InetSocketAddress(clientPort);\n            }\n          }\n        };\n\n        try {\n          zkServer.runFromConfig(config);\n        } catch (Throwable e) {\n          throw new RuntimeException(e);\n        }\n      }\n    };\n\n    zooThread.setDaemon(true);\n    zooThread.start();\n\n    int cnt = 0;\n    int port = -1;\n    try {\n       port = getPort();\n    } catch(IllegalStateException e) {\n      \n    }\n    while (port < 1) {\n      Thread.sleep(100);\n      try {\n        port = getPort();\n      } catch(IllegalStateException e) {\n        \n      }\n      if (cnt == 100) {\n        throw new RuntimeException(\"Could not get the port for ZooKeeper server\");\n      }\n      cnt++;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2c30e4c1cee08b3b229a77991882594fe7250b66","date":1344448871,"type":5,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/ZkTestServer#run().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ZkTestServer#run().mjava","sourceNew":"  public void run() throws InterruptedException {\n    log.info(\"STARTING ZK TEST SERVER\");\n    // we don't call super.setUp\n    zooThread = new Thread() {\n      \n      @Override\n      public void run() {\n        ServerConfig config = new ServerConfig() {\n\n          {\n            setClientPort(ZkTestServer.this.clientPort);\n            this.dataDir = zkDir;\n            this.dataLogDir = zkDir;\n            this.tickTime = theTickTime;\n          }\n          \n          public void setClientPort(int clientPort) {\n            if (clientPortAddress != null) {\n              try {\n                this.clientPortAddress = new InetSocketAddress(\n                        InetAddress.getByName(clientPortAddress.getHostName()), clientPort);\n              } catch (UnknownHostException e) {\n                throw new RuntimeException(e);\n              }\n            } else {\n              this.clientPortAddress = new InetSocketAddress(clientPort);\n            }\n          }\n        };\n\n        try {\n          zkServer.runFromConfig(config);\n        } catch (Throwable e) {\n          throw new RuntimeException(e);\n        }\n      }\n    };\n\n    zooThread.setDaemon(true);\n    zooThread.start();\n\n    int cnt = 0;\n    int port = -1;\n    try {\n       port = getPort();\n    } catch(IllegalStateException e) {\n      \n    }\n    while (port < 1) {\n      Thread.sleep(100);\n      try {\n        port = getPort();\n      } catch(IllegalStateException e) {\n        \n      }\n      if (cnt == 500) {\n        throw new RuntimeException(\"Could not get the port for ZooKeeper server\");\n      }\n      cnt++;\n    }\n  }\n\n","sourceOld":"  public void run() throws InterruptedException {\n    log.info(\"STARTING ZK TEST SERVER\");\n    // we don't call super.setUp\n    zooThread = new Thread() {\n      \n      @Override\n      public void run() {\n        ServerConfig config = new ServerConfig() {\n\n          {\n            setClientPort(ZkTestServer.this.clientPort);\n            this.dataDir = zkDir;\n            this.dataLogDir = zkDir;\n            this.tickTime = theTickTime;\n          }\n          \n          public void setClientPort(int clientPort) {\n            if (clientPortAddress != null) {\n              try {\n                this.clientPortAddress = new InetSocketAddress(\n                        InetAddress.getByName(clientPortAddress.getHostName()), clientPort);\n              } catch (UnknownHostException e) {\n                throw new RuntimeException(e);\n              }\n            } else {\n              this.clientPortAddress = new InetSocketAddress(clientPort);\n            }\n          }\n        };\n\n        try {\n          zkServer.runFromConfig(config);\n        } catch (Throwable e) {\n          throw new RuntimeException(e);\n        }\n      }\n    };\n\n    zooThread.setDaemon(true);\n    zooThread.start();\n\n    int cnt = 0;\n    int port = -1;\n    try {\n       port = getPort();\n    } catch(IllegalStateException e) {\n      \n    }\n    while (port < 1) {\n      Thread.sleep(100);\n      try {\n        port = getPort();\n      } catch(IllegalStateException e) {\n        \n      }\n      if (cnt == 500) {\n        throw new RuntimeException(\"Could not get the port for ZooKeeper server\");\n      }\n      cnt++;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d6f074e73200c07d54f242d3880a8da5a35ff97b","date":1344507653,"type":5,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/ZkTestServer#run().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ZkTestServer#run().mjava","sourceNew":"  public void run() throws InterruptedException {\n    log.info(\"STARTING ZK TEST SERVER\");\n    // we don't call super.setUp\n    zooThread = new Thread() {\n      \n      @Override\n      public void run() {\n        ServerConfig config = new ServerConfig() {\n\n          {\n            setClientPort(ZkTestServer.this.clientPort);\n            this.dataDir = zkDir;\n            this.dataLogDir = zkDir;\n            this.tickTime = theTickTime;\n          }\n          \n          public void setClientPort(int clientPort) {\n            if (clientPortAddress != null) {\n              try {\n                this.clientPortAddress = new InetSocketAddress(\n                        InetAddress.getByName(clientPortAddress.getHostName()), clientPort);\n              } catch (UnknownHostException e) {\n                throw new RuntimeException(e);\n              }\n            } else {\n              this.clientPortAddress = new InetSocketAddress(clientPort);\n            }\n          }\n        };\n\n        try {\n          zkServer.runFromConfig(config);\n        } catch (Throwable e) {\n          throw new RuntimeException(e);\n        }\n      }\n    };\n\n    zooThread.setDaemon(true);\n    zooThread.start();\n\n    int cnt = 0;\n    int port = -1;\n    try {\n       port = getPort();\n    } catch(IllegalStateException e) {\n      \n    }\n    while (port < 1) {\n      Thread.sleep(100);\n      try {\n        port = getPort();\n      } catch(IllegalStateException e) {\n        \n      }\n      if (cnt == 500) {\n        throw new RuntimeException(\"Could not get the port for ZooKeeper server\");\n      }\n      cnt++;\n    }\n  }\n\n","sourceOld":"  public void run() throws InterruptedException {\n    log.info(\"STARTING ZK TEST SERVER\");\n    // we don't call super.setUp\n    zooThread = new Thread() {\n      \n      @Override\n      public void run() {\n        ServerConfig config = new ServerConfig() {\n\n          {\n            setClientPort(ZkTestServer.this.clientPort);\n            this.dataDir = zkDir;\n            this.dataLogDir = zkDir;\n            this.tickTime = theTickTime;\n          }\n          \n          public void setClientPort(int clientPort) {\n            if (clientPortAddress != null) {\n              try {\n                this.clientPortAddress = new InetSocketAddress(\n                        InetAddress.getByName(clientPortAddress.getHostName()), clientPort);\n              } catch (UnknownHostException e) {\n                throw new RuntimeException(e);\n              }\n            } else {\n              this.clientPortAddress = new InetSocketAddress(clientPort);\n            }\n          }\n        };\n\n        try {\n          zkServer.runFromConfig(config);\n        } catch (Throwable e) {\n          throw new RuntimeException(e);\n        }\n      }\n    };\n\n    zooThread.setDaemon(true);\n    zooThread.start();\n\n    int cnt = 0;\n    int port = -1;\n    try {\n       port = getPort();\n    } catch(IllegalStateException e) {\n      \n    }\n    while (port < 1) {\n      Thread.sleep(100);\n      try {\n        port = getPort();\n      } catch(IllegalStateException e) {\n        \n      }\n      if (cnt == 500) {\n        throw new RuntimeException(\"Could not get the port for ZooKeeper server\");\n      }\n      cnt++;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7869f64c874ebf7f317d22c00baf2b6857797a6","date":1344856617,"type":5,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/ZkTestServer#run().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ZkTestServer#run().mjava","sourceNew":"  public void run() throws InterruptedException {\n    log.info(\"STARTING ZK TEST SERVER\");\n    // we don't call super.setUp\n    zooThread = new Thread() {\n      \n      @Override\n      public void run() {\n        ServerConfig config = new ServerConfig() {\n\n          {\n            setClientPort(ZkTestServer.this.clientPort);\n            this.dataDir = zkDir;\n            this.dataLogDir = zkDir;\n            this.tickTime = theTickTime;\n          }\n          \n          public void setClientPort(int clientPort) {\n            if (clientPortAddress != null) {\n              try {\n                this.clientPortAddress = new InetSocketAddress(\n                        InetAddress.getByName(clientPortAddress.getHostName()), clientPort);\n              } catch (UnknownHostException e) {\n                throw new RuntimeException(e);\n              }\n            } else {\n              this.clientPortAddress = new InetSocketAddress(clientPort);\n            }\n          }\n        };\n\n        try {\n          zkServer.runFromConfig(config);\n        } catch (Throwable e) {\n          throw new RuntimeException(e);\n        }\n      }\n    };\n\n    zooThread.setDaemon(true);\n    zooThread.start();\n\n    int cnt = 0;\n    int port = -1;\n    try {\n       port = getPort();\n    } catch(IllegalStateException e) {\n      \n    }\n    while (port < 1) {\n      Thread.sleep(100);\n      try {\n        port = getPort();\n      } catch(IllegalStateException e) {\n        \n      }\n      if (cnt == 500) {\n        throw new RuntimeException(\"Could not get the port for ZooKeeper server\");\n      }\n      cnt++;\n    }\n  }\n\n","sourceOld":"  public void run() throws InterruptedException {\n    log.info(\"STARTING ZK TEST SERVER\");\n    // we don't call super.setUp\n    zooThread = new Thread() {\n      \n      @Override\n      public void run() {\n        ServerConfig config = new ServerConfig() {\n\n          {\n            setClientPort(ZkTestServer.this.clientPort);\n            this.dataDir = zkDir;\n            this.dataLogDir = zkDir;\n            this.tickTime = theTickTime;\n          }\n          \n          public void setClientPort(int clientPort) {\n            if (clientPortAddress != null) {\n              try {\n                this.clientPortAddress = new InetSocketAddress(\n                        InetAddress.getByName(clientPortAddress.getHostName()), clientPort);\n              } catch (UnknownHostException e) {\n                throw new RuntimeException(e);\n              }\n            } else {\n              this.clientPortAddress = new InetSocketAddress(clientPort);\n            }\n          }\n        };\n\n        try {\n          zkServer.runFromConfig(config);\n        } catch (Throwable e) {\n          throw new RuntimeException(e);\n        }\n      }\n    };\n\n    zooThread.setDaemon(true);\n    zooThread.start();\n\n    int cnt = 0;\n    int port = -1;\n    try {\n       port = getPort();\n    } catch(IllegalStateException e) {\n      \n    }\n    while (port < 1) {\n      Thread.sleep(100);\n      try {\n        port = getPort();\n      } catch(IllegalStateException e) {\n        \n      }\n      if (cnt == 500) {\n        throw new RuntimeException(\"Could not get the port for ZooKeeper server\");\n      }\n      cnt++;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":["2c007e7c4cf8c55bc2a5884e315123afaaeec87f","6b834dd353486678973f4157b3ba402ac3a7ca88"],"6b834dd353486678973f4157b3ba402ac3a7ca88":["2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d":["c26f00b574427b55127e869b935845554afde1fa","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"0d22ac6a4146774c1bc8400160fc0b6150294e92":["c26f00b574427b55127e869b935845554afde1fa","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"c7869f64c874ebf7f317d22c00baf2b6857797a6":["6b834dd353486678973f4157b3ba402ac3a7ca88","2c30e4c1cee08b3b229a77991882594fe7250b66"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d6f074e73200c07d54f242d3880a8da5a35ff97b":["6b834dd353486678973f4157b3ba402ac3a7ca88","2c30e4c1cee08b3b229a77991882594fe7250b66"],"2c007e7c4cf8c55bc2a5884e315123afaaeec87f":["c26f00b574427b55127e869b935845554afde1fa"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2c30e4c1cee08b3b229a77991882594fe7250b66"],"2c30e4c1cee08b3b229a77991882594fe7250b66":["6b834dd353486678973f4157b3ba402ac3a7ca88"]},"commit2Childs":{"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":[],"6b834dd353486678973f4157b3ba402ac3a7ca88":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","c7869f64c874ebf7f317d22c00baf2b6857797a6","d6f074e73200c07d54f242d3880a8da5a35ff97b","2c30e4c1cee08b3b229a77991882594fe7250b66"],"c26f00b574427b55127e869b935845554afde1fa":["a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","0d22ac6a4146774c1bc8400160fc0b6150294e92","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d":[],"0d22ac6a4146774c1bc8400160fc0b6150294e92":[],"c7869f64c874ebf7f317d22c00baf2b6857797a6":[],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c26f00b574427b55127e869b935845554afde1fa","c903c3d15906a3da96b8c0c2fb704491005fdbdb","a258fbb26824fd104ed795e5d9033d2d040049ee"],"d6f074e73200c07d54f242d3880a8da5a35ff97b":[],"2c007e7c4cf8c55bc2a5884e315123afaaeec87f":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","6b834dd353486678973f4157b3ba402ac3a7ca88","a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","0d22ac6a4146774c1bc8400160fc0b6150294e92"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"2c30e4c1cee08b3b229a77991882594fe7250b66":["c7869f64c874ebf7f317d22c00baf2b6857797a6","d6f074e73200c07d54f242d3880a8da5a35ff97b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","0d22ac6a4146774c1bc8400160fc0b6150294e92","c7869f64c874ebf7f317d22c00baf2b6857797a6","d6f074e73200c07d54f242d3880a8da5a35ff97b","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}