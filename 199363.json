{"path":"lucene/core/src/java/org/apache/lucene/geo/EdgeTree#containsPnPoly(double,double).mjava","commits":[{"id":"3de74431f95eb0b5a8b7ab2ff84146756e86bc96","date":1574852963,"type":1,"author":"Ignacio Vera","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/geo/EdgeTree#containsPnPoly(double,double).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/geo/EdgeTree#contains(double,double,AtomicBoolean).mjava","sourceNew":"  /**\n   * Returns byte 0x00 if the point crosses this edge subtree an even number of times.\n   * Returns byte 0x01 if the point crosses this edge subtree an odd number of times.\n   * Returns byte 0x02 if the point is on one of the edges.\n   * <p>\n   * See <a href=\"https://www.ecse.rpi.edu/~wrf/Research/Short_Notes/pnpoly.html\">\n   * https://www.ecse.rpi.edu/~wrf/Research/Short_Notes/pnpoly.html</a> for more information.\n   */\n  // ported to java from https://www.ecse.rpi.edu/~wrf/Research/Short_Notes/pnpoly.html\n  // original code under the BSD license (https://www.ecse.rpi.edu/~wrf/Research/Short_Notes/pnpoly.html#License%20to%20Use)\n  //\n  // Copyright (c) 1970-2003, Wm. Randolph Franklin\n  //\n  // Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated\n  // documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation\n  // the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and\n  // to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n  //\n  // 1. Redistributions of source code must retain the above copyright\n  //    notice, this list of conditions and the following disclaimers.\n  // 2. Redistributions in binary form must reproduce the above copyright\n  //    notice in the documentation and/or other materials provided with\n  //    the distribution.\n  // 3. The name of W. Randolph Franklin may not be used to endorse or\n  //    promote products derived from this Software without specific\n  //    prior written permission.\n  //\n  // THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED\n  // TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n  // THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF\n  // CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n  // IN THE SOFTWARE.\n  private byte containsPnPoly(double x, double y) {\n    byte res = FALSE;\n    if (y <= this.max) {\n      if (y == this.y1 && y == this.y2 ||\n          (y <= this.y1 && y >= this.y2) != (y >= this.y1 && y <= this.y2)) {\n        if ((x == this.x1 && x == this.x2) ||\n            ((x <= this.x1 && x >= this.x2) != (x >= this.x1 && x <= this.x2) &&\n                GeoUtils.orient(this.x1, this.y1, this.x2, this.y2, x, y) == 0)) {\n          return ON_EDGE;\n        } else if (this.y1 > y != this.y2 > y) {\n          res = x < (this.x2 - this.x1) * (y - this.y1) / (this.y2 - this.y1) + this.x1 ? TRUE : FALSE;\n        }\n      }\n      if (this.left != null) {\n        res ^= left.containsPnPoly(x, y);\n        if ((res & 0x02) == 0x02) {\n          return ON_EDGE;\n        }\n      }\n\n      if (this.right != null && y >= this.low) {\n        res ^= right.containsPnPoly(x, y);\n        if ((res & 0x02) == 0x02) {\n          return ON_EDGE;\n        }\n      }\n    }\n    assert res >= FALSE && res <= ON_EDGE;\n    return res;\n  }\n\n","sourceOld":"  /**\n   * Returns true if the point crosses this edge subtree an odd number of times\n   * <p>\n   * See <a href=\"https://www.ecse.rpi.edu/~wrf/Research/Short_Notes/pnpoly.html\">\n   * https://www.ecse.rpi.edu/~wrf/Research/Short_Notes/pnpoly.html</a> for more information.\n   */\n  // ported to java from https://www.ecse.rpi.edu/~wrf/Research/Short_Notes/pnpoly.html\n  // original code under the BSD license (https://www.ecse.rpi.edu/~wrf/Research/Short_Notes/pnpoly.html#License%20to%20Use)\n  //\n  // Copyright (c) 1970-2003, Wm. Randolph Franklin\n  //\n  // Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated\n  // documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation\n  // the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and\n  // to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n  //\n  // 1. Redistributions of source code must retain the above copyright\n  //    notice, this list of conditions and the following disclaimers.\n  // 2. Redistributions in binary form must reproduce the above copyright\n  //    notice in the documentation and/or other materials provided with\n  //    the distribution.\n  // 3. The name of W. Randolph Franklin may not be used to endorse or\n  //    promote products derived from this Software without specific\n  //    prior written permission.\n  //\n  // THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED\n  // TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n  // THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF\n  // CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n  // IN THE SOFTWARE.\n  protected boolean contains(double x, double y, AtomicBoolean isOnEdge) {\n    boolean res = false;\n    if (isOnEdge.get() == false && y <= this.max) {\n      if (y == this.y1 && y == this.y2 ||\n          (y <= this.y1 && y >= this.y2) != (y >= this.y1 && y <= this.y2)) {\n        if ((x == this.x1 && x == this.x2) ||\n            ((x <= this.x1 && x >= this.x2) != (x >= this.x1 && x <= this.x2) &&\n                GeoUtils.orient(this.x1, this.y1, this.x2, this.y2, x, y) == 0)) {\n          // if its on the boundary return true\n          isOnEdge.set(true);\n          return true;\n        } else if (this.y1 > y != this.y2 > y) {\n          res = x < (this.x2 - this.x1) * (y - this.y1) / (this.y2 - this.y1) + this.x1;\n        }\n      }\n      if (this.left != null) {\n        res ^= left.contains(x, y, isOnEdge);\n      }\n\n      if (this.right != null && y >= this.low) {\n        res ^= right.contains(x, y, isOnEdge);\n      }\n    }\n    return isOnEdge.get() || res;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3de74431f95eb0b5a8b7ab2ff84146756e86bc96":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3de74431f95eb0b5a8b7ab2ff84146756e86bc96"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3de74431f95eb0b5a8b7ab2ff84146756e86bc96"],"3de74431f95eb0b5a8b7ab2ff84146756e86bc96":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}