{"path":"src/solrj/org/apache/solr/client/solrj/request/UpdateRequest#writeXML(Writer).mjava","commits":[{"id":"8cd2638c91e278a2831e83135b2c895d04defa90","date":1231272033,"type":0,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/solrj/org/apache/solr/client/solrj/request/UpdateRequest#writeXML(Writer).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * @since solr 1.4\n   */\n  public void writeXML( Writer writer ) throws IOException {\n    if( documents != null && documents.size() > 0 ) {\n      if( commitWithin > 0 ) {\n        writer.write(\"<add commitWithin=\\\"\"+commitWithin+\"\\\">\");\n      }\n      else {\n        writer.write(\"<add>\");\n      }\n      for (SolrInputDocument doc : documents ) {\n        if( doc != null ) {\n          ClientUtils.writeXML( doc, writer );\n        }\n      }\n      writer.write(\"</add>\");\n    }\n    \n    // Add the delete commands\n    boolean deleteI = deleteById != null && deleteById.size() > 0;\n    boolean deleteQ = deleteQuery != null && deleteQuery.size() > 0;\n    if( deleteI || deleteQ ) {\n      writer.append( \"<delete>\" );\n      if( deleteI ) {\n        for( String id : deleteById ) {\n          writer.append( \"<id>\" );\n          XML.escapeCharData( id, writer );\n          writer.append( \"</id>\" );\n        }\n      }\n      if( deleteQ ) {\n        for( String q : deleteQuery ) {\n          writer.append( \"<query>\" );\n          XML.escapeCharData( q, writer );\n          writer.append( \"</query>\" );\n        }\n      }\n      writer.append( \"</delete>\" );\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["818d704eaaf0fba0561d0d2752832e1015053482","818d704eaaf0fba0561d0d2752832e1015053482","818d704eaaf0fba0561d0d2752832e1015053482"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ed6d8c5d4a7a15ca41307188b42215913e14922b","date":1237454110,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"src/solrj/org/apache/solr/client/solrj/request/UpdateRequest#writeXML(Writer).mjava","pathOld":"src/solrj/org/apache/solr/client/solrj/request/UpdateRequest#writeXML(Writer).mjava","sourceNew":"  /**\n   * @since solr 1.4\n   */\n  public void writeXML( Writer writer ) throws IOException {\n    if( (documents != null && documents.size() > 0) || docIterator != null) {\n      if( commitWithin > 0 ) {\n        writer.write(\"<add commitWithin=\\\"\"+commitWithin+\"\\\">\");\n      }\n      else {\n        writer.write(\"<add>\");\n      }\n      if(documents != null) {\n        for (SolrInputDocument doc : documents) {\n          if (doc != null) {\n            ClientUtils.writeXML(doc, writer);\n          }\n        }\n      }\n      if (docIterator != null) {\n        while (docIterator.hasNext()) {\n          SolrInputDocument doc = docIterator.next();\n          if (doc != null) {\n            ClientUtils.writeXML(doc, writer);\n          }\n        }\n      }\n      writer.write(\"</add>\");\n    }\n    \n    // Add the delete commands\n    boolean deleteI = deleteById != null && deleteById.size() > 0;\n    boolean deleteQ = deleteQuery != null && deleteQuery.size() > 0;\n    if( deleteI || deleteQ ) {\n      writer.append( \"<delete>\" );\n      if( deleteI ) {\n        for( String id : deleteById ) {\n          writer.append( \"<id>\" );\n          XML.escapeCharData( id, writer );\n          writer.append( \"</id>\" );\n        }\n      }\n      if( deleteQ ) {\n        for( String q : deleteQuery ) {\n          writer.append( \"<query>\" );\n          XML.escapeCharData( q, writer );\n          writer.append( \"</query>\" );\n        }\n      }\n      writer.append( \"</delete>\" );\n    }\n  }\n\n","sourceOld":"  /**\n   * @since solr 1.4\n   */\n  public void writeXML( Writer writer ) throws IOException {\n    if( documents != null && documents.size() > 0 ) {\n      if( commitWithin > 0 ) {\n        writer.write(\"<add commitWithin=\\\"\"+commitWithin+\"\\\">\");\n      }\n      else {\n        writer.write(\"<add>\");\n      }\n      for (SolrInputDocument doc : documents ) {\n        if( doc != null ) {\n          ClientUtils.writeXML( doc, writer );\n        }\n      }\n      writer.write(\"</add>\");\n    }\n    \n    // Add the delete commands\n    boolean deleteI = deleteById != null && deleteById.size() > 0;\n    boolean deleteQ = deleteQuery != null && deleteQuery.size() > 0;\n    if( deleteI || deleteQ ) {\n      writer.append( \"<delete>\" );\n      if( deleteI ) {\n        for( String id : deleteById ) {\n          writer.append( \"<id>\" );\n          XML.escapeCharData( id, writer );\n          writer.append( \"</id>\" );\n        }\n      }\n      if( deleteQ ) {\n        for( String q : deleteQuery ) {\n          writer.append( \"<query>\" );\n          XML.escapeCharData( q, writer );\n          writer.append( \"</query>\" );\n        }\n      }\n      writer.append( \"</delete>\" );\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/solrj/org/apache/solr/client/solrj/request/UpdateRequest#writeXML(Writer).mjava","pathOld":"src/solrj/org/apache/solr/client/solrj/request/UpdateRequest#writeXML(Writer).mjava","sourceNew":"  /**\n   * @since solr 1.4\n   */\n  public void writeXML( Writer writer ) throws IOException {\n    if( (documents != null && documents.size() > 0) || docIterator != null) {\n      if( commitWithin > 0 ) {\n        writer.write(\"<add commitWithin=\\\"\"+commitWithin+\"\\\">\");\n      }\n      else {\n        writer.write(\"<add>\");\n      }\n      if(documents != null) {\n        for (SolrInputDocument doc : documents) {\n          if (doc != null) {\n            ClientUtils.writeXML(doc, writer);\n          }\n        }\n      }\n      if (docIterator != null) {\n        while (docIterator.hasNext()) {\n          SolrInputDocument doc = docIterator.next();\n          if (doc != null) {\n            ClientUtils.writeXML(doc, writer);\n          }\n        }\n      }\n      writer.write(\"</add>\");\n    }\n    \n    // Add the delete commands\n    boolean deleteI = deleteById != null && deleteById.size() > 0;\n    boolean deleteQ = deleteQuery != null && deleteQuery.size() > 0;\n    if( deleteI || deleteQ ) {\n      writer.append( \"<delete>\" );\n      if( deleteI ) {\n        for( String id : deleteById ) {\n          writer.append( \"<id>\" );\n          XML.escapeCharData( id, writer );\n          writer.append( \"</id>\" );\n        }\n      }\n      if( deleteQ ) {\n        for( String q : deleteQuery ) {\n          writer.append( \"<query>\" );\n          XML.escapeCharData( q, writer );\n          writer.append( \"</query>\" );\n        }\n      }\n      writer.append( \"</delete>\" );\n    }\n  }\n\n","sourceOld":"  /**\n   * @since solr 1.4\n   */\n  public void writeXML( Writer writer ) throws IOException {\n    if( (documents != null && documents.size() > 0) || docIterator != null) {\n      if( commitWithin > 0 ) {\n        writer.write(\"<add commitWithin=\\\"\"+commitWithin+\"\\\">\");\n      }\n      else {\n        writer.write(\"<add>\");\n      }\n      if(documents != null) {\n        for (SolrInputDocument doc : documents) {\n          if (doc != null) {\n            ClientUtils.writeXML(doc, writer);\n          }\n        }\n      }\n      if (docIterator != null) {\n        while (docIterator.hasNext()) {\n          SolrInputDocument doc = docIterator.next();\n          if (doc != null) {\n            ClientUtils.writeXML(doc, writer);\n          }\n        }\n      }\n      writer.write(\"</add>\");\n    }\n    \n    // Add the delete commands\n    boolean deleteI = deleteById != null && deleteById.size() > 0;\n    boolean deleteQ = deleteQuery != null && deleteQuery.size() > 0;\n    if( deleteI || deleteQ ) {\n      writer.append( \"<delete>\" );\n      if( deleteI ) {\n        for( String id : deleteById ) {\n          writer.append( \"<id>\" );\n          XML.escapeCharData( id, writer );\n          writer.append( \"</id>\" );\n        }\n      }\n      if( deleteQ ) {\n        for( String q : deleteQuery ) {\n          writer.append( \"<query>\" );\n          XML.escapeCharData( q, writer );\n          writer.append( \"</query>\" );\n        }\n      }\n      writer.append( \"</delete>\" );\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"8cd2638c91e278a2831e83135b2c895d04defa90":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ed6d8c5d4a7a15ca41307188b42215913e14922b":["8cd2638c91e278a2831e83135b2c895d04defa90"],"ad94625fb8d088209f46650c8097196fec67f00c":["ed6d8c5d4a7a15ca41307188b42215913e14922b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"8cd2638c91e278a2831e83135b2c895d04defa90":["ed6d8c5d4a7a15ca41307188b42215913e14922b"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["8cd2638c91e278a2831e83135b2c895d04defa90"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ed6d8c5d4a7a15ca41307188b42215913e14922b":["ad94625fb8d088209f46650c8097196fec67f00c"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}