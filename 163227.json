{"path":"solr/core/src/java/org/apache/solr/search/join/GraphEdgeCollector.GraphTermsCollector#getResultQuery(SchemaField,boolean).mjava","commits":[{"id":"ba33781da68babcaa5828121b443d3eb5c9d8480","date":1590595589,"type":0,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/join/GraphEdgeCollector.GraphTermsCollector#getResultQuery(SchemaField,boolean).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public Query getResultQuery(SchemaField matchField, boolean useAutomaton) {\n      if (collectorTerms == null || collectorTerms.size() == 0) {\n        // return null if there are no terms (edges) to traverse.\n        return null;\n      } else {\n        // Create a query\n        Query q = null;\n\n        // TODO: see if we should dynamically select this based on the frontier size.\n        if (useAutomaton) {\n          // build an automaton based query for the frontier.\n          Automaton autn = buildAutomaton(collectorTerms);\n          AutomatonQuery autnQuery = new AutomatonQuery(new Term(matchField.getName()), autn);\n          q = autnQuery;\n        } else {\n          List<BytesRef> termList = new ArrayList<>(collectorTerms.size());\n          for (int i = 0; i < collectorTerms.size(); i++) {\n            BytesRef ref = new BytesRef();\n            collectorTerms.get(i, ref);\n            termList.add(ref);\n          }\n          q = (matchField.hasDocValues() && !matchField.indexed())\n                  ? new DocValuesTermsQuery(matchField.getName(), termList)\n                  : new TermInSetQuery(matchField.getName(), termList);\n        }\n\n        return q;\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ba33781da68babcaa5828121b443d3eb5c9d8480":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ba33781da68babcaa5828121b443d3eb5c9d8480"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ba33781da68babcaa5828121b443d3eb5c9d8480"],"ba33781da68babcaa5828121b443d3eb5c9d8480":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}