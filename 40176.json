{"path":"src/java/org/apache/lucene/index/SegmentTermDocs#seek(TermEnum).mjava","commits":[{"id":"eafd816608011f66422f3052c37962973582d12a","date":1087172166,"type":0,"author":"Erik Hatcher","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentTermDocs#seek(TermEnum).mjava","pathOld":"/dev/null","sourceNew":"  public void seek(TermEnum termEnum) throws IOException {\n    TermInfo ti;\n    \n    // use comparison of fieldinfos to verify that termEnum belongs to the same segment as this SegmentTermDocs\n    if (termEnum instanceof SegmentTermEnum && ((SegmentTermEnum) termEnum).fieldInfos == parent.fieldInfos)          // optimized case\n      ti = ((SegmentTermEnum) termEnum).termInfo();\n    else                                          // punt case\n      ti = parent.tis.get(termEnum.term());\n      \n    seek(ti);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8522ae207a56c6db28ca06fe6cc33e70911c3600","date":1173935743,"type":3,"author":"Michael Busch","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentTermDocs#seek(TermEnum).mjava","pathOld":"src/java/org/apache/lucene/index/SegmentTermDocs#seek(TermEnum).mjava","sourceNew":"  public void seek(TermEnum termEnum) throws IOException {\n    TermInfo ti;\n    Term term;\n    \n    // use comparison of fieldinfos to verify that termEnum belongs to the same segment as this SegmentTermDocs\n    if (termEnum instanceof SegmentTermEnum && ((SegmentTermEnum) termEnum).fieldInfos == parent.fieldInfos) {        // optimized case\n      SegmentTermEnum segmentTermEnum = ((SegmentTermEnum) termEnum);\n      term = segmentTermEnum.term();\n      ti = segmentTermEnum.termInfo();\n    } else  {                                         // punt case\n      term = termEnum.term();\n      ti = parent.tis.get(term);        \n    }\n    \n    seek(ti, term);\n  }\n\n","sourceOld":"  public void seek(TermEnum termEnum) throws IOException {\n    TermInfo ti;\n    \n    // use comparison of fieldinfos to verify that termEnum belongs to the same segment as this SegmentTermDocs\n    if (termEnum instanceof SegmentTermEnum && ((SegmentTermEnum) termEnum).fieldInfos == parent.fieldInfos)          // optimized case\n      ti = ((SegmentTermEnum) termEnum).termInfo();\n    else                                          // punt case\n      ti = parent.tis.get(termEnum.term());\n      \n    seek(ti);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"66f3dadb253a44f4cccc81c8a21b685b18b201fb","date":1247245699,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentTermDocs#seek(TermEnum).mjava","pathOld":"src/java/org/apache/lucene/index/SegmentTermDocs#seek(TermEnum).mjava","sourceNew":"  public void seek(TermEnum termEnum) throws IOException {\n    TermInfo ti;\n    Term term;\n    \n    // use comparison of fieldinfos to verify that termEnum belongs to the same segment as this SegmentTermDocs\n    if (termEnum instanceof SegmentTermEnum && ((SegmentTermEnum) termEnum).fieldInfos == parent.core.fieldInfos) {        // optimized case\n      SegmentTermEnum segmentTermEnum = ((SegmentTermEnum) termEnum);\n      term = segmentTermEnum.term();\n      ti = segmentTermEnum.termInfo();\n    } else  {                                         // punt case\n      term = termEnum.term();\n      ti = parent.core.tis.get(term);\n    }\n    \n    seek(ti, term);\n  }\n\n","sourceOld":"  public void seek(TermEnum termEnum) throws IOException {\n    TermInfo ti;\n    Term term;\n    \n    // use comparison of fieldinfos to verify that termEnum belongs to the same segment as this SegmentTermDocs\n    if (termEnum instanceof SegmentTermEnum && ((SegmentTermEnum) termEnum).fieldInfos == parent.fieldInfos) {        // optimized case\n      SegmentTermEnum segmentTermEnum = ((SegmentTermEnum) termEnum);\n      term = segmentTermEnum.term();\n      ti = segmentTermEnum.termInfo();\n    } else  {                                         // punt case\n      term = termEnum.term();\n      ti = parent.tis.get(term);        \n    }\n    \n    seek(ti, term);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"961159f13aece73fbb30aea720e77a2237e8bafd","date":1247258916,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentTermDocs#seek(TermEnum).mjava","pathOld":"src/java/org/apache/lucene/index/SegmentTermDocs#seek(TermEnum).mjava","sourceNew":"  public void seek(TermEnum termEnum) throws IOException {\n    TermInfo ti;\n    Term term;\n    \n    // use comparison of fieldinfos to verify that termEnum belongs to the same segment as this SegmentTermDocs\n    if (termEnum instanceof SegmentTermEnum && ((SegmentTermEnum) termEnum).fieldInfos == parent.core.fieldInfos) {        // optimized case\n      SegmentTermEnum segmentTermEnum = ((SegmentTermEnum) termEnum);\n      term = segmentTermEnum.term();\n      ti = segmentTermEnum.termInfo();\n    } else  {                                         // punt case\n      term = termEnum.term();\n      ti = parent.core.getTermsReader().get(term);\n    }\n    \n    seek(ti, term);\n  }\n\n","sourceOld":"  public void seek(TermEnum termEnum) throws IOException {\n    TermInfo ti;\n    Term term;\n    \n    // use comparison of fieldinfos to verify that termEnum belongs to the same segment as this SegmentTermDocs\n    if (termEnum instanceof SegmentTermEnum && ((SegmentTermEnum) termEnum).fieldInfos == parent.core.fieldInfos) {        // optimized case\n      SegmentTermEnum segmentTermEnum = ((SegmentTermEnum) termEnum);\n      term = segmentTermEnum.term();\n      ti = segmentTermEnum.termInfo();\n    } else  {                                         // punt case\n      term = termEnum.term();\n      ti = parent.core.tis.get(term);\n    }\n    \n    seek(ti, term);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentTermDocs#seek(TermEnum).mjava","pathOld":"src/java/org/apache/lucene/index/SegmentTermDocs#seek(TermEnum).mjava","sourceNew":"  public void seek(TermEnum termEnum) throws IOException {\n    TermInfo ti;\n    Term term;\n    \n    // use comparison of fieldinfos to verify that termEnum belongs to the same segment as this SegmentTermDocs\n    if (termEnum instanceof SegmentTermEnum && ((SegmentTermEnum) termEnum).fieldInfos == parent.core.fieldInfos) {        // optimized case\n      SegmentTermEnum segmentTermEnum = ((SegmentTermEnum) termEnum);\n      term = segmentTermEnum.term();\n      ti = segmentTermEnum.termInfo();\n    } else  {                                         // punt case\n      term = termEnum.term();\n      ti = parent.core.getTermsReader().get(term);\n    }\n    \n    seek(ti, term);\n  }\n\n","sourceOld":"  public void seek(TermEnum termEnum) throws IOException {\n    TermInfo ti;\n    Term term;\n    \n    // use comparison of fieldinfos to verify that termEnum belongs to the same segment as this SegmentTermDocs\n    if (termEnum instanceof SegmentTermEnum && ((SegmentTermEnum) termEnum).fieldInfos == parent.core.fieldInfos) {        // optimized case\n      SegmentTermEnum segmentTermEnum = ((SegmentTermEnum) termEnum);\n      term = segmentTermEnum.term();\n      ti = segmentTermEnum.termInfo();\n    } else  {                                         // punt case\n      term = termEnum.term();\n      ti = parent.core.getTermsReader().get(term);\n    }\n    \n    seek(ti, term);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"eafd816608011f66422f3052c37962973582d12a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"8522ae207a56c6db28ca06fe6cc33e70911c3600":["eafd816608011f66422f3052c37962973582d12a"],"961159f13aece73fbb30aea720e77a2237e8bafd":["66f3dadb253a44f4cccc81c8a21b685b18b201fb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["961159f13aece73fbb30aea720e77a2237e8bafd"],"66f3dadb253a44f4cccc81c8a21b685b18b201fb":["8522ae207a56c6db28ca06fe6cc33e70911c3600"]},"commit2Childs":{"eafd816608011f66422f3052c37962973582d12a":["8522ae207a56c6db28ca06fe6cc33e70911c3600"],"8522ae207a56c6db28ca06fe6cc33e70911c3600":["66f3dadb253a44f4cccc81c8a21b685b18b201fb"],"961159f13aece73fbb30aea720e77a2237e8bafd":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["eafd816608011f66422f3052c37962973582d12a"],"66f3dadb253a44f4cccc81c8a21b685b18b201fb":["961159f13aece73fbb30aea720e77a2237e8bafd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}