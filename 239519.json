{"path":"lucene/analysis/common/src/java/org/apache/lucene/analysis/payloads/TokenOffsetPayloadTokenFilter#incrementToken().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/payloads/TokenOffsetPayloadTokenFilter#incrementToken().mjava","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/payloads/TokenOffsetPayloadTokenFilter#incrementToken().mjava","sourceNew":"  @Override\n  public final boolean incrementToken() throws IOException {\n    if (input.incrementToken()) {\n      byte[] data = new byte[8];\n      PayloadHelper.encodeInt(offsetAtt.startOffset(), data, 0);\n      PayloadHelper.encodeInt(offsetAtt.endOffset(), data, 4);\n      Payload payload = new Payload(data);\n      payAtt.setPayload(payload);\n      return true;\n    } else {\n    return false;\n    }\n  }\n\n","sourceOld":"  @Override\n  public final boolean incrementToken() throws IOException {\n    if (input.incrementToken()) {\n      byte[] data = new byte[8];\n      PayloadHelper.encodeInt(offsetAtt.startOffset(), data, 0);\n      PayloadHelper.encodeInt(offsetAtt.endOffset(), data, 4);\n      Payload payload = new Payload(data);\n      payAtt.setPayload(payload);\n      return true;\n    } else {\n    return false;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"76fa9933adb0556e752e8af9734c4d0ae14622ff","date":1339178321,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/payloads/TokenOffsetPayloadTokenFilter#incrementToken().mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/payloads/TokenOffsetPayloadTokenFilter#incrementToken().mjava","sourceNew":"  @Override\n  public final boolean incrementToken() throws IOException {\n    if (input.incrementToken()) {\n      byte[] data = new byte[8];\n      PayloadHelper.encodeInt(offsetAtt.startOffset(), data, 0);\n      PayloadHelper.encodeInt(offsetAtt.endOffset(), data, 4);\n      BytesRef payload = new BytesRef(data);\n      payAtt.setPayload(payload);\n      return true;\n    } else {\n    return false;\n    }\n  }\n\n","sourceOld":"  @Override\n  public final boolean incrementToken() throws IOException {\n    if (input.incrementToken()) {\n      byte[] data = new byte[8];\n      PayloadHelper.encodeInt(offsetAtt.startOffset(), data, 0);\n      PayloadHelper.encodeInt(offsetAtt.endOffset(), data, 4);\n      Payload payload = new Payload(data);\n      payAtt.setPayload(payload);\n      return true;\n    } else {\n    return false;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"76fa9933adb0556e752e8af9734c4d0ae14622ff":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["76fa9933adb0556e752e8af9734c4d0ae14622ff"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["76fa9933adb0556e752e8af9734c4d0ae14622ff"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"76fa9933adb0556e752e8af9734c4d0ae14622ff":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}