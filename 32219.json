{"path":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/compound/hyphenation/TernaryTree#strcmp(String,char[],int).mjava","commits":[{"id":"dd745d580729e528151b58aeda87ef82f1b95c9b","date":1248369082,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/compound/hyphenation/TernaryTree#strcmp(String,char[],int).mjava","pathOld":"contrib/analyzers/src/java/org/apache/lucene/analysis/compound/hyphenation/TernaryTree#strcmp(String,char[],int).mjava","sourceNew":"  /**\n   * Compares a string with null terminated char array\n   */\n  public static int strcmp(String str, char[] a, int start) {\n    int i, d, len = str.length();\n    for (i = 0; i < len; i++) {\n      d = (int) str.charAt(i) - a[start + i];\n      if (d != 0) {\n        return d;\n      }\n      if (a[start + i] == 0) {\n        return d;\n      }\n    }\n    if (a[start + i] != 0) {\n      return (int) -a[start + i];\n    }\n    return 0;\n\n  }\n\n","sourceOld":"  /**\n   * Compares a string with null terminated char array\n   */\n  public static int strcmp(String str, char[] a, int start) {\n    int i, d, len = str.length();\n    for (i = 0; i < len; i++) {\n      d = (int) str.charAt(i) - a[start + i];\n      if (d != 0) {\n        return d;\n      }\n      if (a[start + i] == 0) {\n        return d;\n      }\n    }\n    if (a[start + i] != 0) {\n      return (int) -a[start + i];\n    }\n    return 0;\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/analyzers/common/src/java/org/apache/lucene/analysis/compound/hyphenation/TernaryTree#strcmp(String,char[],int).mjava","pathOld":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/compound/hyphenation/TernaryTree#strcmp(String,char[],int).mjava","sourceNew":"  /**\n   * Compares a string with null terminated char array\n   */\n  public static int strcmp(String str, char[] a, int start) {\n    int i, d, len = str.length();\n    for (i = 0; i < len; i++) {\n      d = (int) str.charAt(i) - a[start + i];\n      if (d != 0) {\n        return d;\n      }\n      if (a[start + i] == 0) {\n        return d;\n      }\n    }\n    if (a[start + i] != 0) {\n      return (int) -a[start + i];\n    }\n    return 0;\n\n  }\n\n","sourceOld":"  /**\n   * Compares a string with null terminated char array\n   */\n  public static int strcmp(String str, char[] a, int start) {\n    int i, d, len = str.length();\n    for (i = 0; i < len; i++) {\n      d = (int) str.charAt(i) - a[start + i];\n      if (d != 0) {\n        return d;\n      }\n      if (a[start + i] == 0) {\n        return d;\n      }\n    }\n    if (a[start + i] != 0) {\n      return (int) -a[start + i];\n    }\n    return 0;\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"dd745d580729e528151b58aeda87ef82f1b95c9b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["dd745d580729e528151b58aeda87ef82f1b95c9b"]},"commit2Childs":{"dd745d580729e528151b58aeda87ef82f1b95c9b":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["dd745d580729e528151b58aeda87ef82f1b95c9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}