{"path":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase.TestIgnoredException#printStackTrace(PrintStream).mjava","commits":[{"id":"f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce","date":1297021734,"type":1,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase.TestIgnoredException#printStackTrace(PrintStream).mjava","pathOld":"lucene/src/test/org/apache/lucene/util/LuceneTestCase.TestIgnoredException#printStackTrace(PrintStream).mjava","sourceNew":"    // only this one is called by our code, exception is not used outside this class:\n    @Override\n    public void printStackTrace(PrintStream s) {\n      if (getCause() != null) {\n        s.println(super.toString() + \" - Caused by:\");\n        getCause().printStackTrace(s);\n      } else {\n        super.printStackTrace(s);\n      }\n    }\n\n","sourceOld":"    // only this one is called by our code, exception is not used outside this class:\n    @Override\n    public void printStackTrace(PrintStream s) {\n      if (getCause() != null) {\n        s.println(super.toString() + \" - Caused by:\");\n        getCause().printStackTrace(s);\n      } else {\n        super.printStackTrace(s);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":1,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase.TestIgnoredException#printStackTrace(PrintStream).mjava","pathOld":"lucene/src/test/org/apache/lucene/util/LuceneTestCase.TestIgnoredException#printStackTrace(PrintStream).mjava","sourceNew":"    // only this one is called by our code, exception is not used outside this class:\n    @Override\n    public void printStackTrace(PrintStream s) {\n      if (getCause() != null) {\n        s.println(super.toString() + \" - Caused by:\");\n        getCause().printStackTrace(s);\n      } else {\n        super.printStackTrace(s);\n      }\n    }\n\n","sourceOld":"    // only this one is called by our code, exception is not used outside this class:\n    @Override\n    public void printStackTrace(PrintStream s) {\n      if (getCause() != null) {\n        s.println(super.toString() + \" - Caused by:\");\n        getCause().printStackTrace(s);\n      } else {\n        super.printStackTrace(s);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":1,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase.TestIgnoredException#printStackTrace(PrintStream).mjava","pathOld":"lucene/src/test/org/apache/lucene/util/LuceneTestCase.TestIgnoredException#printStackTrace(PrintStream).mjava","sourceNew":"    // only this one is called by our code, exception is not used outside this class:\n    @Override\n    public void printStackTrace(PrintStream s) {\n      if (getCause() != null) {\n        s.println(super.toString() + \" - Caused by:\");\n        getCause().printStackTrace(s);\n      } else {\n        super.printStackTrace(s);\n      }\n    }\n\n","sourceOld":"    // only this one is called by our code, exception is not used outside this class:\n    @Override\n    public void printStackTrace(PrintStream s) {\n      if (getCause() != null) {\n        s.println(super.toString() + \" - Caused by:\");\n        getCause().printStackTrace(s);\n      } else {\n        super.printStackTrace(s);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e5b97dd6cb831725a6c22a0b83af66bff6fc8a2","date":1314327242,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/test-framework/org/apache/lucene/util/LuceneTestCase.TestIgnoredException#printStackTrace(PrintStream).mjava","sourceNew":null,"sourceOld":"    // only this one is called by our code, exception is not used outside this class:\n    @Override\n    public void printStackTrace(PrintStream s) {\n      if (getCause() != null) {\n        s.println(super.toString() + \" - Caused by:\");\n        getCause().printStackTrace(s);\n      } else {\n        super.printStackTrace(s);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"2e5b97dd6cb831725a6c22a0b83af66bff6fc8a2":["f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2e5b97dd6cb831725a6c22a0b83af66bff6fc8a2"],"f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"2e5b97dd6cb831725a6c22a0b83af66bff6fc8a2":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac","f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":[],"f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce":["2e5b97dd6cb831725a6c22a0b83af66bff6fc8a2","29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}