{"path":"lucene/core/src/java/org/apache/lucene/store/MMapDirectory.MMapIndexInput#close().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/store/MMapDirectory.MMapIndexInput#close().mjava","pathOld":"lucene/src/java/org/apache/lucene/store/MMapDirectory.MMapIndexInput#close().mjava","sourceNew":"    @Override\n    public void close() throws IOException {\n      try {\n        if (isClone || buffers == null) return;\n        \n        // for extra safety unset also all clones' buffers:\n        synchronized(this.clones) {\n          for (final MMapIndexInput clone : this.clones) {\n            assert clone.isClone;\n            clone.unsetBuffers();\n          }\n          this.clones.clear();\n        }\n        \n        curBuf = null; curBufIndex = 0; // nuke curr pointer early\n        for (int bufNr = 0; bufNr < buffers.length; bufNr++) {\n          cleanMapping(buffers[bufNr]);\n        }\n      } finally {\n        unsetBuffers();\n      }\n    }\n\n","sourceOld":"    @Override\n    public void close() throws IOException {\n      try {\n        if (isClone || buffers == null) return;\n        \n        // for extra safety unset also all clones' buffers:\n        synchronized(this.clones) {\n          for (final MMapIndexInput clone : this.clones) {\n            assert clone.isClone;\n            clone.unsetBuffers();\n          }\n          this.clones.clear();\n        }\n        \n        curBuf = null; curBufIndex = 0; // nuke curr pointer early\n        for (int bufNr = 0; bufNr < buffers.length; bufNr++) {\n          cleanMapping(buffers[bufNr]);\n        }\n      } finally {\n        unsetBuffers();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e721522f9692a64e877e34a4467f58dbeba866eb","date":1340444282,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/store/MMapDirectory.MMapIndexInput#close().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/store/MMapDirectory.MMapIndexInput#close().mjava","sourceNew":"    @Override\n    public void close() throws IOException {\n      try {\n        if (isClone || buffers == null) return;\n        \n        // make local copy, then un-set early\n        final ByteBuffer[] bufs = buffers;\n        unsetBuffers();\n        \n        // for extra safety unset also all clones' buffers:\n        for (Iterator<MMapIndexInput> it = this.clones.keyIterator(); it.hasNext();) {\n          final MMapIndexInput clone = it.next();\n          assert clone.isClone;\n          clone.unsetBuffers();\n        }\n        this.clones.clear();\n        \n        for (final ByteBuffer b : bufs) {\n          cleanMapping(b);\n        }\n      } finally {\n        unsetBuffers();\n      }\n    }\n\n","sourceOld":"    @Override\n    public void close() throws IOException {\n      try {\n        if (isClone || buffers == null) return;\n        \n        // for extra safety unset also all clones' buffers:\n        synchronized(this.clones) {\n          for (final MMapIndexInput clone : this.clones) {\n            assert clone.isClone;\n            clone.unsetBuffers();\n          }\n          this.clones.clear();\n        }\n        \n        curBuf = null; curBufIndex = 0; // nuke curr pointer early\n        for (int bufNr = 0; bufNr < buffers.length; bufNr++) {\n          cleanMapping(buffers[bufNr]);\n        }\n      } finally {\n        unsetBuffers();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/store/MMapDirectory.MMapIndexInput#close().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/store/MMapDirectory.MMapIndexInput#close().mjava","sourceNew":"    @Override\n    public void close() throws IOException {\n      try {\n        if (isClone || buffers == null) return;\n        \n        // make local copy, then un-set early\n        final ByteBuffer[] bufs = buffers;\n        unsetBuffers();\n        \n        // for extra safety unset also all clones' buffers:\n        for (Iterator<MMapIndexInput> it = this.clones.keyIterator(); it.hasNext();) {\n          final MMapIndexInput clone = it.next();\n          assert clone.isClone;\n          clone.unsetBuffers();\n        }\n        this.clones.clear();\n        \n        for (final ByteBuffer b : bufs) {\n          cleanMapping(b);\n        }\n      } finally {\n        unsetBuffers();\n      }\n    }\n\n","sourceOld":"    @Override\n    public void close() throws IOException {\n      try {\n        if (isClone || buffers == null) return;\n        \n        // for extra safety unset also all clones' buffers:\n        synchronized(this.clones) {\n          for (final MMapIndexInput clone : this.clones) {\n            assert clone.isClone;\n            clone.unsetBuffers();\n          }\n          this.clones.clear();\n        }\n        \n        curBuf = null; curBufIndex = 0; // nuke curr pointer early\n        for (int bufNr = 0; bufNr < buffers.length; bufNr++) {\n          cleanMapping(buffers[bufNr]);\n        }\n      } finally {\n        unsetBuffers();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4e5e734869d76c22acfc12bc53ecbfcc1606c2f5","date":1347072117,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/store/MMapDirectory.MMapIndexInput#close().mjava","sourceNew":null,"sourceOld":"    @Override\n    public void close() throws IOException {\n      try {\n        if (isClone || buffers == null) return;\n        \n        // make local copy, then un-set early\n        final ByteBuffer[] bufs = buffers;\n        unsetBuffers();\n        \n        // for extra safety unset also all clones' buffers:\n        for (Iterator<MMapIndexInput> it = this.clones.keyIterator(); it.hasNext();) {\n          final MMapIndexInput clone = it.next();\n          assert clone.isClone;\n          clone.unsetBuffers();\n        }\n        this.clones.clear();\n        \n        for (final ByteBuffer b : bufs) {\n          cleanMapping(b);\n        }\n      } finally {\n        unsetBuffers();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4e5e734869d76c22acfc12bc53ecbfcc1606c2f5":["e721522f9692a64e877e34a4467f58dbeba866eb"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","e721522f9692a64e877e34a4467f58dbeba866eb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e721522f9692a64e877e34a4467f58dbeba866eb":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4e5e734869d76c22acfc12bc53ecbfcc1606c2f5"]},"commit2Childs":{"4e5e734869d76c22acfc12bc53ecbfcc1606c2f5":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["fe33227f6805edab2036cbb80645cc4e2d1fa424","e721522f9692a64e877e34a4467f58dbeba866eb"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"e721522f9692a64e877e34a4467f58dbeba866eb":["4e5e734869d76c22acfc12bc53ecbfcc1606c2f5","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}