{"path":"solr/core/src/java/org/apache/solr/core/CoreContainer#addCoresAttrib(Map[String,String],ConfigSolr.CfgProp,String,String,String).mjava","commits":[{"id":"e475642767c688ede5728d7918326f70b4e0bf3a","date":1366072489,"type":0,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreContainer#addCoresAttrib(Map[String,String],ConfigSolr.CfgProp,String,String,String).mjava","pathOld":"/dev/null","sourceNew":"  //TODO: Obsolete in 5.0 Having to pass prop is a hack to get us to 5.0.\n  private void addCoresAttrib(Map<String,String> coresAttribs, ConfigSolr.CfgProp prop,\n                              String attribName, String attribValue, String defaultValue) {\n    if (cfg == null) {\n      coresAttribs.put(attribName, attribValue);\n      return;\n    }\n    \n    if (attribValue != null) {\n      String origValue = cfg.getOrigProp(prop, null);\n\n      if (origValue == null && defaultValue != null && attribValue.equals(defaultValue)) return;\n\n      if (attribValue.equals(PropertiesUtil.substituteProperty(origValue, loader.getCoreProperties()))) {\n        coresAttribs.put(attribName, origValue);\n      } else {\n        coresAttribs.put(attribName, attribValue);\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7c73b6560033b6dcc828fbcc94ba9315c20f3c0","date":1366659310,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreContainer#addCoresAttrib(Map[String,String],ConfigSolr.CfgProp,String,String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CoreContainer#addCoresAttrib(Map[String,String],ConfigSolr.CfgProp,String,String,String).mjava","sourceNew":"  //TODO: Obsolete in 5.0 Having to pass prop is a hack to get us to 5.0.\n  private void addCoresAttrib(Map<String,String> coresAttribs, ConfigSolr.CfgProp prop,\n                              String attribName, String attribValue, String defaultValue) {\n    if (cfg == null) {\n      coresAttribs.put(attribName, attribValue);\n      return;\n    }\n    \n    if (attribValue != null) {\n      String origValue = cfg.getOrigProp(prop, null);\n      \n      if (origValue == null && defaultValue != null && attribValue.equals(defaultValue)) return;\n\n      if (attribValue.equals(PropertiesUtil.substituteProperty(origValue, loader.getCoreProperties()))) {\n        coresAttribs.put(attribName, origValue);\n      } else {\n        coresAttribs.put(attribName, attribValue);\n      }\n    }\n  }\n\n","sourceOld":"  //TODO: Obsolete in 5.0 Having to pass prop is a hack to get us to 5.0.\n  private void addCoresAttrib(Map<String,String> coresAttribs, ConfigSolr.CfgProp prop,\n                              String attribName, String attribValue, String defaultValue) {\n    if (cfg == null) {\n      coresAttribs.put(attribName, attribValue);\n      return;\n    }\n    \n    if (attribValue != null) {\n      String origValue = cfg.getOrigProp(prop, null);\n\n      if (origValue == null && defaultValue != null && attribValue.equals(defaultValue)) return;\n\n      if (attribValue.equals(PropertiesUtil.substituteProperty(origValue, loader.getCoreProperties()))) {\n        coresAttribs.put(attribName, origValue);\n      } else {\n        coresAttribs.put(attribName, attribValue);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b29abed5661c7911e4b45d5a3d79a186268e28c4","date":1366675770,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreContainer#addCoresAttrib(Map[String,String],ConfigSolr.CfgProp,String,String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CoreContainer#addCoresAttrib(Map[String,String],ConfigSolr.CfgProp,String,String,String).mjava","sourceNew":"  private void addCoresAttrib(Map<String,String> coresAttribs, ConfigSolr.CfgProp prop,\n                              String attribName, String attribValue, String defaultValue) {\n    if (cfg == null) {\n      coresAttribs.put(attribName, attribValue);\n      return;\n    }\n    \n    if (attribValue != null) {\n      String origValue = cfg.getOrigProp(prop, null);\n      \n      if (origValue == null && defaultValue != null && attribValue.equals(defaultValue)) return;\n\n      if (attribValue.equals(PropertiesUtil.substituteProperty(origValue, loader.getCoreProperties()))) {\n        coresAttribs.put(attribName, origValue);\n      } else {\n        coresAttribs.put(attribName, attribValue);\n      }\n    }\n  }\n\n","sourceOld":"  //TODO: Obsolete in 5.0 Having to pass prop is a hack to get us to 5.0.\n  private void addCoresAttrib(Map<String,String> coresAttribs, ConfigSolr.CfgProp prop,\n                              String attribName, String attribValue, String defaultValue) {\n    if (cfg == null) {\n      coresAttribs.put(attribName, attribValue);\n      return;\n    }\n    \n    if (attribValue != null) {\n      String origValue = cfg.getOrigProp(prop, null);\n      \n      if (origValue == null && defaultValue != null && attribValue.equals(defaultValue)) return;\n\n      if (attribValue.equals(PropertiesUtil.substituteProperty(origValue, loader.getCoreProperties()))) {\n        coresAttribs.put(attribName, origValue);\n      } else {\n        coresAttribs.put(attribName, attribValue);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dc6e48afbb50ae0a22fa76e226f04fd585532938","date":1371429211,"type":5,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreContainer#addAttrib(Map[String,String],ConfigSolr.CfgProp,String,String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CoreContainer#addCoresAttrib(Map[String,String],ConfigSolr.CfgProp,String,String,String).mjava","sourceNew":"    private void addAttrib(Map<String, String> attribs, ConfigSolr.CfgProp prop,\n                         String attribName, String attribValue, String defaultValue) {\n    if (cfg == null) {\n      attribs.put(attribName, attribValue);\n      return;\n    }\n\n    if (attribValue != null) {\n      String origValue = cfg.getOrigProp(prop, null);\n\n      if (origValue == null && defaultValue != null && attribValue.equals(defaultValue)) return;\n\n      if (attribValue.equals(PropertiesUtil.substituteProperty(origValue, loader.getCoreProperties()))) {\n        attribs.put(attribName, origValue);\n      } else {\n        attribs.put(attribName, attribValue);\n      }\n    }\n  }\n\n","sourceOld":"  private void addCoresAttrib(Map<String,String> coresAttribs, ConfigSolr.CfgProp prop,\n                              String attribName, String attribValue, String defaultValue) {\n    if (cfg == null) {\n      coresAttribs.put(attribName, attribValue);\n      return;\n    }\n    \n    if (attribValue != null) {\n      String origValue = cfg.getOrigProp(prop, null);\n      \n      if (origValue == null && defaultValue != null && attribValue.equals(defaultValue)) return;\n\n      if (attribValue.equals(PropertiesUtil.substituteProperty(origValue, loader.getCoreProperties()))) {\n        coresAttribs.put(attribName, origValue);\n      } else {\n        coresAttribs.put(attribName, attribValue);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"37a0f60745e53927c4c876cfe5b5a58170f0646c","date":1373994005,"type":4,"author":"Han Jiang","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/core/CoreContainer#addCoresAttrib(Map[String,String],ConfigSolr.CfgProp,String,String,String).mjava","sourceNew":null,"sourceOld":"  private void addCoresAttrib(Map<String,String> coresAttribs, ConfigSolr.CfgProp prop,\n                              String attribName, String attribValue, String defaultValue) {\n    if (cfg == null) {\n      coresAttribs.put(attribName, attribValue);\n      return;\n    }\n    \n    if (attribValue != null) {\n      String origValue = cfg.getOrigProp(prop, null);\n      \n      if (origValue == null && defaultValue != null && attribValue.equals(defaultValue)) return;\n\n      if (attribValue.equals(PropertiesUtil.substituteProperty(origValue, loader.getCoreProperties()))) {\n        coresAttribs.put(attribName, origValue);\n      } else {\n        coresAttribs.put(attribName, attribValue);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"dc6e48afbb50ae0a22fa76e226f04fd585532938":["b29abed5661c7911e4b45d5a3d79a186268e28c4"],"b29abed5661c7911e4b45d5a3d79a186268e28c4":["c7c73b6560033b6dcc828fbcc94ba9315c20f3c0"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":["b29abed5661c7911e4b45d5a3d79a186268e28c4","dc6e48afbb50ae0a22fa76e226f04fd585532938"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e475642767c688ede5728d7918326f70b4e0bf3a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c7c73b6560033b6dcc828fbcc94ba9315c20f3c0":["e475642767c688ede5728d7918326f70b4e0bf3a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["dc6e48afbb50ae0a22fa76e226f04fd585532938"]},"commit2Childs":{"dc6e48afbb50ae0a22fa76e226f04fd585532938":["37a0f60745e53927c4c876cfe5b5a58170f0646c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b29abed5661c7911e4b45d5a3d79a186268e28c4":["dc6e48afbb50ae0a22fa76e226f04fd585532938","37a0f60745e53927c4c876cfe5b5a58170f0646c"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e475642767c688ede5728d7918326f70b4e0bf3a"],"e475642767c688ede5728d7918326f70b4e0bf3a":["c7c73b6560033b6dcc828fbcc94ba9315c20f3c0"],"c7c73b6560033b6dcc828fbcc94ba9315c20f3c0":["b29abed5661c7911e4b45d5a3d79a186268e28c4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["37a0f60745e53927c4c876cfe5b5a58170f0646c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}