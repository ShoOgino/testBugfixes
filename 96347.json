{"path":"lucene/src/test-framework/java/org/apache/lucene/util/_TestUtil#assertEquals(TopDocs,TopDocs).mjava","commits":[{"id":"7b91922b55d15444d554721b352861d028eb8278","date":1320421415,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test-framework/java/org/apache/lucene/util/_TestUtil#assertEquals(TopDocs,TopDocs).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/util/_TestUtil#assertEquals(TopDocs,TopDocs).mjava","sourceNew":"  public static void assertEquals(TopDocs expected, TopDocs actual) {\n    Assert.assertEquals(\"wrong total hits\", expected.totalHits, actual.totalHits);\n    Assert.assertEquals(\"wrong maxScore\", expected.getMaxScore(), actual.getMaxScore(), 0.0);\n    Assert.assertEquals(\"wrong hit count\", expected.scoreDocs.length, actual.scoreDocs.length);\n    for(int hitIDX=0;hitIDX<expected.scoreDocs.length;hitIDX++) {\n      final ScoreDoc expectedSD = expected.scoreDocs[hitIDX];\n      final ScoreDoc actualSD = actual.scoreDocs[hitIDX];\n      Assert.assertEquals(\"wrong hit docID\", expectedSD.doc, actualSD.doc);\n      Assert.assertEquals(\"wrong hit score\", expectedSD.score, actualSD.score, 0.0);\n      if (expectedSD instanceof FieldDoc) {\n        Assert.assertTrue(actualSD instanceof FieldDoc);\n        Assert.assertArrayEquals(\"wrong sort field values\",\n                            ((FieldDoc) expectedSD).fields,\n                            ((FieldDoc) actualSD).fields);\n      } else {\n        Assert.assertFalse(actualSD instanceof FieldDoc);\n      }\n    }\n  }\n\n","sourceOld":"  public static void assertEquals(TopDocs expected, TopDocs actual) {\n    Assert.assertEquals(\"wrong total hits\", expected.totalHits, actual.totalHits);\n    Assert.assertEquals(\"wrong maxScore\", expected.getMaxScore(), actual.getMaxScore(), 0.0);\n    Assert.assertEquals(\"wrong hit count\", expected.scoreDocs.length, actual.scoreDocs.length);\n    for(int hitIDX=0;hitIDX<expected.scoreDocs.length;hitIDX++) {\n      final ScoreDoc expectedSD = expected.scoreDocs[hitIDX];\n      final ScoreDoc actualSD = actual.scoreDocs[hitIDX];\n      Assert.assertEquals(\"wrong hit docID\", expectedSD.doc, actualSD.doc);\n      Assert.assertEquals(\"wrong hit score\", expectedSD.score, actualSD.score, 0.0);\n      if (expectedSD instanceof FieldDoc) {\n        Assert.assertTrue(actualSD instanceof FieldDoc);\n        Assert.assertArrayEquals(\"wrong sort field values\",\n                            ((FieldDoc) expectedSD).fields,\n                            ((FieldDoc) actualSD).fields);\n      } else {\n        Assert.assertFalse(actualSD instanceof FieldDoc);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/_TestUtil#assertEquals(TopDocs,TopDocs).mjava","pathOld":"lucene/src/test-framework/java/org/apache/lucene/util/_TestUtil#assertEquals(TopDocs,TopDocs).mjava","sourceNew":"  public static void assertEquals(TopDocs expected, TopDocs actual) {\n    Assert.assertEquals(\"wrong total hits\", expected.totalHits, actual.totalHits);\n    Assert.assertEquals(\"wrong maxScore\", expected.getMaxScore(), actual.getMaxScore(), 0.0);\n    Assert.assertEquals(\"wrong hit count\", expected.scoreDocs.length, actual.scoreDocs.length);\n    for(int hitIDX=0;hitIDX<expected.scoreDocs.length;hitIDX++) {\n      final ScoreDoc expectedSD = expected.scoreDocs[hitIDX];\n      final ScoreDoc actualSD = actual.scoreDocs[hitIDX];\n      Assert.assertEquals(\"wrong hit docID\", expectedSD.doc, actualSD.doc);\n      Assert.assertEquals(\"wrong hit score\", expectedSD.score, actualSD.score, 0.0);\n      if (expectedSD instanceof FieldDoc) {\n        Assert.assertTrue(actualSD instanceof FieldDoc);\n        Assert.assertArrayEquals(\"wrong sort field values\",\n                            ((FieldDoc) expectedSD).fields,\n                            ((FieldDoc) actualSD).fields);\n      } else {\n        Assert.assertFalse(actualSD instanceof FieldDoc);\n      }\n    }\n  }\n\n","sourceOld":"  public static void assertEquals(TopDocs expected, TopDocs actual) {\n    Assert.assertEquals(\"wrong total hits\", expected.totalHits, actual.totalHits);\n    Assert.assertEquals(\"wrong maxScore\", expected.getMaxScore(), actual.getMaxScore(), 0.0);\n    Assert.assertEquals(\"wrong hit count\", expected.scoreDocs.length, actual.scoreDocs.length);\n    for(int hitIDX=0;hitIDX<expected.scoreDocs.length;hitIDX++) {\n      final ScoreDoc expectedSD = expected.scoreDocs[hitIDX];\n      final ScoreDoc actualSD = actual.scoreDocs[hitIDX];\n      Assert.assertEquals(\"wrong hit docID\", expectedSD.doc, actualSD.doc);\n      Assert.assertEquals(\"wrong hit score\", expectedSD.score, actualSD.score, 0.0);\n      if (expectedSD instanceof FieldDoc) {\n        Assert.assertTrue(actualSD instanceof FieldDoc);\n        Assert.assertArrayEquals(\"wrong sort field values\",\n                            ((FieldDoc) expectedSD).fields,\n                            ((FieldDoc) actualSD).fields);\n      } else {\n        Assert.assertFalse(actualSD instanceof FieldDoc);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7b91922b55d15444d554721b352861d028eb8278":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["7b91922b55d15444d554721b352861d028eb8278"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"7b91922b55d15444d554721b352861d028eb8278":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7b91922b55d15444d554721b352861d028eb8278"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}