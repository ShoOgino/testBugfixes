{"path":"modules/analysis/common/src/test/org/apache/lucene/analysis/ar/TestArabicAnalyzer#testCustomStopwords().mjava","commits":[{"id":"0f080986da691a3bba7b757f43ab72cdc82b57ce","date":1273069619,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/ar/TestArabicAnalyzer#testCustomStopwords().mjava","pathOld":"lucene/contrib/analyzers/common/src/test/org/apache/lucene/analysis/ar/TestArabicAnalyzer#testCustomStopwords().mjava","sourceNew":"  /**\n   * Test that custom stopwords work, and are not case-sensitive.\n   */\n  public void testCustomStopwords() throws Exception {\n    Set<String> set = new HashSet<String>();\n    Collections.addAll(set, \"the\", \"and\", \"a\");\n    ArabicAnalyzer a = new ArabicAnalyzer(TEST_VERSION_CURRENT, set);\n    assertAnalyzesTo(a, \"The quick brown fox.\", new String[] { \"quick\",\n        \"brown\", \"fox\" });\n  }\n\n","sourceOld":"  /**\n   * Test that custom stopwords work, and are not case-sensitive.\n   */\n  public void testCustomStopwords() throws Exception {\n    Set<String> set = new HashSet<String>();\n    Collections.addAll(set, \"the\", \"and\", \"a\");\n    ArabicAnalyzer a = new ArabicAnalyzer(TEST_VERSION_CURRENT, set);\n    assertAnalyzesTo(a, \"The quick brown fox.\", new String[] { \"quick\",\n        \"brown\", \"fox\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c39363fefe2d7f6a6d50ce8e8b758c17a257c58e","date":1328817590,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/ar/TestArabicAnalyzer#testCustomStopwords().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/ar/TestArabicAnalyzer#testCustomStopwords().mjava","sourceNew":"  /**\n   * Test that custom stopwords work, and are not case-sensitive.\n   */\n  public void testCustomStopwords() throws Exception {\n    CharArraySet set = new CharArraySet(TEST_VERSION_CURRENT, asSet(\"the\", \"and\", \"a\"), false);\n    ArabicAnalyzer a = new ArabicAnalyzer(TEST_VERSION_CURRENT, set);\n    assertAnalyzesTo(a, \"The quick brown fox.\", new String[] { \"quick\",\n        \"brown\", \"fox\" });\n  }\n\n","sourceOld":"  /**\n   * Test that custom stopwords work, and are not case-sensitive.\n   */\n  public void testCustomStopwords() throws Exception {\n    Set<String> set = new HashSet<String>();\n    Collections.addAll(set, \"the\", \"and\", \"a\");\n    ArabicAnalyzer a = new ArabicAnalyzer(TEST_VERSION_CURRENT, set);\n    assertAnalyzesTo(a, \"The quick brown fox.\", new String[] { \"quick\",\n        \"brown\", \"fox\" });\n  }\n\n","bugFix":["ddc5fbfd4c64963aba52713a4496522540294d69"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/ar/TestArabicAnalyzer#testCustomStopwords().mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/ar/TestArabicAnalyzer#testCustomStopwords().mjava","sourceNew":"  /**\n   * Test that custom stopwords work, and are not case-sensitive.\n   */\n  public void testCustomStopwords() throws Exception {\n    CharArraySet set = new CharArraySet(TEST_VERSION_CURRENT, asSet(\"the\", \"and\", \"a\"), false);\n    ArabicAnalyzer a = new ArabicAnalyzer(TEST_VERSION_CURRENT, set);\n    assertAnalyzesTo(a, \"The quick brown fox.\", new String[] { \"quick\",\n        \"brown\", \"fox\" });\n  }\n\n","sourceOld":"  /**\n   * Test that custom stopwords work, and are not case-sensitive.\n   */\n  public void testCustomStopwords() throws Exception {\n    CharArraySet set = new CharArraySet(TEST_VERSION_CURRENT, asSet(\"the\", \"and\", \"a\"), false);\n    ArabicAnalyzer a = new ArabicAnalyzer(TEST_VERSION_CURRENT, set);\n    assertAnalyzesTo(a, \"The quick brown fox.\", new String[] { \"quick\",\n        \"brown\", \"fox\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["c39363fefe2d7f6a6d50ce8e8b758c17a257c58e"],"c39363fefe2d7f6a6d50ce8e8b758c17a257c58e":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c39363fefe2d7f6a6d50ce8e8b758c17a257c58e":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["c39363fefe2d7f6a6d50ce8e8b758c17a257c58e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}