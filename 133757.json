{"path":"solr/core/src/test/org/apache/solr/response/JSONWriterTest#testArrntvWriterLacksMethodsOfItsOwn().mjava","commits":[{"id":"87f40a063571d1870bae89b6d191c3cb53b10f5e","date":1482933535,"type":1,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/response/JSONWriterTest#testArrntvWriterLacksMethodsOfItsOwn().mjava","pathOld":"solr/core/src/test/org/apache/solr/response/JSONWriterTest#testArrnvpWriterLacksMethodsOfItsOwn().mjava","sourceNew":"  @Test\n  public void testArrntvWriterLacksMethodsOfItsOwn() {\n    final Class<?> subClass = ArrayOfNameTypeValueJSONWriter.class;\n    final Class<?> superClass = subClass.getSuperclass();\n    // ArrayOfNamedValuePairJSONWriter is a simple sub-class\n    // which should have (almost) no methods of its own\n    for (final Method subClassMethod : subClass.getDeclaredMethods()) {\n      // only own private method of its own\n      if (subClassMethod.getName().equals(\"ifNeededWriteTypeAndValueKey\")) continue;\n      try {\n        final Method superClassMethod = superClass.getDeclaredMethod(\n            subClassMethod.getName(),\n            subClassMethod.getParameterTypes());\n\n          assertEquals(\"getReturnType() difference\",\n              subClassMethod.getReturnType(),\n              superClassMethod.getReturnType());\n      } catch (NoSuchMethodException e) {\n          fail(subClass + \" should not have '\" + subClassMethod + \"' method of its own\");\n      }\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testArrnvpWriterLacksMethodsOfItsOwn() {\n    final Class<?> subClass = ArrayOfNamedValuePairJSONWriter.class;\n    final Class<?> superClass = subClass.getSuperclass();\n    // ArrayOfNamedValuePairJSONWriter is a simple sub-class\n    // which should have (almost) no methods of its own\n    for (final Method subClassMethod : subClass.getDeclaredMethods()) {\n      // only own private method of its own\n      if (subClassMethod.getName().equals(\"ifNeededWriteTypeAsKey\")) continue;\n      try {\n        final Method superClassMethod = superClass.getDeclaredMethod(\n            subClassMethod.getName(),\n            subClassMethod.getParameterTypes());\n\n          assertEquals(\"getReturnType() difference\",\n              subClassMethod.getReturnType(),\n              superClassMethod.getReturnType());\n      } catch (NoSuchMethodException e) {\n          fail(subClass + \" should not have '\" + subClassMethod + \"' method of its own\");\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f03e4bed5023ec3ef93a771b8888cae991cf448d","date":1483469262,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/response/JSONWriterTest#testArrntvWriterLacksMethodsOfItsOwn().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testArrntvWriterLacksMethodsOfItsOwn() {\n    final Class<?> subClass = ArrayOfNameTypeValueJSONWriter.class;\n    final Class<?> superClass = subClass.getSuperclass();\n    // ArrayOfNamedValuePairJSONWriter is a simple sub-class\n    // which should have (almost) no methods of its own\n    for (final Method subClassMethod : subClass.getDeclaredMethods()) {\n      // only own private method of its own\n      if (subClassMethod.getName().equals(\"ifNeededWriteTypeAndValueKey\")) continue;\n      try {\n        final Method superClassMethod = superClass.getDeclaredMethod(\n            subClassMethod.getName(),\n            subClassMethod.getParameterTypes());\n\n          assertEquals(\"getReturnType() difference\",\n              subClassMethod.getReturnType(),\n              superClassMethod.getReturnType());\n      } catch (NoSuchMethodException e) {\n          fail(subClass + \" should not have '\" + subClassMethod + \"' method of its own\");\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"26dad91f15019714a045b4d8c5f40162b2058b54","date":1528551655,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/response/JSONWriterTest#testArrntvWriterLacksMethodsOfItsOwn().mjava","pathOld":"solr/core/src/test/org/apache/solr/response/JSONWriterTest#testArrntvWriterLacksMethodsOfItsOwn().mjava","sourceNew":"  @Test\n  public void testArrntvWriterLacksMethodsOfItsOwn() {\n    final Class<?> subClass = ArrayOfNameTypeValueJSONWriter.class;\n    final Class<?> superClass = subClass.getSuperclass();\n    // ArrayOfNamedValuePairJSONWriter is a simple sub-class\n    // which should have (almost) no methods of its own\n    for (final Method subClassMethod : subClass.getDeclaredMethods()) {\n      // only own private method of its own\n      if (subClassMethod.getName().equals(\"ifNeededWriteTypeAndValueKey\")) continue;\n      try {\n        final Method superClassMethod = getDeclaredMethodInClasses( subClassMethod,superClass, JsonTextWriter.class);\n\n          assertEquals(\"getReturnType() difference\",\n              subClassMethod.getReturnType(),\n              superClassMethod.getReturnType());\n      } catch (NoSuchMethodException e) {\n          fail(subClass + \" should not have '\" + subClassMethod + \"' method of its own\");\n      }\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testArrntvWriterLacksMethodsOfItsOwn() {\n    final Class<?> subClass = ArrayOfNameTypeValueJSONWriter.class;\n    final Class<?> superClass = subClass.getSuperclass();\n    // ArrayOfNamedValuePairJSONWriter is a simple sub-class\n    // which should have (almost) no methods of its own\n    for (final Method subClassMethod : subClass.getDeclaredMethods()) {\n      // only own private method of its own\n      if (subClassMethod.getName().equals(\"ifNeededWriteTypeAndValueKey\")) continue;\n      try {\n        final Method superClassMethod = superClass.getDeclaredMethod(\n            subClassMethod.getName(),\n            subClassMethod.getParameterTypes());\n\n          assertEquals(\"getReturnType() difference\",\n              subClassMethod.getReturnType(),\n              superClassMethod.getReturnType());\n      } catch (NoSuchMethodException e) {\n          fail(subClass + \" should not have '\" + subClassMethod + \"' method of its own\");\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26","date":1531589977,"type":3,"author":"Michael Braun","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/response/JSONWriterTest#testArrntvWriterLacksMethodsOfItsOwn().mjava","pathOld":"solr/core/src/test/org/apache/solr/response/JSONWriterTest#testArrntvWriterLacksMethodsOfItsOwn().mjava","sourceNew":"  @Test\n  public void testArrntvWriterLacksMethodsOfItsOwn() {\n    final Class<?> subClass = ArrayOfNameTypeValueJSONWriter.class;\n    final Class<?> superClass = subClass.getSuperclass();\n    // ArrayOfNamedValuePairJSONWriter is a simple sub-class\n    // which should have (almost) no methods of its own\n    for (final Method subClassMethod : subClass.getDeclaredMethods()) {\n      // only own private method of its own\n      if (subClassMethod.getName().equals(\"ifNeededWriteTypeAndValueKey\")) continue;\n      try {\n        final Method superClassMethod = getDeclaredMethodInClasses( subClassMethod,superClass, JsonTextWriter.class);\n\n          assertEquals(\"getReturnType() difference\",\n              subClassMethod.getReturnType(),\n              superClassMethod.getReturnType());\n      } catch (NoSuchMethodException e) {\n          fail(subClass + \" should not have '\" + subClassMethod + \"' method of its own\");\n      }\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testArrntvWriterLacksMethodsOfItsOwn() {\n    final Class<?> subClass = ArrayOfNameTypeValueJSONWriter.class;\n    final Class<?> superClass = subClass.getSuperclass();\n    // ArrayOfNamedValuePairJSONWriter is a simple sub-class\n    // which should have (almost) no methods of its own\n    for (final Method subClassMethod : subClass.getDeclaredMethods()) {\n      // only own private method of its own\n      if (subClassMethod.getName().equals(\"ifNeededWriteTypeAndValueKey\")) continue;\n      try {\n        final Method superClassMethod = superClass.getDeclaredMethod(\n            subClassMethod.getName(),\n            subClassMethod.getParameterTypes());\n\n          assertEquals(\"getReturnType() difference\",\n              subClassMethod.getReturnType(),\n              superClassMethod.getReturnType());\n      } catch (NoSuchMethodException e) {\n          fail(subClass + \" should not have '\" + subClassMethod + \"' method of its own\");\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","date":1531905561,"type":3,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/response/JSONWriterTest#testArrntvWriterLacksMethodsOfItsOwn().mjava","pathOld":"solr/core/src/test/org/apache/solr/response/JSONWriterTest#testArrntvWriterLacksMethodsOfItsOwn().mjava","sourceNew":"  @Test\n  public void testArrntvWriterLacksMethodsOfItsOwn() {\n    final Class<?> subClass = ArrayOfNameTypeValueJSONWriter.class;\n    final Class<?> superClass = subClass.getSuperclass();\n    // ArrayOfNamedValuePairJSONWriter is a simple sub-class\n    // which should have (almost) no methods of its own\n    for (final Method subClassMethod : subClass.getDeclaredMethods()) {\n      // only own private method of its own\n      if (subClassMethod.getName().equals(\"ifNeededWriteTypeAndValueKey\")) continue;\n      try {\n        final Method superClassMethod = getDeclaredMethodInClasses( subClassMethod,superClass, JsonTextWriter.class);\n\n          assertEquals(\"getReturnType() difference\",\n              subClassMethod.getReturnType(),\n              superClassMethod.getReturnType());\n      } catch (NoSuchMethodException e) {\n          fail(subClass + \" should not have '\" + subClassMethod + \"' method of its own\");\n      }\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testArrntvWriterLacksMethodsOfItsOwn() {\n    final Class<?> subClass = ArrayOfNameTypeValueJSONWriter.class;\n    final Class<?> superClass = subClass.getSuperclass();\n    // ArrayOfNamedValuePairJSONWriter is a simple sub-class\n    // which should have (almost) no methods of its own\n    for (final Method subClassMethod : subClass.getDeclaredMethods()) {\n      // only own private method of its own\n      if (subClassMethod.getName().equals(\"ifNeededWriteTypeAndValueKey\")) continue;\n      try {\n        final Method superClassMethod = superClass.getDeclaredMethod(\n            subClassMethod.getName(),\n            subClassMethod.getParameterTypes());\n\n          assertEquals(\"getReturnType() difference\",\n              subClassMethod.getReturnType(),\n              superClassMethod.getReturnType());\n      } catch (NoSuchMethodException e) {\n          fail(subClass + \" should not have '\" + subClassMethod + \"' method of its own\");\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a56a9893014b284af4d1af451e6c02e7ffdf5b6e","date":1590065972,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/response/JSONWriterTest#testArrntvWriterLacksMethodsOfItsOwn().mjava","pathOld":"solr/core/src/test/org/apache/solr/response/JSONWriterTest#testArrntvWriterLacksMethodsOfItsOwn().mjava","sourceNew":"  @Test\n  public void testArrntvWriterLacksMethodsOfItsOwn() {\n    final Class<?> subClass = JSONResponseWriter.ArrayOfNameTypeValueJSONWriter.class;\n    final Class<?> superClass = subClass.getSuperclass();\n    // ArrayOfNamedValuePairJSONWriter is a simple sub-class\n    // which should have (almost) no methods of its own\n    for (final Method subClassMethod : subClass.getDeclaredMethods()) {\n      // only own private method of its own\n      if (subClassMethod.getName().equals(\"ifNeededWriteTypeAndValueKey\")) continue;\n      try {\n        final Method superClassMethod = getDeclaredMethodInClasses( subClassMethod,superClass, JsonTextWriter.class);\n\n          assertEquals(\"getReturnType() difference\",\n              subClassMethod.getReturnType(),\n              superClassMethod.getReturnType());\n      } catch (NoSuchMethodException e) {\n          fail(subClass + \" should not have '\" + subClassMethod + \"' method of its own\");\n      }\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testArrntvWriterLacksMethodsOfItsOwn() {\n    final Class<?> subClass = ArrayOfNameTypeValueJSONWriter.class;\n    final Class<?> superClass = subClass.getSuperclass();\n    // ArrayOfNamedValuePairJSONWriter is a simple sub-class\n    // which should have (almost) no methods of its own\n    for (final Method subClassMethod : subClass.getDeclaredMethods()) {\n      // only own private method of its own\n      if (subClassMethod.getName().equals(\"ifNeededWriteTypeAndValueKey\")) continue;\n      try {\n        final Method superClassMethod = getDeclaredMethodInClasses( subClassMethod,superClass, JsonTextWriter.class);\n\n          assertEquals(\"getReturnType() difference\",\n              subClassMethod.getReturnType(),\n              superClassMethod.getReturnType());\n      } catch (NoSuchMethodException e) {\n          fail(subClass + \" should not have '\" + subClassMethod + \"' method of its own\");\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a56a9893014b284af4d1af451e6c02e7ffdf5b6e":["26dad91f15019714a045b4d8c5f40162b2058b54"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":["87f40a063571d1870bae89b6d191c3cb53b10f5e","26dad91f15019714a045b4d8c5f40162b2058b54"],"26dad91f15019714a045b4d8c5f40162b2058b54":["87f40a063571d1870bae89b6d191c3cb53b10f5e"],"87f40a063571d1870bae89b6d191c3cb53b10f5e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a56a9893014b284af4d1af451e6c02e7ffdf5b6e"],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":["87f40a063571d1870bae89b6d191c3cb53b10f5e","26dad91f15019714a045b4d8c5f40162b2058b54"],"f03e4bed5023ec3ef93a771b8888cae991cf448d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","87f40a063571d1870bae89b6d191c3cb53b10f5e"]},"commit2Childs":{"a56a9893014b284af4d1af451e6c02e7ffdf5b6e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":[],"26dad91f15019714a045b4d8c5f40162b2058b54":["a56a9893014b284af4d1af451e6c02e7ffdf5b6e","0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"87f40a063571d1870bae89b6d191c3cb53b10f5e":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","26dad91f15019714a045b4d8c5f40162b2058b54","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26","f03e4bed5023ec3ef93a771b8888cae991cf448d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["87f40a063571d1870bae89b6d191c3cb53b10f5e","f03e4bed5023ec3ef93a771b8888cae991cf448d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":[],"f03e4bed5023ec3ef93a771b8888cae991cf448d":[]},"heads":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26","f03e4bed5023ec3ef93a771b8888cae991cf448d"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}