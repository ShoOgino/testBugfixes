{"path":"modules/benchmark/src/test/org/apache/lucene/benchmark/byTask/feeds/DocMakerTest#createTestNormsDocument(boolean,boolean,boolean,boolean).mjava","commits":[{"id":"ecc11368dc265bfdad90214f8bf5da99016ab1e2","date":1294144090,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"modules/benchmark/src/test/org/apache/lucene/benchmark/byTask/feeds/DocMakerTest#createTestNormsDocument(boolean,boolean,boolean,boolean).mjava","pathOld":"lucene/contrib/benchmark/src/test/org/apache/lucene/benchmark/byTask/feeds/DocMakerTest#createTestNormsDocument(boolean,boolean,boolean,boolean).mjava","sourceNew":"  private Document createTestNormsDocument(boolean setNormsProp,\n      boolean normsPropVal, boolean setBodyNormsProp, boolean bodyNormsVal)\n      throws Exception {\n    Properties props = new Properties();\n    \n    // Indexing configuration.\n    props.setProperty(\"analyzer\", MockAnalyzer.class.getName());\n    props.setProperty(\"content.source\", OneDocSource.class.getName());\n    props.setProperty(\"directory\", \"RAMDirectory\");\n    if (setNormsProp) {\n      props.setProperty(\"doc.tokenized.norms\", Boolean.toString(normsPropVal));\n    }\n    if (setBodyNormsProp) {\n      props.setProperty(\"doc.body.tokenized.norms\", Boolean.toString(bodyNormsVal));\n    }\n    \n    // Create PerfRunData\n    Config config = new Config(props);\n    \n    DocMaker dm = new DocMaker();\n    dm.setConfig(config);\n    return dm.makeDocument();\n  }\n\n","sourceOld":"  private Document createTestNormsDocument(boolean setNormsProp,\n      boolean normsPropVal, boolean setBodyNormsProp, boolean bodyNormsVal)\n      throws Exception {\n    Properties props = new Properties();\n    \n    // Indexing configuration.\n    props.setProperty(\"analyzer\", MockAnalyzer.class.getName());\n    props.setProperty(\"content.source\", OneDocSource.class.getName());\n    props.setProperty(\"directory\", \"RAMDirectory\");\n    if (setNormsProp) {\n      props.setProperty(\"doc.tokenized.norms\", Boolean.toString(normsPropVal));\n    }\n    if (setBodyNormsProp) {\n      props.setProperty(\"doc.body.tokenized.norms\", Boolean.toString(bodyNormsVal));\n    }\n    \n    // Create PerfRunData\n    Config config = new Config(props);\n    \n    DocMaker dm = new DocMaker();\n    dm.setConfig(config);\n    return dm.makeDocument();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"70ad682703b8585f5d0a637efec044d57ec05efb","date":1294259117,"type":1,"author":"Simon Willnauer","isMerge":true,"pathNew":"modules/benchmark/src/test/org/apache/lucene/benchmark/byTask/feeds/DocMakerTest#createTestNormsDocument(boolean,boolean,boolean,boolean).mjava","pathOld":"lucene/contrib/benchmark/src/test/org/apache/lucene/benchmark/byTask/feeds/DocMakerTest#createTestNormsDocument(boolean,boolean,boolean,boolean).mjava","sourceNew":"  private Document createTestNormsDocument(boolean setNormsProp,\n      boolean normsPropVal, boolean setBodyNormsProp, boolean bodyNormsVal)\n      throws Exception {\n    Properties props = new Properties();\n    \n    // Indexing configuration.\n    props.setProperty(\"analyzer\", MockAnalyzer.class.getName());\n    props.setProperty(\"content.source\", OneDocSource.class.getName());\n    props.setProperty(\"directory\", \"RAMDirectory\");\n    if (setNormsProp) {\n      props.setProperty(\"doc.tokenized.norms\", Boolean.toString(normsPropVal));\n    }\n    if (setBodyNormsProp) {\n      props.setProperty(\"doc.body.tokenized.norms\", Boolean.toString(bodyNormsVal));\n    }\n    \n    // Create PerfRunData\n    Config config = new Config(props);\n    \n    DocMaker dm = new DocMaker();\n    dm.setConfig(config);\n    return dm.makeDocument();\n  }\n\n","sourceOld":"  private Document createTestNormsDocument(boolean setNormsProp,\n      boolean normsPropVal, boolean setBodyNormsProp, boolean bodyNormsVal)\n      throws Exception {\n    Properties props = new Properties();\n    \n    // Indexing configuration.\n    props.setProperty(\"analyzer\", MockAnalyzer.class.getName());\n    props.setProperty(\"content.source\", OneDocSource.class.getName());\n    props.setProperty(\"directory\", \"RAMDirectory\");\n    if (setNormsProp) {\n      props.setProperty(\"doc.tokenized.norms\", Boolean.toString(normsPropVal));\n    }\n    if (setBodyNormsProp) {\n      props.setProperty(\"doc.body.tokenized.norms\", Boolean.toString(bodyNormsVal));\n    }\n    \n    // Create PerfRunData\n    Config config = new Config(props);\n    \n    DocMaker dm = new DocMaker();\n    dm.setConfig(config);\n    return dm.makeDocument();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"868da859b43505d9d2a023bfeae6dd0c795f5295","date":1294948401,"type":1,"author":"Michael Busch","isMerge":true,"pathNew":"modules/benchmark/src/test/org/apache/lucene/benchmark/byTask/feeds/DocMakerTest#createTestNormsDocument(boolean,boolean,boolean,boolean).mjava","pathOld":"lucene/contrib/benchmark/src/test/org/apache/lucene/benchmark/byTask/feeds/DocMakerTest#createTestNormsDocument(boolean,boolean,boolean,boolean).mjava","sourceNew":"  private Document createTestNormsDocument(boolean setNormsProp,\n      boolean normsPropVal, boolean setBodyNormsProp, boolean bodyNormsVal)\n      throws Exception {\n    Properties props = new Properties();\n    \n    // Indexing configuration.\n    props.setProperty(\"analyzer\", MockAnalyzer.class.getName());\n    props.setProperty(\"content.source\", OneDocSource.class.getName());\n    props.setProperty(\"directory\", \"RAMDirectory\");\n    if (setNormsProp) {\n      props.setProperty(\"doc.tokenized.norms\", Boolean.toString(normsPropVal));\n    }\n    if (setBodyNormsProp) {\n      props.setProperty(\"doc.body.tokenized.norms\", Boolean.toString(bodyNormsVal));\n    }\n    \n    // Create PerfRunData\n    Config config = new Config(props);\n    \n    DocMaker dm = new DocMaker();\n    dm.setConfig(config);\n    return dm.makeDocument();\n  }\n\n","sourceOld":"  private Document createTestNormsDocument(boolean setNormsProp,\n      boolean normsPropVal, boolean setBodyNormsProp, boolean bodyNormsVal)\n      throws Exception {\n    Properties props = new Properties();\n    \n    // Indexing configuration.\n    props.setProperty(\"analyzer\", MockAnalyzer.class.getName());\n    props.setProperty(\"content.source\", OneDocSource.class.getName());\n    props.setProperty(\"directory\", \"RAMDirectory\");\n    if (setNormsProp) {\n      props.setProperty(\"doc.tokenized.norms\", Boolean.toString(normsPropVal));\n    }\n    if (setBodyNormsProp) {\n      props.setProperty(\"doc.body.tokenized.norms\", Boolean.toString(bodyNormsVal));\n    }\n    \n    // Create PerfRunData\n    Config config = new Config(props);\n    \n    DocMaker dm = new DocMaker();\n    dm.setConfig(config);\n    return dm.makeDocument();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fd0491419a55db5050f375ec779df63ce76d9db5","date":1302545750,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"modules/benchmark/src/test/org/apache/lucene/benchmark/byTask/feeds/DocMakerTest#createTestNormsDocument(boolean,boolean,boolean,boolean).mjava","pathOld":"modules/benchmark/src/test/org/apache/lucene/benchmark/byTask/feeds/DocMakerTest#createTestNormsDocument(boolean,boolean,boolean,boolean).mjava","sourceNew":"  private Document createTestNormsDocument(boolean setNormsProp,\n      boolean normsPropVal, boolean setBodyNormsProp, boolean bodyNormsVal)\n      throws Exception {\n    Properties props = new Properties();\n    \n    // Indexing configuration.\n    props.setProperty(\"analyzer\", WhitespaceAnalyzer.class.getName());\n    props.setProperty(\"content.source\", OneDocSource.class.getName());\n    props.setProperty(\"directory\", \"RAMDirectory\");\n    if (setNormsProp) {\n      props.setProperty(\"doc.tokenized.norms\", Boolean.toString(normsPropVal));\n    }\n    if (setBodyNormsProp) {\n      props.setProperty(\"doc.body.tokenized.norms\", Boolean.toString(bodyNormsVal));\n    }\n    \n    // Create PerfRunData\n    Config config = new Config(props);\n    \n    DocMaker dm = new DocMaker();\n    dm.setConfig(config);\n    return dm.makeDocument();\n  }\n\n","sourceOld":"  private Document createTestNormsDocument(boolean setNormsProp,\n      boolean normsPropVal, boolean setBodyNormsProp, boolean bodyNormsVal)\n      throws Exception {\n    Properties props = new Properties();\n    \n    // Indexing configuration.\n    props.setProperty(\"analyzer\", MockAnalyzer.class.getName());\n    props.setProperty(\"content.source\", OneDocSource.class.getName());\n    props.setProperty(\"directory\", \"RAMDirectory\");\n    if (setNormsProp) {\n      props.setProperty(\"doc.tokenized.norms\", Boolean.toString(normsPropVal));\n    }\n    if (setBodyNormsProp) {\n      props.setProperty(\"doc.body.tokenized.norms\", Boolean.toString(bodyNormsVal));\n    }\n    \n    // Create PerfRunData\n    Config config = new Config(props);\n    \n    DocMaker dm = new DocMaker();\n    dm.setConfig(config);\n    return dm.makeDocument();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"962d04139994fce5193143ef35615499a9a96d78","date":1302693744,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"modules/benchmark/src/test/org/apache/lucene/benchmark/byTask/feeds/DocMakerTest#createTestNormsDocument(boolean,boolean,boolean,boolean).mjava","pathOld":"modules/benchmark/src/test/org/apache/lucene/benchmark/byTask/feeds/DocMakerTest#createTestNormsDocument(boolean,boolean,boolean,boolean).mjava","sourceNew":"  private Document createTestNormsDocument(boolean setNormsProp,\n      boolean normsPropVal, boolean setBodyNormsProp, boolean bodyNormsVal)\n      throws Exception {\n    Properties props = new Properties();\n    \n    // Indexing configuration.\n    props.setProperty(\"analyzer\", WhitespaceAnalyzer.class.getName());\n    props.setProperty(\"content.source\", OneDocSource.class.getName());\n    props.setProperty(\"directory\", \"RAMDirectory\");\n    if (setNormsProp) {\n      props.setProperty(\"doc.tokenized.norms\", Boolean.toString(normsPropVal));\n    }\n    if (setBodyNormsProp) {\n      props.setProperty(\"doc.body.tokenized.norms\", Boolean.toString(bodyNormsVal));\n    }\n    \n    // Create PerfRunData\n    Config config = new Config(props);\n    \n    DocMaker dm = new DocMaker();\n    dm.setConfig(config);\n    return dm.makeDocument();\n  }\n\n","sourceOld":"  private Document createTestNormsDocument(boolean setNormsProp,\n      boolean normsPropVal, boolean setBodyNormsProp, boolean bodyNormsVal)\n      throws Exception {\n    Properties props = new Properties();\n    \n    // Indexing configuration.\n    props.setProperty(\"analyzer\", MockAnalyzer.class.getName());\n    props.setProperty(\"content.source\", OneDocSource.class.getName());\n    props.setProperty(\"directory\", \"RAMDirectory\");\n    if (setNormsProp) {\n      props.setProperty(\"doc.tokenized.norms\", Boolean.toString(normsPropVal));\n    }\n    if (setBodyNormsProp) {\n      props.setProperty(\"doc.body.tokenized.norms\", Boolean.toString(bodyNormsVal));\n    }\n    \n    // Create PerfRunData\n    Config config = new Config(props);\n    \n    DocMaker dm = new DocMaker();\n    dm.setConfig(config);\n    return dm.makeDocument();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"modules/benchmark/src/test/org/apache/lucene/benchmark/byTask/feeds/DocMakerTest#createTestNormsDocument(boolean,boolean,boolean,boolean).mjava","pathOld":"modules/benchmark/src/test/org/apache/lucene/benchmark/byTask/feeds/DocMakerTest#createTestNormsDocument(boolean,boolean,boolean,boolean).mjava","sourceNew":"  private Document createTestNormsDocument(boolean setNormsProp,\n      boolean normsPropVal, boolean setBodyNormsProp, boolean bodyNormsVal)\n      throws Exception {\n    Properties props = new Properties();\n    \n    // Indexing configuration.\n    props.setProperty(\"analyzer\", WhitespaceAnalyzer.class.getName());\n    props.setProperty(\"content.source\", OneDocSource.class.getName());\n    props.setProperty(\"directory\", \"RAMDirectory\");\n    if (setNormsProp) {\n      props.setProperty(\"doc.tokenized.norms\", Boolean.toString(normsPropVal));\n    }\n    if (setBodyNormsProp) {\n      props.setProperty(\"doc.body.tokenized.norms\", Boolean.toString(bodyNormsVal));\n    }\n    \n    // Create PerfRunData\n    Config config = new Config(props);\n    \n    DocMaker dm = new DocMaker();\n    dm.setConfig(config);\n    return dm.makeDocument();\n  }\n\n","sourceOld":"  private Document createTestNormsDocument(boolean setNormsProp,\n      boolean normsPropVal, boolean setBodyNormsProp, boolean bodyNormsVal)\n      throws Exception {\n    Properties props = new Properties();\n    \n    // Indexing configuration.\n    props.setProperty(\"analyzer\", MockAnalyzer.class.getName());\n    props.setProperty(\"content.source\", OneDocSource.class.getName());\n    props.setProperty(\"directory\", \"RAMDirectory\");\n    if (setNormsProp) {\n      props.setProperty(\"doc.tokenized.norms\", Boolean.toString(normsPropVal));\n    }\n    if (setBodyNormsProp) {\n      props.setProperty(\"doc.body.tokenized.norms\", Boolean.toString(bodyNormsVal));\n    }\n    \n    // Create PerfRunData\n    Config config = new Config(props);\n    \n    DocMaker dm = new DocMaker();\n    dm.setConfig(config);\n    return dm.makeDocument();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"modules/benchmark/src/test/org/apache/lucene/benchmark/byTask/feeds/DocMakerTest#createTestNormsDocument(boolean,boolean,boolean,boolean).mjava","pathOld":"modules/benchmark/src/test/org/apache/lucene/benchmark/byTask/feeds/DocMakerTest#createTestNormsDocument(boolean,boolean,boolean,boolean).mjava","sourceNew":"  private Document createTestNormsDocument(boolean setNormsProp,\n      boolean normsPropVal, boolean setBodyNormsProp, boolean bodyNormsVal)\n      throws Exception {\n    Properties props = new Properties();\n    \n    // Indexing configuration.\n    props.setProperty(\"analyzer\", WhitespaceAnalyzer.class.getName());\n    props.setProperty(\"content.source\", OneDocSource.class.getName());\n    props.setProperty(\"directory\", \"RAMDirectory\");\n    if (setNormsProp) {\n      props.setProperty(\"doc.tokenized.norms\", Boolean.toString(normsPropVal));\n    }\n    if (setBodyNormsProp) {\n      props.setProperty(\"doc.body.tokenized.norms\", Boolean.toString(bodyNormsVal));\n    }\n    \n    // Create PerfRunData\n    Config config = new Config(props);\n    \n    DocMaker dm = new DocMaker();\n    dm.setConfig(config);\n    return dm.makeDocument();\n  }\n\n","sourceOld":"  private Document createTestNormsDocument(boolean setNormsProp,\n      boolean normsPropVal, boolean setBodyNormsProp, boolean bodyNormsVal)\n      throws Exception {\n    Properties props = new Properties();\n    \n    // Indexing configuration.\n    props.setProperty(\"analyzer\", MockAnalyzer.class.getName());\n    props.setProperty(\"content.source\", OneDocSource.class.getName());\n    props.setProperty(\"directory\", \"RAMDirectory\");\n    if (setNormsProp) {\n      props.setProperty(\"doc.tokenized.norms\", Boolean.toString(normsPropVal));\n    }\n    if (setBodyNormsProp) {\n      props.setProperty(\"doc.body.tokenized.norms\", Boolean.toString(bodyNormsVal));\n    }\n    \n    // Create PerfRunData\n    Config config = new Config(props);\n    \n    DocMaker dm = new DocMaker();\n    dm.setConfig(config);\n    return dm.makeDocument();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/feeds/DocMakerTest#createTestNormsDocument(boolean,boolean,boolean,boolean).mjava","pathOld":"modules/benchmark/src/test/org/apache/lucene/benchmark/byTask/feeds/DocMakerTest#createTestNormsDocument(boolean,boolean,boolean,boolean).mjava","sourceNew":"  private Document createTestNormsDocument(boolean setNormsProp,\n      boolean normsPropVal, boolean setBodyNormsProp, boolean bodyNormsVal)\n      throws Exception {\n    Properties props = new Properties();\n    \n    // Indexing configuration.\n    props.setProperty(\"analyzer\", WhitespaceAnalyzer.class.getName());\n    props.setProperty(\"content.source\", OneDocSource.class.getName());\n    props.setProperty(\"directory\", \"RAMDirectory\");\n    if (setNormsProp) {\n      props.setProperty(\"doc.tokenized.norms\", Boolean.toString(normsPropVal));\n    }\n    if (setBodyNormsProp) {\n      props.setProperty(\"doc.body.tokenized.norms\", Boolean.toString(bodyNormsVal));\n    }\n    \n    // Create PerfRunData\n    Config config = new Config(props);\n    \n    DocMaker dm = new DocMaker();\n    dm.setConfig(config);\n    return dm.makeDocument();\n  }\n\n","sourceOld":"  private Document createTestNormsDocument(boolean setNormsProp,\n      boolean normsPropVal, boolean setBodyNormsProp, boolean bodyNormsVal)\n      throws Exception {\n    Properties props = new Properties();\n    \n    // Indexing configuration.\n    props.setProperty(\"analyzer\", WhitespaceAnalyzer.class.getName());\n    props.setProperty(\"content.source\", OneDocSource.class.getName());\n    props.setProperty(\"directory\", \"RAMDirectory\");\n    if (setNormsProp) {\n      props.setProperty(\"doc.tokenized.norms\", Boolean.toString(normsPropVal));\n    }\n    if (setBodyNormsProp) {\n      props.setProperty(\"doc.body.tokenized.norms\", Boolean.toString(bodyNormsVal));\n    }\n    \n    // Create PerfRunData\n    Config config = new Config(props);\n    \n    DocMaker dm = new DocMaker();\n    dm.setConfig(config);\n    return dm.makeDocument();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"70ad682703b8585f5d0a637efec044d57ec05efb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ecc11368dc265bfdad90214f8bf5da99016ab1e2"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["fd0491419a55db5050f375ec779df63ce76d9db5"],"ecc11368dc265bfdad90214f8bf5da99016ab1e2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a3776dccca01c11e7046323cfad46a3b4a471233":["ecc11368dc265bfdad90214f8bf5da99016ab1e2","fd0491419a55db5050f375ec779df63ce76d9db5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["70ad682703b8585f5d0a637efec044d57ec05efb","fd0491419a55db5050f375ec779df63ce76d9db5"],"fd0491419a55db5050f375ec779df63ce76d9db5":["ecc11368dc265bfdad90214f8bf5da99016ab1e2"],"962d04139994fce5193143ef35615499a9a96d78":["868da859b43505d9d2a023bfeae6dd0c795f5295","fd0491419a55db5050f375ec779df63ce76d9db5"],"868da859b43505d9d2a023bfeae6dd0c795f5295":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ecc11368dc265bfdad90214f8bf5da99016ab1e2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"70ad682703b8585f5d0a637efec044d57ec05efb":["135621f3a0670a9394eb563224a3b76cc4dddc0f"],"ecc11368dc265bfdad90214f8bf5da99016ab1e2":["70ad682703b8585f5d0a637efec044d57ec05efb","a3776dccca01c11e7046323cfad46a3b4a471233","fd0491419a55db5050f375ec779df63ce76d9db5","868da859b43505d9d2a023bfeae6dd0c795f5295"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a3776dccca01c11e7046323cfad46a3b4a471233":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["70ad682703b8585f5d0a637efec044d57ec05efb","ecc11368dc265bfdad90214f8bf5da99016ab1e2","868da859b43505d9d2a023bfeae6dd0c795f5295"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":[],"fd0491419a55db5050f375ec779df63ce76d9db5":["b89678825b68eccaf09e6ab71675fc0b0af1e099","a3776dccca01c11e7046323cfad46a3b4a471233","135621f3a0670a9394eb563224a3b76cc4dddc0f","962d04139994fce5193143ef35615499a9a96d78"],"962d04139994fce5193143ef35615499a9a96d78":[],"868da859b43505d9d2a023bfeae6dd0c795f5295":["962d04139994fce5193143ef35615499a9a96d78"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a3776dccca01c11e7046323cfad46a3b4a471233","135621f3a0670a9394eb563224a3b76cc4dddc0f","962d04139994fce5193143ef35615499a9a96d78","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}