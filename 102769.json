{"path":"solr/core/src/java/org/apache/solr/cloud/autoscaling/TriggerEvent#fromMap(Map[String,Object]).mjava","commits":[{"id":"976feb6756f29529c6ce5b578e7d6fa8b1efcb30","date":1535461878,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/autoscaling/TriggerEvent#fromMap(Map[String,Object]).mjava","pathOld":"/dev/null","sourceNew":"  public static TriggerEvent fromMap(Map<String, Object> map) {\n    String id = (String)map.get(\"id\");\n    String source = (String)map.get(\"source\");\n    long eventTime = ((Number)map.get(\"eventTime\")).longValue();\n    TriggerEventType eventType = TriggerEventType.valueOf((String)map.get(\"eventType\"));\n    Map<String, Object> properties = (Map<String, Object>)map.get(\"properties\");\n    // properly deserialize some well-known complex properties\n    fixOps(TriggerEvent.REQUESTED_OPS, properties);\n    fixOps(TriggerEvent.UNSUPPORTED_OPS, properties);\n    TriggerEvent res = new TriggerEvent(id, eventType, source, eventTime, properties);\n    return res;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"daa0f21a44e235a2299ea1fa913898b182dd7cce","date":1590952026,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/autoscaling/TriggerEvent#fromMap(Map[String,Object]).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/autoscaling/TriggerEvent#fromMap(Map[String,Object]).mjava","sourceNew":"  @SuppressWarnings({\"unchecked\"})\n  public static TriggerEvent fromMap(Map<String, Object> map) {\n    String id = (String)map.get(\"id\");\n    String source = (String)map.get(\"source\");\n    long eventTime = ((Number)map.get(\"eventTime\")).longValue();\n    TriggerEventType eventType = TriggerEventType.valueOf((String)map.get(\"eventType\"));\n    Map<String, Object> properties = (Map<String, Object>)map.get(\"properties\");\n    // properly deserialize some well-known complex properties\n    fixOps(TriggerEvent.REQUESTED_OPS, properties);\n    fixOps(TriggerEvent.UNSUPPORTED_OPS, properties);\n    TriggerEvent res = new TriggerEvent(id, eventType, source, eventTime, properties);\n    return res;\n  }\n\n","sourceOld":"  public static TriggerEvent fromMap(Map<String, Object> map) {\n    String id = (String)map.get(\"id\");\n    String source = (String)map.get(\"source\");\n    long eventTime = ((Number)map.get(\"eventTime\")).longValue();\n    TriggerEventType eventType = TriggerEventType.valueOf((String)map.get(\"eventType\"));\n    Map<String, Object> properties = (Map<String, Object>)map.get(\"properties\");\n    // properly deserialize some well-known complex properties\n    fixOps(TriggerEvent.REQUESTED_OPS, properties);\n    fixOps(TriggerEvent.UNSUPPORTED_OPS, properties);\n    TriggerEvent res = new TriggerEvent(id, eventType, source, eventTime, properties);\n    return res;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f504512a03d978990cbff30db0522b354e846db","date":1595247421,"type":4,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/cloud/autoscaling/TriggerEvent#fromMap(Map[String,Object]).mjava","sourceNew":null,"sourceOld":"  @SuppressWarnings({\"unchecked\"})\n  public static TriggerEvent fromMap(Map<String, Object> map) {\n    String id = (String)map.get(\"id\");\n    String source = (String)map.get(\"source\");\n    long eventTime = ((Number)map.get(\"eventTime\")).longValue();\n    TriggerEventType eventType = TriggerEventType.valueOf((String)map.get(\"eventType\"));\n    Map<String, Object> properties = (Map<String, Object>)map.get(\"properties\");\n    // properly deserialize some well-known complex properties\n    fixOps(TriggerEvent.REQUESTED_OPS, properties);\n    fixOps(TriggerEvent.UNSUPPORTED_OPS, properties);\n    TriggerEvent res = new TriggerEvent(id, eventType, source, eventTime, properties);\n    return res;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3f504512a03d978990cbff30db0522b354e846db":["daa0f21a44e235a2299ea1fa913898b182dd7cce"],"daa0f21a44e235a2299ea1fa913898b182dd7cce":["976feb6756f29529c6ce5b578e7d6fa8b1efcb30"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"976feb6756f29529c6ce5b578e7d6fa8b1efcb30":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3f504512a03d978990cbff30db0522b354e846db"]},"commit2Childs":{"3f504512a03d978990cbff30db0522b354e846db":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"daa0f21a44e235a2299ea1fa913898b182dd7cce":["3f504512a03d978990cbff30db0522b354e846db"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["976feb6756f29529c6ce5b578e7d6fa8b1efcb30"],"976feb6756f29529c6ce5b578e7d6fa8b1efcb30":["daa0f21a44e235a2299ea1fa913898b182dd7cce"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}