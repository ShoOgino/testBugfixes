{"path":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/Geo3DUtil#decodeValueFloor(int).mjava","commits":[{"id":"873caa2b3b10bf0e4724a950c3a11b841ebb0e4a","date":1460035668,"type":0,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/Geo3DUtil#decodeValueFloor(int).mjava","pathOld":"/dev/null","sourceNew":"  /** Returns smallest double that would encode to int x. */\n  // NOTE: keep this package private!!\n  static double decodeValueFloor(int x) {\n    return x * DECODE;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"689b5e5c42bc5f2285fe820cd123d03e85d9df8c","date":1541139553,"type":3,"author":"iverase","isMerge":false,"pathNew":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/Geo3DUtil#decodeValueFloor(int).mjava","pathOld":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/Geo3DUtil#decodeValueFloor(int).mjava","sourceNew":"  /** Returns smallest double that would encode to int x. */\n  // NOTE: keep this package private!!\n  static double decodeValueFloor(int x) {\n    assert x <= MAX_ENCODED_VALUE && x >= MIN_ENCODED_VALUE;\n    if (x == MIN_ENCODED_VALUE) {\n      return -MAX_VALUE;\n    }\n    return x * DECODE;\n  }\n\n","sourceOld":"  /** Returns smallest double that would encode to int x. */\n  // NOTE: keep this package private!!\n  static double decodeValueFloor(int x) {\n    return x * DECODE;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c33ed6824db1d3c54aaf0208e68c3df3fd43d93a","date":1583186777,"type":4,"author":"Nicholas Knize","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/Geo3DUtil#decodeValueFloor(int).mjava","sourceNew":null,"sourceOld":"  /** Returns smallest double that would encode to int x. */\n  // NOTE: keep this package private!!\n  static double decodeValueFloor(int x) {\n    assert x <= MAX_ENCODED_VALUE && x >= MIN_ENCODED_VALUE;\n    if (x == MIN_ENCODED_VALUE) {\n      return -MAX_VALUE;\n    }\n    return x * DECODE;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"689b5e5c42bc5f2285fe820cd123d03e85d9df8c":["873caa2b3b10bf0e4724a950c3a11b841ebb0e4a"],"c33ed6824db1d3c54aaf0208e68c3df3fd43d93a":["689b5e5c42bc5f2285fe820cd123d03e85d9df8c"],"873caa2b3b10bf0e4724a950c3a11b841ebb0e4a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c33ed6824db1d3c54aaf0208e68c3df3fd43d93a"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["873caa2b3b10bf0e4724a950c3a11b841ebb0e4a"],"689b5e5c42bc5f2285fe820cd123d03e85d9df8c":["c33ed6824db1d3c54aaf0208e68c3df3fd43d93a"],"873caa2b3b10bf0e4724a950c3a11b841ebb0e4a":["689b5e5c42bc5f2285fe820cd123d03e85d9df8c"],"c33ed6824db1d3c54aaf0208e68c3df3fd43d93a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}