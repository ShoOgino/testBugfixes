{"path":"solr/core/src/java/org/apache/solr/util/SimplePostTool#pipe(InputStream,OutputStream).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SimplePostTool#pipe(InputStream,OutputStream).mjava","pathOld":"solr/src/java/org/apache/solr/util/SimplePostTool#pipe(InputStream,OutputStream).mjava","sourceNew":"  /**\n   * Pipes everything from the source to the dest.  If dest is null, \n   * then everything is read fro msource and thrown away.\n   */\n  private static void pipe(InputStream source, OutputStream dest) throws IOException {\n    byte[] buf = new byte[1024];\n    int read = 0;\n    while ( (read = source.read(buf) ) >= 0) {\n      if (null != dest) dest.write(buf, 0, read);\n    }\n    if (null != dest) dest.flush();\n  }\n\n","sourceOld":"  /**\n   * Pipes everything from the source to the dest.  If dest is null, \n   * then everything is read fro msource and thrown away.\n   */\n  private static void pipe(InputStream source, OutputStream dest) throws IOException {\n    byte[] buf = new byte[1024];\n    int read = 0;\n    while ( (read = source.read(buf) ) >= 0) {\n      if (null != dest) dest.write(buf, 0, read);\n    }\n    if (null != dest) dest.flush();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SimplePostTool#pipe(InputStream,OutputStream).mjava","pathOld":"solr/src/java/org/apache/solr/util/SimplePostTool#pipe(InputStream,OutputStream).mjava","sourceNew":"  /**\n   * Pipes everything from the source to the dest.  If dest is null, \n   * then everything is read fro msource and thrown away.\n   */\n  private static void pipe(InputStream source, OutputStream dest) throws IOException {\n    byte[] buf = new byte[1024];\n    int read = 0;\n    while ( (read = source.read(buf) ) >= 0) {\n      if (null != dest) dest.write(buf, 0, read);\n    }\n    if (null != dest) dest.flush();\n  }\n\n","sourceOld":"  /**\n   * Pipes everything from the source to the dest.  If dest is null, \n   * then everything is read fro msource and thrown away.\n   */\n  private static void pipe(InputStream source, OutputStream dest) throws IOException {\n    byte[] buf = new byte[1024];\n    int read = 0;\n    while ( (read = source.read(buf) ) >= 0) {\n      if (null != dest) dest.write(buf, 0, read);\n    }\n    if (null != dest) dest.flush();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/SimplePostTool#pipe(InputStream,OutputStream).mjava","pathOld":"solr/src/java/org/apache/solr/util/SimplePostTool#pipe(InputStream,OutputStream).mjava","sourceNew":"  /**\n   * Pipes everything from the source to the dest.  If dest is null, \n   * then everything is read fro msource and thrown away.\n   */\n  private static void pipe(InputStream source, OutputStream dest) throws IOException {\n    byte[] buf = new byte[1024];\n    int read = 0;\n    while ( (read = source.read(buf) ) >= 0) {\n      if (null != dest) dest.write(buf, 0, read);\n    }\n    if (null != dest) dest.flush();\n  }\n\n","sourceOld":"  /**\n   * Pipes everything from the source to the dest.  If dest is null, \n   * then everything is read fro msource and thrown away.\n   */\n  private static void pipe(InputStream source, OutputStream dest) throws IOException {\n    byte[] buf = new byte[1024];\n    int read = 0;\n    while ( (read = source.read(buf) ) >= 0) {\n      if (null != dest) dest.write(buf, 0, read);\n    }\n    if (null != dest) dest.flush();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"00c8a312269787ad677745cd5fc2631d61dff78d","date":1326209731,"type":3,"author":"Koji Sekiguchi","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SimplePostTool#pipe(InputStream,OutputStream).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SimplePostTool#pipe(InputStream,OutputStream).mjava","sourceNew":"  /**\n   * Pipes everything from the source to the dest.  If dest is null, \n   * then everything is read from source and thrown away.\n   */\n  private static void pipe(InputStream source, OutputStream dest) throws IOException {\n    byte[] buf = new byte[1024];\n    int read = 0;\n    while ( (read = source.read(buf) ) >= 0) {\n      if (null != dest) dest.write(buf, 0, read);\n    }\n    if (null != dest) dest.flush();\n  }\n\n","sourceOld":"  /**\n   * Pipes everything from the source to the dest.  If dest is null, \n   * then everything is read fro msource and thrown away.\n   */\n  private static void pipe(InputStream source, OutputStream dest) throws IOException {\n    byte[] buf = new byte[1024];\n    int read = 0;\n    while ( (read = source.read(buf) ) >= 0) {\n      if (null != dest) dest.write(buf, 0, read);\n    }\n    if (null != dest) dest.flush();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0db83f1bb855a4ac824c9a2a8e1ee9b29a039c15","date":1554259533,"type":3,"author":"Gus Heck","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/SimplePostTool#pipe(InputStream,OutputStream).mjava","pathOld":"solr/core/src/java/org/apache/solr/util/SimplePostTool#pipe(InputStream,OutputStream).mjava","sourceNew":"  /**\n   * Pipes everything from the source to the dest.  If dest is null,\n   * then everything is read from source and thrown away.\n   */\n  private static void pipe(InputStream source, OutputStream dest) throws IOException {\n    byte[] buf = new byte[1024];\n    int read = 0;\n    while ( (read = source.read(buf) ) >= 0) {\n      if (null != dest) dest.write(buf, 0, read);\n    }\n    if (null != dest) dest.flush();\n  }\n\n","sourceOld":"  /**\n   * Pipes everything from the source to the dest.  If dest is null, \n   * then everything is read from source and thrown away.\n   */\n  private static void pipe(InputStream source, OutputStream dest) throws IOException {\n    byte[] buf = new byte[1024];\n    int read = 0;\n    while ( (read = source.read(buf) ) >= 0) {\n      if (null != dest) dest.write(buf, 0, read);\n    }\n    if (null != dest) dest.flush();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"00c8a312269787ad677745cd5fc2631d61dff78d":["c26f00b574427b55127e869b935845554afde1fa"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"0db83f1bb855a4ac824c9a2a8e1ee9b29a039c15":["00c8a312269787ad677745cd5fc2631d61dff78d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0db83f1bb855a4ac824c9a2a8e1ee9b29a039c15"]},"commit2Childs":{"00c8a312269787ad677745cd5fc2631d61dff78d":["0db83f1bb855a4ac824c9a2a8e1ee9b29a039c15"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["00c8a312269787ad677745cd5fc2631d61dff78d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"0db83f1bb855a4ac824c9a2a8e1ee9b29a039c15":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}