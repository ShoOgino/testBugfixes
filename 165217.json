{"path":"lucene/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/processors/PointRangeQueryNodeProcessor#postProcessNode(QueryNode).mjava","commits":[{"id":"683242c67a3f6086bae8b1354748fcaa38edfbd5","date":1457575601,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queryparser/src/java/org/apache/lucene/queryparser/flexible/standard/processors/PointRangeQueryNodeProcessor#postProcessNode(QueryNode).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  protected QueryNode postProcessNode(QueryNode node) throws QueryNodeException {\n\n    if (node instanceof TermRangeQueryNode) {\n      QueryConfigHandler config = getQueryConfigHandler();\n\n      if (config != null) {\n        TermRangeQueryNode termRangeNode = (TermRangeQueryNode) node;\n        FieldConfig fieldConfig = config.getFieldConfig(StringUtils.toString(termRangeNode.getField()));\n\n        if (fieldConfig != null) {\n          PointsConfig numericConfig = fieldConfig.get(ConfigurationKeys.POINTS_CONFIG);\n\n          if (numericConfig != null) {\n            FieldQueryNode lower = termRangeNode.getLowerBound();\n            FieldQueryNode upper = termRangeNode.getUpperBound();\n\n            String lowerText = lower.getTextAsString();\n            String upperText = upper.getTextAsString();\n            NumberFormat numberFormat = numericConfig.getNumberFormat();\n            Number lowerNumber = null, upperNumber = null;\n\n            if (lowerText.length() > 0) {\n\n              try {\n                lowerNumber = numberFormat.parse(lowerText);\n\n              } catch (ParseException e) {\n                throw new QueryNodeParseException(new MessageImpl(\n                    QueryParserMessages.COULD_NOT_PARSE_NUMBER, lower\n                    .getTextAsString(), numberFormat.getClass()\n                    .getCanonicalName()), e);\n              }\n\n            }\n\n            if (upperText.length() > 0) {\n\n              try {\n                upperNumber = numberFormat.parse(upperText);\n\n              } catch (ParseException e) {\n                throw new QueryNodeParseException(new MessageImpl(\n                    QueryParserMessages.COULD_NOT_PARSE_NUMBER, upper\n                    .getTextAsString(), numberFormat.getClass()\n                    .getCanonicalName()), e);\n              }\n            }\n\n            if (Integer.class.equals(numericConfig.getType())) {\n              if (upperNumber != null) upperNumber = upperNumber.intValue();\n              if (lowerNumber != null) lowerNumber = lowerNumber.intValue();\n            } else if (Long.class.equals(numericConfig.getType())) {\n              if (upperNumber != null) upperNumber = upperNumber.longValue();\n              if (lowerNumber != null) lowerNumber = lowerNumber.longValue();\n            } else if (Double.class.equals(numericConfig.getType())) {\n              if (upperNumber != null) upperNumber = upperNumber.doubleValue();\n              if (lowerNumber != null) lowerNumber = lowerNumber.doubleValue();\n            } else if (Float.class.equals(numericConfig.getType())) {\n              if (upperNumber != null) upperNumber = upperNumber.floatValue();\n              if (lowerNumber != null) lowerNumber = lowerNumber.floatValue();\n            }\n\n            PointQueryNode lowerNode = new PointQueryNode(termRangeNode.getField(), lowerNumber, numberFormat);\n            PointQueryNode upperNode = new PointQueryNode(termRangeNode.getField(), upperNumber, numberFormat);\n\n            boolean lowerInclusive = termRangeNode.isLowerInclusive();\n            boolean upperInclusive = termRangeNode.isUpperInclusive();\n\n            return new PointRangeQueryNode(lowerNode, upperNode, lowerInclusive, upperInclusive, numericConfig);\n          }\n        }  \n      }\n    }\n    return node;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"683242c67a3f6086bae8b1354748fcaa38edfbd5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["683242c67a3f6086bae8b1354748fcaa38edfbd5"]},"commit2Childs":{"683242c67a3f6086bae8b1354748fcaa38edfbd5":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["683242c67a3f6086bae8b1354748fcaa38edfbd5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}