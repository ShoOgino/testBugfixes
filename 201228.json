{"path":"modules/analysis/common/src/java/org/apache/lucene/analysis/util/CharArrayMap#CharArrayMap(Version,int,boolean).mjava","commits":[{"id":"9dd42aeb8984bdfef80056722e7c1c239b7e3c07","date":1274826512,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/util/CharArrayMap#CharArrayMap(Version,int,boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/analysis/CharArrayMap#CharArrayMap(Version,int,boolean).mjava","sourceNew":"  /**\n   * Create map with enough capacity to hold startSize terms\n   * \n   * @param matchVersion\n   *          compatibility match version see <a href=\"#version\">Version\n   *          note</a> above for details.\n   * @param startSize\n   *          the initial capacity\n   * @param ignoreCase\n   *          <code>false</code> if and only if the set should be case sensitive\n   *          otherwise <code>true</code>.\n   */\n  @SuppressWarnings(\"unchecked\")\n  public CharArrayMap(Version matchVersion, int startSize, boolean ignoreCase) {\n    this.ignoreCase = ignoreCase;\n    int size = INIT_SIZE;\n    while(startSize + (startSize>>2) > size)\n      size <<= 1;\n    keys = new char[size][];\n    values = (V[]) new Object[size];\n    this.charUtils = CharacterUtils.getInstance(matchVersion);\n    this.matchVersion = matchVersion;\n  }\n\n","sourceOld":"  /**\n   * Create map with enough capacity to hold startSize terms\n   * \n   * @param matchVersion\n   *          compatibility match version see <a href=\"#version\">Version\n   *          note</a> above for details.\n   * @param startSize\n   *          the initial capacity\n   * @param ignoreCase\n   *          <code>false</code> if and only if the set should be case sensitive\n   *          otherwise <code>true</code>.\n   */\n  @SuppressWarnings(\"unchecked\")\n  public CharArrayMap(Version matchVersion, int startSize, boolean ignoreCase) {\n    this.ignoreCase = ignoreCase;\n    int size = INIT_SIZE;\n    while(startSize + (startSize>>2) > size)\n      size <<= 1;\n    keys = new char[size][];\n    values = (V[]) new Object[size];\n    this.charUtils = CharacterUtils.getInstance(matchVersion);\n    this.matchVersion = matchVersion;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/util/CharArrayMap#CharArrayMap(Version,int,boolean).mjava","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/util/CharArrayMap#CharArrayMap(Version,int,boolean).mjava","sourceNew":"  /**\n   * Create map with enough capacity to hold startSize terms\n   * \n   * @param matchVersion\n   *          compatibility match version see <a href=\"#version\">Version\n   *          note</a> above for details.\n   * @param startSize\n   *          the initial capacity\n   * @param ignoreCase\n   *          <code>false</code> if and only if the set should be case sensitive\n   *          otherwise <code>true</code>.\n   */\n  @SuppressWarnings(\"unchecked\")\n  public CharArrayMap(Version matchVersion, int startSize, boolean ignoreCase) {\n    this.ignoreCase = ignoreCase;\n    int size = INIT_SIZE;\n    while(startSize + (startSize>>2) > size)\n      size <<= 1;\n    keys = new char[size][];\n    values = (V[]) new Object[size];\n    this.charUtils = CharacterUtils.getInstance(matchVersion);\n    this.matchVersion = matchVersion;\n  }\n\n","sourceOld":"  /**\n   * Create map with enough capacity to hold startSize terms\n   * \n   * @param matchVersion\n   *          compatibility match version see <a href=\"#version\">Version\n   *          note</a> above for details.\n   * @param startSize\n   *          the initial capacity\n   * @param ignoreCase\n   *          <code>false</code> if and only if the set should be case sensitive\n   *          otherwise <code>true</code>.\n   */\n  @SuppressWarnings(\"unchecked\")\n  public CharArrayMap(Version matchVersion, int startSize, boolean ignoreCase) {\n    this.ignoreCase = ignoreCase;\n    int size = INIT_SIZE;\n    while(startSize + (startSize>>2) > size)\n      size <<= 1;\n    keys = new char[size][];\n    values = (V[]) new Object[size];\n    this.charUtils = CharacterUtils.getInstance(matchVersion);\n    this.matchVersion = matchVersion;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["9dd42aeb8984bdfef80056722e7c1c239b7e3c07"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9dd42aeb8984bdfef80056722e7c1c239b7e3c07":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9dd42aeb8984bdfef80056722e7c1c239b7e3c07"],"9dd42aeb8984bdfef80056722e7c1c239b7e3c07":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}