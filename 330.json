{"path":"solr/core/src/java/org/apache/solr/analysis/LegacyHTMLStripCharFilter#read().mjava","commits":[{"id":"e3a908bacd530957eaa6d2dfebdd534afd9ac60e","date":1327209646,"type":0,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/analysis/LegacyHTMLStripCharFilter#read().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public int read() throws IOException {\n    // TODO: Do we ever want to preserve CDATA sections?\n    // where do we have to worry about them?\n    // <![ CDATA [ unescaped markup ]]>\n    if (numWhitespace > 0){\n      numEaten += numWhitespace;\n      addOffCorrectMap(numReturned, numEaten);\n      numWhitespace = 0;\n    }\n    numReturned++;\n    //do not limit this one by the READAHEAD\n    while(true) {\n      int lastNumRead = numRead;\n      int ch = next();\n\n      switch (ch) {\n        case '&':\n          saveState();\n          ch = readEntity();\n          if (ch>=0) return ch;\n          if (ch==MISMATCH) {\n            restoreState();\n\n            return '&';\n          }\n          break;\n\n        case '<':\n          saveState();\n          ch = next();\n          int ret = MISMATCH;\n          if (ch=='!') {\n            ret = readBang(false);\n          } else if (ch=='/') {\n            ret = readName(true);\n            if (ret==MATCH) {\n              ch=nextSkipWS();\n              ret= ch=='>' ? MATCH : MISMATCH;\n            }\n          } else if (isAlpha(ch)) {\n            push(ch);\n            ret = readTag();\n          } else if (ch=='?') {\n            ret = readProcessingInstruction();\n          }\n\n          // matched something to be discarded, so break\n          // from this case and continue in the loop\n          if (ret==MATCH) {\n            //break;//was\n            //return whitespace from\n            numWhitespace = (numRead - lastNumRead) - 1;//tack on the -1 since we are returning a space right now\n            return ' ';\n          }\n\n          // didn't match any HTML constructs, so roll back\n          // the stream state and just return '<'\n          restoreState();\n          return '<';\n\n        default: return ch;\n      }\n\n    }\n\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"579dc30b5d3235c34cda518b2b6018d71a61879c","date":1327235122,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/analysis/LegacyHTMLStripCharFilter#read().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public int read() throws IOException {\n    // TODO: Do we ever want to preserve CDATA sections?\n    // where do we have to worry about them?\n    // <![ CDATA [ unescaped markup ]]>\n    if (numWhitespace > 0){\n      numEaten += numWhitespace;\n      addOffCorrectMap(numReturned, numEaten);\n      numWhitespace = 0;\n    }\n    numReturned++;\n    //do not limit this one by the READAHEAD\n    while(true) {\n      int lastNumRead = numRead;\n      int ch = next();\n\n      switch (ch) {\n        case '&':\n          saveState();\n          ch = readEntity();\n          if (ch>=0) return ch;\n          if (ch==MISMATCH) {\n            restoreState();\n\n            return '&';\n          }\n          break;\n\n        case '<':\n          saveState();\n          ch = next();\n          int ret = MISMATCH;\n          if (ch=='!') {\n            ret = readBang(false);\n          } else if (ch=='/') {\n            ret = readName(true);\n            if (ret==MATCH) {\n              ch=nextSkipWS();\n              ret= ch=='>' ? MATCH : MISMATCH;\n            }\n          } else if (isAlpha(ch)) {\n            push(ch);\n            ret = readTag();\n          } else if (ch=='?') {\n            ret = readProcessingInstruction();\n          }\n\n          // matched something to be discarded, so break\n          // from this case and continue in the loop\n          if (ret==MATCH) {\n            //break;//was\n            //return whitespace from\n            numWhitespace = (numRead - lastNumRead) - 1;//tack on the -1 since we are returning a space right now\n            return ' ';\n          }\n\n          // didn't match any HTML constructs, so roll back\n          // the stream state and just return '<'\n          restoreState();\n          return '<';\n\n        default: return ch;\n      }\n\n    }\n\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","date":1327523564,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/analysis/LegacyHTMLStripCharFilter#read().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public int read() throws IOException {\n    // TODO: Do we ever want to preserve CDATA sections?\n    // where do we have to worry about them?\n    // <![ CDATA [ unescaped markup ]]>\n    if (numWhitespace > 0){\n      numEaten += numWhitespace;\n      addOffCorrectMap(numReturned, numEaten);\n      numWhitespace = 0;\n    }\n    numReturned++;\n    //do not limit this one by the READAHEAD\n    while(true) {\n      int lastNumRead = numRead;\n      int ch = next();\n\n      switch (ch) {\n        case '&':\n          saveState();\n          ch = readEntity();\n          if (ch>=0) return ch;\n          if (ch==MISMATCH) {\n            restoreState();\n\n            return '&';\n          }\n          break;\n\n        case '<':\n          saveState();\n          ch = next();\n          int ret = MISMATCH;\n          if (ch=='!') {\n            ret = readBang(false);\n          } else if (ch=='/') {\n            ret = readName(true);\n            if (ret==MATCH) {\n              ch=nextSkipWS();\n              ret= ch=='>' ? MATCH : MISMATCH;\n            }\n          } else if (isAlpha(ch)) {\n            push(ch);\n            ret = readTag();\n          } else if (ch=='?') {\n            ret = readProcessingInstruction();\n          }\n\n          // matched something to be discarded, so break\n          // from this case and continue in the loop\n          if (ret==MATCH) {\n            //break;//was\n            //return whitespace from\n            numWhitespace = (numRead - lastNumRead) - 1;//tack on the -1 since we are returning a space right now\n            return ' ';\n          }\n\n          // didn't match any HTML constructs, so roll back\n          // the stream state and just return '<'\n          restoreState();\n          return '<';\n\n        default: return ch;\n      }\n\n    }\n\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2fc9f4a33c8fefeb1260aea04273a36b0d32378e","date":1421852764,"type":4,"author":"Alan Woodward","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/analysis/LegacyHTMLStripCharFilter#read().mjava","sourceNew":null,"sourceOld":"  @Override\n  public int read() throws IOException {\n    // TODO: Do we ever want to preserve CDATA sections?\n    // where do we have to worry about them?\n    // <![ CDATA [ unescaped markup ]]>\n    if (numWhitespace > 0){\n      numEaten += numWhitespace;\n      addOffCorrectMap(numReturned, numEaten);\n      numWhitespace = 0;\n    }\n    numReturned++;\n    //do not limit this one by the READAHEAD\n    while(true) {\n      int lastNumRead = numRead;\n      int ch = next();\n\n      switch (ch) {\n        case '&':\n          saveState();\n          ch = readEntity();\n          if (ch>=0) return ch;\n          if (ch==MISMATCH) {\n            restoreState();\n\n            return '&';\n          }\n          break;\n\n        case '<':\n          saveState();\n          ch = next();\n          int ret = MISMATCH;\n          if (ch=='!') {\n            ret = readBang(false);\n          } else if (ch=='/') {\n            ret = readName(true);\n            if (ret==MATCH) {\n              ch=nextSkipWS();\n              ret= ch=='>' ? MATCH : MISMATCH;\n            }\n          } else if (isAlpha(ch)) {\n            push(ch);\n            ret = readTag();\n          } else if (ch=='?') {\n            ret = readProcessingInstruction();\n          }\n\n          // matched something to be discarded, so break\n          // from this case and continue in the loop\n          if (ret==MATCH) {\n            //break;//was\n            //return whitespace from\n            numWhitespace = (numRead - lastNumRead) - 1;//tack on the -1 since we are returning a space right now\n            return ' ';\n          }\n\n          // didn't match any HTML constructs, so roll back\n          // the stream state and just return '<'\n          restoreState();\n          return '<';\n\n        default: return ch;\n      }\n\n    }\n\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"2fc9f4a33c8fefeb1260aea04273a36b0d32378e":["e3a908bacd530957eaa6d2dfebdd534afd9ac60e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","e3a908bacd530957eaa6d2dfebdd534afd9ac60e"],"e3a908bacd530957eaa6d2dfebdd534afd9ac60e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"579dc30b5d3235c34cda518b2b6018d71a61879c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","e3a908bacd530957eaa6d2dfebdd534afd9ac60e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2fc9f4a33c8fefeb1260aea04273a36b0d32378e"]},"commit2Childs":{"2fc9f4a33c8fefeb1260aea04273a36b0d32378e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","e3a908bacd530957eaa6d2dfebdd534afd9ac60e","579dc30b5d3235c34cda518b2b6018d71a61879c"],"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d":[],"e3a908bacd530957eaa6d2dfebdd534afd9ac60e":["2fc9f4a33c8fefeb1260aea04273a36b0d32378e","a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","579dc30b5d3235c34cda518b2b6018d71a61879c"],"579dc30b5d3235c34cda518b2b6018d71a61879c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","579dc30b5d3235c34cda518b2b6018d71a61879c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}