{"path":"solr/core/src/test/org/apache/solr/schema/ChangedSchemaMergeTest#testOptimizeDiffSchemas().mjava","commits":[{"id":"13c0d2271b68b77948ffb1638422f718c79778c0","date":1383607272,"type":0,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/schema/ChangedSchemaMergeTest#testOptimizeDiffSchemas().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testOptimizeDiffSchemas() throws Exception {\n    // load up a core (why not put it on disk?)\n    CoreContainer cc = init();\n    SolrCore changed = cc.getCore(\"changed\");\n    try {\n\n      // add some documents\n      addDoc(changed, \"id\", \"1\", \"which\", \"15\", \"text\", \"some stuff with which\");\n      addDoc(changed, \"id\", \"2\", \"which\", \"15\", \"text\", \"some stuff with which\");\n      addDoc(changed, \"id\", \"3\", \"which\", \"15\", \"text\", \"some stuff with which\");\n      addDoc(changed, \"id\", \"4\", \"which\", \"15\", \"text\", \"some stuff with which\");\n      SolrQueryRequest req = new LocalSolrQueryRequest(changed, new NamedList<Object>());\n      changed.getUpdateHandler().commit(new CommitUpdateCommand(req, false));\n\n      // write the new schema out and make it current\n      FileUtils.writeStringToFile(schemaFile, withoutWhich, Charsets.UTF_8.toString());\n\n      IndexSchema iSchema = IndexSchemaFactory.buildIndexSchema(\"schema.xml\", changed.getSolrConfig());\n      changed.setLatestSchema(iSchema);\n\n      addDoc(changed, \"id\", \"1\", \"text\", \"some stuff without which\");\n      addDoc(changed, \"id\", \"5\", \"text\", \"some stuff without which\");\n\n      changed.getUpdateHandler().commit(new CommitUpdateCommand(req, false));\n      changed.getUpdateHandler().commit(new CommitUpdateCommand(req, true));\n    } finally {\n      if (changed != null) changed.close();\n      if (cc != null) cc.shutdown();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/schema/ChangedSchemaMergeTest#testOptimizeDiffSchemas().mjava","pathOld":"solr/core/src/test/org/apache/solr/schema/ChangedSchemaMergeTest#testOptimizeDiffSchemas().mjava","sourceNew":"  @Test\n  public void testOptimizeDiffSchemas() throws Exception {\n    // load up a core (why not put it on disk?)\n    CoreContainer cc = init();\n    SolrCore changed = cc.getCore(\"changed\");\n    try {\n\n      // add some documents\n      addDoc(changed, \"id\", \"1\", \"which\", \"15\", \"text\", \"some stuff with which\");\n      addDoc(changed, \"id\", \"2\", \"which\", \"15\", \"text\", \"some stuff with which\");\n      addDoc(changed, \"id\", \"3\", \"which\", \"15\", \"text\", \"some stuff with which\");\n      addDoc(changed, \"id\", \"4\", \"which\", \"15\", \"text\", \"some stuff with which\");\n      SolrQueryRequest req = new LocalSolrQueryRequest(changed, new NamedList<>());\n      changed.getUpdateHandler().commit(new CommitUpdateCommand(req, false));\n\n      // write the new schema out and make it current\n      FileUtils.writeStringToFile(schemaFile, withoutWhich, Charsets.UTF_8.toString());\n\n      IndexSchema iSchema = IndexSchemaFactory.buildIndexSchema(\"schema.xml\", changed.getSolrConfig());\n      changed.setLatestSchema(iSchema);\n\n      addDoc(changed, \"id\", \"1\", \"text\", \"some stuff without which\");\n      addDoc(changed, \"id\", \"5\", \"text\", \"some stuff without which\");\n\n      changed.getUpdateHandler().commit(new CommitUpdateCommand(req, false));\n      changed.getUpdateHandler().commit(new CommitUpdateCommand(req, true));\n    } finally {\n      if (changed != null) changed.close();\n      if (cc != null) cc.shutdown();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testOptimizeDiffSchemas() throws Exception {\n    // load up a core (why not put it on disk?)\n    CoreContainer cc = init();\n    SolrCore changed = cc.getCore(\"changed\");\n    try {\n\n      // add some documents\n      addDoc(changed, \"id\", \"1\", \"which\", \"15\", \"text\", \"some stuff with which\");\n      addDoc(changed, \"id\", \"2\", \"which\", \"15\", \"text\", \"some stuff with which\");\n      addDoc(changed, \"id\", \"3\", \"which\", \"15\", \"text\", \"some stuff with which\");\n      addDoc(changed, \"id\", \"4\", \"which\", \"15\", \"text\", \"some stuff with which\");\n      SolrQueryRequest req = new LocalSolrQueryRequest(changed, new NamedList<Object>());\n      changed.getUpdateHandler().commit(new CommitUpdateCommand(req, false));\n\n      // write the new schema out and make it current\n      FileUtils.writeStringToFile(schemaFile, withoutWhich, Charsets.UTF_8.toString());\n\n      IndexSchema iSchema = IndexSchemaFactory.buildIndexSchema(\"schema.xml\", changed.getSolrConfig());\n      changed.setLatestSchema(iSchema);\n\n      addDoc(changed, \"id\", \"1\", \"text\", \"some stuff without which\");\n      addDoc(changed, \"id\", \"5\", \"text\", \"some stuff without which\");\n\n      changed.getUpdateHandler().commit(new CommitUpdateCommand(req, false));\n      changed.getUpdateHandler().commit(new CommitUpdateCommand(req, true));\n    } finally {\n      if (changed != null) changed.close();\n      if (cc != null) cc.shutdown();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e332392bbbdd01cb69ad6a89051f483cda38e15e","date":1395758779,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/schema/ChangedSchemaMergeTest#testOptimizeDiffSchemas().mjava","pathOld":"solr/core/src/test/org/apache/solr/schema/ChangedSchemaMergeTest#testOptimizeDiffSchemas().mjava","sourceNew":"  @Test\n  public void testOptimizeDiffSchemas() throws Exception {\n    // load up a core (why not put it on disk?)\n    CoreContainer cc = init();\n    try (SolrCore changed = cc.getCore(\"changed\")) {\n\n      // add some documents\n      addDoc(changed, \"id\", \"1\", \"which\", \"15\", \"text\", \"some stuff with which\");\n      addDoc(changed, \"id\", \"2\", \"which\", \"15\", \"text\", \"some stuff with which\");\n      addDoc(changed, \"id\", \"3\", \"which\", \"15\", \"text\", \"some stuff with which\");\n      addDoc(changed, \"id\", \"4\", \"which\", \"15\", \"text\", \"some stuff with which\");\n      SolrQueryRequest req = new LocalSolrQueryRequest(changed, new NamedList<>());\n      changed.getUpdateHandler().commit(new CommitUpdateCommand(req, false));\n\n      // write the new schema out and make it current\n      FileUtils.writeStringToFile(schemaFile, withoutWhich, Charsets.UTF_8.toString());\n\n      IndexSchema iSchema = IndexSchemaFactory.buildIndexSchema(\"schema.xml\", changed.getSolrConfig());\n      changed.setLatestSchema(iSchema);\n\n      addDoc(changed, \"id\", \"1\", \"text\", \"some stuff without which\");\n      addDoc(changed, \"id\", \"5\", \"text\", \"some stuff without which\");\n\n      changed.getUpdateHandler().commit(new CommitUpdateCommand(req, false));\n      changed.getUpdateHandler().commit(new CommitUpdateCommand(req, true));\n    } finally {\n      if (cc != null) cc.shutdown();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testOptimizeDiffSchemas() throws Exception {\n    // load up a core (why not put it on disk?)\n    CoreContainer cc = init();\n    SolrCore changed = cc.getCore(\"changed\");\n    try {\n\n      // add some documents\n      addDoc(changed, \"id\", \"1\", \"which\", \"15\", \"text\", \"some stuff with which\");\n      addDoc(changed, \"id\", \"2\", \"which\", \"15\", \"text\", \"some stuff with which\");\n      addDoc(changed, \"id\", \"3\", \"which\", \"15\", \"text\", \"some stuff with which\");\n      addDoc(changed, \"id\", \"4\", \"which\", \"15\", \"text\", \"some stuff with which\");\n      SolrQueryRequest req = new LocalSolrQueryRequest(changed, new NamedList<>());\n      changed.getUpdateHandler().commit(new CommitUpdateCommand(req, false));\n\n      // write the new schema out and make it current\n      FileUtils.writeStringToFile(schemaFile, withoutWhich, Charsets.UTF_8.toString());\n\n      IndexSchema iSchema = IndexSchemaFactory.buildIndexSchema(\"schema.xml\", changed.getSolrConfig());\n      changed.setLatestSchema(iSchema);\n\n      addDoc(changed, \"id\", \"1\", \"text\", \"some stuff without which\");\n      addDoc(changed, \"id\", \"5\", \"text\", \"some stuff without which\");\n\n      changed.getUpdateHandler().commit(new CommitUpdateCommand(req, false));\n      changed.getUpdateHandler().commit(new CommitUpdateCommand(req, true));\n    } finally {\n      if (changed != null) changed.close();\n      if (cc != null) cc.shutdown();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"49dd2950028d6b59839f54d3801d77f769fa22ef","date":1447264120,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/schema/ChangedSchemaMergeTest#testOptimizeDiffSchemas().mjava","pathOld":"solr/core/src/test/org/apache/solr/schema/ChangedSchemaMergeTest#testOptimizeDiffSchemas().mjava","sourceNew":"  @Test\n  public void testOptimizeDiffSchemas() throws Exception {\n    // load up a core (why not put it on disk?)\n    CoreContainer cc = init();\n    try (SolrCore changed = cc.getCore(\"changed\")) {\n\n      // add some documents\n      addDoc(changed, \"id\", \"1\", \"which\", \"15\", \"text\", \"some stuff with which\");\n      addDoc(changed, \"id\", \"2\", \"which\", \"15\", \"text\", \"some stuff with which\");\n      addDoc(changed, \"id\", \"3\", \"which\", \"15\", \"text\", \"some stuff with which\");\n      addDoc(changed, \"id\", \"4\", \"which\", \"15\", \"text\", \"some stuff with which\");\n      SolrQueryRequest req = new LocalSolrQueryRequest(changed, new NamedList<>());\n      changed.getUpdateHandler().commit(new CommitUpdateCommand(req, false));\n\n      // write the new schema out and make it current\n      FileUtils.writeStringToFile(schemaFile, withoutWhich, Charsets.UTF_8.toString());\n\n      IndexSchema iSchema = IndexSchemaFactory.buildIndexSchema(\"schema.xml\", changed.getSolrConfig());\n      changed.setLatestSchema(iSchema);\n\n      addDoc(changed, \"id\", \"1\", \"text\", \"some stuff without which\");\n      addDoc(changed, \"id\", \"5\", \"text\", \"some stuff without which\");\n\n      changed.getUpdateHandler().commit(new CommitUpdateCommand(req, false));\n      changed.getUpdateHandler().commit(new CommitUpdateCommand(req, true));\n    } catch (Throwable e) {\n      SolrCore.log.error(\"Test exception, logging so not swallowed if there is a (finally) shutdown exception: \" + e.getMessage(), e);\n      throw e;\n    } finally {\n      if (cc != null) cc.shutdown();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testOptimizeDiffSchemas() throws Exception {\n    // load up a core (why not put it on disk?)\n    CoreContainer cc = init();\n    try (SolrCore changed = cc.getCore(\"changed\")) {\n\n      // add some documents\n      addDoc(changed, \"id\", \"1\", \"which\", \"15\", \"text\", \"some stuff with which\");\n      addDoc(changed, \"id\", \"2\", \"which\", \"15\", \"text\", \"some stuff with which\");\n      addDoc(changed, \"id\", \"3\", \"which\", \"15\", \"text\", \"some stuff with which\");\n      addDoc(changed, \"id\", \"4\", \"which\", \"15\", \"text\", \"some stuff with which\");\n      SolrQueryRequest req = new LocalSolrQueryRequest(changed, new NamedList<>());\n      changed.getUpdateHandler().commit(new CommitUpdateCommand(req, false));\n\n      // write the new schema out and make it current\n      FileUtils.writeStringToFile(schemaFile, withoutWhich, Charsets.UTF_8.toString());\n\n      IndexSchema iSchema = IndexSchemaFactory.buildIndexSchema(\"schema.xml\", changed.getSolrConfig());\n      changed.setLatestSchema(iSchema);\n\n      addDoc(changed, \"id\", \"1\", \"text\", \"some stuff without which\");\n      addDoc(changed, \"id\", \"5\", \"text\", \"some stuff without which\");\n\n      changed.getUpdateHandler().commit(new CommitUpdateCommand(req, false));\n      changed.getUpdateHandler().commit(new CommitUpdateCommand(req, true));\n    } finally {\n      if (cc != null) cc.shutdown();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"20eb14adcb76cac6b8ae297eb37caec72e3a2140","date":1447952616,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/schema/ChangedSchemaMergeTest#testOptimizeDiffSchemas().mjava","pathOld":"solr/core/src/test/org/apache/solr/schema/ChangedSchemaMergeTest#testOptimizeDiffSchemas().mjava","sourceNew":"  @Test\n  public void testOptimizeDiffSchemas() throws Exception {\n    // load up a core (why not put it on disk?)\n    CoreContainer cc = init();\n    try (SolrCore changed = cc.getCore(\"changed\")) {\n\n      assertSimilarity(changed, simfac1);\n                       \n      // add some documents\n      addDoc(changed, \"id\", \"1\", \"which\", \"15\", \"text\", \"some stuff with which\");\n      addDoc(changed, \"id\", \"2\", \"which\", \"15\", \"text\", \"some stuff with which\");\n      addDoc(changed, \"id\", \"3\", \"which\", \"15\", \"text\", \"some stuff with which\");\n      addDoc(changed, \"id\", \"4\", \"which\", \"15\", \"text\", \"some stuff with which\");\n      SolrQueryRequest req = new LocalSolrQueryRequest(changed, new NamedList<>());\n      changed.getUpdateHandler().commit(new CommitUpdateCommand(req, false));\n\n      // write the new schema out and make it current\n      FileUtils.writeStringToFile(schemaFile, withoutWhich, Charsets.UTF_8.toString());\n\n      IndexSchema iSchema = IndexSchemaFactory.buildIndexSchema(\"schema.xml\", changed.getSolrConfig());\n      changed.setLatestSchema(iSchema);\n      \n      assertSimilarity(changed, simfac2);\n      // sanity check our sanity check\n      assertFalse(\"test is broken: both simfacs are the same\", simfac1.equals(simfac2)); \n\n      addDoc(changed, \"id\", \"1\", \"text\", \"some stuff without which\");\n      addDoc(changed, \"id\", \"5\", \"text\", \"some stuff without which\");\n\n      changed.getUpdateHandler().commit(new CommitUpdateCommand(req, false));\n      changed.getUpdateHandler().commit(new CommitUpdateCommand(req, true));\n    } catch (Throwable e) {\n      SolrCore.log.error(\"Test exception, logging so not swallowed if there is a (finally) shutdown exception: \" + e.getMessage(), e);\n      throw e;\n    } finally {\n      if (cc != null) cc.shutdown();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testOptimizeDiffSchemas() throws Exception {\n    // load up a core (why not put it on disk?)\n    CoreContainer cc = init();\n    try (SolrCore changed = cc.getCore(\"changed\")) {\n\n      // add some documents\n      addDoc(changed, \"id\", \"1\", \"which\", \"15\", \"text\", \"some stuff with which\");\n      addDoc(changed, \"id\", \"2\", \"which\", \"15\", \"text\", \"some stuff with which\");\n      addDoc(changed, \"id\", \"3\", \"which\", \"15\", \"text\", \"some stuff with which\");\n      addDoc(changed, \"id\", \"4\", \"which\", \"15\", \"text\", \"some stuff with which\");\n      SolrQueryRequest req = new LocalSolrQueryRequest(changed, new NamedList<>());\n      changed.getUpdateHandler().commit(new CommitUpdateCommand(req, false));\n\n      // write the new schema out and make it current\n      FileUtils.writeStringToFile(schemaFile, withoutWhich, Charsets.UTF_8.toString());\n\n      IndexSchema iSchema = IndexSchemaFactory.buildIndexSchema(\"schema.xml\", changed.getSolrConfig());\n      changed.setLatestSchema(iSchema);\n\n      addDoc(changed, \"id\", \"1\", \"text\", \"some stuff without which\");\n      addDoc(changed, \"id\", \"5\", \"text\", \"some stuff without which\");\n\n      changed.getUpdateHandler().commit(new CommitUpdateCommand(req, false));\n      changed.getUpdateHandler().commit(new CommitUpdateCommand(req, true));\n    } catch (Throwable e) {\n      SolrCore.log.error(\"Test exception, logging so not swallowed if there is a (finally) shutdown exception: \" + e.getMessage(), e);\n      throw e;\n    } finally {\n      if (cc != null) cc.shutdown();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9367dbf5b00d7764583d991c1888f4acc9c9991a","date":1449048142,"type":3,"author":"Anshum Gupta","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/schema/ChangedSchemaMergeTest#testOptimizeDiffSchemas().mjava","pathOld":"solr/core/src/test/org/apache/solr/schema/ChangedSchemaMergeTest#testOptimizeDiffSchemas().mjava","sourceNew":"  @Test\n  public void testOptimizeDiffSchemas() throws Exception {\n    // load up a core (why not put it on disk?)\n    CoreContainer cc = init();\n    try (SolrCore changed = cc.getCore(\"changed\")) {\n\n      assertSimilarity(changed, simfac1);\n                       \n      // add some documents\n      addDoc(changed, \"id\", \"1\", \"which\", \"15\", \"text\", \"some stuff with which\");\n      addDoc(changed, \"id\", \"2\", \"which\", \"15\", \"text\", \"some stuff with which\");\n      addDoc(changed, \"id\", \"3\", \"which\", \"15\", \"text\", \"some stuff with which\");\n      addDoc(changed, \"id\", \"4\", \"which\", \"15\", \"text\", \"some stuff with which\");\n      SolrQueryRequest req = new LocalSolrQueryRequest(changed, new NamedList<>());\n      changed.getUpdateHandler().commit(new CommitUpdateCommand(req, false));\n\n      // write the new schema out and make it current\n      FileUtils.writeStringToFile(schemaFile, withoutWhich, Charsets.UTF_8.toString());\n\n      IndexSchema iSchema = IndexSchemaFactory.buildIndexSchema(\"schema.xml\", changed.getSolrConfig());\n      changed.setLatestSchema(iSchema);\n      \n      assertSimilarity(changed, simfac2);\n      // sanity check our sanity check\n      assertFalse(\"test is broken: both simfacs are the same\", simfac1.equals(simfac2)); \n\n      addDoc(changed, \"id\", \"1\", \"text\", \"some stuff without which\");\n      addDoc(changed, \"id\", \"5\", \"text\", \"some stuff without which\");\n\n      changed.getUpdateHandler().commit(new CommitUpdateCommand(req, false));\n      changed.getUpdateHandler().commit(new CommitUpdateCommand(req, true));\n    } catch (Throwable e) {\n      log.error(\"Test exception, logging so not swallowed if there is a (finally) shutdown exception: \" + e.getMessage(), e);\n      throw e;\n    } finally {\n      if (cc != null) cc.shutdown();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testOptimizeDiffSchemas() throws Exception {\n    // load up a core (why not put it on disk?)\n    CoreContainer cc = init();\n    try (SolrCore changed = cc.getCore(\"changed\")) {\n\n      assertSimilarity(changed, simfac1);\n                       \n      // add some documents\n      addDoc(changed, \"id\", \"1\", \"which\", \"15\", \"text\", \"some stuff with which\");\n      addDoc(changed, \"id\", \"2\", \"which\", \"15\", \"text\", \"some stuff with which\");\n      addDoc(changed, \"id\", \"3\", \"which\", \"15\", \"text\", \"some stuff with which\");\n      addDoc(changed, \"id\", \"4\", \"which\", \"15\", \"text\", \"some stuff with which\");\n      SolrQueryRequest req = new LocalSolrQueryRequest(changed, new NamedList<>());\n      changed.getUpdateHandler().commit(new CommitUpdateCommand(req, false));\n\n      // write the new schema out and make it current\n      FileUtils.writeStringToFile(schemaFile, withoutWhich, Charsets.UTF_8.toString());\n\n      IndexSchema iSchema = IndexSchemaFactory.buildIndexSchema(\"schema.xml\", changed.getSolrConfig());\n      changed.setLatestSchema(iSchema);\n      \n      assertSimilarity(changed, simfac2);\n      // sanity check our sanity check\n      assertFalse(\"test is broken: both simfacs are the same\", simfac1.equals(simfac2)); \n\n      addDoc(changed, \"id\", \"1\", \"text\", \"some stuff without which\");\n      addDoc(changed, \"id\", \"5\", \"text\", \"some stuff without which\");\n\n      changed.getUpdateHandler().commit(new CommitUpdateCommand(req, false));\n      changed.getUpdateHandler().commit(new CommitUpdateCommand(req, true));\n    } catch (Throwable e) {\n      SolrCore.log.error(\"Test exception, logging so not swallowed if there is a (finally) shutdown exception: \" + e.getMessage(), e);\n      throw e;\n    } finally {\n      if (cc != null) cc.shutdown();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c609c76a49c17e5c1c8a5d5cd2d685be9f306a47","date":1477689538,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/schema/ChangedSchemaMergeTest#testOptimizeDiffSchemas().mjava","pathOld":"solr/core/src/test/org/apache/solr/schema/ChangedSchemaMergeTest#testOptimizeDiffSchemas().mjava","sourceNew":"  @Test\n  public void testOptimizeDiffSchemas() throws Exception {\n    // load up a core (why not put it on disk?)\n    CoreContainer cc = init();\n    try (SolrCore changed = cc.getCore(\"changed\")) {\n\n      assertSimilarity(changed, simfac1);\n                       \n      // add some documents\n      addDoc(changed, \"id\", \"1\", \"which\", \"15\", \"text\", \"some stuff with which\");\n      addDoc(changed, \"id\", \"2\", \"which\", \"15\", \"text\", \"some stuff with which\");\n      addDoc(changed, \"id\", \"3\", \"which\", \"15\", \"text\", \"some stuff with which\");\n      addDoc(changed, \"id\", \"4\", \"which\", \"15\", \"text\", \"some stuff with which\");\n      SolrQueryRequest req = new LocalSolrQueryRequest(changed, new NamedList<>());\n      changed.getUpdateHandler().commit(new CommitUpdateCommand(req, false));\n\n      // write the new schema out and make it current\n      FileUtils.writeStringToFile(schemaFile, withoutWhich, StandardCharsets.UTF_8);\n\n      IndexSchema iSchema = IndexSchemaFactory.buildIndexSchema(\"schema.xml\", changed.getSolrConfig());\n      changed.setLatestSchema(iSchema);\n      \n      assertSimilarity(changed, simfac2);\n      // sanity check our sanity check\n      assertFalse(\"test is broken: both simfacs are the same\", simfac1.equals(simfac2)); \n\n      addDoc(changed, \"id\", \"1\", \"text\", \"some stuff without which\");\n      addDoc(changed, \"id\", \"5\", \"text\", \"some stuff without which\");\n\n      changed.getUpdateHandler().commit(new CommitUpdateCommand(req, false));\n      changed.getUpdateHandler().commit(new CommitUpdateCommand(req, true));\n    } catch (Throwable e) {\n      log.error(\"Test exception, logging so not swallowed if there is a (finally) shutdown exception: \" + e.getMessage(), e);\n      throw e;\n    } finally {\n      if (cc != null) cc.shutdown();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testOptimizeDiffSchemas() throws Exception {\n    // load up a core (why not put it on disk?)\n    CoreContainer cc = init();\n    try (SolrCore changed = cc.getCore(\"changed\")) {\n\n      assertSimilarity(changed, simfac1);\n                       \n      // add some documents\n      addDoc(changed, \"id\", \"1\", \"which\", \"15\", \"text\", \"some stuff with which\");\n      addDoc(changed, \"id\", \"2\", \"which\", \"15\", \"text\", \"some stuff with which\");\n      addDoc(changed, \"id\", \"3\", \"which\", \"15\", \"text\", \"some stuff with which\");\n      addDoc(changed, \"id\", \"4\", \"which\", \"15\", \"text\", \"some stuff with which\");\n      SolrQueryRequest req = new LocalSolrQueryRequest(changed, new NamedList<>());\n      changed.getUpdateHandler().commit(new CommitUpdateCommand(req, false));\n\n      // write the new schema out and make it current\n      FileUtils.writeStringToFile(schemaFile, withoutWhich, Charsets.UTF_8.toString());\n\n      IndexSchema iSchema = IndexSchemaFactory.buildIndexSchema(\"schema.xml\", changed.getSolrConfig());\n      changed.setLatestSchema(iSchema);\n      \n      assertSimilarity(changed, simfac2);\n      // sanity check our sanity check\n      assertFalse(\"test is broken: both simfacs are the same\", simfac1.equals(simfac2)); \n\n      addDoc(changed, \"id\", \"1\", \"text\", \"some stuff without which\");\n      addDoc(changed, \"id\", \"5\", \"text\", \"some stuff without which\");\n\n      changed.getUpdateHandler().commit(new CommitUpdateCommand(req, false));\n      changed.getUpdateHandler().commit(new CommitUpdateCommand(req, true));\n    } catch (Throwable e) {\n      log.error(\"Test exception, logging so not swallowed if there is a (finally) shutdown exception: \" + e.getMessage(), e);\n      throw e;\n    } finally {\n      if (cc != null) cc.shutdown();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"320888923ec13b91f53082558f01f4c9960dd226","date":1477926871,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/schema/ChangedSchemaMergeTest#testOptimizeDiffSchemas().mjava","pathOld":"solr/core/src/test/org/apache/solr/schema/ChangedSchemaMergeTest#testOptimizeDiffSchemas().mjava","sourceNew":"  @Test\n  public void testOptimizeDiffSchemas() throws Exception {\n    // load up a core (why not put it on disk?)\n    CoreContainer cc = init();\n    try (SolrCore changed = cc.getCore(\"changed\")) {\n\n      assertSimilarity(changed, simfac1);\n                       \n      // add some documents\n      addDoc(changed, \"id\", \"1\", \"which\", \"15\", \"text\", \"some stuff with which\");\n      addDoc(changed, \"id\", \"2\", \"which\", \"15\", \"text\", \"some stuff with which\");\n      addDoc(changed, \"id\", \"3\", \"which\", \"15\", \"text\", \"some stuff with which\");\n      addDoc(changed, \"id\", \"4\", \"which\", \"15\", \"text\", \"some stuff with which\");\n      SolrQueryRequest req = new LocalSolrQueryRequest(changed, new NamedList<>());\n      changed.getUpdateHandler().commit(new CommitUpdateCommand(req, false));\n\n      // write the new schema out and make it current\n      FileUtils.writeStringToFile(schemaFile, withoutWhich, StandardCharsets.UTF_8);\n\n      IndexSchema iSchema = IndexSchemaFactory.buildIndexSchema(\"schema.xml\", changed.getSolrConfig());\n      changed.setLatestSchema(iSchema);\n      \n      assertSimilarity(changed, simfac2);\n      // sanity check our sanity check\n      assertFalse(\"test is broken: both simfacs are the same\", simfac1.equals(simfac2)); \n\n      addDoc(changed, \"id\", \"1\", \"text\", \"some stuff without which\");\n      addDoc(changed, \"id\", \"5\", \"text\", \"some stuff without which\");\n\n      changed.getUpdateHandler().commit(new CommitUpdateCommand(req, false));\n      changed.getUpdateHandler().commit(new CommitUpdateCommand(req, true));\n    } catch (Throwable e) {\n      log.error(\"Test exception, logging so not swallowed if there is a (finally) shutdown exception: \" + e.getMessage(), e);\n      throw e;\n    } finally {\n      if (cc != null) cc.shutdown();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testOptimizeDiffSchemas() throws Exception {\n    // load up a core (why not put it on disk?)\n    CoreContainer cc = init();\n    try (SolrCore changed = cc.getCore(\"changed\")) {\n\n      assertSimilarity(changed, simfac1);\n                       \n      // add some documents\n      addDoc(changed, \"id\", \"1\", \"which\", \"15\", \"text\", \"some stuff with which\");\n      addDoc(changed, \"id\", \"2\", \"which\", \"15\", \"text\", \"some stuff with which\");\n      addDoc(changed, \"id\", \"3\", \"which\", \"15\", \"text\", \"some stuff with which\");\n      addDoc(changed, \"id\", \"4\", \"which\", \"15\", \"text\", \"some stuff with which\");\n      SolrQueryRequest req = new LocalSolrQueryRequest(changed, new NamedList<>());\n      changed.getUpdateHandler().commit(new CommitUpdateCommand(req, false));\n\n      // write the new schema out and make it current\n      FileUtils.writeStringToFile(schemaFile, withoutWhich, Charsets.UTF_8.toString());\n\n      IndexSchema iSchema = IndexSchemaFactory.buildIndexSchema(\"schema.xml\", changed.getSolrConfig());\n      changed.setLatestSchema(iSchema);\n      \n      assertSimilarity(changed, simfac2);\n      // sanity check our sanity check\n      assertFalse(\"test is broken: both simfacs are the same\", simfac1.equals(simfac2)); \n\n      addDoc(changed, \"id\", \"1\", \"text\", \"some stuff without which\");\n      addDoc(changed, \"id\", \"5\", \"text\", \"some stuff without which\");\n\n      changed.getUpdateHandler().commit(new CommitUpdateCommand(req, false));\n      changed.getUpdateHandler().commit(new CommitUpdateCommand(req, true));\n    } catch (Throwable e) {\n      log.error(\"Test exception, logging so not swallowed if there is a (finally) shutdown exception: \" + e.getMessage(), e);\n      throw e;\n    } finally {\n      if (cc != null) cc.shutdown();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a966532d92cf9ba2856f15a8140151bb6b518e4b","date":1588290631,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/schema/ChangedSchemaMergeTest#testOptimizeDiffSchemas().mjava","pathOld":"solr/core/src/test/org/apache/solr/schema/ChangedSchemaMergeTest#testOptimizeDiffSchemas().mjava","sourceNew":"  @Test\n  public void testOptimizeDiffSchemas() throws Exception {\n    // load up a core (why not put it on disk?)\n    CoreContainer cc = init();\n    try (SolrCore changed = cc.getCore(\"changed\")) {\n\n      assertSimilarity(changed, simfac1);\n                       \n      // add some documents\n      addDoc(changed, \"id\", \"1\", \"which\", \"15\", \"text\", \"some stuff with which\");\n      addDoc(changed, \"id\", \"2\", \"which\", \"15\", \"text\", \"some stuff with which\");\n      addDoc(changed, \"id\", \"3\", \"which\", \"15\", \"text\", \"some stuff with which\");\n      addDoc(changed, \"id\", \"4\", \"which\", \"15\", \"text\", \"some stuff with which\");\n      SolrQueryRequest req = new LocalSolrQueryRequest(changed, new NamedList<>());\n      changed.getUpdateHandler().commit(new CommitUpdateCommand(req, false));\n\n      // write the new schema out and make it current\n      FileUtils.writeStringToFile(schemaFile, withoutWhich, StandardCharsets.UTF_8);\n\n      IndexSchema iSchema = IndexSchemaFactory.buildIndexSchema(\"schema.xml\", changed.getSolrConfig());\n      changed.setLatestSchema(iSchema);\n      \n      assertSimilarity(changed, simfac2);\n      // sanity check our sanity check\n      assertFalse(\"test is broken: both simfacs are the same\", simfac1.equals(simfac2)); \n\n      addDoc(changed, \"id\", \"1\", \"text\", \"some stuff without which\");\n      addDoc(changed, \"id\", \"5\", \"text\", \"some stuff without which\");\n\n      changed.getUpdateHandler().commit(new CommitUpdateCommand(req, false));\n      changed.getUpdateHandler().commit(new CommitUpdateCommand(req, true));\n    } catch (Throwable e) {\n      log.error(\"Test exception, logging so not swallowed if there is a (finally) shutdown exception: {}\"\n          , e.getMessage(), e);\n      throw e;\n    } finally {\n      if (cc != null) cc.shutdown();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testOptimizeDiffSchemas() throws Exception {\n    // load up a core (why not put it on disk?)\n    CoreContainer cc = init();\n    try (SolrCore changed = cc.getCore(\"changed\")) {\n\n      assertSimilarity(changed, simfac1);\n                       \n      // add some documents\n      addDoc(changed, \"id\", \"1\", \"which\", \"15\", \"text\", \"some stuff with which\");\n      addDoc(changed, \"id\", \"2\", \"which\", \"15\", \"text\", \"some stuff with which\");\n      addDoc(changed, \"id\", \"3\", \"which\", \"15\", \"text\", \"some stuff with which\");\n      addDoc(changed, \"id\", \"4\", \"which\", \"15\", \"text\", \"some stuff with which\");\n      SolrQueryRequest req = new LocalSolrQueryRequest(changed, new NamedList<>());\n      changed.getUpdateHandler().commit(new CommitUpdateCommand(req, false));\n\n      // write the new schema out and make it current\n      FileUtils.writeStringToFile(schemaFile, withoutWhich, StandardCharsets.UTF_8);\n\n      IndexSchema iSchema = IndexSchemaFactory.buildIndexSchema(\"schema.xml\", changed.getSolrConfig());\n      changed.setLatestSchema(iSchema);\n      \n      assertSimilarity(changed, simfac2);\n      // sanity check our sanity check\n      assertFalse(\"test is broken: both simfacs are the same\", simfac1.equals(simfac2)); \n\n      addDoc(changed, \"id\", \"1\", \"text\", \"some stuff without which\");\n      addDoc(changed, \"id\", \"5\", \"text\", \"some stuff without which\");\n\n      changed.getUpdateHandler().commit(new CommitUpdateCommand(req, false));\n      changed.getUpdateHandler().commit(new CommitUpdateCommand(req, true));\n    } catch (Throwable e) {\n      log.error(\"Test exception, logging so not swallowed if there is a (finally) shutdown exception: \" + e.getMessage(), e);\n      throw e;\n    } finally {\n      if (cc != null) cc.shutdown();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"57c238f5fb83803b49b37b3a1a12224a64d47542","date":1593655679,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/schema/ChangedSchemaMergeTest#testOptimizeDiffSchemas().mjava","pathOld":"solr/core/src/test/org/apache/solr/schema/ChangedSchemaMergeTest#testOptimizeDiffSchemas().mjava","sourceNew":"  @Test\n  public void testOptimizeDiffSchemas() throws Exception {\n    // load up a core (why not put it on disk?)\n    CoreContainer cc = init();\n    try (SolrCore changed = cc.getCore(\"changed\")) {\n\n      assertSimilarity(changed, simfac1);\n                       \n      // add some documents\n      addDoc(changed, \"id\", \"1\", \"which\", \"15\", \"text\", \"some stuff with which\");\n      addDoc(changed, \"id\", \"2\", \"which\", \"15\", \"text\", \"some stuff with which\");\n      addDoc(changed, \"id\", \"3\", \"which\", \"15\", \"text\", \"some stuff with which\");\n      addDoc(changed, \"id\", \"4\", \"which\", \"15\", \"text\", \"some stuff with which\");\n      SolrQueryRequest req = new LocalSolrQueryRequest(changed, new NamedList<>());\n      changed.getUpdateHandler().commit(new CommitUpdateCommand(req, false));\n\n      // write the new schema out and make it current\n      FileUtils.writeStringToFile(schemaFile, withoutWhich, StandardCharsets.UTF_8);\n\n      IndexSchema iSchema = IndexSchemaFactory.buildIndexSchema(\"schema.xml\", changed.getSolrConfig());\n      changed.setLatestSchema(iSchema);\n      \n      assertSimilarity(changed, simfac2);\n      // sanity check our sanity check\n      assertFalse(\"test is broken: both simfacs are the same\", simfac1.equals(simfac2)); \n\n      addDoc(changed, \"id\", \"1\", \"text\", \"some stuff without which\");\n      addDoc(changed, \"id\", \"5\", \"text\", \"some stuff without which\");\n\n      changed.getUpdateHandler().commit(new CommitUpdateCommand(req, false));\n      changed.getUpdateHandler().commit(new CommitUpdateCommand(req, true));\n    } catch (Throwable e) {\n      log.error(\"Test exception, logging so not swallowed if there is a (finally) shutdown exception: \"\n          , e);\n      throw e;\n    } finally {\n      if (cc != null) cc.shutdown();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testOptimizeDiffSchemas() throws Exception {\n    // load up a core (why not put it on disk?)\n    CoreContainer cc = init();\n    try (SolrCore changed = cc.getCore(\"changed\")) {\n\n      assertSimilarity(changed, simfac1);\n                       \n      // add some documents\n      addDoc(changed, \"id\", \"1\", \"which\", \"15\", \"text\", \"some stuff with which\");\n      addDoc(changed, \"id\", \"2\", \"which\", \"15\", \"text\", \"some stuff with which\");\n      addDoc(changed, \"id\", \"3\", \"which\", \"15\", \"text\", \"some stuff with which\");\n      addDoc(changed, \"id\", \"4\", \"which\", \"15\", \"text\", \"some stuff with which\");\n      SolrQueryRequest req = new LocalSolrQueryRequest(changed, new NamedList<>());\n      changed.getUpdateHandler().commit(new CommitUpdateCommand(req, false));\n\n      // write the new schema out and make it current\n      FileUtils.writeStringToFile(schemaFile, withoutWhich, StandardCharsets.UTF_8);\n\n      IndexSchema iSchema = IndexSchemaFactory.buildIndexSchema(\"schema.xml\", changed.getSolrConfig());\n      changed.setLatestSchema(iSchema);\n      \n      assertSimilarity(changed, simfac2);\n      // sanity check our sanity check\n      assertFalse(\"test is broken: both simfacs are the same\", simfac1.equals(simfac2)); \n\n      addDoc(changed, \"id\", \"1\", \"text\", \"some stuff without which\");\n      addDoc(changed, \"id\", \"5\", \"text\", \"some stuff without which\");\n\n      changed.getUpdateHandler().commit(new CommitUpdateCommand(req, false));\n      changed.getUpdateHandler().commit(new CommitUpdateCommand(req, true));\n    } catch (Throwable e) {\n      log.error(\"Test exception, logging so not swallowed if there is a (finally) shutdown exception: {}\"\n          , e.getMessage(), e);\n      throw e;\n    } finally {\n      if (cc != null) cc.shutdown();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["13c0d2271b68b77948ffb1638422f718c79778c0"],"13c0d2271b68b77948ffb1638422f718c79778c0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"49dd2950028d6b59839f54d3801d77f769fa22ef":["e332392bbbdd01cb69ad6a89051f483cda38e15e"],"20eb14adcb76cac6b8ae297eb37caec72e3a2140":["49dd2950028d6b59839f54d3801d77f769fa22ef"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"57c238f5fb83803b49b37b3a1a12224a64d47542":["a966532d92cf9ba2856f15a8140151bb6b518e4b"],"c609c76a49c17e5c1c8a5d5cd2d685be9f306a47":["9367dbf5b00d7764583d991c1888f4acc9c9991a"],"e332392bbbdd01cb69ad6a89051f483cda38e15e":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"9367dbf5b00d7764583d991c1888f4acc9c9991a":["20eb14adcb76cac6b8ae297eb37caec72e3a2140"],"320888923ec13b91f53082558f01f4c9960dd226":["9367dbf5b00d7764583d991c1888f4acc9c9991a","c609c76a49c17e5c1c8a5d5cd2d685be9f306a47"],"a966532d92cf9ba2856f15a8140151bb6b518e4b":["c609c76a49c17e5c1c8a5d5cd2d685be9f306a47"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["57c238f5fb83803b49b37b3a1a12224a64d47542"]},"commit2Childs":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["e332392bbbdd01cb69ad6a89051f483cda38e15e"],"13c0d2271b68b77948ffb1638422f718c79778c0":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"49dd2950028d6b59839f54d3801d77f769fa22ef":["20eb14adcb76cac6b8ae297eb37caec72e3a2140"],"20eb14adcb76cac6b8ae297eb37caec72e3a2140":["9367dbf5b00d7764583d991c1888f4acc9c9991a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["13c0d2271b68b77948ffb1638422f718c79778c0"],"57c238f5fb83803b49b37b3a1a12224a64d47542":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c609c76a49c17e5c1c8a5d5cd2d685be9f306a47":["320888923ec13b91f53082558f01f4c9960dd226","a966532d92cf9ba2856f15a8140151bb6b518e4b"],"e332392bbbdd01cb69ad6a89051f483cda38e15e":["49dd2950028d6b59839f54d3801d77f769fa22ef"],"9367dbf5b00d7764583d991c1888f4acc9c9991a":["c609c76a49c17e5c1c8a5d5cd2d685be9f306a47","320888923ec13b91f53082558f01f4c9960dd226"],"320888923ec13b91f53082558f01f4c9960dd226":[],"a966532d92cf9ba2856f15a8140151bb6b518e4b":["57c238f5fb83803b49b37b3a1a12224a64d47542"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["320888923ec13b91f53082558f01f4c9960dd226","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}