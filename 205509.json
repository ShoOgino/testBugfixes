{"path":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/RecursivePrefixTreeStrategy#toString().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/RecursivePrefixTreeStrategy#toString().mjava","pathOld":"modules/spatial/src/java/org/apache/lucene/spatial/prefix/RecursivePrefixTreeStrategy#toString().mjava","sourceNew":"  @Override\n  public String toString() {\n    return getClass().getSimpleName()+\"(prefixGridScanLevel:\"+prefixGridScanLevel+\",SPG:(\"+ grid +\"))\";\n  }\n\n","sourceOld":"  @Override\n  public String toString() {\n    return getClass().getSimpleName()+\"(prefixGridScanLevel:\"+prefixGridScanLevel+\",SPG:(\"+ grid +\"))\";\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8cbeee6a8b7dcd5efc02f4d24cef933a45e065e6","date":1397789149,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/RecursivePrefixTreeStrategy#toString().mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/RecursivePrefixTreeStrategy#toString().mjava","sourceNew":"  @Override\n  public String toString() {\n    StringBuilder str = new StringBuilder(getClass().getSimpleName()).append('(');\n    str.append(\"SPG:(\").append(grid.toString()).append(')');\n    if (pointsOnly)\n      str.append(\",pointsOnly\");\n    if (pruneLeafyBranches)\n      str.append(\",pruneLeafyBranches\");\n    if (prefixGridScanLevel != grid.getMaxLevels() - 4)\n      str.append(\",prefixGridScanLevel:\").append(\"\"+prefixGridScanLevel);\n    if (!multiOverlappingIndexedShapes)\n      str.append(\",!multiOverlappingIndexedShapes\");\n    return str.append(')').toString();\n  }\n\n","sourceOld":"  @Override\n  public String toString() {\n    return getClass().getSimpleName()+\"(prefixGridScanLevel:\"+prefixGridScanLevel+\",SPG:(\"+ grid +\"))\";\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"112d77ac8d3e10a362516ad834c9a11d35c94234","date":1456784319,"type":5,"author":"nknize","isMerge":false,"pathNew":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/RecursivePrefixTreeStrategy#toString().mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/RecursivePrefixTreeStrategy#toString().mjava","sourceNew":"  @Override\n  public String toString() {\n    StringBuilder str = new StringBuilder(getClass().getSimpleName()).append('(');\n    str.append(\"SPG:(\").append(grid.toString()).append(')');\n    if (pointsOnly)\n      str.append(\",pointsOnly\");\n    if (pruneLeafyBranches)\n      str.append(\",pruneLeafyBranches\");\n    if (prefixGridScanLevel != grid.getMaxLevels() - 4)\n      str.append(\",prefixGridScanLevel:\").append(\"\"+prefixGridScanLevel);\n    if (!multiOverlappingIndexedShapes)\n      str.append(\",!multiOverlappingIndexedShapes\");\n    return str.append(')').toString();\n  }\n\n","sourceOld":"  @Override\n  public String toString() {\n    StringBuilder str = new StringBuilder(getClass().getSimpleName()).append('(');\n    str.append(\"SPG:(\").append(grid.toString()).append(')');\n    if (pointsOnly)\n      str.append(\",pointsOnly\");\n    if (pruneLeafyBranches)\n      str.append(\",pruneLeafyBranches\");\n    if (prefixGridScanLevel != grid.getMaxLevels() - 4)\n      str.append(\",prefixGridScanLevel:\").append(\"\"+prefixGridScanLevel);\n    if (!multiOverlappingIndexedShapes)\n      str.append(\",!multiOverlappingIndexedShapes\");\n    return str.append(')').toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"af2638813028b254a88b418ebeafb541afb49653","date":1456804822,"type":5,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/RecursivePrefixTreeStrategy#toString().mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/RecursivePrefixTreeStrategy#toString().mjava","sourceNew":"  @Override\n  public String toString() {\n    StringBuilder str = new StringBuilder(getClass().getSimpleName()).append('(');\n    str.append(\"SPG:(\").append(grid.toString()).append(')');\n    if (pointsOnly)\n      str.append(\",pointsOnly\");\n    if (pruneLeafyBranches)\n      str.append(\",pruneLeafyBranches\");\n    if (prefixGridScanLevel != grid.getMaxLevels() - 4)\n      str.append(\",prefixGridScanLevel:\").append(\"\"+prefixGridScanLevel);\n    if (!multiOverlappingIndexedShapes)\n      str.append(\",!multiOverlappingIndexedShapes\");\n    return str.append(')').toString();\n  }\n\n","sourceOld":"  @Override\n  public String toString() {\n    StringBuilder str = new StringBuilder(getClass().getSimpleName()).append('(');\n    str.append(\"SPG:(\").append(grid.toString()).append(')');\n    if (pointsOnly)\n      str.append(\",pointsOnly\");\n    if (pruneLeafyBranches)\n      str.append(\",pruneLeafyBranches\");\n    if (prefixGridScanLevel != grid.getMaxLevels() - 4)\n      str.append(\",prefixGridScanLevel:\").append(\"\"+prefixGridScanLevel);\n    if (!multiOverlappingIndexedShapes)\n      str.append(\",!multiOverlappingIndexedShapes\");\n    return str.append(')').toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"af2638813028b254a88b418ebeafb541afb49653":["8cbeee6a8b7dcd5efc02f4d24cef933a45e065e6","112d77ac8d3e10a362516ad834c9a11d35c94234"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"112d77ac8d3e10a362516ad834c9a11d35c94234":["8cbeee6a8b7dcd5efc02f4d24cef933a45e065e6"],"8cbeee6a8b7dcd5efc02f4d24cef933a45e065e6":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["af2638813028b254a88b418ebeafb541afb49653"]},"commit2Childs":{"af2638813028b254a88b418ebeafb541afb49653":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["8cbeee6a8b7dcd5efc02f4d24cef933a45e065e6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"112d77ac8d3e10a362516ad834c9a11d35c94234":["af2638813028b254a88b418ebeafb541afb49653"],"8cbeee6a8b7dcd5efc02f4d24cef933a45e065e6":["af2638813028b254a88b418ebeafb541afb49653","112d77ac8d3e10a362516ad834c9a11d35c94234"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}