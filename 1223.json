{"path":"lucene/core/src/test/org/apache/lucene/search/TestMultiCollector#testCollectionTerminatedExceptionHandling().mjava","commits":[{"id":"2a6737f45b7f17c3b7802101ea3949a4f52a84e7","date":1441368824,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestMultiCollector#testCollectionTerminatedExceptionHandling().mjava","pathOld":"/dev/null","sourceNew":"  public void testCollectionTerminatedExceptionHandling() throws IOException {\n    final int iters = atLeast(3);\n    for (int iter = 0; iter < iters; ++iter) {\n      Directory dir = newDirectory();\n      RandomIndexWriter w = new RandomIndexWriter(random(), dir);\n      final int numDocs = TestUtil.nextInt(random(), 100, 1000);\n      final Document doc = new Document();\n      for (int i = 0; i < numDocs; ++i) {\n        w.addDocument(doc);\n      }\n      final IndexReader reader = w.getReader();\n      w.close();\n      final IndexSearcher searcher = newSearcher(reader);\n      Map<TotalHitCountCollector, Integer> expectedCounts = new HashMap<>();\n      List<Collector> collectors = new ArrayList<>();\n      final int numCollectors = TestUtil.nextInt(random(), 1, 5);\n      for (int i = 0; i < numCollectors; ++i) {\n        final int terminateAfter = random().nextInt(numDocs + 10);\n        final int expectedCount = terminateAfter > numDocs ? numDocs : terminateAfter;\n        TotalHitCountCollector collector = new TotalHitCountCollector();\n        expectedCounts.put(collector, expectedCount);\n        collectors.add(new TerminateAfterCollector(collector, terminateAfter));\n      }\n      searcher.search(new MatchAllDocsQuery(), MultiCollector.wrap(collectors));\n      for (Map.Entry<TotalHitCountCollector, Integer> expectedCount : expectedCounts.entrySet()) {\n        assertEquals(expectedCount.getValue().intValue(), expectedCount.getKey().getTotalHits());\n      }\n      reader.close();\n      dir.close();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2a6737f45b7f17c3b7802101ea3949a4f52a84e7"],"2a6737f45b7f17c3b7802101ea3949a4f52a84e7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["2a6737f45b7f17c3b7802101ea3949a4f52a84e7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"2a6737f45b7f17c3b7802101ea3949a4f52a84e7":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}