{"path":"lucene/join/src/test/org/apache/lucene/search/join/TestBlockJoin#testAdvanceSingleParentNoChild().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/join/src/test/org/apache/lucene/search/join/TestBlockJoin#testAdvanceSingleParentNoChild().mjava","pathOld":"modules/join/src/test/org/apache/lucene/search/join/TestBlockJoin#testAdvanceSingleParentNoChild().mjava","sourceNew":"  public void testAdvanceSingleParentNoChild() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())).setMergePolicy(new LogDocMergePolicy()));\n    Document parentDoc = new Document();\n    parentDoc.add(newField(\"parent\", \"1\", StringField.TYPE_UNSTORED));\n    parentDoc.add(newField(\"isparent\", \"yes\", StringField.TYPE_UNSTORED));\n    w.addDocuments(Arrays.asList(parentDoc));\n\n    // Add another doc so scorer is not null\n    parentDoc = new Document();\n    parentDoc.add(newField(\"parent\", \"2\", StringField.TYPE_UNSTORED));\n    parentDoc.add(newField(\"isparent\", \"yes\", StringField.TYPE_UNSTORED));\n    Document childDoc = new Document();\n    childDoc.add(newField(\"child\", \"2\", StringField.TYPE_UNSTORED));\n    w.addDocuments(Arrays.asList(childDoc, parentDoc));\n\n    // Need single seg:\n    w.forceMerge(1);\n    IndexReader r = w.getReader();\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    Query tq = new TermQuery(new Term(\"child\", \"2\"));\n    Filter parentFilter = new CachingWrapperFilter(\n                            new QueryWrapperFilter(\n                              new TermQuery(new Term(\"isparent\", \"yes\"))));\n\n    ToParentBlockJoinQuery q = new ToParentBlockJoinQuery(tq, parentFilter, ToParentBlockJoinQuery.ScoreMode.Avg);\n    Weight weight = s.createNormalizedWeight(q);\n    DocIdSetIterator disi = weight.scorer(s.getIndexReader().getTopReaderContext().leaves()[0], true, true, null);\n    assertEquals(2, disi.advance(0));\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testAdvanceSingleParentNoChild() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())).setMergePolicy(new LogDocMergePolicy()));\n    Document parentDoc = new Document();\n    parentDoc.add(newField(\"parent\", \"1\", StringField.TYPE_UNSTORED));\n    parentDoc.add(newField(\"isparent\", \"yes\", StringField.TYPE_UNSTORED));\n    w.addDocuments(Arrays.asList(parentDoc));\n\n    // Add another doc so scorer is not null\n    parentDoc = new Document();\n    parentDoc.add(newField(\"parent\", \"2\", StringField.TYPE_UNSTORED));\n    parentDoc.add(newField(\"isparent\", \"yes\", StringField.TYPE_UNSTORED));\n    Document childDoc = new Document();\n    childDoc.add(newField(\"child\", \"2\", StringField.TYPE_UNSTORED));\n    w.addDocuments(Arrays.asList(childDoc, parentDoc));\n\n    // Need single seg:\n    w.forceMerge(1);\n    IndexReader r = w.getReader();\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    Query tq = new TermQuery(new Term(\"child\", \"2\"));\n    Filter parentFilter = new CachingWrapperFilter(\n                            new QueryWrapperFilter(\n                              new TermQuery(new Term(\"isparent\", \"yes\"))));\n\n    ToParentBlockJoinQuery q = new ToParentBlockJoinQuery(tq, parentFilter, ToParentBlockJoinQuery.ScoreMode.Avg);\n    Weight weight = s.createNormalizedWeight(q);\n    DocIdSetIterator disi = weight.scorer(s.getIndexReader().getTopReaderContext().leaves()[0], true, true, null);\n    assertEquals(2, disi.advance(0));\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"77855215e331ce146763531cb9b0c050726f6ae5","date":1338323851,"type":3,"author":"Martijn van Groningen","isMerge":false,"pathNew":"lucene/join/src/test/org/apache/lucene/search/join/TestBlockJoin#testAdvanceSingleParentNoChild().mjava","pathOld":"lucene/join/src/test/org/apache/lucene/search/join/TestBlockJoin#testAdvanceSingleParentNoChild().mjava","sourceNew":"  public void testAdvanceSingleParentNoChild() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())).setMergePolicy(new LogDocMergePolicy()));\n    Document parentDoc = new Document();\n    parentDoc.add(newField(\"parent\", \"1\", StringField.TYPE_UNSTORED));\n    parentDoc.add(newField(\"isparent\", \"yes\", StringField.TYPE_UNSTORED));\n    w.addDocuments(Arrays.asList(parentDoc));\n\n    // Add another doc so scorer is not null\n    parentDoc = new Document();\n    parentDoc.add(newField(\"parent\", \"2\", StringField.TYPE_UNSTORED));\n    parentDoc.add(newField(\"isparent\", \"yes\", StringField.TYPE_UNSTORED));\n    Document childDoc = new Document();\n    childDoc.add(newField(\"child\", \"2\", StringField.TYPE_UNSTORED));\n    w.addDocuments(Arrays.asList(childDoc, parentDoc));\n\n    // Need single seg:\n    w.forceMerge(1);\n    IndexReader r = w.getReader();\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    Query tq = new TermQuery(new Term(\"child\", \"2\"));\n    Filter parentFilter = new CachingWrapperFilter(\n                            new QueryWrapperFilter(\n                              new TermQuery(new Term(\"isparent\", \"yes\"))));\n\n    ToParentBlockJoinQuery q = new ToParentBlockJoinQuery(tq, parentFilter, ScoreMode.Avg);\n    Weight weight = s.createNormalizedWeight(q);\n    DocIdSetIterator disi = weight.scorer(s.getIndexReader().getTopReaderContext().leaves()[0], true, true, null);\n    assertEquals(2, disi.advance(0));\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testAdvanceSingleParentNoChild() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())).setMergePolicy(new LogDocMergePolicy()));\n    Document parentDoc = new Document();\n    parentDoc.add(newField(\"parent\", \"1\", StringField.TYPE_UNSTORED));\n    parentDoc.add(newField(\"isparent\", \"yes\", StringField.TYPE_UNSTORED));\n    w.addDocuments(Arrays.asList(parentDoc));\n\n    // Add another doc so scorer is not null\n    parentDoc = new Document();\n    parentDoc.add(newField(\"parent\", \"2\", StringField.TYPE_UNSTORED));\n    parentDoc.add(newField(\"isparent\", \"yes\", StringField.TYPE_UNSTORED));\n    Document childDoc = new Document();\n    childDoc.add(newField(\"child\", \"2\", StringField.TYPE_UNSTORED));\n    w.addDocuments(Arrays.asList(childDoc, parentDoc));\n\n    // Need single seg:\n    w.forceMerge(1);\n    IndexReader r = w.getReader();\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    Query tq = new TermQuery(new Term(\"child\", \"2\"));\n    Filter parentFilter = new CachingWrapperFilter(\n                            new QueryWrapperFilter(\n                              new TermQuery(new Term(\"isparent\", \"yes\"))));\n\n    ToParentBlockJoinQuery q = new ToParentBlockJoinQuery(tq, parentFilter, ToParentBlockJoinQuery.ScoreMode.Avg);\n    Weight weight = s.createNormalizedWeight(q);\n    DocIdSetIterator disi = weight.scorer(s.getIndexReader().getTopReaderContext().leaves()[0], true, true, null);\n    assertEquals(2, disi.advance(0));\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"04f07771a2a7dd3a395700665ed839c3dae2def2","date":1339350139,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/join/src/test/org/apache/lucene/search/join/TestBlockJoin#testAdvanceSingleParentNoChild().mjava","pathOld":"lucene/join/src/test/org/apache/lucene/search/join/TestBlockJoin#testAdvanceSingleParentNoChild().mjava","sourceNew":"  public void testAdvanceSingleParentNoChild() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())).setMergePolicy(new LogDocMergePolicy()));\n    Document parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"1\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(parentDoc));\n\n    // Add another doc so scorer is not null\n    parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"2\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    Document childDoc = new Document();\n    childDoc.add(newStringField(\"child\", \"2\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(childDoc, parentDoc));\n\n    // Need single seg:\n    w.forceMerge(1);\n    IndexReader r = w.getReader();\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    Query tq = new TermQuery(new Term(\"child\", \"2\"));\n    Filter parentFilter = new CachingWrapperFilter(\n                            new QueryWrapperFilter(\n                              new TermQuery(new Term(\"isparent\", \"yes\"))));\n\n    ToParentBlockJoinQuery q = new ToParentBlockJoinQuery(tq, parentFilter, ScoreMode.Avg);\n    Weight weight = s.createNormalizedWeight(q);\n    DocIdSetIterator disi = weight.scorer(s.getIndexReader().getTopReaderContext().leaves()[0], true, true, null);\n    assertEquals(2, disi.advance(0));\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testAdvanceSingleParentNoChild() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())).setMergePolicy(new LogDocMergePolicy()));\n    Document parentDoc = new Document();\n    parentDoc.add(newField(\"parent\", \"1\", StringField.TYPE_UNSTORED));\n    parentDoc.add(newField(\"isparent\", \"yes\", StringField.TYPE_UNSTORED));\n    w.addDocuments(Arrays.asList(parentDoc));\n\n    // Add another doc so scorer is not null\n    parentDoc = new Document();\n    parentDoc.add(newField(\"parent\", \"2\", StringField.TYPE_UNSTORED));\n    parentDoc.add(newField(\"isparent\", \"yes\", StringField.TYPE_UNSTORED));\n    Document childDoc = new Document();\n    childDoc.add(newField(\"child\", \"2\", StringField.TYPE_UNSTORED));\n    w.addDocuments(Arrays.asList(childDoc, parentDoc));\n\n    // Need single seg:\n    w.forceMerge(1);\n    IndexReader r = w.getReader();\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    Query tq = new TermQuery(new Term(\"child\", \"2\"));\n    Filter parentFilter = new CachingWrapperFilter(\n                            new QueryWrapperFilter(\n                              new TermQuery(new Term(\"isparent\", \"yes\"))));\n\n    ToParentBlockJoinQuery q = new ToParentBlockJoinQuery(tq, parentFilter, ScoreMode.Avg);\n    Weight weight = s.createNormalizedWeight(q);\n    DocIdSetIterator disi = weight.scorer(s.getIndexReader().getTopReaderContext().leaves()[0], true, true, null);\n    assertEquals(2, disi.advance(0));\n    r.close();\n    dir.close();\n  }\n\n","bugFix":["6442a1e611a2a329dd4725e0419ea23d118b89b3"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4c5ae929ce8aa0c4856f0d6bfd4c196bc2d3eb9c","date":1340090669,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/join/src/test/org/apache/lucene/search/join/TestBlockJoin#testAdvanceSingleParentNoChild().mjava","pathOld":"lucene/join/src/test/org/apache/lucene/search/join/TestBlockJoin#testAdvanceSingleParentNoChild().mjava","sourceNew":"  public void testAdvanceSingleParentNoChild() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())).setMergePolicy(new LogDocMergePolicy()));\n    Document parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"1\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(parentDoc));\n\n    // Add another doc so scorer is not null\n    parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"2\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    Document childDoc = new Document();\n    childDoc.add(newStringField(\"child\", \"2\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(childDoc, parentDoc));\n\n    // Need single seg:\n    w.forceMerge(1);\n    IndexReader r = w.getReader();\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    Query tq = new TermQuery(new Term(\"child\", \"2\"));\n    Filter parentFilter = new CachingWrapperFilter(\n                            new QueryWrapperFilter(\n                              new TermQuery(new Term(\"isparent\", \"yes\"))));\n\n    ToParentBlockJoinQuery q = new ToParentBlockJoinQuery(tq, parentFilter, ScoreMode.Avg);\n    Weight weight = s.createNormalizedWeight(q);\n    DocIdSetIterator disi = weight.scorer(s.getIndexReader().getTopReaderContext().leaves().get(0), true, true, null);\n    assertEquals(2, disi.advance(0));\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testAdvanceSingleParentNoChild() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())).setMergePolicy(new LogDocMergePolicy()));\n    Document parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"1\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(parentDoc));\n\n    // Add another doc so scorer is not null\n    parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"2\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    Document childDoc = new Document();\n    childDoc.add(newStringField(\"child\", \"2\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(childDoc, parentDoc));\n\n    // Need single seg:\n    w.forceMerge(1);\n    IndexReader r = w.getReader();\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    Query tq = new TermQuery(new Term(\"child\", \"2\"));\n    Filter parentFilter = new CachingWrapperFilter(\n                            new QueryWrapperFilter(\n                              new TermQuery(new Term(\"isparent\", \"yes\"))));\n\n    ToParentBlockJoinQuery q = new ToParentBlockJoinQuery(tq, parentFilter, ScoreMode.Avg);\n    Weight weight = s.createNormalizedWeight(q);\n    DocIdSetIterator disi = weight.scorer(s.getIndexReader().getTopReaderContext().leaves()[0], true, true, null);\n    assertEquals(2, disi.advance(0));\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":["d743dbdc40bef0a47a5d54d99623ef0c2eb5923e"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d743dbdc40bef0a47a5d54d99623ef0c2eb5923e","date":1344896544,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/join/src/test/org/apache/lucene/search/join/TestBlockJoin#testAdvanceSingleParentNoChild().mjava","pathOld":"lucene/join/src/test/org/apache/lucene/search/join/TestBlockJoin#testAdvanceSingleParentNoChild().mjava","sourceNew":"  public void testAdvanceSingleParentNoChild() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())).setMergePolicy(new LogDocMergePolicy()));\n    Document parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"1\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(parentDoc));\n\n    // Add another doc so scorer is not null\n    parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"2\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    Document childDoc = new Document();\n    childDoc.add(newStringField(\"child\", \"2\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(childDoc, parentDoc));\n\n    // Need single seg:\n    w.forceMerge(1);\n    IndexReader r = w.getReader();\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    Query tq = new TermQuery(new Term(\"child\", \"2\"));\n    Filter parentFilter = new CachingWrapperFilter(\n                            new QueryWrapperFilter(\n                              new TermQuery(new Term(\"isparent\", \"yes\"))));\n\n    ToParentBlockJoinQuery q = new ToParentBlockJoinQuery(tq, parentFilter, ScoreMode.Avg);\n    Weight weight = s.createNormalizedWeight(q);\n    DocIdSetIterator disi = weight.scorer(s.getIndexReader().leaves().get(0), true, true, null);\n    assertEquals(2, disi.advance(0));\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testAdvanceSingleParentNoChild() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())).setMergePolicy(new LogDocMergePolicy()));\n    Document parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"1\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(parentDoc));\n\n    // Add another doc so scorer is not null\n    parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"2\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    Document childDoc = new Document();\n    childDoc.add(newStringField(\"child\", \"2\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(childDoc, parentDoc));\n\n    // Need single seg:\n    w.forceMerge(1);\n    IndexReader r = w.getReader();\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    Query tq = new TermQuery(new Term(\"child\", \"2\"));\n    Filter parentFilter = new CachingWrapperFilter(\n                            new QueryWrapperFilter(\n                              new TermQuery(new Term(\"isparent\", \"yes\"))));\n\n    ToParentBlockJoinQuery q = new ToParentBlockJoinQuery(tq, parentFilter, ScoreMode.Avg);\n    Weight weight = s.createNormalizedWeight(q);\n    DocIdSetIterator disi = weight.scorer(s.getIndexReader().getTopReaderContext().leaves().get(0), true, true, null);\n    assertEquals(2, disi.advance(0));\n    r.close();\n    dir.close();\n  }\n\n","bugFix":["4c5ae929ce8aa0c4856f0d6bfd4c196bc2d3eb9c"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c1fe8ee1a5a1ef00a9c4793ec26f17bd90342198","date":1345029782,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/join/src/test/org/apache/lucene/search/join/TestBlockJoin#testAdvanceSingleParentNoChild().mjava","pathOld":"lucene/join/src/test/org/apache/lucene/search/join/TestBlockJoin#testAdvanceSingleParentNoChild().mjava","sourceNew":"  public void testAdvanceSingleParentNoChild() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())).setMergePolicy(new LogDocMergePolicy()));\n    Document parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"1\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(parentDoc));\n\n    // Add another doc so scorer is not null\n    parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"2\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    Document childDoc = new Document();\n    childDoc.add(newStringField(\"child\", \"2\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(childDoc, parentDoc));\n\n    // Need single seg:\n    w.forceMerge(1);\n    IndexReader r = w.getReader();\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    Query tq = new TermQuery(new Term(\"child\", \"2\"));\n    Filter parentFilter = new CachingWrapperFilter(\n                            new QueryWrapperFilter(\n                              new TermQuery(new Term(\"isparent\", \"yes\"))));\n\n    ToParentBlockJoinQuery q = new ToParentBlockJoinQuery(tq, parentFilter, ScoreMode.Avg);\n    Weight weight = s.createNormalizedWeight(q);\n    DocIdSetIterator disi = weight.scorer(s.getIndexReader().leaves().get(0), true, true, null);\n    assertEquals(2, disi.advance(0));\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testAdvanceSingleParentNoChild() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())).setMergePolicy(new LogDocMergePolicy()));\n    Document parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"1\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(parentDoc));\n\n    // Add another doc so scorer is not null\n    parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"2\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    Document childDoc = new Document();\n    childDoc.add(newStringField(\"child\", \"2\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(childDoc, parentDoc));\n\n    // Need single seg:\n    w.forceMerge(1);\n    IndexReader r = w.getReader();\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    Query tq = new TermQuery(new Term(\"child\", \"2\"));\n    Filter parentFilter = new CachingWrapperFilter(\n                            new QueryWrapperFilter(\n                              new TermQuery(new Term(\"isparent\", \"yes\"))));\n\n    ToParentBlockJoinQuery q = new ToParentBlockJoinQuery(tq, parentFilter, ScoreMode.Avg);\n    Weight weight = s.createNormalizedWeight(q);\n    DocIdSetIterator disi = weight.scorer(s.getIndexReader().getTopReaderContext().leaves().get(0), true, true, null);\n    assertEquals(2, disi.advance(0));\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b05c56a41b733e02a189c48895922b5bd8c7f3d1","date":1345033322,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/join/src/test/org/apache/lucene/search/join/TestBlockJoin#testAdvanceSingleParentNoChild().mjava","pathOld":"lucene/join/src/test/org/apache/lucene/search/join/TestBlockJoin#testAdvanceSingleParentNoChild().mjava","sourceNew":"  public void testAdvanceSingleParentNoChild() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())).setMergePolicy(new LogDocMergePolicy()));\n    Document parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"1\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(parentDoc));\n\n    // Add another doc so scorer is not null\n    parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"2\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    Document childDoc = new Document();\n    childDoc.add(newStringField(\"child\", \"2\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(childDoc, parentDoc));\n\n    // Need single seg:\n    w.forceMerge(1);\n    IndexReader r = w.getReader();\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    Query tq = new TermQuery(new Term(\"child\", \"2\"));\n    Filter parentFilter = new CachingWrapperFilter(\n                            new QueryWrapperFilter(\n                              new TermQuery(new Term(\"isparent\", \"yes\"))));\n\n    ToParentBlockJoinQuery q = new ToParentBlockJoinQuery(tq, parentFilter, ScoreMode.Avg);\n    Weight weight = s.createNormalizedWeight(q);\n    DocIdSetIterator disi = weight.scorer(s.getIndexReader().leaves().get(0), true, true, null);\n    assertEquals(2, disi.advance(0));\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testAdvanceSingleParentNoChild() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())).setMergePolicy(new LogDocMergePolicy()));\n    Document parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"1\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(parentDoc));\n\n    // Add another doc so scorer is not null\n    parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"2\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    Document childDoc = new Document();\n    childDoc.add(newStringField(\"child\", \"2\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(childDoc, parentDoc));\n\n    // Need single seg:\n    w.forceMerge(1);\n    IndexReader r = w.getReader();\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    Query tq = new TermQuery(new Term(\"child\", \"2\"));\n    Filter parentFilter = new CachingWrapperFilter(\n                            new QueryWrapperFilter(\n                              new TermQuery(new Term(\"isparent\", \"yes\"))));\n\n    ToParentBlockJoinQuery q = new ToParentBlockJoinQuery(tq, parentFilter, ScoreMode.Avg);\n    Weight weight = s.createNormalizedWeight(q);\n    DocIdSetIterator disi = weight.scorer(s.getIndexReader().getTopReaderContext().leaves().get(0), true, true, null);\n    assertEquals(2, disi.advance(0));\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"49a8cbd66bc94e18d7b9087e42dbc6cc0ee0c161","date":1378462032,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/join/src/test/org/apache/lucene/search/join/TestBlockJoin#testAdvanceSingleParentNoChild().mjava","pathOld":"lucene/join/src/test/org/apache/lucene/search/join/TestBlockJoin#testAdvanceSingleParentNoChild().mjava","sourceNew":"  public void testAdvanceSingleParentNoChild() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())).setMergePolicy(new LogDocMergePolicy()));\n    Document parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"1\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(parentDoc));\n\n    // Add another doc so scorer is not null\n    parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"2\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    Document childDoc = new Document();\n    childDoc.add(newStringField(\"child\", \"2\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(childDoc, parentDoc));\n\n    // Need single seg:\n    w.forceMerge(1);\n    IndexReader r = w.getReader();\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    Query tq = new TermQuery(new Term(\"child\", \"2\"));\n    Filter parentFilter = new FixedBitSetCachingWrapperFilter(\n                            new QueryWrapperFilter(\n                              new TermQuery(new Term(\"isparent\", \"yes\"))));\n\n    ToParentBlockJoinQuery q = new ToParentBlockJoinQuery(tq, parentFilter, ScoreMode.Avg);\n    Weight weight = s.createNormalizedWeight(q);\n    DocIdSetIterator disi = weight.scorer(s.getIndexReader().leaves().get(0), true, true, null);\n    assertEquals(2, disi.advance(0));\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testAdvanceSingleParentNoChild() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())).setMergePolicy(new LogDocMergePolicy()));\n    Document parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"1\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(parentDoc));\n\n    // Add another doc so scorer is not null\n    parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"2\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    Document childDoc = new Document();\n    childDoc.add(newStringField(\"child\", \"2\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(childDoc, parentDoc));\n\n    // Need single seg:\n    w.forceMerge(1);\n    IndexReader r = w.getReader();\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    Query tq = new TermQuery(new Term(\"child\", \"2\"));\n    Filter parentFilter = new CachingWrapperFilter(\n                            new QueryWrapperFilter(\n                              new TermQuery(new Term(\"isparent\", \"yes\"))));\n\n    ToParentBlockJoinQuery q = new ToParentBlockJoinQuery(tq, parentFilter, ScoreMode.Avg);\n    Weight weight = s.createNormalizedWeight(q);\n    DocIdSetIterator disi = weight.scorer(s.getIndexReader().leaves().get(0), true, true, null);\n    assertEquals(2, disi.advance(0));\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e18c86f811939bfa8cd24046c96ed026f2e9b34","date":1393893071,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/join/src/test/org/apache/lucene/search/join/TestBlockJoin#testAdvanceSingleParentNoChild().mjava","pathOld":"lucene/join/src/test/org/apache/lucene/search/join/TestBlockJoin#testAdvanceSingleParentNoChild().mjava","sourceNew":"  public void testAdvanceSingleParentNoChild() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())).setMergePolicy(new LogDocMergePolicy()));\n    Document parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"1\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(parentDoc));\n\n    // Add another doc so scorer is not null\n    parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"2\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    Document childDoc = new Document();\n    childDoc.add(newStringField(\"child\", \"2\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(childDoc, parentDoc));\n\n    // Need single seg:\n    w.forceMerge(1);\n    IndexReader r = w.getReader();\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    Query tq = new TermQuery(new Term(\"child\", \"2\"));\n    Filter parentFilter = new FixedBitSetCachingWrapperFilter(\n                            new QueryWrapperFilter(\n                              new TermQuery(new Term(\"isparent\", \"yes\"))));\n\n    ToParentBlockJoinQuery q = new ToParentBlockJoinQuery(tq, parentFilter, ScoreMode.Avg);\n    Weight weight = s.createNormalizedWeight(q);\n    DocIdSetIterator disi = weight.scorer(s.getIndexReader().leaves().get(0), null);\n    assertEquals(2, disi.advance(0));\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testAdvanceSingleParentNoChild() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())).setMergePolicy(new LogDocMergePolicy()));\n    Document parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"1\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(parentDoc));\n\n    // Add another doc so scorer is not null\n    parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"2\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    Document childDoc = new Document();\n    childDoc.add(newStringField(\"child\", \"2\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(childDoc, parentDoc));\n\n    // Need single seg:\n    w.forceMerge(1);\n    IndexReader r = w.getReader();\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    Query tq = new TermQuery(new Term(\"child\", \"2\"));\n    Filter parentFilter = new FixedBitSetCachingWrapperFilter(\n                            new QueryWrapperFilter(\n                              new TermQuery(new Term(\"isparent\", \"yes\"))));\n\n    ToParentBlockJoinQuery q = new ToParentBlockJoinQuery(tq, parentFilter, ScoreMode.Avg);\n    Weight weight = s.createNormalizedWeight(q);\n    DocIdSetIterator disi = weight.scorer(s.getIndexReader().leaves().get(0), true, true, null);\n    assertEquals(2, disi.advance(0));\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":["781239fc84d36be12b84e4d3e2618f5f07a182e3"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"acf00221f44c5f08ccea014f2492b53af15ecd66","date":1394568293,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/join/src/test/org/apache/lucene/search/join/TestBlockJoin#testAdvanceSingleParentNoChild().mjava","pathOld":"lucene/join/src/test/org/apache/lucene/search/join/TestBlockJoin#testAdvanceSingleParentNoChild().mjava","sourceNew":"  public void testAdvanceSingleParentNoChild() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())).setMergePolicy(new LogDocMergePolicy()));\n    Document parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"1\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(parentDoc));\n\n    // Add another doc so scorer is not null\n    parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"2\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    Document childDoc = new Document();\n    childDoc.add(newStringField(\"child\", \"2\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(childDoc, parentDoc));\n\n    // Need single seg:\n    w.forceMerge(1);\n    IndexReader r = w.getReader();\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    Query tq = new TermQuery(new Term(\"child\", \"2\"));\n    Filter parentFilter = new FixedBitSetCachingWrapperFilter(\n                            new QueryWrapperFilter(\n                              new TermQuery(new Term(\"isparent\", \"yes\"))));\n\n    ToParentBlockJoinQuery q = new ToParentBlockJoinQuery(tq, parentFilter, ScoreMode.Avg);\n    Weight weight = s.createNormalizedWeight(q);\n    DocIdSetIterator disi = weight.scorer(s.getIndexReader().leaves().get(0), null);\n    assertEquals(2, disi.advance(0));\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testAdvanceSingleParentNoChild() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())).setMergePolicy(new LogDocMergePolicy()));\n    Document parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"1\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(parentDoc));\n\n    // Add another doc so scorer is not null\n    parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"2\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    Document childDoc = new Document();\n    childDoc.add(newStringField(\"child\", \"2\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(childDoc, parentDoc));\n\n    // Need single seg:\n    w.forceMerge(1);\n    IndexReader r = w.getReader();\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    Query tq = new TermQuery(new Term(\"child\", \"2\"));\n    Filter parentFilter = new FixedBitSetCachingWrapperFilter(\n                            new QueryWrapperFilter(\n                              new TermQuery(new Term(\"isparent\", \"yes\"))));\n\n    ToParentBlockJoinQuery q = new ToParentBlockJoinQuery(tq, parentFilter, ScoreMode.Avg);\n    Weight weight = s.createNormalizedWeight(q);\n    DocIdSetIterator disi = weight.scorer(s.getIndexReader().leaves().get(0), true, true, null);\n    assertEquals(2, disi.advance(0));\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/join/src/test/org/apache/lucene/search/join/TestBlockJoin#testAdvanceSingleParentNoChild().mjava","pathOld":"lucene/join/src/test/org/apache/lucene/search/join/TestBlockJoin#testAdvanceSingleParentNoChild().mjava","sourceNew":"  public void testAdvanceSingleParentNoChild() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())).setMergePolicy(new LogDocMergePolicy()));\n    Document parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"1\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(parentDoc));\n\n    // Add another doc so scorer is not null\n    parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"2\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    Document childDoc = new Document();\n    childDoc.add(newStringField(\"child\", \"2\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(childDoc, parentDoc));\n\n    // Need single seg:\n    w.forceMerge(1);\n    IndexReader r = w.getReader();\n    w.shutdown();\n    IndexSearcher s = newSearcher(r);\n    Query tq = new TermQuery(new Term(\"child\", \"2\"));\n    Filter parentFilter = new FixedBitSetCachingWrapperFilter(\n                            new QueryWrapperFilter(\n                              new TermQuery(new Term(\"isparent\", \"yes\"))));\n\n    ToParentBlockJoinQuery q = new ToParentBlockJoinQuery(tq, parentFilter, ScoreMode.Avg);\n    Weight weight = s.createNormalizedWeight(q);\n    DocIdSetIterator disi = weight.scorer(s.getIndexReader().leaves().get(0), null);\n    assertEquals(2, disi.advance(0));\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testAdvanceSingleParentNoChild() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())).setMergePolicy(new LogDocMergePolicy()));\n    Document parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"1\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(parentDoc));\n\n    // Add another doc so scorer is not null\n    parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"2\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    Document childDoc = new Document();\n    childDoc.add(newStringField(\"child\", \"2\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(childDoc, parentDoc));\n\n    // Need single seg:\n    w.forceMerge(1);\n    IndexReader r = w.getReader();\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    Query tq = new TermQuery(new Term(\"child\", \"2\"));\n    Filter parentFilter = new FixedBitSetCachingWrapperFilter(\n                            new QueryWrapperFilter(\n                              new TermQuery(new Term(\"isparent\", \"yes\"))));\n\n    ToParentBlockJoinQuery q = new ToParentBlockJoinQuery(tq, parentFilter, ScoreMode.Avg);\n    Weight weight = s.createNormalizedWeight(q);\n    DocIdSetIterator disi = weight.scorer(s.getIndexReader().leaves().get(0), null);\n    assertEquals(2, disi.advance(0));\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e","date":1406737224,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/join/src/test/org/apache/lucene/search/join/TestBlockJoin#testAdvanceSingleParentNoChild().mjava","pathOld":"lucene/join/src/test/org/apache/lucene/search/join/TestBlockJoin#testAdvanceSingleParentNoChild().mjava","sourceNew":"  public void testAdvanceSingleParentNoChild() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir, newIndexWriterConfig(new MockAnalyzer(random())).setMergePolicy(new LogDocMergePolicy()));\n    Document parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"1\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(parentDoc));\n\n    // Add another doc so scorer is not null\n    parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"2\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    Document childDoc = new Document();\n    childDoc.add(newStringField(\"child\", \"2\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(childDoc, parentDoc));\n\n    // Need single seg:\n    w.forceMerge(1);\n    IndexReader r = w.getReader();\n    w.shutdown();\n    IndexSearcher s = newSearcher(r);\n    Query tq = new TermQuery(new Term(\"child\", \"2\"));\n    Filter parentFilter = new FixedBitSetCachingWrapperFilter(\n                            new QueryWrapperFilter(\n                              new TermQuery(new Term(\"isparent\", \"yes\"))));\n\n    ToParentBlockJoinQuery q = new ToParentBlockJoinQuery(tq, parentFilter, ScoreMode.Avg);\n    Weight weight = s.createNormalizedWeight(q);\n    DocIdSetIterator disi = weight.scorer(s.getIndexReader().leaves().get(0), null);\n    assertEquals(2, disi.advance(0));\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testAdvanceSingleParentNoChild() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir, newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())).setMergePolicy(new LogDocMergePolicy()));\n    Document parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"1\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(parentDoc));\n\n    // Add another doc so scorer is not null\n    parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"2\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    Document childDoc = new Document();\n    childDoc.add(newStringField(\"child\", \"2\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(childDoc, parentDoc));\n\n    // Need single seg:\n    w.forceMerge(1);\n    IndexReader r = w.getReader();\n    w.shutdown();\n    IndexSearcher s = newSearcher(r);\n    Query tq = new TermQuery(new Term(\"child\", \"2\"));\n    Filter parentFilter = new FixedBitSetCachingWrapperFilter(\n                            new QueryWrapperFilter(\n                              new TermQuery(new Term(\"isparent\", \"yes\"))));\n\n    ToParentBlockJoinQuery q = new ToParentBlockJoinQuery(tq, parentFilter, ScoreMode.Avg);\n    Weight weight = s.createNormalizedWeight(q);\n    DocIdSetIterator disi = weight.scorer(s.getIndexReader().leaves().get(0), null);\n    assertEquals(2, disi.advance(0));\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/join/src/test/org/apache/lucene/search/join/TestBlockJoin#testAdvanceSingleParentNoChild().mjava","pathOld":"lucene/join/src/test/org/apache/lucene/search/join/TestBlockJoin#testAdvanceSingleParentNoChild().mjava","sourceNew":"  public void testAdvanceSingleParentNoChild() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir, newIndexWriterConfig(new MockAnalyzer(random())).setMergePolicy(new LogDocMergePolicy()));\n    Document parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"1\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(parentDoc));\n\n    // Add another doc so scorer is not null\n    parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"2\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    Document childDoc = new Document();\n    childDoc.add(newStringField(\"child\", \"2\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(childDoc, parentDoc));\n\n    // Need single seg:\n    w.forceMerge(1);\n    IndexReader r = w.getReader();\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    Query tq = new TermQuery(new Term(\"child\", \"2\"));\n    Filter parentFilter = new FixedBitSetCachingWrapperFilter(\n                            new QueryWrapperFilter(\n                              new TermQuery(new Term(\"isparent\", \"yes\"))));\n\n    ToParentBlockJoinQuery q = new ToParentBlockJoinQuery(tq, parentFilter, ScoreMode.Avg);\n    Weight weight = s.createNormalizedWeight(q);\n    DocIdSetIterator disi = weight.scorer(s.getIndexReader().leaves().get(0), null);\n    assertEquals(2, disi.advance(0));\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testAdvanceSingleParentNoChild() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir, newIndexWriterConfig(new MockAnalyzer(random())).setMergePolicy(new LogDocMergePolicy()));\n    Document parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"1\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(parentDoc));\n\n    // Add another doc so scorer is not null\n    parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"2\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    Document childDoc = new Document();\n    childDoc.add(newStringField(\"child\", \"2\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(childDoc, parentDoc));\n\n    // Need single seg:\n    w.forceMerge(1);\n    IndexReader r = w.getReader();\n    w.shutdown();\n    IndexSearcher s = newSearcher(r);\n    Query tq = new TermQuery(new Term(\"child\", \"2\"));\n    Filter parentFilter = new FixedBitSetCachingWrapperFilter(\n                            new QueryWrapperFilter(\n                              new TermQuery(new Term(\"isparent\", \"yes\"))));\n\n    ToParentBlockJoinQuery q = new ToParentBlockJoinQuery(tq, parentFilter, ScoreMode.Avg);\n    Weight weight = s.createNormalizedWeight(q);\n    DocIdSetIterator disi = weight.scorer(s.getIndexReader().leaves().get(0), null);\n    assertEquals(2, disi.advance(0));\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b012914a8110b2ff1d075ed1ef72aa57084d4897","date":1414685177,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/join/src/test/org/apache/lucene/search/join/TestBlockJoin#testAdvanceSingleParentNoChild().mjava","pathOld":"lucene/join/src/test/org/apache/lucene/search/join/TestBlockJoin#testAdvanceSingleParentNoChild().mjava","sourceNew":"  public void testAdvanceSingleParentNoChild() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir, newIndexWriterConfig(new MockAnalyzer(random())).setMergePolicy(new LogDocMergePolicy()));\n    Document parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"1\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(parentDoc));\n\n    // Add another doc so scorer is not null\n    parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"2\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    Document childDoc = new Document();\n    childDoc.add(newStringField(\"child\", \"2\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(childDoc, parentDoc));\n\n    // Need single seg:\n    w.forceMerge(1);\n    IndexReader r = w.getReader();\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    Query tq = new TermQuery(new Term(\"child\", \"2\"));\n    BitDocIdSetFilter parentFilter = new BitDocIdSetCachingWrapperFilter(\n                            new QueryWrapperFilter(\n                              new TermQuery(new Term(\"isparent\", \"yes\"))));\n\n    ToParentBlockJoinQuery q = new ToParentBlockJoinQuery(tq, parentFilter, ScoreMode.Avg);\n    Weight weight = s.createNormalizedWeight(q);\n    DocIdSetIterator disi = weight.scorer(s.getIndexReader().leaves().get(0), null);\n    assertEquals(2, disi.advance(0));\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testAdvanceSingleParentNoChild() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir, newIndexWriterConfig(new MockAnalyzer(random())).setMergePolicy(new LogDocMergePolicy()));\n    Document parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"1\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(parentDoc));\n\n    // Add another doc so scorer is not null\n    parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"2\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    Document childDoc = new Document();\n    childDoc.add(newStringField(\"child\", \"2\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(childDoc, parentDoc));\n\n    // Need single seg:\n    w.forceMerge(1);\n    IndexReader r = w.getReader();\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    Query tq = new TermQuery(new Term(\"child\", \"2\"));\n    Filter parentFilter = new FixedBitSetCachingWrapperFilter(\n                            new QueryWrapperFilter(\n                              new TermQuery(new Term(\"isparent\", \"yes\"))));\n\n    ToParentBlockJoinQuery q = new ToParentBlockJoinQuery(tq, parentFilter, ScoreMode.Avg);\n    Weight weight = s.createNormalizedWeight(q);\n    DocIdSetIterator disi = weight.scorer(s.getIndexReader().leaves().get(0), null);\n    assertEquals(2, disi.advance(0));\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"781239fc84d36be12b84e4d3e2618f5f07a182e3","date":1423139668,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/join/src/test/org/apache/lucene/search/join/TestBlockJoin#testAdvanceSingleParentNoChild().mjava","pathOld":"lucene/join/src/test/org/apache/lucene/search/join/TestBlockJoin#testAdvanceSingleParentNoChild().mjava","sourceNew":"  public void testAdvanceSingleParentNoChild() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir, newIndexWriterConfig(new MockAnalyzer(random())).setMergePolicy(new LogDocMergePolicy()));\n    Document parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"1\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(parentDoc));\n\n    // Add another doc so scorer is not null\n    parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"2\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    Document childDoc = new Document();\n    childDoc.add(newStringField(\"child\", \"2\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(childDoc, parentDoc));\n\n    // Need single seg:\n    w.forceMerge(1);\n    IndexReader r = w.getReader();\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    Query tq = new TermQuery(new Term(\"child\", \"2\"));\n    BitDocIdSetFilter parentFilter = new BitDocIdSetCachingWrapperFilter(\n                            new QueryWrapperFilter(\n                              new TermQuery(new Term(\"isparent\", \"yes\"))));\n\n    ToParentBlockJoinQuery q = new ToParentBlockJoinQuery(tq, parentFilter, ScoreMode.Avg);\n    Weight weight = s.createNormalizedWeight(q);\n    DocIdSetIterator disi = weight.scorer(s.getIndexReader().leaves().get(0), null, true);\n    assertEquals(2, disi.advance(0));\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testAdvanceSingleParentNoChild() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir, newIndexWriterConfig(new MockAnalyzer(random())).setMergePolicy(new LogDocMergePolicy()));\n    Document parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"1\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(parentDoc));\n\n    // Add another doc so scorer is not null\n    parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"2\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    Document childDoc = new Document();\n    childDoc.add(newStringField(\"child\", \"2\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(childDoc, parentDoc));\n\n    // Need single seg:\n    w.forceMerge(1);\n    IndexReader r = w.getReader();\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    Query tq = new TermQuery(new Term(\"child\", \"2\"));\n    BitDocIdSetFilter parentFilter = new BitDocIdSetCachingWrapperFilter(\n                            new QueryWrapperFilter(\n                              new TermQuery(new Term(\"isparent\", \"yes\"))));\n\n    ToParentBlockJoinQuery q = new ToParentBlockJoinQuery(tq, parentFilter, ScoreMode.Avg);\n    Weight weight = s.createNormalizedWeight(q);\n    DocIdSetIterator disi = weight.scorer(s.getIndexReader().leaves().get(0), null);\n    assertEquals(2, disi.advance(0));\n    r.close();\n    dir.close();\n  }\n\n","bugFix":["2e18c86f811939bfa8cd24046c96ed026f2e9b34"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fb17639909a369c1e64866842e5c213440acc17e","date":1423238093,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/join/src/test/org/apache/lucene/search/join/TestBlockJoin#testAdvanceSingleParentNoChild().mjava","pathOld":"lucene/join/src/test/org/apache/lucene/search/join/TestBlockJoin#testAdvanceSingleParentNoChild().mjava","sourceNew":"  public void testAdvanceSingleParentNoChild() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir, newIndexWriterConfig(new MockAnalyzer(random())).setMergePolicy(new LogDocMergePolicy()));\n    Document parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"1\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(parentDoc));\n\n    // Add another doc so scorer is not null\n    parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"2\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    Document childDoc = new Document();\n    childDoc.add(newStringField(\"child\", \"2\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(childDoc, parentDoc));\n\n    // Need single seg:\n    w.forceMerge(1);\n    IndexReader r = w.getReader();\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    Query tq = new TermQuery(new Term(\"child\", \"2\"));\n    BitDocIdSetFilter parentFilter = new BitDocIdSetCachingWrapperFilter(\n                            new QueryWrapperFilter(\n                              new TermQuery(new Term(\"isparent\", \"yes\"))));\n\n    ToParentBlockJoinQuery q = new ToParentBlockJoinQuery(tq, parentFilter, ScoreMode.Avg);\n    Weight weight = s.createNormalizedWeight(q, true);\n    DocIdSetIterator disi = weight.scorer(s.getIndexReader().leaves().get(0), null);\n    assertEquals(2, disi.advance(0));\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testAdvanceSingleParentNoChild() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir, newIndexWriterConfig(new MockAnalyzer(random())).setMergePolicy(new LogDocMergePolicy()));\n    Document parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"1\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(parentDoc));\n\n    // Add another doc so scorer is not null\n    parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"2\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    Document childDoc = new Document();\n    childDoc.add(newStringField(\"child\", \"2\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(childDoc, parentDoc));\n\n    // Need single seg:\n    w.forceMerge(1);\n    IndexReader r = w.getReader();\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    Query tq = new TermQuery(new Term(\"child\", \"2\"));\n    BitDocIdSetFilter parentFilter = new BitDocIdSetCachingWrapperFilter(\n                            new QueryWrapperFilter(\n                              new TermQuery(new Term(\"isparent\", \"yes\"))));\n\n    ToParentBlockJoinQuery q = new ToParentBlockJoinQuery(tq, parentFilter, ScoreMode.Avg);\n    Weight weight = s.createNormalizedWeight(q);\n    DocIdSetIterator disi = weight.scorer(s.getIndexReader().leaves().get(0), null, true);\n    assertEquals(2, disi.advance(0));\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"954e59be3da8dc1b046646ad7af4b466852009d3","date":1423482367,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/join/src/test/org/apache/lucene/search/join/TestBlockJoin#testAdvanceSingleParentNoChild().mjava","pathOld":"lucene/join/src/test/org/apache/lucene/search/join/TestBlockJoin#testAdvanceSingleParentNoChild().mjava","sourceNew":"  public void testAdvanceSingleParentNoChild() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir, newIndexWriterConfig(new MockAnalyzer(random())).setMergePolicy(new LogDocMergePolicy()));\n    Document parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"1\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(parentDoc));\n\n    // Add another doc so scorer is not null\n    parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"2\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    Document childDoc = new Document();\n    childDoc.add(newStringField(\"child\", \"2\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(childDoc, parentDoc));\n\n    // Need single seg:\n    w.forceMerge(1);\n    IndexReader r = w.getReader();\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    Query tq = new TermQuery(new Term(\"child\", \"2\"));\n    BitDocIdSetFilter parentFilter = new BitDocIdSetCachingWrapperFilter(\n                            new QueryWrapperFilter(\n                              new TermQuery(new Term(\"isparent\", \"yes\"))));\n\n    ToParentBlockJoinQuery q = new ToParentBlockJoinQuery(tq, parentFilter, ScoreMode.Avg);\n    Weight weight = s.createNormalizedWeight(q, PostingsEnum.FLAG_FREQS);\n    DocIdSetIterator disi = weight.scorer(s.getIndexReader().leaves().get(0), null);\n    assertEquals(2, disi.advance(0));\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testAdvanceSingleParentNoChild() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir, newIndexWriterConfig(new MockAnalyzer(random())).setMergePolicy(new LogDocMergePolicy()));\n    Document parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"1\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(parentDoc));\n\n    // Add another doc so scorer is not null\n    parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"2\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    Document childDoc = new Document();\n    childDoc.add(newStringField(\"child\", \"2\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(childDoc, parentDoc));\n\n    // Need single seg:\n    w.forceMerge(1);\n    IndexReader r = w.getReader();\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    Query tq = new TermQuery(new Term(\"child\", \"2\"));\n    BitDocIdSetFilter parentFilter = new BitDocIdSetCachingWrapperFilter(\n                            new QueryWrapperFilter(\n                              new TermQuery(new Term(\"isparent\", \"yes\"))));\n\n    ToParentBlockJoinQuery q = new ToParentBlockJoinQuery(tq, parentFilter, ScoreMode.Avg);\n    Weight weight = s.createNormalizedWeight(q, true);\n    DocIdSetIterator disi = weight.scorer(s.getIndexReader().leaves().get(0), null);\n    assertEquals(2, disi.advance(0));\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6a47d642ab24da1a811adce4bda9cc52c520ca13","date":1423483323,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/join/src/test/org/apache/lucene/search/join/TestBlockJoin#testAdvanceSingleParentNoChild().mjava","pathOld":"lucene/join/src/test/org/apache/lucene/search/join/TestBlockJoin#testAdvanceSingleParentNoChild().mjava","sourceNew":"  public void testAdvanceSingleParentNoChild() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir, newIndexWriterConfig(new MockAnalyzer(random())).setMergePolicy(new LogDocMergePolicy()));\n    Document parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"1\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(parentDoc));\n\n    // Add another doc so scorer is not null\n    parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"2\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    Document childDoc = new Document();\n    childDoc.add(newStringField(\"child\", \"2\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(childDoc, parentDoc));\n\n    // Need single seg:\n    w.forceMerge(1);\n    IndexReader r = w.getReader();\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    Query tq = new TermQuery(new Term(\"child\", \"2\"));\n    BitDocIdSetFilter parentFilter = new BitDocIdSetCachingWrapperFilter(\n                            new QueryWrapperFilter(\n                              new TermQuery(new Term(\"isparent\", \"yes\"))));\n\n    ToParentBlockJoinQuery q = new ToParentBlockJoinQuery(tq, parentFilter, ScoreMode.Avg);\n    Weight weight = s.createNormalizedWeight(q, true);\n    DocIdSetIterator disi = weight.scorer(s.getIndexReader().leaves().get(0), null);\n    assertEquals(2, disi.advance(0));\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testAdvanceSingleParentNoChild() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir, newIndexWriterConfig(new MockAnalyzer(random())).setMergePolicy(new LogDocMergePolicy()));\n    Document parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"1\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(parentDoc));\n\n    // Add another doc so scorer is not null\n    parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"2\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    Document childDoc = new Document();\n    childDoc.add(newStringField(\"child\", \"2\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(childDoc, parentDoc));\n\n    // Need single seg:\n    w.forceMerge(1);\n    IndexReader r = w.getReader();\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    Query tq = new TermQuery(new Term(\"child\", \"2\"));\n    BitDocIdSetFilter parentFilter = new BitDocIdSetCachingWrapperFilter(\n                            new QueryWrapperFilter(\n                              new TermQuery(new Term(\"isparent\", \"yes\"))));\n\n    ToParentBlockJoinQuery q = new ToParentBlockJoinQuery(tq, parentFilter, ScoreMode.Avg);\n    Weight weight = s.createNormalizedWeight(q, PostingsEnum.FLAG_FREQS);\n    DocIdSetIterator disi = weight.scorer(s.getIndexReader().leaves().get(0), null);\n    assertEquals(2, disi.advance(0));\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f4464508ee83288c8c4585b533f9faaa93aa314","date":1435240759,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/join/src/test/org/apache/lucene/search/join/TestBlockJoin#testAdvanceSingleParentNoChild().mjava","pathOld":"lucene/join/src/test/org/apache/lucene/search/join/TestBlockJoin#testAdvanceSingleParentNoChild().mjava","sourceNew":"  public void testAdvanceSingleParentNoChild() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir, newIndexWriterConfig(new MockAnalyzer(random())).setMergePolicy(new LogDocMergePolicy()));\n    Document parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"1\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(parentDoc));\n\n    // Add another doc so scorer is not null\n    parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"2\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    Document childDoc = new Document();\n    childDoc.add(newStringField(\"child\", \"2\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(childDoc, parentDoc));\n\n    // Need single seg:\n    w.forceMerge(1);\n    IndexReader r = w.getReader();\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    Query tq = new TermQuery(new Term(\"child\", \"2\"));\n    BitDocIdSetFilter parentFilter = new BitDocIdSetCachingWrapperFilter(\n                            new QueryWrapperFilter(\n                              new TermQuery(new Term(\"isparent\", \"yes\"))));\n\n    ToParentBlockJoinQuery q = new ToParentBlockJoinQuery(tq, parentFilter, ScoreMode.Avg);\n    Weight weight = s.createNormalizedWeight(q, true);\n    DocIdSetIterator disi = weight.scorer(s.getIndexReader().leaves().get(0));\n    assertEquals(2, disi.advance(0));\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testAdvanceSingleParentNoChild() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir, newIndexWriterConfig(new MockAnalyzer(random())).setMergePolicy(new LogDocMergePolicy()));\n    Document parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"1\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(parentDoc));\n\n    // Add another doc so scorer is not null\n    parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"2\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    Document childDoc = new Document();\n    childDoc.add(newStringField(\"child\", \"2\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(childDoc, parentDoc));\n\n    // Need single seg:\n    w.forceMerge(1);\n    IndexReader r = w.getReader();\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    Query tq = new TermQuery(new Term(\"child\", \"2\"));\n    BitDocIdSetFilter parentFilter = new BitDocIdSetCachingWrapperFilter(\n                            new QueryWrapperFilter(\n                              new TermQuery(new Term(\"isparent\", \"yes\"))));\n\n    ToParentBlockJoinQuery q = new ToParentBlockJoinQuery(tq, parentFilter, ScoreMode.Avg);\n    Weight weight = s.createNormalizedWeight(q, true);\n    DocIdSetIterator disi = weight.scorer(s.getIndexReader().leaves().get(0), null);\n    assertEquals(2, disi.advance(0));\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4b3915945926c0bf7def01b0c504977709d3aed3","date":1436197708,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/join/src/test/org/apache/lucene/search/join/TestBlockJoin#testAdvanceSingleParentNoChild().mjava","pathOld":"lucene/join/src/test/org/apache/lucene/search/join/TestBlockJoin#testAdvanceSingleParentNoChild().mjava","sourceNew":"  public void testAdvanceSingleParentNoChild() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir, newIndexWriterConfig(new MockAnalyzer(random())).setMergePolicy(new LogDocMergePolicy()));\n    Document parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"1\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(parentDoc));\n\n    // Add another doc so scorer is not null\n    parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"2\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    Document childDoc = new Document();\n    childDoc.add(newStringField(\"child\", \"2\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(childDoc, parentDoc));\n\n    // Need single seg:\n    w.forceMerge(1);\n    IndexReader r = w.getReader();\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    Query tq = new TermQuery(new Term(\"child\", \"2\"));\n    BitSetProducer parentFilter = new QueryBitSetProducer(\n                              new TermQuery(new Term(\"isparent\", \"yes\")));\n\n    ToParentBlockJoinQuery q = new ToParentBlockJoinQuery(tq, parentFilter, ScoreMode.Avg);\n    Weight weight = s.createNormalizedWeight(q, true);\n    DocIdSetIterator disi = weight.scorer(s.getIndexReader().leaves().get(0));\n    assertEquals(2, disi.advance(0));\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testAdvanceSingleParentNoChild() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir, newIndexWriterConfig(new MockAnalyzer(random())).setMergePolicy(new LogDocMergePolicy()));\n    Document parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"1\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(parentDoc));\n\n    // Add another doc so scorer is not null\n    parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"2\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    Document childDoc = new Document();\n    childDoc.add(newStringField(\"child\", \"2\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(childDoc, parentDoc));\n\n    // Need single seg:\n    w.forceMerge(1);\n    IndexReader r = w.getReader();\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    Query tq = new TermQuery(new Term(\"child\", \"2\"));\n    BitDocIdSetFilter parentFilter = new BitDocIdSetCachingWrapperFilter(\n                            new QueryWrapperFilter(\n                              new TermQuery(new Term(\"isparent\", \"yes\"))));\n\n    ToParentBlockJoinQuery q = new ToParentBlockJoinQuery(tq, parentFilter, ScoreMode.Avg);\n    Weight weight = s.createNormalizedWeight(q, true);\n    DocIdSetIterator disi = weight.scorer(s.getIndexReader().leaves().get(0));\n    assertEquals(2, disi.advance(0));\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a67f37df79147ed4dd608300c2336c2979db98be","date":1436271524,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/join/src/test/org/apache/lucene/search/join/TestBlockJoin#testAdvanceSingleParentNoChild().mjava","pathOld":"lucene/join/src/test/org/apache/lucene/search/join/TestBlockJoin#testAdvanceSingleParentNoChild().mjava","sourceNew":"  public void testAdvanceSingleParentNoChild() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir, newIndexWriterConfig(new MockAnalyzer(random())).setMergePolicy(new LogDocMergePolicy()));\n    Document parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"1\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(parentDoc));\n\n    // Add another doc so scorer is not null\n    parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"2\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    Document childDoc = new Document();\n    childDoc.add(newStringField(\"child\", \"2\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(childDoc, parentDoc));\n\n    // Need single seg:\n    w.forceMerge(1);\n    IndexReader r = w.getReader();\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    Query tq = new TermQuery(new Term(\"child\", \"2\"));\n    BitSetProducer parentFilter = new QueryBitSetProducer(\n                              new TermQuery(new Term(\"isparent\", \"yes\")));\n    CheckJoinIndex.check(s.getIndexReader(), parentFilter);\n\n    ToParentBlockJoinQuery q = new ToParentBlockJoinQuery(tq, parentFilter, ScoreMode.Avg);\n    Weight weight = s.createNormalizedWeight(q, true);\n    DocIdSetIterator disi = weight.scorer(s.getIndexReader().leaves().get(0));\n    assertEquals(2, disi.advance(0));\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testAdvanceSingleParentNoChild() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir, newIndexWriterConfig(new MockAnalyzer(random())).setMergePolicy(new LogDocMergePolicy()));\n    Document parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"1\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(parentDoc));\n\n    // Add another doc so scorer is not null\n    parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"2\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    Document childDoc = new Document();\n    childDoc.add(newStringField(\"child\", \"2\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(childDoc, parentDoc));\n\n    // Need single seg:\n    w.forceMerge(1);\n    IndexReader r = w.getReader();\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    Query tq = new TermQuery(new Term(\"child\", \"2\"));\n    BitSetProducer parentFilter = new QueryBitSetProducer(\n                              new TermQuery(new Term(\"isparent\", \"yes\")));\n\n    ToParentBlockJoinQuery q = new ToParentBlockJoinQuery(tq, parentFilter, ScoreMode.Avg);\n    Weight weight = s.createNormalizedWeight(q, true);\n    DocIdSetIterator disi = weight.scorer(s.getIndexReader().leaves().get(0));\n    assertEquals(2, disi.advance(0));\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7dd748bb245633a8195281556bb0e68a6ea97d18","date":1449755030,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/join/src/test/org/apache/lucene/search/join/TestBlockJoin#testAdvanceSingleParentNoChild().mjava","pathOld":"lucene/join/src/test/org/apache/lucene/search/join/TestBlockJoin#testAdvanceSingleParentNoChild().mjava","sourceNew":"  public void testAdvanceSingleParentNoChild() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir, newIndexWriterConfig(new MockAnalyzer(random())).setMergePolicy(new LogDocMergePolicy()));\n    Document parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"1\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(parentDoc));\n\n    // Add another doc so scorer is not null\n    parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"2\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    Document childDoc = new Document();\n    childDoc.add(newStringField(\"child\", \"2\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(childDoc, parentDoc));\n\n    // Need single seg:\n    w.forceMerge(1);\n    IndexReader r = w.getReader();\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    Query tq = new TermQuery(new Term(\"child\", \"2\"));\n    BitSetProducer parentFilter = new QueryBitSetProducer(\n                              new TermQuery(new Term(\"isparent\", \"yes\")));\n    CheckJoinIndex.check(s.getIndexReader(), parentFilter);\n\n    ToParentBlockJoinQuery q = new ToParentBlockJoinQuery(tq, parentFilter, ScoreMode.Avg);\n    Weight weight = s.createNormalizedWeight(q, true);\n    Scorer sc = weight.scorer(s.getIndexReader().leaves().get(0));\n    assertEquals(2, sc.iterator().advance(0));\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testAdvanceSingleParentNoChild() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir, newIndexWriterConfig(new MockAnalyzer(random())).setMergePolicy(new LogDocMergePolicy()));\n    Document parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"1\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(parentDoc));\n\n    // Add another doc so scorer is not null\n    parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"2\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    Document childDoc = new Document();\n    childDoc.add(newStringField(\"child\", \"2\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(childDoc, parentDoc));\n\n    // Need single seg:\n    w.forceMerge(1);\n    IndexReader r = w.getReader();\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    Query tq = new TermQuery(new Term(\"child\", \"2\"));\n    BitSetProducer parentFilter = new QueryBitSetProducer(\n                              new TermQuery(new Term(\"isparent\", \"yes\")));\n    CheckJoinIndex.check(s.getIndexReader(), parentFilter);\n\n    ToParentBlockJoinQuery q = new ToParentBlockJoinQuery(tq, parentFilter, ScoreMode.Avg);\n    Weight weight = s.createNormalizedWeight(q, true);\n    DocIdSetIterator disi = weight.scorer(s.getIndexReader().leaves().get(0));\n    assertEquals(2, disi.advance(0));\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9fc47cb7b4346802411bb432f501ed0673d7119e","date":1512640179,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/join/src/test/org/apache/lucene/search/join/TestBlockJoin#testAdvanceSingleParentNoChild().mjava","pathOld":"lucene/join/src/test/org/apache/lucene/search/join/TestBlockJoin#testAdvanceSingleParentNoChild().mjava","sourceNew":"  public void testAdvanceSingleParentNoChild() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir, newIndexWriterConfig(new MockAnalyzer(random())).setMergePolicy(new LogDocMergePolicy()));\n    Document parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"1\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(parentDoc));\n\n    // Add another doc so scorer is not null\n    parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"2\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    Document childDoc = new Document();\n    childDoc.add(newStringField(\"child\", \"2\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(childDoc, parentDoc));\n\n    // Need single seg:\n    w.forceMerge(1);\n    IndexReader r = w.getReader();\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    Query tq = new TermQuery(new Term(\"child\", \"2\"));\n    BitSetProducer parentFilter = new QueryBitSetProducer(\n                              new TermQuery(new Term(\"isparent\", \"yes\")));\n    CheckJoinIndex.check(s.getIndexReader(), parentFilter);\n\n    ToParentBlockJoinQuery q = new ToParentBlockJoinQuery(tq, parentFilter, ScoreMode.Avg);\n    Weight weight = s.createNormalizedWeight(q, org.apache.lucene.search.ScoreMode.COMPLETE);\n    Scorer sc = weight.scorer(s.getIndexReader().leaves().get(0));\n    assertEquals(2, sc.iterator().advance(0));\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testAdvanceSingleParentNoChild() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir, newIndexWriterConfig(new MockAnalyzer(random())).setMergePolicy(new LogDocMergePolicy()));\n    Document parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"1\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(parentDoc));\n\n    // Add another doc so scorer is not null\n    parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"2\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    Document childDoc = new Document();\n    childDoc.add(newStringField(\"child\", \"2\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(childDoc, parentDoc));\n\n    // Need single seg:\n    w.forceMerge(1);\n    IndexReader r = w.getReader();\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    Query tq = new TermQuery(new Term(\"child\", \"2\"));\n    BitSetProducer parentFilter = new QueryBitSetProducer(\n                              new TermQuery(new Term(\"isparent\", \"yes\")));\n    CheckJoinIndex.check(s.getIndexReader(), parentFilter);\n\n    ToParentBlockJoinQuery q = new ToParentBlockJoinQuery(tq, parentFilter, ScoreMode.Avg);\n    Weight weight = s.createNormalizedWeight(q, true);\n    Scorer sc = weight.scorer(s.getIndexReader().leaves().get(0));\n    assertEquals(2, sc.iterator().advance(0));\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"417142ff08fda9cf0b72d5133e63097a166c6458","date":1512729693,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/join/src/test/org/apache/lucene/search/join/TestBlockJoin#testAdvanceSingleParentNoChild().mjava","pathOld":"lucene/join/src/test/org/apache/lucene/search/join/TestBlockJoin#testAdvanceSingleParentNoChild().mjava","sourceNew":"  public void testAdvanceSingleParentNoChild() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir, newIndexWriterConfig(new MockAnalyzer(random())).setMergePolicy(new LogDocMergePolicy()));\n    Document parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"1\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(parentDoc));\n\n    // Add another doc so scorer is not null\n    parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"2\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    Document childDoc = new Document();\n    childDoc.add(newStringField(\"child\", \"2\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(childDoc, parentDoc));\n\n    // Need single seg:\n    w.forceMerge(1);\n    IndexReader r = w.getReader();\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    Query tq = new TermQuery(new Term(\"child\", \"2\"));\n    BitSetProducer parentFilter = new QueryBitSetProducer(\n                              new TermQuery(new Term(\"isparent\", \"yes\")));\n    CheckJoinIndex.check(s.getIndexReader(), parentFilter);\n\n    ToParentBlockJoinQuery q = new ToParentBlockJoinQuery(tq, parentFilter, ScoreMode.Avg);\n    Weight weight = s.createNormalizedWeight(q, org.apache.lucene.search.ScoreMode.COMPLETE);\n    Scorer sc = weight.scorer(s.getIndexReader().leaves().get(0));\n    assertEquals(2, sc.iterator().advance(0));\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testAdvanceSingleParentNoChild() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir, newIndexWriterConfig(new MockAnalyzer(random())).setMergePolicy(new LogDocMergePolicy()));\n    Document parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"1\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(parentDoc));\n\n    // Add another doc so scorer is not null\n    parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"2\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    Document childDoc = new Document();\n    childDoc.add(newStringField(\"child\", \"2\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(childDoc, parentDoc));\n\n    // Need single seg:\n    w.forceMerge(1);\n    IndexReader r = w.getReader();\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    Query tq = new TermQuery(new Term(\"child\", \"2\"));\n    BitSetProducer parentFilter = new QueryBitSetProducer(\n                              new TermQuery(new Term(\"isparent\", \"yes\")));\n    CheckJoinIndex.check(s.getIndexReader(), parentFilter);\n\n    ToParentBlockJoinQuery q = new ToParentBlockJoinQuery(tq, parentFilter, ScoreMode.Avg);\n    Weight weight = s.createNormalizedWeight(q, true);\n    Scorer sc = weight.scorer(s.getIndexReader().leaves().get(0));\n    assertEquals(2, sc.iterator().advance(0));\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"475584d5e08a22ad3fc7babefe006d77bc744567","date":1523282824,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/join/src/test/org/apache/lucene/search/join/TestBlockJoin#testAdvanceSingleParentNoChild().mjava","pathOld":"lucene/join/src/test/org/apache/lucene/search/join/TestBlockJoin#testAdvanceSingleParentNoChild().mjava","sourceNew":"  public void testAdvanceSingleParentNoChild() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir, newIndexWriterConfig(new MockAnalyzer(random())).setMergePolicy(new LogDocMergePolicy()));\n    Document parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"1\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(parentDoc));\n\n    // Add another doc so scorer is not null\n    parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"2\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    Document childDoc = new Document();\n    childDoc.add(newStringField(\"child\", \"2\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(childDoc, parentDoc));\n\n    // Need single seg:\n    w.forceMerge(1);\n    IndexReader r = w.getReader();\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    Query tq = new TermQuery(new Term(\"child\", \"2\"));\n    BitSetProducer parentFilter = new QueryBitSetProducer(\n                              new TermQuery(new Term(\"isparent\", \"yes\")));\n    CheckJoinIndex.check(s.getIndexReader(), parentFilter);\n\n    ToParentBlockJoinQuery q = new ToParentBlockJoinQuery(tq, parentFilter, ScoreMode.Avg);\n    Weight weight = s.createWeight(s.rewrite(q), org.apache.lucene.search.ScoreMode.COMPLETE, 1);\n    Scorer sc = weight.scorer(s.getIndexReader().leaves().get(0));\n    assertEquals(2, sc.iterator().advance(0));\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testAdvanceSingleParentNoChild() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir, newIndexWriterConfig(new MockAnalyzer(random())).setMergePolicy(new LogDocMergePolicy()));\n    Document parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"1\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(parentDoc));\n\n    // Add another doc so scorer is not null\n    parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"2\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    Document childDoc = new Document();\n    childDoc.add(newStringField(\"child\", \"2\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(childDoc, parentDoc));\n\n    // Need single seg:\n    w.forceMerge(1);\n    IndexReader r = w.getReader();\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    Query tq = new TermQuery(new Term(\"child\", \"2\"));\n    BitSetProducer parentFilter = new QueryBitSetProducer(\n                              new TermQuery(new Term(\"isparent\", \"yes\")));\n    CheckJoinIndex.check(s.getIndexReader(), parentFilter);\n\n    ToParentBlockJoinQuery q = new ToParentBlockJoinQuery(tq, parentFilter, ScoreMode.Avg);\n    Weight weight = s.createNormalizedWeight(q, org.apache.lucene.search.ScoreMode.COMPLETE);\n    Scorer sc = weight.scorer(s.getIndexReader().leaves().get(0));\n    assertEquals(2, sc.iterator().advance(0));\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d58e44159788900f4a2113b84463dc3fbbf80f20","date":1523319203,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/join/src/test/org/apache/lucene/search/join/TestBlockJoin#testAdvanceSingleParentNoChild().mjava","pathOld":"lucene/join/src/test/org/apache/lucene/search/join/TestBlockJoin#testAdvanceSingleParentNoChild().mjava","sourceNew":"  public void testAdvanceSingleParentNoChild() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir, newIndexWriterConfig(new MockAnalyzer(random())).setMergePolicy(new LogDocMergePolicy()));\n    Document parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"1\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(parentDoc));\n\n    // Add another doc so scorer is not null\n    parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"2\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    Document childDoc = new Document();\n    childDoc.add(newStringField(\"child\", \"2\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(childDoc, parentDoc));\n\n    // Need single seg:\n    w.forceMerge(1);\n    IndexReader r = w.getReader();\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    Query tq = new TermQuery(new Term(\"child\", \"2\"));\n    BitSetProducer parentFilter = new QueryBitSetProducer(\n                              new TermQuery(new Term(\"isparent\", \"yes\")));\n    CheckJoinIndex.check(s.getIndexReader(), parentFilter);\n\n    ToParentBlockJoinQuery q = new ToParentBlockJoinQuery(tq, parentFilter, ScoreMode.Avg);\n    Weight weight = s.createWeight(s.rewrite(q), org.apache.lucene.search.ScoreMode.COMPLETE, 1);\n    Scorer sc = weight.scorer(s.getIndexReader().leaves().get(0));\n    assertEquals(2, sc.iterator().advance(0));\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testAdvanceSingleParentNoChild() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir, newIndexWriterConfig(new MockAnalyzer(random())).setMergePolicy(new LogDocMergePolicy()));\n    Document parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"1\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(parentDoc));\n\n    // Add another doc so scorer is not null\n    parentDoc = new Document();\n    parentDoc.add(newStringField(\"parent\", \"2\", Field.Store.NO));\n    parentDoc.add(newStringField(\"isparent\", \"yes\", Field.Store.NO));\n    Document childDoc = new Document();\n    childDoc.add(newStringField(\"child\", \"2\", Field.Store.NO));\n    w.addDocuments(Arrays.asList(childDoc, parentDoc));\n\n    // Need single seg:\n    w.forceMerge(1);\n    IndexReader r = w.getReader();\n    w.close();\n    IndexSearcher s = newSearcher(r);\n    Query tq = new TermQuery(new Term(\"child\", \"2\"));\n    BitSetProducer parentFilter = new QueryBitSetProducer(\n                              new TermQuery(new Term(\"isparent\", \"yes\")));\n    CheckJoinIndex.check(s.getIndexReader(), parentFilter);\n\n    ToParentBlockJoinQuery q = new ToParentBlockJoinQuery(tq, parentFilter, ScoreMode.Avg);\n    Weight weight = s.createNormalizedWeight(q, org.apache.lucene.search.ScoreMode.COMPLETE);\n    Scorer sc = weight.scorer(s.getIndexReader().leaves().get(0));\n    assertEquals(2, sc.iterator().advance(0));\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6a47d642ab24da1a811adce4bda9cc52c520ca13":["954e59be3da8dc1b046646ad7af4b466852009d3"],"fb17639909a369c1e64866842e5c213440acc17e":["781239fc84d36be12b84e4d3e2618f5f07a182e3"],"475584d5e08a22ad3fc7babefe006d77bc744567":["417142ff08fda9cf0b72d5133e63097a166c6458"],"b012914a8110b2ff1d075ed1ef72aa57084d4897":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"a67f37df79147ed4dd608300c2336c2979db98be":["4b3915945926c0bf7def01b0c504977709d3aed3"],"b05c56a41b733e02a189c48895922b5bd8c7f3d1":["4c5ae929ce8aa0c4856f0d6bfd4c196bc2d3eb9c","d743dbdc40bef0a47a5d54d99623ef0c2eb5923e"],"c1fe8ee1a5a1ef00a9c4793ec26f17bd90342198":["4c5ae929ce8aa0c4856f0d6bfd4c196bc2d3eb9c","d743dbdc40bef0a47a5d54d99623ef0c2eb5923e"],"4b3915945926c0bf7def01b0c504977709d3aed3":["0f4464508ee83288c8c4585b533f9faaa93aa314"],"04f07771a2a7dd3a395700665ed839c3dae2def2":["77855215e331ce146763531cb9b0c050726f6ae5"],"d58e44159788900f4a2113b84463dc3fbbf80f20":["417142ff08fda9cf0b72d5133e63097a166c6458","475584d5e08a22ad3fc7babefe006d77bc744567"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"49a8cbd66bc94e18d7b9087e42dbc6cc0ee0c161":["d743dbdc40bef0a47a5d54d99623ef0c2eb5923e"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["acf00221f44c5f08ccea014f2492b53af15ecd66"],"77855215e331ce146763531cb9b0c050726f6ae5":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"9fc47cb7b4346802411bb432f501ed0673d7119e":["7dd748bb245633a8195281556bb0e68a6ea97d18"],"2e18c86f811939bfa8cd24046c96ed026f2e9b34":["49a8cbd66bc94e18d7b9087e42dbc6cc0ee0c161"],"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"781239fc84d36be12b84e4d3e2618f5f07a182e3":["b012914a8110b2ff1d075ed1ef72aa57084d4897"],"4c5ae929ce8aa0c4856f0d6bfd4c196bc2d3eb9c":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"954e59be3da8dc1b046646ad7af4b466852009d3":["fb17639909a369c1e64866842e5c213440acc17e"],"417142ff08fda9cf0b72d5133e63097a166c6458":["7dd748bb245633a8195281556bb0e68a6ea97d18","9fc47cb7b4346802411bb432f501ed0673d7119e"],"0f4464508ee83288c8c4585b533f9faaa93aa314":["6a47d642ab24da1a811adce4bda9cc52c520ca13"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"d743dbdc40bef0a47a5d54d99623ef0c2eb5923e":["4c5ae929ce8aa0c4856f0d6bfd4c196bc2d3eb9c"],"7dd748bb245633a8195281556bb0e68a6ea97d18":["a67f37df79147ed4dd608300c2336c2979db98be"],"acf00221f44c5f08ccea014f2492b53af15ecd66":["49a8cbd66bc94e18d7b9087e42dbc6cc0ee0c161","2e18c86f811939bfa8cd24046c96ed026f2e9b34"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d58e44159788900f4a2113b84463dc3fbbf80f20"]},"commit2Childs":{"6a47d642ab24da1a811adce4bda9cc52c520ca13":["0f4464508ee83288c8c4585b533f9faaa93aa314"],"fb17639909a369c1e64866842e5c213440acc17e":["954e59be3da8dc1b046646ad7af4b466852009d3"],"475584d5e08a22ad3fc7babefe006d77bc744567":["d58e44159788900f4a2113b84463dc3fbbf80f20"],"b012914a8110b2ff1d075ed1ef72aa57084d4897":["781239fc84d36be12b84e4d3e2618f5f07a182e3"],"a67f37df79147ed4dd608300c2336c2979db98be":["7dd748bb245633a8195281556bb0e68a6ea97d18"],"b05c56a41b733e02a189c48895922b5bd8c7f3d1":[],"c1fe8ee1a5a1ef00a9c4793ec26f17bd90342198":[],"4b3915945926c0bf7def01b0c504977709d3aed3":["a67f37df79147ed4dd608300c2336c2979db98be"],"04f07771a2a7dd3a395700665ed839c3dae2def2":["4c5ae929ce8aa0c4856f0d6bfd4c196bc2d3eb9c"],"d58e44159788900f4a2113b84463dc3fbbf80f20":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"49a8cbd66bc94e18d7b9087e42dbc6cc0ee0c161":["2e18c86f811939bfa8cd24046c96ed026f2e9b34","acf00221f44c5f08ccea014f2492b53af15ecd66"],"77855215e331ce146763531cb9b0c050726f6ae5":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"9fc47cb7b4346802411bb432f501ed0673d7119e":["417142ff08fda9cf0b72d5133e63097a166c6458"],"2e18c86f811939bfa8cd24046c96ed026f2e9b34":["acf00221f44c5f08ccea014f2492b53af15ecd66"],"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"781239fc84d36be12b84e4d3e2618f5f07a182e3":["fb17639909a369c1e64866842e5c213440acc17e"],"4c5ae929ce8aa0c4856f0d6bfd4c196bc2d3eb9c":["b05c56a41b733e02a189c48895922b5bd8c7f3d1","c1fe8ee1a5a1ef00a9c4793ec26f17bd90342198","d743dbdc40bef0a47a5d54d99623ef0c2eb5923e"],"954e59be3da8dc1b046646ad7af4b466852009d3":["6a47d642ab24da1a811adce4bda9cc52c520ca13"],"417142ff08fda9cf0b72d5133e63097a166c6458":["475584d5e08a22ad3fc7babefe006d77bc744567","d58e44159788900f4a2113b84463dc3fbbf80f20"],"0f4464508ee83288c8c4585b533f9faaa93aa314":["4b3915945926c0bf7def01b0c504977709d3aed3"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["77855215e331ce146763531cb9b0c050726f6ae5"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["b012914a8110b2ff1d075ed1ef72aa57084d4897"],"d743dbdc40bef0a47a5d54d99623ef0c2eb5923e":["b05c56a41b733e02a189c48895922b5bd8c7f3d1","c1fe8ee1a5a1ef00a9c4793ec26f17bd90342198","49a8cbd66bc94e18d7b9087e42dbc6cc0ee0c161"],"acf00221f44c5f08ccea014f2492b53af15ecd66":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"7dd748bb245633a8195281556bb0e68a6ea97d18":["9fc47cb7b4346802411bb432f501ed0673d7119e","417142ff08fda9cf0b72d5133e63097a166c6458"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b05c56a41b733e02a189c48895922b5bd8c7f3d1","c1fe8ee1a5a1ef00a9c4793ec26f17bd90342198","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}