{"path":"lucene/analysis/common/src/java/org/apache/lucene/analysis/miscellaneous/RemoveDuplicatesTokenFilter#incrementToken().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/miscellaneous/RemoveDuplicatesTokenFilter#incrementToken().mjava","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/miscellaneous/RemoveDuplicatesTokenFilter#incrementToken().mjava","sourceNew":"  /**\n   * {@inheritDoc}\n   */\n  @Override\n  public boolean incrementToken() throws IOException {\n    while (input.incrementToken()) {\n      final char term[] = termAttribute.buffer();\n      final int length = termAttribute.length();\n      final int posIncrement = posIncAttribute.getPositionIncrement();\n      \n      if (posIncrement > 0) {\n        previous.clear();\n      }\n      \n      boolean duplicate = (posIncrement == 0 && previous.contains(term, 0, length));\n      \n      // clone the term, and add to the set of seen terms.\n      char saved[] = new char[length];\n      System.arraycopy(term, 0, saved, 0, length);\n      previous.add(saved);\n      \n      if (!duplicate) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n","sourceOld":"  /**\n   * {@inheritDoc}\n   */\n  @Override\n  public boolean incrementToken() throws IOException {\n    while (input.incrementToken()) {\n      final char term[] = termAttribute.buffer();\n      final int length = termAttribute.length();\n      final int posIncrement = posIncAttribute.getPositionIncrement();\n      \n      if (posIncrement > 0) {\n        previous.clear();\n      }\n      \n      boolean duplicate = (posIncrement == 0 && previous.contains(term, 0, length));\n      \n      // clone the term, and add to the set of seen terms.\n      char saved[] = new char[length];\n      System.arraycopy(term, 0, saved, 0, length);\n      previous.add(saved);\n      \n      if (!duplicate) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a80a37ae73034270b57bfd57a44f8fcadc952fa0","date":1515440719,"type":3,"author":"Christine Poerschke","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/miscellaneous/RemoveDuplicatesTokenFilter#incrementToken().mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/miscellaneous/RemoveDuplicatesTokenFilter#incrementToken().mjava","sourceNew":"  @Override\n  public boolean incrementToken() throws IOException {\n    while (input.incrementToken()) {\n      final char term[] = termAttribute.buffer();\n      final int length = termAttribute.length();\n      final int posIncrement = posIncAttribute.getPositionIncrement();\n      \n      if (posIncrement > 0) {\n        previous.clear();\n      }\n      \n      boolean duplicate = (posIncrement == 0 && previous.contains(term, 0, length));\n      \n      // clone the term, and add to the set of seen terms.\n      char saved[] = new char[length];\n      System.arraycopy(term, 0, saved, 0, length);\n      previous.add(saved);\n      \n      if (!duplicate) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n","sourceOld":"  /**\n   * {@inheritDoc}\n   */\n  @Override\n  public boolean incrementToken() throws IOException {\n    while (input.incrementToken()) {\n      final char term[] = termAttribute.buffer();\n      final int length = termAttribute.length();\n      final int posIncrement = posIncAttribute.getPositionIncrement();\n      \n      if (posIncrement > 0) {\n        previous.clear();\n      }\n      \n      boolean duplicate = (posIncrement == 0 && previous.contains(term, 0, length));\n      \n      // clone the term, and add to the set of seen terms.\n      char saved[] = new char[length];\n      System.arraycopy(term, 0, saved, 0, length);\n      previous.add(saved);\n      \n      if (!duplicate) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b94236357aaa22b76c10629851fe4e376e0cea82","date":1516710914,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/miscellaneous/RemoveDuplicatesTokenFilter#incrementToken().mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/miscellaneous/RemoveDuplicatesTokenFilter#incrementToken().mjava","sourceNew":"  @Override\n  public boolean incrementToken() throws IOException {\n    while (input.incrementToken()) {\n      final char term[] = termAttribute.buffer();\n      final int length = termAttribute.length();\n      final int posIncrement = posIncAttribute.getPositionIncrement();\n      \n      if (posIncrement > 0) {\n        previous.clear();\n      }\n      \n      boolean duplicate = (posIncrement == 0 && previous.contains(term, 0, length));\n      \n      // clone the term, and add to the set of seen terms.\n      char saved[] = new char[length];\n      System.arraycopy(term, 0, saved, 0, length);\n      previous.add(saved);\n      \n      if (!duplicate) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n","sourceOld":"  /**\n   * {@inheritDoc}\n   */\n  @Override\n  public boolean incrementToken() throws IOException {\n    while (input.incrementToken()) {\n      final char term[] = termAttribute.buffer();\n      final int length = termAttribute.length();\n      final int posIncrement = posIncAttribute.getPositionIncrement();\n      \n      if (posIncrement > 0) {\n        previous.clear();\n      }\n      \n      boolean duplicate = (posIncrement == 0 && previous.contains(term, 0, length));\n      \n      // clone the term, and add to the set of seen terms.\n      char saved[] = new char[length];\n      System.arraycopy(term, 0, saved, 0, length);\n      previous.add(saved);\n      \n      if (!duplicate) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b94236357aaa22b76c10629851fe4e376e0cea82":["b89678825b68eccaf09e6ab71675fc0b0af1e099","a80a37ae73034270b57bfd57a44f8fcadc952fa0"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a80a37ae73034270b57bfd57a44f8fcadc952fa0":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b94236357aaa22b76c10629851fe4e376e0cea82"]},"commit2Childs":{"b94236357aaa22b76c10629851fe4e376e0cea82":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["b94236357aaa22b76c10629851fe4e376e0cea82","a80a37ae73034270b57bfd57a44f8fcadc952fa0"],"a80a37ae73034270b57bfd57a44f8fcadc952fa0":["b94236357aaa22b76c10629851fe4e376e0cea82"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}