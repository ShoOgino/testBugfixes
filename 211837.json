{"path":"lucene/core/src/java/org/apache/lucene/codecs/lucene3x/Lucene3xTermVectorsReader.TVTermsEnum#reset(int,long,boolean).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene3x/Lucene3xTermVectorsReader.TVTermsEnum#reset(int,long,boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/codecs/lucene3x/Lucene3xTermVectorsReader.TVTermsEnum#reset(int,long,boolean).mjava","sourceNew":"    public void reset(int numTerms, long tvfFPStart, boolean unicodeSortOrder) throws IOException {\n      this.numTerms = numTerms;\n      currentTerm = -1;\n      tvf.seek(tvfFPStart);\n      final byte bits = tvf.readByte();\n      storePositions = (bits & STORE_POSITIONS_WITH_TERMVECTOR) != 0;\n      storeOffsets = (bits & STORE_OFFSET_WITH_TERMVECTOR) != 0;\n      this.unicodeSortOrder = unicodeSortOrder;\n      readVectors();\n      if (unicodeSortOrder) {\n        Arrays.sort(termAndPostings, new Comparator<TermAndPostings>() {\n          public int compare(TermAndPostings left, TermAndPostings right) {\n            return left.term.compareTo(right.term);\n          }\n        });\n      }\n    }\n\n","sourceOld":"    public void reset(int numTerms, long tvfFPStart, boolean unicodeSortOrder) throws IOException {\n      this.numTerms = numTerms;\n      currentTerm = -1;\n      tvf.seek(tvfFPStart);\n      final byte bits = tvf.readByte();\n      storePositions = (bits & STORE_POSITIONS_WITH_TERMVECTOR) != 0;\n      storeOffsets = (bits & STORE_OFFSET_WITH_TERMVECTOR) != 0;\n      this.unicodeSortOrder = unicodeSortOrder;\n      readVectors();\n      if (unicodeSortOrder) {\n        Arrays.sort(termAndPostings, new Comparator<TermAndPostings>() {\n          public int compare(TermAndPostings left, TermAndPostings right) {\n            return left.term.compareTo(right.term);\n          }\n        });\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"57ae3024996ccdb3c36c42cb890e1efb37df4ce8","date":1338343651,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene3x/Lucene3xTermVectorsReader.TVTermsEnum#reset(int,long,boolean).mjava","sourceNew":null,"sourceOld":"    public void reset(int numTerms, long tvfFPStart, boolean unicodeSortOrder) throws IOException {\n      this.numTerms = numTerms;\n      currentTerm = -1;\n      tvf.seek(tvfFPStart);\n      final byte bits = tvf.readByte();\n      storePositions = (bits & STORE_POSITIONS_WITH_TERMVECTOR) != 0;\n      storeOffsets = (bits & STORE_OFFSET_WITH_TERMVECTOR) != 0;\n      this.unicodeSortOrder = unicodeSortOrder;\n      readVectors();\n      if (unicodeSortOrder) {\n        Arrays.sort(termAndPostings, new Comparator<TermAndPostings>() {\n          public int compare(TermAndPostings left, TermAndPostings right) {\n            return left.term.compareTo(right.term);\n          }\n        });\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"57ae3024996ccdb3c36c42cb890e1efb37df4ce8":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["57ae3024996ccdb3c36c42cb890e1efb37df4ce8"]},"commit2Childs":{"57ae3024996ccdb3c36c42cb890e1efb37df4ce8":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["57ae3024996ccdb3c36c42cb890e1efb37df4ce8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}