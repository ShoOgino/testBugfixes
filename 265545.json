{"path":"lucene/test-framework/src/java/org/apache/lucene/codecs/asserting/AssertingStoredFieldsFormat.AssertingStoredFieldsWriter#finish(FieldInfos,int).mjava","commits":[{"id":"ef2ba5d473c74ab22ed3b6b2eef670c690b30e3c","date":1357760077,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/asserting/AssertingStoredFieldsFormat.AssertingStoredFieldsWriter#finish(FieldInfos,int).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public void finish(FieldInfos fis, int numDocs) throws IOException {\n      in.finish(fis, numDocs);\n      assert fieldCount == 0;\n      assert numDocs == numWritten;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fc7a7bb1aa79cf53564793bb5ffa270250c679da","date":1357817084,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/asserting/AssertingStoredFieldsFormat.AssertingStoredFieldsWriter#finish(FieldInfos,int).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/asserting/AssertingStoredFieldsFormat.AssertingStoredFieldsWriter#finish(FieldInfos,int).mjava","sourceNew":"    @Override\n    public void finish(FieldInfos fis, int numDocs) throws IOException {\n      assert docStatus == (numDocs > 0 ? Status.FINISHED : Status.UNDEFINED);\n      in.finish(fis, numDocs);\n      assert fieldCount == 0;\n      assert numDocs == numWritten;\n    }\n\n","sourceOld":"    @Override\n    public void finish(FieldInfos fis, int numDocs) throws IOException {\n      in.finish(fis, numDocs);\n      assert fieldCount == 0;\n      assert numDocs == numWritten;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4e6354dd7c71fe122926fc53d7d29f715b1283db","date":1357915185,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/asserting/AssertingStoredFieldsFormat.AssertingStoredFieldsWriter#finish(FieldInfos,int).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public void finish(FieldInfos fis, int numDocs) throws IOException {\n      assert docStatus == (numDocs > 0 ? Status.FINISHED : Status.UNDEFINED);\n      in.finish(fis, numDocs);\n      assert fieldCount == 0;\n      assert numDocs == numWritten;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"52c7e49be259508735752fba88085255014a6ecf","date":1398706273,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/asserting/AssertingStoredFieldsFormat.AssertingStoredFieldsWriter#finish(FieldInfos,int).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/asserting/AssertingStoredFieldsFormat.AssertingStoredFieldsWriter#finish(FieldInfos,int).mjava","sourceNew":"    @Override\n    public void finish(FieldInfos fis, int numDocs) throws IOException {\n      assert docStatus == (numDocs > 0 ? Status.FINISHED : Status.UNDEFINED);\n      in.finish(fis, numDocs);\n      assert numDocs == numWritten;\n    }\n\n","sourceOld":"    @Override\n    public void finish(FieldInfos fis, int numDocs) throws IOException {\n      assert docStatus == (numDocs > 0 ? Status.FINISHED : Status.UNDEFINED);\n      in.finish(fis, numDocs);\n      assert fieldCount == 0;\n      assert numDocs == numWritten;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3394716f52b34ab259ad5247e7595d9f9db6e935","date":1398791921,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/asserting/AssertingStoredFieldsFormat.AssertingStoredFieldsWriter#finish(FieldInfos,int).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/asserting/AssertingStoredFieldsFormat.AssertingStoredFieldsWriter#finish(FieldInfos,int).mjava","sourceNew":"    @Override\n    public void finish(FieldInfos fis, int numDocs) throws IOException {\n      assert docStatus == (numDocs > 0 ? Status.FINISHED : Status.UNDEFINED);\n      in.finish(fis, numDocs);\n      assert numDocs == numWritten;\n    }\n\n","sourceOld":"    @Override\n    public void finish(FieldInfos fis, int numDocs) throws IOException {\n      assert docStatus == (numDocs > 0 ? Status.FINISHED : Status.UNDEFINED);\n      in.finish(fis, numDocs);\n      assert fieldCount == 0;\n      assert numDocs == numWritten;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c0cd85fde84cb318b4dc97710dcf15e2959a1bbe","date":1398844771,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/asserting/AssertingStoredFieldsFormat.AssertingStoredFieldsWriter#finish(FieldInfos,int).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/asserting/AssertingStoredFieldsFormat.AssertingStoredFieldsWriter#finish(FieldInfos,int).mjava","sourceNew":"    @Override\n    public void finish(FieldInfos fis, int numDocs) throws IOException {\n      assert docStatus == (numDocs > 0 ? Status.FINISHED : Status.UNDEFINED);\n      in.finish(fis, numDocs);\n      assert numDocs == numWritten;\n    }\n\n","sourceOld":"    @Override\n    public void finish(FieldInfos fis, int numDocs) throws IOException {\n      assert docStatus == (numDocs > 0 ? Status.FINISHED : Status.UNDEFINED);\n      in.finish(fis, numDocs);\n      assert fieldCount == 0;\n      assert numDocs == numWritten;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3394716f52b34ab259ad5247e7595d9f9db6e935":["fc7a7bb1aa79cf53564793bb5ffa270250c679da","52c7e49be259508735752fba88085255014a6ecf"],"c0cd85fde84cb318b4dc97710dcf15e2959a1bbe":["fc7a7bb1aa79cf53564793bb5ffa270250c679da","3394716f52b34ab259ad5247e7595d9f9db6e935"],"fc7a7bb1aa79cf53564793bb5ffa270250c679da":["ef2ba5d473c74ab22ed3b6b2eef670c690b30e3c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"52c7e49be259508735752fba88085255014a6ecf":["fc7a7bb1aa79cf53564793bb5ffa270250c679da"],"4e6354dd7c71fe122926fc53d7d29f715b1283db":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","fc7a7bb1aa79cf53564793bb5ffa270250c679da"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3394716f52b34ab259ad5247e7595d9f9db6e935"],"ef2ba5d473c74ab22ed3b6b2eef670c690b30e3c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"3394716f52b34ab259ad5247e7595d9f9db6e935":["c0cd85fde84cb318b4dc97710dcf15e2959a1bbe","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c0cd85fde84cb318b4dc97710dcf15e2959a1bbe":[],"fc7a7bb1aa79cf53564793bb5ffa270250c679da":["3394716f52b34ab259ad5247e7595d9f9db6e935","c0cd85fde84cb318b4dc97710dcf15e2959a1bbe","52c7e49be259508735752fba88085255014a6ecf","4e6354dd7c71fe122926fc53d7d29f715b1283db"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4e6354dd7c71fe122926fc53d7d29f715b1283db","ef2ba5d473c74ab22ed3b6b2eef670c690b30e3c"],"52c7e49be259508735752fba88085255014a6ecf":["3394716f52b34ab259ad5247e7595d9f9db6e935"],"4e6354dd7c71fe122926fc53d7d29f715b1283db":[],"ef2ba5d473c74ab22ed3b6b2eef670c690b30e3c":["fc7a7bb1aa79cf53564793bb5ffa270250c679da"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c0cd85fde84cb318b4dc97710dcf15e2959a1bbe","4e6354dd7c71fe122926fc53d7d29f715b1283db","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}