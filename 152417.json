{"path":"solr/core/src/test/org/apache/solr/core/TestCoreDiscovery#testCoreDirCantRead().mjava","commits":[{"id":"429eefa8bf427c2fbc5d85905fea54b2f76081f5","date":1409938294,"type":0,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestCoreDiscovery#testCoreDirCantRead().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testCoreDirCantRead() throws Exception {\n    File coreDir = solrHomeDirectory;\n    setMeUp(coreDir.getAbsolutePath());\n    addCoreWithProps(makeCorePropFile(\"core1\", false, true),\n        new File(coreDir, \"core1\" + File.separator + CorePropertiesLocator.PROPERTIES_FILENAME));\n\n    // Insure that another core is opened successfully\n    addCoreWithProps(makeCorePropFile(\"core2\", false, false, \"dataDir=core2\"),\n        new File(coreDir, \"core2\" + File.separator + CorePropertiesLocator.PROPERTIES_FILENAME));\n\n    File toSet = new File(coreDir, \"core1\");\n    toSet.setReadable(false, false);\n    CoreContainer cc = init();\n    try (SolrCore core1 = cc.getCore(\"core1\");\n         SolrCore core2 = cc.getCore(\"core2\")) {\n      assertNull(core1);\n      assertNotNull(core2);\n    } finally {\n      cc.shutdown();\n    }\n    // So things can be cleaned up by the framework!\n    toSet.setReadable(true, false);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c52212005e468bcee3f7dd2bd5319cd1ec0d9ce9","date":1410089048,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestCoreDiscovery#testCoreDirCantRead().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestCoreDiscovery#testCoreDirCantRead().mjava","sourceNew":"  @Test\n  public void testCoreDirCantRead() throws Exception {\n    File coreDir = solrHomeDirectory;\n    setMeUp(coreDir.getAbsolutePath());\n    addCoreWithProps(makeCorePropFile(\"core1\", false, true),\n        new File(coreDir, \"core1\" + File.separator + CorePropertiesLocator.PROPERTIES_FILENAME));\n\n    // Insure that another core is opened successfully\n    addCoreWithProps(makeCorePropFile(\"core2\", false, false, \"dataDir=core2\"),\n        new File(coreDir, \"core2\" + File.separator + CorePropertiesLocator.PROPERTIES_FILENAME));\n\n    File toSet = new File(coreDir, \"core1\");\n    assumeTrue(\"Cannot make \" + toSet + \" non-readable. Test aborted.\", toSet.setReadable(false, false));\n    CoreContainer cc = init();\n    try (SolrCore core1 = cc.getCore(\"core1\");\n         SolrCore core2 = cc.getCore(\"core2\")) {\n      assertNull(core1);\n      assertNotNull(core2);\n    } finally {\n      cc.shutdown();\n    }\n    // So things can be cleaned up by the framework!\n    toSet.setReadable(true, false);\n  }\n\n","sourceOld":"  @Test\n  public void testCoreDirCantRead() throws Exception {\n    File coreDir = solrHomeDirectory;\n    setMeUp(coreDir.getAbsolutePath());\n    addCoreWithProps(makeCorePropFile(\"core1\", false, true),\n        new File(coreDir, \"core1\" + File.separator + CorePropertiesLocator.PROPERTIES_FILENAME));\n\n    // Insure that another core is opened successfully\n    addCoreWithProps(makeCorePropFile(\"core2\", false, false, \"dataDir=core2\"),\n        new File(coreDir, \"core2\" + File.separator + CorePropertiesLocator.PROPERTIES_FILENAME));\n\n    File toSet = new File(coreDir, \"core1\");\n    toSet.setReadable(false, false);\n    CoreContainer cc = init();\n    try (SolrCore core1 = cc.getCore(\"core1\");\n         SolrCore core2 = cc.getCore(\"core2\")) {\n      assertNull(core1);\n      assertNotNull(core2);\n    } finally {\n      cc.shutdown();\n    }\n    // So things can be cleaned up by the framework!\n    toSet.setReadable(true, false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d5e1fdb2f4f60897cf8fadced7b8a4321c838c47","date":1488986626,"type":3,"author":"Mark Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestCoreDiscovery#testCoreDirCantRead().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestCoreDiscovery#testCoreDirCantRead().mjava","sourceNew":"  @Test\n  public void testCoreDirCantRead() throws Exception {\n    File coreDir = solrHomeDirectory;\n    setMeUp(coreDir.getAbsolutePath());\n    addCoreWithProps(makeCorePropFile(\"core1\", false, true),\n        new File(coreDir, \"core1\" + File.separator + CorePropertiesLocator.PROPERTIES_FILENAME));\n\n    // Insure that another core is opened successfully\n    addCoreWithProps(makeCorePropFile(\"core2\", false, false, \"dataDir=core2\"),\n        new File(coreDir, \"core2\" + File.separator + CorePropertiesLocator.PROPERTIES_FILENAME));\n\n    File toSet = new File(coreDir, \"core1\");\n    assumeTrue(\"Cannot make \" + toSet + \" non-readable. Test aborted.\", toSet.setReadable(false, false));\n    assumeFalse(\"Appears we are a super user, skip test\", toSet.canRead());\n    CoreContainer cc = init();\n    try (SolrCore core1 = cc.getCore(\"core1\");\n         SolrCore core2 = cc.getCore(\"core2\")) {\n      assertNull(core1);\n      assertNotNull(core2);\n    } finally {\n      cc.shutdown();\n    }\n    // So things can be cleaned up by the framework!\n    toSet.setReadable(true, false);\n  }\n\n","sourceOld":"  @Test\n  public void testCoreDirCantRead() throws Exception {\n    File coreDir = solrHomeDirectory;\n    setMeUp(coreDir.getAbsolutePath());\n    addCoreWithProps(makeCorePropFile(\"core1\", false, true),\n        new File(coreDir, \"core1\" + File.separator + CorePropertiesLocator.PROPERTIES_FILENAME));\n\n    // Insure that another core is opened successfully\n    addCoreWithProps(makeCorePropFile(\"core2\", false, false, \"dataDir=core2\"),\n        new File(coreDir, \"core2\" + File.separator + CorePropertiesLocator.PROPERTIES_FILENAME));\n\n    File toSet = new File(coreDir, \"core1\");\n    assumeTrue(\"Cannot make \" + toSet + \" non-readable. Test aborted.\", toSet.setReadable(false, false));\n    CoreContainer cc = init();\n    try (SolrCore core1 = cc.getCore(\"core1\");\n         SolrCore core2 = cc.getCore(\"core2\")) {\n      assertNull(core1);\n      assertNotNull(core2);\n    } finally {\n      cc.shutdown();\n    }\n    // So things can be cleaned up by the framework!\n    toSet.setReadable(true, false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bd7a2b4785d366164d3cd69f9948de6ff34d23a1","date":1500527874,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestCoreDiscovery#testCoreDirCantRead().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestCoreDiscovery#testCoreDirCantRead().mjava","sourceNew":"  @Test\n  public void testCoreDirCantRead() throws Exception {\n    File coreDir = solrHomeDirectory.toFile();\n    setMeUp(coreDir.getAbsolutePath());\n    addCoreWithProps(makeCoreProperties(\"core1\", false, true),\n        new File(coreDir, \"core1\" + File.separator + CorePropertiesLocator.PROPERTIES_FILENAME));\n\n    // Insure that another core is opened successfully\n    addCoreWithProps(makeCoreProperties(\"core2\", false, false, \"dataDir=core2\"),\n        new File(coreDir, \"core2\" + File.separator + CorePropertiesLocator.PROPERTIES_FILENAME));\n\n    File toSet = new File(coreDir, \"core1\");\n    assumeTrue(\"Cannot make \" + toSet + \" non-readable. Test aborted.\", toSet.setReadable(false, false));\n    assumeFalse(\"Appears we are a super user, skip test\", toSet.canRead());\n    CoreContainer cc = init();\n    try (SolrCore core1 = cc.getCore(\"core1\");\n         SolrCore core2 = cc.getCore(\"core2\")) {\n      assertNull(core1);\n      assertNotNull(core2);\n    } finally {\n      cc.shutdown();\n    }\n    // So things can be cleaned up by the framework!\n    toSet.setReadable(true, false);\n  }\n\n","sourceOld":"  @Test\n  public void testCoreDirCantRead() throws Exception {\n    File coreDir = solrHomeDirectory;\n    setMeUp(coreDir.getAbsolutePath());\n    addCoreWithProps(makeCorePropFile(\"core1\", false, true),\n        new File(coreDir, \"core1\" + File.separator + CorePropertiesLocator.PROPERTIES_FILENAME));\n\n    // Insure that another core is opened successfully\n    addCoreWithProps(makeCorePropFile(\"core2\", false, false, \"dataDir=core2\"),\n        new File(coreDir, \"core2\" + File.separator + CorePropertiesLocator.PROPERTIES_FILENAME));\n\n    File toSet = new File(coreDir, \"core1\");\n    assumeTrue(\"Cannot make \" + toSet + \" non-readable. Test aborted.\", toSet.setReadable(false, false));\n    assumeFalse(\"Appears we are a super user, skip test\", toSet.canRead());\n    CoreContainer cc = init();\n    try (SolrCore core1 = cc.getCore(\"core1\");\n         SolrCore core2 = cc.getCore(\"core2\")) {\n      assertNull(core1);\n      assertNotNull(core2);\n    } finally {\n      cc.shutdown();\n    }\n    // So things can be cleaned up by the framework!\n    toSet.setReadable(true, false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d301cb76d81de80d07b44735622a04d49ed938eb","date":1500536382,"type":3,"author":"Cao Manh Dat","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/TestCoreDiscovery#testCoreDirCantRead().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestCoreDiscovery#testCoreDirCantRead().mjava","sourceNew":"  @Test\n  public void testCoreDirCantRead() throws Exception {\n    File coreDir = solrHomeDirectory.toFile();\n    setMeUp(coreDir.getAbsolutePath());\n    addCoreWithProps(makeCoreProperties(\"core1\", false, true),\n        new File(coreDir, \"core1\" + File.separator + CorePropertiesLocator.PROPERTIES_FILENAME));\n\n    // Insure that another core is opened successfully\n    addCoreWithProps(makeCoreProperties(\"core2\", false, false, \"dataDir=core2\"),\n        new File(coreDir, \"core2\" + File.separator + CorePropertiesLocator.PROPERTIES_FILENAME));\n\n    File toSet = new File(coreDir, \"core1\");\n    assumeTrue(\"Cannot make \" + toSet + \" non-readable. Test aborted.\", toSet.setReadable(false, false));\n    assumeFalse(\"Appears we are a super user, skip test\", toSet.canRead());\n    CoreContainer cc = init();\n    try (SolrCore core1 = cc.getCore(\"core1\");\n         SolrCore core2 = cc.getCore(\"core2\")) {\n      assertNull(core1);\n      assertNotNull(core2);\n    } finally {\n      cc.shutdown();\n    }\n    // So things can be cleaned up by the framework!\n    toSet.setReadable(true, false);\n  }\n\n","sourceOld":"  @Test\n  public void testCoreDirCantRead() throws Exception {\n    File coreDir = solrHomeDirectory;\n    setMeUp(coreDir.getAbsolutePath());\n    addCoreWithProps(makeCorePropFile(\"core1\", false, true),\n        new File(coreDir, \"core1\" + File.separator + CorePropertiesLocator.PROPERTIES_FILENAME));\n\n    // Insure that another core is opened successfully\n    addCoreWithProps(makeCorePropFile(\"core2\", false, false, \"dataDir=core2\"),\n        new File(coreDir, \"core2\" + File.separator + CorePropertiesLocator.PROPERTIES_FILENAME));\n\n    File toSet = new File(coreDir, \"core1\");\n    assumeTrue(\"Cannot make \" + toSet + \" non-readable. Test aborted.\", toSet.setReadable(false, false));\n    assumeFalse(\"Appears we are a super user, skip test\", toSet.canRead());\n    CoreContainer cc = init();\n    try (SolrCore core1 = cc.getCore(\"core1\");\n         SolrCore core2 = cc.getCore(\"core2\")) {\n      assertNull(core1);\n      assertNotNull(core2);\n    } finally {\n      cc.shutdown();\n    }\n    // So things can be cleaned up by the framework!\n    toSet.setReadable(true, false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"936cdd5882761db3b844afd6f84ab81cbb011a75","date":1500973524,"type":3,"author":"Cao Manh Dat","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/TestCoreDiscovery#testCoreDirCantRead().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestCoreDiscovery#testCoreDirCantRead().mjava","sourceNew":"  @Test\n  public void testCoreDirCantRead() throws Exception {\n    File coreDir = solrHomeDirectory.toFile();\n    setMeUp(coreDir.getAbsolutePath());\n    addCoreWithProps(makeCoreProperties(\"core1\", false, true),\n        new File(coreDir, \"core1\" + File.separator + CorePropertiesLocator.PROPERTIES_FILENAME));\n\n    // Insure that another core is opened successfully\n    addCoreWithProps(makeCoreProperties(\"core2\", false, false, \"dataDir=core2\"),\n        new File(coreDir, \"core2\" + File.separator + CorePropertiesLocator.PROPERTIES_FILENAME));\n\n    File toSet = new File(coreDir, \"core1\");\n    assumeTrue(\"Cannot make \" + toSet + \" non-readable. Test aborted.\", toSet.setReadable(false, false));\n    assumeFalse(\"Appears we are a super user, skip test\", toSet.canRead());\n    CoreContainer cc = init();\n    try (SolrCore core1 = cc.getCore(\"core1\");\n         SolrCore core2 = cc.getCore(\"core2\")) {\n      assertNull(core1);\n      assertNotNull(core2);\n    } finally {\n      cc.shutdown();\n    }\n    // So things can be cleaned up by the framework!\n    toSet.setReadable(true, false);\n  }\n\n","sourceOld":"  @Test\n  public void testCoreDirCantRead() throws Exception {\n    File coreDir = solrHomeDirectory;\n    setMeUp(coreDir.getAbsolutePath());\n    addCoreWithProps(makeCorePropFile(\"core1\", false, true),\n        new File(coreDir, \"core1\" + File.separator + CorePropertiesLocator.PROPERTIES_FILENAME));\n\n    // Insure that another core is opened successfully\n    addCoreWithProps(makeCorePropFile(\"core2\", false, false, \"dataDir=core2\"),\n        new File(coreDir, \"core2\" + File.separator + CorePropertiesLocator.PROPERTIES_FILENAME));\n\n    File toSet = new File(coreDir, \"core1\");\n    assumeTrue(\"Cannot make \" + toSet + \" non-readable. Test aborted.\", toSet.setReadable(false, false));\n    assumeFalse(\"Appears we are a super user, skip test\", toSet.canRead());\n    CoreContainer cc = init();\n    try (SolrCore core1 = cc.getCore(\"core1\");\n         SolrCore core2 = cc.getCore(\"core2\")) {\n      assertNull(core1);\n      assertNotNull(core2);\n    } finally {\n      cc.shutdown();\n    }\n    // So things can be cleaned up by the framework!\n    toSet.setReadable(true, false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d5e1fdb2f4f60897cf8fadced7b8a4321c838c47":["c52212005e468bcee3f7dd2bd5319cd1ec0d9ce9"],"d301cb76d81de80d07b44735622a04d49ed938eb":["d5e1fdb2f4f60897cf8fadced7b8a4321c838c47","bd7a2b4785d366164d3cd69f9948de6ff34d23a1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"936cdd5882761db3b844afd6f84ab81cbb011a75":["d5e1fdb2f4f60897cf8fadced7b8a4321c838c47","d301cb76d81de80d07b44735622a04d49ed938eb"],"c52212005e468bcee3f7dd2bd5319cd1ec0d9ce9":["429eefa8bf427c2fbc5d85905fea54b2f76081f5"],"bd7a2b4785d366164d3cd69f9948de6ff34d23a1":["d5e1fdb2f4f60897cf8fadced7b8a4321c838c47"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d301cb76d81de80d07b44735622a04d49ed938eb"],"429eefa8bf427c2fbc5d85905fea54b2f76081f5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"d5e1fdb2f4f60897cf8fadced7b8a4321c838c47":["d301cb76d81de80d07b44735622a04d49ed938eb","936cdd5882761db3b844afd6f84ab81cbb011a75","bd7a2b4785d366164d3cd69f9948de6ff34d23a1"],"d301cb76d81de80d07b44735622a04d49ed938eb":["936cdd5882761db3b844afd6f84ab81cbb011a75","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["429eefa8bf427c2fbc5d85905fea54b2f76081f5"],"936cdd5882761db3b844afd6f84ab81cbb011a75":[],"c52212005e468bcee3f7dd2bd5319cd1ec0d9ce9":["d5e1fdb2f4f60897cf8fadced7b8a4321c838c47"],"bd7a2b4785d366164d3cd69f9948de6ff34d23a1":["d301cb76d81de80d07b44735622a04d49ed938eb"],"429eefa8bf427c2fbc5d85905fea54b2f76081f5":["c52212005e468bcee3f7dd2bd5319cd1ec0d9ce9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["936cdd5882761db3b844afd6f84ab81cbb011a75","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}