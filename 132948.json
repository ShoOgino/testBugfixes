{"path":"solr/core/src/java/org/apache/solr/request/json/RequestUtil#convertJsonPropertyToLocalParams(Map[String,String[]],JsonQueryConverter,Map.Entry[String,Object],String,boolean,boolean).mjava","commits":[{"id":"0dec8faa342587767c2f95ad26a8315b8068392b","date":1578083291,"type":0,"author":"Mikhail Khludnev","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/request/json/RequestUtil#convertJsonPropertyToLocalParams(Map[String,String[]],JsonQueryConverter,Map.Entry[String,Object],String,boolean,boolean).mjava","pathOld":"/dev/null","sourceNew":"  private static void convertJsonPropertyToLocalParams(Map<String, String[]> outMap, JsonQueryConverter jsonQueryConverter, Map.Entry<String, Object> jsonProperty, String outKey, boolean isQuery, boolean arr) {\n    Object val = jsonProperty.getValue();\n\n    if (arr) {\n      String[] existing = outMap.get(outKey);\n      List<?> lst = val instanceof List ? (List<?>)val : null;\n      int existingSize = existing==null ? 0 : existing.length;\n      int jsonSize = lst==null ? 1 : lst.size();\n      String[] newval = new String[ existingSize + jsonSize ];\n      for (int i=0; i<existingSize; i++) {\n        newval[i] = existing[i];\n      }\n      if (lst != null) {\n        for (int i = 0; i < jsonSize; i++) {\n          Object v = lst.get(i);\n          newval[existingSize + i] = isQuery ? jsonQueryConverter.toLocalParams(v, outMap) : v.toString();\n        }\n      } else {\n        newval[newval.length-1] = isQuery ? jsonQueryConverter.toLocalParams(val, outMap) : val.toString();\n      }\n      outMap.put(outKey, newval);\n    } else {\n      outMap.put(outKey, new String[]{isQuery ? jsonQueryConverter.toLocalParams(val, outMap) : val.toString()});\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ca62564055241632cd20d65b5ecb8c8e93bd60c4","date":1578383112,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/request/json/RequestUtil#convertJsonPropertyToLocalParams(Map[String,String[]],JsonQueryConverter,Map.Entry[String,Object],String,boolean,boolean).mjava","pathOld":"/dev/null","sourceNew":"  private static void convertJsonPropertyToLocalParams(Map<String, String[]> outMap, JsonQueryConverter jsonQueryConverter, Map.Entry<String, Object> jsonProperty, String outKey, boolean isQuery, boolean arr) {\n    Object val = jsonProperty.getValue();\n\n    if (arr) {\n      String[] existing = outMap.get(outKey);\n      List<?> lst = val instanceof List ? (List<?>)val : null;\n      int existingSize = existing==null ? 0 : existing.length;\n      int jsonSize = lst==null ? 1 : lst.size();\n      String[] newval = new String[ existingSize + jsonSize ];\n      for (int i=0; i<existingSize; i++) {\n        newval[i] = existing[i];\n      }\n      if (lst != null) {\n        for (int i = 0; i < jsonSize; i++) {\n          Object v = lst.get(i);\n          newval[existingSize + i] = isQuery ? jsonQueryConverter.toLocalParams(v, outMap) : v.toString();\n        }\n      } else {\n        newval[newval.length-1] = isQuery ? jsonQueryConverter.toLocalParams(val, outMap) : val.toString();\n      }\n      outMap.put(outKey, newval);\n    } else {\n      outMap.put(outKey, new String[]{isQuery ? jsonQueryConverter.toLocalParams(val, outMap) : val.toString()});\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0dec8faa342587767c2f95ad26a8315b8068392b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ca62564055241632cd20d65b5ecb8c8e93bd60c4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0dec8faa342587767c2f95ad26a8315b8068392b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0dec8faa342587767c2f95ad26a8315b8068392b"]},"commit2Childs":{"0dec8faa342587767c2f95ad26a8315b8068392b":["ca62564055241632cd20d65b5ecb8c8e93bd60c4","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0dec8faa342587767c2f95ad26a8315b8068392b","ca62564055241632cd20d65b5ecb8c8e93bd60c4"],"ca62564055241632cd20d65b5ecb8c8e93bd60c4":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ca62564055241632cd20d65b5ecb8c8e93bd60c4","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}