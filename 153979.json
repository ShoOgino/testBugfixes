{"path":"lucene/core/src/java/org/apache/lucene/store/ChecksumIndexInput#seek(long).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/store/ChecksumIndexInput#seek(long).mjava","pathOld":"lucene/src/java/org/apache/lucene/store/ChecksumIndexInput#seek(long).mjava","sourceNew":"  @Override\n  public void seek(long pos) {\n    throw new RuntimeException(\"not allowed\");\n  }\n\n","sourceOld":"  @Override\n  public void seek(long pos) {\n    throw new RuntimeException(\"not allowed\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0451c421afa567194fd4312af9389e07003a7941","date":1331317047,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/store/ChecksumIndexInput#seek(long).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/store/ChecksumIndexInput#seek(long).mjava","sourceNew":"  @Override\n  public void seek(long pos) {\n    throw new UnsupportedOperationException();\n  }\n\n","sourceOld":"  @Override\n  public void seek(long pos) {\n    throw new RuntimeException(\"not allowed\");\n  }\n\n","bugFix":null,"bugIntro":["c7bda8b8b6640dd6438d931c8f9432366011a094"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"38e3b736c7ca086d61b7dbb841c905ee115490da","date":1331657018,"type":3,"author":"Ryan McKinley","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/store/ChecksumIndexInput#seek(long).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/store/ChecksumIndexInput#seek(long).mjava","sourceNew":"  @Override\n  public void seek(long pos) {\n    throw new UnsupportedOperationException();\n  }\n\n","sourceOld":"  @Override\n  public void seek(long pos) {\n    throw new RuntimeException(\"not allowed\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba718737348b631d49101cf505322f868a130196","date":1397033548,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/store/ChecksumIndexInput#seek(long).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/store/ChecksumIndexInput#seek(long).mjava","sourceNew":"  @Override\n  public void seek(long pos) throws IOException {\n    throw new UnsupportedOperationException();\n  }\n\n","sourceOld":"  @Override\n  public void seek(long pos) {\n    throw new UnsupportedOperationException();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c7bda8b8b6640dd6438d931c8f9432366011a094","date":1397113958,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/store/ChecksumIndexInput#seek(long).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/store/ChecksumIndexInput#seek(long).mjava","sourceNew":"  /**\n   * {@inheritDoc}\n   *\n   * {@link ChecksumIndexInput} can only seek forward and seeks are expensive\n   * since they imply to read bytes in-between the current position and the\n   * target position in order to update the checksum.\n   */\n  @Override\n  public void seek(long pos) throws IOException {\n    final long skip = pos - getFilePointer();\n    if (skip < 0) {\n      throw new IllegalStateException(ChecksumIndexInput.class + \" cannot seed backward\");\n    }\n    skipBytes(skip);\n  }\n\n","sourceOld":"  @Override\n  public void seek(long pos) throws IOException {\n    throw new UnsupportedOperationException();\n  }\n\n","bugFix":["0451c421afa567194fd4312af9389e07003a7941"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1db0e36bd56f06d5830e980340e7fe58353a44f7","date":1397233249,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/store/ChecksumIndexInput#seek(long).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/store/ChecksumIndexInput#seek(long).mjava","sourceNew":"  /**\n   * {@inheritDoc}\n   *\n   * {@link ChecksumIndexInput} can only seek forward and seeks are expensive\n   * since they imply to read bytes in-between the current position and the\n   * target position in order to update the checksum.\n   */\n  @Override\n  public void seek(long pos) throws IOException {\n    final long skip = pos - getFilePointer();\n    if (skip < 0) {\n      throw new IllegalStateException(getClass() + \" cannot seek backwards\");\n    }\n    skipBytes(skip);\n  }\n\n","sourceOld":"  /**\n   * {@inheritDoc}\n   *\n   * {@link ChecksumIndexInput} can only seek forward and seeks are expensive\n   * since they imply to read bytes in-between the current position and the\n   * target position in order to update the checksum.\n   */\n  @Override\n  public void seek(long pos) throws IOException {\n    final long skip = pos - getFilePointer();\n    if (skip < 0) {\n      throw new IllegalStateException(ChecksumIndexInput.class + \" cannot seed backward\");\n    }\n    skipBytes(skip);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"956e4a70cde6c40caa670fee39673cb33406919f","date":1440419267,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/store/ChecksumIndexInput#seek(long).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/store/ChecksumIndexInput#seek(long).mjava","sourceNew":"  /**\n   * {@inheritDoc}\n   *\n   * {@link ChecksumIndexInput} can only seek forward and seeks are expensive\n   * since they imply to read bytes in-between the current position and the\n   * target position in order to update the checksum.\n   */\n  @Override\n  public void seek(long pos) throws IOException {\n    final long curFP = getFilePointer();\n    final long skip = pos - curFP;\n    if (skip < 0) {\n      throw new IllegalStateException(getClass() + \" cannot seek backwards (pos=\" + pos + \" getFilePointer()=\" + curFP + \")\");\n    }\n    skipBytes(skip);\n  }\n\n","sourceOld":"  /**\n   * {@inheritDoc}\n   *\n   * {@link ChecksumIndexInput} can only seek forward and seeks are expensive\n   * since they imply to read bytes in-between the current position and the\n   * target position in order to update the checksum.\n   */\n  @Override\n  public void seek(long pos) throws IOException {\n    final long skip = pos - getFilePointer();\n    if (skip < 0) {\n      throw new IllegalStateException(getClass() + \" cannot seek backwards\");\n    }\n    skipBytes(skip);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"38e3b736c7ca086d61b7dbb841c905ee115490da":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","0451c421afa567194fd4312af9389e07003a7941"],"c7bda8b8b6640dd6438d931c8f9432366011a094":["ba718737348b631d49101cf505322f868a130196"],"956e4a70cde6c40caa670fee39673cb33406919f":["1db0e36bd56f06d5830e980340e7fe58353a44f7"],"1db0e36bd56f06d5830e980340e7fe58353a44f7":["c7bda8b8b6640dd6438d931c8f9432366011a094"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ba718737348b631d49101cf505322f868a130196":["0451c421afa567194fd4312af9389e07003a7941"],"0451c421afa567194fd4312af9389e07003a7941":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["956e4a70cde6c40caa670fee39673cb33406919f"]},"commit2Childs":{"38e3b736c7ca086d61b7dbb841c905ee115490da":[],"c7bda8b8b6640dd6438d931c8f9432366011a094":["1db0e36bd56f06d5830e980340e7fe58353a44f7"],"956e4a70cde6c40caa670fee39673cb33406919f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"1db0e36bd56f06d5830e980340e7fe58353a44f7":["956e4a70cde6c40caa670fee39673cb33406919f"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["38e3b736c7ca086d61b7dbb841c905ee115490da","0451c421afa567194fd4312af9389e07003a7941"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"0451c421afa567194fd4312af9389e07003a7941":["38e3b736c7ca086d61b7dbb841c905ee115490da","ba718737348b631d49101cf505322f868a130196"],"ba718737348b631d49101cf505322f868a130196":["c7bda8b8b6640dd6438d931c8f9432366011a094"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["38e3b736c7ca086d61b7dbb841c905ee115490da","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}