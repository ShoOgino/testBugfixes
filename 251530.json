{"path":"lucene/queries/src/java/org/apache/lucene/queries/CommonTermsQuery#hashCode().mjava","commits":[{"id":"a194d3ac4639a7909ea614667b9a7632a6aa14d1","date":1355475351,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/CommonTermsQuery#hashCode().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public int hashCode() {\n    final int prime = 31;\n    int result = super.hashCode();\n    result = prime * result + (disableCoord ? 1231 : 1237);\n    result = prime * result + Float.floatToIntBits(highFreqBoost);\n    result = prime * result\n        + ((highFreqOccur == null) ? 0 : highFreqOccur.hashCode());\n    result = prime * result + Float.floatToIntBits(lowFreqBoost);\n    result = prime * result\n        + ((lowFreqOccur == null) ? 0 : lowFreqOccur.hashCode());\n    result = prime * result + Float.floatToIntBits(maxTermFrequency);\n    result = prime * result + minNrShouldMatch;\n    result = prime * result + ((terms == null) ? 0 : terms.hashCode());\n    return result;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/CommonTermsQuery#hashCode().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public int hashCode() {\n    final int prime = 31;\n    int result = super.hashCode();\n    result = prime * result + (disableCoord ? 1231 : 1237);\n    result = prime * result + Float.floatToIntBits(highFreqBoost);\n    result = prime * result\n        + ((highFreqOccur == null) ? 0 : highFreqOccur.hashCode());\n    result = prime * result + Float.floatToIntBits(lowFreqBoost);\n    result = prime * result\n        + ((lowFreqOccur == null) ? 0 : lowFreqOccur.hashCode());\n    result = prime * result + Float.floatToIntBits(maxTermFrequency);\n    result = prime * result + minNrShouldMatch;\n    result = prime * result + ((terms == null) ? 0 : terms.hashCode());\n    return result;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9aa8b576db3a2ef44791da3c24b9d0b61c236c11","date":1359387145,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/CommonTermsQuery#hashCode().mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/CommonTermsQuery#hashCode().mjava","sourceNew":"  @Override\n  public int hashCode() {\n    final int prime = 31;\n    int result = super.hashCode();\n    result = prime * result + (disableCoord ? 1231 : 1237);\n    result = prime * result + Float.floatToIntBits(highFreqBoost);\n    result = prime * result\n        + ((highFreqOccur == null) ? 0 : highFreqOccur.hashCode());\n    result = prime * result + Float.floatToIntBits(lowFreqBoost);\n    result = prime * result\n        + ((lowFreqOccur == null) ? 0 : lowFreqOccur.hashCode());\n    result = prime * result + Float.floatToIntBits(maxTermFrequency);\n    result = prime * result + Float.floatToIntBits(minNrShouldMatch);\n    result = prime * result + ((terms == null) ? 0 : terms.hashCode());\n    return result;\n  }\n\n","sourceOld":"  @Override\n  public int hashCode() {\n    final int prime = 31;\n    int result = super.hashCode();\n    result = prime * result + (disableCoord ? 1231 : 1237);\n    result = prime * result + Float.floatToIntBits(highFreqBoost);\n    result = prime * result\n        + ((highFreqOccur == null) ? 0 : highFreqOccur.hashCode());\n    result = prime * result + Float.floatToIntBits(lowFreqBoost);\n    result = prime * result\n        + ((lowFreqOccur == null) ? 0 : lowFreqOccur.hashCode());\n    result = prime * result + Float.floatToIntBits(maxTermFrequency);\n    result = prime * result + minNrShouldMatch;\n    result = prime * result + ((terms == null) ? 0 : terms.hashCode());\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"de522d9303bd67c8473a269a1319125d1f3700e0","date":1359477856,"type":3,"author":"Adrien Grand","isMerge":true,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/CommonTermsQuery#hashCode().mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/CommonTermsQuery#hashCode().mjava","sourceNew":"  @Override\n  public int hashCode() {\n    final int prime = 31;\n    int result = super.hashCode();\n    result = prime * result + (disableCoord ? 1231 : 1237);\n    result = prime * result + Float.floatToIntBits(highFreqBoost);\n    result = prime * result\n        + ((highFreqOccur == null) ? 0 : highFreqOccur.hashCode());\n    result = prime * result + Float.floatToIntBits(lowFreqBoost);\n    result = prime * result\n        + ((lowFreqOccur == null) ? 0 : lowFreqOccur.hashCode());\n    result = prime * result + Float.floatToIntBits(maxTermFrequency);\n    result = prime * result + Float.floatToIntBits(minNrShouldMatch);\n    result = prime * result + ((terms == null) ? 0 : terms.hashCode());\n    return result;\n  }\n\n","sourceOld":"  @Override\n  public int hashCode() {\n    final int prime = 31;\n    int result = super.hashCode();\n    result = prime * result + (disableCoord ? 1231 : 1237);\n    result = prime * result + Float.floatToIntBits(highFreqBoost);\n    result = prime * result\n        + ((highFreqOccur == null) ? 0 : highFreqOccur.hashCode());\n    result = prime * result + Float.floatToIntBits(lowFreqBoost);\n    result = prime * result\n        + ((lowFreqOccur == null) ? 0 : lowFreqOccur.hashCode());\n    result = prime * result + Float.floatToIntBits(maxTermFrequency);\n    result = prime * result + minNrShouldMatch;\n    result = prime * result + ((terms == null) ? 0 : terms.hashCode());\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"620f2c9cd3df8f77948c19b3165b5dc20700a5d5","date":1375193294,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/CommonTermsQuery#hashCode().mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/CommonTermsQuery#hashCode().mjava","sourceNew":"  @Override\n  public int hashCode() {\n    final int prime = 31;\n    int result = super.hashCode();\n    result = prime * result + (disableCoord ? 1231 : 1237);\n    result = prime * result + Float.floatToIntBits(highFreqBoost);\n    result = prime * result\n        + ((highFreqOccur == null) ? 0 : highFreqOccur.hashCode());\n    result = prime * result + Float.floatToIntBits(lowFreqBoost);\n    result = prime * result\n        + ((lowFreqOccur == null) ? 0 : lowFreqOccur.hashCode());\n    result = prime * result + Float.floatToIntBits(maxTermFrequency);\n    result = prime * result + Float.floatToIntBits(lowFreqMinNrShouldMatch);\n    result = prime * result + Float.floatToIntBits(highFreqMinNrShouldMatch);\n    result = prime * result + ((terms == null) ? 0 : terms.hashCode());\n    return result;\n  }\n\n","sourceOld":"  @Override\n  public int hashCode() {\n    final int prime = 31;\n    int result = super.hashCode();\n    result = prime * result + (disableCoord ? 1231 : 1237);\n    result = prime * result + Float.floatToIntBits(highFreqBoost);\n    result = prime * result\n        + ((highFreqOccur == null) ? 0 : highFreqOccur.hashCode());\n    result = prime * result + Float.floatToIntBits(lowFreqBoost);\n    result = prime * result\n        + ((lowFreqOccur == null) ? 0 : lowFreqOccur.hashCode());\n    result = prime * result + Float.floatToIntBits(maxTermFrequency);\n    result = prime * result + Float.floatToIntBits(minNrShouldMatch);\n    result = prime * result + ((terms == null) ? 0 : terms.hashCode());\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","date":1376366778,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/CommonTermsQuery#hashCode().mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/CommonTermsQuery#hashCode().mjava","sourceNew":"  @Override\n  public int hashCode() {\n    final int prime = 31;\n    int result = super.hashCode();\n    result = prime * result + (disableCoord ? 1231 : 1237);\n    result = prime * result + Float.floatToIntBits(highFreqBoost);\n    result = prime * result\n        + ((highFreqOccur == null) ? 0 : highFreqOccur.hashCode());\n    result = prime * result + Float.floatToIntBits(lowFreqBoost);\n    result = prime * result\n        + ((lowFreqOccur == null) ? 0 : lowFreqOccur.hashCode());\n    result = prime * result + Float.floatToIntBits(maxTermFrequency);\n    result = prime * result + Float.floatToIntBits(lowFreqMinNrShouldMatch);\n    result = prime * result + Float.floatToIntBits(highFreqMinNrShouldMatch);\n    result = prime * result + ((terms == null) ? 0 : terms.hashCode());\n    return result;\n  }\n\n","sourceOld":"  @Override\n  public int hashCode() {\n    final int prime = 31;\n    int result = super.hashCode();\n    result = prime * result + (disableCoord ? 1231 : 1237);\n    result = prime * result + Float.floatToIntBits(highFreqBoost);\n    result = prime * result\n        + ((highFreqOccur == null) ? 0 : highFreqOccur.hashCode());\n    result = prime * result + Float.floatToIntBits(lowFreqBoost);\n    result = prime * result\n        + ((lowFreqOccur == null) ? 0 : lowFreqOccur.hashCode());\n    result = prime * result + Float.floatToIntBits(maxTermFrequency);\n    result = prime * result + Float.floatToIntBits(minNrShouldMatch);\n    result = prime * result + ((terms == null) ? 0 : terms.hashCode());\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0e7bc21595222ae4f75509300fbb7726691f387f","date":1464078795,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/CommonTermsQuery#hashCode().mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/CommonTermsQuery#hashCode().mjava","sourceNew":"  @Override\n  public int hashCode() {\n    final int prime = 31;\n    int result = classHash();\n    result = prime * result + (disableCoord ? 1231 : 1237);\n    result = prime * result + Float.floatToIntBits(highFreqBoost);\n    result = prime * result + Objects.hashCode(highFreqOccur);\n    result = prime * result + Objects.hashCode(lowFreqOccur);\n    result = prime * result + Float.floatToIntBits(lowFreqBoost);\n    result = prime * result + Float.floatToIntBits(maxTermFrequency);\n    result = prime * result + Float.floatToIntBits(lowFreqMinNrShouldMatch);\n    result = prime * result + Float.floatToIntBits(highFreqMinNrShouldMatch);\n    result = prime * result + Objects.hashCode(terms);\n    return result;\n  }\n\n","sourceOld":"  @Override\n  public int hashCode() {\n    final int prime = 31;\n    int result = super.hashCode();\n    result = prime * result + (disableCoord ? 1231 : 1237);\n    result = prime * result + Float.floatToIntBits(highFreqBoost);\n    result = prime * result\n        + ((highFreqOccur == null) ? 0 : highFreqOccur.hashCode());\n    result = prime * result + Float.floatToIntBits(lowFreqBoost);\n    result = prime * result\n        + ((lowFreqOccur == null) ? 0 : lowFreqOccur.hashCode());\n    result = prime * result + Float.floatToIntBits(maxTermFrequency);\n    result = prime * result + Float.floatToIntBits(lowFreqMinNrShouldMatch);\n    result = prime * result + Float.floatToIntBits(highFreqMinNrShouldMatch);\n    result = prime * result + ((terms == null) ? 0 : terms.hashCode());\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c8a0e442f7b61f811680273b25da95994a724466","date":1467878549,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/CommonTermsQuery#hashCode().mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/CommonTermsQuery#hashCode().mjava","sourceNew":"  @Override\n  public int hashCode() {\n    final int prime = 31;\n    int result = classHash();\n    result = prime * result + Float.floatToIntBits(highFreqBoost);\n    result = prime * result + Objects.hashCode(highFreqOccur);\n    result = prime * result + Objects.hashCode(lowFreqOccur);\n    result = prime * result + Float.floatToIntBits(lowFreqBoost);\n    result = prime * result + Float.floatToIntBits(maxTermFrequency);\n    result = prime * result + Float.floatToIntBits(lowFreqMinNrShouldMatch);\n    result = prime * result + Float.floatToIntBits(highFreqMinNrShouldMatch);\n    result = prime * result + Objects.hashCode(terms);\n    return result;\n  }\n\n","sourceOld":"  @Override\n  public int hashCode() {\n    final int prime = 31;\n    int result = classHash();\n    result = prime * result + (disableCoord ? 1231 : 1237);\n    result = prime * result + Float.floatToIntBits(highFreqBoost);\n    result = prime * result + Objects.hashCode(highFreqOccur);\n    result = prime * result + Objects.hashCode(lowFreqOccur);\n    result = prime * result + Float.floatToIntBits(lowFreqBoost);\n    result = prime * result + Float.floatToIntBits(maxTermFrequency);\n    result = prime * result + Float.floatToIntBits(lowFreqMinNrShouldMatch);\n    result = prime * result + Float.floatToIntBits(highFreqMinNrShouldMatch);\n    result = prime * result + Objects.hashCode(terms);\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/CommonTermsQuery#hashCode().mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/CommonTermsQuery#hashCode().mjava","sourceNew":"  @Override\n  public int hashCode() {\n    final int prime = 31;\n    int result = classHash();\n    result = prime * result + Float.floatToIntBits(highFreqBoost);\n    result = prime * result + Objects.hashCode(highFreqOccur);\n    result = prime * result + Objects.hashCode(lowFreqOccur);\n    result = prime * result + Float.floatToIntBits(lowFreqBoost);\n    result = prime * result + Float.floatToIntBits(maxTermFrequency);\n    result = prime * result + Float.floatToIntBits(lowFreqMinNrShouldMatch);\n    result = prime * result + Float.floatToIntBits(highFreqMinNrShouldMatch);\n    result = prime * result + Objects.hashCode(terms);\n    return result;\n  }\n\n","sourceOld":"  @Override\n  public int hashCode() {\n    final int prime = 31;\n    int result = super.hashCode();\n    result = prime * result + (disableCoord ? 1231 : 1237);\n    result = prime * result + Float.floatToIntBits(highFreqBoost);\n    result = prime * result\n        + ((highFreqOccur == null) ? 0 : highFreqOccur.hashCode());\n    result = prime * result + Float.floatToIntBits(lowFreqBoost);\n    result = prime * result\n        + ((lowFreqOccur == null) ? 0 : lowFreqOccur.hashCode());\n    result = prime * result + Float.floatToIntBits(maxTermFrequency);\n    result = prime * result + Float.floatToIntBits(lowFreqMinNrShouldMatch);\n    result = prime * result + Float.floatToIntBits(highFreqMinNrShouldMatch);\n    result = prime * result + ((terms == null) ? 0 : terms.hashCode());\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a194d3ac4639a7909ea614667b9a7632a6aa14d1"],"9aa8b576db3a2ef44791da3c24b9d0b61c236c11":["a194d3ac4639a7909ea614667b9a7632a6aa14d1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0e7bc21595222ae4f75509300fbb7726691f387f":["620f2c9cd3df8f77948c19b3165b5dc20700a5d5"],"620f2c9cd3df8f77948c19b3165b5dc20700a5d5":["9aa8b576db3a2ef44791da3c24b9d0b61c236c11"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":["9aa8b576db3a2ef44791da3c24b9d0b61c236c11"],"c8a0e442f7b61f811680273b25da95994a724466":["0e7bc21595222ae4f75509300fbb7726691f387f"],"a194d3ac4639a7909ea614667b9a7632a6aa14d1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"de522d9303bd67c8473a269a1319125d1f3700e0":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","9aa8b576db3a2ef44791da3c24b9d0b61c236c11"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["620f2c9cd3df8f77948c19b3165b5dc20700a5d5","c8a0e442f7b61f811680273b25da95994a724466"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c8a0e442f7b61f811680273b25da95994a724466"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["de522d9303bd67c8473a269a1319125d1f3700e0"],"9aa8b576db3a2ef44791da3c24b9d0b61c236c11":["620f2c9cd3df8f77948c19b3165b5dc20700a5d5","8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","de522d9303bd67c8473a269a1319125d1f3700e0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","a194d3ac4639a7909ea614667b9a7632a6aa14d1"],"0e7bc21595222ae4f75509300fbb7726691f387f":["c8a0e442f7b61f811680273b25da95994a724466"],"620f2c9cd3df8f77948c19b3165b5dc20700a5d5":["0e7bc21595222ae4f75509300fbb7726691f387f","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":[],"c8a0e442f7b61f811680273b25da95994a724466":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a194d3ac4639a7909ea614667b9a7632a6aa14d1":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","9aa8b576db3a2ef44791da3c24b9d0b61c236c11"],"de522d9303bd67c8473a269a1319125d1f3700e0":[],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","de522d9303bd67c8473a269a1319125d1f3700e0","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}