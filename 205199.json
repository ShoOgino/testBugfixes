{"path":"lucene/core/src/java/org/apache/lucene/codecs/compressing/CompressingTermVectorsWriter#flushPositions().mjava","commits":[{"id":"eda61b1e90b490cc5837200e04c02639a0d272c7","date":1358795519,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/compressing/CompressingTermVectorsWriter#flushPositions().mjava","pathOld":"/dev/null","sourceNew":"  private void flushPositions() throws IOException {\n    writer.reset(vectorsStream);\n    for (DocData dd : pendingDocs) {\n      for (FieldData fd : dd.fields) {\n        if (fd.hasPositions) {\n          int pos = 0;\n          for (int i = 0; i < fd.numTerms; ++i) {\n            int previousPosition = 0;\n            for (int j = 0; j < fd.freqs[i]; ++j) {\n              final int position = positionsBuf[fd .posStart + pos++];\n              writer.add(position - previousPosition);\n              previousPosition = position;\n            }\n          }\n          assert pos == fd.totalPositions;\n        }\n      }\n    }\n    writer.finish();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"07155cdd910937cdf6877e48884d5782845c8b8b","date":1358796205,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/compressing/CompressingTermVectorsWriter#flushPositions().mjava","pathOld":"/dev/null","sourceNew":"  private void flushPositions() throws IOException {\n    writer.reset(vectorsStream);\n    for (DocData dd : pendingDocs) {\n      for (FieldData fd : dd.fields) {\n        if (fd.hasPositions) {\n          int pos = 0;\n          for (int i = 0; i < fd.numTerms; ++i) {\n            int previousPosition = 0;\n            for (int j = 0; j < fd.freqs[i]; ++j) {\n              final int position = positionsBuf[fd .posStart + pos++];\n              writer.add(position - previousPosition);\n              previousPosition = position;\n            }\n          }\n          assert pos == fd.totalPositions;\n        }\n      }\n    }\n    writer.finish();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"eda61b1e90b490cc5837200e04c02639a0d272c7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"07155cdd910937cdf6877e48884d5782845c8b8b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","eda61b1e90b490cc5837200e04c02639a0d272c7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["eda61b1e90b490cc5837200e04c02639a0d272c7"]},"commit2Childs":{"eda61b1e90b490cc5837200e04c02639a0d272c7":["07155cdd910937cdf6877e48884d5782845c8b8b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["eda61b1e90b490cc5837200e04c02639a0d272c7","07155cdd910937cdf6877e48884d5782845c8b8b"],"07155cdd910937cdf6877e48884d5782845c8b8b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["07155cdd910937cdf6877e48884d5782845c8b8b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}