{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/io/Tuple#writeMap(EntryWriter).mjava","commits":[{"id":"0192949680ef6812c36a6fd2c7344d74bb7a81d3","date":1478610686,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/Tuple#writeMap(EntryWriter).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void writeMap(EntryWriter ew) throws IOException {\n    fields.forEach((k, v) -> {\n      try {\n        ew.put((String)k,v);\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    });\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8fe15a42e904812683ef9365c28389e14f639466","date":1478615818,"type":0,"author":"Noble Paul","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/Tuple#writeMap(EntryWriter).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void writeMap(EntryWriter ew) throws IOException {\n    fields.forEach((k, v) -> {\n      try {\n        ew.put((String)k,v);\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    });\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"199dfa410f1fdbfd3294106b04096cce5ed34b21","date":1478812506,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/Tuple#writeMap(EntryWriter).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void writeMap(EntryWriter ew) throws IOException {\n    fields.forEach((k, v) -> {\n      try {\n        ew.put((String)k,v);\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    });\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7dbb74d09c5d364f22c2b7dfe3b0ab2f587cec81","date":1489617105,"type":3,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/Tuple#writeMap(EntryWriter).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/Tuple#writeMap(EntryWriter).mjava","sourceNew":"  @Override\n  public void writeMap(EntryWriter ew) throws IOException {\n    if(fieldNames == null) {\n      fields.forEach((k, v) -> {\n        try {\n          ew.put((String) k, v);\n        } catch (IOException e) {\n          throw new RuntimeException(e);\n        }\n      });\n    } else {\n      for(String fieldName : fieldNames) {\n        String label = fieldLabels.get(fieldName);\n        ew.put(label, fields.get(label));\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void writeMap(EntryWriter ew) throws IOException {\n    fields.forEach((k, v) -> {\n      try {\n        ew.put((String)k,v);\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6106d879512729bf1e4840d612448c4180d110c8","date":1489651910,"type":3,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/Tuple#writeMap(EntryWriter).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/Tuple#writeMap(EntryWriter).mjava","sourceNew":"  @Override\n  public void writeMap(EntryWriter ew) throws IOException {\n    if(fieldNames == null) {\n      fields.forEach((k, v) -> {\n        try {\n          ew.put((String) k, v);\n        } catch (IOException e) {\n          throw new RuntimeException(e);\n        }\n      });\n    } else {\n      for(String fieldName : fieldNames) {\n        String label = fieldLabels.get(fieldName);\n        ew.put(label, fields.get(label));\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void writeMap(EntryWriter ew) throws IOException {\n    fields.forEach((k, v) -> {\n      try {\n        ew.put((String)k,v);\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab68488225b6a6c357dda72ed11dedca9914a192","date":1490013111,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/Tuple#writeMap(EntryWriter).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/Tuple#writeMap(EntryWriter).mjava","sourceNew":"  @Override\n  public void writeMap(EntryWriter ew) throws IOException {\n    if(fieldNames == null) {\n      fields.forEach((k, v) -> {\n        try {\n          ew.put((String) k, v);\n        } catch (IOException e) {\n          throw new RuntimeException(e);\n        }\n      });\n    } else {\n      for(String fieldName : fieldNames) {\n        String label = fieldLabels.get(fieldName);\n        ew.put(label, fields.get(label));\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void writeMap(EntryWriter ew) throws IOException {\n    fields.forEach((k, v) -> {\n      try {\n        ew.put((String)k,v);\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"804a8d5358fe7b7563b85ee7838714d720b89272","date":1591624987,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/Tuple#writeMap(EntryWriter).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/Tuple#writeMap(EntryWriter).mjava","sourceNew":"  @Override\n  public void writeMap(EntryWriter ew) throws IOException {\n    if (fieldNames == null) {\n      fields.forEach((k, v) -> {\n        try {\n          ew.put((String) k, v);\n        } catch (IOException e) {\n          throw new RuntimeException(e);\n        }\n      });\n    } else {\n      for (String fieldName : fieldNames) {\n        String label = fieldLabels.get(fieldName);\n        ew.put(label, fields.get(label));\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void writeMap(EntryWriter ew) throws IOException {\n    if(fieldNames == null) {\n      fields.forEach((k, v) -> {\n        try {\n          ew.put((String) k, v);\n        } catch (IOException e) {\n          throw new RuntimeException(e);\n        }\n      });\n    } else {\n      for(String fieldName : fieldNames) {\n        String label = fieldLabels.get(fieldName);\n        ew.put(label, fields.get(label));\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6106d879512729bf1e4840d612448c4180d110c8":["8fe15a42e904812683ef9365c28389e14f639466"],"8fe15a42e904812683ef9365c28389e14f639466":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0192949680ef6812c36a6fd2c7344d74bb7a81d3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"199dfa410f1fdbfd3294106b04096cce5ed34b21":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","8fe15a42e904812683ef9365c28389e14f639466"],"7dbb74d09c5d364f22c2b7dfe3b0ab2f587cec81":["8fe15a42e904812683ef9365c28389e14f639466"],"804a8d5358fe7b7563b85ee7838714d720b89272":["7dbb74d09c5d364f22c2b7dfe3b0ab2f587cec81"],"ab68488225b6a6c357dda72ed11dedca9914a192":["8fe15a42e904812683ef9365c28389e14f639466","6106d879512729bf1e4840d612448c4180d110c8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["804a8d5358fe7b7563b85ee7838714d720b89272"],"0192949680ef6812c36a6fd2c7344d74bb7a81d3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"6106d879512729bf1e4840d612448c4180d110c8":["ab68488225b6a6c357dda72ed11dedca9914a192"],"8fe15a42e904812683ef9365c28389e14f639466":["6106d879512729bf1e4840d612448c4180d110c8","199dfa410f1fdbfd3294106b04096cce5ed34b21","7dbb74d09c5d364f22c2b7dfe3b0ab2f587cec81","ab68488225b6a6c357dda72ed11dedca9914a192"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8fe15a42e904812683ef9365c28389e14f639466","199dfa410f1fdbfd3294106b04096cce5ed34b21","0192949680ef6812c36a6fd2c7344d74bb7a81d3"],"199dfa410f1fdbfd3294106b04096cce5ed34b21":[],"7dbb74d09c5d364f22c2b7dfe3b0ab2f587cec81":["804a8d5358fe7b7563b85ee7838714d720b89272"],"804a8d5358fe7b7563b85ee7838714d720b89272":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ab68488225b6a6c357dda72ed11dedca9914a192":[],"0192949680ef6812c36a6fd2c7344d74bb7a81d3":["8fe15a42e904812683ef9365c28389e14f639466"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["199dfa410f1fdbfd3294106b04096cce5ed34b21","ab68488225b6a6c357dda72ed11dedca9914a192","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}