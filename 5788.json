{"path":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#assertFieldValues(SolrDocumentList,String,Object...).mjava","commits":[{"id":"faff74992839549208db29d95b9ad4a1d3846c79","date":1385672428,"type":0,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#assertFieldValues(SolrDocumentList,String,Object...).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Fails if the number of documents in the given SolrDocumentList differs\n   * from the given number of expected values, or if any of the values in the\n   * given field don't match the expected values in the same order.\n   */\n  public static void assertFieldValues(SolrDocumentList documents, String fieldName, Object... expectedValues) {\n    if (documents.size() != expectedValues.length) {\n      fail(\"Number of documents (\" + documents.size()\n          + \") is different from number of expected values (\" + expectedValues.length);\n    }\n    for (int docNum = 1 ; docNum <= documents.size() ; ++docNum) {\n      SolrDocument doc = documents.get(docNum - 1);\n      Object expected = expectedValues[docNum - 1];\n      Object actual = doc.get(fieldName);\n      if (null != expected && null != actual) {\n        if ( ! expected.equals(actual)) {\n          fail( \"Unexpected \" + fieldName + \" field value in document #\" + docNum\n              + \": expected=[\" + expected + \"], actual=[\" + actual + \"]\");\n        }\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"74f45af4339b0daf7a95c820ab88c1aea74fbce0","date":1387475327,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#assertFieldValues(SolrDocumentList,String,Object...).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Fails if the number of documents in the given SolrDocumentList differs\n   * from the given number of expected values, or if any of the values in the\n   * given field don't match the expected values in the same order.\n   */\n  public static void assertFieldValues(SolrDocumentList documents, String fieldName, Object... expectedValues) {\n    if (documents.size() != expectedValues.length) {\n      fail(\"Number of documents (\" + documents.size()\n          + \") is different from number of expected values (\" + expectedValues.length);\n    }\n    for (int docNum = 1 ; docNum <= documents.size() ; ++docNum) {\n      SolrDocument doc = documents.get(docNum - 1);\n      Object expected = expectedValues[docNum - 1];\n      Object actual = doc.get(fieldName);\n      if (null != expected && null != actual) {\n        if ( ! expected.equals(actual)) {\n          fail( \"Unexpected \" + fieldName + \" field value in document #\" + docNum\n              + \": expected=[\" + expected + \"], actual=[\" + actual + \"]\");\n        }\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5ba39ba201a572fd944ed71d888de0cd4f2957af","date":1404307334,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#assertFieldValues(SolrDocumentList,String,Object...).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/SolrTestCaseJ4#assertFieldValues(SolrDocumentList,String,Object...).mjava","sourceNew":"  /**\n   * Fails if the number of documents in the given SolrDocumentList differs\n   * from the given number of expected values, or if any of the values in the\n   * given field don't match the expected values in the same order.\n   */\n  public static void assertFieldValues(SolrDocumentList documents, String fieldName, Object... expectedValues) {\n    if (documents.size() != expectedValues.length) {\n      fail(\"Number of documents (\" + documents.size()\n          + \") is different from number of expected values (\" + expectedValues.length);\n    }\n    for (int docNum = 1 ; docNum <= documents.size() ; ++docNum) {\n      SolrDocument doc = documents.get(docNum - 1);\n      Object expected = expectedValues[docNum - 1];\n      Object actual = doc.get(fieldName);\n      if ((null == expected && null != actual) ||\n          (null != expected && null == actual) ||\n          (null != expected && null != actual && !expected.equals(actual))) {\n        fail(\"Unexpected \" + fieldName + \" field value in document #\" + docNum\n            + \": expected=[\" + expected + \"], actual=[\" + actual + \"]\");\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * Fails if the number of documents in the given SolrDocumentList differs\n   * from the given number of expected values, or if any of the values in the\n   * given field don't match the expected values in the same order.\n   */\n  public static void assertFieldValues(SolrDocumentList documents, String fieldName, Object... expectedValues) {\n    if (documents.size() != expectedValues.length) {\n      fail(\"Number of documents (\" + documents.size()\n          + \") is different from number of expected values (\" + expectedValues.length);\n    }\n    for (int docNum = 1 ; docNum <= documents.size() ; ++docNum) {\n      SolrDocument doc = documents.get(docNum - 1);\n      Object expected = expectedValues[docNum - 1];\n      Object actual = doc.get(fieldName);\n      if (null != expected && null != actual) {\n        if ( ! expected.equals(actual)) {\n          fail( \"Unexpected \" + fieldName + \" field value in document #\" + docNum\n              + \": expected=[\" + expected + \"], actual=[\" + actual + \"]\");\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","faff74992839549208db29d95b9ad4a1d3846c79"],"faff74992839549208db29d95b9ad4a1d3846c79":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5ba39ba201a572fd944ed71d888de0cd4f2957af":["faff74992839549208db29d95b9ad4a1d3846c79"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5ba39ba201a572fd944ed71d888de0cd4f2957af"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["74f45af4339b0daf7a95c820ab88c1aea74fbce0","faff74992839549208db29d95b9ad4a1d3846c79"],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":[],"faff74992839549208db29d95b9ad4a1d3846c79":["74f45af4339b0daf7a95c820ab88c1aea74fbce0","5ba39ba201a572fd944ed71d888de0cd4f2957af"],"5ba39ba201a572fd944ed71d888de0cd4f2957af":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["74f45af4339b0daf7a95c820ab88c1aea74fbce0","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}