{"path":"lucene/test-framework/src/java/org/apache/lucene/store/MockDirectoryWrapper#maybeThrowIOException(String).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/store/MockDirectoryWrapper#maybeThrowIOException(String).mjava","pathOld":"lucene/src/test-framework/java/org/apache/lucene/store/MockDirectoryWrapper#maybeThrowIOException(String).mjava","sourceNew":"  void maybeThrowIOException(String message) throws IOException {\n    if (randomIOExceptionRate > 0.0) {\n      int number = Math.abs(randomState.nextInt() % 1000);\n      if (number < randomIOExceptionRate*1000) {\n        if (LuceneTestCase.VERBOSE) {\n          System.out.println(Thread.currentThread().getName() + \": MockDirectoryWrapper: now throw random exception\" + (message == null ? \"\" : \" (\" + message + \")\"));\n          new Throwable().printStackTrace(System.out);\n        }\n        throw new IOException(\"a random IOException\" + (message == null ? \"\" : \"(\" + message + \")\"));\n      }\n    }\n  }\n\n","sourceOld":"  void maybeThrowIOException(String message) throws IOException {\n    if (randomIOExceptionRate > 0.0) {\n      int number = Math.abs(randomState.nextInt() % 1000);\n      if (number < randomIOExceptionRate*1000) {\n        if (LuceneTestCase.VERBOSE) {\n          System.out.println(Thread.currentThread().getName() + \": MockDirectoryWrapper: now throw random exception\" + (message == null ? \"\" : \" (\" + message + \")\"));\n          new Throwable().printStackTrace(System.out);\n        }\n        throw new IOException(\"a random IOException\" + (message == null ? \"\" : \"(\" + message + \")\"));\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"30e0912f3a3069b115cfea44ff612c44d6906386","date":1365631344,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/store/MockDirectoryWrapper#maybeThrowIOException(String).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/store/MockDirectoryWrapper#maybeThrowIOException(String).mjava","sourceNew":"  void maybeThrowIOException(String message) throws IOException {\n    if (randomState.nextDouble() < randomIOExceptionRate) {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(Thread.currentThread().getName() + \": MockDirectoryWrapper: now throw random exception\" + (message == null ? \"\" : \" (\" + message + \")\"));\n        new Throwable().printStackTrace(System.out);\n      }\n      throw new IOException(\"a random IOException\" + (message == null ? \"\" : \"(\" + message + \")\"));\n    }\n  }\n\n","sourceOld":"  void maybeThrowIOException(String message) throws IOException {\n    if (randomIOExceptionRate > 0.0) {\n      int number = Math.abs(randomState.nextInt() % 1000);\n      if (number < randomIOExceptionRate*1000) {\n        if (LuceneTestCase.VERBOSE) {\n          System.out.println(Thread.currentThread().getName() + \": MockDirectoryWrapper: now throw random exception\" + (message == null ? \"\" : \" (\" + message + \")\"));\n          new Throwable().printStackTrace(System.out);\n        }\n        throw new IOException(\"a random IOException\" + (message == null ? \"\" : \"(\" + message + \")\"));\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9854b7e4603d5c26909c27363aa7bc9fc4d11ef4","date":1368446242,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/store/MockDirectoryWrapper#maybeThrowIOException(String).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/store/MockDirectoryWrapper#maybeThrowIOException(String).mjava","sourceNew":"  void maybeThrowIOException(String message) throws IOException {\n    if (randomState.nextDouble() < randomIOExceptionRate) {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(Thread.currentThread().getName() + \": MockDirectoryWrapper: now throw random exception\" + (message == null ? \"\" : \" (\" + message + \")\"));\n        new Throwable().printStackTrace(System.out);\n      }\n      throw new IOException(\"a random IOException\" + (message == null ? \"\" : \" (\" + message + \")\"));\n    }\n  }\n\n","sourceOld":"  void maybeThrowIOException(String message) throws IOException {\n    if (randomState.nextDouble() < randomIOExceptionRate) {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(Thread.currentThread().getName() + \": MockDirectoryWrapper: now throw random exception\" + (message == null ? \"\" : \" (\" + message + \")\"));\n        new Throwable().printStackTrace(System.out);\n      }\n      throw new IOException(\"a random IOException\" + (message == null ? \"\" : \"(\" + message + \")\"));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e3ce1ef883d26aa73919aa2d53991726e96caa13","date":1445421402,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/store/MockDirectoryWrapper#maybeThrowIOException(String).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/store/MockDirectoryWrapper#maybeThrowIOException(String).mjava","sourceNew":"  void maybeThrowIOException(String message) throws IOException {\n    if (randomState.nextDouble() < randomIOExceptionRate) {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(Thread.currentThread().getName() + \": MockDirectoryWrapper: now throw random exception\" + (message == null ? \"\" : \" (\" + message + \")\"));\n      }\n      throw new IOException(\"a random IOException\" + (message == null ? \"\" : \" (\" + message + \")\"));\n    }\n  }\n\n","sourceOld":"  void maybeThrowIOException(String message) throws IOException {\n    if (randomState.nextDouble() < randomIOExceptionRate) {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(Thread.currentThread().getName() + \": MockDirectoryWrapper: now throw random exception\" + (message == null ? \"\" : \" (\" + message + \")\"));\n        new Throwable().printStackTrace(System.out);\n      }\n      throw new IOException(\"a random IOException\" + (message == null ? \"\" : \" (\" + message + \")\"));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1eee4175312c41f89aa23427f9e4edfc00deeaac","date":1446373190,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/store/MockDirectoryWrapper#maybeThrowIOException(String).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/store/MockDirectoryWrapper#maybeThrowIOException(String).mjava","sourceNew":"  void maybeThrowIOException(String message) throws IOException {\n    if (randomState.nextDouble() < randomIOExceptionRate) {\n      IOException ioe = new IOException(\"a random IOException\" + (message == null ? \"\" : \" (\" + message + \")\"));\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(Thread.currentThread().getName() + \": MockDirectoryWrapper: now throw random exception\" + (message == null ? \"\" : \" (\" + message + \")\"));\n        ioe.printStackTrace(System.out);\n      }\n      throw ioe;\n    }\n  }\n\n","sourceOld":"  void maybeThrowIOException(String message) throws IOException {\n    if (randomState.nextDouble() < randomIOExceptionRate) {\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(Thread.currentThread().getName() + \": MockDirectoryWrapper: now throw random exception\" + (message == null ? \"\" : \" (\" + message + \")\"));\n      }\n      throw new IOException(\"a random IOException\" + (message == null ? \"\" : \" (\" + message + \")\"));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9854b7e4603d5c26909c27363aa7bc9fc4d11ef4":["30e0912f3a3069b115cfea44ff612c44d6906386"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1eee4175312c41f89aa23427f9e4edfc00deeaac":["e3ce1ef883d26aa73919aa2d53991726e96caa13"],"e3ce1ef883d26aa73919aa2d53991726e96caa13":["9854b7e4603d5c26909c27363aa7bc9fc4d11ef4"],"30e0912f3a3069b115cfea44ff612c44d6906386":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1eee4175312c41f89aa23427f9e4edfc00deeaac"]},"commit2Childs":{"9854b7e4603d5c26909c27363aa7bc9fc4d11ef4":["e3ce1ef883d26aa73919aa2d53991726e96caa13"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["30e0912f3a3069b115cfea44ff612c44d6906386"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"1eee4175312c41f89aa23427f9e4edfc00deeaac":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e3ce1ef883d26aa73919aa2d53991726e96caa13":["1eee4175312c41f89aa23427f9e4edfc00deeaac"],"30e0912f3a3069b115cfea44ff612c44d6906386":["9854b7e4603d5c26909c27363aa7bc9fc4d11ef4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}