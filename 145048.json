{"path":"src/java/org/apache/lucene/search/BooleanScorer2#BooleanScorer2(Similarity,int,boolean).mjava","commits":[{"id":"6212677fdd165340d4284ad2530970c664042d6e","date":1180380790,"type":0,"author":"Michael Busch","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/BooleanScorer2#BooleanScorer2(Similarity,int,boolean).mjava","pathOld":"/dev/null","sourceNew":"  /** Create a BooleanScorer2.\n   * @param similarity The similarity to be used.\n   * @param minNrShouldMatch The minimum number of optional added scorers\n   *                         that should match during the search.\n   *                         In case no required scorers are added,\n   *                         at least one of the optional scorers will have to\n   *                         match during the search.\n   * @param allowDocsOutOfOrder Whether it is allowed to return documents out of order.\n   *                            This can accelerate the scoring of disjunction queries.                         \n   */\n  public BooleanScorer2(Similarity similarity, int minNrShouldMatch, boolean allowDocsOutOfOrder) {\n    super(similarity);\n    if (minNrShouldMatch < 0) {\n      throw new IllegalArgumentException(\"Minimum number of optional scorers should not be negative\");\n    }\n    coordinator = new Coordinator();\n    this.minNrShouldMatch = minNrShouldMatch;\n    this.allowDocsOutOfOrder = allowDocsOutOfOrder;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17563f8c3ca7e14d56ce4dcbb3fe9b042ba613cc","date":1241865401,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/BooleanScorer2#BooleanScorer2(Similarity,int,boolean).mjava","pathOld":"src/java/org/apache/lucene/search/BooleanScorer2#BooleanScorer2(Similarity,int,boolean).mjava","sourceNew":"  /** Create a BooleanScorer2.\n   * @param similarity The similarity to be used.\n   * @param minNrShouldMatch The minimum number of optional added scorers\n   *                         that should match during the search.\n   *                         In case no required scorers are added,\n   *                         at least one of the optional scorers will have to\n   *                         match during the search.\n   * @param allowDocsOutOfOrder Whether it is allowed to return documents out of order.\n   *                            This can accelerate the scoring of disjunction queries.                         \n   */\n  public BooleanScorer2(Similarity similarity, int minNrShouldMatch, boolean allowDocsOutOfOrder) throws IOException {\n    super(similarity);\n    if (minNrShouldMatch < 0) {\n      throw new IllegalArgumentException(\"Minimum number of optional scorers should not be negative\");\n    }\n    coordinator = new Coordinator();\n    this.minNrShouldMatch = minNrShouldMatch;\n    this.allowDocsOutOfOrder = allowDocsOutOfOrder;\n  }\n\n","sourceOld":"  /** Create a BooleanScorer2.\n   * @param similarity The similarity to be used.\n   * @param minNrShouldMatch The minimum number of optional added scorers\n   *                         that should match during the search.\n   *                         In case no required scorers are added,\n   *                         at least one of the optional scorers will have to\n   *                         match during the search.\n   * @param allowDocsOutOfOrder Whether it is allowed to return documents out of order.\n   *                            This can accelerate the scoring of disjunction queries.                         \n   */\n  public BooleanScorer2(Similarity similarity, int minNrShouldMatch, boolean allowDocsOutOfOrder) {\n    super(similarity);\n    if (minNrShouldMatch < 0) {\n      throw new IllegalArgumentException(\"Minimum number of optional scorers should not be negative\");\n    }\n    coordinator = new Coordinator();\n    this.minNrShouldMatch = minNrShouldMatch;\n    this.allowDocsOutOfOrder = allowDocsOutOfOrder;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"052fac7830290bd38a04cddee1a121ee07656b56","date":1245780702,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"src/java/org/apache/lucene/search/BooleanScorer2#BooleanScorer2(Similarity,int,boolean).mjava","sourceNew":null,"sourceOld":"  /** Create a BooleanScorer2.\n   * @param similarity The similarity to be used.\n   * @param minNrShouldMatch The minimum number of optional added scorers\n   *                         that should match during the search.\n   *                         In case no required scorers are added,\n   *                         at least one of the optional scorers will have to\n   *                         match during the search.\n   * @param allowDocsOutOfOrder Whether it is allowed to return documents out of order.\n   *                            This can accelerate the scoring of disjunction queries.                         \n   */\n  public BooleanScorer2(Similarity similarity, int minNrShouldMatch, boolean allowDocsOutOfOrder) throws IOException {\n    super(similarity);\n    if (minNrShouldMatch < 0) {\n      throw new IllegalArgumentException(\"Minimum number of optional scorers should not be negative\");\n    }\n    coordinator = new Coordinator();\n    this.minNrShouldMatch = minNrShouldMatch;\n    this.allowDocsOutOfOrder = allowDocsOutOfOrder;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"17563f8c3ca7e14d56ce4dcbb3fe9b042ba613cc":["6212677fdd165340d4284ad2530970c664042d6e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6212677fdd165340d4284ad2530970c664042d6e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"052fac7830290bd38a04cddee1a121ee07656b56":["17563f8c3ca7e14d56ce4dcbb3fe9b042ba613cc"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["052fac7830290bd38a04cddee1a121ee07656b56"]},"commit2Childs":{"17563f8c3ca7e14d56ce4dcbb3fe9b042ba613cc":["052fac7830290bd38a04cddee1a121ee07656b56"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6212677fdd165340d4284ad2530970c664042d6e"],"6212677fdd165340d4284ad2530970c664042d6e":["17563f8c3ca7e14d56ce4dcbb3fe9b042ba613cc"],"052fac7830290bd38a04cddee1a121ee07656b56":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}