{"path":"lucene/test-framework/src/java/org/apache/lucene/index/BasePostingsFormatTestCase.SeedPostings#_nextDoc().mjava","commits":[{"id":"2fe4b12f0dcf02b1690143f2ad02d8f89625eb36","date":1349174553,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BasePostingsFormatTestCase.SeedPostings#_nextDoc().mjava","pathOld":"/dev/null","sourceNew":"    private int _nextDoc() {\n      // Must consume random:\n      while(posUpto < freq) {\n        nextPosition();\n      }\n\n      if (upto < docFreq) {\n        if (upto == 0 && docRandom.nextBoolean()) {\n          // Sometimes index docID = 0\n        } else if (maxDocSpacing == 1) {\n          docID++;\n        } else {\n          // TODO: sometimes have a biggish gap here!\n          docID += _TestUtil.nextInt(docRandom, 1, maxDocSpacing);\n        }\n\n        if (random.nextInt(200) == 17) {\n          freq = _TestUtil.nextInt(random, 1, 1000);\n        } else if (random.nextInt(10) == 17) {\n          freq = _TestUtil.nextInt(random, 1, 20);\n        } else {\n          freq = _TestUtil.nextInt(random, 1, 4);\n        }\n\n        pos = 0;\n        offset = 0;\n        posUpto = 0;\n        posSpacing = _TestUtil.nextInt(random, 1, 100);\n\n        upto++;\n        return docID;\n      } else {\n        return docID = NO_MORE_DOCS;\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6613659748fe4411a7dcf85266e55db1f95f7315","date":1392773913,"type":3,"author":"Benson Margulies","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BasePostingsFormatTestCase.SeedPostings#_nextDoc().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/BasePostingsFormatTestCase.SeedPostings#_nextDoc().mjava","sourceNew":"    private int _nextDoc() {\n      // Must consume random:\n      while(posUpto < freq) {\n        nextPosition();\n      }\n\n      if (upto < docFreq) {\n        if (upto == 0 && docRandom.nextBoolean()) {\n          // Sometimes index docID = 0\n        } else if (maxDocSpacing == 1) {\n          docID++;\n        } else {\n          // TODO: sometimes have a biggish gap here!\n          docID += TestUtil.nextInt(docRandom, 1, maxDocSpacing);\n        }\n\n        if (random.nextInt(200) == 17) {\n          freq = TestUtil.nextInt(random, 1, 1000);\n        } else if (random.nextInt(10) == 17) {\n          freq = TestUtil.nextInt(random, 1, 20);\n        } else {\n          freq = TestUtil.nextInt(random, 1, 4);\n        }\n\n        pos = 0;\n        offset = 0;\n        posUpto = 0;\n        posSpacing = TestUtil.nextInt(random, 1, 100);\n\n        upto++;\n        return docID;\n      } else {\n        return docID = NO_MORE_DOCS;\n      }\n    }\n\n","sourceOld":"    private int _nextDoc() {\n      // Must consume random:\n      while(posUpto < freq) {\n        nextPosition();\n      }\n\n      if (upto < docFreq) {\n        if (upto == 0 && docRandom.nextBoolean()) {\n          // Sometimes index docID = 0\n        } else if (maxDocSpacing == 1) {\n          docID++;\n        } else {\n          // TODO: sometimes have a biggish gap here!\n          docID += _TestUtil.nextInt(docRandom, 1, maxDocSpacing);\n        }\n\n        if (random.nextInt(200) == 17) {\n          freq = _TestUtil.nextInt(random, 1, 1000);\n        } else if (random.nextInt(10) == 17) {\n          freq = _TestUtil.nextInt(random, 1, 20);\n        } else {\n          freq = _TestUtil.nextInt(random, 1, 4);\n        }\n\n        pos = 0;\n        offset = 0;\n        posUpto = 0;\n        posSpacing = _TestUtil.nextInt(random, 1, 100);\n\n        upto++;\n        return docID;\n      } else {\n        return docID = NO_MORE_DOCS;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3e8715d826e588419327562287d5d6a8040d63d6","date":1427987148,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/RandomPostingsTester.SeedPostings#_nextDoc().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/BasePostingsFormatTestCase.SeedPostings#_nextDoc().mjava","sourceNew":"    private int _nextDoc() {\n      if (docID == -1) {\n        docID = 0;\n      }\n      // Must consume random:\n      while(posUpto < freq) {\n        nextPosition();\n      }\n\n      if (upto < docFreq) {\n        if (upto == 0 && docRandom.nextBoolean()) {\n          // Sometimes index docID = 0\n        } else if (maxDocSpacing == 1) {\n          docID++;\n        } else {\n          // TODO: sometimes have a biggish gap here!\n          docID += TestUtil.nextInt(docRandom, 1, maxDocSpacing);\n        }\n\n        if (random.nextInt(200) == 17) {\n          freq = TestUtil.nextInt(random, 1, 1000);\n        } else if (random.nextInt(10) == 17) {\n          freq = TestUtil.nextInt(random, 1, 20);\n        } else {\n          freq = TestUtil.nextInt(random, 1, 4);\n        }\n\n        pos = 0;\n        offset = 0;\n        posUpto = 0;\n        posSpacing = TestUtil.nextInt(random, 1, 100);\n\n        upto++;\n        return docID;\n      } else {\n        return docID = NO_MORE_DOCS;\n      }\n    }\n\n","sourceOld":"    private int _nextDoc() {\n      // Must consume random:\n      while(posUpto < freq) {\n        nextPosition();\n      }\n\n      if (upto < docFreq) {\n        if (upto == 0 && docRandom.nextBoolean()) {\n          // Sometimes index docID = 0\n        } else if (maxDocSpacing == 1) {\n          docID++;\n        } else {\n          // TODO: sometimes have a biggish gap here!\n          docID += TestUtil.nextInt(docRandom, 1, maxDocSpacing);\n        }\n\n        if (random.nextInt(200) == 17) {\n          freq = TestUtil.nextInt(random, 1, 1000);\n        } else if (random.nextInt(10) == 17) {\n          freq = TestUtil.nextInt(random, 1, 20);\n        } else {\n          freq = TestUtil.nextInt(random, 1, 4);\n        }\n\n        pos = 0;\n        offset = 0;\n        posUpto = 0;\n        posSpacing = TestUtil.nextInt(random, 1, 100);\n\n        upto++;\n        return docID;\n      } else {\n        return docID = NO_MORE_DOCS;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d2638f781be724518ff6c2263d14a48cf6e68017","date":1427989059,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/RandomPostingsTester.SeedPostings#_nextDoc().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/BasePostingsFormatTestCase.SeedPostings#_nextDoc().mjava","sourceNew":"    private int _nextDoc() {\n      if (docID == -1) {\n        docID = 0;\n      }\n      // Must consume random:\n      while(posUpto < freq) {\n        nextPosition();\n      }\n\n      if (upto < docFreq) {\n        if (upto == 0 && docRandom.nextBoolean()) {\n          // Sometimes index docID = 0\n        } else if (maxDocSpacing == 1) {\n          docID++;\n        } else {\n          // TODO: sometimes have a biggish gap here!\n          docID += TestUtil.nextInt(docRandom, 1, maxDocSpacing);\n        }\n\n        if (random.nextInt(200) == 17) {\n          freq = TestUtil.nextInt(random, 1, 1000);\n        } else if (random.nextInt(10) == 17) {\n          freq = TestUtil.nextInt(random, 1, 20);\n        } else {\n          freq = TestUtil.nextInt(random, 1, 4);\n        }\n\n        pos = 0;\n        offset = 0;\n        posUpto = 0;\n        posSpacing = TestUtil.nextInt(random, 1, 100);\n\n        upto++;\n        return docID;\n      } else {\n        return docID = NO_MORE_DOCS;\n      }\n    }\n\n","sourceOld":"    private int _nextDoc() {\n      // Must consume random:\n      while(posUpto < freq) {\n        nextPosition();\n      }\n\n      if (upto < docFreq) {\n        if (upto == 0 && docRandom.nextBoolean()) {\n          // Sometimes index docID = 0\n        } else if (maxDocSpacing == 1) {\n          docID++;\n        } else {\n          // TODO: sometimes have a biggish gap here!\n          docID += TestUtil.nextInt(docRandom, 1, maxDocSpacing);\n        }\n\n        if (random.nextInt(200) == 17) {\n          freq = TestUtil.nextInt(random, 1, 1000);\n        } else if (random.nextInt(10) == 17) {\n          freq = TestUtil.nextInt(random, 1, 20);\n        } else {\n          freq = TestUtil.nextInt(random, 1, 4);\n        }\n\n        pos = 0;\n        offset = 0;\n        posUpto = 0;\n        posSpacing = TestUtil.nextInt(random, 1, 100);\n\n        upto++;\n        return docID;\n      } else {\n        return docID = NO_MORE_DOCS;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6613659748fe4411a7dcf85266e55db1f95f7315":["2fe4b12f0dcf02b1690143f2ad02d8f89625eb36"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d2638f781be724518ff6c2263d14a48cf6e68017":["6613659748fe4411a7dcf85266e55db1f95f7315","3e8715d826e588419327562287d5d6a8040d63d6"],"3e8715d826e588419327562287d5d6a8040d63d6":["6613659748fe4411a7dcf85266e55db1f95f7315"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3e8715d826e588419327562287d5d6a8040d63d6"],"2fe4b12f0dcf02b1690143f2ad02d8f89625eb36":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"6613659748fe4411a7dcf85266e55db1f95f7315":["d2638f781be724518ff6c2263d14a48cf6e68017","3e8715d826e588419327562287d5d6a8040d63d6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["2fe4b12f0dcf02b1690143f2ad02d8f89625eb36"],"d2638f781be724518ff6c2263d14a48cf6e68017":[],"3e8715d826e588419327562287d5d6a8040d63d6":["d2638f781be724518ff6c2263d14a48cf6e68017","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"2fe4b12f0dcf02b1690143f2ad02d8f89625eb36":["6613659748fe4411a7dcf85266e55db1f95f7315"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d2638f781be724518ff6c2263d14a48cf6e68017","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}