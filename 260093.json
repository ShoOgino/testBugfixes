{"path":"solr/core/src/java/org/apache/solr/handler/CdcrUpdateLogSynchronizer.UpdateLogSynchronisation#getLeaderUrl().mjava","commits":[{"id":"86290366cefc1b9d4eced13b430858c4a4c0421d","date":1432321109,"type":0,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/CdcrUpdateLogSynchronizer.UpdateLogSynchronisation#getLeaderUrl().mjava","pathOld":"/dev/null","sourceNew":"    private String getLeaderUrl() {\n      ZkController zkController = core.getCoreDescriptor().getCoreContainer().getZkController();\n      ClusterState cstate = zkController.getClusterState();\n      ZkNodeProps leaderProps = cstate.getLeader(collection, shardId);\n      if (leaderProps == null) { // we might not have a leader yet, returns null\n        return null;\n      }\n      ZkCoreNodeProps nodeProps = new ZkCoreNodeProps(leaderProps);\n      return nodeProps.getCoreUrl();\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"04c8df3f10a676c3de5dbf390f17a2de2d45cacd","date":1461615626,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/CdcrUpdateLogSynchronizer.UpdateLogSynchronisation#getLeaderUrl().mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/CdcrUpdateLogSynchronizer.UpdateLogSynchronisation#getLeaderUrl().mjava","sourceNew":"    private String getLeaderUrl() {\n      ZkController zkController = core.getCoreDescriptor().getCoreContainer().getZkController();\n      ClusterState cstate = zkController.getClusterState();\n      DocCollection docCollection = cstate.getCollection(collection);\n      ZkNodeProps leaderProps = docCollection.getLeader(shardId);\n      if (leaderProps == null) { // we might not have a leader yet, returns null\n        return null;\n      }\n      ZkCoreNodeProps nodeProps = new ZkCoreNodeProps(leaderProps);\n      return nodeProps.getCoreUrl();\n    }\n\n","sourceOld":"    private String getLeaderUrl() {\n      ZkController zkController = core.getCoreDescriptor().getCoreContainer().getZkController();\n      ClusterState cstate = zkController.getClusterState();\n      ZkNodeProps leaderProps = cstate.getLeader(collection, shardId);\n      if (leaderProps == null) { // we might not have a leader yet, returns null\n        return null;\n      }\n      ZkCoreNodeProps nodeProps = new ZkCoreNodeProps(leaderProps);\n      return nodeProps.getCoreUrl();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f7f901826e47f75f810d7aae24b0455d21ea1fe2","date":1461678892,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/CdcrUpdateLogSynchronizer.UpdateLogSynchronisation#getLeaderUrl().mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/CdcrUpdateLogSynchronizer.UpdateLogSynchronisation#getLeaderUrl().mjava","sourceNew":"    private String getLeaderUrl() {\n      ZkController zkController = core.getCoreDescriptor().getCoreContainer().getZkController();\n      ClusterState cstate = zkController.getClusterState();\n      DocCollection docCollection = cstate.getCollection(collection);\n      ZkNodeProps leaderProps = docCollection.getLeader(shardId);\n      if (leaderProps == null) { // we might not have a leader yet, returns null\n        return null;\n      }\n      ZkCoreNodeProps nodeProps = new ZkCoreNodeProps(leaderProps);\n      return nodeProps.getCoreUrl();\n    }\n\n","sourceOld":"    private String getLeaderUrl() {\n      ZkController zkController = core.getCoreDescriptor().getCoreContainer().getZkController();\n      ClusterState cstate = zkController.getClusterState();\n      ZkNodeProps leaderProps = cstate.getLeader(collection, shardId);\n      if (leaderProps == null) { // we might not have a leader yet, returns null\n        return null;\n      }\n      ZkCoreNodeProps nodeProps = new ZkCoreNodeProps(leaderProps);\n      return nodeProps.getCoreUrl();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"729cb470f975115d4c60517b2cb7c42e37a7a2e1","date":1492041760,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/CdcrUpdateLogSynchronizer.UpdateLogSynchronisation#getLeaderUrl().mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/CdcrUpdateLogSynchronizer.UpdateLogSynchronisation#getLeaderUrl().mjava","sourceNew":"    private String getLeaderUrl() {\n      ZkController zkController = core.getCoreContainer().getZkController();\n      ClusterState cstate = zkController.getClusterState();\n      DocCollection docCollection = cstate.getCollection(collection);\n      ZkNodeProps leaderProps = docCollection.getLeader(shardId);\n      if (leaderProps == null) { // we might not have a leader yet, returns null\n        return null;\n      }\n      ZkCoreNodeProps nodeProps = new ZkCoreNodeProps(leaderProps);\n      return nodeProps.getCoreUrl();\n    }\n\n","sourceOld":"    private String getLeaderUrl() {\n      ZkController zkController = core.getCoreDescriptor().getCoreContainer().getZkController();\n      ClusterState cstate = zkController.getClusterState();\n      DocCollection docCollection = cstate.getCollection(collection);\n      ZkNodeProps leaderProps = docCollection.getLeader(shardId);\n      if (leaderProps == null) { // we might not have a leader yet, returns null\n        return null;\n      }\n      ZkCoreNodeProps nodeProps = new ZkCoreNodeProps(leaderProps);\n      return nodeProps.getCoreUrl();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54ca69905c5d9d1529286f06ab1d12c68f6c13cb","date":1492683554,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/CdcrUpdateLogSynchronizer.UpdateLogSynchronisation#getLeaderUrl().mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/CdcrUpdateLogSynchronizer.UpdateLogSynchronisation#getLeaderUrl().mjava","sourceNew":"    private String getLeaderUrl() {\n      ZkController zkController = core.getCoreContainer().getZkController();\n      ClusterState cstate = zkController.getClusterState();\n      DocCollection docCollection = cstate.getCollection(collection);\n      ZkNodeProps leaderProps = docCollection.getLeader(shardId);\n      if (leaderProps == null) { // we might not have a leader yet, returns null\n        return null;\n      }\n      ZkCoreNodeProps nodeProps = new ZkCoreNodeProps(leaderProps);\n      return nodeProps.getCoreUrl();\n    }\n\n","sourceOld":"    private String getLeaderUrl() {\n      ZkController zkController = core.getCoreDescriptor().getCoreContainer().getZkController();\n      ClusterState cstate = zkController.getClusterState();\n      DocCollection docCollection = cstate.getCollection(collection);\n      ZkNodeProps leaderProps = docCollection.getLeader(shardId);\n      if (leaderProps == null) { // we might not have a leader yet, returns null\n        return null;\n      }\n      ZkCoreNodeProps nodeProps = new ZkCoreNodeProps(leaderProps);\n      return nodeProps.getCoreUrl();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"23ec6d2969d61cadbfd0a5452e9be1f9999e8aa1","date":1598647393,"type":4,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/handler/CdcrUpdateLogSynchronizer.UpdateLogSynchronisation#getLeaderUrl().mjava","sourceNew":null,"sourceOld":"    private String getLeaderUrl() {\n      ZkController zkController = core.getCoreContainer().getZkController();\n      ClusterState cstate = zkController.getClusterState();\n      DocCollection docCollection = cstate.getCollection(collection);\n      ZkNodeProps leaderProps = docCollection.getLeader(shardId);\n      if (leaderProps == null) { // we might not have a leader yet, returns null\n        return null;\n      }\n      ZkCoreNodeProps nodeProps = new ZkCoreNodeProps(leaderProps);\n      return nodeProps.getCoreUrl();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":["f7f901826e47f75f810d7aae24b0455d21ea1fe2"],"86290366cefc1b9d4eced13b430858c4a4c0421d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f7f901826e47f75f810d7aae24b0455d21ea1fe2":["86290366cefc1b9d4eced13b430858c4a4c0421d","04c8df3f10a676c3de5dbf390f17a2de2d45cacd"],"23ec6d2969d61cadbfd0a5452e9be1f9999e8aa1":["729cb470f975115d4c60517b2cb7c42e37a7a2e1"],"729cb470f975115d4c60517b2cb7c42e37a7a2e1":["f7f901826e47f75f810d7aae24b0455d21ea1fe2"],"04c8df3f10a676c3de5dbf390f17a2de2d45cacd":["86290366cefc1b9d4eced13b430858c4a4c0421d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["23ec6d2969d61cadbfd0a5452e9be1f9999e8aa1"]},"commit2Childs":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":[],"86290366cefc1b9d4eced13b430858c4a4c0421d":["f7f901826e47f75f810d7aae24b0455d21ea1fe2","04c8df3f10a676c3de5dbf390f17a2de2d45cacd"],"f7f901826e47f75f810d7aae24b0455d21ea1fe2":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","729cb470f975115d4c60517b2cb7c42e37a7a2e1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["86290366cefc1b9d4eced13b430858c4a4c0421d"],"23ec6d2969d61cadbfd0a5452e9be1f9999e8aa1":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"04c8df3f10a676c3de5dbf390f17a2de2d45cacd":["f7f901826e47f75f810d7aae24b0455d21ea1fe2"],"729cb470f975115d4c60517b2cb7c42e37a7a2e1":["23ec6d2969d61cadbfd0a5452e9be1f9999e8aa1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}