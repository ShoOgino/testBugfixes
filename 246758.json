{"path":"lucene/core/src/java/org/apache/lucene/index/IndexingChain#getDocValuesLeafReader().mjava","commits":[{"id":"7a6f8af01d9b3067b143bbdc0a492720e2af97cf","date":1600157724,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexingChain#getDocValuesLeafReader().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DefaultIndexingChain#getDocValuesLeafReader().mjava","sourceNew":"  private LeafReader getDocValuesLeafReader() {\n    return new DocValuesLeafReader() {\n      @Override\n      public NumericDocValues getNumericDocValues(String field) {\n        PerField pf = getPerField(field);\n        if (pf == null) {\n          return null;\n        }\n        if (pf.fieldInfo.getDocValuesType() == DocValuesType.NUMERIC) {\n          return (NumericDocValues) pf.docValuesWriter.getDocValues();\n        }\n        return null;\n      }\n\n      @Override\n      public BinaryDocValues getBinaryDocValues(String field) {\n        PerField pf = getPerField(field);\n        if (pf == null) {\n          return null;\n        }\n        if (pf.fieldInfo.getDocValuesType() == DocValuesType.BINARY) {\n          return (BinaryDocValues) pf.docValuesWriter.getDocValues();\n        }\n        return null;\n      }\n\n      @Override\n      public SortedDocValues getSortedDocValues(String field) throws IOException {\n        PerField pf = getPerField(field);\n        if (pf == null) {\n          return null;\n        }\n        if (pf.fieldInfo.getDocValuesType() == DocValuesType.SORTED) {\n          return (SortedDocValues) pf.docValuesWriter.getDocValues();\n        }\n        return null;\n      }\n\n      @Override\n      public SortedNumericDocValues getSortedNumericDocValues(String field) throws IOException {\n        PerField pf = getPerField(field);\n        if (pf == null) {\n          return null;\n        }\n        if (pf.fieldInfo.getDocValuesType() == DocValuesType.SORTED_NUMERIC) {\n          return (SortedNumericDocValues) pf.docValuesWriter.getDocValues();\n        }\n        return null;\n      }\n\n      @Override\n      public SortedSetDocValues getSortedSetDocValues(String field) throws IOException {\n        PerField pf = getPerField(field);\n        if (pf == null) {\n          return null;\n        }\n        if (pf.fieldInfo.getDocValuesType() == DocValuesType.SORTED_SET) {\n          return (SortedSetDocValues) pf.docValuesWriter.getDocValues();\n        }\n        return null;\n      }\n\n      @Override\n      public FieldInfos getFieldInfos() {\n        return fieldInfos.finish();\n      }\n\n    };\n  }\n\n","sourceOld":"  private LeafReader getDocValuesLeafReader() {\n    return new DocValuesLeafReader() {\n      @Override\n      public NumericDocValues getNumericDocValues(String field) {\n        PerField pf = getPerField(field);\n        if (pf == null) {\n          return null;\n        }\n        if (pf.fieldInfo.getDocValuesType() == DocValuesType.NUMERIC) {\n          return (NumericDocValues) pf.docValuesWriter.getDocValues();\n        }\n        return null;\n      }\n\n      @Override\n      public BinaryDocValues getBinaryDocValues(String field) {\n        PerField pf = getPerField(field);\n        if (pf == null) {\n          return null;\n        }\n        if (pf.fieldInfo.getDocValuesType() == DocValuesType.BINARY) {\n          return (BinaryDocValues) pf.docValuesWriter.getDocValues();\n        }\n        return null;\n      }\n\n      @Override\n      public SortedDocValues getSortedDocValues(String field) throws IOException {\n        PerField pf = getPerField(field);\n        if (pf == null) {\n          return null;\n        }\n        if (pf.fieldInfo.getDocValuesType() == DocValuesType.SORTED) {\n          return (SortedDocValues) pf.docValuesWriter.getDocValues();\n        }\n        return null;\n      }\n\n      @Override\n      public SortedNumericDocValues getSortedNumericDocValues(String field) throws IOException {\n        PerField pf = getPerField(field);\n        if (pf == null) {\n          return null;\n        }\n        if (pf.fieldInfo.getDocValuesType() == DocValuesType.SORTED_NUMERIC) {\n          return (SortedNumericDocValues) pf.docValuesWriter.getDocValues();\n        }\n        return null;\n      }\n\n      @Override\n      public SortedSetDocValues getSortedSetDocValues(String field) throws IOException {\n        PerField pf = getPerField(field);\n        if (pf == null) {\n          return null;\n        }\n        if (pf.fieldInfo.getDocValuesType() == DocValuesType.SORTED_SET) {\n          return (SortedSetDocValues) pf.docValuesWriter.getDocValues();\n        }\n        return null;\n      }\n\n      @Override\n      public FieldInfos getFieldInfos() {\n        return fieldInfos.finish();\n      }\n\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"680b6449f09827f58fe987aff279e014c311d966","date":1600247985,"type":1,"author":"noblepaul","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexingChain#getDocValuesLeafReader().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DefaultIndexingChain#getDocValuesLeafReader().mjava","sourceNew":"  private LeafReader getDocValuesLeafReader() {\n    return new DocValuesLeafReader() {\n      @Override\n      public NumericDocValues getNumericDocValues(String field) {\n        PerField pf = getPerField(field);\n        if (pf == null) {\n          return null;\n        }\n        if (pf.fieldInfo.getDocValuesType() == DocValuesType.NUMERIC) {\n          return (NumericDocValues) pf.docValuesWriter.getDocValues();\n        }\n        return null;\n      }\n\n      @Override\n      public BinaryDocValues getBinaryDocValues(String field) {\n        PerField pf = getPerField(field);\n        if (pf == null) {\n          return null;\n        }\n        if (pf.fieldInfo.getDocValuesType() == DocValuesType.BINARY) {\n          return (BinaryDocValues) pf.docValuesWriter.getDocValues();\n        }\n        return null;\n      }\n\n      @Override\n      public SortedDocValues getSortedDocValues(String field) throws IOException {\n        PerField pf = getPerField(field);\n        if (pf == null) {\n          return null;\n        }\n        if (pf.fieldInfo.getDocValuesType() == DocValuesType.SORTED) {\n          return (SortedDocValues) pf.docValuesWriter.getDocValues();\n        }\n        return null;\n      }\n\n      @Override\n      public SortedNumericDocValues getSortedNumericDocValues(String field) throws IOException {\n        PerField pf = getPerField(field);\n        if (pf == null) {\n          return null;\n        }\n        if (pf.fieldInfo.getDocValuesType() == DocValuesType.SORTED_NUMERIC) {\n          return (SortedNumericDocValues) pf.docValuesWriter.getDocValues();\n        }\n        return null;\n      }\n\n      @Override\n      public SortedSetDocValues getSortedSetDocValues(String field) throws IOException {\n        PerField pf = getPerField(field);\n        if (pf == null) {\n          return null;\n        }\n        if (pf.fieldInfo.getDocValuesType() == DocValuesType.SORTED_SET) {\n          return (SortedSetDocValues) pf.docValuesWriter.getDocValues();\n        }\n        return null;\n      }\n\n      @Override\n      public FieldInfos getFieldInfos() {\n        return fieldInfos.finish();\n      }\n\n    };\n  }\n\n","sourceOld":"  private LeafReader getDocValuesLeafReader() {\n    return new DocValuesLeafReader() {\n      @Override\n      public NumericDocValues getNumericDocValues(String field) {\n        PerField pf = getPerField(field);\n        if (pf == null) {\n          return null;\n        }\n        if (pf.fieldInfo.getDocValuesType() == DocValuesType.NUMERIC) {\n          return (NumericDocValues) pf.docValuesWriter.getDocValues();\n        }\n        return null;\n      }\n\n      @Override\n      public BinaryDocValues getBinaryDocValues(String field) {\n        PerField pf = getPerField(field);\n        if (pf == null) {\n          return null;\n        }\n        if (pf.fieldInfo.getDocValuesType() == DocValuesType.BINARY) {\n          return (BinaryDocValues) pf.docValuesWriter.getDocValues();\n        }\n        return null;\n      }\n\n      @Override\n      public SortedDocValues getSortedDocValues(String field) throws IOException {\n        PerField pf = getPerField(field);\n        if (pf == null) {\n          return null;\n        }\n        if (pf.fieldInfo.getDocValuesType() == DocValuesType.SORTED) {\n          return (SortedDocValues) pf.docValuesWriter.getDocValues();\n        }\n        return null;\n      }\n\n      @Override\n      public SortedNumericDocValues getSortedNumericDocValues(String field) throws IOException {\n        PerField pf = getPerField(field);\n        if (pf == null) {\n          return null;\n        }\n        if (pf.fieldInfo.getDocValuesType() == DocValuesType.SORTED_NUMERIC) {\n          return (SortedNumericDocValues) pf.docValuesWriter.getDocValues();\n        }\n        return null;\n      }\n\n      @Override\n      public SortedSetDocValues getSortedSetDocValues(String field) throws IOException {\n        PerField pf = getPerField(field);\n        if (pf == null) {\n          return null;\n        }\n        if (pf.fieldInfo.getDocValuesType() == DocValuesType.SORTED_SET) {\n          return (SortedSetDocValues) pf.docValuesWriter.getDocValues();\n        }\n        return null;\n      }\n\n      @Override\n      public FieldInfos getFieldInfos() {\n        return fieldInfos.finish();\n      }\n\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"680b6449f09827f58fe987aff279e014c311d966":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","7a6f8af01d9b3067b143bbdc0a492720e2af97cf"],"7a6f8af01d9b3067b143bbdc0a492720e2af97cf":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["680b6449f09827f58fe987aff279e014c311d966"]},"commit2Childs":{"680b6449f09827f58fe987aff279e014c311d966":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"7a6f8af01d9b3067b143bbdc0a492720e2af97cf":["680b6449f09827f58fe987aff279e014c311d966"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["680b6449f09827f58fe987aff279e014c311d966","7a6f8af01d9b3067b143bbdc0a492720e2af97cf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}