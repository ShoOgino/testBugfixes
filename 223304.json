{"path":"lucene/core/src/java/org/apache/lucene/index/FrozenBufferedUpdates#apply(BufferedUpdatesStream.SegmentState[]).mjava","commits":[{"id":"f4363cd33f6eff7fb4753574a441e2d18c1022a4","date":1498067235,"type":0,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/FrozenBufferedUpdates#apply(BufferedUpdatesStream.SegmentState[]).mjava","pathOld":"/dev/null","sourceNew":"  /** Applies pending delete-by-term, delete-by-query and doc values updates to all segments in the index, returning\n   *  the number of new deleted or updated documents. */\n  private synchronized long apply(BufferedUpdatesStream.SegmentState[] segStates) throws IOException {\n\n    if (delGen == -1) {\n      // we were not yet pushed\n      throw new IllegalArgumentException(\"gen is not yet set; call BufferedUpdatesStream.push first\");\n    }\n\n    if (applied.getCount() == 0) {\n      // already done\n      return totalDelCount;\n    }\n\n    if (privateSegment != null) {\n      assert segStates.length == 1;\n      assert privateSegment == segStates[0].reader.getSegmentInfo();\n    }\n\n    totalDelCount += applyTermDeletes(segStates);\n    totalDelCount += applyQueryDeletes(segStates);\n    totalDelCount += applyDocValuesUpdates(segStates);\n\n    return totalDelCount;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["b4a1e501646d5889b8128849329c2e6e52fc3615","4987206dabc9f3576bb1df72e987094a7dad6e4f"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b7dfa64bc2074fb87d0ca70095a644c1ead107e1","date":1498356339,"type":0,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/FrozenBufferedUpdates#apply(BufferedUpdatesStream.SegmentState[]).mjava","pathOld":"/dev/null","sourceNew":"  /** Applies pending delete-by-term, delete-by-query and doc values updates to all segments in the index, returning\n   *  the number of new deleted or updated documents. */\n  private synchronized long apply(BufferedUpdatesStream.SegmentState[] segStates) throws IOException {\n\n    if (delGen == -1) {\n      // we were not yet pushed\n      throw new IllegalArgumentException(\"gen is not yet set; call BufferedUpdatesStream.push first\");\n    }\n\n    if (applied.getCount() == 0) {\n      // already done\n      return totalDelCount;\n    }\n\n    if (privateSegment != null) {\n      assert segStates.length == 1;\n      assert privateSegment == segStates[0].reader.getSegmentInfo();\n    }\n\n    totalDelCount += applyTermDeletes(segStates);\n    totalDelCount += applyQueryDeletes(segStates);\n    totalDelCount += applyDocValuesUpdates(segStates);\n\n    return totalDelCount;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/FrozenBufferedUpdates#apply(BufferedUpdatesStream.SegmentState[]).mjava","pathOld":"/dev/null","sourceNew":"  /** Applies pending delete-by-term, delete-by-query and doc values updates to all segments in the index, returning\n   *  the number of new deleted or updated documents. */\n  private synchronized long apply(BufferedUpdatesStream.SegmentState[] segStates) throws IOException {\n\n    if (delGen == -1) {\n      // we were not yet pushed\n      throw new IllegalArgumentException(\"gen is not yet set; call BufferedUpdatesStream.push first\");\n    }\n\n    if (applied.getCount() == 0) {\n      // already done\n      return totalDelCount;\n    }\n\n    if (privateSegment != null) {\n      assert segStates.length == 1;\n      assert privateSegment == segStates[0].reader.getSegmentInfo();\n    }\n\n    totalDelCount += applyTermDeletes(segStates);\n    totalDelCount += applyQueryDeletes(segStates);\n    totalDelCount += applyDocValuesUpdates(segStates);\n\n    return totalDelCount;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b4a1e501646d5889b8128849329c2e6e52fc3615","date":1498729990,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/FrozenBufferedUpdates#apply(BufferedUpdatesStream.SegmentState[]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/FrozenBufferedUpdates#apply(BufferedUpdatesStream.SegmentState[]).mjava","sourceNew":"  /** Applies pending delete-by-term, delete-by-query and doc values updates to all segments in the index, returning\n   *  the number of new deleted or updated documents. */\n  private synchronized long apply(BufferedUpdatesStream.SegmentState[] segStates) throws IOException {\n\n    if (delGen == -1) {\n      // we were not yet pushed\n      throw new IllegalArgumentException(\"gen is not yet set; call BufferedUpdatesStream.push first\");\n    }\n\n    assert applied.getCount() != 0;\n\n    if (privateSegment != null) {\n      assert segStates.length == 1;\n      assert privateSegment == segStates[0].reader.getSegmentInfo();\n    }\n\n    totalDelCount += applyTermDeletes(segStates);\n    totalDelCount += applyQueryDeletes(segStates);\n    totalDelCount += applyDocValuesUpdates(segStates);\n\n    return totalDelCount;\n  }\n\n","sourceOld":"  /** Applies pending delete-by-term, delete-by-query and doc values updates to all segments in the index, returning\n   *  the number of new deleted or updated documents. */\n  private synchronized long apply(BufferedUpdatesStream.SegmentState[] segStates) throws IOException {\n\n    if (delGen == -1) {\n      // we were not yet pushed\n      throw new IllegalArgumentException(\"gen is not yet set; call BufferedUpdatesStream.push first\");\n    }\n\n    if (applied.getCount() == 0) {\n      // already done\n      return totalDelCount;\n    }\n\n    if (privateSegment != null) {\n      assert segStates.length == 1;\n      assert privateSegment == segStates[0].reader.getSegmentInfo();\n    }\n\n    totalDelCount += applyTermDeletes(segStates);\n    totalDelCount += applyQueryDeletes(segStates);\n    totalDelCount += applyDocValuesUpdates(segStates);\n\n    return totalDelCount;\n  }\n\n","bugFix":["f4363cd33f6eff7fb4753574a441e2d18c1022a4"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"30c8e5574b55d57947e989443dfde611646530ee","date":1499131153,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/FrozenBufferedUpdates#apply(BufferedUpdatesStream.SegmentState[]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/FrozenBufferedUpdates#apply(BufferedUpdatesStream.SegmentState[]).mjava","sourceNew":"  /** Applies pending delete-by-term, delete-by-query and doc values updates to all segments in the index, returning\n   *  the number of new deleted or updated documents. */\n  private synchronized long apply(BufferedUpdatesStream.SegmentState[] segStates) throws IOException {\n\n    if (delGen == -1) {\n      // we were not yet pushed\n      throw new IllegalArgumentException(\"gen is not yet set; call BufferedUpdatesStream.push first\");\n    }\n\n    assert applied.getCount() != 0;\n\n    if (privateSegment != null) {\n      assert segStates.length == 1;\n      assert privateSegment == segStates[0].reader.getSegmentInfo();\n    }\n\n    totalDelCount += applyTermDeletes(segStates);\n    totalDelCount += applyQueryDeletes(segStates);\n    totalDelCount += applyDocValuesUpdates(segStates);\n\n    return totalDelCount;\n  }\n\n","sourceOld":"  /** Applies pending delete-by-term, delete-by-query and doc values updates to all segments in the index, returning\n   *  the number of new deleted or updated documents. */\n  private synchronized long apply(BufferedUpdatesStream.SegmentState[] segStates) throws IOException {\n\n    if (delGen == -1) {\n      // we were not yet pushed\n      throw new IllegalArgumentException(\"gen is not yet set; call BufferedUpdatesStream.push first\");\n    }\n\n    if (applied.getCount() == 0) {\n      // already done\n      return totalDelCount;\n    }\n\n    if (privateSegment != null) {\n      assert segStates.length == 1;\n      assert privateSegment == segStates[0].reader.getSegmentInfo();\n    }\n\n    totalDelCount += applyTermDeletes(segStates);\n    totalDelCount += applyQueryDeletes(segStates);\n    totalDelCount += applyDocValuesUpdates(segStates);\n\n    return totalDelCount;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4987206dabc9f3576bb1df72e987094a7dad6e4f","date":1527510516,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/FrozenBufferedUpdates#apply(BufferedUpdatesStream.SegmentState[]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/FrozenBufferedUpdates#apply(BufferedUpdatesStream.SegmentState[]).mjava","sourceNew":"  /** Applies pending delete-by-term, delete-by-query and doc values updates to all segments in the index, returning\n   *  the number of new deleted or updated documents. */\n  private synchronized long apply(BufferedUpdatesStream.SegmentState[] segStates) throws IOException {\n\n    if (delGen == -1) {\n      // we were not yet pushed\n      throw new IllegalArgumentException(\"gen is not yet set; call BufferedUpdatesStream.push first\");\n    }\n\n    assert applied.getCount() != 0;\n\n    if (privateSegment != null) {\n      assert segStates.length == 1;\n      assert privateSegment == segStates[0].reader.getOriginalSegmentInfo();\n    }\n\n    totalDelCount += applyTermDeletes(segStates);\n    totalDelCount += applyQueryDeletes(segStates);\n    totalDelCount += applyDocValuesUpdates(segStates);\n\n    return totalDelCount;\n  }\n\n","sourceOld":"  /** Applies pending delete-by-term, delete-by-query and doc values updates to all segments in the index, returning\n   *  the number of new deleted or updated documents. */\n  private synchronized long apply(BufferedUpdatesStream.SegmentState[] segStates) throws IOException {\n\n    if (delGen == -1) {\n      // we were not yet pushed\n      throw new IllegalArgumentException(\"gen is not yet set; call BufferedUpdatesStream.push first\");\n    }\n\n    assert applied.getCount() != 0;\n\n    if (privateSegment != null) {\n      assert segStates.length == 1;\n      assert privateSegment == segStates[0].reader.getSegmentInfo();\n    }\n\n    totalDelCount += applyTermDeletes(segStates);\n    totalDelCount += applyQueryDeletes(segStates);\n    totalDelCount += applyDocValuesUpdates(segStates);\n\n    return totalDelCount;\n  }\n\n","bugFix":["f4363cd33f6eff7fb4753574a441e2d18c1022a4"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"72332a99ce230f8edf8404d6043ac18a0e26dfeb","date":1542806419,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/FrozenBufferedUpdates#apply(BufferedUpdatesStream.SegmentState[]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/FrozenBufferedUpdates#apply(BufferedUpdatesStream.SegmentState[]).mjava","sourceNew":"  /** Applies pending delete-by-term, delete-by-query and doc values updates to all segments in the index, returning\n   *  the number of new deleted or updated documents. */\n  private long apply(BufferedUpdatesStream.SegmentState[] segStates) throws IOException {\n    assert applyLock.isHeldByCurrentThread();\n    if (delGen == -1) {\n      // we were not yet pushed\n      throw new IllegalArgumentException(\"gen is not yet set; call BufferedUpdatesStream.push first\");\n    }\n\n    assert applied.getCount() != 0;\n\n    if (privateSegment != null) {\n      assert segStates.length == 1;\n      assert privateSegment == segStates[0].reader.getOriginalSegmentInfo();\n    }\n\n    totalDelCount += applyTermDeletes(segStates);\n    totalDelCount += applyQueryDeletes(segStates);\n    totalDelCount += applyDocValuesUpdates(segStates);\n\n    return totalDelCount;\n  }\n\n","sourceOld":"  /** Applies pending delete-by-term, delete-by-query and doc values updates to all segments in the index, returning\n   *  the number of new deleted or updated documents. */\n  private synchronized long apply(BufferedUpdatesStream.SegmentState[] segStates) throws IOException {\n\n    if (delGen == -1) {\n      // we were not yet pushed\n      throw new IllegalArgumentException(\"gen is not yet set; call BufferedUpdatesStream.push first\");\n    }\n\n    assert applied.getCount() != 0;\n\n    if (privateSegment != null) {\n      assert segStates.length == 1;\n      assert privateSegment == segStates[0].reader.getOriginalSegmentInfo();\n    }\n\n    totalDelCount += applyTermDeletes(segStates);\n    totalDelCount += applyQueryDeletes(segStates);\n    totalDelCount += applyDocValuesUpdates(segStates);\n\n    return totalDelCount;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9f21f1920c232db2352489eed260fe5c1f39e5a0","date":1587748041,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/FrozenBufferedUpdates#apply(BufferedUpdatesStream.SegmentState[]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/FrozenBufferedUpdates#apply(BufferedUpdatesStream.SegmentState[]).mjava","sourceNew":"  /** Applies pending delete-by-term, delete-by-query and doc values updates to all segments in the index, returning\n   *  the number of new deleted or updated documents. */\n  long apply(BufferedUpdatesStream.SegmentState[] segStates) throws IOException {\n    assert applyLock.isHeldByCurrentThread();\n    if (delGen == -1) {\n      // we were not yet pushed\n      throw new IllegalArgumentException(\"gen is not yet set; call BufferedUpdatesStream.push first\");\n    }\n\n    assert applied.getCount() != 0;\n\n    if (privateSegment != null) {\n      assert segStates.length == 1;\n      assert privateSegment == segStates[0].reader.getOriginalSegmentInfo();\n    }\n\n    totalDelCount += applyTermDeletes(segStates);\n    totalDelCount += applyQueryDeletes(segStates);\n    totalDelCount += applyDocValuesUpdates(segStates);\n\n    return totalDelCount;\n  }\n\n","sourceOld":"  /** Applies pending delete-by-term, delete-by-query and doc values updates to all segments in the index, returning\n   *  the number of new deleted or updated documents. */\n  private long apply(BufferedUpdatesStream.SegmentState[] segStates) throws IOException {\n    assert applyLock.isHeldByCurrentThread();\n    if (delGen == -1) {\n      // we were not yet pushed\n      throw new IllegalArgumentException(\"gen is not yet set; call BufferedUpdatesStream.push first\");\n    }\n\n    assert applied.getCount() != 0;\n\n    if (privateSegment != null) {\n      assert segStates.length == 1;\n      assert privateSegment == segStates[0].reader.getOriginalSegmentInfo();\n    }\n\n    totalDelCount += applyTermDeletes(segStates);\n    totalDelCount += applyQueryDeletes(segStates);\n    totalDelCount += applyDocValuesUpdates(segStates);\n\n    return totalDelCount;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9f21f1920c232db2352489eed260fe5c1f39e5a0":["72332a99ce230f8edf8404d6043ac18a0e26dfeb"],"f4363cd33f6eff7fb4753574a441e2d18c1022a4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"30c8e5574b55d57947e989443dfde611646530ee":["b7dfa64bc2074fb87d0ca70095a644c1ead107e1","b4a1e501646d5889b8128849329c2e6e52fc3615"],"72332a99ce230f8edf8404d6043ac18a0e26dfeb":["4987206dabc9f3576bb1df72e987094a7dad6e4f"],"b4a1e501646d5889b8128849329c2e6e52fc3615":["28288370235ed02234a64753cdbf0c6ec096304a"],"4987206dabc9f3576bb1df72e987094a7dad6e4f":["b4a1e501646d5889b8128849329c2e6e52fc3615"],"b7dfa64bc2074fb87d0ca70095a644c1ead107e1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f4363cd33f6eff7fb4753574a441e2d18c1022a4"],"28288370235ed02234a64753cdbf0c6ec096304a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f4363cd33f6eff7fb4753574a441e2d18c1022a4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9f21f1920c232db2352489eed260fe5c1f39e5a0"]},"commit2Childs":{"9f21f1920c232db2352489eed260fe5c1f39e5a0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f4363cd33f6eff7fb4753574a441e2d18c1022a4":["b7dfa64bc2074fb87d0ca70095a644c1ead107e1","28288370235ed02234a64753cdbf0c6ec096304a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f4363cd33f6eff7fb4753574a441e2d18c1022a4","b7dfa64bc2074fb87d0ca70095a644c1ead107e1","28288370235ed02234a64753cdbf0c6ec096304a"],"30c8e5574b55d57947e989443dfde611646530ee":[],"72332a99ce230f8edf8404d6043ac18a0e26dfeb":["9f21f1920c232db2352489eed260fe5c1f39e5a0"],"b4a1e501646d5889b8128849329c2e6e52fc3615":["30c8e5574b55d57947e989443dfde611646530ee","4987206dabc9f3576bb1df72e987094a7dad6e4f"],"b7dfa64bc2074fb87d0ca70095a644c1ead107e1":["30c8e5574b55d57947e989443dfde611646530ee"],"4987206dabc9f3576bb1df72e987094a7dad6e4f":["72332a99ce230f8edf8404d6043ac18a0e26dfeb"],"28288370235ed02234a64753cdbf0c6ec096304a":["b4a1e501646d5889b8128849329c2e6e52fc3615"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["30c8e5574b55d57947e989443dfde611646530ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}