{"path":"lucene/codecs/src/java/org/apache/lucene/codecs/memory/MemoryDocValuesFormat#MemoryDocValuesFormat(float).mjava","commits":[{"id":"e8550173e67bccdaad7c5cbb85fb81886fecfcb7","date":1376943063,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/memory/MemoryDocValuesFormat#MemoryDocValuesFormat(float).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Creates a new MemoryDocValuesFormat with the specified\n   * <code>acceptableOverheadRatio</code> for NumericDocValues.\n   * @param acceptableOverheadRatio compression parameter for numerics. \n   *        Currently this is only used when the number of unique values is small.\n   *        \n   * @lucene.experimental\n   */\n  public MemoryDocValuesFormat(float acceptableOverheadRatio) {\n    super(\"Memory\");\n    this.acceptableOverheadRatio = acceptableOverheadRatio;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff","date":1377034255,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/memory/MemoryDocValuesFormat#MemoryDocValuesFormat(float).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Creates a new MemoryDocValuesFormat with the specified\n   * <code>acceptableOverheadRatio</code> for NumericDocValues.\n   * @param acceptableOverheadRatio compression parameter for numerics. \n   *        Currently this is only used when the number of unique values is small.\n   *        \n   * @lucene.experimental\n   */\n  public MemoryDocValuesFormat(float acceptableOverheadRatio) {\n    super(\"Memory\");\n    this.acceptableOverheadRatio = acceptableOverheadRatio;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3dffec77fb8f7d0e9ca4869dddd6af94528b4576","date":1377875202,"type":0,"author":"Han Jiang","isMerge":true,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/memory/MemoryDocValuesFormat#MemoryDocValuesFormat(float).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Creates a new MemoryDocValuesFormat with the specified\n   * <code>acceptableOverheadRatio</code> for NumericDocValues.\n   * @param acceptableOverheadRatio compression parameter for numerics. \n   *        Currently this is only used when the number of unique values is small.\n   *        \n   * @lucene.experimental\n   */\n  public MemoryDocValuesFormat(float acceptableOverheadRatio) {\n    super(\"Memory\");\n    this.acceptableOverheadRatio = acceptableOverheadRatio;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"24f89e8a6aac05753cde4c83d62a74356098200d","date":1525768331,"type":4,"author":"Dawid Weiss","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/memory/MemoryDocValuesFormat#MemoryDocValuesFormat(float).mjava","sourceNew":null,"sourceOld":"  /**\n   * Creates a new MemoryDocValuesFormat with the specified\n   * <code>acceptableOverheadRatio</code> for NumericDocValues.\n   * @param acceptableOverheadRatio compression parameter for numerics. \n   *        Currently this is only used when the number of unique values is small.\n   *        \n   * @lucene.experimental\n   */\n  public MemoryDocValuesFormat(float acceptableOverheadRatio) {\n    super(\"Memory\");\n    this.acceptableOverheadRatio = acceptableOverheadRatio;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"24f89e8a6aac05753cde4c83d62a74356098200d":["e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff"],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","e8550173e67bccdaad7c5cbb85fb81886fecfcb7"],"e8550173e67bccdaad7c5cbb85fb81886fecfcb7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["24f89e8a6aac05753cde4c83d62a74356098200d"]},"commit2Childs":{"24f89e8a6aac05753cde4c83d62a74356098200d":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff","e8550173e67bccdaad7c5cbb85fb81886fecfcb7"],"e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff":["24f89e8a6aac05753cde4c83d62a74356098200d","3dffec77fb8f7d0e9ca4869dddd6af94528b4576"],"e8550173e67bccdaad7c5cbb85fb81886fecfcb7":["e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}