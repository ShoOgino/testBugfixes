{"path":"lucene/replicator/src/java/org/apache/lucene/replicator/http/HttpReplicator#checkForUpdate(String).mjava","commits":[{"id":"9854b7e4603d5c26909c27363aa7bc9fc4d11ef4","date":1368446242,"type":0,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/replicator/src/java/org/apache/lucene/replicator/http/HttpReplicator#checkForUpdate(String).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public SessionToken checkForUpdate(String currVersion) throws IOException {\n    String[] params = null;\n    if (currVersion != null) {\n      params = new String[] { ReplicationService.REPLICATE_VERSION_PARAM, currVersion };\n    }\n    final HttpResponse response = executeGET(ReplicationAction.UPDATE.name(), params);\n    return doAction(response, new Callable<SessionToken>() {\n      @Override\n      public SessionToken call() throws Exception {\n        final DataInputStream dis = new DataInputStream(responseInputStream(response));\n        try {\n          if (dis.readByte() == 0) {\n            return null;\n          } else {\n            return new SessionToken(dis);\n          }\n        } finally {\n          dis.close();\n        }\n      }\n    });\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"19275ba31e621f6da1b83bf13af75233876fd3d4","date":1374846698,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/replicator/src/java/org/apache/lucene/replicator/http/HttpReplicator#checkForUpdate(String).mjava","pathOld":"lucene/replicator/src/java/org/apache/lucene/replicator/http/HttpReplicator#checkForUpdate(String).mjava","sourceNew":"  @Override\n  public SessionToken checkForUpdate(String currVersion) throws IOException {\n    String[] params = null;\n    if (currVersion != null) {\n      params = new String[] { ReplicationService.REPLICATE_VERSION_PARAM, currVersion };\n    }\n    final HttpResponse response = executeGET(ReplicationAction.UPDATE.name(), params);\n    return doAction(response, new Callable<SessionToken>() {\n      @Override\n      public SessionToken call() throws Exception {\n        final DataInputStream dis = new DataInputStream(responseInputStream(response));\n        try {\n          if (dis.readByte() == 0) {\n            return null;\n          } else {\n            return new SessionToken(dis);\n          }\n        } finally {\n          dis.close();\n        }\n      }\n    });\n  }\n\n","sourceOld":"  @Override\n  public SessionToken checkForUpdate(String currVersion) throws IOException {\n    String[] params = null;\n    if (currVersion != null) {\n      params = new String[] { ReplicationService.REPLICATE_VERSION_PARAM, currVersion };\n    }\n    final HttpResponse response = executeGET(ReplicationAction.UPDATE.name(), params);\n    return doAction(response, new Callable<SessionToken>() {\n      @Override\n      public SessionToken call() throws Exception {\n        final DataInputStream dis = new DataInputStream(responseInputStream(response));\n        try {\n          if (dis.readByte() == 0) {\n            return null;\n          } else {\n            return new SessionToken(dis);\n          }\n        } finally {\n          dis.close();\n        }\n      }\n    });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","date":1376366778,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/replicator/src/java/org/apache/lucene/replicator/http/HttpReplicator#checkForUpdate(String).mjava","pathOld":"lucene/replicator/src/java/org/apache/lucene/replicator/http/HttpReplicator#checkForUpdate(String).mjava","sourceNew":"  @Override\n  public SessionToken checkForUpdate(String currVersion) throws IOException {\n    String[] params = null;\n    if (currVersion != null) {\n      params = new String[] { ReplicationService.REPLICATE_VERSION_PARAM, currVersion };\n    }\n    final HttpResponse response = executeGET(ReplicationAction.UPDATE.name(), params);\n    return doAction(response, new Callable<SessionToken>() {\n      @Override\n      public SessionToken call() throws Exception {\n        final DataInputStream dis = new DataInputStream(responseInputStream(response));\n        try {\n          if (dis.readByte() == 0) {\n            return null;\n          } else {\n            return new SessionToken(dis);\n          }\n        } finally {\n          dis.close();\n        }\n      }\n    });\n  }\n\n","sourceOld":"  @Override\n  public SessionToken checkForUpdate(String currVersion) throws IOException {\n    String[] params = null;\n    if (currVersion != null) {\n      params = new String[] { ReplicationService.REPLICATE_VERSION_PARAM, currVersion };\n    }\n    final HttpResponse response = executeGET(ReplicationAction.UPDATE.name(), params);\n    return doAction(response, new Callable<SessionToken>() {\n      @Override\n      public SessionToken call() throws Exception {\n        final DataInputStream dis = new DataInputStream(responseInputStream(response));\n        try {\n          if (dis.readByte() == 0) {\n            return null;\n          } else {\n            return new SessionToken(dis);\n          }\n        } finally {\n          dis.close();\n        }\n      }\n    });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9854b7e4603d5c26909c27363aa7bc9fc4d11ef4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":["9854b7e4603d5c26909c27363aa7bc9fc4d11ef4"],"19275ba31e621f6da1b83bf13af75233876fd3d4":["9854b7e4603d5c26909c27363aa7bc9fc4d11ef4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["19275ba31e621f6da1b83bf13af75233876fd3d4"]},"commit2Childs":{"9854b7e4603d5c26909c27363aa7bc9fc4d11ef4":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","19275ba31e621f6da1b83bf13af75233876fd3d4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9854b7e4603d5c26909c27363aa7bc9fc4d11ef4"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":[],"19275ba31e621f6da1b83bf13af75233876fd3d4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}