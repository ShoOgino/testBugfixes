{"path":"solr/core/src/java/org/apache/solr/update/processor/TimePartitionedUpdateProcessor#wrap(SolrQueryRequest,SolrQueryResponse,UpdateRequestProcessor).mjava","commits":[{"id":"543992c52fe295c8b15aafe4b066e7e3a9a42c48","date":1510862949,"type":0,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/TimePartitionedUpdateProcessor#wrap(SolrQueryRequest,SolrQueryResponse,UpdateRequestProcessor).mjava","pathOld":"/dev/null","sourceNew":"  public static UpdateRequestProcessor wrap(SolrQueryRequest req, SolrQueryResponse rsp, UpdateRequestProcessor next) {\n    final String timePartitionAliasName = req.getCore().getCoreDescriptor()\n        .getCoreProperty(TIME_PARTITION_ALIAS_NAME_CORE_PROP, null);\n    final DistribPhase shardDistribPhase =\n        DistribPhase.parseParam(req.getParams().get(DISTRIB_UPDATE_PARAM));\n    final DistribPhase aliasDistribPhase =\n        DistribPhase.parseParam(req.getParams().get(ALIAS_DISTRIB_UPDATE_PARAM));\n    if (timePartitionAliasName == null || aliasDistribPhase != DistribPhase.NONE || shardDistribPhase != DistribPhase.NONE) {\n      // if aliasDistribPhase is not NONE, then there is no further collection routing to be done here.\n      //    TODO this may eventually not be true but at the moment it is\n      // if shardDistribPhase is not NONE, then the phase is after the scope of this URP\n      return next;\n    } else {\n      return new TimePartitionedUpdateProcessor(req, rsp, next, timePartitionAliasName, aliasDistribPhase);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5613a70439d5d429f0689c2c5a21615e58deff97","date":1512102314,"type":5,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/TimeRoutedAliasUpdateProcessor#wrap(SolrQueryRequest,SolrQueryResponse,UpdateRequestProcessor).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/processor/TimePartitionedUpdateProcessor#wrap(SolrQueryRequest,SolrQueryResponse,UpdateRequestProcessor).mjava","sourceNew":"  public static UpdateRequestProcessor wrap(SolrQueryRequest req, SolrQueryResponse rsp, UpdateRequestProcessor next) {\n    final String timePartitionAliasName = req.getCore().getCoreDescriptor()\n        .getCoreProperty(TIME_PARTITION_ALIAS_NAME_CORE_PROP, null);\n    final DistribPhase shardDistribPhase =\n        DistribPhase.parseParam(req.getParams().get(DISTRIB_UPDATE_PARAM));\n    final DistribPhase aliasDistribPhase =\n        DistribPhase.parseParam(req.getParams().get(ALIAS_DISTRIB_UPDATE_PARAM));\n    if (timePartitionAliasName == null || aliasDistribPhase != DistribPhase.NONE || shardDistribPhase != DistribPhase.NONE) {\n      // if aliasDistribPhase is not NONE, then there is no further collection routing to be done here.\n      //    TODO this may eventually not be true but at the moment it is\n      // if shardDistribPhase is not NONE, then the phase is after the scope of this URP\n      return next;\n    } else {\n      return new TimeRoutedAliasUpdateProcessor(req, rsp, next, timePartitionAliasName, aliasDistribPhase);\n    }\n  }\n\n","sourceOld":"  public static UpdateRequestProcessor wrap(SolrQueryRequest req, SolrQueryResponse rsp, UpdateRequestProcessor next) {\n    final String timePartitionAliasName = req.getCore().getCoreDescriptor()\n        .getCoreProperty(TIME_PARTITION_ALIAS_NAME_CORE_PROP, null);\n    final DistribPhase shardDistribPhase =\n        DistribPhase.parseParam(req.getParams().get(DISTRIB_UPDATE_PARAM));\n    final DistribPhase aliasDistribPhase =\n        DistribPhase.parseParam(req.getParams().get(ALIAS_DISTRIB_UPDATE_PARAM));\n    if (timePartitionAliasName == null || aliasDistribPhase != DistribPhase.NONE || shardDistribPhase != DistribPhase.NONE) {\n      // if aliasDistribPhase is not NONE, then there is no further collection routing to be done here.\n      //    TODO this may eventually not be true but at the moment it is\n      // if shardDistribPhase is not NONE, then the phase is after the scope of this URP\n      return next;\n    } else {\n      return new TimePartitionedUpdateProcessor(req, rsp, next, timePartitionAliasName, aliasDistribPhase);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5613a70439d5d429f0689c2c5a21615e58deff97":["543992c52fe295c8b15aafe4b066e7e3a9a42c48"],"543992c52fe295c8b15aafe4b066e7e3a9a42c48":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5613a70439d5d429f0689c2c5a21615e58deff97"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["543992c52fe295c8b15aafe4b066e7e3a9a42c48"],"5613a70439d5d429f0689c2c5a21615e58deff97":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"543992c52fe295c8b15aafe4b066e7e3a9a42c48":["5613a70439d5d429f0689c2c5a21615e58deff97"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}