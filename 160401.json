{"path":"lucene/suggest/src/java/org/apache/lucene/search/suggest/analyzing/AnalyzingSuggester#getTokenStreamToAutomaton().mjava","commits":[{"id":"f903593885012bb5d79809c44cb6dfcebb4a2c66","date":1349971647,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/analyzing/AnalyzingSuggester#getTokenStreamToAutomaton().mjava","pathOld":"/dev/null","sourceNew":"  private TokenStreamToAutomaton getTokenStreamToAutomaton() {\n    if (preserveSep) {\n      return new EscapingTokenStreamToAutomaton();\n    } else {\n      // When we're not preserving sep, we don't steal 0xff\n      // byte, so we don't need to do any escaping:\n      return new TokenStreamToAutomaton();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["2efd1b8e67185b5bb2dbdfa435b9f085a0c659f6"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"cc41b743423981e7ec17a024ce7e107096e472fe","date":1349975327,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/analyzing/AnalyzingSuggester#getTokenStreamToAutomaton().mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/analyzing/AnalyzingSuggester#getTokenStreamToAutomaton().mjava","sourceNew":"  TokenStreamToAutomaton getTokenStreamToAutomaton() {\n    if (preserveSep) {\n      return new EscapingTokenStreamToAutomaton();\n    } else {\n      // When we're not preserving sep, we don't steal 0xff\n      // byte, so we don't need to do any escaping:\n      return new TokenStreamToAutomaton();\n    }\n  }\n\n","sourceOld":"  private TokenStreamToAutomaton getTokenStreamToAutomaton() {\n    if (preserveSep) {\n      return new EscapingTokenStreamToAutomaton();\n    } else {\n      // When we're not preserving sep, we don't steal 0xff\n      // byte, so we don't need to do any escaping:\n      return new TokenStreamToAutomaton();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4f3db1dca4ec6d06e771211e9f7c4ae5d8e5758b","date":1351615637,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/analyzing/AnalyzingSuggester#getTokenStreamToAutomaton().mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/analyzing/AnalyzingSuggester#getTokenStreamToAutomaton().mjava","sourceNew":"  TokenStreamToAutomaton getTokenStreamToAutomaton() {\n    if (preserveSep) {\n      return new EscapingTokenStreamToAutomaton();\n    } else {\n      // When we're not preserving sep, we don't steal 0xff\n      // byte, so we don't need to do any escaping:\n      return new TokenStreamToAutomaton();\n    }\n  }\n\n","sourceOld":"  private TokenStreamToAutomaton getTokenStreamToAutomaton() {\n    if (preserveSep) {\n      return new EscapingTokenStreamToAutomaton();\n    } else {\n      // When we're not preserving sep, we don't steal 0xff\n      // byte, so we don't need to do any escaping:\n      return new TokenStreamToAutomaton();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"eafa8c5eabc3dacd34680054e6a33bda024080ac","date":1367691488,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/analyzing/AnalyzingSuggester#getTokenStreamToAutomaton().mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/analyzing/AnalyzingSuggester#getTokenStreamToAutomaton().mjava","sourceNew":"  TokenStreamToAutomaton getTokenStreamToAutomaton() {\n    final TokenStreamToAutomaton tsta;\n    if (preserveSep) {\n      tsta = new EscapingTokenStreamToAutomaton();\n    } else {\n      // When we're not preserving sep, we don't steal 0xff\n      // byte, so we don't need to do any escaping:\n      tsta = new TokenStreamToAutomaton();\n    }\n    tsta.setPreservePositionIncrements(preservePositionIncrements);\n    return tsta;\n  }\n\n","sourceOld":"  TokenStreamToAutomaton getTokenStreamToAutomaton() {\n    if (preserveSep) {\n      return new EscapingTokenStreamToAutomaton();\n    } else {\n      // When we're not preserving sep, we don't steal 0xff\n      // byte, so we don't need to do any escaping:\n      return new TokenStreamToAutomaton();\n    }\n  }\n\n","bugFix":null,"bugIntro":["2efd1b8e67185b5bb2dbdfa435b9f085a0c659f6"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"2efd1b8e67185b5bb2dbdfa435b9f085a0c659f6","date":1374158194,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/analyzing/AnalyzingSuggester#getTokenStreamToAutomaton().mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/analyzing/AnalyzingSuggester#getTokenStreamToAutomaton().mjava","sourceNew":"  TokenStreamToAutomaton getTokenStreamToAutomaton() {\n    final TokenStreamToAutomaton tsta = new TokenStreamToAutomaton();\n    tsta.setPreservePositionIncrements(preservePositionIncrements);\n    return tsta;\n  }\n\n","sourceOld":"  TokenStreamToAutomaton getTokenStreamToAutomaton() {\n    final TokenStreamToAutomaton tsta;\n    if (preserveSep) {\n      tsta = new EscapingTokenStreamToAutomaton();\n    } else {\n      // When we're not preserving sep, we don't steal 0xff\n      // byte, so we don't need to do any escaping:\n      tsta = new TokenStreamToAutomaton();\n    }\n    tsta.setPreservePositionIncrements(preservePositionIncrements);\n    return tsta;\n  }\n\n","bugFix":["f903593885012bb5d79809c44cb6dfcebb4a2c66","eafa8c5eabc3dacd34680054e6a33bda024080ac"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","date":1376366778,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/analyzing/AnalyzingSuggester#getTokenStreamToAutomaton().mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/analyzing/AnalyzingSuggester#getTokenStreamToAutomaton().mjava","sourceNew":"  TokenStreamToAutomaton getTokenStreamToAutomaton() {\n    final TokenStreamToAutomaton tsta = new TokenStreamToAutomaton();\n    tsta.setPreservePositionIncrements(preservePositionIncrements);\n    return tsta;\n  }\n\n","sourceOld":"  TokenStreamToAutomaton getTokenStreamToAutomaton() {\n    final TokenStreamToAutomaton tsta;\n    if (preserveSep) {\n      tsta = new EscapingTokenStreamToAutomaton();\n    } else {\n      // When we're not preserving sep, we don't steal 0xff\n      // byte, so we don't need to do any escaping:\n      tsta = new TokenStreamToAutomaton();\n    }\n    tsta.setPreservePositionIncrements(preservePositionIncrements);\n    return tsta;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"098528909bb70948871fd7ed865fafb87ed73964","date":1484667487,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/analyzing/AnalyzingSuggester#getTokenStreamToAutomaton().mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/analyzing/AnalyzingSuggester#getTokenStreamToAutomaton().mjava","sourceNew":"  TokenStreamToAutomaton getTokenStreamToAutomaton() {\n    final TokenStreamToAutomaton tsta = new TokenStreamToAutomaton();\n    tsta.setPreservePositionIncrements(preservePositionIncrements);\n    tsta.setFinalOffsetGapAsHole(true);\n    return tsta;\n  }\n\n","sourceOld":"  TokenStreamToAutomaton getTokenStreamToAutomaton() {\n    final TokenStreamToAutomaton tsta = new TokenStreamToAutomaton();\n    tsta.setPreservePositionIncrements(preservePositionIncrements);\n    return tsta;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"302d34f2c66e8d489ee13078305c330cbf67b226","date":1484754357,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/analyzing/AnalyzingSuggester#getTokenStreamToAutomaton().mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/analyzing/AnalyzingSuggester#getTokenStreamToAutomaton().mjava","sourceNew":"  TokenStreamToAutomaton getTokenStreamToAutomaton() {\n    final TokenStreamToAutomaton tsta = new TokenStreamToAutomaton();\n    tsta.setPreservePositionIncrements(preservePositionIncrements);\n    tsta.setFinalOffsetGapAsHole(true);\n    return tsta;\n  }\n\n","sourceOld":"  TokenStreamToAutomaton getTokenStreamToAutomaton() {\n    final TokenStreamToAutomaton tsta = new TokenStreamToAutomaton();\n    tsta.setPreservePositionIncrements(preservePositionIncrements);\n    return tsta;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4f3db1dca4ec6d06e771211e9f7c4ae5d8e5758b":["f903593885012bb5d79809c44cb6dfcebb4a2c66","cc41b743423981e7ec17a024ce7e107096e472fe"],"cc41b743423981e7ec17a024ce7e107096e472fe":["f903593885012bb5d79809c44cb6dfcebb4a2c66"],"098528909bb70948871fd7ed865fafb87ed73964":["2efd1b8e67185b5bb2dbdfa435b9f085a0c659f6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2efd1b8e67185b5bb2dbdfa435b9f085a0c659f6":["eafa8c5eabc3dacd34680054e6a33bda024080ac"],"eafa8c5eabc3dacd34680054e6a33bda024080ac":["4f3db1dca4ec6d06e771211e9f7c4ae5d8e5758b"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":["eafa8c5eabc3dacd34680054e6a33bda024080ac"],"f903593885012bb5d79809c44cb6dfcebb4a2c66":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["098528909bb70948871fd7ed865fafb87ed73964"],"302d34f2c66e8d489ee13078305c330cbf67b226":["2efd1b8e67185b5bb2dbdfa435b9f085a0c659f6","098528909bb70948871fd7ed865fafb87ed73964"]},"commit2Childs":{"4f3db1dca4ec6d06e771211e9f7c4ae5d8e5758b":["eafa8c5eabc3dacd34680054e6a33bda024080ac"],"cc41b743423981e7ec17a024ce7e107096e472fe":["4f3db1dca4ec6d06e771211e9f7c4ae5d8e5758b"],"098528909bb70948871fd7ed865fafb87ed73964":["cd5edd1f2b162a5cfa08efd17851a07373a96817","302d34f2c66e8d489ee13078305c330cbf67b226"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f903593885012bb5d79809c44cb6dfcebb4a2c66"],"2efd1b8e67185b5bb2dbdfa435b9f085a0c659f6":["098528909bb70948871fd7ed865fafb87ed73964","302d34f2c66e8d489ee13078305c330cbf67b226"],"eafa8c5eabc3dacd34680054e6a33bda024080ac":["2efd1b8e67185b5bb2dbdfa435b9f085a0c659f6","8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":[],"f903593885012bb5d79809c44cb6dfcebb4a2c66":["4f3db1dca4ec6d06e771211e9f7c4ae5d8e5758b","cc41b743423981e7ec17a024ce7e107096e472fe"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"302d34f2c66e8d489ee13078305c330cbf67b226":[]},"heads":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","cd5edd1f2b162a5cfa08efd17851a07373a96817","302d34f2c66e8d489ee13078305c330cbf67b226"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}