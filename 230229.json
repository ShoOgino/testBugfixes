{"path":"lucene/queries/src/test/org/apache/lucene/queries/ChainedFilterTest#testSingleFilter().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queries/src/test/org/apache/lucene/queries/ChainedFilterTest#testSingleFilter().mjava","pathOld":"modules/queries/src/test/org/apache/lucene/queries/ChainedFilterTest#testSingleFilter().mjava","sourceNew":"  public void testSingleFilter() throws Exception {\n    ChainedFilter chain = getChainedFilter(new Filter[] {dateFilter}, null);\n\n    int numHits = searcher.search(query, chain, 1000).totalHits;\n    assertEquals(MAX, numHits);\n\n    chain = new ChainedFilter(new Filter[] {bobFilter});\n    numHits = searcher.search(query, chain, 1000).totalHits;\n    assertEquals(MAX / 2, numHits);\n    \n    chain = getChainedFilter(new Filter[] {bobFilter}, new int[] {ChainedFilter.AND});\n    TopDocs hits = searcher.search(query, chain, 1000);\n    numHits = hits.totalHits;\n    assertEquals(MAX / 2, numHits);\n    assertEquals(\"bob\", searcher.doc(hits.scoreDocs[0].doc).get(\"owner\"));\n    \n    chain = getChainedFilter(new Filter[] {bobFilter}, new int[] {ChainedFilter.ANDNOT});\n    hits = searcher.search(query, chain, 1000);\n    numHits = hits.totalHits;\n    assertEquals(MAX / 2, numHits);\n    assertEquals(\"sue\", searcher.doc(hits.scoreDocs[0].doc).get(\"owner\"));\n  }\n\n","sourceOld":"  public void testSingleFilter() throws Exception {\n    ChainedFilter chain = getChainedFilter(new Filter[] {dateFilter}, null);\n\n    int numHits = searcher.search(query, chain, 1000).totalHits;\n    assertEquals(MAX, numHits);\n\n    chain = new ChainedFilter(new Filter[] {bobFilter});\n    numHits = searcher.search(query, chain, 1000).totalHits;\n    assertEquals(MAX / 2, numHits);\n    \n    chain = getChainedFilter(new Filter[] {bobFilter}, new int[] {ChainedFilter.AND});\n    TopDocs hits = searcher.search(query, chain, 1000);\n    numHits = hits.totalHits;\n    assertEquals(MAX / 2, numHits);\n    assertEquals(\"bob\", searcher.doc(hits.scoreDocs[0].doc).get(\"owner\"));\n    \n    chain = getChainedFilter(new Filter[] {bobFilter}, new int[] {ChainedFilter.ANDNOT});\n    hits = searcher.search(query, chain, 1000);\n    numHits = hits.totalHits;\n    assertEquals(MAX / 2, numHits);\n    assertEquals(\"sue\", searcher.doc(hits.scoreDocs[0].doc).get(\"owner\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f78e5763f288fef7c1cc1ebd2530195ce46b5b28","date":1412245226,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/queries/src/test/org/apache/lucene/queries/ChainedFilterTest#testSingleFilter().mjava","sourceNew":null,"sourceOld":"  public void testSingleFilter() throws Exception {\n    ChainedFilter chain = getChainedFilter(new Filter[] {dateFilter}, null);\n\n    int numHits = searcher.search(query, chain, 1000).totalHits;\n    assertEquals(MAX, numHits);\n\n    chain = new ChainedFilter(new Filter[] {bobFilter});\n    numHits = searcher.search(query, chain, 1000).totalHits;\n    assertEquals(MAX / 2, numHits);\n    \n    chain = getChainedFilter(new Filter[] {bobFilter}, new int[] {ChainedFilter.AND});\n    TopDocs hits = searcher.search(query, chain, 1000);\n    numHits = hits.totalHits;\n    assertEquals(MAX / 2, numHits);\n    assertEquals(\"bob\", searcher.doc(hits.scoreDocs[0].doc).get(\"owner\"));\n    \n    chain = getChainedFilter(new Filter[] {bobFilter}, new int[] {ChainedFilter.ANDNOT});\n    hits = searcher.search(query, chain, 1000);\n    numHits = hits.totalHits;\n    assertEquals(MAX / 2, numHits);\n    assertEquals(\"sue\", searcher.doc(hits.scoreDocs[0].doc).get(\"owner\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d9a47902d6207303f5ed3e7aaca62ca33433af66","date":1412435312,"type":4,"author":"Robert Muir","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/queries/src/test/org/apache/lucene/queries/ChainedFilterTest#testSingleFilter().mjava","sourceNew":null,"sourceOld":"  public void testSingleFilter() throws Exception {\n    ChainedFilter chain = getChainedFilter(new Filter[] {dateFilter}, null);\n\n    int numHits = searcher.search(query, chain, 1000).totalHits;\n    assertEquals(MAX, numHits);\n\n    chain = new ChainedFilter(new Filter[] {bobFilter});\n    numHits = searcher.search(query, chain, 1000).totalHits;\n    assertEquals(MAX / 2, numHits);\n    \n    chain = getChainedFilter(new Filter[] {bobFilter}, new int[] {ChainedFilter.AND});\n    TopDocs hits = searcher.search(query, chain, 1000);\n    numHits = hits.totalHits;\n    assertEquals(MAX / 2, numHits);\n    assertEquals(\"bob\", searcher.doc(hits.scoreDocs[0].doc).get(\"owner\"));\n    \n    chain = getChainedFilter(new Filter[] {bobFilter}, new int[] {ChainedFilter.ANDNOT});\n    hits = searcher.search(query, chain, 1000);\n    numHits = hits.totalHits;\n    assertEquals(MAX / 2, numHits);\n    assertEquals(\"sue\", searcher.doc(hits.scoreDocs[0].doc).get(\"owner\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d9a47902d6207303f5ed3e7aaca62ca33433af66":["b89678825b68eccaf09e6ab71675fc0b0af1e099","f78e5763f288fef7c1cc1ebd2530195ce46b5b28"],"f78e5763f288fef7c1cc1ebd2530195ce46b5b28":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f78e5763f288fef7c1cc1ebd2530195ce46b5b28"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["d9a47902d6207303f5ed3e7aaca62ca33433af66","f78e5763f288fef7c1cc1ebd2530195ce46b5b28"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"d9a47902d6207303f5ed3e7aaca62ca33433af66":[],"f78e5763f288fef7c1cc1ebd2530195ce46b5b28":["d9a47902d6207303f5ed3e7aaca62ca33433af66","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d9a47902d6207303f5ed3e7aaca62ca33433af66","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}