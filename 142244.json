{"path":"solr/core/src/test/org/apache/solr/security/JWTAuthPluginIntegrationTest#setUp().mjava","commits":[{"id":"bb3e075eaa5788b2762ec235bf72b069cefe3f50","date":1548244981,"type":0,"author":"Jan HÃ¸ydahl","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/security/JWTAuthPluginIntegrationTest#setUp().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    \n    configureCluster(NUM_SERVERS)// nodes\n        .withSecurityJson(TEST_PATH().resolve(\"security\").resolve(\"jwt_plugin_jwk_security.json\"))\n        .addConfig(\"conf1\", TEST_PATH().resolve(\"configsets\").resolve(\"cloud-minimal\").resolve(\"conf\"))\n        .configure();\n    baseUrl = cluster.getRandomJetty(random()).getBaseUrl().toString();\n\n    String jwkJSON = \"{\\n\" +\n        \"  \\\"kty\\\": \\\"RSA\\\",\\n\" +\n        \"  \\\"d\\\": \\\"i6pyv2z3o-MlYytWsOr3IE1olu2RXZBzjPRBNgWAP1TlLNaphHEvH5aHhe_CtBAastgFFMuP29CFhaL3_tGczkvWJkSveZQN2AHWHgRShKgoSVMspkhOt3Ghha4CvpnZ9BnQzVHnaBnHDTTTfVgXz7P1ZNBhQY4URG61DKIF-JSSClyh1xKuMoJX0lILXDYGGcjVTZL_hci4IXPPTpOJHV51-pxuO7WU5M9252UYoiYyCJ56ai8N49aKIMsqhdGuO4aWUwsGIW4oQpjtce5eEojCprYl-9rDhTwLAFoBtjy6LvkqlR2Ae5dKZYpStljBjK8PJrBvWZjXAEMDdQ8PuQ\\\",\\n\" +\n        \"  \\\"e\\\": \\\"AQAB\\\",\\n\" +\n        \"  \\\"use\\\": \\\"sig\\\",\\n\" +\n        \"  \\\"kid\\\": \\\"test\\\",\\n\" +\n        \"  \\\"alg\\\": \\\"RS256\\\",\\n\" +\n        \"  \\\"n\\\": \\\"jeyrvOaZrmKWjyNXt0myAc_pJ1hNt3aRupExJEx1ewPaL9J9HFgSCjMrYxCB1ETO1NDyZ3nSgjZis-jHHDqBxBjRdq_t1E2rkGFaYbxAyKt220Pwgme_SFTB9MXVrFQGkKyjmQeVmOmV6zM3KK8uMdKQJ4aoKmwBcF5Zg7EZdDcKOFgpgva1Jq-FlEsaJ2xrYDYo3KnGcOHIt9_0NQeLsqZbeWYLxYni7uROFncXYV5FhSJCeR4A_rrbwlaCydGxE0ToC_9HNYibUHlkJjqyUhAgORCbNS8JLCJH8NUi5sDdIawK9GTSyvsJXZ-QHqo4cMUuxWV5AJtaRGghuMUfqQ\\\"\\n\" +\n        \"}\";\n\n    PublicJsonWebKey jwk = RsaJsonWebKey.Factory.newPublicJwk(jwkJSON);\n    JwtClaims claims = JWTAuthPluginTest.generateClaims();\n    jws = new JsonWebSignature();\n    jws.setPayload(claims.toJson());\n    jws.setKey(jwk.getPrivateKey());\n    jws.setKeyIdHeaderValue(jwk.getKeyId());\n    jws.setAlgorithmHeaderValue(AlgorithmIdentifiers.RSA_USING_SHA256);\n\n    jwtTestToken = jws.getCompactSerialization();\n    \n    PublicJsonWebKey jwk2 = RsaJwkGenerator.generateJwk(2048);\n    jwk2.setKeyId(\"k2\");\n    JsonWebSignature jws2 = new JsonWebSignature();\n    jws2.setPayload(claims.toJson());\n    jws2.setKey(jwk2.getPrivateKey());\n    jws2.setKeyIdHeaderValue(jwk2.getKeyId());\n    jws2.setAlgorithmHeaderValue(AlgorithmIdentifiers.RSA_USING_SHA256);\n    jwtTokenWrongSignature = jws2.getCompactSerialization();\n\n    cluster.waitForAllNodes(10);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2682a1cd25864ccdc1b44bf047bd08700f28ba06","date":1548321910,"type":0,"author":"Tommaso Teofili","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/security/JWTAuthPluginIntegrationTest#setUp().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    \n    configureCluster(NUM_SERVERS)// nodes\n        .withSecurityJson(TEST_PATH().resolve(\"security\").resolve(\"jwt_plugin_jwk_security.json\"))\n        .addConfig(\"conf1\", TEST_PATH().resolve(\"configsets\").resolve(\"cloud-minimal\").resolve(\"conf\"))\n        .configure();\n    baseUrl = cluster.getRandomJetty(random()).getBaseUrl().toString();\n\n    String jwkJSON = \"{\\n\" +\n        \"  \\\"kty\\\": \\\"RSA\\\",\\n\" +\n        \"  \\\"d\\\": \\\"i6pyv2z3o-MlYytWsOr3IE1olu2RXZBzjPRBNgWAP1TlLNaphHEvH5aHhe_CtBAastgFFMuP29CFhaL3_tGczkvWJkSveZQN2AHWHgRShKgoSVMspkhOt3Ghha4CvpnZ9BnQzVHnaBnHDTTTfVgXz7P1ZNBhQY4URG61DKIF-JSSClyh1xKuMoJX0lILXDYGGcjVTZL_hci4IXPPTpOJHV51-pxuO7WU5M9252UYoiYyCJ56ai8N49aKIMsqhdGuO4aWUwsGIW4oQpjtce5eEojCprYl-9rDhTwLAFoBtjy6LvkqlR2Ae5dKZYpStljBjK8PJrBvWZjXAEMDdQ8PuQ\\\",\\n\" +\n        \"  \\\"e\\\": \\\"AQAB\\\",\\n\" +\n        \"  \\\"use\\\": \\\"sig\\\",\\n\" +\n        \"  \\\"kid\\\": \\\"test\\\",\\n\" +\n        \"  \\\"alg\\\": \\\"RS256\\\",\\n\" +\n        \"  \\\"n\\\": \\\"jeyrvOaZrmKWjyNXt0myAc_pJ1hNt3aRupExJEx1ewPaL9J9HFgSCjMrYxCB1ETO1NDyZ3nSgjZis-jHHDqBxBjRdq_t1E2rkGFaYbxAyKt220Pwgme_SFTB9MXVrFQGkKyjmQeVmOmV6zM3KK8uMdKQJ4aoKmwBcF5Zg7EZdDcKOFgpgva1Jq-FlEsaJ2xrYDYo3KnGcOHIt9_0NQeLsqZbeWYLxYni7uROFncXYV5FhSJCeR4A_rrbwlaCydGxE0ToC_9HNYibUHlkJjqyUhAgORCbNS8JLCJH8NUi5sDdIawK9GTSyvsJXZ-QHqo4cMUuxWV5AJtaRGghuMUfqQ\\\"\\n\" +\n        \"}\";\n\n    PublicJsonWebKey jwk = RsaJsonWebKey.Factory.newPublicJwk(jwkJSON);\n    JwtClaims claims = JWTAuthPluginTest.generateClaims();\n    jws = new JsonWebSignature();\n    jws.setPayload(claims.toJson());\n    jws.setKey(jwk.getPrivateKey());\n    jws.setKeyIdHeaderValue(jwk.getKeyId());\n    jws.setAlgorithmHeaderValue(AlgorithmIdentifiers.RSA_USING_SHA256);\n\n    jwtTestToken = jws.getCompactSerialization();\n    \n    PublicJsonWebKey jwk2 = RsaJwkGenerator.generateJwk(2048);\n    jwk2.setKeyId(\"k2\");\n    JsonWebSignature jws2 = new JsonWebSignature();\n    jws2.setPayload(claims.toJson());\n    jws2.setKey(jwk2.getPrivateKey());\n    jws2.setKeyIdHeaderValue(jwk2.getKeyId());\n    jws2.setAlgorithmHeaderValue(AlgorithmIdentifiers.RSA_USING_SHA256);\n    jwtTokenWrongSignature = jws2.getCompactSerialization();\n\n    cluster.waitForAllNodes(10);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"413f18c5620cf37b9bb2dfa7d3071bfa08b69a0d","date":1550526365,"type":3,"author":"shalinmangar","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/security/JWTAuthPluginIntegrationTest#setUp().mjava","pathOld":"solr/core/src/test/org/apache/solr/security/JWTAuthPluginIntegrationTest#setUp().mjava","sourceNew":"  @Override\n  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    \n    configureCluster(NUM_SERVERS)// nodes\n        .withSecurityJson(TEST_PATH().resolve(\"security\").resolve(\"jwt_plugin_jwk_security.json\"))\n        .addConfig(\"conf1\", TEST_PATH().resolve(\"configsets\").resolve(\"cloud-minimal\").resolve(\"conf\"))\n        .withDefaultClusterProperty(\"useLegacyReplicaAssignment\", \"false\")\n        .configure();\n    baseUrl = cluster.getRandomJetty(random()).getBaseUrl().toString();\n\n    String jwkJSON = \"{\\n\" +\n        \"  \\\"kty\\\": \\\"RSA\\\",\\n\" +\n        \"  \\\"d\\\": \\\"i6pyv2z3o-MlYytWsOr3IE1olu2RXZBzjPRBNgWAP1TlLNaphHEvH5aHhe_CtBAastgFFMuP29CFhaL3_tGczkvWJkSveZQN2AHWHgRShKgoSVMspkhOt3Ghha4CvpnZ9BnQzVHnaBnHDTTTfVgXz7P1ZNBhQY4URG61DKIF-JSSClyh1xKuMoJX0lILXDYGGcjVTZL_hci4IXPPTpOJHV51-pxuO7WU5M9252UYoiYyCJ56ai8N49aKIMsqhdGuO4aWUwsGIW4oQpjtce5eEojCprYl-9rDhTwLAFoBtjy6LvkqlR2Ae5dKZYpStljBjK8PJrBvWZjXAEMDdQ8PuQ\\\",\\n\" +\n        \"  \\\"e\\\": \\\"AQAB\\\",\\n\" +\n        \"  \\\"use\\\": \\\"sig\\\",\\n\" +\n        \"  \\\"kid\\\": \\\"test\\\",\\n\" +\n        \"  \\\"alg\\\": \\\"RS256\\\",\\n\" +\n        \"  \\\"n\\\": \\\"jeyrvOaZrmKWjyNXt0myAc_pJ1hNt3aRupExJEx1ewPaL9J9HFgSCjMrYxCB1ETO1NDyZ3nSgjZis-jHHDqBxBjRdq_t1E2rkGFaYbxAyKt220Pwgme_SFTB9MXVrFQGkKyjmQeVmOmV6zM3KK8uMdKQJ4aoKmwBcF5Zg7EZdDcKOFgpgva1Jq-FlEsaJ2xrYDYo3KnGcOHIt9_0NQeLsqZbeWYLxYni7uROFncXYV5FhSJCeR4A_rrbwlaCydGxE0ToC_9HNYibUHlkJjqyUhAgORCbNS8JLCJH8NUi5sDdIawK9GTSyvsJXZ-QHqo4cMUuxWV5AJtaRGghuMUfqQ\\\"\\n\" +\n        \"}\";\n\n    PublicJsonWebKey jwk = RsaJsonWebKey.Factory.newPublicJwk(jwkJSON);\n    JwtClaims claims = JWTAuthPluginTest.generateClaims();\n    jws = new JsonWebSignature();\n    jws.setPayload(claims.toJson());\n    jws.setKey(jwk.getPrivateKey());\n    jws.setKeyIdHeaderValue(jwk.getKeyId());\n    jws.setAlgorithmHeaderValue(AlgorithmIdentifiers.RSA_USING_SHA256);\n\n    jwtTestToken = jws.getCompactSerialization();\n    \n    PublicJsonWebKey jwk2 = RsaJwkGenerator.generateJwk(2048);\n    jwk2.setKeyId(\"k2\");\n    JsonWebSignature jws2 = new JsonWebSignature();\n    jws2.setPayload(claims.toJson());\n    jws2.setKey(jwk2.getPrivateKey());\n    jws2.setKeyIdHeaderValue(jwk2.getKeyId());\n    jws2.setAlgorithmHeaderValue(AlgorithmIdentifiers.RSA_USING_SHA256);\n    jwtTokenWrongSignature = jws2.getCompactSerialization();\n\n    cluster.waitForAllNodes(10);\n  }\n\n","sourceOld":"  @Override\n  @Before\n  public void setUp() throws Exception {\n    super.setUp();\n    \n    configureCluster(NUM_SERVERS)// nodes\n        .withSecurityJson(TEST_PATH().resolve(\"security\").resolve(\"jwt_plugin_jwk_security.json\"))\n        .addConfig(\"conf1\", TEST_PATH().resolve(\"configsets\").resolve(\"cloud-minimal\").resolve(\"conf\"))\n        .configure();\n    baseUrl = cluster.getRandomJetty(random()).getBaseUrl().toString();\n\n    String jwkJSON = \"{\\n\" +\n        \"  \\\"kty\\\": \\\"RSA\\\",\\n\" +\n        \"  \\\"d\\\": \\\"i6pyv2z3o-MlYytWsOr3IE1olu2RXZBzjPRBNgWAP1TlLNaphHEvH5aHhe_CtBAastgFFMuP29CFhaL3_tGczkvWJkSveZQN2AHWHgRShKgoSVMspkhOt3Ghha4CvpnZ9BnQzVHnaBnHDTTTfVgXz7P1ZNBhQY4URG61DKIF-JSSClyh1xKuMoJX0lILXDYGGcjVTZL_hci4IXPPTpOJHV51-pxuO7WU5M9252UYoiYyCJ56ai8N49aKIMsqhdGuO4aWUwsGIW4oQpjtce5eEojCprYl-9rDhTwLAFoBtjy6LvkqlR2Ae5dKZYpStljBjK8PJrBvWZjXAEMDdQ8PuQ\\\",\\n\" +\n        \"  \\\"e\\\": \\\"AQAB\\\",\\n\" +\n        \"  \\\"use\\\": \\\"sig\\\",\\n\" +\n        \"  \\\"kid\\\": \\\"test\\\",\\n\" +\n        \"  \\\"alg\\\": \\\"RS256\\\",\\n\" +\n        \"  \\\"n\\\": \\\"jeyrvOaZrmKWjyNXt0myAc_pJ1hNt3aRupExJEx1ewPaL9J9HFgSCjMrYxCB1ETO1NDyZ3nSgjZis-jHHDqBxBjRdq_t1E2rkGFaYbxAyKt220Pwgme_SFTB9MXVrFQGkKyjmQeVmOmV6zM3KK8uMdKQJ4aoKmwBcF5Zg7EZdDcKOFgpgva1Jq-FlEsaJ2xrYDYo3KnGcOHIt9_0NQeLsqZbeWYLxYni7uROFncXYV5FhSJCeR4A_rrbwlaCydGxE0ToC_9HNYibUHlkJjqyUhAgORCbNS8JLCJH8NUi5sDdIawK9GTSyvsJXZ-QHqo4cMUuxWV5AJtaRGghuMUfqQ\\\"\\n\" +\n        \"}\";\n\n    PublicJsonWebKey jwk = RsaJsonWebKey.Factory.newPublicJwk(jwkJSON);\n    JwtClaims claims = JWTAuthPluginTest.generateClaims();\n    jws = new JsonWebSignature();\n    jws.setPayload(claims.toJson());\n    jws.setKey(jwk.getPrivateKey());\n    jws.setKeyIdHeaderValue(jwk.getKeyId());\n    jws.setAlgorithmHeaderValue(AlgorithmIdentifiers.RSA_USING_SHA256);\n\n    jwtTestToken = jws.getCompactSerialization();\n    \n    PublicJsonWebKey jwk2 = RsaJwkGenerator.generateJwk(2048);\n    jwk2.setKeyId(\"k2\");\n    JsonWebSignature jws2 = new JsonWebSignature();\n    jws2.setPayload(claims.toJson());\n    jws2.setKey(jwk2.getPrivateKey());\n    jws2.setKeyIdHeaderValue(jwk2.getKeyId());\n    jws2.setAlgorithmHeaderValue(AlgorithmIdentifiers.RSA_USING_SHA256);\n    jwtTokenWrongSignature = jws2.getCompactSerialization();\n\n    cluster.waitForAllNodes(10);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"413f18c5620cf37b9bb2dfa7d3071bfa08b69a0d":["bb3e075eaa5788b2762ec235bf72b069cefe3f50"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["413f18c5620cf37b9bb2dfa7d3071bfa08b69a0d"],"bb3e075eaa5788b2762ec235bf72b069cefe3f50":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"2682a1cd25864ccdc1b44bf047bd08700f28ba06":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","bb3e075eaa5788b2762ec235bf72b069cefe3f50"]},"commit2Childs":{"413f18c5620cf37b9bb2dfa7d3071bfa08b69a0d":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["bb3e075eaa5788b2762ec235bf72b069cefe3f50","2682a1cd25864ccdc1b44bf047bd08700f28ba06"],"bb3e075eaa5788b2762ec235bf72b069cefe3f50":["413f18c5620cf37b9bb2dfa7d3071bfa08b69a0d","2682a1cd25864ccdc1b44bf047bd08700f28ba06"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"2682a1cd25864ccdc1b44bf047bd08700f28ba06":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","2682a1cd25864ccdc1b44bf047bd08700f28ba06"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}