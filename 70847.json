{"path":"lucene/core/src/test/org/apache/lucene/util/automaton/TestOperations#testTopoSortEatsStack().mjava","commits":[{"id":"54297202372099824b9eb2d6897335b221455496","date":1501840968,"type":0,"author":"Jim Ferenczi","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/automaton/TestOperations#testTopoSortEatsStack().mjava","pathOld":"/dev/null","sourceNew":"  public void testTopoSortEatsStack() {\n    char[] chars = new char[50000];\n    TestUtil.randomFixedLengthUnicodeString(random(), chars, 0, chars.length);\n    String bigString1 = new String(chars);\n    TestUtil.randomFixedLengthUnicodeString(random(), chars, 0, chars.length);\n    String bigString2 = new String(chars);\n    Automaton a = Operations.union(Automata.makeString(bigString1), Automata.makeString(bigString2));\n    IllegalArgumentException exc = expectThrows(IllegalArgumentException.class, () -> Operations.topoSortStates(a));\n    assertTrue(exc.getMessage().contains(\"input automaton is too large\"));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7a23cf16c8fa265dc0a564adcabb55e3f054e0ac","date":1502192746,"type":0,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/util/automaton/TestOperations#testTopoSortEatsStack().mjava","pathOld":"/dev/null","sourceNew":"  public void testTopoSortEatsStack() {\n    char[] chars = new char[50000];\n    TestUtil.randomFixedLengthUnicodeString(random(), chars, 0, chars.length);\n    String bigString1 = new String(chars);\n    TestUtil.randomFixedLengthUnicodeString(random(), chars, 0, chars.length);\n    String bigString2 = new String(chars);\n    Automaton a = Operations.union(Automata.makeString(bigString1), Automata.makeString(bigString2));\n    IllegalArgumentException exc = expectThrows(IllegalArgumentException.class, () -> Operations.topoSortStates(a));\n    assertTrue(exc.getMessage().contains(\"input automaton is too large\"));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7a23cf16c8fa265dc0a564adcabb55e3f054e0ac":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","54297202372099824b9eb2d6897335b221455496"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"54297202372099824b9eb2d6897335b221455496":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["54297202372099824b9eb2d6897335b221455496"]},"commit2Childs":{"7a23cf16c8fa265dc0a564adcabb55e3f054e0ac":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7a23cf16c8fa265dc0a564adcabb55e3f054e0ac","54297202372099824b9eb2d6897335b221455496"],"54297202372099824b9eb2d6897335b221455496":["7a23cf16c8fa265dc0a564adcabb55e3f054e0ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7a23cf16c8fa265dc0a564adcabb55e3f054e0ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}