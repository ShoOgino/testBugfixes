{"path":"solr/core/src/test/org/apache/solr/update/processor/SkipExistingDocumentsProcessorFactoryTest#testSkippableInsertIsNotSkippedIfSkipInsertsFalse().mjava","commits":[{"id":"e1915a2721a80afb07f9d36cd3108d22a1dfbf7a","date":1484102913,"type":0,"author":"koji","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/processor/SkipExistingDocumentsProcessorFactoryTest#testSkippableInsertIsNotSkippedIfSkipInsertsFalse().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testSkippableInsertIsNotSkippedIfSkipInsertsFalse() throws IOException {\n    UpdateRequestProcessor next = Mockito.mock(DistributedUpdateProcessor.class);\n    SkipExistingDocumentsUpdateProcessor processor\n            = Mockito.spy(new SkipExistingDocumentsUpdateProcessor(defaultRequest, next, false, false));\n\n    AddUpdateCommand cmd = createInsertUpdateCmd(defaultRequest);\n    doReturn(true).when(processor).isLeader(cmd);\n    doReturn(true).when(processor).doesDocumentExist(docId);\n\n    processor.processAdd(cmd);\n    verify(next).processAdd(cmd);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"09ab8ee44ca898536770d0106a7c0ee4be4f0eb7","date":1484239864,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/update/processor/SkipExistingDocumentsProcessorFactoryTest#testSkippableInsertIsNotSkippedIfSkipInsertsFalse().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testSkippableInsertIsNotSkippedIfSkipInsertsFalse() throws IOException {\n    UpdateRequestProcessor next = Mockito.mock(DistributedUpdateProcessor.class);\n    SkipExistingDocumentsUpdateProcessor processor\n            = Mockito.spy(new SkipExistingDocumentsUpdateProcessor(defaultRequest, next, false, false));\n\n    AddUpdateCommand cmd = createInsertUpdateCmd(defaultRequest);\n    doReturn(true).when(processor).isLeader(cmd);\n    doReturn(true).when(processor).doesDocumentExist(docId);\n\n    processor.processAdd(cmd);\n    verify(next).processAdd(cmd);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e1915a2721a80afb07f9d36cd3108d22a1dfbf7a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"09ab8ee44ca898536770d0106a7c0ee4be4f0eb7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","e1915a2721a80afb07f9d36cd3108d22a1dfbf7a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e1915a2721a80afb07f9d36cd3108d22a1dfbf7a"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e1915a2721a80afb07f9d36cd3108d22a1dfbf7a","09ab8ee44ca898536770d0106a7c0ee4be4f0eb7"],"e1915a2721a80afb07f9d36cd3108d22a1dfbf7a":["09ab8ee44ca898536770d0106a7c0ee4be4f0eb7","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"09ab8ee44ca898536770d0106a7c0ee4be4f0eb7":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["09ab8ee44ca898536770d0106a7c0ee4be4f0eb7","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}