{"path":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#segString(Iterable[SegmentInfoPerCommit]).mjava","commits":[{"id":"9d153abcf92dc5329d98571a8c3035df9bd80648","date":1337702630,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#segString(Iterable[SegmentInfoPerCommit]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#segString(Iterable[SegmentInfo]).mjava","sourceNew":"  /** @lucene.internal */\n  public synchronized String segString(Iterable<SegmentInfoPerCommit> infos) throws IOException {\n    final StringBuilder buffer = new StringBuilder();\n    for(final SegmentInfoPerCommit info : infos) {\n      if (buffer.length() > 0) {\n        buffer.append(' ');\n      }\n      buffer.append(segString(info));\n    }\n    return buffer.toString();\n  }\n\n","sourceOld":"  /** @lucene.internal */\n  public synchronized String segString(Iterable<SegmentInfo> infos) throws IOException {\n    final StringBuilder buffer = new StringBuilder();\n    for(final SegmentInfo info : infos) {\n      if (buffer.length() > 0) {\n        buffer.append(' ');\n      }\n      buffer.append(segString(info));\n    }\n    return buffer.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"615ddbd81799980d0fdd95e0238e1c498b6f47b0","date":1338233290,"type":1,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#segString(Iterable[SegmentInfoPerCommit]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#segString(Iterable[SegmentInfo]).mjava","sourceNew":"  /** @lucene.internal */\n  public synchronized String segString(Iterable<SegmentInfoPerCommit> infos) throws IOException {\n    final StringBuilder buffer = new StringBuilder();\n    for(final SegmentInfoPerCommit info : infos) {\n      if (buffer.length() > 0) {\n        buffer.append(' ');\n      }\n      buffer.append(segString(info));\n    }\n    return buffer.toString();\n  }\n\n","sourceOld":"  /** @lucene.internal */\n  public synchronized String segString(Iterable<SegmentInfo> infos) throws IOException {\n    final StringBuilder buffer = new StringBuilder();\n    for(final SegmentInfo info : infos) {\n      if (buffer.length() > 0) {\n        buffer.append(' ');\n      }\n      buffer.append(segString(info));\n    }\n    return buffer.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4d3e8520fd031bab31fd0e4d480e55958bc45efe","date":1340901565,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#segString(Iterable[SegmentInfoPerCommit]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#segString(Iterable[SegmentInfoPerCommit]).mjava","sourceNew":"  /** @lucene.internal */\n  public synchronized String segString(Iterable<SegmentInfoPerCommit> infos) {\n    final StringBuilder buffer = new StringBuilder();\n    for(final SegmentInfoPerCommit info : infos) {\n      if (buffer.length() > 0) {\n        buffer.append(' ');\n      }\n      buffer.append(segString(info));\n    }\n    return buffer.toString();\n  }\n\n","sourceOld":"  /** @lucene.internal */\n  public synchronized String segString(Iterable<SegmentInfoPerCommit> infos) throws IOException {\n    final StringBuilder buffer = new StringBuilder();\n    for(final SegmentInfoPerCommit info : infos) {\n      if (buffer.length() > 0) {\n        buffer.append(' ');\n      }\n      buffer.append(segString(info));\n    }\n    return buffer.toString();\n  }\n\n","bugFix":["9d153abcf92dc5329d98571a8c3035df9bd80648"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#segString(Iterable[SegmentInfoPerCommit]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#segString(Iterable[SegmentInfoPerCommit]).mjava","sourceNew":"  /** @lucene.internal */\n  public synchronized String segString(Iterable<SegmentInfoPerCommit> infos) {\n    final StringBuilder buffer = new StringBuilder();\n    for(final SegmentInfoPerCommit info : infos) {\n      if (buffer.length() > 0) {\n        buffer.append(' ');\n      }\n      buffer.append(segString(info));\n    }\n    return buffer.toString();\n  }\n\n","sourceOld":"  /** @lucene.internal */\n  public synchronized String segString(Iterable<SegmentInfoPerCommit> infos) throws IOException {\n    final StringBuilder buffer = new StringBuilder();\n    for(final SegmentInfoPerCommit info : infos) {\n      if (buffer.length() > 0) {\n        buffer.append(' ');\n      }\n      buffer.append(segString(info));\n    }\n    return buffer.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c14aed69f37b57db63b1fccc0740b17060a08f2b","date":1348227091,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#segString(Iterable[SegmentInfoPerCommit]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#segString(Iterable[SegmentInfoPerCommit]).mjava","sourceNew":"  /** Returns a string description of the specified\n   *  segments, for debugging.\n   *\n   * @lucene.internal */\n  public synchronized String segString(Iterable<SegmentInfoPerCommit> infos) {\n    final StringBuilder buffer = new StringBuilder();\n    for(final SegmentInfoPerCommit info : infos) {\n      if (buffer.length() > 0) {\n        buffer.append(' ');\n      }\n      buffer.append(segString(info));\n    }\n    return buffer.toString();\n  }\n\n","sourceOld":"  /** @lucene.internal */\n  public synchronized String segString(Iterable<SegmentInfoPerCommit> infos) {\n    final StringBuilder buffer = new StringBuilder();\n    for(final SegmentInfoPerCommit info : infos) {\n      if (buffer.length() > 0) {\n        buffer.append(' ');\n      }\n      buffer.append(segString(info));\n    }\n    return buffer.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0","date":1383367127,"type":5,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#segString(Iterable[SegmentCommitInfo]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#segString(Iterable[SegmentInfoPerCommit]).mjava","sourceNew":"  /** Returns a string description of the specified\n   *  segments, for debugging.\n   *\n   * @lucene.internal */\n  public synchronized String segString(Iterable<SegmentCommitInfo> infos) {\n    final StringBuilder buffer = new StringBuilder();\n    for(final SegmentCommitInfo info : infos) {\n      if (buffer.length() > 0) {\n        buffer.append(' ');\n      }\n      buffer.append(segString(info));\n    }\n    return buffer.toString();\n  }\n\n","sourceOld":"  /** Returns a string description of the specified\n   *  segments, for debugging.\n   *\n   * @lucene.internal */\n  public synchronized String segString(Iterable<SegmentInfoPerCommit> infos) {\n    final StringBuilder buffer = new StringBuilder();\n    for(final SegmentInfoPerCommit info : infos) {\n      if (buffer.length() > 0) {\n        buffer.append(' ');\n      }\n      buffer.append(segString(info));\n    }\n    return buffer.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0":["c14aed69f37b57db63b1fccc0740b17060a08f2b"],"615ddbd81799980d0fdd95e0238e1c498b6f47b0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","9d153abcf92dc5329d98571a8c3035df9bd80648"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["615ddbd81799980d0fdd95e0238e1c498b6f47b0","4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9d153abcf92dc5329d98571a8c3035df9bd80648":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4d3e8520fd031bab31fd0e4d480e55958bc45efe":["615ddbd81799980d0fdd95e0238e1c498b6f47b0"],"c14aed69f37b57db63b1fccc0740b17060a08f2b":["4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0"]},"commit2Childs":{"73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"615ddbd81799980d0fdd95e0238e1c498b6f47b0":["fe33227f6805edab2036cbb80645cc4e2d1fa424","4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["615ddbd81799980d0fdd95e0238e1c498b6f47b0","9d153abcf92dc5329d98571a8c3035df9bd80648"],"9d153abcf92dc5329d98571a8c3035df9bd80648":["615ddbd81799980d0fdd95e0238e1c498b6f47b0"],"4d3e8520fd031bab31fd0e4d480e55958bc45efe":["fe33227f6805edab2036cbb80645cc4e2d1fa424","c14aed69f37b57db63b1fccc0740b17060a08f2b"],"c14aed69f37b57db63b1fccc0740b17060a08f2b":["73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}