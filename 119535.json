{"path":"solr/core/src/test/org/apache/solr/rest/schema/TestManagedSchemaFieldResource#before().mjava","commits":[{"id":"08970e5b8411182a29412c177eff67ec1110095b","date":1366640815,"type":0,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/rest/schema/TestManagedSchemaFieldResource#before().mjava","pathOld":"/dev/null","sourceNew":"  @Before\n  public void before() throws Exception {\n    createTempDir();\n    String tmpSolrHome = TEMP_DIR + File.separator + AnalysisAfterCoreReloadTest.class.getSimpleName() + System.currentTimeMillis();\n    FileUtils.copyDirectory(new File(TEST_HOME()), new File(tmpSolrHome).getAbsoluteFile());\n    \n    final SortedMap<ServletHolder,String> extraServlets = new TreeMap<ServletHolder,String>();\n    final ServletHolder solrRestApi = new ServletHolder(\"SolrRestApi\", ServerServlet.class);\n    solrRestApi.setInitParameter(\"org.restlet.application\", \"org.apache.solr.rest.SolrRestApi\");\n    extraServlets.put(solrRestApi, \"/schema/*\");  // '/schema/*' matches '/schema', '/schema/', and '/schema/whatever...'\n\n    createJettyAndHarness(tmpSolrHome, \"solrconfig-mutable-managed-schema.xml\", \"schema-rest.xml\", \"/solr\", true, extraServlets);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1e0d5dcd5bcba76f5b672a85f179329a4969f456","date":1376419046,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/rest/schema/TestManagedSchemaFieldResource#before().mjava","pathOld":"solr/core/src/test/org/apache/solr/rest/schema/TestManagedSchemaFieldResource#before().mjava","sourceNew":"  @Before\n  public void before() throws Exception {\n    createTempDir();\n    String tmpSolrHome = TEMP_DIR + File.separator + AnalysisAfterCoreReloadTest.class.getSimpleName() + System.currentTimeMillis();\n    FileUtils.copyDirectory(new File(TEST_HOME()), new File(tmpSolrHome).getAbsoluteFile());\n    \n    final SortedMap<ServletHolder,String> extraServlets = new TreeMap<ServletHolder,String>();\n    final ServletHolder solrRestApi = new ServletHolder(\"SolrRestApi\", ServerServlet.class);\n    solrRestApi.setInitParameter(\"org.restlet.application\", \"org.apache.solr.rest.SolrRestApi\");\n    extraServlets.put(solrRestApi, \"/schema/*\");  // '/schema/*' matches '/schema', '/schema/', and '/schema/whatever...'\n\n    System.setProperty(\"managed.schema.mutable\", \"true\");\n    System.setProperty(\"enable.update.log\", \"false\");\n\n    createJettyAndHarness(tmpSolrHome, \"solrconfig-managed-schema.xml\", \"schema-rest.xml\", \"/solr\", true, extraServlets);\n  }\n\n","sourceOld":"  @Before\n  public void before() throws Exception {\n    createTempDir();\n    String tmpSolrHome = TEMP_DIR + File.separator + AnalysisAfterCoreReloadTest.class.getSimpleName() + System.currentTimeMillis();\n    FileUtils.copyDirectory(new File(TEST_HOME()), new File(tmpSolrHome).getAbsoluteFile());\n    \n    final SortedMap<ServletHolder,String> extraServlets = new TreeMap<ServletHolder,String>();\n    final ServletHolder solrRestApi = new ServletHolder(\"SolrRestApi\", ServerServlet.class);\n    solrRestApi.setInitParameter(\"org.restlet.application\", \"org.apache.solr.rest.SolrRestApi\");\n    extraServlets.put(solrRestApi, \"/schema/*\");  // '/schema/*' matches '/schema', '/schema/', and '/schema/whatever...'\n\n    createJettyAndHarness(tmpSolrHome, \"solrconfig-mutable-managed-schema.xml\", \"schema-rest.xml\", \"/solr\", true, extraServlets);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3dffec77fb8f7d0e9ca4869dddd6af94528b4576","date":1377875202,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/rest/schema/TestManagedSchemaFieldResource#before().mjava","pathOld":"solr/core/src/test/org/apache/solr/rest/schema/TestManagedSchemaFieldResource#before().mjava","sourceNew":"  @Before\n  public void before() throws Exception {\n    createTempDir();\n    String tmpSolrHome = TEMP_DIR + File.separator + AnalysisAfterCoreReloadTest.class.getSimpleName() + System.currentTimeMillis();\n    FileUtils.copyDirectory(new File(TEST_HOME()), new File(tmpSolrHome).getAbsoluteFile());\n    \n    final SortedMap<ServletHolder,String> extraServlets = new TreeMap<ServletHolder,String>();\n    final ServletHolder solrRestApi = new ServletHolder(\"SolrRestApi\", ServerServlet.class);\n    solrRestApi.setInitParameter(\"org.restlet.application\", \"org.apache.solr.rest.SolrRestApi\");\n    extraServlets.put(solrRestApi, \"/schema/*\");  // '/schema/*' matches '/schema', '/schema/', and '/schema/whatever...'\n\n    System.setProperty(\"managed.schema.mutable\", \"true\");\n    System.setProperty(\"enable.update.log\", \"false\");\n\n    createJettyAndHarness(tmpSolrHome, \"solrconfig-managed-schema.xml\", \"schema-rest.xml\", \"/solr\", true, extraServlets);\n  }\n\n","sourceOld":"  @Before\n  public void before() throws Exception {\n    createTempDir();\n    String tmpSolrHome = TEMP_DIR + File.separator + AnalysisAfterCoreReloadTest.class.getSimpleName() + System.currentTimeMillis();\n    FileUtils.copyDirectory(new File(TEST_HOME()), new File(tmpSolrHome).getAbsoluteFile());\n    \n    final SortedMap<ServletHolder,String> extraServlets = new TreeMap<ServletHolder,String>();\n    final ServletHolder solrRestApi = new ServletHolder(\"SolrRestApi\", ServerServlet.class);\n    solrRestApi.setInitParameter(\"org.restlet.application\", \"org.apache.solr.rest.SolrRestApi\");\n    extraServlets.put(solrRestApi, \"/schema/*\");  // '/schema/*' matches '/schema', '/schema/', and '/schema/whatever...'\n\n    createJettyAndHarness(tmpSolrHome, \"solrconfig-mutable-managed-schema.xml\", \"schema-rest.xml\", \"/solr\", true, extraServlets);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4d2b6e7e5c0569efc1d4cac630d4075d46c6432e","date":1383208237,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/rest/schema/TestManagedSchemaFieldResource#before().mjava","pathOld":"solr/core/src/test/org/apache/solr/rest/schema/TestManagedSchemaFieldResource#before().mjava","sourceNew":"  @Before\n  public void before() throws Exception {\n    createTempDir();\n    tmpSolrHome = new File( TEMP_DIR + File.separator + TestManagedSchemaFieldResource.class.getSimpleName() \n                          + System.currentTimeMillis());\n    tmpConfDir = new File(tmpSolrHome, confDir);\n    FileUtils.copyDirectory(new File(TEST_HOME()), tmpSolrHome.getAbsoluteFile());\n    \n    final SortedMap<ServletHolder,String> extraServlets = new TreeMap<ServletHolder,String>();\n    final ServletHolder solrRestApi = new ServletHolder(\"SolrRestApi\", ServerServlet.class);\n    solrRestApi.setInitParameter(\"org.restlet.application\", \"org.apache.solr.rest.SolrRestApi\");\n    extraServlets.put(solrRestApi, \"/schema/*\");  // '/schema/*' matches '/schema', '/schema/', and '/schema/whatever...'\n\n    System.setProperty(\"managed.schema.mutable\", \"true\");\n    System.setProperty(\"enable.update.log\", \"false\");\n\n    createJettyAndHarness(tmpSolrHome.getAbsolutePath(), \"solrconfig-managed-schema.xml\", \"schema-rest.xml\",\n                          \"/solr\", true, extraServlets);\n  }\n\n","sourceOld":"  @Before\n  public void before() throws Exception {\n    createTempDir();\n    String tmpSolrHome = TEMP_DIR + File.separator + AnalysisAfterCoreReloadTest.class.getSimpleName() + System.currentTimeMillis();\n    FileUtils.copyDirectory(new File(TEST_HOME()), new File(tmpSolrHome).getAbsoluteFile());\n    \n    final SortedMap<ServletHolder,String> extraServlets = new TreeMap<ServletHolder,String>();\n    final ServletHolder solrRestApi = new ServletHolder(\"SolrRestApi\", ServerServlet.class);\n    solrRestApi.setInitParameter(\"org.restlet.application\", \"org.apache.solr.rest.SolrRestApi\");\n    extraServlets.put(solrRestApi, \"/schema/*\");  // '/schema/*' matches '/schema', '/schema/', and '/schema/whatever...'\n\n    System.setProperty(\"managed.schema.mutable\", \"true\");\n    System.setProperty(\"enable.update.log\", \"false\");\n\n    createJettyAndHarness(tmpSolrHome, \"solrconfig-managed-schema.xml\", \"schema-rest.xml\", \"/solr\", true, extraServlets);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/rest/schema/TestManagedSchemaFieldResource#before().mjava","pathOld":"solr/core/src/test/org/apache/solr/rest/schema/TestManagedSchemaFieldResource#before().mjava","sourceNew":"  @Before\n  public void before() throws Exception {\n    createTempDir();\n    tmpSolrHome = new File( TEMP_DIR + File.separator + TestManagedSchemaFieldResource.class.getSimpleName() \n                          + System.currentTimeMillis());\n    tmpConfDir = new File(tmpSolrHome, confDir);\n    FileUtils.copyDirectory(new File(TEST_HOME()), tmpSolrHome.getAbsoluteFile());\n    \n    final SortedMap<ServletHolder,String> extraServlets = new TreeMap<>();\n    final ServletHolder solrRestApi = new ServletHolder(\"SolrRestApi\", ServerServlet.class);\n    solrRestApi.setInitParameter(\"org.restlet.application\", \"org.apache.solr.rest.SolrRestApi\");\n    extraServlets.put(solrRestApi, \"/schema/*\");  // '/schema/*' matches '/schema', '/schema/', and '/schema/whatever...'\n\n    System.setProperty(\"managed.schema.mutable\", \"true\");\n    System.setProperty(\"enable.update.log\", \"false\");\n\n    createJettyAndHarness(tmpSolrHome.getAbsolutePath(), \"solrconfig-managed-schema.xml\", \"schema-rest.xml\",\n                          \"/solr\", true, extraServlets);\n  }\n\n","sourceOld":"  @Before\n  public void before() throws Exception {\n    createTempDir();\n    tmpSolrHome = new File( TEMP_DIR + File.separator + TestManagedSchemaFieldResource.class.getSimpleName() \n                          + System.currentTimeMillis());\n    tmpConfDir = new File(tmpSolrHome, confDir);\n    FileUtils.copyDirectory(new File(TEST_HOME()), tmpSolrHome.getAbsoluteFile());\n    \n    final SortedMap<ServletHolder,String> extraServlets = new TreeMap<ServletHolder,String>();\n    final ServletHolder solrRestApi = new ServletHolder(\"SolrRestApi\", ServerServlet.class);\n    solrRestApi.setInitParameter(\"org.restlet.application\", \"org.apache.solr.rest.SolrRestApi\");\n    extraServlets.put(solrRestApi, \"/schema/*\");  // '/schema/*' matches '/schema', '/schema/', and '/schema/whatever...'\n\n    System.setProperty(\"managed.schema.mutable\", \"true\");\n    System.setProperty(\"enable.update.log\", \"false\");\n\n    createJettyAndHarness(tmpSolrHome.getAbsolutePath(), \"solrconfig-managed-schema.xml\", \"schema-rest.xml\",\n                          \"/solr\", true, extraServlets);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"afb6bf9ce227ab6aac5068547e286ecc958b8b9d","date":1394661169,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/rest/schema/TestManagedSchemaFieldResource#before().mjava","pathOld":"solr/core/src/test/org/apache/solr/rest/schema/TestManagedSchemaFieldResource#before().mjava","sourceNew":"  @Before\n  public void before() throws Exception {\n    createTempDir();\n    tmpSolrHome = new File( TEMP_DIR + File.separator + TestManagedSchemaFieldResource.class.getSimpleName() \n                          + System.currentTimeMillis());\n    tmpConfDir = new File(tmpSolrHome, confDir);\n    FileUtils.copyDirectory(new File(TEST_HOME()), tmpSolrHome.getAbsoluteFile());\n    \n    final SortedMap<ServletHolder,String> extraServlets = new TreeMap<>();\n    final ServletHolder solrRestApi = new ServletHolder(\"SolrSchemaRestApi\", ServerServlet.class);\n    solrRestApi.setInitParameter(\"org.restlet.application\", \"org.apache.solr.rest.SolrSchemaRestApi\");\n    extraServlets.put(solrRestApi, \"/schema/*\");  // '/schema/*' matches '/schema', '/schema/', and '/schema/whatever...'\n\n    System.setProperty(\"managed.schema.mutable\", \"true\");\n    System.setProperty(\"enable.update.log\", \"false\");\n\n    createJettyAndHarness(tmpSolrHome.getAbsolutePath(), \"solrconfig-managed-schema.xml\", \"schema-rest.xml\",\n                          \"/solr\", true, extraServlets);\n  }\n\n","sourceOld":"  @Before\n  public void before() throws Exception {\n    createTempDir();\n    tmpSolrHome = new File( TEMP_DIR + File.separator + TestManagedSchemaFieldResource.class.getSimpleName() \n                          + System.currentTimeMillis());\n    tmpConfDir = new File(tmpSolrHome, confDir);\n    FileUtils.copyDirectory(new File(TEST_HOME()), tmpSolrHome.getAbsoluteFile());\n    \n    final SortedMap<ServletHolder,String> extraServlets = new TreeMap<>();\n    final ServletHolder solrRestApi = new ServletHolder(\"SolrRestApi\", ServerServlet.class);\n    solrRestApi.setInitParameter(\"org.restlet.application\", \"org.apache.solr.rest.SolrRestApi\");\n    extraServlets.put(solrRestApi, \"/schema/*\");  // '/schema/*' matches '/schema', '/schema/', and '/schema/whatever...'\n\n    System.setProperty(\"managed.schema.mutable\", \"true\");\n    System.setProperty(\"enable.update.log\", \"false\");\n\n    createJettyAndHarness(tmpSolrHome.getAbsolutePath(), \"solrconfig-managed-schema.xml\", \"schema-rest.xml\",\n                          \"/solr\", true, extraServlets);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0d579490a72f2e6297eaa648940611234c57cf1","date":1395917140,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/rest/schema/TestManagedSchemaFieldResource#before().mjava","pathOld":"solr/core/src/test/org/apache/solr/rest/schema/TestManagedSchemaFieldResource#before().mjava","sourceNew":"  @Before\n  public void before() throws Exception {\n    createTempDir();\n    tmpSolrHome = TestUtil.createTempDir(LuceneTestCase.getTestClass().getSimpleName());\n    tmpConfDir = new File(tmpSolrHome, confDir);\n    FileUtils.copyDirectory(new File(TEST_HOME()), tmpSolrHome.getAbsoluteFile());\n\n    final SortedMap<ServletHolder,String> extraServlets = new TreeMap<>();\n    final ServletHolder solrRestApi = new ServletHolder(\"SolrSchemaRestApi\", ServerServlet.class);\n    solrRestApi.setInitParameter(\"org.restlet.application\", \"org.apache.solr.rest.SolrSchemaRestApi\");\n    extraServlets.put(solrRestApi, \"/schema/*\");  // '/schema/*' matches '/schema', '/schema/', and '/schema/whatever...'\n\n    System.setProperty(\"managed.schema.mutable\", \"true\");\n    System.setProperty(\"enable.update.log\", \"false\");\n\n    createJettyAndHarness(tmpSolrHome.getAbsolutePath(), \"solrconfig-managed-schema.xml\", \"schema-rest.xml\",\n                          \"/solr\", true, extraServlets);\n  }\n\n","sourceOld":"  @Before\n  public void before() throws Exception {\n    createTempDir();\n    tmpSolrHome = new File( TEMP_DIR + File.separator + TestManagedSchemaFieldResource.class.getSimpleName() \n                          + System.currentTimeMillis());\n    tmpConfDir = new File(tmpSolrHome, confDir);\n    FileUtils.copyDirectory(new File(TEST_HOME()), tmpSolrHome.getAbsoluteFile());\n    \n    final SortedMap<ServletHolder,String> extraServlets = new TreeMap<>();\n    final ServletHolder solrRestApi = new ServletHolder(\"SolrSchemaRestApi\", ServerServlet.class);\n    solrRestApi.setInitParameter(\"org.restlet.application\", \"org.apache.solr.rest.SolrSchemaRestApi\");\n    extraServlets.put(solrRestApi, \"/schema/*\");  // '/schema/*' matches '/schema', '/schema/', and '/schema/whatever...'\n\n    System.setProperty(\"managed.schema.mutable\", \"true\");\n    System.setProperty(\"enable.update.log\", \"false\");\n\n    createJettyAndHarness(tmpSolrHome.getAbsolutePath(), \"solrconfig-managed-schema.xml\", \"schema-rest.xml\",\n                          \"/solr\", true, extraServlets);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1416f9d09d016a6894cd17e1caac137dad2bba59","date":1395941020,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/rest/schema/TestManagedSchemaFieldResource#before().mjava","pathOld":"solr/core/src/test/org/apache/solr/rest/schema/TestManagedSchemaFieldResource#before().mjava","sourceNew":"  @Before\n  public void before() throws Exception {\n    tmpSolrHome = new File( dataDir + File.separator + TestManagedSchemaFieldResource.class.getSimpleName() \n                          + System.currentTimeMillis());\n    tmpConfDir = new File(tmpSolrHome, confDir);\n    FileUtils.copyDirectory(new File(TEST_HOME()), tmpSolrHome.getAbsoluteFile());\n    \n    final SortedMap<ServletHolder,String> extraServlets = new TreeMap<>();\n    final ServletHolder solrRestApi = new ServletHolder(\"SolrSchemaRestApi\", ServerServlet.class);\n    solrRestApi.setInitParameter(\"org.restlet.application\", \"org.apache.solr.rest.SolrSchemaRestApi\");\n    extraServlets.put(solrRestApi, \"/schema/*\");  // '/schema/*' matches '/schema', '/schema/', and '/schema/whatever...'\n\n    System.setProperty(\"managed.schema.mutable\", \"true\");\n    System.setProperty(\"enable.update.log\", \"false\");\n\n    createJettyAndHarness(tmpSolrHome.getAbsolutePath(), \"solrconfig-managed-schema.xml\", \"schema-rest.xml\",\n                          \"/solr\", true, extraServlets);\n  }\n\n","sourceOld":"  @Before\n  public void before() throws Exception {\n    createTempDir();\n    tmpSolrHome = new File( TEMP_DIR + File.separator + TestManagedSchemaFieldResource.class.getSimpleName() \n                          + System.currentTimeMillis());\n    tmpConfDir = new File(tmpSolrHome, confDir);\n    FileUtils.copyDirectory(new File(TEST_HOME()), tmpSolrHome.getAbsoluteFile());\n    \n    final SortedMap<ServletHolder,String> extraServlets = new TreeMap<>();\n    final ServletHolder solrRestApi = new ServletHolder(\"SolrSchemaRestApi\", ServerServlet.class);\n    solrRestApi.setInitParameter(\"org.restlet.application\", \"org.apache.solr.rest.SolrSchemaRestApi\");\n    extraServlets.put(solrRestApi, \"/schema/*\");  // '/schema/*' matches '/schema', '/schema/', and '/schema/whatever...'\n\n    System.setProperty(\"managed.schema.mutable\", \"true\");\n    System.setProperty(\"enable.update.log\", \"false\");\n\n    createJettyAndHarness(tmpSolrHome.getAbsolutePath(), \"solrconfig-managed-schema.xml\", \"schema-rest.xml\",\n                          \"/solr\", true, extraServlets);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb1f22cfa77230b5f05b7784feae5367f6bbb488","date":1395968145,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/rest/schema/TestManagedSchemaFieldResource#before().mjava","pathOld":"solr/core/src/test/org/apache/solr/rest/schema/TestManagedSchemaFieldResource#before().mjava","sourceNew":"  @Before\n  public void before() throws Exception {\n    tmpSolrHome = createTempDir();\n    tmpConfDir = new File(tmpSolrHome, confDir);\n    FileUtils.copyDirectory(new File(TEST_HOME()), tmpSolrHome.getAbsoluteFile());\n\n    final SortedMap<ServletHolder,String> extraServlets = new TreeMap<>();\n    final ServletHolder solrRestApi = new ServletHolder(\"SolrSchemaRestApi\", ServerServlet.class);\n    solrRestApi.setInitParameter(\"org.restlet.application\", \"org.apache.solr.rest.SolrSchemaRestApi\");\n    extraServlets.put(solrRestApi, \"/schema/*\");  // '/schema/*' matches '/schema', '/schema/', and '/schema/whatever...'\n\n    System.setProperty(\"managed.schema.mutable\", \"true\");\n    System.setProperty(\"enable.update.log\", \"false\");\n\n    createJettyAndHarness(tmpSolrHome.getAbsolutePath(), \"solrconfig-managed-schema.xml\", \"schema-rest.xml\",\n                          \"/solr\", true, extraServlets);\n  }\n\n","sourceOld":"  @Before\n  public void before() throws Exception {\n    createTempDir();\n    tmpSolrHome = TestUtil.createTempDir(LuceneTestCase.getTestClass().getSimpleName());\n    tmpConfDir = new File(tmpSolrHome, confDir);\n    FileUtils.copyDirectory(new File(TEST_HOME()), tmpSolrHome.getAbsoluteFile());\n\n    final SortedMap<ServletHolder,String> extraServlets = new TreeMap<>();\n    final ServletHolder solrRestApi = new ServletHolder(\"SolrSchemaRestApi\", ServerServlet.class);\n    solrRestApi.setInitParameter(\"org.restlet.application\", \"org.apache.solr.rest.SolrSchemaRestApi\");\n    extraServlets.put(solrRestApi, \"/schema/*\");  // '/schema/*' matches '/schema', '/schema/', and '/schema/whatever...'\n\n    System.setProperty(\"managed.schema.mutable\", \"true\");\n    System.setProperty(\"enable.update.log\", \"false\");\n\n    createJettyAndHarness(tmpSolrHome.getAbsolutePath(), \"solrconfig-managed-schema.xml\", \"schema-rest.xml\",\n                          \"/solr\", true, extraServlets);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a0f5bb79c600763ffe7b8141df59a3169d31e48","date":1396689440,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/rest/schema/TestManagedSchemaFieldResource#before().mjava","pathOld":"solr/core/src/test/org/apache/solr/rest/schema/TestManagedSchemaFieldResource#before().mjava","sourceNew":"  @Before\n  public void before() throws Exception {\n    tmpSolrHome = createTempDir();\n    tmpConfDir = new File(tmpSolrHome, confDir);\n    FileUtils.copyDirectory(new File(TEST_HOME()), tmpSolrHome.getAbsoluteFile());\n\n    final SortedMap<ServletHolder,String> extraServlets = new TreeMap<>();\n    final ServletHolder solrRestApi = new ServletHolder(\"SolrSchemaRestApi\", ServerServlet.class);\n    solrRestApi.setInitParameter(\"org.restlet.application\", \"org.apache.solr.rest.SolrSchemaRestApi\");\n    extraServlets.put(solrRestApi, \"/schema/*\");  // '/schema/*' matches '/schema', '/schema/', and '/schema/whatever...'\n\n    System.setProperty(\"managed.schema.mutable\", \"true\");\n    System.setProperty(\"enable.update.log\", \"false\");\n\n    createJettyAndHarness(tmpSolrHome.getAbsolutePath(), \"solrconfig-managed-schema.xml\", \"schema-rest.xml\",\n                          \"/solr\", true, extraServlets);\n  }\n\n","sourceOld":"  @Before\n  public void before() throws Exception {\n    tmpSolrHome = new File( dataDir + File.separator + TestManagedSchemaFieldResource.class.getSimpleName() \n                          + System.currentTimeMillis());\n    tmpConfDir = new File(tmpSolrHome, confDir);\n    FileUtils.copyDirectory(new File(TEST_HOME()), tmpSolrHome.getAbsoluteFile());\n    \n    final SortedMap<ServletHolder,String> extraServlets = new TreeMap<>();\n    final ServletHolder solrRestApi = new ServletHolder(\"SolrSchemaRestApi\", ServerServlet.class);\n    solrRestApi.setInitParameter(\"org.restlet.application\", \"org.apache.solr.rest.SolrSchemaRestApi\");\n    extraServlets.put(solrRestApi, \"/schema/*\");  // '/schema/*' matches '/schema', '/schema/', and '/schema/whatever...'\n\n    System.setProperty(\"managed.schema.mutable\", \"true\");\n    System.setProperty(\"enable.update.log\", \"false\");\n\n    createJettyAndHarness(tmpSolrHome.getAbsolutePath(), \"solrconfig-managed-schema.xml\", \"schema-rest.xml\",\n                          \"/solr\", true, extraServlets);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f4abec28b874149a7223e32cc7a01704c27790de","date":1410644789,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/rest/schema/TestManagedSchemaFieldResource#before().mjava","pathOld":"solr/core/src/test/org/apache/solr/rest/schema/TestManagedSchemaFieldResource#before().mjava","sourceNew":"  @Before\n  public void before() throws Exception {\n    tmpSolrHome = createTempDir().toFile();\n    tmpConfDir = new File(tmpSolrHome, confDir);\n    FileUtils.copyDirectory(new File(TEST_HOME()), tmpSolrHome.getAbsoluteFile());\n\n    final SortedMap<ServletHolder,String> extraServlets = new TreeMap<>();\n    final ServletHolder solrRestApi = new ServletHolder(\"SolrSchemaRestApi\", ServerServlet.class);\n    solrRestApi.setInitParameter(\"org.restlet.application\", \"org.apache.solr.rest.SolrSchemaRestApi\");\n    extraServlets.put(solrRestApi, \"/schema/*\");  // '/schema/*' matches '/schema', '/schema/', and '/schema/whatever...'\n\n    System.setProperty(\"managed.schema.mutable\", \"true\");\n    System.setProperty(\"enable.update.log\", \"false\");\n\n    createJettyAndHarness(tmpSolrHome.getAbsolutePath(), \"solrconfig-managed-schema.xml\", \"schema-rest.xml\",\n                          \"/solr\", true, extraServlets);\n  }\n\n","sourceOld":"  @Before\n  public void before() throws Exception {\n    tmpSolrHome = createTempDir();\n    tmpConfDir = new File(tmpSolrHome, confDir);\n    FileUtils.copyDirectory(new File(TEST_HOME()), tmpSolrHome.getAbsoluteFile());\n\n    final SortedMap<ServletHolder,String> extraServlets = new TreeMap<>();\n    final ServletHolder solrRestApi = new ServletHolder(\"SolrSchemaRestApi\", ServerServlet.class);\n    solrRestApi.setInitParameter(\"org.restlet.application\", \"org.apache.solr.rest.SolrSchemaRestApi\");\n    extraServlets.put(solrRestApi, \"/schema/*\");  // '/schema/*' matches '/schema', '/schema/', and '/schema/whatever...'\n\n    System.setProperty(\"managed.schema.mutable\", \"true\");\n    System.setProperty(\"enable.update.log\", \"false\");\n\n    createJettyAndHarness(tmpSolrHome.getAbsolutePath(), \"solrconfig-managed-schema.xml\", \"schema-rest.xml\",\n                          \"/solr\", true, extraServlets);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f494bc636a1302995e4930fdccd371eeda452f87","date":1457370876,"type":4,"author":"Noble Paul","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/rest/schema/TestManagedSchemaFieldResource#before().mjava","sourceNew":null,"sourceOld":"  @Before\n  public void before() throws Exception {\n    tmpSolrHome = createTempDir().toFile();\n    tmpConfDir = new File(tmpSolrHome, confDir);\n    FileUtils.copyDirectory(new File(TEST_HOME()), tmpSolrHome.getAbsoluteFile());\n\n    final SortedMap<ServletHolder,String> extraServlets = new TreeMap<>();\n    final ServletHolder solrRestApi = new ServletHolder(\"SolrSchemaRestApi\", ServerServlet.class);\n    solrRestApi.setInitParameter(\"org.restlet.application\", \"org.apache.solr.rest.SolrSchemaRestApi\");\n    extraServlets.put(solrRestApi, \"/schema/*\");  // '/schema/*' matches '/schema', '/schema/', and '/schema/whatever...'\n\n    System.setProperty(\"managed.schema.mutable\", \"true\");\n    System.setProperty(\"enable.update.log\", \"false\");\n\n    createJettyAndHarness(tmpSolrHome.getAbsolutePath(), \"solrconfig-managed-schema.xml\", \"schema-rest.xml\",\n                          \"/solr\", true, extraServlets);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["4d2b6e7e5c0569efc1d4cac630d4075d46c6432e"],"bb1f22cfa77230b5f05b7784feae5367f6bbb488":["d0d579490a72f2e6297eaa648940611234c57cf1"],"2a0f5bb79c600763ffe7b8141df59a3169d31e48":["1416f9d09d016a6894cd17e1caac137dad2bba59","bb1f22cfa77230b5f05b7784feae5367f6bbb488"],"afb6bf9ce227ab6aac5068547e286ecc958b8b9d":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":["08970e5b8411182a29412c177eff67ec1110095b","1e0d5dcd5bcba76f5b672a85f179329a4969f456"],"f4abec28b874149a7223e32cc7a01704c27790de":["2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"1e0d5dcd5bcba76f5b672a85f179329a4969f456":["08970e5b8411182a29412c177eff67ec1110095b"],"d0d579490a72f2e6297eaa648940611234c57cf1":["afb6bf9ce227ab6aac5068547e286ecc958b8b9d"],"08970e5b8411182a29412c177eff67ec1110095b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4d2b6e7e5c0569efc1d4cac630d4075d46c6432e":["1e0d5dcd5bcba76f5b672a85f179329a4969f456"],"f494bc636a1302995e4930fdccd371eeda452f87":["f4abec28b874149a7223e32cc7a01704c27790de"],"1416f9d09d016a6894cd17e1caac137dad2bba59":["afb6bf9ce227ab6aac5068547e286ecc958b8b9d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f494bc636a1302995e4930fdccd371eeda452f87"]},"commit2Childs":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["afb6bf9ce227ab6aac5068547e286ecc958b8b9d"],"bb1f22cfa77230b5f05b7784feae5367f6bbb488":["2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"2a0f5bb79c600763ffe7b8141df59a3169d31e48":["f4abec28b874149a7223e32cc7a01704c27790de"],"afb6bf9ce227ab6aac5068547e286ecc958b8b9d":["d0d579490a72f2e6297eaa648940611234c57cf1","1416f9d09d016a6894cd17e1caac137dad2bba59"],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":[],"d0d579490a72f2e6297eaa648940611234c57cf1":["bb1f22cfa77230b5f05b7784feae5367f6bbb488"],"1e0d5dcd5bcba76f5b672a85f179329a4969f456":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","4d2b6e7e5c0569efc1d4cac630d4075d46c6432e"],"f4abec28b874149a7223e32cc7a01704c27790de":["f494bc636a1302995e4930fdccd371eeda452f87"],"08970e5b8411182a29412c177eff67ec1110095b":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","1e0d5dcd5bcba76f5b672a85f179329a4969f456"],"4d2b6e7e5c0569efc1d4cac630d4075d46c6432e":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"1416f9d09d016a6894cd17e1caac137dad2bba59":["2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"f494bc636a1302995e4930fdccd371eeda452f87":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["08970e5b8411182a29412c177eff67ec1110095b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}