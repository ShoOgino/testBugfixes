{"path":"solr/core/src/test/org/apache/solr/search/TestLRUCache#testNonAccountableValues().mjava","commits":[{"id":"9d496ec5dd42f7b76312f7ba5ac6666f1ed0730d","date":1428726211,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestLRUCache#testNonAccountableValues().mjava","pathOld":"/dev/null","sourceNew":"  public void testNonAccountableValues() throws Exception {\n    LRUCache<String, String> cache = new LRUCache<>();\n    Map<String, String> params = new HashMap<>();\n    params.put(\"size\", \"5\");\n    params.put(\"maxRamMB\", \"1\");\n    CacheRegenerator cr = new NoOpRegenerator();\n    Object o = cache.init(params, null, cr);\n\n    try {\n      cache.put(\"1\", \"1\");\n      fail(\"Adding a non-accountable value to a cache configured with maxRamBytes should have failed\");\n    } catch (Exception e) {\n      assertEquals(e.getClass(), SolrException.class);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"464e7336798bc8a1281d5cf610c649c5a0784e83","date":1541256496,"type":3,"author":"Jason Gerlowski","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestLRUCache#testNonAccountableValues().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestLRUCache#testNonAccountableValues().mjava","sourceNew":"  public void testNonAccountableValues() throws Exception {\n    LRUCache<String, String> cache = new LRUCache<>();\n    Map<String, String> params = new HashMap<>();\n    params.put(\"size\", \"5\");\n    params.put(\"maxRamMB\", \"1\");\n    CacheRegenerator cr = new NoOpRegenerator();\n    Object o = cache.init(params, null, cr);\n\n    expectThrows(SolrException.class, \"Adding a non-accountable value to a cache configured with maxRamBytes should have failed\",\n        () -> cache.put(\"1\", \"1\")\n    );\n  }\n\n","sourceOld":"  public void testNonAccountableValues() throws Exception {\n    LRUCache<String, String> cache = new LRUCache<>();\n    Map<String, String> params = new HashMap<>();\n    params.put(\"size\", \"5\");\n    params.put(\"maxRamMB\", \"1\");\n    CacheRegenerator cr = new NoOpRegenerator();\n    Object o = cache.init(params, null, cr);\n\n    try {\n      cache.put(\"1\", \"1\");\n      fail(\"Adding a non-accountable value to a cache configured with maxRamBytes should have failed\");\n    } catch (Exception e) {\n      assertEquals(e.getClass(), SolrException.class);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ce13e934d6cfdcc82d51e85de460cf9790e97566","date":1563877281,"type":4,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/search/TestLRUCache#testNonAccountableValues().mjava","sourceNew":null,"sourceOld":"  public void testNonAccountableValues() throws Exception {\n    LRUCache<String, String> cache = new LRUCache<>();\n    Map<String, String> params = new HashMap<>();\n    params.put(\"size\", \"5\");\n    params.put(\"maxRamMB\", \"1\");\n    CacheRegenerator cr = new NoOpRegenerator();\n    Object o = cache.init(params, null, cr);\n\n    expectThrows(SolrException.class, \"Adding a non-accountable value to a cache configured with maxRamBytes should have failed\",\n        () -> cache.put(\"1\", \"1\")\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9d496ec5dd42f7b76312f7ba5ac6666f1ed0730d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ce13e934d6cfdcc82d51e85de460cf9790e97566":["464e7336798bc8a1281d5cf610c649c5a0784e83"],"464e7336798bc8a1281d5cf610c649c5a0784e83":["9d496ec5dd42f7b76312f7ba5ac6666f1ed0730d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ce13e934d6cfdcc82d51e85de460cf9790e97566"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9d496ec5dd42f7b76312f7ba5ac6666f1ed0730d"],"9d496ec5dd42f7b76312f7ba5ac6666f1ed0730d":["464e7336798bc8a1281d5cf610c649c5a0784e83"],"ce13e934d6cfdcc82d51e85de460cf9790e97566":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"464e7336798bc8a1281d5cf610c649c5a0784e83":["ce13e934d6cfdcc82d51e85de460cf9790e97566"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}