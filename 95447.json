{"path":"solr/core/src/test/org/apache/solr/core/MockShardHandlerFactory#getShardHandler().mjava","commits":[{"id":"0937e467e3a2e44c636e2b022b816b21257acb26","date":1363268855,"type":0,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/MockShardHandlerFactory#getShardHandler().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public ShardHandler getShardHandler() {\n    return new ShardHandler() {\n      @Override\n      public void checkDistributed(ResponseBuilder rb) {}\n\n      @Override\n      public void submit(ShardRequest sreq, String shard,\n          ModifiableSolrParams params) {}\n\n      @Override\n      public ShardResponse takeCompletedIncludingErrors() {\n        return null;\n      }\n\n      @Override\n      public ShardResponse takeCompletedOrError() {\n        return null;\n      }\n\n      @Override\n      public void cancelAll() {}\n    };\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6f26f74e4969851a019d28f10315cb1c77786f22","date":1400539241,"type":3,"author":"Anshum Gupta","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/MockShardHandlerFactory#getShardHandler().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/MockShardHandlerFactory#getShardHandler().mjava","sourceNew":"  @Override\n  public ShardHandler getShardHandler() {\n    return new ShardHandler() {\n      @Override\n      public void checkDistributed(ResponseBuilder rb) {}\n\n      @Override\n      public void submit(ShardRequest sreq, String shard,\n          ModifiableSolrParams params) {}\n\n      @Override\n      public ShardResponse takeCompletedIncludingErrors() {\n        return null;\n      }\n\n      @Override\n      public ShardResponse takeCompletedOrError() {\n        return null;\n      }\n\n      @Override\n      public void cancelAll() {}\n\n      @Override\n      public ShardHandlerFactory getShardHandlerFactory() {\n        return MockShardHandlerFactory.this;\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public ShardHandler getShardHandler() {\n    return new ShardHandler() {\n      @Override\n      public void checkDistributed(ResponseBuilder rb) {}\n\n      @Override\n      public void submit(ShardRequest sreq, String shard,\n          ModifiableSolrParams params) {}\n\n      @Override\n      public ShardResponse takeCompletedIncludingErrors() {\n        return null;\n      }\n\n      @Override\n      public ShardResponse takeCompletedOrError() {\n        return null;\n      }\n\n      @Override\n      public void cancelAll() {}\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7605579001505896d48b07160075a5c8b8e128e","date":1400758727,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/MockShardHandlerFactory#getShardHandler().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/MockShardHandlerFactory#getShardHandler().mjava","sourceNew":"  @Override\n  public ShardHandler getShardHandler() {\n    return new ShardHandler() {\n      @Override\n      public void checkDistributed(ResponseBuilder rb) {}\n\n      @Override\n      public void submit(ShardRequest sreq, String shard,\n          ModifiableSolrParams params) {}\n\n      @Override\n      public ShardResponse takeCompletedIncludingErrors() {\n        return null;\n      }\n\n      @Override\n      public ShardResponse takeCompletedOrError() {\n        return null;\n      }\n\n      @Override\n      public void cancelAll() {}\n\n      @Override\n      public ShardHandlerFactory getShardHandlerFactory() {\n        return MockShardHandlerFactory.this;\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public ShardHandler getShardHandler() {\n    return new ShardHandler() {\n      @Override\n      public void checkDistributed(ResponseBuilder rb) {}\n\n      @Override\n      public void submit(ShardRequest sreq, String shard,\n          ModifiableSolrParams params) {}\n\n      @Override\n      public ShardResponse takeCompletedIncludingErrors() {\n        return null;\n      }\n\n      @Override\n      public ShardResponse takeCompletedOrError() {\n        return null;\n      }\n\n      @Override\n      public void cancelAll() {}\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5676bf22fd531b9a2a3053047d0e0f922c1c53ff","date":1435097302,"type":3,"author":"Ramkumar Aiyengar","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/MockShardHandlerFactory#getShardHandler().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/MockShardHandlerFactory#getShardHandler().mjava","sourceNew":"  @Override\n  public ShardHandler getShardHandler() {\n    return new ShardHandler() {\n      @Override\n      public void prepDistributed(ResponseBuilder rb) {}\n\n      @Override\n      public void submit(ShardRequest sreq, String shard,\n          ModifiableSolrParams params) {}\n\n      @Override\n      public ShardResponse takeCompletedIncludingErrors() {\n        return null;\n      }\n\n      @Override\n      public ShardResponse takeCompletedOrError() {\n        return null;\n      }\n\n      @Override\n      public void cancelAll() {}\n\n      @Override\n      public ShardHandlerFactory getShardHandlerFactory() {\n        return MockShardHandlerFactory.this;\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public ShardHandler getShardHandler() {\n    return new ShardHandler() {\n      @Override\n      public void checkDistributed(ResponseBuilder rb) {}\n\n      @Override\n      public void submit(ShardRequest sreq, String shard,\n          ModifiableSolrParams params) {}\n\n      @Override\n      public ShardResponse takeCompletedIncludingErrors() {\n        return null;\n      }\n\n      @Override\n      public ShardResponse takeCompletedOrError() {\n        return null;\n      }\n\n      @Override\n      public void cancelAll() {}\n\n      @Override\n      public ShardHandlerFactory getShardHandlerFactory() {\n        return MockShardHandlerFactory.this;\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"23e55c29de60130e8a1226800b66c5f6d7e16e8a","date":1447950053,"type":3,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/MockShardHandlerFactory#getShardHandler().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/MockShardHandlerFactory#getShardHandler().mjava","sourceNew":"  @Override\n  public ShardHandler getShardHandler() {\n    return new ShardHandler() {\n      @Override\n      public void prepDistributed(ResponseBuilder rb) {}\n\n      @Override\n      public void submit(ShardRequest sreq, String shard,\n          ModifiableSolrParams params, String preferredHostAddress) {}\n\n      @Override\n      public ShardResponse takeCompletedIncludingErrors() {\n        return null;\n      }\n\n      @Override\n      public ShardResponse takeCompletedOrError() {\n        return null;\n      }\n\n      @Override\n      public void cancelAll() {}\n\n      @Override\n      public ShardHandlerFactory getShardHandlerFactory() {\n        return MockShardHandlerFactory.this;\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public ShardHandler getShardHandler() {\n    return new ShardHandler() {\n      @Override\n      public void prepDistributed(ResponseBuilder rb) {}\n\n      @Override\n      public void submit(ShardRequest sreq, String shard,\n          ModifiableSolrParams params) {}\n\n      @Override\n      public ShardResponse takeCompletedIncludingErrors() {\n        return null;\n      }\n\n      @Override\n      public ShardResponse takeCompletedOrError() {\n        return null;\n      }\n\n      @Override\n      public void cancelAll() {}\n\n      @Override\n      public ShardHandlerFactory getShardHandlerFactory() {\n        return MockShardHandlerFactory.this;\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"304ef848381e39ff6cf3e7af6127733a6f4db389","date":1482353305,"type":3,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/MockShardHandlerFactory#getShardHandler().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/MockShardHandlerFactory#getShardHandler().mjava","sourceNew":"  @Override\n  public ShardHandler getShardHandler() {\n    return new ShardHandler() {\n      @Override\n      public void prepDistributed(ResponseBuilder rb) {}\n\n      @Override\n      public void submit(ShardRequest sreq, String shard,\n          ModifiableSolrParams params) {}\n\n      @Override\n      public ShardResponse takeCompletedIncludingErrors() {\n        return null;\n      }\n\n      @Override\n      public ShardResponse takeCompletedOrError() {\n        return null;\n      }\n\n      @Override\n      public void cancelAll() {}\n\n      @Override\n      public ShardHandlerFactory getShardHandlerFactory() {\n        return MockShardHandlerFactory.this;\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public ShardHandler getShardHandler() {\n    return new ShardHandler() {\n      @Override\n      public void prepDistributed(ResponseBuilder rb) {}\n\n      @Override\n      public void submit(ShardRequest sreq, String shard,\n          ModifiableSolrParams params, String preferredHostAddress) {}\n\n      @Override\n      public ShardResponse takeCompletedIncludingErrors() {\n        return null;\n      }\n\n      @Override\n      public ShardResponse takeCompletedOrError() {\n        return null;\n      }\n\n      @Override\n      public void cancelAll() {}\n\n      @Override\n      public ShardHandlerFactory getShardHandlerFactory() {\n        return MockShardHandlerFactory.this;\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f03e4bed5023ec3ef93a771b8888cae991cf448d","date":1483469262,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/MockShardHandlerFactory#getShardHandler().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/MockShardHandlerFactory#getShardHandler().mjava","sourceNew":"  @Override\n  public ShardHandler getShardHandler() {\n    return new ShardHandler() {\n      @Override\n      public void prepDistributed(ResponseBuilder rb) {}\n\n      @Override\n      public void submit(ShardRequest sreq, String shard,\n          ModifiableSolrParams params) {}\n\n      @Override\n      public ShardResponse takeCompletedIncludingErrors() {\n        return null;\n      }\n\n      @Override\n      public ShardResponse takeCompletedOrError() {\n        return null;\n      }\n\n      @Override\n      public void cancelAll() {}\n\n      @Override\n      public ShardHandlerFactory getShardHandlerFactory() {\n        return MockShardHandlerFactory.this;\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public ShardHandler getShardHandler() {\n    return new ShardHandler() {\n      @Override\n      public void prepDistributed(ResponseBuilder rb) {}\n\n      @Override\n      public void submit(ShardRequest sreq, String shard,\n          ModifiableSolrParams params, String preferredHostAddress) {}\n\n      @Override\n      public ShardResponse takeCompletedIncludingErrors() {\n        return null;\n      }\n\n      @Override\n      public ShardResponse takeCompletedOrError() {\n        return null;\n      }\n\n      @Override\n      public void cancelAll() {}\n\n      @Override\n      public ShardHandlerFactory getShardHandlerFactory() {\n        return MockShardHandlerFactory.this;\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5676bf22fd531b9a2a3053047d0e0f922c1c53ff":["6f26f74e4969851a019d28f10315cb1c77786f22"],"b7605579001505896d48b07160075a5c8b8e128e":["0937e467e3a2e44c636e2b022b816b21257acb26","6f26f74e4969851a019d28f10315cb1c77786f22"],"6f26f74e4969851a019d28f10315cb1c77786f22":["0937e467e3a2e44c636e2b022b816b21257acb26"],"0937e467e3a2e44c636e2b022b816b21257acb26":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"304ef848381e39ff6cf3e7af6127733a6f4db389":["23e55c29de60130e8a1226800b66c5f6d7e16e8a"],"23e55c29de60130e8a1226800b66c5f6d7e16e8a":["5676bf22fd531b9a2a3053047d0e0f922c1c53ff"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["304ef848381e39ff6cf3e7af6127733a6f4db389"],"f03e4bed5023ec3ef93a771b8888cae991cf448d":["23e55c29de60130e8a1226800b66c5f6d7e16e8a","304ef848381e39ff6cf3e7af6127733a6f4db389"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0937e467e3a2e44c636e2b022b816b21257acb26"],"5676bf22fd531b9a2a3053047d0e0f922c1c53ff":["23e55c29de60130e8a1226800b66c5f6d7e16e8a"],"b7605579001505896d48b07160075a5c8b8e128e":[],"6f26f74e4969851a019d28f10315cb1c77786f22":["5676bf22fd531b9a2a3053047d0e0f922c1c53ff","b7605579001505896d48b07160075a5c8b8e128e"],"0937e467e3a2e44c636e2b022b816b21257acb26":["b7605579001505896d48b07160075a5c8b8e128e","6f26f74e4969851a019d28f10315cb1c77786f22"],"304ef848381e39ff6cf3e7af6127733a6f4db389":["cd5edd1f2b162a5cfa08efd17851a07373a96817","f03e4bed5023ec3ef93a771b8888cae991cf448d"],"23e55c29de60130e8a1226800b66c5f6d7e16e8a":["304ef848381e39ff6cf3e7af6127733a6f4db389","f03e4bed5023ec3ef93a771b8888cae991cf448d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"f03e4bed5023ec3ef93a771b8888cae991cf448d":[]},"heads":["b7605579001505896d48b07160075a5c8b8e128e","cd5edd1f2b162a5cfa08efd17851a07373a96817","f03e4bed5023ec3ef93a771b8888cae991cf448d"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}