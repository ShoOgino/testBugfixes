{"path":"lucene/src/java/org/apache/lucene/index/SegmentInfos#getCurrentSegmentGeneration(String[]).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentInfos#getCurrentSegmentGeneration(String[]).mjava","pathOld":"src/java/org/apache/lucene/index/SegmentInfos#getCurrentSegmentGeneration(String[]).mjava","sourceNew":"  /**\n   * Get the generation (N) of the current segments_N file\n   * from a list of files.\n   *\n   * @param files -- array of file names to check\n   */\n  public static long getCurrentSegmentGeneration(String[] files) {\n    if (files == null) {\n      return -1;\n    }\n    long max = -1;\n    for (int i = 0; i < files.length; i++) {\n      String file = files[i];\n      if (file.startsWith(IndexFileNames.SEGMENTS) && !file.equals(IndexFileNames.SEGMENTS_GEN)) {\n        long gen = generationFromSegmentsFileName(file);\n        if (gen > max) {\n          max = gen;\n        }\n      }\n    }\n    return max;\n  }\n\n","sourceOld":"  /**\n   * Get the generation (N) of the current segments_N file\n   * from a list of files.\n   *\n   * @param files -- array of file names to check\n   */\n  public static long getCurrentSegmentGeneration(String[] files) {\n    if (files == null) {\n      return -1;\n    }\n    long max = -1;\n    for (int i = 0; i < files.length; i++) {\n      String file = files[i];\n      if (file.startsWith(IndexFileNames.SEGMENTS) && !file.equals(IndexFileNames.SEGMENTS_GEN)) {\n        long gen = generationFromSegmentsFileName(file);\n        if (gen > max) {\n          max = gen;\n        }\n      }\n    }\n    return max;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6267e1ce56c2eec111425690cd04e251b6f14952","date":1275222352,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentInfos#getCurrentSegmentGeneration(String[]).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentInfos#getCurrentSegmentGeneration(String[]).mjava","sourceNew":"  /**\n   * Get the generation (N) of the current segments_N file\n   * from a list of files.\n   *\n   * @param files -- array of file names to check\n   */\n  public static long getCurrentSegmentGeneration(String[] files) {\n    if (files == null) {\n      return -1;\n    }\n    long max = -1;\n    for (String file : files) {\n      if (file.startsWith(IndexFileNames.SEGMENTS) && !file.equals(IndexFileNames.SEGMENTS_GEN)) {\n        long gen = generationFromSegmentsFileName(file);\n        if (gen > max) {\n          max = gen;\n        }\n      }\n    }\n    return max;\n  }\n\n","sourceOld":"  /**\n   * Get the generation (N) of the current segments_N file\n   * from a list of files.\n   *\n   * @param files -- array of file names to check\n   */\n  public static long getCurrentSegmentGeneration(String[] files) {\n    if (files == null) {\n      return -1;\n    }\n    long max = -1;\n    for (int i = 0; i < files.length; i++) {\n      String file = files[i];\n      if (file.startsWith(IndexFileNames.SEGMENTS) && !file.equals(IndexFileNames.SEGMENTS_GEN)) {\n        long gen = generationFromSegmentsFileName(file);\n        if (gen > max) {\n          max = gen;\n        }\n      }\n    }\n    return max;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentInfos#getCurrentSegmentGeneration(String[]).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentInfos#getCurrentSegmentGeneration(String[]).mjava","sourceNew":"  /**\n   * Get the generation (N) of the current segments_N file\n   * from a list of files.\n   *\n   * @param files -- array of file names to check\n   */\n  public static long getCurrentSegmentGeneration(String[] files) {\n    if (files == null) {\n      return -1;\n    }\n    long max = -1;\n    for (String file : files) {\n      if (file.startsWith(IndexFileNames.SEGMENTS) && !file.equals(IndexFileNames.SEGMENTS_GEN)) {\n        long gen = generationFromSegmentsFileName(file);\n        if (gen > max) {\n          max = gen;\n        }\n      }\n    }\n    return max;\n  }\n\n","sourceOld":"  /**\n   * Get the generation (N) of the current segments_N file\n   * from a list of files.\n   *\n   * @param files -- array of file names to check\n   */\n  public static long getCurrentSegmentGeneration(String[] files) {\n    if (files == null) {\n      return -1;\n    }\n    long max = -1;\n    for (String file : files) {\n      if (file.startsWith(IndexFileNames.SEGMENTS) && !file.equals(IndexFileNames.SEGMENTS_GEN)) {\n        long gen = generationFromSegmentsFileName(file);\n        if (gen > max) {\n          max = gen;\n        }\n      }\n    }\n    return max;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6267e1ce56c2eec111425690cd04e251b6f14952":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["6267e1ce56c2eec111425690cd04e251b6f14952"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"6267e1ce56c2eec111425690cd04e251b6f14952":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["6267e1ce56c2eec111425690cd04e251b6f14952"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}