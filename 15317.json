{"path":"contrib/gdata-server/src/gom/src/java/org/apache/lucene/gdata/gom/core/utils/AtomParserUtils#escapeXMLCharacter(String).mjava","commits":[{"id":"4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe","date":1166036663,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/gdata-server/src/gom/src/java/org/apache/lucene/gdata/gom/core/utils/AtomParserUtils#escapeXMLCharacter(String).mjava","pathOld":"contrib/gdata-server/src/gom/java/org/apache/lucene/gdata/gom/core/utils/AtomParserUtils#escapeXMLCharacter(String).mjava","sourceNew":"\t/**\n\t * Replaces all xml character with the corresponding entity.\n\t * \n\t * <ul>\n\t * <li>&lt;!ENTITY lt &quot;&amp;#38;#60;&quot;&gt;</li>\n\t * <li>&lt;!ENTITY gt &quot;&amp;#62;&quot;&gt;</li>\n\t * <li>&lt;!ENTITY amp &quot;&amp;#38;#38;&quot;&gt;</li>\n\t * <li>&lt;!ENTITY apos &quot;&amp;#39;&quot;&gt;</li>\n\t * <li>&lt;!ENTITY quot &quot;&amp;#34;&quot;&gt;</li>\n\t * </ul>\n\t * \n\t * see <a\n\t * href=\"http://www.w3.org/TR/2006/REC-xml-20060816/#intern-replacement\">W3C\n\t * specification</a>\n\t * \n\t * @param aString -\n\t *            a string may container xml characters like '<'\n\t * @return the input string with escaped xml characters\n\t */\n\tpublic static String escapeXMLCharacter(String aString) {\n\t\tStringBuilder builder = new StringBuilder();\n\t\tchar[] cs = aString.toCharArray();\n\t\tfor (int i = 0; i < cs.length; i++) {\n\t\t\tswitch (cs[i]) {\n\t\t\tcase '<':\n\t\t\t\tbuilder.append(\"&lt;\");\n\t\t\t\tbreak;\n\t\t\tcase '>':\n\t\t\t\tbuilder.append(\"&gt;\");\n\t\t\t\tbreak;\n\t\t\tcase '\"':\n\t\t\t\tbuilder.append(\"&quot;\");\n\t\t\t\tbreak;\n\t\t\tcase '\\'':\n\t\t\t\tbuilder.append(\"&apos;\");\n\t\t\t\tbreak;\n\t\t\tcase '&':\n\t\t\t\tbuilder.append(\"&amp;\");\n\t\t\t\tbreak;\n\t\t\tcase '\\0':\n\t\t\t\t// this breaks some xml serializer like soap serializer -->\n\t\t\t\t// remove it\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbuilder.append(cs[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn builder.toString();\n\n\t}\n\n","sourceOld":"\t/**\n\t * Replaces all xml character with the corresponding entity.\n\t * \n\t * <ul>\n\t * <li>&lt;!ENTITY lt &quot;&amp;#38;#60;&quot;&gt;</li>\n\t * <li>&lt;!ENTITY gt &quot;&amp;#62;&quot;&gt;</li>\n\t * <li>&lt;!ENTITY amp &quot;&amp;#38;#38;&quot;&gt;</li>\n\t * <li>&lt;!ENTITY apos &quot;&amp;#39;&quot;&gt;</li>\n\t * <li>&lt;!ENTITY quot &quot;&amp;#34;&quot;&gt;</li>\n\t * </ul>\n\t * \n\t * see <a\n\t * href=\"http://www.w3.org/TR/2006/REC-xml-20060816/#intern-replacement\">W3C\n\t * specification</a>\n\t * \n\t * @param aString -\n\t *            a string may container xml characters like '<'\n\t * @return the input string with escaped xml characters\n\t */\n\tpublic static String escapeXMLCharacter(String aString) {\n\t\tStringBuilder builder = new StringBuilder();\n\t\tchar[] cs = aString.toCharArray();\n\t\tfor (int i = 0; i < cs.length; i++) {\n\t\t\tswitch (cs[i]) {\n\t\t\tcase '<':\n\t\t\t\tbuilder.append(\"&lt;\");\n\t\t\t\tbreak;\n\t\t\tcase '>':\n\t\t\t\tbuilder.append(\"&gt;\");\n\t\t\t\tbreak;\n\t\t\tcase '\"':\n\t\t\t\tbuilder.append(\"&quot;\");\n\t\t\t\tbreak;\n\t\t\tcase '\\'':\n\t\t\t\tbuilder.append(\"&apos;\");\n\t\t\t\tbreak;\n\t\t\tcase '&':\n\t\t\t\tbuilder.append(\"&amp;\");\n\t\t\t\tbreak;\n\t\t\tcase '\\0':\n\t\t\t\t// this breaks some xml serializer like soap serializer -->\n\t\t\t\t// remove it\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbuilder.append(cs[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn builder.toString();\n\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"353a38bbb8d8067d74d6039986c7ce44c2f6cdbe","date":1195519587,"type":4,"author":"Michael Busch","isMerge":false,"pathNew":"/dev/null","pathOld":"contrib/gdata-server/src/gom/src/java/org/apache/lucene/gdata/gom/core/utils/AtomParserUtils#escapeXMLCharacter(String).mjava","sourceNew":null,"sourceOld":"\t/**\n\t * Replaces all xml character with the corresponding entity.\n\t * \n\t * <ul>\n\t * <li>&lt;!ENTITY lt &quot;&amp;#38;#60;&quot;&gt;</li>\n\t * <li>&lt;!ENTITY gt &quot;&amp;#62;&quot;&gt;</li>\n\t * <li>&lt;!ENTITY amp &quot;&amp;#38;#38;&quot;&gt;</li>\n\t * <li>&lt;!ENTITY apos &quot;&amp;#39;&quot;&gt;</li>\n\t * <li>&lt;!ENTITY quot &quot;&amp;#34;&quot;&gt;</li>\n\t * </ul>\n\t * \n\t * see <a\n\t * href=\"http://www.w3.org/TR/2006/REC-xml-20060816/#intern-replacement\">W3C\n\t * specification</a>\n\t * \n\t * @param aString -\n\t *            a string may container xml characters like '<'\n\t * @return the input string with escaped xml characters\n\t */\n\tpublic static String escapeXMLCharacter(String aString) {\n\t\tStringBuilder builder = new StringBuilder();\n\t\tchar[] cs = aString.toCharArray();\n\t\tfor (int i = 0; i < cs.length; i++) {\n\t\t\tswitch (cs[i]) {\n\t\t\tcase '<':\n\t\t\t\tbuilder.append(\"&lt;\");\n\t\t\t\tbreak;\n\t\t\tcase '>':\n\t\t\t\tbuilder.append(\"&gt;\");\n\t\t\t\tbreak;\n\t\t\tcase '\"':\n\t\t\t\tbuilder.append(\"&quot;\");\n\t\t\t\tbreak;\n\t\t\tcase '\\'':\n\t\t\t\tbuilder.append(\"&apos;\");\n\t\t\t\tbreak;\n\t\t\tcase '&':\n\t\t\t\tbuilder.append(\"&amp;\");\n\t\t\t\tbreak;\n\t\t\tcase '\\0':\n\t\t\t\t// this breaks some xml serializer like soap serializer -->\n\t\t\t\t// remove it\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbuilder.append(cs[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn builder.toString();\n\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"353a38bbb8d8067d74d6039986c7ce44c2f6cdbe":["4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["353a38bbb8d8067d74d6039986c7ce44c2f6cdbe"]},"commit2Childs":{"4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe":["353a38bbb8d8067d74d6039986c7ce44c2f6cdbe"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe"],"353a38bbb8d8067d74d6039986c7ce44c2f6cdbe":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}