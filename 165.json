{"path":"lucene/core/src/test/org/apache/lucene/index/TestAddIndexes#testAddIndexesWithRollback().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestAddIndexes#testAddIndexesWithRollback().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestAddIndexes#testAddIndexesWithRollback().mjava","sourceNew":"  // LUCENE-1335: test simultaneous addIndexes & close\n  public void testAddIndexesWithRollback() throws Throwable {\n\n    final int NUM_COPY = TEST_NIGHTLY ? 50 : 5;\n    CommitAndAddIndexes3 c = new CommitAndAddIndexes3(NUM_COPY);\n    c.launchThreads(-1);\n\n    Thread.sleep(_TestUtil.nextInt(random, 10, 500));\n\n    // Close w/o first stopping/joining the threads\n    if (VERBOSE) {\n      System.out.println(\"TEST: now force rollback\");\n    }\n    c.didClose = true;\n    c.writer2.rollback();\n\n    c.joinThreads();\n\n    c.closeDir();\n\n    assertTrue(c.failures.size() == 0);\n  }\n\n","sourceOld":"  // LUCENE-1335: test simultaneous addIndexes & close\n  public void testAddIndexesWithRollback() throws Throwable {\n\n    final int NUM_COPY = TEST_NIGHTLY ? 50 : 5;\n    CommitAndAddIndexes3 c = new CommitAndAddIndexes3(NUM_COPY);\n    c.launchThreads(-1);\n\n    Thread.sleep(_TestUtil.nextInt(random, 10, 500));\n\n    // Close w/o first stopping/joining the threads\n    if (VERBOSE) {\n      System.out.println(\"TEST: now force rollback\");\n    }\n    c.didClose = true;\n    c.writer2.rollback();\n\n    c.joinThreads();\n\n    c.closeDir();\n\n    assertTrue(c.failures.size() == 0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"629c38c4ae4e303d0617e05fbfe508140b32f0a3","date":1334500904,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestAddIndexes#testAddIndexesWithRollback().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestAddIndexes#testAddIndexesWithRollback().mjava","sourceNew":"  // LUCENE-1335: test simultaneous addIndexes & close\n  public void testAddIndexesWithRollback() throws Throwable {\n\n    final int NUM_COPY = TEST_NIGHTLY ? 50 : 5;\n    CommitAndAddIndexes3 c = new CommitAndAddIndexes3(NUM_COPY);\n    c.launchThreads(-1);\n\n    Thread.sleep(_TestUtil.nextInt(random(), 10, 500));\n\n    // Close w/o first stopping/joining the threads\n    if (VERBOSE) {\n      System.out.println(\"TEST: now force rollback\");\n    }\n    c.didClose = true;\n    c.writer2.rollback();\n\n    c.joinThreads();\n\n    c.closeDir();\n\n    assertTrue(c.failures.size() == 0);\n  }\n\n","sourceOld":"  // LUCENE-1335: test simultaneous addIndexes & close\n  public void testAddIndexesWithRollback() throws Throwable {\n\n    final int NUM_COPY = TEST_NIGHTLY ? 50 : 5;\n    CommitAndAddIndexes3 c = new CommitAndAddIndexes3(NUM_COPY);\n    c.launchThreads(-1);\n\n    Thread.sleep(_TestUtil.nextInt(random, 10, 500));\n\n    // Close w/o first stopping/joining the threads\n    if (VERBOSE) {\n      System.out.println(\"TEST: now force rollback\");\n    }\n    c.didClose = true;\n    c.writer2.rollback();\n\n    c.joinThreads();\n\n    c.closeDir();\n\n    assertTrue(c.failures.size() == 0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"19275ba31e621f6da1b83bf13af75233876fd3d4","date":1374846698,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestAddIndexes#testAddIndexesWithRollback().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestAddIndexes#testAddIndexesWithRollback().mjava","sourceNew":"  // LUCENE-1335: test simultaneous addIndexes & close\n  public void testAddIndexesWithRollback() throws Throwable {\n\n    final int NUM_COPY = TEST_NIGHTLY ? 50 : 5;\n    CommitAndAddIndexes3 c = new CommitAndAddIndexes3(NUM_COPY);\n    c.launchThreads(-1);\n\n    Thread.sleep(_TestUtil.nextInt(random(), 10, 500));\n\n    // Close w/o first stopping/joining the threads\n    if (VERBOSE) {\n      System.out.println(\"TEST: now force rollback\");\n    }\n    c.didClose = true;\n    c.writer2.rollback();\n\n    c.joinThreads();\n\n    c.closeDir();\n\n    assertTrue(c.failures.size() == 0);\n  }\n\n","sourceOld":"  // LUCENE-1335: test simultaneous addIndexes & close\n  public void testAddIndexesWithRollback() throws Throwable {\n\n    final int NUM_COPY = TEST_NIGHTLY ? 50 : 5;\n    CommitAndAddIndexes3 c = new CommitAndAddIndexes3(NUM_COPY);\n    c.launchThreads(-1);\n\n    Thread.sleep(_TestUtil.nextInt(random(), 10, 500));\n\n    // Close w/o first stopping/joining the threads\n    if (VERBOSE) {\n      System.out.println(\"TEST: now force rollback\");\n    }\n    c.didClose = true;\n    c.writer2.rollback();\n\n    c.joinThreads();\n\n    c.closeDir();\n\n    assertTrue(c.failures.size() == 0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","date":1376366778,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestAddIndexes#testAddIndexesWithRollback().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestAddIndexes#testAddIndexesWithRollback().mjava","sourceNew":"  // LUCENE-1335: test simultaneous addIndexes & close\n  public void testAddIndexesWithRollback() throws Throwable {\n\n    final int NUM_COPY = TEST_NIGHTLY ? 50 : 5;\n    CommitAndAddIndexes3 c = new CommitAndAddIndexes3(NUM_COPY);\n    c.launchThreads(-1);\n\n    Thread.sleep(_TestUtil.nextInt(random(), 10, 500));\n\n    // Close w/o first stopping/joining the threads\n    if (VERBOSE) {\n      System.out.println(\"TEST: now force rollback\");\n    }\n    c.didClose = true;\n    c.writer2.rollback();\n\n    c.joinThreads();\n\n    c.closeDir();\n\n    assertTrue(c.failures.size() == 0);\n  }\n\n","sourceOld":"  // LUCENE-1335: test simultaneous addIndexes & close\n  public void testAddIndexesWithRollback() throws Throwable {\n\n    final int NUM_COPY = TEST_NIGHTLY ? 50 : 5;\n    CommitAndAddIndexes3 c = new CommitAndAddIndexes3(NUM_COPY);\n    c.launchThreads(-1);\n\n    Thread.sleep(_TestUtil.nextInt(random(), 10, 500));\n\n    // Close w/o first stopping/joining the threads\n    if (VERBOSE) {\n      System.out.println(\"TEST: now force rollback\");\n    }\n    c.didClose = true;\n    c.writer2.rollback();\n\n    c.joinThreads();\n\n    c.closeDir();\n\n    assertTrue(c.failures.size() == 0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6613659748fe4411a7dcf85266e55db1f95f7315","date":1392773913,"type":3,"author":"Benson Margulies","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestAddIndexes#testAddIndexesWithRollback().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestAddIndexes#testAddIndexesWithRollback().mjava","sourceNew":"  // LUCENE-1335: test simultaneous addIndexes & close\n  public void testAddIndexesWithRollback() throws Throwable {\n\n    final int NUM_COPY = TEST_NIGHTLY ? 50 : 5;\n    CommitAndAddIndexes3 c = new CommitAndAddIndexes3(NUM_COPY);\n    c.launchThreads(-1);\n\n    Thread.sleep(TestUtil.nextInt(random(), 10, 500));\n\n    // Close w/o first stopping/joining the threads\n    if (VERBOSE) {\n      System.out.println(\"TEST: now force rollback\");\n    }\n    c.didClose = true;\n    c.writer2.rollback();\n\n    c.joinThreads();\n\n    c.closeDir();\n\n    assertTrue(c.failures.size() == 0);\n  }\n\n","sourceOld":"  // LUCENE-1335: test simultaneous addIndexes & close\n  public void testAddIndexesWithRollback() throws Throwable {\n\n    final int NUM_COPY = TEST_NIGHTLY ? 50 : 5;\n    CommitAndAddIndexes3 c = new CommitAndAddIndexes3(NUM_COPY);\n    c.launchThreads(-1);\n\n    Thread.sleep(_TestUtil.nextInt(random(), 10, 500));\n\n    // Close w/o first stopping/joining the threads\n    if (VERBOSE) {\n      System.out.println(\"TEST: now force rollback\");\n    }\n    c.didClose = true;\n    c.writer2.rollback();\n\n    c.joinThreads();\n\n    c.closeDir();\n\n    assertTrue(c.failures.size() == 0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7bf95be1fe06a3535aa13b9fc2ce7ebac0eae6db","date":1420822089,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestAddIndexes#testAddIndexesWithRollback().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestAddIndexes#testAddIndexesWithRollback().mjava","sourceNew":"  // LUCENE-1335: test simultaneous addIndexes & close\n  public void testAddIndexesWithRollback() throws Throwable {\n\n    final int NUM_COPY = TEST_NIGHTLY ? 50 : 5;\n    CommitAndAddIndexes3 c = new CommitAndAddIndexes3(NUM_COPY);\n    c.launchThreads(-1);\n\n    Thread.sleep(TestUtil.nextInt(random(), 10, 500));\n\n    // Close w/o first stopping/joining the threads\n    if (VERBOSE) {\n      System.out.println(\"TEST: now force rollback\");\n    }\n    c.didClose = true;\n    MergeScheduler ms = c.writer2.getConfig().getMergeScheduler();\n\n    c.writer2.rollback();\n\n    c.joinThreads();\n\n    if (ms instanceof ConcurrentMergeScheduler) {\n      assertEquals(0, ((ConcurrentMergeScheduler) ms).mergeThreadCount());\n    }\n\n    c.closeDir();\n\n    assertTrue(c.failures.size() == 0);\n  }\n\n","sourceOld":"  // LUCENE-1335: test simultaneous addIndexes & close\n  public void testAddIndexesWithRollback() throws Throwable {\n\n    final int NUM_COPY = TEST_NIGHTLY ? 50 : 5;\n    CommitAndAddIndexes3 c = new CommitAndAddIndexes3(NUM_COPY);\n    c.launchThreads(-1);\n\n    Thread.sleep(TestUtil.nextInt(random(), 10, 500));\n\n    // Close w/o first stopping/joining the threads\n    if (VERBOSE) {\n      System.out.println(\"TEST: now force rollback\");\n    }\n    c.didClose = true;\n    c.writer2.rollback();\n\n    c.joinThreads();\n\n    c.closeDir();\n\n    assertTrue(c.failures.size() == 0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6613659748fe4411a7dcf85266e55db1f95f7315":["19275ba31e621f6da1b83bf13af75233876fd3d4"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"19275ba31e621f6da1b83bf13af75233876fd3d4":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"7bf95be1fe06a3535aa13b9fc2ce7ebac0eae6db":["6613659748fe4411a7dcf85266e55db1f95f7315"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7bf95be1fe06a3535aa13b9fc2ce7ebac0eae6db"]},"commit2Childs":{"6613659748fe4411a7dcf85266e55db1f95f7315":["7bf95be1fe06a3535aa13b9fc2ce7ebac0eae6db"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":[],"19275ba31e621f6da1b83bf13af75233876fd3d4":["6613659748fe4411a7dcf85266e55db1f95f7315"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","19275ba31e621f6da1b83bf13af75233876fd3d4"],"7bf95be1fe06a3535aa13b9fc2ce7ebac0eae6db":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}