{"path":"lucene/benchmark/src/test/org/apache/lucene/benchmark/quality/TestQualityRun#testTrecTopicsReader().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/benchmark/src/test/org/apache/lucene/benchmark/quality/TestQualityRun#testTrecTopicsReader().mjava","pathOld":"modules/benchmark/src/test/org/apache/lucene/benchmark/quality/TestQualityRun#testTrecTopicsReader().mjava","sourceNew":"  public void testTrecTopicsReader() throws Exception {    \n    // prepare topics\n    InputStream topicsFile = getClass().getResourceAsStream(\"trecTopics.txt\");\n    TrecTopicsReader qReader = new TrecTopicsReader();\n    QualityQuery qqs[] = qReader.readQueries(\n        new BufferedReader(new InputStreamReader(topicsFile, \"UTF-8\")));\n    \n    assertEquals(20, qqs.length);\n    \n    QualityQuery qq = qqs[0];\n    assertEquals(\"statement months  total 1987\", qq.getValue(\"title\"));\n    assertEquals(\"Topic 0 Description Line 1 Topic 0 Description Line 2\", \n        qq.getValue(\"description\"));\n    assertEquals(\"Topic 0 Narrative Line 1 Topic 0 Narrative Line 2\", \n        qq.getValue(\"narrative\"));\n    \n    qq = qqs[1];\n    assertEquals(\"agreed 15  against five\", qq.getValue(\"title\"));\n    assertEquals(\"Topic 1 Description Line 1 Topic 1 Description Line 2\", \n        qq.getValue(\"description\"));\n    assertEquals(\"Topic 1 Narrative Line 1 Topic 1 Narrative Line 2\", \n        qq.getValue(\"narrative\"));\n    \n    qq = qqs[19];\n    assertEquals(\"20 while  common week\", qq.getValue(\"title\"));\n    assertEquals(\"Topic 19 Description Line 1 Topic 19 Description Line 2\", \n        qq.getValue(\"description\"));\n    assertEquals(\"Topic 19 Narrative Line 1 Topic 19 Narrative Line 2\", \n        qq.getValue(\"narrative\"));\n  }\n\n","sourceOld":"  public void testTrecTopicsReader() throws Exception {    \n    // prepare topics\n    InputStream topicsFile = getClass().getResourceAsStream(\"trecTopics.txt\");\n    TrecTopicsReader qReader = new TrecTopicsReader();\n    QualityQuery qqs[] = qReader.readQueries(\n        new BufferedReader(new InputStreamReader(topicsFile, \"UTF-8\")));\n    \n    assertEquals(20, qqs.length);\n    \n    QualityQuery qq = qqs[0];\n    assertEquals(\"statement months  total 1987\", qq.getValue(\"title\"));\n    assertEquals(\"Topic 0 Description Line 1 Topic 0 Description Line 2\", \n        qq.getValue(\"description\"));\n    assertEquals(\"Topic 0 Narrative Line 1 Topic 0 Narrative Line 2\", \n        qq.getValue(\"narrative\"));\n    \n    qq = qqs[1];\n    assertEquals(\"agreed 15  against five\", qq.getValue(\"title\"));\n    assertEquals(\"Topic 1 Description Line 1 Topic 1 Description Line 2\", \n        qq.getValue(\"description\"));\n    assertEquals(\"Topic 1 Narrative Line 1 Topic 1 Narrative Line 2\", \n        qq.getValue(\"narrative\"));\n    \n    qq = qqs[19];\n    assertEquals(\"20 while  common week\", qq.getValue(\"title\"));\n    assertEquals(\"Topic 19 Description Line 1 Topic 19 Description Line 2\", \n        qq.getValue(\"description\"));\n    assertEquals(\"Topic 19 Narrative Line 1 Topic 19 Narrative Line 2\", \n        qq.getValue(\"narrative\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7d89d7e4e5101347833eea558851bf4209218619","date":1396265641,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/benchmark/src/test/org/apache/lucene/benchmark/quality/TestQualityRun#testTrecTopicsReader().mjava","pathOld":"lucene/benchmark/src/test/org/apache/lucene/benchmark/quality/TestQualityRun#testTrecTopicsReader().mjava","sourceNew":"  public void testTrecTopicsReader() throws Exception {    \n    // prepare topics\n    InputStream topicsFile = getClass().getResourceAsStream(\"trecTopics.txt\");\n    TrecTopicsReader qReader = new TrecTopicsReader();\n    QualityQuery qqs[] = qReader.readQueries(\n        new BufferedReader(new InputStreamReader(topicsFile, StandardCharsets.UTF_8)));\n    \n    assertEquals(20, qqs.length);\n    \n    QualityQuery qq = qqs[0];\n    assertEquals(\"statement months  total 1987\", qq.getValue(\"title\"));\n    assertEquals(\"Topic 0 Description Line 1 Topic 0 Description Line 2\", \n        qq.getValue(\"description\"));\n    assertEquals(\"Topic 0 Narrative Line 1 Topic 0 Narrative Line 2\", \n        qq.getValue(\"narrative\"));\n    \n    qq = qqs[1];\n    assertEquals(\"agreed 15  against five\", qq.getValue(\"title\"));\n    assertEquals(\"Topic 1 Description Line 1 Topic 1 Description Line 2\", \n        qq.getValue(\"description\"));\n    assertEquals(\"Topic 1 Narrative Line 1 Topic 1 Narrative Line 2\", \n        qq.getValue(\"narrative\"));\n    \n    qq = qqs[19];\n    assertEquals(\"20 while  common week\", qq.getValue(\"title\"));\n    assertEquals(\"Topic 19 Description Line 1 Topic 19 Description Line 2\", \n        qq.getValue(\"description\"));\n    assertEquals(\"Topic 19 Narrative Line 1 Topic 19 Narrative Line 2\", \n        qq.getValue(\"narrative\"));\n  }\n\n","sourceOld":"  public void testTrecTopicsReader() throws Exception {    \n    // prepare topics\n    InputStream topicsFile = getClass().getResourceAsStream(\"trecTopics.txt\");\n    TrecTopicsReader qReader = new TrecTopicsReader();\n    QualityQuery qqs[] = qReader.readQueries(\n        new BufferedReader(new InputStreamReader(topicsFile, \"UTF-8\")));\n    \n    assertEquals(20, qqs.length);\n    \n    QualityQuery qq = qqs[0];\n    assertEquals(\"statement months  total 1987\", qq.getValue(\"title\"));\n    assertEquals(\"Topic 0 Description Line 1 Topic 0 Description Line 2\", \n        qq.getValue(\"description\"));\n    assertEquals(\"Topic 0 Narrative Line 1 Topic 0 Narrative Line 2\", \n        qq.getValue(\"narrative\"));\n    \n    qq = qqs[1];\n    assertEquals(\"agreed 15  against five\", qq.getValue(\"title\"));\n    assertEquals(\"Topic 1 Description Line 1 Topic 1 Description Line 2\", \n        qq.getValue(\"description\"));\n    assertEquals(\"Topic 1 Narrative Line 1 Topic 1 Narrative Line 2\", \n        qq.getValue(\"narrative\"));\n    \n    qq = qqs[19];\n    assertEquals(\"20 while  common week\", qq.getValue(\"title\"));\n    assertEquals(\"Topic 19 Description Line 1 Topic 19 Description Line 2\", \n        qq.getValue(\"description\"));\n    assertEquals(\"Topic 19 Narrative Line 1 Topic 19 Narrative Line 2\", \n        qq.getValue(\"narrative\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5eb2511ababf862ea11e10761c70ee560cd84510","date":1396607225,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/benchmark/src/test/org/apache/lucene/benchmark/quality/TestQualityRun#testTrecTopicsReader().mjava","pathOld":"lucene/benchmark/src/test/org/apache/lucene/benchmark/quality/TestQualityRun#testTrecTopicsReader().mjava","sourceNew":"  public void testTrecTopicsReader() throws Exception {    \n    // prepare topics\n    InputStream topicsFile = getClass().getResourceAsStream(\"trecTopics.txt\");\n    TrecTopicsReader qReader = new TrecTopicsReader();\n    QualityQuery qqs[] = qReader.readQueries(\n        new BufferedReader(new InputStreamReader(topicsFile, StandardCharsets.UTF_8)));\n    \n    assertEquals(20, qqs.length);\n    \n    QualityQuery qq = qqs[0];\n    assertEquals(\"statement months  total 1987\", qq.getValue(\"title\"));\n    assertEquals(\"Topic 0 Description Line 1 Topic 0 Description Line 2\", \n        qq.getValue(\"description\"));\n    assertEquals(\"Topic 0 Narrative Line 1 Topic 0 Narrative Line 2\", \n        qq.getValue(\"narrative\"));\n    \n    qq = qqs[1];\n    assertEquals(\"agreed 15  against five\", qq.getValue(\"title\"));\n    assertEquals(\"Topic 1 Description Line 1 Topic 1 Description Line 2\", \n        qq.getValue(\"description\"));\n    assertEquals(\"Topic 1 Narrative Line 1 Topic 1 Narrative Line 2\", \n        qq.getValue(\"narrative\"));\n    \n    qq = qqs[19];\n    assertEquals(\"20 while  common week\", qq.getValue(\"title\"));\n    assertEquals(\"Topic 19 Description Line 1 Topic 19 Description Line 2\", \n        qq.getValue(\"description\"));\n    assertEquals(\"Topic 19 Narrative Line 1 Topic 19 Narrative Line 2\", \n        qq.getValue(\"narrative\"));\n  }\n\n","sourceOld":"  public void testTrecTopicsReader() throws Exception {    \n    // prepare topics\n    InputStream topicsFile = getClass().getResourceAsStream(\"trecTopics.txt\");\n    TrecTopicsReader qReader = new TrecTopicsReader();\n    QualityQuery qqs[] = qReader.readQueries(\n        new BufferedReader(new InputStreamReader(topicsFile, \"UTF-8\")));\n    \n    assertEquals(20, qqs.length);\n    \n    QualityQuery qq = qqs[0];\n    assertEquals(\"statement months  total 1987\", qq.getValue(\"title\"));\n    assertEquals(\"Topic 0 Description Line 1 Topic 0 Description Line 2\", \n        qq.getValue(\"description\"));\n    assertEquals(\"Topic 0 Narrative Line 1 Topic 0 Narrative Line 2\", \n        qq.getValue(\"narrative\"));\n    \n    qq = qqs[1];\n    assertEquals(\"agreed 15  against five\", qq.getValue(\"title\"));\n    assertEquals(\"Topic 1 Description Line 1 Topic 1 Description Line 2\", \n        qq.getValue(\"description\"));\n    assertEquals(\"Topic 1 Narrative Line 1 Topic 1 Narrative Line 2\", \n        qq.getValue(\"narrative\"));\n    \n    qq = qqs[19];\n    assertEquals(\"20 while  common week\", qq.getValue(\"title\"));\n    assertEquals(\"Topic 19 Description Line 1 Topic 19 Description Line 2\", \n        qq.getValue(\"description\"));\n    assertEquals(\"Topic 19 Narrative Line 1 Topic 19 Narrative Line 2\", \n        qq.getValue(\"narrative\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5eb2511ababf862ea11e10761c70ee560cd84510":["b89678825b68eccaf09e6ab71675fc0b0af1e099","7d89d7e4e5101347833eea558851bf4209218619"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7d89d7e4e5101347833eea558851bf4209218619":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7d89d7e4e5101347833eea558851bf4209218619"]},"commit2Childs":{"5eb2511ababf862ea11e10761c70ee560cd84510":[],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["5eb2511ababf862ea11e10761c70ee560cd84510","7d89d7e4e5101347833eea558851bf4209218619"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"7d89d7e4e5101347833eea558851bf4209218619":["5eb2511ababf862ea11e10761c70ee560cd84510","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5eb2511ababf862ea11e10761c70ee560cd84510","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}