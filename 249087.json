{"path":"solr/core/src/test/org/apache/solr/cloud/ReplicationFactorTest#doDelete(UpdateRequest,String,int,int).mjava","commits":[{"id":"615bf5b56d95ed8c9bf06a402db6c817d6bff21a","date":1509492118,"type":0,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ReplicationFactorTest#doDelete(UpdateRequest,String,int,int).mjava","pathOld":"/dev/null","sourceNew":"  protected void doDelete(UpdateRequest req, String msg, int expectedRf, int retries) throws IOException, SolrServerException, InterruptedException {\n    int achievedRf = -1;\n    for (int idx = 0; idx < retries; ++idx) {\n      achievedRf = cloudClient.getMinAchievedReplicationFactor(cloudClient.getDefaultCollection(), cloudClient.request(req));\n      if (achievedRf == expectedRf) return;\n      Thread.sleep(1000);\n    }\n    assertEquals(msg, expectedRf, achievedRf);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"43f5f8344e80b4bfb2069917069430266753d2f0","date":1538584815,"type":5,"author":"Tomas Fernandez Lobbe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ReplicationFactorTest#doDelete(UpdateRequest,String,int,int,boolean).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ReplicationFactorTest#doDelete(UpdateRequest,String,int,int).mjava","sourceNew":"  protected void doDelete(UpdateRequest req, String msg, int expectedRf, int retries, boolean minRfExplicit) throws IOException, SolrServerException, InterruptedException {\n    int achievedRf = -1;\n    for (int idx = 0; idx < retries; ++idx) {\n      NamedList<Object> response = cloudClient.request(req);\n      if (minRfExplicit) {\n        assertMinRfInResponse(expectedRf, response);\n      }\n      achievedRf = cloudClient.getMinAchievedReplicationFactor(cloudClient.getDefaultCollection(), response);\n      if (achievedRf == expectedRf) return;\n      Thread.sleep(1000);\n    }\n    assertEquals(msg, expectedRf, achievedRf);\n  }\n\n","sourceOld":"  protected void doDelete(UpdateRequest req, String msg, int expectedRf, int retries) throws IOException, SolrServerException, InterruptedException {\n    int achievedRf = -1;\n    for (int idx = 0; idx < retries; ++idx) {\n      achievedRf = cloudClient.getMinAchievedReplicationFactor(cloudClient.getDefaultCollection(), cloudClient.request(req));\n      if (achievedRf == expectedRf) return;\n      Thread.sleep(1000);\n    }\n    assertEquals(msg, expectedRf, achievedRf);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"43f5f8344e80b4bfb2069917069430266753d2f0":["615bf5b56d95ed8c9bf06a402db6c817d6bff21a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"615bf5b56d95ed8c9bf06a402db6c817d6bff21a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["43f5f8344e80b4bfb2069917069430266753d2f0"]},"commit2Childs":{"43f5f8344e80b4bfb2069917069430266753d2f0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["615bf5b56d95ed8c9bf06a402db6c817d6bff21a"],"615bf5b56d95ed8c9bf06a402db6c817d6bff21a":["43f5f8344e80b4bfb2069917069430266753d2f0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}