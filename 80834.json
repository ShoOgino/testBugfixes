{"path":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyCombined#testSeparateReaderAndWriter2().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyCombined#testSeparateReaderAndWriter2().mjava","pathOld":"modules/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyCombined#testSeparateReaderAndWriter2().mjava","sourceNew":"  @Test\n  public void testSeparateReaderAndWriter2() throws Exception {\n    Directory indexDir = newDirectory();\n    TaxonomyWriter tw = new DirectoryTaxonomyWriter(indexDir);\n    tw.commit();\n    TaxonomyReader tr = new DirectoryTaxonomyReader(indexDir);\n\n    // Test getOrdinal():\n    CategoryPath author = new CategoryPath(\"Author\");\n\n    assertEquals(1, tr.getSize()); // the empty taxonomy has size 1 (the root)\n    assertEquals(TaxonomyReader.INVALID_ORDINAL, tr.getOrdinal(author));\n    tw.addCategory(author);\n    // before commit and refresh, no change:\n    assertEquals(TaxonomyReader.INVALID_ORDINAL, tr.getOrdinal(author));\n    assertEquals(1, tr.getSize()); // still root only...\n    tr.refresh(); // this is not enough, because tw.commit() hasn't been done yet\n    assertEquals(TaxonomyReader.INVALID_ORDINAL, tr.getOrdinal(author));\n    assertEquals(1, tr.getSize()); // still root only...\n    tw.commit();\n    // still not enough before refresh:\n    assertEquals(TaxonomyReader.INVALID_ORDINAL, tr.getOrdinal(author));\n    assertEquals(1, tr.getSize()); // still root only...\n    tr.refresh(); // finally\n    assertEquals(1, tr.getOrdinal(author));\n    assertEquals(2, tr.getSize()); // still root only...\n    tw.close();\n    tr.close();\n    indexDir.close();\n  }\n\n","sourceOld":"  @Test\n  public void testSeparateReaderAndWriter2() throws Exception {\n    Directory indexDir = newDirectory();\n    TaxonomyWriter tw = new DirectoryTaxonomyWriter(indexDir);\n    tw.commit();\n    TaxonomyReader tr = new DirectoryTaxonomyReader(indexDir);\n\n    // Test getOrdinal():\n    CategoryPath author = new CategoryPath(\"Author\");\n\n    assertEquals(1, tr.getSize()); // the empty taxonomy has size 1 (the root)\n    assertEquals(TaxonomyReader.INVALID_ORDINAL, tr.getOrdinal(author));\n    tw.addCategory(author);\n    // before commit and refresh, no change:\n    assertEquals(TaxonomyReader.INVALID_ORDINAL, tr.getOrdinal(author));\n    assertEquals(1, tr.getSize()); // still root only...\n    tr.refresh(); // this is not enough, because tw.commit() hasn't been done yet\n    assertEquals(TaxonomyReader.INVALID_ORDINAL, tr.getOrdinal(author));\n    assertEquals(1, tr.getSize()); // still root only...\n    tw.commit();\n    // still not enough before refresh:\n    assertEquals(TaxonomyReader.INVALID_ORDINAL, tr.getOrdinal(author));\n    assertEquals(1, tr.getSize()); // still root only...\n    tr.refresh(); // finally\n    assertEquals(1, tr.getOrdinal(author));\n    assertEquals(2, tr.getSize()); // still root only...\n    tw.close();\n    tr.close();\n    indexDir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"219dcddcdf2fc13f6271d9e5836bd19c53a4abf1","date":1353511594,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyCombined#testSeparateReaderAndWriter2().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyCombined#testSeparateReaderAndWriter2().mjava","sourceNew":"  @Test\n  public void testSeparateReaderAndWriter2() throws Exception {\n    Directory indexDir = newDirectory();\n    TaxonomyWriter tw = new DirectoryTaxonomyWriter(indexDir);\n    tw.commit();\n    TaxonomyReader tr = new DirectoryTaxonomyReader(indexDir);\n\n    // Test getOrdinal():\n    CategoryPath author = new CategoryPath(\"Author\");\n\n    assertEquals(1, tr.getSize()); // the empty taxonomy has size 1 (the root)\n    assertEquals(TaxonomyReader.INVALID_ORDINAL, tr.getOrdinal(author));\n    tw.addCategory(author);\n    // before commit and refresh, no change:\n    assertEquals(TaxonomyReader.INVALID_ORDINAL, tr.getOrdinal(author));\n    assertEquals(1, tr.getSize()); // still root only...\n    assertNull(TaxonomyReader.openIfChanged(tr)); // this is not enough, because tw.commit() hasn't been done yet\n    assertEquals(TaxonomyReader.INVALID_ORDINAL, tr.getOrdinal(author));\n    assertEquals(1, tr.getSize()); // still root only...\n    tw.commit();\n    // still not enough before refresh:\n    assertEquals(TaxonomyReader.INVALID_ORDINAL, tr.getOrdinal(author));\n    assertEquals(1, tr.getSize()); // still root only...\n    TaxonomyReader newTaxoReader = TaxonomyReader.openIfChanged(tr);\n    assertNotNull(newTaxoReader);\n    tr.close();\n    tr = newTaxoReader;\n    assertEquals(1, tr.getOrdinal(author));\n    assertEquals(2, tr.getSize());\n    tw.close();\n    tr.close();\n    indexDir.close();\n  }\n\n","sourceOld":"  @Test\n  public void testSeparateReaderAndWriter2() throws Exception {\n    Directory indexDir = newDirectory();\n    TaxonomyWriter tw = new DirectoryTaxonomyWriter(indexDir);\n    tw.commit();\n    TaxonomyReader tr = new DirectoryTaxonomyReader(indexDir);\n\n    // Test getOrdinal():\n    CategoryPath author = new CategoryPath(\"Author\");\n\n    assertEquals(1, tr.getSize()); // the empty taxonomy has size 1 (the root)\n    assertEquals(TaxonomyReader.INVALID_ORDINAL, tr.getOrdinal(author));\n    tw.addCategory(author);\n    // before commit and refresh, no change:\n    assertEquals(TaxonomyReader.INVALID_ORDINAL, tr.getOrdinal(author));\n    assertEquals(1, tr.getSize()); // still root only...\n    tr.refresh(); // this is not enough, because tw.commit() hasn't been done yet\n    assertEquals(TaxonomyReader.INVALID_ORDINAL, tr.getOrdinal(author));\n    assertEquals(1, tr.getSize()); // still root only...\n    tw.commit();\n    // still not enough before refresh:\n    assertEquals(TaxonomyReader.INVALID_ORDINAL, tr.getOrdinal(author));\n    assertEquals(1, tr.getSize()); // still root only...\n    tr.refresh(); // finally\n    assertEquals(1, tr.getOrdinal(author));\n    assertEquals(2, tr.getSize()); // still root only...\n    tw.close();\n    tr.close();\n    indexDir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"407687e67faf6e1f02a211ca078d8e3eed631027","date":1355157407,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyCombined#testSeparateReaderAndWriter2().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyCombined#testSeparateReaderAndWriter2().mjava","sourceNew":"  @Test\n  public void testSeparateReaderAndWriter2() throws Exception {\n    Directory indexDir = newDirectory();\n    TaxonomyWriter tw = new DirectoryTaxonomyWriter(indexDir);\n    tw.commit();\n    TaxonomyReader tr = new DirectoryTaxonomyReader(indexDir);\n\n    // Test getOrdinal():\n    CategoryPath author = new CategoryPath(\"Author\");\n\n    assertEquals(1, tr.getSize()); // the empty taxonomy has size 1 (the root)\n    assertEquals(TaxonomyReader.INVALID_ORDINAL, tr.getOrdinal(author));\n    tw.addCategory(author);\n    // before commit and refresh, no change:\n    assertEquals(TaxonomyReader.INVALID_ORDINAL, tr.getOrdinal(author));\n    assertEquals(1, tr.getSize()); // still root only...\n    assertNull(TaxonomyReader.openIfChanged(tr)); // this is not enough, because tw.commit() hasn't been done yet\n    assertEquals(TaxonomyReader.INVALID_ORDINAL, tr.getOrdinal(author));\n    assertEquals(1, tr.getSize()); // still root only...\n    tw.commit();\n    // still not enough before refresh:\n    assertEquals(TaxonomyReader.INVALID_ORDINAL, tr.getOrdinal(author));\n    assertEquals(1, tr.getSize()); // still root only...\n    TaxonomyReader newTaxoReader = TaxonomyReader.openIfChanged(tr);\n    assertNotNull(newTaxoReader);\n    tr.close();\n    tr = newTaxoReader;\n    assertEquals(1, tr.getOrdinal(author));\n    assertEquals(2, tr.getSize());\n    tw.close();\n    tr.close();\n    indexDir.close();\n  }\n\n","sourceOld":"  @Test\n  public void testSeparateReaderAndWriter2() throws Exception {\n    Directory indexDir = newDirectory();\n    TaxonomyWriter tw = new DirectoryTaxonomyWriter(indexDir);\n    tw.commit();\n    TaxonomyReader tr = new DirectoryTaxonomyReader(indexDir);\n\n    // Test getOrdinal():\n    CategoryPath author = new CategoryPath(\"Author\");\n\n    assertEquals(1, tr.getSize()); // the empty taxonomy has size 1 (the root)\n    assertEquals(TaxonomyReader.INVALID_ORDINAL, tr.getOrdinal(author));\n    tw.addCategory(author);\n    // before commit and refresh, no change:\n    assertEquals(TaxonomyReader.INVALID_ORDINAL, tr.getOrdinal(author));\n    assertEquals(1, tr.getSize()); // still root only...\n    tr.refresh(); // this is not enough, because tw.commit() hasn't been done yet\n    assertEquals(TaxonomyReader.INVALID_ORDINAL, tr.getOrdinal(author));\n    assertEquals(1, tr.getSize()); // still root only...\n    tw.commit();\n    // still not enough before refresh:\n    assertEquals(TaxonomyReader.INVALID_ORDINAL, tr.getOrdinal(author));\n    assertEquals(1, tr.getSize()); // still root only...\n    tr.refresh(); // finally\n    assertEquals(1, tr.getOrdinal(author));\n    assertEquals(2, tr.getSize()); // still root only...\n    tw.close();\n    tr.close();\n    indexDir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c190847801a50f4dd20fd639bdc29b54ea3b288b","date":1384461522,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyCombined#testSeparateReaderAndWriter2().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyCombined#testSeparateReaderAndWriter2().mjava","sourceNew":"  @Test\n  public void testSeparateReaderAndWriter2() throws Exception {\n    Directory indexDir = newDirectory();\n    TaxonomyWriter tw = new DirectoryTaxonomyWriter(indexDir);\n    tw.commit();\n    TaxonomyReader tr = new DirectoryTaxonomyReader(indexDir);\n\n    // Test getOrdinal():\n    FacetLabel author = new FacetLabel(\"Author\");\n\n    assertEquals(1, tr.getSize()); // the empty taxonomy has size 1 (the root)\n    assertEquals(TaxonomyReader.INVALID_ORDINAL, tr.getOrdinal(author));\n    tw.addCategory(author);\n    // before commit and refresh, no change:\n    assertEquals(TaxonomyReader.INVALID_ORDINAL, tr.getOrdinal(author));\n    assertEquals(1, tr.getSize()); // still root only...\n    assertNull(TaxonomyReader.openIfChanged(tr)); // this is not enough, because tw.commit() hasn't been done yet\n    assertEquals(TaxonomyReader.INVALID_ORDINAL, tr.getOrdinal(author));\n    assertEquals(1, tr.getSize()); // still root only...\n    tw.commit();\n    // still not enough before refresh:\n    assertEquals(TaxonomyReader.INVALID_ORDINAL, tr.getOrdinal(author));\n    assertEquals(1, tr.getSize()); // still root only...\n    TaxonomyReader newTaxoReader = TaxonomyReader.openIfChanged(tr);\n    assertNotNull(newTaxoReader);\n    tr.close();\n    tr = newTaxoReader;\n    assertEquals(1, tr.getOrdinal(author));\n    assertEquals(2, tr.getSize());\n    tw.close();\n    tr.close();\n    indexDir.close();\n  }\n\n","sourceOld":"  @Test\n  public void testSeparateReaderAndWriter2() throws Exception {\n    Directory indexDir = newDirectory();\n    TaxonomyWriter tw = new DirectoryTaxonomyWriter(indexDir);\n    tw.commit();\n    TaxonomyReader tr = new DirectoryTaxonomyReader(indexDir);\n\n    // Test getOrdinal():\n    CategoryPath author = new CategoryPath(\"Author\");\n\n    assertEquals(1, tr.getSize()); // the empty taxonomy has size 1 (the root)\n    assertEquals(TaxonomyReader.INVALID_ORDINAL, tr.getOrdinal(author));\n    tw.addCategory(author);\n    // before commit and refresh, no change:\n    assertEquals(TaxonomyReader.INVALID_ORDINAL, tr.getOrdinal(author));\n    assertEquals(1, tr.getSize()); // still root only...\n    assertNull(TaxonomyReader.openIfChanged(tr)); // this is not enough, because tw.commit() hasn't been done yet\n    assertEquals(TaxonomyReader.INVALID_ORDINAL, tr.getOrdinal(author));\n    assertEquals(1, tr.getSize()); // still root only...\n    tw.commit();\n    // still not enough before refresh:\n    assertEquals(TaxonomyReader.INVALID_ORDINAL, tr.getOrdinal(author));\n    assertEquals(1, tr.getSize()); // still root only...\n    TaxonomyReader newTaxoReader = TaxonomyReader.openIfChanged(tr);\n    assertNotNull(newTaxoReader);\n    tr.close();\n    tr = newTaxoReader;\n    assertEquals(1, tr.getOrdinal(author));\n    assertEquals(2, tr.getSize());\n    tw.close();\n    tr.close();\n    indexDir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cc728b07df73b197e6d940d27f9b08b63918f13","date":1388834348,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyCombined#testSeparateReaderAndWriter2().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyCombined#testSeparateReaderAndWriter2().mjava","sourceNew":"  @Test\n  public void testSeparateReaderAndWriter2() throws Exception {\n    Directory indexDir = newDirectory();\n    TaxonomyWriter tw = new DirectoryTaxonomyWriter(indexDir);\n    tw.commit();\n    TaxonomyReader tr = new DirectoryTaxonomyReader(indexDir);\n\n    // Test getOrdinal():\n    FacetLabel author = new FacetLabel(\"Author\");\n\n    assertEquals(1, tr.getSize()); // the empty taxonomy has size 1 (the root)\n    assertEquals(TaxonomyReader.INVALID_ORDINAL, tr.getOrdinal(author));\n    tw.addCategory(author);\n    // before commit and refresh, no change:\n    assertEquals(TaxonomyReader.INVALID_ORDINAL, tr.getOrdinal(author));\n    assertEquals(1, tr.getSize()); // still root only...\n    assertNull(TaxonomyReader.openIfChanged(tr)); // this is not enough, because tw.commit() hasn't been done yet\n    assertEquals(TaxonomyReader.INVALID_ORDINAL, tr.getOrdinal(author));\n    assertEquals(1, tr.getSize()); // still root only...\n    tw.commit();\n    // still not enough before refresh:\n    assertEquals(TaxonomyReader.INVALID_ORDINAL, tr.getOrdinal(author));\n    assertEquals(1, tr.getSize()); // still root only...\n    TaxonomyReader newTaxoReader = TaxonomyReader.openIfChanged(tr);\n    assertNotNull(newTaxoReader);\n    tr.close();\n    tr = newTaxoReader;\n    assertEquals(1, tr.getOrdinal(author));\n    assertEquals(2, tr.getSize());\n    tw.close();\n    tr.close();\n    indexDir.close();\n  }\n\n","sourceOld":"  @Test\n  public void testSeparateReaderAndWriter2() throws Exception {\n    Directory indexDir = newDirectory();\n    TaxonomyWriter tw = new DirectoryTaxonomyWriter(indexDir);\n    tw.commit();\n    TaxonomyReader tr = new DirectoryTaxonomyReader(indexDir);\n\n    // Test getOrdinal():\n    CategoryPath author = new CategoryPath(\"Author\");\n\n    assertEquals(1, tr.getSize()); // the empty taxonomy has size 1 (the root)\n    assertEquals(TaxonomyReader.INVALID_ORDINAL, tr.getOrdinal(author));\n    tw.addCategory(author);\n    // before commit and refresh, no change:\n    assertEquals(TaxonomyReader.INVALID_ORDINAL, tr.getOrdinal(author));\n    assertEquals(1, tr.getSize()); // still root only...\n    assertNull(TaxonomyReader.openIfChanged(tr)); // this is not enough, because tw.commit() hasn't been done yet\n    assertEquals(TaxonomyReader.INVALID_ORDINAL, tr.getOrdinal(author));\n    assertEquals(1, tr.getSize()); // still root only...\n    tw.commit();\n    // still not enough before refresh:\n    assertEquals(TaxonomyReader.INVALID_ORDINAL, tr.getOrdinal(author));\n    assertEquals(1, tr.getSize()); // still root only...\n    TaxonomyReader newTaxoReader = TaxonomyReader.openIfChanged(tr);\n    assertNotNull(newTaxoReader);\n    tr.close();\n    tr = newTaxoReader;\n    assertEquals(1, tr.getOrdinal(author));\n    assertEquals(2, tr.getSize());\n    tw.close();\n    tr.close();\n    indexDir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"407687e67faf6e1f02a211ca078d8e3eed631027":["b89678825b68eccaf09e6ab71675fc0b0af1e099","219dcddcdf2fc13f6271d9e5836bd19c53a4abf1"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["219dcddcdf2fc13f6271d9e5836bd19c53a4abf1","c190847801a50f4dd20fd639bdc29b54ea3b288b"],"219dcddcdf2fc13f6271d9e5836bd19c53a4abf1":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"c190847801a50f4dd20fd639bdc29b54ea3b288b":["219dcddcdf2fc13f6271d9e5836bd19c53a4abf1"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["407687e67faf6e1f02a211ca078d8e3eed631027","219dcddcdf2fc13f6271d9e5836bd19c53a4abf1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"407687e67faf6e1f02a211ca078d8e3eed631027":[],"3cc728b07df73b197e6d940d27f9b08b63918f13":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"219dcddcdf2fc13f6271d9e5836bd19c53a4abf1":["407687e67faf6e1f02a211ca078d8e3eed631027","3cc728b07df73b197e6d940d27f9b08b63918f13","c190847801a50f4dd20fd639bdc29b54ea3b288b"],"c190847801a50f4dd20fd639bdc29b54ea3b288b":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["407687e67faf6e1f02a211ca078d8e3eed631027","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}