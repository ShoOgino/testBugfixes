{"path":"src/java/org/apache/solr/analysis/WordDelimiterIterator#charType(int).mjava","commits":[{"id":"ef28ac95f5f85bbf872801277448c0924b0a6827","date":1268600312,"type":1,"author":"Mark Robert Miller","isMerge":false,"pathNew":"src/java/org/apache/solr/analysis/WordDelimiterIterator#charType(int).mjava","pathOld":"src/java/org/apache/solr/analysis/WordDelimiterFilter#charType(int).mjava","sourceNew":"  /**\n   * Determines the type of the given character\n   *\n   * @param ch Character whose type is to be determined\n   * @return Type of the character\n   */\n  private int charType(int ch) {\n    if (ch < charTypeTable.length) {\n      return charTypeTable[ch];\n    }\n    switch (Character.getType(ch)) {\n      case Character.UPPERCASE_LETTER: return UPPER;\n      case Character.LOWERCASE_LETTER: return LOWER;\n\n      case Character.TITLECASE_LETTER:\n      case Character.MODIFIER_LETTER:\n      case Character.OTHER_LETTER:\n      case Character.NON_SPACING_MARK:\n      case Character.ENCLOSING_MARK:  // depends what it encloses?\n      case Character.COMBINING_SPACING_MARK:\n        return ALPHA; \n\n      case Character.DECIMAL_DIGIT_NUMBER:\n      case Character.LETTER_NUMBER:\n      case Character.OTHER_NUMBER:\n        return DIGIT;\n\n      // case Character.SPACE_SEPARATOR:\n      // case Character.LINE_SEPARATOR:\n      // case Character.PARAGRAPH_SEPARATOR:\n      // case Character.CONTROL:\n      // case Character.FORMAT:\n      // case Character.PRIVATE_USE:\n\n      case Character.SURROGATE:  // prevent splitting\n        return ALPHA|DIGIT;  \n\n      // case Character.DASH_PUNCTUATION:\n      // case Character.START_PUNCTUATION:\n      // case Character.END_PUNCTUATION:\n      // case Character.CONNECTOR_PUNCTUATION:\n      // case Character.OTHER_PUNCTUATION:\n      // case Character.MATH_SYMBOL:\n      // case Character.CURRENCY_SYMBOL:\n      // case Character.MODIFIER_SYMBOL:\n      // case Character.OTHER_SYMBOL:\n      // case Character.INITIAL_QUOTE_PUNCTUATION:\n      // case Character.FINAL_QUOTE_PUNCTUATION:\n\n      default: return SUBWORD_DELIM;\n    }\n  }\n\n","sourceOld":"  int charType(int ch) {\n    if (ch<charTypeTable.length) {\n      return charTypeTable[ch];\n    }\n    switch (Character.getType(ch)) {\n      case Character.UPPERCASE_LETTER: return UPPER;\n      case Character.LOWERCASE_LETTER: return LOWER;\n\n      case Character.TITLECASE_LETTER:\n      case Character.MODIFIER_LETTER:\n      case Character.OTHER_LETTER:\n      case Character.NON_SPACING_MARK:\n      case Character.ENCLOSING_MARK:  // depends what it encloses?\n      case Character.COMBINING_SPACING_MARK:\n        return ALPHA; \n\n      case Character.DECIMAL_DIGIT_NUMBER:\n      case Character.LETTER_NUMBER:\n      case Character.OTHER_NUMBER:\n        return DIGIT;\n\n      // case Character.SPACE_SEPARATOR:\n      // case Character.LINE_SEPARATOR:\n      // case Character.PARAGRAPH_SEPARATOR:\n      // case Character.CONTROL:\n      // case Character.FORMAT:\n      // case Character.PRIVATE_USE:\n\n      case Character.SURROGATE:  // prevent splitting\n        return ALPHA|DIGIT;  \n\n      // case Character.DASH_PUNCTUATION:\n      // case Character.START_PUNCTUATION:\n      // case Character.END_PUNCTUATION:\n      // case Character.CONNECTOR_PUNCTUATION:\n      // case Character.OTHER_PUNCTUATION:\n      // case Character.MATH_SYMBOL:\n      // case Character.CURRENCY_SYMBOL:\n      // case Character.MODIFIER_SYMBOL:\n      // case Character.OTHER_SYMBOL:\n      // case Character.INITIAL_QUOTE_PUNCTUATION:\n      // case Character.FINAL_QUOTE_PUNCTUATION:\n\n      default: return SUBWORD_DELIM;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/analysis/WordDelimiterIterator#charType(int).mjava","pathOld":"src/java/org/apache/solr/analysis/WordDelimiterIterator#charType(int).mjava","sourceNew":"  /**\n   * Determines the type of the given character\n   *\n   * @param ch Character whose type is to be determined\n   * @return Type of the character\n   */\n  private int charType(int ch) {\n    if (ch < charTypeTable.length) {\n      return charTypeTable[ch];\n    }\n    switch (Character.getType(ch)) {\n      case Character.UPPERCASE_LETTER: return UPPER;\n      case Character.LOWERCASE_LETTER: return LOWER;\n\n      case Character.TITLECASE_LETTER:\n      case Character.MODIFIER_LETTER:\n      case Character.OTHER_LETTER:\n      case Character.NON_SPACING_MARK:\n      case Character.ENCLOSING_MARK:  // depends what it encloses?\n      case Character.COMBINING_SPACING_MARK:\n        return ALPHA; \n\n      case Character.DECIMAL_DIGIT_NUMBER:\n      case Character.LETTER_NUMBER:\n      case Character.OTHER_NUMBER:\n        return DIGIT;\n\n      // case Character.SPACE_SEPARATOR:\n      // case Character.LINE_SEPARATOR:\n      // case Character.PARAGRAPH_SEPARATOR:\n      // case Character.CONTROL:\n      // case Character.FORMAT:\n      // case Character.PRIVATE_USE:\n\n      case Character.SURROGATE:  // prevent splitting\n        return ALPHA|DIGIT;  \n\n      // case Character.DASH_PUNCTUATION:\n      // case Character.START_PUNCTUATION:\n      // case Character.END_PUNCTUATION:\n      // case Character.CONNECTOR_PUNCTUATION:\n      // case Character.OTHER_PUNCTUATION:\n      // case Character.MATH_SYMBOL:\n      // case Character.CURRENCY_SYMBOL:\n      // case Character.MODIFIER_SYMBOL:\n      // case Character.OTHER_SYMBOL:\n      // case Character.INITIAL_QUOTE_PUNCTUATION:\n      // case Character.FINAL_QUOTE_PUNCTUATION:\n\n      default: return SUBWORD_DELIM;\n    }\n  }\n\n","sourceOld":"  /**\n   * Determines the type of the given character\n   *\n   * @param ch Character whose type is to be determined\n   * @return Type of the character\n   */\n  private int charType(int ch) {\n    if (ch < charTypeTable.length) {\n      return charTypeTable[ch];\n    }\n    switch (Character.getType(ch)) {\n      case Character.UPPERCASE_LETTER: return UPPER;\n      case Character.LOWERCASE_LETTER: return LOWER;\n\n      case Character.TITLECASE_LETTER:\n      case Character.MODIFIER_LETTER:\n      case Character.OTHER_LETTER:\n      case Character.NON_SPACING_MARK:\n      case Character.ENCLOSING_MARK:  // depends what it encloses?\n      case Character.COMBINING_SPACING_MARK:\n        return ALPHA; \n\n      case Character.DECIMAL_DIGIT_NUMBER:\n      case Character.LETTER_NUMBER:\n      case Character.OTHER_NUMBER:\n        return DIGIT;\n\n      // case Character.SPACE_SEPARATOR:\n      // case Character.LINE_SEPARATOR:\n      // case Character.PARAGRAPH_SEPARATOR:\n      // case Character.CONTROL:\n      // case Character.FORMAT:\n      // case Character.PRIVATE_USE:\n\n      case Character.SURROGATE:  // prevent splitting\n        return ALPHA|DIGIT;  \n\n      // case Character.DASH_PUNCTUATION:\n      // case Character.START_PUNCTUATION:\n      // case Character.END_PUNCTUATION:\n      // case Character.CONNECTOR_PUNCTUATION:\n      // case Character.OTHER_PUNCTUATION:\n      // case Character.MATH_SYMBOL:\n      // case Character.CURRENCY_SYMBOL:\n      // case Character.MODIFIER_SYMBOL:\n      // case Character.OTHER_SYMBOL:\n      // case Character.INITIAL_QUOTE_PUNCTUATION:\n      // case Character.FINAL_QUOTE_PUNCTUATION:\n\n      default: return SUBWORD_DELIM;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ef28ac95f5f85bbf872801277448c0924b0a6827":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"ad94625fb8d088209f46650c8097196fec67f00c":["ef28ac95f5f85bbf872801277448c0924b0a6827"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["ef28ac95f5f85bbf872801277448c0924b0a6827"],"ef28ac95f5f85bbf872801277448c0924b0a6827":["ad94625fb8d088209f46650c8097196fec67f00c"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}