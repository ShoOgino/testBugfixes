{"path":"lucene/core/src/java/org/apache/lucene/util/bkd/BKDReader#getIntersectState(IntersectVisitor).mjava","commits":[{"id":"b01431682e11036a1a7d757a3fa7c1f903fb2c45","date":1460646145,"type":0,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/bkd/BKDReader#getIntersectState(IntersectVisitor).mjava","pathOld":"/dev/null","sourceNew":"  /** Create a new {@link IntersectState} */\n  public IntersectState getIntersectState(IntersectVisitor visitor) {\n    return new IntersectState(in.clone(), numDims,\n                              packedBytesLength,\n                              maxPointsInLeafNode,\n                              visitor);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9fc0d60683b47b5d922124c31f57c8b34734f9e6","date":1480846684,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/bkd/BKDReader#getIntersectState(IntersectVisitor).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/bkd/BKDReader#getIntersectState(IntersectVisitor).mjava","sourceNew":"  /** Create a new {@link IntersectState} */\n  public IntersectState getIntersectState(IntersectVisitor visitor) {\n    IndexTree index;\n    if (packedIndex != null) {\n      index = new PackedIndexTree();\n    } else {\n      index = new LegacyIndexTree();\n    }\n    return new IntersectState(in.clone(), numDims,\n                              packedBytesLength,\n                              maxPointsInLeafNode,\n                              visitor,\n                              index);\n  }\n\n","sourceOld":"  /** Create a new {@link IntersectState} */\n  public IntersectState getIntersectState(IntersectVisitor visitor) {\n    return new IntersectState(in.clone(), numDims,\n                              packedBytesLength,\n                              maxPointsInLeafNode,\n                              visitor);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9856095f7afb5a607bf5e65077615ed91273508c","date":1481837697,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/bkd/BKDReader#getIntersectState(IntersectVisitor).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/bkd/BKDReader#getIntersectState(IntersectVisitor).mjava","sourceNew":"  /** Create a new {@link IntersectState} */\n  public IntersectState getIntersectState(IntersectVisitor visitor) {\n    IndexTree index;\n    if (packedIndex != null) {\n      index = new PackedIndexTree();\n    } else {\n      index = new LegacyIndexTree();\n    }\n    return new IntersectState(in.clone(), numDims,\n                              packedBytesLength,\n                              maxPointsInLeafNode,\n                              visitor,\n                              index);\n  }\n\n","sourceOld":"  /** Create a new {@link IntersectState} */\n  public IntersectState getIntersectState(IntersectVisitor visitor) {\n    return new IntersectState(in.clone(), numDims,\n                              packedBytesLength,\n                              maxPointsInLeafNode,\n                              visitor);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c0e7448656541edc407546460641f47950451b16","date":1519150500,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/bkd/BKDReader#getIntersectState(IntersectVisitor).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/bkd/BKDReader#getIntersectState(IntersectVisitor).mjava","sourceNew":"  /** Create a new {@link IntersectState} */\n  public IntersectState getIntersectState(IntersectVisitor visitor) {\n    IndexTree index = new IndexTree();\n    return new IntersectState(in.clone(), numDims,\n                              packedBytesLength,\n                              maxPointsInLeafNode,\n                              visitor,\n                              index);\n  }\n\n","sourceOld":"  /** Create a new {@link IntersectState} */\n  public IntersectState getIntersectState(IntersectVisitor visitor) {\n    IndexTree index;\n    if (packedIndex != null) {\n      index = new PackedIndexTree();\n    } else {\n      index = new LegacyIndexTree();\n    }\n    return new IntersectState(in.clone(), numDims,\n                              packedBytesLength,\n                              maxPointsInLeafNode,\n                              visitor,\n                              index);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f6652c943595e92c187ee904c382863013eae28f","date":1539042663,"type":3,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/bkd/BKDReader#getIntersectState(IntersectVisitor).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/bkd/BKDReader#getIntersectState(IntersectVisitor).mjava","sourceNew":"  /** Create a new {@link IntersectState} */\n  public IntersectState getIntersectState(IntersectVisitor visitor) {\n    IndexTree index = new IndexTree();\n    return new IntersectState(in.clone(), numDataDims,\n                              packedBytesLength,\n                              packedIndexBytesLength,\n                              maxPointsInLeafNode,\n                              visitor,\n                              index);\n  }\n\n","sourceOld":"  /** Create a new {@link IntersectState} */\n  public IntersectState getIntersectState(IntersectVisitor visitor) {\n    IndexTree index = new IndexTree();\n    return new IntersectState(in.clone(), numDims,\n                              packedBytesLength,\n                              maxPointsInLeafNode,\n                              visitor,\n                              index);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb94bf667d51f9c390c99d97afb36b7caab6b6e9","date":1599548621,"type":3,"author":"Ignacio Vera","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/bkd/BKDReader#getIntersectState(IntersectVisitor).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/bkd/BKDReader#getIntersectState(IntersectVisitor).mjava","sourceNew":"  /** Create a new {@link IntersectState} */\n  public IntersectState getIntersectState(IntersectVisitor visitor) {\n    IndexTree index = new IndexTree();\n    return new IntersectState(in.clone(), config, visitor, index);\n  }\n\n","sourceOld":"  /** Create a new {@link IntersectState} */\n  public IntersectState getIntersectState(IntersectVisitor visitor) {\n    IndexTree index = new IndexTree();\n    return new IntersectState(in.clone(), numDataDims,\n                              packedBytesLength,\n                              packedIndexBytesLength,\n                              maxPointsInLeafNode,\n                              visitor,\n                              index);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c0e7448656541edc407546460641f47950451b16":["9fc0d60683b47b5d922124c31f57c8b34734f9e6"],"9fc0d60683b47b5d922124c31f57c8b34734f9e6":["b01431682e11036a1a7d757a3fa7c1f903fb2c45"],"bb94bf667d51f9c390c99d97afb36b7caab6b6e9":["f6652c943595e92c187ee904c382863013eae28f"],"f6652c943595e92c187ee904c382863013eae28f":["c0e7448656541edc407546460641f47950451b16"],"b01431682e11036a1a7d757a3fa7c1f903fb2c45":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9856095f7afb5a607bf5e65077615ed91273508c":["b01431682e11036a1a7d757a3fa7c1f903fb2c45","9fc0d60683b47b5d922124c31f57c8b34734f9e6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["bb94bf667d51f9c390c99d97afb36b7caab6b6e9"]},"commit2Childs":{"c0e7448656541edc407546460641f47950451b16":["f6652c943595e92c187ee904c382863013eae28f"],"9fc0d60683b47b5d922124c31f57c8b34734f9e6":["c0e7448656541edc407546460641f47950451b16","9856095f7afb5a607bf5e65077615ed91273508c"],"bb94bf667d51f9c390c99d97afb36b7caab6b6e9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f6652c943595e92c187ee904c382863013eae28f":["bb94bf667d51f9c390c99d97afb36b7caab6b6e9"],"b01431682e11036a1a7d757a3fa7c1f903fb2c45":["9fc0d60683b47b5d922124c31f57c8b34734f9e6","9856095f7afb5a607bf5e65077615ed91273508c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b01431682e11036a1a7d757a3fa7c1f903fb2c45"],"9856095f7afb5a607bf5e65077615ed91273508c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["9856095f7afb5a607bf5e65077615ed91273508c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}