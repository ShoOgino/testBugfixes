{"path":"lucene/analysis/nori/src/java/org/apache/lucene/analysis/ko/KoreanTokenizer#incrementToken().mjava","commits":[{"id":"8493925b2e70246f0961df584c01a8c2e61ee52f","date":1523611602,"type":0,"author":"Jim Ferenczi","isMerge":false,"pathNew":"lucene/analysis/nori/src/java/org/apache/lucene/analysis/ko/KoreanTokenizer#incrementToken().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public boolean incrementToken() throws IOException {\n\n    // parse() is able to return w/o producing any new\n    // tokens, when the tokens it had produced were entirely\n    // punctuation.  So we loop here until we get a real\n    // token or we end:\n    while (pending.size() == 0) {\n      if (end) {\n        return false;\n      }\n\n      // Push Viterbi forward some more:\n      parse();\n    }\n\n    final Token token = pending.remove(pending.size()-1);\n\n    int length = token.getLength();\n    clearAttributes();\n    assert length > 0;\n    //System.out.println(\"off=\" + token.getOffset() + \" len=\" + length + \" vs \" + token.getSurfaceForm().length);\n    termAtt.copyBuffer(token.getSurfaceForm(), token.getOffset(), length);\n    offsetAtt.setOffset(correctOffset(token.getStartOffset()), correctOffset(token.getEndOffset()));\n    posAtt.setToken(token);\n    readingAtt.setToken(token);\n    posIncAtt.setPositionIncrement(token.getPositionIncrement());\n    posLengthAtt.setPositionLength(token.getPositionLength());\n    if (VERBOSE) {\n      System.out.println(Thread.currentThread().getName() + \":    incToken: return token=\" + token);\n    }\n    return true;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5c6453827f947004a68ad9db7418781e9df2f660","date":1523626811,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/analysis/nori/src/java/org/apache/lucene/analysis/ko/KoreanTokenizer#incrementToken().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public boolean incrementToken() throws IOException {\n\n    // parse() is able to return w/o producing any new\n    // tokens, when the tokens it had produced were entirely\n    // punctuation.  So we loop here until we get a real\n    // token or we end:\n    while (pending.size() == 0) {\n      if (end) {\n        return false;\n      }\n\n      // Push Viterbi forward some more:\n      parse();\n    }\n\n    final Token token = pending.remove(pending.size()-1);\n\n    int length = token.getLength();\n    clearAttributes();\n    assert length > 0;\n    //System.out.println(\"off=\" + token.getOffset() + \" len=\" + length + \" vs \" + token.getSurfaceForm().length);\n    termAtt.copyBuffer(token.getSurfaceForm(), token.getOffset(), length);\n    offsetAtt.setOffset(correctOffset(token.getStartOffset()), correctOffset(token.getEndOffset()));\n    posAtt.setToken(token);\n    readingAtt.setToken(token);\n    posIncAtt.setPositionIncrement(token.getPositionIncrement());\n    posLengthAtt.setPositionLength(token.getPositionLength());\n    if (VERBOSE) {\n      System.out.println(Thread.currentThread().getName() + \":    incToken: return token=\" + token);\n    }\n    return true;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8493925b2e70246f0961df584c01a8c2e61ee52f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5c6453827f947004a68ad9db7418781e9df2f660"],"5c6453827f947004a68ad9db7418781e9df2f660":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","8493925b2e70246f0961df584c01a8c2e61ee52f"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8493925b2e70246f0961df584c01a8c2e61ee52f","5c6453827f947004a68ad9db7418781e9df2f660"],"8493925b2e70246f0961df584c01a8c2e61ee52f":["5c6453827f947004a68ad9db7418781e9df2f660"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"5c6453827f947004a68ad9db7418781e9df2f660":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}