{"path":"solr/core/src/test/org/apache/solr/uninverting/TestFieldCacheSanityChecker#setUp().mjava","commits":[{"id":"a076c3c721f685b7559308fdc2cd72d91bba67e5","date":1464168992,"type":1,"author":"Mike McCandless","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/uninverting/TestFieldCacheSanityChecker#setUp().mjava","pathOld":"lucene/misc/src/test/org/apache/lucene/uninverting/TestFieldCacheSanityChecker#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dirA = newDirectory();\n    dirB = newDirectory();\n\n    IndexWriter wA = new IndexWriter(dirA, newIndexWriterConfig(new MockAnalyzer(random())));\n    IndexWriter wB = new IndexWriter(dirB, newIndexWriterConfig(new MockAnalyzer(random())));\n\n    long theLong = Long.MAX_VALUE;\n    double theDouble = Double.MAX_VALUE;\n    int theInt = Integer.MAX_VALUE;\n    float theFloat = Float.MAX_VALUE;\n    for (int i = 0; i < NUM_DOCS; i++){\n      Document doc = new Document();\n      doc.add(new LegacyLongField(\"theLong\", theLong--, Field.Store.NO));\n      doc.add(new LegacyDoubleField(\"theDouble\", theDouble--, Field.Store.NO));\n      doc.add(new LegacyIntField(\"theInt\", theInt--, Field.Store.NO));\n      doc.add(new LegacyFloatField(\"theFloat\", theFloat--, Field.Store.NO));\n      if (0 == i % 3) {\n        wA.addDocument(doc);\n      } else {\n        wB.addDocument(doc);\n      }\n    }\n    wA.close();\n    wB.close();\n    DirectoryReader rA = DirectoryReader.open(dirA);\n    readerA = SlowCompositeReaderWrapper.wrap(rA);\n    readerAclone = SlowCompositeReaderWrapper.wrap(rA);\n    readerA = SlowCompositeReaderWrapper.wrap(DirectoryReader.open(dirA));\n    readerB = SlowCompositeReaderWrapper.wrap(DirectoryReader.open(dirB));\n    readerX = SlowCompositeReaderWrapper.wrap(new MultiReader(readerA, readerB));\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dirA = newDirectory();\n    dirB = newDirectory();\n\n    IndexWriter wA = new IndexWriter(dirA, newIndexWriterConfig(new MockAnalyzer(random())));\n    IndexWriter wB = new IndexWriter(dirB, newIndexWriterConfig(new MockAnalyzer(random())));\n\n    long theLong = Long.MAX_VALUE;\n    double theDouble = Double.MAX_VALUE;\n    int theInt = Integer.MAX_VALUE;\n    float theFloat = Float.MAX_VALUE;\n    for (int i = 0; i < NUM_DOCS; i++){\n      Document doc = new Document();\n      doc.add(new LegacyLongField(\"theLong\", theLong--, Field.Store.NO));\n      doc.add(new LegacyDoubleField(\"theDouble\", theDouble--, Field.Store.NO));\n      doc.add(new LegacyIntField(\"theInt\", theInt--, Field.Store.NO));\n      doc.add(new LegacyFloatField(\"theFloat\", theFloat--, Field.Store.NO));\n      if (0 == i % 3) {\n        wA.addDocument(doc);\n      } else {\n        wB.addDocument(doc);\n      }\n    }\n    wA.close();\n    wB.close();\n    DirectoryReader rA = DirectoryReader.open(dirA);\n    readerA = SlowCompositeReaderWrapper.wrap(rA);\n    readerAclone = SlowCompositeReaderWrapper.wrap(rA);\n    readerA = SlowCompositeReaderWrapper.wrap(DirectoryReader.open(dirA));\n    readerB = SlowCompositeReaderWrapper.wrap(DirectoryReader.open(dirB));\n    readerX = SlowCompositeReaderWrapper.wrap(new MultiReader(readerA, readerB));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0e121d43b5a10f2df530f406f935102656e9c4e8","date":1464198131,"type":1,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/uninverting/TestFieldCacheSanityChecker#setUp().mjava","pathOld":"lucene/misc/src/test/org/apache/lucene/uninverting/TestFieldCacheSanityChecker#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dirA = newDirectory();\n    dirB = newDirectory();\n\n    IndexWriter wA = new IndexWriter(dirA, newIndexWriterConfig(new MockAnalyzer(random())));\n    IndexWriter wB = new IndexWriter(dirB, newIndexWriterConfig(new MockAnalyzer(random())));\n\n    long theLong = Long.MAX_VALUE;\n    double theDouble = Double.MAX_VALUE;\n    int theInt = Integer.MAX_VALUE;\n    float theFloat = Float.MAX_VALUE;\n    for (int i = 0; i < NUM_DOCS; i++){\n      Document doc = new Document();\n      doc.add(new LegacyLongField(\"theLong\", theLong--, Field.Store.NO));\n      doc.add(new LegacyDoubleField(\"theDouble\", theDouble--, Field.Store.NO));\n      doc.add(new LegacyIntField(\"theInt\", theInt--, Field.Store.NO));\n      doc.add(new LegacyFloatField(\"theFloat\", theFloat--, Field.Store.NO));\n      if (0 == i % 3) {\n        wA.addDocument(doc);\n      } else {\n        wB.addDocument(doc);\n      }\n    }\n    wA.close();\n    wB.close();\n    DirectoryReader rA = DirectoryReader.open(dirA);\n    readerA = SlowCompositeReaderWrapper.wrap(rA);\n    readerAclone = SlowCompositeReaderWrapper.wrap(rA);\n    readerA = SlowCompositeReaderWrapper.wrap(DirectoryReader.open(dirA));\n    readerB = SlowCompositeReaderWrapper.wrap(DirectoryReader.open(dirB));\n    readerX = SlowCompositeReaderWrapper.wrap(new MultiReader(readerA, readerB));\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dirA = newDirectory();\n    dirB = newDirectory();\n\n    IndexWriter wA = new IndexWriter(dirA, newIndexWriterConfig(new MockAnalyzer(random())));\n    IndexWriter wB = new IndexWriter(dirB, newIndexWriterConfig(new MockAnalyzer(random())));\n\n    long theLong = Long.MAX_VALUE;\n    double theDouble = Double.MAX_VALUE;\n    int theInt = Integer.MAX_VALUE;\n    float theFloat = Float.MAX_VALUE;\n    for (int i = 0; i < NUM_DOCS; i++){\n      Document doc = new Document();\n      doc.add(new LegacyLongField(\"theLong\", theLong--, Field.Store.NO));\n      doc.add(new LegacyDoubleField(\"theDouble\", theDouble--, Field.Store.NO));\n      doc.add(new LegacyIntField(\"theInt\", theInt--, Field.Store.NO));\n      doc.add(new LegacyFloatField(\"theFloat\", theFloat--, Field.Store.NO));\n      if (0 == i % 3) {\n        wA.addDocument(doc);\n      } else {\n        wB.addDocument(doc);\n      }\n    }\n    wA.close();\n    wB.close();\n    DirectoryReader rA = DirectoryReader.open(dirA);\n    readerA = SlowCompositeReaderWrapper.wrap(rA);\n    readerAclone = SlowCompositeReaderWrapper.wrap(rA);\n    readerA = SlowCompositeReaderWrapper.wrap(DirectoryReader.open(dirA));\n    readerB = SlowCompositeReaderWrapper.wrap(DirectoryReader.open(dirB));\n    readerX = SlowCompositeReaderWrapper.wrap(new MultiReader(readerA, readerB));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"83870855d82aba6819217abeff5a40779dbb28b4","date":1464291012,"type":1,"author":"Mike McCandless","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/uninverting/TestFieldCacheSanityChecker#setUp().mjava","pathOld":"lucene/misc/src/test/org/apache/lucene/uninverting/TestFieldCacheSanityChecker#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dirA = newDirectory();\n    dirB = newDirectory();\n\n    IndexWriter wA = new IndexWriter(dirA, newIndexWriterConfig(new MockAnalyzer(random())));\n    IndexWriter wB = new IndexWriter(dirB, newIndexWriterConfig(new MockAnalyzer(random())));\n\n    long theLong = Long.MAX_VALUE;\n    double theDouble = Double.MAX_VALUE;\n    int theInt = Integer.MAX_VALUE;\n    float theFloat = Float.MAX_VALUE;\n    for (int i = 0; i < NUM_DOCS; i++){\n      Document doc = new Document();\n      doc.add(new LegacyLongField(\"theLong\", theLong--, Field.Store.NO));\n      doc.add(new LegacyDoubleField(\"theDouble\", theDouble--, Field.Store.NO));\n      doc.add(new LegacyIntField(\"theInt\", theInt--, Field.Store.NO));\n      doc.add(new LegacyFloatField(\"theFloat\", theFloat--, Field.Store.NO));\n      if (0 == i % 3) {\n        wA.addDocument(doc);\n      } else {\n        wB.addDocument(doc);\n      }\n    }\n    wA.close();\n    wB.close();\n    DirectoryReader rA = DirectoryReader.open(dirA);\n    readerA = SlowCompositeReaderWrapper.wrap(rA);\n    readerAclone = SlowCompositeReaderWrapper.wrap(rA);\n    readerA = SlowCompositeReaderWrapper.wrap(DirectoryReader.open(dirA));\n    readerB = SlowCompositeReaderWrapper.wrap(DirectoryReader.open(dirB));\n    readerX = SlowCompositeReaderWrapper.wrap(new MultiReader(readerA, readerB));\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dirA = newDirectory();\n    dirB = newDirectory();\n\n    IndexWriter wA = new IndexWriter(dirA, newIndexWriterConfig(new MockAnalyzer(random())));\n    IndexWriter wB = new IndexWriter(dirB, newIndexWriterConfig(new MockAnalyzer(random())));\n\n    long theLong = Long.MAX_VALUE;\n    double theDouble = Double.MAX_VALUE;\n    int theInt = Integer.MAX_VALUE;\n    float theFloat = Float.MAX_VALUE;\n    for (int i = 0; i < NUM_DOCS; i++){\n      Document doc = new Document();\n      doc.add(new LegacyLongField(\"theLong\", theLong--, Field.Store.NO));\n      doc.add(new LegacyDoubleField(\"theDouble\", theDouble--, Field.Store.NO));\n      doc.add(new LegacyIntField(\"theInt\", theInt--, Field.Store.NO));\n      doc.add(new LegacyFloatField(\"theFloat\", theFloat--, Field.Store.NO));\n      if (0 == i % 3) {\n        wA.addDocument(doc);\n      } else {\n        wB.addDocument(doc);\n      }\n    }\n    wA.close();\n    wB.close();\n    DirectoryReader rA = DirectoryReader.open(dirA);\n    readerA = SlowCompositeReaderWrapper.wrap(rA);\n    readerAclone = SlowCompositeReaderWrapper.wrap(rA);\n    readerA = SlowCompositeReaderWrapper.wrap(DirectoryReader.open(dirA));\n    readerB = SlowCompositeReaderWrapper.wrap(DirectoryReader.open(dirB));\n    readerX = SlowCompositeReaderWrapper.wrap(new MultiReader(readerA, readerB));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":1,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/uninverting/TestFieldCacheSanityChecker#setUp().mjava","pathOld":"lucene/misc/src/test/org/apache/lucene/uninverting/TestFieldCacheSanityChecker#setUp().mjava","sourceNew":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dirA = newDirectory();\n    dirB = newDirectory();\n\n    IndexWriter wA = new IndexWriter(dirA, newIndexWriterConfig(new MockAnalyzer(random())));\n    IndexWriter wB = new IndexWriter(dirB, newIndexWriterConfig(new MockAnalyzer(random())));\n\n    long theLong = Long.MAX_VALUE;\n    double theDouble = Double.MAX_VALUE;\n    int theInt = Integer.MAX_VALUE;\n    float theFloat = Float.MAX_VALUE;\n    for (int i = 0; i < NUM_DOCS; i++){\n      Document doc = new Document();\n      doc.add(new LegacyLongField(\"theLong\", theLong--, Field.Store.NO));\n      doc.add(new LegacyDoubleField(\"theDouble\", theDouble--, Field.Store.NO));\n      doc.add(new LegacyIntField(\"theInt\", theInt--, Field.Store.NO));\n      doc.add(new LegacyFloatField(\"theFloat\", theFloat--, Field.Store.NO));\n      if (0 == i % 3) {\n        wA.addDocument(doc);\n      } else {\n        wB.addDocument(doc);\n      }\n    }\n    wA.close();\n    wB.close();\n    DirectoryReader rA = DirectoryReader.open(dirA);\n    readerA = SlowCompositeReaderWrapper.wrap(rA);\n    readerAclone = SlowCompositeReaderWrapper.wrap(rA);\n    readerA = SlowCompositeReaderWrapper.wrap(DirectoryReader.open(dirA));\n    readerB = SlowCompositeReaderWrapper.wrap(DirectoryReader.open(dirB));\n    readerX = SlowCompositeReaderWrapper.wrap(new MultiReader(readerA, readerB));\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dirA = newDirectory();\n    dirB = newDirectory();\n\n    IndexWriter wA = new IndexWriter(dirA, newIndexWriterConfig(new MockAnalyzer(random())));\n    IndexWriter wB = new IndexWriter(dirB, newIndexWriterConfig(new MockAnalyzer(random())));\n\n    long theLong = Long.MAX_VALUE;\n    double theDouble = Double.MAX_VALUE;\n    int theInt = Integer.MAX_VALUE;\n    float theFloat = Float.MAX_VALUE;\n    for (int i = 0; i < NUM_DOCS; i++){\n      Document doc = new Document();\n      doc.add(new LegacyLongField(\"theLong\", theLong--, Field.Store.NO));\n      doc.add(new LegacyDoubleField(\"theDouble\", theDouble--, Field.Store.NO));\n      doc.add(new LegacyIntField(\"theInt\", theInt--, Field.Store.NO));\n      doc.add(new LegacyFloatField(\"theFloat\", theFloat--, Field.Store.NO));\n      if (0 == i % 3) {\n        wA.addDocument(doc);\n      } else {\n        wB.addDocument(doc);\n      }\n    }\n    wA.close();\n    wB.close();\n    DirectoryReader rA = DirectoryReader.open(dirA);\n    readerA = SlowCompositeReaderWrapper.wrap(rA);\n    readerAclone = SlowCompositeReaderWrapper.wrap(rA);\n    readerA = SlowCompositeReaderWrapper.wrap(DirectoryReader.open(dirA));\n    readerB = SlowCompositeReaderWrapper.wrap(DirectoryReader.open(dirB));\n    readerX = SlowCompositeReaderWrapper.wrap(new MultiReader(readerA, readerB));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d211216c83f01894810543d1c107160a9ae3650b","date":1488289605,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/uninverting/TestFieldCacheSanityChecker#setUp().mjava","sourceNew":null,"sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    dirA = newDirectory();\n    dirB = newDirectory();\n\n    IndexWriter wA = new IndexWriter(dirA, newIndexWriterConfig(new MockAnalyzer(random())));\n    IndexWriter wB = new IndexWriter(dirB, newIndexWriterConfig(new MockAnalyzer(random())));\n\n    long theLong = Long.MAX_VALUE;\n    double theDouble = Double.MAX_VALUE;\n    int theInt = Integer.MAX_VALUE;\n    float theFloat = Float.MAX_VALUE;\n    for (int i = 0; i < NUM_DOCS; i++){\n      Document doc = new Document();\n      doc.add(new LegacyLongField(\"theLong\", theLong--, Field.Store.NO));\n      doc.add(new LegacyDoubleField(\"theDouble\", theDouble--, Field.Store.NO));\n      doc.add(new LegacyIntField(\"theInt\", theInt--, Field.Store.NO));\n      doc.add(new LegacyFloatField(\"theFloat\", theFloat--, Field.Store.NO));\n      if (0 == i % 3) {\n        wA.addDocument(doc);\n      } else {\n        wB.addDocument(doc);\n      }\n    }\n    wA.close();\n    wB.close();\n    DirectoryReader rA = DirectoryReader.open(dirA);\n    readerA = SlowCompositeReaderWrapper.wrap(rA);\n    readerAclone = SlowCompositeReaderWrapper.wrap(rA);\n    readerA = SlowCompositeReaderWrapper.wrap(DirectoryReader.open(dirA));\n    readerB = SlowCompositeReaderWrapper.wrap(DirectoryReader.open(dirB));\n    readerX = SlowCompositeReaderWrapper.wrap(new MultiReader(readerA, readerB));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a076c3c721f685b7559308fdc2cd72d91bba67e5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"0e121d43b5a10f2df530f406f935102656e9c4e8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a076c3c721f685b7559308fdc2cd72d91bba67e5"],"d211216c83f01894810543d1c107160a9ae3650b":["0e121d43b5a10f2df530f406f935102656e9c4e8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"83870855d82aba6819217abeff5a40779dbb28b4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0e121d43b5a10f2df530f406f935102656e9c4e8"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0e121d43b5a10f2df530f406f935102656e9c4e8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d211216c83f01894810543d1c107160a9ae3650b"]},"commit2Childs":{"a076c3c721f685b7559308fdc2cd72d91bba67e5":["0e121d43b5a10f2df530f406f935102656e9c4e8"],"0e121d43b5a10f2df530f406f935102656e9c4e8":["d211216c83f01894810543d1c107160a9ae3650b","83870855d82aba6819217abeff5a40779dbb28b4","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a076c3c721f685b7559308fdc2cd72d91bba67e5","0e121d43b5a10f2df530f406f935102656e9c4e8","83870855d82aba6819217abeff5a40779dbb28b4","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"d211216c83f01894810543d1c107160a9ae3650b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"83870855d82aba6819217abeff5a40779dbb28b4":[],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["83870855d82aba6819217abeff5a40779dbb28b4","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}