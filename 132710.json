{"path":"lucene/codecs/src/java/org/apache/lucene/codecs/sep/TempSepPostingsReader.SepDocsAndPositionsEnum#nextPosition().mjava","commits":[{"id":"fd65164c607d597fe7bb977735aa1ddfff22ed36","date":1377140532,"type":0,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/sep/TempSepPostingsReader.SepDocsAndPositionsEnum#nextPosition().mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public int nextPosition() throws IOException {\n      if (posSeekPending) {\n        posIndex.seek(posReader);\n        payloadIn.seek(payloadFP);\n        posSeekPending = false;\n      }\n\n      // scan over any docs that were iterated without their\n      // positions\n      while (pendingPosCount > freq) {\n        final int code = posReader.next();\n        if (storePayloads && (code & 1) != 0) {\n          // Payload length has changed\n          payloadLength = posReader.next();\n          assert payloadLength >= 0;\n        }\n        pendingPosCount--;\n        position = 0;\n        pendingPayloadBytes += payloadLength;\n      }\n\n      final int code = posReader.next();\n\n      if (storePayloads) {\n        if ((code & 1) != 0) {\n          // Payload length has changed\n          payloadLength = posReader.next();\n          assert payloadLength >= 0;\n        }\n        position += code >>> 1;\n        pendingPayloadBytes += payloadLength;\n        payloadPending = payloadLength > 0;\n      } else {\n        position += code;\n      }\n    \n      pendingPosCount--;\n      assert pendingPosCount >= 0;\n      return position;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e6904bcc97d8afa27bd72ee29ac01e525e327ad4","date":1377958787,"type":4,"author":"Han Jiang","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/sep/TempSepPostingsReader.SepDocsAndPositionsEnum#nextPosition().mjava","sourceNew":null,"sourceOld":"    @Override\n    public int nextPosition() throws IOException {\n      if (posSeekPending) {\n        posIndex.seek(posReader);\n        payloadIn.seek(payloadFP);\n        posSeekPending = false;\n      }\n\n      // scan over any docs that were iterated without their\n      // positions\n      while (pendingPosCount > freq) {\n        final int code = posReader.next();\n        if (storePayloads && (code & 1) != 0) {\n          // Payload length has changed\n          payloadLength = posReader.next();\n          assert payloadLength >= 0;\n        }\n        pendingPosCount--;\n        position = 0;\n        pendingPayloadBytes += payloadLength;\n      }\n\n      final int code = posReader.next();\n\n      if (storePayloads) {\n        if ((code & 1) != 0) {\n          // Payload length has changed\n          payloadLength = posReader.next();\n          assert payloadLength >= 0;\n        }\n        position += code >>> 1;\n        pendingPayloadBytes += payloadLength;\n        payloadPending = payloadLength > 0;\n      } else {\n        position += code;\n      }\n    \n      pendingPosCount--;\n      assert pendingPosCount >= 0;\n      return position;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"fd65164c607d597fe7bb977735aa1ddfff22ed36":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e6904bcc97d8afa27bd72ee29ac01e525e327ad4":["fd65164c607d597fe7bb977735aa1ddfff22ed36"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["fd65164c607d597fe7bb977735aa1ddfff22ed36","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"fd65164c607d597fe7bb977735aa1ddfff22ed36":["e6904bcc97d8afa27bd72ee29ac01e525e327ad4"],"e6904bcc97d8afa27bd72ee29ac01e525e327ad4":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e6904bcc97d8afa27bd72ee29ac01e525e327ad4","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}