{"path":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkey#ChaosMonkey(ZkTestServer,ZkStateReader,String,Map[String,List[CloudJettyRunner]],Map[String,List[SolrServer]],Map[String,SolrServer],Map[String,CloudJettyRunner]).mjava","commits":[{"id":"c0c46c486d300cbb600e170f5b68cd8e42e94ea0","date":1342363102,"type":1,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkey#ChaosMonkey(ZkTestServer,ZkStateReader,String,Map[String,List[CloudJettyRunner]],Map[String,List[SolrServer]],Map[String,SolrServer],Map[String,CloudJettyRunner]).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkey#ChaosMonkey(ZkTestServer,ZkStateReader,String,Map[String,List[CloudJettyRunner]],Map[String,List[SolrServer]],Map[String,SolrServer],Map[String,CloudJettyRunner],Random).mjava","sourceNew":"  public ChaosMonkey(ZkTestServer zkServer, ZkStateReader zkStateReader,\n      String collection, Map<String,List<CloudJettyRunner>> shardToJetty,\n      Map<String,List<SolrServer>> shardToClient,\n      Map<String,SolrServer> shardToLeaderClient,\n      Map<String,CloudJettyRunner> shardToLeaderJetty) {\n    this.shardToJetty = shardToJetty;\n    this.shardToClient = shardToClient;\n    this.shardToLeaderClient = shardToLeaderClient;\n    this.shardToLeaderJetty = shardToLeaderJetty;\n    this.zkServer = zkServer;\n    this.zkStateReader = zkStateReader;\n    this.collection = collection;\n    Random random = LuceneTestCase.random();\n    expireSessions = random.nextBoolean();\n    causeConnectionLoss = random.nextBoolean();\n  }\n\n","sourceOld":"  public ChaosMonkey(ZkTestServer zkServer, ZkStateReader zkStateReader,\n      String collection, Map<String,List<CloudJettyRunner>> shardToJetty,\n      Map<String,List<SolrServer>> shardToClient,\n      Map<String,SolrServer> shardToLeaderClient,\n      Map<String,CloudJettyRunner> shardToLeaderJetty, Random random) {\n    this.shardToJetty = shardToJetty;\n    this.shardToClient = shardToClient;\n    this.shardToLeaderClient = shardToLeaderClient;\n    this.shardToLeaderJetty = shardToLeaderJetty;\n    this.zkServer = zkServer;\n    this.zkStateReader = zkStateReader;\n    this.collection = collection;\n    this.random = random;\n    \n    expireSessions = random.nextBoolean();\n    causeConnectionLoss = random.nextBoolean();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkey#ChaosMonkey(ZkTestServer,ZkStateReader,String,Map[String,List[CloudJettyRunner]],Map[String,List[SolrServer]],Map[String,SolrServer],Map[String,CloudJettyRunner]).mjava","pathOld":"/dev/null","sourceNew":"  public ChaosMonkey(ZkTestServer zkServer, ZkStateReader zkStateReader,\n      String collection, Map<String,List<CloudJettyRunner>> shardToJetty,\n      Map<String,List<SolrServer>> shardToClient,\n      Map<String,SolrServer> shardToLeaderClient,\n      Map<String,CloudJettyRunner> shardToLeaderJetty) {\n    this.shardToJetty = shardToJetty;\n    this.shardToClient = shardToClient;\n    this.shardToLeaderClient = shardToLeaderClient;\n    this.shardToLeaderJetty = shardToLeaderJetty;\n    this.zkServer = zkServer;\n    this.zkStateReader = zkStateReader;\n    this.collection = collection;\n    Random random = LuceneTestCase.random();\n    expireSessions = random.nextBoolean();\n    causeConnectionLoss = random.nextBoolean();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"933fa8f09adfcd1a858cd0fc7912e21ee993b7fc","date":1342989037,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkey#ChaosMonkey(ZkTestServer,ZkStateReader,String,Map[String,List[CloudJettyRunner]],Map[String,List[SolrServer]],Map[String,SolrServer],Map[String,CloudJettyRunner]).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkey#ChaosMonkey(ZkTestServer,ZkStateReader,String,Map[String,List[CloudJettyRunner]],Map[String,List[SolrServer]],Map[String,SolrServer],Map[String,CloudJettyRunner]).mjava","sourceNew":"  public ChaosMonkey(ZkTestServer zkServer, ZkStateReader zkStateReader,\n      String collection, Map<String,List<CloudJettyRunner>> shardToJetty,\n      Map<String,List<SolrServer>> shardToClient,\n      Map<String,SolrServer> shardToLeaderClient,\n      Map<String,CloudJettyRunner> shardToLeaderJetty) {\n    this.shardToJetty = shardToJetty;\n    this.shardToClient = shardToClient;\n    this.shardToLeaderClient = shardToLeaderClient;\n    this.shardToLeaderJetty = shardToLeaderJetty;\n    this.zkServer = zkServer;\n    this.zkStateReader = zkStateReader;\n    this.collection = collection;\n    Random random = LuceneTestCase.random();\n    expireSessions = random.nextBoolean();\n    causeConnectionLoss = random.nextBoolean();\n    monkeyLog(\"init - expire sessions:\" + expireSessions\n        + \" cause connection loss:\" + causeConnectionLoss);\n  }\n\n","sourceOld":"  public ChaosMonkey(ZkTestServer zkServer, ZkStateReader zkStateReader,\n      String collection, Map<String,List<CloudJettyRunner>> shardToJetty,\n      Map<String,List<SolrServer>> shardToClient,\n      Map<String,SolrServer> shardToLeaderClient,\n      Map<String,CloudJettyRunner> shardToLeaderJetty) {\n    this.shardToJetty = shardToJetty;\n    this.shardToClient = shardToClient;\n    this.shardToLeaderClient = shardToLeaderClient;\n    this.shardToLeaderJetty = shardToLeaderJetty;\n    this.zkServer = zkServer;\n    this.zkStateReader = zkStateReader;\n    this.collection = collection;\n    Random random = LuceneTestCase.random();\n    expireSessions = random.nextBoolean();\n    causeConnectionLoss = random.nextBoolean();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4b51f65902cc2d20ddeb7a5b949aaddf990f31a7","date":1343059585,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkey#ChaosMonkey(ZkTestServer,ZkStateReader,String,Map[String,List[CloudJettyRunner]],Map[String,List[SolrServer]],Map[String,SolrServer],Map[String,CloudJettyRunner]).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkey#ChaosMonkey(ZkTestServer,ZkStateReader,String,Map[String,List[CloudJettyRunner]],Map[String,List[SolrServer]],Map[String,SolrServer],Map[String,CloudJettyRunner]).mjava","sourceNew":"  public ChaosMonkey(ZkTestServer zkServer, ZkStateReader zkStateReader,\n      String collection, Map<String,List<CloudJettyRunner>> shardToJetty,\n      Map<String,List<SolrServer>> shardToClient,\n      Map<String,SolrServer> shardToLeaderClient,\n      Map<String,CloudJettyRunner> shardToLeaderJetty) {\n    this.shardToJetty = shardToJetty;\n    this.shardToClient = shardToClient;\n    this.shardToLeaderClient = shardToLeaderClient;\n    this.shardToLeaderJetty = shardToLeaderJetty;\n    this.zkServer = zkServer;\n    this.zkStateReader = zkStateReader;\n    this.collection = collection;\n    Random random = LuceneTestCase.random();\n    expireSessions = random.nextBoolean();\n    causeConnectionLoss = random.nextBoolean();\n    monkeyLog(\"init - expire sessions:\" + expireSessions\n        + \" cause connection loss:\" + causeConnectionLoss);\n  }\n\n","sourceOld":"  public ChaosMonkey(ZkTestServer zkServer, ZkStateReader zkStateReader,\n      String collection, Map<String,List<CloudJettyRunner>> shardToJetty,\n      Map<String,List<SolrServer>> shardToClient,\n      Map<String,SolrServer> shardToLeaderClient,\n      Map<String,CloudJettyRunner> shardToLeaderJetty) {\n    this.shardToJetty = shardToJetty;\n    this.shardToClient = shardToClient;\n    this.shardToLeaderClient = shardToLeaderClient;\n    this.shardToLeaderJetty = shardToLeaderJetty;\n    this.zkServer = zkServer;\n    this.zkStateReader = zkStateReader;\n    this.collection = collection;\n    Random random = LuceneTestCase.random();\n    expireSessions = random.nextBoolean();\n    causeConnectionLoss = random.nextBoolean();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6ef6348b84bf0f8a649826b69a70ac815ff560e2","date":1343106054,"type":5,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkey#ChaosMonkey(ZkTestServer,ZkStateReader,String,Map[String,List[CloudJettyRunner]],Map[String,List[SolrServer]],Map[String,CloudJettyRunner]).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkey#ChaosMonkey(ZkTestServer,ZkStateReader,String,Map[String,List[CloudJettyRunner]],Map[String,List[SolrServer]],Map[String,SolrServer],Map[String,CloudJettyRunner]).mjava","sourceNew":"  public ChaosMonkey(ZkTestServer zkServer, ZkStateReader zkStateReader,\n      String collection, Map<String,List<CloudJettyRunner>> shardToJetty,\n      Map<String,List<SolrServer>> shardToClient,\n      Map<String,CloudJettyRunner> shardToLeaderJetty) {\n    this.shardToJetty = shardToJetty;\n    this.shardToClient = shardToClient;\n    this.shardToLeaderJetty = shardToLeaderJetty;\n    this.zkServer = zkServer;\n    this.zkStateReader = zkStateReader;\n    this.collection = collection;\n    Random random = LuceneTestCase.random();\n    expireSessions = random.nextBoolean();\n    causeConnectionLoss = random.nextBoolean();\n    monkeyLog(\"init - expire sessions:\" + expireSessions\n        + \" cause connection loss:\" + causeConnectionLoss);\n  }\n\n","sourceOld":"  public ChaosMonkey(ZkTestServer zkServer, ZkStateReader zkStateReader,\n      String collection, Map<String,List<CloudJettyRunner>> shardToJetty,\n      Map<String,List<SolrServer>> shardToClient,\n      Map<String,SolrServer> shardToLeaderClient,\n      Map<String,CloudJettyRunner> shardToLeaderJetty) {\n    this.shardToJetty = shardToJetty;\n    this.shardToClient = shardToClient;\n    this.shardToLeaderClient = shardToLeaderClient;\n    this.shardToLeaderJetty = shardToLeaderJetty;\n    this.zkServer = zkServer;\n    this.zkStateReader = zkStateReader;\n    this.collection = collection;\n    Random random = LuceneTestCase.random();\n    expireSessions = random.nextBoolean();\n    causeConnectionLoss = random.nextBoolean();\n    monkeyLog(\"init - expire sessions:\" + expireSessions\n        + \" cause connection loss:\" + causeConnectionLoss);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"fe9077a1ed75bdcdcc7dfff6525f73941c8cf30b","date":1343203827,"type":5,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkey#ChaosMonkey(ZkTestServer,ZkStateReader,String,Map[String,List[CloudJettyRunner]],Map[String,CloudJettyRunner]).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkey#ChaosMonkey(ZkTestServer,ZkStateReader,String,Map[String,List[CloudJettyRunner]],Map[String,List[SolrServer]],Map[String,SolrServer],Map[String,CloudJettyRunner]).mjava","sourceNew":"  public ChaosMonkey(ZkTestServer zkServer, ZkStateReader zkStateReader,\n      String collection, Map<String,List<CloudJettyRunner>> shardToJetty,\n      Map<String,CloudJettyRunner> shardToLeaderJetty) {\n    this.shardToJetty = shardToJetty;\n    this.shardToLeaderJetty = shardToLeaderJetty;\n    this.zkServer = zkServer;\n    this.zkStateReader = zkStateReader;\n    this.collection = collection;\n    Random random = LuceneTestCase.random();\n    expireSessions = random.nextBoolean();\n    causeConnectionLoss = random.nextBoolean();\n    monkeyLog(\"init - expire sessions:\" + expireSessions\n        + \" cause connection loss:\" + causeConnectionLoss);\n  }\n\n","sourceOld":"  public ChaosMonkey(ZkTestServer zkServer, ZkStateReader zkStateReader,\n      String collection, Map<String,List<CloudJettyRunner>> shardToJetty,\n      Map<String,List<SolrServer>> shardToClient,\n      Map<String,SolrServer> shardToLeaderClient,\n      Map<String,CloudJettyRunner> shardToLeaderJetty) {\n    this.shardToJetty = shardToJetty;\n    this.shardToClient = shardToClient;\n    this.shardToLeaderClient = shardToLeaderClient;\n    this.shardToLeaderJetty = shardToLeaderJetty;\n    this.zkServer = zkServer;\n    this.zkStateReader = zkStateReader;\n    this.collection = collection;\n    Random random = LuceneTestCase.random();\n    expireSessions = random.nextBoolean();\n    causeConnectionLoss = random.nextBoolean();\n    monkeyLog(\"init - expire sessions:\" + expireSessions\n        + \" cause connection loss:\" + causeConnectionLoss);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","date":1343768312,"type":4,"author":"Michael McCandless","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/cloud/ChaosMonkey#ChaosMonkey(ZkTestServer,ZkStateReader,String,Map[String,List[CloudJettyRunner]],Map[String,List[SolrServer]],Map[String,SolrServer],Map[String,CloudJettyRunner]).mjava","sourceNew":null,"sourceOld":"  public ChaosMonkey(ZkTestServer zkServer, ZkStateReader zkStateReader,\n      String collection, Map<String,List<CloudJettyRunner>> shardToJetty,\n      Map<String,List<SolrServer>> shardToClient,\n      Map<String,SolrServer> shardToLeaderClient,\n      Map<String,CloudJettyRunner> shardToLeaderJetty) {\n    this.shardToJetty = shardToJetty;\n    this.shardToClient = shardToClient;\n    this.shardToLeaderClient = shardToLeaderClient;\n    this.shardToLeaderJetty = shardToLeaderJetty;\n    this.zkServer = zkServer;\n    this.zkStateReader = zkStateReader;\n    this.collection = collection;\n    Random random = LuceneTestCase.random();\n    expireSessions = random.nextBoolean();\n    causeConnectionLoss = random.nextBoolean();\n    monkeyLog(\"init - expire sessions:\" + expireSessions\n        + \" cause connection loss:\" + causeConnectionLoss);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"933fa8f09adfcd1a858cd0fc7912e21ee993b7fc":["c0c46c486d300cbb600e170f5b68cd8e42e94ea0"],"c0c46c486d300cbb600e170f5b68cd8e42e94ea0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c0c46c486d300cbb600e170f5b68cd8e42e94ea0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":["4b51f65902cc2d20ddeb7a5b949aaddf990f31a7","6ef6348b84bf0f8a649826b69a70ac815ff560e2"],"fe9077a1ed75bdcdcc7dfff6525f73941c8cf30b":["933fa8f09adfcd1a858cd0fc7912e21ee993b7fc","6ef6348b84bf0f8a649826b69a70ac815ff560e2"],"4b51f65902cc2d20ddeb7a5b949aaddf990f31a7":["fe33227f6805edab2036cbb80645cc4e2d1fa424","933fa8f09adfcd1a858cd0fc7912e21ee993b7fc"],"6ef6348b84bf0f8a649826b69a70ac815ff560e2":["933fa8f09adfcd1a858cd0fc7912e21ee993b7fc"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6ef6348b84bf0f8a649826b69a70ac815ff560e2"]},"commit2Childs":{"933fa8f09adfcd1a858cd0fc7912e21ee993b7fc":["fe9077a1ed75bdcdcc7dfff6525f73941c8cf30b","4b51f65902cc2d20ddeb7a5b949aaddf990f31a7","6ef6348b84bf0f8a649826b69a70ac815ff560e2"],"c0c46c486d300cbb600e170f5b68cd8e42e94ea0":["933fa8f09adfcd1a858cd0fc7912e21ee993b7fc","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["4b51f65902cc2d20ddeb7a5b949aaddf990f31a7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c0c46c486d300cbb600e170f5b68cd8e42e94ea0","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":[],"fe9077a1ed75bdcdcc7dfff6525f73941c8cf30b":[],"4b51f65902cc2d20ddeb7a5b949aaddf990f31a7":["b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f"],"6ef6348b84bf0f8a649826b69a70ac815ff560e2":["b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","fe9077a1ed75bdcdcc7dfff6525f73941c8cf30b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","fe9077a1ed75bdcdcc7dfff6525f73941c8cf30b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}