{"path":"lucene/core/src/test/org/apache/lucene/search/TestSort#testEmptyIndex().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestSort#testEmptyIndex().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestSort#testEmptyIndex().mjava","sourceNew":"  // test sorts when there's nothing in the index\n  public void testEmptyIndex() throws Exception {\n    IndexSearcher empty = getEmptyIndex();\n\n    sort = new Sort();\n    assertMatches (empty, queryX, sort, \"\");\n\n    sort.setSort(SortField.FIELD_DOC);\n    assertMatches (empty, queryX, sort, \"\");\n\n    sort.setSort (new SortField (\"int\", SortField.Type.INT), SortField.FIELD_DOC );\n    assertMatches (empty, queryX, sort, \"\");\n    \n    sort.setSort (useDocValues(new SortField (\"int\", SortField.Type.INT)), SortField.FIELD_DOC );\n    assertMatches (empty, queryX, sort, \"\");\n\n    sort.setSort (new SortField (\"string\", SortField.Type.STRING, true), SortField.FIELD_DOC );\n    assertMatches (empty, queryX, sort, \"\");\n\n    sort.setSort (new SortField (\"float\", SortField.Type.FLOAT), new SortField (\"string\", SortField.Type.STRING) );\n    assertMatches (empty, queryX, sort, \"\");\n    \n    sort.setSort (useDocValues(new SortField (\"float\", SortField.Type.FLOAT)), new SortField (\"string\", SortField.Type.STRING) );\n    assertMatches (empty, queryX, sort, \"\");\n\n    sort.setSort (useDocValues(new SortField (\"string\", getDVStringSortType(), true)), SortField.FIELD_DOC );\n    assertMatches (empty, queryX, sort, \"\");\n\n    sort.setSort (useDocValues(new SortField (\"float\", SortField.Type.FLOAT)),\n                  useDocValues(new SortField (\"string\", getDVStringSortType())) );\n    assertMatches (empty, queryX, sort, \"\");\n    \n    sort.setSort (useDocValues(new SortField (\"float\", SortField.Type.FLOAT)), useDocValues(new SortField (\"string\", getDVStringSortType())) );\n    assertMatches (empty, queryX, sort, \"\");\n  }\n\n","sourceOld":"  // test sorts when there's nothing in the index\n  public void testEmptyIndex() throws Exception {\n    IndexSearcher empty = getEmptyIndex();\n\n    sort = new Sort();\n    assertMatches (empty, queryX, sort, \"\");\n\n    sort.setSort(SortField.FIELD_DOC);\n    assertMatches (empty, queryX, sort, \"\");\n\n    sort.setSort (new SortField (\"int\", SortField.Type.INT), SortField.FIELD_DOC );\n    assertMatches (empty, queryX, sort, \"\");\n    \n    sort.setSort (useDocValues(new SortField (\"int\", SortField.Type.INT)), SortField.FIELD_DOC );\n    assertMatches (empty, queryX, sort, \"\");\n\n    sort.setSort (new SortField (\"string\", SortField.Type.STRING, true), SortField.FIELD_DOC );\n    assertMatches (empty, queryX, sort, \"\");\n\n    sort.setSort (new SortField (\"float\", SortField.Type.FLOAT), new SortField (\"string\", SortField.Type.STRING) );\n    assertMatches (empty, queryX, sort, \"\");\n    \n    sort.setSort (useDocValues(new SortField (\"float\", SortField.Type.FLOAT)), new SortField (\"string\", SortField.Type.STRING) );\n    assertMatches (empty, queryX, sort, \"\");\n\n    sort.setSort (useDocValues(new SortField (\"string\", getDVStringSortType(), true)), SortField.FIELD_DOC );\n    assertMatches (empty, queryX, sort, \"\");\n\n    sort.setSort (useDocValues(new SortField (\"float\", SortField.Type.FLOAT)),\n                  useDocValues(new SortField (\"string\", getDVStringSortType())) );\n    assertMatches (empty, queryX, sort, \"\");\n    \n    sort.setSort (useDocValues(new SortField (\"float\", SortField.Type.FLOAT)), useDocValues(new SortField (\"string\", getDVStringSortType())) );\n    assertMatches (empty, queryX, sort, \"\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3e29774db46ad98ca4a8d7fcbfab633ebc01f358","date":1355170812,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestSort#testEmptyIndex().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestSort#testEmptyIndex().mjava","sourceNew":"  // test sorts when there's nothing in the index\n  public void testEmptyIndex() throws Exception {\n    IndexSearcher empty = getEmptyIndex();\n\n    sort = new Sort();\n    assertMatches(empty, queryX, sort, \"\");\n\n    sort.setSort(SortField.FIELD_DOC);\n    assertMatches(empty, queryX, sort, \"\");\n\n    sort.setSort(new SortField(\"int\", SortField.Type.INT), SortField.FIELD_DOC);\n    assertMatches(empty, queryX, sort, \"\");\n    \n    sort.setSort(new SortField(\"int_dv\", SortField.Type.INT), SortField.FIELD_DOC);\n    assertMatches(empty, queryX, sort, \"\");\n\n    sort.setSort(new SortField(\"string\", SortField.Type.STRING, true), SortField.FIELD_DOC);\n    assertMatches(empty, queryX, sort, \"\");\n\n    sort.setSort(new SortField(\"float\", SortField.Type.FLOAT), new SortField(\"string\", SortField.Type.STRING));\n    assertMatches(empty, queryX, sort, \"\");\n    \n    sort.setSort(new SortField(\"float_dv\", SortField.Type.FLOAT), new SortField(\"string\", SortField.Type.STRING));\n    assertMatches(empty, queryX, sort, \"\");\n\n    sort.setSort(new SortField(\"string_dv\", getDVStringSortType(), true), SortField.FIELD_DOC);\n    assertMatches(empty, queryX, sort, \"\");\n\n    sort.setSort(new SortField(\"float_dv\", SortField.Type.FLOAT),\n                  new SortField(\"string_dv\", getDVStringSortType()));\n    assertMatches(empty, queryX, sort, \"\");\n    \n    sort.setSort(new SortField(\"float_dv\", SortField.Type.FLOAT), new SortField(\"string_dv\", getDVStringSortType()));\n    assertMatches(empty, queryX, sort, \"\");\n  }\n\n","sourceOld":"  // test sorts when there's nothing in the index\n  public void testEmptyIndex() throws Exception {\n    IndexSearcher empty = getEmptyIndex();\n\n    sort = new Sort();\n    assertMatches (empty, queryX, sort, \"\");\n\n    sort.setSort(SortField.FIELD_DOC);\n    assertMatches (empty, queryX, sort, \"\");\n\n    sort.setSort (new SortField (\"int\", SortField.Type.INT), SortField.FIELD_DOC );\n    assertMatches (empty, queryX, sort, \"\");\n    \n    sort.setSort (useDocValues(new SortField (\"int\", SortField.Type.INT)), SortField.FIELD_DOC );\n    assertMatches (empty, queryX, sort, \"\");\n\n    sort.setSort (new SortField (\"string\", SortField.Type.STRING, true), SortField.FIELD_DOC );\n    assertMatches (empty, queryX, sort, \"\");\n\n    sort.setSort (new SortField (\"float\", SortField.Type.FLOAT), new SortField (\"string\", SortField.Type.STRING) );\n    assertMatches (empty, queryX, sort, \"\");\n    \n    sort.setSort (useDocValues(new SortField (\"float\", SortField.Type.FLOAT)), new SortField (\"string\", SortField.Type.STRING) );\n    assertMatches (empty, queryX, sort, \"\");\n\n    sort.setSort (useDocValues(new SortField (\"string\", getDVStringSortType(), true)), SortField.FIELD_DOC );\n    assertMatches (empty, queryX, sort, \"\");\n\n    sort.setSort (useDocValues(new SortField (\"float\", SortField.Type.FLOAT)),\n                  useDocValues(new SortField (\"string\", getDVStringSortType())) );\n    assertMatches (empty, queryX, sort, \"\");\n    \n    sort.setSort (useDocValues(new SortField (\"float\", SortField.Type.FLOAT)), useDocValues(new SortField (\"string\", getDVStringSortType())) );\n    assertMatches (empty, queryX, sort, \"\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"355622f052f4bec346a66a7433d813b0c5fb753a","date":1359122015,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestSort#testEmptyIndex().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestSort#testEmptyIndex().mjava","sourceNew":"  // test sorts when there's nothing in the index\n  public void testEmptyIndex() throws Exception {\n    IndexSearcher empty = getEmptyIndex();\n\n    sort = new Sort();\n    assertMatches(empty, queryX, sort, \"\");\n\n    sort.setSort(SortField.FIELD_DOC);\n    assertMatches(empty, queryX, sort, \"\");\n\n    sort.setSort(new SortField(\"int\", SortField.Type.INT), SortField.FIELD_DOC);\n    assertMatches(empty, queryX, sort, \"\");\n    \n    sort.setSort(new SortField(\"int_dv\", SortField.Type.INT), SortField.FIELD_DOC);\n    assertMatches(empty, queryX, sort, \"\");\n\n    sort.setSort(new SortField(\"string\", SortField.Type.STRING, true), SortField.FIELD_DOC);\n    assertMatches(empty, queryX, sort, \"\");\n\n    sort.setSort(new SortField(\"float\", SortField.Type.FLOAT), new SortField(\"string\", SortField.Type.STRING));\n    assertMatches(empty, queryX, sort, \"\");\n    \n    sort.setSort(new SortField(\"float_dv\", SortField.Type.FLOAT), new SortField(\"string\", SortField.Type.STRING));\n    assertMatches(empty, queryX, sort, \"\");\n\n    sort.setSort(new SortField(\"string_dv\", getDVStringSortType(false), true), SortField.FIELD_DOC);\n    assertMatches(empty, queryX, sort, \"\");\n\n    sort.setSort(new SortField(\"float_dv\", SortField.Type.FLOAT),\n                  new SortField(\"string_dv\", getDVStringSortType(false)));\n    assertMatches(empty, queryX, sort, \"\");\n    \n    sort.setSort(new SortField(\"float_dv\", SortField.Type.FLOAT), new SortField(\"string_dv\", getDVStringSortType(false)));\n    assertMatches(empty, queryX, sort, \"\");\n  }\n\n","sourceOld":"  // test sorts when there's nothing in the index\n  public void testEmptyIndex() throws Exception {\n    IndexSearcher empty = getEmptyIndex();\n\n    sort = new Sort();\n    assertMatches(empty, queryX, sort, \"\");\n\n    sort.setSort(SortField.FIELD_DOC);\n    assertMatches(empty, queryX, sort, \"\");\n\n    sort.setSort(new SortField(\"int\", SortField.Type.INT), SortField.FIELD_DOC);\n    assertMatches(empty, queryX, sort, \"\");\n    \n    sort.setSort(new SortField(\"int_dv\", SortField.Type.INT), SortField.FIELD_DOC);\n    assertMatches(empty, queryX, sort, \"\");\n\n    sort.setSort(new SortField(\"string\", SortField.Type.STRING, true), SortField.FIELD_DOC);\n    assertMatches(empty, queryX, sort, \"\");\n\n    sort.setSort(new SortField(\"float\", SortField.Type.FLOAT), new SortField(\"string\", SortField.Type.STRING));\n    assertMatches(empty, queryX, sort, \"\");\n    \n    sort.setSort(new SortField(\"float_dv\", SortField.Type.FLOAT), new SortField(\"string\", SortField.Type.STRING));\n    assertMatches(empty, queryX, sort, \"\");\n\n    sort.setSort(new SortField(\"string_dv\", getDVStringSortType(), true), SortField.FIELD_DOC);\n    assertMatches(empty, queryX, sort, \"\");\n\n    sort.setSort(new SortField(\"float_dv\", SortField.Type.FLOAT),\n                  new SortField(\"string_dv\", getDVStringSortType()));\n    assertMatches(empty, queryX, sort, \"\");\n    \n    sort.setSort(new SortField(\"float_dv\", SortField.Type.FLOAT), new SortField(\"string_dv\", getDVStringSortType()));\n    assertMatches(empty, queryX, sort, \"\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d4d69c535930b5cce125cff868d40f6373dc27d4","date":1360270101,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestSort#testEmptyIndex().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestSort#testEmptyIndex().mjava","sourceNew":"  // test sorts when there's nothing in the index\n  public void testEmptyIndex() throws Exception {\n    IndexSearcher empty = getEmptyIndex();\n\n    sort = new Sort();\n    assertMatches(empty, queryX, sort, \"\");\n\n    sort.setSort(SortField.FIELD_DOC);\n    assertMatches(empty, queryX, sort, \"\");\n\n    sort.setSort(new SortField(\"int\", SortField.Type.INT), SortField.FIELD_DOC);\n    assertMatches(empty, queryX, sort, \"\");\n    \n    sort.setSort(new SortField(\"int_dv\", SortField.Type.INT), SortField.FIELD_DOC);\n    assertMatches(empty, queryX, sort, \"\");\n\n    sort.setSort(new SortField(\"string\", SortField.Type.STRING, true), SortField.FIELD_DOC);\n    assertMatches(empty, queryX, sort, \"\");\n\n    sort.setSort(new SortField(\"float\", SortField.Type.FLOAT), new SortField(\"string\", SortField.Type.STRING));\n    assertMatches(empty, queryX, sort, \"\");\n    \n    sort.setSort(new SortField(\"float_dv\", SortField.Type.FLOAT), new SortField(\"string\", SortField.Type.STRING));\n    assertMatches(empty, queryX, sort, \"\");\n\n    sort.setSort(new SortField(\"string_dv\", getDVStringSortType(false), true), SortField.FIELD_DOC);\n    assertMatches(empty, queryX, sort, \"\");\n\n    sort.setSort(new SortField(\"float_dv\", SortField.Type.FLOAT),\n                  new SortField(\"string_dv\", getDVStringSortType(false)));\n    assertMatches(empty, queryX, sort, \"\");\n    \n    sort.setSort(new SortField(\"float_dv\", SortField.Type.FLOAT), new SortField(\"string_dv\", getDVStringSortType(false)));\n    assertMatches(empty, queryX, sort, \"\");\n  }\n\n","sourceOld":"  // test sorts when there's nothing in the index\n  public void testEmptyIndex() throws Exception {\n    IndexSearcher empty = getEmptyIndex();\n\n    sort = new Sort();\n    assertMatches (empty, queryX, sort, \"\");\n\n    sort.setSort(SortField.FIELD_DOC);\n    assertMatches (empty, queryX, sort, \"\");\n\n    sort.setSort (new SortField (\"int\", SortField.Type.INT), SortField.FIELD_DOC );\n    assertMatches (empty, queryX, sort, \"\");\n    \n    sort.setSort (useDocValues(new SortField (\"int\", SortField.Type.INT)), SortField.FIELD_DOC );\n    assertMatches (empty, queryX, sort, \"\");\n\n    sort.setSort (new SortField (\"string\", SortField.Type.STRING, true), SortField.FIELD_DOC );\n    assertMatches (empty, queryX, sort, \"\");\n\n    sort.setSort (new SortField (\"float\", SortField.Type.FLOAT), new SortField (\"string\", SortField.Type.STRING) );\n    assertMatches (empty, queryX, sort, \"\");\n    \n    sort.setSort (useDocValues(new SortField (\"float\", SortField.Type.FLOAT)), new SortField (\"string\", SortField.Type.STRING) );\n    assertMatches (empty, queryX, sort, \"\");\n\n    sort.setSort (useDocValues(new SortField (\"string\", getDVStringSortType(), true)), SortField.FIELD_DOC );\n    assertMatches (empty, queryX, sort, \"\");\n\n    sort.setSort (useDocValues(new SortField (\"float\", SortField.Type.FLOAT)),\n                  useDocValues(new SortField (\"string\", getDVStringSortType())) );\n    assertMatches (empty, queryX, sort, \"\");\n    \n    sort.setSort (useDocValues(new SortField (\"float\", SortField.Type.FLOAT)), useDocValues(new SortField (\"string\", getDVStringSortType())) );\n    assertMatches (empty, queryX, sort, \"\");\n  }\n\n","bugFix":["090a0320e4de4a3674376aef96b9701f47564f86","9235b9d4454a46c066cda47fed7ca0a34e614529","63bc3238545c6012bd44f5d294077997f236bc4e","28088b0a688977b79dec2cc9119cff2fb4aab7ee"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1e3b23ac13c39a0cfcb44f08ab7646e4af0ebccf","date":1360858385,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestSort#testEmptyIndex().mjava","sourceNew":null,"sourceOld":"  // test sorts when there's nothing in the index\n  public void testEmptyIndex() throws Exception {\n    IndexSearcher empty = getEmptyIndex();\n\n    sort = new Sort();\n    assertMatches(empty, queryX, sort, \"\");\n\n    sort.setSort(SortField.FIELD_DOC);\n    assertMatches(empty, queryX, sort, \"\");\n\n    sort.setSort(new SortField(\"int\", SortField.Type.INT), SortField.FIELD_DOC);\n    assertMatches(empty, queryX, sort, \"\");\n    \n    sort.setSort(new SortField(\"int_dv\", SortField.Type.INT), SortField.FIELD_DOC);\n    assertMatches(empty, queryX, sort, \"\");\n\n    sort.setSort(new SortField(\"string\", SortField.Type.STRING, true), SortField.FIELD_DOC);\n    assertMatches(empty, queryX, sort, \"\");\n\n    sort.setSort(new SortField(\"float\", SortField.Type.FLOAT), new SortField(\"string\", SortField.Type.STRING));\n    assertMatches(empty, queryX, sort, \"\");\n    \n    sort.setSort(new SortField(\"float_dv\", SortField.Type.FLOAT), new SortField(\"string\", SortField.Type.STRING));\n    assertMatches(empty, queryX, sort, \"\");\n\n    sort.setSort(new SortField(\"string_dv\", getDVStringSortType(false), true), SortField.FIELD_DOC);\n    assertMatches(empty, queryX, sort, \"\");\n\n    sort.setSort(new SortField(\"float_dv\", SortField.Type.FLOAT),\n                  new SortField(\"string_dv\", getDVStringSortType(false)));\n    assertMatches(empty, queryX, sort, \"\");\n    \n    sort.setSort(new SortField(\"float_dv\", SortField.Type.FLOAT), new SortField(\"string_dv\", getDVStringSortType(false)));\n    assertMatches(empty, queryX, sort, \"\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5f183729ece15402db94402d482f29ebac4f7f54","date":1360963151,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestSort#testEmptyIndex().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestSort2#testEmptyIndex().mjava","sourceNew":"  /** test sorts when there's nothing in the index */\n  public void testEmptyIndex() throws Exception {\n    IndexSearcher empty = new IndexSearcher(new MultiReader());\n    Query query = new TermQuery(new Term(\"contents\", \"foo\"));\n  \n    Sort sort = new Sort();\n    TopDocs td = empty.search(query, null, 10, sort, true, true);\n    assertEquals(0, td.totalHits);\n\n    sort.setSort(SortField.FIELD_DOC);\n    td = empty.search(query, null, 10, sort, true, true);\n    assertEquals(0, td.totalHits);\n\n    sort.setSort(new SortField(\"int\", SortField.Type.INT), SortField.FIELD_DOC);\n    td = empty.search(query, null, 10, sort, true, true);\n    assertEquals(0, td.totalHits);\n    \n    sort.setSort(new SortField(\"string\", SortField.Type.STRING, true), SortField.FIELD_DOC);\n    td = empty.search(query, null, 10, sort, true, true);\n    assertEquals(0, td.totalHits);\n    \n    sort.setSort(new SortField(\"string_val\", SortField.Type.STRING_VAL, true), SortField.FIELD_DOC);\n    td = empty.search(query, null, 10, sort, true, true);\n    assertEquals(0, td.totalHits);\n\n    sort.setSort(new SortField(\"float\", SortField.Type.FLOAT), new SortField(\"string\", SortField.Type.STRING));\n    td = empty.search(query, null, 10, sort, true, true);\n    assertEquals(0, td.totalHits);\n  }\n\n","sourceOld":"  /** test sorts when there's nothing in the index */\n  public void testEmptyIndex() throws Exception {\n    IndexSearcher empty = new IndexSearcher(new MultiReader());\n    Query query = new TermQuery(new Term(\"contents\", \"foo\"));\n  \n    Sort sort = new Sort();\n    TopDocs td = empty.search(query, null, 10, sort, true, true);\n    assertEquals(0, td.totalHits);\n\n    sort.setSort(SortField.FIELD_DOC);\n    td = empty.search(query, null, 10, sort, true, true);\n    assertEquals(0, td.totalHits);\n\n    sort.setSort(new SortField(\"int\", SortField.Type.INT), SortField.FIELD_DOC);\n    td = empty.search(query, null, 10, sort, true, true);\n    assertEquals(0, td.totalHits);\n    \n    sort.setSort(new SortField(\"string\", SortField.Type.STRING, true), SortField.FIELD_DOC);\n    td = empty.search(query, null, 10, sort, true, true);\n    assertEquals(0, td.totalHits);\n    \n    sort.setSort(new SortField(\"string_val\", SortField.Type.STRING_VAL, true), SortField.FIELD_DOC);\n    td = empty.search(query, null, 10, sort, true, true);\n    assertEquals(0, td.totalHits);\n\n    sort.setSort(new SortField(\"float\", SortField.Type.FLOAT), new SortField(\"string\", SortField.Type.STRING));\n    td = empty.search(query, null, 10, sort, true, true);\n    assertEquals(0, td.totalHits);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3b41f996b22bd5518650f897d050088ff808ec03","date":1360969107,"type":4,"author":"Robert Muir","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestSort#testEmptyIndex().mjava","sourceNew":null,"sourceOld":"  // test sorts when there's nothing in the index\n  public void testEmptyIndex() throws Exception {\n    IndexSearcher empty = getEmptyIndex();\n\n    sort = new Sort();\n    assertMatches(empty, queryX, sort, \"\");\n\n    sort.setSort(SortField.FIELD_DOC);\n    assertMatches(empty, queryX, sort, \"\");\n\n    sort.setSort(new SortField(\"int\", SortField.Type.INT), SortField.FIELD_DOC);\n    assertMatches(empty, queryX, sort, \"\");\n    \n    sort.setSort(new SortField(\"int_dv\", SortField.Type.INT), SortField.FIELD_DOC);\n    assertMatches(empty, queryX, sort, \"\");\n\n    sort.setSort(new SortField(\"string\", SortField.Type.STRING, true), SortField.FIELD_DOC);\n    assertMatches(empty, queryX, sort, \"\");\n\n    sort.setSort(new SortField(\"float\", SortField.Type.FLOAT), new SortField(\"string\", SortField.Type.STRING));\n    assertMatches(empty, queryX, sort, \"\");\n    \n    sort.setSort(new SortField(\"float_dv\", SortField.Type.FLOAT), new SortField(\"string\", SortField.Type.STRING));\n    assertMatches(empty, queryX, sort, \"\");\n\n    sort.setSort(new SortField(\"string_dv\", getDVStringSortType(false), true), SortField.FIELD_DOC);\n    assertMatches(empty, queryX, sort, \"\");\n\n    sort.setSort(new SortField(\"float_dv\", SortField.Type.FLOAT),\n                  new SortField(\"string_dv\", getDVStringSortType(false)));\n    assertMatches(empty, queryX, sort, \"\");\n    \n    sort.setSort(new SortField(\"float_dv\", SortField.Type.FLOAT), new SortField(\"string_dv\", getDVStringSortType(false)));\n    assertMatches(empty, queryX, sort, \"\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"95303ff3749680c743b9425f9cf99e6e4065e8a8","date":1361061922,"type":1,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestSort#testEmptyIndex().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestSort2#testEmptyIndex().mjava","sourceNew":"  /** test sorts when there's nothing in the index */\n  public void testEmptyIndex() throws Exception {\n    IndexSearcher empty = new IndexSearcher(new MultiReader());\n    Query query = new TermQuery(new Term(\"contents\", \"foo\"));\n  \n    Sort sort = new Sort();\n    TopDocs td = empty.search(query, null, 10, sort, true, true);\n    assertEquals(0, td.totalHits);\n\n    sort.setSort(SortField.FIELD_DOC);\n    td = empty.search(query, null, 10, sort, true, true);\n    assertEquals(0, td.totalHits);\n\n    sort.setSort(new SortField(\"int\", SortField.Type.INT), SortField.FIELD_DOC);\n    td = empty.search(query, null, 10, sort, true, true);\n    assertEquals(0, td.totalHits);\n    \n    sort.setSort(new SortField(\"string\", SortField.Type.STRING, true), SortField.FIELD_DOC);\n    td = empty.search(query, null, 10, sort, true, true);\n    assertEquals(0, td.totalHits);\n    \n    sort.setSort(new SortField(\"string_val\", SortField.Type.STRING_VAL, true), SortField.FIELD_DOC);\n    td = empty.search(query, null, 10, sort, true, true);\n    assertEquals(0, td.totalHits);\n\n    sort.setSort(new SortField(\"float\", SortField.Type.FLOAT), new SortField(\"string\", SortField.Type.STRING));\n    td = empty.search(query, null, 10, sort, true, true);\n    assertEquals(0, td.totalHits);\n  }\n\n","sourceOld":"  /** test sorts when there's nothing in the index */\n  public void testEmptyIndex() throws Exception {\n    IndexSearcher empty = new IndexSearcher(new MultiReader());\n    Query query = new TermQuery(new Term(\"contents\", \"foo\"));\n  \n    Sort sort = new Sort();\n    TopDocs td = empty.search(query, null, 10, sort, true, true);\n    assertEquals(0, td.totalHits);\n\n    sort.setSort(SortField.FIELD_DOC);\n    td = empty.search(query, null, 10, sort, true, true);\n    assertEquals(0, td.totalHits);\n\n    sort.setSort(new SortField(\"int\", SortField.Type.INT), SortField.FIELD_DOC);\n    td = empty.search(query, null, 10, sort, true, true);\n    assertEquals(0, td.totalHits);\n    \n    sort.setSort(new SortField(\"string\", SortField.Type.STRING, true), SortField.FIELD_DOC);\n    td = empty.search(query, null, 10, sort, true, true);\n    assertEquals(0, td.totalHits);\n    \n    sort.setSort(new SortField(\"string_val\", SortField.Type.STRING_VAL, true), SortField.FIELD_DOC);\n    td = empty.search(query, null, 10, sort, true, true);\n    assertEquals(0, td.totalHits);\n\n    sort.setSort(new SortField(\"float\", SortField.Type.FLOAT), new SortField(\"string\", SortField.Type.STRING));\n    td = empty.search(query, null, 10, sort, true, true);\n    assertEquals(0, td.totalHits);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3b0e8c39ca08b5a02de6edcd33d6f3b90b865173","date":1365631993,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestSort#testEmptyIndex().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestSort#testEmptyIndex().mjava","sourceNew":"  /** test sorts when there's nothing in the index */\n  public void testEmptyIndex() throws Exception {\n    IndexSearcher empty = newSearcher(new MultiReader());\n    Query query = new TermQuery(new Term(\"contents\", \"foo\"));\n  \n    Sort sort = new Sort();\n    TopDocs td = empty.search(query, null, 10, sort, true, true);\n    assertEquals(0, td.totalHits);\n\n    sort.setSort(SortField.FIELD_DOC);\n    td = empty.search(query, null, 10, sort, true, true);\n    assertEquals(0, td.totalHits);\n\n    sort.setSort(new SortField(\"int\", SortField.Type.INT), SortField.FIELD_DOC);\n    td = empty.search(query, null, 10, sort, true, true);\n    assertEquals(0, td.totalHits);\n    \n    sort.setSort(new SortField(\"string\", SortField.Type.STRING, true), SortField.FIELD_DOC);\n    td = empty.search(query, null, 10, sort, true, true);\n    assertEquals(0, td.totalHits);\n    \n    sort.setSort(new SortField(\"string_val\", SortField.Type.STRING_VAL, true), SortField.FIELD_DOC);\n    td = empty.search(query, null, 10, sort, true, true);\n    assertEquals(0, td.totalHits);\n\n    sort.setSort(new SortField(\"float\", SortField.Type.FLOAT), new SortField(\"string\", SortField.Type.STRING));\n    td = empty.search(query, null, 10, sort, true, true);\n    assertEquals(0, td.totalHits);\n  }\n\n","sourceOld":"  /** test sorts when there's nothing in the index */\n  public void testEmptyIndex() throws Exception {\n    IndexSearcher empty = new IndexSearcher(new MultiReader());\n    Query query = new TermQuery(new Term(\"contents\", \"foo\"));\n  \n    Sort sort = new Sort();\n    TopDocs td = empty.search(query, null, 10, sort, true, true);\n    assertEquals(0, td.totalHits);\n\n    sort.setSort(SortField.FIELD_DOC);\n    td = empty.search(query, null, 10, sort, true, true);\n    assertEquals(0, td.totalHits);\n\n    sort.setSort(new SortField(\"int\", SortField.Type.INT), SortField.FIELD_DOC);\n    td = empty.search(query, null, 10, sort, true, true);\n    assertEquals(0, td.totalHits);\n    \n    sort.setSort(new SortField(\"string\", SortField.Type.STRING, true), SortField.FIELD_DOC);\n    td = empty.search(query, null, 10, sort, true, true);\n    assertEquals(0, td.totalHits);\n    \n    sort.setSort(new SortField(\"string_val\", SortField.Type.STRING_VAL, true), SortField.FIELD_DOC);\n    td = empty.search(query, null, 10, sort, true, true);\n    assertEquals(0, td.totalHits);\n\n    sort.setSort(new SortField(\"float\", SortField.Type.FLOAT), new SortField(\"string\", SortField.Type.STRING));\n    td = empty.search(query, null, 10, sort, true, true);\n    assertEquals(0, td.totalHits);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c","date":1399816179,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/misc/src/test/org/apache/lucene/uninverting/TestFieldCacheSort#testEmptyIndex().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestSort#testEmptyIndex().mjava","sourceNew":"  /** test sorts when there's nothing in the index */\n  public void testEmptyIndex() throws Exception {\n    IndexSearcher empty = newSearcher(new MultiReader());\n    Query query = new TermQuery(new Term(\"contents\", \"foo\"));\n  \n    Sort sort = new Sort();\n    TopDocs td = empty.search(query, null, 10, sort, true, true);\n    assertEquals(0, td.totalHits);\n\n    sort.setSort(SortField.FIELD_DOC);\n    td = empty.search(query, null, 10, sort, true, true);\n    assertEquals(0, td.totalHits);\n\n    sort.setSort(new SortField(\"int\", SortField.Type.INT), SortField.FIELD_DOC);\n    td = empty.search(query, null, 10, sort, true, true);\n    assertEquals(0, td.totalHits);\n    \n    sort.setSort(new SortField(\"string\", SortField.Type.STRING, true), SortField.FIELD_DOC);\n    td = empty.search(query, null, 10, sort, true, true);\n    assertEquals(0, td.totalHits);\n    \n    sort.setSort(new SortField(\"string_val\", SortField.Type.STRING_VAL, true), SortField.FIELD_DOC);\n    td = empty.search(query, null, 10, sort, true, true);\n    assertEquals(0, td.totalHits);\n\n    sort.setSort(new SortField(\"float\", SortField.Type.FLOAT), new SortField(\"string\", SortField.Type.STRING));\n    td = empty.search(query, null, 10, sort, true, true);\n    assertEquals(0, td.totalHits);\n  }\n\n","sourceOld":"  /** test sorts when there's nothing in the index */\n  public void testEmptyIndex() throws Exception {\n    IndexSearcher empty = newSearcher(new MultiReader());\n    Query query = new TermQuery(new Term(\"contents\", \"foo\"));\n  \n    Sort sort = new Sort();\n    TopDocs td = empty.search(query, null, 10, sort, true, true);\n    assertEquals(0, td.totalHits);\n\n    sort.setSort(SortField.FIELD_DOC);\n    td = empty.search(query, null, 10, sort, true, true);\n    assertEquals(0, td.totalHits);\n\n    sort.setSort(new SortField(\"int\", SortField.Type.INT), SortField.FIELD_DOC);\n    td = empty.search(query, null, 10, sort, true, true);\n    assertEquals(0, td.totalHits);\n    \n    sort.setSort(new SortField(\"string\", SortField.Type.STRING, true), SortField.FIELD_DOC);\n    td = empty.search(query, null, 10, sort, true, true);\n    assertEquals(0, td.totalHits);\n    \n    sort.setSort(new SortField(\"string_val\", SortField.Type.STRING_VAL, true), SortField.FIELD_DOC);\n    td = empty.search(query, null, 10, sort, true, true);\n    assertEquals(0, td.totalHits);\n\n    sort.setSort(new SortField(\"float\", SortField.Type.FLOAT), new SortField(\"string\", SortField.Type.STRING));\n    td = empty.search(query, null, 10, sort, true, true);\n    assertEquals(0, td.totalHits);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"93dd449115a9247533e44bab47e8429e5dccbc6d","date":1400258396,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/misc/src/test/org/apache/lucene/uninverting/TestFieldCacheSort#testEmptyIndex().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestSort#testEmptyIndex().mjava","sourceNew":"  /** test sorts when there's nothing in the index */\n  public void testEmptyIndex() throws Exception {\n    IndexSearcher empty = newSearcher(new MultiReader());\n    Query query = new TermQuery(new Term(\"contents\", \"foo\"));\n  \n    Sort sort = new Sort();\n    TopDocs td = empty.search(query, null, 10, sort, true, true);\n    assertEquals(0, td.totalHits);\n\n    sort.setSort(SortField.FIELD_DOC);\n    td = empty.search(query, null, 10, sort, true, true);\n    assertEquals(0, td.totalHits);\n\n    sort.setSort(new SortField(\"int\", SortField.Type.INT), SortField.FIELD_DOC);\n    td = empty.search(query, null, 10, sort, true, true);\n    assertEquals(0, td.totalHits);\n    \n    sort.setSort(new SortField(\"string\", SortField.Type.STRING, true), SortField.FIELD_DOC);\n    td = empty.search(query, null, 10, sort, true, true);\n    assertEquals(0, td.totalHits);\n    \n    sort.setSort(new SortField(\"string_val\", SortField.Type.STRING_VAL, true), SortField.FIELD_DOC);\n    td = empty.search(query, null, 10, sort, true, true);\n    assertEquals(0, td.totalHits);\n\n    sort.setSort(new SortField(\"float\", SortField.Type.FLOAT), new SortField(\"string\", SortField.Type.STRING));\n    td = empty.search(query, null, 10, sort, true, true);\n    assertEquals(0, td.totalHits);\n  }\n\n","sourceOld":"  /** test sorts when there's nothing in the index */\n  public void testEmptyIndex() throws Exception {\n    IndexSearcher empty = newSearcher(new MultiReader());\n    Query query = new TermQuery(new Term(\"contents\", \"foo\"));\n  \n    Sort sort = new Sort();\n    TopDocs td = empty.search(query, null, 10, sort, true, true);\n    assertEquals(0, td.totalHits);\n\n    sort.setSort(SortField.FIELD_DOC);\n    td = empty.search(query, null, 10, sort, true, true);\n    assertEquals(0, td.totalHits);\n\n    sort.setSort(new SortField(\"int\", SortField.Type.INT), SortField.FIELD_DOC);\n    td = empty.search(query, null, 10, sort, true, true);\n    assertEquals(0, td.totalHits);\n    \n    sort.setSort(new SortField(\"string\", SortField.Type.STRING, true), SortField.FIELD_DOC);\n    td = empty.search(query, null, 10, sort, true, true);\n    assertEquals(0, td.totalHits);\n    \n    sort.setSort(new SortField(\"string_val\", SortField.Type.STRING_VAL, true), SortField.FIELD_DOC);\n    td = empty.search(query, null, 10, sort, true, true);\n    assertEquals(0, td.totalHits);\n\n    sort.setSort(new SortField(\"float\", SortField.Type.FLOAT), new SortField(\"string\", SortField.Type.STRING));\n    td = empty.search(query, null, 10, sort, true, true);\n    assertEquals(0, td.totalHits);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"56572ec06f1407c066d6b7399413178b33176cd8","date":1400495675,"type":5,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/misc/src/test/org/apache/lucene/uninverting/TestFieldCacheSort#testEmptyIndex().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestSort#testEmptyIndex().mjava","sourceNew":"  /** test sorts when there's nothing in the index */\n  public void testEmptyIndex() throws Exception {\n    IndexSearcher empty = newSearcher(new MultiReader());\n    Query query = new TermQuery(new Term(\"contents\", \"foo\"));\n  \n    Sort sort = new Sort();\n    TopDocs td = empty.search(query, null, 10, sort, true, true);\n    assertEquals(0, td.totalHits);\n\n    sort.setSort(SortField.FIELD_DOC);\n    td = empty.search(query, null, 10, sort, true, true);\n    assertEquals(0, td.totalHits);\n\n    sort.setSort(new SortField(\"int\", SortField.Type.INT), SortField.FIELD_DOC);\n    td = empty.search(query, null, 10, sort, true, true);\n    assertEquals(0, td.totalHits);\n    \n    sort.setSort(new SortField(\"string\", SortField.Type.STRING, true), SortField.FIELD_DOC);\n    td = empty.search(query, null, 10, sort, true, true);\n    assertEquals(0, td.totalHits);\n    \n    sort.setSort(new SortField(\"string_val\", SortField.Type.STRING_VAL, true), SortField.FIELD_DOC);\n    td = empty.search(query, null, 10, sort, true, true);\n    assertEquals(0, td.totalHits);\n\n    sort.setSort(new SortField(\"float\", SortField.Type.FLOAT), new SortField(\"string\", SortField.Type.STRING));\n    td = empty.search(query, null, 10, sort, true, true);\n    assertEquals(0, td.totalHits);\n  }\n\n","sourceOld":"  /** test sorts when there's nothing in the index */\n  public void testEmptyIndex() throws Exception {\n    IndexSearcher empty = newSearcher(new MultiReader());\n    Query query = new TermQuery(new Term(\"contents\", \"foo\"));\n  \n    Sort sort = new Sort();\n    TopDocs td = empty.search(query, null, 10, sort, true, true);\n    assertEquals(0, td.totalHits);\n\n    sort.setSort(SortField.FIELD_DOC);\n    td = empty.search(query, null, 10, sort, true, true);\n    assertEquals(0, td.totalHits);\n\n    sort.setSort(new SortField(\"int\", SortField.Type.INT), SortField.FIELD_DOC);\n    td = empty.search(query, null, 10, sort, true, true);\n    assertEquals(0, td.totalHits);\n    \n    sort.setSort(new SortField(\"string\", SortField.Type.STRING, true), SortField.FIELD_DOC);\n    td = empty.search(query, null, 10, sort, true, true);\n    assertEquals(0, td.totalHits);\n    \n    sort.setSort(new SortField(\"string_val\", SortField.Type.STRING_VAL, true), SortField.FIELD_DOC);\n    td = empty.search(query, null, 10, sort, true, true);\n    assertEquals(0, td.totalHits);\n\n    sort.setSort(new SortField(\"float\", SortField.Type.FLOAT), new SortField(\"string\", SortField.Type.STRING));\n    td = empty.search(query, null, 10, sort, true, true);\n    assertEquals(0, td.totalHits);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c":["3b0e8c39ca08b5a02de6edcd33d6f3b90b865173"],"3b0e8c39ca08b5a02de6edcd33d6f3b90b865173":["5f183729ece15402db94402d482f29ebac4f7f54"],"56572ec06f1407c066d6b7399413178b33176cd8":["3b0e8c39ca08b5a02de6edcd33d6f3b90b865173","93dd449115a9247533e44bab47e8429e5dccbc6d"],"3e29774db46ad98ca4a8d7fcbfab633ebc01f358":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"5f183729ece15402db94402d482f29ebac4f7f54":["1e3b23ac13c39a0cfcb44f08ab7646e4af0ebccf"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","355622f052f4bec346a66a7433d813b0c5fb753a"],"355622f052f4bec346a66a7433d813b0c5fb753a":["3e29774db46ad98ca4a8d7fcbfab633ebc01f358"],"95303ff3749680c743b9425f9cf99e6e4065e8a8":["3b41f996b22bd5518650f897d050088ff808ec03","5f183729ece15402db94402d482f29ebac4f7f54"],"93dd449115a9247533e44bab47e8429e5dccbc6d":["3b0e8c39ca08b5a02de6edcd33d6f3b90b865173","b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c"],"3b41f996b22bd5518650f897d050088ff808ec03":["d4d69c535930b5cce125cff868d40f6373dc27d4","1e3b23ac13c39a0cfcb44f08ab7646e4af0ebccf"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1e3b23ac13c39a0cfcb44f08ab7646e4af0ebccf":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["93dd449115a9247533e44bab47e8429e5dccbc6d"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["3e29774db46ad98ca4a8d7fcbfab633ebc01f358","d4d69c535930b5cce125cff868d40f6373dc27d4"],"b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c":["93dd449115a9247533e44bab47e8429e5dccbc6d"],"3b0e8c39ca08b5a02de6edcd33d6f3b90b865173":["b70a13d2b73512ad6b204e9ad8fe09ffeeda3c2c","56572ec06f1407c066d6b7399413178b33176cd8","93dd449115a9247533e44bab47e8429e5dccbc6d"],"56572ec06f1407c066d6b7399413178b33176cd8":[],"3e29774db46ad98ca4a8d7fcbfab633ebc01f358":["355622f052f4bec346a66a7433d813b0c5fb753a"],"5f183729ece15402db94402d482f29ebac4f7f54":["3b0e8c39ca08b5a02de6edcd33d6f3b90b865173","95303ff3749680c743b9425f9cf99e6e4065e8a8"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["3b41f996b22bd5518650f897d050088ff808ec03","1e3b23ac13c39a0cfcb44f08ab7646e4af0ebccf"],"355622f052f4bec346a66a7433d813b0c5fb753a":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"95303ff3749680c743b9425f9cf99e6e4065e8a8":[],"93dd449115a9247533e44bab47e8429e5dccbc6d":["56572ec06f1407c066d6b7399413178b33176cd8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3b41f996b22bd5518650f897d050088ff808ec03":["95303ff3749680c743b9425f9cf99e6e4065e8a8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"1e3b23ac13c39a0cfcb44f08ab7646e4af0ebccf":["5f183729ece15402db94402d482f29ebac4f7f54","3b41f996b22bd5518650f897d050088ff808ec03"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["56572ec06f1407c066d6b7399413178b33176cd8","95303ff3749680c743b9425f9cf99e6e4065e8a8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}