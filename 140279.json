{"path":"lucene/test-framework/src/java/org/apache/lucene/index/ForceMergePolicy#findForcedMerges(SegmentInfos,int,Map[SegmentCommitInfo,Boolean],IndexWriter).mjava","commits":[{"id":"c69bc8a0ec0e2ac7572c6bc189e539f6fe37913b","date":1449847169,"type":0,"author":"Christine Poerschke","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/ForceMergePolicy#findForcedMerges(SegmentInfos,int,Map[SegmentCommitInfo,Boolean],IndexWriter).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public MergeSpecification findForcedMerges(SegmentInfos segmentInfos,\n      int maxSegmentCount, Map<SegmentCommitInfo,Boolean> segmentsToMerge, IndexWriter writer)\n      throws IOException {\n    return in.findForcedMerges(segmentInfos, maxSegmentCount, segmentsToMerge, writer);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e96253deb801879f3fc6373f5069f2debfe797d3","date":1454570664,"type":5,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MergePolicyWrapper#findForcedMerges(SegmentInfos,int,Map[SegmentCommitInfo,Boolean],IndexWriter).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/ForceMergePolicy#findForcedMerges(SegmentInfos,int,Map[SegmentCommitInfo,Boolean],IndexWriter).mjava","sourceNew":"  @Override\n  public MergeSpecification findForcedMerges(SegmentInfos segmentInfos, int maxSegmentCount,\n      Map<SegmentCommitInfo,Boolean> segmentsToMerge, IndexWriter writer) throws IOException {\n    return in.findForcedMerges(segmentInfos, maxSegmentCount, segmentsToMerge, writer);\n  }\n\n","sourceOld":"  @Override\n  public MergeSpecification findForcedMerges(SegmentInfos segmentInfos,\n      int maxSegmentCount, Map<SegmentCommitInfo,Boolean> segmentsToMerge, IndexWriter writer)\n      throws IOException {\n    return in.findForcedMerges(segmentInfos, maxSegmentCount, segmentsToMerge, writer);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b1704c078ec59838c9d95d5bf5738b393b537494","date":1454693901,"type":5,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MergePolicyWrapper#findForcedMerges(SegmentInfos,int,Map[SegmentCommitInfo,Boolean],IndexWriter).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/ForceMergePolicy#findForcedMerges(SegmentInfos,int,Map[SegmentCommitInfo,Boolean],IndexWriter).mjava","sourceNew":"  @Override\n  public MergeSpecification findForcedMerges(SegmentInfos segmentInfos, int maxSegmentCount,\n      Map<SegmentCommitInfo,Boolean> segmentsToMerge, IndexWriter writer) throws IOException {\n    return in.findForcedMerges(segmentInfos, maxSegmentCount, segmentsToMerge, writer);\n  }\n\n","sourceOld":"  @Override\n  public MergeSpecification findForcedMerges(SegmentInfos segmentInfos,\n      int maxSegmentCount, Map<SegmentCommitInfo,Boolean> segmentsToMerge, IndexWriter writer)\n      throws IOException {\n    return in.findForcedMerges(segmentInfos, maxSegmentCount, segmentsToMerge, writer);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1e6acbaae7af722f17204ceccf0f7db5753eccf3","date":1454775255,"type":5,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MergePolicyWrapper#findForcedMerges(SegmentInfos,int,Map[SegmentCommitInfo,Boolean],IndexWriter).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/ForceMergePolicy#findForcedMerges(SegmentInfos,int,Map[SegmentCommitInfo,Boolean],IndexWriter).mjava","sourceNew":"  @Override\n  public MergeSpecification findForcedMerges(SegmentInfos segmentInfos, int maxSegmentCount,\n      Map<SegmentCommitInfo,Boolean> segmentsToMerge, IndexWriter writer) throws IOException {\n    return in.findForcedMerges(segmentInfos, maxSegmentCount, segmentsToMerge, writer);\n  }\n\n","sourceOld":"  @Override\n  public MergeSpecification findForcedMerges(SegmentInfos segmentInfos,\n      int maxSegmentCount, Map<SegmentCommitInfo,Boolean> segmentsToMerge, IndexWriter writer)\n      throws IOException {\n    return in.findForcedMerges(segmentInfos, maxSegmentCount, segmentsToMerge, writer);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c69bc8a0ec0e2ac7572c6bc189e539f6fe37913b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e96253deb801879f3fc6373f5069f2debfe797d3":["c69bc8a0ec0e2ac7572c6bc189e539f6fe37913b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":["c69bc8a0ec0e2ac7572c6bc189e539f6fe37913b","e96253deb801879f3fc6373f5069f2debfe797d3"],"b1704c078ec59838c9d95d5bf5738b393b537494":["c69bc8a0ec0e2ac7572c6bc189e539f6fe37913b","e96253deb801879f3fc6373f5069f2debfe797d3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e96253deb801879f3fc6373f5069f2debfe797d3"]},"commit2Childs":{"c69bc8a0ec0e2ac7572c6bc189e539f6fe37913b":["e96253deb801879f3fc6373f5069f2debfe797d3","1e6acbaae7af722f17204ceccf0f7db5753eccf3","b1704c078ec59838c9d95d5bf5738b393b537494"],"e96253deb801879f3fc6373f5069f2debfe797d3":["1e6acbaae7af722f17204ceccf0f7db5753eccf3","b1704c078ec59838c9d95d5bf5738b393b537494","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c69bc8a0ec0e2ac7572c6bc189e539f6fe37913b"],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":[],"b1704c078ec59838c9d95d5bf5738b393b537494":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["1e6acbaae7af722f17204ceccf0f7db5753eccf3","b1704c078ec59838c9d95d5bf5738b393b537494","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}