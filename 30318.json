{"path":"src/test/org/apache/solr/request/TestWriterPerf#testPerf().mjava","commits":[{"id":"da0acfe5ceed804451d76c8f887855b3d060e132","date":1208287358,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/test/org/apache/solr/request/TestWriterPerf#testPerf().mjava","pathOld":"/dev/null","sourceNew":"  public void testPerf() throws Exception {\n    makeIndex();\n\n    SolrQueryRequest req = req(\"q\", \"id:[* TO *] all country\"\n                    ,\"start\",\"0\"\n                    ,\"rows\",\"100\"\n                    ,\"echoParams\",\"all\"\n                    ,\"fl\",\"*,score\"\n                    ,\"indent\",\"false\"\n                    ,\"facet\",\"true\"\n                    ,\"facet.field\", i1\n                    ,\"facet.field\", tag\n                    ,\"facet.field\", t1\n                    ,\"facet.mincount\",\"0\"\n                    ,\"facet.offset\",\"0\"\n                    ,\"facet.limit\",\"100\"\n                    ,\"facet.sort\",\"true\"\n                    ,\"hl\",\"true\"\n                    ,\"hl.fl\",\"t1\"\n            );\n\n\n    // just for testing\n    doPerf(\"xml\", req, 2,2);\n    doPerf(\"json\", req, 2,2);\n    doPerf(\"javabin\", req, 2,2);\n\n    int encIter=20000;\n    int decIter=50000;\n\n\n    // warm up hotspot\n    // doPerf(\"xml\", req, 200,1000);\n    // doPerf(\"json\", req, 200,1000);\n    // doPerf(\"javabin\", req, 200,1000);\n\n    // doPerf(\"xml\", req, encIter, decIter);\n    // doPerf(\"json\", req, encIter, decIter);\n    //doPerf(\"javabin\", req, encIter, decIter);\n    // doPerf(\"javabin\", req, 1, decIter);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e5a95ce1d7a3779af6db59b6b39d3b89172d7445","date":1228620032,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/test/org/apache/solr/request/TestWriterPerf#testPerf().mjava","pathOld":"src/test/org/apache/solr/request/TestWriterPerf#testPerf().mjava","sourceNew":"  public void testPerf() throws Exception {\n    makeIndex();\n\n    SolrQueryRequest req = req(\"q\", \"id:[* TO *] all country\"\n                    ,\"start\",\"0\"\n                    ,\"rows\",\"100\"\n                    ,\"echoParams\",\"all\"\n                    ,\"fl\",\"*,score\"\n                    ,\"indent\",\"false\"\n                    ,\"facet\",\"true\"\n                    ,\"facet.field\", i1\n                    ,\"facet.field\", tag\n                    ,\"facet.field\", t1\n                    ,\"facet.mincount\",\"0\"\n                    ,\"facet.offset\",\"0\"\n                    ,\"facet.limit\",\"100\"\n                    ,\"facet.sort\",\"count\"\n                    ,\"hl\",\"true\"\n                    ,\"hl.fl\",\"t1\"\n            );\n\n\n    // just for testing\n    doPerf(\"xml\", req, 2,2);\n    doPerf(\"json\", req, 2,2);\n    doPerf(\"javabin\", req, 2,2);\n\n    int encIter=20000;\n    int decIter=50000;\n\n\n    // warm up hotspot\n    // doPerf(\"xml\", req, 200,1000);\n    // doPerf(\"json\", req, 200,1000);\n    // doPerf(\"javabin\", req, 200,1000);\n\n    // doPerf(\"xml\", req, encIter, decIter);\n    // doPerf(\"json\", req, encIter, decIter);\n    //doPerf(\"javabin\", req, encIter, decIter);\n    // doPerf(\"javabin\", req, 1, decIter);\n  }\n\n","sourceOld":"  public void testPerf() throws Exception {\n    makeIndex();\n\n    SolrQueryRequest req = req(\"q\", \"id:[* TO *] all country\"\n                    ,\"start\",\"0\"\n                    ,\"rows\",\"100\"\n                    ,\"echoParams\",\"all\"\n                    ,\"fl\",\"*,score\"\n                    ,\"indent\",\"false\"\n                    ,\"facet\",\"true\"\n                    ,\"facet.field\", i1\n                    ,\"facet.field\", tag\n                    ,\"facet.field\", t1\n                    ,\"facet.mincount\",\"0\"\n                    ,\"facet.offset\",\"0\"\n                    ,\"facet.limit\",\"100\"\n                    ,\"facet.sort\",\"true\"\n                    ,\"hl\",\"true\"\n                    ,\"hl.fl\",\"t1\"\n            );\n\n\n    // just for testing\n    doPerf(\"xml\", req, 2,2);\n    doPerf(\"json\", req, 2,2);\n    doPerf(\"javabin\", req, 2,2);\n\n    int encIter=20000;\n    int decIter=50000;\n\n\n    // warm up hotspot\n    // doPerf(\"xml\", req, 200,1000);\n    // doPerf(\"json\", req, 200,1000);\n    // doPerf(\"javabin\", req, 200,1000);\n\n    // doPerf(\"xml\", req, encIter, decIter);\n    // doPerf(\"json\", req, encIter, decIter);\n    //doPerf(\"javabin\", req, encIter, decIter);\n    // doPerf(\"javabin\", req, 1, decIter);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/request/TestWriterPerf#testPerf().mjava","pathOld":"src/test/org/apache/solr/request/TestWriterPerf#testPerf().mjava","sourceNew":"  public void testPerf() throws Exception {\n    makeIndex();\n\n    SolrQueryRequest req = req(\"q\", \"id:[* TO *] all country\"\n                    ,\"start\",\"0\"\n                    ,\"rows\",\"100\"\n                    ,\"echoParams\",\"all\"\n                    ,\"fl\",\"*,score\"\n                    ,\"indent\",\"false\"\n                    ,\"facet\",\"true\"\n                    ,\"facet.field\", i1\n                    ,\"facet.field\", tag\n                    ,\"facet.field\", t1\n                    ,\"facet.mincount\",\"0\"\n                    ,\"facet.offset\",\"0\"\n                    ,\"facet.limit\",\"100\"\n                    ,\"facet.sort\",\"count\"\n                    ,\"hl\",\"true\"\n                    ,\"hl.fl\",\"t1\"\n            );\n\n\n    // just for testing\n    doPerf(\"xml\", req, 2,2);\n    doPerf(\"json\", req, 2,2);\n    doPerf(\"javabin\", req, 2,2);\n\n    int encIter=20000;\n    int decIter=50000;\n\n\n    // warm up hotspot\n    // doPerf(\"xml\", req, 200,1000);\n    // doPerf(\"json\", req, 200,1000);\n    // doPerf(\"javabin\", req, 200,1000);\n\n    // doPerf(\"xml\", req, encIter, decIter);\n    // doPerf(\"json\", req, encIter, decIter);\n    //doPerf(\"javabin\", req, encIter, decIter);\n    // doPerf(\"javabin\", req, 1, decIter);\n  }\n\n","sourceOld":"  public void testPerf() throws Exception {\n    makeIndex();\n\n    SolrQueryRequest req = req(\"q\", \"id:[* TO *] all country\"\n                    ,\"start\",\"0\"\n                    ,\"rows\",\"100\"\n                    ,\"echoParams\",\"all\"\n                    ,\"fl\",\"*,score\"\n                    ,\"indent\",\"false\"\n                    ,\"facet\",\"true\"\n                    ,\"facet.field\", i1\n                    ,\"facet.field\", tag\n                    ,\"facet.field\", t1\n                    ,\"facet.mincount\",\"0\"\n                    ,\"facet.offset\",\"0\"\n                    ,\"facet.limit\",\"100\"\n                    ,\"facet.sort\",\"count\"\n                    ,\"hl\",\"true\"\n                    ,\"hl.fl\",\"t1\"\n            );\n\n\n    // just for testing\n    doPerf(\"xml\", req, 2,2);\n    doPerf(\"json\", req, 2,2);\n    doPerf(\"javabin\", req, 2,2);\n\n    int encIter=20000;\n    int decIter=50000;\n\n\n    // warm up hotspot\n    // doPerf(\"xml\", req, 200,1000);\n    // doPerf(\"json\", req, 200,1000);\n    // doPerf(\"javabin\", req, 200,1000);\n\n    // doPerf(\"xml\", req, encIter, decIter);\n    // doPerf(\"json\", req, encIter, decIter);\n    //doPerf(\"javabin\", req, encIter, decIter);\n    // doPerf(\"javabin\", req, 1, decIter);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"da0acfe5ceed804451d76c8f887855b3d060e132":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["e5a95ce1d7a3779af6db59b6b39d3b89172d7445"],"e5a95ce1d7a3779af6db59b6b39d3b89172d7445":["da0acfe5ceed804451d76c8f887855b3d060e132"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"da0acfe5ceed804451d76c8f887855b3d060e132":["e5a95ce1d7a3779af6db59b6b39d3b89172d7445"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["da0acfe5ceed804451d76c8f887855b3d060e132"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"e5a95ce1d7a3779af6db59b6b39d3b89172d7445":["ad94625fb8d088209f46650c8097196fec67f00c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}