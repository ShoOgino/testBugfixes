{"path":"lucene/src/test/org/apache/lucene/index/TestIndexWriterConfig#testIndexWriterSetters().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterConfig#testIndexWriterSetters().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriterConfig#testIndexWriterSetters().mjava","sourceNew":"  /**\n   * @deprecated should be removed once all the deprecated setters are removed\n   *             from IndexWriter.\n   */\n  @Test\n  public void testIndexWriterSetters() throws Exception {\n    // This test intentionally tests deprecated methods. The purpose is to pass\n    // whatever the user set on IW to IWC, so that if the user calls\n    // iw.getConfig().getXYZ(), he'll get the same value he passed to\n    // iw.setXYZ().\n    IndexWriterConfig conf = new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT));\n    Directory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, conf);\n\n    writer.setSimilarity(new MySimilarity());\n    assertEquals(MySimilarity.class, writer.getConfig().getSimilarity().getClass());\n\n    writer.setMaxBufferedDeleteTerms(4);\n    assertEquals(4, writer.getConfig().getMaxBufferedDeleteTerms());\n\n    writer.setMaxBufferedDocs(10);\n    assertEquals(10, writer.getConfig().getMaxBufferedDocs());\n\n    writer.setMaxFieldLength(10);\n    assertEquals(10, writer.getConfig().getMaxFieldLength());\n    \n    writer.setMergeScheduler(new SerialMergeScheduler());\n    assertEquals(SerialMergeScheduler.class, writer.getConfig().getMergeScheduler().getClass());\n    \n    writer.setRAMBufferSizeMB(1.5);\n    assertEquals(1.5, writer.getConfig().getRAMBufferSizeMB(), 0.0);\n    \n    writer.setTermIndexInterval(40);\n    assertEquals(40, writer.getConfig().getTermIndexInterval());\n    \n    writer.setWriteLockTimeout(100);\n    assertEquals(100, writer.getConfig().getWriteLockTimeout());\n    \n    writer.setMergedSegmentWarmer(new MyWarmer());\n    assertEquals(MyWarmer.class, writer.getConfig().getMergedSegmentWarmer().getClass());\n  }\n\n","sourceOld":"  /**\n   * @deprecated should be removed once all the deprecated setters are removed\n   *             from IndexWriter.\n   */\n  @Test\n  public void testIndexWriterSetters() throws Exception {\n    // This test intentionally tests deprecated methods. The purpose is to pass\n    // whatever the user set on IW to IWC, so that if the user calls\n    // iw.getConfig().getXYZ(), he'll get the same value he passed to\n    // iw.setXYZ().\n    IndexWriterConfig conf = new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT));\n    Directory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, conf);\n\n    writer.setSimilarity(new MySimilarity());\n    assertEquals(MySimilarity.class, writer.getConfig().getSimilarity().getClass());\n\n    writer.setMaxBufferedDeleteTerms(4);\n    assertEquals(4, writer.getConfig().getMaxBufferedDeleteTerms());\n\n    writer.setMaxBufferedDocs(10);\n    assertEquals(10, writer.getConfig().getMaxBufferedDocs());\n\n    writer.setMaxFieldLength(10);\n    assertEquals(10, writer.getConfig().getMaxFieldLength());\n    \n    writer.setMergeScheduler(new SerialMergeScheduler());\n    assertEquals(SerialMergeScheduler.class, writer.getConfig().getMergeScheduler().getClass());\n    \n    writer.setRAMBufferSizeMB(1.5);\n    assertEquals(1.5, writer.getConfig().getRAMBufferSizeMB(), 0.0);\n    \n    writer.setTermIndexInterval(40);\n    assertEquals(40, writer.getConfig().getTermIndexInterval());\n    \n    writer.setWriteLockTimeout(100);\n    assertEquals(100, writer.getConfig().getWriteLockTimeout());\n    \n    writer.setMergedSegmentWarmer(new MyWarmer());\n    assertEquals(MyWarmer.class, writer.getConfig().getMergedSegmentWarmer().getClass());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7ab99e8c71442b92c320e218141dee04a9b91ce8","date":1269203801,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterConfig#testIndexWriterSetters().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterConfig#testIndexWriterSetters().mjava","sourceNew":"  /**\n   * @deprecated should be removed once all the deprecated setters are removed\n   *             from IndexWriter.\n   */\n  @Test\n  public void testIndexWriterSetters() throws Exception {\n    // This test intentionally tests deprecated methods. The purpose is to pass\n    // whatever the user set on IW to IWC, so that if the user calls\n    // iw.getConfig().getXYZ(), he'll get the same value he passed to\n    // iw.setXYZ().\n    IndexWriterConfig conf = new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT));\n    Directory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, conf);\n\n    writer.setSimilarity(new MySimilarity());\n    assertEquals(MySimilarity.class, writer.getConfig().getSimilarity().getClass());\n\n    writer.setMaxBufferedDeleteTerms(4);\n    assertEquals(4, writer.getConfig().getMaxBufferedDeleteTerms());\n\n    writer.setMaxBufferedDocs(10);\n    assertEquals(10, writer.getConfig().getMaxBufferedDocs());\n\n    writer.setMaxFieldLength(10);\n    assertEquals(10, writer.getConfig().getMaxFieldLength());\n    \n    writer.setMergeScheduler(new SerialMergeScheduler());\n    assertEquals(SerialMergeScheduler.class, writer.getConfig().getMergeScheduler().getClass());\n    \n    writer.setRAMBufferSizeMB(1.5);\n    assertEquals(1.5, writer.getConfig().getRAMBufferSizeMB(), 0.0);\n    \n    writer.setTermIndexInterval(40);\n    assertEquals(40, writer.getConfig().getTermIndexInterval());\n    \n    writer.setWriteLockTimeout(100);\n    assertEquals(100, writer.getConfig().getWriteLockTimeout());\n    \n    writer.setMergedSegmentWarmer(new MyWarmer());\n    assertEquals(MyWarmer.class, writer.getConfig().getMergedSegmentWarmer().getClass());\n    \n    writer.setMergePolicy(new LogDocMergePolicy());\n    assertEquals(LogDocMergePolicy.class, writer.getConfig().getMergePolicy().getClass());\n  }\n\n","sourceOld":"  /**\n   * @deprecated should be removed once all the deprecated setters are removed\n   *             from IndexWriter.\n   */\n  @Test\n  public void testIndexWriterSetters() throws Exception {\n    // This test intentionally tests deprecated methods. The purpose is to pass\n    // whatever the user set on IW to IWC, so that if the user calls\n    // iw.getConfig().getXYZ(), he'll get the same value he passed to\n    // iw.setXYZ().\n    IndexWriterConfig conf = new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT));\n    Directory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, conf);\n\n    writer.setSimilarity(new MySimilarity());\n    assertEquals(MySimilarity.class, writer.getConfig().getSimilarity().getClass());\n\n    writer.setMaxBufferedDeleteTerms(4);\n    assertEquals(4, writer.getConfig().getMaxBufferedDeleteTerms());\n\n    writer.setMaxBufferedDocs(10);\n    assertEquals(10, writer.getConfig().getMaxBufferedDocs());\n\n    writer.setMaxFieldLength(10);\n    assertEquals(10, writer.getConfig().getMaxFieldLength());\n    \n    writer.setMergeScheduler(new SerialMergeScheduler());\n    assertEquals(SerialMergeScheduler.class, writer.getConfig().getMergeScheduler().getClass());\n    \n    writer.setRAMBufferSizeMB(1.5);\n    assertEquals(1.5, writer.getConfig().getRAMBufferSizeMB(), 0.0);\n    \n    writer.setTermIndexInterval(40);\n    assertEquals(40, writer.getConfig().getTermIndexInterval());\n    \n    writer.setWriteLockTimeout(100);\n    assertEquals(100, writer.getConfig().getWriteLockTimeout());\n    \n    writer.setMergedSegmentWarmer(new MyWarmer());\n    assertEquals(MyWarmer.class, writer.getConfig().getMergedSegmentWarmer().getClass());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d572389229127c297dd1fa5ce4758e1cec41e799","date":1273610938,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterConfig#testIndexWriterSetters().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterConfig#testIndexWriterSetters().mjava","sourceNew":"  /**\n   * @deprecated should be removed once all the deprecated setters are removed\n   *             from IndexWriter.\n   */\n  @Test\n  public void testIndexWriterSetters() throws Exception {\n    // This test intentionally tests deprecated methods. The purpose is to pass\n    // whatever the user set on IW to IWC, so that if the user calls\n    // iw.getConfig().getXYZ(), he'll get the same value he passed to\n    // iw.setXYZ().\n    IndexWriterConfig conf = new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer());\n    Directory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, conf);\n\n    writer.setSimilarity(new MySimilarity());\n    assertEquals(MySimilarity.class, writer.getConfig().getSimilarity().getClass());\n\n    writer.setMaxBufferedDeleteTerms(4);\n    assertEquals(4, writer.getConfig().getMaxBufferedDeleteTerms());\n\n    writer.setMaxBufferedDocs(10);\n    assertEquals(10, writer.getConfig().getMaxBufferedDocs());\n\n    writer.setMaxFieldLength(10);\n    assertEquals(10, writer.getConfig().getMaxFieldLength());\n    \n    writer.setMergeScheduler(new SerialMergeScheduler());\n    assertEquals(SerialMergeScheduler.class, writer.getConfig().getMergeScheduler().getClass());\n    \n    writer.setRAMBufferSizeMB(1.5);\n    assertEquals(1.5, writer.getConfig().getRAMBufferSizeMB(), 0.0);\n    \n    writer.setTermIndexInterval(40);\n    assertEquals(40, writer.getConfig().getTermIndexInterval());\n    \n    writer.setWriteLockTimeout(100);\n    assertEquals(100, writer.getConfig().getWriteLockTimeout());\n    \n    writer.setMergedSegmentWarmer(new MyWarmer());\n    assertEquals(MyWarmer.class, writer.getConfig().getMergedSegmentWarmer().getClass());\n    \n    writer.setMergePolicy(new LogDocMergePolicy());\n    assertEquals(LogDocMergePolicy.class, writer.getConfig().getMergePolicy().getClass());\n  }\n\n","sourceOld":"  /**\n   * @deprecated should be removed once all the deprecated setters are removed\n   *             from IndexWriter.\n   */\n  @Test\n  public void testIndexWriterSetters() throws Exception {\n    // This test intentionally tests deprecated methods. The purpose is to pass\n    // whatever the user set on IW to IWC, so that if the user calls\n    // iw.getConfig().getXYZ(), he'll get the same value he passed to\n    // iw.setXYZ().\n    IndexWriterConfig conf = new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT));\n    Directory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, conf);\n\n    writer.setSimilarity(new MySimilarity());\n    assertEquals(MySimilarity.class, writer.getConfig().getSimilarity().getClass());\n\n    writer.setMaxBufferedDeleteTerms(4);\n    assertEquals(4, writer.getConfig().getMaxBufferedDeleteTerms());\n\n    writer.setMaxBufferedDocs(10);\n    assertEquals(10, writer.getConfig().getMaxBufferedDocs());\n\n    writer.setMaxFieldLength(10);\n    assertEquals(10, writer.getConfig().getMaxFieldLength());\n    \n    writer.setMergeScheduler(new SerialMergeScheduler());\n    assertEquals(SerialMergeScheduler.class, writer.getConfig().getMergeScheduler().getClass());\n    \n    writer.setRAMBufferSizeMB(1.5);\n    assertEquals(1.5, writer.getConfig().getRAMBufferSizeMB(), 0.0);\n    \n    writer.setTermIndexInterval(40);\n    assertEquals(40, writer.getConfig().getTermIndexInterval());\n    \n    writer.setWriteLockTimeout(100);\n    assertEquals(100, writer.getConfig().getWriteLockTimeout());\n    \n    writer.setMergedSegmentWarmer(new MyWarmer());\n    assertEquals(MyWarmer.class, writer.getConfig().getMergedSegmentWarmer().getClass());\n    \n    writer.setMergePolicy(new LogDocMergePolicy());\n    assertEquals(LogDocMergePolicy.class, writer.getConfig().getMergePolicy().getClass());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6c18273ea5b3974d2f30117f46f1ae416c28f727","date":1279708040,"type":4,"author":"Michael Busch","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterConfig#testIndexWriterSetters().mjava","sourceNew":null,"sourceOld":"  /**\n   * @deprecated should be removed once all the deprecated setters are removed\n   *             from IndexWriter.\n   */\n  @Test\n  public void testIndexWriterSetters() throws Exception {\n    // This test intentionally tests deprecated methods. The purpose is to pass\n    // whatever the user set on IW to IWC, so that if the user calls\n    // iw.getConfig().getXYZ(), he'll get the same value he passed to\n    // iw.setXYZ().\n    IndexWriterConfig conf = new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer());\n    Directory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, conf);\n\n    writer.setSimilarity(new MySimilarity());\n    assertEquals(MySimilarity.class, writer.getConfig().getSimilarity().getClass());\n\n    writer.setMaxBufferedDeleteTerms(4);\n    assertEquals(4, writer.getConfig().getMaxBufferedDeleteTerms());\n\n    writer.setMaxBufferedDocs(10);\n    assertEquals(10, writer.getConfig().getMaxBufferedDocs());\n\n    writer.setMaxFieldLength(10);\n    assertEquals(10, writer.getConfig().getMaxFieldLength());\n    \n    writer.setMergeScheduler(new SerialMergeScheduler());\n    assertEquals(SerialMergeScheduler.class, writer.getConfig().getMergeScheduler().getClass());\n    \n    writer.setRAMBufferSizeMB(1.5);\n    assertEquals(1.5, writer.getConfig().getRAMBufferSizeMB(), 0.0);\n    \n    writer.setTermIndexInterval(40);\n    assertEquals(40, writer.getConfig().getTermIndexInterval());\n    \n    writer.setWriteLockTimeout(100);\n    assertEquals(100, writer.getConfig().getWriteLockTimeout());\n    \n    writer.setMergedSegmentWarmer(new MyWarmer());\n    assertEquals(MyWarmer.class, writer.getConfig().getMergedSegmentWarmer().getClass());\n    \n    writer.setMergePolicy(new LogDocMergePolicy());\n    assertEquals(LogDocMergePolicy.class, writer.getConfig().getMergePolicy().getClass());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c","date":1281477834,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterConfig#testIndexWriterSetters().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterConfig#testIndexWriterSetters().mjava","sourceNew":"  /**\n   * @deprecated should be removed once all the deprecated setters are removed\n   *             from IndexWriter.\n   */\n  @Test\n  public void testIndexWriterSetters() throws Exception {\n    // This test intentionally tests deprecated methods. The purpose is to pass\n    // whatever the user set on IW to IWC, so that if the user calls\n    // iw.getConfig().getXYZ(), he'll get the same value he passed to\n    // iw.setXYZ().\n    IndexWriterConfig conf = new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer());\n    Directory dir = new MockRAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, conf);\n\n    writer.setSimilarity(new MySimilarity());\n    assertEquals(MySimilarity.class, writer.getConfig().getSimilarity().getClass());\n\n    writer.setMaxBufferedDeleteTerms(4);\n    assertEquals(4, writer.getConfig().getMaxBufferedDeleteTerms());\n\n    writer.setMaxBufferedDocs(10);\n    assertEquals(10, writer.getConfig().getMaxBufferedDocs());\n\n    writer.setMaxFieldLength(10);\n    assertEquals(10, writer.getConfig().getMaxFieldLength());\n    \n    writer.setMergeScheduler(new SerialMergeScheduler());\n    assertEquals(SerialMergeScheduler.class, writer.getConfig().getMergeScheduler().getClass());\n    \n    writer.setRAMBufferSizeMB(1.5);\n    assertEquals(1.5, writer.getConfig().getRAMBufferSizeMB(), 0.0);\n    \n    writer.setTermIndexInterval(40);\n    assertEquals(40, writer.getConfig().getTermIndexInterval());\n    \n    writer.setWriteLockTimeout(100);\n    assertEquals(100, writer.getConfig().getWriteLockTimeout());\n    \n    writer.setMergedSegmentWarmer(new MyWarmer());\n    assertEquals(MyWarmer.class, writer.getConfig().getMergedSegmentWarmer().getClass());\n    \n    writer.setMergePolicy(new LogDocMergePolicy());\n    assertEquals(LogDocMergePolicy.class, writer.getConfig().getMergePolicy().getClass());\n  }\n\n","sourceOld":"  /**\n   * @deprecated should be removed once all the deprecated setters are removed\n   *             from IndexWriter.\n   */\n  @Test\n  public void testIndexWriterSetters() throws Exception {\n    // This test intentionally tests deprecated methods. The purpose is to pass\n    // whatever the user set on IW to IWC, so that if the user calls\n    // iw.getConfig().getXYZ(), he'll get the same value he passed to\n    // iw.setXYZ().\n    IndexWriterConfig conf = new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer());\n    Directory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, conf);\n\n    writer.setSimilarity(new MySimilarity());\n    assertEquals(MySimilarity.class, writer.getConfig().getSimilarity().getClass());\n\n    writer.setMaxBufferedDeleteTerms(4);\n    assertEquals(4, writer.getConfig().getMaxBufferedDeleteTerms());\n\n    writer.setMaxBufferedDocs(10);\n    assertEquals(10, writer.getConfig().getMaxBufferedDocs());\n\n    writer.setMaxFieldLength(10);\n    assertEquals(10, writer.getConfig().getMaxFieldLength());\n    \n    writer.setMergeScheduler(new SerialMergeScheduler());\n    assertEquals(SerialMergeScheduler.class, writer.getConfig().getMergeScheduler().getClass());\n    \n    writer.setRAMBufferSizeMB(1.5);\n    assertEquals(1.5, writer.getConfig().getRAMBufferSizeMB(), 0.0);\n    \n    writer.setTermIndexInterval(40);\n    assertEquals(40, writer.getConfig().getTermIndexInterval());\n    \n    writer.setWriteLockTimeout(100);\n    assertEquals(100, writer.getConfig().getWriteLockTimeout());\n    \n    writer.setMergedSegmentWarmer(new MyWarmer());\n    assertEquals(MyWarmer.class, writer.getConfig().getMergedSegmentWarmer().getClass());\n    \n    writer.setMergePolicy(new LogDocMergePolicy());\n    assertEquals(LogDocMergePolicy.class, writer.getConfig().getMergePolicy().getClass());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c","date":1281646583,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterConfig#testIndexWriterSetters().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterConfig#testIndexWriterSetters().mjava","sourceNew":"  /**\n   * @deprecated should be removed once all the deprecated setters are removed\n   *             from IndexWriter.\n   */\n  @Test\n  public void testIndexWriterSetters() throws Exception {\n    // This test intentionally tests deprecated methods. The purpose is to pass\n    // whatever the user set on IW to IWC, so that if the user calls\n    // iw.getConfig().getXYZ(), he'll get the same value he passed to\n    // iw.setXYZ().\n    IndexWriterConfig conf = new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer());\n    Directory dir = newDirectory(newRandom());\n    IndexWriter writer = new IndexWriter(dir, conf);\n\n    writer.setSimilarity(new MySimilarity());\n    assertEquals(MySimilarity.class, writer.getConfig().getSimilarity().getClass());\n\n    writer.setMaxBufferedDeleteTerms(4);\n    assertEquals(4, writer.getConfig().getMaxBufferedDeleteTerms());\n\n    writer.setMaxBufferedDocs(10);\n    assertEquals(10, writer.getConfig().getMaxBufferedDocs());\n\n    writer.setMaxFieldLength(10);\n    assertEquals(10, writer.getConfig().getMaxFieldLength());\n    \n    writer.setMergeScheduler(new SerialMergeScheduler());\n    assertEquals(SerialMergeScheduler.class, writer.getConfig().getMergeScheduler().getClass());\n    \n    writer.setRAMBufferSizeMB(1.5);\n    assertEquals(1.5, writer.getConfig().getRAMBufferSizeMB(), 0.0);\n    \n    writer.setTermIndexInterval(40);\n    assertEquals(40, writer.getConfig().getTermIndexInterval());\n    \n    writer.setWriteLockTimeout(100);\n    assertEquals(100, writer.getConfig().getWriteLockTimeout());\n    \n    writer.setMergedSegmentWarmer(new MyWarmer());\n    assertEquals(MyWarmer.class, writer.getConfig().getMergedSegmentWarmer().getClass());\n    \n    writer.setMergePolicy(new LogDocMergePolicy());\n    assertEquals(LogDocMergePolicy.class, writer.getConfig().getMergePolicy().getClass());\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  /**\n   * @deprecated should be removed once all the deprecated setters are removed\n   *             from IndexWriter.\n   */\n  @Test\n  public void testIndexWriterSetters() throws Exception {\n    // This test intentionally tests deprecated methods. The purpose is to pass\n    // whatever the user set on IW to IWC, so that if the user calls\n    // iw.getConfig().getXYZ(), he'll get the same value he passed to\n    // iw.setXYZ().\n    IndexWriterConfig conf = new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer());\n    Directory dir = new MockRAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, conf);\n\n    writer.setSimilarity(new MySimilarity());\n    assertEquals(MySimilarity.class, writer.getConfig().getSimilarity().getClass());\n\n    writer.setMaxBufferedDeleteTerms(4);\n    assertEquals(4, writer.getConfig().getMaxBufferedDeleteTerms());\n\n    writer.setMaxBufferedDocs(10);\n    assertEquals(10, writer.getConfig().getMaxBufferedDocs());\n\n    writer.setMaxFieldLength(10);\n    assertEquals(10, writer.getConfig().getMaxFieldLength());\n    \n    writer.setMergeScheduler(new SerialMergeScheduler());\n    assertEquals(SerialMergeScheduler.class, writer.getConfig().getMergeScheduler().getClass());\n    \n    writer.setRAMBufferSizeMB(1.5);\n    assertEquals(1.5, writer.getConfig().getRAMBufferSizeMB(), 0.0);\n    \n    writer.setTermIndexInterval(40);\n    assertEquals(40, writer.getConfig().getTermIndexInterval());\n    \n    writer.setWriteLockTimeout(100);\n    assertEquals(100, writer.getConfig().getWriteLockTimeout());\n    \n    writer.setMergedSegmentWarmer(new MyWarmer());\n    assertEquals(MyWarmer.class, writer.getConfig().getMergedSegmentWarmer().getClass());\n    \n    writer.setMergePolicy(new LogDocMergePolicy());\n    assertEquals(LogDocMergePolicy.class, writer.getConfig().getMergePolicy().getClass());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1f653cfcf159baeaafe5d01682a911e95bba4012","date":1284122058,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterConfig#testIndexWriterSetters().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterConfig#testIndexWriterSetters().mjava","sourceNew":"  /**\n   * @deprecated should be removed once all the deprecated setters are removed\n   *             from IndexWriter.\n   */\n  @Test\n  public void testIndexWriterSetters() throws Exception {\n    // This test intentionally tests deprecated methods. The purpose is to pass\n    // whatever the user set on IW to IWC, so that if the user calls\n    // iw.getConfig().getXYZ(), he'll get the same value he passed to\n    // iw.setXYZ().\n    IndexWriterConfig conf = new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer());\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, conf);\n\n    writer.setSimilarity(new MySimilarity());\n    assertEquals(MySimilarity.class, writer.getConfig().getSimilarity().getClass());\n\n    writer.setMaxBufferedDeleteTerms(4);\n    assertEquals(4, writer.getConfig().getMaxBufferedDeleteTerms());\n\n    writer.setMaxBufferedDocs(10);\n    assertEquals(10, writer.getConfig().getMaxBufferedDocs());\n\n    writer.setMaxFieldLength(10);\n    assertEquals(10, writer.getConfig().getMaxFieldLength());\n    \n    writer.setMergeScheduler(new SerialMergeScheduler());\n    assertEquals(SerialMergeScheduler.class, writer.getConfig().getMergeScheduler().getClass());\n    \n    writer.setRAMBufferSizeMB(1.5);\n    assertEquals(1.5, writer.getConfig().getRAMBufferSizeMB(), 0.0);\n    \n    writer.setTermIndexInterval(40);\n    assertEquals(40, writer.getConfig().getTermIndexInterval());\n    \n    writer.setWriteLockTimeout(100);\n    assertEquals(100, writer.getConfig().getWriteLockTimeout());\n    \n    writer.setMergedSegmentWarmer(new MyWarmer());\n    assertEquals(MyWarmer.class, writer.getConfig().getMergedSegmentWarmer().getClass());\n    \n    writer.setMergePolicy(new LogDocMergePolicy());\n    assertEquals(LogDocMergePolicy.class, writer.getConfig().getMergePolicy().getClass());\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  /**\n   * @deprecated should be removed once all the deprecated setters are removed\n   *             from IndexWriter.\n   */\n  @Test\n  public void testIndexWriterSetters() throws Exception {\n    // This test intentionally tests deprecated methods. The purpose is to pass\n    // whatever the user set on IW to IWC, so that if the user calls\n    // iw.getConfig().getXYZ(), he'll get the same value he passed to\n    // iw.setXYZ().\n    IndexWriterConfig conf = new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer());\n    Directory dir = newDirectory(newRandom());\n    IndexWriter writer = new IndexWriter(dir, conf);\n\n    writer.setSimilarity(new MySimilarity());\n    assertEquals(MySimilarity.class, writer.getConfig().getSimilarity().getClass());\n\n    writer.setMaxBufferedDeleteTerms(4);\n    assertEquals(4, writer.getConfig().getMaxBufferedDeleteTerms());\n\n    writer.setMaxBufferedDocs(10);\n    assertEquals(10, writer.getConfig().getMaxBufferedDocs());\n\n    writer.setMaxFieldLength(10);\n    assertEquals(10, writer.getConfig().getMaxFieldLength());\n    \n    writer.setMergeScheduler(new SerialMergeScheduler());\n    assertEquals(SerialMergeScheduler.class, writer.getConfig().getMergeScheduler().getClass());\n    \n    writer.setRAMBufferSizeMB(1.5);\n    assertEquals(1.5, writer.getConfig().getRAMBufferSizeMB(), 0.0);\n    \n    writer.setTermIndexInterval(40);\n    assertEquals(40, writer.getConfig().getTermIndexInterval());\n    \n    writer.setWriteLockTimeout(100);\n    assertEquals(100, writer.getConfig().getWriteLockTimeout());\n    \n    writer.setMergedSegmentWarmer(new MyWarmer());\n    assertEquals(MyWarmer.class, writer.getConfig().getMergedSegmentWarmer().getClass());\n    \n    writer.setMergePolicy(new LogDocMergePolicy());\n    assertEquals(LogDocMergePolicy.class, writer.getConfig().getMergePolicy().getClass());\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"068265517d1fbc623f5aeaee57fcd8df925678e4","date":1286043654,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterConfig#testIndexWriterSetters().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterConfig#testIndexWriterSetters().mjava","sourceNew":"  /**\n   * @deprecated should be removed once all the deprecated setters are removed\n   *             from IndexWriter.\n   */\n  @Test @Deprecated\n  public void testIndexWriterSetters() throws Exception {\n    // This test intentionally tests deprecated methods. The purpose is to pass\n    // whatever the user set on IW to IWC, so that if the user calls\n    // iw.getConfig().getXYZ(), he'll get the same value he passed to\n    // iw.setXYZ().\n    IndexWriterConfig conf = new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer());\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, conf);\n\n    writer.setSimilarity(new MySimilarity());\n    assertEquals(MySimilarity.class, writer.getConfig().getSimilarity().getClass());\n\n    writer.setMaxBufferedDeleteTerms(4);\n    assertEquals(4, writer.getConfig().getMaxBufferedDeleteTerms());\n\n    writer.setMaxBufferedDocs(10);\n    assertEquals(10, writer.getConfig().getMaxBufferedDocs());\n\n    writer.setMaxFieldLength(10);\n    assertEquals(10, writer.getConfig().getMaxFieldLength());\n    \n    writer.setMergeScheduler(new SerialMergeScheduler());\n    assertEquals(SerialMergeScheduler.class, writer.getConfig().getMergeScheduler().getClass());\n    \n    writer.setRAMBufferSizeMB(1.5);\n    assertEquals(1.5, writer.getConfig().getRAMBufferSizeMB(), 0.0);\n    \n    writer.setTermIndexInterval(40);\n    assertEquals(40, writer.getConfig().getTermIndexInterval());\n    \n    writer.setWriteLockTimeout(100);\n    assertEquals(100, writer.getConfig().getWriteLockTimeout());\n    \n    writer.setMergedSegmentWarmer(new MyWarmer());\n    assertEquals(MyWarmer.class, writer.getConfig().getMergedSegmentWarmer().getClass());\n    \n    writer.setMergePolicy(new LogDocMergePolicy());\n    assertEquals(LogDocMergePolicy.class, writer.getConfig().getMergePolicy().getClass());\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  /**\n   * @deprecated should be removed once all the deprecated setters are removed\n   *             from IndexWriter.\n   */\n  @Test\n  public void testIndexWriterSetters() throws Exception {\n    // This test intentionally tests deprecated methods. The purpose is to pass\n    // whatever the user set on IW to IWC, so that if the user calls\n    // iw.getConfig().getXYZ(), he'll get the same value he passed to\n    // iw.setXYZ().\n    IndexWriterConfig conf = new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer());\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, conf);\n\n    writer.setSimilarity(new MySimilarity());\n    assertEquals(MySimilarity.class, writer.getConfig().getSimilarity().getClass());\n\n    writer.setMaxBufferedDeleteTerms(4);\n    assertEquals(4, writer.getConfig().getMaxBufferedDeleteTerms());\n\n    writer.setMaxBufferedDocs(10);\n    assertEquals(10, writer.getConfig().getMaxBufferedDocs());\n\n    writer.setMaxFieldLength(10);\n    assertEquals(10, writer.getConfig().getMaxFieldLength());\n    \n    writer.setMergeScheduler(new SerialMergeScheduler());\n    assertEquals(SerialMergeScheduler.class, writer.getConfig().getMergeScheduler().getClass());\n    \n    writer.setRAMBufferSizeMB(1.5);\n    assertEquals(1.5, writer.getConfig().getRAMBufferSizeMB(), 0.0);\n    \n    writer.setTermIndexInterval(40);\n    assertEquals(40, writer.getConfig().getTermIndexInterval());\n    \n    writer.setWriteLockTimeout(100);\n    assertEquals(100, writer.getConfig().getWriteLockTimeout());\n    \n    writer.setMergedSegmentWarmer(new MyWarmer());\n    assertEquals(MyWarmer.class, writer.getConfig().getMergedSegmentWarmer().getClass());\n    \n    writer.setMergePolicy(new LogDocMergePolicy());\n    assertEquals(LogDocMergePolicy.class, writer.getConfig().getMergePolicy().getClass());\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4e8cc373c801e54cec75daf9f52792cb4b17f536","date":1291116159,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterConfig#testIndexWriterSetters().mjava","sourceNew":null,"sourceOld":"  /**\n   * @deprecated should be removed once all the deprecated setters are removed\n   *             from IndexWriter.\n   */\n  @Test @Deprecated\n  public void testIndexWriterSetters() throws Exception {\n    // This test intentionally tests deprecated methods. The purpose is to pass\n    // whatever the user set on IW to IWC, so that if the user calls\n    // iw.getConfig().getXYZ(), he'll get the same value he passed to\n    // iw.setXYZ().\n    IndexWriterConfig conf = new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer());\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, conf);\n\n    writer.setSimilarity(new MySimilarity());\n    assertEquals(MySimilarity.class, writer.getConfig().getSimilarity().getClass());\n\n    writer.setMaxBufferedDeleteTerms(4);\n    assertEquals(4, writer.getConfig().getMaxBufferedDeleteTerms());\n\n    writer.setMaxBufferedDocs(10);\n    assertEquals(10, writer.getConfig().getMaxBufferedDocs());\n\n    writer.setMaxFieldLength(10);\n    assertEquals(10, writer.getConfig().getMaxFieldLength());\n    \n    writer.setMergeScheduler(new SerialMergeScheduler());\n    assertEquals(SerialMergeScheduler.class, writer.getConfig().getMergeScheduler().getClass());\n    \n    writer.setRAMBufferSizeMB(1.5);\n    assertEquals(1.5, writer.getConfig().getRAMBufferSizeMB(), 0.0);\n    \n    writer.setTermIndexInterval(40);\n    assertEquals(40, writer.getConfig().getTermIndexInterval());\n    \n    writer.setWriteLockTimeout(100);\n    assertEquals(100, writer.getConfig().getWriteLockTimeout());\n    \n    writer.setMergedSegmentWarmer(new MyWarmer());\n    assertEquals(MyWarmer.class, writer.getConfig().getMergedSegmentWarmer().getClass());\n    \n    writer.setMergePolicy(new LogDocMergePolicy());\n    assertEquals(LogDocMergePolicy.class, writer.getConfig().getMergePolicy().getClass());\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3bb13258feba31ab676502787ab2e1779f129b7a","date":1291596436,"type":4,"author":"Simon Willnauer","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterConfig#testIndexWriterSetters().mjava","sourceNew":null,"sourceOld":"  /**\n   * @deprecated should be removed once all the deprecated setters are removed\n   *             from IndexWriter.\n   */\n  @Test @Deprecated\n  public void testIndexWriterSetters() throws Exception {\n    // This test intentionally tests deprecated methods. The purpose is to pass\n    // whatever the user set on IW to IWC, so that if the user calls\n    // iw.getConfig().getXYZ(), he'll get the same value he passed to\n    // iw.setXYZ().\n    IndexWriterConfig conf = new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer());\n    Directory dir = newDirectory();\n    IndexWriter writer = new IndexWriter(dir, conf);\n\n    writer.setSimilarity(new MySimilarity());\n    assertEquals(MySimilarity.class, writer.getConfig().getSimilarity().getClass());\n\n    writer.setMaxBufferedDeleteTerms(4);\n    assertEquals(4, writer.getConfig().getMaxBufferedDeleteTerms());\n\n    writer.setMaxBufferedDocs(10);\n    assertEquals(10, writer.getConfig().getMaxBufferedDocs());\n\n    writer.setMaxFieldLength(10);\n    assertEquals(10, writer.getConfig().getMaxFieldLength());\n    \n    writer.setMergeScheduler(new SerialMergeScheduler());\n    assertEquals(SerialMergeScheduler.class, writer.getConfig().getMergeScheduler().getClass());\n    \n    writer.setRAMBufferSizeMB(1.5);\n    assertEquals(1.5, writer.getConfig().getRAMBufferSizeMB(), 0.0);\n    \n    writer.setTermIndexInterval(40);\n    assertEquals(40, writer.getConfig().getTermIndexInterval());\n    \n    writer.setWriteLockTimeout(100);\n    assertEquals(100, writer.getConfig().getWriteLockTimeout());\n    \n    writer.setMergedSegmentWarmer(new MyWarmer());\n    assertEquals(MyWarmer.class, writer.getConfig().getMergedSegmentWarmer().getClass());\n    \n    writer.setMergePolicy(new LogDocMergePolicy());\n    assertEquals(LogDocMergePolicy.class, writer.getConfig().getMergePolicy().getClass());\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6c18273ea5b3974d2f30117f46f1ae416c28f727":["d572389229127c297dd1fa5ce4758e1cec41e799"],"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c":["1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c"],"7ab99e8c71442b92c320e218141dee04a9b91ce8":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"1f653cfcf159baeaafe5d01682a911e95bba4012":["ab9633cb67e3c0aec3c066147a23a957d6e7ad8c"],"068265517d1fbc623f5aeaee57fcd8df925678e4":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c":["d572389229127c297dd1fa5ce4758e1cec41e799"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d572389229127c297dd1fa5ce4758e1cec41e799":["7ab99e8c71442b92c320e218141dee04a9b91ce8"],"3bb13258feba31ab676502787ab2e1779f129b7a":["068265517d1fbc623f5aeaee57fcd8df925678e4","4e8cc373c801e54cec75daf9f52792cb4b17f536"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4e8cc373c801e54cec75daf9f52792cb4b17f536"],"4e8cc373c801e54cec75daf9f52792cb4b17f536":["068265517d1fbc623f5aeaee57fcd8df925678e4"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"6c18273ea5b3974d2f30117f46f1ae416c28f727":[],"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"7ab99e8c71442b92c320e218141dee04a9b91ce8":["d572389229127c297dd1fa5ce4758e1cec41e799"],"1f653cfcf159baeaafe5d01682a911e95bba4012":["068265517d1fbc623f5aeaee57fcd8df925678e4"],"1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c":["ab9633cb67e3c0aec3c066147a23a957d6e7ad8c"],"068265517d1fbc623f5aeaee57fcd8df925678e4":["3bb13258feba31ab676502787ab2e1779f129b7a","4e8cc373c801e54cec75daf9f52792cb4b17f536"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"d572389229127c297dd1fa5ce4758e1cec41e799":["6c18273ea5b3974d2f30117f46f1ae416c28f727","1a2e46fd1b7cbc52d7d6461a6ef99e7107ae2a9c"],"3bb13258feba31ab676502787ab2e1779f129b7a":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["7ab99e8c71442b92c320e218141dee04a9b91ce8"],"4e8cc373c801e54cec75daf9f52792cb4b17f536":["3bb13258feba31ab676502787ab2e1779f129b7a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["6c18273ea5b3974d2f30117f46f1ae416c28f727","3bb13258feba31ab676502787ab2e1779f129b7a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}