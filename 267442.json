{"path":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrQueryTest#testFacetDateRange().mjava","commits":[{"id":"b4f1e070470c46013e0ab2939d8806159ae002a6","date":1311514829,"type":0,"author":"Martijn van Groningen","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrQueryTest#testFacetDateRange().mjava","pathOld":"/dev/null","sourceNew":"  public void testFacetDateRange() {\n    SolrQuery q = new SolrQuery(\"dog\");\n    Calendar calendar = Calendar.getInstance(Locale.UK);\n    calendar.set(2010, 1, 1);\n    Date start = calendar.getTime();\n    calendar.set(2011, 1, 1);\n    Date end = calendar.getTime();\n    q.addDateRangeFacet(\"field\", start, end, \"+1MONTH\");\n    assertEquals(\"true\", q.get(FacetParams.FACET));\n    assertEquals(\"field\", q.get(FacetParams.FACET_RANGE));\n    assertEquals(DateUtil.getThreadLocalDateFormat().format(start), q.get(\"f.field.\" + FacetParams.FACET_RANGE_START));\n    assertEquals(DateUtil.getThreadLocalDateFormat().format(end), q.get(\"f.field.\" + FacetParams.FACET_RANGE_END));\n    assertEquals(\"+1MONTH\", q.get(\"f.field.\" + FacetParams.FACET_RANGE_GAP));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"197070b7f9191af8b5d8598b579393d4a67e32f0","date":1341843740,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrQueryTest#testFacetDateRange().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrQueryTest#testFacetDateRange().mjava","sourceNew":"  public void testFacetDateRange() {\n    SolrQuery q = new SolrQuery(\"dog\");\n    Calendar calendar = Calendar.getInstance(TimeZone.getTimeZone(\"UTC\"), Locale.UK);\n    calendar.set(2010, 1, 1);\n    Date start = calendar.getTime();\n    calendar.set(2011, 1, 1);\n    Date end = calendar.getTime();\n    q.addDateRangeFacet(\"field\", start, end, \"+1MONTH\");\n    assertEquals(\"true\", q.get(FacetParams.FACET));\n    assertEquals(\"field\", q.get(FacetParams.FACET_RANGE));\n    assertEquals(DateUtil.getThreadLocalDateFormat().format(start), q.get(\"f.field.\" + FacetParams.FACET_RANGE_START));\n    assertEquals(DateUtil.getThreadLocalDateFormat().format(end), q.get(\"f.field.\" + FacetParams.FACET_RANGE_END));\n    assertEquals(\"+1MONTH\", q.get(\"f.field.\" + FacetParams.FACET_RANGE_GAP));\n  }\n\n","sourceOld":"  public void testFacetDateRange() {\n    SolrQuery q = new SolrQuery(\"dog\");\n    Calendar calendar = Calendar.getInstance(Locale.UK);\n    calendar.set(2010, 1, 1);\n    Date start = calendar.getTime();\n    calendar.set(2011, 1, 1);\n    Date end = calendar.getTime();\n    q.addDateRangeFacet(\"field\", start, end, \"+1MONTH\");\n    assertEquals(\"true\", q.get(FacetParams.FACET));\n    assertEquals(\"field\", q.get(FacetParams.FACET_RANGE));\n    assertEquals(DateUtil.getThreadLocalDateFormat().format(start), q.get(\"f.field.\" + FacetParams.FACET_RANGE_START));\n    assertEquals(DateUtil.getThreadLocalDateFormat().format(end), q.get(\"f.field.\" + FacetParams.FACET_RANGE_END));\n    assertEquals(\"+1MONTH\", q.get(\"f.field.\" + FacetParams.FACET_RANGE_GAP));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2acf500f78aa12b92e371fd89c719291986b6b90","date":1341846236,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrQueryTest#testFacetDateRange().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrQueryTest#testFacetDateRange().mjava","sourceNew":"  public void testFacetDateRange() {\n    SolrQuery q = new SolrQuery(\"dog\");\n    Calendar calendar = Calendar.getInstance(TimeZone.getTimeZone(\"UTC\"), Locale.UK);\n    calendar.set(2010, 1, 1);\n    Date start = calendar.getTime();\n    calendar.set(2011, 1, 1);\n    Date end = calendar.getTime();\n    q.addDateRangeFacet(\"field\", start, end, \"+1MONTH\");\n    assertEquals(\"true\", q.get(FacetParams.FACET));\n    assertEquals(\"field\", q.get(FacetParams.FACET_RANGE));\n    assertEquals(DateUtil.getThreadLocalDateFormat().format(start), q.get(\"f.field.\" + FacetParams.FACET_RANGE_START));\n    assertEquals(DateUtil.getThreadLocalDateFormat().format(end), q.get(\"f.field.\" + FacetParams.FACET_RANGE_END));\n    assertEquals(\"+1MONTH\", q.get(\"f.field.\" + FacetParams.FACET_RANGE_GAP));\n  }\n\n","sourceOld":"  public void testFacetDateRange() {\n    SolrQuery q = new SolrQuery(\"dog\");\n    Calendar calendar = Calendar.getInstance(Locale.UK);\n    calendar.set(2010, 1, 1);\n    Date start = calendar.getTime();\n    calendar.set(2011, 1, 1);\n    Date end = calendar.getTime();\n    q.addDateRangeFacet(\"field\", start, end, \"+1MONTH\");\n    assertEquals(\"true\", q.get(FacetParams.FACET));\n    assertEquals(\"field\", q.get(FacetParams.FACET_RANGE));\n    assertEquals(DateUtil.getThreadLocalDateFormat().format(start), q.get(\"f.field.\" + FacetParams.FACET_RANGE_START));\n    assertEquals(DateUtil.getThreadLocalDateFormat().format(end), q.get(\"f.field.\" + FacetParams.FACET_RANGE_END));\n    assertEquals(\"+1MONTH\", q.get(\"f.field.\" + FacetParams.FACET_RANGE_GAP));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"46d8ada1fff8d18cb197c38c7983225162599948","date":1341853497,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrQueryTest#testFacetDateRange().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrQueryTest#testFacetDateRange().mjava","sourceNew":"  public void testFacetDateRange() {\n    SolrQuery q = new SolrQuery(\"dog\");\n    Calendar calendar = Calendar.getInstance(TimeZone.getTimeZone(\"UTC\"), Locale.UK);\n    calendar.set(2010, 1, 1);\n    Date start = calendar.getTime();\n    calendar.set(2011, 1, 1);\n    Date end = calendar.getTime();\n    q.addDateRangeFacet(\"field\", start, end, \"+1MONTH\");\n    assertEquals(\"true\", q.get(FacetParams.FACET));\n    assertEquals(\"field\", q.get(FacetParams.FACET_RANGE));\n    assertEquals(DateUtil.getThreadLocalDateFormat().format(start), q.get(\"f.field.\" + FacetParams.FACET_RANGE_START));\n    assertEquals(DateUtil.getThreadLocalDateFormat().format(end), q.get(\"f.field.\" + FacetParams.FACET_RANGE_END));\n    assertEquals(\"+1MONTH\", q.get(\"f.field.\" + FacetParams.FACET_RANGE_GAP));\n  }\n\n","sourceOld":"  public void testFacetDateRange() {\n    SolrQuery q = new SolrQuery(\"dog\");\n    Calendar calendar = Calendar.getInstance(Locale.UK);\n    calendar.set(2010, 1, 1);\n    Date start = calendar.getTime();\n    calendar.set(2011, 1, 1);\n    Date end = calendar.getTime();\n    q.addDateRangeFacet(\"field\", start, end, \"+1MONTH\");\n    assertEquals(\"true\", q.get(FacetParams.FACET));\n    assertEquals(\"field\", q.get(FacetParams.FACET_RANGE));\n    assertEquals(DateUtil.getThreadLocalDateFormat().format(start), q.get(\"f.field.\" + FacetParams.FACET_RANGE_START));\n    assertEquals(DateUtil.getThreadLocalDateFormat().format(end), q.get(\"f.field.\" + FacetParams.FACET_RANGE_END));\n    assertEquals(\"+1MONTH\", q.get(\"f.field.\" + FacetParams.FACET_RANGE_GAP));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrQueryTest#testFacetDateRange().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrQueryTest#testFacetDateRange().mjava","sourceNew":"  public void testFacetDateRange() {\n    SolrQuery q = new SolrQuery(\"dog\");\n    Calendar calendar = Calendar.getInstance(TimeZone.getTimeZone(\"UTC\"), Locale.UK);\n    calendar.set(2010, 1, 1);\n    Date start = calendar.getTime();\n    calendar.set(2011, 1, 1);\n    Date end = calendar.getTime();\n    q.addDateRangeFacet(\"field\", start, end, \"+1MONTH\");\n    assertEquals(\"true\", q.get(FacetParams.FACET));\n    assertEquals(\"field\", q.get(FacetParams.FACET_RANGE));\n    assertEquals(DateUtil.getThreadLocalDateFormat().format(start), q.get(\"f.field.\" + FacetParams.FACET_RANGE_START));\n    assertEquals(DateUtil.getThreadLocalDateFormat().format(end), q.get(\"f.field.\" + FacetParams.FACET_RANGE_END));\n    assertEquals(\"+1MONTH\", q.get(\"f.field.\" + FacetParams.FACET_RANGE_GAP));\n  }\n\n","sourceOld":"  public void testFacetDateRange() {\n    SolrQuery q = new SolrQuery(\"dog\");\n    Calendar calendar = Calendar.getInstance(Locale.UK);\n    calendar.set(2010, 1, 1);\n    Date start = calendar.getTime();\n    calendar.set(2011, 1, 1);\n    Date end = calendar.getTime();\n    q.addDateRangeFacet(\"field\", start, end, \"+1MONTH\");\n    assertEquals(\"true\", q.get(FacetParams.FACET));\n    assertEquals(\"field\", q.get(FacetParams.FACET_RANGE));\n    assertEquals(DateUtil.getThreadLocalDateFormat().format(start), q.get(\"f.field.\" + FacetParams.FACET_RANGE_START));\n    assertEquals(DateUtil.getThreadLocalDateFormat().format(end), q.get(\"f.field.\" + FacetParams.FACET_RANGE_END));\n    assertEquals(\"+1MONTH\", q.get(\"f.field.\" + FacetParams.FACET_RANGE_GAP));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3f6c7717a0f1decd1668144537943efcc70cd95","date":1459359762,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrQueryTest#testFacetDateRange().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrQueryTest#testFacetDateRange().mjava","sourceNew":"  public void testFacetDateRange() {\n    SolrQuery q = new SolrQuery(\"dog\");\n    Calendar calendar = Calendar.getInstance(TimeZone.getTimeZone(\"UTC\"), Locale.UK);\n    calendar.set(2010, 1, 1);\n    Date start = calendar.getTime();\n    calendar.set(2011, 1, 1);\n    Date end = calendar.getTime();\n    q.addDateRangeFacet(\"field\", start, end, \"+1MONTH\");\n    assertEquals(\"true\", q.get(FacetParams.FACET));\n    assertEquals(\"field\", q.get(FacetParams.FACET_RANGE));\n    assertEquals(start.toInstant().toString(), q.get(\"f.field.\" + FacetParams.FACET_RANGE_START));\n    assertEquals(end.toInstant().toString(), q.get(\"f.field.\" + FacetParams.FACET_RANGE_END));\n    assertEquals(\"+1MONTH\", q.get(\"f.field.\" + FacetParams.FACET_RANGE_GAP));\n  }\n\n","sourceOld":"  public void testFacetDateRange() {\n    SolrQuery q = new SolrQuery(\"dog\");\n    Calendar calendar = Calendar.getInstance(TimeZone.getTimeZone(\"UTC\"), Locale.UK);\n    calendar.set(2010, 1, 1);\n    Date start = calendar.getTime();\n    calendar.set(2011, 1, 1);\n    Date end = calendar.getTime();\n    q.addDateRangeFacet(\"field\", start, end, \"+1MONTH\");\n    assertEquals(\"true\", q.get(FacetParams.FACET));\n    assertEquals(\"field\", q.get(FacetParams.FACET_RANGE));\n    assertEquals(DateUtil.getThreadLocalDateFormat().format(start), q.get(\"f.field.\" + FacetParams.FACET_RANGE_START));\n    assertEquals(DateUtil.getThreadLocalDateFormat().format(end), q.get(\"f.field.\" + FacetParams.FACET_RANGE_END));\n    assertEquals(\"+1MONTH\", q.get(\"f.field.\" + FacetParams.FACET_RANGE_GAP));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3f6c7717a0f1decd1668144537943efcc70cd95":["2acf500f78aa12b92e371fd89c719291986b6b90"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["b4f1e070470c46013e0ab2939d8806159ae002a6","2acf500f78aa12b92e371fd89c719291986b6b90"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b4f1e070470c46013e0ab2939d8806159ae002a6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"2acf500f78aa12b92e371fd89c719291986b6b90":["b4f1e070470c46013e0ab2939d8806159ae002a6","197070b7f9191af8b5d8598b579393d4a67e32f0"],"197070b7f9191af8b5d8598b579393d4a67e32f0":["b4f1e070470c46013e0ab2939d8806159ae002a6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d3f6c7717a0f1decd1668144537943efcc70cd95"],"46d8ada1fff8d18cb197c38c7983225162599948":["b4f1e070470c46013e0ab2939d8806159ae002a6","2acf500f78aa12b92e371fd89c719291986b6b90"]},"commit2Childs":{"d3f6c7717a0f1decd1668144537943efcc70cd95":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b4f1e070470c46013e0ab2939d8806159ae002a6"],"b4f1e070470c46013e0ab2939d8806159ae002a6":["fe33227f6805edab2036cbb80645cc4e2d1fa424","2acf500f78aa12b92e371fd89c719291986b6b90","197070b7f9191af8b5d8598b579393d4a67e32f0","46d8ada1fff8d18cb197c38c7983225162599948"],"2acf500f78aa12b92e371fd89c719291986b6b90":["d3f6c7717a0f1decd1668144537943efcc70cd95","fe33227f6805edab2036cbb80645cc4e2d1fa424","46d8ada1fff8d18cb197c38c7983225162599948"],"197070b7f9191af8b5d8598b579393d4a67e32f0":["2acf500f78aa12b92e371fd89c719291986b6b90"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"46d8ada1fff8d18cb197c38c7983225162599948":[]},"heads":["fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817","46d8ada1fff8d18cb197c38c7983225162599948"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}