{"path":"lucene/src/java/org/apache/lucene/analysis/NumericTokenStream#setFloatValue(float).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/analysis/NumericTokenStream#setFloatValue(float).mjava","pathOld":"src/java/org/apache/lucene/analysis/NumericTokenStream#setFloatValue(float).mjava","sourceNew":"  /**\n   * Initializes the token stream with the supplied <code>float</code> value.\n   * @param value the value, for which this TokenStream should enumerate tokens.\n   * @return this instance, because of this you can use it the following way:\n   * <code>new Field(name, new NumericTokenStream(precisionStep).setFloatValue(value))</code>\n   */\n  public NumericTokenStream setFloatValue(final float value) {\n    this.value = NumericUtils.floatToSortableInt(value);\n    valSize = 32;\n    shift = 0;\n    return this;\n  }\n\n","sourceOld":"  /**\n   * Initializes the token stream with the supplied <code>float</code> value.\n   * @param value the value, for which this TokenStream should enumerate tokens.\n   * @return this instance, because of this you can use it the following way:\n   * <code>new Field(name, new NumericTokenStream(precisionStep).setFloatValue(value))</code>\n   */\n  public NumericTokenStream setFloatValue(final float value) {\n    this.value = NumericUtils.floatToSortableInt(value);\n    valSize = 32;\n    shift = 0;\n    return this;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"955c32f886db6f6356c9fcdea6b1f1cb4effda24","date":1270581567,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/analysis/NumericTokenStream#setFloatValue(float).mjava","pathOld":"lucene/src/java/org/apache/lucene/analysis/NumericTokenStream#setFloatValue(float).mjava","sourceNew":"  /**\n   * Initializes the token stream with the supplied <code>float</code> value.\n   * @param value the value, for which this TokenStream should enumerate tokens.\n   * @return this instance, because of this you can use it the following way:\n   * <code>new Field(name, new NumericTokenStream(precisionStep).setFloatValue(value))</code>\n   */\n  public NumericTokenStream setFloatValue(final float value) {\n    this.value = NumericUtils.floatToSortableInt(value);\n    valSize = 32;\n    shift = -precisionStep;\n    return this;\n  }\n\n","sourceOld":"  /**\n   * Initializes the token stream with the supplied <code>float</code> value.\n   * @param value the value, for which this TokenStream should enumerate tokens.\n   * @return this instance, because of this you can use it the following way:\n   * <code>new Field(name, new NumericTokenStream(precisionStep).setFloatValue(value))</code>\n   */\n  public NumericTokenStream setFloatValue(final float value) {\n    this.value = NumericUtils.floatToSortableInt(value);\n    valSize = 32;\n    shift = 0;\n    return this;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"045811a5786836715a746b4c14522fc6c96c6607","date":1295463542,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/analysis/NumericTokenStream#setFloatValue(float).mjava","pathOld":"lucene/src/java/org/apache/lucene/analysis/NumericTokenStream#setFloatValue(float).mjava","sourceNew":"  /**\n   * Initializes the token stream with the supplied <code>float</code> value.\n   * @param value the value, for which this TokenStream should enumerate tokens.\n   * @return this instance, because of this you can use it the following way:\n   * <code>new Field(name, new NumericTokenStream(precisionStep).setFloatValue(value))</code>\n   */\n  public NumericTokenStream setFloatValue(final float value) {\n    numericAtt.init(NumericUtils.floatToSortableInt(value), valSize = 32, precisionStep);\n    numericAtt.setShift(-precisionStep);\n    return this;\n  }\n\n","sourceOld":"  /**\n   * Initializes the token stream with the supplied <code>float</code> value.\n   * @param value the value, for which this TokenStream should enumerate tokens.\n   * @return this instance, because of this you can use it the following way:\n   * <code>new Field(name, new NumericTokenStream(precisionStep).setFloatValue(value))</code>\n   */\n  public NumericTokenStream setFloatValue(final float value) {\n    this.value = NumericUtils.floatToSortableInt(value);\n    valSize = 32;\n    shift = -precisionStep;\n    return this;\n  }\n\n","bugFix":null,"bugIntro":["d37d9627738304db0500dec1c44453fcbb3f5f91"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d37d9627738304db0500dec1c44453fcbb3f5f91","date":1295479243,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/analysis/NumericTokenStream#setFloatValue(float).mjava","pathOld":"lucene/src/java/org/apache/lucene/analysis/NumericTokenStream#setFloatValue(float).mjava","sourceNew":"  /**\n   * Initializes the token stream with the supplied <code>float</code> value.\n   * @param value the value, for which this TokenStream should enumerate tokens.\n   * @return this instance, because of this you can use it the following way:\n   * <code>new Field(name, new NumericTokenStream(precisionStep).setFloatValue(value))</code>\n   */\n  public NumericTokenStream setFloatValue(final float value) {\n    numericAtt.init(NumericUtils.floatToSortableInt(value), valSize = 32, precisionStep, -precisionStep);\n    return this;\n  }\n\n","sourceOld":"  /**\n   * Initializes the token stream with the supplied <code>float</code> value.\n   * @param value the value, for which this TokenStream should enumerate tokens.\n   * @return this instance, because of this you can use it the following way:\n   * <code>new Field(name, new NumericTokenStream(precisionStep).setFloatValue(value))</code>\n   */\n  public NumericTokenStream setFloatValue(final float value) {\n    numericAtt.init(NumericUtils.floatToSortableInt(value), valSize = 32, precisionStep);\n    numericAtt.setShift(-precisionStep);\n    return this;\n  }\n\n","bugFix":["045811a5786836715a746b4c14522fc6c96c6607"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e79a6d080bdd5b2a8f56342cf571b5476de04180","date":1295638686,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/analysis/NumericTokenStream#setFloatValue(float).mjava","pathOld":"lucene/src/java/org/apache/lucene/analysis/NumericTokenStream#setFloatValue(float).mjava","sourceNew":"  /**\n   * Initializes the token stream with the supplied <code>float</code> value.\n   * @param value the value, for which this TokenStream should enumerate tokens.\n   * @return this instance, because of this you can use it the following way:\n   * <code>new Field(name, new NumericTokenStream(precisionStep).setFloatValue(value))</code>\n   */\n  public NumericTokenStream setFloatValue(final float value) {\n    numericAtt.init(NumericUtils.floatToSortableInt(value), valSize = 32, precisionStep, -precisionStep);\n    return this;\n  }\n\n","sourceOld":"  /**\n   * Initializes the token stream with the supplied <code>float</code> value.\n   * @param value the value, for which this TokenStream should enumerate tokens.\n   * @return this instance, because of this you can use it the following way:\n   * <code>new Field(name, new NumericTokenStream(precisionStep).setFloatValue(value))</code>\n   */\n  public NumericTokenStream setFloatValue(final float value) {\n    this.value = NumericUtils.floatToSortableInt(value);\n    valSize = 32;\n    shift = -precisionStep;\n    return this;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/analysis/NumericTokenStream#setFloatValue(float).mjava","pathOld":"lucene/src/java/org/apache/lucene/analysis/NumericTokenStream#setFloatValue(float).mjava","sourceNew":"  /**\n   * Initializes the token stream with the supplied <code>float</code> value.\n   * @param value the value, for which this TokenStream should enumerate tokens.\n   * @return this instance, because of this you can use it the following way:\n   * <code>new Field(name, new NumericTokenStream(precisionStep).setFloatValue(value))</code>\n   */\n  public NumericTokenStream setFloatValue(final float value) {\n    numericAtt.init(NumericUtils.floatToSortableInt(value), valSize = 32, precisionStep, -precisionStep);\n    return this;\n  }\n\n","sourceOld":"  /**\n   * Initializes the token stream with the supplied <code>float</code> value.\n   * @param value the value, for which this TokenStream should enumerate tokens.\n   * @return this instance, because of this you can use it the following way:\n   * <code>new Field(name, new NumericTokenStream(precisionStep).setFloatValue(value))</code>\n   */\n  public NumericTokenStream setFloatValue(final float value) {\n    this.value = NumericUtils.floatToSortableInt(value);\n    valSize = 32;\n    shift = -precisionStep;\n    return this;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/analysis/NumericTokenStream#setFloatValue(float).mjava","pathOld":"lucene/src/java/org/apache/lucene/analysis/NumericTokenStream#setFloatValue(float).mjava","sourceNew":"  /**\n   * Initializes the token stream with the supplied <code>float</code> value.\n   * @param value the value, for which this TokenStream should enumerate tokens.\n   * @return this instance, because of this you can use it the following way:\n   * <code>new Field(name, new NumericTokenStream(precisionStep).setFloatValue(value))</code>\n   */\n  public NumericTokenStream setFloatValue(final float value) {\n    numericAtt.init(NumericUtils.floatToSortableInt(value), valSize = 32, precisionStep, -precisionStep);\n    return this;\n  }\n\n","sourceOld":"  /**\n   * Initializes the token stream with the supplied <code>float</code> value.\n   * @param value the value, for which this TokenStream should enumerate tokens.\n   * @return this instance, because of this you can use it the following way:\n   * <code>new Field(name, new NumericTokenStream(precisionStep).setFloatValue(value))</code>\n   */\n  public NumericTokenStream setFloatValue(final float value) {\n    numericAtt.init(NumericUtils.floatToSortableInt(value), valSize = 32, precisionStep, -precisionStep);\n    return this;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"045811a5786836715a746b4c14522fc6c96c6607":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["d37d9627738304db0500dec1c44453fcbb3f5f91"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["955c32f886db6f6356c9fcdea6b1f1cb4effda24","d37d9627738304db0500dec1c44453fcbb3f5f91"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"e79a6d080bdd5b2a8f56342cf571b5476de04180":["955c32f886db6f6356c9fcdea6b1f1cb4effda24","d37d9627738304db0500dec1c44453fcbb3f5f91"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"d37d9627738304db0500dec1c44453fcbb3f5f91":["045811a5786836715a746b4c14522fc6c96c6607"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"045811a5786836715a746b4c14522fc6c96c6607":["d37d9627738304db0500dec1c44453fcbb3f5f91"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["045811a5786836715a746b4c14522fc6c96c6607","29ef99d61cda9641b6250bf9567329a6e65f901d","e79a6d080bdd5b2a8f56342cf571b5476de04180"],"e79a6d080bdd5b2a8f56342cf571b5476de04180":[],"d37d9627738304db0500dec1c44453fcbb3f5f91":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","29ef99d61cda9641b6250bf9567329a6e65f901d","e79a6d080bdd5b2a8f56342cf571b5476de04180"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["29ef99d61cda9641b6250bf9567329a6e65f901d","e79a6d080bdd5b2a8f56342cf571b5476de04180","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}