{"path":"contrib/queryparser/src/test/org/apache/lucene/queryParser/spans/TestSpanQueryParser#testQueryValidator().mjava","commits":[{"id":"b955a87bc7c5daeda1ed56821ec0bec2e8789e44","date":1249270724,"type":0,"author":"Michael Busch","isMerge":false,"pathNew":"contrib/queryparser/src/test/org/apache/lucene/queryParser/spans/TestSpanQueryParser#testQueryValidator().mjava","pathOld":"/dev/null","sourceNew":"  public void testQueryValidator() throws QueryNodeException {\n\n    try {\n      getSpanQuery(\"term*\");\n      fail(\"QueryNodeException was expected, wildcard queries should not be supported\");\n\n    } catch (QueryNodeException ex) {\n      // expected exception\n    }\n\n    try {\n      getSpanQuery(\"[a TO z]\");\n      fail(\"QueryNodeException was expected, range queries should not be supported\");\n\n    } catch (QueryNodeException ex) {\n      // expected exception\n    }\n\n    try {\n      getSpanQuery(\"a~0.5\");\n      fail(\"QueryNodeException was expected, boost queries should not be supported\");\n\n    } catch (QueryNodeException ex) {\n      // expected exception\n    }\n\n    try {\n      getSpanQuery(\"a^0.5\");\n      fail(\"QueryNodeException was expected, fuzzy queries should not be supported\");\n\n    } catch (QueryNodeException ex) {\n      // expected exception\n    }\n\n    try {\n      getSpanQuery(\"\\\"a b\\\"\");\n      fail(\"QueryNodeException was expected, quoted queries should not be supported\");\n\n    } catch (QueryNodeException ex) {\n      // expected exception\n    }\n\n    try {\n      getSpanQuery(\"(a b)\");\n      fail(\"QueryNodeException was expected, parenthesized queries should not be supported\");\n\n    } catch (QueryNodeException ex) {\n      // expected exception\n    }\n\n    try {\n      getSpanQuery(\"a AND b\");\n      fail(\"QueryNodeException was expected, and queries should not be supported\");\n\n    } catch (QueryNodeException ex) {\n      // expected exception\n    }\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["05fe562aa248790944d43cdd478f512572835ba0"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/spans/TestSpanQueryParser#testQueryValidator().mjava","pathOld":"contrib/queryparser/src/test/org/apache/lucene/queryParser/spans/TestSpanQueryParser#testQueryValidator().mjava","sourceNew":"  public void testQueryValidator() throws QueryNodeException {\n\n    try {\n      getSpanQuery(\"term*\");\n      fail(\"QueryNodeException was expected, wildcard queries should not be supported\");\n\n    } catch (QueryNodeException ex) {\n      // expected exception\n    }\n\n    try {\n      getSpanQuery(\"[a TO z]\");\n      fail(\"QueryNodeException was expected, range queries should not be supported\");\n\n    } catch (QueryNodeException ex) {\n      // expected exception\n    }\n\n    try {\n      getSpanQuery(\"a~0.5\");\n      fail(\"QueryNodeException was expected, boost queries should not be supported\");\n\n    } catch (QueryNodeException ex) {\n      // expected exception\n    }\n\n    try {\n      getSpanQuery(\"a^0.5\");\n      fail(\"QueryNodeException was expected, fuzzy queries should not be supported\");\n\n    } catch (QueryNodeException ex) {\n      // expected exception\n    }\n\n    try {\n      getSpanQuery(\"\\\"a b\\\"\");\n      fail(\"QueryNodeException was expected, quoted queries should not be supported\");\n\n    } catch (QueryNodeException ex) {\n      // expected exception\n    }\n\n    try {\n      getSpanQuery(\"(a b)\");\n      fail(\"QueryNodeException was expected, parenthesized queries should not be supported\");\n\n    } catch (QueryNodeException ex) {\n      // expected exception\n    }\n\n    try {\n      getSpanQuery(\"a AND b\");\n      fail(\"QueryNodeException was expected, and queries should not be supported\");\n\n    } catch (QueryNodeException ex) {\n      // expected exception\n    }\n\n  }\n\n","sourceOld":"  public void testQueryValidator() throws QueryNodeException {\n\n    try {\n      getSpanQuery(\"term*\");\n      fail(\"QueryNodeException was expected, wildcard queries should not be supported\");\n\n    } catch (QueryNodeException ex) {\n      // expected exception\n    }\n\n    try {\n      getSpanQuery(\"[a TO z]\");\n      fail(\"QueryNodeException was expected, range queries should not be supported\");\n\n    } catch (QueryNodeException ex) {\n      // expected exception\n    }\n\n    try {\n      getSpanQuery(\"a~0.5\");\n      fail(\"QueryNodeException was expected, boost queries should not be supported\");\n\n    } catch (QueryNodeException ex) {\n      // expected exception\n    }\n\n    try {\n      getSpanQuery(\"a^0.5\");\n      fail(\"QueryNodeException was expected, fuzzy queries should not be supported\");\n\n    } catch (QueryNodeException ex) {\n      // expected exception\n    }\n\n    try {\n      getSpanQuery(\"\\\"a b\\\"\");\n      fail(\"QueryNodeException was expected, quoted queries should not be supported\");\n\n    } catch (QueryNodeException ex) {\n      // expected exception\n    }\n\n    try {\n      getSpanQuery(\"(a b)\");\n      fail(\"QueryNodeException was expected, parenthesized queries should not be supported\");\n\n    } catch (QueryNodeException ex) {\n      // expected exception\n    }\n\n    try {\n      getSpanQuery(\"a AND b\");\n      fail(\"QueryNodeException was expected, and queries should not be supported\");\n\n    } catch (QueryNodeException ex) {\n      // expected exception\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b955a87bc7c5daeda1ed56821ec0bec2e8789e44":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["b955a87bc7c5daeda1ed56821ec0bec2e8789e44"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b955a87bc7c5daeda1ed56821ec0bec2e8789e44"],"b955a87bc7c5daeda1ed56821ec0bec2e8789e44":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}