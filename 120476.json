{"path":"solr/core/src/test/org/apache/solr/rest/TestRestManager#testManagedResourceRegistrationAndInitialization().mjava","commits":[{"id":"afb6bf9ce227ab6aac5068547e286ecc958b8b9d","date":1394661169,"type":0,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/rest/TestRestManager#testManagedResourceRegistrationAndInitialization().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Test RestManager initialization and handling of registered ManagedResources. \n   */\n  @Test\n  public void testManagedResourceRegistrationAndInitialization() throws Exception {\n    // first, we need to register some ManagedResources, which is done with the registry\n    // provided by the SolrResourceLoader\n    SolrResourceLoader loader = new SolrResourceLoader(\"./\");\n    \n    RestManager.Registry registry = loader.getManagedResourceRegistry();\n    assertNotNull(\"Expected a non-null RestManager.Registry from the SolrResourceLoader!\", registry);\n    \n    String resourceId = \"/config/test/foo\";\n    registry.registerManagedResource(resourceId, \n                                     ManagedWordSetResource.class, \n                                     new MockAnalysisComponent());\n    \n    // verify the two different components can register the same ManagedResource in the registry\n    registry.registerManagedResource(resourceId, \n                                     ManagedWordSetResource.class, \n                                     new MockAnalysisComponent());\n    \n    // verify we can register another resource under a different resourceId\n    registry.registerManagedResource(\"/config/test/foo2\", \n                                     ManagedWordSetResource.class, \n                                     new MockAnalysisComponent());\n\n    ignoreException(\"REST API path .* already registered to instances of \");\n\n    String failureMessage = \"Should not be able to register a different\"\n                          + \" ManagedResource implementation for {}\";\n\n    // verify that some other hooligan cannot register another type\n    // of ManagedResource implementation under the same resourceId\n    try {\n      registry.registerManagedResource(resourceId, \n                                       BogusManagedResource.class, \n                                       new MockAnalysisComponent());\n      fail(String.format(Locale.ROOT, failureMessage, resourceId));\n    } catch (SolrException solrExc) {\n      // expected output\n    }\n\n    resetExceptionIgnores();\n\n    ignoreException(\"is a reserved endpoint used by the Solr REST API!\");\n\n    failureMessage = \"Should not be able to register reserved endpoint {}\";\n\n    // verify that already-spoken-for REST API endpoints can't be registered\n    Set<String> reservedEndpoints = registry.getReservedEndpoints();\n    assertTrue(reservedEndpoints.size() > 2);\n    assertTrue(reservedEndpoints.contains(RestManager.SCHEMA_BASE_PATH + RestManager.MANAGED_ENDPOINT));\n    assertTrue(reservedEndpoints.contains(RestManager.CONFIG_BASE_PATH + RestManager.MANAGED_ENDPOINT));\n    for (String endpoint : reservedEndpoints) {\n\n      try {\n        registry.registerManagedResource\n            (endpoint, BogusManagedResource.class, new MockAnalysisComponent());\n        fail(String.format(Locale.ROOT, failureMessage, endpoint));\n      } catch (SolrException solrExc) {\n        // expected output\n      }\n\n      // also try to register already-spoken-for REST API endpoints with a child segment\n      endpoint += \"/kid\";\n      try {\n        registry.registerManagedResource\n            (endpoint, BogusManagedResource.class, new MockAnalysisComponent());\n        fail(String.format(Locale.ROOT, failureMessage, endpoint));\n      } catch (SolrException solrExc) {\n        // expected output\n      }\n    }\n\n    resetExceptionIgnores();\n    \n    NamedList<String> initArgs = new NamedList<>();\n    RestManager restManager = new RestManager();\n    restManager.init(loader, initArgs, new ManagedResourceStorage.InMemoryStorageIO());\n    \n    ManagedResource res = restManager.getManagedResource(resourceId);\n    assertTrue(res instanceof ManagedWordSetResource);    \n    assertEquals(res.getResourceId(), resourceId);\n    \n    restManager.getManagedResource(\"/config/test/foo2\"); // exception if it isn't registered\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"531fe719c7218235a679452eb3d137bfd8fc6af1","date":1415191086,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/rest/TestRestManager#testManagedResourceRegistrationAndInitialization().mjava","pathOld":"solr/core/src/test/org/apache/solr/rest/TestRestManager#testManagedResourceRegistrationAndInitialization().mjava","sourceNew":"  /**\n   * Test RestManager initialization and handling of registered ManagedResources. \n   */\n  @Test\n  @Ignore\n  public void testManagedResourceRegistrationAndInitialization() throws Exception {\n    // first, we need to register some ManagedResources, which is done with the registry\n    // provided by the SolrResourceLoader\n    SolrResourceLoader loader = new SolrResourceLoader(\"./\");\n    \n    RestManager.Registry registry = loader.getManagedResourceRegistry();\n    assertNotNull(\"Expected a non-null RestManager.Registry from the SolrResourceLoader!\", registry);\n    \n    String resourceId = \"/config/test/foo\";\n    registry.registerManagedResource(resourceId, \n                                     ManagedWordSetResource.class, \n                                     new MockAnalysisComponent());\n    \n    // verify the two different components can register the same ManagedResource in the registry\n    registry.registerManagedResource(resourceId, \n                                     ManagedWordSetResource.class, \n                                     new MockAnalysisComponent());\n    \n    // verify we can register another resource under a different resourceId\n    registry.registerManagedResource(\"/config/test/foo2\", \n                                     ManagedWordSetResource.class, \n                                     new MockAnalysisComponent());\n\n    ignoreException(\"REST API path .* already registered to instances of \");\n\n    String failureMessage = \"Should not be able to register a different\"\n                          + \" ManagedResource implementation for {}\";\n\n    // verify that some other hooligan cannot register another type\n    // of ManagedResource implementation under the same resourceId\n    try {\n      registry.registerManagedResource(resourceId, \n                                       BogusManagedResource.class, \n                                       new MockAnalysisComponent());\n      fail(String.format(Locale.ROOT, failureMessage, resourceId));\n    } catch (SolrException solrExc) {\n      // expected output\n    }\n\n    resetExceptionIgnores();\n\n    ignoreException(\"is a reserved endpoint used by the Solr REST API!\");\n\n    failureMessage = \"Should not be able to register reserved endpoint {}\";\n\n    // verify that already-spoken-for REST API endpoints can't be registered\n    Set<String> reservedEndpoints = registry.getReservedEndpoints();\n    assertTrue(reservedEndpoints.size() > 2);\n    assertTrue(reservedEndpoints.contains(RestManager.SCHEMA_BASE_PATH + RestManager.MANAGED_ENDPOINT));\n    assertTrue(reservedEndpoints.contains(RestManager.CONFIG_BASE_PATH + RestManager.MANAGED_ENDPOINT));\n    for (String endpoint : reservedEndpoints) {\n\n      try {\n        registry.registerManagedResource\n            (endpoint, BogusManagedResource.class, new MockAnalysisComponent());\n        fail(String.format(Locale.ROOT, failureMessage, endpoint));\n      } catch (SolrException solrExc) {\n        // expected output\n      }\n\n      // also try to register already-spoken-for REST API endpoints with a child segment\n      endpoint += \"/kid\";\n      try {\n        registry.registerManagedResource\n            (endpoint, BogusManagedResource.class, new MockAnalysisComponent());\n        fail(String.format(Locale.ROOT, failureMessage, endpoint));\n      } catch (SolrException solrExc) {\n        // expected output\n      }\n    }\n\n    resetExceptionIgnores();\n    \n    NamedList<String> initArgs = new NamedList<>();\n    RestManager restManager = new RestManager();\n    restManager.init(loader, initArgs, new ManagedResourceStorage.InMemoryStorageIO());\n    \n    ManagedResource res = restManager.getManagedResource(resourceId);\n    assertTrue(res instanceof ManagedWordSetResource);    \n    assertEquals(res.getResourceId(), resourceId);\n    \n    restManager.getManagedResource(\"/config/test/foo2\"); // exception if it isn't registered\n  }\n\n","sourceOld":"  /**\n   * Test RestManager initialization and handling of registered ManagedResources. \n   */\n  @Test\n  public void testManagedResourceRegistrationAndInitialization() throws Exception {\n    // first, we need to register some ManagedResources, which is done with the registry\n    // provided by the SolrResourceLoader\n    SolrResourceLoader loader = new SolrResourceLoader(\"./\");\n    \n    RestManager.Registry registry = loader.getManagedResourceRegistry();\n    assertNotNull(\"Expected a non-null RestManager.Registry from the SolrResourceLoader!\", registry);\n    \n    String resourceId = \"/config/test/foo\";\n    registry.registerManagedResource(resourceId, \n                                     ManagedWordSetResource.class, \n                                     new MockAnalysisComponent());\n    \n    // verify the two different components can register the same ManagedResource in the registry\n    registry.registerManagedResource(resourceId, \n                                     ManagedWordSetResource.class, \n                                     new MockAnalysisComponent());\n    \n    // verify we can register another resource under a different resourceId\n    registry.registerManagedResource(\"/config/test/foo2\", \n                                     ManagedWordSetResource.class, \n                                     new MockAnalysisComponent());\n\n    ignoreException(\"REST API path .* already registered to instances of \");\n\n    String failureMessage = \"Should not be able to register a different\"\n                          + \" ManagedResource implementation for {}\";\n\n    // verify that some other hooligan cannot register another type\n    // of ManagedResource implementation under the same resourceId\n    try {\n      registry.registerManagedResource(resourceId, \n                                       BogusManagedResource.class, \n                                       new MockAnalysisComponent());\n      fail(String.format(Locale.ROOT, failureMessage, resourceId));\n    } catch (SolrException solrExc) {\n      // expected output\n    }\n\n    resetExceptionIgnores();\n\n    ignoreException(\"is a reserved endpoint used by the Solr REST API!\");\n\n    failureMessage = \"Should not be able to register reserved endpoint {}\";\n\n    // verify that already-spoken-for REST API endpoints can't be registered\n    Set<String> reservedEndpoints = registry.getReservedEndpoints();\n    assertTrue(reservedEndpoints.size() > 2);\n    assertTrue(reservedEndpoints.contains(RestManager.SCHEMA_BASE_PATH + RestManager.MANAGED_ENDPOINT));\n    assertTrue(reservedEndpoints.contains(RestManager.CONFIG_BASE_PATH + RestManager.MANAGED_ENDPOINT));\n    for (String endpoint : reservedEndpoints) {\n\n      try {\n        registry.registerManagedResource\n            (endpoint, BogusManagedResource.class, new MockAnalysisComponent());\n        fail(String.format(Locale.ROOT, failureMessage, endpoint));\n      } catch (SolrException solrExc) {\n        // expected output\n      }\n\n      // also try to register already-spoken-for REST API endpoints with a child segment\n      endpoint += \"/kid\";\n      try {\n        registry.registerManagedResource\n            (endpoint, BogusManagedResource.class, new MockAnalysisComponent());\n        fail(String.format(Locale.ROOT, failureMessage, endpoint));\n      } catch (SolrException solrExc) {\n        // expected output\n      }\n    }\n\n    resetExceptionIgnores();\n    \n    NamedList<String> initArgs = new NamedList<>();\n    RestManager restManager = new RestManager();\n    restManager.init(loader, initArgs, new ManagedResourceStorage.InMemoryStorageIO());\n    \n    ManagedResource res = restManager.getManagedResource(resourceId);\n    assertTrue(res instanceof ManagedWordSetResource);    \n    assertEquals(res.getResourceId(), resourceId);\n    \n    restManager.getManagedResource(\"/config/test/foo2\"); // exception if it isn't registered\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"858c0f62e7b20002e4d94702c510512fb6292988","date":1417427955,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/rest/TestRestManager#testManagedResourceRegistrationAndInitialization().mjava","pathOld":"solr/core/src/test/org/apache/solr/rest/TestRestManager#testManagedResourceRegistrationAndInitialization().mjava","sourceNew":"  /**\n   * Test RestManager initialization and handling of registered ManagedResources. \n   */\n  @Test\n  @Ignore\n  public void testManagedResourceRegistrationAndInitialization() throws Exception {\n    // first, we need to register some ManagedResources, which is done with the registry\n    // provided by the SolrResourceLoader\n    SolrResourceLoader loader = new SolrResourceLoader(\"./\");\n    \n    RestManager.Registry registry = loader.getManagedResourceRegistry();\n    assertNotNull(\"Expected a non-null RestManager.Registry from the SolrResourceLoader!\", registry);\n    \n    String resourceId = \"/config/test/foo\";\n    registry.registerManagedResource(resourceId, \n                                     ManagedWordSetResource.class, \n                                     new MockAnalysisComponent());\n    \n    // verify the two different components can register the same ManagedResource in the registry\n    registry.registerManagedResource(resourceId, \n                                     ManagedWordSetResource.class, \n                                     new MockAnalysisComponent());\n    \n    // verify we can register another resource under a different resourceId\n    registry.registerManagedResource(\"/config/test/foo2\", \n                                     ManagedWordSetResource.class, \n                                     new MockAnalysisComponent());\n\n    ignoreException(\"REST API path .* already registered to instances of \");\n\n    String failureMessage = \"Should not be able to register a different\"\n                          + \" ManagedResource implementation for {}\";\n\n    // verify that some other hooligan cannot register another type\n    // of ManagedResource implementation under the same resourceId\n    try {\n      registry.registerManagedResource(resourceId, \n                                       BogusManagedResource.class, \n                                       new MockAnalysisComponent());\n      fail(String.format(Locale.ROOT, failureMessage, resourceId));\n    } catch (SolrException solrExc) {\n      // expected output\n    }\n\n    resetExceptionIgnores();\n\n    ignoreException(\"is a reserved endpoint used by the Solr REST API!\");\n\n    failureMessage = \"Should not be able to register reserved endpoint {}\";\n\n    // verify that already-spoken-for REST API endpoints can't be registered\n    Set<String> reservedEndpoints = registry.getReservedEndpoints();\n    assertTrue(reservedEndpoints.size() > 2);\n    assertTrue(reservedEndpoints.contains(RestManager.SCHEMA_BASE_PATH + RestManager.MANAGED_ENDPOINT));\n    for (String endpoint : reservedEndpoints) {\n\n      try {\n        registry.registerManagedResource\n            (endpoint, BogusManagedResource.class, new MockAnalysisComponent());\n        fail(String.format(Locale.ROOT, failureMessage, endpoint));\n      } catch (SolrException solrExc) {\n        // expected output\n      }\n\n      // also try to register already-spoken-for REST API endpoints with a child segment\n      endpoint += \"/kid\";\n      try {\n        registry.registerManagedResource\n            (endpoint, BogusManagedResource.class, new MockAnalysisComponent());\n        fail(String.format(Locale.ROOT, failureMessage, endpoint));\n      } catch (SolrException solrExc) {\n        // expected output\n      }\n    }\n\n    resetExceptionIgnores();\n    \n    NamedList<String> initArgs = new NamedList<>();\n    RestManager restManager = new RestManager();\n    restManager.init(loader, initArgs, new ManagedResourceStorage.InMemoryStorageIO());\n    \n    ManagedResource res = restManager.getManagedResource(resourceId);\n    assertTrue(res instanceof ManagedWordSetResource);    \n    assertEquals(res.getResourceId(), resourceId);\n    \n    restManager.getManagedResource(\"/config/test/foo2\"); // exception if it isn't registered\n  }\n\n","sourceOld":"  /**\n   * Test RestManager initialization and handling of registered ManagedResources. \n   */\n  @Test\n  @Ignore\n  public void testManagedResourceRegistrationAndInitialization() throws Exception {\n    // first, we need to register some ManagedResources, which is done with the registry\n    // provided by the SolrResourceLoader\n    SolrResourceLoader loader = new SolrResourceLoader(\"./\");\n    \n    RestManager.Registry registry = loader.getManagedResourceRegistry();\n    assertNotNull(\"Expected a non-null RestManager.Registry from the SolrResourceLoader!\", registry);\n    \n    String resourceId = \"/config/test/foo\";\n    registry.registerManagedResource(resourceId, \n                                     ManagedWordSetResource.class, \n                                     new MockAnalysisComponent());\n    \n    // verify the two different components can register the same ManagedResource in the registry\n    registry.registerManagedResource(resourceId, \n                                     ManagedWordSetResource.class, \n                                     new MockAnalysisComponent());\n    \n    // verify we can register another resource under a different resourceId\n    registry.registerManagedResource(\"/config/test/foo2\", \n                                     ManagedWordSetResource.class, \n                                     new MockAnalysisComponent());\n\n    ignoreException(\"REST API path .* already registered to instances of \");\n\n    String failureMessage = \"Should not be able to register a different\"\n                          + \" ManagedResource implementation for {}\";\n\n    // verify that some other hooligan cannot register another type\n    // of ManagedResource implementation under the same resourceId\n    try {\n      registry.registerManagedResource(resourceId, \n                                       BogusManagedResource.class, \n                                       new MockAnalysisComponent());\n      fail(String.format(Locale.ROOT, failureMessage, resourceId));\n    } catch (SolrException solrExc) {\n      // expected output\n    }\n\n    resetExceptionIgnores();\n\n    ignoreException(\"is a reserved endpoint used by the Solr REST API!\");\n\n    failureMessage = \"Should not be able to register reserved endpoint {}\";\n\n    // verify that already-spoken-for REST API endpoints can't be registered\n    Set<String> reservedEndpoints = registry.getReservedEndpoints();\n    assertTrue(reservedEndpoints.size() > 2);\n    assertTrue(reservedEndpoints.contains(RestManager.SCHEMA_BASE_PATH + RestManager.MANAGED_ENDPOINT));\n    assertTrue(reservedEndpoints.contains(RestManager.CONFIG_BASE_PATH + RestManager.MANAGED_ENDPOINT));\n    for (String endpoint : reservedEndpoints) {\n\n      try {\n        registry.registerManagedResource\n            (endpoint, BogusManagedResource.class, new MockAnalysisComponent());\n        fail(String.format(Locale.ROOT, failureMessage, endpoint));\n      } catch (SolrException solrExc) {\n        // expected output\n      }\n\n      // also try to register already-spoken-for REST API endpoints with a child segment\n      endpoint += \"/kid\";\n      try {\n        registry.registerManagedResource\n            (endpoint, BogusManagedResource.class, new MockAnalysisComponent());\n        fail(String.format(Locale.ROOT, failureMessage, endpoint));\n      } catch (SolrException solrExc) {\n        // expected output\n      }\n    }\n\n    resetExceptionIgnores();\n    \n    NamedList<String> initArgs = new NamedList<>();\n    RestManager restManager = new RestManager();\n    restManager.init(loader, initArgs, new ManagedResourceStorage.InMemoryStorageIO());\n    \n    ManagedResource res = restManager.getManagedResource(resourceId);\n    assertTrue(res instanceof ManagedWordSetResource);    \n    assertEquals(res.getResourceId(), resourceId);\n    \n    restManager.getManagedResource(\"/config/test/foo2\"); // exception if it isn't registered\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a626ec4d1c92e59fe390724d6220081047b03ce7","date":1448021525,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/rest/TestRestManager#testManagedResourceRegistrationAndInitialization().mjava","pathOld":"solr/core/src/test/org/apache/solr/rest/TestRestManager#testManagedResourceRegistrationAndInitialization().mjava","sourceNew":"  /**\n   * Test RestManager initialization and handling of registered ManagedResources. \n   */\n  @Test\n  @Ignore\n  public void testManagedResourceRegistrationAndInitialization() throws Exception {\n    // first, we need to register some ManagedResources, which is done with the registry\n    // provided by the SolrResourceLoader\n    SolrResourceLoader loader = new SolrResourceLoader(Paths.get(\"./\"));\n    \n    RestManager.Registry registry = loader.getManagedResourceRegistry();\n    assertNotNull(\"Expected a non-null RestManager.Registry from the SolrResourceLoader!\", registry);\n    \n    String resourceId = \"/config/test/foo\";\n    registry.registerManagedResource(resourceId, \n                                     ManagedWordSetResource.class, \n                                     new MockAnalysisComponent());\n    \n    // verify the two different components can register the same ManagedResource in the registry\n    registry.registerManagedResource(resourceId, \n                                     ManagedWordSetResource.class, \n                                     new MockAnalysisComponent());\n    \n    // verify we can register another resource under a different resourceId\n    registry.registerManagedResource(\"/config/test/foo2\", \n                                     ManagedWordSetResource.class, \n                                     new MockAnalysisComponent());\n\n    ignoreException(\"REST API path .* already registered to instances of \");\n\n    String failureMessage = \"Should not be able to register a different\"\n                          + \" ManagedResource implementation for {}\";\n\n    // verify that some other hooligan cannot register another type\n    // of ManagedResource implementation under the same resourceId\n    try {\n      registry.registerManagedResource(resourceId, \n                                       BogusManagedResource.class, \n                                       new MockAnalysisComponent());\n      fail(String.format(Locale.ROOT, failureMessage, resourceId));\n    } catch (SolrException solrExc) {\n      // expected output\n    }\n\n    resetExceptionIgnores();\n\n    ignoreException(\"is a reserved endpoint used by the Solr REST API!\");\n\n    failureMessage = \"Should not be able to register reserved endpoint {}\";\n\n    // verify that already-spoken-for REST API endpoints can't be registered\n    Set<String> reservedEndpoints = registry.getReservedEndpoints();\n    assertTrue(reservedEndpoints.size() > 2);\n    assertTrue(reservedEndpoints.contains(RestManager.SCHEMA_BASE_PATH + RestManager.MANAGED_ENDPOINT));\n    for (String endpoint : reservedEndpoints) {\n\n      try {\n        registry.registerManagedResource\n            (endpoint, BogusManagedResource.class, new MockAnalysisComponent());\n        fail(String.format(Locale.ROOT, failureMessage, endpoint));\n      } catch (SolrException solrExc) {\n        // expected output\n      }\n\n      // also try to register already-spoken-for REST API endpoints with a child segment\n      endpoint += \"/kid\";\n      try {\n        registry.registerManagedResource\n            (endpoint, BogusManagedResource.class, new MockAnalysisComponent());\n        fail(String.format(Locale.ROOT, failureMessage, endpoint));\n      } catch (SolrException solrExc) {\n        // expected output\n      }\n    }\n\n    resetExceptionIgnores();\n    \n    NamedList<String> initArgs = new NamedList<>();\n    RestManager restManager = new RestManager();\n    restManager.init(loader, initArgs, new ManagedResourceStorage.InMemoryStorageIO());\n    \n    ManagedResource res = restManager.getManagedResource(resourceId);\n    assertTrue(res instanceof ManagedWordSetResource);    \n    assertEquals(res.getResourceId(), resourceId);\n    \n    restManager.getManagedResource(\"/config/test/foo2\"); // exception if it isn't registered\n  }\n\n","sourceOld":"  /**\n   * Test RestManager initialization and handling of registered ManagedResources. \n   */\n  @Test\n  @Ignore\n  public void testManagedResourceRegistrationAndInitialization() throws Exception {\n    // first, we need to register some ManagedResources, which is done with the registry\n    // provided by the SolrResourceLoader\n    SolrResourceLoader loader = new SolrResourceLoader(\"./\");\n    \n    RestManager.Registry registry = loader.getManagedResourceRegistry();\n    assertNotNull(\"Expected a non-null RestManager.Registry from the SolrResourceLoader!\", registry);\n    \n    String resourceId = \"/config/test/foo\";\n    registry.registerManagedResource(resourceId, \n                                     ManagedWordSetResource.class, \n                                     new MockAnalysisComponent());\n    \n    // verify the two different components can register the same ManagedResource in the registry\n    registry.registerManagedResource(resourceId, \n                                     ManagedWordSetResource.class, \n                                     new MockAnalysisComponent());\n    \n    // verify we can register another resource under a different resourceId\n    registry.registerManagedResource(\"/config/test/foo2\", \n                                     ManagedWordSetResource.class, \n                                     new MockAnalysisComponent());\n\n    ignoreException(\"REST API path .* already registered to instances of \");\n\n    String failureMessage = \"Should not be able to register a different\"\n                          + \" ManagedResource implementation for {}\";\n\n    // verify that some other hooligan cannot register another type\n    // of ManagedResource implementation under the same resourceId\n    try {\n      registry.registerManagedResource(resourceId, \n                                       BogusManagedResource.class, \n                                       new MockAnalysisComponent());\n      fail(String.format(Locale.ROOT, failureMessage, resourceId));\n    } catch (SolrException solrExc) {\n      // expected output\n    }\n\n    resetExceptionIgnores();\n\n    ignoreException(\"is a reserved endpoint used by the Solr REST API!\");\n\n    failureMessage = \"Should not be able to register reserved endpoint {}\";\n\n    // verify that already-spoken-for REST API endpoints can't be registered\n    Set<String> reservedEndpoints = registry.getReservedEndpoints();\n    assertTrue(reservedEndpoints.size() > 2);\n    assertTrue(reservedEndpoints.contains(RestManager.SCHEMA_BASE_PATH + RestManager.MANAGED_ENDPOINT));\n    for (String endpoint : reservedEndpoints) {\n\n      try {\n        registry.registerManagedResource\n            (endpoint, BogusManagedResource.class, new MockAnalysisComponent());\n        fail(String.format(Locale.ROOT, failureMessage, endpoint));\n      } catch (SolrException solrExc) {\n        // expected output\n      }\n\n      // also try to register already-spoken-for REST API endpoints with a child segment\n      endpoint += \"/kid\";\n      try {\n        registry.registerManagedResource\n            (endpoint, BogusManagedResource.class, new MockAnalysisComponent());\n        fail(String.format(Locale.ROOT, failureMessage, endpoint));\n      } catch (SolrException solrExc) {\n        // expected output\n      }\n    }\n\n    resetExceptionIgnores();\n    \n    NamedList<String> initArgs = new NamedList<>();\n    RestManager restManager = new RestManager();\n    restManager.init(loader, initArgs, new ManagedResourceStorage.InMemoryStorageIO());\n    \n    ManagedResource res = restManager.getManagedResource(resourceId);\n    assertTrue(res instanceof ManagedWordSetResource);    \n    assertEquals(res.getResourceId(), resourceId);\n    \n    restManager.getManagedResource(\"/config/test/foo2\"); // exception if it isn't registered\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"89fd5bce15c8e0ca1b10c9988cff9fdcc88c152b","date":1601832109,"type":4,"author":"Timothy Potter","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/rest/TestRestManager#testManagedResourceRegistrationAndInitialization().mjava","sourceNew":null,"sourceOld":"  /**\n   * Test RestManager initialization and handling of registered ManagedResources. \n   */\n  @Test\n  @Ignore\n  public void testManagedResourceRegistrationAndInitialization() throws Exception {\n    // first, we need to register some ManagedResources, which is done with the registry\n    // provided by the SolrResourceLoader\n    SolrResourceLoader loader = new SolrResourceLoader(Paths.get(\"./\"));\n    \n    RestManager.Registry registry = loader.getManagedResourceRegistry();\n    assertNotNull(\"Expected a non-null RestManager.Registry from the SolrResourceLoader!\", registry);\n    \n    String resourceId = \"/config/test/foo\";\n    registry.registerManagedResource(resourceId, \n                                     ManagedWordSetResource.class, \n                                     new MockAnalysisComponent());\n    \n    // verify the two different components can register the same ManagedResource in the registry\n    registry.registerManagedResource(resourceId, \n                                     ManagedWordSetResource.class, \n                                     new MockAnalysisComponent());\n    \n    // verify we can register another resource under a different resourceId\n    registry.registerManagedResource(\"/config/test/foo2\", \n                                     ManagedWordSetResource.class, \n                                     new MockAnalysisComponent());\n\n    ignoreException(\"REST API path .* already registered to instances of \");\n\n    String failureMessage = \"Should not be able to register a different\"\n                          + \" ManagedResource implementation for {}\";\n\n    // verify that some other hooligan cannot register another type\n    // of ManagedResource implementation under the same resourceId\n    try {\n      registry.registerManagedResource(resourceId, \n                                       BogusManagedResource.class, \n                                       new MockAnalysisComponent());\n      fail(String.format(Locale.ROOT, failureMessage, resourceId));\n    } catch (SolrException solrExc) {\n      // expected output\n    }\n\n    resetExceptionIgnores();\n\n    ignoreException(\"is a reserved endpoint used by the Solr REST API!\");\n\n    failureMessage = \"Should not be able to register reserved endpoint {}\";\n\n    // verify that already-spoken-for REST API endpoints can't be registered\n    Set<String> reservedEndpoints = registry.getReservedEndpoints();\n    assertTrue(reservedEndpoints.size() > 2);\n    assertTrue(reservedEndpoints.contains(RestManager.SCHEMA_BASE_PATH + RestManager.MANAGED_ENDPOINT));\n    for (String endpoint : reservedEndpoints) {\n\n      try {\n        registry.registerManagedResource\n            (endpoint, BogusManagedResource.class, new MockAnalysisComponent());\n        fail(String.format(Locale.ROOT, failureMessage, endpoint));\n      } catch (SolrException solrExc) {\n        // expected output\n      }\n\n      // also try to register already-spoken-for REST API endpoints with a child segment\n      endpoint += \"/kid\";\n      try {\n        registry.registerManagedResource\n            (endpoint, BogusManagedResource.class, new MockAnalysisComponent());\n        fail(String.format(Locale.ROOT, failureMessage, endpoint));\n      } catch (SolrException solrExc) {\n        // expected output\n      }\n    }\n\n    resetExceptionIgnores();\n    \n    NamedList<String> initArgs = new NamedList<>();\n    RestManager restManager = new RestManager();\n    restManager.init(loader, initArgs, new ManagedResourceStorage.InMemoryStorageIO());\n    \n    ManagedResource res = restManager.getManagedResource(resourceId);\n    assertTrue(res instanceof ManagedWordSetResource);    \n    assertEquals(res.getResourceId(), resourceId);\n    \n    restManager.getManagedResource(\"/config/test/foo2\"); // exception if it isn't registered\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"89fd5bce15c8e0ca1b10c9988cff9fdcc88c152b":["a626ec4d1c92e59fe390724d6220081047b03ce7"],"531fe719c7218235a679452eb3d137bfd8fc6af1":["afb6bf9ce227ab6aac5068547e286ecc958b8b9d"],"a626ec4d1c92e59fe390724d6220081047b03ce7":["858c0f62e7b20002e4d94702c510512fb6292988"],"afb6bf9ce227ab6aac5068547e286ecc958b8b9d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"858c0f62e7b20002e4d94702c510512fb6292988":["531fe719c7218235a679452eb3d137bfd8fc6af1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["89fd5bce15c8e0ca1b10c9988cff9fdcc88c152b"]},"commit2Childs":{"89fd5bce15c8e0ca1b10c9988cff9fdcc88c152b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"531fe719c7218235a679452eb3d137bfd8fc6af1":["858c0f62e7b20002e4d94702c510512fb6292988"],"a626ec4d1c92e59fe390724d6220081047b03ce7":["89fd5bce15c8e0ca1b10c9988cff9fdcc88c152b"],"afb6bf9ce227ab6aac5068547e286ecc958b8b9d":["531fe719c7218235a679452eb3d137bfd8fc6af1"],"858c0f62e7b20002e4d94702c510512fb6292988":["a626ec4d1c92e59fe390724d6220081047b03ce7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["afb6bf9ce227ab6aac5068547e286ecc958b8b9d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}