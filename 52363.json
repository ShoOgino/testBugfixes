{"path":"lucene/core/src/java/org/apache/lucene/search/spans/SpanPayloadCheckQuery#equals(Object).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/spans/SpanPayloadCheckQuery#equals(Object).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/spans/SpanPayloadCheckQuery#equals(Object).mjava","sourceNew":"  @Override\n  public boolean equals(Object o) {\n    if (this == o) return true;\n    if (!(o instanceof SpanPayloadCheckQuery)) return false;\n\n    SpanPayloadCheckQuery other = (SpanPayloadCheckQuery)o;\n    return this.payloadToMatch.equals(other.payloadToMatch)\n         && this.match.equals(other.match)\n         && this.getBoost() == other.getBoost();\n  }\n\n","sourceOld":"  @Override\n  public boolean equals(Object o) {\n    if (this == o) return true;\n    if (!(o instanceof SpanPayloadCheckQuery)) return false;\n\n    SpanPayloadCheckQuery other = (SpanPayloadCheckQuery)o;\n    return this.payloadToMatch.equals(other.payloadToMatch)\n         && this.match.equals(other.match)\n         && this.getBoost() == other.getBoost();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aaa8203c0525e91bf87759d14591ba3ff26dfa7f","date":1430913024,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/spans/SpanPayloadCheckQuery#equals(Object).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/spans/SpanPayloadCheckQuery#equals(Object).mjava","sourceNew":"  @Override\n  public boolean equals(Object o) {\n    if (! super.equals(o)) {\n      return false;\n    }\n    SpanPayloadCheckQuery other = (SpanPayloadCheckQuery)o;\n    return this.payloadToMatch.equals(other.payloadToMatch);\n  }\n\n","sourceOld":"  @Override\n  public boolean equals(Object o) {\n    if (this == o) return true;\n    if (!(o instanceof SpanPayloadCheckQuery)) return false;\n\n    SpanPayloadCheckQuery other = (SpanPayloadCheckQuery)o;\n    return this.payloadToMatch.equals(other.payloadToMatch)\n         && this.match.equals(other.match)\n         && this.getBoost() == other.getBoost();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2d530e71ed32ab23b34ca3fc72b080a554a40404","date":1432026158,"type":5,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/payloads/SpanPayloadCheckQuery#equals(Object).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/spans/SpanPayloadCheckQuery#equals(Object).mjava","sourceNew":"  @Override\n  public boolean equals(Object o) {\n    if (! super.equals(o)) {\n      return false;\n    }\n    SpanPayloadCheckQuery other = (SpanPayloadCheckQuery)o;\n    return this.payloadToMatch.equals(other.payloadToMatch);\n  }\n\n","sourceOld":"  @Override\n  public boolean equals(Object o) {\n    if (! super.equals(o)) {\n      return false;\n    }\n    SpanPayloadCheckQuery other = (SpanPayloadCheckQuery)o;\n    return this.payloadToMatch.equals(other.payloadToMatch);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2d530e71ed32ab23b34ca3fc72b080a554a40404":["aaa8203c0525e91bf87759d14591ba3ff26dfa7f"],"aaa8203c0525e91bf87759d14591ba3ff26dfa7f":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2d530e71ed32ab23b34ca3fc72b080a554a40404"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["aaa8203c0525e91bf87759d14591ba3ff26dfa7f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"2d530e71ed32ab23b34ca3fc72b080a554a40404":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"aaa8203c0525e91bf87759d14591ba3ff26dfa7f":["2d530e71ed32ab23b34ca3fc72b080a554a40404"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}