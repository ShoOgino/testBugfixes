{"path":"solr/core/src/test/org/apache/solr/cloud/autoscaling/SearchRateTriggerIntegrationTest.CapturingTriggerListener#onEvent(TriggerEvent,TriggerEventProcessorStage,String,ActionContext,Throwable,String).mjava","commits":[{"id":"c0b90ab8b228b1f7a05d5ddfbe879ce962d8964a","date":1524514741,"type":1,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/autoscaling/SearchRateTriggerIntegrationTest.CapturingTriggerListener#onEvent(TriggerEvent,TriggerEventProcessorStage,String,ActionContext,Throwable,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/autoscaling/SearchRateTriggerIntegrationTest.TestTriggerListener#onEvent(TriggerEvent,TriggerEventProcessorStage,String,ActionContext,Throwable,String).mjava","sourceNew":"    @Override\n    public synchronized void onEvent(TriggerEvent event, TriggerEventProcessorStage stage, String actionName,\n                                     ActionContext context, Throwable error, String message) {\n      List<CapturedEvent> lst = listenerEvents.computeIfAbsent(config.name, s -> new ArrayList<>());\n      CapturedEvent ev = new CapturedEvent(timeSource.getTimeNs(), context, config, stage, actionName, event, message);\n      log.info(\"=======> \" + ev);\n      lst.add(ev);\n    }\n\n","sourceOld":"    @Override\n    public synchronized void onEvent(TriggerEvent event, TriggerEventProcessorStage stage, String actionName,\n                                     ActionContext context, Throwable error, String message) {\n      List<CapturedEvent> lst = listenerEvents.computeIfAbsent(config.name, s -> new ArrayList<>());\n      lst.add(new CapturedEvent(timeSource.getTimeNs(), context, config, stage, actionName, event, message));\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0921a3414432a896e242b56e81736020946fe960","date":1548182831,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/autoscaling/SearchRateTriggerIntegrationTest.CapturingTriggerListener#onEvent(TriggerEvent,TriggerEventProcessorStage,String,ActionContext,Throwable,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/autoscaling/SearchRateTriggerIntegrationTest.CapturingTriggerListener#onEvent(TriggerEvent,TriggerEventProcessorStage,String,ActionContext,Throwable,String).mjava","sourceNew":"    @Override\n    public synchronized void onEvent(TriggerEvent event, TriggerEventProcessorStage stage, String actionName,\n                                     ActionContext context, Throwable error, String message) {\n      CapturedEvent ev = new CapturedEvent(timeSource.getTimeNs(), context, config, stage, actionName, event, message);\n      final CountDownLatch latch = listenerEventLatch;\n      synchronized (latch) {\n        if (0 == latch.getCount()) {\n          log.warn(\"Ignoring captured event since latch is 'full': {}\", ev);\n        } else {\n          List<CapturedEvent> lst = listenerEvents.computeIfAbsent(config.name, s -> new ArrayList<>());\n          log.info(\"=======> \" + ev);\n          lst.add(ev);\n          latch.countDown();\n        }\n      }\n    }\n\n","sourceOld":"    @Override\n    public synchronized void onEvent(TriggerEvent event, TriggerEventProcessorStage stage, String actionName,\n                                     ActionContext context, Throwable error, String message) {\n      List<CapturedEvent> lst = listenerEvents.computeIfAbsent(config.name, s -> new ArrayList<>());\n      CapturedEvent ev = new CapturedEvent(timeSource.getTimeNs(), context, config, stage, actionName, event, message);\n      log.info(\"=======> \" + ev);\n      lst.add(ev);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2682a1cd25864ccdc1b44bf047bd08700f28ba06","date":1548321910,"type":3,"author":"Tommaso Teofili","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/autoscaling/SearchRateTriggerIntegrationTest.CapturingTriggerListener#onEvent(TriggerEvent,TriggerEventProcessorStage,String,ActionContext,Throwable,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/autoscaling/SearchRateTriggerIntegrationTest.CapturingTriggerListener#onEvent(TriggerEvent,TriggerEventProcessorStage,String,ActionContext,Throwable,String).mjava","sourceNew":"    @Override\n    public synchronized void onEvent(TriggerEvent event, TriggerEventProcessorStage stage, String actionName,\n                                     ActionContext context, Throwable error, String message) {\n      CapturedEvent ev = new CapturedEvent(timeSource.getTimeNs(), context, config, stage, actionName, event, message);\n      final CountDownLatch latch = listenerEventLatch;\n      synchronized (latch) {\n        if (0 == latch.getCount()) {\n          log.warn(\"Ignoring captured event since latch is 'full': {}\", ev);\n        } else {\n          List<CapturedEvent> lst = listenerEvents.computeIfAbsent(config.name, s -> new ArrayList<>());\n          log.info(\"=======> \" + ev);\n          lst.add(ev);\n          latch.countDown();\n        }\n      }\n    }\n\n","sourceOld":"    @Override\n    public synchronized void onEvent(TriggerEvent event, TriggerEventProcessorStage stage, String actionName,\n                                     ActionContext context, Throwable error, String message) {\n      List<CapturedEvent> lst = listenerEvents.computeIfAbsent(config.name, s -> new ArrayList<>());\n      CapturedEvent ev = new CapturedEvent(timeSource.getTimeNs(), context, config, stage, actionName, event, message);\n      log.info(\"=======> \" + ev);\n      lst.add(ev);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe9f2c4a0d7ac164e4bdd4eee7f87131aec83fd4","date":1588172214,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/autoscaling/SearchRateTriggerIntegrationTest.CapturingTriggerListener#onEvent(TriggerEvent,TriggerEventProcessorStage,String,ActionContext,Throwable,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/autoscaling/SearchRateTriggerIntegrationTest.CapturingTriggerListener#onEvent(TriggerEvent,TriggerEventProcessorStage,String,ActionContext,Throwable,String).mjava","sourceNew":"    @Override\n    public synchronized void onEvent(TriggerEvent event, TriggerEventProcessorStage stage, String actionName,\n                                     ActionContext context, Throwable error, String message) {\n      CapturedEvent ev = new CapturedEvent(timeSource.getTimeNs(), context, config, stage, actionName, event, message);\n      final CountDownLatch latch = listenerEventLatch;\n      synchronized (latch) {\n        if (0 == latch.getCount()) {\n          log.warn(\"Ignoring captured event since latch is 'full': {}\", ev);\n        } else {\n          List<CapturedEvent> lst = listenerEvents.computeIfAbsent(config.name, s -> new ArrayList<>());\n          log.info(\"=======> {}\", ev);\n          lst.add(ev);\n          latch.countDown();\n        }\n      }\n    }\n\n","sourceOld":"    @Override\n    public synchronized void onEvent(TriggerEvent event, TriggerEventProcessorStage stage, String actionName,\n                                     ActionContext context, Throwable error, String message) {\n      CapturedEvent ev = new CapturedEvent(timeSource.getTimeNs(), context, config, stage, actionName, event, message);\n      final CountDownLatch latch = listenerEventLatch;\n      synchronized (latch) {\n        if (0 == latch.getCount()) {\n          log.warn(\"Ignoring captured event since latch is 'full': {}\", ev);\n        } else {\n          List<CapturedEvent> lst = listenerEvents.computeIfAbsent(config.name, s -> new ArrayList<>());\n          log.info(\"=======> \" + ev);\n          lst.add(ev);\n          latch.countDown();\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f504512a03d978990cbff30db0522b354e846db","date":1595247421,"type":4,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/cloud/autoscaling/SearchRateTriggerIntegrationTest.CapturingTriggerListener#onEvent(TriggerEvent,TriggerEventProcessorStage,String,ActionContext,Throwable,String).mjava","sourceNew":null,"sourceOld":"    @Override\n    public synchronized void onEvent(TriggerEvent event, TriggerEventProcessorStage stage, String actionName,\n                                     ActionContext context, Throwable error, String message) {\n      CapturedEvent ev = new CapturedEvent(timeSource.getTimeNs(), context, config, stage, actionName, event, message);\n      final CountDownLatch latch = listenerEventLatch;\n      synchronized (latch) {\n        if (0 == latch.getCount()) {\n          log.warn(\"Ignoring captured event since latch is 'full': {}\", ev);\n        } else {\n          List<CapturedEvent> lst = listenerEvents.computeIfAbsent(config.name, s -> new ArrayList<>());\n          log.info(\"=======> {}\", ev);\n          lst.add(ev);\n          latch.countDown();\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c0b90ab8b228b1f7a05d5ddfbe879ce962d8964a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3f504512a03d978990cbff30db0522b354e846db":["fe9f2c4a0d7ac164e4bdd4eee7f87131aec83fd4"],"fe9f2c4a0d7ac164e4bdd4eee7f87131aec83fd4":["0921a3414432a896e242b56e81736020946fe960"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0921a3414432a896e242b56e81736020946fe960":["c0b90ab8b228b1f7a05d5ddfbe879ce962d8964a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3f504512a03d978990cbff30db0522b354e846db"],"2682a1cd25864ccdc1b44bf047bd08700f28ba06":["c0b90ab8b228b1f7a05d5ddfbe879ce962d8964a","0921a3414432a896e242b56e81736020946fe960"]},"commit2Childs":{"c0b90ab8b228b1f7a05d5ddfbe879ce962d8964a":["0921a3414432a896e242b56e81736020946fe960","2682a1cd25864ccdc1b44bf047bd08700f28ba06"],"3f504512a03d978990cbff30db0522b354e846db":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c0b90ab8b228b1f7a05d5ddfbe879ce962d8964a"],"fe9f2c4a0d7ac164e4bdd4eee7f87131aec83fd4":["3f504512a03d978990cbff30db0522b354e846db"],"0921a3414432a896e242b56e81736020946fe960":["fe9f2c4a0d7ac164e4bdd4eee7f87131aec83fd4","2682a1cd25864ccdc1b44bf047bd08700f28ba06"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"2682a1cd25864ccdc1b44bf047bd08700f28ba06":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","2682a1cd25864ccdc1b44bf047bd08700f28ba06"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}