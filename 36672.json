{"path":"lucene/test-framework/src/java/org/apache/lucene/codecs/temp/TempRandomPostingsFormat.MockIntStreamFactory#openInput(Directory,String,IOContext).mjava","commits":[{"id":"5a6a338194ed0a2e9eef3247ffe4a535203aac09","date":1377222156,"type":0,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/temp/TempRandomPostingsFormat.MockIntStreamFactory#openInput(Directory,String,IOContext).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public IntIndexInput openInput(Directory dir, String fileName, IOContext context) throws IOException {\n      // Must only use extension, because IW.addIndexes can\n      // rename segment!\n      final IntStreamFactory f = delegates.get((Math.abs(salt ^ getExtension(fileName).hashCode())) % delegates.size());\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"MockRandomCodec: read using int factory \" + f + \" from fileName=\" + fileName);\n      }\n      return f.openInput(dir, fileName, context);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e6904bcc97d8afa27bd72ee29ac01e525e327ad4","date":1377958787,"type":4,"author":"Han Jiang","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/temp/TempRandomPostingsFormat.MockIntStreamFactory#openInput(Directory,String,IOContext).mjava","sourceNew":null,"sourceOld":"    @Override\n    public IntIndexInput openInput(Directory dir, String fileName, IOContext context) throws IOException {\n      // Must only use extension, because IW.addIndexes can\n      // rename segment!\n      final IntStreamFactory f = delegates.get((Math.abs(salt ^ getExtension(fileName).hashCode())) % delegates.size());\n      if (LuceneTestCase.VERBOSE) {\n        System.out.println(\"MockRandomCodec: read using int factory \" + f + \" from fileName=\" + fileName);\n      }\n      return f.openInput(dir, fileName, context);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5a6a338194ed0a2e9eef3247ffe4a535203aac09":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e6904bcc97d8afa27bd72ee29ac01e525e327ad4":["5a6a338194ed0a2e9eef3247ffe4a535203aac09"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5a6a338194ed0a2e9eef3247ffe4a535203aac09","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5a6a338194ed0a2e9eef3247ffe4a535203aac09":["e6904bcc97d8afa27bd72ee29ac01e525e327ad4"],"e6904bcc97d8afa27bd72ee29ac01e525e327ad4":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e6904bcc97d8afa27bd72ee29ac01e525e327ad4","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}