{"path":"lucene/benchmark/src/java/org/apache/lucene/benchmark/utils/ExtractReuters#main(String[]).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/benchmark/src/java/org/apache/lucene/benchmark/utils/ExtractReuters#main(String[]).mjava","pathOld":"modules/benchmark/src/java/org/apache/lucene/benchmark/utils/ExtractReuters#main(String[]).mjava","sourceNew":"  public static void main(String[] args) {\n    if (args.length != 2) {\n      usage(\"Wrong number of arguments (\"+args.length+\")\");\n      return;\n    }\n    File reutersDir = new File(args[0]);\n    if (!reutersDir.exists()) {\n      usage(\"Cannot find Path to Reuters SGM files (\"+reutersDir+\")\");\n      return;\n    }\n    \n    // First, extract to a tmp directory and only if everything succeeds, rename\n    // to output directory.\n    File outputDir = new File(args[1]);\n    outputDir = new File(outputDir.getAbsolutePath() + \"-tmp\");\n    outputDir.mkdirs();\n    ExtractReuters extractor = new ExtractReuters(reutersDir, outputDir);\n    extractor.extract();\n    // Now rename to requested output dir\n    outputDir.renameTo(new File(args[1]));\n  }\n\n","sourceOld":"  public static void main(String[] args) {\n    if (args.length != 2) {\n      usage(\"Wrong number of arguments (\"+args.length+\")\");\n      return;\n    }\n    File reutersDir = new File(args[0]);\n    if (!reutersDir.exists()) {\n      usage(\"Cannot find Path to Reuters SGM files (\"+reutersDir+\")\");\n      return;\n    }\n    \n    // First, extract to a tmp directory and only if everything succeeds, rename\n    // to output directory.\n    File outputDir = new File(args[1]);\n    outputDir = new File(outputDir.getAbsolutePath() + \"-tmp\");\n    outputDir.mkdirs();\n    ExtractReuters extractor = new ExtractReuters(reutersDir, outputDir);\n    extractor.extract();\n    // Now rename to requested output dir\n    outputDir.renameTo(new File(args[1]));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cbc3688252d4a8045d69a164236b2cf87b721f17","date":1409846185,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/benchmark/src/java/org/apache/lucene/benchmark/utils/ExtractReuters#main(String[]).mjava","pathOld":"lucene/benchmark/src/java/org/apache/lucene/benchmark/utils/ExtractReuters#main(String[]).mjava","sourceNew":"  public static void main(String[] args) throws Exception {\n    if (args.length != 2) {\n      usage(\"Wrong number of arguments (\"+args.length+\")\");\n      return;\n    }\n    File reutersDir = new File(args[0]);\n    if (!reutersDir.exists()) {\n      usage(\"Cannot find Path to Reuters SGM files (\"+reutersDir+\")\");\n      return;\n    }\n    \n    // First, extract to a tmp directory and only if everything succeeds, rename\n    // to output directory.\n    File outputDir = new File(args[1]);\n    outputDir = new File(outputDir.getAbsolutePath() + \"-tmp\");\n    outputDir.mkdirs();\n    ExtractReuters extractor = new ExtractReuters(reutersDir, outputDir);\n    extractor.extract();\n    // Now rename to requested output dir\n    outputDir.renameTo(new File(args[1]));\n  }\n\n","sourceOld":"  public static void main(String[] args) {\n    if (args.length != 2) {\n      usage(\"Wrong number of arguments (\"+args.length+\")\");\n      return;\n    }\n    File reutersDir = new File(args[0]);\n    if (!reutersDir.exists()) {\n      usage(\"Cannot find Path to Reuters SGM files (\"+reutersDir+\")\");\n      return;\n    }\n    \n    // First, extract to a tmp directory and only if everything succeeds, rename\n    // to output directory.\n    File outputDir = new File(args[1]);\n    outputDir = new File(outputDir.getAbsolutePath() + \"-tmp\");\n    outputDir.mkdirs();\n    ExtractReuters extractor = new ExtractReuters(reutersDir, outputDir);\n    extractor.extract();\n    // Now rename to requested output dir\n    outputDir.renameTo(new File(args[1]));\n  }\n\n","bugFix":["42a270f0606309d514faa19e1d021eb7b42305a6"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f4abec28b874149a7223e32cc7a01704c27790de","date":1410644789,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/benchmark/src/java/org/apache/lucene/benchmark/utils/ExtractReuters#main(String[]).mjava","pathOld":"lucene/benchmark/src/java/org/apache/lucene/benchmark/utils/ExtractReuters#main(String[]).mjava","sourceNew":"  public static void main(String[] args) throws Exception {\n    if (args.length != 2) {\n      usage(\"Wrong number of arguments (\"+args.length+\")\");\n      return;\n    }\n    Path reutersDir = Paths.get(args[0]);\n    if (!Files.exists(reutersDir)) {\n      usage(\"Cannot find Path to Reuters SGM files (\"+reutersDir+\")\");\n      return;\n    }\n    \n    // First, extract to a tmp directory and only if everything succeeds, rename\n    // to output directory.\n    Path outputDir = Paths.get(args[1] + \"-tmp\");\n    Files.createDirectories(outputDir);\n    ExtractReuters extractor = new ExtractReuters(reutersDir, outputDir);\n    extractor.extract();\n    // Now rename to requested output dir\n    Files.move(outputDir, Paths.get(args[1]), StandardCopyOption.ATOMIC_MOVE);\n  }\n\n","sourceOld":"  public static void main(String[] args) throws Exception {\n    if (args.length != 2) {\n      usage(\"Wrong number of arguments (\"+args.length+\")\");\n      return;\n    }\n    File reutersDir = new File(args[0]);\n    if (!reutersDir.exists()) {\n      usage(\"Cannot find Path to Reuters SGM files (\"+reutersDir+\")\");\n      return;\n    }\n    \n    // First, extract to a tmp directory and only if everything succeeds, rename\n    // to output directory.\n    File outputDir = new File(args[1]);\n    outputDir = new File(outputDir.getAbsolutePath() + \"-tmp\");\n    outputDir.mkdirs();\n    ExtractReuters extractor = new ExtractReuters(reutersDir, outputDir);\n    extractor.extract();\n    // Now rename to requested output dir\n    outputDir.renameTo(new File(args[1]));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cbc3688252d4a8045d69a164236b2cf87b721f17":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f4abec28b874149a7223e32cc7a01704c27790de":["cbc3688252d4a8045d69a164236b2cf87b721f17"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f4abec28b874149a7223e32cc7a01704c27790de"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cbc3688252d4a8045d69a164236b2cf87b721f17"],"cbc3688252d4a8045d69a164236b2cf87b721f17":["f4abec28b874149a7223e32cc7a01704c27790de"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"f4abec28b874149a7223e32cc7a01704c27790de":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}