{"path":"lucene/core/src/java/org/apache/lucene/index/FreqProxTermsWriterPerField#writeOffsets(int,int).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/FreqProxTermsWriterPerField#writeOffsets(int,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/FreqProxTermsWriterPerField#writeOffsets(int,int).mjava","sourceNew":"  void writeOffsets(final int termID, int prevOffset) {\n    assert writeOffsets;\n    final int startOffset = offsetAttribute.startOffset();\n    final int endOffset = offsetAttribute.endOffset();\n    //System.out.println(\"writeOffsets termID=\" + termID + \" prevOffset=\" + prevOffset + \" startOff=\" + startOffset + \" endOff=\" + endOffset);\n    termsHashPerField.writeVInt(1, startOffset - prevOffset);\n    termsHashPerField.writeVInt(1, endOffset - startOffset);\n\n    FreqProxPostingsArray postings = (FreqProxPostingsArray) termsHashPerField.postingsArray;\n    postings.lastOffsets[termID] = startOffset;\n  }\n\n","sourceOld":"  void writeOffsets(final int termID, int prevOffset) {\n    assert writeOffsets;\n    final int startOffset = offsetAttribute.startOffset();\n    final int endOffset = offsetAttribute.endOffset();\n    //System.out.println(\"writeOffsets termID=\" + termID + \" prevOffset=\" + prevOffset + \" startOff=\" + startOffset + \" endOff=\" + endOffset);\n    termsHashPerField.writeVInt(1, startOffset - prevOffset);\n    termsHashPerField.writeVInt(1, endOffset - startOffset);\n\n    FreqProxPostingsArray postings = (FreqProxPostingsArray) termsHashPerField.postingsArray;\n    postings.lastOffsets[termID] = startOffset;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"83ede60c0b5bb96ad193414bbd663193b56689b3","date":1338331478,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/FreqProxTermsWriterPerField#writeOffsets(int,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/FreqProxTermsWriterPerField#writeOffsets(int,int).mjava","sourceNew":"  void writeOffsets(final int termID, int prevOffset) {\n    assert hasOffsets;\n    final int startOffset = offsetAttribute.startOffset();\n    final int endOffset = offsetAttribute.endOffset();\n    //System.out.println(\"writeOffsets termID=\" + termID + \" prevOffset=\" + prevOffset + \" startOff=\" + startOffset + \" endOff=\" + endOffset);\n    termsHashPerField.writeVInt(1, startOffset - prevOffset);\n    termsHashPerField.writeVInt(1, endOffset - startOffset);\n\n    FreqProxPostingsArray postings = (FreqProxPostingsArray) termsHashPerField.postingsArray;\n    postings.lastOffsets[termID] = startOffset;\n  }\n\n","sourceOld":"  void writeOffsets(final int termID, int prevOffset) {\n    assert writeOffsets;\n    final int startOffset = offsetAttribute.startOffset();\n    final int endOffset = offsetAttribute.endOffset();\n    //System.out.println(\"writeOffsets termID=\" + termID + \" prevOffset=\" + prevOffset + \" startOff=\" + startOffset + \" endOff=\" + endOffset);\n    termsHashPerField.writeVInt(1, startOffset - prevOffset);\n    termsHashPerField.writeVInt(1, endOffset - startOffset);\n\n    FreqProxPostingsArray postings = (FreqProxPostingsArray) termsHashPerField.postingsArray;\n    postings.lastOffsets[termID] = startOffset;\n  }\n\n","bugFix":["31f025ae60076ae95274433f3fe8e6ace2857a87"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d2d5b1f6ad16c5f1ce7e0a00225e2c9ffd0bc626","date":1339522233,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/FreqProxTermsWriterPerField#writeOffsets(int,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/FreqProxTermsWriterPerField#writeOffsets(int,int).mjava","sourceNew":"  void writeOffsets(final int termID, int offsetAccum) {\n    assert hasOffsets;\n    final int startOffset = offsetAccum + offsetAttribute.startOffset();\n    final int endOffset = offsetAccum + offsetAttribute.endOffset();\n    //System.out.println(\"writeOffsets termID=\" + termID + \" prevOffset=\" + prevOffset + \" startOff=\" + startOffset + \" endOff=\" + endOffset);\n    FreqProxPostingsArray postings = (FreqProxPostingsArray) termsHashPerField.postingsArray;\n    assert startOffset - postings.lastOffsets[termID] >= 0;\n    termsHashPerField.writeVInt(1, startOffset - postings.lastOffsets[termID]);\n    termsHashPerField.writeVInt(1, endOffset - startOffset);\n\n    postings.lastOffsets[termID] = startOffset;\n  }\n\n","sourceOld":"  void writeOffsets(final int termID, int prevOffset) {\n    assert hasOffsets;\n    final int startOffset = offsetAttribute.startOffset();\n    final int endOffset = offsetAttribute.endOffset();\n    //System.out.println(\"writeOffsets termID=\" + termID + \" prevOffset=\" + prevOffset + \" startOff=\" + startOffset + \" endOff=\" + endOffset);\n    termsHashPerField.writeVInt(1, startOffset - prevOffset);\n    termsHashPerField.writeVInt(1, endOffset - startOffset);\n\n    FreqProxPostingsArray postings = (FreqProxPostingsArray) termsHashPerField.postingsArray;\n    postings.lastOffsets[termID] = startOffset;\n  }\n\n","bugFix":["31f025ae60076ae95274433f3fe8e6ace2857a87"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"52c7e49be259508735752fba88085255014a6ecf","date":1398706273,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/FreqProxTermsWriterPerField#writeOffsets(int,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/FreqProxTermsWriterPerField#writeOffsets(int,int).mjava","sourceNew":"  void writeOffsets(int termID, int offsetAccum) {\n    final int startOffset = offsetAccum + offsetAttribute.startOffset();\n    final int endOffset = offsetAccum + offsetAttribute.endOffset();\n    assert startOffset - freqProxPostingsArray.lastOffsets[termID] >= 0;\n    writeVInt(1, startOffset - freqProxPostingsArray.lastOffsets[termID]);\n    writeVInt(1, endOffset - startOffset);\n    freqProxPostingsArray.lastOffsets[termID] = startOffset;\n  }\n\n","sourceOld":"  void writeOffsets(final int termID, int offsetAccum) {\n    assert hasOffsets;\n    final int startOffset = offsetAccum + offsetAttribute.startOffset();\n    final int endOffset = offsetAccum + offsetAttribute.endOffset();\n    //System.out.println(\"writeOffsets termID=\" + termID + \" prevOffset=\" + prevOffset + \" startOff=\" + startOffset + \" endOff=\" + endOffset);\n    FreqProxPostingsArray postings = (FreqProxPostingsArray) termsHashPerField.postingsArray;\n    assert startOffset - postings.lastOffsets[termID] >= 0;\n    termsHashPerField.writeVInt(1, startOffset - postings.lastOffsets[termID]);\n    termsHashPerField.writeVInt(1, endOffset - startOffset);\n\n    postings.lastOffsets[termID] = startOffset;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3394716f52b34ab259ad5247e7595d9f9db6e935","date":1398791921,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/FreqProxTermsWriterPerField#writeOffsets(int,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/FreqProxTermsWriterPerField#writeOffsets(int,int).mjava","sourceNew":"  void writeOffsets(int termID, int offsetAccum) {\n    final int startOffset = offsetAccum + offsetAttribute.startOffset();\n    final int endOffset = offsetAccum + offsetAttribute.endOffset();\n    assert startOffset - freqProxPostingsArray.lastOffsets[termID] >= 0;\n    writeVInt(1, startOffset - freqProxPostingsArray.lastOffsets[termID]);\n    writeVInt(1, endOffset - startOffset);\n    freqProxPostingsArray.lastOffsets[termID] = startOffset;\n  }\n\n","sourceOld":"  void writeOffsets(final int termID, int offsetAccum) {\n    assert hasOffsets;\n    final int startOffset = offsetAccum + offsetAttribute.startOffset();\n    final int endOffset = offsetAccum + offsetAttribute.endOffset();\n    //System.out.println(\"writeOffsets termID=\" + termID + \" prevOffset=\" + prevOffset + \" startOff=\" + startOffset + \" endOff=\" + endOffset);\n    FreqProxPostingsArray postings = (FreqProxPostingsArray) termsHashPerField.postingsArray;\n    assert startOffset - postings.lastOffsets[termID] >= 0;\n    termsHashPerField.writeVInt(1, startOffset - postings.lastOffsets[termID]);\n    termsHashPerField.writeVInt(1, endOffset - startOffset);\n\n    postings.lastOffsets[termID] = startOffset;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c0cd85fde84cb318b4dc97710dcf15e2959a1bbe","date":1398844771,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/FreqProxTermsWriterPerField#writeOffsets(int,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/FreqProxTermsWriterPerField#writeOffsets(int,int).mjava","sourceNew":"  void writeOffsets(int termID, int offsetAccum) {\n    final int startOffset = offsetAccum + offsetAttribute.startOffset();\n    final int endOffset = offsetAccum + offsetAttribute.endOffset();\n    assert startOffset - freqProxPostingsArray.lastOffsets[termID] >= 0;\n    writeVInt(1, startOffset - freqProxPostingsArray.lastOffsets[termID]);\n    writeVInt(1, endOffset - startOffset);\n    freqProxPostingsArray.lastOffsets[termID] = startOffset;\n  }\n\n","sourceOld":"  void writeOffsets(final int termID, int offsetAccum) {\n    assert hasOffsets;\n    final int startOffset = offsetAccum + offsetAttribute.startOffset();\n    final int endOffset = offsetAccum + offsetAttribute.endOffset();\n    //System.out.println(\"writeOffsets termID=\" + termID + \" prevOffset=\" + prevOffset + \" startOff=\" + startOffset + \" endOff=\" + endOffset);\n    FreqProxPostingsArray postings = (FreqProxPostingsArray) termsHashPerField.postingsArray;\n    assert startOffset - postings.lastOffsets[termID] >= 0;\n    termsHashPerField.writeVInt(1, startOffset - postings.lastOffsets[termID]);\n    termsHashPerField.writeVInt(1, endOffset - startOffset);\n\n    postings.lastOffsets[termID] = startOffset;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3394716f52b34ab259ad5247e7595d9f9db6e935":["d2d5b1f6ad16c5f1ce7e0a00225e2c9ffd0bc626","52c7e49be259508735752fba88085255014a6ecf"],"c0cd85fde84cb318b4dc97710dcf15e2959a1bbe":["d2d5b1f6ad16c5f1ce7e0a00225e2c9ffd0bc626","3394716f52b34ab259ad5247e7595d9f9db6e935"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"83ede60c0b5bb96ad193414bbd663193b56689b3":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"d2d5b1f6ad16c5f1ce7e0a00225e2c9ffd0bc626":["83ede60c0b5bb96ad193414bbd663193b56689b3"],"52c7e49be259508735752fba88085255014a6ecf":["d2d5b1f6ad16c5f1ce7e0a00225e2c9ffd0bc626"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3394716f52b34ab259ad5247e7595d9f9db6e935"]},"commit2Childs":{"3394716f52b34ab259ad5247e7595d9f9db6e935":["c0cd85fde84cb318b4dc97710dcf15e2959a1bbe","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c0cd85fde84cb318b4dc97710dcf15e2959a1bbe":[],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["83ede60c0b5bb96ad193414bbd663193b56689b3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"83ede60c0b5bb96ad193414bbd663193b56689b3":["d2d5b1f6ad16c5f1ce7e0a00225e2c9ffd0bc626"],"d2d5b1f6ad16c5f1ce7e0a00225e2c9ffd0bc626":["3394716f52b34ab259ad5247e7595d9f9db6e935","c0cd85fde84cb318b4dc97710dcf15e2959a1bbe","52c7e49be259508735752fba88085255014a6ecf"],"52c7e49be259508735752fba88085255014a6ecf":["3394716f52b34ab259ad5247e7595d9f9db6e935"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c0cd85fde84cb318b4dc97710dcf15e2959a1bbe","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}