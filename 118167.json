{"path":"solr/core/src/test/org/apache/solr/cloud/FullSolrCloudDistribCmdsTest#testConcurrentIndexing().mjava","commits":[{"id":"0a29b6e8b148762c68adf55b9d2c2aa5ae411a5b","date":1576537086,"type":0,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/FullSolrCloudDistribCmdsTest#testConcurrentIndexing().mjava","pathOld":"/dev/null","sourceNew":"  public void testConcurrentIndexing() throws Exception {\n    final CloudSolrClient cloudClient = cluster.getSolrClient();\n    final String collectionName = createAndSetNewDefaultCollection();\n\n    final int numDocs = atLeast(50);\n    final JettySolrRunner nodeToUpdate = cluster.getRandomJetty(random());\n    try (ConcurrentUpdateSolrClient indexClient\n         = getConcurrentUpdateSolrClient(nodeToUpdate.getProxyBaseUrl() + \"/\" + collectionName, 10, 2)) {\n      \n      for (int i = 0; i < numDocs; i++) {\n        indexClient.add(sdoc(\"id\", i, \"text_t\",\n                             TestUtil.randomRealisticUnicodeString(random(), 200)));\n      }\n      indexClient.blockUntilFinished();\n      \n      assertEquals(0, indexClient.commit().getStatus());\n      assertEquals(numDocs, cloudClient.query(params(\"q\",\"*:*\")).getResults().getNumFound());\n\n      checkShardConsistency(params(\"q\",\"*:*\", \"rows\", \"\"+(1 + numDocs),\"_trace\",\"addAll\"));\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b945b8f5bba0303382bc69d60c0c287714f23328","date":1576586294,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/FullSolrCloudDistribCmdsTest#testConcurrentIndexing().mjava","pathOld":"/dev/null","sourceNew":"  public void testConcurrentIndexing() throws Exception {\n    final CloudSolrClient cloudClient = cluster.getSolrClient();\n    final String collectionName = createAndSetNewDefaultCollection();\n\n    final int numDocs = atLeast(50);\n    final JettySolrRunner nodeToUpdate = cluster.getRandomJetty(random());\n    try (ConcurrentUpdateSolrClient indexClient\n         = getConcurrentUpdateSolrClient(nodeToUpdate.getProxyBaseUrl() + \"/\" + collectionName, 10, 2)) {\n      \n      for (int i = 0; i < numDocs; i++) {\n        indexClient.add(sdoc(\"id\", i, \"text_t\",\n                             TestUtil.randomRealisticUnicodeString(random(), 200)));\n      }\n      indexClient.blockUntilFinished();\n      \n      assertEquals(0, indexClient.commit().getStatus());\n      assertEquals(numDocs, cloudClient.query(params(\"q\",\"*:*\")).getResults().getNumFound());\n\n      checkShardConsistency(params(\"q\",\"*:*\", \"rows\", \"\"+(1 + numDocs),\"_trace\",\"addAll\"));\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b945b8f5bba0303382bc69d60c0c287714f23328":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0a29b6e8b148762c68adf55b9d2c2aa5ae411a5b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0a29b6e8b148762c68adf55b9d2c2aa5ae411a5b"],"0a29b6e8b148762c68adf55b9d2c2aa5ae411a5b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b945b8f5bba0303382bc69d60c0c287714f23328","0a29b6e8b148762c68adf55b9d2c2aa5ae411a5b"],"b945b8f5bba0303382bc69d60c0c287714f23328":[],"0a29b6e8b148762c68adf55b9d2c2aa5ae411a5b":["b945b8f5bba0303382bc69d60c0c287714f23328","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b945b8f5bba0303382bc69d60c0c287714f23328","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}