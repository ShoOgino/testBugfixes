{"path":"solr/core/src/java/org/apache/solr/handler/admin/LogLevelHandler.LoggerFactoryWrapperLog4j#getLoggers().mjava","commits":[{"id":"54d9cd7a1fb3deb9fd44d6257a434e3b86289877","date":1334333912,"type":0,"author":"Ryan McKinley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/LogLevelHandler.LoggerFactoryWrapperLog4j#getLoggers().mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public Collection<LoggerWrapper> getLoggers() {\n\n      org.apache.log4j.Logger root = org.apache.log4j.LogManager.getRootLogger();\n      Map<String,LoggerWrapper> map = new HashMap<String,LoggerWrapper>();\n      Enumeration<?> loggers = org.apache.log4j.LogManager.getCurrentLoggers();\n      while (loggers.hasMoreElements()) {\n        org.apache.log4j.Logger logger = (org.apache.log4j.Logger)loggers.nextElement();\n        String name = logger.getName();\n        if( logger == root) {\n          continue;\n        }\n        map.put(name, new LoggerWrapperLog4j(name, logger));\n\n        while (true) {\n          int dot = name.lastIndexOf(\".\");\n          if (dot < 0)\n            break;\n          name = name.substring(0, dot);\n          if(!map.containsKey(name)) {\n            map.put(name, new LoggerWrapperJUL(name, null));\n          }\n        }\n      }\n      map.put(ROOT_NAME, new LoggerWrapperLog4j(ROOT_NAME, root));\n      return map.values();\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"829761a123d59d7a3c39e5f13fbc03de63f55ce5","date":1334686329,"type":4,"author":"Ryan McKinley","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/LogLevelHandler.LoggerFactoryWrapperLog4j#getLoggers().mjava","sourceNew":null,"sourceOld":"    @Override\n    public Collection<LoggerWrapper> getLoggers() {\n\n      org.apache.log4j.Logger root = org.apache.log4j.LogManager.getRootLogger();\n      Map<String,LoggerWrapper> map = new HashMap<String,LoggerWrapper>();\n      Enumeration<?> loggers = org.apache.log4j.LogManager.getCurrentLoggers();\n      while (loggers.hasMoreElements()) {\n        org.apache.log4j.Logger logger = (org.apache.log4j.Logger)loggers.nextElement();\n        String name = logger.getName();\n        if( logger == root) {\n          continue;\n        }\n        map.put(name, new LoggerWrapperLog4j(name, logger));\n\n        while (true) {\n          int dot = name.lastIndexOf(\".\");\n          if (dot < 0)\n            break;\n          name = name.substring(0, dot);\n          if(!map.containsKey(name)) {\n            map.put(name, new LoggerWrapperJUL(name, null));\n          }\n        }\n      }\n      map.put(ROOT_NAME, new LoggerWrapperLog4j(ROOT_NAME, root));\n      return map.values();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"829761a123d59d7a3c39e5f13fbc03de63f55ce5":["54d9cd7a1fb3deb9fd44d6257a434e3b86289877"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["829761a123d59d7a3c39e5f13fbc03de63f55ce5"],"54d9cd7a1fb3deb9fd44d6257a434e3b86289877":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["54d9cd7a1fb3deb9fd44d6257a434e3b86289877"],"829761a123d59d7a3c39e5f13fbc03de63f55ce5":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"54d9cd7a1fb3deb9fd44d6257a434e3b86289877":["829761a123d59d7a3c39e5f13fbc03de63f55ce5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}