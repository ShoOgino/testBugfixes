{"path":"src/test/org/apache/lucene/index/TestIndexWriter#testFlushWithNoMerging().mjava","commits":[{"id":"a30c6ea5c2c1da6d2956e42721e02ccb29910be5","date":1184278520,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriter#testFlushWithNoMerging().mjava","pathOld":"/dev/null","sourceNew":"    public void testFlushWithNoMerging() throws IOException {\n      Directory dir = new RAMDirectory();\n      IndexWriter writer  = new IndexWriter(dir, new WhitespaceAnalyzer(), true);      \n      writer.setMaxBufferedDocs(2);\n      Document doc = new Document();\n      doc.add(new Field(\"field\", \"aaa\", Field.Store.YES, Field.Index.TOKENIZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n      for(int i=0;i<19;i++)\n        writer.addDocument(doc);\n      writer.flush(false, true);\n      writer.close();\n      SegmentInfos sis = new SegmentInfos();\n      sis.read(dir);\n      // Since we flushed w/o allowing merging we should now\n      // have 10 segments\n      assert sis.size() == 10;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["d4ce75c5c8181cb19bc310a09f2dc44481cfa1ac","d4ce75c5c8181cb19bc310a09f2dc44481cfa1ac"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"fd9aba6db0f2adde620bb61f591ed18dcfee36ac","date":1201778618,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriter#testFlushWithNoMerging().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriter#testFlushWithNoMerging().mjava","sourceNew":"    public void testFlushWithNoMerging() throws IOException {\n      Directory dir = new RAMDirectory();\n      IndexWriter writer  = new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n      writer.setMaxBufferedDocs(2);\n      Document doc = new Document();\n      doc.add(new Field(\"field\", \"aaa\", Field.Store.YES, Field.Index.TOKENIZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n      for(int i=0;i<19;i++)\n        writer.addDocument(doc);\n      writer.flush(false, true);\n      writer.close();\n      SegmentInfos sis = new SegmentInfos();\n      sis.read(dir);\n      // Since we flushed w/o allowing merging we should now\n      // have 10 segments\n      assert sis.size() == 10;\n    }\n\n","sourceOld":"    public void testFlushWithNoMerging() throws IOException {\n      Directory dir = new RAMDirectory();\n      IndexWriter writer  = new IndexWriter(dir, new WhitespaceAnalyzer(), true);      \n      writer.setMaxBufferedDocs(2);\n      Document doc = new Document();\n      doc.add(new Field(\"field\", \"aaa\", Field.Store.YES, Field.Index.TOKENIZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n      for(int i=0;i<19;i++)\n        writer.addDocument(doc);\n      writer.flush(false, true);\n      writer.close();\n      SegmentInfos sis = new SegmentInfos();\n      sis.read(dir);\n      // Since we flushed w/o allowing merging we should now\n      // have 10 segments\n      assert sis.size() == 10;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a2fc4b864a5dc2c630bb1fa94091e89e69f8f8be","date":1204801324,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriter#testFlushWithNoMerging().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriter#testFlushWithNoMerging().mjava","sourceNew":"    public void testFlushWithNoMerging() throws IOException {\n      Directory dir = new RAMDirectory();\n      IndexWriter writer  = new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n      writer.setMaxBufferedDocs(2);\n      Document doc = new Document();\n      doc.add(new Field(\"field\", \"aaa\", Field.Store.YES, Field.Index.TOKENIZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n      for(int i=0;i<19;i++)\n        writer.addDocument(doc);\n      writer.flush(false, true, true);\n      writer.close();\n      SegmentInfos sis = new SegmentInfos();\n      sis.read(dir);\n      // Since we flushed w/o allowing merging we should now\n      // have 10 segments\n      assert sis.size() == 10;\n    }\n\n","sourceOld":"    public void testFlushWithNoMerging() throws IOException {\n      Directory dir = new RAMDirectory();\n      IndexWriter writer  = new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n      writer.setMaxBufferedDocs(2);\n      Document doc = new Document();\n      doc.add(new Field(\"field\", \"aaa\", Field.Store.YES, Field.Index.TOKENIZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n      for(int i=0;i<19;i++)\n        writer.addDocument(doc);\n      writer.flush(false, true);\n      writer.close();\n      SegmentInfos sis = new SegmentInfos();\n      sis.read(dir);\n      // Since we flushed w/o allowing merging we should now\n      // have 10 segments\n      assert sis.size() == 10;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a","date":1221082732,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriter#testFlushWithNoMerging().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriter#testFlushWithNoMerging().mjava","sourceNew":"    public void testFlushWithNoMerging() throws IOException {\n      Directory dir = new RAMDirectory();\n      IndexWriter writer  = new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n      writer.setMaxBufferedDocs(2);\n      Document doc = new Document();\n      doc.add(new Field(\"field\", \"aaa\", Field.Store.YES, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n      for(int i=0;i<19;i++)\n        writer.addDocument(doc);\n      writer.flush(false, true, true);\n      writer.close();\n      SegmentInfos sis = new SegmentInfos();\n      sis.read(dir);\n      // Since we flushed w/o allowing merging we should now\n      // have 10 segments\n      assert sis.size() == 10;\n    }\n\n","sourceOld":"    public void testFlushWithNoMerging() throws IOException {\n      Directory dir = new RAMDirectory();\n      IndexWriter writer  = new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n      writer.setMaxBufferedDocs(2);\n      Document doc = new Document();\n      doc.add(new Field(\"field\", \"aaa\", Field.Store.YES, Field.Index.TOKENIZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n      for(int i=0;i<19;i++)\n        writer.addDocument(doc);\n      writer.flush(false, true, true);\n      writer.close();\n      SegmentInfos sis = new SegmentInfos();\n      sis.read(dir);\n      // Since we flushed w/o allowing merging we should now\n      // have 10 segments\n      assert sis.size() == 10;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3215ae1377fc1ca1790921d75dd39cb764743b85","date":1237371771,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriter#xxxtestFlushWithNoMerging().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriter#testFlushWithNoMerging().mjava","sourceNew":"    public void xxxtestFlushWithNoMerging() throws IOException {\n      Directory dir = new RAMDirectory();\n      IndexWriter writer  = new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n      writer.setMaxBufferedDocs(2);\n      Document doc = new Document();\n      doc.add(new Field(\"field\", \"aaa\", Field.Store.YES, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n      for(int i=0;i<19;i++)\n        writer.addDocument(doc);\n      writer.flush(false, true, true);\n      writer.close();\n      SegmentInfos sis = new SegmentInfos();\n      sis.read(dir);\n      // Since we flushed w/o allowing merging we should now\n      // have 10 segments\n      assert sis.size() == 10;\n    }\n\n","sourceOld":"    public void testFlushWithNoMerging() throws IOException {\n      Directory dir = new RAMDirectory();\n      IndexWriter writer  = new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n      writer.setMaxBufferedDocs(2);\n      Document doc = new Document();\n      doc.add(new Field(\"field\", \"aaa\", Field.Store.YES, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n      for(int i=0;i<19;i++)\n        writer.addDocument(doc);\n      writer.flush(false, true, true);\n      writer.close();\n      SegmentInfos sis = new SegmentInfos();\n      sis.read(dir);\n      // Since we flushed w/o allowing merging we should now\n      // have 10 segments\n      assert sis.size() == 10;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"09c482d1e63332617181729a225b215c452d8a79","date":1237396006,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriter#testFlushWithNoMerging().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriter#xxxtestFlushWithNoMerging().mjava","sourceNew":"    public void testFlushWithNoMerging() throws IOException {\n      Directory dir = new RAMDirectory();\n      IndexWriter writer  = new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n      writer.setMaxBufferedDocs(2);\n      Document doc = new Document();\n      doc.add(new Field(\"field\", \"aaa\", Field.Store.YES, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n      for(int i=0;i<19;i++)\n        writer.addDocument(doc);\n      writer.flush(false, true, true);\n      writer.close();\n      SegmentInfos sis = new SegmentInfos();\n      sis.read(dir);\n      // Since we flushed w/o allowing merging we should now\n      // have 10 segments\n      assert sis.size() == 10;\n    }\n\n","sourceOld":"    public void xxxtestFlushWithNoMerging() throws IOException {\n      Directory dir = new RAMDirectory();\n      IndexWriter writer  = new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n      writer.setMaxBufferedDocs(2);\n      Document doc = new Document();\n      doc.add(new Field(\"field\", \"aaa\", Field.Store.YES, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n      for(int i=0;i<19;i++)\n        writer.addDocument(doc);\n      writer.flush(false, true, true);\n      writer.close();\n      SegmentInfos sis = new SegmentInfos();\n      sis.read(dir);\n      // Since we flushed w/o allowing merging we should now\n      // have 10 segments\n      assert sis.size() == 10;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe0932c1d340f83fb0a611e5829b3046a1cc1152","date":1264946739,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriter#testFlushWithNoMerging().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriter#testFlushWithNoMerging().mjava","sourceNew":"    public void testFlushWithNoMerging() throws IOException {\n      Directory dir = new RAMDirectory();\n      IndexWriter writer  = new IndexWriter(dir, new WhitespaceAnalyzer(Version.LUCENE_CURRENT), true, IndexWriter.MaxFieldLength.LIMITED);\n      writer.setMaxBufferedDocs(2);\n      Document doc = new Document();\n      doc.add(new Field(\"field\", \"aaa\", Field.Store.YES, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n      for(int i=0;i<19;i++)\n        writer.addDocument(doc);\n      writer.flush(false, true, true);\n      writer.close();\n      SegmentInfos sis = new SegmentInfos();\n      sis.read(dir);\n      // Since we flushed w/o allowing merging we should now\n      // have 10 segments\n      assert sis.size() == 10;\n    }\n\n","sourceOld":"    public void testFlushWithNoMerging() throws IOException {\n      Directory dir = new RAMDirectory();\n      IndexWriter writer  = new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n      writer.setMaxBufferedDocs(2);\n      Document doc = new Document();\n      doc.add(new Field(\"field\", \"aaa\", Field.Store.YES, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n      for(int i=0;i<19;i++)\n        writer.addDocument(doc);\n      writer.flush(false, true, true);\n      writer.close();\n      SegmentInfos sis = new SegmentInfos();\n      sis.read(dir);\n      // Since we flushed w/o allowing merging we should now\n      // have 10 segments\n      assert sis.size() == 10;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"55f083e91bb056b57de136da1dfc3b9b6ecc4ef6","date":1265808957,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriter#testFlushWithNoMerging().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriter#testFlushWithNoMerging().mjava","sourceNew":"    public void testFlushWithNoMerging() throws IOException {\n      Directory dir = new RAMDirectory();\n      IndexWriter writer  = new IndexWriter(dir, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), true, IndexWriter.MaxFieldLength.LIMITED);\n      writer.setMaxBufferedDocs(2);\n      Document doc = new Document();\n      doc.add(new Field(\"field\", \"aaa\", Field.Store.YES, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n      for(int i=0;i<19;i++)\n        writer.addDocument(doc);\n      writer.flush(false, true, true);\n      writer.close();\n      SegmentInfos sis = new SegmentInfos();\n      sis.read(dir);\n      // Since we flushed w/o allowing merging we should now\n      // have 10 segments\n      assert sis.size() == 10;\n    }\n\n","sourceOld":"    public void testFlushWithNoMerging() throws IOException {\n      Directory dir = new RAMDirectory();\n      IndexWriter writer  = new IndexWriter(dir, new WhitespaceAnalyzer(Version.LUCENE_CURRENT), true, IndexWriter.MaxFieldLength.LIMITED);\n      writer.setMaxBufferedDocs(2);\n      Document doc = new Document();\n      doc.add(new Field(\"field\", \"aaa\", Field.Store.YES, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n      for(int i=0;i<19;i++)\n        writer.addDocument(doc);\n      writer.flush(false, true, true);\n      writer.close();\n      SegmentInfos sis = new SegmentInfos();\n      sis.read(dir);\n      // Since we flushed w/o allowing merging we should now\n      // have 10 segments\n      assert sis.size() == 10;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1cedb00d2dd44640194401179358a2e3ba6051bf","date":1268243626,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriter#testFlushWithNoMerging().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriter#testFlushWithNoMerging().mjava","sourceNew":"    public void testFlushWithNoMerging() throws IOException {\n      Directory dir = new RAMDirectory();\n      IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT).setMaxBufferedDocs(2));\n      Document doc = new Document();\n      doc.add(new Field(\"field\", \"aaa\", Field.Store.YES, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n      for(int i=0;i<19;i++)\n        writer.addDocument(doc);\n      writer.flush(false, true, true);\n      writer.close();\n      SegmentInfos sis = new SegmentInfos();\n      sis.read(dir);\n      // Since we flushed w/o allowing merging we should now\n      // have 10 segments\n      assert sis.size() == 10;\n    }\n\n","sourceOld":"    public void testFlushWithNoMerging() throws IOException {\n      Directory dir = new RAMDirectory();\n      IndexWriter writer  = new IndexWriter(dir, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), true, IndexWriter.MaxFieldLength.LIMITED);\n      writer.setMaxBufferedDocs(2);\n      Document doc = new Document();\n      doc.add(new Field(\"field\", \"aaa\", Field.Store.YES, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n      for(int i=0;i<19;i++)\n        writer.addDocument(doc);\n      writer.flush(false, true, true);\n      writer.close();\n      SegmentInfos sis = new SegmentInfos();\n      sis.read(dir);\n      // Since we flushed w/o allowing merging we should now\n      // have 10 segments\n      assert sis.size() == 10;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"e52fea2c4081a1e552b98506691990be59503168","date":1268250331,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriter#testFlushWithNoMerging().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriter#testFlushWithNoMerging().mjava","sourceNew":"    public void testFlushWithNoMerging() throws IOException {\n      Directory dir = new RAMDirectory();\n      IndexWriter writer  = new IndexWriter(dir, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), true, IndexWriter.MaxFieldLength.LIMITED);\n      writer.setMaxBufferedDocs(2);\n      Document doc = new Document();\n      doc.add(new Field(\"field\", \"aaa\", Field.Store.YES, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n      for(int i=0;i<19;i++)\n        writer.addDocument(doc);\n      writer.flush(false, true, true);\n      writer.close();\n      SegmentInfos sis = new SegmentInfos();\n      sis.read(dir);\n      // Since we flushed w/o allowing merging we should now\n      // have 10 segments\n      assert sis.size() == 10;\n    }\n\n","sourceOld":"    public void testFlushWithNoMerging() throws IOException {\n      Directory dir = new RAMDirectory();\n      IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT).setMaxBufferedDocs(2));\n      Document doc = new Document();\n      doc.add(new Field(\"field\", \"aaa\", Field.Store.YES, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n      for(int i=0;i<19;i++)\n        writer.addDocument(doc);\n      writer.flush(false, true, true);\n      writer.close();\n      SegmentInfos sis = new SegmentInfos();\n      sis.read(dir);\n      // Since we flushed w/o allowing merging we should now\n      // have 10 segments\n      assert sis.size() == 10;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8","date":1268494368,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriter#testFlushWithNoMerging().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriter#testFlushWithNoMerging().mjava","sourceNew":"    public void testFlushWithNoMerging() throws IOException {\n      Directory dir = new RAMDirectory();\n      IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setMaxBufferedDocs(2));\n      Document doc = new Document();\n      doc.add(new Field(\"field\", \"aaa\", Field.Store.YES, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n      for(int i=0;i<19;i++)\n        writer.addDocument(doc);\n      writer.flush(false, true, true);\n      writer.close();\n      SegmentInfos sis = new SegmentInfos();\n      sis.read(dir);\n      // Since we flushed w/o allowing merging we should now\n      // have 10 segments\n      assert sis.size() == 10;\n    }\n\n","sourceOld":"    public void testFlushWithNoMerging() throws IOException {\n      Directory dir = new RAMDirectory();\n      IndexWriter writer  = new IndexWriter(dir, new WhitespaceAnalyzer(TEST_VERSION_CURRENT), true, IndexWriter.MaxFieldLength.LIMITED);\n      writer.setMaxBufferedDocs(2);\n      Document doc = new Document();\n      doc.add(new Field(\"field\", \"aaa\", Field.Store.YES, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n      for(int i=0;i<19;i++)\n        writer.addDocument(doc);\n      writer.flush(false, true, true);\n      writer.close();\n      SegmentInfos sis = new SegmentInfos();\n      sis.read(dir);\n      // Since we flushed w/o allowing merging we should now\n      // have 10 segments\n      assert sis.size() == 10;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testFlushWithNoMerging().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriter#testFlushWithNoMerging().mjava","sourceNew":"    public void testFlushWithNoMerging() throws IOException {\n      Directory dir = new RAMDirectory();\n      IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setMaxBufferedDocs(2));\n      Document doc = new Document();\n      doc.add(new Field(\"field\", \"aaa\", Field.Store.YES, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n      for(int i=0;i<19;i++)\n        writer.addDocument(doc);\n      writer.flush(false, true, true);\n      writer.close();\n      SegmentInfos sis = new SegmentInfos();\n      sis.read(dir);\n      // Since we flushed w/o allowing merging we should now\n      // have 10 segments\n      assert sis.size() == 10;\n    }\n\n","sourceOld":"    public void testFlushWithNoMerging() throws IOException {\n      Directory dir = new RAMDirectory();\n      IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(\n        TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setMaxBufferedDocs(2));\n      Document doc = new Document();\n      doc.add(new Field(\"field\", \"aaa\", Field.Store.YES, Field.Index.ANALYZED, Field.TermVector.WITH_POSITIONS_OFFSETS));\n      for(int i=0;i<19;i++)\n        writer.addDocument(doc);\n      writer.flush(false, true, true);\n      writer.close();\n      SegmentInfos sis = new SegmentInfos();\n      sis.read(dir);\n      // Since we flushed w/o allowing merging we should now\n      // have 10 segments\n      assert sis.size() == 10;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"55f083e91bb056b57de136da1dfc3b9b6ecc4ef6":["fe0932c1d340f83fb0a611e5829b3046a1cc1152"],"3215ae1377fc1ca1790921d75dd39cb764743b85":["b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a"],"1cedb00d2dd44640194401179358a2e3ba6051bf":["55f083e91bb056b57de136da1dfc3b9b6ecc4ef6"],"b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a":["a2fc4b864a5dc2c630bb1fa94091e89e69f8f8be"],"e52fea2c4081a1e552b98506691990be59503168":["1cedb00d2dd44640194401179358a2e3ba6051bf"],"a2fc4b864a5dc2c630bb1fa94091e89e69f8f8be":["fd9aba6db0f2adde620bb61f591ed18dcfee36ac"],"fd9aba6db0f2adde620bb61f591ed18dcfee36ac":["a30c6ea5c2c1da6d2956e42721e02ccb29910be5"],"a30c6ea5c2c1da6d2956e42721e02ccb29910be5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8":["e52fea2c4081a1e552b98506691990be59503168"],"fe0932c1d340f83fb0a611e5829b3046a1cc1152":["09c482d1e63332617181729a225b215c452d8a79"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"09c482d1e63332617181729a225b215c452d8a79":["3215ae1377fc1ca1790921d75dd39cb764743b85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8"]},"commit2Childs":{"55f083e91bb056b57de136da1dfc3b9b6ecc4ef6":["1cedb00d2dd44640194401179358a2e3ba6051bf"],"3215ae1377fc1ca1790921d75dd39cb764743b85":["09c482d1e63332617181729a225b215c452d8a79"],"1cedb00d2dd44640194401179358a2e3ba6051bf":["e52fea2c4081a1e552b98506691990be59503168"],"b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a":["3215ae1377fc1ca1790921d75dd39cb764743b85"],"a2fc4b864a5dc2c630bb1fa94091e89e69f8f8be":["b5015bd4c211c4f399ae66ee20fe6841ba5b0b6a"],"e52fea2c4081a1e552b98506691990be59503168":["84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8"],"fd9aba6db0f2adde620bb61f591ed18dcfee36ac":["a2fc4b864a5dc2c630bb1fa94091e89e69f8f8be"],"a30c6ea5c2c1da6d2956e42721e02ccb29910be5":["fd9aba6db0f2adde620bb61f591ed18dcfee36ac"],"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"fe0932c1d340f83fb0a611e5829b3046a1cc1152":["55f083e91bb056b57de136da1dfc3b9b6ecc4ef6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a30c6ea5c2c1da6d2956e42721e02ccb29910be5"],"09c482d1e63332617181729a225b215c452d8a79":["fe0932c1d340f83fb0a611e5829b3046a1cc1152"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}