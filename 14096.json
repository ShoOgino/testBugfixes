{"path":"lucene/test-framework/src/java/org/apache/lucene/store/BaseDirectoryTestCase#testDeleteFile().mjava","commits":[{"id":"c15a75016387504d70a40cba6e9314b8885307f0","date":1397542349,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/store/BaseDirectoryTestCase#testDeleteFile().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/store/TestNRTCachingDirectory#testDeleteFile().mjava","sourceNew":"  public void testDeleteFile() throws Exception {\n    Directory dir = getDirectory(createTempDir(\"testDeleteFile\"));\n    dir.createOutput(\"foo.txt\", IOContext.DEFAULT).close();\n    dir.deleteFile(\"foo.txt\");\n    assertEquals(0, dir.listAll().length);\n    dir.close();\n  }\n\n","sourceOld":"  public void testDeleteFile() throws Exception {\n    Directory dir = new NRTCachingDirectory(newDirectory(), 2.0, 25.0);\n    dir.createOutput(\"foo.txt\", IOContext.DEFAULT).close();\n    dir.deleteFile(\"foo.txt\");\n    assertEquals(0, dir.listAll().length);\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"22989c36ff05c657df26dd3377b37c9ad35859bc","date":1424477375,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/store/BaseDirectoryTestCase#testDeleteFile().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/store/BaseDirectoryTestCase#testDeleteFile().mjava","sourceNew":"  public void testDeleteFile() throws Exception {\n    Directory dir = getDirectory(createTempDir(\"testDeleteFile\"));\n    int count = dir.listAll().length;\n    dir.createOutput(\"foo.txt\", IOContext.DEFAULT).close();\n    assertEquals(count+1, dir.listAll().length);\n    dir.deleteFile(\"foo.txt\");\n    assertEquals(count, dir.listAll().length);\n    dir.close();\n  }\n\n","sourceOld":"  public void testDeleteFile() throws Exception {\n    Directory dir = getDirectory(createTempDir(\"testDeleteFile\"));\n    dir.createOutput(\"foo.txt\", IOContext.DEFAULT).close();\n    dir.deleteFile(\"foo.txt\");\n    assertEquals(0, dir.listAll().length);\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6bfe104fc023fadc9e709f8d17403d2cc61133fe","date":1454446396,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/store/BaseDirectoryTestCase#testDeleteFile().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/store/BaseDirectoryTestCase#testDeleteFile().mjava","sourceNew":"  public void testDeleteFile() throws Exception {\n    Directory dir = getDirectory(createTempDir(\"testDeleteFile\"));\n    int count = dir.listAll().length;\n    dir.createOutput(\"foo.txt\", IOContext.DEFAULT).close();\n    assertEquals(count+1, dir.listAll().length);\n    dir.deleteFiles(Collections.singleton(\"foo.txt\"));\n    assertEquals(count, dir.listAll().length);\n    dir.close();\n  }\n\n","sourceOld":"  public void testDeleteFile() throws Exception {\n    Directory dir = getDirectory(createTempDir(\"testDeleteFile\"));\n    int count = dir.listAll().length;\n    dir.createOutput(\"foo.txt\", IOContext.DEFAULT).close();\n    assertEquals(count+1, dir.listAll().length);\n    dir.deleteFile(\"foo.txt\");\n    assertEquals(count, dir.listAll().length);\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8f4e2dcb5e470991d83a63c264bfe20880d3b3c1","date":1454513757,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/store/BaseDirectoryTestCase#testDeleteFile().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/store/BaseDirectoryTestCase#testDeleteFile().mjava","sourceNew":"  public void testDeleteFile() throws Exception {\n    Directory dir = getDirectory(createTempDir(\"testDeleteFile\"));\n    int count = dir.listAll().length;\n    dir.createOutput(\"foo.txt\", IOContext.DEFAULT).close();\n    assertEquals(count+1, dir.listAll().length);\n    dir.deleteFile(\"foo.txt\");\n    assertEquals(count, dir.listAll().length);\n    dir.close();\n  }\n\n","sourceOld":"  public void testDeleteFile() throws Exception {\n    Directory dir = getDirectory(createTempDir(\"testDeleteFile\"));\n    int count = dir.listAll().length;\n    dir.createOutput(\"foo.txt\", IOContext.DEFAULT).close();\n    assertEquals(count+1, dir.listAll().length);\n    dir.deleteFiles(Collections.singleton(\"foo.txt\"));\n    assertEquals(count, dir.listAll().length);\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f3adea0022cffaaa592081efed775a7b8bf86b51","date":1532414870,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/store/BaseDirectoryTestCase#testDeleteFile().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/store/BaseDirectoryTestCase#testDeleteFile().mjava","sourceNew":"  public void testDeleteFile() throws Exception {\n    try (Directory dir = getDirectory(createTempDir(\"testDeleteFile\"))) {\n      String file = \"foo.txt\";\n      Assert.assertFalse(Arrays.asList(dir.listAll()).contains(file));\n\n      dir.createOutput(\"foo.txt\", IOContext.DEFAULT).close();\n      Assert.assertTrue(Arrays.asList(dir.listAll()).contains(file));\n\n      dir.deleteFile(\"foo.txt\");\n      Assert.assertFalse(Arrays.asList(dir.listAll()).contains(file));\n\n      expectThrowsAnyOf(Arrays.asList(NoSuchFileException.class, FileNotFoundException.class), () -> {\n        dir.deleteFile(\"foo.txt\");\n      });\n    }\n  }\n\n","sourceOld":"  public void testDeleteFile() throws Exception {\n    Directory dir = getDirectory(createTempDir(\"testDeleteFile\"));\n    int count = dir.listAll().length;\n    dir.createOutput(\"foo.txt\", IOContext.DEFAULT).close();\n    assertEquals(count+1, dir.listAll().length);\n    dir.deleteFile(\"foo.txt\");\n    assertEquals(count, dir.listAll().length);\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8f4e2dcb5e470991d83a63c264bfe20880d3b3c1":["6bfe104fc023fadc9e709f8d17403d2cc61133fe"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c15a75016387504d70a40cba6e9314b8885307f0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"6bfe104fc023fadc9e709f8d17403d2cc61133fe":["22989c36ff05c657df26dd3377b37c9ad35859bc"],"22989c36ff05c657df26dd3377b37c9ad35859bc":["c15a75016387504d70a40cba6e9314b8885307f0"],"f3adea0022cffaaa592081efed775a7b8bf86b51":["22989c36ff05c657df26dd3377b37c9ad35859bc"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f3adea0022cffaaa592081efed775a7b8bf86b51"]},"commit2Childs":{"8f4e2dcb5e470991d83a63c264bfe20880d3b3c1":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c15a75016387504d70a40cba6e9314b8885307f0"],"6bfe104fc023fadc9e709f8d17403d2cc61133fe":["8f4e2dcb5e470991d83a63c264bfe20880d3b3c1"],"c15a75016387504d70a40cba6e9314b8885307f0":["22989c36ff05c657df26dd3377b37c9ad35859bc"],"22989c36ff05c657df26dd3377b37c9ad35859bc":["6bfe104fc023fadc9e709f8d17403d2cc61133fe","f3adea0022cffaaa592081efed775a7b8bf86b51"],"f3adea0022cffaaa592081efed775a7b8bf86b51":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["8f4e2dcb5e470991d83a63c264bfe20880d3b3c1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}