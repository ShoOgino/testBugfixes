{"path":"lucene/core/src/test/org/apache/lucene/index/TestSwappedIndexFiles#swapFiles(Directory,Directory).mjava","commits":[{"id":"b485ce675d4e8b9dbfafd122ca9b7b33a883be7b","date":1453975275,"type":0,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestSwappedIndexFiles#swapFiles(Directory,Directory).mjava","pathOld":"/dev/null","sourceNew":"  private void swapFiles(Directory dir1, Directory dir2) throws IOException {\n    for(String name : dir1.listAll()) {\n      if (name.equals(IndexWriter.WRITE_LOCK_NAME)) {\n        continue;\n      }\n      swapOneFile(dir1, dir2, name);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8d15e34266d75e4e8b95da046cd0afc812367b38","date":1454246129,"type":0,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestSwappedIndexFiles#swapFiles(Directory,Directory).mjava","pathOld":"/dev/null","sourceNew":"  private void swapFiles(Directory dir1, Directory dir2) throws IOException {\n    for(String name : dir1.listAll()) {\n      if (name.equals(IndexWriter.WRITE_LOCK_NAME)) {\n        continue;\n      }\n      swapOneFile(dir1, dir2, name);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"335c742a0e04e95338760c9da8aecb8c3f5df9b3","date":1454322440,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestSwappedIndexFiles#swapFiles(Directory,Directory).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestSwappedIndexFiles#swapFiles(Directory,Directory).mjava","sourceNew":"  private void swapFiles(Directory dir1, Directory dir2) throws IOException {\n    if (VERBOSE) {\n      System.out.println(\"TEST: dir1 files: \" + Arrays.toString(dir1.listAll()));\n      System.out.println(\"TEST: dir2 files: \" + Arrays.toString(dir2.listAll()));\n    }\n    for(String name : dir1.listAll()) {\n      if (name.equals(IndexWriter.WRITE_LOCK_NAME)) {\n        continue;\n      }\n      swapOneFile(dir1, dir2, name);\n    }\n  }\n\n","sourceOld":"  private void swapFiles(Directory dir1, Directory dir2) throws IOException {\n    for(String name : dir1.listAll()) {\n      if (name.equals(IndexWriter.WRITE_LOCK_NAME)) {\n        continue;\n      }\n      swapOneFile(dir1, dir2, name);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1e6acbaae7af722f17204ceccf0f7db5753eccf3","date":1454775255,"type":0,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestSwappedIndexFiles#swapFiles(Directory,Directory).mjava","pathOld":"/dev/null","sourceNew":"  private void swapFiles(Directory dir1, Directory dir2) throws IOException {\n    if (VERBOSE) {\n      System.out.println(\"TEST: dir1 files: \" + Arrays.toString(dir1.listAll()));\n      System.out.println(\"TEST: dir2 files: \" + Arrays.toString(dir2.listAll()));\n    }\n    for(String name : dir1.listAll()) {\n      if (name.equals(IndexWriter.WRITE_LOCK_NAME)) {\n        continue;\n      }\n      swapOneFile(dir1, dir2, name);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"335c742a0e04e95338760c9da8aecb8c3f5df9b3":["8d15e34266d75e4e8b95da046cd0afc812367b38"],"b485ce675d4e8b9dbfafd122ca9b7b33a883be7b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","335c742a0e04e95338760c9da8aecb8c3f5df9b3"],"8d15e34266d75e4e8b95da046cd0afc812367b38":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","b485ce675d4e8b9dbfafd122ca9b7b33a883be7b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["335c742a0e04e95338760c9da8aecb8c3f5df9b3"]},"commit2Childs":{"335c742a0e04e95338760c9da8aecb8c3f5df9b3":["1e6acbaae7af722f17204ceccf0f7db5753eccf3","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b485ce675d4e8b9dbfafd122ca9b7b33a883be7b":["8d15e34266d75e4e8b95da046cd0afc812367b38"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b485ce675d4e8b9dbfafd122ca9b7b33a883be7b","1e6acbaae7af722f17204ceccf0f7db5753eccf3","8d15e34266d75e4e8b95da046cd0afc812367b38"],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":[],"8d15e34266d75e4e8b95da046cd0afc812367b38":["335c742a0e04e95338760c9da8aecb8c3f5df9b3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["1e6acbaae7af722f17204ceccf0f7db5753eccf3","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}