{"path":"src/demo/org/apache/lucene/demo/html/HTMLParser#HTMLDocument().mjava","commits":[{"id":"9dc3f3d3156ee3e335155b8a8f44f7e926db09ef","date":1063245093,"type":0,"author":"Erik Hatcher","isMerge":false,"pathNew":"src/demo/org/apache/lucene/demo/html/HTMLParser#HTMLDocument().mjava","pathOld":"/dev/null","sourceNew":"  final public void HTMLDocument() throws ParseException, IOException {\n  Token t;\n    label_1:\n    while (true) {\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case TagName:\n      case DeclName:\n      case Comment1:\n      case Comment2:\n      case Word:\n      case Entity:\n      case Space:\n      case Punct:\n        ;\n        break;\n      default:\n        jj_la1[0] = jj_gen;\n        break label_1;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case TagName:\n        Tag();\n                      afterTag = true;\n        break;\n      case DeclName:\n        t = Decl();\n                      afterTag = true;\n        break;\n      case Comment1:\n      case Comment2:\n        CommentTag();\n                      afterTag = true;\n        break;\n      case Word:\n        t = jj_consume_token(Word);\n                      addText(t.image); afterTag = false;\n        break;\n      case Entity:\n        t = jj_consume_token(Entity);\n                      addText(Entities.decode(t.image)); afterTag = false;\n        break;\n      case Punct:\n        t = jj_consume_token(Punct);\n                      addText(t.image); afterTag = false;\n        break;\n      case Space:\n        jj_consume_token(Space);\n                      addSpace(); afterTag = false;\n        break;\n      default:\n        jj_la1[1] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n    }\n    jj_consume_token(0);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"330879298be052a382e9e092febebdf55728f46b","date":1069612652,"type":3,"author":"Christoph Goller","isMerge":false,"pathNew":"src/demo/org/apache/lucene/demo/html/HTMLParser#HTMLDocument().mjava","pathOld":"src/demo/org/apache/lucene/demo/html/HTMLParser#HTMLDocument().mjava","sourceNew":"  final public void HTMLDocument() throws ParseException, IOException {\n  Token t;\n    label_1:\n    while (true) {\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case ScriptStart:\n      case TagName:\n      case DeclName:\n      case Comment1:\n      case Comment2:\n      case Word:\n      case Entity:\n      case Space:\n      case Punct:\n        ;\n        break;\n      default:\n        jj_la1[0] = jj_gen;\n        break label_1;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case TagName:\n        Tag();\n                      afterTag = true;\n        break;\n      case DeclName:\n        t = Decl();\n                      afterTag = true;\n        break;\n      case Comment1:\n      case Comment2:\n        CommentTag();\n                      afterTag = true;\n        break;\n      case ScriptStart:\n        ScriptTag();\n                     afterTag = true;\n        break;\n      case Word:\n        t = jj_consume_token(Word);\n                      addText(t.image); afterTag = false;\n        break;\n      case Entity:\n        t = jj_consume_token(Entity);\n                      addText(Entities.decode(t.image)); afterTag = false;\n        break;\n      case Punct:\n        t = jj_consume_token(Punct);\n                      addText(t.image); afterTag = false;\n        break;\n      case Space:\n        jj_consume_token(Space);\n                      addSpace(); afterTag = false;\n        break;\n      default:\n        jj_la1[1] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n    }\n    jj_consume_token(0);\n  }\n\n","sourceOld":"  final public void HTMLDocument() throws ParseException, IOException {\n  Token t;\n    label_1:\n    while (true) {\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case TagName:\n      case DeclName:\n      case Comment1:\n      case Comment2:\n      case Word:\n      case Entity:\n      case Space:\n      case Punct:\n        ;\n        break;\n      default:\n        jj_la1[0] = jj_gen;\n        break label_1;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case TagName:\n        Tag();\n                      afterTag = true;\n        break;\n      case DeclName:\n        t = Decl();\n                      afterTag = true;\n        break;\n      case Comment1:\n      case Comment2:\n        CommentTag();\n                      afterTag = true;\n        break;\n      case Word:\n        t = jj_consume_token(Word);\n                      addText(t.image); afterTag = false;\n        break;\n      case Entity:\n        t = jj_consume_token(Entity);\n                      addText(Entities.decode(t.image)); afterTag = false;\n        break;\n      case Punct:\n        t = jj_consume_token(Punct);\n                      addText(t.image); afterTag = false;\n        break;\n      case Space:\n        jj_consume_token(Space);\n                      addSpace(); afterTag = false;\n        break;\n      default:\n        jj_la1[1] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n    }\n    jj_consume_token(0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/demo/org/apache/lucene/demo/html/HTMLParser#HTMLDocument().mjava","pathOld":"src/demo/org/apache/lucene/demo/html/HTMLParser#HTMLDocument().mjava","sourceNew":"  final public void HTMLDocument() throws ParseException, IOException {\n  Token t;\n    label_1:\n    while (true) {\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case ScriptStart:\n      case TagName:\n      case DeclName:\n      case Comment1:\n      case Comment2:\n      case Word:\n      case Entity:\n      case Space:\n      case Punct:\n        ;\n        break;\n      default:\n        jj_la1[0] = jj_gen;\n        break label_1;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case TagName:\n        Tag();\n                      afterTag = true;\n        break;\n      case DeclName:\n        t = Decl();\n                      afterTag = true;\n        break;\n      case Comment1:\n      case Comment2:\n        CommentTag();\n                      afterTag = true;\n        break;\n      case ScriptStart:\n        ScriptTag();\n                     afterTag = true;\n        break;\n      case Word:\n        t = jj_consume_token(Word);\n                      addText(t.image); afterTag = false;\n        break;\n      case Entity:\n        t = jj_consume_token(Entity);\n                      addText(Entities.decode(t.image)); afterTag = false;\n        break;\n      case Punct:\n        t = jj_consume_token(Punct);\n                      addText(t.image); afterTag = false;\n        break;\n      case Space:\n        jj_consume_token(Space);\n                      addSpace(); afterTag = false;\n        break;\n      default:\n        jj_la1[1] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n    }\n    jj_consume_token(0);\n  }\n\n","sourceOld":"  final public void HTMLDocument() throws ParseException, IOException {\n  Token t;\n    label_1:\n    while (true) {\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case ScriptStart:\n      case TagName:\n      case DeclName:\n      case Comment1:\n      case Comment2:\n      case Word:\n      case Entity:\n      case Space:\n      case Punct:\n        ;\n        break;\n      default:\n        jj_la1[0] = jj_gen;\n        break label_1;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case TagName:\n        Tag();\n                      afterTag = true;\n        break;\n      case DeclName:\n        t = Decl();\n                      afterTag = true;\n        break;\n      case Comment1:\n      case Comment2:\n        CommentTag();\n                      afterTag = true;\n        break;\n      case ScriptStart:\n        ScriptTag();\n                     afterTag = true;\n        break;\n      case Word:\n        t = jj_consume_token(Word);\n                      addText(t.image); afterTag = false;\n        break;\n      case Entity:\n        t = jj_consume_token(Entity);\n                      addText(Entities.decode(t.image)); afterTag = false;\n        break;\n      case Punct:\n        t = jj_consume_token(Punct);\n                      addText(t.image); afterTag = false;\n        break;\n      case Space:\n        jj_consume_token(Space);\n                      addSpace(); afterTag = false;\n        break;\n      default:\n        jj_la1[1] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n    }\n    jj_consume_token(0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"330879298be052a382e9e092febebdf55728f46b":["9dc3f3d3156ee3e335155b8a8f44f7e926db09ef"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9dc3f3d3156ee3e335155b8a8f44f7e926db09ef":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["330879298be052a382e9e092febebdf55728f46b"]},"commit2Childs":{"330879298be052a382e9e092febebdf55728f46b":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9dc3f3d3156ee3e335155b8a8f44f7e926db09ef"],"9dc3f3d3156ee3e335155b8a8f44f7e926db09ef":["330879298be052a382e9e092febebdf55728f46b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}