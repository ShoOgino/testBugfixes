{"path":"solr/core/src/test/org/apache/solr/core/TestDynamicURP#testUrp().mjava","commits":[{"id":"061081e87f853ad5aa1f3ccf8a5187a37a2c0c60","date":1527258339,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestDynamicURP#testUrp().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testUrp() throws Exception {\n\n    ByteBuffer jar = getFileContent(\"runtimecode/runtimeurp.jar.bin\");\n\n    String blobName = \"urptest\";\n    TestBlobHandler.postAndCheck(cluster.getSolrClient(), cluster.getRandomJetty(random()).getBaseUrl().toString(),\n        blobName, jar, 1);\n\n    new V2Request.Builder(\"/c/\" + COLLECTION + \"/config\")\n        .withPayload(singletonMap(\"add-runtimelib\", (MapWriter) ew1 -> ew1\n            .put(\"name\", blobName)\n            .put(\"version\", \"1\")))\n        .withMethod(POST)\n        .build()\n        .process(cluster.getSolrClient());\n    TestSolrConfigHandler.testForResponseElement(null,\n        cluster.getRandomJetty(random()).getBaseUrl().toString(),\n        \"/\"+COLLECTION+\"/config/overlay\",\n        cluster.getSolrClient(),\n        Arrays.asList(\"overlay\", \"runtimeLib\", blobName, \"version\")\n        ,\"1\",10);\n\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.addField(\"id\", \"123\");\n    doc.addField(\"name_s\", \"Test URP\");\n    new UpdateRequest()\n        .add(doc)\n        .commit(cluster.getSolrClient(), COLLECTION);\n    QueryResponse result = cluster.getSolrClient().query(COLLECTION, new SolrQuery(\"id:123\"));\n    assertEquals(1, result.getResults().getNumFound());\n    Object time_s = result.getResults().get(0).getFirstValue(\"time_s\");\n    assertNotNull(time_s);\n\n\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0d16198391f70a4ee52a8c8792c91eb87a30f1d6","date":1596695552,"type":4,"author":"Noble Paul","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/core/TestDynamicURP#testUrp().mjava","sourceNew":null,"sourceOld":"  @Test\n  public void testUrp() throws Exception {\n\n    ByteBuffer jar = getFileContent(\"runtimecode/runtimeurp.jar.bin\");\n\n    String blobName = \"urptest\";\n    TestBlobHandler.postAndCheck(cluster.getSolrClient(), cluster.getRandomJetty(random()).getBaseUrl().toString(),\n        blobName, jar, 1);\n\n    new V2Request.Builder(\"/c/\" + COLLECTION + \"/config\")\n        .withPayload(singletonMap(\"add-runtimelib\", (MapWriter) ew1 -> ew1\n            .put(\"name\", blobName)\n            .put(\"version\", \"1\")))\n        .withMethod(POST)\n        .build()\n        .process(cluster.getSolrClient());\n    TestSolrConfigHandler.testForResponseElement(null,\n        cluster.getRandomJetty(random()).getBaseUrl().toString(),\n        \"/\"+COLLECTION+\"/config/overlay\",\n        cluster.getSolrClient(),\n        Arrays.asList(\"overlay\", \"runtimeLib\", blobName, \"version\")\n        ,\"1\",10);\n\n    SolrInputDocument doc = new SolrInputDocument();\n    doc.addField(\"id\", \"123\");\n    doc.addField(\"name_s\", \"Test URP\");\n    new UpdateRequest()\n        .add(doc)\n        .commit(cluster.getSolrClient(), COLLECTION);\n    QueryResponse result = cluster.getSolrClient().query(COLLECTION, new SolrQuery(\"id:123\"));\n    assertEquals(1, result.getResults().getNumFound());\n    Object time_s = result.getResults().get(0).getFirstValue(\"time_s\");\n    assertNotNull(time_s);\n\n\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"061081e87f853ad5aa1f3ccf8a5187a37a2c0c60":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0d16198391f70a4ee52a8c8792c91eb87a30f1d6":["061081e87f853ad5aa1f3ccf8a5187a37a2c0c60"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0d16198391f70a4ee52a8c8792c91eb87a30f1d6"]},"commit2Childs":{"061081e87f853ad5aa1f3ccf8a5187a37a2c0c60":["0d16198391f70a4ee52a8c8792c91eb87a30f1d6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["061081e87f853ad5aa1f3ccf8a5187a37a2c0c60"],"0d16198391f70a4ee52a8c8792c91eb87a30f1d6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}