{"path":"lucene/spatial/src/test/org/apache/lucene/spatial/spatial4j/geo3d/GeoBBoxTest#testBBoxBounds().mjava","commits":[{"id":"851e4197476b684154a7b65f996f535522e67400","date":1428926498,"type":0,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/spatial4j/geo3d/GeoBBoxTest#testBBoxBounds().mjava","pathOld":"/dev/null","sourceNew":"    @Test\n    public void testBBoxBounds() {\n        GeoBBox c;\n        Bounds b;\n        \n        c = GeoBBoxFactory.makeGeoBBox(0.0,-Math.PI * 0.25, -1.0, 1.0);\n\n        b = c.getBounds(null);\n        assertFalse(b.checkNoLongitudeBound());\n        assertFalse(b.checkNoTopLatitudeBound());\n        assertFalse(b.checkNoBottomLatitudeBound());\n        assertEquals(-1.0,b.getLeftLongitude(),0.000001);\n        assertEquals(1.0,b.getRightLongitude(),0.000001);\n        assertEquals(-Math.PI * 0.25,b.getMinLatitude(),0.000001);\n        assertEquals(0.0,b.getMaxLatitude(),0.000001);\n\n        c = GeoBBoxFactory.makeGeoBBox(0.0,-Math.PI * 0.25, 1.0, -1.0);\n\n        b = c.getBounds(null);\n        assertFalse(b.checkNoLongitudeBound());\n        assertFalse(b.checkNoTopLatitudeBound());\n        assertFalse(b.checkNoBottomLatitudeBound());\n        assertEquals(1.0,b.getLeftLongitude(),0.000001);\n        assertEquals(-1.0,b.getRightLongitude(),0.000001);\n        assertEquals(-Math.PI * 0.25,b.getMinLatitude(),0.000001);\n        assertEquals(0.0,b.getMaxLatitude(),0.000001);\n\n        c = GeoBBoxFactory.makeGeoBBox(Math.PI * 0.5, -Math.PI * 0.5, -1.0, 1.0);\n\n        b = c.getBounds(null);\n        assertFalse(b.checkNoLongitudeBound());\n        assertTrue(b.checkNoTopLatitudeBound());\n        assertTrue(b.checkNoBottomLatitudeBound());\n        assertEquals(-1.0,b.getLeftLongitude(),0.000001);\n        assertEquals(1.0,b.getRightLongitude(),0.000001);\n\n        c = GeoBBoxFactory.makeGeoBBox(Math.PI * 0.5, -Math.PI * 0.5, 1.0, -1.0);\n\n        b = c.getBounds(null);\n        assertFalse(b.checkNoLongitudeBound());\n        assertTrue(b.checkNoTopLatitudeBound());\n        assertTrue(b.checkNoBottomLatitudeBound());\n        assertEquals(1.0,b.getLeftLongitude(),0.000001);\n        assertEquals(-1.0,b.getRightLongitude(),0.000001);\n\n        // Check wide variants of rectangle and longitude slice\n\n        c = GeoBBoxFactory.makeGeoBBox(0.0,-Math.PI * 0.25, -Math.PI+0.1, Math.PI-0.1);\n\n        b = c.getBounds(null);\n        assertFalse(b.checkNoLongitudeBound());\n        assertFalse(b.checkNoTopLatitudeBound());\n        assertFalse(b.checkNoBottomLatitudeBound());\n        assertEquals(-Math.PI+0.1,b.getLeftLongitude(),0.000001);\n        assertEquals(Math.PI-0.1,b.getRightLongitude(),0.000001);\n        assertEquals(-Math.PI * 0.25,b.getMinLatitude(),0.000001);\n        assertEquals(0.0,b.getMaxLatitude(),0.000001);\n\n        c = GeoBBoxFactory.makeGeoBBox(0.0,-Math.PI * 0.25, Math.PI-0.1, -Math.PI+0.1);\n\n        b = c.getBounds(null);\n        assertFalse(b.checkNoLongitudeBound());\n        assertFalse(b.checkNoTopLatitudeBound());\n        assertFalse(b.checkNoBottomLatitudeBound());\n        assertEquals(Math.PI-0.1,b.getLeftLongitude(),0.000001);\n        assertEquals(-Math.PI+0.1,b.getRightLongitude(),0.000001);\n        assertEquals(-Math.PI * 0.25,b.getMinLatitude(),0.000001);\n        assertEquals(0.0,b.getMaxLatitude(),0.000001);\n\n        c = GeoBBoxFactory.makeGeoBBox(Math.PI * 0.5, -Math.PI * 0.5, -Math.PI+0.1, Math.PI-0.1);\n\n        b = c.getBounds(null);\n        assertFalse(b.checkNoLongitudeBound());\n        assertTrue(b.checkNoTopLatitudeBound());\n        assertTrue(b.checkNoBottomLatitudeBound());\n        assertEquals(-Math.PI+0.1,b.getLeftLongitude(),0.000001);\n        assertEquals(Math.PI-0.1,b.getRightLongitude(),0.000001);\n\n        c = GeoBBoxFactory.makeGeoBBox(Math.PI * 0.5, -Math.PI * 0.5, Math.PI-0.1, -Math.PI+0.1);\n\n        b = c.getBounds(null);\n        assertFalse(b.checkNoLongitudeBound());\n        assertTrue(b.checkNoTopLatitudeBound());\n        assertTrue(b.checkNoBottomLatitudeBound());\n        assertEquals(Math.PI-0.1,b.getLeftLongitude(),0.000001);\n        assertEquals(-Math.PI+0.1,b.getRightLongitude(),0.000001);\n        \n        // Check latitude zone\n        c = GeoBBoxFactory.makeGeoBBox(1.0, -1.0, -Math.PI, Math.PI);\n\n        b = c.getBounds(null);\n        assertTrue(b.checkNoLongitudeBound());\n        assertFalse(b.checkNoTopLatitudeBound());\n        assertFalse(b.checkNoBottomLatitudeBound());\n        assertEquals(-1.0,b.getMinLatitude(),0.000001);\n        assertEquals(1.0,b.getMaxLatitude(),0.000001);\n\n        // Now, combine a few things to test the bounds object\n        GeoBBox c1;\n        GeoBBox c2;\n        \n        c1 = GeoBBoxFactory.makeGeoBBox(Math.PI * 0.5, -Math.PI * 0.5, -Math.PI, 0.0);\n        c2 = GeoBBoxFactory.makeGeoBBox(Math.PI * 0.5, -Math.PI * 0.5, 0.0, Math.PI);\n\n        b = new Bounds();\n        b = c1.getBounds(b);\n        b = c2.getBounds(b);\n        assertTrue(b.checkNoLongitudeBound());\n        assertTrue(b.checkNoTopLatitudeBound());\n        assertTrue(b.checkNoBottomLatitudeBound());\n\n        c1 = GeoBBoxFactory.makeGeoBBox(Math.PI * 0.5, -Math.PI * 0.5, -Math.PI, 0.0);\n        c2 = GeoBBoxFactory.makeGeoBBox(Math.PI * 0.5, -Math.PI * 0.5, 0.0, Math.PI*0.5);\n\n        b = new Bounds();\n        b = c1.getBounds(b);\n        b = c2.getBounds(b);\n        assertFalse(b.checkNoLongitudeBound());\n        assertTrue(b.checkNoTopLatitudeBound());\n        assertTrue(b.checkNoBottomLatitudeBound());\n        assertEquals(-Math.PI,b.getLeftLongitude(),0.000001);\n        assertEquals(Math.PI*0.5,b.getRightLongitude(),0.000001);\n\n        c1 = GeoBBoxFactory.makeGeoBBox(Math.PI * 0.5, -Math.PI * 0.5, -Math.PI * 0.5, 0.0);\n        c2 = GeoBBoxFactory.makeGeoBBox(Math.PI * 0.5, -Math.PI * 0.5, 0.0, Math.PI);\n\n        b = new Bounds();\n        b = c1.getBounds(b);\n        b = c2.getBounds(b);\n        assertFalse(b.checkNoLongitudeBound());\n        assertTrue(b.checkNoTopLatitudeBound());\n        assertTrue(b.checkNoBottomLatitudeBound());\n        assertEquals(-Math.PI * 0.5,b.getLeftLongitude(),0.000001);\n        assertEquals(Math.PI,b.getRightLongitude(),0.000001);\n\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"47619c5413e53c4d414c1ececa274bef0cd3c799","date":1430506189,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/spatial4j/geo3d/GeoBBoxTest#testBBoxBounds().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/spatial4j/geo3d/GeoBBoxTest#testBBoxBounds().mjava","sourceNew":"    @Test\n    public void testBBoxBounds() {\n        GeoBBox c;\n        Bounds b;\n        \n        c = GeoBBoxFactory.makeGeoBBox(0.0,-Math.PI * 0.25, -1.0, 1.0);\n\n        b = c.getBounds(null);\n        assertFalse(b.checkNoLongitudeBound());\n        assertFalse(b.checkNoTopLatitudeBound());\n        assertFalse(b.checkNoBottomLatitudeBound());\n        assertEquals(-1.0,b.getLeftLongitude(),0.000001);\n        assertEquals(1.0,b.getRightLongitude(),0.000001);\n        assertEquals(-Math.PI * 0.25,b.getMinLatitude(),0.000001);\n        assertEquals(0.0,b.getMaxLatitude(),0.000001);\n\n        c = GeoBBoxFactory.makeGeoBBox(0.0,-Math.PI * 0.25, 1.0, -1.0);\n\n        b = c.getBounds(null);\n        assertTrue(b.checkNoLongitudeBound());\n        assertFalse(b.checkNoTopLatitudeBound());\n        assertFalse(b.checkNoBottomLatitudeBound());\n        //assertEquals(1.0,b.getLeftLongitude(),0.000001);\n        //assertEquals(-1.0,b.getRightLongitude(),0.000001);\n        assertEquals(-Math.PI * 0.25,b.getMinLatitude(),0.000001);\n        assertEquals(0.0,b.getMaxLatitude(),0.000001);\n\n        c = GeoBBoxFactory.makeGeoBBox(Math.PI * 0.5, -Math.PI * 0.5, -1.0, 1.0);\n\n        b = c.getBounds(null);\n        assertFalse(b.checkNoLongitudeBound());\n        assertTrue(b.checkNoTopLatitudeBound());\n        assertTrue(b.checkNoBottomLatitudeBound());\n        assertEquals(-1.0,b.getLeftLongitude(),0.000001);\n        assertEquals(1.0,b.getRightLongitude(),0.000001);\n\n        c = GeoBBoxFactory.makeGeoBBox(Math.PI * 0.5, -Math.PI * 0.5, 1.0, -1.0);\n\n        b = c.getBounds(null);\n        assertTrue(b.checkNoLongitudeBound());\n        assertTrue(b.checkNoTopLatitudeBound());\n        assertTrue(b.checkNoBottomLatitudeBound());\n        //assertEquals(1.0,b.getLeftLongitude(),0.000001);\n        //assertEquals(-1.0,b.getRightLongitude(),0.000001);\n\n        // Check wide variants of rectangle and longitude slice\n\n        c = GeoBBoxFactory.makeGeoBBox(0.0,-Math.PI * 0.25, -Math.PI+0.1, Math.PI-0.1);\n\n        b = c.getBounds(null);\n        assertTrue(b.checkNoLongitudeBound());\n        assertFalse(b.checkNoTopLatitudeBound());\n        assertFalse(b.checkNoBottomLatitudeBound());\n        //assertEquals(-Math.PI+0.1,b.getLeftLongitude(),0.000001);\n        //assertEquals(Math.PI-0.1,b.getRightLongitude(),0.000001);\n        assertEquals(-Math.PI * 0.25,b.getMinLatitude(),0.000001);\n        assertEquals(0.0,b.getMaxLatitude(),0.000001);\n\n        c = GeoBBoxFactory.makeGeoBBox(0.0,-Math.PI * 0.25, Math.PI-0.1, -Math.PI+0.1);\n\n        b = c.getBounds(null);\n        assertFalse(b.checkNoLongitudeBound());\n        assertFalse(b.checkNoTopLatitudeBound());\n        assertFalse(b.checkNoBottomLatitudeBound());\n        assertEquals(Math.PI-0.1,b.getLeftLongitude(),0.000001);\n        assertEquals(-Math.PI+0.1,b.getRightLongitude(),0.000001);\n        assertEquals(-Math.PI * 0.25,b.getMinLatitude(),0.000001);\n        assertEquals(0.0,b.getMaxLatitude(),0.000001);\n\n        c = GeoBBoxFactory.makeGeoBBox(Math.PI * 0.5, -Math.PI * 0.5, -Math.PI+0.1, Math.PI-0.1);\n\n        b = c.getBounds(null);\n        assertTrue(b.checkNoLongitudeBound());\n        assertTrue(b.checkNoTopLatitudeBound());\n        assertTrue(b.checkNoBottomLatitudeBound());\n        //assertEquals(-Math.PI+0.1,b.getLeftLongitude(),0.000001);\n        //assertEquals(Math.PI-0.1,b.getRightLongitude(),0.000001);\n\n        c = GeoBBoxFactory.makeGeoBBox(Math.PI * 0.5, -Math.PI * 0.5, Math.PI-0.1, -Math.PI+0.1);\n\n        b = c.getBounds(null);\n        assertFalse(b.checkNoLongitudeBound());\n        assertTrue(b.checkNoTopLatitudeBound());\n        assertTrue(b.checkNoBottomLatitudeBound());\n        assertEquals(Math.PI-0.1,b.getLeftLongitude(),0.000001);\n        assertEquals(-Math.PI+0.1,b.getRightLongitude(),0.000001);\n        \n        // Check latitude zone\n        c = GeoBBoxFactory.makeGeoBBox(1.0, -1.0, -Math.PI, Math.PI);\n\n        b = c.getBounds(null);\n        assertTrue(b.checkNoLongitudeBound());\n        assertFalse(b.checkNoTopLatitudeBound());\n        assertFalse(b.checkNoBottomLatitudeBound());\n        assertEquals(-1.0,b.getMinLatitude(),0.000001);\n        assertEquals(1.0,b.getMaxLatitude(),0.000001);\n\n        // Now, combine a few things to test the bounds object\n        GeoBBox c1;\n        GeoBBox c2;\n        \n        c1 = GeoBBoxFactory.makeGeoBBox(Math.PI * 0.5, -Math.PI * 0.5, -Math.PI, 0.0);\n        c2 = GeoBBoxFactory.makeGeoBBox(Math.PI * 0.5, -Math.PI * 0.5, 0.0, Math.PI);\n\n        b = new Bounds();\n        b = c1.getBounds(b);\n        b = c2.getBounds(b);\n        assertTrue(b.checkNoLongitudeBound());\n        assertTrue(b.checkNoTopLatitudeBound());\n        assertTrue(b.checkNoBottomLatitudeBound());\n\n        c1 = GeoBBoxFactory.makeGeoBBox(Math.PI * 0.5, -Math.PI * 0.5, -Math.PI, 0.0);\n        c2 = GeoBBoxFactory.makeGeoBBox(Math.PI * 0.5, -Math.PI * 0.5, 0.0, Math.PI*0.5);\n\n        b = new Bounds();\n        b = c1.getBounds(b);\n        b = c2.getBounds(b);\n        assertTrue(b.checkNoLongitudeBound());\n        assertTrue(b.checkNoTopLatitudeBound());\n        assertTrue(b.checkNoBottomLatitudeBound());\n        //assertEquals(-Math.PI,b.getLeftLongitude(),0.000001);\n        //assertEquals(Math.PI*0.5,b.getRightLongitude(),0.000001);\n\n        c1 = GeoBBoxFactory.makeGeoBBox(Math.PI * 0.5, -Math.PI * 0.5, -Math.PI * 0.5, 0.0);\n        c2 = GeoBBoxFactory.makeGeoBBox(Math.PI * 0.5, -Math.PI * 0.5, 0.0, Math.PI);\n\n        b = new Bounds();\n        b = c1.getBounds(b);\n        b = c2.getBounds(b);\n        assertTrue(b.checkNoLongitudeBound());\n        assertTrue(b.checkNoTopLatitudeBound());\n        assertTrue(b.checkNoBottomLatitudeBound());\n        //assertEquals(-Math.PI * 0.5,b.getLeftLongitude(),0.000001);\n        //assertEquals(Math.PI,b.getRightLongitude(),0.000001);\n\n    }\n\n","sourceOld":"    @Test\n    public void testBBoxBounds() {\n        GeoBBox c;\n        Bounds b;\n        \n        c = GeoBBoxFactory.makeGeoBBox(0.0,-Math.PI * 0.25, -1.0, 1.0);\n\n        b = c.getBounds(null);\n        assertFalse(b.checkNoLongitudeBound());\n        assertFalse(b.checkNoTopLatitudeBound());\n        assertFalse(b.checkNoBottomLatitudeBound());\n        assertEquals(-1.0,b.getLeftLongitude(),0.000001);\n        assertEquals(1.0,b.getRightLongitude(),0.000001);\n        assertEquals(-Math.PI * 0.25,b.getMinLatitude(),0.000001);\n        assertEquals(0.0,b.getMaxLatitude(),0.000001);\n\n        c = GeoBBoxFactory.makeGeoBBox(0.0,-Math.PI * 0.25, 1.0, -1.0);\n\n        b = c.getBounds(null);\n        assertFalse(b.checkNoLongitudeBound());\n        assertFalse(b.checkNoTopLatitudeBound());\n        assertFalse(b.checkNoBottomLatitudeBound());\n        assertEquals(1.0,b.getLeftLongitude(),0.000001);\n        assertEquals(-1.0,b.getRightLongitude(),0.000001);\n        assertEquals(-Math.PI * 0.25,b.getMinLatitude(),0.000001);\n        assertEquals(0.0,b.getMaxLatitude(),0.000001);\n\n        c = GeoBBoxFactory.makeGeoBBox(Math.PI * 0.5, -Math.PI * 0.5, -1.0, 1.0);\n\n        b = c.getBounds(null);\n        assertFalse(b.checkNoLongitudeBound());\n        assertTrue(b.checkNoTopLatitudeBound());\n        assertTrue(b.checkNoBottomLatitudeBound());\n        assertEquals(-1.0,b.getLeftLongitude(),0.000001);\n        assertEquals(1.0,b.getRightLongitude(),0.000001);\n\n        c = GeoBBoxFactory.makeGeoBBox(Math.PI * 0.5, -Math.PI * 0.5, 1.0, -1.0);\n\n        b = c.getBounds(null);\n        assertFalse(b.checkNoLongitudeBound());\n        assertTrue(b.checkNoTopLatitudeBound());\n        assertTrue(b.checkNoBottomLatitudeBound());\n        assertEquals(1.0,b.getLeftLongitude(),0.000001);\n        assertEquals(-1.0,b.getRightLongitude(),0.000001);\n\n        // Check wide variants of rectangle and longitude slice\n\n        c = GeoBBoxFactory.makeGeoBBox(0.0,-Math.PI * 0.25, -Math.PI+0.1, Math.PI-0.1);\n\n        b = c.getBounds(null);\n        assertFalse(b.checkNoLongitudeBound());\n        assertFalse(b.checkNoTopLatitudeBound());\n        assertFalse(b.checkNoBottomLatitudeBound());\n        assertEquals(-Math.PI+0.1,b.getLeftLongitude(),0.000001);\n        assertEquals(Math.PI-0.1,b.getRightLongitude(),0.000001);\n        assertEquals(-Math.PI * 0.25,b.getMinLatitude(),0.000001);\n        assertEquals(0.0,b.getMaxLatitude(),0.000001);\n\n        c = GeoBBoxFactory.makeGeoBBox(0.0,-Math.PI * 0.25, Math.PI-0.1, -Math.PI+0.1);\n\n        b = c.getBounds(null);\n        assertFalse(b.checkNoLongitudeBound());\n        assertFalse(b.checkNoTopLatitudeBound());\n        assertFalse(b.checkNoBottomLatitudeBound());\n        assertEquals(Math.PI-0.1,b.getLeftLongitude(),0.000001);\n        assertEquals(-Math.PI+0.1,b.getRightLongitude(),0.000001);\n        assertEquals(-Math.PI * 0.25,b.getMinLatitude(),0.000001);\n        assertEquals(0.0,b.getMaxLatitude(),0.000001);\n\n        c = GeoBBoxFactory.makeGeoBBox(Math.PI * 0.5, -Math.PI * 0.5, -Math.PI+0.1, Math.PI-0.1);\n\n        b = c.getBounds(null);\n        assertFalse(b.checkNoLongitudeBound());\n        assertTrue(b.checkNoTopLatitudeBound());\n        assertTrue(b.checkNoBottomLatitudeBound());\n        assertEquals(-Math.PI+0.1,b.getLeftLongitude(),0.000001);\n        assertEquals(Math.PI-0.1,b.getRightLongitude(),0.000001);\n\n        c = GeoBBoxFactory.makeGeoBBox(Math.PI * 0.5, -Math.PI * 0.5, Math.PI-0.1, -Math.PI+0.1);\n\n        b = c.getBounds(null);\n        assertFalse(b.checkNoLongitudeBound());\n        assertTrue(b.checkNoTopLatitudeBound());\n        assertTrue(b.checkNoBottomLatitudeBound());\n        assertEquals(Math.PI-0.1,b.getLeftLongitude(),0.000001);\n        assertEquals(-Math.PI+0.1,b.getRightLongitude(),0.000001);\n        \n        // Check latitude zone\n        c = GeoBBoxFactory.makeGeoBBox(1.0, -1.0, -Math.PI, Math.PI);\n\n        b = c.getBounds(null);\n        assertTrue(b.checkNoLongitudeBound());\n        assertFalse(b.checkNoTopLatitudeBound());\n        assertFalse(b.checkNoBottomLatitudeBound());\n        assertEquals(-1.0,b.getMinLatitude(),0.000001);\n        assertEquals(1.0,b.getMaxLatitude(),0.000001);\n\n        // Now, combine a few things to test the bounds object\n        GeoBBox c1;\n        GeoBBox c2;\n        \n        c1 = GeoBBoxFactory.makeGeoBBox(Math.PI * 0.5, -Math.PI * 0.5, -Math.PI, 0.0);\n        c2 = GeoBBoxFactory.makeGeoBBox(Math.PI * 0.5, -Math.PI * 0.5, 0.0, Math.PI);\n\n        b = new Bounds();\n        b = c1.getBounds(b);\n        b = c2.getBounds(b);\n        assertTrue(b.checkNoLongitudeBound());\n        assertTrue(b.checkNoTopLatitudeBound());\n        assertTrue(b.checkNoBottomLatitudeBound());\n\n        c1 = GeoBBoxFactory.makeGeoBBox(Math.PI * 0.5, -Math.PI * 0.5, -Math.PI, 0.0);\n        c2 = GeoBBoxFactory.makeGeoBBox(Math.PI * 0.5, -Math.PI * 0.5, 0.0, Math.PI*0.5);\n\n        b = new Bounds();\n        b = c1.getBounds(b);\n        b = c2.getBounds(b);\n        assertFalse(b.checkNoLongitudeBound());\n        assertTrue(b.checkNoTopLatitudeBound());\n        assertTrue(b.checkNoBottomLatitudeBound());\n        assertEquals(-Math.PI,b.getLeftLongitude(),0.000001);\n        assertEquals(Math.PI*0.5,b.getRightLongitude(),0.000001);\n\n        c1 = GeoBBoxFactory.makeGeoBBox(Math.PI * 0.5, -Math.PI * 0.5, -Math.PI * 0.5, 0.0);\n        c2 = GeoBBoxFactory.makeGeoBBox(Math.PI * 0.5, -Math.PI * 0.5, 0.0, Math.PI);\n\n        b = new Bounds();\n        b = c1.getBounds(b);\n        b = c2.getBounds(b);\n        assertFalse(b.checkNoLongitudeBound());\n        assertTrue(b.checkNoTopLatitudeBound());\n        assertTrue(b.checkNoBottomLatitudeBound());\n        assertEquals(-Math.PI * 0.5,b.getLeftLongitude(),0.000001);\n        assertEquals(Math.PI,b.getRightLongitude(),0.000001);\n\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e2997acf74723385bd84aff1ea0b12af4aefde77","date":1430745542,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/spatial4j/geo3d/GeoBBoxTest#testBBoxBounds().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/spatial4j/geo3d/GeoBBoxTest#testBBoxBounds().mjava","sourceNew":"  @Test\n  public void testBBoxBounds() {\n    GeoBBox c;\n    Bounds b;\n\n    c = GeoBBoxFactory.makeGeoBBox(0.0, -Math.PI * 0.25, -1.0, 1.0);\n\n    b = c.getBounds(null);\n    assertFalse(b.checkNoLongitudeBound());\n    assertFalse(b.checkNoTopLatitudeBound());\n    assertFalse(b.checkNoBottomLatitudeBound());\n    assertEquals(-1.0, b.getLeftLongitude(), 0.000001);\n    assertEquals(1.0, b.getRightLongitude(), 0.000001);\n    assertEquals(-Math.PI * 0.25, b.getMinLatitude(), 0.000001);\n    assertEquals(0.0, b.getMaxLatitude(), 0.000001);\n\n    c = GeoBBoxFactory.makeGeoBBox(0.0, -Math.PI * 0.25, 1.0, -1.0);\n\n    b = c.getBounds(null);\n    assertTrue(b.checkNoLongitudeBound());\n    assertFalse(b.checkNoTopLatitudeBound());\n    assertFalse(b.checkNoBottomLatitudeBound());\n    //assertEquals(1.0,b.getLeftLongitude(),0.000001);\n    //assertEquals(-1.0,b.getRightLongitude(),0.000001);\n    assertEquals(-Math.PI * 0.25, b.getMinLatitude(), 0.000001);\n    assertEquals(0.0, b.getMaxLatitude(), 0.000001);\n\n    c = GeoBBoxFactory.makeGeoBBox(Math.PI * 0.5, -Math.PI * 0.5, -1.0, 1.0);\n\n    b = c.getBounds(null);\n    assertFalse(b.checkNoLongitudeBound());\n    assertTrue(b.checkNoTopLatitudeBound());\n    assertTrue(b.checkNoBottomLatitudeBound());\n    assertEquals(-1.0, b.getLeftLongitude(), 0.000001);\n    assertEquals(1.0, b.getRightLongitude(), 0.000001);\n\n    c = GeoBBoxFactory.makeGeoBBox(Math.PI * 0.5, -Math.PI * 0.5, 1.0, -1.0);\n\n    b = c.getBounds(null);\n    assertTrue(b.checkNoLongitudeBound());\n    assertTrue(b.checkNoTopLatitudeBound());\n    assertTrue(b.checkNoBottomLatitudeBound());\n    //assertEquals(1.0,b.getLeftLongitude(),0.000001);\n    //assertEquals(-1.0,b.getRightLongitude(),0.000001);\n\n    // Check wide variants of rectangle and longitude slice\n\n    c = GeoBBoxFactory.makeGeoBBox(0.0, -Math.PI * 0.25, -Math.PI + 0.1, Math.PI - 0.1);\n\n    b = c.getBounds(null);\n    assertTrue(b.checkNoLongitudeBound());\n    assertFalse(b.checkNoTopLatitudeBound());\n    assertFalse(b.checkNoBottomLatitudeBound());\n    //assertEquals(-Math.PI+0.1,b.getLeftLongitude(),0.000001);\n    //assertEquals(Math.PI-0.1,b.getRightLongitude(),0.000001);\n    assertEquals(-Math.PI * 0.25, b.getMinLatitude(), 0.000001);\n    assertEquals(0.0, b.getMaxLatitude(), 0.000001);\n\n    c = GeoBBoxFactory.makeGeoBBox(0.0, -Math.PI * 0.25, Math.PI - 0.1, -Math.PI + 0.1);\n\n    b = c.getBounds(null);\n    assertFalse(b.checkNoLongitudeBound());\n    assertFalse(b.checkNoTopLatitudeBound());\n    assertFalse(b.checkNoBottomLatitudeBound());\n    assertEquals(Math.PI - 0.1, b.getLeftLongitude(), 0.000001);\n    assertEquals(-Math.PI + 0.1, b.getRightLongitude(), 0.000001);\n    assertEquals(-Math.PI * 0.25, b.getMinLatitude(), 0.000001);\n    assertEquals(0.0, b.getMaxLatitude(), 0.000001);\n\n    c = GeoBBoxFactory.makeGeoBBox(Math.PI * 0.5, -Math.PI * 0.5, -Math.PI + 0.1, Math.PI - 0.1);\n\n    b = c.getBounds(null);\n    assertTrue(b.checkNoLongitudeBound());\n    assertTrue(b.checkNoTopLatitudeBound());\n    assertTrue(b.checkNoBottomLatitudeBound());\n    //assertEquals(-Math.PI+0.1,b.getLeftLongitude(),0.000001);\n    //assertEquals(Math.PI-0.1,b.getRightLongitude(),0.000001);\n\n    c = GeoBBoxFactory.makeGeoBBox(Math.PI * 0.5, -Math.PI * 0.5, Math.PI - 0.1, -Math.PI + 0.1);\n\n    b = c.getBounds(null);\n    assertFalse(b.checkNoLongitudeBound());\n    assertTrue(b.checkNoTopLatitudeBound());\n    assertTrue(b.checkNoBottomLatitudeBound());\n    assertEquals(Math.PI - 0.1, b.getLeftLongitude(), 0.000001);\n    assertEquals(-Math.PI + 0.1, b.getRightLongitude(), 0.000001);\n\n    // Check latitude zone\n    c = GeoBBoxFactory.makeGeoBBox(1.0, -1.0, -Math.PI, Math.PI);\n\n    b = c.getBounds(null);\n    assertTrue(b.checkNoLongitudeBound());\n    assertFalse(b.checkNoTopLatitudeBound());\n    assertFalse(b.checkNoBottomLatitudeBound());\n    assertEquals(-1.0, b.getMinLatitude(), 0.000001);\n    assertEquals(1.0, b.getMaxLatitude(), 0.000001);\n\n    // Now, combine a few things to test the bounds object\n    GeoBBox c1;\n    GeoBBox c2;\n\n    c1 = GeoBBoxFactory.makeGeoBBox(Math.PI * 0.5, -Math.PI * 0.5, -Math.PI, 0.0);\n    c2 = GeoBBoxFactory.makeGeoBBox(Math.PI * 0.5, -Math.PI * 0.5, 0.0, Math.PI);\n\n    b = new Bounds();\n    b = c1.getBounds(b);\n    b = c2.getBounds(b);\n    assertTrue(b.checkNoLongitudeBound());\n    assertTrue(b.checkNoTopLatitudeBound());\n    assertTrue(b.checkNoBottomLatitudeBound());\n\n    c1 = GeoBBoxFactory.makeGeoBBox(Math.PI * 0.5, -Math.PI * 0.5, -Math.PI, 0.0);\n    c2 = GeoBBoxFactory.makeGeoBBox(Math.PI * 0.5, -Math.PI * 0.5, 0.0, Math.PI * 0.5);\n\n    b = new Bounds();\n    b = c1.getBounds(b);\n    b = c2.getBounds(b);\n    assertTrue(b.checkNoLongitudeBound());\n    assertTrue(b.checkNoTopLatitudeBound());\n    assertTrue(b.checkNoBottomLatitudeBound());\n    //assertEquals(-Math.PI,b.getLeftLongitude(),0.000001);\n    //assertEquals(Math.PI*0.5,b.getRightLongitude(),0.000001);\n\n    c1 = GeoBBoxFactory.makeGeoBBox(Math.PI * 0.5, -Math.PI * 0.5, -Math.PI * 0.5, 0.0);\n    c2 = GeoBBoxFactory.makeGeoBBox(Math.PI * 0.5, -Math.PI * 0.5, 0.0, Math.PI);\n\n    b = new Bounds();\n    b = c1.getBounds(b);\n    b = c2.getBounds(b);\n    assertTrue(b.checkNoLongitudeBound());\n    assertTrue(b.checkNoTopLatitudeBound());\n    assertTrue(b.checkNoBottomLatitudeBound());\n    //assertEquals(-Math.PI * 0.5,b.getLeftLongitude(),0.000001);\n    //assertEquals(Math.PI,b.getRightLongitude(),0.000001);\n\n  }\n\n","sourceOld":"    @Test\n    public void testBBoxBounds() {\n        GeoBBox c;\n        Bounds b;\n        \n        c = GeoBBoxFactory.makeGeoBBox(0.0,-Math.PI * 0.25, -1.0, 1.0);\n\n        b = c.getBounds(null);\n        assertFalse(b.checkNoLongitudeBound());\n        assertFalse(b.checkNoTopLatitudeBound());\n        assertFalse(b.checkNoBottomLatitudeBound());\n        assertEquals(-1.0,b.getLeftLongitude(),0.000001);\n        assertEquals(1.0,b.getRightLongitude(),0.000001);\n        assertEquals(-Math.PI * 0.25,b.getMinLatitude(),0.000001);\n        assertEquals(0.0,b.getMaxLatitude(),0.000001);\n\n        c = GeoBBoxFactory.makeGeoBBox(0.0,-Math.PI * 0.25, 1.0, -1.0);\n\n        b = c.getBounds(null);\n        assertTrue(b.checkNoLongitudeBound());\n        assertFalse(b.checkNoTopLatitudeBound());\n        assertFalse(b.checkNoBottomLatitudeBound());\n        //assertEquals(1.0,b.getLeftLongitude(),0.000001);\n        //assertEquals(-1.0,b.getRightLongitude(),0.000001);\n        assertEquals(-Math.PI * 0.25,b.getMinLatitude(),0.000001);\n        assertEquals(0.0,b.getMaxLatitude(),0.000001);\n\n        c = GeoBBoxFactory.makeGeoBBox(Math.PI * 0.5, -Math.PI * 0.5, -1.0, 1.0);\n\n        b = c.getBounds(null);\n        assertFalse(b.checkNoLongitudeBound());\n        assertTrue(b.checkNoTopLatitudeBound());\n        assertTrue(b.checkNoBottomLatitudeBound());\n        assertEquals(-1.0,b.getLeftLongitude(),0.000001);\n        assertEquals(1.0,b.getRightLongitude(),0.000001);\n\n        c = GeoBBoxFactory.makeGeoBBox(Math.PI * 0.5, -Math.PI * 0.5, 1.0, -1.0);\n\n        b = c.getBounds(null);\n        assertTrue(b.checkNoLongitudeBound());\n        assertTrue(b.checkNoTopLatitudeBound());\n        assertTrue(b.checkNoBottomLatitudeBound());\n        //assertEquals(1.0,b.getLeftLongitude(),0.000001);\n        //assertEquals(-1.0,b.getRightLongitude(),0.000001);\n\n        // Check wide variants of rectangle and longitude slice\n\n        c = GeoBBoxFactory.makeGeoBBox(0.0,-Math.PI * 0.25, -Math.PI+0.1, Math.PI-0.1);\n\n        b = c.getBounds(null);\n        assertTrue(b.checkNoLongitudeBound());\n        assertFalse(b.checkNoTopLatitudeBound());\n        assertFalse(b.checkNoBottomLatitudeBound());\n        //assertEquals(-Math.PI+0.1,b.getLeftLongitude(),0.000001);\n        //assertEquals(Math.PI-0.1,b.getRightLongitude(),0.000001);\n        assertEquals(-Math.PI * 0.25,b.getMinLatitude(),0.000001);\n        assertEquals(0.0,b.getMaxLatitude(),0.000001);\n\n        c = GeoBBoxFactory.makeGeoBBox(0.0,-Math.PI * 0.25, Math.PI-0.1, -Math.PI+0.1);\n\n        b = c.getBounds(null);\n        assertFalse(b.checkNoLongitudeBound());\n        assertFalse(b.checkNoTopLatitudeBound());\n        assertFalse(b.checkNoBottomLatitudeBound());\n        assertEquals(Math.PI-0.1,b.getLeftLongitude(),0.000001);\n        assertEquals(-Math.PI+0.1,b.getRightLongitude(),0.000001);\n        assertEquals(-Math.PI * 0.25,b.getMinLatitude(),0.000001);\n        assertEquals(0.0,b.getMaxLatitude(),0.000001);\n\n        c = GeoBBoxFactory.makeGeoBBox(Math.PI * 0.5, -Math.PI * 0.5, -Math.PI+0.1, Math.PI-0.1);\n\n        b = c.getBounds(null);\n        assertTrue(b.checkNoLongitudeBound());\n        assertTrue(b.checkNoTopLatitudeBound());\n        assertTrue(b.checkNoBottomLatitudeBound());\n        //assertEquals(-Math.PI+0.1,b.getLeftLongitude(),0.000001);\n        //assertEquals(Math.PI-0.1,b.getRightLongitude(),0.000001);\n\n        c = GeoBBoxFactory.makeGeoBBox(Math.PI * 0.5, -Math.PI * 0.5, Math.PI-0.1, -Math.PI+0.1);\n\n        b = c.getBounds(null);\n        assertFalse(b.checkNoLongitudeBound());\n        assertTrue(b.checkNoTopLatitudeBound());\n        assertTrue(b.checkNoBottomLatitudeBound());\n        assertEquals(Math.PI-0.1,b.getLeftLongitude(),0.000001);\n        assertEquals(-Math.PI+0.1,b.getRightLongitude(),0.000001);\n        \n        // Check latitude zone\n        c = GeoBBoxFactory.makeGeoBBox(1.0, -1.0, -Math.PI, Math.PI);\n\n        b = c.getBounds(null);\n        assertTrue(b.checkNoLongitudeBound());\n        assertFalse(b.checkNoTopLatitudeBound());\n        assertFalse(b.checkNoBottomLatitudeBound());\n        assertEquals(-1.0,b.getMinLatitude(),0.000001);\n        assertEquals(1.0,b.getMaxLatitude(),0.000001);\n\n        // Now, combine a few things to test the bounds object\n        GeoBBox c1;\n        GeoBBox c2;\n        \n        c1 = GeoBBoxFactory.makeGeoBBox(Math.PI * 0.5, -Math.PI * 0.5, -Math.PI, 0.0);\n        c2 = GeoBBoxFactory.makeGeoBBox(Math.PI * 0.5, -Math.PI * 0.5, 0.0, Math.PI);\n\n        b = new Bounds();\n        b = c1.getBounds(b);\n        b = c2.getBounds(b);\n        assertTrue(b.checkNoLongitudeBound());\n        assertTrue(b.checkNoTopLatitudeBound());\n        assertTrue(b.checkNoBottomLatitudeBound());\n\n        c1 = GeoBBoxFactory.makeGeoBBox(Math.PI * 0.5, -Math.PI * 0.5, -Math.PI, 0.0);\n        c2 = GeoBBoxFactory.makeGeoBBox(Math.PI * 0.5, -Math.PI * 0.5, 0.0, Math.PI*0.5);\n\n        b = new Bounds();\n        b = c1.getBounds(b);\n        b = c2.getBounds(b);\n        assertTrue(b.checkNoLongitudeBound());\n        assertTrue(b.checkNoTopLatitudeBound());\n        assertTrue(b.checkNoBottomLatitudeBound());\n        //assertEquals(-Math.PI,b.getLeftLongitude(),0.000001);\n        //assertEquals(Math.PI*0.5,b.getRightLongitude(),0.000001);\n\n        c1 = GeoBBoxFactory.makeGeoBBox(Math.PI * 0.5, -Math.PI * 0.5, -Math.PI * 0.5, 0.0);\n        c2 = GeoBBoxFactory.makeGeoBBox(Math.PI * 0.5, -Math.PI * 0.5, 0.0, Math.PI);\n\n        b = new Bounds();\n        b = c1.getBounds(b);\n        b = c2.getBounds(b);\n        assertTrue(b.checkNoLongitudeBound());\n        assertTrue(b.checkNoTopLatitudeBound());\n        assertTrue(b.checkNoBottomLatitudeBound());\n        //assertEquals(-Math.PI * 0.5,b.getLeftLongitude(),0.000001);\n        //assertEquals(Math.PI,b.getRightLongitude(),0.000001);\n\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c921d81476f94b6686d3f216daa1f6b076b4a6c0","date":1430922284,"type":0,"author":"David Wayne Smiley","isMerge":true,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/spatial4j/geo3d/GeoBBoxTest#testBBoxBounds().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testBBoxBounds() {\n    GeoBBox c;\n    Bounds b;\n\n    c = GeoBBoxFactory.makeGeoBBox(0.0, -Math.PI * 0.25, -1.0, 1.0);\n\n    b = c.getBounds(null);\n    assertFalse(b.checkNoLongitudeBound());\n    assertFalse(b.checkNoTopLatitudeBound());\n    assertFalse(b.checkNoBottomLatitudeBound());\n    assertEquals(-1.0, b.getLeftLongitude(), 0.000001);\n    assertEquals(1.0, b.getRightLongitude(), 0.000001);\n    assertEquals(-Math.PI * 0.25, b.getMinLatitude(), 0.000001);\n    assertEquals(0.0, b.getMaxLatitude(), 0.000001);\n\n    c = GeoBBoxFactory.makeGeoBBox(0.0, -Math.PI * 0.25, 1.0, -1.0);\n\n    b = c.getBounds(null);\n    assertTrue(b.checkNoLongitudeBound());\n    assertFalse(b.checkNoTopLatitudeBound());\n    assertFalse(b.checkNoBottomLatitudeBound());\n    //assertEquals(1.0,b.getLeftLongitude(),0.000001);\n    //assertEquals(-1.0,b.getRightLongitude(),0.000001);\n    assertEquals(-Math.PI * 0.25, b.getMinLatitude(), 0.000001);\n    assertEquals(0.0, b.getMaxLatitude(), 0.000001);\n\n    c = GeoBBoxFactory.makeGeoBBox(Math.PI * 0.5, -Math.PI * 0.5, -1.0, 1.0);\n\n    b = c.getBounds(null);\n    assertFalse(b.checkNoLongitudeBound());\n    assertTrue(b.checkNoTopLatitudeBound());\n    assertTrue(b.checkNoBottomLatitudeBound());\n    assertEquals(-1.0, b.getLeftLongitude(), 0.000001);\n    assertEquals(1.0, b.getRightLongitude(), 0.000001);\n\n    c = GeoBBoxFactory.makeGeoBBox(Math.PI * 0.5, -Math.PI * 0.5, 1.0, -1.0);\n\n    b = c.getBounds(null);\n    assertTrue(b.checkNoLongitudeBound());\n    assertTrue(b.checkNoTopLatitudeBound());\n    assertTrue(b.checkNoBottomLatitudeBound());\n    //assertEquals(1.0,b.getLeftLongitude(),0.000001);\n    //assertEquals(-1.0,b.getRightLongitude(),0.000001);\n\n    // Check wide variants of rectangle and longitude slice\n\n    c = GeoBBoxFactory.makeGeoBBox(0.0, -Math.PI * 0.25, -Math.PI + 0.1, Math.PI - 0.1);\n\n    b = c.getBounds(null);\n    assertTrue(b.checkNoLongitudeBound());\n    assertFalse(b.checkNoTopLatitudeBound());\n    assertFalse(b.checkNoBottomLatitudeBound());\n    //assertEquals(-Math.PI+0.1,b.getLeftLongitude(),0.000001);\n    //assertEquals(Math.PI-0.1,b.getRightLongitude(),0.000001);\n    assertEquals(-Math.PI * 0.25, b.getMinLatitude(), 0.000001);\n    assertEquals(0.0, b.getMaxLatitude(), 0.000001);\n\n    c = GeoBBoxFactory.makeGeoBBox(0.0, -Math.PI * 0.25, Math.PI - 0.1, -Math.PI + 0.1);\n\n    b = c.getBounds(null);\n    assertFalse(b.checkNoLongitudeBound());\n    assertFalse(b.checkNoTopLatitudeBound());\n    assertFalse(b.checkNoBottomLatitudeBound());\n    assertEquals(Math.PI - 0.1, b.getLeftLongitude(), 0.000001);\n    assertEquals(-Math.PI + 0.1, b.getRightLongitude(), 0.000001);\n    assertEquals(-Math.PI * 0.25, b.getMinLatitude(), 0.000001);\n    assertEquals(0.0, b.getMaxLatitude(), 0.000001);\n\n    c = GeoBBoxFactory.makeGeoBBox(Math.PI * 0.5, -Math.PI * 0.5, -Math.PI + 0.1, Math.PI - 0.1);\n\n    b = c.getBounds(null);\n    assertTrue(b.checkNoLongitudeBound());\n    assertTrue(b.checkNoTopLatitudeBound());\n    assertTrue(b.checkNoBottomLatitudeBound());\n    //assertEquals(-Math.PI+0.1,b.getLeftLongitude(),0.000001);\n    //assertEquals(Math.PI-0.1,b.getRightLongitude(),0.000001);\n\n    c = GeoBBoxFactory.makeGeoBBox(Math.PI * 0.5, -Math.PI * 0.5, Math.PI - 0.1, -Math.PI + 0.1);\n\n    b = c.getBounds(null);\n    assertFalse(b.checkNoLongitudeBound());\n    assertTrue(b.checkNoTopLatitudeBound());\n    assertTrue(b.checkNoBottomLatitudeBound());\n    assertEquals(Math.PI - 0.1, b.getLeftLongitude(), 0.000001);\n    assertEquals(-Math.PI + 0.1, b.getRightLongitude(), 0.000001);\n\n    // Check latitude zone\n    c = GeoBBoxFactory.makeGeoBBox(1.0, -1.0, -Math.PI, Math.PI);\n\n    b = c.getBounds(null);\n    assertTrue(b.checkNoLongitudeBound());\n    assertFalse(b.checkNoTopLatitudeBound());\n    assertFalse(b.checkNoBottomLatitudeBound());\n    assertEquals(-1.0, b.getMinLatitude(), 0.000001);\n    assertEquals(1.0, b.getMaxLatitude(), 0.000001);\n\n    // Now, combine a few things to test the bounds object\n    GeoBBox c1;\n    GeoBBox c2;\n\n    c1 = GeoBBoxFactory.makeGeoBBox(Math.PI * 0.5, -Math.PI * 0.5, -Math.PI, 0.0);\n    c2 = GeoBBoxFactory.makeGeoBBox(Math.PI * 0.5, -Math.PI * 0.5, 0.0, Math.PI);\n\n    b = new Bounds();\n    b = c1.getBounds(b);\n    b = c2.getBounds(b);\n    assertTrue(b.checkNoLongitudeBound());\n    assertTrue(b.checkNoTopLatitudeBound());\n    assertTrue(b.checkNoBottomLatitudeBound());\n\n    c1 = GeoBBoxFactory.makeGeoBBox(Math.PI * 0.5, -Math.PI * 0.5, -Math.PI, 0.0);\n    c2 = GeoBBoxFactory.makeGeoBBox(Math.PI * 0.5, -Math.PI * 0.5, 0.0, Math.PI * 0.5);\n\n    b = new Bounds();\n    b = c1.getBounds(b);\n    b = c2.getBounds(b);\n    assertTrue(b.checkNoLongitudeBound());\n    assertTrue(b.checkNoTopLatitudeBound());\n    assertTrue(b.checkNoBottomLatitudeBound());\n    //assertEquals(-Math.PI,b.getLeftLongitude(),0.000001);\n    //assertEquals(Math.PI*0.5,b.getRightLongitude(),0.000001);\n\n    c1 = GeoBBoxFactory.makeGeoBBox(Math.PI * 0.5, -Math.PI * 0.5, -Math.PI * 0.5, 0.0);\n    c2 = GeoBBoxFactory.makeGeoBBox(Math.PI * 0.5, -Math.PI * 0.5, 0.0, Math.PI);\n\n    b = new Bounds();\n    b = c1.getBounds(b);\n    b = c2.getBounds(b);\n    assertTrue(b.checkNoLongitudeBound());\n    assertTrue(b.checkNoTopLatitudeBound());\n    assertTrue(b.checkNoBottomLatitudeBound());\n    //assertEquals(-Math.PI * 0.5,b.getLeftLongitude(),0.000001);\n    //assertEquals(Math.PI,b.getRightLongitude(),0.000001);\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f9f97ca977ad649f14b4f60a888adef2edd7a64e","date":1432702490,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/spatial4j/geo3d/GeoBBoxTest#testBBoxBounds().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/spatial4j/geo3d/GeoBBoxTest#testBBoxBounds().mjava","sourceNew":"  @Test\n  public void testBBoxBounds() {\n    GeoBBox c;\n    Bounds b;\n\n    c = GeoBBoxFactory.makeGeoBBox(PlanetModel.SPHERE, 0.0, -Math.PI * 0.25, -1.0, 1.0);\n\n    b = c.getBounds(null);\n    assertFalse(b.checkNoLongitudeBound());\n    assertFalse(b.checkNoTopLatitudeBound());\n    assertFalse(b.checkNoBottomLatitudeBound());\n    assertEquals(-1.0, b.getLeftLongitude(), 0.000001);\n    assertEquals(1.0, b.getRightLongitude(), 0.000001);\n    assertEquals(-Math.PI * 0.25, b.getMinLatitude(), 0.000001);\n    assertEquals(0.0, b.getMaxLatitude(), 0.000001);\n\n    c = GeoBBoxFactory.makeGeoBBox(PlanetModel.SPHERE, 0.0, -Math.PI * 0.25, 1.0, -1.0);\n\n    b = c.getBounds(null);\n    assertTrue(b.checkNoLongitudeBound());\n    assertFalse(b.checkNoTopLatitudeBound());\n    assertFalse(b.checkNoBottomLatitudeBound());\n    //assertEquals(1.0,b.getLeftLongitude(),0.000001);\n    //assertEquals(-1.0,b.getRightLongitude(),0.000001);\n    assertEquals(-Math.PI * 0.25, b.getMinLatitude(), 0.000001);\n    assertEquals(0.0, b.getMaxLatitude(), 0.000001);\n\n    c = GeoBBoxFactory.makeGeoBBox(PlanetModel.SPHERE, Math.PI * 0.5, -Math.PI * 0.5, -1.0, 1.0);\n\n    b = c.getBounds(null);\n    assertFalse(b.checkNoLongitudeBound());\n    assertTrue(b.checkNoTopLatitudeBound());\n    assertTrue(b.checkNoBottomLatitudeBound());\n    assertEquals(-1.0, b.getLeftLongitude(), 0.000001);\n    assertEquals(1.0, b.getRightLongitude(), 0.000001);\n\n    c = GeoBBoxFactory.makeGeoBBox(PlanetModel.SPHERE, Math.PI * 0.5, -Math.PI * 0.5, 1.0, -1.0);\n\n    b = c.getBounds(null);\n    assertTrue(b.checkNoLongitudeBound());\n    assertTrue(b.checkNoTopLatitudeBound());\n    assertTrue(b.checkNoBottomLatitudeBound());\n    //assertEquals(1.0,b.getLeftLongitude(),0.000001);\n    //assertEquals(-1.0,b.getRightLongitude(),0.000001);\n\n    // Check wide variants of rectangle and longitude slice\n\n    c = GeoBBoxFactory.makeGeoBBox(PlanetModel.SPHERE, 0.0, -Math.PI * 0.25, -Math.PI + 0.1, Math.PI - 0.1);\n\n    b = c.getBounds(null);\n    assertTrue(b.checkNoLongitudeBound());\n    assertFalse(b.checkNoTopLatitudeBound());\n    assertFalse(b.checkNoBottomLatitudeBound());\n    //assertEquals(-Math.PI+0.1,b.getLeftLongitude(),0.000001);\n    //assertEquals(Math.PI-0.1,b.getRightLongitude(),0.000001);\n    assertEquals(-Math.PI * 0.25, b.getMinLatitude(), 0.000001);\n    assertEquals(0.0, b.getMaxLatitude(), 0.000001);\n\n    c = GeoBBoxFactory.makeGeoBBox(PlanetModel.SPHERE, 0.0, -Math.PI * 0.25, Math.PI - 0.1, -Math.PI + 0.1);\n\n    b = c.getBounds(null);\n    assertFalse(b.checkNoLongitudeBound());\n    assertFalse(b.checkNoTopLatitudeBound());\n    assertFalse(b.checkNoBottomLatitudeBound());\n    assertEquals(Math.PI - 0.1, b.getLeftLongitude(), 0.000001);\n    assertEquals(-Math.PI + 0.1, b.getRightLongitude(), 0.000001);\n    assertEquals(-Math.PI * 0.25, b.getMinLatitude(), 0.000001);\n    assertEquals(0.0, b.getMaxLatitude(), 0.000001);\n\n    c = GeoBBoxFactory.makeGeoBBox(PlanetModel.SPHERE, Math.PI * 0.5, -Math.PI * 0.5, -Math.PI + 0.1, Math.PI - 0.1);\n\n    b = c.getBounds(null);\n    assertTrue(b.checkNoLongitudeBound());\n    assertTrue(b.checkNoTopLatitudeBound());\n    assertTrue(b.checkNoBottomLatitudeBound());\n    //assertEquals(-Math.PI+0.1,b.getLeftLongitude(),0.000001);\n    //assertEquals(Math.PI-0.1,b.getRightLongitude(),0.000001);\n\n    c = GeoBBoxFactory.makeGeoBBox(PlanetModel.SPHERE, Math.PI * 0.5, -Math.PI * 0.5, Math.PI - 0.1, -Math.PI + 0.1);\n\n    b = c.getBounds(null);\n    assertFalse(b.checkNoLongitudeBound());\n    assertTrue(b.checkNoTopLatitudeBound());\n    assertTrue(b.checkNoBottomLatitudeBound());\n    assertEquals(Math.PI - 0.1, b.getLeftLongitude(), 0.000001);\n    assertEquals(-Math.PI + 0.1, b.getRightLongitude(), 0.000001);\n\n    // Check latitude zone\n    c = GeoBBoxFactory.makeGeoBBox(PlanetModel.SPHERE, 1.0, -1.0, -Math.PI, Math.PI);\n\n    b = c.getBounds(null);\n    assertTrue(b.checkNoLongitudeBound());\n    assertFalse(b.checkNoTopLatitudeBound());\n    assertFalse(b.checkNoBottomLatitudeBound());\n    assertEquals(-1.0, b.getMinLatitude(), 0.000001);\n    assertEquals(1.0, b.getMaxLatitude(), 0.000001);\n\n    // Now, combine a few things to test the bounds object\n    GeoBBox c1;\n    GeoBBox c2;\n\n    c1 = GeoBBoxFactory.makeGeoBBox(PlanetModel.SPHERE, Math.PI * 0.5, -Math.PI * 0.5, -Math.PI, 0.0);\n    c2 = GeoBBoxFactory.makeGeoBBox(PlanetModel.SPHERE, Math.PI * 0.5, -Math.PI * 0.5, 0.0, Math.PI);\n\n    b = new Bounds();\n    b = c1.getBounds(b);\n    b = c2.getBounds(b);\n    assertTrue(b.checkNoLongitudeBound());\n    assertTrue(b.checkNoTopLatitudeBound());\n    assertTrue(b.checkNoBottomLatitudeBound());\n\n    c1 = GeoBBoxFactory.makeGeoBBox(PlanetModel.SPHERE, Math.PI * 0.5, -Math.PI * 0.5, -Math.PI, 0.0);\n    c2 = GeoBBoxFactory.makeGeoBBox(PlanetModel.SPHERE, Math.PI * 0.5, -Math.PI * 0.5, 0.0, Math.PI * 0.5);\n\n    b = new Bounds();\n    b = c1.getBounds(b);\n    b = c2.getBounds(b);\n    assertTrue(b.checkNoLongitudeBound());\n    assertTrue(b.checkNoTopLatitudeBound());\n    assertTrue(b.checkNoBottomLatitudeBound());\n    //assertEquals(-Math.PI,b.getLeftLongitude(),0.000001);\n    //assertEquals(Math.PI*0.5,b.getRightLongitude(),0.000001);\n\n    c1 = GeoBBoxFactory.makeGeoBBox(PlanetModel.SPHERE, Math.PI * 0.5, -Math.PI * 0.5, -Math.PI * 0.5, 0.0);\n    c2 = GeoBBoxFactory.makeGeoBBox(PlanetModel.SPHERE, Math.PI * 0.5, -Math.PI * 0.5, 0.0, Math.PI);\n\n    b = new Bounds();\n    b = c1.getBounds(b);\n    b = c2.getBounds(b);\n    assertTrue(b.checkNoLongitudeBound());\n    assertTrue(b.checkNoTopLatitudeBound());\n    assertTrue(b.checkNoBottomLatitudeBound());\n    //assertEquals(-Math.PI * 0.5,b.getLeftLongitude(),0.000001);\n    //assertEquals(Math.PI,b.getRightLongitude(),0.000001);\n\n  }\n\n","sourceOld":"  @Test\n  public void testBBoxBounds() {\n    GeoBBox c;\n    Bounds b;\n\n    c = GeoBBoxFactory.makeGeoBBox(0.0, -Math.PI * 0.25, -1.0, 1.0);\n\n    b = c.getBounds(null);\n    assertFalse(b.checkNoLongitudeBound());\n    assertFalse(b.checkNoTopLatitudeBound());\n    assertFalse(b.checkNoBottomLatitudeBound());\n    assertEquals(-1.0, b.getLeftLongitude(), 0.000001);\n    assertEquals(1.0, b.getRightLongitude(), 0.000001);\n    assertEquals(-Math.PI * 0.25, b.getMinLatitude(), 0.000001);\n    assertEquals(0.0, b.getMaxLatitude(), 0.000001);\n\n    c = GeoBBoxFactory.makeGeoBBox(0.0, -Math.PI * 0.25, 1.0, -1.0);\n\n    b = c.getBounds(null);\n    assertTrue(b.checkNoLongitudeBound());\n    assertFalse(b.checkNoTopLatitudeBound());\n    assertFalse(b.checkNoBottomLatitudeBound());\n    //assertEquals(1.0,b.getLeftLongitude(),0.000001);\n    //assertEquals(-1.0,b.getRightLongitude(),0.000001);\n    assertEquals(-Math.PI * 0.25, b.getMinLatitude(), 0.000001);\n    assertEquals(0.0, b.getMaxLatitude(), 0.000001);\n\n    c = GeoBBoxFactory.makeGeoBBox(Math.PI * 0.5, -Math.PI * 0.5, -1.0, 1.0);\n\n    b = c.getBounds(null);\n    assertFalse(b.checkNoLongitudeBound());\n    assertTrue(b.checkNoTopLatitudeBound());\n    assertTrue(b.checkNoBottomLatitudeBound());\n    assertEquals(-1.0, b.getLeftLongitude(), 0.000001);\n    assertEquals(1.0, b.getRightLongitude(), 0.000001);\n\n    c = GeoBBoxFactory.makeGeoBBox(Math.PI * 0.5, -Math.PI * 0.5, 1.0, -1.0);\n\n    b = c.getBounds(null);\n    assertTrue(b.checkNoLongitudeBound());\n    assertTrue(b.checkNoTopLatitudeBound());\n    assertTrue(b.checkNoBottomLatitudeBound());\n    //assertEquals(1.0,b.getLeftLongitude(),0.000001);\n    //assertEquals(-1.0,b.getRightLongitude(),0.000001);\n\n    // Check wide variants of rectangle and longitude slice\n\n    c = GeoBBoxFactory.makeGeoBBox(0.0, -Math.PI * 0.25, -Math.PI + 0.1, Math.PI - 0.1);\n\n    b = c.getBounds(null);\n    assertTrue(b.checkNoLongitudeBound());\n    assertFalse(b.checkNoTopLatitudeBound());\n    assertFalse(b.checkNoBottomLatitudeBound());\n    //assertEquals(-Math.PI+0.1,b.getLeftLongitude(),0.000001);\n    //assertEquals(Math.PI-0.1,b.getRightLongitude(),0.000001);\n    assertEquals(-Math.PI * 0.25, b.getMinLatitude(), 0.000001);\n    assertEquals(0.0, b.getMaxLatitude(), 0.000001);\n\n    c = GeoBBoxFactory.makeGeoBBox(0.0, -Math.PI * 0.25, Math.PI - 0.1, -Math.PI + 0.1);\n\n    b = c.getBounds(null);\n    assertFalse(b.checkNoLongitudeBound());\n    assertFalse(b.checkNoTopLatitudeBound());\n    assertFalse(b.checkNoBottomLatitudeBound());\n    assertEquals(Math.PI - 0.1, b.getLeftLongitude(), 0.000001);\n    assertEquals(-Math.PI + 0.1, b.getRightLongitude(), 0.000001);\n    assertEquals(-Math.PI * 0.25, b.getMinLatitude(), 0.000001);\n    assertEquals(0.0, b.getMaxLatitude(), 0.000001);\n\n    c = GeoBBoxFactory.makeGeoBBox(Math.PI * 0.5, -Math.PI * 0.5, -Math.PI + 0.1, Math.PI - 0.1);\n\n    b = c.getBounds(null);\n    assertTrue(b.checkNoLongitudeBound());\n    assertTrue(b.checkNoTopLatitudeBound());\n    assertTrue(b.checkNoBottomLatitudeBound());\n    //assertEquals(-Math.PI+0.1,b.getLeftLongitude(),0.000001);\n    //assertEquals(Math.PI-0.1,b.getRightLongitude(),0.000001);\n\n    c = GeoBBoxFactory.makeGeoBBox(Math.PI * 0.5, -Math.PI * 0.5, Math.PI - 0.1, -Math.PI + 0.1);\n\n    b = c.getBounds(null);\n    assertFalse(b.checkNoLongitudeBound());\n    assertTrue(b.checkNoTopLatitudeBound());\n    assertTrue(b.checkNoBottomLatitudeBound());\n    assertEquals(Math.PI - 0.1, b.getLeftLongitude(), 0.000001);\n    assertEquals(-Math.PI + 0.1, b.getRightLongitude(), 0.000001);\n\n    // Check latitude zone\n    c = GeoBBoxFactory.makeGeoBBox(1.0, -1.0, -Math.PI, Math.PI);\n\n    b = c.getBounds(null);\n    assertTrue(b.checkNoLongitudeBound());\n    assertFalse(b.checkNoTopLatitudeBound());\n    assertFalse(b.checkNoBottomLatitudeBound());\n    assertEquals(-1.0, b.getMinLatitude(), 0.000001);\n    assertEquals(1.0, b.getMaxLatitude(), 0.000001);\n\n    // Now, combine a few things to test the bounds object\n    GeoBBox c1;\n    GeoBBox c2;\n\n    c1 = GeoBBoxFactory.makeGeoBBox(Math.PI * 0.5, -Math.PI * 0.5, -Math.PI, 0.0);\n    c2 = GeoBBoxFactory.makeGeoBBox(Math.PI * 0.5, -Math.PI * 0.5, 0.0, Math.PI);\n\n    b = new Bounds();\n    b = c1.getBounds(b);\n    b = c2.getBounds(b);\n    assertTrue(b.checkNoLongitudeBound());\n    assertTrue(b.checkNoTopLatitudeBound());\n    assertTrue(b.checkNoBottomLatitudeBound());\n\n    c1 = GeoBBoxFactory.makeGeoBBox(Math.PI * 0.5, -Math.PI * 0.5, -Math.PI, 0.0);\n    c2 = GeoBBoxFactory.makeGeoBBox(Math.PI * 0.5, -Math.PI * 0.5, 0.0, Math.PI * 0.5);\n\n    b = new Bounds();\n    b = c1.getBounds(b);\n    b = c2.getBounds(b);\n    assertTrue(b.checkNoLongitudeBound());\n    assertTrue(b.checkNoTopLatitudeBound());\n    assertTrue(b.checkNoBottomLatitudeBound());\n    //assertEquals(-Math.PI,b.getLeftLongitude(),0.000001);\n    //assertEquals(Math.PI*0.5,b.getRightLongitude(),0.000001);\n\n    c1 = GeoBBoxFactory.makeGeoBBox(Math.PI * 0.5, -Math.PI * 0.5, -Math.PI * 0.5, 0.0);\n    c2 = GeoBBoxFactory.makeGeoBBox(Math.PI * 0.5, -Math.PI * 0.5, 0.0, Math.PI);\n\n    b = new Bounds();\n    b = c1.getBounds(b);\n    b = c2.getBounds(b);\n    assertTrue(b.checkNoLongitudeBound());\n    assertTrue(b.checkNoTopLatitudeBound());\n    assertTrue(b.checkNoBottomLatitudeBound());\n    //assertEquals(-Math.PI * 0.5,b.getLeftLongitude(),0.000001);\n    //assertEquals(Math.PI,b.getRightLongitude(),0.000001);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fec06d6753751ae302c7d35866763e6cb414112d","date":1433250698,"type":3,"author":"David Wayne Smiley","isMerge":true,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/spatial4j/geo3d/GeoBBoxTest#testBBoxBounds().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/spatial4j/geo3d/GeoBBoxTest#testBBoxBounds().mjava","sourceNew":"  @Test\n  public void testBBoxBounds() {\n    GeoBBox c;\n    Bounds b;\n\n    c = GeoBBoxFactory.makeGeoBBox(PlanetModel.SPHERE, 0.0, -Math.PI * 0.25, -1.0, 1.0);\n\n    b = c.getBounds(null);\n    assertFalse(b.checkNoLongitudeBound());\n    assertFalse(b.checkNoTopLatitudeBound());\n    assertFalse(b.checkNoBottomLatitudeBound());\n    assertEquals(-1.0, b.getLeftLongitude(), 0.000001);\n    assertEquals(1.0, b.getRightLongitude(), 0.000001);\n    assertEquals(-Math.PI * 0.25, b.getMinLatitude(), 0.000001);\n    assertEquals(0.0, b.getMaxLatitude(), 0.000001);\n\n    c = GeoBBoxFactory.makeGeoBBox(PlanetModel.SPHERE, 0.0, -Math.PI * 0.25, 1.0, -1.0);\n\n    b = c.getBounds(null);\n    assertTrue(b.checkNoLongitudeBound());\n    assertFalse(b.checkNoTopLatitudeBound());\n    assertFalse(b.checkNoBottomLatitudeBound());\n    //assertEquals(1.0,b.getLeftLongitude(),0.000001);\n    //assertEquals(-1.0,b.getRightLongitude(),0.000001);\n    assertEquals(-Math.PI * 0.25, b.getMinLatitude(), 0.000001);\n    assertEquals(0.0, b.getMaxLatitude(), 0.000001);\n\n    c = GeoBBoxFactory.makeGeoBBox(PlanetModel.SPHERE, Math.PI * 0.5, -Math.PI * 0.5, -1.0, 1.0);\n\n    b = c.getBounds(null);\n    assertFalse(b.checkNoLongitudeBound());\n    assertTrue(b.checkNoTopLatitudeBound());\n    assertTrue(b.checkNoBottomLatitudeBound());\n    assertEquals(-1.0, b.getLeftLongitude(), 0.000001);\n    assertEquals(1.0, b.getRightLongitude(), 0.000001);\n\n    c = GeoBBoxFactory.makeGeoBBox(PlanetModel.SPHERE, Math.PI * 0.5, -Math.PI * 0.5, 1.0, -1.0);\n\n    b = c.getBounds(null);\n    assertTrue(b.checkNoLongitudeBound());\n    assertTrue(b.checkNoTopLatitudeBound());\n    assertTrue(b.checkNoBottomLatitudeBound());\n    //assertEquals(1.0,b.getLeftLongitude(),0.000001);\n    //assertEquals(-1.0,b.getRightLongitude(),0.000001);\n\n    // Check wide variants of rectangle and longitude slice\n\n    c = GeoBBoxFactory.makeGeoBBox(PlanetModel.SPHERE, 0.0, -Math.PI * 0.25, -Math.PI + 0.1, Math.PI - 0.1);\n\n    b = c.getBounds(null);\n    assertTrue(b.checkNoLongitudeBound());\n    assertFalse(b.checkNoTopLatitudeBound());\n    assertFalse(b.checkNoBottomLatitudeBound());\n    //assertEquals(-Math.PI+0.1,b.getLeftLongitude(),0.000001);\n    //assertEquals(Math.PI-0.1,b.getRightLongitude(),0.000001);\n    assertEquals(-Math.PI * 0.25, b.getMinLatitude(), 0.000001);\n    assertEquals(0.0, b.getMaxLatitude(), 0.000001);\n\n    c = GeoBBoxFactory.makeGeoBBox(PlanetModel.SPHERE, 0.0, -Math.PI * 0.25, Math.PI - 0.1, -Math.PI + 0.1);\n\n    b = c.getBounds(null);\n    assertFalse(b.checkNoLongitudeBound());\n    assertFalse(b.checkNoTopLatitudeBound());\n    assertFalse(b.checkNoBottomLatitudeBound());\n    assertEquals(Math.PI - 0.1, b.getLeftLongitude(), 0.000001);\n    assertEquals(-Math.PI + 0.1, b.getRightLongitude(), 0.000001);\n    assertEquals(-Math.PI * 0.25, b.getMinLatitude(), 0.000001);\n    assertEquals(0.0, b.getMaxLatitude(), 0.000001);\n\n    c = GeoBBoxFactory.makeGeoBBox(PlanetModel.SPHERE, Math.PI * 0.5, -Math.PI * 0.5, -Math.PI + 0.1, Math.PI - 0.1);\n\n    b = c.getBounds(null);\n    assertTrue(b.checkNoLongitudeBound());\n    assertTrue(b.checkNoTopLatitudeBound());\n    assertTrue(b.checkNoBottomLatitudeBound());\n    //assertEquals(-Math.PI+0.1,b.getLeftLongitude(),0.000001);\n    //assertEquals(Math.PI-0.1,b.getRightLongitude(),0.000001);\n\n    c = GeoBBoxFactory.makeGeoBBox(PlanetModel.SPHERE, Math.PI * 0.5, -Math.PI * 0.5, Math.PI - 0.1, -Math.PI + 0.1);\n\n    b = c.getBounds(null);\n    assertFalse(b.checkNoLongitudeBound());\n    assertTrue(b.checkNoTopLatitudeBound());\n    assertTrue(b.checkNoBottomLatitudeBound());\n    assertEquals(Math.PI - 0.1, b.getLeftLongitude(), 0.000001);\n    assertEquals(-Math.PI + 0.1, b.getRightLongitude(), 0.000001);\n\n    // Check latitude zone\n    c = GeoBBoxFactory.makeGeoBBox(PlanetModel.SPHERE, 1.0, -1.0, -Math.PI, Math.PI);\n\n    b = c.getBounds(null);\n    assertTrue(b.checkNoLongitudeBound());\n    assertFalse(b.checkNoTopLatitudeBound());\n    assertFalse(b.checkNoBottomLatitudeBound());\n    assertEquals(-1.0, b.getMinLatitude(), 0.000001);\n    assertEquals(1.0, b.getMaxLatitude(), 0.000001);\n\n    // Now, combine a few things to test the bounds object\n    GeoBBox c1;\n    GeoBBox c2;\n\n    c1 = GeoBBoxFactory.makeGeoBBox(PlanetModel.SPHERE, Math.PI * 0.5, -Math.PI * 0.5, -Math.PI, 0.0);\n    c2 = GeoBBoxFactory.makeGeoBBox(PlanetModel.SPHERE, Math.PI * 0.5, -Math.PI * 0.5, 0.0, Math.PI);\n\n    b = new Bounds();\n    b = c1.getBounds(b);\n    b = c2.getBounds(b);\n    assertTrue(b.checkNoLongitudeBound());\n    assertTrue(b.checkNoTopLatitudeBound());\n    assertTrue(b.checkNoBottomLatitudeBound());\n\n    c1 = GeoBBoxFactory.makeGeoBBox(PlanetModel.SPHERE, Math.PI * 0.5, -Math.PI * 0.5, -Math.PI, 0.0);\n    c2 = GeoBBoxFactory.makeGeoBBox(PlanetModel.SPHERE, Math.PI * 0.5, -Math.PI * 0.5, 0.0, Math.PI * 0.5);\n\n    b = new Bounds();\n    b = c1.getBounds(b);\n    b = c2.getBounds(b);\n    assertTrue(b.checkNoLongitudeBound());\n    assertTrue(b.checkNoTopLatitudeBound());\n    assertTrue(b.checkNoBottomLatitudeBound());\n    //assertEquals(-Math.PI,b.getLeftLongitude(),0.000001);\n    //assertEquals(Math.PI*0.5,b.getRightLongitude(),0.000001);\n\n    c1 = GeoBBoxFactory.makeGeoBBox(PlanetModel.SPHERE, Math.PI * 0.5, -Math.PI * 0.5, -Math.PI * 0.5, 0.0);\n    c2 = GeoBBoxFactory.makeGeoBBox(PlanetModel.SPHERE, Math.PI * 0.5, -Math.PI * 0.5, 0.0, Math.PI);\n\n    b = new Bounds();\n    b = c1.getBounds(b);\n    b = c2.getBounds(b);\n    assertTrue(b.checkNoLongitudeBound());\n    assertTrue(b.checkNoTopLatitudeBound());\n    assertTrue(b.checkNoBottomLatitudeBound());\n    //assertEquals(-Math.PI * 0.5,b.getLeftLongitude(),0.000001);\n    //assertEquals(Math.PI,b.getRightLongitude(),0.000001);\n\n  }\n\n","sourceOld":"  @Test\n  public void testBBoxBounds() {\n    GeoBBox c;\n    Bounds b;\n\n    c = GeoBBoxFactory.makeGeoBBox(0.0, -Math.PI * 0.25, -1.0, 1.0);\n\n    b = c.getBounds(null);\n    assertFalse(b.checkNoLongitudeBound());\n    assertFalse(b.checkNoTopLatitudeBound());\n    assertFalse(b.checkNoBottomLatitudeBound());\n    assertEquals(-1.0, b.getLeftLongitude(), 0.000001);\n    assertEquals(1.0, b.getRightLongitude(), 0.000001);\n    assertEquals(-Math.PI * 0.25, b.getMinLatitude(), 0.000001);\n    assertEquals(0.0, b.getMaxLatitude(), 0.000001);\n\n    c = GeoBBoxFactory.makeGeoBBox(0.0, -Math.PI * 0.25, 1.0, -1.0);\n\n    b = c.getBounds(null);\n    assertTrue(b.checkNoLongitudeBound());\n    assertFalse(b.checkNoTopLatitudeBound());\n    assertFalse(b.checkNoBottomLatitudeBound());\n    //assertEquals(1.0,b.getLeftLongitude(),0.000001);\n    //assertEquals(-1.0,b.getRightLongitude(),0.000001);\n    assertEquals(-Math.PI * 0.25, b.getMinLatitude(), 0.000001);\n    assertEquals(0.0, b.getMaxLatitude(), 0.000001);\n\n    c = GeoBBoxFactory.makeGeoBBox(Math.PI * 0.5, -Math.PI * 0.5, -1.0, 1.0);\n\n    b = c.getBounds(null);\n    assertFalse(b.checkNoLongitudeBound());\n    assertTrue(b.checkNoTopLatitudeBound());\n    assertTrue(b.checkNoBottomLatitudeBound());\n    assertEquals(-1.0, b.getLeftLongitude(), 0.000001);\n    assertEquals(1.0, b.getRightLongitude(), 0.000001);\n\n    c = GeoBBoxFactory.makeGeoBBox(Math.PI * 0.5, -Math.PI * 0.5, 1.0, -1.0);\n\n    b = c.getBounds(null);\n    assertTrue(b.checkNoLongitudeBound());\n    assertTrue(b.checkNoTopLatitudeBound());\n    assertTrue(b.checkNoBottomLatitudeBound());\n    //assertEquals(1.0,b.getLeftLongitude(),0.000001);\n    //assertEquals(-1.0,b.getRightLongitude(),0.000001);\n\n    // Check wide variants of rectangle and longitude slice\n\n    c = GeoBBoxFactory.makeGeoBBox(0.0, -Math.PI * 0.25, -Math.PI + 0.1, Math.PI - 0.1);\n\n    b = c.getBounds(null);\n    assertTrue(b.checkNoLongitudeBound());\n    assertFalse(b.checkNoTopLatitudeBound());\n    assertFalse(b.checkNoBottomLatitudeBound());\n    //assertEquals(-Math.PI+0.1,b.getLeftLongitude(),0.000001);\n    //assertEquals(Math.PI-0.1,b.getRightLongitude(),0.000001);\n    assertEquals(-Math.PI * 0.25, b.getMinLatitude(), 0.000001);\n    assertEquals(0.0, b.getMaxLatitude(), 0.000001);\n\n    c = GeoBBoxFactory.makeGeoBBox(0.0, -Math.PI * 0.25, Math.PI - 0.1, -Math.PI + 0.1);\n\n    b = c.getBounds(null);\n    assertFalse(b.checkNoLongitudeBound());\n    assertFalse(b.checkNoTopLatitudeBound());\n    assertFalse(b.checkNoBottomLatitudeBound());\n    assertEquals(Math.PI - 0.1, b.getLeftLongitude(), 0.000001);\n    assertEquals(-Math.PI + 0.1, b.getRightLongitude(), 0.000001);\n    assertEquals(-Math.PI * 0.25, b.getMinLatitude(), 0.000001);\n    assertEquals(0.0, b.getMaxLatitude(), 0.000001);\n\n    c = GeoBBoxFactory.makeGeoBBox(Math.PI * 0.5, -Math.PI * 0.5, -Math.PI + 0.1, Math.PI - 0.1);\n\n    b = c.getBounds(null);\n    assertTrue(b.checkNoLongitudeBound());\n    assertTrue(b.checkNoTopLatitudeBound());\n    assertTrue(b.checkNoBottomLatitudeBound());\n    //assertEquals(-Math.PI+0.1,b.getLeftLongitude(),0.000001);\n    //assertEquals(Math.PI-0.1,b.getRightLongitude(),0.000001);\n\n    c = GeoBBoxFactory.makeGeoBBox(Math.PI * 0.5, -Math.PI * 0.5, Math.PI - 0.1, -Math.PI + 0.1);\n\n    b = c.getBounds(null);\n    assertFalse(b.checkNoLongitudeBound());\n    assertTrue(b.checkNoTopLatitudeBound());\n    assertTrue(b.checkNoBottomLatitudeBound());\n    assertEquals(Math.PI - 0.1, b.getLeftLongitude(), 0.000001);\n    assertEquals(-Math.PI + 0.1, b.getRightLongitude(), 0.000001);\n\n    // Check latitude zone\n    c = GeoBBoxFactory.makeGeoBBox(1.0, -1.0, -Math.PI, Math.PI);\n\n    b = c.getBounds(null);\n    assertTrue(b.checkNoLongitudeBound());\n    assertFalse(b.checkNoTopLatitudeBound());\n    assertFalse(b.checkNoBottomLatitudeBound());\n    assertEquals(-1.0, b.getMinLatitude(), 0.000001);\n    assertEquals(1.0, b.getMaxLatitude(), 0.000001);\n\n    // Now, combine a few things to test the bounds object\n    GeoBBox c1;\n    GeoBBox c2;\n\n    c1 = GeoBBoxFactory.makeGeoBBox(Math.PI * 0.5, -Math.PI * 0.5, -Math.PI, 0.0);\n    c2 = GeoBBoxFactory.makeGeoBBox(Math.PI * 0.5, -Math.PI * 0.5, 0.0, Math.PI);\n\n    b = new Bounds();\n    b = c1.getBounds(b);\n    b = c2.getBounds(b);\n    assertTrue(b.checkNoLongitudeBound());\n    assertTrue(b.checkNoTopLatitudeBound());\n    assertTrue(b.checkNoBottomLatitudeBound());\n\n    c1 = GeoBBoxFactory.makeGeoBBox(Math.PI * 0.5, -Math.PI * 0.5, -Math.PI, 0.0);\n    c2 = GeoBBoxFactory.makeGeoBBox(Math.PI * 0.5, -Math.PI * 0.5, 0.0, Math.PI * 0.5);\n\n    b = new Bounds();\n    b = c1.getBounds(b);\n    b = c2.getBounds(b);\n    assertTrue(b.checkNoLongitudeBound());\n    assertTrue(b.checkNoTopLatitudeBound());\n    assertTrue(b.checkNoBottomLatitudeBound());\n    //assertEquals(-Math.PI,b.getLeftLongitude(),0.000001);\n    //assertEquals(Math.PI*0.5,b.getRightLongitude(),0.000001);\n\n    c1 = GeoBBoxFactory.makeGeoBBox(Math.PI * 0.5, -Math.PI * 0.5, -Math.PI * 0.5, 0.0);\n    c2 = GeoBBoxFactory.makeGeoBBox(Math.PI * 0.5, -Math.PI * 0.5, 0.0, Math.PI);\n\n    b = new Bounds();\n    b = c1.getBounds(b);\n    b = c2.getBounds(b);\n    assertTrue(b.checkNoLongitudeBound());\n    assertTrue(b.checkNoTopLatitudeBound());\n    assertTrue(b.checkNoBottomLatitudeBound());\n    //assertEquals(-Math.PI * 0.5,b.getLeftLongitude(),0.000001);\n    //assertEquals(Math.PI,b.getRightLongitude(),0.000001);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3022be5842502b7c2a57a5124199bbc30236f0a0","date":1436724252,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/spatial3d/src/test/org/apache/lucene/geo3d/GeoBBoxTest#testBBoxBounds().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/spatial4j/geo3d/GeoBBoxTest#testBBoxBounds().mjava","sourceNew":"  @Test\n  public void testBBoxBounds() {\n    GeoBBox c;\n    Bounds b;\n\n    c = GeoBBoxFactory.makeGeoBBox(PlanetModel.SPHERE, 0.0, -Math.PI * 0.25, -1.0, 1.0);\n\n    b = c.getBounds(null);\n    assertFalse(b.checkNoLongitudeBound());\n    assertFalse(b.checkNoTopLatitudeBound());\n    assertFalse(b.checkNoBottomLatitudeBound());\n    assertEquals(-1.0, b.getLeftLongitude(), 0.000001);\n    assertEquals(1.0, b.getRightLongitude(), 0.000001);\n    assertEquals(-Math.PI * 0.25, b.getMinLatitude(), 0.000001);\n    assertEquals(0.0, b.getMaxLatitude(), 0.000001);\n\n    c = GeoBBoxFactory.makeGeoBBox(PlanetModel.SPHERE, 0.0, -Math.PI * 0.25, 1.0, -1.0);\n\n    b = c.getBounds(null);\n    assertTrue(b.checkNoLongitudeBound());\n    assertFalse(b.checkNoTopLatitudeBound());\n    assertFalse(b.checkNoBottomLatitudeBound());\n    //assertEquals(1.0,b.getLeftLongitude(),0.000001);\n    //assertEquals(-1.0,b.getRightLongitude(),0.000001);\n    assertEquals(-Math.PI * 0.25, b.getMinLatitude(), 0.000001);\n    assertEquals(0.0, b.getMaxLatitude(), 0.000001);\n\n    c = GeoBBoxFactory.makeGeoBBox(PlanetModel.SPHERE, Math.PI * 0.5, -Math.PI * 0.5, -1.0, 1.0);\n\n    b = c.getBounds(null);\n    assertFalse(b.checkNoLongitudeBound());\n    assertTrue(b.checkNoTopLatitudeBound());\n    assertTrue(b.checkNoBottomLatitudeBound());\n    assertEquals(-1.0, b.getLeftLongitude(), 0.000001);\n    assertEquals(1.0, b.getRightLongitude(), 0.000001);\n\n    c = GeoBBoxFactory.makeGeoBBox(PlanetModel.SPHERE, Math.PI * 0.5, -Math.PI * 0.5, 1.0, -1.0);\n\n    b = c.getBounds(null);\n    assertTrue(b.checkNoLongitudeBound());\n    assertTrue(b.checkNoTopLatitudeBound());\n    assertTrue(b.checkNoBottomLatitudeBound());\n    //assertEquals(1.0,b.getLeftLongitude(),0.000001);\n    //assertEquals(-1.0,b.getRightLongitude(),0.000001);\n\n    // Check wide variants of rectangle and longitude slice\n\n    c = GeoBBoxFactory.makeGeoBBox(PlanetModel.SPHERE, 0.0, -Math.PI * 0.25, -Math.PI + 0.1, Math.PI - 0.1);\n\n    b = c.getBounds(null);\n    assertTrue(b.checkNoLongitudeBound());\n    assertFalse(b.checkNoTopLatitudeBound());\n    assertFalse(b.checkNoBottomLatitudeBound());\n    //assertEquals(-Math.PI+0.1,b.getLeftLongitude(),0.000001);\n    //assertEquals(Math.PI-0.1,b.getRightLongitude(),0.000001);\n    assertEquals(-Math.PI * 0.25, b.getMinLatitude(), 0.000001);\n    assertEquals(0.0, b.getMaxLatitude(), 0.000001);\n\n    c = GeoBBoxFactory.makeGeoBBox(PlanetModel.SPHERE, 0.0, -Math.PI * 0.25, Math.PI - 0.1, -Math.PI + 0.1);\n\n    b = c.getBounds(null);\n    assertFalse(b.checkNoLongitudeBound());\n    assertFalse(b.checkNoTopLatitudeBound());\n    assertFalse(b.checkNoBottomLatitudeBound());\n    assertEquals(Math.PI - 0.1, b.getLeftLongitude(), 0.000001);\n    assertEquals(-Math.PI + 0.1, b.getRightLongitude(), 0.000001);\n    assertEquals(-Math.PI * 0.25, b.getMinLatitude(), 0.000001);\n    assertEquals(0.0, b.getMaxLatitude(), 0.000001);\n\n    c = GeoBBoxFactory.makeGeoBBox(PlanetModel.SPHERE, Math.PI * 0.5, -Math.PI * 0.5, -Math.PI + 0.1, Math.PI - 0.1);\n\n    b = c.getBounds(null);\n    assertTrue(b.checkNoLongitudeBound());\n    assertTrue(b.checkNoTopLatitudeBound());\n    assertTrue(b.checkNoBottomLatitudeBound());\n    //assertEquals(-Math.PI+0.1,b.getLeftLongitude(),0.000001);\n    //assertEquals(Math.PI-0.1,b.getRightLongitude(),0.000001);\n\n    c = GeoBBoxFactory.makeGeoBBox(PlanetModel.SPHERE, Math.PI * 0.5, -Math.PI * 0.5, Math.PI - 0.1, -Math.PI + 0.1);\n\n    b = c.getBounds(null);\n    assertFalse(b.checkNoLongitudeBound());\n    assertTrue(b.checkNoTopLatitudeBound());\n    assertTrue(b.checkNoBottomLatitudeBound());\n    assertEquals(Math.PI - 0.1, b.getLeftLongitude(), 0.000001);\n    assertEquals(-Math.PI + 0.1, b.getRightLongitude(), 0.000001);\n\n    // Check latitude zone\n    c = GeoBBoxFactory.makeGeoBBox(PlanetModel.SPHERE, 1.0, -1.0, -Math.PI, Math.PI);\n\n    b = c.getBounds(null);\n    assertTrue(b.checkNoLongitudeBound());\n    assertFalse(b.checkNoTopLatitudeBound());\n    assertFalse(b.checkNoBottomLatitudeBound());\n    assertEquals(-1.0, b.getMinLatitude(), 0.000001);\n    assertEquals(1.0, b.getMaxLatitude(), 0.000001);\n\n    // Now, combine a few things to test the bounds object\n    GeoBBox c1;\n    GeoBBox c2;\n\n    c1 = GeoBBoxFactory.makeGeoBBox(PlanetModel.SPHERE, Math.PI * 0.5, -Math.PI * 0.5, -Math.PI, 0.0);\n    c2 = GeoBBoxFactory.makeGeoBBox(PlanetModel.SPHERE, Math.PI * 0.5, -Math.PI * 0.5, 0.0, Math.PI);\n\n    b = new Bounds();\n    b = c1.getBounds(b);\n    b = c2.getBounds(b);\n    assertTrue(b.checkNoLongitudeBound());\n    assertTrue(b.checkNoTopLatitudeBound());\n    assertTrue(b.checkNoBottomLatitudeBound());\n\n    c1 = GeoBBoxFactory.makeGeoBBox(PlanetModel.SPHERE, Math.PI * 0.5, -Math.PI * 0.5, -Math.PI, 0.0);\n    c2 = GeoBBoxFactory.makeGeoBBox(PlanetModel.SPHERE, Math.PI * 0.5, -Math.PI * 0.5, 0.0, Math.PI * 0.5);\n\n    b = new Bounds();\n    b = c1.getBounds(b);\n    b = c2.getBounds(b);\n    assertTrue(b.checkNoLongitudeBound());\n    assertTrue(b.checkNoTopLatitudeBound());\n    assertTrue(b.checkNoBottomLatitudeBound());\n    //assertEquals(-Math.PI,b.getLeftLongitude(),0.000001);\n    //assertEquals(Math.PI*0.5,b.getRightLongitude(),0.000001);\n\n    c1 = GeoBBoxFactory.makeGeoBBox(PlanetModel.SPHERE, Math.PI * 0.5, -Math.PI * 0.5, -Math.PI * 0.5, 0.0);\n    c2 = GeoBBoxFactory.makeGeoBBox(PlanetModel.SPHERE, Math.PI * 0.5, -Math.PI * 0.5, 0.0, Math.PI);\n\n    b = new Bounds();\n    b = c1.getBounds(b);\n    b = c2.getBounds(b);\n    assertTrue(b.checkNoLongitudeBound());\n    assertTrue(b.checkNoTopLatitudeBound());\n    assertTrue(b.checkNoBottomLatitudeBound());\n    //assertEquals(-Math.PI * 0.5,b.getLeftLongitude(),0.000001);\n    //assertEquals(Math.PI,b.getRightLongitude(),0.000001);\n\n  }\n\n","sourceOld":"  @Test\n  public void testBBoxBounds() {\n    GeoBBox c;\n    Bounds b;\n\n    c = GeoBBoxFactory.makeGeoBBox(PlanetModel.SPHERE, 0.0, -Math.PI * 0.25, -1.0, 1.0);\n\n    b = c.getBounds(null);\n    assertFalse(b.checkNoLongitudeBound());\n    assertFalse(b.checkNoTopLatitudeBound());\n    assertFalse(b.checkNoBottomLatitudeBound());\n    assertEquals(-1.0, b.getLeftLongitude(), 0.000001);\n    assertEquals(1.0, b.getRightLongitude(), 0.000001);\n    assertEquals(-Math.PI * 0.25, b.getMinLatitude(), 0.000001);\n    assertEquals(0.0, b.getMaxLatitude(), 0.000001);\n\n    c = GeoBBoxFactory.makeGeoBBox(PlanetModel.SPHERE, 0.0, -Math.PI * 0.25, 1.0, -1.0);\n\n    b = c.getBounds(null);\n    assertTrue(b.checkNoLongitudeBound());\n    assertFalse(b.checkNoTopLatitudeBound());\n    assertFalse(b.checkNoBottomLatitudeBound());\n    //assertEquals(1.0,b.getLeftLongitude(),0.000001);\n    //assertEquals(-1.0,b.getRightLongitude(),0.000001);\n    assertEquals(-Math.PI * 0.25, b.getMinLatitude(), 0.000001);\n    assertEquals(0.0, b.getMaxLatitude(), 0.000001);\n\n    c = GeoBBoxFactory.makeGeoBBox(PlanetModel.SPHERE, Math.PI * 0.5, -Math.PI * 0.5, -1.0, 1.0);\n\n    b = c.getBounds(null);\n    assertFalse(b.checkNoLongitudeBound());\n    assertTrue(b.checkNoTopLatitudeBound());\n    assertTrue(b.checkNoBottomLatitudeBound());\n    assertEquals(-1.0, b.getLeftLongitude(), 0.000001);\n    assertEquals(1.0, b.getRightLongitude(), 0.000001);\n\n    c = GeoBBoxFactory.makeGeoBBox(PlanetModel.SPHERE, Math.PI * 0.5, -Math.PI * 0.5, 1.0, -1.0);\n\n    b = c.getBounds(null);\n    assertTrue(b.checkNoLongitudeBound());\n    assertTrue(b.checkNoTopLatitudeBound());\n    assertTrue(b.checkNoBottomLatitudeBound());\n    //assertEquals(1.0,b.getLeftLongitude(),0.000001);\n    //assertEquals(-1.0,b.getRightLongitude(),0.000001);\n\n    // Check wide variants of rectangle and longitude slice\n\n    c = GeoBBoxFactory.makeGeoBBox(PlanetModel.SPHERE, 0.0, -Math.PI * 0.25, -Math.PI + 0.1, Math.PI - 0.1);\n\n    b = c.getBounds(null);\n    assertTrue(b.checkNoLongitudeBound());\n    assertFalse(b.checkNoTopLatitudeBound());\n    assertFalse(b.checkNoBottomLatitudeBound());\n    //assertEquals(-Math.PI+0.1,b.getLeftLongitude(),0.000001);\n    //assertEquals(Math.PI-0.1,b.getRightLongitude(),0.000001);\n    assertEquals(-Math.PI * 0.25, b.getMinLatitude(), 0.000001);\n    assertEquals(0.0, b.getMaxLatitude(), 0.000001);\n\n    c = GeoBBoxFactory.makeGeoBBox(PlanetModel.SPHERE, 0.0, -Math.PI * 0.25, Math.PI - 0.1, -Math.PI + 0.1);\n\n    b = c.getBounds(null);\n    assertFalse(b.checkNoLongitudeBound());\n    assertFalse(b.checkNoTopLatitudeBound());\n    assertFalse(b.checkNoBottomLatitudeBound());\n    assertEquals(Math.PI - 0.1, b.getLeftLongitude(), 0.000001);\n    assertEquals(-Math.PI + 0.1, b.getRightLongitude(), 0.000001);\n    assertEquals(-Math.PI * 0.25, b.getMinLatitude(), 0.000001);\n    assertEquals(0.0, b.getMaxLatitude(), 0.000001);\n\n    c = GeoBBoxFactory.makeGeoBBox(PlanetModel.SPHERE, Math.PI * 0.5, -Math.PI * 0.5, -Math.PI + 0.1, Math.PI - 0.1);\n\n    b = c.getBounds(null);\n    assertTrue(b.checkNoLongitudeBound());\n    assertTrue(b.checkNoTopLatitudeBound());\n    assertTrue(b.checkNoBottomLatitudeBound());\n    //assertEquals(-Math.PI+0.1,b.getLeftLongitude(),0.000001);\n    //assertEquals(Math.PI-0.1,b.getRightLongitude(),0.000001);\n\n    c = GeoBBoxFactory.makeGeoBBox(PlanetModel.SPHERE, Math.PI * 0.5, -Math.PI * 0.5, Math.PI - 0.1, -Math.PI + 0.1);\n\n    b = c.getBounds(null);\n    assertFalse(b.checkNoLongitudeBound());\n    assertTrue(b.checkNoTopLatitudeBound());\n    assertTrue(b.checkNoBottomLatitudeBound());\n    assertEquals(Math.PI - 0.1, b.getLeftLongitude(), 0.000001);\n    assertEquals(-Math.PI + 0.1, b.getRightLongitude(), 0.000001);\n\n    // Check latitude zone\n    c = GeoBBoxFactory.makeGeoBBox(PlanetModel.SPHERE, 1.0, -1.0, -Math.PI, Math.PI);\n\n    b = c.getBounds(null);\n    assertTrue(b.checkNoLongitudeBound());\n    assertFalse(b.checkNoTopLatitudeBound());\n    assertFalse(b.checkNoBottomLatitudeBound());\n    assertEquals(-1.0, b.getMinLatitude(), 0.000001);\n    assertEquals(1.0, b.getMaxLatitude(), 0.000001);\n\n    // Now, combine a few things to test the bounds object\n    GeoBBox c1;\n    GeoBBox c2;\n\n    c1 = GeoBBoxFactory.makeGeoBBox(PlanetModel.SPHERE, Math.PI * 0.5, -Math.PI * 0.5, -Math.PI, 0.0);\n    c2 = GeoBBoxFactory.makeGeoBBox(PlanetModel.SPHERE, Math.PI * 0.5, -Math.PI * 0.5, 0.0, Math.PI);\n\n    b = new Bounds();\n    b = c1.getBounds(b);\n    b = c2.getBounds(b);\n    assertTrue(b.checkNoLongitudeBound());\n    assertTrue(b.checkNoTopLatitudeBound());\n    assertTrue(b.checkNoBottomLatitudeBound());\n\n    c1 = GeoBBoxFactory.makeGeoBBox(PlanetModel.SPHERE, Math.PI * 0.5, -Math.PI * 0.5, -Math.PI, 0.0);\n    c2 = GeoBBoxFactory.makeGeoBBox(PlanetModel.SPHERE, Math.PI * 0.5, -Math.PI * 0.5, 0.0, Math.PI * 0.5);\n\n    b = new Bounds();\n    b = c1.getBounds(b);\n    b = c2.getBounds(b);\n    assertTrue(b.checkNoLongitudeBound());\n    assertTrue(b.checkNoTopLatitudeBound());\n    assertTrue(b.checkNoBottomLatitudeBound());\n    //assertEquals(-Math.PI,b.getLeftLongitude(),0.000001);\n    //assertEquals(Math.PI*0.5,b.getRightLongitude(),0.000001);\n\n    c1 = GeoBBoxFactory.makeGeoBBox(PlanetModel.SPHERE, Math.PI * 0.5, -Math.PI * 0.5, -Math.PI * 0.5, 0.0);\n    c2 = GeoBBoxFactory.makeGeoBBox(PlanetModel.SPHERE, Math.PI * 0.5, -Math.PI * 0.5, 0.0, Math.PI);\n\n    b = new Bounds();\n    b = c1.getBounds(b);\n    b = c2.getBounds(b);\n    assertTrue(b.checkNoLongitudeBound());\n    assertTrue(b.checkNoTopLatitudeBound());\n    assertTrue(b.checkNoBottomLatitudeBound());\n    //assertEquals(-Math.PI * 0.5,b.getLeftLongitude(),0.000001);\n    //assertEquals(Math.PI,b.getRightLongitude(),0.000001);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"47619c5413e53c4d414c1ececa274bef0cd3c799":["851e4197476b684154a7b65f996f535522e67400"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"fec06d6753751ae302c7d35866763e6cb414112d":["c921d81476f94b6686d3f216daa1f6b076b4a6c0","f9f97ca977ad649f14b4f60a888adef2edd7a64e"],"3022be5842502b7c2a57a5124199bbc30236f0a0":["fec06d6753751ae302c7d35866763e6cb414112d"],"e2997acf74723385bd84aff1ea0b12af4aefde77":["47619c5413e53c4d414c1ececa274bef0cd3c799"],"c921d81476f94b6686d3f216daa1f6b076b4a6c0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","e2997acf74723385bd84aff1ea0b12af4aefde77"],"851e4197476b684154a7b65f996f535522e67400":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f9f97ca977ad649f14b4f60a888adef2edd7a64e":["c921d81476f94b6686d3f216daa1f6b076b4a6c0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3022be5842502b7c2a57a5124199bbc30236f0a0"]},"commit2Childs":{"47619c5413e53c4d414c1ececa274bef0cd3c799":["e2997acf74723385bd84aff1ea0b12af4aefde77"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c921d81476f94b6686d3f216daa1f6b076b4a6c0","851e4197476b684154a7b65f996f535522e67400"],"fec06d6753751ae302c7d35866763e6cb414112d":["3022be5842502b7c2a57a5124199bbc30236f0a0"],"3022be5842502b7c2a57a5124199bbc30236f0a0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e2997acf74723385bd84aff1ea0b12af4aefde77":["c921d81476f94b6686d3f216daa1f6b076b4a6c0"],"851e4197476b684154a7b65f996f535522e67400":["47619c5413e53c4d414c1ececa274bef0cd3c799"],"c921d81476f94b6686d3f216daa1f6b076b4a6c0":["fec06d6753751ae302c7d35866763e6cb414112d","f9f97ca977ad649f14b4f60a888adef2edd7a64e"],"f9f97ca977ad649f14b4f60a888adef2edd7a64e":["fec06d6753751ae302c7d35866763e6cb414112d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}