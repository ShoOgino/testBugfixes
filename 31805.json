{"path":"lucene/queries/src/java/org/apache/lucene/queries/intervals/MinimizingConjunctionMatchesIterator#MinimizingConjunctionMatchesIterator(IntervalIterator,List[IntervalMatchesIterator]).mjava","commits":[{"id":"30c78dc09f599cd42c186ddd94084249c8db1ede","date":1581000287,"type":1,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/intervals/MinimizingConjunctionMatchesIterator#MinimizingConjunctionMatchesIterator(IntervalIterator,List[IntervalMatchesIterator]).mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/intervals/MinimizingConjunctionMatchesIterator#MinimizingConjunctionMatchesIterator(IntervalIterator,List[MatchesIterator]).mjava","sourceNew":"  MinimizingConjunctionMatchesIterator(IntervalIterator iterator, List<IntervalMatchesIterator> subs) {\n    this.iterator = iterator;\n    for (MatchesIterator mi : subs) {\n      assert mi instanceof CachingMatchesIterator;\n      this.subs.add((CachingMatchesIterator)mi);\n    }\n  }\n\n","sourceOld":"  MinimizingConjunctionMatchesIterator(IntervalIterator iterator, List<MatchesIterator> subs) {\n    this.iterator = iterator;\n    for (MatchesIterator mi : subs) {\n      assert mi instanceof CachingMatchesIterator;\n      this.subs.add((CachingMatchesIterator)mi);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"30c78dc09f599cd42c186ddd94084249c8db1ede":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["30c78dc09f599cd42c186ddd94084249c8db1ede"]},"commit2Childs":{"30c78dc09f599cd42c186ddd94084249c8db1ede":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["30c78dc09f599cd42c186ddd94084249c8db1ede"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}