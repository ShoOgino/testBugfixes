{"path":"modules/queries/src/java/org/apache/lucene/queries/function/valuesource/NormValueSource#getValues(Map,AtomicReaderContext).mjava","commits":[{"id":"51cb88215648c6da23e00f2ffb57a5e3e1ef14be","date":1309303947,"type":1,"author":"Christopher John Male","isMerge":false,"pathNew":"modules/queries/src/java/org/apache/lucene/queries/function/valuesource/NormValueSource#getValues(Map,AtomicReaderContext).mjava","pathOld":"solr/src/java/org/apache/solr/search/function/NormValueSource#getValues(Map,AtomicReaderContext).mjava","sourceNew":"  @Override\n  public DocValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n    IndexSearcher searcher = (IndexSearcher)context.get(\"searcher\");\n    final Similarity similarity = searcher.getSimilarityProvider().get(field);\n    final byte[] norms = readerContext.reader.norms(field);\n    if (norms == null) {\n      return new ConstDoubleDocValues(0.0, this);\n    }\n\n    return new FloatDocValues(this) {\n      @Override\n      public float floatVal(int doc) {\n        return similarity.decodeNormValue(norms[doc]);\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public DocValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n    IndexSearcher searcher = (IndexSearcher)context.get(\"searcher\");\n    final Similarity similarity = searcher.getSimilarityProvider().get(field);\n    final byte[] norms = readerContext.reader.norms(field);\n    if (norms == null) {\n      return new ConstDoubleDocValues(0.0, this);\n    }\n\n    return new FloatDocValues(this) {\n      @Override\n      public float floatVal(int doc) {\n        return similarity.decodeNormValue(norms[doc]);\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"817d8435e9135b756f08ce6710ab0baac51bdf88","date":1309986993,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"modules/queries/src/java/org/apache/lucene/queries/function/valuesource/NormValueSource#getValues(Map,AtomicReaderContext).mjava","pathOld":"solr/src/java/org/apache/solr/search/function/NormValueSource#getValues(Map,AtomicReaderContext).mjava","sourceNew":"  @Override\n  public DocValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n    IndexSearcher searcher = (IndexSearcher)context.get(\"searcher\");\n    final Similarity similarity = searcher.getSimilarityProvider().get(field);\n    final byte[] norms = readerContext.reader.norms(field);\n    if (norms == null) {\n      return new ConstDoubleDocValues(0.0, this);\n    }\n\n    return new FloatDocValues(this) {\n      @Override\n      public float floatVal(int doc) {\n        return similarity.decodeNormValue(norms[doc]);\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public DocValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n    IndexSearcher searcher = (IndexSearcher)context.get(\"searcher\");\n    final Similarity similarity = searcher.getSimilarityProvider().get(field);\n    final byte[] norms = readerContext.reader.norms(field);\n    if (norms == null) {\n      return new ConstDoubleDocValues(0.0, this);\n    }\n\n    return new FloatDocValues(this) {\n      @Override\n      public float floatVal(int doc) {\n        return similarity.decodeNormValue(norms[doc]);\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d083e83f225b11e5fdd900e83d26ddb385b6955c","date":1310029438,"type":1,"author":"Simon Willnauer","isMerge":true,"pathNew":"modules/queries/src/java/org/apache/lucene/queries/function/valuesource/NormValueSource#getValues(Map,AtomicReaderContext).mjava","pathOld":"solr/src/java/org/apache/solr/search/function/NormValueSource#getValues(Map,AtomicReaderContext).mjava","sourceNew":"  @Override\n  public DocValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n    IndexSearcher searcher = (IndexSearcher)context.get(\"searcher\");\n    final Similarity similarity = searcher.getSimilarityProvider().get(field);\n    final byte[] norms = readerContext.reader.norms(field);\n    if (norms == null) {\n      return new ConstDoubleDocValues(0.0, this);\n    }\n\n    return new FloatDocValues(this) {\n      @Override\n      public float floatVal(int doc) {\n        return similarity.decodeNormValue(norms[doc]);\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public DocValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n    IndexSearcher searcher = (IndexSearcher)context.get(\"searcher\");\n    final Similarity similarity = searcher.getSimilarityProvider().get(field);\n    final byte[] norms = readerContext.reader.norms(field);\n    if (norms == null) {\n      return new ConstDoubleDocValues(0.0, this);\n    }\n\n    return new FloatDocValues(this) {\n      @Override\n      public float floatVal(int doc) {\n        return similarity.decodeNormValue(norms[doc]);\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f3cee3d20b0c786e6fca20539454262e29edcab","date":1310101685,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"modules/queries/src/java/org/apache/lucene/queries/function/valuesource/NormValueSource#getValues(Map,AtomicReaderContext).mjava","pathOld":"modules/queries/src/java/org/apache/lucene/queries/function/valuesource/NormValueSource#getValues(Map,AtomicReaderContext).mjava","sourceNew":"  @Override\n  public DocValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n    IndexSearcher searcher = (IndexSearcher)context.get(\"searcher\");\n    Similarity sim = searcher.getSimilarityProvider().get(field);\n    if (!(sim instanceof TFIDFSimilarity)) {\n      throw new UnsupportedOperationException(\"requires a TFIDFSimilarity (such as DefaultSimilarity)\");\n    }\n    final TFIDFSimilarity similarity = (TFIDFSimilarity) sim;\n    final byte[] norms = readerContext.reader.norms(field);\n    if (norms == null) {\n      return new ConstDoubleDocValues(0.0, this);\n    }\n\n    return new FloatDocValues(this) {\n      @Override\n      public float floatVal(int doc) {\n        return similarity.decodeNormValue(norms[doc]);\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public DocValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n    IndexSearcher searcher = (IndexSearcher)context.get(\"searcher\");\n    final Similarity similarity = searcher.getSimilarityProvider().get(field);\n    final byte[] norms = readerContext.reader.norms(field);\n    if (norms == null) {\n      return new ConstDoubleDocValues(0.0, this);\n    }\n\n    return new FloatDocValues(this) {\n      @Override\n      public float floatVal(int doc) {\n        return similarity.decodeNormValue(norms[doc]);\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"f0b9507caf22f292ac0e5e59f62db4275adf4511","date":1310107283,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"modules/queries/src/java/org/apache/lucene/queries/function/valuesource/NormValueSource#getValues(Map,AtomicReaderContext).mjava","pathOld":"modules/queries/src/java/org/apache/lucene/queries/function/valuesource/NormValueSource#getValues(Map,AtomicReaderContext).mjava","sourceNew":"  @Override\n  public DocValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n    IndexSearcher searcher = (IndexSearcher)context.get(\"searcher\");\n    Similarity sim = searcher.getSimilarityProvider().get(field);\n    if (!(sim instanceof TFIDFSimilarity)) {\n      throw new UnsupportedOperationException(\"requires a TFIDFSimilarity (such as DefaultSimilarity)\");\n    }\n    final TFIDFSimilarity similarity = (TFIDFSimilarity) sim;\n    final byte[] norms = readerContext.reader.norms(field);\n    if (norms == null) {\n      return new ConstDoubleDocValues(0.0, this);\n    }\n\n    return new FloatDocValues(this) {\n      @Override\n      public float floatVal(int doc) {\n        return similarity.decodeNormValue(norms[doc]);\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public DocValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n    IndexSearcher searcher = (IndexSearcher)context.get(\"searcher\");\n    final Similarity similarity = searcher.getSimilarityProvider().get(field);\n    final byte[] norms = readerContext.reader.norms(field);\n    if (norms == null) {\n      return new ConstDoubleDocValues(0.0, this);\n    }\n\n    return new FloatDocValues(this) {\n      @Override\n      public float floatVal(int doc) {\n        return similarity.decodeNormValue(norms[doc]);\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1291e4568eb7d9463d751627596ef14baf4c1603","date":1310112572,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"modules/queries/src/java/org/apache/lucene/queries/function/valuesource/NormValueSource#getValues(Map,AtomicReaderContext).mjava","pathOld":"modules/queries/src/java/org/apache/lucene/queries/function/valuesource/NormValueSource#getValues(Map,AtomicReaderContext).mjava","sourceNew":"  @Override\n  public DocValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n    IndexSearcher searcher = (IndexSearcher)context.get(\"searcher\");\n    Similarity sim = searcher.getSimilarityProvider().get(field);\n    if (!(sim instanceof TFIDFSimilarity)) {\n      throw new UnsupportedOperationException(\"requires a TFIDFSimilarity (such as DefaultSimilarity)\");\n    }\n    final TFIDFSimilarity similarity = (TFIDFSimilarity) sim;\n    final byte[] norms = readerContext.reader.norms(field);\n    if (norms == null) {\n      return new ConstDoubleDocValues(0.0, this);\n    }\n\n    return new FloatDocValues(this) {\n      @Override\n      public float floatVal(int doc) {\n        return similarity.decodeNormValue(norms[doc]);\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public DocValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n    IndexSearcher searcher = (IndexSearcher)context.get(\"searcher\");\n    final Similarity similarity = searcher.getSimilarityProvider().get(field);\n    final byte[] norms = readerContext.reader.norms(field);\n    if (norms == null) {\n      return new ConstDoubleDocValues(0.0, this);\n    }\n\n    return new FloatDocValues(this) {\n      @Override\n      public float floatVal(int doc) {\n        return similarity.decodeNormValue(norms[doc]);\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"32e7c2a80dad193a76a03ec46b878969d469ff6c","date":1323722006,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"modules/queries/src/java/org/apache/lucene/queries/function/valuesource/NormValueSource#getValues(Map,AtomicReaderContext).mjava","pathOld":"modules/queries/src/java/org/apache/lucene/queries/function/valuesource/NormValueSource#getValues(Map,AtomicReaderContext).mjava","sourceNew":"  @Override\n  public FunctionValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n    IndexSearcher searcher = (IndexSearcher)context.get(\"searcher\");\n    Similarity sim = searcher.getSimilarityProvider().get(field);\n    if (!(sim instanceof TFIDFSimilarity)) {\n      throw new UnsupportedOperationException(\"requires a TFIDFSimilarity (such as DefaultSimilarity)\");\n    }\n    final TFIDFSimilarity similarity = (TFIDFSimilarity) sim;\n    final byte[] norms = readerContext.reader.norms(field);\n    if (norms == null) {\n      return new ConstDoubleDocValues(0.0, this);\n    }\n\n    return new FloatDocValues(this) {\n      @Override\n      public float floatVal(int doc) {\n        return similarity.decodeNormValue(norms[doc]);\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public DocValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n    IndexSearcher searcher = (IndexSearcher)context.get(\"searcher\");\n    Similarity sim = searcher.getSimilarityProvider().get(field);\n    if (!(sim instanceof TFIDFSimilarity)) {\n      throw new UnsupportedOperationException(\"requires a TFIDFSimilarity (such as DefaultSimilarity)\");\n    }\n    final TFIDFSimilarity similarity = (TFIDFSimilarity) sim;\n    final byte[] norms = readerContext.reader.norms(field);\n    if (norms == null) {\n      return new ConstDoubleDocValues(0.0, this);\n    }\n\n    return new FloatDocValues(this) {\n      @Override\n      public float floatVal(int doc) {\n        return similarity.decodeNormValue(norms[doc]);\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d638301ad1cfcae567b681b893bc8781f0ee48a5","date":1323801546,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"modules/queries/src/java/org/apache/lucene/queries/function/valuesource/NormValueSource#getValues(Map,AtomicReaderContext).mjava","pathOld":"modules/queries/src/java/org/apache/lucene/queries/function/valuesource/NormValueSource#getValues(Map,AtomicReaderContext).mjava","sourceNew":"  @Override\n  public FunctionValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n    IndexSearcher searcher = (IndexSearcher)context.get(\"searcher\");\n    Similarity sim = searcher.getSimilarityProvider().get(field);\n    if (!(sim instanceof TFIDFSimilarity)) {\n      throw new UnsupportedOperationException(\"requires a TFIDFSimilarity (such as DefaultSimilarity)\");\n    }\n    final TFIDFSimilarity similarity = (TFIDFSimilarity) sim;\n    final byte[] norms = readerContext.reader.norms(field);\n    if (norms == null) {\n      return new ConstDoubleDocValues(0.0, this);\n    }\n\n    return new FloatDocValues(this) {\n      @Override\n      public float floatVal(int doc) {\n        return similarity.decodeNormValue(norms[doc]);\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public DocValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n    IndexSearcher searcher = (IndexSearcher)context.get(\"searcher\");\n    Similarity sim = searcher.getSimilarityProvider().get(field);\n    if (!(sim instanceof TFIDFSimilarity)) {\n      throw new UnsupportedOperationException(\"requires a TFIDFSimilarity (such as DefaultSimilarity)\");\n    }\n    final TFIDFSimilarity similarity = (TFIDFSimilarity) sim;\n    final byte[] norms = readerContext.reader.norms(field);\n    if (norms == null) {\n      return new ConstDoubleDocValues(0.0, this);\n    }\n\n    return new FloatDocValues(this) {\n      @Override\n      public float floatVal(int doc) {\n        return similarity.decodeNormValue(norms[doc]);\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"0f4b223b56d0c7927ae8baced5e1b1dd4c693b1d","date":1325789720,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"modules/queries/src/java/org/apache/lucene/queries/function/valuesource/NormValueSource#getValues(Map,AtomicReaderContext).mjava","pathOld":"modules/queries/src/java/org/apache/lucene/queries/function/valuesource/NormValueSource#getValues(Map,AtomicReaderContext).mjava","sourceNew":"  @Override\n  public FunctionValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n    IndexSearcher searcher = (IndexSearcher)context.get(\"searcher\");\n    Similarity sim = searcher.getSimilarityProvider().get(field);\n    if (!(sim instanceof TFIDFSimilarity)) {\n      throw new UnsupportedOperationException(\"requires a TFIDFSimilarity (such as DefaultSimilarity)\");\n    }\n    final TFIDFSimilarity similarity = (TFIDFSimilarity) sim;\n    DocValues dv = readerContext.reader.normValues(field);\n\n    if (dv == null) {\n      return new ConstDoubleDocValues(0.0, this);\n    }\n    \n    final byte[] norms = (byte[]) dv.getSource().getArray();\n\n    return new FloatDocValues(this) {\n      @Override\n      public float floatVal(int doc) {\n        return similarity.decodeNormValue(norms[doc]);\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public FunctionValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n    IndexSearcher searcher = (IndexSearcher)context.get(\"searcher\");\n    Similarity sim = searcher.getSimilarityProvider().get(field);\n    if (!(sim instanceof TFIDFSimilarity)) {\n      throw new UnsupportedOperationException(\"requires a TFIDFSimilarity (such as DefaultSimilarity)\");\n    }\n    final TFIDFSimilarity similarity = (TFIDFSimilarity) sim;\n    final byte[] norms = readerContext.reader.norms(field);\n    if (norms == null) {\n      return new ConstDoubleDocValues(0.0, this);\n    }\n\n    return new FloatDocValues(this) {\n      @Override\n      public float floatVal(int doc) {\n        return similarity.decodeNormValue(norms[doc]);\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"61e20f33ce8ff701576366fdb03955eded5f209b","date":1327852832,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"modules/queries/src/java/org/apache/lucene/queries/function/valuesource/NormValueSource#getValues(Map,AtomicReaderContext).mjava","pathOld":"modules/queries/src/java/org/apache/lucene/queries/function/valuesource/NormValueSource#getValues(Map,AtomicReaderContext).mjava","sourceNew":"  @Override\n  public FunctionValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n    IndexSearcher searcher = (IndexSearcher)context.get(\"searcher\");\n    Similarity sim = searcher.getSimilarityProvider().get(field);\n    if (!(sim instanceof TFIDFSimilarity)) {\n      throw new UnsupportedOperationException(\"requires a TFIDFSimilarity (such as DefaultSimilarity)\");\n    }\n    final TFIDFSimilarity similarity = (TFIDFSimilarity) sim;\n    DocValues dv = readerContext.reader().normValues(field);\n\n    if (dv == null) {\n      return new ConstDoubleDocValues(0.0, this);\n    }\n    \n    final byte[] norms = (byte[]) dv.getSource().getArray();\n\n    return new FloatDocValues(this) {\n      @Override\n      public float floatVal(int doc) {\n        return similarity.decodeNormValue(norms[doc]);\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public FunctionValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n    IndexSearcher searcher = (IndexSearcher)context.get(\"searcher\");\n    Similarity sim = searcher.getSimilarityProvider().get(field);\n    if (!(sim instanceof TFIDFSimilarity)) {\n      throw new UnsupportedOperationException(\"requires a TFIDFSimilarity (such as DefaultSimilarity)\");\n    }\n    final TFIDFSimilarity similarity = (TFIDFSimilarity) sim;\n    DocValues dv = readerContext.reader.normValues(field);\n\n    if (dv == null) {\n      return new ConstDoubleDocValues(0.0, this);\n    }\n    \n    final byte[] norms = (byte[]) dv.getSource().getArray();\n\n    return new FloatDocValues(this) {\n      @Override\n      public float floatVal(int doc) {\n        return similarity.decodeNormValue(norms[doc]);\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5cab9a86bd67202d20b6adc463008c8e982b070a","date":1327966443,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"modules/queries/src/java/org/apache/lucene/queries/function/valuesource/NormValueSource#getValues(Map,AtomicReaderContext).mjava","pathOld":"modules/queries/src/java/org/apache/lucene/queries/function/valuesource/NormValueSource#getValues(Map,AtomicReaderContext).mjava","sourceNew":"  @Override\n  public FunctionValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n    IndexSearcher searcher = (IndexSearcher)context.get(\"searcher\");\n    Similarity sim = searcher.getSimilarityProvider().get(field);\n    if (!(sim instanceof TFIDFSimilarity)) {\n      throw new UnsupportedOperationException(\"requires a TFIDFSimilarity (such as DefaultSimilarity)\");\n    }\n    final TFIDFSimilarity similarity = (TFIDFSimilarity) sim;\n    DocValues dv = readerContext.reader().normValues(field);\n\n    if (dv == null) {\n      return new ConstDoubleDocValues(0.0, this);\n    }\n    \n    final byte[] norms = (byte[]) dv.getSource().getArray();\n\n    return new FloatDocValues(this) {\n      @Override\n      public float floatVal(int doc) {\n        return similarity.decodeNormValue(norms[doc]);\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public FunctionValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n    IndexSearcher searcher = (IndexSearcher)context.get(\"searcher\");\n    Similarity sim = searcher.getSimilarityProvider().get(field);\n    if (!(sim instanceof TFIDFSimilarity)) {\n      throw new UnsupportedOperationException(\"requires a TFIDFSimilarity (such as DefaultSimilarity)\");\n    }\n    final TFIDFSimilarity similarity = (TFIDFSimilarity) sim;\n    DocValues dv = readerContext.reader.normValues(field);\n\n    if (dv == null) {\n      return new ConstDoubleDocValues(0.0, this);\n    }\n    \n    final byte[] norms = (byte[]) dv.getSource().getArray();\n\n    return new FloatDocValues(this) {\n      @Override\n      public float floatVal(int doc) {\n        return similarity.decodeNormValue(norms[doc]);\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1ab42b0756bdd98ac6a6767b5a77d10d9ba12b4b","date":1328532481,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"modules/queries/src/java/org/apache/lucene/queries/function/valuesource/NormValueSource#getValues(Map,AtomicReaderContext).mjava","pathOld":"modules/queries/src/java/org/apache/lucene/queries/function/valuesource/NormValueSource#getValues(Map,AtomicReaderContext).mjava","sourceNew":"  @Override\n  public FunctionValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n    IndexSearcher searcher = (IndexSearcher)context.get(\"searcher\");\n    final TFIDFSimilarity similarity = IDFValueSource.asTFIDF(searcher.getSimilarity(), field);\n    if (similarity == null) {\n      throw new UnsupportedOperationException(\"requires a TFIDFSimilarity (such as DefaultSimilarity)\");\n    }\n    DocValues dv = readerContext.reader().normValues(field);\n\n    if (dv == null) {\n      return new ConstDoubleDocValues(0.0, this);\n    }\n    \n    final byte[] norms = (byte[]) dv.getSource().getArray();\n\n    return new FloatDocValues(this) {\n      @Override\n      public float floatVal(int doc) {\n        return similarity.decodeNormValue(norms[doc]);\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public FunctionValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n    IndexSearcher searcher = (IndexSearcher)context.get(\"searcher\");\n    Similarity sim = searcher.getSimilarityProvider().get(field);\n    if (!(sim instanceof TFIDFSimilarity)) {\n      throw new UnsupportedOperationException(\"requires a TFIDFSimilarity (such as DefaultSimilarity)\");\n    }\n    final TFIDFSimilarity similarity = (TFIDFSimilarity) sim;\n    DocValues dv = readerContext.reader().normValues(field);\n\n    if (dv == null) {\n      return new ConstDoubleDocValues(0.0, this);\n    }\n    \n    final byte[] norms = (byte[]) dv.getSource().getArray();\n\n    return new FloatDocValues(this) {\n      @Override\n      public float floatVal(int doc) {\n        return similarity.decodeNormValue(norms[doc]);\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/function/valuesource/NormValueSource#getValues(Map,AtomicReaderContext).mjava","pathOld":"modules/queries/src/java/org/apache/lucene/queries/function/valuesource/NormValueSource#getValues(Map,AtomicReaderContext).mjava","sourceNew":"  @Override\n  public FunctionValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n    IndexSearcher searcher = (IndexSearcher)context.get(\"searcher\");\n    final TFIDFSimilarity similarity = IDFValueSource.asTFIDF(searcher.getSimilarity(), field);\n    if (similarity == null) {\n      throw new UnsupportedOperationException(\"requires a TFIDFSimilarity (such as DefaultSimilarity)\");\n    }\n    DocValues dv = readerContext.reader().normValues(field);\n\n    if (dv == null) {\n      return new ConstDoubleDocValues(0.0, this);\n    }\n    \n    final byte[] norms = (byte[]) dv.getSource().getArray();\n\n    return new FloatDocValues(this) {\n      @Override\n      public float floatVal(int doc) {\n        return similarity.decodeNormValue(norms[doc]);\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public FunctionValues getValues(Map context, AtomicReaderContext readerContext) throws IOException {\n    IndexSearcher searcher = (IndexSearcher)context.get(\"searcher\");\n    final TFIDFSimilarity similarity = IDFValueSource.asTFIDF(searcher.getSimilarity(), field);\n    if (similarity == null) {\n      throw new UnsupportedOperationException(\"requires a TFIDFSimilarity (such as DefaultSimilarity)\");\n    }\n    DocValues dv = readerContext.reader().normValues(field);\n\n    if (dv == null) {\n      return new ConstDoubleDocValues(0.0, this);\n    }\n    \n    final byte[] norms = (byte[]) dv.getSource().getArray();\n\n    return new FloatDocValues(this) {\n      @Override\n      public float floatVal(int doc) {\n        return similarity.decodeNormValue(norms[doc]);\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"0f3cee3d20b0c786e6fca20539454262e29edcab":["51cb88215648c6da23e00f2ffb57a5e3e1ef14be"],"1ab42b0756bdd98ac6a6767b5a77d10d9ba12b4b":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","51cb88215648c6da23e00f2ffb57a5e3e1ef14be"],"5cab9a86bd67202d20b6adc463008c8e982b070a":["0f4b223b56d0c7927ae8baced5e1b1dd4c693b1d","61e20f33ce8ff701576366fdb03955eded5f209b"],"817d8435e9135b756f08ce6710ab0baac51bdf88":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","51cb88215648c6da23e00f2ffb57a5e3e1ef14be"],"d638301ad1cfcae567b681b893bc8781f0ee48a5":["0f3cee3d20b0c786e6fca20539454262e29edcab","32e7c2a80dad193a76a03ec46b878969d469ff6c"],"1291e4568eb7d9463d751627596ef14baf4c1603":["d083e83f225b11e5fdd900e83d26ddb385b6955c","0f3cee3d20b0c786e6fca20539454262e29edcab"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["1ab42b0756bdd98ac6a6767b5a77d10d9ba12b4b"],"0f4b223b56d0c7927ae8baced5e1b1dd4c693b1d":["d638301ad1cfcae567b681b893bc8781f0ee48a5"],"f0b9507caf22f292ac0e5e59f62db4275adf4511":["817d8435e9135b756f08ce6710ab0baac51bdf88","0f3cee3d20b0c786e6fca20539454262e29edcab"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"61e20f33ce8ff701576366fdb03955eded5f209b":["0f4b223b56d0c7927ae8baced5e1b1dd4c693b1d"],"32e7c2a80dad193a76a03ec46b878969d469ff6c":["0f3cee3d20b0c786e6fca20539454262e29edcab"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"51cb88215648c6da23e00f2ffb57a5e3e1ef14be":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"0f3cee3d20b0c786e6fca20539454262e29edcab":["d638301ad1cfcae567b681b893bc8781f0ee48a5","1291e4568eb7d9463d751627596ef14baf4c1603","f0b9507caf22f292ac0e5e59f62db4275adf4511","32e7c2a80dad193a76a03ec46b878969d469ff6c"],"1ab42b0756bdd98ac6a6767b5a77d10d9ba12b4b":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":["1291e4568eb7d9463d751627596ef14baf4c1603"],"5cab9a86bd67202d20b6adc463008c8e982b070a":["1ab42b0756bdd98ac6a6767b5a77d10d9ba12b4b"],"817d8435e9135b756f08ce6710ab0baac51bdf88":["f0b9507caf22f292ac0e5e59f62db4275adf4511"],"d638301ad1cfcae567b681b893bc8781f0ee48a5":["0f4b223b56d0c7927ae8baced5e1b1dd4c693b1d"],"1291e4568eb7d9463d751627596ef14baf4c1603":[],"0f4b223b56d0c7927ae8baced5e1b1dd4c693b1d":["5cab9a86bd67202d20b6adc463008c8e982b070a","61e20f33ce8ff701576366fdb03955eded5f209b"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f0b9507caf22f292ac0e5e59f62db4275adf4511":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88","51cb88215648c6da23e00f2ffb57a5e3e1ef14be"],"61e20f33ce8ff701576366fdb03955eded5f209b":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"32e7c2a80dad193a76a03ec46b878969d469ff6c":["d638301ad1cfcae567b681b893bc8781f0ee48a5"],"51cb88215648c6da23e00f2ffb57a5e3e1ef14be":["0f3cee3d20b0c786e6fca20539454262e29edcab","d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["1291e4568eb7d9463d751627596ef14baf4c1603","f0b9507caf22f292ac0e5e59f62db4275adf4511","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}