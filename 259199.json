{"path":"lucene/sandbox/src/java/org/apache/lucene/document/LatLonShape.LatLonTriangle#setTriangleValue(int,int,int,int,int,int).mjava","commits":[{"id":"06fc6aedefe19d7a0b0d82dac953a4f161e16b5c","date":1531585717,"type":0,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/document/LatLonShape.LatLonTriangle#setTriangleValue(int,int,int,int,int,int).mjava","pathOld":"/dev/null","sourceNew":"    public void setTriangleValue(int aX, int aY, int bX, int bY, int cX, int cY) {\n      final byte[] bytes;\n\n      if (fieldsData == null) {\n        bytes = new byte[24];\n        fieldsData = new BytesRef(bytes);\n      } else {\n        bytes = ((BytesRef) fieldsData).bytes;\n      }\n\n      NumericUtils.intToSortableBytes(aY, bytes, 0);\n      NumericUtils.intToSortableBytes(aX, bytes, BYTES);\n      NumericUtils.intToSortableBytes(bY, bytes, BYTES * 2);\n      NumericUtils.intToSortableBytes(bX, bytes, BYTES * 3);\n      NumericUtils.intToSortableBytes(cY, bytes, BYTES * 4);\n      NumericUtils.intToSortableBytes(cX, bytes, BYTES * 5);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26","date":1531589977,"type":0,"author":"Michael Braun","isMerge":true,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/document/LatLonShape.LatLonTriangle#setTriangleValue(int,int,int,int,int,int).mjava","pathOld":"/dev/null","sourceNew":"    public void setTriangleValue(int aX, int aY, int bX, int bY, int cX, int cY) {\n      final byte[] bytes;\n\n      if (fieldsData == null) {\n        bytes = new byte[24];\n        fieldsData = new BytesRef(bytes);\n      } else {\n        bytes = ((BytesRef) fieldsData).bytes;\n      }\n\n      NumericUtils.intToSortableBytes(aY, bytes, 0);\n      NumericUtils.intToSortableBytes(aX, bytes, BYTES);\n      NumericUtils.intToSortableBytes(bY, bytes, BYTES * 2);\n      NumericUtils.intToSortableBytes(bX, bytes, BYTES * 3);\n      NumericUtils.intToSortableBytes(cY, bytes, BYTES * 4);\n      NumericUtils.intToSortableBytes(cX, bytes, BYTES * 5);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","date":1531905561,"type":0,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/document/LatLonShape.LatLonTriangle#setTriangleValue(int,int,int,int,int,int).mjava","pathOld":"/dev/null","sourceNew":"    public void setTriangleValue(int aX, int aY, int bX, int bY, int cX, int cY) {\n      final byte[] bytes;\n\n      if (fieldsData == null) {\n        bytes = new byte[24];\n        fieldsData = new BytesRef(bytes);\n      } else {\n        bytes = ((BytesRef) fieldsData).bytes;\n      }\n\n      NumericUtils.intToSortableBytes(aY, bytes, 0);\n      NumericUtils.intToSortableBytes(aX, bytes, BYTES);\n      NumericUtils.intToSortableBytes(bY, bytes, BYTES * 2);\n      NumericUtils.intToSortableBytes(bX, bytes, BYTES * 3);\n      NumericUtils.intToSortableBytes(cY, bytes, BYTES * 4);\n      NumericUtils.intToSortableBytes(cX, bytes, BYTES * 5);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e48f589a9604e11db23a025a27efbf3d14ab4e3b","date":1539887418,"type":3,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/document/LatLonShape.LatLonTriangle#setTriangleValue(int,int,int,int,int,int).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/document/LatLonShape.LatLonTriangle#setTriangleValue(int,int,int,int,int,int).mjava","sourceNew":"    public void setTriangleValue(int aX, int aY, int bX, int bY, int cX, int cY) {\n      final byte[] bytes;\n\n      if (fieldsData == null) {\n        bytes = new byte[7 * BYTES];\n        fieldsData = new BytesRef(bytes);\n      } else {\n        bytes = ((BytesRef) fieldsData).bytes;\n      }\n\n      int minX = StrictMath.min(aX, StrictMath.min(bX, cX));\n      int minY = StrictMath.min(aY, StrictMath.min(bY, cY));\n      int maxX = StrictMath.max(aX, StrictMath.max(bX, cX));\n      int maxY = StrictMath.max(aY, StrictMath.max(bY, cY));\n\n      encodeTriangle(bytes, minY, minX, maxY, maxX, aX, aY, bX, bY, cX, cY);\n    }\n\n","sourceOld":"    public void setTriangleValue(int aX, int aY, int bX, int bY, int cX, int cY) {\n      final byte[] bytes;\n\n      if (fieldsData == null) {\n        bytes = new byte[24];\n        fieldsData = new BytesRef(bytes);\n      } else {\n        bytes = ((BytesRef) fieldsData).bytes;\n      }\n\n      NumericUtils.intToSortableBytes(aY, bytes, 0);\n      NumericUtils.intToSortableBytes(aX, bytes, BYTES);\n      NumericUtils.intToSortableBytes(bY, bytes, BYTES * 2);\n      NumericUtils.intToSortableBytes(bX, bytes, BYTES * 3);\n      NumericUtils.intToSortableBytes(cY, bytes, BYTES * 4);\n      NumericUtils.intToSortableBytes(cX, bytes, BYTES * 5);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2aeefba8262036d422d639e48c49d51316bea138","date":1545148224,"type":3,"author":"iverase","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/document/LatLonShape.LatLonTriangle#setTriangleValue(int,int,int,int,int,int).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/document/LatLonShape.LatLonTriangle#setTriangleValue(int,int,int,int,int,int).mjava","sourceNew":"    public void setTriangleValue(int aX, int aY, int bX, int bY, int cX, int cY) {\n      final byte[] bytes;\n\n      if (fieldsData == null) {\n        bytes = new byte[7 * BYTES];\n        fieldsData = new BytesRef(bytes);\n      } else {\n        bytes = ((BytesRef) fieldsData).bytes;\n      }\n      encodeTriangle(bytes, aY, aX, bY, bX, cY, cX);\n    }\n\n","sourceOld":"    public void setTriangleValue(int aX, int aY, int bX, int bY, int cX, int cY) {\n      final byte[] bytes;\n\n      if (fieldsData == null) {\n        bytes = new byte[7 * BYTES];\n        fieldsData = new BytesRef(bytes);\n      } else {\n        bytes = ((BytesRef) fieldsData).bytes;\n      }\n\n      int minX = StrictMath.min(aX, StrictMath.min(bX, cX));\n      int minY = StrictMath.min(aY, StrictMath.min(bY, cY));\n      int maxX = StrictMath.max(aX, StrictMath.max(bX, cX));\n      int maxY = StrictMath.max(aY, StrictMath.max(bY, cY));\n\n      encodeTriangle(bytes, minY, minX, maxY, maxX, aX, aY, bX, bY, cX, cY);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c286b0d8c507a88b289407e2fe161effa275c6b0","date":1562615977,"type":5,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/document/ShapeField.Triangle#setTriangleValue(int,int,int,int,int,int).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/document/LatLonShape.LatLonTriangle#setTriangleValue(int,int,int,int,int,int).mjava","sourceNew":"    /** sets the vertices of the triangle as integer encoded values */\n    protected void setTriangleValue(int aX, int aY, int bX, int bY, int cX, int cY) {\n      final byte[] bytes;\n\n      if (fieldsData == null) {\n        bytes = new byte[7 * BYTES];\n        fieldsData = new BytesRef(bytes);\n      } else {\n        bytes = ((BytesRef) fieldsData).bytes;\n      }\n      encodeTriangle(bytes, aY, aX, bY, bX, cY, cX);\n    }\n\n","sourceOld":"    public void setTriangleValue(int aX, int aY, int bX, int bY, int cX, int cY) {\n      final byte[] bytes;\n\n      if (fieldsData == null) {\n        bytes = new byte[7 * BYTES];\n        fieldsData = new BytesRef(bytes);\n      } else {\n        bytes = ((BytesRef) fieldsData).bytes;\n      }\n      encodeTriangle(bytes, aY, aX, bY, bX, cY, cX);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e48f589a9604e11db23a025a27efbf3d14ab4e3b":["06fc6aedefe19d7a0b0d82dac953a4f161e16b5c"],"06fc6aedefe19d7a0b0d82dac953a4f161e16b5c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","06fc6aedefe19d7a0b0d82dac953a4f161e16b5c"],"2aeefba8262036d422d639e48c49d51316bea138":["e48f589a9604e11db23a025a27efbf3d14ab4e3b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c286b0d8c507a88b289407e2fe161effa275c6b0":["2aeefba8262036d422d639e48c49d51316bea138"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c286b0d8c507a88b289407e2fe161effa275c6b0"],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","06fc6aedefe19d7a0b0d82dac953a4f161e16b5c"]},"commit2Childs":{"e48f589a9604e11db23a025a27efbf3d14ab4e3b":["2aeefba8262036d422d639e48c49d51316bea138"],"06fc6aedefe19d7a0b0d82dac953a4f161e16b5c":["e48f589a9604e11db23a025a27efbf3d14ab4e3b","0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":[],"2aeefba8262036d422d639e48c49d51316bea138":["c286b0d8c507a88b289407e2fe161effa275c6b0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["06fc6aedefe19d7a0b0d82dac953a4f161e16b5c","0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"c286b0d8c507a88b289407e2fe161effa275c6b0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":[]},"heads":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}