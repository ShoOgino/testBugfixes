{"path":"solr/core/src/java/org/apache/solr/handler/loader/JsonLoader.SingleThreadedJsonLoader#parseDoc(int).mjava","commits":[{"id":"042e4d934397657ba04c82b46cc5665076bc5c58","date":1336511170,"type":0,"author":"Ryan McKinley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/loader/JsonLoader.SingleThreadedJsonLoader#parseDoc(int).mjava","pathOld":"/dev/null","sourceNew":"    private SolrInputDocument parseDoc(int ev) throws IOException {\n      assert ev == JSONParser.OBJECT_START;\n  \n      SolrInputDocument sdoc = new SolrInputDocument();\n      for (;;) {\n        SolrInputField sif = parseField();\n        if (sif == null) return sdoc;\n        SolrInputField prev = sdoc.put(sif.getName(), sif);\n        if (prev != null) {\n          // blech - repeated keys\n          sif.addValue(prev.getValue(), prev.getBoost());\n        }\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"12d992a6ff17cea2ad8190a850bbd64305123d06","date":1393449974,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/loader/JsonLoader.SingleThreadedJsonLoader#parseDoc(int).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/loader/JsonLoader.SingleThreadedJsonLoader#parseDoc(int).mjava","sourceNew":"    private SolrInputDocument parseDoc(int ev) throws IOException {\n      assert ev == JSONParser.OBJECT_START;\n  \n      SolrInputDocument sdoc = new SolrInputDocument();\n      for (;;) {\n        SolrInputField sif = parseField();\n        if (sif == null) return sdoc;\n        // pulling out hte pieces may seem weird, but it's because\n        // SolrInputDocument.addField will do the right thing\n        // if the doc already has another value for this field\n        // (ie: repeating fieldname keys)\n        sdoc.addField(sif.getName(), sif.getValue(), sif.getBoost());\n      }\n    }\n\n","sourceOld":"    private SolrInputDocument parseDoc(int ev) throws IOException {\n      assert ev == JSONParser.OBJECT_START;\n  \n      SolrInputDocument sdoc = new SolrInputDocument();\n      for (;;) {\n        SolrInputField sif = parseField();\n        if (sif == null) return sdoc;\n        SolrInputField prev = sdoc.put(sif.getName(), sif);\n        if (prev != null) {\n          // blech - repeated keys\n          sif.addValue(prev.getValue(), prev.getBoost());\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"13f445c5bd6f19fd57d5a3ca0a35244c96f45aa8","date":1393532551,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/loader/JsonLoader.SingleThreadedJsonLoader#parseDoc(int).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/loader/JsonLoader.SingleThreadedJsonLoader#parseDoc(int).mjava","sourceNew":"    private SolrInputDocument parseDoc(int ev) throws IOException {\n      assert ev == JSONParser.OBJECT_START;\n  \n      SolrInputDocument sdoc = new SolrInputDocument();\n      for (;;) {\n        SolrInputField sif = parseField();\n        if (sif == null) return sdoc;\n        // pulling out hte pieces may seem weird, but it's because\n        // SolrInputDocument.addField will do the right thing\n        // if the doc already has another value for this field\n        // (ie: repeating fieldname keys)\n        sdoc.addField(sif.getName(), sif.getValue(), sif.getBoost());\n      }\n    }\n\n","sourceOld":"    private SolrInputDocument parseDoc(int ev) throws IOException {\n      assert ev == JSONParser.OBJECT_START;\n  \n      SolrInputDocument sdoc = new SolrInputDocument();\n      for (;;) {\n        SolrInputField sif = parseField();\n        if (sif == null) return sdoc;\n        SolrInputField prev = sdoc.put(sif.getName(), sif);\n        if (prev != null) {\n          // blech - repeated keys\n          sif.addValue(prev.getValue(), prev.getBoost());\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d9b48c69aa59438f74f527d413b5f99c9d784175","date":1393549343,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/loader/JsonLoader.SingleThreadedJsonLoader#parseDoc(int).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/loader/JsonLoader.SingleThreadedJsonLoader#parseDoc(int).mjava","sourceNew":"    private SolrInputDocument parseDoc(int ev) throws IOException {\n      assert ev == JSONParser.OBJECT_START;\n\n      SolrInputDocument sdoc = new SolrInputDocument();\n      for (;;) {\n        ev = parser.nextEvent();\n        if (ev == JSONParser.OBJECT_END) {\n          return sdoc;\n        }\n        String fieldName = parser.getString();\n\n        if(fieldName.equals(JsonLoader.CHILD_DOC_KEY)) {\n          ev = parser.nextEvent();\n          assertEvent(ev, JSONParser.ARRAY_START);\n          while( (ev = parser.nextEvent()) != JSONParser.ARRAY_END ) {\n            assertEvent(ev, JSONParser.OBJECT_START);\n\n            sdoc.addChildDocument(parseDoc(ev));\n          }\n        } else {\n          SolrInputField sif = new SolrInputField(fieldName);\n          parseFieldValue(sif);\n          // pulling out the pieces may seem weird, but it's because\n          // SolrInputDocument.addField will do the right thing\n          // if the doc already has another value for this field\n          // (ie: repeating fieldname keys)\n          sdoc.addField(sif.getName(), sif.getValue(), sif.getBoost());\n        }\n\n      }\n    }\n\n","sourceOld":"    private SolrInputDocument parseDoc(int ev) throws IOException {\n      assert ev == JSONParser.OBJECT_START;\n  \n      SolrInputDocument sdoc = new SolrInputDocument();\n      for (;;) {\n        SolrInputField sif = parseField();\n        if (sif == null) return sdoc;\n        // pulling out hte pieces may seem weird, but it's because\n        // SolrInputDocument.addField will do the right thing\n        // if the doc already has another value for this field\n        // (ie: repeating fieldname keys)\n        sdoc.addField(sif.getName(), sif.getValue(), sif.getBoost());\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6f5f8e831e266692b649e39dad7a64f525aa6d21","date":1427506910,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/loader/JsonLoader.SingleThreadedJsonLoader#parseDoc(int).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/loader/JsonLoader.SingleThreadedJsonLoader#parseDoc(int).mjava","sourceNew":"    private SolrInputDocument parseDoc(int ev) throws IOException {\n      assert ev == JSONParser.OBJECT_START;\n\n      SolrInputDocument sdoc = new SolrInputDocument();\n      for (; ; ) {\n        ev = parser.nextEvent();\n        if (ev == JSONParser.OBJECT_END) {\n          return sdoc;\n        }\n        String fieldName = parser.getString();\n\n        if (fieldName.equals(JsonLoader.CHILD_DOC_KEY)) {\n          ev = parser.nextEvent();\n          assertEvent(ev, JSONParser.ARRAY_START);\n          while ((ev = parser.nextEvent()) != JSONParser.ARRAY_END) {\n            assertEvent(ev, JSONParser.OBJECT_START);\n\n            sdoc.addChildDocument(parseDoc(ev));\n          }\n        } else {\n          SolrInputField sif = new SolrInputField(fieldName);\n          parseFieldValue(sif);\n          // pulling out the pieces may seem weird, but it's because\n          // SolrInputDocument.addField will do the right thing\n          // if the doc already has another value for this field\n          // (ie: repeating fieldname keys)\n          sdoc.addField(sif.getName(), sif.getValue(), sif.getBoost());\n        }\n\n      }\n    }\n\n","sourceOld":"    private SolrInputDocument parseDoc(int ev) throws IOException {\n      assert ev == JSONParser.OBJECT_START;\n\n      SolrInputDocument sdoc = new SolrInputDocument();\n      for (;;) {\n        ev = parser.nextEvent();\n        if (ev == JSONParser.OBJECT_END) {\n          return sdoc;\n        }\n        String fieldName = parser.getString();\n\n        if(fieldName.equals(JsonLoader.CHILD_DOC_KEY)) {\n          ev = parser.nextEvent();\n          assertEvent(ev, JSONParser.ARRAY_START);\n          while( (ev = parser.nextEvent()) != JSONParser.ARRAY_END ) {\n            assertEvent(ev, JSONParser.OBJECT_START);\n\n            sdoc.addChildDocument(parseDoc(ev));\n          }\n        } else {\n          SolrInputField sif = new SolrInputField(fieldName);\n          parseFieldValue(sif);\n          // pulling out the pieces may seem weird, but it's because\n          // SolrInputDocument.addField will do the right thing\n          // if the doc already has another value for this field\n          // (ie: repeating fieldname keys)\n          sdoc.addField(sif.getName(), sif.getValue(), sif.getBoost());\n        }\n\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/loader/JsonLoader.SingleThreadedJsonLoader#parseDoc(int).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/loader/JsonLoader.SingleThreadedJsonLoader#parseDoc(int).mjava","sourceNew":"    private SolrInputDocument parseDoc(int ev) throws IOException {\n      assert ev == JSONParser.OBJECT_START;\n\n      SolrInputDocument sdoc = new SolrInputDocument();\n      for (; ; ) {\n        ev = parser.nextEvent();\n        if (ev == JSONParser.OBJECT_END) {\n          return sdoc;\n        }\n        String fieldName = parser.getString();\n\n        if (fieldName.equals(JsonLoader.CHILD_DOC_KEY)) {\n          ev = parser.nextEvent();\n          assertEvent(ev, JSONParser.ARRAY_START);\n          while ((ev = parser.nextEvent()) != JSONParser.ARRAY_END) {\n            assertEvent(ev, JSONParser.OBJECT_START);\n\n            sdoc.addChildDocument(parseDoc(ev));\n          }\n        } else {\n          SolrInputField sif = new SolrInputField(fieldName);\n          parseFieldValue(sif);\n          // pulling out the pieces may seem weird, but it's because\n          // SolrInputDocument.addField will do the right thing\n          // if the doc already has another value for this field\n          // (ie: repeating fieldname keys)\n          sdoc.addField(sif.getName(), sif.getValue(), sif.getBoost());\n        }\n\n      }\n    }\n\n","sourceOld":"    private SolrInputDocument parseDoc(int ev) throws IOException {\n      assert ev == JSONParser.OBJECT_START;\n\n      SolrInputDocument sdoc = new SolrInputDocument();\n      for (;;) {\n        ev = parser.nextEvent();\n        if (ev == JSONParser.OBJECT_END) {\n          return sdoc;\n        }\n        String fieldName = parser.getString();\n\n        if(fieldName.equals(JsonLoader.CHILD_DOC_KEY)) {\n          ev = parser.nextEvent();\n          assertEvent(ev, JSONParser.ARRAY_START);\n          while( (ev = parser.nextEvent()) != JSONParser.ARRAY_END ) {\n            assertEvent(ev, JSONParser.OBJECT_START);\n\n            sdoc.addChildDocument(parseDoc(ev));\n          }\n        } else {\n          SolrInputField sif = new SolrInputField(fieldName);\n          parseFieldValue(sif);\n          // pulling out the pieces may seem weird, but it's because\n          // SolrInputDocument.addField will do the right thing\n          // if the doc already has another value for this field\n          // (ie: repeating fieldname keys)\n          sdoc.addField(sif.getName(), sif.getValue(), sif.getBoost());\n        }\n\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"acd9883560fd89e6448b2b447302fe543040cd4f","date":1488478696,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/loader/JsonLoader.SingleThreadedJsonLoader#parseDoc(int).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/loader/JsonLoader.SingleThreadedJsonLoader#parseDoc(int).mjava","sourceNew":"    private SolrInputDocument parseDoc(int ev) throws IOException {\n      assert ev == JSONParser.OBJECT_START;\n\n      SolrInputDocument sdoc = new SolrInputDocument();\n      for (; ; ) {\n        ev = parser.nextEvent();\n        if (ev == JSONParser.OBJECT_END) {\n          return sdoc;\n        }\n        String fieldName = parser.getString();\n\n        if (fieldName.equals(JsonLoader.CHILD_DOC_KEY)) {\n          ev = parser.nextEvent();\n          assertEvent(ev, JSONParser.ARRAY_START);\n          while ((ev = parser.nextEvent()) != JSONParser.ARRAY_END) {\n            assertEvent(ev, JSONParser.OBJECT_START);\n\n            sdoc.addChildDocument(parseDoc(ev));\n          }\n        } else {\n          SolrInputField sif = new SolrInputField(fieldName);\n          parseFieldValue(sif);\n          // pulling out the pieces may seem weird, but it's because\n          // SolrInputDocument.addField will do the right thing\n          // if the doc already has another value for this field\n          // (ie: repeating fieldname keys)\n          sdoc.addField(sif.getName(), sif.getValue());\n        }\n\n      }\n    }\n\n","sourceOld":"    private SolrInputDocument parseDoc(int ev) throws IOException {\n      assert ev == JSONParser.OBJECT_START;\n\n      SolrInputDocument sdoc = new SolrInputDocument();\n      for (; ; ) {\n        ev = parser.nextEvent();\n        if (ev == JSONParser.OBJECT_END) {\n          return sdoc;\n        }\n        String fieldName = parser.getString();\n\n        if (fieldName.equals(JsonLoader.CHILD_DOC_KEY)) {\n          ev = parser.nextEvent();\n          assertEvent(ev, JSONParser.ARRAY_START);\n          while ((ev = parser.nextEvent()) != JSONParser.ARRAY_END) {\n            assertEvent(ev, JSONParser.OBJECT_START);\n\n            sdoc.addChildDocument(parseDoc(ev));\n          }\n        } else {\n          SolrInputField sif = new SolrInputField(fieldName);\n          parseFieldValue(sif);\n          // pulling out the pieces may seem weird, but it's because\n          // SolrInputDocument.addField will do the right thing\n          // if the doc already has another value for this field\n          // (ie: repeating fieldname keys)\n          sdoc.addField(sif.getName(), sif.getValue(), sif.getBoost());\n        }\n\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9440b5b1eec7788a0edd10385e4d7a614d1024d7","date":1528992889,"type":3,"author":"user","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/loader/JsonLoader.SingleThreadedJsonLoader#parseDoc(int).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/loader/JsonLoader.SingleThreadedJsonLoader#parseDoc(int).mjava","sourceNew":"    private SolrInputDocument parseDoc(int ev) throws IOException {\n      assert ev == JSONParser.OBJECT_START;\n\n      SolrInputDocument sdoc = new SolrInputDocument();\n      for (; ; ) {\n        ev = parser.nextEvent();\n        if (ev == JSONParser.OBJECT_END) {\n          return sdoc;\n        }\n        String fieldName = parser.getString();\n\n        if (anonChildDoc && fieldName.equals(JsonLoader.CHILD_DOC_KEY)) {\n          ev = parser.nextEvent();\n          assertEvent(ev, JSONParser.ARRAY_START);\n          while ((ev = parser.nextEvent()) != JSONParser.ARRAY_END) {\n            assertEvent(ev, JSONParser.OBJECT_START);\n\n            sdoc.addChildDocument(parseDoc(ev));\n          }\n        } else {\n          SolrInputField sif = new SolrInputField(fieldName);\n          parseFieldValue(sif);\n          // pulling out the pieces may seem weird, but it's because\n          // SolrInputDocument.addField will do the right thing\n          // if the doc already has another value for this field\n          // (ie: repeating fieldname keys)\n          sdoc.addField(sif.getName(), sif.getValue());\n        }\n\n      }\n    }\n\n","sourceOld":"    private SolrInputDocument parseDoc(int ev) throws IOException {\n      assert ev == JSONParser.OBJECT_START;\n\n      SolrInputDocument sdoc = new SolrInputDocument();\n      for (; ; ) {\n        ev = parser.nextEvent();\n        if (ev == JSONParser.OBJECT_END) {\n          return sdoc;\n        }\n        String fieldName = parser.getString();\n\n        if (fieldName.equals(JsonLoader.CHILD_DOC_KEY)) {\n          ev = parser.nextEvent();\n          assertEvent(ev, JSONParser.ARRAY_START);\n          while ((ev = parser.nextEvent()) != JSONParser.ARRAY_END) {\n            assertEvent(ev, JSONParser.OBJECT_START);\n\n            sdoc.addChildDocument(parseDoc(ev));\n          }\n        } else {\n          SolrInputField sif = new SolrInputField(fieldName);\n          parseFieldValue(sif);\n          // pulling out the pieces may seem weird, but it's because\n          // SolrInputDocument.addField will do the right thing\n          // if the doc already has another value for this field\n          // (ie: repeating fieldname keys)\n          sdoc.addField(sif.getName(), sif.getValue());\n        }\n\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26","date":1531589977,"type":3,"author":"Michael Braun","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/loader/JsonLoader.SingleThreadedJsonLoader#parseDoc(int).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/loader/JsonLoader.SingleThreadedJsonLoader#parseDoc(int).mjava","sourceNew":"    private SolrInputDocument parseDoc(int ev) throws IOException {\n      assert ev == JSONParser.OBJECT_START;\n\n      SolrInputDocument sdoc = new SolrInputDocument();\n      for (; ; ) {\n        ev = parser.nextEvent();\n        if (ev == JSONParser.OBJECT_END) {\n          return sdoc;\n        }\n        String fieldName = parser.getString();\n\n        if (anonChildDoc && fieldName.equals(JsonLoader.CHILD_DOC_KEY)) {\n          ev = parser.nextEvent();\n          assertEvent(ev, JSONParser.ARRAY_START);\n          while ((ev = parser.nextEvent()) != JSONParser.ARRAY_END) {\n            assertEvent(ev, JSONParser.OBJECT_START);\n\n            sdoc.addChildDocument(parseDoc(ev));\n          }\n        } else {\n          SolrInputField sif = new SolrInputField(fieldName);\n          parseFieldValue(sif);\n          // pulling out the pieces may seem weird, but it's because\n          // SolrInputDocument.addField will do the right thing\n          // if the doc already has another value for this field\n          // (ie: repeating fieldname keys)\n          sdoc.addField(sif.getName(), sif.getValue());\n        }\n\n      }\n    }\n\n","sourceOld":"    private SolrInputDocument parseDoc(int ev) throws IOException {\n      assert ev == JSONParser.OBJECT_START;\n\n      SolrInputDocument sdoc = new SolrInputDocument();\n      for (; ; ) {\n        ev = parser.nextEvent();\n        if (ev == JSONParser.OBJECT_END) {\n          return sdoc;\n        }\n        String fieldName = parser.getString();\n\n        if (fieldName.equals(JsonLoader.CHILD_DOC_KEY)) {\n          ev = parser.nextEvent();\n          assertEvent(ev, JSONParser.ARRAY_START);\n          while ((ev = parser.nextEvent()) != JSONParser.ARRAY_END) {\n            assertEvent(ev, JSONParser.OBJECT_START);\n\n            sdoc.addChildDocument(parseDoc(ev));\n          }\n        } else {\n          SolrInputField sif = new SolrInputField(fieldName);\n          parseFieldValue(sif);\n          // pulling out the pieces may seem weird, but it's because\n          // SolrInputDocument.addField will do the right thing\n          // if the doc already has another value for this field\n          // (ie: repeating fieldname keys)\n          sdoc.addField(sif.getName(), sif.getValue());\n        }\n\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","date":1531905561,"type":3,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/loader/JsonLoader.SingleThreadedJsonLoader#parseDoc(int).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/loader/JsonLoader.SingleThreadedJsonLoader#parseDoc(int).mjava","sourceNew":"    private SolrInputDocument parseDoc(int ev) throws IOException {\n      assert ev == JSONParser.OBJECT_START;\n\n      SolrInputDocument sdoc = new SolrInputDocument();\n      for (; ; ) {\n        ev = parser.nextEvent();\n        if (ev == JSONParser.OBJECT_END) {\n          return sdoc;\n        }\n        String fieldName = parser.getString();\n\n        if (anonChildDoc && fieldName.equals(JsonLoader.CHILD_DOC_KEY)) {\n          ev = parser.nextEvent();\n          assertEvent(ev, JSONParser.ARRAY_START);\n          while ((ev = parser.nextEvent()) != JSONParser.ARRAY_END) {\n            assertEvent(ev, JSONParser.OBJECT_START);\n\n            sdoc.addChildDocument(parseDoc(ev));\n          }\n        } else {\n          SolrInputField sif = new SolrInputField(fieldName);\n          parseFieldValue(sif);\n          // pulling out the pieces may seem weird, but it's because\n          // SolrInputDocument.addField will do the right thing\n          // if the doc already has another value for this field\n          // (ie: repeating fieldname keys)\n          sdoc.addField(sif.getName(), sif.getValue());\n        }\n\n      }\n    }\n\n","sourceOld":"    private SolrInputDocument parseDoc(int ev) throws IOException {\n      assert ev == JSONParser.OBJECT_START;\n\n      SolrInputDocument sdoc = new SolrInputDocument();\n      for (; ; ) {\n        ev = parser.nextEvent();\n        if (ev == JSONParser.OBJECT_END) {\n          return sdoc;\n        }\n        String fieldName = parser.getString();\n\n        if (fieldName.equals(JsonLoader.CHILD_DOC_KEY)) {\n          ev = parser.nextEvent();\n          assertEvent(ev, JSONParser.ARRAY_START);\n          while ((ev = parser.nextEvent()) != JSONParser.ARRAY_END) {\n            assertEvent(ev, JSONParser.OBJECT_START);\n\n            sdoc.addChildDocument(parseDoc(ev));\n          }\n        } else {\n          SolrInputField sif = new SolrInputField(fieldName);\n          parseFieldValue(sif);\n          // pulling out the pieces may seem weird, but it's because\n          // SolrInputDocument.addField will do the right thing\n          // if the doc already has another value for this field\n          // (ie: repeating fieldname keys)\n          sdoc.addField(sif.getName(), sif.getValue());\n        }\n\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"204f8269a4f7b5b254cc893f7ae9be8405854fcb","date":1545835182,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/loader/JsonLoader.SingleThreadedJsonLoader#parseDoc(int).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/loader/JsonLoader.SingleThreadedJsonLoader#parseDoc(int).mjava","sourceNew":"    private SolrInputDocument parseDoc(int ev) throws IOException {\n      assert ev == JSONParser.OBJECT_START;\n\n      SolrInputDocument sdoc = new SolrInputDocument();\n      for (; ; ) {\n        ev = parser.nextEvent();\n        if (ev == JSONParser.OBJECT_END) {\n          return sdoc;\n        }\n        String fieldName = parser.getString();\n\n        if (anonChildDoc && fieldName.equals(JsonLoader.CHILD_DOC_KEY)) {\n          ev = parser.nextEvent();\n          assertEvent(ev, JSONParser.ARRAY_START);\n          while ((ev = parser.nextEvent()) != JSONParser.ARRAY_END) {\n            assertEvent(ev, JSONParser.OBJECT_START);\n\n            sdoc.addChildDocument(parseDoc(ev));\n          }\n        } else {\n          ev = parser.nextEvent();\n          Object val = parseFieldValue(ev, fieldName);\n          // SolrInputDocument.addField will do the right thing\n          // if the doc already has another value for this field\n          // (ie: repeating fieldname keys)\n          sdoc.addField(fieldName, val);\n        }\n\n      }\n    }\n\n","sourceOld":"    private SolrInputDocument parseDoc(int ev) throws IOException {\n      assert ev == JSONParser.OBJECT_START;\n\n      SolrInputDocument sdoc = new SolrInputDocument();\n      for (; ; ) {\n        ev = parser.nextEvent();\n        if (ev == JSONParser.OBJECT_END) {\n          return sdoc;\n        }\n        String fieldName = parser.getString();\n\n        if (anonChildDoc && fieldName.equals(JsonLoader.CHILD_DOC_KEY)) {\n          ev = parser.nextEvent();\n          assertEvent(ev, JSONParser.ARRAY_START);\n          while ((ev = parser.nextEvent()) != JSONParser.ARRAY_END) {\n            assertEvent(ev, JSONParser.OBJECT_START);\n\n            sdoc.addChildDocument(parseDoc(ev));\n          }\n        } else {\n          SolrInputField sif = new SolrInputField(fieldName);\n          parseFieldValue(sif);\n          // pulling out the pieces may seem weird, but it's because\n          // SolrInputDocument.addField will do the right thing\n          // if the doc already has another value for this field\n          // (ie: repeating fieldname keys)\n          sdoc.addField(sif.getName(), sif.getValue());\n        }\n\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"263caed1e020aa6ed422c9243c9b1759ab27e703","date":1546531139,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/loader/JsonLoader.SingleThreadedJsonLoader#parseDoc(int).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/loader/JsonLoader.SingleThreadedJsonLoader#parseDoc(int).mjava","sourceNew":"    private SolrInputDocument parseDoc(int ev) throws IOException {\n      assert ev == JSONParser.OBJECT_START;\n\n      SolrInputDocument sdoc = new SolrInputDocument();\n      for (; ; ) {\n        ev = parser.nextEvent();\n        if (ev == JSONParser.OBJECT_END) {\n          return sdoc;\n        }\n        String fieldName = parser.getString();\n\n        if (fieldName.equals(JsonLoader.CHILD_DOC_KEY)) { // somewhat legacy\n          ev = parser.nextEvent();\n          assertEvent(ev, JSONParser.ARRAY_START);\n          while ((ev = parser.nextEvent()) != JSONParser.ARRAY_END) {\n            assertEvent(ev, JSONParser.OBJECT_START);\n\n            sdoc.addChildDocument(parseDoc(ev));\n          }\n        } else {\n          ev = parser.nextEvent();\n          Object val = parseFieldValue(ev, fieldName);\n          // SolrInputDocument.addField will do the right thing\n          // if the doc already has another value for this field\n          // (ie: repeating fieldname keys)\n          sdoc.addField(fieldName, val);\n        }\n\n      }\n    }\n\n","sourceOld":"    private SolrInputDocument parseDoc(int ev) throws IOException {\n      assert ev == JSONParser.OBJECT_START;\n\n      SolrInputDocument sdoc = new SolrInputDocument();\n      for (; ; ) {\n        ev = parser.nextEvent();\n        if (ev == JSONParser.OBJECT_END) {\n          return sdoc;\n        }\n        String fieldName = parser.getString();\n\n        if (anonChildDoc && fieldName.equals(JsonLoader.CHILD_DOC_KEY)) {\n          ev = parser.nextEvent();\n          assertEvent(ev, JSONParser.ARRAY_START);\n          while ((ev = parser.nextEvent()) != JSONParser.ARRAY_END) {\n            assertEvent(ev, JSONParser.OBJECT_START);\n\n            sdoc.addChildDocument(parseDoc(ev));\n          }\n        } else {\n          ev = parser.nextEvent();\n          Object val = parseFieldValue(ev, fieldName);\n          // SolrInputDocument.addField will do the right thing\n          // if the doc already has another value for this field\n          // (ie: repeating fieldname keys)\n          sdoc.addField(fieldName, val);\n        }\n\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"204f8269a4f7b5b254cc893f7ae9be8405854fcb":["9440b5b1eec7788a0edd10385e4d7a614d1024d7"],"9440b5b1eec7788a0edd10385e4d7a614d1024d7":["acd9883560fd89e6448b2b447302fe543040cd4f"],"d9b48c69aa59438f74f527d413b5f99c9d784175":["12d992a6ff17cea2ad8190a850bbd64305123d06"],"13f445c5bd6f19fd57d5a3ca0a35244c96f45aa8":["042e4d934397657ba04c82b46cc5665076bc5c58","12d992a6ff17cea2ad8190a850bbd64305123d06"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["d9b48c69aa59438f74f527d413b5f99c9d784175","6f5f8e831e266692b649e39dad7a64f525aa6d21"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":["acd9883560fd89e6448b2b447302fe543040cd4f","9440b5b1eec7788a0edd10385e4d7a614d1024d7"],"6f5f8e831e266692b649e39dad7a64f525aa6d21":["d9b48c69aa59438f74f527d413b5f99c9d784175"],"12d992a6ff17cea2ad8190a850bbd64305123d06":["042e4d934397657ba04c82b46cc5665076bc5c58"],"042e4d934397657ba04c82b46cc5665076bc5c58":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"263caed1e020aa6ed422c9243c9b1759ab27e703":["204f8269a4f7b5b254cc893f7ae9be8405854fcb"],"acd9883560fd89e6448b2b447302fe543040cd4f":["6f5f8e831e266692b649e39dad7a64f525aa6d21"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["263caed1e020aa6ed422c9243c9b1759ab27e703"],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":["acd9883560fd89e6448b2b447302fe543040cd4f","9440b5b1eec7788a0edd10385e4d7a614d1024d7"]},"commit2Childs":{"204f8269a4f7b5b254cc893f7ae9be8405854fcb":["263caed1e020aa6ed422c9243c9b1759ab27e703"],"9440b5b1eec7788a0edd10385e4d7a614d1024d7":["204f8269a4f7b5b254cc893f7ae9be8405854fcb","0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"d9b48c69aa59438f74f527d413b5f99c9d784175":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","6f5f8e831e266692b649e39dad7a64f525aa6d21"],"13f445c5bd6f19fd57d5a3ca0a35244c96f45aa8":[],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":[],"12d992a6ff17cea2ad8190a850bbd64305123d06":["d9b48c69aa59438f74f527d413b5f99c9d784175","13f445c5bd6f19fd57d5a3ca0a35244c96f45aa8"],"6f5f8e831e266692b649e39dad7a64f525aa6d21":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","acd9883560fd89e6448b2b447302fe543040cd4f"],"042e4d934397657ba04c82b46cc5665076bc5c58":["13f445c5bd6f19fd57d5a3ca0a35244c96f45aa8","12d992a6ff17cea2ad8190a850bbd64305123d06"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["042e4d934397657ba04c82b46cc5665076bc5c58"],"263caed1e020aa6ed422c9243c9b1759ab27e703":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"acd9883560fd89e6448b2b447302fe543040cd4f":["9440b5b1eec7788a0edd10385e4d7a614d1024d7","0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":[]},"heads":["13f445c5bd6f19fd57d5a3ca0a35244c96f45aa8","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}