{"path":"lucene/sandbox/src/java/org/apache/lucene/search/intervals/ExtendedIntervalsSource#matches(String,LeafReaderContext,int).mjava","commits":[{"id":"f272fe1542bca669076ff8ed44b298b316ab4aa5","date":1546365319,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/search/intervals/ExtendedIntervalsSource#matches(String,LeafReaderContext,int).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public MatchesIterator matches(String field, LeafReaderContext ctx, int doc) throws IOException {\n    MatchesIterator in = source.matches(field, ctx, doc);\n    if (in == null) {\n      return null;\n    }\n    IntervalIterator wrapped = new ExtendedIntervalIterator(IntervalMatches.wrapMatches(in, doc), before, after);\n    return IntervalMatches.asMatches(wrapped, in, doc);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"97ee2282ff806e9bc9d705f389cf40451ab81c3e","date":1561721333,"type":5,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/intervals/ExtendedIntervalsSource#matches(String,LeafReaderContext,int).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/search/intervals/ExtendedIntervalsSource#matches(String,LeafReaderContext,int).mjava","sourceNew":"  @Override\n  public MatchesIterator matches(String field, LeafReaderContext ctx, int doc) throws IOException {\n    MatchesIterator in = source.matches(field, ctx, doc);\n    if (in == null) {\n      return null;\n    }\n    IntervalIterator wrapped = new ExtendedIntervalIterator(IntervalMatches.wrapMatches(in, doc), before, after);\n    return IntervalMatches.asMatches(wrapped, in, doc);\n  }\n\n","sourceOld":"  @Override\n  public MatchesIterator matches(String field, LeafReaderContext ctx, int doc) throws IOException {\n    MatchesIterator in = source.matches(field, ctx, doc);\n    if (in == null) {\n      return null;\n    }\n    IntervalIterator wrapped = new ExtendedIntervalIterator(IntervalMatches.wrapMatches(in, doc), before, after);\n    return IntervalMatches.asMatches(wrapped, in, doc);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"97ee2282ff806e9bc9d705f389cf40451ab81c3e":["f272fe1542bca669076ff8ed44b298b316ab4aa5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f272fe1542bca669076ff8ed44b298b316ab4aa5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["97ee2282ff806e9bc9d705f389cf40451ab81c3e"]},"commit2Childs":{"97ee2282ff806e9bc9d705f389cf40451ab81c3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f272fe1542bca669076ff8ed44b298b316ab4aa5"],"f272fe1542bca669076ff8ed44b298b316ab4aa5":["97ee2282ff806e9bc9d705f389cf40451ab81c3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}