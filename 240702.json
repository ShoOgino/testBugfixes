{"path":"lucene/queries/src/test/org/apache/lucene/queries/function/TestFunctionScoreQuery#testSimpleSourceScore().mjava","commits":[{"id":"c5bceed3ccfd33baff7dde1a56def37b6ccd66f6","date":1484565333,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/queries/src/test/org/apache/lucene/queries/function/TestFunctionScoreQuery#testSimpleSourceScore().mjava","pathOld":"/dev/null","sourceNew":"  // FunctionQuery equivalent\n  public void testSimpleSourceScore() throws Exception {\n\n    FunctionScoreQuery q = new FunctionScoreQuery(new TermQuery(new Term(TEXT_FIELD, \"first\")),\n        DoubleValuesSource.fromIntField(INT_FIELD));\n\n    QueryUtils.check(random(), q, searcher, rarely());\n\n    int expectedDocs[] = new int[]{ 4, 7, 9 };\n    TopDocs docs = searcher.search(q, 4);\n    assertEquals(expectedDocs.length, docs.totalHits);\n    for (int i = 0; i < expectedDocs.length; i++) {\n      assertEquals(docs.scoreDocs[i].doc, expectedDocs[i]);\n    }\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"507e7decdf00981d09a74632ea30299a4ce6ba72","date":1484600874,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/queries/src/test/org/apache/lucene/queries/function/TestFunctionScoreQuery#testSimpleSourceScore().mjava","pathOld":"/dev/null","sourceNew":"  // FunctionQuery equivalent\n  public void testSimpleSourceScore() throws Exception {\n\n    FunctionScoreQuery q = new FunctionScoreQuery(new TermQuery(new Term(TEXT_FIELD, \"first\")),\n        DoubleValuesSource.fromIntField(INT_FIELD));\n\n    QueryUtils.check(random(), q, searcher, rarely());\n\n    int expectedDocs[] = new int[]{ 4, 7, 9 };\n    TopDocs docs = searcher.search(q, 4);\n    assertEquals(expectedDocs.length, docs.totalHits);\n    for (int i = 0; i < expectedDocs.length; i++) {\n      assertEquals(docs.scoreDocs[i].doc, expectedDocs[i]);\n    }\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"83788ad129a5154d5c6562c4e8ce3db48793aada","date":1532961485,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/queries/src/test/org/apache/lucene/queries/function/TestFunctionScoreQuery#testSimpleSourceScore().mjava","pathOld":"lucene/queries/src/test/org/apache/lucene/queries/function/TestFunctionScoreQuery#testSimpleSourceScore().mjava","sourceNew":"  // FunctionQuery equivalent\n  public void testSimpleSourceScore() throws Exception {\n\n    FunctionScoreQuery q = new FunctionScoreQuery(new TermQuery(new Term(TEXT_FIELD, \"first\")),\n        DoubleValuesSource.fromIntField(INT_FIELD));\n\n    QueryUtils.check(random(), q, searcher, rarely());\n\n    int expectedDocs[] = new int[]{ 4, 7, 9 };\n    TopDocs docs = searcher.search(q, 4);\n    assertEquals(expectedDocs.length, docs.totalHits.value);\n    for (int i = 0; i < expectedDocs.length; i++) {\n      assertEquals(docs.scoreDocs[i].doc, expectedDocs[i]);\n    }\n\n  }\n\n","sourceOld":"  // FunctionQuery equivalent\n  public void testSimpleSourceScore() throws Exception {\n\n    FunctionScoreQuery q = new FunctionScoreQuery(new TermQuery(new Term(TEXT_FIELD, \"first\")),\n        DoubleValuesSource.fromIntField(INT_FIELD));\n\n    QueryUtils.check(random(), q, searcher, rarely());\n\n    int expectedDocs[] = new int[]{ 4, 7, 9 };\n    TopDocs docs = searcher.search(q, 4);\n    assertEquals(expectedDocs.length, docs.totalHits);\n    for (int i = 0; i < expectedDocs.length; i++) {\n      assertEquals(docs.scoreDocs[i].doc, expectedDocs[i]);\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"83788ad129a5154d5c6562c4e8ce3db48793aada":["c5bceed3ccfd33baff7dde1a56def37b6ccd66f6"],"507e7decdf00981d09a74632ea30299a4ce6ba72":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c5bceed3ccfd33baff7dde1a56def37b6ccd66f6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["83788ad129a5154d5c6562c4e8ce3db48793aada"],"c5bceed3ccfd33baff7dde1a56def37b6ccd66f6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["507e7decdf00981d09a74632ea30299a4ce6ba72","c5bceed3ccfd33baff7dde1a56def37b6ccd66f6"],"83788ad129a5154d5c6562c4e8ce3db48793aada":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"507e7decdf00981d09a74632ea30299a4ce6ba72":[],"c5bceed3ccfd33baff7dde1a56def37b6ccd66f6":["83788ad129a5154d5c6562c4e8ce3db48793aada","507e7decdf00981d09a74632ea30299a4ce6ba72"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["507e7decdf00981d09a74632ea30299a4ce6ba72","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}