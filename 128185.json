{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Suggester#getValidReplicas(boolean,boolean,int).mjava","commits":[{"id":"eaca6a0674512222004d9a2b0ca95d86bda20f1c","date":1508160449,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Suggester#getValidReplicas(boolean,boolean,int).mjava","pathOld":"/dev/null","sourceNew":"  List<Pair<ReplicaInfo, Row>> getValidReplicas(boolean sortDesc, boolean isSource, int until) {\n    List<Pair<ReplicaInfo, Row>> allPossibleReplicas = new ArrayList<>();\n\n    if (sortDesc) {\n      if (until == -1) until = getMatrix().size();\n      for (int i = 0; i < until; i++) addReplicaToList(getMatrix().get(i), isSource, allPossibleReplicas);\n    } else {\n      if (until == -1) until = 0;\n      for (int i = getMatrix().size() - 1; i >= until; i--)\n        addReplicaToList(getMatrix().get(i), isSource, allPossibleReplicas);\n    }\n    return allPossibleReplicas;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7e8ce2f9d2ddfcf5cfa7e73b8b2af287a2a276fd","date":1594731683,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Suggester#getValidReplicas(boolean,boolean,int).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Suggester#getValidReplicas(boolean,boolean,int).mjava","sourceNew":"  List<Pair<Replica, Row>> getValidReplicas(boolean sortDesc, boolean isSource, int until) {\n    List<Pair<Replica, Row>> allPossibleReplicas = new ArrayList<>();\n\n    if (sortDesc) {\n      if (until == -1) until = getMatrix().size();\n      for (int i = 0; i < until; i++) addReplicaToList(getMatrix().get(i), isSource, allPossibleReplicas);\n    } else {\n      if (until == -1) until = 0;\n      for (int i = getMatrix().size() - 1; i >= until; i--)\n        addReplicaToList(getMatrix().get(i), isSource, allPossibleReplicas);\n    }\n    return allPossibleReplicas;\n  }\n\n","sourceOld":"  List<Pair<ReplicaInfo, Row>> getValidReplicas(boolean sortDesc, boolean isSource, int until) {\n    List<Pair<ReplicaInfo, Row>> allPossibleReplicas = new ArrayList<>();\n\n    if (sortDesc) {\n      if (until == -1) until = getMatrix().size();\n      for (int i = 0; i < until; i++) addReplicaToList(getMatrix().get(i), isSource, allPossibleReplicas);\n    } else {\n      if (until == -1) until = 0;\n      for (int i = getMatrix().size() - 1; i >= until; i--)\n        addReplicaToList(getMatrix().get(i), isSource, allPossibleReplicas);\n    }\n    return allPossibleReplicas;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f504512a03d978990cbff30db0522b354e846db","date":1595247421,"type":4,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/Suggester#getValidReplicas(boolean,boolean,int).mjava","sourceNew":null,"sourceOld":"  List<Pair<Replica, Row>> getValidReplicas(boolean sortDesc, boolean isSource, int until) {\n    List<Pair<Replica, Row>> allPossibleReplicas = new ArrayList<>();\n\n    if (sortDesc) {\n      if (until == -1) until = getMatrix().size();\n      for (int i = 0; i < until; i++) addReplicaToList(getMatrix().get(i), isSource, allPossibleReplicas);\n    } else {\n      if (until == -1) until = 0;\n      for (int i = getMatrix().size() - 1; i >= until; i--)\n        addReplicaToList(getMatrix().get(i), isSource, allPossibleReplicas);\n    }\n    return allPossibleReplicas;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7e8ce2f9d2ddfcf5cfa7e73b8b2af287a2a276fd":["eaca6a0674512222004d9a2b0ca95d86bda20f1c"],"3f504512a03d978990cbff30db0522b354e846db":["7e8ce2f9d2ddfcf5cfa7e73b8b2af287a2a276fd"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"eaca6a0674512222004d9a2b0ca95d86bda20f1c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3f504512a03d978990cbff30db0522b354e846db"]},"commit2Childs":{"7e8ce2f9d2ddfcf5cfa7e73b8b2af287a2a276fd":["3f504512a03d978990cbff30db0522b354e846db"],"3f504512a03d978990cbff30db0522b354e846db":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["eaca6a0674512222004d9a2b0ca95d86bda20f1c"],"eaca6a0674512222004d9a2b0ca95d86bda20f1c":["7e8ce2f9d2ddfcf5cfa7e73b8b2af287a2a276fd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}