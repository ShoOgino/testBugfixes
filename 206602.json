{"path":"solr/core/src/test/org/apache/solr/update/AddBlockUpdateTest#testJavaBinCodecNestedRelation().mjava","commits":[{"id":"c5ce7c704ca874aa623a99f2669737b52ec71cfc","date":1528728510,"type":0,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/update/AddBlockUpdateTest#testJavaBinCodecNestedRelation().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testJavaBinCodecNestedRelation() throws IOException {\n    SolrInputDocument topDocument = new SolrInputDocument();\n    topDocument.addField(\"parent_f1\", \"v1\");\n    topDocument.addField(\"parent_f2\", \"v2\");\n\n    int childsNum = atLeast(10);\n    Map<String, SolrInputDocument> children = new HashMap<>(childsNum);\n    for(int i = 0; i < childsNum; ++i) {\n      SolrInputDocument child = new SolrInputDocument();\n      child.addField(\"key\", (i + 5) * atLeast(4));\n      String childKey = String.format(Locale.ROOT, \"child%d\", i);\n      topDocument.addField(childKey, child);\n      children.put(childKey, child);\n    }\n\n    ByteArrayOutputStream os = new ByteArrayOutputStream();\n    try (JavaBinCodec jbc = new JavaBinCodec()) {\n      jbc.marshal(topDocument, os);\n    }\n    byte[] buffer = os.toByteArray();\n    //now read the Object back\n    SolrInputDocument result;\n    try (JavaBinCodec jbc = new JavaBinCodec(); InputStream is = new ByteArrayInputStream(buffer)) {\n      result = (SolrInputDocument) jbc.unmarshal(is);\n    }\n\n    assertTrue(compareSolrInputDocument(topDocument, result));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26","date":1531589977,"type":0,"author":"Michael Braun","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/update/AddBlockUpdateTest#testJavaBinCodecNestedRelation().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testJavaBinCodecNestedRelation() throws IOException {\n    SolrInputDocument topDocument = new SolrInputDocument();\n    topDocument.addField(\"parent_f1\", \"v1\");\n    topDocument.addField(\"parent_f2\", \"v2\");\n\n    int childsNum = atLeast(10);\n    Map<String, SolrInputDocument> children = new HashMap<>(childsNum);\n    for(int i = 0; i < childsNum; ++i) {\n      SolrInputDocument child = new SolrInputDocument();\n      child.addField(\"key\", (i + 5) * atLeast(4));\n      String childKey = String.format(Locale.ROOT, \"child%d\", i);\n      topDocument.addField(childKey, child);\n      children.put(childKey, child);\n    }\n\n    ByteArrayOutputStream os = new ByteArrayOutputStream();\n    try (JavaBinCodec jbc = new JavaBinCodec()) {\n      jbc.marshal(topDocument, os);\n    }\n    byte[] buffer = os.toByteArray();\n    //now read the Object back\n    SolrInputDocument result;\n    try (JavaBinCodec jbc = new JavaBinCodec(); InputStream is = new ByteArrayInputStream(buffer)) {\n      result = (SolrInputDocument) jbc.unmarshal(is);\n    }\n\n    assertTrue(compareSolrInputDocument(topDocument, result));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","date":1531905561,"type":0,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/update/AddBlockUpdateTest#testJavaBinCodecNestedRelation().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testJavaBinCodecNestedRelation() throws IOException {\n    SolrInputDocument topDocument = new SolrInputDocument();\n    topDocument.addField(\"parent_f1\", \"v1\");\n    topDocument.addField(\"parent_f2\", \"v2\");\n\n    int childsNum = atLeast(10);\n    Map<String, SolrInputDocument> children = new HashMap<>(childsNum);\n    for(int i = 0; i < childsNum; ++i) {\n      SolrInputDocument child = new SolrInputDocument();\n      child.addField(\"key\", (i + 5) * atLeast(4));\n      String childKey = String.format(Locale.ROOT, \"child%d\", i);\n      topDocument.addField(childKey, child);\n      children.put(childKey, child);\n    }\n\n    ByteArrayOutputStream os = new ByteArrayOutputStream();\n    try (JavaBinCodec jbc = new JavaBinCodec()) {\n      jbc.marshal(topDocument, os);\n    }\n    byte[] buffer = os.toByteArray();\n    //now read the Object back\n    SolrInputDocument result;\n    try (JavaBinCodec jbc = new JavaBinCodec(); InputStream is = new ByteArrayInputStream(buffer)) {\n      result = (SolrInputDocument) jbc.unmarshal(is);\n    }\n\n    assertTrue(compareSolrInputDocument(topDocument, result));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c5ce7c704ca874aa623a99f2669737b52ec71cfc"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c5ce7c704ca874aa623a99f2669737b52ec71cfc":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c5ce7c704ca874aa623a99f2669737b52ec71cfc"],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c5ce7c704ca874aa623a99f2669737b52ec71cfc"]},"commit2Childs":{"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","c5ce7c704ca874aa623a99f2669737b52ec71cfc","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"c5ce7c704ca874aa623a99f2669737b52ec71cfc":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":[]},"heads":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}