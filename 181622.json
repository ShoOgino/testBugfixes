{"path":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/FileListEntityProcessor#getFolderFiles(File,List[Map[String,Object]]).mjava","commits":[{"id":"4d4f1b2c5601680b01c4bb95a43fe6fb73f03103","date":1217446558,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/FileListEntityProcessor#getFolderFiles(File,List[Map[String,Object]]).mjava","pathOld":"/dev/null","sourceNew":"  private void getFolderFiles(File dir,\n                              final List<Map<String, Object>> fileDetails) {\n    dir.list(new FilenameFilter() {\n      public boolean accept(File dir, String name) {\n        if (fileNamePattern == null) {\n          addDetails(fileDetails, dir, name);\n          return false;\n        }\n        if (fileNamePattern.matcher(name).find()) {\n          if (excludesPattern != null && excludesPattern.matcher(name).find())\n            return false;\n          addDetails(fileDetails, dir, name);\n        }\n\n        return false;\n      }\n    });\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d241a0d7846c11e0602e9ade2311edaa6e833c9a","date":1233693200,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/FileListEntityProcessor#getFolderFiles(File,List[Map[String,Object]]).mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/FileListEntityProcessor#getFolderFiles(File,List[Map[String,Object]]).mjava","sourceNew":"  private void getFolderFiles(File dir, final List<Map<String, Object>> fileDetails) {\n    // Fetch an array of file objects that pass the filter, however the\n    // returned array is never populated; accept() always returns false.\n    // Rather we make use of the fileDetails array which is populated as\n    // a side affect of the accept method.\n    dir.list(new FilenameFilter() {\n      public boolean accept(File dir, String name) {\n        File fileObj = new File(dir, name);\n        if (fileObj.isDirectory()) {\n          if (recursive) getFolderFiles(fileObj, fileDetails);\n        } else if (fileNamePattern == null) {\n          addDetails(fileDetails, dir, name);\n        } else if (fileNamePattern.matcher(name).find()) {\n          if (excludesPattern != null && excludesPattern.matcher(name).find())\n            return false;\n          addDetails(fileDetails, dir, name);\n        }\n        return false;\n      }\n    });\n  }\n\n","sourceOld":"  private void getFolderFiles(File dir,\n                              final List<Map<String, Object>> fileDetails) {\n    dir.list(new FilenameFilter() {\n      public boolean accept(File dir, String name) {\n        if (fileNamePattern == null) {\n          addDetails(fileDetails, dir, name);\n          return false;\n        }\n        if (fileNamePattern.matcher(name).find()) {\n          if (excludesPattern != null && excludesPattern.matcher(name).find())\n            return false;\n          addDetails(fileDetails, dir, name);\n        }\n\n        return false;\n      }\n    });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/FileListEntityProcessor#getFolderFiles(File,List[Map[String,Object]]).mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/FileListEntityProcessor#getFolderFiles(File,List[Map[String,Object]]).mjava","sourceNew":"  private void getFolderFiles(File dir, final List<Map<String, Object>> fileDetails) {\n    // Fetch an array of file objects that pass the filter, however the\n    // returned array is never populated; accept() always returns false.\n    // Rather we make use of the fileDetails array which is populated as\n    // a side affect of the accept method.\n    dir.list(new FilenameFilter() {\n      public boolean accept(File dir, String name) {\n        File fileObj = new File(dir, name);\n        if (fileObj.isDirectory()) {\n          if (recursive) getFolderFiles(fileObj, fileDetails);\n        } else if (fileNamePattern == null) {\n          addDetails(fileDetails, dir, name);\n        } else if (fileNamePattern.matcher(name).find()) {\n          if (excludesPattern != null && excludesPattern.matcher(name).find())\n            return false;\n          addDetails(fileDetails, dir, name);\n        }\n        return false;\n      }\n    });\n  }\n\n","sourceOld":"  private void getFolderFiles(File dir, final List<Map<String, Object>> fileDetails) {\n    // Fetch an array of file objects that pass the filter, however the\n    // returned array is never populated; accept() always returns false.\n    // Rather we make use of the fileDetails array which is populated as\n    // a side affect of the accept method.\n    dir.list(new FilenameFilter() {\n      public boolean accept(File dir, String name) {\n        File fileObj = new File(dir, name);\n        if (fileObj.isDirectory()) {\n          if (recursive) getFolderFiles(fileObj, fileDetails);\n        } else if (fileNamePattern == null) {\n          addDetails(fileDetails, dir, name);\n        } else if (fileNamePattern.matcher(name).find()) {\n          if (excludesPattern != null && excludesPattern.matcher(name).find())\n            return false;\n          addDetails(fileDetails, dir, name);\n        }\n        return false;\n      }\n    });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4d4f1b2c5601680b01c4bb95a43fe6fb73f03103":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["d241a0d7846c11e0602e9ade2311edaa6e833c9a"],"d241a0d7846c11e0602e9ade2311edaa6e833c9a":["4d4f1b2c5601680b01c4bb95a43fe6fb73f03103"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"4d4f1b2c5601680b01c4bb95a43fe6fb73f03103":["d241a0d7846c11e0602e9ade2311edaa6e833c9a"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["4d4f1b2c5601680b01c4bb95a43fe6fb73f03103"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"d241a0d7846c11e0602e9ade2311edaa6e833c9a":["ad94625fb8d088209f46650c8097196fec67f00c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}