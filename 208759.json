{"path":"solr/core/src/test/org/apache/solr/cloud/autoscaling/sim/TestSimLargeCluster#getFreeDiskPerNode(Collection[String]).mjava","commits":[{"id":"bffd02b7c57b27d76ece244beb098f61c974b9d9","date":1568827127,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/autoscaling/sim/TestSimLargeCluster#getFreeDiskPerNode(Collection[String]).mjava","pathOld":"/dev/null","sourceNew":"  private Map<String, Number> getFreeDiskPerNode(Collection<String> nodes) throws Exception {\n    Map<String, Number> freediskPerNode = new HashMap<>();\n    for (String node : nodes) {\n      Map<String, Object> values = cluster.getNodeStateProvider().getNodeValues(node, Arrays.asList(Variable.Type.FREEDISK.tagName));\n      freediskPerNode.put(node, (Number) values.get(Variable.Type.FREEDISK.tagName));\n    }\n    log.info(\"- freeDiskPerNode: \" + Utils.toJSONString(freediskPerNode));\n    return freediskPerNode;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe9f2c4a0d7ac164e4bdd4eee7f87131aec83fd4","date":1588172214,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/autoscaling/sim/TestSimLargeCluster#getFreeDiskPerNode(Collection[String]).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/autoscaling/sim/TestSimLargeCluster#getFreeDiskPerNode(Collection[String]).mjava","sourceNew":"  private Map<String, Number> getFreeDiskPerNode(Collection<String> nodes) throws Exception {\n    Map<String, Number> freediskPerNode = new HashMap<>();\n    for (String node : nodes) {\n      Map<String, Object> values = cluster.getNodeStateProvider().getNodeValues(node, Arrays.asList(Variable.Type.FREEDISK.tagName));\n      freediskPerNode.put(node, (Number) values.get(Variable.Type.FREEDISK.tagName));\n    }\n    if (log.isInfoEnabled()) {\n      log.info(\"- freeDiskPerNode: {}\", Utils.toJSONString(freediskPerNode));\n    }\n    return freediskPerNode;\n  }\n\n","sourceOld":"  private Map<String, Number> getFreeDiskPerNode(Collection<String> nodes) throws Exception {\n    Map<String, Number> freediskPerNode = new HashMap<>();\n    for (String node : nodes) {\n      Map<String, Object> values = cluster.getNodeStateProvider().getNodeValues(node, Arrays.asList(Variable.Type.FREEDISK.tagName));\n      freediskPerNode.put(node, (Number) values.get(Variable.Type.FREEDISK.tagName));\n    }\n    log.info(\"- freeDiskPerNode: \" + Utils.toJSONString(freediskPerNode));\n    return freediskPerNode;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f504512a03d978990cbff30db0522b354e846db","date":1595247421,"type":4,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/cloud/autoscaling/sim/TestSimLargeCluster#getFreeDiskPerNode(Collection[String]).mjava","sourceNew":null,"sourceOld":"  private Map<String, Number> getFreeDiskPerNode(Collection<String> nodes) throws Exception {\n    Map<String, Number> freediskPerNode = new HashMap<>();\n    for (String node : nodes) {\n      Map<String, Object> values = cluster.getNodeStateProvider().getNodeValues(node, Arrays.asList(Variable.Type.FREEDISK.tagName));\n      freediskPerNode.put(node, (Number) values.get(Variable.Type.FREEDISK.tagName));\n    }\n    if (log.isInfoEnabled()) {\n      log.info(\"- freeDiskPerNode: {}\", Utils.toJSONString(freediskPerNode));\n    }\n    return freediskPerNode;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3f504512a03d978990cbff30db0522b354e846db":["fe9f2c4a0d7ac164e4bdd4eee7f87131aec83fd4"],"fe9f2c4a0d7ac164e4bdd4eee7f87131aec83fd4":["bffd02b7c57b27d76ece244beb098f61c974b9d9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3f504512a03d978990cbff30db0522b354e846db"],"bffd02b7c57b27d76ece244beb098f61c974b9d9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"3f504512a03d978990cbff30db0522b354e846db":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"fe9f2c4a0d7ac164e4bdd4eee7f87131aec83fd4":["3f504512a03d978990cbff30db0522b354e846db"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["bffd02b7c57b27d76ece244beb098f61c974b9d9"],"bffd02b7c57b27d76ece244beb098f61c974b9d9":["fe9f2c4a0d7ac164e4bdd4eee7f87131aec83fd4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}