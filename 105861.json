{"path":"contrib/queryparser/src/test/org/apache/lucene/queryParser/original/TestMultiFieldQPHelper#testStaticMethod3().mjava","commits":[{"id":"b955a87bc7c5daeda1ed56821ec0bec2e8789e44","date":1249270724,"type":0,"author":"Michael Busch","isMerge":false,"pathNew":"contrib/queryparser/src/test/org/apache/lucene/queryParser/original/TestMultiFieldQPHelper#testStaticMethod3().mjava","pathOld":"/dev/null","sourceNew":"  public void testStaticMethod3() throws QueryNodeException {\n    String[] queries = { \"one\", \"two\", \"three\" };\n    String[] fields = { \"f1\", \"f2\", \"f3\" };\n    BooleanClause.Occur[] flags = { BooleanClause.Occur.MUST,\n        BooleanClause.Occur.MUST_NOT, BooleanClause.Occur.SHOULD };\n    Query q = QueryParserUtil.parse(queries, fields, flags,\n        new StandardAnalyzer());\n    assertEquals(\"+f1:one -f2:two f3:three\", q.toString());\n\n    try {\n      BooleanClause.Occur[] flags2 = { BooleanClause.Occur.MUST };\n      q = QueryParserUtil\n          .parse(queries, fields, flags2, new StandardAnalyzer());\n      fail();\n    } catch (IllegalArgumentException e) {\n      // expected exception, array length differs\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["05fe562aa248790944d43cdd478f512572835ba0"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"e8a848e758754282137f42bf85793c278e250390","date":1249640668,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/queryparser/src/test/org/apache/lucene/queryParser/standard/TestMultiFieldQPHelper#testStaticMethod3().mjava","pathOld":"contrib/queryparser/src/test/org/apache/lucene/queryParser/original/TestMultiFieldQPHelper#testStaticMethod3().mjava","sourceNew":"  public void testStaticMethod3() throws QueryNodeException {\n    String[] queries = { \"one\", \"two\", \"three\" };\n    String[] fields = { \"f1\", \"f2\", \"f3\" };\n    BooleanClause.Occur[] flags = { BooleanClause.Occur.MUST,\n        BooleanClause.Occur.MUST_NOT, BooleanClause.Occur.SHOULD };\n    Query q = QueryParserUtil.parse(queries, fields, flags,\n        new StandardAnalyzer());\n    assertEquals(\"+f1:one -f2:two f3:three\", q.toString());\n\n    try {\n      BooleanClause.Occur[] flags2 = { BooleanClause.Occur.MUST };\n      q = QueryParserUtil\n          .parse(queries, fields, flags2, new StandardAnalyzer());\n      fail();\n    } catch (IllegalArgumentException e) {\n      // expected exception, array length differs\n    }\n  }\n\n","sourceOld":"  public void testStaticMethod3() throws QueryNodeException {\n    String[] queries = { \"one\", \"two\", \"three\" };\n    String[] fields = { \"f1\", \"f2\", \"f3\" };\n    BooleanClause.Occur[] flags = { BooleanClause.Occur.MUST,\n        BooleanClause.Occur.MUST_NOT, BooleanClause.Occur.SHOULD };\n    Query q = QueryParserUtil.parse(queries, fields, flags,\n        new StandardAnalyzer());\n    assertEquals(\"+f1:one -f2:two f3:three\", q.toString());\n\n    try {\n      BooleanClause.Occur[] flags2 = { BooleanClause.Occur.MUST };\n      q = QueryParserUtil\n          .parse(queries, fields, flags2, new StandardAnalyzer());\n      fail();\n    } catch (IllegalArgumentException e) {\n      // expected exception, array length differs\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"e8a848e758754282137f42bf85793c278e250390":["b955a87bc7c5daeda1ed56821ec0bec2e8789e44"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b955a87bc7c5daeda1ed56821ec0bec2e8789e44":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e8a848e758754282137f42bf85793c278e250390"]},"commit2Childs":{"e8a848e758754282137f42bf85793c278e250390":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b955a87bc7c5daeda1ed56821ec0bec2e8789e44"],"b955a87bc7c5daeda1ed56821ec0bec2e8789e44":["e8a848e758754282137f42bf85793c278e250390"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}