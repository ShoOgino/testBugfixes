{"path":"solr/solrj/src/java/org/apache/solr/common/params/SolrParams#getLong(String,Long).mjava","commits":[{"id":"5a2d81cf6955f09cda03ed448bb9bb397d4b9742","date":1411570057,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/params/SolrParams#getLong(String,Long).mjava","pathOld":"/dev/null","sourceNew":"  /** Returns the Long value of the param, or null if not set */\n  public Long getLong(String param, Long def) {\n    String val = get(param);\n    try {\n      return val== null ? def : Long.parseLong(val);\n    }\n    catch( Exception ex ) {\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, ex.getMessage(), ex );\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8ed124d21605b0e41f648c25f80f60ba1828e78a","date":1477056513,"type":4,"author":"Noble Paul","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/solrj/src/java/org/apache/solr/common/params/SolrParams#getLong(String,Long).mjava","sourceNew":null,"sourceOld":"  /** Returns the Long value of the param, or null if not set */\n  public Long getLong(String param, Long def) {\n    String val = get(param);\n    try {\n      return val== null ? def : Long.parseLong(val);\n    }\n    catch( Exception ex ) {\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, ex.getMessage(), ex );\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"80d0e6d59ae23f4a6f30eaf40bfb40742300287f","date":1477598926,"type":4,"author":"Kevin Risden","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/solrj/src/java/org/apache/solr/common/params/SolrParams#getLong(String,Long).mjava","sourceNew":null,"sourceOld":"  /** Returns the Long value of the param, or null if not set */\n  public Long getLong(String param, Long def) {\n    String val = get(param);\n    try {\n      return val== null ? def : Long.parseLong(val);\n    }\n    catch( Exception ex ) {\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST, ex.getMessage(), ex );\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8ed124d21605b0e41f648c25f80f60ba1828e78a":["5a2d81cf6955f09cda03ed448bb9bb397d4b9742"],"5a2d81cf6955f09cda03ed448bb9bb397d4b9742":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"80d0e6d59ae23f4a6f30eaf40bfb40742300287f":["5a2d81cf6955f09cda03ed448bb9bb397d4b9742","8ed124d21605b0e41f648c25f80f60ba1828e78a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8ed124d21605b0e41f648c25f80f60ba1828e78a"]},"commit2Childs":{"8ed124d21605b0e41f648c25f80f60ba1828e78a":["80d0e6d59ae23f4a6f30eaf40bfb40742300287f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5a2d81cf6955f09cda03ed448bb9bb397d4b9742":["8ed124d21605b0e41f648c25f80f60ba1828e78a","80d0e6d59ae23f4a6f30eaf40bfb40742300287f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5a2d81cf6955f09cda03ed448bb9bb397d4b9742"],"80d0e6d59ae23f4a6f30eaf40bfb40742300287f":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["80d0e6d59ae23f4a6f30eaf40bfb40742300287f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}