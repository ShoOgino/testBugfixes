{"path":"sandbox/contributions/webcrawler-LARM/src/de/lanlab/larm/parser/Tokenizer#tokenize().mjava","commits":[{"id":"05d36e0b328ec96237035fbcca240e73631396e5","date":1020520725,"type":0,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"sandbox/contributions/webcrawler-LARM/src/de/lanlab/larm/parser/Tokenizer#tokenize().mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * Description of the Method\n     *\n     * @exception Exception  Description of the Exception\n     */\n    public void tokenize()\n        throws Exception\n    {\n        int c;\n\n\n        while ((c = read()) != -1)\n        {\n            switch (state)\n            {\n                case ST_START:\n                    switch (c)\n                    {\n                        case '<':\n                            state = ST_TAG_LT;\n                            linkTagType = LINKTYPE_NONE;\n                            linkAttrFound = false;\n                            linkAttrType = 0;\n                            linkValue = \"\";\n\n                            isStartTag = true;\n                            keepPCData= false;\n\n                            // until proven wrong\n                            tagname.reset();\n                            break;\n                        case ' ':\n                        case '\\t':\n                        case '\\r':\n                        case '\\n':\n                            if (!rcgnzWS)\n                            {\n                                break;\n                            }\n                        // else fall through\n                        default:\n                            state = ST_PCDATA;\n                            if(keepPCData)\n                            {\n                                pcData.write(c);\n                            }\n\n                    }\n                    break;\n                case ST_PCDATA:\n                    if (c == '<')\n                    {\n                        if(keepPCData)\n                        {\n                            gotPCDATA(true);\n                            keepPCData = false;\n                        }\n                        linkTagType = LINKTYPE_NONE;\n                        linkAttrFound = false;\n                        linkAttrType = 0;\n                        linkValue = \"\";\n                        state = ST_TAG_LT;\n                    }\n                    else\n                    {\n                        if(keepPCData)\n                        {\n                            pcData.write(c);\n                        }\n                    }\n                    break;\n                case ST_TAG_LT:\n                    switch (c)\n                    {\n                        case '/':\n                            isStartTag = false;\n                            state = ST_TAG_NAME;\n                            break;\n                        case '!':\n                            c = read();\n                            if ((c == '-' && !rcgnzComments) || (c == '[' && !rcgnzCDATA))\n                            {\n                                state = ST_PCDATA;\n                                pcData.reset();\n                                pcData.write(c);\n                                break;\n                            }\n                            if (c == '-')\n                            {\n                                state = ST_COMMENT;\n                            }\n                            else if (c == '[')\n                            {\n                                parseCDATA();\n                            }\n                            else\n                            {\n                                // FIXME: shouldn't be delivered as PCDATA\n                                //warning(\"Bad markup \" + buf);\n                                state = ST_PCDATA;\n                                pcData.reset();\n                                pcData.write(c);\n                            }\n                            break;\n                        case '?':\n                            parsePI();\n                            break;\n                        case ' ':\n                        case '\\t':\n                        case '\\r':\n                        case '\\n':\n                            state = ST_TAG_WS;\n                            break;\n                        default:\n                            tagname.write(Character.toLowerCase((char) c));\n                            // ## changed\n                            state = ST_TAG_NAME;\n                    }\n                    break;\n                case ST_TAG_NAME:\n                    switch (c)\n                    {\n                        case ' ':\n                        case '\\t':\n                        case '\\r':\n                        case '\\n':\n                            state = ST_TAG_WS;\n                            gotTagName();\n                            // ## changed\n                            break;\n                        case '/':\n                            state = ST_EMPTY_TAG_SLASH;\n                            gotTagName();\n                            // ## changed\n                            break;\n                        case '>':\n                            gotTagName();\n                            // ## changed\n                            gotTag();\n                            break;\n                        default:\n                            tagname.write(Character.toLowerCase((char) c));\n                        // ## changed\n                    }\n                    break;\n                case ST_TAG_WS:\n                    switch (c)\n                    {\n                        case ' ':\n                        case '\\t':\n                        case '\\r':\n                        case '\\n':\n                            break;\n                        case '/':\n                            state = ST_EMPTY_TAG_SLASH;\n                            break;\n                        case '>':\n                            gotTag();\n                            break;\n                        case '?':\n                        // NOTE: if !inXMLDecl we fall through to default case\n                        default:\n                            if (!isStartTag)\n                            {\n                                // bit of a hack this...\n                                //errHandler.warning(\"Malformed tag: \"+buf, sysID, _line, _column);\n                                //err_continue(\"Malformed tag: \"+buf);\n                                toStart();\n                                // ## changed\n                                if (c == '<')\n                                {\n                                    gotPCDATA(true);\n                                    keepPCData = false;\n                                    state = ST_TAG_LT;\n                                }\n                                else\n                                {\n                                    // we get here e.g. if there's an end tag with attributes\n                                    state = ST_PCDATA;\n                                    pcData.reset();\n                                }\n                            }\n                            else\n                            {\n                                // FIXME: this accepts way too many first chars for attr name\n                                attrName.write(Character.toLowerCase((char) c));\n                                state = ST_NAME;\n                            }\n                    }\n                    break;\n                case ST_EMPTY_TAG_SLASH:\n                    if (c == '>')\n                    {\n                        //tagtype = TAG_EMPTY;\n                        gotTag();\n                        break;\n                    }\n                    else\n                    {\n                        // ERROR !? - can't throw Exception here - we go to next tag...\n                        state = ST_PCDATA;\n                        pcData.reset();\n                    }\n                    break;\n                case ST_NAME:\n                    switch (c)\n                    {\n                        case ' ':\n                        case '\\t':\n                        case '\\r':\n                        case '\\n':\n                            if (attrName.size() > 0)\n                            {\n                                state = ST_NAME_WS;\n                            }\n                            break;\n                        case '>':\n                            if (attrName.size() > 0)\n                            {\n                                gotAttr();\n                            }\n                            gotTag();\n                            break;\n                        case '=':\n                            state = ST_EQ;\n                            break;\n                        default:\n                            if (isCtlOrTspecial(c))\n                            {\n                                state = ST_PCDATA;\n                                pcData.reset();\n                            }\n                            else\n                            {\n                                attrName.write(Character.toLowerCase((char) c));\n                            }\n                    }\n                    break;\n                case ST_NAME_WS:\n                    // white-space between name and '='\n                    switch (c)\n                    {\n                        case ' ':\n                        case '\\t':\n                        case '\\r':\n                        case '\\n':\n                            break;\n                        case '=':\n                            state = ST_EQ;\n                            break;\n                        case '>':\n                            gotAttr();\n                            gotTag();\n                            break;\n                        default:\n                            if (isNameChar(c))\n                            {\n                                gotAttr();\n                                attrName.write(Character.toLowerCase((char) c));\n                                state = ST_TAG_WS;\n                            }\n                            else\n                            {\n                                state = ST_PCDATA;\n                                pcData.reset();\n                            }\n                    }\n                    break;\n                case ST_EQ:\n                    // white-space between '=' and value\n                    switch (c)\n                    {\n                        case ' ':\n                        case '\\t':\n                        case '\\r':\n                        case '\\n':\n                            break;\n                        case '\"':\n                            qchar = '\"';\n                            state = ST_VALUE_QUOTED;\n                            break;\n                        case '\\'':\n                            qchar = '\\'';\n                            state = ST_VALUE_QUOTED;\n                            break;\n                        default:\n                            if (isCtlOrTspecial(c))\n                            {\n                                state = ST_PCDATA;\n                                pcData.reset();\n                            }\n                            else\n                            {\n                                attrValue.write(c);\n                                state = ST_VALUE;\n                            }\n                    }\n                    break;\n                case ST_VALUE:\n                    switch (c)\n                    {\n                        case ' ':\n                        case '\\t':\n                        case '\\r':\n                        case '\\n':\n                            gotAttr();\n                            state = ST_TAG_WS;\n                            break;\n                        case '>':\n                            gotAttr();\n                            gotTag();\n                            break;\n                        /*\n                         *  case '/':     // FIXME: HTML knows things like <a href=a/b.html> !!\n                         *  gotAttr();\n                         *  state = ST_EMPTY_TAG_SLASH;\n                         *  break;\n                         */\n                        default:\n                            if (isValueBreaker(c))\n                            {\n                                state = ST_PCDATA;\n                                pcData.reset();\n                            }\n                            else\n                            {\n                                attrValue.write(c);\n                            }\n                    }\n                    break;\n                case ST_VALUE_QUOTED:\n                    if (c == qchar)\n                    {\n                        gotAttr();\n                        state = ST_TAG_WS;\n                    }\n                    else\n                    {\n                        attrValue.write(c);\n                    }\n                    break;\n                case ST_COMMENT:\n                    // we've seen \"...<!-\" by now\n                    try\n                    {\n                        if (c != '-')\n                        {\n                            //warning(\"Bad comment\");\n                            state = ST_PCDATA;\n                            pcData.reset();\n                            break;\n                        }\n                        // we're within comment - read till we see \"--\"\n                        while (true)\n                        {\n                            while (read_ex() != '-')\n                            {\n                                ;\n                            }\n                            if (read_ex() == '-')\n                            {\n                                break;\n                            }\n                        }\n                        // seen \"--\" - gotComment() reads past next '>'\n                        gotComment();\n                        //while (read_ex() != '>') ;\n                        //state = ST_PCDATA;\n                    }\n                    catch (EmptyInputStream ex)\n                    {\n                        gotPCDATA(false);\n                        keepPCData = false;\n                        break;\n                    }\n            }\n        }\n\n        // input stream ended - return rest, if any, as PCDATA\n        if (buf.size() > 0)\n        {\n            gotPCDATA(false);\n            keepPCData = false;\n            buf.reset();\n        }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"21b526e3e9974b2651365fbae52a976e6fc77aa4","date":1022108962,"type":3,"author":"cmarschner","isMerge":false,"pathNew":"sandbox/contributions/webcrawler-LARM/src/de/lanlab/larm/parser/Tokenizer#tokenize().mjava","pathOld":"sandbox/contributions/webcrawler-LARM/src/de/lanlab/larm/parser/Tokenizer#tokenize().mjava","sourceNew":"    /**\n     * Description of the Method\n     *\n     * @exception Exception  Description of the Exception\n     */\n    public void tokenize()\n        throws Exception\n    {\n        int c;\n\n\n        while ((c = read()) != -1)\n        {\n            switch (state)\n            {\n                case ST_START:\n                    switch (c)\n                    {\n                        case '<':\n                            state = ST_TAG_LT;\n                            linkTagType = LINKTYPE_NONE;\n                            linkAttrFound = false;\n                            linkAttrType = 0;\n                            linkValue = \"\";\n\n                            isStartTag = true;\n                            keepPCData= false;\n\n                            // until proven wrong\n                            tagname.reset();\n                            break;\n                        case ' ':\n                        case '\\t':\n                        case '\\r':\n                        case '\\n':\n                            if (!rcgnzWS)\n                            {\n                                break;\n                            }\n                        // else fall through\n                        default:\n                            state = ST_PCDATA;\n                            if(keepPCData)\n                            {\n                                pcData.write(c);\n                                pcDataLength++;\n                                if(pcDataLength > MAX_PCDATA_LENGTH)\n                                {\n                                    this.gotPCDATA(false);\n                                    keepPCData = false;\n                                }\n                            }\n\n                    }\n                    break;\n                case ST_PCDATA:\n                    if (c == '<')\n                    {\n                        if(keepPCData)\n                        {\n                            gotPCDATA(true);\n                            keepPCData = false;\n                        }\n                        linkTagType = LINKTYPE_NONE;\n                        linkAttrFound = false;\n                        linkAttrType = 0;\n                        linkValue = \"\";\n                        state = ST_TAG_LT;\n                    }\n                    else\n                    {\n                        if(keepPCData)\n                        {\n                            pcData.write(c);\n                            pcDataLength++;\n                            if(pcDataLength > MAX_PCDATA_LENGTH)\n                            {\n                                this.gotPCDATA(false);\n                                keepPCData = false;\n                            }\n\n                        }\n                    }\n                    break;\n                case ST_TAG_LT:\n                    switch (c)\n                    {\n                        case '/':\n                            isStartTag = false;\n                            state = ST_TAG_NAME;\n                            break;\n                        case '!':\n                            c = read();\n                            if ((c == '-' && !rcgnzComments) || (c == '[' && !rcgnzCDATA))\n                            {\n                                state = ST_PCDATA;\n                                pcData.reset();\n                                pcData.write(c);\n                                break;\n                            }\n                            if (c == '-')\n                            {\n                                state = ST_COMMENT;\n                            }\n                            else if (c == '[')\n                            {\n                                parseCDATA();\n                            }\n                            else\n                            {\n                                // FIXME: shouldn't be delivered as PCDATA\n                                //warning(\"Bad markup \" + buf);\n                                state = ST_PCDATA;\n                                pcData.reset();\n                                pcData.write(c);\n                            }\n                            break;\n                        case '?':\n                            parsePI();\n                            break;\n                        case ' ':\n                        case '\\t':\n                        case '\\r':\n                        case '\\n':\n                            state = ST_TAG_WS;\n                            break;\n                        default:\n                            tagname.write(Character.toLowerCase((char) c));\n                            // ## changed\n                            state = ST_TAG_NAME;\n                    }\n                    break;\n                case ST_TAG_NAME:\n                    switch (c)\n                    {\n                        case ' ':\n                        case '\\t':\n                        case '\\r':\n                        case '\\n':\n                            state = ST_TAG_WS;\n                            gotTagName();\n                            // ## changed\n                            break;\n                        case '/':\n                            state = ST_EMPTY_TAG_SLASH;\n                            gotTagName();\n                            // ## changed\n                            break;\n                        case '>':\n                            gotTagName();\n                            // ## changed\n                            gotTag();\n                            break;\n                        default:\n                            tagname.write(Character.toLowerCase((char) c));\n                        // ## changed\n                    }\n                    break;\n                case ST_TAG_WS:\n                    switch (c)\n                    {\n                        case ' ':\n                        case '\\t':\n                        case '\\r':\n                        case '\\n':\n                            break;\n                        case '/':\n                            state = ST_EMPTY_TAG_SLASH;\n                            break;\n                        case '>':\n                            gotTag();\n                            break;\n                        case '?':\n                        // NOTE: if !inXMLDecl we fall through to default case\n                        default:\n                            if (!isStartTag)\n                            {\n                                // bit of a hack this...\n                                //errHandler.warning(\"Malformed tag: \"+buf, sysID, _line, _column);\n                                //err_continue(\"Malformed tag: \"+buf);\n                                toStart();\n                                // ## changed\n                                if (c == '<')\n                                {\n                                    gotPCDATA(true);\n                                    keepPCData = false;\n                                    state = ST_TAG_LT;\n                                }\n                                else\n                                {\n                                    // we get here e.g. if there's an end tag with attributes\n                                    state = ST_PCDATA;\n                                    pcData.reset();\n                                }\n                            }\n                            else\n                            {\n                                // FIXME: this accepts way too many first chars for attr name\n                                attrName.write(Character.toLowerCase((char) c));\n                                state = ST_NAME;\n                            }\n                    }\n                    break;\n                case ST_EMPTY_TAG_SLASH:\n                    if (c == '>')\n                    {\n                        //tagtype = TAG_EMPTY;\n                        gotTag();\n                        break;\n                    }\n                    else\n                    {\n                        // ERROR !? - can't throw Exception here - we go to next tag...\n                        state = ST_PCDATA;\n                        pcData.reset();\n                    }\n                    break;\n                case ST_NAME:\n                    switch (c)\n                    {\n                        case ' ':\n                        case '\\t':\n                        case '\\r':\n                        case '\\n':\n                            if (attrName.size() > 0)\n                            {\n                                state = ST_NAME_WS;\n                            }\n                            break;\n                        case '>':\n                            if (attrName.size() > 0)\n                            {\n                                gotAttr();\n                            }\n                            gotTag();\n                            break;\n                        case '=':\n                            state = ST_EQ;\n                            break;\n                        default:\n                            if (isCtlOrTspecial(c))\n                            {\n                                state = ST_PCDATA;\n                                pcData.reset();\n                            }\n                            else\n                            {\n                                attrName.write(Character.toLowerCase((char) c));\n                            }\n                    }\n                    break;\n                case ST_NAME_WS:\n                    // white-space between name and '='\n                    switch (c)\n                    {\n                        case ' ':\n                        case '\\t':\n                        case '\\r':\n                        case '\\n':\n                            break;\n                        case '=':\n                            state = ST_EQ;\n                            break;\n                        case '>':\n                            gotAttr();\n                            gotTag();\n                            break;\n                        default:\n                            if (isNameChar(c))\n                            {\n                                gotAttr();\n                                attrName.write(Character.toLowerCase((char) c));\n                                state = ST_TAG_WS;\n                            }\n                            else\n                            {\n                                state = ST_PCDATA;\n                                pcData.reset();\n                            }\n                    }\n                    break;\n                case ST_EQ:\n                    // white-space between '=' and value\n                    switch (c)\n                    {\n                        case ' ':\n                        case '\\t':\n                        case '\\r':\n                        case '\\n':\n                            break;\n                        case '\"':\n                            qchar = '\"';\n                            state = ST_VALUE_QUOTED;\n                            break;\n                        case '\\'':\n                            qchar = '\\'';\n                            state = ST_VALUE_QUOTED;\n                            break;\n                        default:\n                            if (isCtlOrTspecial(c))\n                            {\n                                state = ST_PCDATA;\n                                pcData.reset();\n                            }\n                            else\n                            {\n                                attrValue.write(c);\n                                state = ST_VALUE;\n                            }\n                    }\n                    break;\n                case ST_VALUE:\n                    switch (c)\n                    {\n                        case ' ':\n                        case '\\t':\n                        case '\\r':\n                        case '\\n':\n                            gotAttr();\n                            state = ST_TAG_WS;\n                            break;\n                        case '>':\n                            gotAttr();\n                            gotTag();\n                            break;\n                        /*\n                         *  case '/':     // FIXME: HTML knows things like <a href=a/b.html> !!\n                         *  gotAttr();\n                         *  state = ST_EMPTY_TAG_SLASH;\n                         *  break;\n                         */\n                        default:\n                            if (isValueBreaker(c))\n                            {\n                                state = ST_PCDATA;\n                                pcData.reset();\n                            }\n                            else\n                            {\n                                attrValue.write(c);\n                            }\n                    }\n                    break;\n                case ST_VALUE_QUOTED:\n                    if (c == qchar)\n                    {\n                        gotAttr();\n                        state = ST_TAG_WS;\n                    }\n                    else\n                    {\n                        attrValue.write(c);\n                    }\n                    break;\n                case ST_COMMENT:\n                    // we've seen \"...<!-\" by now\n                    try\n                    {\n                        if (c != '-')\n                        {\n                            //warning(\"Bad comment\");\n                            state = ST_PCDATA;\n                            pcData.reset();\n                            break;\n                        }\n                        // we're within comment - read till we see \"--\"\n                        while (true)\n                        {\n                            while (read_ex() != '-')\n                            {\n                                ;\n                            }\n                            if (read_ex() == '-')\n                            {\n                                break;\n                            }\n                        }\n                        // seen \"--\" - gotComment() reads past next '>'\n                        gotComment();\n                        //while (read_ex() != '>') ;\n                        //state = ST_PCDATA;\n                    }\n                    catch (EmptyInputStream ex)\n                    {\n                        gotPCDATA(false);\n                        keepPCData = false;\n                        break;\n                    }\n                    break;\n                case ST_IN_ANCHOR:\n                     // we've seen <a href=\"...\">. href is in linkValue. Read until\n                     // the next end tag, at most 200 characters.\n                     // (end tags are often ommited, i.e. <a ...>text</td>)\n                     // regards other tags as text\n                     // todo: read until next </a> or a couple other tags\n                    try\n                    {\n                        short count = 0;\n                        switch(c)\n                        {\n                            case '\\t':\n                            case '\\n':\n                            case '\\r':\n                                pcData.write(' ');\n                                break;\n                            default:\n                                pcData.write(c);\n                        }\n                        while(count < MAX_PCDATA_LENGTH)\n                        {\n                            count++;\n                            while(((c =read_ex()) != '<') && (count < MAX_PCDATA_LENGTH))\n                            {\n                                switch(c)\n                                {\n                                    case '\\t':\n                                    case '\\n':\n                                    case '\\r':\n                                        pcData.write(' ');\n                                        break;\n                                    default:\n                                        pcData.write(c);\n                                }\n                            }\n                            if(count >= MAX_PCDATA_LENGTH)\n                            {\n                                gotAnchor(false);\n                                break;\n                            }\n                            else\n                            {\n                                pcData.write(c);\n                                count++;\n                                if((c=read_ex()) == '/')\n                                {\n                                    gotAnchor(true);\n                                    isStartTag = false;\n                                    state = ST_TAG_NAME;\n                                    break;\n                                }\n                                else\n                                {\n                                    pcData.write(c);\n                                }\n                            }\n                        }\n                    }\n                    catch(EmptyInputStream ex)\n                    {\n\n                    }\n            }\n        }\n\n        // input stream ended - return rest, if any, as PCDATA\n        if (buf.size() > 0)\n        {\n            gotPCDATA(false);\n            keepPCData = false;\n            buf.reset();\n        }\n    }\n\n","sourceOld":"    /**\n     * Description of the Method\n     *\n     * @exception Exception  Description of the Exception\n     */\n    public void tokenize()\n        throws Exception\n    {\n        int c;\n\n\n        while ((c = read()) != -1)\n        {\n            switch (state)\n            {\n                case ST_START:\n                    switch (c)\n                    {\n                        case '<':\n                            state = ST_TAG_LT;\n                            linkTagType = LINKTYPE_NONE;\n                            linkAttrFound = false;\n                            linkAttrType = 0;\n                            linkValue = \"\";\n\n                            isStartTag = true;\n                            keepPCData= false;\n\n                            // until proven wrong\n                            tagname.reset();\n                            break;\n                        case ' ':\n                        case '\\t':\n                        case '\\r':\n                        case '\\n':\n                            if (!rcgnzWS)\n                            {\n                                break;\n                            }\n                        // else fall through\n                        default:\n                            state = ST_PCDATA;\n                            if(keepPCData)\n                            {\n                                pcData.write(c);\n                            }\n\n                    }\n                    break;\n                case ST_PCDATA:\n                    if (c == '<')\n                    {\n                        if(keepPCData)\n                        {\n                            gotPCDATA(true);\n                            keepPCData = false;\n                        }\n                        linkTagType = LINKTYPE_NONE;\n                        linkAttrFound = false;\n                        linkAttrType = 0;\n                        linkValue = \"\";\n                        state = ST_TAG_LT;\n                    }\n                    else\n                    {\n                        if(keepPCData)\n                        {\n                            pcData.write(c);\n                        }\n                    }\n                    break;\n                case ST_TAG_LT:\n                    switch (c)\n                    {\n                        case '/':\n                            isStartTag = false;\n                            state = ST_TAG_NAME;\n                            break;\n                        case '!':\n                            c = read();\n                            if ((c == '-' && !rcgnzComments) || (c == '[' && !rcgnzCDATA))\n                            {\n                                state = ST_PCDATA;\n                                pcData.reset();\n                                pcData.write(c);\n                                break;\n                            }\n                            if (c == '-')\n                            {\n                                state = ST_COMMENT;\n                            }\n                            else if (c == '[')\n                            {\n                                parseCDATA();\n                            }\n                            else\n                            {\n                                // FIXME: shouldn't be delivered as PCDATA\n                                //warning(\"Bad markup \" + buf);\n                                state = ST_PCDATA;\n                                pcData.reset();\n                                pcData.write(c);\n                            }\n                            break;\n                        case '?':\n                            parsePI();\n                            break;\n                        case ' ':\n                        case '\\t':\n                        case '\\r':\n                        case '\\n':\n                            state = ST_TAG_WS;\n                            break;\n                        default:\n                            tagname.write(Character.toLowerCase((char) c));\n                            // ## changed\n                            state = ST_TAG_NAME;\n                    }\n                    break;\n                case ST_TAG_NAME:\n                    switch (c)\n                    {\n                        case ' ':\n                        case '\\t':\n                        case '\\r':\n                        case '\\n':\n                            state = ST_TAG_WS;\n                            gotTagName();\n                            // ## changed\n                            break;\n                        case '/':\n                            state = ST_EMPTY_TAG_SLASH;\n                            gotTagName();\n                            // ## changed\n                            break;\n                        case '>':\n                            gotTagName();\n                            // ## changed\n                            gotTag();\n                            break;\n                        default:\n                            tagname.write(Character.toLowerCase((char) c));\n                        // ## changed\n                    }\n                    break;\n                case ST_TAG_WS:\n                    switch (c)\n                    {\n                        case ' ':\n                        case '\\t':\n                        case '\\r':\n                        case '\\n':\n                            break;\n                        case '/':\n                            state = ST_EMPTY_TAG_SLASH;\n                            break;\n                        case '>':\n                            gotTag();\n                            break;\n                        case '?':\n                        // NOTE: if !inXMLDecl we fall through to default case\n                        default:\n                            if (!isStartTag)\n                            {\n                                // bit of a hack this...\n                                //errHandler.warning(\"Malformed tag: \"+buf, sysID, _line, _column);\n                                //err_continue(\"Malformed tag: \"+buf);\n                                toStart();\n                                // ## changed\n                                if (c == '<')\n                                {\n                                    gotPCDATA(true);\n                                    keepPCData = false;\n                                    state = ST_TAG_LT;\n                                }\n                                else\n                                {\n                                    // we get here e.g. if there's an end tag with attributes\n                                    state = ST_PCDATA;\n                                    pcData.reset();\n                                }\n                            }\n                            else\n                            {\n                                // FIXME: this accepts way too many first chars for attr name\n                                attrName.write(Character.toLowerCase((char) c));\n                                state = ST_NAME;\n                            }\n                    }\n                    break;\n                case ST_EMPTY_TAG_SLASH:\n                    if (c == '>')\n                    {\n                        //tagtype = TAG_EMPTY;\n                        gotTag();\n                        break;\n                    }\n                    else\n                    {\n                        // ERROR !? - can't throw Exception here - we go to next tag...\n                        state = ST_PCDATA;\n                        pcData.reset();\n                    }\n                    break;\n                case ST_NAME:\n                    switch (c)\n                    {\n                        case ' ':\n                        case '\\t':\n                        case '\\r':\n                        case '\\n':\n                            if (attrName.size() > 0)\n                            {\n                                state = ST_NAME_WS;\n                            }\n                            break;\n                        case '>':\n                            if (attrName.size() > 0)\n                            {\n                                gotAttr();\n                            }\n                            gotTag();\n                            break;\n                        case '=':\n                            state = ST_EQ;\n                            break;\n                        default:\n                            if (isCtlOrTspecial(c))\n                            {\n                                state = ST_PCDATA;\n                                pcData.reset();\n                            }\n                            else\n                            {\n                                attrName.write(Character.toLowerCase((char) c));\n                            }\n                    }\n                    break;\n                case ST_NAME_WS:\n                    // white-space between name and '='\n                    switch (c)\n                    {\n                        case ' ':\n                        case '\\t':\n                        case '\\r':\n                        case '\\n':\n                            break;\n                        case '=':\n                            state = ST_EQ;\n                            break;\n                        case '>':\n                            gotAttr();\n                            gotTag();\n                            break;\n                        default:\n                            if (isNameChar(c))\n                            {\n                                gotAttr();\n                                attrName.write(Character.toLowerCase((char) c));\n                                state = ST_TAG_WS;\n                            }\n                            else\n                            {\n                                state = ST_PCDATA;\n                                pcData.reset();\n                            }\n                    }\n                    break;\n                case ST_EQ:\n                    // white-space between '=' and value\n                    switch (c)\n                    {\n                        case ' ':\n                        case '\\t':\n                        case '\\r':\n                        case '\\n':\n                            break;\n                        case '\"':\n                            qchar = '\"';\n                            state = ST_VALUE_QUOTED;\n                            break;\n                        case '\\'':\n                            qchar = '\\'';\n                            state = ST_VALUE_QUOTED;\n                            break;\n                        default:\n                            if (isCtlOrTspecial(c))\n                            {\n                                state = ST_PCDATA;\n                                pcData.reset();\n                            }\n                            else\n                            {\n                                attrValue.write(c);\n                                state = ST_VALUE;\n                            }\n                    }\n                    break;\n                case ST_VALUE:\n                    switch (c)\n                    {\n                        case ' ':\n                        case '\\t':\n                        case '\\r':\n                        case '\\n':\n                            gotAttr();\n                            state = ST_TAG_WS;\n                            break;\n                        case '>':\n                            gotAttr();\n                            gotTag();\n                            break;\n                        /*\n                         *  case '/':     // FIXME: HTML knows things like <a href=a/b.html> !!\n                         *  gotAttr();\n                         *  state = ST_EMPTY_TAG_SLASH;\n                         *  break;\n                         */\n                        default:\n                            if (isValueBreaker(c))\n                            {\n                                state = ST_PCDATA;\n                                pcData.reset();\n                            }\n                            else\n                            {\n                                attrValue.write(c);\n                            }\n                    }\n                    break;\n                case ST_VALUE_QUOTED:\n                    if (c == qchar)\n                    {\n                        gotAttr();\n                        state = ST_TAG_WS;\n                    }\n                    else\n                    {\n                        attrValue.write(c);\n                    }\n                    break;\n                case ST_COMMENT:\n                    // we've seen \"...<!-\" by now\n                    try\n                    {\n                        if (c != '-')\n                        {\n                            //warning(\"Bad comment\");\n                            state = ST_PCDATA;\n                            pcData.reset();\n                            break;\n                        }\n                        // we're within comment - read till we see \"--\"\n                        while (true)\n                        {\n                            while (read_ex() != '-')\n                            {\n                                ;\n                            }\n                            if (read_ex() == '-')\n                            {\n                                break;\n                            }\n                        }\n                        // seen \"--\" - gotComment() reads past next '>'\n                        gotComment();\n                        //while (read_ex() != '>') ;\n                        //state = ST_PCDATA;\n                    }\n                    catch (EmptyInputStream ex)\n                    {\n                        gotPCDATA(false);\n                        keepPCData = false;\n                        break;\n                    }\n            }\n        }\n\n        // input stream ended - return rest, if any, as PCDATA\n        if (buf.size() > 0)\n        {\n            gotPCDATA(false);\n            keepPCData = false;\n            buf.reset();\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"12c7634bf3bb6da687c9b32ca310e7fb8fac8e1e","date":1022957716,"type":3,"author":"cmarschner","isMerge":false,"pathNew":"sandbox/contributions/webcrawler-LARM/src/de/lanlab/larm/parser/Tokenizer#tokenize().mjava","pathOld":"sandbox/contributions/webcrawler-LARM/src/de/lanlab/larm/parser/Tokenizer#tokenize().mjava","sourceNew":"    /**\n     * Description of the Method\n     *\n     * @exception Exception  Description of the Exception\n     */\n    public void tokenize()\n        throws Exception\n    {\n        int c;\n\n\n        while ((c = read()) != -1)\n        {\n            switch (state)\n            {\n                case ST_START:\n                    switch (c)\n                    {\n                        case '<':\n                            state = ST_TAG_LT;\n                            linkTagType = LINKTYPE_NONE;\n                            linkAttrFound = false;\n                            linkAttrType = 0;\n                            linkValue = \"\";\n\n                            isStartTag = true;\n                            keepPCData= false;\n\n                            // until proven wrong\n                            tagname.reset();\n                            break;\n                        case ' ':\n                        case '\\t':\n                        case '\\r':\n                        case '\\n':\n                            if (!rcgnzWS)\n                            {\n                                break;\n                            }\n                        // else fall through\n                        default:\n                            state = ST_PCDATA;\n                            if(keepPCData)\n                            {\n                                pcData.write(c);\n                                pcDataLength++;\n                                if(pcDataLength > MAX_PCDATA_LENGTH)\n                                {\n                                    this.gotPCDATA(false);\n                                    keepPCData = false;\n                                }\n                            }\n\n                    }\n                    break;\n                case ST_PCDATA:\n                    if (c == '<')\n                    {\n                        if(keepPCData)\n                        {\n                            gotPCDATA(true);\n                            keepPCData = false;\n                        }\n                        linkTagType = LINKTYPE_NONE;\n                        linkAttrFound = false;\n                        linkAttrType = 0;\n                        linkValue = \"\";\n                        state = ST_TAG_LT;\n                    }\n                    else\n                    {\n                        if(keepPCData)\n                        {\n                            pcData.write(c);\n                            pcDataLength++;\n                            if(pcDataLength > MAX_PCDATA_LENGTH)\n                            {\n                                this.gotPCDATA(false);\n                                keepPCData = false;\n                            }\n\n                        }\n                    }\n                    break;\n                case ST_TAG_LT:\n                    switch (c)\n                    {\n                        case '/':\n                            isStartTag = false;\n                            state = ST_TAG_NAME;\n                            break;\n                        case '!':\n                            c = read();\n                            if ((c == '-' && !rcgnzComments) || (c == '[' && !rcgnzCDATA))\n                            {\n                                state = ST_PCDATA;\n                                pcData.reset();\n                                pcData.write(c);\n                                break;\n                            }\n                            if (c == '-')\n                            {\n                                state = ST_COMMENT;\n                            }\n                            else if (c == '[')\n                            {\n                                parseCDATA();\n                            }\n                            else\n                            {\n                                // FIXME: shouldn't be delivered as PCDATA\n                                //warning(\"Bad markup \" + buf);\n                                state = ST_PCDATA;\n                                pcData.reset();\n                                pcData.write(c);\n                            }\n                            break;\n                        case '?':\n                            parsePI();\n                            break;\n                        case ' ':\n                        case '\\t':\n                        case '\\r':\n                        case '\\n':\n                            state = ST_TAG_WS;\n                            break;\n                        default:\n                            tagname.write(Character.toLowerCase((char) c));\n                            // ## changed\n                            state = ST_TAG_NAME;\n                    }\n                    break;\n                case ST_TAG_NAME:\n                    switch (c)\n                    {\n                        case ' ':\n                        case '\\t':\n                        case '\\r':\n                        case '\\n':\n                            state = ST_TAG_WS;\n                            gotTagName();\n                            // ## changed\n                            break;\n                        case '/':\n                            state = ST_EMPTY_TAG_SLASH;\n                            gotTagName();\n                            // ## changed\n                            break;\n                        case '>':\n                            gotTagName();\n                            // ## changed\n                            gotTag();\n                            break;\n                        default:\n                            tagname.write(Character.toLowerCase((char) c));\n                        // ## changed\n                    }\n                    break;\n                case ST_TAG_WS:\n                    switch (c)\n                    {\n                        case ' ':\n                        case '\\t':\n                        case '\\r':\n                        case '\\n':\n                            break;\n                        case '/':\n                            state = ST_EMPTY_TAG_SLASH;\n                            break;\n                        case '>':\n                            gotTag();\n                            break;\n                        case '?':\n                        // NOTE: if !inXMLDecl we fall through to default case\n                        default:\n                            if (!isStartTag)\n                            {\n                                // bit of a hack this...\n                                //errHandler.warning(\"Malformed tag: \"+buf, sysID, _line, _column);\n                                //err_continue(\"Malformed tag: \"+buf);\n                                toStart();\n                                // ## changed\n                                if (c == '<')\n                                {\n                                    gotPCDATA(true);\n                                    keepPCData = false;\n                                    state = ST_TAG_LT;\n                                }\n                                else\n                                {\n                                    // we get here e.g. if there's an end tag with attributes\n                                    state = ST_PCDATA;\n                                    pcData.reset();\n                                }\n                            }\n                            else\n                            {\n                                // FIXME: this accepts way too many first chars for attr name\n                                attrName.write(Character.toLowerCase((char) c));\n                                state = ST_NAME;\n                            }\n                    }\n                    break;\n                case ST_EMPTY_TAG_SLASH:\n                    if (c == '>')\n                    {\n                        //tagtype = TAG_EMPTY;\n                        gotTag();\n                        break;\n                    }\n                    else\n                    {\n                        // ERROR !? - can't throw Exception here - we go to next tag...\n                        state = ST_PCDATA;\n                        pcData.reset();\n                    }\n                    break;\n                case ST_NAME:\n                    switch (c)\n                    {\n                        case ' ':\n                        case '\\t':\n                        case '\\r':\n                        case '\\n':\n                            if (attrName.size() > 0)\n                            {\n                                state = ST_NAME_WS;\n                            }\n                            break;\n                        case '>':\n                            if (attrName.size() > 0)\n                            {\n                                gotAttr();\n                            }\n                            gotTag();\n                            break;\n                        case '=':\n                            state = ST_EQ;\n                            break;\n                        default:\n                            if (isCtlOrTspecial(c))\n                            {\n                                state = ST_PCDATA;\n                                pcData.reset();\n                            }\n                            else\n                            {\n                                attrName.write(Character.toLowerCase((char) c));\n                            }\n                    }\n                    break;\n                case ST_NAME_WS:\n                    // white-space between name and '='\n                    switch (c)\n                    {\n                        case ' ':\n                        case '\\t':\n                        case '\\r':\n                        case '\\n':\n                            break;\n                        case '=':\n                            state = ST_EQ;\n                            break;\n                        case '>':\n                            gotAttr();\n                            gotTag();\n                            break;\n                        default:\n                            if (isNameChar(c))\n                            {\n                                gotAttr();\n                                attrName.write(Character.toLowerCase((char) c));\n                                state = ST_TAG_WS;\n                            }\n                            else\n                            {\n                                state = ST_PCDATA;\n                                pcData.reset();\n                            }\n                    }\n                    break;\n                case ST_EQ:\n                    // white-space between '=' and value\n                    switch (c)\n                    {\n                        case ' ':\n                        case '\\t':\n                        case '\\r':\n                        case '\\n':\n                            break;\n                        case '\"':\n                            qchar = '\"';\n                            state = ST_VALUE_QUOTED;\n                            break;\n                        case '\\'':\n                            qchar = '\\'';\n                            state = ST_VALUE_QUOTED;\n                            break;\n                        default:\n                            if (isCtlOrTspecial(c))\n                            {\n                                state = ST_PCDATA;\n                                pcData.reset();\n                            }\n                            else\n                            {\n                                attrValue.write(c);\n                                state = ST_VALUE;\n                            }\n                    }\n                    break;\n                case ST_VALUE:\n                    switch (c)\n                    {\n                        case ' ':\n                        case '\\t':\n                        case '\\r':\n                        case '\\n':\n                            gotAttr();\n                            state = ST_TAG_WS;\n                            break;\n                        case '>':\n                            gotAttr();\n                            gotTag();\n                            break;\n                        /*\n                         *  case '/':     // FIXME: HTML knows things like <a href=a/b.html> !!\n                         *  gotAttr();\n                         *  state = ST_EMPTY_TAG_SLASH;\n                         *  break;\n                         */\n                        default:\n                            if (isValueBreaker(c))\n                            {\n                                state = ST_PCDATA;\n                                pcData.reset();\n                            }\n                            else\n                            {\n                                attrValue.write(c);\n                            }\n                    }\n                    break;\n                case ST_VALUE_QUOTED:\n                    if (c == qchar)\n                    {\n                        gotAttr();\n                        state = ST_TAG_WS;\n                    }\n                    else\n                    {\n                        attrValue.write(c);\n                    }\n                    break;\n                case ST_COMMENT:\n                    // we've seen \"...<!-\" by now\n                    try\n                    {\n                        if (c != '-')\n                        {\n                            //warning(\"Bad comment\");\n                            state = ST_PCDATA;\n                            pcData.reset();\n                            break;\n                        }\n                        // we're within comment - read till we see \"--\"\n                        while (true)\n                        {\n                            while (read_ex() != '-')\n                            {\n                                ;\n                            }\n                            if (read_ex() == '-')\n                            {\n                                break;\n                            }\n                        }\n                        // seen \"--\" - gotComment() reads past next '>'\n                        gotComment();\n                        //while (read_ex() != '>') ;\n                        //state = ST_PCDATA;\n                    }\n                    catch (EmptyInputStream ex)\n                    {\n                        gotPCDATA(false);\n                        keepPCData = false;\n                        break;\n                    }\n                    break;\n                case ST_IN_ANCHOR:\n                     // we've seen <a href=\"...\">. href is in linkValue. Read until\n                     // the next end tag, at most 200 characters.\n                     // (end tags are often ommited, i.e. <a ...>text</td>)\n                     // regards other tags as text\n                     // @todo: read until next </a> or a couple of other tags\n                    try\n                    {\n                        short count = 0;\n                        switch(c)\n                        {\n                            case '\\t':\n                            case '\\n':\n                            case '\\r':\n                                pcData.write(' ');\n                                break;\n                            default:\n                                pcData.write(c);\n                        }\n                        while(count < MAX_PCDATA_LENGTH)\n                        {\n                            count++;\n                            while(((c =read_ex()) != '<') && (count < MAX_PCDATA_LENGTH))\n                            {\n                                switch(c)\n                                {\n                                    case '\\t':\n                                    case '\\n':\n                                    case '\\r':\n                                        pcData.write(' ');\n                                        break;\n                                    default:\n                                        pcData.write(c);\n                                }\n                            }\n                            if(count >= MAX_PCDATA_LENGTH)\n                            {\n                                gotAnchor(false);\n                                break;\n                            }\n                            else\n                            {\n                                pcData.write(c);\n                                count++;\n                                if((c=read_ex()) == '/')\n                                {\n                                    gotAnchor(true);\n                                    isStartTag = false;\n                                    state = ST_TAG_NAME;\n                                    break;\n                                }\n                                else\n                                {\n                                    pcData.write(c);\n                                }\n                            }\n                        }\n                    }\n                    catch(EmptyInputStream ex)\n                    {\n\n                    }\n            }\n        }\n\n        // input stream ended - return rest, if any, as PCDATA\n        if (buf.size() > 0)\n        {\n            gotPCDATA(false);\n            keepPCData = false;\n            buf.reset();\n        }\n    }\n\n","sourceOld":"    /**\n     * Description of the Method\n     *\n     * @exception Exception  Description of the Exception\n     */\n    public void tokenize()\n        throws Exception\n    {\n        int c;\n\n\n        while ((c = read()) != -1)\n        {\n            switch (state)\n            {\n                case ST_START:\n                    switch (c)\n                    {\n                        case '<':\n                            state = ST_TAG_LT;\n                            linkTagType = LINKTYPE_NONE;\n                            linkAttrFound = false;\n                            linkAttrType = 0;\n                            linkValue = \"\";\n\n                            isStartTag = true;\n                            keepPCData= false;\n\n                            // until proven wrong\n                            tagname.reset();\n                            break;\n                        case ' ':\n                        case '\\t':\n                        case '\\r':\n                        case '\\n':\n                            if (!rcgnzWS)\n                            {\n                                break;\n                            }\n                        // else fall through\n                        default:\n                            state = ST_PCDATA;\n                            if(keepPCData)\n                            {\n                                pcData.write(c);\n                                pcDataLength++;\n                                if(pcDataLength > MAX_PCDATA_LENGTH)\n                                {\n                                    this.gotPCDATA(false);\n                                    keepPCData = false;\n                                }\n                            }\n\n                    }\n                    break;\n                case ST_PCDATA:\n                    if (c == '<')\n                    {\n                        if(keepPCData)\n                        {\n                            gotPCDATA(true);\n                            keepPCData = false;\n                        }\n                        linkTagType = LINKTYPE_NONE;\n                        linkAttrFound = false;\n                        linkAttrType = 0;\n                        linkValue = \"\";\n                        state = ST_TAG_LT;\n                    }\n                    else\n                    {\n                        if(keepPCData)\n                        {\n                            pcData.write(c);\n                            pcDataLength++;\n                            if(pcDataLength > MAX_PCDATA_LENGTH)\n                            {\n                                this.gotPCDATA(false);\n                                keepPCData = false;\n                            }\n\n                        }\n                    }\n                    break;\n                case ST_TAG_LT:\n                    switch (c)\n                    {\n                        case '/':\n                            isStartTag = false;\n                            state = ST_TAG_NAME;\n                            break;\n                        case '!':\n                            c = read();\n                            if ((c == '-' && !rcgnzComments) || (c == '[' && !rcgnzCDATA))\n                            {\n                                state = ST_PCDATA;\n                                pcData.reset();\n                                pcData.write(c);\n                                break;\n                            }\n                            if (c == '-')\n                            {\n                                state = ST_COMMENT;\n                            }\n                            else if (c == '[')\n                            {\n                                parseCDATA();\n                            }\n                            else\n                            {\n                                // FIXME: shouldn't be delivered as PCDATA\n                                //warning(\"Bad markup \" + buf);\n                                state = ST_PCDATA;\n                                pcData.reset();\n                                pcData.write(c);\n                            }\n                            break;\n                        case '?':\n                            parsePI();\n                            break;\n                        case ' ':\n                        case '\\t':\n                        case '\\r':\n                        case '\\n':\n                            state = ST_TAG_WS;\n                            break;\n                        default:\n                            tagname.write(Character.toLowerCase((char) c));\n                            // ## changed\n                            state = ST_TAG_NAME;\n                    }\n                    break;\n                case ST_TAG_NAME:\n                    switch (c)\n                    {\n                        case ' ':\n                        case '\\t':\n                        case '\\r':\n                        case '\\n':\n                            state = ST_TAG_WS;\n                            gotTagName();\n                            // ## changed\n                            break;\n                        case '/':\n                            state = ST_EMPTY_TAG_SLASH;\n                            gotTagName();\n                            // ## changed\n                            break;\n                        case '>':\n                            gotTagName();\n                            // ## changed\n                            gotTag();\n                            break;\n                        default:\n                            tagname.write(Character.toLowerCase((char) c));\n                        // ## changed\n                    }\n                    break;\n                case ST_TAG_WS:\n                    switch (c)\n                    {\n                        case ' ':\n                        case '\\t':\n                        case '\\r':\n                        case '\\n':\n                            break;\n                        case '/':\n                            state = ST_EMPTY_TAG_SLASH;\n                            break;\n                        case '>':\n                            gotTag();\n                            break;\n                        case '?':\n                        // NOTE: if !inXMLDecl we fall through to default case\n                        default:\n                            if (!isStartTag)\n                            {\n                                // bit of a hack this...\n                                //errHandler.warning(\"Malformed tag: \"+buf, sysID, _line, _column);\n                                //err_continue(\"Malformed tag: \"+buf);\n                                toStart();\n                                // ## changed\n                                if (c == '<')\n                                {\n                                    gotPCDATA(true);\n                                    keepPCData = false;\n                                    state = ST_TAG_LT;\n                                }\n                                else\n                                {\n                                    // we get here e.g. if there's an end tag with attributes\n                                    state = ST_PCDATA;\n                                    pcData.reset();\n                                }\n                            }\n                            else\n                            {\n                                // FIXME: this accepts way too many first chars for attr name\n                                attrName.write(Character.toLowerCase((char) c));\n                                state = ST_NAME;\n                            }\n                    }\n                    break;\n                case ST_EMPTY_TAG_SLASH:\n                    if (c == '>')\n                    {\n                        //tagtype = TAG_EMPTY;\n                        gotTag();\n                        break;\n                    }\n                    else\n                    {\n                        // ERROR !? - can't throw Exception here - we go to next tag...\n                        state = ST_PCDATA;\n                        pcData.reset();\n                    }\n                    break;\n                case ST_NAME:\n                    switch (c)\n                    {\n                        case ' ':\n                        case '\\t':\n                        case '\\r':\n                        case '\\n':\n                            if (attrName.size() > 0)\n                            {\n                                state = ST_NAME_WS;\n                            }\n                            break;\n                        case '>':\n                            if (attrName.size() > 0)\n                            {\n                                gotAttr();\n                            }\n                            gotTag();\n                            break;\n                        case '=':\n                            state = ST_EQ;\n                            break;\n                        default:\n                            if (isCtlOrTspecial(c))\n                            {\n                                state = ST_PCDATA;\n                                pcData.reset();\n                            }\n                            else\n                            {\n                                attrName.write(Character.toLowerCase((char) c));\n                            }\n                    }\n                    break;\n                case ST_NAME_WS:\n                    // white-space between name and '='\n                    switch (c)\n                    {\n                        case ' ':\n                        case '\\t':\n                        case '\\r':\n                        case '\\n':\n                            break;\n                        case '=':\n                            state = ST_EQ;\n                            break;\n                        case '>':\n                            gotAttr();\n                            gotTag();\n                            break;\n                        default:\n                            if (isNameChar(c))\n                            {\n                                gotAttr();\n                                attrName.write(Character.toLowerCase((char) c));\n                                state = ST_TAG_WS;\n                            }\n                            else\n                            {\n                                state = ST_PCDATA;\n                                pcData.reset();\n                            }\n                    }\n                    break;\n                case ST_EQ:\n                    // white-space between '=' and value\n                    switch (c)\n                    {\n                        case ' ':\n                        case '\\t':\n                        case '\\r':\n                        case '\\n':\n                            break;\n                        case '\"':\n                            qchar = '\"';\n                            state = ST_VALUE_QUOTED;\n                            break;\n                        case '\\'':\n                            qchar = '\\'';\n                            state = ST_VALUE_QUOTED;\n                            break;\n                        default:\n                            if (isCtlOrTspecial(c))\n                            {\n                                state = ST_PCDATA;\n                                pcData.reset();\n                            }\n                            else\n                            {\n                                attrValue.write(c);\n                                state = ST_VALUE;\n                            }\n                    }\n                    break;\n                case ST_VALUE:\n                    switch (c)\n                    {\n                        case ' ':\n                        case '\\t':\n                        case '\\r':\n                        case '\\n':\n                            gotAttr();\n                            state = ST_TAG_WS;\n                            break;\n                        case '>':\n                            gotAttr();\n                            gotTag();\n                            break;\n                        /*\n                         *  case '/':     // FIXME: HTML knows things like <a href=a/b.html> !!\n                         *  gotAttr();\n                         *  state = ST_EMPTY_TAG_SLASH;\n                         *  break;\n                         */\n                        default:\n                            if (isValueBreaker(c))\n                            {\n                                state = ST_PCDATA;\n                                pcData.reset();\n                            }\n                            else\n                            {\n                                attrValue.write(c);\n                            }\n                    }\n                    break;\n                case ST_VALUE_QUOTED:\n                    if (c == qchar)\n                    {\n                        gotAttr();\n                        state = ST_TAG_WS;\n                    }\n                    else\n                    {\n                        attrValue.write(c);\n                    }\n                    break;\n                case ST_COMMENT:\n                    // we've seen \"...<!-\" by now\n                    try\n                    {\n                        if (c != '-')\n                        {\n                            //warning(\"Bad comment\");\n                            state = ST_PCDATA;\n                            pcData.reset();\n                            break;\n                        }\n                        // we're within comment - read till we see \"--\"\n                        while (true)\n                        {\n                            while (read_ex() != '-')\n                            {\n                                ;\n                            }\n                            if (read_ex() == '-')\n                            {\n                                break;\n                            }\n                        }\n                        // seen \"--\" - gotComment() reads past next '>'\n                        gotComment();\n                        //while (read_ex() != '>') ;\n                        //state = ST_PCDATA;\n                    }\n                    catch (EmptyInputStream ex)\n                    {\n                        gotPCDATA(false);\n                        keepPCData = false;\n                        break;\n                    }\n                    break;\n                case ST_IN_ANCHOR:\n                     // we've seen <a href=\"...\">. href is in linkValue. Read until\n                     // the next end tag, at most 200 characters.\n                     // (end tags are often ommited, i.e. <a ...>text</td>)\n                     // regards other tags as text\n                     // todo: read until next </a> or a couple other tags\n                    try\n                    {\n                        short count = 0;\n                        switch(c)\n                        {\n                            case '\\t':\n                            case '\\n':\n                            case '\\r':\n                                pcData.write(' ');\n                                break;\n                            default:\n                                pcData.write(c);\n                        }\n                        while(count < MAX_PCDATA_LENGTH)\n                        {\n                            count++;\n                            while(((c =read_ex()) != '<') && (count < MAX_PCDATA_LENGTH))\n                            {\n                                switch(c)\n                                {\n                                    case '\\t':\n                                    case '\\n':\n                                    case '\\r':\n                                        pcData.write(' ');\n                                        break;\n                                    default:\n                                        pcData.write(c);\n                                }\n                            }\n                            if(count >= MAX_PCDATA_LENGTH)\n                            {\n                                gotAnchor(false);\n                                break;\n                            }\n                            else\n                            {\n                                pcData.write(c);\n                                count++;\n                                if((c=read_ex()) == '/')\n                                {\n                                    gotAnchor(true);\n                                    isStartTag = false;\n                                    state = ST_TAG_NAME;\n                                    break;\n                                }\n                                else\n                                {\n                                    pcData.write(c);\n                                }\n                            }\n                        }\n                    }\n                    catch(EmptyInputStream ex)\n                    {\n\n                    }\n            }\n        }\n\n        // input stream ended - return rest, if any, as PCDATA\n        if (buf.size() > 0)\n        {\n            gotPCDATA(false);\n            keepPCData = false;\n            buf.reset();\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"afc16d717d9ed1a8e45371668ca6de674164d624","date":1103345442,"type":4,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"/dev/null","pathOld":"sandbox/contributions/webcrawler-LARM/src/de/lanlab/larm/parser/Tokenizer#tokenize().mjava","sourceNew":null,"sourceOld":"    /**\n     * Description of the Method\n     *\n     * @exception Exception  Description of the Exception\n     */\n    public void tokenize()\n        throws Exception\n    {\n        int c;\n\n\n        while ((c = read()) != -1)\n        {\n            switch (state)\n            {\n                case ST_START:\n                    switch (c)\n                    {\n                        case '<':\n                            state = ST_TAG_LT;\n                            linkTagType = LINKTYPE_NONE;\n                            linkAttrFound = false;\n                            linkAttrType = 0;\n                            linkValue = \"\";\n\n                            isStartTag = true;\n                            keepPCData= false;\n\n                            // until proven wrong\n                            tagname.reset();\n                            break;\n                        case ' ':\n                        case '\\t':\n                        case '\\r':\n                        case '\\n':\n                            if (!rcgnzWS)\n                            {\n                                break;\n                            }\n                        // else fall through\n                        default:\n                            state = ST_PCDATA;\n                            if(keepPCData)\n                            {\n                                pcData.write(c);\n                                pcDataLength++;\n                                if(pcDataLength > MAX_PCDATA_LENGTH)\n                                {\n                                    this.gotPCDATA(false);\n                                    keepPCData = false;\n                                }\n                            }\n\n                    }\n                    break;\n                case ST_PCDATA:\n                    if (c == '<')\n                    {\n                        if(keepPCData)\n                        {\n                            gotPCDATA(true);\n                            keepPCData = false;\n                        }\n                        linkTagType = LINKTYPE_NONE;\n                        linkAttrFound = false;\n                        linkAttrType = 0;\n                        linkValue = \"\";\n                        state = ST_TAG_LT;\n                    }\n                    else\n                    {\n                        if(keepPCData)\n                        {\n                            pcData.write(c);\n                            pcDataLength++;\n                            if(pcDataLength > MAX_PCDATA_LENGTH)\n                            {\n                                this.gotPCDATA(false);\n                                keepPCData = false;\n                            }\n\n                        }\n                    }\n                    break;\n                case ST_TAG_LT:\n                    switch (c)\n                    {\n                        case '/':\n                            isStartTag = false;\n                            state = ST_TAG_NAME;\n                            break;\n                        case '!':\n                            c = read();\n                            if ((c == '-' && !rcgnzComments) || (c == '[' && !rcgnzCDATA))\n                            {\n                                state = ST_PCDATA;\n                                pcData.reset();\n                                pcData.write(c);\n                                break;\n                            }\n                            if (c == '-')\n                            {\n                                state = ST_COMMENT;\n                            }\n                            else if (c == '[')\n                            {\n                                parseCDATA();\n                            }\n                            else\n                            {\n                                // FIXME: shouldn't be delivered as PCDATA\n                                //warning(\"Bad markup \" + buf);\n                                state = ST_PCDATA;\n                                pcData.reset();\n                                pcData.write(c);\n                            }\n                            break;\n                        case '?':\n                            parsePI();\n                            break;\n                        case ' ':\n                        case '\\t':\n                        case '\\r':\n                        case '\\n':\n                            state = ST_TAG_WS;\n                            break;\n                        default:\n                            tagname.write(Character.toLowerCase((char) c));\n                            // ## changed\n                            state = ST_TAG_NAME;\n                    }\n                    break;\n                case ST_TAG_NAME:\n                    switch (c)\n                    {\n                        case ' ':\n                        case '\\t':\n                        case '\\r':\n                        case '\\n':\n                            state = ST_TAG_WS;\n                            gotTagName();\n                            // ## changed\n                            break;\n                        case '/':\n                            state = ST_EMPTY_TAG_SLASH;\n                            gotTagName();\n                            // ## changed\n                            break;\n                        case '>':\n                            gotTagName();\n                            // ## changed\n                            gotTag();\n                            break;\n                        default:\n                            tagname.write(Character.toLowerCase((char) c));\n                        // ## changed\n                    }\n                    break;\n                case ST_TAG_WS:\n                    switch (c)\n                    {\n                        case ' ':\n                        case '\\t':\n                        case '\\r':\n                        case '\\n':\n                            break;\n                        case '/':\n                            state = ST_EMPTY_TAG_SLASH;\n                            break;\n                        case '>':\n                            gotTag();\n                            break;\n                        case '?':\n                        // NOTE: if !inXMLDecl we fall through to default case\n                        default:\n                            if (!isStartTag)\n                            {\n                                // bit of a hack this...\n                                //errHandler.warning(\"Malformed tag: \"+buf, sysID, _line, _column);\n                                //err_continue(\"Malformed tag: \"+buf);\n                                toStart();\n                                // ## changed\n                                if (c == '<')\n                                {\n                                    gotPCDATA(true);\n                                    keepPCData = false;\n                                    state = ST_TAG_LT;\n                                }\n                                else\n                                {\n                                    // we get here e.g. if there's an end tag with attributes\n                                    state = ST_PCDATA;\n                                    pcData.reset();\n                                }\n                            }\n                            else\n                            {\n                                // FIXME: this accepts way too many first chars for attr name\n                                attrName.write(Character.toLowerCase((char) c));\n                                state = ST_NAME;\n                            }\n                    }\n                    break;\n                case ST_EMPTY_TAG_SLASH:\n                    if (c == '>')\n                    {\n                        //tagtype = TAG_EMPTY;\n                        gotTag();\n                        break;\n                    }\n                    else\n                    {\n                        // ERROR !? - can't throw Exception here - we go to next tag...\n                        state = ST_PCDATA;\n                        pcData.reset();\n                    }\n                    break;\n                case ST_NAME:\n                    switch (c)\n                    {\n                        case ' ':\n                        case '\\t':\n                        case '\\r':\n                        case '\\n':\n                            if (attrName.size() > 0)\n                            {\n                                state = ST_NAME_WS;\n                            }\n                            break;\n                        case '>':\n                            if (attrName.size() > 0)\n                            {\n                                gotAttr();\n                            }\n                            gotTag();\n                            break;\n                        case '=':\n                            state = ST_EQ;\n                            break;\n                        default:\n                            if (isCtlOrTspecial(c))\n                            {\n                                state = ST_PCDATA;\n                                pcData.reset();\n                            }\n                            else\n                            {\n                                attrName.write(Character.toLowerCase((char) c));\n                            }\n                    }\n                    break;\n                case ST_NAME_WS:\n                    // white-space between name and '='\n                    switch (c)\n                    {\n                        case ' ':\n                        case '\\t':\n                        case '\\r':\n                        case '\\n':\n                            break;\n                        case '=':\n                            state = ST_EQ;\n                            break;\n                        case '>':\n                            gotAttr();\n                            gotTag();\n                            break;\n                        default:\n                            if (isNameChar(c))\n                            {\n                                gotAttr();\n                                attrName.write(Character.toLowerCase((char) c));\n                                state = ST_TAG_WS;\n                            }\n                            else\n                            {\n                                state = ST_PCDATA;\n                                pcData.reset();\n                            }\n                    }\n                    break;\n                case ST_EQ:\n                    // white-space between '=' and value\n                    switch (c)\n                    {\n                        case ' ':\n                        case '\\t':\n                        case '\\r':\n                        case '\\n':\n                            break;\n                        case '\"':\n                            qchar = '\"';\n                            state = ST_VALUE_QUOTED;\n                            break;\n                        case '\\'':\n                            qchar = '\\'';\n                            state = ST_VALUE_QUOTED;\n                            break;\n                        default:\n                            if (isCtlOrTspecial(c))\n                            {\n                                state = ST_PCDATA;\n                                pcData.reset();\n                            }\n                            else\n                            {\n                                attrValue.write(c);\n                                state = ST_VALUE;\n                            }\n                    }\n                    break;\n                case ST_VALUE:\n                    switch (c)\n                    {\n                        case ' ':\n                        case '\\t':\n                        case '\\r':\n                        case '\\n':\n                            gotAttr();\n                            state = ST_TAG_WS;\n                            break;\n                        case '>':\n                            gotAttr();\n                            gotTag();\n                            break;\n                        /*\n                         *  case '/':     // FIXME: HTML knows things like <a href=a/b.html> !!\n                         *  gotAttr();\n                         *  state = ST_EMPTY_TAG_SLASH;\n                         *  break;\n                         */\n                        default:\n                            if (isValueBreaker(c))\n                            {\n                                state = ST_PCDATA;\n                                pcData.reset();\n                            }\n                            else\n                            {\n                                attrValue.write(c);\n                            }\n                    }\n                    break;\n                case ST_VALUE_QUOTED:\n                    if (c == qchar)\n                    {\n                        gotAttr();\n                        state = ST_TAG_WS;\n                    }\n                    else\n                    {\n                        attrValue.write(c);\n                    }\n                    break;\n                case ST_COMMENT:\n                    // we've seen \"...<!-\" by now\n                    try\n                    {\n                        if (c != '-')\n                        {\n                            //warning(\"Bad comment\");\n                            state = ST_PCDATA;\n                            pcData.reset();\n                            break;\n                        }\n                        // we're within comment - read till we see \"--\"\n                        while (true)\n                        {\n                            while (read_ex() != '-')\n                            {\n                                ;\n                            }\n                            if (read_ex() == '-')\n                            {\n                                break;\n                            }\n                        }\n                        // seen \"--\" - gotComment() reads past next '>'\n                        gotComment();\n                        //while (read_ex() != '>') ;\n                        //state = ST_PCDATA;\n                    }\n                    catch (EmptyInputStream ex)\n                    {\n                        gotPCDATA(false);\n                        keepPCData = false;\n                        break;\n                    }\n                    break;\n                case ST_IN_ANCHOR:\n                     // we've seen <a href=\"...\">. href is in linkValue. Read until\n                     // the next end tag, at most 200 characters.\n                     // (end tags are often ommited, i.e. <a ...>text</td>)\n                     // regards other tags as text\n                     // @todo: read until next </a> or a couple of other tags\n                    try\n                    {\n                        short count = 0;\n                        switch(c)\n                        {\n                            case '\\t':\n                            case '\\n':\n                            case '\\r':\n                                pcData.write(' ');\n                                break;\n                            default:\n                                pcData.write(c);\n                        }\n                        while(count < MAX_PCDATA_LENGTH)\n                        {\n                            count++;\n                            while(((c =read_ex()) != '<') && (count < MAX_PCDATA_LENGTH))\n                            {\n                                switch(c)\n                                {\n                                    case '\\t':\n                                    case '\\n':\n                                    case '\\r':\n                                        pcData.write(' ');\n                                        break;\n                                    default:\n                                        pcData.write(c);\n                                }\n                            }\n                            if(count >= MAX_PCDATA_LENGTH)\n                            {\n                                gotAnchor(false);\n                                break;\n                            }\n                            else\n                            {\n                                pcData.write(c);\n                                count++;\n                                if((c=read_ex()) == '/')\n                                {\n                                    gotAnchor(true);\n                                    isStartTag = false;\n                                    state = ST_TAG_NAME;\n                                    break;\n                                }\n                                else\n                                {\n                                    pcData.write(c);\n                                }\n                            }\n                        }\n                    }\n                    catch(EmptyInputStream ex)\n                    {\n\n                    }\n            }\n        }\n\n        // input stream ended - return rest, if any, as PCDATA\n        if (buf.size() > 0)\n        {\n            gotPCDATA(false);\n            keepPCData = false;\n            buf.reset();\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"12c7634bf3bb6da687c9b32ca310e7fb8fac8e1e":["21b526e3e9974b2651365fbae52a976e6fc77aa4"],"21b526e3e9974b2651365fbae52a976e6fc77aa4":["05d36e0b328ec96237035fbcca240e73631396e5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"afc16d717d9ed1a8e45371668ca6de674164d624":["12c7634bf3bb6da687c9b32ca310e7fb8fac8e1e"],"05d36e0b328ec96237035fbcca240e73631396e5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["afc16d717d9ed1a8e45371668ca6de674164d624"]},"commit2Childs":{"12c7634bf3bb6da687c9b32ca310e7fb8fac8e1e":["afc16d717d9ed1a8e45371668ca6de674164d624"],"21b526e3e9974b2651365fbae52a976e6fc77aa4":["12c7634bf3bb6da687c9b32ca310e7fb8fac8e1e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["05d36e0b328ec96237035fbcca240e73631396e5"],"afc16d717d9ed1a8e45371668ca6de674164d624":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"05d36e0b328ec96237035fbcca240e73631396e5":["21b526e3e9974b2651365fbae52a976e6fc77aa4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}