{"path":"lucene/sandbox/src/test/org/apache/lucene/search/intervals/TestIntervals#testBefore().mjava","commits":[{"id":"798f4c48c9561bff1dcf2652d51afc7dd0ceae3e","date":1546868039,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/search/intervals/TestIntervals#testBefore().mjava","pathOld":"/dev/null","sourceNew":"  public void testBefore() throws IOException {\n    IntervalsSource source = Intervals.before(Intervals.term(\"cold\"), Intervals.term(\"twelve\"));\n    checkIntervals(source, \"field1\", 2, new int[][]{\n        {},\n        {},\n        { 2, 2 },\n        {},\n        { 5, 5 },\n        {}\n    });\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"362cb5d910af28f1dadaddc4c7670d7d166b23c2","date":1547647156,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/search/intervals/TestIntervals#testBefore().mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/search/intervals/TestIntervals#testBefore().mjava","sourceNew":"  public void testBefore() throws IOException {\n    IntervalsSource source = Intervals.before(Intervals.term(\"cold\"), Intervals.term(\"twelve\"));\n    checkIntervals(source, \"field1\", 2, new int[][]{\n        {},\n        {},\n        { 2, 2 },\n        {},\n        { 5, 5 },\n        {}\n    });\n    assertEquals(1, source.minExtent());\n  }\n\n","sourceOld":"  public void testBefore() throws IOException {\n    IntervalsSource source = Intervals.before(Intervals.term(\"cold\"), Intervals.term(\"twelve\"));\n    checkIntervals(source, \"field1\", 2, new int[][]{\n        {},\n        {},\n        { 2, 2 },\n        {},\n        { 5, 5 },\n        {}\n    });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"97ee2282ff806e9bc9d705f389cf40451ab81c3e","date":1561721333,"type":5,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/queries/src/test/org/apache/lucene/queries/intervals/TestIntervals#testBefore().mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/search/intervals/TestIntervals#testBefore().mjava","sourceNew":"  public void testBefore() throws IOException {\n    IntervalsSource source = Intervals.before(Intervals.term(\"cold\"), Intervals.term(\"twelve\"));\n    checkIntervals(source, \"field1\", 2, new int[][]{\n        {},\n        {},\n        { 2, 2 },\n        {},\n        { 5, 5 },\n        {}\n    });\n    assertEquals(1, source.minExtent());\n  }\n\n","sourceOld":"  public void testBefore() throws IOException {\n    IntervalsSource source = Intervals.before(Intervals.term(\"cold\"), Intervals.term(\"twelve\"));\n    checkIntervals(source, \"field1\", 2, new int[][]{\n        {},\n        {},\n        { 2, 2 },\n        {},\n        { 5, 5 },\n        {}\n    });\n    assertEquals(1, source.minExtent());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"97ee2282ff806e9bc9d705f389cf40451ab81c3e":["362cb5d910af28f1dadaddc4c7670d7d166b23c2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"362cb5d910af28f1dadaddc4c7670d7d166b23c2":["798f4c48c9561bff1dcf2652d51afc7dd0ceae3e"],"798f4c48c9561bff1dcf2652d51afc7dd0ceae3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["97ee2282ff806e9bc9d705f389cf40451ab81c3e"]},"commit2Childs":{"97ee2282ff806e9bc9d705f389cf40451ab81c3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["798f4c48c9561bff1dcf2652d51afc7dd0ceae3e"],"362cb5d910af28f1dadaddc4c7670d7d166b23c2":["97ee2282ff806e9bc9d705f389cf40451ab81c3e"],"798f4c48c9561bff1dcf2652d51afc7dd0ceae3e":["362cb5d910af28f1dadaddc4c7670d7d166b23c2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}