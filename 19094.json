{"path":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/SpanishStemmer#r_attached_pronoun().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/SpanishStemmer#r_attached_pronoun().mjava","pathOld":"modules/analysis/common/src/java/org/tartarus/snowball/ext/SpanishStemmer#r_attached_pronoun().mjava","sourceNew":"        private boolean r_attached_pronoun() {\n            int among_var;\n            // (, line 67\n            // [, line 68\n            ket = cursor;\n            // substring, line 68\n            if (find_among_b(a_1, 13) == 0)\n            {\n                return false;\n            }\n            // ], line 68\n            bra = cursor;\n            // substring, line 72\n            among_var = find_among_b(a_2, 11);\n            if (among_var == 0)\n            {\n                return false;\n            }\n            // call RV, line 72\n            if (!r_RV())\n            {\n                return false;\n            }\n            switch(among_var) {\n                case 0:\n                    return false;\n                case 1:\n                    // (, line 73\n                    // ], line 73\n                    bra = cursor;\n                    // <-, line 73\n                    slice_from(\"iendo\");\n                    break;\n                case 2:\n                    // (, line 74\n                    // ], line 74\n                    bra = cursor;\n                    // <-, line 74\n                    slice_from(\"ando\");\n                    break;\n                case 3:\n                    // (, line 75\n                    // ], line 75\n                    bra = cursor;\n                    // <-, line 75\n                    slice_from(\"ar\");\n                    break;\n                case 4:\n                    // (, line 76\n                    // ], line 76\n                    bra = cursor;\n                    // <-, line 76\n                    slice_from(\"er\");\n                    break;\n                case 5:\n                    // (, line 77\n                    // ], line 77\n                    bra = cursor;\n                    // <-, line 77\n                    slice_from(\"ir\");\n                    break;\n                case 6:\n                    // (, line 81\n                    // delete, line 81\n                    slice_del();\n                    break;\n                case 7:\n                    // (, line 82\n                    // literal, line 82\n                    if (!(eq_s_b(1, \"u\")))\n                    {\n                        return false;\n                    }\n                    // delete, line 82\n                    slice_del();\n                    break;\n            }\n            return true;\n        }\n\n","sourceOld":"        private boolean r_attached_pronoun() {\n            int among_var;\n            // (, line 67\n            // [, line 68\n            ket = cursor;\n            // substring, line 68\n            if (find_among_b(a_1, 13) == 0)\n            {\n                return false;\n            }\n            // ], line 68\n            bra = cursor;\n            // substring, line 72\n            among_var = find_among_b(a_2, 11);\n            if (among_var == 0)\n            {\n                return false;\n            }\n            // call RV, line 72\n            if (!r_RV())\n            {\n                return false;\n            }\n            switch(among_var) {\n                case 0:\n                    return false;\n                case 1:\n                    // (, line 73\n                    // ], line 73\n                    bra = cursor;\n                    // <-, line 73\n                    slice_from(\"iendo\");\n                    break;\n                case 2:\n                    // (, line 74\n                    // ], line 74\n                    bra = cursor;\n                    // <-, line 74\n                    slice_from(\"ando\");\n                    break;\n                case 3:\n                    // (, line 75\n                    // ], line 75\n                    bra = cursor;\n                    // <-, line 75\n                    slice_from(\"ar\");\n                    break;\n                case 4:\n                    // (, line 76\n                    // ], line 76\n                    bra = cursor;\n                    // <-, line 76\n                    slice_from(\"er\");\n                    break;\n                case 5:\n                    // (, line 77\n                    // ], line 77\n                    bra = cursor;\n                    // <-, line 77\n                    slice_from(\"ir\");\n                    break;\n                case 6:\n                    // (, line 81\n                    // delete, line 81\n                    slice_del();\n                    break;\n                case 7:\n                    // (, line 82\n                    // literal, line 82\n                    if (!(eq_s_b(1, \"u\")))\n                    {\n                        return false;\n                    }\n                    // delete, line 82\n                    slice_del();\n                    break;\n            }\n            return true;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b6a6a9e301c12ab07b1d0428b5aad813fff317b3","date":1343846505,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/SpanishStemmer#r_attached_pronoun().mjava","pathOld":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/SpanishStemmer#r_attached_pronoun().mjava","sourceNew":"                private boolean r_attached_pronoun() {\n            int among_var;\n                    // (, line 67\n                    // [, line 68\n                    ket = cursor;\n                    // substring, line 68\n                    if (find_among_b(a_1, 13) == 0)\n                    {\n                        return false;\n                    }\n                    // ], line 68\n                    bra = cursor;\n                    // substring, line 72\n                    among_var = find_among_b(a_2, 11);\n                    if (among_var == 0)\n                    {\n                        return false;\n                    }\n                    // call RV, line 72\n                    if (!r_RV())\n                    {\n                        return false;\n                    }\n                    switch(among_var) {\n                        case 0:\n                            return false;\n                        case 1:\n                            // (, line 73\n                            // ], line 73\n                            bra = cursor;\n                            // <-, line 73\n                            slice_from(\"iendo\");\n                            break;\n                        case 2:\n                            // (, line 74\n                            // ], line 74\n                            bra = cursor;\n                            // <-, line 74\n                            slice_from(\"ando\");\n                            break;\n                        case 3:\n                            // (, line 75\n                            // ], line 75\n                            bra = cursor;\n                            // <-, line 75\n                            slice_from(\"ar\");\n                            break;\n                        case 4:\n                            // (, line 76\n                            // ], line 76\n                            bra = cursor;\n                            // <-, line 76\n                            slice_from(\"er\");\n                            break;\n                        case 5:\n                            // (, line 77\n                            // ], line 77\n                            bra = cursor;\n                            // <-, line 77\n                            slice_from(\"ir\");\n                            break;\n                        case 6:\n                            // (, line 81\n                            // delete, line 81\n                            slice_del();\n                            break;\n                        case 7:\n                            // (, line 82\n                            // literal, line 82\n                            if (!(eq_s_b(1, \"u\")))\n                            {\n                                return false;\n                            }\n                            // delete, line 82\n                            slice_del();\n                            break;\n                    }\n                    return true;\n                }\n\n","sourceOld":"        private boolean r_attached_pronoun() {\n            int among_var;\n            // (, line 67\n            // [, line 68\n            ket = cursor;\n            // substring, line 68\n            if (find_among_b(a_1, 13) == 0)\n            {\n                return false;\n            }\n            // ], line 68\n            bra = cursor;\n            // substring, line 72\n            among_var = find_among_b(a_2, 11);\n            if (among_var == 0)\n            {\n                return false;\n            }\n            // call RV, line 72\n            if (!r_RV())\n            {\n                return false;\n            }\n            switch(among_var) {\n                case 0:\n                    return false;\n                case 1:\n                    // (, line 73\n                    // ], line 73\n                    bra = cursor;\n                    // <-, line 73\n                    slice_from(\"iendo\");\n                    break;\n                case 2:\n                    // (, line 74\n                    // ], line 74\n                    bra = cursor;\n                    // <-, line 74\n                    slice_from(\"ando\");\n                    break;\n                case 3:\n                    // (, line 75\n                    // ], line 75\n                    bra = cursor;\n                    // <-, line 75\n                    slice_from(\"ar\");\n                    break;\n                case 4:\n                    // (, line 76\n                    // ], line 76\n                    bra = cursor;\n                    // <-, line 76\n                    slice_from(\"er\");\n                    break;\n                case 5:\n                    // (, line 77\n                    // ], line 77\n                    bra = cursor;\n                    // <-, line 77\n                    slice_from(\"ir\");\n                    break;\n                case 6:\n                    // (, line 81\n                    // delete, line 81\n                    slice_del();\n                    break;\n                case 7:\n                    // (, line 82\n                    // literal, line 82\n                    if (!(eq_s_b(1, \"u\")))\n                    {\n                        return false;\n                    }\n                    // delete, line 82\n                    slice_del();\n                    break;\n            }\n            return true;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8fd5be977c105554c6a7b68afcdbc511439723ab","date":1344115570,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/SpanishStemmer#r_attached_pronoun().mjava","pathOld":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/SpanishStemmer#r_attached_pronoun().mjava","sourceNew":"                private boolean r_attached_pronoun() {\n            int among_var;\n                    // (, line 67\n                    // [, line 68\n                    ket = cursor;\n                    // substring, line 68\n                    if (find_among_b(a_1, 13) == 0)\n                    {\n                        return false;\n                    }\n                    // ], line 68\n                    bra = cursor;\n                    // substring, line 72\n                    among_var = find_among_b(a_2, 11);\n                    if (among_var == 0)\n                    {\n                        return false;\n                    }\n                    // call RV, line 72\n                    if (!r_RV())\n                    {\n                        return false;\n                    }\n                    switch(among_var) {\n                        case 0:\n                            return false;\n                        case 1:\n                            // (, line 73\n                            // ], line 73\n                            bra = cursor;\n                            // <-, line 73\n                            slice_from(\"iendo\");\n                            break;\n                        case 2:\n                            // (, line 74\n                            // ], line 74\n                            bra = cursor;\n                            // <-, line 74\n                            slice_from(\"ando\");\n                            break;\n                        case 3:\n                            // (, line 75\n                            // ], line 75\n                            bra = cursor;\n                            // <-, line 75\n                            slice_from(\"ar\");\n                            break;\n                        case 4:\n                            // (, line 76\n                            // ], line 76\n                            bra = cursor;\n                            // <-, line 76\n                            slice_from(\"er\");\n                            break;\n                        case 5:\n                            // (, line 77\n                            // ], line 77\n                            bra = cursor;\n                            // <-, line 77\n                            slice_from(\"ir\");\n                            break;\n                        case 6:\n                            // (, line 81\n                            // delete, line 81\n                            slice_del();\n                            break;\n                        case 7:\n                            // (, line 82\n                            // literal, line 82\n                            if (!(eq_s_b(1, \"u\")))\n                            {\n                                return false;\n                            }\n                            // delete, line 82\n                            slice_del();\n                            break;\n                    }\n                    return true;\n                }\n\n","sourceOld":"        private boolean r_attached_pronoun() {\n            int among_var;\n            // (, line 67\n            // [, line 68\n            ket = cursor;\n            // substring, line 68\n            if (find_among_b(a_1, 13) == 0)\n            {\n                return false;\n            }\n            // ], line 68\n            bra = cursor;\n            // substring, line 72\n            among_var = find_among_b(a_2, 11);\n            if (among_var == 0)\n            {\n                return false;\n            }\n            // call RV, line 72\n            if (!r_RV())\n            {\n                return false;\n            }\n            switch(among_var) {\n                case 0:\n                    return false;\n                case 1:\n                    // (, line 73\n                    // ], line 73\n                    bra = cursor;\n                    // <-, line 73\n                    slice_from(\"iendo\");\n                    break;\n                case 2:\n                    // (, line 74\n                    // ], line 74\n                    bra = cursor;\n                    // <-, line 74\n                    slice_from(\"ando\");\n                    break;\n                case 3:\n                    // (, line 75\n                    // ], line 75\n                    bra = cursor;\n                    // <-, line 75\n                    slice_from(\"ar\");\n                    break;\n                case 4:\n                    // (, line 76\n                    // ], line 76\n                    bra = cursor;\n                    // <-, line 76\n                    slice_from(\"er\");\n                    break;\n                case 5:\n                    // (, line 77\n                    // ], line 77\n                    bra = cursor;\n                    // <-, line 77\n                    slice_from(\"ir\");\n                    break;\n                case 6:\n                    // (, line 81\n                    // delete, line 81\n                    slice_del();\n                    break;\n                case 7:\n                    // (, line 82\n                    // literal, line 82\n                    if (!(eq_s_b(1, \"u\")))\n                    {\n                        return false;\n                    }\n                    // delete, line 82\n                    slice_del();\n                    break;\n            }\n            return true;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d6f074e73200c07d54f242d3880a8da5a35ff97b","date":1344507653,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/SpanishStemmer#r_attached_pronoun().mjava","pathOld":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/SpanishStemmer#r_attached_pronoun().mjava","sourceNew":"                private boolean r_attached_pronoun() {\n            int among_var;\n                    // (, line 67\n                    // [, line 68\n                    ket = cursor;\n                    // substring, line 68\n                    if (find_among_b(a_1, 13) == 0)\n                    {\n                        return false;\n                    }\n                    // ], line 68\n                    bra = cursor;\n                    // substring, line 72\n                    among_var = find_among_b(a_2, 11);\n                    if (among_var == 0)\n                    {\n                        return false;\n                    }\n                    // call RV, line 72\n                    if (!r_RV())\n                    {\n                        return false;\n                    }\n                    switch(among_var) {\n                        case 0:\n                            return false;\n                        case 1:\n                            // (, line 73\n                            // ], line 73\n                            bra = cursor;\n                            // <-, line 73\n                            slice_from(\"iendo\");\n                            break;\n                        case 2:\n                            // (, line 74\n                            // ], line 74\n                            bra = cursor;\n                            // <-, line 74\n                            slice_from(\"ando\");\n                            break;\n                        case 3:\n                            // (, line 75\n                            // ], line 75\n                            bra = cursor;\n                            // <-, line 75\n                            slice_from(\"ar\");\n                            break;\n                        case 4:\n                            // (, line 76\n                            // ], line 76\n                            bra = cursor;\n                            // <-, line 76\n                            slice_from(\"er\");\n                            break;\n                        case 5:\n                            // (, line 77\n                            // ], line 77\n                            bra = cursor;\n                            // <-, line 77\n                            slice_from(\"ir\");\n                            break;\n                        case 6:\n                            // (, line 81\n                            // delete, line 81\n                            slice_del();\n                            break;\n                        case 7:\n                            // (, line 82\n                            // literal, line 82\n                            if (!(eq_s_b(1, \"u\")))\n                            {\n                                return false;\n                            }\n                            // delete, line 82\n                            slice_del();\n                            break;\n                    }\n                    return true;\n                }\n\n","sourceOld":"        private boolean r_attached_pronoun() {\n            int among_var;\n            // (, line 67\n            // [, line 68\n            ket = cursor;\n            // substring, line 68\n            if (find_among_b(a_1, 13) == 0)\n            {\n                return false;\n            }\n            // ], line 68\n            bra = cursor;\n            // substring, line 72\n            among_var = find_among_b(a_2, 11);\n            if (among_var == 0)\n            {\n                return false;\n            }\n            // call RV, line 72\n            if (!r_RV())\n            {\n                return false;\n            }\n            switch(among_var) {\n                case 0:\n                    return false;\n                case 1:\n                    // (, line 73\n                    // ], line 73\n                    bra = cursor;\n                    // <-, line 73\n                    slice_from(\"iendo\");\n                    break;\n                case 2:\n                    // (, line 74\n                    // ], line 74\n                    bra = cursor;\n                    // <-, line 74\n                    slice_from(\"ando\");\n                    break;\n                case 3:\n                    // (, line 75\n                    // ], line 75\n                    bra = cursor;\n                    // <-, line 75\n                    slice_from(\"ar\");\n                    break;\n                case 4:\n                    // (, line 76\n                    // ], line 76\n                    bra = cursor;\n                    // <-, line 76\n                    slice_from(\"er\");\n                    break;\n                case 5:\n                    // (, line 77\n                    // ], line 77\n                    bra = cursor;\n                    // <-, line 77\n                    slice_from(\"ir\");\n                    break;\n                case 6:\n                    // (, line 81\n                    // delete, line 81\n                    slice_del();\n                    break;\n                case 7:\n                    // (, line 82\n                    // literal, line 82\n                    if (!(eq_s_b(1, \"u\")))\n                    {\n                        return false;\n                    }\n                    // delete, line 82\n                    slice_del();\n                    break;\n            }\n            return true;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"09479cd2de06c67a115b7346a8e5de8af4d62e81","date":1581961081,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/SpanishStemmer#r_attached_pronoun().mjava","pathOld":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/SpanishStemmer#r_attached_pronoun().mjava","sourceNew":"private boolean r_attached_pronoun() {\n  int among_var;\n  ket = cursor;\n  if (find_among_b(a_1) == 0)\n  {\n    return false;\n  }\n  bra = cursor;\n  among_var = find_among_b(a_2);\n  if (among_var == 0)\n  {\n    return false;\n  }\n  if (!r_RV())\n  {\n    return false;\n  }\n  switch (among_var) {\n    case 1:\n      bra = cursor;\n      slice_from(\"iendo\");\n      break;\n    case 2:\n      bra = cursor;\n      slice_from(\"ando\");\n      break;\n    case 3:\n      bra = cursor;\n      slice_from(\"ar\");\n      break;\n    case 4:\n      bra = cursor;\n      slice_from(\"er\");\n      break;\n    case 5:\n      bra = cursor;\n      slice_from(\"ir\");\n      break;\n    case 6:\n      slice_del();\n      break;\n    case 7:\n      if (!(eq_s_b(\"u\")))\n      {\n        return false;\n      }\n      slice_del();\n      break;\n  }\n  return true;\n}\n\n","sourceOld":"                private boolean r_attached_pronoun() {\n            int among_var;\n                    // (, line 67\n                    // [, line 68\n                    ket = cursor;\n                    // substring, line 68\n                    if (find_among_b(a_1, 13) == 0)\n                    {\n                        return false;\n                    }\n                    // ], line 68\n                    bra = cursor;\n                    // substring, line 72\n                    among_var = find_among_b(a_2, 11);\n                    if (among_var == 0)\n                    {\n                        return false;\n                    }\n                    // call RV, line 72\n                    if (!r_RV())\n                    {\n                        return false;\n                    }\n                    switch(among_var) {\n                        case 0:\n                            return false;\n                        case 1:\n                            // (, line 73\n                            // ], line 73\n                            bra = cursor;\n                            // <-, line 73\n                            slice_from(\"iendo\");\n                            break;\n                        case 2:\n                            // (, line 74\n                            // ], line 74\n                            bra = cursor;\n                            // <-, line 74\n                            slice_from(\"ando\");\n                            break;\n                        case 3:\n                            // (, line 75\n                            // ], line 75\n                            bra = cursor;\n                            // <-, line 75\n                            slice_from(\"ar\");\n                            break;\n                        case 4:\n                            // (, line 76\n                            // ], line 76\n                            bra = cursor;\n                            // <-, line 76\n                            slice_from(\"er\");\n                            break;\n                        case 5:\n                            // (, line 77\n                            // ], line 77\n                            bra = cursor;\n                            // <-, line 77\n                            slice_from(\"ir\");\n                            break;\n                        case 6:\n                            // (, line 81\n                            // delete, line 81\n                            slice_del();\n                            break;\n                        case 7:\n                            // (, line 82\n                            // literal, line 82\n                            if (!(eq_s_b(1, \"u\")))\n                            {\n                                return false;\n                            }\n                            // delete, line 82\n                            slice_del();\n                            break;\n                    }\n                    return true;\n                }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d6f074e73200c07d54f242d3880a8da5a35ff97b":["b89678825b68eccaf09e6ab71675fc0b0af1e099","b6a6a9e301c12ab07b1d0428b5aad813fff317b3"],"b6a6a9e301c12ab07b1d0428b5aad813fff317b3":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"8fd5be977c105554c6a7b68afcdbc511439723ab":["b89678825b68eccaf09e6ab71675fc0b0af1e099","b6a6a9e301c12ab07b1d0428b5aad813fff317b3"],"09479cd2de06c67a115b7346a8e5de8af4d62e81":["b6a6a9e301c12ab07b1d0428b5aad813fff317b3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["09479cd2de06c67a115b7346a8e5de8af4d62e81"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["d6f074e73200c07d54f242d3880a8da5a35ff97b","b6a6a9e301c12ab07b1d0428b5aad813fff317b3","8fd5be977c105554c6a7b68afcdbc511439723ab"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"d6f074e73200c07d54f242d3880a8da5a35ff97b":[],"b6a6a9e301c12ab07b1d0428b5aad813fff317b3":["d6f074e73200c07d54f242d3880a8da5a35ff97b","8fd5be977c105554c6a7b68afcdbc511439723ab","09479cd2de06c67a115b7346a8e5de8af4d62e81"],"8fd5be977c105554c6a7b68afcdbc511439723ab":[],"09479cd2de06c67a115b7346a8e5de8af4d62e81":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d6f074e73200c07d54f242d3880a8da5a35ff97b","8fd5be977c105554c6a7b68afcdbc511439723ab","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}