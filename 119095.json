{"path":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterPerThread#DocumentsWriterPerThread(String,Directory,LiveIndexWriterConfig,InfoStream,DocumentsWriterDeleteQueue,FieldInfos.Builder,AtomicLong,boolean).mjava","commits":[{"id":"2165505a28a4f836f04ed5eb23bc64a6faae1b1e","date":1418824313,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterPerThread#DocumentsWriterPerThread(String,Directory,LiveIndexWriterConfig,InfoStream,DocumentsWriterDeleteQueue,FieldInfos.Builder,AtomicLong,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterPerThread#DocumentsWriterPerThread(String,Directory,LiveIndexWriterConfig,InfoStream,DocumentsWriterDeleteQueue,FieldInfos.Builder,AtomicLong).mjava","sourceNew":"  public DocumentsWriterPerThread(String segmentName, Directory directory, LiveIndexWriterConfig indexWriterConfig, InfoStream infoStream, DocumentsWriterDeleteQueue deleteQueue,\n                                  FieldInfos.Builder fieldInfos, AtomicLong pendingNumDocs, boolean enableTestPoints) throws IOException {\n    this.directoryOrig = directory;\n    this.directory = new TrackingDirectoryWrapper(directory);\n    this.fieldInfos = fieldInfos;\n    this.indexWriterConfig = indexWriterConfig;\n    this.infoStream = infoStream;\n    this.codec = indexWriterConfig.getCodec();\n    this.docState = new DocState(this, infoStream);\n    this.docState.similarity = indexWriterConfig.getSimilarity();\n    this.pendingNumDocs = pendingNumDocs;\n    bytesUsed = Counter.newCounter();\n    byteBlockAllocator = new DirectTrackingAllocator(bytesUsed);\n    pendingUpdates = new BufferedUpdates();\n    intBlockAllocator = new IntBlockAllocator(bytesUsed);\n    this.deleteQueue = deleteQueue;\n    assert numDocsInRAM == 0 : \"num docs \" + numDocsInRAM;\n    pendingUpdates.clear();\n    deleteSlice = deleteQueue.newSlice();\n   \n    segmentInfo = new SegmentInfo(directoryOrig, Version.LATEST, segmentName, -1, false, codec, null, StringHelper.randomId(), new HashMap<>());\n    assert numDocsInRAM == 0;\n    if (INFO_VERBOSE && infoStream.isEnabled(\"DWPT\")) {\n      infoStream.message(\"DWPT\", Thread.currentThread().getName() + \" init seg=\" + segmentName + \" delQueue=\" + deleteQueue);  \n    }\n    // this should be the last call in the ctor \n    // it really sucks that we need to pull this within the ctor and pass this ref to the chain!\n    consumer = indexWriterConfig.getIndexingChain().getChain(this);\n    this.enableTestPoints = enableTestPoints;\n  }\n\n","sourceOld":"  public DocumentsWriterPerThread(String segmentName, Directory directory, LiveIndexWriterConfig indexWriterConfig, InfoStream infoStream, DocumentsWriterDeleteQueue deleteQueue,\n                                  FieldInfos.Builder fieldInfos, AtomicLong pendingNumDocs) throws IOException {\n    this.directoryOrig = directory;\n    this.directory = new TrackingDirectoryWrapper(directory);\n    this.fieldInfos = fieldInfos;\n    this.indexWriterConfig = indexWriterConfig;\n    this.infoStream = infoStream;\n    this.codec = indexWriterConfig.getCodec();\n    this.docState = new DocState(this, infoStream);\n    this.docState.similarity = indexWriterConfig.getSimilarity();\n    this.pendingNumDocs = pendingNumDocs;\n    bytesUsed = Counter.newCounter();\n    byteBlockAllocator = new DirectTrackingAllocator(bytesUsed);\n    pendingUpdates = new BufferedUpdates();\n    intBlockAllocator = new IntBlockAllocator(bytesUsed);\n    this.deleteQueue = deleteQueue;\n    assert numDocsInRAM == 0 : \"num docs \" + numDocsInRAM;\n    pendingUpdates.clear();\n    deleteSlice = deleteQueue.newSlice();\n   \n    segmentInfo = new SegmentInfo(directoryOrig, Version.LATEST, segmentName, -1, false, codec, null, StringHelper.randomId(), new HashMap<>());\n    assert numDocsInRAM == 0;\n    if (INFO_VERBOSE && infoStream.isEnabled(\"DWPT\")) {\n      infoStream.message(\"DWPT\", Thread.currentThread().getName() + \" init seg=\" + segmentName + \" delQueue=\" + deleteQueue);  \n    }\n    // this should be the last call in the ctor \n    // it really sucks that we need to pull this within the ctor and pass this ref to the chain!\n    consumer = indexWriterConfig.getIndexingChain().getChain(this);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"79700663e164dece87bed4adfd3e28bab6cb1385","date":1425241849,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterPerThread#DocumentsWriterPerThread(String,Directory,LiveIndexWriterConfig,InfoStream,DocumentsWriterDeleteQueue,FieldInfos.Builder,AtomicLong,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterPerThread#DocumentsWriterPerThread(String,Directory,LiveIndexWriterConfig,InfoStream,DocumentsWriterDeleteQueue,FieldInfos.Builder,AtomicLong,boolean).mjava","sourceNew":"  public DocumentsWriterPerThread(String segmentName, Directory directory, LiveIndexWriterConfig indexWriterConfig, InfoStream infoStream, DocumentsWriterDeleteQueue deleteQueue,\n                                  FieldInfos.Builder fieldInfos, AtomicLong pendingNumDocs, boolean enableTestPoints) throws IOException {\n    this.directoryOrig = directory;\n    this.directory = new TrackingDirectoryWrapper(directory);\n    this.fieldInfos = fieldInfos;\n    this.indexWriterConfig = indexWriterConfig;\n    this.infoStream = infoStream;\n    this.codec = indexWriterConfig.getCodec();\n    this.docState = new DocState(this, infoStream);\n    this.docState.similarity = indexWriterConfig.getSimilarity();\n    this.pendingNumDocs = pendingNumDocs;\n    bytesUsed = Counter.newCounter();\n    byteBlockAllocator = new DirectTrackingAllocator(bytesUsed);\n    pendingUpdates = new BufferedUpdates();\n    intBlockAllocator = new IntBlockAllocator(bytesUsed);\n    this.deleteQueue = deleteQueue;\n    assert numDocsInRAM == 0 : \"num docs \" + numDocsInRAM;\n    pendingUpdates.clear();\n    deleteSlice = deleteQueue.newSlice();\n   \n    segmentInfo = new SegmentInfo(directoryOrig, Version.LATEST, segmentName, -1, false, codec, Collections.emptyMap(), StringHelper.randomId(), new HashMap<>());\n    assert numDocsInRAM == 0;\n    if (INFO_VERBOSE && infoStream.isEnabled(\"DWPT\")) {\n      infoStream.message(\"DWPT\", Thread.currentThread().getName() + \" init seg=\" + segmentName + \" delQueue=\" + deleteQueue);  \n    }\n    // this should be the last call in the ctor \n    // it really sucks that we need to pull this within the ctor and pass this ref to the chain!\n    consumer = indexWriterConfig.getIndexingChain().getChain(this);\n    this.enableTestPoints = enableTestPoints;\n  }\n\n","sourceOld":"  public DocumentsWriterPerThread(String segmentName, Directory directory, LiveIndexWriterConfig indexWriterConfig, InfoStream infoStream, DocumentsWriterDeleteQueue deleteQueue,\n                                  FieldInfos.Builder fieldInfos, AtomicLong pendingNumDocs, boolean enableTestPoints) throws IOException {\n    this.directoryOrig = directory;\n    this.directory = new TrackingDirectoryWrapper(directory);\n    this.fieldInfos = fieldInfos;\n    this.indexWriterConfig = indexWriterConfig;\n    this.infoStream = infoStream;\n    this.codec = indexWriterConfig.getCodec();\n    this.docState = new DocState(this, infoStream);\n    this.docState.similarity = indexWriterConfig.getSimilarity();\n    this.pendingNumDocs = pendingNumDocs;\n    bytesUsed = Counter.newCounter();\n    byteBlockAllocator = new DirectTrackingAllocator(bytesUsed);\n    pendingUpdates = new BufferedUpdates();\n    intBlockAllocator = new IntBlockAllocator(bytesUsed);\n    this.deleteQueue = deleteQueue;\n    assert numDocsInRAM == 0 : \"num docs \" + numDocsInRAM;\n    pendingUpdates.clear();\n    deleteSlice = deleteQueue.newSlice();\n   \n    segmentInfo = new SegmentInfo(directoryOrig, Version.LATEST, segmentName, -1, false, codec, null, StringHelper.randomId(), new HashMap<>());\n    assert numDocsInRAM == 0;\n    if (INFO_VERBOSE && infoStream.isEnabled(\"DWPT\")) {\n      infoStream.message(\"DWPT\", Thread.currentThread().getName() + \" init seg=\" + segmentName + \" delQueue=\" + deleteQueue);  \n    }\n    // this should be the last call in the ctor \n    // it really sucks that we need to pull this within the ctor and pass this ref to the chain!\n    consumer = indexWriterConfig.getIndexingChain().getChain(this);\n    this.enableTestPoints = enableTestPoints;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"299a2348fa24151d150182211b6208a38e5e3450","date":1425304608,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterPerThread#DocumentsWriterPerThread(String,Directory,LiveIndexWriterConfig,InfoStream,DocumentsWriterDeleteQueue,FieldInfos.Builder,AtomicLong,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterPerThread#DocumentsWriterPerThread(String,Directory,LiveIndexWriterConfig,InfoStream,DocumentsWriterDeleteQueue,FieldInfos.Builder,AtomicLong,boolean).mjava","sourceNew":"  public DocumentsWriterPerThread(String segmentName, Directory directory, LiveIndexWriterConfig indexWriterConfig, InfoStream infoStream, DocumentsWriterDeleteQueue deleteQueue,\n                                  FieldInfos.Builder fieldInfos, AtomicLong pendingNumDocs, boolean enableTestPoints) throws IOException {\n    this.directoryOrig = directory;\n    this.directory = new TrackingDirectoryWrapper(directory);\n    this.fieldInfos = fieldInfos;\n    this.indexWriterConfig = indexWriterConfig;\n    this.infoStream = infoStream;\n    this.codec = indexWriterConfig.getCodec();\n    this.docState = new DocState(this, infoStream);\n    this.docState.similarity = indexWriterConfig.getSimilarity();\n    this.pendingNumDocs = pendingNumDocs;\n    bytesUsed = Counter.newCounter();\n    byteBlockAllocator = new DirectTrackingAllocator(bytesUsed);\n    pendingUpdates = new BufferedUpdates();\n    intBlockAllocator = new IntBlockAllocator(bytesUsed);\n    this.deleteQueue = deleteQueue;\n    assert numDocsInRAM == 0 : \"num docs \" + numDocsInRAM;\n    pendingUpdates.clear();\n    deleteSlice = deleteQueue.newSlice();\n   \n    segmentInfo = new SegmentInfo(directoryOrig, Version.LATEST, segmentName, -1, false, codec, Collections.emptyMap(), StringHelper.randomId(), new HashMap<>());\n    assert numDocsInRAM == 0;\n    if (INFO_VERBOSE && infoStream.isEnabled(\"DWPT\")) {\n      infoStream.message(\"DWPT\", Thread.currentThread().getName() + \" init seg=\" + segmentName + \" delQueue=\" + deleteQueue);  \n    }\n    // this should be the last call in the ctor \n    // it really sucks that we need to pull this within the ctor and pass this ref to the chain!\n    consumer = indexWriterConfig.getIndexingChain().getChain(this);\n    this.enableTestPoints = enableTestPoints;\n  }\n\n","sourceOld":"  public DocumentsWriterPerThread(String segmentName, Directory directory, LiveIndexWriterConfig indexWriterConfig, InfoStream infoStream, DocumentsWriterDeleteQueue deleteQueue,\n                                  FieldInfos.Builder fieldInfos, AtomicLong pendingNumDocs, boolean enableTestPoints) throws IOException {\n    this.directoryOrig = directory;\n    this.directory = new TrackingDirectoryWrapper(directory);\n    this.fieldInfos = fieldInfos;\n    this.indexWriterConfig = indexWriterConfig;\n    this.infoStream = infoStream;\n    this.codec = indexWriterConfig.getCodec();\n    this.docState = new DocState(this, infoStream);\n    this.docState.similarity = indexWriterConfig.getSimilarity();\n    this.pendingNumDocs = pendingNumDocs;\n    bytesUsed = Counter.newCounter();\n    byteBlockAllocator = new DirectTrackingAllocator(bytesUsed);\n    pendingUpdates = new BufferedUpdates();\n    intBlockAllocator = new IntBlockAllocator(bytesUsed);\n    this.deleteQueue = deleteQueue;\n    assert numDocsInRAM == 0 : \"num docs \" + numDocsInRAM;\n    pendingUpdates.clear();\n    deleteSlice = deleteQueue.newSlice();\n   \n    segmentInfo = new SegmentInfo(directoryOrig, Version.LATEST, segmentName, -1, false, codec, null, StringHelper.randomId(), new HashMap<>());\n    assert numDocsInRAM == 0;\n    if (INFO_VERBOSE && infoStream.isEnabled(\"DWPT\")) {\n      infoStream.message(\"DWPT\", Thread.currentThread().getName() + \" init seg=\" + segmentName + \" delQueue=\" + deleteQueue);  \n    }\n    // this should be the last call in the ctor \n    // it really sucks that we need to pull this within the ctor and pass this ref to the chain!\n    consumer = indexWriterConfig.getIndexingChain().getChain(this);\n    this.enableTestPoints = enableTestPoints;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterPerThread#DocumentsWriterPerThread(String,Directory,LiveIndexWriterConfig,InfoStream,DocumentsWriterDeleteQueue,FieldInfos.Builder,AtomicLong,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterPerThread#DocumentsWriterPerThread(String,Directory,LiveIndexWriterConfig,InfoStream,DocumentsWriterDeleteQueue,FieldInfos.Builder,AtomicLong,boolean).mjava","sourceNew":"  public DocumentsWriterPerThread(String segmentName, Directory directory, LiveIndexWriterConfig indexWriterConfig, InfoStream infoStream, DocumentsWriterDeleteQueue deleteQueue,\n                                  FieldInfos.Builder fieldInfos, AtomicLong pendingNumDocs, boolean enableTestPoints) throws IOException {\n    this.directoryOrig = directory;\n    this.directory = new TrackingDirectoryWrapper(directory);\n    this.fieldInfos = fieldInfos;\n    this.indexWriterConfig = indexWriterConfig;\n    this.infoStream = infoStream;\n    this.codec = indexWriterConfig.getCodec();\n    this.docState = new DocState(this, infoStream);\n    this.docState.similarity = indexWriterConfig.getSimilarity();\n    this.pendingNumDocs = pendingNumDocs;\n    bytesUsed = Counter.newCounter();\n    byteBlockAllocator = new DirectTrackingAllocator(bytesUsed);\n    pendingUpdates = new BufferedUpdates();\n    intBlockAllocator = new IntBlockAllocator(bytesUsed);\n    this.deleteQueue = deleteQueue;\n    assert numDocsInRAM == 0 : \"num docs \" + numDocsInRAM;\n    pendingUpdates.clear();\n    deleteSlice = deleteQueue.newSlice();\n   \n    segmentInfo = new SegmentInfo(directoryOrig, Version.LATEST, segmentName, -1, false, codec, Collections.emptyMap(), StringHelper.randomId(), new HashMap<>());\n    assert numDocsInRAM == 0;\n    if (INFO_VERBOSE && infoStream.isEnabled(\"DWPT\")) {\n      infoStream.message(\"DWPT\", Thread.currentThread().getName() + \" init seg=\" + segmentName + \" delQueue=\" + deleteQueue);  \n    }\n    // this should be the last call in the ctor \n    // it really sucks that we need to pull this within the ctor and pass this ref to the chain!\n    consumer = indexWriterConfig.getIndexingChain().getChain(this);\n    this.enableTestPoints = enableTestPoints;\n  }\n\n","sourceOld":"  public DocumentsWriterPerThread(String segmentName, Directory directory, LiveIndexWriterConfig indexWriterConfig, InfoStream infoStream, DocumentsWriterDeleteQueue deleteQueue,\n                                  FieldInfos.Builder fieldInfos, AtomicLong pendingNumDocs, boolean enableTestPoints) throws IOException {\n    this.directoryOrig = directory;\n    this.directory = new TrackingDirectoryWrapper(directory);\n    this.fieldInfos = fieldInfos;\n    this.indexWriterConfig = indexWriterConfig;\n    this.infoStream = infoStream;\n    this.codec = indexWriterConfig.getCodec();\n    this.docState = new DocState(this, infoStream);\n    this.docState.similarity = indexWriterConfig.getSimilarity();\n    this.pendingNumDocs = pendingNumDocs;\n    bytesUsed = Counter.newCounter();\n    byteBlockAllocator = new DirectTrackingAllocator(bytesUsed);\n    pendingUpdates = new BufferedUpdates();\n    intBlockAllocator = new IntBlockAllocator(bytesUsed);\n    this.deleteQueue = deleteQueue;\n    assert numDocsInRAM == 0 : \"num docs \" + numDocsInRAM;\n    pendingUpdates.clear();\n    deleteSlice = deleteQueue.newSlice();\n   \n    segmentInfo = new SegmentInfo(directoryOrig, Version.LATEST, segmentName, -1, false, codec, null, StringHelper.randomId(), new HashMap<>());\n    assert numDocsInRAM == 0;\n    if (INFO_VERBOSE && infoStream.isEnabled(\"DWPT\")) {\n      infoStream.message(\"DWPT\", Thread.currentThread().getName() + \" init seg=\" + segmentName + \" delQueue=\" + deleteQueue);  \n    }\n    // this should be the last call in the ctor \n    // it really sucks that we need to pull this within the ctor and pass this ref to the chain!\n    consumer = indexWriterConfig.getIndexingChain().getChain(this);\n    this.enableTestPoints = enableTestPoints;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"618635065f043788c9e034f96ca5cd5cea1b4592","date":1433442044,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterPerThread#DocumentsWriterPerThread(String,Directory,Directory,LiveIndexWriterConfig,InfoStream,DocumentsWriterDeleteQueue,FieldInfos.Builder,AtomicLong,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterPerThread#DocumentsWriterPerThread(String,Directory,LiveIndexWriterConfig,InfoStream,DocumentsWriterDeleteQueue,FieldInfos.Builder,AtomicLong,boolean).mjava","sourceNew":"  public DocumentsWriterPerThread(String segmentName, Directory directoryOrig, Directory directory, LiveIndexWriterConfig indexWriterConfig, InfoStream infoStream, DocumentsWriterDeleteQueue deleteQueue,\n                                  FieldInfos.Builder fieldInfos, AtomicLong pendingNumDocs, boolean enableTestPoints) throws IOException {\n    this.directoryOrig = directoryOrig;\n    this.directory = new TrackingDirectoryWrapper(directory);\n    this.fieldInfos = fieldInfos;\n    this.indexWriterConfig = indexWriterConfig;\n    this.infoStream = infoStream;\n    this.codec = indexWriterConfig.getCodec();\n    this.docState = new DocState(this, infoStream);\n    this.docState.similarity = indexWriterConfig.getSimilarity();\n    this.pendingNumDocs = pendingNumDocs;\n    bytesUsed = Counter.newCounter();\n    byteBlockAllocator = new DirectTrackingAllocator(bytesUsed);\n    pendingUpdates = new BufferedUpdates();\n    intBlockAllocator = new IntBlockAllocator(bytesUsed);\n    this.deleteQueue = deleteQueue;\n    assert numDocsInRAM == 0 : \"num docs \" + numDocsInRAM;\n    pendingUpdates.clear();\n    deleteSlice = deleteQueue.newSlice();\n   \n    segmentInfo = new SegmentInfo(directoryOrig, Version.LATEST, segmentName, -1, false, codec, Collections.emptyMap(), StringHelper.randomId(), new HashMap<>());\n    assert numDocsInRAM == 0;\n    if (INFO_VERBOSE && infoStream.isEnabled(\"DWPT\")) {\n      infoStream.message(\"DWPT\", Thread.currentThread().getName() + \" init seg=\" + segmentName + \" delQueue=\" + deleteQueue);  \n    }\n    // this should be the last call in the ctor \n    // it really sucks that we need to pull this within the ctor and pass this ref to the chain!\n    consumer = indexWriterConfig.getIndexingChain().getChain(this);\n    this.enableTestPoints = enableTestPoints;\n  }\n\n","sourceOld":"  public DocumentsWriterPerThread(String segmentName, Directory directory, LiveIndexWriterConfig indexWriterConfig, InfoStream infoStream, DocumentsWriterDeleteQueue deleteQueue,\n                                  FieldInfos.Builder fieldInfos, AtomicLong pendingNumDocs, boolean enableTestPoints) throws IOException {\n    this.directoryOrig = directory;\n    this.directory = new TrackingDirectoryWrapper(directory);\n    this.fieldInfos = fieldInfos;\n    this.indexWriterConfig = indexWriterConfig;\n    this.infoStream = infoStream;\n    this.codec = indexWriterConfig.getCodec();\n    this.docState = new DocState(this, infoStream);\n    this.docState.similarity = indexWriterConfig.getSimilarity();\n    this.pendingNumDocs = pendingNumDocs;\n    bytesUsed = Counter.newCounter();\n    byteBlockAllocator = new DirectTrackingAllocator(bytesUsed);\n    pendingUpdates = new BufferedUpdates();\n    intBlockAllocator = new IntBlockAllocator(bytesUsed);\n    this.deleteQueue = deleteQueue;\n    assert numDocsInRAM == 0 : \"num docs \" + numDocsInRAM;\n    pendingUpdates.clear();\n    deleteSlice = deleteQueue.newSlice();\n   \n    segmentInfo = new SegmentInfo(directoryOrig, Version.LATEST, segmentName, -1, false, codec, Collections.emptyMap(), StringHelper.randomId(), new HashMap<>());\n    assert numDocsInRAM == 0;\n    if (INFO_VERBOSE && infoStream.isEnabled(\"DWPT\")) {\n      infoStream.message(\"DWPT\", Thread.currentThread().getName() + \" init seg=\" + segmentName + \" delQueue=\" + deleteQueue);  \n    }\n    // this should be the last call in the ctor \n    // it really sucks that we need to pull this within the ctor and pass this ref to the chain!\n    consumer = indexWriterConfig.getIndexingChain().getChain(this);\n    this.enableTestPoints = enableTestPoints;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"618635065f043788c9e034f96ca5cd5cea1b4592":["79700663e164dece87bed4adfd3e28bab6cb1385"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["2165505a28a4f836f04ed5eb23bc64a6faae1b1e","79700663e164dece87bed4adfd3e28bab6cb1385"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"79700663e164dece87bed4adfd3e28bab6cb1385":["2165505a28a4f836f04ed5eb23bc64a6faae1b1e"],"299a2348fa24151d150182211b6208a38e5e3450":["2165505a28a4f836f04ed5eb23bc64a6faae1b1e","79700663e164dece87bed4adfd3e28bab6cb1385"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["618635065f043788c9e034f96ca5cd5cea1b4592"],"2165505a28a4f836f04ed5eb23bc64a6faae1b1e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"618635065f043788c9e034f96ca5cd5cea1b4592":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["2165505a28a4f836f04ed5eb23bc64a6faae1b1e"],"79700663e164dece87bed4adfd3e28bab6cb1385":["618635065f043788c9e034f96ca5cd5cea1b4592","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","299a2348fa24151d150182211b6208a38e5e3450"],"299a2348fa24151d150182211b6208a38e5e3450":[],"2165505a28a4f836f04ed5eb23bc64a6faae1b1e":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","79700663e164dece87bed4adfd3e28bab6cb1385","299a2348fa24151d150182211b6208a38e5e3450"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","299a2348fa24151d150182211b6208a38e5e3450","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}