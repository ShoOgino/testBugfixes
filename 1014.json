{"path":"solr/core/src/test/org/apache/solr/cloud/TestTlogReplica#testKillTlogReplica().mjava","commits":[{"id":"61c45e99cf6676da48f19d7511c73712ad39402b","date":1495508331,"type":0,"author":"Tomas Fernandez Lobbe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestTlogReplica#testKillTlogReplica().mjava","pathOld":"/dev/null","sourceNew":"  public void testKillTlogReplica() throws Exception {\n    DocCollection docCollection = createAndWaitForCollection(1, 0, 2, 0);\n    \n    waitForNumDocsInAllActiveReplicas(0);\n    cluster.getSolrClient().add(collectionName, new SolrInputDocument(\"id\", \"1\", \"foo\", \"bar\"));\n    cluster.getSolrClient().commit(collectionName);\n    waitForNumDocsInAllActiveReplicas(1);\n    \n    JettySolrRunner pullReplicaJetty = cluster.getReplicaJetty(docCollection.getSlice(\"shard1\").getReplicas(EnumSet.of(Replica.Type.TLOG)).get(0));\n    ChaosMonkey.kill(pullReplicaJetty);\n    waitForState(\"Replica not removed\", collectionName, activeReplicaCount(0, 1, 0));\n//    // Also wait for the replica to be placed in state=\"down\"\n//    waitForState(\"Didn't update state\", collectionName, clusterStateReflectsActiveAndDownReplicas());\n    \n    cluster.getSolrClient().add(collectionName, new SolrInputDocument(\"id\", \"2\", \"foo\", \"bar\"));\n    cluster.getSolrClient().commit(collectionName);\n    waitForNumDocsInAllActiveReplicas(2);\n    \n    ChaosMonkey.start(pullReplicaJetty);\n    waitForState(\"Replica not added\", collectionName, activeReplicaCount(0, 2, 0));\n    waitForNumDocsInAllActiveReplicas(2);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":0,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestTlogReplica#testKillTlogReplica().mjava","pathOld":"/dev/null","sourceNew":"  public void testKillTlogReplica() throws Exception {\n    DocCollection docCollection = createAndWaitForCollection(1, 0, 2, 0);\n    \n    waitForNumDocsInAllActiveReplicas(0);\n    cluster.getSolrClient().add(collectionName, new SolrInputDocument(\"id\", \"1\", \"foo\", \"bar\"));\n    cluster.getSolrClient().commit(collectionName);\n    waitForNumDocsInAllActiveReplicas(1);\n    \n    JettySolrRunner pullReplicaJetty = cluster.getReplicaJetty(docCollection.getSlice(\"shard1\").getReplicas(EnumSet.of(Replica.Type.TLOG)).get(0));\n    ChaosMonkey.kill(pullReplicaJetty);\n    waitForState(\"Replica not removed\", collectionName, activeReplicaCount(0, 1, 0));\n//    // Also wait for the replica to be placed in state=\"down\"\n//    waitForState(\"Didn't update state\", collectionName, clusterStateReflectsActiveAndDownReplicas());\n    \n    cluster.getSolrClient().add(collectionName, new SolrInputDocument(\"id\", \"2\", \"foo\", \"bar\"));\n    cluster.getSolrClient().commit(collectionName);\n    waitForNumDocsInAllActiveReplicas(2);\n    \n    ChaosMonkey.start(pullReplicaJetty);\n    waitForState(\"Replica not added\", collectionName, activeReplicaCount(0, 2, 0));\n    waitForNumDocsInAllActiveReplicas(2);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb222a3f9d9421d5c95afce73013fbd8de07ea1f","date":1543514331,"type":3,"author":"markrmiller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestTlogReplica#testKillTlogReplica().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestTlogReplica#testKillTlogReplica().mjava","sourceNew":"  public void testKillTlogReplica() throws Exception {\n    DocCollection docCollection = createAndWaitForCollection(1, 0, 2, 0);\n    \n    waitForNumDocsInAllActiveReplicas(0);\n    cluster.getSolrClient().add(collectionName, new SolrInputDocument(\"id\", \"1\", \"foo\", \"bar\"));\n    cluster.getSolrClient().commit(collectionName);\n    waitForNumDocsInAllActiveReplicas(1);\n    \n    JettySolrRunner pullReplicaJetty = cluster.getReplicaJetty(docCollection.getSlice(\"shard1\").getReplicas(EnumSet.of(Replica.Type.TLOG)).get(0));\n    pullReplicaJetty.stop();\n    waitForState(\"Replica not removed\", collectionName, activeReplicaCount(0, 1, 0));\n//    // Also wait for the replica to be placed in state=\"down\"\n//    waitForState(\"Didn't update state\", collectionName, clusterStateReflectsActiveAndDownReplicas());\n    \n    cluster.getSolrClient().add(collectionName, new SolrInputDocument(\"id\", \"2\", \"foo\", \"bar\"));\n    cluster.getSolrClient().commit(collectionName);\n    waitForNumDocsInAllActiveReplicas(2);\n    \n    pullReplicaJetty.stop();\n    waitForState(\"Replica not added\", collectionName, activeReplicaCount(0, 2, 0));\n    waitForNumDocsInAllActiveReplicas(2);\n  }\n\n","sourceOld":"  public void testKillTlogReplica() throws Exception {\n    DocCollection docCollection = createAndWaitForCollection(1, 0, 2, 0);\n    \n    waitForNumDocsInAllActiveReplicas(0);\n    cluster.getSolrClient().add(collectionName, new SolrInputDocument(\"id\", \"1\", \"foo\", \"bar\"));\n    cluster.getSolrClient().commit(collectionName);\n    waitForNumDocsInAllActiveReplicas(1);\n    \n    JettySolrRunner pullReplicaJetty = cluster.getReplicaJetty(docCollection.getSlice(\"shard1\").getReplicas(EnumSet.of(Replica.Type.TLOG)).get(0));\n    ChaosMonkey.kill(pullReplicaJetty);\n    waitForState(\"Replica not removed\", collectionName, activeReplicaCount(0, 1, 0));\n//    // Also wait for the replica to be placed in state=\"down\"\n//    waitForState(\"Didn't update state\", collectionName, clusterStateReflectsActiveAndDownReplicas());\n    \n    cluster.getSolrClient().add(collectionName, new SolrInputDocument(\"id\", \"2\", \"foo\", \"bar\"));\n    cluster.getSolrClient().commit(collectionName);\n    waitForNumDocsInAllActiveReplicas(2);\n    \n    ChaosMonkey.start(pullReplicaJetty);\n    waitForState(\"Replica not added\", collectionName, activeReplicaCount(0, 2, 0));\n    waitForNumDocsInAllActiveReplicas(2);\n  }\n\n","bugFix":["61c45e99cf6676da48f19d7511c73712ad39402b"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f43ec94a8dd9ee8d862fee49bc3124423c77142b","date":1550813629,"type":3,"author":"Tomas Fernandez Lobbe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestTlogReplica#testKillTlogReplica().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestTlogReplica#testKillTlogReplica().mjava","sourceNew":"  public void testKillTlogReplica() throws Exception {\n    DocCollection docCollection = createAndWaitForCollection(1, 0, 2, 0);\n    \n    waitForNumDocsInAllActiveReplicas(0);\n    cluster.getSolrClient().add(collectionName, new SolrInputDocument(\"id\", \"1\", \"foo\", \"bar\"));\n    cluster.getSolrClient().commit(collectionName);\n    waitForNumDocsInAllActiveReplicas(1);\n    \n    JettySolrRunner pullReplicaJetty = cluster.getReplicaJetty(docCollection.getSlice(\"shard1\").getReplicas(EnumSet.of(Replica.Type.TLOG)).get(0));\n    pullReplicaJetty.stop();\n    waitForState(\"Replica not removed\", collectionName, activeReplicaCount(0, 1, 0));\n//    // Also wait for the replica to be placed in state=\"down\"\n//    waitForState(\"Didn't update state\", collectionName, clusterStateReflectsActiveAndDownReplicas());\n    \n    cluster.getSolrClient().add(collectionName, new SolrInputDocument(\"id\", \"2\", \"foo\", \"bar\"));\n    cluster.getSolrClient().commit(collectionName);\n    waitForNumDocsInAllActiveReplicas(2);\n    \n    pullReplicaJetty.start();\n    waitForState(\"Replica not added\", collectionName, activeReplicaCount(0, 2, 0));\n    waitForNumDocsInAllActiveReplicas(2);\n  }\n\n","sourceOld":"  public void testKillTlogReplica() throws Exception {\n    DocCollection docCollection = createAndWaitForCollection(1, 0, 2, 0);\n    \n    waitForNumDocsInAllActiveReplicas(0);\n    cluster.getSolrClient().add(collectionName, new SolrInputDocument(\"id\", \"1\", \"foo\", \"bar\"));\n    cluster.getSolrClient().commit(collectionName);\n    waitForNumDocsInAllActiveReplicas(1);\n    \n    JettySolrRunner pullReplicaJetty = cluster.getReplicaJetty(docCollection.getSlice(\"shard1\").getReplicas(EnumSet.of(Replica.Type.TLOG)).get(0));\n    pullReplicaJetty.stop();\n    waitForState(\"Replica not removed\", collectionName, activeReplicaCount(0, 1, 0));\n//    // Also wait for the replica to be placed in state=\"down\"\n//    waitForState(\"Didn't update state\", collectionName, clusterStateReflectsActiveAndDownReplicas());\n    \n    cluster.getSolrClient().add(collectionName, new SolrInputDocument(\"id\", \"2\", \"foo\", \"bar\"));\n    cluster.getSolrClient().commit(collectionName);\n    waitForNumDocsInAllActiveReplicas(2);\n    \n    pullReplicaJetty.stop();\n    waitForState(\"Replica not added\", collectionName, activeReplicaCount(0, 2, 0));\n    waitForNumDocsInAllActiveReplicas(2);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0d2d6c361b65277d72b2f3dd0f83b9721875e6b4","date":1551083645,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestTlogReplica#testKillTlogReplica().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestTlogReplica#testKillTlogReplica().mjava","sourceNew":"  public void testKillTlogReplica() throws Exception {\n    DocCollection docCollection = createAndWaitForCollection(1, 0, 2, 0);\n    \n    waitForNumDocsInAllActiveReplicas(0);\n    cluster.getSolrClient().add(collectionName, new SolrInputDocument(\"id\", \"1\", \"foo\", \"bar\"));\n    cluster.getSolrClient().commit(collectionName);\n    waitForNumDocsInAllActiveReplicas(1);\n    \n    JettySolrRunner pullReplicaJetty = cluster.getReplicaJetty(docCollection.getSlice(\"shard1\").getReplicas(EnumSet.of(Replica.Type.TLOG)).get(0));\n    pullReplicaJetty.stop();\n    waitForState(\"Replica not removed\", collectionName, activeReplicaCount(0, 1, 0));\n//    // Also wait for the replica to be placed in state=\"down\"\n//    waitForState(\"Didn't update state\", collectionName, clusterStateReflectsActiveAndDownReplicas());\n    \n    cluster.getSolrClient().add(collectionName, new SolrInputDocument(\"id\", \"2\", \"foo\", \"bar\"));\n    cluster.getSolrClient().commit(collectionName);\n    waitForNumDocsInAllActiveReplicas(2);\n    \n    pullReplicaJetty.start();\n    waitForState(\"Replica not added\", collectionName, activeReplicaCount(0, 2, 0));\n    waitForNumDocsInAllActiveReplicas(2);\n  }\n\n","sourceOld":"  public void testKillTlogReplica() throws Exception {\n    DocCollection docCollection = createAndWaitForCollection(1, 0, 2, 0);\n    \n    waitForNumDocsInAllActiveReplicas(0);\n    cluster.getSolrClient().add(collectionName, new SolrInputDocument(\"id\", \"1\", \"foo\", \"bar\"));\n    cluster.getSolrClient().commit(collectionName);\n    waitForNumDocsInAllActiveReplicas(1);\n    \n    JettySolrRunner pullReplicaJetty = cluster.getReplicaJetty(docCollection.getSlice(\"shard1\").getReplicas(EnumSet.of(Replica.Type.TLOG)).get(0));\n    pullReplicaJetty.stop();\n    waitForState(\"Replica not removed\", collectionName, activeReplicaCount(0, 1, 0));\n//    // Also wait for the replica to be placed in state=\"down\"\n//    waitForState(\"Didn't update state\", collectionName, clusterStateReflectsActiveAndDownReplicas());\n    \n    cluster.getSolrClient().add(collectionName, new SolrInputDocument(\"id\", \"2\", \"foo\", \"bar\"));\n    cluster.getSolrClient().commit(collectionName);\n    waitForNumDocsInAllActiveReplicas(2);\n    \n    pullReplicaJetty.stop();\n    waitForState(\"Replica not added\", collectionName, activeReplicaCount(0, 2, 0));\n    waitForNumDocsInAllActiveReplicas(2);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0db83f1bb855a4ac824c9a2a8e1ee9b29a039c15","date":1554259533,"type":3,"author":"Gus Heck","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestTlogReplica#testKillTlogReplica().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestTlogReplica#testKillTlogReplica().mjava","sourceNew":"  public void testKillTlogReplica() throws Exception {\n    DocCollection docCollection = createAndWaitForCollection(1, 0, 2, 0);\n\n    waitForNumDocsInAllActiveReplicas(0);\n    cluster.getSolrClient().add(collectionName, new SolrInputDocument(\"id\", \"1\", \"foo\", \"bar\"));\n    cluster.getSolrClient().commit(collectionName);\n    waitForNumDocsInAllActiveReplicas(1);\n\n    JettySolrRunner pullReplicaJetty = cluster.getReplicaJetty(docCollection.getSlice(\"shard1\").getReplicas(EnumSet.of(Replica.Type.TLOG)).get(0));\n    pullReplicaJetty.stop();\n    waitForState(\"Replica not removed\", collectionName, activeReplicaCount(0, 1, 0));\n//    // Also wait for the replica to be placed in state=\"down\"\n//    waitForState(\"Didn't update state\", collectionName, clusterStateReflectsActiveAndDownReplicas());\n\n    cluster.getSolrClient().add(collectionName, new SolrInputDocument(\"id\", \"2\", \"foo\", \"bar\"));\n    cluster.getSolrClient().commit(collectionName);\n    waitForNumDocsInAllActiveReplicas(2);\n\n    pullReplicaJetty.start();\n    waitForState(\"Replica not added\", collectionName, activeReplicaCount(0, 2, 0));\n    waitForNumDocsInAllActiveReplicas(2);\n  }\n\n","sourceOld":"  public void testKillTlogReplica() throws Exception {\n    DocCollection docCollection = createAndWaitForCollection(1, 0, 2, 0);\n    \n    waitForNumDocsInAllActiveReplicas(0);\n    cluster.getSolrClient().add(collectionName, new SolrInputDocument(\"id\", \"1\", \"foo\", \"bar\"));\n    cluster.getSolrClient().commit(collectionName);\n    waitForNumDocsInAllActiveReplicas(1);\n    \n    JettySolrRunner pullReplicaJetty = cluster.getReplicaJetty(docCollection.getSlice(\"shard1\").getReplicas(EnumSet.of(Replica.Type.TLOG)).get(0));\n    pullReplicaJetty.stop();\n    waitForState(\"Replica not removed\", collectionName, activeReplicaCount(0, 1, 0));\n//    // Also wait for the replica to be placed in state=\"down\"\n//    waitForState(\"Didn't update state\", collectionName, clusterStateReflectsActiveAndDownReplicas());\n    \n    cluster.getSolrClient().add(collectionName, new SolrInputDocument(\"id\", \"2\", \"foo\", \"bar\"));\n    cluster.getSolrClient().commit(collectionName);\n    waitForNumDocsInAllActiveReplicas(2);\n    \n    pullReplicaJetty.start();\n    waitForState(\"Replica not added\", collectionName, activeReplicaCount(0, 2, 0));\n    waitForNumDocsInAllActiveReplicas(2);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bf5b93713fb0adca4f2a88e0a629554bf1ac2866","date":1571852796,"type":3,"author":"Tomas Fernandez Lobbe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestTlogReplica#testKillTlogReplica().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestTlogReplica#testKillTlogReplica().mjava","sourceNew":"  public void testKillTlogReplica() throws Exception {\n    DocCollection docCollection = createAndWaitForCollection(1, 0, 2, 0);\n\n    waitForNumDocsInAllActiveReplicas(0);\n    cluster.getSolrClient().add(collectionName, new SolrInputDocument(\"id\", \"1\", \"foo\", \"bar\"));\n    cluster.getSolrClient().commit(collectionName);\n    waitForNumDocsInAllActiveReplicas(1);\n\n    JettySolrRunner pullReplicaJetty = cluster.getReplicaJetty(docCollection.getSlice(\"shard1\").getReplicas(EnumSet.of(Replica.Type.TLOG)).get(0));\n    pullReplicaJetty.stop();\n    waitForState(\"Replica not removed\", collectionName, activeReplicaCount(0, 1, 0));\n    waitForLeaderChange(pullReplicaJetty, \"shard1\");\n//    // Also wait for the replica to be placed in state=\"down\"\n//    waitForState(\"Didn't update state\", collectionName, clusterStateReflectsActiveAndDownReplicas());\n\n    cluster.getSolrClient().add(collectionName, new SolrInputDocument(\"id\", \"2\", \"foo\", \"bar\"));\n    cluster.getSolrClient().commit(collectionName);\n    waitForNumDocsInAllActiveReplicas(2);\n\n    pullReplicaJetty.start();\n    waitForState(\"Replica not added\", collectionName, activeReplicaCount(0, 2, 0));\n    waitForNumDocsInAllActiveReplicas(2);\n  }\n\n","sourceOld":"  public void testKillTlogReplica() throws Exception {\n    DocCollection docCollection = createAndWaitForCollection(1, 0, 2, 0);\n\n    waitForNumDocsInAllActiveReplicas(0);\n    cluster.getSolrClient().add(collectionName, new SolrInputDocument(\"id\", \"1\", \"foo\", \"bar\"));\n    cluster.getSolrClient().commit(collectionName);\n    waitForNumDocsInAllActiveReplicas(1);\n\n    JettySolrRunner pullReplicaJetty = cluster.getReplicaJetty(docCollection.getSlice(\"shard1\").getReplicas(EnumSet.of(Replica.Type.TLOG)).get(0));\n    pullReplicaJetty.stop();\n    waitForState(\"Replica not removed\", collectionName, activeReplicaCount(0, 1, 0));\n//    // Also wait for the replica to be placed in state=\"down\"\n//    waitForState(\"Didn't update state\", collectionName, clusterStateReflectsActiveAndDownReplicas());\n\n    cluster.getSolrClient().add(collectionName, new SolrInputDocument(\"id\", \"2\", \"foo\", \"bar\"));\n    cluster.getSolrClient().commit(collectionName);\n    waitForNumDocsInAllActiveReplicas(2);\n\n    pullReplicaJetty.start();\n    waitForState(\"Replica not added\", collectionName, activeReplicaCount(0, 2, 0));\n    waitForNumDocsInAllActiveReplicas(2);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3b050dfb449e06b880464ad662d8773148979755","date":1573773395,"type":3,"author":"Tomas Fernandez Lobbe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/TestTlogReplica#testKillTlogReplica().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/TestTlogReplica#testKillTlogReplica().mjava","sourceNew":"  @Ignore\n  public void testKillTlogReplica() throws Exception {\n    DocCollection docCollection = createAndWaitForCollection(1, 0, 2, 0);\n\n    waitForNumDocsInAllActiveReplicas(0);\n    cluster.getSolrClient().add(collectionName, new SolrInputDocument(\"id\", \"1\", \"foo\", \"bar\"));\n    cluster.getSolrClient().commit(collectionName);\n    waitForNumDocsInAllActiveReplicas(1);\n\n    JettySolrRunner pullReplicaJetty = cluster.getReplicaJetty(docCollection.getSlice(\"shard1\").getReplicas(EnumSet.of(Replica.Type.TLOG)).get(0));\n    pullReplicaJetty.stop();\n    waitForState(\"Replica not removed\", collectionName, activeReplicaCount(0, 1, 0));\n    waitForLeaderChange(pullReplicaJetty, \"shard1\");\n//    // Also wait for the replica to be placed in state=\"down\"\n//    waitForState(\"Didn't update state\", collectionName, clusterStateReflectsActiveAndDownReplicas());\n\n    cluster.getSolrClient().add(collectionName, new SolrInputDocument(\"id\", \"2\", \"foo\", \"bar\"));\n    cluster.getSolrClient().commit(collectionName);\n    waitForNumDocsInAllActiveReplicas(2);\n\n    pullReplicaJetty.start();\n    waitForState(\"Replica not added\", collectionName, activeReplicaCount(0, 2, 0));\n    waitForNumDocsInAllActiveReplicas(2);\n  }\n\n","sourceOld":"  public void testKillTlogReplica() throws Exception {\n    DocCollection docCollection = createAndWaitForCollection(1, 0, 2, 0);\n\n    waitForNumDocsInAllActiveReplicas(0);\n    cluster.getSolrClient().add(collectionName, new SolrInputDocument(\"id\", \"1\", \"foo\", \"bar\"));\n    cluster.getSolrClient().commit(collectionName);\n    waitForNumDocsInAllActiveReplicas(1);\n\n    JettySolrRunner pullReplicaJetty = cluster.getReplicaJetty(docCollection.getSlice(\"shard1\").getReplicas(EnumSet.of(Replica.Type.TLOG)).get(0));\n    pullReplicaJetty.stop();\n    waitForState(\"Replica not removed\", collectionName, activeReplicaCount(0, 1, 0));\n    waitForLeaderChange(pullReplicaJetty, \"shard1\");\n//    // Also wait for the replica to be placed in state=\"down\"\n//    waitForState(\"Didn't update state\", collectionName, clusterStateReflectsActiveAndDownReplicas());\n\n    cluster.getSolrClient().add(collectionName, new SolrInputDocument(\"id\", \"2\", \"foo\", \"bar\"));\n    cluster.getSolrClient().commit(collectionName);\n    waitForNumDocsInAllActiveReplicas(2);\n\n    pullReplicaJetty.start();\n    waitForState(\"Replica not added\", collectionName, activeReplicaCount(0, 2, 0));\n    waitForNumDocsInAllActiveReplicas(2);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e9017cf144952056066919f1ebc7897ff9bd71b1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","61c45e99cf6676da48f19d7511c73712ad39402b"],"61c45e99cf6676da48f19d7511c73712ad39402b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f43ec94a8dd9ee8d862fee49bc3124423c77142b":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["61c45e99cf6676da48f19d7511c73712ad39402b"],"3b050dfb449e06b880464ad662d8773148979755":["bf5b93713fb0adca4f2a88e0a629554bf1ac2866"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bf5b93713fb0adca4f2a88e0a629554bf1ac2866":["0db83f1bb855a4ac824c9a2a8e1ee9b29a039c15"],"0db83f1bb855a4ac824c9a2a8e1ee9b29a039c15":["0d2d6c361b65277d72b2f3dd0f83b9721875e6b4"],"0d2d6c361b65277d72b2f3dd0f83b9721875e6b4":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f","f43ec94a8dd9ee8d862fee49bc3124423c77142b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3b050dfb449e06b880464ad662d8773148979755"]},"commit2Childs":{"e9017cf144952056066919f1ebc7897ff9bd71b1":[],"61c45e99cf6676da48f19d7511c73712ad39402b":["e9017cf144952056066919f1ebc7897ff9bd71b1","bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"f43ec94a8dd9ee8d862fee49bc3124423c77142b":["0d2d6c361b65277d72b2f3dd0f83b9721875e6b4"],"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["f43ec94a8dd9ee8d862fee49bc3124423c77142b","0d2d6c361b65277d72b2f3dd0f83b9721875e6b4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e9017cf144952056066919f1ebc7897ff9bd71b1","61c45e99cf6676da48f19d7511c73712ad39402b"],"3b050dfb449e06b880464ad662d8773148979755":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"bf5b93713fb0adca4f2a88e0a629554bf1ac2866":["3b050dfb449e06b880464ad662d8773148979755"],"0db83f1bb855a4ac824c9a2a8e1ee9b29a039c15":["bf5b93713fb0adca4f2a88e0a629554bf1ac2866"],"0d2d6c361b65277d72b2f3dd0f83b9721875e6b4":["0db83f1bb855a4ac824c9a2a8e1ee9b29a039c15"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}