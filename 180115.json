{"path":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionProcessor#collectionCmd(ClusterState,ZkNodeProps,ModifiableSolrParams,NamedList,Replica.State).mjava","commits":[{"id":"a219f1dcad1700e84807666bdbd2b573e8de7021","date":1428130940,"type":1,"author":"Shai Erera","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionProcessor#collectionCmd(ClusterState,ZkNodeProps,ModifiableSolrParams,NamedList,Replica.State).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionProcessor#collectionCmd(ClusterState,ZkNodeProps,ModifiableSolrParams,NamedList,String).mjava","sourceNew":"  private void collectionCmd(ClusterState clusterState, ZkNodeProps message, ModifiableSolrParams params, NamedList results, Replica.State stateMatcher) {\n    log.info(\"Executing Collection Cmd : \" + params);\n    String collectionName = message.getStr(NAME);\n    ShardHandler shardHandler = shardHandlerFactory.getShardHandler();\n    \n    DocCollection coll = clusterState.getCollection(collectionName);\n    \n    for (Map.Entry<String,Slice> entry : coll.getSlicesMap().entrySet()) {\n      Slice slice = entry.getValue();\n      sliceCmd(clusterState, params, stateMatcher, slice, shardHandler);\n    }\n\n    processResponses(results, shardHandler);\n\n  }\n\n","sourceOld":"  private void collectionCmd(ClusterState clusterState, ZkNodeProps message, ModifiableSolrParams params, NamedList results, String stateMatcher) {\n    log.info(\"Executing Collection Cmd : \" + params);\n    String collectionName = message.getStr(NAME);\n    ShardHandler shardHandler = shardHandlerFactory.getShardHandler();\n    \n    DocCollection coll = clusterState.getCollection(collectionName);\n    \n    for (Map.Entry<String,Slice> entry : coll.getSlicesMap().entrySet()) {\n      Slice slice = entry.getValue();\n      sliceCmd(clusterState, params, stateMatcher, slice, shardHandler);\n    }\n\n    processResponses(results, shardHandler);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e31e6ce5848e5040d4c9ecbb25bc6ccf5d0894ac","date":1438841252,"type":5,"author":"Gregory Chanan","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionMessageHandler#collectionCmd(ClusterState,ZkNodeProps,ModifiableSolrParams,NamedList,Replica.State).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionProcessor#collectionCmd(ClusterState,ZkNodeProps,ModifiableSolrParams,NamedList,Replica.State).mjava","sourceNew":"  private void collectionCmd(ClusterState clusterState, ZkNodeProps message, ModifiableSolrParams params, NamedList results, Replica.State stateMatcher) {\n    log.info(\"Executing Collection Cmd : \" + params);\n    String collectionName = message.getStr(NAME);\n    ShardHandler shardHandler = shardHandlerFactory.getShardHandler();\n    \n    DocCollection coll = clusterState.getCollection(collectionName);\n    \n    for (Map.Entry<String,Slice> entry : coll.getSlicesMap().entrySet()) {\n      Slice slice = entry.getValue();\n      sliceCmd(clusterState, params, stateMatcher, slice, shardHandler);\n    }\n\n    processResponses(results, shardHandler);\n\n  }\n\n","sourceOld":"  private void collectionCmd(ClusterState clusterState, ZkNodeProps message, ModifiableSolrParams params, NamedList results, Replica.State stateMatcher) {\n    log.info(\"Executing Collection Cmd : \" + params);\n    String collectionName = message.getStr(NAME);\n    ShardHandler shardHandler = shardHandlerFactory.getShardHandler();\n    \n    DocCollection coll = clusterState.getCollection(collectionName);\n    \n    for (Map.Entry<String,Slice> entry : coll.getSlicesMap().entrySet()) {\n      Slice slice = entry.getValue();\n      sliceCmd(clusterState, params, stateMatcher, slice, shardHandler);\n    }\n\n    processResponses(results, shardHandler);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a219f1dcad1700e84807666bdbd2b573e8de7021":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e31e6ce5848e5040d4c9ecbb25bc6ccf5d0894ac":["a219f1dcad1700e84807666bdbd2b573e8de7021"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e31e6ce5848e5040d4c9ecbb25bc6ccf5d0894ac"]},"commit2Childs":{"a219f1dcad1700e84807666bdbd2b573e8de7021":["e31e6ce5848e5040d4c9ecbb25bc6ccf5d0894ac"],"e31e6ce5848e5040d4c9ecbb25bc6ccf5d0894ac":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a219f1dcad1700e84807666bdbd2b573e8de7021"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}