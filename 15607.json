{"path":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/CategoryPath#toString().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/CategoryPath#toString().mjava","pathOld":"modules/facet/src/java/org/apache/lucene/facet/taxonomy/CategoryPath#toString().mjava","sourceNew":"  /**\n   * This method, an implementation of the {@link Object#toString()}\n   * interface, is to allow simple printing of a CategoryPath, for debugging\n   * purposes. When possible, it recommended to avoid using it it, and rather,\n   * if you want to output the path with its components separated by a\n   * delimiter character, specify the delimiter explicitly, with\n   * {@link #toString(char)}.\n   */\n  @Override\n  public String toString() {\n    return toString('/');\n  }\n\n","sourceOld":"  /**\n   * This method, an implementation of the {@link Object#toString()}\n   * interface, is to allow simple printing of a CategoryPath, for debugging\n   * purposes. When possible, it recommended to avoid using it it, and rather,\n   * if you want to output the path with its components separated by a\n   * delimiter character, specify the delimiter explicitly, with\n   * {@link #toString(char)}.\n   */\n  @Override\n  public String toString() {\n    return toString('/');\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d90771c07d45c6ad884c5ef9cb3a6eeb257238d1","date":1357499264,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/CategoryPath#toString().mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/CategoryPath#toString().mjava","sourceNew":"  /**\n   * Returns a string representation of the path, separating components with\n   * '/'.\n   * \n   * @see #toString(char)\n   */\n  @Override\n  public String toString() {\n    return toString('/');\n  }\n\n","sourceOld":"  /**\n   * This method, an implementation of the {@link Object#toString()}\n   * interface, is to allow simple printing of a CategoryPath, for debugging\n   * purposes. When possible, it recommended to avoid using it it, and rather,\n   * if you want to output the path with its components separated by a\n   * delimiter character, specify the delimiter explicitly, with\n   * {@link #toString(char)}.\n   */\n  @Override\n  public String toString() {\n    return toString('/');\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/CategoryPath#toString().mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/CategoryPath#toString().mjava","sourceNew":"  /**\n   * Returns a string representation of the path, separating components with\n   * '/'.\n   * \n   * @see #toString(char)\n   */\n  @Override\n  public String toString() {\n    return toString('/');\n  }\n\n","sourceOld":"  /**\n   * This method, an implementation of the {@link Object#toString()}\n   * interface, is to allow simple printing of a CategoryPath, for debugging\n   * purposes. When possible, it recommended to avoid using it it, and rather,\n   * if you want to output the path with its components separated by a\n   * delimiter character, specify the delimiter explicitly, with\n   * {@link #toString(char)}.\n   */\n  @Override\n  public String toString() {\n    return toString('/');\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c190847801a50f4dd20fd639bdc29b54ea3b288b","date":1384461522,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/FacetLabel#toString().mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/CategoryPath#toString().mjava","sourceNew":"  /**\n   * Returns a string representation of the path, separating components with\n   * '/'.\n   * \n   * @see #toString(char)\n   */\n  @Override\n  public String toString() {\n    return toString('/');\n  }\n\n","sourceOld":"  /**\n   * Returns a string representation of the path, separating components with\n   * '/'.\n   * \n   * @see #toString(char)\n   */\n  @Override\n  public String toString() {\n    return toString('/');\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cc728b07df73b197e6d940d27f9b08b63918f13","date":1388834348,"type":4,"author":"Michael McCandless","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/CategoryPath#toString().mjava","sourceNew":null,"sourceOld":"  /**\n   * Returns a string representation of the path, separating components with\n   * '/'.\n   * \n   * @see #toString(char)\n   */\n  @Override\n  public String toString() {\n    return toString('/');\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["b89678825b68eccaf09e6ab71675fc0b0af1e099","d90771c07d45c6ad884c5ef9cb3a6eeb257238d1"],"d90771c07d45c6ad884c5ef9cb3a6eeb257238d1":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cc728b07df73b197e6d940d27f9b08b63918f13":["d90771c07d45c6ad884c5ef9cb3a6eeb257238d1","c190847801a50f4dd20fd639bdc29b54ea3b288b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"c190847801a50f4dd20fd639bdc29b54ea3b288b":["d90771c07d45c6ad884c5ef9cb3a6eeb257238d1"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"d90771c07d45c6ad884c5ef9cb3a6eeb257238d1":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","3cc728b07df73b197e6d940d27f9b08b63918f13","c190847801a50f4dd20fd639bdc29b54ea3b288b"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","d90771c07d45c6ad884c5ef9cb3a6eeb257238d1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c190847801a50f4dd20fd639bdc29b54ea3b288b":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}