{"path":"src/test/org/apache/lucene/index/TestNorms#modifyNormsForF1(Directory).mjava","commits":[{"id":"e3fd53e9969a60409c90fe264ff605778ba323f6","date":1168218319,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestNorms#modifyNormsForF1(Directory).mjava","pathOld":"/dev/null","sourceNew":"  private void modifyNormsForF1(Directory dir) throws IOException {\n    IndexReader ir = IndexReader.open(dir);\n    int n = ir.maxDoc();\n    for (int i = 0; i < n; i+=3) { // modify for every third doc\n      int k = (i*3) % modifiedNorms.size();\n      float origNorm = ((Float)modifiedNorms.get(i)).floatValue();\n      float newNorm = ((Float)modifiedNorms.get(k)).floatValue();\n      //System.out.println(\"Modifying: for \"+i+\" from \"+origNorm+\" to \"+newNorm);\n      //System.out.println(\"      and: for \"+k+\" from \"+newNorm+\" to \"+origNorm);\n      modifiedNorms.set(i, new Float(newNorm));\n      modifiedNorms.set(k, new Float(origNorm));\n      ir.setNorm(i, \"f\"+1, newNorm); \n      ir.setNorm(k, \"f\"+1, origNorm); \n    }\n    ir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6bcde5e3f23911110baa101ed062b544162825b5","date":1254521804,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestNorms#modifyNormsForF1(Directory).mjava","pathOld":"src/test/org/apache/lucene/index/TestNorms#modifyNormsForF1(Directory).mjava","sourceNew":"  private void modifyNormsForF1(Directory dir) throws IOException {\n    IndexReader ir = IndexReader.open(dir);\n    int n = ir.maxDoc();\n    for (int i = 0; i < n; i+=3) { // modify for every third doc\n      int k = (i*3) % modifiedNorms.size();\n      float origNorm = ((Float)modifiedNorms.get(i)).floatValue();\n      float newNorm = ((Float)modifiedNorms.get(k)).floatValue();\n      //System.out.println(\"Modifying: for \"+i+\" from \"+origNorm+\" to \"+newNorm);\n      //System.out.println(\"      and: for \"+k+\" from \"+newNorm+\" to \"+origNorm);\n      modifiedNorms.set(i, Float.valueOf(newNorm));\n      modifiedNorms.set(k, Float.valueOf(origNorm));\n      ir.setNorm(i, \"f\"+1, newNorm); \n      ir.setNorm(k, \"f\"+1, origNorm); \n    }\n    ir.close();\n  }\n\n","sourceOld":"  private void modifyNormsForF1(Directory dir) throws IOException {\n    IndexReader ir = IndexReader.open(dir);\n    int n = ir.maxDoc();\n    for (int i = 0; i < n; i+=3) { // modify for every third doc\n      int k = (i*3) % modifiedNorms.size();\n      float origNorm = ((Float)modifiedNorms.get(i)).floatValue();\n      float newNorm = ((Float)modifiedNorms.get(k)).floatValue();\n      //System.out.println(\"Modifying: for \"+i+\" from \"+origNorm+\" to \"+newNorm);\n      //System.out.println(\"      and: for \"+k+\" from \"+newNorm+\" to \"+origNorm);\n      modifiedNorms.set(i, new Float(newNorm));\n      modifiedNorms.set(k, new Float(origNorm));\n      ir.setNorm(i, \"f\"+1, newNorm); \n      ir.setNorm(k, \"f\"+1, origNorm); \n    }\n    ir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e8d1458a2543cbd30cbfe7929be4dcb5c5251659","date":1254582241,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestNorms#modifyNormsForF1(Directory).mjava","pathOld":"src/test/org/apache/lucene/index/TestNorms#modifyNormsForF1(Directory).mjava","sourceNew":"  private void modifyNormsForF1(Directory dir) throws IOException {\n    IndexReader ir = IndexReader.open(dir, false);\n    int n = ir.maxDoc();\n    for (int i = 0; i < n; i+=3) { // modify for every third doc\n      int k = (i*3) % modifiedNorms.size();\n      float origNorm = ((Float)modifiedNorms.get(i)).floatValue();\n      float newNorm = ((Float)modifiedNorms.get(k)).floatValue();\n      //System.out.println(\"Modifying: for \"+i+\" from \"+origNorm+\" to \"+newNorm);\n      //System.out.println(\"      and: for \"+k+\" from \"+newNorm+\" to \"+origNorm);\n      modifiedNorms.set(i, new Float(newNorm));\n      modifiedNorms.set(k, new Float(origNorm));\n      ir.setNorm(i, \"f\"+1, newNorm); \n      ir.setNorm(k, \"f\"+1, origNorm); \n    }\n    ir.close();\n  }\n\n","sourceOld":"  private void modifyNormsForF1(Directory dir) throws IOException {\n    IndexReader ir = IndexReader.open(dir);\n    int n = ir.maxDoc();\n    for (int i = 0; i < n; i+=3) { // modify for every third doc\n      int k = (i*3) % modifiedNorms.size();\n      float origNorm = ((Float)modifiedNorms.get(i)).floatValue();\n      float newNorm = ((Float)modifiedNorms.get(k)).floatValue();\n      //System.out.println(\"Modifying: for \"+i+\" from \"+origNorm+\" to \"+newNorm);\n      //System.out.println(\"      and: for \"+k+\" from \"+newNorm+\" to \"+origNorm);\n      modifiedNorms.set(i, new Float(newNorm));\n      modifiedNorms.set(k, new Float(origNorm));\n      ir.setNorm(i, \"f\"+1, newNorm); \n      ir.setNorm(k, \"f\"+1, origNorm); \n    }\n    ir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0a046c0c310bc77931fc8441bd920053b607dd14","date":1254584734,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"src/test/org/apache/lucene/index/TestNorms#modifyNormsForF1(Directory).mjava","pathOld":"src/test/org/apache/lucene/index/TestNorms#modifyNormsForF1(Directory).mjava","sourceNew":"  private void modifyNormsForF1(Directory dir) throws IOException {\n    IndexReader ir = IndexReader.open(dir, false);\n    int n = ir.maxDoc();\n    for (int i = 0; i < n; i+=3) { // modify for every third doc\n      int k = (i*3) % modifiedNorms.size();\n      float origNorm = ((Float)modifiedNorms.get(i)).floatValue();\n      float newNorm = ((Float)modifiedNorms.get(k)).floatValue();\n      //System.out.println(\"Modifying: for \"+i+\" from \"+origNorm+\" to \"+newNorm);\n      //System.out.println(\"      and: for \"+k+\" from \"+newNorm+\" to \"+origNorm);\n      modifiedNorms.set(i, Float.valueOf(newNorm));\n      modifiedNorms.set(k, Float.valueOf(origNorm));\n      ir.setNorm(i, \"f\"+1, newNorm); \n      ir.setNorm(k, \"f\"+1, origNorm); \n    }\n    ir.close();\n  }\n\n","sourceOld":"  private void modifyNormsForF1(Directory dir) throws IOException {\n    IndexReader ir = IndexReader.open(dir);\n    int n = ir.maxDoc();\n    for (int i = 0; i < n; i+=3) { // modify for every third doc\n      int k = (i*3) % modifiedNorms.size();\n      float origNorm = ((Float)modifiedNorms.get(i)).floatValue();\n      float newNorm = ((Float)modifiedNorms.get(k)).floatValue();\n      //System.out.println(\"Modifying: for \"+i+\" from \"+origNorm+\" to \"+newNorm);\n      //System.out.println(\"      and: for \"+k+\" from \"+newNorm+\" to \"+origNorm);\n      modifiedNorms.set(i, Float.valueOf(newNorm));\n      modifiedNorms.set(k, Float.valueOf(origNorm));\n      ir.setNorm(i, \"f\"+1, newNorm); \n      ir.setNorm(k, \"f\"+1, origNorm); \n    }\n    ir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a","date":1267298041,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestNorms#modifyNormsForF1(Directory).mjava","pathOld":"src/test/org/apache/lucene/index/TestNorms#modifyNormsForF1(Directory).mjava","sourceNew":"  private void modifyNormsForF1(Directory dir) throws IOException {\n    IndexReader ir = IndexReader.open(dir, false);\n    int n = ir.maxDoc();\n    for (int i = 0; i < n; i+=3) { // modify for every third doc\n      int k = (i*3) % modifiedNorms.size();\n      float origNorm = modifiedNorms.get(i).floatValue();\n      float newNorm = modifiedNorms.get(k).floatValue();\n      //System.out.println(\"Modifying: for \"+i+\" from \"+origNorm+\" to \"+newNorm);\n      //System.out.println(\"      and: for \"+k+\" from \"+newNorm+\" to \"+origNorm);\n      modifiedNorms.set(i, Float.valueOf(newNorm));\n      modifiedNorms.set(k, Float.valueOf(origNorm));\n      ir.setNorm(i, \"f\"+1, newNorm); \n      ir.setNorm(k, \"f\"+1, origNorm); \n    }\n    ir.close();\n  }\n\n","sourceOld":"  private void modifyNormsForF1(Directory dir) throws IOException {\n    IndexReader ir = IndexReader.open(dir, false);\n    int n = ir.maxDoc();\n    for (int i = 0; i < n; i+=3) { // modify for every third doc\n      int k = (i*3) % modifiedNorms.size();\n      float origNorm = ((Float)modifiedNorms.get(i)).floatValue();\n      float newNorm = ((Float)modifiedNorms.get(k)).floatValue();\n      //System.out.println(\"Modifying: for \"+i+\" from \"+origNorm+\" to \"+newNorm);\n      //System.out.println(\"      and: for \"+k+\" from \"+newNorm+\" to \"+origNorm);\n      modifiedNorms.set(i, Float.valueOf(newNorm));\n      modifiedNorms.set(k, Float.valueOf(origNorm));\n      ir.setNorm(i, \"f\"+1, newNorm); \n      ir.setNorm(k, \"f\"+1, origNorm); \n    }\n    ir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestNorms#modifyNormsForF1(Directory).mjava","pathOld":"src/test/org/apache/lucene/index/TestNorms#modifyNormsForF1(Directory).mjava","sourceNew":"  private void modifyNormsForF1(Directory dir) throws IOException {\n    IndexReader ir = IndexReader.open(dir, false);\n    int n = ir.maxDoc();\n    for (int i = 0; i < n; i+=3) { // modify for every third doc\n      int k = (i*3) % modifiedNorms.size();\n      float origNorm = modifiedNorms.get(i).floatValue();\n      float newNorm = modifiedNorms.get(k).floatValue();\n      //System.out.println(\"Modifying: for \"+i+\" from \"+origNorm+\" to \"+newNorm);\n      //System.out.println(\"      and: for \"+k+\" from \"+newNorm+\" to \"+origNorm);\n      modifiedNorms.set(i, Float.valueOf(newNorm));\n      modifiedNorms.set(k, Float.valueOf(origNorm));\n      ir.setNorm(i, \"f\"+1, newNorm); \n      ir.setNorm(k, \"f\"+1, origNorm); \n    }\n    ir.close();\n  }\n\n","sourceOld":"  private void modifyNormsForF1(Directory dir) throws IOException {\n    IndexReader ir = IndexReader.open(dir, false);\n    int n = ir.maxDoc();\n    for (int i = 0; i < n; i+=3) { // modify for every third doc\n      int k = (i*3) % modifiedNorms.size();\n      float origNorm = modifiedNorms.get(i).floatValue();\n      float newNorm = modifiedNorms.get(k).floatValue();\n      //System.out.println(\"Modifying: for \"+i+\" from \"+origNorm+\" to \"+newNorm);\n      //System.out.println(\"      and: for \"+k+\" from \"+newNorm+\" to \"+origNorm);\n      modifiedNorms.set(i, Float.valueOf(newNorm));\n      modifiedNorms.set(k, Float.valueOf(origNorm));\n      ir.setNorm(i, \"f\"+1, newNorm); \n      ir.setNorm(k, \"f\"+1, origNorm); \n    }\n    ir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6bcde5e3f23911110baa101ed062b544162825b5":["e3fd53e9969a60409c90fe264ff605778ba323f6"],"e3fd53e9969a60409c90fe264ff605778ba323f6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e8d1458a2543cbd30cbfe7929be4dcb5c5251659":["e3fd53e9969a60409c90fe264ff605778ba323f6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0a046c0c310bc77931fc8441bd920053b607dd14":["6bcde5e3f23911110baa101ed062b544162825b5","e8d1458a2543cbd30cbfe7929be4dcb5c5251659"],"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a":["0a046c0c310bc77931fc8441bd920053b607dd14"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a9ac13b5f0ce5ef1b2ce168367d993a79594b23a"]},"commit2Childs":{"6bcde5e3f23911110baa101ed062b544162825b5":["0a046c0c310bc77931fc8441bd920053b607dd14"],"e3fd53e9969a60409c90fe264ff605778ba323f6":["6bcde5e3f23911110baa101ed062b544162825b5","e8d1458a2543cbd30cbfe7929be4dcb5c5251659"],"e8d1458a2543cbd30cbfe7929be4dcb5c5251659":["0a046c0c310bc77931fc8441bd920053b607dd14"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e3fd53e9969a60409c90fe264ff605778ba323f6"],"0a046c0c310bc77931fc8441bd920053b607dd14":["a9ac13b5f0ce5ef1b2ce168367d993a79594b23a"],"a9ac13b5f0ce5ef1b2ce168367d993a79594b23a":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}