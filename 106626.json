{"path":"lucene/core/src/test/org/apache/lucene/index/TestTermsHashPerField#assertDocAndFreq(ByteSliceReader,FreqProxTermsWriterPerField.FreqProxPostingsArray,int,int,int,int).mjava","commits":[{"id":"d3cc3fa1ecad75b99ec55169e44628808f9866ad","date":1592311545,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestTermsHashPerField#assertDocAndFreq(ByteSliceReader,FreqProxTermsWriterPerField.FreqProxPostingsArray,int,int,int,int).mjava","pathOld":"/dev/null","sourceNew":"  boolean assertDocAndFreq(ByteSliceReader reader, FreqProxTermsWriterPerField.FreqProxPostingsArray postingsArray, int prevDoc, int termId, int doc, int frequency) throws IOException {\n    int docId = prevDoc;\n    int freq;\n    boolean eof = reader.eof();\n    if (eof) {\n      docId = postingsArray.lastDocIDs[termId];\n      freq = postingsArray.termFreqs[termId];\n    } else {\n      int code = reader.readVInt();\n      docId += code >>> 1;\n      if ((code & 1) != 0) {\n        freq = 1;\n      } else {\n        freq = reader.readVInt();\n      }\n    }\n    assertEquals(\"docID mismatch eof: \" + eof, doc, docId);\n    assertEquals(\"freq mismatch eof: \" + eof, frequency, freq);\n    return eof;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d3cc3fa1ecad75b99ec55169e44628808f9866ad":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d3cc3fa1ecad75b99ec55169e44628808f9866ad"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d3cc3fa1ecad75b99ec55169e44628808f9866ad"],"d3cc3fa1ecad75b99ec55169e44628808f9866ad":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}