{"path":"solr/core/src/test/org/apache/solr/cloud/OverseerCollectionConfigSetProcessorTest#handleCreateCollMessage(byte[]).mjava","commits":[{"id":"2209af2c265d2258ec4b29c8cc78622d36994a15","date":1440641916,"type":1,"author":"Gregory Chanan","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/OverseerCollectionConfigSetProcessorTest#handleCreateCollMessage(byte[]).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/OverseerCollectionProcessorTest#handleCreateCollMessage(byte[]).mjava","sourceNew":"  private void handleCreateCollMessage(byte[] bytes) {\n    try {\n      ZkNodeProps props = ZkNodeProps.load(bytes);\n      if(CollectionParams.CollectionAction.CREATE.isEqual(props.getStr(\"operation\"))){\n        String collName = props.getStr(\"name\") ;\n        if(collName != null) collectionsSet.add(collName);\n      }\n    } catch (Exception e) { }\n  }\n\n","sourceOld":"  private void handleCreateCollMessage(byte[] bytes) {\n    try {\n      ZkNodeProps props = ZkNodeProps.load(bytes);\n      if(CollectionParams.CollectionAction.CREATE.isEqual(props.getStr(\"operation\"))){\n        String collName = props.getStr(\"name\") ;\n        if(collName != null) collectionsSet.add(collName);\n      }\n    } catch (Exception e) { }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a9b4296bd51ca61b482138791478afdd0f7d3a3d","date":1498058739,"type":3,"author":"Cao Manh Dat","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/OverseerCollectionConfigSetProcessorTest#handleCreateCollMessage(byte[]).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/OverseerCollectionConfigSetProcessorTest#handleCreateCollMessage(byte[]).mjava","sourceNew":"  private void handleCreateCollMessage(byte[] bytes) {\n    try {\n      ZkNodeProps props = ZkNodeProps.load(bytes);\n      if(CollectionParams.CollectionAction.CREATE.isEqual(props.getStr(\"operation\"))){\n        String collName = props.getStr(\"name\") ;\n        if(collName != null) collectionsSet.put(collName, new ClusterState.CollectionRef(\n            new DocCollection(collName, new HashMap<>(), props.getProperties(), DocRouter.DEFAULT)));\n      }\n      if (CollectionParams.CollectionAction.ADDREPLICA.isEqual(props.getStr(\"operation\"))) {\n        replicas.add(props);\n      }\n    } catch (Exception e) { }\n  }\n\n","sourceOld":"  private void handleCreateCollMessage(byte[] bytes) {\n    try {\n      ZkNodeProps props = ZkNodeProps.load(bytes);\n      if(CollectionParams.CollectionAction.CREATE.isEqual(props.getStr(\"operation\"))){\n        String collName = props.getStr(\"name\") ;\n        if(collName != null) collectionsSet.add(collName);\n      }\n    } catch (Exception e) { }\n  }\n\n","bugFix":null,"bugIntro":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b7dfa64bc2074fb87d0ca70095a644c1ead107e1","date":1498356339,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/OverseerCollectionConfigSetProcessorTest#handleCreateCollMessage(byte[]).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/OverseerCollectionConfigSetProcessorTest#handleCreateCollMessage(byte[]).mjava","sourceNew":"  private void handleCreateCollMessage(byte[] bytes) {\n    try {\n      ZkNodeProps props = ZkNodeProps.load(bytes);\n      if(CollectionParams.CollectionAction.CREATE.isEqual(props.getStr(\"operation\"))){\n        String collName = props.getStr(\"name\") ;\n        if(collName != null) collectionsSet.put(collName, new ClusterState.CollectionRef(\n            new DocCollection(collName, new HashMap<>(), props.getProperties(), DocRouter.DEFAULT)));\n      }\n      if (CollectionParams.CollectionAction.ADDREPLICA.isEqual(props.getStr(\"operation\"))) {\n        replicas.add(props);\n      }\n    } catch (Exception e) { }\n  }\n\n","sourceOld":"  private void handleCreateCollMessage(byte[] bytes) {\n    try {\n      ZkNodeProps props = ZkNodeProps.load(bytes);\n      if(CollectionParams.CollectionAction.CREATE.isEqual(props.getStr(\"operation\"))){\n        String collName = props.getStr(\"name\") ;\n        if(collName != null) collectionsSet.add(collName);\n      }\n    } catch (Exception e) { }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/OverseerCollectionConfigSetProcessorTest#handleCreateCollMessage(byte[]).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/OverseerCollectionConfigSetProcessorTest#handleCreateCollMessage(byte[]).mjava","sourceNew":"  private void handleCreateCollMessage(byte[] bytes) {\n    try {\n      ZkNodeProps props = ZkNodeProps.load(bytes);\n      if(CollectionParams.CollectionAction.CREATE.isEqual(props.getStr(\"operation\"))){\n        String collName = props.getStr(\"name\") ;\n        if(collName != null) collectionsSet.put(collName, new ClusterState.CollectionRef(\n            new DocCollection(collName, new HashMap<>(), props.getProperties(), DocRouter.DEFAULT)));\n      }\n      if (CollectionParams.CollectionAction.ADDREPLICA.isEqual(props.getStr(\"operation\"))) {\n        replicas.add(props);\n      }\n    } catch (Exception e) { }\n  }\n\n","sourceOld":"  private void handleCreateCollMessage(byte[] bytes) {\n    try {\n      ZkNodeProps props = ZkNodeProps.load(bytes);\n      if(CollectionParams.CollectionAction.CREATE.isEqual(props.getStr(\"operation\"))){\n        String collName = props.getStr(\"name\") ;\n        if(collName != null) collectionsSet.add(collName);\n      }\n    } catch (Exception e) { }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"bb222a3f9d9421d5c95afce73013fbd8de07ea1f","date":1543514331,"type":3,"author":"markrmiller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/OverseerCollectionConfigSetProcessorTest#handleCreateCollMessage(byte[]).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/OverseerCollectionConfigSetProcessorTest#handleCreateCollMessage(byte[]).mjava","sourceNew":"  private void handleCreateCollMessage(byte[] bytes) {\n    log.info(\"track created replicas / collections\");\n    try {\n      ZkNodeProps props = ZkNodeProps.load(bytes);\n      if (CollectionParams.CollectionAction.CREATE.isEqual(props.getStr(\"operation\"))) {\n        String collName = props.getStr(\"name\");\n        if (collName != null) collectionsSet.put(collName, new ClusterState.CollectionRef(\n            new DocCollection(collName, new HashMap<>(), props.getProperties(), DocRouter.DEFAULT)));\n      }\n      if (CollectionParams.CollectionAction.ADDREPLICA.isEqual(props.getStr(\"operation\"))) {\n        replicas.add(props);\n      }\n    } catch (Exception e) {}\n  }\n\n","sourceOld":"  private void handleCreateCollMessage(byte[] bytes) {\n    try {\n      ZkNodeProps props = ZkNodeProps.load(bytes);\n      if(CollectionParams.CollectionAction.CREATE.isEqual(props.getStr(\"operation\"))){\n        String collName = props.getStr(\"name\") ;\n        if(collName != null) collectionsSet.put(collName, new ClusterState.CollectionRef(\n            new DocCollection(collName, new HashMap<>(), props.getProperties(), DocRouter.DEFAULT)));\n      }\n      if (CollectionParams.CollectionAction.ADDREPLICA.isEqual(props.getStr(\"operation\"))) {\n        replicas.add(props);\n      }\n    } catch (Exception e) { }\n  }\n\n","bugFix":["a9b4296bd51ca61b482138791478afdd0f7d3a3d","30c688f7052130cef7bd419c85e3c5be214f7b9e"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"2209af2c265d2258ec4b29c8cc78622d36994a15":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a9b4296bd51ca61b482138791478afdd0f7d3a3d":["2209af2c265d2258ec4b29c8cc78622d36994a15"],"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["28288370235ed02234a64753cdbf0c6ec096304a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b7dfa64bc2074fb87d0ca70095a644c1ead107e1":["2209af2c265d2258ec4b29c8cc78622d36994a15","a9b4296bd51ca61b482138791478afdd0f7d3a3d"],"28288370235ed02234a64753cdbf0c6ec096304a":["2209af2c265d2258ec4b29c8cc78622d36994a15","a9b4296bd51ca61b482138791478afdd0f7d3a3d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"]},"commit2Childs":{"2209af2c265d2258ec4b29c8cc78622d36994a15":["a9b4296bd51ca61b482138791478afdd0f7d3a3d","b7dfa64bc2074fb87d0ca70095a644c1ead107e1","28288370235ed02234a64753cdbf0c6ec096304a"],"a9b4296bd51ca61b482138791478afdd0f7d3a3d":["b7dfa64bc2074fb87d0ca70095a644c1ead107e1","28288370235ed02234a64753cdbf0c6ec096304a"],"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["2209af2c265d2258ec4b29c8cc78622d36994a15"],"b7dfa64bc2074fb87d0ca70095a644c1ead107e1":[],"28288370235ed02234a64753cdbf0c6ec096304a":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b7dfa64bc2074fb87d0ca70095a644c1ead107e1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}