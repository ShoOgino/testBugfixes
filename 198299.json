{"path":"lucene/core/src/java/org/apache/lucene/util/packed/PackedReaderIterator#PackedReaderIterator(int,int,IndexInput).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/packed/PackedReaderIterator#PackedReaderIterator(int,int,IndexInput).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/packed/PackedReaderIterator#PackedReaderIterator(int,int,IndexInput).mjava","sourceNew":"  public PackedReaderIterator(int bitsPerValue, int valueCount, IndexInput in)\n    throws IOException {\n\n    this.valueCount = valueCount;\n    this.bitsPerValue = bitsPerValue;\n    \n    this.in = in;\n    masks = new long[bitsPerValue];\n\n    long v = 1;\n    for (int i = 0; i < bitsPerValue; i++) {\n      v *= 2;\n      masks[i] = v - 1;\n    }\n  }\n\n","sourceOld":"  public PackedReaderIterator(int bitsPerValue, int valueCount, IndexInput in)\n    throws IOException {\n\n    this.valueCount = valueCount;\n    this.bitsPerValue = bitsPerValue;\n    \n    this.in = in;\n    masks = new long[bitsPerValue];\n\n    long v = 1;\n    for (int i = 0; i < bitsPerValue; i++) {\n      v *= 2;\n      masks[i] = v - 1;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4a470c93b2b0f8f51241f52705fc110a01f27ad2","date":1337969379,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/packed/PackedReaderIterator#PackedReaderIterator(int,int,IndexInput).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/packed/PackedReaderIterator#PackedReaderIterator(int,int,IndexInput).mjava","sourceNew":"  public PackedReaderIterator(int valueCount, int bitsPerValue, IndexInput in)\n    throws IOException {\n    super(valueCount, bitsPerValue, in);\n\n    masks = new long[bitsPerValue];\n\n    long v = 1;\n    for (int i = 0; i < bitsPerValue; i++) {\n      v *= 2;\n      masks[i] = v - 1;\n    }\n  }\n\n","sourceOld":"  public PackedReaderIterator(int bitsPerValue, int valueCount, IndexInput in)\n    throws IOException {\n\n    this.valueCount = valueCount;\n    this.bitsPerValue = bitsPerValue;\n    \n    this.in = in;\n    masks = new long[bitsPerValue];\n\n    long v = 1;\n    for (int i = 0; i < bitsPerValue; i++) {\n      v *= 2;\n      masks[i] = v - 1;\n    }\n  }\n\n","bugFix":null,"bugIntro":["4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4d3e8520fd031bab31fd0e4d480e55958bc45efe","date":1340901565,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/packed/PackedReaderIterator#PackedReaderIterator(int,int,IndexInput).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/packed/PackedReaderIterator#PackedReaderIterator(int,int,IndexInput).mjava","sourceNew":"  public PackedReaderIterator(int valueCount, int bitsPerValue, IndexInput in) {\n    super(valueCount, bitsPerValue, in);\n\n    masks = new long[bitsPerValue];\n\n    long v = 1;\n    for (int i = 0; i < bitsPerValue; i++) {\n      v *= 2;\n      masks[i] = v - 1;\n    }\n  }\n\n","sourceOld":"  public PackedReaderIterator(int valueCount, int bitsPerValue, IndexInput in)\n    throws IOException {\n    super(valueCount, bitsPerValue, in);\n\n    masks = new long[bitsPerValue];\n\n    long v = 1;\n    for (int i = 0; i < bitsPerValue; i++) {\n      v *= 2;\n      masks[i] = v - 1;\n    }\n  }\n\n","bugFix":["4a470c93b2b0f8f51241f52705fc110a01f27ad2","955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"55110eb60c5105294fc2ae7912d82b750865aa58","date":1341389822,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/util/packed/PackedReaderIterator#PackedReaderIterator(int,int,IndexInput).mjava","sourceNew":null,"sourceOld":"  public PackedReaderIterator(int valueCount, int bitsPerValue, IndexInput in) {\n    super(valueCount, bitsPerValue, in);\n\n    masks = new long[bitsPerValue];\n\n    long v = 1;\n    for (int i = 0; i < bitsPerValue; i++) {\n      v *= 2;\n      masks[i] = v - 1;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":4,"author":"Michael McCandless","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/util/packed/PackedReaderIterator#PackedReaderIterator(int,int,IndexInput).mjava","sourceNew":null,"sourceOld":"  public PackedReaderIterator(int valueCount, int bitsPerValue, IndexInput in)\n    throws IOException {\n    super(valueCount, bitsPerValue, in);\n\n    masks = new long[bitsPerValue];\n\n    long v = 1;\n    for (int i = 0; i < bitsPerValue; i++) {\n      v *= 2;\n      masks[i] = v - 1;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"55110eb60c5105294fc2ae7912d82b750865aa58":["4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["4a470c93b2b0f8f51241f52705fc110a01f27ad2","55110eb60c5105294fc2ae7912d82b750865aa58"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4d3e8520fd031bab31fd0e4d480e55958bc45efe":["4a470c93b2b0f8f51241f52705fc110a01f27ad2"],"4a470c93b2b0f8f51241f52705fc110a01f27ad2":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["55110eb60c5105294fc2ae7912d82b750865aa58"]},"commit2Childs":{"55110eb60c5105294fc2ae7912d82b750865aa58":["fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["4a470c93b2b0f8f51241f52705fc110a01f27ad2"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"4d3e8520fd031bab31fd0e4d480e55958bc45efe":["55110eb60c5105294fc2ae7912d82b750865aa58"],"4a470c93b2b0f8f51241f52705fc110a01f27ad2":["fe33227f6805edab2036cbb80645cc4e2d1fa424","4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}