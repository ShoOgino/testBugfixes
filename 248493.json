{"path":"src/java/org/apache/lucene/index/DirectoryReader#readerIndex(int,int[],int).mjava","commits":[{"id":"0f4b0a12e9aa5d9fd24932c99a893fb6a04c74c1","date":1244392278,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/DirectoryReader#readerIndex(int,int[],int).mjava","pathOld":"src/java/org/apache/lucene/index/MultiSegmentReader#readerIndex(int,int[],int).mjava","sourceNew":"  final static int readerIndex(int n, int[] starts, int numSubReaders) {    // find reader for doc n:\n    int lo = 0;                                      // search starts array\n    int hi = numSubReaders - 1;                  // for first element less\n\n    while (hi >= lo) {\n      int mid = (lo + hi) >>> 1;\n      int midValue = starts[mid];\n      if (n < midValue)\n        hi = mid - 1;\n      else if (n > midValue)\n        lo = mid + 1;\n      else {                                      // found a match\n        while (mid+1 < numSubReaders && starts[mid+1] == midValue) {\n          mid++;                                  // scan to last match\n        }\n        return mid;\n      }\n    }\n    return hi;\n  }\n\n","sourceOld":"  final static int readerIndex(int n, int[] starts, int numSubReaders) {    // find reader for doc n:\n    int lo = 0;                                      // search starts array\n    int hi = numSubReaders - 1;                  // for first element less\n\n    while (hi >= lo) {\n      int mid = (lo + hi) >>> 1;\n      int midValue = starts[mid];\n      if (n < midValue)\n        hi = mid - 1;\n      else if (n > midValue)\n        lo = mid + 1;\n      else {                                      // found a match\n        while (mid+1 < numSubReaders && starts[mid+1] == midValue) {\n          mid++;                                  // scan to last match\n        }\n        return mid;\n      }\n    }\n    return hi;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DirectoryReader#readerIndex(int,int[],int).mjava","pathOld":"src/java/org/apache/lucene/index/DirectoryReader#readerIndex(int,int[],int).mjava","sourceNew":"  final static int readerIndex(int n, int[] starts, int numSubReaders) {    // find reader for doc n:\n    int lo = 0;                                      // search starts array\n    int hi = numSubReaders - 1;                  // for first element less\n\n    while (hi >= lo) {\n      int mid = (lo + hi) >>> 1;\n      int midValue = starts[mid];\n      if (n < midValue)\n        hi = mid - 1;\n      else if (n > midValue)\n        lo = mid + 1;\n      else {                                      // found a match\n        while (mid+1 < numSubReaders && starts[mid+1] == midValue) {\n          mid++;                                  // scan to last match\n        }\n        return mid;\n      }\n    }\n    return hi;\n  }\n\n","sourceOld":"  final static int readerIndex(int n, int[] starts, int numSubReaders) {    // find reader for doc n:\n    int lo = 0;                                      // search starts array\n    int hi = numSubReaders - 1;                  // for first element less\n\n    while (hi >= lo) {\n      int mid = (lo + hi) >>> 1;\n      int midValue = starts[mid];\n      if (n < midValue)\n        hi = mid - 1;\n      else if (n > midValue)\n        lo = mid + 1;\n      else {                                      // found a match\n        while (mid+1 < numSubReaders && starts[mid+1] == midValue) {\n          mid++;                                  // scan to last match\n        }\n        return mid;\n      }\n    }\n    return hi;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0f4b0a12e9aa5d9fd24932c99a893fb6a04c74c1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["0f4b0a12e9aa5d9fd24932c99a893fb6a04c74c1"]},"commit2Childs":{"0f4b0a12e9aa5d9fd24932c99a893fb6a04c74c1":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0f4b0a12e9aa5d9fd24932c99a893fb6a04c74c1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}