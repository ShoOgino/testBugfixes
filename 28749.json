{"path":"lucene/src/java/org/apache/lucene/index/values/VarStraightBytesImpl.DirectVarStraightSource#position(int).mjava","commits":[{"id":"e128967bca58657bc0039d4bfe631e63e81f1977","date":1317978310,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/values/VarStraightBytesImpl.DirectVarStraightSource#position(int).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    protected int position(int docID) throws IOException {\n      final long offset = index.get(docID);\n      data.seek(baseOffset + offset);\n      return (int) (index.next() - offset);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"142daaa8f2b32cb229bd23e7aabd06d2a7d3c6fb","date":1320691430,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/values/VarStraightBytesImpl.DirectVarStraightSource#position(int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/VarStraightBytesImpl.DirectVarStraightSource#position(int).mjava","sourceNew":"    @Override\n    protected int position(int docID) throws IOException {\n      final long offset = index.get(docID);\n      data.seek(baseOffset + offset);\n      // Safe to do 1+docID because we write sentinel at the end:\n      final long nextOffset = index.get(1+docID);\n      return (int) (nextOffset - offset);\n    }\n\n","sourceOld":"    @Override\n    protected int position(int docID) throws IOException {\n      final long offset = index.get(docID);\n      data.seek(baseOffset + offset);\n      return (int) (index.next() - offset);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f9efc72acdea22f5285be0a808f8bba51bb8e367","date":1323217280,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/lucene40/values/VarStraightBytesImpl.DirectVarStraightSource#position(int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/VarStraightBytesImpl.DirectVarStraightSource#position(int).mjava","sourceNew":"    @Override\n    protected int position(int docID) throws IOException {\n      final long offset = index.get(docID);\n      data.seek(baseOffset + offset);\n      // Safe to do 1+docID because we write sentinel at the end:\n      final long nextOffset = index.get(1+docID);\n      return (int) (nextOffset - offset);\n    }\n\n","sourceOld":"    @Override\n    protected int position(int docID) throws IOException {\n      final long offset = index.get(docID);\n      data.seek(baseOffset + offset);\n      // Safe to do 1+docID because we write sentinel at the end:\n      final long nextOffset = index.get(1+docID);\n      return (int) (nextOffset - offset);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d638301ad1cfcae567b681b893bc8781f0ee48a5","date":1323801546,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/lucene40/values/VarStraightBytesImpl.DirectVarStraightSource#position(int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/VarStraightBytesImpl.DirectVarStraightSource#position(int).mjava","sourceNew":"    @Override\n    protected int position(int docID) throws IOException {\n      final long offset = index.get(docID);\n      data.seek(baseOffset + offset);\n      // Safe to do 1+docID because we write sentinel at the end:\n      final long nextOffset = index.get(1+docID);\n      return (int) (nextOffset - offset);\n    }\n\n","sourceOld":"    @Override\n    protected int position(int docID) throws IOException {\n      final long offset = index.get(docID);\n      data.seek(baseOffset + offset);\n      // Safe to do 1+docID because we write sentinel at the end:\n      final long nextOffset = index.get(1+docID);\n      return (int) (nextOffset - offset);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"142daaa8f2b32cb229bd23e7aabd06d2a7d3c6fb":["e128967bca58657bc0039d4bfe631e63e81f1977"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f9efc72acdea22f5285be0a808f8bba51bb8e367":["142daaa8f2b32cb229bd23e7aabd06d2a7d3c6fb"],"e128967bca58657bc0039d4bfe631e63e81f1977":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d638301ad1cfcae567b681b893bc8781f0ee48a5"],"d638301ad1cfcae567b681b893bc8781f0ee48a5":["142daaa8f2b32cb229bd23e7aabd06d2a7d3c6fb","f9efc72acdea22f5285be0a808f8bba51bb8e367"]},"commit2Childs":{"142daaa8f2b32cb229bd23e7aabd06d2a7d3c6fb":["f9efc72acdea22f5285be0a808f8bba51bb8e367","d638301ad1cfcae567b681b893bc8781f0ee48a5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e128967bca58657bc0039d4bfe631e63e81f1977"],"f9efc72acdea22f5285be0a808f8bba51bb8e367":["d638301ad1cfcae567b681b893bc8781f0ee48a5"],"e128967bca58657bc0039d4bfe631e63e81f1977":["142daaa8f2b32cb229bd23e7aabd06d2a7d3c6fb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"d638301ad1cfcae567b681b893bc8781f0ee48a5":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}