{"path":"src/java/org/apache/lucene/index/IndexFileDeleter.CommitPoint#CommitPoint(Collection,Directory,SegmentInfos).mjava","commits":[{"id":"d60f4e15b3e2fb549c23c8f2096249d439876df8","date":1204035825,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexFileDeleter.CommitPoint#CommitPoint(Collection,Directory,SegmentInfos).mjava","pathOld":"src/java/org/apache/lucene/index/IndexFileDeleter.CommitPoint#CommitPoint(SegmentInfos).mjava","sourceNew":"    public CommitPoint(Collection commitsToDelete, Directory directory, SegmentInfos segmentInfos) throws IOException {\n      this.directory = directory;\n      this.commitsToDelete = commitsToDelete;\n      segmentsFileName = segmentInfos.getCurrentSegmentFileName();\n      int size = segmentInfos.size();\n      files = new ArrayList(size);\n      files.add(segmentsFileName);\n      gen = segmentInfos.getGeneration();\n      for(int i=0;i<size;i++) {\n        SegmentInfo segmentInfo = segmentInfos.info(i);\n        if (segmentInfo.dir == directory) {\n          files.addAll(segmentInfo.files());\n        }\n      }\n    }\n\n","sourceOld":"    public CommitPoint(SegmentInfos segmentInfos) throws IOException {\n      segmentsFileName = segmentInfos.getCurrentSegmentFileName();\n      int size = segmentInfos.size();\n      files = new ArrayList(size);\n      files.add(segmentsFileName);\n      gen = segmentInfos.getGeneration();\n      for(int i=0;i<size;i++) {\n        SegmentInfo segmentInfo = segmentInfos.info(i);\n        if (segmentInfo.dir == directory) {\n          files.addAll(segmentInfo.files());\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"59818e85900870556e1bdd604772c77d74f57d89","date":1211972433,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexFileDeleter.CommitPoint#CommitPoint(Collection,Directory,SegmentInfos).mjava","pathOld":"src/java/org/apache/lucene/index/IndexFileDeleter.CommitPoint#CommitPoint(Collection,Directory,SegmentInfos).mjava","sourceNew":"    public CommitPoint(Collection commitsToDelete, Directory directory, SegmentInfos segmentInfos) throws IOException {\n      this.directory = directory;\n      this.commitsToDelete = commitsToDelete;\n      segmentsFileName = segmentInfos.getCurrentSegmentFileName();\n      version = segmentInfos.getVersion();\n      generation = segmentInfos.getGeneration();\n      int size = segmentInfos.size();\n      files = new ArrayList(size);\n      files.add(segmentsFileName);\n      gen = segmentInfos.getGeneration();\n      for(int i=0;i<size;i++) {\n        SegmentInfo segmentInfo = segmentInfos.info(i);\n        if (segmentInfo.dir == directory) {\n          files.addAll(segmentInfo.files());\n        }\n      }\n    }\n\n","sourceOld":"    public CommitPoint(Collection commitsToDelete, Directory directory, SegmentInfos segmentInfos) throws IOException {\n      this.directory = directory;\n      this.commitsToDelete = commitsToDelete;\n      segmentsFileName = segmentInfos.getCurrentSegmentFileName();\n      int size = segmentInfos.size();\n      files = new ArrayList(size);\n      files.add(segmentsFileName);\n      gen = segmentInfos.getGeneration();\n      for(int i=0;i<size;i++) {\n        SegmentInfo segmentInfo = segmentInfos.info(i);\n        if (segmentInfo.dir == directory) {\n          files.addAll(segmentInfo.files());\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":["c01638f4dd94981c1d3d52c4f7991246a5a24aba"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"0607932f46aecaff6aa9d5498ef1eac67a64b7d9","date":1215164592,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexFileDeleter.CommitPoint#CommitPoint(Collection,Directory,SegmentInfos).mjava","pathOld":"src/java/org/apache/lucene/index/IndexFileDeleter.CommitPoint#CommitPoint(Collection,Directory,SegmentInfos).mjava","sourceNew":"    public CommitPoint(Collection commitsToDelete, Directory directory, SegmentInfos segmentInfos) throws IOException {\n      this.directory = directory;\n      this.commitsToDelete = commitsToDelete;\n      segmentsFileName = segmentInfos.getCurrentSegmentFileName();\n      version = segmentInfos.getVersion();\n      generation = segmentInfos.getGeneration();\n      int size = segmentInfos.size();\n      files = new ArrayList(size);\n      files.add(segmentsFileName);\n      gen = segmentInfos.getGeneration();\n      for(int i=0;i<size;i++) {\n        SegmentInfo segmentInfo = segmentInfos.info(i);\n        if (segmentInfo.dir == directory) {\n          files.addAll(segmentInfo.files());\n        }\n      } \n      isOptimized = segmentInfos.size() == 1 && !segmentInfos.info(0).hasDeletions();\n    }\n\n","sourceOld":"    public CommitPoint(Collection commitsToDelete, Directory directory, SegmentInfos segmentInfos) throws IOException {\n      this.directory = directory;\n      this.commitsToDelete = commitsToDelete;\n      segmentsFileName = segmentInfos.getCurrentSegmentFileName();\n      version = segmentInfos.getVersion();\n      generation = segmentInfos.getGeneration();\n      int size = segmentInfos.size();\n      files = new ArrayList(size);\n      files.add(segmentsFileName);\n      gen = segmentInfos.getGeneration();\n      for(int i=0;i<size;i++) {\n        SegmentInfo segmentInfo = segmentInfos.info(i);\n        if (segmentInfo.dir == directory) {\n          files.addAll(segmentInfo.files());\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":["0f44610301174bfb430443d89a88dc1c502feea1"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4b1444275c93a8051a6fe6158639467a144ae0a4","date":1224502393,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexFileDeleter.CommitPoint#CommitPoint(Collection,Directory,SegmentInfos).mjava","pathOld":"src/java/org/apache/lucene/index/IndexFileDeleter.CommitPoint#CommitPoint(Collection,Directory,SegmentInfos).mjava","sourceNew":"    public CommitPoint(Collection commitsToDelete, Directory directory, SegmentInfos segmentInfos) throws IOException {\n      this.directory = directory;\n      this.commitsToDelete = commitsToDelete;\n      userData = segmentInfos.getUserData();\n      segmentsFileName = segmentInfos.getCurrentSegmentFileName();\n      version = segmentInfos.getVersion();\n      generation = segmentInfos.getGeneration();\n      int size = segmentInfos.size();\n      files = new ArrayList(size);\n      files.add(segmentsFileName);\n      gen = segmentInfos.getGeneration();\n      for(int i=0;i<size;i++) {\n        SegmentInfo segmentInfo = segmentInfos.info(i);\n        if (segmentInfo.dir == directory) {\n          files.addAll(segmentInfo.files());\n        }\n      } \n      isOptimized = segmentInfos.size() == 1 && !segmentInfos.info(0).hasDeletions();\n    }\n\n","sourceOld":"    public CommitPoint(Collection commitsToDelete, Directory directory, SegmentInfos segmentInfos) throws IOException {\n      this.directory = directory;\n      this.commitsToDelete = commitsToDelete;\n      segmentsFileName = segmentInfos.getCurrentSegmentFileName();\n      version = segmentInfos.getVersion();\n      generation = segmentInfos.getGeneration();\n      int size = segmentInfos.size();\n      files = new ArrayList(size);\n      files.add(segmentsFileName);\n      gen = segmentInfos.getGeneration();\n      for(int i=0;i<size;i++) {\n        SegmentInfo segmentInfo = segmentInfos.info(i);\n        if (segmentInfo.dir == directory) {\n          files.addAll(segmentInfo.files());\n        }\n      } \n      isOptimized = segmentInfos.size() == 1 && !segmentInfos.info(0).hasDeletions();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"0f44610301174bfb430443d89a88dc1c502feea1","date":1231194664,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexFileDeleter.CommitPoint#CommitPoint(Collection,Directory,SegmentInfos).mjava","pathOld":"src/java/org/apache/lucene/index/IndexFileDeleter.CommitPoint#CommitPoint(Collection,Directory,SegmentInfos).mjava","sourceNew":"    public CommitPoint(Collection commitsToDelete, Directory directory, SegmentInfos segmentInfos) throws IOException {\n      this.directory = directory;\n      this.commitsToDelete = commitsToDelete;\n      userData = segmentInfos.getUserData();\n      segmentsFileName = segmentInfos.getCurrentSegmentFileName();\n      version = segmentInfos.getVersion();\n      generation = segmentInfos.getGeneration();\n      files = Collections.unmodifiableCollection(segmentInfos.files(directory, true));\n      gen = segmentInfos.getGeneration();\n      isOptimized = segmentInfos.size() == 1 && !segmentInfos.info(0).hasDeletions();\n\n      assert !segmentInfos.hasExternalSegments(directory);\n    }\n\n","sourceOld":"    public CommitPoint(Collection commitsToDelete, Directory directory, SegmentInfos segmentInfos) throws IOException {\n      this.directory = directory;\n      this.commitsToDelete = commitsToDelete;\n      userData = segmentInfos.getUserData();\n      segmentsFileName = segmentInfos.getCurrentSegmentFileName();\n      version = segmentInfos.getVersion();\n      generation = segmentInfos.getGeneration();\n      int size = segmentInfos.size();\n      files = new ArrayList(size);\n      files.add(segmentsFileName);\n      gen = segmentInfos.getGeneration();\n      for(int i=0;i<size;i++) {\n        SegmentInfo segmentInfo = segmentInfos.info(i);\n        if (segmentInfo.dir == directory) {\n          files.addAll(segmentInfo.files());\n        }\n      } \n      isOptimized = segmentInfos.size() == 1 && !segmentInfos.info(0).hasDeletions();\n    }\n\n","bugFix":["0607932f46aecaff6aa9d5498ef1eac67a64b7d9","3d8ca99f990f6d6c6f14a1a826740a63a9d9d4b5","8b6187898fc4413ccd18229711786550a280383c"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ef82ff03e4016c705811b2658e81471a645c0e49","date":1255900293,"type":5,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexFileDeleter.CommitPoint#CommitPoint(Collection[IndexCommit],Directory,SegmentInfos).mjava","pathOld":"src/java/org/apache/lucene/index/IndexFileDeleter.CommitPoint#CommitPoint(Collection,Directory,SegmentInfos).mjava","sourceNew":"    public CommitPoint(Collection<IndexCommit> commitsToDelete, Directory directory, SegmentInfos segmentInfos) throws IOException {\n      this.directory = directory;\n      this.commitsToDelete = commitsToDelete;\n      userData = segmentInfos.getUserData();\n      segmentsFileName = segmentInfos.getCurrentSegmentFileName();\n      version = segmentInfos.getVersion();\n      generation = segmentInfos.getGeneration();\n      files = Collections.unmodifiableCollection(segmentInfos.files(directory, true));\n      gen = segmentInfos.getGeneration();\n      isOptimized = segmentInfos.size() == 1 && !segmentInfos.info(0).hasDeletions();\n\n      assert !segmentInfos.hasExternalSegments(directory);\n    }\n\n","sourceOld":"    public CommitPoint(Collection commitsToDelete, Directory directory, SegmentInfos segmentInfos) throws IOException {\n      this.directory = directory;\n      this.commitsToDelete = commitsToDelete;\n      userData = segmentInfos.getUserData();\n      segmentsFileName = segmentInfos.getCurrentSegmentFileName();\n      version = segmentInfos.getVersion();\n      generation = segmentInfos.getGeneration();\n      files = Collections.unmodifiableCollection(segmentInfos.files(directory, true));\n      gen = segmentInfos.getGeneration();\n      isOptimized = segmentInfos.size() == 1 && !segmentInfos.info(0).hasDeletions();\n\n      assert !segmentInfos.hasExternalSegments(directory);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"d60f4e15b3e2fb549c23c8f2096249d439876df8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"0f44610301174bfb430443d89a88dc1c502feea1":["4b1444275c93a8051a6fe6158639467a144ae0a4"],"4b1444275c93a8051a6fe6158639467a144ae0a4":["0607932f46aecaff6aa9d5498ef1eac67a64b7d9"],"ef82ff03e4016c705811b2658e81471a645c0e49":["0f44610301174bfb430443d89a88dc1c502feea1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0607932f46aecaff6aa9d5498ef1eac67a64b7d9":["59818e85900870556e1bdd604772c77d74f57d89"],"59818e85900870556e1bdd604772c77d74f57d89":["d60f4e15b3e2fb549c23c8f2096249d439876df8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ef82ff03e4016c705811b2658e81471a645c0e49"]},"commit2Childs":{"d60f4e15b3e2fb549c23c8f2096249d439876df8":["59818e85900870556e1bdd604772c77d74f57d89"],"0f44610301174bfb430443d89a88dc1c502feea1":["ef82ff03e4016c705811b2658e81471a645c0e49"],"4b1444275c93a8051a6fe6158639467a144ae0a4":["0f44610301174bfb430443d89a88dc1c502feea1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d60f4e15b3e2fb549c23c8f2096249d439876df8"],"ef82ff03e4016c705811b2658e81471a645c0e49":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"0607932f46aecaff6aa9d5498ef1eac67a64b7d9":["4b1444275c93a8051a6fe6158639467a144ae0a4"],"59818e85900870556e1bdd604772c77d74f57d89":["0607932f46aecaff6aa9d5498ef1eac67a64b7d9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}