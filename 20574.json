{"path":"lucene/src/test/org/apache/lucene/index/TestCrashCausesCorruptIndex#indexAndCrashOnCreateOutputSegments2().mjava","commits":[{"id":"fb8c6c8b35c7806f1ef4d37d52944b67158db2d1","date":1323375642,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestCrashCausesCorruptIndex#indexAndCrashOnCreateOutputSegments2().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * index 1 document and commit.\n   * prepare for crashing.\n   * index 1 more document, and upon commit, creation of segments_2 will crash.\n   * \n   * @throws IOException\n   */\n  private void indexAndCrashOnCreateOutputSegments2() throws IOException {\n    Directory realDirectory = FSDirectory.open(path);\n    CrashAfterCreateOutput crashAfterCreateOutput = new CrashAfterCreateOutput(realDirectory);\n            \n    // NOTE: cannot use RandomIndexWriter because it\n    // sometimes commits:\n    IndexWriter indexWriter = new IndexWriter(crashAfterCreateOutput,\n                                              newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n            \n    indexWriter.addDocument(getDocument());\n    // writes segments_1:\n    indexWriter.commit();\n            \n    crashAfterCreateOutput.setCrashAfterCreateOutput(\"segments_2\");\n    indexWriter.addDocument(getDocument());\n    try {\n      // tries to write segments_2 but hits fake exc:\n      indexWriter.commit();\n      fail(\"should have hit CrashingException\");\n    } catch (CrashingException e) {\n      // expected\n    }\n    // writes segments_3\n    indexWriter.close();\n    assertFalse(realDirectory.fileExists(\"segments_2\"));\n    crashAfterCreateOutput.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["05fe562aa248790944d43cdd478f512572835ba0"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","date":1323437438,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestCrashCausesCorruptIndex#indexAndCrashOnCreateOutputSegments2().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * index 1 document and commit.\n   * prepare for crashing.\n   * index 1 more document, and upon commit, creation of segments_2 will crash.\n   * \n   * @throws IOException\n   */\n  private void indexAndCrashOnCreateOutputSegments2() throws IOException {\n    Directory realDirectory = FSDirectory.open(path);\n    CrashAfterCreateOutput crashAfterCreateOutput = new CrashAfterCreateOutput(realDirectory);\n            \n    // NOTE: cannot use RandomIndexWriter because it\n    // sometimes commits:\n    IndexWriter indexWriter = new IndexWriter(crashAfterCreateOutput,\n                                              newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n            \n    indexWriter.addDocument(getDocument());\n    // writes segments_1:\n    indexWriter.commit();\n            \n    crashAfterCreateOutput.setCrashAfterCreateOutput(\"segments_2\");\n    indexWriter.addDocument(getDocument());\n    try {\n      // tries to write segments_2 but hits fake exc:\n      indexWriter.commit();\n      fail(\"should have hit CrashingException\");\n    } catch (CrashingException e) {\n      // expected\n    }\n    // writes segments_3\n    indexWriter.close();\n    assertFalse(realDirectory.fileExists(\"segments_2\"));\n    crashAfterCreateOutput.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestCrashCausesCorruptIndex#indexAndCrashOnCreateOutputSegments2().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestCrashCausesCorruptIndex#indexAndCrashOnCreateOutputSegments2().mjava","sourceNew":"  /**\n   * index 1 document and commit.\n   * prepare for crashing.\n   * index 1 more document, and upon commit, creation of segments_2 will crash.\n   * \n   * @throws IOException\n   */\n  private void indexAndCrashOnCreateOutputSegments2() throws IOException {\n    Directory realDirectory = FSDirectory.open(path);\n    CrashAfterCreateOutput crashAfterCreateOutput = new CrashAfterCreateOutput(realDirectory);\n            \n    // NOTE: cannot use RandomIndexWriter because it\n    // sometimes commits:\n    IndexWriter indexWriter = new IndexWriter(crashAfterCreateOutput,\n                                              newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n            \n    indexWriter.addDocument(getDocument());\n    // writes segments_1:\n    indexWriter.commit();\n            \n    crashAfterCreateOutput.setCrashAfterCreateOutput(\"segments_2\");\n    indexWriter.addDocument(getDocument());\n    try {\n      // tries to write segments_2 but hits fake exc:\n      indexWriter.commit();\n      fail(\"should have hit CrashingException\");\n    } catch (CrashingException e) {\n      // expected\n    }\n    // writes segments_3\n    indexWriter.close();\n    assertFalse(realDirectory.fileExists(\"segments_2\"));\n    crashAfterCreateOutput.close();\n  }\n\n","sourceOld":"  /**\n   * index 1 document and commit.\n   * prepare for crashing.\n   * index 1 more document, and upon commit, creation of segments_2 will crash.\n   * \n   * @throws IOException\n   */\n  private void indexAndCrashOnCreateOutputSegments2() throws IOException {\n    Directory realDirectory = FSDirectory.open(path);\n    CrashAfterCreateOutput crashAfterCreateOutput = new CrashAfterCreateOutput(realDirectory);\n            \n    // NOTE: cannot use RandomIndexWriter because it\n    // sometimes commits:\n    IndexWriter indexWriter = new IndexWriter(crashAfterCreateOutput,\n                                              newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n            \n    indexWriter.addDocument(getDocument());\n    // writes segments_1:\n    indexWriter.commit();\n            \n    crashAfterCreateOutput.setCrashAfterCreateOutput(\"segments_2\");\n    indexWriter.addDocument(getDocument());\n    try {\n      // tries to write segments_2 but hits fake exc:\n      indexWriter.commit();\n      fail(\"should have hit CrashingException\");\n    } catch (CrashingException e) {\n      // expected\n    }\n    // writes segments_3\n    indexWriter.close();\n    assertFalse(realDirectory.fileExists(\"segments_2\"));\n    crashAfterCreateOutput.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"fb8c6c8b35c7806f1ef4d37d52944b67158db2d1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","fb8c6c8b35c7806f1ef4d37d52944b67158db2d1"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["fb8c6c8b35c7806f1ef4d37d52944b67158db2d1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"fb8c6c8b35c7806f1ef4d37d52944b67158db2d1":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00":[],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["fb8c6c8b35c7806f1ef4d37d52944b67158db2d1","ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}