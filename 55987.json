{"path":"src/test/org/apache/lucene/index/TestIndexWriter#xxxtestOptimizeExceptions().mjava","commits":[{"id":"3215ae1377fc1ca1790921d75dd39cb764743b85","date":1237371771,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriter#xxxtestOptimizeExceptions().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriter#testOptimizeExceptions().mjava","sourceNew":"  public void xxxtestOptimizeExceptions() throws IOException {\n    RAMDirectory startDir = new MockRAMDirectory();\n    IndexWriter w = new IndexWriter(startDir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.UNLIMITED);    \n    w.setMaxBufferedDocs(2);\n    w.setMergeFactor(100);\n    for(int i=0;i<27;i++)\n      addDoc(w);\n    w.close();\n\n    for(int i=0;i<200;i++) {\n      MockRAMDirectory dir = new MockRAMDirectory(startDir);\n      w = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.UNLIMITED);\n      ((ConcurrentMergeScheduler) w.getMergeScheduler()).setSuppressExceptions();\n      dir.setRandomIOExceptionRate(0.5, 100);\n      try {\n        w.optimize();\n      } catch (IOException ioe) {\n        if (ioe.getCause() == null)\n          fail(\"optimize threw IOException without root cause\");\n      }\n      w.close();\n      dir.close();\n    }\n  }\n\n","sourceOld":"  public void testOptimizeExceptions() throws IOException {\n    RAMDirectory startDir = new MockRAMDirectory();\n    IndexWriter w = new IndexWriter(startDir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.UNLIMITED);    \n    w.setMaxBufferedDocs(2);\n    w.setMergeFactor(100);\n    for(int i=0;i<27;i++)\n      addDoc(w);\n    w.close();\n\n    for(int i=0;i<200;i++) {\n      MockRAMDirectory dir = new MockRAMDirectory(startDir);\n      w = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.UNLIMITED);\n      ((ConcurrentMergeScheduler) w.getMergeScheduler()).setSuppressExceptions();\n      dir.setRandomIOExceptionRate(0.5, 100);\n      try {\n        w.optimize();\n      } catch (IOException ioe) {\n        if (ioe.getCause() == null)\n          fail(\"optimize threw IOException without root cause\");\n      }\n      w.close();\n      dir.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"09c482d1e63332617181729a225b215c452d8a79","date":1237396006,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriter#testOptimizeExceptions().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriter#xxxtestOptimizeExceptions().mjava","sourceNew":"  public void testOptimizeExceptions() throws IOException {\n    RAMDirectory startDir = new MockRAMDirectory();\n    IndexWriter w = new IndexWriter(startDir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.UNLIMITED);    \n    w.setMaxBufferedDocs(2);\n    w.setMergeFactor(100);\n    for(int i=0;i<27;i++)\n      addDoc(w);\n    w.close();\n\n    for(int i=0;i<200;i++) {\n      MockRAMDirectory dir = new MockRAMDirectory(startDir);\n      w = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.UNLIMITED);\n      ((ConcurrentMergeScheduler) w.getMergeScheduler()).setSuppressExceptions();\n      dir.setRandomIOExceptionRate(0.5, 100);\n      try {\n        w.optimize();\n      } catch (IOException ioe) {\n        if (ioe.getCause() == null)\n          fail(\"optimize threw IOException without root cause\");\n      }\n      w.close();\n      dir.close();\n    }\n  }\n\n","sourceOld":"  public void xxxtestOptimizeExceptions() throws IOException {\n    RAMDirectory startDir = new MockRAMDirectory();\n    IndexWriter w = new IndexWriter(startDir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.UNLIMITED);    \n    w.setMaxBufferedDocs(2);\n    w.setMergeFactor(100);\n    for(int i=0;i<27;i++)\n      addDoc(w);\n    w.close();\n\n    for(int i=0;i<200;i++) {\n      MockRAMDirectory dir = new MockRAMDirectory(startDir);\n      w = new IndexWriter(dir, new WhitespaceAnalyzer(), IndexWriter.MaxFieldLength.UNLIMITED);\n      ((ConcurrentMergeScheduler) w.getMergeScheduler()).setSuppressExceptions();\n      dir.setRandomIOExceptionRate(0.5, 100);\n      try {\n        w.optimize();\n      } catch (IOException ioe) {\n        if (ioe.getCause() == null)\n          fail(\"optimize threw IOException without root cause\");\n      }\n      w.close();\n      dir.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3215ae1377fc1ca1790921d75dd39cb764743b85":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"09c482d1e63332617181729a225b215c452d8a79":["3215ae1377fc1ca1790921d75dd39cb764743b85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["09c482d1e63332617181729a225b215c452d8a79"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3215ae1377fc1ca1790921d75dd39cb764743b85"],"3215ae1377fc1ca1790921d75dd39cb764743b85":["09c482d1e63332617181729a225b215c452d8a79"],"09c482d1e63332617181729a225b215c452d8a79":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}