{"path":"lucene/tools/src/java/org/apache/lucene/dependencies/GetMavenDependenciesTask#setExternalDependencyProperties().mjava","commits":[{"id":"71b83dcf02fe2854488bc83d70dee29c5baa7e5c","date":1383232808,"type":0,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/tools/src/java/org/apache/lucene/dependencies/GetMavenDependenciesTask#setExternalDependencyProperties().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Collects external dependencies from each ivy.xml file and sets\n   * external dependency properties to be inserted into modules' POMs. \n   */\n  private void setExternalDependencyProperties() {\n    @SuppressWarnings(\"unchecked\")\n    Iterator<Resource> iter = (Iterator<Resource>)ivyXmlResources.iterator();\n    while (iter.hasNext()) {\n      final Resource resource = iter.next();\n      if ( ! resource.isExists()) {\n        throw new BuildException(\"Resource does not exist: \" + resource.getName());\n      }\n      if ( ! (resource instanceof FileResource)) {\n        throw new BuildException(\"Only filesystem resources are supported: \"\n            + resource.getName() + \", was: \" + resource.getClass().getName());\n      }\n\n      File ivyXmlFile = ((FileResource)resource).getFile();\n      try {\n        collectExternalDependenciesFromIvyXmlFile(ivyXmlFile);\n      } catch (BuildException e) {\n        throw e;\n      } catch (Exception e) {\n        throw new BuildException(\"Exception reading file \" + ivyXmlFile.getPath(), e);\n      }\n    }\n    addSharedExternalDependencies();\n    setExternalDependencyXmlProperties();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["1895a927902788cc1b62e5cfd03b0848303689ad"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1895a927902788cc1b62e5cfd03b0848303689ad","date":1396568948,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/tools/src/java/org/apache/lucene/dependencies/GetMavenDependenciesTask#setExternalDependencyProperties().mjava","pathOld":"lucene/tools/src/java/org/apache/lucene/dependencies/GetMavenDependenciesTask#setExternalDependencyProperties().mjava","sourceNew":"  /**\n   * Collects external dependencies from each ivy.xml file and sets\n   * external dependency properties to be inserted into modules' POMs. \n   */\n  private void setExternalDependencyProperties() {\n    @SuppressWarnings(\"unchecked\")\n    Iterator<Resource> iter = (Iterator<Resource>)ivyXmlResources.iterator();\n    while (iter.hasNext()) {\n      final Resource resource = iter.next();\n      if ( ! resource.isExists()) {\n        throw new BuildException(\"Resource does not exist: \" + resource.getName());\n      }\n      if ( ! (resource instanceof FileResource)) {\n        throw new BuildException(\"Only filesystem resources are supported: \"\n            + resource.getName() + \", was: \" + resource.getClass().getName());\n      }\n\n      File ivyXmlFile = ((FileResource)resource).getFile();\n      try {\n        collectExternalDependenciesFromIvyXmlFile(ivyXmlFile);\n      } catch (BuildException e) {\n        throw e;\n      } catch (Exception e) {\n        throw new BuildException(\"Exception reading file \" + ivyXmlFile.getPath() + \": \" + e, e);\n      }\n    }\n    addSharedExternalDependencies();\n    setExternalDependencyXmlProperties();\n  }\n\n","sourceOld":"  /**\n   * Collects external dependencies from each ivy.xml file and sets\n   * external dependency properties to be inserted into modules' POMs. \n   */\n  private void setExternalDependencyProperties() {\n    @SuppressWarnings(\"unchecked\")\n    Iterator<Resource> iter = (Iterator<Resource>)ivyXmlResources.iterator();\n    while (iter.hasNext()) {\n      final Resource resource = iter.next();\n      if ( ! resource.isExists()) {\n        throw new BuildException(\"Resource does not exist: \" + resource.getName());\n      }\n      if ( ! (resource instanceof FileResource)) {\n        throw new BuildException(\"Only filesystem resources are supported: \"\n            + resource.getName() + \", was: \" + resource.getClass().getName());\n      }\n\n      File ivyXmlFile = ((FileResource)resource).getFile();\n      try {\n        collectExternalDependenciesFromIvyXmlFile(ivyXmlFile);\n      } catch (BuildException e) {\n        throw e;\n      } catch (Exception e) {\n        throw new BuildException(\"Exception reading file \" + ivyXmlFile.getPath(), e);\n      }\n    }\n    addSharedExternalDependencies();\n    setExternalDependencyXmlProperties();\n  }\n\n","bugFix":["71b83dcf02fe2854488bc83d70dee29c5baa7e5c"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5eb2511ababf862ea11e10761c70ee560cd84510","date":1396607225,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/tools/src/java/org/apache/lucene/dependencies/GetMavenDependenciesTask#setExternalDependencyProperties().mjava","pathOld":"lucene/tools/src/java/org/apache/lucene/dependencies/GetMavenDependenciesTask#setExternalDependencyProperties().mjava","sourceNew":"  /**\n   * Collects external dependencies from each ivy.xml file and sets\n   * external dependency properties to be inserted into modules' POMs. \n   */\n  private void setExternalDependencyProperties() {\n    @SuppressWarnings(\"unchecked\")\n    Iterator<Resource> iter = (Iterator<Resource>)ivyXmlResources.iterator();\n    while (iter.hasNext()) {\n      final Resource resource = iter.next();\n      if ( ! resource.isExists()) {\n        throw new BuildException(\"Resource does not exist: \" + resource.getName());\n      }\n      if ( ! (resource instanceof FileResource)) {\n        throw new BuildException(\"Only filesystem resources are supported: \"\n            + resource.getName() + \", was: \" + resource.getClass().getName());\n      }\n\n      File ivyXmlFile = ((FileResource)resource).getFile();\n      try {\n        collectExternalDependenciesFromIvyXmlFile(ivyXmlFile);\n      } catch (BuildException e) {\n        throw e;\n      } catch (Exception e) {\n        throw new BuildException(\"Exception reading file \" + ivyXmlFile.getPath() + \": \" + e, e);\n      }\n    }\n    addSharedExternalDependencies();\n    setExternalDependencyXmlProperties();\n  }\n\n","sourceOld":"  /**\n   * Collects external dependencies from each ivy.xml file and sets\n   * external dependency properties to be inserted into modules' POMs. \n   */\n  private void setExternalDependencyProperties() {\n    @SuppressWarnings(\"unchecked\")\n    Iterator<Resource> iter = (Iterator<Resource>)ivyXmlResources.iterator();\n    while (iter.hasNext()) {\n      final Resource resource = iter.next();\n      if ( ! resource.isExists()) {\n        throw new BuildException(\"Resource does not exist: \" + resource.getName());\n      }\n      if ( ! (resource instanceof FileResource)) {\n        throw new BuildException(\"Only filesystem resources are supported: \"\n            + resource.getName() + \", was: \" + resource.getClass().getName());\n      }\n\n      File ivyXmlFile = ((FileResource)resource).getFile();\n      try {\n        collectExternalDependenciesFromIvyXmlFile(ivyXmlFile);\n      } catch (BuildException e) {\n        throw e;\n      } catch (Exception e) {\n        throw new BuildException(\"Exception reading file \" + ivyXmlFile.getPath(), e);\n      }\n    }\n    addSharedExternalDependencies();\n    setExternalDependencyXmlProperties();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"44ca373a146e4fe32f6cd700238c38dab4fc26a9","date":1487082464,"type":3,"author":"Christine Poerschke","isMerge":false,"pathNew":"lucene/tools/src/java/org/apache/lucene/dependencies/GetMavenDependenciesTask#setExternalDependencyProperties().mjava","pathOld":"lucene/tools/src/java/org/apache/lucene/dependencies/GetMavenDependenciesTask#setExternalDependencyProperties().mjava","sourceNew":"  /**\n   * Collects external dependencies from each ivy.xml file and sets\n   * external dependency properties to be inserted into modules' POMs. \n   */\n  private void setExternalDependencyProperties() {\n    traverseIvyXmlResources(ivyXmlResources, new Consumer<File>() {\n      @Override\n      public void accept(File f) {\n        try {\n        collectExternalDependenciesFromIvyXmlFile(f);\n        } catch (XPathExpressionException | IOException | SAXException e) {\n          throw new RuntimeException(e);\n        }\n      }\n    });\n    addSharedExternalDependencies();\n    setExternalDependencyXmlProperties();\n  }\n\n","sourceOld":"  /**\n   * Collects external dependencies from each ivy.xml file and sets\n   * external dependency properties to be inserted into modules' POMs. \n   */\n  private void setExternalDependencyProperties() {\n    @SuppressWarnings(\"unchecked\")\n    Iterator<Resource> iter = (Iterator<Resource>)ivyXmlResources.iterator();\n    while (iter.hasNext()) {\n      final Resource resource = iter.next();\n      if ( ! resource.isExists()) {\n        throw new BuildException(\"Resource does not exist: \" + resource.getName());\n      }\n      if ( ! (resource instanceof FileResource)) {\n        throw new BuildException(\"Only filesystem resources are supported: \"\n            + resource.getName() + \", was: \" + resource.getClass().getName());\n      }\n\n      File ivyXmlFile = ((FileResource)resource).getFile();\n      try {\n        collectExternalDependenciesFromIvyXmlFile(ivyXmlFile);\n      } catch (BuildException e) {\n        throw e;\n      } catch (Exception e) {\n        throw new BuildException(\"Exception reading file \" + ivyXmlFile.getPath() + \": \" + e, e);\n      }\n    }\n    addSharedExternalDependencies();\n    setExternalDependencyXmlProperties();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"022a4de90e0479b604264ca9c2e134c996454ab3","date":1487118265,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/tools/src/java/org/apache/lucene/dependencies/GetMavenDependenciesTask#setExternalDependencyProperties().mjava","pathOld":"lucene/tools/src/java/org/apache/lucene/dependencies/GetMavenDependenciesTask#setExternalDependencyProperties().mjava","sourceNew":"  /**\n   * Collects external dependencies from each ivy.xml file and sets\n   * external dependency properties to be inserted into modules' POMs. \n   */\n  private void setExternalDependencyProperties() {\n    traverseIvyXmlResources(ivyXmlResources, new Consumer<File>() {\n      @Override\n      public void accept(File f) {\n        try {\n        collectExternalDependenciesFromIvyXmlFile(f);\n        } catch (XPathExpressionException | IOException | SAXException e) {\n          throw new RuntimeException(e);\n        }\n      }\n    });\n    addSharedExternalDependencies();\n    setExternalDependencyXmlProperties();\n  }\n\n","sourceOld":"  /**\n   * Collects external dependencies from each ivy.xml file and sets\n   * external dependency properties to be inserted into modules' POMs. \n   */\n  private void setExternalDependencyProperties() {\n    @SuppressWarnings(\"unchecked\")\n    Iterator<Resource> iter = (Iterator<Resource>)ivyXmlResources.iterator();\n    while (iter.hasNext()) {\n      final Resource resource = iter.next();\n      if ( ! resource.isExists()) {\n        throw new BuildException(\"Resource does not exist: \" + resource.getName());\n      }\n      if ( ! (resource instanceof FileResource)) {\n        throw new BuildException(\"Only filesystem resources are supported: \"\n            + resource.getName() + \", was: \" + resource.getClass().getName());\n      }\n\n      File ivyXmlFile = ((FileResource)resource).getFile();\n      try {\n        collectExternalDependenciesFromIvyXmlFile(ivyXmlFile);\n      } catch (BuildException e) {\n        throw e;\n      } catch (Exception e) {\n        throw new BuildException(\"Exception reading file \" + ivyXmlFile.getPath() + \": \" + e, e);\n      }\n    }\n    addSharedExternalDependencies();\n    setExternalDependencyXmlProperties();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b49c0eb9ef7bc25609a89e7986ce7e6eeb9c9d96","date":1487122334,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"lucene/tools/src/java/org/apache/lucene/dependencies/GetMavenDependenciesTask#setExternalDependencyProperties().mjava","pathOld":"lucene/tools/src/java/org/apache/lucene/dependencies/GetMavenDependenciesTask#setExternalDependencyProperties().mjava","sourceNew":"  /**\n   * Collects external dependencies from each ivy.xml file and sets\n   * external dependency properties to be inserted into modules' POMs. \n   */\n  private void setExternalDependencyProperties() {\n    @SuppressWarnings(\"unchecked\")\n    Iterator<Resource> iter = (Iterator<Resource>)ivyXmlResources.iterator();\n    while (iter.hasNext()) {\n      final Resource resource = iter.next();\n      if ( ! resource.isExists()) {\n        throw new BuildException(\"Resource does not exist: \" + resource.getName());\n      }\n      if ( ! (resource instanceof FileResource)) {\n        throw new BuildException(\"Only filesystem resources are supported: \"\n            + resource.getName() + \", was: \" + resource.getClass().getName());\n      }\n\n      File ivyXmlFile = ((FileResource)resource).getFile();\n      try {\n        collectExternalDependenciesFromIvyXmlFile(ivyXmlFile);\n      } catch (BuildException e) {\n        throw e;\n      } catch (Exception e) {\n        throw new BuildException(\"Exception reading file \" + ivyXmlFile.getPath() + \": \" + e, e);\n      }\n    }\n    addSharedExternalDependencies();\n    setExternalDependencyXmlProperties();\n  }\n\n","sourceOld":"  /**\n   * Collects external dependencies from each ivy.xml file and sets\n   * external dependency properties to be inserted into modules' POMs. \n   */\n  private void setExternalDependencyProperties() {\n    traverseIvyXmlResources(ivyXmlResources, new Consumer<File>() {\n      @Override\n      public void accept(File f) {\n        try {\n        collectExternalDependenciesFromIvyXmlFile(f);\n        } catch (XPathExpressionException | IOException | SAXException e) {\n          throw new RuntimeException(e);\n        }\n      }\n    });\n    addSharedExternalDependencies();\n    setExternalDependencyXmlProperties();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"897b06b1364bd1f658a8be7591e43f0851458e7f","date":1487123008,"type":3,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"lucene/tools/src/java/org/apache/lucene/dependencies/GetMavenDependenciesTask#setExternalDependencyProperties().mjava","pathOld":"lucene/tools/src/java/org/apache/lucene/dependencies/GetMavenDependenciesTask#setExternalDependencyProperties().mjava","sourceNew":"  /**\n   * Collects external dependencies from each ivy.xml file and sets\n   * external dependency properties to be inserted into modules' POMs. \n   */\n  private void setExternalDependencyProperties() {\n    traverseIvyXmlResources(ivyXmlResources, new Consumer<File>() {\n      @Override\n      public void accept(File f) {\n        try {\n        collectExternalDependenciesFromIvyXmlFile(f);\n        } catch (XPathExpressionException | IOException | SAXException e) {\n          throw new RuntimeException(e);\n        }\n      }\n    });\n    addSharedExternalDependencies();\n    setExternalDependencyXmlProperties();\n  }\n\n","sourceOld":"  /**\n   * Collects external dependencies from each ivy.xml file and sets\n   * external dependency properties to be inserted into modules' POMs. \n   */\n  private void setExternalDependencyProperties() {\n    @SuppressWarnings(\"unchecked\")\n    Iterator<Resource> iter = (Iterator<Resource>)ivyXmlResources.iterator();\n    while (iter.hasNext()) {\n      final Resource resource = iter.next();\n      if ( ! resource.isExists()) {\n        throw new BuildException(\"Resource does not exist: \" + resource.getName());\n      }\n      if ( ! (resource instanceof FileResource)) {\n        throw new BuildException(\"Only filesystem resources are supported: \"\n            + resource.getName() + \", was: \" + resource.getClass().getName());\n      }\n\n      File ivyXmlFile = ((FileResource)resource).getFile();\n      try {\n        collectExternalDependenciesFromIvyXmlFile(ivyXmlFile);\n      } catch (BuildException e) {\n        throw e;\n      } catch (Exception e) {\n        throw new BuildException(\"Exception reading file \" + ivyXmlFile.getPath() + \": \" + e, e);\n      }\n    }\n    addSharedExternalDependencies();\n    setExternalDependencyXmlProperties();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e025cf1c07150c8db28879d785db17eb3a66ca9f","date":1598788864,"type":4,"author":"Dawid Weiss","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/tools/src/java/org/apache/lucene/dependencies/GetMavenDependenciesTask#setExternalDependencyProperties().mjava","sourceNew":null,"sourceOld":"  /**\n   * Collects external dependencies from each ivy.xml file and sets\n   * external dependency properties to be inserted into modules' POMs. \n   */\n  private void setExternalDependencyProperties() {\n    traverseIvyXmlResources(ivyXmlResources, new Consumer<File>() {\n      @Override\n      public void accept(File f) {\n        try {\n        collectExternalDependenciesFromIvyXmlFile(f);\n        } catch (XPathExpressionException | IOException | SAXException e) {\n          throw new RuntimeException(e);\n        }\n      }\n    });\n    addSharedExternalDependencies();\n    setExternalDependencyXmlProperties();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b49c0eb9ef7bc25609a89e7986ce7e6eeb9c9d96":["022a4de90e0479b604264ca9c2e134c996454ab3"],"1895a927902788cc1b62e5cfd03b0848303689ad":["71b83dcf02fe2854488bc83d70dee29c5baa7e5c"],"5eb2511ababf862ea11e10761c70ee560cd84510":["71b83dcf02fe2854488bc83d70dee29c5baa7e5c","1895a927902788cc1b62e5cfd03b0848303689ad"],"022a4de90e0479b604264ca9c2e134c996454ab3":["1895a927902788cc1b62e5cfd03b0848303689ad","44ca373a146e4fe32f6cd700238c38dab4fc26a9"],"897b06b1364bd1f658a8be7591e43f0851458e7f":["b49c0eb9ef7bc25609a89e7986ce7e6eeb9c9d96"],"e025cf1c07150c8db28879d785db17eb3a66ca9f":["897b06b1364bd1f658a8be7591e43f0851458e7f"],"71b83dcf02fe2854488bc83d70dee29c5baa7e5c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"44ca373a146e4fe32f6cd700238c38dab4fc26a9":["1895a927902788cc1b62e5cfd03b0848303689ad"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e025cf1c07150c8db28879d785db17eb3a66ca9f"]},"commit2Childs":{"b49c0eb9ef7bc25609a89e7986ce7e6eeb9c9d96":["897b06b1364bd1f658a8be7591e43f0851458e7f"],"1895a927902788cc1b62e5cfd03b0848303689ad":["5eb2511ababf862ea11e10761c70ee560cd84510","022a4de90e0479b604264ca9c2e134c996454ab3","44ca373a146e4fe32f6cd700238c38dab4fc26a9"],"5eb2511ababf862ea11e10761c70ee560cd84510":[],"022a4de90e0479b604264ca9c2e134c996454ab3":["b49c0eb9ef7bc25609a89e7986ce7e6eeb9c9d96"],"897b06b1364bd1f658a8be7591e43f0851458e7f":["e025cf1c07150c8db28879d785db17eb3a66ca9f"],"71b83dcf02fe2854488bc83d70dee29c5baa7e5c":["1895a927902788cc1b62e5cfd03b0848303689ad","5eb2511ababf862ea11e10761c70ee560cd84510"],"e025cf1c07150c8db28879d785db17eb3a66ca9f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["71b83dcf02fe2854488bc83d70dee29c5baa7e5c"],"44ca373a146e4fe32f6cd700238c38dab4fc26a9":["022a4de90e0479b604264ca9c2e134c996454ab3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5eb2511ababf862ea11e10761c70ee560cd84510","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}