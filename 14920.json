{"path":"solr/src/java/org/apache/solr/search/QueryParsing#encodeLocalParamVal(String).mjava","commits":[{"id":"935577224abfd14a41ed9633bd1529925063d934","date":1283990440,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/search/QueryParsing#encodeLocalParamVal(String).mjava","pathOld":"/dev/null","sourceNew":"  public static String encodeLocalParamVal(String val) {\n    int len = val.length();\n    int i;\n    for (i=0; i<len; i++) {\n      char ch = val.charAt(i);\n      if (Character.isWhitespace(ch) || ch=='}') break;\n    }\n\n    if (i>=len) return val;\n\n    // We need to enclose in quotes... but now we need to escape\n    StringBuilder sb = new StringBuilder(val.length() + 4);\n    sb.append('\\'');\n    for (i=0; i<len; i++) {\n      char ch = val.charAt(i);\n      if (ch=='\\'') {\n        sb.append('\\\\');\n      }\n      sb.append(ch);\n    }\n    sb.append('\\'');\n    return sb.toString();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["233e7c9621e6f7b43e697f71a00597ff92a34888"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"233e7c9621e6f7b43e697f71a00597ff92a34888","date":1284061177,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/search/QueryParsing#encodeLocalParamVal(String).mjava","pathOld":"solr/src/java/org/apache/solr/search/QueryParsing#encodeLocalParamVal(String).mjava","sourceNew":"  public static String encodeLocalParamVal(String val) {\n    int len = val.length();\n    int i = 0;\n    if (len > 0 && val.charAt(0) != '$') {\n      for (;i<len; i++) {\n        char ch = val.charAt(i);\n        if (Character.isWhitespace(ch) || ch=='}') break;\n      }\n    }\n\n    if (i>=len) return val;\n\n    // We need to enclose in quotes... but now we need to escape\n    StringBuilder sb = new StringBuilder(val.length() + 4);\n    sb.append('\\'');\n    for (i=0; i<len; i++) {\n      char ch = val.charAt(i);\n      if (ch=='\\'') {\n        sb.append('\\\\');\n      }\n      sb.append(ch);\n    }\n    sb.append('\\'');\n    return sb.toString();\n  }\n\n","sourceOld":"  public static String encodeLocalParamVal(String val) {\n    int len = val.length();\n    int i;\n    for (i=0; i<len; i++) {\n      char ch = val.charAt(i);\n      if (Character.isWhitespace(ch) || ch=='}') break;\n    }\n\n    if (i>=len) return val;\n\n    // We need to enclose in quotes... but now we need to escape\n    StringBuilder sb = new StringBuilder(val.length() + 4);\n    sb.append('\\'');\n    for (i=0; i<len; i++) {\n      char ch = val.charAt(i);\n      if (ch=='\\'') {\n        sb.append('\\\\');\n      }\n      sb.append(ch);\n    }\n    sb.append('\\'');\n    return sb.toString();\n  }\n\n","bugFix":["935577224abfd14a41ed9633bd1529925063d934"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/search/QueryParsing#encodeLocalParamVal(String).mjava","pathOld":"/dev/null","sourceNew":"  public static String encodeLocalParamVal(String val) {\n    int len = val.length();\n    int i = 0;\n    if (len > 0 && val.charAt(0) != '$') {\n      for (;i<len; i++) {\n        char ch = val.charAt(i);\n        if (Character.isWhitespace(ch) || ch=='}') break;\n      }\n    }\n\n    if (i>=len) return val;\n\n    // We need to enclose in quotes... but now we need to escape\n    StringBuilder sb = new StringBuilder(val.length() + 4);\n    sb.append('\\'');\n    for (i=0; i<len; i++) {\n      char ch = val.charAt(i);\n      if (ch=='\\'') {\n        sb.append('\\\\');\n      }\n      sb.append(ch);\n    }\n    sb.append('\\'');\n    return sb.toString();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/QueryParsing#encodeLocalParamVal(String).mjava","pathOld":"solr/src/java/org/apache/solr/search/QueryParsing#encodeLocalParamVal(String).mjava","sourceNew":"  public static String encodeLocalParamVal(String val) {\n    int len = val.length();\n    int i = 0;\n    if (len > 0 && val.charAt(0) != '$') {\n      for (;i<len; i++) {\n        char ch = val.charAt(i);\n        if (Character.isWhitespace(ch) || ch=='}') break;\n      }\n    }\n\n    if (i>=len) return val;\n\n    // We need to enclose in quotes... but now we need to escape\n    StringBuilder sb = new StringBuilder(val.length() + 4);\n    sb.append('\\'');\n    for (i=0; i<len; i++) {\n      char ch = val.charAt(i);\n      if (ch=='\\'') {\n        sb.append('\\\\');\n      }\n      sb.append(ch);\n    }\n    sb.append('\\'');\n    return sb.toString();\n  }\n\n","sourceOld":"  public static String encodeLocalParamVal(String val) {\n    int len = val.length();\n    int i = 0;\n    if (len > 0 && val.charAt(0) != '$') {\n      for (;i<len; i++) {\n        char ch = val.charAt(i);\n        if (Character.isWhitespace(ch) || ch=='}') break;\n      }\n    }\n\n    if (i>=len) return val;\n\n    // We need to enclose in quotes... but now we need to escape\n    StringBuilder sb = new StringBuilder(val.length() + 4);\n    sb.append('\\'');\n    for (i=0; i<len; i++) {\n      char ch = val.charAt(i);\n      if (ch=='\\'') {\n        sb.append('\\\\');\n      }\n      sb.append(ch);\n    }\n    sb.append('\\'');\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/QueryParsing#encodeLocalParamVal(String).mjava","pathOld":"solr/src/java/org/apache/solr/search/QueryParsing#encodeLocalParamVal(String).mjava","sourceNew":"  public static String encodeLocalParamVal(String val) {\n    int len = val.length();\n    int i = 0;\n    if (len > 0 && val.charAt(0) != '$') {\n      for (;i<len; i++) {\n        char ch = val.charAt(i);\n        if (Character.isWhitespace(ch) || ch=='}') break;\n      }\n    }\n\n    if (i>=len) return val;\n\n    // We need to enclose in quotes... but now we need to escape\n    StringBuilder sb = new StringBuilder(val.length() + 4);\n    sb.append('\\'');\n    for (i=0; i<len; i++) {\n      char ch = val.charAt(i);\n      if (ch=='\\'') {\n        sb.append('\\\\');\n      }\n      sb.append(ch);\n    }\n    sb.append('\\'');\n    return sb.toString();\n  }\n\n","sourceOld":"  public static String encodeLocalParamVal(String val) {\n    int len = val.length();\n    int i = 0;\n    if (len > 0 && val.charAt(0) != '$') {\n      for (;i<len; i++) {\n        char ch = val.charAt(i);\n        if (Character.isWhitespace(ch) || ch=='}') break;\n      }\n    }\n\n    if (i>=len) return val;\n\n    // We need to enclose in quotes... but now we need to escape\n    StringBuilder sb = new StringBuilder(val.length() + 4);\n    sb.append('\\'');\n    for (i=0; i<len; i++) {\n      char ch = val.charAt(i);\n      if (ch=='\\'') {\n        sb.append('\\\\');\n      }\n      sb.append(ch);\n    }\n    sb.append('\\'');\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/QueryParsing#encodeLocalParamVal(String).mjava","pathOld":"solr/src/java/org/apache/solr/search/QueryParsing#encodeLocalParamVal(String).mjava","sourceNew":"  public static String encodeLocalParamVal(String val) {\n    int len = val.length();\n    int i = 0;\n    if (len > 0 && val.charAt(0) != '$') {\n      for (;i<len; i++) {\n        char ch = val.charAt(i);\n        if (Character.isWhitespace(ch) || ch=='}') break;\n      }\n    }\n\n    if (i>=len) return val;\n\n    // We need to enclose in quotes... but now we need to escape\n    StringBuilder sb = new StringBuilder(val.length() + 4);\n    sb.append('\\'');\n    for (i=0; i<len; i++) {\n      char ch = val.charAt(i);\n      if (ch=='\\'') {\n        sb.append('\\\\');\n      }\n      sb.append(ch);\n    }\n    sb.append('\\'');\n    return sb.toString();\n  }\n\n","sourceOld":"  public static String encodeLocalParamVal(String val) {\n    int len = val.length();\n    int i = 0;\n    if (len > 0 && val.charAt(0) != '$') {\n      for (;i<len; i++) {\n        char ch = val.charAt(i);\n        if (Character.isWhitespace(ch) || ch=='}') break;\n      }\n    }\n\n    if (i>=len) return val;\n\n    // We need to enclose in quotes... but now we need to escape\n    StringBuilder sb = new StringBuilder(val.length() + 4);\n    sb.append('\\'');\n    for (i=0; i<len; i++) {\n      char ch = val.charAt(i);\n      if (ch=='\\'') {\n        sb.append('\\\\');\n      }\n      sb.append(ch);\n    }\n    sb.append('\\'');\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["233e7c9621e6f7b43e697f71a00597ff92a34888"],"935577224abfd14a41ed9633bd1529925063d934":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["233e7c9621e6f7b43e697f71a00597ff92a34888","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["233e7c9621e6f7b43e697f71a00597ff92a34888"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","233e7c9621e6f7b43e697f71a00597ff92a34888"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c26f00b574427b55127e869b935845554afde1fa"],"233e7c9621e6f7b43e697f71a00597ff92a34888":["935577224abfd14a41ed9633bd1529925063d934"]},"commit2Childs":{"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"935577224abfd14a41ed9633bd1529925063d934":["233e7c9621e6f7b43e697f71a00597ff92a34888"],"c26f00b574427b55127e869b935845554afde1fa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["935577224abfd14a41ed9633bd1529925063d934","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"233e7c9621e6f7b43e697f71a00597ff92a34888":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}