{"path":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionTest#testPercentile().mjava","commits":[{"id":"c5156e47b791bd464473781bacfd0f1a03130a6b","date":1496675957,"type":0,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionTest#testPercentile().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testPercentile() throws Exception {\n    String cexpr = \"percentile(array(1,2,3,4,5,6,7,8,9,10,11), 50)\";\n    ModifiableSolrParams paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cexpr);\n    paramsLoc.set(\"qt\", \"/stream\");\n\n    String url = cluster.getJettySolrRunners().get(0).getBaseUrl().toString()+\"/\"+COLLECTIONORALIAS;\n    TupleStream solrStream = new SolrStream(url, paramsLoc);\n\n    StreamContext context = new StreamContext();\n    solrStream.setStreamContext(context);\n    List<Tuple> tuples = getTuples(solrStream);\n    assertTrue(tuples.size() == 1);\n    Tuple tuple = tuples.get(0);\n    double p = tuple.getDouble(\"return-value\");\n    assertEquals(p, 6, 0.0);\n\n\n    cexpr = \"percentile(array(11,10,3,4,5,6,7,8,9,2,1), 50)\";\n    paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cexpr);\n    paramsLoc.set(\"qt\", \"/stream\");\n\n    solrStream = new SolrStream(url, paramsLoc);\n\n    context = new StreamContext();\n    solrStream.setStreamContext(context);\n    tuples = getTuples(solrStream);\n    assertTrue(tuples.size() == 1);\n    tuple = tuples.get(0);\n    p = tuple.getDouble(\"return-value\");\n    assertEquals(p, 6, 0.0);\n\n    cexpr = \"percentile(array(11,10,3,4,5,6,7,8,9,2,1), 20)\";\n    paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cexpr);\n    paramsLoc.set(\"qt\", \"/stream\");\n\n    solrStream = new SolrStream(url, paramsLoc);\n\n    context = new StreamContext();\n    solrStream.setStreamContext(context);\n    tuples = getTuples(solrStream);\n    assertTrue(tuples.size() == 1);\n    tuple = tuples.get(0);\n    p = tuple.getDouble(\"return-value\");\n    assertEquals(p, 2.4, 0.001);\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"53532a40300123386304e8ffd97c1df9cf57ab94","date":1496675957,"type":3,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionTest#testPercentile().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionTest#testPercentile().mjava","sourceNew":"  @Test\n  public void testPercentile() throws Exception {\n    String cexpr = \"percentile(array(1,2,3,4,5,6,7,8,9,10,11), 50)\";\n    ModifiableSolrParams paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cexpr);\n    paramsLoc.set(\"qt\", \"/stream\");\n\n    String url = cluster.getJettySolrRunners().get(0).getBaseUrl().toString()+\"/\"+COLLECTIONORALIAS;\n    TupleStream solrStream = new SolrStream(url, paramsLoc);\n\n    StreamContext context = new StreamContext();\n    solrStream.setStreamContext(context);\n    List<Tuple> tuples = getTuples(solrStream);\n    assertTrue(tuples.size() == 1);\n    Tuple tuple = tuples.get(0);\n    double p = tuple.getDouble(\"return-value\");\n    assertEquals(p, 6, 0.0);\n\n\n    cexpr = \"percentile(array(11,10,3,4,5,6,7,8,9,2,1), 50)\";\n    paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cexpr);\n    paramsLoc.set(\"qt\", \"/stream\");\n\n    solrStream = new SolrStream(url, paramsLoc);\n\n    context = new StreamContext();\n    solrStream.setStreamContext(context);\n    tuples = getTuples(solrStream);\n    assertTrue(tuples.size() == 1);\n    tuple = tuples.get(0);\n    p = tuple.getDouble(\"return-value\");\n    assertEquals(p, 6, 0.0);\n\n    cexpr = \"percentile(array(11,10,3,4,5,6,7,8,9,2,1), 20)\";\n    paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cexpr);\n    paramsLoc.set(\"qt\", \"/stream\");\n\n    solrStream = new SolrStream(url, paramsLoc);\n\n    context = new StreamContext();\n    solrStream.setStreamContext(context);\n    tuples = getTuples(solrStream);\n    assertTrue(tuples.size() == 1);\n    tuple = tuples.get(0);\n    p = tuple.getDouble(\"return-value\");\n    assertEquals(p, 2.4, 0.001);\n  }\n\n","sourceOld":"  @Test\n  public void testPercentile() throws Exception {\n    String cexpr = \"percentile(array(1,2,3,4,5,6,7,8,9,10,11), 50)\";\n    ModifiableSolrParams paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cexpr);\n    paramsLoc.set(\"qt\", \"/stream\");\n\n    String url = cluster.getJettySolrRunners().get(0).getBaseUrl().toString()+\"/\"+COLLECTIONORALIAS;\n    TupleStream solrStream = new SolrStream(url, paramsLoc);\n\n    StreamContext context = new StreamContext();\n    solrStream.setStreamContext(context);\n    List<Tuple> tuples = getTuples(solrStream);\n    assertTrue(tuples.size() == 1);\n    Tuple tuple = tuples.get(0);\n    double p = tuple.getDouble(\"return-value\");\n    assertEquals(p, 6, 0.0);\n\n\n    cexpr = \"percentile(array(11,10,3,4,5,6,7,8,9,2,1), 50)\";\n    paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cexpr);\n    paramsLoc.set(\"qt\", \"/stream\");\n\n    solrStream = new SolrStream(url, paramsLoc);\n\n    context = new StreamContext();\n    solrStream.setStreamContext(context);\n    tuples = getTuples(solrStream);\n    assertTrue(tuples.size() == 1);\n    tuple = tuples.get(0);\n    p = tuple.getDouble(\"return-value\");\n    assertEquals(p, 6, 0.0);\n\n    cexpr = \"percentile(array(11,10,3,4,5,6,7,8,9,2,1), 20)\";\n    paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cexpr);\n    paramsLoc.set(\"qt\", \"/stream\");\n\n    solrStream = new SolrStream(url, paramsLoc);\n\n    context = new StreamContext();\n    solrStream.setStreamContext(context);\n    tuples = getTuples(solrStream);\n    assertTrue(tuples.size() == 1);\n    tuple = tuples.get(0);\n    p = tuple.getDouble(\"return-value\");\n    assertEquals(p, 2.4, 0.001);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":0,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionTest#testPercentile().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testPercentile() throws Exception {\n    String cexpr = \"percentile(array(1,2,3,4,5,6,7,8,9,10,11), 50)\";\n    ModifiableSolrParams paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cexpr);\n    paramsLoc.set(\"qt\", \"/stream\");\n\n    String url = cluster.getJettySolrRunners().get(0).getBaseUrl().toString()+\"/\"+COLLECTIONORALIAS;\n    TupleStream solrStream = new SolrStream(url, paramsLoc);\n\n    StreamContext context = new StreamContext();\n    solrStream.setStreamContext(context);\n    List<Tuple> tuples = getTuples(solrStream);\n    assertTrue(tuples.size() == 1);\n    Tuple tuple = tuples.get(0);\n    double p = tuple.getDouble(\"return-value\");\n    assertEquals(p, 6, 0.0);\n\n\n    cexpr = \"percentile(array(11,10,3,4,5,6,7,8,9,2,1), 50)\";\n    paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cexpr);\n    paramsLoc.set(\"qt\", \"/stream\");\n\n    solrStream = new SolrStream(url, paramsLoc);\n\n    context = new StreamContext();\n    solrStream.setStreamContext(context);\n    tuples = getTuples(solrStream);\n    assertTrue(tuples.size() == 1);\n    tuple = tuples.get(0);\n    p = tuple.getDouble(\"return-value\");\n    assertEquals(p, 6, 0.0);\n\n    cexpr = \"percentile(array(11,10,3,4,5,6,7,8,9,2,1), 20)\";\n    paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cexpr);\n    paramsLoc.set(\"qt\", \"/stream\");\n\n    solrStream = new SolrStream(url, paramsLoc);\n\n    context = new StreamContext();\n    solrStream.setStreamContext(context);\n    tuples = getTuples(solrStream);\n    assertTrue(tuples.size() == 1);\n    tuple = tuples.get(0);\n    p = tuple.getDouble(\"return-value\");\n    assertEquals(p, 2.4, 0.001);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionTest#testPercentile().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testPercentile() throws Exception {\n    String cexpr = \"percentile(array(1,2,3,4,5,6,7,8,9,10,11), 50)\";\n    ModifiableSolrParams paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cexpr);\n    paramsLoc.set(\"qt\", \"/stream\");\n\n    String url = cluster.getJettySolrRunners().get(0).getBaseUrl().toString()+\"/\"+COLLECTIONORALIAS;\n    TupleStream solrStream = new SolrStream(url, paramsLoc);\n\n    StreamContext context = new StreamContext();\n    solrStream.setStreamContext(context);\n    List<Tuple> tuples = getTuples(solrStream);\n    assertTrue(tuples.size() == 1);\n    Tuple tuple = tuples.get(0);\n    double p = tuple.getDouble(\"return-value\");\n    assertEquals(p, 6, 0.0);\n\n\n    cexpr = \"percentile(array(11,10,3,4,5,6,7,8,9,2,1), 50)\";\n    paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cexpr);\n    paramsLoc.set(\"qt\", \"/stream\");\n\n    solrStream = new SolrStream(url, paramsLoc);\n\n    context = new StreamContext();\n    solrStream.setStreamContext(context);\n    tuples = getTuples(solrStream);\n    assertTrue(tuples.size() == 1);\n    tuple = tuples.get(0);\n    p = tuple.getDouble(\"return-value\");\n    assertEquals(p, 6, 0.0);\n\n    cexpr = \"percentile(array(11,10,3,4,5,6,7,8,9,2,1), 20)\";\n    paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cexpr);\n    paramsLoc.set(\"qt\", \"/stream\");\n\n    solrStream = new SolrStream(url, paramsLoc);\n\n    context = new StreamContext();\n    solrStream.setStreamContext(context);\n    tuples = getTuples(solrStream);\n    assertTrue(tuples.size() == 1);\n    tuple = tuples.get(0);\n    p = tuple.getDouble(\"return-value\");\n    assertEquals(p, 2.4, 0.001);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8ff654a6d1fb7a79aedaa65c23cc052fdc770aaf","date":1522951207,"type":5,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/MathExpressionTest#testPercentile().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/StreamExpressionTest#testPercentile().mjava","sourceNew":"  @Test\n  public void testPercentile() throws Exception {\n    String cexpr = \"percentile(array(1,2,3,4,5,6,7,8,9,10,11), 50)\";\n    ModifiableSolrParams paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cexpr);\n    paramsLoc.set(\"qt\", \"/stream\");\n\n    String url = cluster.getJettySolrRunners().get(0).getBaseUrl().toString()+\"/\"+COLLECTIONORALIAS;\n    TupleStream solrStream = new SolrStream(url, paramsLoc);\n\n    StreamContext context = new StreamContext();\n    solrStream.setStreamContext(context);\n    List<Tuple> tuples = getTuples(solrStream);\n    assertTrue(tuples.size() == 1);\n    Tuple tuple = tuples.get(0);\n    double p = tuple.getDouble(\"return-value\");\n    assertEquals(p, 6, 0.0);\n\n\n    cexpr = \"percentile(array(11,10,3,4,5,6,7,8,9,2,1), 50)\";\n    paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cexpr);\n    paramsLoc.set(\"qt\", \"/stream\");\n\n    solrStream = new SolrStream(url, paramsLoc);\n\n    context = new StreamContext();\n    solrStream.setStreamContext(context);\n    tuples = getTuples(solrStream);\n    assertTrue(tuples.size() == 1);\n    tuple = tuples.get(0);\n    p = tuple.getDouble(\"return-value\");\n    assertEquals(p, 6, 0.0);\n\n    cexpr = \"percentile(array(11,10,3,4,5,6,7,8,9,2,1), 20)\";\n    paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cexpr);\n    paramsLoc.set(\"qt\", \"/stream\");\n\n    solrStream = new SolrStream(url, paramsLoc);\n\n    context = new StreamContext();\n    solrStream.setStreamContext(context);\n    tuples = getTuples(solrStream);\n    assertTrue(tuples.size() == 1);\n    tuple = tuples.get(0);\n    p = tuple.getDouble(\"return-value\");\n    assertEquals(p, 2.4, 0.001);\n  }\n\n","sourceOld":"  @Test\n  public void testPercentile() throws Exception {\n    String cexpr = \"percentile(array(1,2,3,4,5,6,7,8,9,10,11), 50)\";\n    ModifiableSolrParams paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cexpr);\n    paramsLoc.set(\"qt\", \"/stream\");\n\n    String url = cluster.getJettySolrRunners().get(0).getBaseUrl().toString()+\"/\"+COLLECTIONORALIAS;\n    TupleStream solrStream = new SolrStream(url, paramsLoc);\n\n    StreamContext context = new StreamContext();\n    solrStream.setStreamContext(context);\n    List<Tuple> tuples = getTuples(solrStream);\n    assertTrue(tuples.size() == 1);\n    Tuple tuple = tuples.get(0);\n    double p = tuple.getDouble(\"return-value\");\n    assertEquals(p, 6, 0.0);\n\n\n    cexpr = \"percentile(array(11,10,3,4,5,6,7,8,9,2,1), 50)\";\n    paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cexpr);\n    paramsLoc.set(\"qt\", \"/stream\");\n\n    solrStream = new SolrStream(url, paramsLoc);\n\n    context = new StreamContext();\n    solrStream.setStreamContext(context);\n    tuples = getTuples(solrStream);\n    assertTrue(tuples.size() == 1);\n    tuple = tuples.get(0);\n    p = tuple.getDouble(\"return-value\");\n    assertEquals(p, 6, 0.0);\n\n    cexpr = \"percentile(array(11,10,3,4,5,6,7,8,9,2,1), 20)\";\n    paramsLoc = new ModifiableSolrParams();\n    paramsLoc.set(\"expr\", cexpr);\n    paramsLoc.set(\"qt\", \"/stream\");\n\n    solrStream = new SolrStream(url, paramsLoc);\n\n    context = new StreamContext();\n    solrStream.setStreamContext(context);\n    tuples = getTuples(solrStream);\n    assertTrue(tuples.size() == 1);\n    tuple = tuples.get(0);\n    p = tuple.getDouble(\"return-value\");\n    assertEquals(p, 2.4, 0.001);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e9017cf144952056066919f1ebc7897ff9bd71b1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","53532a40300123386304e8ffd97c1df9cf57ab94"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"53532a40300123386304e8ffd97c1df9cf57ab94":["c5156e47b791bd464473781bacfd0f1a03130a6b"],"28288370235ed02234a64753cdbf0c6ec096304a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","53532a40300123386304e8ffd97c1df9cf57ab94"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8ff654a6d1fb7a79aedaa65c23cc052fdc770aaf"],"8ff654a6d1fb7a79aedaa65c23cc052fdc770aaf":["28288370235ed02234a64753cdbf0c6ec096304a"],"c5156e47b791bd464473781bacfd0f1a03130a6b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"e9017cf144952056066919f1ebc7897ff9bd71b1":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e9017cf144952056066919f1ebc7897ff9bd71b1","28288370235ed02234a64753cdbf0c6ec096304a","c5156e47b791bd464473781bacfd0f1a03130a6b"],"53532a40300123386304e8ffd97c1df9cf57ab94":["e9017cf144952056066919f1ebc7897ff9bd71b1","28288370235ed02234a64753cdbf0c6ec096304a"],"28288370235ed02234a64753cdbf0c6ec096304a":["8ff654a6d1fb7a79aedaa65c23cc052fdc770aaf"],"c5156e47b791bd464473781bacfd0f1a03130a6b":["53532a40300123386304e8ffd97c1df9cf57ab94"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"8ff654a6d1fb7a79aedaa65c23cc052fdc770aaf":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}