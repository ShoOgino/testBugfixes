{"path":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrSchemalessExampleTest#createNewSolrServer().mjava","commits":[{"id":"ab6ebe0fdf300ab34ce5ac60fae28ce2e063df2e","date":1410548439,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrSchemalessExampleTest#createNewSolrServer().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrSchemalessExampleTests#createNewSolrServer().mjava","sourceNew":"  @Override\n  public SolrServer createNewSolrServer() {\n    try {\n      // setup the server...\n      String url = jetty.getBaseUrl().toString() + \"/collection1\";\n      HttpSolrServer s = new HttpSolrServer(url);\n      s.setConnectionTimeout(DEFAULT_CONNECTION_TIMEOUT);\n      s.setDefaultMaxConnectionsPerHost(100);\n      s.setMaxTotalConnections(100);\n      s.setUseMultiPartPost(random().nextBoolean());\n      \n      if (random().nextBoolean()) {\n        s.setParser(new BinaryResponseParser());\n        s.setRequestWriter(new BinaryRequestWriter());\n      }\n      \n      return s;\n    } catch (Exception ex) {\n      throw new RuntimeException(ex);\n    }\n  }\n\n","sourceOld":"  @Override\n  public SolrServer createNewSolrServer() {\n    try {\n      // setup the server...\n      String url = jetty.getBaseUrl().toString() + \"/collection1\";\n      HttpSolrServer s = new HttpSolrServer(url);\n      s.setConnectionTimeout(DEFAULT_CONNECTION_TIMEOUT);\n      s.setDefaultMaxConnectionsPerHost(100);\n      s.setMaxTotalConnections(100);\n      s.setUseMultiPartPost(random().nextBoolean());\n      \n      if (random().nextBoolean()) {\n        s.setParser(new BinaryResponseParser());\n        s.setRequestWriter(new BinaryRequestWriter());\n      }\n      \n      return s;\n    } catch (Exception ex) {\n      throw new RuntimeException(ex);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bafca15d8e408346a67f4282ad1143b88023893b","date":1420034748,"type":5,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrSchemalessExampleTest#createNewSolrClient().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/SolrSchemalessExampleTest#createNewSolrServer().mjava","sourceNew":"  @Override\n  public SolrClient createNewSolrClient() {\n    try {\n      // setup the server...\n      String url = jetty.getBaseUrl().toString() + \"/collection1\";\n      HttpSolrClient client = new HttpSolrClient(url);\n      client.setConnectionTimeout(DEFAULT_CONNECTION_TIMEOUT);\n      client.setDefaultMaxConnectionsPerHost(100);\n      client.setMaxTotalConnections(100);\n      client.setUseMultiPartPost(random().nextBoolean());\n      \n      if (random().nextBoolean()) {\n        client.setParser(new BinaryResponseParser());\n        client.setRequestWriter(new BinaryRequestWriter());\n      }\n      \n      return client;\n    } catch (Exception ex) {\n      throw new RuntimeException(ex);\n    }\n  }\n\n","sourceOld":"  @Override\n  public SolrServer createNewSolrServer() {\n    try {\n      // setup the server...\n      String url = jetty.getBaseUrl().toString() + \"/collection1\";\n      HttpSolrServer s = new HttpSolrServer(url);\n      s.setConnectionTimeout(DEFAULT_CONNECTION_TIMEOUT);\n      s.setDefaultMaxConnectionsPerHost(100);\n      s.setMaxTotalConnections(100);\n      s.setUseMultiPartPost(random().nextBoolean());\n      \n      if (random().nextBoolean()) {\n        s.setParser(new BinaryResponseParser());\n        s.setRequestWriter(new BinaryRequestWriter());\n      }\n      \n      return s;\n    } catch (Exception ex) {\n      throw new RuntimeException(ex);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ab6ebe0fdf300ab34ce5ac60fae28ce2e063df2e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bafca15d8e408346a67f4282ad1143b88023893b":["ab6ebe0fdf300ab34ce5ac60fae28ce2e063df2e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["bafca15d8e408346a67f4282ad1143b88023893b"]},"commit2Childs":{"ab6ebe0fdf300ab34ce5ac60fae28ce2e063df2e":["bafca15d8e408346a67f4282ad1143b88023893b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ab6ebe0fdf300ab34ce5ac60fae28ce2e063df2e"],"bafca15d8e408346a67f4282ad1143b88023893b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}