{"path":"solr/core/src/test/org/apache/solr/search/TestRecovery#clearIndex().mjava","commits":[{"id":"fb999ed3fc6e419b9104de9ebfe62ace27f31d5f","date":1341327930,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestRecovery#clearIndex().mjava","pathOld":"/dev/null","sourceNew":"  // since we make up fake versions in these tests, we can get messed up by a DBQ with a real version\n  // since Solr can think following updates were reordered.\n  @Override\n  public void clearIndex() {\n    try {\n      deleteByQueryAndGetVersion(\"*:*\", params(\"_version_\", Long.toString(-Long.MAX_VALUE), DISTRIB_UPDATE_PARAM,FROM_LEADER));\n    } catch (Exception e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/search/TestRecovery#clearIndex().mjava","pathOld":"/dev/null","sourceNew":"  // since we make up fake versions in these tests, we can get messed up by a DBQ with a real version\n  // since Solr can think following updates were reordered.\n  @Override\n  public void clearIndex() {\n    try {\n      deleteByQueryAndGetVersion(\"*:*\", params(\"_version_\", Long.toString(-Long.MAX_VALUE), DISTRIB_UPDATE_PARAM,FROM_LEADER));\n    } catch (Exception e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d9bd53e149abb5149d4c8dff32eb79392f3ef713","date":1483980896,"type":4,"author":"Chris Hostetter","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/search/TestRecovery#clearIndex().mjava","sourceNew":null,"sourceOld":"  // since we make up fake versions in these tests, we can get messed up by a DBQ with a real version\n  // since Solr can think following updates were reordered.\n  @Override\n  public void clearIndex() {\n    try {\n      deleteByQueryAndGetVersion(\"*:*\", params(\"_version_\", Long.toString(-Long.MAX_VALUE), DISTRIB_UPDATE_PARAM,FROM_LEADER));\n    } catch (Exception e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"09ab8ee44ca898536770d0106a7c0ee4be4f0eb7","date":1484239864,"type":4,"author":"Kevin Risden","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/search/TestRecovery#clearIndex().mjava","sourceNew":null,"sourceOld":"  // since we make up fake versions in these tests, we can get messed up by a DBQ with a real version\n  // since Solr can think following updates were reordered.\n  @Override\n  public void clearIndex() {\n    try {\n      deleteByQueryAndGetVersion(\"*:*\", params(\"_version_\", Long.toString(-Long.MAX_VALUE), DISTRIB_UPDATE_PARAM,FROM_LEADER));\n    } catch (Exception e) {\n      throw new RuntimeException(e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"fb999ed3fc6e419b9104de9ebfe62ace27f31d5f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","fb999ed3fc6e419b9104de9ebfe62ace27f31d5f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d9bd53e149abb5149d4c8dff32eb79392f3ef713":["fb999ed3fc6e419b9104de9ebfe62ace27f31d5f"],"09ab8ee44ca898536770d0106a7c0ee4be4f0eb7":["fb999ed3fc6e419b9104de9ebfe62ace27f31d5f","d9bd53e149abb5149d4c8dff32eb79392f3ef713"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d9bd53e149abb5149d4c8dff32eb79392f3ef713"]},"commit2Childs":{"fb999ed3fc6e419b9104de9ebfe62ace27f31d5f":["fe33227f6805edab2036cbb80645cc4e2d1fa424","d9bd53e149abb5149d4c8dff32eb79392f3ef713","09ab8ee44ca898536770d0106a7c0ee4be4f0eb7"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["fb999ed3fc6e419b9104de9ebfe62ace27f31d5f","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"d9bd53e149abb5149d4c8dff32eb79392f3ef713":["09ab8ee44ca898536770d0106a7c0ee4be4f0eb7","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"09ab8ee44ca898536770d0106a7c0ee4be4f0eb7":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["fe33227f6805edab2036cbb80645cc4e2d1fa424","09ab8ee44ca898536770d0106a7c0ee4be4f0eb7","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}