{"path":"lucene/facet/src/test/org/apache/lucene/facet/associations/AssociationsFacetRequestTest#testDifferentAggregatorsSameCategoryList().mjava","commits":[{"id":"607428da722dcb3e86bbd11c63de8986e6275c36","date":1360334150,"type":1,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/associations/AssociationsFacetRequestTest#testDifferentAggregatorsSameCategoryList().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/search/associations/AssociationsFacetRequestTest#testDifferentAggregatorsSameCategoryList().mjava","sourceNew":"  @Test\n  public void testDifferentAggregatorsSameCategoryList() throws Exception {\n    // Same category list cannot be aggregated by two different aggregators. If\n    // you want to do that, you need to separate the categories into two\n    // category list (you'll still have one association list).\n    DirectoryTaxonomyReader taxo = new DirectoryTaxonomyReader(taxoDir);\n\n    // facet requests for two facets\n    FacetSearchParams fsp = new FacetSearchParams(\n        new AssociationIntSumFacetRequest(aint, 10),\n        new AssociationIntSumFacetRequest(bint, 10),\n        new AssociationFloatSumFacetRequest(afloat, 10),\n        new AssociationFloatSumFacetRequest(bfloat, 10));\n    \n    Query q = new MatchAllDocsQuery();\n\n    FacetsCollector fc = FacetsCollector.create(fsp, reader, taxo);\n    \n    IndexSearcher searcher = newSearcher(reader);\n    searcher.search(q, fc);\n    try {\n      fc.getFacetResults();\n      fail(\"different aggregators for same category list should not be supported\");\n    } catch (RuntimeException e) {\n      // ok - expected\n    }\n    taxo.close();\n  }  \n\n","sourceOld":"  @Test\n  public void testDifferentAggregatorsSameCategoryList() throws Exception {\n    // Same category list cannot be aggregated by two different aggregators. If\n    // you want to do that, you need to separate the categories into two\n    // category list (you'll still have one association list).\n    DirectoryTaxonomyReader taxo = new DirectoryTaxonomyReader(taxoDir);\n\n    // facet requests for two facets\n    FacetSearchParams fsp = new FacetSearchParams(\n        new AssociationIntSumFacetRequest(aint, 10),\n        new AssociationIntSumFacetRequest(bint, 10),\n        new AssociationFloatSumFacetRequest(afloat, 10),\n        new AssociationFloatSumFacetRequest(bfloat, 10));\n    \n    Query q = new MatchAllDocsQuery();\n\n    FacetsCollector fc = FacetsCollector.create(fsp, reader, taxo);\n    \n    IndexSearcher searcher = newSearcher(reader);\n    searcher.search(q, fc);\n    try {\n      fc.getFacetResults();\n      fail(\"different aggregators for same category list should not be supported\");\n    } catch (RuntimeException e) {\n      // ok - expected\n    }\n    taxo.close();\n  }  \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2d37ef5db468b4f3ae89b17062b0b56b20dd2e78","date":1360669163,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/associations/AssociationsFacetRequestTest#testDifferentAggregatorsSameCategoryList().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/associations/AssociationsFacetRequestTest#testDifferentAggregatorsSameCategoryList().mjava","sourceNew":"  @Test\n  public void testDifferentAggregatorsSameCategoryList() throws Exception {\n    DirectoryTaxonomyReader taxo = new DirectoryTaxonomyReader(taxoDir);\n    \n    // facet requests for two facets\n    FacetSearchParams fsp = new FacetSearchParams(\n        new AssociationIntSumFacetRequest(aint, 10),\n        new AssociationIntSumFacetRequest(bint, 10),\n        new AssociationFloatSumFacetRequest(afloat, 10),\n        new AssociationFloatSumFacetRequest(bfloat, 10));\n    \n    Query q = new MatchAllDocsQuery();\n    \n    final SumIntAssociationFacetsAggregator sumInt = new SumIntAssociationFacetsAggregator();\n    final SumFloatAssociationFacetsAggregator sumFloat = new SumFloatAssociationFacetsAggregator();\n    final Map<CategoryPath,FacetsAggregator> aggregators = new HashMap<CategoryPath,FacetsAggregator>();\n    aggregators.put(aint, sumInt);\n    aggregators.put(bint, sumInt);\n    aggregators.put(afloat, sumFloat);\n    aggregators.put(bfloat, sumFloat);\n    FacetsAccumulator fa = new FacetsAccumulator(fsp, reader, taxo) {\n      @Override\n      public FacetsAggregator getAggregator() {\n        return new MultiAssociationsFacetsAggregator(aggregators);\n      }\n    };\n    FacetsCollector fc = FacetsCollector.create(fa);\n    \n    IndexSearcher searcher = newSearcher(reader);\n    searcher.search(q, fc);\n    List<FacetResult> res = fc.getFacetResults();\n    \n    assertEquals(\"Wrong number of results!\", 4, res.size());\n    assertEquals(\"Wrong count for category 'a'!\", 200, (int) res.get(0).getFacetResultNode().value);\n    assertEquals(\"Wrong count for category 'b'!\", 150, (int) res.get(1).getFacetResultNode().value);\n    assertEquals(\"Wrong count for category 'a'!\",50f, (float) res.get(2).getFacetResultNode().value, 0.00001);\n    assertEquals(\"Wrong count for category 'b'!\",10f, (float) res.get(3).getFacetResultNode().value, 0.00001);\n    \n    taxo.close();\n  }  \n\n","sourceOld":"  @Test\n  public void testDifferentAggregatorsSameCategoryList() throws Exception {\n    // Same category list cannot be aggregated by two different aggregators. If\n    // you want to do that, you need to separate the categories into two\n    // category list (you'll still have one association list).\n    DirectoryTaxonomyReader taxo = new DirectoryTaxonomyReader(taxoDir);\n\n    // facet requests for two facets\n    FacetSearchParams fsp = new FacetSearchParams(\n        new AssociationIntSumFacetRequest(aint, 10),\n        new AssociationIntSumFacetRequest(bint, 10),\n        new AssociationFloatSumFacetRequest(afloat, 10),\n        new AssociationFloatSumFacetRequest(bfloat, 10));\n    \n    Query q = new MatchAllDocsQuery();\n\n    FacetsCollector fc = FacetsCollector.create(fsp, reader, taxo);\n    \n    IndexSearcher searcher = newSearcher(reader);\n    searcher.search(q, fc);\n    try {\n      fc.getFacetResults();\n      fail(\"different aggregators for same category list should not be supported\");\n    } catch (RuntimeException e) {\n      // ok - expected\n    }\n    taxo.close();\n  }  \n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"6b381f8de0e13c64eb8faa2a93732f6b95e3d6cb","date":1360780178,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/associations/AssociationsFacetRequestTest#testDifferentAggregatorsSameCategoryList().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/associations/AssociationsFacetRequestTest#testDifferentAggregatorsSameCategoryList().mjava","sourceNew":"  @Test\n  public void testDifferentAggregatorsSameCategoryList() throws Exception {\n    DirectoryTaxonomyReader taxo = new DirectoryTaxonomyReader(taxoDir);\n    \n    // facet requests for two facets\n    FacetSearchParams fsp = new FacetSearchParams(\n        new AssociationIntSumFacetRequest(aint, 10),\n        new AssociationIntSumFacetRequest(bint, 10),\n        new AssociationFloatSumFacetRequest(afloat, 10),\n        new AssociationFloatSumFacetRequest(bfloat, 10));\n    \n    Query q = new MatchAllDocsQuery();\n    \n    final SumIntAssociationFacetsAggregator sumInt = new SumIntAssociationFacetsAggregator();\n    final SumFloatAssociationFacetsAggregator sumFloat = new SumFloatAssociationFacetsAggregator();\n    final Map<CategoryPath,FacetsAggregator> aggregators = new HashMap<CategoryPath,FacetsAggregator>();\n    aggregators.put(aint, sumInt);\n    aggregators.put(bint, sumInt);\n    aggregators.put(afloat, sumFloat);\n    aggregators.put(bfloat, sumFloat);\n    FacetsAccumulator fa = new FacetsAccumulator(fsp, reader, taxo) {\n      @Override\n      public FacetsAggregator getAggregator() {\n        return new MultiAssociationsFacetsAggregator(aggregators);\n      }\n    };\n    FacetsCollector fc = FacetsCollector.create(fa);\n    \n    IndexSearcher searcher = newSearcher(reader);\n    searcher.search(q, fc);\n    List<FacetResult> res = fc.getFacetResults();\n    \n    assertEquals(\"Wrong number of results!\", 4, res.size());\n    assertEquals(\"Wrong count for category 'a'!\", 200, (int) res.get(0).getFacetResultNode().value);\n    assertEquals(\"Wrong count for category 'b'!\", 150, (int) res.get(1).getFacetResultNode().value);\n    assertEquals(\"Wrong count for category 'a'!\",50f, (float) res.get(2).getFacetResultNode().value, 0.00001);\n    assertEquals(\"Wrong count for category 'b'!\",10f, (float) res.get(3).getFacetResultNode().value, 0.00001);\n    \n    taxo.close();\n  }  \n\n","sourceOld":"  @Test\n  public void testDifferentAggregatorsSameCategoryList() throws Exception {\n    // Same category list cannot be aggregated by two different aggregators. If\n    // you want to do that, you need to separate the categories into two\n    // category list (you'll still have one association list).\n    DirectoryTaxonomyReader taxo = new DirectoryTaxonomyReader(taxoDir);\n\n    // facet requests for two facets\n    FacetSearchParams fsp = new FacetSearchParams(\n        new AssociationIntSumFacetRequest(aint, 10),\n        new AssociationIntSumFacetRequest(bint, 10),\n        new AssociationFloatSumFacetRequest(afloat, 10),\n        new AssociationFloatSumFacetRequest(bfloat, 10));\n    \n    Query q = new MatchAllDocsQuery();\n\n    FacetsCollector fc = FacetsCollector.create(fsp, reader, taxo);\n    \n    IndexSearcher searcher = newSearcher(reader);\n    searcher.search(q, fc);\n    try {\n      fc.getFacetResults();\n      fail(\"different aggregators for same category list should not be supported\");\n    } catch (RuntimeException e) {\n      // ok - expected\n    }\n    taxo.close();\n  }  \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6249cba93d7ad1bf6f5a225c34fbe3d547ed9f49","date":1375103250,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/associations/AssociationsFacetRequestTest#testDifferentAggregatorsSameCategoryList().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/associations/AssociationsFacetRequestTest#testDifferentAggregatorsSameCategoryList().mjava","sourceNew":"  @Test\n  public void testDifferentAggregatorsSameCategoryList() throws Exception {\n    DirectoryTaxonomyReader taxo = new DirectoryTaxonomyReader(taxoDir);\n    \n    // facet requests for two facets\n    FacetSearchParams fsp = new FacetSearchParams(\n        new SumIntAssociationFacetRequest(aint, 10),\n        new SumIntAssociationFacetRequest(bint, 10),\n        new SumFloatAssociationFacetRequest(afloat, 10),\n        new SumFloatAssociationFacetRequest(bfloat, 10));\n    \n    Query q = new MatchAllDocsQuery();\n    \n    FacetsCollector fc = FacetsCollector.create(fsp, reader, taxo);\n    \n    IndexSearcher searcher = newSearcher(reader);\n    searcher.search(q, fc);\n    List<FacetResult> res = fc.getFacetResults();\n    \n    assertEquals(\"Wrong number of results!\", 4, res.size());\n    assertEquals(\"Wrong count for category 'a'!\", 200, (int) res.get(0).getFacetResultNode().value);\n    assertEquals(\"Wrong count for category 'b'!\", 150, (int) res.get(1).getFacetResultNode().value);\n    assertEquals(\"Wrong count for category 'a'!\",50f, (float) res.get(2).getFacetResultNode().value, 0.00001);\n    assertEquals(\"Wrong count for category 'b'!\",10f, (float) res.get(3).getFacetResultNode().value, 0.00001);\n    \n    taxo.close();\n  }  \n\n","sourceOld":"  @Test\n  public void testDifferentAggregatorsSameCategoryList() throws Exception {\n    DirectoryTaxonomyReader taxo = new DirectoryTaxonomyReader(taxoDir);\n    \n    // facet requests for two facets\n    FacetSearchParams fsp = new FacetSearchParams(\n        new AssociationIntSumFacetRequest(aint, 10),\n        new AssociationIntSumFacetRequest(bint, 10),\n        new AssociationFloatSumFacetRequest(afloat, 10),\n        new AssociationFloatSumFacetRequest(bfloat, 10));\n    \n    Query q = new MatchAllDocsQuery();\n    \n    final SumIntAssociationFacetsAggregator sumInt = new SumIntAssociationFacetsAggregator();\n    final SumFloatAssociationFacetsAggregator sumFloat = new SumFloatAssociationFacetsAggregator();\n    final Map<CategoryPath,FacetsAggregator> aggregators = new HashMap<CategoryPath,FacetsAggregator>();\n    aggregators.put(aint, sumInt);\n    aggregators.put(bint, sumInt);\n    aggregators.put(afloat, sumFloat);\n    aggregators.put(bfloat, sumFloat);\n    FacetsAccumulator fa = new FacetsAccumulator(fsp, reader, taxo) {\n      @Override\n      public FacetsAggregator getAggregator() {\n        return new MultiAssociationsFacetsAggregator(aggregators);\n      }\n    };\n    FacetsCollector fc = FacetsCollector.create(fa);\n    \n    IndexSearcher searcher = newSearcher(reader);\n    searcher.search(q, fc);\n    List<FacetResult> res = fc.getFacetResults();\n    \n    assertEquals(\"Wrong number of results!\", 4, res.size());\n    assertEquals(\"Wrong count for category 'a'!\", 200, (int) res.get(0).getFacetResultNode().value);\n    assertEquals(\"Wrong count for category 'b'!\", 150, (int) res.get(1).getFacetResultNode().value);\n    assertEquals(\"Wrong count for category 'a'!\",50f, (float) res.get(2).getFacetResultNode().value, 0.00001);\n    assertEquals(\"Wrong count for category 'b'!\",10f, (float) res.get(3).getFacetResultNode().value, 0.00001);\n    \n    taxo.close();\n  }  \n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"84be3657a3c5fda07efa8c78a5c01950e0a17cfb","date":1375192418,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/associations/AssociationsFacetRequestTest#testDifferentAggregatorsSameCategoryList().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/associations/AssociationsFacetRequestTest#testDifferentAggregatorsSameCategoryList().mjava","sourceNew":"  @Test\n  public void testDifferentAggregatorsSameCategoryList() throws Exception {\n    DirectoryTaxonomyReader taxo = new DirectoryTaxonomyReader(taxoDir);\n    \n    // facet requests for two facets\n    FacetSearchParams fsp = new FacetSearchParams(\n        new SumIntAssociationFacetRequest(aint, 10),\n        new SumIntAssociationFacetRequest(bint, 10),\n        new SumFloatAssociationFacetRequest(afloat, 10),\n        new SumFloatAssociationFacetRequest(bfloat, 10));\n    \n    Query q = new MatchAllDocsQuery();\n    \n    FacetsCollector fc = FacetsCollector.create(fsp, reader, taxo);\n    \n    IndexSearcher searcher = newSearcher(reader);\n    searcher.search(q, fc);\n    List<FacetResult> res = fc.getFacetResults();\n    \n    assertEquals(\"Wrong number of results!\", 4, res.size());\n    assertEquals(\"Wrong count for category 'a'!\", 200, (int) res.get(0).getFacetResultNode().value);\n    assertEquals(\"Wrong count for category 'b'!\", 150, (int) res.get(1).getFacetResultNode().value);\n    assertEquals(\"Wrong count for category 'a'!\",50f, (float) res.get(2).getFacetResultNode().value, 0.00001);\n    assertEquals(\"Wrong count for category 'b'!\",10f, (float) res.get(3).getFacetResultNode().value, 0.00001);\n    \n    taxo.close();\n  }\n\n","sourceOld":"  @Test\n  public void testDifferentAggregatorsSameCategoryList() throws Exception {\n    DirectoryTaxonomyReader taxo = new DirectoryTaxonomyReader(taxoDir);\n    \n    // facet requests for two facets\n    FacetSearchParams fsp = new FacetSearchParams(\n        new SumIntAssociationFacetRequest(aint, 10),\n        new SumIntAssociationFacetRequest(bint, 10),\n        new SumFloatAssociationFacetRequest(afloat, 10),\n        new SumFloatAssociationFacetRequest(bfloat, 10));\n    \n    Query q = new MatchAllDocsQuery();\n    \n    FacetsCollector fc = FacetsCollector.create(fsp, reader, taxo);\n    \n    IndexSearcher searcher = newSearcher(reader);\n    searcher.search(q, fc);\n    List<FacetResult> res = fc.getFacetResults();\n    \n    assertEquals(\"Wrong number of results!\", 4, res.size());\n    assertEquals(\"Wrong count for category 'a'!\", 200, (int) res.get(0).getFacetResultNode().value);\n    assertEquals(\"Wrong count for category 'b'!\", 150, (int) res.get(1).getFacetResultNode().value);\n    assertEquals(\"Wrong count for category 'a'!\",50f, (float) res.get(2).getFacetResultNode().value, 0.00001);\n    assertEquals(\"Wrong count for category 'b'!\",10f, (float) res.get(3).getFacetResultNode().value, 0.00001);\n    \n    taxo.close();\n  }  \n\n","bugFix":["89f15687f60bd49cd3d9de427e85c17fd9397d61"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","date":1376366778,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/associations/AssociationsFacetRequestTest#testDifferentAggregatorsSameCategoryList().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/associations/AssociationsFacetRequestTest#testDifferentAggregatorsSameCategoryList().mjava","sourceNew":"  @Test\n  public void testDifferentAggregatorsSameCategoryList() throws Exception {\n    DirectoryTaxonomyReader taxo = new DirectoryTaxonomyReader(taxoDir);\n    \n    // facet requests for two facets\n    FacetSearchParams fsp = new FacetSearchParams(\n        new SumIntAssociationFacetRequest(aint, 10),\n        new SumIntAssociationFacetRequest(bint, 10),\n        new SumFloatAssociationFacetRequest(afloat, 10),\n        new SumFloatAssociationFacetRequest(bfloat, 10));\n    \n    Query q = new MatchAllDocsQuery();\n    \n    FacetsCollector fc = FacetsCollector.create(fsp, reader, taxo);\n    \n    IndexSearcher searcher = newSearcher(reader);\n    searcher.search(q, fc);\n    List<FacetResult> res = fc.getFacetResults();\n    \n    assertEquals(\"Wrong number of results!\", 4, res.size());\n    assertEquals(\"Wrong count for category 'a'!\", 200, (int) res.get(0).getFacetResultNode().value);\n    assertEquals(\"Wrong count for category 'b'!\", 150, (int) res.get(1).getFacetResultNode().value);\n    assertEquals(\"Wrong count for category 'a'!\",50f, (float) res.get(2).getFacetResultNode().value, 0.00001);\n    assertEquals(\"Wrong count for category 'b'!\",10f, (float) res.get(3).getFacetResultNode().value, 0.00001);\n    \n    taxo.close();\n  }\n\n","sourceOld":"  @Test\n  public void testDifferentAggregatorsSameCategoryList() throws Exception {\n    DirectoryTaxonomyReader taxo = new DirectoryTaxonomyReader(taxoDir);\n    \n    // facet requests for two facets\n    FacetSearchParams fsp = new FacetSearchParams(\n        new AssociationIntSumFacetRequest(aint, 10),\n        new AssociationIntSumFacetRequest(bint, 10),\n        new AssociationFloatSumFacetRequest(afloat, 10),\n        new AssociationFloatSumFacetRequest(bfloat, 10));\n    \n    Query q = new MatchAllDocsQuery();\n    \n    final SumIntAssociationFacetsAggregator sumInt = new SumIntAssociationFacetsAggregator();\n    final SumFloatAssociationFacetsAggregator sumFloat = new SumFloatAssociationFacetsAggregator();\n    final Map<CategoryPath,FacetsAggregator> aggregators = new HashMap<CategoryPath,FacetsAggregator>();\n    aggregators.put(aint, sumInt);\n    aggregators.put(bint, sumInt);\n    aggregators.put(afloat, sumFloat);\n    aggregators.put(bfloat, sumFloat);\n    FacetsAccumulator fa = new FacetsAccumulator(fsp, reader, taxo) {\n      @Override\n      public FacetsAggregator getAggregator() {\n        return new MultiAssociationsFacetsAggregator(aggregators);\n      }\n    };\n    FacetsCollector fc = FacetsCollector.create(fa);\n    \n    IndexSearcher searcher = newSearcher(reader);\n    searcher.search(q, fc);\n    List<FacetResult> res = fc.getFacetResults();\n    \n    assertEquals(\"Wrong number of results!\", 4, res.size());\n    assertEquals(\"Wrong count for category 'a'!\", 200, (int) res.get(0).getFacetResultNode().value);\n    assertEquals(\"Wrong count for category 'b'!\", 150, (int) res.get(1).getFacetResultNode().value);\n    assertEquals(\"Wrong count for category 'a'!\",50f, (float) res.get(2).getFacetResultNode().value, 0.00001);\n    assertEquals(\"Wrong count for category 'b'!\",10f, (float) res.get(3).getFacetResultNode().value, 0.00001);\n    \n    taxo.close();\n  }  \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ca39562b2d7687143fdb601d5de1b8f7b778f1db","date":1385299806,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/associations/AssociationsFacetRequestTest#testDifferentAggregatorsSameCategoryList().mjava","sourceNew":null,"sourceOld":"  @Test\n  public void testDifferentAggregatorsSameCategoryList() throws Exception {\n    DirectoryTaxonomyReader taxo = new DirectoryTaxonomyReader(taxoDir);\n    \n    // facet requests for two facets\n    FacetSearchParams fsp = new FacetSearchParams(\n        new SumIntAssociationFacetRequest(aint, 10),\n        new SumIntAssociationFacetRequest(bint, 10),\n        new SumFloatAssociationFacetRequest(afloat, 10),\n        new SumFloatAssociationFacetRequest(bfloat, 10));\n    \n    Query q = new MatchAllDocsQuery();\n    \n    FacetsCollector fc = FacetsCollector.create(fsp, reader, taxo);\n    \n    IndexSearcher searcher = newSearcher(reader);\n    searcher.search(q, fc);\n    List<FacetResult> res = fc.getFacetResults();\n    \n    assertEquals(\"Wrong number of results!\", 4, res.size());\n    assertEquals(\"Wrong count for category 'a'!\", 200, (int) res.get(0).getFacetResultNode().value);\n    assertEquals(\"Wrong count for category 'b'!\", 150, (int) res.get(1).getFacetResultNode().value);\n    assertEquals(\"Wrong count for category 'a'!\",50f, (float) res.get(2).getFacetResultNode().value, 0.00001);\n    assertEquals(\"Wrong count for category 'b'!\",10f, (float) res.get(3).getFacetResultNode().value, 0.00001);\n    \n    taxo.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cc728b07df73b197e6d940d27f9b08b63918f13","date":1388834348,"type":4,"author":"Michael McCandless","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/associations/AssociationsFacetRequestTest#testDifferentAggregatorsSameCategoryList().mjava","sourceNew":null,"sourceOld":"  @Test\n  public void testDifferentAggregatorsSameCategoryList() throws Exception {\n    DirectoryTaxonomyReader taxo = new DirectoryTaxonomyReader(taxoDir);\n    \n    // facet requests for two facets\n    FacetSearchParams fsp = new FacetSearchParams(\n        new SumIntAssociationFacetRequest(aint, 10),\n        new SumIntAssociationFacetRequest(bint, 10),\n        new SumFloatAssociationFacetRequest(afloat, 10),\n        new SumFloatAssociationFacetRequest(bfloat, 10));\n    \n    Query q = new MatchAllDocsQuery();\n    \n    FacetsCollector fc = FacetsCollector.create(fsp, reader, taxo);\n    \n    IndexSearcher searcher = newSearcher(reader);\n    searcher.search(q, fc);\n    List<FacetResult> res = fc.getFacetResults();\n    \n    assertEquals(\"Wrong number of results!\", 4, res.size());\n    assertEquals(\"Wrong count for category 'a'!\", 200, (int) res.get(0).getFacetResultNode().value);\n    assertEquals(\"Wrong count for category 'b'!\", 150, (int) res.get(1).getFacetResultNode().value);\n    assertEquals(\"Wrong count for category 'a'!\",50f, (float) res.get(2).getFacetResultNode().value, 0.00001);\n    assertEquals(\"Wrong count for category 'b'!\",10f, (float) res.get(3).getFacetResultNode().value, 0.00001);\n    \n    taxo.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"607428da722dcb3e86bbd11c63de8986e6275c36":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"6b381f8de0e13c64eb8faa2a93732f6b95e3d6cb":["607428da722dcb3e86bbd11c63de8986e6275c36","2d37ef5db468b4f3ae89b17062b0b56b20dd2e78"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":["2d37ef5db468b4f3ae89b17062b0b56b20dd2e78"],"84be3657a3c5fda07efa8c78a5c01950e0a17cfb":["6249cba93d7ad1bf6f5a225c34fbe3d547ed9f49"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["84be3657a3c5fda07efa8c78a5c01950e0a17cfb","ca39562b2d7687143fdb601d5de1b8f7b778f1db"],"6249cba93d7ad1bf6f5a225c34fbe3d547ed9f49":["2d37ef5db468b4f3ae89b17062b0b56b20dd2e78"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"2d37ef5db468b4f3ae89b17062b0b56b20dd2e78":["607428da722dcb3e86bbd11c63de8986e6275c36"],"ca39562b2d7687143fdb601d5de1b8f7b778f1db":["84be3657a3c5fda07efa8c78a5c01950e0a17cfb"]},"commit2Childs":{"607428da722dcb3e86bbd11c63de8986e6275c36":["6b381f8de0e13c64eb8faa2a93732f6b95e3d6cb","2d37ef5db468b4f3ae89b17062b0b56b20dd2e78"],"6b381f8de0e13c64eb8faa2a93732f6b95e3d6cb":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["607428da722dcb3e86bbd11c63de8986e6275c36"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":[],"84be3657a3c5fda07efa8c78a5c01950e0a17cfb":["3cc728b07df73b197e6d940d27f9b08b63918f13","ca39562b2d7687143fdb601d5de1b8f7b778f1db"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"6249cba93d7ad1bf6f5a225c34fbe3d547ed9f49":["84be3657a3c5fda07efa8c78a5c01950e0a17cfb"],"2d37ef5db468b4f3ae89b17062b0b56b20dd2e78":["6b381f8de0e13c64eb8faa2a93732f6b95e3d6cb","8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","6249cba93d7ad1bf6f5a225c34fbe3d547ed9f49"],"ca39562b2d7687143fdb601d5de1b8f7b778f1db":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["6b381f8de0e13c64eb8faa2a93732f6b95e3d6cb","8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}