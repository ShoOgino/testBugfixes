{"path":"solr/core/src/test/org/apache/solr/handler/component/DistributedFacetPivotLongTailTest#doTestDeepPivotStats().mjava","commits":[{"id":"4c18a95e9168a30be855f5d5e7d61a863186fdc5","date":1415142581,"type":0,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/DistributedFacetPivotLongTailTest#doTestDeepPivotStats().mjava","pathOld":"/dev/null","sourceNew":"  public void doTestDeepPivotStats() throws Exception {\n    // Deep checking of some Facet stats - no refinement involved here\n\n    List<PivotField> pivots = \n      query(\"q\", \"*:*\",\n            \"shards\", getShardsString(),\n            \"facet\", \"true\",\n            \"rows\" , \"0\",\n            \"facet.pivot\",\"{!stats=s1}foo_s,bar_s\",\n            \"stats\", \"true\",\n            \"stats.field\", \"{!key=avg_price tag=s1}stat_i\").getFacetPivot().get(\"foo_s,bar_s\");\n    PivotField aaa0PivotField = pivots.get(0);\n    assertEquals(\"aaa0\", aaa0PivotField.getValue());\n    assertEquals(300, aaa0PivotField.getCount());\n\n    FieldStatsInfo aaa0StatsInfo = aaa0PivotField.getFieldStatsInfo().get(\"avg_price\");\n    assertEquals(\"avg_price\", aaa0StatsInfo.getName());\n    assertEquals(-99.0, aaa0StatsInfo.getMin());\n    assertEquals(693.0, aaa0StatsInfo.getMax());\n    assertEquals(300, (long) aaa0StatsInfo.getCount());\n    assertEquals(0, (long) aaa0StatsInfo.getMissing());\n    assertEquals(34650.0, aaa0StatsInfo.getSum());\n    assertEquals(1.674585E7, aaa0StatsInfo.getSumOfSquares(), 0.1E-7);\n    assertEquals(115.5, (double) aaa0StatsInfo.getMean(), 0.1E-7);\n    assertEquals(206.4493184076, aaa0StatsInfo.getStddev(), 0.1E-7);\n\n    PivotField tailPivotField = pivots.get(5);\n    assertEquals(\"tail\", tailPivotField.getValue());\n    assertEquals(135, tailPivotField.getCount());\n\n    FieldStatsInfo tailPivotFieldStatsInfo = tailPivotField.getFieldStatsInfo().get(\"avg_price\");\n    assertEquals(\"avg_price\", tailPivotFieldStatsInfo.getName());\n    assertEquals(0.0, tailPivotFieldStatsInfo.getMin());\n    assertEquals(44.0, tailPivotFieldStatsInfo.getMax());\n    assertEquals(90, (long) tailPivotFieldStatsInfo.getCount());\n    assertEquals(45, (long) tailPivotFieldStatsInfo.getMissing());\n    assertEquals(1980.0, tailPivotFieldStatsInfo.getSum());\n    assertEquals(22.0, (double) tailPivotFieldStatsInfo.getMean(), 0.1E-7);\n    assertEquals(58740.0, tailPivotFieldStatsInfo.getSumOfSquares(), 0.1E-7);\n    assertEquals(13.0599310011, tailPivotFieldStatsInfo.getStddev(), 0.1E-7);\n\n    PivotField tailBPivotField = tailPivotField.getPivot().get(0);\n    assertEquals(\"tailB\", tailBPivotField.getValue());\n    assertEquals(17, tailBPivotField.getCount());\n\n    FieldStatsInfo tailBPivotFieldStatsInfo = tailBPivotField.getFieldStatsInfo().get(\"avg_price\");\n    assertEquals(\"avg_price\", tailBPivotFieldStatsInfo.getName());\n    assertEquals(35.0, tailBPivotFieldStatsInfo.getMin());\n    assertEquals(40.0, tailBPivotFieldStatsInfo.getMax());\n    assertEquals(12, (long) tailBPivotFieldStatsInfo.getCount());\n    assertEquals(5, (long) tailBPivotFieldStatsInfo.getMissing());\n    assertEquals(450.0, tailBPivotFieldStatsInfo.getSum());\n    assertEquals(37.5, (double) tailBPivotFieldStatsInfo.getMean(), 0.1E-7);\n    assertEquals(16910.0, tailBPivotFieldStatsInfo.getSumOfSquares(), 0.1E-7);\n    assertEquals(1.78376517, tailBPivotFieldStatsInfo.getStddev(), 0.1E-7);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5445bd5bf6ab5e2fbb1a1b4ff8a36ba1cafa18ba","date":1513104620,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/DistributedFacetPivotLongTailTest#doTestDeepPivotStats().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/DistributedFacetPivotLongTailTest#doTestDeepPivotStats().mjava","sourceNew":"  private void doTestDeepPivotStats() throws Exception {\n    // Deep checking of some Facet stats - no refinement involved here\n\n    List<PivotField> pivots = \n      query(\"q\", \"*:*\",\n            \"shards\", getShardsString(),\n            \"facet\", \"true\",\n            \"rows\" , \"0\",\n            \"facet.pivot\",\"{!stats=s1}foo_s,bar_s\",\n            \"stats\", \"true\",\n            \"stats.field\", \"{!key=avg_price tag=s1}\" + STAT_FIELD).getFacetPivot().get(\"foo_s,bar_s\");\n    PivotField aaa0PivotField = pivots.get(0);\n    assertEquals(\"aaa0\", aaa0PivotField.getValue());\n    assertEquals(300, aaa0PivotField.getCount());\n\n    FieldStatsInfo aaa0StatsInfo = aaa0PivotField.getFieldStatsInfo().get(\"avg_price\");\n    assertEquals(\"avg_price\", aaa0StatsInfo.getName());\n    assertEquals(-99.0, aaa0StatsInfo.getMin());\n    assertEquals(693.0, aaa0StatsInfo.getMax());\n    assertEquals(300, (long) aaa0StatsInfo.getCount());\n    assertEquals(0, (long) aaa0StatsInfo.getMissing());\n    assertEquals(34650.0, aaa0StatsInfo.getSum());\n    assertEquals(1.674585E7, aaa0StatsInfo.getSumOfSquares(), 0.1E-7);\n    assertEquals(115.5, (double) aaa0StatsInfo.getMean(), 0.1E-7);\n    assertEquals(206.4493184076, aaa0StatsInfo.getStddev(), 0.1E-7);\n\n    PivotField tailPivotField = pivots.get(5);\n    assertEquals(\"tail\", tailPivotField.getValue());\n    assertEquals(135, tailPivotField.getCount());\n\n    FieldStatsInfo tailPivotFieldStatsInfo = tailPivotField.getFieldStatsInfo().get(\"avg_price\");\n    assertEquals(\"avg_price\", tailPivotFieldStatsInfo.getName());\n    assertEquals(0.0, tailPivotFieldStatsInfo.getMin());\n    assertEquals(44.0, tailPivotFieldStatsInfo.getMax());\n    assertEquals(90, (long) tailPivotFieldStatsInfo.getCount());\n    assertEquals(45, (long) tailPivotFieldStatsInfo.getMissing());\n    assertEquals(1980.0, tailPivotFieldStatsInfo.getSum());\n    assertEquals(22.0, (double) tailPivotFieldStatsInfo.getMean(), 0.1E-7);\n    assertEquals(58740.0, tailPivotFieldStatsInfo.getSumOfSquares(), 0.1E-7);\n    assertEquals(13.0599310011, tailPivotFieldStatsInfo.getStddev(), 0.1E-7);\n\n    PivotField tailBPivotField = tailPivotField.getPivot().get(0);\n    assertEquals(\"tailB\", tailBPivotField.getValue());\n    assertEquals(17, tailBPivotField.getCount());\n\n    FieldStatsInfo tailBPivotFieldStatsInfo = tailBPivotField.getFieldStatsInfo().get(\"avg_price\");\n    assertEquals(\"avg_price\", tailBPivotFieldStatsInfo.getName());\n    assertEquals(35.0, tailBPivotFieldStatsInfo.getMin());\n    assertEquals(40.0, tailBPivotFieldStatsInfo.getMax());\n    assertEquals(12, (long) tailBPivotFieldStatsInfo.getCount());\n    assertEquals(5, (long) tailBPivotFieldStatsInfo.getMissing());\n    assertEquals(450.0, tailBPivotFieldStatsInfo.getSum());\n    assertEquals(37.5, (double) tailBPivotFieldStatsInfo.getMean(), 0.1E-7);\n    assertEquals(16910.0, tailBPivotFieldStatsInfo.getSumOfSquares(), 0.1E-7);\n    assertEquals(1.78376517, tailBPivotFieldStatsInfo.getStddev(), 0.1E-7);\n  }\n\n","sourceOld":"  public void doTestDeepPivotStats() throws Exception {\n    // Deep checking of some Facet stats - no refinement involved here\n\n    List<PivotField> pivots = \n      query(\"q\", \"*:*\",\n            \"shards\", getShardsString(),\n            \"facet\", \"true\",\n            \"rows\" , \"0\",\n            \"facet.pivot\",\"{!stats=s1}foo_s,bar_s\",\n            \"stats\", \"true\",\n            \"stats.field\", \"{!key=avg_price tag=s1}stat_i\").getFacetPivot().get(\"foo_s,bar_s\");\n    PivotField aaa0PivotField = pivots.get(0);\n    assertEquals(\"aaa0\", aaa0PivotField.getValue());\n    assertEquals(300, aaa0PivotField.getCount());\n\n    FieldStatsInfo aaa0StatsInfo = aaa0PivotField.getFieldStatsInfo().get(\"avg_price\");\n    assertEquals(\"avg_price\", aaa0StatsInfo.getName());\n    assertEquals(-99.0, aaa0StatsInfo.getMin());\n    assertEquals(693.0, aaa0StatsInfo.getMax());\n    assertEquals(300, (long) aaa0StatsInfo.getCount());\n    assertEquals(0, (long) aaa0StatsInfo.getMissing());\n    assertEquals(34650.0, aaa0StatsInfo.getSum());\n    assertEquals(1.674585E7, aaa0StatsInfo.getSumOfSquares(), 0.1E-7);\n    assertEquals(115.5, (double) aaa0StatsInfo.getMean(), 0.1E-7);\n    assertEquals(206.4493184076, aaa0StatsInfo.getStddev(), 0.1E-7);\n\n    PivotField tailPivotField = pivots.get(5);\n    assertEquals(\"tail\", tailPivotField.getValue());\n    assertEquals(135, tailPivotField.getCount());\n\n    FieldStatsInfo tailPivotFieldStatsInfo = tailPivotField.getFieldStatsInfo().get(\"avg_price\");\n    assertEquals(\"avg_price\", tailPivotFieldStatsInfo.getName());\n    assertEquals(0.0, tailPivotFieldStatsInfo.getMin());\n    assertEquals(44.0, tailPivotFieldStatsInfo.getMax());\n    assertEquals(90, (long) tailPivotFieldStatsInfo.getCount());\n    assertEquals(45, (long) tailPivotFieldStatsInfo.getMissing());\n    assertEquals(1980.0, tailPivotFieldStatsInfo.getSum());\n    assertEquals(22.0, (double) tailPivotFieldStatsInfo.getMean(), 0.1E-7);\n    assertEquals(58740.0, tailPivotFieldStatsInfo.getSumOfSquares(), 0.1E-7);\n    assertEquals(13.0599310011, tailPivotFieldStatsInfo.getStddev(), 0.1E-7);\n\n    PivotField tailBPivotField = tailPivotField.getPivot().get(0);\n    assertEquals(\"tailB\", tailBPivotField.getValue());\n    assertEquals(17, tailBPivotField.getCount());\n\n    FieldStatsInfo tailBPivotFieldStatsInfo = tailBPivotField.getFieldStatsInfo().get(\"avg_price\");\n    assertEquals(\"avg_price\", tailBPivotFieldStatsInfo.getName());\n    assertEquals(35.0, tailBPivotFieldStatsInfo.getMin());\n    assertEquals(40.0, tailBPivotFieldStatsInfo.getMax());\n    assertEquals(12, (long) tailBPivotFieldStatsInfo.getCount());\n    assertEquals(5, (long) tailBPivotFieldStatsInfo.getMissing());\n    assertEquals(450.0, tailBPivotFieldStatsInfo.getSum());\n    assertEquals(37.5, (double) tailBPivotFieldStatsInfo.getMean(), 0.1E-7);\n    assertEquals(16910.0, tailBPivotFieldStatsInfo.getSumOfSquares(), 0.1E-7);\n    assertEquals(1.78376517, tailBPivotFieldStatsInfo.getStddev(), 0.1E-7);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"927e6deec13723e5fd6fb8f1e0457e8597dae15e","date":1513167013,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/DistributedFacetPivotLongTailTest#doTestDeepPivotStats().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/DistributedFacetPivotLongTailTest#doTestDeepPivotStats().mjava","sourceNew":"  private void doTestDeepPivotStats() throws Exception {\n    // Deep checking of some Facet stats - no refinement involved here\n\n    List<PivotField> pivots = \n      query(\"q\", \"*:*\",\n            \"shards\", getShardsString(),\n            \"facet\", \"true\",\n            \"rows\" , \"0\",\n            \"facet.pivot\",\"{!stats=s1}foo_s,bar_s\",\n            \"stats\", \"true\",\n            \"stats.field\", \"{!key=avg_price tag=s1}\" + STAT_FIELD).getFacetPivot().get(\"foo_s,bar_s\");\n    PivotField aaa0PivotField = pivots.get(0);\n    assertEquals(\"aaa0\", aaa0PivotField.getValue());\n    assertEquals(300, aaa0PivotField.getCount());\n\n    FieldStatsInfo aaa0StatsInfo = aaa0PivotField.getFieldStatsInfo().get(\"avg_price\");\n    assertEquals(\"avg_price\", aaa0StatsInfo.getName());\n    assertEquals(-99.0, aaa0StatsInfo.getMin());\n    assertEquals(693.0, aaa0StatsInfo.getMax());\n    assertEquals(300, (long) aaa0StatsInfo.getCount());\n    assertEquals(0, (long) aaa0StatsInfo.getMissing());\n    assertEquals(34650.0, aaa0StatsInfo.getSum());\n    assertEquals(1.674585E7, aaa0StatsInfo.getSumOfSquares(), 0.1E-7);\n    assertEquals(115.5, (double) aaa0StatsInfo.getMean(), 0.1E-7);\n    assertEquals(206.4493184076, aaa0StatsInfo.getStddev(), 0.1E-7);\n\n    PivotField tailPivotField = pivots.get(5);\n    assertEquals(\"tail\", tailPivotField.getValue());\n    assertEquals(135, tailPivotField.getCount());\n\n    FieldStatsInfo tailPivotFieldStatsInfo = tailPivotField.getFieldStatsInfo().get(\"avg_price\");\n    assertEquals(\"avg_price\", tailPivotFieldStatsInfo.getName());\n    assertEquals(0.0, tailPivotFieldStatsInfo.getMin());\n    assertEquals(44.0, tailPivotFieldStatsInfo.getMax());\n    assertEquals(90, (long) tailPivotFieldStatsInfo.getCount());\n    assertEquals(45, (long) tailPivotFieldStatsInfo.getMissing());\n    assertEquals(1980.0, tailPivotFieldStatsInfo.getSum());\n    assertEquals(22.0, (double) tailPivotFieldStatsInfo.getMean(), 0.1E-7);\n    assertEquals(58740.0, tailPivotFieldStatsInfo.getSumOfSquares(), 0.1E-7);\n    assertEquals(13.0599310011, tailPivotFieldStatsInfo.getStddev(), 0.1E-7);\n\n    PivotField tailBPivotField = tailPivotField.getPivot().get(0);\n    assertEquals(\"tailB\", tailBPivotField.getValue());\n    assertEquals(17, tailBPivotField.getCount());\n\n    FieldStatsInfo tailBPivotFieldStatsInfo = tailBPivotField.getFieldStatsInfo().get(\"avg_price\");\n    assertEquals(\"avg_price\", tailBPivotFieldStatsInfo.getName());\n    assertEquals(35.0, tailBPivotFieldStatsInfo.getMin());\n    assertEquals(40.0, tailBPivotFieldStatsInfo.getMax());\n    assertEquals(12, (long) tailBPivotFieldStatsInfo.getCount());\n    assertEquals(5, (long) tailBPivotFieldStatsInfo.getMissing());\n    assertEquals(450.0, tailBPivotFieldStatsInfo.getSum());\n    assertEquals(37.5, (double) tailBPivotFieldStatsInfo.getMean(), 0.1E-7);\n    assertEquals(16910.0, tailBPivotFieldStatsInfo.getSumOfSquares(), 0.1E-7);\n    assertEquals(1.78376517, tailBPivotFieldStatsInfo.getStddev(), 0.1E-7);\n  }\n\n","sourceOld":"  public void doTestDeepPivotStats() throws Exception {\n    // Deep checking of some Facet stats - no refinement involved here\n\n    List<PivotField> pivots = \n      query(\"q\", \"*:*\",\n            \"shards\", getShardsString(),\n            \"facet\", \"true\",\n            \"rows\" , \"0\",\n            \"facet.pivot\",\"{!stats=s1}foo_s,bar_s\",\n            \"stats\", \"true\",\n            \"stats.field\", \"{!key=avg_price tag=s1}stat_i\").getFacetPivot().get(\"foo_s,bar_s\");\n    PivotField aaa0PivotField = pivots.get(0);\n    assertEquals(\"aaa0\", aaa0PivotField.getValue());\n    assertEquals(300, aaa0PivotField.getCount());\n\n    FieldStatsInfo aaa0StatsInfo = aaa0PivotField.getFieldStatsInfo().get(\"avg_price\");\n    assertEquals(\"avg_price\", aaa0StatsInfo.getName());\n    assertEquals(-99.0, aaa0StatsInfo.getMin());\n    assertEquals(693.0, aaa0StatsInfo.getMax());\n    assertEquals(300, (long) aaa0StatsInfo.getCount());\n    assertEquals(0, (long) aaa0StatsInfo.getMissing());\n    assertEquals(34650.0, aaa0StatsInfo.getSum());\n    assertEquals(1.674585E7, aaa0StatsInfo.getSumOfSquares(), 0.1E-7);\n    assertEquals(115.5, (double) aaa0StatsInfo.getMean(), 0.1E-7);\n    assertEquals(206.4493184076, aaa0StatsInfo.getStddev(), 0.1E-7);\n\n    PivotField tailPivotField = pivots.get(5);\n    assertEquals(\"tail\", tailPivotField.getValue());\n    assertEquals(135, tailPivotField.getCount());\n\n    FieldStatsInfo tailPivotFieldStatsInfo = tailPivotField.getFieldStatsInfo().get(\"avg_price\");\n    assertEquals(\"avg_price\", tailPivotFieldStatsInfo.getName());\n    assertEquals(0.0, tailPivotFieldStatsInfo.getMin());\n    assertEquals(44.0, tailPivotFieldStatsInfo.getMax());\n    assertEquals(90, (long) tailPivotFieldStatsInfo.getCount());\n    assertEquals(45, (long) tailPivotFieldStatsInfo.getMissing());\n    assertEquals(1980.0, tailPivotFieldStatsInfo.getSum());\n    assertEquals(22.0, (double) tailPivotFieldStatsInfo.getMean(), 0.1E-7);\n    assertEquals(58740.0, tailPivotFieldStatsInfo.getSumOfSquares(), 0.1E-7);\n    assertEquals(13.0599310011, tailPivotFieldStatsInfo.getStddev(), 0.1E-7);\n\n    PivotField tailBPivotField = tailPivotField.getPivot().get(0);\n    assertEquals(\"tailB\", tailBPivotField.getValue());\n    assertEquals(17, tailBPivotField.getCount());\n\n    FieldStatsInfo tailBPivotFieldStatsInfo = tailBPivotField.getFieldStatsInfo().get(\"avg_price\");\n    assertEquals(\"avg_price\", tailBPivotFieldStatsInfo.getName());\n    assertEquals(35.0, tailBPivotFieldStatsInfo.getMin());\n    assertEquals(40.0, tailBPivotFieldStatsInfo.getMax());\n    assertEquals(12, (long) tailBPivotFieldStatsInfo.getCount());\n    assertEquals(5, (long) tailBPivotFieldStatsInfo.getMissing());\n    assertEquals(450.0, tailBPivotFieldStatsInfo.getSum());\n    assertEquals(37.5, (double) tailBPivotFieldStatsInfo.getMean(), 0.1E-7);\n    assertEquals(16910.0, tailBPivotFieldStatsInfo.getSumOfSquares(), 0.1E-7);\n    assertEquals(1.78376517, tailBPivotFieldStatsInfo.getStddev(), 0.1E-7);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5445bd5bf6ab5e2fbb1a1b4ff8a36ba1cafa18ba":["4c18a95e9168a30be855f5d5e7d61a863186fdc5"],"4c18a95e9168a30be855f5d5e7d61a863186fdc5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"927e6deec13723e5fd6fb8f1e0457e8597dae15e":["4c18a95e9168a30be855f5d5e7d61a863186fdc5","5445bd5bf6ab5e2fbb1a1b4ff8a36ba1cafa18ba"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["927e6deec13723e5fd6fb8f1e0457e8597dae15e"]},"commit2Childs":{"5445bd5bf6ab5e2fbb1a1b4ff8a36ba1cafa18ba":["927e6deec13723e5fd6fb8f1e0457e8597dae15e"],"4c18a95e9168a30be855f5d5e7d61a863186fdc5":["5445bd5bf6ab5e2fbb1a1b4ff8a36ba1cafa18ba","927e6deec13723e5fd6fb8f1e0457e8597dae15e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4c18a95e9168a30be855f5d5e7d61a863186fdc5"],"927e6deec13723e5fd6fb8f1e0457e8597dae15e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}