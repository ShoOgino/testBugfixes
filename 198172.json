{"path":"src/java/org/apache/lucene/index/IndexWriter#checkpoint().mjava","commits":[{"id":"8b6187898fc4413ccd18229711786550a280383c","date":1173776782,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexWriter#checkpoint().mjava","pathOld":"/dev/null","sourceNew":"  /*\n   * Called whenever the SegmentInfos has been updated and\n   * the index files referenced exist (correctly) in the\n   * index directory.  If we are in autoCommit mode, we\n   * commit the change immediately.  Else, we mark\n   * commitPending.\n   */\n  private void checkpoint() throws IOException {\n    if (autoCommit) {\n      segmentInfos.write(directory);\n    } else {\n      commitPending = true;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7dc11e5e2e108e6cdd85ae2693383a15f41cbf35","date":1186166482,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexWriter#checkpoint().mjava","pathOld":"src/java/org/apache/lucene/index/IndexWriter#checkpoint().mjava","sourceNew":"  /*\n   * Called whenever the SegmentInfos has been updated and\n   * the index files referenced exist (correctly) in the\n   * index directory.  If we are in autoCommit mode, we\n   * commit the change immediately.  Else, we mark\n   * commitPending.\n   */\n  private void checkpoint() throws IOException {\n    if (autoCommit) {\n      segmentInfos.write(directory);\n      if (infoStream != null)\n        infoStream.println(\"checkpoint: wrote segments file \\\"\" + segmentInfos.getCurrentSegmentFileName() + \"\\\"\");\n    } else {\n      commitPending = true;\n    }\n  }\n\n","sourceOld":"  /*\n   * Called whenever the SegmentInfos has been updated and\n   * the index files referenced exist (correctly) in the\n   * index directory.  If we are in autoCommit mode, we\n   * commit the change immediately.  Else, we mark\n   * commitPending.\n   */\n  private void checkpoint() throws IOException {\n    if (autoCommit) {\n      segmentInfos.write(directory);\n    } else {\n      commitPending = true;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b1405362241b561f5590ff4a87d5d6e173bcd9cf","date":1190107634,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexWriter#checkpoint().mjava","pathOld":"src/java/org/apache/lucene/index/IndexWriter#checkpoint().mjava","sourceNew":"  /*\n   * Called whenever the SegmentInfos has been updated and\n   * the index files referenced exist (correctly) in the\n   * index directory.  If we are in autoCommit mode, we\n   * commit the change immediately.  Else, we mark\n   * commitPending.\n   */\n  private synchronized void checkpoint() throws IOException {\n    if (autoCommit) {\n      segmentInfos.write(directory);\n      if (infoStream != null)\n        message(\"checkpoint: wrote segments file \\\"\" + segmentInfos.getCurrentSegmentFileName() + \"\\\"\");\n    } else {\n      commitPending = true;\n    }\n  }\n\n","sourceOld":"  /*\n   * Called whenever the SegmentInfos has been updated and\n   * the index files referenced exist (correctly) in the\n   * index directory.  If we are in autoCommit mode, we\n   * commit the change immediately.  Else, we mark\n   * commitPending.\n   */\n  private void checkpoint() throws IOException {\n    if (autoCommit) {\n      segmentInfos.write(directory);\n      if (infoStream != null)\n        infoStream.println(\"checkpoint: wrote segments file \\\"\" + segmentInfos.getCurrentSegmentFileName() + \"\\\"\");\n    } else {\n      commitPending = true;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3dafe85e64882d66ce66ed420d8678b85022b466","date":1190126644,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexWriter#checkpoint().mjava","pathOld":"src/java/org/apache/lucene/index/IndexWriter#checkpoint().mjava","sourceNew":"  /*\n   * Called whenever the SegmentInfos has been updated and\n   * the index files referenced exist (correctly) in the\n   * index directory.  If we are in autoCommit mode, we\n   * commit the change immediately.  Else, we mark\n   * commitPending.\n   */\n  private synchronized void checkpoint() throws IOException {\n    if (autoCommit) {\n      segmentInfos.write(directory);\n      commitPending = false;\n      if (infoStream != null)\n        message(\"checkpoint: wrote segments file \\\"\" + segmentInfos.getCurrentSegmentFileName() + \"\\\"\");\n    } else {\n      commitPending = true;\n    }\n  }\n\n","sourceOld":"  /*\n   * Called whenever the SegmentInfos has been updated and\n   * the index files referenced exist (correctly) in the\n   * index directory.  If we are in autoCommit mode, we\n   * commit the change immediately.  Else, we mark\n   * commitPending.\n   */\n  private synchronized void checkpoint() throws IOException {\n    if (autoCommit) {\n      segmentInfos.write(directory);\n      if (infoStream != null)\n        message(\"checkpoint: wrote segments file \\\"\" + segmentInfos.getCurrentSegmentFileName() + \"\\\"\");\n    } else {\n      commitPending = true;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e82780afe6097066eb5befb86e9432f077667e3d","date":1202756169,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexWriter#checkpoint().mjava","pathOld":"src/java/org/apache/lucene/index/IndexWriter#checkpoint().mjava","sourceNew":"  /*\n   * Called whenever the SegmentInfos has been updated and\n   * the index files referenced exist (correctly) in the\n   * index directory.\n   */\n  private synchronized void checkpoint() throws IOException {\n    commitPending = true;\n    deleter.checkpoint(segmentInfos, false);\n  }\n\n","sourceOld":"  /*\n   * Called whenever the SegmentInfos has been updated and\n   * the index files referenced exist (correctly) in the\n   * index directory.  If we are in autoCommit mode, we\n   * commit the change immediately.  Else, we mark\n   * commitPending.\n   */\n  private synchronized void checkpoint() throws IOException {\n    if (autoCommit) {\n      segmentInfos.write(directory);\n      commitPending = false;\n      if (infoStream != null)\n        message(\"checkpoint: wrote segments file \\\"\" + segmentInfos.getCurrentSegmentFileName() + \"\\\"\");\n    } else {\n      commitPending = true;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a2fc4b864a5dc2c630bb1fa94091e89e69f8f8be","date":1204801324,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexWriter#checkpoint().mjava","pathOld":"src/java/org/apache/lucene/index/IndexWriter#checkpoint().mjava","sourceNew":"  /*\n   * Called whenever the SegmentInfos has been updated and\n   * the index files referenced exist (correctly) in the\n   * index directory.\n   */\n  private synchronized void checkpoint() throws IOException {\n    changeCount++;\n    deleter.checkpoint(segmentInfos, false);\n  }\n\n","sourceOld":"  /*\n   * Called whenever the SegmentInfos has been updated and\n   * the index files referenced exist (correctly) in the\n   * index directory.\n   */\n  private synchronized void checkpoint() throws IOException {\n    commitPending = true;\n    deleter.checkpoint(segmentInfos, false);\n  }\n\n","bugFix":null,"bugIntro":["3af8c90c5e965a1a8011e827ab59de734c7dfb79"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriter#checkpoint().mjava","pathOld":"src/java/org/apache/lucene/index/IndexWriter#checkpoint().mjava","sourceNew":"  /*\n   * Called whenever the SegmentInfos has been updated and\n   * the index files referenced exist (correctly) in the\n   * index directory.\n   */\n  private synchronized void checkpoint() throws IOException {\n    changeCount++;\n    deleter.checkpoint(segmentInfos, false);\n  }\n\n","sourceOld":"  /*\n   * Called whenever the SegmentInfos has been updated and\n   * the index files referenced exist (correctly) in the\n   * index directory.\n   */\n  private synchronized void checkpoint() throws IOException {\n    changeCount++;\n    deleter.checkpoint(segmentInfos, false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"b1405362241b561f5590ff4a87d5d6e173bcd9cf":["7dc11e5e2e108e6cdd85ae2693383a15f41cbf35"],"3dafe85e64882d66ce66ed420d8678b85022b466":["b1405362241b561f5590ff4a87d5d6e173bcd9cf"],"7dc11e5e2e108e6cdd85ae2693383a15f41cbf35":["8b6187898fc4413ccd18229711786550a280383c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a2fc4b864a5dc2c630bb1fa94091e89e69f8f8be":["e82780afe6097066eb5befb86e9432f077667e3d"],"e82780afe6097066eb5befb86e9432f077667e3d":["3dafe85e64882d66ce66ed420d8678b85022b466"],"8b6187898fc4413ccd18229711786550a280383c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a2fc4b864a5dc2c630bb1fa94091e89e69f8f8be"]},"commit2Childs":{"b1405362241b561f5590ff4a87d5d6e173bcd9cf":["3dafe85e64882d66ce66ed420d8678b85022b466"],"3dafe85e64882d66ce66ed420d8678b85022b466":["e82780afe6097066eb5befb86e9432f077667e3d"],"7dc11e5e2e108e6cdd85ae2693383a15f41cbf35":["b1405362241b561f5590ff4a87d5d6e173bcd9cf"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8b6187898fc4413ccd18229711786550a280383c"],"8b6187898fc4413ccd18229711786550a280383c":["7dc11e5e2e108e6cdd85ae2693383a15f41cbf35"],"a2fc4b864a5dc2c630bb1fa94091e89e69f8f8be":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"e82780afe6097066eb5befb86e9432f077667e3d":["a2fc4b864a5dc2c630bb1fa94091e89e69f8f8be"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}