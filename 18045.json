{"path":"lucene/src/java/org/apache/lucene/index/codecs/DocValuesConsumer#merge(SingleSubMergeState).mjava","commits":[{"id":"32aca6bb0a6aa0a1813e7d035ac0e039f54269f4","date":1318260487,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/DocValuesConsumer#merge(SingleSubMergeState).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Merges the given {@link SingleSubMergeState} into this {@link DocValuesConsumer}.\n   * \n   * @param mergeState\n   *          the {@link SingleSubMergeState} to merge\n   * @throws IOException\n   *           if an {@link IOException} occurs\n   */\n  protected abstract void merge(SingleSubMergeState mergeState) throws IOException;\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"16e84f26157dc13968d0c599befda34eae0bc176","date":1323220775,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/DocValuesConsumer#merge(SingleSubMergeState).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/DocValuesConsumer#merge(SingleSubMergeState).mjava","sourceNew":"  /**\n   * Merges the given {@link SingleSubMergeState} into this {@link DocValuesConsumer}.\n   * \n   * @param mergeState\n   *          the {@link SingleSubMergeState} to merge\n   * @throws IOException\n   *           if an {@link IOException} occurs\n   */\n  // nocommit: can't we have a default implementation here that merges naively with our apis?\n  // this is how stored fields and term vectors work. its a pain to have to impl merging\n  // (should be an optimization to override it)\n  protected abstract void merge(SingleSubMergeState mergeState) throws IOException;\n\n","sourceOld":"  /**\n   * Merges the given {@link SingleSubMergeState} into this {@link DocValuesConsumer}.\n   * \n   * @param mergeState\n   *          the {@link SingleSubMergeState} to merge\n   * @throws IOException\n   *           if an {@link IOException} occurs\n   */\n  protected abstract void merge(SingleSubMergeState mergeState) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a1deefbd2dc985fd22845b4196ee6c41ab2b274","date":1323720813,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/DocValuesConsumer#merge(SingleSubMergeState).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/DocValuesConsumer#merge(SingleSubMergeState).mjava","sourceNew":"  /**\n   * Merges the given {@link SingleSubMergeState} into this {@link DocValuesConsumer}.\n   * \n   * @param mergeState\n   *          the {@link SingleSubMergeState} to merge\n   * @throws IOException\n   *           if an {@link IOException} occurs\n   */\n  // TODO: can't we have a default implementation here that merges naively with our apis?\n  // this is how stored fields and term vectors work. its a pain to have to impl merging\n  // (should be an optimization to override it)\n  protected abstract void merge(SingleSubMergeState mergeState) throws IOException;\n\n","sourceOld":"  /**\n   * Merges the given {@link SingleSubMergeState} into this {@link DocValuesConsumer}.\n   * \n   * @param mergeState\n   *          the {@link SingleSubMergeState} to merge\n   * @throws IOException\n   *           if an {@link IOException} occurs\n   */\n  // nocommit: can't we have a default implementation here that merges naively with our apis?\n  // this is how stored fields and term vectors work. its a pain to have to impl merging\n  // (should be an optimization to override it)\n  protected abstract void merge(SingleSubMergeState mergeState) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d638301ad1cfcae567b681b893bc8781f0ee48a5","date":1323801546,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/DocValuesConsumer#merge(SingleSubMergeState).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/DocValuesConsumer#merge(SingleSubMergeState).mjava","sourceNew":"  /**\n   * Merges the given {@link SingleSubMergeState} into this {@link DocValuesConsumer}.\n   * \n   * @param mergeState\n   *          the {@link SingleSubMergeState} to merge\n   * @throws IOException\n   *           if an {@link IOException} occurs\n   */\n  // TODO: can't we have a default implementation here that merges naively with our apis?\n  // this is how stored fields and term vectors work. its a pain to have to impl merging\n  // (should be an optimization to override it)\n  protected abstract void merge(SingleSubMergeState mergeState) throws IOException;\n\n","sourceOld":"  /**\n   * Merges the given {@link SingleSubMergeState} into this {@link DocValuesConsumer}.\n   * \n   * @param mergeState\n   *          the {@link SingleSubMergeState} to merge\n   * @throws IOException\n   *           if an {@link IOException} occurs\n   */\n  protected abstract void merge(SingleSubMergeState mergeState) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0ae5e3ed1232483b7b8a014f175a5fe43595982","date":1324062192,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/codecs/DocValuesConsumer#merge(SingleSubMergeState).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/DocValuesConsumer#merge(SingleSubMergeState).mjava","sourceNew":"  /**\n   * Merges the given {@link SingleSubMergeState} into this {@link DocValuesConsumer}.\n   * \n   * @param mergeState\n   *          the {@link SingleSubMergeState} to merge\n   * @throws IOException\n   *           if an {@link IOException} occurs\n   */\n  // TODO: can't we have a default implementation here that merges naively with our apis?\n  // this is how stored fields and term vectors work. its a pain to have to impl merging\n  // (should be an optimization to override it)\n  protected abstract void merge(SingleSubMergeState mergeState) throws IOException;\n\n","sourceOld":"  /**\n   * Merges the given {@link SingleSubMergeState} into this {@link DocValuesConsumer}.\n   * \n   * @param mergeState\n   *          the {@link SingleSubMergeState} to merge\n   * @throws IOException\n   *           if an {@link IOException} occurs\n   */\n  // TODO: can't we have a default implementation here that merges naively with our apis?\n  // this is how stored fields and term vectors work. its a pain to have to impl merging\n  // (should be an optimization to override it)\n  protected abstract void merge(SingleSubMergeState mergeState) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"16e84f26157dc13968d0c599befda34eae0bc176":["32aca6bb0a6aa0a1813e7d035ac0e039f54269f4"],"2a1deefbd2dc985fd22845b4196ee6c41ab2b274":["16e84f26157dc13968d0c599befda34eae0bc176"],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["d638301ad1cfcae567b681b893bc8781f0ee48a5"],"32aca6bb0a6aa0a1813e7d035ac0e039f54269f4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"],"d638301ad1cfcae567b681b893bc8781f0ee48a5":["32aca6bb0a6aa0a1813e7d035ac0e039f54269f4","2a1deefbd2dc985fd22845b4196ee6c41ab2b274"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["32aca6bb0a6aa0a1813e7d035ac0e039f54269f4"],"16e84f26157dc13968d0c599befda34eae0bc176":["2a1deefbd2dc985fd22845b4196ee6c41ab2b274"],"2a1deefbd2dc985fd22845b4196ee6c41ab2b274":["d638301ad1cfcae567b681b893bc8781f0ee48a5"],"32aca6bb0a6aa0a1813e7d035ac0e039f54269f4":["16e84f26157dc13968d0c599befda34eae0bc176","d638301ad1cfcae567b681b893bc8781f0ee48a5"],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d638301ad1cfcae567b681b893bc8781f0ee48a5":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}