{"path":"solr/core/src/java/org/apache/solr/handler/loader/JsonLoader.SingleThreadedJsonLoader#parseSingleFieldValue(int,String).mjava","commits":[{"id":"2a63f62e9f506b7a15c76fddc8ad5f22112070c2","date":1423521689,"type":1,"author":"Timothy Potter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/loader/JsonLoader.SingleThreadedJsonLoader#parseSingleFieldValue(int,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/loader/JsonLoader.SingleThreadedJsonLoader#parseSingleFieldValue(int).mjava","sourceNew":"    private Object parseSingleFieldValue(int ev, String fieldName) throws IOException {\n      switch (ev) {\n        case JSONParser.STRING:\n          return parser.getString();\n        case JSONParser.LONG:\n          return parser.getLong();\n        case JSONParser.NUMBER:\n          return parser.getDouble();\n        case JSONParser.BIGNUMBER:\n          return parser.getNumberChars().toString();\n        case JSONParser.BOOLEAN:\n          return parser.getBoolean();\n        case JSONParser.NULL:\n          parser.getNull();\n          return null;\n        case JSONParser.ARRAY_START:\n          return parseArrayFieldValue(ev, fieldName);\n        default:\n          throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Error parsing JSON field value. \"\n              + \"Unexpected \"+JSONParser.getEventString(ev)+\" at [\"+parser.getPosition()+\"], field=\"+fieldName );\n      }\n    }\n\n","sourceOld":"    private Object parseSingleFieldValue(int ev) throws IOException {\n      switch (ev) {\n        case JSONParser.STRING:\n          return parser.getString();\n        case JSONParser.LONG:\n          return parser.getLong();\n        case JSONParser.NUMBER:\n          return parser.getDouble();\n        case JSONParser.BIGNUMBER:\n          return parser.getNumberChars().toString();\n        case JSONParser.BOOLEAN:\n          return parser.getBoolean();\n        case JSONParser.NULL:\n          parser.getNull();\n          return null;\n        case JSONParser.ARRAY_START:\n          return parseArrayFieldValue(ev);\n        default:\n          throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Error parsing JSON field value. Unexpected \"+JSONParser.getEventString(ev) );\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6f5f8e831e266692b649e39dad7a64f525aa6d21","date":1427506910,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/loader/JsonLoader.SingleThreadedJsonLoader#parseSingleFieldValue(int,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/loader/JsonLoader.SingleThreadedJsonLoader#parseSingleFieldValue(int,String).mjava","sourceNew":"    private Object parseSingleFieldValue(int ev, String fieldName) throws IOException {\n      switch (ev) {\n        case JSONParser.STRING:\n          return parser.getString();\n        case JSONParser.LONG:\n          return parser.getLong();\n        case JSONParser.NUMBER:\n          return parser.getDouble();\n        case JSONParser.BIGNUMBER:\n          return parser.getNumberChars().toString();\n        case JSONParser.BOOLEAN:\n          return parser.getBoolean();\n        case JSONParser.NULL:\n          parser.getNull();\n          return null;\n        case JSONParser.ARRAY_START:\n          return parseArrayFieldValue(ev, fieldName);\n        default:\n          throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Error parsing JSON field value. \"\n              + \"Unexpected \" + JSONParser.getEventString(ev) + \" at [\" + parser.getPosition() + \"], field=\" + fieldName);\n      }\n    }\n\n","sourceOld":"    private Object parseSingleFieldValue(int ev, String fieldName) throws IOException {\n      switch (ev) {\n        case JSONParser.STRING:\n          return parser.getString();\n        case JSONParser.LONG:\n          return parser.getLong();\n        case JSONParser.NUMBER:\n          return parser.getDouble();\n        case JSONParser.BIGNUMBER:\n          return parser.getNumberChars().toString();\n        case JSONParser.BOOLEAN:\n          return parser.getBoolean();\n        case JSONParser.NULL:\n          parser.getNull();\n          return null;\n        case JSONParser.ARRAY_START:\n          return parseArrayFieldValue(ev, fieldName);\n        default:\n          throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Error parsing JSON field value. \"\n              + \"Unexpected \"+JSONParser.getEventString(ev)+\" at [\"+parser.getPosition()+\"], field=\"+fieldName );\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/loader/JsonLoader.SingleThreadedJsonLoader#parseSingleFieldValue(int,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/loader/JsonLoader.SingleThreadedJsonLoader#parseSingleFieldValue(int,String).mjava","sourceNew":"    private Object parseSingleFieldValue(int ev, String fieldName) throws IOException {\n      switch (ev) {\n        case JSONParser.STRING:\n          return parser.getString();\n        case JSONParser.LONG:\n          return parser.getLong();\n        case JSONParser.NUMBER:\n          return parser.getDouble();\n        case JSONParser.BIGNUMBER:\n          return parser.getNumberChars().toString();\n        case JSONParser.BOOLEAN:\n          return parser.getBoolean();\n        case JSONParser.NULL:\n          parser.getNull();\n          return null;\n        case JSONParser.ARRAY_START:\n          return parseArrayFieldValue(ev, fieldName);\n        default:\n          throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Error parsing JSON field value. \"\n              + \"Unexpected \" + JSONParser.getEventString(ev) + \" at [\" + parser.getPosition() + \"], field=\" + fieldName);\n      }\n    }\n\n","sourceOld":"    private Object parseSingleFieldValue(int ev, String fieldName) throws IOException {\n      switch (ev) {\n        case JSONParser.STRING:\n          return parser.getString();\n        case JSONParser.LONG:\n          return parser.getLong();\n        case JSONParser.NUMBER:\n          return parser.getDouble();\n        case JSONParser.BIGNUMBER:\n          return parser.getNumberChars().toString();\n        case JSONParser.BOOLEAN:\n          return parser.getBoolean();\n        case JSONParser.NULL:\n          parser.getNull();\n          return null;\n        case JSONParser.ARRAY_START:\n          return parseArrayFieldValue(ev, fieldName);\n        default:\n          throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Error parsing JSON field value. \"\n              + \"Unexpected \"+JSONParser.getEventString(ev)+\" at [\"+parser.getPosition()+\"], field=\"+fieldName );\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9440b5b1eec7788a0edd10385e4d7a614d1024d7","date":1528992889,"type":5,"author":"user","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/loader/JsonLoader.SingleThreadedJsonLoader#parseSingleFieldValue(int,SolrInputField).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/loader/JsonLoader.SingleThreadedJsonLoader#parseSingleFieldValue(int,String).mjava","sourceNew":"    private Object parseSingleFieldValue(int ev, SolrInputField sif) throws IOException {\n      switch (ev) {\n        case JSONParser.STRING:\n          return parser.getString();\n        case JSONParser.LONG:\n          return parser.getLong();\n        case JSONParser.NUMBER:\n          return parser.getDouble();\n        case JSONParser.BIGNUMBER:\n          return parser.getNumberChars().toString();\n        case JSONParser.BOOLEAN:\n          return parser.getBoolean();\n        case JSONParser.NULL:\n          parser.getNull();\n          return null;\n        case JSONParser.ARRAY_START:\n          return parseArrayFieldValue(ev, sif);\n        case JSONParser.OBJECT_START:\n          parseExtendedFieldValue(ev, sif);\n          return sif.getValue();\n        default:\n          throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Error parsing JSON field value. \"\n              + \"Unexpected \" + JSONParser.getEventString(ev) + \" at [\" + parser.getPosition() + \"], field=\" + sif.getName());\n      }\n    }\n\n","sourceOld":"    private Object parseSingleFieldValue(int ev, String fieldName) throws IOException {\n      switch (ev) {\n        case JSONParser.STRING:\n          return parser.getString();\n        case JSONParser.LONG:\n          return parser.getLong();\n        case JSONParser.NUMBER:\n          return parser.getDouble();\n        case JSONParser.BIGNUMBER:\n          return parser.getNumberChars().toString();\n        case JSONParser.BOOLEAN:\n          return parser.getBoolean();\n        case JSONParser.NULL:\n          parser.getNull();\n          return null;\n        case JSONParser.ARRAY_START:\n          return parseArrayFieldValue(ev, fieldName);\n        default:\n          throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Error parsing JSON field value. \"\n              + \"Unexpected \" + JSONParser.getEventString(ev) + \" at [\" + parser.getPosition() + \"], field=\" + fieldName);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26","date":1531589977,"type":4,"author":"Michael Braun","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/handler/loader/JsonLoader.SingleThreadedJsonLoader#parseSingleFieldValue(int,String).mjava","sourceNew":null,"sourceOld":"    private Object parseSingleFieldValue(int ev, String fieldName) throws IOException {\n      switch (ev) {\n        case JSONParser.STRING:\n          return parser.getString();\n        case JSONParser.LONG:\n          return parser.getLong();\n        case JSONParser.NUMBER:\n          return parser.getDouble();\n        case JSONParser.BIGNUMBER:\n          return parser.getNumberChars().toString();\n        case JSONParser.BOOLEAN:\n          return parser.getBoolean();\n        case JSONParser.NULL:\n          parser.getNull();\n          return null;\n        case JSONParser.ARRAY_START:\n          return parseArrayFieldValue(ev, fieldName);\n        default:\n          throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Error parsing JSON field value. \"\n              + \"Unexpected \" + JSONParser.getEventString(ev) + \" at [\" + parser.getPosition() + \"], field=\" + fieldName);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","date":1531905561,"type":4,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/handler/loader/JsonLoader.SingleThreadedJsonLoader#parseSingleFieldValue(int,String).mjava","sourceNew":null,"sourceOld":"    private Object parseSingleFieldValue(int ev, String fieldName) throws IOException {\n      switch (ev) {\n        case JSONParser.STRING:\n          return parser.getString();\n        case JSONParser.LONG:\n          return parser.getLong();\n        case JSONParser.NUMBER:\n          return parser.getDouble();\n        case JSONParser.BIGNUMBER:\n          return parser.getNumberChars().toString();\n        case JSONParser.BOOLEAN:\n          return parser.getBoolean();\n        case JSONParser.NULL:\n          parser.getNull();\n          return null;\n        case JSONParser.ARRAY_START:\n          return parseArrayFieldValue(ev, fieldName);\n        default:\n          throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Error parsing JSON field value. \"\n              + \"Unexpected \" + JSONParser.getEventString(ev) + \" at [\" + parser.getPosition() + \"], field=\" + fieldName);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["2a63f62e9f506b7a15c76fddc8ad5f22112070c2","6f5f8e831e266692b649e39dad7a64f525aa6d21"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":["6f5f8e831e266692b649e39dad7a64f525aa6d21","9440b5b1eec7788a0edd10385e4d7a614d1024d7"],"6f5f8e831e266692b649e39dad7a64f525aa6d21":["2a63f62e9f506b7a15c76fddc8ad5f22112070c2"],"9440b5b1eec7788a0edd10385e4d7a614d1024d7":["6f5f8e831e266692b649e39dad7a64f525aa6d21"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2a63f62e9f506b7a15c76fddc8ad5f22112070c2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9440b5b1eec7788a0edd10385e4d7a614d1024d7"],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":["6f5f8e831e266692b649e39dad7a64f525aa6d21","9440b5b1eec7788a0edd10385e4d7a614d1024d7"]},"commit2Childs":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":[],"6f5f8e831e266692b649e39dad7a64f525aa6d21":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","9440b5b1eec7788a0edd10385e4d7a614d1024d7","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"9440b5b1eec7788a0edd10385e4d7a614d1024d7":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["2a63f62e9f506b7a15c76fddc8ad5f22112070c2"],"2a63f62e9f506b7a15c76fddc8ad5f22112070c2":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","6f5f8e831e266692b649e39dad7a64f525aa6d21"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}