{"path":"solr/core/src/test/org/apache/solr/cloud/MultiThreadedOCPTest#getRequestState(String,SolrServer).mjava","commits":[{"id":"6f26f74e4969851a019d28f10315cb1c77786f22","date":1400539241,"type":0,"author":"Anshum Gupta","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/MultiThreadedOCPTest#getRequestState(String,SolrServer).mjava","pathOld":"/dev/null","sourceNew":"  private String getRequestState(String requestId, SolrServer server) throws IOException, SolrServerException {\n    CollectionAdminResponse response = CollectionAdminRequest.requestStatus(requestId, server);\n    NamedList innerResponse = (NamedList) response.getResponse().get(\"status\");\n    return (String) innerResponse.get(\"state\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7605579001505896d48b07160075a5c8b8e128e","date":1400758727,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/MultiThreadedOCPTest#getRequestState(String,SolrServer).mjava","pathOld":"/dev/null","sourceNew":"  private String getRequestState(String requestId, SolrServer server) throws IOException, SolrServerException {\n    CollectionAdminResponse response = CollectionAdminRequest.requestStatus(requestId, server);\n    NamedList innerResponse = (NamedList) response.getResponse().get(\"status\");\n    return (String) innerResponse.get(\"state\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4a7d7ef06ef6f04ba2de657e90e0458048a967c6","date":1409691631,"type":3,"author":"Anshum Gupta","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/MultiThreadedOCPTest#getRequestState(String,SolrServer).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/MultiThreadedOCPTest#getRequestState(String,SolrServer).mjava","sourceNew":"  private String getRequestState(String requestId, SolrServer server) throws IOException, SolrServerException {\n    RequestStatus requestStatusRequest = new RequestStatus();\n    requestStatusRequest.setRequestId(requestId);\n    CollectionAdminResponse response = requestStatusRequest.process(server);\n\n    NamedList innerResponse = (NamedList) response.getResponse().get(\"status\");\n    return (String) innerResponse.get(\"state\");\n  }\n\n","sourceOld":"  private String getRequestState(String requestId, SolrServer server) throws IOException, SolrServerException {\n    CollectionAdminResponse response = CollectionAdminRequest.requestStatus(requestId, server);\n    NamedList innerResponse = (NamedList) response.getResponse().get(\"status\");\n    return (String) innerResponse.get(\"state\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bafca15d8e408346a67f4282ad1143b88023893b","date":1420034748,"type":5,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/MultiThreadedOCPTest#getRequestState(String,SolrClient).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/MultiThreadedOCPTest#getRequestState(String,SolrServer).mjava","sourceNew":"  private String getRequestState(String requestId, SolrClient client) throws IOException, SolrServerException {\n    RequestStatus requestStatusRequest = new RequestStatus();\n    requestStatusRequest.setRequestId(requestId);\n    CollectionAdminResponse response = requestStatusRequest.process(client);\n\n    NamedList innerResponse = (NamedList) response.getResponse().get(\"status\");\n    return (String) innerResponse.get(\"state\");\n  }\n\n","sourceOld":"  private String getRequestState(String requestId, SolrServer server) throws IOException, SolrServerException {\n    RequestStatus requestStatusRequest = new RequestStatus();\n    requestStatusRequest.setRequestId(requestId);\n    CollectionAdminResponse response = requestStatusRequest.process(server);\n\n    NamedList innerResponse = (NamedList) response.getResponse().get(\"status\");\n    return (String) innerResponse.get(\"state\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4a7d7ef06ef6f04ba2de657e90e0458048a967c6":["6f26f74e4969851a019d28f10315cb1c77786f22"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bafca15d8e408346a67f4282ad1143b88023893b":["4a7d7ef06ef6f04ba2de657e90e0458048a967c6"],"b7605579001505896d48b07160075a5c8b8e128e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","6f26f74e4969851a019d28f10315cb1c77786f22"],"6f26f74e4969851a019d28f10315cb1c77786f22":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["bafca15d8e408346a67f4282ad1143b88023893b"]},"commit2Childs":{"4a7d7ef06ef6f04ba2de657e90e0458048a967c6":["bafca15d8e408346a67f4282ad1143b88023893b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b7605579001505896d48b07160075a5c8b8e128e","6f26f74e4969851a019d28f10315cb1c77786f22"],"bafca15d8e408346a67f4282ad1143b88023893b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b7605579001505896d48b07160075a5c8b8e128e":[],"6f26f74e4969851a019d28f10315cb1c77786f22":["4a7d7ef06ef6f04ba2de657e90e0458048a967c6","b7605579001505896d48b07160075a5c8b8e128e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b7605579001505896d48b07160075a5c8b8e128e","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}