{"path":"lucene/queries/src/test/org/apache/lucene/queries/function/TestValueSources#testQueryWrapedFuncWrapedQuery().mjava","commits":[{"id":"a701a7aab388afa1412a3dc23b4115c321f478c4","date":1413486320,"type":0,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"lucene/queries/src/test/org/apache/lucene/queries/function/TestValueSources#testQueryWrapedFuncWrapedQuery().mjava","pathOld":"/dev/null","sourceNew":"  public void testQueryWrapedFuncWrapedQuery() throws Exception {\n    ValueSource vs = new QueryValueSource(new FunctionQuery(new ConstValueSource(2f)), 0f);\n    assertHits(new FunctionQuery(vs), new float[] { 2f, 2f });\n    assertAllExist(vs);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0a22eafe3f72a4c2945eaad9547e6c78816978f4","date":1413956657,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/queries/src/test/org/apache/lucene/queries/function/TestValueSources#testQueryWrapedFuncWrapedQuery().mjava","pathOld":"/dev/null","sourceNew":"  public void testQueryWrapedFuncWrapedQuery() throws Exception {\n    ValueSource vs = new QueryValueSource(new FunctionQuery(new ConstValueSource(2f)), 0f);\n    assertHits(new FunctionQuery(vs), new float[] { 2f, 2f });\n    assertAllExist(vs);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2ec20178021a8555c9e59c580e877af139a162aa","date":1584287445,"type":3,"author":"Michele Palmia","isMerge":false,"pathNew":"lucene/queries/src/test/org/apache/lucene/queries/function/TestValueSources#testQueryWrapedFuncWrapedQuery().mjava","pathOld":"lucene/queries/src/test/org/apache/lucene/queries/function/TestValueSources#testQueryWrapedFuncWrapedQuery().mjava","sourceNew":"  public void testQueryWrapedFuncWrapedQuery() throws Exception {\n    ValueSource vs = new QueryValueSource(new FunctionQuery(new ConstValueSource(2f)), 0f);\n    assertHits(new FunctionQuery(vs), new float[] { 2f, 2f });\n    assertAllExist(vs);\n\n    vs = new QueryValueSource(new FunctionRangeQuery(new IntFieldSource(\"int\"), Integer.MIN_VALUE, Integer.MAX_VALUE, true, true), 0f);\n    assertHits(new FunctionQuery(vs), new float[] { 35f, 54f });\n    assertAllExist(vs);\n  }\n\n","sourceOld":"  public void testQueryWrapedFuncWrapedQuery() throws Exception {\n    ValueSource vs = new QueryValueSource(new FunctionQuery(new ConstValueSource(2f)), 0f);\n    assertHits(new FunctionQuery(vs), new float[] { 2f, 2f });\n    assertAllExist(vs);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0a22eafe3f72a4c2945eaad9547e6c78816978f4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a701a7aab388afa1412a3dc23b4115c321f478c4"],"2ec20178021a8555c9e59c580e877af139a162aa":["a701a7aab388afa1412a3dc23b4115c321f478c4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a701a7aab388afa1412a3dc23b4115c321f478c4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2ec20178021a8555c9e59c580e877af139a162aa"]},"commit2Childs":{"0a22eafe3f72a4c2945eaad9547e6c78816978f4":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0a22eafe3f72a4c2945eaad9547e6c78816978f4","a701a7aab388afa1412a3dc23b4115c321f478c4"],"2ec20178021a8555c9e59c580e877af139a162aa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a701a7aab388afa1412a3dc23b4115c321f478c4":["0a22eafe3f72a4c2945eaad9547e6c78816978f4","2ec20178021a8555c9e59c580e877af139a162aa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["0a22eafe3f72a4c2945eaad9547e6c78816978f4","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}