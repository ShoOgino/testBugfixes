{"path":"lucene/src/java/org/apache/lucene/index/IndexWriter#segString(List[SegmentInfo]).mjava","commits":[{"id":"5270fb4f55a1b77663dda53cb8090c083f0a23b3","date":1305050821,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriter#segString(List[SegmentInfo]).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriter#segString(SegmentInfos).mjava","sourceNew":"  /** @lucene.internal */\n  public synchronized String segString(List<SegmentInfo> infos) throws IOException {\n    StringBuilder buffer = new StringBuilder();\n    final int count = infos.size();\n    for(int i = 0; i < count; i++) {\n      if (i > 0) {\n        buffer.append(' ');\n      }\n      buffer.append(segString(infos.get(i)));\n    }\n\n    return buffer.toString();\n  }\n\n","sourceOld":"  /** @lucene.internal */\n  public synchronized String segString(SegmentInfos infos) throws IOException {\n    StringBuilder buffer = new StringBuilder();\n    final int count = infos.size();\n    for(int i = 0; i < count; i++) {\n      if (i > 0) {\n        buffer.append(' ');\n      }\n      buffer.append(segString(infos.info(i)));\n    }\n\n    return buffer.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c700f8d0842d3e52bb2bdfbfdc046a137e836edb","date":1305285499,"type":1,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriter#segString(List[SegmentInfo]).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriter#segString(SegmentInfos).mjava","sourceNew":"  /** @lucene.internal */\n  public synchronized String segString(List<SegmentInfo> infos) throws IOException {\n    StringBuilder buffer = new StringBuilder();\n    final int count = infos.size();\n    for(int i = 0; i < count; i++) {\n      if (i > 0) {\n        buffer.append(' ');\n      }\n      buffer.append(segString(infos.get(i)));\n    }\n\n    return buffer.toString();\n  }\n\n","sourceOld":"  /** @lucene.internal */\n  public synchronized String segString(SegmentInfos infos) throws IOException {\n    StringBuilder buffer = new StringBuilder();\n    final int count = infos.size();\n    for(int i = 0; i < count; i++) {\n      if (i > 0) {\n        buffer.append(' ');\n      }\n      buffer.append(segString(infos.info(i)));\n    }\n\n    return buffer.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"786a4d25ca958a1f315a9d6a74f0441fdafcd522","date":1305734256,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriter#segString(List[SegmentInfo]).mjava","sourceNew":null,"sourceOld":"  /** @lucene.internal */\n  public synchronized String segString(List<SegmentInfo> infos) throws IOException {\n    StringBuilder buffer = new StringBuilder();\n    final int count = infos.size();\n    for(int i = 0; i < count; i++) {\n      if (i > 0) {\n        buffer.append(' ');\n      }\n      buffer.append(segString(infos.get(i)));\n    }\n\n    return buffer.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c3a8a449466c1ff7ce2274fe73dab487256964b4","date":1305735867,"type":4,"author":"Simon Willnauer","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriter#segString(List[SegmentInfo]).mjava","sourceNew":null,"sourceOld":"  /** @lucene.internal */\n  public synchronized String segString(List<SegmentInfo> infos) throws IOException {\n    StringBuilder buffer = new StringBuilder();\n    final int count = infos.size();\n    for(int i = 0; i < count; i++) {\n      if (i > 0) {\n        buffer.append(' ');\n      }\n      buffer.append(segString(infos.get(i)));\n    }\n\n    return buffer.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"786a4d25ca958a1f315a9d6a74f0441fdafcd522":["5270fb4f55a1b77663dda53cb8090c083f0a23b3"],"c3a8a449466c1ff7ce2274fe73dab487256964b4":["c700f8d0842d3e52bb2bdfbfdc046a137e836edb","786a4d25ca958a1f315a9d6a74f0441fdafcd522"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c700f8d0842d3e52bb2bdfbfdc046a137e836edb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5270fb4f55a1b77663dda53cb8090c083f0a23b3"],"5270fb4f55a1b77663dda53cb8090c083f0a23b3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["786a4d25ca958a1f315a9d6a74f0441fdafcd522"]},"commit2Childs":{"786a4d25ca958a1f315a9d6a74f0441fdafcd522":["c3a8a449466c1ff7ce2274fe73dab487256964b4","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c3a8a449466c1ff7ce2274fe73dab487256964b4":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c700f8d0842d3e52bb2bdfbfdc046a137e836edb","5270fb4f55a1b77663dda53cb8090c083f0a23b3"],"c700f8d0842d3e52bb2bdfbfdc046a137e836edb":["c3a8a449466c1ff7ce2274fe73dab487256964b4"],"5270fb4f55a1b77663dda53cb8090c083f0a23b3":["786a4d25ca958a1f315a9d6a74f0441fdafcd522","c700f8d0842d3e52bb2bdfbfdc046a137e836edb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c3a8a449466c1ff7ce2274fe73dab487256964b4","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}