{"path":"lucene/queries/src/java/org/apache/lucene/queries/function/valuesource/SumTotalTermFreqValueSource#createWeight(Map,IndexSearcher).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/function/valuesource/SumTotalTermFreqValueSource#createWeight(Map,IndexSearcher).mjava","pathOld":"modules/queries/src/java/org/apache/lucene/queries/function/valuesource/SumTotalTermFreqValueSource#createWeight(Map,IndexSearcher).mjava","sourceNew":"  @Override\n  public void createWeight(Map context, IndexSearcher searcher) throws IOException {\n    long sumTotalTermFreq = 0;\n    for (AtomicReaderContext readerContext : searcher.getTopReaderContext().leaves()) {\n      Fields fields = readerContext.reader().fields();\n      if (fields == null) continue;\n      Terms terms = fields.terms(indexedField);\n      if (terms == null) continue;\n      sumTotalTermFreq += terms.getSumTotalTermFreq();\n    }\n    final long ttf = Math.max(-1, sumTotalTermFreq);  // we may have added up -1s if not supported\n    context.put(this, new LongDocValues(this) {\n      @Override\n      public long longVal(int doc) {\n        return ttf;\n      }\n    });\n  }\n\n","sourceOld":"  @Override\n  public void createWeight(Map context, IndexSearcher searcher) throws IOException {\n    long sumTotalTermFreq = 0;\n    for (AtomicReaderContext readerContext : searcher.getTopReaderContext().leaves()) {\n      Fields fields = readerContext.reader().fields();\n      if (fields == null) continue;\n      Terms terms = fields.terms(indexedField);\n      if (terms == null) continue;\n      sumTotalTermFreq += terms.getSumTotalTermFreq();\n    }\n    final long ttf = Math.max(-1, sumTotalTermFreq);  // we may have added up -1s if not supported\n    context.put(this, new LongDocValues(this) {\n      @Override\n      public long longVal(int doc) {\n        return ttf;\n      }\n    });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0ceb5bb30e401cb218b31197b1a9aa47e77cda17","date":1336330521,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/function/valuesource/SumTotalTermFreqValueSource#createWeight(Map,IndexSearcher).mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/function/valuesource/SumTotalTermFreqValueSource#createWeight(Map,IndexSearcher).mjava","sourceNew":"  @Override\n  public void createWeight(Map context, IndexSearcher searcher) throws IOException {\n    long sumTotalTermFreq = 0;\n    for (AtomicReaderContext readerContext : searcher.getTopReaderContext().leaves()) {\n      Fields fields = readerContext.reader().fields();\n      if (fields == null) continue;\n      Terms terms = fields.terms(indexedField);\n      if (terms == null) continue;\n      long v = terms.getSumTotalTermFreq();\n      if (v == -1) {\n        sumTotalTermFreq = -1;\n        break;\n      } else {\n        sumTotalTermFreq += v;\n      }\n    }\n    final long ttf = sumTotalTermFreq;\n    context.put(this, new LongDocValues(this) {\n      @Override\n      public long longVal(int doc) {\n        return ttf;\n      }\n    });\n  }\n\n","sourceOld":"  @Override\n  public void createWeight(Map context, IndexSearcher searcher) throws IOException {\n    long sumTotalTermFreq = 0;\n    for (AtomicReaderContext readerContext : searcher.getTopReaderContext().leaves()) {\n      Fields fields = readerContext.reader().fields();\n      if (fields == null) continue;\n      Terms terms = fields.terms(indexedField);\n      if (terms == null) continue;\n      sumTotalTermFreq += terms.getSumTotalTermFreq();\n    }\n    final long ttf = Math.max(-1, sumTotalTermFreq);  // we may have added up -1s if not supported\n    context.put(this, new LongDocValues(this) {\n      @Override\n      public long longVal(int doc) {\n        return ttf;\n      }\n    });\n  }\n\n","bugFix":["c960367698164ae9ca0ccf62d27d93c9c24462b1"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c9fb5f46e264daf5ba3860defe623a89d202dd87","date":1411516315,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/function/valuesource/SumTotalTermFreqValueSource#createWeight(Map,IndexSearcher).mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/function/valuesource/SumTotalTermFreqValueSource#createWeight(Map,IndexSearcher).mjava","sourceNew":"  @Override\n  public void createWeight(Map context, IndexSearcher searcher) throws IOException {\n    long sumTotalTermFreq = 0;\n    for (LeafReaderContext readerContext : searcher.getTopReaderContext().leaves()) {\n      Fields fields = readerContext.reader().fields();\n      if (fields == null) continue;\n      Terms terms = fields.terms(indexedField);\n      if (terms == null) continue;\n      long v = terms.getSumTotalTermFreq();\n      if (v == -1) {\n        sumTotalTermFreq = -1;\n        break;\n      } else {\n        sumTotalTermFreq += v;\n      }\n    }\n    final long ttf = sumTotalTermFreq;\n    context.put(this, new LongDocValues(this) {\n      @Override\n      public long longVal(int doc) {\n        return ttf;\n      }\n    });\n  }\n\n","sourceOld":"  @Override\n  public void createWeight(Map context, IndexSearcher searcher) throws IOException {\n    long sumTotalTermFreq = 0;\n    for (AtomicReaderContext readerContext : searcher.getTopReaderContext().leaves()) {\n      Fields fields = readerContext.reader().fields();\n      if (fields == null) continue;\n      Terms terms = fields.terms(indexedField);\n      if (terms == null) continue;\n      long v = terms.getSumTotalTermFreq();\n      if (v == -1) {\n        sumTotalTermFreq = -1;\n        break;\n      } else {\n        sumTotalTermFreq += v;\n      }\n    }\n    final long ttf = sumTotalTermFreq;\n    context.put(this, new LongDocValues(this) {\n      @Override\n      public long longVal(int doc) {\n        return ttf;\n      }\n    });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"8028ab7a24273833d53d35eb160dba5b57283cf5","date":1416767720,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/function/valuesource/SumTotalTermFreqValueSource#createWeight(Map,IndexSearcher).mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/function/valuesource/SumTotalTermFreqValueSource#createWeight(Map,IndexSearcher).mjava","sourceNew":"  @Override\n  public void createWeight(Map context, IndexSearcher searcher) throws IOException {\n    long sumTotalTermFreq = 0;\n    for (LeafReaderContext readerContext : searcher.getTopReaderContext().leaves()) {\n      Terms terms = readerContext.reader().terms(indexedField);\n      if (terms == null) continue;\n      long v = terms.getSumTotalTermFreq();\n      if (v == -1) {\n        sumTotalTermFreq = -1;\n        break;\n      } else {\n        sumTotalTermFreq += v;\n      }\n    }\n    final long ttf = sumTotalTermFreq;\n    context.put(this, new LongDocValues(this) {\n      @Override\n      public long longVal(int doc) {\n        return ttf;\n      }\n    });\n  }\n\n","sourceOld":"  @Override\n  public void createWeight(Map context, IndexSearcher searcher) throws IOException {\n    long sumTotalTermFreq = 0;\n    for (LeafReaderContext readerContext : searcher.getTopReaderContext().leaves()) {\n      Fields fields = readerContext.reader().fields();\n      if (fields == null) continue;\n      Terms terms = fields.terms(indexedField);\n      if (terms == null) continue;\n      long v = terms.getSumTotalTermFreq();\n      if (v == -1) {\n        sumTotalTermFreq = -1;\n        break;\n      } else {\n        sumTotalTermFreq += v;\n      }\n    }\n    final long ttf = sumTotalTermFreq;\n    context.put(this, new LongDocValues(this) {\n      @Override\n      public long longVal(int doc) {\n        return ttf;\n      }\n    });\n  }\n\n","bugFix":["e3f8ac3877ad6d160de0fd3a6f7155b243dfbddf","c960367698164ae9ca0ccf62d27d93c9c24462b1"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"086ffe31d8fba0110227db122974163709ecc1b4","date":1509678141,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/function/valuesource/SumTotalTermFreqValueSource#createWeight(Map,IndexSearcher).mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/function/valuesource/SumTotalTermFreqValueSource#createWeight(Map,IndexSearcher).mjava","sourceNew":"  @Override\n  public void createWeight(Map context, IndexSearcher searcher) throws IOException {\n    long sumTotalTermFreq = 0;\n    for (LeafReaderContext readerContext : searcher.getTopReaderContext().leaves()) {\n      Terms terms = readerContext.reader().terms(indexedField);\n      if (terms == null) continue;\n      long v = terms.getSumTotalTermFreq();\n      assert v != -1;\n      sumTotalTermFreq += v;\n    }\n    final long ttf = sumTotalTermFreq;\n    context.put(this, new LongDocValues(this) {\n      @Override\n      public long longVal(int doc) {\n        return ttf;\n      }\n    });\n  }\n\n","sourceOld":"  @Override\n  public void createWeight(Map context, IndexSearcher searcher) throws IOException {\n    long sumTotalTermFreq = 0;\n    for (LeafReaderContext readerContext : searcher.getTopReaderContext().leaves()) {\n      Terms terms = readerContext.reader().terms(indexedField);\n      if (terms == null) continue;\n      long v = terms.getSumTotalTermFreq();\n      if (v == -1) {\n        sumTotalTermFreq = -1;\n        break;\n      } else {\n        sumTotalTermFreq += v;\n      }\n    }\n    final long ttf = sumTotalTermFreq;\n    context.put(this, new LongDocValues(this) {\n      @Override\n      public long longVal(int doc) {\n        return ttf;\n      }\n    });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d523b8189b211dd1630166aa77b8c88bb48b3fcc","date":1510144168,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/function/valuesource/SumTotalTermFreqValueSource#createWeight(Map,IndexSearcher).mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/function/valuesource/SumTotalTermFreqValueSource#createWeight(Map,IndexSearcher).mjava","sourceNew":"  @Override\n  public void createWeight(Map context, IndexSearcher searcher) throws IOException {\n    long sumTotalTermFreq = 0;\n    for (LeafReaderContext readerContext : searcher.getTopReaderContext().leaves()) {\n      Terms terms = readerContext.reader().terms(indexedField);\n      if (terms == null) continue;\n      long v = terms.getSumTotalTermFreq();\n      assert v != -1;\n      sumTotalTermFreq += v;\n    }\n    final long ttf = sumTotalTermFreq;\n    context.put(this, new LongDocValues(this) {\n      @Override\n      public long longVal(int doc) {\n        return ttf;\n      }\n    });\n  }\n\n","sourceOld":"  @Override\n  public void createWeight(Map context, IndexSearcher searcher) throws IOException {\n    long sumTotalTermFreq = 0;\n    for (LeafReaderContext readerContext : searcher.getTopReaderContext().leaves()) {\n      Terms terms = readerContext.reader().terms(indexedField);\n      if (terms == null) continue;\n      long v = terms.getSumTotalTermFreq();\n      if (v == -1) {\n        sumTotalTermFreq = -1;\n        break;\n      } else {\n        sumTotalTermFreq += v;\n      }\n    }\n    final long ttf = sumTotalTermFreq;\n    context.put(this, new LongDocValues(this) {\n      @Override\n      public long longVal(int doc) {\n        return ttf;\n      }\n    });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9","date":1574619880,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/function/valuesource/SumTotalTermFreqValueSource#createWeight(Map,IndexSearcher).mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/function/valuesource/SumTotalTermFreqValueSource#createWeight(Map,IndexSearcher).mjava","sourceNew":"  @SuppressWarnings({\"rawtypes\", \"unchecked\"})\n  @Override\n  public void createWeight(Map context, IndexSearcher searcher) throws IOException {\n    long sumTotalTermFreq = 0;\n    for (LeafReaderContext readerContext : searcher.getTopReaderContext().leaves()) {\n      Terms terms = readerContext.reader().terms(indexedField);\n      if (terms == null) continue;\n      long v = terms.getSumTotalTermFreq();\n      assert v != -1;\n      sumTotalTermFreq += v;\n    }\n    final long ttf = sumTotalTermFreq;\n    context.put(this, new LongDocValues(this) {\n      @Override\n      public long longVal(int doc) {\n        return ttf;\n      }\n    });\n  }\n\n","sourceOld":"  @Override\n  public void createWeight(Map context, IndexSearcher searcher) throws IOException {\n    long sumTotalTermFreq = 0;\n    for (LeafReaderContext readerContext : searcher.getTopReaderContext().leaves()) {\n      Terms terms = readerContext.reader().terms(indexedField);\n      if (terms == null) continue;\n      long v = terms.getSumTotalTermFreq();\n      assert v != -1;\n      sumTotalTermFreq += v;\n    }\n    final long ttf = sumTotalTermFreq;\n    context.put(this, new LongDocValues(this) {\n      @Override\n      public long longVal(int doc) {\n        return ttf;\n      }\n    });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb9c3baacabd473e8ecd6c4948aabacead49b88e","date":1574700980,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/function/valuesource/SumTotalTermFreqValueSource#createWeight(Map,IndexSearcher).mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/function/valuesource/SumTotalTermFreqValueSource#createWeight(Map,IndexSearcher).mjava","sourceNew":"  @Override\n  public void createWeight(Map context, IndexSearcher searcher) throws IOException {\n    long sumTotalTermFreq = 0;\n    for (LeafReaderContext readerContext : searcher.getTopReaderContext().leaves()) {\n      Terms terms = readerContext.reader().terms(indexedField);\n      if (terms == null) continue;\n      long v = terms.getSumTotalTermFreq();\n      assert v != -1;\n      sumTotalTermFreq += v;\n    }\n    final long ttf = sumTotalTermFreq;\n    context.put(this, new LongDocValues(this) {\n      @Override\n      public long longVal(int doc) {\n        return ttf;\n      }\n    });\n  }\n\n","sourceOld":"  @SuppressWarnings({\"rawtypes\", \"unchecked\"})\n  @Override\n  public void createWeight(Map context, IndexSearcher searcher) throws IOException {\n    long sumTotalTermFreq = 0;\n    for (LeafReaderContext readerContext : searcher.getTopReaderContext().leaves()) {\n      Terms terms = readerContext.reader().terms(indexedField);\n      if (terms == null) continue;\n      long v = terms.getSumTotalTermFreq();\n      assert v != -1;\n      sumTotalTermFreq += v;\n    }\n    final long ttf = sumTotalTermFreq;\n    context.put(this, new LongDocValues(this) {\n      @Override\n      public long longVal(int doc) {\n        return ttf;\n      }\n    });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f95c0e33e58652b2a4d8560c8297dbe86ff5b1f2","date":1591961131,"type":5,"author":"Michael Sokolov","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/function/valuesource/SumTotalTermFreqValueSource#createWeight(Map[Object,Object],IndexSearcher).mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/function/valuesource/SumTotalTermFreqValueSource#createWeight(Map,IndexSearcher).mjava","sourceNew":"  @Override\n  public void createWeight(Map<Object, Object> context, IndexSearcher searcher) throws IOException {\n    long sumTotalTermFreq = 0;\n    for (LeafReaderContext readerContext : searcher.getTopReaderContext().leaves()) {\n      Terms terms = readerContext.reader().terms(indexedField);\n      if (terms == null) continue;\n      long v = terms.getSumTotalTermFreq();\n      assert v != -1;\n      sumTotalTermFreq += v;\n    }\n    final long ttf = sumTotalTermFreq;\n    context.put(this, new LongDocValues(this) {\n      @Override\n      public long longVal(int doc) {\n        return ttf;\n      }\n    });\n  }\n\n","sourceOld":"  @Override\n  public void createWeight(Map context, IndexSearcher searcher) throws IOException {\n    long sumTotalTermFreq = 0;\n    for (LeafReaderContext readerContext : searcher.getTopReaderContext().leaves()) {\n      Terms terms = readerContext.reader().terms(indexedField);\n      if (terms == null) continue;\n      long v = terms.getSumTotalTermFreq();\n      assert v != -1;\n      sumTotalTermFreq += v;\n    }\n    final long ttf = sumTotalTermFreq;\n    context.put(this, new LongDocValues(this) {\n      @Override\n      public long longVal(int doc) {\n        return ttf;\n      }\n    });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"086ffe31d8fba0110227db122974163709ecc1b4":["8028ab7a24273833d53d35eb160dba5b57283cf5"],"a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9":["d523b8189b211dd1630166aa77b8c88bb48b3fcc"],"8028ab7a24273833d53d35eb160dba5b57283cf5":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"0ceb5bb30e401cb218b31197b1a9aa47e77cda17":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"d523b8189b211dd1630166aa77b8c88bb48b3fcc":["8028ab7a24273833d53d35eb160dba5b57283cf5","086ffe31d8fba0110227db122974163709ecc1b4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bb9c3baacabd473e8ecd6c4948aabacead49b88e":["a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9"],"f95c0e33e58652b2a4d8560c8297dbe86ff5b1f2":["bb9c3baacabd473e8ecd6c4948aabacead49b88e"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["0ceb5bb30e401cb218b31197b1a9aa47e77cda17"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f95c0e33e58652b2a4d8560c8297dbe86ff5b1f2"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["0ceb5bb30e401cb218b31197b1a9aa47e77cda17"],"086ffe31d8fba0110227db122974163709ecc1b4":["d523b8189b211dd1630166aa77b8c88bb48b3fcc"],"8028ab7a24273833d53d35eb160dba5b57283cf5":["086ffe31d8fba0110227db122974163709ecc1b4","d523b8189b211dd1630166aa77b8c88bb48b3fcc"],"a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9":["bb9c3baacabd473e8ecd6c4948aabacead49b88e"],"0ceb5bb30e401cb218b31197b1a9aa47e77cda17":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"d523b8189b211dd1630166aa77b8c88bb48b3fcc":["a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"bb9c3baacabd473e8ecd6c4948aabacead49b88e":["f95c0e33e58652b2a4d8560c8297dbe86ff5b1f2"],"f95c0e33e58652b2a4d8560c8297dbe86ff5b1f2":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["8028ab7a24273833d53d35eb160dba5b57283cf5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}