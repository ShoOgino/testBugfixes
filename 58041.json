{"path":"solr/contrib/dataimporthandler-extras/src/main/java/org/apache/solr/handler/dataimport/MailEntityProcessor#init(Context).mjava","commits":[{"id":"d20d5e40789b1c42f4f926e3174b271256c43657","date":1301641092,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"solr/contrib/dataimporthandler-extras/src/main/java/org/apache/solr/handler/dataimport/MailEntityProcessor#init(Context).mjava","pathOld":"solr/contrib/dataimporthandler/src/extras/main/java/org/apache/solr/handler/dataimport/MailEntityProcessor#init(Context).mjava","sourceNew":"  @Override\n  public void init(Context context) {\n    super.init(context);\n    // set attributes using  XXX getXXXFromContext(attribute, defualtValue);\n    // applies variable resolver and return default if value is not found or null\n    // REQUIRED : connection and folder info\n    user = getStringFromContext(\"user\", null);\n    password = getStringFromContext(\"password\", null);\n    host = getStringFromContext(\"host\", null);\n    protocol = getStringFromContext(\"protocol\", null);\n    folderNames = getStringFromContext(\"folders\", null);\n    // validate\n    if (host == null || protocol == null || user == null || password == null\n            || folderNames == null)\n      throw new DataImportHandlerException(DataImportHandlerException.SEVERE,\n              \"'user|password|protocol|host|folders' are required attributes\");\n\n    //OPTIONAL : have defaults and are optional\n    recurse = getBoolFromContext(\"recurse\", true);\n    String excludes = getStringFromContext(\"exclude\", \"\");\n    if (excludes != null && !excludes.trim().equals(\"\")) {\n      exclude = Arrays.asList(excludes.split(\",\"));\n    }\n    String includes = getStringFromContext(\"include\", \"\");\n    if (includes != null && !includes.trim().equals(\"\")) {\n      include = Arrays.asList(includes.split(\",\"));\n    }\n    batchSize = getIntFromContext(\"batchSize\", 20);\n    customFilter = getStringFromContext(\"customFilter\", \"\");\n    String s = getStringFromContext(\"fetchMailsSince\", \"\");\n    if (s != null)\n      try {\n        fetchMailsSince = new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\").parse(s);\n      } catch (ParseException e) {\n        throw new DataImportHandlerException(DataImportHandlerException.SEVERE, \"Invalid value for fetchMailSince: \" + s, e);\n      }\n\n    fetchSize = getIntFromContext(\"fetchSize\", 32 * 1024);\n    cTimeout = getIntFromContext(\"connectTimeout\", 30 * 1000);\n    rTimeout = getIntFromContext(\"readTimeout\", 60 * 1000);\n    processAttachment = getBoolFromContext(\"processAttachement\", true);\n\n    logConfig();\n  }\n\n","sourceOld":"  @Override\n  public void init(Context context) {\n    super.init(context);\n    // set attributes using  XXX getXXXFromContext(attribute, defualtValue);\n    // applies variable resolver and return default if value is not found or null\n    // REQUIRED : connection and folder info\n    user = getStringFromContext(\"user\", null);\n    password = getStringFromContext(\"password\", null);\n    host = getStringFromContext(\"host\", null);\n    protocol = getStringFromContext(\"protocol\", null);\n    folderNames = getStringFromContext(\"folders\", null);\n    // validate\n    if (host == null || protocol == null || user == null || password == null\n            || folderNames == null)\n      throw new DataImportHandlerException(DataImportHandlerException.SEVERE,\n              \"'user|password|protocol|host|folders' are required attributes\");\n\n    //OPTIONAL : have defaults and are optional\n    recurse = getBoolFromContext(\"recurse\", true);\n    String excludes = getStringFromContext(\"exclude\", \"\");\n    if (excludes != null && !excludes.trim().equals(\"\")) {\n      exclude = Arrays.asList(excludes.split(\",\"));\n    }\n    String includes = getStringFromContext(\"include\", \"\");\n    if (includes != null && !includes.trim().equals(\"\")) {\n      include = Arrays.asList(includes.split(\",\"));\n    }\n    batchSize = getIntFromContext(\"batchSize\", 20);\n    customFilter = getStringFromContext(\"customFilter\", \"\");\n    String s = getStringFromContext(\"fetchMailsSince\", \"\");\n    if (s != null)\n      try {\n        fetchMailsSince = new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\").parse(s);\n      } catch (ParseException e) {\n        throw new DataImportHandlerException(DataImportHandlerException.SEVERE, \"Invalid value for fetchMailSince: \" + s, e);\n      }\n\n    fetchSize = getIntFromContext(\"fetchSize\", 32 * 1024);\n    cTimeout = getIntFromContext(\"connectTimeout\", 30 * 1000);\n    rTimeout = getIntFromContext(\"readTimeout\", 60 * 1000);\n    processAttachment = getBoolFromContext(\"processAttachement\", true);\n\n    logConfig();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/dataimporthandler-extras/src/java/org/apache/solr/handler/dataimport/MailEntityProcessor#init(Context).mjava","pathOld":"solr/contrib/dataimporthandler-extras/src/main/java/org/apache/solr/handler/dataimport/MailEntityProcessor#init(Context).mjava","sourceNew":"  @Override\n  public void init(Context context) {\n    super.init(context);\n    // set attributes using  XXX getXXXFromContext(attribute, defualtValue);\n    // applies variable resolver and return default if value is not found or null\n    // REQUIRED : connection and folder info\n    user = getStringFromContext(\"user\", null);\n    password = getStringFromContext(\"password\", null);\n    host = getStringFromContext(\"host\", null);\n    protocol = getStringFromContext(\"protocol\", null);\n    folderNames = getStringFromContext(\"folders\", null);\n    // validate\n    if (host == null || protocol == null || user == null || password == null\n            || folderNames == null)\n      throw new DataImportHandlerException(DataImportHandlerException.SEVERE,\n              \"'user|password|protocol|host|folders' are required attributes\");\n\n    //OPTIONAL : have defaults and are optional\n    recurse = getBoolFromContext(\"recurse\", true);\n    String excludes = getStringFromContext(\"exclude\", \"\");\n    if (excludes != null && !excludes.trim().equals(\"\")) {\n      exclude = Arrays.asList(excludes.split(\",\"));\n    }\n    String includes = getStringFromContext(\"include\", \"\");\n    if (includes != null && !includes.trim().equals(\"\")) {\n      include = Arrays.asList(includes.split(\",\"));\n    }\n    batchSize = getIntFromContext(\"batchSize\", 20);\n    customFilter = getStringFromContext(\"customFilter\", \"\");\n    String s = getStringFromContext(\"fetchMailsSince\", \"\");\n    if (s != null)\n      try {\n        fetchMailsSince = new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\").parse(s);\n      } catch (ParseException e) {\n        throw new DataImportHandlerException(DataImportHandlerException.SEVERE, \"Invalid value for fetchMailSince: \" + s, e);\n      }\n\n    fetchSize = getIntFromContext(\"fetchSize\", 32 * 1024);\n    cTimeout = getIntFromContext(\"connectTimeout\", 30 * 1000);\n    rTimeout = getIntFromContext(\"readTimeout\", 60 * 1000);\n    processAttachment = getBoolFromContext(\"processAttachement\", true);\n\n    logConfig();\n  }\n\n","sourceOld":"  @Override\n  public void init(Context context) {\n    super.init(context);\n    // set attributes using  XXX getXXXFromContext(attribute, defualtValue);\n    // applies variable resolver and return default if value is not found or null\n    // REQUIRED : connection and folder info\n    user = getStringFromContext(\"user\", null);\n    password = getStringFromContext(\"password\", null);\n    host = getStringFromContext(\"host\", null);\n    protocol = getStringFromContext(\"protocol\", null);\n    folderNames = getStringFromContext(\"folders\", null);\n    // validate\n    if (host == null || protocol == null || user == null || password == null\n            || folderNames == null)\n      throw new DataImportHandlerException(DataImportHandlerException.SEVERE,\n              \"'user|password|protocol|host|folders' are required attributes\");\n\n    //OPTIONAL : have defaults and are optional\n    recurse = getBoolFromContext(\"recurse\", true);\n    String excludes = getStringFromContext(\"exclude\", \"\");\n    if (excludes != null && !excludes.trim().equals(\"\")) {\n      exclude = Arrays.asList(excludes.split(\",\"));\n    }\n    String includes = getStringFromContext(\"include\", \"\");\n    if (includes != null && !includes.trim().equals(\"\")) {\n      include = Arrays.asList(includes.split(\",\"));\n    }\n    batchSize = getIntFromContext(\"batchSize\", 20);\n    customFilter = getStringFromContext(\"customFilter\", \"\");\n    String s = getStringFromContext(\"fetchMailsSince\", \"\");\n    if (s != null)\n      try {\n        fetchMailsSince = new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\").parse(s);\n      } catch (ParseException e) {\n        throw new DataImportHandlerException(DataImportHandlerException.SEVERE, \"Invalid value for fetchMailSince: \" + s, e);\n      }\n\n    fetchSize = getIntFromContext(\"fetchSize\", 32 * 1024);\n    cTimeout = getIntFromContext(\"connectTimeout\", 30 * 1000);\n    rTimeout = getIntFromContext(\"readTimeout\", 60 * 1000);\n    processAttachment = getBoolFromContext(\"processAttachement\", true);\n\n    logConfig();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["d20d5e40789b1c42f4f926e3174b271256c43657","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d20d5e40789b1c42f4f926e3174b271256c43657":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","d20d5e40789b1c42f4f926e3174b271256c43657","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d20d5e40789b1c42f4f926e3174b271256c43657":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}