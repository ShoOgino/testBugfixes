{"path":"src/java/org/apache/solr/analysis/CommonGramsFilterFactory#inform(ResourceLoader).mjava","commits":[{"id":"8f8f5dd9e0322b913c47628300753239d0d5ef7e","date":1253656557,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/analysis/CommonGramsFilterFactory#inform(ResourceLoader).mjava","pathOld":"/dev/null","sourceNew":"  public void inform(ResourceLoader loader) {\n    String commonWordFiles = args.get(\"words\");\n    ignoreCase = getBoolean(\"ignoreCase\", false);\n    enablePositionIncrements = getBoolean(\"enablePositionIncrements\", false);\n\n    if (commonWordFiles != null) {\n      try {\n        List<String> files = StrUtils.splitFileNames(commonWordFiles);\n          if (commonWords == null && files.size() > 0){\n            //default stopwords list has 35 or so words, but maybe don't make it that big to start\n            commonWords = new CharArraySet(files.size() * 10, ignoreCase);\n          }\n          for (String file : files) {\n            List<String> wlist = loader.getLines(file.trim());\n            //TODO: once StopFilter.makeStopSet(List) method is available, switch to using that so we can avoid a toArray() call\n            commonWords.addAll(CommonGramsFilter.makeCommonSet((String[])wlist.toArray(new String[0]), ignoreCase));\n          }\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    } else {\n      commonWords = (CharArraySet) CommonGramsFilter.makeCommonSet(StopAnalyzer.ENGLISH_STOP_WORDS, ignoreCase);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9ad0c49a80cc385102a5ab0acd7584d63dbcf1c7","date":1253670740,"type":3,"author":"Koji Sekiguchi","isMerge":false,"pathNew":"src/java/org/apache/solr/analysis/CommonGramsFilterFactory#inform(ResourceLoader).mjava","pathOld":"src/java/org/apache/solr/analysis/CommonGramsFilterFactory#inform(ResourceLoader).mjava","sourceNew":"  public void inform(ResourceLoader loader) {\n    String commonWordFiles = args.get(\"words\");\n    ignoreCase = getBoolean(\"ignoreCase\", false);\n\n    if (commonWordFiles != null) {\n      try {\n        List<String> files = StrUtils.splitFileNames(commonWordFiles);\n          if (commonWords == null && files.size() > 0){\n            //default stopwords list has 35 or so words, but maybe don't make it that big to start\n            commonWords = new CharArraySet(files.size() * 10, ignoreCase);\n          }\n          for (String file : files) {\n            List<String> wlist = loader.getLines(file.trim());\n            //TODO: once StopFilter.makeStopSet(List) method is available, switch to using that so we can avoid a toArray() call\n            commonWords.addAll(CommonGramsFilter.makeCommonSet((String[])wlist.toArray(new String[0]), ignoreCase));\n          }\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    } else {\n      commonWords = (CharArraySet) CommonGramsFilter.makeCommonSet(StopAnalyzer.ENGLISH_STOP_WORDS, ignoreCase);\n    }\n  }\n\n","sourceOld":"  public void inform(ResourceLoader loader) {\n    String commonWordFiles = args.get(\"words\");\n    ignoreCase = getBoolean(\"ignoreCase\", false);\n    enablePositionIncrements = getBoolean(\"enablePositionIncrements\", false);\n\n    if (commonWordFiles != null) {\n      try {\n        List<String> files = StrUtils.splitFileNames(commonWordFiles);\n          if (commonWords == null && files.size() > 0){\n            //default stopwords list has 35 or so words, but maybe don't make it that big to start\n            commonWords = new CharArraySet(files.size() * 10, ignoreCase);\n          }\n          for (String file : files) {\n            List<String> wlist = loader.getLines(file.trim());\n            //TODO: once StopFilter.makeStopSet(List) method is available, switch to using that so we can avoid a toArray() call\n            commonWords.addAll(CommonGramsFilter.makeCommonSet((String[])wlist.toArray(new String[0]), ignoreCase));\n          }\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    } else {\n      commonWords = (CharArraySet) CommonGramsFilter.makeCommonSet(StopAnalyzer.ENGLISH_STOP_WORDS, ignoreCase);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ef28ac95f5f85bbf872801277448c0924b0a6827","date":1268600312,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"src/java/org/apache/solr/analysis/CommonGramsFilterFactory#inform(ResourceLoader).mjava","pathOld":"src/java/org/apache/solr/analysis/CommonGramsFilterFactory#inform(ResourceLoader).mjava","sourceNew":"  public void inform(ResourceLoader loader) {\n    String commonWordFiles = args.get(\"words\");\n    ignoreCase = getBoolean(\"ignoreCase\", false);\n\n    if (commonWordFiles != null) {\n      try {\n        List<String> files = StrUtils.splitFileNames(commonWordFiles);\n          if (commonWords == null && files.size() > 0){\n            //default stopwords list has 35 or so words, but maybe don't make it that big to start\n            commonWords = new CharArraySet(files.size() * 10, ignoreCase);\n          }\n          for (String file : files) {\n            List<String> wlist = loader.getLines(file.trim());\n            //TODO: once StopFilter.makeStopSet(List) method is available, switch to using that so we can avoid a toArray() call\n            commonWords.addAll(CommonGramsFilter.makeCommonSet((String[])wlist.toArray(new String[0]), ignoreCase));\n          }\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    } else {\n      commonWords = (CharArraySet) StopAnalyzer.ENGLISH_STOP_WORDS_SET;\n    }\n  }\n\n","sourceOld":"  public void inform(ResourceLoader loader) {\n    String commonWordFiles = args.get(\"words\");\n    ignoreCase = getBoolean(\"ignoreCase\", false);\n\n    if (commonWordFiles != null) {\n      try {\n        List<String> files = StrUtils.splitFileNames(commonWordFiles);\n          if (commonWords == null && files.size() > 0){\n            //default stopwords list has 35 or so words, but maybe don't make it that big to start\n            commonWords = new CharArraySet(files.size() * 10, ignoreCase);\n          }\n          for (String file : files) {\n            List<String> wlist = loader.getLines(file.trim());\n            //TODO: once StopFilter.makeStopSet(List) method is available, switch to using that so we can avoid a toArray() call\n            commonWords.addAll(CommonGramsFilter.makeCommonSet((String[])wlist.toArray(new String[0]), ignoreCase));\n          }\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    } else {\n      commonWords = (CharArraySet) CommonGramsFilter.makeCommonSet(StopAnalyzer.ENGLISH_STOP_WORDS, ignoreCase);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/analysis/CommonGramsFilterFactory#inform(ResourceLoader).mjava","pathOld":"src/java/org/apache/solr/analysis/CommonGramsFilterFactory#inform(ResourceLoader).mjava","sourceNew":"  public void inform(ResourceLoader loader) {\n    String commonWordFiles = args.get(\"words\");\n    ignoreCase = getBoolean(\"ignoreCase\", false);\n\n    if (commonWordFiles != null) {\n      try {\n        List<String> files = StrUtils.splitFileNames(commonWordFiles);\n          if (commonWords == null && files.size() > 0){\n            //default stopwords list has 35 or so words, but maybe don't make it that big to start\n            commonWords = new CharArraySet(files.size() * 10, ignoreCase);\n          }\n          for (String file : files) {\n            List<String> wlist = loader.getLines(file.trim());\n            //TODO: once StopFilter.makeStopSet(List) method is available, switch to using that so we can avoid a toArray() call\n            commonWords.addAll(CommonGramsFilter.makeCommonSet((String[])wlist.toArray(new String[0]), ignoreCase));\n          }\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    } else {\n      commonWords = (CharArraySet) StopAnalyzer.ENGLISH_STOP_WORDS_SET;\n    }\n  }\n\n","sourceOld":"  public void inform(ResourceLoader loader) {\n    String commonWordFiles = args.get(\"words\");\n    ignoreCase = getBoolean(\"ignoreCase\", false);\n\n    if (commonWordFiles != null) {\n      try {\n        List<String> files = StrUtils.splitFileNames(commonWordFiles);\n          if (commonWords == null && files.size() > 0){\n            //default stopwords list has 35 or so words, but maybe don't make it that big to start\n            commonWords = new CharArraySet(files.size() * 10, ignoreCase);\n          }\n          for (String file : files) {\n            List<String> wlist = loader.getLines(file.trim());\n            //TODO: once StopFilter.makeStopSet(List) method is available, switch to using that so we can avoid a toArray() call\n            commonWords.addAll(CommonGramsFilter.makeCommonSet((String[])wlist.toArray(new String[0]), ignoreCase));\n          }\n      } catch (IOException e) {\n        throw new RuntimeException(e);\n      }\n    } else {\n      commonWords = (CharArraySet) StopAnalyzer.ENGLISH_STOP_WORDS_SET;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9ad0c49a80cc385102a5ab0acd7584d63dbcf1c7":["8f8f5dd9e0322b913c47628300753239d0d5ef7e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ef28ac95f5f85bbf872801277448c0924b0a6827":["9ad0c49a80cc385102a5ab0acd7584d63dbcf1c7"],"ad94625fb8d088209f46650c8097196fec67f00c":["ef28ac95f5f85bbf872801277448c0924b0a6827"],"8f8f5dd9e0322b913c47628300753239d0d5ef7e":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"9ad0c49a80cc385102a5ab0acd7584d63dbcf1c7":["ef28ac95f5f85bbf872801277448c0924b0a6827"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["8f8f5dd9e0322b913c47628300753239d0d5ef7e"],"ef28ac95f5f85bbf872801277448c0924b0a6827":["ad94625fb8d088209f46650c8097196fec67f00c"],"8f8f5dd9e0322b913c47628300753239d0d5ef7e":["9ad0c49a80cc385102a5ab0acd7584d63dbcf1c7"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}