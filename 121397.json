{"path":"lucene/core/src/java/org/apache/lucene/search/TopDocs.ShardRef#getShardIndex(ScoreDoc).mjava","commits":[{"id":"500a89755c0c3953ca1886b5abb653b8cef8e299","date":1487933004,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/TopDocs.ShardRef#getShardIndex(ScoreDoc).mjava","pathOld":"/dev/null","sourceNew":"    int getShardIndex(ScoreDoc scoreDoc) {\n      if (useScoreDocIndex) {\n        assert scoreDoc.shardIndex != -1 : \"scoreDoc shardIndex must be predefined set but wasn't\";\n        return scoreDoc.shardIndex;\n      } else {\n        assert scoreDoc.shardIndex == -1 : \"scoreDoc shardIndex must be undefined but wasn't\";\n        return shardIndex;\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9a5b816df64f2b489d1e711be80f9416f9862c1b","date":1487973679,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/TopDocs.ShardRef#getShardIndex(ScoreDoc).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/TopDocs.ShardRef#getShardIndex(ScoreDoc).mjava","sourceNew":"    int getShardIndex(ScoreDoc scoreDoc) {\n      if (useScoreDocIndex) {\n        if (scoreDoc.shardIndex == -1) {\n          throw new IllegalArgumentException(\"setShardIndex is false but TopDocs[\" + shardIndex + \"].scoreDocs[\" + hitIndex + \"] is not set\");\n        }\n        return scoreDoc.shardIndex;\n      } else {\n        // NOTE: we don't assert that shardIndex is -1 here, because caller could in fact have set it but asked us to ignore it now\n        return shardIndex;\n      }\n    }\n\n","sourceOld":"    int getShardIndex(ScoreDoc scoreDoc) {\n      if (useScoreDocIndex) {\n        assert scoreDoc.shardIndex != -1 : \"scoreDoc shardIndex must be predefined set but wasn't\";\n        return scoreDoc.shardIndex;\n      } else {\n        assert scoreDoc.shardIndex == -1 : \"scoreDoc shardIndex must be undefined but wasn't\";\n        return shardIndex;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"36510a8e3c1ec60d366b45f8f716e9dc47589661","date":1561989412,"type":4,"author":"Atri Sharma","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/search/TopDocs.ShardRef#getShardIndex(ScoreDoc).mjava","sourceNew":null,"sourceOld":"    int getShardIndex(ScoreDoc scoreDoc) {\n      if (useScoreDocIndex) {\n        if (scoreDoc.shardIndex == -1) {\n          throw new IllegalArgumentException(\"setShardIndex is false but TopDocs[\" + shardIndex + \"].scoreDocs[\" + hitIndex + \"] is not set\");\n        }\n        return scoreDoc.shardIndex;\n      } else {\n        // NOTE: we don't assert that shardIndex is -1 here, because caller could in fact have set it but asked us to ignore it now\n        return shardIndex;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5f4f6b0fb6f08ac48f438f03002a283a63cb9992","date":1561992803,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/TopDocs.ShardRef#getShardIndex(ScoreDoc).mjava","pathOld":"/dev/null","sourceNew":"    int getShardIndex(ScoreDoc scoreDoc) {\n      if (useScoreDocIndex) {\n        if (scoreDoc.shardIndex == -1) {\n          throw new IllegalArgumentException(\"setShardIndex is false but TopDocs[\" + shardIndex + \"].scoreDocs[\" + hitIndex + \"] is not set\");\n        }\n        return scoreDoc.shardIndex;\n      } else {\n        // NOTE: we don't assert that shardIndex is -1 here, because caller could in fact have set it but asked us to ignore it now\n        return shardIndex;\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fccd4a691aac1aff06ab8110d8693514a34160c3","date":1562092518,"type":4,"author":"Atri Sharma","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/search/TopDocs.ShardRef#getShardIndex(ScoreDoc).mjava","sourceNew":null,"sourceOld":"    int getShardIndex(ScoreDoc scoreDoc) {\n      if (useScoreDocIndex) {\n        if (scoreDoc.shardIndex == -1) {\n          throw new IllegalArgumentException(\"setShardIndex is false but TopDocs[\" + shardIndex + \"].scoreDocs[\" + hitIndex + \"] is not set\");\n        }\n        return scoreDoc.shardIndex;\n      } else {\n        // NOTE: we don't assert that shardIndex is -1 here, because caller could in fact have set it but asked us to ignore it now\n        return shardIndex;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"36510a8e3c1ec60d366b45f8f716e9dc47589661":["9a5b816df64f2b489d1e711be80f9416f9862c1b"],"9a5b816df64f2b489d1e711be80f9416f9862c1b":["500a89755c0c3953ca1886b5abb653b8cef8e299"],"fccd4a691aac1aff06ab8110d8693514a34160c3":["5f4f6b0fb6f08ac48f438f03002a283a63cb9992"],"500a89755c0c3953ca1886b5abb653b8cef8e299":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["fccd4a691aac1aff06ab8110d8693514a34160c3"],"5f4f6b0fb6f08ac48f438f03002a283a63cb9992":["36510a8e3c1ec60d366b45f8f716e9dc47589661"]},"commit2Childs":{"36510a8e3c1ec60d366b45f8f716e9dc47589661":["5f4f6b0fb6f08ac48f438f03002a283a63cb9992"],"9a5b816df64f2b489d1e711be80f9416f9862c1b":["36510a8e3c1ec60d366b45f8f716e9dc47589661"],"500a89755c0c3953ca1886b5abb653b8cef8e299":["9a5b816df64f2b489d1e711be80f9416f9862c1b"],"fccd4a691aac1aff06ab8110d8693514a34160c3":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["500a89755c0c3953ca1886b5abb653b8cef8e299"],"5f4f6b0fb6f08ac48f438f03002a283a63cb9992":["fccd4a691aac1aff06ab8110d8693514a34160c3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}