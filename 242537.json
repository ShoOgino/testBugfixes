{"path":"solr/core/src/test/org/apache/solr/handler/admin/LogLevelHandlerTest#testLogLevelHandlerOutput().mjava","commits":[{"id":"43aba035b2a37ad571a7b19496d3108f44e0b97d","date":1329961988,"type":0,"author":"Ryan McKinley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/LogLevelHandlerTest#testLogLevelHandlerOutput().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testLogLevelHandlerOutput() throws Exception {\n    assertQ(\"Show Log Levels OK\",\n            req(CommonParams.QT,\"/admin/loglevel\")\n            ,\"//arr[@name='loggers']/lst/str[.='global']/../str[@name='level'][.='INFO']\"\n            ,\"//arr[@name='loggers']/lst/str[.='org.apache']/../null[@name='level']\"\n            );\n\n    assertQ(\"Set and remove a level\",\n            req(CommonParams.QT,\"/admin/loglevel\",  \n                \"set\", \"org.xxx.yyy.abc:null\",\n                \"set\", \"org.xxx.yyy.zzz:FINEST\")\n            ,\"//arr[@name='loggers']/lst/str[.='org.xxx.yyy.zzz']/../str[@name='level'][.='FINEST']\"\n            );\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b667dc740d5af3ba896ede5e9fdd2c9e1704a78d","date":1329969331,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/LogLevelHandlerTest#testLogLevelHandlerOutput().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/admin/LogLevelHandlerTest#testLogLevelHandlerOutput().mjava","sourceNew":"  @Test\n  public void testLogLevelHandlerOutput() throws Exception {\n    Logger log = Logger.getLogger(\"org.apache.solr.SolrTestCaseJ4\");\n    LogLevelHandler.LoggerWrapperJUL wrap = new LogLevelHandler.LoggerWrapperJUL(log.getName(), log);\n    \n    assertQ(\"Show Log Levels OK\",\n            req(CommonParams.QT,\"/admin/loglevel\")\n            ,\"//arr[@name='loggers']/lst/str[.='\"+wrap.getName()+\"']/../str[@name='level'][.='\"+wrap.getLevel()+\"']\"\n            ,\"//arr[@name='loggers']/lst/str[.='org.apache']/../null[@name='level']\"\n            );\n\n    assertQ(\"Set and remove a level\",\n            req(CommonParams.QT,\"/admin/loglevel\",  \n                \"set\", \"org.xxx.yyy.abc:null\",\n                \"set\", \"org.xxx.yyy.zzz:FINEST\")\n            ,\"//arr[@name='loggers']/lst/str[.='org.xxx.yyy.zzz']/../str[@name='level'][.='FINEST']\"\n            );\n  }\n\n","sourceOld":"  @Test\n  public void testLogLevelHandlerOutput() throws Exception {\n    assertQ(\"Show Log Levels OK\",\n            req(CommonParams.QT,\"/admin/loglevel\")\n            ,\"//arr[@name='loggers']/lst/str[.='global']/../str[@name='level'][.='INFO']\"\n            ,\"//arr[@name='loggers']/lst/str[.='org.apache']/../null[@name='level']\"\n            );\n\n    assertQ(\"Set and remove a level\",\n            req(CommonParams.QT,\"/admin/loglevel\",  \n                \"set\", \"org.xxx.yyy.abc:null\",\n                \"set\", \"org.xxx.yyy.zzz:FINEST\")\n            ,\"//arr[@name='loggers']/lst/str[.='org.xxx.yyy.zzz']/../str[@name='level'][.='FINEST']\"\n            );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","date":1331075828,"type":0,"author":"Ryan McKinley","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/LogLevelHandlerTest#testLogLevelHandlerOutput().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testLogLevelHandlerOutput() throws Exception {\n    Logger log = Logger.getLogger(\"org.apache.solr.SolrTestCaseJ4\");\n    LogLevelHandler.LoggerWrapperJUL wrap = new LogLevelHandler.LoggerWrapperJUL(log.getName(), log);\n    \n    assertQ(\"Show Log Levels OK\",\n            req(CommonParams.QT,\"/admin/loglevel\")\n            ,\"//arr[@name='loggers']/lst/str[.='\"+wrap.getName()+\"']/../str[@name='level'][.='\"+wrap.getLevel()+\"']\"\n            ,\"//arr[@name='loggers']/lst/str[.='org.apache']/../null[@name='level']\"\n            );\n\n    assertQ(\"Set and remove a level\",\n            req(CommonParams.QT,\"/admin/loglevel\",  \n                \"set\", \"org.xxx.yyy.abc:null\",\n                \"set\", \"org.xxx.yyy.zzz:FINEST\")\n            ,\"//arr[@name='loggers']/lst/str[.='org.xxx.yyy.zzz']/../str[@name='level'][.='FINEST']\"\n            );\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"829761a123d59d7a3c39e5f13fbc03de63f55ce5","date":1334686329,"type":5,"author":"Ryan McKinley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/admin/LoggingHandlerTest#testLogLevelHandlerOutput().mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/admin/LogLevelHandlerTest#testLogLevelHandlerOutput().mjava","sourceNew":"  @Test\n  public void testLogLevelHandlerOutput() throws Exception {\n    Logger tst = Logger.getLogger(\"org.apache.solr.SolrTestCaseJ4\");\n    JulInfo wrap = new JulInfo(tst.getName(), tst);\n    \n    assertQ(\"Show Log Levels OK\",\n            req(CommonParams.QT,\"/admin/logging\")\n            ,\"//arr[@name='loggers']/lst/str[.='\"+wrap.getName()+\"']/../str[@name='level'][.='\"+wrap.getLevel()+\"']\"\n            ,\"//arr[@name='loggers']/lst/str[.='org.apache']/../null[@name='level']\"\n            );\n\n    assertQ(\"Set and remove a level\",\n            req(CommonParams.QT,\"/admin/logging\",  \n                \"set\", \"org.xxx.yyy.abc:null\",\n                \"set\", \"org.xxx.yyy.zzz:FINEST\")\n            ,\"//arr[@name='loggers']/lst/str[.='org.xxx.yyy.zzz']/../str[@name='level'][.='FINEST']\"\n            );\n  }\n\n","sourceOld":"  @Test\n  public void testLogLevelHandlerOutput() throws Exception {\n    Logger log = Logger.getLogger(\"org.apache.solr.SolrTestCaseJ4\");\n    LogLevelHandler.LoggerWrapperJUL wrap = new LogLevelHandler.LoggerWrapperJUL(log.getName(), log);\n    \n    assertQ(\"Show Log Levels OK\",\n            req(CommonParams.QT,\"/admin/loglevel\")\n            ,\"//arr[@name='loggers']/lst/str[.='\"+wrap.getName()+\"']/../str[@name='level'][.='\"+wrap.getLevel()+\"']\"\n            ,\"//arr[@name='loggers']/lst/str[.='org.apache']/../null[@name='level']\"\n            );\n\n    assertQ(\"Set and remove a level\",\n            req(CommonParams.QT,\"/admin/loglevel\",  \n                \"set\", \"org.xxx.yyy.abc:null\",\n                \"set\", \"org.xxx.yyy.zzz:FINEST\")\n            ,\"//arr[@name='loggers']/lst/str[.='org.xxx.yyy.zzz']/../str[@name='level'][.='FINEST']\"\n            );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"43aba035b2a37ad571a7b19496d3108f44e0b97d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","b667dc740d5af3ba896ede5e9fdd2c9e1704a78d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"829761a123d59d7a3c39e5f13fbc03de63f55ce5":["b667dc740d5af3ba896ede5e9fdd2c9e1704a78d"],"b667dc740d5af3ba896ede5e9fdd2c9e1704a78d":["43aba035b2a37ad571a7b19496d3108f44e0b97d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["829761a123d59d7a3c39e5f13fbc03de63f55ce5"]},"commit2Childs":{"43aba035b2a37ad571a7b19496d3108f44e0b97d":["b667dc740d5af3ba896ede5e9fdd2c9e1704a78d"],"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["43aba035b2a37ad571a7b19496d3108f44e0b97d","9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab"],"829761a123d59d7a3c39e5f13fbc03de63f55ce5":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b667dc740d5af3ba896ede5e9fdd2c9e1704a78d":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","829761a123d59d7a3c39e5f13fbc03de63f55ce5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}