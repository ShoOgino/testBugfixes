{"path":"contrib/gdata-server/src/gom/test/org/apache/lucene/gdata/gom/core/GOMPersonImplTest#testParseAtom().mjava","commits":[{"id":"ebe0cf7fd7142a4f158b89ac046e386f7cf8a212","date":1166013594,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/gdata-server/src/gom/test/org/apache/lucene/gdata/gom/core/GOMPersonImplTest#testParseAtom().mjava","pathOld":"/dev/null","sourceNew":"\tpublic void testParseAtom() {\n\t\tGOMPersonImpl impl = new GOMPersonImpl();\n\t\tQName name = new QName(GOMNamespace.ATOM_NS_URI, \"name\");\n\t\tAtomParser childParser = impl.getChildParser(name);\n\t\tString nameValue = \"simonw\";\n\t\t{\n\t\t\tassertTrue(childParser instanceof GOMPersonImpl.NameParser);\n\n\t\t\tchildParser.processElementValue(nameValue);\n\t\t\tchildParser.processEndElement();\n\t\t\tassertEquals(impl.getName(), nameValue);\n\t\t\ttry {\n\t\t\t\tchildParser.processElementValue(nameValue);\n\t\t\t\tchildParser.processEndElement();\n\t\t\t\tfail(\"duplicated element\");\n\n\t\t\t} catch (GDataParseException e) {\n\t\t\t\t// \n\n\t\t\t}\n\t\t}\n\t\t{\n\t\t\tname = new QName(GOMNamespace.ATOM_NS_URI, \"uri\");\n\t\t\tchildParser = impl.getChildParser(name);\n\t\t\tassertTrue(childParser instanceof GOMPersonImpl.UriParser);\n\n\t\t\tchildParser.processElementValue(nameValue);\n\t\t\tchildParser.processEndElement();\n\t\t\tassertEquals(impl.getUri(), nameValue);\n\n\t\t\ttry {\n\t\t\t\tchildParser.processElementValue(nameValue);\n\t\t\t\tchildParser.processEndElement();\n\t\t\t\tfail(\"duplicated element\");\n\n\t\t\t} catch (GDataParseException e) {\n\t\t\t\t// \n\n\t\t\t}\n\n\t\t}\n\t\t{\n\t\t\tname = new QName(GOMNamespace.ATOM_NS_URI, \"email\");\n\t\t\tchildParser = impl.getChildParser(name);\n\t\t\tassertTrue(childParser instanceof GOMPersonImpl.EmailParser);\n\n\t\t\tchildParser.processElementValue(nameValue);\n\t\t\tchildParser.processEndElement();\n\t\t\tassertEquals(impl.getEmail(), nameValue);\n\n\t\t\ttry {\n\t\t\t\tchildParser.processElementValue(nameValue);\n\t\t\t\tchildParser.processEndElement();\n\t\t\t\tfail(\"duplicated element\");\n\n\t\t\t} catch (GDataParseException e) {\n\t\t\t\t// \n\n\t\t\t}\n\t\t}\n\n\t}\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe","date":1166036663,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/gdata-server/src/gom/src/test/org/apache/lucene/gdata/gom/core/GOMPersonImplTest#testParseAtom().mjava","pathOld":"contrib/gdata-server/src/gom/test/org/apache/lucene/gdata/gom/core/GOMPersonImplTest#testParseAtom().mjava","sourceNew":"\tpublic void testParseAtom() {\n\t\tGOMPersonImpl impl = new GOMPersonImpl();\n\t\tQName name = new QName(GOMNamespace.ATOM_NS_URI, \"name\");\n\t\tAtomParser childParser = impl.getChildParser(name);\n\t\tString nameValue = \"simonw\";\n\t\t{\n\t\t\tassertTrue(childParser instanceof GOMPersonImpl.NameParser);\n\n\t\t\tchildParser.processElementValue(nameValue);\n\t\t\tchildParser.processEndElement();\n\t\t\tassertEquals(impl.getName(), nameValue);\n\t\t\ttry {\n\t\t\t\tchildParser.processElementValue(nameValue);\n\t\t\t\tchildParser.processEndElement();\n\t\t\t\tfail(\"duplicated element\");\n\n\t\t\t} catch (GDataParseException e) {\n\t\t\t\t// \n\n\t\t\t}\n\t\t}\n\t\t{\n\t\t\tname = new QName(GOMNamespace.ATOM_NS_URI, \"uri\");\n\t\t\tchildParser = impl.getChildParser(name);\n\t\t\tassertTrue(childParser instanceof GOMPersonImpl.UriParser);\n\n\t\t\tchildParser.processElementValue(nameValue);\n\t\t\tchildParser.processEndElement();\n\t\t\tassertEquals(impl.getUri(), nameValue);\n\n\t\t\ttry {\n\t\t\t\tchildParser.processElementValue(nameValue);\n\t\t\t\tchildParser.processEndElement();\n\t\t\t\tfail(\"duplicated element\");\n\n\t\t\t} catch (GDataParseException e) {\n\t\t\t\t// \n\n\t\t\t}\n\n\t\t}\n\t\t{\n\t\t\tname = new QName(GOMNamespace.ATOM_NS_URI, \"email\");\n\t\t\tchildParser = impl.getChildParser(name);\n\t\t\tassertTrue(childParser instanceof GOMPersonImpl.EmailParser);\n\n\t\t\tchildParser.processElementValue(nameValue);\n\t\t\tchildParser.processEndElement();\n\t\t\tassertEquals(impl.getEmail(), nameValue);\n\n\t\t\ttry {\n\t\t\t\tchildParser.processElementValue(nameValue);\n\t\t\t\tchildParser.processEndElement();\n\t\t\t\tfail(\"duplicated element\");\n\n\t\t\t} catch (GDataParseException e) {\n\t\t\t\t// \n\n\t\t\t}\n\t\t}\n\n\t}\n\n","sourceOld":"\tpublic void testParseAtom() {\n\t\tGOMPersonImpl impl = new GOMPersonImpl();\n\t\tQName name = new QName(GOMNamespace.ATOM_NS_URI, \"name\");\n\t\tAtomParser childParser = impl.getChildParser(name);\n\t\tString nameValue = \"simonw\";\n\t\t{\n\t\t\tassertTrue(childParser instanceof GOMPersonImpl.NameParser);\n\n\t\t\tchildParser.processElementValue(nameValue);\n\t\t\tchildParser.processEndElement();\n\t\t\tassertEquals(impl.getName(), nameValue);\n\t\t\ttry {\n\t\t\t\tchildParser.processElementValue(nameValue);\n\t\t\t\tchildParser.processEndElement();\n\t\t\t\tfail(\"duplicated element\");\n\n\t\t\t} catch (GDataParseException e) {\n\t\t\t\t// \n\n\t\t\t}\n\t\t}\n\t\t{\n\t\t\tname = new QName(GOMNamespace.ATOM_NS_URI, \"uri\");\n\t\t\tchildParser = impl.getChildParser(name);\n\t\t\tassertTrue(childParser instanceof GOMPersonImpl.UriParser);\n\n\t\t\tchildParser.processElementValue(nameValue);\n\t\t\tchildParser.processEndElement();\n\t\t\tassertEquals(impl.getUri(), nameValue);\n\n\t\t\ttry {\n\t\t\t\tchildParser.processElementValue(nameValue);\n\t\t\t\tchildParser.processEndElement();\n\t\t\t\tfail(\"duplicated element\");\n\n\t\t\t} catch (GDataParseException e) {\n\t\t\t\t// \n\n\t\t\t}\n\n\t\t}\n\t\t{\n\t\t\tname = new QName(GOMNamespace.ATOM_NS_URI, \"email\");\n\t\t\tchildParser = impl.getChildParser(name);\n\t\t\tassertTrue(childParser instanceof GOMPersonImpl.EmailParser);\n\n\t\t\tchildParser.processElementValue(nameValue);\n\t\t\tchildParser.processEndElement();\n\t\t\tassertEquals(impl.getEmail(), nameValue);\n\n\t\t\ttry {\n\t\t\t\tchildParser.processElementValue(nameValue);\n\t\t\t\tchildParser.processEndElement();\n\t\t\t\tfail(\"duplicated element\");\n\n\t\t\t} catch (GDataParseException e) {\n\t\t\t\t// \n\n\t\t\t}\n\t\t}\n\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe":["ebe0cf7fd7142a4f158b89ac046e386f7cf8a212"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ebe0cf7fd7142a4f158b89ac046e386f7cf8a212":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe"]},"commit2Childs":{"4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ebe0cf7fd7142a4f158b89ac046e386f7cf8a212"],"ebe0cf7fd7142a4f158b89ac046e386f7cf8a212":["4055ae1e0f6bbe8fa4c1069a11adee5e57b518fe"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}