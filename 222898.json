{"path":"contrib/analyzers/src/test/org/apache/lucene/analysis/shingle/TestShingleMatrixFilter.TokenListStream#TokenListStream(TokenStream).mjava","commits":[{"id":"660fdd379b3fe276cd3a63d9c5852cef6dd5d54f","date":1215042831,"type":0,"author":"Karl-Johan Wettin","isMerge":false,"pathNew":"contrib/analyzers/src/test/org/apache/lucene/analysis/shingle/TestShingleMatrixFilter.TokenListStream#TokenListStream(TokenStream).mjava","pathOld":"/dev/null","sourceNew":"    public TokenListStream(TokenStream ts) throws IOException {\n      tokens = new ArrayList<Token>();\n      Token token;\n      while ((token = ts.next(new Token())) != null) {\n        tokens.add(token);\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7e2cb543b41c145f33390f460ee743d6693c9c6c","date":1219243087,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/analyzers/src/test/org/apache/lucene/analysis/shingle/TestShingleMatrixFilter.TokenListStream#TokenListStream(TokenStream).mjava","pathOld":"contrib/analyzers/src/test/org/apache/lucene/analysis/shingle/TestShingleMatrixFilter.TokenListStream#TokenListStream(TokenStream).mjava","sourceNew":"    public TokenListStream(TokenStream ts) throws IOException {\n      tokens = new ArrayList<Token>();\n      final Token reusableToken = new Token();\n      for (Token nextToken = ts.next(reusableToken); nextToken != null; nextToken = ts.next(reusableToken)) {\n        tokens.add((Token) nextToken.clone());\n      }\n    }\n\n","sourceOld":"    public TokenListStream(TokenStream ts) throws IOException {\n      tokens = new ArrayList<Token>();\n      Token token;\n      while ((token = ts.next(new Token())) != null) {\n        tokens.add(token);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cbf0bdceb2051d3f9cb24580a849c9cd8b17ea56","date":1221157398,"type":3,"author":"Karl-Johan Wettin","isMerge":false,"pathNew":"contrib/analyzers/src/test/org/apache/lucene/analysis/shingle/TestShingleMatrixFilter.TokenListStream#TokenListStream(TokenStream).mjava","pathOld":"contrib/analyzers/src/test/org/apache/lucene/analysis/shingle/TestShingleMatrixFilter.TokenListStream#TokenListStream(TokenStream).mjava","sourceNew":"    public TokenListStream(TokenStream ts) throws IOException {\n      tokens = new ArrayList();\n      final Token reusableToken = new Token();\n      for (Token nextToken = ts.next(reusableToken); nextToken != null; nextToken = ts.next(reusableToken)) {\n        tokens.add((Token) nextToken.clone());\n      }\n    }\n\n","sourceOld":"    public TokenListStream(TokenStream ts) throws IOException {\n      tokens = new ArrayList<Token>();\n      final Token reusableToken = new Token();\n      for (Token nextToken = ts.next(reusableToken); nextToken != null; nextToken = ts.next(reusableToken)) {\n        tokens.add((Token) nextToken.clone());\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dd745d580729e528151b58aeda87ef82f1b95c9b","date":1248369082,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/shingle/TestShingleMatrixFilter.TokenListStream#TokenListStream(TokenStream).mjava","pathOld":"contrib/analyzers/src/test/org/apache/lucene/analysis/shingle/TestShingleMatrixFilter.TokenListStream#TokenListStream(TokenStream).mjava","sourceNew":"    public TokenListStream(TokenStream ts) throws IOException {\n      tokens = new ArrayList();\n      final Token reusableToken = new Token();\n      for (Token nextToken = ts.next(reusableToken); nextToken != null; nextToken = ts.next(reusableToken)) {\n        tokens.add((Token) nextToken.clone());\n      }\n    }\n\n","sourceOld":"    public TokenListStream(TokenStream ts) throws IOException {\n      tokens = new ArrayList();\n      final Token reusableToken = new Token();\n      for (Token nextToken = ts.next(reusableToken); nextToken != null; nextToken = ts.next(reusableToken)) {\n        tokens.add((Token) nextToken.clone());\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7e2cb543b41c145f33390f460ee743d6693c9c6c":["660fdd379b3fe276cd3a63d9c5852cef6dd5d54f"],"dd745d580729e528151b58aeda87ef82f1b95c9b":["cbf0bdceb2051d3f9cb24580a849c9cd8b17ea56"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"660fdd379b3fe276cd3a63d9c5852cef6dd5d54f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cbf0bdceb2051d3f9cb24580a849c9cd8b17ea56":["7e2cb543b41c145f33390f460ee743d6693c9c6c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["dd745d580729e528151b58aeda87ef82f1b95c9b"]},"commit2Childs":{"7e2cb543b41c145f33390f460ee743d6693c9c6c":["cbf0bdceb2051d3f9cb24580a849c9cd8b17ea56"],"dd745d580729e528151b58aeda87ef82f1b95c9b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["660fdd379b3fe276cd3a63d9c5852cef6dd5d54f"],"660fdd379b3fe276cd3a63d9c5852cef6dd5d54f":["7e2cb543b41c145f33390f460ee743d6693c9c6c"],"cbf0bdceb2051d3f9cb24580a849c9cd8b17ea56":["dd745d580729e528151b58aeda87ef82f1b95c9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}