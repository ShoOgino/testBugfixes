{"path":"lucene/sandbox/src/java/org/apache/lucene/document/LatLonBoundingBox#setRangeValues(double,double,double,double).mjava","commits":[{"id":"bdda3f3b5e7c93c42e41bc22701a84c26ddf125a","date":1505850304,"type":0,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/document/LatLonBoundingBox#setRangeValues(double,double,double,double).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Changes the values of the field\n   * @param minLat minimum latitude value (in degrees); valid in [-90.0 : 90.0]\n   * @param minLon minimum longitude value (in degrees); valid in [-180.0 : 180.0]\n   * @param maxLat maximum latitude value (in degrees); valid in [minLat : 90.0]\n   * @param maxLon maximum longitude value (in degrees); valid in [minLon : 180.0]\n   * @throws IllegalArgumentException if {@code min} or {@code max} is invalid\n   */\n  public void setRangeValues(double minLat, double minLon, double maxLat, double maxLon) {\n    checkArgs(minLat, minLon, maxLat, maxLon);\n    final byte[] bytes;\n    if (fieldsData == null) {\n      bytes = new byte[4*BYTES];\n      fieldsData = new BytesRef(bytes);\n    } else {\n      bytes = ((BytesRef)fieldsData).bytes;\n    }\n    encode(minLat, minLon, bytes, 0);\n    encode(maxLat, maxLon, bytes, 2 * BYTES);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6240b74b884c5587f2a4062dd27d6c32bf228889","date":1507037235,"type":0,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/document/LatLonBoundingBox#setRangeValues(double,double,double,double).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Changes the values of the field\n   * @param minLat minimum latitude value (in degrees); valid in [-90.0 : 90.0]\n   * @param minLon minimum longitude value (in degrees); valid in [-180.0 : 180.0]\n   * @param maxLat maximum latitude value (in degrees); valid in [minLat : 90.0]\n   * @param maxLon maximum longitude value (in degrees); valid in [minLon : 180.0]\n   * @throws IllegalArgumentException if {@code min} or {@code max} is invalid\n   */\n  public void setRangeValues(double minLat, double minLon, double maxLat, double maxLon) {\n    checkArgs(minLat, minLon, maxLat, maxLon);\n    final byte[] bytes;\n    if (fieldsData == null) {\n      bytes = new byte[4*BYTES];\n      fieldsData = new BytesRef(bytes);\n    } else {\n      bytes = ((BytesRef)fieldsData).bytes;\n    }\n    encode(minLat, minLon, bytes, 0);\n    encode(maxLat, maxLon, bytes, 2 * BYTES);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6240b74b884c5587f2a4062dd27d6c32bf228889":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","bdda3f3b5e7c93c42e41bc22701a84c26ddf125a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bdda3f3b5e7c93c42e41bc22701a84c26ddf125a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["bdda3f3b5e7c93c42e41bc22701a84c26ddf125a"]},"commit2Childs":{"6240b74b884c5587f2a4062dd27d6c32bf228889":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6240b74b884c5587f2a4062dd27d6c32bf228889","bdda3f3b5e7c93c42e41bc22701a84c26ddf125a"],"bdda3f3b5e7c93c42e41bc22701a84c26ddf125a":["6240b74b884c5587f2a4062dd27d6c32bf228889","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["6240b74b884c5587f2a4062dd27d6c32bf228889","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}