{"path":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionMessageHandler#commit(NamedList,String,Replica).mjava","commits":[{"id":"e31e6ce5848e5040d4c9ecbb25bc6ccf5d0894ac","date":1438841252,"type":1,"author":"Gregory Chanan","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionMessageHandler#commit(NamedList,String,Replica).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionProcessor#commit(NamedList,String,Replica).mjava","sourceNew":"  private void commit(NamedList results, String slice, Replica parentShardLeader) {\n    log.info(\"Calling soft commit to make sub shard updates visible\");\n    String coreUrl = new ZkCoreNodeProps(parentShardLeader).getCoreUrl();\n    // HttpShardHandler is hard coded to send a QueryRequest hence we go direct\n    // and we force open a searcher so that we have documents to show upon switching states\n    UpdateResponse updateResponse = null;\n    try {\n      updateResponse = softCommit(coreUrl);\n      processResponse(results, null, coreUrl, updateResponse, slice);\n    } catch (Exception e) {\n      processResponse(results, e, coreUrl, updateResponse, slice);\n      throw new SolrException(ErrorCode.SERVER_ERROR, \"Unable to call distrib softCommit on: \" + coreUrl, e);\n    }\n  }\n\n","sourceOld":"  private void commit(NamedList results, String slice, Replica parentShardLeader) {\n    log.info(\"Calling soft commit to make sub shard updates visible\");\n    String coreUrl = new ZkCoreNodeProps(parentShardLeader).getCoreUrl();\n    // HttpShardHandler is hard coded to send a QueryRequest hence we go direct\n    // and we force open a searcher so that we have documents to show upon switching states\n    UpdateResponse updateResponse = null;\n    try {\n      updateResponse = softCommit(coreUrl);\n      processResponse(results, null, coreUrl, updateResponse, slice);\n    } catch (Exception e) {\n      processResponse(results, e, coreUrl, updateResponse, slice);\n      throw new SolrException(ErrorCode.SERVER_ERROR, \"Unable to call distrib softCommit on: \" + coreUrl, e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f9362075f92dff89425ca488b480f70d565d66e7","date":1454985541,"type":3,"author":"markrmiller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionMessageHandler#commit(NamedList,String,Replica).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionMessageHandler#commit(NamedList,String,Replica).mjava","sourceNew":"  private void commit(NamedList results, String slice, Replica parentShardLeader) {\n    log.info(\"Calling soft commit to make sub shard updates visible\");\n    String coreUrl = new ZkCoreNodeProps(parentShardLeader).getCoreUrl();\n    // HttpShardHandler is hard coded to send a QueryRequest hence we go direct\n    // and we force open a searcher so that we have documents to show upon switching states\n    UpdateResponse updateResponse = null;\n    try {\n      updateResponse = softCommit(coreUrl);\n      processResponse(results, null, coreUrl, updateResponse, slice, Collections.emptySet());\n    } catch (Exception e) {\n      processResponse(results, e, coreUrl, updateResponse, slice, Collections.emptySet());\n      throw new SolrException(ErrorCode.SERVER_ERROR, \"Unable to call distrib softCommit on: \" + coreUrl, e);\n    }\n  }\n\n","sourceOld":"  private void commit(NamedList results, String slice, Replica parentShardLeader) {\n    log.info(\"Calling soft commit to make sub shard updates visible\");\n    String coreUrl = new ZkCoreNodeProps(parentShardLeader).getCoreUrl();\n    // HttpShardHandler is hard coded to send a QueryRequest hence we go direct\n    // and we force open a searcher so that we have documents to show upon switching states\n    UpdateResponse updateResponse = null;\n    try {\n      updateResponse = softCommit(coreUrl);\n      processResponse(results, null, coreUrl, updateResponse, slice);\n    } catch (Exception e) {\n      processResponse(results, e, coreUrl, updateResponse, slice);\n      throw new SolrException(ErrorCode.SERVER_ERROR, \"Unable to call distrib softCommit on: \" + coreUrl, e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"66e0b82bd39567aa2bf534e5282d05fb4a4a2c76","date":1471585465,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionMessageHandler#commit(NamedList,String,Replica).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionMessageHandler#commit(NamedList,String,Replica).mjava","sourceNew":"  void commit(NamedList results, String slice, Replica parentShardLeader) {\n    log.info(\"Calling soft commit to make sub shard updates visible\");\n    String coreUrl = new ZkCoreNodeProps(parentShardLeader).getCoreUrl();\n    // HttpShardHandler is hard coded to send a QueryRequest hence we go direct\n    // and we force open a searcher so that we have documents to show upon switching states\n    UpdateResponse updateResponse = null;\n    try {\n      updateResponse = softCommit(coreUrl);\n      processResponse(results, null, coreUrl, updateResponse, slice, Collections.emptySet());\n    } catch (Exception e) {\n      processResponse(results, e, coreUrl, updateResponse, slice, Collections.emptySet());\n      throw new SolrException(ErrorCode.SERVER_ERROR, \"Unable to call distrib softCommit on: \" + coreUrl, e);\n    }\n  }\n\n","sourceOld":"  private void commit(NamedList results, String slice, Replica parentShardLeader) {\n    log.info(\"Calling soft commit to make sub shard updates visible\");\n    String coreUrl = new ZkCoreNodeProps(parentShardLeader).getCoreUrl();\n    // HttpShardHandler is hard coded to send a QueryRequest hence we go direct\n    // and we force open a searcher so that we have documents to show upon switching states\n    UpdateResponse updateResponse = null;\n    try {\n      updateResponse = softCommit(coreUrl);\n      processResponse(results, null, coreUrl, updateResponse, slice, Collections.emptySet());\n    } catch (Exception e) {\n      processResponse(results, e, coreUrl, updateResponse, slice, Collections.emptySet());\n      throw new SolrException(ErrorCode.SERVER_ERROR, \"Unable to call distrib softCommit on: \" + coreUrl, e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"403d05f7f8d69b65659157eff1bc1d2717f04c66","date":1471692961,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionMessageHandler#commit(NamedList,String,Replica).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionMessageHandler#commit(NamedList,String,Replica).mjava","sourceNew":"  void commit(NamedList results, String slice, Replica parentShardLeader) {\n    log.info(\"Calling soft commit to make sub shard updates visible\");\n    String coreUrl = new ZkCoreNodeProps(parentShardLeader).getCoreUrl();\n    // HttpShardHandler is hard coded to send a QueryRequest hence we go direct\n    // and we force open a searcher so that we have documents to show upon switching states\n    UpdateResponse updateResponse = null;\n    try {\n      updateResponse = softCommit(coreUrl);\n      processResponse(results, null, coreUrl, updateResponse, slice, Collections.emptySet());\n    } catch (Exception e) {\n      processResponse(results, e, coreUrl, updateResponse, slice, Collections.emptySet());\n      throw new SolrException(ErrorCode.SERVER_ERROR, \"Unable to call distrib softCommit on: \" + coreUrl, e);\n    }\n  }\n\n","sourceOld":"  private void commit(NamedList results, String slice, Replica parentShardLeader) {\n    log.info(\"Calling soft commit to make sub shard updates visible\");\n    String coreUrl = new ZkCoreNodeProps(parentShardLeader).getCoreUrl();\n    // HttpShardHandler is hard coded to send a QueryRequest hence we go direct\n    // and we force open a searcher so that we have documents to show upon switching states\n    UpdateResponse updateResponse = null;\n    try {\n      updateResponse = softCommit(coreUrl);\n      processResponse(results, null, coreUrl, updateResponse, slice, Collections.emptySet());\n    } catch (Exception e) {\n      processResponse(results, e, coreUrl, updateResponse, slice, Collections.emptySet());\n      throw new SolrException(ErrorCode.SERVER_ERROR, \"Unable to call distrib softCommit on: \" + coreUrl, e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"962cd4f5e313777f35da8f521265323e84184929","date":1474533758,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionMessageHandler#commit(NamedList,String,Replica).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionMessageHandler#commit(NamedList,String,Replica).mjava","sourceNew":"  void commit(NamedList results, String slice, Replica parentShardLeader) {\n    log.debug(\"Calling soft commit to make sub shard updates visible\");\n    String coreUrl = new ZkCoreNodeProps(parentShardLeader).getCoreUrl();\n    // HttpShardHandler is hard coded to send a QueryRequest hence we go direct\n    // and we force open a searcher so that we have documents to show upon switching states\n    UpdateResponse updateResponse = null;\n    try {\n      updateResponse = softCommit(coreUrl);\n      processResponse(results, null, coreUrl, updateResponse, slice, Collections.emptySet());\n    } catch (Exception e) {\n      processResponse(results, e, coreUrl, updateResponse, slice, Collections.emptySet());\n      throw new SolrException(ErrorCode.SERVER_ERROR, \"Unable to call distrib softCommit on: \" + coreUrl, e);\n    }\n  }\n\n","sourceOld":"  void commit(NamedList results, String slice, Replica parentShardLeader) {\n    log.info(\"Calling soft commit to make sub shard updates visible\");\n    String coreUrl = new ZkCoreNodeProps(parentShardLeader).getCoreUrl();\n    // HttpShardHandler is hard coded to send a QueryRequest hence we go direct\n    // and we force open a searcher so that we have documents to show upon switching states\n    UpdateResponse updateResponse = null;\n    try {\n      updateResponse = softCommit(coreUrl);\n      processResponse(results, null, coreUrl, updateResponse, slice, Collections.emptySet());\n    } catch (Exception e) {\n      processResponse(results, e, coreUrl, updateResponse, slice, Collections.emptySet());\n      throw new SolrException(ErrorCode.SERVER_ERROR, \"Unable to call distrib softCommit on: \" + coreUrl, e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17e5da53e4e5bd659e22add9bba1cfa222e7e30d","date":1475435902,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionMessageHandler#commit(NamedList,String,Replica).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionMessageHandler#commit(NamedList,String,Replica).mjava","sourceNew":"  void commit(NamedList results, String slice, Replica parentShardLeader) {\n    log.debug(\"Calling soft commit to make sub shard updates visible\");\n    String coreUrl = new ZkCoreNodeProps(parentShardLeader).getCoreUrl();\n    // HttpShardHandler is hard coded to send a QueryRequest hence we go direct\n    // and we force open a searcher so that we have documents to show upon switching states\n    UpdateResponse updateResponse = null;\n    try {\n      updateResponse = softCommit(coreUrl);\n      processResponse(results, null, coreUrl, updateResponse, slice, Collections.emptySet());\n    } catch (Exception e) {\n      processResponse(results, e, coreUrl, updateResponse, slice, Collections.emptySet());\n      throw new SolrException(ErrorCode.SERVER_ERROR, \"Unable to call distrib softCommit on: \" + coreUrl, e);\n    }\n  }\n\n","sourceOld":"  void commit(NamedList results, String slice, Replica parentShardLeader) {\n    log.info(\"Calling soft commit to make sub shard updates visible\");\n    String coreUrl = new ZkCoreNodeProps(parentShardLeader).getCoreUrl();\n    // HttpShardHandler is hard coded to send a QueryRequest hence we go direct\n    // and we force open a searcher so that we have documents to show upon switching states\n    UpdateResponse updateResponse = null;\n    try {\n      updateResponse = softCommit(coreUrl);\n      processResponse(results, null, coreUrl, updateResponse, slice, Collections.emptySet());\n    } catch (Exception e) {\n      processResponse(results, e, coreUrl, updateResponse, slice, Collections.emptySet());\n      throw new SolrException(ErrorCode.SERVER_ERROR, \"Unable to call distrib softCommit on: \" + coreUrl, e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionMessageHandler#commit(NamedList,String,Replica).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionMessageHandler#commit(NamedList,String,Replica).mjava","sourceNew":"  void commit(NamedList results, String slice, Replica parentShardLeader) {\n    log.debug(\"Calling soft commit to make sub shard updates visible\");\n    String coreUrl = new ZkCoreNodeProps(parentShardLeader).getCoreUrl();\n    // HttpShardHandler is hard coded to send a QueryRequest hence we go direct\n    // and we force open a searcher so that we have documents to show upon switching states\n    UpdateResponse updateResponse = null;\n    try {\n      updateResponse = softCommit(coreUrl);\n      processResponse(results, null, coreUrl, updateResponse, slice, Collections.emptySet());\n    } catch (Exception e) {\n      processResponse(results, e, coreUrl, updateResponse, slice, Collections.emptySet());\n      throw new SolrException(ErrorCode.SERVER_ERROR, \"Unable to call distrib softCommit on: \" + coreUrl, e);\n    }\n  }\n\n","sourceOld":"  private void commit(NamedList results, String slice, Replica parentShardLeader) {\n    log.info(\"Calling soft commit to make sub shard updates visible\");\n    String coreUrl = new ZkCoreNodeProps(parentShardLeader).getCoreUrl();\n    // HttpShardHandler is hard coded to send a QueryRequest hence we go direct\n    // and we force open a searcher so that we have documents to show upon switching states\n    UpdateResponse updateResponse = null;\n    try {\n      updateResponse = softCommit(coreUrl);\n      processResponse(results, null, coreUrl, updateResponse, slice, Collections.emptySet());\n    } catch (Exception e) {\n      processResponse(results, e, coreUrl, updateResponse, slice, Collections.emptySet());\n      throw new SolrException(ErrorCode.SERVER_ERROR, \"Unable to call distrib softCommit on: \" + coreUrl, e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6146c07c0dee1ae1e42926167acd127fed5ef59d","date":1516129420,"type":5,"author":"Varun Thacker","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/api/collections/OverseerCollectionMessageHandler#commit(NamedList,String,Replica).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionMessageHandler#commit(NamedList,String,Replica).mjava","sourceNew":"  void commit(NamedList results, String slice, Replica parentShardLeader) {\n    log.debug(\"Calling soft commit to make sub shard updates visible\");\n    String coreUrl = new ZkCoreNodeProps(parentShardLeader).getCoreUrl();\n    // HttpShardHandler is hard coded to send a QueryRequest hence we go direct\n    // and we force open a searcher so that we have documents to show upon switching states\n    UpdateResponse updateResponse = null;\n    try {\n      updateResponse = softCommit(coreUrl);\n      processResponse(results, null, coreUrl, updateResponse, slice, Collections.emptySet());\n    } catch (Exception e) {\n      processResponse(results, e, coreUrl, updateResponse, slice, Collections.emptySet());\n      throw new SolrException(ErrorCode.SERVER_ERROR, \"Unable to call distrib softCommit on: \" + coreUrl, e);\n    }\n  }\n\n","sourceOld":"  void commit(NamedList results, String slice, Replica parentShardLeader) {\n    log.debug(\"Calling soft commit to make sub shard updates visible\");\n    String coreUrl = new ZkCoreNodeProps(parentShardLeader).getCoreUrl();\n    // HttpShardHandler is hard coded to send a QueryRequest hence we go direct\n    // and we force open a searcher so that we have documents to show upon switching states\n    UpdateResponse updateResponse = null;\n    try {\n      updateResponse = softCommit(coreUrl);\n      processResponse(results, null, coreUrl, updateResponse, slice, Collections.emptySet());\n    } catch (Exception e) {\n      processResponse(results, e, coreUrl, updateResponse, slice, Collections.emptySet());\n      throw new SolrException(ErrorCode.SERVER_ERROR, \"Unable to call distrib softCommit on: \" + coreUrl, e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b94236357aaa22b76c10629851fe4e376e0cea82","date":1516710914,"type":5,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/api/collections/OverseerCollectionMessageHandler#commit(NamedList,String,Replica).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/OverseerCollectionMessageHandler#commit(NamedList,String,Replica).mjava","sourceNew":"  void commit(NamedList results, String slice, Replica parentShardLeader) {\n    log.debug(\"Calling soft commit to make sub shard updates visible\");\n    String coreUrl = new ZkCoreNodeProps(parentShardLeader).getCoreUrl();\n    // HttpShardHandler is hard coded to send a QueryRequest hence we go direct\n    // and we force open a searcher so that we have documents to show upon switching states\n    UpdateResponse updateResponse = null;\n    try {\n      updateResponse = softCommit(coreUrl);\n      processResponse(results, null, coreUrl, updateResponse, slice, Collections.emptySet());\n    } catch (Exception e) {\n      processResponse(results, e, coreUrl, updateResponse, slice, Collections.emptySet());\n      throw new SolrException(ErrorCode.SERVER_ERROR, \"Unable to call distrib softCommit on: \" + coreUrl, e);\n    }\n  }\n\n","sourceOld":"  void commit(NamedList results, String slice, Replica parentShardLeader) {\n    log.debug(\"Calling soft commit to make sub shard updates visible\");\n    String coreUrl = new ZkCoreNodeProps(parentShardLeader).getCoreUrl();\n    // HttpShardHandler is hard coded to send a QueryRequest hence we go direct\n    // and we force open a searcher so that we have documents to show upon switching states\n    UpdateResponse updateResponse = null;\n    try {\n      updateResponse = softCommit(coreUrl);\n      processResponse(results, null, coreUrl, updateResponse, slice, Collections.emptySet());\n    } catch (Exception e) {\n      processResponse(results, e, coreUrl, updateResponse, slice, Collections.emptySet());\n      throw new SolrException(ErrorCode.SERVER_ERROR, \"Unable to call distrib softCommit on: \" + coreUrl, e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e31e6ce5848e5040d4c9ecbb25bc6ccf5d0894ac":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"962cd4f5e313777f35da8f521265323e84184929":["403d05f7f8d69b65659157eff1bc1d2717f04c66"],"b94236357aaa22b76c10629851fe4e376e0cea82":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d","6146c07c0dee1ae1e42926167acd127fed5ef59d"],"403d05f7f8d69b65659157eff1bc1d2717f04c66":["f9362075f92dff89425ca488b480f70d565d66e7","66e0b82bd39567aa2bf534e5282d05fb4a4a2c76"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["403d05f7f8d69b65659157eff1bc1d2717f04c66","962cd4f5e313777f35da8f521265323e84184929"],"66e0b82bd39567aa2bf534e5282d05fb4a4a2c76":["f9362075f92dff89425ca488b480f70d565d66e7"],"6146c07c0dee1ae1e42926167acd127fed5ef59d":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"f9362075f92dff89425ca488b480f70d565d66e7":["e31e6ce5848e5040d4c9ecbb25bc6ccf5d0894ac"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["f9362075f92dff89425ca488b480f70d565d66e7","17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b94236357aaa22b76c10629851fe4e376e0cea82"]},"commit2Childs":{"e31e6ce5848e5040d4c9ecbb25bc6ccf5d0894ac":["f9362075f92dff89425ca488b480f70d565d66e7"],"962cd4f5e313777f35da8f521265323e84184929":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"b94236357aaa22b76c10629851fe4e376e0cea82":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"403d05f7f8d69b65659157eff1bc1d2717f04c66":["962cd4f5e313777f35da8f521265323e84184929","17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e31e6ce5848e5040d4c9ecbb25bc6ccf5d0894ac"],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["b94236357aaa22b76c10629851fe4e376e0cea82","6146c07c0dee1ae1e42926167acd127fed5ef59d","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"66e0b82bd39567aa2bf534e5282d05fb4a4a2c76":["403d05f7f8d69b65659157eff1bc1d2717f04c66"],"6146c07c0dee1ae1e42926167acd127fed5ef59d":["b94236357aaa22b76c10629851fe4e376e0cea82"],"f9362075f92dff89425ca488b480f70d565d66e7":["403d05f7f8d69b65659157eff1bc1d2717f04c66","66e0b82bd39567aa2bf534e5282d05fb4a4a2c76","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}