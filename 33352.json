{"path":"lucene/core/src/test/org/apache/lucene/index/TestFlushByRamOrCountsPolicy#testFlushByRamLargeBuffer().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestFlushByRamOrCountsPolicy#testFlushByRamLargeBuffer().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestFlushByRamOrCountsPolicy#testFlushByRamLargeBuffer().mjava","sourceNew":"  public void testFlushByRamLargeBuffer() throws CorruptIndexException,\n      LockObtainFailedException, IOException, InterruptedException {\n    // with a 256 mb ram buffer we should never stall\n    runFlushByRam(1 + random.nextInt(TEST_NIGHTLY ? 5 : 1), 256.d, true);\n  }\n\n","sourceOld":"  public void testFlushByRamLargeBuffer() throws CorruptIndexException,\n      LockObtainFailedException, IOException, InterruptedException {\n    // with a 256 mb ram buffer we should never stall\n    runFlushByRam(1 + random.nextInt(TEST_NIGHTLY ? 5 : 1), 256.d, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"629c38c4ae4e303d0617e05fbfe508140b32f0a3","date":1334500904,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestFlushByRamOrCountsPolicy#testFlushByRamLargeBuffer().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestFlushByRamOrCountsPolicy#testFlushByRamLargeBuffer().mjava","sourceNew":"  public void testFlushByRamLargeBuffer() throws CorruptIndexException,\n      LockObtainFailedException, IOException, InterruptedException {\n    // with a 256 mb ram buffer we should never stall\n    runFlushByRam(1 + random().nextInt(TEST_NIGHTLY ? 5 : 1), 256.d, true);\n  }\n\n","sourceOld":"  public void testFlushByRamLargeBuffer() throws CorruptIndexException,\n      LockObtainFailedException, IOException, InterruptedException {\n    // with a 256 mb ram buffer we should never stall\n    runFlushByRam(1 + random.nextInt(TEST_NIGHTLY ? 5 : 1), 256.d, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4d3e8520fd031bab31fd0e4d480e55958bc45efe","date":1340901565,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestFlushByRamOrCountsPolicy#testFlushByRamLargeBuffer().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestFlushByRamOrCountsPolicy#testFlushByRamLargeBuffer().mjava","sourceNew":"  public void testFlushByRamLargeBuffer() throws IOException, InterruptedException {\n    // with a 256 mb ram buffer we should never stall\n    runFlushByRam(1 + random().nextInt(TEST_NIGHTLY ? 5 : 1), 256.d, true);\n  }\n\n","sourceOld":"  public void testFlushByRamLargeBuffer() throws CorruptIndexException,\n      LockObtainFailedException, IOException, InterruptedException {\n    // with a 256 mb ram buffer we should never stall\n    runFlushByRam(1 + random().nextInt(TEST_NIGHTLY ? 5 : 1), 256.d, true);\n  }\n\n","bugFix":["5f79302faab682bee449062b742447fb7ea2c018"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestFlushByRamOrCountsPolicy#testFlushByRamLargeBuffer().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestFlushByRamOrCountsPolicy#testFlushByRamLargeBuffer().mjava","sourceNew":"  public void testFlushByRamLargeBuffer() throws IOException, InterruptedException {\n    // with a 256 mb ram buffer we should never stall\n    runFlushByRam(1 + random().nextInt(TEST_NIGHTLY ? 5 : 1), 256.d, true);\n  }\n\n","sourceOld":"  public void testFlushByRamLargeBuffer() throws CorruptIndexException,\n      LockObtainFailedException, IOException, InterruptedException {\n    // with a 256 mb ram buffer we should never stall\n    runFlushByRam(1 + random().nextInt(TEST_NIGHTLY ? 5 : 1), 256.d, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["629c38c4ae4e303d0617e05fbfe508140b32f0a3","4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4d3e8520fd031bab31fd0e4d480e55958bc45efe":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4d3e8520fd031bab31fd0e4d480e55958bc45efe"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["fe33227f6805edab2036cbb80645cc4e2d1fa424","4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"4d3e8520fd031bab31fd0e4d480e55958bc45efe":["fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}