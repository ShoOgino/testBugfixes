{"path":"lucene/contrib/instantiated/src/test/org/apache/lucene/store/instantiated/TestRealTime#test().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/instantiated/src/test/org/apache/lucene/store/instantiated/TestRealTime#test().mjava","pathOld":"contrib/instantiated/src/test/org/apache/lucene/store/instantiated/TestRealTime#test().mjava","sourceNew":"  public void test() throws Exception {\n\n    InstantiatedIndex index = new InstantiatedIndex();\n    InstantiatedIndexReader reader = new InstantiatedIndexReader(index);\n    IndexSearcher searcher = new IndexSearcher(reader);\n    InstantiatedIndexWriter writer = new InstantiatedIndexWriter(index);\n\n    Document doc;\n    Collector collector;\n\n    doc = new Document();\n    doc.add(new Field(\"f\", \"a\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    writer.addDocument(doc);\n    writer.commit();\n\n    collector = new Collector();\n    searcher.search(new TermQuery(new Term(\"f\", \"a\")), collector);\n    assertEquals(1, collector.hits);\n\n    doc = new Document();\n    doc.add(new Field(\"f\", \"a\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    writer.addDocument(doc);\n    writer.commit();\n\n    collector = new Collector();\n    searcher.search(new TermQuery(new Term(\"f\", \"a\")), collector);\n    assertEquals(2, collector.hits);\n\n  }\n\n","sourceOld":"  public void test() throws Exception {\n\n    InstantiatedIndex index = new InstantiatedIndex();\n    InstantiatedIndexReader reader = new InstantiatedIndexReader(index);\n    IndexSearcher searcher = new IndexSearcher(reader);\n    InstantiatedIndexWriter writer = new InstantiatedIndexWriter(index);\n\n    Document doc;\n    Collector collector;\n\n    doc = new Document();\n    doc.add(new Field(\"f\", \"a\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    writer.addDocument(doc);\n    writer.commit();\n\n    collector = new Collector();\n    searcher.search(new TermQuery(new Term(\"f\", \"a\")), collector);\n    assertEquals(1, collector.hits);\n\n    doc = new Document();\n    doc.add(new Field(\"f\", \"a\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    writer.addDocument(doc);\n    writer.commit();\n\n    collector = new Collector();\n    searcher.search(new TermQuery(new Term(\"f\", \"a\")), collector);\n    assertEquals(2, collector.hits);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"790e1fde4caa765b3faaad3fbcd25c6973450336","date":1296689245,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/instantiated/src/test/org/apache/lucene/store/instantiated/TestRealTime#test().mjava","pathOld":"lucene/contrib/instantiated/src/test/org/apache/lucene/store/instantiated/TestRealTime#test().mjava","sourceNew":"  public void test() throws Exception {\n\n    InstantiatedIndex index = new InstantiatedIndex();\n    InstantiatedIndexReader reader = new InstantiatedIndexReader(index);\n    IndexSearcher searcher = newSearcher(reader);\n    InstantiatedIndexWriter writer = new InstantiatedIndexWriter(index);\n\n    Document doc;\n    Collector collector;\n\n    doc = new Document();\n    doc.add(new Field(\"f\", \"a\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    writer.addDocument(doc);\n    writer.commit();\n\n    collector = new Collector();\n    searcher.search(new TermQuery(new Term(\"f\", \"a\")), collector);\n    assertEquals(1, collector.hits);\n\n    doc = new Document();\n    doc.add(new Field(\"f\", \"a\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    writer.addDocument(doc);\n    writer.commit();\n\n    collector = new Collector();\n    searcher.search(new TermQuery(new Term(\"f\", \"a\")), collector);\n    assertEquals(2, collector.hits);\n\n  }\n\n","sourceOld":"  public void test() throws Exception {\n\n    InstantiatedIndex index = new InstantiatedIndex();\n    InstantiatedIndexReader reader = new InstantiatedIndexReader(index);\n    IndexSearcher searcher = new IndexSearcher(reader);\n    InstantiatedIndexWriter writer = new InstantiatedIndexWriter(index);\n\n    Document doc;\n    Collector collector;\n\n    doc = new Document();\n    doc.add(new Field(\"f\", \"a\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    writer.addDocument(doc);\n    writer.commit();\n\n    collector = new Collector();\n    searcher.search(new TermQuery(new Term(\"f\", \"a\")), collector);\n    assertEquals(1, collector.hits);\n\n    doc = new Document();\n    doc.add(new Field(\"f\", \"a\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    writer.addDocument(doc);\n    writer.commit();\n\n    collector = new Collector();\n    searcher.search(new TermQuery(new Term(\"f\", \"a\")), collector);\n    assertEquals(2, collector.hits);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/contrib/instantiated/src/test/org/apache/lucene/store/instantiated/TestRealTime#test().mjava","pathOld":"lucene/contrib/instantiated/src/test/org/apache/lucene/store/instantiated/TestRealTime#test().mjava","sourceNew":"  public void test() throws Exception {\n\n    InstantiatedIndex index = new InstantiatedIndex();\n    InstantiatedIndexReader reader = new InstantiatedIndexReader(index);\n    IndexSearcher searcher = newSearcher(reader);\n    InstantiatedIndexWriter writer = new InstantiatedIndexWriter(index);\n\n    Document doc;\n    Collector collector;\n\n    doc = new Document();\n    doc.add(new Field(\"f\", \"a\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    writer.addDocument(doc);\n    writer.commit();\n\n    collector = new Collector();\n    searcher.search(new TermQuery(new Term(\"f\", \"a\")), collector);\n    assertEquals(1, collector.hits);\n\n    doc = new Document();\n    doc.add(new Field(\"f\", \"a\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    writer.addDocument(doc);\n    writer.commit();\n\n    collector = new Collector();\n    searcher.search(new TermQuery(new Term(\"f\", \"a\")), collector);\n    assertEquals(2, collector.hits);\n\n  }\n\n","sourceOld":"  public void test() throws Exception {\n\n    InstantiatedIndex index = new InstantiatedIndex();\n    InstantiatedIndexReader reader = new InstantiatedIndexReader(index);\n    IndexSearcher searcher = new IndexSearcher(reader);\n    InstantiatedIndexWriter writer = new InstantiatedIndexWriter(index);\n\n    Document doc;\n    Collector collector;\n\n    doc = new Document();\n    doc.add(new Field(\"f\", \"a\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    writer.addDocument(doc);\n    writer.commit();\n\n    collector = new Collector();\n    searcher.search(new TermQuery(new Term(\"f\", \"a\")), collector);\n    assertEquals(1, collector.hits);\n\n    doc = new Document();\n    doc.add(new Field(\"f\", \"a\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    writer.addDocument(doc);\n    writer.commit();\n\n    collector = new Collector();\n    searcher.search(new TermQuery(new Term(\"f\", \"a\")), collector);\n    assertEquals(2, collector.hits);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/contrib/instantiated/src/test/org/apache/lucene/store/instantiated/TestRealTime#test().mjava","pathOld":"lucene/contrib/instantiated/src/test/org/apache/lucene/store/instantiated/TestRealTime#test().mjava","sourceNew":"  public void test() throws Exception {\n\n    InstantiatedIndex index = new InstantiatedIndex();\n    InstantiatedIndexReader reader = new InstantiatedIndexReader(index);\n    IndexSearcher searcher = newSearcher(reader);\n    InstantiatedIndexWriter writer = new InstantiatedIndexWriter(index);\n\n    Document doc;\n    Collector collector;\n\n    doc = new Document();\n    doc.add(new Field(\"f\", \"a\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    writer.addDocument(doc);\n    writer.commit();\n\n    collector = new Collector();\n    searcher.search(new TermQuery(new Term(\"f\", \"a\")), collector);\n    assertEquals(1, collector.hits);\n\n    doc = new Document();\n    doc.add(new Field(\"f\", \"a\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    writer.addDocument(doc);\n    writer.commit();\n\n    collector = new Collector();\n    searcher.search(new TermQuery(new Term(\"f\", \"a\")), collector);\n    assertEquals(2, collector.hits);\n\n  }\n\n","sourceOld":"  public void test() throws Exception {\n\n    InstantiatedIndex index = new InstantiatedIndex();\n    InstantiatedIndexReader reader = new InstantiatedIndexReader(index);\n    IndexSearcher searcher = new IndexSearcher(reader);\n    InstantiatedIndexWriter writer = new InstantiatedIndexWriter(index);\n\n    Document doc;\n    Collector collector;\n\n    doc = new Document();\n    doc.add(new Field(\"f\", \"a\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    writer.addDocument(doc);\n    writer.commit();\n\n    collector = new Collector();\n    searcher.search(new TermQuery(new Term(\"f\", \"a\")), collector);\n    assertEquals(1, collector.hits);\n\n    doc = new Document();\n    doc.add(new Field(\"f\", \"a\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    writer.addDocument(doc);\n    writer.commit();\n\n    collector = new Collector();\n    searcher.search(new TermQuery(new Term(\"f\", \"a\")), collector);\n    assertEquals(2, collector.hits);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7bb6ff08896b18d351dd6d23825bbb43bfd68330","date":1304264517,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/instantiated/src/test/org/apache/lucene/store/instantiated/TestRealTime#test().mjava","pathOld":"lucene/contrib/instantiated/src/test/org/apache/lucene/store/instantiated/TestRealTime#test().mjava","sourceNew":"  public void test() throws Exception {\n\n    InstantiatedIndex index = new InstantiatedIndex();\n    InstantiatedIndexReader reader = new InstantiatedIndexReader(index);\n    IndexSearcher searcher = newSearcher(reader, false);\n    InstantiatedIndexWriter writer = new InstantiatedIndexWriter(index);\n\n    Document doc;\n    Collector collector;\n\n    doc = new Document();\n    doc.add(new Field(\"f\", \"a\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    writer.addDocument(doc);\n    writer.commit();\n\n    collector = new Collector();\n    searcher.search(new TermQuery(new Term(\"f\", \"a\")), collector);\n    assertEquals(1, collector.hits);\n\n    doc = new Document();\n    doc.add(new Field(\"f\", \"a\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    writer.addDocument(doc);\n    writer.commit();\n\n    collector = new Collector();\n    searcher.search(new TermQuery(new Term(\"f\", \"a\")), collector);\n    assertEquals(2, collector.hits);\n\n  }\n\n","sourceOld":"  public void test() throws Exception {\n\n    InstantiatedIndex index = new InstantiatedIndex();\n    InstantiatedIndexReader reader = new InstantiatedIndexReader(index);\n    IndexSearcher searcher = newSearcher(reader);\n    InstantiatedIndexWriter writer = new InstantiatedIndexWriter(index);\n\n    Document doc;\n    Collector collector;\n\n    doc = new Document();\n    doc.add(new Field(\"f\", \"a\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    writer.addDocument(doc);\n    writer.commit();\n\n    collector = new Collector();\n    searcher.search(new TermQuery(new Term(\"f\", \"a\")), collector);\n    assertEquals(1, collector.hits);\n\n    doc = new Document();\n    doc.add(new Field(\"f\", \"a\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    writer.addDocument(doc);\n    writer.commit();\n\n    collector = new Collector();\n    searcher.search(new TermQuery(new Term(\"f\", \"a\")), collector);\n    assertEquals(2, collector.hits);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/contrib/instantiated/src/test/org/apache/lucene/store/instantiated/TestRealTime#test().mjava","pathOld":"lucene/contrib/instantiated/src/test/org/apache/lucene/store/instantiated/TestRealTime#test().mjava","sourceNew":"  public void test() throws Exception {\n\n    InstantiatedIndex index = new InstantiatedIndex();\n    InstantiatedIndexReader reader = new InstantiatedIndexReader(index);\n    IndexSearcher searcher = newSearcher(reader, false);\n    InstantiatedIndexWriter writer = new InstantiatedIndexWriter(index);\n\n    Document doc;\n    Collector collector;\n\n    doc = new Document();\n    doc.add(new Field(\"f\", \"a\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    writer.addDocument(doc);\n    writer.commit();\n\n    collector = new Collector();\n    searcher.search(new TermQuery(new Term(\"f\", \"a\")), collector);\n    assertEquals(1, collector.hits);\n\n    doc = new Document();\n    doc.add(new Field(\"f\", \"a\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    writer.addDocument(doc);\n    writer.commit();\n\n    collector = new Collector();\n    searcher.search(new TermQuery(new Term(\"f\", \"a\")), collector);\n    assertEquals(2, collector.hits);\n\n  }\n\n","sourceOld":"  public void test() throws Exception {\n\n    InstantiatedIndex index = new InstantiatedIndex();\n    InstantiatedIndexReader reader = new InstantiatedIndexReader(index);\n    IndexSearcher searcher = newSearcher(reader);\n    InstantiatedIndexWriter writer = new InstantiatedIndexWriter(index);\n\n    Document doc;\n    Collector collector;\n\n    doc = new Document();\n    doc.add(new Field(\"f\", \"a\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    writer.addDocument(doc);\n    writer.commit();\n\n    collector = new Collector();\n    searcher.search(new TermQuery(new Term(\"f\", \"a\")), collector);\n    assertEquals(1, collector.hits);\n\n    doc = new Document();\n    doc.add(new Field(\"f\", \"a\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    writer.addDocument(doc);\n    writer.commit();\n\n    collector = new Collector();\n    searcher.search(new TermQuery(new Term(\"f\", \"a\")), collector);\n    assertEquals(2, collector.hits);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/contrib/instantiated/src/test/org/apache/lucene/store/instantiated/TestRealTime#test().mjava","pathOld":"lucene/contrib/instantiated/src/test/org/apache/lucene/store/instantiated/TestRealTime#test().mjava","sourceNew":"  public void test() throws Exception {\n\n    InstantiatedIndex index = new InstantiatedIndex();\n    InstantiatedIndexReader reader = new InstantiatedIndexReader(index);\n    IndexSearcher searcher = newSearcher(reader, false);\n    InstantiatedIndexWriter writer = new InstantiatedIndexWriter(index);\n\n    Document doc;\n    Collector collector;\n\n    doc = new Document();\n    doc.add(new Field(\"f\", \"a\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    writer.addDocument(doc);\n    writer.commit();\n\n    collector = new Collector();\n    searcher.search(new TermQuery(new Term(\"f\", \"a\")), collector);\n    assertEquals(1, collector.hits);\n\n    doc = new Document();\n    doc.add(new Field(\"f\", \"a\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    writer.addDocument(doc);\n    writer.commit();\n\n    collector = new Collector();\n    searcher.search(new TermQuery(new Term(\"f\", \"a\")), collector);\n    assertEquals(2, collector.hits);\n\n  }\n\n","sourceOld":"  public void test() throws Exception {\n\n    InstantiatedIndex index = new InstantiatedIndex();\n    InstantiatedIndexReader reader = new InstantiatedIndexReader(index);\n    IndexSearcher searcher = newSearcher(reader);\n    InstantiatedIndexWriter writer = new InstantiatedIndexWriter(index);\n\n    Document doc;\n    Collector collector;\n\n    doc = new Document();\n    doc.add(new Field(\"f\", \"a\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    writer.addDocument(doc);\n    writer.commit();\n\n    collector = new Collector();\n    searcher.search(new TermQuery(new Term(\"f\", \"a\")), collector);\n    assertEquals(1, collector.hits);\n\n    doc = new Document();\n    doc.add(new Field(\"f\", \"a\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    writer.addDocument(doc);\n    writer.commit();\n\n    collector = new Collector();\n    searcher.search(new TermQuery(new Term(\"f\", \"a\")), collector);\n    assertEquals(2, collector.hits);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1509f151d7692d84fae414b2b799ac06ba60fcb4","date":1314451621,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/contrib/instantiated/src/test/org/apache/lucene/store/instantiated/TestRealTime#test().mjava","pathOld":"lucene/contrib/instantiated/src/test/org/apache/lucene/store/instantiated/TestRealTime#test().mjava","sourceNew":"  public void test() throws Exception {\n\n    InstantiatedIndex index = new InstantiatedIndex();\n    InstantiatedIndexReader reader = new InstantiatedIndexReader(index);\n    IndexSearcher searcher = newSearcher(reader, false);\n    InstantiatedIndexWriter writer = new InstantiatedIndexWriter(index);\n\n    Document doc;\n    Collector collector;\n\n    doc = new Document();\n    doc.add(new StringField(\"f\", \"a\"));\n    writer.addDocument(doc);\n    writer.commit();\n\n    collector = new Collector();\n    searcher.search(new TermQuery(new Term(\"f\", \"a\")), collector);\n    assertEquals(1, collector.hits);\n\n    doc = new Document();\n    doc.add(new StringField(\"f\", \"a\"));\n    writer.addDocument(doc);\n    writer.commit();\n\n    collector = new Collector();\n    searcher.search(new TermQuery(new Term(\"f\", \"a\")), collector);\n    assertEquals(2, collector.hits);\n\n  }\n\n","sourceOld":"  public void test() throws Exception {\n\n    InstantiatedIndex index = new InstantiatedIndex();\n    InstantiatedIndexReader reader = new InstantiatedIndexReader(index);\n    IndexSearcher searcher = newSearcher(reader, false);\n    InstantiatedIndexWriter writer = new InstantiatedIndexWriter(index);\n\n    Document doc;\n    Collector collector;\n\n    doc = new Document();\n    doc.add(new Field(\"f\", \"a\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    writer.addDocument(doc);\n    writer.commit();\n\n    collector = new Collector();\n    searcher.search(new TermQuery(new Term(\"f\", \"a\")), collector);\n    assertEquals(1, collector.hits);\n\n    doc = new Document();\n    doc.add(new Field(\"f\", \"a\", Field.Store.NO, Field.Index.NOT_ANALYZED));\n    writer.addDocument(doc);\n    writer.commit();\n\n    collector = new Collector();\n    searcher.search(new TermQuery(new Term(\"f\", \"a\")), collector);\n    assertEquals(2, collector.hits);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cc749c053615f5871f3b95715fe292f34e70a53","date":1321470575,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/contrib/instantiated/src/test/org/apache/lucene/store/instantiated/TestRealTime#test().mjava","sourceNew":null,"sourceOld":"  public void test() throws Exception {\n\n    InstantiatedIndex index = new InstantiatedIndex();\n    InstantiatedIndexReader reader = new InstantiatedIndexReader(index);\n    IndexSearcher searcher = newSearcher(reader, false);\n    InstantiatedIndexWriter writer = new InstantiatedIndexWriter(index);\n\n    Document doc;\n    Collector collector;\n\n    doc = new Document();\n    doc.add(new StringField(\"f\", \"a\"));\n    writer.addDocument(doc);\n    writer.commit();\n\n    collector = new Collector();\n    searcher.search(new TermQuery(new Term(\"f\", \"a\")), collector);\n    assertEquals(1, collector.hits);\n\n    doc = new Document();\n    doc.add(new StringField(\"f\", \"a\"));\n    writer.addDocument(doc);\n    writer.commit();\n\n    collector = new Collector();\n    searcher.search(new TermQuery(new Term(\"f\", \"a\")), collector);\n    assertEquals(2, collector.hits);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7bb6ff08896b18d351dd6d23825bbb43bfd68330":["790e1fde4caa765b3faaad3fbcd25c6973450336"],"790e1fde4caa765b3faaad3fbcd25c6973450336":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a3776dccca01c11e7046323cfad46a3b4a471233":["790e1fde4caa765b3faaad3fbcd25c6973450336","7bb6ff08896b18d351dd6d23825bbb43bfd68330"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["9454a6510e2db155fb01faa5c049b06ece95fab9","790e1fde4caa765b3faaad3fbcd25c6973450336"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["29ef99d61cda9641b6250bf9567329a6e65f901d","7bb6ff08896b18d351dd6d23825bbb43bfd68330"],"3cc749c053615f5871f3b95715fe292f34e70a53":["1509f151d7692d84fae414b2b799ac06ba60fcb4"],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["7bb6ff08896b18d351dd6d23825bbb43bfd68330"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["9454a6510e2db155fb01faa5c049b06ece95fab9","790e1fde4caa765b3faaad3fbcd25c6973450336"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3cc749c053615f5871f3b95715fe292f34e70a53"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"7bb6ff08896b18d351dd6d23825bbb43bfd68330":["a3776dccca01c11e7046323cfad46a3b4a471233","135621f3a0670a9394eb563224a3b76cc4dddc0f","1509f151d7692d84fae414b2b799ac06ba60fcb4"],"790e1fde4caa765b3faaad3fbcd25c6973450336":["7bb6ff08896b18d351dd6d23825bbb43bfd68330","a3776dccca01c11e7046323cfad46a3b4a471233","29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"a3776dccca01c11e7046323cfad46a3b4a471233":[],"29ef99d61cda9641b6250bf9567329a6e65f901d":["135621f3a0670a9394eb563224a3b76cc4dddc0f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":[],"3cc749c053615f5871f3b95715fe292f34e70a53":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["3cc749c053615f5871f3b95715fe292f34e70a53"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["790e1fde4caa765b3faaad3fbcd25c6973450336","29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a3776dccca01c11e7046323cfad46a3b4a471233","135621f3a0670a9394eb563224a3b76cc4dddc0f","bde51b089eb7f86171eb3406e38a274743f9b7ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}