{"path":"solr/core/src/test/org/apache/solr/search/TestRTGBase#getFirstMatch(IndexReader,Term).mjava","commits":[{"id":"2b2e7536fb06d1abad6c7543a0657bdad5242c5e","date":1341417762,"type":1,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestRTGBase#getFirstMatch(IndexReader,Term).mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestRealTimeGet#getFirstMatch(IndexReader,Term).mjava","sourceNew":"  protected int getFirstMatch(IndexReader r, Term t) throws IOException {\n    Fields fields = MultiFields.getFields(r);\n    if (fields == null) return -1;\n    Terms terms = fields.terms(t.field());\n    if (terms == null) return -1;\n    BytesRef termBytes = t.bytes();\n    final TermsEnum termsEnum = terms.iterator(null);\n    if (!termsEnum.seekExact(termBytes, false)) {\n      return -1;\n    }\n    DocsEnum docs = termsEnum.docs(MultiFields.getLiveDocs(r), null, false);\n    int id = docs.nextDoc();\n    if (id != DocIdSetIterator.NO_MORE_DOCS) {\n      int next = docs.nextDoc();\n      assertEquals(DocIdSetIterator.NO_MORE_DOCS, next);\n    }\n    return id == DocIdSetIterator.NO_MORE_DOCS ? -1 : id;\n  }\n\n","sourceOld":"  public int getFirstMatch(IndexReader r, Term t) throws IOException {\n    Fields fields = MultiFields.getFields(r);\n    if (fields == null) return -1;\n    Terms terms = fields.terms(t.field());\n    if (terms == null) return -1;\n    BytesRef termBytes = t.bytes();\n    final TermsEnum termsEnum = terms.iterator(null);\n    if (!termsEnum.seekExact(termBytes, false)) {\n      return -1;\n    }\n    DocsEnum docs = termsEnum.docs(MultiFields.getLiveDocs(r), null, false);\n    int id = docs.nextDoc();\n    if (id != DocIdSetIterator.NO_MORE_DOCS) {\n      int next = docs.nextDoc();\n      assertEquals(DocIdSetIterator.NO_MORE_DOCS, next);\n    }\n    return id == DocIdSetIterator.NO_MORE_DOCS ? -1 : id;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/search/TestRTGBase#getFirstMatch(IndexReader,Term).mjava","pathOld":"/dev/null","sourceNew":"  protected int getFirstMatch(IndexReader r, Term t) throws IOException {\n    Fields fields = MultiFields.getFields(r);\n    if (fields == null) return -1;\n    Terms terms = fields.terms(t.field());\n    if (terms == null) return -1;\n    BytesRef termBytes = t.bytes();\n    final TermsEnum termsEnum = terms.iterator(null);\n    if (!termsEnum.seekExact(termBytes, false)) {\n      return -1;\n    }\n    DocsEnum docs = termsEnum.docs(MultiFields.getLiveDocs(r), null, false);\n    int id = docs.nextDoc();\n    if (id != DocIdSetIterator.NO_MORE_DOCS) {\n      int next = docs.nextDoc();\n      assertEquals(DocIdSetIterator.NO_MORE_DOCS, next);\n    }\n    return id == DocIdSetIterator.NO_MORE_DOCS ? -1 : id;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"02331260bb246364779cb6f04919ca47900d01bb","date":1343749884,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestRTGBase#getFirstMatch(IndexReader,Term).mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestRTGBase#getFirstMatch(IndexReader,Term).mjava","sourceNew":"  protected int getFirstMatch(IndexReader r, Term t) throws IOException {\n    Fields fields = MultiFields.getFields(r);\n    if (fields == null) return -1;\n    Terms terms = fields.terms(t.field());\n    if (terms == null) return -1;\n    BytesRef termBytes = t.bytes();\n    final TermsEnum termsEnum = terms.iterator(null);\n    if (!termsEnum.seekExact(termBytes, false)) {\n      return -1;\n    }\n    DocsEnum docs = termsEnum.docs(MultiFields.getLiveDocs(r), null, 0);\n    int id = docs.nextDoc();\n    if (id != DocIdSetIterator.NO_MORE_DOCS) {\n      int next = docs.nextDoc();\n      assertEquals(DocIdSetIterator.NO_MORE_DOCS, next);\n    }\n    return id == DocIdSetIterator.NO_MORE_DOCS ? -1 : id;\n  }\n\n","sourceOld":"  protected int getFirstMatch(IndexReader r, Term t) throws IOException {\n    Fields fields = MultiFields.getFields(r);\n    if (fields == null) return -1;\n    Terms terms = fields.terms(t.field());\n    if (terms == null) return -1;\n    BytesRef termBytes = t.bytes();\n    final TermsEnum termsEnum = terms.iterator(null);\n    if (!termsEnum.seekExact(termBytes, false)) {\n      return -1;\n    }\n    DocsEnum docs = termsEnum.docs(MultiFields.getLiveDocs(r), null, false);\n    int id = docs.nextDoc();\n    if (id != DocIdSetIterator.NO_MORE_DOCS) {\n      int next = docs.nextDoc();\n      assertEquals(DocIdSetIterator.NO_MORE_DOCS, next);\n    }\n    return id == DocIdSetIterator.NO_MORE_DOCS ? -1 : id;\n  }\n\n","bugFix":["2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","date":1343768312,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/search/TestRTGBase#getFirstMatch(IndexReader,Term).mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestRTGBase#getFirstMatch(IndexReader,Term).mjava","sourceNew":"  protected int getFirstMatch(IndexReader r, Term t) throws IOException {\n    Fields fields = MultiFields.getFields(r);\n    if (fields == null) return -1;\n    Terms terms = fields.terms(t.field());\n    if (terms == null) return -1;\n    BytesRef termBytes = t.bytes();\n    final TermsEnum termsEnum = terms.iterator(null);\n    if (!termsEnum.seekExact(termBytes, false)) {\n      return -1;\n    }\n    DocsEnum docs = termsEnum.docs(MultiFields.getLiveDocs(r), null, 0);\n    int id = docs.nextDoc();\n    if (id != DocIdSetIterator.NO_MORE_DOCS) {\n      int next = docs.nextDoc();\n      assertEquals(DocIdSetIterator.NO_MORE_DOCS, next);\n    }\n    return id == DocIdSetIterator.NO_MORE_DOCS ? -1 : id;\n  }\n\n","sourceOld":"  protected int getFirstMatch(IndexReader r, Term t) throws IOException {\n    Fields fields = MultiFields.getFields(r);\n    if (fields == null) return -1;\n    Terms terms = fields.terms(t.field());\n    if (terms == null) return -1;\n    BytesRef termBytes = t.bytes();\n    final TermsEnum termsEnum = terms.iterator(null);\n    if (!termsEnum.seekExact(termBytes, false)) {\n      return -1;\n    }\n    DocsEnum docs = termsEnum.docs(MultiFields.getLiveDocs(r), null, false);\n    int id = docs.nextDoc();\n    if (id != DocIdSetIterator.NO_MORE_DOCS) {\n      int next = docs.nextDoc();\n      assertEquals(DocIdSetIterator.NO_MORE_DOCS, next);\n    }\n    return id == DocIdSetIterator.NO_MORE_DOCS ? -1 : id;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d6f074e73200c07d54f242d3880a8da5a35ff97b","date":1344507653,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/search/TestRTGBase#getFirstMatch(IndexReader,Term).mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestRTGBase#getFirstMatch(IndexReader,Term).mjava","sourceNew":"  protected int getFirstMatch(IndexReader r, Term t) throws IOException {\n    Fields fields = MultiFields.getFields(r);\n    if (fields == null) return -1;\n    Terms terms = fields.terms(t.field());\n    if (terms == null) return -1;\n    BytesRef termBytes = t.bytes();\n    final TermsEnum termsEnum = terms.iterator(null);\n    if (!termsEnum.seekExact(termBytes, false)) {\n      return -1;\n    }\n    DocsEnum docs = termsEnum.docs(MultiFields.getLiveDocs(r), null, 0);\n    int id = docs.nextDoc();\n    if (id != DocIdSetIterator.NO_MORE_DOCS) {\n      int next = docs.nextDoc();\n      assertEquals(DocIdSetIterator.NO_MORE_DOCS, next);\n    }\n    return id == DocIdSetIterator.NO_MORE_DOCS ? -1 : id;\n  }\n\n","sourceOld":"  protected int getFirstMatch(IndexReader r, Term t) throws IOException {\n    Fields fields = MultiFields.getFields(r);\n    if (fields == null) return -1;\n    Terms terms = fields.terms(t.field());\n    if (terms == null) return -1;\n    BytesRef termBytes = t.bytes();\n    final TermsEnum termsEnum = terms.iterator(null);\n    if (!termsEnum.seekExact(termBytes, false)) {\n      return -1;\n    }\n    DocsEnum docs = termsEnum.docs(MultiFields.getLiveDocs(r), null, false);\n    int id = docs.nextDoc();\n    if (id != DocIdSetIterator.NO_MORE_DOCS) {\n      int next = docs.nextDoc();\n      assertEquals(DocIdSetIterator.NO_MORE_DOCS, next);\n    }\n    return id == DocIdSetIterator.NO_MORE_DOCS ? -1 : id;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"15250ca94ba8ab3bcdd476daf6bf3f3febb92640","date":1355200097,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestRTGBase#getFirstMatch(IndexReader,Term).mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestRTGBase#getFirstMatch(IndexReader,Term).mjava","sourceNew":"  protected int getFirstMatch(IndexReader r, Term t) throws IOException {\n    Fields fields = MultiFields.getFields(r);\n    if (fields == null) return -1;\n    Terms terms = fields.terms(t.field());\n    if (terms == null) return -1;\n    BytesRef termBytes = t.bytes();\n    final TermsEnum termsEnum = terms.iterator(null);\n    if (!termsEnum.seekExact(termBytes, false)) {\n      return -1;\n    }\n    DocsEnum docs = termsEnum.docs(MultiFields.getLiveDocs(r), null, DocsEnum.FLAG_NONE);\n    int id = docs.nextDoc();\n    if (id != DocIdSetIterator.NO_MORE_DOCS) {\n      int next = docs.nextDoc();\n      assertEquals(DocIdSetIterator.NO_MORE_DOCS, next);\n    }\n    return id == DocIdSetIterator.NO_MORE_DOCS ? -1 : id;\n  }\n\n","sourceOld":"  protected int getFirstMatch(IndexReader r, Term t) throws IOException {\n    Fields fields = MultiFields.getFields(r);\n    if (fields == null) return -1;\n    Terms terms = fields.terms(t.field());\n    if (terms == null) return -1;\n    BytesRef termBytes = t.bytes();\n    final TermsEnum termsEnum = terms.iterator(null);\n    if (!termsEnum.seekExact(termBytes, false)) {\n      return -1;\n    }\n    DocsEnum docs = termsEnum.docs(MultiFields.getLiveDocs(r), null, 0);\n    int id = docs.nextDoc();\n    if (id != DocIdSetIterator.NO_MORE_DOCS) {\n      int next = docs.nextDoc();\n      assertEquals(DocIdSetIterator.NO_MORE_DOCS, next);\n    }\n    return id == DocIdSetIterator.NO_MORE_DOCS ? -1 : id;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/search/TestRTGBase#getFirstMatch(IndexReader,Term).mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestRTGBase#getFirstMatch(IndexReader,Term).mjava","sourceNew":"  protected int getFirstMatch(IndexReader r, Term t) throws IOException {\n    Fields fields = MultiFields.getFields(r);\n    if (fields == null) return -1;\n    Terms terms = fields.terms(t.field());\n    if (terms == null) return -1;\n    BytesRef termBytes = t.bytes();\n    final TermsEnum termsEnum = terms.iterator(null);\n    if (!termsEnum.seekExact(termBytes, false)) {\n      return -1;\n    }\n    DocsEnum docs = termsEnum.docs(MultiFields.getLiveDocs(r), null, DocsEnum.FLAG_NONE);\n    int id = docs.nextDoc();\n    if (id != DocIdSetIterator.NO_MORE_DOCS) {\n      int next = docs.nextDoc();\n      assertEquals(DocIdSetIterator.NO_MORE_DOCS, next);\n    }\n    return id == DocIdSetIterator.NO_MORE_DOCS ? -1 : id;\n  }\n\n","sourceOld":"  protected int getFirstMatch(IndexReader r, Term t) throws IOException {\n    Fields fields = MultiFields.getFields(r);\n    if (fields == null) return -1;\n    Terms terms = fields.terms(t.field());\n    if (terms == null) return -1;\n    BytesRef termBytes = t.bytes();\n    final TermsEnum termsEnum = terms.iterator(null);\n    if (!termsEnum.seekExact(termBytes, false)) {\n      return -1;\n    }\n    DocsEnum docs = termsEnum.docs(MultiFields.getLiveDocs(r), null, 0);\n    int id = docs.nextDoc();\n    if (id != DocIdSetIterator.NO_MORE_DOCS) {\n      int next = docs.nextDoc();\n      assertEquals(DocIdSetIterator.NO_MORE_DOCS, next);\n    }\n    return id == DocIdSetIterator.NO_MORE_DOCS ? -1 : id;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"eee5f2a24465d2c9a5f86ab84b7c35041a30fda8","date":1373996650,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestRTGBase#getFirstMatch(IndexReader,Term).mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestRTGBase#getFirstMatch(IndexReader,Term).mjava","sourceNew":"  protected int getFirstMatch(IndexReader r, Term t) throws IOException {\n    Fields fields = MultiFields.getFields(r);\n    if (fields == null) return -1;\n    Terms terms = fields.terms(t.field());\n    if (terms == null) return -1;\n    BytesRef termBytes = t.bytes();\n    final TermsEnum termsEnum = terms.iterator(null);\n    if (!termsEnum.seekExact(termBytes)) {\n      return -1;\n    }\n    DocsEnum docs = termsEnum.docs(MultiFields.getLiveDocs(r), null, DocsEnum.FLAG_NONE);\n    int id = docs.nextDoc();\n    if (id != DocIdSetIterator.NO_MORE_DOCS) {\n      int next = docs.nextDoc();\n      assertEquals(DocIdSetIterator.NO_MORE_DOCS, next);\n    }\n    return id == DocIdSetIterator.NO_MORE_DOCS ? -1 : id;\n  }\n\n","sourceOld":"  protected int getFirstMatch(IndexReader r, Term t) throws IOException {\n    Fields fields = MultiFields.getFields(r);\n    if (fields == null) return -1;\n    Terms terms = fields.terms(t.field());\n    if (terms == null) return -1;\n    BytesRef termBytes = t.bytes();\n    final TermsEnum termsEnum = terms.iterator(null);\n    if (!termsEnum.seekExact(termBytes, false)) {\n      return -1;\n    }\n    DocsEnum docs = termsEnum.docs(MultiFields.getLiveDocs(r), null, DocsEnum.FLAG_NONE);\n    int id = docs.nextDoc();\n    if (id != DocIdSetIterator.NO_MORE_DOCS) {\n      int next = docs.nextDoc();\n      assertEquals(DocIdSetIterator.NO_MORE_DOCS, next);\n    }\n    return id == DocIdSetIterator.NO_MORE_DOCS ? -1 : id;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","date":1376375609,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/search/TestRTGBase#getFirstMatch(IndexReader,Term).mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestRTGBase#getFirstMatch(IndexReader,Term).mjava","sourceNew":"  protected int getFirstMatch(IndexReader r, Term t) throws IOException {\n    Fields fields = MultiFields.getFields(r);\n    if (fields == null) return -1;\n    Terms terms = fields.terms(t.field());\n    if (terms == null) return -1;\n    BytesRef termBytes = t.bytes();\n    final TermsEnum termsEnum = terms.iterator(null);\n    if (!termsEnum.seekExact(termBytes)) {\n      return -1;\n    }\n    DocsEnum docs = termsEnum.docs(MultiFields.getLiveDocs(r), null, DocsEnum.FLAG_NONE);\n    int id = docs.nextDoc();\n    if (id != DocIdSetIterator.NO_MORE_DOCS) {\n      int next = docs.nextDoc();\n      assertEquals(DocIdSetIterator.NO_MORE_DOCS, next);\n    }\n    return id == DocIdSetIterator.NO_MORE_DOCS ? -1 : id;\n  }\n\n","sourceOld":"  protected int getFirstMatch(IndexReader r, Term t) throws IOException {\n    Fields fields = MultiFields.getFields(r);\n    if (fields == null) return -1;\n    Terms terms = fields.terms(t.field());\n    if (terms == null) return -1;\n    BytesRef termBytes = t.bytes();\n    final TermsEnum termsEnum = terms.iterator(null);\n    if (!termsEnum.seekExact(termBytes, false)) {\n      return -1;\n    }\n    DocsEnum docs = termsEnum.docs(MultiFields.getLiveDocs(r), null, DocsEnum.FLAG_NONE);\n    int id = docs.nextDoc();\n    if (id != DocIdSetIterator.NO_MORE_DOCS) {\n      int next = docs.nextDoc();\n      assertEquals(DocIdSetIterator.NO_MORE_DOCS, next);\n    }\n    return id == DocIdSetIterator.NO_MORE_DOCS ? -1 : id;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8028ab7a24273833d53d35eb160dba5b57283cf5","date":1416767720,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestRTGBase#getFirstMatch(IndexReader,Term).mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestRTGBase#getFirstMatch(IndexReader,Term).mjava","sourceNew":"  protected int getFirstMatch(IndexReader r, Term t) throws IOException {\n    Terms terms = MultiFields.getTerms(r, t.field());\n    if (terms == null) return -1;\n    BytesRef termBytes = t.bytes();\n    final TermsEnum termsEnum = terms.iterator(null);\n    if (!termsEnum.seekExact(termBytes)) {\n      return -1;\n    }\n    DocsEnum docs = termsEnum.docs(MultiFields.getLiveDocs(r), null, DocsEnum.FLAG_NONE);\n    int id = docs.nextDoc();\n    if (id != DocIdSetIterator.NO_MORE_DOCS) {\n      int next = docs.nextDoc();\n      assertEquals(DocIdSetIterator.NO_MORE_DOCS, next);\n    }\n    return id == DocIdSetIterator.NO_MORE_DOCS ? -1 : id;\n  }\n\n","sourceOld":"  protected int getFirstMatch(IndexReader r, Term t) throws IOException {\n    Fields fields = MultiFields.getFields(r);\n    if (fields == null) return -1;\n    Terms terms = fields.terms(t.field());\n    if (terms == null) return -1;\n    BytesRef termBytes = t.bytes();\n    final TermsEnum termsEnum = terms.iterator(null);\n    if (!termsEnum.seekExact(termBytes)) {\n      return -1;\n    }\n    DocsEnum docs = termsEnum.docs(MultiFields.getLiveDocs(r), null, DocsEnum.FLAG_NONE);\n    int id = docs.nextDoc();\n    if (id != DocIdSetIterator.NO_MORE_DOCS) {\n      int next = docs.nextDoc();\n      assertEquals(DocIdSetIterator.NO_MORE_DOCS, next);\n    }\n    return id == DocIdSetIterator.NO_MORE_DOCS ? -1 : id;\n  }\n\n","bugFix":["7a3554ff15950ad0e3bcbb4e4e2ddb45b0b0f27e","e3f8ac3877ad6d160de0fd3a6f7155b243dfbddf"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"51f5280f31484820499077f41fcdfe92d527d9dc","date":1423229122,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestRTGBase#getFirstMatch(IndexReader,Term).mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestRTGBase#getFirstMatch(IndexReader,Term).mjava","sourceNew":"  protected int getFirstMatch(IndexReader r, Term t) throws IOException {\n    Terms terms = MultiFields.getTerms(r, t.field());\n    if (terms == null) return -1;\n    BytesRef termBytes = t.bytes();\n    final TermsEnum termsEnum = terms.iterator(null);\n    if (!termsEnum.seekExact(termBytes)) {\n      return -1;\n    }\n    PostingsEnum docs = termsEnum.postings(MultiFields.getLiveDocs(r), null, PostingsEnum.FLAG_NONE);\n    int id = docs.nextDoc();\n    if (id != DocIdSetIterator.NO_MORE_DOCS) {\n      int next = docs.nextDoc();\n      assertEquals(DocIdSetIterator.NO_MORE_DOCS, next);\n    }\n    return id == DocIdSetIterator.NO_MORE_DOCS ? -1 : id;\n  }\n\n","sourceOld":"  protected int getFirstMatch(IndexReader r, Term t) throws IOException {\n    Terms terms = MultiFields.getTerms(r, t.field());\n    if (terms == null) return -1;\n    BytesRef termBytes = t.bytes();\n    final TermsEnum termsEnum = terms.iterator(null);\n    if (!termsEnum.seekExact(termBytes)) {\n      return -1;\n    }\n    DocsEnum docs = termsEnum.docs(MultiFields.getLiveDocs(r), null, DocsEnum.FLAG_NONE);\n    int id = docs.nextDoc();\n    if (id != DocIdSetIterator.NO_MORE_DOCS) {\n      int next = docs.nextDoc();\n      assertEquals(DocIdSetIterator.NO_MORE_DOCS, next);\n    }\n    return id == DocIdSetIterator.NO_MORE_DOCS ? -1 : id;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e73063b92d958076ef4ae8beb5f493e8ccdcecb4","date":1424177215,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestRTGBase#getFirstMatch(IndexReader,Term).mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestRTGBase#getFirstMatch(IndexReader,Term).mjava","sourceNew":"  protected int getFirstMatch(IndexReader r, Term t) throws IOException {\n    Terms terms = MultiFields.getTerms(r, t.field());\n    if (terms == null) return -1;\n    BytesRef termBytes = t.bytes();\n    final TermsEnum termsEnum = terms.iterator(null);\n    if (!termsEnum.seekExact(termBytes)) {\n      return -1;\n    }\n    PostingsEnum docs = termsEnum.postings(MultiFields.getLiveDocs(r), null, PostingsEnum.NONE);\n    int id = docs.nextDoc();\n    if (id != DocIdSetIterator.NO_MORE_DOCS) {\n      int next = docs.nextDoc();\n      assertEquals(DocIdSetIterator.NO_MORE_DOCS, next);\n    }\n    return id == DocIdSetIterator.NO_MORE_DOCS ? -1 : id;\n  }\n\n","sourceOld":"  protected int getFirstMatch(IndexReader r, Term t) throws IOException {\n    Terms terms = MultiFields.getTerms(r, t.field());\n    if (terms == null) return -1;\n    BytesRef termBytes = t.bytes();\n    final TermsEnum termsEnum = terms.iterator(null);\n    if (!termsEnum.seekExact(termBytes)) {\n      return -1;\n    }\n    PostingsEnum docs = termsEnum.postings(MultiFields.getLiveDocs(r), null, PostingsEnum.FLAG_NONE);\n    int id = docs.nextDoc();\n    if (id != DocIdSetIterator.NO_MORE_DOCS) {\n      int next = docs.nextDoc();\n      assertEquals(DocIdSetIterator.NO_MORE_DOCS, next);\n    }\n    return id == DocIdSetIterator.NO_MORE_DOCS ? -1 : id;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0a773283ef5eab2e9c7136eeb66574a4b7a2dc82","date":1428522487,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestRTGBase#getFirstMatch(IndexReader,Term).mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestRTGBase#getFirstMatch(IndexReader,Term).mjava","sourceNew":"  protected int getFirstMatch(IndexReader r, Term t) throws IOException {\n    Terms terms = MultiFields.getTerms(r, t.field());\n    if (terms == null) return -1;\n    BytesRef termBytes = t.bytes();\n    final TermsEnum termsEnum = terms.iterator();\n    if (!termsEnum.seekExact(termBytes)) {\n      return -1;\n    }\n    PostingsEnum docs = termsEnum.postings(MultiFields.getLiveDocs(r), null, PostingsEnum.NONE);\n    int id = docs.nextDoc();\n    if (id != DocIdSetIterator.NO_MORE_DOCS) {\n      int next = docs.nextDoc();\n      assertEquals(DocIdSetIterator.NO_MORE_DOCS, next);\n    }\n    return id == DocIdSetIterator.NO_MORE_DOCS ? -1 : id;\n  }\n\n","sourceOld":"  protected int getFirstMatch(IndexReader r, Term t) throws IOException {\n    Terms terms = MultiFields.getTerms(r, t.field());\n    if (terms == null) return -1;\n    BytesRef termBytes = t.bytes();\n    final TermsEnum termsEnum = terms.iterator(null);\n    if (!termsEnum.seekExact(termBytes)) {\n      return -1;\n    }\n    PostingsEnum docs = termsEnum.postings(MultiFields.getLiveDocs(r), null, PostingsEnum.NONE);\n    int id = docs.nextDoc();\n    if (id != DocIdSetIterator.NO_MORE_DOCS) {\n      int next = docs.nextDoc();\n      assertEquals(DocIdSetIterator.NO_MORE_DOCS, next);\n    }\n    return id == DocIdSetIterator.NO_MORE_DOCS ? -1 : id;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f4464508ee83288c8c4585b533f9faaa93aa314","date":1435240759,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestRTGBase#getFirstMatch(IndexReader,Term).mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestRTGBase#getFirstMatch(IndexReader,Term).mjava","sourceNew":"  protected int getFirstMatch(IndexReader r, Term t) throws IOException {\n    Terms terms = MultiFields.getTerms(r, t.field());\n    if (terms == null) return -1;\n    BytesRef termBytes = t.bytes();\n    final TermsEnum termsEnum = terms.iterator();\n    if (!termsEnum.seekExact(termBytes)) {\n      return -1;\n    }\n    PostingsEnum docs = termsEnum.postings(null, PostingsEnum.NONE);\n    docs = BitsFilteredPostingsEnum.wrap(docs, MultiFields.getLiveDocs(r));\n    int id = docs.nextDoc();\n    if (id != DocIdSetIterator.NO_MORE_DOCS) {\n      int next = docs.nextDoc();\n      assertEquals(DocIdSetIterator.NO_MORE_DOCS, next);\n    }\n    return id == DocIdSetIterator.NO_MORE_DOCS ? -1 : id;\n  }\n\n","sourceOld":"  protected int getFirstMatch(IndexReader r, Term t) throws IOException {\n    Terms terms = MultiFields.getTerms(r, t.field());\n    if (terms == null) return -1;\n    BytesRef termBytes = t.bytes();\n    final TermsEnum termsEnum = terms.iterator();\n    if (!termsEnum.seekExact(termBytes)) {\n      return -1;\n    }\n    PostingsEnum docs = termsEnum.postings(MultiFields.getLiveDocs(r), null, PostingsEnum.NONE);\n    int id = docs.nextDoc();\n    if (id != DocIdSetIterator.NO_MORE_DOCS) {\n      int next = docs.nextDoc();\n      assertEquals(DocIdSetIterator.NO_MORE_DOCS, next);\n    }\n    return id == DocIdSetIterator.NO_MORE_DOCS ? -1 : id;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"04e775de416dd2d8067b10db1c8af975a1d5017e","date":1539906554,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestRTGBase#getFirstMatch(IndexReader,Term).mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestRTGBase#getFirstMatch(IndexReader,Term).mjava","sourceNew":"  protected int getFirstMatch(IndexReader r, Term t) throws IOException {\n    Terms terms = MultiTerms.getTerms(r, t.field());\n    if (terms == null) return -1;\n    BytesRef termBytes = t.bytes();\n    final TermsEnum termsEnum = terms.iterator();\n    if (!termsEnum.seekExact(termBytes)) {\n      return -1;\n    }\n    PostingsEnum docs = termsEnum.postings(null, PostingsEnum.NONE);\n    docs = BitsFilteredPostingsEnum.wrap(docs, MultiBits.getLiveDocs(r));\n    int id = docs.nextDoc();\n    if (id != DocIdSetIterator.NO_MORE_DOCS) {\n      int next = docs.nextDoc();\n      assertEquals(DocIdSetIterator.NO_MORE_DOCS, next);\n    }\n    return id == DocIdSetIterator.NO_MORE_DOCS ? -1 : id;\n  }\n\n","sourceOld":"  protected int getFirstMatch(IndexReader r, Term t) throws IOException {\n    Terms terms = MultiFields.getTerms(r, t.field());\n    if (terms == null) return -1;\n    BytesRef termBytes = t.bytes();\n    final TermsEnum termsEnum = terms.iterator();\n    if (!termsEnum.seekExact(termBytes)) {\n      return -1;\n    }\n    PostingsEnum docs = termsEnum.postings(null, PostingsEnum.NONE);\n    docs = BitsFilteredPostingsEnum.wrap(docs, MultiFields.getLiveDocs(r));\n    int id = docs.nextDoc();\n    if (id != DocIdSetIterator.NO_MORE_DOCS) {\n      int next = docs.nextDoc();\n      assertEquals(DocIdSetIterator.NO_MORE_DOCS, next);\n    }\n    return id == DocIdSetIterator.NO_MORE_DOCS ? -1 : id;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0a773283ef5eab2e9c7136eeb66574a4b7a2dc82":["e73063b92d958076ef4ae8beb5f493e8ccdcecb4"],"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["02331260bb246364779cb6f04919ca47900d01bb","15250ca94ba8ab3bcdd476daf6bf3f3febb92640"],"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":["15250ca94ba8ab3bcdd476daf6bf3f3febb92640","eee5f2a24465d2c9a5f86ab84b7c35041a30fda8"],"51f5280f31484820499077f41fcdfe92d527d9dc":["8028ab7a24273833d53d35eb160dba5b57283cf5"],"0f4464508ee83288c8c4585b533f9faaa93aa314":["0a773283ef5eab2e9c7136eeb66574a4b7a2dc82"],"e73063b92d958076ef4ae8beb5f493e8ccdcecb4":["51f5280f31484820499077f41fcdfe92d527d9dc"],"8028ab7a24273833d53d35eb160dba5b57283cf5":["eee5f2a24465d2c9a5f86ab84b7c35041a30fda8"],"15250ca94ba8ab3bcdd476daf6bf3f3febb92640":["02331260bb246364779cb6f04919ca47900d01bb"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2b2e7536fb06d1abad6c7543a0657bdad5242c5e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":["fe33227f6805edab2036cbb80645cc4e2d1fa424","02331260bb246364779cb6f04919ca47900d01bb"],"d6f074e73200c07d54f242d3880a8da5a35ff97b":["2b2e7536fb06d1abad6c7543a0657bdad5242c5e","02331260bb246364779cb6f04919ca47900d01bb"],"2b2e7536fb06d1abad6c7543a0657bdad5242c5e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"04e775de416dd2d8067b10db1c8af975a1d5017e":["0f4464508ee83288c8c4585b533f9faaa93aa314"],"eee5f2a24465d2c9a5f86ab84b7c35041a30fda8":["15250ca94ba8ab3bcdd476daf6bf3f3febb92640"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["04e775de416dd2d8067b10db1c8af975a1d5017e"],"02331260bb246364779cb6f04919ca47900d01bb":["2b2e7536fb06d1abad6c7543a0657bdad5242c5e"]},"commit2Childs":{"0a773283ef5eab2e9c7136eeb66574a4b7a2dc82":["0f4464508ee83288c8c4585b533f9faaa93aa314"],"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":[],"51f5280f31484820499077f41fcdfe92d527d9dc":["e73063b92d958076ef4ae8beb5f493e8ccdcecb4"],"e73063b92d958076ef4ae8beb5f493e8ccdcecb4":["0a773283ef5eab2e9c7136eeb66574a4b7a2dc82"],"0f4464508ee83288c8c4585b533f9faaa93aa314":["04e775de416dd2d8067b10db1c8af975a1d5017e"],"8028ab7a24273833d53d35eb160dba5b57283cf5":["51f5280f31484820499077f41fcdfe92d527d9dc"],"15250ca94ba8ab3bcdd476daf6bf3f3febb92640":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","eee5f2a24465d2c9a5f86ab84b7c35041a30fda8"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["fe33227f6805edab2036cbb80645cc4e2d1fa424","2b2e7536fb06d1abad6c7543a0657bdad5242c5e"],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":[],"d6f074e73200c07d54f242d3880a8da5a35ff97b":[],"2b2e7536fb06d1abad6c7543a0657bdad5242c5e":["fe33227f6805edab2036cbb80645cc4e2d1fa424","d6f074e73200c07d54f242d3880a8da5a35ff97b","02331260bb246364779cb6f04919ca47900d01bb"],"04e775de416dd2d8067b10db1c8af975a1d5017e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"eee5f2a24465d2c9a5f86ab84b7c35041a30fda8":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","8028ab7a24273833d53d35eb160dba5b57283cf5"],"02331260bb246364779cb6f04919ca47900d01bb":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","15250ca94ba8ab3bcdd476daf6bf3f3febb92640","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","d6f074e73200c07d54f242d3880a8da5a35ff97b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","d6f074e73200c07d54f242d3880a8da5a35ff97b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}