{"path":"modules/analysis/common/src/java/org/tartarus/snowball/ext/EnglishStemmer#stem().mjava","commits":[{"id":"0f080986da691a3bba7b757f43ab72cdc82b57ce","date":1273069619,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/java/org/tartarus/snowball/ext/EnglishStemmer#stem().mjava","pathOld":"lucene/contrib/analyzers/common/src/java/org/tartarus/snowball/ext/EnglishStemmer#stem().mjava","sourceNew":"        public boolean stem() {\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            int v_5;\n            int v_6;\n            int v_7;\n            int v_8;\n            int v_9;\n            int v_10;\n            int v_11;\n            int v_12;\n            int v_13;\n            // (, line 205\n            // or, line 207\n            lab0: do {\n                v_1 = cursor;\n                lab1: do {\n                    // call exception1, line 207\n                    if (!r_exception1())\n                    {\n                        break lab1;\n                    }\n                    break lab0;\n                } while (false);\n                cursor = v_1;\n                lab2: do {\n                    // not, line 208\n                    {\n                        v_2 = cursor;\n                        lab3: do {\n                            // hop, line 208\n                            {\n                                int c = cursor + 3;\n                                if (0 > c || c > limit)\n                                {\n                                    break lab3;\n                                }\n                                cursor = c;\n                            }\n                            break lab2;\n                        } while (false);\n                        cursor = v_2;\n                    }\n                    break lab0;\n                } while (false);\n                cursor = v_1;\n                // (, line 208\n                // do, line 209\n                v_3 = cursor;\n                lab4: do {\n                    // call prelude, line 209\n                    if (!r_prelude())\n                    {\n                        break lab4;\n                    }\n                } while (false);\n                cursor = v_3;\n                // do, line 210\n                v_4 = cursor;\n                lab5: do {\n                    // call mark_regions, line 210\n                    if (!r_mark_regions())\n                    {\n                        break lab5;\n                    }\n                } while (false);\n                cursor = v_4;\n                // backwards, line 211\n                limit_backward = cursor; cursor = limit;\n                // (, line 211\n                // do, line 213\n                v_5 = limit - cursor;\n                lab6: do {\n                    // call Step_1a, line 213\n                    if (!r_Step_1a())\n                    {\n                        break lab6;\n                    }\n                } while (false);\n                cursor = limit - v_5;\n                // or, line 215\n                lab7: do {\n                    v_6 = limit - cursor;\n                    lab8: do {\n                        // call exception2, line 215\n                        if (!r_exception2())\n                        {\n                            break lab8;\n                        }\n                        break lab7;\n                    } while (false);\n                    cursor = limit - v_6;\n                    // (, line 215\n                    // do, line 217\n                    v_7 = limit - cursor;\n                    lab9: do {\n                        // call Step_1b, line 217\n                        if (!r_Step_1b())\n                        {\n                            break lab9;\n                        }\n                    } while (false);\n                    cursor = limit - v_7;\n                    // do, line 218\n                    v_8 = limit - cursor;\n                    lab10: do {\n                        // call Step_1c, line 218\n                        if (!r_Step_1c())\n                        {\n                            break lab10;\n                        }\n                    } while (false);\n                    cursor = limit - v_8;\n                    // do, line 220\n                    v_9 = limit - cursor;\n                    lab11: do {\n                        // call Step_2, line 220\n                        if (!r_Step_2())\n                        {\n                            break lab11;\n                        }\n                    } while (false);\n                    cursor = limit - v_9;\n                    // do, line 221\n                    v_10 = limit - cursor;\n                    lab12: do {\n                        // call Step_3, line 221\n                        if (!r_Step_3())\n                        {\n                            break lab12;\n                        }\n                    } while (false);\n                    cursor = limit - v_10;\n                    // do, line 222\n                    v_11 = limit - cursor;\n                    lab13: do {\n                        // call Step_4, line 222\n                        if (!r_Step_4())\n                        {\n                            break lab13;\n                        }\n                    } while (false);\n                    cursor = limit - v_11;\n                    // do, line 224\n                    v_12 = limit - cursor;\n                    lab14: do {\n                        // call Step_5, line 224\n                        if (!r_Step_5())\n                        {\n                            break lab14;\n                        }\n                    } while (false);\n                    cursor = limit - v_12;\n                } while (false);\n                cursor = limit_backward;                // do, line 227\n                v_13 = cursor;\n                lab15: do {\n                    // call postlude, line 227\n                    if (!r_postlude())\n                    {\n                        break lab15;\n                    }\n                } while (false);\n                cursor = v_13;\n            } while (false);\n            return true;\n        }\n\n","sourceOld":"        public boolean stem() {\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            int v_5;\n            int v_6;\n            int v_7;\n            int v_8;\n            int v_9;\n            int v_10;\n            int v_11;\n            int v_12;\n            int v_13;\n            // (, line 205\n            // or, line 207\n            lab0: do {\n                v_1 = cursor;\n                lab1: do {\n                    // call exception1, line 207\n                    if (!r_exception1())\n                    {\n                        break lab1;\n                    }\n                    break lab0;\n                } while (false);\n                cursor = v_1;\n                lab2: do {\n                    // not, line 208\n                    {\n                        v_2 = cursor;\n                        lab3: do {\n                            // hop, line 208\n                            {\n                                int c = cursor + 3;\n                                if (0 > c || c > limit)\n                                {\n                                    break lab3;\n                                }\n                                cursor = c;\n                            }\n                            break lab2;\n                        } while (false);\n                        cursor = v_2;\n                    }\n                    break lab0;\n                } while (false);\n                cursor = v_1;\n                // (, line 208\n                // do, line 209\n                v_3 = cursor;\n                lab4: do {\n                    // call prelude, line 209\n                    if (!r_prelude())\n                    {\n                        break lab4;\n                    }\n                } while (false);\n                cursor = v_3;\n                // do, line 210\n                v_4 = cursor;\n                lab5: do {\n                    // call mark_regions, line 210\n                    if (!r_mark_regions())\n                    {\n                        break lab5;\n                    }\n                } while (false);\n                cursor = v_4;\n                // backwards, line 211\n                limit_backward = cursor; cursor = limit;\n                // (, line 211\n                // do, line 213\n                v_5 = limit - cursor;\n                lab6: do {\n                    // call Step_1a, line 213\n                    if (!r_Step_1a())\n                    {\n                        break lab6;\n                    }\n                } while (false);\n                cursor = limit - v_5;\n                // or, line 215\n                lab7: do {\n                    v_6 = limit - cursor;\n                    lab8: do {\n                        // call exception2, line 215\n                        if (!r_exception2())\n                        {\n                            break lab8;\n                        }\n                        break lab7;\n                    } while (false);\n                    cursor = limit - v_6;\n                    // (, line 215\n                    // do, line 217\n                    v_7 = limit - cursor;\n                    lab9: do {\n                        // call Step_1b, line 217\n                        if (!r_Step_1b())\n                        {\n                            break lab9;\n                        }\n                    } while (false);\n                    cursor = limit - v_7;\n                    // do, line 218\n                    v_8 = limit - cursor;\n                    lab10: do {\n                        // call Step_1c, line 218\n                        if (!r_Step_1c())\n                        {\n                            break lab10;\n                        }\n                    } while (false);\n                    cursor = limit - v_8;\n                    // do, line 220\n                    v_9 = limit - cursor;\n                    lab11: do {\n                        // call Step_2, line 220\n                        if (!r_Step_2())\n                        {\n                            break lab11;\n                        }\n                    } while (false);\n                    cursor = limit - v_9;\n                    // do, line 221\n                    v_10 = limit - cursor;\n                    lab12: do {\n                        // call Step_3, line 221\n                        if (!r_Step_3())\n                        {\n                            break lab12;\n                        }\n                    } while (false);\n                    cursor = limit - v_10;\n                    // do, line 222\n                    v_11 = limit - cursor;\n                    lab13: do {\n                        // call Step_4, line 222\n                        if (!r_Step_4())\n                        {\n                            break lab13;\n                        }\n                    } while (false);\n                    cursor = limit - v_11;\n                    // do, line 224\n                    v_12 = limit - cursor;\n                    lab14: do {\n                        // call Step_5, line 224\n                        if (!r_Step_5())\n                        {\n                            break lab14;\n                        }\n                    } while (false);\n                    cursor = limit - v_12;\n                } while (false);\n                cursor = limit_backward;                // do, line 227\n                v_13 = cursor;\n                lab15: do {\n                    // call postlude, line 227\n                    if (!r_postlude())\n                    {\n                        break lab15;\n                    }\n                } while (false);\n                cursor = v_13;\n            } while (false);\n            return true;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/EnglishStemmer#stem().mjava","pathOld":"modules/analysis/common/src/java/org/tartarus/snowball/ext/EnglishStemmer#stem().mjava","sourceNew":"        public boolean stem() {\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            int v_5;\n            int v_6;\n            int v_7;\n            int v_8;\n            int v_9;\n            int v_10;\n            int v_11;\n            int v_12;\n            int v_13;\n            // (, line 205\n            // or, line 207\n            lab0: do {\n                v_1 = cursor;\n                lab1: do {\n                    // call exception1, line 207\n                    if (!r_exception1())\n                    {\n                        break lab1;\n                    }\n                    break lab0;\n                } while (false);\n                cursor = v_1;\n                lab2: do {\n                    // not, line 208\n                    {\n                        v_2 = cursor;\n                        lab3: do {\n                            // hop, line 208\n                            {\n                                int c = cursor + 3;\n                                if (0 > c || c > limit)\n                                {\n                                    break lab3;\n                                }\n                                cursor = c;\n                            }\n                            break lab2;\n                        } while (false);\n                        cursor = v_2;\n                    }\n                    break lab0;\n                } while (false);\n                cursor = v_1;\n                // (, line 208\n                // do, line 209\n                v_3 = cursor;\n                lab4: do {\n                    // call prelude, line 209\n                    if (!r_prelude())\n                    {\n                        break lab4;\n                    }\n                } while (false);\n                cursor = v_3;\n                // do, line 210\n                v_4 = cursor;\n                lab5: do {\n                    // call mark_regions, line 210\n                    if (!r_mark_regions())\n                    {\n                        break lab5;\n                    }\n                } while (false);\n                cursor = v_4;\n                // backwards, line 211\n                limit_backward = cursor; cursor = limit;\n                // (, line 211\n                // do, line 213\n                v_5 = limit - cursor;\n                lab6: do {\n                    // call Step_1a, line 213\n                    if (!r_Step_1a())\n                    {\n                        break lab6;\n                    }\n                } while (false);\n                cursor = limit - v_5;\n                // or, line 215\n                lab7: do {\n                    v_6 = limit - cursor;\n                    lab8: do {\n                        // call exception2, line 215\n                        if (!r_exception2())\n                        {\n                            break lab8;\n                        }\n                        break lab7;\n                    } while (false);\n                    cursor = limit - v_6;\n                    // (, line 215\n                    // do, line 217\n                    v_7 = limit - cursor;\n                    lab9: do {\n                        // call Step_1b, line 217\n                        if (!r_Step_1b())\n                        {\n                            break lab9;\n                        }\n                    } while (false);\n                    cursor = limit - v_7;\n                    // do, line 218\n                    v_8 = limit - cursor;\n                    lab10: do {\n                        // call Step_1c, line 218\n                        if (!r_Step_1c())\n                        {\n                            break lab10;\n                        }\n                    } while (false);\n                    cursor = limit - v_8;\n                    // do, line 220\n                    v_9 = limit - cursor;\n                    lab11: do {\n                        // call Step_2, line 220\n                        if (!r_Step_2())\n                        {\n                            break lab11;\n                        }\n                    } while (false);\n                    cursor = limit - v_9;\n                    // do, line 221\n                    v_10 = limit - cursor;\n                    lab12: do {\n                        // call Step_3, line 221\n                        if (!r_Step_3())\n                        {\n                            break lab12;\n                        }\n                    } while (false);\n                    cursor = limit - v_10;\n                    // do, line 222\n                    v_11 = limit - cursor;\n                    lab13: do {\n                        // call Step_4, line 222\n                        if (!r_Step_4())\n                        {\n                            break lab13;\n                        }\n                    } while (false);\n                    cursor = limit - v_11;\n                    // do, line 224\n                    v_12 = limit - cursor;\n                    lab14: do {\n                        // call Step_5, line 224\n                        if (!r_Step_5())\n                        {\n                            break lab14;\n                        }\n                    } while (false);\n                    cursor = limit - v_12;\n                } while (false);\n                cursor = limit_backward;                // do, line 227\n                v_13 = cursor;\n                lab15: do {\n                    // call postlude, line 227\n                    if (!r_postlude())\n                    {\n                        break lab15;\n                    }\n                } while (false);\n                cursor = v_13;\n            } while (false);\n            return true;\n        }\n\n","sourceOld":"        public boolean stem() {\n            int v_1;\n            int v_2;\n            int v_3;\n            int v_4;\n            int v_5;\n            int v_6;\n            int v_7;\n            int v_8;\n            int v_9;\n            int v_10;\n            int v_11;\n            int v_12;\n            int v_13;\n            // (, line 205\n            // or, line 207\n            lab0: do {\n                v_1 = cursor;\n                lab1: do {\n                    // call exception1, line 207\n                    if (!r_exception1())\n                    {\n                        break lab1;\n                    }\n                    break lab0;\n                } while (false);\n                cursor = v_1;\n                lab2: do {\n                    // not, line 208\n                    {\n                        v_2 = cursor;\n                        lab3: do {\n                            // hop, line 208\n                            {\n                                int c = cursor + 3;\n                                if (0 > c || c > limit)\n                                {\n                                    break lab3;\n                                }\n                                cursor = c;\n                            }\n                            break lab2;\n                        } while (false);\n                        cursor = v_2;\n                    }\n                    break lab0;\n                } while (false);\n                cursor = v_1;\n                // (, line 208\n                // do, line 209\n                v_3 = cursor;\n                lab4: do {\n                    // call prelude, line 209\n                    if (!r_prelude())\n                    {\n                        break lab4;\n                    }\n                } while (false);\n                cursor = v_3;\n                // do, line 210\n                v_4 = cursor;\n                lab5: do {\n                    // call mark_regions, line 210\n                    if (!r_mark_regions())\n                    {\n                        break lab5;\n                    }\n                } while (false);\n                cursor = v_4;\n                // backwards, line 211\n                limit_backward = cursor; cursor = limit;\n                // (, line 211\n                // do, line 213\n                v_5 = limit - cursor;\n                lab6: do {\n                    // call Step_1a, line 213\n                    if (!r_Step_1a())\n                    {\n                        break lab6;\n                    }\n                } while (false);\n                cursor = limit - v_5;\n                // or, line 215\n                lab7: do {\n                    v_6 = limit - cursor;\n                    lab8: do {\n                        // call exception2, line 215\n                        if (!r_exception2())\n                        {\n                            break lab8;\n                        }\n                        break lab7;\n                    } while (false);\n                    cursor = limit - v_6;\n                    // (, line 215\n                    // do, line 217\n                    v_7 = limit - cursor;\n                    lab9: do {\n                        // call Step_1b, line 217\n                        if (!r_Step_1b())\n                        {\n                            break lab9;\n                        }\n                    } while (false);\n                    cursor = limit - v_7;\n                    // do, line 218\n                    v_8 = limit - cursor;\n                    lab10: do {\n                        // call Step_1c, line 218\n                        if (!r_Step_1c())\n                        {\n                            break lab10;\n                        }\n                    } while (false);\n                    cursor = limit - v_8;\n                    // do, line 220\n                    v_9 = limit - cursor;\n                    lab11: do {\n                        // call Step_2, line 220\n                        if (!r_Step_2())\n                        {\n                            break lab11;\n                        }\n                    } while (false);\n                    cursor = limit - v_9;\n                    // do, line 221\n                    v_10 = limit - cursor;\n                    lab12: do {\n                        // call Step_3, line 221\n                        if (!r_Step_3())\n                        {\n                            break lab12;\n                        }\n                    } while (false);\n                    cursor = limit - v_10;\n                    // do, line 222\n                    v_11 = limit - cursor;\n                    lab13: do {\n                        // call Step_4, line 222\n                        if (!r_Step_4())\n                        {\n                            break lab13;\n                        }\n                    } while (false);\n                    cursor = limit - v_11;\n                    // do, line 224\n                    v_12 = limit - cursor;\n                    lab14: do {\n                        // call Step_5, line 224\n                        if (!r_Step_5())\n                        {\n                            break lab14;\n                        }\n                    } while (false);\n                    cursor = limit - v_12;\n                } while (false);\n                cursor = limit_backward;                // do, line 227\n                v_13 = cursor;\n                lab15: do {\n                    // call postlude, line 227\n                    if (!r_postlude())\n                    {\n                        break lab15;\n                    }\n                } while (false);\n                cursor = v_13;\n            } while (false);\n            return true;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}