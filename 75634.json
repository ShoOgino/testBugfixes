{"path":"lucene/sandbox/src/java/org/apache/lucene/codecs/idversion/IDVersionPostingsReader#init(IndexInput,SegmentReadState).mjava","commits":[{"id":"99eb4a732d1a908f4636ace52928876136bf1896","date":1413829552,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/codecs/idversion/IDVersionPostingsReader#init(IndexInput,SegmentReadState).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/codecs/idversion/IDVersionPostingsReader#init(IndexInput).mjava","sourceNew":"  @Override\n  public void init(IndexInput termsIn, SegmentReadState state) throws IOException {\n    // Make sure we are talking to the matching postings writer\n    CodecUtil.checkSegmentHeader(termsIn,\n                                 IDVersionPostingsWriter.TERMS_CODEC,\n                                 IDVersionPostingsWriter.VERSION_START,\n                                 IDVersionPostingsWriter.VERSION_CURRENT,\n                                 state.segmentInfo.getId(), state.segmentSuffix);\n  }\n\n","sourceOld":"  @Override\n  public void init(IndexInput termsIn) throws IOException {\n    // Make sure we are talking to the matching postings writer\n    CodecUtil.checkSegmentHeader(termsIn,\n                                 IDVersionPostingsWriter.TERMS_CODEC,\n                                 IDVersionPostingsWriter.VERSION_START,\n                                 IDVersionPostingsWriter.VERSION_CURRENT,\n                                 state.segmentInfo.getId(), state.segmentSuffix);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3384e6013a93e4d11b7d75388693f8d0388602bf","date":1413951663,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/codecs/idversion/IDVersionPostingsReader#init(IndexInput,SegmentReadState).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/codecs/idversion/IDVersionPostingsReader#init(IndexInput,SegmentReadState).mjava","sourceNew":"  @Override\n  public void init(IndexInput termsIn, SegmentReadState state) throws IOException {\n    // Make sure we are talking to the matching postings writer\n    CodecUtil.checkIndexHeader(termsIn,\n                                 IDVersionPostingsWriter.TERMS_CODEC,\n                                 IDVersionPostingsWriter.VERSION_START,\n                                 IDVersionPostingsWriter.VERSION_CURRENT,\n                                 state.segmentInfo.getId(), state.segmentSuffix);\n  }\n\n","sourceOld":"  @Override\n  public void init(IndexInput termsIn, SegmentReadState state) throws IOException {\n    // Make sure we are talking to the matching postings writer\n    CodecUtil.checkSegmentHeader(termsIn,\n                                 IDVersionPostingsWriter.TERMS_CODEC,\n                                 IDVersionPostingsWriter.VERSION_START,\n                                 IDVersionPostingsWriter.VERSION_CURRENT,\n                                 state.segmentInfo.getId(), state.segmentSuffix);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"db68c63cbfaa8698b9c4475f75ed2b9c9696d238","date":1414118621,"type":1,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/codecs/idversion/IDVersionPostingsReader#init(IndexInput,SegmentReadState).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/codecs/idversion/IDVersionPostingsReader#init(IndexInput).mjava","sourceNew":"  @Override\n  public void init(IndexInput termsIn, SegmentReadState state) throws IOException {\n    // Make sure we are talking to the matching postings writer\n    CodecUtil.checkIndexHeader(termsIn,\n                                 IDVersionPostingsWriter.TERMS_CODEC,\n                                 IDVersionPostingsWriter.VERSION_START,\n                                 IDVersionPostingsWriter.VERSION_CURRENT,\n                                 state.segmentInfo.getId(), state.segmentSuffix);\n  }\n\n","sourceOld":"  @Override\n  public void init(IndexInput termsIn) throws IOException {\n    // Make sure we are talking to the matching postings writer\n    CodecUtil.checkSegmentHeader(termsIn,\n                                 IDVersionPostingsWriter.TERMS_CODEC,\n                                 IDVersionPostingsWriter.VERSION_START,\n                                 IDVersionPostingsWriter.VERSION_CURRENT,\n                                 state.segmentInfo.getId(), state.segmentSuffix);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"99eb4a732d1a908f4636ace52928876136bf1896":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3384e6013a93e4d11b7d75388693f8d0388602bf":["99eb4a732d1a908f4636ace52928876136bf1896"],"db68c63cbfaa8698b9c4475f75ed2b9c9696d238":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3384e6013a93e4d11b7d75388693f8d0388602bf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["db68c63cbfaa8698b9c4475f75ed2b9c9696d238"]},"commit2Childs":{"99eb4a732d1a908f4636ace52928876136bf1896":["3384e6013a93e4d11b7d75388693f8d0388602bf"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["99eb4a732d1a908f4636ace52928876136bf1896","db68c63cbfaa8698b9c4475f75ed2b9c9696d238"],"3384e6013a93e4d11b7d75388693f8d0388602bf":["db68c63cbfaa8698b9c4475f75ed2b9c9696d238"],"db68c63cbfaa8698b9c4475f75ed2b9c9696d238":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}