{"path":"src/test/org/apache/solr/highlight/HighlighterTest#testMergeContiguous().mjava","commits":[{"id":"5b33cbdde0fe8001a7381dcff32da1369decd02f","date":1199829766,"type":0,"author":"Mike Klaas","isMerge":false,"pathNew":"src/test/org/apache/solr/highlight/HighlighterTest#testMergeContiguous().mjava","pathOld":"/dev/null","sourceNew":"  public void testMergeContiguous() throws Exception {\n    HashMap<String,String> args = new HashMap<String,String>();\n    args.put(HighlightParams.HIGHLIGHT, \"true\");\n    args.put(\"df\", \"t_text\");\n    args.put(HighlightParams.FIELDS, \"\");\n    args.put(HighlightParams.SNIPPETS, String.valueOf(4));\n    args.put(HighlightParams.FRAGSIZE, String.valueOf(40));\n    args.put(HighlightParams.MERGE_CONTIGUOUS_FRAGMENTS, \"true\");\n    TestHarness.LocalRequestFactory sumLRF = h.getRequestFactory(\n      \"standard\", 0, 200, args);\n    String input = \"this is some long text.  It has the word long in many places.  In fact, it has long on some different fragments.  \" +\n            \"Let us see what happens to long in this case.\";\n    String gold = \"this is some <em>long</em> text.  It has the word <em>long</em> in many places.  In fact, it has <em>long</em> on some different fragments.  \" +\n            \"Let us see what happens to <em>long</em> in this case.\";\n    assertU(adoc(\"t_text\", input, \"id\", \"1\"));\n    assertU(commit());\n    assertU(optimize());\n    assertQ(\"Merge Contiguous\",\n            sumLRF.makeRequest(\"t_text:long\"),\n            \"//lst[@name='highlighting']/lst[@name='1']\",\n            \"//lst[@name='1']/arr[@name='t_text']/str[.='\" + gold + \"']\"\n            );\n    args.put(\"f.t_text.\" + HighlightParams.MERGE_CONTIGUOUS_FRAGMENTS, \"true\");\n    assertU(adoc(\"t_text\", input, \"id\", \"1\"));\n    assertU(commit());\n    assertU(optimize());\n    assertQ(\"Merge Contiguous\",\n            sumLRF.makeRequest(\"t_text:long\"),\n            \"//lst[@name='highlighting']/lst[@name='1']\",\n            \"//lst[@name='1']/arr[@name='t_text']/str[.='\" + gold + \"']\"\n            );\n\n    args.put(HighlightParams.MERGE_CONTIGUOUS_FRAGMENTS, \"false\");\n    args.put(\"f.t_text.\" + HighlightParams.MERGE_CONTIGUOUS_FRAGMENTS, \"false\");\n    sumLRF = h.getRequestFactory(\n      \"standard\", 0, 200, args);\n    assertQ(\"Merge Contiguous\",\n            sumLRF.makeRequest(\"t_text:long\"),\n            \"//lst[@name='highlighting']/lst[@name='1']\",\n            \"//lst[@name='1']/arr[@name='t_text']/str[.='this is some <em>long</em> text.  It has']\",\n            \"//lst[@name='1']/arr[@name='t_text']/str[.=' the word <em>long</em> in many places.  In fact, it has']\",\n            \"//lst[@name='1']/arr[@name='t_text']/str[.=' <em>long</em> on some different fragments.  Let us']\",\n            \"//lst[@name='1']/arr[@name='t_text']/str[.=' see what happens to <em>long</em> in this case.']\"\n            );\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/highlight/HighlighterTest#testMergeContiguous().mjava","pathOld":"src/test/org/apache/solr/highlight/HighlighterTest#testMergeContiguous().mjava","sourceNew":"  public void testMergeContiguous() throws Exception {\n    HashMap<String,String> args = new HashMap<String,String>();\n    args.put(HighlightParams.HIGHLIGHT, \"true\");\n    args.put(\"df\", \"t_text\");\n    args.put(HighlightParams.FIELDS, \"\");\n    args.put(HighlightParams.SNIPPETS, String.valueOf(4));\n    args.put(HighlightParams.FRAGSIZE, String.valueOf(40));\n    args.put(HighlightParams.MERGE_CONTIGUOUS_FRAGMENTS, \"true\");\n    TestHarness.LocalRequestFactory sumLRF = h.getRequestFactory(\n      \"standard\", 0, 200, args);\n    String input = \"this is some long text.  It has the word long in many places.  In fact, it has long on some different fragments.  \" +\n            \"Let us see what happens to long in this case.\";\n    String gold = \"this is some <em>long</em> text.  It has the word <em>long</em> in many places.  In fact, it has <em>long</em> on some different fragments.  \" +\n            \"Let us see what happens to <em>long</em> in this case.\";\n    assertU(adoc(\"t_text\", input, \"id\", \"1\"));\n    assertU(commit());\n    assertU(optimize());\n    assertQ(\"Merge Contiguous\",\n            sumLRF.makeRequest(\"t_text:long\"),\n            \"//lst[@name='highlighting']/lst[@name='1']\",\n            \"//lst[@name='1']/arr[@name='t_text']/str[.='\" + gold + \"']\"\n            );\n    args.put(\"f.t_text.\" + HighlightParams.MERGE_CONTIGUOUS_FRAGMENTS, \"true\");\n    assertU(adoc(\"t_text\", input, \"id\", \"1\"));\n    assertU(commit());\n    assertU(optimize());\n    assertQ(\"Merge Contiguous\",\n            sumLRF.makeRequest(\"t_text:long\"),\n            \"//lst[@name='highlighting']/lst[@name='1']\",\n            \"//lst[@name='1']/arr[@name='t_text']/str[.='\" + gold + \"']\"\n            );\n\n    args.put(HighlightParams.MERGE_CONTIGUOUS_FRAGMENTS, \"false\");\n    args.put(\"f.t_text.\" + HighlightParams.MERGE_CONTIGUOUS_FRAGMENTS, \"false\");\n    sumLRF = h.getRequestFactory(\n      \"standard\", 0, 200, args);\n    assertQ(\"Merge Contiguous\",\n            sumLRF.makeRequest(\"t_text:long\"),\n            \"//lst[@name='highlighting']/lst[@name='1']\",\n            \"//lst[@name='1']/arr[@name='t_text']/str[.='this is some <em>long</em> text.  It has']\",\n            \"//lst[@name='1']/arr[@name='t_text']/str[.=' the word <em>long</em> in many places.  In fact, it has']\",\n            \"//lst[@name='1']/arr[@name='t_text']/str[.=' <em>long</em> on some different fragments.  Let us']\",\n            \"//lst[@name='1']/arr[@name='t_text']/str[.=' see what happens to <em>long</em> in this case.']\"\n            );\n  }\n\n","sourceOld":"  public void testMergeContiguous() throws Exception {\n    HashMap<String,String> args = new HashMap<String,String>();\n    args.put(HighlightParams.HIGHLIGHT, \"true\");\n    args.put(\"df\", \"t_text\");\n    args.put(HighlightParams.FIELDS, \"\");\n    args.put(HighlightParams.SNIPPETS, String.valueOf(4));\n    args.put(HighlightParams.FRAGSIZE, String.valueOf(40));\n    args.put(HighlightParams.MERGE_CONTIGUOUS_FRAGMENTS, \"true\");\n    TestHarness.LocalRequestFactory sumLRF = h.getRequestFactory(\n      \"standard\", 0, 200, args);\n    String input = \"this is some long text.  It has the word long in many places.  In fact, it has long on some different fragments.  \" +\n            \"Let us see what happens to long in this case.\";\n    String gold = \"this is some <em>long</em> text.  It has the word <em>long</em> in many places.  In fact, it has <em>long</em> on some different fragments.  \" +\n            \"Let us see what happens to <em>long</em> in this case.\";\n    assertU(adoc(\"t_text\", input, \"id\", \"1\"));\n    assertU(commit());\n    assertU(optimize());\n    assertQ(\"Merge Contiguous\",\n            sumLRF.makeRequest(\"t_text:long\"),\n            \"//lst[@name='highlighting']/lst[@name='1']\",\n            \"//lst[@name='1']/arr[@name='t_text']/str[.='\" + gold + \"']\"\n            );\n    args.put(\"f.t_text.\" + HighlightParams.MERGE_CONTIGUOUS_FRAGMENTS, \"true\");\n    assertU(adoc(\"t_text\", input, \"id\", \"1\"));\n    assertU(commit());\n    assertU(optimize());\n    assertQ(\"Merge Contiguous\",\n            sumLRF.makeRequest(\"t_text:long\"),\n            \"//lst[@name='highlighting']/lst[@name='1']\",\n            \"//lst[@name='1']/arr[@name='t_text']/str[.='\" + gold + \"']\"\n            );\n\n    args.put(HighlightParams.MERGE_CONTIGUOUS_FRAGMENTS, \"false\");\n    args.put(\"f.t_text.\" + HighlightParams.MERGE_CONTIGUOUS_FRAGMENTS, \"false\");\n    sumLRF = h.getRequestFactory(\n      \"standard\", 0, 200, args);\n    assertQ(\"Merge Contiguous\",\n            sumLRF.makeRequest(\"t_text:long\"),\n            \"//lst[@name='highlighting']/lst[@name='1']\",\n            \"//lst[@name='1']/arr[@name='t_text']/str[.='this is some <em>long</em> text.  It has']\",\n            \"//lst[@name='1']/arr[@name='t_text']/str[.=' the word <em>long</em> in many places.  In fact, it has']\",\n            \"//lst[@name='1']/arr[@name='t_text']/str[.=' <em>long</em> on some different fragments.  Let us']\",\n            \"//lst[@name='1']/arr[@name='t_text']/str[.=' see what happens to <em>long</em> in this case.']\"\n            );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5b33cbdde0fe8001a7381dcff32da1369decd02f":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["5b33cbdde0fe8001a7381dcff32da1369decd02f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"5b33cbdde0fe8001a7381dcff32da1369decd02f":["ad94625fb8d088209f46650c8097196fec67f00c"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["5b33cbdde0fe8001a7381dcff32da1369decd02f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}