{"path":"solr/core/src/java/org/apache/solr/schema/CurrencyField#createFields(SchemaField,Object).mjava","commits":[{"id":"acd9883560fd89e6448b2b447302fe543040cd4f","date":1488478696,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/CurrencyField#createFields(SchemaField,Object).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/CurrencyField#createFields(SchemaField,Object,float).mjava","sourceNew":"  @Override\n  public List<IndexableField> createFields(SchemaField field, Object externalVal) {\n    CurrencyValue value = CurrencyValue.parse(externalVal.toString(), defaultCurrency);\n\n    List<IndexableField> f = new ArrayList<>();\n    SchemaField amountField = getAmountField(field);\n    f.add(amountField.createField(String.valueOf(value.getAmount())));\n    SchemaField currencyField = getCurrencyField(field);\n    f.add(currencyField.createField(value.getCurrencyCode()));\n\n    if (field.stored()) {\n      String storedValue = externalVal.toString().trim();\n      if (storedValue.indexOf(\",\") < 0) {\n        storedValue += \",\" + defaultCurrency;\n      }\n      f.add(createField(field.getName(), storedValue, StoredField.TYPE));\n    }\n\n    return f;\n  }\n\n","sourceOld":"  @Override\n  public List<IndexableField> createFields(SchemaField field, Object externalVal, float boost) {\n    CurrencyValue value = CurrencyValue.parse(externalVal.toString(), defaultCurrency);\n\n    List<IndexableField> f = new ArrayList<>();\n    SchemaField amountField = getAmountField(field);\n    f.add(amountField.createField(String.valueOf(value.getAmount()), amountField.indexed() && !amountField.omitNorms() ? boost : 1F));\n    SchemaField currencyField = getCurrencyField(field);\n    f.add(currencyField.createField(value.getCurrencyCode(), currencyField.indexed() && !currencyField.omitNorms() ? boost : 1F));\n\n    if (field.stored()) {\n      String storedValue = externalVal.toString().trim();\n      if (storedValue.indexOf(\",\") < 0) {\n        storedValue += \",\" + defaultCurrency;\n      }\n      f.add(createField(field.getName(), storedValue, StoredField.TYPE, 1F));\n    }\n\n    return f;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f107636c2cc82350a2607d774c092da5b73152e5","date":1498227268,"type":5,"author":"Steve Rowe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/CurrencyFieldType#createFields(SchemaField,Object).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/CurrencyField#createFields(SchemaField,Object).mjava","sourceNew":"  @Override\n  public List<IndexableField> createFields(SchemaField field, Object externalVal) {\n    CurrencyValue value = CurrencyValue.parse(externalVal.toString(), defaultCurrency);\n\n    List<IndexableField> f = new ArrayList<>();\n    SchemaField amountField = getAmountField(field);\n    f.add(amountField.createField(String.valueOf(value.getAmount())));\n    SchemaField currencyField = getCurrencyField(field);\n    f.add(currencyField.createField(value.getCurrencyCode()));\n\n    if (field.stored()) {\n      String storedValue = externalVal.toString().trim();\n      if (storedValue.indexOf(\",\") < 0) {\n        storedValue += \",\" + defaultCurrency;\n      }\n      f.add(createField(field.getName(), storedValue, StoredField.TYPE));\n    }\n\n    return f;\n  }\n\n","sourceOld":"  @Override\n  public List<IndexableField> createFields(SchemaField field, Object externalVal) {\n    CurrencyValue value = CurrencyValue.parse(externalVal.toString(), defaultCurrency);\n\n    List<IndexableField> f = new ArrayList<>();\n    SchemaField amountField = getAmountField(field);\n    f.add(amountField.createField(String.valueOf(value.getAmount())));\n    SchemaField currencyField = getCurrencyField(field);\n    f.add(currencyField.createField(value.getCurrencyCode()));\n\n    if (field.stored()) {\n      String storedValue = externalVal.toString().trim();\n      if (storedValue.indexOf(\",\") < 0) {\n        storedValue += \",\" + defaultCurrency;\n      }\n      f.add(createField(field.getName(), storedValue, StoredField.TYPE));\n    }\n\n    return f;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7dfa64bc2074fb87d0ca70095a644c1ead107e1","date":1498356339,"type":5,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/schema/CurrencyFieldType#createFields(SchemaField,Object).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/CurrencyField#createFields(SchemaField,Object).mjava","sourceNew":"  @Override\n  public List<IndexableField> createFields(SchemaField field, Object externalVal) {\n    CurrencyValue value = CurrencyValue.parse(externalVal.toString(), defaultCurrency);\n\n    List<IndexableField> f = new ArrayList<>();\n    SchemaField amountField = getAmountField(field);\n    f.add(amountField.createField(String.valueOf(value.getAmount())));\n    SchemaField currencyField = getCurrencyField(field);\n    f.add(currencyField.createField(value.getCurrencyCode()));\n\n    if (field.stored()) {\n      String storedValue = externalVal.toString().trim();\n      if (storedValue.indexOf(\",\") < 0) {\n        storedValue += \",\" + defaultCurrency;\n      }\n      f.add(createField(field.getName(), storedValue, StoredField.TYPE));\n    }\n\n    return f;\n  }\n\n","sourceOld":"  @Override\n  public List<IndexableField> createFields(SchemaField field, Object externalVal) {\n    CurrencyValue value = CurrencyValue.parse(externalVal.toString(), defaultCurrency);\n\n    List<IndexableField> f = new ArrayList<>();\n    SchemaField amountField = getAmountField(field);\n    f.add(amountField.createField(String.valueOf(value.getAmount())));\n    SchemaField currencyField = getCurrencyField(field);\n    f.add(currencyField.createField(value.getCurrencyCode()));\n\n    if (field.stored()) {\n      String storedValue = externalVal.toString().trim();\n      if (storedValue.indexOf(\",\") < 0) {\n        storedValue += \",\" + defaultCurrency;\n      }\n      f.add(createField(field.getName(), storedValue, StoredField.TYPE));\n    }\n\n    return f;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":5,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/schema/CurrencyFieldType#createFields(SchemaField,Object).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/CurrencyField#createFields(SchemaField,Object).mjava","sourceNew":"  @Override\n  public List<IndexableField> createFields(SchemaField field, Object externalVal) {\n    CurrencyValue value = CurrencyValue.parse(externalVal.toString(), defaultCurrency);\n\n    List<IndexableField> f = new ArrayList<>();\n    SchemaField amountField = getAmountField(field);\n    f.add(amountField.createField(String.valueOf(value.getAmount())));\n    SchemaField currencyField = getCurrencyField(field);\n    f.add(currencyField.createField(value.getCurrencyCode()));\n\n    if (field.stored()) {\n      String storedValue = externalVal.toString().trim();\n      if (storedValue.indexOf(\",\") < 0) {\n        storedValue += \",\" + defaultCurrency;\n      }\n      f.add(createField(field.getName(), storedValue, StoredField.TYPE));\n    }\n\n    return f;\n  }\n\n","sourceOld":"  @Override\n  public List<IndexableField> createFields(SchemaField field, Object externalVal) {\n    CurrencyValue value = CurrencyValue.parse(externalVal.toString(), defaultCurrency);\n\n    List<IndexableField> f = new ArrayList<>();\n    SchemaField amountField = getAmountField(field);\n    f.add(amountField.createField(String.valueOf(value.getAmount())));\n    SchemaField currencyField = getCurrencyField(field);\n    f.add(currencyField.createField(value.getCurrencyCode()));\n\n    if (field.stored()) {\n      String storedValue = externalVal.toString().trim();\n      if (storedValue.indexOf(\",\") < 0) {\n        storedValue += \",\" + defaultCurrency;\n      }\n      f.add(createField(field.getName(), storedValue, StoredField.TYPE));\n    }\n\n    return f;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"acd9883560fd89e6448b2b447302fe543040cd4f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b7dfa64bc2074fb87d0ca70095a644c1ead107e1":["acd9883560fd89e6448b2b447302fe543040cd4f","f107636c2cc82350a2607d774c092da5b73152e5"],"28288370235ed02234a64753cdbf0c6ec096304a":["acd9883560fd89e6448b2b447302fe543040cd4f","f107636c2cc82350a2607d774c092da5b73152e5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["28288370235ed02234a64753cdbf0c6ec096304a"],"f107636c2cc82350a2607d774c092da5b73152e5":["acd9883560fd89e6448b2b447302fe543040cd4f"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["acd9883560fd89e6448b2b447302fe543040cd4f"],"acd9883560fd89e6448b2b447302fe543040cd4f":["b7dfa64bc2074fb87d0ca70095a644c1ead107e1","28288370235ed02234a64753cdbf0c6ec096304a","f107636c2cc82350a2607d774c092da5b73152e5"],"b7dfa64bc2074fb87d0ca70095a644c1ead107e1":[],"28288370235ed02234a64753cdbf0c6ec096304a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f107636c2cc82350a2607d774c092da5b73152e5":["b7dfa64bc2074fb87d0ca70095a644c1ead107e1","28288370235ed02234a64753cdbf0c6ec096304a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b7dfa64bc2074fb87d0ca70095a644c1ead107e1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}