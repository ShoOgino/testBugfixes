{"path":"solr/solrj/src/test/org/apache/solr/client/solrj/io/sql/JdbcTest#testJDBCUrlParameters().mjava","commits":[{"id":"b940572a59da1b42b6c20ab5278155b12816807a","date":1462388874,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/sql/JdbcTest#testJDBCUrlParameters().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testJDBCUrlParameters() throws Exception {\n\n    // Test JDBC paramters in URL\n    try (Connection con = DriverManager.getConnection(\n        \"jdbc:solr://\" + zkHost + \"?collection=collection1&username=&password=&testKey1=testValue&testKey2\")) {\n\n      Properties p = ((ConnectionImpl) con).getProperties();\n      assertEquals(\"\", p.getProperty(\"username\"));\n      assertEquals(\"\", p.getProperty(\"password\"));\n      assertEquals(\"testValue\", p.getProperty(\"testKey1\"));\n      assertEquals(\"\", p.getProperty(\"testKey2\"));\n\n      try (Statement stmt = con.createStatement()) {\n        try (ResultSet rs = stmt.executeQuery(\"select a_s, sum(a_f) from collection1 group by a_s \" +\n            \"order by sum(a_f) desc\")) {\n\n          assertTrue(rs.next());\n\n          assertEquals(\"hello3\", rs.getString(\"a_s\"));\n          assertEquals(\"hello3\", rs.getString(1));\n          assertEquals(26, rs.getDouble(\"sum(a_f)\"), 0);\n          assertEquals(26, rs.getDouble(2), 0);\n\n          assertTrue(rs.next());\n\n          assertEquals(\"hello0\", rs.getString(\"a_s\"));\n          assertEquals(\"hello0\", rs.getString(1));\n          assertEquals(18, rs.getDouble(\"sum(a_f)\"), 0);\n          assertEquals(18, rs.getDouble(2), 0);\n\n          assertTrue(rs.next());\n\n          assertEquals(\"hello4\", rs.getString(\"a_s\"));\n          assertEquals(\"hello4\", rs.getString(1));\n          assertEquals(11, rs.getDouble(\"sum(a_f)\"), 0);\n          assertEquals(11, rs.getDouble(2), 0);\n\n          assertFalse(rs.next());\n        }\n      }\n    }\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bd78ba595fa6cdd7fff930f26d154d13a823fa47","date":1462400514,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/sql/JdbcTest#testJDBCUrlParameters().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testJDBCUrlParameters() throws Exception {\n\n    // Test JDBC paramters in URL\n    try (Connection con = DriverManager.getConnection(\n        \"jdbc:solr://\" + zkHost + \"?collection=collection1&username=&password=&testKey1=testValue&testKey2\")) {\n\n      Properties p = ((ConnectionImpl) con).getProperties();\n      assertEquals(\"\", p.getProperty(\"username\"));\n      assertEquals(\"\", p.getProperty(\"password\"));\n      assertEquals(\"testValue\", p.getProperty(\"testKey1\"));\n      assertEquals(\"\", p.getProperty(\"testKey2\"));\n\n      try (Statement stmt = con.createStatement()) {\n        try (ResultSet rs = stmt.executeQuery(\"select a_s, sum(a_f) from collection1 group by a_s \" +\n            \"order by sum(a_f) desc\")) {\n\n          assertTrue(rs.next());\n\n          assertEquals(\"hello3\", rs.getString(\"a_s\"));\n          assertEquals(\"hello3\", rs.getString(1));\n          assertEquals(26, rs.getDouble(\"EXPR$1\"), 0); //sum(a_f)\n          assertEquals(26, rs.getDouble(2), 0);\n\n          assertTrue(rs.next());\n\n          assertEquals(\"hello0\", rs.getString(\"a_s\"));\n          assertEquals(\"hello0\", rs.getString(1));\n          assertEquals(18, rs.getDouble(\"EXPR$1\"), 0); //sum(a_f)\n          assertEquals(18, rs.getDouble(2), 0);\n\n          assertTrue(rs.next());\n\n          assertEquals(\"hello4\", rs.getString(\"a_s\"));\n          assertEquals(\"hello4\", rs.getString(1));\n          assertEquals(11, rs.getDouble(\"EXPR$1\"), 0); //sum(a_f)\n          assertEquals(11, rs.getDouble(2), 0);\n\n          assertFalse(rs.next());\n        }\n      }\n    }\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"73450c0955930295d34703e7ddbfc6973b7a121a","date":1462431925,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/sql/JdbcTest#testJDBCUrlParameters().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testJDBCUrlParameters() throws Exception {\n\n    // Test JDBC paramters in URL\n    try (Connection con = DriverManager.getConnection(\n        \"jdbc:solr://\" + zkHost + \"?collection=collection1&username=&password=&testKey1=testValue&testKey2\")) {\n\n      Properties p = ((ConnectionImpl) con).getProperties();\n      assertEquals(\"\", p.getProperty(\"username\"));\n      assertEquals(\"\", p.getProperty(\"password\"));\n      assertEquals(\"testValue\", p.getProperty(\"testKey1\"));\n      assertEquals(\"\", p.getProperty(\"testKey2\"));\n\n      try (Statement stmt = con.createStatement()) {\n        try (ResultSet rs = stmt.executeQuery(\"select a_s, sum(a_f) from collection1 group by a_s \" +\n            \"order by sum(a_f) desc\")) {\n\n          assertTrue(rs.next());\n\n          assertEquals(\"hello3\", rs.getString(\"a_s\"));\n          assertEquals(\"hello3\", rs.getString(1));\n          assertEquals(26, rs.getDouble(\"sum(a_f)\"), 0);\n          assertEquals(26, rs.getDouble(2), 0);\n\n          assertTrue(rs.next());\n\n          assertEquals(\"hello0\", rs.getString(\"a_s\"));\n          assertEquals(\"hello0\", rs.getString(1));\n          assertEquals(18, rs.getDouble(\"sum(a_f)\"), 0);\n          assertEquals(18, rs.getDouble(2), 0);\n\n          assertTrue(rs.next());\n\n          assertEquals(\"hello4\", rs.getString(\"a_s\"));\n          assertEquals(\"hello4\", rs.getString(1));\n          assertEquals(11, rs.getDouble(\"sum(a_f)\"), 0);\n          assertEquals(11, rs.getDouble(2), 0);\n\n          assertFalse(rs.next());\n        }\n      }\n    }\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a8ed5da4b0191db6bc7f77f9feb35da6bd76f904","date":1462576651,"type":0,"author":"Mike McCandless","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/sql/JdbcTest#testJDBCUrlParameters().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testJDBCUrlParameters() throws Exception {\n\n    // Test JDBC paramters in URL\n    try (Connection con = DriverManager.getConnection(\n        \"jdbc:solr://\" + zkHost + \"?collection=collection1&username=&password=&testKey1=testValue&testKey2\")) {\n\n      Properties p = ((ConnectionImpl) con).getProperties();\n      assertEquals(\"\", p.getProperty(\"username\"));\n      assertEquals(\"\", p.getProperty(\"password\"));\n      assertEquals(\"testValue\", p.getProperty(\"testKey1\"));\n      assertEquals(\"\", p.getProperty(\"testKey2\"));\n\n      try (Statement stmt = con.createStatement()) {\n        try (ResultSet rs = stmt.executeQuery(\"select a_s, sum(a_f) from collection1 group by a_s \" +\n            \"order by sum(a_f) desc\")) {\n\n          assertTrue(rs.next());\n\n          assertEquals(\"hello3\", rs.getString(\"a_s\"));\n          assertEquals(\"hello3\", rs.getString(1));\n          assertEquals(26, rs.getDouble(\"sum(a_f)\"), 0);\n          assertEquals(26, rs.getDouble(2), 0);\n\n          assertTrue(rs.next());\n\n          assertEquals(\"hello0\", rs.getString(\"a_s\"));\n          assertEquals(\"hello0\", rs.getString(1));\n          assertEquals(18, rs.getDouble(\"sum(a_f)\"), 0);\n          assertEquals(18, rs.getDouble(2), 0);\n\n          assertTrue(rs.next());\n\n          assertEquals(\"hello4\", rs.getString(\"a_s\"));\n          assertEquals(\"hello4\", rs.getString(1));\n          assertEquals(11, rs.getDouble(\"sum(a_f)\"), 0);\n          assertEquals(11, rs.getDouble(2), 0);\n\n          assertFalse(rs.next());\n        }\n      }\n    }\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8c969f15cd04d31e520319c619a445ae21f02d72","date":1479263638,"type":3,"author":"Kevin Risden","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/sql/JdbcTest#testJDBCUrlParameters().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/io/sql/JdbcTest#testJDBCUrlParameters().mjava","sourceNew":"  @Test\n  public void testJDBCUrlParameters() throws Exception {\n\n    // Test JDBC paramters in URL\n    try (Connection con = DriverManager.getConnection(\n        \"jdbc:solr://\" + zkHost + \"?collection=\" + COLLECTIONORALIAS + \"&username=&password=&testKey1=testValue&testKey2\")) {\n\n      Properties p = ((ConnectionImpl) con).getProperties();\n      assertEquals(\"\", p.getProperty(\"username\"));\n      assertEquals(\"\", p.getProperty(\"password\"));\n      assertEquals(\"testValue\", p.getProperty(\"testKey1\"));\n      assertEquals(\"\", p.getProperty(\"testKey2\"));\n\n      try (Statement stmt = con.createStatement()) {\n        try (ResultSet rs = stmt.executeQuery(\"select a_s, sum(a_f) from \" + COLLECTIONORALIAS + \" group by a_s \" +\n            \"order by sum(a_f) desc\")) {\n\n          assertTrue(rs.next());\n\n          assertEquals(\"hello3\", rs.getString(\"a_s\"));\n          assertEquals(\"hello3\", rs.getString(1));\n          assertEquals(26, rs.getDouble(\"sum(a_f)\"), 0);\n          assertEquals(26, rs.getDouble(2), 0);\n\n          assertTrue(rs.next());\n\n          assertEquals(\"hello0\", rs.getString(\"a_s\"));\n          assertEquals(\"hello0\", rs.getString(1));\n          assertEquals(18, rs.getDouble(\"sum(a_f)\"), 0);\n          assertEquals(18, rs.getDouble(2), 0);\n\n          assertTrue(rs.next());\n\n          assertEquals(\"hello4\", rs.getString(\"a_s\"));\n          assertEquals(\"hello4\", rs.getString(1));\n          assertEquals(11, rs.getDouble(\"sum(a_f)\"), 0);\n          assertEquals(11, rs.getDouble(2), 0);\n\n          assertFalse(rs.next());\n        }\n      }\n    }\n\n  }\n\n","sourceOld":"  @Test\n  public void testJDBCUrlParameters() throws Exception {\n\n    // Test JDBC paramters in URL\n    try (Connection con = DriverManager.getConnection(\n        \"jdbc:solr://\" + zkHost + \"?collection=collection1&username=&password=&testKey1=testValue&testKey2\")) {\n\n      Properties p = ((ConnectionImpl) con).getProperties();\n      assertEquals(\"\", p.getProperty(\"username\"));\n      assertEquals(\"\", p.getProperty(\"password\"));\n      assertEquals(\"testValue\", p.getProperty(\"testKey1\"));\n      assertEquals(\"\", p.getProperty(\"testKey2\"));\n\n      try (Statement stmt = con.createStatement()) {\n        try (ResultSet rs = stmt.executeQuery(\"select a_s, sum(a_f) from collection1 group by a_s \" +\n            \"order by sum(a_f) desc\")) {\n\n          assertTrue(rs.next());\n\n          assertEquals(\"hello3\", rs.getString(\"a_s\"));\n          assertEquals(\"hello3\", rs.getString(1));\n          assertEquals(26, rs.getDouble(\"sum(a_f)\"), 0);\n          assertEquals(26, rs.getDouble(2), 0);\n\n          assertTrue(rs.next());\n\n          assertEquals(\"hello0\", rs.getString(\"a_s\"));\n          assertEquals(\"hello0\", rs.getString(1));\n          assertEquals(18, rs.getDouble(\"sum(a_f)\"), 0);\n          assertEquals(18, rs.getDouble(2), 0);\n\n          assertTrue(rs.next());\n\n          assertEquals(\"hello4\", rs.getString(\"a_s\"));\n          assertEquals(\"hello4\", rs.getString(1));\n          assertEquals(11, rs.getDouble(\"sum(a_f)\"), 0);\n          assertEquals(11, rs.getDouble(2), 0);\n\n          assertFalse(rs.next());\n        }\n      }\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a1ef55e1fff7ff44354432770ad8bc19be1fcc75","date":1479266056,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/sql/JdbcTest#testJDBCUrlParameters().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/io/sql/JdbcTest#testJDBCUrlParameters().mjava","sourceNew":"  @Test\n  public void testJDBCUrlParameters() throws Exception {\n\n    // Test JDBC paramters in URL\n    try (Connection con = DriverManager.getConnection(\n        \"jdbc:solr://\" + zkHost + \"?collection=\" + COLLECTIONORALIAS + \"&username=&password=&testKey1=testValue&testKey2\")) {\n\n      Properties p = ((ConnectionImpl) con).getProperties();\n      assertEquals(\"\", p.getProperty(\"username\"));\n      assertEquals(\"\", p.getProperty(\"password\"));\n      assertEquals(\"testValue\", p.getProperty(\"testKey1\"));\n      assertEquals(\"\", p.getProperty(\"testKey2\"));\n\n      try (Statement stmt = con.createStatement()) {\n        try (ResultSet rs = stmt.executeQuery(\"select a_s, sum(a_f) from \" + COLLECTIONORALIAS + \" group by a_s \" +\n            \"order by sum(a_f) desc\")) {\n\n          assertTrue(rs.next());\n\n          assertEquals(\"hello3\", rs.getString(\"a_s\"));\n          assertEquals(\"hello3\", rs.getString(1));\n          assertEquals(26, rs.getDouble(\"EXPR$1\"), 0); //sum(a_f)\n          assertEquals(26, rs.getDouble(2), 0);\n\n          assertTrue(rs.next());\n\n          assertEquals(\"hello0\", rs.getString(\"a_s\"));\n          assertEquals(\"hello0\", rs.getString(1));\n          assertEquals(18, rs.getDouble(\"EXPR$1\"), 0); //sum(a_f)\n          assertEquals(18, rs.getDouble(2), 0);\n\n          assertTrue(rs.next());\n\n          assertEquals(\"hello4\", rs.getString(\"a_s\"));\n          assertEquals(\"hello4\", rs.getString(1));\n          assertEquals(11, rs.getDouble(\"EXPR$1\"), 0); //sum(a_f)\n          assertEquals(11, rs.getDouble(2), 0);\n\n          assertFalse(rs.next());\n        }\n      }\n    }\n\n  }\n\n","sourceOld":"  @Test\n  public void testJDBCUrlParameters() throws Exception {\n\n    // Test JDBC paramters in URL\n    try (Connection con = DriverManager.getConnection(\n        \"jdbc:solr://\" + zkHost + \"?collection=collection1&username=&password=&testKey1=testValue&testKey2\")) {\n\n      Properties p = ((ConnectionImpl) con).getProperties();\n      assertEquals(\"\", p.getProperty(\"username\"));\n      assertEquals(\"\", p.getProperty(\"password\"));\n      assertEquals(\"testValue\", p.getProperty(\"testKey1\"));\n      assertEquals(\"\", p.getProperty(\"testKey2\"));\n\n      try (Statement stmt = con.createStatement()) {\n        try (ResultSet rs = stmt.executeQuery(\"select a_s, sum(a_f) from collection1 group by a_s \" +\n            \"order by sum(a_f) desc\")) {\n\n          assertTrue(rs.next());\n\n          assertEquals(\"hello3\", rs.getString(\"a_s\"));\n          assertEquals(\"hello3\", rs.getString(1));\n          assertEquals(26, rs.getDouble(\"EXPR$1\"), 0); //sum(a_f)\n          assertEquals(26, rs.getDouble(2), 0);\n\n          assertTrue(rs.next());\n\n          assertEquals(\"hello0\", rs.getString(\"a_s\"));\n          assertEquals(\"hello0\", rs.getString(1));\n          assertEquals(18, rs.getDouble(\"EXPR$1\"), 0); //sum(a_f)\n          assertEquals(18, rs.getDouble(2), 0);\n\n          assertTrue(rs.next());\n\n          assertEquals(\"hello4\", rs.getString(\"a_s\"));\n          assertEquals(\"hello4\", rs.getString(1));\n          assertEquals(11, rs.getDouble(\"EXPR$1\"), 0); //sum(a_f)\n          assertEquals(11, rs.getDouble(2), 0);\n\n          assertFalse(rs.next());\n        }\n      }\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"116fdd6b9e04e18a6547a5650bc0afd3fda020aa","date":1487184909,"type":3,"author":"Joel Bernstein","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/sql/JdbcTest#testJDBCUrlParameters().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/io/sql/JdbcTest#testJDBCUrlParameters().mjava","sourceNew":"  @Test\n  public void testJDBCUrlParameters() throws Exception {\n\n    // Test JDBC paramters in URL\n    try (Connection con = DriverManager.getConnection(\n        \"jdbc:solr://\" + zkHost + \"?collection=\" + COLLECTIONORALIAS + \"&username=&password=&testKey1=testValue&testKey2\")) {\n\n      Properties p = ((ConnectionImpl) con).getProperties();\n      assertEquals(\"\", p.getProperty(\"username\"));\n      assertEquals(\"\", p.getProperty(\"password\"));\n      assertEquals(\"testValue\", p.getProperty(\"testKey1\"));\n      assertEquals(\"\", p.getProperty(\"testKey2\"));\n\n      try (Statement stmt = con.createStatement()) {\n        try (ResultSet rs = stmt.executeQuery(\"select a_s, sum(a_f) from \" + COLLECTIONORALIAS + \" group by a_s \" +\n            \"order by sum(a_f) desc\")) {\n\n          assertTrue(rs.next());\n\n          assertEquals(\"hello3\", rs.getString(\"a_s\"));\n          assertEquals(\"hello3\", rs.getString(1));\n          assertEquals(26, rs.getDouble(\"EXPR$1\"), 0); //sum(a_f)\n          assertEquals(26, rs.getDouble(2), 0);\n\n          assertTrue(rs.next());\n\n          assertEquals(\"hello0\", rs.getString(\"a_s\"));\n          assertEquals(\"hello0\", rs.getString(1));\n          assertEquals(18, rs.getDouble(\"EXPR$1\"), 0); //sum(a_f)\n          assertEquals(18, rs.getDouble(2), 0);\n\n          assertTrue(rs.next());\n\n          assertEquals(\"hello4\", rs.getString(\"a_s\"));\n          assertEquals(\"hello4\", rs.getString(1));\n          assertEquals(11, rs.getDouble(\"EXPR$1\"), 0); //sum(a_f)\n          assertEquals(11, rs.getDouble(2), 0);\n\n          assertFalse(rs.next());\n        }\n      }\n    }\n\n  }\n\n","sourceOld":"  @Test\n  public void testJDBCUrlParameters() throws Exception {\n\n    // Test JDBC paramters in URL\n    try (Connection con = DriverManager.getConnection(\n        \"jdbc:solr://\" + zkHost + \"?collection=\" + COLLECTIONORALIAS + \"&username=&password=&testKey1=testValue&testKey2\")) {\n\n      Properties p = ((ConnectionImpl) con).getProperties();\n      assertEquals(\"\", p.getProperty(\"username\"));\n      assertEquals(\"\", p.getProperty(\"password\"));\n      assertEquals(\"testValue\", p.getProperty(\"testKey1\"));\n      assertEquals(\"\", p.getProperty(\"testKey2\"));\n\n      try (Statement stmt = con.createStatement()) {\n        try (ResultSet rs = stmt.executeQuery(\"select a_s, sum(a_f) from \" + COLLECTIONORALIAS + \" group by a_s \" +\n            \"order by sum(a_f) desc\")) {\n\n          assertTrue(rs.next());\n\n          assertEquals(\"hello3\", rs.getString(\"a_s\"));\n          assertEquals(\"hello3\", rs.getString(1));\n          assertEquals(26, rs.getDouble(\"sum(a_f)\"), 0);\n          assertEquals(26, rs.getDouble(2), 0);\n\n          assertTrue(rs.next());\n\n          assertEquals(\"hello0\", rs.getString(\"a_s\"));\n          assertEquals(\"hello0\", rs.getString(1));\n          assertEquals(18, rs.getDouble(\"sum(a_f)\"), 0);\n          assertEquals(18, rs.getDouble(2), 0);\n\n          assertTrue(rs.next());\n\n          assertEquals(\"hello4\", rs.getString(\"a_s\"));\n          assertEquals(\"hello4\", rs.getString(1));\n          assertEquals(11, rs.getDouble(\"sum(a_f)\"), 0);\n          assertEquals(11, rs.getDouble(2), 0);\n\n          assertFalse(rs.next());\n        }\n      }\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"bd78ba595fa6cdd7fff930f26d154d13a823fa47":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","b940572a59da1b42b6c20ab5278155b12816807a"],"116fdd6b9e04e18a6547a5650bc0afd3fda020aa":["8c969f15cd04d31e520319c619a445ae21f02d72","a1ef55e1fff7ff44354432770ad8bc19be1fcc75"],"73450c0955930295d34703e7ddbfc6973b7a121a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","b940572a59da1b42b6c20ab5278155b12816807a"],"a8ed5da4b0191db6bc7f77f9feb35da6bd76f904":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","73450c0955930295d34703e7ddbfc6973b7a121a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a1ef55e1fff7ff44354432770ad8bc19be1fcc75":["bd78ba595fa6cdd7fff930f26d154d13a823fa47","8c969f15cd04d31e520319c619a445ae21f02d72"],"8c969f15cd04d31e520319c619a445ae21f02d72":["73450c0955930295d34703e7ddbfc6973b7a121a"],"b940572a59da1b42b6c20ab5278155b12816807a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["116fdd6b9e04e18a6547a5650bc0afd3fda020aa"]},"commit2Childs":{"bd78ba595fa6cdd7fff930f26d154d13a823fa47":["a1ef55e1fff7ff44354432770ad8bc19be1fcc75"],"116fdd6b9e04e18a6547a5650bc0afd3fda020aa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"73450c0955930295d34703e7ddbfc6973b7a121a":["a8ed5da4b0191db6bc7f77f9feb35da6bd76f904","8c969f15cd04d31e520319c619a445ae21f02d72"],"a8ed5da4b0191db6bc7f77f9feb35da6bd76f904":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["bd78ba595fa6cdd7fff930f26d154d13a823fa47","73450c0955930295d34703e7ddbfc6973b7a121a","a8ed5da4b0191db6bc7f77f9feb35da6bd76f904","b940572a59da1b42b6c20ab5278155b12816807a"],"a1ef55e1fff7ff44354432770ad8bc19be1fcc75":["116fdd6b9e04e18a6547a5650bc0afd3fda020aa"],"8c969f15cd04d31e520319c619a445ae21f02d72":["116fdd6b9e04e18a6547a5650bc0afd3fda020aa","a1ef55e1fff7ff44354432770ad8bc19be1fcc75"],"b940572a59da1b42b6c20ab5278155b12816807a":["bd78ba595fa6cdd7fff930f26d154d13a823fa47","73450c0955930295d34703e7ddbfc6973b7a121a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a8ed5da4b0191db6bc7f77f9feb35da6bd76f904","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}