{"path":"lucene/src/java/org/apache/lucene/index/FieldInfo#FieldInfo(String,boolean,int,boolean,boolean,boolean,IndexOptions,DocValues.Type,DocValues.Type).mjava","commits":[{"id":"9e8d5a6ffbfa3405d234a87c833741eabed98d13","date":1326725835,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/FieldInfo#FieldInfo(String,boolean,int,boolean,boolean,boolean,IndexOptions,DocValues.Type,DocValues.Type).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/FieldInfo#FieldInfo(String,boolean,int,boolean,boolean,boolean,IndexOptions,DocValues.Type).mjava","sourceNew":"  /**\n   * @lucene.experimental\n   */\n  public FieldInfo(String name, boolean isIndexed, int number, boolean storeTermVector, \n            boolean omitNorms, boolean storePayloads, IndexOptions indexOptions, DocValues.Type docValues, DocValues.Type normsType) {\n    this.name = name;\n    this.isIndexed = isIndexed;\n    this.number = number;\n    this.docValueType = docValues;\n    if (isIndexed) {\n      this.storeTermVector = storeTermVector;\n      this.storePayloads = storePayloads;\n      this.omitNorms = omitNorms;\n      this.indexOptions = indexOptions;\n      this.normType = !omitNorms ? normsType : null;\n    } else { // for non-indexed fields, leave defaults\n      this.storeTermVector = false;\n      this.storePayloads = false;\n      this.omitNorms = false;\n      this.indexOptions = IndexOptions.DOCS_AND_FREQS_AND_POSITIONS;\n      this.normType = null;\n    }\n    assert indexOptions.compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS) >= 0 || !storePayloads;\n  }\n\n","sourceOld":"  /**\n   * @lucene.experimental\n   */\n  public FieldInfo(String name, boolean isIndexed, int number, boolean storeTermVector, \n            boolean omitNorms, boolean storePayloads, IndexOptions indexOptions, DocValues.Type docValues) {\n    this.name = name;\n    this.isIndexed = isIndexed;\n    this.number = number;\n    this.docValues = docValues;\n    if (isIndexed) {\n      this.storeTermVector = storeTermVector;\n      this.storePayloads = storePayloads;\n      this.omitNorms = omitNorms;\n      this.indexOptions = indexOptions;\n    } else { // for non-indexed fields, leave defaults\n      this.storeTermVector = false;\n      this.storePayloads = false;\n      this.omitNorms = false;\n      this.indexOptions = IndexOptions.DOCS_AND_FREQS_AND_POSITIONS;\n    }\n    assert indexOptions.compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS) >= 0 || !storePayloads;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/FieldInfo#FieldInfo(String,boolean,int,boolean,boolean,boolean,IndexOptions,DocValues.Type,DocValues.Type).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/FieldInfo#FieldInfo(String,boolean,int,boolean,boolean,boolean,IndexOptions,DocValues.Type,DocValues.Type).mjava","sourceNew":"  /**\n   * @lucene.experimental\n   */\n  public FieldInfo(String name, boolean isIndexed, int number, boolean storeTermVector, \n            boolean omitNorms, boolean storePayloads, IndexOptions indexOptions, DocValues.Type docValues, DocValues.Type normsType) {\n    this.name = name;\n    this.isIndexed = isIndexed;\n    this.number = number;\n    this.docValueType = docValues;\n    if (isIndexed) {\n      this.storeTermVector = storeTermVector;\n      this.storePayloads = storePayloads;\n      this.omitNorms = omitNorms;\n      this.indexOptions = indexOptions;\n      this.normType = !omitNorms ? normsType : null;\n    } else { // for non-indexed fields, leave defaults\n      this.storeTermVector = false;\n      this.storePayloads = false;\n      this.omitNorms = false;\n      this.indexOptions = IndexOptions.DOCS_AND_FREQS_AND_POSITIONS;\n      this.normType = null;\n    }\n    assert indexOptions.compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS) >= 0 || !storePayloads;\n  }\n\n","sourceOld":"  /**\n   * @lucene.experimental\n   */\n  public FieldInfo(String name, boolean isIndexed, int number, boolean storeTermVector, \n            boolean omitNorms, boolean storePayloads, IndexOptions indexOptions, DocValues.Type docValues, DocValues.Type normsType) {\n    this.name = name;\n    this.isIndexed = isIndexed;\n    this.number = number;\n    this.docValueType = docValues;\n    if (isIndexed) {\n      this.storeTermVector = storeTermVector;\n      this.storePayloads = storePayloads;\n      this.omitNorms = omitNorms;\n      this.indexOptions = indexOptions;\n      this.normType = !omitNorms ? normsType : null;\n    } else { // for non-indexed fields, leave defaults\n      this.storeTermVector = false;\n      this.storePayloads = false;\n      this.omitNorms = false;\n      this.indexOptions = IndexOptions.DOCS_AND_FREQS_AND_POSITIONS;\n      this.normType = null;\n    }\n    assert indexOptions.compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS) >= 0 || !storePayloads;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"9e8d5a6ffbfa3405d234a87c833741eabed98d13":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["9e8d5a6ffbfa3405d234a87c833741eabed98d13"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"9e8d5a6ffbfa3405d234a87c833741eabed98d13":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9e8d5a6ffbfa3405d234a87c833741eabed98d13"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}