{"path":"lucene/codecs/src/java/org/apache/lucene/codecs/temp/TempPulsingPostingsWriter#startDoc(int,int).mjava","commits":[{"id":"4f8633b56150a205774ee3e2adf1452a81b0d904","date":1376926002,"type":0,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/temp/TempPulsingPostingsWriter#startDoc(int,int).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void startDoc(int docID, int termDocFreq) throws IOException {\n    assert docID >= 0: \"got docID=\" + docID;\n\n    /*\n    if (termID != -1) {\n      if (docID == 0) {\n        baseDocID = termID;\n      } else if (baseDocID + docID != termID) {\n        throw new RuntimeException(\"WRITE: baseDocID=\" + baseDocID + \" docID=\" + docID + \" termID=\" + termID);\n      }\n    }\n    */\n\n    //if (DEBUG) System.out.println(\"PW     doc=\" + docID);\n\n    if (pendingCount == pending.length) {\n      push();\n      //if (DEBUG) System.out.println(\"PW: wrapped.finishDoc\");\n      wrappedPostingsWriter.finishDoc();\n    }\n\n    if (pendingCount != -1) {\n      assert pendingCount < pending.length;\n      currentDoc = pending[pendingCount];\n      currentDoc.docID = docID;\n      if (indexOptions == IndexOptions.DOCS_ONLY) {\n        pendingCount++;\n      } else if (indexOptions == IndexOptions.DOCS_AND_FREQS) { \n        pendingCount++;\n        currentDoc.termFreq = termDocFreq;\n      } else {\n        currentDoc.termFreq = termDocFreq;\n      }\n    } else {\n      // We've already seen too many docs for this term --\n      // just forward to our fallback writer\n      wrappedPostingsWriter.startDoc(docID, termDocFreq);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e6904bcc97d8afa27bd72ee29ac01e525e327ad4","date":1377958787,"type":4,"author":"Han Jiang","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/codecs/src/java/org/apache/lucene/codecs/temp/TempPulsingPostingsWriter#startDoc(int,int).mjava","sourceNew":null,"sourceOld":"  @Override\n  public void startDoc(int docID, int termDocFreq) throws IOException {\n    assert docID >= 0: \"got docID=\" + docID;\n\n    /*\n    if (termID != -1) {\n      if (docID == 0) {\n        baseDocID = termID;\n      } else if (baseDocID + docID != termID) {\n        throw new RuntimeException(\"WRITE: baseDocID=\" + baseDocID + \" docID=\" + docID + \" termID=\" + termID);\n      }\n    }\n    */\n\n    //if (DEBUG) System.out.println(\"PW     doc=\" + docID);\n\n    if (pendingCount == pending.length) {\n      push();\n      //if (DEBUG) System.out.println(\"PW: wrapped.finishDoc\");\n      wrappedPostingsWriter.finishDoc();\n    }\n\n    if (pendingCount != -1) {\n      assert pendingCount < pending.length;\n      currentDoc = pending[pendingCount];\n      currentDoc.docID = docID;\n      if (indexOptions == IndexOptions.DOCS_ONLY) {\n        pendingCount++;\n      } else if (indexOptions == IndexOptions.DOCS_AND_FREQS) { \n        pendingCount++;\n        currentDoc.termFreq = termDocFreq;\n      } else {\n        currentDoc.termFreq = termDocFreq;\n      }\n    } else {\n      // We've already seen too many docs for this term --\n      // just forward to our fallback writer\n      wrappedPostingsWriter.startDoc(docID, termDocFreq);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e6904bcc97d8afa27bd72ee29ac01e525e327ad4":["4f8633b56150a205774ee3e2adf1452a81b0d904"],"4f8633b56150a205774ee3e2adf1452a81b0d904":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4f8633b56150a205774ee3e2adf1452a81b0d904","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e6904bcc97d8afa27bd72ee29ac01e525e327ad4":[],"4f8633b56150a205774ee3e2adf1452a81b0d904":["e6904bcc97d8afa27bd72ee29ac01e525e327ad4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e6904bcc97d8afa27bd72ee29ac01e525e327ad4","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}