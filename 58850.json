{"path":"src/java/org/apache/lucene/queryParser/QueryParser#Term(String).mjava","commits":[{"id":"9dc3f3d3156ee3e335155b8a8f44f7e926db09ef","date":1063245093,"type":0,"author":"Erik Hatcher","isMerge":false,"pathNew":"src/java/org/apache/lucene/queryParser/QueryParser#Term(String).mjava","pathOld":"/dev/null","sourceNew":"  final public Query Term(String field) throws ParseException {\n  Token term, boost=null, slop=null, goop1, goop2;\n  boolean prefix = false;\n  boolean wildcard = false;\n  boolean fuzzy = false;\n  boolean rangein = false;\n  Query q;\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case TERM:\n    case PREFIXTERM:\n    case WILDTERM:\n    case NUMBER:\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case TERM:\n        term = jj_consume_token(TERM);\n        break;\n      case PREFIXTERM:\n        term = jj_consume_token(PREFIXTERM);\n                             prefix=true;\n        break;\n      case WILDTERM:\n        term = jj_consume_token(WILDTERM);\n                           wildcard=true;\n        break;\n      case NUMBER:\n        term = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[7] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY:\n        jj_consume_token(FUZZY);\n                 fuzzy=true;\n        break;\n      default:\n        jj_la1[8] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n        case FUZZY:\n          jj_consume_token(FUZZY);\n                                          fuzzy=true;\n          break;\n        default:\n          jj_la1[9] = jj_gen;\n          ;\n        }\n        break;\n      default:\n        jj_la1[10] = jj_gen;\n        ;\n      }\n       if (wildcard) {\n         q = getWildcardQuery(field, term.image);\n       } else if (prefix) {\n         q = getPrefixQuery(field, term.image.substring\n                            (0, term.image.length()-1));\n       } else if (fuzzy) {\n         q = getFuzzyQuery(field, term.image);\n       } else {\n         q = getFieldQuery(field, analyzer, term.image);\n       }\n      break;\n    case RANGEIN_START:\n      jj_consume_token(RANGEIN_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop1 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop1 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[11] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_TO:\n        jj_consume_token(RANGEIN_TO);\n        break;\n      default:\n        jj_la1[12] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop2 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop2 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[13] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEIN_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[14] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEIN_QUOTED)\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          if (goop2.kind == RANGEIN_QUOTED)\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n\n          q = getRangeQuery(field, analyzer, goop1.image, goop2.image, true);\n      break;\n    case RANGEEX_START:\n      jj_consume_token(RANGEEX_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop1 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop1 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[15] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_TO:\n        jj_consume_token(RANGEEX_TO);\n        break;\n      default:\n        jj_la1[16] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop2 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop2 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[17] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEEX_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[18] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEEX_QUOTED)\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          if (goop2.kind == RANGEEX_QUOTED)\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n\n          q = getRangeQuery(field, analyzer, goop1.image, goop2.image, false);\n      break;\n    case QUOTED:\n      term = jj_consume_token(QUOTED);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case SLOP:\n        slop = jj_consume_token(SLOP);\n        break;\n      default:\n        jj_la1[19] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[20] = jj_gen;\n        ;\n      }\n         q = getFieldQuery(field, analyzer,\n                           term.image.substring(1, term.image.length()-1));\n         if (slop != null && q instanceof PhraseQuery) {\n           try {\n             int s = Float.valueOf(slop.image.substring(1)).intValue();\n             ((PhraseQuery) q).setSlop(s);\n           }\n           catch (Exception ignored) { }\n         }\n      break;\n    default:\n      jj_la1[21] = jj_gen;\n      jj_consume_token(-1);\n      throw new ParseException();\n    }\n    if (boost != null) {\n      float f = (float) 1.0;\n      try {\n        f = Float.valueOf(boost.image).floatValue();\n      }\n      catch (Exception ignored) {\n          /* Should this be handled somehow? (defaults to \"no boost\", if\n\t   * boost number is invalid)\n\t   */\n      }\n\n      // avoid boosting null queries, such as those caused by stop words\n      if (q != null) {\n        q.setBoost(f);\n      }\n    }\n    {if (true) return q;}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["471724efa83a52ac3ce4aec0a6e9f1836fa71bf3"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"23a9c25687aa751efff1049f8b18ae27091ec453","date":1078313089,"type":3,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"src/java/org/apache/lucene/queryParser/QueryParser#Term(String).mjava","pathOld":"src/java/org/apache/lucene/queryParser/QueryParser#Term(String).mjava","sourceNew":"  final public Query Term(String field) throws ParseException {\n  Token term, boost=null, slop=null, goop1, goop2;\n  boolean prefix = false;\n  boolean wildcard = false;\n  boolean fuzzy = false;\n  boolean rangein = false;\n  Query q;\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case TERM:\n    case PREFIXTERM:\n    case WILDTERM:\n    case NUMBER:\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case TERM:\n        term = jj_consume_token(TERM);\n        break;\n      case PREFIXTERM:\n        term = jj_consume_token(PREFIXTERM);\n                             prefix=true;\n        break;\n      case WILDTERM:\n        term = jj_consume_token(WILDTERM);\n                           wildcard=true;\n        break;\n      case NUMBER:\n        term = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[7] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY:\n        jj_consume_token(FUZZY);\n                 fuzzy=true;\n        break;\n      default:\n        jj_la1[8] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n        case FUZZY:\n          jj_consume_token(FUZZY);\n                                          fuzzy=true;\n          break;\n        default:\n          jj_la1[9] = jj_gen;\n          ;\n        }\n        break;\n      default:\n        jj_la1[10] = jj_gen;\n        ;\n      }\n       String termImage=discardEscapeChar(term.image);\n       if (wildcard) {\n             q = getWildcardQuery(field, termImage);\n       } else if (prefix) {\n         q = getPrefixQuery(field,\n                discardEscapeChar(term.image.substring\n                            (0, term.image.length()-1)));\n       } else if (fuzzy) {\n         q = getFuzzyQuery(field, termImage);\n       } else {\n         q = getFieldQuery(field, analyzer, termImage);\n       }\n      break;\n    case RANGEIN_START:\n      jj_consume_token(RANGEIN_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop1 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop1 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[11] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_TO:\n        jj_consume_token(RANGEIN_TO);\n        break;\n      default:\n        jj_la1[12] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop2 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop2 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[13] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEIN_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[14] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEIN_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          } else {\n                goop1.image = discardEscapeChar(goop1.image);\n          }\n          if (goop2.kind == RANGEIN_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n                  } else {\n                        goop2.image = discardEscapeChar(goop2.image);\n                  }\n          q = getRangeQuery(field, analyzer, goop1.image, goop2.image, true);\n      break;\n    case RANGEEX_START:\n      jj_consume_token(RANGEEX_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop1 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop1 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[15] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_TO:\n        jj_consume_token(RANGEEX_TO);\n        break;\n      default:\n        jj_la1[16] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop2 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop2 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[17] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEEX_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[18] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEEX_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          } else {\n            goop1.image = discardEscapeChar(goop1.image);\n          }\n          if (goop2.kind == RANGEEX_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n                  } else {\n                        goop2.image = discardEscapeChar(goop2.image);\n                  }\n\n          q = getRangeQuery(field, analyzer, goop1.image, goop2.image, false);\n      break;\n    case QUOTED:\n      term = jj_consume_token(QUOTED);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case SLOP:\n        slop = jj_consume_token(SLOP);\n        break;\n      default:\n        jj_la1[19] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[20] = jj_gen;\n        ;\n      }\n         q = getFieldQuery(field, analyzer,\n                           term.image.substring(1, term.image.length()-1));\n         if (slop != null && q instanceof PhraseQuery) {\n           try {\n             int s = Float.valueOf(slop.image.substring(1)).intValue();\n             ((PhraseQuery) q).setSlop(s);\n           }\n           catch (Exception ignored) { }\n         }\n      break;\n    default:\n      jj_la1[21] = jj_gen;\n      jj_consume_token(-1);\n      throw new ParseException();\n    }\n    if (boost != null) {\n      float f = (float) 1.0;\n      try {\n        f = Float.valueOf(boost.image).floatValue();\n      }\n      catch (Exception ignored) {\n          /* Should this be handled somehow? (defaults to \"no boost\", if\n\t   * boost number is invalid)\n\t   */\n      }\n\n      // avoid boosting null queries, such as those caused by stop words\n      if (q != null) {\n        q.setBoost(f);\n      }\n    }\n    {if (true) return q;}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","sourceOld":"  final public Query Term(String field) throws ParseException {\n  Token term, boost=null, slop=null, goop1, goop2;\n  boolean prefix = false;\n  boolean wildcard = false;\n  boolean fuzzy = false;\n  boolean rangein = false;\n  Query q;\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case TERM:\n    case PREFIXTERM:\n    case WILDTERM:\n    case NUMBER:\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case TERM:\n        term = jj_consume_token(TERM);\n        break;\n      case PREFIXTERM:\n        term = jj_consume_token(PREFIXTERM);\n                             prefix=true;\n        break;\n      case WILDTERM:\n        term = jj_consume_token(WILDTERM);\n                           wildcard=true;\n        break;\n      case NUMBER:\n        term = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[7] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY:\n        jj_consume_token(FUZZY);\n                 fuzzy=true;\n        break;\n      default:\n        jj_la1[8] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n        case FUZZY:\n          jj_consume_token(FUZZY);\n                                          fuzzy=true;\n          break;\n        default:\n          jj_la1[9] = jj_gen;\n          ;\n        }\n        break;\n      default:\n        jj_la1[10] = jj_gen;\n        ;\n      }\n       if (wildcard) {\n         q = getWildcardQuery(field, term.image);\n       } else if (prefix) {\n         q = getPrefixQuery(field, term.image.substring\n                            (0, term.image.length()-1));\n       } else if (fuzzy) {\n         q = getFuzzyQuery(field, term.image);\n       } else {\n         q = getFieldQuery(field, analyzer, term.image);\n       }\n      break;\n    case RANGEIN_START:\n      jj_consume_token(RANGEIN_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop1 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop1 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[11] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_TO:\n        jj_consume_token(RANGEIN_TO);\n        break;\n      default:\n        jj_la1[12] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop2 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop2 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[13] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEIN_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[14] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEIN_QUOTED)\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          if (goop2.kind == RANGEIN_QUOTED)\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n\n          q = getRangeQuery(field, analyzer, goop1.image, goop2.image, true);\n      break;\n    case RANGEEX_START:\n      jj_consume_token(RANGEEX_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop1 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop1 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[15] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_TO:\n        jj_consume_token(RANGEEX_TO);\n        break;\n      default:\n        jj_la1[16] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop2 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop2 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[17] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEEX_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[18] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEEX_QUOTED)\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          if (goop2.kind == RANGEEX_QUOTED)\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n\n          q = getRangeQuery(field, analyzer, goop1.image, goop2.image, false);\n      break;\n    case QUOTED:\n      term = jj_consume_token(QUOTED);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case SLOP:\n        slop = jj_consume_token(SLOP);\n        break;\n      default:\n        jj_la1[19] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[20] = jj_gen;\n        ;\n      }\n         q = getFieldQuery(field, analyzer,\n                           term.image.substring(1, term.image.length()-1));\n         if (slop != null && q instanceof PhraseQuery) {\n           try {\n             int s = Float.valueOf(slop.image.substring(1)).intValue();\n             ((PhraseQuery) q).setSlop(s);\n           }\n           catch (Exception ignored) { }\n         }\n      break;\n    default:\n      jj_la1[21] = jj_gen;\n      jj_consume_token(-1);\n      throw new ParseException();\n    }\n    if (boost != null) {\n      float f = (float) 1.0;\n      try {\n        f = Float.valueOf(boost.image).floatValue();\n      }\n      catch (Exception ignored) {\n          /* Should this be handled somehow? (defaults to \"no boost\", if\n\t   * boost number is invalid)\n\t   */\n      }\n\n      // avoid boosting null queries, such as those caused by stop words\n      if (q != null) {\n        q.setBoost(f);\n      }\n    }\n    {if (true) return q;}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","bugFix":null,"bugIntro":["84ba3b83816da930e6c14253827f6b2589b298e9"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"f9eacfbe2ad1cb736606c0e0093f7f3ab4a2e13c","date":1078315633,"type":3,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"src/java/org/apache/lucene/queryParser/QueryParser#Term(String).mjava","pathOld":"src/java/org/apache/lucene/queryParser/QueryParser#Term(String).mjava","sourceNew":"  final public Query Term(String field) throws ParseException {\n  Token term, boost=null, slop=null, goop1, goop2;\n  boolean prefix = false;\n  boolean wildcard = false;\n  boolean fuzzy = false;\n  boolean rangein = false;\n  Query q;\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case TERM:\n    case PREFIXTERM:\n    case WILDTERM:\n    case NUMBER:\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case TERM:\n        term = jj_consume_token(TERM);\n        break;\n      case PREFIXTERM:\n        term = jj_consume_token(PREFIXTERM);\n                             prefix=true;\n        break;\n      case WILDTERM:\n        term = jj_consume_token(WILDTERM);\n                           wildcard=true;\n        break;\n      case NUMBER:\n        term = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[7] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY:\n        jj_consume_token(FUZZY);\n                 fuzzy=true;\n        break;\n      default:\n        jj_la1[8] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n        case FUZZY:\n          jj_consume_token(FUZZY);\n                                          fuzzy=true;\n          break;\n        default:\n          jj_la1[9] = jj_gen;\n          ;\n        }\n        break;\n      default:\n        jj_la1[10] = jj_gen;\n        ;\n      }\n       String termImage=discardEscapeChar(term.image);\n       if (wildcard) {\n       q = getWildcardQuery(field, termImage);\n       } else if (prefix) {\n         q = getPrefixQuery(field,\n           discardEscapeChar(term.image.substring\n          (0, term.image.length()-1)));\n       } else if (fuzzy) {\n         q = getFuzzyQuery(field, termImage);\n       } else {\n         q = getFieldQuery(field, analyzer, termImage);\n       }\n      break;\n    case RANGEIN_START:\n      jj_consume_token(RANGEIN_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop1 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop1 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[11] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_TO:\n        jj_consume_token(RANGEIN_TO);\n        break;\n      default:\n        jj_la1[12] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop2 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop2 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[13] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEIN_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[14] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEIN_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          } else {\n            goop1.image = discardEscapeChar(goop1.image);\n          }\n          if (goop2.kind == RANGEIN_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n      } else {\n        goop2.image = discardEscapeChar(goop2.image);\n      }\n          q = getRangeQuery(field, analyzer, goop1.image, goop2.image, true);\n      break;\n    case RANGEEX_START:\n      jj_consume_token(RANGEEX_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop1 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop1 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[15] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_TO:\n        jj_consume_token(RANGEEX_TO);\n        break;\n      default:\n        jj_la1[16] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop2 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop2 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[17] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEEX_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[18] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEEX_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          } else {\n            goop1.image = discardEscapeChar(goop1.image);\n          }\n          if (goop2.kind == RANGEEX_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n      } else {\n        goop2.image = discardEscapeChar(goop2.image);\n      }\n\n          q = getRangeQuery(field, analyzer, goop1.image, goop2.image, false);\n      break;\n    case QUOTED:\n      term = jj_consume_token(QUOTED);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case SLOP:\n        slop = jj_consume_token(SLOP);\n        break;\n      default:\n        jj_la1[19] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[20] = jj_gen;\n        ;\n      }\n         q = getFieldQuery(field, analyzer,\n                           term.image.substring(1, term.image.length()-1));\n         if (slop != null && q instanceof PhraseQuery) {\n           try {\n             int s = Float.valueOf(slop.image.substring(1)).intValue();\n             ((PhraseQuery) q).setSlop(s);\n           }\n           catch (Exception ignored) { }\n         }\n      break;\n    default:\n      jj_la1[21] = jj_gen;\n      jj_consume_token(-1);\n      throw new ParseException();\n    }\n    if (boost != null) {\n      float f = (float) 1.0;\n      try {\n        f = Float.valueOf(boost.image).floatValue();\n      }\n      catch (Exception ignored) {\n    /* Should this be handled somehow? (defaults to \"no boost\", if\n     * boost number is invalid)\n     */\n      }\n\n      // avoid boosting null queries, such as those caused by stop words\n      if (q != null) {\n        q.setBoost(f);\n      }\n    }\n    {if (true) return q;}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","sourceOld":"  final public Query Term(String field) throws ParseException {\n  Token term, boost=null, slop=null, goop1, goop2;\n  boolean prefix = false;\n  boolean wildcard = false;\n  boolean fuzzy = false;\n  boolean rangein = false;\n  Query q;\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case TERM:\n    case PREFIXTERM:\n    case WILDTERM:\n    case NUMBER:\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case TERM:\n        term = jj_consume_token(TERM);\n        break;\n      case PREFIXTERM:\n        term = jj_consume_token(PREFIXTERM);\n                             prefix=true;\n        break;\n      case WILDTERM:\n        term = jj_consume_token(WILDTERM);\n                           wildcard=true;\n        break;\n      case NUMBER:\n        term = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[7] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY:\n        jj_consume_token(FUZZY);\n                 fuzzy=true;\n        break;\n      default:\n        jj_la1[8] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n        case FUZZY:\n          jj_consume_token(FUZZY);\n                                          fuzzy=true;\n          break;\n        default:\n          jj_la1[9] = jj_gen;\n          ;\n        }\n        break;\n      default:\n        jj_la1[10] = jj_gen;\n        ;\n      }\n       String termImage=discardEscapeChar(term.image);\n       if (wildcard) {\n             q = getWildcardQuery(field, termImage);\n       } else if (prefix) {\n         q = getPrefixQuery(field,\n                discardEscapeChar(term.image.substring\n                            (0, term.image.length()-1)));\n       } else if (fuzzy) {\n         q = getFuzzyQuery(field, termImage);\n       } else {\n         q = getFieldQuery(field, analyzer, termImage);\n       }\n      break;\n    case RANGEIN_START:\n      jj_consume_token(RANGEIN_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop1 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop1 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[11] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_TO:\n        jj_consume_token(RANGEIN_TO);\n        break;\n      default:\n        jj_la1[12] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop2 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop2 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[13] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEIN_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[14] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEIN_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          } else {\n                goop1.image = discardEscapeChar(goop1.image);\n          }\n          if (goop2.kind == RANGEIN_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n                  } else {\n                        goop2.image = discardEscapeChar(goop2.image);\n                  }\n          q = getRangeQuery(field, analyzer, goop1.image, goop2.image, true);\n      break;\n    case RANGEEX_START:\n      jj_consume_token(RANGEEX_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop1 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop1 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[15] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_TO:\n        jj_consume_token(RANGEEX_TO);\n        break;\n      default:\n        jj_la1[16] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop2 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop2 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[17] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEEX_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[18] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEEX_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          } else {\n            goop1.image = discardEscapeChar(goop1.image);\n          }\n          if (goop2.kind == RANGEEX_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n                  } else {\n                        goop2.image = discardEscapeChar(goop2.image);\n                  }\n\n          q = getRangeQuery(field, analyzer, goop1.image, goop2.image, false);\n      break;\n    case QUOTED:\n      term = jj_consume_token(QUOTED);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case SLOP:\n        slop = jj_consume_token(SLOP);\n        break;\n      default:\n        jj_la1[19] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[20] = jj_gen;\n        ;\n      }\n         q = getFieldQuery(field, analyzer,\n                           term.image.substring(1, term.image.length()-1));\n         if (slop != null && q instanceof PhraseQuery) {\n           try {\n             int s = Float.valueOf(slop.image.substring(1)).intValue();\n             ((PhraseQuery) q).setSlop(s);\n           }\n           catch (Exception ignored) { }\n         }\n      break;\n    default:\n      jj_la1[21] = jj_gen;\n      jj_consume_token(-1);\n      throw new ParseException();\n    }\n    if (boost != null) {\n      float f = (float) 1.0;\n      try {\n        f = Float.valueOf(boost.image).floatValue();\n      }\n      catch (Exception ignored) {\n          /* Should this be handled somehow? (defaults to \"no boost\", if\n\t   * boost number is invalid)\n\t   */\n      }\n\n      // avoid boosting null queries, such as those caused by stop words\n      if (q != null) {\n        q.setBoost(f);\n      }\n    }\n    {if (true) return q;}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","bugFix":null,"bugIntro":["84ba3b83816da930e6c14253827f6b2589b298e9"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"e4cfd86408c5c098f45362646b511c6791013d37","date":1085247271,"type":3,"author":"Erik Hatcher","isMerge":false,"pathNew":"src/java/org/apache/lucene/queryParser/QueryParser#Term(String).mjava","pathOld":"src/java/org/apache/lucene/queryParser/QueryParser#Term(String).mjava","sourceNew":"  final public Query Term(String field) throws ParseException {\n  Token term, boost=null, slop=null, goop1, goop2;\n  boolean prefix = false;\n  boolean wildcard = false;\n  boolean fuzzy = false;\n  boolean rangein = false;\n  Query q;\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case TERM:\n    case PREFIXTERM:\n    case WILDTERM:\n    case NUMBER:\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case TERM:\n        term = jj_consume_token(TERM);\n        break;\n      case PREFIXTERM:\n        term = jj_consume_token(PREFIXTERM);\n                             prefix=true;\n        break;\n      case WILDTERM:\n        term = jj_consume_token(WILDTERM);\n                           wildcard=true;\n        break;\n      case NUMBER:\n        term = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[7] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY:\n        jj_consume_token(FUZZY);\n                 fuzzy=true;\n        break;\n      default:\n        jj_la1[8] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n        case FUZZY:\n          jj_consume_token(FUZZY);\n                                          fuzzy=true;\n          break;\n        default:\n          jj_la1[9] = jj_gen;\n          ;\n        }\n        break;\n      default:\n        jj_la1[10] = jj_gen;\n        ;\n      }\n       String termImage=discardEscapeChar(term.image);\n       if (wildcard) {\n       q = getWildcardQuery(field, termImage);\n       } else if (prefix) {\n         q = getPrefixQuery(field,\n           discardEscapeChar(term.image.substring\n          (0, term.image.length()-1)));\n       } else if (fuzzy) {\n         q = getFuzzyQuery(field, termImage);\n       } else {\n         q = getFieldQuery(field, analyzer, termImage);\n       }\n      break;\n    case RANGEIN_START:\n      jj_consume_token(RANGEIN_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop1 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop1 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[11] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_TO:\n        jj_consume_token(RANGEIN_TO);\n        break;\n      default:\n        jj_la1[12] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop2 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop2 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[13] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEIN_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[14] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEIN_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          } else {\n            goop1.image = discardEscapeChar(goop1.image);\n          }\n          if (goop2.kind == RANGEIN_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n      } else {\n        goop2.image = discardEscapeChar(goop2.image);\n      }\n          q = getRangeQuery(field, analyzer, goop1.image, goop2.image, true);\n      break;\n    case RANGEEX_START:\n      jj_consume_token(RANGEEX_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop1 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop1 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[15] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_TO:\n        jj_consume_token(RANGEEX_TO);\n        break;\n      default:\n        jj_la1[16] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop2 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop2 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[17] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEEX_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[18] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEEX_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          } else {\n            goop1.image = discardEscapeChar(goop1.image);\n          }\n          if (goop2.kind == RANGEEX_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n      } else {\n        goop2.image = discardEscapeChar(goop2.image);\n      }\n\n          q = getRangeQuery(field, analyzer, goop1.image, goop2.image, false);\n      break;\n    case QUOTED:\n      term = jj_consume_token(QUOTED);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case SLOP:\n        slop = jj_consume_token(SLOP);\n        break;\n      default:\n        jj_la1[19] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[20] = jj_gen;\n        ;\n      }\n         int s = phraseSlop;\n\n         if (slop != null) {\n           try {\n             s = Float.valueOf(slop.image.substring(1)).intValue();\n           }\n           catch (Exception ignored) { }\n         }\n         q = getFieldQuery(field, analyzer,\n                           term.image.substring(1, term.image.length()-1),\n                           s);\n      break;\n    default:\n      jj_la1[21] = jj_gen;\n      jj_consume_token(-1);\n      throw new ParseException();\n    }\n    if (boost != null) {\n      float f = (float) 1.0;\n      try {\n        f = Float.valueOf(boost.image).floatValue();\n      }\n      catch (Exception ignored) {\n    /* Should this be handled somehow? (defaults to \"no boost\", if\n     * boost number is invalid)\n     */\n      }\n\n      // avoid boosting null queries, such as those caused by stop words\n      if (q != null) {\n        q.setBoost(f);\n      }\n    }\n    {if (true) return q;}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","sourceOld":"  final public Query Term(String field) throws ParseException {\n  Token term, boost=null, slop=null, goop1, goop2;\n  boolean prefix = false;\n  boolean wildcard = false;\n  boolean fuzzy = false;\n  boolean rangein = false;\n  Query q;\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case TERM:\n    case PREFIXTERM:\n    case WILDTERM:\n    case NUMBER:\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case TERM:\n        term = jj_consume_token(TERM);\n        break;\n      case PREFIXTERM:\n        term = jj_consume_token(PREFIXTERM);\n                             prefix=true;\n        break;\n      case WILDTERM:\n        term = jj_consume_token(WILDTERM);\n                           wildcard=true;\n        break;\n      case NUMBER:\n        term = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[7] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY:\n        jj_consume_token(FUZZY);\n                 fuzzy=true;\n        break;\n      default:\n        jj_la1[8] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n        case FUZZY:\n          jj_consume_token(FUZZY);\n                                          fuzzy=true;\n          break;\n        default:\n          jj_la1[9] = jj_gen;\n          ;\n        }\n        break;\n      default:\n        jj_la1[10] = jj_gen;\n        ;\n      }\n       String termImage=discardEscapeChar(term.image);\n       if (wildcard) {\n       q = getWildcardQuery(field, termImage);\n       } else if (prefix) {\n         q = getPrefixQuery(field,\n           discardEscapeChar(term.image.substring\n          (0, term.image.length()-1)));\n       } else if (fuzzy) {\n         q = getFuzzyQuery(field, termImage);\n       } else {\n         q = getFieldQuery(field, analyzer, termImage);\n       }\n      break;\n    case RANGEIN_START:\n      jj_consume_token(RANGEIN_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop1 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop1 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[11] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_TO:\n        jj_consume_token(RANGEIN_TO);\n        break;\n      default:\n        jj_la1[12] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop2 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop2 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[13] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEIN_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[14] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEIN_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          } else {\n            goop1.image = discardEscapeChar(goop1.image);\n          }\n          if (goop2.kind == RANGEIN_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n      } else {\n        goop2.image = discardEscapeChar(goop2.image);\n      }\n          q = getRangeQuery(field, analyzer, goop1.image, goop2.image, true);\n      break;\n    case RANGEEX_START:\n      jj_consume_token(RANGEEX_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop1 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop1 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[15] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_TO:\n        jj_consume_token(RANGEEX_TO);\n        break;\n      default:\n        jj_la1[16] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop2 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop2 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[17] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEEX_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[18] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEEX_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          } else {\n            goop1.image = discardEscapeChar(goop1.image);\n          }\n          if (goop2.kind == RANGEEX_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n      } else {\n        goop2.image = discardEscapeChar(goop2.image);\n      }\n\n          q = getRangeQuery(field, analyzer, goop1.image, goop2.image, false);\n      break;\n    case QUOTED:\n      term = jj_consume_token(QUOTED);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case SLOP:\n        slop = jj_consume_token(SLOP);\n        break;\n      default:\n        jj_la1[19] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[20] = jj_gen;\n        ;\n      }\n         q = getFieldQuery(field, analyzer,\n                           term.image.substring(1, term.image.length()-1));\n         if (slop != null && q instanceof PhraseQuery) {\n           try {\n             int s = Float.valueOf(slop.image.substring(1)).intValue();\n             ((PhraseQuery) q).setSlop(s);\n           }\n           catch (Exception ignored) { }\n         }\n      break;\n    default:\n      jj_la1[21] = jj_gen;\n      jj_consume_token(-1);\n      throw new ParseException();\n    }\n    if (boost != null) {\n      float f = (float) 1.0;\n      try {\n        f = Float.valueOf(boost.image).floatValue();\n      }\n      catch (Exception ignored) {\n    /* Should this be handled somehow? (defaults to \"no boost\", if\n     * boost number is invalid)\n     */\n      }\n\n      // avoid boosting null queries, such as those caused by stop words\n      if (q != null) {\n        q.setBoost(f);\n      }\n    }\n    {if (true) return q;}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7a744f34b732efe0beb11df92bde24ccc01460dc","date":1094656002,"type":3,"author":"Christoph Goller","isMerge":false,"pathNew":"src/java/org/apache/lucene/queryParser/QueryParser#Term(String).mjava","pathOld":"src/java/org/apache/lucene/queryParser/QueryParser#Term(String).mjava","sourceNew":"  final public Query Term(String field) throws ParseException {\n  Token term, boost=null, slop=null, goop1, goop2;\n  boolean prefix = false;\n  boolean wildcard = false;\n  boolean fuzzy = false;\n  boolean rangein = false;\n  Query q;\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case TERM:\n    case PREFIXTERM:\n    case WILDTERM:\n    case NUMBER:\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case TERM:\n        term = jj_consume_token(TERM);\n        break;\n      case PREFIXTERM:\n        term = jj_consume_token(PREFIXTERM);\n                             prefix=true;\n        break;\n      case WILDTERM:\n        term = jj_consume_token(WILDTERM);\n                           wildcard=true;\n        break;\n      case NUMBER:\n        term = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[7] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY:\n        jj_consume_token(FUZZY);\n                 fuzzy=true;\n        break;\n      default:\n        jj_la1[8] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n        case FUZZY:\n          jj_consume_token(FUZZY);\n                                          fuzzy=true;\n          break;\n        default:\n          jj_la1[9] = jj_gen;\n          ;\n        }\n        break;\n      default:\n        jj_la1[10] = jj_gen;\n        ;\n      }\n       String termImage=discardEscapeChar(term.image);\n       if (wildcard) {\n       q = getWildcardQuery(field, termImage);\n       } else if (prefix) {\n         q = getPrefixQuery(field,\n           discardEscapeChar(term.image.substring\n          (0, term.image.length()-1)));\n       } else if (fuzzy) {\n         q = getFuzzyQuery(field, termImage);\n       } else {\n         q = getFieldQuery(field, termImage);\n       }\n      break;\n    case RANGEIN_START:\n      jj_consume_token(RANGEIN_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop1 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop1 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[11] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_TO:\n        jj_consume_token(RANGEIN_TO);\n        break;\n      default:\n        jj_la1[12] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop2 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop2 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[13] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEIN_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[14] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEIN_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          } else {\n            goop1.image = discardEscapeChar(goop1.image);\n          }\n          if (goop2.kind == RANGEIN_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n      } else {\n        goop2.image = discardEscapeChar(goop2.image);\n      }\n          q = getRangeQuery(field, goop1.image, goop2.image, true);\n      break;\n    case RANGEEX_START:\n      jj_consume_token(RANGEEX_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop1 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop1 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[15] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_TO:\n        jj_consume_token(RANGEEX_TO);\n        break;\n      default:\n        jj_la1[16] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop2 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop2 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[17] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEEX_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[18] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEEX_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          } else {\n            goop1.image = discardEscapeChar(goop1.image);\n          }\n          if (goop2.kind == RANGEEX_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n      } else {\n        goop2.image = discardEscapeChar(goop2.image);\n      }\n\n          q = getRangeQuery(field, goop1.image, goop2.image, false);\n      break;\n    case QUOTED:\n      term = jj_consume_token(QUOTED);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case SLOP:\n        slop = jj_consume_token(SLOP);\n        break;\n      default:\n        jj_la1[19] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[20] = jj_gen;\n        ;\n      }\n         int s = phraseSlop;\n\n         if (slop != null) {\n           try {\n             s = Float.valueOf(slop.image.substring(1)).intValue();\n           }\n           catch (Exception ignored) { }\n         }\n         q = getFieldQuery(field, term.image.substring(1, term.image.length()-1), s);\n      break;\n    default:\n      jj_la1[21] = jj_gen;\n      jj_consume_token(-1);\n      throw new ParseException();\n    }\n    if (boost != null) {\n      float f = (float) 1.0;\n      try {\n        f = Float.valueOf(boost.image).floatValue();\n      }\n      catch (Exception ignored) {\n    /* Should this be handled somehow? (defaults to \"no boost\", if\n     * boost number is invalid)\n     */\n      }\n\n      // avoid boosting null queries, such as those caused by stop words\n      if (q != null) {\n        q.setBoost(f);\n      }\n    }\n    {if (true) return q;}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","sourceOld":"  final public Query Term(String field) throws ParseException {\n  Token term, boost=null, slop=null, goop1, goop2;\n  boolean prefix = false;\n  boolean wildcard = false;\n  boolean fuzzy = false;\n  boolean rangein = false;\n  Query q;\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case TERM:\n    case PREFIXTERM:\n    case WILDTERM:\n    case NUMBER:\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case TERM:\n        term = jj_consume_token(TERM);\n        break;\n      case PREFIXTERM:\n        term = jj_consume_token(PREFIXTERM);\n                             prefix=true;\n        break;\n      case WILDTERM:\n        term = jj_consume_token(WILDTERM);\n                           wildcard=true;\n        break;\n      case NUMBER:\n        term = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[7] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY:\n        jj_consume_token(FUZZY);\n                 fuzzy=true;\n        break;\n      default:\n        jj_la1[8] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n        case FUZZY:\n          jj_consume_token(FUZZY);\n                                          fuzzy=true;\n          break;\n        default:\n          jj_la1[9] = jj_gen;\n          ;\n        }\n        break;\n      default:\n        jj_la1[10] = jj_gen;\n        ;\n      }\n       String termImage=discardEscapeChar(term.image);\n       if (wildcard) {\n       q = getWildcardQuery(field, termImage);\n       } else if (prefix) {\n         q = getPrefixQuery(field,\n           discardEscapeChar(term.image.substring\n          (0, term.image.length()-1)));\n       } else if (fuzzy) {\n         q = getFuzzyQuery(field, termImage);\n       } else {\n         q = getFieldQuery(field, analyzer, termImage);\n       }\n      break;\n    case RANGEIN_START:\n      jj_consume_token(RANGEIN_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop1 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop1 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[11] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_TO:\n        jj_consume_token(RANGEIN_TO);\n        break;\n      default:\n        jj_la1[12] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop2 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop2 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[13] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEIN_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[14] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEIN_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          } else {\n            goop1.image = discardEscapeChar(goop1.image);\n          }\n          if (goop2.kind == RANGEIN_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n      } else {\n        goop2.image = discardEscapeChar(goop2.image);\n      }\n          q = getRangeQuery(field, analyzer, goop1.image, goop2.image, true);\n      break;\n    case RANGEEX_START:\n      jj_consume_token(RANGEEX_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop1 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop1 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[15] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_TO:\n        jj_consume_token(RANGEEX_TO);\n        break;\n      default:\n        jj_la1[16] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop2 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop2 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[17] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEEX_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[18] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEEX_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          } else {\n            goop1.image = discardEscapeChar(goop1.image);\n          }\n          if (goop2.kind == RANGEEX_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n      } else {\n        goop2.image = discardEscapeChar(goop2.image);\n      }\n\n          q = getRangeQuery(field, analyzer, goop1.image, goop2.image, false);\n      break;\n    case QUOTED:\n      term = jj_consume_token(QUOTED);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case SLOP:\n        slop = jj_consume_token(SLOP);\n        break;\n      default:\n        jj_la1[19] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[20] = jj_gen;\n        ;\n      }\n         int s = phraseSlop;\n\n         if (slop != null) {\n           try {\n             s = Float.valueOf(slop.image.substring(1)).intValue();\n           }\n           catch (Exception ignored) { }\n         }\n         q = getFieldQuery(field, analyzer,\n                           term.image.substring(1, term.image.length()-1),\n                           s);\n      break;\n    default:\n      jj_la1[21] = jj_gen;\n      jj_consume_token(-1);\n      throw new ParseException();\n    }\n    if (boost != null) {\n      float f = (float) 1.0;\n      try {\n        f = Float.valueOf(boost.image).floatValue();\n      }\n      catch (Exception ignored) {\n    /* Should this be handled somehow? (defaults to \"no boost\", if\n     * boost number is invalid)\n     */\n      }\n\n      // avoid boosting null queries, such as those caused by stop words\n      if (q != null) {\n        q.setBoost(f);\n      }\n    }\n    {if (true) return q;}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b51d06e615dc831227c94b4b16cdd5763692d2d4","date":1095169515,"type":3,"author":"Christoph Goller","isMerge":false,"pathNew":"src/java/org/apache/lucene/queryParser/QueryParser#Term(String).mjava","pathOld":"src/java/org/apache/lucene/queryParser/QueryParser#Term(String).mjava","sourceNew":"  final public Query Term(String field) throws ParseException {\n  Token term, boost=null, fuzzySlop=null, goop1, goop2;\n  boolean prefix = false;\n  boolean wildcard = false;\n  boolean fuzzy = false;\n  boolean rangein = false;\n  Query q;\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case TERM:\n    case PREFIXTERM:\n    case WILDTERM:\n    case NUMBER:\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case TERM:\n        term = jj_consume_token(TERM);\n        break;\n      case PREFIXTERM:\n        term = jj_consume_token(PREFIXTERM);\n                             prefix=true;\n        break;\n      case WILDTERM:\n        term = jj_consume_token(WILDTERM);\n                           wildcard=true;\n        break;\n      case NUMBER:\n        term = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[7] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                fuzzy=true;\n        break;\n      default:\n        jj_la1[8] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n        case FUZZY_SLOP:\n          fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                                         fuzzy=true;\n          break;\n        default:\n          jj_la1[9] = jj_gen;\n          ;\n        }\n        break;\n      default:\n        jj_la1[10] = jj_gen;\n        ;\n      }\n       String termImage=discardEscapeChar(term.image);\n       if (wildcard) {\n       q = getWildcardQuery(field, termImage);\n       } else if (prefix) {\n         q = getPrefixQuery(field,\n           discardEscapeChar(term.image.substring\n          (0, term.image.length()-1)));\n       } else if (fuzzy) {\n          float fms = fuzzyMinSim;\n          try {\n            fms = Float.valueOf(fuzzySlop.image.substring(1)).floatValue();\n          } catch (Exception ignored) { }\n         q = getFuzzyQuery(field, termImage, fms);\n       } else {\n         q = getFieldQuery(field, termImage);\n       }\n      break;\n    case RANGEIN_START:\n      jj_consume_token(RANGEIN_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop1 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop1 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[11] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_TO:\n        jj_consume_token(RANGEIN_TO);\n        break;\n      default:\n        jj_la1[12] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop2 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop2 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[13] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEIN_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[14] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEIN_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          } else {\n            goop1.image = discardEscapeChar(goop1.image);\n          }\n          if (goop2.kind == RANGEIN_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n      } else {\n        goop2.image = discardEscapeChar(goop2.image);\n      }\n          q = getRangeQuery(field, goop1.image, goop2.image, true);\n      break;\n    case RANGEEX_START:\n      jj_consume_token(RANGEEX_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop1 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop1 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[15] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_TO:\n        jj_consume_token(RANGEEX_TO);\n        break;\n      default:\n        jj_la1[16] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop2 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop2 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[17] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEEX_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[18] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEEX_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          } else {\n            goop1.image = discardEscapeChar(goop1.image);\n          }\n          if (goop2.kind == RANGEEX_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n      } else {\n        goop2.image = discardEscapeChar(goop2.image);\n      }\n\n          q = getRangeQuery(field, goop1.image, goop2.image, false);\n      break;\n    case QUOTED:\n      term = jj_consume_token(QUOTED);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n        break;\n      default:\n        jj_la1[19] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[20] = jj_gen;\n        ;\n      }\n         int s = phraseSlop;\n\n         if (fuzzySlop != null) {\n           try {\n             s = Float.valueOf(fuzzySlop.image.substring(1)).intValue();\n           }\n           catch (Exception ignored) { }\n         }\n         q = getFieldQuery(field, term.image.substring(1, term.image.length()-1), s);\n      break;\n    default:\n      jj_la1[21] = jj_gen;\n      jj_consume_token(-1);\n      throw new ParseException();\n    }\n    if (boost != null) {\n      float f = (float) 1.0;\n      try {\n        f = Float.valueOf(boost.image).floatValue();\n      }\n      catch (Exception ignored) {\n    /* Should this be handled somehow? (defaults to \"no boost\", if\n     * boost number is invalid)\n     */\n      }\n\n      // avoid boosting null queries, such as those caused by stop words\n      if (q != null) {\n        q.setBoost(f);\n      }\n    }\n    {if (true) return q;}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","sourceOld":"  final public Query Term(String field) throws ParseException {\n  Token term, boost=null, slop=null, goop1, goop2;\n  boolean prefix = false;\n  boolean wildcard = false;\n  boolean fuzzy = false;\n  boolean rangein = false;\n  Query q;\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case TERM:\n    case PREFIXTERM:\n    case WILDTERM:\n    case NUMBER:\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case TERM:\n        term = jj_consume_token(TERM);\n        break;\n      case PREFIXTERM:\n        term = jj_consume_token(PREFIXTERM);\n                             prefix=true;\n        break;\n      case WILDTERM:\n        term = jj_consume_token(WILDTERM);\n                           wildcard=true;\n        break;\n      case NUMBER:\n        term = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[7] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY:\n        jj_consume_token(FUZZY);\n                 fuzzy=true;\n        break;\n      default:\n        jj_la1[8] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n        case FUZZY:\n          jj_consume_token(FUZZY);\n                                          fuzzy=true;\n          break;\n        default:\n          jj_la1[9] = jj_gen;\n          ;\n        }\n        break;\n      default:\n        jj_la1[10] = jj_gen;\n        ;\n      }\n       String termImage=discardEscapeChar(term.image);\n       if (wildcard) {\n       q = getWildcardQuery(field, termImage);\n       } else if (prefix) {\n         q = getPrefixQuery(field,\n           discardEscapeChar(term.image.substring\n          (0, term.image.length()-1)));\n       } else if (fuzzy) {\n         q = getFuzzyQuery(field, termImage);\n       } else {\n         q = getFieldQuery(field, termImage);\n       }\n      break;\n    case RANGEIN_START:\n      jj_consume_token(RANGEIN_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop1 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop1 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[11] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_TO:\n        jj_consume_token(RANGEIN_TO);\n        break;\n      default:\n        jj_la1[12] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop2 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop2 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[13] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEIN_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[14] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEIN_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          } else {\n            goop1.image = discardEscapeChar(goop1.image);\n          }\n          if (goop2.kind == RANGEIN_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n      } else {\n        goop2.image = discardEscapeChar(goop2.image);\n      }\n          q = getRangeQuery(field, goop1.image, goop2.image, true);\n      break;\n    case RANGEEX_START:\n      jj_consume_token(RANGEEX_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop1 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop1 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[15] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_TO:\n        jj_consume_token(RANGEEX_TO);\n        break;\n      default:\n        jj_la1[16] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop2 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop2 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[17] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEEX_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[18] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEEX_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          } else {\n            goop1.image = discardEscapeChar(goop1.image);\n          }\n          if (goop2.kind == RANGEEX_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n      } else {\n        goop2.image = discardEscapeChar(goop2.image);\n      }\n\n          q = getRangeQuery(field, goop1.image, goop2.image, false);\n      break;\n    case QUOTED:\n      term = jj_consume_token(QUOTED);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case SLOP:\n        slop = jj_consume_token(SLOP);\n        break;\n      default:\n        jj_la1[19] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[20] = jj_gen;\n        ;\n      }\n         int s = phraseSlop;\n\n         if (slop != null) {\n           try {\n             s = Float.valueOf(slop.image.substring(1)).intValue();\n           }\n           catch (Exception ignored) { }\n         }\n         q = getFieldQuery(field, term.image.substring(1, term.image.length()-1), s);\n      break;\n    default:\n      jj_la1[21] = jj_gen;\n      jj_consume_token(-1);\n      throw new ParseException();\n    }\n    if (boost != null) {\n      float f = (float) 1.0;\n      try {\n        f = Float.valueOf(boost.image).floatValue();\n      }\n      catch (Exception ignored) {\n    /* Should this be handled somehow? (defaults to \"no boost\", if\n     * boost number is invalid)\n     */\n      }\n\n      // avoid boosting null queries, such as those caused by stop words\n      if (q != null) {\n        q.setBoost(f);\n      }\n    }\n    {if (true) return q;}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c1099e8f73a0d10bf23390e09a117b85d6631049","date":1095255446,"type":3,"author":"Christoph Goller","isMerge":false,"pathNew":"src/java/org/apache/lucene/queryParser/QueryParser#Term(String).mjava","pathOld":"src/java/org/apache/lucene/queryParser/QueryParser#Term(String).mjava","sourceNew":"  final public Query Term(String field) throws ParseException {\n  Token term, boost=null, fuzzySlop=null, goop1, goop2;\n  boolean prefix = false;\n  boolean wildcard = false;\n  boolean fuzzy = false;\n  boolean rangein = false;\n  Query q;\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case TERM:\n    case PREFIXTERM:\n    case WILDTERM:\n    case NUMBER:\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case TERM:\n        term = jj_consume_token(TERM);\n        break;\n      case PREFIXTERM:\n        term = jj_consume_token(PREFIXTERM);\n                             prefix=true;\n        break;\n      case WILDTERM:\n        term = jj_consume_token(WILDTERM);\n                           wildcard=true;\n        break;\n      case NUMBER:\n        term = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[7] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                fuzzy=true;\n        break;\n      default:\n        jj_la1[8] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n        case FUZZY_SLOP:\n          fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                                         fuzzy=true;\n          break;\n        default:\n          jj_la1[9] = jj_gen;\n          ;\n        }\n        break;\n      default:\n        jj_la1[10] = jj_gen;\n        ;\n      }\n       String termImage=discardEscapeChar(term.image);\n       if (wildcard) {\n       q = getWildcardQuery(field, termImage);\n       } else if (prefix) {\n         q = getPrefixQuery(field,\n           discardEscapeChar(term.image.substring\n          (0, term.image.length()-1)));\n       } else if (fuzzy) {\n          float fms = fuzzyMinSim;\n          try {\n            fms = Float.valueOf(fuzzySlop.image.substring(1)).floatValue();\n          } catch (Exception ignored) { }\n         if(fms < 0.0f || fms > 1.0f){\n           {if (true) throw new ParseException(\"Minimum similarity for a FuzzyQuery has to be between 0.0f and 1.0f !\");}\n         }\n         q = getFuzzyQuery(field, termImage, fms);\n       } else {\n         q = getFieldQuery(field, termImage);\n       }\n      break;\n    case RANGEIN_START:\n      jj_consume_token(RANGEIN_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop1 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop1 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[11] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_TO:\n        jj_consume_token(RANGEIN_TO);\n        break;\n      default:\n        jj_la1[12] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop2 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop2 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[13] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEIN_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[14] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEIN_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          } else {\n            goop1.image = discardEscapeChar(goop1.image);\n          }\n          if (goop2.kind == RANGEIN_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n      } else {\n        goop2.image = discardEscapeChar(goop2.image);\n      }\n          q = getRangeQuery(field, goop1.image, goop2.image, true);\n      break;\n    case RANGEEX_START:\n      jj_consume_token(RANGEEX_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop1 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop1 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[15] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_TO:\n        jj_consume_token(RANGEEX_TO);\n        break;\n      default:\n        jj_la1[16] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop2 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop2 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[17] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEEX_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[18] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEEX_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          } else {\n            goop1.image = discardEscapeChar(goop1.image);\n          }\n          if (goop2.kind == RANGEEX_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n      } else {\n        goop2.image = discardEscapeChar(goop2.image);\n      }\n\n          q = getRangeQuery(field, goop1.image, goop2.image, false);\n      break;\n    case QUOTED:\n      term = jj_consume_token(QUOTED);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n        break;\n      default:\n        jj_la1[19] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[20] = jj_gen;\n        ;\n      }\n         int s = phraseSlop;\n\n         if (fuzzySlop != null) {\n           try {\n             s = Float.valueOf(fuzzySlop.image.substring(1)).intValue();\n           }\n           catch (Exception ignored) { }\n         }\n         q = getFieldQuery(field, term.image.substring(1, term.image.length()-1), s);\n      break;\n    default:\n      jj_la1[21] = jj_gen;\n      jj_consume_token(-1);\n      throw new ParseException();\n    }\n    if (boost != null) {\n      float f = (float) 1.0;\n      try {\n        f = Float.valueOf(boost.image).floatValue();\n      }\n      catch (Exception ignored) {\n    /* Should this be handled somehow? (defaults to \"no boost\", if\n     * boost number is invalid)\n     */\n      }\n\n      // avoid boosting null queries, such as those caused by stop words\n      if (q != null) {\n        q.setBoost(f);\n      }\n    }\n    {if (true) return q;}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","sourceOld":"  final public Query Term(String field) throws ParseException {\n  Token term, boost=null, fuzzySlop=null, goop1, goop2;\n  boolean prefix = false;\n  boolean wildcard = false;\n  boolean fuzzy = false;\n  boolean rangein = false;\n  Query q;\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case TERM:\n    case PREFIXTERM:\n    case WILDTERM:\n    case NUMBER:\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case TERM:\n        term = jj_consume_token(TERM);\n        break;\n      case PREFIXTERM:\n        term = jj_consume_token(PREFIXTERM);\n                             prefix=true;\n        break;\n      case WILDTERM:\n        term = jj_consume_token(WILDTERM);\n                           wildcard=true;\n        break;\n      case NUMBER:\n        term = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[7] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                fuzzy=true;\n        break;\n      default:\n        jj_la1[8] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n        case FUZZY_SLOP:\n          fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                                         fuzzy=true;\n          break;\n        default:\n          jj_la1[9] = jj_gen;\n          ;\n        }\n        break;\n      default:\n        jj_la1[10] = jj_gen;\n        ;\n      }\n       String termImage=discardEscapeChar(term.image);\n       if (wildcard) {\n       q = getWildcardQuery(field, termImage);\n       } else if (prefix) {\n         q = getPrefixQuery(field,\n           discardEscapeChar(term.image.substring\n          (0, term.image.length()-1)));\n       } else if (fuzzy) {\n          float fms = fuzzyMinSim;\n          try {\n            fms = Float.valueOf(fuzzySlop.image.substring(1)).floatValue();\n          } catch (Exception ignored) { }\n         q = getFuzzyQuery(field, termImage, fms);\n       } else {\n         q = getFieldQuery(field, termImage);\n       }\n      break;\n    case RANGEIN_START:\n      jj_consume_token(RANGEIN_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop1 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop1 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[11] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_TO:\n        jj_consume_token(RANGEIN_TO);\n        break;\n      default:\n        jj_la1[12] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop2 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop2 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[13] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEIN_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[14] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEIN_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          } else {\n            goop1.image = discardEscapeChar(goop1.image);\n          }\n          if (goop2.kind == RANGEIN_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n      } else {\n        goop2.image = discardEscapeChar(goop2.image);\n      }\n          q = getRangeQuery(field, goop1.image, goop2.image, true);\n      break;\n    case RANGEEX_START:\n      jj_consume_token(RANGEEX_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop1 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop1 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[15] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_TO:\n        jj_consume_token(RANGEEX_TO);\n        break;\n      default:\n        jj_la1[16] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop2 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop2 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[17] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEEX_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[18] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEEX_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          } else {\n            goop1.image = discardEscapeChar(goop1.image);\n          }\n          if (goop2.kind == RANGEEX_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n      } else {\n        goop2.image = discardEscapeChar(goop2.image);\n      }\n\n          q = getRangeQuery(field, goop1.image, goop2.image, false);\n      break;\n    case QUOTED:\n      term = jj_consume_token(QUOTED);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n        break;\n      default:\n        jj_la1[19] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[20] = jj_gen;\n        ;\n      }\n         int s = phraseSlop;\n\n         if (fuzzySlop != null) {\n           try {\n             s = Float.valueOf(fuzzySlop.image.substring(1)).intValue();\n           }\n           catch (Exception ignored) { }\n         }\n         q = getFieldQuery(field, term.image.substring(1, term.image.length()-1), s);\n      break;\n    default:\n      jj_la1[21] = jj_gen;\n      jj_consume_token(-1);\n      throw new ParseException();\n    }\n    if (boost != null) {\n      float f = (float) 1.0;\n      try {\n        f = Float.valueOf(boost.image).floatValue();\n      }\n      catch (Exception ignored) {\n    /* Should this be handled somehow? (defaults to \"no boost\", if\n     * boost number is invalid)\n     */\n      }\n\n      // avoid boosting null queries, such as those caused by stop words\n      if (q != null) {\n        q.setBoost(f);\n      }\n    }\n    {if (true) return q;}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"0887d7bb675ed6e2d9ebc5f0486b3758481d7d8d","date":1097573772,"type":3,"author":"Christoph Goller","isMerge":false,"pathNew":"src/java/org/apache/lucene/queryParser/QueryParser#Term(String).mjava","pathOld":"src/java/org/apache/lucene/queryParser/QueryParser#Term(String).mjava","sourceNew":"  final public Query Term(String field) throws ParseException {\n  Token term, boost=null, fuzzySlop=null, goop1, goop2;\n  boolean prefix = false;\n  boolean wildcard = false;\n  boolean fuzzy = false;\n  boolean rangein = false;\n  Query q;\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case TERM:\n    case PREFIXTERM:\n    case WILDTERM:\n    case NUMBER:\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case TERM:\n        term = jj_consume_token(TERM);\n        break;\n      case PREFIXTERM:\n        term = jj_consume_token(PREFIXTERM);\n                             prefix=true;\n        break;\n      case WILDTERM:\n        term = jj_consume_token(WILDTERM);\n                           wildcard=true;\n        break;\n      case NUMBER:\n        term = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[7] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                fuzzy=true;\n        break;\n      default:\n        jj_la1[8] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n        case FUZZY_SLOP:\n          fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                                         fuzzy=true;\n          break;\n        default:\n          jj_la1[9] = jj_gen;\n          ;\n        }\n        break;\n      default:\n        jj_la1[10] = jj_gen;\n        ;\n      }\n       String termImage=discardEscapeChar(term.image);\n       if (wildcard) {\n       q = getWildcardQuery(field, termImage);\n       } else if (prefix) {\n         q = getPrefixQuery(field,\n           discardEscapeChar(term.image.substring\n          (0, term.image.length()-1)));\n       } else if (fuzzy) {\n          float fms = fuzzyMinSim;\n          try {\n            fms = Float.valueOf(fuzzySlop.image.substring(1)).floatValue();\n          } catch (Exception ignored) { }\n         if(fms < 0.0f || fms > 1.0f){\n           {if (true) throw new ParseException(\"Minimum similarity for a FuzzyQuery has to be between 0.0f and 1.0f !\");}\n         }\n         if(fms == fuzzyMinSim)\n           q = getFuzzyQuery(field, termImage);\n         else\n           q = getFuzzyQuery(field, termImage, fms);\n       } else {\n         q = getFieldQuery(field, analyzer, termImage);\n       }\n      break;\n    case RANGEIN_START:\n      jj_consume_token(RANGEIN_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop1 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop1 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[11] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_TO:\n        jj_consume_token(RANGEIN_TO);\n        break;\n      default:\n        jj_la1[12] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop2 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop2 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[13] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEIN_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[14] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEIN_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          } else {\n            goop1.image = discardEscapeChar(goop1.image);\n          }\n          if (goop2.kind == RANGEIN_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n      } else {\n        goop2.image = discardEscapeChar(goop2.image);\n      }\n          q = getRangeQuery(field, analyzer, goop1.image, goop2.image, true);\n      break;\n    case RANGEEX_START:\n      jj_consume_token(RANGEEX_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop1 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop1 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[15] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_TO:\n        jj_consume_token(RANGEEX_TO);\n        break;\n      default:\n        jj_la1[16] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop2 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop2 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[17] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEEX_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[18] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEEX_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          } else {\n            goop1.image = discardEscapeChar(goop1.image);\n          }\n          if (goop2.kind == RANGEEX_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n      } else {\n        goop2.image = discardEscapeChar(goop2.image);\n      }\n\n          q = getRangeQuery(field, analyzer, goop1.image, goop2.image, false);\n      break;\n    case QUOTED:\n      term = jj_consume_token(QUOTED);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n        break;\n      default:\n        jj_la1[19] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[20] = jj_gen;\n        ;\n      }\n         int s = phraseSlop;\n\n         if (fuzzySlop != null) {\n           try {\n             s = Float.valueOf(fuzzySlop.image.substring(1)).intValue();\n           }\n           catch (Exception ignored) { }\n         }\n         q = getFieldQuery(field, analyzer, term.image.substring(1, term.image.length()-1), s);\n      break;\n    default:\n      jj_la1[21] = jj_gen;\n      jj_consume_token(-1);\n      throw new ParseException();\n    }\n    if (boost != null) {\n      float f = (float) 1.0;\n      try {\n        f = Float.valueOf(boost.image).floatValue();\n      }\n      catch (Exception ignored) {\n    /* Should this be handled somehow? (defaults to \"no boost\", if\n     * boost number is invalid)\n     */\n      }\n\n      // avoid boosting null queries, such as those caused by stop words\n      if (q != null) {\n        q.setBoost(f);\n      }\n    }\n    {if (true) return q;}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","sourceOld":"  final public Query Term(String field) throws ParseException {\n  Token term, boost=null, fuzzySlop=null, goop1, goop2;\n  boolean prefix = false;\n  boolean wildcard = false;\n  boolean fuzzy = false;\n  boolean rangein = false;\n  Query q;\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case TERM:\n    case PREFIXTERM:\n    case WILDTERM:\n    case NUMBER:\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case TERM:\n        term = jj_consume_token(TERM);\n        break;\n      case PREFIXTERM:\n        term = jj_consume_token(PREFIXTERM);\n                             prefix=true;\n        break;\n      case WILDTERM:\n        term = jj_consume_token(WILDTERM);\n                           wildcard=true;\n        break;\n      case NUMBER:\n        term = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[7] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                fuzzy=true;\n        break;\n      default:\n        jj_la1[8] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n        case FUZZY_SLOP:\n          fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                                         fuzzy=true;\n          break;\n        default:\n          jj_la1[9] = jj_gen;\n          ;\n        }\n        break;\n      default:\n        jj_la1[10] = jj_gen;\n        ;\n      }\n       String termImage=discardEscapeChar(term.image);\n       if (wildcard) {\n       q = getWildcardQuery(field, termImage);\n       } else if (prefix) {\n         q = getPrefixQuery(field,\n           discardEscapeChar(term.image.substring\n          (0, term.image.length()-1)));\n       } else if (fuzzy) {\n          float fms = fuzzyMinSim;\n          try {\n            fms = Float.valueOf(fuzzySlop.image.substring(1)).floatValue();\n          } catch (Exception ignored) { }\n         if(fms < 0.0f || fms > 1.0f){\n           {if (true) throw new ParseException(\"Minimum similarity for a FuzzyQuery has to be between 0.0f and 1.0f !\");}\n         }\n         q = getFuzzyQuery(field, termImage, fms);\n       } else {\n         q = getFieldQuery(field, termImage);\n       }\n      break;\n    case RANGEIN_START:\n      jj_consume_token(RANGEIN_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop1 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop1 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[11] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_TO:\n        jj_consume_token(RANGEIN_TO);\n        break;\n      default:\n        jj_la1[12] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop2 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop2 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[13] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEIN_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[14] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEIN_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          } else {\n            goop1.image = discardEscapeChar(goop1.image);\n          }\n          if (goop2.kind == RANGEIN_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n      } else {\n        goop2.image = discardEscapeChar(goop2.image);\n      }\n          q = getRangeQuery(field, goop1.image, goop2.image, true);\n      break;\n    case RANGEEX_START:\n      jj_consume_token(RANGEEX_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop1 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop1 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[15] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_TO:\n        jj_consume_token(RANGEEX_TO);\n        break;\n      default:\n        jj_la1[16] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop2 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop2 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[17] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEEX_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[18] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEEX_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          } else {\n            goop1.image = discardEscapeChar(goop1.image);\n          }\n          if (goop2.kind == RANGEEX_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n      } else {\n        goop2.image = discardEscapeChar(goop2.image);\n      }\n\n          q = getRangeQuery(field, goop1.image, goop2.image, false);\n      break;\n    case QUOTED:\n      term = jj_consume_token(QUOTED);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n        break;\n      default:\n        jj_la1[19] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[20] = jj_gen;\n        ;\n      }\n         int s = phraseSlop;\n\n         if (fuzzySlop != null) {\n           try {\n             s = Float.valueOf(fuzzySlop.image.substring(1)).intValue();\n           }\n           catch (Exception ignored) { }\n         }\n         q = getFieldQuery(field, term.image.substring(1, term.image.length()-1), s);\n      break;\n    default:\n      jj_la1[21] = jj_gen;\n      jj_consume_token(-1);\n      throw new ParseException();\n    }\n    if (boost != null) {\n      float f = (float) 1.0;\n      try {\n        f = Float.valueOf(boost.image).floatValue();\n      }\n      catch (Exception ignored) {\n    /* Should this be handled somehow? (defaults to \"no boost\", if\n     * boost number is invalid)\n     */\n      }\n\n      // avoid boosting null queries, such as those caused by stop words\n      if (q != null) {\n        q.setBoost(f);\n      }\n    }\n    {if (true) return q;}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c69e98ffd83f56083b99e5443ca713cd5783a2ae","date":1142955392,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/lucene/queryParser/QueryParser#Term(String).mjava","pathOld":"src/java/org/apache/lucene/queryParser/QueryParser#Term(String).mjava","sourceNew":"  final public Query Term(String field) throws ParseException {\n  Token term, boost=null, fuzzySlop=null, goop1, goop2;\n  boolean prefix = false;\n  boolean wildcard = false;\n  boolean fuzzy = false;\n  boolean rangein = false;\n  Query q;\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case TERM:\n    case PREFIXTERM:\n    case WILDTERM:\n    case NUMBER:\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case TERM:\n        term = jj_consume_token(TERM);\n        break;\n      case PREFIXTERM:\n        term = jj_consume_token(PREFIXTERM);\n                             prefix=true;\n        break;\n      case WILDTERM:\n        term = jj_consume_token(WILDTERM);\n                           wildcard=true;\n        break;\n      case NUMBER:\n        term = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[7] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                fuzzy=true;\n        break;\n      default:\n        jj_la1[8] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n        case FUZZY_SLOP:\n          fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                                         fuzzy=true;\n          break;\n        default:\n          jj_la1[9] = jj_gen;\n          ;\n        }\n        break;\n      default:\n        jj_la1[10] = jj_gen;\n        ;\n      }\n       String termImage=discardEscapeChar(term.image);\n       if (wildcard) {\n       q = getWildcardQuery(field, termImage);\n       } else if (prefix) {\n         q = getPrefixQuery(field,\n           discardEscapeChar(term.image.substring\n          (0, term.image.length()-1)));\n       } else if (fuzzy) {\n          float fms = fuzzyMinSim;\n          try {\n            fms = Float.valueOf(fuzzySlop.image.substring(1)).floatValue();\n          } catch (Exception ignored) { }\n         if(fms < 0.0f || fms > 1.0f){\n           {if (true) throw new ParseException(\"Minimum similarity for a FuzzyQuery has to be between 0.0f and 1.0f !\");}\n         }\n         if(fms == fuzzyMinSim)\n           q = getFuzzyQuery(field, termImage, fuzzyMinSim);\n         else\n           q = getFuzzyQuery(field, termImage, fms);\n       } else {\n         q = getFieldQuery(field, termImage);\n       }\n      break;\n    case RANGEIN_START:\n      jj_consume_token(RANGEIN_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop1 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop1 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[11] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_TO:\n        jj_consume_token(RANGEIN_TO);\n        break;\n      default:\n        jj_la1[12] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop2 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop2 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[13] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEIN_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[14] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEIN_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          } else {\n            goop1.image = discardEscapeChar(goop1.image);\n          }\n          if (goop2.kind == RANGEIN_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n      } else {\n        goop2.image = discardEscapeChar(goop2.image);\n      }\n          q = getRangeQuery(field, goop1.image, goop2.image, true);\n      break;\n    case RANGEEX_START:\n      jj_consume_token(RANGEEX_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop1 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop1 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[15] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_TO:\n        jj_consume_token(RANGEEX_TO);\n        break;\n      default:\n        jj_la1[16] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop2 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop2 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[17] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEEX_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[18] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEEX_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          } else {\n            goop1.image = discardEscapeChar(goop1.image);\n          }\n          if (goop2.kind == RANGEEX_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n      } else {\n        goop2.image = discardEscapeChar(goop2.image);\n      }\n\n          q = getRangeQuery(field, goop1.image, goop2.image, false);\n      break;\n    case QUOTED:\n      term = jj_consume_token(QUOTED);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n        break;\n      default:\n        jj_la1[19] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[20] = jj_gen;\n        ;\n      }\n         int s = phraseSlop;\n\n         if (fuzzySlop != null) {\n           try {\n             s = Float.valueOf(fuzzySlop.image.substring(1)).intValue();\n           }\n           catch (Exception ignored) { }\n         }\n         q = getFieldQuery(field, term.image.substring(1, term.image.length()-1), s);\n      break;\n    default:\n      jj_la1[21] = jj_gen;\n      jj_consume_token(-1);\n      throw new ParseException();\n    }\n    if (boost != null) {\n      float f = (float) 1.0;\n      try {\n        f = Float.valueOf(boost.image).floatValue();\n      }\n      catch (Exception ignored) {\n    /* Should this be handled somehow? (defaults to \"no boost\", if\n     * boost number is invalid)\n     */\n      }\n\n      // avoid boosting null queries, such as those caused by stop words\n      if (q != null) {\n        q.setBoost(f);\n      }\n    }\n    {if (true) return q;}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","sourceOld":"  final public Query Term(String field) throws ParseException {\n  Token term, boost=null, fuzzySlop=null, goop1, goop2;\n  boolean prefix = false;\n  boolean wildcard = false;\n  boolean fuzzy = false;\n  boolean rangein = false;\n  Query q;\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case TERM:\n    case PREFIXTERM:\n    case WILDTERM:\n    case NUMBER:\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case TERM:\n        term = jj_consume_token(TERM);\n        break;\n      case PREFIXTERM:\n        term = jj_consume_token(PREFIXTERM);\n                             prefix=true;\n        break;\n      case WILDTERM:\n        term = jj_consume_token(WILDTERM);\n                           wildcard=true;\n        break;\n      case NUMBER:\n        term = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[7] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                fuzzy=true;\n        break;\n      default:\n        jj_la1[8] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n        case FUZZY_SLOP:\n          fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                                         fuzzy=true;\n          break;\n        default:\n          jj_la1[9] = jj_gen;\n          ;\n        }\n        break;\n      default:\n        jj_la1[10] = jj_gen;\n        ;\n      }\n       String termImage=discardEscapeChar(term.image);\n       if (wildcard) {\n       q = getWildcardQuery(field, termImage);\n       } else if (prefix) {\n         q = getPrefixQuery(field,\n           discardEscapeChar(term.image.substring\n          (0, term.image.length()-1)));\n       } else if (fuzzy) {\n          float fms = fuzzyMinSim;\n          try {\n            fms = Float.valueOf(fuzzySlop.image.substring(1)).floatValue();\n          } catch (Exception ignored) { }\n         if(fms < 0.0f || fms > 1.0f){\n           {if (true) throw new ParseException(\"Minimum similarity for a FuzzyQuery has to be between 0.0f and 1.0f !\");}\n         }\n         if(fms == fuzzyMinSim)\n           q = getFuzzyQuery(field, termImage);\n         else\n           q = getFuzzyQuery(field, termImage, fms);\n       } else {\n         q = getFieldQuery(field, analyzer, termImage);\n       }\n      break;\n    case RANGEIN_START:\n      jj_consume_token(RANGEIN_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop1 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop1 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[11] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_TO:\n        jj_consume_token(RANGEIN_TO);\n        break;\n      default:\n        jj_la1[12] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop2 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop2 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[13] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEIN_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[14] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEIN_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          } else {\n            goop1.image = discardEscapeChar(goop1.image);\n          }\n          if (goop2.kind == RANGEIN_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n      } else {\n        goop2.image = discardEscapeChar(goop2.image);\n      }\n          q = getRangeQuery(field, analyzer, goop1.image, goop2.image, true);\n      break;\n    case RANGEEX_START:\n      jj_consume_token(RANGEEX_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop1 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop1 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[15] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_TO:\n        jj_consume_token(RANGEEX_TO);\n        break;\n      default:\n        jj_la1[16] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop2 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop2 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[17] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEEX_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[18] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEEX_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          } else {\n            goop1.image = discardEscapeChar(goop1.image);\n          }\n          if (goop2.kind == RANGEEX_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n      } else {\n        goop2.image = discardEscapeChar(goop2.image);\n      }\n\n          q = getRangeQuery(field, analyzer, goop1.image, goop2.image, false);\n      break;\n    case QUOTED:\n      term = jj_consume_token(QUOTED);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n        break;\n      default:\n        jj_la1[19] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[20] = jj_gen;\n        ;\n      }\n         int s = phraseSlop;\n\n         if (fuzzySlop != null) {\n           try {\n             s = Float.valueOf(fuzzySlop.image.substring(1)).intValue();\n           }\n           catch (Exception ignored) { }\n         }\n         q = getFieldQuery(field, analyzer, term.image.substring(1, term.image.length()-1), s);\n      break;\n    default:\n      jj_la1[21] = jj_gen;\n      jj_consume_token(-1);\n      throw new ParseException();\n    }\n    if (boost != null) {\n      float f = (float) 1.0;\n      try {\n        f = Float.valueOf(boost.image).floatValue();\n      }\n      catch (Exception ignored) {\n    /* Should this be handled somehow? (defaults to \"no boost\", if\n     * boost number is invalid)\n     */\n      }\n\n      // avoid boosting null queries, such as those caused by stop words\n      if (q != null) {\n        q.setBoost(f);\n      }\n    }\n    {if (true) return q;}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","bugFix":null,"bugIntro":["84ba3b83816da930e6c14253827f6b2589b298e9"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"fbfcab2b93df2e9eb2a0277104b237b5f2d389a4","date":1143046344,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/lucene/queryParser/QueryParser#Term(String).mjava","pathOld":"src/java/org/apache/lucene/queryParser/QueryParser#Term(String).mjava","sourceNew":"  final public Query Term(String field) throws ParseException {\n  Token term, boost=null, fuzzySlop=null, goop1, goop2;\n  boolean prefix = false;\n  boolean wildcard = false;\n  boolean fuzzy = false;\n  boolean rangein = false;\n  Query q;\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case TERM:\n    case PREFIXTERM:\n    case WILDTERM:\n    case NUMBER:\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case TERM:\n        term = jj_consume_token(TERM);\n        break;\n      case PREFIXTERM:\n        term = jj_consume_token(PREFIXTERM);\n                             prefix=true;\n        break;\n      case WILDTERM:\n        term = jj_consume_token(WILDTERM);\n                           wildcard=true;\n        break;\n      case NUMBER:\n        term = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[7] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                fuzzy=true;\n        break;\n      default:\n        jj_la1[8] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n        case FUZZY_SLOP:\n          fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                                         fuzzy=true;\n          break;\n        default:\n          jj_la1[9] = jj_gen;\n          ;\n        }\n        break;\n      default:\n        jj_la1[10] = jj_gen;\n        ;\n      }\n       String termImage=discardEscapeChar(term.image);\n       if (wildcard) {\n       q = getWildcardQuery(field, termImage);\n       } else if (prefix) {\n         q = getPrefixQuery(field,\n           discardEscapeChar(term.image.substring\n          (0, term.image.length()-1)));\n       } else if (fuzzy) {\n          float fms = fuzzyMinSim;\n          try {\n            fms = Float.valueOf(fuzzySlop.image.substring(1)).floatValue();\n          } catch (Exception ignored) { }\n         if(fms < 0.0f || fms > 1.0f){\n           {if (true) throw new ParseException(\"Minimum similarity for a FuzzyQuery has to be between 0.0f and 1.0f !\");}\n         }\n         q = getFuzzyQuery(field, termImage,fms);\n       } else {\n         q = getFieldQuery(field, termImage);\n       }\n      break;\n    case RANGEIN_START:\n      jj_consume_token(RANGEIN_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop1 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop1 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[11] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_TO:\n        jj_consume_token(RANGEIN_TO);\n        break;\n      default:\n        jj_la1[12] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop2 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop2 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[13] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEIN_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[14] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEIN_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          } else {\n            goop1.image = discardEscapeChar(goop1.image);\n          }\n          if (goop2.kind == RANGEIN_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n      } else {\n        goop2.image = discardEscapeChar(goop2.image);\n      }\n          q = getRangeQuery(field, goop1.image, goop2.image, true);\n      break;\n    case RANGEEX_START:\n      jj_consume_token(RANGEEX_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop1 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop1 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[15] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_TO:\n        jj_consume_token(RANGEEX_TO);\n        break;\n      default:\n        jj_la1[16] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop2 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop2 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[17] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEEX_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[18] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEEX_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          } else {\n            goop1.image = discardEscapeChar(goop1.image);\n          }\n          if (goop2.kind == RANGEEX_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n      } else {\n        goop2.image = discardEscapeChar(goop2.image);\n      }\n\n          q = getRangeQuery(field, goop1.image, goop2.image, false);\n      break;\n    case QUOTED:\n      term = jj_consume_token(QUOTED);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n        break;\n      default:\n        jj_la1[19] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[20] = jj_gen;\n        ;\n      }\n         int s = phraseSlop;\n\n         if (fuzzySlop != null) {\n           try {\n             s = Float.valueOf(fuzzySlop.image.substring(1)).intValue();\n           }\n           catch (Exception ignored) { }\n         }\n         q = getFieldQuery(field, term.image.substring(1, term.image.length()-1), s);\n      break;\n    default:\n      jj_la1[21] = jj_gen;\n      jj_consume_token(-1);\n      throw new ParseException();\n    }\n    if (boost != null) {\n      float f = (float) 1.0;\n      try {\n        f = Float.valueOf(boost.image).floatValue();\n      }\n      catch (Exception ignored) {\n    /* Should this be handled somehow? (defaults to \"no boost\", if\n     * boost number is invalid)\n     */\n      }\n\n      // avoid boosting null queries, such as those caused by stop words\n      if (q != null) {\n        q.setBoost(f);\n      }\n    }\n    {if (true) return q;}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","sourceOld":"  final public Query Term(String field) throws ParseException {\n  Token term, boost=null, fuzzySlop=null, goop1, goop2;\n  boolean prefix = false;\n  boolean wildcard = false;\n  boolean fuzzy = false;\n  boolean rangein = false;\n  Query q;\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case TERM:\n    case PREFIXTERM:\n    case WILDTERM:\n    case NUMBER:\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case TERM:\n        term = jj_consume_token(TERM);\n        break;\n      case PREFIXTERM:\n        term = jj_consume_token(PREFIXTERM);\n                             prefix=true;\n        break;\n      case WILDTERM:\n        term = jj_consume_token(WILDTERM);\n                           wildcard=true;\n        break;\n      case NUMBER:\n        term = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[7] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                fuzzy=true;\n        break;\n      default:\n        jj_la1[8] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n        case FUZZY_SLOP:\n          fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                                         fuzzy=true;\n          break;\n        default:\n          jj_la1[9] = jj_gen;\n          ;\n        }\n        break;\n      default:\n        jj_la1[10] = jj_gen;\n        ;\n      }\n       String termImage=discardEscapeChar(term.image);\n       if (wildcard) {\n       q = getWildcardQuery(field, termImage);\n       } else if (prefix) {\n         q = getPrefixQuery(field,\n           discardEscapeChar(term.image.substring\n          (0, term.image.length()-1)));\n       } else if (fuzzy) {\n          float fms = fuzzyMinSim;\n          try {\n            fms = Float.valueOf(fuzzySlop.image.substring(1)).floatValue();\n          } catch (Exception ignored) { }\n         if(fms < 0.0f || fms > 1.0f){\n           {if (true) throw new ParseException(\"Minimum similarity for a FuzzyQuery has to be between 0.0f and 1.0f !\");}\n         }\n         if(fms == fuzzyMinSim)\n           q = getFuzzyQuery(field, termImage, fuzzyMinSim);\n         else\n           q = getFuzzyQuery(field, termImage, fms);\n       } else {\n         q = getFieldQuery(field, termImage);\n       }\n      break;\n    case RANGEIN_START:\n      jj_consume_token(RANGEIN_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop1 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop1 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[11] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_TO:\n        jj_consume_token(RANGEIN_TO);\n        break;\n      default:\n        jj_la1[12] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop2 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop2 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[13] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEIN_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[14] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEIN_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          } else {\n            goop1.image = discardEscapeChar(goop1.image);\n          }\n          if (goop2.kind == RANGEIN_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n      } else {\n        goop2.image = discardEscapeChar(goop2.image);\n      }\n          q = getRangeQuery(field, goop1.image, goop2.image, true);\n      break;\n    case RANGEEX_START:\n      jj_consume_token(RANGEEX_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop1 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop1 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[15] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_TO:\n        jj_consume_token(RANGEEX_TO);\n        break;\n      default:\n        jj_la1[16] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop2 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop2 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[17] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEEX_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[18] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEEX_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          } else {\n            goop1.image = discardEscapeChar(goop1.image);\n          }\n          if (goop2.kind == RANGEEX_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n      } else {\n        goop2.image = discardEscapeChar(goop2.image);\n      }\n\n          q = getRangeQuery(field, goop1.image, goop2.image, false);\n      break;\n    case QUOTED:\n      term = jj_consume_token(QUOTED);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n        break;\n      default:\n        jj_la1[19] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[20] = jj_gen;\n        ;\n      }\n         int s = phraseSlop;\n\n         if (fuzzySlop != null) {\n           try {\n             s = Float.valueOf(fuzzySlop.image.substring(1)).intValue();\n           }\n           catch (Exception ignored) { }\n         }\n         q = getFieldQuery(field, term.image.substring(1, term.image.length()-1), s);\n      break;\n    default:\n      jj_la1[21] = jj_gen;\n      jj_consume_token(-1);\n      throw new ParseException();\n    }\n    if (boost != null) {\n      float f = (float) 1.0;\n      try {\n        f = Float.valueOf(boost.image).floatValue();\n      }\n      catch (Exception ignored) {\n    /* Should this be handled somehow? (defaults to \"no boost\", if\n     * boost number is invalid)\n     */\n      }\n\n      // avoid boosting null queries, such as those caused by stop words\n      if (q != null) {\n        q.setBoost(f);\n      }\n    }\n    {if (true) return q;}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"84ba3b83816da930e6c14253827f6b2589b298e9","date":1163878330,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/lucene/queryParser/QueryParser#Term(String).mjava","pathOld":"src/java/org/apache/lucene/queryParser/QueryParser#Term(String).mjava","sourceNew":"  final public Query Term(String field) throws ParseException {\n  Token term, boost=null, fuzzySlop=null, goop1, goop2;\n  boolean prefix = false;\n  boolean wildcard = false;\n  boolean fuzzy = false;\n  boolean rangein = false;\n  Query q;\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case TERM:\n    case PREFIXTERM:\n    case WILDTERM:\n    case NUMBER:\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case TERM:\n        term = jj_consume_token(TERM);\n        break;\n      case PREFIXTERM:\n        term = jj_consume_token(PREFIXTERM);\n                             prefix=true;\n        break;\n      case WILDTERM:\n        term = jj_consume_token(WILDTERM);\n                           wildcard=true;\n        break;\n      case NUMBER:\n        term = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[7] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                fuzzy=true;\n        break;\n      default:\n        jj_la1[8] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n        case FUZZY_SLOP:\n          fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                                         fuzzy=true;\n          break;\n        default:\n          jj_la1[9] = jj_gen;\n          ;\n        }\n        break;\n      default:\n        jj_la1[10] = jj_gen;\n        ;\n      }\n       String termImage=discardEscapeChar(term.image);\n       if (wildcard) {\n       q = getWildcardQuery(field, termImage);\n       } else if (prefix) {\n         q = getPrefixQuery(field,\n           discardEscapeChar(term.image.substring\n          (0, term.image.length()-1)));\n       } else if (fuzzy) {\n          float fms = fuzzyMinSim;\n          try {\n            fms = Float.valueOf(fuzzySlop.image.substring(1)).floatValue();\n          } catch (Exception ignored) { }\n         if(fms < 0.0f || fms > 1.0f){\n           {if (true) throw new ParseException(\"Minimum similarity for a FuzzyQuery has to be between 0.0f and 1.0f !\");}\n         }\n         q = getFuzzyQuery(field, termImage,fms);\n       } else {\n         q = getFieldQuery(field, termImage);\n       }\n      break;\n    case RANGEIN_START:\n      jj_consume_token(RANGEIN_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop1 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop1 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[11] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_TO:\n        jj_consume_token(RANGEIN_TO);\n        break;\n      default:\n        jj_la1[12] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop2 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop2 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[13] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEIN_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[14] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEIN_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          }\n          if (goop2.kind == RANGEIN_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n          }\n          q = getRangeQuery(field, discardEscapeChar(goop1.image), discardEscapeChar(goop2.image), true);\n      break;\n    case RANGEEX_START:\n      jj_consume_token(RANGEEX_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop1 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop1 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[15] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_TO:\n        jj_consume_token(RANGEEX_TO);\n        break;\n      default:\n        jj_la1[16] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop2 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop2 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[17] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEEX_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[18] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEEX_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          }\n          if (goop2.kind == RANGEEX_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n          }\n\n          q = getRangeQuery(field, discardEscapeChar(goop1.image), discardEscapeChar(goop2.image), false);\n      break;\n    case QUOTED:\n      term = jj_consume_token(QUOTED);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n        break;\n      default:\n        jj_la1[19] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[20] = jj_gen;\n        ;\n      }\n         int s = phraseSlop;\n\n         if (fuzzySlop != null) {\n           try {\n             s = Float.valueOf(fuzzySlop.image.substring(1)).intValue();\n           }\n           catch (Exception ignored) { }\n         }\n         q = getFieldQuery(field, discardEscapeChar(term.image.substring(1, term.image.length()-1)), s);\n      break;\n    default:\n      jj_la1[21] = jj_gen;\n      jj_consume_token(-1);\n      throw new ParseException();\n    }\n    if (boost != null) {\n      float f = (float) 1.0;\n      try {\n        f = Float.valueOf(boost.image).floatValue();\n      }\n      catch (Exception ignored) {\n    /* Should this be handled somehow? (defaults to \"no boost\", if\n     * boost number is invalid)\n     */\n      }\n\n      // avoid boosting null queries, such as those caused by stop words\n      if (q != null) {\n        q.setBoost(f);\n      }\n    }\n    {if (true) return q;}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","sourceOld":"  final public Query Term(String field) throws ParseException {\n  Token term, boost=null, fuzzySlop=null, goop1, goop2;\n  boolean prefix = false;\n  boolean wildcard = false;\n  boolean fuzzy = false;\n  boolean rangein = false;\n  Query q;\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case TERM:\n    case PREFIXTERM:\n    case WILDTERM:\n    case NUMBER:\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case TERM:\n        term = jj_consume_token(TERM);\n        break;\n      case PREFIXTERM:\n        term = jj_consume_token(PREFIXTERM);\n                             prefix=true;\n        break;\n      case WILDTERM:\n        term = jj_consume_token(WILDTERM);\n                           wildcard=true;\n        break;\n      case NUMBER:\n        term = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[7] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                fuzzy=true;\n        break;\n      default:\n        jj_la1[8] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n        case FUZZY_SLOP:\n          fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                                         fuzzy=true;\n          break;\n        default:\n          jj_la1[9] = jj_gen;\n          ;\n        }\n        break;\n      default:\n        jj_la1[10] = jj_gen;\n        ;\n      }\n       String termImage=discardEscapeChar(term.image);\n       if (wildcard) {\n       q = getWildcardQuery(field, termImage);\n       } else if (prefix) {\n         q = getPrefixQuery(field,\n           discardEscapeChar(term.image.substring\n          (0, term.image.length()-1)));\n       } else if (fuzzy) {\n          float fms = fuzzyMinSim;\n          try {\n            fms = Float.valueOf(fuzzySlop.image.substring(1)).floatValue();\n          } catch (Exception ignored) { }\n         if(fms < 0.0f || fms > 1.0f){\n           {if (true) throw new ParseException(\"Minimum similarity for a FuzzyQuery has to be between 0.0f and 1.0f !\");}\n         }\n         q = getFuzzyQuery(field, termImage,fms);\n       } else {\n         q = getFieldQuery(field, termImage);\n       }\n      break;\n    case RANGEIN_START:\n      jj_consume_token(RANGEIN_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop1 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop1 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[11] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_TO:\n        jj_consume_token(RANGEIN_TO);\n        break;\n      default:\n        jj_la1[12] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop2 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop2 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[13] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEIN_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[14] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEIN_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          } else {\n            goop1.image = discardEscapeChar(goop1.image);\n          }\n          if (goop2.kind == RANGEIN_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n      } else {\n        goop2.image = discardEscapeChar(goop2.image);\n      }\n          q = getRangeQuery(field, goop1.image, goop2.image, true);\n      break;\n    case RANGEEX_START:\n      jj_consume_token(RANGEEX_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop1 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop1 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[15] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_TO:\n        jj_consume_token(RANGEEX_TO);\n        break;\n      default:\n        jj_la1[16] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop2 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop2 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[17] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEEX_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[18] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEEX_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          } else {\n            goop1.image = discardEscapeChar(goop1.image);\n          }\n          if (goop2.kind == RANGEEX_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n      } else {\n        goop2.image = discardEscapeChar(goop2.image);\n      }\n\n          q = getRangeQuery(field, goop1.image, goop2.image, false);\n      break;\n    case QUOTED:\n      term = jj_consume_token(QUOTED);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n        break;\n      default:\n        jj_la1[19] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[20] = jj_gen;\n        ;\n      }\n         int s = phraseSlop;\n\n         if (fuzzySlop != null) {\n           try {\n             s = Float.valueOf(fuzzySlop.image.substring(1)).intValue();\n           }\n           catch (Exception ignored) { }\n         }\n         q = getFieldQuery(field, term.image.substring(1, term.image.length()-1), s);\n      break;\n    default:\n      jj_la1[21] = jj_gen;\n      jj_consume_token(-1);\n      throw new ParseException();\n    }\n    if (boost != null) {\n      float f = (float) 1.0;\n      try {\n        f = Float.valueOf(boost.image).floatValue();\n      }\n      catch (Exception ignored) {\n    /* Should this be handled somehow? (defaults to \"no boost\", if\n     * boost number is invalid)\n     */\n      }\n\n      // avoid boosting null queries, such as those caused by stop words\n      if (q != null) {\n        q.setBoost(f);\n      }\n    }\n    {if (true) return q;}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","bugFix":["f9eacfbe2ad1cb736606c0e0093f7f3ab4a2e13c","23a9c25687aa751efff1049f8b18ae27091ec453","c69e98ffd83f56083b99e5443ca713cd5783a2ae"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3dd3270bbe1832a7b0b0986602736d4106d2473e","date":1164738568,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/lucene/queryParser/QueryParser#Term(String).mjava","pathOld":"src/java/org/apache/lucene/queryParser/QueryParser#Term(String).mjava","sourceNew":"  final public Query Term(String field) throws ParseException {\n  Token term, boost=null, fuzzySlop=null, goop1, goop2;\n  boolean prefix = false;\n  boolean wildcard = false;\n  boolean fuzzy = false;\n  boolean rangein = false;\n  Query q;\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case STAR:\n    case TERM:\n    case PREFIXTERM:\n    case WILDTERM:\n    case NUMBER:\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case TERM:\n        term = jj_consume_token(TERM);\n        break;\n      case STAR:\n        term = jj_consume_token(STAR);\n                       wildcard=true;\n        break;\n      case PREFIXTERM:\n        term = jj_consume_token(PREFIXTERM);\n                             prefix=true;\n        break;\n      case WILDTERM:\n        term = jj_consume_token(WILDTERM);\n                           wildcard=true;\n        break;\n      case NUMBER:\n        term = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[8] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                fuzzy=true;\n        break;\n      default:\n        jj_la1[9] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n        case FUZZY_SLOP:\n          fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                                         fuzzy=true;\n          break;\n        default:\n          jj_la1[10] = jj_gen;\n          ;\n        }\n        break;\n      default:\n        jj_la1[11] = jj_gen;\n        ;\n      }\n       String termImage=discardEscapeChar(term.image);\n       if (wildcard) {\n       q = getWildcardQuery(field, termImage);\n       } else if (prefix) {\n         q = getPrefixQuery(field,\n           discardEscapeChar(term.image.substring\n          (0, term.image.length()-1)));\n       } else if (fuzzy) {\n          float fms = fuzzyMinSim;\n          try {\n            fms = Float.valueOf(fuzzySlop.image.substring(1)).floatValue();\n          } catch (Exception ignored) { }\n         if(fms < 0.0f || fms > 1.0f){\n           {if (true) throw new ParseException(\"Minimum similarity for a FuzzyQuery has to be between 0.0f and 1.0f !\");}\n         }\n         q = getFuzzyQuery(field, termImage,fms);\n       } else {\n         q = getFieldQuery(field, termImage);\n       }\n      break;\n    case RANGEIN_START:\n      jj_consume_token(RANGEIN_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop1 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop1 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[12] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_TO:\n        jj_consume_token(RANGEIN_TO);\n        break;\n      default:\n        jj_la1[13] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop2 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop2 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[14] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEIN_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[15] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEIN_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          }\n          if (goop2.kind == RANGEIN_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n          }\n          q = getRangeQuery(field, discardEscapeChar(goop1.image), discardEscapeChar(goop2.image), true);\n      break;\n    case RANGEEX_START:\n      jj_consume_token(RANGEEX_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop1 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop1 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[16] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_TO:\n        jj_consume_token(RANGEEX_TO);\n        break;\n      default:\n        jj_la1[17] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop2 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop2 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[18] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEEX_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[19] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEEX_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          }\n          if (goop2.kind == RANGEEX_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n          }\n\n          q = getRangeQuery(field, discardEscapeChar(goop1.image), discardEscapeChar(goop2.image), false);\n      break;\n    case QUOTED:\n      term = jj_consume_token(QUOTED);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n        break;\n      default:\n        jj_la1[20] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[21] = jj_gen;\n        ;\n      }\n         int s = phraseSlop;\n\n         if (fuzzySlop != null) {\n           try {\n             s = Float.valueOf(fuzzySlop.image.substring(1)).intValue();\n           }\n           catch (Exception ignored) { }\n         }\n         q = getFieldQuery(field, discardEscapeChar(term.image.substring(1, term.image.length()-1)), s);\n      break;\n    default:\n      jj_la1[22] = jj_gen;\n      jj_consume_token(-1);\n      throw new ParseException();\n    }\n    if (boost != null) {\n      float f = (float) 1.0;\n      try {\n        f = Float.valueOf(boost.image).floatValue();\n      }\n      catch (Exception ignored) {\n    /* Should this be handled somehow? (defaults to \"no boost\", if\n     * boost number is invalid)\n     */\n      }\n\n      // avoid boosting null queries, such as those caused by stop words\n      if (q != null) {\n        q.setBoost(f);\n      }\n    }\n    {if (true) return q;}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","sourceOld":"  final public Query Term(String field) throws ParseException {\n  Token term, boost=null, fuzzySlop=null, goop1, goop2;\n  boolean prefix = false;\n  boolean wildcard = false;\n  boolean fuzzy = false;\n  boolean rangein = false;\n  Query q;\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case TERM:\n    case PREFIXTERM:\n    case WILDTERM:\n    case NUMBER:\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case TERM:\n        term = jj_consume_token(TERM);\n        break;\n      case PREFIXTERM:\n        term = jj_consume_token(PREFIXTERM);\n                             prefix=true;\n        break;\n      case WILDTERM:\n        term = jj_consume_token(WILDTERM);\n                           wildcard=true;\n        break;\n      case NUMBER:\n        term = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[7] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                fuzzy=true;\n        break;\n      default:\n        jj_la1[8] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n        case FUZZY_SLOP:\n          fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                                         fuzzy=true;\n          break;\n        default:\n          jj_la1[9] = jj_gen;\n          ;\n        }\n        break;\n      default:\n        jj_la1[10] = jj_gen;\n        ;\n      }\n       String termImage=discardEscapeChar(term.image);\n       if (wildcard) {\n       q = getWildcardQuery(field, termImage);\n       } else if (prefix) {\n         q = getPrefixQuery(field,\n           discardEscapeChar(term.image.substring\n          (0, term.image.length()-1)));\n       } else if (fuzzy) {\n          float fms = fuzzyMinSim;\n          try {\n            fms = Float.valueOf(fuzzySlop.image.substring(1)).floatValue();\n          } catch (Exception ignored) { }\n         if(fms < 0.0f || fms > 1.0f){\n           {if (true) throw new ParseException(\"Minimum similarity for a FuzzyQuery has to be between 0.0f and 1.0f !\");}\n         }\n         q = getFuzzyQuery(field, termImage,fms);\n       } else {\n         q = getFieldQuery(field, termImage);\n       }\n      break;\n    case RANGEIN_START:\n      jj_consume_token(RANGEIN_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop1 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop1 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[11] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_TO:\n        jj_consume_token(RANGEIN_TO);\n        break;\n      default:\n        jj_la1[12] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop2 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop2 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[13] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEIN_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[14] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEIN_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          }\n          if (goop2.kind == RANGEIN_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n          }\n          q = getRangeQuery(field, discardEscapeChar(goop1.image), discardEscapeChar(goop2.image), true);\n      break;\n    case RANGEEX_START:\n      jj_consume_token(RANGEEX_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop1 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop1 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[15] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_TO:\n        jj_consume_token(RANGEEX_TO);\n        break;\n      default:\n        jj_la1[16] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop2 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop2 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[17] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEEX_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[18] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEEX_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          }\n          if (goop2.kind == RANGEEX_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n          }\n\n          q = getRangeQuery(field, discardEscapeChar(goop1.image), discardEscapeChar(goop2.image), false);\n      break;\n    case QUOTED:\n      term = jj_consume_token(QUOTED);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n        break;\n      default:\n        jj_la1[19] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[20] = jj_gen;\n        ;\n      }\n         int s = phraseSlop;\n\n         if (fuzzySlop != null) {\n           try {\n             s = Float.valueOf(fuzzySlop.image.substring(1)).intValue();\n           }\n           catch (Exception ignored) { }\n         }\n         q = getFieldQuery(field, discardEscapeChar(term.image.substring(1, term.image.length()-1)), s);\n      break;\n    default:\n      jj_la1[21] = jj_gen;\n      jj_consume_token(-1);\n      throw new ParseException();\n    }\n    if (boost != null) {\n      float f = (float) 1.0;\n      try {\n        f = Float.valueOf(boost.image).floatValue();\n      }\n      catch (Exception ignored) {\n    /* Should this be handled somehow? (defaults to \"no boost\", if\n     * boost number is invalid)\n     */\n      }\n\n      // avoid boosting null queries, such as those caused by stop words\n      if (q != null) {\n        q.setBoost(f);\n      }\n    }\n    {if (true) return q;}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"6f7a11eba51d213f09b96054111cf56a1e5796a3","date":1226364000,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/queryParser/QueryParser#Term(String).mjava","pathOld":"src/java/org/apache/lucene/queryParser/QueryParser#Term(String).mjava","sourceNew":"  final public Query Term(String field) throws ParseException {\n  Token term, boost=null, fuzzySlop=null, goop1, goop2;\n  boolean prefix = false;\n  boolean wildcard = false;\n  boolean fuzzy = false;\n  Query q;\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case STAR:\n    case TERM:\n    case PREFIXTERM:\n    case WILDTERM:\n    case NUMBER:\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case TERM:\n        term = jj_consume_token(TERM);\n        break;\n      case STAR:\n        term = jj_consume_token(STAR);\n                       wildcard=true;\n        break;\n      case PREFIXTERM:\n        term = jj_consume_token(PREFIXTERM);\n                             prefix=true;\n        break;\n      case WILDTERM:\n        term = jj_consume_token(WILDTERM);\n                           wildcard=true;\n        break;\n      case NUMBER:\n        term = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[8] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                fuzzy=true;\n        break;\n      default:\n        jj_la1[9] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n        case FUZZY_SLOP:\n          fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                                         fuzzy=true;\n          break;\n        default:\n          jj_la1[10] = jj_gen;\n          ;\n        }\n        break;\n      default:\n        jj_la1[11] = jj_gen;\n        ;\n      }\n       String termImage=discardEscapeChar(term.image);\n       if (wildcard) {\n       q = getWildcardQuery(field, termImage);\n       } else if (prefix) {\n         q = getPrefixQuery(field,\n           discardEscapeChar(term.image.substring\n          (0, term.image.length()-1)));\n       } else if (fuzzy) {\n          float fms = fuzzyMinSim;\n          try {\n            fms = Float.valueOf(fuzzySlop.image.substring(1)).floatValue();\n          } catch (Exception ignored) { }\n         if(fms < 0.0f || fms > 1.0f){\n           {if (true) throw new ParseException(\"Minimum similarity for a FuzzyQuery has to be between 0.0f and 1.0f !\");}\n         }\n         q = getFuzzyQuery(field, termImage,fms);\n       } else {\n         q = getFieldQuery(field, termImage);\n       }\n      break;\n    case RANGEIN_START:\n      jj_consume_token(RANGEIN_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop1 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop1 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[12] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_TO:\n        jj_consume_token(RANGEIN_TO);\n        break;\n      default:\n        jj_la1[13] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop2 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop2 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[14] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEIN_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[15] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEIN_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          }\n          if (goop2.kind == RANGEIN_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n          }\n          q = getRangeQuery(field, discardEscapeChar(goop1.image), discardEscapeChar(goop2.image), true);\n      break;\n    case RANGEEX_START:\n      jj_consume_token(RANGEEX_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop1 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop1 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[16] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_TO:\n        jj_consume_token(RANGEEX_TO);\n        break;\n      default:\n        jj_la1[17] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop2 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop2 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[18] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEEX_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[19] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEEX_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          }\n          if (goop2.kind == RANGEEX_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n          }\n\n          q = getRangeQuery(field, discardEscapeChar(goop1.image), discardEscapeChar(goop2.image), false);\n      break;\n    case QUOTED:\n      term = jj_consume_token(QUOTED);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n        break;\n      default:\n        jj_la1[20] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[21] = jj_gen;\n        ;\n      }\n         int s = phraseSlop;\n\n         if (fuzzySlop != null) {\n           try {\n             s = Float.valueOf(fuzzySlop.image.substring(1)).intValue();\n           }\n           catch (Exception ignored) { }\n         }\n         q = getFieldQuery(field, discardEscapeChar(term.image.substring(1, term.image.length()-1)), s);\n      break;\n    default:\n      jj_la1[22] = jj_gen;\n      jj_consume_token(-1);\n      throw new ParseException();\n    }\n    if (boost != null) {\n      float f = (float) 1.0;\n      try {\n        f = Float.valueOf(boost.image).floatValue();\n      }\n      catch (Exception ignored) {\n    /* Should this be handled somehow? (defaults to \"no boost\", if\n     * boost number is invalid)\n     */\n      }\n\n      // avoid boosting null queries, such as those caused by stop words\n      if (q != null) {\n        q.setBoost(f);\n      }\n    }\n    {if (true) return q;}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","sourceOld":"  final public Query Term(String field) throws ParseException {\n  Token term, boost=null, fuzzySlop=null, goop1, goop2;\n  boolean prefix = false;\n  boolean wildcard = false;\n  boolean fuzzy = false;\n  boolean rangein = false;\n  Query q;\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case STAR:\n    case TERM:\n    case PREFIXTERM:\n    case WILDTERM:\n    case NUMBER:\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case TERM:\n        term = jj_consume_token(TERM);\n        break;\n      case STAR:\n        term = jj_consume_token(STAR);\n                       wildcard=true;\n        break;\n      case PREFIXTERM:\n        term = jj_consume_token(PREFIXTERM);\n                             prefix=true;\n        break;\n      case WILDTERM:\n        term = jj_consume_token(WILDTERM);\n                           wildcard=true;\n        break;\n      case NUMBER:\n        term = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[8] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                fuzzy=true;\n        break;\n      default:\n        jj_la1[9] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n        case FUZZY_SLOP:\n          fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                                         fuzzy=true;\n          break;\n        default:\n          jj_la1[10] = jj_gen;\n          ;\n        }\n        break;\n      default:\n        jj_la1[11] = jj_gen;\n        ;\n      }\n       String termImage=discardEscapeChar(term.image);\n       if (wildcard) {\n       q = getWildcardQuery(field, termImage);\n       } else if (prefix) {\n         q = getPrefixQuery(field,\n           discardEscapeChar(term.image.substring\n          (0, term.image.length()-1)));\n       } else if (fuzzy) {\n          float fms = fuzzyMinSim;\n          try {\n            fms = Float.valueOf(fuzzySlop.image.substring(1)).floatValue();\n          } catch (Exception ignored) { }\n         if(fms < 0.0f || fms > 1.0f){\n           {if (true) throw new ParseException(\"Minimum similarity for a FuzzyQuery has to be between 0.0f and 1.0f !\");}\n         }\n         q = getFuzzyQuery(field, termImage,fms);\n       } else {\n         q = getFieldQuery(field, termImage);\n       }\n      break;\n    case RANGEIN_START:\n      jj_consume_token(RANGEIN_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop1 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop1 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[12] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_TO:\n        jj_consume_token(RANGEIN_TO);\n        break;\n      default:\n        jj_la1[13] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop2 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop2 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[14] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEIN_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[15] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEIN_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          }\n          if (goop2.kind == RANGEIN_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n          }\n          q = getRangeQuery(field, discardEscapeChar(goop1.image), discardEscapeChar(goop2.image), true);\n      break;\n    case RANGEEX_START:\n      jj_consume_token(RANGEEX_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop1 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop1 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[16] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_TO:\n        jj_consume_token(RANGEEX_TO);\n        break;\n      default:\n        jj_la1[17] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop2 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop2 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[18] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEEX_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[19] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEEX_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          }\n          if (goop2.kind == RANGEEX_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n          }\n\n          q = getRangeQuery(field, discardEscapeChar(goop1.image), discardEscapeChar(goop2.image), false);\n      break;\n    case QUOTED:\n      term = jj_consume_token(QUOTED);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n        break;\n      default:\n        jj_la1[20] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[21] = jj_gen;\n        ;\n      }\n         int s = phraseSlop;\n\n         if (fuzzySlop != null) {\n           try {\n             s = Float.valueOf(fuzzySlop.image.substring(1)).intValue();\n           }\n           catch (Exception ignored) { }\n         }\n         q = getFieldQuery(field, discardEscapeChar(term.image.substring(1, term.image.length()-1)), s);\n      break;\n    default:\n      jj_la1[22] = jj_gen;\n      jj_consume_token(-1);\n      throw new ParseException();\n    }\n    if (boost != null) {\n      float f = (float) 1.0;\n      try {\n        f = Float.valueOf(boost.image).floatValue();\n      }\n      catch (Exception ignored) {\n    /* Should this be handled somehow? (defaults to \"no boost\", if\n     * boost number is invalid)\n     */\n      }\n\n      // avoid boosting null queries, such as those caused by stop words\n      if (q != null) {\n        q.setBoost(f);\n      }\n    }\n    {if (true) return q;}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/queryParser/QueryParser#Term(String).mjava","pathOld":"src/java/org/apache/lucene/queryParser/QueryParser#Term(String).mjava","sourceNew":"  final public Query Term(String field) throws ParseException {\n  Token term, boost=null, fuzzySlop=null, goop1, goop2;\n  boolean prefix = false;\n  boolean wildcard = false;\n  boolean fuzzy = false;\n  Query q;\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case STAR:\n    case TERM:\n    case PREFIXTERM:\n    case WILDTERM:\n    case NUMBER:\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case TERM:\n        term = jj_consume_token(TERM);\n        break;\n      case STAR:\n        term = jj_consume_token(STAR);\n                       wildcard=true;\n        break;\n      case PREFIXTERM:\n        term = jj_consume_token(PREFIXTERM);\n                             prefix=true;\n        break;\n      case WILDTERM:\n        term = jj_consume_token(WILDTERM);\n                           wildcard=true;\n        break;\n      case NUMBER:\n        term = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[8] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                fuzzy=true;\n        break;\n      default:\n        jj_la1[9] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n        case FUZZY_SLOP:\n          fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                                         fuzzy=true;\n          break;\n        default:\n          jj_la1[10] = jj_gen;\n          ;\n        }\n        break;\n      default:\n        jj_la1[11] = jj_gen;\n        ;\n      }\n       String termImage=discardEscapeChar(term.image);\n       if (wildcard) {\n       q = getWildcardQuery(field, termImage);\n       } else if (prefix) {\n         q = getPrefixQuery(field,\n           discardEscapeChar(term.image.substring\n          (0, term.image.length()-1)));\n       } else if (fuzzy) {\n          float fms = fuzzyMinSim;\n          try {\n            fms = Float.valueOf(fuzzySlop.image.substring(1)).floatValue();\n          } catch (Exception ignored) { }\n         if(fms < 0.0f || fms > 1.0f){\n           {if (true) throw new ParseException(\"Minimum similarity for a FuzzyQuery has to be between 0.0f and 1.0f !\");}\n         }\n         q = getFuzzyQuery(field, termImage,fms);\n       } else {\n         q = getFieldQuery(field, termImage);\n       }\n      break;\n    case RANGEIN_START:\n      jj_consume_token(RANGEIN_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop1 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop1 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[12] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_TO:\n        jj_consume_token(RANGEIN_TO);\n        break;\n      default:\n        jj_la1[13] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop2 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop2 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[14] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEIN_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[15] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEIN_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          }\n          if (goop2.kind == RANGEIN_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n          }\n          q = getRangeQuery(field, discardEscapeChar(goop1.image), discardEscapeChar(goop2.image), true);\n      break;\n    case RANGEEX_START:\n      jj_consume_token(RANGEEX_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop1 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop1 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[16] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_TO:\n        jj_consume_token(RANGEEX_TO);\n        break;\n      default:\n        jj_la1[17] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop2 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop2 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[18] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEEX_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[19] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEEX_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          }\n          if (goop2.kind == RANGEEX_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n          }\n\n          q = getRangeQuery(field, discardEscapeChar(goop1.image), discardEscapeChar(goop2.image), false);\n      break;\n    case QUOTED:\n      term = jj_consume_token(QUOTED);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n        break;\n      default:\n        jj_la1[20] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[21] = jj_gen;\n        ;\n      }\n         int s = phraseSlop;\n\n         if (fuzzySlop != null) {\n           try {\n             s = Float.valueOf(fuzzySlop.image.substring(1)).intValue();\n           }\n           catch (Exception ignored) { }\n         }\n         q = getFieldQuery(field, discardEscapeChar(term.image.substring(1, term.image.length()-1)), s);\n      break;\n    default:\n      jj_la1[22] = jj_gen;\n      jj_consume_token(-1);\n      throw new ParseException();\n    }\n    if (boost != null) {\n      float f = (float) 1.0;\n      try {\n        f = Float.valueOf(boost.image).floatValue();\n      }\n      catch (Exception ignored) {\n    /* Should this be handled somehow? (defaults to \"no boost\", if\n     * boost number is invalid)\n     */\n      }\n\n      // avoid boosting null queries, such as those caused by stop words\n      if (q != null) {\n        q.setBoost(f);\n      }\n    }\n    {if (true) return q;}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","sourceOld":"  final public Query Term(String field) throws ParseException {\n  Token term, boost=null, fuzzySlop=null, goop1, goop2;\n  boolean prefix = false;\n  boolean wildcard = false;\n  boolean fuzzy = false;\n  Query q;\n    switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n    case STAR:\n    case TERM:\n    case PREFIXTERM:\n    case WILDTERM:\n    case NUMBER:\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case TERM:\n        term = jj_consume_token(TERM);\n        break;\n      case STAR:\n        term = jj_consume_token(STAR);\n                       wildcard=true;\n        break;\n      case PREFIXTERM:\n        term = jj_consume_token(PREFIXTERM);\n                             prefix=true;\n        break;\n      case WILDTERM:\n        term = jj_consume_token(WILDTERM);\n                           wildcard=true;\n        break;\n      case NUMBER:\n        term = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[8] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                fuzzy=true;\n        break;\n      default:\n        jj_la1[9] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n        case FUZZY_SLOP:\n          fuzzySlop = jj_consume_token(FUZZY_SLOP);\n                                                         fuzzy=true;\n          break;\n        default:\n          jj_la1[10] = jj_gen;\n          ;\n        }\n        break;\n      default:\n        jj_la1[11] = jj_gen;\n        ;\n      }\n       String termImage=discardEscapeChar(term.image);\n       if (wildcard) {\n       q = getWildcardQuery(field, termImage);\n       } else if (prefix) {\n         q = getPrefixQuery(field,\n           discardEscapeChar(term.image.substring\n          (0, term.image.length()-1)));\n       } else if (fuzzy) {\n          float fms = fuzzyMinSim;\n          try {\n            fms = Float.valueOf(fuzzySlop.image.substring(1)).floatValue();\n          } catch (Exception ignored) { }\n         if(fms < 0.0f || fms > 1.0f){\n           {if (true) throw new ParseException(\"Minimum similarity for a FuzzyQuery has to be between 0.0f and 1.0f !\");}\n         }\n         q = getFuzzyQuery(field, termImage,fms);\n       } else {\n         q = getFieldQuery(field, termImage);\n       }\n      break;\n    case RANGEIN_START:\n      jj_consume_token(RANGEIN_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop1 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop1 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[12] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_TO:\n        jj_consume_token(RANGEIN_TO);\n        break;\n      default:\n        jj_la1[13] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEIN_GOOP:\n        goop2 = jj_consume_token(RANGEIN_GOOP);\n        break;\n      case RANGEIN_QUOTED:\n        goop2 = jj_consume_token(RANGEIN_QUOTED);\n        break;\n      default:\n        jj_la1[14] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEIN_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[15] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEIN_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          }\n          if (goop2.kind == RANGEIN_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n          }\n          q = getRangeQuery(field, discardEscapeChar(goop1.image), discardEscapeChar(goop2.image), true);\n      break;\n    case RANGEEX_START:\n      jj_consume_token(RANGEEX_START);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop1 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop1 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[16] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_TO:\n        jj_consume_token(RANGEEX_TO);\n        break;\n      default:\n        jj_la1[17] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case RANGEEX_GOOP:\n        goop2 = jj_consume_token(RANGEEX_GOOP);\n        break;\n      case RANGEEX_QUOTED:\n        goop2 = jj_consume_token(RANGEEX_QUOTED);\n        break;\n      default:\n        jj_la1[18] = jj_gen;\n        jj_consume_token(-1);\n        throw new ParseException();\n      }\n      jj_consume_token(RANGEEX_END);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[19] = jj_gen;\n        ;\n      }\n          if (goop1.kind == RANGEEX_QUOTED) {\n            goop1.image = goop1.image.substring(1, goop1.image.length()-1);\n          }\n          if (goop2.kind == RANGEEX_QUOTED) {\n            goop2.image = goop2.image.substring(1, goop2.image.length()-1);\n          }\n\n          q = getRangeQuery(field, discardEscapeChar(goop1.image), discardEscapeChar(goop2.image), false);\n      break;\n    case QUOTED:\n      term = jj_consume_token(QUOTED);\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case FUZZY_SLOP:\n        fuzzySlop = jj_consume_token(FUZZY_SLOP);\n        break;\n      default:\n        jj_la1[20] = jj_gen;\n        ;\n      }\n      switch ((jj_ntk==-1)?jj_ntk():jj_ntk) {\n      case CARAT:\n        jj_consume_token(CARAT);\n        boost = jj_consume_token(NUMBER);\n        break;\n      default:\n        jj_la1[21] = jj_gen;\n        ;\n      }\n         int s = phraseSlop;\n\n         if (fuzzySlop != null) {\n           try {\n             s = Float.valueOf(fuzzySlop.image.substring(1)).intValue();\n           }\n           catch (Exception ignored) { }\n         }\n         q = getFieldQuery(field, discardEscapeChar(term.image.substring(1, term.image.length()-1)), s);\n      break;\n    default:\n      jj_la1[22] = jj_gen;\n      jj_consume_token(-1);\n      throw new ParseException();\n    }\n    if (boost != null) {\n      float f = (float) 1.0;\n      try {\n        f = Float.valueOf(boost.image).floatValue();\n      }\n      catch (Exception ignored) {\n    /* Should this be handled somehow? (defaults to \"no boost\", if\n     * boost number is invalid)\n     */\n      }\n\n      // avoid boosting null queries, such as those caused by stop words\n      if (q != null) {\n        q.setBoost(f);\n      }\n    }\n    {if (true) return q;}\n    throw new Error(\"Missing return statement in function\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"7a744f34b732efe0beb11df92bde24ccc01460dc":["e4cfd86408c5c098f45362646b511c6791013d37"],"0887d7bb675ed6e2d9ebc5f0486b3758481d7d8d":["c1099e8f73a0d10bf23390e09a117b85d6631049"],"3dd3270bbe1832a7b0b0986602736d4106d2473e":["84ba3b83816da930e6c14253827f6b2589b298e9"],"f9eacfbe2ad1cb736606c0e0093f7f3ab4a2e13c":["23a9c25687aa751efff1049f8b18ae27091ec453"],"c1099e8f73a0d10bf23390e09a117b85d6631049":["b51d06e615dc831227c94b4b16cdd5763692d2d4"],"b51d06e615dc831227c94b4b16cdd5763692d2d4":["7a744f34b732efe0beb11df92bde24ccc01460dc"],"84ba3b83816da930e6c14253827f6b2589b298e9":["fbfcab2b93df2e9eb2a0277104b237b5f2d389a4"],"9dc3f3d3156ee3e335155b8a8f44f7e926db09ef":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e4cfd86408c5c098f45362646b511c6791013d37":["f9eacfbe2ad1cb736606c0e0093f7f3ab4a2e13c"],"6f7a11eba51d213f09b96054111cf56a1e5796a3":["3dd3270bbe1832a7b0b0986602736d4106d2473e"],"23a9c25687aa751efff1049f8b18ae27091ec453":["9dc3f3d3156ee3e335155b8a8f44f7e926db09ef"],"c69e98ffd83f56083b99e5443ca713cd5783a2ae":["0887d7bb675ed6e2d9ebc5f0486b3758481d7d8d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"fbfcab2b93df2e9eb2a0277104b237b5f2d389a4":["c69e98ffd83f56083b99e5443ca713cd5783a2ae"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["6f7a11eba51d213f09b96054111cf56a1e5796a3"]},"commit2Childs":{"7a744f34b732efe0beb11df92bde24ccc01460dc":["b51d06e615dc831227c94b4b16cdd5763692d2d4"],"0887d7bb675ed6e2d9ebc5f0486b3758481d7d8d":["c69e98ffd83f56083b99e5443ca713cd5783a2ae"],"3dd3270bbe1832a7b0b0986602736d4106d2473e":["6f7a11eba51d213f09b96054111cf56a1e5796a3"],"f9eacfbe2ad1cb736606c0e0093f7f3ab4a2e13c":["e4cfd86408c5c098f45362646b511c6791013d37"],"c1099e8f73a0d10bf23390e09a117b85d6631049":["0887d7bb675ed6e2d9ebc5f0486b3758481d7d8d"],"b51d06e615dc831227c94b4b16cdd5763692d2d4":["c1099e8f73a0d10bf23390e09a117b85d6631049"],"84ba3b83816da930e6c14253827f6b2589b298e9":["3dd3270bbe1832a7b0b0986602736d4106d2473e"],"9dc3f3d3156ee3e335155b8a8f44f7e926db09ef":["23a9c25687aa751efff1049f8b18ae27091ec453"],"e4cfd86408c5c098f45362646b511c6791013d37":["7a744f34b732efe0beb11df92bde24ccc01460dc"],"6f7a11eba51d213f09b96054111cf56a1e5796a3":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"23a9c25687aa751efff1049f8b18ae27091ec453":["f9eacfbe2ad1cb736606c0e0093f7f3ab4a2e13c"],"c69e98ffd83f56083b99e5443ca713cd5783a2ae":["fbfcab2b93df2e9eb2a0277104b237b5f2d389a4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9dc3f3d3156ee3e335155b8a8f44f7e926db09ef"],"fbfcab2b93df2e9eb2a0277104b237b5f2d389a4":["84ba3b83816da930e6c14253827f6b2589b298e9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}