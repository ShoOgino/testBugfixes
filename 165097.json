{"path":"solr/core/src/java/org/apache/solr/rest/ManagedResourceStorage.ZooKeeperStorageIO#configure(SolrResourceLoader,NamedList[String]).mjava","commits":[{"id":"afb6bf9ce227ab6aac5068547e286ecc958b8b9d","date":1394661169,"type":0,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/rest/ManagedResourceStorage.ZooKeeperStorageIO#configure(SolrResourceLoader,NamedList[String]).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public void configure(SolrResourceLoader loader, NamedList<String> initArgs) throws SolrException {\n      // validate connectivity and the configured znode base\n      try {\n        if (!zkClient.exists(znodeBase, retryOnConnLoss)) {\n          zkClient.makePath(znodeBase, retryOnConnLoss);\n        }\n      } catch (Exception exc) {\n        String errMsg = String.format\n            (Locale.ROOT, \"Failed to verify znode at %s due to: %s\", znodeBase, exc.toString());\n        log.error(errMsg, exc);\n        throw new SolrException(ErrorCode.SERVER_ERROR, errMsg, exc);\n      }\n      \n      log.info(\"Configured ZooKeeperStorageIO with znodeBase: \"+znodeBase);      \n    }    \n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"140be51d03394488536f4aacedace29f9b318347","date":1587170432,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/rest/ManagedResourceStorage.ZooKeeperStorageIO#configure(SolrResourceLoader,NamedList[String]).mjava","pathOld":"solr/core/src/java/org/apache/solr/rest/ManagedResourceStorage.ZooKeeperStorageIO#configure(SolrResourceLoader,NamedList[String]).mjava","sourceNew":"    @Override\n    public void configure(SolrResourceLoader loader, NamedList<String> initArgs) throws SolrException {\n      // validate connectivity and the configured znode base\n      try {\n        if (!zkClient.exists(znodeBase, retryOnConnLoss)) {\n          zkClient.makePath(znodeBase, retryOnConnLoss);\n        }\n      } catch (Exception exc) {\n        String errMsg = String.format\n            (Locale.ROOT, \"Failed to verify znode at %s due to: %s\", znodeBase, exc.toString());\n        log.error(errMsg, exc);\n        throw new SolrException(ErrorCode.SERVER_ERROR, errMsg, exc);\n      }\n      \n      log.info(\"Configured ZooKeeperStorageIO with znodeBase: {}\", znodeBase);\n    }    \n\n","sourceOld":"    @Override\n    public void configure(SolrResourceLoader loader, NamedList<String> initArgs) throws SolrException {\n      // validate connectivity and the configured znode base\n      try {\n        if (!zkClient.exists(znodeBase, retryOnConnLoss)) {\n          zkClient.makePath(znodeBase, retryOnConnLoss);\n        }\n      } catch (Exception exc) {\n        String errMsg = String.format\n            (Locale.ROOT, \"Failed to verify znode at %s due to: %s\", znodeBase, exc.toString());\n        log.error(errMsg, exc);\n        throw new SolrException(ErrorCode.SERVER_ERROR, errMsg, exc);\n      }\n      \n      log.info(\"Configured ZooKeeperStorageIO with znodeBase: \"+znodeBase);      \n    }    \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"afb6bf9ce227ab6aac5068547e286ecc958b8b9d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"140be51d03394488536f4aacedace29f9b318347":["afb6bf9ce227ab6aac5068547e286ecc958b8b9d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["140be51d03394488536f4aacedace29f9b318347"]},"commit2Childs":{"afb6bf9ce227ab6aac5068547e286ecc958b8b9d":["140be51d03394488536f4aacedace29f9b318347"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["afb6bf9ce227ab6aac5068547e286ecc958b8b9d"],"140be51d03394488536f4aacedace29f9b318347":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}