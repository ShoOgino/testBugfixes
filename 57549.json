{"path":"lucene/src/test/org/apache/lucene/analysis/tokenattributes/TestCharTermAttributeImpl#testNonCharSequenceAppend().mjava","commits":[{"id":"b298ec7eee064feb32314fd646a95e38f1152835","date":1271673925,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/analysis/tokenattributes/TestCharTermAttributeImpl#testNonCharSequenceAppend().mjava","pathOld":"/dev/null","sourceNew":"  public void testNonCharSequenceAppend() {\n    CharTermAttributeImpl t = new CharTermAttributeImpl();\n    t.append(\"0123456789\");\n    t.append(\"0123456789\");\n    assertEquals(\"01234567890123456789\", t.toString());\n    t.append(new StringBuilder(\"0123456789\"));\n    assertEquals(\"012345678901234567890123456789\", t.toString());\n    CharTermAttribute t2 = new CharTermAttributeImpl();\n    t2.append(\"test\");\n    t.append(t2);\n    assertEquals(\"012345678901234567890123456789test\", t.toString());\n    t.append((String) null);\n    t.append((StringBuilder) null);\n    t.append((CharTermAttribute) null);\n    assertEquals(\"012345678901234567890123456789testnullnullnull\", t.toString());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/analysis/tokenattributes/TestCharTermAttributeImpl#testNonCharSequenceAppend().mjava","pathOld":"lucene/src/test/org/apache/lucene/analysis/tokenattributes/TestCharTermAttributeImpl#testNonCharSequenceAppend().mjava","sourceNew":"  public void testNonCharSequenceAppend() {\n    CharTermAttributeImpl t = new CharTermAttributeImpl();\n    t.append(\"0123456789\");\n    t.append(\"0123456789\");\n    assertEquals(\"01234567890123456789\", t.toString());\n    t.append(new StringBuilder(\"0123456789\"));\n    assertEquals(\"012345678901234567890123456789\", t.toString());\n    CharTermAttribute t2 = new CharTermAttributeImpl();\n    t2.append(\"test\");\n    t.append(t2);\n    assertEquals(\"012345678901234567890123456789test\", t.toString());\n    t.append((String) null);\n    t.append((StringBuilder) null);\n    t.append((CharTermAttribute) null);\n    assertEquals(\"012345678901234567890123456789testnullnullnull\", t.toString());\n  }\n\n","sourceOld":"  public void testNonCharSequenceAppend() {\n    CharTermAttributeImpl t = new CharTermAttributeImpl();\n    t.append(\"0123456789\");\n    t.append(\"0123456789\");\n    assertEquals(\"01234567890123456789\", t.toString());\n    t.append(new StringBuilder(\"0123456789\"));\n    assertEquals(\"012345678901234567890123456789\", t.toString());\n    CharTermAttribute t2 = new CharTermAttributeImpl();\n    t2.append(\"test\");\n    t.append(t2);\n    assertEquals(\"012345678901234567890123456789test\", t.toString());\n    t.append((String) null);\n    t.append((StringBuilder) null);\n    t.append((CharTermAttribute) null);\n    assertEquals(\"012345678901234567890123456789testnullnullnull\", t.toString());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["b298ec7eee064feb32314fd646a95e38f1152835"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b298ec7eee064feb32314fd646a95e38f1152835":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b298ec7eee064feb32314fd646a95e38f1152835"],"b298ec7eee064feb32314fd646a95e38f1152835":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}