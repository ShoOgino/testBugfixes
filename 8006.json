{"path":"src/java/org/apache/lucene/search/FieldCacheImpl#getFloats(IndexReader,String,FloatParser).mjava","commits":[{"id":"e8577ca8c36e33220ee0ffdfbdd96f8b9c43f8aa","date":1117730920,"type":0,"author":"Doug Cutting","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/FieldCacheImpl#getFloats(IndexReader,String,FloatParser).mjava","pathOld":"/dev/null","sourceNew":"  // inherit javadocs\n  public float[] getFloats (IndexReader reader, String field,\n                            FloatParser parser) throws IOException {\n    field = field.intern();\n    Object ret = lookup (reader, field, parser);\n    if (ret == null) {\n      final float[] retArray = new float[reader.maxDoc()];\n      if (retArray.length > 0) {\n        TermDocs termDocs = reader.termDocs();\n        TermEnum termEnum = reader.terms (new Term (field, \"\"));\n        try {\n          if (termEnum.term() == null) {\n            throw new RuntimeException (\"no terms in field \" + field);\n          }\n          do {\n            Term term = termEnum.term();\n            if (term.field() != field) break;\n            float termval = Float.parseFloat (term.text());\n            termDocs.seek (termEnum);\n            while (termDocs.next()) {\n              retArray[termDocs.doc()] = termval;\n            }\n          } while (termEnum.next());\n        } finally {\n          termDocs.close();\n          termEnum.close();\n        }\n      }\n      store (reader, field, parser, retArray);\n      return retArray;\n    }\n    return (float[]) ret;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["0bdb0a33df60fa7347461fa05bb738d285e17ca2","9a55903f0db73a920b8d10244145cdb74064fae2"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9a55903f0db73a920b8d10244145cdb74064fae2","date":1131518650,"type":3,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/FieldCacheImpl#getFloats(IndexReader,String,FloatParser).mjava","pathOld":"src/java/org/apache/lucene/search/FieldCacheImpl#getFloats(IndexReader,String,FloatParser).mjava","sourceNew":"  // inherit javadocs\n  public float[] getFloats (IndexReader reader, String field,\n                            FloatParser parser) throws IOException {\n    field = field.intern();\n    Object ret = lookup (reader, field, parser);\n    if (ret == null) {\n      final float[] retArray = new float[reader.maxDoc()];\n      if (retArray.length > 0) {\n        TermDocs termDocs = reader.termDocs();\n        TermEnum termEnum = reader.terms (new Term (field, \"\"));\n        try {\n          if (termEnum.term() == null) {\n            throw new RuntimeException (\"no terms in field \" + field);\n          }\n          do {\n            Term term = termEnum.term();\n            if (term.field() != field) break;\n            float termval = parser.parseFloat(term.text());\n            termDocs.seek (termEnum);\n            while (termDocs.next()) {\n              retArray[termDocs.doc()] = termval;\n            }\n          } while (termEnum.next());\n        } finally {\n          termDocs.close();\n          termEnum.close();\n        }\n      }\n      store (reader, field, parser, retArray);\n      return retArray;\n    }\n    return (float[]) ret;\n  }\n\n","sourceOld":"  // inherit javadocs\n  public float[] getFloats (IndexReader reader, String field,\n                            FloatParser parser) throws IOException {\n    field = field.intern();\n    Object ret = lookup (reader, field, parser);\n    if (ret == null) {\n      final float[] retArray = new float[reader.maxDoc()];\n      if (retArray.length > 0) {\n        TermDocs termDocs = reader.termDocs();\n        TermEnum termEnum = reader.terms (new Term (field, \"\"));\n        try {\n          if (termEnum.term() == null) {\n            throw new RuntimeException (\"no terms in field \" + field);\n          }\n          do {\n            Term term = termEnum.term();\n            if (term.field() != field) break;\n            float termval = Float.parseFloat (term.text());\n            termDocs.seek (termEnum);\n            while (termDocs.next()) {\n              retArray[termDocs.doc()] = termval;\n            }\n          } while (termEnum.next());\n        } finally {\n          termDocs.close();\n          termEnum.close();\n        }\n      }\n      store (reader, field, parser, retArray);\n      return retArray;\n    }\n    return (float[]) ret;\n  }\n\n","bugFix":["e8577ca8c36e33220ee0ffdfbdd96f8b9c43f8aa"],"bugIntro":["0bdb0a33df60fa7347461fa05bb738d285e17ca2"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"0bdb0a33df60fa7347461fa05bb738d285e17ca2","date":1139867173,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/FieldCacheImpl#getFloats(IndexReader,String,FloatParser).mjava","pathOld":"src/java/org/apache/lucene/search/FieldCacheImpl#getFloats(IndexReader,String,FloatParser).mjava","sourceNew":"  // inherit javadocs\n  public float[] getFloats (IndexReader reader, String field,\n                            FloatParser parser) throws IOException {\n    field = field.intern();\n    Object ret = lookup (reader, field, parser);\n    if (ret == null) {\n      final float[] retArray = new float[reader.maxDoc()];\n      TermDocs termDocs = reader.termDocs();\n      TermEnum termEnum = reader.terms (new Term (field, \"\"));\n      try {\n        do {\n          Term term = termEnum.term();\n          if (term==null || term.field() != field) break;\n          float termval = parser.parseFloat(term.text());\n          termDocs.seek (termEnum);\n          while (termDocs.next()) {\n            retArray[termDocs.doc()] = termval;\n          }\n        } while (termEnum.next());\n      } finally {\n        termDocs.close();\n        termEnum.close();\n      }\n      store (reader, field, parser, retArray);\n      return retArray;\n    }\n    return (float[]) ret;\n  }\n\n","sourceOld":"  // inherit javadocs\n  public float[] getFloats (IndexReader reader, String field,\n                            FloatParser parser) throws IOException {\n    field = field.intern();\n    Object ret = lookup (reader, field, parser);\n    if (ret == null) {\n      final float[] retArray = new float[reader.maxDoc()];\n      if (retArray.length > 0) {\n        TermDocs termDocs = reader.termDocs();\n        TermEnum termEnum = reader.terms (new Term (field, \"\"));\n        try {\n          if (termEnum.term() == null) {\n            throw new RuntimeException (\"no terms in field \" + field);\n          }\n          do {\n            Term term = termEnum.term();\n            if (term.field() != field) break;\n            float termval = parser.parseFloat(term.text());\n            termDocs.seek (termEnum);\n            while (termDocs.next()) {\n              retArray[termDocs.doc()] = termval;\n            }\n          } while (termEnum.next());\n        } finally {\n          termDocs.close();\n          termEnum.close();\n        }\n      }\n      store (reader, field, parser, retArray);\n      return retArray;\n    }\n    return (float[]) ret;\n  }\n\n","bugFix":["9a55903f0db73a920b8d10244145cdb74064fae2","e8577ca8c36e33220ee0ffdfbdd96f8b9c43f8aa"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4e4e7cc130365302adc717b9353553a80f892b73","date":1164006604,"type":3,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/FieldCacheImpl#getFloats(IndexReader,String,FloatParser).mjava","pathOld":"src/java/org/apache/lucene/search/FieldCacheImpl#getFloats(IndexReader,String,FloatParser).mjava","sourceNew":"  // inherit javadocs\n  public float[] getFloats(IndexReader reader, String field, FloatParser parser)\n      throws IOException {\n    return (float[]) floatsCache.get(reader, new Entry(field, parser));\n  }\n\n","sourceOld":"  // inherit javadocs\n  public float[] getFloats (IndexReader reader, String field,\n                            FloatParser parser) throws IOException {\n    field = field.intern();\n    Object ret = lookup (reader, field, parser);\n    if (ret == null) {\n      final float[] retArray = new float[reader.maxDoc()];\n      TermDocs termDocs = reader.termDocs();\n      TermEnum termEnum = reader.terms (new Term (field, \"\"));\n      try {\n        do {\n          Term term = termEnum.term();\n          if (term==null || term.field() != field) break;\n          float termval = parser.parseFloat(term.text());\n          termDocs.seek (termEnum);\n          while (termDocs.next()) {\n            retArray[termDocs.doc()] = termval;\n          }\n        } while (termEnum.next());\n      } finally {\n        termDocs.close();\n        termEnum.close();\n      }\n      store (reader, field, parser, retArray);\n      return retArray;\n    }\n    return (float[]) ret;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e69f59b863731d864bf3047235e718f0f88f8841","date":1250105498,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/FieldCacheImpl#getFloats(IndexReader,String,FloatParser).mjava","pathOld":"src/java/org/apache/lucene/search/FieldCacheImpl#getFloats(IndexReader,String,FloatParser).mjava","sourceNew":"  // inherit javadocs\n  public float[] getFloats(IndexReader reader, String field, FloatParser parser)\n    throws IOException {\n\n    return (float[]) ((Cache)caches.get(Float.TYPE)).get(reader, new Entry(field, parser));\n  }\n\n","sourceOld":"  // inherit javadocs\n  public float[] getFloats(IndexReader reader, String field, FloatParser parser)\n      throws IOException {\n    return (float[]) floatsCache.get(reader, new Entry(field, parser));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"20ff1ff2aa6f91149e9cd75f65a56fbdda5266ce","date":1255993146,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/FieldCacheImpl#getFloats(IndexReader,String,FloatParser).mjava","pathOld":"src/java/org/apache/lucene/search/FieldCacheImpl#getFloats(IndexReader,String,FloatParser).mjava","sourceNew":"  // inherit javadocs\n  public float[] getFloats(IndexReader reader, String field, FloatParser parser)\n    throws IOException {\n\n    return (float[]) caches.get(Float.TYPE).get(reader, new Entry(field, parser));\n  }\n\n","sourceOld":"  // inherit javadocs\n  public float[] getFloats(IndexReader reader, String field, FloatParser parser)\n    throws IOException {\n\n    return (float[]) ((Cache)caches.get(Float.TYPE)).get(reader, new Entry(field, parser));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/FieldCacheImpl#getFloats(IndexReader,String,FloatParser).mjava","pathOld":"src/java/org/apache/lucene/search/FieldCacheImpl#getFloats(IndexReader,String,FloatParser).mjava","sourceNew":"  // inherit javadocs\n  public float[] getFloats(IndexReader reader, String field, FloatParser parser)\n    throws IOException {\n\n    return (float[]) caches.get(Float.TYPE).get(reader, new Entry(field, parser));\n  }\n\n","sourceOld":"  // inherit javadocs\n  public float[] getFloats(IndexReader reader, String field, FloatParser parser)\n    throws IOException {\n\n    return (float[]) caches.get(Float.TYPE).get(reader, new Entry(field, parser));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0bdb0a33df60fa7347461fa05bb738d285e17ca2":["9a55903f0db73a920b8d10244145cdb74064fae2"],"9a55903f0db73a920b8d10244145cdb74064fae2":["e8577ca8c36e33220ee0ffdfbdd96f8b9c43f8aa"],"e69f59b863731d864bf3047235e718f0f88f8841":["4e4e7cc130365302adc717b9353553a80f892b73"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4e4e7cc130365302adc717b9353553a80f892b73":["0bdb0a33df60fa7347461fa05bb738d285e17ca2"],"e8577ca8c36e33220ee0ffdfbdd96f8b9c43f8aa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"20ff1ff2aa6f91149e9cd75f65a56fbdda5266ce":["e69f59b863731d864bf3047235e718f0f88f8841"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["20ff1ff2aa6f91149e9cd75f65a56fbdda5266ce"]},"commit2Childs":{"0bdb0a33df60fa7347461fa05bb738d285e17ca2":["4e4e7cc130365302adc717b9353553a80f892b73"],"9a55903f0db73a920b8d10244145cdb74064fae2":["0bdb0a33df60fa7347461fa05bb738d285e17ca2"],"e69f59b863731d864bf3047235e718f0f88f8841":["20ff1ff2aa6f91149e9cd75f65a56fbdda5266ce"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e8577ca8c36e33220ee0ffdfbdd96f8b9c43f8aa"],"4e4e7cc130365302adc717b9353553a80f892b73":["e69f59b863731d864bf3047235e718f0f88f8841"],"e8577ca8c36e33220ee0ffdfbdd96f8b9c43f8aa":["9a55903f0db73a920b8d10244145cdb74064fae2"],"20ff1ff2aa6f91149e9cd75f65a56fbdda5266ce":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}