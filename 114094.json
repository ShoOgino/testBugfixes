{"path":"lucene/core/src/java/org/apache/lucene/document/DateTools#round(long,Resolution).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/document/DateTools#round(long,Resolution).mjava","pathOld":"lucene/src/java/org/apache/lucene/document/DateTools#round(long,Resolution).mjava","sourceNew":"  /**\n   * Limit a date's resolution. For example, the date <code>1095767411000</code>\n   * (which represents 2004-09-21 13:50:11) will be changed to \n   * <code>1093989600000</code> (2004-09-01 00:00:00) when using\n   * <code>Resolution.MONTH</code>.\n   * \n   * @param resolution The desired resolution of the date to be returned\n   * @return the date with all values more precise than <code>resolution</code>\n   *  set to 0 or 1, expressed as milliseconds since January 1, 1970, 00:00:00 GMT\n   */\n  @SuppressWarnings(\"fallthrough\")\n  public static long round(long time, Resolution resolution) {\n    final Calendar calInstance = TL_CAL.get();\n    calInstance.setTimeInMillis(time);\n    \n    switch (resolution) {\n      //NOTE: switch statement fall-through is deliberate\n      case YEAR:\n        calInstance.set(Calendar.MONTH, 0);\n      case MONTH:\n        calInstance.set(Calendar.DAY_OF_MONTH, 1);\n      case DAY:\n        calInstance.set(Calendar.HOUR_OF_DAY, 0);\n      case HOUR:\n        calInstance.set(Calendar.MINUTE, 0);\n      case MINUTE:\n        calInstance.set(Calendar.SECOND, 0);\n      case SECOND:\n        calInstance.set(Calendar.MILLISECOND, 0);\n      case MILLISECOND:\n        // don't cut off anything\n        break;\n      default:\n        throw new IllegalArgumentException(\"unknown resolution \" + resolution);\n    }\n    return calInstance.getTimeInMillis();\n  }\n\n","sourceOld":"  /**\n   * Limit a date's resolution. For example, the date <code>1095767411000</code>\n   * (which represents 2004-09-21 13:50:11) will be changed to \n   * <code>1093989600000</code> (2004-09-01 00:00:00) when using\n   * <code>Resolution.MONTH</code>.\n   * \n   * @param resolution The desired resolution of the date to be returned\n   * @return the date with all values more precise than <code>resolution</code>\n   *  set to 0 or 1, expressed as milliseconds since January 1, 1970, 00:00:00 GMT\n   */\n  @SuppressWarnings(\"fallthrough\")\n  public static long round(long time, Resolution resolution) {\n    final Calendar calInstance = TL_CAL.get();\n    calInstance.setTimeInMillis(time);\n    \n    switch (resolution) {\n      //NOTE: switch statement fall-through is deliberate\n      case YEAR:\n        calInstance.set(Calendar.MONTH, 0);\n      case MONTH:\n        calInstance.set(Calendar.DAY_OF_MONTH, 1);\n      case DAY:\n        calInstance.set(Calendar.HOUR_OF_DAY, 0);\n      case HOUR:\n        calInstance.set(Calendar.MINUTE, 0);\n      case MINUTE:\n        calInstance.set(Calendar.SECOND, 0);\n      case SECOND:\n        calInstance.set(Calendar.MILLISECOND, 0);\n      case MILLISECOND:\n        // don't cut off anything\n        break;\n      default:\n        throw new IllegalArgumentException(\"unknown resolution \" + resolution);\n    }\n    return calInstance.getTimeInMillis();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}