{"path":"solr/core/src/java/org/apache/solr/api/AnnotatedApi#readSpec(EndPoint,List[Method]).mjava","commits":[{"id":"0cdbfc1e5714aafb41cabb055936a38ba4db5362","date":1587983533,"type":1,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/api/AnnotatedApi#readSpec(EndPoint,List[Method]).mjava","pathOld":"solr/core/src/java/org/apache/solr/api/AnnotatedApi#readSpec(Class).mjava","sourceNew":"  private static SpecProvider readSpec(EndPoint endPoint, List<Method> m) {\n    return () -> {\n      Map map = new LinkedHashMap();\n      List<String> methods = new ArrayList<>();\n      for (SolrRequest.METHOD method : endPoint.method()) {\n        methods.add(method.name());\n      }\n      map.put(\"methods\", methods);\n      map.put(\"url\", new ValidatingJsonMap(Collections.singletonMap(\"paths\", Arrays.asList(endPoint.path()))));\n      Map<String, Object> cmds = new HashMap<>();\n\n      for (Method method : m) {\n        Command command = method.getAnnotation(Command.class);\n        if (command != null && !command.name().isEmpty()) {\n          cmds.put(command.name(), AnnotatedApi.createSchema(method));\n        }\n      }\n      if (!cmds.isEmpty()) {\n        map.put(\"commands\", cmds);\n      }\n      return new ValidatingJsonMap(map);\n    };\n\n  }\n\n","sourceOld":"  private static SpecProvider readSpec(Class klas) {\n    EndPoint endPoint = (EndPoint) klas.getAnnotation(EndPoint.class);\n    if (endPoint == null)\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Invalid class :  \" + klas.getName());\n    return () -> {\n      Map map = new LinkedHashMap();\n      List<String> methods = new ArrayList<>();\n      for (SolrRequest.METHOD method : endPoint.method()) {\n        methods.add(method.name());\n      }\n      map.put(\"methods\", methods);\n      map.put(\"url\", new ValidatingJsonMap(Collections.singletonMap(\"paths\", Arrays.asList(endPoint.path()))));\n      Map<String, Object> cmds = new HashMap<>();\n\n      for (Method method : klas.getMethods()) {\n        Command command = method.getAnnotation(Command.class);\n        if (command != null && !command.name().isEmpty()) {\n          cmds.put(command.name(), AnnotatedApi.createSchema(method));\n        }\n      }\n      if (!cmds.isEmpty()) {\n        map.put(\"commands\", cmds);\n      }\n      return new ValidatingJsonMap(map);\n    };\n\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"06a8891f085f71282bb3ece1b1732b68f07813a3","date":1591912889,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/api/AnnotatedApi#readSpec(EndPoint,List[Method]).mjava","pathOld":"solr/core/src/java/org/apache/solr/api/AnnotatedApi#readSpec(EndPoint,List[Method]).mjava","sourceNew":"  @SuppressWarnings({\"unchecked\", \"rawtypes\"})\n  private static SpecProvider readSpec(EndPoint endPoint, List<Method> m) {\n    return () -> {\n      Map map = new LinkedHashMap();\n      List<String> methods = new ArrayList<>();\n      for (SolrRequest.METHOD method : endPoint.method()) {\n        methods.add(method.name());\n      }\n      map.put(\"methods\", methods);\n      map.put(\"url\", new ValidatingJsonMap(Collections.singletonMap(\"paths\", Arrays.asList(endPoint.path()))));\n      Map<String, Object> cmds = new HashMap<>();\n\n      for (Method method : m) {\n        Command command = method.getAnnotation(Command.class);\n        if (command != null && !command.name().isEmpty()) {\n          cmds.put(command.name(), AnnotatedApi.createSchema(method));\n        }\n      }\n      if (!cmds.isEmpty()) {\n        map.put(\"commands\", cmds);\n      }\n      return new ValidatingJsonMap(map);\n    };\n\n  }\n\n","sourceOld":"  private static SpecProvider readSpec(EndPoint endPoint, List<Method> m) {\n    return () -> {\n      Map map = new LinkedHashMap();\n      List<String> methods = new ArrayList<>();\n      for (SolrRequest.METHOD method : endPoint.method()) {\n        methods.add(method.name());\n      }\n      map.put(\"methods\", methods);\n      map.put(\"url\", new ValidatingJsonMap(Collections.singletonMap(\"paths\", Arrays.asList(endPoint.path()))));\n      Map<String, Object> cmds = new HashMap<>();\n\n      for (Method method : m) {\n        Command command = method.getAnnotation(Command.class);\n        if (command != null && !command.name().isEmpty()) {\n          cmds.put(command.name(), AnnotatedApi.createSchema(method));\n        }\n      }\n      if (!cmds.isEmpty()) {\n        map.put(\"commands\", cmds);\n      }\n      return new ValidatingJsonMap(map);\n    };\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0cdbfc1e5714aafb41cabb055936a38ba4db5362":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"06a8891f085f71282bb3ece1b1732b68f07813a3":["0cdbfc1e5714aafb41cabb055936a38ba4db5362"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["06a8891f085f71282bb3ece1b1732b68f07813a3"]},"commit2Childs":{"0cdbfc1e5714aafb41cabb055936a38ba4db5362":["06a8891f085f71282bb3ece1b1732b68f07813a3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0cdbfc1e5714aafb41cabb055936a38ba4db5362"],"06a8891f085f71282bb3ece1b1732b68f07813a3":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}