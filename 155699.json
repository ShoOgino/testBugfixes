{"path":"solr/contrib/ltr/src/test/org/apache/solr/ltr/store/rest/TestModelManagerPersistence#testInnerCustomClassesPersistence().mjava","commits":[{"id":"6e3fdbcab9b445653b4770ff1c006686dcb30c30","date":1518197297,"type":0,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/contrib/ltr/src/test/org/apache/solr/ltr/store/rest/TestModelManagerPersistence#testInnerCustomClassesPersistence().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testInnerCustomClassesPersistence() throws Exception {\n\n    final String featureStoreName = \"test42\";\n\n    final String featureName = \"feature42\";\n    final String featureClassName;\n    if (random().nextBoolean()) {\n      featureClassName = ValueFeature.class.getName();\n    } else {\n      featureClassName = DummyCustomFeature.class.getName();\n    }\n\n    loadFeature(featureName, featureClassName, \"test42\",\n        \"{\\\"value\\\":\"+random().nextInt(100)+\"}\");\n    assertJQ(ManagedFeatureStore.REST_END_POINT + \"/\"+featureStoreName,\n        \"/features/[0]/name=='\"+featureName+\"'\");\n\n    final String modelName = \"model42\";\n    final String modelClassName;\n    if (random().nextBoolean()) {\n      modelClassName = LinearModel.class.getName();\n    } else {\n      modelClassName = DummyCustomModel.class.getName();\n    }\n\n    loadModel(modelName, modelClassName,\n        new String[] { featureName }, featureStoreName,\n        \"{\\\"weights\\\":{\\\"\"+featureName+\"\\\":1.0}}\");\n    assertJQ(ManagedModelStore.REST_END_POINT,\n        \"/models/[0]/name=='\"+modelName+\"'\");\n\n    restTestHarness.reload();\n    assertJQ(ManagedFeatureStore.REST_END_POINT + \"/\"+featureStoreName,\n        \"/features/[0]/name=='\"+featureName+\"'\");\n    assertJQ(ManagedModelStore.REST_END_POINT,\n        \"/models/[0]/name=='\"+modelName+\"'\");\n\n    assertJDelete(ManagedModelStore.REST_END_POINT + \"/\"+modelName,\n        \"/responseHeader/status==0\");\n    assertJQ(ManagedModelStore.REST_END_POINT,\n        \"/models/==[]\");\n\n    assertJDelete(ManagedFeatureStore.REST_END_POINT + \"/\"+featureStoreName,\n        \"/responseHeader/status==0\");\n    assertJQ(ManagedFeatureStore.REST_END_POINT + \"/\"+featureStoreName,\n        \"/features/==[]\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f906c3206e7eb174774f938416460e39170d819","date":1518202619,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/contrib/ltr/src/test/org/apache/solr/ltr/store/rest/TestModelManagerPersistence#testInnerCustomClassesPersistence().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testInnerCustomClassesPersistence() throws Exception {\n\n    final String featureStoreName = \"test42\";\n\n    final String featureName = \"feature42\";\n    final String featureClassName;\n    if (random().nextBoolean()) {\n      featureClassName = ValueFeature.class.getName();\n    } else {\n      featureClassName = DummyCustomFeature.class.getName();\n    }\n\n    loadFeature(featureName, featureClassName, \"test42\",\n        \"{\\\"value\\\":\"+random().nextInt(100)+\"}\");\n    assertJQ(ManagedFeatureStore.REST_END_POINT + \"/\"+featureStoreName,\n        \"/features/[0]/name=='\"+featureName+\"'\");\n\n    final String modelName = \"model42\";\n    final String modelClassName;\n    if (random().nextBoolean()) {\n      modelClassName = LinearModel.class.getName();\n    } else {\n      modelClassName = DummyCustomModel.class.getName();\n    }\n\n    loadModel(modelName, modelClassName,\n        new String[] { featureName }, featureStoreName,\n        \"{\\\"weights\\\":{\\\"\"+featureName+\"\\\":1.0}}\");\n    assertJQ(ManagedModelStore.REST_END_POINT,\n        \"/models/[0]/name=='\"+modelName+\"'\");\n\n    restTestHarness.reload();\n    assertJQ(ManagedFeatureStore.REST_END_POINT + \"/\"+featureStoreName,\n        \"/features/[0]/name=='\"+featureName+\"'\");\n    assertJQ(ManagedModelStore.REST_END_POINT,\n        \"/models/[0]/name=='\"+modelName+\"'\");\n\n    assertJDelete(ManagedModelStore.REST_END_POINT + \"/\"+modelName,\n        \"/responseHeader/status==0\");\n    assertJQ(ManagedModelStore.REST_END_POINT,\n        \"/models/==[]\");\n\n    assertJDelete(ManagedFeatureStore.REST_END_POINT + \"/\"+featureStoreName,\n        \"/responseHeader/status==0\");\n    assertJQ(ManagedFeatureStore.REST_END_POINT + \"/\"+featureStoreName,\n        \"/features/==[]\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6e3fdbcab9b445653b4770ff1c006686dcb30c30":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3f906c3206e7eb174774f938416460e39170d819"],"3f906c3206e7eb174774f938416460e39170d819":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","6e3fdbcab9b445653b4770ff1c006686dcb30c30"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6e3fdbcab9b445653b4770ff1c006686dcb30c30","3f906c3206e7eb174774f938416460e39170d819"],"6e3fdbcab9b445653b4770ff1c006686dcb30c30":["3f906c3206e7eb174774f938416460e39170d819"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"3f906c3206e7eb174774f938416460e39170d819":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}