{"path":"src/test/org/apache/solr/util/TestUtils#testBitUtils().mjava","commits":[{"id":"62b607d886f47f068a4b7422844c88aab05322b2","date":1212779224,"type":0,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/test/org/apache/solr/util/TestUtils#testBitUtils().mjava","pathOld":"/dev/null","sourceNew":"  public void testBitUtils()\n  {\n    long num = 100000;\n    assertEquals( 5, BitUtil.ntz(num) );\n    assertEquals( 5, BitUtil.ntz2(num) );\n    assertEquals( 5, BitUtil.ntz3(num) );\n    \n    num = 10;\n    assertEquals( 1, BitUtil.ntz(num) );\n    assertEquals( 1, BitUtil.ntz2(num) );\n    assertEquals( 1, BitUtil.ntz3(num) );\n\n    num = 234;\n   //?????  why 1?\n   // assertEquals( 0, BitUtil.ntz(num) );\n   // assertEquals( 0, BitUtil.ntz2(num) );\n   // assertEquals( 0, BitUtil.ntz3(num) );\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17da3df026ca5520059a8847309756c0c1a8823a","date":1212789397,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/test/org/apache/solr/util/TestUtils#testBitUtils().mjava","pathOld":"src/test/org/apache/solr/util/TestUtils#testBitUtils().mjava","sourceNew":"  public void testBitUtils()\n  {\n    long num = 100000;\n    assertEquals( 5, BitUtil.ntz(num) );\n    assertEquals( 5, BitUtil.ntz2(num) );\n    assertEquals( 5, BitUtil.ntz3(num) );\n    \n    num = 10;\n    assertEquals( 1, BitUtil.ntz(num) );\n    assertEquals( 1, BitUtil.ntz2(num) );\n    assertEquals( 1, BitUtil.ntz3(num) );\n\n    for (int i=0; i<64; i++) {\n      num = 1L << i;\n      assertEquals( i, BitUtil.ntz(num) );\n      assertEquals( i, BitUtil.ntz2(num) );\n      assertEquals( i, BitUtil.ntz3(num) );\n    }\n  }\n\n","sourceOld":"  public void testBitUtils()\n  {\n    long num = 100000;\n    assertEquals( 5, BitUtil.ntz(num) );\n    assertEquals( 5, BitUtil.ntz2(num) );\n    assertEquals( 5, BitUtil.ntz3(num) );\n    \n    num = 10;\n    assertEquals( 1, BitUtil.ntz(num) );\n    assertEquals( 1, BitUtil.ntz2(num) );\n    assertEquals( 1, BitUtil.ntz3(num) );\n\n    num = 234;\n   //?????  why 1?\n   // assertEquals( 0, BitUtil.ntz(num) );\n   // assertEquals( 0, BitUtil.ntz2(num) );\n   // assertEquals( 0, BitUtil.ntz3(num) );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5108097d840f85a1779a41d0e412efb8130546e6","date":1228575321,"type":4,"author":"Grant Ingersoll","isMerge":false,"pathNew":"/dev/null","pathOld":"src/test/org/apache/solr/util/TestUtils#testBitUtils().mjava","sourceNew":null,"sourceOld":"  public void testBitUtils()\n  {\n    long num = 100000;\n    assertEquals( 5, BitUtil.ntz(num) );\n    assertEquals( 5, BitUtil.ntz2(num) );\n    assertEquals( 5, BitUtil.ntz3(num) );\n    \n    num = 10;\n    assertEquals( 1, BitUtil.ntz(num) );\n    assertEquals( 1, BitUtil.ntz2(num) );\n    assertEquals( 1, BitUtil.ntz3(num) );\n\n    for (int i=0; i<64; i++) {\n      num = 1L << i;\n      assertEquals( i, BitUtil.ntz(num) );\n      assertEquals( i, BitUtil.ntz2(num) );\n      assertEquals( i, BitUtil.ntz3(num) );\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"62b607d886f47f068a4b7422844c88aab05322b2":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"5108097d840f85a1779a41d0e412efb8130546e6":["17da3df026ca5520059a8847309756c0c1a8823a"],"17da3df026ca5520059a8847309756c0c1a8823a":["62b607d886f47f068a4b7422844c88aab05322b2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"62b607d886f47f068a4b7422844c88aab05322b2":["17da3df026ca5520059a8847309756c0c1a8823a"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["62b607d886f47f068a4b7422844c88aab05322b2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5108097d840f85a1779a41d0e412efb8130546e6":[],"17da3df026ca5520059a8847309756c0c1a8823a":["5108097d840f85a1779a41d0e412efb8130546e6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5108097d840f85a1779a41d0e412efb8130546e6","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}