{"path":"lucene/core/src/java/org/apache/lucene/codecs/blocktree/SegmentTermsEnum#SegmentTermsEnum(FieldReader).mjava","commits":[{"id":"e50f0da93c6dcee20d8792637b1786e2c34975e9","date":1400182475,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/blocktree/SegmentTermsEnum#SegmentTermsEnum(FieldReader).mjava","pathOld":"/dev/null","sourceNew":"  public SegmentTermsEnum(FieldReader fr) throws IOException {\n    this.fr = fr;\n\n    //if (DEBUG) System.out.println(\"BTTR.init seg=\" + segment);\n    stack = new Frame[0];\n        \n    // Used to hold seek by TermState, or cached seek\n    staticFrame = new Frame(-1);\n\n    if (fr.index == null) {\n      fstReader = null;\n    } else {\n      fstReader = fr.index.getBytesReader();\n    }\n\n    // Init w/ root block; don't use index since it may\n    // not (and need not) have been loaded\n    for(int arcIdx=0;arcIdx<arcs.length;arcIdx++) {\n      arcs[arcIdx] = new FST.Arc<>();\n    }\n\n    currentFrame = staticFrame;\n    final FST.Arc<BytesRef> arc;\n    if (fr.index != null) {\n      arc = fr.index.getFirstArc(arcs[0]);\n      // Empty string prefix must have an output in the index!\n      assert arc.isFinal();\n    } else {\n      arc = null;\n    }\n    currentFrame = staticFrame;\n    //currentFrame = pushFrame(arc, rootCode, 0);\n    //currentFrame.loadBlock();\n    validIndexPrefix = 0;\n    // if (DEBUG) {\n    //   System.out.println(\"init frame state \" + currentFrame.ord);\n    //   printSeekState();\n    // }\n\n    //System.out.println();\n    // computeBlockStats().print(System.out);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f4ef2de7b0fd59ef22e20888773ad260c90bfb4","date":1400183621,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/blocktree/SegmentTermsEnum#SegmentTermsEnum(FieldReader).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/blocktree/SegmentTermsEnum#SegmentTermsEnum(FieldReader).mjava","sourceNew":"  public SegmentTermsEnum(FieldReader fr) throws IOException {\n    this.fr = fr;\n\n    //if (DEBUG) System.out.println(\"BTTR.init seg=\" + segment);\n    stack = new SegmentTermsEnumFrame[0];\n        \n    // Used to hold seek by TermState, or cached seek\n    staticFrame = new SegmentTermsEnumFrame(this, -1);\n\n    if (fr.index == null) {\n      fstReader = null;\n    } else {\n      fstReader = fr.index.getBytesReader();\n    }\n\n    // Init w/ root block; don't use index since it may\n    // not (and need not) have been loaded\n    for(int arcIdx=0;arcIdx<arcs.length;arcIdx++) {\n      arcs[arcIdx] = new FST.Arc<>();\n    }\n\n    currentFrame = staticFrame;\n    final FST.Arc<BytesRef> arc;\n    if (fr.index != null) {\n      arc = fr.index.getFirstArc(arcs[0]);\n      // Empty string prefix must have an output in the index!\n      assert arc.isFinal();\n    } else {\n      arc = null;\n    }\n    currentFrame = staticFrame;\n    //currentFrame = pushFrame(arc, rootCode, 0);\n    //currentFrame.loadBlock();\n    validIndexPrefix = 0;\n    // if (DEBUG) {\n    //   System.out.println(\"init frame state \" + currentFrame.ord);\n    //   printSeekState();\n    // }\n\n    //System.out.println();\n    // computeBlockStats().print(System.out);\n  }\n\n","sourceOld":"  public SegmentTermsEnum(FieldReader fr) throws IOException {\n    this.fr = fr;\n\n    //if (DEBUG) System.out.println(\"BTTR.init seg=\" + segment);\n    stack = new Frame[0];\n        \n    // Used to hold seek by TermState, or cached seek\n    staticFrame = new Frame(-1);\n\n    if (fr.index == null) {\n      fstReader = null;\n    } else {\n      fstReader = fr.index.getBytesReader();\n    }\n\n    // Init w/ root block; don't use index since it may\n    // not (and need not) have been loaded\n    for(int arcIdx=0;arcIdx<arcs.length;arcIdx++) {\n      arcs[arcIdx] = new FST.Arc<>();\n    }\n\n    currentFrame = staticFrame;\n    final FST.Arc<BytesRef> arc;\n    if (fr.index != null) {\n      arc = fr.index.getFirstArc(arcs[0]);\n      // Empty string prefix must have an output in the index!\n      assert arc.isFinal();\n    } else {\n      arc = null;\n    }\n    currentFrame = staticFrame;\n    //currentFrame = pushFrame(arc, rootCode, 0);\n    //currentFrame.loadBlock();\n    validIndexPrefix = 0;\n    // if (DEBUG) {\n    //   System.out.println(\"init frame state \" + currentFrame.ord);\n    //   printSeekState();\n    // }\n\n    //System.out.println();\n    // computeBlockStats().print(System.out);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f56ba5d8fecfb0b8bfdca8c0b630372d998131a9","date":1400353720,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/blocktree/SegmentTermsEnum#SegmentTermsEnum(FieldReader).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/blocktree/SegmentTermsEnum#SegmentTermsEnum(FieldReader).mjava","sourceNew":"  public SegmentTermsEnum(FieldReader fr) throws IOException {\n    this.fr = fr;\n    System.out.println(\"STE: init\");\n\n    //if (DEBUG) System.out.println(\"BTTR.init seg=\" + segment);\n    stack = new SegmentTermsEnumFrame[0];\n        \n    // Used to hold seek by TermState, or cached seek\n    staticFrame = new SegmentTermsEnumFrame(this, -1);\n\n    if (fr.index == null) {\n      fstReader = null;\n    } else {\n      fstReader = fr.index.getBytesReader();\n    }\n\n    // Init w/ root block; don't use index since it may\n    // not (and need not) have been loaded\n    for(int arcIdx=0;arcIdx<arcs.length;arcIdx++) {\n      arcs[arcIdx] = new FST.Arc<>();\n    }\n\n    currentFrame = staticFrame;\n    final FST.Arc<BytesRef> arc;\n    if (fr.index != null) {\n      arc = fr.index.getFirstArc(arcs[0]);\n      // Empty string prefix must have an output in the index!\n      assert arc.isFinal();\n    } else {\n      arc = null;\n    }\n    currentFrame = staticFrame;\n    //currentFrame = pushFrame(arc, rootCode, 0);\n    //currentFrame.loadBlock();\n    validIndexPrefix = 0;\n    // if (DEBUG) {\n    //   System.out.println(\"init frame state \" + currentFrame.ord);\n    //   printSeekState();\n    // }\n\n    //System.out.println();\n    // computeBlockStats().print(System.out);\n  }\n\n","sourceOld":"  public SegmentTermsEnum(FieldReader fr) throws IOException {\n    this.fr = fr;\n\n    //if (DEBUG) System.out.println(\"BTTR.init seg=\" + segment);\n    stack = new SegmentTermsEnumFrame[0];\n        \n    // Used to hold seek by TermState, or cached seek\n    staticFrame = new SegmentTermsEnumFrame(this, -1);\n\n    if (fr.index == null) {\n      fstReader = null;\n    } else {\n      fstReader = fr.index.getBytesReader();\n    }\n\n    // Init w/ root block; don't use index since it may\n    // not (and need not) have been loaded\n    for(int arcIdx=0;arcIdx<arcs.length;arcIdx++) {\n      arcs[arcIdx] = new FST.Arc<>();\n    }\n\n    currentFrame = staticFrame;\n    final FST.Arc<BytesRef> arc;\n    if (fr.index != null) {\n      arc = fr.index.getFirstArc(arcs[0]);\n      // Empty string prefix must have an output in the index!\n      assert arc.isFinal();\n    } else {\n      arc = null;\n    }\n    currentFrame = staticFrame;\n    //currentFrame = pushFrame(arc, rootCode, 0);\n    //currentFrame.loadBlock();\n    validIndexPrefix = 0;\n    // if (DEBUG) {\n    //   System.out.println(\"init frame state \" + currentFrame.ord);\n    //   printSeekState();\n    // }\n\n    //System.out.println();\n    // computeBlockStats().print(System.out);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e19aeadf1fb6c63b76ee4828b087b1ff7256b228","date":1400363857,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/blocktree/SegmentTermsEnum#SegmentTermsEnum(FieldReader).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/blocktree/SegmentTermsEnum#SegmentTermsEnum(FieldReader).mjava","sourceNew":"  public SegmentTermsEnum(FieldReader fr) throws IOException {\n    this.fr = fr;\n\n    //if (DEBUG) System.out.println(\"BTTR.init seg=\" + segment);\n    stack = new SegmentTermsEnumFrame[0];\n        \n    // Used to hold seek by TermState, or cached seek\n    staticFrame = new SegmentTermsEnumFrame(this, -1);\n\n    if (fr.index == null) {\n      fstReader = null;\n    } else {\n      fstReader = fr.index.getBytesReader();\n    }\n\n    // Init w/ root block; don't use index since it may\n    // not (and need not) have been loaded\n    for(int arcIdx=0;arcIdx<arcs.length;arcIdx++) {\n      arcs[arcIdx] = new FST.Arc<>();\n    }\n\n    currentFrame = staticFrame;\n    final FST.Arc<BytesRef> arc;\n    if (fr.index != null) {\n      arc = fr.index.getFirstArc(arcs[0]);\n      // Empty string prefix must have an output in the index!\n      assert arc.isFinal();\n    } else {\n      arc = null;\n    }\n    currentFrame = staticFrame;\n    //currentFrame = pushFrame(arc, rootCode, 0);\n    //currentFrame.loadBlock();\n    validIndexPrefix = 0;\n    // if (DEBUG) {\n    //   System.out.println(\"init frame state \" + currentFrame.ord);\n    //   printSeekState();\n    // }\n\n    //System.out.println();\n    // computeBlockStats().print(System.out);\n  }\n\n","sourceOld":"  public SegmentTermsEnum(FieldReader fr) throws IOException {\n    this.fr = fr;\n    System.out.println(\"STE: init\");\n\n    //if (DEBUG) System.out.println(\"BTTR.init seg=\" + segment);\n    stack = new SegmentTermsEnumFrame[0];\n        \n    // Used to hold seek by TermState, or cached seek\n    staticFrame = new SegmentTermsEnumFrame(this, -1);\n\n    if (fr.index == null) {\n      fstReader = null;\n    } else {\n      fstReader = fr.index.getBytesReader();\n    }\n\n    // Init w/ root block; don't use index since it may\n    // not (and need not) have been loaded\n    for(int arcIdx=0;arcIdx<arcs.length;arcIdx++) {\n      arcs[arcIdx] = new FST.Arc<>();\n    }\n\n    currentFrame = staticFrame;\n    final FST.Arc<BytesRef> arc;\n    if (fr.index != null) {\n      arc = fr.index.getFirstArc(arcs[0]);\n      // Empty string prefix must have an output in the index!\n      assert arc.isFinal();\n    } else {\n      arc = null;\n    }\n    currentFrame = staticFrame;\n    //currentFrame = pushFrame(arc, rootCode, 0);\n    //currentFrame.loadBlock();\n    validIndexPrefix = 0;\n    // if (DEBUG) {\n    //   System.out.println(\"init frame state \" + currentFrame.ord);\n    //   printSeekState();\n    // }\n\n    //System.out.println();\n    // computeBlockStats().print(System.out);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3251bdaf728baf81f779183e464984bc769ed9c7","date":1400494940,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/blocktree/SegmentTermsEnum#SegmentTermsEnum(FieldReader).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/blocktree/SegmentTermsEnum#SegmentTermsEnum(FieldReader).mjava","sourceNew":"  public SegmentTermsEnum(FieldReader fr) throws IOException {\n    this.fr = fr;\n\n    if (DEBUG) {\n      System.out.println(\"BTTR.init seg=\" + fr.parent.segment);\n    }\n    stack = new SegmentTermsEnumFrame[0];\n        \n    // Used to hold seek by TermState, or cached seek\n    staticFrame = new SegmentTermsEnumFrame(this, -1);\n\n    if (fr.index == null) {\n      fstReader = null;\n    } else {\n      fstReader = fr.index.getBytesReader();\n    }\n\n    // Init w/ root block; don't use index since it may\n    // not (and need not) have been loaded\n    for(int arcIdx=0;arcIdx<arcs.length;arcIdx++) {\n      arcs[arcIdx] = new FST.Arc<>();\n    }\n\n    currentFrame = staticFrame;\n    final FST.Arc<BytesRef> arc;\n    if (fr.index != null) {\n      arc = fr.index.getFirstArc(arcs[0]);\n      // Empty string prefix must have an output in the index!\n      assert arc.isFinal();\n    } else {\n      arc = null;\n    }\n    //currentFrame = pushFrame(arc, rootCode, 0);\n    //currentFrame.loadBlock();\n    validIndexPrefix = 0;\n    // if (DEBUG) {\n    //   System.out.println(\"init frame state \" + currentFrame.ord);\n    //   printSeekState();\n    // }\n\n    //System.out.println();\n    // computeBlockStats().print(System.out);\n  }\n\n","sourceOld":"  public SegmentTermsEnum(FieldReader fr) throws IOException {\n    this.fr = fr;\n\n    //if (DEBUG) System.out.println(\"BTTR.init seg=\" + segment);\n    stack = new SegmentTermsEnumFrame[0];\n        \n    // Used to hold seek by TermState, or cached seek\n    staticFrame = new SegmentTermsEnumFrame(this, -1);\n\n    if (fr.index == null) {\n      fstReader = null;\n    } else {\n      fstReader = fr.index.getBytesReader();\n    }\n\n    // Init w/ root block; don't use index since it may\n    // not (and need not) have been loaded\n    for(int arcIdx=0;arcIdx<arcs.length;arcIdx++) {\n      arcs[arcIdx] = new FST.Arc<>();\n    }\n\n    currentFrame = staticFrame;\n    final FST.Arc<BytesRef> arc;\n    if (fr.index != null) {\n      arc = fr.index.getFirstArc(arcs[0]);\n      // Empty string prefix must have an output in the index!\n      assert arc.isFinal();\n    } else {\n      arc = null;\n    }\n    currentFrame = staticFrame;\n    //currentFrame = pushFrame(arc, rootCode, 0);\n    //currentFrame.loadBlock();\n    validIndexPrefix = 0;\n    // if (DEBUG) {\n    //   System.out.println(\"init frame state \" + currentFrame.ord);\n    //   printSeekState();\n    // }\n\n    //System.out.println();\n    // computeBlockStats().print(System.out);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4ae62bdfdfc2a17d4df98e6004938c8b0eed0a20","date":1400712483,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/blocktree/SegmentTermsEnum#SegmentTermsEnum(FieldReader).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/blocktree/SegmentTermsEnum#SegmentTermsEnum(FieldReader).mjava","sourceNew":"  public SegmentTermsEnum(FieldReader fr) throws IOException {\n    this.fr = fr;\n\n    // if (DEBUG) {\n    //   System.out.println(\"BTTR.init seg=\" + fr.parent.segment);\n    // }\n    stack = new SegmentTermsEnumFrame[0];\n        \n    // Used to hold seek by TermState, or cached seek\n    staticFrame = new SegmentTermsEnumFrame(this, -1);\n\n    if (fr.index == null) {\n      fstReader = null;\n    } else {\n      fstReader = fr.index.getBytesReader();\n    }\n\n    // Init w/ root block; don't use index since it may\n    // not (and need not) have been loaded\n    for(int arcIdx=0;arcIdx<arcs.length;arcIdx++) {\n      arcs[arcIdx] = new FST.Arc<>();\n    }\n\n    currentFrame = staticFrame;\n    final FST.Arc<BytesRef> arc;\n    if (fr.index != null) {\n      arc = fr.index.getFirstArc(arcs[0]);\n      // Empty string prefix must have an output in the index!\n      assert arc.isFinal();\n    } else {\n      arc = null;\n    }\n    //currentFrame = pushFrame(arc, rootCode, 0);\n    //currentFrame.loadBlock();\n    validIndexPrefix = 0;\n    // if (DEBUG) {\n    //   System.out.println(\"init frame state \" + currentFrame.ord);\n    //   printSeekState();\n    // }\n\n    //System.out.println();\n    // computeBlockStats().print(System.out);\n  }\n\n","sourceOld":"  public SegmentTermsEnum(FieldReader fr) throws IOException {\n    this.fr = fr;\n\n    if (DEBUG) {\n      System.out.println(\"BTTR.init seg=\" + fr.parent.segment);\n    }\n    stack = new SegmentTermsEnumFrame[0];\n        \n    // Used to hold seek by TermState, or cached seek\n    staticFrame = new SegmentTermsEnumFrame(this, -1);\n\n    if (fr.index == null) {\n      fstReader = null;\n    } else {\n      fstReader = fr.index.getBytesReader();\n    }\n\n    // Init w/ root block; don't use index since it may\n    // not (and need not) have been loaded\n    for(int arcIdx=0;arcIdx<arcs.length;arcIdx++) {\n      arcs[arcIdx] = new FST.Arc<>();\n    }\n\n    currentFrame = staticFrame;\n    final FST.Arc<BytesRef> arc;\n    if (fr.index != null) {\n      arc = fr.index.getFirstArc(arcs[0]);\n      // Empty string prefix must have an output in the index!\n      assert arc.isFinal();\n    } else {\n      arc = null;\n    }\n    //currentFrame = pushFrame(arc, rootCode, 0);\n    //currentFrame.loadBlock();\n    validIndexPrefix = 0;\n    // if (DEBUG) {\n    //   System.out.println(\"init frame state \" + currentFrame.ord);\n    //   printSeekState();\n    // }\n\n    //System.out.println();\n    // computeBlockStats().print(System.out);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4d637064d608752565d4f9f41b2497dfdfdde50e","date":1400798123,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/blocktree/SegmentTermsEnum#SegmentTermsEnum(FieldReader).mjava","pathOld":"/dev/null","sourceNew":"  public SegmentTermsEnum(FieldReader fr) throws IOException {\n    this.fr = fr;\n\n    // if (DEBUG) {\n    //   System.out.println(\"BTTR.init seg=\" + fr.parent.segment);\n    // }\n    stack = new SegmentTermsEnumFrame[0];\n        \n    // Used to hold seek by TermState, or cached seek\n    staticFrame = new SegmentTermsEnumFrame(this, -1);\n\n    if (fr.index == null) {\n      fstReader = null;\n    } else {\n      fstReader = fr.index.getBytesReader();\n    }\n\n    // Init w/ root block; don't use index since it may\n    // not (and need not) have been loaded\n    for(int arcIdx=0;arcIdx<arcs.length;arcIdx++) {\n      arcs[arcIdx] = new FST.Arc<>();\n    }\n\n    currentFrame = staticFrame;\n    final FST.Arc<BytesRef> arc;\n    if (fr.index != null) {\n      arc = fr.index.getFirstArc(arcs[0]);\n      // Empty string prefix must have an output in the index!\n      assert arc.isFinal();\n    } else {\n      arc = null;\n    }\n    //currentFrame = pushFrame(arc, rootCode, 0);\n    //currentFrame.loadBlock();\n    validIndexPrefix = 0;\n    // if (DEBUG) {\n    //   System.out.println(\"init frame state \" + currentFrame.ord);\n    //   printSeekState();\n    // }\n\n    //System.out.println();\n    // computeBlockStats().print(System.out);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f56ba5d8fecfb0b8bfdca8c0b630372d998131a9":["3f4ef2de7b0fd59ef22e20888773ad260c90bfb4"],"4d637064d608752565d4f9f41b2497dfdfdde50e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","4ae62bdfdfc2a17d4df98e6004938c8b0eed0a20"],"4ae62bdfdfc2a17d4df98e6004938c8b0eed0a20":["3251bdaf728baf81f779183e464984bc769ed9c7"],"3f4ef2de7b0fd59ef22e20888773ad260c90bfb4":["e50f0da93c6dcee20d8792637b1786e2c34975e9"],"e50f0da93c6dcee20d8792637b1786e2c34975e9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e19aeadf1fb6c63b76ee4828b087b1ff7256b228":["f56ba5d8fecfb0b8bfdca8c0b630372d998131a9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4d637064d608752565d4f9f41b2497dfdfdde50e"],"3251bdaf728baf81f779183e464984bc769ed9c7":["e19aeadf1fb6c63b76ee4828b087b1ff7256b228"]},"commit2Childs":{"f56ba5d8fecfb0b8bfdca8c0b630372d998131a9":["e19aeadf1fb6c63b76ee4828b087b1ff7256b228"],"4d637064d608752565d4f9f41b2497dfdfdde50e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4ae62bdfdfc2a17d4df98e6004938c8b0eed0a20":["4d637064d608752565d4f9f41b2497dfdfdde50e"],"3f4ef2de7b0fd59ef22e20888773ad260c90bfb4":["f56ba5d8fecfb0b8bfdca8c0b630372d998131a9"],"e50f0da93c6dcee20d8792637b1786e2c34975e9":["3f4ef2de7b0fd59ef22e20888773ad260c90bfb4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4d637064d608752565d4f9f41b2497dfdfdde50e","e50f0da93c6dcee20d8792637b1786e2c34975e9"],"e19aeadf1fb6c63b76ee4828b087b1ff7256b228":["3251bdaf728baf81f779183e464984bc769ed9c7"],"3251bdaf728baf81f779183e464984bc769ed9c7":["4ae62bdfdfc2a17d4df98e6004938c8b0eed0a20"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}