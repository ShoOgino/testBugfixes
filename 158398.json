{"path":"lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinSortField#getStringComparator(int).mjava","commits":[{"id":"db447c88c3c3367999a54f10d9a207f3e63db201","date":1435740861,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinSortField#getStringComparator(int).mjava","pathOld":"/dev/null","sourceNew":"  private FieldComparator<?> getStringComparator(int numHits) {\n    return new FieldComparator.TermOrdValComparator(numHits, getField(), missingValue == STRING_LAST) {\n\n      @Override\n      protected SortedDocValues getSortedDocValues(LeafReaderContext context, String field) throws IOException {\n        SortedSetDocValues sortedSet = DocValues.getSortedSet(context.reader(), field);\n        final BlockJoinSelector.Type type = order\n            ? BlockJoinSelector.Type.MAX\n            : BlockJoinSelector.Type.MIN;\n        final BitDocIdSet parents = parentFilter.getDocIdSet(context);\n        final BitDocIdSet children = childFilter.getDocIdSet(context);\n        if (children == null) {\n          return DocValues.emptySorted();\n        }\n        return BlockJoinSelector.wrap(sortedSet, type, parents.bits(), children.bits());\n      }\n\n    };\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4b3915945926c0bf7def01b0c504977709d3aed3","date":1436197708,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinSortField#getStringComparator(int).mjava","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinSortField#getStringComparator(int).mjava","sourceNew":"  private FieldComparator<?> getStringComparator(int numHits) {\n    return new FieldComparator.TermOrdValComparator(numHits, getField(), missingValue == STRING_LAST) {\n\n      @Override\n      protected SortedDocValues getSortedDocValues(LeafReaderContext context, String field) throws IOException {\n        SortedSetDocValues sortedSet = DocValues.getSortedSet(context.reader(), field);\n        final BlockJoinSelector.Type type = order\n            ? BlockJoinSelector.Type.MAX\n            : BlockJoinSelector.Type.MIN;\n        final BitSet parents = parentFilter.getBitSet(context);\n        final BitSet children = childFilter.getBitSet(context);\n        if (children == null) {\n          return DocValues.emptySorted();\n        }\n        return BlockJoinSelector.wrap(sortedSet, type, parents, children);\n      }\n\n    };\n  }\n\n","sourceOld":"  private FieldComparator<?> getStringComparator(int numHits) {\n    return new FieldComparator.TermOrdValComparator(numHits, getField(), missingValue == STRING_LAST) {\n\n      @Override\n      protected SortedDocValues getSortedDocValues(LeafReaderContext context, String field) throws IOException {\n        SortedSetDocValues sortedSet = DocValues.getSortedSet(context.reader(), field);\n        final BlockJoinSelector.Type type = order\n            ? BlockJoinSelector.Type.MAX\n            : BlockJoinSelector.Type.MIN;\n        final BitDocIdSet parents = parentFilter.getDocIdSet(context);\n        final BitDocIdSet children = childFilter.getDocIdSet(context);\n        if (children == null) {\n          return DocValues.emptySorted();\n        }\n        return BlockJoinSelector.wrap(sortedSet, type, parents.bits(), children.bits());\n      }\n\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9","date":1574619880,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinSortField#getStringComparator(int).mjava","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinSortField#getStringComparator(int).mjava","sourceNew":"  private FieldComparator<?> getStringComparator(int numHits) {\n    return new FieldComparator.TermOrdValComparator(numHits, getField(), missingValue == STRING_LAST) {\n\n      @SuppressWarnings(\"deprecation\")\n      @Override\n      protected SortedDocValues getSortedDocValues(LeafReaderContext context, String field) throws IOException {\n        SortedSetDocValues sortedSet = DocValues.getSortedSet(context.reader(), field);\n        final BlockJoinSelector.Type type = order\n            ? BlockJoinSelector.Type.MAX\n            : BlockJoinSelector.Type.MIN;\n        final BitSet parents = parentFilter.getBitSet(context);\n        final BitSet children = childFilter.getBitSet(context);\n        if (children == null) {\n          return DocValues.emptySorted();\n        }\n        return BlockJoinSelector.wrap(sortedSet, type, parents, children);\n      }\n\n    };\n  }\n\n","sourceOld":"  private FieldComparator<?> getStringComparator(int numHits) {\n    return new FieldComparator.TermOrdValComparator(numHits, getField(), missingValue == STRING_LAST) {\n\n      @Override\n      protected SortedDocValues getSortedDocValues(LeafReaderContext context, String field) throws IOException {\n        SortedSetDocValues sortedSet = DocValues.getSortedSet(context.reader(), field);\n        final BlockJoinSelector.Type type = order\n            ? BlockJoinSelector.Type.MAX\n            : BlockJoinSelector.Type.MIN;\n        final BitSet parents = parentFilter.getBitSet(context);\n        final BitSet children = childFilter.getBitSet(context);\n        if (children == null) {\n          return DocValues.emptySorted();\n        }\n        return BlockJoinSelector.wrap(sortedSet, type, parents, children);\n      }\n\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb9c3baacabd473e8ecd6c4948aabacead49b88e","date":1574700980,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinSortField#getStringComparator(int).mjava","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinSortField#getStringComparator(int).mjava","sourceNew":"  private FieldComparator<?> getStringComparator(int numHits) {\n    return new FieldComparator.TermOrdValComparator(numHits, getField(), missingValue == STRING_LAST) {\n\n      @Override\n      protected SortedDocValues getSortedDocValues(LeafReaderContext context, String field) throws IOException {\n        SortedSetDocValues sortedSet = DocValues.getSortedSet(context.reader(), field);\n        final BlockJoinSelector.Type type = order\n            ? BlockJoinSelector.Type.MAX\n            : BlockJoinSelector.Type.MIN;\n        final BitSet parents = parentFilter.getBitSet(context);\n        final BitSet children = childFilter.getBitSet(context);\n        if (children == null) {\n          return DocValues.emptySorted();\n        }\n        return BlockJoinSelector.wrap(sortedSet, type, parents, children);\n      }\n\n    };\n  }\n\n","sourceOld":"  private FieldComparator<?> getStringComparator(int numHits) {\n    return new FieldComparator.TermOrdValComparator(numHits, getField(), missingValue == STRING_LAST) {\n\n      @SuppressWarnings(\"deprecation\")\n      @Override\n      protected SortedDocValues getSortedDocValues(LeafReaderContext context, String field) throws IOException {\n        SortedSetDocValues sortedSet = DocValues.getSortedSet(context.reader(), field);\n        final BlockJoinSelector.Type type = order\n            ? BlockJoinSelector.Type.MAX\n            : BlockJoinSelector.Type.MIN;\n        final BitSet parents = parentFilter.getBitSet(context);\n        final BitSet children = childFilter.getBitSet(context);\n        if (children == null) {\n          return DocValues.emptySorted();\n        }\n        return BlockJoinSelector.wrap(sortedSet, type, parents, children);\n      }\n\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f95c0e33e58652b2a4d8560c8297dbe86ff5b1f2","date":1591961131,"type":3,"author":"Michael Sokolov","isMerge":false,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinSortField#getStringComparator(int).mjava","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/ToParentBlockJoinSortField#getStringComparator(int).mjava","sourceNew":"  private FieldComparator<?> getStringComparator(int numHits) {\n    return new FieldComparator.TermOrdValComparator(numHits, getField(), missingValue == STRING_LAST) {\n\n      @Override\n      protected SortedDocValues getSortedDocValues(LeafReaderContext context, String field) throws IOException {\n        SortedSetDocValues sortedSet = DocValues.getSortedSet(context.reader(), field);\n        final BlockJoinSelector.Type type = order\n            ? BlockJoinSelector.Type.MAX\n            : BlockJoinSelector.Type.MIN;\n        final BitSet parents = parentFilter.getBitSet(context);\n        final BitSet children = childFilter.getBitSet(context);\n        if (children == null) {\n          return DocValues.emptySorted();\n        }\n        return BlockJoinSelector.wrap(sortedSet, type, parents, toIter(children));\n      }\n\n    };\n  }\n\n","sourceOld":"  private FieldComparator<?> getStringComparator(int numHits) {\n    return new FieldComparator.TermOrdValComparator(numHits, getField(), missingValue == STRING_LAST) {\n\n      @Override\n      protected SortedDocValues getSortedDocValues(LeafReaderContext context, String field) throws IOException {\n        SortedSetDocValues sortedSet = DocValues.getSortedSet(context.reader(), field);\n        final BlockJoinSelector.Type type = order\n            ? BlockJoinSelector.Type.MAX\n            : BlockJoinSelector.Type.MIN;\n        final BitSet parents = parentFilter.getBitSet(context);\n        final BitSet children = childFilter.getBitSet(context);\n        if (children == null) {\n          return DocValues.emptySorted();\n        }\n        return BlockJoinSelector.wrap(sortedSet, type, parents, children);\n      }\n\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"db447c88c3c3367999a54f10d9a207f3e63db201":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9":["4b3915945926c0bf7def01b0c504977709d3aed3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bb9c3baacabd473e8ecd6c4948aabacead49b88e":["a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9"],"f95c0e33e58652b2a4d8560c8297dbe86ff5b1f2":["bb9c3baacabd473e8ecd6c4948aabacead49b88e"],"4b3915945926c0bf7def01b0c504977709d3aed3":["db447c88c3c3367999a54f10d9a207f3e63db201"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f95c0e33e58652b2a4d8560c8297dbe86ff5b1f2"]},"commit2Childs":{"db447c88c3c3367999a54f10d9a207f3e63db201":["4b3915945926c0bf7def01b0c504977709d3aed3"],"a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9":["bb9c3baacabd473e8ecd6c4948aabacead49b88e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["db447c88c3c3367999a54f10d9a207f3e63db201"],"bb9c3baacabd473e8ecd6c4948aabacead49b88e":["f95c0e33e58652b2a4d8560c8297dbe86ff5b1f2"],"f95c0e33e58652b2a4d8560c8297dbe86ff5b1f2":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4b3915945926c0bf7def01b0c504977709d3aed3":["a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}