{"path":"lucene/core/src/java/org/apache/lucene/search/BooleanQuery#BooleanQuery(boolean,int,BooleanClause[]).mjava","commits":[{"id":"3f68d01cf19df971dcdcb05e30247f4ad7ec9747","date":1434611645,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/BooleanQuery#BooleanQuery(boolean,int,BooleanClause[]).mjava","pathOld":"/dev/null","sourceNew":"  private BooleanQuery(boolean disableCoord, int minimumNumberShouldMatch,\n      BooleanClause[] clauses) {\n    this.disableCoord = disableCoord;\n    this.minimumNumberShouldMatch = minimumNumberShouldMatch;\n    this.clauses = Collections.unmodifiableList(Arrays.asList(clauses));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4d04f3d96e2fd0e82dee63ff3ac603e8cb9e9969","date":1444679002,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/BooleanQuery#BooleanQuery(boolean,int,BooleanClause[]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/BooleanQuery#BooleanQuery(boolean,int,BooleanClause[]).mjava","sourceNew":"  private BooleanQuery(boolean disableCoord, int minimumNumberShouldMatch,\n      BooleanClause[] clauses) {\n    this.disableCoord = disableCoord;\n    this.minimumNumberShouldMatch = minimumNumberShouldMatch;\n    this.clauses = Collections.unmodifiableList(Arrays.asList(clauses));\n    clauseSets = new EnumMap<>(Occur.class);\n    // duplicates matter for SHOULD and MUST\n    clauseSets.put(Occur.SHOULD, new Multiset<>());\n    clauseSets.put(Occur.MUST, new Multiset<>());\n    // but not for FILTER and MUST_NOT\n    clauseSets.put(Occur.FILTER, new HashSet<>());\n    clauseSets.put(Occur.MUST_NOT, new HashSet<>());\n    for (BooleanClause clause : clauses) {\n      clauseSets.get(clause.getOccur()).add(clause.getQuery());\n    }\n  }\n\n","sourceOld":"  private BooleanQuery(boolean disableCoord, int minimumNumberShouldMatch,\n      BooleanClause[] clauses) {\n    this.disableCoord = disableCoord;\n    this.minimumNumberShouldMatch = minimumNumberShouldMatch;\n    this.clauses = Collections.unmodifiableList(Arrays.asList(clauses));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c8a0e442f7b61f811680273b25da95994a724466","date":1467878549,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/BooleanQuery#BooleanQuery(int,BooleanClause[]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/BooleanQuery#BooleanQuery(boolean,int,BooleanClause[]).mjava","sourceNew":"  private BooleanQuery(int minimumNumberShouldMatch,\n      BooleanClause[] clauses) {\n    this.minimumNumberShouldMatch = minimumNumberShouldMatch;\n    this.clauses = Collections.unmodifiableList(Arrays.asList(clauses));\n    clauseSets = new EnumMap<>(Occur.class);\n    // duplicates matter for SHOULD and MUST\n    clauseSets.put(Occur.SHOULD, new Multiset<>());\n    clauseSets.put(Occur.MUST, new Multiset<>());\n    // but not for FILTER and MUST_NOT\n    clauseSets.put(Occur.FILTER, new HashSet<>());\n    clauseSets.put(Occur.MUST_NOT, new HashSet<>());\n    for (BooleanClause clause : clauses) {\n      clauseSets.get(clause.getOccur()).add(clause.getQuery());\n    }\n  }\n\n","sourceOld":"  private BooleanQuery(boolean disableCoord, int minimumNumberShouldMatch,\n      BooleanClause[] clauses) {\n    this.disableCoord = disableCoord;\n    this.minimumNumberShouldMatch = minimumNumberShouldMatch;\n    this.clauses = Collections.unmodifiableList(Arrays.asList(clauses));\n    clauseSets = new EnumMap<>(Occur.class);\n    // duplicates matter for SHOULD and MUST\n    clauseSets.put(Occur.SHOULD, new Multiset<>());\n    clauseSets.put(Occur.MUST, new Multiset<>());\n    // but not for FILTER and MUST_NOT\n    clauseSets.put(Occur.FILTER, new HashSet<>());\n    clauseSets.put(Occur.MUST_NOT, new HashSet<>());\n    for (BooleanClause clause : clauses) {\n      clauseSets.get(clause.getOccur()).add(clause.getQuery());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":4,"author":"Kevin Risden","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/search/BooleanQuery#BooleanQuery(boolean,int,BooleanClause[]).mjava","sourceNew":null,"sourceOld":"  private BooleanQuery(boolean disableCoord, int minimumNumberShouldMatch,\n      BooleanClause[] clauses) {\n    this.disableCoord = disableCoord;\n    this.minimumNumberShouldMatch = minimumNumberShouldMatch;\n    this.clauses = Collections.unmodifiableList(Arrays.asList(clauses));\n    clauseSets = new EnumMap<>(Occur.class);\n    // duplicates matter for SHOULD and MUST\n    clauseSets.put(Occur.SHOULD, new Multiset<>());\n    clauseSets.put(Occur.MUST, new Multiset<>());\n    // but not for FILTER and MUST_NOT\n    clauseSets.put(Occur.FILTER, new HashSet<>());\n    clauseSets.put(Occur.MUST_NOT, new HashSet<>());\n    for (BooleanClause clause : clauses) {\n      clauseSets.get(clause.getOccur()).add(clause.getQuery());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3f68d01cf19df971dcdcb05e30247f4ad7ec9747":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c8a0e442f7b61f811680273b25da95994a724466":["4d04f3d96e2fd0e82dee63ff3ac603e8cb9e9969"],"4d04f3d96e2fd0e82dee63ff3ac603e8cb9e9969":["3f68d01cf19df971dcdcb05e30247f4ad7ec9747"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["4d04f3d96e2fd0e82dee63ff3ac603e8cb9e9969","c8a0e442f7b61f811680273b25da95994a724466"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c8a0e442f7b61f811680273b25da95994a724466"]},"commit2Childs":{"3f68d01cf19df971dcdcb05e30247f4ad7ec9747":["4d04f3d96e2fd0e82dee63ff3ac603e8cb9e9969"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3f68d01cf19df971dcdcb05e30247f4ad7ec9747"],"c8a0e442f7b61f811680273b25da95994a724466":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4d04f3d96e2fd0e82dee63ff3ac603e8cb9e9969":["c8a0e442f7b61f811680273b25da95994a724466","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}