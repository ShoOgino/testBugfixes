{"path":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardPostingsReaderImpl#StandardPostingsReaderImpl(Directory,SegmentInfo,int).mjava","commits":[{"id":"955c32f886db6f6356c9fcdea6b1f1cb4effda24","date":1270581567,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardPostingsReaderImpl#StandardPostingsReaderImpl(Directory,SegmentInfo,int).mjava","pathOld":"/dev/null","sourceNew":"  public StandardPostingsReaderImpl(Directory dir, SegmentInfo segmentInfo, int readBufferSize) throws IOException {\n    freqIn = dir.openInput(IndexFileNames.segmentFileName(segmentInfo.name, StandardCodec.FREQ_EXTENSION),\n                           readBufferSize);\n    if (segmentInfo.getHasProx()) {\n      boolean success = false;\n      try {\n        proxIn = dir.openInput(IndexFileNames.segmentFileName(segmentInfo.name, StandardCodec.PROX_EXTENSION),\n                               readBufferSize);\n        success = true;\n      } finally {\n        if (!success) {\n          freqIn.close();\n        }\n      }\n    } else {\n      proxIn = null;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fb10b6bcde550b87d8f10e5f010bd8f3021023b6","date":1274974592,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardPostingsReaderImpl#StandardPostingsReaderImpl(Directory,SegmentInfo,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardPostingsReaderImpl#StandardPostingsReaderImpl(Directory,SegmentInfo,int).mjava","sourceNew":"  public StandardPostingsReaderImpl(Directory dir, SegmentInfo segmentInfo, int readBufferSize) throws IOException {\n    freqIn = dir.openInput(IndexFileNames.segmentFileName(segmentInfo.name, \"\", StandardCodec.FREQ_EXTENSION),\n                           readBufferSize);\n    if (segmentInfo.getHasProx()) {\n      boolean success = false;\n      try {\n        proxIn = dir.openInput(IndexFileNames.segmentFileName(segmentInfo.name, \"\", StandardCodec.PROX_EXTENSION),\n                               readBufferSize);\n        success = true;\n      } finally {\n        if (!success) {\n          freqIn.close();\n        }\n      }\n    } else {\n      proxIn = null;\n    }\n  }\n\n","sourceOld":"  public StandardPostingsReaderImpl(Directory dir, SegmentInfo segmentInfo, int readBufferSize) throws IOException {\n    freqIn = dir.openInput(IndexFileNames.segmentFileName(segmentInfo.name, StandardCodec.FREQ_EXTENSION),\n                           readBufferSize);\n    if (segmentInfo.getHasProx()) {\n      boolean success = false;\n      try {\n        proxIn = dir.openInput(IndexFileNames.segmentFileName(segmentInfo.name, StandardCodec.PROX_EXTENSION),\n                               readBufferSize);\n        success = true;\n      } finally {\n        if (!success) {\n          freqIn.close();\n        }\n      }\n    } else {\n      proxIn = null;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"99cf56f3a650b908f7017a72f9d23940418f8a52","date":1284891529,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardPostingsReader#StandardPostingsReader(Directory,SegmentInfo,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardPostingsReaderImpl#StandardPostingsReaderImpl(Directory,SegmentInfo,int).mjava","sourceNew":"  public StandardPostingsReader(Directory dir, SegmentInfo segmentInfo, int readBufferSize) throws IOException {\n    freqIn = dir.openInput(IndexFileNames.segmentFileName(segmentInfo.name, \"\", StandardCodec.FREQ_EXTENSION),\n                           readBufferSize);\n    if (segmentInfo.getHasProx()) {\n      boolean success = false;\n      try {\n        proxIn = dir.openInput(IndexFileNames.segmentFileName(segmentInfo.name, \"\", StandardCodec.PROX_EXTENSION),\n                               readBufferSize);\n        success = true;\n      } finally {\n        if (!success) {\n          freqIn.close();\n        }\n      }\n    } else {\n      proxIn = null;\n    }\n  }\n\n","sourceOld":"  public StandardPostingsReaderImpl(Directory dir, SegmentInfo segmentInfo, int readBufferSize) throws IOException {\n    freqIn = dir.openInput(IndexFileNames.segmentFileName(segmentInfo.name, \"\", StandardCodec.FREQ_EXTENSION),\n                           readBufferSize);\n    if (segmentInfo.getHasProx()) {\n      boolean success = false;\n      try {\n        proxIn = dir.openInput(IndexFileNames.segmentFileName(segmentInfo.name, \"\", StandardCodec.PROX_EXTENSION),\n                               readBufferSize);\n        success = true;\n      } finally {\n        if (!success) {\n          freqIn.close();\n        }\n      }\n    } else {\n      proxIn = null;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":4,"author":"Michael Busch","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardPostingsReaderImpl#StandardPostingsReaderImpl(Directory,SegmentInfo,int).mjava","sourceNew":null,"sourceOld":"  public StandardPostingsReaderImpl(Directory dir, SegmentInfo segmentInfo, int readBufferSize) throws IOException {\n    freqIn = dir.openInput(IndexFileNames.segmentFileName(segmentInfo.name, \"\", StandardCodec.FREQ_EXTENSION),\n                           readBufferSize);\n    if (segmentInfo.getHasProx()) {\n      boolean success = false;\n      try {\n        proxIn = dir.openInput(IndexFileNames.segmentFileName(segmentInfo.name, \"\", StandardCodec.PROX_EXTENSION),\n                               readBufferSize);\n        success = true;\n      } finally {\n        if (!success) {\n          freqIn.close();\n        }\n      }\n    } else {\n      proxIn = null;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["fb10b6bcde550b87d8f10e5f010bd8f3021023b6","99cf56f3a650b908f7017a72f9d23940418f8a52"],"99cf56f3a650b908f7017a72f9d23940418f8a52":["fb10b6bcde550b87d8f10e5f010bd8f3021023b6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["99cf56f3a650b908f7017a72f9d23940418f8a52"],"fb10b6bcde550b87d8f10e5f010bd8f3021023b6":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["fb10b6bcde550b87d8f10e5f010bd8f3021023b6"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"99cf56f3a650b908f7017a72f9d23940418f8a52":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"fb10b6bcde550b87d8f10e5f010bd8f3021023b6":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","99cf56f3a650b908f7017a72f9d23940418f8a52"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}