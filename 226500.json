{"path":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#initDocValuesProducer().mjava","commits":[{"id":"256a0e54e76f18e115a43e7fe793b54d4e9a3005","date":1412426514,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#initDocValuesProducer().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#initDocValuesProducer(Codec).mjava","sourceNew":"  /**\n   * init most recent DocValues for the current commit\n   */\n  private DocValuesProducer initDocValuesProducer() throws IOException {\n    final Directory dir = core.cfsReader != null ? core.cfsReader : si.info.dir;\n    final DocValuesFormat dvFormat = si.info.getCodec().docValuesFormat();\n\n    if (!fieldInfos.hasDocValues()) {\n      return null;\n    } else if (si.hasFieldUpdates()) {\n      return new SegmentDocValuesProducer(si, dir, fieldInfos, segDocValues, dvFormat);\n    } else {\n      // simple case, no DocValues updates\n      return segDocValues.getDocValuesProducer(-1L, si, IOContext.READ, dir, dvFormat, fieldInfos);\n    }\n  }\n\n","sourceOld":"  // initialize the per-field DocValuesProducer\n  private DocValuesProducer initDocValuesProducer(Codec codec) throws IOException {\n    final Directory dir = core.cfsReader != null ? core.cfsReader : si.info.dir;\n    final DocValuesFormat dvFormat = codec.docValuesFormat();\n\n    if (!si.hasFieldUpdates()) {\n      // simple case, no DocValues updates\n      return segDocValues.getDocValuesProducer(-1L, si, IOContext.READ, dir, dvFormat, fieldInfos);\n    } else {\n      return new SegmentDocValuesProducer(si, dir, fieldInfos, segDocValues, dvFormat);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9bb9a29a5e71a90295f175df8919802993142c9a","date":1412517673,"type":1,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#initDocValuesProducer().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#initDocValuesProducer(Codec).mjava","sourceNew":"  /**\n   * init most recent DocValues for the current commit\n   */\n  private DocValuesProducer initDocValuesProducer() throws IOException {\n    final Directory dir = core.cfsReader != null ? core.cfsReader : si.info.dir;\n    final DocValuesFormat dvFormat = si.info.getCodec().docValuesFormat();\n\n    if (!fieldInfos.hasDocValues()) {\n      return null;\n    } else if (si.hasFieldUpdates()) {\n      return new SegmentDocValuesProducer(si, dir, fieldInfos, segDocValues, dvFormat);\n    } else {\n      // simple case, no DocValues updates\n      return segDocValues.getDocValuesProducer(-1L, si, IOContext.READ, dir, dvFormat, fieldInfos);\n    }\n  }\n\n","sourceOld":"  // initialize the per-field DocValuesProducer\n  private DocValuesProducer initDocValuesProducer(Codec codec) throws IOException {\n    final Directory dir = core.cfsReader != null ? core.cfsReader : si.info.dir;\n    final DocValuesFormat dvFormat = codec.docValuesFormat();\n\n    if (!si.hasFieldUpdates()) {\n      // simple case, no DocValues updates\n      return segDocValues.getDocValuesProducer(-1L, si, IOContext.READ, dir, dvFormat, fieldInfos);\n    } else {\n      return new SegmentDocValuesProducer(si, dir, fieldInfos, segDocValues, dvFormat);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"240c2c222c1b7eb253bd7e596c2d4731355836ef","date":1416366514,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#initDocValuesProducer().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#initDocValuesProducer().mjava","sourceNew":"  /**\n   * init most recent DocValues for the current commit\n   */\n  private DocValuesProducer initDocValuesProducer() throws IOException {\n    final Directory dir = core.cfsReader != null ? core.cfsReader : si.info.dir;\n\n    if (!fieldInfos.hasDocValues()) {\n      return null;\n    } else if (si.hasFieldUpdates()) {\n      return new SegmentDocValuesProducer(si, dir, core.coreFieldInfos, fieldInfos, segDocValues);\n    } else {\n      // simple case, no DocValues updates\n      return segDocValues.getDocValuesProducer(-1L, si, dir, fieldInfos);\n    }\n  }\n\n","sourceOld":"  /**\n   * init most recent DocValues for the current commit\n   */\n  private DocValuesProducer initDocValuesProducer() throws IOException {\n    final Directory dir = core.cfsReader != null ? core.cfsReader : si.info.dir;\n    final DocValuesFormat dvFormat = si.info.getCodec().docValuesFormat();\n\n    if (!fieldInfos.hasDocValues()) {\n      return null;\n    } else if (si.hasFieldUpdates()) {\n      return new SegmentDocValuesProducer(si, dir, fieldInfos, segDocValues, dvFormat);\n    } else {\n      // simple case, no DocValues updates\n      return segDocValues.getDocValuesProducer(-1L, si, IOContext.READ, dir, dvFormat, fieldInfos);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f4363cd33f6eff7fb4753574a441e2d18c1022a4","date":1498067235,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#initDocValuesProducer().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#initDocValuesProducer().mjava","sourceNew":"  /**\n   * init most recent DocValues for the current commit\n   */\n  private DocValuesProducer initDocValuesProducer() throws IOException {\n\n    if (fieldInfos.hasDocValues() == false) {\n      return null;\n    } else {\n      Directory dir;\n      if (core.cfsReader != null) {\n        dir = core.cfsReader;\n      } else {\n        dir = si.info.dir;\n      }\n      if (si.hasFieldUpdates()) {\n        return new SegmentDocValuesProducer(si, dir, core.coreFieldInfos, fieldInfos, segDocValues);\n      } else {\n        // simple case, no DocValues updates\n        return segDocValues.getDocValuesProducer(-1L, si, dir, fieldInfos);\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * init most recent DocValues for the current commit\n   */\n  private DocValuesProducer initDocValuesProducer() throws IOException {\n    final Directory dir = core.cfsReader != null ? core.cfsReader : si.info.dir;\n\n    if (!fieldInfos.hasDocValues()) {\n      return null;\n    } else if (si.hasFieldUpdates()) {\n      return new SegmentDocValuesProducer(si, dir, core.coreFieldInfos, fieldInfos, segDocValues);\n    } else {\n      // simple case, no DocValues updates\n      return segDocValues.getDocValuesProducer(-1L, si, dir, fieldInfos);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7dfa64bc2074fb87d0ca70095a644c1ead107e1","date":1498356339,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#initDocValuesProducer().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#initDocValuesProducer().mjava","sourceNew":"  /**\n   * init most recent DocValues for the current commit\n   */\n  private DocValuesProducer initDocValuesProducer() throws IOException {\n\n    if (fieldInfos.hasDocValues() == false) {\n      return null;\n    } else {\n      Directory dir;\n      if (core.cfsReader != null) {\n        dir = core.cfsReader;\n      } else {\n        dir = si.info.dir;\n      }\n      if (si.hasFieldUpdates()) {\n        return new SegmentDocValuesProducer(si, dir, core.coreFieldInfos, fieldInfos, segDocValues);\n      } else {\n        // simple case, no DocValues updates\n        return segDocValues.getDocValuesProducer(-1L, si, dir, fieldInfos);\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * init most recent DocValues for the current commit\n   */\n  private DocValuesProducer initDocValuesProducer() throws IOException {\n    final Directory dir = core.cfsReader != null ? core.cfsReader : si.info.dir;\n\n    if (!fieldInfos.hasDocValues()) {\n      return null;\n    } else if (si.hasFieldUpdates()) {\n      return new SegmentDocValuesProducer(si, dir, core.coreFieldInfos, fieldInfos, segDocValues);\n    } else {\n      // simple case, no DocValues updates\n      return segDocValues.getDocValuesProducer(-1L, si, dir, fieldInfos);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#initDocValuesProducer().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentReader#initDocValuesProducer().mjava","sourceNew":"  /**\n   * init most recent DocValues for the current commit\n   */\n  private DocValuesProducer initDocValuesProducer() throws IOException {\n\n    if (fieldInfos.hasDocValues() == false) {\n      return null;\n    } else {\n      Directory dir;\n      if (core.cfsReader != null) {\n        dir = core.cfsReader;\n      } else {\n        dir = si.info.dir;\n      }\n      if (si.hasFieldUpdates()) {\n        return new SegmentDocValuesProducer(si, dir, core.coreFieldInfos, fieldInfos, segDocValues);\n      } else {\n        // simple case, no DocValues updates\n        return segDocValues.getDocValuesProducer(-1L, si, dir, fieldInfos);\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * init most recent DocValues for the current commit\n   */\n  private DocValuesProducer initDocValuesProducer() throws IOException {\n    final Directory dir = core.cfsReader != null ? core.cfsReader : si.info.dir;\n\n    if (!fieldInfos.hasDocValues()) {\n      return null;\n    } else if (si.hasFieldUpdates()) {\n      return new SegmentDocValuesProducer(si, dir, core.coreFieldInfos, fieldInfos, segDocValues);\n    } else {\n      // simple case, no DocValues updates\n      return segDocValues.getDocValuesProducer(-1L, si, dir, fieldInfos);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"256a0e54e76f18e115a43e7fe793b54d4e9a3005":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"9bb9a29a5e71a90295f175df8919802993142c9a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","256a0e54e76f18e115a43e7fe793b54d4e9a3005"],"f4363cd33f6eff7fb4753574a441e2d18c1022a4":["240c2c222c1b7eb253bd7e596c2d4731355836ef"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"240c2c222c1b7eb253bd7e596c2d4731355836ef":["9bb9a29a5e71a90295f175df8919802993142c9a"],"b7dfa64bc2074fb87d0ca70095a644c1ead107e1":["240c2c222c1b7eb253bd7e596c2d4731355836ef","f4363cd33f6eff7fb4753574a441e2d18c1022a4"],"28288370235ed02234a64753cdbf0c6ec096304a":["240c2c222c1b7eb253bd7e596c2d4731355836ef","f4363cd33f6eff7fb4753574a441e2d18c1022a4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["28288370235ed02234a64753cdbf0c6ec096304a"]},"commit2Childs":{"256a0e54e76f18e115a43e7fe793b54d4e9a3005":["9bb9a29a5e71a90295f175df8919802993142c9a"],"9bb9a29a5e71a90295f175df8919802993142c9a":["240c2c222c1b7eb253bd7e596c2d4731355836ef"],"f4363cd33f6eff7fb4753574a441e2d18c1022a4":["b7dfa64bc2074fb87d0ca70095a644c1ead107e1","28288370235ed02234a64753cdbf0c6ec096304a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["256a0e54e76f18e115a43e7fe793b54d4e9a3005","9bb9a29a5e71a90295f175df8919802993142c9a"],"240c2c222c1b7eb253bd7e596c2d4731355836ef":["f4363cd33f6eff7fb4753574a441e2d18c1022a4","b7dfa64bc2074fb87d0ca70095a644c1ead107e1","28288370235ed02234a64753cdbf0c6ec096304a"],"b7dfa64bc2074fb87d0ca70095a644c1ead107e1":[],"28288370235ed02234a64753cdbf0c6ec096304a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b7dfa64bc2074fb87d0ca70095a644c1ead107e1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}