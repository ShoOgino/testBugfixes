{"path":"lucene/core/src/java/org/apache/lucene/codecs/compressing/CompressingTermVectorsWriter#startTerm(BytesRef,int).mjava","commits":[{"id":"eda61b1e90b490cc5837200e04c02639a0d272c7","date":1358795519,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/compressing/CompressingTermVectorsWriter#startTerm(BytesRef,int).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void startTerm(BytesRef term, int freq) throws IOException {\n    assert freq >= 1;\n    final int prefix = StringHelper.bytesDifference(lastTerm, term);\n    curField.addTerm(freq, prefix, term.length - prefix);\n    termSuffixes.writeBytes(term.bytes, term.offset + prefix, term.length - prefix);\n    // copy last term\n    if (lastTerm.bytes.length < term.length) {\n      lastTerm.bytes = new byte[ArrayUtil.oversize(term.length, 1)];\n    }\n    lastTerm.offset = 0;\n    lastTerm.length = term.length;\n    System.arraycopy(term.bytes, term.offset, lastTerm.bytes, 0, term.length);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"07155cdd910937cdf6877e48884d5782845c8b8b","date":1358796205,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/compressing/CompressingTermVectorsWriter#startTerm(BytesRef,int).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void startTerm(BytesRef term, int freq) throws IOException {\n    assert freq >= 1;\n    final int prefix = StringHelper.bytesDifference(lastTerm, term);\n    curField.addTerm(freq, prefix, term.length - prefix);\n    termSuffixes.writeBytes(term.bytes, term.offset + prefix, term.length - prefix);\n    // copy last term\n    if (lastTerm.bytes.length < term.length) {\n      lastTerm.bytes = new byte[ArrayUtil.oversize(term.length, 1)];\n    }\n    lastTerm.offset = 0;\n    lastTerm.length = term.length;\n    System.arraycopy(term.bytes, term.offset, lastTerm.bytes, 0, term.length);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"456d7e7092cb043c740b4674301660ee8abc26fe","date":1517645879,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/compressing/CompressingTermVectorsWriter#startTerm(BytesRef,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/compressing/CompressingTermVectorsWriter#startTerm(BytesRef,int).mjava","sourceNew":"  @Override\n  public void startTerm(BytesRef term, int freq) throws IOException {\n    assert freq >= 1;\n    final int prefix;\n    if (lastTerm.length == 0) {\n      // no previous term: no bytes to write\n      prefix = 0;\n    } else {\n      prefix = StringHelper.bytesDifference(lastTerm, term);\n    }\n    curField.addTerm(freq, prefix, term.length - prefix);\n    termSuffixes.writeBytes(term.bytes, term.offset + prefix, term.length - prefix);\n    // copy last term\n    if (lastTerm.bytes.length < term.length) {\n      lastTerm.bytes = new byte[ArrayUtil.oversize(term.length, 1)];\n    }\n    lastTerm.offset = 0;\n    lastTerm.length = term.length;\n    System.arraycopy(term.bytes, term.offset, lastTerm.bytes, 0, term.length);\n  }\n\n","sourceOld":"  @Override\n  public void startTerm(BytesRef term, int freq) throws IOException {\n    assert freq >= 1;\n    final int prefix = StringHelper.bytesDifference(lastTerm, term);\n    curField.addTerm(freq, prefix, term.length - prefix);\n    termSuffixes.writeBytes(term.bytes, term.offset + prefix, term.length - prefix);\n    // copy last term\n    if (lastTerm.bytes.length < term.length) {\n      lastTerm.bytes = new byte[ArrayUtil.oversize(term.length, 1)];\n    }\n    lastTerm.offset = 0;\n    lastTerm.length = term.length;\n    System.arraycopy(term.bytes, term.offset, lastTerm.bytes, 0, term.length);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"456d7e7092cb043c740b4674301660ee8abc26fe":["eda61b1e90b490cc5837200e04c02639a0d272c7"],"eda61b1e90b490cc5837200e04c02639a0d272c7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"07155cdd910937cdf6877e48884d5782845c8b8b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","eda61b1e90b490cc5837200e04c02639a0d272c7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["456d7e7092cb043c740b4674301660ee8abc26fe"]},"commit2Childs":{"456d7e7092cb043c740b4674301660ee8abc26fe":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"eda61b1e90b490cc5837200e04c02639a0d272c7":["456d7e7092cb043c740b4674301660ee8abc26fe","07155cdd910937cdf6877e48884d5782845c8b8b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["eda61b1e90b490cc5837200e04c02639a0d272c7","07155cdd910937cdf6877e48884d5782845c8b8b"],"07155cdd910937cdf6877e48884d5782845c8b8b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["07155cdd910937cdf6877e48884d5782845c8b8b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}