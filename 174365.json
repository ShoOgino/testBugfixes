{"path":"src/test/org/apache/lucene/search/TestScorerPerf#testConjunctions().mjava","commits":[{"id":"ba4dc8f71618a4d32d1cff3265c274a7d8c26eab","date":1161740775,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestScorerPerf#testConjunctions().mjava","pathOld":"/dev/null","sourceNew":"  public void testConjunctions() throws Exception {\n    // test many small sets... the bugs will be found on boundary conditions\n    createDummySearcher();\n    validate=true;\n    sets=randBitSets(1000,10);\n    doConjunctions(10000,5);\n    s.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"427a073cccde1c1b6612d63c06b1503a8edf43d9","date":1161831085,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestScorerPerf#testConjunctions().mjava","pathOld":"src/test/org/apache/lucene/search/TestScorerPerf#testConjunctions().mjava","sourceNew":"  public void testConjunctions() throws Exception {\n    // test many small sets... the bugs will be found on boundary conditions\n    createDummySearcher();\n    validate=true;\n    sets=randBitSets(1000,10);\n    doConjunctions(10000,5);\n    doNestedConjunctions(10000,3,3);\n    s.close();\n  }\n\n","sourceOld":"  public void testConjunctions() throws Exception {\n    // test many small sets... the bugs will be found on boundary conditions\n    createDummySearcher();\n    validate=true;\n    sets=randBitSets(1000,10);\n    doConjunctions(10000,5);\n    s.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cb1066f2afe9450585d0d10063ea4450085236f1","date":1233870820,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestScorerPerf#testConjunctions().mjava","pathOld":"src/test/org/apache/lucene/search/TestScorerPerf#testConjunctions().mjava","sourceNew":"  public void testConjunctions() throws Exception {\n    // test many small sets... the bugs will be found on boundary conditions\n    r = newRandom();\n    createDummySearcher();\n    validate=true;\n    sets=randBitSets(1000,10);\n    doConjunctions(10000,5);\n    doNestedConjunctions(10000,3,3);\n    s.close();\n  }\n\n","sourceOld":"  public void testConjunctions() throws Exception {\n    // test many small sets... the bugs will be found on boundary conditions\n    createDummySearcher();\n    validate=true;\n    sets=randBitSets(1000,10);\n    doConjunctions(10000,5);\n    doNestedConjunctions(10000,3,3);\n    s.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestScorerPerf#testConjunctions().mjava","pathOld":"src/test/org/apache/lucene/search/TestScorerPerf#testConjunctions().mjava","sourceNew":"  public void testConjunctions() throws Exception {\n    // test many small sets... the bugs will be found on boundary conditions\n    r = newRandom();\n    createDummySearcher();\n    validate=true;\n    sets=randBitSets(1000,10);\n    doConjunctions(10000,5);\n    doNestedConjunctions(10000,3,3);\n    s.close();\n  }\n\n","sourceOld":"  public void testConjunctions() throws Exception {\n    // test many small sets... the bugs will be found on boundary conditions\n    r = newRandom();\n    createDummySearcher();\n    validate=true;\n    sets=randBitSets(1000,10);\n    doConjunctions(10000,5);\n    doNestedConjunctions(10000,3,3);\n    s.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"427a073cccde1c1b6612d63c06b1503a8edf43d9":["ba4dc8f71618a4d32d1cff3265c274a7d8c26eab"],"cb1066f2afe9450585d0d10063ea4450085236f1":["427a073cccde1c1b6612d63c06b1503a8edf43d9"],"ba4dc8f71618a4d32d1cff3265c274a7d8c26eab":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cb1066f2afe9450585d0d10063ea4450085236f1"]},"commit2Childs":{"427a073cccde1c1b6612d63c06b1503a8edf43d9":["cb1066f2afe9450585d0d10063ea4450085236f1"],"cb1066f2afe9450585d0d10063ea4450085236f1":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"ba4dc8f71618a4d32d1cff3265c274a7d8c26eab":["427a073cccde1c1b6612d63c06b1503a8edf43d9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ba4dc8f71618a4d32d1cff3265c274a7d8c26eab"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}