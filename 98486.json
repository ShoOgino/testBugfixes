{"path":"solr/core/src/java/org/apache/solr/cloud/autoscaling/NodeLostTrigger#setState(Map[String,Object]).mjava","commits":[{"id":"464244264804e3f981bf1fb4b732516d8d62dbc2","date":1495736161,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/autoscaling/NodeLostTrigger#setState(Map[String,Object]).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  protected void setState(Map<String, Object> state) {\n    this.lastLiveNodes.clear();\n    this.nodeNameVsTimeRemoved.clear();\n    Collection<String> lastLiveNodes = (Collection<String>)state.get(\"lastLiveNodes\");\n    if (lastLiveNodes != null) {\n      this.lastLiveNodes.addAll(lastLiveNodes);\n    }\n    Map<String,Long> nodeNameVsTimeRemoved = (Map<String,Long>)state.get(\"nodeNameVsTimeRemoved\");\n    if (nodeNameVsTimeRemoved != null) {\n      this.nodeNameVsTimeRemoved.putAll(nodeNameVsTimeRemoved);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5531f16a602ef350b6c9adfb08ebaa13a60fe3db","date":1495756318,"type":0,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/autoscaling/NodeLostTrigger#setState(Map[String,Object]).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  protected void setState(Map<String, Object> state) {\n    this.lastLiveNodes.clear();\n    this.nodeNameVsTimeRemoved.clear();\n    Collection<String> lastLiveNodes = (Collection<String>)state.get(\"lastLiveNodes\");\n    if (lastLiveNodes != null) {\n      this.lastLiveNodes.addAll(lastLiveNodes);\n    }\n    Map<String,Long> nodeNameVsTimeRemoved = (Map<String,Long>)state.get(\"nodeNameVsTimeRemoved\");\n    if (nodeNameVsTimeRemoved != null) {\n      this.nodeNameVsTimeRemoved.putAll(nodeNameVsTimeRemoved);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c304e97e7c1d472bc70e801b35ee78583916c6cd","date":1507105431,"type":0,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/autoscaling/NodeLostTrigger#setState(Map[String,Object]).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  protected void setState(Map<String, Object> state) {\n    this.lastLiveNodes.clear();\n    this.nodeNameVsTimeRemoved.clear();\n    Collection<String> lastLiveNodes = (Collection<String>)state.get(\"lastLiveNodes\");\n    if (lastLiveNodes != null) {\n      this.lastLiveNodes.addAll(lastLiveNodes);\n    }\n    Map<String,Long> nodeNameVsTimeRemoved = (Map<String,Long>)state.get(\"nodeNameVsTimeRemoved\");\n    if (nodeNameVsTimeRemoved != null) {\n      this.nodeNameVsTimeRemoved.putAll(nodeNameVsTimeRemoved);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"560c18d71dad43d675158783c3840f8c80d6d39c","date":1507105532,"type":0,"author":"Cao Manh Dat","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/autoscaling/NodeLostTrigger#setState(Map[String,Object]).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  protected void setState(Map<String, Object> state) {\n    this.lastLiveNodes.clear();\n    this.nodeNameVsTimeRemoved.clear();\n    Collection<String> lastLiveNodes = (Collection<String>)state.get(\"lastLiveNodes\");\n    if (lastLiveNodes != null) {\n      this.lastLiveNodes.addAll(lastLiveNodes);\n    }\n    Map<String,Long> nodeNameVsTimeRemoved = (Map<String,Long>)state.get(\"nodeNameVsTimeRemoved\");\n    if (nodeNameVsTimeRemoved != null) {\n      this.nodeNameVsTimeRemoved.putAll(nodeNameVsTimeRemoved);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"daa0f21a44e235a2299ea1fa913898b182dd7cce","date":1590952026,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/autoscaling/NodeLostTrigger#setState(Map[String,Object]).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/autoscaling/NodeLostTrigger#setState(Map[String,Object]).mjava","sourceNew":"  @Override\n  protected void setState(Map<String, Object> state) {\n    this.lastLiveNodes.clear();\n    this.nodeNameVsTimeRemoved.clear();\n    @SuppressWarnings({\"unchecked\"})\n    Collection<String> lastLiveNodes = (Collection<String>)state.get(\"lastLiveNodes\");\n    if (lastLiveNodes != null) {\n      this.lastLiveNodes.addAll(lastLiveNodes);\n    }\n    @SuppressWarnings({\"unchecked\"})\n    Map<String,Long> nodeNameVsTimeRemoved = (Map<String,Long>)state.get(\"nodeNameVsTimeRemoved\");\n    if (nodeNameVsTimeRemoved != null) {\n      this.nodeNameVsTimeRemoved.putAll(nodeNameVsTimeRemoved);\n    }\n  }\n\n","sourceOld":"  @Override\n  protected void setState(Map<String, Object> state) {\n    this.lastLiveNodes.clear();\n    this.nodeNameVsTimeRemoved.clear();\n    Collection<String> lastLiveNodes = (Collection<String>)state.get(\"lastLiveNodes\");\n    if (lastLiveNodes != null) {\n      this.lastLiveNodes.addAll(lastLiveNodes);\n    }\n    Map<String,Long> nodeNameVsTimeRemoved = (Map<String,Long>)state.get(\"nodeNameVsTimeRemoved\");\n    if (nodeNameVsTimeRemoved != null) {\n      this.nodeNameVsTimeRemoved.putAll(nodeNameVsTimeRemoved);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f504512a03d978990cbff30db0522b354e846db","date":1595247421,"type":4,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/cloud/autoscaling/NodeLostTrigger#setState(Map[String,Object]).mjava","sourceNew":null,"sourceOld":"  @Override\n  protected void setState(Map<String, Object> state) {\n    this.lastLiveNodes.clear();\n    this.nodeNameVsTimeRemoved.clear();\n    @SuppressWarnings({\"unchecked\"})\n    Collection<String> lastLiveNodes = (Collection<String>)state.get(\"lastLiveNodes\");\n    if (lastLiveNodes != null) {\n      this.lastLiveNodes.addAll(lastLiveNodes);\n    }\n    @SuppressWarnings({\"unchecked\"})\n    Map<String,Long> nodeNameVsTimeRemoved = (Map<String,Long>)state.get(\"nodeNameVsTimeRemoved\");\n    if (nodeNameVsTimeRemoved != null) {\n      this.nodeNameVsTimeRemoved.putAll(nodeNameVsTimeRemoved);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c304e97e7c1d472bc70e801b35ee78583916c6cd":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5531f16a602ef350b6c9adfb08ebaa13a60fe3db"],"3f504512a03d978990cbff30db0522b354e846db":["daa0f21a44e235a2299ea1fa913898b182dd7cce"],"5531f16a602ef350b6c9adfb08ebaa13a60fe3db":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","464244264804e3f981bf1fb4b732516d8d62dbc2"],"daa0f21a44e235a2299ea1fa913898b182dd7cce":["560c18d71dad43d675158783c3840f8c80d6d39c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"464244264804e3f981bf1fb4b732516d8d62dbc2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"560c18d71dad43d675158783c3840f8c80d6d39c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c304e97e7c1d472bc70e801b35ee78583916c6cd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3f504512a03d978990cbff30db0522b354e846db"]},"commit2Childs":{"c304e97e7c1d472bc70e801b35ee78583916c6cd":["560c18d71dad43d675158783c3840f8c80d6d39c"],"5531f16a602ef350b6c9adfb08ebaa13a60fe3db":["c304e97e7c1d472bc70e801b35ee78583916c6cd"],"3f504512a03d978990cbff30db0522b354e846db":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c304e97e7c1d472bc70e801b35ee78583916c6cd","5531f16a602ef350b6c9adfb08ebaa13a60fe3db","464244264804e3f981bf1fb4b732516d8d62dbc2","560c18d71dad43d675158783c3840f8c80d6d39c"],"daa0f21a44e235a2299ea1fa913898b182dd7cce":["3f504512a03d978990cbff30db0522b354e846db"],"464244264804e3f981bf1fb4b732516d8d62dbc2":["5531f16a602ef350b6c9adfb08ebaa13a60fe3db"],"560c18d71dad43d675158783c3840f8c80d6d39c":["daa0f21a44e235a2299ea1fa913898b182dd7cce"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}