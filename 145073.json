{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/TimeSeriesStream#init(String,SolrParams,String,Metric[],String,String,String,String).mjava","commits":[{"id":"c35d3c01114129fff707f0777080210fa9deb2a7","date":1493219863,"type":0,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/TimeSeriesStream#init(String,SolrParams,String,Metric[],String,String,String,String).mjava","pathOld":"/dev/null","sourceNew":"  private void init(String collection,\n                    SolrParams params,\n                    String field,\n                    Metric[] metrics,\n                    String start,\n                    String end,\n                    String gap,\n                    String zkHost) throws IOException {\n    this.zkHost  = zkHost;\n    this.collection = collection;\n    this.start = start;\n    this.gap = gap;\n    this.metrics = metrics;\n    this.field = field;\n    this.params = params;\n    this.end = end;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"18ca8e6ef5f913250ad37351a582b27ca3909830","date":1493261008,"type":3,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/TimeSeriesStream#init(String,SolrParams,String,Metric[],String,String,String,String).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/TimeSeriesStream#init(String,SolrParams,String,Metric[],String,String,String,String).mjava","sourceNew":"  private void init(String collection,\n                    SolrParams params,\n                    String field,\n                    Metric[] metrics,\n                    String start,\n                    String end,\n                    String gap,\n                    String zkHost) throws IOException {\n    this.zkHost  = zkHost;\n    this.collection = collection;\n    this.start = start;\n    this.gap = gap;\n    if(!gap.startsWith(\"+\")) {\n      this.gap = \"+\"+gap;\n    }\n    this.metrics = metrics;\n    this.field = field;\n    this.params = params;\n    this.end = end;\n  }\n\n","sourceOld":"  private void init(String collection,\n                    SolrParams params,\n                    String field,\n                    Metric[] metrics,\n                    String start,\n                    String end,\n                    String gap,\n                    String zkHost) throws IOException {\n    this.zkHost  = zkHost;\n    this.collection = collection;\n    this.start = start;\n    this.gap = gap;\n    this.metrics = metrics;\n    this.field = field;\n    this.params = params;\n    this.end = end;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"18255ef03f6449839fece69b2dbad04f214e55eb","date":1496169578,"type":5,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/TimeSeriesStream#init(String,SolrParams,String,Metric[],String,String,String,String,String).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/TimeSeriesStream#init(String,SolrParams,String,Metric[],String,String,String,String).mjava","sourceNew":"  private void init(String collection,\n                    SolrParams params,\n                    String field,\n                    Metric[] metrics,\n                    String start,\n                    String end,\n                    String gap,\n                    String format,\n                    String zkHost) throws IOException {\n    this.zkHost  = zkHost;\n    this.collection = collection;\n    this.start = start;\n    this.gap = gap;\n    if(!gap.startsWith(\"+\")) {\n      this.gap = \"+\"+gap;\n    }\n    this.metrics = metrics;\n    this.field = field;\n    this.params = params;\n    this.end = end;\n    if(format != null) {\n      formatter = DateTimeFormatter.ofPattern(format);\n    }\n  }\n\n","sourceOld":"  private void init(String collection,\n                    SolrParams params,\n                    String field,\n                    Metric[] metrics,\n                    String start,\n                    String end,\n                    String gap,\n                    String zkHost) throws IOException {\n    this.zkHost  = zkHost;\n    this.collection = collection;\n    this.start = start;\n    this.gap = gap;\n    if(!gap.startsWith(\"+\")) {\n      this.gap = \"+\"+gap;\n    }\n    this.metrics = metrics;\n    this.field = field;\n    this.params = params;\n    this.end = end;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d1f5728f32a4a256b36cfabd7a2636452f599bb9","date":1496231774,"type":5,"author":"Karl Wright","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/TimeSeriesStream#init(String,SolrParams,String,Metric[],String,String,String,String,String).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/TimeSeriesStream#init(String,SolrParams,String,Metric[],String,String,String,String).mjava","sourceNew":"  private void init(String collection,\n                    SolrParams params,\n                    String field,\n                    Metric[] metrics,\n                    String start,\n                    String end,\n                    String gap,\n                    String format,\n                    String zkHost) throws IOException {\n    this.zkHost  = zkHost;\n    this.collection = collection;\n    this.start = start;\n    this.gap = gap;\n    if(!gap.startsWith(\"+\")) {\n      this.gap = \"+\"+gap;\n    }\n    this.metrics = metrics;\n    this.field = field;\n    this.params = params;\n    this.end = end;\n    if(format != null) {\n      this.format = format;\n      formatter = DateTimeFormatter.ofPattern(format, Locale.ROOT);\n    }\n  }\n\n","sourceOld":"  private void init(String collection,\n                    SolrParams params,\n                    String field,\n                    Metric[] metrics,\n                    String start,\n                    String end,\n                    String gap,\n                    String zkHost) throws IOException {\n    this.zkHost  = zkHost;\n    this.collection = collection;\n    this.start = start;\n    this.gap = gap;\n    if(!gap.startsWith(\"+\")) {\n      this.gap = \"+\"+gap;\n    }\n    this.metrics = metrics;\n    this.field = field;\n    this.params = params;\n    this.end = end;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"44b289ba5434fa10782118c697fa706d6cf231df","date":1496249545,"type":5,"author":"Chris Hostetter","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/TimeSeriesStream#init(String,SolrParams,String,Metric[],String,String,String,String,String).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/TimeSeriesStream#init(String,SolrParams,String,Metric[],String,String,String,String).mjava","sourceNew":"  private void init(String collection,\n                    SolrParams params,\n                    String field,\n                    Metric[] metrics,\n                    String start,\n                    String end,\n                    String gap,\n                    String format,\n                    String zkHost) throws IOException {\n    this.zkHost  = zkHost;\n    this.collection = collection;\n    this.start = start;\n    this.gap = gap;\n    if(!gap.startsWith(\"+\")) {\n      this.gap = \"+\"+gap;\n    }\n    this.metrics = metrics;\n    this.field = field;\n    this.params = params;\n    this.end = end;\n    if(format != null) {\n      this.format = format;\n      formatter = DateTimeFormatter.ofPattern(format, Locale.ROOT);\n    }\n  }\n\n","sourceOld":"  private void init(String collection,\n                    SolrParams params,\n                    String field,\n                    Metric[] metrics,\n                    String start,\n                    String end,\n                    String gap,\n                    String zkHost) throws IOException {\n    this.zkHost  = zkHost;\n    this.collection = collection;\n    this.start = start;\n    this.gap = gap;\n    if(!gap.startsWith(\"+\")) {\n      this.gap = \"+\"+gap;\n    }\n    this.metrics = metrics;\n    this.field = field;\n    this.params = params;\n    this.end = end;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c35d3c01114129fff707f0777080210fa9deb2a7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"18255ef03f6449839fece69b2dbad04f214e55eb":["18ca8e6ef5f913250ad37351a582b27ca3909830"],"44b289ba5434fa10782118c697fa706d6cf231df":["18ca8e6ef5f913250ad37351a582b27ca3909830","d1f5728f32a4a256b36cfabd7a2636452f599bb9"],"18ca8e6ef5f913250ad37351a582b27ca3909830":["c35d3c01114129fff707f0777080210fa9deb2a7"],"d1f5728f32a4a256b36cfabd7a2636452f599bb9":["18ca8e6ef5f913250ad37351a582b27ca3909830","18255ef03f6449839fece69b2dbad04f214e55eb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d1f5728f32a4a256b36cfabd7a2636452f599bb9"]},"commit2Childs":{"c35d3c01114129fff707f0777080210fa9deb2a7":["18ca8e6ef5f913250ad37351a582b27ca3909830"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c35d3c01114129fff707f0777080210fa9deb2a7"],"18255ef03f6449839fece69b2dbad04f214e55eb":["d1f5728f32a4a256b36cfabd7a2636452f599bb9"],"44b289ba5434fa10782118c697fa706d6cf231df":[],"18ca8e6ef5f913250ad37351a582b27ca3909830":["18255ef03f6449839fece69b2dbad04f214e55eb","44b289ba5434fa10782118c697fa706d6cf231df","d1f5728f32a4a256b36cfabd7a2636452f599bb9"],"d1f5728f32a4a256b36cfabd7a2636452f599bb9":["44b289ba5434fa10782118c697fa706d6cf231df","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["44b289ba5434fa10782118c697fa706d6cf231df","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}