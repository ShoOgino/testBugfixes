{"path":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#destroyServers().mjava","commits":[{"id":"2c30e4c1cee08b3b229a77991882594fe7250b66","date":1344448871,"type":1,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#destroyServers().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/FullSolrCloudTest#destroyServers().mjava","sourceNew":"  protected void destroyServers() throws Exception {\n    ChaosMonkey.stop(controlJetty);\n    for (JettySolrRunner jetty : jettys) {\n      try {\n        ChaosMonkey.stop(jetty);\n      } catch (Exception e) {\n        log.error(\"\", e);\n      }\n    }\n    clients.clear();\n    jettys.clear();\n  }\n\n","sourceOld":"  protected void destroyServers() throws Exception {\n    ChaosMonkey.stop(controlJetty);\n    for (JettySolrRunner jetty : jettys) {\n      try {\n        ChaosMonkey.stop(jetty);\n      } catch (Exception e) {\n        log.error(\"\", e);\n      }\n    }\n    clients.clear();\n    jettys.clear();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d6f074e73200c07d54f242d3880a8da5a35ff97b","date":1344507653,"type":1,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#destroyServers().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/FullSolrCloudTest#destroyServers().mjava","sourceNew":"  protected void destroyServers() throws Exception {\n    ChaosMonkey.stop(controlJetty);\n    for (JettySolrRunner jetty : jettys) {\n      try {\n        ChaosMonkey.stop(jetty);\n      } catch (Exception e) {\n        log.error(\"\", e);\n      }\n    }\n    clients.clear();\n    jettys.clear();\n  }\n\n","sourceOld":"  protected void destroyServers() throws Exception {\n    ChaosMonkey.stop(controlJetty);\n    for (JettySolrRunner jetty : jettys) {\n      try {\n        ChaosMonkey.stop(jetty);\n      } catch (Exception e) {\n        log.error(\"\", e);\n      }\n    }\n    clients.clear();\n    jettys.clear();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7869f64c874ebf7f317d22c00baf2b6857797a6","date":1344856617,"type":1,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#destroyServers().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/FullSolrCloudTest#destroyServers().mjava","sourceNew":"  protected void destroyServers() throws Exception {\n    ChaosMonkey.stop(controlJetty);\n    for (JettySolrRunner jetty : jettys) {\n      try {\n        ChaosMonkey.stop(jetty);\n      } catch (Exception e) {\n        log.error(\"\", e);\n      }\n    }\n    clients.clear();\n    jettys.clear();\n  }\n\n","sourceOld":"  protected void destroyServers() throws Exception {\n    ChaosMonkey.stop(controlJetty);\n    for (JettySolrRunner jetty : jettys) {\n      try {\n        ChaosMonkey.stop(jetty);\n      } catch (Exception e) {\n        log.error(\"\", e);\n      }\n    }\n    clients.clear();\n    jettys.clear();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d9405f486872f1e416304dfe389741f4ee2f8a4d","date":1351276739,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#destroyServers().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#destroyServers().mjava","sourceNew":"  protected void destroyServers() throws Exception {\n    if (controlJetty != null) {\n      ChaosMonkey.stop(controlJetty);\n    }\n    for (JettySolrRunner jetty : jettys) {\n      try {\n        ChaosMonkey.stop(jetty);\n      } catch (Exception e) {\n        log.error(\"\", e);\n      }\n    }\n    clients.clear();\n    jettys.clear();\n  }\n\n","sourceOld":"  protected void destroyServers() throws Exception {\n    ChaosMonkey.stop(controlJetty);\n    for (JettySolrRunner jetty : jettys) {\n      try {\n        ChaosMonkey.stop(jetty);\n      } catch (Exception e) {\n        log.error(\"\", e);\n      }\n    }\n    clients.clear();\n    jettys.clear();\n  }\n\n","bugFix":null,"bugIntro":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"f2126b84bd093fa3d921582a109a0ee578c28126","date":1351522501,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#destroyServers().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#destroyServers().mjava","sourceNew":"  protected void destroyServers() throws Exception {\n    if (controlJetty != null) {\n      ChaosMonkey.stop(controlJetty);\n    }\n    for (JettySolrRunner jetty : jettys) {\n      try {\n        ChaosMonkey.stop(jetty);\n      } catch (Exception e) {\n        log.error(\"\", e);\n      }\n    }\n    clients.clear();\n    jettys.clear();\n  }\n\n","sourceOld":"  protected void destroyServers() throws Exception {\n    ChaosMonkey.stop(controlJetty);\n    for (JettySolrRunner jetty : jettys) {\n      try {\n        ChaosMonkey.stop(jetty);\n      } catch (Exception e) {\n        log.error(\"\", e);\n      }\n    }\n    clients.clear();\n    jettys.clear();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7530de27b87b961b51f01bd1299b7004d46e8823","date":1355236261,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#destroyServers().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#destroyServers().mjava","sourceNew":"  @Override\n  protected void destroyServers() throws Exception {\n    if (controlJetty != null) {\n      ChaosMonkey.stop(controlJetty);\n    }\n    for (JettySolrRunner jetty : jettys) {\n      try {\n        ChaosMonkey.stop(jetty);\n      } catch (Exception e) {\n        log.error(\"\", e);\n      }\n    }\n    clients.clear();\n    jettys.clear();\n  }\n\n","sourceOld":"  protected void destroyServers() throws Exception {\n    if (controlJetty != null) {\n      ChaosMonkey.stop(controlJetty);\n    }\n    for (JettySolrRunner jetty : jettys) {\n      try {\n        ChaosMonkey.stop(jetty);\n      } catch (Exception e) {\n        log.error(\"\", e);\n      }\n    }\n    clients.clear();\n    jettys.clear();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#destroyServers().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#destroyServers().mjava","sourceNew":"  @Override\n  protected void destroyServers() throws Exception {\n    if (controlJetty != null) {\n      ChaosMonkey.stop(controlJetty);\n    }\n    for (JettySolrRunner jetty : jettys) {\n      try {\n        ChaosMonkey.stop(jetty);\n      } catch (Exception e) {\n        log.error(\"\", e);\n      }\n    }\n    clients.clear();\n    jettys.clear();\n  }\n\n","sourceOld":"  protected void destroyServers() throws Exception {\n    if (controlJetty != null) {\n      ChaosMonkey.stop(controlJetty);\n    }\n    for (JettySolrRunner jetty : jettys) {\n      try {\n        ChaosMonkey.stop(jetty);\n      } catch (Exception e) {\n        log.error(\"\", e);\n      }\n    }\n    clients.clear();\n    jettys.clear();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6784d0cc613dc1ee97030eaaa5e0754edc22d164","date":1420824784,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#destroyServers().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#destroyServers().mjava","sourceNew":"  @Override\n  protected void destroyServers() throws Exception {\n    if (controlJetty != null) {\n      ChaosMonkey.stop(controlJetty);\n    }\n    for (JettySolrRunner jetty : jettys) {\n      try {\n        ChaosMonkey.stop(jetty);\n      } catch (Exception e) {\n        log.error(\"\", e);\n      }\n    }\n    super.destroyServers();\n  }\n\n","sourceOld":"  @Override\n  protected void destroyServers() throws Exception {\n    if (controlJetty != null) {\n      ChaosMonkey.stop(controlJetty);\n    }\n    for (JettySolrRunner jetty : jettys) {\n      try {\n        ChaosMonkey.stop(jetty);\n      } catch (Exception e) {\n        log.error(\"\", e);\n      }\n    }\n    clients.clear();\n    jettys.clear();\n  }\n\n","bugFix":["2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c3d9a2e4ec5db2bc6cc023d9a1fd387ceb5b69b5","date":1498283633,"type":3,"author":"Cao Manh Dat","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#destroyServers().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#destroyServers().mjava","sourceNew":"  @Override\n  protected void destroyServers() throws Exception {\n    if (controlJetty != null) {\n      ChaosMonkey.stop(controlJetty);\n    }\n    for (JettySolrRunner jetty : jettys) {\n      try {\n        ChaosMonkey.stop(jetty);\n      } catch (Exception e) {\n        log.error(\"\", e);\n      }\n    }\n    for (SolrClient client : coreClients) client.close();\n    coreClients.clear();\n    super.destroyServers();\n  }\n\n","sourceOld":"  @Override\n  protected void destroyServers() throws Exception {\n    if (controlJetty != null) {\n      ChaosMonkey.stop(controlJetty);\n    }\n    for (JettySolrRunner jetty : jettys) {\n      try {\n        ChaosMonkey.stop(jetty);\n      } catch (Exception e) {\n        log.error(\"\", e);\n      }\n    }\n    super.destroyServers();\n  }\n\n","bugFix":null,"bugIntro":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b7dfa64bc2074fb87d0ca70095a644c1ead107e1","date":1498356339,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#destroyServers().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#destroyServers().mjava","sourceNew":"  @Override\n  protected void destroyServers() throws Exception {\n    if (controlJetty != null) {\n      ChaosMonkey.stop(controlJetty);\n    }\n    for (JettySolrRunner jetty : jettys) {\n      try {\n        ChaosMonkey.stop(jetty);\n      } catch (Exception e) {\n        log.error(\"\", e);\n      }\n    }\n    for (SolrClient client : coreClients) client.close();\n    coreClients.clear();\n    super.destroyServers();\n  }\n\n","sourceOld":"  @Override\n  protected void destroyServers() throws Exception {\n    if (controlJetty != null) {\n      ChaosMonkey.stop(controlJetty);\n    }\n    for (JettySolrRunner jetty : jettys) {\n      try {\n        ChaosMonkey.stop(jetty);\n      } catch (Exception e) {\n        log.error(\"\", e);\n      }\n    }\n    super.destroyServers();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#destroyServers().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#destroyServers().mjava","sourceNew":"  @Override\n  protected void destroyServers() throws Exception {\n    if (controlJetty != null) {\n      ChaosMonkey.stop(controlJetty);\n    }\n    for (JettySolrRunner jetty : jettys) {\n      try {\n        ChaosMonkey.stop(jetty);\n      } catch (Exception e) {\n        log.error(\"\", e);\n      }\n    }\n    for (SolrClient client : coreClients) client.close();\n    coreClients.clear();\n    super.destroyServers();\n  }\n\n","sourceOld":"  @Override\n  protected void destroyServers() throws Exception {\n    if (controlJetty != null) {\n      ChaosMonkey.stop(controlJetty);\n    }\n    for (JettySolrRunner jetty : jettys) {\n      try {\n        ChaosMonkey.stop(jetty);\n      } catch (Exception e) {\n        log.error(\"\", e);\n      }\n    }\n    super.destroyServers();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"bb222a3f9d9421d5c95afce73013fbd8de07ea1f","date":1543514331,"type":3,"author":"markrmiller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#destroyServers().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#destroyServers().mjava","sourceNew":"  @Override\n  protected void destroyServers() throws Exception {\n    ForkJoinPool customThreadPool = new ForkJoinPool(6);\n    \n    customThreadPool.submit(() -> Collections.singleton(commonCloudSolrClient).parallelStream().forEach(c -> {\n      IOUtils.closeQuietly(c);\n    }));\n    \n    customThreadPool.submit(() -> Collections.singleton(controlClient).parallelStream().forEach(c -> {\n      IOUtils.closeQuietly(c);\n    }));\n    \n    customThreadPool.submit(() -> coreClients.parallelStream().forEach(c -> {\n      IOUtils.closeQuietly(c);\n    }));\n\n    customThreadPool.submit(() -> Collections.singletonList(controlClientCloud).parallelStream().forEach(c -> {\n      IOUtils.closeQuietly(c);\n    }));\n\n    customThreadPool.submit(() -> Collections.singletonList(cloudClient).parallelStream().forEach(c -> {\n      IOUtils.closeQuietly(c);\n    }));\n\n    ExecutorUtil.shutdownAndAwaitTermination(customThreadPool);\n    \n    coreClients.clear();\n    \n    super.destroyServers();\n  }\n\n","sourceOld":"  @Override\n  protected void destroyServers() throws Exception {\n    if (controlJetty != null) {\n      ChaosMonkey.stop(controlJetty);\n    }\n    for (JettySolrRunner jetty : jettys) {\n      try {\n        ChaosMonkey.stop(jetty);\n      } catch (Exception e) {\n        log.error(\"\", e);\n      }\n    }\n    for (SolrClient client : coreClients) client.close();\n    coreClients.clear();\n    super.destroyServers();\n  }\n\n","bugFix":["c3d9a2e4ec5db2bc6cc023d9a1fd387ceb5b69b5","2c007e7c4cf8c55bc2a5884e315123afaaeec87f","d9405f486872f1e416304dfe389741f4ee2f8a4d"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0e34aff27dfe70db6a9f0d2da0f5d9b640fbac18","date":1543645562,"type":3,"author":"markrmiller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#destroyServers().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#destroyServers().mjava","sourceNew":"  @Override\n  protected void destroyServers() throws Exception {\n    ExecutorService customThreadPool = ExecutorUtil.newMDCAwareCachedThreadPool(new SolrjNamedThreadFactory(\"closeThreadPool\"));\n    \n    customThreadPool.submit(() -> Collections.singleton(commonCloudSolrClient).parallelStream().forEach(c -> {\n      IOUtils.closeQuietly(c);\n    }));\n    \n    customThreadPool.submit(() -> Collections.singleton(controlClient).parallelStream().forEach(c -> {\n      IOUtils.closeQuietly(c);\n    }));\n    \n    customThreadPool.submit(() -> coreClients.parallelStream().forEach(c -> {\n      IOUtils.closeQuietly(c);\n    }));\n\n    customThreadPool.submit(() -> Collections.singletonList(controlClientCloud).parallelStream().forEach(c -> {\n      IOUtils.closeQuietly(c);\n    }));\n\n    customThreadPool.submit(() -> Collections.singletonList(cloudClient).parallelStream().forEach(c -> {\n      IOUtils.closeQuietly(c);\n    }));\n\n    ExecutorUtil.shutdownAndAwaitTermination(customThreadPool);\n    \n    coreClients.clear();\n    \n    super.destroyServers();\n  }\n\n","sourceOld":"  @Override\n  protected void destroyServers() throws Exception {\n    ForkJoinPool customThreadPool = new ForkJoinPool(6);\n    \n    customThreadPool.submit(() -> Collections.singleton(commonCloudSolrClient).parallelStream().forEach(c -> {\n      IOUtils.closeQuietly(c);\n    }));\n    \n    customThreadPool.submit(() -> Collections.singleton(controlClient).parallelStream().forEach(c -> {\n      IOUtils.closeQuietly(c);\n    }));\n    \n    customThreadPool.submit(() -> coreClients.parallelStream().forEach(c -> {\n      IOUtils.closeQuietly(c);\n    }));\n\n    customThreadPool.submit(() -> Collections.singletonList(controlClientCloud).parallelStream().forEach(c -> {\n      IOUtils.closeQuietly(c);\n    }));\n\n    customThreadPool.submit(() -> Collections.singletonList(cloudClient).parallelStream().forEach(c -> {\n      IOUtils.closeQuietly(c);\n    }));\n\n    ExecutorUtil.shutdownAndAwaitTermination(customThreadPool);\n    \n    coreClients.clear();\n    \n    super.destroyServers();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fb03700c9690d16b15fb4f56f6ec36b128fd894e","date":1586745995,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#destroyServers().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/AbstractFullDistribZkTestBase#destroyServers().mjava","sourceNew":"  @Override\n  protected void destroyServers() throws Exception {\n    ExecutorService customThreadPool = ExecutorUtil.newMDCAwareCachedThreadPool(new SolrNamedThreadFactory(\"closeThreadPool\"));\n    \n    customThreadPool.submit(() -> Collections.singleton(commonCloudSolrClient).parallelStream().forEach(c -> {\n      IOUtils.closeQuietly(c);\n    }));\n    \n    customThreadPool.submit(() -> Collections.singleton(controlClient).parallelStream().forEach(c -> {\n      IOUtils.closeQuietly(c);\n    }));\n    \n    customThreadPool.submit(() -> coreClients.parallelStream().forEach(c -> {\n      IOUtils.closeQuietly(c);\n    }));\n\n    customThreadPool.submit(() -> Collections.singletonList(controlClientCloud).parallelStream().forEach(c -> {\n      IOUtils.closeQuietly(c);\n    }));\n\n    customThreadPool.submit(() -> Collections.singletonList(cloudClient).parallelStream().forEach(c -> {\n      IOUtils.closeQuietly(c);\n    }));\n\n    ExecutorUtil.shutdownAndAwaitTermination(customThreadPool);\n    \n    coreClients.clear();\n    \n    super.destroyServers();\n  }\n\n","sourceOld":"  @Override\n  protected void destroyServers() throws Exception {\n    ExecutorService customThreadPool = ExecutorUtil.newMDCAwareCachedThreadPool(new SolrjNamedThreadFactory(\"closeThreadPool\"));\n    \n    customThreadPool.submit(() -> Collections.singleton(commonCloudSolrClient).parallelStream().forEach(c -> {\n      IOUtils.closeQuietly(c);\n    }));\n    \n    customThreadPool.submit(() -> Collections.singleton(controlClient).parallelStream().forEach(c -> {\n      IOUtils.closeQuietly(c);\n    }));\n    \n    customThreadPool.submit(() -> coreClients.parallelStream().forEach(c -> {\n      IOUtils.closeQuietly(c);\n    }));\n\n    customThreadPool.submit(() -> Collections.singletonList(controlClientCloud).parallelStream().forEach(c -> {\n      IOUtils.closeQuietly(c);\n    }));\n\n    customThreadPool.submit(() -> Collections.singletonList(cloudClient).parallelStream().forEach(c -> {\n      IOUtils.closeQuietly(c);\n    }));\n\n    ExecutorUtil.shutdownAndAwaitTermination(customThreadPool);\n    \n    coreClients.clear();\n    \n    super.destroyServers();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["d9405f486872f1e416304dfe389741f4ee2f8a4d","7530de27b87b961b51f01bd1299b7004d46e8823"],"c3d9a2e4ec5db2bc6cc023d9a1fd387ceb5b69b5":["6784d0cc613dc1ee97030eaaa5e0754edc22d164"],"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["28288370235ed02234a64753cdbf0c6ec096304a"],"d9405f486872f1e416304dfe389741f4ee2f8a4d":["2c30e4c1cee08b3b229a77991882594fe7250b66"],"b7dfa64bc2074fb87d0ca70095a644c1ead107e1":["6784d0cc613dc1ee97030eaaa5e0754edc22d164","c3d9a2e4ec5db2bc6cc023d9a1fd387ceb5b69b5"],"28288370235ed02234a64753cdbf0c6ec096304a":["6784d0cc613dc1ee97030eaaa5e0754edc22d164","c3d9a2e4ec5db2bc6cc023d9a1fd387ceb5b69b5"],"c7869f64c874ebf7f317d22c00baf2b6857797a6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2c30e4c1cee08b3b229a77991882594fe7250b66"],"0e34aff27dfe70db6a9f0d2da0f5d9b640fbac18":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"fb03700c9690d16b15fb4f56f6ec36b128fd894e":["0e34aff27dfe70db6a9f0d2da0f5d9b640fbac18"],"d6f074e73200c07d54f242d3880a8da5a35ff97b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2c30e4c1cee08b3b229a77991882594fe7250b66"],"f2126b84bd093fa3d921582a109a0ee578c28126":["2c30e4c1cee08b3b229a77991882594fe7250b66","d9405f486872f1e416304dfe389741f4ee2f8a4d"],"6784d0cc613dc1ee97030eaaa5e0754edc22d164":["7530de27b87b961b51f01bd1299b7004d46e8823"],"7530de27b87b961b51f01bd1299b7004d46e8823":["d9405f486872f1e416304dfe389741f4ee2f8a4d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["fb03700c9690d16b15fb4f56f6ec36b128fd894e"],"2c30e4c1cee08b3b229a77991882594fe7250b66":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"c3d9a2e4ec5db2bc6cc023d9a1fd387ceb5b69b5":["b7dfa64bc2074fb87d0ca70095a644c1ead107e1","28288370235ed02234a64753cdbf0c6ec096304a"],"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["0e34aff27dfe70db6a9f0d2da0f5d9b640fbac18"],"d9405f486872f1e416304dfe389741f4ee2f8a4d":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","f2126b84bd093fa3d921582a109a0ee578c28126","7530de27b87b961b51f01bd1299b7004d46e8823"],"b7dfa64bc2074fb87d0ca70095a644c1ead107e1":[],"28288370235ed02234a64753cdbf0c6ec096304a":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"c7869f64c874ebf7f317d22c00baf2b6857797a6":[],"0e34aff27dfe70db6a9f0d2da0f5d9b640fbac18":["fb03700c9690d16b15fb4f56f6ec36b128fd894e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c7869f64c874ebf7f317d22c00baf2b6857797a6","d6f074e73200c07d54f242d3880a8da5a35ff97b","2c30e4c1cee08b3b229a77991882594fe7250b66"],"fb03700c9690d16b15fb4f56f6ec36b128fd894e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d6f074e73200c07d54f242d3880a8da5a35ff97b":[],"f2126b84bd093fa3d921582a109a0ee578c28126":[],"7530de27b87b961b51f01bd1299b7004d46e8823":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","6784d0cc613dc1ee97030eaaa5e0754edc22d164"],"6784d0cc613dc1ee97030eaaa5e0754edc22d164":["c3d9a2e4ec5db2bc6cc023d9a1fd387ceb5b69b5","b7dfa64bc2074fb87d0ca70095a644c1ead107e1","28288370235ed02234a64753cdbf0c6ec096304a"],"2c30e4c1cee08b3b229a77991882594fe7250b66":["d9405f486872f1e416304dfe389741f4ee2f8a4d","c7869f64c874ebf7f317d22c00baf2b6857797a6","d6f074e73200c07d54f242d3880a8da5a35ff97b","f2126b84bd093fa3d921582a109a0ee578c28126"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","b7dfa64bc2074fb87d0ca70095a644c1ead107e1","c7869f64c874ebf7f317d22c00baf2b6857797a6","d6f074e73200c07d54f242d3880a8da5a35ff97b","f2126b84bd093fa3d921582a109a0ee578c28126","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}