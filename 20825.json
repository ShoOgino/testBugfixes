{"path":"lucene/test-framework/src/java/org/apache/lucene/codecs/lucene42/Lucene42DocValuesConsumer#writeFST(FieldInfo,Iterable[BytesRef]).mjava","commits":[{"id":"09a42395865f791464f0bd5f6118a4abbfa3eb8a","date":1376920143,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/lucene42/Lucene42DocValuesConsumer#writeFST(FieldInfo,Iterable[BytesRef]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene42/Lucene42DocValuesConsumer#writeFST(FieldInfo,Iterable[BytesRef]).mjava","sourceNew":"  private void writeFST(FieldInfo field, Iterable<BytesRef> values) throws IOException {\n    meta.writeVInt(field.number);\n    meta.writeByte(FST);\n    meta.writeLong(data.getFilePointer());\n    PositiveIntOutputs outputs = PositiveIntOutputs.getSingleton();\n    Builder<Long> builder = new Builder<Long>(INPUT_TYPE.BYTE1, outputs);\n    IntsRef scratch = new IntsRef();\n    long ord = 0;\n    for (BytesRef v : values) {\n      builder.add(Util.toIntsRef(v, scratch), ord);\n      ord++;\n    }\n    FST<Long> fst = builder.finish();\n    if (fst != null) {\n      fst.save(data);\n    }\n    meta.writeVLong(ord);\n  }\n\n","sourceOld":"  private void writeFST(FieldInfo field, Iterable<BytesRef> values) throws IOException {\n    meta.writeVInt(field.number);\n    meta.writeByte(FST);\n    meta.writeLong(data.getFilePointer());\n    PositiveIntOutputs outputs = PositiveIntOutputs.getSingleton();\n    Builder<Long> builder = new Builder<Long>(INPUT_TYPE.BYTE1, outputs);\n    IntsRef scratch = new IntsRef();\n    long ord = 0;\n    for (BytesRef v : values) {\n      builder.add(Util.toIntsRef(v, scratch), ord);\n      ord++;\n    }\n    FST<Long> fst = builder.finish();\n    if (fst != null) {\n      fst.save(data);\n    }\n    meta.writeVLong(ord);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff","date":1377034255,"type":1,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/lucene42/Lucene42DocValuesConsumer#writeFST(FieldInfo,Iterable[BytesRef]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene42/Lucene42DocValuesConsumer#writeFST(FieldInfo,Iterable[BytesRef]).mjava","sourceNew":"  private void writeFST(FieldInfo field, Iterable<BytesRef> values) throws IOException {\n    meta.writeVInt(field.number);\n    meta.writeByte(FST);\n    meta.writeLong(data.getFilePointer());\n    PositiveIntOutputs outputs = PositiveIntOutputs.getSingleton();\n    Builder<Long> builder = new Builder<Long>(INPUT_TYPE.BYTE1, outputs);\n    IntsRef scratch = new IntsRef();\n    long ord = 0;\n    for (BytesRef v : values) {\n      builder.add(Util.toIntsRef(v, scratch), ord);\n      ord++;\n    }\n    FST<Long> fst = builder.finish();\n    if (fst != null) {\n      fst.save(data);\n    }\n    meta.writeVLong(ord);\n  }\n\n","sourceOld":"  private void writeFST(FieldInfo field, Iterable<BytesRef> values) throws IOException {\n    meta.writeVInt(field.number);\n    meta.writeByte(FST);\n    meta.writeLong(data.getFilePointer());\n    PositiveIntOutputs outputs = PositiveIntOutputs.getSingleton();\n    Builder<Long> builder = new Builder<Long>(INPUT_TYPE.BYTE1, outputs);\n    IntsRef scratch = new IntsRef();\n    long ord = 0;\n    for (BytesRef v : values) {\n      builder.add(Util.toIntsRef(v, scratch), ord);\n      ord++;\n    }\n    FST<Long> fst = builder.finish();\n    if (fst != null) {\n      fst.save(data);\n    }\n    meta.writeVLong(ord);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3dffec77fb8f7d0e9ca4869dddd6af94528b4576","date":1377875202,"type":1,"author":"Han Jiang","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/lucene42/Lucene42DocValuesConsumer#writeFST(FieldInfo,Iterable[BytesRef]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene42/Lucene42DocValuesConsumer#writeFST(FieldInfo,Iterable[BytesRef]).mjava","sourceNew":"  private void writeFST(FieldInfo field, Iterable<BytesRef> values) throws IOException {\n    meta.writeVInt(field.number);\n    meta.writeByte(FST);\n    meta.writeLong(data.getFilePointer());\n    PositiveIntOutputs outputs = PositiveIntOutputs.getSingleton();\n    Builder<Long> builder = new Builder<Long>(INPUT_TYPE.BYTE1, outputs);\n    IntsRef scratch = new IntsRef();\n    long ord = 0;\n    for (BytesRef v : values) {\n      builder.add(Util.toIntsRef(v, scratch), ord);\n      ord++;\n    }\n    FST<Long> fst = builder.finish();\n    if (fst != null) {\n      fst.save(data);\n    }\n    meta.writeVLong(ord);\n  }\n\n","sourceOld":"  private void writeFST(FieldInfo field, Iterable<BytesRef> values) throws IOException {\n    meta.writeVInt(field.number);\n    meta.writeByte(FST);\n    meta.writeLong(data.getFilePointer());\n    PositiveIntOutputs outputs = PositiveIntOutputs.getSingleton();\n    Builder<Long> builder = new Builder<Long>(INPUT_TYPE.BYTE1, outputs);\n    IntsRef scratch = new IntsRef();\n    long ord = 0;\n    for (BytesRef v : values) {\n      builder.add(Util.toIntsRef(v, scratch), ord);\n      ord++;\n    }\n    FST<Long> fst = builder.finish();\n    if (fst != null) {\n      fst.save(data);\n    }\n    meta.writeVLong(ord);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/lucene42/Lucene42DocValuesConsumer#writeFST(FieldInfo,Iterable[BytesRef]).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/lucene42/Lucene42DocValuesConsumer#writeFST(FieldInfo,Iterable[BytesRef]).mjava","sourceNew":"  private void writeFST(FieldInfo field, Iterable<BytesRef> values) throws IOException {\n    meta.writeVInt(field.number);\n    meta.writeByte(FST);\n    meta.writeLong(data.getFilePointer());\n    PositiveIntOutputs outputs = PositiveIntOutputs.getSingleton();\n    Builder<Long> builder = new Builder<>(INPUT_TYPE.BYTE1, outputs);\n    IntsRef scratch = new IntsRef();\n    long ord = 0;\n    for (BytesRef v : values) {\n      builder.add(Util.toIntsRef(v, scratch), ord);\n      ord++;\n    }\n    FST<Long> fst = builder.finish();\n    if (fst != null) {\n      fst.save(data);\n    }\n    meta.writeVLong(ord);\n  }\n\n","sourceOld":"  private void writeFST(FieldInfo field, Iterable<BytesRef> values) throws IOException {\n    meta.writeVInt(field.number);\n    meta.writeByte(FST);\n    meta.writeLong(data.getFilePointer());\n    PositiveIntOutputs outputs = PositiveIntOutputs.getSingleton();\n    Builder<Long> builder = new Builder<Long>(INPUT_TYPE.BYTE1, outputs);\n    IntsRef scratch = new IntsRef();\n    long ord = 0;\n    for (BytesRef v : values) {\n      builder.add(Util.toIntsRef(v, scratch), ord);\n      ord++;\n    }\n    FST<Long> fst = builder.finish();\n    if (fst != null) {\n      fst.save(data);\n    }\n    meta.writeVLong(ord);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50","date":1407854805,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/codecs/lucene42/Lucene42DocValuesConsumer#writeFST(FieldInfo,Iterable[BytesRef]).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/lucene42/Lucene42DocValuesConsumer#writeFST(FieldInfo,Iterable[BytesRef]).mjava","sourceNew":"  private void writeFST(FieldInfo field, Iterable<BytesRef> values) throws IOException {\n    meta.writeVInt(field.number);\n    meta.writeByte(FST);\n    meta.writeLong(data.getFilePointer());\n    PositiveIntOutputs outputs = PositiveIntOutputs.getSingleton();\n    Builder<Long> builder = new Builder<>(INPUT_TYPE.BYTE1, outputs);\n    IntsRefBuilder scratch = new IntsRefBuilder();\n    long ord = 0;\n    for (BytesRef v : values) {\n      builder.add(Util.toIntsRef(v, scratch), ord);\n      ord++;\n    }\n    FST<Long> fst = builder.finish();\n    if (fst != null) {\n      fst.save(data);\n    }\n    meta.writeVLong(ord);\n  }\n\n","sourceOld":"  private void writeFST(FieldInfo field, Iterable<BytesRef> values) throws IOException {\n    meta.writeVInt(field.number);\n    meta.writeByte(FST);\n    meta.writeLong(data.getFilePointer());\n    PositiveIntOutputs outputs = PositiveIntOutputs.getSingleton();\n    Builder<Long> builder = new Builder<>(INPUT_TYPE.BYTE1, outputs);\n    IntsRef scratch = new IntsRef();\n    long ord = 0;\n    for (BytesRef v : values) {\n      builder.add(Util.toIntsRef(v, scratch), ord);\n      ord++;\n    }\n    FST<Long> fst = builder.finish();\n    if (fst != null) {\n      fst.save(data);\n    }\n    meta.writeVLong(ord);\n  }\n\n","bugFix":["f366ce28775e2b8ea4e06355009471328711666d"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cc45c615dbb82bf79d5f9550286098367874fbf","date":1409571423,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/backward-codecs/src/test/org/apache/lucene/codecs/lucene42/Lucene42DocValuesConsumer#writeFST(FieldInfo,Iterable[BytesRef]).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/lucene42/Lucene42DocValuesConsumer#writeFST(FieldInfo,Iterable[BytesRef]).mjava","sourceNew":"  private void writeFST(FieldInfo field, Iterable<BytesRef> values) throws IOException {\n    meta.writeVInt(field.number);\n    meta.writeByte(FST);\n    meta.writeLong(data.getFilePointer());\n    PositiveIntOutputs outputs = PositiveIntOutputs.getSingleton();\n    Builder<Long> builder = new Builder<>(INPUT_TYPE.BYTE1, outputs);\n    IntsRefBuilder scratch = new IntsRefBuilder();\n    long ord = 0;\n    for (BytesRef v : values) {\n      builder.add(Util.toIntsRef(v, scratch), ord);\n      ord++;\n    }\n    FST<Long> fst = builder.finish();\n    if (fst != null) {\n      fst.save(data);\n    }\n    meta.writeVLong(ord);\n  }\n\n","sourceOld":"  private void writeFST(FieldInfo field, Iterable<BytesRef> values) throws IOException {\n    meta.writeVInt(field.number);\n    meta.writeByte(FST);\n    meta.writeLong(data.getFilePointer());\n    PositiveIntOutputs outputs = PositiveIntOutputs.getSingleton();\n    Builder<Long> builder = new Builder<>(INPUT_TYPE.BYTE1, outputs);\n    IntsRefBuilder scratch = new IntsRefBuilder();\n    long ord = 0;\n    for (BytesRef v : values) {\n      builder.add(Util.toIntsRef(v, scratch), ord);\n      ord++;\n    }\n    FST<Long> fst = builder.finish();\n    if (fst != null) {\n      fst.save(data);\n    }\n    meta.writeVLong(ord);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"402ad3ddc9da7b70da1b167667a60ece6a1381fb","date":1409656478,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/backward-codecs/src/test/org/apache/lucene/codecs/lucene42/Lucene42DocValuesConsumer#writeFST(FieldInfo,Iterable[BytesRef]).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/codecs/lucene42/Lucene42DocValuesConsumer#writeFST(FieldInfo,Iterable[BytesRef]).mjava","sourceNew":"  private void writeFST(FieldInfo field, Iterable<BytesRef> values) throws IOException {\n    meta.writeVInt(field.number);\n    meta.writeByte(FST);\n    meta.writeLong(data.getFilePointer());\n    PositiveIntOutputs outputs = PositiveIntOutputs.getSingleton();\n    Builder<Long> builder = new Builder<>(INPUT_TYPE.BYTE1, outputs);\n    IntsRefBuilder scratch = new IntsRefBuilder();\n    long ord = 0;\n    for (BytesRef v : values) {\n      builder.add(Util.toIntsRef(v, scratch), ord);\n      ord++;\n    }\n    FST<Long> fst = builder.finish();\n    if (fst != null) {\n      fst.save(data);\n    }\n    meta.writeVLong(ord);\n  }\n\n","sourceOld":"  private void writeFST(FieldInfo field, Iterable<BytesRef> values) throws IOException {\n    meta.writeVInt(field.number);\n    meta.writeByte(FST);\n    meta.writeLong(data.getFilePointer());\n    PositiveIntOutputs outputs = PositiveIntOutputs.getSingleton();\n    Builder<Long> builder = new Builder<>(INPUT_TYPE.BYTE1, outputs);\n    IntsRefBuilder scratch = new IntsRefBuilder();\n    long ord = 0;\n    for (BytesRef v : values) {\n      builder.add(Util.toIntsRef(v, scratch), ord);\n      ord++;\n    }\n    FST<Long> fst = builder.finish();\n    if (fst != null) {\n      fst.save(data);\n    }\n    meta.writeVLong(ord);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff"],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4cc45c615dbb82bf79d5f9550286098367874fbf":["7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50"],"7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","09a42395865f791464f0bd5f6118a4abbfa3eb8a"],"09a42395865f791464f0bd5f6118a4abbfa3eb8a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"402ad3ddc9da7b70da1b167667a60ece6a1381fb":["7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50","4cc45c615dbb82bf79d5f9550286098367874fbf"]},"commit2Childs":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50"],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff","09a42395865f791464f0bd5f6118a4abbfa3eb8a"],"4cc45c615dbb82bf79d5f9550286098367874fbf":["402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff":["634f330c54fd3f9f491d52036dc3f40b4f4d8934","3dffec77fb8f7d0e9ca4869dddd6af94528b4576"],"7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50":["4cc45c615dbb82bf79d5f9550286098367874fbf","402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"09a42395865f791464f0bd5f6118a4abbfa3eb8a":["e70ec9cf78e14cbbf13fd0e1a9aefa8081c325ff"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"402ad3ddc9da7b70da1b167667a60ece6a1381fb":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}