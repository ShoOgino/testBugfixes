{"path":"lucene/src/java/org/apache/lucene/index/BaseMultiReader#readerIndex(int).mjava","commits":[{"id":"6e2df1cc3e8621670ff46d098e43b7dd3f66eaf4","date":1323543613,"type":1,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/BaseMultiReader#readerIndex(int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DirectoryReader#readerIndex(int).mjava","sourceNew":"  /** Helper method for subclasses to get the corresponding reader for a doc ID */\n  protected final int readerIndex(int n) {    // find reader for doc n:\n    return readerIndex(n, this.starts, this.subReaders.length);\n  }\n\n","sourceOld":"  private int readerIndex(int n) {    // find reader for doc n:\n    return readerIndex(n, this.starts, this.subReaders.length);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"16ff2a12177d39097e8fd5793e7f7b49c435a953","date":1323614672,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/BaseMultiReader#readerIndex(int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/BaseMultiReader#readerIndex(int).mjava","sourceNew":"  /** Helper method for subclasses to get the corresponding reader for a doc ID */\n  protected final int readerIndex(int docID) {\n    if (docID < 0 || docID >= maxDoc) {\n      throw new IllegalArgumentException(\"docID must be >= 0 and < maxDoc=\" + maxDoc + \" (got docID=\" + docID + \")\");\n    }\n    return ReaderUtil.subIndex(docID, this.starts);\n  }\n\n","sourceOld":"  /** Helper method for subclasses to get the corresponding reader for a doc ID */\n  protected final int readerIndex(int n) {    // find reader for doc n:\n    return readerIndex(n, this.starts, this.subReaders.length);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"93ccd971aca7fb61b7f1b946e44714cfc80bfc7c","date":1323720782,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/BaseMultiReader#readerIndex(int).mjava","pathOld":"/dev/null","sourceNew":"  /** Helper method for subclasses to get the corresponding reader for a doc ID */\n  protected final int readerIndex(int docID) {\n    if (docID < 0 || docID >= maxDoc) {\n      throw new IllegalArgumentException(\"docID must be >= 0 and < maxDoc=\" + maxDoc + \" (got docID=\" + docID + \")\");\n    }\n    return ReaderUtil.subIndex(docID, this.starts);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/BaseMultiReader#readerIndex(int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/BaseMultiReader#readerIndex(int).mjava","sourceNew":"  /** Helper method for subclasses to get the corresponding reader for a doc ID */\n  protected final int readerIndex(int docID) {\n    if (docID < 0 || docID >= maxDoc) {\n      throw new IllegalArgumentException(\"docID must be >= 0 and < maxDoc=\" + maxDoc + \" (got docID=\" + docID + \")\");\n    }\n    return ReaderUtil.subIndex(docID, this.starts);\n  }\n\n","sourceOld":"  /** Helper method for subclasses to get the corresponding reader for a doc ID */\n  protected final int readerIndex(int docID) {\n    if (docID < 0 || docID >= maxDoc) {\n      throw new IllegalArgumentException(\"docID must be >= 0 and < maxDoc=\" + maxDoc + \" (got docID=\" + docID + \")\");\n    }\n    return ReaderUtil.subIndex(docID, this.starts);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6e2df1cc3e8621670ff46d098e43b7dd3f66eaf4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["16ff2a12177d39097e8fd5793e7f7b49c435a953"],"93ccd971aca7fb61b7f1b946e44714cfc80bfc7c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","16ff2a12177d39097e8fd5793e7f7b49c435a953"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"16ff2a12177d39097e8fd5793e7f7b49c435a953":["6e2df1cc3e8621670ff46d098e43b7dd3f66eaf4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"6e2df1cc3e8621670ff46d098e43b7dd3f66eaf4":["16ff2a12177d39097e8fd5793e7f7b49c435a953"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"93ccd971aca7fb61b7f1b946e44714cfc80bfc7c":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6e2df1cc3e8621670ff46d098e43b7dd3f66eaf4","93ccd971aca7fb61b7f1b946e44714cfc80bfc7c"],"16ff2a12177d39097e8fd5793e7f7b49c435a953":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","93ccd971aca7fb61b7f1b946e44714cfc80bfc7c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["93ccd971aca7fb61b7f1b946e44714cfc80bfc7c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}