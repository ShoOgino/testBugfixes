{"path":"solr/test-framework/src/java/org/apache/solr/util/TestHarness#getCore().mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/TestHarness#getCore().mjava","pathOld":"solr/src/test-framework/org/apache/solr/util/TestHarness#getCore().mjava","sourceNew":"  public SolrCore getCore() {\n    return core;\n  }\n\n","sourceOld":"  public SolrCore getCore() {\n    return core;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/TestHarness#getCore().mjava","pathOld":"solr/src/test-framework/org/apache/solr/util/TestHarness#getCore().mjava","sourceNew":"  public SolrCore getCore() {\n    return core;\n  }\n\n","sourceOld":"  public SolrCore getCore() {\n    return core;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/TestHarness#getCore().mjava","pathOld":"solr/src/test-framework/org/apache/solr/util/TestHarness#getCore().mjava","sourceNew":"  public SolrCore getCore() {\n    return core;\n  }\n\n","sourceOld":"  public SolrCore getCore() {\n    return core;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b1dcb481c1d36eb918fd5685a875aa54cd72e400","date":1342796663,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/TestHarness#getCore().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/util/TestHarness#getCore().mjava","sourceNew":"  /** Gets a core that does not have it's refcount incremented (i.e. there is no need to\n   * close when done).  This is not MT safe in conjunction with reloads!\n   */\n  public SolrCore getCore() {\n    // get the core & decrease its refcount:\n    // the container holds the core for the harness lifetime\n    SolrCore core = container.getCore(coreName);\n    if (core != null)\n      core.close();\n    return core;\n  }\n\n","sourceOld":"  public SolrCore getCore() {\n    return core;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4b51f65902cc2d20ddeb7a5b949aaddf990f31a7","date":1343059585,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/TestHarness#getCore().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/util/TestHarness#getCore().mjava","sourceNew":"  /** Gets a core that does not have it's refcount incremented (i.e. there is no need to\n   * close when done).  This is not MT safe in conjunction with reloads!\n   */\n  public SolrCore getCore() {\n    // get the core & decrease its refcount:\n    // the container holds the core for the harness lifetime\n    SolrCore core = container.getCore(coreName);\n    if (core != null)\n      core.close();\n    return core;\n  }\n\n","sourceOld":"  public SolrCore getCore() {\n    return core;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aba371508186796cc6151d8223a5b4e16d02e26e","date":1343474871,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/TestHarness#getCore().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/util/TestHarness#getCore().mjava","sourceNew":"  /** Gets a core that does not have it's refcount incremented (i.e. there is no need to\n   * close when done).  This is not MT safe in conjunction with reloads!\n   */\n  public SolrCore getCore() {\n    // get the core & decrease its refcount:\n    // the container holds the core for the harness lifetime\n    SolrCore core = container.getCore(coreName);\n    if (core != null)\n      core.close();\n    return core;\n  }\n\n","sourceOld":"  public SolrCore getCore() {\n    return core;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1","date":1419400138,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/TestHarness#getCore().mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/util/TestHarness#getCore().mjava","sourceNew":"  /** Gets a core that does not have its refcount incremented (i.e. there is no need to\n   * close when done).  This is not MT safe in conjunction with reloads!\n   */\n  public SolrCore getCore() {\n    // get the core & decrease its refcount:\n    // the container holds the core for the harness lifetime\n    SolrCore core = container.getCore(coreName);\n    if (core != null)\n      core.close();\n    return core;\n  }\n\n","sourceOld":"  /** Gets a core that does not have it's refcount incremented (i.e. there is no need to\n   * close when done).  This is not MT safe in conjunction with reloads!\n   */\n  public SolrCore getCore() {\n    // get the core & decrease its refcount:\n    // the container holds the core for the harness lifetime\n    SolrCore core = container.getCore(coreName);\n    if (core != null)\n      core.close();\n    return core;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1":["b1dcb481c1d36eb918fd5685a875aa54cd72e400"],"aba371508186796cc6151d8223a5b4e16d02e26e":["c26f00b574427b55127e869b935845554afde1fa","b1dcb481c1d36eb918fd5685a875aa54cd72e400"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4b51f65902cc2d20ddeb7a5b949aaddf990f31a7":["c26f00b574427b55127e869b935845554afde1fa","b1dcb481c1d36eb918fd5685a875aa54cd72e400"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b1dcb481c1d36eb918fd5685a875aa54cd72e400":["c26f00b574427b55127e869b935845554afde1fa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1"]},"commit2Childs":{"8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"aba371508186796cc6151d8223a5b4e16d02e26e":[],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["aba371508186796cc6151d8223a5b4e16d02e26e","4b51f65902cc2d20ddeb7a5b949aaddf990f31a7","b1dcb481c1d36eb918fd5685a875aa54cd72e400"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"4b51f65902cc2d20ddeb7a5b949aaddf990f31a7":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"b1dcb481c1d36eb918fd5685a875aa54cd72e400":["8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1","aba371508186796cc6151d8223a5b4e16d02e26e","4b51f65902cc2d20ddeb7a5b949aaddf990f31a7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["aba371508186796cc6151d8223a5b4e16d02e26e","4b51f65902cc2d20ddeb7a5b949aaddf990f31a7","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}