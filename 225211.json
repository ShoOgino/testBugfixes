{"path":"lucene/core/src/java/org/apache/lucene/search/spans/NearSpansUnordered#NearSpansUnordered(SpanNearQuery,AtomicReaderContext,Bits,Map[Term,TermContext]).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/spans/NearSpansUnordered#NearSpansUnordered(SpanNearQuery,AtomicReaderContext,Bits,Map[Term,TermContext]).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/spans/NearSpansUnordered#NearSpansUnordered(SpanNearQuery,AtomicReaderContext,Bits,Map[Term,TermContext]).mjava","sourceNew":"  public NearSpansUnordered(SpanNearQuery query, AtomicReaderContext context, Bits acceptDocs, Map<Term,TermContext> termContexts)\n    throws IOException {\n    this.query = query;\n    this.slop = query.getSlop();\n\n    SpanQuery[] clauses = query.getClauses();\n    queue = new CellQueue(clauses.length);\n    subSpans = new Spans[clauses.length];    \n    for (int i = 0; i < clauses.length; i++) {\n      SpansCell cell =\n        new SpansCell(clauses[i].getSpans(context, acceptDocs, termContexts), i);\n      ordered.add(cell);\n      subSpans[i] = cell.spans;\n    }\n  }\n\n","sourceOld":"  public NearSpansUnordered(SpanNearQuery query, AtomicReaderContext context, Bits acceptDocs, Map<Term,TermContext> termContexts)\n    throws IOException {\n    this.query = query;\n    this.slop = query.getSlop();\n\n    SpanQuery[] clauses = query.getClauses();\n    queue = new CellQueue(clauses.length);\n    subSpans = new Spans[clauses.length];    \n    for (int i = 0; i < clauses.length; i++) {\n      SpansCell cell =\n        new SpansCell(clauses[i].getSpans(context, acceptDocs, termContexts), i);\n      ordered.add(cell);\n      subSpans[i] = cell.spans;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c9fb5f46e264daf5ba3860defe623a89d202dd87","date":1411516315,"type":4,"author":"Ryan Ernst","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/search/spans/NearSpansUnordered#NearSpansUnordered(SpanNearQuery,AtomicReaderContext,Bits,Map[Term,TermContext]).mjava","sourceNew":null,"sourceOld":"  public NearSpansUnordered(SpanNearQuery query, AtomicReaderContext context, Bits acceptDocs, Map<Term,TermContext> termContexts)\n    throws IOException {\n    this.query = query;\n    this.slop = query.getSlop();\n\n    SpanQuery[] clauses = query.getClauses();\n    queue = new CellQueue(clauses.length);\n    subSpans = new Spans[clauses.length];    \n    for (int i = 0; i < clauses.length; i++) {\n      SpansCell cell =\n        new SpansCell(clauses[i].getSpans(context, acceptDocs, termContexts), i);\n      ordered.add(cell);\n      subSpans[i] = cell.spans;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c9fb5f46e264daf5ba3860defe623a89d202dd87"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}