{"path":"lucene/contrib/db/bdb/src/java/org/apache/lucene/store/db/File#delete(DbDirectory).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/db/bdb/src/java/org/apache/lucene/store/db/File#delete(DbDirectory).mjava","pathOld":"contrib/db/bdb/src/java/org/apache/lucene/store/db/File#delete(DbDirectory).mjava","sourceNew":"    protected void delete(DbDirectory directory)\n        throws IOException\n    {\n        if (!exists(directory))\n            throw new IOException(\"File does not exist: \" + getName());\n\n        Dbc cursor = null;\n\n        try {\n            try {\n                byte[] bytes = getKey();\n                int ulen = bytes.length + 8;\n                byte[] cursorBytes = new byte[ulen];\n                DatabaseEntry cursorKey = new DatabaseEntry(cursorBytes);\n                DatabaseEntry cursorData = new DatabaseEntry((byte[]) null);\n                Db files = directory.files;\n                Db blocks = directory.blocks;\n                DbTxn txn = directory.txn;\n                int flags = directory.flags;\n\n                System.arraycopy(bytes, 0, cursorBytes, 0, bytes.length);\n                cursorKey.setUserBuffer(ulen, true);\n                cursorData.setPartial(true);\n\n                cursor = blocks.cursor(txn, flags);\n\n                if (cursor.get(cursorKey, cursorData,\n                               DbConstants.DB_SET_RANGE | flags) != DbConstants.DB_NOTFOUND)\n                {\n                    cursor.del(0);\n\n                  outer:\n                    while (cursor.get(cursorKey, cursorData,\n                                      DbConstants.DB_NEXT | flags) != DbConstants.DB_NOTFOUND)\n                    {\n                        for (int i = 0; i < bytes.length; i++)\n                            if (bytes[i] != cursorBytes[i])\n                                break outer;\n\n                        cursor.del(0);\n                    }\n                }\n\n                files.del(txn, key, 0);\n            } finally {\n                if (cursor != null)\n                    cursor.close();\n            }\n        } catch (DatabaseException e) {\n            throw new IOException(e.getMessage());\n        }\n    }\n\n","sourceOld":"    protected void delete(DbDirectory directory)\n        throws IOException\n    {\n        if (!exists(directory))\n            throw new IOException(\"File does not exist: \" + getName());\n\n        Dbc cursor = null;\n\n        try {\n            try {\n                byte[] bytes = getKey();\n                int ulen = bytes.length + 8;\n                byte[] cursorBytes = new byte[ulen];\n                DatabaseEntry cursorKey = new DatabaseEntry(cursorBytes);\n                DatabaseEntry cursorData = new DatabaseEntry((byte[]) null);\n                Db files = directory.files;\n                Db blocks = directory.blocks;\n                DbTxn txn = directory.txn;\n                int flags = directory.flags;\n\n                System.arraycopy(bytes, 0, cursorBytes, 0, bytes.length);\n                cursorKey.setUserBuffer(ulen, true);\n                cursorData.setPartial(true);\n\n                cursor = blocks.cursor(txn, flags);\n\n                if (cursor.get(cursorKey, cursorData,\n                               DbConstants.DB_SET_RANGE | flags) != DbConstants.DB_NOTFOUND)\n                {\n                    cursor.del(0);\n\n                  outer:\n                    while (cursor.get(cursorKey, cursorData,\n                                      DbConstants.DB_NEXT | flags) != DbConstants.DB_NOTFOUND)\n                    {\n                        for (int i = 0; i < bytes.length; i++)\n                            if (bytes[i] != cursorBytes[i])\n                                break outer;\n\n                        cursor.del(0);\n                    }\n                }\n\n                files.del(txn, key, 0);\n            } finally {\n                if (cursor != null)\n                    cursor.close();\n            }\n        } catch (DatabaseException e) {\n            throw new IOException(e.getMessage());\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a55c46ea262f9033bd9ab60542dea4b38abef33","date":1306109444,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/contrib/db/bdb/src/java/org/apache/lucene/store/db/File#delete(DbDirectory).mjava","sourceNew":null,"sourceOld":"    protected void delete(DbDirectory directory)\n        throws IOException\n    {\n        if (!exists(directory))\n            throw new IOException(\"File does not exist: \" + getName());\n\n        Dbc cursor = null;\n\n        try {\n            try {\n                byte[] bytes = getKey();\n                int ulen = bytes.length + 8;\n                byte[] cursorBytes = new byte[ulen];\n                DatabaseEntry cursorKey = new DatabaseEntry(cursorBytes);\n                DatabaseEntry cursorData = new DatabaseEntry((byte[]) null);\n                Db files = directory.files;\n                Db blocks = directory.blocks;\n                DbTxn txn = directory.txn;\n                int flags = directory.flags;\n\n                System.arraycopy(bytes, 0, cursorBytes, 0, bytes.length);\n                cursorKey.setUserBuffer(ulen, true);\n                cursorData.setPartial(true);\n\n                cursor = blocks.cursor(txn, flags);\n\n                if (cursor.get(cursorKey, cursorData,\n                               DbConstants.DB_SET_RANGE | flags) != DbConstants.DB_NOTFOUND)\n                {\n                    cursor.del(0);\n\n                  outer:\n                    while (cursor.get(cursorKey, cursorData,\n                                      DbConstants.DB_NEXT | flags) != DbConstants.DB_NOTFOUND)\n                    {\n                        for (int i = 0; i < bytes.length; i++)\n                            if (bytes[i] != cursorBytes[i])\n                                break outer;\n\n                        cursor.del(0);\n                    }\n                }\n\n                files.del(txn, key, 0);\n            } finally {\n                if (cursor != null)\n                    cursor.close();\n            }\n        } catch (DatabaseException e) {\n            throw new IOException(e.getMessage());\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae132b768aece5bf21cda14e2f17fba66eb6f7d6","date":1306128032,"type":4,"author":"Steven Rowe","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/contrib/db/bdb/src/java/org/apache/lucene/store/db/File#delete(DbDirectory).mjava","sourceNew":null,"sourceOld":"    protected void delete(DbDirectory directory)\n        throws IOException\n    {\n        if (!exists(directory))\n            throw new IOException(\"File does not exist: \" + getName());\n\n        Dbc cursor = null;\n\n        try {\n            try {\n                byte[] bytes = getKey();\n                int ulen = bytes.length + 8;\n                byte[] cursorBytes = new byte[ulen];\n                DatabaseEntry cursorKey = new DatabaseEntry(cursorBytes);\n                DatabaseEntry cursorData = new DatabaseEntry((byte[]) null);\n                Db files = directory.files;\n                Db blocks = directory.blocks;\n                DbTxn txn = directory.txn;\n                int flags = directory.flags;\n\n                System.arraycopy(bytes, 0, cursorBytes, 0, bytes.length);\n                cursorKey.setUserBuffer(ulen, true);\n                cursorData.setPartial(true);\n\n                cursor = blocks.cursor(txn, flags);\n\n                if (cursor.get(cursorKey, cursorData,\n                               DbConstants.DB_SET_RANGE | flags) != DbConstants.DB_NOTFOUND)\n                {\n                    cursor.del(0);\n\n                  outer:\n                    while (cursor.get(cursorKey, cursorData,\n                                      DbConstants.DB_NEXT | flags) != DbConstants.DB_NOTFOUND)\n                    {\n                        for (int i = 0; i < bytes.length; i++)\n                            if (bytes[i] != cursorBytes[i])\n                                break outer;\n\n                        cursor.del(0);\n                    }\n                }\n\n                files.del(txn, key, 0);\n            } finally {\n                if (cursor != null)\n                    cursor.close();\n            }\n        } catch (DatabaseException e) {\n            throw new IOException(e.getMessage());\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5c698c0cb88bac4bcd36a1b1001a0c6a2163ea2a","date":1306150983,"type":4,"author":"Simon Willnauer","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/contrib/db/bdb/src/java/org/apache/lucene/store/db/File#delete(DbDirectory).mjava","sourceNew":null,"sourceOld":"    protected void delete(DbDirectory directory)\n        throws IOException\n    {\n        if (!exists(directory))\n            throw new IOException(\"File does not exist: \" + getName());\n\n        Dbc cursor = null;\n\n        try {\n            try {\n                byte[] bytes = getKey();\n                int ulen = bytes.length + 8;\n                byte[] cursorBytes = new byte[ulen];\n                DatabaseEntry cursorKey = new DatabaseEntry(cursorBytes);\n                DatabaseEntry cursorData = new DatabaseEntry((byte[]) null);\n                Db files = directory.files;\n                Db blocks = directory.blocks;\n                DbTxn txn = directory.txn;\n                int flags = directory.flags;\n\n                System.arraycopy(bytes, 0, cursorBytes, 0, bytes.length);\n                cursorKey.setUserBuffer(ulen, true);\n                cursorData.setPartial(true);\n\n                cursor = blocks.cursor(txn, flags);\n\n                if (cursor.get(cursorKey, cursorData,\n                               DbConstants.DB_SET_RANGE | flags) != DbConstants.DB_NOTFOUND)\n                {\n                    cursor.del(0);\n\n                  outer:\n                    while (cursor.get(cursorKey, cursorData,\n                                      DbConstants.DB_NEXT | flags) != DbConstants.DB_NOTFOUND)\n                    {\n                        for (int i = 0; i < bytes.length; i++)\n                            if (bytes[i] != cursorBytes[i])\n                                break outer;\n\n                        cursor.del(0);\n                    }\n                }\n\n                files.del(txn, key, 0);\n            } finally {\n                if (cursor != null)\n                    cursor.close();\n            }\n        } catch (DatabaseException e) {\n            throw new IOException(e.getMessage());\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ae132b768aece5bf21cda14e2f17fba66eb6f7d6":["9454a6510e2db155fb01faa5c049b06ece95fab9","3a55c46ea262f9033bd9ab60542dea4b38abef33"],"5c698c0cb88bac4bcd36a1b1001a0c6a2163ea2a":["9454a6510e2db155fb01faa5c049b06ece95fab9","3a55c46ea262f9033bd9ab60542dea4b38abef33"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3a55c46ea262f9033bd9ab60542dea4b38abef33":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a55c46ea262f9033bd9ab60542dea4b38abef33"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"ae132b768aece5bf21cda14e2f17fba66eb6f7d6":[],"5c698c0cb88bac4bcd36a1b1001a0c6a2163ea2a":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"3a55c46ea262f9033bd9ab60542dea4b38abef33":["ae132b768aece5bf21cda14e2f17fba66eb6f7d6","5c698c0cb88bac4bcd36a1b1001a0c6a2163ea2a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["ae132b768aece5bf21cda14e2f17fba66eb6f7d6","5c698c0cb88bac4bcd36a1b1001a0c6a2163ea2a","3a55c46ea262f9033bd9ab60542dea4b38abef33"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ae132b768aece5bf21cda14e2f17fba66eb6f7d6","5c698c0cb88bac4bcd36a1b1001a0c6a2163ea2a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}