{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/FacetStream#appendJson(StringBuilder,Bucket[],Metric[],FieldComparator[],int,int).mjava","commits":[{"id":"79509167584beb75c0b777d2b701adeb1f06d885","date":1441841855,"type":0,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/FacetStream#appendJson(StringBuilder,Bucket[],Metric[],FieldComparator[],int,int).mjava","pathOld":"/dev/null","sourceNew":"  private void appendJson(StringBuilder buf,\n                          Bucket[] _buckets,\n                          Metric[] _metrics,\n                          FieldComparator[] _sorts,\n                          int _limit,\n                          int level) {\n    buf.append('\"');\n    buf.append(_buckets[level].toString());\n    buf.append('\"');\n    buf.append(\":{\");\n    buf.append(\"\\\"type\\\":\\\"terms\\\"\");\n    buf.append(\",\\\"field\\\":\\\"\"+_buckets[level].toString()+\"\\\"\");\n    buf.append(\",\\\"limit\\\":\"+_limit);\n    buf.append(\",\\\"sort\\\":{\\\"\"+getFacetSort(_sorts[level].getFieldName(), _metrics)+\"\\\":\\\"\"+_sorts[level].getOrder()+\"\\\"}\");\n\n    buf.append(\",\\\"facet\\\":{\");\n    int metricCount = 0;\n    for(Metric metric : _metrics) {\n      String identifier = metric.getIdentifier();\n      if(!identifier.startsWith(\"count(\")) {\n        if(metricCount>0) {\n          buf.append(\",\");\n        }\n        buf.append(\"\\\"facet_\" + metricCount + \"\\\":\\\"\" +identifier+\"\\\"\");\n        ++metricCount;\n      }\n    }\n    ++level;\n    if(level < _buckets.length) {\n      if(metricCount>0) {\n        buf.append(\",\");\n      }\n      appendJson(buf, _buckets, _metrics, _sorts, _limit, level);\n    }\n    buf.append(\"}}\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"333d804f5abfaf34c57493306a4cb2e01e55662d","date":1447206304,"type":3,"author":"Dennis Gove","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/FacetStream#appendJson(StringBuilder,Bucket[],Metric[],FieldComparator[],int,int).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/FacetStream#appendJson(StringBuilder,Bucket[],Metric[],FieldComparator[],int,int).mjava","sourceNew":"  private void appendJson(StringBuilder buf,\n                          Bucket[] _buckets,\n                          Metric[] _metrics,\n                          FieldComparator[] _sorts,\n                          int _limit,\n                          int level) {\n    buf.append('\"');\n    buf.append(_buckets[level].toString());\n    buf.append('\"');\n    buf.append(\":{\");\n    buf.append(\"\\\"type\\\":\\\"terms\\\"\");\n    buf.append(\",\\\"field\\\":\\\"\"+_buckets[level].toString()+\"\\\"\");\n    buf.append(\",\\\"limit\\\":\"+_limit);\n    buf.append(\",\\\"sort\\\":{\\\"\"+getFacetSort(_sorts[level].getLeftFieldName(), _metrics)+\"\\\":\\\"\"+_sorts[level].getOrder()+\"\\\"}\");\n\n    buf.append(\",\\\"facet\\\":{\");\n    int metricCount = 0;\n    for(Metric metric : _metrics) {\n      String identifier = metric.getIdentifier();\n      if(!identifier.startsWith(\"count(\")) {\n        if(metricCount>0) {\n          buf.append(\",\");\n        }\n        buf.append(\"\\\"facet_\" + metricCount + \"\\\":\\\"\" +identifier+\"\\\"\");\n        ++metricCount;\n      }\n    }\n    ++level;\n    if(level < _buckets.length) {\n      if(metricCount>0) {\n        buf.append(\",\");\n      }\n      appendJson(buf, _buckets, _metrics, _sorts, _limit, level);\n    }\n    buf.append(\"}}\");\n  }\n\n","sourceOld":"  private void appendJson(StringBuilder buf,\n                          Bucket[] _buckets,\n                          Metric[] _metrics,\n                          FieldComparator[] _sorts,\n                          int _limit,\n                          int level) {\n    buf.append('\"');\n    buf.append(_buckets[level].toString());\n    buf.append('\"');\n    buf.append(\":{\");\n    buf.append(\"\\\"type\\\":\\\"terms\\\"\");\n    buf.append(\",\\\"field\\\":\\\"\"+_buckets[level].toString()+\"\\\"\");\n    buf.append(\",\\\"limit\\\":\"+_limit);\n    buf.append(\",\\\"sort\\\":{\\\"\"+getFacetSort(_sorts[level].getFieldName(), _metrics)+\"\\\":\\\"\"+_sorts[level].getOrder()+\"\\\"}\");\n\n    buf.append(\",\\\"facet\\\":{\");\n    int metricCount = 0;\n    for(Metric metric : _metrics) {\n      String identifier = metric.getIdentifier();\n      if(!identifier.startsWith(\"count(\")) {\n        if(metricCount>0) {\n          buf.append(\",\");\n        }\n        buf.append(\"\\\"facet_\" + metricCount + \"\\\":\\\"\" +identifier+\"\\\"\");\n        ++metricCount;\n      }\n    }\n    ++level;\n    if(level < _buckets.length) {\n      if(metricCount>0) {\n        buf.append(\",\");\n      }\n      appendJson(buf, _buckets, _metrics, _sorts, _limit, level);\n    }\n    buf.append(\"}}\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"011d43366b2da54d1652d93e7ec6412848eeb009","date":1541521420,"type":5,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/FacetStream#appendJson(StringBuilder,Bucket[],Metric[],FieldComparator[],int,String,boolean,int).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/FacetStream#appendJson(StringBuilder,Bucket[],Metric[],FieldComparator[],int,int).mjava","sourceNew":"  private void appendJson(StringBuilder buf,\n                          Bucket[] _buckets,\n                          Metric[] _metrics,\n                          FieldComparator[] _sorts,\n                          int _limit,\n                          String method,\n                          boolean refine,\n                          int level) {\n    buf.append('\"');\n    buf.append(_buckets[level].toString());\n    buf.append('\"');\n    buf.append(\":{\");\n    buf.append(\"\\\"type\\\":\\\"terms\\\"\");\n    buf.append(\",\\\"field\\\":\\\"\"+_buckets[level].toString()+\"\\\"\");\n    buf.append(\",\\\"limit\\\":\"+_limit);\n\n    if(refine) {\n      buf.append(\",\\\"refine\\\":true\");\n    }\n\n    if(method != null) {\n      buf.append(\",\\\"method\\\":\\\"\"+method+\"\\\"\");\n    }\n\n    String fsort = getFacetSort(_sorts[level].getLeftFieldName(), _metrics);\n\n    buf.append(\",\\\"sort\\\":{\\\"\"+fsort+\"\\\":\\\"\"+_sorts[level].getOrder()+\"\\\"}\");\n\n    buf.append(\",\\\"facet\\\":{\");\n    int metricCount = 0;\n\n\n    ++level;\n    for(Metric metric : _metrics) {\n      //Only compute the metric if it's a leaf node or if the branch level sort equals is the metric\n      String facetKey = \"facet_\"+metricCount;\n      if(level == _buckets.length || fsort.equals(facetKey) ) {\n        String identifier = metric.getIdentifier();\n        if (!identifier.startsWith(\"count(\")) {\n          if (metricCount > 0) {\n            buf.append(\",\");\n          }\n          buf.append(\"\\\"\"+ facetKey + \"\\\":\\\"\" + identifier + \"\\\"\");\n          ++metricCount;\n        }\n      }\n    }\n\n    if(level < _buckets.length) {\n      if(metricCount>0) {\n        buf.append(\",\");\n      }\n      appendJson(buf, _buckets, _metrics, _sorts, _limit, method, refine, level);\n    }\n    buf.append(\"}}\");\n  }\n\n","sourceOld":"  private void appendJson(StringBuilder buf,\n                          Bucket[] _buckets,\n                          Metric[] _metrics,\n                          FieldComparator[] _sorts,\n                          int _limit,\n                          int level) {\n    buf.append('\"');\n    buf.append(_buckets[level].toString());\n    buf.append('\"');\n    buf.append(\":{\");\n    buf.append(\"\\\"type\\\":\\\"terms\\\"\");\n    buf.append(\",\\\"field\\\":\\\"\"+_buckets[level].toString()+\"\\\"\");\n    buf.append(\",\\\"limit\\\":\"+_limit);\n    buf.append(\",\\\"sort\\\":{\\\"\"+getFacetSort(_sorts[level].getLeftFieldName(), _metrics)+\"\\\":\\\"\"+_sorts[level].getOrder()+\"\\\"}\");\n\n    buf.append(\",\\\"facet\\\":{\");\n    int metricCount = 0;\n    for(Metric metric : _metrics) {\n      String identifier = metric.getIdentifier();\n      if(!identifier.startsWith(\"count(\")) {\n        if(metricCount>0) {\n          buf.append(\",\");\n        }\n        buf.append(\"\\\"facet_\" + metricCount + \"\\\":\\\"\" +identifier+\"\\\"\");\n        ++metricCount;\n      }\n    }\n    ++level;\n    if(level < _buckets.length) {\n      if(metricCount>0) {\n        buf.append(\",\");\n      }\n      appendJson(buf, _buckets, _metrics, _sorts, _limit, level);\n    }\n    buf.append(\"}}\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"333d804f5abfaf34c57493306a4cb2e01e55662d":["79509167584beb75c0b777d2b701adeb1f06d885"],"79509167584beb75c0b777d2b701adeb1f06d885":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"011d43366b2da54d1652d93e7ec6412848eeb009":["333d804f5abfaf34c57493306a4cb2e01e55662d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["011d43366b2da54d1652d93e7ec6412848eeb009"]},"commit2Childs":{"333d804f5abfaf34c57493306a4cb2e01e55662d":["011d43366b2da54d1652d93e7ec6412848eeb009"],"79509167584beb75c0b777d2b701adeb1f06d885":["333d804f5abfaf34c57493306a4cb2e01e55662d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["79509167584beb75c0b777d2b701adeb1f06d885"],"011d43366b2da54d1652d93e7ec6412848eeb009":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}