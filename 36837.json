{"path":"lucene/src/test/org/apache/lucene/search/TestSimilarity.SimpleSimilarityProvider#get(String).mjava","commits":[{"id":"160d004a0e8f5361a446f9d01456aee1c1af20dc","date":1301061642,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestSimilarity.SimpleSimilarityProvider#get(String).mjava","pathOld":"/dev/null","sourceNew":"    public Similarity get(String field) {\n      return new Similarity() {\n        @Override public float computeNorm(FieldInvertState state) { return state.getBoost(); }\n        @Override public float tf(float freq) { return freq; }\n        @Override public float sloppyFreq(int distance) { return 2.0f; }\n        @Override public float idf(int docFreq, int numDocs) { return 1.0f; }\n        @Override public IDFExplanation idfExplain(Collection<Term> terms, IndexSearcher searcher) throws IOException {\n          return new IDFExplanation() {\n            @Override\n            public float getIdf() {\n              return 1.0f;\n            }\n            @Override\n            public String explain() {\n              return \"Inexplicable\";\n            }\n          };\n        }\n      };\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d619839baa8ce5503e496b94a9e42ad6f079293f","date":1301309428,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestSimilarity.SimpleSimilarityProvider#get(String).mjava","pathOld":"/dev/null","sourceNew":"    public Similarity get(String field) {\n      return new Similarity() {\n        @Override public float computeNorm(FieldInvertState state) { return state.getBoost(); }\n        @Override public float tf(float freq) { return freq; }\n        @Override public float sloppyFreq(int distance) { return 2.0f; }\n        @Override public float idf(int docFreq, int numDocs) { return 1.0f; }\n        @Override public IDFExplanation idfExplain(Collection<Term> terms, IndexSearcher searcher) throws IOException {\n          return new IDFExplanation() {\n            @Override\n            public float getIdf() {\n              return 1.0f;\n            }\n            @Override\n            public String explain() {\n              return \"Inexplicable\";\n            }\n          };\n        }\n      };\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c0ef0193974807e4bddf5432a6b0287fe4d6c9df","date":1301476645,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestSimilarity.SimpleSimilarityProvider#get(String).mjava","pathOld":"/dev/null","sourceNew":"    public Similarity get(String field) {\n      return new Similarity() {\n        @Override public float computeNorm(FieldInvertState state) { return state.getBoost(); }\n        @Override public float tf(float freq) { return freq; }\n        @Override public float sloppyFreq(int distance) { return 2.0f; }\n        @Override public float idf(int docFreq, int numDocs) { return 1.0f; }\n        @Override public IDFExplanation idfExplain(Collection<Term> terms, IndexSearcher searcher) throws IOException {\n          return new IDFExplanation() {\n            @Override\n            public float getIdf() {\n              return 1.0f;\n            }\n            @Override\n            public String explain() {\n              return \"Inexplicable\";\n            }\n          };\n        }\n      };\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f3cee3d20b0c786e6fca20539454262e29edcab","date":1310101685,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestSimilarity.SimpleSimilarityProvider#get(String).mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestSimilarity.SimpleSimilarityProvider#get(String).mjava","sourceNew":"    public Similarity get(String field) {\n      return new DefaultSimilarity() {\n        @Override public byte computeNorm(FieldInvertState state) { return encodeNormValue(state.getBoost()); }\n        @Override public float tf(float freq) { return freq; }\n        @Override public float sloppyFreq(int distance) { return 2.0f; }\n        @Override public float idf(int docFreq, int numDocs) { return 1.0f; }\n        @Override public Explanation idfExplain(TermContext[] stats, IndexSearcher searcher) throws IOException {\n          return new Explanation(1.0f, \"Inexplicable\"); \n        }\n      };\n    }\n\n","sourceOld":"    public Similarity get(String field) {\n      return new Similarity() {\n        @Override public float computeNorm(FieldInvertState state) { return state.getBoost(); }\n        @Override public float tf(float freq) { return freq; }\n        @Override public float sloppyFreq(int distance) { return 2.0f; }\n        @Override public float idf(int docFreq, int numDocs) { return 1.0f; }\n        @Override public IDFExplanation idfExplain(Collection<Term> terms, IndexSearcher searcher) throws IOException {\n          return new IDFExplanation() {\n            @Override\n            public float getIdf() {\n              return 1.0f;\n            }\n            @Override\n            public String explain() {\n              return \"Inexplicable\";\n            }\n          };\n        }\n      };\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f0b9507caf22f292ac0e5e59f62db4275adf4511","date":1310107283,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestSimilarity.SimpleSimilarityProvider#get(String).mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestSimilarity.SimpleSimilarityProvider#get(String).mjava","sourceNew":"    public Similarity get(String field) {\n      return new DefaultSimilarity() {\n        @Override public byte computeNorm(FieldInvertState state) { return encodeNormValue(state.getBoost()); }\n        @Override public float tf(float freq) { return freq; }\n        @Override public float sloppyFreq(int distance) { return 2.0f; }\n        @Override public float idf(int docFreq, int numDocs) { return 1.0f; }\n        @Override public Explanation idfExplain(TermContext[] stats, IndexSearcher searcher) throws IOException {\n          return new Explanation(1.0f, \"Inexplicable\"); \n        }\n      };\n    }\n\n","sourceOld":"    public Similarity get(String field) {\n      return new Similarity() {\n        @Override public float computeNorm(FieldInvertState state) { return state.getBoost(); }\n        @Override public float tf(float freq) { return freq; }\n        @Override public float sloppyFreq(int distance) { return 2.0f; }\n        @Override public float idf(int docFreq, int numDocs) { return 1.0f; }\n        @Override public IDFExplanation idfExplain(Collection<Term> terms, IndexSearcher searcher) throws IOException {\n          return new IDFExplanation() {\n            @Override\n            public float getIdf() {\n              return 1.0f;\n            }\n            @Override\n            public String explain() {\n              return \"Inexplicable\";\n            }\n          };\n        }\n      };\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1291e4568eb7d9463d751627596ef14baf4c1603","date":1310112572,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestSimilarity.SimpleSimilarityProvider#get(String).mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestSimilarity.SimpleSimilarityProvider#get(String).mjava","sourceNew":"    public Similarity get(String field) {\n      return new DefaultSimilarity() {\n        @Override public byte computeNorm(FieldInvertState state) { return encodeNormValue(state.getBoost()); }\n        @Override public float tf(float freq) { return freq; }\n        @Override public float sloppyFreq(int distance) { return 2.0f; }\n        @Override public float idf(int docFreq, int numDocs) { return 1.0f; }\n        @Override public Explanation idfExplain(TermContext[] stats, IndexSearcher searcher) throws IOException {\n          return new Explanation(1.0f, \"Inexplicable\"); \n        }\n      };\n    }\n\n","sourceOld":"    public Similarity get(String field) {\n      return new Similarity() {\n        @Override public float computeNorm(FieldInvertState state) { return state.getBoost(); }\n        @Override public float tf(float freq) { return freq; }\n        @Override public float sloppyFreq(int distance) { return 2.0f; }\n        @Override public float idf(int docFreq, int numDocs) { return 1.0f; }\n        @Override public IDFExplanation idfExplain(Collection<Term> terms, IndexSearcher searcher) throws IOException {\n          return new IDFExplanation() {\n            @Override\n            public float getIdf() {\n              return 1.0f;\n            }\n            @Override\n            public String explain() {\n              return \"Inexplicable\";\n            }\n          };\n        }\n      };\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9ce8e026ad419f6c1e2d26851d5b4b35e6239c9d","date":1320398636,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestSimilarity.SimpleSimilarityProvider#get(String).mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestSimilarity.SimpleSimilarityProvider#get(String).mjava","sourceNew":"    public Similarity get(String field) {\n      return new DefaultSimilarity() {\n        @Override public byte computeNorm(FieldInvertState state) { return encodeNormValue(state.getBoost()); }\n        @Override public float tf(float freq) { return freq; }\n        @Override public float sloppyFreq(int distance) { return 2.0f; }\n        @Override public float idf(int docFreq, int numDocs) { return 1.0f; }\n        @Override public Explanation idfExplain(CollectionStatistics collectionStats, TermStatistics[] stats) {\n          return new Explanation(1.0f, \"Inexplicable\"); \n        }\n      };\n    }\n\n","sourceOld":"    public Similarity get(String field) {\n      return new DefaultSimilarity() {\n        @Override public byte computeNorm(FieldInvertState state) { return encodeNormValue(state.getBoost()); }\n        @Override public float tf(float freq) { return freq; }\n        @Override public float sloppyFreq(int distance) { return 2.0f; }\n        @Override public float idf(int docFreq, int numDocs) { return 1.0f; }\n        @Override public Explanation idfExplain(TermContext[] stats, IndexSearcher searcher) throws IOException {\n          return new Explanation(1.0f, \"Inexplicable\"); \n        }\n      };\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9e8d5a6ffbfa3405d234a87c833741eabed98d13","date":1326725835,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestSimilarity.SimpleSimilarityProvider#get(String).mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestSimilarity.SimpleSimilarityProvider#get(String).mjava","sourceNew":"    public Similarity get(String field) {\n      return new DefaultSimilarity() {\n        @Override public void computeNorm(FieldInvertState state, Norm norm) { norm.setByte(encodeNormValue(state.getBoost())); }\n        @Override public float tf(float freq) { return freq; }\n        @Override public float sloppyFreq(int distance) { return 2.0f; }\n        @Override public float idf(int docFreq, int numDocs) { return 1.0f; }\n        @Override public Explanation idfExplain(CollectionStatistics collectionStats, TermStatistics[] stats) {\n          return new Explanation(1.0f, \"Inexplicable\"); \n        }\n      };\n    }\n\n","sourceOld":"    public Similarity get(String field) {\n      return new DefaultSimilarity() {\n        @Override public byte computeNorm(FieldInvertState state) { return encodeNormValue(state.getBoost()); }\n        @Override public float tf(float freq) { return freq; }\n        @Override public float sloppyFreq(int distance) { return 2.0f; }\n        @Override public float idf(int docFreq, int numDocs) { return 1.0f; }\n        @Override public Explanation idfExplain(CollectionStatistics collectionStats, TermStatistics[] stats) {\n          return new Explanation(1.0f, \"Inexplicable\"); \n        }\n      };\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"64aaeb7d6606aeec15dd381453d66caedda7888b","date":1327669445,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestSimilarity.SimpleSimilarityProvider#get(String).mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestSimilarity.SimpleSimilarityProvider#get(String).mjava","sourceNew":"    public Similarity get(String field) {\n      return new DefaultSimilarity() {\n        @Override public void computeNorm(FieldInvertState state, Norm norm) { norm.setByte(encodeNormValue(state.getBoost())); }\n        @Override public float tf(float freq) { return freq; }\n        @Override public float sloppyFreq(int distance) { return 2.0f; }\n        @Override public float idf(long docFreq, long numDocs) { return 1.0f; }\n        @Override public Explanation idfExplain(CollectionStatistics collectionStats, TermStatistics[] stats) {\n          return new Explanation(1.0f, \"Inexplicable\"); \n        }\n      };\n    }\n\n","sourceOld":"    public Similarity get(String field) {\n      return new DefaultSimilarity() {\n        @Override public void computeNorm(FieldInvertState state, Norm norm) { norm.setByte(encodeNormValue(state.getBoost())); }\n        @Override public float tf(float freq) { return freq; }\n        @Override public float sloppyFreq(int distance) { return 2.0f; }\n        @Override public float idf(int docFreq, int numDocs) { return 1.0f; }\n        @Override public Explanation idfExplain(CollectionStatistics collectionStats, TermStatistics[] stats) {\n          return new Explanation(1.0f, \"Inexplicable\"); \n        }\n      };\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"78a55f24d9b493c2a1cecf79f1d78279062b545b","date":1327688152,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestSimilarity.SimpleSimilarityProvider#get(String).mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestSimilarity.SimpleSimilarityProvider#get(String).mjava","sourceNew":"    public Similarity get(String field) {\n      return new DefaultSimilarity() {\n        @Override public void computeNorm(FieldInvertState state, Norm norm) { norm.setByte(encodeNormValue(state.getBoost())); }\n        @Override public float tf(float freq) { return freq; }\n        @Override public float sloppyFreq(int distance) { return 2.0f; }\n        @Override public float idf(long docFreq, long numDocs) { return 1.0f; }\n        @Override public Explanation idfExplain(CollectionStatistics collectionStats, TermStatistics[] stats) {\n          return new Explanation(1.0f, \"Inexplicable\"); \n        }\n      };\n    }\n\n","sourceOld":"    public Similarity get(String field) {\n      return new DefaultSimilarity() {\n        @Override public void computeNorm(FieldInvertState state, Norm norm) { norm.setByte(encodeNormValue(state.getBoost())); }\n        @Override public float tf(float freq) { return freq; }\n        @Override public float sloppyFreq(int distance) { return 2.0f; }\n        @Override public float idf(int docFreq, int numDocs) { return 1.0f; }\n        @Override public Explanation idfExplain(CollectionStatistics collectionStats, TermStatistics[] stats) {\n          return new Explanation(1.0f, \"Inexplicable\"); \n        }\n      };\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fd92b8bcc88e969302510acf77bd6970da3994c4","date":1327839530,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestSimilarity.SimpleSimilarityProvider#get(String).mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestSimilarity.SimpleSimilarityProvider#get(String).mjava","sourceNew":"    public Similarity get(String field) {\n      return new DefaultSimilarity() {\n        @Override public void computeNorm(FieldInvertState state, Norm norm) { norm.setByte(encodeNormValue(state.getBoost())); }\n        @Override public float tf(float freq) { return freq; }\n        @Override public float sloppyFreq(int distance) { return 2.0f; }\n        @Override public float idf(long docFreq, long numDocs) { return 1.0f; }\n        @Override public Explanation idfExplain(CollectionStatistics collectionStats, TermStatistics[] stats) {\n          return new Explanation(1.0f, \"Inexplicable\"); \n        }\n      };\n    }\n\n","sourceOld":"    public Similarity get(String field) {\n      return new DefaultSimilarity() {\n        @Override public void computeNorm(FieldInvertState state, Norm norm) { norm.setByte(encodeNormValue(state.getBoost())); }\n        @Override public float tf(float freq) { return freq; }\n        @Override public float sloppyFreq(int distance) { return 2.0f; }\n        @Override public float idf(int docFreq, int numDocs) { return 1.0f; }\n        @Override public Explanation idfExplain(CollectionStatistics collectionStats, TermStatistics[] stats) {\n          return new Explanation(1.0f, \"Inexplicable\"); \n        }\n      };\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1ab42b0756bdd98ac6a6767b5a77d10d9ba12b4b","date":1328532481,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/test/org/apache/lucene/search/TestSimilarity.SimpleSimilarityProvider#get(String).mjava","sourceNew":null,"sourceOld":"    public Similarity get(String field) {\n      return new DefaultSimilarity() {\n        @Override public void computeNorm(FieldInvertState state, Norm norm) { norm.setByte(encodeNormValue(state.getBoost())); }\n        @Override public float tf(float freq) { return freq; }\n        @Override public float sloppyFreq(int distance) { return 2.0f; }\n        @Override public float idf(long docFreq, long numDocs) { return 1.0f; }\n        @Override public Explanation idfExplain(CollectionStatistics collectionStats, TermStatistics[] stats) {\n          return new Explanation(1.0f, \"Inexplicable\"); \n        }\n      };\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"78a55f24d9b493c2a1cecf79f1d78279062b545b":["9e8d5a6ffbfa3405d234a87c833741eabed98d13","64aaeb7d6606aeec15dd381453d66caedda7888b"],"64aaeb7d6606aeec15dd381453d66caedda7888b":["9e8d5a6ffbfa3405d234a87c833741eabed98d13"],"0f3cee3d20b0c786e6fca20539454262e29edcab":["160d004a0e8f5361a446f9d01456aee1c1af20dc"],"fd92b8bcc88e969302510acf77bd6970da3994c4":["9e8d5a6ffbfa3405d234a87c833741eabed98d13","64aaeb7d6606aeec15dd381453d66caedda7888b"],"1ab42b0756bdd98ac6a6767b5a77d10d9ba12b4b":["64aaeb7d6606aeec15dd381453d66caedda7888b"],"1291e4568eb7d9463d751627596ef14baf4c1603":["160d004a0e8f5361a446f9d01456aee1c1af20dc","0f3cee3d20b0c786e6fca20539454262e29edcab"],"9ce8e026ad419f6c1e2d26851d5b4b35e6239c9d":["0f3cee3d20b0c786e6fca20539454262e29edcab"],"c0ef0193974807e4bddf5432a6b0287fe4d6c9df":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","160d004a0e8f5361a446f9d01456aee1c1af20dc"],"9e8d5a6ffbfa3405d234a87c833741eabed98d13":["9ce8e026ad419f6c1e2d26851d5b4b35e6239c9d"],"160d004a0e8f5361a446f9d01456aee1c1af20dc":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f0b9507caf22f292ac0e5e59f62db4275adf4511":["160d004a0e8f5361a446f9d01456aee1c1af20dc","0f3cee3d20b0c786e6fca20539454262e29edcab"],"d619839baa8ce5503e496b94a9e42ad6f079293f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","160d004a0e8f5361a446f9d01456aee1c1af20dc"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1ab42b0756bdd98ac6a6767b5a77d10d9ba12b4b"]},"commit2Childs":{"78a55f24d9b493c2a1cecf79f1d78279062b545b":[],"64aaeb7d6606aeec15dd381453d66caedda7888b":["78a55f24d9b493c2a1cecf79f1d78279062b545b","fd92b8bcc88e969302510acf77bd6970da3994c4","1ab42b0756bdd98ac6a6767b5a77d10d9ba12b4b"],"0f3cee3d20b0c786e6fca20539454262e29edcab":["1291e4568eb7d9463d751627596ef14baf4c1603","9ce8e026ad419f6c1e2d26851d5b4b35e6239c9d","f0b9507caf22f292ac0e5e59f62db4275adf4511"],"fd92b8bcc88e969302510acf77bd6970da3994c4":[],"1ab42b0756bdd98ac6a6767b5a77d10d9ba12b4b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"1291e4568eb7d9463d751627596ef14baf4c1603":[],"9ce8e026ad419f6c1e2d26851d5b4b35e6239c9d":["9e8d5a6ffbfa3405d234a87c833741eabed98d13"],"c0ef0193974807e4bddf5432a6b0287fe4d6c9df":[],"9e8d5a6ffbfa3405d234a87c833741eabed98d13":["78a55f24d9b493c2a1cecf79f1d78279062b545b","64aaeb7d6606aeec15dd381453d66caedda7888b","fd92b8bcc88e969302510acf77bd6970da3994c4"],"160d004a0e8f5361a446f9d01456aee1c1af20dc":["0f3cee3d20b0c786e6fca20539454262e29edcab","1291e4568eb7d9463d751627596ef14baf4c1603","c0ef0193974807e4bddf5432a6b0287fe4d6c9df","f0b9507caf22f292ac0e5e59f62db4275adf4511","d619839baa8ce5503e496b94a9e42ad6f079293f"],"f0b9507caf22f292ac0e5e59f62db4275adf4511":[],"d619839baa8ce5503e496b94a9e42ad6f079293f":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df","160d004a0e8f5361a446f9d01456aee1c1af20dc","d619839baa8ce5503e496b94a9e42ad6f079293f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["78a55f24d9b493c2a1cecf79f1d78279062b545b","fd92b8bcc88e969302510acf77bd6970da3994c4","1291e4568eb7d9463d751627596ef14baf4c1603","c0ef0193974807e4bddf5432a6b0287fe4d6c9df","f0b9507caf22f292ac0e5e59f62db4275adf4511","d619839baa8ce5503e496b94a9e42ad6f079293f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}