{"path":"src/test/org/apache/lucene/index/TestAtomicUpdate#testAtomicUpdates().mjava","commits":[{"id":"fde68de507dbf344495d7b5e8052866fe5f254ab","date":1189434831,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestAtomicUpdate#testAtomicUpdates().mjava","pathOld":"/dev/null","sourceNew":"  /*\n    Run above stress test against RAMDirectory and then\n    FSDirectory.\n  */\n  public void testAtomicUpdates() throws Exception {\n\n    Directory directory;\n\n    // First in a RAM directory:\n    directory = new MockRAMDirectory();\n    runTest(directory);\n    directory.close();\n\n    // Second in an FSDirectory:\n    String tempDir = System.getProperty(\"java.io.tmpdir\");\n    File dirPath = new File(tempDir, \"lucene.test.atomic\");\n    directory = FSDirectory.getDirectory(dirPath);\n    runTest(directory);\n    directory.close();\n    _TestUtil.rmDir(dirPath);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b583d3621fe173e7296abcf62f82fb707c901234","date":1194717060,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestAtomicUpdate#testAtomicUpdates().mjava","pathOld":"src/test/org/apache/lucene/index/TestAtomicUpdate#testAtomicUpdates().mjava","sourceNew":"  /*\n    Run above stress test against RAMDirectory and then\n    FSDirectory.\n  */\n  public void testAtomicUpdates() throws Exception {\n\n    Directory directory;\n\n    // First in a RAM directory:\n    directory = new MockRAMDirectory();\n    runTest(directory);\n    directory.close();\n\n    // Second in an FSDirectory:\n    String tempDir = System.getProperty(\"java.io.tmpdir\");\n    File dirPath = new File(tempDir, \"lucene.test.atomic\");\n    directory = FSDirectory.getDirectory(dirPath, null, false);\n    runTest(directory);\n    directory.close();\n    _TestUtil.rmDir(dirPath);\n  }\n\n","sourceOld":"  /*\n    Run above stress test against RAMDirectory and then\n    FSDirectory.\n  */\n  public void testAtomicUpdates() throws Exception {\n\n    Directory directory;\n\n    // First in a RAM directory:\n    directory = new MockRAMDirectory();\n    runTest(directory);\n    directory.close();\n\n    // Second in an FSDirectory:\n    String tempDir = System.getProperty(\"java.io.tmpdir\");\n    File dirPath = new File(tempDir, \"lucene.test.atomic\");\n    directory = FSDirectory.getDirectory(dirPath);\n    runTest(directory);\n    directory.close();\n    _TestUtil.rmDir(dirPath);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a015c55424dd37249054283bedc90388bd45358f","date":1197049353,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestAtomicUpdate#testAtomicUpdates().mjava","pathOld":"src/test/org/apache/lucene/index/TestAtomicUpdate#testAtomicUpdates().mjava","sourceNew":"  /*\n    Run above stress test against RAMDirectory and then\n    FSDirectory.\n  */\n  public void testAtomicUpdates() throws Exception {\n\n    Directory directory;\n\n    // First in a RAM directory:\n    directory = new MockRAMDirectory();\n    runTest(directory);\n    directory.close();\n\n    // Second in an FSDirectory:\n    String tempDir = System.getProperty(\"java.io.tmpdir\");\n    File dirPath = new File(tempDir, \"lucene.test.atomic\");\n    directory = FSDirectory.getDirectory(dirPath);\n    runTest(directory);\n    directory.close();\n    _TestUtil.rmDir(dirPath);\n  }\n\n","sourceOld":"  /*\n    Run above stress test against RAMDirectory and then\n    FSDirectory.\n  */\n  public void testAtomicUpdates() throws Exception {\n\n    Directory directory;\n\n    // First in a RAM directory:\n    directory = new MockRAMDirectory();\n    runTest(directory);\n    directory.close();\n\n    // Second in an FSDirectory:\n    String tempDir = System.getProperty(\"java.io.tmpdir\");\n    File dirPath = new File(tempDir, \"lucene.test.atomic\");\n    directory = FSDirectory.getDirectory(dirPath, null, false);\n    runTest(directory);\n    directory.close();\n    _TestUtil.rmDir(dirPath);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cb1066f2afe9450585d0d10063ea4450085236f1","date":1233870820,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestAtomicUpdate#testAtomicUpdates().mjava","pathOld":"src/test/org/apache/lucene/index/TestAtomicUpdate#testAtomicUpdates().mjava","sourceNew":"  /*\n    Run above stress test against RAMDirectory and then\n    FSDirectory.\n  */\n  public void testAtomicUpdates() throws Exception {\n    RANDOM = newRandom();\n    Directory directory;\n\n    // First in a RAM directory:\n    directory = new MockRAMDirectory();\n    runTest(directory);\n    directory.close();\n\n    // Second in an FSDirectory:\n    String tempDir = System.getProperty(\"java.io.tmpdir\");\n    File dirPath = new File(tempDir, \"lucene.test.atomic\");\n    directory = FSDirectory.getDirectory(dirPath);\n    runTest(directory);\n    directory.close();\n    _TestUtil.rmDir(dirPath);\n  }\n\n","sourceOld":"  /*\n    Run above stress test against RAMDirectory and then\n    FSDirectory.\n  */\n  public void testAtomicUpdates() throws Exception {\n\n    Directory directory;\n\n    // First in a RAM directory:\n    directory = new MockRAMDirectory();\n    runTest(directory);\n    directory.close();\n\n    // Second in an FSDirectory:\n    String tempDir = System.getProperty(\"java.io.tmpdir\");\n    File dirPath = new File(tempDir, \"lucene.test.atomic\");\n    directory = FSDirectory.getDirectory(dirPath);\n    runTest(directory);\n    directory.close();\n    _TestUtil.rmDir(dirPath);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5309ea37b2a7ec9c5f21c9eeacc9d9fb808cdb02","date":1243677645,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestAtomicUpdate#testAtomicUpdates().mjava","pathOld":"src/test/org/apache/lucene/index/TestAtomicUpdate#testAtomicUpdates().mjava","sourceNew":"  /*\n    Run above stress test against RAMDirectory and then\n    FSDirectory.\n  */\n  public void testAtomicUpdates() throws Exception {\n    RANDOM = newRandom();\n    Directory directory;\n\n    // First in a RAM directory:\n    directory = new MockRAMDirectory();\n    runTest(directory);\n    directory.close();\n\n    // Second in an FSDirectory:\n    String tempDir = System.getProperty(\"java.io.tmpdir\");\n    File dirPath = new File(tempDir, \"lucene.test.atomic\");\n    directory = FSDirectory.open(dirPath);\n    runTest(directory);\n    directory.close();\n    _TestUtil.rmDir(dirPath);\n  }\n\n","sourceOld":"  /*\n    Run above stress test against RAMDirectory and then\n    FSDirectory.\n  */\n  public void testAtomicUpdates() throws Exception {\n    RANDOM = newRandom();\n    Directory directory;\n\n    // First in a RAM directory:\n    directory = new MockRAMDirectory();\n    runTest(directory);\n    directory.close();\n\n    // Second in an FSDirectory:\n    String tempDir = System.getProperty(\"java.io.tmpdir\");\n    File dirPath = new File(tempDir, \"lucene.test.atomic\");\n    directory = FSDirectory.getDirectory(dirPath);\n    runTest(directory);\n    directory.close();\n    _TestUtil.rmDir(dirPath);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f17b3174c7be1fd23fda9134f3e42580461b143c","date":1254399198,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestAtomicUpdate#testAtomicUpdates().mjava","pathOld":"src/test/org/apache/lucene/index/TestAtomicUpdate#testAtomicUpdates().mjava","sourceNew":"  /*\n    Run above stress test against RAMDirectory and then\n    FSDirectory.\n  */\n  public void testAtomicUpdates() throws Exception {\n    RANDOM = newRandom();\n    Directory directory;\n\n    // First in a RAM directory:\n    directory = new MockRAMDirectory();\n    runTest(directory);\n    directory.close();\n\n    // Second in an FSDirectory:\n    File dirPath = _TestUtil.getTempDir(\"lucene.test.atomic\");\n    directory = FSDirectory.open(dirPath);\n    runTest(directory);\n    directory.close();\n    _TestUtil.rmDir(dirPath);\n  }\n\n","sourceOld":"  /*\n    Run above stress test against RAMDirectory and then\n    FSDirectory.\n  */\n  public void testAtomicUpdates() throws Exception {\n    RANDOM = newRandom();\n    Directory directory;\n\n    // First in a RAM directory:\n    directory = new MockRAMDirectory();\n    runTest(directory);\n    directory.close();\n\n    // Second in an FSDirectory:\n    String tempDir = System.getProperty(\"java.io.tmpdir\");\n    File dirPath = new File(tempDir, \"lucene.test.atomic\");\n    directory = FSDirectory.open(dirPath);\n    runTest(directory);\n    directory.close();\n    _TestUtil.rmDir(dirPath);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1cedb00d2dd44640194401179358a2e3ba6051bf","date":1268243626,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestAtomicUpdate#testAtomicUpdates().mjava","pathOld":"src/test/org/apache/lucene/index/TestAtomicUpdate#testAtomicUpdates().mjava","sourceNew":"  /*\n    Run above stress test against RAMDirectory and then\n    FSDirectory.\n  */\n  public void testAtomicUpdates() throws Exception {\n    MockIndexWriter.RANDOM = newRandom();\n    Directory directory;\n\n    // First in a RAM directory:\n    directory = new MockRAMDirectory();\n    runTest(directory);\n    directory.close();\n\n    // Second in an FSDirectory:\n    File dirPath = _TestUtil.getTempDir(\"lucene.test.atomic\");\n    directory = FSDirectory.open(dirPath);\n    runTest(directory);\n    directory.close();\n    _TestUtil.rmDir(dirPath);\n  }\n\n","sourceOld":"  /*\n    Run above stress test against RAMDirectory and then\n    FSDirectory.\n  */\n  public void testAtomicUpdates() throws Exception {\n    RANDOM = newRandom();\n    Directory directory;\n\n    // First in a RAM directory:\n    directory = new MockRAMDirectory();\n    runTest(directory);\n    directory.close();\n\n    // Second in an FSDirectory:\n    File dirPath = _TestUtil.getTempDir(\"lucene.test.atomic\");\n    directory = FSDirectory.open(dirPath);\n    runTest(directory);\n    directory.close();\n    _TestUtil.rmDir(dirPath);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e52fea2c4081a1e552b98506691990be59503168","date":1268250331,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestAtomicUpdate#testAtomicUpdates().mjava","pathOld":"src/test/org/apache/lucene/index/TestAtomicUpdate#testAtomicUpdates().mjava","sourceNew":"  /*\n    Run above stress test against RAMDirectory and then\n    FSDirectory.\n  */\n  public void testAtomicUpdates() throws Exception {\n    RANDOM = newRandom();\n    Directory directory;\n\n    // First in a RAM directory:\n    directory = new MockRAMDirectory();\n    runTest(directory);\n    directory.close();\n\n    // Second in an FSDirectory:\n    File dirPath = _TestUtil.getTempDir(\"lucene.test.atomic\");\n    directory = FSDirectory.open(dirPath);\n    runTest(directory);\n    directory.close();\n    _TestUtil.rmDir(dirPath);\n  }\n\n","sourceOld":"  /*\n    Run above stress test against RAMDirectory and then\n    FSDirectory.\n  */\n  public void testAtomicUpdates() throws Exception {\n    MockIndexWriter.RANDOM = newRandom();\n    Directory directory;\n\n    // First in a RAM directory:\n    directory = new MockRAMDirectory();\n    runTest(directory);\n    directory.close();\n\n    // Second in an FSDirectory:\n    File dirPath = _TestUtil.getTempDir(\"lucene.test.atomic\");\n    directory = FSDirectory.open(dirPath);\n    runTest(directory);\n    directory.close();\n    _TestUtil.rmDir(dirPath);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8","date":1268494368,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestAtomicUpdate#testAtomicUpdates().mjava","pathOld":"src/test/org/apache/lucene/index/TestAtomicUpdate#testAtomicUpdates().mjava","sourceNew":"  /*\n    Run above stress test against RAMDirectory and then\n    FSDirectory.\n  */\n  public void testAtomicUpdates() throws Exception {\n    MockIndexWriter.RANDOM = newRandom();\n    Directory directory;\n\n    // First in a RAM directory:\n    directory = new MockRAMDirectory();\n    runTest(directory);\n    directory.close();\n\n    // Second in an FSDirectory:\n    File dirPath = _TestUtil.getTempDir(\"lucene.test.atomic\");\n    directory = FSDirectory.open(dirPath);\n    runTest(directory);\n    directory.close();\n    _TestUtil.rmDir(dirPath);\n  }\n\n","sourceOld":"  /*\n    Run above stress test against RAMDirectory and then\n    FSDirectory.\n  */\n  public void testAtomicUpdates() throws Exception {\n    RANDOM = newRandom();\n    Directory directory;\n\n    // First in a RAM directory:\n    directory = new MockRAMDirectory();\n    runTest(directory);\n    directory.close();\n\n    // Second in an FSDirectory:\n    File dirPath = _TestUtil.getTempDir(\"lucene.test.atomic\");\n    directory = FSDirectory.open(dirPath);\n    runTest(directory);\n    directory.close();\n    _TestUtil.rmDir(dirPath);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestAtomicUpdate#testAtomicUpdates().mjava","pathOld":"src/test/org/apache/lucene/index/TestAtomicUpdate#testAtomicUpdates().mjava","sourceNew":"  /*\n    Run above stress test against RAMDirectory and then\n    FSDirectory.\n  */\n  public void testAtomicUpdates() throws Exception {\n    MockIndexWriter.RANDOM = newRandom();\n    Directory directory;\n\n    // First in a RAM directory:\n    directory = new MockRAMDirectory();\n    runTest(directory);\n    directory.close();\n\n    // Second in an FSDirectory:\n    File dirPath = _TestUtil.getTempDir(\"lucene.test.atomic\");\n    directory = FSDirectory.open(dirPath);\n    runTest(directory);\n    directory.close();\n    _TestUtil.rmDir(dirPath);\n  }\n\n","sourceOld":"  /*\n    Run above stress test against RAMDirectory and then\n    FSDirectory.\n  */\n  public void testAtomicUpdates() throws Exception {\n    MockIndexWriter.RANDOM = newRandom();\n    Directory directory;\n\n    // First in a RAM directory:\n    directory = new MockRAMDirectory();\n    runTest(directory);\n    directory.close();\n\n    // Second in an FSDirectory:\n    File dirPath = _TestUtil.getTempDir(\"lucene.test.atomic\");\n    directory = FSDirectory.open(dirPath);\n    runTest(directory);\n    directory.close();\n    _TestUtil.rmDir(dirPath);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b583d3621fe173e7296abcf62f82fb707c901234":["fde68de507dbf344495d7b5e8052866fe5f254ab"],"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8":["e52fea2c4081a1e552b98506691990be59503168"],"cb1066f2afe9450585d0d10063ea4450085236f1":["a015c55424dd37249054283bedc90388bd45358f"],"fde68de507dbf344495d7b5e8052866fe5f254ab":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a015c55424dd37249054283bedc90388bd45358f":["b583d3621fe173e7296abcf62f82fb707c901234"],"5309ea37b2a7ec9c5f21c9eeacc9d9fb808cdb02":["cb1066f2afe9450585d0d10063ea4450085236f1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1cedb00d2dd44640194401179358a2e3ba6051bf":["f17b3174c7be1fd23fda9134f3e42580461b143c"],"f17b3174c7be1fd23fda9134f3e42580461b143c":["5309ea37b2a7ec9c5f21c9eeacc9d9fb808cdb02"],"e52fea2c4081a1e552b98506691990be59503168":["1cedb00d2dd44640194401179358a2e3ba6051bf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8"]},"commit2Childs":{"b583d3621fe173e7296abcf62f82fb707c901234":["a015c55424dd37249054283bedc90388bd45358f"],"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cb1066f2afe9450585d0d10063ea4450085236f1":["5309ea37b2a7ec9c5f21c9eeacc9d9fb808cdb02"],"fde68de507dbf344495d7b5e8052866fe5f254ab":["b583d3621fe173e7296abcf62f82fb707c901234"],"a015c55424dd37249054283bedc90388bd45358f":["cb1066f2afe9450585d0d10063ea4450085236f1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["fde68de507dbf344495d7b5e8052866fe5f254ab"],"5309ea37b2a7ec9c5f21c9eeacc9d9fb808cdb02":["f17b3174c7be1fd23fda9134f3e42580461b143c"],"1cedb00d2dd44640194401179358a2e3ba6051bf":["e52fea2c4081a1e552b98506691990be59503168"],"f17b3174c7be1fd23fda9134f3e42580461b143c":["1cedb00d2dd44640194401179358a2e3ba6051bf"],"e52fea2c4081a1e552b98506691990be59503168":["84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}