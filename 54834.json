{"path":"lucene/core/src/java/org/apache/lucene/search/spans/SpanMultiTermQueryWrapper#rewrite(IndexReader).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/spans/SpanMultiTermQueryWrapper#rewrite(IndexReader).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/spans/SpanMultiTermQueryWrapper#rewrite(IndexReader).mjava","sourceNew":"  @Override\n  public Query rewrite(IndexReader reader) throws IOException {\n    final Query q = query.rewrite(reader);\n    if (!(q instanceof SpanQuery))\n      throw new UnsupportedOperationException(\"You can only use SpanMultiTermQueryWrapper with a suitable SpanRewriteMethod.\");\n    return q;\n  }\n\n","sourceOld":"  @Override\n  public Query rewrite(IndexReader reader) throws IOException {\n    final Query q = query.rewrite(reader);\n    if (!(q instanceof SpanQuery))\n      throw new UnsupportedOperationException(\"You can only use SpanMultiTermQueryWrapper with a suitable SpanRewriteMethod.\");\n    return q;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dd81b1d062b9688a18721a1adfc489577479856a","date":1390711758,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/spans/SpanMultiTermQueryWrapper#rewrite(IndexReader).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/spans/SpanMultiTermQueryWrapper#rewrite(IndexReader).mjava","sourceNew":"  @Override\n  public Query rewrite(IndexReader reader) throws IOException {\n    final Query q = query.rewrite(reader);\n    if (!(q instanceof SpanQuery))\n      throw new UnsupportedOperationException(\"You can only use SpanMultiTermQueryWrapper with a suitable SpanRewriteMethod.\");\n    q.setBoost(q.getBoost() * getBoost()); // multiply boost\n    return q;\n  }\n\n","sourceOld":"  @Override\n  public Query rewrite(IndexReader reader) throws IOException {\n    final Query q = query.rewrite(reader);\n    if (!(q instanceof SpanQuery))\n      throw new UnsupportedOperationException(\"You can only use SpanMultiTermQueryWrapper with a suitable SpanRewriteMethod.\");\n    return q;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2dfdf766e55e943d942055d7de53c7ad6bc45283","date":1441632886,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/spans/SpanMultiTermQueryWrapper#rewrite(IndexReader).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/spans/SpanMultiTermQueryWrapper#rewrite(IndexReader).mjava","sourceNew":"  @Override\n  public Query rewrite(IndexReader reader) throws IOException {\n    final Query q = query.rewrite(reader);\n    if (!(q instanceof SpanQuery))\n      throw new UnsupportedOperationException(\"You can only use SpanMultiTermQueryWrapper with a suitable SpanRewriteMethod.\");\n    return q;\n  }\n\n","sourceOld":"  @Override\n  public Query rewrite(IndexReader reader) throws IOException {\n    final Query q = query.rewrite(reader);\n    if (!(q instanceof SpanQuery))\n      throw new UnsupportedOperationException(\"You can only use SpanMultiTermQueryWrapper with a suitable SpanRewriteMethod.\");\n    q.setBoost(q.getBoost() * getBoost()); // multiply boost\n    return q;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"94a9716ed3ae95f79ad234a576d7c7dd34ce7769","date":1453297016,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/spans/SpanMultiTermQueryWrapper#rewrite(IndexReader).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/spans/SpanMultiTermQueryWrapper#rewrite(IndexReader).mjava","sourceNew":"  @Override\n  public Query rewrite(IndexReader reader) throws IOException {\n    return rewriteMethod.rewrite(reader, query);\n  }\n\n","sourceOld":"  @Override\n  public Query rewrite(IndexReader reader) throws IOException {\n    final Query q = query.rewrite(reader);\n    if (!(q instanceof SpanQuery))\n      throw new UnsupportedOperationException(\"You can only use SpanMultiTermQueryWrapper with a suitable SpanRewriteMethod.\");\n    return q;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2dfdf766e55e943d942055d7de53c7ad6bc45283":["dd81b1d062b9688a18721a1adfc489577479856a"],"94a9716ed3ae95f79ad234a576d7c7dd34ce7769":["2dfdf766e55e943d942055d7de53c7ad6bc45283"],"dd81b1d062b9688a18721a1adfc489577479856a":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["94a9716ed3ae95f79ad234a576d7c7dd34ce7769"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["dd81b1d062b9688a18721a1adfc489577479856a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"2dfdf766e55e943d942055d7de53c7ad6bc45283":["94a9716ed3ae95f79ad234a576d7c7dd34ce7769"],"dd81b1d062b9688a18721a1adfc489577479856a":["2dfdf766e55e943d942055d7de53c7ad6bc45283"],"94a9716ed3ae95f79ad234a576d7c7dd34ce7769":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}