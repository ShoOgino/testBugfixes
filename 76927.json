{"path":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#assertTermDocsCount(String,IndexReader,Term,int).mjava","commits":[{"id":"83e99d44c4a660a48c0fcc7a0108ad0a56dc2f87","date":1328967626,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#assertTermDocsCount(String,IndexReader,Term,int).mjava","pathOld":"/dev/null","sourceNew":"static void assertTermDocsCount(String msg,\n                                   IndexReader reader,\n                                   Term term,\n                                   int expected)\n  throws IOException {\n  DocsEnum tdocs = _TestUtil.docs(random, reader,\n                                  term.field(),\n                                  new BytesRef(term.text()),\n                                  MultiFields.getLiveDocs(reader),\n                                  null,\n                                  false);\n  int count = 0;\n  if (tdocs != null) {\n    while(tdocs.nextDoc()!= DocIdSetIterator.NO_MORE_DOCS) {\n      count++;\n    }\n  }\n  assertEquals(msg + \", count mismatch\", expected, count);\n}\n\n","sourceOld":null,"bugFix":null,"bugIntro":["02331260bb246364779cb6f04919ca47900d01bb"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"629c38c4ae4e303d0617e05fbfe508140b32f0a3","date":1334500904,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#assertTermDocsCount(String,IndexReader,Term,int).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#assertTermDocsCount(String,IndexReader,Term,int).mjava","sourceNew":"void assertTermDocsCount(String msg,\n                                   IndexReader reader,\n                                   Term term,\n                                   int expected)\n  throws IOException {\n  DocsEnum tdocs = _TestUtil.docs(random(), reader,\n                                  term.field(),\n                                  new BytesRef(term.text()),\n                                  MultiFields.getLiveDocs(reader),\n                                  null,\n                                  false);\n  int count = 0;\n  if (tdocs != null) {\n    while(tdocs.nextDoc()!= DocIdSetIterator.NO_MORE_DOCS) {\n      count++;\n    }\n  }\n  assertEquals(msg + \", count mismatch\", expected, count);\n}\n\n","sourceOld":"static void assertTermDocsCount(String msg,\n                                   IndexReader reader,\n                                   Term term,\n                                   int expected)\n  throws IOException {\n  DocsEnum tdocs = _TestUtil.docs(random, reader,\n                                  term.field(),\n                                  new BytesRef(term.text()),\n                                  MultiFields.getLiveDocs(reader),\n                                  null,\n                                  false);\n  int count = 0;\n  if (tdocs != null) {\n    while(tdocs.nextDoc()!= DocIdSetIterator.NO_MORE_DOCS) {\n      count++;\n    }\n  }\n  assertEquals(msg + \", count mismatch\", expected, count);\n}\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"02331260bb246364779cb6f04919ca47900d01bb","date":1343749884,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#assertTermDocsCount(String,IndexReader,Term,int).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#assertTermDocsCount(String,IndexReader,Term,int).mjava","sourceNew":"void assertTermDocsCount(String msg,\n                                   IndexReader reader,\n                                   Term term,\n                                   int expected)\n  throws IOException {\n  DocsEnum tdocs = _TestUtil.docs(random(), reader,\n                                  term.field(),\n                                  new BytesRef(term.text()),\n                                  MultiFields.getLiveDocs(reader),\n                                  null,\n                                  0);\n  int count = 0;\n  if (tdocs != null) {\n    while(tdocs.nextDoc()!= DocIdSetIterator.NO_MORE_DOCS) {\n      count++;\n    }\n  }\n  assertEquals(msg + \", count mismatch\", expected, count);\n}\n\n","sourceOld":"void assertTermDocsCount(String msg,\n                                   IndexReader reader,\n                                   Term term,\n                                   int expected)\n  throws IOException {\n  DocsEnum tdocs = _TestUtil.docs(random(), reader,\n                                  term.field(),\n                                  new BytesRef(term.text()),\n                                  MultiFields.getLiveDocs(reader),\n                                  null,\n                                  false);\n  int count = 0;\n  if (tdocs != null) {\n    while(tdocs.nextDoc()!= DocIdSetIterator.NO_MORE_DOCS) {\n      count++;\n    }\n  }\n  assertEquals(msg + \", count mismatch\", expected, count);\n}\n\n","bugFix":["83e99d44c4a660a48c0fcc7a0108ad0a56dc2f87"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","date":1343768312,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#assertTermDocsCount(String,IndexReader,Term,int).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#assertTermDocsCount(String,IndexReader,Term,int).mjava","sourceNew":"void assertTermDocsCount(String msg,\n                                   IndexReader reader,\n                                   Term term,\n                                   int expected)\n  throws IOException {\n  DocsEnum tdocs = _TestUtil.docs(random(), reader,\n                                  term.field(),\n                                  new BytesRef(term.text()),\n                                  MultiFields.getLiveDocs(reader),\n                                  null,\n                                  0);\n  int count = 0;\n  if (tdocs != null) {\n    while(tdocs.nextDoc()!= DocIdSetIterator.NO_MORE_DOCS) {\n      count++;\n    }\n  }\n  assertEquals(msg + \", count mismatch\", expected, count);\n}\n\n","sourceOld":"void assertTermDocsCount(String msg,\n                                   IndexReader reader,\n                                   Term term,\n                                   int expected)\n  throws IOException {\n  DocsEnum tdocs = _TestUtil.docs(random(), reader,\n                                  term.field(),\n                                  new BytesRef(term.text()),\n                                  MultiFields.getLiveDocs(reader),\n                                  null,\n                                  false);\n  int count = 0;\n  if (tdocs != null) {\n    while(tdocs.nextDoc()!= DocIdSetIterator.NO_MORE_DOCS) {\n      count++;\n    }\n  }\n  assertEquals(msg + \", count mismatch\", expected, count);\n}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d6f074e73200c07d54f242d3880a8da5a35ff97b","date":1344507653,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#assertTermDocsCount(String,IndexReader,Term,int).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#assertTermDocsCount(String,IndexReader,Term,int).mjava","sourceNew":"void assertTermDocsCount(String msg,\n                                   IndexReader reader,\n                                   Term term,\n                                   int expected)\n  throws IOException {\n  DocsEnum tdocs = _TestUtil.docs(random(), reader,\n                                  term.field(),\n                                  new BytesRef(term.text()),\n                                  MultiFields.getLiveDocs(reader),\n                                  null,\n                                  0);\n  int count = 0;\n  if (tdocs != null) {\n    while(tdocs.nextDoc()!= DocIdSetIterator.NO_MORE_DOCS) {\n      count++;\n    }\n  }\n  assertEquals(msg + \", count mismatch\", expected, count);\n}\n\n","sourceOld":"void assertTermDocsCount(String msg,\n                                   IndexReader reader,\n                                   Term term,\n                                   int expected)\n  throws IOException {\n  DocsEnum tdocs = _TestUtil.docs(random(), reader,\n                                  term.field(),\n                                  new BytesRef(term.text()),\n                                  MultiFields.getLiveDocs(reader),\n                                  null,\n                                  false);\n  int count = 0;\n  if (tdocs != null) {\n    while(tdocs.nextDoc()!= DocIdSetIterator.NO_MORE_DOCS) {\n      count++;\n    }\n  }\n  assertEquals(msg + \", count mismatch\", expected, count);\n}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6613659748fe4411a7dcf85266e55db1f95f7315","date":1392773913,"type":3,"author":"Benson Margulies","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#assertTermDocsCount(String,IndexReader,Term,int).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#assertTermDocsCount(String,IndexReader,Term,int).mjava","sourceNew":"void assertTermDocsCount(String msg,\n                                   IndexReader reader,\n                                   Term term,\n                                   int expected)\n  throws IOException {\n  DocsEnum tdocs = TestUtil.docs(random(), reader,\n      term.field(),\n      new BytesRef(term.text()),\n      MultiFields.getLiveDocs(reader),\n      null,\n      0);\n  int count = 0;\n  if (tdocs != null) {\n    while(tdocs.nextDoc()!= DocIdSetIterator.NO_MORE_DOCS) {\n      count++;\n    }\n  }\n  assertEquals(msg + \", count mismatch\", expected, count);\n}\n\n","sourceOld":"void assertTermDocsCount(String msg,\n                                   IndexReader reader,\n                                   Term term,\n                                   int expected)\n  throws IOException {\n  DocsEnum tdocs = _TestUtil.docs(random(), reader,\n                                  term.field(),\n                                  new BytesRef(term.text()),\n                                  MultiFields.getLiveDocs(reader),\n                                  null,\n                                  0);\n  int count = 0;\n  if (tdocs != null) {\n    while(tdocs.nextDoc()!= DocIdSetIterator.NO_MORE_DOCS) {\n      count++;\n    }\n  }\n  assertEquals(msg + \", count mismatch\", expected, count);\n}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"51f5280f31484820499077f41fcdfe92d527d9dc","date":1423229122,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#assertTermDocsCount(String,IndexReader,Term,int).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#assertTermDocsCount(String,IndexReader,Term,int).mjava","sourceNew":"void assertTermDocsCount(String msg,\n                                   IndexReader reader,\n                                   Term term,\n                                   int expected)\n  throws IOException {\n  PostingsEnum tdocs = TestUtil.docs(random(), reader,\n      term.field(),\n      new BytesRef(term.text()),\n      MultiFields.getLiveDocs(reader),\n      null,\n      0);\n  int count = 0;\n  if (tdocs != null) {\n    while(tdocs.nextDoc()!= DocIdSetIterator.NO_MORE_DOCS) {\n      count++;\n    }\n  }\n  assertEquals(msg + \", count mismatch\", expected, count);\n}\n\n","sourceOld":"void assertTermDocsCount(String msg,\n                                   IndexReader reader,\n                                   Term term,\n                                   int expected)\n  throws IOException {\n  DocsEnum tdocs = TestUtil.docs(random(), reader,\n      term.field(),\n      new BytesRef(term.text()),\n      MultiFields.getLiveDocs(reader),\n      null,\n      0);\n  int count = 0;\n  if (tdocs != null) {\n    while(tdocs.nextDoc()!= DocIdSetIterator.NO_MORE_DOCS) {\n      count++;\n    }\n  }\n  assertEquals(msg + \", count mismatch\", expected, count);\n}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f4464508ee83288c8c4585b533f9faaa93aa314","date":1435240759,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#assertTermDocsCount(String,IndexReader,Term,int).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#assertTermDocsCount(String,IndexReader,Term,int).mjava","sourceNew":"void assertTermDocsCount(String msg,\n                                   IndexReader reader,\n                                   Term term,\n                                   int expected)\n  throws IOException {\n  PostingsEnum tdocs = TestUtil.docs(random(), reader,\n      term.field(),\n      new BytesRef(term.text()),\n      null,\n      0);\n  int count = 0;\n  if (tdocs != null) {\n    while(tdocs.nextDoc()!= DocIdSetIterator.NO_MORE_DOCS) {\n      count++;\n    }\n  }\n  assertEquals(msg + \", count mismatch\", expected, count);\n}\n\n","sourceOld":"void assertTermDocsCount(String msg,\n                                   IndexReader reader,\n                                   Term term,\n                                   int expected)\n  throws IOException {\n  PostingsEnum tdocs = TestUtil.docs(random(), reader,\n      term.field(),\n      new BytesRef(term.text()),\n      MultiFields.getLiveDocs(reader),\n      null,\n      0);\n  int count = 0;\n  if (tdocs != null) {\n    while(tdocs.nextDoc()!= DocIdSetIterator.NO_MORE_DOCS) {\n      count++;\n    }\n  }\n  assertEquals(msg + \", count mismatch\", expected, count);\n}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"34d6426cef006e0c3625cabe7a7ec1c2b08bc501","date":1454683374,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#assertTermDocsCount(String,IndexReader,Term,int).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#assertTermDocsCount(String,IndexReader,Term,int).mjava","sourceNew":"  void assertTermDocsCount(String msg,\n                           IndexReader reader,\n                           Term term,\n                           int expected)\n    throws IOException {\n    PostingsEnum tdocs = TestUtil.docs(random(), reader,\n                                       term.field(),\n                                       new BytesRef(term.text()),\n                                       null,\n                                       0);\n    int count = 0;\n    if (tdocs != null) {\n      while(tdocs.nextDoc()!= DocIdSetIterator.NO_MORE_DOCS) {\n        count++;\n      }\n    }\n    assertEquals(msg + \", count mismatch\", expected, count);\n  }\n\n","sourceOld":"void assertTermDocsCount(String msg,\n                                   IndexReader reader,\n                                   Term term,\n                                   int expected)\n  throws IOException {\n  PostingsEnum tdocs = TestUtil.docs(random(), reader,\n      term.field(),\n      new BytesRef(term.text()),\n      null,\n      0);\n  int count = 0;\n  if (tdocs != null) {\n    while(tdocs.nextDoc()!= DocIdSetIterator.NO_MORE_DOCS) {\n      count++;\n    }\n  }\n  assertEquals(msg + \", count mismatch\", expected, count);\n}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b470f36a9372c97283360b1304eacbde22df6c0d","date":1454765175,"type":3,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#assertTermDocsCount(String,IndexReader,Term,int).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#assertTermDocsCount(String,IndexReader,Term,int).mjava","sourceNew":"  void assertTermDocsCount(String msg,\n                           IndexReader reader,\n                           Term term,\n                           int expected)\n    throws IOException {\n    PostingsEnum tdocs = TestUtil.docs(random(), reader,\n                                       term.field(),\n                                       new BytesRef(term.text()),\n                                       null,\n                                       0);\n    int count = 0;\n    if (tdocs != null) {\n      while(tdocs.nextDoc()!= DocIdSetIterator.NO_MORE_DOCS) {\n        count++;\n      }\n    }\n    assertEquals(msg + \", count mismatch\", expected, count);\n  }\n\n","sourceOld":"void assertTermDocsCount(String msg,\n                                   IndexReader reader,\n                                   Term term,\n                                   int expected)\n  throws IOException {\n  PostingsEnum tdocs = TestUtil.docs(random(), reader,\n      term.field(),\n      new BytesRef(term.text()),\n      null,\n      0);\n  int count = 0;\n  if (tdocs != null) {\n    while(tdocs.nextDoc()!= DocIdSetIterator.NO_MORE_DOCS) {\n      count++;\n    }\n  }\n  assertEquals(msg + \", count mismatch\", expected, count);\n}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1e6acbaae7af722f17204ceccf0f7db5753eccf3","date":1454775255,"type":3,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#assertTermDocsCount(String,IndexReader,Term,int).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#assertTermDocsCount(String,IndexReader,Term,int).mjava","sourceNew":"  void assertTermDocsCount(String msg,\n                           IndexReader reader,\n                           Term term,\n                           int expected)\n    throws IOException {\n    PostingsEnum tdocs = TestUtil.docs(random(), reader,\n                                       term.field(),\n                                       new BytesRef(term.text()),\n                                       null,\n                                       0);\n    int count = 0;\n    if (tdocs != null) {\n      while(tdocs.nextDoc()!= DocIdSetIterator.NO_MORE_DOCS) {\n        count++;\n      }\n    }\n    assertEquals(msg + \", count mismatch\", expected, count);\n  }\n\n","sourceOld":"void assertTermDocsCount(String msg,\n                                   IndexReader reader,\n                                   Term term,\n                                   int expected)\n  throws IOException {\n  PostingsEnum tdocs = TestUtil.docs(random(), reader,\n      term.field(),\n      new BytesRef(term.text()),\n      null,\n      0);\n  int count = 0;\n  if (tdocs != null) {\n    while(tdocs.nextDoc()!= DocIdSetIterator.NO_MORE_DOCS) {\n      count++;\n    }\n  }\n  assertEquals(msg + \", count mismatch\", expected, count);\n}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5a207d19eac354d649c3f0e2cce070017c78125e","date":1454776470,"type":3,"author":"Erick Erickson","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#assertTermDocsCount(String,IndexReader,Term,int).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestDirectoryReader#assertTermDocsCount(String,IndexReader,Term,int).mjava","sourceNew":"  void assertTermDocsCount(String msg,\n                           IndexReader reader,\n                           Term term,\n                           int expected)\n    throws IOException {\n    PostingsEnum tdocs = TestUtil.docs(random(), reader,\n                                       term.field(),\n                                       new BytesRef(term.text()),\n                                       null,\n                                       0);\n    int count = 0;\n    if (tdocs != null) {\n      while(tdocs.nextDoc()!= DocIdSetIterator.NO_MORE_DOCS) {\n        count++;\n      }\n    }\n    assertEquals(msg + \", count mismatch\", expected, count);\n  }\n\n","sourceOld":"void assertTermDocsCount(String msg,\n                                   IndexReader reader,\n                                   Term term,\n                                   int expected)\n  throws IOException {\n  PostingsEnum tdocs = TestUtil.docs(random(), reader,\n      term.field(),\n      new BytesRef(term.text()),\n      null,\n      0);\n  int count = 0;\n  if (tdocs != null) {\n    while(tdocs.nextDoc()!= DocIdSetIterator.NO_MORE_DOCS) {\n      count++;\n    }\n  }\n  assertEquals(msg + \", count mismatch\", expected, count);\n}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"34d6426cef006e0c3625cabe7a7ec1c2b08bc501":["0f4464508ee83288c8c4585b533f9faaa93aa314"],"83e99d44c4a660a48c0fcc7a0108ad0a56dc2f87":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"6613659748fe4411a7dcf85266e55db1f95f7315":["02331260bb246364779cb6f04919ca47900d01bb"],"5a207d19eac354d649c3f0e2cce070017c78125e":["0f4464508ee83288c8c4585b533f9faaa93aa314","b470f36a9372c97283360b1304eacbde22df6c0d"],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":["0f4464508ee83288c8c4585b533f9faaa93aa314","b470f36a9372c97283360b1304eacbde22df6c0d"],"51f5280f31484820499077f41fcdfe92d527d9dc":["6613659748fe4411a7dcf85266e55db1f95f7315"],"0f4464508ee83288c8c4585b533f9faaa93aa314":["51f5280f31484820499077f41fcdfe92d527d9dc"],"b470f36a9372c97283360b1304eacbde22df6c0d":["0f4464508ee83288c8c4585b533f9faaa93aa314","34d6426cef006e0c3625cabe7a7ec1c2b08bc501"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":["629c38c4ae4e303d0617e05fbfe508140b32f0a3","02331260bb246364779cb6f04919ca47900d01bb"],"d6f074e73200c07d54f242d3880a8da5a35ff97b":["629c38c4ae4e303d0617e05fbfe508140b32f0a3","02331260bb246364779cb6f04919ca47900d01bb"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["83e99d44c4a660a48c0fcc7a0108ad0a56dc2f87"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5a207d19eac354d649c3f0e2cce070017c78125e"],"02331260bb246364779cb6f04919ca47900d01bb":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"]},"commit2Childs":{"34d6426cef006e0c3625cabe7a7ec1c2b08bc501":["b470f36a9372c97283360b1304eacbde22df6c0d"],"83e99d44c4a660a48c0fcc7a0108ad0a56dc2f87":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"6613659748fe4411a7dcf85266e55db1f95f7315":["51f5280f31484820499077f41fcdfe92d527d9dc"],"5a207d19eac354d649c3f0e2cce070017c78125e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":[],"51f5280f31484820499077f41fcdfe92d527d9dc":["0f4464508ee83288c8c4585b533f9faaa93aa314"],"0f4464508ee83288c8c4585b533f9faaa93aa314":["34d6426cef006e0c3625cabe7a7ec1c2b08bc501","5a207d19eac354d649c3f0e2cce070017c78125e","1e6acbaae7af722f17204ceccf0f7db5753eccf3","b470f36a9372c97283360b1304eacbde22df6c0d"],"b470f36a9372c97283360b1304eacbde22df6c0d":["5a207d19eac354d649c3f0e2cce070017c78125e","1e6acbaae7af722f17204ceccf0f7db5753eccf3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["83e99d44c4a660a48c0fcc7a0108ad0a56dc2f87"],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":[],"d6f074e73200c07d54f242d3880a8da5a35ff97b":[],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","d6f074e73200c07d54f242d3880a8da5a35ff97b","02331260bb246364779cb6f04919ca47900d01bb"],"02331260bb246364779cb6f04919ca47900d01bb":["6613659748fe4411a7dcf85266e55db1f95f7315","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","d6f074e73200c07d54f242d3880a8da5a35ff97b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["1e6acbaae7af722f17204ceccf0f7db5753eccf3","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","d6f074e73200c07d54f242d3880a8da5a35ff97b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}