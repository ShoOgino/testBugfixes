{"path":"solr/core/src/java/org/apache/solr/core/HdfsDirectoryFactory#createLockFactory(String,String).mjava","commits":[{"id":"a0a506fe165b26e024afa1aec8a4a7d758e837ff","date":1410971446,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/HdfsDirectoryFactory#createLockFactory(String,String).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  protected LockFactory createLockFactory(String lockPath, String rawLockType) throws IOException {\n    if (null == rawLockType) {\n      LOG.warn(\"No lockType configured, assuming 'hdfs'.\");\n      rawLockType = \"hdfs\";\n    }\n    final String lockType = rawLockType.toLowerCase(Locale.ROOT).trim();\n    switch (lockType) {\n      case \"hdfs\":\n        return new HdfsLockFactory(new Path(lockPath), getConf());\n      case \"none\":\n        return NoLockFactory.getNoLockFactory();\n      default:\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n            \"Unrecognized lockType: \" + rawLockType);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8530de6254f3e7f3fc4c2c158a33e2f409626bf7","date":1410978971,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/HdfsDirectoryFactory#createLockFactory(String,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/HdfsDirectoryFactory#createLockFactory(String,String).mjava","sourceNew":"  @Override\n  protected LockFactory createLockFactory(String lockPath, String rawLockType) throws IOException {\n    if (null == rawLockType) {\n      LOG.warn(\"No lockType configured, assuming 'hdfs'.\");\n      rawLockType = \"hdfs\";\n    }\n    final String lockType = rawLockType.toLowerCase(Locale.ROOT).trim();\n    switch (lockType) {\n      case \"hdfs\":\n        return new HdfsLockFactory(new Path(lockPath), getConf());\n      case \"single\":\n        return new SingleInstanceLockFactory();\n      case \"none\":\n        return NoLockFactory.getNoLockFactory();\n      default:\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n            \"Unrecognized lockType: \" + rawLockType);\n    }\n  }\n\n","sourceOld":"  @Override\n  protected LockFactory createLockFactory(String lockPath, String rawLockType) throws IOException {\n    if (null == rawLockType) {\n      LOG.warn(\"No lockType configured, assuming 'hdfs'.\");\n      rawLockType = \"hdfs\";\n    }\n    final String lockType = rawLockType.toLowerCase(Locale.ROOT).trim();\n    switch (lockType) {\n      case \"hdfs\":\n        return new HdfsLockFactory(new Path(lockPath), getConf());\n      case \"none\":\n        return NoLockFactory.getNoLockFactory();\n      default:\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n            \"Unrecognized lockType: \" + rawLockType);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"285cdc737de75b7cc7c284a156b20214deb67bca","date":1415535483,"type":5,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/HdfsDirectoryFactory#createLockFactory(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/HdfsDirectoryFactory#createLockFactory(String,String).mjava","sourceNew":"  @Override\n  protected LockFactory createLockFactory(String rawLockType) throws IOException {\n    if (null == rawLockType) {\n      LOG.warn(\"No lockType configured, assuming 'hdfs'.\");\n      rawLockType = \"hdfs\";\n    }\n    final String lockType = rawLockType.toLowerCase(Locale.ROOT).trim();\n    switch (lockType) {\n      case \"hdfs\":\n        return HdfsLockFactory.INSTANCE;\n      case \"single\":\n        return new SingleInstanceLockFactory();\n      case \"none\":\n        return NoLockFactory.INSTANCE;\n      default:\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n            \"Unrecognized lockType: \" + rawLockType);\n    }\n  }\n\n","sourceOld":"  @Override\n  protected LockFactory createLockFactory(String lockPath, String rawLockType) throws IOException {\n    if (null == rawLockType) {\n      LOG.warn(\"No lockType configured, assuming 'hdfs'.\");\n      rawLockType = \"hdfs\";\n    }\n    final String lockType = rawLockType.toLowerCase(Locale.ROOT).trim();\n    switch (lockType) {\n      case \"hdfs\":\n        return new HdfsLockFactory(new Path(lockPath), getConf());\n      case \"single\":\n        return new SingleInstanceLockFactory();\n      case \"none\":\n        return NoLockFactory.getNoLockFactory();\n      default:\n        throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n            \"Unrecognized lockType: \" + rawLockType);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0a506fe165b26e024afa1aec8a4a7d758e837ff":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"8530de6254f3e7f3fc4c2c158a33e2f409626bf7":["a0a506fe165b26e024afa1aec8a4a7d758e837ff"],"285cdc737de75b7cc7c284a156b20214deb67bca":["8530de6254f3e7f3fc4c2c158a33e2f409626bf7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["285cdc737de75b7cc7c284a156b20214deb67bca"]},"commit2Childs":{"a0a506fe165b26e024afa1aec8a4a7d758e837ff":["8530de6254f3e7f3fc4c2c158a33e2f409626bf7"],"8530de6254f3e7f3fc4c2c158a33e2f409626bf7":["285cdc737de75b7cc7c284a156b20214deb67bca"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a0a506fe165b26e024afa1aec8a4a7d758e837ff"],"285cdc737de75b7cc7c284a156b20214deb67bca":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}