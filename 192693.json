{"path":"lucene/backward-codecs/src/test/org/apache/lucene/index/TestDocValuesUpdatesOnOldSegments#getValue(BinaryDocValues,int).mjava","commits":[{"id":"79091fb8a01635e0319c11e7ffbac106831b23cb","date":1409574060,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/backward-codecs/src/test/org/apache/lucene/index/TestDocValuesUpdatesOnOldSegments#getValue(BinaryDocValues,int).mjava","pathOld":"/dev/null","sourceNew":"  static long getValue(BinaryDocValues bdv, int idx) {\n    BytesRef term = bdv.get(idx);\n    idx = term.offset;\n    byte b = term.bytes[idx++];\n    long value = b & 0x7FL;\n    for (int shift = 7; (b & 0x80L) != 0; shift += 7) {\n      b = term.bytes[idx++];\n      value |= (b & 0x7FL) << shift;\n    }\n    return value;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"402ad3ddc9da7b70da1b167667a60ece6a1381fb","date":1409656478,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/backward-codecs/src/test/org/apache/lucene/index/TestDocValuesUpdatesOnOldSegments#getValue(BinaryDocValues,int).mjava","pathOld":"/dev/null","sourceNew":"  static long getValue(BinaryDocValues bdv, int idx) {\n    BytesRef term = bdv.get(idx);\n    idx = term.offset;\n    byte b = term.bytes[idx++];\n    long value = b & 0x7FL;\n    for (int shift = 7; (b & 0x80L) != 0; shift += 7) {\n      b = term.bytes[idx++];\n      value |= (b & 0x7FL) << shift;\n    }\n    return value;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"71387d8cb6923eb831b17a8b734608ba2e21c653","date":1414126093,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/backward-codecs/src/test/org/apache/lucene/index/TestBackwardsCompatibility#getValue(BinaryDocValues,int).mjava","pathOld":"lucene/backward-codecs/src/test/org/apache/lucene/index/TestDocValuesUpdatesOnOldSegments#getValue(BinaryDocValues,int).mjava","sourceNew":"  static long getValue(BinaryDocValues bdv, int idx) {\n    BytesRef term = bdv.get(idx);\n    idx = term.offset;\n    byte b = term.bytes[idx++];\n    long value = b & 0x7FL;\n    for (int shift = 7; (b & 0x80L) != 0; shift += 7) {\n      b = term.bytes[idx++];\n      value |= (b & 0x7FL) << shift;\n    }\n    return value;\n  }\n\n","sourceOld":"  static long getValue(BinaryDocValues bdv, int idx) {\n    BytesRef term = bdv.get(idx);\n    idx = term.offset;\n    byte b = term.bytes[idx++];\n    long value = b & 0x7FL;\n    for (int shift = 7; (b & 0x80L) != 0; shift += 7) {\n      b = term.bytes[idx++];\n      value |= (b & 0x7FL) << shift;\n    }\n    return value;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"71387d8cb6923eb831b17a8b734608ba2e21c653":["402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"79091fb8a01635e0319c11e7ffbac106831b23cb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["71387d8cb6923eb831b17a8b734608ba2e21c653"],"402ad3ddc9da7b70da1b167667a60ece6a1381fb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","79091fb8a01635e0319c11e7ffbac106831b23cb"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["79091fb8a01635e0319c11e7ffbac106831b23cb","402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"71387d8cb6923eb831b17a8b734608ba2e21c653":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"79091fb8a01635e0319c11e7ffbac106831b23cb":["402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"402ad3ddc9da7b70da1b167667a60ece6a1381fb":["71387d8cb6923eb831b17a8b734608ba2e21c653"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}