{"path":"lucene/queryparser/src/test/org/apache/lucene/queryparser/util/QueryParserTestBase#testProtectedCtors().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queryparser/src/test/org/apache/lucene/queryparser/util/QueryParserTestBase#testProtectedCtors().mjava","pathOld":"modules/queryparser/src/test/org/apache/lucene/queryparser/util/QueryParserTestBase#testProtectedCtors().mjava","sourceNew":"  // LUCENE-2002: when we run javacc to regen QueryParser,\n  // we also run a replaceregexp step to fix 2 of the public\n  // ctors (change them to protected):\n  //\n  //   protected QueryParser(CharStream stream)\n  //\n  //   protected QueryParser(QueryParserTokenManager tm)\n  //\n  // This test is here as a safety, in case that ant step\n  // doesn't work for some reason.\n  public void testProtectedCtors() throws Exception {\n    try {\n      QueryParser.class.getConstructor(new Class[] {CharStream.class});\n      fail(\"please switch public QueryParser(CharStream) to be protected\");\n    } catch (NoSuchMethodException nsme) {\n      // expected\n    }\n    try {\n      QueryParser.class.getConstructor(new Class[] {QueryParserTokenManager.class});\n      fail(\"please switch public QueryParser(QueryParserTokenManager) to be protected\");\n    } catch (NoSuchMethodException nsme) {\n      // expected\n    }\n  }\n\n","sourceOld":"  // LUCENE-2002: when we run javacc to regen QueryParser,\n  // we also run a replaceregexp step to fix 2 of the public\n  // ctors (change them to protected):\n  //\n  //   protected QueryParser(CharStream stream)\n  //\n  //   protected QueryParser(QueryParserTokenManager tm)\n  //\n  // This test is here as a safety, in case that ant step\n  // doesn't work for some reason.\n  public void testProtectedCtors() throws Exception {\n    try {\n      QueryParser.class.getConstructor(new Class[] {CharStream.class});\n      fail(\"please switch public QueryParser(CharStream) to be protected\");\n    } catch (NoSuchMethodException nsme) {\n      // expected\n    }\n    try {\n      QueryParser.class.getConstructor(new Class[] {QueryParserTokenManager.class});\n      fail(\"please switch public QueryParser(QueryParserTokenManager) to be protected\");\n    } catch (NoSuchMethodException nsme) {\n      // expected\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ee76d213d935c68932ca13b55fa0a8a32bf6af1a","date":1343572717,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queryparser/src/test/org/apache/lucene/queryparser/classic/TestQueryParser#testProtectedCtors().mjava","pathOld":"lucene/queryparser/src/test/org/apache/lucene/queryparser/util/QueryParserTestBase#testProtectedCtors().mjava","sourceNew":"  // LUCENE-2002: when we run javacc to regen QueryParser,\n  // we also run a replaceregexp step to fix 2 of the public\n  // ctors (change them to protected):\n  //\n  // protected QueryParser(CharStream stream)\n  //\n  // protected QueryParser(QueryParserTokenManager tm)\n  //\n  // This test is here as a safety, in case that ant step\n  // doesn't work for some reason.\n  public void testProtectedCtors() throws Exception {\n    try {\n      QueryParser.class.getConstructor(new Class[] {CharStream.class});\n      fail(\"please switch public QueryParser(CharStream) to be protected\");\n    } catch (NoSuchMethodException nsme) {\n      // expected\n    }\n    try {\n      QueryParser.class\n          .getConstructor(new Class[] {QueryParserTokenManager.class});\n      fail(\"please switch public QueryParser(QueryParserTokenManager) to be protected\");\n    } catch (NoSuchMethodException nsme) {\n      // expected\n    }\n  }\n\n","sourceOld":"  // LUCENE-2002: when we run javacc to regen QueryParser,\n  // we also run a replaceregexp step to fix 2 of the public\n  // ctors (change them to protected):\n  //\n  //   protected QueryParser(CharStream stream)\n  //\n  //   protected QueryParser(QueryParserTokenManager tm)\n  //\n  // This test is here as a safety, in case that ant step\n  // doesn't work for some reason.\n  public void testProtectedCtors() throws Exception {\n    try {\n      QueryParser.class.getConstructor(new Class[] {CharStream.class});\n      fail(\"please switch public QueryParser(CharStream) to be protected\");\n    } catch (NoSuchMethodException nsme) {\n      // expected\n    }\n    try {\n      QueryParser.class.getConstructor(new Class[] {QueryParserTokenManager.class});\n      fail(\"please switch public QueryParser(QueryParserTokenManager) to be protected\");\n    } catch (NoSuchMethodException nsme) {\n      // expected\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","date":1343768312,"type":4,"author":"Michael McCandless","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/queryparser/src/test/org/apache/lucene/queryparser/util/QueryParserTestBase#testProtectedCtors().mjava","sourceNew":null,"sourceOld":"  // LUCENE-2002: when we run javacc to regen QueryParser,\n  // we also run a replaceregexp step to fix 2 of the public\n  // ctors (change them to protected):\n  //\n  //   protected QueryParser(CharStream stream)\n  //\n  //   protected QueryParser(QueryParserTokenManager tm)\n  //\n  // This test is here as a safety, in case that ant step\n  // doesn't work for some reason.\n  public void testProtectedCtors() throws Exception {\n    try {\n      QueryParser.class.getConstructor(new Class[] {CharStream.class});\n      fail(\"please switch public QueryParser(CharStream) to be protected\");\n    } catch (NoSuchMethodException nsme) {\n      // expected\n    }\n    try {\n      QueryParser.class.getConstructor(new Class[] {QueryParserTokenManager.class});\n      fail(\"please switch public QueryParser(QueryParserTokenManager) to be protected\");\n    } catch (NoSuchMethodException nsme) {\n      // expected\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d6f074e73200c07d54f242d3880a8da5a35ff97b","date":1344507653,"type":4,"author":"Uwe Schindler","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/queryparser/src/test/org/apache/lucene/queryparser/util/QueryParserTestBase#testProtectedCtors().mjava","sourceNew":null,"sourceOld":"  // LUCENE-2002: when we run javacc to regen QueryParser,\n  // we also run a replaceregexp step to fix 2 of the public\n  // ctors (change them to protected):\n  //\n  //   protected QueryParser(CharStream stream)\n  //\n  //   protected QueryParser(QueryParserTokenManager tm)\n  //\n  // This test is here as a safety, in case that ant step\n  // doesn't work for some reason.\n  public void testProtectedCtors() throws Exception {\n    try {\n      QueryParser.class.getConstructor(new Class[] {CharStream.class});\n      fail(\"please switch public QueryParser(CharStream) to be protected\");\n    } catch (NoSuchMethodException nsme) {\n      // expected\n    }\n    try {\n      QueryParser.class.getConstructor(new Class[] {QueryParserTokenManager.class});\n      fail(\"please switch public QueryParser(QueryParserTokenManager) to be protected\");\n    } catch (NoSuchMethodException nsme) {\n      // expected\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ee76d213d935c68932ca13b55fa0a8a32bf6af1a":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":["b89678825b68eccaf09e6ab71675fc0b0af1e099","ee76d213d935c68932ca13b55fa0a8a32bf6af1a"],"d6f074e73200c07d54f242d3880a8da5a35ff97b":["b89678825b68eccaf09e6ab71675fc0b0af1e099","ee76d213d935c68932ca13b55fa0a8a32bf6af1a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ee76d213d935c68932ca13b55fa0a8a32bf6af1a"]},"commit2Childs":{"ee76d213d935c68932ca13b55fa0a8a32bf6af1a":["b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","d6f074e73200c07d54f242d3880a8da5a35ff97b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["ee76d213d935c68932ca13b55fa0a8a32bf6af1a","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","d6f074e73200c07d54f242d3880a8da5a35ff97b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":[],"d6f074e73200c07d54f242d3880a8da5a35ff97b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","d6f074e73200c07d54f242d3880a8da5a35ff97b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}