{"path":"lucene/core/src/test/org/apache/lucene/search/TestFilteredQuery#newStaticFilterA().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestFilteredQuery#newStaticFilterA().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestFilteredQuery#newStaticFilterA().mjava","sourceNew":"  // must be static for serialization tests \n  private static Filter newStaticFilterA() {\n    return new Filter() {\n      @Override\n      public DocIdSet getDocIdSet (AtomicReaderContext context, Bits acceptDocs) {\n        assertNull(\"acceptDocs should be null, as we have an index without deletions\", acceptDocs);\n        BitSet bitset = new BitSet(5);\n        bitset.set(0, 5);\n        return new DocIdBitSet(bitset);\n      }\n    };\n  }\n\n","sourceOld":"  // must be static for serialization tests \n  private static Filter newStaticFilterA() {\n    return new Filter() {\n      @Override\n      public DocIdSet getDocIdSet (AtomicReaderContext context, Bits acceptDocs) {\n        assertNull(\"acceptDocs should be null, as we have an index without deletions\", acceptDocs);\n        BitSet bitset = new BitSet(5);\n        bitset.set(0, 5);\n        return new DocIdBitSet(bitset);\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c9fb5f46e264daf5ba3860defe623a89d202dd87","date":1411516315,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestFilteredQuery#newStaticFilterA().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestFilteredQuery#newStaticFilterA().mjava","sourceNew":"  // must be static for serialization tests \n  private static Filter newStaticFilterA() {\n    return new Filter() {\n      @Override\n      public DocIdSet getDocIdSet (LeafReaderContext context, Bits acceptDocs) {\n        assertNull(\"acceptDocs should be null, as we have an index without deletions\", acceptDocs);\n        BitSet bitset = new BitSet(5);\n        bitset.set(0, 5);\n        return new DocIdBitSet(bitset);\n      }\n    };\n  }\n\n","sourceOld":"  // must be static for serialization tests \n  private static Filter newStaticFilterA() {\n    return new Filter() {\n      @Override\n      public DocIdSet getDocIdSet (AtomicReaderContext context, Bits acceptDocs) {\n        assertNull(\"acceptDocs should be null, as we have an index without deletions\", acceptDocs);\n        BitSet bitset = new BitSet(5);\n        bitset.set(0, 5);\n        return new DocIdBitSet(bitset);\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0557ea16725aaafcd3dd3d3ec90445ff1ce22eb8","date":1412674810,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestFilteredQuery#newStaticFilterA().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestFilteredQuery#newStaticFilterA().mjava","sourceNew":"  // must be static for serialization tests \n  private static Filter newStaticFilterA() {\n    return new Filter() {\n      @Override\n      public DocIdSet getDocIdSet (LeafReaderContext context, Bits acceptDocs) {\n        assertNull(\"acceptDocs should be null, as we have an index without deletions\", acceptDocs);\n        FixedBitSet bitset = new FixedBitSet(context.reader().maxDoc());\n        bitset.set(0, Math.min(5, bitset.length()));\n        return bitset;\n      }\n    };\n  }\n\n","sourceOld":"  // must be static for serialization tests \n  private static Filter newStaticFilterA() {\n    return new Filter() {\n      @Override\n      public DocIdSet getDocIdSet (LeafReaderContext context, Bits acceptDocs) {\n        assertNull(\"acceptDocs should be null, as we have an index without deletions\", acceptDocs);\n        BitSet bitset = new BitSet(5);\n        bitset.set(0, 5);\n        return new DocIdBitSet(bitset);\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"55980207f1977bd1463465de1659b821347e2fa8","date":1413336386,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestFilteredQuery#newStaticFilterA().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestFilteredQuery#newStaticFilterA().mjava","sourceNew":"  // must be static for serialization tests \n  private static Filter newStaticFilterA() {\n    return new Filter() {\n      @Override\n      public DocIdSet getDocIdSet (LeafReaderContext context, Bits acceptDocs) {\n        assertNull(\"acceptDocs should be null, as we have an index without deletions\", acceptDocs);\n        FixedBitSet bitset = new FixedBitSet(context.reader().maxDoc());\n        bitset.set(0, Math.min(5, bitset.length()));\n        return bitset;\n      }\n    };\n  }\n\n","sourceOld":"  // must be static for serialization tests \n  private static Filter newStaticFilterA() {\n    return new Filter() {\n      @Override\n      public DocIdSet getDocIdSet (LeafReaderContext context, Bits acceptDocs) {\n        assertNull(\"acceptDocs should be null, as we have an index without deletions\", acceptDocs);\n        BitSet bitset = new BitSet(5);\n        bitset.set(0, 5);\n        return new DocIdBitSet(bitset);\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"80c55596a764e2d397e982828e75fcac5ce430a0","date":1413987559,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestFilteredQuery#newStaticFilterA().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestFilteredQuery#newStaticFilterA().mjava","sourceNew":"  // must be static for serialization tests \n  private static Filter newStaticFilterA() {\n    return new Filter() {\n      @Override\n      public DocIdSet getDocIdSet (LeafReaderContext context, Bits acceptDocs) {\n        assertNull(\"acceptDocs should be null, as we have an index without deletions\", acceptDocs);\n        FixedBitSet bitset = new FixedBitSet(context.reader().maxDoc());\n        bitset.set(0, Math.min(5, bitset.length()));\n        return new FixedBitDocIdSet(bitset);\n      }\n    };\n  }\n\n","sourceOld":"  // must be static for serialization tests \n  private static Filter newStaticFilterA() {\n    return new Filter() {\n      @Override\n      public DocIdSet getDocIdSet (LeafReaderContext context, Bits acceptDocs) {\n        assertNull(\"acceptDocs should be null, as we have an index without deletions\", acceptDocs);\n        FixedBitSet bitset = new FixedBitSet(context.reader().maxDoc());\n        bitset.set(0, Math.min(5, bitset.length()));\n        return bitset;\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0abcec02c9851c46c70a75bd42fb6e4d5348ac9e","date":1414135939,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestFilteredQuery#newStaticFilterA().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestFilteredQuery#newStaticFilterA().mjava","sourceNew":"  // must be static for serialization tests \n  private static Filter newStaticFilterA() {\n    return new Filter() {\n      @Override\n      public DocIdSet getDocIdSet (LeafReaderContext context, Bits acceptDocs) {\n        assertNull(\"acceptDocs should be null, as we have an index without deletions\", acceptDocs);\n        FixedBitSet bitset = new FixedBitSet(context.reader().maxDoc());\n        bitset.set(0, Math.min(5, bitset.length()));\n        return new BitDocIdSet(bitset);\n      }\n    };\n  }\n\n","sourceOld":"  // must be static for serialization tests \n  private static Filter newStaticFilterA() {\n    return new Filter() {\n      @Override\n      public DocIdSet getDocIdSet (LeafReaderContext context, Bits acceptDocs) {\n        assertNull(\"acceptDocs should be null, as we have an index without deletions\", acceptDocs);\n        FixedBitSet bitset = new FixedBitSet(context.reader().maxDoc());\n        bitset.set(0, Math.min(5, bitset.length()));\n        return new FixedBitDocIdSet(bitset);\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fb58c5f77afb63ba911f6d62f4c1d89f15e56dc6","date":1424027250,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestFilteredQuery#newStaticFilterA().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestFilteredQuery#newStaticFilterA().mjava","sourceNew":"  // must be static for serialization tests \n  private static Filter newStaticFilterA() {\n    return new Filter() {\n      @Override\n      public DocIdSet getDocIdSet (LeafReaderContext context, Bits acceptDocs) {\n        assertNull(\"acceptDocs should be null, as we have an index without deletions\", acceptDocs);\n        FixedBitSet bitset = new FixedBitSet(context.reader().maxDoc());\n        bitset.set(0, Math.min(5, bitset.length()));\n        return new BitDocIdSet(bitset);\n      }\n      @Override\n      public String toString(String field) {\n        return \"staticFilterA\";\n      }\n    };\n  }\n\n","sourceOld":"  // must be static for serialization tests \n  private static Filter newStaticFilterA() {\n    return new Filter() {\n      @Override\n      public DocIdSet getDocIdSet (LeafReaderContext context, Bits acceptDocs) {\n        assertNull(\"acceptDocs should be null, as we have an index without deletions\", acceptDocs);\n        FixedBitSet bitset = new FixedBitSet(context.reader().maxDoc());\n        bitset.set(0, Math.min(5, bitset.length()));\n        return new BitDocIdSet(bitset);\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1db68e96dd908fcd79ef809095822736aa601d08","date":1434630596,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestFilteredQuery#newStaticFilterA().mjava","sourceNew":null,"sourceOld":"  // must be static for serialization tests \n  private static Filter newStaticFilterA() {\n    return new Filter() {\n      @Override\n      public DocIdSet getDocIdSet (LeafReaderContext context, Bits acceptDocs) {\n        assertNull(\"acceptDocs should be null, as we have an index without deletions\", acceptDocs);\n        FixedBitSet bitset = new FixedBitSet(context.reader().maxDoc());\n        bitset.set(0, Math.min(5, bitset.length()));\n        return new BitDocIdSet(bitset);\n      }\n      @Override\n      public String toString(String field) {\n        return \"staticFilterA\";\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"fb58c5f77afb63ba911f6d62f4c1d89f15e56dc6":["0abcec02c9851c46c70a75bd42fb6e4d5348ac9e"],"1db68e96dd908fcd79ef809095822736aa601d08":["fb58c5f77afb63ba911f6d62f4c1d89f15e56dc6"],"55980207f1977bd1463465de1659b821347e2fa8":["c9fb5f46e264daf5ba3860defe623a89d202dd87","0557ea16725aaafcd3dd3d3ec90445ff1ce22eb8"],"0557ea16725aaafcd3dd3d3ec90445ff1ce22eb8":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"80c55596a764e2d397e982828e75fcac5ce430a0":["0557ea16725aaafcd3dd3d3ec90445ff1ce22eb8"],"0abcec02c9851c46c70a75bd42fb6e4d5348ac9e":["80c55596a764e2d397e982828e75fcac5ce430a0"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1db68e96dd908fcd79ef809095822736aa601d08"]},"commit2Childs":{"fb58c5f77afb63ba911f6d62f4c1d89f15e56dc6":["1db68e96dd908fcd79ef809095822736aa601d08"],"1db68e96dd908fcd79ef809095822736aa601d08":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"55980207f1977bd1463465de1659b821347e2fa8":[],"0557ea16725aaafcd3dd3d3ec90445ff1ce22eb8":["55980207f1977bd1463465de1659b821347e2fa8","80c55596a764e2d397e982828e75fcac5ce430a0"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"80c55596a764e2d397e982828e75fcac5ce430a0":["0abcec02c9851c46c70a75bd42fb6e4d5348ac9e"],"0abcec02c9851c46c70a75bd42fb6e4d5348ac9e":["fb58c5f77afb63ba911f6d62f4c1d89f15e56dc6"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["55980207f1977bd1463465de1659b821347e2fa8","0557ea16725aaafcd3dd3d3ec90445ff1ce22eb8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["55980207f1977bd1463465de1659b821347e2fa8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}