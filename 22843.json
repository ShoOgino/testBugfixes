{"path":"src/test/org/apache/lucene/search/spans/TestBasics#testBoolean().mjava","commits":[{"id":"b9c6ad49171d39d4831b1593ee88741b7b38b042","date":1085506498,"type":1,"author":"Erik Hatcher","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/spans/TestBasics#testBoolean().mjava","pathOld":"src/test/org/apache/lucene/search/TestBasics#testBoolean().mjava","sourceNew":"  public void testBoolean() throws Exception {\n    BooleanQuery query = new BooleanQuery();\n    query.add(new TermQuery(new Term(\"field\", \"seventy\")), true, false);\n    query.add(new TermQuery(new Term(\"field\", \"seven\")), true, false);\n    checkHits(query, new int[]\n      {77, 777, 177, 277, 377, 477, 577, 677, 770, 771, 772, 773, 774, 775,\n       776, 778, 779, 877, 977});\n  }\n\n","sourceOld":"  public void testBoolean() throws Exception {\n    BooleanQuery query = new BooleanQuery();\n    query.add(new TermQuery(new Term(\"field\", \"seventy\")), true, false);\n    query.add(new TermQuery(new Term(\"field\", \"seven\")), true, false);\n    checkHits(query, new int[]\n      {77, 777, 177, 277, 377, 477, 577, 677, 770, 771, 772, 773, 774, 775,\n       776, 778, 779, 877, 977});\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"715e4b45eb7889909242a8539d53783b5d95b23d","date":1115407974,"type":3,"author":"Daniel Naber","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/spans/TestBasics#testBoolean().mjava","pathOld":"src/test/org/apache/lucene/search/spans/TestBasics#testBoolean().mjava","sourceNew":"  public void testBoolean() throws Exception {\n    BooleanQuery query = new BooleanQuery();\n    query.add(new TermQuery(new Term(\"field\", \"seventy\")), BooleanClause.Occur.MUST);\n    query.add(new TermQuery(new Term(\"field\", \"seven\")), BooleanClause.Occur.MUST);\n    checkHits(query, new int[]\n      {77, 777, 177, 277, 377, 477, 577, 677, 770, 771, 772, 773, 774, 775,\n       776, 778, 779, 877, 977});\n  }\n\n","sourceOld":"  public void testBoolean() throws Exception {\n    BooleanQuery query = new BooleanQuery();\n    query.add(new TermQuery(new Term(\"field\", \"seventy\")), true, false);\n    query.add(new TermQuery(new Term(\"field\", \"seven\")), true, false);\n    checkHits(query, new int[]\n      {77, 777, 177, 277, 377, 477, 577, 677, 770, 771, 772, 773, 774, 775,\n       776, 778, 779, 877, 977});\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/spans/TestBasics#testBoolean().mjava","pathOld":"src/test/org/apache/lucene/search/spans/TestBasics#testBoolean().mjava","sourceNew":"  public void testBoolean() throws Exception {\n    BooleanQuery query = new BooleanQuery();\n    query.add(new TermQuery(new Term(\"field\", \"seventy\")), BooleanClause.Occur.MUST);\n    query.add(new TermQuery(new Term(\"field\", \"seven\")), BooleanClause.Occur.MUST);\n    checkHits(query, new int[]\n      {77, 777, 177, 277, 377, 477, 577, 677, 770, 771, 772, 773, 774, 775,\n       776, 778, 779, 877, 977});\n  }\n\n","sourceOld":"  public void testBoolean() throws Exception {\n    BooleanQuery query = new BooleanQuery();\n    query.add(new TermQuery(new Term(\"field\", \"seventy\")), BooleanClause.Occur.MUST);\n    query.add(new TermQuery(new Term(\"field\", \"seven\")), BooleanClause.Occur.MUST);\n    checkHits(query, new int[]\n      {77, 777, 177, 277, 377, 477, 577, 677, 770, 771, 772, 773, 774, 775,\n       776, 778, 779, 877, 977});\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b9c6ad49171d39d4831b1593ee88741b7b38b042":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"715e4b45eb7889909242a8539d53783b5d95b23d":["b9c6ad49171d39d4831b1593ee88741b7b38b042"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["715e4b45eb7889909242a8539d53783b5d95b23d"]},"commit2Childs":{"b9c6ad49171d39d4831b1593ee88741b7b38b042":["715e4b45eb7889909242a8539d53783b5d95b23d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b9c6ad49171d39d4831b1593ee88741b7b38b042"],"715e4b45eb7889909242a8539d53783b5d95b23d":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}