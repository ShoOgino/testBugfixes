{"path":"src/java/org/apache/lucene/search/Searchable#search(QueryWeight,Filter,Collector).mjava","commits":[{"id":"052fac7830290bd38a04cddee1a121ee07656b56","date":1245780702,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/Searchable#search(QueryWeight,Filter,Collector).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Lower-level search API.\n   * \n   * <p>\n   * {@link Collector#collect(int)} is called for every document. <br>\n   * Collector-based access to remote indexes is discouraged.\n   * \n   * <p>\n   * Applications should only use this if they need <i>all</i> of the matching\n   * documents. The high-level search API ({@link Searcher#search(Query)}) is\n   * usually more efficient, as it skips non-high-scoring hits.\n   * \n   * @param weight\n   *          to match documents\n   * @param filter\n   *          if non-null, used to permit documents to be collected.\n   * @param collector\n   *          to receive hits\n   * @throws BooleanQuery.TooManyClauses\n   */\n  void search(QueryWeight weight, Filter filter, Collector collector) throws IOException;\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe941135bdfc28c81e20b4d21422f8726af34925","date":1250040150,"type":4,"author":"Mark Robert Miller","isMerge":false,"pathNew":"/dev/null","pathOld":"src/java/org/apache/lucene/search/Searchable#search(QueryWeight,Filter,Collector).mjava","sourceNew":null,"sourceOld":"  /**\n   * Lower-level search API.\n   * \n   * <p>\n   * {@link Collector#collect(int)} is called for every document. <br>\n   * Collector-based access to remote indexes is discouraged.\n   * \n   * <p>\n   * Applications should only use this if they need <i>all</i> of the matching\n   * documents. The high-level search API ({@link Searcher#search(Query)}) is\n   * usually more efficient, as it skips non-high-scoring hits.\n   * \n   * @param weight\n   *          to match documents\n   * @param filter\n   *          if non-null, used to permit documents to be collected.\n   * @param collector\n   *          to receive hits\n   * @throws BooleanQuery.TooManyClauses\n   */\n  void search(QueryWeight weight, Filter filter, Collector collector) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"fe941135bdfc28c81e20b4d21422f8726af34925":["052fac7830290bd38a04cddee1a121ee07656b56"],"052fac7830290bd38a04cddee1a121ee07656b56":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["fe941135bdfc28c81e20b4d21422f8726af34925"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["052fac7830290bd38a04cddee1a121ee07656b56"],"fe941135bdfc28c81e20b4d21422f8726af34925":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"052fac7830290bd38a04cddee1a121ee07656b56":["fe941135bdfc28c81e20b4d21422f8726af34925"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}