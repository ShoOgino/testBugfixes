{"path":"solr/contrib/prometheus-exporter/src/test/org/apache/solr/prometheus/exporter/SolrExporterTestBase#setupCluster().mjava","commits":[{"id":"aca9a18be9d7251531953284ee8d8012b022cbc7","date":1519116407,"type":0,"author":"koji","isMerge":false,"pathNew":"solr/contrib/prometheus-exporter/src/test/org/apache/solr/prometheus/exporter/SolrExporterTestBase#setupCluster().mjava","pathOld":"/dev/null","sourceNew":"  @BeforeClass\n  public static void setupCluster() throws Exception {\n    configureCluster(NUM_NODES)\n        .addConfig(CONF_NAME, getFile(CONF_DIR).toPath())\n        .configure();\n\n    CollectionAdminRequest\n        .createCollection(COLLECTION, CONF_NAME, NUM_SHARDS, NUM_REPLICAS)\n        .setMaxShardsPerNode(MAX_SHARDS_PER_NODE)\n        .process(cluster.getSolrClient());\n\n    AbstractDistribZkTestBase\n        .waitForRecoveriesToFinish(COLLECTION, cluster.getSolrClient().getZkStateReader(), true, true, TIMEOUT);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6edfc2dfac665ac59cb5f5335512bea5456d1dc3","date":1519140363,"type":4,"author":"koji","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/contrib/prometheus-exporter/src/test/org/apache/solr/prometheus/exporter/SolrExporterTestBase#setupCluster().mjava","sourceNew":null,"sourceOld":"  @BeforeClass\n  public static void setupCluster() throws Exception {\n    configureCluster(NUM_NODES)\n        .addConfig(CONF_NAME, getFile(CONF_DIR).toPath())\n        .configure();\n\n    CollectionAdminRequest\n        .createCollection(COLLECTION, CONF_NAME, NUM_SHARDS, NUM_REPLICAS)\n        .setMaxShardsPerNode(MAX_SHARDS_PER_NODE)\n        .process(cluster.getSolrClient());\n\n    AbstractDistribZkTestBase\n        .waitForRecoveriesToFinish(COLLECTION, cluster.getSolrClient().getZkStateReader(), true, true, TIMEOUT);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"873efcdf87d1e2a7c3014c56779fec9967a3ec9f","date":1519279726,"type":0,"author":"koji","isMerge":false,"pathNew":"solr/contrib/prometheus-exporter/src/test/org/apache/solr/prometheus/exporter/SolrExporterTestBase#setupCluster().mjava","pathOld":"/dev/null","sourceNew":"  @BeforeClass\n  public static void setupCluster() throws Exception {\n    configureCluster(NUM_NODES)\n        .addConfig(CONF_NAME, getFile(CONF_DIR).toPath())\n        .configure();\n\n    CollectionAdminRequest\n        .createCollection(COLLECTION, CONF_NAME, NUM_SHARDS, NUM_REPLICAS)\n        .setMaxShardsPerNode(MAX_SHARDS_PER_NODE)\n        .process(cluster.getSolrClient());\n\n    AbstractDistribZkTestBase\n        .waitForRecoveriesToFinish(COLLECTION, cluster.getSolrClient().getZkStateReader(), true, true, TIMEOUT);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0b857dd3d30acf3541d2bf24a619d81effc9c11d","date":1519436286,"type":4,"author":"koji","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/contrib/prometheus-exporter/src/test/org/apache/solr/prometheus/exporter/SolrExporterTestBase#setupCluster().mjava","sourceNew":null,"sourceOld":"  @BeforeClass\n  public static void setupCluster() throws Exception {\n    configureCluster(NUM_NODES)\n        .addConfig(CONF_NAME, getFile(CONF_DIR).toPath())\n        .configure();\n\n    CollectionAdminRequest\n        .createCollection(COLLECTION, CONF_NAME, NUM_SHARDS, NUM_REPLICAS)\n        .setMaxShardsPerNode(MAX_SHARDS_PER_NODE)\n        .process(cluster.getSolrClient());\n\n    AbstractDistribZkTestBase\n        .waitForRecoveriesToFinish(COLLECTION, cluster.getSolrClient().getZkStateReader(), true, true, TIMEOUT);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f1a927b2bca4e3939de1ef05d142c13cee9c1245","date":1520231792,"type":0,"author":"koji","isMerge":false,"pathNew":"solr/contrib/prometheus-exporter/src/test/org/apache/solr/prometheus/exporter/SolrExporterTestBase#setupCluster().mjava","pathOld":"/dev/null","sourceNew":"  @BeforeClass\n  public static void setupCluster() throws Exception {\n    configureCluster(NUM_NODES)\n        .addConfig(CONF_NAME, getFile(CONF_DIR).toPath())\n        .configure();\n\n    CollectionAdminRequest\n        .createCollection(COLLECTION, CONF_NAME, NUM_SHARDS, NUM_REPLICAS)\n        .setMaxShardsPerNode(MAX_SHARDS_PER_NODE)\n        .process(cluster.getSolrClient());\n\n    AbstractDistribZkTestBase\n        .waitForRecoveriesToFinish(COLLECTION, cluster.getSolrClient().getZkStateReader(), true, true, TIMEOUT);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cd8a9425419baa85ef4a56ed411ffb4c57964d3","date":1551677567,"type":5,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/contrib/prometheus-exporter/src/test/org/apache/solr/prometheus/PrometheusExporterTestBase#setupCluster().mjava","pathOld":"solr/contrib/prometheus-exporter/src/test/org/apache/solr/prometheus/exporter/SolrExporterTestBase#setupCluster().mjava","sourceNew":"  @BeforeClass\n  public static void setupCluster() throws Exception {\n    configureCluster(NUM_NODES)\n        .addConfig(CONF_NAME, getFile(CONF_DIR).toPath())\n        .configure();\n\n    CollectionAdminRequest\n        .createCollection(COLLECTION, CONF_NAME, NUM_SHARDS, NUM_REPLICAS)\n        .setMaxShardsPerNode(MAX_SHARDS_PER_NODE)\n        .process(cluster.getSolrClient());\n\n    AbstractDistribZkTestBase\n        .waitForRecoveriesToFinish(COLLECTION, cluster.getSolrClient().getZkStateReader(), true, true, TIMEOUT);\n\n    Helpers.indexAllDocs(cluster.getSolrClient());\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void setupCluster() throws Exception {\n    configureCluster(NUM_NODES)\n        .addConfig(CONF_NAME, getFile(CONF_DIR).toPath())\n        .configure();\n\n    CollectionAdminRequest\n        .createCollection(COLLECTION, CONF_NAME, NUM_SHARDS, NUM_REPLICAS)\n        .setMaxShardsPerNode(MAX_SHARDS_PER_NODE)\n        .process(cluster.getSolrClient());\n\n    AbstractDistribZkTestBase\n        .waitForRecoveriesToFinish(COLLECTION, cluster.getSolrClient().getZkStateReader(), true, true, TIMEOUT);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"873efcdf87d1e2a7c3014c56779fec9967a3ec9f":["6edfc2dfac665ac59cb5f5335512bea5456d1dc3"],"f1a927b2bca4e3939de1ef05d142c13cee9c1245":["0b857dd3d30acf3541d2bf24a619d81effc9c11d"],"0b857dd3d30acf3541d2bf24a619d81effc9c11d":["873efcdf87d1e2a7c3014c56779fec9967a3ec9f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6edfc2dfac665ac59cb5f5335512bea5456d1dc3":["aca9a18be9d7251531953284ee8d8012b022cbc7"],"aca9a18be9d7251531953284ee8d8012b022cbc7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4cd8a9425419baa85ef4a56ed411ffb4c57964d3"],"4cd8a9425419baa85ef4a56ed411ffb4c57964d3":["f1a927b2bca4e3939de1ef05d142c13cee9c1245"]},"commit2Childs":{"873efcdf87d1e2a7c3014c56779fec9967a3ec9f":["0b857dd3d30acf3541d2bf24a619d81effc9c11d"],"f1a927b2bca4e3939de1ef05d142c13cee9c1245":["4cd8a9425419baa85ef4a56ed411ffb4c57964d3"],"0b857dd3d30acf3541d2bf24a619d81effc9c11d":["f1a927b2bca4e3939de1ef05d142c13cee9c1245"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["aca9a18be9d7251531953284ee8d8012b022cbc7"],"6edfc2dfac665ac59cb5f5335512bea5456d1dc3":["873efcdf87d1e2a7c3014c56779fec9967a3ec9f"],"aca9a18be9d7251531953284ee8d8012b022cbc7":["6edfc2dfac665ac59cb5f5335512bea5456d1dc3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"4cd8a9425419baa85ef4a56ed411ffb4c57964d3":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}