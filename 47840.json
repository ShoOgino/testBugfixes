{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/RawValueEvaluator#RawValueEvaluator(StreamExpression,StreamFactory).mjava","commits":[{"id":"88073e8783f450d4c0218decc2f001a1ac2c7e7c","date":1486705191,"type":0,"author":"Dennis Gove","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/eval/RawValueEvaluator#RawValueEvaluator(StreamExpression,StreamFactory).mjava","pathOld":"/dev/null","sourceNew":"  public RawValueEvaluator(StreamExpression expression, StreamFactory factory) throws IOException{\n    // We have to do this because order of the parameters matter\n    List<StreamExpressionParameter> parameters = factory.getOperandsOfType(expression, StreamExpressionValue.class);\n    \n    if(expression.getParameters().size() != parameters.size()){\n      throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - unknown operands found - expecting only raw values\", expression));\n    }\n    \n    if(1 != parameters.size()){\n      throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - only 1 value can exist in a %s(...) evaluator\", expression, factory.getFunctionName(getClass())));\n    }\n    \n    init(factory.constructPrimitiveObject(((StreamExpressionValue)parameters.get(0)).getValue()));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"88073e8783f450d4c0218decc2f001a1ac2c7e7c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["88073e8783f450d4c0218decc2f001a1ac2c7e7c"]},"commit2Childs":{"88073e8783f450d4c0218decc2f001a1ac2c7e7c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["88073e8783f450d4c0218decc2f001a1ac2c7e7c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}