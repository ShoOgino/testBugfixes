{"path":"lucene/src/test/org/apache/lucene/index/RandomIndexWriter#close().mjava","commits":[{"id":"c084e47df29de3330311d69dabf515ceaa989512","date":1279030906,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/RandomIndexWriter#close().mjava","pathOld":"/dev/null","sourceNew":"  public void close() throws IOException {\n    if (r.nextInt(4) == 2) {\n      w.optimize();\n    }\n    w.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5f4e87790277826a2aea119328600dfb07761f32","date":1279827275,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/RandomIndexWriter#close().mjava","pathOld":"/dev/null","sourceNew":"  public void close() throws IOException {\n    if (r.nextInt(4) == 2) {\n      w.optimize();\n    }\n    w.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"676ed1f296680ec01fd638393fab83f6ce81211a","date":1289224578,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/RandomIndexWriter#close().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/RandomIndexWriter#close().mjava","sourceNew":"  public void close() throws IOException {\n    // if someone isn't using getReader() API, we want to be sure to\n    // maybeOptimize since presumably they might open a reader on the dir.\n    if (getReaderCalled == false && r.nextInt(4) == 2) {\n      w.optimize();\n    }\n    w.close();\n  }\n\n","sourceOld":"  public void close() throws IOException {\n    if (r.nextInt(4) == 2) {\n      w.optimize();\n    }\n    w.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"85a883878c0af761245ab048babc63d099f835f3","date":1289553330,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/RandomIndexWriter#close().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/RandomIndexWriter#close().mjava","sourceNew":"  public void close() throws IOException {\n    // if someone isn't using getReader() API, we want to be sure to\n    // maybeOptimize since presumably they might open a reader on the dir.\n    if (getReaderCalled == false && r.nextInt(4) == 2) {\n      w.optimize();\n    }\n    w.close();\n  }\n\n","sourceOld":"  public void close() throws IOException {\n    if (r.nextInt(4) == 2) {\n      w.optimize();\n    }\n    w.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/RandomIndexWriter#close().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/RandomIndexWriter#close().mjava","sourceNew":"  public void close() throws IOException {\n    // if someone isn't using getReader() API, we want to be sure to\n    // maybeOptimize since presumably they might open a reader on the dir.\n    if (getReaderCalled == false && r.nextInt(4) == 2) {\n      w.optimize();\n    }\n    w.close();\n  }\n\n","sourceOld":"  public void close() throws IOException {\n    if (r.nextInt(4) == 2) {\n      w.optimize();\n    }\n    w.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce","date":1297021734,"type":5,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/test-framework/org/apache/lucene/index/RandomIndexWriter#close().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/RandomIndexWriter#close().mjava","sourceNew":"  public void close() throws IOException {\n    // if someone isn't using getReader() API, we want to be sure to\n    // maybeOptimize since presumably they might open a reader on the dir.\n    if (getReaderCalled == false && r.nextInt(4) == 2) {\n      w.optimize();\n    }\n    w.close();\n  }\n\n","sourceOld":"  public void close() throws IOException {\n    // if someone isn't using getReader() API, we want to be sure to\n    // maybeOptimize since presumably they might open a reader on the dir.\n    if (getReaderCalled == false && r.nextInt(4) == 2) {\n      w.optimize();\n    }\n    w.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":5,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/index/RandomIndexWriter#close().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/RandomIndexWriter#close().mjava","sourceNew":"  public void close() throws IOException {\n    // if someone isn't using getReader() API, we want to be sure to\n    // maybeOptimize since presumably they might open a reader on the dir.\n    if (getReaderCalled == false && r.nextInt(4) == 2) {\n      w.optimize();\n    }\n    w.close();\n  }\n\n","sourceOld":"  public void close() throws IOException {\n    // if someone isn't using getReader() API, we want to be sure to\n    // maybeOptimize since presumably they might open a reader on the dir.\n    if (getReaderCalled == false && r.nextInt(4) == 2) {\n      w.optimize();\n    }\n    w.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":5,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test-framework/org/apache/lucene/index/RandomIndexWriter#close().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/RandomIndexWriter#close().mjava","sourceNew":"  public void close() throws IOException {\n    // if someone isn't using getReader() API, we want to be sure to\n    // maybeOptimize since presumably they might open a reader on the dir.\n    if (getReaderCalled == false && r.nextInt(4) == 2) {\n      w.optimize();\n    }\n    w.close();\n  }\n\n","sourceOld":"  public void close() throws IOException {\n    // if someone isn't using getReader() API, we want to be sure to\n    // maybeOptimize since presumably they might open a reader on the dir.\n    if (getReaderCalled == false && r.nextInt(4) == 2) {\n      w.optimize();\n    }\n    w.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c084e47df29de3330311d69dabf515ceaa989512":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["85a883878c0af761245ab048babc63d099f835f3","f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"85a883878c0af761245ab048babc63d099f835f3":["c084e47df29de3330311d69dabf515ceaa989512","676ed1f296680ec01fd638393fab83f6ce81211a"],"676ed1f296680ec01fd638393fab83f6ce81211a":["c084e47df29de3330311d69dabf515ceaa989512"],"5f4e87790277826a2aea119328600dfb07761f32":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c084e47df29de3330311d69dabf515ceaa989512"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["5f4e87790277826a2aea119328600dfb07761f32","676ed1f296680ec01fd638393fab83f6ce81211a"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce"],"f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce":["676ed1f296680ec01fd638393fab83f6ce81211a"]},"commit2Childs":{"c084e47df29de3330311d69dabf515ceaa989512":["85a883878c0af761245ab048babc63d099f835f3","676ed1f296680ec01fd638393fab83f6ce81211a","5f4e87790277826a2aea119328600dfb07761f32"],"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c084e47df29de3330311d69dabf515ceaa989512","5f4e87790277826a2aea119328600dfb07761f32"],"85a883878c0af761245ab048babc63d099f835f3":["29ef99d61cda9641b6250bf9567329a6e65f901d"],"676ed1f296680ec01fd638393fab83f6ce81211a":["85a883878c0af761245ab048babc63d099f835f3","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce"],"5f4e87790277826a2aea119328600dfb07761f32":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["bde51b089eb7f86171eb3406e38a274743f9b7ac"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":[],"f0b9dc55f42953d6740cddbc92cb0d19fe1ba0ce":["29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}