{"path":"lucene/core/src/java/org/apache/lucene/store/ByteBuffersDataOutput#toBufferList().mjava","commits":[{"id":"fad01f81cc24b33263ccec7dbff3fb907702f91e","date":1535461373,"type":0,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/store/ByteBuffersDataOutput#toBufferList().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Return a list of read-only view of {@link ByteBuffer} blocks over the \n   * current content written to the output.\n   */\n  public ArrayList<ByteBuffer> toBufferList() {\n    ArrayList<ByteBuffer> result = new ArrayList<>(Math.max(blocks.size(), 1));\n    if (blocks.isEmpty()) {\n      result.add(EMPTY);\n    } else {\n      for (ByteBuffer bb : blocks) {\n        bb = (ByteBuffer) bb.asReadOnlyBuffer().flip(); // cast for jdk8 (covariant in jdk9+) \n        result.add(bb);\n      }\n    }\n    return result;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b88a121b875f9ae2ac50f85cf46dcb680f126357","date":1555416009,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/store/ByteBuffersDataOutput#toBufferList().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/store/ByteBuffersDataOutput#toBufferList().mjava","sourceNew":"  /**\n   * Return a list of read-only view of {@link ByteBuffer} blocks over the \n   * current content written to the output.\n   */\n  public ArrayList<ByteBuffer> toBufferList() {\n    ArrayList<ByteBuffer> result = new ArrayList<>(Math.max(blocks.size(), 1));\n    if (blocks.isEmpty()) {\n      result.add(EMPTY);\n    } else {\n      for (ByteBuffer bb : blocks) {\n        bb = bb.asReadOnlyBuffer().flip();\n        result.add(bb);\n      }\n    }\n    return result;\n  }\n\n","sourceOld":"  /**\n   * Return a list of read-only view of {@link ByteBuffer} blocks over the \n   * current content written to the output.\n   */\n  public ArrayList<ByteBuffer> toBufferList() {\n    ArrayList<ByteBuffer> result = new ArrayList<>(Math.max(blocks.size(), 1));\n    if (blocks.isEmpty()) {\n      result.add(EMPTY);\n    } else {\n      for (ByteBuffer bb : blocks) {\n        bb = (ByteBuffer) bb.asReadOnlyBuffer().flip(); // cast for jdk8 (covariant in jdk9+) \n        result.add(bb);\n      }\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b88a121b875f9ae2ac50f85cf46dcb680f126357":["fad01f81cc24b33263ccec7dbff3fb907702f91e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"fad01f81cc24b33263ccec7dbff3fb907702f91e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b88a121b875f9ae2ac50f85cf46dcb680f126357"]},"commit2Childs":{"b88a121b875f9ae2ac50f85cf46dcb680f126357":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["fad01f81cc24b33263ccec7dbff3fb907702f91e"],"fad01f81cc24b33263ccec7dbff3fb907702f91e":["b88a121b875f9ae2ac50f85cf46dcb680f126357"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}