{"path":"lucene/core/src/java/org/apache/lucene/codecs/blockpacked/ForUtil#readVIntBlock(IndexInput,int[],int[],int,boolean).mjava","commits":[{"id":"cfd81d9c5e64e3e7bf4be0b28563e7f15441ae94","date":1344442349,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/blockpacked/ForUtil#readVIntBlock(IndexInput,int[],int[],int,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/blockpacked/ForUtil#readVIntBlock(IndexInput,long[],long[],int,boolean).mjava","sourceNew":"  /**\n   * Read values that have been written using variable-length encoding instead of bit-packing.\n   */\n  static void readVIntBlock(IndexInput docIn, int[] docBuffer,\n      int[] freqBuffer, int num, boolean indexHasFreq) throws IOException {\n    if (indexHasFreq) {\n      for(int i=0;i<num;i++) {\n        final int code = docIn.readVInt();\n        docBuffer[i] = code >>> 1;\n        if ((code & 1) != 0) {\n          freqBuffer[i] = 1;\n        } else {\n          freqBuffer[i] = docIn.readVInt();\n        }\n      }\n    } else {\n      for(int i=0;i<num;i++) {\n        docBuffer[i] = docIn.readVInt();\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * Read values that have been written using variable-length encoding instead of bit-packing.\n   */\n  static void readVIntBlock(IndexInput docIn, long[] docBuffer,\n      long[] freqBuffer, int num, boolean indexHasFreq) throws IOException {\n    if (indexHasFreq) {\n      for(int i=0;i<num;i++) {\n        final int code = docIn.readVInt();\n        docBuffer[i] = code >>> 1;\n        if ((code & 1) != 0) {\n          freqBuffer[i] = 1;\n        } else {\n          freqBuffer[i] = docIn.readVInt();\n        }\n      }\n    } else {\n      for(int i=0;i<num;i++) {\n        docBuffer[i] = docIn.readVInt();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ee0d2b90b9b7c96860f9c096edae6ed8fad95388","date":1344516744,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/blockpacked/BlockPackedPostingsReader#readVIntBlock(IndexInput,int[],int[],int,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/blockpacked/ForUtil#readVIntBlock(IndexInput,int[],int[],int,boolean).mjava","sourceNew":"  /**\n   * Read values that have been written using variable-length encoding instead of bit-packing.\n   */\n  private static void readVIntBlock(IndexInput docIn, int[] docBuffer,\n      int[] freqBuffer, int num, boolean indexHasFreq) throws IOException {\n    if (indexHasFreq) {\n      for(int i=0;i<num;i++) {\n        final int code = docIn.readVInt();\n        docBuffer[i] = code >>> 1;\n        if ((code & 1) != 0) {\n          freqBuffer[i] = 1;\n        } else {\n          freqBuffer[i] = docIn.readVInt();\n        }\n      }\n    } else {\n      for(int i=0;i<num;i++) {\n        docBuffer[i] = docIn.readVInt();\n      }\n    }\n  }\n\n","sourceOld":"  /**\n   * Read values that have been written using variable-length encoding instead of bit-packing.\n   */\n  static void readVIntBlock(IndexInput docIn, int[] docBuffer,\n      int[] freqBuffer, int num, boolean indexHasFreq) throws IOException {\n    if (indexHasFreq) {\n      for(int i=0;i<num;i++) {\n        final int code = docIn.readVInt();\n        docBuffer[i] = code >>> 1;\n        if ((code & 1) != 0) {\n          freqBuffer[i] = 1;\n        } else {\n          freqBuffer[i] = docIn.readVInt();\n        }\n      }\n    } else {\n      for(int i=0;i<num;i++) {\n        docBuffer[i] = docIn.readVInt();\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ee0d2b90b9b7c96860f9c096edae6ed8fad95388":["cfd81d9c5e64e3e7bf4be0b28563e7f15441ae94"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cfd81d9c5e64e3e7bf4be0b28563e7f15441ae94":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"ee0d2b90b9b7c96860f9c096edae6ed8fad95388":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cfd81d9c5e64e3e7bf4be0b28563e7f15441ae94","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cfd81d9c5e64e3e7bf4be0b28563e7f15441ae94":["ee0d2b90b9b7c96860f9c096edae6ed8fad95388"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ee0d2b90b9b7c96860f9c096edae6ed8fad95388","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}