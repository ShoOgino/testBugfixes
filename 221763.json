{"path":"lucene/core/src/java/org/apache/lucene/util/BitSet#checkUnpositioned(DocIdSetIterator).mjava","commits":[{"id":"2a377baed0108974b7a40d37dbf9de4cb8d15e8e","date":1503384043,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/BitSet#checkUnpositioned(DocIdSetIterator).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/BitSet#assertUnpositioned(DocIdSetIterator).mjava","sourceNew":"  /** Assert that the current doc is -1. */\n  protected final void checkUnpositioned(DocIdSetIterator iter) {\n    if (iter.docID() != -1) {\n      throw new IllegalStateException(\"This operation only works with an unpositioned iterator, got current position = \" + iter.docID());\n    }\n  }\n\n","sourceOld":"  /** Assert that the current doc is -1. */\n  protected final void assertUnpositioned(DocIdSetIterator iter) {\n    if (iter.docID() != -1) {\n      throw new IllegalStateException(\"This operation only works with an unpositioned iterator, got current position = \" + iter.docID());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a7809d1d753b67f48b1a706e17034bf8b624ea3","date":1504366927,"type":1,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/BitSet#checkUnpositioned(DocIdSetIterator).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/BitSet#assertUnpositioned(DocIdSetIterator).mjava","sourceNew":"  /** Assert that the current doc is -1. */\n  protected final void checkUnpositioned(DocIdSetIterator iter) {\n    if (iter.docID() != -1) {\n      throw new IllegalStateException(\"This operation only works with an unpositioned iterator, got current position = \" + iter.docID());\n    }\n  }\n\n","sourceOld":"  /** Assert that the current doc is -1. */\n  protected final void assertUnpositioned(DocIdSetIterator iter) {\n    if (iter.docID() != -1) {\n      throw new IllegalStateException(\"This operation only works with an unpositioned iterator, got current position = \" + iter.docID());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a7809d1d753b67f48b1a706e17034bf8b624ea3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2a377baed0108974b7a40d37dbf9de4cb8d15e8e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2a377baed0108974b7a40d37dbf9de4cb8d15e8e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2a377baed0108974b7a40d37dbf9de4cb8d15e8e"]},"commit2Childs":{"3a7809d1d753b67f48b1a706e17034bf8b624ea3":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a7809d1d753b67f48b1a706e17034bf8b624ea3","2a377baed0108974b7a40d37dbf9de4cb8d15e8e"],"2a377baed0108974b7a40d37dbf9de4cb8d15e8e":["3a7809d1d753b67f48b1a706e17034bf8b624ea3","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["3a7809d1d753b67f48b1a706e17034bf8b624ea3","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}