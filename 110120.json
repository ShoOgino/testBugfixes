{"path":"solr/core/src/java/org/apache/solr/search/BitDocSet#exists(int).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/BitDocSet#exists(int).mjava","pathOld":"solr/src/java/org/apache/solr/search/BitDocSet#exists(int).mjava","sourceNew":"  /** Returns true of the doc exists in the set.\n   *  Should only be called when doc < OpenBitSet.size()\n   */\n  public boolean exists(int doc) {\n    return bits.fastGet(doc);\n  }\n\n","sourceOld":"  /** Returns true of the doc exists in the set.\n   *  Should only be called when doc < OpenBitSet.size()\n   */\n  public boolean exists(int doc) {\n    return bits.fastGet(doc);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/BitDocSet#exists(int).mjava","pathOld":"solr/src/java/org/apache/solr/search/BitDocSet#exists(int).mjava","sourceNew":"  /** Returns true of the doc exists in the set.\n   *  Should only be called when doc < OpenBitSet.size()\n   */\n  public boolean exists(int doc) {\n    return bits.fastGet(doc);\n  }\n\n","sourceOld":"  /** Returns true of the doc exists in the set.\n   *  Should only be called when doc < OpenBitSet.size()\n   */\n  public boolean exists(int doc) {\n    return bits.fastGet(doc);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/BitDocSet#exists(int).mjava","pathOld":"solr/src/java/org/apache/solr/search/BitDocSet#exists(int).mjava","sourceNew":"  /** Returns true of the doc exists in the set.\n   *  Should only be called when doc < OpenBitSet.size()\n   */\n  public boolean exists(int doc) {\n    return bits.fastGet(doc);\n  }\n\n","sourceOld":"  /** Returns true of the doc exists in the set.\n   *  Should only be called when doc < OpenBitSet.size()\n   */\n  public boolean exists(int doc) {\n    return bits.fastGet(doc);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7530de27b87b961b51f01bd1299b7004d46e8823","date":1355236261,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/BitDocSet#exists(int).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/BitDocSet#exists(int).mjava","sourceNew":"  /** Returns true of the doc exists in the set.\n   *  Should only be called when doc < OpenBitSet.size()\n   */\n  @Override\n  public boolean exists(int doc) {\n    return bits.fastGet(doc);\n  }\n\n","sourceOld":"  /** Returns true of the doc exists in the set.\n   *  Should only be called when doc < OpenBitSet.size()\n   */\n  public boolean exists(int doc) {\n    return bits.fastGet(doc);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/BitDocSet#exists(int).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/BitDocSet#exists(int).mjava","sourceNew":"  /** Returns true of the doc exists in the set.\n   *  Should only be called when doc < OpenBitSet.size()\n   */\n  @Override\n  public boolean exists(int doc) {\n    return bits.fastGet(doc);\n  }\n\n","sourceOld":"  /** Returns true of the doc exists in the set.\n   *  Should only be called when doc < OpenBitSet.size()\n   */\n  public boolean exists(int doc) {\n    return bits.fastGet(doc);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a69cf7f1b4cac5d5b1363402b565cd535f13e6a1","date":1392536197,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/BitDocSet#exists(int).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/BitDocSet#exists(int).mjava","sourceNew":"  /**\n   * Returns true of the doc exists in the set. Should only be called when doc <\n   * {@link FixedBitSet#length()}.\n   */\n  @Override\n  public boolean exists(int doc) {\n    return bits.get(doc);\n  }\n\n","sourceOld":"  /** Returns true of the doc exists in the set.\n   *  Should only be called when doc < OpenBitSet.size()\n   */\n  @Override\n  public boolean exists(int doc) {\n    return bits.fastGet(doc);\n  }\n\n","bugFix":null,"bugIntro":["1e210ae1e604402eb4eeff2a52e56d189cd4f2f1"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1e210ae1e604402eb4eeff2a52e56d189cd4f2f1","date":1423508552,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/BitDocSet#exists(int).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/BitDocSet#exists(int).mjava","sourceNew":"  /**\n   * Returns true of the doc exists in the set. Should only be called when doc &lt;\n   * {@link FixedBitSet#length()}.\n   */\n  @Override\n  public boolean exists(int doc) {\n    return bits.get(doc);\n  }\n\n","sourceOld":"  /**\n   * Returns true of the doc exists in the set. Should only be called when doc <\n   * {@link FixedBitSet#length()}.\n   */\n  @Override\n  public boolean exists(int doc) {\n    return bits.get(doc);\n  }\n\n","bugFix":["a69cf7f1b4cac5d5b1363402b565cd535f13e6a1"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["c26f00b574427b55127e869b935845554afde1fa","7530de27b87b961b51f01bd1299b7004d46e8823"],"a69cf7f1b4cac5d5b1363402b565cd535f13e6a1":["7530de27b87b961b51f01bd1299b7004d46e8823"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"7530de27b87b961b51f01bd1299b7004d46e8823":["c26f00b574427b55127e869b935845554afde1fa"],"1e210ae1e604402eb4eeff2a52e56d189cd4f2f1":["a69cf7f1b4cac5d5b1363402b565cd535f13e6a1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1e210ae1e604402eb4eeff2a52e56d189cd4f2f1"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"a69cf7f1b4cac5d5b1363402b565cd535f13e6a1":["1e210ae1e604402eb4eeff2a52e56d189cd4f2f1"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","7530de27b87b961b51f01bd1299b7004d46e8823"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"7530de27b87b961b51f01bd1299b7004d46e8823":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","a69cf7f1b4cac5d5b1363402b565cd535f13e6a1"],"1e210ae1e604402eb4eeff2a52e56d189cd4f2f1":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}