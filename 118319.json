{"path":"lucene/core/src/test/org/apache/lucene/index/TestOmitTf#testNoPrxFile().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestOmitTf#testNoPrxFile().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestOmitTf#testNoPrxFile().mjava","sourceNew":"  // Verifies no *.prx exists when all fields omit term freq:\n  public void testNoPrxFile() throws Throwable {\n    Directory ram = newDirectory();\n    Analyzer analyzer = new MockAnalyzer(random);\n    IndexWriter writer = new IndexWriter(ram, newIndexWriterConfig(\n                                                                   TEST_VERSION_CURRENT, analyzer).setMaxBufferedDocs(3).setMergePolicy(newLogMergePolicy()));\n    LogMergePolicy lmp = (LogMergePolicy) writer.getConfig().getMergePolicy();\n    lmp.setMergeFactor(2);\n    lmp.setUseCompoundFile(false);\n    Document d = new Document();\n        \n    Field f1 = newField(\"f1\", \"This field has term freqs\", omitType);\n    d.add(f1);\n\n    for(int i=0;i<30;i++)\n      writer.addDocument(d);\n\n    writer.commit();\n\n    assertNoPrx(ram);\n    \n    // now add some documents with positions, and check\n    // there is no prox after full merge\n    d = new Document();\n    f1 = newField(\"f1\", \"This field has positions\", TextField.TYPE_UNSTORED);\n    d.add(f1);\n    \n    for(int i=0;i<30;i++)\n      writer.addDocument(d);\n \n    // force merge\n    writer.forceMerge(1);\n    // flush\n    writer.close();\n\n    assertNoPrx(ram);\n    ram.close();\n  }\n\n","sourceOld":"  // Verifies no *.prx exists when all fields omit term freq:\n  public void testNoPrxFile() throws Throwable {\n    Directory ram = newDirectory();\n    Analyzer analyzer = new MockAnalyzer(random);\n    IndexWriter writer = new IndexWriter(ram, newIndexWriterConfig(\n                                                                   TEST_VERSION_CURRENT, analyzer).setMaxBufferedDocs(3).setMergePolicy(newLogMergePolicy()));\n    LogMergePolicy lmp = (LogMergePolicy) writer.getConfig().getMergePolicy();\n    lmp.setMergeFactor(2);\n    lmp.setUseCompoundFile(false);\n    Document d = new Document();\n        \n    Field f1 = newField(\"f1\", \"This field has term freqs\", omitType);\n    d.add(f1);\n\n    for(int i=0;i<30;i++)\n      writer.addDocument(d);\n\n    writer.commit();\n\n    assertNoPrx(ram);\n    \n    // now add some documents with positions, and check\n    // there is no prox after full merge\n    d = new Document();\n    f1 = newField(\"f1\", \"This field has positions\", TextField.TYPE_UNSTORED);\n    d.add(f1);\n    \n    for(int i=0;i<30;i++)\n      writer.addDocument(d);\n \n    // force merge\n    writer.forceMerge(1);\n    // flush\n    writer.close();\n\n    assertNoPrx(ram);\n    ram.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"629c38c4ae4e303d0617e05fbfe508140b32f0a3","date":1334500904,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestOmitTf#testNoPrxFile().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestOmitTf#testNoPrxFile().mjava","sourceNew":"  // Verifies no *.prx exists when all fields omit term freq:\n  public void testNoPrxFile() throws Throwable {\n    Directory ram = newDirectory();\n    Analyzer analyzer = new MockAnalyzer(random());\n    IndexWriter writer = new IndexWriter(ram, newIndexWriterConfig(\n                                                                   TEST_VERSION_CURRENT, analyzer).setMaxBufferedDocs(3).setMergePolicy(newLogMergePolicy()));\n    LogMergePolicy lmp = (LogMergePolicy) writer.getConfig().getMergePolicy();\n    lmp.setMergeFactor(2);\n    lmp.setUseCompoundFile(false);\n    Document d = new Document();\n        \n    Field f1 = newField(\"f1\", \"This field has term freqs\", omitType);\n    d.add(f1);\n\n    for(int i=0;i<30;i++)\n      writer.addDocument(d);\n\n    writer.commit();\n\n    assertNoPrx(ram);\n    \n    // now add some documents with positions, and check\n    // there is no prox after full merge\n    d = new Document();\n    f1 = newField(\"f1\", \"This field has positions\", TextField.TYPE_UNSTORED);\n    d.add(f1);\n    \n    for(int i=0;i<30;i++)\n      writer.addDocument(d);\n \n    // force merge\n    writer.forceMerge(1);\n    // flush\n    writer.close();\n\n    assertNoPrx(ram);\n    ram.close();\n  }\n\n","sourceOld":"  // Verifies no *.prx exists when all fields omit term freq:\n  public void testNoPrxFile() throws Throwable {\n    Directory ram = newDirectory();\n    Analyzer analyzer = new MockAnalyzer(random);\n    IndexWriter writer = new IndexWriter(ram, newIndexWriterConfig(\n                                                                   TEST_VERSION_CURRENT, analyzer).setMaxBufferedDocs(3).setMergePolicy(newLogMergePolicy()));\n    LogMergePolicy lmp = (LogMergePolicy) writer.getConfig().getMergePolicy();\n    lmp.setMergeFactor(2);\n    lmp.setUseCompoundFile(false);\n    Document d = new Document();\n        \n    Field f1 = newField(\"f1\", \"This field has term freqs\", omitType);\n    d.add(f1);\n\n    for(int i=0;i<30;i++)\n      writer.addDocument(d);\n\n    writer.commit();\n\n    assertNoPrx(ram);\n    \n    // now add some documents with positions, and check\n    // there is no prox after full merge\n    d = new Document();\n    f1 = newField(\"f1\", \"This field has positions\", TextField.TYPE_UNSTORED);\n    d.add(f1);\n    \n    for(int i=0;i<30;i++)\n      writer.addDocument(d);\n \n    // force merge\n    writer.forceMerge(1);\n    // flush\n    writer.close();\n\n    assertNoPrx(ram);\n    ram.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"04f07771a2a7dd3a395700665ed839c3dae2def2","date":1339350139,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestOmitTf#testNoPrxFile().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestOmitTf#testNoPrxFile().mjava","sourceNew":"  // Verifies no *.prx exists when all fields omit term freq:\n  public void testNoPrxFile() throws Throwable {\n    Directory ram = newDirectory();\n    Analyzer analyzer = new MockAnalyzer(random());\n    IndexWriter writer = new IndexWriter(ram, newIndexWriterConfig(\n                                                                   TEST_VERSION_CURRENT, analyzer).setMaxBufferedDocs(3).setMergePolicy(newLogMergePolicy()));\n    LogMergePolicy lmp = (LogMergePolicy) writer.getConfig().getMergePolicy();\n    lmp.setMergeFactor(2);\n    lmp.setUseCompoundFile(false);\n    Document d = new Document();\n        \n    Field f1 = newField(\"f1\", \"This field has term freqs\", omitType);\n    d.add(f1);\n\n    for(int i=0;i<30;i++)\n      writer.addDocument(d);\n\n    writer.commit();\n\n    assertNoPrx(ram);\n    \n    // now add some documents with positions, and check\n    // there is no prox after full merge\n    d = new Document();\n    f1 = newTextField(\"f1\", \"This field has positions\", Field.Store.NO);\n    d.add(f1);\n    \n    for(int i=0;i<30;i++)\n      writer.addDocument(d);\n \n    // force merge\n    writer.forceMerge(1);\n    // flush\n    writer.close();\n\n    assertNoPrx(ram);\n    ram.close();\n  }\n\n","sourceOld":"  // Verifies no *.prx exists when all fields omit term freq:\n  public void testNoPrxFile() throws Throwable {\n    Directory ram = newDirectory();\n    Analyzer analyzer = new MockAnalyzer(random());\n    IndexWriter writer = new IndexWriter(ram, newIndexWriterConfig(\n                                                                   TEST_VERSION_CURRENT, analyzer).setMaxBufferedDocs(3).setMergePolicy(newLogMergePolicy()));\n    LogMergePolicy lmp = (LogMergePolicy) writer.getConfig().getMergePolicy();\n    lmp.setMergeFactor(2);\n    lmp.setUseCompoundFile(false);\n    Document d = new Document();\n        \n    Field f1 = newField(\"f1\", \"This field has term freqs\", omitType);\n    d.add(f1);\n\n    for(int i=0;i<30;i++)\n      writer.addDocument(d);\n\n    writer.commit();\n\n    assertNoPrx(ram);\n    \n    // now add some documents with positions, and check\n    // there is no prox after full merge\n    d = new Document();\n    f1 = newField(\"f1\", \"This field has positions\", TextField.TYPE_UNSTORED);\n    d.add(f1);\n    \n    for(int i=0;i<30;i++)\n      writer.addDocument(d);\n \n    // force merge\n    writer.forceMerge(1);\n    // flush\n    writer.close();\n\n    assertNoPrx(ram);\n    ram.close();\n  }\n\n","bugFix":["1509f151d7692d84fae414b2b799ac06ba60fcb4"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"088a7ef694fd43d5d9a4d200c4005865f773d1e7","date":1371136274,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestOmitTf#testNoPrxFile().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestOmitTf#testNoPrxFile().mjava","sourceNew":"  // Verifies no *.prx exists when all fields omit term freq:\n  public void testNoPrxFile() throws Throwable {\n    Directory ram = newDirectory();\n    Analyzer analyzer = new MockAnalyzer(random());\n    IndexWriter writer = new IndexWriter(ram, newIndexWriterConfig(\n                                                                   TEST_VERSION_CURRENT, analyzer).setMaxBufferedDocs(3).setMergePolicy(newLogMergePolicy()));\n    LogMergePolicy lmp = (LogMergePolicy) writer.getConfig().getMergePolicy();\n    lmp.setMergeFactor(2);\n    lmp.setNoCFSRatio(0.0);\n    Document d = new Document();\n        \n    Field f1 = newField(\"f1\", \"This field has term freqs\", omitType);\n    d.add(f1);\n\n    for(int i=0;i<30;i++)\n      writer.addDocument(d);\n\n    writer.commit();\n\n    assertNoPrx(ram);\n    \n    // now add some documents with positions, and check\n    // there is no prox after full merge\n    d = new Document();\n    f1 = newTextField(\"f1\", \"This field has positions\", Field.Store.NO);\n    d.add(f1);\n    \n    for(int i=0;i<30;i++)\n      writer.addDocument(d);\n \n    // force merge\n    writer.forceMerge(1);\n    // flush\n    writer.close();\n\n    assertNoPrx(ram);\n    ram.close();\n  }\n\n","sourceOld":"  // Verifies no *.prx exists when all fields omit term freq:\n  public void testNoPrxFile() throws Throwable {\n    Directory ram = newDirectory();\n    Analyzer analyzer = new MockAnalyzer(random());\n    IndexWriter writer = new IndexWriter(ram, newIndexWriterConfig(\n                                                                   TEST_VERSION_CURRENT, analyzer).setMaxBufferedDocs(3).setMergePolicy(newLogMergePolicy()));\n    LogMergePolicy lmp = (LogMergePolicy) writer.getConfig().getMergePolicy();\n    lmp.setMergeFactor(2);\n    lmp.setUseCompoundFile(false);\n    Document d = new Document();\n        \n    Field f1 = newField(\"f1\", \"This field has term freqs\", omitType);\n    d.add(f1);\n\n    for(int i=0;i<30;i++)\n      writer.addDocument(d);\n\n    writer.commit();\n\n    assertNoPrx(ram);\n    \n    // now add some documents with positions, and check\n    // there is no prox after full merge\n    d = new Document();\n    f1 = newTextField(\"f1\", \"This field has positions\", Field.Store.NO);\n    d.add(f1);\n    \n    for(int i=0;i<30;i++)\n      writer.addDocument(d);\n \n    // force merge\n    writer.forceMerge(1);\n    // flush\n    writer.close();\n\n    assertNoPrx(ram);\n    ram.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestOmitTf#testNoPrxFile().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestOmitTf#testNoPrxFile().mjava","sourceNew":"  // Verifies no *.prx exists when all fields omit term freq:\n  public void testNoPrxFile() throws Throwable {\n    Directory ram = newDirectory();\n    Analyzer analyzer = new MockAnalyzer(random());\n    IndexWriter writer = new IndexWriter(ram, newIndexWriterConfig(\n                                                                   TEST_VERSION_CURRENT, analyzer).setMaxBufferedDocs(3).setMergePolicy(newLogMergePolicy()));\n    LogMergePolicy lmp = (LogMergePolicy) writer.getConfig().getMergePolicy();\n    lmp.setMergeFactor(2);\n    lmp.setNoCFSRatio(0.0);\n    Document d = new Document();\n        \n    Field f1 = newField(\"f1\", \"This field has term freqs\", omitType);\n    d.add(f1);\n\n    for(int i=0;i<30;i++)\n      writer.addDocument(d);\n\n    writer.commit();\n\n    assertNoPrx(ram);\n    \n    // now add some documents with positions, and check\n    // there is no prox after full merge\n    d = new Document();\n    f1 = newTextField(\"f1\", \"This field has positions\", Field.Store.NO);\n    d.add(f1);\n    \n    for(int i=0;i<30;i++)\n      writer.addDocument(d);\n \n    // force merge\n    writer.forceMerge(1);\n    // flush\n    writer.shutdown();\n\n    assertNoPrx(ram);\n    ram.close();\n  }\n\n","sourceOld":"  // Verifies no *.prx exists when all fields omit term freq:\n  public void testNoPrxFile() throws Throwable {\n    Directory ram = newDirectory();\n    Analyzer analyzer = new MockAnalyzer(random());\n    IndexWriter writer = new IndexWriter(ram, newIndexWriterConfig(\n                                                                   TEST_VERSION_CURRENT, analyzer).setMaxBufferedDocs(3).setMergePolicy(newLogMergePolicy()));\n    LogMergePolicy lmp = (LogMergePolicy) writer.getConfig().getMergePolicy();\n    lmp.setMergeFactor(2);\n    lmp.setNoCFSRatio(0.0);\n    Document d = new Document();\n        \n    Field f1 = newField(\"f1\", \"This field has term freqs\", omitType);\n    d.add(f1);\n\n    for(int i=0;i<30;i++)\n      writer.addDocument(d);\n\n    writer.commit();\n\n    assertNoPrx(ram);\n    \n    // now add some documents with positions, and check\n    // there is no prox after full merge\n    d = new Document();\n    f1 = newTextField(\"f1\", \"This field has positions\", Field.Store.NO);\n    d.add(f1);\n    \n    for(int i=0;i<30;i++)\n      writer.addDocument(d);\n \n    // force merge\n    writer.forceMerge(1);\n    // flush\n    writer.close();\n\n    assertNoPrx(ram);\n    ram.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e","date":1406737224,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestOmitTf#testNoPrxFile().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestOmitTf#testNoPrxFile().mjava","sourceNew":"  // Verifies no *.prx exists when all fields omit term freq:\n  public void testNoPrxFile() throws Throwable {\n    Directory ram = newDirectory();\n    Analyzer analyzer = new MockAnalyzer(random());\n    IndexWriter writer = new IndexWriter(ram, newIndexWriterConfig(analyzer)\n                                                .setMaxBufferedDocs(3)\n                                                .setMergePolicy(newLogMergePolicy()));\n    LogMergePolicy lmp = (LogMergePolicy) writer.getConfig().getMergePolicy();\n    lmp.setMergeFactor(2);\n    lmp.setNoCFSRatio(0.0);\n    Document d = new Document();\n        \n    Field f1 = newField(\"f1\", \"This field has term freqs\", omitType);\n    d.add(f1);\n\n    for(int i=0;i<30;i++)\n      writer.addDocument(d);\n\n    writer.commit();\n\n    assertNoPrx(ram);\n    \n    // now add some documents with positions, and check\n    // there is no prox after full merge\n    d = new Document();\n    f1 = newTextField(\"f1\", \"This field has positions\", Field.Store.NO);\n    d.add(f1);\n    \n    for(int i=0;i<30;i++)\n      writer.addDocument(d);\n \n    // force merge\n    writer.forceMerge(1);\n    // flush\n    writer.shutdown();\n\n    assertNoPrx(ram);\n    ram.close();\n  }\n\n","sourceOld":"  // Verifies no *.prx exists when all fields omit term freq:\n  public void testNoPrxFile() throws Throwable {\n    Directory ram = newDirectory();\n    Analyzer analyzer = new MockAnalyzer(random());\n    IndexWriter writer = new IndexWriter(ram, newIndexWriterConfig(\n                                                                   TEST_VERSION_CURRENT, analyzer).setMaxBufferedDocs(3).setMergePolicy(newLogMergePolicy()));\n    LogMergePolicy lmp = (LogMergePolicy) writer.getConfig().getMergePolicy();\n    lmp.setMergeFactor(2);\n    lmp.setNoCFSRatio(0.0);\n    Document d = new Document();\n        \n    Field f1 = newField(\"f1\", \"This field has term freqs\", omitType);\n    d.add(f1);\n\n    for(int i=0;i<30;i++)\n      writer.addDocument(d);\n\n    writer.commit();\n\n    assertNoPrx(ram);\n    \n    // now add some documents with positions, and check\n    // there is no prox after full merge\n    d = new Document();\n    f1 = newTextField(\"f1\", \"This field has positions\", Field.Store.NO);\n    d.add(f1);\n    \n    for(int i=0;i<30;i++)\n      writer.addDocument(d);\n \n    // force merge\n    writer.forceMerge(1);\n    // flush\n    writer.shutdown();\n\n    assertNoPrx(ram);\n    ram.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestOmitTf#testNoPrxFile().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestOmitTf#testNoPrxFile().mjava","sourceNew":"  // Verifies no *.prx exists when all fields omit term freq:\n  public void testNoPrxFile() throws Throwable {\n    Directory ram = newDirectory();\n    Analyzer analyzer = new MockAnalyzer(random());\n    IndexWriter writer = new IndexWriter(ram, newIndexWriterConfig(analyzer)\n                                                .setMaxBufferedDocs(3)\n                                                .setMergePolicy(newLogMergePolicy()));\n    LogMergePolicy lmp = (LogMergePolicy) writer.getConfig().getMergePolicy();\n    lmp.setMergeFactor(2);\n    lmp.setNoCFSRatio(0.0);\n    Document d = new Document();\n        \n    Field f1 = newField(\"f1\", \"This field has term freqs\", omitType);\n    d.add(f1);\n\n    for(int i=0;i<30;i++)\n      writer.addDocument(d);\n\n    writer.commit();\n\n    assertNoPrx(ram);\n    \n    // now add some documents with positions, and check\n    // there is no prox after full merge\n    d = new Document();\n    f1 = newTextField(\"f1\", \"This field has positions\", Field.Store.NO);\n    d.add(f1);\n    \n    for(int i=0;i<30;i++)\n      writer.addDocument(d);\n \n    // force merge\n    writer.forceMerge(1);\n    // flush\n    writer.close();\n\n    assertNoPrx(ram);\n    ram.close();\n  }\n\n","sourceOld":"  // Verifies no *.prx exists when all fields omit term freq:\n  public void testNoPrxFile() throws Throwable {\n    Directory ram = newDirectory();\n    Analyzer analyzer = new MockAnalyzer(random());\n    IndexWriter writer = new IndexWriter(ram, newIndexWriterConfig(analyzer)\n                                                .setMaxBufferedDocs(3)\n                                                .setMergePolicy(newLogMergePolicy()));\n    LogMergePolicy lmp = (LogMergePolicy) writer.getConfig().getMergePolicy();\n    lmp.setMergeFactor(2);\n    lmp.setNoCFSRatio(0.0);\n    Document d = new Document();\n        \n    Field f1 = newField(\"f1\", \"This field has term freqs\", omitType);\n    d.add(f1);\n\n    for(int i=0;i<30;i++)\n      writer.addDocument(d);\n\n    writer.commit();\n\n    assertNoPrx(ram);\n    \n    // now add some documents with positions, and check\n    // there is no prox after full merge\n    d = new Document();\n    f1 = newTextField(\"f1\", \"This field has positions\", Field.Store.NO);\n    d.add(f1);\n    \n    for(int i=0;i<30;i++)\n      writer.addDocument(d);\n \n    // force merge\n    writer.forceMerge(1);\n    // flush\n    writer.shutdown();\n\n    assertNoPrx(ram);\n    ram.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"98d2deb8c96c79ebef084a1f8e5a1a6c08608f13","date":1409346855,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestOmitTf#testNoPrxFile().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestOmitTf#testNoPrxFile().mjava","sourceNew":"  // Verifies no *.prx exists when all fields omit term freq:\n  public void testNoPrxFile() throws Throwable {\n    Directory ram = newDirectory();\n    if (ram instanceof MockDirectoryWrapper) {\n      // we verify some files get deleted\n      ((MockDirectoryWrapper)ram).setEnableVirusScanner(false);\n    }\n    Analyzer analyzer = new MockAnalyzer(random());\n    IndexWriter writer = new IndexWriter(ram, newIndexWriterConfig(analyzer)\n                                                .setMaxBufferedDocs(3)\n                                                .setMergePolicy(newLogMergePolicy()));\n    LogMergePolicy lmp = (LogMergePolicy) writer.getConfig().getMergePolicy();\n    lmp.setMergeFactor(2);\n    lmp.setNoCFSRatio(0.0);\n    Document d = new Document();\n        \n    Field f1 = newField(\"f1\", \"This field has term freqs\", omitType);\n    d.add(f1);\n\n    for(int i=0;i<30;i++)\n      writer.addDocument(d);\n\n    writer.commit();\n\n    assertNoPrx(ram);\n    \n    // now add some documents with positions, and check\n    // there is no prox after full merge\n    d = new Document();\n    f1 = newTextField(\"f1\", \"This field has positions\", Field.Store.NO);\n    d.add(f1);\n    \n    for(int i=0;i<30;i++)\n      writer.addDocument(d);\n \n    // force merge\n    writer.forceMerge(1);\n    // flush\n    writer.close();\n\n    assertNoPrx(ram);\n    ram.close();\n  }\n\n","sourceOld":"  // Verifies no *.prx exists when all fields omit term freq:\n  public void testNoPrxFile() throws Throwable {\n    Directory ram = newDirectory();\n    Analyzer analyzer = new MockAnalyzer(random());\n    IndexWriter writer = new IndexWriter(ram, newIndexWriterConfig(analyzer)\n                                                .setMaxBufferedDocs(3)\n                                                .setMergePolicy(newLogMergePolicy()));\n    LogMergePolicy lmp = (LogMergePolicy) writer.getConfig().getMergePolicy();\n    lmp.setMergeFactor(2);\n    lmp.setNoCFSRatio(0.0);\n    Document d = new Document();\n        \n    Field f1 = newField(\"f1\", \"This field has term freqs\", omitType);\n    d.add(f1);\n\n    for(int i=0;i<30;i++)\n      writer.addDocument(d);\n\n    writer.commit();\n\n    assertNoPrx(ram);\n    \n    // now add some documents with positions, and check\n    // there is no prox after full merge\n    d = new Document();\n    f1 = newTextField(\"f1\", \"This field has positions\", Field.Store.NO);\n    d.add(f1);\n    \n    for(int i=0;i<30;i++)\n      writer.addDocument(d);\n \n    // force merge\n    writer.forceMerge(1);\n    // flush\n    writer.close();\n\n    assertNoPrx(ram);\n    ram.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6bfe104fc023fadc9e709f8d17403d2cc61133fe","date":1454446396,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestOmitTf#testNoPrxFile().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestOmitTf#testNoPrxFile().mjava","sourceNew":"  // Verifies no *.prx exists when all fields omit term freq:\n  public void testNoPrxFile() throws Throwable {\n    Directory ram = newDirectory();\n    Analyzer analyzer = new MockAnalyzer(random());\n    IndexWriter writer = new IndexWriter(ram, newIndexWriterConfig(analyzer)\n                                                .setMaxBufferedDocs(3)\n                                                .setMergePolicy(newLogMergePolicy()));\n    LogMergePolicy lmp = (LogMergePolicy) writer.getConfig().getMergePolicy();\n    lmp.setMergeFactor(2);\n    lmp.setNoCFSRatio(0.0);\n    Document d = new Document();\n        \n    Field f1 = newField(\"f1\", \"This field has term freqs\", omitType);\n    d.add(f1);\n\n    for(int i=0;i<30;i++)\n      writer.addDocument(d);\n\n    writer.commit();\n\n    assertNoPrx(ram);\n    \n    // now add some documents with positions, and check\n    // there is no prox after full merge\n    d = new Document();\n    f1 = newTextField(\"f1\", \"This field has positions\", Field.Store.NO);\n    d.add(f1);\n    \n    for(int i=0;i<30;i++)\n      writer.addDocument(d);\n \n    // force merge\n    writer.forceMerge(1);\n    // flush\n    writer.close();\n\n    assertNoPrx(ram);\n    ram.close();\n  }\n\n","sourceOld":"  // Verifies no *.prx exists when all fields omit term freq:\n  public void testNoPrxFile() throws Throwable {\n    Directory ram = newDirectory();\n    if (ram instanceof MockDirectoryWrapper) {\n      // we verify some files get deleted\n      ((MockDirectoryWrapper)ram).setEnableVirusScanner(false);\n    }\n    Analyzer analyzer = new MockAnalyzer(random());\n    IndexWriter writer = new IndexWriter(ram, newIndexWriterConfig(analyzer)\n                                                .setMaxBufferedDocs(3)\n                                                .setMergePolicy(newLogMergePolicy()));\n    LogMergePolicy lmp = (LogMergePolicy) writer.getConfig().getMergePolicy();\n    lmp.setMergeFactor(2);\n    lmp.setNoCFSRatio(0.0);\n    Document d = new Document();\n        \n    Field f1 = newField(\"f1\", \"This field has term freqs\", omitType);\n    d.add(f1);\n\n    for(int i=0;i<30;i++)\n      writer.addDocument(d);\n\n    writer.commit();\n\n    assertNoPrx(ram);\n    \n    // now add some documents with positions, and check\n    // there is no prox after full merge\n    d = new Document();\n    f1 = newTextField(\"f1\", \"This field has positions\", Field.Store.NO);\n    d.add(f1);\n    \n    for(int i=0;i<30;i++)\n      writer.addDocument(d);\n \n    // force merge\n    writer.forceMerge(1);\n    // flush\n    writer.close();\n\n    assertNoPrx(ram);\n    ram.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b470f36a9372c97283360b1304eacbde22df6c0d","date":1454765175,"type":3,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestOmitTf#testNoPrxFile().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestOmitTf#testNoPrxFile().mjava","sourceNew":"  // Verifies no *.prx exists when all fields omit term freq:\n  public void testNoPrxFile() throws Throwable {\n    Directory ram = newDirectory();\n    Analyzer analyzer = new MockAnalyzer(random());\n    IndexWriter writer = new IndexWriter(ram, newIndexWriterConfig(analyzer)\n                                                .setMaxBufferedDocs(3)\n                                                .setMergePolicy(newLogMergePolicy()));\n    LogMergePolicy lmp = (LogMergePolicy) writer.getConfig().getMergePolicy();\n    lmp.setMergeFactor(2);\n    lmp.setNoCFSRatio(0.0);\n    Document d = new Document();\n        \n    Field f1 = newField(\"f1\", \"This field has term freqs\", omitType);\n    d.add(f1);\n\n    for(int i=0;i<30;i++)\n      writer.addDocument(d);\n\n    writer.commit();\n\n    assertNoPrx(ram);\n    \n    // now add some documents with positions, and check\n    // there is no prox after full merge\n    d = new Document();\n    f1 = newTextField(\"f1\", \"This field has positions\", Field.Store.NO);\n    d.add(f1);\n    \n    for(int i=0;i<30;i++)\n      writer.addDocument(d);\n \n    // force merge\n    writer.forceMerge(1);\n    // flush\n    writer.close();\n\n    assertNoPrx(ram);\n    ram.close();\n  }\n\n","sourceOld":"  // Verifies no *.prx exists when all fields omit term freq:\n  public void testNoPrxFile() throws Throwable {\n    Directory ram = newDirectory();\n    if (ram instanceof MockDirectoryWrapper) {\n      // we verify some files get deleted\n      ((MockDirectoryWrapper)ram).setEnableVirusScanner(false);\n    }\n    Analyzer analyzer = new MockAnalyzer(random());\n    IndexWriter writer = new IndexWriter(ram, newIndexWriterConfig(analyzer)\n                                                .setMaxBufferedDocs(3)\n                                                .setMergePolicy(newLogMergePolicy()));\n    LogMergePolicy lmp = (LogMergePolicy) writer.getConfig().getMergePolicy();\n    lmp.setMergeFactor(2);\n    lmp.setNoCFSRatio(0.0);\n    Document d = new Document();\n        \n    Field f1 = newField(\"f1\", \"This field has term freqs\", omitType);\n    d.add(f1);\n\n    for(int i=0;i<30;i++)\n      writer.addDocument(d);\n\n    writer.commit();\n\n    assertNoPrx(ram);\n    \n    // now add some documents with positions, and check\n    // there is no prox after full merge\n    d = new Document();\n    f1 = newTextField(\"f1\", \"This field has positions\", Field.Store.NO);\n    d.add(f1);\n    \n    for(int i=0;i<30;i++)\n      writer.addDocument(d);\n \n    // force merge\n    writer.forceMerge(1);\n    // flush\n    writer.close();\n\n    assertNoPrx(ram);\n    ram.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1e6acbaae7af722f17204ceccf0f7db5753eccf3","date":1454775255,"type":3,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestOmitTf#testNoPrxFile().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestOmitTf#testNoPrxFile().mjava","sourceNew":"  // Verifies no *.prx exists when all fields omit term freq:\n  public void testNoPrxFile() throws Throwable {\n    Directory ram = newDirectory();\n    Analyzer analyzer = new MockAnalyzer(random());\n    IndexWriter writer = new IndexWriter(ram, newIndexWriterConfig(analyzer)\n                                                .setMaxBufferedDocs(3)\n                                                .setMergePolicy(newLogMergePolicy()));\n    LogMergePolicy lmp = (LogMergePolicy) writer.getConfig().getMergePolicy();\n    lmp.setMergeFactor(2);\n    lmp.setNoCFSRatio(0.0);\n    Document d = new Document();\n        \n    Field f1 = newField(\"f1\", \"This field has term freqs\", omitType);\n    d.add(f1);\n\n    for(int i=0;i<30;i++)\n      writer.addDocument(d);\n\n    writer.commit();\n\n    assertNoPrx(ram);\n    \n    // now add some documents with positions, and check\n    // there is no prox after full merge\n    d = new Document();\n    f1 = newTextField(\"f1\", \"This field has positions\", Field.Store.NO);\n    d.add(f1);\n    \n    for(int i=0;i<30;i++)\n      writer.addDocument(d);\n \n    // force merge\n    writer.forceMerge(1);\n    // flush\n    writer.close();\n\n    assertNoPrx(ram);\n    ram.close();\n  }\n\n","sourceOld":"  // Verifies no *.prx exists when all fields omit term freq:\n  public void testNoPrxFile() throws Throwable {\n    Directory ram = newDirectory();\n    if (ram instanceof MockDirectoryWrapper) {\n      // we verify some files get deleted\n      ((MockDirectoryWrapper)ram).setEnableVirusScanner(false);\n    }\n    Analyzer analyzer = new MockAnalyzer(random());\n    IndexWriter writer = new IndexWriter(ram, newIndexWriterConfig(analyzer)\n                                                .setMaxBufferedDocs(3)\n                                                .setMergePolicy(newLogMergePolicy()));\n    LogMergePolicy lmp = (LogMergePolicy) writer.getConfig().getMergePolicy();\n    lmp.setMergeFactor(2);\n    lmp.setNoCFSRatio(0.0);\n    Document d = new Document();\n        \n    Field f1 = newField(\"f1\", \"This field has term freqs\", omitType);\n    d.add(f1);\n\n    for(int i=0;i<30;i++)\n      writer.addDocument(d);\n\n    writer.commit();\n\n    assertNoPrx(ram);\n    \n    // now add some documents with positions, and check\n    // there is no prox after full merge\n    d = new Document();\n    f1 = newTextField(\"f1\", \"This field has positions\", Field.Store.NO);\n    d.add(f1);\n    \n    for(int i=0;i<30;i++)\n      writer.addDocument(d);\n \n    // force merge\n    writer.forceMerge(1);\n    // flush\n    writer.close();\n\n    assertNoPrx(ram);\n    ram.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5a207d19eac354d649c3f0e2cce070017c78125e","date":1454776470,"type":3,"author":"Erick Erickson","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestOmitTf#testNoPrxFile().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestOmitTf#testNoPrxFile().mjava","sourceNew":"  // Verifies no *.prx exists when all fields omit term freq:\n  public void testNoPrxFile() throws Throwable {\n    Directory ram = newDirectory();\n    Analyzer analyzer = new MockAnalyzer(random());\n    IndexWriter writer = new IndexWriter(ram, newIndexWriterConfig(analyzer)\n                                                .setMaxBufferedDocs(3)\n                                                .setMergePolicy(newLogMergePolicy()));\n    LogMergePolicy lmp = (LogMergePolicy) writer.getConfig().getMergePolicy();\n    lmp.setMergeFactor(2);\n    lmp.setNoCFSRatio(0.0);\n    Document d = new Document();\n        \n    Field f1 = newField(\"f1\", \"This field has term freqs\", omitType);\n    d.add(f1);\n\n    for(int i=0;i<30;i++)\n      writer.addDocument(d);\n\n    writer.commit();\n\n    assertNoPrx(ram);\n    \n    // now add some documents with positions, and check\n    // there is no prox after full merge\n    d = new Document();\n    f1 = newTextField(\"f1\", \"This field has positions\", Field.Store.NO);\n    d.add(f1);\n    \n    for(int i=0;i<30;i++)\n      writer.addDocument(d);\n \n    // force merge\n    writer.forceMerge(1);\n    // flush\n    writer.close();\n\n    assertNoPrx(ram);\n    ram.close();\n  }\n\n","sourceOld":"  // Verifies no *.prx exists when all fields omit term freq:\n  public void testNoPrxFile() throws Throwable {\n    Directory ram = newDirectory();\n    if (ram instanceof MockDirectoryWrapper) {\n      // we verify some files get deleted\n      ((MockDirectoryWrapper)ram).setEnableVirusScanner(false);\n    }\n    Analyzer analyzer = new MockAnalyzer(random());\n    IndexWriter writer = new IndexWriter(ram, newIndexWriterConfig(analyzer)\n                                                .setMaxBufferedDocs(3)\n                                                .setMergePolicy(newLogMergePolicy()));\n    LogMergePolicy lmp = (LogMergePolicy) writer.getConfig().getMergePolicy();\n    lmp.setMergeFactor(2);\n    lmp.setNoCFSRatio(0.0);\n    Document d = new Document();\n        \n    Field f1 = newField(\"f1\", \"This field has term freqs\", omitType);\n    d.add(f1);\n\n    for(int i=0;i<30;i++)\n      writer.addDocument(d);\n\n    writer.commit();\n\n    assertNoPrx(ram);\n    \n    // now add some documents with positions, and check\n    // there is no prox after full merge\n    d = new Document();\n    f1 = newTextField(\"f1\", \"This field has positions\", Field.Store.NO);\n    d.add(f1);\n    \n    for(int i=0;i<30;i++)\n      writer.addDocument(d);\n \n    // force merge\n    writer.forceMerge(1);\n    // flush\n    writer.close();\n\n    assertNoPrx(ram);\n    ram.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"165c905a42bedc7c7d1acb37b177498306b7e866","date":1518704038,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestOmitTf#testNoPrxFile().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestOmitTf#testNoPrxFile().mjava","sourceNew":"  // Verifies no *.prx exists when all fields omit term freq:\n  public void testNoPrxFile() throws Throwable {\n    Directory ram = newDirectory();\n    Analyzer analyzer = new MockAnalyzer(random());\n    IndexWriter writer = new IndexWriter(ram, newIndexWriterConfig(analyzer)\n                                                .setMaxBufferedDocs(3)\n                                                .setMergePolicy(newLogMergePolicy()));\n    LogMergePolicy lmp = (LogMergePolicy) writer.getConfig().getMergePolicy();\n    lmp.setMergeFactor(2);\n    lmp.setNoCFSRatio(0.0);\n    Document d = new Document();\n        \n    Field f1 = newField(\"f1\", \"This field has term freqs\", omitType);\n    d.add(f1);\n\n    for(int i=0;i<30;i++)\n      writer.addDocument(d);\n\n    writer.commit();\n\n    assertNoPrx(ram);\n    \n    writer.close();\n    ram.close();\n  }\n\n","sourceOld":"  // Verifies no *.prx exists when all fields omit term freq:\n  public void testNoPrxFile() throws Throwable {\n    Directory ram = newDirectory();\n    Analyzer analyzer = new MockAnalyzer(random());\n    IndexWriter writer = new IndexWriter(ram, newIndexWriterConfig(analyzer)\n                                                .setMaxBufferedDocs(3)\n                                                .setMergePolicy(newLogMergePolicy()));\n    LogMergePolicy lmp = (LogMergePolicy) writer.getConfig().getMergePolicy();\n    lmp.setMergeFactor(2);\n    lmp.setNoCFSRatio(0.0);\n    Document d = new Document();\n        \n    Field f1 = newField(\"f1\", \"This field has term freqs\", omitType);\n    d.add(f1);\n\n    for(int i=0;i<30;i++)\n      writer.addDocument(d);\n\n    writer.commit();\n\n    assertNoPrx(ram);\n    \n    // now add some documents with positions, and check\n    // there is no prox after full merge\n    d = new Document();\n    f1 = newTextField(\"f1\", \"This field has positions\", Field.Store.NO);\n    d.add(f1);\n    \n    for(int i=0;i<30;i++)\n      writer.addDocument(d);\n \n    // force merge\n    writer.forceMerge(1);\n    // flush\n    writer.close();\n\n    assertNoPrx(ram);\n    ram.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5a207d19eac354d649c3f0e2cce070017c78125e":["98d2deb8c96c79ebef084a1f8e5a1a6c08608f13","b470f36a9372c97283360b1304eacbde22df6c0d"],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":["98d2deb8c96c79ebef084a1f8e5a1a6c08608f13","b470f36a9372c97283360b1304eacbde22df6c0d"],"98d2deb8c96c79ebef084a1f8e5a1a6c08608f13":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"04f07771a2a7dd3a395700665ed839c3dae2def2":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"165c905a42bedc7c7d1acb37b177498306b7e866":["5a207d19eac354d649c3f0e2cce070017c78125e"],"088a7ef694fd43d5d9a4d200c4005865f773d1e7":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"b470f36a9372c97283360b1304eacbde22df6c0d":["98d2deb8c96c79ebef084a1f8e5a1a6c08608f13","6bfe104fc023fadc9e709f8d17403d2cc61133fe"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d0ef034a4f10871667ae75181537775ddcf8ade4":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"6bfe104fc023fadc9e709f8d17403d2cc61133fe":["98d2deb8c96c79ebef084a1f8e5a1a6c08608f13"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["088a7ef694fd43d5d9a4d200c4005865f773d1e7"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["165c905a42bedc7c7d1acb37b177498306b7e866"]},"commit2Childs":{"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"5a207d19eac354d649c3f0e2cce070017c78125e":["165c905a42bedc7c7d1acb37b177498306b7e866"],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":[],"98d2deb8c96c79ebef084a1f8e5a1a6c08608f13":["5a207d19eac354d649c3f0e2cce070017c78125e","1e6acbaae7af722f17204ceccf0f7db5753eccf3","b470f36a9372c97283360b1304eacbde22df6c0d","6bfe104fc023fadc9e709f8d17403d2cc61133fe"],"04f07771a2a7dd3a395700665ed839c3dae2def2":["088a7ef694fd43d5d9a4d200c4005865f773d1e7"],"165c905a42bedc7c7d1acb37b177498306b7e866":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"088a7ef694fd43d5d9a4d200c4005865f773d1e7":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"b470f36a9372c97283360b1304eacbde22df6c0d":["5a207d19eac354d649c3f0e2cce070017c78125e","1e6acbaae7af722f17204ceccf0f7db5753eccf3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["98d2deb8c96c79ebef084a1f8e5a1a6c08608f13"],"6bfe104fc023fadc9e709f8d17403d2cc61133fe":["b470f36a9372c97283360b1304eacbde22df6c0d"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["1e6acbaae7af722f17204ceccf0f7db5753eccf3","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}