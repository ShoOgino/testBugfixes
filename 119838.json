{"path":"lucene/src/java/org/apache/lucene/document/NumericField#setFloatValue(float).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/document/NumericField#setFloatValue(float).mjava","pathOld":"src/java/org/apache/lucene/document/NumericField#setFloatValue(float).mjava","sourceNew":"  /**\n   * Initializes the field with the supplied <code>float</code> value.\n   * @param value the numeric value\n   * @return this instance, because of this you can use it the following way:\n   * <code>document.add(new NumericField(name, precisionStep).setFloatValue(value))</code>\n   */\n  public NumericField setFloatValue(final float value) {\n    numericTS.setFloatValue(value);\n    fieldsData = Float.valueOf(value);\n    return this;\n  }\n\n","sourceOld":"  /**\n   * Initializes the field with the supplied <code>float</code> value.\n   * @param value the numeric value\n   * @return this instance, because of this you can use it the following way:\n   * <code>document.add(new NumericField(name, precisionStep).setFloatValue(value))</code>\n   */\n  public NumericField setFloatValue(final float value) {\n    numericTS.setFloatValue(value);\n    fieldsData = Float.valueOf(value);\n    return this;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab0e9f7ce724e6aea1fea746dded19e76d231cf8","date":1304774078,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/document/NumericField#setFloatValue(float).mjava","pathOld":"lucene/src/java/org/apache/lucene/document/NumericField#setFloatValue(float).mjava","sourceNew":"  /**\n   * Initializes the field with the supplied <code>float</code> value.\n   * @param value the numeric value\n   * @return this instance, because of this you can use it the following way:\n   * <code>document.add(new NumericField(name, precisionStep).setFloatValue(value))</code>\n   */\n  public NumericField setFloatValue(final float value) {\n    if (numericTS != null) numericTS.setFloatValue(value);\n    fieldsData = Float.valueOf(value);\n    type = DataType.FLOAT;\n    return this;\n  }\n\n","sourceOld":"  /**\n   * Initializes the field with the supplied <code>float</code> value.\n   * @param value the numeric value\n   * @return this instance, because of this you can use it the following way:\n   * <code>document.add(new NumericField(name, precisionStep).setFloatValue(value))</code>\n   */\n  public NumericField setFloatValue(final float value) {\n    numericTS.setFloatValue(value);\n    fieldsData = Float.valueOf(value);\n    return this;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c700f8d0842d3e52bb2bdfbfdc046a137e836edb","date":1305285499,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/document/NumericField#setFloatValue(float).mjava","pathOld":"lucene/src/java/org/apache/lucene/document/NumericField#setFloatValue(float).mjava","sourceNew":"  /**\n   * Initializes the field with the supplied <code>float</code> value.\n   * @param value the numeric value\n   * @return this instance, because of this you can use it the following way:\n   * <code>document.add(new NumericField(name, precisionStep).setFloatValue(value))</code>\n   */\n  public NumericField setFloatValue(final float value) {\n    if (numericTS != null) numericTS.setFloatValue(value);\n    fieldsData = Float.valueOf(value);\n    type = DataType.FLOAT;\n    return this;\n  }\n\n","sourceOld":"  /**\n   * Initializes the field with the supplied <code>float</code> value.\n   * @param value the numeric value\n   * @return this instance, because of this you can use it the following way:\n   * <code>document.add(new NumericField(name, precisionStep).setFloatValue(value))</code>\n   */\n  public NumericField setFloatValue(final float value) {\n    numericTS.setFloatValue(value);\n    fieldsData = Float.valueOf(value);\n    return this;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/document/NumericField#setFloatValue(float).mjava","pathOld":"lucene/src/java/org/apache/lucene/document/NumericField#setFloatValue(float).mjava","sourceNew":"  /**\n   * Initializes the field with the supplied <code>float</code> value.\n   * @param value the numeric value\n   * @return this instance, because of this you can use it the following way:\n   * <code>document.add(new NumericField(name, precisionStep).setFloatValue(value))</code>\n   */\n  public NumericField setFloatValue(final float value) {\n    if (numericTS != null) numericTS.setFloatValue(value);\n    fieldsData = Float.valueOf(value);\n    type = DataType.FLOAT;\n    return this;\n  }\n\n","sourceOld":"  /**\n   * Initializes the field with the supplied <code>float</code> value.\n   * @param value the numeric value\n   * @return this instance, because of this you can use it the following way:\n   * <code>document.add(new NumericField(name, precisionStep).setFloatValue(value))</code>\n   */\n  public NumericField setFloatValue(final float value) {\n    numericTS.setFloatValue(value);\n    fieldsData = Float.valueOf(value);\n    return this;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1509f151d7692d84fae414b2b799ac06ba60fcb4","date":1314451621,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/document/NumericField#setFloatValue(float).mjava","pathOld":"lucene/src/java/org/apache/lucene/document/NumericField#setFloatValue(float).mjava","sourceNew":"  /**\n   * Initializes the field with the supplied <code>float</code> value.\n   * \n   * @param value\n   *          the numeric value\n   * @return this instance, because of this you can use it the following way:\n   *         <code>document.add(new NumericField(name, precisionStep).setFloatValue(value))</code>\n   */\n  public NumericField setFloatValue(final float value) {\n    if (numericTS != null) numericTS.setFloatValue(value);\n    fieldsData = Float.valueOf(value);\n    dataType = DataType.FLOAT;\n    return this;\n  }\n\n","sourceOld":"  /**\n   * Initializes the field with the supplied <code>float</code> value.\n   * @param value the numeric value\n   * @return this instance, because of this you can use it the following way:\n   * <code>document.add(new NumericField(name, precisionStep).setFloatValue(value))</code>\n   */\n  public NumericField setFloatValue(final float value) {\n    if (numericTS != null) numericTS.setFloatValue(value);\n    fieldsData = Float.valueOf(value);\n    type = DataType.FLOAT;\n    return this;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fa0f44f887719e97183771e977cfc4bfb485b766","date":1326668713,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/document/NumericField#setFloatValue(float).mjava","sourceNew":null,"sourceOld":"  /**\n   * Initializes the field with the supplied <code>float</code> value.\n   * \n   * @param value\n   *          the numeric value\n   * @return this instance, because of this you can use it the following way:\n   *         <code>document.add(new NumericField(name, precisionStep).setFloatValue(value))</code>\n   */\n  public NumericField setFloatValue(final float value) {\n    if (numericTS != null) numericTS.setFloatValue(value);\n    fieldsData = Float.valueOf(value);\n    dataType = DataType.FLOAT;\n    return this;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ab0e9f7ce724e6aea1fea746dded19e76d231cf8":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a3776dccca01c11e7046323cfad46a3b4a471233":["9454a6510e2db155fb01faa5c049b06ece95fab9","ab0e9f7ce724e6aea1fea746dded19e76d231cf8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"fa0f44f887719e97183771e977cfc4bfb485b766":["1509f151d7692d84fae414b2b799ac06ba60fcb4"],"c700f8d0842d3e52bb2bdfbfdc046a137e836edb":["9454a6510e2db155fb01faa5c049b06ece95fab9","ab0e9f7ce724e6aea1fea746dded19e76d231cf8"],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["ab0e9f7ce724e6aea1fea746dded19e76d231cf8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["fa0f44f887719e97183771e977cfc4bfb485b766"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"ab0e9f7ce724e6aea1fea746dded19e76d231cf8":["a3776dccca01c11e7046323cfad46a3b4a471233","c700f8d0842d3e52bb2bdfbfdc046a137e836edb","1509f151d7692d84fae414b2b799ac06ba60fcb4"],"a3776dccca01c11e7046323cfad46a3b4a471233":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"fa0f44f887719e97183771e977cfc4bfb485b766":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c700f8d0842d3e52bb2bdfbfdc046a137e836edb":[],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["fa0f44f887719e97183771e977cfc4bfb485b766"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["ab0e9f7ce724e6aea1fea746dded19e76d231cf8","a3776dccca01c11e7046323cfad46a3b4a471233","c700f8d0842d3e52bb2bdfbfdc046a137e836edb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a3776dccca01c11e7046323cfad46a3b4a471233","c700f8d0842d3e52bb2bdfbfdc046a137e836edb","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}