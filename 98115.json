{"path":"lucene/src/java/org/apache/lucene/store/FSDirectory#listAll(File).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/store/FSDirectory#listAll(File).mjava","pathOld":"src/java/org/apache/lucene/store/FSDirectory#listAll(File).mjava","sourceNew":"  /** Lists all files (not subdirectories) in the\n   *  directory.  This method never returns null (throws\n   *  {@link IOException} instead).\n   *\n   *  @throws NoSuchDirectoryException if the directory\n   *   does not exist, or does exist but is not a\n   *   directory.\n   *  @throws IOException if list() returns null */\n  public static String[] listAll(File dir) throws IOException {\n    if (!dir.exists())\n      throw new NoSuchDirectoryException(\"directory '\" + dir + \"' does not exist\");\n    else if (!dir.isDirectory())\n      throw new NoSuchDirectoryException(\"file '\" + dir + \"' exists but is not a directory\");\n\n    // Exclude subdirs\n    String[] result = dir.list(new FilenameFilter() {\n        public boolean accept(File dir, String file) {\n          return !new File(dir, file).isDirectory();\n        }\n      });\n\n    if (result == null)\n      throw new IOException(\"directory '\" + dir + \"' exists and is a directory, but cannot be listed: list() returned null\");\n\n    return result;\n  }\n\n","sourceOld":"  /** Lists all files (not subdirectories) in the\n   *  directory.  This method never returns null (throws\n   *  {@link IOException} instead).\n   *\n   *  @throws NoSuchDirectoryException if the directory\n   *   does not exist, or does exist but is not a\n   *   directory.\n   *  @throws IOException if list() returns null */\n  public static String[] listAll(File dir) throws IOException {\n    if (!dir.exists())\n      throw new NoSuchDirectoryException(\"directory '\" + dir + \"' does not exist\");\n    else if (!dir.isDirectory())\n      throw new NoSuchDirectoryException(\"file '\" + dir + \"' exists but is not a directory\");\n\n    // Exclude subdirs\n    String[] result = dir.list(new FilenameFilter() {\n        public boolean accept(File dir, String file) {\n          return !new File(dir, file).isDirectory();\n        }\n      });\n\n    if (result == null)\n      throw new IOException(\"directory '\" + dir + \"' exists and is a directory, but cannot be listed: list() returned null\");\n\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/store/FSDirectory#listAll(File).mjava","pathOld":"lucene/src/java/org/apache/lucene/store/FSDirectory#listAll(File).mjava","sourceNew":"  /** Lists all files (not subdirectories) in the\n   *  directory.  This method never returns null (throws\n   *  {@link IOException} instead).\n   *\n   *  @throws NoSuchDirectoryException if the directory\n   *   does not exist, or does exist but is not a\n   *   directory.\n   *  @throws IOException if list() returns null */\n  public static String[] listAll(File dir) throws IOException {\n    if (!dir.exists())\n      throw new NoSuchDirectoryException(\"directory '\" + dir + \"' does not exist\");\n    else if (!dir.isDirectory())\n      throw new NoSuchDirectoryException(\"file '\" + dir + \"' exists but is not a directory\");\n\n    // Exclude subdirs\n    String[] result = dir.list(new FilenameFilter() {\n        public boolean accept(File dir, String file) {\n          return !new File(dir, file).isDirectory();\n        }\n      });\n\n    if (result == null)\n      throw new IOException(\"directory '\" + dir + \"' exists and is a directory, but cannot be listed: list() returned null\");\n\n    return result;\n  }\n\n","sourceOld":"  /** Lists all files (not subdirectories) in the\n   *  directory.  This method never returns null (throws\n   *  {@link IOException} instead).\n   *\n   *  @throws NoSuchDirectoryException if the directory\n   *   does not exist, or does exist but is not a\n   *   directory.\n   *  @throws IOException if list() returns null */\n  public static String[] listAll(File dir) throws IOException {\n    if (!dir.exists())\n      throw new NoSuchDirectoryException(\"directory '\" + dir + \"' does not exist\");\n    else if (!dir.isDirectory())\n      throw new NoSuchDirectoryException(\"file '\" + dir + \"' exists but is not a directory\");\n\n    // Exclude subdirs\n    String[] result = dir.list(new FilenameFilter() {\n        public boolean accept(File dir, String file) {\n          return !new File(dir, file).isDirectory();\n        }\n      });\n\n    if (result == null)\n      throw new IOException(\"directory '\" + dir + \"' exists and is a directory, but cannot be listed: list() returned null\");\n\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}