{"path":"lucene/analysis/icu/src/test/org/apache/lucene/analysis/icu/TestICUTransformFilterFactory#testForwardDirection().mjava","commits":[{"id":"57da959ec15bb701bd1d1bf3c613b69009ff4bfd","date":1364833800,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/icu/src/test/org/apache/lucene/analysis/icu/TestICUTransformFilterFactory#testForwardDirection().mjava","pathOld":"lucene/analysis/icu/src/test/org/apache/lucene/analysis/icu/TestICUTransformFilterFactory#testDirection().mjava","sourceNew":"  /** test forward and reverse direction */\n  public void testForwardDirection() throws Exception {\n    // forward\n    Reader reader = new StringReader(\"Российская Федерация\");\n    Map<String,String> args = new HashMap<String,String>();\n    args.put(\"id\", \"Cyrillic-Latin\");\n    ICUTransformFilterFactory factory = new ICUTransformFilterFactory(args);\n    TokenStream stream = new MockTokenizer(reader, MockTokenizer.WHITESPACE, false);\n    stream = factory.create(stream);\n    assertTokenStreamContents(stream, new String[] { \"Rossijskaâ\",  \"Federaciâ\" });\n  }\n\n","sourceOld":"  /** test forward and reverse direction */\n  public void testDirection() throws Exception {\n    // forward\n    Reader reader = new StringReader(\"Российская Федерация\");\n    ICUTransformFilterFactory factory = new ICUTransformFilterFactory();\n    Map<String,String> args = new HashMap<String,String>();\n    args.put(\"id\", \"Cyrillic-Latin\");\n    factory.init(args);\n    Tokenizer tokenizer = new WhitespaceTokenizer(TEST_VERSION_CURRENT, reader);\n    TokenStream stream = factory.create(tokenizer);\n    assertTokenStreamContents(stream, new String[] { \"Rossijskaâ\",  \"Federaciâ\" });\n    \n    // backward (invokes Latin-Cyrillic)\n    reader = new StringReader(\"Rossijskaâ Federaciâ\");\n    args.put(\"direction\", \"reverse\");\n    factory.init(args);\n    tokenizer = new WhitespaceTokenizer(TEST_VERSION_CURRENT, reader);\n    stream = factory.create(tokenizer);\n    assertTokenStreamContents(stream, new String[] { \"Российская\", \"Федерация\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae889fd5c8a69f6b5d130d3c895bfa5b04d07338","date":1389274049,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/icu/src/test/org/apache/lucene/analysis/icu/TestICUTransformFilterFactory#testForwardDirection().mjava","pathOld":"lucene/analysis/icu/src/test/org/apache/lucene/analysis/icu/TestICUTransformFilterFactory#testForwardDirection().mjava","sourceNew":"  /** test forward and reverse direction */\n  public void testForwardDirection() throws Exception {\n    // forward\n    Reader reader = new StringReader(\"Российская Федерация\");\n    Map<String,String> args = new HashMap<String,String>();\n    args.put(\"id\", \"Cyrillic-Latin\");\n    ICUTransformFilterFactory factory = new ICUTransformFilterFactory(args);\n    TokenStream stream = whitespaceMockTokenizer(reader);\n    stream = factory.create(stream);\n    assertTokenStreamContents(stream, new String[] { \"Rossijskaâ\",  \"Federaciâ\" });\n  }\n\n","sourceOld":"  /** test forward and reverse direction */\n  public void testForwardDirection() throws Exception {\n    // forward\n    Reader reader = new StringReader(\"Российская Федерация\");\n    Map<String,String> args = new HashMap<String,String>();\n    args.put(\"id\", \"Cyrillic-Latin\");\n    ICUTransformFilterFactory factory = new ICUTransformFilterFactory(args);\n    TokenStream stream = new MockTokenizer(reader, MockTokenizer.WHITESPACE, false);\n    stream = factory.create(stream);\n    assertTokenStreamContents(stream, new String[] { \"Rossijskaâ\",  \"Federaciâ\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/icu/src/test/org/apache/lucene/analysis/icu/TestICUTransformFilterFactory#testForwardDirection().mjava","pathOld":"lucene/analysis/icu/src/test/org/apache/lucene/analysis/icu/TestICUTransformFilterFactory#testForwardDirection().mjava","sourceNew":"  /** test forward and reverse direction */\n  public void testForwardDirection() throws Exception {\n    // forward\n    Reader reader = new StringReader(\"Российская Федерация\");\n    Map<String,String> args = new HashMap<>();\n    args.put(\"id\", \"Cyrillic-Latin\");\n    ICUTransformFilterFactory factory = new ICUTransformFilterFactory(args);\n    TokenStream stream = whitespaceMockTokenizer(reader);\n    stream = factory.create(stream);\n    assertTokenStreamContents(stream, new String[] { \"Rossijskaâ\",  \"Federaciâ\" });\n  }\n\n","sourceOld":"  /** test forward and reverse direction */\n  public void testForwardDirection() throws Exception {\n    // forward\n    Reader reader = new StringReader(\"Российская Федерация\");\n    Map<String,String> args = new HashMap<String,String>();\n    args.put(\"id\", \"Cyrillic-Latin\");\n    ICUTransformFilterFactory factory = new ICUTransformFilterFactory(args);\n    TokenStream stream = whitespaceMockTokenizer(reader);\n    stream = factory.create(stream);\n    assertTokenStreamContents(stream, new String[] { \"Rossijskaâ\",  \"Federaciâ\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["ae889fd5c8a69f6b5d130d3c895bfa5b04d07338"],"ae889fd5c8a69f6b5d130d3c895bfa5b04d07338":["57da959ec15bb701bd1d1bf3c613b69009ff4bfd"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"57da959ec15bb701bd1d1bf3c613b69009ff4bfd":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"]},"commit2Childs":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ae889fd5c8a69f6b5d130d3c895bfa5b04d07338":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["57da959ec15bb701bd1d1bf3c613b69009ff4bfd"],"57da959ec15bb701bd1d1bf3c613b69009ff4bfd":["ae889fd5c8a69f6b5d130d3c895bfa5b04d07338"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}