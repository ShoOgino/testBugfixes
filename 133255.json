{"path":"solr/core/src/test/org/apache/solr/search/TestExtendedDismaxParser#testSplitOnWhitespace_Basic().mjava","commits":[{"id":"e55782fb51a6e9789542818eb2161a3247f39ace","date":1489707707,"type":0,"author":"Steve Rowe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestExtendedDismaxParser#testSplitOnWhitespace_Basic().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testSplitOnWhitespace_Basic() throws Exception {\n    // The \"text_sw\" field has synonyms loaded from synonyms.txt\n\n    // retrieve the single document containing literal \"wifi\"\n    assertJQ(req(\"qf\",\"text_sw title\", \"defType\",\"edismax\", \"q\",\"wifi\", \"sow\",\"true\")\n        , \"/response/numFound==1\"\n        , \"/response/docs/[0]/id=='72'\"\n    );\n\n    // trigger the \"wi fi => wifi\" synonym\n    assertJQ(req(\"qf\", \"text_sw title\", \"defType\",\"edismax\", \"q\",\"wi fi\", \"sow\",\"false\")\n        , \"/response/numFound==1\"\n        , \"/response/docs/[0]/id=='72'\"\n    );\n    assertJQ(req(\"qf\", \"text_sw title\", \"defType\",\"edismax\", \"q\",\"wi fi\", \"sow\",\"true\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"qf\",\"text_sw title\", \"defType\",\"edismax\", \"q\",\"wi fi\") // default sow=true\n        , \"/response/numFound==0\"\n    );\n\n    assertJQ(req(\"qf\",\"text_sw title\", \"q\",\"{!edismax sow=false}wi fi\")\n        , \"/response/numFound==1\"\n        , \"/response/docs/[0]/id=='72'\"\n    );\n    assertJQ(req(\"df\", \"text_sw title\", \"q\",\"{!edismax sow=true}wi fi\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"text_sw title\", \"q\", \"{!edismax}wi fi\") // default sow=true\n        , \"/response/numFound==0\"\n    );\n\n    assertQ(req(\"qf\", \"name title\", \n                \"q\", \"barking curds of stigma\",\n                \"defType\", \"edismax\",\n                \"sow\", \"false\",\n                \"debugQuery\", \"true\"),\n        \"//str[@name='parsedquery'][contains(.,'DisjunctionMaxQuery((name:barking | title:barking))')]\",\n        \"//str[@name='parsedquery'][contains(.,'DisjunctionMaxQuery((name:curds | title:curds))')]\",\n        \"//str[@name='parsedquery'][contains(.,'DisjunctionMaxQuery((name:of | title:of))')]\",\n        \"//str[@name='parsedquery'][contains(.,'DisjunctionMaxQuery((name:stigma | title:stigma))')]\"\n    );\n    assertQ(req(\"qf\", \"name title\",\n        \"q\", \"barking curds of stigma\",\n        \"defType\", \"edismax\",\n        \"sow\", \"true\",\n        \"debugQuery\", \"true\"),\n        \"//str[@name='parsedquery'][contains(.,'DisjunctionMaxQuery((name:barking | title:barking))')]\",\n        \"//str[@name='parsedquery'][contains(.,'DisjunctionMaxQuery((name:curds | title:curds))')]\",\n        \"//str[@name='parsedquery'][contains(.,'DisjunctionMaxQuery((name:of | title:of))')]\",\n        \"//str[@name='parsedquery'][contains(.,'DisjunctionMaxQuery((name:stigma | title:stigma))')]\"\n    );\n    assertQ(req(\"qf\", \"name title\",\n        \"q\", \"barking curds of stigma\",\n        \"defType\", \"edismax\",\n        \"debugQuery\", \"true\"), // Default sow=true\n        \"//str[@name='parsedquery'][contains(.,'DisjunctionMaxQuery((name:barking | title:barking))')]\",\n        \"//str[@name='parsedquery'][contains(.,'DisjunctionMaxQuery((name:curds | title:curds))')]\",\n        \"//str[@name='parsedquery'][contains(.,'DisjunctionMaxQuery((name:of | title:of))')]\",\n        \"//str[@name='parsedquery'][contains(.,'DisjunctionMaxQuery((name:stigma | title:stigma))')]\"\n    );\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c03778630c4604270d88c148afb8c7de35b51d3c","date":1490280010,"type":0,"author":"Steve Rowe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestExtendedDismaxParser#testSplitOnWhitespace_Basic().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testSplitOnWhitespace_Basic() throws Exception {\n    // The \"text_sw\" field has synonyms loaded from synonyms.txt\n\n    // retrieve the single document containing literal \"wifi\"\n    assertJQ(req(\"qf\",\"text_sw title\", \"defType\",\"edismax\", \"q\",\"wifi\", \"sow\",\"true\")\n        , \"/response/numFound==1\"\n        , \"/response/docs/[0]/id=='72'\"\n    );\n\n    // trigger the \"wi fi => wifi\" synonym\n    assertJQ(req(\"qf\", \"text_sw title\", \"defType\",\"edismax\", \"q\",\"wi fi\", \"sow\",\"false\")\n        , \"/response/numFound==1\"\n        , \"/response/docs/[0]/id=='72'\"\n    );\n    assertJQ(req(\"qf\", \"text_sw title\", \"defType\",\"edismax\", \"q\",\"wi fi\", \"sow\",\"true\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"qf\",\"text_sw title\", \"defType\",\"edismax\", \"q\",\"wi fi\") // default sow=true\n        , \"/response/numFound==0\"\n    );\n\n    assertJQ(req(\"qf\",\"text_sw title\", \"q\",\"{!edismax sow=false}wi fi\")\n        , \"/response/numFound==1\"\n        , \"/response/docs/[0]/id=='72'\"\n    );\n    assertJQ(req(\"df\", \"text_sw title\", \"q\",\"{!edismax sow=true}wi fi\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"text_sw title\", \"q\", \"{!edismax}wi fi\") // default sow=true\n        , \"/response/numFound==0\"\n    );\n\n    assertQ(req(\"qf\", \"name title\", \n                \"q\", \"barking curds of stigma\",\n                \"defType\", \"edismax\",\n                \"sow\", \"false\",\n                \"debugQuery\", \"true\"),\n        \"//str[@name='parsedquery'][contains(.,'DisjunctionMaxQuery((name:barking | title:barking))')]\",\n        \"//str[@name='parsedquery'][contains(.,'DisjunctionMaxQuery((name:curds | title:curds))')]\",\n        \"//str[@name='parsedquery'][contains(.,'DisjunctionMaxQuery((name:of | title:of))')]\",\n        \"//str[@name='parsedquery'][contains(.,'DisjunctionMaxQuery((name:stigma | title:stigma))')]\"\n    );\n    assertQ(req(\"qf\", \"name title\",\n        \"q\", \"barking curds of stigma\",\n        \"defType\", \"edismax\",\n        \"sow\", \"true\",\n        \"debugQuery\", \"true\"),\n        \"//str[@name='parsedquery'][contains(.,'DisjunctionMaxQuery((name:barking | title:barking))')]\",\n        \"//str[@name='parsedquery'][contains(.,'DisjunctionMaxQuery((name:curds | title:curds))')]\",\n        \"//str[@name='parsedquery'][contains(.,'DisjunctionMaxQuery((name:of | title:of))')]\",\n        \"//str[@name='parsedquery'][contains(.,'DisjunctionMaxQuery((name:stigma | title:stigma))')]\"\n    );\n    assertQ(req(\"qf\", \"name title\",\n        \"q\", \"barking curds of stigma\",\n        \"defType\", \"edismax\",\n        \"debugQuery\", \"true\"), // Default sow=true\n        \"//str[@name='parsedquery'][contains(.,'DisjunctionMaxQuery((name:barking | title:barking))')]\",\n        \"//str[@name='parsedquery'][contains(.,'DisjunctionMaxQuery((name:curds | title:curds))')]\",\n        \"//str[@name='parsedquery'][contains(.,'DisjunctionMaxQuery((name:of | title:of))')]\",\n        \"//str[@name='parsedquery'][contains(.,'DisjunctionMaxQuery((name:stigma | title:stigma))')]\"\n    );\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7a4260b228cfff6ad78ac88d519f0f7746529c3c","date":1493136145,"type":3,"author":"Steve Rowe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestExtendedDismaxParser#testSplitOnWhitespace_Basic().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestExtendedDismaxParser#testSplitOnWhitespace_Basic().mjava","sourceNew":"  @Test\n  public void testSplitOnWhitespace_Basic() throws Exception {\n    // The \"text_sw\" field has synonyms loaded from synonyms.txt\n\n    // retrieve the single document containing literal \"wifi\"\n    assertJQ(req(\"qf\",\"text_sw title\", \"defType\",\"edismax\", \"q\",\"wifi\", \"sow\",\"true\")\n        , \"/response/numFound==1\"\n        , \"/response/docs/[0]/id=='72'\"\n    );\n\n    // trigger the \"wi fi => wifi\" synonym\n    assertJQ(req(\"qf\", \"text_sw title\", \"defType\",\"edismax\", \"q\",\"wi fi\", \"sow\",\"false\")\n        , \"/response/numFound==1\"\n        , \"/response/docs/[0]/id=='72'\"\n    );\n    assertJQ(req(\"qf\", \"text_sw title\", \"defType\",\"edismax\", \"q\",\"wi fi\", \"sow\",\"true\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"qf\",\"text_sw title\", \"defType\",\"edismax\", \"q\",\"wi fi\") // default sow=false\n        , \"/response/numFound==1\"\n        , \"/response/docs/[0]/id=='72'\"\n    );\n\n    assertJQ(req(\"qf\",\"text_sw title\", \"q\",\"{!edismax sow=false}wi fi\")\n        , \"/response/numFound==1\"\n        , \"/response/docs/[0]/id=='72'\"\n    );\n    assertJQ(req(\"qf\", \"text_sw title\", \"q\",\"{!edismax sow=true}wi fi\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"qf\", \"text_sw title\", \"q\", \"{!edismax}wi fi\") // default sow=false\n        , \"/response/numFound==1\"\n        , \"/response/docs/[0]/id=='72'\"\n    );\n\n    assertQ(req(\"qf\", \"name title\", \n                \"q\", \"barking curds of stigma\",\n                \"defType\", \"edismax\",\n                \"sow\", \"false\",\n                \"debugQuery\", \"true\"),\n        \"//str[@name='parsedquery'][contains(.,'DisjunctionMaxQuery((name:barking | title:barking))')]\",\n        \"//str[@name='parsedquery'][contains(.,'DisjunctionMaxQuery((name:curds | title:curds))')]\",\n        \"//str[@name='parsedquery'][contains(.,'DisjunctionMaxQuery((name:of | title:of))')]\",\n        \"//str[@name='parsedquery'][contains(.,'DisjunctionMaxQuery((name:stigma | title:stigma))')]\"\n    );\n    assertQ(req(\"qf\", \"name title\",\n        \"q\", \"barking curds of stigma\",\n        \"defType\", \"edismax\",\n        \"sow\", \"true\",\n        \"debugQuery\", \"true\"),\n        \"//str[@name='parsedquery'][contains(.,'DisjunctionMaxQuery((name:barking | title:barking))')]\",\n        \"//str[@name='parsedquery'][contains(.,'DisjunctionMaxQuery((name:curds | title:curds))')]\",\n        \"//str[@name='parsedquery'][contains(.,'DisjunctionMaxQuery((name:of | title:of))')]\",\n        \"//str[@name='parsedquery'][contains(.,'DisjunctionMaxQuery((name:stigma | title:stigma))')]\"\n    );\n    assertQ(req(\"qf\", \"name title\",\n        \"q\", \"barking curds of stigma\",\n        \"defType\", \"edismax\",\n        \"debugQuery\", \"true\"), // Default sow=false\n        \"//str[@name='parsedquery'][contains(.,'DisjunctionMaxQuery((name:barking | title:barking))')]\",\n        \"//str[@name='parsedquery'][contains(.,'DisjunctionMaxQuery((name:curds | title:curds))')]\",\n        \"//str[@name='parsedquery'][contains(.,'DisjunctionMaxQuery((name:of | title:of))')]\",\n        \"//str[@name='parsedquery'][contains(.,'DisjunctionMaxQuery((name:stigma | title:stigma))')]\"\n    );\n  }\n\n","sourceOld":"  @Test\n  public void testSplitOnWhitespace_Basic() throws Exception {\n    // The \"text_sw\" field has synonyms loaded from synonyms.txt\n\n    // retrieve the single document containing literal \"wifi\"\n    assertJQ(req(\"qf\",\"text_sw title\", \"defType\",\"edismax\", \"q\",\"wifi\", \"sow\",\"true\")\n        , \"/response/numFound==1\"\n        , \"/response/docs/[0]/id=='72'\"\n    );\n\n    // trigger the \"wi fi => wifi\" synonym\n    assertJQ(req(\"qf\", \"text_sw title\", \"defType\",\"edismax\", \"q\",\"wi fi\", \"sow\",\"false\")\n        , \"/response/numFound==1\"\n        , \"/response/docs/[0]/id=='72'\"\n    );\n    assertJQ(req(\"qf\", \"text_sw title\", \"defType\",\"edismax\", \"q\",\"wi fi\", \"sow\",\"true\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"qf\",\"text_sw title\", \"defType\",\"edismax\", \"q\",\"wi fi\") // default sow=true\n        , \"/response/numFound==0\"\n    );\n\n    assertJQ(req(\"qf\",\"text_sw title\", \"q\",\"{!edismax sow=false}wi fi\")\n        , \"/response/numFound==1\"\n        , \"/response/docs/[0]/id=='72'\"\n    );\n    assertJQ(req(\"df\", \"text_sw title\", \"q\",\"{!edismax sow=true}wi fi\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"text_sw title\", \"q\", \"{!edismax}wi fi\") // default sow=true\n        , \"/response/numFound==0\"\n    );\n\n    assertQ(req(\"qf\", \"name title\", \n                \"q\", \"barking curds of stigma\",\n                \"defType\", \"edismax\",\n                \"sow\", \"false\",\n                \"debugQuery\", \"true\"),\n        \"//str[@name='parsedquery'][contains(.,'DisjunctionMaxQuery((name:barking | title:barking))')]\",\n        \"//str[@name='parsedquery'][contains(.,'DisjunctionMaxQuery((name:curds | title:curds))')]\",\n        \"//str[@name='parsedquery'][contains(.,'DisjunctionMaxQuery((name:of | title:of))')]\",\n        \"//str[@name='parsedquery'][contains(.,'DisjunctionMaxQuery((name:stigma | title:stigma))')]\"\n    );\n    assertQ(req(\"qf\", \"name title\",\n        \"q\", \"barking curds of stigma\",\n        \"defType\", \"edismax\",\n        \"sow\", \"true\",\n        \"debugQuery\", \"true\"),\n        \"//str[@name='parsedquery'][contains(.,'DisjunctionMaxQuery((name:barking | title:barking))')]\",\n        \"//str[@name='parsedquery'][contains(.,'DisjunctionMaxQuery((name:curds | title:curds))')]\",\n        \"//str[@name='parsedquery'][contains(.,'DisjunctionMaxQuery((name:of | title:of))')]\",\n        \"//str[@name='parsedquery'][contains(.,'DisjunctionMaxQuery((name:stigma | title:stigma))')]\"\n    );\n    assertQ(req(\"qf\", \"name title\",\n        \"q\", \"barking curds of stigma\",\n        \"defType\", \"edismax\",\n        \"debugQuery\", \"true\"), // Default sow=true\n        \"//str[@name='parsedquery'][contains(.,'DisjunctionMaxQuery((name:barking | title:barking))')]\",\n        \"//str[@name='parsedquery'][contains(.,'DisjunctionMaxQuery((name:curds | title:curds))')]\",\n        \"//str[@name='parsedquery'][contains(.,'DisjunctionMaxQuery((name:of | title:of))')]\",\n        \"//str[@name='parsedquery'][contains(.,'DisjunctionMaxQuery((name:stigma | title:stigma))')]\"\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/search/TestExtendedDismaxParser#testSplitOnWhitespace_Basic().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestExtendedDismaxParser#testSplitOnWhitespace_Basic().mjava","sourceNew":"  @Test\n  public void testSplitOnWhitespace_Basic() throws Exception {\n    // The \"text_sw\" field has synonyms loaded from synonyms.txt\n\n    // retrieve the single document containing literal \"wifi\"\n    assertJQ(req(\"qf\",\"text_sw title\", \"defType\",\"edismax\", \"q\",\"wifi\", \"sow\",\"true\")\n        , \"/response/numFound==1\"\n        , \"/response/docs/[0]/id=='72'\"\n    );\n\n    // trigger the \"wi fi => wifi\" synonym\n    assertJQ(req(\"qf\", \"text_sw title\", \"defType\",\"edismax\", \"q\",\"wi fi\", \"sow\",\"false\")\n        , \"/response/numFound==1\"\n        , \"/response/docs/[0]/id=='72'\"\n    );\n    assertJQ(req(\"qf\", \"text_sw title\", \"defType\",\"edismax\", \"q\",\"wi fi\", \"sow\",\"true\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"qf\",\"text_sw title\", \"defType\",\"edismax\", \"q\",\"wi fi\") // default sow=false\n        , \"/response/numFound==1\"\n        , \"/response/docs/[0]/id=='72'\"\n    );\n\n    assertJQ(req(\"qf\",\"text_sw title\", \"q\",\"{!edismax sow=false}wi fi\")\n        , \"/response/numFound==1\"\n        , \"/response/docs/[0]/id=='72'\"\n    );\n    assertJQ(req(\"qf\", \"text_sw title\", \"q\",\"{!edismax sow=true}wi fi\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"qf\", \"text_sw title\", \"q\", \"{!edismax}wi fi\") // default sow=false\n        , \"/response/numFound==1\"\n        , \"/response/docs/[0]/id=='72'\"\n    );\n\n    assertQ(req(\"qf\", \"name title\", \n                \"q\", \"barking curds of stigma\",\n                \"defType\", \"edismax\",\n                \"sow\", \"false\",\n                \"debugQuery\", \"true\"),\n        \"//str[@name='parsedquery'][contains(.,'DisjunctionMaxQuery((name:barking | title:barking))')]\",\n        \"//str[@name='parsedquery'][contains(.,'DisjunctionMaxQuery((name:curds | title:curds))')]\",\n        \"//str[@name='parsedquery'][contains(.,'DisjunctionMaxQuery((name:of | title:of))')]\",\n        \"//str[@name='parsedquery'][contains(.,'DisjunctionMaxQuery((name:stigma | title:stigma))')]\"\n    );\n    assertQ(req(\"qf\", \"name title\",\n        \"q\", \"barking curds of stigma\",\n        \"defType\", \"edismax\",\n        \"sow\", \"true\",\n        \"debugQuery\", \"true\"),\n        \"//str[@name='parsedquery'][contains(.,'DisjunctionMaxQuery((name:barking | title:barking))')]\",\n        \"//str[@name='parsedquery'][contains(.,'DisjunctionMaxQuery((name:curds | title:curds))')]\",\n        \"//str[@name='parsedquery'][contains(.,'DisjunctionMaxQuery((name:of | title:of))')]\",\n        \"//str[@name='parsedquery'][contains(.,'DisjunctionMaxQuery((name:stigma | title:stigma))')]\"\n    );\n    assertQ(req(\"qf\", \"name title\",\n        \"q\", \"barking curds of stigma\",\n        \"defType\", \"edismax\",\n        \"debugQuery\", \"true\"), // Default sow=false\n        \"//str[@name='parsedquery'][contains(.,'DisjunctionMaxQuery((name:barking | title:barking))')]\",\n        \"//str[@name='parsedquery'][contains(.,'DisjunctionMaxQuery((name:curds | title:curds))')]\",\n        \"//str[@name='parsedquery'][contains(.,'DisjunctionMaxQuery((name:of | title:of))')]\",\n        \"//str[@name='parsedquery'][contains(.,'DisjunctionMaxQuery((name:stigma | title:stigma))')]\"\n    );\n  }\n\n","sourceOld":"  @Test\n  public void testSplitOnWhitespace_Basic() throws Exception {\n    // The \"text_sw\" field has synonyms loaded from synonyms.txt\n\n    // retrieve the single document containing literal \"wifi\"\n    assertJQ(req(\"qf\",\"text_sw title\", \"defType\",\"edismax\", \"q\",\"wifi\", \"sow\",\"true\")\n        , \"/response/numFound==1\"\n        , \"/response/docs/[0]/id=='72'\"\n    );\n\n    // trigger the \"wi fi => wifi\" synonym\n    assertJQ(req(\"qf\", \"text_sw title\", \"defType\",\"edismax\", \"q\",\"wi fi\", \"sow\",\"false\")\n        , \"/response/numFound==1\"\n        , \"/response/docs/[0]/id=='72'\"\n    );\n    assertJQ(req(\"qf\", \"text_sw title\", \"defType\",\"edismax\", \"q\",\"wi fi\", \"sow\",\"true\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"qf\",\"text_sw title\", \"defType\",\"edismax\", \"q\",\"wi fi\") // default sow=true\n        , \"/response/numFound==0\"\n    );\n\n    assertJQ(req(\"qf\",\"text_sw title\", \"q\",\"{!edismax sow=false}wi fi\")\n        , \"/response/numFound==1\"\n        , \"/response/docs/[0]/id=='72'\"\n    );\n    assertJQ(req(\"df\", \"text_sw title\", \"q\",\"{!edismax sow=true}wi fi\")\n        , \"/response/numFound==0\"\n    );\n    assertJQ(req(\"df\", \"text_sw title\", \"q\", \"{!edismax}wi fi\") // default sow=true\n        , \"/response/numFound==0\"\n    );\n\n    assertQ(req(\"qf\", \"name title\", \n                \"q\", \"barking curds of stigma\",\n                \"defType\", \"edismax\",\n                \"sow\", \"false\",\n                \"debugQuery\", \"true\"),\n        \"//str[@name='parsedquery'][contains(.,'DisjunctionMaxQuery((name:barking | title:barking))')]\",\n        \"//str[@name='parsedquery'][contains(.,'DisjunctionMaxQuery((name:curds | title:curds))')]\",\n        \"//str[@name='parsedquery'][contains(.,'DisjunctionMaxQuery((name:of | title:of))')]\",\n        \"//str[@name='parsedquery'][contains(.,'DisjunctionMaxQuery((name:stigma | title:stigma))')]\"\n    );\n    assertQ(req(\"qf\", \"name title\",\n        \"q\", \"barking curds of stigma\",\n        \"defType\", \"edismax\",\n        \"sow\", \"true\",\n        \"debugQuery\", \"true\"),\n        \"//str[@name='parsedquery'][contains(.,'DisjunctionMaxQuery((name:barking | title:barking))')]\",\n        \"//str[@name='parsedquery'][contains(.,'DisjunctionMaxQuery((name:curds | title:curds))')]\",\n        \"//str[@name='parsedquery'][contains(.,'DisjunctionMaxQuery((name:of | title:of))')]\",\n        \"//str[@name='parsedquery'][contains(.,'DisjunctionMaxQuery((name:stigma | title:stigma))')]\"\n    );\n    assertQ(req(\"qf\", \"name title\",\n        \"q\", \"barking curds of stigma\",\n        \"defType\", \"edismax\",\n        \"debugQuery\", \"true\"), // Default sow=true\n        \"//str[@name='parsedquery'][contains(.,'DisjunctionMaxQuery((name:barking | title:barking))')]\",\n        \"//str[@name='parsedquery'][contains(.,'DisjunctionMaxQuery((name:curds | title:curds))')]\",\n        \"//str[@name='parsedquery'][contains(.,'DisjunctionMaxQuery((name:of | title:of))')]\",\n        \"//str[@name='parsedquery'][contains(.,'DisjunctionMaxQuery((name:stigma | title:stigma))')]\"\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e9017cf144952056066919f1ebc7897ff9bd71b1":["c03778630c4604270d88c148afb8c7de35b51d3c","7a4260b228cfff6ad78ac88d519f0f7746529c3c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c03778630c4604270d88c148afb8c7de35b51d3c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e55782fb51a6e9789542818eb2161a3247f39ace":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7a4260b228cfff6ad78ac88d519f0f7746529c3c"],"7a4260b228cfff6ad78ac88d519f0f7746529c3c":["e55782fb51a6e9789542818eb2161a3247f39ace"]},"commit2Childs":{"e9017cf144952056066919f1ebc7897ff9bd71b1":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c03778630c4604270d88c148afb8c7de35b51d3c","e55782fb51a6e9789542818eb2161a3247f39ace"],"c03778630c4604270d88c148afb8c7de35b51d3c":["e9017cf144952056066919f1ebc7897ff9bd71b1"],"e55782fb51a6e9789542818eb2161a3247f39ace":["7a4260b228cfff6ad78ac88d519f0f7746529c3c"],"7a4260b228cfff6ad78ac88d519f0f7746529c3c":["e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}