{"path":"solr/core/src/java/org/apache/solr/search/facet/PercentileAgg.Acc#collect(int,int,IntFunction[SlotContext]).mjava","commits":[{"id":"2c705a0d590cf911e7c942df49563ca2ea176e22","date":1526916174,"type":1,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/PercentileAgg.Acc#collect(int,int,IntFunction[SlotContext]).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/PercentileAgg.Acc#collect(int,int).mjava","sourceNew":"    public void collect(int doc, int slotNum, IntFunction<SlotContext> slotContext) throws IOException {\n      if (!values.exists(doc)) return;\n      double val = values.doubleVal(doc);\n\n      AVLTreeDigest digest = digests[slotNum];\n      if (digest == null) {\n        digests[slotNum] = digest = new AVLTreeDigest(100);   // TODO: make compression configurable\n      }\n\n      digest.add(val);\n    }\n\n","sourceOld":"    public void collect(int doc, int slotNum) throws IOException {\n      if (!values.exists(doc)) return;\n      double val = values.doubleVal(doc);\n\n      AVLTreeDigest digest = digests[slotNum];\n      if (digest == null) {\n        digests[slotNum] = digest = new AVLTreeDigest(100);   // TODO: make compression configurable\n      }\n\n      digest.add(val);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"2c705a0d590cf911e7c942df49563ca2ea176e22":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2c705a0d590cf911e7c942df49563ca2ea176e22"]},"commit2Childs":{"2c705a0d590cf911e7c942df49563ca2ea176e22":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["2c705a0d590cf911e7c942df49563ca2ea176e22"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}