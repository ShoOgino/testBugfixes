{"path":"lucene/core/src/java/org/apache/lucene/search/FieldComparator.TermOrdValComparator#compare(int,int).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/FieldComparator.TermOrdValComparator#compare(int,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/FieldComparator.TermOrdValComparator#compare(int,int).mjava","sourceNew":"    @Override\n    public int compare(int slot1, int slot2) {\n      if (readerGen[slot1] == readerGen[slot2]) {\n        return ords[slot1] - ords[slot2];\n      }\n\n      final BytesRef val1 = values[slot1];\n      final BytesRef val2 = values[slot2];\n      if (val1 == null) {\n        if (val2 == null) {\n          return 0;\n        }\n        return -1;\n      } else if (val2 == null) {\n        return 1;\n      }\n      return val1.compareTo(val2);\n    }\n\n","sourceOld":"    @Override\n    public int compare(int slot1, int slot2) {\n      if (readerGen[slot1] == readerGen[slot2]) {\n        return ords[slot1] - ords[slot2];\n      }\n\n      final BytesRef val1 = values[slot1];\n      final BytesRef val2 = values[slot2];\n      if (val1 == null) {\n        if (val2 == null) {\n          return 0;\n        }\n        return -1;\n      } else if (val2 == null) {\n        return 1;\n      }\n      return val1.compareTo(val2);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7615b855702e008d91a95a2578bf05d27372f599","date":1389802891,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/FieldComparator.TermOrdValComparator#compare(int,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/FieldComparator.TermOrdValComparator#compare(int,int).mjava","sourceNew":"    @Override\n    public int compare(int slot1, int slot2) {\n      if (readerGen[slot1] == readerGen[slot2]) {\n        return ords[slot1] - ords[slot2];\n      }\n\n      final BytesRef val1 = values[slot1];\n      final BytesRef val2 = values[slot2];\n      if (val1 == null) {\n        if (val2 == null) {\n          return 0;\n        }\n        return missingSortCmp;\n      } else if (val2 == null) {\n        return -missingSortCmp;\n      }\n      return val1.compareTo(val2);\n    }\n\n","sourceOld":"    @Override\n    public int compare(int slot1, int slot2) {\n      if (readerGen[slot1] == readerGen[slot2]) {\n        return ords[slot1] - ords[slot2];\n      }\n\n      final BytesRef val1 = values[slot1];\n      final BytesRef val2 = values[slot2];\n      if (val1 == null) {\n        if (val2 == null) {\n          return 0;\n        }\n        return -1;\n      } else if (val2 == null) {\n        return 1;\n      }\n      return val1.compareTo(val2);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"27ab7b234eab0cbc020836989b96ed430e1065bb","date":1389894025,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/FieldComparator.TermOrdValComparator#compare(int,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/FieldComparator.TermOrdValComparator#compare(int,int).mjava","sourceNew":"    @Override\n    public int compare(int slot1, int slot2) {\n      if (readerGen[slot1] == readerGen[slot2]) {\n        return ords[slot1] - ords[slot2];\n      }\n\n      final BytesRef val1 = values[slot1];\n      final BytesRef val2 = values[slot2];\n      if (val1 == null) {\n        if (val2 == null) {\n          return 0;\n        }\n        return missingSortCmp;\n      } else if (val2 == null) {\n        return -missingSortCmp;\n      }\n      return val1.compareTo(val2);\n    }\n\n","sourceOld":"    @Override\n    public int compare(int slot1, int slot2) {\n      if (readerGen[slot1] == readerGen[slot2]) {\n        return ords[slot1] - ords[slot2];\n      }\n\n      final BytesRef val1 = values[slot1];\n      final BytesRef val2 = values[slot2];\n      if (val1 == null) {\n        if (val2 == null) {\n          return 0;\n        }\n        return -1;\n      } else if (val2 == null) {\n        return 1;\n      }\n      return val1.compareTo(val2);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"27ab7b234eab0cbc020836989b96ed430e1065bb":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","7615b855702e008d91a95a2578bf05d27372f599"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7615b855702e008d91a95a2578bf05d27372f599":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["27ab7b234eab0cbc020836989b96ed430e1065bb"]},"commit2Childs":{"27ab7b234eab0cbc020836989b96ed430e1065bb":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["27ab7b234eab0cbc020836989b96ed430e1065bb","7615b855702e008d91a95a2578bf05d27372f599"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"7615b855702e008d91a95a2578bf05d27372f599":["27ab7b234eab0cbc020836989b96ed430e1065bb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}