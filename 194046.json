{"path":"src/java/org/apache/lucene/index/SegmentInfo#equals(Object).mjava","commits":[{"id":"b1405362241b561f5590ff4a87d5d6e173bcd9cf","date":1190107634,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentInfo#equals(Object).mjava","pathOld":"/dev/null","sourceNew":"  /** We consider another SegmentInfo instance equal if it\n   *  has the same dir and same name. */\n  public boolean equals(Object obj) {\n    SegmentInfo other;\n    try {\n      other = (SegmentInfo) obj;\n    } catch (ClassCastException cce) {\n      return false;\n    }\n    return other.dir == dir && other.name.equals(name);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8a9e385641d717e641408d8fbbc62be8fc766357","date":1256746606,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentInfo#equals(Object).mjava","pathOld":"src/java/org/apache/lucene/index/SegmentInfo#equals(Object).mjava","sourceNew":"  /** We consider another SegmentInfo instance equal if it\n   *  has the same dir and same name. */\n  @Override\n  public boolean equals(Object obj) {\n    SegmentInfo other;\n    try {\n      other = (SegmentInfo) obj;\n    } catch (ClassCastException cce) {\n      return false;\n    }\n    return other.dir == dir && other.name.equals(name);\n  }\n\n","sourceOld":"  /** We consider another SegmentInfo instance equal if it\n   *  has the same dir and same name. */\n  public boolean equals(Object obj) {\n    SegmentInfo other;\n    try {\n      other = (SegmentInfo) obj;\n    } catch (ClassCastException cce) {\n      return false;\n    }\n    return other.dir == dir && other.name.equals(name);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"41678bef429da05938d7d484f4a2469bddb01053","date":1257284308,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentInfo#equals(Object).mjava","pathOld":"src/java/org/apache/lucene/index/SegmentInfo#equals(Object).mjava","sourceNew":"  /** We consider another SegmentInfo instance equal if it\n   *  has the same dir and same name. */\n  @Override\n  public boolean equals(Object obj) {\n    if (this == obj) return true;\n    if (obj instanceof SegmentInfo) {\n      final SegmentInfo other = (SegmentInfo) obj;\n      return other.dir == dir && other.name.equals(name);\n    } else {\n      return false;\n    }\n  }\n\n","sourceOld":"  /** We consider another SegmentInfo instance equal if it\n   *  has the same dir and same name. */\n  @Override\n  public boolean equals(Object obj) {\n    SegmentInfo other;\n    try {\n      other = (SegmentInfo) obj;\n    } catch (ClassCastException cce) {\n      return false;\n    }\n    return other.dir == dir && other.name.equals(name);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentInfo#equals(Object).mjava","pathOld":"src/java/org/apache/lucene/index/SegmentInfo#equals(Object).mjava","sourceNew":"  /** We consider another SegmentInfo instance equal if it\n   *  has the same dir and same name. */\n  @Override\n  public boolean equals(Object obj) {\n    if (this == obj) return true;\n    if (obj instanceof SegmentInfo) {\n      final SegmentInfo other = (SegmentInfo) obj;\n      return other.dir == dir && other.name.equals(name);\n    } else {\n      return false;\n    }\n  }\n\n","sourceOld":"  /** We consider another SegmentInfo instance equal if it\n   *  has the same dir and same name. */\n  @Override\n  public boolean equals(Object obj) {\n    if (this == obj) return true;\n    if (obj instanceof SegmentInfo) {\n      final SegmentInfo other = (SegmentInfo) obj;\n      return other.dir == dir && other.name.equals(name);\n    } else {\n      return false;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b1405362241b561f5590ff4a87d5d6e173bcd9cf":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"41678bef429da05938d7d484f4a2469bddb01053":["8a9e385641d717e641408d8fbbc62be8fc766357"],"8a9e385641d717e641408d8fbbc62be8fc766357":["b1405362241b561f5590ff4a87d5d6e173bcd9cf"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["41678bef429da05938d7d484f4a2469bddb01053"]},"commit2Childs":{"b1405362241b561f5590ff4a87d5d6e173bcd9cf":["8a9e385641d717e641408d8fbbc62be8fc766357"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b1405362241b561f5590ff4a87d5d6e173bcd9cf"],"41678bef429da05938d7d484f4a2469bddb01053":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"8a9e385641d717e641408d8fbbc62be8fc766357":["41678bef429da05938d7d484f4a2469bddb01053"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}