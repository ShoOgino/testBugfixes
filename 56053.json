{"path":"lucene/contrib/misc/src/test/org/apache/lucene/index/TestNRTManager#cloneDoc(Document).mjava","commits":[{"id":"39d69912999d6e0acfb6eb6be558fcc165eee0b2","date":1308066875,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/contrib/misc/src/test/org/apache/lucene/index/TestNRTManager#cloneDoc(Document).mjava","pathOld":"/dev/null","sourceNew":"  // TODO: is there a pre-existing way to do this!!!\n  private Document cloneDoc(Document doc1) {\n    final Document doc2 = new Document();\n    for(Fieldable f : doc1.getFields()) {\n      Field field1 = (Field) f;\n      \n      Field field2 = new Field(field1.name(),\n                               field1.stringValue(),\n                               field1.isStored() ? Field.Store.YES : Field.Store.NO,\n                               field1.isIndexed() ? (field1.isTokenized() ? Field.Index.ANALYZED : Field.Index.NOT_ANALYZED) : Field.Index.NO);\n      if (field1.getOmitNorms()) {\n        field2.setOmitNorms(true);\n      }\n      if (field1.getOmitTermFreqAndPositions()) {\n        field2.setOmitTermFreqAndPositions(true);\n      }\n      doc2.add(field2);\n    }\n\n    return doc2;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9ed208afa1e7aa98899ddb1dedfddedddf898253","date":1308079587,"type":0,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/contrib/misc/src/test/org/apache/lucene/index/TestNRTManager#cloneDoc(Document).mjava","pathOld":"/dev/null","sourceNew":"  // TODO: is there a pre-existing way to do this!!!\n  private Document cloneDoc(Document doc1) {\n    final Document doc2 = new Document();\n    for(Fieldable f : doc1.getFields()) {\n      Field field1 = (Field) f;\n      \n      Field field2 = new Field(field1.name(),\n                               field1.stringValue(),\n                               field1.isStored() ? Field.Store.YES : Field.Store.NO,\n                               field1.isIndexed() ? (field1.isTokenized() ? Field.Index.ANALYZED : Field.Index.NOT_ANALYZED) : Field.Index.NO);\n      if (field1.getOmitNorms()) {\n        field2.setOmitNorms(true);\n      }\n      if (field1.getOmitTermFreqAndPositions()) {\n        field2.setOmitTermFreqAndPositions(true);\n      }\n      doc2.add(field2);\n    }\n\n    return doc2;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2afd23a6f1242190c3409d8d81d5c5912d607fc9","date":1310477482,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/misc/src/test/org/apache/lucene/index/TestNRTManager#cloneDoc(Document).mjava","pathOld":"lucene/contrib/misc/src/test/org/apache/lucene/index/TestNRTManager#cloneDoc(Document).mjava","sourceNew":"  // TODO: is there a pre-existing way to do this!!!\n  private Document cloneDoc(Document doc1) {\n    final Document doc2 = new Document();\n    for(Fieldable f : doc1.getFields()) {\n      Field field1 = (Field) f;\n      \n      Field field2 = new Field(field1.name(),\n                               field1.stringValue(),\n                               field1.isStored() ? Field.Store.YES : Field.Store.NO,\n                               field1.isIndexed() ? (field1.isTokenized() ? Field.Index.ANALYZED : Field.Index.NOT_ANALYZED) : Field.Index.NO);\n      if (field1.getOmitNorms()) {\n        field2.setOmitNorms(true);\n      }\n      field2.setIndexOptions(field1.getIndexOptions());\n      doc2.add(field2);\n    }\n\n    return doc2;\n  }\n\n","sourceOld":"  // TODO: is there a pre-existing way to do this!!!\n  private Document cloneDoc(Document doc1) {\n    final Document doc2 = new Document();\n    for(Fieldable f : doc1.getFields()) {\n      Field field1 = (Field) f;\n      \n      Field field2 = new Field(field1.name(),\n                               field1.stringValue(),\n                               field1.isStored() ? Field.Store.YES : Field.Store.NO,\n                               field1.isIndexed() ? (field1.isTokenized() ? Field.Index.ANALYZED : Field.Index.NOT_ANALYZED) : Field.Index.NO);\n      if (field1.getOmitNorms()) {\n        field2.setOmitNorms(true);\n      }\n      if (field1.getOmitTermFreqAndPositions()) {\n        field2.setOmitTermFreqAndPositions(true);\n      }\n      doc2.add(field2);\n    }\n\n    return doc2;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1509f151d7692d84fae414b2b799ac06ba60fcb4","date":1314451621,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/contrib/misc/src/test/org/apache/lucene/index/TestNRTManager#cloneDoc(Document).mjava","pathOld":"lucene/contrib/misc/src/test/org/apache/lucene/index/TestNRTManager#cloneDoc(Document).mjava","sourceNew":"  // TODO: is there a pre-existing way to do this!!!\n  private Document cloneDoc(Document doc1) {\n    final Document doc2 = new Document();\n    for(IndexableField f : doc1) {\n      Field field1 = (Field) f;\n      \n      Field field2 = new Field(field1.name(),\n                              ((Field) f).getFieldType(),\n                               field1.stringValue());\n      doc2.add(field2);\n    }\n\n    return doc2;\n  }\n\n","sourceOld":"  // TODO: is there a pre-existing way to do this!!!\n  private Document cloneDoc(Document doc1) {\n    final Document doc2 = new Document();\n    for(Fieldable f : doc1.getFields()) {\n      Field field1 = (Field) f;\n      \n      Field field2 = new Field(field1.name(),\n                               field1.stringValue(),\n                               field1.isStored() ? Field.Store.YES : Field.Store.NO,\n                               field1.isIndexed() ? (field1.isTokenized() ? Field.Index.ANALYZED : Field.Index.NOT_ANALYZED) : Field.Index.NO);\n      if (field1.getOmitNorms()) {\n        field2.setOmitNorms(true);\n      }\n      field2.setIndexOptions(field1.getIndexOptions());\n      doc2.add(field2);\n    }\n\n    return doc2;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6eb141f80638abdb6ffaa5149877f36ea39b6ad5","date":1315714072,"type":3,"author":"Christopher John Male","isMerge":false,"pathNew":"lucene/contrib/misc/src/test/org/apache/lucene/index/TestNRTManager#cloneDoc(Document).mjava","pathOld":"lucene/contrib/misc/src/test/org/apache/lucene/index/TestNRTManager#cloneDoc(Document).mjava","sourceNew":"  // TODO: is there a pre-existing way to do this!!!\n  private Document cloneDoc(Document doc1) {\n    final Document doc2 = new Document();\n    for(IndexableField f : doc1) {\n      Field field1 = (Field) f;\n      \n      Field field2 = new Field(field1.name(),\n                              ((Field) f).fieldType(),\n                               field1.stringValue());\n      doc2.add(field2);\n    }\n\n    return doc2;\n  }\n\n","sourceOld":"  // TODO: is there a pre-existing way to do this!!!\n  private Document cloneDoc(Document doc1) {\n    final Document doc2 = new Document();\n    for(IndexableField f : doc1) {\n      Field field1 = (Field) f;\n      \n      Field field2 = new Field(field1.name(),\n                              ((Field) f).getFieldType(),\n                               field1.stringValue());\n      doc2.add(field2);\n    }\n\n    return doc2;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"edcc2c2cbab6bf89ea584169ffb3ca83a31827f9","date":1316963893,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/contrib/misc/src/test/org/apache/lucene/index/TestNRTManager#cloneDoc(Document).mjava","sourceNew":null,"sourceOld":"  // TODO: is there a pre-existing way to do this!!!\n  private Document cloneDoc(Document doc1) {\n    final Document doc2 = new Document();\n    for(IndexableField f : doc1) {\n      Field field1 = (Field) f;\n      \n      Field field2 = new Field(field1.name(),\n                              ((Field) f).fieldType(),\n                               field1.stringValue());\n      doc2.add(field2);\n    }\n\n    return doc2;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"2afd23a6f1242190c3409d8d81d5c5912d607fc9":["39d69912999d6e0acfb6eb6be558fcc165eee0b2"],"6eb141f80638abdb6ffaa5149877f36ea39b6ad5":["1509f151d7692d84fae414b2b799ac06ba60fcb4"],"39d69912999d6e0acfb6eb6be558fcc165eee0b2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"edcc2c2cbab6bf89ea584169ffb3ca83a31827f9":["6eb141f80638abdb6ffaa5149877f36ea39b6ad5"],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["2afd23a6f1242190c3409d8d81d5c5912d607fc9"],"9ed208afa1e7aa98899ddb1dedfddedddf898253":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","39d69912999d6e0acfb6eb6be558fcc165eee0b2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["edcc2c2cbab6bf89ea584169ffb3ca83a31827f9"]},"commit2Childs":{"2afd23a6f1242190c3409d8d81d5c5912d607fc9":["1509f151d7692d84fae414b2b799ac06ba60fcb4"],"39d69912999d6e0acfb6eb6be558fcc165eee0b2":["2afd23a6f1242190c3409d8d81d5c5912d607fc9","9ed208afa1e7aa98899ddb1dedfddedddf898253"],"6eb141f80638abdb6ffaa5149877f36ea39b6ad5":["edcc2c2cbab6bf89ea584169ffb3ca83a31827f9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["39d69912999d6e0acfb6eb6be558fcc165eee0b2","9ed208afa1e7aa98899ddb1dedfddedddf898253"],"edcc2c2cbab6bf89ea584169ffb3ca83a31827f9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["6eb141f80638abdb6ffaa5149877f36ea39b6ad5"],"9ed208afa1e7aa98899ddb1dedfddedddf898253":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["9ed208afa1e7aa98899ddb1dedfddedddf898253","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}