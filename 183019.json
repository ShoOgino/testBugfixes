{"path":"lucene/src/java/org/apache/lucene/codecs/lucene40/Lucene40NormsReader.Norm#bytes().mjava","commits":[{"id":"a0ae5e3ed1232483b7b8a014f175a5fe43595982","date":1324062192,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/codecs/lucene40/Lucene40NormsReader.Norm#bytes().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/lucene40/Lucene40NormsReader.Norm#bytes().mjava","sourceNew":"    synchronized byte[] bytes() throws IOException {\n      if (bytes == null) {\n        bytes = new byte[maxdoc];\n        // some norms share fds\n        synchronized(file) {\n          file.seek(offset);\n          file.readBytes(bytes, 0, bytes.length, false);\n        }\n        // we are done with this file\n        if (file != singleNormStream) {\n          openFiles.remove(file);\n          file.close();\n          file = null;\n        }\n      }\n      return bytes;\n    }\n\n","sourceOld":"    synchronized byte[] bytes() throws IOException {\n      if (bytes == null) {\n        bytes = new byte[maxdoc];\n        // some norms share fds\n        synchronized(file) {\n          file.seek(offset);\n          file.readBytes(bytes, 0, bytes.length, false);\n        }\n        // we are done with this file\n        if (file != singleNormStream) {\n          openFiles.remove(file);\n          file.close();\n          file = null;\n        }\n      }\n      return bytes;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f6e3376a314fcc2b31bc46d399c2ff23552b78d6","date":1325780477,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/codecs/lucene3x/Lucene3xNormsProducer.NormsDocValues#bytes().mjava","pathOld":"lucene/src/java/org/apache/lucene/codecs/lucene40/Lucene40NormsReader.Norm#bytes().mjava","sourceNew":"    byte[] bytes() throws IOException {\n        byte[] bytes = new byte[maxdoc];\n        // some norms share fds\n        synchronized(file) {\n          file.seek(offset);\n          file.readBytes(bytes, 0, bytes.length, false);\n        }\n        // we are done with this file\n        if (file != singleNormStream) {\n          openFiles.remove(file);\n          file.close();\n        }\n      return bytes;\n    }\n\n","sourceOld":"    synchronized byte[] bytes() throws IOException {\n      if (bytes == null) {\n        bytes = new byte[maxdoc];\n        // some norms share fds\n        synchronized(file) {\n          file.seek(offset);\n          file.readBytes(bytes, 0, bytes.length, false);\n        }\n        // we are done with this file\n        if (file != singleNormStream) {\n          openFiles.remove(file);\n          file.close();\n          file = null;\n        }\n      }\n      return bytes;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f6e3376a314fcc2b31bc46d399c2ff23552b78d6":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f6e3376a314fcc2b31bc46d399c2ff23552b78d6"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"],"f6e3376a314fcc2b31bc46d399c2ff23552b78d6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["f6e3376a314fcc2b31bc46d399c2ff23552b78d6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}