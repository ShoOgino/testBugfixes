{"path":"lucene/facet/src/test/org/apache/lucene/facet/TestDrillSideways#testScorer().mjava","commits":[{"id":"183692f1ef55e7e58a550d7910b67d157ef6906a","date":1425045767,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/TestDrillSideways#testScorer().mjava","pathOld":"/dev/null","sourceNew":"  public void testScorer() throws Exception {\n    // LUCENE-6001 some scorers, eg ReqExlScorer, can hit NPE if cost is called after nextDoc\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    FacetsConfig config = new FacetsConfig();\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    Document doc = new Document();\n    doc.add(newTextField(\"field\", \"foo bar\", Field.Store.NO));\n    doc.add(new FacetField(\"Author\", \"Bob\"));\n    doc.add(new FacetField(\"dim\", \"a\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    DrillSideways ds = new DrillSideways(searcher, config, taxoReader);\n\n    BooleanQuery bq = new BooleanQuery(true);\n    bq.add(new TermQuery(new Term(\"field\", \"foo\")), BooleanClause.Occur.MUST);\n    bq.add(new TermQuery(new Term(\"field\", \"bar\")), BooleanClause.Occur.MUST_NOT);\n    DrillDownQuery ddq = new DrillDownQuery(config, bq);\n    ddq.add(\"field\", \"foo\");\n    ddq.add(\"author\", bq);\n    ddq.add(\"dim\", bq);\n    DrillSidewaysResult r = ds.search(null, ddq, 10);\n    assertEquals(0, r.hits.totalHits);\n\n    writer.close();\n    IOUtils.close(searcher.getIndexReader(), taxoReader, taxoWriter, dir, taxoDir);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":0,"author":"Ryan Ernst","isMerge":true,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/TestDrillSideways#testScorer().mjava","pathOld":"/dev/null","sourceNew":"  public void testScorer() throws Exception {\n    // LUCENE-6001 some scorers, eg ReqExlScorer, can hit NPE if cost is called after nextDoc\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    FacetsConfig config = new FacetsConfig();\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    Document doc = new Document();\n    doc.add(newTextField(\"field\", \"foo bar\", Field.Store.NO));\n    doc.add(new FacetField(\"Author\", \"Bob\"));\n    doc.add(new FacetField(\"dim\", \"a\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    DrillSideways ds = new DrillSideways(searcher, config, taxoReader);\n\n    BooleanQuery bq = new BooleanQuery(true);\n    bq.add(new TermQuery(new Term(\"field\", \"foo\")), BooleanClause.Occur.MUST);\n    bq.add(new TermQuery(new Term(\"field\", \"bar\")), BooleanClause.Occur.MUST_NOT);\n    DrillDownQuery ddq = new DrillDownQuery(config, bq);\n    ddq.add(\"field\", \"foo\");\n    ddq.add(\"author\", bq);\n    ddq.add(\"dim\", bq);\n    DrillSidewaysResult r = ds.search(null, ddq, 10);\n    assertEquals(0, r.hits.totalHits);\n\n    writer.close();\n    IOUtils.close(searcher.getIndexReader(), taxoReader, taxoWriter, dir, taxoDir);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f68d01cf19df971dcdcb05e30247f4ad7ec9747","date":1434611645,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/TestDrillSideways#testScorer().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/TestDrillSideways#testScorer().mjava","sourceNew":"  public void testScorer() throws Exception {\n    // LUCENE-6001 some scorers, eg ReqExlScorer, can hit NPE if cost is called after nextDoc\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    FacetsConfig config = new FacetsConfig();\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    Document doc = new Document();\n    doc.add(newTextField(\"field\", \"foo bar\", Field.Store.NO));\n    doc.add(new FacetField(\"Author\", \"Bob\"));\n    doc.add(new FacetField(\"dim\", \"a\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    DrillSideways ds = new DrillSideways(searcher, config, taxoReader);\n\n    BooleanQuery.Builder bq = new BooleanQuery.Builder();\n    bq.setDisableCoord(true);\n    bq.add(new TermQuery(new Term(\"field\", \"foo\")), BooleanClause.Occur.MUST);\n    bq.add(new TermQuery(new Term(\"field\", \"bar\")), BooleanClause.Occur.MUST_NOT);\n    DrillDownQuery ddq = new DrillDownQuery(config, bq.build());\n    ddq.add(\"field\", \"foo\");\n    ddq.add(\"author\", bq.build());\n    ddq.add(\"dim\", bq.build());\n    DrillSidewaysResult r = ds.search(null, ddq, 10);\n    assertEquals(0, r.hits.totalHits);\n\n    writer.close();\n    IOUtils.close(searcher.getIndexReader(), taxoReader, taxoWriter, dir, taxoDir);\n  }\n\n","sourceOld":"  public void testScorer() throws Exception {\n    // LUCENE-6001 some scorers, eg ReqExlScorer, can hit NPE if cost is called after nextDoc\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    FacetsConfig config = new FacetsConfig();\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    Document doc = new Document();\n    doc.add(newTextField(\"field\", \"foo bar\", Field.Store.NO));\n    doc.add(new FacetField(\"Author\", \"Bob\"));\n    doc.add(new FacetField(\"dim\", \"a\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    DrillSideways ds = new DrillSideways(searcher, config, taxoReader);\n\n    BooleanQuery bq = new BooleanQuery(true);\n    bq.add(new TermQuery(new Term(\"field\", \"foo\")), BooleanClause.Occur.MUST);\n    bq.add(new TermQuery(new Term(\"field\", \"bar\")), BooleanClause.Occur.MUST_NOT);\n    DrillDownQuery ddq = new DrillDownQuery(config, bq);\n    ddq.add(\"field\", \"foo\");\n    ddq.add(\"author\", bq);\n    ddq.add(\"dim\", bq);\n    DrillSidewaysResult r = ds.search(null, ddq, 10);\n    assertEquals(0, r.hits.totalHits);\n\n    writer.close();\n    IOUtils.close(searcher.getIndexReader(), taxoReader, taxoWriter, dir, taxoDir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c8a0e442f7b61f811680273b25da95994a724466","date":1467878549,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/TestDrillSideways#testScorer().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/TestDrillSideways#testScorer().mjava","sourceNew":"  public void testScorer() throws Exception {\n    // LUCENE-6001 some scorers, eg ReqExlScorer, can hit NPE if cost is called after nextDoc\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    FacetsConfig config = new FacetsConfig();\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    Document doc = new Document();\n    doc.add(newTextField(\"field\", \"foo bar\", Field.Store.NO));\n    doc.add(new FacetField(\"Author\", \"Bob\"));\n    doc.add(new FacetField(\"dim\", \"a\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    DrillSideways ds = new DrillSideways(searcher, config, taxoReader);\n\n    BooleanQuery.Builder bq = new BooleanQuery.Builder();\n    bq.add(new TermQuery(new Term(\"field\", \"foo\")), BooleanClause.Occur.MUST);\n    bq.add(new TermQuery(new Term(\"field\", \"bar\")), BooleanClause.Occur.MUST_NOT);\n    DrillDownQuery ddq = new DrillDownQuery(config, bq.build());\n    ddq.add(\"field\", \"foo\");\n    ddq.add(\"author\", bq.build());\n    ddq.add(\"dim\", bq.build());\n    DrillSidewaysResult r = ds.search(null, ddq, 10);\n    assertEquals(0, r.hits.totalHits);\n\n    writer.close();\n    IOUtils.close(searcher.getIndexReader(), taxoReader, taxoWriter, dir, taxoDir);\n  }\n\n","sourceOld":"  public void testScorer() throws Exception {\n    // LUCENE-6001 some scorers, eg ReqExlScorer, can hit NPE if cost is called after nextDoc\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    FacetsConfig config = new FacetsConfig();\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    Document doc = new Document();\n    doc.add(newTextField(\"field\", \"foo bar\", Field.Store.NO));\n    doc.add(new FacetField(\"Author\", \"Bob\"));\n    doc.add(new FacetField(\"dim\", \"a\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    DrillSideways ds = new DrillSideways(searcher, config, taxoReader);\n\n    BooleanQuery.Builder bq = new BooleanQuery.Builder();\n    bq.setDisableCoord(true);\n    bq.add(new TermQuery(new Term(\"field\", \"foo\")), BooleanClause.Occur.MUST);\n    bq.add(new TermQuery(new Term(\"field\", \"bar\")), BooleanClause.Occur.MUST_NOT);\n    DrillDownQuery ddq = new DrillDownQuery(config, bq.build());\n    ddq.add(\"field\", \"foo\");\n    ddq.add(\"author\", bq.build());\n    ddq.add(\"dim\", bq.build());\n    DrillSidewaysResult r = ds.search(null, ddq, 10);\n    assertEquals(0, r.hits.totalHits);\n\n    writer.close();\n    IOUtils.close(searcher.getIndexReader(), taxoReader, taxoWriter, dir, taxoDir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/TestDrillSideways#testScorer().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/TestDrillSideways#testScorer().mjava","sourceNew":"  public void testScorer() throws Exception {\n    // LUCENE-6001 some scorers, eg ReqExlScorer, can hit NPE if cost is called after nextDoc\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    FacetsConfig config = new FacetsConfig();\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    Document doc = new Document();\n    doc.add(newTextField(\"field\", \"foo bar\", Field.Store.NO));\n    doc.add(new FacetField(\"Author\", \"Bob\"));\n    doc.add(new FacetField(\"dim\", \"a\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    DrillSideways ds = new DrillSideways(searcher, config, taxoReader);\n\n    BooleanQuery.Builder bq = new BooleanQuery.Builder();\n    bq.add(new TermQuery(new Term(\"field\", \"foo\")), BooleanClause.Occur.MUST);\n    bq.add(new TermQuery(new Term(\"field\", \"bar\")), BooleanClause.Occur.MUST_NOT);\n    DrillDownQuery ddq = new DrillDownQuery(config, bq.build());\n    ddq.add(\"field\", \"foo\");\n    ddq.add(\"author\", bq.build());\n    ddq.add(\"dim\", bq.build());\n    DrillSidewaysResult r = ds.search(null, ddq, 10);\n    assertEquals(0, r.hits.totalHits);\n\n    writer.close();\n    IOUtils.close(searcher.getIndexReader(), taxoReader, taxoWriter, dir, taxoDir);\n  }\n\n","sourceOld":"  public void testScorer() throws Exception {\n    // LUCENE-6001 some scorers, eg ReqExlScorer, can hit NPE if cost is called after nextDoc\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    FacetsConfig config = new FacetsConfig();\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    Document doc = new Document();\n    doc.add(newTextField(\"field\", \"foo bar\", Field.Store.NO));\n    doc.add(new FacetField(\"Author\", \"Bob\"));\n    doc.add(new FacetField(\"dim\", \"a\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    DrillSideways ds = new DrillSideways(searcher, config, taxoReader);\n\n    BooleanQuery.Builder bq = new BooleanQuery.Builder();\n    bq.setDisableCoord(true);\n    bq.add(new TermQuery(new Term(\"field\", \"foo\")), BooleanClause.Occur.MUST);\n    bq.add(new TermQuery(new Term(\"field\", \"bar\")), BooleanClause.Occur.MUST_NOT);\n    DrillDownQuery ddq = new DrillDownQuery(config, bq.build());\n    ddq.add(\"field\", \"foo\");\n    ddq.add(\"author\", bq.build());\n    ddq.add(\"dim\", bq.build());\n    DrillSidewaysResult r = ds.search(null, ddq, 10);\n    assertEquals(0, r.hits.totalHits);\n\n    writer.close();\n    IOUtils.close(searcher.getIndexReader(), taxoReader, taxoWriter, dir, taxoDir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"91eb857a56b1a3a6659c666f88e2398347fc1c5a","date":1483442809,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/TestDrillSideways#testScorer().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/TestDrillSideways#testScorer().mjava","sourceNew":"  public void testScorer() throws Exception {\n    // LUCENE-6001 some scorers, eg ReqExlScorer, can hit NPE if cost is called after nextDoc\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    FacetsConfig config = new FacetsConfig();\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    Document doc = new Document();\n    doc.add(newTextField(\"field\", \"foo bar\", Field.Store.NO));\n    doc.add(new FacetField(\"Author\", \"Bob\"));\n    doc.add(new FacetField(\"dim\", \"a\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    DrillSideways ds = getNewDrillSideways(searcher, config, taxoReader);\n\n    BooleanQuery.Builder bq = new BooleanQuery.Builder();\n    bq.add(new TermQuery(new Term(\"field\", \"foo\")), BooleanClause.Occur.MUST);\n    bq.add(new TermQuery(new Term(\"field\", \"bar\")), BooleanClause.Occur.MUST_NOT);\n    DrillDownQuery ddq = new DrillDownQuery(config, bq.build());\n    ddq.add(\"field\", \"foo\");\n    ddq.add(\"author\", bq.build());\n    ddq.add(\"dim\", bq.build());\n    DrillSidewaysResult r = ds.search(null, ddq, 10);\n    assertEquals(0, r.hits.totalHits);\n\n    writer.close();\n    IOUtils.close(searcher.getIndexReader(), taxoReader, taxoWriter, dir, taxoDir);\n  }\n\n","sourceOld":"  public void testScorer() throws Exception {\n    // LUCENE-6001 some scorers, eg ReqExlScorer, can hit NPE if cost is called after nextDoc\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    FacetsConfig config = new FacetsConfig();\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    Document doc = new Document();\n    doc.add(newTextField(\"field\", \"foo bar\", Field.Store.NO));\n    doc.add(new FacetField(\"Author\", \"Bob\"));\n    doc.add(new FacetField(\"dim\", \"a\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    DrillSideways ds = new DrillSideways(searcher, config, taxoReader);\n\n    BooleanQuery.Builder bq = new BooleanQuery.Builder();\n    bq.add(new TermQuery(new Term(\"field\", \"foo\")), BooleanClause.Occur.MUST);\n    bq.add(new TermQuery(new Term(\"field\", \"bar\")), BooleanClause.Occur.MUST_NOT);\n    DrillDownQuery ddq = new DrillDownQuery(config, bq.build());\n    ddq.add(\"field\", \"foo\");\n    ddq.add(\"author\", bq.build());\n    ddq.add(\"dim\", bq.build());\n    DrillSidewaysResult r = ds.search(null, ddq, 10);\n    assertEquals(0, r.hits.totalHits);\n\n    writer.close();\n    IOUtils.close(searcher.getIndexReader(), taxoReader, taxoWriter, dir, taxoDir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f03e4bed5023ec3ef93a771b8888cae991cf448d","date":1483469262,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/TestDrillSideways#testScorer().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/TestDrillSideways#testScorer().mjava","sourceNew":"  public void testScorer() throws Exception {\n    // LUCENE-6001 some scorers, eg ReqExlScorer, can hit NPE if cost is called after nextDoc\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    FacetsConfig config = new FacetsConfig();\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    Document doc = new Document();\n    doc.add(newTextField(\"field\", \"foo bar\", Field.Store.NO));\n    doc.add(new FacetField(\"Author\", \"Bob\"));\n    doc.add(new FacetField(\"dim\", \"a\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    DrillSideways ds = getNewDrillSideways(searcher, config, taxoReader);\n\n    BooleanQuery.Builder bq = new BooleanQuery.Builder();\n    bq.add(new TermQuery(new Term(\"field\", \"foo\")), BooleanClause.Occur.MUST);\n    bq.add(new TermQuery(new Term(\"field\", \"bar\")), BooleanClause.Occur.MUST_NOT);\n    DrillDownQuery ddq = new DrillDownQuery(config, bq.build());\n    ddq.add(\"field\", \"foo\");\n    ddq.add(\"author\", bq.build());\n    ddq.add(\"dim\", bq.build());\n    DrillSidewaysResult r = ds.search(null, ddq, 10);\n    assertEquals(0, r.hits.totalHits);\n\n    writer.close();\n    IOUtils.close(searcher.getIndexReader(), taxoReader, taxoWriter, dir, taxoDir);\n  }\n\n","sourceOld":"  public void testScorer() throws Exception {\n    // LUCENE-6001 some scorers, eg ReqExlScorer, can hit NPE if cost is called after nextDoc\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    FacetsConfig config = new FacetsConfig();\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    Document doc = new Document();\n    doc.add(newTextField(\"field\", \"foo bar\", Field.Store.NO));\n    doc.add(new FacetField(\"Author\", \"Bob\"));\n    doc.add(new FacetField(\"dim\", \"a\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    DrillSideways ds = new DrillSideways(searcher, config, taxoReader);\n\n    BooleanQuery.Builder bq = new BooleanQuery.Builder();\n    bq.add(new TermQuery(new Term(\"field\", \"foo\")), BooleanClause.Occur.MUST);\n    bq.add(new TermQuery(new Term(\"field\", \"bar\")), BooleanClause.Occur.MUST_NOT);\n    DrillDownQuery ddq = new DrillDownQuery(config, bq.build());\n    ddq.add(\"field\", \"foo\");\n    ddq.add(\"author\", bq.build());\n    ddq.add(\"dim\", bq.build());\n    DrillSidewaysResult r = ds.search(null, ddq, 10);\n    assertEquals(0, r.hits.totalHits);\n\n    writer.close();\n    IOUtils.close(searcher.getIndexReader(), taxoReader, taxoWriter, dir, taxoDir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"83788ad129a5154d5c6562c4e8ce3db48793aada","date":1532961485,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/TestDrillSideways#testScorer().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/TestDrillSideways#testScorer().mjava","sourceNew":"  public void testScorer() throws Exception {\n    // LUCENE-6001 some scorers, eg ReqExlScorer, can hit NPE if cost is called after nextDoc\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    FacetsConfig config = new FacetsConfig();\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    Document doc = new Document();\n    doc.add(newTextField(\"field\", \"foo bar\", Field.Store.NO));\n    doc.add(new FacetField(\"Author\", \"Bob\"));\n    doc.add(new FacetField(\"dim\", \"a\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    DrillSideways ds = getNewDrillSideways(searcher, config, taxoReader);\n\n    BooleanQuery.Builder bq = new BooleanQuery.Builder();\n    bq.add(new TermQuery(new Term(\"field\", \"foo\")), BooleanClause.Occur.MUST);\n    bq.add(new TermQuery(new Term(\"field\", \"bar\")), BooleanClause.Occur.MUST_NOT);\n    DrillDownQuery ddq = new DrillDownQuery(config, bq.build());\n    ddq.add(\"field\", \"foo\");\n    ddq.add(\"author\", bq.build());\n    ddq.add(\"dim\", bq.build());\n    DrillSidewaysResult r = ds.search(null, ddq, 10);\n    assertEquals(0, r.hits.totalHits.value);\n\n    writer.close();\n    IOUtils.close(searcher.getIndexReader(), taxoReader, taxoWriter, dir, taxoDir);\n  }\n\n","sourceOld":"  public void testScorer() throws Exception {\n    // LUCENE-6001 some scorers, eg ReqExlScorer, can hit NPE if cost is called after nextDoc\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    FacetsConfig config = new FacetsConfig();\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    Document doc = new Document();\n    doc.add(newTextField(\"field\", \"foo bar\", Field.Store.NO));\n    doc.add(new FacetField(\"Author\", \"Bob\"));\n    doc.add(new FacetField(\"dim\", \"a\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    DrillSideways ds = getNewDrillSideways(searcher, config, taxoReader);\n\n    BooleanQuery.Builder bq = new BooleanQuery.Builder();\n    bq.add(new TermQuery(new Term(\"field\", \"foo\")), BooleanClause.Occur.MUST);\n    bq.add(new TermQuery(new Term(\"field\", \"bar\")), BooleanClause.Occur.MUST_NOT);\n    DrillDownQuery ddq = new DrillDownQuery(config, bq.build());\n    ddq.add(\"field\", \"foo\");\n    ddq.add(\"author\", bq.build());\n    ddq.add(\"dim\", bq.build());\n    DrillSidewaysResult r = ds.search(null, ddq, 10);\n    assertEquals(0, r.hits.totalHits);\n\n    writer.close();\n    IOUtils.close(searcher.getIndexReader(), taxoReader, taxoWriter, dir, taxoDir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"132e4d2b791f182f095041c89860f21eb11c31a5","date":1600099601,"type":3,"author":"Julie Tibshirani","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/TestDrillSideways#testScorer().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/TestDrillSideways#testScorer().mjava","sourceNew":"  public void testScorer() throws Exception {\n    // LUCENE-6001 some scorers, eg ReqExlScorer, can hit NPE if cost is called after nextDoc\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    FacetsConfig config = new FacetsConfig();\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    Document doc = new Document();\n    doc.add(newTextField(\"field\", \"foo bar\", Field.Store.NO));\n    doc.add(new FacetField(\"Author\", \"Bob\"));\n    doc.add(new FacetField(\"dim\", \"a\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    // NRT open\n    IndexSearcher searcher = getNewSearcher(writer.getReader());\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    DrillSideways ds = getNewDrillSideways(searcher, config, taxoReader);\n\n    BooleanQuery.Builder bq = new BooleanQuery.Builder();\n    bq.add(new TermQuery(new Term(\"field\", \"foo\")), BooleanClause.Occur.MUST);\n    bq.add(new TermQuery(new Term(\"field\", \"bar\")), BooleanClause.Occur.MUST_NOT);\n    DrillDownQuery ddq = new DrillDownQuery(config, bq.build());\n    ddq.add(\"field\", \"foo\");\n    ddq.add(\"author\", bq.build());\n    ddq.add(\"dim\", bq.build());\n    DrillSidewaysResult r = ds.search(null, ddq, 10);\n    assertEquals(0, r.hits.totalHits.value);\n\n    writer.close();\n    IOUtils.close(searcher.getIndexReader(), taxoReader, taxoWriter, dir, taxoDir);\n  }\n\n","sourceOld":"  public void testScorer() throws Exception {\n    // LUCENE-6001 some scorers, eg ReqExlScorer, can hit NPE if cost is called after nextDoc\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    FacetsConfig config = new FacetsConfig();\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    Document doc = new Document();\n    doc.add(newTextField(\"field\", \"foo bar\", Field.Store.NO));\n    doc.add(new FacetField(\"Author\", \"Bob\"));\n    doc.add(new FacetField(\"dim\", \"a\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    DrillSideways ds = getNewDrillSideways(searcher, config, taxoReader);\n\n    BooleanQuery.Builder bq = new BooleanQuery.Builder();\n    bq.add(new TermQuery(new Term(\"field\", \"foo\")), BooleanClause.Occur.MUST);\n    bq.add(new TermQuery(new Term(\"field\", \"bar\")), BooleanClause.Occur.MUST_NOT);\n    DrillDownQuery ddq = new DrillDownQuery(config, bq.build());\n    ddq.add(\"field\", \"foo\");\n    ddq.add(\"author\", bq.build());\n    ddq.add(\"dim\", bq.build());\n    DrillSidewaysResult r = ds.search(null, ddq, 10);\n    assertEquals(0, r.hits.totalHits.value);\n\n    writer.close();\n    IOUtils.close(searcher.getIndexReader(), taxoReader, taxoWriter, dir, taxoDir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"680b6449f09827f58fe987aff279e014c311d966","date":1600247985,"type":3,"author":"noblepaul","isMerge":true,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/TestDrillSideways#testScorer().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/TestDrillSideways#testScorer().mjava","sourceNew":"  public void testScorer() throws Exception {\n    // LUCENE-6001 some scorers, eg ReqExlScorer, can hit NPE if cost is called after nextDoc\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    FacetsConfig config = new FacetsConfig();\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    Document doc = new Document();\n    doc.add(newTextField(\"field\", \"foo bar\", Field.Store.NO));\n    doc.add(new FacetField(\"Author\", \"Bob\"));\n    doc.add(new FacetField(\"dim\", \"a\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    // NRT open\n    IndexSearcher searcher = getNewSearcher(writer.getReader());\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    DrillSideways ds = getNewDrillSideways(searcher, config, taxoReader);\n\n    BooleanQuery.Builder bq = new BooleanQuery.Builder();\n    bq.add(new TermQuery(new Term(\"field\", \"foo\")), BooleanClause.Occur.MUST);\n    bq.add(new TermQuery(new Term(\"field\", \"bar\")), BooleanClause.Occur.MUST_NOT);\n    DrillDownQuery ddq = new DrillDownQuery(config, bq.build());\n    ddq.add(\"field\", \"foo\");\n    ddq.add(\"author\", bq.build());\n    ddq.add(\"dim\", bq.build());\n    DrillSidewaysResult r = ds.search(null, ddq, 10);\n    assertEquals(0, r.hits.totalHits.value);\n\n    writer.close();\n    IOUtils.close(searcher.getIndexReader(), taxoReader, taxoWriter, dir, taxoDir);\n  }\n\n","sourceOld":"  public void testScorer() throws Exception {\n    // LUCENE-6001 some scorers, eg ReqExlScorer, can hit NPE if cost is called after nextDoc\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    FacetsConfig config = new FacetsConfig();\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    Document doc = new Document();\n    doc.add(newTextField(\"field\", \"foo bar\", Field.Store.NO));\n    doc.add(new FacetField(\"Author\", \"Bob\"));\n    doc.add(new FacetField(\"dim\", \"a\"));\n    writer.addDocument(config.build(taxoWriter, doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    DrillSideways ds = getNewDrillSideways(searcher, config, taxoReader);\n\n    BooleanQuery.Builder bq = new BooleanQuery.Builder();\n    bq.add(new TermQuery(new Term(\"field\", \"foo\")), BooleanClause.Occur.MUST);\n    bq.add(new TermQuery(new Term(\"field\", \"bar\")), BooleanClause.Occur.MUST_NOT);\n    DrillDownQuery ddq = new DrillDownQuery(config, bq.build());\n    ddq.add(\"field\", \"foo\");\n    ddq.add(\"author\", bq.build());\n    ddq.add(\"dim\", bq.build());\n    DrillSidewaysResult r = ds.search(null, ddq, 10);\n    assertEquals(0, r.hits.totalHits.value);\n\n    writer.close();\n    IOUtils.close(searcher.getIndexReader(), taxoReader, taxoWriter, dir, taxoDir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"132e4d2b791f182f095041c89860f21eb11c31a5":["83788ad129a5154d5c6562c4e8ce3db48793aada"],"3f68d01cf19df971dcdcb05e30247f4ad7ec9747":["183692f1ef55e7e58a550d7910b67d157ef6906a"],"183692f1ef55e7e58a550d7910b67d157ef6906a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","183692f1ef55e7e58a550d7910b67d157ef6906a"],"680b6449f09827f58fe987aff279e014c311d966":["83788ad129a5154d5c6562c4e8ce3db48793aada","132e4d2b791f182f095041c89860f21eb11c31a5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"91eb857a56b1a3a6659c666f88e2398347fc1c5a":["c8a0e442f7b61f811680273b25da95994a724466"],"c8a0e442f7b61f811680273b25da95994a724466":["3f68d01cf19df971dcdcb05e30247f4ad7ec9747"],"83788ad129a5154d5c6562c4e8ce3db48793aada":["91eb857a56b1a3a6659c666f88e2398347fc1c5a"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["3f68d01cf19df971dcdcb05e30247f4ad7ec9747","c8a0e442f7b61f811680273b25da95994a724466"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["680b6449f09827f58fe987aff279e014c311d966"],"f03e4bed5023ec3ef93a771b8888cae991cf448d":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","91eb857a56b1a3a6659c666f88e2398347fc1c5a"]},"commit2Childs":{"132e4d2b791f182f095041c89860f21eb11c31a5":["680b6449f09827f58fe987aff279e014c311d966"],"3f68d01cf19df971dcdcb05e30247f4ad7ec9747":["c8a0e442f7b61f811680273b25da95994a724466","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"183692f1ef55e7e58a550d7910b67d157ef6906a":["3f68d01cf19df971dcdcb05e30247f4ad7ec9747","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"680b6449f09827f58fe987aff279e014c311d966":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["183692f1ef55e7e58a550d7910b67d157ef6906a","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae"],"91eb857a56b1a3a6659c666f88e2398347fc1c5a":["83788ad129a5154d5c6562c4e8ce3db48793aada","f03e4bed5023ec3ef93a771b8888cae991cf448d"],"c8a0e442f7b61f811680273b25da95994a724466":["91eb857a56b1a3a6659c666f88e2398347fc1c5a","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"83788ad129a5154d5c6562c4e8ce3db48793aada":["132e4d2b791f182f095041c89860f21eb11c31a5","680b6449f09827f58fe987aff279e014c311d966"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["f03e4bed5023ec3ef93a771b8888cae991cf448d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"f03e4bed5023ec3ef93a771b8888cae991cf448d":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817","f03e4bed5023ec3ef93a771b8888cae991cf448d"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}