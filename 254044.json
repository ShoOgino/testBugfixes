{"path":"lucene/analysis/common/src/java/org/apache/lucene/analysis/synonym/WordnetSynonymParser#add(Reader).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/synonym/WordnetSynonymParser#add(Reader).mjava","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/synonym/WordnetSynonymParser#add(Reader).mjava","sourceNew":"  public void add(Reader in) throws IOException, ParseException {\n    LineNumberReader br = new LineNumberReader(in);\n    try {\n      String line = null;\n      String lastSynSetID = \"\";\n      CharsRef synset[] = new CharsRef[8];\n      int synsetSize = 0;\n      \n      while ((line = br.readLine()) != null) {\n        String synSetID = line.substring(2, 11);\n\n        if (!synSetID.equals(lastSynSetID)) {\n          addInternal(synset, synsetSize);\n          synsetSize = 0;\n        }\n\n        if (synset.length <= synsetSize+1) {\n          CharsRef larger[] = new CharsRef[synset.length * 2];\n          System.arraycopy(synset, 0, larger, 0, synsetSize);\n          synset = larger;\n        }\n        \n        synset[synsetSize] = parseSynonym(line, synset[synsetSize]);\n        synsetSize++;\n        lastSynSetID = synSetID;\n      }\n      \n      // final synset in the file\n      addInternal(synset, synsetSize);\n    } catch (IllegalArgumentException e) {\n      ParseException ex = new ParseException(\"Invalid synonym rule at line \" + br.getLineNumber(), 0);\n      ex.initCause(e);\n      throw ex;\n    } finally {\n      br.close();\n    }\n  }\n\n","sourceOld":"  public void add(Reader in) throws IOException, ParseException {\n    LineNumberReader br = new LineNumberReader(in);\n    try {\n      String line = null;\n      String lastSynSetID = \"\";\n      CharsRef synset[] = new CharsRef[8];\n      int synsetSize = 0;\n      \n      while ((line = br.readLine()) != null) {\n        String synSetID = line.substring(2, 11);\n\n        if (!synSetID.equals(lastSynSetID)) {\n          addInternal(synset, synsetSize);\n          synsetSize = 0;\n        }\n\n        if (synset.length <= synsetSize+1) {\n          CharsRef larger[] = new CharsRef[synset.length * 2];\n          System.arraycopy(synset, 0, larger, 0, synsetSize);\n          synset = larger;\n        }\n        \n        synset[synsetSize] = parseSynonym(line, synset[synsetSize]);\n        synsetSize++;\n        lastSynSetID = synSetID;\n      }\n      \n      // final synset in the file\n      addInternal(synset, synsetSize);\n    } catch (IllegalArgumentException e) {\n      ParseException ex = new ParseException(\"Invalid synonym rule at line \" + br.getLineNumber(), 0);\n      ex.initCause(e);\n      throw ex;\n    } finally {\n      br.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"85f3a2d749715373feb8529516e92d3538103525","date":1379624134,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/synonym/WordnetSynonymParser#parse(Reader).mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/synonym/WordnetSynonymParser#add(Reader).mjava","sourceNew":"  @Override\n  public void parse(Reader in) throws IOException, ParseException {\n    LineNumberReader br = new LineNumberReader(in);\n    try {\n      String line = null;\n      String lastSynSetID = \"\";\n      CharsRef synset[] = new CharsRef[8];\n      int synsetSize = 0;\n      \n      while ((line = br.readLine()) != null) {\n        String synSetID = line.substring(2, 11);\n\n        if (!synSetID.equals(lastSynSetID)) {\n          addInternal(synset, synsetSize);\n          synsetSize = 0;\n        }\n\n        if (synset.length <= synsetSize+1) {\n          CharsRef larger[] = new CharsRef[synset.length * 2];\n          System.arraycopy(synset, 0, larger, 0, synsetSize);\n          synset = larger;\n        }\n        \n        synset[synsetSize] = parseSynonym(line, synset[synsetSize]);\n        synsetSize++;\n        lastSynSetID = synSetID;\n      }\n      \n      // final synset in the file\n      addInternal(synset, synsetSize);\n    } catch (IllegalArgumentException e) {\n      ParseException ex = new ParseException(\"Invalid synonym rule at line \" + br.getLineNumber(), 0);\n      ex.initCause(e);\n      throw ex;\n    } finally {\n      br.close();\n    }\n  }\n\n","sourceOld":"  public void add(Reader in) throws IOException, ParseException {\n    LineNumberReader br = new LineNumberReader(in);\n    try {\n      String line = null;\n      String lastSynSetID = \"\";\n      CharsRef synset[] = new CharsRef[8];\n      int synsetSize = 0;\n      \n      while ((line = br.readLine()) != null) {\n        String synSetID = line.substring(2, 11);\n\n        if (!synSetID.equals(lastSynSetID)) {\n          addInternal(synset, synsetSize);\n          synsetSize = 0;\n        }\n\n        if (synset.length <= synsetSize+1) {\n          CharsRef larger[] = new CharsRef[synset.length * 2];\n          System.arraycopy(synset, 0, larger, 0, synsetSize);\n          synset = larger;\n        }\n        \n        synset[synsetSize] = parseSynonym(line, synset[synsetSize]);\n        synsetSize++;\n        lastSynSetID = synSetID;\n      }\n      \n      // final synset in the file\n      addInternal(synset, synsetSize);\n    } catch (IllegalArgumentException e) {\n      ParseException ex = new ParseException(\"Invalid synonym rule at line \" + br.getLineNumber(), 0);\n      ex.initCause(e);\n      throw ex;\n    } finally {\n      br.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"85f3a2d749715373feb8529516e92d3538103525":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["85f3a2d749715373feb8529516e92d3538103525"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["85f3a2d749715373feb8529516e92d3538103525"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"85f3a2d749715373feb8529516e92d3538103525":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}