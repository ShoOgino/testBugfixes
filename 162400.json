{"path":"lucene/core/src/java/org/apache/lucene/search/TopFieldCollector#create(Sort,int,boolean,boolean).mjava","commits":[{"id":"04c370507e5521b2eb998530736f1c19b851ed5a","date":1531911305,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/TopFieldCollector#create(Sort,int,boolean,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/TopFieldCollector#create(Sort,int,boolean,boolean,boolean).mjava","sourceNew":"  /**\n   * Creates a new {@link TopFieldCollector} from the given\n   * arguments.\n   *\n   * <p><b>NOTE</b>: The instances returned by this method\n   * pre-allocate a full array of length\n   * <code>numHits</code>.\n   *\n   * @param sort\n   *          the sort criteria (SortFields).\n   * @param numHits\n   *          the number of results to collect.\n   * @param trackDocScores\n   *          specifies whether document scores should be tracked and set on the\n   *          results. Note that if set to false, then the results' scores will\n   *          be set to Float.NaN. Setting this to true affects performance, as\n   *          it incurs the score computation on each competitive result.\n   *          Therefore if document scores are not required by the application,\n   *          it is recommended to set it to false.\n   * @param trackTotalHits\n   *          specifies whether the total number of hits should be tracked. If\n   *          set to false, the value of {@link TopFieldDocs#totalHits} will be\n   *          approximated.\n   * @return a {@link TopFieldCollector} instance which will sort the results by\n   *         the sort criteria.\n   */\n  public static TopFieldCollector create(Sort sort, int numHits,\n      boolean trackDocScores, boolean trackTotalHits) {\n    return create(sort, numHits, null, trackDocScores, trackTotalHits);\n  }\n\n","sourceOld":"  /**\n   * Creates a new {@link TopFieldCollector} from the given\n   * arguments.\n   *\n   * <p><b>NOTE</b>: The instances returned by this method\n   * pre-allocate a full array of length\n   * <code>numHits</code>.\n   *\n   * @param sort\n   *          the sort criteria (SortFields).\n   * @param numHits\n   *          the number of results to collect.\n   * @param fillFields\n   *          specifies whether the actual field values should be returned on\n   *          the results (FieldDoc).\n   * @param trackDocScores\n   *          specifies whether document scores should be tracked and set on the\n   *          results. Note that if set to false, then the results' scores will\n   *          be set to Float.NaN. Setting this to true affects performance, as\n   *          it incurs the score computation on each competitive result.\n   *          Therefore if document scores are not required by the application,\n   *          it is recommended to set it to false.\n   * @param trackTotalHits\n   *          specifies whether the total number of hits should be tracked. If\n   *          set to false, the value of {@link TopFieldDocs#totalHits} will be\n   *          approximated.\n   * @return a {@link TopFieldCollector} instance which will sort the results by\n   *         the sort criteria.\n   */\n  public static TopFieldCollector create(Sort sort, int numHits,\n      boolean fillFields, boolean trackDocScores, boolean trackTotalHits) {\n    return create(sort, numHits, null, fillFields, trackDocScores, trackTotalHits);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1d3f7ab1a502671bbdb03bcced21e764d2483221","date":1532329609,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/TopFieldCollector#create(Sort,int,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/TopFieldCollector#create(Sort,int,boolean,boolean).mjava","sourceNew":"  /**\n   * Creates a new {@link TopFieldCollector} from the given\n   * arguments.\n   *\n   * <p><b>NOTE</b>: The instances returned by this method\n   * pre-allocate a full array of length\n   * <code>numHits</code>.\n   *\n   * @param sort\n   *          the sort criteria (SortFields).\n   * @param numHits\n   *          the number of results to collect.\n   * @param trackTotalHits\n   *          specifies whether the total number of hits should be tracked. If\n   *          set to false, the value of {@link TopFieldDocs#totalHits} will be\n   *          approximated.\n   * @return a {@link TopFieldCollector} instance which will sort the results by\n   *         the sort criteria.\n   */\n  public static TopFieldCollector create(Sort sort, int numHits, boolean trackTotalHits) {\n    return create(sort, numHits, null, trackTotalHits);\n  }\n\n","sourceOld":"  /**\n   * Creates a new {@link TopFieldCollector} from the given\n   * arguments.\n   *\n   * <p><b>NOTE</b>: The instances returned by this method\n   * pre-allocate a full array of length\n   * <code>numHits</code>.\n   *\n   * @param sort\n   *          the sort criteria (SortFields).\n   * @param numHits\n   *          the number of results to collect.\n   * @param trackDocScores\n   *          specifies whether document scores should be tracked and set on the\n   *          results. Note that if set to false, then the results' scores will\n   *          be set to Float.NaN. Setting this to true affects performance, as\n   *          it incurs the score computation on each competitive result.\n   *          Therefore if document scores are not required by the application,\n   *          it is recommended to set it to false.\n   * @param trackTotalHits\n   *          specifies whether the total number of hits should be tracked. If\n   *          set to false, the value of {@link TopFieldDocs#totalHits} will be\n   *          approximated.\n   * @return a {@link TopFieldCollector} instance which will sort the results by\n   *         the sort criteria.\n   */\n  public static TopFieldCollector create(Sort sort, int numHits,\n      boolean trackDocScores, boolean trackTotalHits) {\n    return create(sort, numHits, null, trackDocScores, trackTotalHits);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"04c370507e5521b2eb998530736f1c19b851ed5a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1d3f7ab1a502671bbdb03bcced21e764d2483221"],"1d3f7ab1a502671bbdb03bcced21e764d2483221":["04c370507e5521b2eb998530736f1c19b851ed5a"]},"commit2Childs":{"04c370507e5521b2eb998530736f1c19b851ed5a":["1d3f7ab1a502671bbdb03bcced21e764d2483221"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["04c370507e5521b2eb998530736f1c19b851ed5a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"1d3f7ab1a502671bbdb03bcced21e764d2483221":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}