{"path":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/MultiCoreExampleJettyTest#createServer(String).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/MultiCoreExampleJettyTest#createServer(String).mjava","pathOld":"solr/src/test/org/apache/solr/client/solrj/embedded/MultiCoreExampleJettyTest#createServer(String).mjava","sourceNew":"  private SolrServer createServer( String name )\n  {\n    try {\n      // setup the server...\n      String url = \"http://localhost:\"+port+context+\"/\"+name;\n      CommonsHttpSolrServer s = new CommonsHttpSolrServer( url );\n      s.setConnectionTimeout(100); // 1/10th sec\n      s.setDefaultMaxConnectionsPerHost(100);\n      s.setMaxTotalConnections(100);\n      return s;\n    }\n    catch( Exception ex ) {\n      throw new RuntimeException( ex );\n    }\n  }\n\n","sourceOld":"  private SolrServer createServer( String name )\n  {\n    try {\n      // setup the server...\n      String url = \"http://localhost:\"+port+context+\"/\"+name;\n      CommonsHttpSolrServer s = new CommonsHttpSolrServer( url );\n      s.setConnectionTimeout(100); // 1/10th sec\n      s.setDefaultMaxConnectionsPerHost(100);\n      s.setMaxTotalConnections(100);\n      return s;\n    }\n    catch( Exception ex ) {\n      throw new RuntimeException( ex );\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/MultiCoreExampleJettyTest#createServer(String).mjava","pathOld":"solr/src/test/org/apache/solr/client/solrj/embedded/MultiCoreExampleJettyTest#createServer(String).mjava","sourceNew":"  private SolrServer createServer( String name )\n  {\n    try {\n      // setup the server...\n      String url = \"http://localhost:\"+port+context+\"/\"+name;\n      CommonsHttpSolrServer s = new CommonsHttpSolrServer( url );\n      s.setConnectionTimeout(100); // 1/10th sec\n      s.setDefaultMaxConnectionsPerHost(100);\n      s.setMaxTotalConnections(100);\n      return s;\n    }\n    catch( Exception ex ) {\n      throw new RuntimeException( ex );\n    }\n  }\n\n","sourceOld":"  private SolrServer createServer( String name )\n  {\n    try {\n      // setup the server...\n      String url = \"http://localhost:\"+port+context+\"/\"+name;\n      CommonsHttpSolrServer s = new CommonsHttpSolrServer( url );\n      s.setConnectionTimeout(100); // 1/10th sec\n      s.setDefaultMaxConnectionsPerHost(100);\n      s.setMaxTotalConnections(100);\n      return s;\n    }\n    catch( Exception ex ) {\n      throw new RuntimeException( ex );\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/MultiCoreExampleJettyTest#createServer(String).mjava","pathOld":"solr/src/test/org/apache/solr/client/solrj/embedded/MultiCoreExampleJettyTest#createServer(String).mjava","sourceNew":"  private SolrServer createServer( String name )\n  {\n    try {\n      // setup the server...\n      String url = \"http://localhost:\"+port+context+\"/\"+name;\n      CommonsHttpSolrServer s = new CommonsHttpSolrServer( url );\n      s.setConnectionTimeout(100); // 1/10th sec\n      s.setDefaultMaxConnectionsPerHost(100);\n      s.setMaxTotalConnections(100);\n      return s;\n    }\n    catch( Exception ex ) {\n      throw new RuntimeException( ex );\n    }\n  }\n\n","sourceOld":"  private SolrServer createServer( String name )\n  {\n    try {\n      // setup the server...\n      String url = \"http://localhost:\"+port+context+\"/\"+name;\n      CommonsHttpSolrServer s = new CommonsHttpSolrServer( url );\n      s.setConnectionTimeout(100); // 1/10th sec\n      s.setDefaultMaxConnectionsPerHost(100);\n      s.setMaxTotalConnections(100);\n      return s;\n    }\n    catch( Exception ex ) {\n      throw new RuntimeException( ex );\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7321b77a7bc3edfebd637ef273e9dfaa9969eba6","date":1333023097,"type":3,"author":"Sami Siren","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/MultiCoreExampleJettyTest#createServer(String).mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/MultiCoreExampleJettyTest#createServer(String).mjava","sourceNew":"  private SolrServer createServer( String name )\n  {\n    try {\n      // setup the server...\n      String url = \"http://localhost:\"+port+context+\"/\"+name;\n      HttpSolrServer s = new HttpSolrServer( url );\n      s.setConnectionTimeout(100); // 1/10th sec\n      s.setDefaultMaxConnectionsPerHost(100);\n      s.setMaxTotalConnections(100);\n      return s;\n    }\n    catch( Exception ex ) {\n      throw new RuntimeException( ex );\n    }\n  }\n\n","sourceOld":"  private SolrServer createServer( String name )\n  {\n    try {\n      // setup the server...\n      String url = \"http://localhost:\"+port+context+\"/\"+name;\n      CommonsHttpSolrServer s = new CommonsHttpSolrServer( url );\n      s.setConnectionTimeout(100); // 1/10th sec\n      s.setDefaultMaxConnectionsPerHost(100);\n      s.setMaxTotalConnections(100);\n      return s;\n    }\n    catch( Exception ex ) {\n      throw new RuntimeException( ex );\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5b9fe91de32e1be9cf3fc4193869fdbe5b3234f5","date":1333057170,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/MultiCoreExampleJettyTest#createServer(String).mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/MultiCoreExampleJettyTest#createServer(String).mjava","sourceNew":"  private SolrServer createServer( String name )\n  {\n    try {\n      // setup the server...\n      String url = \"http://localhost:\"+port+context+\"/\"+name;\n      HttpSolrServer s = new HttpSolrServer( url );\n      s.setConnectionTimeout(SolrTestCaseJ4.DEFAULT_CONNECTION_TIMEOUT);\n      s.setDefaultMaxConnectionsPerHost(100);\n      s.setMaxTotalConnections(100);\n      return s;\n    }\n    catch( Exception ex ) {\n      throw new RuntimeException( ex );\n    }\n  }\n\n","sourceOld":"  private SolrServer createServer( String name )\n  {\n    try {\n      // setup the server...\n      String url = \"http://localhost:\"+port+context+\"/\"+name;\n      HttpSolrServer s = new HttpSolrServer( url );\n      s.setConnectionTimeout(100); // 1/10th sec\n      s.setDefaultMaxConnectionsPerHost(100);\n      s.setMaxTotalConnections(100);\n      return s;\n    }\n    catch( Exception ex ) {\n      throw new RuntimeException( ex );\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"47c952a4f0f0e9b74763a0609a3726dbb217164a","date":1347968413,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/MultiCoreExampleJettyTest#createServer(String).mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/MultiCoreExampleJettyTest#createServer(String).mjava","sourceNew":"  private SolrServer createServer( String name )\n  {\n    try {\n      // setup the server...\n      String url = \"http://127.0.0.1:\"+port+context+\"/\"+name;\n      HttpSolrServer s = new HttpSolrServer( url );\n      s.setConnectionTimeout(SolrTestCaseJ4.DEFAULT_CONNECTION_TIMEOUT);\n      s.setDefaultMaxConnectionsPerHost(100);\n      s.setMaxTotalConnections(100);\n      return s;\n    }\n    catch( Exception ex ) {\n      throw new RuntimeException( ex );\n    }\n  }\n\n","sourceOld":"  private SolrServer createServer( String name )\n  {\n    try {\n      // setup the server...\n      String url = \"http://localhost:\"+port+context+\"/\"+name;\n      HttpSolrServer s = new HttpSolrServer( url );\n      s.setConnectionTimeout(SolrTestCaseJ4.DEFAULT_CONNECTION_TIMEOUT);\n      s.setDefaultMaxConnectionsPerHost(100);\n      s.setMaxTotalConnections(100);\n      return s;\n    }\n    catch( Exception ex ) {\n      throw new RuntimeException( ex );\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"57641b2e9dc6155be493cfb6ae9b8a9c8ceffa72","date":1391985588,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/MultiCoreExampleJettyTest#createServer(String).mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/MultiCoreExampleJettyTest#createServer(String).mjava","sourceNew":"  private SolrServer createServer( String name )\n  {\n    try {\n      // setup the server...\n      String url = \"http\" + (isSSLMode() ? \"s\" : \"\") + \"://127.0.0.1:\"+port+context+\"/\"+name;\n      HttpSolrServer s = new HttpSolrServer( url );\n      s.setConnectionTimeout(SolrTestCaseJ4.DEFAULT_CONNECTION_TIMEOUT);\n      s.setDefaultMaxConnectionsPerHost(100);\n      s.setMaxTotalConnections(100);\n      return s;\n    }\n    catch( Exception ex ) {\n      throw new RuntimeException( ex );\n    }\n  }\n\n","sourceOld":"  private SolrServer createServer( String name )\n  {\n    try {\n      // setup the server...\n      String url = \"http://127.0.0.1:\"+port+context+\"/\"+name;\n      HttpSolrServer s = new HttpSolrServer( url );\n      s.setConnectionTimeout(SolrTestCaseJ4.DEFAULT_CONNECTION_TIMEOUT);\n      s.setDefaultMaxConnectionsPerHost(100);\n      s.setMaxTotalConnections(100);\n      return s;\n    }\n    catch( Exception ex ) {\n      throw new RuntimeException( ex );\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"81ec897f0eb789ef9536a8130d1cdb9337ef108a","date":1392217884,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/MultiCoreExampleJettyTest#createServer(String).mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/MultiCoreExampleJettyTest#createServer(String).mjava","sourceNew":"  private SolrServer createServer( String name )\n  {\n    try {\n      // setup the server...\n      String url = buildUrl(port, context) + \"/\" + name;\n      HttpSolrServer s = new HttpSolrServer( url );\n      s.setConnectionTimeout(SolrTestCaseJ4.DEFAULT_CONNECTION_TIMEOUT);\n      s.setDefaultMaxConnectionsPerHost(100);\n      s.setMaxTotalConnections(100);\n      return s;\n    }\n    catch( Exception ex ) {\n      throw new RuntimeException( ex );\n    }\n  }\n\n","sourceOld":"  private SolrServer createServer( String name )\n  {\n    try {\n      // setup the server...\n      String url = \"http\" + (isSSLMode() ? \"s\" : \"\") + \"://127.0.0.1:\"+port+context+\"/\"+name;\n      HttpSolrServer s = new HttpSolrServer( url );\n      s.setConnectionTimeout(SolrTestCaseJ4.DEFAULT_CONNECTION_TIMEOUT);\n      s.setDefaultMaxConnectionsPerHost(100);\n      s.setMaxTotalConnections(100);\n      return s;\n    }\n    catch( Exception ex ) {\n      throw new RuntimeException( ex );\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4c7856260bc28f285ae7bfefa99b28db4dca6daf","date":1395253500,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/MultiCoreExampleJettyTest#createServer(String).mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/MultiCoreExampleJettyTest#createServer(String).mjava","sourceNew":"  protected SolrServer createServer( String name )\n  {\n    try {\n      // setup the server...\n      String url = buildUrl(port, context) + \"/\" + name;\n      HttpSolrServer s = new HttpSolrServer( url );\n      s.setConnectionTimeout(SolrTestCaseJ4.DEFAULT_CONNECTION_TIMEOUT);\n      s.setDefaultMaxConnectionsPerHost(100);\n      s.setMaxTotalConnections(100);\n      return s;\n    }\n    catch( Exception ex ) {\n      throw new RuntimeException( ex );\n    }\n  }\n\n","sourceOld":"  private SolrServer createServer( String name )\n  {\n    try {\n      // setup the server...\n      String url = buildUrl(port, context) + \"/\" + name;\n      HttpSolrServer s = new HttpSolrServer( url );\n      s.setConnectionTimeout(SolrTestCaseJ4.DEFAULT_CONNECTION_TIMEOUT);\n      s.setDefaultMaxConnectionsPerHost(100);\n      s.setMaxTotalConnections(100);\n      return s;\n    }\n    catch( Exception ex ) {\n      throw new RuntimeException( ex );\n    }\n  }\n\n","bugFix":["41bffa147dec8d55cfa362ef9aca41509819ae04"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6fb75838ea3c6b1fa977394f436bfffb53b417bc","date":1418226395,"type":4,"author":"Timothy Potter","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/embedded/MultiCoreExampleJettyTest#createServer(String).mjava","sourceNew":null,"sourceOld":"  protected SolrServer createServer( String name )\n  {\n    try {\n      // setup the server...\n      String url = buildUrl(port, context) + \"/\" + name;\n      HttpSolrServer s = new HttpSolrServer( url );\n      s.setConnectionTimeout(SolrTestCaseJ4.DEFAULT_CONNECTION_TIMEOUT);\n      s.setDefaultMaxConnectionsPerHost(100);\n      s.setMaxTotalConnections(100);\n      return s;\n    }\n    catch( Exception ex ) {\n      throw new RuntimeException( ex );\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"47c952a4f0f0e9b74763a0609a3726dbb217164a":["5b9fe91de32e1be9cf3fc4193869fdbe5b3234f5"],"57641b2e9dc6155be493cfb6ae9b8a9c8ceffa72":["47c952a4f0f0e9b74763a0609a3726dbb217164a"],"4c7856260bc28f285ae7bfefa99b28db4dca6daf":["81ec897f0eb789ef9536a8130d1cdb9337ef108a"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"6fb75838ea3c6b1fa977394f436bfffb53b417bc":["4c7856260bc28f285ae7bfefa99b28db4dca6daf"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7321b77a7bc3edfebd637ef273e9dfaa9969eba6":["c26f00b574427b55127e869b935845554afde1fa"],"81ec897f0eb789ef9536a8130d1cdb9337ef108a":["57641b2e9dc6155be493cfb6ae9b8a9c8ceffa72"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5b9fe91de32e1be9cf3fc4193869fdbe5b3234f5":["7321b77a7bc3edfebd637ef273e9dfaa9969eba6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6fb75838ea3c6b1fa977394f436bfffb53b417bc"]},"commit2Childs":{"47c952a4f0f0e9b74763a0609a3726dbb217164a":["57641b2e9dc6155be493cfb6ae9b8a9c8ceffa72"],"57641b2e9dc6155be493cfb6ae9b8a9c8ceffa72":["81ec897f0eb789ef9536a8130d1cdb9337ef108a"],"4c7856260bc28f285ae7bfefa99b28db4dca6daf":["6fb75838ea3c6b1fa977394f436bfffb53b417bc"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["7321b77a7bc3edfebd637ef273e9dfaa9969eba6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"6fb75838ea3c6b1fa977394f436bfffb53b417bc":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"7321b77a7bc3edfebd637ef273e9dfaa9969eba6":["5b9fe91de32e1be9cf3fc4193869fdbe5b3234f5"],"81ec897f0eb789ef9536a8130d1cdb9337ef108a":["4c7856260bc28f285ae7bfefa99b28db4dca6daf"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"5b9fe91de32e1be9cf3fc4193869fdbe5b3234f5":["47c952a4f0f0e9b74763a0609a3726dbb217164a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}