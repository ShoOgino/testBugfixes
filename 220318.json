{"path":"lucene/facet/src/test/org/apache/lucene/facet/simple/TestSimpleDrillSideways#testMultipleRequestsPerDim().mjava","commits":[{"id":"19f5022544a8fc895776356d1b35a4b46d05945c","date":1385063323,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/simple/TestSimpleDrillSideways#testMultipleRequestsPerDim().mjava","pathOld":"/dev/null","sourceNew":"  public void testMultipleRequestsPerDim() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    FacetsConfig config = new FacetsConfig();\n    config.setHierarchical(\"dim\", true);\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    // Reused across documents, to add the necessary facet\n    // fields:\n    DocumentBuilder builder = new DocumentBuilder(taxoWriter, config);\n\n    Document doc = new Document();\n    doc.add(new FacetField(\"dim\", \"a\", \"x\"));\n    writer.addDocument(builder.build(doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"a\", \"y\"));\n    writer.addDocument(builder.build(doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"a\", \"z\"));\n    writer.addDocument(builder.build(doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"b\"));\n    writer.addDocument(builder.build(doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"c\"));\n    writer.addDocument(builder.build(doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"d\"));\n    writer.addDocument(builder.build(doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n\n    //System.out.println(\"searcher=\" + searcher);\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    SimpleDrillDownQuery ddq = new SimpleDrillDownQuery(config);\n    ddq.add(\"dim\", \"a\");\n    SimpleDrillSidewaysResult r = new SimpleDrillSideways(searcher, config, taxoReader).search(null, ddq, 10);\n\n    assertEquals(3, r.hits.totalHits);\n    assertEquals(\"dim (6)\\n  a (3)\\n  b (1)\\n  c (1)\\n  d (1)\\n\", r.facets.getTopChildren(10, \"dim\").toString());\n    assertEquals(\"dim/a (3)\\n  x (1)\\n  y (1)\\n  z (1)\\n\", r.facets.getTopChildren(10, \"dim\", \"a\").toString());\n\n    IOUtils.close(searcher.getIndexReader(), taxoReader, writer, taxoWriter, dir, taxoDir);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae75def1e2525383b6e1397ed97c44387da9941c","date":1385249238,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/simple/TestSimpleDrillSideways#testMultipleRequestsPerDim().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/simple/TestSimpleDrillSideways#testMultipleRequestsPerDim().mjava","sourceNew":"  public void testMultipleRequestsPerDim() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    FacetsConfig config = new FacetsConfig(taxoWriter);\n    config.setHierarchical(\"dim\", true);\n\n    Document doc = new Document();\n    doc.add(new FacetField(\"dim\", \"a\", \"x\"));\n    writer.addDocument(config.build(doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"a\", \"y\"));\n    writer.addDocument(config.build(doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"a\", \"z\"));\n    writer.addDocument(config.build(doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"b\"));\n    writer.addDocument(config.build(doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"c\"));\n    writer.addDocument(config.build(doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"d\"));\n    writer.addDocument(config.build(doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n\n    //System.out.println(\"searcher=\" + searcher);\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    SimpleDrillDownQuery ddq = new SimpleDrillDownQuery(config);\n    ddq.add(\"dim\", \"a\");\n    SimpleDrillSidewaysResult r = new SimpleDrillSideways(searcher, config, taxoReader).search(null, ddq, 10);\n\n    assertEquals(3, r.hits.totalHits);\n    assertEquals(\"dim (6)\\n  a (3)\\n  b (1)\\n  c (1)\\n  d (1)\\n\", r.facets.getTopChildren(10, \"dim\").toString());\n    assertEquals(\"dim/a (3)\\n  x (1)\\n  y (1)\\n  z (1)\\n\", r.facets.getTopChildren(10, \"dim\", \"a\").toString());\n\n    IOUtils.close(searcher.getIndexReader(), taxoReader, writer, taxoWriter, dir, taxoDir);\n  }\n\n","sourceOld":"  public void testMultipleRequestsPerDim() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    FacetsConfig config = new FacetsConfig();\n    config.setHierarchical(\"dim\", true);\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    // Reused across documents, to add the necessary facet\n    // fields:\n    DocumentBuilder builder = new DocumentBuilder(taxoWriter, config);\n\n    Document doc = new Document();\n    doc.add(new FacetField(\"dim\", \"a\", \"x\"));\n    writer.addDocument(builder.build(doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"a\", \"y\"));\n    writer.addDocument(builder.build(doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"a\", \"z\"));\n    writer.addDocument(builder.build(doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"b\"));\n    writer.addDocument(builder.build(doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"c\"));\n    writer.addDocument(builder.build(doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"d\"));\n    writer.addDocument(builder.build(doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n\n    //System.out.println(\"searcher=\" + searcher);\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    SimpleDrillDownQuery ddq = new SimpleDrillDownQuery(config);\n    ddq.add(\"dim\", \"a\");\n    SimpleDrillSidewaysResult r = new SimpleDrillSideways(searcher, config, taxoReader).search(null, ddq, 10);\n\n    assertEquals(3, r.hits.totalHits);\n    assertEquals(\"dim (6)\\n  a (3)\\n  b (1)\\n  c (1)\\n  d (1)\\n\", r.facets.getTopChildren(10, \"dim\").toString());\n    assertEquals(\"dim/a (3)\\n  x (1)\\n  y (1)\\n  z (1)\\n\", r.facets.getTopChildren(10, \"dim\", \"a\").toString());\n\n    IOUtils.close(searcher.getIndexReader(), taxoReader, writer, taxoWriter, dir, taxoDir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f01616d06510fc630b6ef0ec324bdebc2fc49b3c","date":1385331328,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/simple/TestSimpleDrillSideways#testMultipleRequestsPerDim().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/simple/TestSimpleDrillSideways#testMultipleRequestsPerDim().mjava","sourceNew":"  public void testMultipleRequestsPerDim() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    FacetsConfig config = new FacetsConfig(taxoWriter);\n    config.setHierarchical(\"dim\", true);\n\n    Document doc = new Document();\n    doc.add(new FacetField(\"dim\", \"a\", \"x\"));\n    writer.addDocument(config.build(doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"a\", \"y\"));\n    writer.addDocument(config.build(doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"a\", \"z\"));\n    writer.addDocument(config.build(doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"b\"));\n    writer.addDocument(config.build(doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"c\"));\n    writer.addDocument(config.build(doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"d\"));\n    writer.addDocument(config.build(doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n\n    //System.out.println(\"searcher=\" + searcher);\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    SimpleDrillDownQuery ddq = new SimpleDrillDownQuery(config);\n    ddq.add(\"dim\", \"a\");\n    SimpleDrillSidewaysResult r = new SimpleDrillSideways(searcher, config, taxoReader).search(null, ddq, 10);\n\n    assertEquals(3, r.hits.totalHits);\n    assertEquals(\"value=6 childCount=4\\n  a (3)\\n  b (1)\\n  c (1)\\n  d (1)\\n\", r.facets.getTopChildren(10, \"dim\").toString());\n    assertEquals(\"value=3 childCount=3\\n  x (1)\\n  y (1)\\n  z (1)\\n\", r.facets.getTopChildren(10, \"dim\", \"a\").toString());\n\n    IOUtils.close(searcher.getIndexReader(), taxoReader, writer, taxoWriter, dir, taxoDir);\n  }\n\n","sourceOld":"  public void testMultipleRequestsPerDim() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    FacetsConfig config = new FacetsConfig(taxoWriter);\n    config.setHierarchical(\"dim\", true);\n\n    Document doc = new Document();\n    doc.add(new FacetField(\"dim\", \"a\", \"x\"));\n    writer.addDocument(config.build(doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"a\", \"y\"));\n    writer.addDocument(config.build(doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"a\", \"z\"));\n    writer.addDocument(config.build(doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"b\"));\n    writer.addDocument(config.build(doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"c\"));\n    writer.addDocument(config.build(doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"d\"));\n    writer.addDocument(config.build(doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n\n    //System.out.println(\"searcher=\" + searcher);\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    SimpleDrillDownQuery ddq = new SimpleDrillDownQuery(config);\n    ddq.add(\"dim\", \"a\");\n    SimpleDrillSidewaysResult r = new SimpleDrillSideways(searcher, config, taxoReader).search(null, ddq, 10);\n\n    assertEquals(3, r.hits.totalHits);\n    assertEquals(\"dim (6)\\n  a (3)\\n  b (1)\\n  c (1)\\n  d (1)\\n\", r.facets.getTopChildren(10, \"dim\").toString());\n    assertEquals(\"dim/a (3)\\n  x (1)\\n  y (1)\\n  z (1)\\n\", r.facets.getTopChildren(10, \"dim\", \"a\").toString());\n\n    IOUtils.close(searcher.getIndexReader(), taxoReader, writer, taxoWriter, dir, taxoDir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"21d36d0db865f7b84026b447bec653469a6e66df","date":1385495602,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/TestDrillSideways#testMultipleRequestsPerDim().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/simple/TestSimpleDrillSideways#testMultipleRequestsPerDim().mjava","sourceNew":"  public void testMultipleRequestsPerDim() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    FacetsConfig config = new FacetsConfig(taxoWriter);\n    config.setHierarchical(\"dim\", true);\n\n    Document doc = new Document();\n    doc.add(new FacetField(\"dim\", \"a\", \"x\"));\n    writer.addDocument(config.build(doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"a\", \"y\"));\n    writer.addDocument(config.build(doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"a\", \"z\"));\n    writer.addDocument(config.build(doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"b\"));\n    writer.addDocument(config.build(doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"c\"));\n    writer.addDocument(config.build(doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"d\"));\n    writer.addDocument(config.build(doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n\n    //System.out.println(\"searcher=\" + searcher);\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    DrillDownQuery ddq = new DrillDownQuery(config);\n    ddq.add(\"dim\", \"a\");\n    DrillSidewaysResult r = new DrillSideways(searcher, config, taxoReader).search(null, ddq, 10);\n\n    assertEquals(3, r.hits.totalHits);\n    assertEquals(\"value=6 childCount=4\\n  a (3)\\n  b (1)\\n  c (1)\\n  d (1)\\n\", r.facets.getTopChildren(10, \"dim\").toString());\n    assertEquals(\"value=3 childCount=3\\n  x (1)\\n  y (1)\\n  z (1)\\n\", r.facets.getTopChildren(10, \"dim\", \"a\").toString());\n\n    IOUtils.close(searcher.getIndexReader(), taxoReader, writer, taxoWriter, dir, taxoDir);\n  }\n\n","sourceOld":"  public void testMultipleRequestsPerDim() throws Exception {\n    Directory dir = newDirectory();\n    Directory taxoDir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    // Writes facet ords to a separate directory from the\n    // main index:\n    DirectoryTaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir, IndexWriterConfig.OpenMode.CREATE);\n\n    FacetsConfig config = new FacetsConfig(taxoWriter);\n    config.setHierarchical(\"dim\", true);\n\n    Document doc = new Document();\n    doc.add(new FacetField(\"dim\", \"a\", \"x\"));\n    writer.addDocument(config.build(doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"a\", \"y\"));\n    writer.addDocument(config.build(doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"a\", \"z\"));\n    writer.addDocument(config.build(doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"b\"));\n    writer.addDocument(config.build(doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"c\"));\n    writer.addDocument(config.build(doc));\n\n    doc = new Document();\n    doc.add(new FacetField(\"dim\", \"d\"));\n    writer.addDocument(config.build(doc));\n\n    // NRT open\n    IndexSearcher searcher = newSearcher(writer.getReader());\n\n    //System.out.println(\"searcher=\" + searcher);\n\n    // NRT open\n    TaxonomyReader taxoReader = new DirectoryTaxonomyReader(taxoWriter);\n\n    SimpleDrillDownQuery ddq = new SimpleDrillDownQuery(config);\n    ddq.add(\"dim\", \"a\");\n    SimpleDrillSidewaysResult r = new SimpleDrillSideways(searcher, config, taxoReader).search(null, ddq, 10);\n\n    assertEquals(3, r.hits.totalHits);\n    assertEquals(\"value=6 childCount=4\\n  a (3)\\n  b (1)\\n  c (1)\\n  d (1)\\n\", r.facets.getTopChildren(10, \"dim\").toString());\n    assertEquals(\"value=3 childCount=3\\n  x (1)\\n  y (1)\\n  z (1)\\n\", r.facets.getTopChildren(10, \"dim\", \"a\").toString());\n\n    IOUtils.close(searcher.getIndexReader(), taxoReader, writer, taxoWriter, dir, taxoDir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"19f5022544a8fc895776356d1b35a4b46d05945c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"21d36d0db865f7b84026b447bec653469a6e66df":["f01616d06510fc630b6ef0ec324bdebc2fc49b3c"],"f01616d06510fc630b6ef0ec324bdebc2fc49b3c":["ae75def1e2525383b6e1397ed97c44387da9941c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ae75def1e2525383b6e1397ed97c44387da9941c":["19f5022544a8fc895776356d1b35a4b46d05945c"]},"commit2Childs":{"19f5022544a8fc895776356d1b35a4b46d05945c":["ae75def1e2525383b6e1397ed97c44387da9941c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["19f5022544a8fc895776356d1b35a4b46d05945c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"21d36d0db865f7b84026b447bec653469a6e66df":[],"f01616d06510fc630b6ef0ec324bdebc2fc49b3c":["21d36d0db865f7b84026b447bec653469a6e66df"],"ae75def1e2525383b6e1397ed97c44387da9941c":["f01616d06510fc630b6ef0ec324bdebc2fc49b3c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["21d36d0db865f7b84026b447bec653469a6e66df","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}