{"path":"solr/src/java/org/apache/solr/search/ReturnFields#addField(String,String,DocTransformers,SolrQueryRequest).mjava","commits":[{"id":"c1c76c72faecc7c9b683ad67e99240c975ee37b3","date":1301109514,"type":0,"author":"Ryan McKinley","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/search/ReturnFields#addField(String,String,DocTransformers,SolrQueryRequest).mjava","pathOld":"/dev/null","sourceNew":"  private void addField( String field, String key, DocTransformers augmenters, SolrQueryRequest req )\n  {\n    String disp = (key==null) ? field : key;\n    fields.add( field ); // need to put in the map to maintain order for things like CSVResponseWriter\n    okFieldNames.add( field );\n    okFieldNames.add( key );\n    // a valid field name\n    if(SCORE.equals(field)) {\n      _wantsScore = true;\n      augmenters.addTransformer( new ScoreAugmenter( disp ) );\n    }\n    else if( field.charAt(0)=='_'&& field.charAt(field.length()-1)=='_' ) {\n      String name = field;\n      String args = null;\n      int idx = field.indexOf( ':' );\n      if( idx > 0 ) {\n        name = field.substring(1,idx);\n        args = field.substring(idx+1,field.length()-1);\n      }\n      else {\n        name = field.substring(1,field.length()-1 );\n      }\n\n      TransformerFactory factory = req.getCore().getTransformerFactory( name );\n      if( factory != null ) {\n        augmenters.addTransformer( factory.create(disp, args) );\n      }\n      else {\n        // unknown field?\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d619839baa8ce5503e496b94a9e42ad6f079293f","date":1301309428,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/search/ReturnFields#addField(String,String,DocTransformers,SolrQueryRequest).mjava","pathOld":"/dev/null","sourceNew":"  private void addField( String field, String key, DocTransformers augmenters, SolrQueryRequest req )\n  {\n    String disp = (key==null) ? field : key;\n    fields.add( field ); // need to put in the map to maintain order for things like CSVResponseWriter\n    okFieldNames.add( field );\n    okFieldNames.add( key );\n    // a valid field name\n    if(SCORE.equals(field)) {\n      _wantsScore = true;\n      augmenters.addTransformer( new ScoreAugmenter( disp ) );\n    }\n    else if( field.charAt(0)=='_'&& field.charAt(field.length()-1)=='_' ) {\n      String name = field;\n      String args = null;\n      int idx = field.indexOf( ':' );\n      if( idx > 0 ) {\n        name = field.substring(1,idx);\n        args = field.substring(idx+1,field.length()-1);\n      }\n      else {\n        name = field.substring(1,field.length()-1 );\n      }\n\n      TransformerFactory factory = req.getCore().getTransformerFactory( name );\n      if( factory != null ) {\n        augmenters.addTransformer( factory.create(disp, args) );\n      }\n      else {\n        // unknown field?\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"48aa618c0cc38ad9b6442b46f9778288da9a81d6","date":1301427637,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/search/ReturnFields#addField(String,String,DocTransformers,SolrQueryRequest).mjava","pathOld":"solr/src/java/org/apache/solr/search/ReturnFields#addField(String,String,DocTransformers,SolrQueryRequest).mjava","sourceNew":"  private void addField( String field, String key, DocTransformers augmenters, SolrQueryRequest req )\n  {\n    String disp = (key==null) ? field : key;\n    fields.add( field ); // need to put in the map to maintain order for things like CSVResponseWriter\n    okFieldNames.add( field );\n    okFieldNames.add( key );\n    // a valid field name\n    if(SCORE.equals(field)) {\n      _wantsScore = true;\n      augmenters.addTransformer( new ScoreAugmenter( disp ) );\n    }\n    else if( field.charAt(0)=='_'&& field.charAt(field.length()-1)=='_' ) {\n      String name = field;\n      String args = null;\n      int idx = field.indexOf( ':' );\n      if( idx > 0 ) {\n        name = field.substring(1,idx);\n        args = field.substring(idx+1,field.length()-1);\n      }\n      else {\n        name = field.substring(1,field.length()-1 );\n      }\n\n      TransformerFactory factory = req.getCore().getTransformerFactory( name );\n      if( factory != null ) {\n        augmenters.addTransformer( factory.create(disp, args, req) );\n      }\n      else {\n        // unknown field?\n      }\n    }\n  }\n\n","sourceOld":"  private void addField( String field, String key, DocTransformers augmenters, SolrQueryRequest req )\n  {\n    String disp = (key==null) ? field : key;\n    fields.add( field ); // need to put in the map to maintain order for things like CSVResponseWriter\n    okFieldNames.add( field );\n    okFieldNames.add( key );\n    // a valid field name\n    if(SCORE.equals(field)) {\n      _wantsScore = true;\n      augmenters.addTransformer( new ScoreAugmenter( disp ) );\n    }\n    else if( field.charAt(0)=='_'&& field.charAt(field.length()-1)=='_' ) {\n      String name = field;\n      String args = null;\n      int idx = field.indexOf( ':' );\n      if( idx > 0 ) {\n        name = field.substring(1,idx);\n        args = field.substring(idx+1,field.length()-1);\n      }\n      else {\n        name = field.substring(1,field.length()-1 );\n      }\n\n      TransformerFactory factory = req.getCore().getTransformerFactory( name );\n      if( factory != null ) {\n        augmenters.addTransformer( factory.create(disp, args) );\n      }\n      else {\n        // unknown field?\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c0ef0193974807e4bddf5432a6b0287fe4d6c9df","date":1301476645,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/search/ReturnFields#addField(String,String,DocTransformers,SolrQueryRequest).mjava","pathOld":"/dev/null","sourceNew":"  private void addField( String field, String key, DocTransformers augmenters, SolrQueryRequest req )\n  {\n    String disp = (key==null) ? field : key;\n    fields.add( field ); // need to put in the map to maintain order for things like CSVResponseWriter\n    okFieldNames.add( field );\n    okFieldNames.add( key );\n    // a valid field name\n    if(SCORE.equals(field)) {\n      _wantsScore = true;\n      augmenters.addTransformer( new ScoreAugmenter( disp ) );\n    }\n    else if( field.charAt(0)=='_'&& field.charAt(field.length()-1)=='_' ) {\n      String name = field;\n      String args = null;\n      int idx = field.indexOf( ':' );\n      if( idx > 0 ) {\n        name = field.substring(1,idx);\n        args = field.substring(idx+1,field.length()-1);\n      }\n      else {\n        name = field.substring(1,field.length()-1 );\n      }\n\n      TransformerFactory factory = req.getCore().getTransformerFactory( name );\n      if( factory != null ) {\n        augmenters.addTransformer( factory.create(disp, args) );\n      }\n      else {\n        // unknown field?\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e34776ee7d033ba66c93ae69ab2477387db81136","date":1301693114,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/search/ReturnFields#addField(String,String,DocTransformers,SolrQueryRequest).mjava","pathOld":"solr/src/java/org/apache/solr/search/ReturnFields#addField(String,String,DocTransformers,SolrQueryRequest).mjava","sourceNew":"  private void addField( String field, String key, DocTransformers augmenters, SolrQueryRequest req )\n  {\n    String disp = (key==null) ? field : key;\n    fields.add(field); // need to put in the map to maintain order for things like CSVResponseWriter\n    okFieldNames.add( field );\n    okFieldNames.add( key );\n    // a valid field name\n    if(SCORE.equals(field)) {\n      _wantsScore = true;\n      augmenters.addTransformer( new ScoreAugmenter( disp ) );\n    }\n    else if( field.charAt(0)=='_'&& field.charAt(field.length()-1)=='_' ) {\n      String name = field;\n      String args = null;\n      int idx = field.indexOf( ':' );\n      if( idx > 0 ) {\n        name = field.substring(1,idx);\n        args = field.substring(idx+1,field.length()-1);\n      }\n      else {\n        name = field.substring(1,field.length()-1 );\n      }\n\n      TransformerFactory factory = req.getCore().getTransformerFactory( name );\n      if( factory != null ) {\n        augmenters.addTransformer( factory.create(disp, args, req) );\n      }\n      else {\n        // unknown field?\n      }\n    }\n  }\n\n","sourceOld":"  private void addField( String field, String key, DocTransformers augmenters, SolrQueryRequest req )\n  {\n    String disp = (key==null) ? field : key;\n    fields.add( field ); // need to put in the map to maintain order for things like CSVResponseWriter\n    okFieldNames.add( field );\n    okFieldNames.add( key );\n    // a valid field name\n    if(SCORE.equals(field)) {\n      _wantsScore = true;\n      augmenters.addTransformer( new ScoreAugmenter( disp ) );\n    }\n    else if( field.charAt(0)=='_'&& field.charAt(field.length()-1)=='_' ) {\n      String name = field;\n      String args = null;\n      int idx = field.indexOf( ':' );\n      if( idx > 0 ) {\n        name = field.substring(1,idx);\n        args = field.substring(idx+1,field.length()-1);\n      }\n      else {\n        name = field.substring(1,field.length()-1 );\n      }\n\n      TransformerFactory factory = req.getCore().getTransformerFactory( name );\n      if( factory != null ) {\n        augmenters.addTransformer( factory.create(disp, args, req) );\n      }\n      else {\n        // unknown field?\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"45669a651c970812a680841b97a77cce06af559f","date":1301922222,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/search/ReturnFields#addField(String,String,DocTransformers,SolrQueryRequest).mjava","pathOld":"solr/src/java/org/apache/solr/search/ReturnFields#addField(String,String,DocTransformers,SolrQueryRequest).mjava","sourceNew":"  private void addField( String field, String key, DocTransformers augmenters, SolrQueryRequest req )\n  {\n    String disp = (key==null) ? field : key;\n    fields.add(field); // need to put in the map to maintain order for things like CSVResponseWriter\n    okFieldNames.add( field );\n    okFieldNames.add( key );\n    // a valid field name\n    if(SCORE.equals(field)) {\n      _wantsScore = true;\n      augmenters.addTransformer( new ScoreAugmenter( disp ) );\n    }\n    else if( field.charAt(0)=='_'&& field.charAt(field.length()-1)=='_' ) {\n      String name = field;\n      String args = null;\n      int idx = field.indexOf( ':' );\n      if( idx > 0 ) {\n        name = field.substring(1,idx);\n        args = field.substring(idx+1,field.length()-1);\n      }\n      else {\n        name = field.substring(1,field.length()-1 );\n      }\n\n      TransformerFactory factory = req.getCore().getTransformerFactory( name );\n      if( factory != null ) {\n        augmenters.addTransformer( factory.create(disp, args, req) );\n      }\n      else {\n        // unknown field?\n      }\n    }\n  }\n\n","sourceOld":"  private void addField( String field, String key, DocTransformers augmenters, SolrQueryRequest req )\n  {\n    String disp = (key==null) ? field : key;\n    fields.add( field ); // need to put in the map to maintain order for things like CSVResponseWriter\n    okFieldNames.add( field );\n    okFieldNames.add( key );\n    // a valid field name\n    if(SCORE.equals(field)) {\n      _wantsScore = true;\n      augmenters.addTransformer( new ScoreAugmenter( disp ) );\n    }\n    else if( field.charAt(0)=='_'&& field.charAt(field.length()-1)=='_' ) {\n      String name = field;\n      String args = null;\n      int idx = field.indexOf( ':' );\n      if( idx > 0 ) {\n        name = field.substring(1,idx);\n        args = field.substring(idx+1,field.length()-1);\n      }\n      else {\n        name = field.substring(1,field.length()-1 );\n      }\n\n      TransformerFactory factory = req.getCore().getTransformerFactory( name );\n      if( factory != null ) {\n        augmenters.addTransformer( factory.create(disp, args) );\n      }\n      else {\n        // unknown field?\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/search/ReturnFields#addField(String,String,DocTransformers,SolrQueryRequest).mjava","pathOld":"solr/src/java/org/apache/solr/search/ReturnFields#addField(String,String,DocTransformers,SolrQueryRequest).mjava","sourceNew":"  private void addField( String field, String key, DocTransformers augmenters, SolrQueryRequest req )\n  {\n    String disp = (key==null) ? field : key;\n    fields.add(field); // need to put in the map to maintain order for things like CSVResponseWriter\n    okFieldNames.add( field );\n    okFieldNames.add( key );\n    // a valid field name\n    if(SCORE.equals(field)) {\n      _wantsScore = true;\n      augmenters.addTransformer( new ScoreAugmenter( disp ) );\n    }\n    else if( field.charAt(0)=='_'&& field.charAt(field.length()-1)=='_' ) {\n      String name = field;\n      String args = null;\n      int idx = field.indexOf( ':' );\n      if( idx > 0 ) {\n        name = field.substring(1,idx);\n        args = field.substring(idx+1,field.length()-1);\n      }\n      else {\n        name = field.substring(1,field.length()-1 );\n      }\n\n      TransformerFactory factory = req.getCore().getTransformerFactory( name );\n      if( factory != null ) {\n        augmenters.addTransformer( factory.create(disp, args, req) );\n      }\n      else {\n        // unknown field?\n      }\n    }\n  }\n\n","sourceOld":"  private void addField( String field, String key, DocTransformers augmenters, SolrQueryRequest req )\n  {\n    String disp = (key==null) ? field : key;\n    fields.add( field ); // need to put in the map to maintain order for things like CSVResponseWriter\n    okFieldNames.add( field );\n    okFieldNames.add( key );\n    // a valid field name\n    if(SCORE.equals(field)) {\n      _wantsScore = true;\n      augmenters.addTransformer( new ScoreAugmenter( disp ) );\n    }\n    else if( field.charAt(0)=='_'&& field.charAt(field.length()-1)=='_' ) {\n      String name = field;\n      String args = null;\n      int idx = field.indexOf( ':' );\n      if( idx > 0 ) {\n        name = field.substring(1,idx);\n        args = field.substring(idx+1,field.length()-1);\n      }\n      else {\n        name = field.substring(1,field.length()-1 );\n      }\n\n      TransformerFactory factory = req.getCore().getTransformerFactory( name );\n      if( factory != null ) {\n        augmenters.addTransformer( factory.create(disp, args) );\n      }\n      else {\n        // unknown field?\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/search/ReturnFields#addField(String,String,DocTransformers,SolrQueryRequest).mjava","pathOld":"solr/src/java/org/apache/solr/search/ReturnFields#addField(String,String,DocTransformers,SolrQueryRequest).mjava","sourceNew":"  private void addField( String field, String key, DocTransformers augmenters, SolrQueryRequest req )\n  {\n    String disp = (key==null) ? field : key;\n    fields.add(field); // need to put in the map to maintain order for things like CSVResponseWriter\n    okFieldNames.add( field );\n    okFieldNames.add( key );\n    // a valid field name\n    if(SCORE.equals(field)) {\n      _wantsScore = true;\n      augmenters.addTransformer( new ScoreAugmenter( disp ) );\n    }\n    else if( field.charAt(0)=='_'&& field.charAt(field.length()-1)=='_' ) {\n      String name = field;\n      String args = null;\n      int idx = field.indexOf( ':' );\n      if( idx > 0 ) {\n        name = field.substring(1,idx);\n        args = field.substring(idx+1,field.length()-1);\n      }\n      else {\n        name = field.substring(1,field.length()-1 );\n      }\n\n      TransformerFactory factory = req.getCore().getTransformerFactory( name );\n      if( factory != null ) {\n        augmenters.addTransformer( factory.create(disp, args, req) );\n      }\n      else {\n        // unknown field?\n      }\n    }\n  }\n\n","sourceOld":"  private void addField( String field, String key, DocTransformers augmenters, SolrQueryRequest req )\n  {\n    String disp = (key==null) ? field : key;\n    fields.add( field ); // need to put in the map to maintain order for things like CSVResponseWriter\n    okFieldNames.add( field );\n    okFieldNames.add( key );\n    // a valid field name\n    if(SCORE.equals(field)) {\n      _wantsScore = true;\n      augmenters.addTransformer( new ScoreAugmenter( disp ) );\n    }\n    else if( field.charAt(0)=='_'&& field.charAt(field.length()-1)=='_' ) {\n      String name = field;\n      String args = null;\n      int idx = field.indexOf( ':' );\n      if( idx > 0 ) {\n        name = field.substring(1,idx);\n        args = field.substring(idx+1,field.length()-1);\n      }\n      else {\n        name = field.substring(1,field.length()-1 );\n      }\n\n      TransformerFactory factory = req.getCore().getTransformerFactory( name );\n      if( factory != null ) {\n        augmenters.addTransformer( factory.create(disp, args, req) );\n      }\n      else {\n        // unknown field?\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"785c5e6bc8889b740445ed7f2b278a442ad92f7f","date":1307558822,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/search/ReturnFields#addField(String,String,DocTransformers,SolrQueryRequest).mjava","pathOld":"solr/src/java/org/apache/solr/search/ReturnFields#addField(String,String,DocTransformers,SolrQueryRequest).mjava","sourceNew":"  private void addField( String field, String key, DocTransformers augmenters, SolrQueryRequest req )\n  {\n    String disp = (key==null) ? field : key;\n    fields.add(field); // need to put in the map to maintain order for things like CSVResponseWriter\n    okFieldNames.add( field );\n    okFieldNames.add( key );\n    // a valid field name\n    if(SCORE.equals(field)) {\n      _wantsScore = true;\n      augmenters.addTransformer( new ScoreAugmenter( disp ) );\n    }\n  }\n\n","sourceOld":"  private void addField( String field, String key, DocTransformers augmenters, SolrQueryRequest req )\n  {\n    String disp = (key==null) ? field : key;\n    fields.add(field); // need to put in the map to maintain order for things like CSVResponseWriter\n    okFieldNames.add( field );\n    okFieldNames.add( key );\n    // a valid field name\n    if(SCORE.equals(field)) {\n      _wantsScore = true;\n      augmenters.addTransformer( new ScoreAugmenter( disp ) );\n    }\n    else if( field.charAt(0)=='_'&& field.charAt(field.length()-1)=='_' ) {\n      String name = field;\n      String args = null;\n      int idx = field.indexOf( ':' );\n      if( idx > 0 ) {\n        name = field.substring(1,idx);\n        args = field.substring(idx+1,field.length()-1);\n      }\n      else {\n        name = field.substring(1,field.length()-1 );\n      }\n\n      TransformerFactory factory = req.getCore().getTransformerFactory( name );\n      if( factory != null ) {\n        augmenters.addTransformer( factory.create(disp, args, req) );\n      }\n      else {\n        // unknown field?\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"77cf4379b2824f6ea34b091c495d6e95c38ff9e2","date":1307610475,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/search/ReturnFields#addField(String,String,DocTransformers,SolrQueryRequest).mjava","pathOld":"solr/src/java/org/apache/solr/search/ReturnFields#addField(String,String,DocTransformers,SolrQueryRequest).mjava","sourceNew":"  private void addField( String field, String key, DocTransformers augmenters, SolrQueryRequest req )\n  {\n    String disp = (key==null) ? field : key;\n    fields.add(field); // need to put in the map to maintain order for things like CSVResponseWriter\n    okFieldNames.add( field );\n    okFieldNames.add( key );\n    // a valid field name\n    if(SCORE.equals(field)) {\n      _wantsScore = true;\n      augmenters.addTransformer( new ScoreAugmenter( disp ) );\n    }\n  }\n\n","sourceOld":"  private void addField( String field, String key, DocTransformers augmenters, SolrQueryRequest req )\n  {\n    String disp = (key==null) ? field : key;\n    fields.add(field); // need to put in the map to maintain order for things like CSVResponseWriter\n    okFieldNames.add( field );\n    okFieldNames.add( key );\n    // a valid field name\n    if(SCORE.equals(field)) {\n      _wantsScore = true;\n      augmenters.addTransformer( new ScoreAugmenter( disp ) );\n    }\n    else if( field.charAt(0)=='_'&& field.charAt(field.length()-1)=='_' ) {\n      String name = field;\n      String args = null;\n      int idx = field.indexOf( ':' );\n      if( idx > 0 ) {\n        name = field.substring(1,idx);\n        args = field.substring(idx+1,field.length()-1);\n      }\n      else {\n        name = field.substring(1,field.length()-1 );\n      }\n\n      TransformerFactory factory = req.getCore().getTransformerFactory( name );\n      if( factory != null ) {\n        augmenters.addTransformer( factory.create(disp, args, req) );\n      }\n      else {\n        // unknown field?\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","date":1307729864,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/search/ReturnFields#addField(String,String,DocTransformers,SolrQueryRequest).mjava","pathOld":"solr/src/java/org/apache/solr/search/ReturnFields#addField(String,String,DocTransformers,SolrQueryRequest).mjava","sourceNew":"  private void addField( String field, String key, DocTransformers augmenters, SolrQueryRequest req )\n  {\n    String disp = (key==null) ? field : key;\n    fields.add(field); // need to put in the map to maintain order for things like CSVResponseWriter\n    okFieldNames.add( field );\n    okFieldNames.add( key );\n    // a valid field name\n    if(SCORE.equals(field)) {\n      _wantsScore = true;\n      augmenters.addTransformer( new ScoreAugmenter( disp ) );\n    }\n  }\n\n","sourceOld":"  private void addField( String field, String key, DocTransformers augmenters, SolrQueryRequest req )\n  {\n    String disp = (key==null) ? field : key;\n    fields.add(field); // need to put in the map to maintain order for things like CSVResponseWriter\n    okFieldNames.add( field );\n    okFieldNames.add( key );\n    // a valid field name\n    if(SCORE.equals(field)) {\n      _wantsScore = true;\n      augmenters.addTransformer( new ScoreAugmenter( disp ) );\n    }\n    else if( field.charAt(0)=='_'&& field.charAt(field.length()-1)=='_' ) {\n      String name = field;\n      String args = null;\n      int idx = field.indexOf( ':' );\n      if( idx > 0 ) {\n        name = field.substring(1,idx);\n        args = field.substring(idx+1,field.length()-1);\n      }\n      else {\n        name = field.substring(1,field.length()-1 );\n      }\n\n      TransformerFactory factory = req.getCore().getTransformerFactory( name );\n      if( factory != null ) {\n        augmenters.addTransformer( factory.create(disp, args, req) );\n      }\n      else {\n        // unknown field?\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/ReturnFields#addField(String,String,DocTransformers,SolrQueryRequest).mjava","pathOld":"solr/src/java/org/apache/solr/search/ReturnFields#addField(String,String,DocTransformers,SolrQueryRequest).mjava","sourceNew":"  private void addField( String field, String key, DocTransformers augmenters, SolrQueryRequest req )\n  {\n    String disp = (key==null) ? field : key;\n    fields.add(field); // need to put in the map to maintain order for things like CSVResponseWriter\n    okFieldNames.add( field );\n    okFieldNames.add( key );\n    // a valid field name\n    if(SCORE.equals(field)) {\n      _wantsScore = true;\n      augmenters.addTransformer( new ScoreAugmenter( disp ) );\n    }\n  }\n\n","sourceOld":"  private void addField( String field, String key, DocTransformers augmenters, SolrQueryRequest req )\n  {\n    String disp = (key==null) ? field : key;\n    fields.add(field); // need to put in the map to maintain order for things like CSVResponseWriter\n    okFieldNames.add( field );\n    okFieldNames.add( key );\n    // a valid field name\n    if(SCORE.equals(field)) {\n      _wantsScore = true;\n      augmenters.addTransformer( new ScoreAugmenter( disp ) );\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/ReturnFields#addField(String,String,DocTransformers,SolrQueryRequest).mjava","pathOld":"solr/src/java/org/apache/solr/search/ReturnFields#addField(String,String,DocTransformers,SolrQueryRequest).mjava","sourceNew":"  private void addField( String field, String key, DocTransformers augmenters, SolrQueryRequest req )\n  {\n    String disp = (key==null) ? field : key;\n    fields.add(field); // need to put in the map to maintain order for things like CSVResponseWriter\n    okFieldNames.add( field );\n    okFieldNames.add( key );\n    // a valid field name\n    if(SCORE.equals(field)) {\n      _wantsScore = true;\n      augmenters.addTransformer( new ScoreAugmenter( disp ) );\n    }\n  }\n\n","sourceOld":"  private void addField( String field, String key, DocTransformers augmenters, SolrQueryRequest req )\n  {\n    String disp = (key==null) ? field : key;\n    fields.add(field); // need to put in the map to maintain order for things like CSVResponseWriter\n    okFieldNames.add( field );\n    okFieldNames.add( key );\n    // a valid field name\n    if(SCORE.equals(field)) {\n      _wantsScore = true;\n      augmenters.addTransformer( new ScoreAugmenter( disp ) );\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/ReturnFields#addField(String,String,DocTransformers,SolrQueryRequest).mjava","pathOld":"solr/src/java/org/apache/solr/search/ReturnFields#addField(String,String,DocTransformers,SolrQueryRequest).mjava","sourceNew":"  private void addField( String field, String key, DocTransformers augmenters, SolrQueryRequest req )\n  {\n    String disp = (key==null) ? field : key;\n    fields.add(field); // need to put in the map to maintain order for things like CSVResponseWriter\n    okFieldNames.add( field );\n    okFieldNames.add( key );\n    // a valid field name\n    if(SCORE.equals(field)) {\n      _wantsScore = true;\n      augmenters.addTransformer( new ScoreAugmenter( disp ) );\n    }\n  }\n\n","sourceOld":"  private void addField( String field, String key, DocTransformers augmenters, SolrQueryRequest req )\n  {\n    String disp = (key==null) ? field : key;\n    fields.add(field); // need to put in the map to maintain order for things like CSVResponseWriter\n    okFieldNames.add( field );\n    okFieldNames.add( key );\n    // a valid field name\n    if(SCORE.equals(field)) {\n      _wantsScore = true;\n      augmenters.addTransformer( new ScoreAugmenter( disp ) );\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655":["a3776dccca01c11e7046323cfad46a3b4a471233","785c5e6bc8889b740445ed7f2b278a442ad92f7f"],"48aa618c0cc38ad9b6442b46f9778288da9a81d6":["c1c76c72faecc7c9b683ad67e99240c975ee37b3"],"c26f00b574427b55127e869b935845554afde1fa":["785c5e6bc8889b740445ed7f2b278a442ad92f7f","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"c1c76c72faecc7c9b683ad67e99240c975ee37b3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["d619839baa8ce5503e496b94a9e42ad6f079293f","e34776ee7d033ba66c93ae69ab2477387db81136"],"e34776ee7d033ba66c93ae69ab2477387db81136":["48aa618c0cc38ad9b6442b46f9778288da9a81d6"],"785c5e6bc8889b740445ed7f2b278a442ad92f7f":["e34776ee7d033ba66c93ae69ab2477387db81136"],"c0ef0193974807e4bddf5432a6b0287fe4d6c9df":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c1c76c72faecc7c9b683ad67e99240c975ee37b3"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655"],"d619839baa8ce5503e496b94a9e42ad6f079293f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c1c76c72faecc7c9b683ad67e99240c975ee37b3"],"a3776dccca01c11e7046323cfad46a3b4a471233":["48aa618c0cc38ad9b6442b46f9778288da9a81d6","e34776ee7d033ba66c93ae69ab2477387db81136"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"77cf4379b2824f6ea34b091c495d6e95c38ff9e2":["135621f3a0670a9394eb563224a3b76cc4dddc0f","785c5e6bc8889b740445ed7f2b278a442ad92f7f"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["785c5e6bc8889b740445ed7f2b278a442ad92f7f"],"45669a651c970812a680841b97a77cce06af559f":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df","e34776ee7d033ba66c93ae69ab2477387db81136"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c26f00b574427b55127e869b935845554afde1fa"]},"commit2Childs":{"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655":["c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"48aa618c0cc38ad9b6442b46f9778288da9a81d6":["e34776ee7d033ba66c93ae69ab2477387db81136","a3776dccca01c11e7046323cfad46a3b4a471233"],"c26f00b574427b55127e869b935845554afde1fa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c1c76c72faecc7c9b683ad67e99240c975ee37b3":["48aa618c0cc38ad9b6442b46f9778288da9a81d6","c0ef0193974807e4bddf5432a6b0287fe4d6c9df","d619839baa8ce5503e496b94a9e42ad6f079293f"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["77cf4379b2824f6ea34b091c495d6e95c38ff9e2"],"e34776ee7d033ba66c93ae69ab2477387db81136":["135621f3a0670a9394eb563224a3b76cc4dddc0f","785c5e6bc8889b740445ed7f2b278a442ad92f7f","a3776dccca01c11e7046323cfad46a3b4a471233","45669a651c970812a680841b97a77cce06af559f"],"785c5e6bc8889b740445ed7f2b278a442ad92f7f":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","c26f00b574427b55127e869b935845554afde1fa","77cf4379b2824f6ea34b091c495d6e95c38ff9e2","a258fbb26824fd104ed795e5d9033d2d040049ee"],"c0ef0193974807e4bddf5432a6b0287fe4d6c9df":["45669a651c970812a680841b97a77cce06af559f"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"d619839baa8ce5503e496b94a9e42ad6f079293f":["135621f3a0670a9394eb563224a3b76cc4dddc0f"],"a3776dccca01c11e7046323cfad46a3b4a471233":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c1c76c72faecc7c9b683ad67e99240c975ee37b3","c0ef0193974807e4bddf5432a6b0287fe4d6c9df","d619839baa8ce5503e496b94a9e42ad6f079293f"],"77cf4379b2824f6ea34b091c495d6e95c38ff9e2":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"45669a651c970812a680841b97a77cce06af559f":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["77cf4379b2824f6ea34b091c495d6e95c38ff9e2","a258fbb26824fd104ed795e5d9033d2d040049ee","45669a651c970812a680841b97a77cce06af559f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}