{"path":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/eval/AscEvaluatorTest#doubleWithIntegersSortTest().mjava","commits":[{"id":"ba1e7de64990e3928b90142a52fb92eeff556475","date":1503713257,"type":0,"author":"Dennis Gove","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/eval/AscEvaluatorTest#doubleWithIntegersSortTest().mjava","pathOld":"/dev/null","sourceNew":"    @Test\n    public void doubleWithIntegersSortTest() throws Exception{\n      StreamEvaluator evaluator = factory.constructEvaluator(\"asc(a)\");\n      Object result;\n      \n      values.clear();\n      values.put(\"a\", Arrays.asList(2.3, 2.1, 2.0, 2.7, 2.6, 2.5, 3));\n      result = evaluator.evaluate(new Tuple(values));\n      Assert.assertTrue(result instanceof List<?>);\n      Assert.assertEquals(7, ((List<?>)result).size());\n      checkOrder(Arrays.asList(2L, 2.1, 2.3, 2.5, 2.6, 2.7, 3L), (List<Object>)result);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"45c28dbb559366e1f4ef8077346552bfb3f7ecf6","date":1503738439,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/eval/AscEvaluatorTest#doubleWithIntegersSortTest().mjava","pathOld":"/dev/null","sourceNew":"    @Test\n    public void doubleWithIntegersSortTest() throws Exception{\n      StreamEvaluator evaluator = factory.constructEvaluator(\"asc(a)\");\n      Object result;\n      \n      values.clear();\n      values.put(\"a\", Arrays.asList(2.3, 2.1, 2.0, 2.7, 2.6, 2.5, 3));\n      result = evaluator.evaluate(new Tuple(values));\n      Assert.assertTrue(result instanceof List<?>);\n      Assert.assertEquals(7, ((List<?>)result).size());\n      checkOrder(Arrays.asList(2L, 2.1, 2.3, 2.5, 2.6, 2.7, 3L), (List<Object>)result);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a7809d1d753b67f48b1a706e17034bf8b624ea3","date":1504366927,"type":0,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/eval/AscEvaluatorTest#doubleWithIntegersSortTest().mjava","pathOld":"/dev/null","sourceNew":"    @Test\n    public void doubleWithIntegersSortTest() throws Exception{\n      StreamEvaluator evaluator = factory.constructEvaluator(\"asc(a)\");\n      Object result;\n      \n      values.clear();\n      values.put(\"a\", Arrays.asList(2.3, 2.1, 2.0, 2.7, 2.6, 2.5, 3));\n      result = evaluator.evaluate(new Tuple(values));\n      Assert.assertTrue(result instanceof List<?>);\n      Assert.assertEquals(7, ((List<?>)result).size());\n      checkOrder(Arrays.asList(2L, 2.1, 2.3, 2.5, 2.6, 2.7, 3L), (List<Object>)result);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c3eb251dab40cb8cabcea8ed646a2c060d423f18","date":1570756765,"type":3,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/eval/AscEvaluatorTest#doubleWithIntegersSortTest().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/eval/AscEvaluatorTest#doubleWithIntegersSortTest().mjava","sourceNew":"    @Test\n    public void doubleWithIntegersSortTest() throws Exception{\n      StreamEvaluator evaluator = factory.constructEvaluator(\"asc(a)\");\n      Object result;\n      \n      values.clear();\n      values.put(\"a\", Arrays.asList(2.3, 2.1, 2.0, 2.7, 2.6, 2.5, 3));\n      result = evaluator.evaluate(new Tuple(values));\n      Assert.assertTrue(result instanceof List<?>);\n      Assert.assertEquals(7, ((List<?>)result).size());\n      checkOrder(Arrays.asList(2D, 2.1, 2.3, 2.5, 2.6, 2.7, 3D), (List<Object>)result);\n    }\n\n","sourceOld":"    @Test\n    public void doubleWithIntegersSortTest() throws Exception{\n      StreamEvaluator evaluator = factory.constructEvaluator(\"asc(a)\");\n      Object result;\n      \n      values.clear();\n      values.put(\"a\", Arrays.asList(2.3, 2.1, 2.0, 2.7, 2.6, 2.5, 3));\n      result = evaluator.evaluate(new Tuple(values));\n      Assert.assertTrue(result instanceof List<?>);\n      Assert.assertEquals(7, ((List<?>)result).size());\n      checkOrder(Arrays.asList(2L, 2.1, 2.3, 2.5, 2.6, 2.7, 3L), (List<Object>)result);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b0b597c65628ca9e73913a07e81691f8229bae35","date":1571224353,"type":3,"author":"jimczi","isMerge":true,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/eval/AscEvaluatorTest#doubleWithIntegersSortTest().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/eval/AscEvaluatorTest#doubleWithIntegersSortTest().mjava","sourceNew":"    @Test\n    public void doubleWithIntegersSortTest() throws Exception{\n      StreamEvaluator evaluator = factory.constructEvaluator(\"asc(a)\");\n      Object result;\n      \n      values.clear();\n      values.put(\"a\", Arrays.asList(2.3, 2.1, 2.0, 2.7, 2.6, 2.5, 3));\n      result = evaluator.evaluate(new Tuple(values));\n      Assert.assertTrue(result instanceof List<?>);\n      Assert.assertEquals(7, ((List<?>)result).size());\n      checkOrder(Arrays.asList(2D, 2.1, 2.3, 2.5, 2.6, 2.7, 3D), (List<Object>)result);\n    }\n\n","sourceOld":"    @Test\n    public void doubleWithIntegersSortTest() throws Exception{\n      StreamEvaluator evaluator = factory.constructEvaluator(\"asc(a)\");\n      Object result;\n      \n      values.clear();\n      values.put(\"a\", Arrays.asList(2.3, 2.1, 2.0, 2.7, 2.6, 2.5, 3));\n      result = evaluator.evaluate(new Tuple(values));\n      Assert.assertTrue(result instanceof List<?>);\n      Assert.assertEquals(7, ((List<?>)result).size());\n      checkOrder(Arrays.asList(2L, 2.1, 2.3, 2.5, 2.6, 2.7, 3L), (List<Object>)result);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9ba1b632c041956c93c41aa1143d16a567014891","date":1592328473,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/eval/AscEvaluatorTest#doubleWithIntegersSortTest().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/eval/AscEvaluatorTest#doubleWithIntegersSortTest().mjava","sourceNew":"    @Test\n    @SuppressWarnings({\"unchecked\"})\n    public void doubleWithIntegersSortTest() throws Exception{\n      StreamEvaluator evaluator = factory.constructEvaluator(\"asc(a)\");\n      Object result;\n      \n      values.clear();\n      values.put(\"a\", Arrays.asList(2.3, 2.1, 2.0, 2.7, 2.6, 2.5, 3));\n      result = evaluator.evaluate(new Tuple(values));\n      Assert.assertTrue(result instanceof List<?>);\n      Assert.assertEquals(7, ((List<?>)result).size());\n      checkOrder(Arrays.asList(2D, 2.1, 2.3, 2.5, 2.6, 2.7, 3D), (List<Object>)result);\n    }\n\n","sourceOld":"    @Test\n    public void doubleWithIntegersSortTest() throws Exception{\n      StreamEvaluator evaluator = factory.constructEvaluator(\"asc(a)\");\n      Object result;\n      \n      values.clear();\n      values.put(\"a\", Arrays.asList(2.3, 2.1, 2.0, 2.7, 2.6, 2.5, 3));\n      result = evaluator.evaluate(new Tuple(values));\n      Assert.assertTrue(result instanceof List<?>);\n      Assert.assertEquals(7, ((List<?>)result).size());\n      checkOrder(Arrays.asList(2D, 2.1, 2.3, 2.5, 2.6, 2.7, 3D), (List<Object>)result);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9ba1b632c041956c93c41aa1143d16a567014891":["c3eb251dab40cb8cabcea8ed646a2c060d423f18"],"3a7809d1d753b67f48b1a706e17034bf8b624ea3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","45c28dbb559366e1f4ef8077346552bfb3f7ecf6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"45c28dbb559366e1f4ef8077346552bfb3f7ecf6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ba1e7de64990e3928b90142a52fb92eeff556475"],"ba1e7de64990e3928b90142a52fb92eeff556475":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c3eb251dab40cb8cabcea8ed646a2c060d423f18":["45c28dbb559366e1f4ef8077346552bfb3f7ecf6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9ba1b632c041956c93c41aa1143d16a567014891"],"b0b597c65628ca9e73913a07e81691f8229bae35":["45c28dbb559366e1f4ef8077346552bfb3f7ecf6","c3eb251dab40cb8cabcea8ed646a2c060d423f18"]},"commit2Childs":{"9ba1b632c041956c93c41aa1143d16a567014891":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3a7809d1d753b67f48b1a706e17034bf8b624ea3":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a7809d1d753b67f48b1a706e17034bf8b624ea3","45c28dbb559366e1f4ef8077346552bfb3f7ecf6","ba1e7de64990e3928b90142a52fb92eeff556475"],"45c28dbb559366e1f4ef8077346552bfb3f7ecf6":["3a7809d1d753b67f48b1a706e17034bf8b624ea3","c3eb251dab40cb8cabcea8ed646a2c060d423f18","b0b597c65628ca9e73913a07e81691f8229bae35"],"ba1e7de64990e3928b90142a52fb92eeff556475":["45c28dbb559366e1f4ef8077346552bfb3f7ecf6"],"c3eb251dab40cb8cabcea8ed646a2c060d423f18":["9ba1b632c041956c93c41aa1143d16a567014891","b0b597c65628ca9e73913a07e81691f8229bae35"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"b0b597c65628ca9e73913a07e81691f8229bae35":[]},"heads":["3a7809d1d753b67f48b1a706e17034bf8b624ea3","cd5edd1f2b162a5cfa08efd17851a07373a96817","b0b597c65628ca9e73913a07e81691f8229bae35"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}