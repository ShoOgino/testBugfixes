{"path":"src/java/org/apache/lucene/analysis/StopFilter#incrementToken().mjava","commits":[{"id":"74a5e7f20b4a444da9df3b2c0f331fa7a1f64223","date":1227051709,"type":0,"author":"Michael Busch","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/StopFilter#incrementToken().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Returns the next input Token whose term() is not a stop word.\n   */\n  public final boolean incrementToken() throws IOException {\n    // return the first non-stop word found\n    int skippedPositions = 0;\n    while (input.incrementToken()) {\n      if (!stopWords.contains(termAtt.termBuffer(), 0, termAtt.termLength())) {\n        if (enablePositionIncrements) {\n          posIncrAtt.setPositionIncrement(posIncrAtt.getPositionIncrement() + skippedPositions);\n        }\n        return true;\n      }\n      skippedPositions += posIncrAtt.getPositionIncrement();\n    }\n    // reached EOS -- return null\n    return false;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4b41b991de69ba7b72d5e90cfcee25699a1a7fc9","date":1256127131,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/StopFilter#incrementToken().mjava","pathOld":"src/java/org/apache/lucene/analysis/StopFilter#incrementToken().mjava","sourceNew":"  /**\n   * Returns the next input Token whose term() is not a stop word.\n   */\n  public final boolean incrementToken() throws IOException {\n    // return the first non-stop word found\n    int skippedPositions = 0;\n    while (input.incrementToken()) {\n      if (!stopWords.contains(termAtt.termBuffer(), 0, termAtt.termLength())) {\n        if (enablePositionIncrements) {\n          posIncrAtt.setPositionIncrement(posIncrAtt.getPositionIncrement() + skippedPositions);\n        }\n        return true;\n      }\n      skippedPositions += posIncrAtt.getPositionIncrement();\n    }\n    // reached EOS -- return false\n    return false;\n  }\n\n","sourceOld":"  /**\n   * Returns the next input Token whose term() is not a stop word.\n   */\n  public final boolean incrementToken() throws IOException {\n    // return the first non-stop word found\n    int skippedPositions = 0;\n    while (input.incrementToken()) {\n      if (!stopWords.contains(termAtt.termBuffer(), 0, termAtt.termLength())) {\n        if (enablePositionIncrements) {\n          posIncrAtt.setPositionIncrement(posIncrAtt.getPositionIncrement() + skippedPositions);\n        }\n        return true;\n      }\n      skippedPositions += posIncrAtt.getPositionIncrement();\n    }\n    // reached EOS -- return null\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8a9e385641d717e641408d8fbbc62be8fc766357","date":1256746606,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/StopFilter#incrementToken().mjava","pathOld":"src/java/org/apache/lucene/analysis/StopFilter#incrementToken().mjava","sourceNew":"  /**\n   * Returns the next input Token whose term() is not a stop word.\n   */\n  @Override\n  public final boolean incrementToken() throws IOException {\n    // return the first non-stop word found\n    int skippedPositions = 0;\n    while (input.incrementToken()) {\n      if (!stopWords.contains(termAtt.termBuffer(), 0, termAtt.termLength())) {\n        if (enablePositionIncrements) {\n          posIncrAtt.setPositionIncrement(posIncrAtt.getPositionIncrement() + skippedPositions);\n        }\n        return true;\n      }\n      skippedPositions += posIncrAtt.getPositionIncrement();\n    }\n    // reached EOS -- return false\n    return false;\n  }\n\n","sourceOld":"  /**\n   * Returns the next input Token whose term() is not a stop word.\n   */\n  public final boolean incrementToken() throws IOException {\n    // return the first non-stop word found\n    int skippedPositions = 0;\n    while (input.incrementToken()) {\n      if (!stopWords.contains(termAtt.termBuffer(), 0, termAtt.termLength())) {\n        if (enablePositionIncrements) {\n          posIncrAtt.setPositionIncrement(posIncrAtt.getPositionIncrement() + skippedPositions);\n        }\n        return true;\n      }\n      skippedPositions += posIncrAtt.getPositionIncrement();\n    }\n    // reached EOS -- return false\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":4,"author":"Dawid Weiss","isMerge":false,"pathNew":"/dev/null","pathOld":"src/java/org/apache/lucene/analysis/StopFilter#incrementToken().mjava","sourceNew":null,"sourceOld":"  /**\n   * Returns the next input Token whose term() is not a stop word.\n   */\n  @Override\n  public final boolean incrementToken() throws IOException {\n    // return the first non-stop word found\n    int skippedPositions = 0;\n    while (input.incrementToken()) {\n      if (!stopWords.contains(termAtt.termBuffer(), 0, termAtt.termLength())) {\n        if (enablePositionIncrements) {\n          posIncrAtt.setPositionIncrement(posIncrAtt.getPositionIncrement() + skippedPositions);\n        }\n        return true;\n      }\n      skippedPositions += posIncrAtt.getPositionIncrement();\n    }\n    // reached EOS -- return false\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"74a5e7f20b4a444da9df3b2c0f331fa7a1f64223":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"8a9e385641d717e641408d8fbbc62be8fc766357":["4b41b991de69ba7b72d5e90cfcee25699a1a7fc9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4b41b991de69ba7b72d5e90cfcee25699a1a7fc9":["74a5e7f20b4a444da9df3b2c0f331fa7a1f64223"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["8a9e385641d717e641408d8fbbc62be8fc766357"]},"commit2Childs":{"74a5e7f20b4a444da9df3b2c0f331fa7a1f64223":["4b41b991de69ba7b72d5e90cfcee25699a1a7fc9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["74a5e7f20b4a444da9df3b2c0f331fa7a1f64223"],"8a9e385641d717e641408d8fbbc62be8fc766357":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"4b41b991de69ba7b72d5e90cfcee25699a1a7fc9":["8a9e385641d717e641408d8fbbc62be8fc766357"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}