{"path":"src/test/org/apache/solr/schema/RequiredFieldsTest#testAddMultipleDocumentsWithErrors().mjava","commits":[{"id":"335d5ef4d54c2861b4ebdc7244bd81278f1c1d22","date":1177887783,"type":0,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/test/org/apache/solr/schema/RequiredFieldsTest#testAddMultipleDocumentsWithErrors().mjava","pathOld":"/dev/null","sourceNew":"  public void testAddMultipleDocumentsWithErrors() {\n    //Add three documents at once to make sure the baseline succeeds\n    assertU(\"adding 3 documents\",\n      \"<add>\" +doc(\"id\", \"601\", \"name\", \"multiad one\", \"field_t\", \"what's inside?\", \"subject\", \"info\") +\n      doc(\"id\", \"602\", \"name\", \"multiad two\", \"field_t\", \"what's inside?\", \"subject\", \"info\") +\n        doc(\"id\", \"603\", \"name\", \"multiad three\", \"field_t\", \"what's inside?\", \"subject\", \"info\") +\n        \"</add>\");\n    assertU(commit());\n\n    // Check that they are in the index\n    assertQ(\"should find three\", req(\"name:multiad\") ,\"//result[@numFound=3]\" );\n    \n    // Add three documents at once, with the middle one missing a field that has a default\n    assertU(\"adding 3 docs, with 2nd one missing a field that has a default value\",\n      \"<add>\" +doc(\"id\", \"601\", \"name\", \"nosubject batch one\", \"field_t\", \"what's inside?\", \"subject\", \"info\") +\n      doc(\"id\", \"602\", \"name\", \"nosubject batch two\", \"field_t\", \"what's inside?\") +\n        doc(\"id\", \"603\", \"name\", \"nosubject batch three\", \"field_t\", \"what's inside?\", \"subject\", \"info\") +\n        \"</add>\");\n    assertU(commit());\n    \n    // Since the missing field had a devault value,\n    // All three should have made it into the index\n    assertQ(\"should find three\", req(\"name:nosubject\") ,\"//result[@numFound=3]\" );\n    \n    // Add three documents at once, with the middle with a bad field definition,\n    // to establish the baselinie behavior for errors in a multi-ad submission\n    assertFailedU(\"adding 3 documents, with 2nd one with undefined field\",\n          \"<add>\" +doc(\"id\", \"801\", \"name\", \"baddef batch one\", \"field_t\", \"what's inside?\", \"subject\", \"info\") +\n          doc(\"id\", \"802\", \"field_t\", \"name\", \"baddef batch two\", \"what's inside?\", \"subject\", \"info\", \"GaRbAgeFiElD\", \"garbage\") +\n            doc(\"id\", \"803\", \"name\", \"baddef batch three\", \"field_t\", \"what's inside?\", \"subject\", \"info\") +\n            \"</add>\");\n    assertU(commit());\n\n    // Check that only docs before the error should be in the index\n    assertQ(\"should find one\", req(\"name:baddef\") ,\"//result[@numFound=1]\" );\n\n    // Add three documents at once, with the middle one missing a required field that has no default\n    assertFailedU(\"adding 3 docs, with 2nd one missing required field\",\n      \"<add>\" +doc(\"id\", \"701\", \"name\", \"noname batch one\", \"field_t\", \"what's inside?\", \"subject\", \"info\") +\n      doc(\"id\", \"702\", \"field_t\", \"what's inside?\", \"subject\", \"info\") +\n        doc(\"id\", \"703\", \"name\", \"noname batch batch three\", \"field_t\", \"what's inside?\", \"subject\", \"info\") +\n        \"</add>\");\n\n    assertU(commit());\n\n    // Check that only docs before the error should be in the index\n    assertQ(\"should find one\", req(\"name:noname\") ,\"//result[@numFound=1]\" );\n  }  \n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/schema/RequiredFieldsTest#testAddMultipleDocumentsWithErrors().mjava","pathOld":"src/test/org/apache/solr/schema/RequiredFieldsTest#testAddMultipleDocumentsWithErrors().mjava","sourceNew":"  public void testAddMultipleDocumentsWithErrors() {\n    //Add three documents at once to make sure the baseline succeeds\n    assertU(\"adding 3 documents\",\n      \"<add>\" +doc(\"id\", \"601\", \"name\", \"multiad one\", \"field_t\", \"what's inside?\", \"subject\", \"info\") +\n      doc(\"id\", \"602\", \"name\", \"multiad two\", \"field_t\", \"what's inside?\", \"subject\", \"info\") +\n        doc(\"id\", \"603\", \"name\", \"multiad three\", \"field_t\", \"what's inside?\", \"subject\", \"info\") +\n        \"</add>\");\n    assertU(commit());\n\n    // Check that they are in the index\n    assertQ(\"should find three\", req(\"name:multiad\") ,\"//result[@numFound=3]\" );\n    \n    // Add three documents at once, with the middle one missing a field that has a default\n    assertU(\"adding 3 docs, with 2nd one missing a field that has a default value\",\n      \"<add>\" +doc(\"id\", \"601\", \"name\", \"nosubject batch one\", \"field_t\", \"what's inside?\", \"subject\", \"info\") +\n      doc(\"id\", \"602\", \"name\", \"nosubject batch two\", \"field_t\", \"what's inside?\") +\n        doc(\"id\", \"603\", \"name\", \"nosubject batch three\", \"field_t\", \"what's inside?\", \"subject\", \"info\") +\n        \"</add>\");\n    assertU(commit());\n    \n    // Since the missing field had a devault value,\n    // All three should have made it into the index\n    assertQ(\"should find three\", req(\"name:nosubject\") ,\"//result[@numFound=3]\" );\n    \n    // Add three documents at once, with the middle with a bad field definition,\n    // to establish the baselinie behavior for errors in a multi-ad submission\n    assertFailedU(\"adding 3 documents, with 2nd one with undefined field\",\n          \"<add>\" +doc(\"id\", \"801\", \"name\", \"baddef batch one\", \"field_t\", \"what's inside?\", \"subject\", \"info\") +\n          doc(\"id\", \"802\", \"field_t\", \"name\", \"baddef batch two\", \"what's inside?\", \"subject\", \"info\", \"GaRbAgeFiElD\", \"garbage\") +\n            doc(\"id\", \"803\", \"name\", \"baddef batch three\", \"field_t\", \"what's inside?\", \"subject\", \"info\") +\n            \"</add>\");\n    assertU(commit());\n\n    // Check that only docs before the error should be in the index\n    assertQ(\"should find one\", req(\"name:baddef\") ,\"//result[@numFound=1]\" );\n\n    // Add three documents at once, with the middle one missing a required field that has no default\n    assertFailedU(\"adding 3 docs, with 2nd one missing required field\",\n      \"<add>\" +doc(\"id\", \"701\", \"name\", \"noname batch one\", \"field_t\", \"what's inside?\", \"subject\", \"info\") +\n      doc(\"id\", \"702\", \"field_t\", \"what's inside?\", \"subject\", \"info\") +\n        doc(\"id\", \"703\", \"name\", \"noname batch batch three\", \"field_t\", \"what's inside?\", \"subject\", \"info\") +\n        \"</add>\");\n\n    assertU(commit());\n\n    // Check that only docs before the error should be in the index\n    assertQ(\"should find one\", req(\"name:noname\") ,\"//result[@numFound=1]\" );\n  }  \n\n","sourceOld":"  public void testAddMultipleDocumentsWithErrors() {\n    //Add three documents at once to make sure the baseline succeeds\n    assertU(\"adding 3 documents\",\n      \"<add>\" +doc(\"id\", \"601\", \"name\", \"multiad one\", \"field_t\", \"what's inside?\", \"subject\", \"info\") +\n      doc(\"id\", \"602\", \"name\", \"multiad two\", \"field_t\", \"what's inside?\", \"subject\", \"info\") +\n        doc(\"id\", \"603\", \"name\", \"multiad three\", \"field_t\", \"what's inside?\", \"subject\", \"info\") +\n        \"</add>\");\n    assertU(commit());\n\n    // Check that they are in the index\n    assertQ(\"should find three\", req(\"name:multiad\") ,\"//result[@numFound=3]\" );\n    \n    // Add three documents at once, with the middle one missing a field that has a default\n    assertU(\"adding 3 docs, with 2nd one missing a field that has a default value\",\n      \"<add>\" +doc(\"id\", \"601\", \"name\", \"nosubject batch one\", \"field_t\", \"what's inside?\", \"subject\", \"info\") +\n      doc(\"id\", \"602\", \"name\", \"nosubject batch two\", \"field_t\", \"what's inside?\") +\n        doc(\"id\", \"603\", \"name\", \"nosubject batch three\", \"field_t\", \"what's inside?\", \"subject\", \"info\") +\n        \"</add>\");\n    assertU(commit());\n    \n    // Since the missing field had a devault value,\n    // All three should have made it into the index\n    assertQ(\"should find three\", req(\"name:nosubject\") ,\"//result[@numFound=3]\" );\n    \n    // Add three documents at once, with the middle with a bad field definition,\n    // to establish the baselinie behavior for errors in a multi-ad submission\n    assertFailedU(\"adding 3 documents, with 2nd one with undefined field\",\n          \"<add>\" +doc(\"id\", \"801\", \"name\", \"baddef batch one\", \"field_t\", \"what's inside?\", \"subject\", \"info\") +\n          doc(\"id\", \"802\", \"field_t\", \"name\", \"baddef batch two\", \"what's inside?\", \"subject\", \"info\", \"GaRbAgeFiElD\", \"garbage\") +\n            doc(\"id\", \"803\", \"name\", \"baddef batch three\", \"field_t\", \"what's inside?\", \"subject\", \"info\") +\n            \"</add>\");\n    assertU(commit());\n\n    // Check that only docs before the error should be in the index\n    assertQ(\"should find one\", req(\"name:baddef\") ,\"//result[@numFound=1]\" );\n\n    // Add three documents at once, with the middle one missing a required field that has no default\n    assertFailedU(\"adding 3 docs, with 2nd one missing required field\",\n      \"<add>\" +doc(\"id\", \"701\", \"name\", \"noname batch one\", \"field_t\", \"what's inside?\", \"subject\", \"info\") +\n      doc(\"id\", \"702\", \"field_t\", \"what's inside?\", \"subject\", \"info\") +\n        doc(\"id\", \"703\", \"name\", \"noname batch batch three\", \"field_t\", \"what's inside?\", \"subject\", \"info\") +\n        \"</add>\");\n\n    assertU(commit());\n\n    // Check that only docs before the error should be in the index\n    assertQ(\"should find one\", req(\"name:noname\") ,\"//result[@numFound=1]\" );\n  }  \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["335d5ef4d54c2861b4ebdc7244bd81278f1c1d22"],"335d5ef4d54c2861b4ebdc7244bd81278f1c1d22":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["335d5ef4d54c2861b4ebdc7244bd81278f1c1d22"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"335d5ef4d54c2861b4ebdc7244bd81278f1c1d22":["ad94625fb8d088209f46650c8097196fec67f00c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}