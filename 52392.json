{"path":"lucene/core/src/java/org/apache/lucene/util/PagedBytes.Reader#Reader(PagedBytes).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/PagedBytes.Reader#Reader(PagedBytes).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/PagedBytes.Reader#Reader(PagedBytes).mjava","sourceNew":"    public Reader(PagedBytes pagedBytes) {\n      blocks = new byte[pagedBytes.blocks.size()][];\n      for(int i=0;i<blocks.length;i++) {\n        blocks[i] = pagedBytes.blocks.get(i);\n      }\n      blockEnds = new int[blocks.length];\n      for(int i=0;i< blockEnds.length;i++) {\n        blockEnds[i] = pagedBytes.blockEnd.get(i);\n      }\n      blockBits = pagedBytes.blockBits;\n      blockMask = pagedBytes.blockMask;\n      blockSize = pagedBytes.blockSize;\n    }\n\n","sourceOld":"    public Reader(PagedBytes pagedBytes) {\n      blocks = new byte[pagedBytes.blocks.size()][];\n      for(int i=0;i<blocks.length;i++) {\n        blocks[i] = pagedBytes.blocks.get(i);\n      }\n      blockEnds = new int[blocks.length];\n      for(int i=0;i< blockEnds.length;i++) {\n        blockEnds[i] = pagedBytes.blockEnd.get(i);\n      }\n      blockBits = pagedBytes.blockBits;\n      blockMask = pagedBytes.blockMask;\n      blockSize = pagedBytes.blockSize;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"caa40272511a69bd4ad04b8242ae420932f5799b","date":1359341326,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/PagedBytes.Reader#Reader(PagedBytes).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/PagedBytes.Reader#Reader(PagedBytes).mjava","sourceNew":"    private Reader(PagedBytes pagedBytes) {\n      blocks = new byte[pagedBytes.blocks.size()][];\n      for(int i=0;i<blocks.length;i++) {\n        blocks[i] = pagedBytes.blocks.get(i);\n      }\n      blockEnds = new int[blocks.length];\n      for(int i=0;i< blockEnds.length;i++) {\n        blockEnds[i] = pagedBytes.blockEnd.get(i);\n      }\n      blockBits = pagedBytes.blockBits;\n      blockMask = pagedBytes.blockMask;\n      blockSize = pagedBytes.blockSize;\n    }\n\n","sourceOld":"    public Reader(PagedBytes pagedBytes) {\n      blocks = new byte[pagedBytes.blocks.size()][];\n      for(int i=0;i<blocks.length;i++) {\n        blocks[i] = pagedBytes.blocks.get(i);\n      }\n      blockEnds = new int[blocks.length];\n      for(int i=0;i< blockEnds.length;i++) {\n        blockEnds[i] = pagedBytes.blockEnd.get(i);\n      }\n      blockBits = pagedBytes.blockBits;\n      blockMask = pagedBytes.blockMask;\n      blockSize = pagedBytes.blockSize;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d4d69c535930b5cce125cff868d40f6373dc27d4","date":1360270101,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/PagedBytes.Reader#Reader(PagedBytes).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/PagedBytes.Reader#Reader(PagedBytes).mjava","sourceNew":"    private Reader(PagedBytes pagedBytes) {\n      blocks = new byte[pagedBytes.blocks.size()][];\n      for(int i=0;i<blocks.length;i++) {\n        blocks[i] = pagedBytes.blocks.get(i);\n      }\n      blockEnds = new int[blocks.length];\n      for(int i=0;i< blockEnds.length;i++) {\n        blockEnds[i] = pagedBytes.blockEnd.get(i);\n      }\n      blockBits = pagedBytes.blockBits;\n      blockMask = pagedBytes.blockMask;\n      blockSize = pagedBytes.blockSize;\n    }\n\n","sourceOld":"    public Reader(PagedBytes pagedBytes) {\n      blocks = new byte[pagedBytes.blocks.size()][];\n      for(int i=0;i<blocks.length;i++) {\n        blocks[i] = pagedBytes.blocks.get(i);\n      }\n      blockEnds = new int[blocks.length];\n      for(int i=0;i< blockEnds.length;i++) {\n        blockEnds[i] = pagedBytes.blockEnd.get(i);\n      }\n      blockBits = pagedBytes.blockBits;\n      blockMask = pagedBytes.blockMask;\n      blockSize = pagedBytes.blockSize;\n    }\n\n","bugFix":["be20f9fed1d3edcb1c84abcc39df87a90fab22df"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d943163030bbd7a9caf93cb5fea92257390a2a99","date":1403094254,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/PagedBytes.Reader#Reader(PagedBytes).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/PagedBytes.Reader#Reader(PagedBytes).mjava","sourceNew":"    private Reader(PagedBytes pagedBytes) {\n      blocks = Arrays.copyOf(pagedBytes.blocks, pagedBytes.numBlocks);\n      blockBits = pagedBytes.blockBits;\n      blockMask = pagedBytes.blockMask;\n      blockSize = pagedBytes.blockSize;\n      bytesUsedPerBlock = pagedBytes.bytesUsedPerBlock;\n    }\n\n","sourceOld":"    private Reader(PagedBytes pagedBytes) {\n      blocks = new byte[pagedBytes.blocks.size()][];\n      for(int i=0;i<blocks.length;i++) {\n        blocks[i] = pagedBytes.blocks.get(i);\n      }\n      blockEnds = new int[blocks.length];\n      for(int i=0;i< blockEnds.length;i++) {\n        blockEnds[i] = pagedBytes.blockEnd.get(i);\n      }\n      blockBits = pagedBytes.blockBits;\n      blockMask = pagedBytes.blockMask;\n      blockSize = pagedBytes.blockSize;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e57c73924f3b8c19defa62e96bfa34a4922d49c2","date":1403106358,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/PagedBytes.Reader#Reader(PagedBytes).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/PagedBytes.Reader#Reader(PagedBytes).mjava","sourceNew":"    private Reader(PagedBytes pagedBytes) {\n      blocks = Arrays.copyOf(pagedBytes.blocks, pagedBytes.numBlocks);\n      blockBits = pagedBytes.blockBits;\n      blockMask = pagedBytes.blockMask;\n      blockSize = pagedBytes.blockSize;\n      bytesUsedPerBlock = pagedBytes.bytesUsedPerBlock;\n    }\n\n","sourceOld":"    private Reader(PagedBytes pagedBytes) {\n      blocks = new byte[pagedBytes.blocks.size()][];\n      for(int i=0;i<blocks.length;i++) {\n        blocks[i] = pagedBytes.blocks.get(i);\n      }\n      blockEnds = new int[blocks.length];\n      for(int i=0;i< blockEnds.length;i++) {\n        blockEnds[i] = pagedBytes.blockEnd.get(i);\n      }\n      blockBits = pagedBytes.blockBits;\n      blockMask = pagedBytes.blockMask;\n      blockSize = pagedBytes.blockSize;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9798d0818e7a880546802b509792d3f3d57babd2","date":1528358901,"type":3,"author":"Nhat Nguyen","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/PagedBytes.Reader#Reader(PagedBytes).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/PagedBytes.Reader#Reader(PagedBytes).mjava","sourceNew":"    private Reader(PagedBytes pagedBytes) {\n      blocks = ArrayUtil.copyOfSubArray(pagedBytes.blocks, 0, pagedBytes.numBlocks);\n      blockBits = pagedBytes.blockBits;\n      blockMask = pagedBytes.blockMask;\n      blockSize = pagedBytes.blockSize;\n      bytesUsedPerBlock = pagedBytes.bytesUsedPerBlock;\n    }\n\n","sourceOld":"    private Reader(PagedBytes pagedBytes) {\n      blocks = Arrays.copyOf(pagedBytes.blocks, pagedBytes.numBlocks);\n      blockBits = pagedBytes.blockBits;\n      blockMask = pagedBytes.blockMask;\n      blockSize = pagedBytes.blockSize;\n      bytesUsedPerBlock = pagedBytes.bytesUsedPerBlock;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b70042a8a492f7054d480ccdd2be9796510d4327","date":1528386658,"type":3,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/PagedBytes.Reader#Reader(PagedBytes).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/PagedBytes.Reader#Reader(PagedBytes).mjava","sourceNew":"    private Reader(PagedBytes pagedBytes) {\n      blocks = ArrayUtil.copyOfSubArray(pagedBytes.blocks, 0, pagedBytes.numBlocks);\n      blockBits = pagedBytes.blockBits;\n      blockMask = pagedBytes.blockMask;\n      blockSize = pagedBytes.blockSize;\n      bytesUsedPerBlock = pagedBytes.bytesUsedPerBlock;\n    }\n\n","sourceOld":"    private Reader(PagedBytes pagedBytes) {\n      blocks = Arrays.copyOf(pagedBytes.blocks, pagedBytes.numBlocks);\n      blockBits = pagedBytes.blockBits;\n      blockMask = pagedBytes.blockMask;\n      blockSize = pagedBytes.blockSize;\n      bytesUsedPerBlock = pagedBytes.bytesUsedPerBlock;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26","date":1531589977,"type":3,"author":"Michael Braun","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/PagedBytes.Reader#Reader(PagedBytes).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/PagedBytes.Reader#Reader(PagedBytes).mjava","sourceNew":"    private Reader(PagedBytes pagedBytes) {\n      blocks = ArrayUtil.copyOfSubArray(pagedBytes.blocks, 0, pagedBytes.numBlocks);\n      blockBits = pagedBytes.blockBits;\n      blockMask = pagedBytes.blockMask;\n      blockSize = pagedBytes.blockSize;\n      bytesUsedPerBlock = pagedBytes.bytesUsedPerBlock;\n    }\n\n","sourceOld":"    private Reader(PagedBytes pagedBytes) {\n      blocks = Arrays.copyOf(pagedBytes.blocks, pagedBytes.numBlocks);\n      blockBits = pagedBytes.blockBits;\n      blockMask = pagedBytes.blockMask;\n      blockSize = pagedBytes.blockSize;\n      bytesUsedPerBlock = pagedBytes.bytesUsedPerBlock;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d4d69c535930b5cce125cff868d40f6373dc27d4":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","caa40272511a69bd4ad04b8242ae420932f5799b"],"e57c73924f3b8c19defa62e96bfa34a4922d49c2":["d4d69c535930b5cce125cff868d40f6373dc27d4","d943163030bbd7a9caf93cb5fea92257390a2a99"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"caa40272511a69bd4ad04b8242ae420932f5799b":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b70042a8a492f7054d480ccdd2be9796510d4327":["d943163030bbd7a9caf93cb5fea92257390a2a99","9798d0818e7a880546802b509792d3f3d57babd2"],"d943163030bbd7a9caf93cb5fea92257390a2a99":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"9798d0818e7a880546802b509792d3f3d57babd2":["d943163030bbd7a9caf93cb5fea92257390a2a99"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9798d0818e7a880546802b509792d3f3d57babd2"],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":["d943163030bbd7a9caf93cb5fea92257390a2a99","9798d0818e7a880546802b509792d3f3d57babd2"]},"commit2Childs":{"d4d69c535930b5cce125cff868d40f6373dc27d4":["e57c73924f3b8c19defa62e96bfa34a4922d49c2","d943163030bbd7a9caf93cb5fea92257390a2a99"],"e57c73924f3b8c19defa62e96bfa34a4922d49c2":[],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["d4d69c535930b5cce125cff868d40f6373dc27d4","caa40272511a69bd4ad04b8242ae420932f5799b"],"caa40272511a69bd4ad04b8242ae420932f5799b":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"b70042a8a492f7054d480ccdd2be9796510d4327":[],"d943163030bbd7a9caf93cb5fea92257390a2a99":["e57c73924f3b8c19defa62e96bfa34a4922d49c2","b70042a8a492f7054d480ccdd2be9796510d4327","9798d0818e7a880546802b509792d3f3d57babd2","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"9798d0818e7a880546802b509792d3f3d57babd2":["b70042a8a492f7054d480ccdd2be9796510d4327","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":[]},"heads":["e57c73924f3b8c19defa62e96bfa34a4922d49c2","b70042a8a492f7054d480ccdd2be9796510d4327","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}