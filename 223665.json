{"path":"solr/core/src/java/org/apache/solr/util/IdUtils#timeRandomId().mjava","commits":[{"id":"464244264804e3f981bf1fb4b732516d8d62dbc2","date":1495736161,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/IdUtils#timeRandomId().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Generate a random id with a timestamp, in the format:\n   * <code>hex(timestamp) + 'T' + randomId</code>. This method\n   * uses {@link TimeSource#CURRENT_TIME} for timestamp values.\n   */\n  public static final String timeRandomId() {\n    return timeRandomId(TimeUnit.MILLISECONDS.convert(TimeSource.CURRENT_TIME.getTime(), TimeUnit.NANOSECONDS));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5531f16a602ef350b6c9adfb08ebaa13a60fe3db","date":1495756318,"type":0,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/IdUtils#timeRandomId().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Generate a random id with a timestamp, in the format:\n   * <code>hex(timestamp) + 'T' + randomId</code>. This method\n   * uses {@link TimeSource#CURRENT_TIME} for timestamp values.\n   */\n  public static final String timeRandomId() {\n    return timeRandomId(TimeUnit.MILLISECONDS.convert(TimeSource.CURRENT_TIME.getTime(), TimeUnit.NANOSECONDS));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c304e97e7c1d472bc70e801b35ee78583916c6cd","date":1507105431,"type":0,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/IdUtils#timeRandomId().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Generate a random id with a timestamp, in the format:\n   * <code>hex(timestamp) + 'T' + randomId</code>. This method\n   * uses {@link TimeSource#CURRENT_TIME} for timestamp values.\n   */\n  public static final String timeRandomId() {\n    return timeRandomId(TimeUnit.MILLISECONDS.convert(TimeSource.CURRENT_TIME.getTime(), TimeUnit.NANOSECONDS));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"560c18d71dad43d675158783c3840f8c80d6d39c","date":1507105532,"type":0,"author":"Cao Manh Dat","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/util/IdUtils#timeRandomId().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Generate a random id with a timestamp, in the format:\n   * <code>hex(timestamp) + 'T' + randomId</code>. This method\n   * uses {@link TimeSource#CURRENT_TIME} for timestamp values.\n   */\n  public static final String timeRandomId() {\n    return timeRandomId(TimeUnit.MILLISECONDS.convert(TimeSource.CURRENT_TIME.getTime(), TimeUnit.NANOSECONDS));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d4412883c12067d8a4e2a354aa8adc58c32be1d6","date":1521129281,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/util/IdUtils#timeRandomId().mjava","pathOld":"solr/core/src/java/org/apache/solr/util/IdUtils#timeRandomId().mjava","sourceNew":"  /**\n   * Generate a random id with a timestamp, in the format:\n   * <code>hex(timestamp) + 'T' + randomId</code>. This method\n   * uses {@link TimeSource#CURRENT_TIME} for timestamp values.\n   */\n  public static final String timeRandomId() {\n    return timeRandomId(TimeUnit.MILLISECONDS.convert(TimeSource.CURRENT_TIME.getTimeNs(), TimeUnit.NANOSECONDS));\n  }\n\n","sourceOld":"  /**\n   * Generate a random id with a timestamp, in the format:\n   * <code>hex(timestamp) + 'T' + randomId</code>. This method\n   * uses {@link TimeSource#CURRENT_TIME} for timestamp values.\n   */\n  public static final String timeRandomId() {\n    return timeRandomId(TimeUnit.MILLISECONDS.convert(TimeSource.CURRENT_TIME.getTime(), TimeUnit.NANOSECONDS));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c304e97e7c1d472bc70e801b35ee78583916c6cd":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5531f16a602ef350b6c9adfb08ebaa13a60fe3db"],"5531f16a602ef350b6c9adfb08ebaa13a60fe3db":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","464244264804e3f981bf1fb4b732516d8d62dbc2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"464244264804e3f981bf1fb4b732516d8d62dbc2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d4412883c12067d8a4e2a354aa8adc58c32be1d6":["560c18d71dad43d675158783c3840f8c80d6d39c"],"560c18d71dad43d675158783c3840f8c80d6d39c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c304e97e7c1d472bc70e801b35ee78583916c6cd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d4412883c12067d8a4e2a354aa8adc58c32be1d6"]},"commit2Childs":{"c304e97e7c1d472bc70e801b35ee78583916c6cd":["560c18d71dad43d675158783c3840f8c80d6d39c"],"5531f16a602ef350b6c9adfb08ebaa13a60fe3db":["c304e97e7c1d472bc70e801b35ee78583916c6cd"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c304e97e7c1d472bc70e801b35ee78583916c6cd","5531f16a602ef350b6c9adfb08ebaa13a60fe3db","464244264804e3f981bf1fb4b732516d8d62dbc2","560c18d71dad43d675158783c3840f8c80d6d39c"],"464244264804e3f981bf1fb4b732516d8d62dbc2":["5531f16a602ef350b6c9adfb08ebaa13a60fe3db"],"d4412883c12067d8a4e2a354aa8adc58c32be1d6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"560c18d71dad43d675158783c3840f8c80d6d39c":["d4412883c12067d8a4e2a354aa8adc58c32be1d6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}