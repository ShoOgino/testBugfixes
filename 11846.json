{"path":"lucene/luke/src/java/org/apache/lucene/luke/app/desktop/components/dialog/documents/AddDocumentDialogFactory.ListenerFunctions#addDocument(ActionEvent).mjava","commits":[{"id":"f554f2d9b5456248ab6467b9d4f6015686797a6c","date":1554891357,"type":0,"author":"Tomoko Uchida","isMerge":false,"pathNew":"lucene/luke/src/java/org/apache/lucene/luke/app/desktop/components/dialog/documents/AddDocumentDialogFactory.ListenerFunctions#addDocument(ActionEvent).mjava","pathOld":"/dev/null","sourceNew":"    void addDocument(ActionEvent e) {\n      List<NewField> validFields = newFieldList.stream()\n          .filter(nf -> !nf.isDeleted())\n          .filter(nf -> !StringUtils.isNullOrEmpty(nf.getName()))\n          .filter(nf -> !StringUtils.isNullOrEmpty(nf.getValue()))\n          .collect(Collectors.toList());\n      if (validFields.isEmpty()) {\n        infoTA.setText(\"Please add one or more fields. Name and Value are both required.\");\n        return;\n      }\n\n      Document doc = new Document();\n      try {\n        for (NewField nf : validFields) {\n          doc.add(toIndexableField(nf));\n        }\n      } catch (NumberFormatException ex) {\n        log.error(ex.getMessage(), e);\n        throw new LukeException(\"Invalid value: \" + ex.getMessage(), ex);\n      } catch (Exception ex) {\n        log.error(ex.getMessage(), e);\n        throw new LukeException(ex.getMessage(), ex);\n      }\n\n      addDocument(doc);\n      log.info(\"Added document: {}\", doc.toString());\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a966532d92cf9ba2856f15a8140151bb6b518e4b","date":1588290631,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"lucene/luke/src/java/org/apache/lucene/luke/app/desktop/components/dialog/documents/AddDocumentDialogFactory.ListenerFunctions#addDocument(ActionEvent).mjava","pathOld":"lucene/luke/src/java/org/apache/lucene/luke/app/desktop/components/dialog/documents/AddDocumentDialogFactory.ListenerFunctions#addDocument(ActionEvent).mjava","sourceNew":"    void addDocument(ActionEvent e) {\n      List<NewField> validFields = newFieldList.stream()\n          .filter(nf -> !nf.isDeleted())\n          .filter(nf -> !StringUtils.isNullOrEmpty(nf.getName()))\n          .filter(nf -> !StringUtils.isNullOrEmpty(nf.getValue()))\n          .collect(Collectors.toList());\n      if (validFields.isEmpty()) {\n        infoTA.setText(\"Please add one or more fields. Name and Value are both required.\");\n        return;\n      }\n\n      Document doc = new Document();\n      try {\n        for (NewField nf : validFields) {\n          doc.add(toIndexableField(nf));\n        }\n      } catch (NumberFormatException ex) {\n        log.error(ex.getMessage(), e);\n        throw new LukeException(\"Invalid value: \" + ex.getMessage(), ex);\n      } catch (Exception ex) {\n        log.error(ex.getMessage(), e);\n        throw new LukeException(ex.getMessage(), ex);\n      }\n\n      addDocument(doc);\n      log.info(\"Added document: {}\", doc);\n    }\n\n","sourceOld":"    void addDocument(ActionEvent e) {\n      List<NewField> validFields = newFieldList.stream()\n          .filter(nf -> !nf.isDeleted())\n          .filter(nf -> !StringUtils.isNullOrEmpty(nf.getName()))\n          .filter(nf -> !StringUtils.isNullOrEmpty(nf.getValue()))\n          .collect(Collectors.toList());\n      if (validFields.isEmpty()) {\n        infoTA.setText(\"Please add one or more fields. Name and Value are both required.\");\n        return;\n      }\n\n      Document doc = new Document();\n      try {\n        for (NewField nf : validFields) {\n          doc.add(toIndexableField(nf));\n        }\n      } catch (NumberFormatException ex) {\n        log.error(ex.getMessage(), e);\n        throw new LukeException(\"Invalid value: \" + ex.getMessage(), ex);\n      } catch (Exception ex) {\n        log.error(ex.getMessage(), e);\n        throw new LukeException(ex.getMessage(), ex);\n      }\n\n      addDocument(doc);\n      log.info(\"Added document: {}\", doc.toString());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"265216658b9b02ae56c6ccd3def38eacedbea7d3","date":1593139450,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"lucene/luke/src/java/org/apache/lucene/luke/app/desktop/components/dialog/documents/AddDocumentDialogFactory.ListenerFunctions#addDocument(ActionEvent).mjava","pathOld":"lucene/luke/src/java/org/apache/lucene/luke/app/desktop/components/dialog/documents/AddDocumentDialogFactory.ListenerFunctions#addDocument(ActionEvent).mjava","sourceNew":"    void addDocument(ActionEvent e) {\n      List<NewField> validFields = newFieldList.stream()\n          .filter(nf -> !nf.isDeleted())\n          .filter(nf -> !StringUtils.isNullOrEmpty(nf.getName()))\n          .filter(nf -> !StringUtils.isNullOrEmpty(nf.getValue()))\n          .collect(Collectors.toList());\n      if (validFields.isEmpty()) {\n        infoTA.setText(\"Please add one or more fields. Name and Value are both required.\");\n        return;\n      }\n\n      Document doc = new Document();\n      try {\n        for (NewField nf : validFields) {\n          doc.add(toIndexableField(nf));\n        }\n      } catch (NumberFormatException ex) {\n        log.error(\"Error converting field value\", e);\n        throw new LukeException(\"Invalid value: \" + ex.getMessage(), ex);\n      } catch (Exception ex) {\n        log.error(\"Error converting field value\", e);\n        throw new LukeException(ex.getMessage(), ex);\n      }\n\n      addDocument(doc);\n      log.info(\"Added document: {}\", doc);\n    }\n\n","sourceOld":"    void addDocument(ActionEvent e) {\n      List<NewField> validFields = newFieldList.stream()\n          .filter(nf -> !nf.isDeleted())\n          .filter(nf -> !StringUtils.isNullOrEmpty(nf.getName()))\n          .filter(nf -> !StringUtils.isNullOrEmpty(nf.getValue()))\n          .collect(Collectors.toList());\n      if (validFields.isEmpty()) {\n        infoTA.setText(\"Please add one or more fields. Name and Value are both required.\");\n        return;\n      }\n\n      Document doc = new Document();\n      try {\n        for (NewField nf : validFields) {\n          doc.add(toIndexableField(nf));\n        }\n      } catch (NumberFormatException ex) {\n        log.error(ex.getMessage(), e);\n        throw new LukeException(\"Invalid value: \" + ex.getMessage(), ex);\n      } catch (Exception ex) {\n        log.error(ex.getMessage(), e);\n        throw new LukeException(ex.getMessage(), ex);\n      }\n\n      addDocument(doc);\n      log.info(\"Added document: {}\", doc);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"265216658b9b02ae56c6ccd3def38eacedbea7d3":["a966532d92cf9ba2856f15a8140151bb6b518e4b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f554f2d9b5456248ab6467b9d4f6015686797a6c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a966532d92cf9ba2856f15a8140151bb6b518e4b":["f554f2d9b5456248ab6467b9d4f6015686797a6c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["265216658b9b02ae56c6ccd3def38eacedbea7d3"]},"commit2Childs":{"265216658b9b02ae56c6ccd3def38eacedbea7d3":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f554f2d9b5456248ab6467b9d4f6015686797a6c"],"f554f2d9b5456248ab6467b9d4f6015686797a6c":["a966532d92cf9ba2856f15a8140151bb6b518e4b"],"a966532d92cf9ba2856f15a8140151bb6b518e4b":["265216658b9b02ae56c6ccd3def38eacedbea7d3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}