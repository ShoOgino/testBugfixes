{"path":"modules/suggest/src/java/org/apache/lucene/search/suggest/fst/FSTLookup#store(File).mjava","commits":[{"id":"e230a61047bc041516c811baa08a7174d6f8322a","date":1306175633,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"modules/suggest/src/java/org/apache/lucene/search/suggest/fst/FSTLookup#store(File).mjava","pathOld":"solr/src/java/org/apache/solr/spelling/suggest/fst/FSTLookup#store(File).mjava","sourceNew":"  /**\n   * Serialization to disk.\n   */\n  @Override\n  public synchronized boolean store(File storeDir) throws IOException {\n    if (!storeDir.exists() || !storeDir.isDirectory() || !storeDir.canWrite()) {\n      return false;\n    }\n\n    if (this.automaton == null)\n      return false;\n\n    File data = new File(storeDir, FILENAME);\n    OutputStream os = new BufferedOutputStream(new FileOutputStream(data));\n    try {\n      this.automaton.save(new OutputStreamDataOutput(os));\n    } finally {\n      IOUtils.closeSafely(os);\n    }\n\n    return true;\n  }\n\n","sourceOld":"  /**\n   * Serialization to disk.\n   */\n  @Override\n  public synchronized boolean store(File storeDir) throws IOException {\n    if (!storeDir.exists() || !storeDir.isDirectory() || !storeDir.canWrite()) {\n      return false;\n    }\n\n    if (this.automaton == null)\n      return false;\n\n    File data = new File(storeDir, FILENAME);\n    OutputStream os = new BufferedOutputStream(new FileOutputStream(data));\n    try {\n      this.automaton.save(new OutputStreamDataOutput(os));\n    } finally {\n      Closeables.closeQuietly(os);\n    }\n\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"efb7a19703a037c29e30440260d393500febc1f4","date":1306648116,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"modules/suggest/src/java/org/apache/lucene/search/suggest/fst/FSTLookup#store(File).mjava","pathOld":"modules/suggest/src/java/org/apache/lucene/search/suggest/fst/FSTLookup#store(File).mjava","sourceNew":"  /**\n   * Serialization to disk.\n   */\n  @Override\n  public synchronized boolean store(File storeDir) throws IOException {\n    if (!storeDir.exists() || !storeDir.isDirectory() || !storeDir.canWrite()) {\n      return false;\n    }\n\n    if (this.automaton == null)\n      return false;\n\n    File data = new File(storeDir, FILENAME);\n    OutputStream os = new BufferedOutputStream(new FileOutputStream(data));\n    try {\n      this.automaton.save(new OutputStreamDataOutput(os));\n    } finally {\n      IOUtils.closeSafely(false, os);\n    }\n\n    return true;\n  }\n\n","sourceOld":"  /**\n   * Serialization to disk.\n   */\n  @Override\n  public synchronized boolean store(File storeDir) throws IOException {\n    if (!storeDir.exists() || !storeDir.isDirectory() || !storeDir.canWrite()) {\n      return false;\n    }\n\n    if (this.automaton == null)\n      return false;\n\n    File data = new File(storeDir, FILENAME);\n    OutputStream os = new BufferedOutputStream(new FileOutputStream(data));\n    try {\n      this.automaton.save(new OutputStreamDataOutput(os));\n    } finally {\n      IOUtils.closeSafely(os);\n    }\n\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"modules/suggest/src/java/org/apache/lucene/search/suggest/fst/FSTLookup#store(File).mjava","pathOld":"solr/src/java/org/apache/solr/spelling/suggest/fst/FSTLookup#store(File).mjava","sourceNew":"  /**\n   * Serialization to disk.\n   */\n  @Override\n  public synchronized boolean store(File storeDir) throws IOException {\n    if (!storeDir.exists() || !storeDir.isDirectory() || !storeDir.canWrite()) {\n      return false;\n    }\n\n    if (this.automaton == null)\n      return false;\n\n    File data = new File(storeDir, FILENAME);\n    OutputStream os = new BufferedOutputStream(new FileOutputStream(data));\n    try {\n      this.automaton.save(new OutputStreamDataOutput(os));\n    } finally {\n      IOUtils.closeSafely(false, os);\n    }\n\n    return true;\n  }\n\n","sourceOld":"  /**\n   * Serialization to disk.\n   */\n  @Override\n  public synchronized boolean store(File storeDir) throws IOException {\n    if (!storeDir.exists() || !storeDir.isDirectory() || !storeDir.canWrite()) {\n      return false;\n    }\n\n    if (this.automaton == null)\n      return false;\n\n    File data = new File(storeDir, FILENAME);\n    OutputStream os = new BufferedOutputStream(new FileOutputStream(data));\n    try {\n      this.automaton.save(new OutputStreamDataOutput(os));\n    } finally {\n      Closeables.closeQuietly(os);\n    }\n\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e10cb22a8bdb44339e282925a29182bb2f3174d","date":1306841137,"type":1,"author":"Simon Willnauer","isMerge":true,"pathNew":"modules/suggest/src/java/org/apache/lucene/search/suggest/fst/FSTLookup#store(File).mjava","pathOld":"solr/src/java/org/apache/solr/spelling/suggest/fst/FSTLookup#store(File).mjava","sourceNew":"  /**\n   * Serialization to disk.\n   */\n  @Override\n  public synchronized boolean store(File storeDir) throws IOException {\n    if (!storeDir.exists() || !storeDir.isDirectory() || !storeDir.canWrite()) {\n      return false;\n    }\n\n    if (this.automaton == null)\n      return false;\n\n    File data = new File(storeDir, FILENAME);\n    OutputStream os = new BufferedOutputStream(new FileOutputStream(data));\n    try {\n      this.automaton.save(new OutputStreamDataOutput(os));\n    } finally {\n      IOUtils.closeSafely(false, os);\n    }\n\n    return true;\n  }\n\n","sourceOld":"  /**\n   * Serialization to disk.\n   */\n  @Override\n  public synchronized boolean store(File storeDir) throws IOException {\n    if (!storeDir.exists() || !storeDir.isDirectory() || !storeDir.canWrite()) {\n      return false;\n    }\n\n    if (this.automaton == null)\n      return false;\n\n    File data = new File(storeDir, FILENAME);\n    OutputStream os = new BufferedOutputStream(new FileOutputStream(data));\n    try {\n      this.automaton.save(new OutputStreamDataOutput(os));\n    } finally {\n      Closeables.closeQuietly(os);\n    }\n\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"24230fe54121f9be9d85f2c2067536296785e421","date":1314462346,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"modules/suggest/src/java/org/apache/lucene/search/suggest/fst/FSTLookup#store(File).mjava","pathOld":"modules/suggest/src/java/org/apache/lucene/search/suggest/fst/FSTLookup#store(File).mjava","sourceNew":"  /**\n   * Serialization to disk.\n   */\n  @Override\n  public synchronized boolean store(File storeDir) throws IOException {\n    if (!storeDir.exists() || !storeDir.isDirectory() || !storeDir.canWrite()) {\n      return false;\n    }\n\n    if (this.automaton == null)\n      return false;\n\n    File data = new File(storeDir, FILENAME);\n    OutputStream os = new BufferedOutputStream(new FileOutputStream(data));\n    try {\n      this.automaton.save(new OutputStreamDataOutput(os));\n    } finally {\n      IOUtils.close(os);\n    }\n\n    return true;\n  }\n\n","sourceOld":"  /**\n   * Serialization to disk.\n   */\n  @Override\n  public synchronized boolean store(File storeDir) throws IOException {\n    if (!storeDir.exists() || !storeDir.isDirectory() || !storeDir.canWrite()) {\n      return false;\n    }\n\n    if (this.automaton == null)\n      return false;\n\n    File data = new File(storeDir, FILENAME);\n    OutputStream os = new BufferedOutputStream(new FileOutputStream(data));\n    try {\n      this.automaton.save(new OutputStreamDataOutput(os));\n    } finally {\n      IOUtils.closeSafely(false, os);\n    }\n\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7bf07f4ebadc7539de83a531e64678350d78ca26","date":1322776167,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"modules/suggest/src/java/org/apache/lucene/search/suggest/fst/FSTCompletionLookup#store(File).mjava","pathOld":"modules/suggest/src/java/org/apache/lucene/search/suggest/fst/FSTLookup#store(File).mjava","sourceNew":"  /**\n   * Serialization to disk.\n   */\n  @Override\n  public synchronized boolean store(File storeDir) throws IOException {\n    if (!storeDir.exists() || !storeDir.isDirectory() || !storeDir.canWrite()) {\n      return false;\n    }\n\n    if (this.normalCompletion == null) \n      return false;\n\n    normalCompletion.getFST().save(new File(storeDir, FILENAME));\n    return true;\n  }\n\n","sourceOld":"  /**\n   * Serialization to disk.\n   */\n  @Override\n  public synchronized boolean store(File storeDir) throws IOException {\n    if (!storeDir.exists() || !storeDir.isDirectory() || !storeDir.canWrite()) {\n      return false;\n    }\n\n    if (this.automaton == null)\n      return false;\n\n    File data = new File(storeDir, FILENAME);\n    OutputStream os = new BufferedOutputStream(new FileOutputStream(data));\n    try {\n      this.automaton.save(new OutputStreamDataOutput(os));\n    } finally {\n      IOUtils.close(os);\n    }\n\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"24230fe54121f9be9d85f2c2067536296785e421":["efb7a19703a037c29e30440260d393500febc1f4"],"7bf07f4ebadc7539de83a531e64678350d78ca26":["24230fe54121f9be9d85f2c2067536296785e421"],"e230a61047bc041516c811baa08a7174d6f8322a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","efb7a19703a037c29e30440260d393500febc1f4"],"efb7a19703a037c29e30440260d393500febc1f4":["e230a61047bc041516c811baa08a7174d6f8322a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7bf07f4ebadc7539de83a531e64678350d78ca26"],"2e10cb22a8bdb44339e282925a29182bb2f3174d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","efb7a19703a037c29e30440260d393500febc1f4"]},"commit2Childs":{"24230fe54121f9be9d85f2c2067536296785e421":["7bf07f4ebadc7539de83a531e64678350d78ca26"],"7bf07f4ebadc7539de83a531e64678350d78ca26":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e230a61047bc041516c811baa08a7174d6f8322a":["efb7a19703a037c29e30440260d393500febc1f4"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":[],"efb7a19703a037c29e30440260d393500febc1f4":["24230fe54121f9be9d85f2c2067536296785e421","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e230a61047bc041516c811baa08a7174d6f8322a","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"2e10cb22a8bdb44339e282925a29182bb2f3174d":[]},"heads":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","cd5edd1f2b162a5cfa08efd17851a07373a96817","2e10cb22a8bdb44339e282925a29182bb2f3174d"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}