{"path":"lucene/core/src/test/org/apache/lucene/search/TestLRUFilterCache#testFilterRamBytesUsed().mjava","commits":[{"id":"9d6ade6517735e5fca21539f4ff32151bf0a89b8","date":1418291454,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestLRUFilterCache#testFilterRamBytesUsed().mjava","pathOld":"/dev/null","sourceNew":"  public void testFilterRamBytesUsed() {\n    assertEquals(LRUFilterCache.FILTER_DEFAULT_RAM_BYTES_USED, RamUsageTester.sizeOf(new QueryWrapperFilter(new TermQuery(new Term(\"some_field\", \"some_term\")))));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a17b6d7ecf4033d6f65fd2da7f181e82579aaf89","date":1418295608,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestLRUFilterCache#testFilterRamBytesUsed().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestLRUFilterCache#testFilterRamBytesUsed().mjava","sourceNew":"  public void testFilterRamBytesUsed() {\n    final Filter simpleFilter = new QueryWrapperFilter(new TermQuery(new Term(\"some_field\", \"some_term\")));\n    final long actualRamBytesUsed = RamUsageTester.sizeOf(simpleFilter);\n    final long ramBytesUsed = LRUFilterCache.FILTER_DEFAULT_RAM_BYTES_USED;\n    // we cannot assert exactly that the constant is correct since actual\n    // memory usage depends on JVM implementations and settings (eg. UseCompressedOops)\n    assertEquals(actualRamBytesUsed, ramBytesUsed, actualRamBytesUsed / 2);\n  }\n\n","sourceOld":"  public void testFilterRamBytesUsed() {\n    assertEquals(LRUFilterCache.FILTER_DEFAULT_RAM_BYTES_USED, RamUsageTester.sizeOf(new QueryWrapperFilter(new TermQuery(new Term(\"some_field\", \"some_term\")))));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"60596f28be69b10c37a56a303c2dbea07b2ca4ba","date":1425060541,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestLRUQueryCache#testFilterRamBytesUsed().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestLRUFilterCache#testFilterRamBytesUsed().mjava","sourceNew":"  public void testFilterRamBytesUsed() {\n    final Query simpleQuery = new TermQuery(new Term(\"some_field\", \"some_term\"));\n    final long actualRamBytesUsed = RamUsageTester.sizeOf(simpleQuery);\n    final long ramBytesUsed = LRUQueryCache.QUERY_DEFAULT_RAM_BYTES_USED;\n    // we cannot assert exactly that the constant is correct since actual\n    // memory usage depends on JVM implementations and settings (eg. UseCompressedOops)\n    assertEquals(actualRamBytesUsed, ramBytesUsed, actualRamBytesUsed / 2);\n  }\n\n","sourceOld":"  public void testFilterRamBytesUsed() {\n    final Filter simpleFilter = new QueryWrapperFilter(new TermQuery(new Term(\"some_field\", \"some_term\")));\n    final long actualRamBytesUsed = RamUsageTester.sizeOf(simpleFilter);\n    final long ramBytesUsed = LRUFilterCache.FILTER_DEFAULT_RAM_BYTES_USED;\n    // we cannot assert exactly that the constant is correct since actual\n    // memory usage depends on JVM implementations and settings (eg. UseCompressedOops)\n    assertEquals(actualRamBytesUsed, ramBytesUsed, actualRamBytesUsed / 2);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":4,"author":"Ryan Ernst","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestLRUFilterCache#testFilterRamBytesUsed().mjava","sourceNew":null,"sourceOld":"  public void testFilterRamBytesUsed() {\n    final Filter simpleFilter = new QueryWrapperFilter(new TermQuery(new Term(\"some_field\", \"some_term\")));\n    final long actualRamBytesUsed = RamUsageTester.sizeOf(simpleFilter);\n    final long ramBytesUsed = LRUFilterCache.FILTER_DEFAULT_RAM_BYTES_USED;\n    // we cannot assert exactly that the constant is correct since actual\n    // memory usage depends on JVM implementations and settings (eg. UseCompressedOops)\n    assertEquals(actualRamBytesUsed, ramBytesUsed, actualRamBytesUsed / 2);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["a17b6d7ecf4033d6f65fd2da7f181e82579aaf89","60596f28be69b10c37a56a303c2dbea07b2ca4ba"],"60596f28be69b10c37a56a303c2dbea07b2ca4ba":["a17b6d7ecf4033d6f65fd2da7f181e82579aaf89"],"9d6ade6517735e5fca21539f4ff32151bf0a89b8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a17b6d7ecf4033d6f65fd2da7f181e82579aaf89":["9d6ade6517735e5fca21539f4ff32151bf0a89b8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["60596f28be69b10c37a56a303c2dbea07b2ca4ba"]},"commit2Childs":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"60596f28be69b10c37a56a303c2dbea07b2ca4ba":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9d6ade6517735e5fca21539f4ff32151bf0a89b8":["a17b6d7ecf4033d6f65fd2da7f181e82579aaf89"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9d6ade6517735e5fca21539f4ff32151bf0a89b8"],"a17b6d7ecf4033d6f65fd2da7f181e82579aaf89":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","60596f28be69b10c37a56a303c2dbea07b2ca4ba"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}