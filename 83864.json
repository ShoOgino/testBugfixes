{"path":"lucene/core/src/java/org/apache/lucene/index/FieldInfos.FieldNumbers#setDimensions(int,String,int,int,int).mjava","commits":[{"id":"f6652c943595e92c187ee904c382863013eae28f","date":1539042663,"type":1,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/FieldInfos.FieldNumbers#setDimensions(int,String,int,int,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/FieldInfos.FieldNumbers#setDimensions(int,String,int,int).mjava","sourceNew":"    synchronized void setDimensions(int number, String name, int dataDimensionCount, int indexDimensionCount, int dimensionNumBytes) {\n      if (dimensionNumBytes > PointValues.MAX_NUM_BYTES) {\n        throw new IllegalArgumentException(\"dimension numBytes must be <= PointValues.MAX_NUM_BYTES (= \" + PointValues.MAX_NUM_BYTES + \"); got \" + dimensionNumBytes + \" for field=\\\"\" + name + \"\\\"\");\n      }\n      if (dataDimensionCount > PointValues.MAX_DIMENSIONS) {\n        throw new IllegalArgumentException(\"pointDataDimensionCount must be <= PointValues.MAX_DIMENSIONS (= \" + PointValues.MAX_DIMENSIONS + \"); got \" + dataDimensionCount + \" for field=\\\"\" + name + \"\\\"\");\n      }\n      if (indexDimensionCount > dataDimensionCount) {\n        throw new IllegalArgumentException(\"pointIndexDimensionCount must be <= pointDataDimensionCount (= \" + dataDimensionCount + \"); got \" + indexDimensionCount + \" for field=\\\"\" + name + \"\\\"\");\n      }\n      verifyConsistentDimensions(number, name, dataDimensionCount, indexDimensionCount, dimensionNumBytes);\n      dimensions.put(name, new FieldDimensions(dataDimensionCount, indexDimensionCount, dimensionNumBytes));\n    }\n\n","sourceOld":"    synchronized void setDimensions(int number, String name, int dimensionCount, int dimensionNumBytes) {\n      if (dimensionNumBytes > PointValues.MAX_NUM_BYTES) {\n        throw new IllegalArgumentException(\"dimension numBytes must be <= PointValues.MAX_NUM_BYTES (= \" + PointValues.MAX_NUM_BYTES + \"); got \" + dimensionNumBytes + \" for field=\\\"\" + name + \"\\\"\");\n      }\n      if (dimensionCount > PointValues.MAX_DIMENSIONS) {\n        throw new IllegalArgumentException(\"pointDimensionCount must be <= PointValues.MAX_DIMENSIONS (= \" + PointValues.MAX_DIMENSIONS + \"); got \" + dimensionCount + \" for field=\\\"\" + name + \"\\\"\");\n      }\n      verifyConsistentDimensions(number, name, dimensionCount, dimensionNumBytes);\n      dimensions.put(name, new FieldDimensions(dimensionCount, dimensionNumBytes));\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"59ed8c026ba85e3c42fb89605b2032dc6f9cc241","date":1581113294,"type":3,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/FieldInfos.FieldNumbers#setDimensions(int,String,int,int,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/FieldInfos.FieldNumbers#setDimensions(int,String,int,int,int).mjava","sourceNew":"    synchronized void setDimensions(int number, String name, int dimensionCount, int indexDimensionCount, int dimensionNumBytes) {\n      if (dimensionCount > PointValues.MAX_DIMENSIONS) {\n        throw new IllegalArgumentException(\"dimensionCount must be <= PointValues.MAX_DIMENSIONS (= \" + PointValues.MAX_DIMENSIONS + \"); got \" + dimensionCount + \" for field=\\\"\" + name + \"\\\"\");\n      }\n      if (dimensionNumBytes > PointValues.MAX_NUM_BYTES) {\n        throw new IllegalArgumentException(\"dimension numBytes must be <= PointValues.MAX_NUM_BYTES (= \" + PointValues.MAX_NUM_BYTES + \"); got \" + dimensionNumBytes + \" for field=\\\"\" + name + \"\\\"\");\n      }\n      if (indexDimensionCount > dimensionCount) {\n        throw new IllegalArgumentException(\"indexDimensionCount must be <= dimensionCount (= \" + dimensionCount + \"); got \" + indexDimensionCount + \" for field=\\\"\" + name + \"\\\"\");\n      }\n      if (indexDimensionCount > PointValues.MAX_INDEX_DIMENSIONS) {\n        throw new IllegalArgumentException(\"indexDimensionCount must be <= PointValues.MAX_INDEX_DIMENSIONS (= \" + PointValues.MAX_INDEX_DIMENSIONS + \"); got \" + indexDimensionCount + \" for field=\\\"\" + name + \"\\\"\");\n      }\n      verifyConsistentDimensions(number, name, dimensionCount, indexDimensionCount, dimensionNumBytes);\n      dimensions.put(name, new FieldDimensions(dimensionCount, indexDimensionCount, dimensionNumBytes));\n    }\n\n","sourceOld":"    synchronized void setDimensions(int number, String name, int dataDimensionCount, int indexDimensionCount, int dimensionNumBytes) {\n      if (dimensionNumBytes > PointValues.MAX_NUM_BYTES) {\n        throw new IllegalArgumentException(\"dimension numBytes must be <= PointValues.MAX_NUM_BYTES (= \" + PointValues.MAX_NUM_BYTES + \"); got \" + dimensionNumBytes + \" for field=\\\"\" + name + \"\\\"\");\n      }\n      if (dataDimensionCount > PointValues.MAX_DIMENSIONS) {\n        throw new IllegalArgumentException(\"pointDataDimensionCount must be <= PointValues.MAX_DIMENSIONS (= \" + PointValues.MAX_DIMENSIONS + \"); got \" + dataDimensionCount + \" for field=\\\"\" + name + \"\\\"\");\n      }\n      if (indexDimensionCount > dataDimensionCount) {\n        throw new IllegalArgumentException(\"pointIndexDimensionCount must be <= pointDataDimensionCount (= \" + dataDimensionCount + \"); got \" + indexDimensionCount + \" for field=\\\"\" + name + \"\\\"\");\n      }\n      verifyConsistentDimensions(number, name, dataDimensionCount, indexDimensionCount, dimensionNumBytes);\n      dimensions.put(name, new FieldDimensions(dataDimensionCount, indexDimensionCount, dimensionNumBytes));\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"59ed8c026ba85e3c42fb89605b2032dc6f9cc241":["f6652c943595e92c187ee904c382863013eae28f"],"f6652c943595e92c187ee904c382863013eae28f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["59ed8c026ba85e3c42fb89605b2032dc6f9cc241"]},"commit2Childs":{"59ed8c026ba85e3c42fb89605b2032dc6f9cc241":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f6652c943595e92c187ee904c382863013eae28f":["59ed8c026ba85e3c42fb89605b2032dc6f9cc241"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f6652c943595e92c187ee904c382863013eae28f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}