{"path":"lucene/backwards/src/test/org/apache/lucene/search/TestWildcard#testEmptyTerm().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/test/org/apache/lucene/search/TestWildcard#testEmptyTerm().mjava","pathOld":"backwards/src/test/org/apache/lucene/search/TestWildcard#testEmptyTerm().mjava","sourceNew":"  /**\n   * Tests if a WildcardQuery with an empty term is rewritten to an empty BooleanQuery\n   */\n  public void testEmptyTerm() throws IOException {\n    RAMDirectory indexStore = getIndexStore(\"field\", new String[]{\"nowildcard\", \"nowildcardx\"});\n    IndexSearcher searcher = new IndexSearcher(indexStore, true);\n\n    MultiTermQuery wq = new WildcardQuery(new Term(\"field\", \"\"));\n    wq.setRewriteMethod(MultiTermQuery.SCORING_BOOLEAN_QUERY_REWRITE);\n    assertMatches(searcher, wq, 0);\n    Query q = searcher.rewrite(wq);\n    assertTrue(q instanceof BooleanQuery);\n    assertEquals(0, ((BooleanQuery) q).clauses().size());\n  }\n\n","sourceOld":"  /**\n   * Tests if a WildcardQuery with an empty term is rewritten to an empty BooleanQuery\n   */\n  public void testEmptyTerm() throws IOException {\n    RAMDirectory indexStore = getIndexStore(\"field\", new String[]{\"nowildcard\", \"nowildcardx\"});\n    IndexSearcher searcher = new IndexSearcher(indexStore, true);\n\n    MultiTermQuery wq = new WildcardQuery(new Term(\"field\", \"\"));\n    wq.setRewriteMethod(MultiTermQuery.SCORING_BOOLEAN_QUERY_REWRITE);\n    assertMatches(searcher, wq, 0);\n    Query q = searcher.rewrite(wq);\n    assertTrue(q instanceof BooleanQuery);\n    assertEquals(0, ((BooleanQuery) q).clauses().size());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6","date":1272983566,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/backwards/src/test/org/apache/lucene/search/TestWildcard#testEmptyTerm().mjava","sourceNew":null,"sourceOld":"  /**\n   * Tests if a WildcardQuery with an empty term is rewritten to an empty BooleanQuery\n   */\n  public void testEmptyTerm() throws IOException {\n    RAMDirectory indexStore = getIndexStore(\"field\", new String[]{\"nowildcard\", \"nowildcardx\"});\n    IndexSearcher searcher = new IndexSearcher(indexStore, true);\n\n    MultiTermQuery wq = new WildcardQuery(new Term(\"field\", \"\"));\n    wq.setRewriteMethod(MultiTermQuery.SCORING_BOOLEAN_QUERY_REWRITE);\n    assertMatches(searcher, wq, 0);\n    Query q = searcher.rewrite(wq);\n    assertTrue(q instanceof BooleanQuery);\n    assertEquals(0, ((BooleanQuery) q).clauses().size());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["90eca6fcb6635ca73ea4fdbe2f57d2033b66d3b6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}