{"path":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testDeleteAllNRTLeftoverFiles().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testDeleteAllNRTLeftoverFiles().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testDeleteAllNRTLeftoverFiles().mjava","sourceNew":"  public void testDeleteAllNRTLeftoverFiles() throws Exception {\n\n    Directory d = new MockDirectoryWrapper(random, new RAMDirectory());\n    IndexWriter w = new IndexWriter(d, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    Document doc = new Document();\n    for(int i = 0; i < 20; i++) {\n      for(int j = 0; j < 100; ++j) {\n        w.addDocument(doc);\n      }\n      w.commit();\n      IndexReader.open(w, true).close();\n\n      w.deleteAll();\n      w.commit();\n\n      // Make sure we accumulate no files except for empty\n      // segments_N and segments.gen:\n      assertTrue(d.listAll().length <= 2);\n    }\n\n    w.close();\n    d.close();\n  }\n\n","sourceOld":"  public void testDeleteAllNRTLeftoverFiles() throws Exception {\n\n    Directory d = new MockDirectoryWrapper(random, new RAMDirectory());\n    IndexWriter w = new IndexWriter(d, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    Document doc = new Document();\n    for(int i = 0; i < 20; i++) {\n      for(int j = 0; j < 100; ++j) {\n        w.addDocument(doc);\n      }\n      w.commit();\n      IndexReader.open(w, true).close();\n\n      w.deleteAll();\n      w.commit();\n\n      // Make sure we accumulate no files except for empty\n      // segments_N and segments.gen:\n      assertTrue(d.listAll().length <= 2);\n    }\n\n    w.close();\n    d.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"629c38c4ae4e303d0617e05fbfe508140b32f0a3","date":1334500904,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testDeleteAllNRTLeftoverFiles().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testDeleteAllNRTLeftoverFiles().mjava","sourceNew":"  public void testDeleteAllNRTLeftoverFiles() throws Exception {\n\n    Directory d = new MockDirectoryWrapper(random(), new RAMDirectory());\n    IndexWriter w = new IndexWriter(d, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    Document doc = new Document();\n    for(int i = 0; i < 20; i++) {\n      for(int j = 0; j < 100; ++j) {\n        w.addDocument(doc);\n      }\n      w.commit();\n      IndexReader.open(w, true).close();\n\n      w.deleteAll();\n      w.commit();\n\n      // Make sure we accumulate no files except for empty\n      // segments_N and segments.gen:\n      assertTrue(d.listAll().length <= 2);\n    }\n\n    w.close();\n    d.close();\n  }\n\n","sourceOld":"  public void testDeleteAllNRTLeftoverFiles() throws Exception {\n\n    Directory d = new MockDirectoryWrapper(random, new RAMDirectory());\n    IndexWriter w = new IndexWriter(d, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n    Document doc = new Document();\n    for(int i = 0; i < 20; i++) {\n      for(int j = 0; j < 100; ++j) {\n        w.addDocument(doc);\n      }\n      w.commit();\n      IndexReader.open(w, true).close();\n\n      w.deleteAll();\n      w.commit();\n\n      // Make sure we accumulate no files except for empty\n      // segments_N and segments.gen:\n      assertTrue(d.listAll().length <= 2);\n    }\n\n    w.close();\n    d.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f","date":1338430031,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testDeleteAllNRTLeftoverFiles().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testDeleteAllNRTLeftoverFiles().mjava","sourceNew":"  public void testDeleteAllNRTLeftoverFiles() throws Exception {\n\n    Directory d = new MockDirectoryWrapper(random(), new RAMDirectory());\n    IndexWriter w = new IndexWriter(d, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    Document doc = new Document();\n    for(int i = 0; i < 20; i++) {\n      for(int j = 0; j < 100; ++j) {\n        w.addDocument(doc);\n      }\n      w.commit();\n      DirectoryReader.open(w, true).close();\n\n      w.deleteAll();\n      w.commit();\n\n      // Make sure we accumulate no files except for empty\n      // segments_N and segments.gen:\n      assertTrue(d.listAll().length <= 2);\n    }\n\n    w.close();\n    d.close();\n  }\n\n","sourceOld":"  public void testDeleteAllNRTLeftoverFiles() throws Exception {\n\n    Directory d = new MockDirectoryWrapper(random(), new RAMDirectory());\n    IndexWriter w = new IndexWriter(d, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    Document doc = new Document();\n    for(int i = 0; i < 20; i++) {\n      for(int j = 0; j < 100; ++j) {\n        w.addDocument(doc);\n      }\n      w.commit();\n      IndexReader.open(w, true).close();\n\n      w.deleteAll();\n      w.commit();\n\n      // Make sure we accumulate no files except for empty\n      // segments_N and segments.gen:\n      assertTrue(d.listAll().length <= 2);\n    }\n\n    w.close();\n    d.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7af110b00ea8df9429309d83e38e0533d82e144f","date":1376924768,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testDeleteAllNRTLeftoverFiles().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testDeleteAllNRTLeftoverFiles().mjava","sourceNew":"  public void testDeleteAllNRTLeftoverFiles() throws Exception {\n\n    Directory d = new MockDirectoryWrapper(random(), new RAMDirectory());\n    IndexWriter w = new IndexWriter(d, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    Document doc = new Document();\n    for(int i = 0; i < 20; i++) {\n      for(int j = 0; j < 100; ++j) {\n        w.addDocument(doc);\n      }\n      w.commit();\n      DirectoryReader.open(w, true).close();\n\n      w.deleteAll();\n      w.commit();\n      // Make sure we accumulate no files except for empty\n      // segments_N and segments.gen:\n      assertTrue(d.listAll().length <= 2);\n    }\n\n    w.close();\n    d.close();\n  }\n\n","sourceOld":"  public void testDeleteAllNRTLeftoverFiles() throws Exception {\n\n    Directory d = new MockDirectoryWrapper(random(), new RAMDirectory());\n    IndexWriter w = new IndexWriter(d, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    Document doc = new Document();\n    for(int i = 0; i < 20; i++) {\n      for(int j = 0; j < 100; ++j) {\n        w.addDocument(doc);\n      }\n      w.commit();\n      DirectoryReader.open(w, true).close();\n\n      w.deleteAll();\n      w.commit();\n\n      // Make sure we accumulate no files except for empty\n      // segments_N and segments.gen:\n      assertTrue(d.listAll().length <= 2);\n    }\n\n    w.close();\n    d.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"31d4861802ca404d78ca1d15f4550eec415b9199","date":1376947894,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testDeleteAllNRTLeftoverFiles().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testDeleteAllNRTLeftoverFiles().mjava","sourceNew":"  public void testDeleteAllNRTLeftoverFiles() throws Exception {\n\n    Directory d = new MockDirectoryWrapper(random(), new RAMDirectory());\n    IndexWriter w = new IndexWriter(d, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    Document doc = new Document();\n    for(int i = 0; i < 20; i++) {\n      for(int j = 0; j < 100; ++j) {\n        w.addDocument(doc);\n      }\n      w.commit();\n      DirectoryReader.open(w, true).close();\n\n      w.deleteAll();\n      w.commit();\n      // Make sure we accumulate no files except for empty\n      // segments_N and segments.gen:\n      assertTrue(d.listAll().length <= 2);\n    }\n\n    w.close();\n    d.close();\n  }\n\n","sourceOld":"  public void testDeleteAllNRTLeftoverFiles() throws Exception {\n\n    Directory d = new MockDirectoryWrapper(random(), new RAMDirectory());\n    IndexWriter w = new IndexWriter(d, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    Document doc = new Document();\n    for(int i = 0; i < 20; i++) {\n      for(int j = 0; j < 100; ++j) {\n        w.addDocument(doc);\n      }\n      w.commit();\n      DirectoryReader.open(w, true).close();\n\n      w.deleteAll();\n      w.commit();\n\n      // Make sure we accumulate no files except for empty\n      // segments_N and segments.gen:\n      assertTrue(d.listAll().length <= 2);\n    }\n\n    w.close();\n    d.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3dffec77fb8f7d0e9ca4869dddd6af94528b4576","date":1377875202,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testDeleteAllNRTLeftoverFiles().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testDeleteAllNRTLeftoverFiles().mjava","sourceNew":"  public void testDeleteAllNRTLeftoverFiles() throws Exception {\n\n    Directory d = new MockDirectoryWrapper(random(), new RAMDirectory());\n    IndexWriter w = new IndexWriter(d, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    Document doc = new Document();\n    for(int i = 0; i < 20; i++) {\n      for(int j = 0; j < 100; ++j) {\n        w.addDocument(doc);\n      }\n      w.commit();\n      DirectoryReader.open(w, true).close();\n\n      w.deleteAll();\n      w.commit();\n      // Make sure we accumulate no files except for empty\n      // segments_N and segments.gen:\n      assertTrue(d.listAll().length <= 2);\n    }\n\n    w.close();\n    d.close();\n  }\n\n","sourceOld":"  public void testDeleteAllNRTLeftoverFiles() throws Exception {\n\n    Directory d = new MockDirectoryWrapper(random(), new RAMDirectory());\n    IndexWriter w = new IndexWriter(d, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    Document doc = new Document();\n    for(int i = 0; i < 20; i++) {\n      for(int j = 0; j < 100; ++j) {\n        w.addDocument(doc);\n      }\n      w.commit();\n      DirectoryReader.open(w, true).close();\n\n      w.deleteAll();\n      w.commit();\n\n      // Make sure we accumulate no files except for empty\n      // segments_N and segments.gen:\n      assertTrue(d.listAll().length <= 2);\n    }\n\n    w.close();\n    d.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testDeleteAllNRTLeftoverFiles().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testDeleteAllNRTLeftoverFiles().mjava","sourceNew":"  public void testDeleteAllNRTLeftoverFiles() throws Exception {\n\n    Directory d = new MockDirectoryWrapper(random(), new RAMDirectory());\n    IndexWriter w = new IndexWriter(d, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    Document doc = new Document();\n    for(int i = 0; i < 20; i++) {\n      for(int j = 0; j < 100; ++j) {\n        w.addDocument(doc);\n      }\n      w.commit();\n      DirectoryReader.open(w, true).close();\n\n      w.deleteAll();\n      w.commit();\n      // Make sure we accumulate no files except for empty\n      // segments_N and segments.gen:\n      assertTrue(d.listAll().length <= 2);\n    }\n\n    w.shutdown();\n    d.close();\n  }\n\n","sourceOld":"  public void testDeleteAllNRTLeftoverFiles() throws Exception {\n\n    Directory d = new MockDirectoryWrapper(random(), new RAMDirectory());\n    IndexWriter w = new IndexWriter(d, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    Document doc = new Document();\n    for(int i = 0; i < 20; i++) {\n      for(int j = 0; j < 100; ++j) {\n        w.addDocument(doc);\n      }\n      w.commit();\n      DirectoryReader.open(w, true).close();\n\n      w.deleteAll();\n      w.commit();\n      // Make sure we accumulate no files except for empty\n      // segments_N and segments.gen:\n      assertTrue(d.listAll().length <= 2);\n    }\n\n    w.close();\n    d.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testDeleteAllNRTLeftoverFiles().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testDeleteAllNRTLeftoverFiles().mjava","sourceNew":"  public void testDeleteAllNRTLeftoverFiles() throws Exception {\n\n    Directory d = new MockDirectoryWrapper(random(), new RAMDirectory());\n    IndexWriter w = new IndexWriter(d, new IndexWriterConfig(new MockAnalyzer(random())));\n    Document doc = new Document();\n    for(int i = 0; i < 20; i++) {\n      for(int j = 0; j < 100; ++j) {\n        w.addDocument(doc);\n      }\n      w.commit();\n      DirectoryReader.open(w, true).close();\n\n      w.deleteAll();\n      w.commit();\n      // Make sure we accumulate no files except for empty\n      // segments_N and segments.gen:\n      assertTrue(d.listAll().length <= 2);\n    }\n\n    w.close();\n    d.close();\n  }\n\n","sourceOld":"  public void testDeleteAllNRTLeftoverFiles() throws Exception {\n\n    Directory d = new MockDirectoryWrapper(random(), new RAMDirectory());\n    IndexWriter w = new IndexWriter(d, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    Document doc = new Document();\n    for(int i = 0; i < 20; i++) {\n      for(int j = 0; j < 100; ++j) {\n        w.addDocument(doc);\n      }\n      w.commit();\n      DirectoryReader.open(w, true).close();\n\n      w.deleteAll();\n      w.commit();\n      // Make sure we accumulate no files except for empty\n      // segments_N and segments.gen:\n      assertTrue(d.listAll().length <= 2);\n    }\n\n    w.shutdown();\n    d.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"98d2deb8c96c79ebef084a1f8e5a1a6c08608f13","date":1409346855,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testDeleteAllNRTLeftoverFiles().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testDeleteAllNRTLeftoverFiles().mjava","sourceNew":"  public void testDeleteAllNRTLeftoverFiles() throws Exception {\n\n    MockDirectoryWrapper d = new MockDirectoryWrapper(random(), new RAMDirectory());\n    d.setEnableVirusScanner(false); // needs for files to actually be deleted\n    IndexWriter w = new IndexWriter(d, new IndexWriterConfig(new MockAnalyzer(random())));\n    Document doc = new Document();\n    for(int i = 0; i < 20; i++) {\n      for(int j = 0; j < 100; ++j) {\n        w.addDocument(doc);\n      }\n      w.commit();\n      DirectoryReader.open(w, true).close();\n\n      w.deleteAll();\n      w.commit();\n      // Make sure we accumulate no files except for empty\n      // segments_N and segments.gen:\n      assertTrue(d.listAll().length <= 2);\n    }\n\n    w.close();\n    d.close();\n  }\n\n","sourceOld":"  public void testDeleteAllNRTLeftoverFiles() throws Exception {\n\n    Directory d = new MockDirectoryWrapper(random(), new RAMDirectory());\n    IndexWriter w = new IndexWriter(d, new IndexWriterConfig(new MockAnalyzer(random())));\n    Document doc = new Document();\n    for(int i = 0; i < 20; i++) {\n      for(int j = 0; j < 100; ++j) {\n        w.addDocument(doc);\n      }\n      w.commit();\n      DirectoryReader.open(w, true).close();\n\n      w.deleteAll();\n      w.commit();\n      // Make sure we accumulate no files except for empty\n      // segments_N and segments.gen:\n      assertTrue(d.listAll().length <= 2);\n    }\n\n    w.close();\n    d.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a1862266772deb28cdcb7d996b64d2177022687","date":1453077824,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testDeleteAllNRTLeftoverFiles().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testDeleteAllNRTLeftoverFiles().mjava","sourceNew":"  public void testDeleteAllNRTLeftoverFiles() throws Exception {\n\n    MockDirectoryWrapper d = new MockDirectoryWrapper(random(), new RAMDirectory());\n    d.setEnableVirusScanner(false); // needs for files to actually be deleted\n    IndexWriter w = new IndexWriter(d, new IndexWriterConfig(new MockAnalyzer(random())));\n    Document doc = new Document();\n    for(int i = 0; i < 20; i++) {\n      for(int j = 0; j < 100; ++j) {\n        w.addDocument(doc);\n      }\n      w.commit();\n      DirectoryReader.open(w).close();\n\n      w.deleteAll();\n      w.commit();\n      // Make sure we accumulate no files except for empty\n      // segments_N and segments.gen:\n      assertTrue(d.listAll().length <= 2);\n    }\n\n    w.close();\n    d.close();\n  }\n\n","sourceOld":"  public void testDeleteAllNRTLeftoverFiles() throws Exception {\n\n    MockDirectoryWrapper d = new MockDirectoryWrapper(random(), new RAMDirectory());\n    d.setEnableVirusScanner(false); // needs for files to actually be deleted\n    IndexWriter w = new IndexWriter(d, new IndexWriterConfig(new MockAnalyzer(random())));\n    Document doc = new Document();\n    for(int i = 0; i < 20; i++) {\n      for(int j = 0; j < 100; ++j) {\n        w.addDocument(doc);\n      }\n      w.commit();\n      DirectoryReader.open(w, true).close();\n\n      w.deleteAll();\n      w.commit();\n      // Make sure we accumulate no files except for empty\n      // segments_N and segments.gen:\n      assertTrue(d.listAll().length <= 2);\n    }\n\n    w.close();\n    d.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6bfe104fc023fadc9e709f8d17403d2cc61133fe","date":1454446396,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testDeleteAllNRTLeftoverFiles().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testDeleteAllNRTLeftoverFiles().mjava","sourceNew":"  public void testDeleteAllNRTLeftoverFiles() throws Exception {\n\n    MockDirectoryWrapper d = new MockDirectoryWrapper(random(), new RAMDirectory());\n    IndexWriter w = new IndexWriter(d, new IndexWriterConfig(new MockAnalyzer(random())));\n    Document doc = new Document();\n    for(int i = 0; i < 20; i++) {\n      for(int j = 0; j < 100; ++j) {\n        w.addDocument(doc);\n      }\n      w.commit();\n      DirectoryReader.open(w).close();\n\n      w.deleteAll();\n      w.commit();\n      // Make sure we accumulate no files except for empty\n      // segments_N and segments.gen:\n      assertTrue(d.listAll().length <= 2);\n    }\n\n    w.close();\n    d.close();\n  }\n\n","sourceOld":"  public void testDeleteAllNRTLeftoverFiles() throws Exception {\n\n    MockDirectoryWrapper d = new MockDirectoryWrapper(random(), new RAMDirectory());\n    d.setEnableVirusScanner(false); // needs for files to actually be deleted\n    IndexWriter w = new IndexWriter(d, new IndexWriterConfig(new MockAnalyzer(random())));\n    Document doc = new Document();\n    for(int i = 0; i < 20; i++) {\n      for(int j = 0; j < 100; ++j) {\n        w.addDocument(doc);\n      }\n      w.commit();\n      DirectoryReader.open(w).close();\n\n      w.deleteAll();\n      w.commit();\n      // Make sure we accumulate no files except for empty\n      // segments_N and segments.gen:\n      assertTrue(d.listAll().length <= 2);\n    }\n\n    w.close();\n    d.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b470f36a9372c97283360b1304eacbde22df6c0d","date":1454765175,"type":3,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testDeleteAllNRTLeftoverFiles().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testDeleteAllNRTLeftoverFiles().mjava","sourceNew":"  public void testDeleteAllNRTLeftoverFiles() throws Exception {\n\n    MockDirectoryWrapper d = new MockDirectoryWrapper(random(), new RAMDirectory());\n    IndexWriter w = new IndexWriter(d, new IndexWriterConfig(new MockAnalyzer(random())));\n    Document doc = new Document();\n    for(int i = 0; i < 20; i++) {\n      for(int j = 0; j < 100; ++j) {\n        w.addDocument(doc);\n      }\n      w.commit();\n      DirectoryReader.open(w).close();\n\n      w.deleteAll();\n      w.commit();\n      // Make sure we accumulate no files except for empty\n      // segments_N and segments.gen:\n      assertTrue(d.listAll().length <= 2);\n    }\n\n    w.close();\n    d.close();\n  }\n\n","sourceOld":"  public void testDeleteAllNRTLeftoverFiles() throws Exception {\n\n    MockDirectoryWrapper d = new MockDirectoryWrapper(random(), new RAMDirectory());\n    d.setEnableVirusScanner(false); // needs for files to actually be deleted\n    IndexWriter w = new IndexWriter(d, new IndexWriterConfig(new MockAnalyzer(random())));\n    Document doc = new Document();\n    for(int i = 0; i < 20; i++) {\n      for(int j = 0; j < 100; ++j) {\n        w.addDocument(doc);\n      }\n      w.commit();\n      DirectoryReader.open(w).close();\n\n      w.deleteAll();\n      w.commit();\n      // Make sure we accumulate no files except for empty\n      // segments_N and segments.gen:\n      assertTrue(d.listAll().length <= 2);\n    }\n\n    w.close();\n    d.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1e6acbaae7af722f17204ceccf0f7db5753eccf3","date":1454775255,"type":3,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testDeleteAllNRTLeftoverFiles().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testDeleteAllNRTLeftoverFiles().mjava","sourceNew":"  public void testDeleteAllNRTLeftoverFiles() throws Exception {\n\n    MockDirectoryWrapper d = new MockDirectoryWrapper(random(), new RAMDirectory());\n    IndexWriter w = new IndexWriter(d, new IndexWriterConfig(new MockAnalyzer(random())));\n    Document doc = new Document();\n    for(int i = 0; i < 20; i++) {\n      for(int j = 0; j < 100; ++j) {\n        w.addDocument(doc);\n      }\n      w.commit();\n      DirectoryReader.open(w).close();\n\n      w.deleteAll();\n      w.commit();\n      // Make sure we accumulate no files except for empty\n      // segments_N and segments.gen:\n      assertTrue(d.listAll().length <= 2);\n    }\n\n    w.close();\n    d.close();\n  }\n\n","sourceOld":"  public void testDeleteAllNRTLeftoverFiles() throws Exception {\n\n    MockDirectoryWrapper d = new MockDirectoryWrapper(random(), new RAMDirectory());\n    d.setEnableVirusScanner(false); // needs for files to actually be deleted\n    IndexWriter w = new IndexWriter(d, new IndexWriterConfig(new MockAnalyzer(random())));\n    Document doc = new Document();\n    for(int i = 0; i < 20; i++) {\n      for(int j = 0; j < 100; ++j) {\n        w.addDocument(doc);\n      }\n      w.commit();\n      DirectoryReader.open(w).close();\n\n      w.deleteAll();\n      w.commit();\n      // Make sure we accumulate no files except for empty\n      // segments_N and segments.gen:\n      assertTrue(d.listAll().length <= 2);\n    }\n\n    w.close();\n    d.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5a207d19eac354d649c3f0e2cce070017c78125e","date":1454776470,"type":3,"author":"Erick Erickson","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testDeleteAllNRTLeftoverFiles().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testDeleteAllNRTLeftoverFiles().mjava","sourceNew":"  public void testDeleteAllNRTLeftoverFiles() throws Exception {\n\n    MockDirectoryWrapper d = new MockDirectoryWrapper(random(), new RAMDirectory());\n    IndexWriter w = new IndexWriter(d, new IndexWriterConfig(new MockAnalyzer(random())));\n    Document doc = new Document();\n    for(int i = 0; i < 20; i++) {\n      for(int j = 0; j < 100; ++j) {\n        w.addDocument(doc);\n      }\n      w.commit();\n      DirectoryReader.open(w).close();\n\n      w.deleteAll();\n      w.commit();\n      // Make sure we accumulate no files except for empty\n      // segments_N and segments.gen:\n      assertTrue(d.listAll().length <= 2);\n    }\n\n    w.close();\n    d.close();\n  }\n\n","sourceOld":"  public void testDeleteAllNRTLeftoverFiles() throws Exception {\n\n    MockDirectoryWrapper d = new MockDirectoryWrapper(random(), new RAMDirectory());\n    d.setEnableVirusScanner(false); // needs for files to actually be deleted\n    IndexWriter w = new IndexWriter(d, new IndexWriterConfig(new MockAnalyzer(random())));\n    Document doc = new Document();\n    for(int i = 0; i < 20; i++) {\n      for(int j = 0; j < 100; ++j) {\n        w.addDocument(doc);\n      }\n      w.commit();\n      DirectoryReader.open(w).close();\n\n      w.deleteAll();\n      w.commit();\n      // Make sure we accumulate no files except for empty\n      // segments_N and segments.gen:\n      assertTrue(d.listAll().length <= 2);\n    }\n\n    w.close();\n    d.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d77dafd89756a5161d244985903e3487ca109182","date":1548679743,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testDeleteAllNRTLeftoverFiles().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testDeleteAllNRTLeftoverFiles().mjava","sourceNew":"  public void testDeleteAllNRTLeftoverFiles() throws Exception {\n\n    MockDirectoryWrapper d = new MockDirectoryWrapper(random(), new ByteBuffersDirectory());\n    IndexWriter w = new IndexWriter(d, new IndexWriterConfig(new MockAnalyzer(random())));\n    Document doc = new Document();\n    for(int i = 0; i < 20; i++) {\n      for(int j = 0; j < 100; ++j) {\n        w.addDocument(doc);\n      }\n      w.commit();\n      DirectoryReader.open(w).close();\n\n      w.deleteAll();\n      w.commit();\n      // Make sure we accumulate no files except for empty\n      // segments_N and segments.gen:\n      assertTrue(d.listAll().length <= 2);\n    }\n\n    w.close();\n    d.close();\n  }\n\n","sourceOld":"  public void testDeleteAllNRTLeftoverFiles() throws Exception {\n\n    MockDirectoryWrapper d = new MockDirectoryWrapper(random(), new RAMDirectory());\n    IndexWriter w = new IndexWriter(d, new IndexWriterConfig(new MockAnalyzer(random())));\n    Document doc = new Document();\n    for(int i = 0; i < 20; i++) {\n      for(int j = 0; j < 100; ++j) {\n        w.addDocument(doc);\n      }\n      w.commit();\n      DirectoryReader.open(w).close();\n\n      w.deleteAll();\n      w.commit();\n      // Make sure we accumulate no files except for empty\n      // segments_N and segments.gen:\n      assertTrue(d.listAll().length <= 2);\n    }\n\n    w.close();\n    d.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7af110b00ea8df9429309d83e38e0533d82e144f":["e7e8d6f15900ee22ac3cb0a503f15dc952a3580f"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5a207d19eac354d649c3f0e2cce070017c78125e":["2a1862266772deb28cdcb7d996b64d2177022687","b470f36a9372c97283360b1304eacbde22df6c0d"],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":["e7e8d6f15900ee22ac3cb0a503f15dc952a3580f","7af110b00ea8df9429309d83e38e0533d82e144f"],"31d4861802ca404d78ca1d15f4550eec415b9199":["e7e8d6f15900ee22ac3cb0a503f15dc952a3580f","7af110b00ea8df9429309d83e38e0533d82e144f"],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":["2a1862266772deb28cdcb7d996b64d2177022687","b470f36a9372c97283360b1304eacbde22df6c0d"],"d77dafd89756a5161d244985903e3487ca109182":["5a207d19eac354d649c3f0e2cce070017c78125e"],"98d2deb8c96c79ebef084a1f8e5a1a6c08608f13":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"2a1862266772deb28cdcb7d996b64d2177022687":["98d2deb8c96c79ebef084a1f8e5a1a6c08608f13"],"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"b470f36a9372c97283360b1304eacbde22df6c0d":["2a1862266772deb28cdcb7d996b64d2177022687","6bfe104fc023fadc9e709f8d17403d2cc61133fe"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d0ef034a4f10871667ae75181537775ddcf8ade4":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"6bfe104fc023fadc9e709f8d17403d2cc61133fe":["2a1862266772deb28cdcb7d996b64d2177022687"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["7af110b00ea8df9429309d83e38e0533d82e144f"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d77dafd89756a5161d244985903e3487ca109182"]},"commit2Childs":{"7af110b00ea8df9429309d83e38e0533d82e144f":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","31d4861802ca404d78ca1d15f4550eec415b9199","ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"5a207d19eac354d649c3f0e2cce070017c78125e":["d77dafd89756a5161d244985903e3487ca109182"],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":[],"31d4861802ca404d78ca1d15f4550eec415b9199":[],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":[],"d77dafd89756a5161d244985903e3487ca109182":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"98d2deb8c96c79ebef084a1f8e5a1a6c08608f13":["2a1862266772deb28cdcb7d996b64d2177022687"],"2a1862266772deb28cdcb7d996b64d2177022687":["5a207d19eac354d649c3f0e2cce070017c78125e","1e6acbaae7af722f17204ceccf0f7db5753eccf3","b470f36a9372c97283360b1304eacbde22df6c0d","6bfe104fc023fadc9e709f8d17403d2cc61133fe"],"e7e8d6f15900ee22ac3cb0a503f15dc952a3580f":["7af110b00ea8df9429309d83e38e0533d82e144f","3dffec77fb8f7d0e9ca4869dddd6af94528b4576","31d4861802ca404d78ca1d15f4550eec415b9199"],"b470f36a9372c97283360b1304eacbde22df6c0d":["5a207d19eac354d649c3f0e2cce070017c78125e","1e6acbaae7af722f17204ceccf0f7db5753eccf3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["98d2deb8c96c79ebef084a1f8e5a1a6c08608f13"],"6bfe104fc023fadc9e709f8d17403d2cc61133fe":["b470f36a9372c97283360b1304eacbde22df6c0d"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["e7e8d6f15900ee22ac3cb0a503f15dc952a3580f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","31d4861802ca404d78ca1d15f4550eec415b9199","1e6acbaae7af722f17204ceccf0f7db5753eccf3","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}