{"path":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestLineEntityProcessor#testNo_xsd_files().mjava","commits":[{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestLineEntityProcessor#testNo_xsd_files().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestLineEntityProcessor#testNo_xsd_files().mjava","sourceNew":"  @Test\n  /************************************************************************/\n  public void testNo_xsd_files() throws IOException {\n    /* we want to create the equiv of :-\n     *  <entity name=\"list_all_files\" \n     *           processor=\"LineEntityProcessor\"\n     *           fileName=\"dummy.lis\"\n     *           omitLineRegex=\"\\\\.xsd\"\n     *           />\n     */\n    Map attrs = createMap(\n            LineEntityProcessor.URL, \"dummy.lis\",\n            LineEntityProcessor.SKIP_LINE_REGEX, \"\\\\.xsd\"\n    );\n\n    Context c = getContext(\n            null,                          //parentEntity\n            new VariableResolverImpl(),  //resolver\n            getDataSource(filecontents),   //parentDataSource\n            Context.FULL_DUMP,                             //currProcess\n            Collections.EMPTY_LIST,        //entityFields\n            attrs                          //entityAttrs\n    );\n    LineEntityProcessor ep = new LineEntityProcessor();\n    ep.init(c);\n\n    /// call the entity processor to walk the directory\n    List<String> fList = new ArrayList<String>();\n    while (true) {\n      Map<String, Object> f = ep.nextRow();\n      if (f == null) break;\n      fList.add((String) f.get(\"rawLine\"));\n    }\n    assertEquals(18, fList.size());\n  }\n\n","sourceOld":"  @Test\n  /************************************************************************/\n  public void testNo_xsd_files() throws IOException {\n    /* we want to create the equiv of :-\n     *  <entity name=\"list_all_files\" \n     *           processor=\"LineEntityProcessor\"\n     *           fileName=\"dummy.lis\"\n     *           omitLineRegex=\"\\\\.xsd\"\n     *           />\n     */\n    Map attrs = createMap(\n            LineEntityProcessor.URL, \"dummy.lis\",\n            LineEntityProcessor.SKIP_LINE_REGEX, \"\\\\.xsd\"\n    );\n\n    Context c = getContext(\n            null,                          //parentEntity\n            new VariableResolverImpl(),  //resolver\n            getDataSource(filecontents),   //parentDataSource\n            Context.FULL_DUMP,                             //currProcess\n            Collections.EMPTY_LIST,        //entityFields\n            attrs                          //entityAttrs\n    );\n    LineEntityProcessor ep = new LineEntityProcessor();\n    ep.init(c);\n\n    /// call the entity processor to walk the directory\n    List<String> fList = new ArrayList<String>();\n    while (true) {\n      Map<String, Object> f = ep.nextRow();\n      if (f == null) break;\n      fList.add((String) f.get(\"rawLine\"));\n    }\n    assertEquals(18, fList.size());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestLineEntityProcessor#testNo_xsd_files().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestLineEntityProcessor#testNo_xsd_files().mjava","sourceNew":"  @Test\n  /************************************************************************/\n  public void testNo_xsd_files() throws IOException {\n    /* we want to create the equiv of :-\n     *  <entity name=\"list_all_files\" \n     *           processor=\"LineEntityProcessor\"\n     *           fileName=\"dummy.lis\"\n     *           omitLineRegex=\"\\\\.xsd\"\n     *           />\n     */\n    Map attrs = createMap(\n            LineEntityProcessor.URL, \"dummy.lis\",\n            LineEntityProcessor.SKIP_LINE_REGEX, \"\\\\.xsd\"\n    );\n\n    Context c = getContext(\n            null,                          //parentEntity\n            new VariableResolverImpl(),  //resolver\n            getDataSource(filecontents),   //parentDataSource\n            Context.FULL_DUMP,                             //currProcess\n            Collections.EMPTY_LIST,        //entityFields\n            attrs                          //entityAttrs\n    );\n    LineEntityProcessor ep = new LineEntityProcessor();\n    ep.init(c);\n\n    /// call the entity processor to walk the directory\n    List<String> fList = new ArrayList<String>();\n    while (true) {\n      Map<String, Object> f = ep.nextRow();\n      if (f == null) break;\n      fList.add((String) f.get(\"rawLine\"));\n    }\n    assertEquals(18, fList.size());\n  }\n\n","sourceOld":"  @Test\n  /************************************************************************/\n  public void testNo_xsd_files() throws IOException {\n    /* we want to create the equiv of :-\n     *  <entity name=\"list_all_files\" \n     *           processor=\"LineEntityProcessor\"\n     *           fileName=\"dummy.lis\"\n     *           omitLineRegex=\"\\\\.xsd\"\n     *           />\n     */\n    Map attrs = createMap(\n            LineEntityProcessor.URL, \"dummy.lis\",\n            LineEntityProcessor.SKIP_LINE_REGEX, \"\\\\.xsd\"\n    );\n\n    Context c = getContext(\n            null,                          //parentEntity\n            new VariableResolverImpl(),  //resolver\n            getDataSource(filecontents),   //parentDataSource\n            Context.FULL_DUMP,                             //currProcess\n            Collections.EMPTY_LIST,        //entityFields\n            attrs                          //entityAttrs\n    );\n    LineEntityProcessor ep = new LineEntityProcessor();\n    ep.init(c);\n\n    /// call the entity processor to walk the directory\n    List<String> fList = new ArrayList<String>();\n    while (true) {\n      Map<String, Object> f = ep.nextRow();\n      if (f == null) break;\n      fList.add((String) f.get(\"rawLine\"));\n    }\n    assertEquals(18, fList.size());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c7b0ae5716b6c2044195a818e9ae58205175659","date":1353342230,"type":3,"author":"James Dyer","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestLineEntityProcessor#testNo_xsd_files().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestLineEntityProcessor#testNo_xsd_files().mjava","sourceNew":"  @Test\n  /************************************************************************/\n  public void testNo_xsd_files() throws IOException {\n    /* we want to create the equiv of :-\n     *  <entity name=\"list_all_files\" \n     *           processor=\"LineEntityProcessor\"\n     *           fileName=\"dummy.lis\"\n     *           omitLineRegex=\"\\\\.xsd\"\n     *           />\n     */\n    Map attrs = createMap(\n            LineEntityProcessor.URL, \"dummy.lis\",\n            LineEntityProcessor.SKIP_LINE_REGEX, \"\\\\.xsd\"\n    );\n\n    Context c = getContext(\n            null,                          //parentEntity\n            new VariableResolver(),  //resolver\n            getDataSource(filecontents),   //parentDataSource\n            Context.FULL_DUMP,                             //currProcess\n            Collections.EMPTY_LIST,        //entityFields\n            attrs                          //entityAttrs\n    );\n    LineEntityProcessor ep = new LineEntityProcessor();\n    ep.init(c);\n\n    /// call the entity processor to walk the directory\n    List<String> fList = new ArrayList<String>();\n    while (true) {\n      Map<String, Object> f = ep.nextRow();\n      if (f == null) break;\n      fList.add((String) f.get(\"rawLine\"));\n    }\n    assertEquals(18, fList.size());\n  }\n\n","sourceOld":"  @Test\n  /************************************************************************/\n  public void testNo_xsd_files() throws IOException {\n    /* we want to create the equiv of :-\n     *  <entity name=\"list_all_files\" \n     *           processor=\"LineEntityProcessor\"\n     *           fileName=\"dummy.lis\"\n     *           omitLineRegex=\"\\\\.xsd\"\n     *           />\n     */\n    Map attrs = createMap(\n            LineEntityProcessor.URL, \"dummy.lis\",\n            LineEntityProcessor.SKIP_LINE_REGEX, \"\\\\.xsd\"\n    );\n\n    Context c = getContext(\n            null,                          //parentEntity\n            new VariableResolverImpl(),  //resolver\n            getDataSource(filecontents),   //parentDataSource\n            Context.FULL_DUMP,                             //currProcess\n            Collections.EMPTY_LIST,        //entityFields\n            attrs                          //entityAttrs\n    );\n    LineEntityProcessor ep = new LineEntityProcessor();\n    ep.init(c);\n\n    /// call the entity processor to walk the directory\n    List<String> fList = new ArrayList<String>();\n    while (true) {\n      Map<String, Object> f = ep.nextRow();\n      if (f == null) break;\n      fList.add((String) f.get(\"rawLine\"));\n    }\n    assertEquals(18, fList.size());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"407687e67faf6e1f02a211ca078d8e3eed631027","date":1355157407,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestLineEntityProcessor#testNo_xsd_files().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestLineEntityProcessor#testNo_xsd_files().mjava","sourceNew":"  @Test\n  /************************************************************************/\n  public void testNo_xsd_files() throws IOException {\n    /* we want to create the equiv of :-\n     *  <entity name=\"list_all_files\" \n     *           processor=\"LineEntityProcessor\"\n     *           fileName=\"dummy.lis\"\n     *           omitLineRegex=\"\\\\.xsd\"\n     *           />\n     */\n    Map attrs = createMap(\n            LineEntityProcessor.URL, \"dummy.lis\",\n            LineEntityProcessor.SKIP_LINE_REGEX, \"\\\\.xsd\"\n    );\n\n    Context c = getContext(\n            null,                          //parentEntity\n            new VariableResolver(),  //resolver\n            getDataSource(filecontents),   //parentDataSource\n            Context.FULL_DUMP,                             //currProcess\n            Collections.EMPTY_LIST,        //entityFields\n            attrs                          //entityAttrs\n    );\n    LineEntityProcessor ep = new LineEntityProcessor();\n    ep.init(c);\n\n    /// call the entity processor to walk the directory\n    List<String> fList = new ArrayList<String>();\n    while (true) {\n      Map<String, Object> f = ep.nextRow();\n      if (f == null) break;\n      fList.add((String) f.get(\"rawLine\"));\n    }\n    assertEquals(18, fList.size());\n  }\n\n","sourceOld":"  @Test\n  /************************************************************************/\n  public void testNo_xsd_files() throws IOException {\n    /* we want to create the equiv of :-\n     *  <entity name=\"list_all_files\" \n     *           processor=\"LineEntityProcessor\"\n     *           fileName=\"dummy.lis\"\n     *           omitLineRegex=\"\\\\.xsd\"\n     *           />\n     */\n    Map attrs = createMap(\n            LineEntityProcessor.URL, \"dummy.lis\",\n            LineEntityProcessor.SKIP_LINE_REGEX, \"\\\\.xsd\"\n    );\n\n    Context c = getContext(\n            null,                          //parentEntity\n            new VariableResolverImpl(),  //resolver\n            getDataSource(filecontents),   //parentDataSource\n            Context.FULL_DUMP,                             //currProcess\n            Collections.EMPTY_LIST,        //entityFields\n            attrs                          //entityAttrs\n    );\n    LineEntityProcessor ep = new LineEntityProcessor();\n    ep.init(c);\n\n    /// call the entity processor to walk the directory\n    List<String> fList = new ArrayList<String>();\n    while (true) {\n      Map<String, Object> f = ep.nextRow();\n      if (f == null) break;\n      fList.add((String) f.get(\"rawLine\"));\n    }\n    assertEquals(18, fList.size());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestLineEntityProcessor#testNo_xsd_files().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestLineEntityProcessor#testNo_xsd_files().mjava","sourceNew":"  @Test\n  /************************************************************************/\n  public void testNo_xsd_files() throws IOException {\n    /* we want to create the equiv of :-\n     *  <entity name=\"list_all_files\" \n     *           processor=\"LineEntityProcessor\"\n     *           fileName=\"dummy.lis\"\n     *           omitLineRegex=\"\\\\.xsd\"\n     *           />\n     */\n    Map attrs = createMap(\n            LineEntityProcessor.URL, \"dummy.lis\",\n            LineEntityProcessor.SKIP_LINE_REGEX, \"\\\\.xsd\"\n    );\n\n    Context c = getContext(\n            null,                          //parentEntity\n            new VariableResolver(),  //resolver\n            getDataSource(filecontents),   //parentDataSource\n            Context.FULL_DUMP,                             //currProcess\n            Collections.EMPTY_LIST,        //entityFields\n            attrs                          //entityAttrs\n    );\n    LineEntityProcessor ep = new LineEntityProcessor();\n    ep.init(c);\n\n    /// call the entity processor to walk the directory\n    List<String> fList = new ArrayList<>();\n    while (true) {\n      Map<String, Object> f = ep.nextRow();\n      if (f == null) break;\n      fList.add((String) f.get(\"rawLine\"));\n    }\n    assertEquals(18, fList.size());\n  }\n\n","sourceOld":"  @Test\n  /************************************************************************/\n  public void testNo_xsd_files() throws IOException {\n    /* we want to create the equiv of :-\n     *  <entity name=\"list_all_files\" \n     *           processor=\"LineEntityProcessor\"\n     *           fileName=\"dummy.lis\"\n     *           omitLineRegex=\"\\\\.xsd\"\n     *           />\n     */\n    Map attrs = createMap(\n            LineEntityProcessor.URL, \"dummy.lis\",\n            LineEntityProcessor.SKIP_LINE_REGEX, \"\\\\.xsd\"\n    );\n\n    Context c = getContext(\n            null,                          //parentEntity\n            new VariableResolver(),  //resolver\n            getDataSource(filecontents),   //parentDataSource\n            Context.FULL_DUMP,                             //currProcess\n            Collections.EMPTY_LIST,        //entityFields\n            attrs                          //entityAttrs\n    );\n    LineEntityProcessor ep = new LineEntityProcessor();\n    ep.init(c);\n\n    /// call the entity processor to walk the directory\n    List<String> fList = new ArrayList<String>();\n    while (true) {\n      Map<String, Object> f = ep.nextRow();\n      if (f == null) break;\n      fList.add((String) f.get(\"rawLine\"));\n    }\n    assertEquals(18, fList.size());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9","date":1574619880,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestLineEntityProcessor#testNo_xsd_files().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestLineEntityProcessor#testNo_xsd_files().mjava","sourceNew":"  @SuppressWarnings(\"rawtypes\")\n  @Test\n  /************************************************************************/\n  public void testNo_xsd_files() throws IOException {\n    /* we want to create the equiv of :-\n     *  <entity name=\"list_all_files\" \n     *           processor=\"LineEntityProcessor\"\n     *           fileName=\"dummy.lis\"\n     *           omitLineRegex=\"\\\\.xsd\"\n     *           />\n     */\n    Map attrs = createMap(\n            LineEntityProcessor.URL, \"dummy.lis\",\n            LineEntityProcessor.SKIP_LINE_REGEX, \"\\\\.xsd\"\n    );\n\n    @SuppressWarnings(\"unchecked\")\n    Context c = getContext(\n            null,                          //parentEntity\n            new VariableResolver(),  //resolver\n            getDataSource(filecontents),   //parentDataSource\n            Context.FULL_DUMP,                             //currProcess\n            Collections.emptyList(),        //entityFields\n            attrs                          //entityAttrs\n    );\n    LineEntityProcessor ep = new LineEntityProcessor();\n    ep.init(c);\n\n    /// call the entity processor to walk the directory\n    List<String> fList = new ArrayList<>();\n    while (true) {\n      Map<String, Object> f = ep.nextRow();\n      if (f == null) break;\n      fList.add((String) f.get(\"rawLine\"));\n    }\n    assertEquals(18, fList.size());\n  }\n\n","sourceOld":"  @Test\n  /************************************************************************/\n  public void testNo_xsd_files() throws IOException {\n    /* we want to create the equiv of :-\n     *  <entity name=\"list_all_files\" \n     *           processor=\"LineEntityProcessor\"\n     *           fileName=\"dummy.lis\"\n     *           omitLineRegex=\"\\\\.xsd\"\n     *           />\n     */\n    Map attrs = createMap(\n            LineEntityProcessor.URL, \"dummy.lis\",\n            LineEntityProcessor.SKIP_LINE_REGEX, \"\\\\.xsd\"\n    );\n\n    Context c = getContext(\n            null,                          //parentEntity\n            new VariableResolver(),  //resolver\n            getDataSource(filecontents),   //parentDataSource\n            Context.FULL_DUMP,                             //currProcess\n            Collections.EMPTY_LIST,        //entityFields\n            attrs                          //entityAttrs\n    );\n    LineEntityProcessor ep = new LineEntityProcessor();\n    ep.init(c);\n\n    /// call the entity processor to walk the directory\n    List<String> fList = new ArrayList<>();\n    while (true) {\n      Map<String, Object> f = ep.nextRow();\n      if (f == null) break;\n      fList.add((String) f.get(\"rawLine\"));\n    }\n    assertEquals(18, fList.size());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb9c3baacabd473e8ecd6c4948aabacead49b88e","date":1574700980,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestLineEntityProcessor#testNo_xsd_files().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestLineEntityProcessor#testNo_xsd_files().mjava","sourceNew":"  @Test\n  /************************************************************************/\n  public void testNo_xsd_files() throws IOException {\n    /* we want to create the equiv of :-\n     *  <entity name=\"list_all_files\" \n     *           processor=\"LineEntityProcessor\"\n     *           fileName=\"dummy.lis\"\n     *           omitLineRegex=\"\\\\.xsd\"\n     *           />\n     */\n    Map attrs = createMap(\n            LineEntityProcessor.URL, \"dummy.lis\",\n            LineEntityProcessor.SKIP_LINE_REGEX, \"\\\\.xsd\"\n    );\n\n    Context c = getContext(\n            null,                          //parentEntity\n            new VariableResolver(),  //resolver\n            getDataSource(filecontents),   //parentDataSource\n            Context.FULL_DUMP,                             //currProcess\n            Collections.EMPTY_LIST,        //entityFields\n            attrs                          //entityAttrs\n    );\n    LineEntityProcessor ep = new LineEntityProcessor();\n    ep.init(c);\n\n    /// call the entity processor to walk the directory\n    List<String> fList = new ArrayList<>();\n    while (true) {\n      Map<String, Object> f = ep.nextRow();\n      if (f == null) break;\n      fList.add((String) f.get(\"rawLine\"));\n    }\n    assertEquals(18, fList.size());\n  }\n\n","sourceOld":"  @SuppressWarnings(\"rawtypes\")\n  @Test\n  /************************************************************************/\n  public void testNo_xsd_files() throws IOException {\n    /* we want to create the equiv of :-\n     *  <entity name=\"list_all_files\" \n     *           processor=\"LineEntityProcessor\"\n     *           fileName=\"dummy.lis\"\n     *           omitLineRegex=\"\\\\.xsd\"\n     *           />\n     */\n    Map attrs = createMap(\n            LineEntityProcessor.URL, \"dummy.lis\",\n            LineEntityProcessor.SKIP_LINE_REGEX, \"\\\\.xsd\"\n    );\n\n    @SuppressWarnings(\"unchecked\")\n    Context c = getContext(\n            null,                          //parentEntity\n            new VariableResolver(),  //resolver\n            getDataSource(filecontents),   //parentDataSource\n            Context.FULL_DUMP,                             //currProcess\n            Collections.emptyList(),        //entityFields\n            attrs                          //entityAttrs\n    );\n    LineEntityProcessor ep = new LineEntityProcessor();\n    ep.init(c);\n\n    /// call the entity processor to walk the directory\n    List<String> fList = new ArrayList<>();\n    while (true) {\n      Map<String, Object> f = ep.nextRow();\n      if (f == null) break;\n      fList.add((String) f.get(\"rawLine\"));\n    }\n    assertEquals(18, fList.size());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"024e13388acbf5562fcbb77a129620982a5e2d79","date":1591531835,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestLineEntityProcessor#testNo_xsd_files().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestLineEntityProcessor#testNo_xsd_files().mjava","sourceNew":"  @Test\n  /************************************************************************/\n  public void testNo_xsd_files() throws IOException {\n    /* we want to create the equiv of :-\n     *  <entity name=\"list_all_files\" \n     *           processor=\"LineEntityProcessor\"\n     *           fileName=\"dummy.lis\"\n     *           omitLineRegex=\"\\\\.xsd\"\n     *           />\n     */\n    @SuppressWarnings({\"rawtypes\"})\n    Map attrs = createMap(\n            LineEntityProcessor.URL, \"dummy.lis\",\n            LineEntityProcessor.SKIP_LINE_REGEX, \"\\\\.xsd\"\n    );\n\n    @SuppressWarnings({\"unchecked\"})\n    Context c = getContext(\n            null,                          //parentEntity\n            new VariableResolver(),  //resolver\n            getDataSource(filecontents),   //parentDataSource\n            Context.FULL_DUMP,                             //currProcess\n            Collections.EMPTY_LIST,        //entityFields\n            attrs                          //entityAttrs\n    );\n    LineEntityProcessor ep = new LineEntityProcessor();\n    ep.init(c);\n\n    /// call the entity processor to walk the directory\n    List<String> fList = new ArrayList<>();\n    while (true) {\n      Map<String, Object> f = ep.nextRow();\n      if (f == null) break;\n      fList.add((String) f.get(\"rawLine\"));\n    }\n    assertEquals(18, fList.size());\n  }\n\n","sourceOld":"  @Test\n  /************************************************************************/\n  public void testNo_xsd_files() throws IOException {\n    /* we want to create the equiv of :-\n     *  <entity name=\"list_all_files\" \n     *           processor=\"LineEntityProcessor\"\n     *           fileName=\"dummy.lis\"\n     *           omitLineRegex=\"\\\\.xsd\"\n     *           />\n     */\n    Map attrs = createMap(\n            LineEntityProcessor.URL, \"dummy.lis\",\n            LineEntityProcessor.SKIP_LINE_REGEX, \"\\\\.xsd\"\n    );\n\n    Context c = getContext(\n            null,                          //parentEntity\n            new VariableResolver(),  //resolver\n            getDataSource(filecontents),   //parentDataSource\n            Context.FULL_DUMP,                             //currProcess\n            Collections.EMPTY_LIST,        //entityFields\n            attrs                          //entityAttrs\n    );\n    LineEntityProcessor ep = new LineEntityProcessor();\n    ep.init(c);\n\n    /// call the entity processor to walk the directory\n    List<String> fList = new ArrayList<>();\n    while (true) {\n      Map<String, Object> f = ep.nextRow();\n      if (f == null) break;\n      fList.add((String) f.get(\"rawLine\"));\n    }\n    assertEquals(18, fList.size());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3adc4d119a7deba35b2721853853464857d9d0a9","date":1594608068,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestLineEntityProcessor#testNo_xsd_files().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestLineEntityProcessor#testNo_xsd_files().mjava","sourceNew":"  @Test\n  /************************************************************************/\n  public void testNo_xsd_files() throws IOException {\n    /* we want to create the equiv of :-\n     *  <entity name=\"list_all_files\" \n     *           processor=\"LineEntityProcessor\"\n     *           fileName=\"dummy.lis\"\n     *           omitLineRegex=\"\\\\.xsd\"\n     *           />\n     */\n    @SuppressWarnings({\"rawtypes\"})\n    Map attrs = createMap(\n            LineEntityProcessor.URL, \"dummy.lis\",\n            LineEntityProcessor.SKIP_LINE_REGEX, \"\\\\.xsd\"\n    );\n\n    @SuppressWarnings({\"unchecked\"})\n    Context c = getContext(\n            null,                          //parentEntity\n            new VariableResolver(),  //resolver\n            getDataSource(filecontents),   //parentDataSource\n            Context.FULL_DUMP,                             //currProcess\n            Collections.emptyList(),        //entityFields\n            attrs                          //entityAttrs\n    );\n    LineEntityProcessor ep = new LineEntityProcessor();\n    ep.init(c);\n\n    /// call the entity processor to walk the directory\n    List<String> fList = new ArrayList<>();\n    while (true) {\n      Map<String, Object> f = ep.nextRow();\n      if (f == null) break;\n      fList.add((String) f.get(\"rawLine\"));\n    }\n    assertEquals(18, fList.size());\n  }\n\n","sourceOld":"  @Test\n  /************************************************************************/\n  public void testNo_xsd_files() throws IOException {\n    /* we want to create the equiv of :-\n     *  <entity name=\"list_all_files\" \n     *           processor=\"LineEntityProcessor\"\n     *           fileName=\"dummy.lis\"\n     *           omitLineRegex=\"\\\\.xsd\"\n     *           />\n     */\n    @SuppressWarnings({\"rawtypes\"})\n    Map attrs = createMap(\n            LineEntityProcessor.URL, \"dummy.lis\",\n            LineEntityProcessor.SKIP_LINE_REGEX, \"\\\\.xsd\"\n    );\n\n    @SuppressWarnings({\"unchecked\"})\n    Context c = getContext(\n            null,                          //parentEntity\n            new VariableResolver(),  //resolver\n            getDataSource(filecontents),   //parentDataSource\n            Context.FULL_DUMP,                             //currProcess\n            Collections.EMPTY_LIST,        //entityFields\n            attrs                          //entityAttrs\n    );\n    LineEntityProcessor ep = new LineEntityProcessor();\n    ep.init(c);\n\n    /// call the entity processor to walk the directory\n    List<String> fList = new ArrayList<>();\n    while (true) {\n      Map<String, Object> f = ep.nextRow();\n      if (f == null) break;\n      fList.add((String) f.get(\"rawLine\"));\n    }\n    assertEquals(18, fList.size());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b","date":1598712724,"type":4,"author":"Alexandre Rafalovitch","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestLineEntityProcessor#testNo_xsd_files().mjava","sourceNew":null,"sourceOld":"  @Test\n  /************************************************************************/\n  public void testNo_xsd_files() throws IOException {\n    /* we want to create the equiv of :-\n     *  <entity name=\"list_all_files\" \n     *           processor=\"LineEntityProcessor\"\n     *           fileName=\"dummy.lis\"\n     *           omitLineRegex=\"\\\\.xsd\"\n     *           />\n     */\n    @SuppressWarnings({\"rawtypes\"})\n    Map attrs = createMap(\n            LineEntityProcessor.URL, \"dummy.lis\",\n            LineEntityProcessor.SKIP_LINE_REGEX, \"\\\\.xsd\"\n    );\n\n    @SuppressWarnings({\"unchecked\"})\n    Context c = getContext(\n            null,                          //parentEntity\n            new VariableResolver(),  //resolver\n            getDataSource(filecontents),   //parentDataSource\n            Context.FULL_DUMP,                             //currProcess\n            Collections.emptyList(),        //entityFields\n            attrs                          //entityAttrs\n    );\n    LineEntityProcessor ep = new LineEntityProcessor();\n    ep.init(c);\n\n    /// call the entity processor to walk the directory\n    List<String> fList = new ArrayList<>();\n    while (true) {\n      Map<String, Object> f = ep.nextRow();\n      if (f == null) break;\n      fList.add((String) f.get(\"rawLine\"));\n    }\n    assertEquals(18, fList.size());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["7c7b0ae5716b6c2044195a818e9ae58205175659"],"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["3adc4d119a7deba35b2721853853464857d9d0a9"],"024e13388acbf5562fcbb77a129620982a5e2d79":["bb9c3baacabd473e8ecd6c4948aabacead49b88e"],"a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"3adc4d119a7deba35b2721853853464857d9d0a9":["024e13388acbf5562fcbb77a129620982a5e2d79"],"7c7b0ae5716b6c2044195a818e9ae58205175659":["c26f00b574427b55127e869b935845554afde1fa"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"407687e67faf6e1f02a211ca078d8e3eed631027":["c26f00b574427b55127e869b935845554afde1fa","7c7b0ae5716b6c2044195a818e9ae58205175659"],"bb9c3baacabd473e8ecd6c4948aabacead49b88e":["a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b"]},"commit2Childs":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9"],"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"024e13388acbf5562fcbb77a129620982a5e2d79":["3adc4d119a7deba35b2721853853464857d9d0a9"],"a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9":["bb9c3baacabd473e8ecd6c4948aabacead49b88e"],"7c7b0ae5716b6c2044195a818e9ae58205175659":["634f330c54fd3f9f491d52036dc3f40b4f4d8934","407687e67faf6e1f02a211ca078d8e3eed631027"],"3adc4d119a7deba35b2721853853464857d9d0a9":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["7c7b0ae5716b6c2044195a818e9ae58205175659","407687e67faf6e1f02a211ca078d8e3eed631027"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","c26f00b574427b55127e869b935845554afde1fa"],"407687e67faf6e1f02a211ca078d8e3eed631027":[],"bb9c3baacabd473e8ecd6c4948aabacead49b88e":["024e13388acbf5562fcbb77a129620982a5e2d79"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["407687e67faf6e1f02a211ca078d8e3eed631027","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}