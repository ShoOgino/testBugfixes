{"path":"solr/src/java/org/apache/solr/search/function/QueryDocValues[QueryValueSource]#floatVal(int).mjava","commits":[{"id":"893269407f5c988a4b2ee13c7ffc01ec43136c1d","date":1268598046,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/search/function/QueryDocValues[QueryValueSource]#floatVal(int).mjava","pathOld":"/dev/null","sourceNew":"  public float floatVal(int doc) {\n    try {\n      if (doc < lastDocRequested) {\n        // out-of-order access.... reset scorer.\n        scorer = weight.scorer(reader, true, false);\n        if (scorer==null) return defVal;\n        scorerDoc = -1;\n      }\n      lastDocRequested = doc;\n\n      if (scorerDoc < doc) {\n        scorerDoc = scorer.advance(doc);\n      }\n\n      if (scorerDoc > doc) {\n        // query doesn't match this document... either because we hit the\n        // end, or because the next doc is after this doc.\n        return defVal;\n      }\n\n      // a match!\n      return scorer.score();\n    } catch (IOException e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"caught exception in QueryDocVals(\"+q+\") doc=\"+doc, e);\n    }\n  }  \n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","date":1268599006,"type":4,"author":"Mark Robert Miller","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/src/java/org/apache/solr/search/function/QueryDocValues[QueryValueSource]#floatVal(int).mjava","sourceNew":null,"sourceOld":"  public float floatVal(int doc) {\n    try {\n      if (doc < lastDocRequested) {\n        // out-of-order access.... reset scorer.\n        scorer = weight.scorer(reader, true, false);\n        if (scorer==null) return defVal;\n        scorerDoc = -1;\n      }\n      lastDocRequested = doc;\n\n      if (scorerDoc < doc) {\n        scorerDoc = scorer.advance(doc);\n      }\n\n      if (scorerDoc > doc) {\n        // query doesn't match this document... either because we hit the\n        // end, or because the next doc is after this doc.\n        return defVal;\n      }\n\n      // a match!\n      return scorer.score();\n    } catch (IOException e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"caught exception in QueryDocVals(\"+q+\") doc=\"+doc, e);\n    }\n  }  \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/search/function/QueryDocValues[QueryValueSource]#floatVal(int).mjava","pathOld":"src/java/org/apache/solr/search/function/QueryDocValues[QueryValueSource]#floatVal(int).mjava","sourceNew":"  public float floatVal(int doc) {\n    try {\n      if (doc < lastDocRequested) {\n        // out-of-order access.... reset scorer.\n        scorer = weight.scorer(reader, true, false);\n        if (scorer==null) return defVal;\n        scorerDoc = -1;\n      }\n      lastDocRequested = doc;\n\n      if (scorerDoc < doc) {\n        scorerDoc = scorer.advance(doc);\n      }\n\n      if (scorerDoc > doc) {\n        // query doesn't match this document... either because we hit the\n        // end, or because the next doc is after this doc.\n        return defVal;\n      }\n\n      // a match!\n      return scorer.score();\n    } catch (IOException e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"caught exception in QueryDocVals(\"+q+\") doc=\"+doc, e);\n    }\n  }  \n\n","sourceOld":"  public float floatVal(int doc) {\n    try {\n      if (doc < lastDocRequested) {\n        // out-of-order access.... reset scorer.\n        scorer = weight.scorer(reader, true, false);\n        if (scorer==null) return defVal;\n        scorerDoc = -1;\n      }\n      lastDocRequested = doc;\n\n      if (scorerDoc < doc) {\n        scorerDoc = scorer.advance(doc);\n      }\n\n      if (scorerDoc > doc) {\n        // query doesn't match this document... either because we hit the\n        // end, or because the next doc is after this doc.\n        return defVal;\n      }\n\n      // a match!\n      return scorer.score();\n    } catch (IOException e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"caught exception in QueryDocVals(\"+q+\") doc=\"+doc, e);\n    }\n  }  \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1da8d55113b689b06716246649de6f62430f15c0","date":1453508340,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/search/function/QueryDocValues[QueryValueSource]#floatVal(int).mjava","pathOld":"/dev/null","sourceNew":"  public float floatVal(int doc) {\n    try {\n      if (doc < lastDocRequested) {\n        // out-of-order access.... reset scorer.\n        scorer = weight.scorer(reader, true, false);\n        if (scorer==null) return defVal;\n        scorerDoc = -1;\n      }\n      lastDocRequested = doc;\n\n      if (scorerDoc < doc) {\n        scorerDoc = scorer.advance(doc);\n      }\n\n      if (scorerDoc > doc) {\n        // query doesn't match this document... either because we hit the\n        // end, or because the next doc is after this doc.\n        return defVal;\n      }\n\n      // a match!\n      return scorer.score();\n    } catch (IOException e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"caught exception in QueryDocVals(\"+q+\") doc=\"+doc, e);\n    }\n  }  \n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"2dadf0f3286a34a0fee6e788ffce88624bf2984e","date":1294260428,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/search/function/QueryDocValues[QueryValueSource]#floatVal(int).mjava","pathOld":"solr/src/java/org/apache/solr/search/function/QueryDocValues[QueryValueSource]#floatVal(int).mjava","sourceNew":"  public float floatVal(int doc) {\n    try {\n      if (doc < lastDocRequested) {\n        // out-of-order access.... reset scorer.\n        scorer = weight.scorer(reader.getTopReaderContext(), true, false);\n        if (scorer==null) return defVal;\n        scorerDoc = -1;\n      }\n      lastDocRequested = doc;\n\n      if (scorerDoc < doc) {\n        scorerDoc = scorer.advance(doc);\n      }\n\n      if (scorerDoc > doc) {\n        // query doesn't match this document... either because we hit the\n        // end, or because the next doc is after this doc.\n        return defVal;\n      }\n\n      // a match!\n      return scorer.score();\n    } catch (IOException e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"caught exception in QueryDocVals(\"+q+\") doc=\"+doc, e);\n    }\n  }  \n\n","sourceOld":"  public float floatVal(int doc) {\n    try {\n      if (doc < lastDocRequested) {\n        // out-of-order access.... reset scorer.\n        scorer = weight.scorer(reader, true, false);\n        if (scorer==null) return defVal;\n        scorerDoc = -1;\n      }\n      lastDocRequested = doc;\n\n      if (scorerDoc < doc) {\n        scorerDoc = scorer.advance(doc);\n      }\n\n      if (scorerDoc > doc) {\n        // query doesn't match this document... either because we hit the\n        // end, or because the next doc is after this doc.\n        return defVal;\n      }\n\n      // a match!\n      return scorer.score();\n    } catch (IOException e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"caught exception in QueryDocVals(\"+q+\") doc=\"+doc, e);\n    }\n  }  \n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"f891ab635a93d6bff8051a62f03a093ca7ddebe9","date":1294449463,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/search/function/QueryDocValues[QueryValueSource]#floatVal(int).mjava","pathOld":"solr/src/java/org/apache/solr/search/function/QueryDocValues[QueryValueSource]#floatVal(int).mjava","sourceNew":"  public float floatVal(int doc) {\n    try {\n      if (doc < lastDocRequested) {\n        // out-of-order access.... reset scorer.\n        IndexReader.AtomicReaderContext ctx = ValueSource.readerToContext(fcontext, reader);\n\n        if (ctx == null) {\n          // TODO: this is because SOLR-1297 does not weight\n          ctx = (IndexReader.AtomicReaderContext)reader.getTopReaderContext();  // this is the incorrect context\n        }\n\n        scorer = weight.scorer(ctx, true, false);\n        if (scorer==null) return defVal;\n        scorerDoc = -1;\n      }\n      lastDocRequested = doc;\n\n      if (scorerDoc < doc) {\n        scorerDoc = scorer.advance(doc);\n      }\n\n      if (scorerDoc > doc) {\n        // query doesn't match this document... either because we hit the\n        // end, or because the next doc is after this doc.\n        return defVal;\n      }\n\n      // a match!\n      return scorer.score();\n    } catch (IOException e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"caught exception in QueryDocVals(\"+q+\") doc=\"+doc, e);\n    }\n  }  \n\n","sourceOld":"  public float floatVal(int doc) {\n    try {\n      if (doc < lastDocRequested) {\n        // out-of-order access.... reset scorer.\n        scorer = weight.scorer(reader.getTopReaderContext(), true, false);\n        if (scorer==null) return defVal;\n        scorerDoc = -1;\n      }\n      lastDocRequested = doc;\n\n      if (scorerDoc < doc) {\n        scorerDoc = scorer.advance(doc);\n      }\n\n      if (scorerDoc > doc) {\n        // query doesn't match this document... either because we hit the\n        // end, or because the next doc is after this doc.\n        return defVal;\n      }\n\n      // a match!\n      return scorer.score();\n    } catch (IOException e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"caught exception in QueryDocVals(\"+q+\") doc=\"+doc, e);\n    }\n  }  \n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c220849f876de24a79f756f65b3eb045db59f63f","date":1294902803,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/search/function/QueryDocValues[QueryValueSource]#floatVal(int).mjava","pathOld":"solr/src/java/org/apache/solr/search/function/QueryDocValues[QueryValueSource]#floatVal(int).mjava","sourceNew":"  public float floatVal(int doc) {\n    try {\n      if (doc < lastDocRequested) {\n        scorer = weight.scorer(readerContext, true, false);\n        if (scorer==null) return defVal;\n        scorerDoc = -1;\n      }\n      lastDocRequested = doc;\n\n      if (scorerDoc < doc) {\n        scorerDoc = scorer.advance(doc);\n      }\n\n      if (scorerDoc > doc) {\n        // query doesn't match this document... either because we hit the\n        // end, or because the next doc is after this doc.\n        return defVal;\n      }\n\n      // a match!\n      return scorer.score();\n    } catch (IOException e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"caught exception in QueryDocVals(\"+q+\") doc=\"+doc, e);\n    }\n  }  \n\n","sourceOld":"  public float floatVal(int doc) {\n    try {\n      if (doc < lastDocRequested) {\n        // out-of-order access.... reset scorer.\n        IndexReader.AtomicReaderContext ctx = ValueSource.readerToContext(fcontext, reader);\n\n        if (ctx == null) {\n          // TODO: this is because SOLR-1297 does not weight\n          ctx = (IndexReader.AtomicReaderContext)reader.getTopReaderContext();  // this is the incorrect context\n        }\n\n        scorer = weight.scorer(ctx, true, false);\n        if (scorer==null) return defVal;\n        scorerDoc = -1;\n      }\n      lastDocRequested = doc;\n\n      if (scorerDoc < doc) {\n        scorerDoc = scorer.advance(doc);\n      }\n\n      if (scorerDoc > doc) {\n        // query doesn't match this document... either because we hit the\n        // end, or because the next doc is after this doc.\n        return defVal;\n      }\n\n      // a match!\n      return scorer.score();\n    } catch (IOException e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"caught exception in QueryDocVals(\"+q+\") doc=\"+doc, e);\n    }\n  }  \n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"dc63f17f42c64d6ccc8c361cfcdf074f115f770c","date":1294930751,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/search/function/QueryDocValues[QueryValueSource]#floatVal(int).mjava","pathOld":"solr/src/java/org/apache/solr/search/function/QueryDocValues[QueryValueSource]#floatVal(int).mjava","sourceNew":"  public float floatVal(int doc) {\n    try {\n      if (doc < lastDocRequested) {\n        scorer = weight.scorer(readerContext, ScorerContext.def());\n        if (scorer==null) return defVal;\n        scorerDoc = -1;\n      }\n      lastDocRequested = doc;\n\n      if (scorerDoc < doc) {\n        scorerDoc = scorer.advance(doc);\n      }\n\n      if (scorerDoc > doc) {\n        // query doesn't match this document... either because we hit the\n        // end, or because the next doc is after this doc.\n        return defVal;\n      }\n\n      // a match!\n      return scorer.score();\n    } catch (IOException e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"caught exception in QueryDocVals(\"+q+\") doc=\"+doc, e);\n    }\n  }  \n\n","sourceOld":"  public float floatVal(int doc) {\n    try {\n      if (doc < lastDocRequested) {\n        scorer = weight.scorer(readerContext, true, false);\n        if (scorer==null) return defVal;\n        scorerDoc = -1;\n      }\n      lastDocRequested = doc;\n\n      if (scorerDoc < doc) {\n        scorerDoc = scorer.advance(doc);\n      }\n\n      if (scorerDoc > doc) {\n        // query doesn't match this document... either because we hit the\n        // end, or because the next doc is after this doc.\n        return defVal;\n      }\n\n      // a match!\n      return scorer.score();\n    } catch (IOException e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"caught exception in QueryDocVals(\"+q+\") doc=\"+doc, e);\n    }\n  }  \n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"868da859b43505d9d2a023bfeae6dd0c795f5295","date":1294948401,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/search/function/QueryDocValues[QueryValueSource]#floatVal(int).mjava","pathOld":"solr/src/java/org/apache/solr/search/function/QueryDocValues[QueryValueSource]#floatVal(int).mjava","sourceNew":"  public float floatVal(int doc) {\n    try {\n      if (doc < lastDocRequested) {\n        scorer = weight.scorer(readerContext, ScorerContext.def());\n        if (scorer==null) return defVal;\n        scorerDoc = -1;\n      }\n      lastDocRequested = doc;\n\n      if (scorerDoc < doc) {\n        scorerDoc = scorer.advance(doc);\n      }\n\n      if (scorerDoc > doc) {\n        // query doesn't match this document... either because we hit the\n        // end, or because the next doc is after this doc.\n        return defVal;\n      }\n\n      // a match!\n      return scorer.score();\n    } catch (IOException e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"caught exception in QueryDocVals(\"+q+\") doc=\"+doc, e);\n    }\n  }  \n\n","sourceOld":"  public float floatVal(int doc) {\n    try {\n      if (doc < lastDocRequested) {\n        // out-of-order access.... reset scorer.\n        scorer = weight.scorer(reader, true, false);\n        if (scorer==null) return defVal;\n        scorerDoc = -1;\n      }\n      lastDocRequested = doc;\n\n      if (scorerDoc < doc) {\n        scorerDoc = scorer.advance(doc);\n      }\n\n      if (scorerDoc > doc) {\n        // query doesn't match this document... either because we hit the\n        // end, or because the next doc is after this doc.\n        return defVal;\n      }\n\n      // a match!\n      return scorer.score();\n    } catch (IOException e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"caught exception in QueryDocVals(\"+q+\") doc=\"+doc, e);\n    }\n  }  \n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"70e12dd4a648dadc5999dde1f0fb3a71a6ae4b01","date":1296400215,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/search/function/QueryDocValues[QueryValueSource]#floatVal(int).mjava","pathOld":"solr/src/java/org/apache/solr/search/function/QueryDocValues[QueryValueSource]#floatVal(int).mjava","sourceNew":"  @Override\n  public float floatVal(int doc) {\n    try {\n      if (doc < lastDocRequested) {\n        scorer = weight.scorer(readerContext, ScorerContext.def());\n        if (scorer==null) return defVal;\n        scorerDoc = -1;\n      }\n      lastDocRequested = doc;\n\n      if (scorerDoc < doc) {\n        scorerDoc = scorer.advance(doc);\n      }\n\n      if (scorerDoc > doc) {\n        // query doesn't match this document... either because we hit the\n        // end, or because the next doc is after this doc.\n        return defVal;\n      }\n\n      // a match!\n      return scorer.score();\n    } catch (IOException e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"caught exception in QueryDocVals(\"+q+\") doc=\"+doc, e);\n    }\n  }  \n\n","sourceOld":"  public float floatVal(int doc) {\n    try {\n      if (doc < lastDocRequested) {\n        scorer = weight.scorer(readerContext, ScorerContext.def());\n        if (scorer==null) return defVal;\n        scorerDoc = -1;\n      }\n      lastDocRequested = doc;\n\n      if (scorerDoc < doc) {\n        scorerDoc = scorer.advance(doc);\n      }\n\n      if (scorerDoc > doc) {\n        // query doesn't match this document... either because we hit the\n        // end, or because the next doc is after this doc.\n        return defVal;\n      }\n\n      // a match!\n      return scorer.score();\n    } catch (IOException e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"caught exception in QueryDocVals(\"+q+\") doc=\"+doc, e);\n    }\n  }  \n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/search/function/QueryDocValues[QueryValueSource]#floatVal(int).mjava","pathOld":"solr/src/java/org/apache/solr/search/function/QueryDocValues[QueryValueSource]#floatVal(int).mjava","sourceNew":"  @Override\n  public float floatVal(int doc) {\n    try {\n      if (doc < lastDocRequested) {\n        scorer = weight.scorer(readerContext, ScorerContext.def());\n        if (scorer==null) return defVal;\n        scorerDoc = -1;\n      }\n      lastDocRequested = doc;\n\n      if (scorerDoc < doc) {\n        scorerDoc = scorer.advance(doc);\n      }\n\n      if (scorerDoc > doc) {\n        // query doesn't match this document... either because we hit the\n        // end, or because the next doc is after this doc.\n        return defVal;\n      }\n\n      // a match!\n      return scorer.score();\n    } catch (IOException e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"caught exception in QueryDocVals(\"+q+\") doc=\"+doc, e);\n    }\n  }  \n\n","sourceOld":"  public float floatVal(int doc) {\n    try {\n      if (doc < lastDocRequested) {\n        // out-of-order access.... reset scorer.\n        scorer = weight.scorer(reader, true, false);\n        if (scorer==null) return defVal;\n        scorerDoc = -1;\n      }\n      lastDocRequested = doc;\n\n      if (scorerDoc < doc) {\n        scorerDoc = scorer.advance(doc);\n      }\n\n      if (scorerDoc > doc) {\n        // query doesn't match this document... either because we hit the\n        // end, or because the next doc is after this doc.\n        return defVal;\n      }\n\n      // a match!\n      return scorer.score();\n    } catch (IOException e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"caught exception in QueryDocVals(\"+q+\") doc=\"+doc, e);\n    }\n  }  \n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/search/function/QueryDocValues[QueryValueSource]#floatVal(int).mjava","pathOld":"solr/src/java/org/apache/solr/search/function/QueryDocValues[QueryValueSource]#floatVal(int).mjava","sourceNew":"  @Override\n  public float floatVal(int doc) {\n    try {\n      if (doc < lastDocRequested) {\n        scorer = weight.scorer(readerContext, ScorerContext.def());\n        if (scorer==null) return defVal;\n        scorerDoc = -1;\n      }\n      lastDocRequested = doc;\n\n      if (scorerDoc < doc) {\n        scorerDoc = scorer.advance(doc);\n      }\n\n      if (scorerDoc > doc) {\n        // query doesn't match this document... either because we hit the\n        // end, or because the next doc is after this doc.\n        return defVal;\n      }\n\n      // a match!\n      return scorer.score();\n    } catch (IOException e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"caught exception in QueryDocVals(\"+q+\") doc=\"+doc, e);\n    }\n  }  \n\n","sourceOld":"  public float floatVal(int doc) {\n    try {\n      if (doc < lastDocRequested) {\n        scorer = weight.scorer(readerContext, ScorerContext.def());\n        if (scorer==null) return defVal;\n        scorerDoc = -1;\n      }\n      lastDocRequested = doc;\n\n      if (scorerDoc < doc) {\n        scorerDoc = scorer.advance(doc);\n      }\n\n      if (scorerDoc > doc) {\n        // query doesn't match this document... either because we hit the\n        // end, or because the next doc is after this doc.\n        return defVal;\n      }\n\n      // a match!\n      return scorer.score();\n    } catch (IOException e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"caught exception in QueryDocVals(\"+q+\") doc=\"+doc, e);\n    }\n  }  \n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5eeff6b8391d7b5e70e37193643d76c05a3abf75","date":1302902022,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/search/function/QueryDocValues[QueryValueSource]#floatVal(int).mjava","pathOld":"solr/src/java/org/apache/solr/search/function/QueryDocValues[QueryValueSource]#floatVal(int).mjava","sourceNew":"  @Override\n  public float floatVal(int doc) {\n    try {\n      if (doc < lastDocRequested) {\n        if (noMatches) return defVal;\n        scorer = weight.scorer(readerContext, ScorerContext.def());\n        if (scorer==null) {\n          noMatches = true;\n          return defVal;\n        }\n        scorerDoc = -1;\n      }\n      lastDocRequested = doc;\n\n      if (scorerDoc < doc) {\n        scorerDoc = scorer.advance(doc);\n      }\n\n      if (scorerDoc > doc) {\n        // query doesn't match this document... either because we hit the\n        // end, or because the next doc is after this doc.\n        return defVal;\n      }\n\n      // a match!\n      return scorer.score();\n    } catch (IOException e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"caught exception in QueryDocVals(\"+q+\") doc=\"+doc, e);\n    }\n  }\n\n","sourceOld":"  @Override\n  public float floatVal(int doc) {\n    try {\n      if (doc < lastDocRequested) {\n        scorer = weight.scorer(readerContext, ScorerContext.def());\n        if (scorer==null) return defVal;\n        scorerDoc = -1;\n      }\n      lastDocRequested = doc;\n\n      if (scorerDoc < doc) {\n        scorerDoc = scorer.advance(doc);\n      }\n\n      if (scorerDoc > doc) {\n        // query doesn't match this document... either because we hit the\n        // end, or because the next doc is after this doc.\n        return defVal;\n      }\n\n      // a match!\n      return scorer.score();\n    } catch (IOException e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"caught exception in QueryDocVals(\"+q+\") doc=\"+doc, e);\n    }\n  }  \n\n","bugFix":["19a6a2b00bd8d0dbd9684de00bb3018e4664a1e5","b34246bd2642664e4365407342455859b15b5205"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d493718201f0d0c54c773fb323d87bbd2fbffe41","date":1303546048,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/search/function/QueryDocValues[QueryValueSource]#floatVal(int).mjava","pathOld":"solr/src/java/org/apache/solr/search/function/QueryDocValues[QueryValueSource]#floatVal(int).mjava","sourceNew":"  @Override\n  public float floatVal(int doc) {\n    try {\n      if (doc < lastDocRequested) {\n        if (noMatches) return defVal;\n        scorer = weight.scorer(readerContext, ScorerContext.def());\n        if (scorer==null) {\n          noMatches = true;\n          return defVal;\n        }\n        scorerDoc = -1;\n      }\n      lastDocRequested = doc;\n\n      if (scorerDoc < doc) {\n        scorerDoc = scorer.advance(doc);\n      }\n\n      if (scorerDoc > doc) {\n        // query doesn't match this document... either because we hit the\n        // end, or because the next doc is after this doc.\n        return defVal;\n      }\n\n      // a match!\n      return scorer.score();\n    } catch (IOException e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"caught exception in QueryDocVals(\"+q+\") doc=\"+doc, e);\n    }\n  }\n\n","sourceOld":"  @Override\n  public float floatVal(int doc) {\n    try {\n      if (doc < lastDocRequested) {\n        scorer = weight.scorer(readerContext, ScorerContext.def());\n        if (scorer==null) return defVal;\n        scorerDoc = -1;\n      }\n      lastDocRequested = doc;\n\n      if (scorerDoc < doc) {\n        scorerDoc = scorer.advance(doc);\n      }\n\n      if (scorerDoc > doc) {\n        // query doesn't match this document... either because we hit the\n        // end, or because the next doc is after this doc.\n        return defVal;\n      }\n\n      // a match!\n      return scorer.score();\n    } catch (IOException e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"caught exception in QueryDocVals(\"+q+\") doc=\"+doc, e);\n    }\n  }  \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/search/function/QueryDocValues[QueryValueSource]#floatVal(int).mjava","pathOld":"solr/src/java/org/apache/solr/search/function/QueryDocValues[QueryValueSource]#floatVal(int).mjava","sourceNew":"  @Override\n  public float floatVal(int doc) {\n    try {\n      if (doc < lastDocRequested) {\n        if (noMatches) return defVal;\n        scorer = weight.scorer(readerContext, ScorerContext.def());\n        if (scorer==null) {\n          noMatches = true;\n          return defVal;\n        }\n        scorerDoc = -1;\n      }\n      lastDocRequested = doc;\n\n      if (scorerDoc < doc) {\n        scorerDoc = scorer.advance(doc);\n      }\n\n      if (scorerDoc > doc) {\n        // query doesn't match this document... either because we hit the\n        // end, or because the next doc is after this doc.\n        return defVal;\n      }\n\n      // a match!\n      return scorer.score();\n    } catch (IOException e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"caught exception in QueryDocVals(\"+q+\") doc=\"+doc, e);\n    }\n  }\n\n","sourceOld":"  @Override\n  public float floatVal(int doc) {\n    try {\n      if (doc < lastDocRequested) {\n        scorer = weight.scorer(readerContext, ScorerContext.def());\n        if (scorer==null) return defVal;\n        scorerDoc = -1;\n      }\n      lastDocRequested = doc;\n\n      if (scorerDoc < doc) {\n        scorerDoc = scorer.advance(doc);\n      }\n\n      if (scorerDoc > doc) {\n        // query doesn't match this document... either because we hit the\n        // end, or because the next doc is after this doc.\n        return defVal;\n      }\n\n      // a match!\n      return scorer.score();\n    } catch (IOException e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"caught exception in QueryDocVals(\"+q+\") doc=\"+doc, e);\n    }\n  }  \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/search/function/QueryDocValues[QueryValueSource]#floatVal(int).mjava","pathOld":"solr/src/java/org/apache/solr/search/function/QueryDocValues[QueryValueSource]#floatVal(int).mjava","sourceNew":"  @Override\n  public float floatVal(int doc) {\n    try {\n      if (doc < lastDocRequested) {\n        if (noMatches) return defVal;\n        scorer = weight.scorer(readerContext, ScorerContext.def());\n        if (scorer==null) {\n          noMatches = true;\n          return defVal;\n        }\n        scorerDoc = -1;\n      }\n      lastDocRequested = doc;\n\n      if (scorerDoc < doc) {\n        scorerDoc = scorer.advance(doc);\n      }\n\n      if (scorerDoc > doc) {\n        // query doesn't match this document... either because we hit the\n        // end, or because the next doc is after this doc.\n        return defVal;\n      }\n\n      // a match!\n      return scorer.score();\n    } catch (IOException e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"caught exception in QueryDocVals(\"+q+\") doc=\"+doc, e);\n    }\n  }\n\n","sourceOld":"  @Override\n  public float floatVal(int doc) {\n    try {\n      if (doc < lastDocRequested) {\n        scorer = weight.scorer(readerContext, ScorerContext.def());\n        if (scorer==null) return defVal;\n        scorerDoc = -1;\n      }\n      lastDocRequested = doc;\n\n      if (scorerDoc < doc) {\n        scorerDoc = scorer.advance(doc);\n      }\n\n      if (scorerDoc > doc) {\n        // query doesn't match this document... either because we hit the\n        // end, or because the next doc is after this doc.\n        return defVal;\n      }\n\n      // a match!\n      return scorer.score();\n    } catch (IOException e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"caught exception in QueryDocVals(\"+q+\") doc=\"+doc, e);\n    }\n  }  \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"51cb88215648c6da23e00f2ffb57a5e3e1ef14be","date":1309303947,"type":5,"author":"Christopher John Male","isMerge":false,"pathNew":"modules/queries/src/java/org/apache/lucene/queries/function/valuesource/QueryDocValues[QueryValueSource]#floatVal(int).mjava","pathOld":"solr/src/java/org/apache/solr/search/function/QueryDocValues[QueryValueSource]#floatVal(int).mjava","sourceNew":"  @Override\n  public float floatVal(int doc) {\n    try {\n      if (doc < lastDocRequested) {\n        if (noMatches) return defVal;\n        scorer = weight.scorer(readerContext, ScorerContext.def());\n        if (scorer==null) {\n          noMatches = true;\n          return defVal;\n        }\n        scorerDoc = -1;\n      }\n      lastDocRequested = doc;\n\n      if (scorerDoc < doc) {\n        scorerDoc = scorer.advance(doc);\n      }\n\n      if (scorerDoc > doc) {\n        // query doesn't match this document... either because we hit the\n        // end, or because the next doc is after this doc.\n        return defVal;\n      }\n\n      // a match!\n      return scorer.score();\n    } catch (IOException e) {\n      throw new RuntimeException(\"caught exception in QueryDocVals(\"+q+\") doc=\"+doc, e);\n    }\n  }\n\n","sourceOld":"  @Override\n  public float floatVal(int doc) {\n    try {\n      if (doc < lastDocRequested) {\n        if (noMatches) return defVal;\n        scorer = weight.scorer(readerContext, ScorerContext.def());\n        if (scorer==null) {\n          noMatches = true;\n          return defVal;\n        }\n        scorerDoc = -1;\n      }\n      lastDocRequested = doc;\n\n      if (scorerDoc < doc) {\n        scorerDoc = scorer.advance(doc);\n      }\n\n      if (scorerDoc > doc) {\n        // query doesn't match this document... either because we hit the\n        // end, or because the next doc is after this doc.\n        return defVal;\n      }\n\n      // a match!\n      return scorer.score();\n    } catch (IOException e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"caught exception in QueryDocVals(\"+q+\") doc=\"+doc, e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"817d8435e9135b756f08ce6710ab0baac51bdf88","date":1309986993,"type":4,"author":"Steven Rowe","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/src/java/org/apache/solr/search/function/QueryDocValues[QueryValueSource]#floatVal(int).mjava","sourceNew":null,"sourceOld":"  @Override\n  public float floatVal(int doc) {\n    try {\n      if (doc < lastDocRequested) {\n        if (noMatches) return defVal;\n        scorer = weight.scorer(readerContext, ScorerContext.def());\n        if (scorer==null) {\n          noMatches = true;\n          return defVal;\n        }\n        scorerDoc = -1;\n      }\n      lastDocRequested = doc;\n\n      if (scorerDoc < doc) {\n        scorerDoc = scorer.advance(doc);\n      }\n\n      if (scorerDoc > doc) {\n        // query doesn't match this document... either because we hit the\n        // end, or because the next doc is after this doc.\n        return defVal;\n      }\n\n      // a match!\n      return scorer.score();\n    } catch (IOException e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"caught exception in QueryDocVals(\"+q+\") doc=\"+doc, e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d083e83f225b11e5fdd900e83d26ddb385b6955c","date":1310029438,"type":4,"author":"Simon Willnauer","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/src/java/org/apache/solr/search/function/QueryDocValues[QueryValueSource]#floatVal(int).mjava","sourceNew":null,"sourceOld":"  @Override\n  public float floatVal(int doc) {\n    try {\n      if (doc < lastDocRequested) {\n        if (noMatches) return defVal;\n        scorer = weight.scorer(readerContext, ScorerContext.def());\n        if (scorer==null) {\n          noMatches = true;\n          return defVal;\n        }\n        scorerDoc = -1;\n      }\n      lastDocRequested = doc;\n\n      if (scorerDoc < doc) {\n        scorerDoc = scorer.advance(doc);\n      }\n\n      if (scorerDoc > doc) {\n        // query doesn't match this document... either because we hit the\n        // end, or because the next doc is after this doc.\n        return defVal;\n      }\n\n      // a match!\n      return scorer.score();\n    } catch (IOException e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"caught exception in QueryDocVals(\"+q+\") doc=\"+doc, e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"70e12dd4a648dadc5999dde1f0fb3a71a6ae4b01":["dc63f17f42c64d6ccc8c361cfcdf074f115f770c"],"f891ab635a93d6bff8051a62f03a093ca7ddebe9":["2dadf0f3286a34a0fee6e788ffce88624bf2984e"],"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["29ef99d61cda9641b6250bf9567329a6e65f901d","5eeff6b8391d7b5e70e37193643d76c05a3abf75"],"d493718201f0d0c54c773fb323d87bbd2fbffe41":["bde51b089eb7f86171eb3406e38a274743f9b7ac","5eeff6b8391d7b5e70e37193643d76c05a3abf75"],"dc63f17f42c64d6ccc8c361cfcdf074f115f770c":["c220849f876de24a79f756f65b3eb045db59f63f"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":["5eeff6b8391d7b5e70e37193643d76c05a3abf75","51cb88215648c6da23e00f2ffb57a5e3e1ef14be"],"817d8435e9135b756f08ce6710ab0baac51bdf88":["a3776dccca01c11e7046323cfad46a3b4a471233","51cb88215648c6da23e00f2ffb57a5e3e1ef14be"],"1da8d55113b689b06716246649de6f62430f15c0":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","ad94625fb8d088209f46650c8097196fec67f00c"],"5eeff6b8391d7b5e70e37193643d76c05a3abf75":["70e12dd4a648dadc5999dde1f0fb3a71a6ae4b01"],"c220849f876de24a79f756f65b3eb045db59f63f":["f891ab635a93d6bff8051a62f03a093ca7ddebe9"],"a3776dccca01c11e7046323cfad46a3b4a471233":["70e12dd4a648dadc5999dde1f0fb3a71a6ae4b01","5eeff6b8391d7b5e70e37193643d76c05a3abf75"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["1da8d55113b689b06716246649de6f62430f15c0","70e12dd4a648dadc5999dde1f0fb3a71a6ae4b01"],"2dadf0f3286a34a0fee6e788ffce88624bf2984e":["1da8d55113b689b06716246649de6f62430f15c0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ad94625fb8d088209f46650c8097196fec67f00c":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"868da859b43505d9d2a023bfeae6dd0c795f5295":["1da8d55113b689b06716246649de6f62430f15c0","dc63f17f42c64d6ccc8c361cfcdf074f115f770c"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["868da859b43505d9d2a023bfeae6dd0c795f5295","70e12dd4a648dadc5999dde1f0fb3a71a6ae4b01"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["51cb88215648c6da23e00f2ffb57a5e3e1ef14be"],"51cb88215648c6da23e00f2ffb57a5e3e1ef14be":["5eeff6b8391d7b5e70e37193643d76c05a3abf75"]},"commit2Childs":{"70e12dd4a648dadc5999dde1f0fb3a71a6ae4b01":["5eeff6b8391d7b5e70e37193643d76c05a3abf75","a3776dccca01c11e7046323cfad46a3b4a471233","29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"f891ab635a93d6bff8051a62f03a093ca7ddebe9":["c220849f876de24a79f756f65b3eb045db59f63f"],"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["1da8d55113b689b06716246649de6f62430f15c0"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["ad94625fb8d088209f46650c8097196fec67f00c"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":[],"d493718201f0d0c54c773fb323d87bbd2fbffe41":[],"dc63f17f42c64d6ccc8c361cfcdf074f115f770c":["70e12dd4a648dadc5999dde1f0fb3a71a6ae4b01","868da859b43505d9d2a023bfeae6dd0c795f5295"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":[],"817d8435e9135b756f08ce6710ab0baac51bdf88":[],"1da8d55113b689b06716246649de6f62430f15c0":["29ef99d61cda9641b6250bf9567329a6e65f901d","2dadf0f3286a34a0fee6e788ffce88624bf2984e","868da859b43505d9d2a023bfeae6dd0c795f5295"],"5eeff6b8391d7b5e70e37193643d76c05a3abf75":["135621f3a0670a9394eb563224a3b76cc4dddc0f","d493718201f0d0c54c773fb323d87bbd2fbffe41","d083e83f225b11e5fdd900e83d26ddb385b6955c","a3776dccca01c11e7046323cfad46a3b4a471233","51cb88215648c6da23e00f2ffb57a5e3e1ef14be"],"c220849f876de24a79f756f65b3eb045db59f63f":["dc63f17f42c64d6ccc8c361cfcdf074f115f770c"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["135621f3a0670a9394eb563224a3b76cc4dddc0f"],"a3776dccca01c11e7046323cfad46a3b4a471233":["817d8435e9135b756f08ce6710ab0baac51bdf88"],"2dadf0f3286a34a0fee6e788ffce88624bf2984e":["f891ab635a93d6bff8051a62f03a093ca7ddebe9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"ad94625fb8d088209f46650c8097196fec67f00c":["1da8d55113b689b06716246649de6f62430f15c0"],"868da859b43505d9d2a023bfeae6dd0c795f5295":["bde51b089eb7f86171eb3406e38a274743f9b7ac"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["d493718201f0d0c54c773fb323d87bbd2fbffe41"],"51cb88215648c6da23e00f2ffb57a5e3e1ef14be":["d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["135621f3a0670a9394eb563224a3b76cc4dddc0f","d493718201f0d0c54c773fb323d87bbd2fbffe41","d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}