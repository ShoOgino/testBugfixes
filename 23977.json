{"path":"lucene/core/src/java/org/apache/lucene/codecs/blockpacked/ForUtil#isAllEqual(long[]).mjava","commits":[{"id":"7250f5f8fbbaeebf817404fb2b3ce3b26161d5df","date":1343686506,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/blockpacked/ForUtil#isAllEqual(long[]).mjava","pathOld":"/dev/null","sourceNew":"  protected static boolean isAllEqual(final long[] data) {\n    int len = data.length;\n    long v = data[0];\n    for (int i=1; i<len; i++) {\n      if (data[i] != v) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0e3359210474c12c0b79e6400450313e3d7ef2bb","date":1344347790,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/blockpacked/ForUtil#isAllEqual(long[]).mjava","sourceNew":null,"sourceOld":"  protected static boolean isAllEqual(final long[] data) {\n    int len = data.length;\n    long v = data[0];\n    for (int i=1; i<len; i++) {\n      if (data[i] != v) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2d569dbc58dcfe4b83257a5b1d867b66532beef1","date":1344416896,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/blockpacked/ForUtil#isAllEqual(long[]).mjava","pathOld":"/dev/null","sourceNew":"  // nocommit: we must have a util function for this, hmm?\n  private static boolean isAllEqual(final long[] data) {\n    final long v = data[0];\n    for (int i = 1; i < data.length; ++i) {\n      if (data[i] != v) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cf88b0fdab72e7a3389fdd9a68ae252142c41511","date":1344435322,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/blockpacked/ForUtil#isAllEqual(long[]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/blockpacked/ForUtil#isAllEqual(long[]).mjava","sourceNew":"  // nocommit: we must have a util function for this, hmm?\n  private static boolean isAllEqual(final long[] data) {\n    final long v = data[0];\n    for (int i = 1; i < BLOCK_SIZE; ++i) {\n      if (data[i] != v) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n","sourceOld":"  // nocommit: we must have a util function for this, hmm?\n  private static boolean isAllEqual(final long[] data) {\n    final long v = data[0];\n    for (int i = 1; i < data.length; ++i) {\n      if (data[i] != v) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cfd81d9c5e64e3e7bf4be0b28563e7f15441ae94","date":1344442349,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/blockpacked/ForUtil#isAllEqual(int[]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/blockpacked/ForUtil#isAllEqual(long[]).mjava","sourceNew":"  // nocommit: we must have a util function for this, hmm?\n  private static boolean isAllEqual(final int[] data) {\n    final long v = data[0];\n    for (int i = 1; i < BLOCK_SIZE; ++i) {\n      if (data[i] != v) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n","sourceOld":"  // nocommit: we must have a util function for this, hmm?\n  private static boolean isAllEqual(final long[] data) {\n    final long v = data[0];\n    for (int i = 1; i < BLOCK_SIZE; ++i) {\n      if (data[i] != v) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"2d569dbc58dcfe4b83257a5b1d867b66532beef1":["0e3359210474c12c0b79e6400450313e3d7ef2bb"],"7250f5f8fbbaeebf817404fb2b3ce3b26161d5df":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0e3359210474c12c0b79e6400450313e3d7ef2bb":["7250f5f8fbbaeebf817404fb2b3ce3b26161d5df"],"cfd81d9c5e64e3e7bf4be0b28563e7f15441ae94":["cf88b0fdab72e7a3389fdd9a68ae252142c41511"],"cf88b0fdab72e7a3389fdd9a68ae252142c41511":["2d569dbc58dcfe4b83257a5b1d867b66532beef1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"2d569dbc58dcfe4b83257a5b1d867b66532beef1":["cf88b0fdab72e7a3389fdd9a68ae252142c41511"],"7250f5f8fbbaeebf817404fb2b3ce3b26161d5df":["0e3359210474c12c0b79e6400450313e3d7ef2bb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7250f5f8fbbaeebf817404fb2b3ce3b26161d5df","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"0e3359210474c12c0b79e6400450313e3d7ef2bb":["2d569dbc58dcfe4b83257a5b1d867b66532beef1"],"cfd81d9c5e64e3e7bf4be0b28563e7f15441ae94":[],"cf88b0fdab72e7a3389fdd9a68ae252142c41511":["cfd81d9c5e64e3e7bf4be0b28563e7f15441ae94"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cfd81d9c5e64e3e7bf4be0b28563e7f15441ae94","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}