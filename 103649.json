{"path":"lucene/src/test/org/apache/lucene/search/payloads/PayloadHelper.PayloadFilter#incrementToken().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/payloads/PayloadHelper.PayloadFilter#incrementToken().mjava","pathOld":"src/test/org/apache/lucene/search/payloads/PayloadHelper.PayloadFilter#incrementToken().mjava","sourceNew":"    @Override\n    public boolean incrementToken() throws IOException {\n      \n      if (input.incrementToken()) {\n        if (fieldName.equals(FIELD))\n        {\n          payloadAtt.setPayload(new Payload(payloadField));\n        }\n        else if (fieldName.equals(MULTI_FIELD))\n        {\n          if (numSeen  % 2 == 0)\n          {\n            payloadAtt.setPayload(new Payload(payloadMultiField1));\n          }\n          else\n          {\n            payloadAtt.setPayload(new Payload(payloadMultiField2));\n          }\n          numSeen++;\n        }\n        return true;\n      }\n      return false;\n    }\n\n","sourceOld":"    @Override\n    public boolean incrementToken() throws IOException {\n      \n      if (input.incrementToken()) {\n        if (fieldName.equals(FIELD))\n        {\n          payloadAtt.setPayload(new Payload(payloadField));\n        }\n        else if (fieldName.equals(MULTI_FIELD))\n        {\n          if (numSeen  % 2 == 0)\n          {\n            payloadAtt.setPayload(new Payload(payloadMultiField1));\n          }\n          else\n          {\n            payloadAtt.setPayload(new Payload(payloadMultiField2));\n          }\n          numSeen++;\n        }\n        return true;\n      }\n      return false;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4196a8f99ce1dc39a13b325cd9fc21616fa54164","date":1314268949,"type":3,"author":"Christopher John Male","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/payloads/PayloadHelper.PayloadFilter#incrementToken().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/payloads/PayloadHelper.PayloadFilter#incrementToken().mjava","sourceNew":"    @Override\n    public boolean incrementToken() throws IOException {\n      \n      if (input.incrementToken()) {\n        if (fieldName.equals(FIELD)) {\n          payloadAtt.setPayload(new Payload(payloadField));\n        } else if (fieldName.equals(MULTI_FIELD)) {\n          if (numSeen  % 2 == 0) {\n            payloadAtt.setPayload(new Payload(payloadMultiField1));\n          }\n          else {\n            payloadAtt.setPayload(new Payload(payloadMultiField2));\n          }\n          numSeen++;\n        }\n        return true;\n      }\n      return false;\n    }\n\n","sourceOld":"    @Override\n    public boolean incrementToken() throws IOException {\n      \n      if (input.incrementToken()) {\n        if (fieldName.equals(FIELD))\n        {\n          payloadAtt.setPayload(new Payload(payloadField));\n        }\n        else if (fieldName.equals(MULTI_FIELD))\n        {\n          if (numSeen  % 2 == 0)\n          {\n            payloadAtt.setPayload(new Payload(payloadMultiField1));\n          }\n          else\n          {\n            payloadAtt.setPayload(new Payload(payloadMultiField2));\n          }\n          numSeen++;\n        }\n        return true;\n      }\n      return false;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/payloads/PayloadHelper.PayloadFilter#incrementToken().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/payloads/PayloadHelper.PayloadFilter#incrementToken().mjava","sourceNew":"    @Override\n    public boolean incrementToken() throws IOException {\n      \n      if (input.incrementToken()) {\n        if (fieldName.equals(FIELD)) {\n          payloadAtt.setPayload(new Payload(payloadField));\n        } else if (fieldName.equals(MULTI_FIELD)) {\n          if (numSeen  % 2 == 0) {\n            payloadAtt.setPayload(new Payload(payloadMultiField1));\n          }\n          else {\n            payloadAtt.setPayload(new Payload(payloadMultiField2));\n          }\n          numSeen++;\n        }\n        return true;\n      }\n      return false;\n    }\n\n","sourceOld":"    @Override\n    public boolean incrementToken() throws IOException {\n      \n      if (input.incrementToken()) {\n        if (fieldName.equals(FIELD)) {\n          payloadAtt.setPayload(new Payload(payloadField));\n        } else if (fieldName.equals(MULTI_FIELD)) {\n          if (numSeen  % 2 == 0) {\n            payloadAtt.setPayload(new Payload(payloadMultiField1));\n          }\n          else {\n            payloadAtt.setPayload(new Payload(payloadMultiField2));\n          }\n          numSeen++;\n        }\n        return true;\n      }\n      return false;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["4196a8f99ce1dc39a13b325cd9fc21616fa54164"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4196a8f99ce1dc39a13b325cd9fc21616fa54164":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"4196a8f99ce1dc39a13b325cd9fc21616fa54164":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["4196a8f99ce1dc39a13b325cd9fc21616fa54164"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}