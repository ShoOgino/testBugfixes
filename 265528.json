{"path":"src/java/org/apache/lucene/index/DocumentsWriter#setMaxBufferedDocs(int).mjava","commits":[{"id":"4350b17bd363cd13a95171b8df1ca62ea4c3e71c","date":1183562198,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/DocumentsWriter#setMaxBufferedDocs(int).mjava","pathOld":"/dev/null","sourceNew":"  /** Set max buffered docs, which means we will flush by\n   *  doc count instead of by RAM usage. */\n  void setMaxBufferedDocs(int count) {\n    maxBufferedDocs = count;\n    ramBufferSize = 0;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2558ddf9e14a97bc597f5b72bb3ecb5b7f6bba8e","date":1191352543,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/DocumentsWriter#setMaxBufferedDocs(int).mjava","pathOld":"src/java/org/apache/lucene/index/DocumentsWriter#setMaxBufferedDocs(int).mjava","sourceNew":"  /** Set max buffered docs, which means we will flush by\n   *  doc count instead of by RAM usage. */\n  void setMaxBufferedDocs(int count) {\n    maxBufferedDocs = count;\n  }\n\n","sourceOld":"  /** Set max buffered docs, which means we will flush by\n   *  doc count instead of by RAM usage. */\n  void setMaxBufferedDocs(int count) {\n    maxBufferedDocs = count;\n    ramBufferSize = 0;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#setMaxBufferedDocs(int).mjava","pathOld":"src/java/org/apache/lucene/index/DocumentsWriter#setMaxBufferedDocs(int).mjava","sourceNew":"  /** Set max buffered docs, which means we will flush by\n   *  doc count instead of by RAM usage. */\n  void setMaxBufferedDocs(int count) {\n    maxBufferedDocs = count;\n  }\n\n","sourceOld":"  /** Set max buffered docs, which means we will flush by\n   *  doc count instead of by RAM usage. */\n  void setMaxBufferedDocs(int count) {\n    maxBufferedDocs = count;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2558ddf9e14a97bc597f5b72bb3ecb5b7f6bba8e":["4350b17bd363cd13a95171b8df1ca62ea4c3e71c"],"4350b17bd363cd13a95171b8df1ca62ea4c3e71c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["2558ddf9e14a97bc597f5b72bb3ecb5b7f6bba8e"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4350b17bd363cd13a95171b8df1ca62ea4c3e71c"],"2558ddf9e14a97bc597f5b72bb3ecb5b7f6bba8e":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"4350b17bd363cd13a95171b8df1ca62ea4c3e71c":["2558ddf9e14a97bc597f5b72bb3ecb5b7f6bba8e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}