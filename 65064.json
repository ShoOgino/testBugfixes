{"path":"lucene/spatial/src/test/org/apache/lucene/spatial/prefix/RandomSpatialOpFuzzyPrefixTreeTest.ShapePair#toNonGeo(Shape).mjava","commits":[{"id":"0521546db127e358ced1772a9d696dbdd255b203","date":1403202289,"type":1,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/prefix/RandomSpatialOpFuzzyPrefixTreeTest.ShapePair#toNonGeo(Shape).mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/prefix/SpatialOpRecursivePrefixTreeTest.ShapePair#toNonGeo(Shape).mjava","sourceNew":"    private Shape toNonGeo(Shape shape) {\n      if (!ctx.isGeo())\n        return shape;//already non-geo\n      if (shape instanceof Rectangle) {\n        Rectangle rect = (Rectangle) shape;\n        if (rect.getCrossesDateLine()) {\n          return new ShapePair(\n              ctx2D.makeRectangle(rect.getMinX(), 180, rect.getMinY(), rect.getMaxY()),\n              ctx2D.makeRectangle(-180, rect.getMaxX(), rect.getMinY(), rect.getMaxY()),\n              biasContainsThenWithin);\n        } else {\n          return ctx2D.makeRectangle(rect.getMinX(), rect.getMaxX(), rect.getMinY(), rect.getMaxY());\n        }\n      }\n      //no need to do others; this addresses the -180/+180 ambiguity corner test problem\n      return shape;\n    }\n\n","sourceOld":"    private Shape toNonGeo(Shape shape) {\n      if (!ctx.isGeo())\n        return shape;//already non-geo\n      if (shape instanceof Rectangle) {\n        Rectangle rect = (Rectangle) shape;\n        if (rect.getCrossesDateLine()) {\n          return new ShapePair(\n              ctx2D.makeRectangle(rect.getMinX(), 180, rect.getMinY(), rect.getMaxY()),\n              ctx2D.makeRectangle(-180, rect.getMaxX(), rect.getMinY(), rect.getMaxY()),\n              biasContainsThenWithin);\n        } else {\n          return ctx2D.makeRectangle(rect.getMinX(), rect.getMaxX(), rect.getMinY(), rect.getMaxY());\n        }\n      }\n      //no need to do others; this addresses the -180/+180 ambiguity corner test problem\n      return shape;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"112d77ac8d3e10a362516ad834c9a11d35c94234","date":1456784319,"type":5,"author":"nknize","isMerge":false,"pathNew":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/prefix/RandomSpatialOpFuzzyPrefixTreeTest.ShapePair#toNonGeo(Shape).mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/prefix/RandomSpatialOpFuzzyPrefixTreeTest.ShapePair#toNonGeo(Shape).mjava","sourceNew":"    private Shape toNonGeo(Shape shape) {\n      if (!ctx.isGeo())\n        return shape;//already non-geo\n      if (shape instanceof Rectangle) {\n        Rectangle rect = (Rectangle) shape;\n        if (rect.getCrossesDateLine()) {\n          return new ShapePair(\n              ctx2D.makeRectangle(rect.getMinX(), 180, rect.getMinY(), rect.getMaxY()),\n              ctx2D.makeRectangle(-180, rect.getMaxX(), rect.getMinY(), rect.getMaxY()),\n              biasContainsThenWithin);\n        } else {\n          return ctx2D.makeRectangle(rect.getMinX(), rect.getMaxX(), rect.getMinY(), rect.getMaxY());\n        }\n      }\n      //no need to do others; this addresses the -180/+180 ambiguity corner test problem\n      return shape;\n    }\n\n","sourceOld":"    private Shape toNonGeo(Shape shape) {\n      if (!ctx.isGeo())\n        return shape;//already non-geo\n      if (shape instanceof Rectangle) {\n        Rectangle rect = (Rectangle) shape;\n        if (rect.getCrossesDateLine()) {\n          return new ShapePair(\n              ctx2D.makeRectangle(rect.getMinX(), 180, rect.getMinY(), rect.getMaxY()),\n              ctx2D.makeRectangle(-180, rect.getMaxX(), rect.getMinY(), rect.getMaxY()),\n              biasContainsThenWithin);\n        } else {\n          return ctx2D.makeRectangle(rect.getMinX(), rect.getMaxX(), rect.getMinY(), rect.getMaxY());\n        }\n      }\n      //no need to do others; this addresses the -180/+180 ambiguity corner test problem\n      return shape;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"af2638813028b254a88b418ebeafb541afb49653","date":1456804822,"type":5,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/prefix/RandomSpatialOpFuzzyPrefixTreeTest.ShapePair#toNonGeo(Shape).mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/prefix/RandomSpatialOpFuzzyPrefixTreeTest.ShapePair#toNonGeo(Shape).mjava","sourceNew":"    private Shape toNonGeo(Shape shape) {\n      if (!ctx.isGeo())\n        return shape;//already non-geo\n      if (shape instanceof Rectangle) {\n        Rectangle rect = (Rectangle) shape;\n        if (rect.getCrossesDateLine()) {\n          return new ShapePair(\n              ctx2D.makeRectangle(rect.getMinX(), 180, rect.getMinY(), rect.getMaxY()),\n              ctx2D.makeRectangle(-180, rect.getMaxX(), rect.getMinY(), rect.getMaxY()),\n              biasContainsThenWithin);\n        } else {\n          return ctx2D.makeRectangle(rect.getMinX(), rect.getMaxX(), rect.getMinY(), rect.getMaxY());\n        }\n      }\n      //no need to do others; this addresses the -180/+180 ambiguity corner test problem\n      return shape;\n    }\n\n","sourceOld":"    private Shape toNonGeo(Shape shape) {\n      if (!ctx.isGeo())\n        return shape;//already non-geo\n      if (shape instanceof Rectangle) {\n        Rectangle rect = (Rectangle) shape;\n        if (rect.getCrossesDateLine()) {\n          return new ShapePair(\n              ctx2D.makeRectangle(rect.getMinX(), 180, rect.getMinY(), rect.getMaxY()),\n              ctx2D.makeRectangle(-180, rect.getMaxX(), rect.getMinY(), rect.getMaxY()),\n              biasContainsThenWithin);\n        } else {\n          return ctx2D.makeRectangle(rect.getMinX(), rect.getMaxX(), rect.getMinY(), rect.getMaxY());\n        }\n      }\n      //no need to do others; this addresses the -180/+180 ambiguity corner test problem\n      return shape;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"af2638813028b254a88b418ebeafb541afb49653":["0521546db127e358ced1772a9d696dbdd255b203","112d77ac8d3e10a362516ad834c9a11d35c94234"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"112d77ac8d3e10a362516ad834c9a11d35c94234":["0521546db127e358ced1772a9d696dbdd255b203"],"0521546db127e358ced1772a9d696dbdd255b203":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["af2638813028b254a88b418ebeafb541afb49653"]},"commit2Childs":{"af2638813028b254a88b418ebeafb541afb49653":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0521546db127e358ced1772a9d696dbdd255b203"],"112d77ac8d3e10a362516ad834c9a11d35c94234":["af2638813028b254a88b418ebeafb541afb49653"],"0521546db127e358ced1772a9d696dbdd255b203":["af2638813028b254a88b418ebeafb541afb49653","112d77ac8d3e10a362516ad834c9a11d35c94234"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}