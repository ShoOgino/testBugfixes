{"path":"contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestEvaluatorBag#testGetDateFormatEvaluator().mjava","commits":[{"id":"4d4f1b2c5601680b01c4bb95a43fe6fb73f03103","date":1217446558,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestEvaluatorBag#testGetDateFormatEvaluator().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Test method for\n   * {@link EvaluatorBag#getDateFormatEvaluator()}.\n   */\n  @Test\n  @Ignore\n  public void testGetDateFormatEvaluator() {\n    Evaluator dateFormatEval = EvaluatorBag.getDateFormatEvaluator();\n    assertEquals(new SimpleDateFormat(\"yyyy-MM-dd\").format(new Date()),\n            dateFormatEval.evaluate(resolver, \"'NOW',yyyy-MM-dd HH:mm\"));\n\n    Map<String, Object> map = new HashMap<String, Object>();\n    map.put(\"key\", new Date());\n    resolver.addNamespace(\"A\", map);\n\n    assertEquals(new SimpleDateFormat(\"yyyy-MM-dd HH:mm\").format(new Date()),\n            dateFormatEval.evaluate(resolver, \"A.key, yyyy-MM-dd HH:mm\"));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7dfc8d8c033e2239995c45b976c90c18559da31e","date":1235021328,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestEvaluatorBag#testGetDateFormatEvaluator().mjava","pathOld":"contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestEvaluatorBag#testGetDateFormatEvaluator().mjava","sourceNew":"  /**\n   * Test method for {@link EvaluatorBag#getDateFormatEvaluator()}.\n   */\n  @Test\n  @Ignore\n  public void testGetDateFormatEvaluator() {\n    Evaluator dateFormatEval = EvaluatorBag.getDateFormatEvaluator();\n    resolver.context = new ContextImpl(null, resolver, null, 0, Collections.EMPTY_MAP, null, null);\n\n    assertEquals(new SimpleDateFormat(\"yyyy-MM-dd\").format(new Date()),\n            dateFormatEval.evaluate(\"'NOW',yyyy-MM-dd HH:mm\", resolver.context));\n\n    Map<String, Object> map = new HashMap<String, Object>();\n    map.put(\"key\", new Date());\n    resolver.addNamespace(\"A\", map);\n\n    assertEquals(new SimpleDateFormat(\"yyyy-MM-dd HH:mm\").format(new Date()),\n            dateFormatEval.evaluate(\"A.key, yyyy-MM-dd HH:mm\", resolver.context));\n  }\n\n","sourceOld":"  /**\n   * Test method for\n   * {@link EvaluatorBag#getDateFormatEvaluator()}.\n   */\n  @Test\n  @Ignore\n  public void testGetDateFormatEvaluator() {\n    Evaluator dateFormatEval = EvaluatorBag.getDateFormatEvaluator();\n    assertEquals(new SimpleDateFormat(\"yyyy-MM-dd\").format(new Date()),\n            dateFormatEval.evaluate(resolver, \"'NOW',yyyy-MM-dd HH:mm\"));\n\n    Map<String, Object> map = new HashMap<String, Object>();\n    map.put(\"key\", new Date());\n    resolver.addNamespace(\"A\", map);\n\n    assertEquals(new SimpleDateFormat(\"yyyy-MM-dd HH:mm\").format(new Date()),\n            dateFormatEval.evaluate(resolver, \"A.key, yyyy-MM-dd HH:mm\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"850e6bf528dcc8def8f27ada3cfa6ba4d2336375","date":1235458726,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestEvaluatorBag#testGetDateFormatEvaluator().mjava","pathOld":"contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestEvaluatorBag#testGetDateFormatEvaluator().mjava","sourceNew":"  /**\n   * Test method for {@link EvaluatorBag#getDateFormatEvaluator()}.\n   */\n  @Test\n  @Ignore\n  public void testGetDateFormatEvaluator() {\n    Evaluator dateFormatEval = EvaluatorBag.getDateFormatEvaluator();\n    resolver.context = new ContextImpl(null, resolver, null, 0, Collections.EMPTY_MAP, null, null);\n\n    assertEquals(new SimpleDateFormat(\"yyyy-MM-dd\").format(new Date()),\n            dateFormatEval.evaluate(\"'NOW','yyyy-MM-dd HH:mm'\", resolver.context));\n\n    Map<String, Object> map = new HashMap<String, Object>();\n    map.put(\"key\", new Date());\n    resolver.addNamespace(\"A\", map);\n\n    assertEquals(new SimpleDateFormat(\"yyyy-MM-dd HH:mm\").format(new Date()),\n            dateFormatEval.evaluate(\"A.key, 'yyyy-MM-dd HH:mm'\", resolver.context));\n  }\n\n","sourceOld":"  /**\n   * Test method for {@link EvaluatorBag#getDateFormatEvaluator()}.\n   */\n  @Test\n  @Ignore\n  public void testGetDateFormatEvaluator() {\n    Evaluator dateFormatEval = EvaluatorBag.getDateFormatEvaluator();\n    resolver.context = new ContextImpl(null, resolver, null, 0, Collections.EMPTY_MAP, null, null);\n\n    assertEquals(new SimpleDateFormat(\"yyyy-MM-dd\").format(new Date()),\n            dateFormatEval.evaluate(\"'NOW',yyyy-MM-dd HH:mm\", resolver.context));\n\n    Map<String, Object> map = new HashMap<String, Object>();\n    map.put(\"key\", new Date());\n    resolver.addNamespace(\"A\", map);\n\n    assertEquals(new SimpleDateFormat(\"yyyy-MM-dd HH:mm\").format(new Date()),\n            dateFormatEval.evaluate(\"A.key, yyyy-MM-dd HH:mm\", resolver.context));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"15e2075af5402114e19af81f2bc2e047bb14c430","date":1237882189,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestEvaluatorBag#testGetDateFormatEvaluator().mjava","pathOld":"contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestEvaluatorBag#testGetDateFormatEvaluator().mjava","sourceNew":"  /**\n   * Test method for {@link EvaluatorBag#getDateFormatEvaluator()}.\n   */\n  @Test\n  public void testGetDateFormatEvaluator() {\n    Evaluator dateFormatEval = EvaluatorBag.getDateFormatEvaluator();\n    resolver.context = new ContextImpl(null, resolver, null, 0, Collections.EMPTY_MAP, null, null);\n\n    assertEquals(new SimpleDateFormat(\"yyyy-MM-dd HH:mm\").format(new Date()),\n            dateFormatEval.evaluate(\"'NOW','yyyy-MM-dd HH:mm'\", resolver.context));\n\n    Map<String, Object> map = new HashMap<String, Object>();\n    map.put(\"key\", new Date());\n    resolver.addNamespace(\"A\", map);\n\n    assertEquals(new SimpleDateFormat(\"yyyy-MM-dd HH:mm\").format(new Date()),\n            dateFormatEval.evaluate(\"A.key, 'yyyy-MM-dd HH:mm'\", resolver.context));\n  }\n\n","sourceOld":"  /**\n   * Test method for {@link EvaluatorBag#getDateFormatEvaluator()}.\n   */\n  @Test\n  @Ignore\n  public void testGetDateFormatEvaluator() {\n    Evaluator dateFormatEval = EvaluatorBag.getDateFormatEvaluator();\n    resolver.context = new ContextImpl(null, resolver, null, 0, Collections.EMPTY_MAP, null, null);\n\n    assertEquals(new SimpleDateFormat(\"yyyy-MM-dd\").format(new Date()),\n            dateFormatEval.evaluate(\"'NOW','yyyy-MM-dd HH:mm'\", resolver.context));\n\n    Map<String, Object> map = new HashMap<String, Object>();\n    map.put(\"key\", new Date());\n    resolver.addNamespace(\"A\", map);\n\n    assertEquals(new SimpleDateFormat(\"yyyy-MM-dd HH:mm\").format(new Date()),\n            dateFormatEval.evaluate(\"A.key, 'yyyy-MM-dd HH:mm'\", resolver.context));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"594d4ee17b3d941ed34827ca6646e378cf7d8d2a","date":1239868870,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestEvaluatorBag#testGetDateFormatEvaluator().mjava","pathOld":"contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestEvaluatorBag#testGetDateFormatEvaluator().mjava","sourceNew":"  /**\n   * Test method for {@link EvaluatorBag#getDateFormatEvaluator()}.\n   */\n  @Test\n  public void testGetDateFormatEvaluator() {\n    Evaluator dateFormatEval = EvaluatorBag.getDateFormatEvaluator();\n    resolver.context = new ContextImpl(null, resolver, null, Context.FULL_DUMP, Collections.EMPTY_MAP, null, null);\n\n    assertEquals(new SimpleDateFormat(\"yyyy-MM-dd HH:mm\").format(new Date()),\n            dateFormatEval.evaluate(\"'NOW','yyyy-MM-dd HH:mm'\", resolver.context));\n\n    Map<String, Object> map = new HashMap<String, Object>();\n    map.put(\"key\", new Date());\n    resolver.addNamespace(\"A\", map);\n\n    assertEquals(new SimpleDateFormat(\"yyyy-MM-dd HH:mm\").format(new Date()),\n            dateFormatEval.evaluate(\"A.key, 'yyyy-MM-dd HH:mm'\", resolver.context));\n  }\n\n","sourceOld":"  /**\n   * Test method for {@link EvaluatorBag#getDateFormatEvaluator()}.\n   */\n  @Test\n  public void testGetDateFormatEvaluator() {\n    Evaluator dateFormatEval = EvaluatorBag.getDateFormatEvaluator();\n    resolver.context = new ContextImpl(null, resolver, null, 0, Collections.EMPTY_MAP, null, null);\n\n    assertEquals(new SimpleDateFormat(\"yyyy-MM-dd HH:mm\").format(new Date()),\n            dateFormatEval.evaluate(\"'NOW','yyyy-MM-dd HH:mm'\", resolver.context));\n\n    Map<String, Object> map = new HashMap<String, Object>();\n    map.put(\"key\", new Date());\n    resolver.addNamespace(\"A\", map);\n\n    assertEquals(new SimpleDateFormat(\"yyyy-MM-dd HH:mm\").format(new Date()),\n            dateFormatEval.evaluate(\"A.key, 'yyyy-MM-dd HH:mm'\", resolver.context));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"151a8614b921f246ad34955cd49d9cf7db441b89","date":1254308155,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestEvaluatorBag#testGetDateFormatEvaluator().mjava","pathOld":"contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestEvaluatorBag#testGetDateFormatEvaluator().mjava","sourceNew":"  /**\n   * Test method for {@link EvaluatorBag#getDateFormatEvaluator()}.\n   */\n  @Test\n  public void testGetDateFormatEvaluator() {\n    Evaluator dateFormatEval = EvaluatorBag.getDateFormatEvaluator();\n    resolver.context = new ContextImpl(null, resolver, null, Context.FULL_DUMP, Collections.EMPTY_MAP, null, null);\n\n    long time = System.currentTimeMillis();\n    assertEquals(new SimpleDateFormat(\"yyyy-MM-dd HH:mm\").format(new Date(time - 2*86400*1000)),\n            dateFormatEval.evaluate(\"'NOW-2DAYS','yyyy-MM-dd HH:mm'\", resolver.context));\n\n    Map<String, Object> map = new HashMap<String, Object>();\n    map.put(\"key\", new Date(time));\n    resolver.addNamespace(\"A\", map);\n\n    assertEquals(new SimpleDateFormat(\"yyyy-MM-dd HH:mm\").format(new Date(time)),\n            dateFormatEval.evaluate(\"A.key, 'yyyy-MM-dd HH:mm'\", resolver.context));\n  }\n\n","sourceOld":"  /**\n   * Test method for {@link EvaluatorBag#getDateFormatEvaluator()}.\n   */\n  @Test\n  public void testGetDateFormatEvaluator() {\n    Evaluator dateFormatEval = EvaluatorBag.getDateFormatEvaluator();\n    resolver.context = new ContextImpl(null, resolver, null, Context.FULL_DUMP, Collections.EMPTY_MAP, null, null);\n\n    assertEquals(new SimpleDateFormat(\"yyyy-MM-dd HH:mm\").format(new Date()),\n            dateFormatEval.evaluate(\"'NOW','yyyy-MM-dd HH:mm'\", resolver.context));\n\n    Map<String, Object> map = new HashMap<String, Object>();\n    map.put(\"key\", new Date());\n    resolver.addNamespace(\"A\", map);\n\n    assertEquals(new SimpleDateFormat(\"yyyy-MM-dd HH:mm\").format(new Date()),\n            dateFormatEval.evaluate(\"A.key, 'yyyy-MM-dd HH:mm'\", resolver.context));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"65f4e997b946a4eadce22b758749046a63ba2eff","date":1263282580,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestEvaluatorBag#testGetDateFormatEvaluator().mjava","pathOld":"contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestEvaluatorBag#testGetDateFormatEvaluator().mjava","sourceNew":"  /**\n   * Test method for {@link EvaluatorBag#getDateFormatEvaluator()}.\n   */\n  @Test\n  public void testGetDateFormatEvaluator() {\n    Evaluator dateFormatEval = EvaluatorBag.getDateFormatEvaluator();\n    ContextImpl context = new ContextImpl(null, resolver, null, Context.FULL_DUMP, Collections.EMPTY_MAP, null, null);\n    Context.CURRENT_CONTEXT.set(context);\n    try {\n      long time = System.currentTimeMillis();\n      assertEquals(new SimpleDateFormat(\"yyyy-MM-dd HH:mm\").format(new Date(time - 2*86400*1000)),\n              dateFormatEval.evaluate(\"'NOW-2DAYS','yyyy-MM-dd HH:mm'\", Context.CURRENT_CONTEXT.get()));\n\n      Map<String, Object> map = new HashMap<String, Object>();\n      map.put(\"key\", new Date(time));\n      resolver.addNamespace(\"A\", map);\n\n      assertEquals(new SimpleDateFormat(\"yyyy-MM-dd HH:mm\").format(new Date(time)),\n              dateFormatEval.evaluate(\"A.key, 'yyyy-MM-dd HH:mm'\", Context.CURRENT_CONTEXT.get()));\n    } finally {\n      Context.CURRENT_CONTEXT.remove();\n    }\n  }\n\n","sourceOld":"  /**\n   * Test method for {@link EvaluatorBag#getDateFormatEvaluator()}.\n   */\n  @Test\n  public void testGetDateFormatEvaluator() {\n    Evaluator dateFormatEval = EvaluatorBag.getDateFormatEvaluator();\n    resolver.context = new ContextImpl(null, resolver, null, Context.FULL_DUMP, Collections.EMPTY_MAP, null, null);\n\n    long time = System.currentTimeMillis();\n    assertEquals(new SimpleDateFormat(\"yyyy-MM-dd HH:mm\").format(new Date(time - 2*86400*1000)),\n            dateFormatEval.evaluate(\"'NOW-2DAYS','yyyy-MM-dd HH:mm'\", resolver.context));\n\n    Map<String, Object> map = new HashMap<String, Object>();\n    map.put(\"key\", new Date(time));\n    resolver.addNamespace(\"A\", map);\n\n    assertEquals(new SimpleDateFormat(\"yyyy-MM-dd HH:mm\").format(new Date(time)),\n            dateFormatEval.evaluate(\"A.key, 'yyyy-MM-dd HH:mm'\", resolver.context));\n  }\n\n","bugFix":null,"bugIntro":["b22210020d2f86071faf33e8186b9a5af5100859"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b22210020d2f86071faf33e8186b9a5af5100859","date":1268607037,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestEvaluatorBag#testGetDateFormatEvaluator().mjava","pathOld":"contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestEvaluatorBag#testGetDateFormatEvaluator().mjava","sourceNew":"  /**\n   * Test method for {@link EvaluatorBag#getDateFormatEvaluator()}.\n   */\n  @Test\n  public void testGetDateFormatEvaluator() {\n    Evaluator dateFormatEval = EvaluatorBag.getDateFormatEvaluator();\n    ContextImpl context = new ContextImpl(null, resolver, null, Context.FULL_DUMP, Collections.EMPTY_MAP, null, null);\n    Context.CURRENT_CONTEXT.set(context);\n    try {\n      Calendar calendar = new GregorianCalendar();\n      calendar.add(Calendar.DAY_OF_YEAR, -2);\n\n      assertEquals(new SimpleDateFormat(\"yyyy-MM-dd HH:mm\").format(calendar.getTime()),\n              dateFormatEval.evaluate(\"'NOW-2DAYS','yyyy-MM-dd HH:mm'\", Context.CURRENT_CONTEXT.get()));\n\n      calendar = new GregorianCalendar();\n      Date date = calendar.getTime();\n      \n      Map<String, Object> map = new HashMap<String, Object>();\n      map.put(\"key\", date);\n      resolver.addNamespace(\"A\", map);\n\n      assertEquals(new SimpleDateFormat(\"yyyy-MM-dd HH:mm\").format(date),\n              dateFormatEval.evaluate(\"A.key, 'yyyy-MM-dd HH:mm'\", Context.CURRENT_CONTEXT.get()));\n    } finally {\n      Context.CURRENT_CONTEXT.remove();\n    }\n  }\n\n","sourceOld":"  /**\n   * Test method for {@link EvaluatorBag#getDateFormatEvaluator()}.\n   */\n  @Test\n  public void testGetDateFormatEvaluator() {\n    Evaluator dateFormatEval = EvaluatorBag.getDateFormatEvaluator();\n    ContextImpl context = new ContextImpl(null, resolver, null, Context.FULL_DUMP, Collections.EMPTY_MAP, null, null);\n    Context.CURRENT_CONTEXT.set(context);\n    try {\n      long time = System.currentTimeMillis();\n      assertEquals(new SimpleDateFormat(\"yyyy-MM-dd HH:mm\").format(new Date(time - 2*86400*1000)),\n              dateFormatEval.evaluate(\"'NOW-2DAYS','yyyy-MM-dd HH:mm'\", Context.CURRENT_CONTEXT.get()));\n\n      Map<String, Object> map = new HashMap<String, Object>();\n      map.put(\"key\", new Date(time));\n      resolver.addNamespace(\"A\", map);\n\n      assertEquals(new SimpleDateFormat(\"yyyy-MM-dd HH:mm\").format(new Date(time)),\n              dateFormatEval.evaluate(\"A.key, 'yyyy-MM-dd HH:mm'\", Context.CURRENT_CONTEXT.get()));\n    } finally {\n      Context.CURRENT_CONTEXT.remove();\n    }\n  }\n\n","bugFix":["65f4e997b946a4eadce22b758749046a63ba2eff"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4ec7fd106497c1a9f469e3aaca813bbe43d7a9d4","date":1268607498,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestEvaluatorBag#testGetDateFormatEvaluator().mjava","pathOld":"contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestEvaluatorBag#testGetDateFormatEvaluator().mjava","sourceNew":"  /**\n   * Test method for {@link EvaluatorBag#getDateFormatEvaluator()}.\n   */\n  @Test\n  public void testGetDateFormatEvaluator() {\n    Evaluator dateFormatEval = EvaluatorBag.getDateFormatEvaluator();\n    ContextImpl context = new ContextImpl(null, resolver, null, Context.FULL_DUMP, Collections.EMPTY_MAP, null, null);\n    Context.CURRENT_CONTEXT.set(context);\n    try {\n      Calendar calendar = new GregorianCalendar();\n      calendar.add(Calendar.DAY_OF_YEAR, -2);\n\n      assertEquals(new SimpleDateFormat(\"yyyy-MM-dd HH:mm\").format(calendar.getTime()),\n              dateFormatEval.evaluate(\"'NOW-2DAYS','yyyy-MM-dd HH:mm'\", Context.CURRENT_CONTEXT.get()));\n\n      calendar = new GregorianCalendar();\n      Date date = calendar.getTime();\n      \n      Map<String, Object> map = new HashMap<String, Object>();\n      map.put(\"key\", date);\n      resolver.addNamespace(\"A\", map);\n\n      assertEquals(new SimpleDateFormat(\"yyyy-MM-dd HH:mm\").format(date),\n              dateFormatEval.evaluate(\"A.key, 'yyyy-MM-dd HH:mm'\", Context.CURRENT_CONTEXT.get()));\n    } finally {\n      Context.CURRENT_CONTEXT.remove();\n    }\n  }\n\n","sourceOld":"  /**\n   * Test method for {@link EvaluatorBag#getDateFormatEvaluator()}.\n   */\n  @Test\n  public void testGetDateFormatEvaluator() {\n    Evaluator dateFormatEval = EvaluatorBag.getDateFormatEvaluator();\n    ContextImpl context = new ContextImpl(null, resolver, null, Context.FULL_DUMP, Collections.EMPTY_MAP, null, null);\n    Context.CURRENT_CONTEXT.set(context);\n    try {\n      long time = System.currentTimeMillis();\n      assertEquals(new SimpleDateFormat(\"yyyy-MM-dd HH:mm\").format(new Date(time - 2*86400*1000)),\n              dateFormatEval.evaluate(\"'NOW-2DAYS','yyyy-MM-dd HH:mm'\", Context.CURRENT_CONTEXT.get()));\n\n      Map<String, Object> map = new HashMap<String, Object>();\n      map.put(\"key\", new Date(time));\n      resolver.addNamespace(\"A\", map);\n\n      assertEquals(new SimpleDateFormat(\"yyyy-MM-dd HH:mm\").format(new Date(time)),\n              dateFormatEval.evaluate(\"A.key, 'yyyy-MM-dd HH:mm'\", Context.CURRENT_CONTEXT.get()));\n    } finally {\n      Context.CURRENT_CONTEXT.remove();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestEvaluatorBag#testGetDateFormatEvaluator().mjava","pathOld":"contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestEvaluatorBag#testGetDateFormatEvaluator().mjava","sourceNew":"  /**\n   * Test method for {@link EvaluatorBag#getDateFormatEvaluator()}.\n   */\n  @Test\n  public void testGetDateFormatEvaluator() {\n    Evaluator dateFormatEval = EvaluatorBag.getDateFormatEvaluator();\n    ContextImpl context = new ContextImpl(null, resolver, null, Context.FULL_DUMP, Collections.EMPTY_MAP, null, null);\n    Context.CURRENT_CONTEXT.set(context);\n    try {\n      Calendar calendar = new GregorianCalendar();\n      calendar.add(Calendar.DAY_OF_YEAR, -2);\n\n      assertEquals(new SimpleDateFormat(\"yyyy-MM-dd HH:mm\").format(calendar.getTime()),\n              dateFormatEval.evaluate(\"'NOW-2DAYS','yyyy-MM-dd HH:mm'\", Context.CURRENT_CONTEXT.get()));\n\n      calendar = new GregorianCalendar();\n      Date date = calendar.getTime();\n      \n      Map<String, Object> map = new HashMap<String, Object>();\n      map.put(\"key\", date);\n      resolver.addNamespace(\"A\", map);\n\n      assertEquals(new SimpleDateFormat(\"yyyy-MM-dd HH:mm\").format(date),\n              dateFormatEval.evaluate(\"A.key, 'yyyy-MM-dd HH:mm'\", Context.CURRENT_CONTEXT.get()));\n    } finally {\n      Context.CURRENT_CONTEXT.remove();\n    }\n  }\n\n","sourceOld":"  /**\n   * Test method for {@link EvaluatorBag#getDateFormatEvaluator()}.\n   */\n  @Test\n  public void testGetDateFormatEvaluator() {\n    Evaluator dateFormatEval = EvaluatorBag.getDateFormatEvaluator();\n    ContextImpl context = new ContextImpl(null, resolver, null, Context.FULL_DUMP, Collections.EMPTY_MAP, null, null);\n    Context.CURRENT_CONTEXT.set(context);\n    try {\n      Calendar calendar = new GregorianCalendar();\n      calendar.add(Calendar.DAY_OF_YEAR, -2);\n\n      assertEquals(new SimpleDateFormat(\"yyyy-MM-dd HH:mm\").format(calendar.getTime()),\n              dateFormatEval.evaluate(\"'NOW-2DAYS','yyyy-MM-dd HH:mm'\", Context.CURRENT_CONTEXT.get()));\n\n      calendar = new GregorianCalendar();\n      Date date = calendar.getTime();\n      \n      Map<String, Object> map = new HashMap<String, Object>();\n      map.put(\"key\", date);\n      resolver.addNamespace(\"A\", map);\n\n      assertEquals(new SimpleDateFormat(\"yyyy-MM-dd HH:mm\").format(date),\n              dateFormatEval.evaluate(\"A.key, 'yyyy-MM-dd HH:mm'\", Context.CURRENT_CONTEXT.get()));\n    } finally {\n      Context.CURRENT_CONTEXT.remove();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"850e6bf528dcc8def8f27ada3cfa6ba4d2336375":["7dfc8d8c033e2239995c45b976c90c18559da31e"],"151a8614b921f246ad34955cd49d9cf7db441b89":["594d4ee17b3d941ed34827ca6646e378cf7d8d2a"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"7dfc8d8c033e2239995c45b976c90c18559da31e":["4d4f1b2c5601680b01c4bb95a43fe6fb73f03103"],"15e2075af5402114e19af81f2bc2e047bb14c430":["850e6bf528dcc8def8f27ada3cfa6ba4d2336375"],"4ec7fd106497c1a9f469e3aaca813bbe43d7a9d4":["65f4e997b946a4eadce22b758749046a63ba2eff","b22210020d2f86071faf33e8186b9a5af5100859"],"b22210020d2f86071faf33e8186b9a5af5100859":["65f4e997b946a4eadce22b758749046a63ba2eff"],"4d4f1b2c5601680b01c4bb95a43fe6fb73f03103":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"65f4e997b946a4eadce22b758749046a63ba2eff":["151a8614b921f246ad34955cd49d9cf7db441b89"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ad94625fb8d088209f46650c8097196fec67f00c":["4ec7fd106497c1a9f469e3aaca813bbe43d7a9d4"],"594d4ee17b3d941ed34827ca6646e378cf7d8d2a":["15e2075af5402114e19af81f2bc2e047bb14c430"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"850e6bf528dcc8def8f27ada3cfa6ba4d2336375":["15e2075af5402114e19af81f2bc2e047bb14c430"],"151a8614b921f246ad34955cd49d9cf7db441b89":["65f4e997b946a4eadce22b758749046a63ba2eff"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["4d4f1b2c5601680b01c4bb95a43fe6fb73f03103"],"7dfc8d8c033e2239995c45b976c90c18559da31e":["850e6bf528dcc8def8f27ada3cfa6ba4d2336375"],"15e2075af5402114e19af81f2bc2e047bb14c430":["594d4ee17b3d941ed34827ca6646e378cf7d8d2a"],"4ec7fd106497c1a9f469e3aaca813bbe43d7a9d4":["ad94625fb8d088209f46650c8097196fec67f00c"],"b22210020d2f86071faf33e8186b9a5af5100859":["4ec7fd106497c1a9f469e3aaca813bbe43d7a9d4"],"4d4f1b2c5601680b01c4bb95a43fe6fb73f03103":["7dfc8d8c033e2239995c45b976c90c18559da31e"],"65f4e997b946a4eadce22b758749046a63ba2eff":["4ec7fd106497c1a9f469e3aaca813bbe43d7a9d4","b22210020d2f86071faf33e8186b9a5af5100859"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"594d4ee17b3d941ed34827ca6646e378cf7d8d2a":["151a8614b921f246ad34955cd49d9cf7db441b89"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}