{"path":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/geom/RandomPlaneTest#testPolygonAccuracy().mjava","commits":[{"id":"3a9b3ef6cc46c18893efb19aa54f8bcd3425c9db","date":1516894422,"type":0,"author":"Karl Wright","isMerge":false,"pathNew":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/geom/RandomPlaneTest#testPolygonAccuracy().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  @Repeat(iterations = 10)\n  public void testPolygonAccuracy() {\n    PlanetModel planetModel = randomPlanetModel();\n    GeoPoint point1 = randomGeoPoint(planetModel);\n    for (int i= 0; i < 1000; i++) {\n      double dist = random().nextDouble() * 1e-6 + Vector.MINIMUM_ANGULAR_RESOLUTION;\n      GeoPoint point2 = planetModel.surfacePointOnBearing(point1, dist, 0);\n      GeoPoint point3 = planetModel.surfacePointOnBearing(point1, dist, 0.5 * Math.PI);\n\n      List<GeoPoint> points = new ArrayList<>();\n      points.add(point1);\n      points.add(point2);\n      points.add(point3);\n      GeoPolygonFactory.makeGeoPolygon(planetModel, points);\n\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3a9b3ef6cc46c18893efb19aa54f8bcd3425c9db":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a9b3ef6cc46c18893efb19aa54f8bcd3425c9db"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a9b3ef6cc46c18893efb19aa54f8bcd3425c9db"],"3a9b3ef6cc46c18893efb19aa54f8bcd3425c9db":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}