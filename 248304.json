{"path":"solr/core/src/java/org/apache/solr/handler/component/DebugComponent#handleResponses(ResponseBuilder,ShardRequest).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/DebugComponent#handleResponses(ResponseBuilder,ShardRequest).mjava","pathOld":"solr/src/java/org/apache/solr/handler/component/DebugComponent#handleResponses(ResponseBuilder,ShardRequest).mjava","sourceNew":"  @Override\n  public void handleResponses(ResponseBuilder rb, ShardRequest sreq) {\n  }\n\n","sourceOld":"  @Override\n  public void handleResponses(ResponseBuilder rb, ShardRequest sreq) {\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/DebugComponent#handleResponses(ResponseBuilder,ShardRequest).mjava","pathOld":"solr/src/java/org/apache/solr/handler/component/DebugComponent#handleResponses(ResponseBuilder,ShardRequest).mjava","sourceNew":"  @Override\n  public void handleResponses(ResponseBuilder rb, ShardRequest sreq) {\n  }\n\n","sourceOld":"  @Override\n  public void handleResponses(ResponseBuilder rb, ShardRequest sreq) {\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/DebugComponent#handleResponses(ResponseBuilder,ShardRequest).mjava","pathOld":"solr/src/java/org/apache/solr/handler/component/DebugComponent#handleResponses(ResponseBuilder,ShardRequest).mjava","sourceNew":"  @Override\n  public void handleResponses(ResponseBuilder rb, ShardRequest sreq) {\n  }\n\n","sourceOld":"  @Override\n  public void handleResponses(ResponseBuilder rb, ShardRequest sreq) {\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d9d424bd039937b4125152b454b3a32754b06f6c","date":1384391321,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/DebugComponent#handleResponses(ResponseBuilder,ShardRequest).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/DebugComponent#handleResponses(ResponseBuilder,ShardRequest).mjava","sourceNew":"  @Override\n  public void handleResponses(ResponseBuilder rb, ShardRequest sreq) {\n    if (rb.isDebugTrack() && rb.isDistrib && !rb.finished.isEmpty()) {\n      @SuppressWarnings(\"unchecked\")\n      NamedList<Object> stageList = (NamedList<Object>) ((NamedList<Object>)rb.getDebugInfo().get(\"track\")).get(stages.get(rb.stage));\n      if(stageList == null) {\n        stageList = new NamedList<Object>();\n        rb.addDebug(stageList, \"track\", stages.get(rb.stage));\n      }\n      for(ShardResponse response: sreq.responses) {\n        stageList.add(response.getShard(), getTrackResponse(response));\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void handleResponses(ResponseBuilder rb, ShardRequest sreq) {\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/DebugComponent#handleResponses(ResponseBuilder,ShardRequest).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/DebugComponent#handleResponses(ResponseBuilder,ShardRequest).mjava","sourceNew":"  @Override\n  public void handleResponses(ResponseBuilder rb, ShardRequest sreq) {\n    if (rb.isDebugTrack() && rb.isDistrib && !rb.finished.isEmpty()) {\n      @SuppressWarnings(\"unchecked\")\n      NamedList<Object> stageList = (NamedList<Object>) ((NamedList<Object>)rb.getDebugInfo().get(\"track\")).get(stages.get(rb.stage));\n      if(stageList == null) {\n        stageList = new NamedList<>();\n        rb.addDebug(stageList, \"track\", stages.get(rb.stage));\n      }\n      for(ShardResponse response: sreq.responses) {\n        stageList.add(response.getShard(), getTrackResponse(response));\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void handleResponses(ResponseBuilder rb, ShardRequest sreq) {\n    if (rb.isDebugTrack() && rb.isDistrib && !rb.finished.isEmpty()) {\n      @SuppressWarnings(\"unchecked\")\n      NamedList<Object> stageList = (NamedList<Object>) ((NamedList<Object>)rb.getDebugInfo().get(\"track\")).get(stages.get(rb.stage));\n      if(stageList == null) {\n        stageList = new NamedList<Object>();\n        rb.addDebug(stageList, \"track\", stages.get(rb.stage));\n      }\n      for(ShardResponse response: sreq.responses) {\n        stageList.add(response.getShard(), getTrackResponse(response));\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28cbdd86beec745caa3fa58b97597c296d5ecfe3","date":1403121328,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/DebugComponent#handleResponses(ResponseBuilder,ShardRequest).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/DebugComponent#handleResponses(ResponseBuilder,ShardRequest).mjava","sourceNew":"  @Override\n  public void handleResponses(ResponseBuilder rb, ShardRequest sreq) {\n    if (rb.isDebugTrack() && rb.isDistrib && !rb.finished.isEmpty()) {\n      @SuppressWarnings(\"unchecked\")\n      NamedList<Object> stageList = (NamedList<Object>) ((NamedList<Object>)rb.getDebugInfo().get(\"track\")).get(stages.get(rb.stage));\n      if(stageList == null) {\n        stageList = new SimpleOrderedMap<>();\n        rb.addDebug(stageList, \"track\", stages.get(rb.stage));\n      }\n      for(ShardResponse response: sreq.responses) {\n        stageList.add(response.getShard(), getTrackResponse(response));\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void handleResponses(ResponseBuilder rb, ShardRequest sreq) {\n    if (rb.isDebugTrack() && rb.isDistrib && !rb.finished.isEmpty()) {\n      @SuppressWarnings(\"unchecked\")\n      NamedList<Object> stageList = (NamedList<Object>) ((NamedList<Object>)rb.getDebugInfo().get(\"track\")).get(stages.get(rb.stage));\n      if(stageList == null) {\n        stageList = new NamedList<>();\n        rb.addDebug(stageList, \"track\", stages.get(rb.stage));\n      }\n      for(ShardResponse response: sreq.responses) {\n        stageList.add(response.getShard(), getTrackResponse(response));\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["d9d424bd039937b4125152b454b3a32754b06f6c"],"d9d424bd039937b4125152b454b3a32754b06f6c":["c26f00b574427b55127e869b935845554afde1fa"],"28cbdd86beec745caa3fa58b97597c296d5ecfe3":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["28cbdd86beec745caa3fa58b97597c296d5ecfe3"]},"commit2Childs":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["28cbdd86beec745caa3fa58b97597c296d5ecfe3"],"d9d424bd039937b4125152b454b3a32754b06f6c":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"28cbdd86beec745caa3fa58b97597c296d5ecfe3":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["d9d424bd039937b4125152b454b3a32754b06f6c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}