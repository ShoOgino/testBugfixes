{"path":"lucene/core/src/test/org/apache/lucene/TestDemoDocValue#testSortedBytesThreeDocuments().mjava","commits":[{"id":"478cca37543a9c4f87372a9097ab755f21b76de0","date":1357734288,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/TestDemoDocValue#testSortedBytesThreeDocuments().mjava","pathOld":"/dev/null","sourceNew":"  public void testSortedBytesThreeDocuments() throws IOException {\n    Analyzer analyzer = new MockAnalyzer(random());\n\n    Directory directory = newDirectory();\n    // we don't use RandomIndexWriter because it might add more docvalues than we expect !!!!1\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, analyzer);\n    iwc.setMergePolicy(newLogMergePolicy());\n    IndexWriter iwriter = new IndexWriter(directory, iwc);\n    Document doc = new Document();\n    doc.add(new SortedBytesDocValuesField(\"dv\", new BytesRef(\"hello world 1\")));\n    iwriter.addDocument(doc);\n    doc = new Document();\n    doc.add(new SortedBytesDocValuesField(\"dv\", new BytesRef(\"hello world 2\")));\n    iwriter.addDocument(doc);\n    doc = new Document();\n    doc.add(new SortedBytesDocValuesField(\"dv\", new BytesRef(\"hello world 1\")));\n    iwriter.addDocument(doc);\n    iwriter.forceMerge(1);\n    iwriter.close();\n    \n    // Now search the index:\n    IndexReader ireader = DirectoryReader.open(directory); // read-only=true\n    assert ireader.leaves().size() == 1;\n    SortedDocValues dv = ireader.leaves().get(0).reader().getSortedDocValues(\"dv\");\n    assertEquals(3, dv.size());\n    assertEquals(2, dv.getValueCount());\n    BytesRef scratch = new BytesRef();\n    dv.lookupOrd(dv.getOrd(0), scratch);\n    assertEquals(\"hello world 1\", scratch.utf8ToString());\n    dv.lookupOrd(dv.getOrd(1), scratch);\n    assertEquals(\"hello world 2\", scratch.utf8ToString());\n\n    ireader.close();\n    directory.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cdbea089ef1eaf13b1c23250bf368db91f27deea","date":1357734660,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/TestDemoDocValue#testSortedBytesThreeDocuments().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/TestDemoDocValue#testSortedBytesThreeDocuments().mjava","sourceNew":"  public void testSortedBytesThreeDocuments() throws IOException {\n    Analyzer analyzer = new MockAnalyzer(random());\n\n    Directory directory = newDirectory();\n    // we don't use RandomIndexWriter because it might add more docvalues than we expect !!!!1\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, analyzer);\n    iwc.setMergePolicy(newLogMergePolicy());\n    IndexWriter iwriter = new IndexWriter(directory, iwc);\n    Document doc = new Document();\n    doc.add(new SortedBytesDocValuesField(\"dv\", new BytesRef(\"hello world 1\")));\n    iwriter.addDocument(doc);\n    doc = new Document();\n    doc.add(new SortedBytesDocValuesField(\"dv\", new BytesRef(\"hello world 2\")));\n    iwriter.addDocument(doc);\n    doc = new Document();\n    doc.add(new SortedBytesDocValuesField(\"dv\", new BytesRef(\"hello world 1\")));\n    iwriter.addDocument(doc);\n    iwriter.forceMerge(1);\n    iwriter.close();\n    \n    // Now search the index:\n    IndexReader ireader = DirectoryReader.open(directory); // read-only=true\n    assert ireader.leaves().size() == 1;\n    SortedDocValues dv = ireader.leaves().get(0).reader().getSortedDocValues(\"dv\");\n    assertEquals(3, dv.size());\n    assertEquals(2, dv.getValueCount());\n    BytesRef scratch = new BytesRef();\n    assertEquals(0, dv.getOrd(0));\n    dv.lookupOrd(0, scratch);\n    assertEquals(\"hello world 1\", scratch.utf8ToString());\n    assertEquals(1, dv.getOrd(1));\n    dv.lookupOrd(1, scratch);\n    assertEquals(\"hello world 2\", scratch.utf8ToString());\n    assertEquals(0, dv.getOrd(2));\n\n    ireader.close();\n    directory.close();\n  }\n\n","sourceOld":"  public void testSortedBytesThreeDocuments() throws IOException {\n    Analyzer analyzer = new MockAnalyzer(random());\n\n    Directory directory = newDirectory();\n    // we don't use RandomIndexWriter because it might add more docvalues than we expect !!!!1\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, analyzer);\n    iwc.setMergePolicy(newLogMergePolicy());\n    IndexWriter iwriter = new IndexWriter(directory, iwc);\n    Document doc = new Document();\n    doc.add(new SortedBytesDocValuesField(\"dv\", new BytesRef(\"hello world 1\")));\n    iwriter.addDocument(doc);\n    doc = new Document();\n    doc.add(new SortedBytesDocValuesField(\"dv\", new BytesRef(\"hello world 2\")));\n    iwriter.addDocument(doc);\n    doc = new Document();\n    doc.add(new SortedBytesDocValuesField(\"dv\", new BytesRef(\"hello world 1\")));\n    iwriter.addDocument(doc);\n    iwriter.forceMerge(1);\n    iwriter.close();\n    \n    // Now search the index:\n    IndexReader ireader = DirectoryReader.open(directory); // read-only=true\n    assert ireader.leaves().size() == 1;\n    SortedDocValues dv = ireader.leaves().get(0).reader().getSortedDocValues(\"dv\");\n    assertEquals(3, dv.size());\n    assertEquals(2, dv.getValueCount());\n    BytesRef scratch = new BytesRef();\n    dv.lookupOrd(dv.getOrd(0), scratch);\n    assertEquals(\"hello world 1\", scratch.utf8ToString());\n    dv.lookupOrd(dv.getOrd(1), scratch);\n    assertEquals(\"hello world 2\", scratch.utf8ToString());\n\n    ireader.close();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"32608e0a08e76fe8668cd1dcca0e7a8f6d7f3f0a","date":1357739321,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/TestDemoDocValue#testSortedBytesThreeDocuments().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/TestDemoDocValue#testSortedBytesThreeDocuments().mjava","sourceNew":"  public void testSortedBytesThreeDocuments() throws IOException {\n    Analyzer analyzer = new MockAnalyzer(random());\n\n    Directory directory = newDirectory();\n    // we don't use RandomIndexWriter because it might add more docvalues than we expect !!!!1\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, analyzer);\n    iwc.setMergePolicy(newLogMergePolicy());\n    IndexWriter iwriter = new IndexWriter(directory, iwc);\n    Document doc = new Document();\n    doc.add(new SortedBytesDocValuesField(\"dv\", new BytesRef(\"hello world 1\")));\n    iwriter.addDocument(doc);\n    doc = new Document();\n    doc.add(new SortedBytesDocValuesField(\"dv\", new BytesRef(\"hello world 2\")));\n    iwriter.addDocument(doc);\n    doc = new Document();\n    doc.add(new SortedBytesDocValuesField(\"dv\", new BytesRef(\"hello world 1\")));\n    iwriter.addDocument(doc);\n    iwriter.forceMerge(1);\n    iwriter.close();\n    \n    // Now search the index:\n    IndexReader ireader = DirectoryReader.open(directory); // read-only=true\n    assert ireader.leaves().size() == 1;\n    SortedDocValues dv = ireader.leaves().get(0).reader().getSortedDocValues(\"dv\");\n    assertEquals(2, dv.getValueCount());\n    BytesRef scratch = new BytesRef();\n    assertEquals(0, dv.getOrd(0));\n    dv.lookupOrd(0, scratch);\n    assertEquals(\"hello world 1\", scratch.utf8ToString());\n    assertEquals(1, dv.getOrd(1));\n    dv.lookupOrd(1, scratch);\n    assertEquals(\"hello world 2\", scratch.utf8ToString());\n    assertEquals(0, dv.getOrd(2));\n\n    ireader.close();\n    directory.close();\n  }\n\n","sourceOld":"  public void testSortedBytesThreeDocuments() throws IOException {\n    Analyzer analyzer = new MockAnalyzer(random());\n\n    Directory directory = newDirectory();\n    // we don't use RandomIndexWriter because it might add more docvalues than we expect !!!!1\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, analyzer);\n    iwc.setMergePolicy(newLogMergePolicy());\n    IndexWriter iwriter = new IndexWriter(directory, iwc);\n    Document doc = new Document();\n    doc.add(new SortedBytesDocValuesField(\"dv\", new BytesRef(\"hello world 1\")));\n    iwriter.addDocument(doc);\n    doc = new Document();\n    doc.add(new SortedBytesDocValuesField(\"dv\", new BytesRef(\"hello world 2\")));\n    iwriter.addDocument(doc);\n    doc = new Document();\n    doc.add(new SortedBytesDocValuesField(\"dv\", new BytesRef(\"hello world 1\")));\n    iwriter.addDocument(doc);\n    iwriter.forceMerge(1);\n    iwriter.close();\n    \n    // Now search the index:\n    IndexReader ireader = DirectoryReader.open(directory); // read-only=true\n    assert ireader.leaves().size() == 1;\n    SortedDocValues dv = ireader.leaves().get(0).reader().getSortedDocValues(\"dv\");\n    assertEquals(3, dv.size());\n    assertEquals(2, dv.getValueCount());\n    BytesRef scratch = new BytesRef();\n    assertEquals(0, dv.getOrd(0));\n    dv.lookupOrd(0, scratch);\n    assertEquals(\"hello world 1\", scratch.utf8ToString());\n    assertEquals(1, dv.getOrd(1));\n    dv.lookupOrd(1, scratch);\n    assertEquals(\"hello world 2\", scratch.utf8ToString());\n    assertEquals(0, dv.getOrd(2));\n\n    ireader.close();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"423d89a2b3cc419b647c07c2b3fdbc54311d07f9","date":1358836612,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/TestDemoDocValue#testSortedBytesThreeDocuments().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/TestDemoDocValue#testSortedBytesThreeDocuments().mjava","sourceNew":"  public void testSortedBytesThreeDocuments() throws IOException {\n    Analyzer analyzer = new MockAnalyzer(random());\n\n    Directory directory = newDirectory();\n    // we don't use RandomIndexWriter because it might add more docvalues than we expect !!!!1\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, analyzer);\n    iwc.setMergePolicy(newLogMergePolicy());\n    IndexWriter iwriter = new IndexWriter(directory, iwc);\n    Document doc = new Document();\n    doc.add(new SortedDocValuesField(\"dv\", new BytesRef(\"hello world 1\")));\n    iwriter.addDocument(doc);\n    doc = new Document();\n    doc.add(new SortedDocValuesField(\"dv\", new BytesRef(\"hello world 2\")));\n    iwriter.addDocument(doc);\n    doc = new Document();\n    doc.add(new SortedDocValuesField(\"dv\", new BytesRef(\"hello world 1\")));\n    iwriter.addDocument(doc);\n    iwriter.forceMerge(1);\n    iwriter.close();\n    \n    // Now search the index:\n    IndexReader ireader = DirectoryReader.open(directory); // read-only=true\n    assert ireader.leaves().size() == 1;\n    SortedDocValues dv = ireader.leaves().get(0).reader().getSortedDocValues(\"dv\");\n    assertEquals(2, dv.getValueCount());\n    BytesRef scratch = new BytesRef();\n    assertEquals(0, dv.getOrd(0));\n    dv.lookupOrd(0, scratch);\n    assertEquals(\"hello world 1\", scratch.utf8ToString());\n    assertEquals(1, dv.getOrd(1));\n    dv.lookupOrd(1, scratch);\n    assertEquals(\"hello world 2\", scratch.utf8ToString());\n    assertEquals(0, dv.getOrd(2));\n\n    ireader.close();\n    directory.close();\n  }\n\n","sourceOld":"  public void testSortedBytesThreeDocuments() throws IOException {\n    Analyzer analyzer = new MockAnalyzer(random());\n\n    Directory directory = newDirectory();\n    // we don't use RandomIndexWriter because it might add more docvalues than we expect !!!!1\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, analyzer);\n    iwc.setMergePolicy(newLogMergePolicy());\n    IndexWriter iwriter = new IndexWriter(directory, iwc);\n    Document doc = new Document();\n    doc.add(new SortedBytesDocValuesField(\"dv\", new BytesRef(\"hello world 1\")));\n    iwriter.addDocument(doc);\n    doc = new Document();\n    doc.add(new SortedBytesDocValuesField(\"dv\", new BytesRef(\"hello world 2\")));\n    iwriter.addDocument(doc);\n    doc = new Document();\n    doc.add(new SortedBytesDocValuesField(\"dv\", new BytesRef(\"hello world 1\")));\n    iwriter.addDocument(doc);\n    iwriter.forceMerge(1);\n    iwriter.close();\n    \n    // Now search the index:\n    IndexReader ireader = DirectoryReader.open(directory); // read-only=true\n    assert ireader.leaves().size() == 1;\n    SortedDocValues dv = ireader.leaves().get(0).reader().getSortedDocValues(\"dv\");\n    assertEquals(2, dv.getValueCount());\n    BytesRef scratch = new BytesRef();\n    assertEquals(0, dv.getOrd(0));\n    dv.lookupOrd(0, scratch);\n    assertEquals(\"hello world 1\", scratch.utf8ToString());\n    assertEquals(1, dv.getOrd(1));\n    dv.lookupOrd(1, scratch);\n    assertEquals(\"hello world 2\", scratch.utf8ToString());\n    assertEquals(0, dv.getOrd(2));\n\n    ireader.close();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2ec08217282b5e9df023dcdff55c745ff68b1c7d","date":1359392781,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BaseDocValuesFormatTestCase#testSortedBytesThreeDocuments().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/TestDemoDocValue#testSortedBytesThreeDocuments().mjava","sourceNew":"  public void testSortedBytesThreeDocuments() throws IOException {\n    Analyzer analyzer = new MockAnalyzer(random());\n\n    Directory directory = newDirectory();\n    // we don't use RandomIndexWriter because it might add more docvalues than we expect !!!!\n    IndexWriterConfig conf = newIndexWriterConfig(TEST_VERSION_CURRENT, analyzer);\n    conf.setCodec(getCodec());\n    conf.setMergePolicy(newLogMergePolicy());\n    IndexWriter iwriter = new IndexWriter(directory, conf);\n    Document doc = new Document();\n    doc.add(new SortedDocValuesField(\"dv\", new BytesRef(\"hello world 1\")));\n    iwriter.addDocument(doc);\n    doc = new Document();\n    doc.add(new SortedDocValuesField(\"dv\", new BytesRef(\"hello world 2\")));\n    iwriter.addDocument(doc);\n    doc = new Document();\n    doc.add(new SortedDocValuesField(\"dv\", new BytesRef(\"hello world 1\")));\n    iwriter.addDocument(doc);\n    iwriter.forceMerge(1);\n    iwriter.close();\n    \n    // Now search the index:\n    IndexReader ireader = DirectoryReader.open(directory); // read-only=true\n    assert ireader.leaves().size() == 1;\n    SortedDocValues dv = ireader.leaves().get(0).reader().getSortedDocValues(\"dv\");\n    assertEquals(2, dv.getValueCount());\n    BytesRef scratch = new BytesRef();\n    assertEquals(0, dv.getOrd(0));\n    dv.lookupOrd(0, scratch);\n    assertEquals(\"hello world 1\", scratch.utf8ToString());\n    assertEquals(1, dv.getOrd(1));\n    dv.lookupOrd(1, scratch);\n    assertEquals(\"hello world 2\", scratch.utf8ToString());\n    assertEquals(0, dv.getOrd(2));\n\n    ireader.close();\n    directory.close();\n  }\n\n","sourceOld":"  public void testSortedBytesThreeDocuments() throws IOException {\n    Analyzer analyzer = new MockAnalyzer(random());\n\n    Directory directory = newDirectory();\n    // we don't use RandomIndexWriter because it might add more docvalues than we expect !!!!1\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, analyzer);\n    iwc.setMergePolicy(newLogMergePolicy());\n    IndexWriter iwriter = new IndexWriter(directory, iwc);\n    Document doc = new Document();\n    doc.add(new SortedDocValuesField(\"dv\", new BytesRef(\"hello world 1\")));\n    iwriter.addDocument(doc);\n    doc = new Document();\n    doc.add(new SortedDocValuesField(\"dv\", new BytesRef(\"hello world 2\")));\n    iwriter.addDocument(doc);\n    doc = new Document();\n    doc.add(new SortedDocValuesField(\"dv\", new BytesRef(\"hello world 1\")));\n    iwriter.addDocument(doc);\n    iwriter.forceMerge(1);\n    iwriter.close();\n    \n    // Now search the index:\n    IndexReader ireader = DirectoryReader.open(directory); // read-only=true\n    assert ireader.leaves().size() == 1;\n    SortedDocValues dv = ireader.leaves().get(0).reader().getSortedDocValues(\"dv\");\n    assertEquals(2, dv.getValueCount());\n    BytesRef scratch = new BytesRef();\n    assertEquals(0, dv.getOrd(0));\n    dv.lookupOrd(0, scratch);\n    assertEquals(\"hello world 1\", scratch.utf8ToString());\n    assertEquals(1, dv.getOrd(1));\n    dv.lookupOrd(1, scratch);\n    assertEquals(\"hello world 2\", scratch.utf8ToString());\n    assertEquals(0, dv.getOrd(2));\n\n    ireader.close();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"423d89a2b3cc419b647c07c2b3fdbc54311d07f9":["32608e0a08e76fe8668cd1dcca0e7a8f6d7f3f0a"],"cdbea089ef1eaf13b1c23250bf368db91f27deea":["478cca37543a9c4f87372a9097ab755f21b76de0"],"478cca37543a9c4f87372a9097ab755f21b76de0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"32608e0a08e76fe8668cd1dcca0e7a8f6d7f3f0a":["cdbea089ef1eaf13b1c23250bf368db91f27deea"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"2ec08217282b5e9df023dcdff55c745ff68b1c7d":["423d89a2b3cc419b647c07c2b3fdbc54311d07f9"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["478cca37543a9c4f87372a9097ab755f21b76de0","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"423d89a2b3cc419b647c07c2b3fdbc54311d07f9":["2ec08217282b5e9df023dcdff55c745ff68b1c7d"],"cdbea089ef1eaf13b1c23250bf368db91f27deea":["32608e0a08e76fe8668cd1dcca0e7a8f6d7f3f0a"],"478cca37543a9c4f87372a9097ab755f21b76de0":["cdbea089ef1eaf13b1c23250bf368db91f27deea"],"32608e0a08e76fe8668cd1dcca0e7a8f6d7f3f0a":["423d89a2b3cc419b647c07c2b3fdbc54311d07f9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"2ec08217282b5e9df023dcdff55c745ff68b1c7d":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","2ec08217282b5e9df023dcdff55c745ff68b1c7d"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}