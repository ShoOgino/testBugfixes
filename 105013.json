{"path":"lucene/spatial/src/test/org/apache/lucene/spatial/PortedSolr3Test#checkHitsOrdered(String,String...).mjava","commits":[{"id":"9c327517edf97b94827c01757fbf21e0ca625eb7","date":1341211669,"type":0,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/PortedSolr3Test#checkHitsOrdered(String,String...).mjava","pathOld":"/dev/null","sourceNew":"  private void checkHitsOrdered(String spatialQ, String... ids) {\n    SpatialArgs args = this.argsParser.parse(spatialQ,ctx);\n    Query query = strategy.makeQuery(args, fieldInfo);\n    SearchResults results = executeQuery(query, 100);\n    String[] resultIds = new String[results.numFound];\n    int i = 0;\n    for (SearchResult result : results.results) {\n      resultIds[i++] = result.document.get(\"id\");\n    }\n    assertArrayEquals(\"order matters\",ids, resultIds);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0415a016b37e58a017fed0a91234f733ab359971","date":1341458183,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/PortedSolr3Test#checkHitsOrdered(String,String...).mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/PortedSolr3Test#checkHitsOrdered(String,String...).mjava","sourceNew":"  private void checkHitsOrdered(String spatialQ, String... ids) {\n    SpatialArgs args = this.argsParser.parse(spatialQ,ctx);\n    Query query = strategy.makeQuery(args);\n    SearchResults results = executeQuery(query, 100);\n    String[] resultIds = new String[results.numFound];\n    int i = 0;\n    for (SearchResult result : results.results) {\n      resultIds[i++] = result.document.get(\"id\");\n    }\n    assertArrayEquals(\"order matters\",ids, resultIds);\n  }\n\n","sourceOld":"  private void checkHitsOrdered(String spatialQ, String... ids) {\n    SpatialArgs args = this.argsParser.parse(spatialQ,ctx);\n    Query query = strategy.makeQuery(args, fieldInfo);\n    SearchResults results = executeQuery(query, 100);\n    String[] resultIds = new String[results.numFound];\n    int i = 0;\n    for (SearchResult result : results.results) {\n      resultIds[i++] = result.document.get(\"id\");\n    }\n    assertArrayEquals(\"order matters\",ids, resultIds);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/PortedSolr3Test#checkHitsOrdered(String,String...).mjava","pathOld":"/dev/null","sourceNew":"  private void checkHitsOrdered(String spatialQ, String... ids) {\n    SpatialArgs args = this.argsParser.parse(spatialQ,ctx);\n    Query query = strategy.makeQuery(args);\n    SearchResults results = executeQuery(query, 100);\n    String[] resultIds = new String[results.numFound];\n    int i = 0;\n    for (SearchResult result : results.results) {\n      resultIds[i++] = result.document.get(\"id\");\n    }\n    assertArrayEquals(\"order matters\",ids, resultIds);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28bce66b0b769a7827b1f4df30b3f50a2ed6c355","date":1347720564,"type":4,"author":"David Wayne Smiley","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/PortedSolr3Test#checkHitsOrdered(String,String...).mjava","sourceNew":null,"sourceOld":"  private void checkHitsOrdered(String spatialQ, String... ids) {\n    SpatialArgs args = this.argsParser.parse(spatialQ,ctx);\n    Query query = strategy.makeQuery(args);\n    SearchResults results = executeQuery(query, 100);\n    String[] resultIds = new String[results.numFound];\n    int i = 0;\n    for (SearchResult result : results.results) {\n      resultIds[i++] = result.document.get(\"id\");\n    }\n    assertArrayEquals(\"order matters\",ids, resultIds);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0415a016b37e58a017fed0a91234f733ab359971":["9c327517edf97b94827c01757fbf21e0ca625eb7"],"9c327517edf97b94827c01757fbf21e0ca625eb7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0415a016b37e58a017fed0a91234f733ab359971"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"28bce66b0b769a7827b1f4df30b3f50a2ed6c355":["0415a016b37e58a017fed0a91234f733ab359971"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["28bce66b0b769a7827b1f4df30b3f50a2ed6c355"]},"commit2Childs":{"0415a016b37e58a017fed0a91234f733ab359971":["fe33227f6805edab2036cbb80645cc4e2d1fa424","28bce66b0b769a7827b1f4df30b3f50a2ed6c355"],"9c327517edf97b94827c01757fbf21e0ca625eb7":["0415a016b37e58a017fed0a91234f733ab359971"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9c327517edf97b94827c01757fbf21e0ca625eb7","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"28bce66b0b769a7827b1f4df30b3f50a2ed6c355":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}