{"path":"src/java/org/apache/lucene/analysis/PorterStemmer#reset().mjava","commits":[{"id":"91109046a59c58ee0ee5d0d2767b08d1f30d6702","date":1000830588,"type":0,"author":"Jason van Zyl","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/PorterStemmer#reset().mjava","pathOld":"/dev/null","sourceNew":"  /** \n   * reset() resets the stemmer so it can stem another word.  If you invoke\n   * the stemmer by calling add(char) and then stem(), you must call reset()\n   * before starting another word.\n   */\n  public void reset() { i = 0; dirty = false; }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"550e5928a06fd85cb8c02ada3deabeb57181aa69","date":1071423332,"type":3,"author":"Erik Hatcher","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/PorterStemmer#reset().mjava","pathOld":"src/java/org/apache/lucene/analysis/PorterStemmer#reset().mjava","sourceNew":"  /**\n   * reset() resets the stemmer so it can stem another word.  If you invoke\n   * the stemmer by calling add(char) and then stem(), you must call reset()\n   * before starting another word.\n   */\n  public void reset() { i = 0; dirty = false; }\n\n","sourceOld":"  /** \n   * reset() resets the stemmer so it can stem another word.  If you invoke\n   * the stemmer by calling add(char) and then stem(), you must call reset()\n   * before starting another word.\n   */\n  public void reset() { i = 0; dirty = false; }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":4,"author":"Dawid Weiss","isMerge":false,"pathNew":"/dev/null","pathOld":"src/java/org/apache/lucene/analysis/PorterStemmer#reset().mjava","sourceNew":null,"sourceOld":"  /**\n   * reset() resets the stemmer so it can stem another word.  If you invoke\n   * the stemmer by calling add(char) and then stem(), you must call reset()\n   * before starting another word.\n   */\n  public void reset() { i = 0; dirty = false; }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"91109046a59c58ee0ee5d0d2767b08d1f30d6702":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"550e5928a06fd85cb8c02ada3deabeb57181aa69":["91109046a59c58ee0ee5d0d2767b08d1f30d6702"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["550e5928a06fd85cb8c02ada3deabeb57181aa69"]},"commit2Childs":{"91109046a59c58ee0ee5d0d2767b08d1f30d6702":["550e5928a06fd85cb8c02ada3deabeb57181aa69"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["91109046a59c58ee0ee5d0d2767b08d1f30d6702"],"550e5928a06fd85cb8c02ada3deabeb57181aa69":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}