{"path":"lucene/test-framework/src/java/org/apache/lucene/search/AssertingScorer#getChildren().mjava","commits":[{"id":"66ad19eb69be5720d673695d38a1f5a0fed70c06","date":1366664507,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/search/AssertingScorer#getChildren().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public Collection<ChildScorer> getChildren() {\n    return in.getChildren();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["ad158e4c28c7c33b7d3fd5c187a183d014d1f6ea"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ad158e4c28c7c33b7d3fd5c187a183d014d1f6ea","date":1390928346,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/search/AssertingScorer#getChildren().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/search/AssertingScorer#getChildren().mjava","sourceNew":"  @Override\n  public Collection<ChildScorer> getChildren() {\n    // We cannot hide that we hold a single child, else\n    // collectors (e.g. ToParentBlockJoinCollector) that\n    // need to walk the scorer tree will miss/skip the\n    // Scorer we wrap:\n    return Collections.singletonList(new ChildScorer(in, \"SHOULD\"));\n  }\n\n","sourceOld":"  @Override\n  public Collection<ChildScorer> getChildren() {\n    return in.getChildren();\n  }\n\n","bugFix":["66ad19eb69be5720d673695d38a1f5a0fed70c06"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"26ae065817023d886f3de2bc162e9e1ad71c7a02","date":1485164116,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/search/AssertingScorer#getChildren().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/search/AssertingScorer#getChildren().mjava","sourceNew":"  @Override\n  public Collection<ChildScorer> getChildren() {\n    // We cannot hide that we hold a single child, else\n    // collectors (e.g. ToParentBlockJoinCollector) that\n    // need to walk the scorer tree will miss/skip the\n    // Scorer we wrap:\n    assert iterating();\n    return Collections.singletonList(new ChildScorer(in, \"SHOULD\"));\n  }\n\n","sourceOld":"  @Override\n  public Collection<ChildScorer> getChildren() {\n    // We cannot hide that we hold a single child, else\n    // collectors (e.g. ToParentBlockJoinCollector) that\n    // need to walk the scorer tree will miss/skip the\n    // Scorer we wrap:\n    return Collections.singletonList(new ChildScorer(in, \"SHOULD\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d88f2d3d3107907144cec6455db31ccebd65475a","date":1485171003,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/search/AssertingScorer#getChildren().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/search/AssertingScorer#getChildren().mjava","sourceNew":"  @Override\n  public Collection<ChildScorer> getChildren() {\n    // We cannot hide that we hold a single child, else\n    // collectors (e.g. ToParentBlockJoinCollector) that\n    // need to walk the scorer tree will miss/skip the\n    // Scorer we wrap:\n    return Collections.singletonList(new ChildScorer(in, \"SHOULD\"));\n  }\n\n","sourceOld":"  @Override\n  public Collection<ChildScorer> getChildren() {\n    // We cannot hide that we hold a single child, else\n    // collectors (e.g. ToParentBlockJoinCollector) that\n    // need to walk the scorer tree will miss/skip the\n    // Scorer we wrap:\n    assert iterating();\n    return Collections.singletonList(new ChildScorer(in, \"SHOULD\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"285244982ce6aa163d1e60a707f0e6e121736ce5","date":1536055304,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/search/AssertingScorer#getChildren().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/search/AssertingScorer#getChildren().mjava","sourceNew":"  @Override\n  public Collection<ChildScorable> getChildren() {\n    // We cannot hide that we hold a single child, else\n    // collectors (e.g. ToParentBlockJoinCollector) that\n    // need to walk the scorer tree will miss/skip the\n    // Scorer we wrap:\n    return Collections.singletonList(new ChildScorable(in, \"SHOULD\"));\n  }\n\n","sourceOld":"  @Override\n  public Collection<ChildScorer> getChildren() {\n    // We cannot hide that we hold a single child, else\n    // collectors (e.g. ToParentBlockJoinCollector) that\n    // need to walk the scorer tree will miss/skip the\n    // Scorer we wrap:\n    return Collections.singletonList(new ChildScorer(in, \"SHOULD\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"66ad19eb69be5720d673695d38a1f5a0fed70c06":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"285244982ce6aa163d1e60a707f0e6e121736ce5":["d88f2d3d3107907144cec6455db31ccebd65475a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ad158e4c28c7c33b7d3fd5c187a183d014d1f6ea":["66ad19eb69be5720d673695d38a1f5a0fed70c06"],"d88f2d3d3107907144cec6455db31ccebd65475a":["26ae065817023d886f3de2bc162e9e1ad71c7a02"],"26ae065817023d886f3de2bc162e9e1ad71c7a02":["ad158e4c28c7c33b7d3fd5c187a183d014d1f6ea"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["285244982ce6aa163d1e60a707f0e6e121736ce5"]},"commit2Childs":{"66ad19eb69be5720d673695d38a1f5a0fed70c06":["ad158e4c28c7c33b7d3fd5c187a183d014d1f6ea"],"285244982ce6aa163d1e60a707f0e6e121736ce5":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["66ad19eb69be5720d673695d38a1f5a0fed70c06"],"ad158e4c28c7c33b7d3fd5c187a183d014d1f6ea":["26ae065817023d886f3de2bc162e9e1ad71c7a02"],"d88f2d3d3107907144cec6455db31ccebd65475a":["285244982ce6aa163d1e60a707f0e6e121736ce5"],"26ae065817023d886f3de2bc162e9e1ad71c7a02":["d88f2d3d3107907144cec6455db31ccebd65475a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}