{"path":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/DirDocMaker#getNextDocData().mjava","commits":[{"id":"105afd3f649c3faf4685df2d26cc3be1f7e51b2b","date":1183256350,"type":0,"author":"Grant Ingersoll","isMerge":false,"pathNew":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/DirDocMaker#getNextDocData().mjava","pathOld":"/dev/null","sourceNew":"  protected DocData getNextDocData() throws Exception {\n    File f = null;\n    String name = null;\n    synchronized (this) {\n      if (!inputFiles.hasNext()) { \n        // exhausted files, start a new round, unless forever set to false.\n        if (!forever) {\n          throw new NoMoreDataException();\n        }\n        inputFiles = new Iterator(dataDir);\n        iteration++;\n      }\n      f = (File) inputFiles.next();\n      // System.err.println(f);\n      name = f.getCanonicalPath()+\"_\"+iteration;\n    }\n    \n    BufferedReader reader = new BufferedReader(new FileReader(f));\n    String line = null;\n    //First line is the date, 3rd is the title, rest is body\n    String dateStr = reader.readLine();\n    reader.readLine();//skip an empty line\n    String title = reader.readLine();\n    reader.readLine();//skip an empty line\n    StringBuffer bodyBuf = new StringBuffer(1024);\n    while ((line = reader.readLine()) != null) {\n      bodyBuf.append(line).append(' ');\n    }\n    reader.close();\n    addBytes(f.length());\n    \n    Date date = dateFormat.parse(dateStr.trim()); \n    return new DocData(name, bodyBuf.toString(), title, null, date);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3c528d38c8d9b2452e932321931b11e7c19a96d5","date":1185353698,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/DirDocMaker#getNextDocData().mjava","pathOld":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/DirDocMaker#getNextDocData().mjava","sourceNew":"  protected DocData getNextDocData() throws Exception {\n    File f = null;\n    String name = null;\n    synchronized (this) {\n      if (!inputFiles.hasNext()) { \n        // exhausted files, start a new round, unless forever set to false.\n        if (!forever) {\n          throw new NoMoreDataException();\n        }\n        inputFiles = new Iterator(dataDir);\n        iteration++;\n      }\n      f = (File) inputFiles.next();\n      // System.err.println(f);\n      name = f.getCanonicalPath()+\"_\"+iteration;\n    }\n    \n    BufferedReader reader = new BufferedReader(new FileReader(f));\n    String line = null;\n    //First line is the date, 3rd is the title, rest is body\n    String dateStr = reader.readLine();\n    reader.readLine();//skip an empty line\n    String title = reader.readLine();\n    reader.readLine();//skip an empty line\n    StringBuffer bodyBuf = new StringBuffer(1024);\n    while ((line = reader.readLine()) != null) {\n      bodyBuf.append(line).append(' ');\n    }\n    reader.close();\n    addBytes(f.length());\n    \n    Date date = getDateFormat().parse(dateStr.trim()); \n    return new DocData(name, bodyBuf.toString(), title, null, date);\n  }\n\n","sourceOld":"  protected DocData getNextDocData() throws Exception {\n    File f = null;\n    String name = null;\n    synchronized (this) {\n      if (!inputFiles.hasNext()) { \n        // exhausted files, start a new round, unless forever set to false.\n        if (!forever) {\n          throw new NoMoreDataException();\n        }\n        inputFiles = new Iterator(dataDir);\n        iteration++;\n      }\n      f = (File) inputFiles.next();\n      // System.err.println(f);\n      name = f.getCanonicalPath()+\"_\"+iteration;\n    }\n    \n    BufferedReader reader = new BufferedReader(new FileReader(f));\n    String line = null;\n    //First line is the date, 3rd is the title, rest is body\n    String dateStr = reader.readLine();\n    reader.readLine();//skip an empty line\n    String title = reader.readLine();\n    reader.readLine();//skip an empty line\n    StringBuffer bodyBuf = new StringBuffer(1024);\n    while ((line = reader.readLine()) != null) {\n      bodyBuf.append(line).append(' ');\n    }\n    reader.close();\n    addBytes(f.length());\n    \n    Date date = dateFormat.parse(dateStr.trim()); \n    return new DocData(name, bodyBuf.toString(), title, null, date);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6944b9fa6d8ef96b83ae2d3a4332d03b3857355b","date":1245355139,"type":5,"author":"Mark Robert Miller","isMerge":false,"pathNew":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/DirContentSource#getNextDocData(DocData).mjava","pathOld":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/feeds/DirDocMaker#getNextDocData().mjava","sourceNew":"  public DocData getNextDocData(DocData docData) throws NoMoreDataException, IOException {\n    File f = null;\n    String name = null;\n    synchronized (this) {\n      if (!inputFiles.hasNext()) { \n        // exhausted files, start a new round, unless forever set to false.\n        if (!forever) {\n          throw new NoMoreDataException();\n        }\n        inputFiles = new Iterator(dataDir);\n        iteration++;\n      }\n      f = (File) inputFiles.next();\n      // System.err.println(f);\n      name = f.getCanonicalPath()+\"_\"+iteration;\n    }\n    \n    BufferedReader reader = new BufferedReader(new FileReader(f));\n    String line = null;\n    //First line is the date, 3rd is the title, rest is body\n    String dateStr = reader.readLine();\n    reader.readLine();//skip an empty line\n    String title = reader.readLine();\n    reader.readLine();//skip an empty line\n    StringBuffer bodyBuf = new StringBuffer(1024);\n    while ((line = reader.readLine()) != null) {\n      bodyBuf.append(line).append(' ');\n    }\n    reader.close();\n    addBytes(f.length());\n    \n    Date date = parseDate(dateStr);\n    \n    docData.clear();\n    docData.setName(name);\n    docData.setBody(bodyBuf.toString());\n    docData.setTitle(title);\n    docData.setDate(date);\n    return docData;\n  }\n\n","sourceOld":"  protected DocData getNextDocData() throws Exception {\n    File f = null;\n    String name = null;\n    synchronized (this) {\n      if (!inputFiles.hasNext()) { \n        // exhausted files, start a new round, unless forever set to false.\n        if (!forever) {\n          throw new NoMoreDataException();\n        }\n        inputFiles = new Iterator(dataDir);\n        iteration++;\n      }\n      f = (File) inputFiles.next();\n      // System.err.println(f);\n      name = f.getCanonicalPath()+\"_\"+iteration;\n    }\n    \n    BufferedReader reader = new BufferedReader(new FileReader(f));\n    String line = null;\n    //First line is the date, 3rd is the title, rest is body\n    String dateStr = reader.readLine();\n    reader.readLine();//skip an empty line\n    String title = reader.readLine();\n    reader.readLine();//skip an empty line\n    StringBuffer bodyBuf = new StringBuffer(1024);\n    while ((line = reader.readLine()) != null) {\n      bodyBuf.append(line).append(' ');\n    }\n    reader.close();\n    addBytes(f.length());\n    \n    Date date = getDateFormat().parse(dateStr.trim()); \n    return new DocData(name, bodyBuf.toString(), title, null, date);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3c528d38c8d9b2452e932321931b11e7c19a96d5":["105afd3f649c3faf4685df2d26cc3be1f7e51b2b"],"105afd3f649c3faf4685df2d26cc3be1f7e51b2b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"6944b9fa6d8ef96b83ae2d3a4332d03b3857355b":["3c528d38c8d9b2452e932321931b11e7c19a96d5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6944b9fa6d8ef96b83ae2d3a4332d03b3857355b"]},"commit2Childs":{"3c528d38c8d9b2452e932321931b11e7c19a96d5":["6944b9fa6d8ef96b83ae2d3a4332d03b3857355b"],"105afd3f649c3faf4685df2d26cc3be1f7e51b2b":["3c528d38c8d9b2452e932321931b11e7c19a96d5"],"6944b9fa6d8ef96b83ae2d3a4332d03b3857355b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["105afd3f649c3faf4685df2d26cc3be1f7e51b2b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}