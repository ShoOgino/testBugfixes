{"path":"src/java/org/apache/lucene/store/NativeFSLockFactory#clearLock(String).mjava","commits":[{"id":"41513cff78959d7ba78c45f8048f7c196f449f87","date":1168702834,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/store/NativeFSLockFactory#clearLock(String).mjava","pathOld":"/dev/null","sourceNew":"  public void clearLock(String lockName) throws IOException {\n    // Note that this isn't strictly required anymore\n    // because the existence of these files does not mean\n    // they are locked, but, still do this in case people\n    // really want to see the files go away:\n    if (lockDir.exists()) {\n      if (lockPrefix != null) {\n        lockName = lockPrefix + \"-n-\" + lockName;\n      }\n      File lockFile = new File(lockDir, lockName);\n      if (lockFile.exists() && !lockFile.delete()) {\n        throw new IOException(\"Cannot delete \" + lockFile);\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["245fee3e499fae1fc0c33a80a6dd979f9c5f49e2"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"245fee3e499fae1fc0c33a80a6dd979f9c5f49e2","date":1252016251,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/store/NativeFSLockFactory#clearLock(String).mjava","pathOld":"src/java/org/apache/lucene/store/NativeFSLockFactory#clearLock(String).mjava","sourceNew":"  public void clearLock(String lockName) throws IOException {\n    // Note that this isn't strictly required anymore\n    // because the existence of these files does not mean\n    // they are locked, but, still do this in case people\n    // really want to see the files go away:\n    if (lockDir.exists()) {\n      if (lockPrefix != null) {\n        lockName = lockPrefix + \"-\" + lockName;\n      }\n      File lockFile = new File(lockDir, lockName);\n      if (lockFile.exists() && !lockFile.delete()) {\n        throw new IOException(\"Cannot delete \" + lockFile);\n      }\n    }\n  }\n\n","sourceOld":"  public void clearLock(String lockName) throws IOException {\n    // Note that this isn't strictly required anymore\n    // because the existence of these files does not mean\n    // they are locked, but, still do this in case people\n    // really want to see the files go away:\n    if (lockDir.exists()) {\n      if (lockPrefix != null) {\n        lockName = lockPrefix + \"-n-\" + lockName;\n      }\n      File lockFile = new File(lockDir, lockName);\n      if (lockFile.exists() && !lockFile.delete()) {\n        throw new IOException(\"Cannot delete \" + lockFile);\n      }\n    }\n  }\n\n","bugFix":["41513cff78959d7ba78c45f8048f7c196f449f87"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8a9e385641d717e641408d8fbbc62be8fc766357","date":1256746606,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/store/NativeFSLockFactory#clearLock(String).mjava","pathOld":"src/java/org/apache/lucene/store/NativeFSLockFactory#clearLock(String).mjava","sourceNew":"  @Override\n  public void clearLock(String lockName) throws IOException {\n    // Note that this isn't strictly required anymore\n    // because the existence of these files does not mean\n    // they are locked, but, still do this in case people\n    // really want to see the files go away:\n    if (lockDir.exists()) {\n      if (lockPrefix != null) {\n        lockName = lockPrefix + \"-\" + lockName;\n      }\n      File lockFile = new File(lockDir, lockName);\n      if (lockFile.exists() && !lockFile.delete()) {\n        throw new IOException(\"Cannot delete \" + lockFile);\n      }\n    }\n  }\n\n","sourceOld":"  public void clearLock(String lockName) throws IOException {\n    // Note that this isn't strictly required anymore\n    // because the existence of these files does not mean\n    // they are locked, but, still do this in case people\n    // really want to see the files go away:\n    if (lockDir.exists()) {\n      if (lockPrefix != null) {\n        lockName = lockPrefix + \"-\" + lockName;\n      }\n      File lockFile = new File(lockDir, lockName);\n      if (lockFile.exists() && !lockFile.delete()) {\n        throw new IOException(\"Cannot delete \" + lockFile);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/store/NativeFSLockFactory#clearLock(String).mjava","pathOld":"src/java/org/apache/lucene/store/NativeFSLockFactory#clearLock(String).mjava","sourceNew":"  @Override\n  public void clearLock(String lockName) throws IOException {\n    // Note that this isn't strictly required anymore\n    // because the existence of these files does not mean\n    // they are locked, but, still do this in case people\n    // really want to see the files go away:\n    if (lockDir.exists()) {\n      if (lockPrefix != null) {\n        lockName = lockPrefix + \"-\" + lockName;\n      }\n      File lockFile = new File(lockDir, lockName);\n      if (lockFile.exists() && !lockFile.delete()) {\n        throw new IOException(\"Cannot delete \" + lockFile);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void clearLock(String lockName) throws IOException {\n    // Note that this isn't strictly required anymore\n    // because the existence of these files does not mean\n    // they are locked, but, still do this in case people\n    // really want to see the files go away:\n    if (lockDir.exists()) {\n      if (lockPrefix != null) {\n        lockName = lockPrefix + \"-\" + lockName;\n      }\n      File lockFile = new File(lockDir, lockName);\n      if (lockFile.exists() && !lockFile.delete()) {\n        throw new IOException(\"Cannot delete \" + lockFile);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"245fee3e499fae1fc0c33a80a6dd979f9c5f49e2":["41513cff78959d7ba78c45f8048f7c196f449f87"],"8a9e385641d717e641408d8fbbc62be8fc766357":["245fee3e499fae1fc0c33a80a6dd979f9c5f49e2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"41513cff78959d7ba78c45f8048f7c196f449f87":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["8a9e385641d717e641408d8fbbc62be8fc766357"]},"commit2Childs":{"245fee3e499fae1fc0c33a80a6dd979f9c5f49e2":["8a9e385641d717e641408d8fbbc62be8fc766357"],"8a9e385641d717e641408d8fbbc62be8fc766357":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["41513cff78959d7ba78c45f8048f7c196f449f87"],"41513cff78959d7ba78c45f8048f7c196f449f87":["245fee3e499fae1fc0c33a80a6dd979f9c5f49e2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}