{"path":"lucene/src/java/org/apache/lucene/codecs/lucene40/Lucene40NormsFormat.Lucene40NormsDocValuesConsumer#files(Directory,SegmentInfo,Set[String]).mjava","commits":[{"id":"f6e3376a314fcc2b31bc46d399c2ff23552b78d6","date":1325780477,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/codecs/lucene40/Lucene40NormsFormat.Lucene40NormsDocValuesConsumer#files(Directory,SegmentInfo,Set[String]).mjava","pathOld":"/dev/null","sourceNew":"    public static void files(Directory dir, SegmentInfo segmentInfo, Set<String> files) throws IOException {\n      FieldInfos fieldInfos = segmentInfo.getFieldInfos();\n      for (FieldInfo fieldInfo : fieldInfos) {\n        if (!fieldInfo.omitNorms && fieldInfo.isIndexed) {\n          files.add(IndexFileNames.segmentFileName(segmentInfo.name, NORMS_SEGMENT_SUFFIX, IndexFileNames.COMPOUND_FILE_EXTENSION));\n          files.add(IndexFileNames.segmentFileName(segmentInfo.name, NORMS_SEGMENT_SUFFIX, IndexFileNames.COMPOUND_FILE_ENTRIES_EXTENSION));\n          assert dir.fileExists(IndexFileNames.segmentFileName(segmentInfo.name, NORMS_SEGMENT_SUFFIX, IndexFileNames.COMPOUND_FILE_ENTRIES_EXTENSION)); \n          assert dir.fileExists(IndexFileNames.segmentFileName(segmentInfo.name, NORMS_SEGMENT_SUFFIX, IndexFileNames.COMPOUND_FILE_EXTENSION)); \n          break;\n        }\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["5cd83329117fbbcdc838fd98fc81909342f7b96b"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5cd83329117fbbcdc838fd98fc81909342f7b96b","date":1325798514,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/codecs/lucene40/Lucene40NormsFormat.Lucene40NormsDocValuesConsumer#files(Directory,SegmentInfo,Set[String]).mjava","pathOld":"lucene/src/java/org/apache/lucene/codecs/lucene40/Lucene40NormsFormat.Lucene40NormsDocValuesConsumer#files(Directory,SegmentInfo,Set[String]).mjava","sourceNew":"    public static void files(Directory dir, SegmentInfo segmentInfo, Set<String> files) throws IOException {\n      // see the comment in all the other codecs... its bogus that we do fileExists here, but its \n      // a harder problem since fieldinfos are never 'cleaned'\n      final String normsFileName = IndexFileNames.segmentFileName(segmentInfo.name, NORMS_SEGMENT_SUFFIX, IndexFileNames.COMPOUND_FILE_EXTENSION);\n      if (dir.fileExists(normsFileName)) {\n        final String normsEntriesFileName = IndexFileNames.segmentFileName(segmentInfo.name, NORMS_SEGMENT_SUFFIX, IndexFileNames.COMPOUND_FILE_ENTRIES_EXTENSION);\n        assert dir.fileExists(normsEntriesFileName);\n        files.add(normsFileName);\n        files.add(normsEntriesFileName);\n      }\n    }\n\n","sourceOld":"    public static void files(Directory dir, SegmentInfo segmentInfo, Set<String> files) throws IOException {\n      FieldInfos fieldInfos = segmentInfo.getFieldInfos();\n      for (FieldInfo fieldInfo : fieldInfos) {\n        if (!fieldInfo.omitNorms && fieldInfo.isIndexed) {\n          files.add(IndexFileNames.segmentFileName(segmentInfo.name, NORMS_SEGMENT_SUFFIX, IndexFileNames.COMPOUND_FILE_EXTENSION));\n          files.add(IndexFileNames.segmentFileName(segmentInfo.name, NORMS_SEGMENT_SUFFIX, IndexFileNames.COMPOUND_FILE_ENTRIES_EXTENSION));\n          assert dir.fileExists(IndexFileNames.segmentFileName(segmentInfo.name, NORMS_SEGMENT_SUFFIX, IndexFileNames.COMPOUND_FILE_ENTRIES_EXTENSION)); \n          assert dir.fileExists(IndexFileNames.segmentFileName(segmentInfo.name, NORMS_SEGMENT_SUFFIX, IndexFileNames.COMPOUND_FILE_EXTENSION)); \n          break;\n        }\n      }\n    }\n\n","bugFix":["f6e3376a314fcc2b31bc46d399c2ff23552b78d6"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9e8d5a6ffbfa3405d234a87c833741eabed98d13","date":1326725835,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/codecs/lucene40/Lucene40NormsFormat.Lucene40NormsDocValuesConsumer#files(Directory,SegmentInfo,Set[String]).mjava","pathOld":"lucene/src/java/org/apache/lucene/codecs/lucene40/Lucene40NormsFormat.Lucene40NormsDocValuesConsumer#files(Directory,SegmentInfo,Set[String]).mjava","sourceNew":"    public static void files(Directory dir, SegmentInfo segmentInfo, Set<String> files) throws IOException {\n      final String normsFileName = IndexFileNames.segmentFileName(segmentInfo.name, NORMS_SEGMENT_SUFFIX, IndexFileNames.COMPOUND_FILE_EXTENSION);\n      FieldInfos fieldInfos = segmentInfo.getFieldInfos();\n      for (FieldInfo fieldInfo : fieldInfos) {\n        if (fieldInfo.normsPresent()) {\n          final String normsEntriesFileName = IndexFileNames.segmentFileName(segmentInfo.name, NORMS_SEGMENT_SUFFIX, IndexFileNames.COMPOUND_FILE_ENTRIES_EXTENSION);\n          files.add(normsFileName);\n          files.add(normsEntriesFileName);\n          return;\n        }\n      }\n    }\n\n","sourceOld":"    public static void files(Directory dir, SegmentInfo segmentInfo, Set<String> files) throws IOException {\n      // see the comment in all the other codecs... its bogus that we do fileExists here, but its \n      // a harder problem since fieldinfos are never 'cleaned'\n      final String normsFileName = IndexFileNames.segmentFileName(segmentInfo.name, NORMS_SEGMENT_SUFFIX, IndexFileNames.COMPOUND_FILE_EXTENSION);\n      if (dir.fileExists(normsFileName)) {\n        final String normsEntriesFileName = IndexFileNames.segmentFileName(segmentInfo.name, NORMS_SEGMENT_SUFFIX, IndexFileNames.COMPOUND_FILE_ENTRIES_EXTENSION);\n        assert dir.fileExists(normsEntriesFileName);\n        files.add(normsFileName);\n        files.add(normsEntriesFileName);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"78977ccc47b451a8e645b77504e2ef0a05e4b1a3","date":1327846052,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/codecs/lucene40/Lucene40NormsFormat.Lucene40NormsDocValuesConsumer#files(SegmentInfo,Set[String]).mjava","pathOld":"lucene/src/java/org/apache/lucene/codecs/lucene40/Lucene40NormsFormat.Lucene40NormsDocValuesConsumer#files(Directory,SegmentInfo,Set[String]).mjava","sourceNew":"    public static void files(SegmentInfo segmentInfo, Set<String> files) throws IOException {\n      final String normsFileName = IndexFileNames.segmentFileName(segmentInfo.name, NORMS_SEGMENT_SUFFIX, IndexFileNames.COMPOUND_FILE_EXTENSION);\n      FieldInfos fieldInfos = segmentInfo.getFieldInfos();\n      for (FieldInfo fieldInfo : fieldInfos) {\n        if (fieldInfo.normsPresent()) {\n          final String normsEntriesFileName = IndexFileNames.segmentFileName(segmentInfo.name, NORMS_SEGMENT_SUFFIX, IndexFileNames.COMPOUND_FILE_ENTRIES_EXTENSION);\n          files.add(normsFileName);\n          files.add(normsEntriesFileName);\n          return;\n        }\n      }\n    }\n\n","sourceOld":"    public static void files(Directory dir, SegmentInfo segmentInfo, Set<String> files) throws IOException {\n      final String normsFileName = IndexFileNames.segmentFileName(segmentInfo.name, NORMS_SEGMENT_SUFFIX, IndexFileNames.COMPOUND_FILE_EXTENSION);\n      FieldInfos fieldInfos = segmentInfo.getFieldInfos();\n      for (FieldInfo fieldInfo : fieldInfos) {\n        if (fieldInfo.normsPresent()) {\n          final String normsEntriesFileName = IndexFileNames.segmentFileName(segmentInfo.name, NORMS_SEGMENT_SUFFIX, IndexFileNames.COMPOUND_FILE_ENTRIES_EXTENSION);\n          files.add(normsFileName);\n          files.add(normsEntriesFileName);\n          return;\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"296df632fd63421ea20756fa11ad36fbc6f4c8a9","date":1327957998,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/codecs/lucene40/Lucene40NormsFormat.Lucene40NormsDocValuesConsumer#files(SegmentInfo,Set[String]).mjava","pathOld":"lucene/src/java/org/apache/lucene/codecs/lucene40/Lucene40NormsFormat.Lucene40NormsDocValuesConsumer#files(Directory,SegmentInfo,Set[String]).mjava","sourceNew":"    public static void files(SegmentInfo segmentInfo, Set<String> files) throws IOException {\n      final String normsFileName = IndexFileNames.segmentFileName(segmentInfo.name, NORMS_SEGMENT_SUFFIX, IndexFileNames.COMPOUND_FILE_EXTENSION);\n      FieldInfos fieldInfos = segmentInfo.getFieldInfos();\n      for (FieldInfo fieldInfo : fieldInfos) {\n        if (fieldInfo.normsPresent()) {\n          final String normsEntriesFileName = IndexFileNames.segmentFileName(segmentInfo.name, NORMS_SEGMENT_SUFFIX, IndexFileNames.COMPOUND_FILE_ENTRIES_EXTENSION);\n          files.add(normsFileName);\n          files.add(normsEntriesFileName);\n          return;\n        }\n      }\n    }\n\n","sourceOld":"    public static void files(Directory dir, SegmentInfo segmentInfo, Set<String> files) throws IOException {\n      final String normsFileName = IndexFileNames.segmentFileName(segmentInfo.name, NORMS_SEGMENT_SUFFIX, IndexFileNames.COMPOUND_FILE_EXTENSION);\n      FieldInfos fieldInfos = segmentInfo.getFieldInfos();\n      for (FieldInfo fieldInfo : fieldInfos) {\n        if (fieldInfo.normsPresent()) {\n          final String normsEntriesFileName = IndexFileNames.segmentFileName(segmentInfo.name, NORMS_SEGMENT_SUFFIX, IndexFileNames.COMPOUND_FILE_ENTRIES_EXTENSION);\n          files.add(normsFileName);\n          files.add(normsEntriesFileName);\n          return;\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"410e066f093e407222d9681429d209084e783149","date":1327958394,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/codecs/lucene40/Lucene40NormsFormat.Lucene40NormsDocValuesConsumer#files(SegmentInfo,Set[String]).mjava","pathOld":"lucene/src/java/org/apache/lucene/codecs/lucene40/Lucene40NormsFormat.Lucene40NormsDocValuesConsumer#files(Directory,SegmentInfo,Set[String]).mjava","sourceNew":"    public static void files(SegmentInfo segmentInfo, Set<String> files) throws IOException {\n      final String normsFileName = IndexFileNames.segmentFileName(segmentInfo.name, NORMS_SEGMENT_SUFFIX, IndexFileNames.COMPOUND_FILE_EXTENSION);\n      FieldInfos fieldInfos = segmentInfo.getFieldInfos();\n      for (FieldInfo fieldInfo : fieldInfos) {\n        if (fieldInfo.normsPresent()) {\n          final String normsEntriesFileName = IndexFileNames.segmentFileName(segmentInfo.name, NORMS_SEGMENT_SUFFIX, IndexFileNames.COMPOUND_FILE_ENTRIES_EXTENSION);\n          files.add(normsFileName);\n          files.add(normsEntriesFileName);\n          return;\n        }\n      }\n    }\n\n","sourceOld":"    public static void files(Directory dir, SegmentInfo segmentInfo, Set<String> files) throws IOException {\n      final String normsFileName = IndexFileNames.segmentFileName(segmentInfo.name, NORMS_SEGMENT_SUFFIX, IndexFileNames.COMPOUND_FILE_EXTENSION);\n      FieldInfos fieldInfos = segmentInfo.getFieldInfos();\n      for (FieldInfo fieldInfo : fieldInfos) {\n        if (fieldInfo.normsPresent()) {\n          final String normsEntriesFileName = IndexFileNames.segmentFileName(segmentInfo.name, NORMS_SEGMENT_SUFFIX, IndexFileNames.COMPOUND_FILE_ENTRIES_EXTENSION);\n          files.add(normsFileName);\n          files.add(normsEntriesFileName);\n          return;\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9e8d5a6ffbfa3405d234a87c833741eabed98d13":["5cd83329117fbbcdc838fd98fc81909342f7b96b"],"410e066f093e407222d9681429d209084e783149":["9e8d5a6ffbfa3405d234a87c833741eabed98d13","296df632fd63421ea20756fa11ad36fbc6f4c8a9"],"5cd83329117fbbcdc838fd98fc81909342f7b96b":["f6e3376a314fcc2b31bc46d399c2ff23552b78d6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"78977ccc47b451a8e645b77504e2ef0a05e4b1a3":["9e8d5a6ffbfa3405d234a87c833741eabed98d13"],"f6e3376a314fcc2b31bc46d399c2ff23552b78d6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"296df632fd63421ea20756fa11ad36fbc6f4c8a9":["9e8d5a6ffbfa3405d234a87c833741eabed98d13","78977ccc47b451a8e645b77504e2ef0a05e4b1a3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["296df632fd63421ea20756fa11ad36fbc6f4c8a9"]},"commit2Childs":{"9e8d5a6ffbfa3405d234a87c833741eabed98d13":["410e066f093e407222d9681429d209084e783149","78977ccc47b451a8e645b77504e2ef0a05e4b1a3","296df632fd63421ea20756fa11ad36fbc6f4c8a9"],"410e066f093e407222d9681429d209084e783149":[],"5cd83329117fbbcdc838fd98fc81909342f7b96b":["9e8d5a6ffbfa3405d234a87c833741eabed98d13"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f6e3376a314fcc2b31bc46d399c2ff23552b78d6"],"78977ccc47b451a8e645b77504e2ef0a05e4b1a3":["296df632fd63421ea20756fa11ad36fbc6f4c8a9"],"296df632fd63421ea20756fa11ad36fbc6f4c8a9":["410e066f093e407222d9681429d209084e783149","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f6e3376a314fcc2b31bc46d399c2ff23552b78d6":["5cd83329117fbbcdc838fd98fc81909342f7b96b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["410e066f093e407222d9681429d209084e783149","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}