{"path":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestTypeTokenFilter#testPositons(TypeTokenFilter).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestTypeTokenFilter#testPositons(TypeTokenFilter).mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/core/TestTypeTokenFilter#testPositons(TypeTokenFilter).mjava","sourceNew":"  private void testPositons(TypeTokenFilter stpf) throws IOException {\n    TypeAttribute typeAtt = stpf.getAttribute(TypeAttribute.class);\n    CharTermAttribute termAttribute = stpf.getAttribute(CharTermAttribute.class);\n    PositionIncrementAttribute posIncrAtt = stpf.getAttribute(PositionIncrementAttribute.class);\n    stpf.reset();\n    boolean enablePositionIncrements = stpf.getEnablePositionIncrements();\n    while (stpf.incrementToken()) {\n      log(\"Token: \" + termAttribute.toString() + \": \" + typeAtt.type() + \" - \" + posIncrAtt.getPositionIncrement());\n      assertEquals(\"if position increment is enabled the positionIncrementAttribute value should be 3, otherwise 1\",\n          posIncrAtt.getPositionIncrement(), enablePositionIncrements ? 3 : 1);\n    }\n    stpf.end();\n    stpf.close();\n  }\n\n","sourceOld":"  private void testPositons(TypeTokenFilter stpf) throws IOException {\n    TypeAttribute typeAtt = stpf.getAttribute(TypeAttribute.class);\n    CharTermAttribute termAttribute = stpf.getAttribute(CharTermAttribute.class);\n    PositionIncrementAttribute posIncrAtt = stpf.getAttribute(PositionIncrementAttribute.class);\n    stpf.reset();\n    boolean enablePositionIncrements = stpf.getEnablePositionIncrements();\n    while (stpf.incrementToken()) {\n      log(\"Token: \" + termAttribute.toString() + \": \" + typeAtt.type() + \" - \" + posIncrAtt.getPositionIncrement());\n      assertEquals(\"if position increment is enabled the positionIncrementAttribute value should be 3, otherwise 1\",\n          posIncrAtt.getPositionIncrement(), enablePositionIncrements ? 3 : 1);\n    }\n    stpf.end();\n    stpf.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"192e49c0445803405b0bc0eebc8b758485480c21","date":1367699151,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestTypeTokenFilter#testPositons(TypeTokenFilter).mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestTypeTokenFilter#testPositons(TypeTokenFilter).mjava","sourceNew":"  private void testPositons(TypeTokenFilter stpf) throws IOException {\n    TypeAttribute typeAtt = stpf.getAttribute(TypeAttribute.class);\n    CharTermAttribute termAttribute = stpf.getAttribute(CharTermAttribute.class);\n    PositionIncrementAttribute posIncrAtt = stpf.getAttribute(PositionIncrementAttribute.class);\n    stpf.reset();\n    while (stpf.incrementToken()) {\n      log(\"Token: \" + termAttribute.toString() + \": \" + typeAtt.type() + \" - \" + posIncrAtt.getPositionIncrement());\n      assertEquals(\"if position increment is enabled the positionIncrementAttribute value should be 3, otherwise 1\",\n          posIncrAtt.getPositionIncrement(), 3);\n    }\n    stpf.end();\n    stpf.close();\n  }\n\n","sourceOld":"  private void testPositons(TypeTokenFilter stpf) throws IOException {\n    TypeAttribute typeAtt = stpf.getAttribute(TypeAttribute.class);\n    CharTermAttribute termAttribute = stpf.getAttribute(CharTermAttribute.class);\n    PositionIncrementAttribute posIncrAtt = stpf.getAttribute(PositionIncrementAttribute.class);\n    stpf.reset();\n    boolean enablePositionIncrements = stpf.getEnablePositionIncrements();\n    while (stpf.incrementToken()) {\n      log(\"Token: \" + termAttribute.toString() + \": \" + typeAtt.type() + \" - \" + posIncrAtt.getPositionIncrement());\n      assertEquals(\"if position increment is enabled the positionIncrementAttribute value should be 3, otherwise 1\",\n          posIncrAtt.getPositionIncrement(), enablePositionIncrements ? 3 : 1);\n    }\n    stpf.end();\n    stpf.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"192e49c0445803405b0bc0eebc8b758485480c21":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["192e49c0445803405b0bc0eebc8b758485480c21"]},"commit2Childs":{"192e49c0445803405b0bc0eebc8b758485480c21":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["192e49c0445803405b0bc0eebc8b758485480c21"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}