{"path":"contrib/queries/src/java/org/apache/lucene/search/trie/TrieUtils#addIndexedFields(Document,String,String,String[]).mjava","commits":[{"id":"d96d94e1c37d5c77edf3b5a3a8ee525ca98f50d0","date":1234549621,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/queries/src/java/org/apache/lucene/search/trie/TrieUtils#addIndexedFields(Document,String,String,String[]).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Expert: Indexes the full precision value only in the main field (for sorting), and indexes all other\n   * lower precision values in the <code>lowerPrecision</code> field.\n   * If you do not specify the same field name for the main and lower precision one,\n   * it is possible to sort the field using a <code>SortField</code> instance\n   * returned by {@link #getLongSortField} or {@link #getIntSortField}.\n   * <p>This method does not store the fields and saves no term frequency or norms\n   * (which are normally not needed for trie fields). If you want to additionally store\n   * the value, you can use the normal methods of {@link Document} to achive this, just specify\n   * <code>Field.Store.YES</code>, <code>Field.Index.NO</code> and the same main field name.\n   * <p>Examples:\n   * <pre>\n   *  addIndexedFields(doc, \"mydouble\", \"mydoubletrie\", trieCodeLong(doubleToSortableLong(1.414d), 4));\n   *  addIndexedFields(doc, \"mylong\", \"mylongtrie\", trieCodeLong(123456L, 4));\n   * </pre>\n   * @see #addIndexedFields(Document,String,String[])\n   **/\n  public static void addIndexedFields(Document doc, String field, String lowerPrecisionField, String[] trieCoded) {\n    addIndexedFields(doc, new String[]{field, lowerPrecisionField}, trieCoded);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c1b4c49e8cb0b92d10e3757eb85ffdbd5b675eb1","date":1239104855,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"contrib/queries/src/java/org/apache/lucene/search/trie/TrieUtils#addIndexedFields(Document,String,String,String[]).mjava","sourceNew":null,"sourceOld":"  /**\n   * Expert: Indexes the full precision value only in the main field (for sorting), and indexes all other\n   * lower precision values in the <code>lowerPrecision</code> field.\n   * If you do not specify the same field name for the main and lower precision one,\n   * it is possible to sort the field using a <code>SortField</code> instance\n   * returned by {@link #getLongSortField} or {@link #getIntSortField}.\n   * <p>This method does not store the fields and saves no term frequency or norms\n   * (which are normally not needed for trie fields). If you want to additionally store\n   * the value, you can use the normal methods of {@link Document} to achive this, just specify\n   * <code>Field.Store.YES</code>, <code>Field.Index.NO</code> and the same main field name.\n   * <p>Examples:\n   * <pre>\n   *  addIndexedFields(doc, \"mydouble\", \"mydoubletrie\", trieCodeLong(doubleToSortableLong(1.414d), 4));\n   *  addIndexedFields(doc, \"mylong\", \"mylongtrie\", trieCodeLong(123456L, 4));\n   * </pre>\n   * @see #addIndexedFields(Document,String,String[])\n   **/\n  public static void addIndexedFields(Document doc, String field, String lowerPrecisionField, String[] trieCoded) {\n    addIndexedFields(doc, new String[]{field, lowerPrecisionField}, trieCoded);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c1b4c49e8cb0b92d10e3757eb85ffdbd5b675eb1":["d96d94e1c37d5c77edf3b5a3a8ee525ca98f50d0"],"d96d94e1c37d5c77edf3b5a3a8ee525ca98f50d0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c1b4c49e8cb0b92d10e3757eb85ffdbd5b675eb1"]},"commit2Childs":{"c1b4c49e8cb0b92d10e3757eb85ffdbd5b675eb1":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d96d94e1c37d5c77edf3b5a3a8ee525ca98f50d0":["c1b4c49e8cb0b92d10e3757eb85ffdbd5b675eb1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d96d94e1c37d5c77edf3b5a3a8ee525ca98f50d0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}