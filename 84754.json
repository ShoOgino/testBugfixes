{"path":"solr/core/src/java/org/apache/solr/search/QueryParsing.StrParser#getInt().mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/QueryParsing.StrParser#getInt().mjava","pathOld":"solr/src/java/org/apache/solr/search/QueryParsing.StrParser#getInt().mjava","sourceNew":"    int getInt() throws ParseException {\n      eatws();\n      char[] arr = new char[end - pos];\n      int i;\n      for (i = 0; i < arr.length; i++) {\n        char ch = val.charAt(pos);\n        if ((ch >= '0' && ch <= '9')\n                || ch == '+' || ch == '-'\n                ) {\n          pos++;\n          arr[i] = ch;\n        } else {\n          break;\n        }\n      }\n\n      return Integer.parseInt(new String(arr, 0, i));\n    }\n\n","sourceOld":"    int getInt() throws ParseException {\n      eatws();\n      char[] arr = new char[end - pos];\n      int i;\n      for (i = 0; i < arr.length; i++) {\n        char ch = val.charAt(pos);\n        if ((ch >= '0' && ch <= '9')\n                || ch == '+' || ch == '-'\n                ) {\n          pos++;\n          arr[i] = ch;\n        } else {\n          break;\n        }\n      }\n\n      return Integer.parseInt(new String(arr, 0, i));\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/QueryParsing.StrParser#getInt().mjava","pathOld":"solr/src/java/org/apache/solr/search/QueryParsing.StrParser#getInt().mjava","sourceNew":"    int getInt() throws ParseException {\n      eatws();\n      char[] arr = new char[end - pos];\n      int i;\n      for (i = 0; i < arr.length; i++) {\n        char ch = val.charAt(pos);\n        if ((ch >= '0' && ch <= '9')\n                || ch == '+' || ch == '-'\n                ) {\n          pos++;\n          arr[i] = ch;\n        } else {\n          break;\n        }\n      }\n\n      return Integer.parseInt(new String(arr, 0, i));\n    }\n\n","sourceOld":"    int getInt() throws ParseException {\n      eatws();\n      char[] arr = new char[end - pos];\n      int i;\n      for (i = 0; i < arr.length; i++) {\n        char ch = val.charAt(pos);\n        if ((ch >= '0' && ch <= '9')\n                || ch == '+' || ch == '-'\n                ) {\n          pos++;\n          arr[i] = ch;\n        } else {\n          break;\n        }\n      }\n\n      return Integer.parseInt(new String(arr, 0, i));\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/QueryParsing.StrParser#getInt().mjava","pathOld":"solr/src/java/org/apache/solr/search/QueryParsing.StrParser#getInt().mjava","sourceNew":"    int getInt() throws ParseException {\n      eatws();\n      char[] arr = new char[end - pos];\n      int i;\n      for (i = 0; i < arr.length; i++) {\n        char ch = val.charAt(pos);\n        if ((ch >= '0' && ch <= '9')\n                || ch == '+' || ch == '-'\n                ) {\n          pos++;\n          arr[i] = ch;\n        } else {\n          break;\n        }\n      }\n\n      return Integer.parseInt(new String(arr, 0, i));\n    }\n\n","sourceOld":"    int getInt() throws ParseException {\n      eatws();\n      char[] arr = new char[end - pos];\n      int i;\n      for (i = 0; i < arr.length; i++) {\n        char ch = val.charAt(pos);\n        if ((ch >= '0' && ch <= '9')\n                || ch == '+' || ch == '-'\n                ) {\n          pos++;\n          arr[i] = ch;\n        } else {\n          break;\n        }\n      }\n\n      return Integer.parseInt(new String(arr, 0, i));\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4d3e8520fd031bab31fd0e4d480e55958bc45efe","date":1340901565,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/QueryParsing.StrParser#getInt().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/QueryParsing.StrParser#getInt().mjava","sourceNew":"    int getInt() {\n      eatws();\n      char[] arr = new char[end - pos];\n      int i;\n      for (i = 0; i < arr.length; i++) {\n        char ch = val.charAt(pos);\n        if ((ch >= '0' && ch <= '9')\n                || ch == '+' || ch == '-'\n                ) {\n          pos++;\n          arr[i] = ch;\n        } else {\n          break;\n        }\n      }\n\n      return Integer.parseInt(new String(arr, 0, i));\n    }\n\n","sourceOld":"    int getInt() throws ParseException {\n      eatws();\n      char[] arr = new char[end - pos];\n      int i;\n      for (i = 0; i < arr.length; i++) {\n        char ch = val.charAt(pos);\n        if ((ch >= '0' && ch <= '9')\n                || ch == '+' || ch == '-'\n                ) {\n          pos++;\n          arr[i] = ch;\n        } else {\n          break;\n        }\n      }\n\n      return Integer.parseInt(new String(arr, 0, i));\n    }\n\n","bugFix":["aa4607364a2fc156ffb717ddc21d860e466ac7fd"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/QueryParsing.StrParser#getInt().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/QueryParsing.StrParser#getInt().mjava","sourceNew":"    int getInt() {\n      eatws();\n      char[] arr = new char[end - pos];\n      int i;\n      for (i = 0; i < arr.length; i++) {\n        char ch = val.charAt(pos);\n        if ((ch >= '0' && ch <= '9')\n                || ch == '+' || ch == '-'\n                ) {\n          pos++;\n          arr[i] = ch;\n        } else {\n          break;\n        }\n      }\n\n      return Integer.parseInt(new String(arr, 0, i));\n    }\n\n","sourceOld":"    int getInt() throws ParseException {\n      eatws();\n      char[] arr = new char[end - pos];\n      int i;\n      for (i = 0; i < arr.length; i++) {\n        char ch = val.charAt(pos);\n        if ((ch >= '0' && ch <= '9')\n                || ch == '+' || ch == '-'\n                ) {\n          pos++;\n          arr[i] = ch;\n        } else {\n          break;\n        }\n      }\n\n      return Integer.parseInt(new String(arr, 0, i));\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ac53eb8ed1d40ceac7330e9dc2e5c258e8fc155d","date":1426480823,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/QueryParsing.StrParser#getInt().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/QueryParsing.StrParser#getInt().mjava","sourceNew":"    public int getInt() {\n      eatws();\n      char[] arr = new char[end - pos];\n      int i;\n      for (i = 0; i < arr.length; i++) {\n        char ch = val.charAt(pos);\n        if ((ch >= '0' && ch <= '9')\n                || ch == '+' || ch == '-'\n                ) {\n          pos++;\n          arr[i] = ch;\n        } else {\n          break;\n        }\n      }\n\n      return Integer.parseInt(new String(arr, 0, i));\n    }\n\n","sourceOld":"    int getInt() {\n      eatws();\n      char[] arr = new char[end - pos];\n      int i;\n      for (i = 0; i < arr.length; i++) {\n        char ch = val.charAt(pos);\n        if ((ch >= '0' && ch <= '9')\n                || ch == '+' || ch == '-'\n                ) {\n          pos++;\n          arr[i] = ch;\n        } else {\n          break;\n        }\n      }\n\n      return Integer.parseInt(new String(arr, 0, i));\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/QueryParsing.StrParser#getInt().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/QueryParsing.StrParser#getInt().mjava","sourceNew":"    public int getInt() {\n      eatws();\n      char[] arr = new char[end - pos];\n      int i;\n      for (i = 0; i < arr.length; i++) {\n        char ch = val.charAt(pos);\n        if ((ch >= '0' && ch <= '9')\n                || ch == '+' || ch == '-'\n                ) {\n          pos++;\n          arr[i] = ch;\n        } else {\n          break;\n        }\n      }\n\n      return Integer.parseInt(new String(arr, 0, i));\n    }\n\n","sourceOld":"    int getInt() {\n      eatws();\n      char[] arr = new char[end - pos];\n      int i;\n      for (i = 0; i < arr.length; i++) {\n        char ch = val.charAt(pos);\n        if ((ch >= '0' && ch <= '9')\n                || ch == '+' || ch == '-'\n                ) {\n          pos++;\n          arr[i] = ch;\n        } else {\n          break;\n        }\n      }\n\n      return Integer.parseInt(new String(arr, 0, i));\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"051c3069a96e986b8fa0435398a73a922ce85418","date":1447853599,"type":5,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/StrParser#getInt().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/QueryParsing.StrParser#getInt().mjava","sourceNew":"    public int getInt() {\n      eatws();\n      char[] arr = new char[end - pos];\n      int i;\n      for (i = 0; i < arr.length; i++) {\n        char ch = val.charAt(pos);\n        if ((ch >= '0' && ch <= '9')\n                || ch == '+' || ch == '-'\n                ) {\n          pos++;\n          arr[i] = ch;\n        } else {\n          break;\n        }\n      }\n\n      return Integer.parseInt(new String(arr, 0, i));\n    }\n\n","sourceOld":"    public int getInt() {\n      eatws();\n      char[] arr = new char[end - pos];\n      int i;\n      for (i = 0; i < arr.length; i++) {\n        char ch = val.charAt(pos);\n        if ((ch >= '0' && ch <= '9')\n                || ch == '+' || ch == '-'\n                ) {\n          pos++;\n          arr[i] = ch;\n        } else {\n          break;\n        }\n      }\n\n      return Integer.parseInt(new String(arr, 0, i));\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["4d3e8520fd031bab31fd0e4d480e55958bc45efe","ac53eb8ed1d40ceac7330e9dc2e5c258e8fc155d"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["c26f00b574427b55127e869b935845554afde1fa","4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"051c3069a96e986b8fa0435398a73a922ce85418":["ac53eb8ed1d40ceac7330e9dc2e5c258e8fc155d"],"ac53eb8ed1d40ceac7330e9dc2e5c258e8fc155d":["4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4d3e8520fd031bab31fd0e4d480e55958bc45efe":["c26f00b574427b55127e869b935845554afde1fa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["051c3069a96e986b8fa0435398a73a922ce85418"]},"commit2Childs":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["fe33227f6805edab2036cbb80645cc4e2d1fa424","4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"051c3069a96e986b8fa0435398a73a922ce85418":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ac53eb8ed1d40ceac7330e9dc2e5c258e8fc155d":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","051c3069a96e986b8fa0435398a73a922ce85418"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"4d3e8520fd031bab31fd0e4d480e55958bc45efe":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","fe33227f6805edab2036cbb80645cc4e2d1fa424","ac53eb8ed1d40ceac7330e9dc2e5c258e8fc155d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","fe33227f6805edab2036cbb80645cc4e2d1fa424","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}