{"path":"solr/core/src/java/org/apache/solr/servlet/LoadAdminUiServlet#doGet(HttpServletRequest,HttpServletResponse).mjava","commits":[{"id":"0522cfff00d3b7d3e18129f5658b6e0304b7bc4b","date":1331053459,"type":0,"author":"Ryan McKinley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/servlet/LoadAdminUiServlet#doGet(HttpServletRequest,HttpServletResponse).mjava","pathOld":"/dev/null","sourceNew":"  @Override\r\n  public void doGet(HttpServletRequest request,\r\n                    HttpServletResponse response)\r\n      throws IOException, ServletException {\r\n    response.setCharacterEncoding(\"UTF-8\");\r\n    response.setContentType(\"text/html\");\r\n\r\n    PrintWriter out = response.getWriter();\r\n    File f = new File(getServletContext().getRealPath(\"admin.html\"));\r\n    if(f.exists()) {\r\n      // This attribute is set by the SolrDispatchFilter\r\n      CoreContainer cores = (CoreContainer) request.getAttribute(\"org.apache.solr.CoreContainer\");\r\n\r\n      String html = IOUtils.toString(new FileInputStream(f), \"UTF-8\");\r\n      \r\n      String[] search = new String[] { \r\n          \"${contextPath}\", \r\n          \"${adminPath}\" \r\n      };\r\n      String[] replace = new String[] {\r\n          request.getContextPath(),\r\n          cores.getAdminPath()\r\n      };\r\n      \r\n      out.println( StringUtils.replaceEach(html, search, replace) );\r\n    }\r\n    else {\r\n      out.println(\"solr\");\r\n    }\r\n  }\r\n\n","sourceOld":null,"bugFix":null,"bugIntro":["fd940dd552b23de1657d708a91e719fbeef33357"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","date":1331075828,"type":0,"author":"Ryan McKinley","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/servlet/LoadAdminUiServlet#doGet(HttpServletRequest,HttpServletResponse).mjava","pathOld":"/dev/null","sourceNew":"  @Override\r\n  public void doGet(HttpServletRequest request,\r\n                    HttpServletResponse response)\r\n      throws IOException, ServletException {\r\n    response.setCharacterEncoding(\"UTF-8\");\r\n    response.setContentType(\"text/html\");\r\n\r\n    PrintWriter out = response.getWriter();\r\n    File f = new File(getServletContext().getRealPath(\"admin.html\"));\r\n    if(f.exists()) {\r\n      // This attribute is set by the SolrDispatchFilter\r\n      CoreContainer cores = (CoreContainer) request.getAttribute(\"org.apache.solr.CoreContainer\");\r\n\r\n      String html = IOUtils.toString(new FileInputStream(f), \"UTF-8\");\r\n      \r\n      String[] search = new String[] { \r\n          \"${contextPath}\", \r\n          \"${adminPath}\" \r\n      };\r\n      String[] replace = new String[] {\r\n          request.getContextPath(),\r\n          cores.getAdminPath()\r\n      };\r\n      \r\n      out.println( StringUtils.replaceEach(html, search, replace) );\r\n    }\r\n    else {\r\n      out.println(\"solr\");\r\n    }\r\n  }\r\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fd940dd552b23de1657d708a91e719fbeef33357","date":1331756982,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/servlet/LoadAdminUiServlet#doGet(HttpServletRequest,HttpServletResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/servlet/LoadAdminUiServlet#doGet(HttpServletRequest,HttpServletResponse).mjava","sourceNew":"  @Override\r\n  public void doGet(HttpServletRequest request,\r\n                    HttpServletResponse response)\r\n      throws IOException, ServletException {\r\n    response.setCharacterEncoding(\"UTF-8\");\r\n    response.setContentType(\"text/html\");\r\n\r\n    PrintWriter out = response.getWriter();\r\n    InputStream in = getServletContext().getResourceAsStream(\"/admin.html\");\r\n    if(in != null) {\r\n      try {\r\n        // This attribute is set by the SolrDispatchFilter\r\n        CoreContainer cores = (CoreContainer) request.getAttribute(\"org.apache.solr.CoreContainer\");\r\n\r\n        String html = IOUtils.toString(in, \"UTF-8\");\r\n\r\n        String[] search = new String[] { \r\n            \"${contextPath}\", \r\n            \"${adminPath}\" \r\n        };\r\n        String[] replace = new String[] {\r\n            StringEscapeUtils.escapeJavaScript(request.getContextPath()),\r\n            StringEscapeUtils.escapeJavaScript(cores.getAdminPath())\r\n        };\r\n        \r\n        out.println( StringUtils.replaceEach(html, search, replace) );\r\n      } finally {\r\n        IOUtils.closeQuietly(in);\r\n      }\r\n    } else {\r\n      out.println(\"solr\");\r\n    }\r\n  }\r\n\n","sourceOld":"  @Override\r\n  public void doGet(HttpServletRequest request,\r\n                    HttpServletResponse response)\r\n      throws IOException, ServletException {\r\n    response.setCharacterEncoding(\"UTF-8\");\r\n    response.setContentType(\"text/html\");\r\n\r\n    PrintWriter out = response.getWriter();\r\n    File f = new File(getServletContext().getRealPath(\"admin.html\"));\r\n    if(f.exists()) {\r\n      // This attribute is set by the SolrDispatchFilter\r\n      CoreContainer cores = (CoreContainer) request.getAttribute(\"org.apache.solr.CoreContainer\");\r\n\r\n      String html = IOUtils.toString(new FileInputStream(f), \"UTF-8\");\r\n      \r\n      String[] search = new String[] { \r\n          \"${contextPath}\", \r\n          \"${adminPath}\" \r\n      };\r\n      String[] replace = new String[] {\r\n          request.getContextPath(),\r\n          cores.getAdminPath()\r\n      };\r\n      \r\n      out.println( StringUtils.replaceEach(html, search, replace) );\r\n    }\r\n    else {\r\n      out.println(\"solr\");\r\n    }\r\n  }\r\n\n","bugFix":["0522cfff00d3b7d3e18129f5658b6e0304b7bc4b"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5a002afd8b1e0d1bbf0debb2ff740b5e77ed8b23","date":1332766738,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/servlet/LoadAdminUiServlet#doGet(HttpServletRequest,HttpServletResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/servlet/LoadAdminUiServlet#doGet(HttpServletRequest,HttpServletResponse).mjava","sourceNew":"  @Override\n  public void doGet(HttpServletRequest request,\n                    HttpServletResponse response)\n      throws IOException, ServletException {\n    response.setCharacterEncoding(\"UTF-8\");\n    response.setContentType(\"text/html\");\n\n    PrintWriter out = response.getWriter();\n    InputStream in = getServletContext().getResourceAsStream(\"/admin.html\");\n    if(in != null) {\n      try {\n        // This attribute is set by the SolrDispatchFilter\n        CoreContainer cores = (CoreContainer) request.getAttribute(\"org.apache.solr.CoreContainer\");\n\n        String html = IOUtils.toString(in, \"UTF-8\");\n\n        String[] search = new String[] { \n            \"${contextPath}\", \n            \"${adminPath}\" \n        };\n        String[] replace = new String[] {\n            StringEscapeUtils.escapeJavaScript(request.getContextPath()),\n            StringEscapeUtils.escapeJavaScript(cores.getAdminPath())\n        };\n        \n        out.println( StringUtils.replaceEach(html, search, replace) );\n      } finally {\n        IOUtils.closeQuietly(in);\n      }\n    } else {\n      out.println(\"solr\");\n    }\n  }\n\n","sourceOld":"  @Override\r\n  public void doGet(HttpServletRequest request,\r\n                    HttpServletResponse response)\r\n      throws IOException, ServletException {\r\n    response.setCharacterEncoding(\"UTF-8\");\r\n    response.setContentType(\"text/html\");\r\n\r\n    PrintWriter out = response.getWriter();\r\n    InputStream in = getServletContext().getResourceAsStream(\"/admin.html\");\r\n    if(in != null) {\r\n      try {\r\n        // This attribute is set by the SolrDispatchFilter\r\n        CoreContainer cores = (CoreContainer) request.getAttribute(\"org.apache.solr.CoreContainer\");\r\n\r\n        String html = IOUtils.toString(in, \"UTF-8\");\r\n\r\n        String[] search = new String[] { \r\n            \"${contextPath}\", \r\n            \"${adminPath}\" \r\n        };\r\n        String[] replace = new String[] {\r\n            StringEscapeUtils.escapeJavaScript(request.getContextPath()),\r\n            StringEscapeUtils.escapeJavaScript(cores.getAdminPath())\r\n        };\r\n        \r\n        out.println( StringUtils.replaceEach(html, search, replace) );\r\n      } finally {\r\n        IOUtils.closeQuietly(in);\r\n      }\r\n    } else {\r\n      out.println(\"solr\");\r\n    }\r\n  }\r\n\n","bugFix":null,"bugIntro":["4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4d3e8520fd031bab31fd0e4d480e55958bc45efe","date":1340901565,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/servlet/LoadAdminUiServlet#doGet(HttpServletRequest,HttpServletResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/servlet/LoadAdminUiServlet#doGet(HttpServletRequest,HttpServletResponse).mjava","sourceNew":"  @Override\n  public void doGet(HttpServletRequest request,\n                    HttpServletResponse response)\n      throws IOException {\n    response.setCharacterEncoding(\"UTF-8\");\n    response.setContentType(\"text/html\");\n\n    PrintWriter out = response.getWriter();\n    InputStream in = getServletContext().getResourceAsStream(\"/admin.html\");\n    if(in != null) {\n      try {\n        // This attribute is set by the SolrDispatchFilter\n        CoreContainer cores = (CoreContainer) request.getAttribute(\"org.apache.solr.CoreContainer\");\n\n        String html = IOUtils.toString(in, \"UTF-8\");\n\n        String[] search = new String[] { \n            \"${contextPath}\", \n            \"${adminPath}\" \n        };\n        String[] replace = new String[] {\n            StringEscapeUtils.escapeJavaScript(request.getContextPath()),\n            StringEscapeUtils.escapeJavaScript(cores.getAdminPath())\n        };\n        \n        out.println( StringUtils.replaceEach(html, search, replace) );\n      } finally {\n        IOUtils.closeQuietly(in);\n      }\n    } else {\n      out.println(\"solr\");\n    }\n  }\n\n","sourceOld":"  @Override\n  public void doGet(HttpServletRequest request,\n                    HttpServletResponse response)\n      throws IOException, ServletException {\n    response.setCharacterEncoding(\"UTF-8\");\n    response.setContentType(\"text/html\");\n\n    PrintWriter out = response.getWriter();\n    InputStream in = getServletContext().getResourceAsStream(\"/admin.html\");\n    if(in != null) {\n      try {\n        // This attribute is set by the SolrDispatchFilter\n        CoreContainer cores = (CoreContainer) request.getAttribute(\"org.apache.solr.CoreContainer\");\n\n        String html = IOUtils.toString(in, \"UTF-8\");\n\n        String[] search = new String[] { \n            \"${contextPath}\", \n            \"${adminPath}\" \n        };\n        String[] replace = new String[] {\n            StringEscapeUtils.escapeJavaScript(request.getContextPath()),\n            StringEscapeUtils.escapeJavaScript(cores.getAdminPath())\n        };\n        \n        out.println( StringUtils.replaceEach(html, search, replace) );\n      } finally {\n        IOUtils.closeQuietly(in);\n      }\n    } else {\n      out.println(\"solr\");\n    }\n  }\n\n","bugFix":["5a002afd8b1e0d1bbf0debb2ff740b5e77ed8b23"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/servlet/LoadAdminUiServlet#doGet(HttpServletRequest,HttpServletResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/servlet/LoadAdminUiServlet#doGet(HttpServletRequest,HttpServletResponse).mjava","sourceNew":"  @Override\n  public void doGet(HttpServletRequest request,\n                    HttpServletResponse response)\n      throws IOException {\n    response.setCharacterEncoding(\"UTF-8\");\n    response.setContentType(\"text/html\");\n\n    PrintWriter out = response.getWriter();\n    InputStream in = getServletContext().getResourceAsStream(\"/admin.html\");\n    if(in != null) {\n      try {\n        // This attribute is set by the SolrDispatchFilter\n        CoreContainer cores = (CoreContainer) request.getAttribute(\"org.apache.solr.CoreContainer\");\n\n        String html = IOUtils.toString(in, \"UTF-8\");\n\n        String[] search = new String[] { \n            \"${contextPath}\", \n            \"${adminPath}\" \n        };\n        String[] replace = new String[] {\n            StringEscapeUtils.escapeJavaScript(request.getContextPath()),\n            StringEscapeUtils.escapeJavaScript(cores.getAdminPath())\n        };\n        \n        out.println( StringUtils.replaceEach(html, search, replace) );\n      } finally {\n        IOUtils.closeQuietly(in);\n      }\n    } else {\n      out.println(\"solr\");\n    }\n  }\n\n","sourceOld":"  @Override\n  public void doGet(HttpServletRequest request,\n                    HttpServletResponse response)\n      throws IOException, ServletException {\n    response.setCharacterEncoding(\"UTF-8\");\n    response.setContentType(\"text/html\");\n\n    PrintWriter out = response.getWriter();\n    InputStream in = getServletContext().getResourceAsStream(\"/admin.html\");\n    if(in != null) {\n      try {\n        // This attribute is set by the SolrDispatchFilter\n        CoreContainer cores = (CoreContainer) request.getAttribute(\"org.apache.solr.CoreContainer\");\n\n        String html = IOUtils.toString(in, \"UTF-8\");\n\n        String[] search = new String[] { \n            \"${contextPath}\", \n            \"${adminPath}\" \n        };\n        String[] replace = new String[] {\n            StringEscapeUtils.escapeJavaScript(request.getContextPath()),\n            StringEscapeUtils.escapeJavaScript(cores.getAdminPath())\n        };\n        \n        out.println( StringUtils.replaceEach(html, search, replace) );\n      } finally {\n        IOUtils.closeQuietly(in);\n      }\n    } else {\n      out.println(\"solr\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7d0565444d6381434fbff66cecf07da249f2bb4","date":1357484111,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/servlet/LoadAdminUiServlet#doGet(HttpServletRequest,HttpServletResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/servlet/LoadAdminUiServlet#doGet(HttpServletRequest,HttpServletResponse).mjava","sourceNew":"  @Override\n  public void doGet(HttpServletRequest request,\n                    HttpServletResponse response)\n      throws IOException {\n    // This attribute is set by the SolrDispatchFilter\n    CoreContainer cores = (CoreContainer) request.getAttribute(\"org.apache.solr.CoreContainer\");\n\n    InputStream in = getServletContext().getResourceAsStream(\"/admin.html\");\n    if(in != null && cores != null) {\n      try {\n        response.setCharacterEncoding(\"UTF-8\");\n        response.setContentType(\"text/html\");\n        Writer out = new OutputStreamWriter(response.getOutputStream(), \"UTF-8\");\n\n        String html = IOUtils.toString(in, \"UTF-8\");\n\n        String[] search = new String[] { \n            \"${contextPath}\", \n            \"${adminPath}\" \n        };\n        String[] replace = new String[] {\n            StringEscapeUtils.escapeJavaScript(request.getContextPath()),\n            StringEscapeUtils.escapeJavaScript(cores.getAdminPath())\n        };\n        \n        out.write( StringUtils.replaceEach(html, search, replace) );\n        out.flush();\n      } finally {\n        IOUtils.closeQuietly(in);\n      }\n    } else {\n      response.sendError(404);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void doGet(HttpServletRequest request,\n                    HttpServletResponse response)\n      throws IOException {\n    response.setCharacterEncoding(\"UTF-8\");\n    response.setContentType(\"text/html\");\n\n    PrintWriter out = response.getWriter();\n    InputStream in = getServletContext().getResourceAsStream(\"/admin.html\");\n    if(in != null) {\n      try {\n        // This attribute is set by the SolrDispatchFilter\n        CoreContainer cores = (CoreContainer) request.getAttribute(\"org.apache.solr.CoreContainer\");\n\n        String html = IOUtils.toString(in, \"UTF-8\");\n\n        String[] search = new String[] { \n            \"${contextPath}\", \n            \"${adminPath}\" \n        };\n        String[] replace = new String[] {\n            StringEscapeUtils.escapeJavaScript(request.getContextPath()),\n            StringEscapeUtils.escapeJavaScript(cores.getAdminPath())\n        };\n        \n        out.println( StringUtils.replaceEach(html, search, replace) );\n      } finally {\n        IOUtils.closeQuietly(in);\n      }\n    } else {\n      out.println(\"solr\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/servlet/LoadAdminUiServlet#doGet(HttpServletRequest,HttpServletResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/servlet/LoadAdminUiServlet#doGet(HttpServletRequest,HttpServletResponse).mjava","sourceNew":"  @Override\n  public void doGet(HttpServletRequest request,\n                    HttpServletResponse response)\n      throws IOException {\n    // This attribute is set by the SolrDispatchFilter\n    CoreContainer cores = (CoreContainer) request.getAttribute(\"org.apache.solr.CoreContainer\");\n\n    InputStream in = getServletContext().getResourceAsStream(\"/admin.html\");\n    if(in != null && cores != null) {\n      try {\n        response.setCharacterEncoding(\"UTF-8\");\n        response.setContentType(\"text/html\");\n        Writer out = new OutputStreamWriter(response.getOutputStream(), \"UTF-8\");\n\n        String html = IOUtils.toString(in, \"UTF-8\");\n\n        String[] search = new String[] { \n            \"${contextPath}\", \n            \"${adminPath}\" \n        };\n        String[] replace = new String[] {\n            StringEscapeUtils.escapeJavaScript(request.getContextPath()),\n            StringEscapeUtils.escapeJavaScript(cores.getAdminPath())\n        };\n        \n        out.write( StringUtils.replaceEach(html, search, replace) );\n        out.flush();\n      } finally {\n        IOUtils.closeQuietly(in);\n      }\n    } else {\n      response.sendError(404);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void doGet(HttpServletRequest request,\n                    HttpServletResponse response)\n      throws IOException {\n    response.setCharacterEncoding(\"UTF-8\");\n    response.setContentType(\"text/html\");\n\n    PrintWriter out = response.getWriter();\n    InputStream in = getServletContext().getResourceAsStream(\"/admin.html\");\n    if(in != null) {\n      try {\n        // This attribute is set by the SolrDispatchFilter\n        CoreContainer cores = (CoreContainer) request.getAttribute(\"org.apache.solr.CoreContainer\");\n\n        String html = IOUtils.toString(in, \"UTF-8\");\n\n        String[] search = new String[] { \n            \"${contextPath}\", \n            \"${adminPath}\" \n        };\n        String[] replace = new String[] {\n            StringEscapeUtils.escapeJavaScript(request.getContextPath()),\n            StringEscapeUtils.escapeJavaScript(cores.getAdminPath())\n        };\n        \n        out.println( StringUtils.replaceEach(html, search, replace) );\n      } finally {\n        IOUtils.closeQuietly(in);\n      }\n    } else {\n      out.println(\"solr\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"800d125aadb2b3d942ca4494c25c82a58a195bc3","date":1363379761,"type":4,"author":"Stefan Matheis","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/servlet/LoadAdminUiServlet#doGet(HttpServletRequest,HttpServletResponse).mjava","sourceNew":null,"sourceOld":"  @Override\n  public void doGet(HttpServletRequest request,\n                    HttpServletResponse response)\n      throws IOException {\n    // This attribute is set by the SolrDispatchFilter\n    CoreContainer cores = (CoreContainer) request.getAttribute(\"org.apache.solr.CoreContainer\");\n\n    InputStream in = getServletContext().getResourceAsStream(\"/admin.html\");\n    if(in != null && cores != null) {\n      try {\n        response.setCharacterEncoding(\"UTF-8\");\n        response.setContentType(\"text/html\");\n        Writer out = new OutputStreamWriter(response.getOutputStream(), \"UTF-8\");\n\n        String html = IOUtils.toString(in, \"UTF-8\");\n\n        String[] search = new String[] { \n            \"${contextPath}\", \n            \"${adminPath}\" \n        };\n        String[] replace = new String[] {\n            StringEscapeUtils.escapeJavaScript(request.getContextPath()),\n            StringEscapeUtils.escapeJavaScript(cores.getAdminPath())\n        };\n        \n        out.write( StringUtils.replaceEach(html, search, replace) );\n        out.flush();\n      } finally {\n        IOUtils.closeQuietly(in);\n      }\n    } else {\n      response.sendError(404);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"968a08cd5a072d8a1e6b4a42d7d3bb0b79d37e10","date":1363383216,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/servlet/LoadAdminUiServlet#doGet(HttpServletRequest,HttpServletResponse).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void doGet(HttpServletRequest request,\n                    HttpServletResponse response)\n      throws IOException {\n    // This attribute is set by the SolrDispatchFilter\n    CoreContainer cores = (CoreContainer) request.getAttribute(\"org.apache.solr.CoreContainer\");\n\n    InputStream in = getServletContext().getResourceAsStream(\"/admin.html\");\n    if(in != null && cores != null) {\n      try {\n        response.setCharacterEncoding(\"UTF-8\");\n        response.setContentType(\"text/html\");\n        Writer out = new OutputStreamWriter(response.getOutputStream(), \"UTF-8\");\n\n        String html = IOUtils.toString(in, \"UTF-8\");\n        Package pack = SolrCore.class.getPackage();\n\n        String[] search = new String[] { \n            \"${contextPath}\", \n            \"${adminPath}\",\n            \"${version}\" \n        };\n        String[] replace = new String[] {\n            StringEscapeUtils.escapeJavaScript(request.getContextPath()),\n            StringEscapeUtils.escapeJavaScript(cores.getAdminPath()),\n            StringEscapeUtils.escapeJavaScript(pack.getSpecificationVersion())\n        };\n        \n        out.write( StringUtils.replaceEach(html, search, replace) );\n        out.flush();\n      } finally {\n        IOUtils.closeQuietly(in);\n      }\n    } else {\n      response.sendError(404);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["8d83f5899efad0cd17136a45aef2bd8dea5d31e1","26ab43e1a461b9c1d9db0739ee0eb5caed8bc521"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7d89d7e4e5101347833eea558851bf4209218619","date":1396265641,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/servlet/LoadAdminUiServlet#doGet(HttpServletRequest,HttpServletResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/servlet/LoadAdminUiServlet#doGet(HttpServletRequest,HttpServletResponse).mjava","sourceNew":"  @Override\n  public void doGet(HttpServletRequest request,\n                    HttpServletResponse response)\n      throws IOException {\n    // This attribute is set by the SolrDispatchFilter\n    CoreContainer cores = (CoreContainer) request.getAttribute(\"org.apache.solr.CoreContainer\");\n\n    InputStream in = getServletContext().getResourceAsStream(\"/admin.html\");\n    if(in != null && cores != null) {\n      try {\n        response.setCharacterEncoding(\"UTF-8\");\n        response.setContentType(\"text/html\");\n        Writer out = new OutputStreamWriter(response.getOutputStream(), StandardCharsets.UTF_8);\n\n        String html = IOUtils.toString(in, \"UTF-8\");\n        Package pack = SolrCore.class.getPackage();\n\n        String[] search = new String[] { \n            \"${contextPath}\", \n            \"${adminPath}\",\n            \"${version}\" \n        };\n        String[] replace = new String[] {\n            StringEscapeUtils.escapeJavaScript(request.getContextPath()),\n            StringEscapeUtils.escapeJavaScript(cores.getAdminPath()),\n            StringEscapeUtils.escapeJavaScript(pack.getSpecificationVersion())\n        };\n        \n        out.write( StringUtils.replaceEach(html, search, replace) );\n        out.flush();\n      } finally {\n        IOUtils.closeQuietly(in);\n      }\n    } else {\n      response.sendError(404);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void doGet(HttpServletRequest request,\n                    HttpServletResponse response)\n      throws IOException {\n    // This attribute is set by the SolrDispatchFilter\n    CoreContainer cores = (CoreContainer) request.getAttribute(\"org.apache.solr.CoreContainer\");\n\n    InputStream in = getServletContext().getResourceAsStream(\"/admin.html\");\n    if(in != null && cores != null) {\n      try {\n        response.setCharacterEncoding(\"UTF-8\");\n        response.setContentType(\"text/html\");\n        Writer out = new OutputStreamWriter(response.getOutputStream(), \"UTF-8\");\n\n        String html = IOUtils.toString(in, \"UTF-8\");\n        Package pack = SolrCore.class.getPackage();\n\n        String[] search = new String[] { \n            \"${contextPath}\", \n            \"${adminPath}\",\n            \"${version}\" \n        };\n        String[] replace = new String[] {\n            StringEscapeUtils.escapeJavaScript(request.getContextPath()),\n            StringEscapeUtils.escapeJavaScript(cores.getAdminPath()),\n            StringEscapeUtils.escapeJavaScript(pack.getSpecificationVersion())\n        };\n        \n        out.write( StringUtils.replaceEach(html, search, replace) );\n        out.flush();\n      } finally {\n        IOUtils.closeQuietly(in);\n      }\n    } else {\n      response.sendError(404);\n    }\n  }\n\n","bugFix":null,"bugIntro":["26ab43e1a461b9c1d9db0739ee0eb5caed8bc521"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5eb2511ababf862ea11e10761c70ee560cd84510","date":1396607225,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/servlet/LoadAdminUiServlet#doGet(HttpServletRequest,HttpServletResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/servlet/LoadAdminUiServlet#doGet(HttpServletRequest,HttpServletResponse).mjava","sourceNew":"  @Override\n  public void doGet(HttpServletRequest request,\n                    HttpServletResponse response)\n      throws IOException {\n    // This attribute is set by the SolrDispatchFilter\n    CoreContainer cores = (CoreContainer) request.getAttribute(\"org.apache.solr.CoreContainer\");\n\n    InputStream in = getServletContext().getResourceAsStream(\"/admin.html\");\n    if(in != null && cores != null) {\n      try {\n        response.setCharacterEncoding(\"UTF-8\");\n        response.setContentType(\"text/html\");\n        Writer out = new OutputStreamWriter(response.getOutputStream(), StandardCharsets.UTF_8);\n\n        String html = IOUtils.toString(in, \"UTF-8\");\n        Package pack = SolrCore.class.getPackage();\n\n        String[] search = new String[] { \n            \"${contextPath}\", \n            \"${adminPath}\",\n            \"${version}\" \n        };\n        String[] replace = new String[] {\n            StringEscapeUtils.escapeJavaScript(request.getContextPath()),\n            StringEscapeUtils.escapeJavaScript(cores.getAdminPath()),\n            StringEscapeUtils.escapeJavaScript(pack.getSpecificationVersion())\n        };\n        \n        out.write( StringUtils.replaceEach(html, search, replace) );\n        out.flush();\n      } finally {\n        IOUtils.closeQuietly(in);\n      }\n    } else {\n      response.sendError(404);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void doGet(HttpServletRequest request,\n                    HttpServletResponse response)\n      throws IOException {\n    // This attribute is set by the SolrDispatchFilter\n    CoreContainer cores = (CoreContainer) request.getAttribute(\"org.apache.solr.CoreContainer\");\n\n    InputStream in = getServletContext().getResourceAsStream(\"/admin.html\");\n    if(in != null && cores != null) {\n      try {\n        response.setCharacterEncoding(\"UTF-8\");\n        response.setContentType(\"text/html\");\n        Writer out = new OutputStreamWriter(response.getOutputStream(), \"UTF-8\");\n\n        String html = IOUtils.toString(in, \"UTF-8\");\n        Package pack = SolrCore.class.getPackage();\n\n        String[] search = new String[] { \n            \"${contextPath}\", \n            \"${adminPath}\",\n            \"${version}\" \n        };\n        String[] replace = new String[] {\n            StringEscapeUtils.escapeJavaScript(request.getContextPath()),\n            StringEscapeUtils.escapeJavaScript(cores.getAdminPath()),\n            StringEscapeUtils.escapeJavaScript(pack.getSpecificationVersion())\n        };\n        \n        out.write( StringUtils.replaceEach(html, search, replace) );\n        out.flush();\n      } finally {\n        IOUtils.closeQuietly(in);\n      }\n    } else {\n      response.sendError(404);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fd44bec977a26a118d9e809e2de6f7edb5ca0f39","date":1421673929,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/servlet/LoadAdminUiServlet#doGet(HttpServletRequest,HttpServletResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/servlet/LoadAdminUiServlet#doGet(HttpServletRequest,HttpServletResponse).mjava","sourceNew":"  @Override\n  public void doGet(HttpServletRequest request,\n                    HttpServletResponse response)\n      throws IOException {\n    // This attribute is set by the SolrDispatchFilter\n    CoreContainer cores = (CoreContainer) request.getAttribute(\"org.apache.solr.CoreContainer\");\n\n    InputStream in = getServletContext().getResourceAsStream(\"/admin.html\");\n    if(in != null && cores != null) {\n      try {\n        response.setCharacterEncoding(\"UTF-8\");\n        response.setContentType(\"text/html\");\n        Writer out = new OutputStreamWriter(response.getOutputStream(), StandardCharsets.UTF_8);\n\n        String html = IOUtils.toString(in, \"UTF-8\");\n        Package pack = SolrCore.class.getPackage();\n\n        String[] search = new String[] { \n            \"${contextPath}\", \n            \"${adminPath}\",\n            \"${version}\" \n        };\n        String[] replace = new String[] {\n            StringEscapeUtils.escapeJavaScript(request.getContextPath()),\n            StringEscapeUtils.escapeJavaScript(CoreContainer.CORES_HANDLER_PATH),\n            StringEscapeUtils.escapeJavaScript(pack.getSpecificationVersion())\n        };\n        \n        out.write( StringUtils.replaceEach(html, search, replace) );\n        out.flush();\n      } finally {\n        IOUtils.closeQuietly(in);\n      }\n    } else {\n      response.sendError(404);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void doGet(HttpServletRequest request,\n                    HttpServletResponse response)\n      throws IOException {\n    // This attribute is set by the SolrDispatchFilter\n    CoreContainer cores = (CoreContainer) request.getAttribute(\"org.apache.solr.CoreContainer\");\n\n    InputStream in = getServletContext().getResourceAsStream(\"/admin.html\");\n    if(in != null && cores != null) {\n      try {\n        response.setCharacterEncoding(\"UTF-8\");\n        response.setContentType(\"text/html\");\n        Writer out = new OutputStreamWriter(response.getOutputStream(), StandardCharsets.UTF_8);\n\n        String html = IOUtils.toString(in, \"UTF-8\");\n        Package pack = SolrCore.class.getPackage();\n\n        String[] search = new String[] { \n            \"${contextPath}\", \n            \"${adminPath}\",\n            \"${version}\" \n        };\n        String[] replace = new String[] {\n            StringEscapeUtils.escapeJavaScript(request.getContextPath()),\n            StringEscapeUtils.escapeJavaScript(cores.getAdminPath()),\n            StringEscapeUtils.escapeJavaScript(pack.getSpecificationVersion())\n        };\n        \n        out.write( StringUtils.replaceEach(html, search, replace) );\n        out.flush();\n      } finally {\n        IOUtils.closeQuietly(in);\n      }\n    } else {\n      response.sendError(404);\n    }\n  }\n\n","bugFix":null,"bugIntro":["e78c35bca3e32dfc7a695136fa2b5de1ae135c22"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"05fb2b12b2408a672ea95299757dbda27408ee84","date":1440773278,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/servlet/LoadAdminUiServlet#doGet(HttpServletRequest,HttpServletResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/servlet/LoadAdminUiServlet#doGet(HttpServletRequest,HttpServletResponse).mjava","sourceNew":"  @Override\n  public void doGet(HttpServletRequest request,\n                    HttpServletResponse response)\n      throws IOException {\n\n    response.addHeader(\"X-Frame-Options\", \"DENY\"); // security: SOLR-7966 - avoid clickjacking for admin interface\n\n    // This attribute is set by the SolrDispatchFilter\n    CoreContainer cores = (CoreContainer) request.getAttribute(\"org.apache.solr.CoreContainer\");\n    InputStream in = getServletContext().getResourceAsStream(\"/admin.html\");\n    if(in != null && cores != null) {\n      try {\n        response.setCharacterEncoding(\"UTF-8\");\n        response.setContentType(\"text/html\");\n        Writer out = new OutputStreamWriter(response.getOutputStream(), StandardCharsets.UTF_8);\n\n        String html = IOUtils.toString(in, \"UTF-8\");\n        Package pack = SolrCore.class.getPackage();\n\n        String[] search = new String[] { \n            \"${contextPath}\", \n            \"${adminPath}\",\n            \"${version}\" \n        };\n        String[] replace = new String[] {\n            StringEscapeUtils.escapeJavaScript(request.getContextPath()),\n            StringEscapeUtils.escapeJavaScript(CoreContainer.CORES_HANDLER_PATH),\n            StringEscapeUtils.escapeJavaScript(pack.getSpecificationVersion())\n        };\n        \n        out.write( StringUtils.replaceEach(html, search, replace) );\n        out.flush();\n      } finally {\n        IOUtils.closeQuietly(in);\n      }\n    } else {\n      response.sendError(404);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void doGet(HttpServletRequest request,\n                    HttpServletResponse response)\n      throws IOException {\n    // This attribute is set by the SolrDispatchFilter\n    CoreContainer cores = (CoreContainer) request.getAttribute(\"org.apache.solr.CoreContainer\");\n\n    InputStream in = getServletContext().getResourceAsStream(\"/admin.html\");\n    if(in != null && cores != null) {\n      try {\n        response.setCharacterEncoding(\"UTF-8\");\n        response.setContentType(\"text/html\");\n        Writer out = new OutputStreamWriter(response.getOutputStream(), StandardCharsets.UTF_8);\n\n        String html = IOUtils.toString(in, \"UTF-8\");\n        Package pack = SolrCore.class.getPackage();\n\n        String[] search = new String[] { \n            \"${contextPath}\", \n            \"${adminPath}\",\n            \"${version}\" \n        };\n        String[] replace = new String[] {\n            StringEscapeUtils.escapeJavaScript(request.getContextPath()),\n            StringEscapeUtils.escapeJavaScript(CoreContainer.CORES_HANDLER_PATH),\n            StringEscapeUtils.escapeJavaScript(pack.getSpecificationVersion())\n        };\n        \n        out.write( StringUtils.replaceEach(html, search, replace) );\n        out.flush();\n      } finally {\n        IOUtils.closeQuietly(in);\n      }\n    } else {\n      response.sendError(404);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"e78c35bca3e32dfc7a695136fa2b5de1ae135c22","date":1441118240,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/servlet/LoadAdminUiServlet#doGet(HttpServletRequest,HttpServletResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/servlet/LoadAdminUiServlet#doGet(HttpServletRequest,HttpServletResponse).mjava","sourceNew":"  @Override\n  public void doGet(HttpServletRequest request,\n                    HttpServletResponse response)\n      throws IOException {\n\n    response.addHeader(\"X-Frame-Options\", \"DENY\"); // security: SOLR-7966 - avoid clickjacking for admin interface\n\n    // This attribute is set by the SolrDispatchFilter\n    CoreContainer cores = (CoreContainer) request.getAttribute(\"org.apache.solr.CoreContainer\");\n    InputStream in = getServletContext().getResourceAsStream(\"/admin.html\");\n    if(in != null && cores != null) {\n      try {\n        response.setCharacterEncoding(\"UTF-8\");\n        response.setContentType(\"text/html\");\n        Writer out = new OutputStreamWriter(response.getOutputStream(), StandardCharsets.UTF_8);\n\n        String html = IOUtils.toString(in, \"UTF-8\");\n        Package pack = SolrCore.class.getPackage();\n\n        String[] search = new String[] { \n            \"${contextPath}\", \n            \"${adminPath}\",\n            \"${version}\" \n        };\n        String[] replace = new String[] {\n            StringEscapeUtils.escapeJavaScript(request.getContextPath()),\n            StringEscapeUtils.escapeJavaScript(CommonParams.CORES_HANDLER_PATH),\n            StringEscapeUtils.escapeJavaScript(pack.getSpecificationVersion())\n        };\n        \n        out.write( StringUtils.replaceEach(html, search, replace) );\n        out.flush();\n      } finally {\n        IOUtils.closeQuietly(in);\n      }\n    } else {\n      response.sendError(404);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void doGet(HttpServletRequest request,\n                    HttpServletResponse response)\n      throws IOException {\n\n    response.addHeader(\"X-Frame-Options\", \"DENY\"); // security: SOLR-7966 - avoid clickjacking for admin interface\n\n    // This attribute is set by the SolrDispatchFilter\n    CoreContainer cores = (CoreContainer) request.getAttribute(\"org.apache.solr.CoreContainer\");\n    InputStream in = getServletContext().getResourceAsStream(\"/admin.html\");\n    if(in != null && cores != null) {\n      try {\n        response.setCharacterEncoding(\"UTF-8\");\n        response.setContentType(\"text/html\");\n        Writer out = new OutputStreamWriter(response.getOutputStream(), StandardCharsets.UTF_8);\n\n        String html = IOUtils.toString(in, \"UTF-8\");\n        Package pack = SolrCore.class.getPackage();\n\n        String[] search = new String[] { \n            \"${contextPath}\", \n            \"${adminPath}\",\n            \"${version}\" \n        };\n        String[] replace = new String[] {\n            StringEscapeUtils.escapeJavaScript(request.getContextPath()),\n            StringEscapeUtils.escapeJavaScript(CoreContainer.CORES_HANDLER_PATH),\n            StringEscapeUtils.escapeJavaScript(pack.getSpecificationVersion())\n        };\n        \n        out.write( StringUtils.replaceEach(html, search, replace) );\n        out.flush();\n      } finally {\n        IOUtils.closeQuietly(in);\n      }\n    } else {\n      response.sendError(404);\n    }\n  }\n\n","bugFix":["fd44bec977a26a118d9e809e2de6f7edb5ca0f39"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"8d83f5899efad0cd17136a45aef2bd8dea5d31e1","date":1445621035,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/servlet/LoadAdminUiServlet#doGet(HttpServletRequest,HttpServletResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/servlet/LoadAdminUiServlet#doGet(HttpServletRequest,HttpServletResponse).mjava","sourceNew":"  @Override\n  public void doGet(HttpServletRequest request,\n                    HttpServletResponse response)\n      throws IOException {\n\n    response.addHeader(\"X-Frame-Options\", \"DENY\"); // security: SOLR-7966 - avoid clickjacking for admin interface\n\n    // This attribute is set by the SolrDispatchFilter\n    String admin = request.getRequestURI().substring(request.getContextPath().length());\n    CoreContainer cores = (CoreContainer) request.getAttribute(\"org.apache.solr.CoreContainer\");\n    InputStream in = getServletContext().getResourceAsStream(admin);\n    if(in != null && cores != null) {\n      try {\n        response.setCharacterEncoding(\"UTF-8\");\n        response.setContentType(\"text/html\");\n        Writer out = new OutputStreamWriter(response.getOutputStream(), StandardCharsets.UTF_8);\n\n        String html = IOUtils.toString(in, \"UTF-8\");\n        Package pack = SolrCore.class.getPackage();\n\n        String[] search = new String[] { \n            \"${contextPath}\", \n            \"${adminPath}\",\n            \"${version}\" \n        };\n        String[] replace = new String[] {\n            StringEscapeUtils.escapeJavaScript(request.getContextPath()),\n            StringEscapeUtils.escapeJavaScript(CommonParams.CORES_HANDLER_PATH),\n            StringEscapeUtils.escapeJavaScript(pack.getSpecificationVersion())\n        };\n        \n        out.write( StringUtils.replaceEach(html, search, replace) );\n        out.flush();\n      } finally {\n        IOUtils.closeQuietly(in);\n      }\n    } else {\n      response.sendError(404);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void doGet(HttpServletRequest request,\n                    HttpServletResponse response)\n      throws IOException {\n\n    response.addHeader(\"X-Frame-Options\", \"DENY\"); // security: SOLR-7966 - avoid clickjacking for admin interface\n\n    // This attribute is set by the SolrDispatchFilter\n    CoreContainer cores = (CoreContainer) request.getAttribute(\"org.apache.solr.CoreContainer\");\n    InputStream in = getServletContext().getResourceAsStream(\"/admin.html\");\n    if(in != null && cores != null) {\n      try {\n        response.setCharacterEncoding(\"UTF-8\");\n        response.setContentType(\"text/html\");\n        Writer out = new OutputStreamWriter(response.getOutputStream(), StandardCharsets.UTF_8);\n\n        String html = IOUtils.toString(in, \"UTF-8\");\n        Package pack = SolrCore.class.getPackage();\n\n        String[] search = new String[] { \n            \"${contextPath}\", \n            \"${adminPath}\",\n            \"${version}\" \n        };\n        String[] replace = new String[] {\n            StringEscapeUtils.escapeJavaScript(request.getContextPath()),\n            StringEscapeUtils.escapeJavaScript(CommonParams.CORES_HANDLER_PATH),\n            StringEscapeUtils.escapeJavaScript(pack.getSpecificationVersion())\n        };\n        \n        out.write( StringUtils.replaceEach(html, search, replace) );\n        out.flush();\n      } finally {\n        IOUtils.closeQuietly(in);\n      }\n    } else {\n      response.sendError(404);\n    }\n  }\n\n","bugFix":["968a08cd5a072d8a1e6b4a42d7d3bb0b79d37e10"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"26ab43e1a461b9c1d9db0739ee0eb5caed8bc521","date":1461254038,"type":3,"author":"markrmiller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/servlet/LoadAdminUiServlet#doGet(HttpServletRequest,HttpServletResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/servlet/LoadAdminUiServlet#doGet(HttpServletRequest,HttpServletResponse).mjava","sourceNew":"  @Override\n  public void doGet(HttpServletRequest request,\n                    HttpServletResponse response)\n      throws IOException {\n\n    response.addHeader(\"X-Frame-Options\", \"DENY\"); // security: SOLR-7966 - avoid clickjacking for admin interface\n\n    // This attribute is set by the SolrDispatchFilter\n    String admin = request.getRequestURI().substring(request.getContextPath().length());\n    CoreContainer cores = (CoreContainer) request.getAttribute(\"org.apache.solr.CoreContainer\");\n    InputStream in = getServletContext().getResourceAsStream(admin);\n    Writer out = null;\n    if(in != null && cores != null) {\n      try {\n        response.setCharacterEncoding(\"UTF-8\");\n        response.setContentType(\"text/html\");\n\n        // Protect container owned streams from being closed by us, see SOLR-8933\n        out = new OutputStreamWriter(new CloseShieldOutputStream(response.getOutputStream()), StandardCharsets.UTF_8);\n\n        String html = IOUtils.toString(in, \"UTF-8\");\n        Package pack = SolrCore.class.getPackage();\n\n        String[] search = new String[] { \n            \"${contextPath}\", \n            \"${adminPath}\",\n            \"${version}\" \n        };\n        String[] replace = new String[] {\n            StringEscapeUtils.escapeJavaScript(request.getContextPath()),\n            StringEscapeUtils.escapeJavaScript(CommonParams.CORES_HANDLER_PATH),\n            StringEscapeUtils.escapeJavaScript(pack.getSpecificationVersion())\n        };\n        \n        out.write( StringUtils.replaceEach(html, search, replace) );\n      } finally {\n        IOUtils.closeQuietly(in);\n        IOUtils.closeQuietly(out);\n      }\n    } else {\n      response.sendError(404);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void doGet(HttpServletRequest request,\n                    HttpServletResponse response)\n      throws IOException {\n\n    response.addHeader(\"X-Frame-Options\", \"DENY\"); // security: SOLR-7966 - avoid clickjacking for admin interface\n\n    // This attribute is set by the SolrDispatchFilter\n    String admin = request.getRequestURI().substring(request.getContextPath().length());\n    CoreContainer cores = (CoreContainer) request.getAttribute(\"org.apache.solr.CoreContainer\");\n    InputStream in = getServletContext().getResourceAsStream(admin);\n    if(in != null && cores != null) {\n      try {\n        response.setCharacterEncoding(\"UTF-8\");\n        response.setContentType(\"text/html\");\n        Writer out = new OutputStreamWriter(response.getOutputStream(), StandardCharsets.UTF_8);\n\n        String html = IOUtils.toString(in, \"UTF-8\");\n        Package pack = SolrCore.class.getPackage();\n\n        String[] search = new String[] { \n            \"${contextPath}\", \n            \"${adminPath}\",\n            \"${version}\" \n        };\n        String[] replace = new String[] {\n            StringEscapeUtils.escapeJavaScript(request.getContextPath()),\n            StringEscapeUtils.escapeJavaScript(CommonParams.CORES_HANDLER_PATH),\n            StringEscapeUtils.escapeJavaScript(pack.getSpecificationVersion())\n        };\n        \n        out.write( StringUtils.replaceEach(html, search, replace) );\n        out.flush();\n      } finally {\n        IOUtils.closeQuietly(in);\n      }\n    } else {\n      response.sendError(404);\n    }\n  }\n\n","bugFix":["7d89d7e4e5101347833eea558851bf4209218619","968a08cd5a072d8a1e6b4a42d7d3bb0b79d37e10"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ec4dfcb8d7e7f83ca209a5bcc83e8b98658e9dca","date":1461308643,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/servlet/LoadAdminUiServlet#doGet(HttpServletRequest,HttpServletResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/servlet/LoadAdminUiServlet#doGet(HttpServletRequest,HttpServletResponse).mjava","sourceNew":"  @Override\n  public void doGet(HttpServletRequest request,\n                    HttpServletResponse response)\n      throws IOException {\n\n    response.addHeader(\"X-Frame-Options\", \"DENY\"); // security: SOLR-7966 - avoid clickjacking for admin interface\n\n    // This attribute is set by the SolrDispatchFilter\n    String admin = request.getRequestURI().substring(request.getContextPath().length());\n    CoreContainer cores = (CoreContainer) request.getAttribute(\"org.apache.solr.CoreContainer\");\n    InputStream in = getServletContext().getResourceAsStream(admin);\n    Writer out = null;\n    if(in != null && cores != null) {\n      try {\n        response.setCharacterEncoding(\"UTF-8\");\n        response.setContentType(\"text/html\");\n\n        // Protect container owned streams from being closed by us, see SOLR-8933\n        out = new OutputStreamWriter(new CloseShieldOutputStream(response.getOutputStream()), StandardCharsets.UTF_8);\n\n        String html = IOUtils.toString(in, \"UTF-8\");\n        Package pack = SolrCore.class.getPackage();\n\n        String[] search = new String[] { \n            \"${contextPath}\", \n            \"${adminPath}\",\n            \"${version}\" \n        };\n        String[] replace = new String[] {\n            StringEscapeUtils.escapeJavaScript(request.getContextPath()),\n            StringEscapeUtils.escapeJavaScript(CommonParams.CORES_HANDLER_PATH),\n            StringEscapeUtils.escapeJavaScript(pack.getSpecificationVersion())\n        };\n        \n        out.write( StringUtils.replaceEach(html, search, replace) );\n      } finally {\n        IOUtils.closeQuietly(in);\n        IOUtils.closeQuietly(out);\n      }\n    } else {\n      response.sendError(404);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void doGet(HttpServletRequest request,\n                    HttpServletResponse response)\n      throws IOException {\n\n    response.addHeader(\"X-Frame-Options\", \"DENY\"); // security: SOLR-7966 - avoid clickjacking for admin interface\n\n    // This attribute is set by the SolrDispatchFilter\n    String admin = request.getRequestURI().substring(request.getContextPath().length());\n    CoreContainer cores = (CoreContainer) request.getAttribute(\"org.apache.solr.CoreContainer\");\n    InputStream in = getServletContext().getResourceAsStream(admin);\n    if(in != null && cores != null) {\n      try {\n        response.setCharacterEncoding(\"UTF-8\");\n        response.setContentType(\"text/html\");\n        Writer out = new OutputStreamWriter(response.getOutputStream(), StandardCharsets.UTF_8);\n\n        String html = IOUtils.toString(in, \"UTF-8\");\n        Package pack = SolrCore.class.getPackage();\n\n        String[] search = new String[] { \n            \"${contextPath}\", \n            \"${adminPath}\",\n            \"${version}\" \n        };\n        String[] replace = new String[] {\n            StringEscapeUtils.escapeJavaScript(request.getContextPath()),\n            StringEscapeUtils.escapeJavaScript(CommonParams.CORES_HANDLER_PATH),\n            StringEscapeUtils.escapeJavaScript(pack.getSpecificationVersion())\n        };\n        \n        out.write( StringUtils.replaceEach(html, search, replace) );\n        out.flush();\n      } finally {\n        IOUtils.closeQuietly(in);\n      }\n    } else {\n      response.sendError(404);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ac35531329b1809368fb0780bcf1e72d0add3c21","date":1525474926,"type":3,"author":"Mark Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/servlet/LoadAdminUiServlet#doGet(HttpServletRequest,HttpServletResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/servlet/LoadAdminUiServlet#doGet(HttpServletRequest,HttpServletResponse).mjava","sourceNew":"  @Override\n  public void doGet(HttpServletRequest _request,\n                    HttpServletResponse _response)\n      throws IOException {\n    HttpServletRequest request = SolrDispatchFilter.closeShield(_request, false);\n    HttpServletResponse response = SolrDispatchFilter.closeShield(_response, false);\n    \n    response.addHeader(\"X-Frame-Options\", \"DENY\"); // security: SOLR-7966 - avoid clickjacking for admin interface\n\n    // This attribute is set by the SolrDispatchFilter\n    String admin = request.getRequestURI().substring(request.getContextPath().length());\n    CoreContainer cores = (CoreContainer) request.getAttribute(\"org.apache.solr.CoreContainer\");\n    InputStream in = getServletContext().getResourceAsStream(admin);\n    Writer out = null;\n    if(in != null && cores != null) {\n      try {\n        response.setCharacterEncoding(\"UTF-8\");\n        response.setContentType(\"text/html\");\n\n        // Don't close this! - see SOLR-8933\n        out = new OutputStreamWriter(response.getOutputStream(), StandardCharsets.UTF_8);\n\n        String html = IOUtils.toString(in, \"UTF-8\");\n        Package pack = SolrCore.class.getPackage();\n\n        String[] search = new String[] { \n            \"${contextPath}\", \n            \"${adminPath}\",\n            \"${version}\" \n        };\n        String[] replace = new String[] {\n            StringEscapeUtils.escapeJavaScript(request.getContextPath()),\n            StringEscapeUtils.escapeJavaScript(CommonParams.CORES_HANDLER_PATH),\n            StringEscapeUtils.escapeJavaScript(pack.getSpecificationVersion())\n        };\n        \n        out.write( StringUtils.replaceEach(html, search, replace) );\n      } finally {\n        IOUtils.closeQuietly(in);\n      }\n    } else {\n      response.sendError(404);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void doGet(HttpServletRequest request,\n                    HttpServletResponse response)\n      throws IOException {\n\n    response.addHeader(\"X-Frame-Options\", \"DENY\"); // security: SOLR-7966 - avoid clickjacking for admin interface\n\n    // This attribute is set by the SolrDispatchFilter\n    String admin = request.getRequestURI().substring(request.getContextPath().length());\n    CoreContainer cores = (CoreContainer) request.getAttribute(\"org.apache.solr.CoreContainer\");\n    InputStream in = getServletContext().getResourceAsStream(admin);\n    Writer out = null;\n    if(in != null && cores != null) {\n      try {\n        response.setCharacterEncoding(\"UTF-8\");\n        response.setContentType(\"text/html\");\n\n        // Protect container owned streams from being closed by us, see SOLR-8933\n        out = new OutputStreamWriter(new CloseShieldOutputStream(response.getOutputStream()), StandardCharsets.UTF_8);\n\n        String html = IOUtils.toString(in, \"UTF-8\");\n        Package pack = SolrCore.class.getPackage();\n\n        String[] search = new String[] { \n            \"${contextPath}\", \n            \"${adminPath}\",\n            \"${version}\" \n        };\n        String[] replace = new String[] {\n            StringEscapeUtils.escapeJavaScript(request.getContextPath()),\n            StringEscapeUtils.escapeJavaScript(CommonParams.CORES_HANDLER_PATH),\n            StringEscapeUtils.escapeJavaScript(pack.getSpecificationVersion())\n        };\n        \n        out.write( StringUtils.replaceEach(html, search, replace) );\n      } finally {\n        IOUtils.closeQuietly(in);\n        IOUtils.closeQuietly(out);\n      }\n    } else {\n      response.sendError(404);\n    }\n  }\n\n","bugFix":null,"bugIntro":["eebeb9922cf5af1d4a79f0c60679e5c4b01178a1"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"eebeb9922cf5af1d4a79f0c60679e5c4b01178a1","date":1527916588,"type":3,"author":"markrmiller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/servlet/LoadAdminUiServlet#doGet(HttpServletRequest,HttpServletResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/servlet/LoadAdminUiServlet#doGet(HttpServletRequest,HttpServletResponse).mjava","sourceNew":"  @Override\n  public void doGet(HttpServletRequest _request,\n                    HttpServletResponse _response)\n      throws IOException {\n    HttpServletRequest request = SolrDispatchFilter.closeShield(_request, false);\n    HttpServletResponse response = SolrDispatchFilter.closeShield(_response, false);\n    \n    response.addHeader(\"X-Frame-Options\", \"DENY\"); // security: SOLR-7966 - avoid clickjacking for admin interface\n\n    // This attribute is set by the SolrDispatchFilter\n    String admin = request.getRequestURI().substring(request.getContextPath().length());\n    CoreContainer cores = (CoreContainer) request.getAttribute(\"org.apache.solr.CoreContainer\");\n    InputStream in = getServletContext().getResourceAsStream(admin);\n    Writer out = null;\n    if(in != null && cores != null) {\n      try {\n        response.setCharacterEncoding(\"UTF-8\");\n        response.setContentType(\"text/html\");\n\n        // We have to close this to flush OutputStreamWriter buffer\n        out = new OutputStreamWriter(new CloseShieldOutputStream(response.getOutputStream()), StandardCharsets.UTF_8);\n\n        String html = IOUtils.toString(in, \"UTF-8\");\n        Package pack = SolrCore.class.getPackage();\n\n        String[] search = new String[] { \n            \"${contextPath}\", \n            \"${adminPath}\",\n            \"${version}\" \n        };\n        String[] replace = new String[] {\n            StringEscapeUtils.escapeJavaScript(request.getContextPath()),\n            StringEscapeUtils.escapeJavaScript(CommonParams.CORES_HANDLER_PATH),\n            StringEscapeUtils.escapeJavaScript(pack.getSpecificationVersion())\n        };\n        \n        out.write( StringUtils.replaceEach(html, search, replace) );\n      } finally {\n        IOUtils.closeQuietly(in);\n        IOUtils.closeQuietly(out);\n      }\n    } else {\n      response.sendError(404);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void doGet(HttpServletRequest _request,\n                    HttpServletResponse _response)\n      throws IOException {\n    HttpServletRequest request = SolrDispatchFilter.closeShield(_request, false);\n    HttpServletResponse response = SolrDispatchFilter.closeShield(_response, false);\n    \n    response.addHeader(\"X-Frame-Options\", \"DENY\"); // security: SOLR-7966 - avoid clickjacking for admin interface\n\n    // This attribute is set by the SolrDispatchFilter\n    String admin = request.getRequestURI().substring(request.getContextPath().length());\n    CoreContainer cores = (CoreContainer) request.getAttribute(\"org.apache.solr.CoreContainer\");\n    InputStream in = getServletContext().getResourceAsStream(admin);\n    Writer out = null;\n    if(in != null && cores != null) {\n      try {\n        response.setCharacterEncoding(\"UTF-8\");\n        response.setContentType(\"text/html\");\n\n        // Don't close this! - see SOLR-8933\n        out = new OutputStreamWriter(response.getOutputStream(), StandardCharsets.UTF_8);\n\n        String html = IOUtils.toString(in, \"UTF-8\");\n        Package pack = SolrCore.class.getPackage();\n\n        String[] search = new String[] { \n            \"${contextPath}\", \n            \"${adminPath}\",\n            \"${version}\" \n        };\n        String[] replace = new String[] {\n            StringEscapeUtils.escapeJavaScript(request.getContextPath()),\n            StringEscapeUtils.escapeJavaScript(CommonParams.CORES_HANDLER_PATH),\n            StringEscapeUtils.escapeJavaScript(pack.getSpecificationVersion())\n        };\n        \n        out.write( StringUtils.replaceEach(html, search, replace) );\n      } finally {\n        IOUtils.closeQuietly(in);\n      }\n    } else {\n      response.sendError(404);\n    }\n  }\n\n","bugFix":["ac35531329b1809368fb0780bcf1e72d0add3c21"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b70042a8a492f7054d480ccdd2be9796510d4327","date":1528386658,"type":3,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/servlet/LoadAdminUiServlet#doGet(HttpServletRequest,HttpServletResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/servlet/LoadAdminUiServlet#doGet(HttpServletRequest,HttpServletResponse).mjava","sourceNew":"  @Override\n  public void doGet(HttpServletRequest _request,\n                    HttpServletResponse _response)\n      throws IOException {\n    HttpServletRequest request = SolrDispatchFilter.closeShield(_request, false);\n    HttpServletResponse response = SolrDispatchFilter.closeShield(_response, false);\n    \n    response.addHeader(\"X-Frame-Options\", \"DENY\"); // security: SOLR-7966 - avoid clickjacking for admin interface\n\n    // This attribute is set by the SolrDispatchFilter\n    String admin = request.getRequestURI().substring(request.getContextPath().length());\n    CoreContainer cores = (CoreContainer) request.getAttribute(\"org.apache.solr.CoreContainer\");\n    InputStream in = getServletContext().getResourceAsStream(admin);\n    Writer out = null;\n    if(in != null && cores != null) {\n      try {\n        response.setCharacterEncoding(\"UTF-8\");\n        response.setContentType(\"text/html\");\n\n        // We have to close this to flush OutputStreamWriter buffer\n        out = new OutputStreamWriter(new CloseShieldOutputStream(response.getOutputStream()), StandardCharsets.UTF_8);\n\n        String html = IOUtils.toString(in, \"UTF-8\");\n        Package pack = SolrCore.class.getPackage();\n\n        String[] search = new String[] { \n            \"${contextPath}\", \n            \"${adminPath}\",\n            \"${version}\" \n        };\n        String[] replace = new String[] {\n            StringEscapeUtils.escapeJavaScript(request.getContextPath()),\n            StringEscapeUtils.escapeJavaScript(CommonParams.CORES_HANDLER_PATH),\n            StringEscapeUtils.escapeJavaScript(pack.getSpecificationVersion())\n        };\n        \n        out.write( StringUtils.replaceEach(html, search, replace) );\n      } finally {\n        IOUtils.closeQuietly(in);\n        IOUtils.closeQuietly(out);\n      }\n    } else {\n      response.sendError(404);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void doGet(HttpServletRequest _request,\n                    HttpServletResponse _response)\n      throws IOException {\n    HttpServletRequest request = SolrDispatchFilter.closeShield(_request, false);\n    HttpServletResponse response = SolrDispatchFilter.closeShield(_response, false);\n    \n    response.addHeader(\"X-Frame-Options\", \"DENY\"); // security: SOLR-7966 - avoid clickjacking for admin interface\n\n    // This attribute is set by the SolrDispatchFilter\n    String admin = request.getRequestURI().substring(request.getContextPath().length());\n    CoreContainer cores = (CoreContainer) request.getAttribute(\"org.apache.solr.CoreContainer\");\n    InputStream in = getServletContext().getResourceAsStream(admin);\n    Writer out = null;\n    if(in != null && cores != null) {\n      try {\n        response.setCharacterEncoding(\"UTF-8\");\n        response.setContentType(\"text/html\");\n\n        // Don't close this! - see SOLR-8933\n        out = new OutputStreamWriter(response.getOutputStream(), StandardCharsets.UTF_8);\n\n        String html = IOUtils.toString(in, \"UTF-8\");\n        Package pack = SolrCore.class.getPackage();\n\n        String[] search = new String[] { \n            \"${contextPath}\", \n            \"${adminPath}\",\n            \"${version}\" \n        };\n        String[] replace = new String[] {\n            StringEscapeUtils.escapeJavaScript(request.getContextPath()),\n            StringEscapeUtils.escapeJavaScript(CommonParams.CORES_HANDLER_PATH),\n            StringEscapeUtils.escapeJavaScript(pack.getSpecificationVersion())\n        };\n        \n        out.write( StringUtils.replaceEach(html, search, replace) );\n      } finally {\n        IOUtils.closeQuietly(in);\n      }\n    } else {\n      response.sendError(404);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0ac6494315d04f68950d2f00f5436b4861bcd467","date":1553125039,"type":3,"author":"Kevin Risden","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/servlet/LoadAdminUiServlet#doGet(HttpServletRequest,HttpServletResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/servlet/LoadAdminUiServlet#doGet(HttpServletRequest,HttpServletResponse).mjava","sourceNew":"  @Override\n  public void doGet(HttpServletRequest _request,\n                    HttpServletResponse _response)\n      throws IOException {\n    HttpServletRequest request = SolrDispatchFilter.closeShield(_request, false);\n    HttpServletResponse response = SolrDispatchFilter.closeShield(_response, false);\n    \n    response.addHeader(\"X-Frame-Options\", \"DENY\"); // security: SOLR-7966 - avoid clickjacking for admin interface\n\n    // This attribute is set by the SolrDispatchFilter\n    String admin = request.getRequestURI().substring(request.getContextPath().length());\n    CoreContainer cores = (CoreContainer) request.getAttribute(\"org.apache.solr.CoreContainer\");\n    InputStream in = getServletContext().getResourceAsStream(admin);\n    Writer out = null;\n    if(in != null && cores != null) {\n      try {\n        response.setCharacterEncoding(\"UTF-8\");\n        response.setContentType(\"text/html\");\n\n        // We have to close this to flush OutputStreamWriter buffer\n        out = new OutputStreamWriter(new CloseShieldOutputStream(response.getOutputStream()), StandardCharsets.UTF_8);\n\n        String html = IOUtils.toString(in, \"UTF-8\");\n        Package pack = SolrCore.class.getPackage();\n\n        String[] search = new String[] { \n            \"${contextPath}\", \n            \"${adminPath}\",\n            \"${version}\" \n        };\n        String[] replace = new String[] {\n            StringEscapeUtils.escapeEcmaScript(request.getContextPath()),\n            StringEscapeUtils.escapeEcmaScript(CommonParams.CORES_HANDLER_PATH),\n            StringEscapeUtils.escapeEcmaScript(pack.getSpecificationVersion())\n        };\n        \n        out.write( StringUtils.replaceEach(html, search, replace) );\n      } finally {\n        IOUtils.closeQuietly(in);\n        IOUtils.closeQuietly(out);\n      }\n    } else {\n      response.sendError(404);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void doGet(HttpServletRequest _request,\n                    HttpServletResponse _response)\n      throws IOException {\n    HttpServletRequest request = SolrDispatchFilter.closeShield(_request, false);\n    HttpServletResponse response = SolrDispatchFilter.closeShield(_response, false);\n    \n    response.addHeader(\"X-Frame-Options\", \"DENY\"); // security: SOLR-7966 - avoid clickjacking for admin interface\n\n    // This attribute is set by the SolrDispatchFilter\n    String admin = request.getRequestURI().substring(request.getContextPath().length());\n    CoreContainer cores = (CoreContainer) request.getAttribute(\"org.apache.solr.CoreContainer\");\n    InputStream in = getServletContext().getResourceAsStream(admin);\n    Writer out = null;\n    if(in != null && cores != null) {\n      try {\n        response.setCharacterEncoding(\"UTF-8\");\n        response.setContentType(\"text/html\");\n\n        // We have to close this to flush OutputStreamWriter buffer\n        out = new OutputStreamWriter(new CloseShieldOutputStream(response.getOutputStream()), StandardCharsets.UTF_8);\n\n        String html = IOUtils.toString(in, \"UTF-8\");\n        Package pack = SolrCore.class.getPackage();\n\n        String[] search = new String[] { \n            \"${contextPath}\", \n            \"${adminPath}\",\n            \"${version}\" \n        };\n        String[] replace = new String[] {\n            StringEscapeUtils.escapeJavaScript(request.getContextPath()),\n            StringEscapeUtils.escapeJavaScript(CommonParams.CORES_HANDLER_PATH),\n            StringEscapeUtils.escapeJavaScript(pack.getSpecificationVersion())\n        };\n        \n        out.write( StringUtils.replaceEach(html, search, replace) );\n      } finally {\n        IOUtils.closeQuietly(in);\n        IOUtils.closeQuietly(out);\n      }\n    } else {\n      response.sendError(404);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0da6a9ebe1bf483b79f2dc7f5df429eabeb40d4","date":1588629091,"type":3,"author":"Marcus","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/servlet/LoadAdminUiServlet#doGet(HttpServletRequest,HttpServletResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/servlet/LoadAdminUiServlet#doGet(HttpServletRequest,HttpServletResponse).mjava","sourceNew":"  @Override\n  public void doGet(HttpServletRequest _request, HttpServletResponse _response) throws IOException {\n    if(disabled){\n      _response.sendError(404, \"Solr Admin UI is disabled. To enable it, change the default value of SOLR_ADMIN_UI_\" +\n          \"ENABLED in bin/solr.in.sh or solr.in.cmd.\");\n      return;\n    }\n    HttpServletRequest request = SolrDispatchFilter.closeShield(_request, false);\n    HttpServletResponse response = SolrDispatchFilter.closeShield(_response, false);\n\n\n    response.addHeader(\"X-Frame-Options\", \"DENY\"); // security: SOLR-7966 - avoid clickjacking for admin interface\n\n    // This attribute is set by the SolrDispatchFilter\n    String admin = request.getRequestURI().substring(request.getContextPath().length());\n    CoreContainer cores = (CoreContainer) request.getAttribute(\"org.apache.solr.CoreContainer\");\n    InputStream in = getServletContext().getResourceAsStream(admin);\n    Writer out = null;\n    if(in != null && cores != null) {\n      try {\n        response.setCharacterEncoding(\"UTF-8\");\n        response.setContentType(\"text/html\");\n\n        // We have to close this to flush OutputStreamWriter buffer\n        out = new OutputStreamWriter(new CloseShieldOutputStream(response.getOutputStream()), StandardCharsets.UTF_8);\n\n        String html = IOUtils.toString(in, \"UTF-8\");\n        Package pack = SolrCore.class.getPackage();\n\n        String[] search = new String[] { \n            \"${contextPath}\", \n            \"${adminPath}\",\n            \"${version}\" \n        };\n        String[] replace = new String[] {\n            StringEscapeUtils.escapeEcmaScript(request.getContextPath()),\n            StringEscapeUtils.escapeEcmaScript(CommonParams.CORES_HANDLER_PATH),\n            StringEscapeUtils.escapeEcmaScript(pack.getSpecificationVersion())\n        };\n        \n        out.write( StringUtils.replaceEach(html, search, replace) );\n      } finally {\n        IOUtils.closeQuietly(in);\n        IOUtils.closeQuietly(out);\n      }\n    } else {\n      response.sendError(404);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void doGet(HttpServletRequest _request,\n                    HttpServletResponse _response)\n      throws IOException {\n    HttpServletRequest request = SolrDispatchFilter.closeShield(_request, false);\n    HttpServletResponse response = SolrDispatchFilter.closeShield(_response, false);\n    \n    response.addHeader(\"X-Frame-Options\", \"DENY\"); // security: SOLR-7966 - avoid clickjacking for admin interface\n\n    // This attribute is set by the SolrDispatchFilter\n    String admin = request.getRequestURI().substring(request.getContextPath().length());\n    CoreContainer cores = (CoreContainer) request.getAttribute(\"org.apache.solr.CoreContainer\");\n    InputStream in = getServletContext().getResourceAsStream(admin);\n    Writer out = null;\n    if(in != null && cores != null) {\n      try {\n        response.setCharacterEncoding(\"UTF-8\");\n        response.setContentType(\"text/html\");\n\n        // We have to close this to flush OutputStreamWriter buffer\n        out = new OutputStreamWriter(new CloseShieldOutputStream(response.getOutputStream()), StandardCharsets.UTF_8);\n\n        String html = IOUtils.toString(in, \"UTF-8\");\n        Package pack = SolrCore.class.getPackage();\n\n        String[] search = new String[] { \n            \"${contextPath}\", \n            \"${adminPath}\",\n            \"${version}\" \n        };\n        String[] replace = new String[] {\n            StringEscapeUtils.escapeEcmaScript(request.getContextPath()),\n            StringEscapeUtils.escapeEcmaScript(CommonParams.CORES_HANDLER_PATH),\n            StringEscapeUtils.escapeEcmaScript(pack.getSpecificationVersion())\n        };\n        \n        out.write( StringUtils.replaceEach(html, search, replace) );\n      } finally {\n        IOUtils.closeQuietly(in);\n        IOUtils.closeQuietly(out);\n      }\n    } else {\n      response.sendError(404);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["4d3e8520fd031bab31fd0e4d480e55958bc45efe","c7d0565444d6381434fbff66cecf07da249f2bb4"],"800d125aadb2b3d942ca4494c25c82a58a195bc3":["c7d0565444d6381434fbff66cecf07da249f2bb4"],"c7d0565444d6381434fbff66cecf07da249f2bb4":["4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"05fb2b12b2408a672ea95299757dbda27408ee84":["fd44bec977a26a118d9e809e2de6f7edb5ca0f39"],"8d83f5899efad0cd17136a45aef2bd8dea5d31e1":["e78c35bca3e32dfc7a695136fa2b5de1ae135c22"],"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0522cfff00d3b7d3e18129f5658b6e0304b7bc4b"],"fd44bec977a26a118d9e809e2de6f7edb5ca0f39":["7d89d7e4e5101347833eea558851bf4209218619"],"a0da6a9ebe1bf483b79f2dc7f5df429eabeb40d4":["0ac6494315d04f68950d2f00f5436b4861bcd467"],"0ac6494315d04f68950d2f00f5436b4861bcd467":["eebeb9922cf5af1d4a79f0c60679e5c4b01178a1"],"e78c35bca3e32dfc7a695136fa2b5de1ae135c22":["05fb2b12b2408a672ea95299757dbda27408ee84"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b70042a8a492f7054d480ccdd2be9796510d4327":["ac35531329b1809368fb0780bcf1e72d0add3c21","eebeb9922cf5af1d4a79f0c60679e5c4b01178a1"],"26ab43e1a461b9c1d9db0739ee0eb5caed8bc521":["8d83f5899efad0cd17136a45aef2bd8dea5d31e1"],"4d3e8520fd031bab31fd0e4d480e55958bc45efe":["5a002afd8b1e0d1bbf0debb2ff740b5e77ed8b23"],"eebeb9922cf5af1d4a79f0c60679e5c4b01178a1":["ac35531329b1809368fb0780bcf1e72d0add3c21"],"5eb2511ababf862ea11e10761c70ee560cd84510":["968a08cd5a072d8a1e6b4a42d7d3bb0b79d37e10","7d89d7e4e5101347833eea558851bf4209218619"],"5a002afd8b1e0d1bbf0debb2ff740b5e77ed8b23":["fd940dd552b23de1657d708a91e719fbeef33357"],"ec4dfcb8d7e7f83ca209a5bcc83e8b98658e9dca":["8d83f5899efad0cd17136a45aef2bd8dea5d31e1","26ab43e1a461b9c1d9db0739ee0eb5caed8bc521"],"968a08cd5a072d8a1e6b4a42d7d3bb0b79d37e10":["800d125aadb2b3d942ca4494c25c82a58a195bc3"],"ac35531329b1809368fb0780bcf1e72d0add3c21":["ec4dfcb8d7e7f83ca209a5bcc83e8b98658e9dca"],"7d89d7e4e5101347833eea558851bf4209218619":["968a08cd5a072d8a1e6b4a42d7d3bb0b79d37e10"],"0522cfff00d3b7d3e18129f5658b6e0304b7bc4b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["5a002afd8b1e0d1bbf0debb2ff740b5e77ed8b23","4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0da6a9ebe1bf483b79f2dc7f5df429eabeb40d4"],"fd940dd552b23de1657d708a91e719fbeef33357":["0522cfff00d3b7d3e18129f5658b6e0304b7bc4b"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"c7d0565444d6381434fbff66cecf07da249f2bb4":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","800d125aadb2b3d942ca4494c25c82a58a195bc3"],"800d125aadb2b3d942ca4494c25c82a58a195bc3":["968a08cd5a072d8a1e6b4a42d7d3bb0b79d37e10"],"05fb2b12b2408a672ea95299757dbda27408ee84":["e78c35bca3e32dfc7a695136fa2b5de1ae135c22"],"8d83f5899efad0cd17136a45aef2bd8dea5d31e1":["26ab43e1a461b9c1d9db0739ee0eb5caed8bc521","ec4dfcb8d7e7f83ca209a5bcc83e8b98658e9dca"],"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":[],"fd44bec977a26a118d9e809e2de6f7edb5ca0f39":["05fb2b12b2408a672ea95299757dbda27408ee84"],"a0da6a9ebe1bf483b79f2dc7f5df429eabeb40d4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"0ac6494315d04f68950d2f00f5436b4861bcd467":["a0da6a9ebe1bf483b79f2dc7f5df429eabeb40d4"],"e78c35bca3e32dfc7a695136fa2b5de1ae135c22":["8d83f5899efad0cd17136a45aef2bd8dea5d31e1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","0522cfff00d3b7d3e18129f5658b6e0304b7bc4b"],"b70042a8a492f7054d480ccdd2be9796510d4327":[],"26ab43e1a461b9c1d9db0739ee0eb5caed8bc521":["ec4dfcb8d7e7f83ca209a5bcc83e8b98658e9dca"],"4d3e8520fd031bab31fd0e4d480e55958bc45efe":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","c7d0565444d6381434fbff66cecf07da249f2bb4","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"eebeb9922cf5af1d4a79f0c60679e5c4b01178a1":["0ac6494315d04f68950d2f00f5436b4861bcd467","b70042a8a492f7054d480ccdd2be9796510d4327"],"5eb2511ababf862ea11e10761c70ee560cd84510":[],"5a002afd8b1e0d1bbf0debb2ff740b5e77ed8b23":["4d3e8520fd031bab31fd0e4d480e55958bc45efe","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"ec4dfcb8d7e7f83ca209a5bcc83e8b98658e9dca":["ac35531329b1809368fb0780bcf1e72d0add3c21"],"968a08cd5a072d8a1e6b4a42d7d3bb0b79d37e10":["5eb2511ababf862ea11e10761c70ee560cd84510","7d89d7e4e5101347833eea558851bf4209218619"],"ac35531329b1809368fb0780bcf1e72d0add3c21":["b70042a8a492f7054d480ccdd2be9796510d4327","eebeb9922cf5af1d4a79f0c60679e5c4b01178a1"],"7d89d7e4e5101347833eea558851bf4209218619":["fd44bec977a26a118d9e809e2de6f7edb5ca0f39","5eb2511ababf862ea11e10761c70ee560cd84510"],"0522cfff00d3b7d3e18129f5658b6e0304b7bc4b":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","fd940dd552b23de1657d708a91e719fbeef33357"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"fd940dd552b23de1657d708a91e719fbeef33357":["5a002afd8b1e0d1bbf0debb2ff740b5e77ed8b23"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","b70042a8a492f7054d480ccdd2be9796510d4327","5eb2511ababf862ea11e10761c70ee560cd84510","fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}