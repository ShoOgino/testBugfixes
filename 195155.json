{"path":"lucene/core/src/test/org/apache/lucene/index/TestNRTReaderWithThreads.RunThread#run().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestNRTReaderWithThreads.RunThread#run().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestNRTReaderWithThreads.RunThread#run().mjava","sourceNew":"    @Override\n    public void run() {\n      try {\n        while (run) {\n          //int n = random.nextInt(2);\n          if (type == 0) {\n            int i = seq.addAndGet(1);\n            Document doc = DocHelper.createDocument(i, \"index1\", 10);\n            writer.addDocument(doc);\n            addCount++;\n          } else if (type == 1) {\n            // we may or may not delete because the term may not exist,\n            // however we're opening and closing the reader rapidly\n            IndexReader reader = writer.getReader();\n            int id = r.nextInt(seq.intValue());\n            Term term = new Term(\"id\", Integer.toString(id));\n            int count = TestIndexWriterReader.count(term, reader);\n            writer.deleteDocuments(term);\n            reader.close();\n            delCount += count;\n          }\n        }\n      } catch (Throwable ex) {\n        ex.printStackTrace(System.out);\n        this.ex = ex;\n        run = false;\n      }\n    }\n\n","sourceOld":"    @Override\n    public void run() {\n      try {\n        while (run) {\n          //int n = random.nextInt(2);\n          if (type == 0) {\n            int i = seq.addAndGet(1);\n            Document doc = DocHelper.createDocument(i, \"index1\", 10);\n            writer.addDocument(doc);\n            addCount++;\n          } else if (type == 1) {\n            // we may or may not delete because the term may not exist,\n            // however we're opening and closing the reader rapidly\n            IndexReader reader = writer.getReader();\n            int id = r.nextInt(seq.intValue());\n            Term term = new Term(\"id\", Integer.toString(id));\n            int count = TestIndexWriterReader.count(term, reader);\n            writer.deleteDocuments(term);\n            reader.close();\n            delCount += count;\n          }\n        }\n      } catch (Throwable ex) {\n        ex.printStackTrace(System.out);\n        this.ex = ex;\n        run = false;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4208ed8e426ae5f75a41d8b4ae53f4587e413061","date":1580475454,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestNRTReaderWithThreads.RunThread#run().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestNRTReaderWithThreads.RunThread#run().mjava","sourceNew":"    @Override\n    public void run() {\n      try {\n        for (int iter = 0; iter < numIterations; iter++) {\n          //int n = random.nextInt(2);\n          if (type == 0) {\n            int i = seq.addAndGet(1);\n            Document doc = DocHelper.createDocument(i, \"index1\", 10);\n            writer.addDocument(doc);\n            addCount++;\n          } else if (type == 1) {\n            // we may or may not delete because the term may not exist,\n            // however we're opening and closing the reader rapidly\n            IndexReader reader = writer.getReader();\n            int id = r.nextInt(seq.intValue());\n            Term term = new Term(\"id\", Integer.toString(id));\n            int count = TestIndexWriterReader.count(term, reader);\n            writer.deleteDocuments(term);\n            reader.close();\n            delCount += count;\n          }\n        }\n      } catch (Throwable ex) {\n        ex.printStackTrace(System.out);\n        this.failure = failure;\n        throw new RuntimeException(ex);\n      }\n    }\n\n","sourceOld":"    @Override\n    public void run() {\n      try {\n        while (run) {\n          //int n = random.nextInt(2);\n          if (type == 0) {\n            int i = seq.addAndGet(1);\n            Document doc = DocHelper.createDocument(i, \"index1\", 10);\n            writer.addDocument(doc);\n            addCount++;\n          } else if (type == 1) {\n            // we may or may not delete because the term may not exist,\n            // however we're opening and closing the reader rapidly\n            IndexReader reader = writer.getReader();\n            int id = r.nextInt(seq.intValue());\n            Term term = new Term(\"id\", Integer.toString(id));\n            int count = TestIndexWriterReader.count(term, reader);\n            writer.deleteDocuments(term);\n            reader.close();\n            delCount += count;\n          }\n        }\n      } catch (Throwable ex) {\n        ex.printStackTrace(System.out);\n        this.ex = ex;\n        run = false;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4208ed8e426ae5f75a41d8b4ae53f4587e413061":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4208ed8e426ae5f75a41d8b4ae53f4587e413061"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["4208ed8e426ae5f75a41d8b4ae53f4587e413061"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"4208ed8e426ae5f75a41d8b4ae53f4587e413061":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}