{"path":"src/java/org/apache/lucene/index/IndexReader#getTermFreqVector(int,String).mjava","commits":[{"id":"770281b8a8459cafcdd2354b6a06078fea2d83c9","date":1077308096,"type":0,"author":"Doug Cutting","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexReader#getTermFreqVector(int,String).mjava","pathOld":"/dev/null","sourceNew":"  /** Return a term frequency vector for the specified document and field. The\n   *  vector returned contains term numbers and frequencies for all terms in\n   *  the specified field of this document, if the field had storeTermVector\n   *  flag set.  If the flag was not set, the method returns null.\n   *\n   * @see Field#isTermVectorStored()\n   */\n  abstract public TermFreqVector getTermFreqVector(int docNumber, String field)\n          throws IOException;\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a640f2908ff0a64357798b9d15211b6a03a19518","date":1077655415,"type":3,"author":"Doug Cutting","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexReader#getTermFreqVector(int,String).mjava","pathOld":"src/java/org/apache/lucene/index/IndexReader#getTermFreqVector(int,String).mjava","sourceNew":"  /** Return a term frequency vector for the specified document and field. The\n   *  vector returned contains terms and frequencies for those terms in\n   *  the specified field of this document, if the field had storeTermVector\n   *  flag set.  If the flag was not set, the method returns null.\n   *\n   * @see Field#isTermVectorStored()\n   */\n  abstract public TermFreqVector getTermFreqVector(int docNumber, String field)\n          throws IOException;\n\n","sourceOld":"  /** Return a term frequency vector for the specified document and field. The\n   *  vector returned contains term numbers and frequencies for all terms in\n   *  the specified field of this document, if the field had storeTermVector\n   *  flag set.  If the flag was not set, the method returns null.\n   *\n   * @see Field#isTermVectorStored()\n   */\n  abstract public TermFreqVector getTermFreqVector(int docNumber, String field)\n          throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6177f0f28ace66d1538b1e6ac5f1773e5449a0b0","date":1096997448,"type":3,"author":"Christoph Goller","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexReader#getTermFreqVector(int,String).mjava","pathOld":"src/java/org/apache/lucene/index/IndexReader#getTermFreqVector(int,String).mjava","sourceNew":"  /**\n   *  Return a term frequency vector for the specified document and field. The\n   *  returned vector contains terms and frequencies for the terms in\n   *  the specified field of this document, if the field had the storeTermVector\n   *  flag set. If termvectors had been stored with positions or offsets, a \n   *  TermPositionsVector is returned.\n   * \n   * @param docNumber document for which the term frequency vector is returned\n   * @param field field for which the term frequency vector is returned.\n   * @return term frequency vector May be null if field does not exist in the specified\n   * document or term vector was not stored.\n   * @throws IOException if index cannot be accessed\n   * @see Field#TermVector\n   */\n  abstract public TermFreqVector getTermFreqVector(int docNumber, String field)\n          throws IOException;\n\n","sourceOld":"  /** Return a term frequency vector for the specified document and field. The\n   *  vector returned contains terms and frequencies for those terms in\n   *  the specified field of this document, if the field had storeTermVector\n   *  flag set.  If the flag was not set, the method returns null.\n   *\n   * @see Field#isTermVectorStored()\n   */\n  abstract public TermFreqVector getTermFreqVector(int docNumber, String field)\n          throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4a0a7d247e80b7ab1b172f7e56d5fcb8bd28232e","date":1097092542,"type":3,"author":"Daniel Naber","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexReader#getTermFreqVector(int,String).mjava","pathOld":"src/java/org/apache/lucene/index/IndexReader#getTermFreqVector(int,String).mjava","sourceNew":"  /**\n   *  Return a term frequency vector for the specified document and field. The\n   *  returned vector contains terms and frequencies for the terms in\n   *  the specified field of this document, if the field had the storeTermVector\n   *  flag set. If termvectors had been stored with positions or offsets, a \n   *  TermPositionsVector is returned.\n   * \n   * @param docNumber document for which the term frequency vector is returned\n   * @param field field for which the term frequency vector is returned.\n   * @return term frequency vector May be null if field does not exist in the specified\n   * document or term vector was not stored.\n   * @throws IOException if index cannot be accessed\n   * @see org.apache.lucene.document.Field.TermVector\n   */\n  abstract public TermFreqVector getTermFreqVector(int docNumber, String field)\n          throws IOException;\n\n","sourceOld":"  /**\n   *  Return a term frequency vector for the specified document and field. The\n   *  returned vector contains terms and frequencies for the terms in\n   *  the specified field of this document, if the field had the storeTermVector\n   *  flag set. If termvectors had been stored with positions or offsets, a \n   *  TermPositionsVector is returned.\n   * \n   * @param docNumber document for which the term frequency vector is returned\n   * @param field field for which the term frequency vector is returned.\n   * @return term frequency vector May be null if field does not exist in the specified\n   * document or term vector was not stored.\n   * @throws IOException if index cannot be accessed\n   * @see Field#TermVector\n   */\n  abstract public TermFreqVector getTermFreqVector(int docNumber, String field)\n          throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"87a440b50b70de5339f37ccdc38b18c0955d07e6","date":1224929714,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexReader#getTermFreqVector(int,String).mjava","pathOld":"src/java/org/apache/lucene/index/IndexReader#getTermFreqVector(int,String).mjava","sourceNew":"  /**\n   * Return a term frequency vector for the specified document and field. The\n   * returned vector contains terms and frequencies for the terms in\n   * the specified field of this document, if the field had the storeTermVector\n   * flag set. If termvectors had been stored with positions or offsets, a \n   * {@link TermPositionVector} is returned.\n   * \n   * @param docNumber document for which the term frequency vector is returned\n   * @param field field for which the term frequency vector is returned.\n   * @return term frequency vector May be null if field does not exist in the specified\n   * document or term vector was not stored.\n   * @throws IOException if index cannot be accessed\n   * @see org.apache.lucene.document.Field.TermVector\n   */\n  abstract public TermFreqVector getTermFreqVector(int docNumber, String field)\n          throws IOException;\n\n","sourceOld":"  /**\n   *  Return a term frequency vector for the specified document and field. The\n   *  returned vector contains terms and frequencies for the terms in\n   *  the specified field of this document, if the field had the storeTermVector\n   *  flag set. If termvectors had been stored with positions or offsets, a \n   *  TermPositionsVector is returned.\n   * \n   * @param docNumber document for which the term frequency vector is returned\n   * @param field field for which the term frequency vector is returned.\n   * @return term frequency vector May be null if field does not exist in the specified\n   * document or term vector was not stored.\n   * @throws IOException if index cannot be accessed\n   * @see org.apache.lucene.document.Field.TermVector\n   */\n  abstract public TermFreqVector getTermFreqVector(int docNumber, String field)\n          throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexReader#getTermFreqVector(int,String).mjava","pathOld":"src/java/org/apache/lucene/index/IndexReader#getTermFreqVector(int,String).mjava","sourceNew":"  /**\n   * Return a term frequency vector for the specified document and field. The\n   * returned vector contains terms and frequencies for the terms in\n   * the specified field of this document, if the field had the storeTermVector\n   * flag set. If termvectors had been stored with positions or offsets, a \n   * {@link TermPositionVector} is returned.\n   * \n   * @param docNumber document for which the term frequency vector is returned\n   * @param field field for which the term frequency vector is returned.\n   * @return term frequency vector May be null if field does not exist in the specified\n   * document or term vector was not stored.\n   * @throws IOException if index cannot be accessed\n   * @see org.apache.lucene.document.Field.TermVector\n   */\n  abstract public TermFreqVector getTermFreqVector(int docNumber, String field)\n          throws IOException;\n\n","sourceOld":"  /**\n   * Return a term frequency vector for the specified document and field. The\n   * returned vector contains terms and frequencies for the terms in\n   * the specified field of this document, if the field had the storeTermVector\n   * flag set. If termvectors had been stored with positions or offsets, a \n   * {@link TermPositionVector} is returned.\n   * \n   * @param docNumber document for which the term frequency vector is returned\n   * @param field field for which the term frequency vector is returned.\n   * @return term frequency vector May be null if field does not exist in the specified\n   * document or term vector was not stored.\n   * @throws IOException if index cannot be accessed\n   * @see org.apache.lucene.document.Field.TermVector\n   */\n  abstract public TermFreqVector getTermFreqVector(int docNumber, String field)\n          throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"770281b8a8459cafcdd2354b6a06078fea2d83c9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"87a440b50b70de5339f37ccdc38b18c0955d07e6":["4a0a7d247e80b7ab1b172f7e56d5fcb8bd28232e"],"a640f2908ff0a64357798b9d15211b6a03a19518":["770281b8a8459cafcdd2354b6a06078fea2d83c9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4a0a7d247e80b7ab1b172f7e56d5fcb8bd28232e":["6177f0f28ace66d1538b1e6ac5f1773e5449a0b0"],"6177f0f28ace66d1538b1e6ac5f1773e5449a0b0":["a640f2908ff0a64357798b9d15211b6a03a19518"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["87a440b50b70de5339f37ccdc38b18c0955d07e6"]},"commit2Childs":{"770281b8a8459cafcdd2354b6a06078fea2d83c9":["a640f2908ff0a64357798b9d15211b6a03a19518"],"87a440b50b70de5339f37ccdc38b18c0955d07e6":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["770281b8a8459cafcdd2354b6a06078fea2d83c9"],"a640f2908ff0a64357798b9d15211b6a03a19518":["6177f0f28ace66d1538b1e6ac5f1773e5449a0b0"],"4a0a7d247e80b7ab1b172f7e56d5fcb8bd28232e":["87a440b50b70de5339f37ccdc38b18c0955d07e6"],"6177f0f28ace66d1538b1e6ac5f1773e5449a0b0":["4a0a7d247e80b7ab1b172f7e56d5fcb8bd28232e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}