{"path":"lucene/core/src/java/org/apache/lucene/util/IOUtils#deleteFilesIfExist(Collection[#-extends-Path]).mjava","commits":[{"id":"f1ad1994cbc8b43f9e88736fa981d6cb4deb4006","date":1415321966,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/IOUtils#deleteFilesIfExist(Collection[#-extends-Path]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/IOUtils#deleteFilesIfExist(Iterable[#-extends-Path]).mjava","sourceNew":"  /**\n   * Deletes all given <tt>Path</tt>s, if they exist.  Some of the\n   * <tt>File</tt>s may be null; they are\n   * ignored.  After everything is deleted, the method either\n   * throws the first exception it hit while deleting, or\n   * completes normally if there were no exceptions.\n   * \n   * @param files files to delete\n   */\n  public static void deleteFilesIfExist(Collection<? extends Path> files) throws IOException {\n    Throwable th = null;\n\n    for (Path file : files) {\n      try {\n        if (file != null) {\n          Files.deleteIfExists(file);\n        }\n      } catch (Throwable t) {\n        addSuppressed(th, t);\n        if (th == null) {\n          th = t;\n        }\n      }\n    }\n\n    reThrow(th);\n  }\n\n","sourceOld":"  /**\n   * Deletes all given <tt>Path</tt>s, if they exist.  Some of the\n   * <tt>File</tt>s may be null; they are\n   * ignored.  After everything is deleted, the method either\n   * throws the first exception it hit while deleting, or\n   * completes normally if there were no exceptions.\n   * \n   * @param files files to delete\n   */\n  public static void deleteFilesIfExist(Iterable<? extends Path> files) throws IOException {\n    Throwable th = null;\n\n    for (Path file : files) {\n      try {\n        if (file != null) {\n          Files.deleteIfExists(file);\n        }\n      } catch (Throwable t) {\n        addSuppressed(th, t);\n        if (th == null) {\n          th = t;\n        }\n      }\n    }\n\n    reThrow(th);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"97fc96e6cc460e0ec1fb904a9c7ecd80680780c2","date":1493374641,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/IOUtils#deleteFilesIfExist(Collection[#-extends-Path]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/IOUtils#deleteFilesIfExist(Collection[#-extends-Path]).mjava","sourceNew":"  /**\n   * Deletes all given <tt>Path</tt>s, if they exist.  Some of the\n   * <tt>File</tt>s may be null; they are\n   * ignored.  After everything is deleted, the method either\n   * throws the first exception it hit while deleting, or\n   * completes normally if there were no exceptions.\n   * \n   * @param files files to delete\n   */\n  public static void deleteFilesIfExist(Collection<? extends Path> files) throws IOException {\n    Throwable th = null;\n\n    for (Path file : files) {\n      try {\n        if (file != null) {\n          Files.deleteIfExists(file);\n        }\n      } catch (Throwable t) {\n        addSuppressed(th, t);\n        if (th == null) {\n          th = t;\n        }\n      }\n    }\n\n    if (th != null) {\n      throw rethrowAlways(th);\n    }\n  }\n\n","sourceOld":"  /**\n   * Deletes all given <tt>Path</tt>s, if they exist.  Some of the\n   * <tt>File</tt>s may be null; they are\n   * ignored.  After everything is deleted, the method either\n   * throws the first exception it hit while deleting, or\n   * completes normally if there were no exceptions.\n   * \n   * @param files files to delete\n   */\n  public static void deleteFilesIfExist(Collection<? extends Path> files) throws IOException {\n    Throwable th = null;\n\n    for (Path file : files) {\n      try {\n        if (file != null) {\n          Files.deleteIfExists(file);\n        }\n      } catch (Throwable t) {\n        addSuppressed(th, t);\n        if (th == null) {\n          th = t;\n        }\n      }\n    }\n\n    reThrow(th);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/IOUtils#deleteFilesIfExist(Collection[#-extends-Path]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/IOUtils#deleteFilesIfExist(Collection[#-extends-Path]).mjava","sourceNew":"  /**\n   * Deletes all given <tt>Path</tt>s, if they exist.  Some of the\n   * <tt>File</tt>s may be null; they are\n   * ignored.  After everything is deleted, the method either\n   * throws the first exception it hit while deleting, or\n   * completes normally if there were no exceptions.\n   * \n   * @param files files to delete\n   */\n  public static void deleteFilesIfExist(Collection<? extends Path> files) throws IOException {\n    Throwable th = null;\n\n    for (Path file : files) {\n      try {\n        if (file != null) {\n          Files.deleteIfExists(file);\n        }\n      } catch (Throwable t) {\n        addSuppressed(th, t);\n        if (th == null) {\n          th = t;\n        }\n      }\n    }\n\n    if (th != null) {\n      throw rethrowAlways(th);\n    }\n  }\n\n","sourceOld":"  /**\n   * Deletes all given <tt>Path</tt>s, if they exist.  Some of the\n   * <tt>File</tt>s may be null; they are\n   * ignored.  After everything is deleted, the method either\n   * throws the first exception it hit while deleting, or\n   * completes normally if there were no exceptions.\n   * \n   * @param files files to delete\n   */\n  public static void deleteFilesIfExist(Collection<? extends Path> files) throws IOException {\n    Throwable th = null;\n\n    for (Path file : files) {\n      try {\n        if (file != null) {\n          Files.deleteIfExists(file);\n        }\n      } catch (Throwable t) {\n        addSuppressed(th, t);\n        if (th == null) {\n          th = t;\n        }\n      }\n    }\n\n    reThrow(th);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb04d6a79e860154f2a1c519790fc42f5a792915","date":1521621668,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/IOUtils#deleteFilesIfExist(Collection[#-extends-Path]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/IOUtils#deleteFilesIfExist(Collection[#-extends-Path]).mjava","sourceNew":"  /**\n   * Deletes all given <tt>Path</tt>s, if they exist.  Some of the\n   * <tt>File</tt>s may be null; they are\n   * ignored.  After everything is deleted, the method either\n   * throws the first exception it hit while deleting, or\n   * completes normally if there were no exceptions.\n   * \n   * @param files files to delete\n   */\n  public static void deleteFilesIfExist(Collection<? extends Path> files) throws IOException {\n    Throwable th = null;\n    for (Path file : files) {\n      try {\n        if (file != null) {\n          Files.deleteIfExists(file);\n        }\n      } catch (Throwable t) {\n        th = useOrSuppress(th, t);\n      }\n    }\n\n    if (th != null) {\n      throw rethrowAlways(th);\n    }\n  }\n\n","sourceOld":"  /**\n   * Deletes all given <tt>Path</tt>s, if they exist.  Some of the\n   * <tt>File</tt>s may be null; they are\n   * ignored.  After everything is deleted, the method either\n   * throws the first exception it hit while deleting, or\n   * completes normally if there were no exceptions.\n   * \n   * @param files files to delete\n   */\n  public static void deleteFilesIfExist(Collection<? extends Path> files) throws IOException {\n    Throwable th = null;\n\n    for (Path file : files) {\n      try {\n        if (file != null) {\n          Files.deleteIfExists(file);\n        }\n      } catch (Throwable t) {\n        addSuppressed(th, t);\n        if (th == null) {\n          th = t;\n        }\n      }\n    }\n\n    if (th != null) {\n      throw rethrowAlways(th);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6815b5b5d6334b2245dd7be2f8b6cca949bf7f43","date":1521731438,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/IOUtils#deleteFilesIfExist(Collection[#-extends-Path]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/IOUtils#deleteFilesIfExist(Collection[#-extends-Path]).mjava","sourceNew":"  /**\n   * Deletes all given <tt>Path</tt>s, if they exist.  Some of the\n   * <tt>File</tt>s may be null; they are\n   * ignored.  After everything is deleted, the method either\n   * throws the first exception it hit while deleting, or\n   * completes normally if there were no exceptions.\n   * \n   * @param files files to delete\n   */\n  public static void deleteFilesIfExist(Collection<? extends Path> files) throws IOException {\n    Throwable th = null;\n    for (Path file : files) {\n      try {\n        if (file != null) {\n          Files.deleteIfExists(file);\n        }\n      } catch (Throwable t) {\n        th = useOrSuppress(th, t);\n      }\n    }\n\n    if (th != null) {\n      throw rethrowAlways(th);\n    }\n  }\n\n","sourceOld":"  /**\n   * Deletes all given <tt>Path</tt>s, if they exist.  Some of the\n   * <tt>File</tt>s may be null; they are\n   * ignored.  After everything is deleted, the method either\n   * throws the first exception it hit while deleting, or\n   * completes normally if there were no exceptions.\n   * \n   * @param files files to delete\n   */\n  public static void deleteFilesIfExist(Collection<? extends Path> files) throws IOException {\n    Throwable th = null;\n\n    for (Path file : files) {\n      try {\n        if (file != null) {\n          Files.deleteIfExists(file);\n        }\n      } catch (Throwable t) {\n        addSuppressed(th, t);\n        if (th == null) {\n          th = t;\n        }\n      }\n    }\n\n    if (th != null) {\n      throw rethrowAlways(th);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9e3751ad4cc85eb979419cf5469dfba266eae56a","date":1581046252,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/IOUtils#deleteFilesIfExist(Collection[#-extends-Path]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/IOUtils#deleteFilesIfExist(Collection[#-extends-Path]).mjava","sourceNew":"  /**\n   * Deletes all given <code>Path</code>s, if they exist.  Some of the\n   * <code>File</code>s may be null; they are\n   * ignored.  After everything is deleted, the method either\n   * throws the first exception it hit while deleting, or\n   * completes normally if there were no exceptions.\n   * \n   * @param files files to delete\n   */\n  public static void deleteFilesIfExist(Collection<? extends Path> files) throws IOException {\n    Throwable th = null;\n    for (Path file : files) {\n      try {\n        if (file != null) {\n          Files.deleteIfExists(file);\n        }\n      } catch (Throwable t) {\n        th = useOrSuppress(th, t);\n      }\n    }\n\n    if (th != null) {\n      throw rethrowAlways(th);\n    }\n  }\n\n","sourceOld":"  /**\n   * Deletes all given <tt>Path</tt>s, if they exist.  Some of the\n   * <tt>File</tt>s may be null; they are\n   * ignored.  After everything is deleted, the method either\n   * throws the first exception it hit while deleting, or\n   * completes normally if there were no exceptions.\n   * \n   * @param files files to delete\n   */\n  public static void deleteFilesIfExist(Collection<? extends Path> files) throws IOException {\n    Throwable th = null;\n    for (Path file : files) {\n      try {\n        if (file != null) {\n          Files.deleteIfExists(file);\n        }\n      } catch (Throwable t) {\n        th = useOrSuppress(th, t);\n      }\n    }\n\n    if (th != null) {\n      throw rethrowAlways(th);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6815b5b5d6334b2245dd7be2f8b6cca949bf7f43":["97fc96e6cc460e0ec1fb904a9c7ecd80680780c2","bb04d6a79e860154f2a1c519790fc42f5a792915"],"e9017cf144952056066919f1ebc7897ff9bd71b1":["f1ad1994cbc8b43f9e88736fa981d6cb4deb4006","97fc96e6cc460e0ec1fb904a9c7ecd80680780c2"],"9e3751ad4cc85eb979419cf5469dfba266eae56a":["6815b5b5d6334b2245dd7be2f8b6cca949bf7f43"],"97fc96e6cc460e0ec1fb904a9c7ecd80680780c2":["f1ad1994cbc8b43f9e88736fa981d6cb4deb4006"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bb04d6a79e860154f2a1c519790fc42f5a792915":["97fc96e6cc460e0ec1fb904a9c7ecd80680780c2"],"f1ad1994cbc8b43f9e88736fa981d6cb4deb4006":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9e3751ad4cc85eb979419cf5469dfba266eae56a"]},"commit2Childs":{"6815b5b5d6334b2245dd7be2f8b6cca949bf7f43":["9e3751ad4cc85eb979419cf5469dfba266eae56a"],"e9017cf144952056066919f1ebc7897ff9bd71b1":[],"9e3751ad4cc85eb979419cf5469dfba266eae56a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"97fc96e6cc460e0ec1fb904a9c7ecd80680780c2":["6815b5b5d6334b2245dd7be2f8b6cca949bf7f43","e9017cf144952056066919f1ebc7897ff9bd71b1","bb04d6a79e860154f2a1c519790fc42f5a792915"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f1ad1994cbc8b43f9e88736fa981d6cb4deb4006"],"bb04d6a79e860154f2a1c519790fc42f5a792915":["6815b5b5d6334b2245dd7be2f8b6cca949bf7f43"],"f1ad1994cbc8b43f9e88736fa981d6cb4deb4006":["e9017cf144952056066919f1ebc7897ff9bd71b1","97fc96e6cc460e0ec1fb904a9c7ecd80680780c2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}