{"path":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/AbstractDIHJdbcTestCase#afterDihJdbcTest().mjava","commits":[{"id":"78bba2225c30df6990ac27a75743069e928ef81d","date":1352741580,"type":0,"author":"James Dyer","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/AbstractDIHJdbcTestCase#afterDihJdbcTest().mjava","pathOld":"/dev/null","sourceNew":"  @After\n  public void afterDihJdbcTest() throws Exception {\n    Connection conn = null;\n    Statement s = null;\n    try { \n      if(dbToUse==Database.DERBY) {\n        try {\n          conn = DriverManager.getConnection(\"jdbc:derby:memory:derbyDB;drop=true\");\n        } catch(SQLException e) {\n          if(!\"08006\".equals(e.getSQLState())) {\n            throw e;\n          }\n        }              \n      } else if(dbToUse==Database.HSQLDB) {\n        conn = DriverManager.getConnection(\"jdbc:hsqldb:mem:.\");    \n        s = conn.createStatement();\n        s.executeUpdate(\"shutdown\");\n      }\n    } catch (SQLException e) {\n      throw e;\n    } finally {\n      try { s.close(); } catch(Exception ex) { }\n      try { conn.close(); } catch(Exception ex) { }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["98b88586d26d783d091b15ef29416c1d2c321a78"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b4804614e0358954d5d9f51128fcf3cd79e6e25b","date":1352831451,"type":3,"author":"James Dyer","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/AbstractDIHJdbcTestCase#afterDihJdbcTest().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/AbstractDIHJdbcTestCase#afterDihJdbcTest().mjava","sourceNew":"  @After\n  public void afterDihJdbcTest() throws Exception {\n    Connection conn = null;\n    Statement s = null;\n    try {\n      if (dbToUse == Database.DERBY) {\n        try {\n          conn = DriverManager\n              .getConnection(\"jdbc:derby:memory:derbyDB;drop=true\");\n        } catch (SQLException e) {\n          if (!\"08006\".equals(e.getSQLState())) {\n            throw e;\n          }\n        }\n      } else if (dbToUse == Database.HSQLDB) {\n        conn = DriverManager.getConnection(\"jdbc:hsqldb:mem:.\");\n        s = conn.createStatement();\n        s.executeUpdate(\"shutdown\");\n      }\n    } catch (SQLException e) {\n      throw e;\n    } finally {\n      try {\n        s.close();\n      } catch (Exception ex) {}\n      try {\n        conn.close();\n      } catch (Exception ex) {}\n    }\n  }\n\n","sourceOld":"  @After\n  public void afterDihJdbcTest() throws Exception {\n    Connection conn = null;\n    Statement s = null;\n    try { \n      if(dbToUse==Database.DERBY) {\n        try {\n          conn = DriverManager.getConnection(\"jdbc:derby:memory:derbyDB;drop=true\");\n        } catch(SQLException e) {\n          if(!\"08006\".equals(e.getSQLState())) {\n            throw e;\n          }\n        }              \n      } else if(dbToUse==Database.HSQLDB) {\n        conn = DriverManager.getConnection(\"jdbc:hsqldb:mem:.\");    \n        s = conn.createStatement();\n        s.executeUpdate(\"shutdown\");\n      }\n    } catch (SQLException e) {\n      throw e;\n    } finally {\n      try { s.close(); } catch(Exception ex) { }\n      try { conn.close(); } catch(Exception ex) { }\n    }\n  }\n\n","bugFix":null,"bugIntro":["eeaccf8ed3c4b0b78b25b3d8c3e14fcd60a65531"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"98b88586d26d783d091b15ef29416c1d2c321a78","date":1353527996,"type":3,"author":"James Dyer","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/AbstractDIHJdbcTestCase#afterDihJdbcTest().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/AbstractDIHJdbcTestCase#afterDihJdbcTest().mjava","sourceNew":"  @After\n  public void afterDihJdbcTest() throws Exception {\n    Connection conn = null;\n    Statement s = null;\n    try {\n      if (dbToUse == Database.DERBY) {\n        try {\n          conn = DriverManager\n              .getConnection(\"jdbc:derby:memory:derbyDB;drop=true\");\n        } catch (SQLException e) {\n          if (!\"08006\".equals(e.getSQLState())) {\n            throw e;\n          }\n        }\n      } else if (dbToUse == Database.HSQLDB) {\n        conn = DriverManager.getConnection(\"jdbc:hsqldb:mem:.\");\n        s = conn.createStatement();\n        s.executeUpdate(\"shutdown\");\n      }\n    } catch (SQLException e) {\n      if(!skipThisTest) {\n        throw e;\n      }\n    } finally {\n      try {\n        s.close();\n      } catch (Exception ex) {}\n      try {\n        conn.close();\n      } catch (Exception ex) {}\n    }\n  }\n\n","sourceOld":"  @After\n  public void afterDihJdbcTest() throws Exception {\n    Connection conn = null;\n    Statement s = null;\n    try {\n      if (dbToUse == Database.DERBY) {\n        try {\n          conn = DriverManager\n              .getConnection(\"jdbc:derby:memory:derbyDB;drop=true\");\n        } catch (SQLException e) {\n          if (!\"08006\".equals(e.getSQLState())) {\n            throw e;\n          }\n        }\n      } else if (dbToUse == Database.HSQLDB) {\n        conn = DriverManager.getConnection(\"jdbc:hsqldb:mem:.\");\n        s = conn.createStatement();\n        s.executeUpdate(\"shutdown\");\n      }\n    } catch (SQLException e) {\n      throw e;\n    } finally {\n      try {\n        s.close();\n      } catch (Exception ex) {}\n      try {\n        conn.close();\n      } catch (Exception ex) {}\n    }\n  }\n\n","bugFix":["78bba2225c30df6990ac27a75743069e928ef81d"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"407687e67faf6e1f02a211ca078d8e3eed631027","date":1355157407,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/AbstractDIHJdbcTestCase#afterDihJdbcTest().mjava","pathOld":"/dev/null","sourceNew":"  @After\n  public void afterDihJdbcTest() throws Exception {\n    Connection conn = null;\n    Statement s = null;\n    try {\n      if (dbToUse == Database.DERBY) {\n        try {\n          conn = DriverManager\n              .getConnection(\"jdbc:derby:memory:derbyDB;drop=true\");\n        } catch (SQLException e) {\n          if (!\"08006\".equals(e.getSQLState())) {\n            throw e;\n          }\n        }\n      } else if (dbToUse == Database.HSQLDB) {\n        conn = DriverManager.getConnection(\"jdbc:hsqldb:mem:.\");\n        s = conn.createStatement();\n        s.executeUpdate(\"shutdown\");\n      }\n    } catch (SQLException e) {\n      if(!skipThisTest) {\n        throw e;\n      }\n    } finally {\n      try {\n        s.close();\n      } catch (Exception ex) {}\n      try {\n        conn.close();\n      } catch (Exception ex) {}\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"eeaccf8ed3c4b0b78b25b3d8c3e14fcd60a65531","date":1406379970,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/AbstractDIHJdbcTestCase#afterDihJdbcTest().mjava","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/AbstractDIHJdbcTestCase#afterDihJdbcTest().mjava","sourceNew":"  @After\n  public void afterDihJdbcTest() throws Exception {\n    Connection conn = null;\n    Statement s = null;\n    try {\n      if (dbToUse == Database.DERBY) {\n        try {\n          conn = DriverManager\n              .getConnection(\"jdbc:derby:memory:derbyDB;drop=true;territory=en_US\");\n        } catch (SQLException e) {\n          if (!\"08006\".equals(e.getSQLState())) {\n            throw e;\n          }\n        }\n      } else if (dbToUse == Database.HSQLDB) {\n        conn = DriverManager.getConnection(\"jdbc:hsqldb:mem:.\");\n        s = conn.createStatement();\n        s.executeUpdate(\"shutdown\");\n      }\n    } catch (SQLException e) {\n      if(!skipThisTest) {\n        throw e;\n      }\n    } finally {\n      try {\n        s.close();\n      } catch (Exception ex) {}\n      try {\n        conn.close();\n      } catch (Exception ex) {}\n    }\n  }\n\n","sourceOld":"  @After\n  public void afterDihJdbcTest() throws Exception {\n    Connection conn = null;\n    Statement s = null;\n    try {\n      if (dbToUse == Database.DERBY) {\n        try {\n          conn = DriverManager\n              .getConnection(\"jdbc:derby:memory:derbyDB;drop=true\");\n        } catch (SQLException e) {\n          if (!\"08006\".equals(e.getSQLState())) {\n            throw e;\n          }\n        }\n      } else if (dbToUse == Database.HSQLDB) {\n        conn = DriverManager.getConnection(\"jdbc:hsqldb:mem:.\");\n        s = conn.createStatement();\n        s.executeUpdate(\"shutdown\");\n      }\n    } catch (SQLException e) {\n      if(!skipThisTest) {\n        throw e;\n      }\n    } finally {\n      try {\n        s.close();\n      } catch (Exception ex) {}\n      try {\n        conn.close();\n      } catch (Exception ex) {}\n    }\n  }\n\n","bugFix":["b4804614e0358954d5d9f51128fcf3cd79e6e25b"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b","date":1598712724,"type":4,"author":"Alexandre Rafalovitch","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/AbstractDIHJdbcTestCase#afterDihJdbcTest().mjava","sourceNew":null,"sourceOld":"  @After\n  public void afterDihJdbcTest() throws Exception {\n    Connection conn = null;\n    Statement s = null;\n    try {\n      if (dbToUse == Database.DERBY) {\n        try {\n          conn = DriverManager\n              .getConnection(\"jdbc:derby:memory:derbyDB;drop=true;territory=en_US\");\n        } catch (SQLException e) {\n          if (!\"08006\".equals(e.getSQLState())) {\n            throw e;\n          }\n        }\n      } else if (dbToUse == Database.HSQLDB) {\n        conn = DriverManager.getConnection(\"jdbc:hsqldb:mem:.\");\n        s = conn.createStatement();\n        s.executeUpdate(\"shutdown\");\n      }\n    } catch (SQLException e) {\n      if(!skipThisTest) {\n        throw e;\n      }\n    } finally {\n      try {\n        s.close();\n      } catch (Exception ex) {}\n      try {\n        conn.close();\n      } catch (Exception ex) {}\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b4804614e0358954d5d9f51128fcf3cd79e6e25b":["78bba2225c30df6990ac27a75743069e928ef81d"],"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["eeaccf8ed3c4b0b78b25b3d8c3e14fcd60a65531"],"78bba2225c30df6990ac27a75743069e928ef81d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"407687e67faf6e1f02a211ca078d8e3eed631027":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","98b88586d26d783d091b15ef29416c1d2c321a78"],"98b88586d26d783d091b15ef29416c1d2c321a78":["b4804614e0358954d5d9f51128fcf3cd79e6e25b"],"eeaccf8ed3c4b0b78b25b3d8c3e14fcd60a65531":["98b88586d26d783d091b15ef29416c1d2c321a78"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b"]},"commit2Childs":{"b4804614e0358954d5d9f51128fcf3cd79e6e25b":["98b88586d26d783d091b15ef29416c1d2c321a78"],"78bba2225c30df6990ac27a75743069e928ef81d":["b4804614e0358954d5d9f51128fcf3cd79e6e25b"],"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["78bba2225c30df6990ac27a75743069e928ef81d","407687e67faf6e1f02a211ca078d8e3eed631027"],"407687e67faf6e1f02a211ca078d8e3eed631027":[],"98b88586d26d783d091b15ef29416c1d2c321a78":["407687e67faf6e1f02a211ca078d8e3eed631027","eeaccf8ed3c4b0b78b25b3d8c3e14fcd60a65531"],"eeaccf8ed3c4b0b78b25b3d8c3e14fcd60a65531":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["407687e67faf6e1f02a211ca078d8e3eed631027","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}