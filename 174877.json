{"path":"lucene/codecs/src/test/org/apache/lucene/codecs/idversion/TestIDVersionPostingsFormat#testMoreThanOneDocPerIDTwoSegments().mjava","commits":[{"id":"0a16b40feb4e6e0d55c1716733bde48296bedd20","date":1400540388,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/codecs/src/test/org/apache/lucene/codecs/idversion/TestIDVersionPostingsFormat#testMoreThanOneDocPerIDTwoSegments().mjava","pathOld":"/dev/null","sourceNew":"  public void testMoreThanOneDocPerIDTwoSegments() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    iwc.setCodec(TestUtil.alwaysPostingsFormat(new IDVersionPostingsFormat()));\n    MergeScheduler ms = iwc.getMergeScheduler();\n    if (ms instanceof ConcurrentMergeScheduler) {\n      iwc.setMergeScheduler(new ConcurrentMergeScheduler() {\n          @Override\n          protected void handleMergeException(Throwable exc) {\n            assertTrue(exc instanceof IllegalArgumentException);\n          }\n        });\n    }\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir, iwc);\n    Document doc = new Document();\n    doc.add(makeIDField(\"id\", 17));\n    w.addDocument(doc);\n    w.commit();\n    doc = new Document();\n    doc.add(makeIDField(\"id\", 17));\n    try {\n      w.addDocument(doc);\n      w.commit();\n      w.forceMerge(1);\n      fail(\"didn't hit exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected: SMS will hit this\n    } catch (IOException ioe) {\n      // expected\n      assertTrue(ioe.getCause() instanceof IllegalArgumentException);\n    }\n    w.w.close();\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0efcf27cd5ca23def8376b4c321970c14dd71623","date":1400662679,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/codecs/src/test/org/apache/lucene/codecs/idversion/TestIDVersionPostingsFormat#testMoreThanOneDocPerIDTwoSegments().mjava","pathOld":"lucene/codecs/src/test/org/apache/lucene/codecs/idversion/TestIDVersionPostingsFormat#testMoreThanOneDocPerIDTwoSegments().mjava","sourceNew":"  public void testMoreThanOneDocPerIDTwoSegments() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    iwc.setCodec(TestUtil.alwaysPostingsFormat(new IDVersionPostingsFormat()));\n    iwc.setMergePolicy(new TieredMergePolicy());\n    MergeScheduler ms = iwc.getMergeScheduler();\n    if (ms instanceof ConcurrentMergeScheduler) {\n      iwc.setMergeScheduler(new ConcurrentMergeScheduler() {\n          @Override\n          protected void handleMergeException(Throwable exc) {\n            assertTrue(exc instanceof IllegalArgumentException);\n          }\n        });\n    }\n    IndexWriter w = new IndexWriter(dir, iwc);\n    Document doc = new Document();\n    doc.add(makeIDField(\"id\", 17));\n    w.addDocument(doc);\n    w.commit();\n    doc = new Document();\n    doc.add(makeIDField(\"id\", 17));\n    try {\n      w.addDocument(doc);\n      w.commit();\n      w.forceMerge(1);\n      fail(\"didn't hit exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected: SMS will hit this\n    } catch (IOException ioe) {\n      // expected\n      assertTrue(ioe.getCause() instanceof IllegalArgumentException);\n    }\n    w.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testMoreThanOneDocPerIDTwoSegments() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    iwc.setCodec(TestUtil.alwaysPostingsFormat(new IDVersionPostingsFormat()));\n    MergeScheduler ms = iwc.getMergeScheduler();\n    if (ms instanceof ConcurrentMergeScheduler) {\n      iwc.setMergeScheduler(new ConcurrentMergeScheduler() {\n          @Override\n          protected void handleMergeException(Throwable exc) {\n            assertTrue(exc instanceof IllegalArgumentException);\n          }\n        });\n    }\n    RandomIndexWriter w = new RandomIndexWriter(random(), dir, iwc);\n    Document doc = new Document();\n    doc.add(makeIDField(\"id\", 17));\n    w.addDocument(doc);\n    w.commit();\n    doc = new Document();\n    doc.add(makeIDField(\"id\", 17));\n    try {\n      w.addDocument(doc);\n      w.commit();\n      w.forceMerge(1);\n      fail(\"didn't hit exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected: SMS will hit this\n    } catch (IOException ioe) {\n      // expected\n      assertTrue(ioe.getCause() instanceof IllegalArgumentException);\n    }\n    w.w.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cf3e973ce145ef8b164e2e7c0d57cf807cf9a6e","date":1400786907,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/sandbox/src/test/org/apache/lucene/codecs/idversion/TestIDVersionPostingsFormat#testMoreThanOneDocPerIDTwoSegments().mjava","pathOld":"lucene/codecs/src/test/org/apache/lucene/codecs/idversion/TestIDVersionPostingsFormat#testMoreThanOneDocPerIDTwoSegments().mjava","sourceNew":"  public void testMoreThanOneDocPerIDTwoSegments() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    iwc.setCodec(TestUtil.alwaysPostingsFormat(new IDVersionPostingsFormat()));\n    iwc.setMergePolicy(new TieredMergePolicy());\n    MergeScheduler ms = iwc.getMergeScheduler();\n    if (ms instanceof ConcurrentMergeScheduler) {\n      iwc.setMergeScheduler(new ConcurrentMergeScheduler() {\n          @Override\n          protected void handleMergeException(Throwable exc) {\n            assertTrue(exc instanceof IllegalArgumentException);\n          }\n        });\n    }\n    IndexWriter w = new IndexWriter(dir, iwc);\n    Document doc = new Document();\n    doc.add(makeIDField(\"id\", 17));\n    w.addDocument(doc);\n    w.commit();\n    doc = new Document();\n    doc.add(makeIDField(\"id\", 17));\n    try {\n      w.addDocument(doc);\n      w.commit();\n      w.forceMerge(1);\n      fail(\"didn't hit exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected: SMS will hit this\n    } catch (IOException ioe) {\n      // expected\n      assertTrue(ioe.getCause() instanceof IllegalArgumentException);\n    }\n    w.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testMoreThanOneDocPerIDTwoSegments() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = newIndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    iwc.setCodec(TestUtil.alwaysPostingsFormat(new IDVersionPostingsFormat()));\n    iwc.setMergePolicy(new TieredMergePolicy());\n    MergeScheduler ms = iwc.getMergeScheduler();\n    if (ms instanceof ConcurrentMergeScheduler) {\n      iwc.setMergeScheduler(new ConcurrentMergeScheduler() {\n          @Override\n          protected void handleMergeException(Throwable exc) {\n            assertTrue(exc instanceof IllegalArgumentException);\n          }\n        });\n    }\n    IndexWriter w = new IndexWriter(dir, iwc);\n    Document doc = new Document();\n    doc.add(makeIDField(\"id\", 17));\n    w.addDocument(doc);\n    w.commit();\n    doc = new Document();\n    doc.add(makeIDField(\"id\", 17));\n    try {\n      w.addDocument(doc);\n      w.commit();\n      w.forceMerge(1);\n      fail(\"didn't hit exception\");\n    } catch (IllegalArgumentException iae) {\n      // expected: SMS will hit this\n    } catch (IOException ioe) {\n      // expected\n      assertTrue(ioe.getCause() instanceof IllegalArgumentException);\n    }\n    w.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3cf3e973ce145ef8b164e2e7c0d57cf807cf9a6e":["0efcf27cd5ca23def8376b4c321970c14dd71623"],"0a16b40feb4e6e0d55c1716733bde48296bedd20":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"0efcf27cd5ca23def8376b4c321970c14dd71623":["0a16b40feb4e6e0d55c1716733bde48296bedd20"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"3cf3e973ce145ef8b164e2e7c0d57cf807cf9a6e":[],"0a16b40feb4e6e0d55c1716733bde48296bedd20":["0efcf27cd5ca23def8376b4c321970c14dd71623"],"0efcf27cd5ca23def8376b4c321970c14dd71623":["3cf3e973ce145ef8b164e2e7c0d57cf807cf9a6e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0a16b40feb4e6e0d55c1716733bde48296bedd20","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["3cf3e973ce145ef8b164e2e7c0d57cf807cf9a6e","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}