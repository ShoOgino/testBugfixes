{"path":"solr/solrj/src/java/org/apache/solr/common/params/SolrParams#iterator().mjava","commits":[{"id":"8a1c70b003d9abbd2ce7878bce14b6ec28fb05e4","date":1523635523,"type":0,"author":"David Smiley","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/params/SolrParams#iterator().mjava","pathOld":"/dev/null","sourceNew":"  /** Returns an Iterator of {@code Map.Entry} providing a multi-map view.  Treat it as read-only. */\n  @Override\n  public Iterator<Map.Entry<String, String[]>> iterator() {\n    Iterator<String> it = getParameterNamesIterator();\n    return new Iterator<Map.Entry<String, String[]>>() {\n      @Override\n      public boolean hasNext() {\n        return it.hasNext();\n      }\n      @Override\n      public Map.Entry<String, String[]> next() {\n        String key = it.next();\n        return new Map.Entry<String, String[]>() {\n          @Override\n          public String getKey() {\n            return key;\n          }\n\n          @Override\n          public String[] getValue() {\n            return getParams(key);\n          }\n\n          @Override\n          public String[] setValue(String[] newValue) {\n            throw new UnsupportedOperationException(\"read-only\");\n          }\n\n          @Override\n          public String toString() {\n            return getKey() + \"=\" + Arrays.toString(getValue());\n          }\n        };\n      }\n    };\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1cc17990871fe421019acbdd0ed59c8644b9154c","date":1523636883,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/params/SolrParams#iterator().mjava","pathOld":"/dev/null","sourceNew":"  /** Returns an Iterator of {@code Map.Entry} providing a multi-map view.  Treat it as read-only. */\n  @Override\n  public Iterator<Map.Entry<String, String[]>> iterator() {\n    Iterator<String> it = getParameterNamesIterator();\n    return new Iterator<Map.Entry<String, String[]>>() {\n      @Override\n      public boolean hasNext() {\n        return it.hasNext();\n      }\n      @Override\n      public Map.Entry<String, String[]> next() {\n        String key = it.next();\n        return new Map.Entry<String, String[]>() {\n          @Override\n          public String getKey() {\n            return key;\n          }\n\n          @Override\n          public String[] getValue() {\n            return getParams(key);\n          }\n\n          @Override\n          public String[] setValue(String[] newValue) {\n            throw new UnsupportedOperationException(\"read-only\");\n          }\n\n          @Override\n          public String toString() {\n            return getKey() + \"=\" + Arrays.toString(getValue());\n          }\n        };\n      }\n    };\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1cc17990871fe421019acbdd0ed59c8644b9154c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","8a1c70b003d9abbd2ce7878bce14b6ec28fb05e4"],"8a1c70b003d9abbd2ce7878bce14b6ec28fb05e4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1cc17990871fe421019acbdd0ed59c8644b9154c"]},"commit2Childs":{"1cc17990871fe421019acbdd0ed59c8644b9154c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"8a1c70b003d9abbd2ce7878bce14b6ec28fb05e4":["1cc17990871fe421019acbdd0ed59c8644b9154c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1cc17990871fe421019acbdd0ed59c8644b9154c","8a1c70b003d9abbd2ce7878bce14b6ec28fb05e4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}