{"path":"lucene/suggest/src/java/org/apache/lucene/search/suggest/Sort#defaultTempDir().mjava","commits":[{"id":"847d1294c8ff2f0172af20892ef98a1c6a952e09","date":1359503775,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/Sort#defaultTempDir().mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/fst/Sort#defaultTempDir().mjava","sourceNew":"  /**\n   * Returns the default temporary directory. By default, java.io.tmpdir. If not accessible\n   * or not available, an IOException is thrown\n   */\n  public static File defaultTempDir() throws IOException {\n    String tempDirPath = System.getProperty(\"java.io.tmpdir\");\n    if (tempDirPath == null) \n      throw new IOException(\"Java has no temporary folder property (java.io.tmpdir)?\");\n\n    File tempDirectory = new File(tempDirPath);\n    if (!tempDirectory.exists() || !tempDirectory.canWrite()) {\n      throw new IOException(\"Java's temporary folder not present or writeable?: \" \n          + tempDirectory.getAbsolutePath());\n    }\n    return tempDirectory;\n  }\n\n","sourceOld":"  /**\n   * Returns the default temporary directory. By default, java.io.tmpdir. If not accessible\n   * or not available, an IOException is thrown\n   */\n  public static File defaultTempDir() throws IOException {\n    String tempDirPath = System.getProperty(\"java.io.tmpdir\");\n    if (tempDirPath == null) \n      throw new IOException(\"Java has no temporary folder property (java.io.tmpdir)?\");\n\n    File tempDirectory = new File(tempDirPath);\n    if (!tempDirectory.exists() || !tempDirectory.canWrite()) {\n      throw new IOException(\"Java's temporary folder not present or writeable?: \" \n          + tempDirectory.getAbsolutePath());\n    }\n    return tempDirectory;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d4d69c535930b5cce125cff868d40f6373dc27d4","date":1360270101,"type":1,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/Sort#defaultTempDir().mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/fst/Sort#defaultTempDir().mjava","sourceNew":"  /**\n   * Returns the default temporary directory. By default, java.io.tmpdir. If not accessible\n   * or not available, an IOException is thrown\n   */\n  public static File defaultTempDir() throws IOException {\n    String tempDirPath = System.getProperty(\"java.io.tmpdir\");\n    if (tempDirPath == null) \n      throw new IOException(\"Java has no temporary folder property (java.io.tmpdir)?\");\n\n    File tempDirectory = new File(tempDirPath);\n    if (!tempDirectory.exists() || !tempDirectory.canWrite()) {\n      throw new IOException(\"Java's temporary folder not present or writeable?: \" \n          + tempDirectory.getAbsolutePath());\n    }\n    return tempDirectory;\n  }\n\n","sourceOld":"  /**\n   * Returns the default temporary directory. By default, java.io.tmpdir. If not accessible\n   * or not available, an IOException is thrown\n   */\n  public static File defaultTempDir() throws IOException {\n    String tempDirPath = System.getProperty(\"java.io.tmpdir\");\n    if (tempDirPath == null) \n      throw new IOException(\"Java has no temporary folder property (java.io.tmpdir)?\");\n\n    File tempDirectory = new File(tempDirPath);\n    if (!tempDirectory.exists() || !tempDirectory.canWrite()) {\n      throw new IOException(\"Java's temporary folder not present or writeable?: \" \n          + tempDirectory.getAbsolutePath());\n    }\n    return tempDirectory;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"36f5a8c57e16c0f801006a52f87c75378427852e","date":1393256707,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/OfflineSorter#defaultTempDir().mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/Sort#defaultTempDir().mjava","sourceNew":"  /**\n   * Returns the default temporary directory. By default, java.io.tmpdir. If not accessible\n   * or not available, an IOException is thrown\n   */\n  public static File defaultTempDir() throws IOException {\n    String tempDirPath = System.getProperty(\"java.io.tmpdir\");\n    if (tempDirPath == null) \n      throw new IOException(\"Java has no temporary folder property (java.io.tmpdir)?\");\n\n    File tempDirectory = new File(tempDirPath);\n    if (!tempDirectory.exists() || !tempDirectory.canWrite()) {\n      throw new IOException(\"Java's temporary folder not present or writeable?: \" \n          + tempDirectory.getAbsolutePath());\n    }\n    return tempDirectory;\n  }\n\n","sourceOld":"  /**\n   * Returns the default temporary directory. By default, java.io.tmpdir. If not accessible\n   * or not available, an IOException is thrown\n   */\n  public static File defaultTempDir() throws IOException {\n    String tempDirPath = System.getProperty(\"java.io.tmpdir\");\n    if (tempDirPath == null) \n      throw new IOException(\"Java has no temporary folder property (java.io.tmpdir)?\");\n\n    File tempDirectory = new File(tempDirPath);\n    if (!tempDirectory.exists() || !tempDirectory.canWrite()) {\n      throw new IOException(\"Java's temporary folder not present or writeable?: \" \n          + tempDirectory.getAbsolutePath());\n    }\n    return tempDirectory;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba791bce8103c79e38f957e9c5a53a75871bd918","date":1393539206,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/util/OfflineSorter#defaultTempDir().mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/Sort#defaultTempDir().mjava","sourceNew":"  /**\n   * Returns the default temporary directory. By default, java.io.tmpdir. If not accessible\n   * or not available, an IOException is thrown\n   */\n  public static File defaultTempDir() throws IOException {\n    String tempDirPath = System.getProperty(\"java.io.tmpdir\");\n    if (tempDirPath == null) \n      throw new IOException(\"Java has no temporary folder property (java.io.tmpdir)?\");\n\n    File tempDirectory = new File(tempDirPath);\n    if (!tempDirectory.exists() || !tempDirectory.canWrite()) {\n      throw new IOException(\"Java's temporary folder not present or writeable?: \" \n          + tempDirectory.getAbsolutePath());\n    }\n    return tempDirectory;\n  }\n\n","sourceOld":"  /**\n   * Returns the default temporary directory. By default, java.io.tmpdir. If not accessible\n   * or not available, an IOException is thrown\n   */\n  public static File defaultTempDir() throws IOException {\n    String tempDirPath = System.getProperty(\"java.io.tmpdir\");\n    if (tempDirPath == null) \n      throw new IOException(\"Java has no temporary folder property (java.io.tmpdir)?\");\n\n    File tempDirectory = new File(tempDirPath);\n    if (!tempDirectory.exists() || !tempDirectory.canWrite()) {\n      throw new IOException(\"Java's temporary folder not present or writeable?: \" \n          + tempDirectory.getAbsolutePath());\n    }\n    return tempDirectory;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d4d69c535930b5cce125cff868d40f6373dc27d4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","847d1294c8ff2f0172af20892ef98a1c6a952e09"],"ba791bce8103c79e38f957e9c5a53a75871bd918":["d4d69c535930b5cce125cff868d40f6373dc27d4","36f5a8c57e16c0f801006a52f87c75378427852e"],"36f5a8c57e16c0f801006a52f87c75378427852e":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"847d1294c8ff2f0172af20892ef98a1c6a952e09":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ba791bce8103c79e38f957e9c5a53a75871bd918"]},"commit2Childs":{"d4d69c535930b5cce125cff868d40f6373dc27d4":["ba791bce8103c79e38f957e9c5a53a75871bd918","36f5a8c57e16c0f801006a52f87c75378427852e"],"ba791bce8103c79e38f957e9c5a53a75871bd918":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"36f5a8c57e16c0f801006a52f87c75378427852e":["ba791bce8103c79e38f957e9c5a53a75871bd918"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d4d69c535930b5cce125cff868d40f6373dc27d4","847d1294c8ff2f0172af20892ef98a1c6a952e09"],"847d1294c8ff2f0172af20892ef98a1c6a952e09":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}