{"path":"solr/core/src/test/org/apache/solr/handler/component/DistributedQueryComponentOptimizationTest#assertParamsEquals(TrackingShardHandlerFactory.RequestTrackingQueue,String,String,String,int,String...).mjava","commits":[{"id":"a05704e317032f0bcc6bc978b6c6c5af1cba5cd9","date":1424933272,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/DistributedQueryComponentOptimizationTest#assertParamsEquals(TrackingShardHandlerFactory.RequestTrackingQueue,String,String,String,int,String...).mjava","pathOld":"/dev/null","sourceNew":"  private void assertParamsEquals(TrackingShardHandlerFactory.RequestTrackingQueue trackingQueue, String collection, String shard, String paramName, int purpose, String... values) {\n    TrackingShardHandlerFactory.ShardRequestAndParams getByIdRequest = trackingQueue.getShardRequestByPurpose(cloudClient.getZkStateReader(), collection, shard, purpose);\n    assertParamsEquals(getByIdRequest, paramName, values);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":0,"author":"Ryan Ernst","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/DistributedQueryComponentOptimizationTest#assertParamsEquals(TrackingShardHandlerFactory.RequestTrackingQueue,String,String,String,int,String...).mjava","pathOld":"/dev/null","sourceNew":"  private void assertParamsEquals(TrackingShardHandlerFactory.RequestTrackingQueue trackingQueue, String collection, String shard, String paramName, int purpose, String... values) {\n    TrackingShardHandlerFactory.ShardRequestAndParams getByIdRequest = trackingQueue.getShardRequestByPurpose(cloudClient.getZkStateReader(), collection, shard, purpose);\n    assertParamsEquals(getByIdRequest, paramName, values);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5ebf70dabe6279454c5ff460bdea3f0dc2814a86","date":1463672611,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/DistributedQueryComponentOptimizationTest#assertParamsEquals(TrackingShardHandlerFactory.RequestTrackingQueue,String,String,String,int,String...).mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/DistributedQueryComponentOptimizationTest#assertParamsEquals(TrackingShardHandlerFactory.RequestTrackingQueue,String,String,String,int,String...).mjava","sourceNew":"  private void assertParamsEquals(TrackingShardHandlerFactory.RequestTrackingQueue trackingQueue, String collection, String shard, String paramName, int purpose, String... values) {\n    TrackingShardHandlerFactory.ShardRequestAndParams getByIdRequest\n        = trackingQueue.getShardRequestByPurpose(cluster.getSolrClient().getZkStateReader(), collection, shard, purpose);\n    assertParamsEquals(getByIdRequest, paramName, values);\n  }\n\n","sourceOld":"  private void assertParamsEquals(TrackingShardHandlerFactory.RequestTrackingQueue trackingQueue, String collection, String shard, String paramName, int purpose, String... values) {\n    TrackingShardHandlerFactory.ShardRequestAndParams getByIdRequest = trackingQueue.getShardRequestByPurpose(cloudClient.getZkStateReader(), collection, shard, purpose);\n    assertParamsEquals(getByIdRequest, paramName, values);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d470c8182e92b264680e34081b75e70a9f2b3c89","date":1463985353,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/DistributedQueryComponentOptimizationTest#assertParamsEquals(TrackingShardHandlerFactory.RequestTrackingQueue,String,String,String,int,String...).mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/DistributedQueryComponentOptimizationTest#assertParamsEquals(TrackingShardHandlerFactory.RequestTrackingQueue,String,String,String,int,String...).mjava","sourceNew":"  private void assertParamsEquals(TrackingShardHandlerFactory.RequestTrackingQueue trackingQueue, String collection, String shard, String paramName, int purpose, String... values) {\n    TrackingShardHandlerFactory.ShardRequestAndParams getByIdRequest\n        = trackingQueue.getShardRequestByPurpose(cluster.getSolrClient().getZkStateReader(), collection, shard, purpose);\n    assertParamsEquals(getByIdRequest, paramName, values);\n  }\n\n","sourceOld":"  private void assertParamsEquals(TrackingShardHandlerFactory.RequestTrackingQueue trackingQueue, String collection, String shard, String paramName, int purpose, String... values) {\n    TrackingShardHandlerFactory.ShardRequestAndParams getByIdRequest = trackingQueue.getShardRequestByPurpose(cloudClient.getZkStateReader(), collection, shard, purpose);\n    assertParamsEquals(getByIdRequest, paramName, values);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/DistributedQueryComponentOptimizationTest#assertParamsEquals(TrackingShardHandlerFactory.RequestTrackingQueue,String,String,String,int,String...).mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/component/DistributedQueryComponentOptimizationTest#assertParamsEquals(TrackingShardHandlerFactory.RequestTrackingQueue,String,String,String,int,String...).mjava","sourceNew":"  private void assertParamsEquals(TrackingShardHandlerFactory.RequestTrackingQueue trackingQueue, String collection, String shard, String paramName, int purpose, String... values) {\n    TrackingShardHandlerFactory.ShardRequestAndParams getByIdRequest\n        = trackingQueue.getShardRequestByPurpose(cluster.getSolrClient().getZkStateReader(), collection, shard, purpose);\n    assertParamsEquals(getByIdRequest, paramName, values);\n  }\n\n","sourceOld":"  private void assertParamsEquals(TrackingShardHandlerFactory.RequestTrackingQueue trackingQueue, String collection, String shard, String paramName, int purpose, String... values) {\n    TrackingShardHandlerFactory.ShardRequestAndParams getByIdRequest = trackingQueue.getShardRequestByPurpose(cloudClient.getZkStateReader(), collection, shard, purpose);\n    assertParamsEquals(getByIdRequest, paramName, values);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a05704e317032f0bcc6bc978b6c6c5af1cba5cd9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a05704e317032f0bcc6bc978b6c6c5af1cba5cd9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5ebf70dabe6279454c5ff460bdea3f0dc2814a86":["a05704e317032f0bcc6bc978b6c6c5af1cba5cd9"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a05704e317032f0bcc6bc978b6c6c5af1cba5cd9","d470c8182e92b264680e34081b75e70a9f2b3c89"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d470c8182e92b264680e34081b75e70a9f2b3c89"],"d470c8182e92b264680e34081b75e70a9f2b3c89":["a05704e317032f0bcc6bc978b6c6c5af1cba5cd9","5ebf70dabe6279454c5ff460bdea3f0dc2814a86"]},"commit2Childs":{"a05704e317032f0bcc6bc978b6c6c5af1cba5cd9":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","5ebf70dabe6279454c5ff460bdea3f0dc2814a86","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","d470c8182e92b264680e34081b75e70a9f2b3c89"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a05704e317032f0bcc6bc978b6c6c5af1cba5cd9","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae"],"5ebf70dabe6279454c5ff460bdea3f0dc2814a86":["d470c8182e92b264680e34081b75e70a9f2b3c89"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"d470c8182e92b264680e34081b75e70a9f2b3c89":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}