{"path":"contrib/analyzers/src/java/org/apache/lucene/analysis/payloads/NumericPayloadTokenFilter#decodePayload(byte[],int).mjava","commits":[{"id":"bbd200b2732aefbc96902b61cb6bb51ec45c8a79","date":1197030109,"type":0,"author":"Grant Ingersoll","isMerge":false,"pathNew":"contrib/analyzers/src/java/org/apache/lucene/analysis/payloads/NumericPayloadTokenFilter#decodePayload(byte[],int).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Decode the payload that was encoded using {@link #encodePayload(float)}.\n   * NOTE: the length of the array must be at least offset + 4 long.\n   * @param bytes The bytes to decode\n   * @param offset The offset into the array.\n   * @return The float that was encoded\n   *\n   * @see #encodePayload(float) \n   */\n  public static final float decodePayload(byte [] bytes, int offset){\n    int tmp = ((bytes[offset] & 0xFF) << 24) | ((bytes[offset + 1] & 0xFF) << 16)\n         | ((bytes[offset + 2] & 0xFF) <<  8) |  (bytes[offset + 3] & 0xFF);\n    return Float.intBitsToFloat(tmp);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8ed61ec7f37eae0b7b6545998048315202379e05","date":1197899746,"type":5,"author":"Grant Ingersoll","isMerge":false,"pathNew":"contrib/analyzers/src/java/org/apache/lucene/analysis/payloads/PayloadHelper#decodeFloat(byte[],int).mjava","pathOld":"contrib/analyzers/src/java/org/apache/lucene/analysis/payloads/NumericPayloadTokenFilter#decodePayload(byte[],int).mjava","sourceNew":"  /**\n   * Decode the payload that was encoded using {@link #encodeFloat(float)}.\n   * NOTE: the length of the array must be at least offset + 4 long.\n   * @param bytes The bytes to decode\n   * @param offset The offset into the array.\n   * @return The float that was encoded\n   *\n   * @see # encodeFloat (float)\n   */\n  public static final float decodeFloat(byte [] bytes, int offset){\n\n    return Float.intBitsToFloat(decodeInt(bytes, offset));\n  }\n\n","sourceOld":"  /**\n   * Decode the payload that was encoded using {@link #encodePayload(float)}.\n   * NOTE: the length of the array must be at least offset + 4 long.\n   * @param bytes The bytes to decode\n   * @param offset The offset into the array.\n   * @return The float that was encoded\n   *\n   * @see #encodePayload(float) \n   */\n  public static final float decodePayload(byte [] bytes, int offset){\n    int tmp = ((bytes[offset] & 0xFF) << 24) | ((bytes[offset + 1] & 0xFF) << 16)\n         | ((bytes[offset + 2] & 0xFF) <<  8) |  (bytes[offset + 3] & 0xFF);\n    return Float.intBitsToFloat(tmp);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"bbd200b2732aefbc96902b61cb6bb51ec45c8a79":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8ed61ec7f37eae0b7b6545998048315202379e05":["bbd200b2732aefbc96902b61cb6bb51ec45c8a79"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8ed61ec7f37eae0b7b6545998048315202379e05"]},"commit2Childs":{"bbd200b2732aefbc96902b61cb6bb51ec45c8a79":["8ed61ec7f37eae0b7b6545998048315202379e05"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["bbd200b2732aefbc96902b61cb6bb51ec45c8a79"],"8ed61ec7f37eae0b7b6545998048315202379e05":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}