{"path":"lucene/core/src/java/org/apache/lucene/util/automaton/RegExp#setAllowMutate(boolean).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/automaton/RegExp#setAllowMutate(boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/util/automaton/RegExp#setAllowMutate(boolean).mjava","sourceNew":"  /**\n   * Sets or resets allow mutate flag. If this flag is set, then automata\n   * construction uses mutable automata, which is slightly faster but not thread\n   * safe. By default, the flag is not set.\n   * \n   * @param flag if true, the flag is set\n   * @return previous value of the flag\n   */\n  public boolean setAllowMutate(boolean flag) {\n    boolean b = allow_mutation;\n    allow_mutation = flag;\n    return b;\n  }\n\n","sourceOld":"  /**\n   * Sets or resets allow mutate flag. If this flag is set, then automata\n   * construction uses mutable automata, which is slightly faster but not thread\n   * safe. By default, the flag is not set.\n   * \n   * @param flag if true, the flag is set\n   * @return previous value of the flag\n   */\n  public boolean setAllowMutate(boolean flag) {\n    boolean b = allow_mutation;\n    allow_mutation = flag;\n    return b;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ac34f0c5bb9274821fb0cb18075234e02002e9bf","date":1402508126,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/util/automaton/RegExp#setAllowMutate(boolean).mjava","sourceNew":null,"sourceOld":"  /**\n   * Sets or resets allow mutate flag. If this flag is set, then automata\n   * construction uses mutable automata, which is slightly faster but not thread\n   * safe. By default, the flag is not set.\n   * \n   * @param flag if true, the flag is set\n   * @return previous value of the flag\n   */\n  public boolean setAllowMutate(boolean flag) {\n    boolean b = allow_mutation;\n    allow_mutation = flag;\n    return b;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5c84485629d80d203608e8975a1139de9933cc38","date":1403166128,"type":4,"author":"Michael McCandless","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/util/automaton/RegExp#setAllowMutate(boolean).mjava","sourceNew":null,"sourceOld":"  /**\n   * Sets or resets allow mutate flag. If this flag is set, then automata\n   * construction uses mutable automata, which is slightly faster but not thread\n   * safe. By default, the flag is not set.\n   * \n   * @param flag if true, the flag is set\n   * @return previous value of the flag\n   */\n  public boolean setAllowMutate(boolean flag) {\n    boolean b = allow_mutation;\n    allow_mutation = flag;\n    return b;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5c84485629d80d203608e8975a1139de9933cc38":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","ac34f0c5bb9274821fb0cb18075234e02002e9bf"],"ac34f0c5bb9274821fb0cb18075234e02002e9bf":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5c84485629d80d203608e8975a1139de9933cc38"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["5c84485629d80d203608e8975a1139de9933cc38","ac34f0c5bb9274821fb0cb18075234e02002e9bf"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"5c84485629d80d203608e8975a1139de9933cc38":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ac34f0c5bb9274821fb0cb18075234e02002e9bf":["5c84485629d80d203608e8975a1139de9933cc38"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}