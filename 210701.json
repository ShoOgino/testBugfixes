{"path":"modules/analysis/common/src/java/org/apache/lucene/analysis/de/GermanStemmer#optimize(StringBuilder).mjava","commits":[{"id":"0f080986da691a3bba7b757f43ab72cdc82b57ce","date":1273069619,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/de/GermanStemmer#optimize(StringBuilder).mjava","pathOld":"lucene/contrib/analyzers/common/src/java/org/apache/lucene/analysis/de/GermanStemmer#optimize(StringBuilder).mjava","sourceNew":"    /**\n     * Does some optimizations on the term. This optimisations are\n     * contextual.\n     */\n    private void optimize( StringBuilder buffer )\n    {\n      // Additional step for female plurals of professions and inhabitants.\n      if ( buffer.length() > 5 && buffer.substring( buffer.length() - 5, buffer.length() ).equals( \"erin*\" ) ) {\n        buffer.deleteCharAt( buffer.length() -1 );\n        strip( buffer );\n      }\n      // Additional step for irregular plural nouns like \"Matrizen -> Matrix\".\n      if ( buffer.charAt( buffer.length() - 1 ) == ( 'z' ) ) {\n        buffer.setCharAt( buffer.length() - 1, 'x' );\n      }\n    }\n\n","sourceOld":"    /**\n     * Does some optimizations on the term. This optimisations are\n     * contextual.\n     */\n    private void optimize( StringBuilder buffer )\n    {\n      // Additional step for female plurals of professions and inhabitants.\n      if ( buffer.length() > 5 && buffer.substring( buffer.length() - 5, buffer.length() ).equals( \"erin*\" ) ) {\n        buffer.deleteCharAt( buffer.length() -1 );\n        strip( buffer );\n      }\n      // Additional step for irregular plural nouns like \"Matrizen -> Matrix\".\n      if ( buffer.charAt( buffer.length() - 1 ) == ( 'z' ) ) {\n        buffer.setCharAt( buffer.length() - 1, 'x' );\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"67e22e17f8b9f097d56699de8c7e15207a9d15d2","date":1303580897,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/de/GermanStemmer#optimize(StringBuilder).mjava","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/de/GermanStemmer#optimize(StringBuilder).mjava","sourceNew":"    /**\n     * Does some optimizations on the term. This optimisations are\n     * contextual.\n     */\n    private void optimize( StringBuilder buffer )\n    {\n      // Additional step for female plurals of professions and inhabitants.\n      if ( buffer.length() > 5 && buffer.substring( buffer.length() - 5, buffer.length() ).equals( \"erin*\" ) ) {\n        buffer.deleteCharAt( buffer.length() -1 );\n        strip( buffer );\n      }\n      // Additional step for irregular plural nouns like \"Matrizen -> Matrix\".\n      // NOTE: this length constraint is probably not a great value, its just to prevent AIOOBE on empty terms\n      if ( buffer.length() > 0 && buffer.charAt( buffer.length() - 1 ) == ( 'z' ) ) {\n        buffer.setCharAt( buffer.length() - 1, 'x' );\n      }\n    }\n\n","sourceOld":"    /**\n     * Does some optimizations on the term. This optimisations are\n     * contextual.\n     */\n    private void optimize( StringBuilder buffer )\n    {\n      // Additional step for female plurals of professions and inhabitants.\n      if ( buffer.length() > 5 && buffer.substring( buffer.length() - 5, buffer.length() ).equals( \"erin*\" ) ) {\n        buffer.deleteCharAt( buffer.length() -1 );\n        strip( buffer );\n      }\n      // Additional step for irregular plural nouns like \"Matrizen -> Matrix\".\n      if ( buffer.charAt( buffer.length() - 1 ) == ( 'z' ) ) {\n        buffer.setCharAt( buffer.length() - 1, 'x' );\n      }\n    }\n\n","bugFix":["4215168c7c026cd898f2d98bb6aa5b0df9856696"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"24f1664166601a0f7376d051dda5dd63c068c313","date":1303641250,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/de/GermanStemmer#optimize(StringBuilder).mjava","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/de/GermanStemmer#optimize(StringBuilder).mjava","sourceNew":"    /**\n     * Does some optimizations on the term. This optimisations are\n     * contextual.\n     */\n    private void optimize( StringBuilder buffer )\n    {\n      // Additional step for female plurals of professions and inhabitants.\n      if ( buffer.length() > 5 && buffer.substring( buffer.length() - 5, buffer.length() ).equals( \"erin*\" ) ) {\n        buffer.deleteCharAt( buffer.length() -1 );\n        strip( buffer );\n      }\n      // Additional step for irregular plural nouns like \"Matrizen -> Matrix\".\n      // NOTE: this length constraint is probably not a great value, its just to prevent AIOOBE on empty terms\n      if ( buffer.length() > 0 && buffer.charAt( buffer.length() - 1 ) == ( 'z' ) ) {\n        buffer.setCharAt( buffer.length() - 1, 'x' );\n      }\n    }\n\n","sourceOld":"    /**\n     * Does some optimizations on the term. This optimisations are\n     * contextual.\n     */\n    private void optimize( StringBuilder buffer )\n    {\n      // Additional step for female plurals of professions and inhabitants.\n      if ( buffer.length() > 5 && buffer.substring( buffer.length() - 5, buffer.length() ).equals( \"erin*\" ) ) {\n        buffer.deleteCharAt( buffer.length() -1 );\n        strip( buffer );\n      }\n      // Additional step for irregular plural nouns like \"Matrizen -> Matrix\".\n      if ( buffer.charAt( buffer.length() - 1 ) == ( 'z' ) ) {\n        buffer.setCharAt( buffer.length() - 1, 'x' );\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/de/GermanStemmer#optimize(StringBuilder).mjava","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/de/GermanStemmer#optimize(StringBuilder).mjava","sourceNew":"    /**\n     * Does some optimizations on the term. This optimisations are\n     * contextual.\n     */\n    private void optimize( StringBuilder buffer )\n    {\n      // Additional step for female plurals of professions and inhabitants.\n      if ( buffer.length() > 5 && buffer.substring( buffer.length() - 5, buffer.length() ).equals( \"erin*\" ) ) {\n        buffer.deleteCharAt( buffer.length() -1 );\n        strip( buffer );\n      }\n      // Additional step for irregular plural nouns like \"Matrizen -> Matrix\".\n      // NOTE: this length constraint is probably not a great value, its just to prevent AIOOBE on empty terms\n      if ( buffer.length() > 0 && buffer.charAt( buffer.length() - 1 ) == ( 'z' ) ) {\n        buffer.setCharAt( buffer.length() - 1, 'x' );\n      }\n    }\n\n","sourceOld":"    /**\n     * Does some optimizations on the term. This optimisations are\n     * contextual.\n     */\n    private void optimize( StringBuilder buffer )\n    {\n      // Additional step for female plurals of professions and inhabitants.\n      if ( buffer.length() > 5 && buffer.substring( buffer.length() - 5, buffer.length() ).equals( \"erin*\" ) ) {\n        buffer.deleteCharAt( buffer.length() -1 );\n        strip( buffer );\n      }\n      // Additional step for irregular plural nouns like \"Matrizen -> Matrix\".\n      if ( buffer.charAt( buffer.length() - 1 ) == ( 'z' ) ) {\n        buffer.setCharAt( buffer.length() - 1, 'x' );\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/de/GermanStemmer#optimize(StringBuilder).mjava","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/de/GermanStemmer#optimize(StringBuilder).mjava","sourceNew":"    /**\n     * Does some optimizations on the term. This optimisations are\n     * contextual.\n     */\n    private void optimize( StringBuilder buffer )\n    {\n      // Additional step for female plurals of professions and inhabitants.\n      if ( buffer.length() > 5 && buffer.substring( buffer.length() - 5, buffer.length() ).equals( \"erin*\" ) ) {\n        buffer.deleteCharAt( buffer.length() -1 );\n        strip( buffer );\n      }\n      // Additional step for irregular plural nouns like \"Matrizen -> Matrix\".\n      // NOTE: this length constraint is probably not a great value, its just to prevent AIOOBE on empty terms\n      if ( buffer.length() > 0 && buffer.charAt( buffer.length() - 1 ) == ( 'z' ) ) {\n        buffer.setCharAt( buffer.length() - 1, 'x' );\n      }\n    }\n\n","sourceOld":"    /**\n     * Does some optimizations on the term. This optimisations are\n     * contextual.\n     */\n    private void optimize( StringBuilder buffer )\n    {\n      // Additional step for female plurals of professions and inhabitants.\n      if ( buffer.length() > 5 && buffer.substring( buffer.length() - 5, buffer.length() ).equals( \"erin*\" ) ) {\n        buffer.deleteCharAt( buffer.length() -1 );\n        strip( buffer );\n      }\n      // Additional step for irregular plural nouns like \"Matrizen -> Matrix\".\n      if ( buffer.charAt( buffer.length() - 1 ) == ( 'z' ) ) {\n        buffer.setCharAt( buffer.length() - 1, 'x' );\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/de/GermanStemmer#optimize(StringBuilder).mjava","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/de/GermanStemmer#optimize(StringBuilder).mjava","sourceNew":"    /**\n     * Does some optimizations on the term. This optimisations are\n     * contextual.\n     */\n    private void optimize( StringBuilder buffer )\n    {\n      // Additional step for female plurals of professions and inhabitants.\n      if ( buffer.length() > 5 && buffer.substring( buffer.length() - 5, buffer.length() ).equals( \"erin*\" ) ) {\n        buffer.deleteCharAt( buffer.length() -1 );\n        strip( buffer );\n      }\n      // Additional step for irregular plural nouns like \"Matrizen -> Matrix\".\n      // NOTE: this length constraint is probably not a great value, its just to prevent AIOOBE on empty terms\n      if ( buffer.length() > 0 && buffer.charAt( buffer.length() - 1 ) == ( 'z' ) ) {\n        buffer.setCharAt( buffer.length() - 1, 'x' );\n      }\n    }\n\n","sourceOld":"    /**\n     * Does some optimizations on the term. This optimisations are\n     * contextual.\n     */\n    private void optimize( StringBuilder buffer )\n    {\n      // Additional step for female plurals of professions and inhabitants.\n      if ( buffer.length() > 5 && buffer.substring( buffer.length() - 5, buffer.length() ).equals( \"erin*\" ) ) {\n        buffer.deleteCharAt( buffer.length() -1 );\n        strip( buffer );\n      }\n      // Additional step for irregular plural nouns like \"Matrizen -> Matrix\".\n      // NOTE: this length constraint is probably not a great value, its just to prevent AIOOBE on empty terms\n      if ( buffer.length() > 0 && buffer.charAt( buffer.length() - 1 ) == ( 'z' ) ) {\n        buffer.setCharAt( buffer.length() - 1, 'x' );\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["67e22e17f8b9f097d56699de8c7e15207a9d15d2"],"24f1664166601a0f7376d051dda5dd63c068c313":["0f080986da691a3bba7b757f43ab72cdc82b57ce","67e22e17f8b9f097d56699de8c7e15207a9d15d2"],"a3776dccca01c11e7046323cfad46a3b4a471233":["0f080986da691a3bba7b757f43ab72cdc82b57ce","67e22e17f8b9f097d56699de8c7e15207a9d15d2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["0f080986da691a3bba7b757f43ab72cdc82b57ce","67e22e17f8b9f097d56699de8c7e15207a9d15d2"],"67e22e17f8b9f097d56699de8c7e15207a9d15d2":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"24f1664166601a0f7376d051dda5dd63c068c313":[],"a3776dccca01c11e7046323cfad46a3b4a471233":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":[],"67e22e17f8b9f097d56699de8c7e15207a9d15d2":["b89678825b68eccaf09e6ab71675fc0b0af1e099","24f1664166601a0f7376d051dda5dd63c068c313","a3776dccca01c11e7046323cfad46a3b4a471233","135621f3a0670a9394eb563224a3b76cc4dddc0f"],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["24f1664166601a0f7376d051dda5dd63c068c313","a3776dccca01c11e7046323cfad46a3b4a471233","135621f3a0670a9394eb563224a3b76cc4dddc0f","67e22e17f8b9f097d56699de8c7e15207a9d15d2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["24f1664166601a0f7376d051dda5dd63c068c313","a3776dccca01c11e7046323cfad46a3b4a471233","135621f3a0670a9394eb563224a3b76cc4dddc0f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}