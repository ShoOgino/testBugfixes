{"path":"lucene/core/src/java/org/apache/lucene/codecs/blockpacked/BlockPackedPostingsReader#init(IndexInput).mjava","commits":[{"id":"7250f5f8fbbaeebf817404fb2b3ce3b26161d5df","date":1343686506,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/blockpacked/BlockPackedPostingsReader#init(IndexInput).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void init(IndexInput termsIn) throws IOException {\n    // Make sure we are talking to the matching past writer\n    CodecUtil.checkHeader(termsIn,\n                          BlockPackedPostingsWriter.TERMS_CODEC,\n                          BlockPackedPostingsWriter.VERSION_START,\n                          BlockPackedPostingsWriter.VERSION_START);\n    final int indexBlockSize = termsIn.readVInt();\n    if (indexBlockSize != blockSize) {\n      throw new IllegalStateException(\"index-time blockSize (\" + indexBlockSize + \") != read-time blockSize (\" + blockSize + \")\");\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0e3359210474c12c0b79e6400450313e3d7ef2bb","date":1344347790,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/blockpacked/BlockPackedPostingsReader#init(IndexInput).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/blockpacked/BlockPackedPostingsReader#init(IndexInput).mjava","sourceNew":"  @Override\n  public void init(IndexInput termsIn) throws IOException {\n    // Make sure we are talking to the matching past writer\n    CodecUtil.checkHeader(termsIn,\n                          BlockPackedPostingsWriter.TERMS_CODEC,\n                          BlockPackedPostingsWriter.VERSION_START,\n                          BlockPackedPostingsWriter.VERSION_START);\n    final int indexBlockSize = termsIn.readVInt();\n    if (indexBlockSize != BLOCK_SIZE) {\n      throw new IllegalStateException(\"index-time blockSize (\" + indexBlockSize + \") != read-time blockSize (\" + BLOCK_SIZE + \")\");\n    }\n  }\n\n","sourceOld":"  @Override\n  public void init(IndexInput termsIn) throws IOException {\n    // Make sure we are talking to the matching past writer\n    CodecUtil.checkHeader(termsIn,\n                          BlockPackedPostingsWriter.TERMS_CODEC,\n                          BlockPackedPostingsWriter.VERSION_START,\n                          BlockPackedPostingsWriter.VERSION_START);\n    final int indexBlockSize = termsIn.readVInt();\n    if (indexBlockSize != blockSize) {\n      throw new IllegalStateException(\"index-time blockSize (\" + indexBlockSize + \") != read-time blockSize (\" + blockSize + \")\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e6b41208259e8566cba0ecac7da6a331ea9732dd","date":1344551376,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/blockpacked/BlockPackedPostingsReader#init(IndexInput).mjava","sourceNew":null,"sourceOld":"  @Override\n  public void init(IndexInput termsIn) throws IOException {\n    // Make sure we are talking to the matching past writer\n    CodecUtil.checkHeader(termsIn,\n                          BlockPackedPostingsWriter.TERMS_CODEC,\n                          BlockPackedPostingsWriter.VERSION_START,\n                          BlockPackedPostingsWriter.VERSION_START);\n    final int indexBlockSize = termsIn.readVInt();\n    if (indexBlockSize != BLOCK_SIZE) {\n      throw new IllegalStateException(\"index-time blockSize (\" + indexBlockSize + \") != read-time blockSize (\" + BLOCK_SIZE + \")\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7250f5f8fbbaeebf817404fb2b3ce3b26161d5df":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0e3359210474c12c0b79e6400450313e3d7ef2bb":["7250f5f8fbbaeebf817404fb2b3ce3b26161d5df"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e6b41208259e8566cba0ecac7da6a331ea9732dd":["0e3359210474c12c0b79e6400450313e3d7ef2bb"]},"commit2Childs":{"7250f5f8fbbaeebf817404fb2b3ce3b26161d5df":["0e3359210474c12c0b79e6400450313e3d7ef2bb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7250f5f8fbbaeebf817404fb2b3ce3b26161d5df","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"0e3359210474c12c0b79e6400450313e3d7ef2bb":["e6b41208259e8566cba0ecac7da6a331ea9732dd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"e6b41208259e8566cba0ecac7da6a331ea9732dd":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","e6b41208259e8566cba0ecac7da6a331ea9732dd"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}