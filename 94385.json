{"path":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestJdbcDataSourceConvertType#convertTypeTest(String,Class).mjava","commits":[{"id":"7610bb25e79aa5b6250d091eaec522291f7f0a69","date":1405818045,"type":0,"author":"Erik Hatcher","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestJdbcDataSourceConvertType#convertTypeTest(String,Class).mjava","pathOld":"/dev/null","sourceNew":"  private void convertTypeTest(String convertType, Class resultClass) throws Throwable {\n    JdbcDataSource dataSource = new JdbcDataSource();\n    Properties p = new Properties();\n    p.put(\"driver\", \"org.apache.derby.jdbc.EmbeddedDriver\");\n    p.put(\"url\", \"jdbc:derby:memory:tempDB;create=true\");\n    p.put(\"convertType\", convertType);\n\n    List<Map<String, String>> flds = new ArrayList<>();\n    Map<String, String> f = new HashMap<>();\n    f.put(\"column\", \"some_i\");\n    f.put(\"type\", \"long\");\n    flds.add(f);\n\n    Context c = getContext(null, null,\n        dataSource, Context.FULL_DUMP, flds, null);\n    dataSource.init(c, p);\n    Iterator<Map<String, Object>> i = dataSource\n        .getData(\"select 1 as id, CAST(9999 AS DECIMAL) as \\\"some_i\\\" from sysibm.sysdummy1\");\n    assertTrue(i.hasNext());\n    Map<String, Object> map = i.next();\n    Object val = map.get(\"some_i\");\n    assertEquals(resultClass, val.getClass());\n\n    dataSource.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["eeaccf8ed3c4b0b78b25b3d8c3e14fcd60a65531"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"eeaccf8ed3c4b0b78b25b3d8c3e14fcd60a65531","date":1406379970,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestJdbcDataSourceConvertType#convertTypeTest(String,Class).mjava","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestJdbcDataSourceConvertType#convertTypeTest(String,Class).mjava","sourceNew":"  private void convertTypeTest(String convertType, Class resultClass) throws Throwable {\n    JdbcDataSource dataSource = new JdbcDataSource();\n    Properties p = new Properties();\n    p.put(\"driver\", \"org.apache.derby.jdbc.EmbeddedDriver\");\n    p.put(\"url\", \"jdbc:derby:memory:tempDB;create=true;territory=en_US\");\n    p.put(\"convertType\", convertType);\n\n    List<Map<String, String>> flds = new ArrayList<>();\n    Map<String, String> f = new HashMap<>();\n    f.put(\"column\", \"some_i\");\n    f.put(\"type\", \"long\");\n    flds.add(f);\n\n    Context c = getContext(null, null,\n        dataSource, Context.FULL_DUMP, flds, null);\n    dataSource.init(c, p);\n    Iterator<Map<String, Object>> i = dataSource\n        .getData(\"select 1 as id, CAST(9999 AS DECIMAL) as \\\"some_i\\\" from sysibm.sysdummy1\");\n    assertTrue(i.hasNext());\n    Map<String, Object> map = i.next();\n    Object val = map.get(\"some_i\");\n    assertEquals(resultClass, val.getClass());\n\n    dataSource.close();\n  }\n\n","sourceOld":"  private void convertTypeTest(String convertType, Class resultClass) throws Throwable {\n    JdbcDataSource dataSource = new JdbcDataSource();\n    Properties p = new Properties();\n    p.put(\"driver\", \"org.apache.derby.jdbc.EmbeddedDriver\");\n    p.put(\"url\", \"jdbc:derby:memory:tempDB;create=true\");\n    p.put(\"convertType\", convertType);\n\n    List<Map<String, String>> flds = new ArrayList<>();\n    Map<String, String> f = new HashMap<>();\n    f.put(\"column\", \"some_i\");\n    f.put(\"type\", \"long\");\n    flds.add(f);\n\n    Context c = getContext(null, null,\n        dataSource, Context.FULL_DUMP, flds, null);\n    dataSource.init(c, p);\n    Iterator<Map<String, Object>> i = dataSource\n        .getData(\"select 1 as id, CAST(9999 AS DECIMAL) as \\\"some_i\\\" from sysibm.sysdummy1\");\n    assertTrue(i.hasNext());\n    Map<String, Object> map = i.next();\n    Object val = map.get(\"some_i\");\n    assertEquals(resultClass, val.getClass());\n\n    dataSource.close();\n  }\n\n","bugFix":["7610bb25e79aa5b6250d091eaec522291f7f0a69"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9","date":1574619880,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestJdbcDataSourceConvertType#convertTypeTest(String,Class).mjava","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestJdbcDataSourceConvertType#convertTypeTest(String,Class).mjava","sourceNew":"  @SuppressWarnings(\"rawtypes\")\n  private void convertTypeTest(String convertType, Class resultClass) throws Throwable {\n    JdbcDataSource dataSource = new JdbcDataSource();\n    Properties p = new Properties();\n    p.put(\"driver\", \"org.apache.derby.jdbc.EmbeddedDriver\");\n    p.put(\"url\", \"jdbc:derby:memory:tempDB;create=true;territory=en_US\");\n    p.put(\"convertType\", convertType);\n\n    List<Map<String, String>> flds = new ArrayList<>();\n    Map<String, String> f = new HashMap<>();\n    f.put(\"column\", \"some_i\");\n    f.put(\"type\", \"long\");\n    flds.add(f);\n\n    Context c = getContext(null, null,\n        dataSource, Context.FULL_DUMP, flds, null);\n    dataSource.init(c, p);\n    Iterator<Map<String, Object>> i = dataSource\n        .getData(\"select 1 as id, CAST(9999 AS DECIMAL) as \\\"some_i\\\" from sysibm.sysdummy1\");\n    assertTrue(i.hasNext());\n    Map<String, Object> map = i.next();\n    Object val = map.get(\"some_i\");\n    assertEquals(resultClass, val.getClass());\n\n    dataSource.close();\n  }\n\n","sourceOld":"  private void convertTypeTest(String convertType, Class resultClass) throws Throwable {\n    JdbcDataSource dataSource = new JdbcDataSource();\n    Properties p = new Properties();\n    p.put(\"driver\", \"org.apache.derby.jdbc.EmbeddedDriver\");\n    p.put(\"url\", \"jdbc:derby:memory:tempDB;create=true;territory=en_US\");\n    p.put(\"convertType\", convertType);\n\n    List<Map<String, String>> flds = new ArrayList<>();\n    Map<String, String> f = new HashMap<>();\n    f.put(\"column\", \"some_i\");\n    f.put(\"type\", \"long\");\n    flds.add(f);\n\n    Context c = getContext(null, null,\n        dataSource, Context.FULL_DUMP, flds, null);\n    dataSource.init(c, p);\n    Iterator<Map<String, Object>> i = dataSource\n        .getData(\"select 1 as id, CAST(9999 AS DECIMAL) as \\\"some_i\\\" from sysibm.sysdummy1\");\n    assertTrue(i.hasNext());\n    Map<String, Object> map = i.next();\n    Object val = map.get(\"some_i\");\n    assertEquals(resultClass, val.getClass());\n\n    dataSource.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb9c3baacabd473e8ecd6c4948aabacead49b88e","date":1574700980,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestJdbcDataSourceConvertType#convertTypeTest(String,Class).mjava","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestJdbcDataSourceConvertType#convertTypeTest(String,Class).mjava","sourceNew":"  private void convertTypeTest(String convertType, Class resultClass) throws Throwable {\n    JdbcDataSource dataSource = new JdbcDataSource();\n    Properties p = new Properties();\n    p.put(\"driver\", \"org.apache.derby.jdbc.EmbeddedDriver\");\n    p.put(\"url\", \"jdbc:derby:memory:tempDB;create=true;territory=en_US\");\n    p.put(\"convertType\", convertType);\n\n    List<Map<String, String>> flds = new ArrayList<>();\n    Map<String, String> f = new HashMap<>();\n    f.put(\"column\", \"some_i\");\n    f.put(\"type\", \"long\");\n    flds.add(f);\n\n    Context c = getContext(null, null,\n        dataSource, Context.FULL_DUMP, flds, null);\n    dataSource.init(c, p);\n    Iterator<Map<String, Object>> i = dataSource\n        .getData(\"select 1 as id, CAST(9999 AS DECIMAL) as \\\"some_i\\\" from sysibm.sysdummy1\");\n    assertTrue(i.hasNext());\n    Map<String, Object> map = i.next();\n    Object val = map.get(\"some_i\");\n    assertEquals(resultClass, val.getClass());\n\n    dataSource.close();\n  }\n\n","sourceOld":"  @SuppressWarnings(\"rawtypes\")\n  private void convertTypeTest(String convertType, Class resultClass) throws Throwable {\n    JdbcDataSource dataSource = new JdbcDataSource();\n    Properties p = new Properties();\n    p.put(\"driver\", \"org.apache.derby.jdbc.EmbeddedDriver\");\n    p.put(\"url\", \"jdbc:derby:memory:tempDB;create=true;territory=en_US\");\n    p.put(\"convertType\", convertType);\n\n    List<Map<String, String>> flds = new ArrayList<>();\n    Map<String, String> f = new HashMap<>();\n    f.put(\"column\", \"some_i\");\n    f.put(\"type\", \"long\");\n    flds.add(f);\n\n    Context c = getContext(null, null,\n        dataSource, Context.FULL_DUMP, flds, null);\n    dataSource.init(c, p);\n    Iterator<Map<String, Object>> i = dataSource\n        .getData(\"select 1 as id, CAST(9999 AS DECIMAL) as \\\"some_i\\\" from sysibm.sysdummy1\");\n    assertTrue(i.hasNext());\n    Map<String, Object> map = i.next();\n    Object val = map.get(\"some_i\");\n    assertEquals(resultClass, val.getClass());\n\n    dataSource.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"024e13388acbf5562fcbb77a129620982a5e2d79","date":1591531835,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestJdbcDataSourceConvertType#convertTypeTest(String,Class).mjava","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestJdbcDataSourceConvertType#convertTypeTest(String,Class).mjava","sourceNew":"  private void convertTypeTest(String convertType, @SuppressWarnings({\"rawtypes\"})Class resultClass) throws Throwable {\n    JdbcDataSource dataSource = new JdbcDataSource();\n    Properties p = new Properties();\n    p.put(\"driver\", \"org.apache.derby.jdbc.EmbeddedDriver\");\n    p.put(\"url\", \"jdbc:derby:memory:tempDB;create=true;territory=en_US\");\n    p.put(\"convertType\", convertType);\n\n    List<Map<String, String>> flds = new ArrayList<>();\n    Map<String, String> f = new HashMap<>();\n    f.put(\"column\", \"some_i\");\n    f.put(\"type\", \"long\");\n    flds.add(f);\n\n    Context c = getContext(null, null,\n        dataSource, Context.FULL_DUMP, flds, null);\n    dataSource.init(c, p);\n    Iterator<Map<String, Object>> i = dataSource\n        .getData(\"select 1 as id, CAST(9999 AS DECIMAL) as \\\"some_i\\\" from sysibm.sysdummy1\");\n    assertTrue(i.hasNext());\n    Map<String, Object> map = i.next();\n    Object val = map.get(\"some_i\");\n    assertEquals(resultClass, val.getClass());\n\n    dataSource.close();\n  }\n\n","sourceOld":"  private void convertTypeTest(String convertType, Class resultClass) throws Throwable {\n    JdbcDataSource dataSource = new JdbcDataSource();\n    Properties p = new Properties();\n    p.put(\"driver\", \"org.apache.derby.jdbc.EmbeddedDriver\");\n    p.put(\"url\", \"jdbc:derby:memory:tempDB;create=true;territory=en_US\");\n    p.put(\"convertType\", convertType);\n\n    List<Map<String, String>> flds = new ArrayList<>();\n    Map<String, String> f = new HashMap<>();\n    f.put(\"column\", \"some_i\");\n    f.put(\"type\", \"long\");\n    flds.add(f);\n\n    Context c = getContext(null, null,\n        dataSource, Context.FULL_DUMP, flds, null);\n    dataSource.init(c, p);\n    Iterator<Map<String, Object>> i = dataSource\n        .getData(\"select 1 as id, CAST(9999 AS DECIMAL) as \\\"some_i\\\" from sysibm.sysdummy1\");\n    assertTrue(i.hasNext());\n    Map<String, Object> map = i.next();\n    Object val = map.get(\"some_i\");\n    assertEquals(resultClass, val.getClass());\n\n    dataSource.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b","date":1598712724,"type":4,"author":"Alexandre Rafalovitch","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/contrib/dataimporthandler/src/test/org/apache/solr/handler/dataimport/TestJdbcDataSourceConvertType#convertTypeTest(String,Class).mjava","sourceNew":null,"sourceOld":"  private void convertTypeTest(String convertType, @SuppressWarnings({\"rawtypes\"})Class resultClass) throws Throwable {\n    JdbcDataSource dataSource = new JdbcDataSource();\n    Properties p = new Properties();\n    p.put(\"driver\", \"org.apache.derby.jdbc.EmbeddedDriver\");\n    p.put(\"url\", \"jdbc:derby:memory:tempDB;create=true;territory=en_US\");\n    p.put(\"convertType\", convertType);\n\n    List<Map<String, String>> flds = new ArrayList<>();\n    Map<String, String> f = new HashMap<>();\n    f.put(\"column\", \"some_i\");\n    f.put(\"type\", \"long\");\n    flds.add(f);\n\n    Context c = getContext(null, null,\n        dataSource, Context.FULL_DUMP, flds, null);\n    dataSource.init(c, p);\n    Iterator<Map<String, Object>> i = dataSource\n        .getData(\"select 1 as id, CAST(9999 AS DECIMAL) as \\\"some_i\\\" from sysibm.sysdummy1\");\n    assertTrue(i.hasNext());\n    Map<String, Object> map = i.next();\n    Object val = map.get(\"some_i\");\n    assertEquals(resultClass, val.getClass());\n\n    dataSource.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["024e13388acbf5562fcbb77a129620982a5e2d79"],"024e13388acbf5562fcbb77a129620982a5e2d79":["bb9c3baacabd473e8ecd6c4948aabacead49b88e"],"a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9":["eeaccf8ed3c4b0b78b25b3d8c3e14fcd60a65531"],"7610bb25e79aa5b6250d091eaec522291f7f0a69":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bb9c3baacabd473e8ecd6c4948aabacead49b88e":["a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9"],"eeaccf8ed3c4b0b78b25b3d8c3e14fcd60a65531":["7610bb25e79aa5b6250d091eaec522291f7f0a69"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b"]},"commit2Childs":{"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"024e13388acbf5562fcbb77a129620982a5e2d79":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b"],"a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9":["bb9c3baacabd473e8ecd6c4948aabacead49b88e"],"7610bb25e79aa5b6250d091eaec522291f7f0a69":["eeaccf8ed3c4b0b78b25b3d8c3e14fcd60a65531"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7610bb25e79aa5b6250d091eaec522291f7f0a69"],"bb9c3baacabd473e8ecd6c4948aabacead49b88e":["024e13388acbf5562fcbb77a129620982a5e2d79"],"eeaccf8ed3c4b0b78b25b3d8c3e14fcd60a65531":["a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}