{"path":"lucene/core/src/java/org/apache/lucene/index/DocIDMerger.SortedDocIDMerger#reset().mjava","commits":[{"id":"d85b6e22926e7564c040d2a864f4887f6c59fa92","date":1482349496,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocIDMerger.SortedDocIDMerger#reset().mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public void reset() throws IOException {\n      // caller may not have fully consumed the queue:\n      queue.clear();\n      boolean first = true;\n      for(T sub : subs) {\n        if (first) {\n          // by setting mappedDocID = -1, this entry is guaranteed to be the top of the queue\n          // so the first call to next() will advance it\n          sub.mappedDocID = -1;\n          first = false;\n        } else {\n          int mappedDocID;\n          while (true) {\n            int docID = sub.nextDoc();\n            if (docID == NO_MORE_DOCS) {\n              mappedDocID = NO_MORE_DOCS;\n              break;\n            }\n            mappedDocID = sub.docMap.get(docID);\n            if (mappedDocID != -1) {\n              break;\n            }\n          }\n          if (mappedDocID == NO_MORE_DOCS) {\n            // all docs in this sub were deleted; do not add it to the queue!\n            continue;\n          }\n          sub.mappedDocID = mappedDocID;\n        }\n        queue.add(sub);\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f03e4bed5023ec3ef93a771b8888cae991cf448d","date":1483469262,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocIDMerger.SortedDocIDMerger#reset().mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public void reset() throws IOException {\n      // caller may not have fully consumed the queue:\n      queue.clear();\n      boolean first = true;\n      for(T sub : subs) {\n        if (first) {\n          // by setting mappedDocID = -1, this entry is guaranteed to be the top of the queue\n          // so the first call to next() will advance it\n          sub.mappedDocID = -1;\n          first = false;\n        } else {\n          int mappedDocID;\n          while (true) {\n            int docID = sub.nextDoc();\n            if (docID == NO_MORE_DOCS) {\n              mappedDocID = NO_MORE_DOCS;\n              break;\n            }\n            mappedDocID = sub.docMap.get(docID);\n            if (mappedDocID != -1) {\n              break;\n            }\n          }\n          if (mappedDocID == NO_MORE_DOCS) {\n            // all docs in this sub were deleted; do not add it to the queue!\n            continue;\n          }\n          sub.mappedDocID = mappedDocID;\n        }\n        queue.add(sub);\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d85b6e22926e7564c040d2a864f4887f6c59fa92":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d85b6e22926e7564c040d2a864f4887f6c59fa92"],"f03e4bed5023ec3ef93a771b8888cae991cf448d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","d85b6e22926e7564c040d2a864f4887f6c59fa92"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d85b6e22926e7564c040d2a864f4887f6c59fa92","f03e4bed5023ec3ef93a771b8888cae991cf448d"],"d85b6e22926e7564c040d2a864f4887f6c59fa92":["cd5edd1f2b162a5cfa08efd17851a07373a96817","f03e4bed5023ec3ef93a771b8888cae991cf448d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"f03e4bed5023ec3ef93a771b8888cae991cf448d":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","f03e4bed5023ec3ef93a771b8888cae991cf448d"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}