{"path":"lucene/core/src/java/org/apache/lucene/index/ConcurrentMergeScheduler#toString().mjava","commits":[{"id":"94b4f4bf8892e6006d66f4231d6d1873bbe56e73","date":1352661595,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/ConcurrentMergeScheduler#toString().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public String toString() {\n    StringBuilder sb = new StringBuilder(getClass().getSimpleName() + \": \");\n    sb.append(\"maxThreadCount=\").append(maxThreadCount).append(\", \");    \n    sb.append(\"maxMergeCount=\").append(maxMergeCount).append(\", \");    \n    sb.append(\"mergeThreadPriority=\").append(mergeThreadPriority);\n    return sb.toString();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"407687e67faf6e1f02a211ca078d8e3eed631027","date":1355157407,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/ConcurrentMergeScheduler#toString().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public String toString() {\n    StringBuilder sb = new StringBuilder(getClass().getSimpleName() + \": \");\n    sb.append(\"maxThreadCount=\").append(maxThreadCount).append(\", \");    \n    sb.append(\"maxMergeCount=\").append(maxMergeCount).append(\", \");    \n    sb.append(\"mergeThreadPriority=\").append(mergeThreadPriority);\n    return sb.toString();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5faf65b6692f15cca0f87bf8666c87899afc619f","date":1420468108,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/ConcurrentMergeScheduler#toString().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/ConcurrentMergeScheduler#toString().mjava","sourceNew":"  @Override\n  public String toString() {\n    StringBuilder sb = new StringBuilder(getClass().getSimpleName() + \": \");\n    sb.append(\"maxThreadCount=\").append(maxThreadCount).append(\", \");    \n    sb.append(\"maxMergeCount=\").append(maxMergeCount).append(\", \");    \n    sb.append(\"ioThrottle=\").append(doAutoIOThrottle);\n    return sb.toString();\n  }\n\n","sourceOld":"  @Override\n  public String toString() {\n    StringBuilder sb = new StringBuilder(getClass().getSimpleName() + \": \");\n    sb.append(\"maxThreadCount=\").append(maxThreadCount).append(\", \");    \n    sb.append(\"maxMergeCount=\").append(maxMergeCount).append(\", \");    \n    sb.append(\"mergeThreadPriority=\").append(mergeThreadPriority);\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"94b4f4bf8892e6006d66f4231d6d1873bbe56e73":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"407687e67faf6e1f02a211ca078d8e3eed631027":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","94b4f4bf8892e6006d66f4231d6d1873bbe56e73"],"5faf65b6692f15cca0f87bf8666c87899afc619f":["94b4f4bf8892e6006d66f4231d6d1873bbe56e73"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5faf65b6692f15cca0f87bf8666c87899afc619f"]},"commit2Childs":{"94b4f4bf8892e6006d66f4231d6d1873bbe56e73":["407687e67faf6e1f02a211ca078d8e3eed631027","5faf65b6692f15cca0f87bf8666c87899afc619f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["94b4f4bf8892e6006d66f4231d6d1873bbe56e73","407687e67faf6e1f02a211ca078d8e3eed631027"],"407687e67faf6e1f02a211ca078d8e3eed631027":[],"5faf65b6692f15cca0f87bf8666c87899afc619f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["407687e67faf6e1f02a211ca078d8e3eed631027","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}