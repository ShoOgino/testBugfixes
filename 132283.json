{"path":"lucene/src/test/org/apache/lucene/index/TestIndexReaderReopen#testDeletes2().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReaderReopen#testDeletes2().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexReaderReopen#testDeletes2().mjava","sourceNew":"  public void testDeletes2() throws Throwable {\n    Directory dir = new MockRAMDirectory();\n    createIndex(dir, false);\n    // Get delete bitVector\n    modifyIndex(0, dir);\n    IndexReader r1 = IndexReader.open(dir, false);\n\n    // Add doc:\n    modifyIndex(5, dir);\n\n    IndexReader r2 = r1.reopen();\n    assertTrue(r1 != r2);\n\n    IndexReader[] rs2 = r2.getSequentialSubReaders();\n\n    SegmentReader sr1 = SegmentReader.getOnlySegmentReader(r1);\n    SegmentReader sr2 = (SegmentReader) rs2[0];\n\n    // At this point they share the same BitVector\n    assertTrue(sr1.deletedDocs==sr2.deletedDocs);\n    final BitVector delDocs = sr1.deletedDocs;\n    r1.close();\n\n    r2.deleteDocument(0);\n    assertTrue(delDocs==sr2.deletedDocs);\n    r2.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testDeletes2() throws Throwable {\n    Directory dir = new MockRAMDirectory();\n    createIndex(dir, false);\n    // Get delete bitVector\n    modifyIndex(0, dir);\n    IndexReader r1 = IndexReader.open(dir, false);\n\n    // Add doc:\n    modifyIndex(5, dir);\n\n    IndexReader r2 = r1.reopen();\n    assertTrue(r1 != r2);\n\n    IndexReader[] rs2 = r2.getSequentialSubReaders();\n\n    SegmentReader sr1 = SegmentReader.getOnlySegmentReader(r1);\n    SegmentReader sr2 = (SegmentReader) rs2[0];\n\n    // At this point they share the same BitVector\n    assertTrue(sr1.deletedDocs==sr2.deletedDocs);\n    final BitVector delDocs = sr1.deletedDocs;\n    r1.close();\n\n    r2.deleteDocument(0);\n    assertTrue(delDocs==sr2.deletedDocs);\n    r2.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b21422ff1d1d56499dec481f193b402e5e8def5b","date":1281472367,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReaderReopen#testDeletes2().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReaderReopen#testDeletes2().mjava","sourceNew":"  public void testDeletes2() throws Throwable {\n    Directory dir = new MockRAMDirectory();\n    createIndex(newRandom(), dir, false);\n    // Get delete bitVector\n    modifyIndex(0, dir);\n    IndexReader r1 = IndexReader.open(dir, false);\n\n    // Add doc:\n    modifyIndex(5, dir);\n\n    IndexReader r2 = r1.reopen();\n    assertTrue(r1 != r2);\n\n    IndexReader[] rs2 = r2.getSequentialSubReaders();\n\n    SegmentReader sr1 = SegmentReader.getOnlySegmentReader(r1);\n    SegmentReader sr2 = (SegmentReader) rs2[0];\n\n    // At this point they share the same BitVector\n    assertTrue(sr1.deletedDocs==sr2.deletedDocs);\n    final BitVector delDocs = sr1.deletedDocs;\n    r1.close();\n\n    r2.deleteDocument(0);\n    assertTrue(delDocs==sr2.deletedDocs);\n    r2.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testDeletes2() throws Throwable {\n    Directory dir = new MockRAMDirectory();\n    createIndex(dir, false);\n    // Get delete bitVector\n    modifyIndex(0, dir);\n    IndexReader r1 = IndexReader.open(dir, false);\n\n    // Add doc:\n    modifyIndex(5, dir);\n\n    IndexReader r2 = r1.reopen();\n    assertTrue(r1 != r2);\n\n    IndexReader[] rs2 = r2.getSequentialSubReaders();\n\n    SegmentReader sr1 = SegmentReader.getOnlySegmentReader(r1);\n    SegmentReader sr2 = (SegmentReader) rs2[0];\n\n    // At this point they share the same BitVector\n    assertTrue(sr1.deletedDocs==sr2.deletedDocs);\n    final BitVector delDocs = sr1.deletedDocs;\n    r1.close();\n\n    r2.deleteDocument(0);\n    assertTrue(delDocs==sr2.deletedDocs);\n    r2.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c","date":1281646583,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReaderReopen#testDeletes2().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReaderReopen#testDeletes2().mjava","sourceNew":"  public void testDeletes2() throws Throwable {\n    Random random = newRandom();\n    Directory dir = newDirectory(random);\n    createIndex(random, dir, false);\n    // Get delete bitVector\n    modifyIndex(0, dir);\n    IndexReader r1 = IndexReader.open(dir, false);\n\n    // Add doc:\n    modifyIndex(5, dir);\n\n    IndexReader r2 = r1.reopen();\n    assertTrue(r1 != r2);\n\n    IndexReader[] rs2 = r2.getSequentialSubReaders();\n\n    SegmentReader sr1 = SegmentReader.getOnlySegmentReader(r1);\n    SegmentReader sr2 = (SegmentReader) rs2[0];\n\n    // At this point they share the same BitVector\n    assertTrue(sr1.deletedDocs==sr2.deletedDocs);\n    final BitVector delDocs = sr1.deletedDocs;\n    r1.close();\n\n    r2.deleteDocument(0);\n    assertTrue(delDocs==sr2.deletedDocs);\n    r2.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testDeletes2() throws Throwable {\n    Directory dir = new MockRAMDirectory();\n    createIndex(newRandom(), dir, false);\n    // Get delete bitVector\n    modifyIndex(0, dir);\n    IndexReader r1 = IndexReader.open(dir, false);\n\n    // Add doc:\n    modifyIndex(5, dir);\n\n    IndexReader r2 = r1.reopen();\n    assertTrue(r1 != r2);\n\n    IndexReader[] rs2 = r2.getSequentialSubReaders();\n\n    SegmentReader sr1 = SegmentReader.getOnlySegmentReader(r1);\n    SegmentReader sr2 = (SegmentReader) rs2[0];\n\n    // At this point they share the same BitVector\n    assertTrue(sr1.deletedDocs==sr2.deletedDocs);\n    final BitVector delDocs = sr1.deletedDocs;\n    r1.close();\n\n    r2.deleteDocument(0);\n    assertTrue(delDocs==sr2.deletedDocs);\n    r2.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1f653cfcf159baeaafe5d01682a911e95bba4012","date":1284122058,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReaderReopen#testDeletes2().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReaderReopen#testDeletes2().mjava","sourceNew":"  public void testDeletes2() throws Throwable {\n    Directory dir = newDirectory();\n    createIndex(random, dir, false);\n    // Get delete bitVector\n    modifyIndex(0, dir);\n    IndexReader r1 = IndexReader.open(dir, false);\n\n    // Add doc:\n    modifyIndex(5, dir);\n\n    IndexReader r2 = r1.reopen();\n    assertTrue(r1 != r2);\n\n    IndexReader[] rs2 = r2.getSequentialSubReaders();\n\n    SegmentReader sr1 = SegmentReader.getOnlySegmentReader(r1);\n    SegmentReader sr2 = (SegmentReader) rs2[0];\n\n    // At this point they share the same BitVector\n    assertTrue(sr1.deletedDocs==sr2.deletedDocs);\n    final BitVector delDocs = sr1.deletedDocs;\n    r1.close();\n\n    r2.deleteDocument(0);\n    assertTrue(delDocs==sr2.deletedDocs);\n    r2.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testDeletes2() throws Throwable {\n    Random random = newRandom();\n    Directory dir = newDirectory(random);\n    createIndex(random, dir, false);\n    // Get delete bitVector\n    modifyIndex(0, dir);\n    IndexReader r1 = IndexReader.open(dir, false);\n\n    // Add doc:\n    modifyIndex(5, dir);\n\n    IndexReader r2 = r1.reopen();\n    assertTrue(r1 != r2);\n\n    IndexReader[] rs2 = r2.getSequentialSubReaders();\n\n    SegmentReader sr1 = SegmentReader.getOnlySegmentReader(r1);\n    SegmentReader sr2 = (SegmentReader) rs2[0];\n\n    // At this point they share the same BitVector\n    assertTrue(sr1.deletedDocs==sr2.deletedDocs);\n    final BitVector delDocs = sr1.deletedDocs;\n    r1.close();\n\n    r2.deleteDocument(0);\n    assertTrue(delDocs==sr2.deletedDocs);\n    r2.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4e8cc373c801e54cec75daf9f52792cb4b17f536","date":1291116159,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReaderReopen#testDeletes2().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReaderReopen#testDeletes2().mjava","sourceNew":"  public void testDeletes2() throws Throwable {\n    Directory dir = newDirectory();\n    createIndex(random, dir, false);\n    // Get delete bitVector\n    modifyIndex(0, dir);\n    IndexReader r1 = IndexReader.open(dir, false);\n\n    // Add doc:\n    modifyIndex(5, dir);\n\n    IndexReader r2 = r1.reopen();\n    assertTrue(r1 != r2);\n\n    IndexReader[] rs2 = r2.getSequentialSubReaders();\n\n    SegmentReader sr1 = getOnlySegmentReader(r1);\n    SegmentReader sr2 = (SegmentReader) rs2[0];\n\n    // At this point they share the same BitVector\n    assertTrue(sr1.deletedDocs==sr2.deletedDocs);\n    final BitVector delDocs = sr1.deletedDocs;\n    r1.close();\n\n    r2.deleteDocument(0);\n    assertTrue(delDocs==sr2.deletedDocs);\n    r2.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testDeletes2() throws Throwable {\n    Directory dir = newDirectory();\n    createIndex(random, dir, false);\n    // Get delete bitVector\n    modifyIndex(0, dir);\n    IndexReader r1 = IndexReader.open(dir, false);\n\n    // Add doc:\n    modifyIndex(5, dir);\n\n    IndexReader r2 = r1.reopen();\n    assertTrue(r1 != r2);\n\n    IndexReader[] rs2 = r2.getSequentialSubReaders();\n\n    SegmentReader sr1 = SegmentReader.getOnlySegmentReader(r1);\n    SegmentReader sr2 = (SegmentReader) rs2[0];\n\n    // At this point they share the same BitVector\n    assertTrue(sr1.deletedDocs==sr2.deletedDocs);\n    final BitVector delDocs = sr1.deletedDocs;\n    r1.close();\n\n    r2.deleteDocument(0);\n    assertTrue(delDocs==sr2.deletedDocs);\n    r2.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3bb13258feba31ab676502787ab2e1779f129b7a","date":1291596436,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReaderReopen#testDeletes2().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReaderReopen#testDeletes2().mjava","sourceNew":"  public void testDeletes2() throws Throwable {\n    Directory dir = newDirectory();\n    createIndex(random, dir, false);\n    // Get delete bitVector\n    modifyIndex(0, dir);\n    IndexReader r1 = IndexReader.open(dir, false);\n\n    // Add doc:\n    modifyIndex(5, dir);\n\n    IndexReader r2 = r1.reopen();\n    assertTrue(r1 != r2);\n\n    IndexReader[] rs2 = r2.getSequentialSubReaders();\n\n    SegmentReader sr1 = getOnlySegmentReader(r1);\n    SegmentReader sr2 = (SegmentReader) rs2[0];\n\n    // At this point they share the same BitVector\n    assertTrue(sr1.deletedDocs==sr2.deletedDocs);\n    final BitVector delDocs = sr1.deletedDocs;\n    r1.close();\n\n    r2.deleteDocument(0);\n    assertTrue(delDocs==sr2.deletedDocs);\n    r2.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testDeletes2() throws Throwable {\n    Directory dir = newDirectory();\n    createIndex(random, dir, false);\n    // Get delete bitVector\n    modifyIndex(0, dir);\n    IndexReader r1 = IndexReader.open(dir, false);\n\n    // Add doc:\n    modifyIndex(5, dir);\n\n    IndexReader r2 = r1.reopen();\n    assertTrue(r1 != r2);\n\n    IndexReader[] rs2 = r2.getSequentialSubReaders();\n\n    SegmentReader sr1 = SegmentReader.getOnlySegmentReader(r1);\n    SegmentReader sr2 = (SegmentReader) rs2[0];\n\n    // At this point they share the same BitVector\n    assertTrue(sr1.deletedDocs==sr2.deletedDocs);\n    final BitVector delDocs = sr1.deletedDocs;\n    r1.close();\n\n    r2.deleteDocument(0);\n    assertTrue(delDocs==sr2.deletedDocs);\n    r2.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReaderReopen#testDeletes2().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReaderReopen#testDeletes2().mjava","sourceNew":"  public void testDeletes2() throws Throwable {\n    Directory dir = newDirectory();\n    createIndex(random, dir, false);\n    // Get delete bitVector\n    modifyIndex(0, dir);\n    IndexReader r1 = IndexReader.open(dir, false);\n\n    // Add doc:\n    modifyIndex(5, dir);\n\n    IndexReader r2 = r1.reopen();\n    assertTrue(r1 != r2);\n\n    IndexReader[] rs2 = r2.getSequentialSubReaders();\n\n    SegmentReader sr1 = getOnlySegmentReader(r1);\n    SegmentReader sr2 = (SegmentReader) rs2[0];\n\n    // At this point they share the same BitVector\n    assertTrue(sr1.deletedDocs==sr2.deletedDocs);\n    final BitVector delDocs = sr1.deletedDocs;\n    r1.close();\n\n    r2.deleteDocument(0);\n    assertTrue(delDocs==sr2.deletedDocs);\n    r2.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testDeletes2() throws Throwable {\n    Directory dir = new MockRAMDirectory();\n    createIndex(dir, false);\n    // Get delete bitVector\n    modifyIndex(0, dir);\n    IndexReader r1 = IndexReader.open(dir, false);\n\n    // Add doc:\n    modifyIndex(5, dir);\n\n    IndexReader r2 = r1.reopen();\n    assertTrue(r1 != r2);\n\n    IndexReader[] rs2 = r2.getSequentialSubReaders();\n\n    SegmentReader sr1 = SegmentReader.getOnlySegmentReader(r1);\n    SegmentReader sr2 = (SegmentReader) rs2[0];\n\n    // At this point they share the same BitVector\n    assertTrue(sr1.deletedDocs==sr2.deletedDocs);\n    final BitVector delDocs = sr1.deletedDocs;\n    r1.close();\n\n    r2.deleteDocument(0);\n    assertTrue(delDocs==sr2.deletedDocs);\n    r2.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e7bd246bb7bc35ac22edfee9157e034dfc4e65eb","date":1309960478,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReaderReopen#testDeletes2().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReaderReopen#testDeletes2().mjava","sourceNew":"  public void testDeletes2() throws Throwable {\n    Directory dir = newDirectory();\n    createIndex(random, dir, false);\n    // Get delete bitVector\n    modifyIndex(0, dir);\n    IndexReader r1 = IndexReader.open(dir, false);\n\n    // Add doc:\n    modifyIndex(5, dir);\n\n    IndexReader r2 = r1.reopen();\n    assertTrue(r1 != r2);\n\n    IndexReader[] rs2 = r2.getSequentialSubReaders();\n\n    SegmentReader sr1 = getOnlySegmentReader(r1);\n    SegmentReader sr2 = (SegmentReader) rs2[0];\n\n    // At this point they share the same BitVector\n    assertTrue(sr1.liveDocs==sr2.liveDocs);\n    final BitVector liveDocs = sr1.liveDocs;\n    r1.close();\n\n    r2.deleteDocument(0);\n    assertTrue(liveDocs==sr2.liveDocs);\n    r2.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testDeletes2() throws Throwable {\n    Directory dir = newDirectory();\n    createIndex(random, dir, false);\n    // Get delete bitVector\n    modifyIndex(0, dir);\n    IndexReader r1 = IndexReader.open(dir, false);\n\n    // Add doc:\n    modifyIndex(5, dir);\n\n    IndexReader r2 = r1.reopen();\n    assertTrue(r1 != r2);\n\n    IndexReader[] rs2 = r2.getSequentialSubReaders();\n\n    SegmentReader sr1 = getOnlySegmentReader(r1);\n    SegmentReader sr2 = (SegmentReader) rs2[0];\n\n    // At this point they share the same BitVector\n    assertTrue(sr1.deletedDocs==sr2.deletedDocs);\n    final BitVector delDocs = sr1.deletedDocs;\n    r1.close();\n\n    r2.deleteDocument(0);\n    assertTrue(delDocs==sr2.deletedDocs);\n    r2.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"817d8435e9135b756f08ce6710ab0baac51bdf88","date":1309986993,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReaderReopen#testDeletes2().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReaderReopen#testDeletes2().mjava","sourceNew":"  public void testDeletes2() throws Throwable {\n    Directory dir = newDirectory();\n    createIndex(random, dir, false);\n    // Get delete bitVector\n    modifyIndex(0, dir);\n    IndexReader r1 = IndexReader.open(dir, false);\n\n    // Add doc:\n    modifyIndex(5, dir);\n\n    IndexReader r2 = r1.reopen();\n    assertTrue(r1 != r2);\n\n    IndexReader[] rs2 = r2.getSequentialSubReaders();\n\n    SegmentReader sr1 = getOnlySegmentReader(r1);\n    SegmentReader sr2 = (SegmentReader) rs2[0];\n\n    // At this point they share the same BitVector\n    assertTrue(sr1.liveDocs==sr2.liveDocs);\n    final BitVector liveDocs = sr1.liveDocs;\n    r1.close();\n\n    r2.deleteDocument(0);\n    assertTrue(liveDocs==sr2.liveDocs);\n    r2.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testDeletes2() throws Throwable {\n    Directory dir = newDirectory();\n    createIndex(random, dir, false);\n    // Get delete bitVector\n    modifyIndex(0, dir);\n    IndexReader r1 = IndexReader.open(dir, false);\n\n    // Add doc:\n    modifyIndex(5, dir);\n\n    IndexReader r2 = r1.reopen();\n    assertTrue(r1 != r2);\n\n    IndexReader[] rs2 = r2.getSequentialSubReaders();\n\n    SegmentReader sr1 = getOnlySegmentReader(r1);\n    SegmentReader sr2 = (SegmentReader) rs2[0];\n\n    // At this point they share the same BitVector\n    assertTrue(sr1.deletedDocs==sr2.deletedDocs);\n    final BitVector delDocs = sr1.deletedDocs;\n    r1.close();\n\n    r2.deleteDocument(0);\n    assertTrue(delDocs==sr2.deletedDocs);\n    r2.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d083e83f225b11e5fdd900e83d26ddb385b6955c","date":1310029438,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReaderReopen#testDeletes2().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReaderReopen#testDeletes2().mjava","sourceNew":"  public void testDeletes2() throws Throwable {\n    Directory dir = newDirectory();\n    createIndex(random, dir, false);\n    // Get delete bitVector\n    modifyIndex(0, dir);\n    IndexReader r1 = IndexReader.open(dir, false);\n\n    // Add doc:\n    modifyIndex(5, dir);\n\n    IndexReader r2 = r1.reopen();\n    assertTrue(r1 != r2);\n\n    IndexReader[] rs2 = r2.getSequentialSubReaders();\n\n    SegmentReader sr1 = getOnlySegmentReader(r1);\n    SegmentReader sr2 = (SegmentReader) rs2[0];\n\n    // At this point they share the same BitVector\n    assertTrue(sr1.liveDocs==sr2.liveDocs);\n    final BitVector liveDocs = sr1.liveDocs;\n    r1.close();\n\n    r2.deleteDocument(0);\n    assertTrue(liveDocs==sr2.liveDocs);\n    r2.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testDeletes2() throws Throwable {\n    Directory dir = newDirectory();\n    createIndex(random, dir, false);\n    // Get delete bitVector\n    modifyIndex(0, dir);\n    IndexReader r1 = IndexReader.open(dir, false);\n\n    // Add doc:\n    modifyIndex(5, dir);\n\n    IndexReader r2 = r1.reopen();\n    assertTrue(r1 != r2);\n\n    IndexReader[] rs2 = r2.getSequentialSubReaders();\n\n    SegmentReader sr1 = getOnlySegmentReader(r1);\n    SegmentReader sr2 = (SegmentReader) rs2[0];\n\n    // At this point they share the same BitVector\n    assertTrue(sr1.deletedDocs==sr2.deletedDocs);\n    final BitVector delDocs = sr1.deletedDocs;\n    r1.close();\n\n    r2.deleteDocument(0);\n    assertTrue(delDocs==sr2.deletedDocs);\n    r2.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8a8259c922a83abc544609227a60d48e5ee93e7e","date":1317679620,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexReaderReopen#testDeletes2().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReaderReopen#testDeletes2().mjava","sourceNew":"  public void testDeletes2() throws Throwable {\n    Directory dir = newDirectory();\n    createIndex(random, dir, false);\n    // Get delete bitVector\n    modifyIndex(0, dir);\n    IndexReader r1 = IndexReader.open(dir, false);\n\n    // Add doc:\n    modifyIndex(5, dir);\n\n    IndexReader r2 = IndexReader.openIfChanged(r1);\n    assertNotNull(r2);\n    assertTrue(r1 != r2);\n\n    IndexReader[] rs2 = r2.getSequentialSubReaders();\n\n    SegmentReader sr1 = getOnlySegmentReader(r1);\n    SegmentReader sr2 = (SegmentReader) rs2[0];\n\n    // At this point they share the same BitVector\n    assertTrue(sr1.liveDocs==sr2.liveDocs);\n    final BitVector liveDocs = sr1.liveDocs;\n    r1.close();\n\n    r2.deleteDocument(0);\n    assertTrue(liveDocs==sr2.liveDocs);\n    r2.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testDeletes2() throws Throwable {\n    Directory dir = newDirectory();\n    createIndex(random, dir, false);\n    // Get delete bitVector\n    modifyIndex(0, dir);\n    IndexReader r1 = IndexReader.open(dir, false);\n\n    // Add doc:\n    modifyIndex(5, dir);\n\n    IndexReader r2 = r1.reopen();\n    assertTrue(r1 != r2);\n\n    IndexReader[] rs2 = r2.getSequentialSubReaders();\n\n    SegmentReader sr1 = getOnlySegmentReader(r1);\n    SegmentReader sr2 = (SegmentReader) rs2[0];\n\n    // At this point they share the same BitVector\n    assertTrue(sr1.liveDocs==sr2.liveDocs);\n    final BitVector liveDocs = sr1.liveDocs;\n    r1.close();\n\n    r2.deleteDocument(0);\n    assertTrue(liveDocs==sr2.liveDocs);\n    r2.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4122a26e1fd0457a340616673a3d3aada370f713","date":1322955654,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReaderReopen#testDeletes2().mjava","sourceNew":null,"sourceOld":"  public void testDeletes2() throws Throwable {\n    Directory dir = newDirectory();\n    createIndex(random, dir, false);\n    // Get delete bitVector\n    modifyIndex(0, dir);\n    IndexReader r1 = IndexReader.open(dir, false);\n\n    // Add doc:\n    modifyIndex(5, dir);\n\n    IndexReader r2 = IndexReader.openIfChanged(r1);\n    assertNotNull(r2);\n    assertTrue(r1 != r2);\n\n    IndexReader[] rs2 = r2.getSequentialSubReaders();\n\n    SegmentReader sr1 = getOnlySegmentReader(r1);\n    SegmentReader sr2 = (SegmentReader) rs2[0];\n\n    // At this point they share the same BitVector\n    assertTrue(sr1.liveDocs==sr2.liveDocs);\n    final BitVector liveDocs = sr1.liveDocs;\n    r1.close();\n\n    r2.deleteDocument(0);\n    assertTrue(liveDocs==sr2.liveDocs);\n    r2.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3615ce4a1f785ae1b779244de52c6a7d99227e60","date":1323422019,"type":4,"author":"Uwe Schindler","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReaderReopen#testDeletes2().mjava","sourceNew":null,"sourceOld":"  public void testDeletes2() throws Throwable {\n    Directory dir = newDirectory();\n    createIndex(random, dir, false);\n    // Get delete bitVector\n    modifyIndex(0, dir);\n    IndexReader r1 = IndexReader.open(dir, false);\n\n    // Add doc:\n    modifyIndex(5, dir);\n\n    IndexReader r2 = IndexReader.openIfChanged(r1);\n    assertNotNull(r2);\n    assertTrue(r1 != r2);\n\n    IndexReader[] rs2 = r2.getSequentialSubReaders();\n\n    SegmentReader sr1 = getOnlySegmentReader(r1);\n    SegmentReader sr2 = (SegmentReader) rs2[0];\n\n    // At this point they share the same BitVector\n    assertTrue(sr1.liveDocs==sr2.liveDocs);\n    final BitVector liveDocs = sr1.liveDocs;\n    r1.close();\n\n    r2.deleteDocument(0);\n    assertTrue(liveDocs==sr2.liveDocs);\n    r2.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","date":1323437438,"type":4,"author":"Robert Muir","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexReaderReopen#testDeletes2().mjava","sourceNew":null,"sourceOld":"  public void testDeletes2() throws Throwable {\n    Directory dir = newDirectory();\n    createIndex(random, dir, false);\n    // Get delete bitVector\n    modifyIndex(0, dir);\n    IndexReader r1 = IndexReader.open(dir, false);\n\n    // Add doc:\n    modifyIndex(5, dir);\n\n    IndexReader r2 = IndexReader.openIfChanged(r1);\n    assertNotNull(r2);\n    assertTrue(r1 != r2);\n\n    IndexReader[] rs2 = r2.getSequentialSubReaders();\n\n    SegmentReader sr1 = getOnlySegmentReader(r1);\n    SegmentReader sr2 = (SegmentReader) rs2[0];\n\n    // At this point they share the same BitVector\n    assertTrue(sr1.liveDocs==sr2.liveDocs);\n    final BitVector liveDocs = sr1.liveDocs;\n    r1.close();\n\n    r2.deleteDocument(0);\n    assertTrue(liveDocs==sr2.liveDocs);\n    r2.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c":["b21422ff1d1d56499dec481f193b402e5e8def5b"],"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00":["8a8259c922a83abc544609227a60d48e5ee93e7e","3615ce4a1f785ae1b779244de52c6a7d99227e60"],"e7bd246bb7bc35ac22edfee9157e034dfc4e65eb":["4e8cc373c801e54cec75daf9f52792cb4b17f536"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["9454a6510e2db155fb01faa5c049b06ece95fab9","4e8cc373c801e54cec75daf9f52792cb4b17f536"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":["4e8cc373c801e54cec75daf9f52792cb4b17f536","e7bd246bb7bc35ac22edfee9157e034dfc4e65eb"],"817d8435e9135b756f08ce6710ab0baac51bdf88":["4e8cc373c801e54cec75daf9f52792cb4b17f536","e7bd246bb7bc35ac22edfee9157e034dfc4e65eb"],"8a8259c922a83abc544609227a60d48e5ee93e7e":["e7bd246bb7bc35ac22edfee9157e034dfc4e65eb"],"1f653cfcf159baeaafe5d01682a911e95bba4012":["ab9633cb67e3c0aec3c066147a23a957d6e7ad8c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3615ce4a1f785ae1b779244de52c6a7d99227e60":["8a8259c922a83abc544609227a60d48e5ee93e7e","4122a26e1fd0457a340616673a3d3aada370f713"],"4122a26e1fd0457a340616673a3d3aada370f713":["8a8259c922a83abc544609227a60d48e5ee93e7e"],"b21422ff1d1d56499dec481f193b402e5e8def5b":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"3bb13258feba31ab676502787ab2e1779f129b7a":["1f653cfcf159baeaafe5d01682a911e95bba4012","4e8cc373c801e54cec75daf9f52792cb4b17f536"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3615ce4a1f785ae1b779244de52c6a7d99227e60"],"4e8cc373c801e54cec75daf9f52792cb4b17f536":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00":[],"e7bd246bb7bc35ac22edfee9157e034dfc4e65eb":["d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88","8a8259c922a83abc544609227a60d48e5ee93e7e"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"d083e83f225b11e5fdd900e83d26ddb385b6955c":[],"817d8435e9135b756f08ce6710ab0baac51bdf88":[],"8a8259c922a83abc544609227a60d48e5ee93e7e":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","3615ce4a1f785ae1b779244de52c6a7d99227e60","4122a26e1fd0457a340616673a3d3aada370f713"],"1f653cfcf159baeaafe5d01682a911e95bba4012":["3bb13258feba31ab676502787ab2e1779f129b7a","4e8cc373c801e54cec75daf9f52792cb4b17f536"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"3615ce4a1f785ae1b779244de52c6a7d99227e60":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4122a26e1fd0457a340616673a3d3aada370f713":["3615ce4a1f785ae1b779244de52c6a7d99227e60"],"b21422ff1d1d56499dec481f193b402e5e8def5b":["ab9633cb67e3c0aec3c066147a23a957d6e7ad8c"],"3bb13258feba31ab676502787ab2e1779f129b7a":[],"4e8cc373c801e54cec75daf9f52792cb4b17f536":["e7bd246bb7bc35ac22edfee9157e034dfc4e65eb","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88","3bb13258feba31ab676502787ab2e1779f129b7a"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","b21422ff1d1d56499dec481f193b402e5e8def5b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88","3bb13258feba31ab676502787ab2e1779f129b7a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}