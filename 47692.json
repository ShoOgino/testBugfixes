{"path":"lucene/src/java/org/apache/lucene/index/IndexWriter#rollback().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexWriter#rollback().mjava","pathOld":"src/java/org/apache/lucene/index/IndexWriter#rollback().mjava","sourceNew":"  /**\n   * Close the <code>IndexWriter</code> without committing\n   * any changes that have occurred since the last commit\n   * (or since it was opened, if commit hasn't been called).\n   * This removes any temporary files that had been created,\n   * after which the state of the index will be the same as\n   * it was when commit() was last called or when this\n   * writer was first opened.  This also clears a previous\n   * call to {@link #prepareCommit}.\n   * @throws IOException if there is a low-level IO error\n   */\n  public void rollback() throws IOException {\n    ensureOpen();\n\n    // Ensure that only one thread actually gets to do the closing:\n    if (shouldClose())\n      rollbackInternal();\n  }\n\n","sourceOld":"  /**\n   * Close the <code>IndexWriter</code> without committing\n   * any changes that have occurred since the last commit\n   * (or since it was opened, if commit hasn't been called).\n   * This removes any temporary files that had been created,\n   * after which the state of the index will be the same as\n   * it was when commit() was last called or when this\n   * writer was first opened.  This also clears a previous\n   * call to {@link #prepareCommit}.\n   * @throws IOException if there is a low-level IO error\n   */\n  public void rollback() throws IOException {\n    ensureOpen();\n\n    // Ensure that only one thread actually gets to do the closing:\n    if (shouldClose())\n      rollbackInternal();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#rollback().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriter#rollback().mjava","sourceNew":"  /**\n   * Close the <code>IndexWriter</code> without committing\n   * any changes that have occurred since the last commit\n   * (or since it was opened, if commit hasn't been called).\n   * This removes any temporary files that had been created,\n   * after which the state of the index will be the same as\n   * it was when commit() was last called or when this\n   * writer was first opened.  This also clears a previous\n   * call to {@link #prepareCommit}.\n   * @throws IOException if there is a low-level IO error\n   */\n  public void rollback() throws IOException {\n    ensureOpen();\n\n    // Ensure that only one thread actually gets to do the closing:\n    if (shouldClose())\n      rollbackInternal();\n  }\n\n","sourceOld":"  /**\n   * Close the <code>IndexWriter</code> without committing\n   * any changes that have occurred since the last commit\n   * (or since it was opened, if commit hasn't been called).\n   * This removes any temporary files that had been created,\n   * after which the state of the index will be the same as\n   * it was when commit() was last called or when this\n   * writer was first opened.  This also clears a previous\n   * call to {@link #prepareCommit}.\n   * @throws IOException if there is a low-level IO error\n   */\n  public void rollback() throws IOException {\n    ensureOpen();\n\n    // Ensure that only one thread actually gets to do the closing:\n    if (shouldClose())\n      rollbackInternal();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}