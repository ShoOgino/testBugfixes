{"path":"lucene/test-framework/src/test/org/apache/lucene/mockfile/TestShuffleFS#testConsistentOrder().mjava","commits":[{"id":"0570a6b8fbda74e4718ba36c70fd1953103a3dcb","date":1429616032,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/test/org/apache/lucene/mockfile/TestShuffleFS#testConsistentOrder().mjava","pathOld":"/dev/null","sourceNew":"  /** \n   * shuffle underlying contents randomly with different seeds,\n   * and ensure shuffling that again with the same seed is consistent.\n   */\n  public void testConsistentOrder() throws IOException {\n    Path raw = createTempDir();\n    for (int i = 0; i < 100; i++) {\n      Files.createFile(raw.resolve(\"file\" + i));\n    }\n    \n    long seed = random().nextLong();\n    Path dirExpected = wrap(raw, seed);\n\n    // get the shuffled listing for the seed.\n    List<String> expected = new ArrayList<>();\n    try (DirectoryStream<Path> stream = Files.newDirectoryStream(dirExpected)) {\n      for (Path path : stream) {\n        expected.add(path.getFileName().toString());\n      }\n    }\n    \n    // shuffle wrapping a different scrambled ordering each time, it should always be the same.\n    for (int i = 0; i < 100; i++) {\n      Path scrambled = wrap(raw, random().nextLong());\n      Path ordered = wrap(scrambled, seed);\n    \n      List<String> seen = new ArrayList<>();\n      try (DirectoryStream<Path> stream = Files.newDirectoryStream(ordered)) {\n        for (Path path : stream) {\n          seen.add(path.getFileName().toString());\n        }\n      }\n      \n      // we should always see the same files in the same order\n      assertEquals(expected, seen);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0570a6b8fbda74e4718ba36c70fd1953103a3dcb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0570a6b8fbda74e4718ba36c70fd1953103a3dcb"]},"commit2Childs":{"0570a6b8fbda74e4718ba36c70fd1953103a3dcb":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0570a6b8fbda74e4718ba36c70fd1953103a3dcb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}