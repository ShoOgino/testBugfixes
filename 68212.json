{"path":"lucene/src/test/org/apache/lucene/search/payloads/TestPayloadNearQuery#beforeClass().mjava","commits":[{"id":"cca56866c19997e28ef073622656669c15210540","date":1307449014,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/payloads/TestPayloadNearQuery#beforeClass().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/payloads/TestPayloadNearQuery#setUp().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, directory, \n        newIndexWriterConfig(TEST_VERSION_CURRENT, new PayloadAnalyzer())\n        .setSimilarityProvider(similarityProvider));\n    //writer.infoStream = System.out;\n    for (int i = 0; i < 1000; i++) {\n      Document doc = new Document();\n      doc.add(newField(\"field\", English.intToEnglish(i), Field.Store.YES, Field.Index.ANALYZED));\n      String txt = English.intToEnglish(i) +' '+English.intToEnglish(i+1);\n      doc.add(newField(\"field2\",  txt, Field.Store.YES, Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n    reader = writer.getReader();\n    writer.close();\n\n    searcher = newSearcher(reader);\n    searcher.setSimilarityProvider(similarityProvider);\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, directory, \n        newIndexWriterConfig(TEST_VERSION_CURRENT, new PayloadAnalyzer())\n        .setSimilarityProvider(similarityProvider));\n    //writer.infoStream = System.out;\n    for (int i = 0; i < 1000; i++) {\n      Document doc = new Document();\n      doc.add(newField(\"field\", English.intToEnglish(i), Field.Store.YES, Field.Index.ANALYZED));\n      String txt = English.intToEnglish(i) +' '+English.intToEnglish(i+1);\n      doc.add(newField(\"field2\",  txt, Field.Store.YES, Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n    reader = writer.getReader();\n    writer.close();\n\n    searcher = newSearcher(reader);\n    searcher.setSimilarityProvider(similarityProvider);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"77cf4379b2824f6ea34b091c495d6e95c38ff9e2","date":1307610475,"type":1,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/payloads/TestPayloadNearQuery#beforeClass().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/payloads/TestPayloadNearQuery#setUp().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, directory, \n        newIndexWriterConfig(TEST_VERSION_CURRENT, new PayloadAnalyzer())\n        .setSimilarityProvider(similarityProvider));\n    //writer.infoStream = System.out;\n    for (int i = 0; i < 1000; i++) {\n      Document doc = new Document();\n      doc.add(newField(\"field\", English.intToEnglish(i), Field.Store.YES, Field.Index.ANALYZED));\n      String txt = English.intToEnglish(i) +' '+English.intToEnglish(i+1);\n      doc.add(newField(\"field2\",  txt, Field.Store.YES, Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n    reader = writer.getReader();\n    writer.close();\n\n    searcher = newSearcher(reader);\n    searcher.setSimilarityProvider(similarityProvider);\n  }\n\n","sourceOld":"  @Override\n  public void setUp() throws Exception {\n    super.setUp();\n    directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, directory, \n        newIndexWriterConfig(TEST_VERSION_CURRENT, new PayloadAnalyzer())\n        .setSimilarityProvider(similarityProvider));\n    //writer.infoStream = System.out;\n    for (int i = 0; i < 1000; i++) {\n      Document doc = new Document();\n      doc.add(newField(\"field\", English.intToEnglish(i), Field.Store.YES, Field.Index.ANALYZED));\n      String txt = English.intToEnglish(i) +' '+English.intToEnglish(i+1);\n      doc.add(newField(\"field2\",  txt, Field.Store.YES, Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n    reader = writer.getReader();\n    writer.close();\n\n    searcher = newSearcher(reader);\n    searcher.setSimilarityProvider(similarityProvider);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","date":1307729864,"type":0,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/payloads/TestPayloadNearQuery#beforeClass().mjava","pathOld":"/dev/null","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, directory, \n        newIndexWriterConfig(TEST_VERSION_CURRENT, new PayloadAnalyzer())\n        .setSimilarityProvider(similarityProvider));\n    //writer.infoStream = System.out;\n    for (int i = 0; i < 1000; i++) {\n      Document doc = new Document();\n      doc.add(newField(\"field\", English.intToEnglish(i), Field.Store.YES, Field.Index.ANALYZED));\n      String txt = English.intToEnglish(i) +' '+English.intToEnglish(i+1);\n      doc.add(newField(\"field2\",  txt, Field.Store.YES, Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n    reader = writer.getReader();\n    writer.close();\n\n    searcher = newSearcher(reader);\n    searcher.setSimilarityProvider(similarityProvider);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1509f151d7692d84fae414b2b799ac06ba60fcb4","date":1314451621,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/payloads/TestPayloadNearQuery#beforeClass().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/payloads/TestPayloadNearQuery#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, directory, \n        newIndexWriterConfig(TEST_VERSION_CURRENT, new PayloadAnalyzer())\n        .setSimilarityProvider(similarityProvider));\n    //writer.infoStream = System.out;\n    for (int i = 0; i < 1000; i++) {\n      Document doc = new Document();\n      doc.add(newField(\"field\", English.intToEnglish(i), TextField.TYPE_STORED));\n      String txt = English.intToEnglish(i) +' '+English.intToEnglish(i+1);\n      doc.add(newField(\"field2\",  txt, TextField.TYPE_STORED));\n      writer.addDocument(doc);\n    }\n    reader = writer.getReader();\n    writer.close();\n\n    searcher = newSearcher(reader);\n    searcher.setSimilarityProvider(similarityProvider);\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, directory, \n        newIndexWriterConfig(TEST_VERSION_CURRENT, new PayloadAnalyzer())\n        .setSimilarityProvider(similarityProvider));\n    //writer.infoStream = System.out;\n    for (int i = 0; i < 1000; i++) {\n      Document doc = new Document();\n      doc.add(newField(\"field\", English.intToEnglish(i), Field.Store.YES, Field.Index.ANALYZED));\n      String txt = English.intToEnglish(i) +' '+English.intToEnglish(i+1);\n      doc.add(newField(\"field2\",  txt, Field.Store.YES, Field.Index.ANALYZED));\n      writer.addDocument(doc);\n    }\n    reader = writer.getReader();\n    writer.close();\n\n    searcher = newSearcher(reader);\n    searcher.setSimilarityProvider(similarityProvider);\n  }\n\n","bugFix":null,"bugIntro":["04f07771a2a7dd3a395700665ed839c3dae2def2"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1ab42b0756bdd98ac6a6767b5a77d10d9ba12b4b","date":1328532481,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/payloads/TestPayloadNearQuery#beforeClass().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/payloads/TestPayloadNearQuery#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, directory, \n        newIndexWriterConfig(TEST_VERSION_CURRENT, new PayloadAnalyzer())\n        .setSimilarity(similarity));\n    //writer.infoStream = System.out;\n    for (int i = 0; i < 1000; i++) {\n      Document doc = new Document();\n      doc.add(newField(\"field\", English.intToEnglish(i), TextField.TYPE_STORED));\n      String txt = English.intToEnglish(i) +' '+English.intToEnglish(i+1);\n      doc.add(newField(\"field2\",  txt, TextField.TYPE_STORED));\n      writer.addDocument(doc);\n    }\n    reader = writer.getReader();\n    writer.close();\n\n    searcher = newSearcher(reader);\n    searcher.setSimilarity(similarity);\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, directory, \n        newIndexWriterConfig(TEST_VERSION_CURRENT, new PayloadAnalyzer())\n        .setSimilarityProvider(similarityProvider));\n    //writer.infoStream = System.out;\n    for (int i = 0; i < 1000; i++) {\n      Document doc = new Document();\n      doc.add(newField(\"field\", English.intToEnglish(i), TextField.TYPE_STORED));\n      String txt = English.intToEnglish(i) +' '+English.intToEnglish(i+1);\n      doc.add(newField(\"field2\",  txt, TextField.TYPE_STORED));\n      writer.addDocument(doc);\n    }\n    reader = writer.getReader();\n    writer.close();\n\n    searcher = newSearcher(reader);\n    searcher.setSimilarityProvider(similarityProvider);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/payloads/TestPayloadNearQuery#beforeClass().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/payloads/TestPayloadNearQuery#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, directory, \n        newIndexWriterConfig(TEST_VERSION_CURRENT, new PayloadAnalyzer())\n        .setSimilarity(similarity));\n    //writer.infoStream = System.out;\n    for (int i = 0; i < 1000; i++) {\n      Document doc = new Document();\n      doc.add(newField(\"field\", English.intToEnglish(i), TextField.TYPE_STORED));\n      String txt = English.intToEnglish(i) +' '+English.intToEnglish(i+1);\n      doc.add(newField(\"field2\",  txt, TextField.TYPE_STORED));\n      writer.addDocument(doc);\n    }\n    reader = writer.getReader();\n    writer.close();\n\n    searcher = newSearcher(reader);\n    searcher.setSimilarity(similarity);\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    directory = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random, directory, \n        newIndexWriterConfig(TEST_VERSION_CURRENT, new PayloadAnalyzer())\n        .setSimilarity(similarity));\n    //writer.infoStream = System.out;\n    for (int i = 0; i < 1000; i++) {\n      Document doc = new Document();\n      doc.add(newField(\"field\", English.intToEnglish(i), TextField.TYPE_STORED));\n      String txt = English.intToEnglish(i) +' '+English.intToEnglish(i+1);\n      doc.add(newField(\"field2\",  txt, TextField.TYPE_STORED));\n      writer.addDocument(doc);\n    }\n    reader = writer.getReader();\n    writer.close();\n\n    searcher = newSearcher(reader);\n    searcher.setSimilarity(similarity);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","cca56866c19997e28ef073622656669c15210540"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["1ab42b0756bdd98ac6a6767b5a77d10d9ba12b4b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"77cf4379b2824f6ea34b091c495d6e95c38ff9e2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","cca56866c19997e28ef073622656669c15210540"],"1ab42b0756bdd98ac6a6767b5a77d10d9ba12b4b":["1509f151d7692d84fae414b2b799ac06ba60fcb4"],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["cca56866c19997e28ef073622656669c15210540"],"cca56866c19997e28ef073622656669c15210540":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655":[],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","77cf4379b2824f6ea34b091c495d6e95c38ff9e2","cca56866c19997e28ef073622656669c15210540"],"77cf4379b2824f6ea34b091c495d6e95c38ff9e2":[],"1ab42b0756bdd98ac6a6767b5a77d10d9ba12b4b":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["1ab42b0756bdd98ac6a6767b5a77d10d9ba12b4b"],"cca56866c19997e28ef073622656669c15210540":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","77cf4379b2824f6ea34b091c495d6e95c38ff9e2","1509f151d7692d84fae414b2b799ac06ba60fcb4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","77cf4379b2824f6ea34b091c495d6e95c38ff9e2","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}