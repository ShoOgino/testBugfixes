{"path":"solr/core/src/java/org/apache/solr/handler/admin/SolrInfoMBeanHandler#getDiff(NamedList[NamedList[NamedList[Object]]],NamedList[NamedList[NamedList[Object]]]).mjava","commits":[{"id":"2396be4785ec8ca6c942dff4d20c1c93dd03db6d","date":1333735663,"type":0,"author":"Ryan McKinley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/SolrInfoMBeanHandler#getDiff(NamedList[NamedList[NamedList[Object]]],NamedList[NamedList[NamedList[Object]]]).mjava","pathOld":"/dev/null","sourceNew":"  protected NamedList<NamedList<NamedList<Object>>> getDiff(NamedList<NamedList<NamedList<Object>>> ref, NamedList<NamedList<NamedList<Object>>> now) {\n    NamedList<NamedList<NamedList<Object>>> changed = new NamedList<NamedList<NamedList<Object>>>();\n    \n    // Cycle through each category\n    for(int i=0;i<ref.size();i++) {\n      String category = ref.getName(i);\n      NamedList<NamedList<Object>> ref_cat = ref.get(category);\n      NamedList<NamedList<Object>> now_cat = now.get(category);\n      if(now_cat != null) {\n        String ref_txt = ref_cat+\"\";\n        String now_txt = now_cat+\"\";\n        if(!ref_txt.equals(now_txt)) {\n          // Something in the category changed\n          // Now iterate the real beans\n          \n          NamedList<NamedList<Object>> cat = new NamedList<NamedList<Object>>();\n          for(int j=0;j<ref_cat.size();j++) {\n            String name = ref_cat.getName(j);\n            NamedList<Object> ref_bean = ref_cat.get(name);\n            NamedList<Object> now_bean = now_cat.get(name);\n\n            ref_txt = ref_bean+\"\";\n            now_txt = now_bean+\"\";\n            if(!ref_txt.equals(now_txt)) {\n//              System.out.println( \"----\" );\n//              System.out.println( category +\" : \" + name );\n//              System.out.println( \"REF: \" + ref_txt );\n//              System.out.println( \"NOW: \" + now_txt );\n              \n              // Calculate the differences\n              cat.add(name, diffNamedList(ref_bean,now_bean));\n            }\n          }\n          if(cat.size()>0) {\n            changed.add(category, cat);\n          }\n        }\n      }\n    }\n    return changed;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8836f7d701b0a696ac371f1df42b61e6070e3de7","date":1333987077,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/SolrInfoMBeanHandler#getDiff(NamedList[NamedList[NamedList[Object]]],NamedList[NamedList[NamedList[Object]]]).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/SolrInfoMBeanHandler#getDiff(NamedList[NamedList[NamedList[Object]]],NamedList[NamedList[NamedList[Object]]]).mjava","sourceNew":"  protected NamedList<NamedList<NamedList<Object>>> getDiff(NamedList<NamedList<NamedList<Object>>> ref, NamedList<NamedList<NamedList<Object>>> now) {\n    NamedList<NamedList<NamedList<Object>>> changed = new NamedList<NamedList<NamedList<Object>>>();\n    \n    // Cycle through each category\n    for(int i=0;i<ref.size();i++) {\n      String category = ref.getName(i);\n      NamedList<NamedList<Object>> ref_cat = ref.get(category);\n      NamedList<NamedList<Object>> now_cat = now.get(category);\n      if(now_cat != null) {\n        String ref_txt = ref_cat+\"\";\n        String now_txt = now_cat+\"\";\n        if(!ref_txt.equals(now_txt)) {\n          // Something in the category changed\n          // Now iterate the real beans\n          \n          NamedList<NamedList<Object>> cat = new SimpleOrderedMap<NamedList<Object>>();\n          for(int j=0;j<ref_cat.size();j++) {\n            String name = ref_cat.getName(j);\n            NamedList<Object> ref_bean = ref_cat.get(name);\n            NamedList<Object> now_bean = now_cat.get(name);\n\n            ref_txt = ref_bean+\"\";\n            now_txt = now_bean+\"\";\n            if(!ref_txt.equals(now_txt)) {\n//              System.out.println( \"----\" );\n//              System.out.println( category +\" : \" + name );\n//              System.out.println( \"REF: \" + ref_txt );\n//              System.out.println( \"NOW: \" + now_txt );\n              \n              // Calculate the differences\n              cat.add(name, diffNamedList(ref_bean,now_bean));\n            }\n          }\n          if(cat.size()>0) {\n            changed.add(category, cat);\n          }\n        }\n      }\n    }\n    return changed;\n  }\n\n","sourceOld":"  protected NamedList<NamedList<NamedList<Object>>> getDiff(NamedList<NamedList<NamedList<Object>>> ref, NamedList<NamedList<NamedList<Object>>> now) {\n    NamedList<NamedList<NamedList<Object>>> changed = new NamedList<NamedList<NamedList<Object>>>();\n    \n    // Cycle through each category\n    for(int i=0;i<ref.size();i++) {\n      String category = ref.getName(i);\n      NamedList<NamedList<Object>> ref_cat = ref.get(category);\n      NamedList<NamedList<Object>> now_cat = now.get(category);\n      if(now_cat != null) {\n        String ref_txt = ref_cat+\"\";\n        String now_txt = now_cat+\"\";\n        if(!ref_txt.equals(now_txt)) {\n          // Something in the category changed\n          // Now iterate the real beans\n          \n          NamedList<NamedList<Object>> cat = new NamedList<NamedList<Object>>();\n          for(int j=0;j<ref_cat.size();j++) {\n            String name = ref_cat.getName(j);\n            NamedList<Object> ref_bean = ref_cat.get(name);\n            NamedList<Object> now_bean = now_cat.get(name);\n\n            ref_txt = ref_bean+\"\";\n            now_txt = now_bean+\"\";\n            if(!ref_txt.equals(now_txt)) {\n//              System.out.println( \"----\" );\n//              System.out.println( category +\" : \" + name );\n//              System.out.println( \"REF: \" + ref_txt );\n//              System.out.println( \"NOW: \" + now_txt );\n              \n              // Calculate the differences\n              cat.add(name, diffNamedList(ref_bean,now_bean));\n            }\n          }\n          if(cat.size()>0) {\n            changed.add(category, cat);\n          }\n        }\n      }\n    }\n    return changed;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5a238fc456663f685a9db1ed8d680e348bb45171","date":1334173266,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/SolrInfoMBeanHandler#getDiff(NamedList[NamedList[NamedList[Object]]],NamedList[NamedList[NamedList[Object]]]).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/SolrInfoMBeanHandler#getDiff(NamedList[NamedList[NamedList[Object]]],NamedList[NamedList[NamedList[Object]]]).mjava","sourceNew":"  protected NamedList<NamedList<NamedList<Object>>> getDiff(NamedList<NamedList<NamedList<Object>>> ref, NamedList<NamedList<NamedList<Object>>> now) {\n    NamedList<NamedList<NamedList<Object>>> changed = new NamedList<NamedList<NamedList<Object>>>();\n    \n    // Cycle through each category\n    for(int i=0;i<ref.size();i++) {\n      String category = ref.getName(i);\n      NamedList<NamedList<Object>> ref_cat = ref.get(category);\n      NamedList<NamedList<Object>> now_cat = now.get(category);\n      if(now_cat != null) {\n        String ref_txt = ref_cat+\"\";\n        String now_txt = now_cat+\"\";\n        if(!ref_txt.equals(now_txt)) {\n          // Something in the category changed\n          // Now iterate the real beans\n          \n          NamedList<NamedList<Object>> cat = new SimpleOrderedMap<NamedList<Object>>();\n          for(int j=0;j<ref_cat.size();j++) {\n            String name = ref_cat.getName(j);\n            NamedList<Object> ref_bean = ref_cat.get(name);\n            NamedList<Object> now_bean = now_cat.get(name);\n\n            ref_txt = ref_bean+\"\";\n            now_txt = now_bean+\"\";\n            if(!ref_txt.equals(now_txt)) {\n//              System.out.println( \"----\" );\n//              System.out.println( category +\" : \" + name );\n//              System.out.println( \"REF: \" + ref_txt );\n//              System.out.println( \"NOW: \" + now_txt );\n              \n              // Calculate the differences\n              cat.add(name, diffNamedList(ref_bean,now_bean));\n            }\n          }\n          if(cat.size()>0) {\n            changed.add(category, cat);\n          }\n        }\n      }\n    }\n    return changed;\n  }\n\n","sourceOld":"  protected NamedList<NamedList<NamedList<Object>>> getDiff(NamedList<NamedList<NamedList<Object>>> ref, NamedList<NamedList<NamedList<Object>>> now) {\n    NamedList<NamedList<NamedList<Object>>> changed = new NamedList<NamedList<NamedList<Object>>>();\n    \n    // Cycle through each category\n    for(int i=0;i<ref.size();i++) {\n      String category = ref.getName(i);\n      NamedList<NamedList<Object>> ref_cat = ref.get(category);\n      NamedList<NamedList<Object>> now_cat = now.get(category);\n      if(now_cat != null) {\n        String ref_txt = ref_cat+\"\";\n        String now_txt = now_cat+\"\";\n        if(!ref_txt.equals(now_txt)) {\n          // Something in the category changed\n          // Now iterate the real beans\n          \n          NamedList<NamedList<Object>> cat = new NamedList<NamedList<Object>>();\n          for(int j=0;j<ref_cat.size();j++) {\n            String name = ref_cat.getName(j);\n            NamedList<Object> ref_bean = ref_cat.get(name);\n            NamedList<Object> now_bean = now_cat.get(name);\n\n            ref_txt = ref_bean+\"\";\n            now_txt = now_bean+\"\";\n            if(!ref_txt.equals(now_txt)) {\n//              System.out.println( \"----\" );\n//              System.out.println( category +\" : \" + name );\n//              System.out.println( \"REF: \" + ref_txt );\n//              System.out.println( \"NOW: \" + now_txt );\n              \n              // Calculate the differences\n              cat.add(name, diffNamedList(ref_bean,now_bean));\n            }\n          }\n          if(cat.size()>0) {\n            changed.add(category, cat);\n          }\n        }\n      }\n    }\n    return changed;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"599afc501134261328b27d573cd0d4f36c4a20a2","date":1334799976,"type":5,"author":"Ryan McKinley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/SolrInfoMBeanHandler#getDiff(NamedList[NamedList[NamedList[Object]]],NamedList[NamedList[NamedList[Object]]],boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/SolrInfoMBeanHandler#getDiff(NamedList[NamedList[NamedList[Object]]],NamedList[NamedList[NamedList[Object]]]).mjava","sourceNew":"  protected NamedList<NamedList<NamedList<Object>>> getDiff(\n      NamedList<NamedList<NamedList<Object>>> ref, \n      NamedList<NamedList<NamedList<Object>>> now,\n      boolean includeAll ) {\n    \n    NamedList<NamedList<NamedList<Object>>> changed = new NamedList<NamedList<NamedList<Object>>>();\n    \n    // Cycle through each category\n    for(int i=0;i<ref.size();i++) {\n      String category = ref.getName(i);\n      NamedList<NamedList<Object>> ref_cat = ref.get(category);\n      NamedList<NamedList<Object>> now_cat = now.get(category);\n      if(now_cat != null) {\n        String ref_txt = ref_cat+\"\";\n        String now_txt = now_cat+\"\";\n        if(!ref_txt.equals(now_txt)) {\n          // Something in the category changed\n          // Now iterate the real beans\n          \n          NamedList<NamedList<Object>> cat = new SimpleOrderedMap<NamedList<Object>>();\n          for(int j=0;j<ref_cat.size();j++) {\n            String name = ref_cat.getName(j);\n            NamedList<Object> ref_bean = ref_cat.get(name);\n            NamedList<Object> now_bean = now_cat.get(name);\n\n            ref_txt = ref_bean+\"\";\n            now_txt = now_bean+\"\";\n            if(!ref_txt.equals(now_txt)) {\n//              System.out.println( \"----\" );\n//              System.out.println( category +\" : \" + name );\n//              System.out.println( \"REF: \" + ref_txt );\n//              System.out.println( \"NOW: \" + now_txt );\n              \n              // Calculate the differences\n              NamedList diff = diffNamedList(ref_bean,now_bean);\n              diff.add( \"_changed_\", true ); // flag the changed thing\n              cat.add(name, diff);\n            }\n            else if(includeAll) {\n              cat.add(name, ref_bean);\n            }\n          }\n          if(cat.size()>0) {\n            changed.add(category, cat);\n          }\n        }\n        else if(includeAll) {\n          changed.add(category, ref_cat);\n        }\n      }\n    }\n    return changed;\n  }\n\n","sourceOld":"  protected NamedList<NamedList<NamedList<Object>>> getDiff(NamedList<NamedList<NamedList<Object>>> ref, NamedList<NamedList<NamedList<Object>>> now) {\n    NamedList<NamedList<NamedList<Object>>> changed = new NamedList<NamedList<NamedList<Object>>>();\n    \n    // Cycle through each category\n    for(int i=0;i<ref.size();i++) {\n      String category = ref.getName(i);\n      NamedList<NamedList<Object>> ref_cat = ref.get(category);\n      NamedList<NamedList<Object>> now_cat = now.get(category);\n      if(now_cat != null) {\n        String ref_txt = ref_cat+\"\";\n        String now_txt = now_cat+\"\";\n        if(!ref_txt.equals(now_txt)) {\n          // Something in the category changed\n          // Now iterate the real beans\n          \n          NamedList<NamedList<Object>> cat = new SimpleOrderedMap<NamedList<Object>>();\n          for(int j=0;j<ref_cat.size();j++) {\n            String name = ref_cat.getName(j);\n            NamedList<Object> ref_bean = ref_cat.get(name);\n            NamedList<Object> now_bean = now_cat.get(name);\n\n            ref_txt = ref_bean+\"\";\n            now_txt = now_bean+\"\";\n            if(!ref_txt.equals(now_txt)) {\n//              System.out.println( \"----\" );\n//              System.out.println( category +\" : \" + name );\n//              System.out.println( \"REF: \" + ref_txt );\n//              System.out.println( \"NOW: \" + now_txt );\n              \n              // Calculate the differences\n              cat.add(name, diffNamedList(ref_bean,now_bean));\n            }\n          }\n          if(cat.size()>0) {\n            changed.add(category, cat);\n          }\n        }\n      }\n    }\n    return changed;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8836f7d701b0a696ac371f1df42b61e6070e3de7":["2396be4785ec8ca6c942dff4d20c1c93dd03db6d"],"5a238fc456663f685a9db1ed8d680e348bb45171":["2396be4785ec8ca6c942dff4d20c1c93dd03db6d","8836f7d701b0a696ac371f1df42b61e6070e3de7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2396be4785ec8ca6c942dff4d20c1c93dd03db6d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"599afc501134261328b27d573cd0d4f36c4a20a2":["8836f7d701b0a696ac371f1df42b61e6070e3de7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["599afc501134261328b27d573cd0d4f36c4a20a2"]},"commit2Childs":{"8836f7d701b0a696ac371f1df42b61e6070e3de7":["5a238fc456663f685a9db1ed8d680e348bb45171","599afc501134261328b27d573cd0d4f36c4a20a2"],"5a238fc456663f685a9db1ed8d680e348bb45171":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["2396be4785ec8ca6c942dff4d20c1c93dd03db6d"],"2396be4785ec8ca6c942dff4d20c1c93dd03db6d":["8836f7d701b0a696ac371f1df42b61e6070e3de7","5a238fc456663f685a9db1ed8d680e348bb45171"],"599afc501134261328b27d573cd0d4f36c4a20a2":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5a238fc456663f685a9db1ed8d680e348bb45171","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}