{"path":"lucene/core/src/test/org/apache/lucene/search/TestBooleanScorer.CrazyMustUseTopScorerQuery#createWeight(IndexSearcher).mjava","commits":[{"id":"f5b5db770a9921aab2a50a23ff9431365c9b8831","date":1393964899,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestBooleanScorer.CrazyMustUseTopScorerQuery#createWeight(IndexSearcher).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public Weight createWeight(IndexSearcher searcher) throws IOException {\n      return new Weight() {\n        @Override\n        public Explanation explain(AtomicReaderContext context, int doc) {\n          throw new UnsupportedOperationException();\n        }\n\n        @Override\n        public Query getQuery() {\n          return CrazyMustUseTopScorerQuery.this;\n        }\n\n        @Override\n        public float getValueForNormalization() {\n          return 1.0f;\n        }\n\n        @Override\n        public void normalize(float norm, float topLevelBoost) {\n        }\n\n        @Override\n        public Scorer scorer(AtomicReaderContext context, Bits acceptDocs) {\n          throw new UnsupportedOperationException();\n        }\n\n        @Override\n        public TopScorer topScorer(AtomicReaderContext context, boolean scoreDocsInOrder, Bits acceptDocs) {\n          return new TopScorer() {\n\n            @Override\n            public boolean score(Collector collector, int max) throws IOException {\n              collector.setScorer(new FakeScorer());\n              collector.collect(0);\n              return false;\n            }\n          };\n        }\n      };\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a5794e5c995c57444b154b01a9f3c837cd530a77","date":1394190201,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestBooleanScorer.CrazyMustUseBulkScorerQuery#createWeight(IndexSearcher).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestBooleanScorer.CrazyMustUseTopScorerQuery#createWeight(IndexSearcher).mjava","sourceNew":"    @Override\n    public Weight createWeight(IndexSearcher searcher) throws IOException {\n      return new Weight() {\n        @Override\n        public Explanation explain(AtomicReaderContext context, int doc) {\n          throw new UnsupportedOperationException();\n        }\n\n        @Override\n        public Query getQuery() {\n          return CrazyMustUseBulkScorerQuery.this;\n        }\n\n        @Override\n        public float getValueForNormalization() {\n          return 1.0f;\n        }\n\n        @Override\n        public void normalize(float norm, float topLevelBoost) {\n        }\n\n        @Override\n        public Scorer scorer(AtomicReaderContext context, Bits acceptDocs) {\n          throw new UnsupportedOperationException();\n        }\n\n        @Override\n        public BulkScorer bulkScorer(AtomicReaderContext context, boolean scoreDocsInOrder, Bits acceptDocs) {\n          return new BulkScorer() {\n\n            @Override\n            public boolean score(Collector collector, int max) throws IOException {\n              collector.setScorer(new FakeScorer());\n              collector.collect(0);\n              return false;\n            }\n          };\n        }\n      };\n    }\n\n","sourceOld":"    @Override\n    public Weight createWeight(IndexSearcher searcher) throws IOException {\n      return new Weight() {\n        @Override\n        public Explanation explain(AtomicReaderContext context, int doc) {\n          throw new UnsupportedOperationException();\n        }\n\n        @Override\n        public Query getQuery() {\n          return CrazyMustUseTopScorerQuery.this;\n        }\n\n        @Override\n        public float getValueForNormalization() {\n          return 1.0f;\n        }\n\n        @Override\n        public void normalize(float norm, float topLevelBoost) {\n        }\n\n        @Override\n        public Scorer scorer(AtomicReaderContext context, Bits acceptDocs) {\n          throw new UnsupportedOperationException();\n        }\n\n        @Override\n        public TopScorer topScorer(AtomicReaderContext context, boolean scoreDocsInOrder, Bits acceptDocs) {\n          return new TopScorer() {\n\n            @Override\n            public boolean score(Collector collector, int max) throws IOException {\n              collector.setScorer(new FakeScorer());\n              collector.collect(0);\n              return false;\n            }\n          };\n        }\n      };\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a5794e5c995c57444b154b01a9f3c837cd530a77":["f5b5db770a9921aab2a50a23ff9431365c9b8831"],"f5b5db770a9921aab2a50a23ff9431365c9b8831":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f5b5db770a9921aab2a50a23ff9431365c9b8831","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a5794e5c995c57444b154b01a9f3c837cd530a77":[],"f5b5db770a9921aab2a50a23ff9431365c9b8831":["a5794e5c995c57444b154b01a9f3c837cd530a77"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a5794e5c995c57444b154b01a9f3c837cd530a77","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}