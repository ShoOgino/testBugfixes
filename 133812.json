{"path":"lucene/src/java/org/apache/lucene/search/CachingWrapperFilter#CachingWrapperFilter(Filter).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/CachingWrapperFilter#CachingWrapperFilter(Filter).mjava","pathOld":"src/java/org/apache/lucene/search/CachingWrapperFilter#CachingWrapperFilter(Filter).mjava","sourceNew":"  /**\n   * @param filter Filter to cache results of\n   */\n  public CachingWrapperFilter(Filter filter) {\n    this.filter = filter;\n  }\n\n","sourceOld":"  /**\n   * @param filter Filter to cache results of\n   */\n  public CachingWrapperFilter(Filter filter) {\n    this.filter = filter;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cbf497fc92342be81ff184a144dfa7c96264116b","date":1275079529,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/CachingWrapperFilter#CachingWrapperFilter(Filter).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/CachingWrapperFilter#CachingWrapperFilter(Filter).mjava","sourceNew":"  /**\n   * New deletes are ignored by default, which gives higher\n   * cache hit rate on reopened readers.  Most of the time\n   * this is safe, because the filter will be AND'd with a\n   * Query that fully enforces deletions.  If instead you\n   * need this filter to always enforce deletions, pass\n   * either {@link DeletesMode#RECACHE} or {@link\n   * DeletesMode#DYNAMIC}.\n   * @param filter Filter to cache results of\n   */\n  public CachingWrapperFilter(Filter filter) {\n    this(filter, DeletesMode.IGNORE);\n  }\n\n","sourceOld":"  /**\n   * @param filter Filter to cache results of\n   */\n  public CachingWrapperFilter(Filter filter) {\n    this.filter = filter;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6620df8541b174097b1133a4fc370adb2e570524","date":1319544675,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/CachingWrapperFilter#CachingWrapperFilter(Filter).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/CachingWrapperFilter#CachingWrapperFilter(Filter).mjava","sourceNew":"  /**\n   * New deletes are ignored by default, which gives higher\n   * cache hit rate on reopened readers.\n   * @param filter Filter to cache results of\n   */\n  public CachingWrapperFilter(Filter filter) {\n    this.filter = filter;\n    cache = new FilterCache<DocIdSet>();\n  }\n\n","sourceOld":"  /**\n   * New deletes are ignored by default, which gives higher\n   * cache hit rate on reopened readers.  Most of the time\n   * this is safe, because the filter will be AND'd with a\n   * Query that fully enforces deletions.  If instead you\n   * need this filter to always enforce deletions, pass\n   * either {@link DeletesMode#RECACHE} or {@link\n   * DeletesMode#DYNAMIC}.\n   * @param filter Filter to cache results of\n   */\n  public CachingWrapperFilter(Filter filter) {\n    this(filter, DeletesMode.IGNORE);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"826eeff27dee50f65ed288192614b11624555f8b","date":1319561613,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/CachingWrapperFilter#CachingWrapperFilter(Filter).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/CachingWrapperFilter#CachingWrapperFilter(Filter).mjava","sourceNew":"  /** Wraps another filter's result and caches it.\n   * @param filter Filter to cache results of\n   */\n  public CachingWrapperFilter(Filter filter) {\n    this.filter = filter;\n    cache = new FilterCache<DocIdSet>();\n  }\n\n","sourceOld":"  /**\n   * New deletes are ignored by default, which gives higher\n   * cache hit rate on reopened readers.\n   * @param filter Filter to cache results of\n   */\n  public CachingWrapperFilter(Filter filter) {\n    this.filter = filter;\n    cache = new FilterCache<DocIdSet>();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bc0528274cde759b2d3f75b55794edeae6093533","date":1323799309,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/CachingWrapperFilter#CachingWrapperFilter(Filter).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/CachingWrapperFilter#CachingWrapperFilter(Filter).mjava","sourceNew":"  /** Wraps another filter's result and caches it.\n   * @param filter Filter to cache results of\n   */\n  public CachingWrapperFilter(Filter filter) {\n    this(filter, false);\n  }\n\n","sourceOld":"  /** Wraps another filter's result and caches it.\n   * @param filter Filter to cache results of\n   */\n  public CachingWrapperFilter(Filter filter) {\n    this.filter = filter;\n    cache = new FilterCache<DocIdSet>();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4ceb6a6c707ada1df8bde804e25c98668e699a18","date":1323800602,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/CachingWrapperFilter#CachingWrapperFilter(Filter).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/CachingWrapperFilter#CachingWrapperFilter(Filter).mjava","sourceNew":"  /** Wraps another filter's result and caches it.\n   * @param filter Filter to cache results of\n   */\n  public CachingWrapperFilter(Filter filter) {\n    this(filter, false);\n  }\n\n","sourceOld":"  /** Wraps another filter's result and caches it.\n   * @param filter Filter to cache results of\n   */\n  public CachingWrapperFilter(Filter filter) {\n    this.filter = filter;\n    cache = new FilterCache<DocIdSet>();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7d9cdceb051035b069ec36719809d0cd837777b","date":1323905856,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/CachingWrapperFilter#CachingWrapperFilter(Filter).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/CachingWrapperFilter#CachingWrapperFilter(Filter).mjava","sourceNew":"  /** Wraps another filter's result and caches it.\n   * Deletions are not cached and AND'd in on the fly, see\n   * {@link #CachingWrapperFilter(Filter,boolean)} for an explanation.\n   * This constructor is recommended for often changing indexes.\n   * @param filter Filter to cache results of\n   * @see #CachingWrapperFilter(Filter,boolean)\n   */\n  public CachingWrapperFilter(Filter filter) {\n    this(filter, false);\n  }\n\n","sourceOld":"  /** Wraps another filter's result and caches it.\n   * @param filter Filter to cache results of\n   */\n  public CachingWrapperFilter(Filter filter) {\n    this(filter, false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/CachingWrapperFilter#CachingWrapperFilter(Filter).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/CachingWrapperFilter#CachingWrapperFilter(Filter).mjava","sourceNew":"  /** Wraps another filter's result and caches it.\n   * Deletions are not cached and AND'd in on the fly, see\n   * {@link #CachingWrapperFilter(Filter,boolean)} for an explanation.\n   * This constructor is recommended for often changing indexes.\n   * @param filter Filter to cache results of\n   * @see #CachingWrapperFilter(Filter,boolean)\n   */\n  public CachingWrapperFilter(Filter filter) {\n    this(filter, false);\n  }\n\n","sourceOld":"  /** Wraps another filter's result and caches it.\n   * Deletions are not cached and AND'd in on the fly, see\n   * {@link #CachingWrapperFilter(Filter,boolean)} for an explanation.\n   * This constructor is recommended for often changing indexes.\n   * @param filter Filter to cache results of\n   * @see #CachingWrapperFilter(Filter,boolean)\n   */\n  public CachingWrapperFilter(Filter filter) {\n    this(filter, false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4ceb6a6c707ada1df8bde804e25c98668e699a18":["826eeff27dee50f65ed288192614b11624555f8b","bc0528274cde759b2d3f75b55794edeae6093533"],"6620df8541b174097b1133a4fc370adb2e570524":["cbf497fc92342be81ff184a144dfa7c96264116b"],"bc0528274cde759b2d3f75b55794edeae6093533":["826eeff27dee50f65ed288192614b11624555f8b"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["b7d9cdceb051035b069ec36719809d0cd837777b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b7d9cdceb051035b069ec36719809d0cd837777b":["bc0528274cde759b2d3f75b55794edeae6093533"],"826eeff27dee50f65ed288192614b11624555f8b":["6620df8541b174097b1133a4fc370adb2e570524"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cbf497fc92342be81ff184a144dfa7c96264116b":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"4ceb6a6c707ada1df8bde804e25c98668e699a18":[],"6620df8541b174097b1133a4fc370adb2e570524":["826eeff27dee50f65ed288192614b11624555f8b"],"bc0528274cde759b2d3f75b55794edeae6093533":["4ceb6a6c707ada1df8bde804e25c98668e699a18","b7d9cdceb051035b069ec36719809d0cd837777b"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"826eeff27dee50f65ed288192614b11624555f8b":["4ceb6a6c707ada1df8bde804e25c98668e699a18","bc0528274cde759b2d3f75b55794edeae6093533"],"b7d9cdceb051035b069ec36719809d0cd837777b":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cbf497fc92342be81ff184a144dfa7c96264116b":["6620df8541b174097b1133a4fc370adb2e570524"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cbf497fc92342be81ff184a144dfa7c96264116b"]},"heads":["4ceb6a6c707ada1df8bde804e25c98668e699a18","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}