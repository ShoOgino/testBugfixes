{"path":"lucene/core/src/java/org/apache/lucene/store/FSDirectory#listAll(Path).mjava","commits":[{"id":"f4abec28b874149a7223e32cc7a01704c27790de","date":1410644789,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/store/FSDirectory#listAll(Path).mjava","pathOld":"/dev/null","sourceNew":"  /** Lists all files (not subdirectories) in the\n   *  directory.\n   *\n   *  @throws IOException if there was an I/O error during listing */\n  public static String[] listAll(Path dir) throws IOException {\n    List<String> entries = new ArrayList<>();\n    \n    try (DirectoryStream<Path> stream = Files.newDirectoryStream(dir, new DirectoryStream.Filter<Path>() {\n      @Override\n      public boolean accept(Path entry) throws IOException {\n        return !Files.isDirectory(entry); // filter out entries that are definitely directories.\n      }\n    })) {\n      for (Path path : stream) {\n        entries.add(path.getFileName().toString());\n      }\n    }\n    \n    return entries.toArray(new String[entries.size()]);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["302be0cc5e6a28ebcebcac98aa81a92be2e94370"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"302be0cc5e6a28ebcebcac98aa81a92be2e94370","date":1423848654,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/store/FSDirectory#listAll(Path).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/store/FSDirectory#listAll(Path).mjava","sourceNew":"  /** Lists all files (including subdirectories) in the\n   *  directory.\n   *\n   *  @throws IOException if there was an I/O error during listing */\n  public static String[] listAll(Path dir) throws IOException {\n    List<String> entries = new ArrayList<>();\n    \n    try (DirectoryStream<Path> stream = Files.newDirectoryStream(dir)) {\n      for (Path path : stream) {\n        entries.add(path.getFileName().toString());\n      }\n    }\n    \n    return entries.toArray(new String[entries.size()]);\n  }\n\n","sourceOld":"  /** Lists all files (not subdirectories) in the\n   *  directory.\n   *\n   *  @throws IOException if there was an I/O error during listing */\n  public static String[] listAll(Path dir) throws IOException {\n    List<String> entries = new ArrayList<>();\n    \n    try (DirectoryStream<Path> stream = Files.newDirectoryStream(dir, new DirectoryStream.Filter<Path>() {\n      @Override\n      public boolean accept(Path entry) throws IOException {\n        return !Files.isDirectory(entry); // filter out entries that are definitely directories.\n      }\n    })) {\n      for (Path path : stream) {\n        entries.add(path.getFileName().toString());\n      }\n    }\n    \n    return entries.toArray(new String[entries.size()]);\n  }\n\n","bugFix":["f4abec28b874149a7223e32cc7a01704c27790de"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6bfe104fc023fadc9e709f8d17403d2cc61133fe","date":1454446396,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/store/FSDirectory#listAll(Path).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/store/FSDirectory#listAll(Path).mjava","sourceNew":"  /** Lists all files (including subdirectories) in the\n   *  directory.\n   *\n   *  @throws IOException if there was an I/O error during listing */\n  public static String[] listAll(Path dir) throws IOException {\n    return listAll(dir, Collections.emptySet());\n  }\n\n","sourceOld":"  /** Lists all files (including subdirectories) in the\n   *  directory.\n   *\n   *  @throws IOException if there was an I/O error during listing */\n  public static String[] listAll(Path dir) throws IOException {\n    List<String> entries = new ArrayList<>();\n    \n    try (DirectoryStream<Path> stream = Files.newDirectoryStream(dir)) {\n      for (Path path : stream) {\n        entries.add(path.getFileName().toString());\n      }\n    }\n    \n    return entries.toArray(new String[entries.size()]);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8f4e2dcb5e470991d83a63c264bfe20880d3b3c1","date":1454513757,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/store/FSDirectory#listAll(Path).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/store/FSDirectory#listAll(Path).mjava","sourceNew":"  /** Lists all files (including subdirectories) in the directory.\n   *\n   *  @throws IOException if there was an I/O error during listing */\n  public static String[] listAll(Path dir) throws IOException {\n    return listAll(dir, null);\n  }\n\n","sourceOld":"  /** Lists all files (including subdirectories) in the\n   *  directory.\n   *\n   *  @throws IOException if there was an I/O error during listing */\n  public static String[] listAll(Path dir) throws IOException {\n    return listAll(dir, Collections.emptySet());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b470f36a9372c97283360b1304eacbde22df6c0d","date":1454765175,"type":3,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/store/FSDirectory#listAll(Path).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/store/FSDirectory#listAll(Path).mjava","sourceNew":"  /** Lists all files (including subdirectories) in the directory.\n   *\n   *  @throws IOException if there was an I/O error during listing */\n  public static String[] listAll(Path dir) throws IOException {\n    return listAll(dir, null);\n  }\n\n","sourceOld":"  /** Lists all files (including subdirectories) in the\n   *  directory.\n   *\n   *  @throws IOException if there was an I/O error during listing */\n  public static String[] listAll(Path dir) throws IOException {\n    List<String> entries = new ArrayList<>();\n    \n    try (DirectoryStream<Path> stream = Files.newDirectoryStream(dir)) {\n      for (Path path : stream) {\n        entries.add(path.getFileName().toString());\n      }\n    }\n    \n    return entries.toArray(new String[entries.size()]);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1e6acbaae7af722f17204ceccf0f7db5753eccf3","date":1454775255,"type":3,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/store/FSDirectory#listAll(Path).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/store/FSDirectory#listAll(Path).mjava","sourceNew":"  /** Lists all files (including subdirectories) in the directory.\n   *\n   *  @throws IOException if there was an I/O error during listing */\n  public static String[] listAll(Path dir) throws IOException {\n    return listAll(dir, null);\n  }\n\n","sourceOld":"  /** Lists all files (including subdirectories) in the\n   *  directory.\n   *\n   *  @throws IOException if there was an I/O error during listing */\n  public static String[] listAll(Path dir) throws IOException {\n    List<String> entries = new ArrayList<>();\n    \n    try (DirectoryStream<Path> stream = Files.newDirectoryStream(dir)) {\n      for (Path path : stream) {\n        entries.add(path.getFileName().toString());\n      }\n    }\n    \n    return entries.toArray(new String[entries.size()]);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5a207d19eac354d649c3f0e2cce070017c78125e","date":1454776470,"type":3,"author":"Erick Erickson","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/store/FSDirectory#listAll(Path).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/store/FSDirectory#listAll(Path).mjava","sourceNew":"  /** Lists all files (including subdirectories) in the directory.\n   *\n   *  @throws IOException if there was an I/O error during listing */\n  public static String[] listAll(Path dir) throws IOException {\n    return listAll(dir, null);\n  }\n\n","sourceOld":"  /** Lists all files (including subdirectories) in the\n   *  directory.\n   *\n   *  @throws IOException if there was an I/O error during listing */\n  public static String[] listAll(Path dir) throws IOException {\n    List<String> entries = new ArrayList<>();\n    \n    try (DirectoryStream<Path> stream = Files.newDirectoryStream(dir)) {\n      for (Path path : stream) {\n        entries.add(path.getFileName().toString());\n      }\n    }\n    \n    return entries.toArray(new String[entries.size()]);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8f4e2dcb5e470991d83a63c264bfe20880d3b3c1":["6bfe104fc023fadc9e709f8d17403d2cc61133fe"],"5a207d19eac354d649c3f0e2cce070017c78125e":["302be0cc5e6a28ebcebcac98aa81a92be2e94370","b470f36a9372c97283360b1304eacbde22df6c0d"],"b470f36a9372c97283360b1304eacbde22df6c0d":["302be0cc5e6a28ebcebcac98aa81a92be2e94370","8f4e2dcb5e470991d83a63c264bfe20880d3b3c1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":["302be0cc5e6a28ebcebcac98aa81a92be2e94370","b470f36a9372c97283360b1304eacbde22df6c0d"],"6bfe104fc023fadc9e709f8d17403d2cc61133fe":["302be0cc5e6a28ebcebcac98aa81a92be2e94370"],"f4abec28b874149a7223e32cc7a01704c27790de":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5a207d19eac354d649c3f0e2cce070017c78125e"],"302be0cc5e6a28ebcebcac98aa81a92be2e94370":["f4abec28b874149a7223e32cc7a01704c27790de"]},"commit2Childs":{"8f4e2dcb5e470991d83a63c264bfe20880d3b3c1":["b470f36a9372c97283360b1304eacbde22df6c0d"],"5a207d19eac354d649c3f0e2cce070017c78125e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b470f36a9372c97283360b1304eacbde22df6c0d":["5a207d19eac354d649c3f0e2cce070017c78125e","1e6acbaae7af722f17204ceccf0f7db5753eccf3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f4abec28b874149a7223e32cc7a01704c27790de"],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":[],"6bfe104fc023fadc9e709f8d17403d2cc61133fe":["8f4e2dcb5e470991d83a63c264bfe20880d3b3c1"],"f4abec28b874149a7223e32cc7a01704c27790de":["302be0cc5e6a28ebcebcac98aa81a92be2e94370"],"302be0cc5e6a28ebcebcac98aa81a92be2e94370":["5a207d19eac354d649c3f0e2cce070017c78125e","b470f36a9372c97283360b1304eacbde22df6c0d","1e6acbaae7af722f17204ceccf0f7db5753eccf3","6bfe104fc023fadc9e709f8d17403d2cc61133fe"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["1e6acbaae7af722f17204ceccf0f7db5753eccf3","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}