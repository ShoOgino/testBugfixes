{"path":"solr/core/src/java/org/apache/solr/core/SolrCore#getRealtimeSearcher().mjava","commits":[{"id":"2c007e7c4cf8c55bc2a5884e315123afaaeec87f","date":1327520966,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCore#getRealtimeSearcher().mjava","pathOld":"/dev/null","sourceNew":"  /** Gets the latest real-time searcher w/o forcing open a new searcher if one already exists.\n   * The reference count will be incremented.\n   */\n  public RefCounted<SolrIndexSearcher> getRealtimeSearcher() {\n    synchronized (searcherLock) {\n      if (realtimeSearcher != null) {\n        realtimeSearcher.incref();\n        return realtimeSearcher;\n      }\n    }\n\n    // use the searcher lock to prevent multiple people from trying to open at once\n    openSearcherLock.lock();\n    try {\n\n      // try again\n      synchronized (searcherLock) {\n        if (realtimeSearcher != null) {\n          realtimeSearcher.incref();\n          return realtimeSearcher;\n        }\n      }\n\n      // force a new searcher open\n      return openNewSearcher(true, true);\n    } finally {\n      openSearcherLock.unlock();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","date":1327523564,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCore#getRealtimeSearcher().mjava","pathOld":"/dev/null","sourceNew":"  /** Gets the latest real-time searcher w/o forcing open a new searcher if one already exists.\n   * The reference count will be incremented.\n   */\n  public RefCounted<SolrIndexSearcher> getRealtimeSearcher() {\n    synchronized (searcherLock) {\n      if (realtimeSearcher != null) {\n        realtimeSearcher.incref();\n        return realtimeSearcher;\n      }\n    }\n\n    // use the searcher lock to prevent multiple people from trying to open at once\n    openSearcherLock.lock();\n    try {\n\n      // try again\n      synchronized (searcherLock) {\n        if (realtimeSearcher != null) {\n          realtimeSearcher.incref();\n          return realtimeSearcher;\n        }\n      }\n\n      // force a new searcher open\n      return openNewSearcher(true, true);\n    } finally {\n      openSearcherLock.unlock();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0d22ac6a4146774c1bc8400160fc0b6150294e92","date":1327528604,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCore#getRealtimeSearcher().mjava","pathOld":"/dev/null","sourceNew":"  /** Gets the latest real-time searcher w/o forcing open a new searcher if one already exists.\n   * The reference count will be incremented.\n   */\n  public RefCounted<SolrIndexSearcher> getRealtimeSearcher() {\n    synchronized (searcherLock) {\n      if (realtimeSearcher != null) {\n        realtimeSearcher.incref();\n        return realtimeSearcher;\n      }\n    }\n\n    // use the searcher lock to prevent multiple people from trying to open at once\n    openSearcherLock.lock();\n    try {\n\n      // try again\n      synchronized (searcherLock) {\n        if (realtimeSearcher != null) {\n          realtimeSearcher.incref();\n          return realtimeSearcher;\n        }\n      }\n\n      // force a new searcher open\n      return openNewSearcher(true, true);\n    } finally {\n      openSearcherLock.unlock();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2668c99990e4c94a78bac005aa682b7c5986d23a","date":1561446137,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCore#getRealtimeSearcher().mjava","pathOld":"solr/core/src/java/org/apache/solr/core/SolrCore#getRealtimeSearcher().mjava","sourceNew":"  /**\n   * Gets the latest real-time searcher w/o forcing open a new searcher if one already exists.\n   * The reference count will be incremented.\n   */\n  public RefCounted<SolrIndexSearcher> getRealtimeSearcher() {\n    synchronized (searcherLock) {\n      if (realtimeSearcher != null) {\n        realtimeSearcher.incref();\n        return realtimeSearcher;\n      }\n    }\n\n    // use the searcher lock to prevent multiple people from trying to open at once\n    openSearcherLock.lock();\n    try {\n\n      // try again\n      synchronized (searcherLock) {\n        if (realtimeSearcher != null) {\n          realtimeSearcher.incref();\n          return realtimeSearcher;\n        }\n      }\n\n      // force a new searcher open\n      return openNewSearcher(true, true);\n    } finally {\n      openSearcherLock.unlock();\n    }\n  }\n\n","sourceOld":"  /** Gets the latest real-time searcher w/o forcing open a new searcher if one already exists.\n   * The reference count will be incremented.\n   */\n  public RefCounted<SolrIndexSearcher> getRealtimeSearcher() {\n    synchronized (searcherLock) {\n      if (realtimeSearcher != null) {\n        realtimeSearcher.incref();\n        return realtimeSearcher;\n      }\n    }\n\n    // use the searcher lock to prevent multiple people from trying to open at once\n    openSearcherLock.lock();\n    try {\n\n      // try again\n      synchronized (searcherLock) {\n        if (realtimeSearcher != null) {\n          realtimeSearcher.incref();\n          return realtimeSearcher;\n        }\n      }\n\n      // force a new searcher open\n      return openNewSearcher(true, true);\n    } finally {\n      openSearcherLock.unlock();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0d22ac6a4146774c1bc8400160fc0b6150294e92":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"2668c99990e4c94a78bac005aa682b7c5986d23a":["2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"2c007e7c4cf8c55bc2a5884e315123afaaeec87f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2668c99990e4c94a78bac005aa682b7c5986d23a"]},"commit2Childs":{"0d22ac6a4146774c1bc8400160fc0b6150294e92":[],"2668c99990e4c94a78bac005aa682b7c5986d23a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0d22ac6a4146774c1bc8400160fc0b6150294e92","a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","2c007e7c4cf8c55bc2a5884e315123afaaeec87f"],"a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d":[],"2c007e7c4cf8c55bc2a5884e315123afaaeec87f":["0d22ac6a4146774c1bc8400160fc0b6150294e92","2668c99990e4c94a78bac005aa682b7c5986d23a","a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["0d22ac6a4146774c1bc8400160fc0b6150294e92","a3c68e20c73359a10cf3eb4a35c9fa7ab1f3c30d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}