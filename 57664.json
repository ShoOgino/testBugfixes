{"path":"lucene/core/src/java/org/apache/lucene/search/Scorer#asTwoPhaseIterator().mjava","commits":[{"id":"c2fc8e2ba3fb8b72ed1e1f99270a42036b23d9a1","date":1423845906,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/Scorer#asTwoPhaseIterator().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Optional method: Return a {@link TwoPhaseDocIdSetIterator} view of this\n   * {@link Scorer}. A return value of {@code null} indicates that\n   * two-phase iteration is not supported.\n   *\n   * Note that the returned {@link TwoPhaseDocIdSetIterator}'s\n   * {@link TwoPhaseDocIdSetIterator#approximation() approximation} must\n   * advance synchronously with this iterator: advancing the approximation must\n   * advance this iterator and vice-versa.\n   *\n   * Implementing this method is typically useful on {@link Scorer}s\n   * that have a high per-document overhead in order to confirm matches.\n   *\n   * The default implementation returns {@code null}.\n   */\n  public TwoPhaseDocIdSetIterator asTwoPhaseIterator() {\n    return null;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3d6eb0072094d94624002318ba2d4c840946833","date":1424947971,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/Scorer#asTwoPhaseIterator().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/Scorer#asTwoPhaseIterator().mjava","sourceNew":"  /**\n   * Optional method: Return a {@link TwoPhaseIterator} view of this\n   * {@link Scorer}. A return value of {@code null} indicates that\n   * two-phase iteration is not supported.\n   *\n   * Note that the returned {@link TwoPhaseIterator}'s\n   * {@link TwoPhaseIterator#approximation() approximation} must\n   * advance synchronously with this iterator: advancing the approximation must\n   * advance this iterator and vice-versa.\n   *\n   * Implementing this method is typically useful on {@link Scorer}s\n   * that have a high per-document overhead in order to confirm matches.\n   *\n   * The default implementation returns {@code null}.\n   */\n  public TwoPhaseIterator asTwoPhaseIterator() {\n    return null;\n  }\n\n","sourceOld":"  /**\n   * Optional method: Return a {@link TwoPhaseDocIdSetIterator} view of this\n   * {@link Scorer}. A return value of {@code null} indicates that\n   * two-phase iteration is not supported.\n   *\n   * Note that the returned {@link TwoPhaseDocIdSetIterator}'s\n   * {@link TwoPhaseDocIdSetIterator#approximation() approximation} must\n   * advance synchronously with this iterator: advancing the approximation must\n   * advance this iterator and vice-versa.\n   *\n   * Implementing this method is typically useful on {@link Scorer}s\n   * that have a high per-document overhead in order to confirm matches.\n   *\n   * The default implementation returns {@code null}.\n   */\n  public TwoPhaseDocIdSetIterator asTwoPhaseIterator() {\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":3,"author":"Ryan Ernst","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/Scorer#asTwoPhaseIterator().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/Scorer#asTwoPhaseIterator().mjava","sourceNew":"  /**\n   * Optional method: Return a {@link TwoPhaseIterator} view of this\n   * {@link Scorer}. A return value of {@code null} indicates that\n   * two-phase iteration is not supported.\n   *\n   * Note that the returned {@link TwoPhaseIterator}'s\n   * {@link TwoPhaseIterator#approximation() approximation} must\n   * advance synchronously with this iterator: advancing the approximation must\n   * advance this iterator and vice-versa.\n   *\n   * Implementing this method is typically useful on {@link Scorer}s\n   * that have a high per-document overhead in order to confirm matches.\n   *\n   * The default implementation returns {@code null}.\n   */\n  public TwoPhaseIterator asTwoPhaseIterator() {\n    return null;\n  }\n\n","sourceOld":"  /**\n   * Optional method: Return a {@link TwoPhaseDocIdSetIterator} view of this\n   * {@link Scorer}. A return value of {@code null} indicates that\n   * two-phase iteration is not supported.\n   *\n   * Note that the returned {@link TwoPhaseDocIdSetIterator}'s\n   * {@link TwoPhaseDocIdSetIterator#approximation() approximation} must\n   * advance synchronously with this iterator: advancing the approximation must\n   * advance this iterator and vice-versa.\n   *\n   * Implementing this method is typically useful on {@link Scorer}s\n   * that have a high per-document overhead in order to confirm matches.\n   *\n   * The default implementation returns {@code null}.\n   */\n  public TwoPhaseDocIdSetIterator asTwoPhaseIterator() {\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7dd748bb245633a8195281556bb0e68a6ea97d18","date":1449755030,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/Scorer#twoPhaseIterator().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/Scorer#asTwoPhaseIterator().mjava","sourceNew":"  /**\n   * Optional method: Return a {@link TwoPhaseIterator} view of this\n   * {@link Scorer}. A return value of {@code null} indicates that\n   * two-phase iteration is not supported.\n   *\n   * Note that the returned {@link TwoPhaseIterator}'s\n   * {@link TwoPhaseIterator#approximation() approximation} must\n   * advance synchronously with the {@link #iterator()}: advancing the\n   * approximation must advance the iterator and vice-versa.\n   *\n   * Implementing this method is typically useful on {@link Scorer}s\n   * that have a high per-document overhead in order to confirm matches.\n   *\n   * The default implementation returns {@code null}.\n   */\n  public TwoPhaseIterator twoPhaseIterator() {\n    return null;\n  }\n\n","sourceOld":"  /**\n   * Optional method: Return a {@link TwoPhaseIterator} view of this\n   * {@link Scorer}. A return value of {@code null} indicates that\n   * two-phase iteration is not supported.\n   *\n   * Note that the returned {@link TwoPhaseIterator}'s\n   * {@link TwoPhaseIterator#approximation() approximation} must\n   * advance synchronously with this iterator: advancing the approximation must\n   * advance this iterator and vice-versa.\n   *\n   * Implementing this method is typically useful on {@link Scorer}s\n   * that have a high per-document overhead in order to confirm matches.\n   *\n   * The default implementation returns {@code null}.\n   */\n  public TwoPhaseIterator asTwoPhaseIterator() {\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["c2fc8e2ba3fb8b72ed1e1f99270a42036b23d9a1","a3d6eb0072094d94624002318ba2d4c840946833"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a3d6eb0072094d94624002318ba2d4c840946833":["c2fc8e2ba3fb8b72ed1e1f99270a42036b23d9a1"],"7dd748bb245633a8195281556bb0e68a6ea97d18":["a3d6eb0072094d94624002318ba2d4c840946833"],"c2fc8e2ba3fb8b72ed1e1f99270a42036b23d9a1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7dd748bb245633a8195281556bb0e68a6ea97d18"]},"commit2Childs":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c2fc8e2ba3fb8b72ed1e1f99270a42036b23d9a1"],"a3d6eb0072094d94624002318ba2d4c840946833":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","7dd748bb245633a8195281556bb0e68a6ea97d18"],"7dd748bb245633a8195281556bb0e68a6ea97d18":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c2fc8e2ba3fb8b72ed1e1f99270a42036b23d9a1":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","a3d6eb0072094d94624002318ba2d4c840946833"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}