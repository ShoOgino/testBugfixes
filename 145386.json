{"path":"solr/core/src/java/org/apache/solr/metrics/rrd/SolrRrdBackendFactory#getData(String).mjava","commits":[{"id":"4181b4cf0450ea3c6d1aff8dc3ad4ed9cd3eeb6a","date":1527582939,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/metrics/rrd/SolrRrdBackendFactory#getData(String).mjava","pathOld":"/dev/null","sourceNew":"  byte[] getData(String path) throws IOException {\n    if (!persistent) {\n      return null;\n    }\n    try {\n      ModifiableSolrParams params = new ModifiableSolrParams();\n      params.add(CommonParams.Q, \"{!term f=id}\" + ID_PREFIX + ID_SEP + path);\n      params.add(CommonParams.FQ, CommonParams.TYPE + \":\" + DOC_TYPE);\n      QueryResponse rsp = solrClient.query(collection, params);\n      SolrDocumentList docs = rsp.getResults();\n      if (docs == null || docs.isEmpty()) {\n        return null;\n      }\n      if (docs.size() > 1) {\n        throw new SolrServerException(\"Expected at most 1 doc with id '\" + path + \"' but got \" + docs);\n      }\n      SolrDocument doc = docs.get(0);\n      Object o = doc.getFieldValue(DATA_FIELD);\n      if (o == null) {\n        return null;\n      }\n      if (o instanceof byte[]) {\n        return (byte[])o;\n      } else {\n        throw new SolrServerException(\"Unexpected value of '\" + DATA_FIELD + \"' field: \" + o.getClass().getName() + \": \" + o);\n      }\n    } catch (SolrServerException e) {\n      throw new IOException(e);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["f8f0f2472d437d44ec2144932e1d13fb494e82a3"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"f8f0f2472d437d44ec2144932e1d13fb494e82a3","date":1528403207,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/metrics/rrd/SolrRrdBackendFactory#getData(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/metrics/rrd/SolrRrdBackendFactory#getData(String).mjava","sourceNew":"  SolrRrdBackend.SyncData getData(String path) throws IOException {\n    if (!persistent) {\n      return null;\n    }\n    try {\n      ModifiableSolrParams params = new ModifiableSolrParams();\n      params.add(CommonParams.Q, \"{!term f=id}\" + ID_PREFIX + ID_SEP + path);\n      params.add(CommonParams.FQ, CommonParams.TYPE + \":\" + DOC_TYPE);\n      QueryResponse rsp = solrClient.query(collection, params);\n      SolrDocumentList docs = rsp.getResults();\n      if (docs == null || docs.isEmpty()) {\n        return null;\n      }\n      if (docs.size() > 1) {\n        throw new SolrServerException(\"Expected at most 1 doc with id '\" + path + \"' but got \" + docs);\n      }\n      SolrDocument doc = docs.get(0);\n      Object o = doc.getFieldValue(DATA_FIELD);\n      if (o == null) {\n        return null;\n      }\n      if (o instanceof byte[]) {\n        Long time = (Long)doc.getFieldValue(\"timestamp_l\");\n        return new SolrRrdBackend.SyncData((byte[])o, time);\n      } else {\n        throw new SolrServerException(\"Unexpected value of '\" + DATA_FIELD + \"' field: \" + o.getClass().getName() + \": \" + o);\n      }\n    } catch (SolrServerException e) {\n      throw new IOException(e);\n    }\n  }\n\n","sourceOld":"  byte[] getData(String path) throws IOException {\n    if (!persistent) {\n      return null;\n    }\n    try {\n      ModifiableSolrParams params = new ModifiableSolrParams();\n      params.add(CommonParams.Q, \"{!term f=id}\" + ID_PREFIX + ID_SEP + path);\n      params.add(CommonParams.FQ, CommonParams.TYPE + \":\" + DOC_TYPE);\n      QueryResponse rsp = solrClient.query(collection, params);\n      SolrDocumentList docs = rsp.getResults();\n      if (docs == null || docs.isEmpty()) {\n        return null;\n      }\n      if (docs.size() > 1) {\n        throw new SolrServerException(\"Expected at most 1 doc with id '\" + path + \"' but got \" + docs);\n      }\n      SolrDocument doc = docs.get(0);\n      Object o = doc.getFieldValue(DATA_FIELD);\n      if (o == null) {\n        return null;\n      }\n      if (o instanceof byte[]) {\n        return (byte[])o;\n      } else {\n        throw new SolrServerException(\"Unexpected value of '\" + DATA_FIELD + \"' field: \" + o.getClass().getName() + \": \" + o);\n      }\n    } catch (SolrServerException e) {\n      throw new IOException(e);\n    }\n  }\n\n","bugFix":["4181b4cf0450ea3c6d1aff8dc3ad4ed9cd3eeb6a"],"bugIntro":["2d7769c1ceca6a76710f154832127db9f9df2bf1"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26","date":1531589977,"type":3,"author":"Michael Braun","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/metrics/rrd/SolrRrdBackendFactory#getData(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/metrics/rrd/SolrRrdBackendFactory#getData(String).mjava","sourceNew":"  SolrRrdBackend.SyncData getData(String path) throws IOException {\n    if (!persistent) {\n      return null;\n    }\n    try {\n      ModifiableSolrParams params = new ModifiableSolrParams();\n      params.add(CommonParams.Q, \"{!term f=id}\" + ID_PREFIX + ID_SEP + path);\n      params.add(CommonParams.FQ, CommonParams.TYPE + \":\" + DOC_TYPE);\n      QueryResponse rsp = solrClient.query(collection, params);\n      SolrDocumentList docs = rsp.getResults();\n      if (docs == null || docs.isEmpty()) {\n        return null;\n      }\n      if (docs.size() > 1) {\n        throw new SolrServerException(\"Expected at most 1 doc with id '\" + path + \"' but got \" + docs);\n      }\n      SolrDocument doc = docs.get(0);\n      Object o = doc.getFieldValue(DATA_FIELD);\n      if (o == null) {\n        return null;\n      }\n      if (o instanceof byte[]) {\n        Long time = (Long)doc.getFieldValue(\"timestamp_l\");\n        return new SolrRrdBackend.SyncData((byte[])o, time);\n      } else {\n        throw new SolrServerException(\"Unexpected value of '\" + DATA_FIELD + \"' field: \" + o.getClass().getName() + \": \" + o);\n      }\n    } catch (SolrServerException e) {\n      throw new IOException(e);\n    }\n  }\n\n","sourceOld":"  byte[] getData(String path) throws IOException {\n    if (!persistent) {\n      return null;\n    }\n    try {\n      ModifiableSolrParams params = new ModifiableSolrParams();\n      params.add(CommonParams.Q, \"{!term f=id}\" + ID_PREFIX + ID_SEP + path);\n      params.add(CommonParams.FQ, CommonParams.TYPE + \":\" + DOC_TYPE);\n      QueryResponse rsp = solrClient.query(collection, params);\n      SolrDocumentList docs = rsp.getResults();\n      if (docs == null || docs.isEmpty()) {\n        return null;\n      }\n      if (docs.size() > 1) {\n        throw new SolrServerException(\"Expected at most 1 doc with id '\" + path + \"' but got \" + docs);\n      }\n      SolrDocument doc = docs.get(0);\n      Object o = doc.getFieldValue(DATA_FIELD);\n      if (o == null) {\n        return null;\n      }\n      if (o instanceof byte[]) {\n        return (byte[])o;\n      } else {\n        throw new SolrServerException(\"Unexpected value of '\" + DATA_FIELD + \"' field: \" + o.getClass().getName() + \": \" + o);\n      }\n    } catch (SolrServerException e) {\n      throw new IOException(e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","date":1531905561,"type":3,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/metrics/rrd/SolrRrdBackendFactory#getData(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/metrics/rrd/SolrRrdBackendFactory#getData(String).mjava","sourceNew":"  SolrRrdBackend.SyncData getData(String path) throws IOException {\n    if (!persistent) {\n      return null;\n    }\n    try {\n      ModifiableSolrParams params = new ModifiableSolrParams();\n      params.add(CommonParams.Q, \"{!term f=id}\" + ID_PREFIX + ID_SEP + path);\n      params.add(CommonParams.FQ, CommonParams.TYPE + \":\" + DOC_TYPE);\n      QueryResponse rsp = solrClient.query(collection, params);\n      SolrDocumentList docs = rsp.getResults();\n      if (docs == null || docs.isEmpty()) {\n        return null;\n      }\n      if (docs.size() > 1) {\n        throw new SolrServerException(\"Expected at most 1 doc with id '\" + path + \"' but got \" + docs);\n      }\n      SolrDocument doc = docs.get(0);\n      Object o = doc.getFieldValue(DATA_FIELD);\n      if (o == null) {\n        return null;\n      }\n      if (o instanceof byte[]) {\n        Long time = (Long)doc.getFieldValue(\"timestamp_l\");\n        return new SolrRrdBackend.SyncData((byte[])o, time);\n      } else {\n        throw new SolrServerException(\"Unexpected value of '\" + DATA_FIELD + \"' field: \" + o.getClass().getName() + \": \" + o);\n      }\n    } catch (SolrServerException e) {\n      throw new IOException(e);\n    }\n  }\n\n","sourceOld":"  byte[] getData(String path) throws IOException {\n    if (!persistent) {\n      return null;\n    }\n    try {\n      ModifiableSolrParams params = new ModifiableSolrParams();\n      params.add(CommonParams.Q, \"{!term f=id}\" + ID_PREFIX + ID_SEP + path);\n      params.add(CommonParams.FQ, CommonParams.TYPE + \":\" + DOC_TYPE);\n      QueryResponse rsp = solrClient.query(collection, params);\n      SolrDocumentList docs = rsp.getResults();\n      if (docs == null || docs.isEmpty()) {\n        return null;\n      }\n      if (docs.size() > 1) {\n        throw new SolrServerException(\"Expected at most 1 doc with id '\" + path + \"' but got \" + docs);\n      }\n      SolrDocument doc = docs.get(0);\n      Object o = doc.getFieldValue(DATA_FIELD);\n      if (o == null) {\n        return null;\n      }\n      if (o instanceof byte[]) {\n        return (byte[])o;\n      } else {\n        throw new SolrServerException(\"Unexpected value of '\" + DATA_FIELD + \"' field: \" + o.getClass().getName() + \": \" + o);\n      }\n    } catch (SolrServerException e) {\n      throw new IOException(e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2d7769c1ceca6a76710f154832127db9f9df2bf1","date":1533228478,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/metrics/rrd/SolrRrdBackendFactory#getData(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/metrics/rrd/SolrRrdBackendFactory#getData(String).mjava","sourceNew":"  SolrRrdBackend.SyncData getData(String path) throws IOException {\n    if (!persistent) {\n      return null;\n    }\n    try {\n      ModifiableSolrParams params = new ModifiableSolrParams();\n      params.add(CommonParams.Q, \"{!term f=id}\" + ID_PREFIX + ID_SEP + path);\n      params.add(CommonParams.FQ, CommonParams.TYPE + \":\" + DOC_TYPE);\n      QueryResponse rsp = solrClient.query(collection, params);\n      SolrDocumentList docs = rsp.getResults();\n      if (docs == null || docs.isEmpty()) {\n        return null;\n      }\n      if (docs.size() > 1) {\n        throw new SolrServerException(\"Expected at most 1 doc with id '\" + path + \"' but got \" + docs);\n      }\n      SolrDocument doc = docs.get(0);\n      Object o = doc.getFieldValue(DATA_FIELD);\n      if (o == null) {\n        return null;\n      }\n      if (o instanceof byte[]) {\n        Object timeObj = doc.getFieldValue(\"timestamp_l\");\n        Long time = timeObj instanceof Number ? ((Number)timeObj).longValue() : Long.parseLong(String.valueOf(timeObj));\n        return new SolrRrdBackend.SyncData((byte[])o, time);\n      } else {\n        throw new SolrServerException(\"Unexpected value of '\" + DATA_FIELD + \"' field: \" + o.getClass().getName() + \": \" + o);\n      }\n    } catch (SolrServerException e) {\n      throw new IOException(e);\n    }\n  }\n\n","sourceOld":"  SolrRrdBackend.SyncData getData(String path) throws IOException {\n    if (!persistent) {\n      return null;\n    }\n    try {\n      ModifiableSolrParams params = new ModifiableSolrParams();\n      params.add(CommonParams.Q, \"{!term f=id}\" + ID_PREFIX + ID_SEP + path);\n      params.add(CommonParams.FQ, CommonParams.TYPE + \":\" + DOC_TYPE);\n      QueryResponse rsp = solrClient.query(collection, params);\n      SolrDocumentList docs = rsp.getResults();\n      if (docs == null || docs.isEmpty()) {\n        return null;\n      }\n      if (docs.size() > 1) {\n        throw new SolrServerException(\"Expected at most 1 doc with id '\" + path + \"' but got \" + docs);\n      }\n      SolrDocument doc = docs.get(0);\n      Object o = doc.getFieldValue(DATA_FIELD);\n      if (o == null) {\n        return null;\n      }\n      if (o instanceof byte[]) {\n        Long time = (Long)doc.getFieldValue(\"timestamp_l\");\n        return new SolrRrdBackend.SyncData((byte[])o, time);\n      } else {\n        throw new SolrServerException(\"Unexpected value of '\" + DATA_FIELD + \"' field: \" + o.getClass().getName() + \": \" + o);\n      }\n    } catch (SolrServerException e) {\n      throw new IOException(e);\n    }\n  }\n\n","bugFix":["f8f0f2472d437d44ec2144932e1d13fb494e82a3"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f8f0f2472d437d44ec2144932e1d13fb494e82a3":["4181b4cf0450ea3c6d1aff8dc3ad4ed9cd3eeb6a"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":["4181b4cf0450ea3c6d1aff8dc3ad4ed9cd3eeb6a","f8f0f2472d437d44ec2144932e1d13fb494e82a3"],"4181b4cf0450ea3c6d1aff8dc3ad4ed9cd3eeb6a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2d7769c1ceca6a76710f154832127db9f9df2bf1":["f8f0f2472d437d44ec2144932e1d13fb494e82a3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2d7769c1ceca6a76710f154832127db9f9df2bf1"],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":["4181b4cf0450ea3c6d1aff8dc3ad4ed9cd3eeb6a","f8f0f2472d437d44ec2144932e1d13fb494e82a3"]},"commit2Childs":{"f8f0f2472d437d44ec2144932e1d13fb494e82a3":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","2d7769c1ceca6a76710f154832127db9f9df2bf1","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":[],"4181b4cf0450ea3c6d1aff8dc3ad4ed9cd3eeb6a":["f8f0f2472d437d44ec2144932e1d13fb494e82a3","0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4181b4cf0450ea3c6d1aff8dc3ad4ed9cd3eeb6a"],"2d7769c1ceca6a76710f154832127db9f9df2bf1":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":[]},"heads":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}