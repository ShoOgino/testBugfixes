{"path":"lucene/core/src/java/org/apache/lucene/index/IndexWriterConfig#setIndexerThreadPool(DocumentsWriterPerThreadPool).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriterConfig#setIndexerThreadPool(DocumentsWriterPerThreadPool).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/IndexWriterConfig#setIndexerThreadPool(DocumentsWriterPerThreadPool).mjava","sourceNew":"  /** Expert: Sets the {@link DocumentsWriterPerThreadPool} instance used by the\n   * IndexWriter to assign thread-states to incoming indexing threads. If no\n   * {@link DocumentsWriterPerThreadPool} is set {@link IndexWriter} will use\n   * {@link ThreadAffinityDocumentsWriterThreadPool} with max number of\n   * thread-states set to {@link DocumentsWriterPerThreadPool#DEFAULT_MAX_THREAD_STATES} (see\n   * {@link DocumentsWriterPerThreadPool#DEFAULT_MAX_THREAD_STATES}).\n   * </p>\n   * <p>\n   * NOTE: The given {@link DocumentsWriterPerThreadPool} instance must not be used with\n   * other {@link IndexWriter} instances once it has been initialized / associated with an\n   * {@link IndexWriter}.\n   * </p>\n   * <p>\n   * NOTE: This only takes effect when IndexWriter is first created.</p>*/\n  public IndexWriterConfig setIndexerThreadPool(DocumentsWriterPerThreadPool threadPool) {\n    if(threadPool == null) {\n      throw new IllegalArgumentException(\"DocumentsWriterPerThreadPool must not be nul\");\n    }\n    this.indexerThreadPool = threadPool;\n    return this;\n  }\n\n","sourceOld":"  /** Expert: Sets the {@link DocumentsWriterPerThreadPool} instance used by the\n   * IndexWriter to assign thread-states to incoming indexing threads. If no\n   * {@link DocumentsWriterPerThreadPool} is set {@link IndexWriter} will use\n   * {@link ThreadAffinityDocumentsWriterThreadPool} with max number of\n   * thread-states set to {@link DocumentsWriterPerThreadPool#DEFAULT_MAX_THREAD_STATES} (see\n   * {@link DocumentsWriterPerThreadPool#DEFAULT_MAX_THREAD_STATES}).\n   * </p>\n   * <p>\n   * NOTE: The given {@link DocumentsWriterPerThreadPool} instance must not be used with\n   * other {@link IndexWriter} instances once it has been initialized / associated with an\n   * {@link IndexWriter}.\n   * </p>\n   * <p>\n   * NOTE: This only takes effect when IndexWriter is first created.</p>*/\n  public IndexWriterConfig setIndexerThreadPool(DocumentsWriterPerThreadPool threadPool) {\n    if(threadPool == null) {\n      throw new IllegalArgumentException(\"DocumentsWriterPerThreadPool must not be nul\");\n    }\n    this.indexerThreadPool = threadPool;\n    return this;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f64b5c281a42c5a4634b39a4fcb8f21a0cba1600","date":1329061481,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriterConfig#setIndexerThreadPool(DocumentsWriterPerThreadPool).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriterConfig#setIndexerThreadPool(DocumentsWriterPerThreadPool).mjava","sourceNew":"  /** Expert: Sets the {@link DocumentsWriterPerThreadPool} instance used by the\n   * IndexWriter to assign thread-states to incoming indexing threads. If no\n   * {@link DocumentsWriterPerThreadPool} is set {@link IndexWriter} will use\n   * {@link ThreadAffinityDocumentsWriterThreadPool} with max number of\n   * thread-states set to {@link #DEFAULT_MAX_THREAD_STATES} (see\n   * {@link #DEFAULT_MAX_THREAD_STATES}).\n   * </p>\n   * <p>\n   * NOTE: The given {@link DocumentsWriterPerThreadPool} instance must not be used with\n   * other {@link IndexWriter} instances once it has been initialized / associated with an\n   * {@link IndexWriter}.\n   * </p>\n   * <p>\n   * NOTE: This only takes effect when IndexWriter is first created.</p>*/\n  public IndexWriterConfig setIndexerThreadPool(DocumentsWriterPerThreadPool threadPool) {\n    if(threadPool == null) {\n      throw new IllegalArgumentException(\"DocumentsWriterPerThreadPool must not be nul\");\n    }\n    this.indexerThreadPool = threadPool;\n    return this;\n  }\n\n","sourceOld":"  /** Expert: Sets the {@link DocumentsWriterPerThreadPool} instance used by the\n   * IndexWriter to assign thread-states to incoming indexing threads. If no\n   * {@link DocumentsWriterPerThreadPool} is set {@link IndexWriter} will use\n   * {@link ThreadAffinityDocumentsWriterThreadPool} with max number of\n   * thread-states set to {@link DocumentsWriterPerThreadPool#DEFAULT_MAX_THREAD_STATES} (see\n   * {@link DocumentsWriterPerThreadPool#DEFAULT_MAX_THREAD_STATES}).\n   * </p>\n   * <p>\n   * NOTE: The given {@link DocumentsWriterPerThreadPool} instance must not be used with\n   * other {@link IndexWriter} instances once it has been initialized / associated with an\n   * {@link IndexWriter}.\n   * </p>\n   * <p>\n   * NOTE: This only takes effect when IndexWriter is first created.</p>*/\n  public IndexWriterConfig setIndexerThreadPool(DocumentsWriterPerThreadPool threadPool) {\n    if(threadPool == null) {\n      throw new IllegalArgumentException(\"DocumentsWriterPerThreadPool must not be nul\");\n    }\n    this.indexerThreadPool = threadPool;\n    return this;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"8b074647cedb968eae4bb8f4e7ec83bdd5a1cc7d","date":1335212037,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriterConfig#setIndexerThreadPool(DocumentsWriterPerThreadPool).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriterConfig#setIndexerThreadPool(DocumentsWriterPerThreadPool).mjava","sourceNew":"  /** Expert: Sets the {@link DocumentsWriterPerThreadPool} instance used by the\n   * IndexWriter to assign thread-states to incoming indexing threads. If no\n   * {@link DocumentsWriterPerThreadPool} is set {@link IndexWriter} will use\n   * {@link ThreadAffinityDocumentsWriterThreadPool} with max number of\n   * thread-states set to {@link #DEFAULT_MAX_THREAD_STATES} (see\n   * {@link #DEFAULT_MAX_THREAD_STATES}).\n   * </p>\n   * <p>\n   * NOTE: The given {@link DocumentsWriterPerThreadPool} instance must not be used with\n   * other {@link IndexWriter} instances once it has been initialized / associated with an\n   * {@link IndexWriter}.\n   * </p>\n   * <p>\n   * NOTE: This only takes effect when IndexWriter is first created.</p>*/\n  IndexWriterConfig setIndexerThreadPool(DocumentsWriterPerThreadPool threadPool) {\n    if (threadPool == null) {\n      throw new IllegalArgumentException(\"DocumentsWriterPerThreadPool must not be nul\");\n    }\n    this.indexerThreadPool = threadPool;\n    return this;\n  }\n\n","sourceOld":"  /** Expert: Sets the {@link DocumentsWriterPerThreadPool} instance used by the\n   * IndexWriter to assign thread-states to incoming indexing threads. If no\n   * {@link DocumentsWriterPerThreadPool} is set {@link IndexWriter} will use\n   * {@link ThreadAffinityDocumentsWriterThreadPool} with max number of\n   * thread-states set to {@link #DEFAULT_MAX_THREAD_STATES} (see\n   * {@link #DEFAULT_MAX_THREAD_STATES}).\n   * </p>\n   * <p>\n   * NOTE: The given {@link DocumentsWriterPerThreadPool} instance must not be used with\n   * other {@link IndexWriter} instances once it has been initialized / associated with an\n   * {@link IndexWriter}.\n   * </p>\n   * <p>\n   * NOTE: This only takes effect when IndexWriter is first created.</p>*/\n  public IndexWriterConfig setIndexerThreadPool(DocumentsWriterPerThreadPool threadPool) {\n    if(threadPool == null) {\n      throw new IllegalArgumentException(\"DocumentsWriterPerThreadPool must not be nul\");\n    }\n    this.indexerThreadPool = threadPool;\n    return this;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7f4e54ed7cef46f86888b5fb547594f62160395c","date":1340006971,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriterConfig#setIndexerThreadPool(DocumentsWriterPerThreadPool).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriterConfig#setIndexerThreadPool(DocumentsWriterPerThreadPool).mjava","sourceNew":"  /** Expert: Sets the {@link DocumentsWriterPerThreadPool} instance used by the\n   * IndexWriter to assign thread-states to incoming indexing threads. If no\n   * {@link DocumentsWriterPerThreadPool} is set {@link IndexWriter} will use\n   * {@link ThreadAffinityDocumentsWriterThreadPool} with max number of\n   * thread-states set to {@link #DEFAULT_MAX_THREAD_STATES} (see\n   * {@link #DEFAULT_MAX_THREAD_STATES}).\n   * </p>\n   * <p>\n   * NOTE: The given {@link DocumentsWriterPerThreadPool} instance must not be used with\n   * other {@link IndexWriter} instances once it has been initialized / associated with an\n   * {@link IndexWriter}.\n   * </p>\n   * <p>\n   * NOTE: This only takes effect when IndexWriter is first created.</p>*/\n  IndexWriterConfig setIndexerThreadPool(DocumentsWriterPerThreadPool threadPool) {\n    if (threadPool == null) {\n      throw new IllegalArgumentException(\"threadPool must not be null\");\n    }\n    this.indexerThreadPool = threadPool;\n    return this;\n  }\n\n","sourceOld":"  /** Expert: Sets the {@link DocumentsWriterPerThreadPool} instance used by the\n   * IndexWriter to assign thread-states to incoming indexing threads. If no\n   * {@link DocumentsWriterPerThreadPool} is set {@link IndexWriter} will use\n   * {@link ThreadAffinityDocumentsWriterThreadPool} with max number of\n   * thread-states set to {@link #DEFAULT_MAX_THREAD_STATES} (see\n   * {@link #DEFAULT_MAX_THREAD_STATES}).\n   * </p>\n   * <p>\n   * NOTE: The given {@link DocumentsWriterPerThreadPool} instance must not be used with\n   * other {@link IndexWriter} instances once it has been initialized / associated with an\n   * {@link IndexWriter}.\n   * </p>\n   * <p>\n   * NOTE: This only takes effect when IndexWriter is first created.</p>*/\n  IndexWriterConfig setIndexerThreadPool(DocumentsWriterPerThreadPool threadPool) {\n    if (threadPool == null) {\n      throw new IllegalArgumentException(\"DocumentsWriterPerThreadPool must not be nul\");\n    }\n    this.indexerThreadPool = threadPool;\n    return this;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"839ca1793cd9a8eb5bd7c7c62918192d47972f73","date":1399544004,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriterConfig#setIndexerThreadPool(DocumentsWriterPerThreadPool).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriterConfig#setIndexerThreadPool(DocumentsWriterPerThreadPool).mjava","sourceNew":"  /** Expert: Sets the {@link DocumentsWriterPerThreadPool} instance used by the\n   * IndexWriter to assign thread-states to incoming indexing threads.\n   * </p>\n   * <p>\n   * NOTE: The given {@link DocumentsWriterPerThreadPool} instance must not be used with\n   * other {@link IndexWriter} instances once it has been initialized / associated with an\n   * {@link IndexWriter}.\n   * </p>\n   * <p>\n   * NOTE: This only takes effect when IndexWriter is first created.</p>*/\n  IndexWriterConfig setIndexerThreadPool(DocumentsWriterPerThreadPool threadPool) {\n    if (threadPool == null) {\n      throw new IllegalArgumentException(\"threadPool must not be null\");\n    }\n    this.indexerThreadPool = threadPool;\n    return this;\n  }\n\n","sourceOld":"  /** Expert: Sets the {@link DocumentsWriterPerThreadPool} instance used by the\n   * IndexWriter to assign thread-states to incoming indexing threads. If no\n   * {@link DocumentsWriterPerThreadPool} is set {@link IndexWriter} will use\n   * {@link ThreadAffinityDocumentsWriterThreadPool} with max number of\n   * thread-states set to {@link #DEFAULT_MAX_THREAD_STATES} (see\n   * {@link #DEFAULT_MAX_THREAD_STATES}).\n   * </p>\n   * <p>\n   * NOTE: The given {@link DocumentsWriterPerThreadPool} instance must not be used with\n   * other {@link IndexWriter} instances once it has been initialized / associated with an\n   * {@link IndexWriter}.\n   * </p>\n   * <p>\n   * NOTE: This only takes effect when IndexWriter is first created.</p>*/\n  IndexWriterConfig setIndexerThreadPool(DocumentsWriterPerThreadPool threadPool) {\n    if (threadPool == null) {\n      throw new IllegalArgumentException(\"threadPool must not be null\");\n    }\n    this.indexerThreadPool = threadPool;\n    return this;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"83caedc5d9e910bc771bdecafbe0430361462397","date":1440445428,"type":3,"author":"Christine Poerschke","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriterConfig#setIndexerThreadPool(DocumentsWriterPerThreadPool).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriterConfig#setIndexerThreadPool(DocumentsWriterPerThreadPool).mjava","sourceNew":"  /** Expert: Sets the {@link DocumentsWriterPerThreadPool} instance used by the\n   * IndexWriter to assign thread-states to incoming indexing threads.\n   * <p>\n   * NOTE: The given {@link DocumentsWriterPerThreadPool} instance must not be used with\n   * other {@link IndexWriter} instances once it has been initialized / associated with an\n   * {@link IndexWriter}.\n   * </p>\n   * <p>\n   * NOTE: This only takes effect when IndexWriter is first created.</p>*/\n  IndexWriterConfig setIndexerThreadPool(DocumentsWriterPerThreadPool threadPool) {\n    if (threadPool == null) {\n      throw new IllegalArgumentException(\"threadPool must not be null\");\n    }\n    this.indexerThreadPool = threadPool;\n    return this;\n  }\n\n","sourceOld":"  /** Expert: Sets the {@link DocumentsWriterPerThreadPool} instance used by the\n   * IndexWriter to assign thread-states to incoming indexing threads.\n   * </p>\n   * <p>\n   * NOTE: The given {@link DocumentsWriterPerThreadPool} instance must not be used with\n   * other {@link IndexWriter} instances once it has been initialized / associated with an\n   * {@link IndexWriter}.\n   * </p>\n   * <p>\n   * NOTE: This only takes effect when IndexWriter is first created.</p>*/\n  IndexWriterConfig setIndexerThreadPool(DocumentsWriterPerThreadPool threadPool) {\n    if (threadPool == null) {\n      throw new IllegalArgumentException(\"threadPool must not be null\");\n    }\n    this.indexerThreadPool = threadPool;\n    return this;\n  }\n\n","bugFix":["5ec3c42a56287de321024ceb6e46e78993a647d5"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"264935965977b4a9e2f3920420647072c9c49176","date":1586600626,"type":4,"author":"Simon Willnauer","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriterConfig#setIndexerThreadPool(DocumentsWriterPerThreadPool).mjava","sourceNew":null,"sourceOld":"  /** Expert: Sets the {@link DocumentsWriterPerThreadPool} instance used by the\n   * IndexWriter to assign thread-states to incoming indexing threads.\n   * <p>\n   * NOTE: The given {@link DocumentsWriterPerThreadPool} instance must not be used with\n   * other {@link IndexWriter} instances once it has been initialized / associated with an\n   * {@link IndexWriter}.\n   * </p>\n   * <p>\n   * NOTE: This only takes effect when IndexWriter is first created.</p>*/\n  IndexWriterConfig setIndexerThreadPool(DocumentsWriterPerThreadPool threadPool) {\n    if (threadPool == null) {\n      throw new IllegalArgumentException(\"threadPool must not be null\");\n    }\n    this.indexerThreadPool = threadPool;\n    return this;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"264935965977b4a9e2f3920420647072c9c49176":["83caedc5d9e910bc771bdecafbe0430361462397"],"839ca1793cd9a8eb5bd7c7c62918192d47972f73":["7f4e54ed7cef46f86888b5fb547594f62160395c"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7f4e54ed7cef46f86888b5fb547594f62160395c":["8b074647cedb968eae4bb8f4e7ec83bdd5a1cc7d"],"8b074647cedb968eae4bb8f4e7ec83bdd5a1cc7d":["f64b5c281a42c5a4634b39a4fcb8f21a0cba1600"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["264935965977b4a9e2f3920420647072c9c49176"],"83caedc5d9e910bc771bdecafbe0430361462397":["839ca1793cd9a8eb5bd7c7c62918192d47972f73"],"f64b5c281a42c5a4634b39a4fcb8f21a0cba1600":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"264935965977b4a9e2f3920420647072c9c49176":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"839ca1793cd9a8eb5bd7c7c62918192d47972f73":["83caedc5d9e910bc771bdecafbe0430361462397"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["f64b5c281a42c5a4634b39a4fcb8f21a0cba1600"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"7f4e54ed7cef46f86888b5fb547594f62160395c":["839ca1793cd9a8eb5bd7c7c62918192d47972f73"],"8b074647cedb968eae4bb8f4e7ec83bdd5a1cc7d":["7f4e54ed7cef46f86888b5fb547594f62160395c"],"83caedc5d9e910bc771bdecafbe0430361462397":["264935965977b4a9e2f3920420647072c9c49176"],"f64b5c281a42c5a4634b39a4fcb8f21a0cba1600":["8b074647cedb968eae4bb8f4e7ec83bdd5a1cc7d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}