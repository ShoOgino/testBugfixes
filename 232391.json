{"path":"lucene/monitor/src/test/org/apache/lucene/monitor/TestCachePurging#doConcurrentPurgesAndUpdatesTest().mjava","commits":[{"id":"7c529b189e09de25455d82ebd7260748cf11ee14","date":1560415257,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/monitor/src/test/org/apache/lucene/monitor/TestCachePurging#doConcurrentPurgesAndUpdatesTest().mjava","pathOld":"/dev/null","sourceNew":"  private static void doConcurrentPurgesAndUpdatesTest() throws Exception {\n\n    final CountDownLatch startUpdating = new CountDownLatch(1);\n    final CountDownLatch finishUpdating = new CountDownLatch(1);\n\n    try (final Monitor monitor = new Monitor(ANALYZER)) {\n      Runnable updaterThread = () -> {\n        try {\n          startUpdating.await();\n          for (int i = 200; i < 400; i++) {\n            monitor.register(newMonitorQuery(i));\n          }\n          finishUpdating.countDown();\n        } catch (Exception e) {\n          throw new RuntimeException(e);\n        }\n      };\n\n      ExecutorService executor = Executors.newFixedThreadPool(1, new NamedThreadFactory(\"updaters\"));\n      try {\n        executor.submit(updaterThread);\n\n        for (int i = 0; i < 200; i++) {\n          monitor.register(newMonitorQuery(i));\n        }\n        for (int i = 20; i < 80; i++) {\n          monitor.deleteById(Integer.toString(i));\n        }\n\n        assertEquals(200, monitor.getQueryCacheStats().cachedQueries);\n\n        startUpdating.countDown();\n        monitor.purgeCache();\n        finishUpdating.await();\n\n        assertEquals(340, monitor.getQueryCacheStats().cachedQueries);\n        Document doc = new Document();\n        doc.add(newTextField(\"field\", \"test\", Field.Store.NO));\n        MatchingQueries<QueryMatch> matcher = monitor.match(doc, QueryMatch.SIMPLE_MATCHER);\n        assertEquals(0, matcher.getErrors().size());\n        assertEquals(340, matcher.getMatchCount());\n      } finally {\n        executor.shutdownNow();\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7c529b189e09de25455d82ebd7260748cf11ee14":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7c529b189e09de25455d82ebd7260748cf11ee14"]},"commit2Childs":{"7c529b189e09de25455d82ebd7260748cf11ee14":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7c529b189e09de25455d82ebd7260748cf11ee14"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}