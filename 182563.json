{"path":"solr/core/src/test/org/apache/solr/core/TestCoreContainer#testSharedLib().mjava","commits":[{"id":"5268b3b46fa91a88e4d8fdd00f16f42577e6da11","date":1368012863,"type":0,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestCoreContainer#testSharedLib().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testSharedLib() throws Exception {\n    File tmpRoot = _TestUtil.getTempDir(\"testSharedLib\");\n\n    File lib = new File(tmpRoot, \"lib\");\n    lib.mkdirs();\n\n    JarOutputStream jar1 = new JarOutputStream(new FileOutputStream(new File(lib, \"jar1.jar\")));\n    jar1.putNextEntry(new JarEntry(\"defaultSharedLibFile\"));\n    jar1.closeEntry();\n    jar1.close();\n\n    File customLib = new File(tmpRoot, \"customLib\");\n    customLib.mkdirs();\n\n    JarOutputStream jar2 = new JarOutputStream(new FileOutputStream(new File(customLib, \"jar2.jar\")));\n    jar2.putNextEntry(new JarEntry(\"customSharedLibFile\"));\n    jar2.closeEntry();\n    jar2.close();\n\n    FileUtils.writeStringToFile(new File(tmpRoot, \"default-lib-solr.xml\"), \"<solr><cores/></solr>\", \"UTF-8\");\n    FileUtils.writeStringToFile(new File(tmpRoot, \"explicit-lib-solr.xml\"), \"<solr sharedLib=\\\"lib\\\"><cores/></solr>\", \"UTF-8\");\n    FileUtils.writeStringToFile(new File(tmpRoot, \"custom-lib-solr.xml\"), \"<solr sharedLib=\\\"customLib\\\"><cores/></solr>\", \"UTF-8\");\n\n    final CoreContainer cc1 = new CoreContainer(tmpRoot.getAbsolutePath());\n    cc1.load(tmpRoot.getAbsolutePath(), new File(tmpRoot, \"default-lib-solr.xml\"));\n    try {\n      cc1.loader.openResource(\"defaultSharedLibFile\").close();\n    } finally {\n      cc1.shutdown();\n    }\n\n    final CoreContainer cc2 = new CoreContainer(tmpRoot.getAbsolutePath());\n    cc2.load(tmpRoot.getAbsolutePath(), new File(tmpRoot, \"explicit-lib-solr.xml\"));\n    try {\n      cc2.loader.openResource(\"defaultSharedLibFile\").close();\n    } finally {\n      cc2.shutdown();\n    }\n\n    final CoreContainer cc3 = new CoreContainer(tmpRoot.getAbsolutePath());\n    cc3.load(tmpRoot.getAbsolutePath(), new File(tmpRoot, \"custom-lib-solr.xml\"));\n    try {\n      cc3.loader.openResource(\"customSharedLibFile\").close();\n    } finally {\n      cc3.shutdown();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d264f386d864b5751209060e8886ca9845f70469","date":1372172126,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestCoreContainer#testSharedLib().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestCoreContainer#testSharedLib().mjava","sourceNew":"  @Test\n  public void testSharedLib() throws Exception {\n    File tmpRoot = _TestUtil.getTempDir(\"testSharedLib\");\n\n    File lib = new File(tmpRoot, \"lib\");\n    lib.mkdirs();\n\n    JarOutputStream jar1 = new JarOutputStream(new FileOutputStream(new File(lib, \"jar1.jar\")));\n    jar1.putNextEntry(new JarEntry(\"defaultSharedLibFile\"));\n    jar1.closeEntry();\n    jar1.close();\n\n    File customLib = new File(tmpRoot, \"customLib\");\n    customLib.mkdirs();\n\n    JarOutputStream jar2 = new JarOutputStream(new FileOutputStream(new File(customLib, \"jar2.jar\")));\n    jar2.putNextEntry(new JarEntry(\"customSharedLibFile\"));\n    jar2.closeEntry();\n    jar2.close();\n\n    FileUtils.writeStringToFile(new File(tmpRoot, \"default-lib-solr.xml\"), \"<solr><cores/></solr>\", \"UTF-8\");\n    FileUtils.writeStringToFile(new File(tmpRoot, \"explicit-lib-solr.xml\"), \"<solr sharedLib=\\\"lib\\\"><cores/></solr>\", \"UTF-8\");\n    FileUtils.writeStringToFile(new File(tmpRoot, \"custom-lib-solr.xml\"), \"<solr sharedLib=\\\"customLib\\\"><cores/></solr>\", \"UTF-8\");\n\n    final CoreContainer cc1 = CoreContainer.createAndLoad(tmpRoot.getAbsolutePath(), new File(tmpRoot, \"default-lib-solr.xml\"));\n    try {\n      cc1.loader.openResource(\"defaultSharedLibFile\").close();\n    } finally {\n      cc1.shutdown();\n    }\n\n    final CoreContainer cc2 = CoreContainer.createAndLoad(tmpRoot.getAbsolutePath(), new File(tmpRoot, \"explicit-lib-solr.xml\"));\n    try {\n      cc2.loader.openResource(\"defaultSharedLibFile\").close();\n    } finally {\n      cc2.shutdown();\n    }\n\n    final CoreContainer cc3 = CoreContainer.createAndLoad(tmpRoot.getAbsolutePath(), new File(tmpRoot, \"custom-lib-solr.xml\"));\n    try {\n      cc3.loader.openResource(\"customSharedLibFile\").close();\n    } finally {\n      cc3.shutdown();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testSharedLib() throws Exception {\n    File tmpRoot = _TestUtil.getTempDir(\"testSharedLib\");\n\n    File lib = new File(tmpRoot, \"lib\");\n    lib.mkdirs();\n\n    JarOutputStream jar1 = new JarOutputStream(new FileOutputStream(new File(lib, \"jar1.jar\")));\n    jar1.putNextEntry(new JarEntry(\"defaultSharedLibFile\"));\n    jar1.closeEntry();\n    jar1.close();\n\n    File customLib = new File(tmpRoot, \"customLib\");\n    customLib.mkdirs();\n\n    JarOutputStream jar2 = new JarOutputStream(new FileOutputStream(new File(customLib, \"jar2.jar\")));\n    jar2.putNextEntry(new JarEntry(\"customSharedLibFile\"));\n    jar2.closeEntry();\n    jar2.close();\n\n    FileUtils.writeStringToFile(new File(tmpRoot, \"default-lib-solr.xml\"), \"<solr><cores/></solr>\", \"UTF-8\");\n    FileUtils.writeStringToFile(new File(tmpRoot, \"explicit-lib-solr.xml\"), \"<solr sharedLib=\\\"lib\\\"><cores/></solr>\", \"UTF-8\");\n    FileUtils.writeStringToFile(new File(tmpRoot, \"custom-lib-solr.xml\"), \"<solr sharedLib=\\\"customLib\\\"><cores/></solr>\", \"UTF-8\");\n\n    final CoreContainer cc1 = new CoreContainer(tmpRoot.getAbsolutePath());\n    cc1.load(tmpRoot.getAbsolutePath(), new File(tmpRoot, \"default-lib-solr.xml\"));\n    try {\n      cc1.loader.openResource(\"defaultSharedLibFile\").close();\n    } finally {\n      cc1.shutdown();\n    }\n\n    final CoreContainer cc2 = new CoreContainer(tmpRoot.getAbsolutePath());\n    cc2.load(tmpRoot.getAbsolutePath(), new File(tmpRoot, \"explicit-lib-solr.xml\"));\n    try {\n      cc2.loader.openResource(\"defaultSharedLibFile\").close();\n    } finally {\n      cc2.shutdown();\n    }\n\n    final CoreContainer cc3 = new CoreContainer(tmpRoot.getAbsolutePath());\n    cc3.load(tmpRoot.getAbsolutePath(), new File(tmpRoot, \"custom-lib-solr.xml\"));\n    try {\n      cc3.loader.openResource(\"customSharedLibFile\").close();\n    } finally {\n      cc3.shutdown();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"354983dcdf70c800bf2573d10b54a7391b1dc167","date":1372183171,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestCoreContainer#testSharedLib().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestCoreContainer#testSharedLib().mjava","sourceNew":"  @Test\n  public void testSharedLib() throws Exception {\n    File tmpRoot = _TestUtil.getTempDir(\"testSharedLib\");\n\n    File lib = new File(tmpRoot, \"lib\");\n    lib.mkdirs();\n\n    JarOutputStream jar1 = new JarOutputStream(new FileOutputStream(new File(lib, \"jar1.jar\")));\n    jar1.putNextEntry(new JarEntry(\"defaultSharedLibFile\"));\n    jar1.closeEntry();\n    jar1.close();\n\n    File customLib = new File(tmpRoot, \"customLib\");\n    customLib.mkdirs();\n\n    JarOutputStream jar2 = new JarOutputStream(new FileOutputStream(new File(customLib, \"jar2.jar\")));\n    jar2.putNextEntry(new JarEntry(\"customSharedLibFile\"));\n    jar2.closeEntry();\n    jar2.close();\n\n    FileUtils.writeStringToFile(new File(tmpRoot, \"default-lib-solr.xml\"), \"<solr><cores/></solr>\", \"UTF-8\");\n    FileUtils.writeStringToFile(new File(tmpRoot, \"explicit-lib-solr.xml\"), \"<solr sharedLib=\\\"lib\\\"><cores/></solr>\", \"UTF-8\");\n    FileUtils.writeStringToFile(new File(tmpRoot, \"custom-lib-solr.xml\"), \"<solr sharedLib=\\\"customLib\\\"><cores/></solr>\", \"UTF-8\");\n\n    final CoreContainer cc1 = new CoreContainer(tmpRoot.getAbsolutePath());\n    cc1.load(tmpRoot.getAbsolutePath(), new File(tmpRoot, \"default-lib-solr.xml\"));\n    try {\n      cc1.loader.openResource(\"defaultSharedLibFile\").close();\n    } finally {\n      cc1.shutdown();\n    }\n\n    final CoreContainer cc2 = new CoreContainer(tmpRoot.getAbsolutePath());\n    cc2.load(tmpRoot.getAbsolutePath(), new File(tmpRoot, \"explicit-lib-solr.xml\"));\n    try {\n      cc2.loader.openResource(\"defaultSharedLibFile\").close();\n    } finally {\n      cc2.shutdown();\n    }\n\n    final CoreContainer cc3 = new CoreContainer(tmpRoot.getAbsolutePath());\n    cc3.load(tmpRoot.getAbsolutePath(), new File(tmpRoot, \"custom-lib-solr.xml\"));\n    try {\n      cc3.loader.openResource(\"customSharedLibFile\").close();\n    } finally {\n      cc3.shutdown();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testSharedLib() throws Exception {\n    File tmpRoot = _TestUtil.getTempDir(\"testSharedLib\");\n\n    File lib = new File(tmpRoot, \"lib\");\n    lib.mkdirs();\n\n    JarOutputStream jar1 = new JarOutputStream(new FileOutputStream(new File(lib, \"jar1.jar\")));\n    jar1.putNextEntry(new JarEntry(\"defaultSharedLibFile\"));\n    jar1.closeEntry();\n    jar1.close();\n\n    File customLib = new File(tmpRoot, \"customLib\");\n    customLib.mkdirs();\n\n    JarOutputStream jar2 = new JarOutputStream(new FileOutputStream(new File(customLib, \"jar2.jar\")));\n    jar2.putNextEntry(new JarEntry(\"customSharedLibFile\"));\n    jar2.closeEntry();\n    jar2.close();\n\n    FileUtils.writeStringToFile(new File(tmpRoot, \"default-lib-solr.xml\"), \"<solr><cores/></solr>\", \"UTF-8\");\n    FileUtils.writeStringToFile(new File(tmpRoot, \"explicit-lib-solr.xml\"), \"<solr sharedLib=\\\"lib\\\"><cores/></solr>\", \"UTF-8\");\n    FileUtils.writeStringToFile(new File(tmpRoot, \"custom-lib-solr.xml\"), \"<solr sharedLib=\\\"customLib\\\"><cores/></solr>\", \"UTF-8\");\n\n    final CoreContainer cc1 = CoreContainer.createAndLoad(tmpRoot.getAbsolutePath(), new File(tmpRoot, \"default-lib-solr.xml\"));\n    try {\n      cc1.loader.openResource(\"defaultSharedLibFile\").close();\n    } finally {\n      cc1.shutdown();\n    }\n\n    final CoreContainer cc2 = CoreContainer.createAndLoad(tmpRoot.getAbsolutePath(), new File(tmpRoot, \"explicit-lib-solr.xml\"));\n    try {\n      cc2.loader.openResource(\"defaultSharedLibFile\").close();\n    } finally {\n      cc2.shutdown();\n    }\n\n    final CoreContainer cc3 = CoreContainer.createAndLoad(tmpRoot.getAbsolutePath(), new File(tmpRoot, \"custom-lib-solr.xml\"));\n    try {\n      cc3.loader.openResource(\"customSharedLibFile\").close();\n    } finally {\n      cc3.shutdown();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7116474e2e390259937401cf928323e0cbc75e60","date":1372780249,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestCoreContainer#testSharedLib().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestCoreContainer#testSharedLib().mjava","sourceNew":"  @Test\n  public void testSharedLib() throws Exception {\n    File tmpRoot = _TestUtil.getTempDir(\"testSharedLib\");\n\n    File lib = new File(tmpRoot, \"lib\");\n    lib.mkdirs();\n\n    JarOutputStream jar1 = new JarOutputStream(new FileOutputStream(new File(lib, \"jar1.jar\")));\n    jar1.putNextEntry(new JarEntry(\"defaultSharedLibFile\"));\n    jar1.closeEntry();\n    jar1.close();\n\n    File customLib = new File(tmpRoot, \"customLib\");\n    customLib.mkdirs();\n\n    JarOutputStream jar2 = new JarOutputStream(new FileOutputStream(new File(customLib, \"jar2.jar\")));\n    jar2.putNextEntry(new JarEntry(\"customSharedLibFile\"));\n    jar2.closeEntry();\n    jar2.close();\n\n    FileUtils.writeStringToFile(new File(tmpRoot, \"default-lib-solr.xml\"), \"<solr><cores/></solr>\", \"UTF-8\");\n    FileUtils.writeStringToFile(new File(tmpRoot, \"explicit-lib-solr.xml\"), \"<solr sharedLib=\\\"lib\\\"><cores/></solr>\", \"UTF-8\");\n    FileUtils.writeStringToFile(new File(tmpRoot, \"custom-lib-solr.xml\"), \"<solr sharedLib=\\\"customLib\\\"><cores/></solr>\", \"UTF-8\");\n\n    final CoreContainer cc1 = CoreContainer.createAndLoad(tmpRoot.getAbsolutePath(), new File(tmpRoot, \"default-lib-solr.xml\"));\n    try {\n      cc1.loader.openResource(\"defaultSharedLibFile\").close();\n    } finally {\n      cc1.shutdown();\n    }\n\n    final CoreContainer cc2 = CoreContainer.createAndLoad(tmpRoot.getAbsolutePath(), new File(tmpRoot, \"explicit-lib-solr.xml\"));\n    try {\n      cc2.loader.openResource(\"defaultSharedLibFile\").close();\n    } finally {\n      cc2.shutdown();\n    }\n\n    final CoreContainer cc3 = CoreContainer.createAndLoad(tmpRoot.getAbsolutePath(), new File(tmpRoot, \"custom-lib-solr.xml\"));\n    try {\n      cc3.loader.openResource(\"customSharedLibFile\").close();\n    } finally {\n      cc3.shutdown();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testSharedLib() throws Exception {\n    File tmpRoot = _TestUtil.getTempDir(\"testSharedLib\");\n\n    File lib = new File(tmpRoot, \"lib\");\n    lib.mkdirs();\n\n    JarOutputStream jar1 = new JarOutputStream(new FileOutputStream(new File(lib, \"jar1.jar\")));\n    jar1.putNextEntry(new JarEntry(\"defaultSharedLibFile\"));\n    jar1.closeEntry();\n    jar1.close();\n\n    File customLib = new File(tmpRoot, \"customLib\");\n    customLib.mkdirs();\n\n    JarOutputStream jar2 = new JarOutputStream(new FileOutputStream(new File(customLib, \"jar2.jar\")));\n    jar2.putNextEntry(new JarEntry(\"customSharedLibFile\"));\n    jar2.closeEntry();\n    jar2.close();\n\n    FileUtils.writeStringToFile(new File(tmpRoot, \"default-lib-solr.xml\"), \"<solr><cores/></solr>\", \"UTF-8\");\n    FileUtils.writeStringToFile(new File(tmpRoot, \"explicit-lib-solr.xml\"), \"<solr sharedLib=\\\"lib\\\"><cores/></solr>\", \"UTF-8\");\n    FileUtils.writeStringToFile(new File(tmpRoot, \"custom-lib-solr.xml\"), \"<solr sharedLib=\\\"customLib\\\"><cores/></solr>\", \"UTF-8\");\n\n    final CoreContainer cc1 = new CoreContainer(tmpRoot.getAbsolutePath());\n    cc1.load(tmpRoot.getAbsolutePath(), new File(tmpRoot, \"default-lib-solr.xml\"));\n    try {\n      cc1.loader.openResource(\"defaultSharedLibFile\").close();\n    } finally {\n      cc1.shutdown();\n    }\n\n    final CoreContainer cc2 = new CoreContainer(tmpRoot.getAbsolutePath());\n    cc2.load(tmpRoot.getAbsolutePath(), new File(tmpRoot, \"explicit-lib-solr.xml\"));\n    try {\n      cc2.loader.openResource(\"defaultSharedLibFile\").close();\n    } finally {\n      cc2.shutdown();\n    }\n\n    final CoreContainer cc3 = new CoreContainer(tmpRoot.getAbsolutePath());\n    cc3.load(tmpRoot.getAbsolutePath(), new File(tmpRoot, \"custom-lib-solr.xml\"));\n    try {\n      cc3.loader.openResource(\"customSharedLibFile\").close();\n    } finally {\n      cc3.shutdown();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"37a0f60745e53927c4c876cfe5b5a58170f0646c","date":1373994005,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/TestCoreContainer#testSharedLib().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestCoreContainer#testSharedLib().mjava","sourceNew":"  @Test\n  public void testSharedLib() throws Exception {\n    File tmpRoot = _TestUtil.getTempDir(\"testSharedLib\");\n\n    File lib = new File(tmpRoot, \"lib\");\n    lib.mkdirs();\n\n    JarOutputStream jar1 = new JarOutputStream(new FileOutputStream(new File(lib, \"jar1.jar\")));\n    jar1.putNextEntry(new JarEntry(\"defaultSharedLibFile\"));\n    jar1.closeEntry();\n    jar1.close();\n\n    File customLib = new File(tmpRoot, \"customLib\");\n    customLib.mkdirs();\n\n    JarOutputStream jar2 = new JarOutputStream(new FileOutputStream(new File(customLib, \"jar2.jar\")));\n    jar2.putNextEntry(new JarEntry(\"customSharedLibFile\"));\n    jar2.closeEntry();\n    jar2.close();\n\n    FileUtils.writeStringToFile(new File(tmpRoot, \"default-lib-solr.xml\"), \"<solr><cores/></solr>\", \"UTF-8\");\n    FileUtils.writeStringToFile(new File(tmpRoot, \"explicit-lib-solr.xml\"), \"<solr sharedLib=\\\"lib\\\"><cores/></solr>\", \"UTF-8\");\n    FileUtils.writeStringToFile(new File(tmpRoot, \"custom-lib-solr.xml\"), \"<solr sharedLib=\\\"customLib\\\"><cores/></solr>\", \"UTF-8\");\n\n    final CoreContainer cc1 = CoreContainer.createAndLoad(tmpRoot.getAbsolutePath(), new File(tmpRoot, \"default-lib-solr.xml\"));\n    try {\n      cc1.loader.openResource(\"defaultSharedLibFile\").close();\n    } finally {\n      cc1.shutdown();\n    }\n\n    final CoreContainer cc2 = CoreContainer.createAndLoad(tmpRoot.getAbsolutePath(), new File(tmpRoot, \"explicit-lib-solr.xml\"));\n    try {\n      cc2.loader.openResource(\"defaultSharedLibFile\").close();\n    } finally {\n      cc2.shutdown();\n    }\n\n    final CoreContainer cc3 = CoreContainer.createAndLoad(tmpRoot.getAbsolutePath(), new File(tmpRoot, \"custom-lib-solr.xml\"));\n    try {\n      cc3.loader.openResource(\"customSharedLibFile\").close();\n    } finally {\n      cc3.shutdown();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testSharedLib() throws Exception {\n    File tmpRoot = _TestUtil.getTempDir(\"testSharedLib\");\n\n    File lib = new File(tmpRoot, \"lib\");\n    lib.mkdirs();\n\n    JarOutputStream jar1 = new JarOutputStream(new FileOutputStream(new File(lib, \"jar1.jar\")));\n    jar1.putNextEntry(new JarEntry(\"defaultSharedLibFile\"));\n    jar1.closeEntry();\n    jar1.close();\n\n    File customLib = new File(tmpRoot, \"customLib\");\n    customLib.mkdirs();\n\n    JarOutputStream jar2 = new JarOutputStream(new FileOutputStream(new File(customLib, \"jar2.jar\")));\n    jar2.putNextEntry(new JarEntry(\"customSharedLibFile\"));\n    jar2.closeEntry();\n    jar2.close();\n\n    FileUtils.writeStringToFile(new File(tmpRoot, \"default-lib-solr.xml\"), \"<solr><cores/></solr>\", \"UTF-8\");\n    FileUtils.writeStringToFile(new File(tmpRoot, \"explicit-lib-solr.xml\"), \"<solr sharedLib=\\\"lib\\\"><cores/></solr>\", \"UTF-8\");\n    FileUtils.writeStringToFile(new File(tmpRoot, \"custom-lib-solr.xml\"), \"<solr sharedLib=\\\"customLib\\\"><cores/></solr>\", \"UTF-8\");\n\n    final CoreContainer cc1 = new CoreContainer(tmpRoot.getAbsolutePath());\n    cc1.load(tmpRoot.getAbsolutePath(), new File(tmpRoot, \"default-lib-solr.xml\"));\n    try {\n      cc1.loader.openResource(\"defaultSharedLibFile\").close();\n    } finally {\n      cc1.shutdown();\n    }\n\n    final CoreContainer cc2 = new CoreContainer(tmpRoot.getAbsolutePath());\n    cc2.load(tmpRoot.getAbsolutePath(), new File(tmpRoot, \"explicit-lib-solr.xml\"));\n    try {\n      cc2.loader.openResource(\"defaultSharedLibFile\").close();\n    } finally {\n      cc2.shutdown();\n    }\n\n    final CoreContainer cc3 = new CoreContainer(tmpRoot.getAbsolutePath());\n    cc3.load(tmpRoot.getAbsolutePath(), new File(tmpRoot, \"custom-lib-solr.xml\"));\n    try {\n      cc3.loader.openResource(\"customSharedLibFile\").close();\n    } finally {\n      cc3.shutdown();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6613659748fe4411a7dcf85266e55db1f95f7315","date":1392773913,"type":3,"author":"Benson Margulies","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestCoreContainer#testSharedLib().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestCoreContainer#testSharedLib().mjava","sourceNew":"  @Test\n  public void testSharedLib() throws Exception {\n    File tmpRoot = TestUtil.getTempDir(\"testSharedLib\");\n\n    File lib = new File(tmpRoot, \"lib\");\n    lib.mkdirs();\n\n    JarOutputStream jar1 = new JarOutputStream(new FileOutputStream(new File(lib, \"jar1.jar\")));\n    jar1.putNextEntry(new JarEntry(\"defaultSharedLibFile\"));\n    jar1.closeEntry();\n    jar1.close();\n\n    File customLib = new File(tmpRoot, \"customLib\");\n    customLib.mkdirs();\n\n    JarOutputStream jar2 = new JarOutputStream(new FileOutputStream(new File(customLib, \"jar2.jar\")));\n    jar2.putNextEntry(new JarEntry(\"customSharedLibFile\"));\n    jar2.closeEntry();\n    jar2.close();\n\n    FileUtils.writeStringToFile(new File(tmpRoot, \"default-lib-solr.xml\"), \"<solr><cores/></solr>\", \"UTF-8\");\n    FileUtils.writeStringToFile(new File(tmpRoot, \"explicit-lib-solr.xml\"), \"<solr sharedLib=\\\"lib\\\"><cores/></solr>\", \"UTF-8\");\n    FileUtils.writeStringToFile(new File(tmpRoot, \"custom-lib-solr.xml\"), \"<solr sharedLib=\\\"customLib\\\"><cores/></solr>\", \"UTF-8\");\n\n    final CoreContainer cc1 = CoreContainer.createAndLoad(tmpRoot.getAbsolutePath(), new File(tmpRoot, \"default-lib-solr.xml\"));\n    try {\n      cc1.loader.openResource(\"defaultSharedLibFile\").close();\n    } finally {\n      cc1.shutdown();\n    }\n\n    final CoreContainer cc2 = CoreContainer.createAndLoad(tmpRoot.getAbsolutePath(), new File(tmpRoot, \"explicit-lib-solr.xml\"));\n    try {\n      cc2.loader.openResource(\"defaultSharedLibFile\").close();\n    } finally {\n      cc2.shutdown();\n    }\n\n    final CoreContainer cc3 = CoreContainer.createAndLoad(tmpRoot.getAbsolutePath(), new File(tmpRoot, \"custom-lib-solr.xml\"));\n    try {\n      cc3.loader.openResource(\"customSharedLibFile\").close();\n    } finally {\n      cc3.shutdown();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testSharedLib() throws Exception {\n    File tmpRoot = _TestUtil.getTempDir(\"testSharedLib\");\n\n    File lib = new File(tmpRoot, \"lib\");\n    lib.mkdirs();\n\n    JarOutputStream jar1 = new JarOutputStream(new FileOutputStream(new File(lib, \"jar1.jar\")));\n    jar1.putNextEntry(new JarEntry(\"defaultSharedLibFile\"));\n    jar1.closeEntry();\n    jar1.close();\n\n    File customLib = new File(tmpRoot, \"customLib\");\n    customLib.mkdirs();\n\n    JarOutputStream jar2 = new JarOutputStream(new FileOutputStream(new File(customLib, \"jar2.jar\")));\n    jar2.putNextEntry(new JarEntry(\"customSharedLibFile\"));\n    jar2.closeEntry();\n    jar2.close();\n\n    FileUtils.writeStringToFile(new File(tmpRoot, \"default-lib-solr.xml\"), \"<solr><cores/></solr>\", \"UTF-8\");\n    FileUtils.writeStringToFile(new File(tmpRoot, \"explicit-lib-solr.xml\"), \"<solr sharedLib=\\\"lib\\\"><cores/></solr>\", \"UTF-8\");\n    FileUtils.writeStringToFile(new File(tmpRoot, \"custom-lib-solr.xml\"), \"<solr sharedLib=\\\"customLib\\\"><cores/></solr>\", \"UTF-8\");\n\n    final CoreContainer cc1 = CoreContainer.createAndLoad(tmpRoot.getAbsolutePath(), new File(tmpRoot, \"default-lib-solr.xml\"));\n    try {\n      cc1.loader.openResource(\"defaultSharedLibFile\").close();\n    } finally {\n      cc1.shutdown();\n    }\n\n    final CoreContainer cc2 = CoreContainer.createAndLoad(tmpRoot.getAbsolutePath(), new File(tmpRoot, \"explicit-lib-solr.xml\"));\n    try {\n      cc2.loader.openResource(\"defaultSharedLibFile\").close();\n    } finally {\n      cc2.shutdown();\n    }\n\n    final CoreContainer cc3 = CoreContainer.createAndLoad(tmpRoot.getAbsolutePath(), new File(tmpRoot, \"custom-lib-solr.xml\"));\n    try {\n      cc3.loader.openResource(\"customSharedLibFile\").close();\n    } finally {\n      cc3.shutdown();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0d579490a72f2e6297eaa648940611234c57cf1","date":1395917140,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestCoreContainer#testSharedLib().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestCoreContainer#testSharedLib().mjava","sourceNew":"  @Test\n  public void testSharedLib() throws Exception {\n    File tmpRoot = TestUtil.createTempDir(\"testSharedLib\");\n\n    File lib = new File(tmpRoot, \"lib\");\n    lib.mkdirs();\n\n    JarOutputStream jar1 = new JarOutputStream(new FileOutputStream(new File(lib, \"jar1.jar\")));\n    jar1.putNextEntry(new JarEntry(\"defaultSharedLibFile\"));\n    jar1.closeEntry();\n    jar1.close();\n\n    File customLib = new File(tmpRoot, \"customLib\");\n    customLib.mkdirs();\n\n    JarOutputStream jar2 = new JarOutputStream(new FileOutputStream(new File(customLib, \"jar2.jar\")));\n    jar2.putNextEntry(new JarEntry(\"customSharedLibFile\"));\n    jar2.closeEntry();\n    jar2.close();\n\n    FileUtils.writeStringToFile(new File(tmpRoot, \"default-lib-solr.xml\"), \"<solr><cores/></solr>\", \"UTF-8\");\n    FileUtils.writeStringToFile(new File(tmpRoot, \"explicit-lib-solr.xml\"), \"<solr sharedLib=\\\"lib\\\"><cores/></solr>\", \"UTF-8\");\n    FileUtils.writeStringToFile(new File(tmpRoot, \"custom-lib-solr.xml\"), \"<solr sharedLib=\\\"customLib\\\"><cores/></solr>\", \"UTF-8\");\n\n    final CoreContainer cc1 = CoreContainer.createAndLoad(tmpRoot.getAbsolutePath(), new File(tmpRoot, \"default-lib-solr.xml\"));\n    try {\n      cc1.loader.openResource(\"defaultSharedLibFile\").close();\n    } finally {\n      cc1.shutdown();\n    }\n\n    final CoreContainer cc2 = CoreContainer.createAndLoad(tmpRoot.getAbsolutePath(), new File(tmpRoot, \"explicit-lib-solr.xml\"));\n    try {\n      cc2.loader.openResource(\"defaultSharedLibFile\").close();\n    } finally {\n      cc2.shutdown();\n    }\n\n    final CoreContainer cc3 = CoreContainer.createAndLoad(tmpRoot.getAbsolutePath(), new File(tmpRoot, \"custom-lib-solr.xml\"));\n    try {\n      cc3.loader.openResource(\"customSharedLibFile\").close();\n    } finally {\n      cc3.shutdown();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testSharedLib() throws Exception {\n    File tmpRoot = TestUtil.getTempDir(\"testSharedLib\");\n\n    File lib = new File(tmpRoot, \"lib\");\n    lib.mkdirs();\n\n    JarOutputStream jar1 = new JarOutputStream(new FileOutputStream(new File(lib, \"jar1.jar\")));\n    jar1.putNextEntry(new JarEntry(\"defaultSharedLibFile\"));\n    jar1.closeEntry();\n    jar1.close();\n\n    File customLib = new File(tmpRoot, \"customLib\");\n    customLib.mkdirs();\n\n    JarOutputStream jar2 = new JarOutputStream(new FileOutputStream(new File(customLib, \"jar2.jar\")));\n    jar2.putNextEntry(new JarEntry(\"customSharedLibFile\"));\n    jar2.closeEntry();\n    jar2.close();\n\n    FileUtils.writeStringToFile(new File(tmpRoot, \"default-lib-solr.xml\"), \"<solr><cores/></solr>\", \"UTF-8\");\n    FileUtils.writeStringToFile(new File(tmpRoot, \"explicit-lib-solr.xml\"), \"<solr sharedLib=\\\"lib\\\"><cores/></solr>\", \"UTF-8\");\n    FileUtils.writeStringToFile(new File(tmpRoot, \"custom-lib-solr.xml\"), \"<solr sharedLib=\\\"customLib\\\"><cores/></solr>\", \"UTF-8\");\n\n    final CoreContainer cc1 = CoreContainer.createAndLoad(tmpRoot.getAbsolutePath(), new File(tmpRoot, \"default-lib-solr.xml\"));\n    try {\n      cc1.loader.openResource(\"defaultSharedLibFile\").close();\n    } finally {\n      cc1.shutdown();\n    }\n\n    final CoreContainer cc2 = CoreContainer.createAndLoad(tmpRoot.getAbsolutePath(), new File(tmpRoot, \"explicit-lib-solr.xml\"));\n    try {\n      cc2.loader.openResource(\"defaultSharedLibFile\").close();\n    } finally {\n      cc2.shutdown();\n    }\n\n    final CoreContainer cc3 = CoreContainer.createAndLoad(tmpRoot.getAbsolutePath(), new File(tmpRoot, \"custom-lib-solr.xml\"));\n    try {\n      cc3.loader.openResource(\"customSharedLibFile\").close();\n    } finally {\n      cc3.shutdown();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a9a24bae1e63c3bb5ff2fb47b0119240d840ee7c","date":1396633078,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestCoreContainer#testSharedLib().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestCoreContainer#testSharedLib().mjava","sourceNew":"  @Test\n  public void testSharedLib() throws Exception {\n    File tmpRoot = createTempDir(\"testSharedLib\");\n\n    File lib = new File(tmpRoot, \"lib\");\n    lib.mkdirs();\n\n    JarOutputStream jar1 = new JarOutputStream(new FileOutputStream(new File(lib, \"jar1.jar\")));\n    jar1.putNextEntry(new JarEntry(\"defaultSharedLibFile\"));\n    jar1.closeEntry();\n    jar1.close();\n\n    File customLib = new File(tmpRoot, \"customLib\");\n    customLib.mkdirs();\n\n    JarOutputStream jar2 = new JarOutputStream(new FileOutputStream(new File(customLib, \"jar2.jar\")));\n    jar2.putNextEntry(new JarEntry(\"customSharedLibFile\"));\n    jar2.closeEntry();\n    jar2.close();\n\n    FileUtils.writeStringToFile(new File(tmpRoot, \"default-lib-solr.xml\"), \"<solr><cores/></solr>\", \"UTF-8\");\n    FileUtils.writeStringToFile(new File(tmpRoot, \"explicit-lib-solr.xml\"), \"<solr sharedLib=\\\"lib\\\"><cores/></solr>\", \"UTF-8\");\n    FileUtils.writeStringToFile(new File(tmpRoot, \"custom-lib-solr.xml\"), \"<solr sharedLib=\\\"customLib\\\"><cores/></solr>\", \"UTF-8\");\n\n    final CoreContainer cc1 = CoreContainer.createAndLoad(tmpRoot.getAbsolutePath(), new File(tmpRoot, \"default-lib-solr.xml\"));\n    try {\n      cc1.loader.openResource(\"defaultSharedLibFile\").close();\n    } finally {\n      cc1.shutdown();\n    }\n\n    final CoreContainer cc2 = CoreContainer.createAndLoad(tmpRoot.getAbsolutePath(), new File(tmpRoot, \"explicit-lib-solr.xml\"));\n    try {\n      cc2.loader.openResource(\"defaultSharedLibFile\").close();\n    } finally {\n      cc2.shutdown();\n    }\n\n    final CoreContainer cc3 = CoreContainer.createAndLoad(tmpRoot.getAbsolutePath(), new File(tmpRoot, \"custom-lib-solr.xml\"));\n    try {\n      cc3.loader.openResource(\"customSharedLibFile\").close();\n    } finally {\n      cc3.shutdown();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testSharedLib() throws Exception {\n    File tmpRoot = TestUtil.createTempDir(\"testSharedLib\");\n\n    File lib = new File(tmpRoot, \"lib\");\n    lib.mkdirs();\n\n    JarOutputStream jar1 = new JarOutputStream(new FileOutputStream(new File(lib, \"jar1.jar\")));\n    jar1.putNextEntry(new JarEntry(\"defaultSharedLibFile\"));\n    jar1.closeEntry();\n    jar1.close();\n\n    File customLib = new File(tmpRoot, \"customLib\");\n    customLib.mkdirs();\n\n    JarOutputStream jar2 = new JarOutputStream(new FileOutputStream(new File(customLib, \"jar2.jar\")));\n    jar2.putNextEntry(new JarEntry(\"customSharedLibFile\"));\n    jar2.closeEntry();\n    jar2.close();\n\n    FileUtils.writeStringToFile(new File(tmpRoot, \"default-lib-solr.xml\"), \"<solr><cores/></solr>\", \"UTF-8\");\n    FileUtils.writeStringToFile(new File(tmpRoot, \"explicit-lib-solr.xml\"), \"<solr sharedLib=\\\"lib\\\"><cores/></solr>\", \"UTF-8\");\n    FileUtils.writeStringToFile(new File(tmpRoot, \"custom-lib-solr.xml\"), \"<solr sharedLib=\\\"customLib\\\"><cores/></solr>\", \"UTF-8\");\n\n    final CoreContainer cc1 = CoreContainer.createAndLoad(tmpRoot.getAbsolutePath(), new File(tmpRoot, \"default-lib-solr.xml\"));\n    try {\n      cc1.loader.openResource(\"defaultSharedLibFile\").close();\n    } finally {\n      cc1.shutdown();\n    }\n\n    final CoreContainer cc2 = CoreContainer.createAndLoad(tmpRoot.getAbsolutePath(), new File(tmpRoot, \"explicit-lib-solr.xml\"));\n    try {\n      cc2.loader.openResource(\"defaultSharedLibFile\").close();\n    } finally {\n      cc2.shutdown();\n    }\n\n    final CoreContainer cc3 = CoreContainer.createAndLoad(tmpRoot.getAbsolutePath(), new File(tmpRoot, \"custom-lib-solr.xml\"));\n    try {\n      cc3.loader.openResource(\"customSharedLibFile\").close();\n    } finally {\n      cc3.shutdown();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a0f5bb79c600763ffe7b8141df59a3169d31e48","date":1396689440,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/TestCoreContainer#testSharedLib().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestCoreContainer#testSharedLib().mjava","sourceNew":"  @Test\n  public void testSharedLib() throws Exception {\n    File tmpRoot = createTempDir(\"testSharedLib\");\n\n    File lib = new File(tmpRoot, \"lib\");\n    lib.mkdirs();\n\n    JarOutputStream jar1 = new JarOutputStream(new FileOutputStream(new File(lib, \"jar1.jar\")));\n    jar1.putNextEntry(new JarEntry(\"defaultSharedLibFile\"));\n    jar1.closeEntry();\n    jar1.close();\n\n    File customLib = new File(tmpRoot, \"customLib\");\n    customLib.mkdirs();\n\n    JarOutputStream jar2 = new JarOutputStream(new FileOutputStream(new File(customLib, \"jar2.jar\")));\n    jar2.putNextEntry(new JarEntry(\"customSharedLibFile\"));\n    jar2.closeEntry();\n    jar2.close();\n\n    FileUtils.writeStringToFile(new File(tmpRoot, \"default-lib-solr.xml\"), \"<solr><cores/></solr>\", \"UTF-8\");\n    FileUtils.writeStringToFile(new File(tmpRoot, \"explicit-lib-solr.xml\"), \"<solr sharedLib=\\\"lib\\\"><cores/></solr>\", \"UTF-8\");\n    FileUtils.writeStringToFile(new File(tmpRoot, \"custom-lib-solr.xml\"), \"<solr sharedLib=\\\"customLib\\\"><cores/></solr>\", \"UTF-8\");\n\n    final CoreContainer cc1 = CoreContainer.createAndLoad(tmpRoot.getAbsolutePath(), new File(tmpRoot, \"default-lib-solr.xml\"));\n    try {\n      cc1.loader.openResource(\"defaultSharedLibFile\").close();\n    } finally {\n      cc1.shutdown();\n    }\n\n    final CoreContainer cc2 = CoreContainer.createAndLoad(tmpRoot.getAbsolutePath(), new File(tmpRoot, \"explicit-lib-solr.xml\"));\n    try {\n      cc2.loader.openResource(\"defaultSharedLibFile\").close();\n    } finally {\n      cc2.shutdown();\n    }\n\n    final CoreContainer cc3 = CoreContainer.createAndLoad(tmpRoot.getAbsolutePath(), new File(tmpRoot, \"custom-lib-solr.xml\"));\n    try {\n      cc3.loader.openResource(\"customSharedLibFile\").close();\n    } finally {\n      cc3.shutdown();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testSharedLib() throws Exception {\n    File tmpRoot = TestUtil.getTempDir(\"testSharedLib\");\n\n    File lib = new File(tmpRoot, \"lib\");\n    lib.mkdirs();\n\n    JarOutputStream jar1 = new JarOutputStream(new FileOutputStream(new File(lib, \"jar1.jar\")));\n    jar1.putNextEntry(new JarEntry(\"defaultSharedLibFile\"));\n    jar1.closeEntry();\n    jar1.close();\n\n    File customLib = new File(tmpRoot, \"customLib\");\n    customLib.mkdirs();\n\n    JarOutputStream jar2 = new JarOutputStream(new FileOutputStream(new File(customLib, \"jar2.jar\")));\n    jar2.putNextEntry(new JarEntry(\"customSharedLibFile\"));\n    jar2.closeEntry();\n    jar2.close();\n\n    FileUtils.writeStringToFile(new File(tmpRoot, \"default-lib-solr.xml\"), \"<solr><cores/></solr>\", \"UTF-8\");\n    FileUtils.writeStringToFile(new File(tmpRoot, \"explicit-lib-solr.xml\"), \"<solr sharedLib=\\\"lib\\\"><cores/></solr>\", \"UTF-8\");\n    FileUtils.writeStringToFile(new File(tmpRoot, \"custom-lib-solr.xml\"), \"<solr sharedLib=\\\"customLib\\\"><cores/></solr>\", \"UTF-8\");\n\n    final CoreContainer cc1 = CoreContainer.createAndLoad(tmpRoot.getAbsolutePath(), new File(tmpRoot, \"default-lib-solr.xml\"));\n    try {\n      cc1.loader.openResource(\"defaultSharedLibFile\").close();\n    } finally {\n      cc1.shutdown();\n    }\n\n    final CoreContainer cc2 = CoreContainer.createAndLoad(tmpRoot.getAbsolutePath(), new File(tmpRoot, \"explicit-lib-solr.xml\"));\n    try {\n      cc2.loader.openResource(\"defaultSharedLibFile\").close();\n    } finally {\n      cc2.shutdown();\n    }\n\n    final CoreContainer cc3 = CoreContainer.createAndLoad(tmpRoot.getAbsolutePath(), new File(tmpRoot, \"custom-lib-solr.xml\"));\n    try {\n      cc3.loader.openResource(\"customSharedLibFile\").close();\n    } finally {\n      cc3.shutdown();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f4abec28b874149a7223e32cc7a01704c27790de","date":1410644789,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestCoreContainer#testSharedLib().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestCoreContainer#testSharedLib().mjava","sourceNew":"  @Test\n  public void testSharedLib() throws Exception {\n    File tmpRoot = createTempDir(\"testSharedLib\").toFile();\n\n    File lib = new File(tmpRoot, \"lib\");\n    lib.mkdirs();\n\n    JarOutputStream jar1 = new JarOutputStream(new FileOutputStream(new File(lib, \"jar1.jar\")));\n    jar1.putNextEntry(new JarEntry(\"defaultSharedLibFile\"));\n    jar1.closeEntry();\n    jar1.close();\n\n    File customLib = new File(tmpRoot, \"customLib\");\n    customLib.mkdirs();\n\n    JarOutputStream jar2 = new JarOutputStream(new FileOutputStream(new File(customLib, \"jar2.jar\")));\n    jar2.putNextEntry(new JarEntry(\"customSharedLibFile\"));\n    jar2.closeEntry();\n    jar2.close();\n\n    FileUtils.writeStringToFile(new File(tmpRoot, \"default-lib-solr.xml\"), \"<solr><cores/></solr>\", \"UTF-8\");\n    FileUtils.writeStringToFile(new File(tmpRoot, \"explicit-lib-solr.xml\"), \"<solr sharedLib=\\\"lib\\\"><cores/></solr>\", \"UTF-8\");\n    FileUtils.writeStringToFile(new File(tmpRoot, \"custom-lib-solr.xml\"), \"<solr sharedLib=\\\"customLib\\\"><cores/></solr>\", \"UTF-8\");\n\n    final CoreContainer cc1 = CoreContainer.createAndLoad(tmpRoot.getAbsolutePath(), new File(tmpRoot, \"default-lib-solr.xml\"));\n    try {\n      cc1.loader.openResource(\"defaultSharedLibFile\").close();\n    } finally {\n      cc1.shutdown();\n    }\n\n    final CoreContainer cc2 = CoreContainer.createAndLoad(tmpRoot.getAbsolutePath(), new File(tmpRoot, \"explicit-lib-solr.xml\"));\n    try {\n      cc2.loader.openResource(\"defaultSharedLibFile\").close();\n    } finally {\n      cc2.shutdown();\n    }\n\n    final CoreContainer cc3 = CoreContainer.createAndLoad(tmpRoot.getAbsolutePath(), new File(tmpRoot, \"custom-lib-solr.xml\"));\n    try {\n      cc3.loader.openResource(\"customSharedLibFile\").close();\n    } finally {\n      cc3.shutdown();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testSharedLib() throws Exception {\n    File tmpRoot = createTempDir(\"testSharedLib\");\n\n    File lib = new File(tmpRoot, \"lib\");\n    lib.mkdirs();\n\n    JarOutputStream jar1 = new JarOutputStream(new FileOutputStream(new File(lib, \"jar1.jar\")));\n    jar1.putNextEntry(new JarEntry(\"defaultSharedLibFile\"));\n    jar1.closeEntry();\n    jar1.close();\n\n    File customLib = new File(tmpRoot, \"customLib\");\n    customLib.mkdirs();\n\n    JarOutputStream jar2 = new JarOutputStream(new FileOutputStream(new File(customLib, \"jar2.jar\")));\n    jar2.putNextEntry(new JarEntry(\"customSharedLibFile\"));\n    jar2.closeEntry();\n    jar2.close();\n\n    FileUtils.writeStringToFile(new File(tmpRoot, \"default-lib-solr.xml\"), \"<solr><cores/></solr>\", \"UTF-8\");\n    FileUtils.writeStringToFile(new File(tmpRoot, \"explicit-lib-solr.xml\"), \"<solr sharedLib=\\\"lib\\\"><cores/></solr>\", \"UTF-8\");\n    FileUtils.writeStringToFile(new File(tmpRoot, \"custom-lib-solr.xml\"), \"<solr sharedLib=\\\"customLib\\\"><cores/></solr>\", \"UTF-8\");\n\n    final CoreContainer cc1 = CoreContainer.createAndLoad(tmpRoot.getAbsolutePath(), new File(tmpRoot, \"default-lib-solr.xml\"));\n    try {\n      cc1.loader.openResource(\"defaultSharedLibFile\").close();\n    } finally {\n      cc1.shutdown();\n    }\n\n    final CoreContainer cc2 = CoreContainer.createAndLoad(tmpRoot.getAbsolutePath(), new File(tmpRoot, \"explicit-lib-solr.xml\"));\n    try {\n      cc2.loader.openResource(\"defaultSharedLibFile\").close();\n    } finally {\n      cc2.shutdown();\n    }\n\n    final CoreContainer cc3 = CoreContainer.createAndLoad(tmpRoot.getAbsolutePath(), new File(tmpRoot, \"custom-lib-solr.xml\"));\n    try {\n      cc3.loader.openResource(\"customSharedLibFile\").close();\n    } finally {\n      cc3.shutdown();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fd44bec977a26a118d9e809e2de6f7edb5ca0f39","date":1421673929,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestCoreContainer#testSharedLib().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestCoreContainer#testSharedLib().mjava","sourceNew":"  @Test\n  public void testSharedLib() throws Exception {\n    Path tmpRoot = createTempDir(\"testSharedLib\");\n\n    File lib = new File(tmpRoot.toFile(), \"lib\");\n    lib.mkdirs();\n\n    JarOutputStream jar1 = new JarOutputStream(new FileOutputStream(new File(lib, \"jar1.jar\")));\n    jar1.putNextEntry(new JarEntry(\"defaultSharedLibFile\"));\n    jar1.closeEntry();\n    jar1.close();\n\n    File customLib = new File(tmpRoot.toFile(), \"customLib\");\n    customLib.mkdirs();\n\n    JarOutputStream jar2 = new JarOutputStream(new FileOutputStream(new File(customLib, \"jar2.jar\")));\n    jar2.putNextEntry(new JarEntry(\"customSharedLibFile\"));\n    jar2.closeEntry();\n    jar2.close();\n\n    final CoreContainer cc1 = init(tmpRoot, \"<solr></solr>\");\n    try {\n      cc1.loader.openResource(\"defaultSharedLibFile\").close();\n    } finally {\n      cc1.shutdown();\n    }\n\n    final CoreContainer cc2 = init(tmpRoot, \"<solr><str name=\\\"sharedLib\\\">lib</str></solr>\");\n    try {\n      cc2.loader.openResource(\"defaultSharedLibFile\").close();\n    } finally {\n      cc2.shutdown();\n    }\n\n    final CoreContainer cc3 = init(tmpRoot, \"<solr><str name=\\\"sharedLib\\\">customLib</str></solr>\");\n    try {\n      cc3.loader.openResource(\"customSharedLibFile\").close();\n    } finally {\n      cc3.shutdown();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testSharedLib() throws Exception {\n    File tmpRoot = createTempDir(\"testSharedLib\").toFile();\n\n    File lib = new File(tmpRoot, \"lib\");\n    lib.mkdirs();\n\n    JarOutputStream jar1 = new JarOutputStream(new FileOutputStream(new File(lib, \"jar1.jar\")));\n    jar1.putNextEntry(new JarEntry(\"defaultSharedLibFile\"));\n    jar1.closeEntry();\n    jar1.close();\n\n    File customLib = new File(tmpRoot, \"customLib\");\n    customLib.mkdirs();\n\n    JarOutputStream jar2 = new JarOutputStream(new FileOutputStream(new File(customLib, \"jar2.jar\")));\n    jar2.putNextEntry(new JarEntry(\"customSharedLibFile\"));\n    jar2.closeEntry();\n    jar2.close();\n\n    FileUtils.writeStringToFile(new File(tmpRoot, \"default-lib-solr.xml\"), \"<solr><cores/></solr>\", \"UTF-8\");\n    FileUtils.writeStringToFile(new File(tmpRoot, \"explicit-lib-solr.xml\"), \"<solr sharedLib=\\\"lib\\\"><cores/></solr>\", \"UTF-8\");\n    FileUtils.writeStringToFile(new File(tmpRoot, \"custom-lib-solr.xml\"), \"<solr sharedLib=\\\"customLib\\\"><cores/></solr>\", \"UTF-8\");\n\n    final CoreContainer cc1 = CoreContainer.createAndLoad(tmpRoot.getAbsolutePath(), new File(tmpRoot, \"default-lib-solr.xml\"));\n    try {\n      cc1.loader.openResource(\"defaultSharedLibFile\").close();\n    } finally {\n      cc1.shutdown();\n    }\n\n    final CoreContainer cc2 = CoreContainer.createAndLoad(tmpRoot.getAbsolutePath(), new File(tmpRoot, \"explicit-lib-solr.xml\"));\n    try {\n      cc2.loader.openResource(\"defaultSharedLibFile\").close();\n    } finally {\n      cc2.shutdown();\n    }\n\n    final CoreContainer cc3 = CoreContainer.createAndLoad(tmpRoot.getAbsolutePath(), new File(tmpRoot, \"custom-lib-solr.xml\"));\n    try {\n      cc3.loader.openResource(\"customSharedLibFile\").close();\n    } finally {\n      cc3.shutdown();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0d1071f88e3697a2eb3ed682c527f5c35859bad0","date":1565425271,"type":3,"author":"Munendra S N","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestCoreContainer#testSharedLib().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestCoreContainer#testSharedLib().mjava","sourceNew":"  @Test\n  public void testSharedLib() throws Exception {\n    Path tmpRoot = createTempDir(\"testSharedLib\");\n\n    File lib = new File(tmpRoot.toFile(), \"lib\");\n    lib.mkdirs();\n\n    try (JarOutputStream jar1 = new JarOutputStream(new FileOutputStream(new File(lib, \"jar1.jar\")))) {\n      jar1.putNextEntry(new JarEntry(\"defaultSharedLibFile\"));\n      jar1.closeEntry();\n    }\n\n    File customLib = new File(tmpRoot.toFile(), \"customLib\");\n    customLib.mkdirs();\n\n    try (JarOutputStream jar2 = new JarOutputStream(new FileOutputStream(new File(customLib, \"jar2.jar\")))) {\n      jar2.putNextEntry(new JarEntry(\"customSharedLibFile\"));\n      jar2.closeEntry();\n    }\n\n    final CoreContainer cc1 = init(tmpRoot, \"<solr></solr>\");\n    try {\n      cc1.loader.openResource(\"defaultSharedLibFile\").close();\n    } finally {\n      cc1.shutdown();\n    }\n\n    final CoreContainer cc2 = init(tmpRoot, \"<solr><str name=\\\"sharedLib\\\">lib</str></solr>\");\n    try {\n      cc2.loader.openResource(\"defaultSharedLibFile\").close();\n    } finally {\n      cc2.shutdown();\n    }\n\n    final CoreContainer cc3 = init(tmpRoot, \"<solr><str name=\\\"sharedLib\\\">customLib</str></solr>\");\n    try {\n      cc3.loader.openResource(\"customSharedLibFile\").close();\n    } finally {\n      cc3.shutdown();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testSharedLib() throws Exception {\n    Path tmpRoot = createTempDir(\"testSharedLib\");\n\n    File lib = new File(tmpRoot.toFile(), \"lib\");\n    lib.mkdirs();\n\n    JarOutputStream jar1 = new JarOutputStream(new FileOutputStream(new File(lib, \"jar1.jar\")));\n    jar1.putNextEntry(new JarEntry(\"defaultSharedLibFile\"));\n    jar1.closeEntry();\n    jar1.close();\n\n    File customLib = new File(tmpRoot.toFile(), \"customLib\");\n    customLib.mkdirs();\n\n    JarOutputStream jar2 = new JarOutputStream(new FileOutputStream(new File(customLib, \"jar2.jar\")));\n    jar2.putNextEntry(new JarEntry(\"customSharedLibFile\"));\n    jar2.closeEntry();\n    jar2.close();\n\n    final CoreContainer cc1 = init(tmpRoot, \"<solr></solr>\");\n    try {\n      cc1.loader.openResource(\"defaultSharedLibFile\").close();\n    } finally {\n      cc1.shutdown();\n    }\n\n    final CoreContainer cc2 = init(tmpRoot, \"<solr><str name=\\\"sharedLib\\\">lib</str></solr>\");\n    try {\n      cc2.loader.openResource(\"defaultSharedLibFile\").close();\n    } finally {\n      cc2.shutdown();\n    }\n\n    final CoreContainer cc3 = init(tmpRoot, \"<solr><str name=\\\"sharedLib\\\">customLib</str></solr>\");\n    try {\n      cc3.loader.openResource(\"customSharedLibFile\").close();\n    } finally {\n      cc3.shutdown();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b0dda625d0f49ef568959e45adabe6d6faa39412","date":1582809393,"type":3,"author":"Jan Høydahl","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestCoreContainer#testSharedLib().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestCoreContainer#testSharedLib().mjava","sourceNew":"  @Test\n  public void testSharedLib() throws Exception {\n    Path tmpRoot = createTempDir(\"testSharedLib\");\n\n    File lib = new File(tmpRoot.toFile(), \"lib\");\n    lib.mkdirs();\n\n    try (JarOutputStream jar1 = new JarOutputStream(new FileOutputStream(new File(lib, \"jar1.jar\")))) {\n      jar1.putNextEntry(new JarEntry(\"defaultSharedLibFile\"));\n      jar1.closeEntry();\n    }\n\n    File customLib = new File(tmpRoot.toFile(), \"customLib\");\n    customLib.mkdirs();\n\n    try (JarOutputStream jar2 = new JarOutputStream(new FileOutputStream(new File(customLib, \"jar2.jar\")))) {\n      jar2.putNextEntry(new JarEntry(\"customSharedLibFile\"));\n      jar2.closeEntry();\n    }\n\n    File customLib2 = new File(tmpRoot.toFile(), \"customLib2\");\n    customLib2.mkdirs();\n\n    try (JarOutputStream jar3 = new JarOutputStream(new FileOutputStream(new File(customLib2, \"jar3.jar\")))) {\n      jar3.putNextEntry(new JarEntry(\"jar3File\"));\n      jar3.closeEntry();\n    }\n\n    final CoreContainer cc1 = init(tmpRoot, \"<solr></solr>\");\n    try {\n      cc1.loader.openResource(\"defaultSharedLibFile\").close();\n    } finally {\n      cc1.shutdown();\n    }\n\n    // Explicitly declaring 'lib' makes no change compared to the default\n    final CoreContainer cc2 = init(tmpRoot, \"<solr><str name=\\\"sharedLib\\\">lib</str></solr>\");\n    try {\n      cc2.loader.openResource(\"defaultSharedLibFile\").close();\n    } finally {\n      cc2.shutdown();\n    }\n\n    // custom lib folder, added to path in addition to default 'lib' folder\n    final CoreContainer cc3 = init(tmpRoot, \"<solr><str name=\\\"sharedLib\\\">customLib</str></solr>\");\n    try {\n      cc3.loader.openResource(\"defaultSharedLibFile\").close();\n      cc3.loader.openResource(\"customSharedLibFile\").close();\n    } finally {\n      cc3.shutdown();\n    }\n\n    // Comma separated list of lib folders\n    final CoreContainer cc4 = init(tmpRoot, \"<solr><str name=\\\"sharedLib\\\">customLib, customLib2</str></solr>\");\n    try {\n      cc4.loader.openResource(\"defaultSharedLibFile\").close();\n      cc4.loader.openResource(\"customSharedLibFile\").close();\n      cc4.loader.openResource(\"jar3File\").close();\n    } finally {\n      cc4.shutdown();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testSharedLib() throws Exception {\n    Path tmpRoot = createTempDir(\"testSharedLib\");\n\n    File lib = new File(tmpRoot.toFile(), \"lib\");\n    lib.mkdirs();\n\n    try (JarOutputStream jar1 = new JarOutputStream(new FileOutputStream(new File(lib, \"jar1.jar\")))) {\n      jar1.putNextEntry(new JarEntry(\"defaultSharedLibFile\"));\n      jar1.closeEntry();\n    }\n\n    File customLib = new File(tmpRoot.toFile(), \"customLib\");\n    customLib.mkdirs();\n\n    try (JarOutputStream jar2 = new JarOutputStream(new FileOutputStream(new File(customLib, \"jar2.jar\")))) {\n      jar2.putNextEntry(new JarEntry(\"customSharedLibFile\"));\n      jar2.closeEntry();\n    }\n\n    final CoreContainer cc1 = init(tmpRoot, \"<solr></solr>\");\n    try {\n      cc1.loader.openResource(\"defaultSharedLibFile\").close();\n    } finally {\n      cc1.shutdown();\n    }\n\n    final CoreContainer cc2 = init(tmpRoot, \"<solr><str name=\\\"sharedLib\\\">lib</str></solr>\");\n    try {\n      cc2.loader.openResource(\"defaultSharedLibFile\").close();\n    } finally {\n      cc2.shutdown();\n    }\n\n    final CoreContainer cc3 = init(tmpRoot, \"<solr><str name=\\\"sharedLib\\\">customLib</str></solr>\");\n    try {\n      cc3.loader.openResource(\"customSharedLibFile\").close();\n    } finally {\n      cc3.shutdown();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b0dda625d0f49ef568959e45adabe6d6faa39412":["0d1071f88e3697a2eb3ed682c527f5c35859bad0"],"7116474e2e390259937401cf928323e0cbc75e60":["354983dcdf70c800bf2573d10b54a7391b1dc167"],"2a0f5bb79c600763ffe7b8141df59a3169d31e48":["6613659748fe4411a7dcf85266e55db1f95f7315","a9a24bae1e63c3bb5ff2fb47b0119240d840ee7c"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":["5268b3b46fa91a88e4d8fdd00f16f42577e6da11","7116474e2e390259937401cf928323e0cbc75e60"],"6613659748fe4411a7dcf85266e55db1f95f7315":["7116474e2e390259937401cf928323e0cbc75e60"],"354983dcdf70c800bf2573d10b54a7391b1dc167":["d264f386d864b5751209060e8886ca9845f70469"],"fd44bec977a26a118d9e809e2de6f7edb5ca0f39":["f4abec28b874149a7223e32cc7a01704c27790de"],"d264f386d864b5751209060e8886ca9845f70469":["5268b3b46fa91a88e4d8fdd00f16f42577e6da11"],"f4abec28b874149a7223e32cc7a01704c27790de":["2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"d0d579490a72f2e6297eaa648940611234c57cf1":["6613659748fe4411a7dcf85266e55db1f95f7315"],"5268b3b46fa91a88e4d8fdd00f16f42577e6da11":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a9a24bae1e63c3bb5ff2fb47b0119240d840ee7c":["d0d579490a72f2e6297eaa648940611234c57cf1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0d1071f88e3697a2eb3ed682c527f5c35859bad0":["fd44bec977a26a118d9e809e2de6f7edb5ca0f39"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b0dda625d0f49ef568959e45adabe6d6faa39412"]},"commit2Childs":{"b0dda625d0f49ef568959e45adabe6d6faa39412":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"7116474e2e390259937401cf928323e0cbc75e60":["37a0f60745e53927c4c876cfe5b5a58170f0646c","6613659748fe4411a7dcf85266e55db1f95f7315"],"2a0f5bb79c600763ffe7b8141df59a3169d31e48":["f4abec28b874149a7223e32cc7a01704c27790de"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":[],"6613659748fe4411a7dcf85266e55db1f95f7315":["2a0f5bb79c600763ffe7b8141df59a3169d31e48","d0d579490a72f2e6297eaa648940611234c57cf1"],"354983dcdf70c800bf2573d10b54a7391b1dc167":["7116474e2e390259937401cf928323e0cbc75e60"],"fd44bec977a26a118d9e809e2de6f7edb5ca0f39":["0d1071f88e3697a2eb3ed682c527f5c35859bad0"],"d264f386d864b5751209060e8886ca9845f70469":["354983dcdf70c800bf2573d10b54a7391b1dc167"],"f4abec28b874149a7223e32cc7a01704c27790de":["fd44bec977a26a118d9e809e2de6f7edb5ca0f39"],"d0d579490a72f2e6297eaa648940611234c57cf1":["a9a24bae1e63c3bb5ff2fb47b0119240d840ee7c"],"5268b3b46fa91a88e4d8fdd00f16f42577e6da11":["37a0f60745e53927c4c876cfe5b5a58170f0646c","d264f386d864b5751209060e8886ca9845f70469"],"a9a24bae1e63c3bb5ff2fb47b0119240d840ee7c":["2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5268b3b46fa91a88e4d8fdd00f16f42577e6da11"],"0d1071f88e3697a2eb3ed682c527f5c35859bad0":["b0dda625d0f49ef568959e45adabe6d6faa39412"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["37a0f60745e53927c4c876cfe5b5a58170f0646c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}