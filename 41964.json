{"path":"solr/core/src/test/org/apache/solr/schema/TestUseDocValuesAsStored#testOnEmptyIndex().mjava","commits":[{"id":"bdac0dff04219451c7511d62225080a93a0181ea","date":1451212020,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/schema/TestUseDocValuesAsStored#testOnEmptyIndex().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testOnEmptyIndex() throws Exception {\n    assertU(delQ(\"*:*\"));\n    assertU(commit());\n    assertJQ(req(\"q\", \"*:*\"), \"/response/numFound==0\");\n    assertJQ(req(\"q\", \"*:*\", \"fl\", \"*\"), \"/response/numFound==0\");\n    assertJQ(req(\"q\", \"*:*\", \"fl\", \"test_nonstored_dv_str\"), \"/response/numFound==0\");\n    assertJQ(req(\"q\", \"*:*\", \"fl\", \"*,test_nonstored_dv_str\"), \"/response/numFound==0\");\n\n    assertU(adoc(\"id\", \"xyz\", \"test_nonstored_dv_str\", \"xyz\"));\n    assertJQ(req(\"q\", \"*:*\"), \"/response/numFound==0\");\n    assertJQ(req(\"q\", \"*:*\", \"fl\", \"*\"), \"/response/numFound==0\");\n    assertJQ(req(\"q\", \"*:*\", \"fl\", \"test_nonstored_dv_str\"), \"/response/numFound==0\");\n    assertJQ(req(\"q\", \"*:*\", \"fl\", \"*,test_nonstored_dv_str\"), \"/response/numFound==0\");\n\n    assertU(commit());\n    assertJQ(req(\"q\", \"*:*\"), \"/response/numFound==1\",\n        \"/response/docs==[\" +\n            \"{'id':'xyz','test_nonstored_dv_str':'xyz'}\"\n            + \"]\");\n    assertJQ(req(\"q\", \"*:*\", \"fl\", \"*\"), \"/response/numFound==1\",\n        \"/response/docs==[\" +\n            \"{'id':'xyz','test_nonstored_dv_str':'xyz'}\"\n            + \"]\");\n    assertJQ(req(\"q\", \"*:*\", \"fl\", \"test_nonstored_dv_str\"), \"/response/numFound==1\",\n        \"/response/docs==[\" +\n            \"{'test_nonstored_dv_str':'xyz'}\"\n            + \"]\");\n    assertJQ(req(\"q\", \"*:*\", \"fl\", \"*,test_nonstored_dv_str\"), \"/response/numFound==1\",\n        \"/response/docs==[\" +\n            \"{'id':'xyz','test_nonstored_dv_str':'xyz'}\"\n            + \"]\");\n\n    assertU(adoc(\"id\", \"xyz\"));\n    assertU(commit());\n    assertJQ(req(\"q\", \"*:*\"), \"/response/numFound==1\",\n        \"/response/docs==[\" +\n            \"{'id':'xyz'}\"\n            + \"]\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"395447e07e761f35219365cc947df55dc22b38c8","date":1457552444,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/schema/TestUseDocValuesAsStored#testOnEmptyIndex().mjava","pathOld":"solr/core/src/test/org/apache/solr/schema/TestUseDocValuesAsStored#testOnEmptyIndex().mjava","sourceNew":"  @Test\n  public void testOnEmptyIndex() throws Exception {\n    clearIndex();\n    assertU(commit());\n    assertJQ(req(\"q\", \"*:*\"), \"/response/numFound==0\");\n    assertJQ(req(\"q\", \"*:*\", \"fl\", \"*\"), \"/response/numFound==0\");\n    assertJQ(req(\"q\", \"*:*\", \"fl\", \"test_nonstored_dv_str\"), \"/response/numFound==0\");\n    assertJQ(req(\"q\", \"*:*\", \"fl\", \"*,test_nonstored_dv_str\"), \"/response/numFound==0\");\n\n    assertU(adoc(\"id\", \"xyz\", \"test_nonstored_dv_str\", \"xyz\"));\n    assertJQ(req(\"q\", \"*:*\"), \"/response/numFound==0\");\n    assertJQ(req(\"q\", \"*:*\", \"fl\", \"*\"), \"/response/numFound==0\");\n    assertJQ(req(\"q\", \"*:*\", \"fl\", \"test_nonstored_dv_str\"), \"/response/numFound==0\");\n    assertJQ(req(\"q\", \"*:*\", \"fl\", \"*,test_nonstored_dv_str\"), \"/response/numFound==0\");\n\n    assertU(commit());\n    assertJQ(req(\"q\", \"*:*\"), \"/response/numFound==1\",\n        \"/response/docs==[\" +\n            \"{'id':'xyz','test_nonstored_dv_str':'xyz'}\"\n            + \"]\");\n    assertJQ(req(\"q\", \"*:*\", \"fl\", \"*\"), \"/response/numFound==1\",\n        \"/response/docs==[\" +\n            \"{'id':'xyz','test_nonstored_dv_str':'xyz'}\"\n            + \"]\");\n    assertJQ(req(\"q\", \"*:*\", \"fl\", \"test_nonstored_dv_str\"), \"/response/numFound==1\",\n        \"/response/docs==[\" +\n            \"{'test_nonstored_dv_str':'xyz'}\"\n            + \"]\");\n    assertJQ(req(\"q\", \"*:*\", \"fl\", \"*,test_nonstored_dv_str\"), \"/response/numFound==1\",\n        \"/response/docs==[\" +\n            \"{'id':'xyz','test_nonstored_dv_str':'xyz'}\"\n            + \"]\");\n\n    assertU(adoc(\"id\", \"xyz\"));\n    assertU(commit());\n    assertJQ(req(\"q\", \"*:*\"), \"/response/numFound==1\",\n        \"/response/docs==[\" +\n            \"{'id':'xyz'}\"\n            + \"]\");\n  }\n\n","sourceOld":"  @Test\n  public void testOnEmptyIndex() throws Exception {\n    assertU(delQ(\"*:*\"));\n    assertU(commit());\n    assertJQ(req(\"q\", \"*:*\"), \"/response/numFound==0\");\n    assertJQ(req(\"q\", \"*:*\", \"fl\", \"*\"), \"/response/numFound==0\");\n    assertJQ(req(\"q\", \"*:*\", \"fl\", \"test_nonstored_dv_str\"), \"/response/numFound==0\");\n    assertJQ(req(\"q\", \"*:*\", \"fl\", \"*,test_nonstored_dv_str\"), \"/response/numFound==0\");\n\n    assertU(adoc(\"id\", \"xyz\", \"test_nonstored_dv_str\", \"xyz\"));\n    assertJQ(req(\"q\", \"*:*\"), \"/response/numFound==0\");\n    assertJQ(req(\"q\", \"*:*\", \"fl\", \"*\"), \"/response/numFound==0\");\n    assertJQ(req(\"q\", \"*:*\", \"fl\", \"test_nonstored_dv_str\"), \"/response/numFound==0\");\n    assertJQ(req(\"q\", \"*:*\", \"fl\", \"*,test_nonstored_dv_str\"), \"/response/numFound==0\");\n\n    assertU(commit());\n    assertJQ(req(\"q\", \"*:*\"), \"/response/numFound==1\",\n        \"/response/docs==[\" +\n            \"{'id':'xyz','test_nonstored_dv_str':'xyz'}\"\n            + \"]\");\n    assertJQ(req(\"q\", \"*:*\", \"fl\", \"*\"), \"/response/numFound==1\",\n        \"/response/docs==[\" +\n            \"{'id':'xyz','test_nonstored_dv_str':'xyz'}\"\n            + \"]\");\n    assertJQ(req(\"q\", \"*:*\", \"fl\", \"test_nonstored_dv_str\"), \"/response/numFound==1\",\n        \"/response/docs==[\" +\n            \"{'test_nonstored_dv_str':'xyz'}\"\n            + \"]\");\n    assertJQ(req(\"q\", \"*:*\", \"fl\", \"*,test_nonstored_dv_str\"), \"/response/numFound==1\",\n        \"/response/docs==[\" +\n            \"{'id':'xyz','test_nonstored_dv_str':'xyz'}\"\n            + \"]\");\n\n    assertU(adoc(\"id\", \"xyz\"));\n    assertU(commit());\n    assertJQ(req(\"q\", \"*:*\"), \"/response/numFound==1\",\n        \"/response/docs==[\" +\n            \"{'id':'xyz'}\"\n            + \"]\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bdac0dff04219451c7511d62225080a93a0181ea":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"395447e07e761f35219365cc947df55dc22b38c8":["bdac0dff04219451c7511d62225080a93a0181ea"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["395447e07e761f35219365cc947df55dc22b38c8"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["bdac0dff04219451c7511d62225080a93a0181ea"],"bdac0dff04219451c7511d62225080a93a0181ea":["395447e07e761f35219365cc947df55dc22b38c8"],"395447e07e761f35219365cc947df55dc22b38c8":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}