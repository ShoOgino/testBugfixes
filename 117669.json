{"path":"lucene/src/test/org/apache/lucene/index/values/TestIndexValues#writerConfig(boolean).mjava","commits":[{"id":"01f60198ece724a6e96cd0b45f289cf42ff83d4f","date":1286864103,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/values/TestIndexValues#writerConfig(boolean).mjava","pathOld":"/dev/null","sourceNew":"  private IndexWriterConfig writerConfig(boolean useCompoundFile) {\n    final IndexWriterConfig cfg = newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer());\n    MergePolicy mergePolicy = cfg.getMergePolicy();\n    if(mergePolicy instanceof LogMergePolicy) {\n      ((LogMergePolicy)mergePolicy).setUseCompoundFile(useCompoundFile);\n    } else if(useCompoundFile) {\n      LogMergePolicy policy = new LogDocMergePolicy();\n      policy.setUseCompoundFile(useCompoundFile);\n      cfg.setMergePolicy(policy);\n    }\n    return cfg;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0e28c49f1fb6215a550fdadcf3805aa629b63ec0","date":1288081775,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/values/TestIndexValues#writerConfig(boolean).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/values/TestIndexValues#writerConfig(boolean).mjava","sourceNew":"  private IndexWriterConfig writerConfig(boolean useCompoundFile) {\n    final IndexWriterConfig cfg = newIndexWriterConfig(TEST_VERSION_CURRENT,\n        new MockAnalyzer());\n    MergePolicy mergePolicy = cfg.getMergePolicy();\n    if (mergePolicy instanceof LogMergePolicy) {\n      ((LogMergePolicy) mergePolicy).setUseCompoundFile(useCompoundFile);\n    } else if (useCompoundFile) {\n      LogMergePolicy policy = new LogDocMergePolicy();\n      policy.setUseCompoundFile(useCompoundFile);\n      cfg.setMergePolicy(policy);\n    }\n    return cfg;\n  }\n\n","sourceOld":"  private IndexWriterConfig writerConfig(boolean useCompoundFile) {\n    final IndexWriterConfig cfg = newIndexWriterConfig(\n        TEST_VERSION_CURRENT, new MockAnalyzer());\n    MergePolicy mergePolicy = cfg.getMergePolicy();\n    if(mergePolicy instanceof LogMergePolicy) {\n      ((LogMergePolicy)mergePolicy).setUseCompoundFile(useCompoundFile);\n    } else if(useCompoundFile) {\n      LogMergePolicy policy = new LogDocMergePolicy();\n      policy.setUseCompoundFile(useCompoundFile);\n      cfg.setMergePolicy(policy);\n    }\n    return cfg;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"85a883878c0af761245ab048babc63d099f835f3","date":1289553330,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/values/TestIndexValues#writerConfig(boolean).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/values/TestIndexValues#writerConfig(boolean).mjava","sourceNew":"  private IndexWriterConfig writerConfig(boolean useCompoundFile) {\n    final IndexWriterConfig cfg = newIndexWriterConfig(TEST_VERSION_CURRENT,\n        new MockAnalyzer());\n    MergePolicy mergePolicy = cfg.getMergePolicy();\n    if (mergePolicy instanceof LogMergePolicy) {\n      ((LogMergePolicy) mergePolicy).setUseCompoundFile(useCompoundFile);\n    } else if (useCompoundFile) {\n      LogMergePolicy policy = new LogDocMergePolicy();\n      policy.setUseCompoundFile(useCompoundFile);\n      cfg.setMergePolicy(policy);\n    }\n    cfg.setCodecProvider(provider);\n    return cfg;\n  }\n\n","sourceOld":"  private IndexWriterConfig writerConfig(boolean useCompoundFile) {\n    final IndexWriterConfig cfg = newIndexWriterConfig(TEST_VERSION_CURRENT,\n        new MockAnalyzer());\n    MergePolicy mergePolicy = cfg.getMergePolicy();\n    if (mergePolicy instanceof LogMergePolicy) {\n      ((LogMergePolicy) mergePolicy).setUseCompoundFile(useCompoundFile);\n    } else if (useCompoundFile) {\n      LogMergePolicy policy = new LogDocMergePolicy();\n      policy.setUseCompoundFile(useCompoundFile);\n      cfg.setMergePolicy(policy);\n    }\n    return cfg;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b5c559c875836474bafae7243263d93b1b1965db","date":1289581659,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/values/TestDocValuesIndexing#writerConfig(boolean).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/values/TestIndexValues#writerConfig(boolean).mjava","sourceNew":"  private IndexWriterConfig writerConfig(boolean useCompoundFile) {\n    final IndexWriterConfig cfg = newIndexWriterConfig(TEST_VERSION_CURRENT,\n        new MockAnalyzer());\n    MergePolicy mergePolicy = cfg.getMergePolicy();\n    if (mergePolicy instanceof LogMergePolicy) {\n      ((LogMergePolicy) mergePolicy).setUseCompoundFile(useCompoundFile);\n    } else if (useCompoundFile) {\n      LogMergePolicy policy = new LogDocMergePolicy();\n      policy.setUseCompoundFile(useCompoundFile);\n      cfg.setMergePolicy(policy);\n    }\n    cfg.setCodecProvider(provider);\n    return cfg;\n  }\n\n","sourceOld":"  private IndexWriterConfig writerConfig(boolean useCompoundFile) {\n    final IndexWriterConfig cfg = newIndexWriterConfig(TEST_VERSION_CURRENT,\n        new MockAnalyzer());\n    MergePolicy mergePolicy = cfg.getMergePolicy();\n    if (mergePolicy instanceof LogMergePolicy) {\n      ((LogMergePolicy) mergePolicy).setUseCompoundFile(useCompoundFile);\n    } else if (useCompoundFile) {\n      LogMergePolicy policy = new LogDocMergePolicy();\n      policy.setUseCompoundFile(useCompoundFile);\n      cfg.setMergePolicy(policy);\n    }\n    cfg.setCodecProvider(provider);\n    return cfg;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"85a883878c0af761245ab048babc63d099f835f3":["0e28c49f1fb6215a550fdadcf3805aa629b63ec0","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"0e28c49f1fb6215a550fdadcf3805aa629b63ec0":["01f60198ece724a6e96cd0b45f289cf42ff83d4f"],"01f60198ece724a6e96cd0b45f289cf42ff83d4f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b5c559c875836474bafae7243263d93b1b1965db":["85a883878c0af761245ab048babc63d099f835f3"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["85a883878c0af761245ab048babc63d099f835f3","01f60198ece724a6e96cd0b45f289cf42ff83d4f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"85a883878c0af761245ab048babc63d099f835f3":["b5c559c875836474bafae7243263d93b1b1965db"],"0e28c49f1fb6215a550fdadcf3805aa629b63ec0":["85a883878c0af761245ab048babc63d099f835f3"],"01f60198ece724a6e96cd0b45f289cf42ff83d4f":["0e28c49f1fb6215a550fdadcf3805aa629b63ec0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"b5c559c875836474bafae7243263d93b1b1965db":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","b5c559c875836474bafae7243263d93b1b1965db"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}