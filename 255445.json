{"path":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestLimitTokenPositionFilterFactory#testMissingParam().mjava","commits":[{"id":"fdd61b10b980a6d0b8a8d63baf7e8f5e19e8437a","date":1363558184,"type":0,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestLimitTokenPositionFilterFactory#testMissingParam().mjava","pathOld":"/dev/null","sourceNew":"  public void testMissingParam() {\n    LimitTokenPositionFilterFactory factory = new LimitTokenPositionFilterFactory();\n    Map<String, String> args = new HashMap<String, String>();\n    IllegalArgumentException iae = null;\n    try {\n      factory.init(args);\n    } catch (IllegalArgumentException e) {\n      assertTrue(\"exception doesn't mention param: \" + e.getMessage(),\n          0 < e.getMessage().indexOf(LimitTokenPositionFilterFactory.MAX_TOKEN_POSITION_KEY));\n      iae = e;\n    }\n    assertNotNull(\"no exception thrown\", iae);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["05fe562aa248790944d43cdd478f512572835ba0"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"57da959ec15bb701bd1d1bf3c613b69009ff4bfd","date":1364833800,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestLimitTokenPositionFilterFactory#testMissingParam().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestLimitTokenPositionFilterFactory#testMissingParam().mjava","sourceNew":"  public void testMissingParam() throws Exception {\n    try {\n      tokenFilterFactory(\"LimitTokenPosition\");\n      fail();\n    } catch (IllegalArgumentException e) {\n      assertTrue(\"exception doesn't mention param: \" + e.getMessage(),\n          0 < e.getMessage().indexOf(LimitTokenPositionFilterFactory.MAX_TOKEN_POSITION_KEY));\n    }\n  }\n\n","sourceOld":"  public void testMissingParam() {\n    LimitTokenPositionFilterFactory factory = new LimitTokenPositionFilterFactory();\n    Map<String, String> args = new HashMap<String, String>();\n    IllegalArgumentException iae = null;\n    try {\n      factory.init(args);\n    } catch (IllegalArgumentException e) {\n      assertTrue(\"exception doesn't mention param: \" + e.getMessage(),\n          0 < e.getMessage().indexOf(LimitTokenPositionFilterFactory.MAX_TOKEN_POSITION_KEY));\n      iae = e;\n    }\n    assertNotNull(\"no exception thrown\", iae);\n  }\n\n","bugFix":null,"bugIntro":["05fe562aa248790944d43cdd478f512572835ba0"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"05fe562aa248790944d43cdd478f512572835ba0","date":1455901667,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestLimitTokenPositionFilterFactory#testMissingParam().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestLimitTokenPositionFilterFactory#testMissingParam().mjava","sourceNew":"  public void testMissingParam() throws Exception {\n    IllegalArgumentException expected = expectThrows(IllegalArgumentException.class, () -> {\n      tokenFilterFactory(\"LimitTokenPosition\");\n    });\n    assertTrue(\"exception doesn't mention param: \" + expected.getMessage(),\n        0 < expected.getMessage().indexOf(LimitTokenPositionFilterFactory.MAX_TOKEN_POSITION_KEY));\n  }\n\n","sourceOld":"  public void testMissingParam() throws Exception {\n    try {\n      tokenFilterFactory(\"LimitTokenPosition\");\n      fail();\n    } catch (IllegalArgumentException e) {\n      assertTrue(\"exception doesn't mention param: \" + e.getMessage(),\n          0 < e.getMessage().indexOf(LimitTokenPositionFilterFactory.MAX_TOKEN_POSITION_KEY));\n    }\n  }\n\n","bugFix":["fdd61b10b980a6d0b8a8d63baf7e8f5e19e8437a","57da959ec15bb701bd1d1bf3c613b69009ff4bfd"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"fdd61b10b980a6d0b8a8d63baf7e8f5e19e8437a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"05fe562aa248790944d43cdd478f512572835ba0":["57da959ec15bb701bd1d1bf3c613b69009ff4bfd"],"57da959ec15bb701bd1d1bf3c613b69009ff4bfd":["fdd61b10b980a6d0b8a8d63baf7e8f5e19e8437a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["05fe562aa248790944d43cdd478f512572835ba0"]},"commit2Childs":{"fdd61b10b980a6d0b8a8d63baf7e8f5e19e8437a":["57da959ec15bb701bd1d1bf3c613b69009ff4bfd"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["fdd61b10b980a6d0b8a8d63baf7e8f5e19e8437a"],"05fe562aa248790944d43cdd478f512572835ba0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"57da959ec15bb701bd1d1bf3c613b69009ff4bfd":["05fe562aa248790944d43cdd478f512572835ba0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}