{"path":"lucene/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/SearchWithSortTask#getType(String).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/SearchWithSortTask#getType(String).mjava","pathOld":"contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/SearchWithSortTask#getType(String).mjava","sourceNew":"  private int getType(String typeString) {\n    int type;\n    if (typeString.equals(\"float\")) {\n      type = SortField.FLOAT;\n    } else if (typeString.equals(\"double\")) {\n      type = SortField.DOUBLE;\n    } else if (typeString.equals(\"byte\")) {\n      type = SortField.BYTE;\n    } else if (typeString.equals(\"short\")) {\n      type = SortField.SHORT;\n    } else if (typeString.equals(\"int\")) {\n      type = SortField.INT;\n    } else if (typeString.equals(\"long\")) {\n      type = SortField.LONG;\n    } else if (typeString.equals(\"string\")) {\n      type = SortField.STRING;\n    } else if (typeString.equals(\"string_val\")) {\n      type = SortField.STRING_VAL;\n    } else {\n      throw new RuntimeException(\"Unrecognized sort field type \" + typeString);\n    }\n    return type;\n  }\n\n","sourceOld":"  private int getType(String typeString) {\n    int type;\n    if (typeString.equals(\"float\")) {\n      type = SortField.FLOAT;\n    } else if (typeString.equals(\"double\")) {\n      type = SortField.DOUBLE;\n    } else if (typeString.equals(\"byte\")) {\n      type = SortField.BYTE;\n    } else if (typeString.equals(\"short\")) {\n      type = SortField.SHORT;\n    } else if (typeString.equals(\"int\")) {\n      type = SortField.INT;\n    } else if (typeString.equals(\"long\")) {\n      type = SortField.LONG;\n    } else if (typeString.equals(\"string\")) {\n      type = SortField.STRING;\n    } else if (typeString.equals(\"string_val\")) {\n      type = SortField.STRING_VAL;\n    } else {\n      throw new RuntimeException(\"Unrecognized sort field type \" + typeString);\n    }\n    return type;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"01f60198ece724a6e96cd0b45f289cf42ff83d4f","date":1286864103,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/SearchWithSortTask#getSortField(String,String).mjava","pathOld":"lucene/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/SearchWithSortTask#getType(String).mjava","sourceNew":"  private SortField getSortField(String fieldName, String typeString) {\n    boolean useIndexValues = false;\n    int type = -1;\n    if (typeString.equals(\"intvalues\")) {\n      useIndexValues = true;\n      type = SortField.INT;\n    } else if (typeString.equals(\"floatvalues\")) {\n      useIndexValues = true;\n      type = SortField.FLOAT;\n    } else if (typeString.equals(\"stringvalues\")) {\n      useIndexValues = true;\n      type = SortField.STRING;\n    } else if (typeString.equals(\"bytesvalues\")) {\n      useIndexValues = true;\n      type = SortField.BYTES;\n    } else if (typeString.equals(\"float\")) {\n      type = SortField.FLOAT;\n    } else if (typeString.equals(\"double\")) {\n      type = SortField.DOUBLE;\n    } else if (typeString.equals(\"byte\")) {\n      type = SortField.BYTE;\n    } else if (typeString.equals(\"short\")) {\n      type = SortField.SHORT;\n    } else if (typeString.equals(\"int\")) {\n      type = SortField.INT;\n    } else if (typeString.equals(\"long\")) {\n      type = SortField.LONG;\n    } else if (typeString.equals(\"string\")) {\n      type = SortField.STRING;\n    } else if (typeString.equals(\"string_val\")) {\n      type = SortField.STRING_VAL;\n    } else {\n      throw new RuntimeException(\"Unrecognized sort field type \" + typeString);\n    }\n\n    SortField f = new SortField(fieldName, type);\n    f.setUseIndexValues(useIndexValues);\n    return f;\n  }\n\n","sourceOld":"  private int getType(String typeString) {\n    int type;\n    if (typeString.equals(\"float\")) {\n      type = SortField.FLOAT;\n    } else if (typeString.equals(\"double\")) {\n      type = SortField.DOUBLE;\n    } else if (typeString.equals(\"byte\")) {\n      type = SortField.BYTE;\n    } else if (typeString.equals(\"short\")) {\n      type = SortField.SHORT;\n    } else if (typeString.equals(\"int\")) {\n      type = SortField.INT;\n    } else if (typeString.equals(\"long\")) {\n      type = SortField.LONG;\n    } else if (typeString.equals(\"string\")) {\n      type = SortField.STRING;\n    } else if (typeString.equals(\"string_val\")) {\n      type = SortField.STRING_VAL;\n    } else {\n      throw new RuntimeException(\"Unrecognized sort field type \" + typeString);\n    }\n    return type;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ecc11368dc265bfdad90214f8bf5da99016ab1e2","date":1294144090,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/SearchWithSortTask#getType(String).mjava","pathOld":"lucene/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/SearchWithSortTask#getType(String).mjava","sourceNew":"  private int getType(String typeString) {\n    int type;\n    if (typeString.equals(\"float\")) {\n      type = SortField.FLOAT;\n    } else if (typeString.equals(\"double\")) {\n      type = SortField.DOUBLE;\n    } else if (typeString.equals(\"byte\")) {\n      type = SortField.BYTE;\n    } else if (typeString.equals(\"short\")) {\n      type = SortField.SHORT;\n    } else if (typeString.equals(\"int\")) {\n      type = SortField.INT;\n    } else if (typeString.equals(\"long\")) {\n      type = SortField.LONG;\n    } else if (typeString.equals(\"string\")) {\n      type = SortField.STRING;\n    } else if (typeString.equals(\"string_val\")) {\n      type = SortField.STRING_VAL;\n    } else {\n      throw new RuntimeException(\"Unrecognized sort field type \" + typeString);\n    }\n    return type;\n  }\n\n","sourceOld":"  private int getType(String typeString) {\n    int type;\n    if (typeString.equals(\"float\")) {\n      type = SortField.FLOAT;\n    } else if (typeString.equals(\"double\")) {\n      type = SortField.DOUBLE;\n    } else if (typeString.equals(\"byte\")) {\n      type = SortField.BYTE;\n    } else if (typeString.equals(\"short\")) {\n      type = SortField.SHORT;\n    } else if (typeString.equals(\"int\")) {\n      type = SortField.INT;\n    } else if (typeString.equals(\"long\")) {\n      type = SortField.LONG;\n    } else if (typeString.equals(\"string\")) {\n      type = SortField.STRING;\n    } else if (typeString.equals(\"string_val\")) {\n      type = SortField.STRING_VAL;\n    } else {\n      throw new RuntimeException(\"Unrecognized sort field type \" + typeString);\n    }\n    return type;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"868da859b43505d9d2a023bfeae6dd0c795f5295","date":1294948401,"type":5,"author":"Michael Busch","isMerge":true,"pathNew":"modules/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/SearchWithSortTask#getType(String).mjava","pathOld":"lucene/contrib/benchmark/src/java/org/apache/lucene/benchmark/byTask/tasks/SearchWithSortTask#getType(String).mjava","sourceNew":"  private int getType(String typeString) {\n    int type;\n    if (typeString.equals(\"float\")) {\n      type = SortField.FLOAT;\n    } else if (typeString.equals(\"double\")) {\n      type = SortField.DOUBLE;\n    } else if (typeString.equals(\"byte\")) {\n      type = SortField.BYTE;\n    } else if (typeString.equals(\"short\")) {\n      type = SortField.SHORT;\n    } else if (typeString.equals(\"int\")) {\n      type = SortField.INT;\n    } else if (typeString.equals(\"long\")) {\n      type = SortField.LONG;\n    } else if (typeString.equals(\"string\")) {\n      type = SortField.STRING;\n    } else if (typeString.equals(\"string_val\")) {\n      type = SortField.STRING_VAL;\n    } else {\n      throw new RuntimeException(\"Unrecognized sort field type \" + typeString);\n    }\n    return type;\n  }\n\n","sourceOld":"  private int getType(String typeString) {\n    int type;\n    if (typeString.equals(\"float\")) {\n      type = SortField.FLOAT;\n    } else if (typeString.equals(\"double\")) {\n      type = SortField.DOUBLE;\n    } else if (typeString.equals(\"byte\")) {\n      type = SortField.BYTE;\n    } else if (typeString.equals(\"short\")) {\n      type = SortField.SHORT;\n    } else if (typeString.equals(\"int\")) {\n      type = SortField.INT;\n    } else if (typeString.equals(\"long\")) {\n      type = SortField.LONG;\n    } else if (typeString.equals(\"string\")) {\n      type = SortField.STRING;\n    } else if (typeString.equals(\"string_val\")) {\n      type = SortField.STRING_VAL;\n    } else {\n      throw new RuntimeException(\"Unrecognized sort field type \" + typeString);\n    }\n    return type;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ecc11368dc265bfdad90214f8bf5da99016ab1e2":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"868da859b43505d9d2a023bfeae6dd0c795f5295":["9454a6510e2db155fb01faa5c049b06ece95fab9","ecc11368dc265bfdad90214f8bf5da99016ab1e2"],"01f60198ece724a6e96cd0b45f289cf42ff83d4f":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ecc11368dc265bfdad90214f8bf5da99016ab1e2"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"ecc11368dc265bfdad90214f8bf5da99016ab1e2":["868da859b43505d9d2a023bfeae6dd0c795f5295","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"868da859b43505d9d2a023bfeae6dd0c795f5295":[],"01f60198ece724a6e96cd0b45f289cf42ff83d4f":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["ecc11368dc265bfdad90214f8bf5da99016ab1e2","868da859b43505d9d2a023bfeae6dd0c795f5295","01f60198ece724a6e96cd0b45f289cf42ff83d4f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["868da859b43505d9d2a023bfeae6dd0c795f5295","01f60198ece724a6e96cd0b45f289cf42ff83d4f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}