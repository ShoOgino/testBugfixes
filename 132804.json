{"path":"solr/core/src/test/org/apache/solr/security/BasicAuthOnSingleNodeTest#setupCluster().mjava","commits":[{"id":"78f24ee64555384c236dabd3d1fe19c434fee3a1","date":1559661169,"type":0,"author":"Cao Manh Dat","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/security/BasicAuthOnSingleNodeTest#setupCluster().mjava","pathOld":"/dev/null","sourceNew":"  @Before\n  public void setupCluster() throws Exception {\n    configureCluster(1)\n        .addConfig(\"conf\", configset(\"cloud-minimal\"))\n        .configure();\n    CollectionAdminRequest.createCollection(COLLECTION, \"conf\", 4, 1)\n        .setMaxShardsPerNode(100)\n        .process(cluster.getSolrClient());\n    cluster.waitForActiveCollection(COLLECTION, 4, 4);\n\n    zkClient().setData(\"/security.json\", STD_CONF.getBytes(UTF_8), true);\n\n    JettySolrRunner jetty = cluster.getJettySolrRunner(0);\n    jetty.stop();\n    cluster.waitForJettyToStop(jetty);\n    jetty.start();\n    cluster.waitForAllNodes(30);\n    cluster.waitForActiveCollection(COLLECTION, 4, 4);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1747a7f5fca08ea77329319431be445d363ba102","date":1565643834,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/security/BasicAuthOnSingleNodeTest#setupCluster().mjava","pathOld":"solr/core/src/test/org/apache/solr/security/BasicAuthOnSingleNodeTest#setupCluster().mjava","sourceNew":"  @Before\n  public void setupCluster() throws Exception {\n    configureCluster(1)\n        .addConfig(\"conf\", configset(\"cloud-minimal\"))\n        .withSecurityJson(STD_CONF)\n        .configure();\n    CollectionAdminRequest.createCollection(COLLECTION, \"conf\", 4, 1)\n        .setMaxShardsPerNode(100)\n        .setBasicAuthCredentials(\"solr\", \"solr\")\n        .process(cluster.getSolrClient());\n    cluster.waitForActiveCollection(COLLECTION, 4, 4);\n\n    JettySolrRunner jetty = cluster.getJettySolrRunner(0);\n    jetty.stop();\n    cluster.waitForJettyToStop(jetty);\n    jetty.start();\n    cluster.waitForAllNodes(30);\n    cluster.waitForActiveCollection(COLLECTION, 4, 4);\n  }\n\n","sourceOld":"  @Before\n  public void setupCluster() throws Exception {\n    configureCluster(1)\n        .addConfig(\"conf\", configset(\"cloud-minimal\"))\n        .configure();\n    CollectionAdminRequest.createCollection(COLLECTION, \"conf\", 4, 1)\n        .setMaxShardsPerNode(100)\n        .process(cluster.getSolrClient());\n    cluster.waitForActiveCollection(COLLECTION, 4, 4);\n\n    zkClient().setData(\"/security.json\", STD_CONF.getBytes(UTF_8), true);\n\n    JettySolrRunner jetty = cluster.getJettySolrRunner(0);\n    jetty.stop();\n    cluster.waitForJettyToStop(jetty);\n    jetty.start();\n    cluster.waitForAllNodes(30);\n    cluster.waitForActiveCollection(COLLECTION, 4, 4);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"980e438009cf855431bca6bfd5638a83b0d0ec5b","date":1591571516,"type":3,"author":"Jan HÃ¸ydahl","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/security/BasicAuthOnSingleNodeTest#setupCluster().mjava","pathOld":"solr/core/src/test/org/apache/solr/security/BasicAuthOnSingleNodeTest#setupCluster().mjava","sourceNew":"  @Before\n  public void setupCluster() throws Exception {\n    configureCluster(1)\n        .addConfig(\"conf\", configset(\"cloud-minimal\"))\n        .withSecurityJson(STD_CONF)\n        .configure();\n    CollectionAdminRequest.createCollection(COLLECTION, \"conf\", 4, 1)\n        .setMaxShardsPerNode(100)\n        .setBasicAuthCredentials(\"solr\", \"solr\")\n        .process(cluster.getSolrClient());\n    cluster.waitForActiveCollection(COLLECTION, 4, 4);\n  }\n\n","sourceOld":"  @Before\n  public void setupCluster() throws Exception {\n    configureCluster(1)\n        .addConfig(\"conf\", configset(\"cloud-minimal\"))\n        .withSecurityJson(STD_CONF)\n        .configure();\n    CollectionAdminRequest.createCollection(COLLECTION, \"conf\", 4, 1)\n        .setMaxShardsPerNode(100)\n        .setBasicAuthCredentials(\"solr\", \"solr\")\n        .process(cluster.getSolrClient());\n    cluster.waitForActiveCollection(COLLECTION, 4, 4);\n\n    JettySolrRunner jetty = cluster.getJettySolrRunner(0);\n    jetty.stop();\n    cluster.waitForJettyToStop(jetty);\n    jetty.start();\n    cluster.waitForAllNodes(30);\n    cluster.waitForActiveCollection(COLLECTION, 4, 4);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e46a76bb135597b8bf35930cfdb3702bdd1cbe6e","date":1594223844,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/security/BasicAuthOnSingleNodeTest#setupCluster().mjava","pathOld":"solr/core/src/test/org/apache/solr/security/BasicAuthOnSingleNodeTest#setupCluster().mjava","sourceNew":"  @Before\n  public void setupCluster() throws Exception {\n    configureCluster(1)\n        .addConfig(\"conf\", configset(\"cloud-minimal\"))\n        .withSecurityJson(STD_CONF)\n        .configure();\n    CollectionAdminRequest.createCollection(COLLECTION, \"conf\", 4, 1)\n        .setBasicAuthCredentials(\"solr\", \"solr\")\n        .process(cluster.getSolrClient());\n    cluster.waitForActiveCollection(COLLECTION, 4, 4);\n  }\n\n","sourceOld":"  @Before\n  public void setupCluster() throws Exception {\n    configureCluster(1)\n        .addConfig(\"conf\", configset(\"cloud-minimal\"))\n        .withSecurityJson(STD_CONF)\n        .configure();\n    CollectionAdminRequest.createCollection(COLLECTION, \"conf\", 4, 1)\n        .setMaxShardsPerNode(100)\n        .setBasicAuthCredentials(\"solr\", \"solr\")\n        .process(cluster.getSolrClient());\n    cluster.waitForActiveCollection(COLLECTION, 4, 4);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"980e438009cf855431bca6bfd5638a83b0d0ec5b":["1747a7f5fca08ea77329319431be445d363ba102"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1747a7f5fca08ea77329319431be445d363ba102":["78f24ee64555384c236dabd3d1fe19c434fee3a1"],"78f24ee64555384c236dabd3d1fe19c434fee3a1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e46a76bb135597b8bf35930cfdb3702bdd1cbe6e":["980e438009cf855431bca6bfd5638a83b0d0ec5b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e46a76bb135597b8bf35930cfdb3702bdd1cbe6e"]},"commit2Childs":{"980e438009cf855431bca6bfd5638a83b0d0ec5b":["e46a76bb135597b8bf35930cfdb3702bdd1cbe6e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["78f24ee64555384c236dabd3d1fe19c434fee3a1"],"1747a7f5fca08ea77329319431be445d363ba102":["980e438009cf855431bca6bfd5638a83b0d0ec5b"],"78f24ee64555384c236dabd3d1fe19c434fee3a1":["1747a7f5fca08ea77329319431be445d363ba102"],"e46a76bb135597b8bf35930cfdb3702bdd1cbe6e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}