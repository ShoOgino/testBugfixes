{"path":"lucene/suggest/src/test/org/apache/lucene/search/suggest/document/TestSuggestField#testSuggestOnAllFilteredDocuments().mjava","commits":[{"id":"8c33f6677a2078739058f81eca1df69d12cd62b0","date":1432799589,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/suggest/document/TestSuggestField#testSuggestOnAllFilteredDocuments().mjava","pathOld":"lucene/suggest/src/test/org/apache/lucene/search/suggest/document/SuggestFieldTest#testSuggestOnAllFilteredDocuments().mjava","sourceNew":"  @Test\n  public void testSuggestOnAllFilteredDocuments() throws Exception {\n    Analyzer analyzer = new MockAnalyzer(random());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, iwcWithSuggestField(analyzer, \"suggest_field\"));\n    int num = Math.min(1000, atLeast(10));\n    Document document = new Document();\n    for (int i = 0; i < num; i++) {\n      document.add(new SuggestField(\"suggest_field\", \"abc_\" + i, i));\n      document.add(newStringField(\"str_fld\", \"deleted\", Field.Store.NO));\n      iw.addDocument(document);\n      document.clear();\n\n      if (usually()) {\n        iw.commit();\n      }\n    }\n\n    Filter filter = new QueryWrapperFilter(new TermsQuery(\"str_fld\", new BytesRef(\"non_existent\")));\n    DirectoryReader reader = iw.getReader();\n    SuggestIndexSearcher indexSearcher = new SuggestIndexSearcher(reader);\n    // no random access required;\n    // calling suggest with filter that does not match any documents should early terminate\n    PrefixCompletionQuery query = new PrefixCompletionQuery(analyzer, new Term(\"suggest_field\", \"abc_\"), filter);\n    TopSuggestDocs suggest = indexSearcher.suggest(query, num);\n    assertThat(suggest.totalHits, equalTo(0));\n    reader.close();\n    iw.close();\n  }\n\n","sourceOld":"  @Test\n  public void testSuggestOnAllFilteredDocuments() throws Exception {\n    Analyzer analyzer = new MockAnalyzer(random());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, iwcWithSuggestField(analyzer, \"suggest_field\"));\n    int num = Math.min(1000, atLeast(10));\n    Document document = new Document();\n    for (int i = 0; i < num; i++) {\n      document.add(newSuggestField(\"suggest_field\", \"abc_\" + i, i));\n      document.add(newStringField(\"str_fld\", \"deleted\", Field.Store.NO));\n      iw.addDocument(document);\n      document.clear();\n\n      if (usually()) {\n        iw.commit();\n      }\n    }\n\n    Filter filter = new QueryWrapperFilter(new TermsQuery(\"str_fld\", new BytesRef(\"non_existent\")));\n    DirectoryReader reader = iw.getReader();\n    SuggestIndexSearcher indexSearcher = new SuggestIndexSearcher(reader, analyzer);\n    // no random access required;\n    // calling suggest with filter that does not match any documents should early terminate\n    TopSuggestDocs suggest = indexSearcher.suggest(\"suggest_field\", \"abc_\", num, filter);\n    assertThat(suggest.totalHits, equalTo(0));\n    reader.close();\n    iw.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e919be7c57e6b5ae11c5beaa2b528f092f7687c4","date":1432802319,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/suggest/document/TestSuggestField#testSuggestOnAllFilteredDocuments().mjava","pathOld":"lucene/suggest/src/test/org/apache/lucene/search/suggest/document/TestSuggestField#testSuggestOnAllFilteredDocuments().mjava","sourceNew":"  @Test\n  public void testSuggestOnAllFilteredDocuments() throws Exception {\n    Analyzer analyzer = new MockAnalyzer(random());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, iwcWithSuggestField(analyzer, \"suggest_field\"));\n    int num = Math.min(1000, atLeast(10));\n    for (int i = 0; i < num; i++) {\n      Document document = new Document();\n      document.add(new SuggestField(\"suggest_field\", \"abc_\" + i, i));\n      document.add(newStringField(\"str_fld\", \"deleted\", Field.Store.NO));\n      iw.addDocument(document);\n\n      if (usually()) {\n        iw.commit();\n      }\n    }\n\n    Filter filter = new QueryWrapperFilter(new TermsQuery(\"str_fld\", new BytesRef(\"non_existent\")));\n    DirectoryReader reader = iw.getReader();\n    SuggestIndexSearcher indexSearcher = new SuggestIndexSearcher(reader);\n    // no random access required;\n    // calling suggest with filter that does not match any documents should early terminate\n    PrefixCompletionQuery query = new PrefixCompletionQuery(analyzer, new Term(\"suggest_field\", \"abc_\"), filter);\n    TopSuggestDocs suggest = indexSearcher.suggest(query, num);\n    assertThat(suggest.totalHits, equalTo(0));\n    reader.close();\n    iw.close();\n  }\n\n","sourceOld":"  @Test\n  public void testSuggestOnAllFilteredDocuments() throws Exception {\n    Analyzer analyzer = new MockAnalyzer(random());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, iwcWithSuggestField(analyzer, \"suggest_field\"));\n    int num = Math.min(1000, atLeast(10));\n    Document document = new Document();\n    for (int i = 0; i < num; i++) {\n      document.add(new SuggestField(\"suggest_field\", \"abc_\" + i, i));\n      document.add(newStringField(\"str_fld\", \"deleted\", Field.Store.NO));\n      iw.addDocument(document);\n      document.clear();\n\n      if (usually()) {\n        iw.commit();\n      }\n    }\n\n    Filter filter = new QueryWrapperFilter(new TermsQuery(\"str_fld\", new BytesRef(\"non_existent\")));\n    DirectoryReader reader = iw.getReader();\n    SuggestIndexSearcher indexSearcher = new SuggestIndexSearcher(reader);\n    // no random access required;\n    // calling suggest with filter that does not match any documents should early terminate\n    PrefixCompletionQuery query = new PrefixCompletionQuery(analyzer, new Term(\"suggest_field\", \"abc_\"), filter);\n    TopSuggestDocs suggest = indexSearcher.suggest(query, num);\n    assertThat(suggest.totalHits, equalTo(0));\n    reader.close();\n    iw.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"8cd299e7a00489961ab0877977e0f1b9f48a4c15","date":1435768484,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/suggest/document/TestSuggestField#testSuggestOnAllFilteredDocuments().mjava","pathOld":"lucene/suggest/src/test/org/apache/lucene/search/suggest/document/TestSuggestField#testSuggestOnAllFilteredDocuments().mjava","sourceNew":"  @Test\n  public void testSuggestOnAllFilteredDocuments() throws Exception {\n    Analyzer analyzer = new MockAnalyzer(random());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, iwcWithSuggestField(analyzer, \"suggest_field\"));\n    int num = Math.min(1000, atLeast(10));\n    for (int i = 0; i < num; i++) {\n      Document document = new Document();\n      document.add(new SuggestField(\"suggest_field\", \"abc_\" + i, i));\n      document.add(newStringField(\"str_fld\", \"deleted\", Field.Store.NO));\n      iw.addDocument(document);\n\n      if (usually()) {\n        iw.commit();\n      }\n    }\n\n    BitsProducer filter = new BitsProducer() {\n      @Override\n      public Bits getBits(LeafReaderContext context) throws IOException {\n        return new Bits.MatchNoBits(context.reader().maxDoc());\n      }\n    };\n    DirectoryReader reader = iw.getReader();\n    SuggestIndexSearcher indexSearcher = new SuggestIndexSearcher(reader);\n    // no random access required;\n    // calling suggest with filter that does not match any documents should early terminate\n    PrefixCompletionQuery query = new PrefixCompletionQuery(analyzer, new Term(\"suggest_field\", \"abc_\"), filter);\n    TopSuggestDocs suggest = indexSearcher.suggest(query, num);\n    assertThat(suggest.totalHits, equalTo(0));\n    reader.close();\n    iw.close();\n  }\n\n","sourceOld":"  @Test\n  public void testSuggestOnAllFilteredDocuments() throws Exception {\n    Analyzer analyzer = new MockAnalyzer(random());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, iwcWithSuggestField(analyzer, \"suggest_field\"));\n    int num = Math.min(1000, atLeast(10));\n    for (int i = 0; i < num; i++) {\n      Document document = new Document();\n      document.add(new SuggestField(\"suggest_field\", \"abc_\" + i, i));\n      document.add(newStringField(\"str_fld\", \"deleted\", Field.Store.NO));\n      iw.addDocument(document);\n\n      if (usually()) {\n        iw.commit();\n      }\n    }\n\n    Filter filter = new QueryWrapperFilter(new TermsQuery(\"str_fld\", new BytesRef(\"non_existent\")));\n    DirectoryReader reader = iw.getReader();\n    SuggestIndexSearcher indexSearcher = new SuggestIndexSearcher(reader);\n    // no random access required;\n    // calling suggest with filter that does not match any documents should early terminate\n    PrefixCompletionQuery query = new PrefixCompletionQuery(analyzer, new Term(\"suggest_field\", \"abc_\"), filter);\n    TopSuggestDocs suggest = indexSearcher.suggest(query, num);\n    assertThat(suggest.totalHits, equalTo(0));\n    reader.close();\n    iw.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"902a92b60648a8925bfd9bb53a78669cd2ea98fd","date":1487797466,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/suggest/document/TestSuggestField#testSuggestOnAllFilteredDocuments().mjava","pathOld":"lucene/suggest/src/test/org/apache/lucene/search/suggest/document/TestSuggestField#testSuggestOnAllFilteredDocuments().mjava","sourceNew":"  @Test\n  public void testSuggestOnAllFilteredDocuments() throws Exception {\n    Analyzer analyzer = new MockAnalyzer(random());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, iwcWithSuggestField(analyzer, \"suggest_field\"));\n    int num = Math.min(1000, atLeast(10));\n    for (int i = 0; i < num; i++) {\n      Document document = new Document();\n      document.add(new SuggestField(\"suggest_field\", \"abc_\" + i, i));\n      document.add(newStringField(\"str_fld\", \"deleted\", Field.Store.NO));\n      iw.addDocument(document);\n\n      if (usually()) {\n        iw.commit();\n      }\n    }\n\n    BitsProducer filter = new BitsProducer() {\n      @Override\n      public Bits getBits(LeafReaderContext context) throws IOException {\n        return new Bits.MatchNoBits(context.reader().maxDoc());\n      }\n    };\n    DirectoryReader reader = iw.getReader();\n    SuggestIndexSearcher indexSearcher = new SuggestIndexSearcher(reader);\n    // no random access required;\n    // calling suggest with filter that does not match any documents should early terminate\n    PrefixCompletionQuery query = new PrefixCompletionQuery(analyzer, new Term(\"suggest_field\", \"abc_\"), filter);\n    TopSuggestDocs suggest = indexSearcher.suggest(query, num, false);\n    assertThat(suggest.totalHits, equalTo(0));\n    reader.close();\n    iw.close();\n  }\n\n","sourceOld":"  @Test\n  public void testSuggestOnAllFilteredDocuments() throws Exception {\n    Analyzer analyzer = new MockAnalyzer(random());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, iwcWithSuggestField(analyzer, \"suggest_field\"));\n    int num = Math.min(1000, atLeast(10));\n    for (int i = 0; i < num; i++) {\n      Document document = new Document();\n      document.add(new SuggestField(\"suggest_field\", \"abc_\" + i, i));\n      document.add(newStringField(\"str_fld\", \"deleted\", Field.Store.NO));\n      iw.addDocument(document);\n\n      if (usually()) {\n        iw.commit();\n      }\n    }\n\n    BitsProducer filter = new BitsProducer() {\n      @Override\n      public Bits getBits(LeafReaderContext context) throws IOException {\n        return new Bits.MatchNoBits(context.reader().maxDoc());\n      }\n    };\n    DirectoryReader reader = iw.getReader();\n    SuggestIndexSearcher indexSearcher = new SuggestIndexSearcher(reader);\n    // no random access required;\n    // calling suggest with filter that does not match any documents should early terminate\n    PrefixCompletionQuery query = new PrefixCompletionQuery(analyzer, new Term(\"suggest_field\", \"abc_\"), filter);\n    TopSuggestDocs suggest = indexSearcher.suggest(query, num);\n    assertThat(suggest.totalHits, equalTo(0));\n    reader.close();\n    iw.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"f8f3dce1d4820d9634c1a6a46cd50ac13cf0f5a6","date":1498031702,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/suggest/document/TestSuggestField#testSuggestOnAllFilteredDocuments().mjava","pathOld":"lucene/suggest/src/test/org/apache/lucene/search/suggest/document/TestSuggestField#testSuggestOnAllFilteredDocuments().mjava","sourceNew":"  @Test\n  public void testSuggestOnAllFilteredDocuments() throws Exception {\n    Analyzer analyzer = new MockAnalyzer(random());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, iwcWithSuggestField(analyzer, \"suggest_field\"));\n    int num = Math.min(1000, atLeast(10));\n    for (int i = 0; i < num; i++) {\n      Document document = new Document();\n      document.add(new SuggestField(\"suggest_field\", \"abc_\" + i, i));\n      document.add(newStringField(\"str_fld\", \"deleted\", Field.Store.NO));\n      iw.addDocument(document);\n\n      if (usually()) {\n        iw.commit();\n      }\n    }\n\n    BitsProducer filter = new BitsProducer() {\n      @Override\n      public Bits getBits(LeafReaderContext context) throws IOException {\n        return new Bits.MatchNoBits(context.reader().maxDoc());\n      }\n    };\n    DirectoryReader reader = iw.getReader();\n    SuggestIndexSearcher indexSearcher = new SuggestIndexSearcher(reader);\n    // no random access required;\n    // calling suggest with filter that does not match any documents should early terminate\n    PrefixCompletionQuery query = new PrefixCompletionQuery(analyzer, new Term(\"suggest_field\", \"abc_\"), filter);\n    TopSuggestDocs suggest = indexSearcher.suggest(query, num, false);\n    assertThat(suggest.totalHits, equalTo(0L));\n    reader.close();\n    iw.close();\n  }\n\n","sourceOld":"  @Test\n  public void testSuggestOnAllFilteredDocuments() throws Exception {\n    Analyzer analyzer = new MockAnalyzer(random());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, iwcWithSuggestField(analyzer, \"suggest_field\"));\n    int num = Math.min(1000, atLeast(10));\n    for (int i = 0; i < num; i++) {\n      Document document = new Document();\n      document.add(new SuggestField(\"suggest_field\", \"abc_\" + i, i));\n      document.add(newStringField(\"str_fld\", \"deleted\", Field.Store.NO));\n      iw.addDocument(document);\n\n      if (usually()) {\n        iw.commit();\n      }\n    }\n\n    BitsProducer filter = new BitsProducer() {\n      @Override\n      public Bits getBits(LeafReaderContext context) throws IOException {\n        return new Bits.MatchNoBits(context.reader().maxDoc());\n      }\n    };\n    DirectoryReader reader = iw.getReader();\n    SuggestIndexSearcher indexSearcher = new SuggestIndexSearcher(reader);\n    // no random access required;\n    // calling suggest with filter that does not match any documents should early terminate\n    PrefixCompletionQuery query = new PrefixCompletionQuery(analyzer, new Term(\"suggest_field\", \"abc_\"), filter);\n    TopSuggestDocs suggest = indexSearcher.suggest(query, num, false);\n    assertThat(suggest.totalHits, equalTo(0));\n    reader.close();\n    iw.close();\n  }\n\n","bugFix":["07e29e9a1cbba8cc30091c3e4f8e9eac7ec7d22a"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7dfa64bc2074fb87d0ca70095a644c1ead107e1","date":1498356339,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/suggest/document/TestSuggestField#testSuggestOnAllFilteredDocuments().mjava","pathOld":"lucene/suggest/src/test/org/apache/lucene/search/suggest/document/TestSuggestField#testSuggestOnAllFilteredDocuments().mjava","sourceNew":"  @Test\n  public void testSuggestOnAllFilteredDocuments() throws Exception {\n    Analyzer analyzer = new MockAnalyzer(random());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, iwcWithSuggestField(analyzer, \"suggest_field\"));\n    int num = Math.min(1000, atLeast(10));\n    for (int i = 0; i < num; i++) {\n      Document document = new Document();\n      document.add(new SuggestField(\"suggest_field\", \"abc_\" + i, i));\n      document.add(newStringField(\"str_fld\", \"deleted\", Field.Store.NO));\n      iw.addDocument(document);\n\n      if (usually()) {\n        iw.commit();\n      }\n    }\n\n    BitsProducer filter = new BitsProducer() {\n      @Override\n      public Bits getBits(LeafReaderContext context) throws IOException {\n        return new Bits.MatchNoBits(context.reader().maxDoc());\n      }\n    };\n    DirectoryReader reader = iw.getReader();\n    SuggestIndexSearcher indexSearcher = new SuggestIndexSearcher(reader);\n    // no random access required;\n    // calling suggest with filter that does not match any documents should early terminate\n    PrefixCompletionQuery query = new PrefixCompletionQuery(analyzer, new Term(\"suggest_field\", \"abc_\"), filter);\n    TopSuggestDocs suggest = indexSearcher.suggest(query, num, false);\n    assertThat(suggest.totalHits, equalTo(0L));\n    reader.close();\n    iw.close();\n  }\n\n","sourceOld":"  @Test\n  public void testSuggestOnAllFilteredDocuments() throws Exception {\n    Analyzer analyzer = new MockAnalyzer(random());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, iwcWithSuggestField(analyzer, \"suggest_field\"));\n    int num = Math.min(1000, atLeast(10));\n    for (int i = 0; i < num; i++) {\n      Document document = new Document();\n      document.add(new SuggestField(\"suggest_field\", \"abc_\" + i, i));\n      document.add(newStringField(\"str_fld\", \"deleted\", Field.Store.NO));\n      iw.addDocument(document);\n\n      if (usually()) {\n        iw.commit();\n      }\n    }\n\n    BitsProducer filter = new BitsProducer() {\n      @Override\n      public Bits getBits(LeafReaderContext context) throws IOException {\n        return new Bits.MatchNoBits(context.reader().maxDoc());\n      }\n    };\n    DirectoryReader reader = iw.getReader();\n    SuggestIndexSearcher indexSearcher = new SuggestIndexSearcher(reader);\n    // no random access required;\n    // calling suggest with filter that does not match any documents should early terminate\n    PrefixCompletionQuery query = new PrefixCompletionQuery(analyzer, new Term(\"suggest_field\", \"abc_\"), filter);\n    TopSuggestDocs suggest = indexSearcher.suggest(query, num, false);\n    assertThat(suggest.totalHits, equalTo(0));\n    reader.close();\n    iw.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/suggest/document/TestSuggestField#testSuggestOnAllFilteredDocuments().mjava","pathOld":"lucene/suggest/src/test/org/apache/lucene/search/suggest/document/TestSuggestField#testSuggestOnAllFilteredDocuments().mjava","sourceNew":"  @Test\n  public void testSuggestOnAllFilteredDocuments() throws Exception {\n    Analyzer analyzer = new MockAnalyzer(random());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, iwcWithSuggestField(analyzer, \"suggest_field\"));\n    int num = Math.min(1000, atLeast(10));\n    for (int i = 0; i < num; i++) {\n      Document document = new Document();\n      document.add(new SuggestField(\"suggest_field\", \"abc_\" + i, i));\n      document.add(newStringField(\"str_fld\", \"deleted\", Field.Store.NO));\n      iw.addDocument(document);\n\n      if (usually()) {\n        iw.commit();\n      }\n    }\n\n    BitsProducer filter = new BitsProducer() {\n      @Override\n      public Bits getBits(LeafReaderContext context) throws IOException {\n        return new Bits.MatchNoBits(context.reader().maxDoc());\n      }\n    };\n    DirectoryReader reader = iw.getReader();\n    SuggestIndexSearcher indexSearcher = new SuggestIndexSearcher(reader);\n    // no random access required;\n    // calling suggest with filter that does not match any documents should early terminate\n    PrefixCompletionQuery query = new PrefixCompletionQuery(analyzer, new Term(\"suggest_field\", \"abc_\"), filter);\n    TopSuggestDocs suggest = indexSearcher.suggest(query, num, false);\n    assertThat(suggest.totalHits, equalTo(0L));\n    reader.close();\n    iw.close();\n  }\n\n","sourceOld":"  @Test\n  public void testSuggestOnAllFilteredDocuments() throws Exception {\n    Analyzer analyzer = new MockAnalyzer(random());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, iwcWithSuggestField(analyzer, \"suggest_field\"));\n    int num = Math.min(1000, atLeast(10));\n    for (int i = 0; i < num; i++) {\n      Document document = new Document();\n      document.add(new SuggestField(\"suggest_field\", \"abc_\" + i, i));\n      document.add(newStringField(\"str_fld\", \"deleted\", Field.Store.NO));\n      iw.addDocument(document);\n\n      if (usually()) {\n        iw.commit();\n      }\n    }\n\n    BitsProducer filter = new BitsProducer() {\n      @Override\n      public Bits getBits(LeafReaderContext context) throws IOException {\n        return new Bits.MatchNoBits(context.reader().maxDoc());\n      }\n    };\n    DirectoryReader reader = iw.getReader();\n    SuggestIndexSearcher indexSearcher = new SuggestIndexSearcher(reader);\n    // no random access required;\n    // calling suggest with filter that does not match any documents should early terminate\n    PrefixCompletionQuery query = new PrefixCompletionQuery(analyzer, new Term(\"suggest_field\", \"abc_\"), filter);\n    TopSuggestDocs suggest = indexSearcher.suggest(query, num, false);\n    assertThat(suggest.totalHits, equalTo(0));\n    reader.close();\n    iw.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"83788ad129a5154d5c6562c4e8ce3db48793aada","date":1532961485,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/suggest/document/TestSuggestField#testSuggestOnAllFilteredDocuments().mjava","pathOld":"lucene/suggest/src/test/org/apache/lucene/search/suggest/document/TestSuggestField#testSuggestOnAllFilteredDocuments().mjava","sourceNew":"  @Test\n  public void testSuggestOnAllFilteredDocuments() throws Exception {\n    Analyzer analyzer = new MockAnalyzer(random());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, iwcWithSuggestField(analyzer, \"suggest_field\"));\n    int num = Math.min(1000, atLeast(10));\n    for (int i = 0; i < num; i++) {\n      Document document = new Document();\n      document.add(new SuggestField(\"suggest_field\", \"abc_\" + i, i));\n      document.add(newStringField(\"str_fld\", \"deleted\", Field.Store.NO));\n      iw.addDocument(document);\n\n      if (usually()) {\n        iw.commit();\n      }\n    }\n\n    BitsProducer filter = new BitsProducer() {\n      @Override\n      public Bits getBits(LeafReaderContext context) throws IOException {\n        return new Bits.MatchNoBits(context.reader().maxDoc());\n      }\n    };\n    DirectoryReader reader = iw.getReader();\n    SuggestIndexSearcher indexSearcher = new SuggestIndexSearcher(reader);\n    // no random access required;\n    // calling suggest with filter that does not match any documents should early terminate\n    PrefixCompletionQuery query = new PrefixCompletionQuery(analyzer, new Term(\"suggest_field\", \"abc_\"), filter);\n    TopSuggestDocs suggest = indexSearcher.suggest(query, num, false);\n    assertThat(suggest.totalHits.value, equalTo(0L));\n    reader.close();\n    iw.close();\n  }\n\n","sourceOld":"  @Test\n  public void testSuggestOnAllFilteredDocuments() throws Exception {\n    Analyzer analyzer = new MockAnalyzer(random());\n    RandomIndexWriter iw = new RandomIndexWriter(random(), dir, iwcWithSuggestField(analyzer, \"suggest_field\"));\n    int num = Math.min(1000, atLeast(10));\n    for (int i = 0; i < num; i++) {\n      Document document = new Document();\n      document.add(new SuggestField(\"suggest_field\", \"abc_\" + i, i));\n      document.add(newStringField(\"str_fld\", \"deleted\", Field.Store.NO));\n      iw.addDocument(document);\n\n      if (usually()) {\n        iw.commit();\n      }\n    }\n\n    BitsProducer filter = new BitsProducer() {\n      @Override\n      public Bits getBits(LeafReaderContext context) throws IOException {\n        return new Bits.MatchNoBits(context.reader().maxDoc());\n      }\n    };\n    DirectoryReader reader = iw.getReader();\n    SuggestIndexSearcher indexSearcher = new SuggestIndexSearcher(reader);\n    // no random access required;\n    // calling suggest with filter that does not match any documents should early terminate\n    PrefixCompletionQuery query = new PrefixCompletionQuery(analyzer, new Term(\"suggest_field\", \"abc_\"), filter);\n    TopSuggestDocs suggest = indexSearcher.suggest(query, num, false);\n    assertThat(suggest.totalHits, equalTo(0L));\n    reader.close();\n    iw.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f8f3dce1d4820d9634c1a6a46cd50ac13cf0f5a6":["902a92b60648a8925bfd9bb53a78669cd2ea98fd"],"8cd299e7a00489961ab0877977e0f1b9f48a4c15":["e919be7c57e6b5ae11c5beaa2b528f092f7687c4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e919be7c57e6b5ae11c5beaa2b528f092f7687c4":["8c33f6677a2078739058f81eca1df69d12cd62b0"],"83788ad129a5154d5c6562c4e8ce3db48793aada":["28288370235ed02234a64753cdbf0c6ec096304a"],"8c33f6677a2078739058f81eca1df69d12cd62b0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b7dfa64bc2074fb87d0ca70095a644c1ead107e1":["902a92b60648a8925bfd9bb53a78669cd2ea98fd","f8f3dce1d4820d9634c1a6a46cd50ac13cf0f5a6"],"902a92b60648a8925bfd9bb53a78669cd2ea98fd":["8cd299e7a00489961ab0877977e0f1b9f48a4c15"],"28288370235ed02234a64753cdbf0c6ec096304a":["902a92b60648a8925bfd9bb53a78669cd2ea98fd","f8f3dce1d4820d9634c1a6a46cd50ac13cf0f5a6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["83788ad129a5154d5c6562c4e8ce3db48793aada"]},"commit2Childs":{"f8f3dce1d4820d9634c1a6a46cd50ac13cf0f5a6":["b7dfa64bc2074fb87d0ca70095a644c1ead107e1","28288370235ed02234a64753cdbf0c6ec096304a"],"8cd299e7a00489961ab0877977e0f1b9f48a4c15":["902a92b60648a8925bfd9bb53a78669cd2ea98fd"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8c33f6677a2078739058f81eca1df69d12cd62b0"],"e919be7c57e6b5ae11c5beaa2b528f092f7687c4":["8cd299e7a00489961ab0877977e0f1b9f48a4c15"],"8c33f6677a2078739058f81eca1df69d12cd62b0":["e919be7c57e6b5ae11c5beaa2b528f092f7687c4"],"83788ad129a5154d5c6562c4e8ce3db48793aada":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b7dfa64bc2074fb87d0ca70095a644c1ead107e1":[],"902a92b60648a8925bfd9bb53a78669cd2ea98fd":["f8f3dce1d4820d9634c1a6a46cd50ac13cf0f5a6","b7dfa64bc2074fb87d0ca70095a644c1ead107e1","28288370235ed02234a64753cdbf0c6ec096304a"],"28288370235ed02234a64753cdbf0c6ec096304a":["83788ad129a5154d5c6562c4e8ce3db48793aada"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b7dfa64bc2074fb87d0ca70095a644c1ead107e1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}