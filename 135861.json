{"path":"solr/contrib/clustering/src/java/org/apache/solr/handler/clustering/carrot2/LuceneCarrot2TokenizerFactory.ChineseTokenizerFactory.ChineseTokenizer#ChineseTokenizer().mjava","commits":[{"id":"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","date":1306767085,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/clustering/src/java/org/apache/solr/handler/clustering/carrot2/LuceneCarrot2TokenizerFactory.ChineseTokenizerFactory.ChineseTokenizer#ChineseTokenizer().mjava","pathOld":"solr/contrib/clustering/src/main/java/org/apache/solr/handler/clustering/carrot2/LuceneCarrot2TokenizerFactory.ChineseTokenizerFactory.ChineseTokenizer#ChineseTokenizer().mjava","sourceNew":"\t\t\tprivate ChineseTokenizer() throws Exception {\r\n\t\t\t\tthis.tempCharSequence = new MutableCharArray(new char[0]);\r\n\r\n\t\t\t\t// As Smart Chinese is not available during compile time,\r\n\t\t\t\t// we need to resort to reflection.\r\n\t\t\t\tfinal Class<?> tokenizerClass = ReflectionUtils.classForName(\r\n\t\t\t\t\t\t\"org.apache.lucene.analysis.cn.smart.SentenceTokenizer\", false);\r\n\t\t\t\tthis.sentenceTokenizer = (Tokenizer) tokenizerClass.getConstructor(\r\n\t\t\t\t\t\tReader.class).newInstance((Reader) null);\r\n\t\t\t\tthis.tokenFilterClass = ReflectionUtils.classForName(\r\n\t\t\t\t\t\t\"org.apache.lucene.analysis.cn.smart.WordTokenFilter\", false);\r\n\t\t\t}\r\n\n","sourceOld":"\t\t\tprivate ChineseTokenizer() throws Exception {\r\n\t\t\t\tthis.tempCharSequence = new MutableCharArray(new char[0]);\r\n\r\n\t\t\t\t// As Smart Chinese is not available during compile time,\r\n\t\t\t\t// we need to resort to reflection.\r\n\t\t\t\tfinal Class<?> tokenizerClass = ReflectionUtils.classForName(\r\n\t\t\t\t\t\t\"org.apache.lucene.analysis.cn.smart.SentenceTokenizer\", false);\r\n\t\t\t\tthis.sentenceTokenizer = (Tokenizer) tokenizerClass.getConstructor(\r\n\t\t\t\t\t\tReader.class).newInstance((Reader) null);\r\n\t\t\t\tthis.tokenFilterClass = ReflectionUtils.classForName(\r\n\t\t\t\t\t\t\"org.apache.lucene.analysis.cn.smart.WordTokenFilter\", false);\r\n\t\t\t}\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/clustering/src/java/org/apache/solr/handler/clustering/carrot2/LuceneCarrot2TokenizerFactory.ChineseTokenizerFactory.ChineseTokenizer#ChineseTokenizer().mjava","pathOld":"solr/contrib/clustering/src/main/java/org/apache/solr/handler/clustering/carrot2/LuceneCarrot2TokenizerFactory.ChineseTokenizerFactory.ChineseTokenizer#ChineseTokenizer().mjava","sourceNew":"\t\t\tprivate ChineseTokenizer() throws Exception {\r\n\t\t\t\tthis.tempCharSequence = new MutableCharArray(new char[0]);\r\n\r\n\t\t\t\t// As Smart Chinese is not available during compile time,\r\n\t\t\t\t// we need to resort to reflection.\r\n\t\t\t\tfinal Class<?> tokenizerClass = ReflectionUtils.classForName(\r\n\t\t\t\t\t\t\"org.apache.lucene.analysis.cn.smart.SentenceTokenizer\", false);\r\n\t\t\t\tthis.sentenceTokenizer = (Tokenizer) tokenizerClass.getConstructor(\r\n\t\t\t\t\t\tReader.class).newInstance((Reader) null);\r\n\t\t\t\tthis.tokenFilterClass = ReflectionUtils.classForName(\r\n\t\t\t\t\t\t\"org.apache.lucene.analysis.cn.smart.WordTokenFilter\", false);\r\n\t\t\t}\r\n\n","sourceOld":"\t\t\tprivate ChineseTokenizer() throws Exception {\r\n\t\t\t\tthis.tempCharSequence = new MutableCharArray(new char[0]);\r\n\r\n\t\t\t\t// As Smart Chinese is not available during compile time,\r\n\t\t\t\t// we need to resort to reflection.\r\n\t\t\t\tfinal Class<?> tokenizerClass = ReflectionUtils.classForName(\r\n\t\t\t\t\t\t\"org.apache.lucene.analysis.cn.smart.SentenceTokenizer\", false);\r\n\t\t\t\tthis.sentenceTokenizer = (Tokenizer) tokenizerClass.getConstructor(\r\n\t\t\t\t\t\tReader.class).newInstance((Reader) null);\r\n\t\t\t\tthis.tokenFilterClass = ReflectionUtils.classForName(\r\n\t\t\t\t\t\t\"org.apache.lucene.analysis.cn.smart.WordTokenFilter\", false);\r\n\t\t\t}\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ef9e7ba08c124ce913ef60415c21ae1ca833d211","date":1323446079,"type":3,"author":"Stanisław Osiński","isMerge":false,"pathNew":"solr/contrib/clustering/src/java/org/apache/solr/handler/clustering/carrot2/LuceneCarrot2TokenizerFactory.ChineseTokenizerFactory.ChineseTokenizer#ChineseTokenizer().mjava","pathOld":"solr/contrib/clustering/src/java/org/apache/solr/handler/clustering/carrot2/LuceneCarrot2TokenizerFactory.ChineseTokenizerFactory.ChineseTokenizer#ChineseTokenizer().mjava","sourceNew":"      private ChineseTokenizer() throws Exception {\r\n        this.tempCharSequence = new MutableCharArray(new char[0]);\r\n\r\n        // As Smart Chinese is not available during compile time,\r\n        // we need to resort to reflection.\r\n        final Class<?> tokenizerClass = ReflectionUtils.classForName(\r\n            \"org.apache.lucene.analysis.cn.smart.SentenceTokenizer\", false);\r\n        this.sentenceTokenizer = (Tokenizer) tokenizerClass.getConstructor(\r\n            Reader.class).newInstance((Reader) null);\r\n        this.tokenFilterClass = ReflectionUtils.classForName(\r\n            \"org.apache.lucene.analysis.cn.smart.WordTokenFilter\", false);\r\n      }\r\n\n","sourceOld":"\t\t\tprivate ChineseTokenizer() throws Exception {\r\n\t\t\t\tthis.tempCharSequence = new MutableCharArray(new char[0]);\r\n\r\n\t\t\t\t// As Smart Chinese is not available during compile time,\r\n\t\t\t\t// we need to resort to reflection.\r\n\t\t\t\tfinal Class<?> tokenizerClass = ReflectionUtils.classForName(\r\n\t\t\t\t\t\t\"org.apache.lucene.analysis.cn.smart.SentenceTokenizer\", false);\r\n\t\t\t\tthis.sentenceTokenizer = (Tokenizer) tokenizerClass.getConstructor(\r\n\t\t\t\t\t\tReader.class).newInstance((Reader) null);\r\n\t\t\t\tthis.tokenFilterClass = ReflectionUtils.classForName(\r\n\t\t\t\t\t\t\"org.apache.lucene.analysis.cn.smart.WordTokenFilter\", false);\r\n\t\t\t}\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ff99371bc1f34bf1a2ccdb754940ee5fe5cc2565","date":1323540308,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/contrib/clustering/src/java/org/apache/solr/handler/clustering/carrot2/LuceneCarrot2TokenizerFactory.ChineseTokenizerFactory.ChineseTokenizer#ChineseTokenizer().mjava","pathOld":"solr/contrib/clustering/src/java/org/apache/solr/handler/clustering/carrot2/LuceneCarrot2TokenizerFactory.ChineseTokenizerFactory.ChineseTokenizer#ChineseTokenizer().mjava","sourceNew":"      private ChineseTokenizer() throws Exception {\r\n        this.tempCharSequence = new MutableCharArray(new char[0]);\r\n\r\n        // As Smart Chinese is not available during compile time,\r\n        // we need to resort to reflection.\r\n        final Class<?> tokenizerClass = ReflectionUtils.classForName(\r\n            \"org.apache.lucene.analysis.cn.smart.SentenceTokenizer\", false);\r\n        this.sentenceTokenizer = (Tokenizer) tokenizerClass.getConstructor(\r\n            Reader.class).newInstance((Reader) null);\r\n        this.tokenFilterClass = ReflectionUtils.classForName(\r\n            \"org.apache.lucene.analysis.cn.smart.WordTokenFilter\", false);\r\n      }\r\n\n","sourceOld":"\t\t\tprivate ChineseTokenizer() throws Exception {\r\n\t\t\t\tthis.tempCharSequence = new MutableCharArray(new char[0]);\r\n\r\n\t\t\t\t// As Smart Chinese is not available during compile time,\r\n\t\t\t\t// we need to resort to reflection.\r\n\t\t\t\tfinal Class<?> tokenizerClass = ReflectionUtils.classForName(\r\n\t\t\t\t\t\t\"org.apache.lucene.analysis.cn.smart.SentenceTokenizer\", false);\r\n\t\t\t\tthis.sentenceTokenizer = (Tokenizer) tokenizerClass.getConstructor(\r\n\t\t\t\t\t\tReader.class).newInstance((Reader) null);\r\n\t\t\t\tthis.tokenFilterClass = ReflectionUtils.classForName(\r\n\t\t\t\t\t\t\"org.apache.lucene.analysis.cn.smart.WordTokenFilter\", false);\r\n\t\t\t}\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5a002afd8b1e0d1bbf0debb2ff740b5e77ed8b23","date":1332766738,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/contrib/clustering/src/java/org/apache/solr/handler/clustering/carrot2/LuceneCarrot2TokenizerFactory.ChineseTokenizerFactory.ChineseTokenizer#ChineseTokenizer().mjava","pathOld":"solr/contrib/clustering/src/java/org/apache/solr/handler/clustering/carrot2/LuceneCarrot2TokenizerFactory.ChineseTokenizerFactory.ChineseTokenizer#ChineseTokenizer().mjava","sourceNew":"      private ChineseTokenizer() throws Exception {\n        this.tempCharSequence = new MutableCharArray(new char[0]);\n\n        // As Smart Chinese is not available during compile time,\n        // we need to resort to reflection.\n        final Class<?> tokenizerClass = ReflectionUtils.classForName(\n            \"org.apache.lucene.analysis.cn.smart.SentenceTokenizer\", false);\n        this.sentenceTokenizer = (Tokenizer) tokenizerClass.getConstructor(\n            Reader.class).newInstance((Reader) null);\n        this.tokenFilterClass = ReflectionUtils.classForName(\n            \"org.apache.lucene.analysis.cn.smart.WordTokenFilter\", false);\n      }\n\n","sourceOld":"      private ChineseTokenizer() throws Exception {\r\n        this.tempCharSequence = new MutableCharArray(new char[0]);\r\n\r\n        // As Smart Chinese is not available during compile time,\r\n        // we need to resort to reflection.\r\n        final Class<?> tokenizerClass = ReflectionUtils.classForName(\r\n            \"org.apache.lucene.analysis.cn.smart.SentenceTokenizer\", false);\r\n        this.sentenceTokenizer = (Tokenizer) tokenizerClass.getConstructor(\r\n            Reader.class).newInstance((Reader) null);\r\n        this.tokenFilterClass = ReflectionUtils.classForName(\r\n            \"org.apache.lucene.analysis.cn.smart.WordTokenFilter\", false);\r\n      }\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5a002afd8b1e0d1bbf0debb2ff740b5e77ed8b23":["ef9e7ba08c124ce913ef60415c21ae1ca833d211"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5128b7b3b73fedff05fdc5ea2e6be53c1020bb91"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ff99371bc1f34bf1a2ccdb754940ee5fe5cc2565":["c26f00b574427b55127e869b935845554afde1fa","ef9e7ba08c124ce913ef60415c21ae1ca833d211"],"ef9e7ba08c124ce913ef60415c21ae1ca833d211":["c26f00b574427b55127e869b935845554afde1fa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5a002afd8b1e0d1bbf0debb2ff740b5e77ed8b23"]},"commit2Childs":{"5a002afd8b1e0d1bbf0debb2ff740b5e77ed8b23":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5128b7b3b73fedff05fdc5ea2e6be53c1020bb91":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["ff99371bc1f34bf1a2ccdb754940ee5fe5cc2565","ef9e7ba08c124ce913ef60415c21ae1ca833d211"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5128b7b3b73fedff05fdc5ea2e6be53c1020bb91","c26f00b574427b55127e869b935845554afde1fa"],"ff99371bc1f34bf1a2ccdb754940ee5fe5cc2565":[],"ef9e7ba08c124ce913ef60415c21ae1ca833d211":["5a002afd8b1e0d1bbf0debb2ff740b5e77ed8b23","ff99371bc1f34bf1a2ccdb754940ee5fe5cc2565"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ff99371bc1f34bf1a2ccdb754940ee5fe5cc2565","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}