{"path":"lucene/src/test-framework/java/org/apache/lucene/index/codecs/preflexrw/PreFlexRWPostingsFormat#fieldsProducer(SegmentReadState).mjava","commits":[{"id":"7b91922b55d15444d554721b352861d028eb8278","date":1320421415,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test-framework/java/org/apache/lucene/index/codecs/preflexrw/PreFlexRWPostingsFormat#fieldsProducer(SegmentReadState).mjava","pathOld":"lucene/src/test-framework/org/apache/lucene/index/codecs/preflexrw/PreFlexRWCodec#fieldsProducer(SegmentReadState).mjava","sourceNew":"  @Override\n  public FieldsProducer fieldsProducer(SegmentReadState state) throws IOException {\n\n    // Whenever IW opens readers, eg for merging, we have to\n    // keep terms order in UTF16:\n\n    return new Lucene3xFields(state.dir, state.fieldInfos, state.segmentInfo, state.context, state.termsIndexDivisor) {\n      @Override\n      protected boolean sortTermsByUnicode() {\n        // We carefully peek into stack track above us: if\n        // we are part of a \"merge\", we must sort by UTF16:\n        boolean unicodeSortOrder = true;\n\n        StackTraceElement[] trace = new Exception().getStackTrace();\n        for (int i = 0; i < trace.length; i++) {\n          //System.out.println(trace[i].getClassName());\n          if (\"merge\".equals(trace[i].getMethodName())) {\n            unicodeSortOrder = false;\n            if (LuceneTestCase.VERBOSE) {\n              System.out.println(\"NOTE: PreFlexRW codec: forcing legacy UTF16 term sort order\");\n            }\n            break;\n          }\n        }\n\n        return unicodeSortOrder;\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public FieldsProducer fieldsProducer(SegmentReadState state) throws IOException {\n\n    // Whenever IW opens readers, eg for merging, we have to\n    // keep terms order in UTF16:\n\n    return new PreFlexFields(state.dir, state.fieldInfos, state.segmentInfo, state.context, state.termsIndexDivisor) {\n      @Override\n      protected boolean sortTermsByUnicode() {\n        // We carefully peek into stack track above us: if\n        // we are part of a \"merge\", we must sort by UTF16:\n        boolean unicodeSortOrder = true;\n\n        StackTraceElement[] trace = new Exception().getStackTrace();\n        for (int i = 0; i < trace.length; i++) {\n          //System.out.println(trace[i].getClassName());\n          if (\"merge\".equals(trace[i].getMethodName())) {\n            unicodeSortOrder = false;\n            if (LuceneTestCase.VERBOSE) {\n              System.out.println(\"NOTE: PreFlexRW codec: forcing legacy UTF16 term sort order\");\n            }\n            break;\n          }\n        }\n\n        return unicodeSortOrder;\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0ae5e3ed1232483b7b8a014f175a5fe43595982","date":1324062192,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test-framework/java/org/apache/lucene/codecs/preflexrw/PreFlexRWPostingsFormat#fieldsProducer(SegmentReadState).mjava","pathOld":"lucene/src/test-framework/java/org/apache/lucene/index/codecs/preflexrw/PreFlexRWPostingsFormat#fieldsProducer(SegmentReadState).mjava","sourceNew":"  @Override\n  public FieldsProducer fieldsProducer(SegmentReadState state) throws IOException {\n\n    // Whenever IW opens readers, eg for merging, we have to\n    // keep terms order in UTF16:\n\n    return new Lucene3xFields(state.dir, state.fieldInfos, state.segmentInfo, state.context, state.termsIndexDivisor) {\n      @Override\n      protected boolean sortTermsByUnicode() {\n        // We carefully peek into stack track above us: if\n        // we are part of a \"merge\", we must sort by UTF16:\n        boolean unicodeSortOrder = true;\n\n        StackTraceElement[] trace = new Exception().getStackTrace();\n        for (int i = 0; i < trace.length; i++) {\n          //System.out.println(trace[i].getClassName());\n          if (\"merge\".equals(trace[i].getMethodName())) {\n            unicodeSortOrder = false;\n            if (LuceneTestCase.VERBOSE) {\n              System.out.println(\"NOTE: PreFlexRW codec: forcing legacy UTF16 term sort order\");\n            }\n            break;\n          }\n        }\n\n        return unicodeSortOrder;\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public FieldsProducer fieldsProducer(SegmentReadState state) throws IOException {\n\n    // Whenever IW opens readers, eg for merging, we have to\n    // keep terms order in UTF16:\n\n    return new Lucene3xFields(state.dir, state.fieldInfos, state.segmentInfo, state.context, state.termsIndexDivisor) {\n      @Override\n      protected boolean sortTermsByUnicode() {\n        // We carefully peek into stack track above us: if\n        // we are part of a \"merge\", we must sort by UTF16:\n        boolean unicodeSortOrder = true;\n\n        StackTraceElement[] trace = new Exception().getStackTrace();\n        for (int i = 0; i < trace.length; i++) {\n          //System.out.println(trace[i].getClassName());\n          if (\"merge\".equals(trace[i].getMethodName())) {\n            unicodeSortOrder = false;\n            if (LuceneTestCase.VERBOSE) {\n              System.out.println(\"NOTE: PreFlexRW codec: forcing legacy UTF16 term sort order\");\n            }\n            break;\n          }\n        }\n\n        return unicodeSortOrder;\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7b91922b55d15444d554721b352861d028eb8278":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["7b91922b55d15444d554721b352861d028eb8278"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"]},"commit2Childs":{"7b91922b55d15444d554721b352861d028eb8278":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7b91922b55d15444d554721b352861d028eb8278"],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}