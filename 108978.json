{"path":"solr/core/src/test/org/apache/solr/schema/TestManagedSchemaAPI#test().mjava","commits":[{"id":"484264228e1de4c93d0f9ec7ad2181223b11889a","date":1460910418,"type":0,"author":"Varun Thacker","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/schema/TestManagedSchemaAPI#test().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void test() throws Exception {\n    String collection = \"testschemaapi\";\n    cluster.createCollection(collection, 1, 2, \"conf1\", null);\n    testReloadAndAddSimple(collection);\n    testAddFieldAndDocument(collection);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f8cb57c50beb99a1245256e866350af8e5ea1f36","date":1460921840,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/schema/TestManagedSchemaAPI#test().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void test() throws Exception {\n    String collection = \"testschemaapi\";\n    cluster.createCollection(collection, 1, 2, \"conf1\", null);\n    testReloadAndAddSimple(collection);\n    testAddFieldAndDocument(collection);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e89a32cc825033ebae8bb9e1c6877c2d9d76749e","date":1476790453,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/schema/TestManagedSchemaAPI#test().mjava","pathOld":"solr/core/src/test/org/apache/solr/schema/TestManagedSchemaAPI#test().mjava","sourceNew":"  @Test\n  public void test() throws Exception {\n    String collection = \"testschemaapi\";\n    CollectionAdminRequest.createCollection(collection, \"conf1\", 1, 2)\n        .process(cluster.getSolrClient());\n    testReloadAndAddSimple(collection);\n    testAddFieldAndDocument(collection);\n  }\n\n","sourceOld":"  @Test\n  public void test() throws Exception {\n    String collection = \"testschemaapi\";\n    cluster.createCollection(collection, 1, 2, \"conf1\", null);\n    testReloadAndAddSimple(collection);\n    testAddFieldAndDocument(collection);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/schema/TestManagedSchemaAPI#test().mjava","pathOld":"solr/core/src/test/org/apache/solr/schema/TestManagedSchemaAPI#test().mjava","sourceNew":"  @Test\n  public void test() throws Exception {\n    String collection = \"testschemaapi\";\n    CollectionAdminRequest.createCollection(collection, \"conf1\", 1, 2)\n        .process(cluster.getSolrClient());\n    testReloadAndAddSimple(collection);\n    testAddFieldAndDocument(collection);\n  }\n\n","sourceOld":"  @Test\n  public void test() throws Exception {\n    String collection = \"testschemaapi\";\n    cluster.createCollection(collection, 1, 2, \"conf1\", null);\n    testReloadAndAddSimple(collection);\n    testAddFieldAndDocument(collection);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3c54b2e707ac07b7487f868bdb6e3619acc4bba0","date":1554713249,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/schema/TestManagedSchemaAPI#test().mjava","pathOld":"solr/core/src/test/org/apache/solr/schema/TestManagedSchemaAPI#test().mjava","sourceNew":"  @Test\n  public void test() throws Exception {\n    String collection = \"testschemaapi\";\n    CollectionAdminRequest.createCollection(collection, \"conf1\", 1, 2)\n        .process(cluster.getSolrClient());\n    testModifyField(collection);\n    testReloadAndAddSimple(collection);\n    testAddFieldAndDocument(collection);\n  }\n\n","sourceOld":"  @Test\n  public void test() throws Exception {\n    String collection = \"testschemaapi\";\n    CollectionAdminRequest.createCollection(collection, \"conf1\", 1, 2)\n        .process(cluster.getSolrClient());\n    testReloadAndAddSimple(collection);\n    testAddFieldAndDocument(collection);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e89a32cc825033ebae8bb9e1c6877c2d9d76749e":["f8cb57c50beb99a1245256e866350af8e5ea1f36"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3c54b2e707ac07b7487f868bdb6e3619acc4bba0":["e89a32cc825033ebae8bb9e1c6877c2d9d76749e"],"f8cb57c50beb99a1245256e866350af8e5ea1f36":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","484264228e1de4c93d0f9ec7ad2181223b11889a"],"484264228e1de4c93d0f9ec7ad2181223b11889a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["f8cb57c50beb99a1245256e866350af8e5ea1f36","e89a32cc825033ebae8bb9e1c6877c2d9d76749e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3c54b2e707ac07b7487f868bdb6e3619acc4bba0"]},"commit2Childs":{"e89a32cc825033ebae8bb9e1c6877c2d9d76749e":["3c54b2e707ac07b7487f868bdb6e3619acc4bba0","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f8cb57c50beb99a1245256e866350af8e5ea1f36","484264228e1de4c93d0f9ec7ad2181223b11889a"],"3c54b2e707ac07b7487f868bdb6e3619acc4bba0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f8cb57c50beb99a1245256e866350af8e5ea1f36":["e89a32cc825033ebae8bb9e1c6877c2d9d76749e","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"484264228e1de4c93d0f9ec7ad2181223b11889a":["f8cb57c50beb99a1245256e866350af8e5ea1f36"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}