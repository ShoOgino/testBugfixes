{"path":"contrib/collation/src/test/org/apache/lucene/collation/CollationTestBase#assertMatches(Searcher,Query,Sort,String).mjava","commits":[{"id":"73b24dd99dc72171f84ace6f141e71e669f0221b","date":1237459915,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/collation/src/test/org/apache/lucene/collation/CollationTestBase#assertMatches(Searcher,Query,Sort,String).mjava","pathOld":"/dev/null","sourceNew":"  // Make sure the documents returned by the search match the expected list\n  // Copied from TestSort.java\n  private void assertMatches(Searcher searcher, Query query, Sort sort, \n                             String expectedResult) throws IOException {\n    ScoreDoc[] result = searcher.search(query, null, 1000, sort).scoreDocs;\n    StringBuffer buff = new StringBuffer(10);\n    int n = result.length;\n    for (int i = 0 ; i < n ; ++i) {\n      Document doc = searcher.doc(result[i].doc);\n      String[] v = doc.getValues(\"tracer\");\n      for (int j = 0 ; j < v.length ; ++j) {\n        buff.append(v[j]);\n      }\n    }\n    assertEquals(expectedResult, buff.toString());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4625cb7ffd7c9caaf2d62b206ba9a382d68da82c","date":1254521470,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/collation/src/test/org/apache/lucene/collation/CollationTestBase#assertMatches(Searcher,Query,Sort,String).mjava","pathOld":"contrib/collation/src/test/org/apache/lucene/collation/CollationTestBase#assertMatches(Searcher,Query,Sort,String).mjava","sourceNew":"  // Make sure the documents returned by the search match the expected list\n  // Copied from TestSort.java\n  private void assertMatches(Searcher searcher, Query query, Sort sort, \n                             String expectedResult) throws IOException {\n    ScoreDoc[] result = searcher.search(query, null, 1000, sort).scoreDocs;\n    StringBuilder buff = new StringBuilder(10);\n    int n = result.length;\n    for (int i = 0 ; i < n ; ++i) {\n      Document doc = searcher.doc(result[i].doc);\n      String[] v = doc.getValues(\"tracer\");\n      for (int j = 0 ; j < v.length ; ++j) {\n        buff.append(v[j]);\n      }\n    }\n    assertEquals(expectedResult, buff.toString());\n  }\n\n","sourceOld":"  // Make sure the documents returned by the search match the expected list\n  // Copied from TestSort.java\n  private void assertMatches(Searcher searcher, Query query, Sort sort, \n                             String expectedResult) throws IOException {\n    ScoreDoc[] result = searcher.search(query, null, 1000, sort).scoreDocs;\n    StringBuffer buff = new StringBuffer(10);\n    int n = result.length;\n    for (int i = 0 ; i < n ; ++i) {\n      Document doc = searcher.doc(result[i].doc);\n      String[] v = doc.getValues(\"tracer\");\n      for (int j = 0 ; j < v.length ; ++j) {\n        buff.append(v[j]);\n      }\n    }\n    assertEquals(expectedResult, buff.toString());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4275990669802f4c50b4de5d3252a0987854ad68","date":1260360486,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"src/test/org/apache/lucene/collation/CollationTestBase#assertMatches(Searcher,Query,Sort,String).mjava","pathOld":"contrib/collation/src/test/org/apache/lucene/collation/CollationTestBase#assertMatches(Searcher,Query,Sort,String).mjava","sourceNew":"  // Make sure the documents returned by the search match the expected list\n  // Copied from TestSort.java\n  private void assertMatches(Searcher searcher, Query query, Sort sort, \n                             String expectedResult) throws IOException {\n    ScoreDoc[] result = searcher.search(query, null, 1000, sort).scoreDocs;\n    StringBuilder buff = new StringBuilder(10);\n    int n = result.length;\n    for (int i = 0 ; i < n ; ++i) {\n      Document doc = searcher.doc(result[i].doc);\n      String[] v = doc.getValues(\"tracer\");\n      for (int j = 0 ; j < v.length ; ++j) {\n        buff.append(v[j]);\n      }\n    }\n    assertEquals(expectedResult, buff.toString());\n  }\n\n","sourceOld":"  // Make sure the documents returned by the search match the expected list\n  // Copied from TestSort.java\n  private void assertMatches(Searcher searcher, Query query, Sort sort, \n                             String expectedResult) throws IOException {\n    ScoreDoc[] result = searcher.search(query, null, 1000, sort).scoreDocs;\n    StringBuilder buff = new StringBuilder(10);\n    int n = result.length;\n    for (int i = 0 ; i < n ; ++i) {\n      Document doc = searcher.doc(result[i].doc);\n      String[] v = doc.getValues(\"tracer\");\n      for (int j = 0 ; j < v.length ; ++j) {\n        buff.append(v[j]);\n      }\n    }\n    assertEquals(expectedResult, buff.toString());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4275990669802f4c50b4de5d3252a0987854ad68":["4625cb7ffd7c9caaf2d62b206ba9a382d68da82c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"73b24dd99dc72171f84ace6f141e71e669f0221b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4625cb7ffd7c9caaf2d62b206ba9a382d68da82c":["73b24dd99dc72171f84ace6f141e71e669f0221b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4275990669802f4c50b4de5d3252a0987854ad68"]},"commit2Childs":{"4275990669802f4c50b4de5d3252a0987854ad68":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["73b24dd99dc72171f84ace6f141e71e669f0221b"],"73b24dd99dc72171f84ace6f141e71e669f0221b":["4625cb7ffd7c9caaf2d62b206ba9a382d68da82c"],"4625cb7ffd7c9caaf2d62b206ba9a382d68da82c":["4275990669802f4c50b4de5d3252a0987854ad68"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}