{"path":"solr/core/src/test/org/apache/solr/search/TestFastLRUCache#createCodeRegenerator().mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestFastLRUCache#createCodeRegenerator().mjava","pathOld":"solr/src/test/org/apache/solr/search/TestFastLRUCache#createCodeRegenerator().mjava","sourceNew":"  private CacheRegenerator createCodeRegenerator() {\n    CacheRegenerator cr = new CacheRegenerator() {\n        public boolean regenerateItem(SolrIndexSearcher newSearcher, SolrCache newCache,\n                                      SolrCache oldCache, Object oldKey, Object oldVal) throws IOException {\n          newCache.put(oldKey, oldVal);\n          return true;\n        }\n      };\n    return cr;\n  }\n\n","sourceOld":"  private CacheRegenerator createCodeRegenerator() {\n    CacheRegenerator cr = new CacheRegenerator() {\n        public boolean regenerateItem(SolrIndexSearcher newSearcher, SolrCache newCache,\n                                      SolrCache oldCache, Object oldKey, Object oldVal) throws IOException {\n          newCache.put(oldKey, oldVal);\n          return true;\n        }\n      };\n    return cr;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestFastLRUCache#createCodeRegenerator().mjava","pathOld":"solr/src/test/org/apache/solr/search/TestFastLRUCache#createCodeRegenerator().mjava","sourceNew":"  private CacheRegenerator createCodeRegenerator() {\n    CacheRegenerator cr = new CacheRegenerator() {\n        public boolean regenerateItem(SolrIndexSearcher newSearcher, SolrCache newCache,\n                                      SolrCache oldCache, Object oldKey, Object oldVal) throws IOException {\n          newCache.put(oldKey, oldVal);\n          return true;\n        }\n      };\n    return cr;\n  }\n\n","sourceOld":"  private CacheRegenerator createCodeRegenerator() {\n    CacheRegenerator cr = new CacheRegenerator() {\n        public boolean regenerateItem(SolrIndexSearcher newSearcher, SolrCache newCache,\n                                      SolrCache oldCache, Object oldKey, Object oldVal) throws IOException {\n          newCache.put(oldKey, oldVal);\n          return true;\n        }\n      };\n    return cr;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/search/TestFastLRUCache#createCodeRegenerator().mjava","pathOld":"solr/src/test/org/apache/solr/search/TestFastLRUCache#createCodeRegenerator().mjava","sourceNew":"  private CacheRegenerator createCodeRegenerator() {\n    CacheRegenerator cr = new CacheRegenerator() {\n        public boolean regenerateItem(SolrIndexSearcher newSearcher, SolrCache newCache,\n                                      SolrCache oldCache, Object oldKey, Object oldVal) throws IOException {\n          newCache.put(oldKey, oldVal);\n          return true;\n        }\n      };\n    return cr;\n  }\n\n","sourceOld":"  private CacheRegenerator createCodeRegenerator() {\n    CacheRegenerator cr = new CacheRegenerator() {\n        public boolean regenerateItem(SolrIndexSearcher newSearcher, SolrCache newCache,\n                                      SolrCache oldCache, Object oldKey, Object oldVal) throws IOException {\n          newCache.put(oldKey, oldVal);\n          return true;\n        }\n      };\n    return cr;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4d3e8520fd031bab31fd0e4d480e55958bc45efe","date":1340901565,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestFastLRUCache#createCodeRegenerator().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestFastLRUCache#createCodeRegenerator().mjava","sourceNew":"  private CacheRegenerator createCodeRegenerator() {\n    CacheRegenerator cr = new CacheRegenerator() {\n        public boolean regenerateItem(SolrIndexSearcher newSearcher, SolrCache newCache,\n                                      SolrCache oldCache, Object oldKey, Object oldVal) {\n          newCache.put(oldKey, oldVal);\n          return true;\n        }\n      };\n    return cr;\n  }\n\n","sourceOld":"  private CacheRegenerator createCodeRegenerator() {\n    CacheRegenerator cr = new CacheRegenerator() {\n        public boolean regenerateItem(SolrIndexSearcher newSearcher, SolrCache newCache,\n                                      SolrCache oldCache, Object oldKey, Object oldVal) throws IOException {\n          newCache.put(oldKey, oldVal);\n          return true;\n        }\n      };\n    return cr;\n  }\n\n","bugFix":["b870d11eae2250e41b4ed48d248bc043cbbd7711"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/search/TestFastLRUCache#createCodeRegenerator().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestFastLRUCache#createCodeRegenerator().mjava","sourceNew":"  private CacheRegenerator createCodeRegenerator() {\n    CacheRegenerator cr = new CacheRegenerator() {\n        public boolean regenerateItem(SolrIndexSearcher newSearcher, SolrCache newCache,\n                                      SolrCache oldCache, Object oldKey, Object oldVal) {\n          newCache.put(oldKey, oldVal);\n          return true;\n        }\n      };\n    return cr;\n  }\n\n","sourceOld":"  private CacheRegenerator createCodeRegenerator() {\n    CacheRegenerator cr = new CacheRegenerator() {\n        public boolean regenerateItem(SolrIndexSearcher newSearcher, SolrCache newCache,\n                                      SolrCache oldCache, Object oldKey, Object oldVal) throws IOException {\n          newCache.put(oldKey, oldVal);\n          return true;\n        }\n      };\n    return cr;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7530de27b87b961b51f01bd1299b7004d46e8823","date":1355236261,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestFastLRUCache#createCodeRegenerator().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestFastLRUCache#createCodeRegenerator().mjava","sourceNew":"  private CacheRegenerator createCodeRegenerator() {\n    CacheRegenerator cr = new CacheRegenerator() {\n        @Override\n        public boolean regenerateItem(SolrIndexSearcher newSearcher, SolrCache newCache,\n                                      SolrCache oldCache, Object oldKey, Object oldVal) {\n          newCache.put(oldKey, oldVal);\n          return true;\n        }\n      };\n    return cr;\n  }\n\n","sourceOld":"  private CacheRegenerator createCodeRegenerator() {\n    CacheRegenerator cr = new CacheRegenerator() {\n        public boolean regenerateItem(SolrIndexSearcher newSearcher, SolrCache newCache,\n                                      SolrCache oldCache, Object oldKey, Object oldVal) {\n          newCache.put(oldKey, oldVal);\n          return true;\n        }\n      };\n    return cr;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/search/TestFastLRUCache#createCodeRegenerator().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestFastLRUCache#createCodeRegenerator().mjava","sourceNew":"  private CacheRegenerator createCodeRegenerator() {\n    CacheRegenerator cr = new CacheRegenerator() {\n        @Override\n        public boolean regenerateItem(SolrIndexSearcher newSearcher, SolrCache newCache,\n                                      SolrCache oldCache, Object oldKey, Object oldVal) {\n          newCache.put(oldKey, oldVal);\n          return true;\n        }\n      };\n    return cr;\n  }\n\n","sourceOld":"  private CacheRegenerator createCodeRegenerator() {\n    CacheRegenerator cr = new CacheRegenerator() {\n        public boolean regenerateItem(SolrIndexSearcher newSearcher, SolrCache newCache,\n                                      SolrCache oldCache, Object oldKey, Object oldVal) {\n          newCache.put(oldKey, oldVal);\n          return true;\n        }\n      };\n    return cr;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1b5eb85061a04532d079d1ca2e6cfae6be263073","date":1377213475,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/search/TestFastLRUCache#createCodeRegenerator().mjava","sourceNew":null,"sourceOld":"  private CacheRegenerator createCodeRegenerator() {\n    CacheRegenerator cr = new CacheRegenerator() {\n        @Override\n        public boolean regenerateItem(SolrIndexSearcher newSearcher, SolrCache newCache,\n                                      SolrCache oldCache, Object oldKey, Object oldVal) {\n          newCache.put(oldKey, oldVal);\n          return true;\n        }\n      };\n    return cr;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3dffec77fb8f7d0e9ca4869dddd6af94528b4576","date":1377875202,"type":4,"author":"Han Jiang","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/search/TestFastLRUCache#createCodeRegenerator().mjava","sourceNew":null,"sourceOld":"  private CacheRegenerator createCodeRegenerator() {\n    CacheRegenerator cr = new CacheRegenerator() {\n        @Override\n        public boolean regenerateItem(SolrIndexSearcher newSearcher, SolrCache newCache,\n                                      SolrCache oldCache, Object oldKey, Object oldVal) {\n          newCache.put(oldKey, oldVal);\n          return true;\n        }\n      };\n    return cr;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["4d3e8520fd031bab31fd0e4d480e55958bc45efe","7530de27b87b961b51f01bd1299b7004d46e8823"],"1b5eb85061a04532d079d1ca2e6cfae6be263073":["7530de27b87b961b51f01bd1299b7004d46e8823"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":["7530de27b87b961b51f01bd1299b7004d46e8823","1b5eb85061a04532d079d1ca2e6cfae6be263073"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["c26f00b574427b55127e869b935845554afde1fa","4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4d3e8520fd031bab31fd0e4d480e55958bc45efe":["c26f00b574427b55127e869b935845554afde1fa"],"7530de27b87b961b51f01bd1299b7004d46e8823":["4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1b5eb85061a04532d079d1ca2e6cfae6be263073"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"1b5eb85061a04532d079d1ca2e6cfae6be263073":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["fe33227f6805edab2036cbb80645cc4e2d1fa424","4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":[],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"4d3e8520fd031bab31fd0e4d480e55958bc45efe":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","fe33227f6805edab2036cbb80645cc4e2d1fa424","7530de27b87b961b51f01bd1299b7004d46e8823"],"7530de27b87b961b51f01bd1299b7004d46e8823":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","1b5eb85061a04532d079d1ca2e6cfae6be263073","3dffec77fb8f7d0e9ca4869dddd6af94528b4576"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","3dffec77fb8f7d0e9ca4869dddd6af94528b4576","fe33227f6805edab2036cbb80645cc4e2d1fa424","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}