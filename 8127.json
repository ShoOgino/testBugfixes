{"path":"lucene/core/src/java/org/apache/lucene/index/SimpleMergedSegmentWarmer#warm(LeafReader).mjava","commits":[{"id":"c9fb5f46e264daf5ba3860defe623a89d202dd87","date":1411516315,"type":0,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SimpleMergedSegmentWarmer#warm(LeafReader).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void warm(LeafReader reader) throws IOException {\n    long startTime = System.currentTimeMillis();\n    int indexedCount = 0;\n    int docValuesCount = 0;\n    int normsCount = 0;\n    for (FieldInfo info : reader.getFieldInfos()) {\n      if (info.isIndexed()) {\n        reader.terms(info.name); \n        indexedCount++;\n        \n        if (info.hasNorms()) {\n          reader.getNormValues(info.name);\n          normsCount++;\n        }\n      }\n      \n      if (info.hasDocValues()) {\n        switch(info.getDocValuesType()) {\n          case NUMERIC:\n            reader.getNumericDocValues(info.name);\n            break;\n          case BINARY:\n            reader.getBinaryDocValues(info.name);\n            break;\n          case SORTED:\n            reader.getSortedDocValues(info.name);\n            break;\n          case SORTED_NUMERIC:\n            reader.getSortedNumericDocValues(info.name);\n            break;\n          case SORTED_SET:\n            reader.getSortedSetDocValues(info.name);\n            break;\n          default:\n            assert false; // unknown dv type\n        }\n        docValuesCount++;\n      }   \n    }\n    \n    reader.document(0);\n    reader.getTermVectors(0);\n    \n    if (infoStream.isEnabled(\"SMSW\")) {\n      infoStream.message(\"SMSW\", \n             \"Finished warming segment: \" + reader + \n             \", indexed=\" + indexedCount + \n             \", docValues=\" + docValuesCount +\n             \", norms=\" + normsCount +\n             \", time=\" + (System.currentTimeMillis() - startTime));\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"556a4aab886d75371b2af129d87be3c2795cea76","date":1414954991,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SimpleMergedSegmentWarmer#warm(LeafReader).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SimpleMergedSegmentWarmer#warm(LeafReader).mjava","sourceNew":"  @Override\n  public void warm(LeafReader reader) throws IOException {\n    long startTime = System.currentTimeMillis();\n    int indexedCount = 0;\n    int docValuesCount = 0;\n    int normsCount = 0;\n    for (FieldInfo info : reader.getFieldInfos()) {\n      if (info.getIndexOptions() != IndexOptions.NONE) {\n        reader.terms(info.name); \n        indexedCount++;\n        \n        if (info.hasNorms()) {\n          reader.getNormValues(info.name);\n          normsCount++;\n        }\n      }\n      \n      if (info.getDocValuesType() != DocValuesType.NONE) {\n        switch(info.getDocValuesType()) {\n          case NUMERIC:\n            reader.getNumericDocValues(info.name);\n            break;\n          case BINARY:\n            reader.getBinaryDocValues(info.name);\n            break;\n          case SORTED:\n            reader.getSortedDocValues(info.name);\n            break;\n          case SORTED_NUMERIC:\n            reader.getSortedNumericDocValues(info.name);\n            break;\n          case SORTED_SET:\n            reader.getSortedSetDocValues(info.name);\n            break;\n          default:\n            assert false; // unknown dv type\n        }\n        docValuesCount++;\n      }   \n    }\n    \n    reader.document(0);\n    reader.getTermVectors(0);\n    \n    if (infoStream.isEnabled(\"SMSW\")) {\n      infoStream.message(\"SMSW\", \n             \"Finished warming segment: \" + reader + \n             \", indexed=\" + indexedCount + \n             \", docValues=\" + docValuesCount +\n             \", norms=\" + normsCount +\n             \", time=\" + (System.currentTimeMillis() - startTime));\n    }\n  }\n\n","sourceOld":"  @Override\n  public void warm(LeafReader reader) throws IOException {\n    long startTime = System.currentTimeMillis();\n    int indexedCount = 0;\n    int docValuesCount = 0;\n    int normsCount = 0;\n    for (FieldInfo info : reader.getFieldInfos()) {\n      if (info.isIndexed()) {\n        reader.terms(info.name); \n        indexedCount++;\n        \n        if (info.hasNorms()) {\n          reader.getNormValues(info.name);\n          normsCount++;\n        }\n      }\n      \n      if (info.hasDocValues()) {\n        switch(info.getDocValuesType()) {\n          case NUMERIC:\n            reader.getNumericDocValues(info.name);\n            break;\n          case BINARY:\n            reader.getBinaryDocValues(info.name);\n            break;\n          case SORTED:\n            reader.getSortedDocValues(info.name);\n            break;\n          case SORTED_NUMERIC:\n            reader.getSortedNumericDocValues(info.name);\n            break;\n          case SORTED_SET:\n            reader.getSortedSetDocValues(info.name);\n            break;\n          default:\n            assert false; // unknown dv type\n        }\n        docValuesCount++;\n      }   \n    }\n    \n    reader.document(0);\n    reader.getTermVectors(0);\n    \n    if (infoStream.isEnabled(\"SMSW\")) {\n      infoStream.message(\"SMSW\", \n             \"Finished warming segment: \" + reader + \n             \", indexed=\" + indexedCount + \n             \", docValues=\" + docValuesCount +\n             \", norms=\" + normsCount +\n             \", time=\" + (System.currentTimeMillis() - startTime));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3dcdf0501ecb64dde73646fe1f7533c1586deac1","date":1507107556,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SimpleMergedSegmentWarmer#warm(LeafReader).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SimpleMergedSegmentWarmer#warm(LeafReader).mjava","sourceNew":"  @Override\n  public void warm(LeafReader reader) throws IOException {\n    long startTime = System.currentTimeMillis();\n    int indexedCount = 0;\n    int docValuesCount = 0;\n    int normsCount = 0;\n    for (FieldInfo info : reader.getFieldInfos()) {\n      if (info.getIndexOptions() != IndexOptions.NONE) {\n        reader.terms(info.name); \n        indexedCount++;\n        \n        if (info.hasNorms()) {\n          reader.getNormValues(info.name);\n          normsCount++;\n        }\n      }\n\n      if (info.getDocValuesType() != DocValuesType.NONE) {\n        switch(info.getDocValuesType()) {\n          case NUMERIC:\n            reader.getNumericDocValues(info.name);\n            break;\n          case BINARY:\n            reader.getBinaryDocValues(info.name);\n            break;\n          case SORTED:\n            reader.getSortedDocValues(info.name);\n            break;\n          case SORTED_NUMERIC:\n            reader.getSortedNumericDocValues(info.name);\n            break;\n          case SORTED_SET:\n            reader.getSortedSetDocValues(info.name);\n            break;\n          default:\n            assert false; // unknown dv type\n        }\n        docValuesCount++;\n      }   \n    }\n    \n    reader.document(0);\n    reader.getTermVectors(0);\n    \n    if (infoStream.isEnabled(\"SMSW\")) {\n      infoStream.message(\"SMSW\", \n             \"Finished warming segment: \" + reader + \n             \", indexed=\" + indexedCount + \n             \", docValues=\" + docValuesCount +\n             \", norms=\" + normsCount +\n             \", time=\" + (System.currentTimeMillis() - startTime));\n    }\n  }\n\n","sourceOld":"  @Override\n  public void warm(LeafReader reader) throws IOException {\n    long startTime = System.currentTimeMillis();\n    int indexedCount = 0;\n    int docValuesCount = 0;\n    int normsCount = 0;\n    for (FieldInfo info : reader.getFieldInfos()) {\n      if (info.getIndexOptions() != IndexOptions.NONE) {\n        reader.terms(info.name); \n        indexedCount++;\n        \n        if (info.hasNorms()) {\n          reader.getNormValues(info.name);\n          normsCount++;\n        }\n      }\n      \n      if (info.getDocValuesType() != DocValuesType.NONE) {\n        switch(info.getDocValuesType()) {\n          case NUMERIC:\n            reader.getNumericDocValues(info.name);\n            break;\n          case BINARY:\n            reader.getBinaryDocValues(info.name);\n            break;\n          case SORTED:\n            reader.getSortedDocValues(info.name);\n            break;\n          case SORTED_NUMERIC:\n            reader.getSortedNumericDocValues(info.name);\n            break;\n          case SORTED_SET:\n            reader.getSortedSetDocValues(info.name);\n            break;\n          default:\n            assert false; // unknown dv type\n        }\n        docValuesCount++;\n      }   \n    }\n    \n    reader.document(0);\n    reader.getTermVectors(0);\n    \n    if (infoStream.isEnabled(\"SMSW\")) {\n      infoStream.message(\"SMSW\", \n             \"Finished warming segment: \" + reader + \n             \", indexed=\" + indexedCount + \n             \", docValues=\" + docValuesCount +\n             \", norms=\" + normsCount +\n             \", time=\" + (System.currentTimeMillis() - startTime));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3dcdf0501ecb64dde73646fe1f7533c1586deac1":["556a4aab886d75371b2af129d87be3c2795cea76"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"556a4aab886d75371b2af129d87be3c2795cea76":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3dcdf0501ecb64dde73646fe1f7533c1586deac1"]},"commit2Childs":{"3dcdf0501ecb64dde73646fe1f7533c1586deac1":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"556a4aab886d75371b2af129d87be3c2795cea76":["3dcdf0501ecb64dde73646fe1f7533c1586deac1"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["556a4aab886d75371b2af129d87be3c2795cea76"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}