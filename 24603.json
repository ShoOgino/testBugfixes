{"path":"solr/core/src/test/org/apache/solr/cloud/CreateRoutedAliasTest#testCollectionNamesMustBeAbsent().mjava","commits":[{"id":"db21ceba3043cc8e4145472fef08e5b136892778","date":1520453762,"type":0,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/CreateRoutedAliasTest#testCollectionNamesMustBeAbsent().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testCollectionNamesMustBeAbsent() throws Exception {\n    CollectionAdminRequest.createCollection(\"collection1meta\", \"_default\", 2, 1).process(cluster.getSolrClient());\n    CollectionAdminRequest.createCollection(\"collection2meta\", \"_default\", 1, 1).process(cluster.getSolrClient());\n    waitForState(\"Expected collection1 to be created with 2 shards and 1 replica\", \"collection1meta\", clusterShape(2, 1));\n    waitForState(\"Expected collection2 to be created with 1 shard and 1 replica\", \"collection2meta\", clusterShape(1, 1));\n    ZkStateReader zkStateReader = cluster.getSolrClient().getZkStateReader();\n    zkStateReader.createClusterStateWatchersAndUpdate();\n\n    final String baseUrl = cluster.getRandomJetty(random()).getBaseUrl().toString();\n    HttpGet get = new HttpGet(baseUrl + \"/admin/collections?action=CREATEALIAS\" +\n        \"&wt=json\" +\n        \"&name=\" + getTestName() +\n        \"&collections=collection1meta,collection2meta\" +\n        \"&router.field=evt_dt\" +\n        \"&router.name=time\" +\n        \"&router.start=2018-01-15T00:00:00Z\" +\n        \"&router.interval=%2B30MINUTE\" +\n        \"&create-collection.collection.configName=_default\" +\n        \"&create-collection.numShards=1\");\n    assertFailure(get, \"Collections cannot be specified\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3c9595c75582a7ea7efb585014102ed83f2d9c8b","date":1523581112,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/CreateRoutedAliasTest#testCollectionNamesMustBeAbsent().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/CreateRoutedAliasTest#testCollectionNamesMustBeAbsent().mjava","sourceNew":"  @Test\n  @BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\") // 09-Apr-2018\n  public void testCollectionNamesMustBeAbsent() throws Exception {\n    CollectionAdminRequest.createCollection(\"collection1meta\", \"_default\", 2, 1).process(cluster.getSolrClient());\n    CollectionAdminRequest.createCollection(\"collection2meta\", \"_default\", 1, 1).process(cluster.getSolrClient());\n    waitForState(\"Expected collection1 to be created with 2 shards and 1 replica\", \"collection1meta\", clusterShape(2, 1));\n    waitForState(\"Expected collection2 to be created with 1 shard and 1 replica\", \"collection2meta\", clusterShape(1, 1));\n    ZkStateReader zkStateReader = cluster.getSolrClient().getZkStateReader();\n    zkStateReader.createClusterStateWatchersAndUpdate();\n\n    final String baseUrl = cluster.getRandomJetty(random()).getBaseUrl().toString();\n    HttpGet get = new HttpGet(baseUrl + \"/admin/collections?action=CREATEALIAS\" +\n        \"&wt=json\" +\n        \"&name=\" + getTestName() +\n        \"&collections=collection1meta,collection2meta\" +\n        \"&router.field=evt_dt\" +\n        \"&router.name=time\" +\n        \"&router.start=2018-01-15T00:00:00Z\" +\n        \"&router.interval=%2B30MINUTE\" +\n        \"&create-collection.collection.configName=_default\" +\n        \"&create-collection.numShards=1\");\n    assertFailure(get, \"Collections cannot be specified\");\n  }\n\n","sourceOld":"  @Test\n  public void testCollectionNamesMustBeAbsent() throws Exception {\n    CollectionAdminRequest.createCollection(\"collection1meta\", \"_default\", 2, 1).process(cluster.getSolrClient());\n    CollectionAdminRequest.createCollection(\"collection2meta\", \"_default\", 1, 1).process(cluster.getSolrClient());\n    waitForState(\"Expected collection1 to be created with 2 shards and 1 replica\", \"collection1meta\", clusterShape(2, 1));\n    waitForState(\"Expected collection2 to be created with 1 shard and 1 replica\", \"collection2meta\", clusterShape(1, 1));\n    ZkStateReader zkStateReader = cluster.getSolrClient().getZkStateReader();\n    zkStateReader.createClusterStateWatchersAndUpdate();\n\n    final String baseUrl = cluster.getRandomJetty(random()).getBaseUrl().toString();\n    HttpGet get = new HttpGet(baseUrl + \"/admin/collections?action=CREATEALIAS\" +\n        \"&wt=json\" +\n        \"&name=\" + getTestName() +\n        \"&collections=collection1meta,collection2meta\" +\n        \"&router.field=evt_dt\" +\n        \"&router.name=time\" +\n        \"&router.start=2018-01-15T00:00:00Z\" +\n        \"&router.interval=%2B30MINUTE\" +\n        \"&create-collection.collection.configName=_default\" +\n        \"&create-collection.numShards=1\");\n    assertFailure(get, \"Collections cannot be specified\");\n  }\n\n","bugFix":null,"bugIntro":["a980795a56f2fcbc94caeb3233071312d5684d59"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"6b87d1f8719d7f05be003f3477450b74af13706a","date":1523590376,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/CreateRoutedAliasTest#testCollectionNamesMustBeAbsent().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/CreateRoutedAliasTest#testCollectionNamesMustBeAbsent().mjava","sourceNew":"  @Test\n  @BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\") // 09-Apr-2018\n  public void testCollectionNamesMustBeAbsent() throws Exception {\n    CollectionAdminRequest.createCollection(\"collection1meta\", \"_default\", 2, 1).process(cluster.getSolrClient());\n    CollectionAdminRequest.createCollection(\"collection2meta\", \"_default\", 1, 1).process(cluster.getSolrClient());\n    waitForState(\"Expected collection1 to be created with 2 shards and 1 replica\", \"collection1meta\", clusterShape(2, 1));\n    waitForState(\"Expected collection2 to be created with 1 shard and 1 replica\", \"collection2meta\", clusterShape(1, 1));\n    ZkStateReader zkStateReader = cluster.getSolrClient().getZkStateReader();\n    zkStateReader.createClusterStateWatchersAndUpdate();\n\n    final String baseUrl = cluster.getRandomJetty(random()).getBaseUrl().toString();\n    HttpGet get = new HttpGet(baseUrl + \"/admin/collections?action=CREATEALIAS\" +\n        \"&wt=json\" +\n        \"&name=\" + getTestName() +\n        \"&collections=collection1meta,collection2meta\" +\n        \"&router.field=evt_dt\" +\n        \"&router.name=time\" +\n        \"&router.start=2018-01-15T00:00:00Z\" +\n        \"&router.interval=%2B30MINUTE\" +\n        \"&create-collection.collection.configName=_default\" +\n        \"&create-collection.numShards=1\");\n    assertFailure(get, \"Collections cannot be specified\");\n  }\n\n","sourceOld":"  @Test\n  public void testCollectionNamesMustBeAbsent() throws Exception {\n    CollectionAdminRequest.createCollection(\"collection1meta\", \"_default\", 2, 1).process(cluster.getSolrClient());\n    CollectionAdminRequest.createCollection(\"collection2meta\", \"_default\", 1, 1).process(cluster.getSolrClient());\n    waitForState(\"Expected collection1 to be created with 2 shards and 1 replica\", \"collection1meta\", clusterShape(2, 1));\n    waitForState(\"Expected collection2 to be created with 1 shard and 1 replica\", \"collection2meta\", clusterShape(1, 1));\n    ZkStateReader zkStateReader = cluster.getSolrClient().getZkStateReader();\n    zkStateReader.createClusterStateWatchersAndUpdate();\n\n    final String baseUrl = cluster.getRandomJetty(random()).getBaseUrl().toString();\n    HttpGet get = new HttpGet(baseUrl + \"/admin/collections?action=CREATEALIAS\" +\n        \"&wt=json\" +\n        \"&name=\" + getTestName() +\n        \"&collections=collection1meta,collection2meta\" +\n        \"&router.field=evt_dt\" +\n        \"&router.name=time\" +\n        \"&router.start=2018-01-15T00:00:00Z\" +\n        \"&router.interval=%2B30MINUTE\" +\n        \"&create-collection.collection.configName=_default\" +\n        \"&create-collection.numShards=1\");\n    assertFailure(get, \"Collections cannot be specified\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a980795a56f2fcbc94caeb3233071312d5684d59","date":1524255736,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/CreateRoutedAliasTest#testCollectionNamesMustBeAbsent().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/CreateRoutedAliasTest#testCollectionNamesMustBeAbsent().mjava","sourceNew":"  @Test\n  //@BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\") // 09-Apr-2018\n  public void testCollectionNamesMustBeAbsent() throws Exception {\n    CollectionAdminRequest.createCollection(\"collection1meta\", \"_default\", 2, 1).process(cluster.getSolrClient());\n    CollectionAdminRequest.createCollection(\"collection2meta\", \"_default\", 1, 1).process(cluster.getSolrClient());\n    waitForState(\"Expected collection1 to be created with 2 shards and 1 replica\", \"collection1meta\", clusterShape(2, 1));\n    waitForState(\"Expected collection2 to be created with 1 shard and 1 replica\", \"collection2meta\", clusterShape(1, 1));\n    ZkStateReader zkStateReader = cluster.getSolrClient().getZkStateReader();\n    zkStateReader.createClusterStateWatchersAndUpdate();\n\n    final String baseUrl = cluster.getRandomJetty(random()).getBaseUrl().toString();\n    HttpGet get = new HttpGet(baseUrl + \"/admin/collections?action=CREATEALIAS\" +\n        \"&wt=json\" +\n        \"&name=\" + getTestName() +\n        \"&collections=collection1meta,collection2meta\" +\n        \"&router.field=evt_dt\" +\n        \"&router.name=time\" +\n        \"&router.start=2018-01-15T00:00:00Z\" +\n        \"&router.interval=%2B30MINUTE\" +\n        \"&create-collection.collection.configName=_default\" +\n        \"&create-collection.numShards=1\");\n    assertFailure(get, \"Collections cannot be specified\");\n  }\n\n","sourceOld":"  @Test\n  @BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\") // 09-Apr-2018\n  public void testCollectionNamesMustBeAbsent() throws Exception {\n    CollectionAdminRequest.createCollection(\"collection1meta\", \"_default\", 2, 1).process(cluster.getSolrClient());\n    CollectionAdminRequest.createCollection(\"collection2meta\", \"_default\", 1, 1).process(cluster.getSolrClient());\n    waitForState(\"Expected collection1 to be created with 2 shards and 1 replica\", \"collection1meta\", clusterShape(2, 1));\n    waitForState(\"Expected collection2 to be created with 1 shard and 1 replica\", \"collection2meta\", clusterShape(1, 1));\n    ZkStateReader zkStateReader = cluster.getSolrClient().getZkStateReader();\n    zkStateReader.createClusterStateWatchersAndUpdate();\n\n    final String baseUrl = cluster.getRandomJetty(random()).getBaseUrl().toString();\n    HttpGet get = new HttpGet(baseUrl + \"/admin/collections?action=CREATEALIAS\" +\n        \"&wt=json\" +\n        \"&name=\" + getTestName() +\n        \"&collections=collection1meta,collection2meta\" +\n        \"&router.field=evt_dt\" +\n        \"&router.name=time\" +\n        \"&router.start=2018-01-15T00:00:00Z\" +\n        \"&router.interval=%2B30MINUTE\" +\n        \"&create-collection.collection.configName=_default\" +\n        \"&create-collection.numShards=1\");\n    assertFailure(get, \"Collections cannot be specified\");\n  }\n\n","bugFix":["3c9595c75582a7ea7efb585014102ed83f2d9c8b"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7a7544ad4b63d1b5f556c3da8f9c63d332aa034e","date":1529622176,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/CreateRoutedAliasTest#testCollectionNamesMustBeAbsent().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/CreateRoutedAliasTest#testCollectionNamesMustBeAbsent().mjava","sourceNew":"  @Test\n  public void testCollectionNamesMustBeAbsent() throws Exception {\n    CollectionAdminRequest.createCollection(\"collection1meta\", \"_default\", 2, 1).process(cluster.getSolrClient());\n    CollectionAdminRequest.createCollection(\"collection2meta\", \"_default\", 1, 1).process(cluster.getSolrClient());\n    waitForState(\"Expected collection1 to be created with 2 shards and 1 replica\", \"collection1meta\", clusterShape(2, 1));\n    waitForState(\"Expected collection2 to be created with 1 shard and 1 replica\", \"collection2meta\", clusterShape(1, 1));\n    ZkStateReader zkStateReader = cluster.getSolrClient().getZkStateReader();\n    zkStateReader.createClusterStateWatchersAndUpdate();\n\n    final String baseUrl = cluster.getRandomJetty(random()).getBaseUrl().toString();\n    HttpGet get = new HttpGet(baseUrl + \"/admin/collections?action=CREATEALIAS\" +\n        \"&wt=json\" +\n        \"&name=\" + getTestName() +\n        \"&collections=collection1meta,collection2meta\" +\n        \"&router.field=evt_dt\" +\n        \"&router.name=time\" +\n        \"&router.start=2018-01-15T00:00:00Z\" +\n        \"&router.interval=%2B30MINUTE\" +\n        \"&create-collection.collection.configName=_default\" +\n        \"&create-collection.numShards=1\");\n    assertFailure(get, \"Collections cannot be specified\");\n  }\n\n","sourceOld":"  @Test\n  //@BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\") // 09-Apr-2018\n  public void testCollectionNamesMustBeAbsent() throws Exception {\n    CollectionAdminRequest.createCollection(\"collection1meta\", \"_default\", 2, 1).process(cluster.getSolrClient());\n    CollectionAdminRequest.createCollection(\"collection2meta\", \"_default\", 1, 1).process(cluster.getSolrClient());\n    waitForState(\"Expected collection1 to be created with 2 shards and 1 replica\", \"collection1meta\", clusterShape(2, 1));\n    waitForState(\"Expected collection2 to be created with 1 shard and 1 replica\", \"collection2meta\", clusterShape(1, 1));\n    ZkStateReader zkStateReader = cluster.getSolrClient().getZkStateReader();\n    zkStateReader.createClusterStateWatchersAndUpdate();\n\n    final String baseUrl = cluster.getRandomJetty(random()).getBaseUrl().toString();\n    HttpGet get = new HttpGet(baseUrl + \"/admin/collections?action=CREATEALIAS\" +\n        \"&wt=json\" +\n        \"&name=\" + getTestName() +\n        \"&collections=collection1meta,collection2meta\" +\n        \"&router.field=evt_dt\" +\n        \"&router.name=time\" +\n        \"&router.start=2018-01-15T00:00:00Z\" +\n        \"&router.interval=%2B30MINUTE\" +\n        \"&create-collection.collection.configName=_default\" +\n        \"&create-collection.numShards=1\");\n    assertFailure(get, \"Collections cannot be specified\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26","date":1531589977,"type":3,"author":"Michael Braun","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/CreateRoutedAliasTest#testCollectionNamesMustBeAbsent().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/CreateRoutedAliasTest#testCollectionNamesMustBeAbsent().mjava","sourceNew":"  @Test\n  public void testCollectionNamesMustBeAbsent() throws Exception {\n    CollectionAdminRequest.createCollection(\"collection1meta\", \"_default\", 2, 1).process(cluster.getSolrClient());\n    CollectionAdminRequest.createCollection(\"collection2meta\", \"_default\", 1, 1).process(cluster.getSolrClient());\n    waitForState(\"Expected collection1 to be created with 2 shards and 1 replica\", \"collection1meta\", clusterShape(2, 1));\n    waitForState(\"Expected collection2 to be created with 1 shard and 1 replica\", \"collection2meta\", clusterShape(1, 1));\n    ZkStateReader zkStateReader = cluster.getSolrClient().getZkStateReader();\n    zkStateReader.createClusterStateWatchersAndUpdate();\n\n    final String baseUrl = cluster.getRandomJetty(random()).getBaseUrl().toString();\n    HttpGet get = new HttpGet(baseUrl + \"/admin/collections?action=CREATEALIAS\" +\n        \"&wt=json\" +\n        \"&name=\" + getTestName() +\n        \"&collections=collection1meta,collection2meta\" +\n        \"&router.field=evt_dt\" +\n        \"&router.name=time\" +\n        \"&router.start=2018-01-15T00:00:00Z\" +\n        \"&router.interval=%2B30MINUTE\" +\n        \"&create-collection.collection.configName=_default\" +\n        \"&create-collection.numShards=1\");\n    assertFailure(get, \"Collections cannot be specified\");\n  }\n\n","sourceOld":"  @Test\n  //@BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\") // 09-Apr-2018\n  public void testCollectionNamesMustBeAbsent() throws Exception {\n    CollectionAdminRequest.createCollection(\"collection1meta\", \"_default\", 2, 1).process(cluster.getSolrClient());\n    CollectionAdminRequest.createCollection(\"collection2meta\", \"_default\", 1, 1).process(cluster.getSolrClient());\n    waitForState(\"Expected collection1 to be created with 2 shards and 1 replica\", \"collection1meta\", clusterShape(2, 1));\n    waitForState(\"Expected collection2 to be created with 1 shard and 1 replica\", \"collection2meta\", clusterShape(1, 1));\n    ZkStateReader zkStateReader = cluster.getSolrClient().getZkStateReader();\n    zkStateReader.createClusterStateWatchersAndUpdate();\n\n    final String baseUrl = cluster.getRandomJetty(random()).getBaseUrl().toString();\n    HttpGet get = new HttpGet(baseUrl + \"/admin/collections?action=CREATEALIAS\" +\n        \"&wt=json\" +\n        \"&name=\" + getTestName() +\n        \"&collections=collection1meta,collection2meta\" +\n        \"&router.field=evt_dt\" +\n        \"&router.name=time\" +\n        \"&router.start=2018-01-15T00:00:00Z\" +\n        \"&router.interval=%2B30MINUTE\" +\n        \"&create-collection.collection.configName=_default\" +\n        \"&create-collection.numShards=1\");\n    assertFailure(get, \"Collections cannot be specified\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","date":1531905561,"type":3,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/CreateRoutedAliasTest#testCollectionNamesMustBeAbsent().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/CreateRoutedAliasTest#testCollectionNamesMustBeAbsent().mjava","sourceNew":"  @Test\n  public void testCollectionNamesMustBeAbsent() throws Exception {\n    CollectionAdminRequest.createCollection(\"collection1meta\", \"_default\", 2, 1).process(cluster.getSolrClient());\n    CollectionAdminRequest.createCollection(\"collection2meta\", \"_default\", 1, 1).process(cluster.getSolrClient());\n    waitForState(\"Expected collection1 to be created with 2 shards and 1 replica\", \"collection1meta\", clusterShape(2, 1));\n    waitForState(\"Expected collection2 to be created with 1 shard and 1 replica\", \"collection2meta\", clusterShape(1, 1));\n    ZkStateReader zkStateReader = cluster.getSolrClient().getZkStateReader();\n    zkStateReader.createClusterStateWatchersAndUpdate();\n\n    final String baseUrl = cluster.getRandomJetty(random()).getBaseUrl().toString();\n    HttpGet get = new HttpGet(baseUrl + \"/admin/collections?action=CREATEALIAS\" +\n        \"&wt=json\" +\n        \"&name=\" + getTestName() +\n        \"&collections=collection1meta,collection2meta\" +\n        \"&router.field=evt_dt\" +\n        \"&router.name=time\" +\n        \"&router.start=2018-01-15T00:00:00Z\" +\n        \"&router.interval=%2B30MINUTE\" +\n        \"&create-collection.collection.configName=_default\" +\n        \"&create-collection.numShards=1\");\n    assertFailure(get, \"Collections cannot be specified\");\n  }\n\n","sourceOld":"  @Test\n  //@BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\") // 09-Apr-2018\n  public void testCollectionNamesMustBeAbsent() throws Exception {\n    CollectionAdminRequest.createCollection(\"collection1meta\", \"_default\", 2, 1).process(cluster.getSolrClient());\n    CollectionAdminRequest.createCollection(\"collection2meta\", \"_default\", 1, 1).process(cluster.getSolrClient());\n    waitForState(\"Expected collection1 to be created with 2 shards and 1 replica\", \"collection1meta\", clusterShape(2, 1));\n    waitForState(\"Expected collection2 to be created with 1 shard and 1 replica\", \"collection2meta\", clusterShape(1, 1));\n    ZkStateReader zkStateReader = cluster.getSolrClient().getZkStateReader();\n    zkStateReader.createClusterStateWatchersAndUpdate();\n\n    final String baseUrl = cluster.getRandomJetty(random()).getBaseUrl().toString();\n    HttpGet get = new HttpGet(baseUrl + \"/admin/collections?action=CREATEALIAS\" +\n        \"&wt=json\" +\n        \"&name=\" + getTestName() +\n        \"&collections=collection1meta,collection2meta\" +\n        \"&router.field=evt_dt\" +\n        \"&router.name=time\" +\n        \"&router.start=2018-01-15T00:00:00Z\" +\n        \"&router.interval=%2B30MINUTE\" +\n        \"&create-collection.collection.configName=_default\" +\n        \"&create-collection.numShards=1\");\n    assertFailure(get, \"Collections cannot be specified\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb222a3f9d9421d5c95afce73013fbd8de07ea1f","date":1543514331,"type":3,"author":"markrmiller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/CreateRoutedAliasTest#testCollectionNamesMustBeAbsent().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/CreateRoutedAliasTest#testCollectionNamesMustBeAbsent().mjava","sourceNew":"  @Test\n  public void testCollectionNamesMustBeAbsent() throws Exception {\n    CollectionAdminRequest.createCollection(\"collection1meta\", \"_default\", 2, 1).process(cluster.getSolrClient());\n    CollectionAdminRequest.createCollection(\"collection2meta\", \"_default\", 1, 1).process(cluster.getSolrClient());\n    \n    cluster.waitForActiveCollection(\"collection1meta\", 2, 2);\n    cluster.waitForActiveCollection(\"collection2meta\", 1, 1);\n    \n    waitForState(\"Expected collection1 to be created with 2 shards and 1 replica\", \"collection1meta\", clusterShape(2, 2));\n    waitForState(\"Expected collection2 to be created with 1 shard and 1 replica\", \"collection2meta\", clusterShape(1, 1));\n    ZkStateReader zkStateReader = cluster.getSolrClient().getZkStateReader();\n    zkStateReader.createClusterStateWatchersAndUpdate();\n\n    final String baseUrl = cluster.getRandomJetty(random()).getBaseUrl().toString();\n    HttpGet get = new HttpGet(baseUrl + \"/admin/collections?action=CREATEALIAS\" +\n        \"&wt=json\" +\n        \"&name=\" + getTestName() +\n        \"&collections=collection1meta,collection2meta\" +\n        \"&router.field=evt_dt\" +\n        \"&router.name=time\" +\n        \"&router.start=2018-01-15T00:00:00Z\" +\n        \"&router.interval=%2B30MINUTE\" +\n        \"&create-collection.collection.configName=_default\" +\n        \"&create-collection.numShards=1\");\n    assertFailure(get, \"Collections cannot be specified\");\n  }\n\n","sourceOld":"  @Test\n  public void testCollectionNamesMustBeAbsent() throws Exception {\n    CollectionAdminRequest.createCollection(\"collection1meta\", \"_default\", 2, 1).process(cluster.getSolrClient());\n    CollectionAdminRequest.createCollection(\"collection2meta\", \"_default\", 1, 1).process(cluster.getSolrClient());\n    waitForState(\"Expected collection1 to be created with 2 shards and 1 replica\", \"collection1meta\", clusterShape(2, 1));\n    waitForState(\"Expected collection2 to be created with 1 shard and 1 replica\", \"collection2meta\", clusterShape(1, 1));\n    ZkStateReader zkStateReader = cluster.getSolrClient().getZkStateReader();\n    zkStateReader.createClusterStateWatchersAndUpdate();\n\n    final String baseUrl = cluster.getRandomJetty(random()).getBaseUrl().toString();\n    HttpGet get = new HttpGet(baseUrl + \"/admin/collections?action=CREATEALIAS\" +\n        \"&wt=json\" +\n        \"&name=\" + getTestName() +\n        \"&collections=collection1meta,collection2meta\" +\n        \"&router.field=evt_dt\" +\n        \"&router.name=time\" +\n        \"&router.start=2018-01-15T00:00:00Z\" +\n        \"&router.interval=%2B30MINUTE\" +\n        \"&create-collection.collection.configName=_default\" +\n        \"&create-collection.numShards=1\");\n    assertFailure(get, \"Collections cannot be specified\");\n  }\n\n","bugFix":["db21ceba3043cc8e4145472fef08e5b136892778"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"105e345cf3c0abed3cb6c109274a379cb2655adc","date":1561038472,"type":3,"author":"Gus Heck","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/CreateRoutedAliasTest#testCollectionNamesMustBeAbsent().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/CreateRoutedAliasTest#testCollectionNamesMustBeAbsent().mjava","sourceNew":"  @Test\n  public void testCollectionNamesMustBeAbsent() throws Exception {\n    CollectionAdminRequest.createCollection(\"collection1meta\", \"_default\", 2, 1).process(cluster.getSolrClient());\n    CollectionAdminRequest.createCollection(\"collection2meta\", \"_default\", 1, 1).process(cluster.getSolrClient());\n\n    cluster.waitForActiveCollection(\"collection1meta\", 2, 2);\n    cluster.waitForActiveCollection(\"collection2meta\", 1, 1);\n\n    waitForState(\"Expected collection1 to be created with 2 shards and 1 replica\", \"collection1meta\", clusterShape(2, 2));\n    waitForState(\"Expected collection2 to be created with 1 shard and 1 replica\", \"collection2meta\", clusterShape(1, 1));\n    ZkStateReader zkStateReader = cluster.getSolrClient().getZkStateReader();\n    zkStateReader.createClusterStateWatchersAndUpdate();\n\n    final String baseUrl = cluster.getRandomJetty(random()).getBaseUrl().toString();\n    HttpGet get = new HttpGet(baseUrl + \"/admin/collections?action=CREATEALIAS\" +\n        \"&wt=json\" +\n        \"&name=\" + getTestName() +\n        \"&collections=collection1meta,collection2meta\" +\n        \"&router.field=evt_dt\" +\n        \"&router.name=time\" +\n        \"&router.start=2018-01-15T00:00:00Z\" +\n        \"&router.interval=%2B30MINUTE\" +\n        \"&create-collection.collection.configName=_default\" +\n        \"&create-collection.numShards=1\");\n    assertFailure(get, \"Collections cannot be specified\");\n  }\n\n","sourceOld":"  @Test\n  public void testCollectionNamesMustBeAbsent() throws Exception {\n    CollectionAdminRequest.createCollection(\"collection1meta\", \"_default\", 2, 1).process(cluster.getSolrClient());\n    CollectionAdminRequest.createCollection(\"collection2meta\", \"_default\", 1, 1).process(cluster.getSolrClient());\n    \n    cluster.waitForActiveCollection(\"collection1meta\", 2, 2);\n    cluster.waitForActiveCollection(\"collection2meta\", 1, 1);\n    \n    waitForState(\"Expected collection1 to be created with 2 shards and 1 replica\", \"collection1meta\", clusterShape(2, 2));\n    waitForState(\"Expected collection2 to be created with 1 shard and 1 replica\", \"collection2meta\", clusterShape(1, 1));\n    ZkStateReader zkStateReader = cluster.getSolrClient().getZkStateReader();\n    zkStateReader.createClusterStateWatchersAndUpdate();\n\n    final String baseUrl = cluster.getRandomJetty(random()).getBaseUrl().toString();\n    HttpGet get = new HttpGet(baseUrl + \"/admin/collections?action=CREATEALIAS\" +\n        \"&wt=json\" +\n        \"&name=\" + getTestName() +\n        \"&collections=collection1meta,collection2meta\" +\n        \"&router.field=evt_dt\" +\n        \"&router.name=time\" +\n        \"&router.start=2018-01-15T00:00:00Z\" +\n        \"&router.interval=%2B30MINUTE\" +\n        \"&create-collection.collection.configName=_default\" +\n        \"&create-collection.numShards=1\");\n    assertFailure(get, \"Collections cannot be specified\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"105e345cf3c0abed3cb6c109274a379cb2655adc":["bb222a3f9d9421d5c95afce73013fbd8de07ea1f"],"a980795a56f2fcbc94caeb3233071312d5684d59":["6b87d1f8719d7f05be003f3477450b74af13706a"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":["a980795a56f2fcbc94caeb3233071312d5684d59","7a7544ad4b63d1b5f556c3da8f9c63d332aa034e"],"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["7a7544ad4b63d1b5f556c3da8f9c63d332aa034e"],"3c9595c75582a7ea7efb585014102ed83f2d9c8b":["db21ceba3043cc8e4145472fef08e5b136892778"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6b87d1f8719d7f05be003f3477450b74af13706a":["db21ceba3043cc8e4145472fef08e5b136892778","3c9595c75582a7ea7efb585014102ed83f2d9c8b"],"db21ceba3043cc8e4145472fef08e5b136892778":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"7a7544ad4b63d1b5f556c3da8f9c63d332aa034e":["a980795a56f2fcbc94caeb3233071312d5684d59"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["105e345cf3c0abed3cb6c109274a379cb2655adc"],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":["a980795a56f2fcbc94caeb3233071312d5684d59","7a7544ad4b63d1b5f556c3da8f9c63d332aa034e"]},"commit2Childs":{"105e345cf3c0abed3cb6c109274a379cb2655adc":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a980795a56f2fcbc94caeb3233071312d5684d59":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","7a7544ad4b63d1b5f556c3da8f9c63d332aa034e","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":[],"bb222a3f9d9421d5c95afce73013fbd8de07ea1f":["105e345cf3c0abed3cb6c109274a379cb2655adc"],"3c9595c75582a7ea7efb585014102ed83f2d9c8b":["6b87d1f8719d7f05be003f3477450b74af13706a"],"6b87d1f8719d7f05be003f3477450b74af13706a":["a980795a56f2fcbc94caeb3233071312d5684d59"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["db21ceba3043cc8e4145472fef08e5b136892778"],"db21ceba3043cc8e4145472fef08e5b136892778":["3c9595c75582a7ea7efb585014102ed83f2d9c8b","6b87d1f8719d7f05be003f3477450b74af13706a"],"7a7544ad4b63d1b5f556c3da8f9c63d332aa034e":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","bb222a3f9d9421d5c95afce73013fbd8de07ea1f","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"7eeaaea0106c7d6a2de50acfc8d357121ef8bd26":[]},"heads":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817","7eeaaea0106c7d6a2de50acfc8d357121ef8bd26"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}