{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/HashJoinStream#computeHash(Tuple,List[String]).mjava","commits":[{"id":"bdae1e0c97cc515dc80915258f7cec88edfbdfa6","date":1526678079,"type":1,"author":"Dennis Gove","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/HashJoinStream#computeHash(Tuple,List[String]).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/HashJoinStream#calculateHash(Tuple,List[String]).mjava","sourceNew":"  protected String computeHash(Tuple tuple, List<String> hashOn){\n    StringBuilder sb = new StringBuilder();\n    for(String part : hashOn){\n      Object obj = tuple.get(part);\n      if(null == obj){\n        return null;\n      }\n      sb.append(obj.toString());\n      sb.append(\"::\"); // this is here to separate fields\n    }\n    \n    return sb.toString();\n  }\n\n","sourceOld":"  protected Integer calculateHash(Tuple tuple, List<String> hashOn){\n    StringBuilder sb = new StringBuilder();\n    for(String part : hashOn){\n      Object obj = tuple.get(part);\n      if(null == obj){\n        return null;\n      }\n      sb.append(obj.toString());\n      sb.append(\"::\"); // this is here to separate fields\n    }\n    \n    return sb.toString().hashCode();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bdae1e0c97cc515dc80915258f7cec88edfbdfa6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["bdae1e0c97cc515dc80915258f7cec88edfbdfa6"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["bdae1e0c97cc515dc80915258f7cec88edfbdfa6"],"bdae1e0c97cc515dc80915258f7cec88edfbdfa6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}