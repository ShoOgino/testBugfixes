{"path":"lucene/contrib/icu/src/java/org/apache/lucene/analysis/icu/segmentation/BreakIteratorWrapper.BIWrapper#calcStatus(int,int).mjava","commits":[{"id":"185d73416ce4b3eaac6886de46a0a95eafbb01da","date":1272892809,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/icu/src/java/org/apache/lucene/analysis/icu/segmentation/BreakIteratorWrapper.BIWrapper#calcStatus(int,int).mjava","pathOld":"/dev/null","sourceNew":"    private int calcStatus(int current, int next) {\n      if (current == BreakIterator.DONE || next == BreakIterator.DONE)\n        return RuleBasedBreakIterator.WORD_NONE;\n\n      int begin = start + current;\n      int end = start + next;\n\n      int codepoint;\n      for (int i = begin; i < end; i += UTF16.getCharCount(codepoint)) {\n        codepoint = UTF16.charAt(text, 0, end, begin);\n\n        if (UCharacter.isDigit(codepoint))\n          return RuleBasedBreakIterator.WORD_NUMBER;\n        else if (UCharacter.isLetter(codepoint)) {\n          // TODO: try to separately specify ideographic, kana? \n          // [currently all bundled as letter for this case]\n          return RuleBasedBreakIterator.WORD_LETTER;\n        }\n      }\n\n      return RuleBasedBreakIterator.WORD_NONE;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b441220ceb933f50f32318ab45acc05d5943f3aa","date":1274352360,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/icu/src/java/org/apache/lucene/analysis/icu/segmentation/BreakIteratorWrapper.BIWrapper#calcStatus(int,int).mjava","pathOld":"lucene/contrib/icu/src/java/org/apache/lucene/analysis/icu/segmentation/BreakIteratorWrapper.BIWrapper#calcStatus(int,int).mjava","sourceNew":"    private int calcStatus(int current, int next) {\n      if (current == BreakIterator.DONE || next == BreakIterator.DONE)\n        return RuleBasedBreakIterator.WORD_NONE;\n\n      int begin = start + current;\n      int end = start + next;\n\n      int codepoint;\n      for (int i = begin; i < end; i += UTF16.getCharCount(codepoint)) {\n        codepoint = UTF16.charAt(text, 0, end, begin);\n\n        if (UCharacter.isDigit(codepoint))\n          return RuleBasedBreakIterator.WORD_NUMBER;\n        else if (UCharacter.isLetter(codepoint)) {\n          // TODO: try to separately specify ideographic, kana? \n          // [currently all bundled as letter for this case]\n          return RuleBasedBreakIterator.WORD_LETTER;\n        }\n      }\n\n      return RuleBasedBreakIterator.WORD_NONE;\n    }\n\n","sourceOld":"    private int calcStatus(int current, int next) {\n      if (current == BreakIterator.DONE || next == BreakIterator.DONE)\n        return RuleBasedBreakIterator.WORD_NONE;\n\n      int begin = start + current;\n      int end = start + next;\n\n      int codepoint;\n      for (int i = begin; i < end; i += UTF16.getCharCount(codepoint)) {\n        codepoint = UTF16.charAt(text, 0, end, begin);\n\n        if (UCharacter.isDigit(codepoint))\n          return RuleBasedBreakIterator.WORD_NUMBER;\n        else if (UCharacter.isLetter(codepoint)) {\n          // TODO: try to separately specify ideographic, kana? \n          // [currently all bundled as letter for this case]\n          return RuleBasedBreakIterator.WORD_LETTER;\n        }\n      }\n\n      return RuleBasedBreakIterator.WORD_NONE;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b441220ceb933f50f32318ab45acc05d5943f3aa":["185d73416ce4b3eaac6886de46a0a95eafbb01da"],"185d73416ce4b3eaac6886de46a0a95eafbb01da":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b441220ceb933f50f32318ab45acc05d5943f3aa"]},"commit2Childs":{"b441220ceb933f50f32318ab45acc05d5943f3aa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"185d73416ce4b3eaac6886de46a0a95eafbb01da":["b441220ceb933f50f32318ab45acc05d5943f3aa"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["185d73416ce4b3eaac6886de46a0a95eafbb01da"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}