{"path":"solr/core/src/java/org/apache/solr/handler/tagger/TaggerRequestHandler#computeDocCorpus(SolrQueryRequest).mjava","commits":[{"id":"e091f281a6e026f8bb17aaf194efd0bbd3a7f549","date":1528221895,"type":0,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/tagger/TaggerRequestHandler#computeDocCorpus(SolrQueryRequest).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * The set of documents matching the provided 'fq' (filter query). Don't include deleted docs\n   * either. If null is returned, then all docs are available.\n   */\n  private Bits computeDocCorpus(SolrQueryRequest req) throws SyntaxError, IOException {\n    final String[] corpusFilterQueries = req.getParams().getParams(\"fq\");\n    final SolrIndexSearcher searcher = req.getSearcher();\n    final Bits docBits;\n    if (corpusFilterQueries != null && corpusFilterQueries.length > 0) {\n      List<Query> filterQueries = new ArrayList<Query>(corpusFilterQueries.length);\n      for (String corpusFilterQuery : corpusFilterQueries) {\n        QParser qParser = QParser.getParser(corpusFilterQuery, null, req);\n        try {\n          filterQueries.add(qParser.parse());\n        } catch (SyntaxError e) {\n          throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, e);\n        }\n      }\n\n      final DocSet docSet = searcher.getDocSet(filterQueries);//hopefully in the cache\n      //note: before Solr 4.7 we could call docSet.getBits() but no longer.\n      if (docSet instanceof BitDocSet) {\n        docBits = ((BitDocSet)docSet).getBits();\n      } else {\n        docBits = new Bits() {\n\n          @Override\n          public boolean get(int index) {\n            return docSet.exists(index);\n          }\n\n          @Override\n          public int length() {\n            return searcher.maxDoc();\n          }\n        };\n      }\n    } else {\n      docBits = searcher.getSlowAtomicReader().getLiveDocs();\n    }\n    return docBits;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f592209545c71895260367152601e9200399776d","date":1528238935,"type":0,"author":"Michael Braun","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/tagger/TaggerRequestHandler#computeDocCorpus(SolrQueryRequest).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * The set of documents matching the provided 'fq' (filter query). Don't include deleted docs\n   * either. If null is returned, then all docs are available.\n   */\n  private Bits computeDocCorpus(SolrQueryRequest req) throws SyntaxError, IOException {\n    final String[] corpusFilterQueries = req.getParams().getParams(\"fq\");\n    final SolrIndexSearcher searcher = req.getSearcher();\n    final Bits docBits;\n    if (corpusFilterQueries != null && corpusFilterQueries.length > 0) {\n      List<Query> filterQueries = new ArrayList<Query>(corpusFilterQueries.length);\n      for (String corpusFilterQuery : corpusFilterQueries) {\n        QParser qParser = QParser.getParser(corpusFilterQuery, null, req);\n        try {\n          filterQueries.add(qParser.parse());\n        } catch (SyntaxError e) {\n          throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, e);\n        }\n      }\n\n      final DocSet docSet = searcher.getDocSet(filterQueries);//hopefully in the cache\n      //note: before Solr 4.7 we could call docSet.getBits() but no longer.\n      if (docSet instanceof BitDocSet) {\n        docBits = ((BitDocSet)docSet).getBits();\n      } else {\n        docBits = new Bits() {\n\n          @Override\n          public boolean get(int index) {\n            return docSet.exists(index);\n          }\n\n          @Override\n          public int length() {\n            return searcher.maxDoc();\n          }\n        };\n      }\n    } else {\n      docBits = searcher.getSlowAtomicReader().getLiveDocs();\n    }\n    return docBits;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b70042a8a492f7054d480ccdd2be9796510d4327","date":1528386658,"type":0,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/tagger/TaggerRequestHandler#computeDocCorpus(SolrQueryRequest).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * The set of documents matching the provided 'fq' (filter query). Don't include deleted docs\n   * either. If null is returned, then all docs are available.\n   */\n  private Bits computeDocCorpus(SolrQueryRequest req) throws SyntaxError, IOException {\n    final String[] corpusFilterQueries = req.getParams().getParams(\"fq\");\n    final SolrIndexSearcher searcher = req.getSearcher();\n    final Bits docBits;\n    if (corpusFilterQueries != null && corpusFilterQueries.length > 0) {\n      List<Query> filterQueries = new ArrayList<Query>(corpusFilterQueries.length);\n      for (String corpusFilterQuery : corpusFilterQueries) {\n        QParser qParser = QParser.getParser(corpusFilterQuery, null, req);\n        try {\n          filterQueries.add(qParser.parse());\n        } catch (SyntaxError e) {\n          throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, e);\n        }\n      }\n\n      final DocSet docSet = searcher.getDocSet(filterQueries);//hopefully in the cache\n      //note: before Solr 4.7 we could call docSet.getBits() but no longer.\n      if (docSet instanceof BitDocSet) {\n        docBits = ((BitDocSet)docSet).getBits();\n      } else {\n        docBits = new Bits() {\n\n          @Override\n          public boolean get(int index) {\n            return docSet.exists(index);\n          }\n\n          @Override\n          public int length() {\n            return searcher.maxDoc();\n          }\n        };\n      }\n    } else {\n      docBits = searcher.getSlowAtomicReader().getLiveDocs();\n    }\n    return docBits;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"90440a2155c2b9ce30bf8fc29b1c978c58dae1e7","date":1582642100,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/tagger/TaggerRequestHandler#computeDocCorpus(SolrQueryRequest).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/tagger/TaggerRequestHandler#computeDocCorpus(SolrQueryRequest).mjava","sourceNew":"  /**\n   * The set of documents matching the provided 'fq' (filter query). Don't include deleted docs\n   * either. If null is returned, then all docs are available.\n   */\n  private Bits computeDocCorpus(SolrQueryRequest req) throws SyntaxError, IOException {\n    final String[] corpusFilterQueries = req.getParams().getParams(\"fq\");\n    final SolrIndexSearcher searcher = req.getSearcher();\n    final Bits docBits;\n    if (corpusFilterQueries != null && corpusFilterQueries.length > 0) {\n      List<Query> filterQueries = new ArrayList<Query>(corpusFilterQueries.length);\n      for (String corpusFilterQuery : corpusFilterQueries) {\n        QParser qParser = QParser.getParser(corpusFilterQuery, null, req);\n        try {\n          filterQueries.add(qParser.parse());\n        } catch (SyntaxError e) {\n          throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, e);\n        }\n      }\n\n      final DocSet docSet = searcher.getDocSet(filterQueries);//hopefully in the cache\n\n      docBits = docSet.getBits();\n    } else {\n      docBits = searcher.getSlowAtomicReader().getLiveDocs();\n    }\n    return docBits;\n  }\n\n","sourceOld":"  /**\n   * The set of documents matching the provided 'fq' (filter query). Don't include deleted docs\n   * either. If null is returned, then all docs are available.\n   */\n  private Bits computeDocCorpus(SolrQueryRequest req) throws SyntaxError, IOException {\n    final String[] corpusFilterQueries = req.getParams().getParams(\"fq\");\n    final SolrIndexSearcher searcher = req.getSearcher();\n    final Bits docBits;\n    if (corpusFilterQueries != null && corpusFilterQueries.length > 0) {\n      List<Query> filterQueries = new ArrayList<Query>(corpusFilterQueries.length);\n      for (String corpusFilterQuery : corpusFilterQueries) {\n        QParser qParser = QParser.getParser(corpusFilterQuery, null, req);\n        try {\n          filterQueries.add(qParser.parse());\n        } catch (SyntaxError e) {\n          throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, e);\n        }\n      }\n\n      final DocSet docSet = searcher.getDocSet(filterQueries);//hopefully in the cache\n      //note: before Solr 4.7 we could call docSet.getBits() but no longer.\n      if (docSet instanceof BitDocSet) {\n        docBits = ((BitDocSet)docSet).getBits();\n      } else {\n        docBits = new Bits() {\n\n          @Override\n          public boolean get(int index) {\n            return docSet.exists(index);\n          }\n\n          @Override\n          public int length() {\n            return searcher.maxDoc();\n          }\n        };\n      }\n    } else {\n      docBits = searcher.getSlowAtomicReader().getLiveDocs();\n    }\n    return docBits;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b70042a8a492f7054d480ccdd2be9796510d4327":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","e091f281a6e026f8bb17aaf194efd0bbd3a7f549"],"90440a2155c2b9ce30bf8fc29b1c978c58dae1e7":["e091f281a6e026f8bb17aaf194efd0bbd3a7f549"],"f592209545c71895260367152601e9200399776d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","e091f281a6e026f8bb17aaf194efd0bbd3a7f549"],"e091f281a6e026f8bb17aaf194efd0bbd3a7f549":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["90440a2155c2b9ce30bf8fc29b1c978c58dae1e7"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b70042a8a492f7054d480ccdd2be9796510d4327","f592209545c71895260367152601e9200399776d","e091f281a6e026f8bb17aaf194efd0bbd3a7f549"],"b70042a8a492f7054d480ccdd2be9796510d4327":[],"90440a2155c2b9ce30bf8fc29b1c978c58dae1e7":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f592209545c71895260367152601e9200399776d":[],"e091f281a6e026f8bb17aaf194efd0bbd3a7f549":["b70042a8a492f7054d480ccdd2be9796510d4327","90440a2155c2b9ce30bf8fc29b1c978c58dae1e7","f592209545c71895260367152601e9200399776d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b70042a8a492f7054d480ccdd2be9796510d4327","f592209545c71895260367152601e9200399776d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}