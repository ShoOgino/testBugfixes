{"path":"lucene/queryparser/src/test/org/apache/lucene/queryparser/util/QueryParserTestBase#assertParseException(String).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queryparser/src/test/org/apache/lucene/queryparser/util/QueryParserTestBase#assertParseException(String).mjava","pathOld":"modules/queryparser/src/test/org/apache/lucene/queryparser/util/QueryParserTestBase#assertParseException(String).mjava","sourceNew":"  public void assertParseException(String queryString) throws Exception {\n    try {\n      getQuery(queryString, null);\n    } catch (ParseException expected) {\n      return;\n    }\n    fail(\"ParseException expected, not thrown\");\n  }\n\n","sourceOld":"  public void assertParseException(String queryString) throws Exception {\n    try {\n      getQuery(queryString, null);\n    } catch (ParseException expected) {\n      return;\n    }\n    fail(\"ParseException expected, not thrown\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ee76d213d935c68932ca13b55fa0a8a32bf6af1a","date":1343572717,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queryparser/src/test/org/apache/lucene/queryparser/util/QueryParserTestBase#assertParseException(String).mjava","pathOld":"lucene/queryparser/src/test/org/apache/lucene/queryparser/util/QueryParserTestBase#assertParseException(String).mjava","sourceNew":"  public void assertParseException(String queryString) throws Exception {\n    try {\n      getQuery(queryString);\n    } catch (Exception expected) {\n      if(isQueryParserException(expected)){\n        return;\n      }\n    }\n    fail(\"ParseException expected, not thrown\");\n  }\n\n","sourceOld":"  public void assertParseException(String queryString) throws Exception {\n    try {\n      getQuery(queryString, null);\n    } catch (ParseException expected) {\n      return;\n    }\n    fail(\"ParseException expected, not thrown\");\n  }\n\n","bugFix":["c15965e14235f835c17a1e8e8eb75bfb3a684e68","6f7a11eba51d213f09b96054111cf56a1e5796a3"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","date":1343768312,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/queryparser/src/test/org/apache/lucene/queryparser/util/QueryParserTestBase#assertParseException(String).mjava","pathOld":"lucene/queryparser/src/test/org/apache/lucene/queryparser/util/QueryParserTestBase#assertParseException(String).mjava","sourceNew":"  public void assertParseException(String queryString) throws Exception {\n    try {\n      getQuery(queryString);\n    } catch (Exception expected) {\n      if(isQueryParserException(expected)){\n        return;\n      }\n    }\n    fail(\"ParseException expected, not thrown\");\n  }\n\n","sourceOld":"  public void assertParseException(String queryString) throws Exception {\n    try {\n      getQuery(queryString, null);\n    } catch (ParseException expected) {\n      return;\n    }\n    fail(\"ParseException expected, not thrown\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d6f074e73200c07d54f242d3880a8da5a35ff97b","date":1344507653,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/queryparser/src/test/org/apache/lucene/queryparser/util/QueryParserTestBase#assertParseException(String).mjava","pathOld":"lucene/queryparser/src/test/org/apache/lucene/queryparser/util/QueryParserTestBase#assertParseException(String).mjava","sourceNew":"  public void assertParseException(String queryString) throws Exception {\n    try {\n      getQuery(queryString);\n    } catch (Exception expected) {\n      if(isQueryParserException(expected)){\n        return;\n      }\n    }\n    fail(\"ParseException expected, not thrown\");\n  }\n\n","sourceOld":"  public void assertParseException(String queryString) throws Exception {\n    try {\n      getQuery(queryString, null);\n    } catch (ParseException expected) {\n      return;\n    }\n    fail(\"ParseException expected, not thrown\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ee76d213d935c68932ca13b55fa0a8a32bf6af1a":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":["b89678825b68eccaf09e6ab71675fc0b0af1e099","ee76d213d935c68932ca13b55fa0a8a32bf6af1a"],"d6f074e73200c07d54f242d3880a8da5a35ff97b":["b89678825b68eccaf09e6ab71675fc0b0af1e099","ee76d213d935c68932ca13b55fa0a8a32bf6af1a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ee76d213d935c68932ca13b55fa0a8a32bf6af1a"]},"commit2Childs":{"ee76d213d935c68932ca13b55fa0a8a32bf6af1a":["b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","d6f074e73200c07d54f242d3880a8da5a35ff97b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["ee76d213d935c68932ca13b55fa0a8a32bf6af1a","b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","d6f074e73200c07d54f242d3880a8da5a35ff97b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f":[],"d6f074e73200c07d54f242d3880a8da5a35ff97b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b7cbfe9a112ef62d75f3289e4c79bbe274cb2a4f","d6f074e73200c07d54f242d3880a8da5a35ff97b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}