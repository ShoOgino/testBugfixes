{"path":"src/java/org/apache/lucene/index/ParallelArrayTermVectorMapper[TermVectorsReader]#materializeVector().mjava","commits":[{"id":"352bfe1fae83b92d1562f01c057bfbe6f5af3ddb","date":1185160645,"type":0,"author":"Grant Ingersoll","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/ParallelArrayTermVectorMapper[TermVectorsReader]#materializeVector().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Construct the vector\n   * @return\n   */\n  public TermFreqVector materializeVector() {\n    SegmentTermVector tv = null;\n    if (field != null && terms != null) {\n      if (storingPositions || storingOffsets) {\n        tv = new SegmentTermPositionVector(field, terms, termFreqs, positions, offsets);\n      } else {\n        tv = new SegmentTermVector(field, terms, termFreqs);\n      }\n    }\n    return tv;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6563d233b5f162833f1fceb18bb427db1a287109","date":1185291045,"type":3,"author":"Grant Ingersoll","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/ParallelArrayTermVectorMapper[TermVectorsReader]#materializeVector().mjava","pathOld":"src/java/org/apache/lucene/index/ParallelArrayTermVectorMapper[TermVectorsReader]#materializeVector().mjava","sourceNew":"  /**\n   * Construct the vector\n   * @return The {@link TermFreqVector} based on the mappings.\n   */\n  public TermFreqVector materializeVector() {\n    SegmentTermVector tv = null;\n    if (field != null && terms != null) {\n      if (storingPositions || storingOffsets) {\n        tv = new SegmentTermPositionVector(field, terms, termFreqs, positions, offsets);\n      } else {\n        tv = new SegmentTermVector(field, terms, termFreqs);\n      }\n    }\n    return tv;\n  }\n\n","sourceOld":"  /**\n   * Construct the vector\n   * @return\n   */\n  public TermFreqVector materializeVector() {\n    SegmentTermVector tv = null;\n    if (field != null && terms != null) {\n      if (storingPositions || storingOffsets) {\n        tv = new SegmentTermPositionVector(field, terms, termFreqs, positions, offsets);\n      } else {\n        tv = new SegmentTermVector(field, terms, termFreqs);\n      }\n    }\n    return tv;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/ParallelArrayTermVectorMapper[TermVectorsReader]#materializeVector().mjava","pathOld":"src/java/org/apache/lucene/index/ParallelArrayTermVectorMapper[TermVectorsReader]#materializeVector().mjava","sourceNew":"  /**\n   * Construct the vector\n   * @return The {@link TermFreqVector} based on the mappings.\n   */\n  public TermFreqVector materializeVector() {\n    SegmentTermVector tv = null;\n    if (field != null && terms != null) {\n      if (storingPositions || storingOffsets) {\n        tv = new SegmentTermPositionVector(field, terms, termFreqs, positions, offsets);\n      } else {\n        tv = new SegmentTermVector(field, terms, termFreqs);\n      }\n    }\n    return tv;\n  }\n\n","sourceOld":"  /**\n   * Construct the vector\n   * @return The {@link TermFreqVector} based on the mappings.\n   */\n  public TermFreqVector materializeVector() {\n    SegmentTermVector tv = null;\n    if (field != null && terms != null) {\n      if (storingPositions || storingOffsets) {\n        tv = new SegmentTermPositionVector(field, terms, termFreqs, positions, offsets);\n      } else {\n        tv = new SegmentTermVector(field, terms, termFreqs);\n      }\n    }\n    return tv;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"352bfe1fae83b92d1562f01c057bfbe6f5af3ddb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["6563d233b5f162833f1fceb18bb427db1a287109"],"6563d233b5f162833f1fceb18bb427db1a287109":["352bfe1fae83b92d1562f01c057bfbe6f5af3ddb"]},"commit2Childs":{"352bfe1fae83b92d1562f01c057bfbe6f5af3ddb":["6563d233b5f162833f1fceb18bb427db1a287109"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["352bfe1fae83b92d1562f01c057bfbe6f5af3ddb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"6563d233b5f162833f1fceb18bb427db1a287109":["9454a6510e2db155fb01faa5c049b06ece95fab9"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}