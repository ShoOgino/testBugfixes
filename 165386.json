{"path":"solr/solrj/src/java/org/apache/solr/common/util/JsonRecordReader#getInst(String,List[String]).mjava","commits":[{"id":"caf7f9acfdff984e59be68054cc1e0048b8ee030","date":1407766058,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/JsonRecordReader#getInst(String,List[String]).mjava","pathOld":"/dev/null","sourceNew":"  public static JsonRecordReader getInst(String split, List<String> fieldMappings) {\n\n    JsonRecordReader jsonRecordReader = new JsonRecordReader(split);\n    for (String s : fieldMappings) {\n      String path = s;\n      int idx = s.indexOf(':');\n      String fieldName = null;\n      if(idx >0) {\n        fieldName = s.substring(0, idx);\n        path = s.substring(idx + 1);\n      }\n      jsonRecordReader.addField(path, fieldName, true, false);\n    }\n    return jsonRecordReader;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2330174b38007b9942205a2679db9ddffe35af89","date":1423653924,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/JsonRecordReader#getInst(String,List[String]).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/JsonRecordReader#getInst(String,List[String]).mjava","sourceNew":"  public static JsonRecordReader getInst(String split, List<String> fieldMappings) {\n\n    JsonRecordReader jsonRecordReader = new JsonRecordReader(split);\n    for (String s : fieldMappings) {\n      String path = s;\n      int idx = s.indexOf(':');\n      String fieldName = null;\n      if (idx > 0) {\n        fieldName = s.substring(0, idx);\n        path = s.substring(idx + 1);\n      }\n      jsonRecordReader.addField(path, fieldName, true, false);\n    }\n    return jsonRecordReader;\n  }\n\n","sourceOld":"  public static JsonRecordReader getInst(String split, List<String> fieldMappings) {\n\n    JsonRecordReader jsonRecordReader = new JsonRecordReader(split);\n    for (String s : fieldMappings) {\n      String path = s;\n      int idx = s.indexOf(':');\n      String fieldName = null;\n      if(idx >0) {\n        fieldName = s.substring(0, idx);\n        path = s.substring(idx + 1);\n      }\n      jsonRecordReader.addField(path, fieldName, true, false);\n    }\n    return jsonRecordReader;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b4e08e2b6886d78c91752d82ea2b436c4324cd55","date":1464786234,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/JsonRecordReader#getInst(String,List[String]).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/JsonRecordReader#getInst(String,List[String]).mjava","sourceNew":"  public static JsonRecordReader getInst(String split, List<String> fieldMappings) {\n    return getInst(split, null, fieldMappings);\n  }\n\n","sourceOld":"  public static JsonRecordReader getInst(String split, List<String> fieldMappings) {\n\n    JsonRecordReader jsonRecordReader = new JsonRecordReader(split);\n    for (String s : fieldMappings) {\n      String path = s;\n      int idx = s.indexOf(':');\n      String fieldName = null;\n      if (idx > 0) {\n        fieldName = s.substring(0, idx);\n        path = s.substring(idx + 1);\n      }\n      jsonRecordReader.addField(path, fieldName, true, false);\n    }\n    return jsonRecordReader;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"611f7ea4eee5babadf4129bfa5fbae964738cd7c","date":1464787051,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/JsonRecordReader#getInst(String,List[String]).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/JsonRecordReader#getInst(String,List[String]).mjava","sourceNew":"  public static JsonRecordReader getInst(String split, List<String> fieldMappings) {\n    return getInst(split, null, fieldMappings);\n  }\n\n","sourceOld":"  public static JsonRecordReader getInst(String split, List<String> fieldMappings) {\n\n    JsonRecordReader jsonRecordReader = new JsonRecordReader(split);\n    for (String s : fieldMappings) {\n      String path = s;\n      int idx = s.indexOf(':');\n      String fieldName = null;\n      if (idx > 0) {\n        fieldName = s.substring(0, idx);\n        path = s.substring(idx + 1);\n      }\n      jsonRecordReader.addField(path, fieldName, true, false);\n    }\n    return jsonRecordReader;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5b8ee93140fd0efef7e101786e3ed5160a700b5f","date":1464820111,"type":3,"author":"Mike McCandless","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/JsonRecordReader#getInst(String,List[String]).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/JsonRecordReader#getInst(String,List[String]).mjava","sourceNew":"  public static JsonRecordReader getInst(String split, List<String> fieldMappings) {\n    return getInst(split, null, fieldMappings);\n  }\n\n","sourceOld":"  public static JsonRecordReader getInst(String split, List<String> fieldMappings) {\n\n    JsonRecordReader jsonRecordReader = new JsonRecordReader(split);\n    for (String s : fieldMappings) {\n      String path = s;\n      int idx = s.indexOf(':');\n      String fieldName = null;\n      if (idx > 0) {\n        fieldName = s.substring(0, idx);\n        path = s.substring(idx + 1);\n      }\n      jsonRecordReader.addField(path, fieldName, true, false);\n    }\n    return jsonRecordReader;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b40b1a0adcc6bdcda63b0fbd75dfa2ddd8777e77","date":1464821470,"type":3,"author":"Mike McCandless","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/JsonRecordReader#getInst(String,List[String]).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/JsonRecordReader#getInst(String,List[String]).mjava","sourceNew":"  public static JsonRecordReader getInst(String split, List<String> fieldMappings) {\n    return getInst(split, null, fieldMappings);\n  }\n\n","sourceOld":"  public static JsonRecordReader getInst(String split, List<String> fieldMappings) {\n\n    JsonRecordReader jsonRecordReader = new JsonRecordReader(split);\n    for (String s : fieldMappings) {\n      String path = s;\n      int idx = s.indexOf(':');\n      String fieldName = null;\n      if (idx > 0) {\n        fieldName = s.substring(0, idx);\n        path = s.substring(idx + 1);\n      }\n      jsonRecordReader.addField(path, fieldName, true, false);\n    }\n    return jsonRecordReader;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d8d9512babbd72795eb013cdd392dad2e2b2313e","date":1465331500,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/JsonRecordReader#getInst(String,List[String]).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/JsonRecordReader#getInst(String,List[String]).mjava","sourceNew":"  public static JsonRecordReader getInst(String split, List<String> fieldMappings) {\n\n    JsonRecordReader jsonRecordReader = new JsonRecordReader();\n    jsonRecordReader.addSplit(split);\n    for (String s : fieldMappings) {\n      String path = s;\n      int idx = s.indexOf(':');\n      String fieldName = null;\n      if (idx > 0) {\n        fieldName = s.substring(0, idx);\n        path = s.substring(idx + 1);\n      }\n      jsonRecordReader.addField(path, fieldName, true, false);\n    }\n    return jsonRecordReader;\n  }\n\n","sourceOld":"  public static JsonRecordReader getInst(String split, List<String> fieldMappings) {\n    return getInst(split, null, fieldMappings);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/util/JsonRecordReader#getInst(String,List[String]).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/util/JsonRecordReader#getInst(String,List[String]).mjava","sourceNew":"  public static JsonRecordReader getInst(String split, List<String> fieldMappings) {\n\n    JsonRecordReader jsonRecordReader = new JsonRecordReader();\n    jsonRecordReader.addSplit(split);\n    for (String s : fieldMappings) {\n      String path = s;\n      int idx = s.indexOf(':');\n      String fieldName = null;\n      if (idx > 0) {\n        fieldName = s.substring(0, idx);\n        path = s.substring(idx + 1);\n      }\n      jsonRecordReader.addField(path, fieldName, true, false);\n    }\n    return jsonRecordReader;\n  }\n\n","sourceOld":"  public static JsonRecordReader getInst(String split, List<String> fieldMappings) {\n\n    JsonRecordReader jsonRecordReader = new JsonRecordReader(split);\n    for (String s : fieldMappings) {\n      String path = s;\n      int idx = s.indexOf(':');\n      String fieldName = null;\n      if (idx > 0) {\n        fieldName = s.substring(0, idx);\n        path = s.substring(idx + 1);\n      }\n      jsonRecordReader.addField(path, fieldName, true, false);\n    }\n    return jsonRecordReader;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d8d9512babbd72795eb013cdd392dad2e2b2313e":["b4e08e2b6886d78c91752d82ea2b436c4324cd55"],"b4e08e2b6886d78c91752d82ea2b436c4324cd55":["2330174b38007b9942205a2679db9ddffe35af89"],"2330174b38007b9942205a2679db9ddffe35af89":["caf7f9acfdff984e59be68054cc1e0048b8ee030"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"611f7ea4eee5babadf4129bfa5fbae964738cd7c":["2330174b38007b9942205a2679db9ddffe35af89","b4e08e2b6886d78c91752d82ea2b436c4324cd55"],"5b8ee93140fd0efef7e101786e3ed5160a700b5f":["2330174b38007b9942205a2679db9ddffe35af89","611f7ea4eee5babadf4129bfa5fbae964738cd7c"],"caf7f9acfdff984e59be68054cc1e0048b8ee030":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["2330174b38007b9942205a2679db9ddffe35af89","d8d9512babbd72795eb013cdd392dad2e2b2313e"],"b40b1a0adcc6bdcda63b0fbd75dfa2ddd8777e77":["2330174b38007b9942205a2679db9ddffe35af89","5b8ee93140fd0efef7e101786e3ed5160a700b5f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d8d9512babbd72795eb013cdd392dad2e2b2313e"]},"commit2Childs":{"d8d9512babbd72795eb013cdd392dad2e2b2313e":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b4e08e2b6886d78c91752d82ea2b436c4324cd55":["d8d9512babbd72795eb013cdd392dad2e2b2313e","611f7ea4eee5babadf4129bfa5fbae964738cd7c"],"2330174b38007b9942205a2679db9ddffe35af89":["b4e08e2b6886d78c91752d82ea2b436c4324cd55","611f7ea4eee5babadf4129bfa5fbae964738cd7c","5b8ee93140fd0efef7e101786e3ed5160a700b5f","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","b40b1a0adcc6bdcda63b0fbd75dfa2ddd8777e77"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["caf7f9acfdff984e59be68054cc1e0048b8ee030"],"611f7ea4eee5babadf4129bfa5fbae964738cd7c":["5b8ee93140fd0efef7e101786e3ed5160a700b5f"],"5b8ee93140fd0efef7e101786e3ed5160a700b5f":["b40b1a0adcc6bdcda63b0fbd75dfa2ddd8777e77"],"caf7f9acfdff984e59be68054cc1e0048b8ee030":["2330174b38007b9942205a2679db9ddffe35af89"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"b40b1a0adcc6bdcda63b0fbd75dfa2ddd8777e77":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","b40b1a0adcc6bdcda63b0fbd75dfa2ddd8777e77","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}