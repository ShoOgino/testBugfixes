{"path":"solr/core/src/java/org/apache/solr/metrics/SolrMetricManager#registerGauge(SolrMetricsContext,String,Gauge[#],String,boolean,String,String...).mjava","commits":[{"id":"7c2af5a711bd6e2d33e0221ced0f47ac596ed275","date":1572877903,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/metrics/SolrMetricManager#registerGauge(SolrMetricsContext,String,Gauge[#],String,boolean,String,String...).mjava","pathOld":"/dev/null","sourceNew":"  public void registerGauge(SolrMetricsContext context, String registry, Gauge<?> gauge, String tag, boolean force, String metricName, String... metricPath) {\n    registerMetric(context, registry, new GaugeWrapper(gauge, tag), force, metricName, metricPath);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"462c81bfb611619a4867328837e70c876bd5a94f","date":1588355232,"type":3,"author":"Mike Drob","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/metrics/SolrMetricManager#registerGauge(SolrMetricsContext,String,Gauge[#],String,boolean,String,String...).mjava","pathOld":"solr/core/src/java/org/apache/solr/metrics/SolrMetricManager#registerGauge(SolrMetricsContext,String,Gauge[#],String,boolean,String,String...).mjava","sourceNew":"  /**\n   * @deprecated use {@link #registerGauge(SolrMetricsContext, String, Gauge, String, ResolutionStrategy, String, String...)}\n   */\n  @Deprecated\n  public void registerGauge(SolrMetricsContext context, String registry, Gauge<?> gauge, String tag, boolean force, String metricName, String... metricPath) {\n    registerGauge(context, registry, gauge, tag, force ? ResolutionStrategy.REPLACE : ResolutionStrategy.ERROR, metricName, metricPath);\n  }\n\n","sourceOld":"  public void registerGauge(SolrMetricsContext context, String registry, Gauge<?> gauge, String tag, boolean force, String metricName, String... metricPath) {\n    registerMetric(context, registry, new GaugeWrapper(gauge, tag), force, metricName, metricPath);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ff7b5fca5c4207413bd78695e460f6eb81bc2e99","date":1588356568,"type":3,"author":"Mike Drob","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/metrics/SolrMetricManager#registerGauge(SolrMetricsContext,String,Gauge[#],String,boolean,String,String...).mjava","pathOld":"solr/core/src/java/org/apache/solr/metrics/SolrMetricManager#registerGauge(SolrMetricsContext,String,Gauge[#],String,boolean,String,String...).mjava","sourceNew":"  public void registerGauge(SolrMetricsContext context, String registry, Gauge<?> gauge, String tag, boolean force, String metricName, String... metricPath) {\n    registerMetric(context, registry, new GaugeWrapper(gauge, tag), force, metricName, metricPath);\n  }\n\n","sourceOld":"  /**\n   * @deprecated use {@link #registerGauge(SolrMetricsContext, String, Gauge, String, ResolutionStrategy, String, String...)}\n   */\n  @Deprecated\n  public void registerGauge(SolrMetricsContext context, String registry, Gauge<?> gauge, String tag, boolean force, String metricName, String... metricPath) {\n    registerGauge(context, registry, gauge, tag, force ? ResolutionStrategy.REPLACE : ResolutionStrategy.ERROR, metricName, metricPath);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bd25fa3647fa73152703b8dccb4fb5f43633de20","date":1592060458,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/metrics/SolrMetricManager#registerGauge(SolrMetricsContext,String,Gauge[#],String,boolean,String,String...).mjava","pathOld":"solr/core/src/java/org/apache/solr/metrics/SolrMetricManager#registerGauge(SolrMetricsContext,String,Gauge[#],String,boolean,String,String...).mjava","sourceNew":"  @SuppressWarnings({\"unchecked\", \"rawtypes\"})\n  public void registerGauge(SolrMetricsContext context, String registry, Gauge<?> gauge, String tag, boolean force, String metricName, String... metricPath) {\n    registerMetric(context, registry, new GaugeWrapper(gauge, tag), force, metricName, metricPath);\n  }\n\n","sourceOld":"  public void registerGauge(SolrMetricsContext context, String registry, Gauge<?> gauge, String tag, boolean force, String metricName, String... metricPath) {\n    registerMetric(context, registry, new GaugeWrapper(gauge, tag), force, metricName, metricPath);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bad14379f15be20a5f4871be82a276e5e69731fc","date":1599578304,"type":3,"author":"Mike Drob","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/metrics/SolrMetricManager#registerGauge(SolrMetricsContext,String,Gauge[#],String,boolean,String,String...).mjava","pathOld":"solr/core/src/java/org/apache/solr/metrics/SolrMetricManager#registerGauge(SolrMetricsContext,String,Gauge[#],String,boolean,String,String...).mjava","sourceNew":"  /**\n   * @deprecated use {@link #registerGauge(SolrMetricsContext, String, Gauge, String, ResolutionStrategy, String, String...)}\n   */\n  @Deprecated\n  public void registerGauge(SolrMetricsContext context, String registry, Gauge<?> gauge, String tag, boolean force, String metricName, String... metricPath) {\n    registerGauge(context, registry, gauge, tag, force ? ResolutionStrategy.REPLACE : ResolutionStrategy.ERROR, metricName, metricPath);\n  }\n\n","sourceOld":"  @SuppressWarnings({\"unchecked\", \"rawtypes\"})\n  public void registerGauge(SolrMetricsContext context, String registry, Gauge<?> gauge, String tag, boolean force, String metricName, String... metricPath) {\n    registerMetric(context, registry, new GaugeWrapper(gauge, tag), force, metricName, metricPath);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"462c81bfb611619a4867328837e70c876bd5a94f":["7c2af5a711bd6e2d33e0221ced0f47ac596ed275"],"7c2af5a711bd6e2d33e0221ced0f47ac596ed275":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ff7b5fca5c4207413bd78695e460f6eb81bc2e99":["462c81bfb611619a4867328837e70c876bd5a94f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bad14379f15be20a5f4871be82a276e5e69731fc":["bd25fa3647fa73152703b8dccb4fb5f43633de20"],"bd25fa3647fa73152703b8dccb4fb5f43633de20":["ff7b5fca5c4207413bd78695e460f6eb81bc2e99"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["bad14379f15be20a5f4871be82a276e5e69731fc"]},"commit2Childs":{"462c81bfb611619a4867328837e70c876bd5a94f":["ff7b5fca5c4207413bd78695e460f6eb81bc2e99"],"7c2af5a711bd6e2d33e0221ced0f47ac596ed275":["462c81bfb611619a4867328837e70c876bd5a94f"],"ff7b5fca5c4207413bd78695e460f6eb81bc2e99":["bd25fa3647fa73152703b8dccb4fb5f43633de20"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7c2af5a711bd6e2d33e0221ced0f47ac596ed275"],"bad14379f15be20a5f4871be82a276e5e69731fc":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"bd25fa3647fa73152703b8dccb4fb5f43633de20":["bad14379f15be20a5f4871be82a276e5e69731fc"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}