{"path":"lucene/src/java/org/apache/lucene/queryParser/QueryParser#QueryParser(Version,String,Analyzer).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/queryParser/QueryParser#QueryParser(Version,String,Analyzer).mjava","pathOld":"src/java/org/apache/lucene/queryParser/QueryParser#QueryParser(Version,String,Analyzer).mjava","sourceNew":"  /** Constructs a query parser.\n   *  @param matchVersion  Lucene version to match.  See <a href=\"#version\">above</a>)\n   *  @param f  the default field for query terms.\n   *  @param a   used to find terms in the query text.\n   */\n  public QueryParser(Version matchVersion, String f, Analyzer a) {\n    this(new FastCharStream(new StringReader(\"\")));\n    analyzer = a;\n    field = f;\n    if (matchVersion.onOrAfter(Version.LUCENE_29)) {\n      enablePositionIncrements = true;\n    } else {\n      enablePositionIncrements = false;\n    }\n  }\n\n","sourceOld":"  /** Constructs a query parser.\n   *  @param matchVersion  Lucene version to match.  See <a href=\"#version\">above</a>)\n   *  @param f  the default field for query terms.\n   *  @param a   used to find terms in the query text.\n   */\n  public QueryParser(Version matchVersion, String f, Analyzer a) {\n    this(new FastCharStream(new StringReader(\"\")));\n    analyzer = a;\n    field = f;\n    if (matchVersion.onOrAfter(Version.LUCENE_29)) {\n      enablePositionIncrements = true;\n    } else {\n      enablePositionIncrements = false;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1f03d60547476e008d3d993cd26872c1157f19cf","date":1270899773,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/queryParser/QueryParser#QueryParser(Version,String,Analyzer).mjava","pathOld":"lucene/src/java/org/apache/lucene/queryParser/QueryParser#QueryParser(Version,String,Analyzer).mjava","sourceNew":"  /** Constructs a query parser.\n   *  @param matchVersion  Lucene version to match. See <a href=\"#version\">above</a>.\n   *  @param f  the default field for query terms.\n   *  @param a   used to find terms in the query text.\n   */\n  public QueryParser(Version matchVersion, String f, Analyzer a) {\n    this(new FastCharStream(new StringReader(\"\")));\n    analyzer = a;\n    field = f;\n    if (matchVersion.onOrAfter(Version.LUCENE_29)) {\n      enablePositionIncrements = true;\n    } else {\n      enablePositionIncrements = false;\n    }\n  }\n\n","sourceOld":"  /** Constructs a query parser.\n   *  @param matchVersion  Lucene version to match.  See <a href=\"#version\">above</a>)\n   *  @param f  the default field for query terms.\n   *  @param a   used to find terms in the query text.\n   */\n  public QueryParser(Version matchVersion, String f, Analyzer a) {\n    this(new FastCharStream(new StringReader(\"\")));\n    analyzer = a;\n    field = f;\n    if (matchVersion.onOrAfter(Version.LUCENE_29)) {\n      enablePositionIncrements = true;\n    } else {\n      enablePositionIncrements = false;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2ee056ec8e953928ee49a691090634eed1fa4d6b","date":1274852580,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/queryParser/QueryParser#QueryParser(Version,String,Analyzer).mjava","pathOld":"lucene/src/java/org/apache/lucene/queryParser/QueryParser#QueryParser(Version,String,Analyzer).mjava","sourceNew":"  /** Constructs a query parser.\n   *  @param matchVersion  Lucene version to match. See <a href=\"#version\">above</a>.\n   *  @param f  the default field for query terms.\n   *  @param a   used to find terms in the query text.\n   */\n  public QueryParser(Version matchVersion, String f, Analyzer a) {\n    this(new FastCharStream(new StringReader(\"\")));\n    this.matchVersion = matchVersion;\n    analyzer = a;\n    field = f;\n    if (matchVersion.onOrAfter(Version.LUCENE_29)) {\n      enablePositionIncrements = true;\n    } else {\n      enablePositionIncrements = false;\n    }\n  }\n\n","sourceOld":"  /** Constructs a query parser.\n   *  @param matchVersion  Lucene version to match. See <a href=\"#version\">above</a>.\n   *  @param f  the default field for query terms.\n   *  @param a   used to find terms in the query text.\n   */\n  public QueryParser(Version matchVersion, String f, Analyzer a) {\n    this(new FastCharStream(new StringReader(\"\")));\n    analyzer = a;\n    field = f;\n    if (matchVersion.onOrAfter(Version.LUCENE_29)) {\n      enablePositionIncrements = true;\n    } else {\n      enablePositionIncrements = false;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"33e4a95ed08968b85d84e9fba82424f1fd945fbb","date":1274878310,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/queryParser/QueryParser#QueryParser(Version,String,Analyzer).mjava","pathOld":"lucene/src/java/org/apache/lucene/queryParser/QueryParser#QueryParser(Version,String,Analyzer).mjava","sourceNew":"  /** Constructs a query parser.\n   *  @param matchVersion  Lucene version to match. See <a href=\"#version\">above</a>.\n   *  @param f  the default field for query terms.\n   *  @param a   used to find terms in the query text.\n   */\n  public QueryParser(Version matchVersion, String f, Analyzer a) {\n    this(new FastCharStream(new StringReader(\"\")));\n    analyzer = a;\n    field = f;\n    if (matchVersion.onOrAfter(Version.LUCENE_29)) {\n      enablePositionIncrements = true;\n    } else {\n      enablePositionIncrements = false;\n    }\n  }\n\n","sourceOld":"  /** Constructs a query parser.\n   *  @param matchVersion  Lucene version to match. See <a href=\"#version\">above</a>.\n   *  @param f  the default field for query terms.\n   *  @param a   used to find terms in the query text.\n   */\n  public QueryParser(Version matchVersion, String f, Analyzer a) {\n    this(new FastCharStream(new StringReader(\"\")));\n    this.matchVersion = matchVersion;\n    analyzer = a;\n    field = f;\n    if (matchVersion.onOrAfter(Version.LUCENE_29)) {\n      enablePositionIncrements = true;\n    } else {\n      enablePositionIncrements = false;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"55f0d8e9a3f2e45eeea14a4803eaac02a0865097","date":1279565910,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/queryParser/QueryParser#QueryParser(Version,String,Analyzer).mjava","pathOld":"lucene/src/java/org/apache/lucene/queryParser/QueryParser#QueryParser(Version,String,Analyzer).mjava","sourceNew":"  /** Constructs a query parser.\n   *  @param matchVersion  Lucene version to match. See <a href=\"#version\">above</a>.\n   *  @param f  the default field for query terms.\n   *  @param a   used to find terms in the query text.\n   */\n  public QueryParser(Version matchVersion, String f, Analyzer a) {\n    this(new FastCharStream(new StringReader(\"\")));\n    analyzer = a;\n    field = f;\n    if (matchVersion.onOrAfter(Version.LUCENE_29)) {\n      enablePositionIncrements = true;\n    } else {\n      enablePositionIncrements = false;\n    }\n    if (matchVersion.onOrAfter(Version.LUCENE_31)) {\n      setAutoGeneratePhraseQueries(false);\n    } else {\n      setAutoGeneratePhraseQueries(true);\n    }\n  }\n\n","sourceOld":"  /** Constructs a query parser.\n   *  @param matchVersion  Lucene version to match. See <a href=\"#version\">above</a>.\n   *  @param f  the default field for query terms.\n   *  @param a   used to find terms in the query text.\n   */\n  public QueryParser(Version matchVersion, String f, Analyzer a) {\n    this(new FastCharStream(new StringReader(\"\")));\n    analyzer = a;\n    field = f;\n    if (matchVersion.onOrAfter(Version.LUCENE_29)) {\n      enablePositionIncrements = true;\n    } else {\n      enablePositionIncrements = false;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5f4e87790277826a2aea119328600dfb07761f32","date":1279827275,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/queryParser/QueryParser#QueryParser(Version,String,Analyzer).mjava","pathOld":"lucene/src/java/org/apache/lucene/queryParser/QueryParser#QueryParser(Version,String,Analyzer).mjava","sourceNew":"  /** Constructs a query parser.\n   *  @param matchVersion  Lucene version to match. See <a href=\"#version\">above</a>.\n   *  @param f  the default field for query terms.\n   *  @param a   used to find terms in the query text.\n   */\n  public QueryParser(Version matchVersion, String f, Analyzer a) {\n    this(new FastCharStream(new StringReader(\"\")));\n    analyzer = a;\n    field = f;\n    if (matchVersion.onOrAfter(Version.LUCENE_29)) {\n      enablePositionIncrements = true;\n    } else {\n      enablePositionIncrements = false;\n    }\n    if (matchVersion.onOrAfter(Version.LUCENE_31)) {\n      setAutoGeneratePhraseQueries(false);\n    } else {\n      setAutoGeneratePhraseQueries(true);\n    }\n  }\n\n","sourceOld":"  /** Constructs a query parser.\n   *  @param matchVersion  Lucene version to match. See <a href=\"#version\">above</a>.\n   *  @param f  the default field for query terms.\n   *  @param a   used to find terms in the query text.\n   */\n  public QueryParser(Version matchVersion, String f, Analyzer a) {\n    this(new FastCharStream(new StringReader(\"\")));\n    analyzer = a;\n    field = f;\n    if (matchVersion.onOrAfter(Version.LUCENE_29)) {\n      enablePositionIncrements = true;\n    } else {\n      enablePositionIncrements = false;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9e87c4193bc100c3b96235f14bee01a5b2009ce5","date":1287756261,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/queryParser/QueryParser#QueryParser(Version,String,Analyzer).mjava","pathOld":"lucene/src/java/org/apache/lucene/queryParser/QueryParser#QueryParser(Version,String,Analyzer).mjava","sourceNew":"  /** Create a query parser.\n   *  @param matchVersion  Lucene version to match. See <a href=\"#version\">above</a>.\n   *  @param f  the default field for query terms.\n   *  @param a   used to find terms in the query text.\n   */\n   public QueryParser(Version matchVersion, String f, Analyzer a) {\n    this(new FastCharStream(new StringReader(\"\")));\n    init(matchVersion, f, a);\n  }\n\n","sourceOld":"  /** Constructs a query parser.\n   *  @param matchVersion  Lucene version to match. See <a href=\"#version\">above</a>.\n   *  @param f  the default field for query terms.\n   *  @param a   used to find terms in the query text.\n   */\n  public QueryParser(Version matchVersion, String f, Analyzer a) {\n    this(new FastCharStream(new StringReader(\"\")));\n    analyzer = a;\n    field = f;\n    if (matchVersion.onOrAfter(Version.LUCENE_29)) {\n      enablePositionIncrements = true;\n    } else {\n      enablePositionIncrements = false;\n    }\n    if (matchVersion.onOrAfter(Version.LUCENE_31)) {\n      setAutoGeneratePhraseQueries(false);\n    } else {\n      setAutoGeneratePhraseQueries(true);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b12d3e81e0f95a4527b5703953c503f71120ffcc","date":1288080933,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/queryParser/QueryParser#QueryParser(Version,String,Analyzer).mjava","pathOld":"lucene/src/java/org/apache/lucene/queryParser/QueryParser#QueryParser(Version,String,Analyzer).mjava","sourceNew":"  /** Create a query parser.\n   *  @param matchVersion  Lucene version to match. See <a href=\"#version\">above</a>.\n   *  @param f  the default field for query terms.\n   *  @param a   used to find terms in the query text.\n   */\n   public QueryParser(Version matchVersion, String f, Analyzer a) {\n    this(new FastCharStream(new StringReader(\"\")));\n    init(matchVersion, f, a);\n  }\n\n","sourceOld":"  /** Constructs a query parser.\n   *  @param matchVersion  Lucene version to match. See <a href=\"#version\">above</a>.\n   *  @param f  the default field for query terms.\n   *  @param a   used to find terms in the query text.\n   */\n  public QueryParser(Version matchVersion, String f, Analyzer a) {\n    this(new FastCharStream(new StringReader(\"\")));\n    analyzer = a;\n    field = f;\n    if (matchVersion.onOrAfter(Version.LUCENE_29)) {\n      enablePositionIncrements = true;\n    } else {\n      enablePositionIncrements = false;\n    }\n    if (matchVersion.onOrAfter(Version.LUCENE_31)) {\n      setAutoGeneratePhraseQueries(false);\n    } else {\n      setAutoGeneratePhraseQueries(true);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/queryParser/QueryParser#QueryParser(Version,String,Analyzer).mjava","pathOld":"lucene/src/java/org/apache/lucene/queryParser/QueryParser#QueryParser(Version,String,Analyzer).mjava","sourceNew":"  /** Create a query parser.\n   *  @param matchVersion  Lucene version to match. See <a href=\"#version\">above</a>.\n   *  @param f  the default field for query terms.\n   *  @param a   used to find terms in the query text.\n   */\n   public QueryParser(Version matchVersion, String f, Analyzer a) {\n    this(new FastCharStream(new StringReader(\"\")));\n    init(matchVersion, f, a);\n  }\n\n","sourceOld":"  /** Constructs a query parser.\n   *  @param matchVersion  Lucene version to match. See <a href=\"#version\">above</a>.\n   *  @param f  the default field for query terms.\n   *  @param a   used to find terms in the query text.\n   */\n  public QueryParser(Version matchVersion, String f, Analyzer a) {\n    this(new FastCharStream(new StringReader(\"\")));\n    analyzer = a;\n    field = f;\n    if (matchVersion.onOrAfter(Version.LUCENE_29)) {\n      enablePositionIncrements = true;\n    } else {\n      enablePositionIncrements = false;\n    }\n    if (matchVersion.onOrAfter(Version.LUCENE_31)) {\n      setAutoGeneratePhraseQueries(false);\n    } else {\n      setAutoGeneratePhraseQueries(true);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"91a3609ac9a09ca0c8eee1b765401bbdacaceaf8","date":1310355420,"type":5,"author":"Christopher John Male","isMerge":false,"pathNew":"modules/queryparser/src/java/org/apache/lucene/queryparser/classic/QueryParser#QueryParser(Version,String,Analyzer).mjava","pathOld":"lucene/src/java/org/apache/lucene/queryParser/QueryParser#QueryParser(Version,String,Analyzer).mjava","sourceNew":"  /** Create a query parser.\n   *  @param matchVersion  Lucene version to match. See <a href=\"#version\">above</a>.\n   *  @param f  the default field for query terms.\n   *  @param a   used to find terms in the query text.\n   */\n   public QueryParser(Version matchVersion, String f, Analyzer a) {\n    this(new FastCharStream(new StringReader(\"\")));\n    init(matchVersion, f, a);\n  }\n\n","sourceOld":"  /** Create a query parser.\n   *  @param matchVersion  Lucene version to match. See <a href=\"#version\">above</a>.\n   *  @param f  the default field for query terms.\n   *  @param a   used to find terms in the query text.\n   */\n   public QueryParser(Version matchVersion, String f, Analyzer a) {\n    this(new FastCharStream(new StringReader(\"\")));\n    init(matchVersion, f, a);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"91a3609ac9a09ca0c8eee1b765401bbdacaceaf8":["9e87c4193bc100c3b96235f14bee01a5b2009ce5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"33e4a95ed08968b85d84e9fba82424f1fd945fbb":["2ee056ec8e953928ee49a691090634eed1fa4d6b"],"9e87c4193bc100c3b96235f14bee01a5b2009ce5":["55f0d8e9a3f2e45eeea14a4803eaac02a0865097"],"b12d3e81e0f95a4527b5703953c503f71120ffcc":["55f0d8e9a3f2e45eeea14a4803eaac02a0865097","9e87c4193bc100c3b96235f14bee01a5b2009ce5"],"2ee056ec8e953928ee49a691090634eed1fa4d6b":["1f03d60547476e008d3d993cd26872c1157f19cf"],"5f4e87790277826a2aea119328600dfb07761f32":["33e4a95ed08968b85d84e9fba82424f1fd945fbb","55f0d8e9a3f2e45eeea14a4803eaac02a0865097"],"55f0d8e9a3f2e45eeea14a4803eaac02a0865097":["33e4a95ed08968b85d84e9fba82424f1fd945fbb"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["5f4e87790277826a2aea119328600dfb07761f32","9e87c4193bc100c3b96235f14bee01a5b2009ce5"],"1f03d60547476e008d3d993cd26872c1157f19cf":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["91a3609ac9a09ca0c8eee1b765401bbdacaceaf8"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"91a3609ac9a09ca0c8eee1b765401bbdacaceaf8":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"33e4a95ed08968b85d84e9fba82424f1fd945fbb":["5f4e87790277826a2aea119328600dfb07761f32","55f0d8e9a3f2e45eeea14a4803eaac02a0865097"],"9e87c4193bc100c3b96235f14bee01a5b2009ce5":["91a3609ac9a09ca0c8eee1b765401bbdacaceaf8","b12d3e81e0f95a4527b5703953c503f71120ffcc","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"b12d3e81e0f95a4527b5703953c503f71120ffcc":[],"2ee056ec8e953928ee49a691090634eed1fa4d6b":["33e4a95ed08968b85d84e9fba82424f1fd945fbb"],"5f4e87790277826a2aea119328600dfb07761f32":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"55f0d8e9a3f2e45eeea14a4803eaac02a0865097":["9e87c4193bc100c3b96235f14bee01a5b2009ce5","b12d3e81e0f95a4527b5703953c503f71120ffcc","5f4e87790277826a2aea119328600dfb07761f32"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"1f03d60547476e008d3d993cd26872c1157f19cf":["2ee056ec8e953928ee49a691090634eed1fa4d6b"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["1f03d60547476e008d3d993cd26872c1157f19cf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b12d3e81e0f95a4527b5703953c503f71120ffcc","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}