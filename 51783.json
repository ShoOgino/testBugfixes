{"path":"solr/core/src/test/org/apache/solr/handler/TestSQLHandler#assertMaps(List[Map],int...).mjava","commits":[{"id":"94e31112925a65b1d36f9064772080e25b5ef373","date":1553715407,"type":1,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/TestSQLHandler#assertMaps(List[Map],int...).mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/TestSQLHandler2[TestSQLHandler]#assertMaps(List[Map],int...).mjava","sourceNew":"  protected boolean assertMaps(List<Map> maps, int... ids) throws Exception {\n    if(maps.size() != ids.length) {\n      throw new Exception(\"Expected id count != actual map count:\"+ids.length+\":\"+maps.size());\n    }\n\n    int i=0;\n    for(int val : ids) {\n      Map t = maps.get(i);\n      String tip = (String)t.get(\"id\");\n      if(!tip.equals(Integer.toString(val))) {\n        throw new Exception(\"Found value:\"+tip+\" expecting:\"+val);\n      }\n      ++i;\n    }\n    return true;\n  }\n\n","sourceOld":"  protected boolean assertMaps(List<Map> maps, int... ids) throws Exception {\n    if(maps.size() != ids.length) {\n      throw new Exception(\"Expected id count != actual map count:\"+ids.length+\":\"+maps.size());\n    }\n\n    int i=0;\n    for(int val : ids) {\n      Map t = maps.get(i);\n      String tip = (String)t.get(\"id\");\n      if(!tip.equals(Integer.toString(val))) {\n        throw new Exception(\"Found value:\"+tip+\" expecting:\"+val);\n      }\n      ++i;\n    }\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e98520789adb1d5ad05afb4956eca0944a929688","date":1592430701,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/TestSQLHandler#assertMaps(List[Map],int...).mjava","pathOld":"solr/core/src/test/org/apache/solr/handler/TestSQLHandler#assertMaps(List[Map],int...).mjava","sourceNew":"  protected boolean assertMaps(@SuppressWarnings({\"rawtypes\"})List<Map> maps, int... ids) throws Exception {\n    if(maps.size() != ids.length) {\n      throw new Exception(\"Expected id count != actual map count:\"+ids.length+\":\"+maps.size());\n    }\n\n    int i=0;\n    for(int val : ids) {\n      @SuppressWarnings({\"rawtypes\"})\n      Map t = maps.get(i);\n      String tip = (String)t.get(\"id\");\n      if(!tip.equals(Integer.toString(val))) {\n        throw new Exception(\"Found value:\"+tip+\" expecting:\"+val);\n      }\n      ++i;\n    }\n    return true;\n  }\n\n","sourceOld":"  protected boolean assertMaps(List<Map> maps, int... ids) throws Exception {\n    if(maps.size() != ids.length) {\n      throw new Exception(\"Expected id count != actual map count:\"+ids.length+\":\"+maps.size());\n    }\n\n    int i=0;\n    for(int val : ids) {\n      Map t = maps.get(i);\n      String tip = (String)t.get(\"id\");\n      if(!tip.equals(Integer.toString(val))) {\n        throw new Exception(\"Found value:\"+tip+\" expecting:\"+val);\n      }\n      ++i;\n    }\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e98520789adb1d5ad05afb4956eca0944a929688"],"e98520789adb1d5ad05afb4956eca0944a929688":["94e31112925a65b1d36f9064772080e25b5ef373"],"94e31112925a65b1d36f9064772080e25b5ef373":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["94e31112925a65b1d36f9064772080e25b5ef373"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"e98520789adb1d5ad05afb4956eca0944a929688":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"94e31112925a65b1d36f9064772080e25b5ef373":["e98520789adb1d5ad05afb4956eca0944a929688"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}