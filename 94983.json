{"path":"lucene/src/java/org/apache/lucene/store/VerifyingLockFactory#VerifyingLockFactory(byte,LockFactory,String,int).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/store/VerifyingLockFactory#VerifyingLockFactory(byte,LockFactory,String,int).mjava","pathOld":"src/java/org/apache/lucene/store/VerifyingLockFactory#VerifyingLockFactory(byte,LockFactory,String,int).mjava","sourceNew":"  /**\n   * @param id should be a unique id across all clients\n   * @param lf the LockFactory that we are testing\n   * @param host host or IP where {@link LockVerifyServer}\n            is running\n   * @param port the port {@link LockVerifyServer} is\n            listening on\n  */\n  public VerifyingLockFactory(byte id, LockFactory lf, String host, int port) throws IOException {\n    this.id = id;\n    this.lf = lf;\n    this.host = host;\n    this.port = port;\n  }\n\n","sourceOld":"  /**\n   * @param id should be a unique id across all clients\n   * @param lf the LockFactory that we are testing\n   * @param host host or IP where {@link LockVerifyServer}\n            is running\n   * @param port the port {@link LockVerifyServer} is\n            listening on\n  */\n  public VerifyingLockFactory(byte id, LockFactory lf, String host, int port) throws IOException {\n    this.id = id;\n    this.lf = lf;\n    this.host = host;\n    this.port = port;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/store/VerifyingLockFactory#VerifyingLockFactory(byte,LockFactory,String,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/store/VerifyingLockFactory#VerifyingLockFactory(byte,LockFactory,String,int).mjava","sourceNew":"  /**\n   * @param id should be a unique id across all clients\n   * @param lf the LockFactory that we are testing\n   * @param host host or IP where {@link LockVerifyServer}\n            is running\n   * @param port the port {@link LockVerifyServer} is\n            listening on\n  */\n  public VerifyingLockFactory(byte id, LockFactory lf, String host, int port) throws IOException {\n    this.id = id;\n    this.lf = lf;\n    this.host = host;\n    this.port = port;\n  }\n\n","sourceOld":"  /**\n   * @param id should be a unique id across all clients\n   * @param lf the LockFactory that we are testing\n   * @param host host or IP where {@link LockVerifyServer}\n            is running\n   * @param port the port {@link LockVerifyServer} is\n            listening on\n  */\n  public VerifyingLockFactory(byte id, LockFactory lf, String host, int port) throws IOException {\n    this.id = id;\n    this.lf = lf;\n    this.host = host;\n    this.port = port;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}