{"path":"src/java/org/apache/lucene/store/RAMOutputStream#flushBuffer(byte[],int,int).mjava","commits":[{"id":"8522ae207a56c6db28ca06fe6cc33e70911c3600","date":1173935743,"type":1,"author":"Michael Busch","isMerge":false,"pathNew":"src/java/org/apache/lucene/store/RAMOutputStream#flushBuffer(byte[],int,int).mjava","pathOld":"src/java/org/apache/lucene/store/RAMOutputStream#flushBuffer(byte[],int).mjava","sourceNew":"  public void flushBuffer(byte[] src, int offset, int len) throws IOException {\n    byte[] buffer;\n    int bufferPos = 0;\n    while (bufferPos != len) {\n      int bufferNumber = (int)(pointer/BUFFER_SIZE);\n      int bufferOffset = (int)(pointer%BUFFER_SIZE);\n      int bytesInBuffer = BUFFER_SIZE - bufferOffset;\n      int remainInSrcBuffer = len - bufferPos;\n      int bytesToCopy = bytesInBuffer >= remainInSrcBuffer ? remainInSrcBuffer : bytesInBuffer;\n\n      if (bufferNumber == file.buffers.size())\n        buffer = file.addBuffer(BUFFER_SIZE);\n      else\n        buffer = (byte[]) file.buffers.get(bufferNumber);\n\n      System.arraycopy(src, offset + bufferPos, buffer, bufferOffset, bytesToCopy);\n      bufferPos += bytesToCopy;\n      pointer += bytesToCopy;\n    }\n\n    if (pointer > file.length)\n      file.setLength(pointer);\n\n    file.setLastModified(System.currentTimeMillis());\n  }\n\n","sourceOld":"  public void flushBuffer(byte[] src, int len) throws IOException {\n    byte[] buffer;\n    int bufferPos = 0;\n    while (bufferPos != len) {\n      int bufferNumber = (int)(pointer/BUFFER_SIZE);\n      int bufferOffset = (int)(pointer%BUFFER_SIZE);\n      int bytesInBuffer = BUFFER_SIZE - bufferOffset;\n      int remainInSrcBuffer = len - bufferPos;\n      int bytesToCopy = bytesInBuffer >= remainInSrcBuffer ? remainInSrcBuffer : bytesInBuffer;\n\n      if (bufferNumber == file.buffers.size())\n        buffer = file.addBuffer(BUFFER_SIZE);\n      else\n        buffer = (byte[]) file.buffers.get(bufferNumber);\n\n      System.arraycopy(src, bufferPos, buffer, bufferOffset, bytesToCopy);\n      bufferPos += bytesToCopy;\n      pointer += bytesToCopy;\n    }\n\n    if (pointer > file.length)\n      file.setLength(pointer);\n\n    file.setLastModified(System.currentTimeMillis());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d568d474b2c3c00dd89047135bcb6ff8bfa7b559","date":1176840521,"type":4,"author":"Michael Busch","isMerge":false,"pathNew":"/dev/null","pathOld":"src/java/org/apache/lucene/store/RAMOutputStream#flushBuffer(byte[],int,int).mjava","sourceNew":null,"sourceOld":"  public void flushBuffer(byte[] src, int offset, int len) throws IOException {\n    byte[] buffer;\n    int bufferPos = 0;\n    while (bufferPos != len) {\n      int bufferNumber = (int)(pointer/BUFFER_SIZE);\n      int bufferOffset = (int)(pointer%BUFFER_SIZE);\n      int bytesInBuffer = BUFFER_SIZE - bufferOffset;\n      int remainInSrcBuffer = len - bufferPos;\n      int bytesToCopy = bytesInBuffer >= remainInSrcBuffer ? remainInSrcBuffer : bytesInBuffer;\n\n      if (bufferNumber == file.buffers.size())\n        buffer = file.addBuffer(BUFFER_SIZE);\n      else\n        buffer = (byte[]) file.buffers.get(bufferNumber);\n\n      System.arraycopy(src, offset + bufferPos, buffer, bufferOffset, bytesToCopy);\n      bufferPos += bytesToCopy;\n      pointer += bytesToCopy;\n    }\n\n    if (pointer > file.length)\n      file.setLength(pointer);\n\n    file.setLastModified(System.currentTimeMillis());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d568d474b2c3c00dd89047135bcb6ff8bfa7b559":["8522ae207a56c6db28ca06fe6cc33e70911c3600"],"8522ae207a56c6db28ca06fe6cc33e70911c3600":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d568d474b2c3c00dd89047135bcb6ff8bfa7b559"]},"commit2Childs":{"d568d474b2c3c00dd89047135bcb6ff8bfa7b559":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"8522ae207a56c6db28ca06fe6cc33e70911c3600":["d568d474b2c3c00dd89047135bcb6ff8bfa7b559"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8522ae207a56c6db28ca06fe6cc33e70911c3600"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}