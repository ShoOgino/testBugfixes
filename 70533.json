{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/LBHttpSolrClient#makeSolrClient(String).mjava","commits":[{"id":"bafca15d8e408346a67f4282ad1143b88023893b","date":1420034748,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/LBHttpSolrClient#makeSolrClient(String).mjava","pathOld":"/dev/null","sourceNew":"  protected HttpSolrClient makeSolrClient(String server) {\n    HttpSolrClient client = new HttpSolrClient(server, httpClient, parser);\n    if (requestWriter != null) {\n      client.setRequestWriter(requestWriter);\n    }\n    if (queryParams != null) {\n      client.setQueryParams(queryParams);\n    }\n    return client;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"859081acf00749f5dd462772c571d611d4a4d2db","date":1459527719,"type":3,"author":"markrmiller","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/LBHttpSolrClient#makeSolrClient(String).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/LBHttpSolrClient#makeSolrClient(String).mjava","sourceNew":"  protected HttpSolrClient makeSolrClient(String server) {\n    HttpSolrClient client = new HttpSolrClient(server, httpClient, parser);\n    if (connectionTimeout != null) {\n      client.setConnectionTimeout(connectionTimeout);\n    }\n    if (soTimeout != null) {\n      client.setSoTimeout(soTimeout);\n    }\n    if (requestWriter != null) {\n      client.setRequestWriter(requestWriter);\n    }\n    if (queryParams != null) {\n      client.setQueryParams(queryParams);\n    }\n    return client;\n  }\n\n","sourceOld":"  protected HttpSolrClient makeSolrClient(String server) {\n    HttpSolrClient client = new HttpSolrClient(server, httpClient, parser);\n    if (requestWriter != null) {\n      client.setRequestWriter(requestWriter);\n    }\n    if (queryParams != null) {\n      client.setQueryParams(queryParams);\n    }\n    return client;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e3c94a8b8bf47db4f968d9ae510ec8bbe1372088","date":1460069869,"type":3,"author":"Anshum Gupta","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/LBHttpSolrClient#makeSolrClient(String).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/LBHttpSolrClient#makeSolrClient(String).mjava","sourceNew":"  protected HttpSolrClient makeSolrClient(String server) {\n    HttpSolrClient client = new HttpSolrClient.Builder(server)\n        .withHttpClient(httpClient)\n        .withResponseParser(parser)\n        .build();\n    if (connectionTimeout != null) {\n      client.setConnectionTimeout(connectionTimeout);\n    }\n    if (soTimeout != null) {\n      client.setSoTimeout(soTimeout);\n    }\n    if (requestWriter != null) {\n      client.setRequestWriter(requestWriter);\n    }\n    if (queryParams != null) {\n      client.setQueryParams(queryParams);\n    }\n    return client;\n  }\n\n","sourceOld":"  protected HttpSolrClient makeSolrClient(String server) {\n    HttpSolrClient client = new HttpSolrClient(server, httpClient, parser);\n    if (connectionTimeout != null) {\n      client.setConnectionTimeout(connectionTimeout);\n    }\n    if (soTimeout != null) {\n      client.setSoTimeout(soTimeout);\n    }\n    if (requestWriter != null) {\n      client.setRequestWriter(requestWriter);\n    }\n    if (queryParams != null) {\n      client.setQueryParams(queryParams);\n    }\n    return client;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5bdaf2cee03ff78b0a0cbf23df0095a3590b493b","date":1460110033,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/LBHttpSolrClient#makeSolrClient(String).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/LBHttpSolrClient#makeSolrClient(String).mjava","sourceNew":"  protected HttpSolrClient makeSolrClient(String server) {\n    HttpSolrClient client = new HttpSolrClient.Builder(server)\n        .withHttpClient(httpClient)\n        .withResponseParser(parser)\n        .build();\n    if (connectionTimeout != null) {\n      client.setConnectionTimeout(connectionTimeout);\n    }\n    if (soTimeout != null) {\n      client.setSoTimeout(soTimeout);\n    }\n    if (requestWriter != null) {\n      client.setRequestWriter(requestWriter);\n    }\n    if (queryParams != null) {\n      client.setQueryParams(queryParams);\n    }\n    return client;\n  }\n\n","sourceOld":"  protected HttpSolrClient makeSolrClient(String server) {\n    HttpSolrClient client = new HttpSolrClient(server, httpClient, parser);\n    if (connectionTimeout != null) {\n      client.setConnectionTimeout(connectionTimeout);\n    }\n    if (soTimeout != null) {\n      client.setSoTimeout(soTimeout);\n    }\n    if (requestWriter != null) {\n      client.setRequestWriter(requestWriter);\n    }\n    if (queryParams != null) {\n      client.setQueryParams(queryParams);\n    }\n    return client;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"12df104910eced8075ef09fb442e2db6273d6741","date":1475520560,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/LBHttpSolrClient#makeSolrClient(String).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/LBHttpSolrClient#makeSolrClient(String).mjava","sourceNew":"  protected HttpSolrClient makeSolrClient(String server) {\n    HttpSolrClient client;\n    if (httpSolrClientBuilder != null) {\n      synchronized (this) {\n        client = httpSolrClientBuilder\n            .withBaseSolrUrl(server)\n            .withHttpClient(httpClient)\n            .build();\n      }\n    } else {\n      client = new HttpSolrClient.Builder(server)\n          .withHttpClient(httpClient)\n          .withResponseParser(parser)\n          .build();\n    }\n    if (requestWriter != null) {\n      client.setRequestWriter(requestWriter);\n    }\n    if (queryParams != null) {\n      client.setQueryParams(queryParams);\n    }\n    return client;\n  }\n\n","sourceOld":"  protected HttpSolrClient makeSolrClient(String server) {\n    HttpSolrClient client = new HttpSolrClient.Builder(server)\n        .withHttpClient(httpClient)\n        .withResponseParser(parser)\n        .build();\n    if (connectionTimeout != null) {\n      client.setConnectionTimeout(connectionTimeout);\n    }\n    if (soTimeout != null) {\n      client.setSoTimeout(soTimeout);\n    }\n    if (requestWriter != null) {\n      client.setRequestWriter(requestWriter);\n    }\n    if (queryParams != null) {\n      client.setQueryParams(queryParams);\n    }\n    return client;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/LBHttpSolrClient#makeSolrClient(String).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/LBHttpSolrClient#makeSolrClient(String).mjava","sourceNew":"  protected HttpSolrClient makeSolrClient(String server) {\n    HttpSolrClient client;\n    if (httpSolrClientBuilder != null) {\n      synchronized (this) {\n        client = httpSolrClientBuilder\n            .withBaseSolrUrl(server)\n            .withHttpClient(httpClient)\n            .build();\n      }\n    } else {\n      client = new HttpSolrClient.Builder(server)\n          .withHttpClient(httpClient)\n          .withResponseParser(parser)\n          .build();\n    }\n    if (requestWriter != null) {\n      client.setRequestWriter(requestWriter);\n    }\n    if (queryParams != null) {\n      client.setQueryParams(queryParams);\n    }\n    return client;\n  }\n\n","sourceOld":"  protected HttpSolrClient makeSolrClient(String server) {\n    HttpSolrClient client = new HttpSolrClient.Builder(server)\n        .withHttpClient(httpClient)\n        .withResponseParser(parser)\n        .build();\n    if (connectionTimeout != null) {\n      client.setConnectionTimeout(connectionTimeout);\n    }\n    if (soTimeout != null) {\n      client.setSoTimeout(soTimeout);\n    }\n    if (requestWriter != null) {\n      client.setRequestWriter(requestWriter);\n    }\n    if (queryParams != null) {\n      client.setQueryParams(queryParams);\n    }\n    return client;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"43d1e498704edd2bba13548a189eed4dfccff11b","date":1499143458,"type":3,"author":"Anshum Gupta","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/LBHttpSolrClient#makeSolrClient(String).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/LBHttpSolrClient#makeSolrClient(String).mjava","sourceNew":"  protected HttpSolrClient makeSolrClient(String server) {\n    HttpSolrClient client;\n    if (httpSolrClientBuilder != null) {\n      synchronized (this) {\n        httpSolrClientBuilder\n            .withBaseSolrUrl(server)\n            .withHttpClient(httpClient);\n        if (connectionTimeout != null) {\n          httpSolrClientBuilder.withConnectionTimeout(connectionTimeout);\n        }\n        if (soTimeout != null) {\n          httpSolrClientBuilder.withSocketTimeout(soTimeout);\n        }\n        client = httpSolrClientBuilder.build();\n      }\n    } else {\n      final HttpSolrClient.Builder clientBuilder = new HttpSolrClient.Builder(server)\n          .withHttpClient(httpClient)\n          .withResponseParser(parser);\n      if (connectionTimeout != null) {\n        clientBuilder.withConnectionTimeout(connectionTimeout);\n      }\n      if (soTimeout != null) {\n        clientBuilder.withSocketTimeout(soTimeout);\n      }\n      client = clientBuilder.build();\n    }\n    if (requestWriter != null) {\n      client.setRequestWriter(requestWriter);\n    }\n    if (queryParams != null) {\n      client.setQueryParams(queryParams);\n    }\n    return client;\n  }\n\n","sourceOld":"  protected HttpSolrClient makeSolrClient(String server) {\n    HttpSolrClient client;\n    if (httpSolrClientBuilder != null) {\n      synchronized (this) {\n        client = httpSolrClientBuilder\n            .withBaseSolrUrl(server)\n            .withHttpClient(httpClient)\n            .build();\n      }\n    } else {\n      client = new HttpSolrClient.Builder(server)\n          .withHttpClient(httpClient)\n          .withResponseParser(parser)\n          .build();\n    }\n    if (requestWriter != null) {\n      client.setRequestWriter(requestWriter);\n    }\n    if (queryParams != null) {\n      client.setQueryParams(queryParams);\n    }\n    return client;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2ea161f828a3a7a6eb9410a431aecda6d7ab1065","date":1499213384,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/LBHttpSolrClient#makeSolrClient(String).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/LBHttpSolrClient#makeSolrClient(String).mjava","sourceNew":"  protected HttpSolrClient makeSolrClient(String server) {\n    HttpSolrClient client;\n    if (httpSolrClientBuilder != null) {\n      synchronized (this) {\n        httpSolrClientBuilder\n            .withBaseSolrUrl(server)\n            .withHttpClient(httpClient);\n        if (connectionTimeout != null) {\n          httpSolrClientBuilder.withConnectionTimeout(connectionTimeout);\n        }\n        if (soTimeout != null) {\n          httpSolrClientBuilder.withSocketTimeout(soTimeout);\n        }\n        client = httpSolrClientBuilder.build();\n      }\n    } else {\n      final HttpSolrClient.Builder clientBuilder = new HttpSolrClient.Builder(server)\n          .withHttpClient(httpClient)\n          .withResponseParser(parser);\n      if (connectionTimeout != null) {\n        clientBuilder.withConnectionTimeout(connectionTimeout);\n      }\n      if (soTimeout != null) {\n        clientBuilder.withSocketTimeout(soTimeout);\n      }\n      client = clientBuilder.build();\n    }\n    if (requestWriter != null) {\n      client.setRequestWriter(requestWriter);\n    }\n    if (queryParams != null) {\n      client.setQueryParams(queryParams);\n    }\n    return client;\n  }\n\n","sourceOld":"  protected HttpSolrClient makeSolrClient(String server) {\n    HttpSolrClient client;\n    if (httpSolrClientBuilder != null) {\n      synchronized (this) {\n        client = httpSolrClientBuilder\n            .withBaseSolrUrl(server)\n            .withHttpClient(httpClient)\n            .build();\n      }\n    } else {\n      client = new HttpSolrClient.Builder(server)\n          .withHttpClient(httpClient)\n          .withResponseParser(parser)\n          .build();\n    }\n    if (requestWriter != null) {\n      client.setRequestWriter(requestWriter);\n    }\n    if (queryParams != null) {\n      client.setQueryParams(queryParams);\n    }\n    return client;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"43d1e498704edd2bba13548a189eed4dfccff11b":["12df104910eced8075ef09fb442e2db6273d6741"],"859081acf00749f5dd462772c571d611d4a4d2db":["bafca15d8e408346a67f4282ad1143b88023893b"],"2ea161f828a3a7a6eb9410a431aecda6d7ab1065":["12df104910eced8075ef09fb442e2db6273d6741","43d1e498704edd2bba13548a189eed4dfccff11b"],"e3c94a8b8bf47db4f968d9ae510ec8bbe1372088":["859081acf00749f5dd462772c571d611d4a4d2db"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5bdaf2cee03ff78b0a0cbf23df0095a3590b493b":["859081acf00749f5dd462772c571d611d4a4d2db","e3c94a8b8bf47db4f968d9ae510ec8bbe1372088"],"12df104910eced8075ef09fb442e2db6273d6741":["5bdaf2cee03ff78b0a0cbf23df0095a3590b493b"],"bafca15d8e408346a67f4282ad1143b88023893b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["5bdaf2cee03ff78b0a0cbf23df0095a3590b493b","12df104910eced8075ef09fb442e2db6273d6741"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["43d1e498704edd2bba13548a189eed4dfccff11b"]},"commit2Childs":{"43d1e498704edd2bba13548a189eed4dfccff11b":["2ea161f828a3a7a6eb9410a431aecda6d7ab1065","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"859081acf00749f5dd462772c571d611d4a4d2db":["e3c94a8b8bf47db4f968d9ae510ec8bbe1372088","5bdaf2cee03ff78b0a0cbf23df0095a3590b493b"],"2ea161f828a3a7a6eb9410a431aecda6d7ab1065":[],"e3c94a8b8bf47db4f968d9ae510ec8bbe1372088":["5bdaf2cee03ff78b0a0cbf23df0095a3590b493b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["bafca15d8e408346a67f4282ad1143b88023893b"],"5bdaf2cee03ff78b0a0cbf23df0095a3590b493b":["12df104910eced8075ef09fb442e2db6273d6741","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"12df104910eced8075ef09fb442e2db6273d6741":["43d1e498704edd2bba13548a189eed4dfccff11b","2ea161f828a3a7a6eb9410a431aecda6d7ab1065","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"bafca15d8e408346a67f4282ad1143b88023893b":["859081acf00749f5dd462772c571d611d4a4d2db"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["2ea161f828a3a7a6eb9410a431aecda6d7ab1065","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}