{"path":"lucene/core/src/java/org/apache/lucene/store/FileSwitchDirectory#sync(Collection[String]).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/store/FileSwitchDirectory#sync(Collection[String]).mjava","pathOld":"lucene/src/java/org/apache/lucene/store/FileSwitchDirectory#sync(Collection[String]).mjava","sourceNew":"  @Override\n  public void sync(Collection<String> names) throws IOException {\n    List<String> primaryNames = new ArrayList<String>();\n    List<String> secondaryNames = new ArrayList<String>();\n\n    for (String name : names)\n      if (primaryExtensions.contains(getExtension(name)))\n        primaryNames.add(name);\n      else\n        secondaryNames.add(name);\n\n    primaryDir.sync(primaryNames);\n    secondaryDir.sync(secondaryNames);\n  }\n\n","sourceOld":"  @Override\n  public void sync(Collection<String> names) throws IOException {\n    List<String> primaryNames = new ArrayList<String>();\n    List<String> secondaryNames = new ArrayList<String>();\n\n    for (String name : names)\n      if (primaryExtensions.contains(getExtension(name)))\n        primaryNames.add(name);\n      else\n        secondaryNames.add(name);\n\n    primaryDir.sync(primaryNames);\n    secondaryDir.sync(secondaryNames);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/store/FileSwitchDirectory#sync(Collection[String]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/store/FileSwitchDirectory#sync(Collection[String]).mjava","sourceNew":"  @Override\n  public void sync(Collection<String> names) throws IOException {\n    List<String> primaryNames = new ArrayList<>();\n    List<String> secondaryNames = new ArrayList<>();\n\n    for (String name : names)\n      if (primaryExtensions.contains(getExtension(name)))\n        primaryNames.add(name);\n      else\n        secondaryNames.add(name);\n\n    primaryDir.sync(primaryNames);\n    secondaryDir.sync(secondaryNames);\n  }\n\n","sourceOld":"  @Override\n  public void sync(Collection<String> names) throws IOException {\n    List<String> primaryNames = new ArrayList<String>();\n    List<String> secondaryNames = new ArrayList<String>();\n\n    for (String name : names)\n      if (primaryExtensions.contains(getExtension(name)))\n        primaryNames.add(name);\n      else\n        secondaryNames.add(name);\n\n    primaryDir.sync(primaryNames);\n    secondaryDir.sync(secondaryNames);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"90671118e7e92007dbc908dd155b24990f315e82","date":1560840479,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/store/FileSwitchDirectory#sync(Collection[String]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/store/FileSwitchDirectory#sync(Collection[String]).mjava","sourceNew":"  @Override\n  public void sync(Collection<String> names) throws IOException {\n    List<String> primaryNames = new ArrayList<>();\n    List<String> secondaryNames = new ArrayList<>();\n\n    for (String name : names)\n      if (primaryExtensions.contains(getExtension(name))) {\n        primaryNames.add(name);\n      } else {\n        secondaryNames.add(name);\n      }\n\n    primaryDir.sync(primaryNames);\n    secondaryDir.sync(secondaryNames);\n  }\n\n","sourceOld":"  @Override\n  public void sync(Collection<String> names) throws IOException {\n    List<String> primaryNames = new ArrayList<>();\n    List<String> secondaryNames = new ArrayList<>();\n\n    for (String name : names)\n      if (primaryExtensions.contains(getExtension(name)))\n        primaryNames.add(name);\n      else\n        secondaryNames.add(name);\n\n    primaryDir.sync(primaryNames);\n    secondaryDir.sync(secondaryNames);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"90671118e7e92007dbc908dd155b24990f315e82":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["90671118e7e92007dbc908dd155b24990f315e82"]},"commit2Childs":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["90671118e7e92007dbc908dd155b24990f315e82"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"90671118e7e92007dbc908dd155b24990f315e82":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}