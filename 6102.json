{"path":"solr/core/src/java/org/apache/solr/update/DocumentBuilder#addField(Document,SchemaField,Object,float).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/DocumentBuilder#addField(Document,SchemaField,Object,float).mjava","pathOld":"solr/src/java/org/apache/solr/update/DocumentBuilder#addField(Document,SchemaField,Object,float).mjava","sourceNew":"  private static void addField(Document doc, SchemaField field, Object val, float boost) {\n    if (field.isPolyField()) {\n      Fieldable[] farr = field.getType().createFields(field, val, boost);\n      for (Fieldable f : farr) {\n        if (f != null) doc.add(f); // null fields are not added\n      }\n    } else {\n      Fieldable f = field.createField(val, boost);\n      if (f != null) doc.add(f);  // null fields are not added\n    }\n  }\n\n","sourceOld":"  private static void addField(Document doc, SchemaField field, Object val, float boost) {\n    if (field.isPolyField()) {\n      Fieldable[] farr = field.getType().createFields(field, val, boost);\n      for (Fieldable f : farr) {\n        if (f != null) doc.add(f); // null fields are not added\n      }\n    } else {\n      Fieldable f = field.createField(val, boost);\n      if (f != null) doc.add(f);  // null fields are not added\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/DocumentBuilder#addField(Document,SchemaField,Object,float).mjava","pathOld":"solr/src/java/org/apache/solr/update/DocumentBuilder#addField(Document,SchemaField,Object,float).mjava","sourceNew":"  private static void addField(Document doc, SchemaField field, Object val, float boost) {\n    if (field.isPolyField()) {\n      Fieldable[] farr = field.getType().createFields(field, val, boost);\n      for (Fieldable f : farr) {\n        if (f != null) doc.add(f); // null fields are not added\n      }\n    } else {\n      Fieldable f = field.createField(val, boost);\n      if (f != null) doc.add(f);  // null fields are not added\n    }\n  }\n\n","sourceOld":"  private static void addField(Document doc, SchemaField field, Object val, float boost) {\n    if (field.isPolyField()) {\n      Fieldable[] farr = field.getType().createFields(field, val, boost);\n      for (Fieldable f : farr) {\n        if (f != null) doc.add(f); // null fields are not added\n      }\n    } else {\n      Fieldable f = field.createField(val, boost);\n      if (f != null) doc.add(f);  // null fields are not added\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/DocumentBuilder#addField(Document,SchemaField,Object,float).mjava","pathOld":"solr/src/java/org/apache/solr/update/DocumentBuilder#addField(Document,SchemaField,Object,float).mjava","sourceNew":"  private static void addField(Document doc, SchemaField field, Object val, float boost) {\n    if (field.isPolyField()) {\n      Fieldable[] farr = field.getType().createFields(field, val, boost);\n      for (Fieldable f : farr) {\n        if (f != null) doc.add(f); // null fields are not added\n      }\n    } else {\n      Fieldable f = field.createField(val, boost);\n      if (f != null) doc.add(f);  // null fields are not added\n    }\n  }\n\n","sourceOld":"  private static void addField(Document doc, SchemaField field, Object val, float boost) {\n    if (field.isPolyField()) {\n      Fieldable[] farr = field.getType().createFields(field, val, boost);\n      for (Fieldable f : farr) {\n        if (f != null) doc.add(f); // null fields are not added\n      }\n    } else {\n      Fieldable f = field.createField(val, boost);\n      if (f != null) doc.add(f);  // null fields are not added\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1509f151d7692d84fae414b2b799ac06ba60fcb4","date":1314451621,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/DocumentBuilder#addField(Document,SchemaField,Object,float).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/DocumentBuilder#addField(Document,SchemaField,Object,float).mjava","sourceNew":"  private static void addField(Document doc, SchemaField field, Object val, float boost) {\n    if (field.isPolyField()) {\n      IndexableField[] farr = field.getType().createFields(field, val, boost);\n      for (IndexableField f : farr) {\n        if (f != null) doc.add(f); // null fields are not added\n      }\n    } else {\n      IndexableField f = field.createField(val, boost);\n      if (f != null) doc.add(f);  // null fields are not added\n    }\n  }\n\n","sourceOld":"  private static void addField(Document doc, SchemaField field, Object val, float boost) {\n    if (field.isPolyField()) {\n      Fieldable[] farr = field.getType().createFields(field, val, boost);\n      for (Fieldable f : farr) {\n        if (f != null) doc.add(f); // null fields are not added\n      }\n    } else {\n      Fieldable f = field.createField(val, boost);\n      if (f != null) doc.add(f);  // null fields are not added\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"409324b31a1419d7c05a38211168cf317e39be77","date":1344866765,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/DocumentBuilder#addField(Document,SchemaField,Object,float).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/DocumentBuilder#addField(Document,SchemaField,Object,float).mjava","sourceNew":"  private static void addField(Document doc, SchemaField field, Object val, float boost) {\n    if (field.isPolyField()) {\n      StorableField[] farr = field.getType().createFields(field, val, boost);\n      for (StorableField f : farr) {\n        if (f != null) doc.add((Field) f); // null fields are not added\n      }\n    } else {\n      StorableField f = field.createField(val, boost);\n      if (f != null) doc.add((Field) f);  // null fields are not added\n    }\n  }\n\n","sourceOld":"  private static void addField(Document doc, SchemaField field, Object val, float boost) {\n    if (field.isPolyField()) {\n      IndexableField[] farr = field.getType().createFields(field, val, boost);\n      for (IndexableField f : farr) {\n        if (f != null) doc.add(f); // null fields are not added\n      }\n    } else {\n      IndexableField f = field.createField(val, boost);\n      if (f != null) doc.add(f);  // null fields are not added\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1d028314cced5858683a1bb4741423d0f934257b","date":1346596535,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/DocumentBuilder#addField(Document,SchemaField,Object,float).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/DocumentBuilder#addField(Document,SchemaField,Object,float).mjava","sourceNew":"  private static void addField(Document doc, SchemaField field, Object val, float boost) {\n    if (field.isPolyField()) {\n      StorableField[] farr = field.getType().createFields(field, val, boost);\n      for (StorableField f : farr) {\n        if (f != null) doc.add((Field) f); // null fields are not added\n      }\n    } else {\n      StorableField f = field.createField(val, boost);\n      if (f != null) doc.add((Field) f);  // null fields are not added\n    }\n  }\n\n","sourceOld":"  private static void addField(Document doc, SchemaField field, Object val, float boost) {\n    if (field.isPolyField()) {\n      IndexableField[] farr = field.getType().createFields(field, val, boost);\n      for (IndexableField f : farr) {\n        if (f != null) doc.add(f); // null fields are not added\n      }\n    } else {\n      IndexableField f = field.createField(val, boost);\n      if (f != null) doc.add(f);  // null fields are not added\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"73bb5a57dc75b54a39494f99986599cae7dff417","date":1361040620,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/DocumentBuilder#addField(Document,SchemaField,Object,float).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/DocumentBuilder#addField(Document,SchemaField,Object,float).mjava","sourceNew":"  private static void addField(Document doc, SchemaField field, Object val, float boost) {\n    for (StorableField f : field.getType().createFields(field, val, boost)) {\n      if (f != null) doc.add((Field) f); // null fields are not added\n    }\n  }\n\n","sourceOld":"  private static void addField(Document doc, SchemaField field, Object val, float boost) {\n    if (field.isPolyField()) {\n      StorableField[] farr = field.getType().createFields(field, val, boost);\n      for (StorableField f : farr) {\n        if (f != null) doc.add((Field) f); // null fields are not added\n      }\n    } else {\n      StorableField f = field.createField(val, boost);\n      if (f != null) doc.add((Field) f);  // null fields are not added\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"95303ff3749680c743b9425f9cf99e6e4065e8a8","date":1361061922,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/DocumentBuilder#addField(Document,SchemaField,Object,float).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/DocumentBuilder#addField(Document,SchemaField,Object,float).mjava","sourceNew":"  private static void addField(Document doc, SchemaField field, Object val, float boost) {\n    for (StorableField f : field.getType().createFields(field, val, boost)) {\n      if (f != null) doc.add((Field) f); // null fields are not added\n    }\n  }\n\n","sourceOld":"  private static void addField(Document doc, SchemaField field, Object val, float boost) {\n    if (field.isPolyField()) {\n      StorableField[] farr = field.getType().createFields(field, val, boost);\n      for (StorableField f : farr) {\n        if (f != null) doc.add((Field) f); // null fields are not added\n      }\n    } else {\n      StorableField f = field.createField(val, boost);\n      if (f != null) doc.add((Field) f);  // null fields are not added\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6c7ac188e4a03a976c95993dc3cd292df966faa4","date":1365151572,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/DocumentBuilder#addField(Document,SchemaField,Object,float).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/DocumentBuilder#addField(Document,SchemaField,Object,float).mjava","sourceNew":"  private static void addField(Document doc, SchemaField field, Object val, float boost) {\n    if (val instanceof StorableField) {\n      // set boost to the calculated compound boost\n      ((Field)val).setBoost(boost);\n      doc.add((Field)val);\n      return;\n    }\n    for (StorableField f : field.getType().createFields(field, val, boost)) {\n      if (f != null) doc.add((Field) f); // null fields are not added\n    }\n  }\n\n","sourceOld":"  private static void addField(Document doc, SchemaField field, Object val, float boost) {\n    for (StorableField f : field.getType().createFields(field, val, boost)) {\n      if (f != null) doc.add((Field) f); // null fields are not added\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6654c5f3ec2e4a84ef867c82d4eec872c2372c8c","date":1453060490,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/DocumentBuilder#addField(Document,SchemaField,Object,float).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/DocumentBuilder#addField(Document,SchemaField,Object,float).mjava","sourceNew":"  private static void addField(Document doc, SchemaField field, Object val, float boost) {\n    if (val instanceof IndexableField) {\n      // set boost to the calculated compound boost\n      ((Field)val).setBoost(boost);\n      doc.add((Field)val);\n      return;\n    }\n    for (IndexableField f : field.getType().createFields(field, val, boost)) {\n      if (f != null) doc.add((Field) f); // null fields are not added\n    }\n  }\n\n","sourceOld":"  private static void addField(Document doc, SchemaField field, Object val, float boost) {\n    if (val instanceof StorableField) {\n      // set boost to the calculated compound boost\n      ((Field)val).setBoost(boost);\n      doc.add((Field)val);\n      return;\n    }\n    for (StorableField f : field.getType().createFields(field, val, boost)) {\n      if (f != null) doc.add((Field) f); // null fields are not added\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"415bbbe7da8065dd3c477bdc3c703c6425622998","date":1485393793,"type":4,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/update/DocumentBuilder#addField(Document,SchemaField,Object,float).mjava","sourceNew":null,"sourceOld":"  private static void addField(Document doc, SchemaField field, Object val, float boost) {\n    if (val instanceof IndexableField) {\n      // set boost to the calculated compound boost\n      ((Field)val).setBoost(boost);\n      doc.add((Field)val);\n      return;\n    }\n    for (IndexableField f : field.getType().createFields(field, val, boost)) {\n      if (f != null) doc.add((Field) f); // null fields are not added\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"598b5d23aa7c9732bf473c21a9cd309c44599394","date":1485530378,"type":4,"author":"Kevin Risden","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/update/DocumentBuilder#addField(Document,SchemaField,Object,float).mjava","sourceNew":null,"sourceOld":"  private static void addField(Document doc, SchemaField field, Object val, float boost) {\n    if (val instanceof IndexableField) {\n      // set boost to the calculated compound boost\n      ((Field)val).setBoost(boost);\n      doc.add((Field)val);\n      return;\n    }\n    for (IndexableField f : field.getType().createFields(field, val, boost)) {\n      if (f != null) doc.add((Field) f); // null fields are not added\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"415bbbe7da8065dd3c477bdc3c703c6425622998":["6654c5f3ec2e4a84ef867c82d4eec872c2372c8c"],"409324b31a1419d7c05a38211168cf317e39be77":["1509f151d7692d84fae414b2b799ac06ba60fcb4"],"598b5d23aa7c9732bf473c21a9cd309c44599394":["6654c5f3ec2e4a84ef867c82d4eec872c2372c8c","415bbbe7da8065dd3c477bdc3c703c6425622998"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"6c7ac188e4a03a976c95993dc3cd292df966faa4":["73bb5a57dc75b54a39494f99986599cae7dff417"],"1d028314cced5858683a1bb4741423d0f934257b":["1509f151d7692d84fae414b2b799ac06ba60fcb4","409324b31a1419d7c05a38211168cf317e39be77"],"95303ff3749680c743b9425f9cf99e6e4065e8a8":["1d028314cced5858683a1bb4741423d0f934257b","73bb5a57dc75b54a39494f99986599cae7dff417"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["c26f00b574427b55127e869b935845554afde1fa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["415bbbe7da8065dd3c477bdc3c703c6425622998"],"6654c5f3ec2e4a84ef867c82d4eec872c2372c8c":["6c7ac188e4a03a976c95993dc3cd292df966faa4"],"73bb5a57dc75b54a39494f99986599cae7dff417":["1d028314cced5858683a1bb4741423d0f934257b"]},"commit2Childs":{"415bbbe7da8065dd3c477bdc3c703c6425622998":["598b5d23aa7c9732bf473c21a9cd309c44599394","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"409324b31a1419d7c05a38211168cf317e39be77":["1d028314cced5858683a1bb4741423d0f934257b"],"598b5d23aa7c9732bf473c21a9cd309c44599394":[],"c26f00b574427b55127e869b935845554afde1fa":["1509f151d7692d84fae414b2b799ac06ba60fcb4"],"6c7ac188e4a03a976c95993dc3cd292df966faa4":["6654c5f3ec2e4a84ef867c82d4eec872c2372c8c"],"1d028314cced5858683a1bb4741423d0f934257b":["95303ff3749680c743b9425f9cf99e6e4065e8a8","73bb5a57dc75b54a39494f99986599cae7dff417"],"95303ff3749680c743b9425f9cf99e6e4065e8a8":[],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c26f00b574427b55127e869b935845554afde1fa","c903c3d15906a3da96b8c0c2fb704491005fdbdb","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["409324b31a1419d7c05a38211168cf317e39be77","1d028314cced5858683a1bb4741423d0f934257b"],"6654c5f3ec2e4a84ef867c82d4eec872c2372c8c":["415bbbe7da8065dd3c477bdc3c703c6425622998","598b5d23aa7c9732bf473c21a9cd309c44599394"],"73bb5a57dc75b54a39494f99986599cae7dff417":["6c7ac188e4a03a976c95993dc3cd292df966faa4","95303ff3749680c743b9425f9cf99e6e4065e8a8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["598b5d23aa7c9732bf473c21a9cd309c44599394","95303ff3749680c743b9425f9cf99e6e4065e8a8","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}