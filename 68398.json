{"path":"lucene/src/test/org/apache/lucene/index/TestIndexWriterReader.AddDirectoriesThreads#AddDirectoriesThreads(int,IndexWriter).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterReader.AddDirectoriesThreads#AddDirectoriesThreads(int,IndexWriter).mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriterReader.AddDirectoriesThreads#AddDirectoriesThreads(int,IndexWriter).mjava","sourceNew":"    public AddDirectoriesThreads(int numDirs, IndexWriter mainWriter) throws Throwable {\n      this.numDirs = numDirs;\n      this.mainWriter = mainWriter;\n      addDir = new MockRAMDirectory();\n      IndexWriter writer = new IndexWriter(addDir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setMaxBufferedDocs(2));\n      for (int i = 0; i < NUM_INIT_DOCS; i++) {\n        Document doc = createDocument(i, \"addindex\", 4);\n        writer.addDocument(doc);\n      }\n        \n      writer.close();\n      \n      readers = new IndexReader[numDirs];\n      for (int i = 0; i < numDirs; i++)\n        readers[i] = IndexReader.open(addDir, false);\n    }\n\n","sourceOld":"    public AddDirectoriesThreads(int numDirs, IndexWriter mainWriter) throws Throwable {\n      this.numDirs = numDirs;\n      this.mainWriter = mainWriter;\n      addDir = new MockRAMDirectory();\n      IndexWriter writer = new IndexWriter(addDir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setMaxBufferedDocs(2));\n      for (int i = 0; i < NUM_INIT_DOCS; i++) {\n        Document doc = createDocument(i, \"addindex\", 4);\n        writer.addDocument(doc);\n      }\n        \n      writer.close();\n      \n      readers = new IndexReader[numDirs];\n      for (int i = 0; i < numDirs; i++)\n        readers[i] = IndexReader.open(addDir, false);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d572389229127c297dd1fa5ce4758e1cec41e799","date":1273610938,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterReader.AddDirectoriesThreads#AddDirectoriesThreads(int,IndexWriter).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterReader.AddDirectoriesThreads#AddDirectoriesThreads(int,IndexWriter).mjava","sourceNew":"    public AddDirectoriesThreads(int numDirs, IndexWriter mainWriter) throws Throwable {\n      this.numDirs = numDirs;\n      this.mainWriter = mainWriter;\n      addDir = new MockRAMDirectory();\n      IndexWriter writer = new IndexWriter(addDir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(2));\n      for (int i = 0; i < NUM_INIT_DOCS; i++) {\n        Document doc = createDocument(i, \"addindex\", 4);\n        writer.addDocument(doc);\n      }\n        \n      writer.close();\n      \n      readers = new IndexReader[numDirs];\n      for (int i = 0; i < numDirs; i++)\n        readers[i] = IndexReader.open(addDir, false);\n    }\n\n","sourceOld":"    public AddDirectoriesThreads(int numDirs, IndexWriter mainWriter) throws Throwable {\n      this.numDirs = numDirs;\n      this.mainWriter = mainWriter;\n      addDir = new MockRAMDirectory();\n      IndexWriter writer = new IndexWriter(addDir, new IndexWriterConfig(TEST_VERSION_CURRENT, new WhitespaceAnalyzer(TEST_VERSION_CURRENT)).setMaxBufferedDocs(2));\n      for (int i = 0; i < NUM_INIT_DOCS; i++) {\n        Document doc = createDocument(i, \"addindex\", 4);\n        writer.addDocument(doc);\n      }\n        \n      writer.close();\n      \n      readers = new IndexReader[numDirs];\n      for (int i = 0; i < numDirs; i++)\n        readers[i] = IndexReader.open(addDir, false);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b21422ff1d1d56499dec481f193b402e5e8def5b","date":1281472367,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterReader.AddDirectoriesThreads#AddDirectoriesThreads(int,IndexWriter).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterReader.AddDirectoriesThreads#AddDirectoriesThreads(int,IndexWriter).mjava","sourceNew":"    public AddDirectoriesThreads(int numDirs, IndexWriter mainWriter) throws Throwable {\n      this.numDirs = numDirs;\n      this.mainWriter = mainWriter;\n      addDir = new MockRAMDirectory();\n      IndexWriter writer = new IndexWriter(addDir, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(2));\n      for (int i = 0; i < NUM_INIT_DOCS; i++) {\n        Document doc = createDocument(i, \"addindex\", 4);\n        writer.addDocument(doc);\n      }\n        \n      writer.close();\n      \n      readers = new IndexReader[numDirs];\n      for (int i = 0; i < numDirs; i++)\n        readers[i] = IndexReader.open(addDir, false);\n    }\n\n","sourceOld":"    public AddDirectoriesThreads(int numDirs, IndexWriter mainWriter) throws Throwable {\n      this.numDirs = numDirs;\n      this.mainWriter = mainWriter;\n      addDir = new MockRAMDirectory();\n      IndexWriter writer = new IndexWriter(addDir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(2));\n      for (int i = 0; i < NUM_INIT_DOCS; i++) {\n        Document doc = createDocument(i, \"addindex\", 4);\n        writer.addDocument(doc);\n      }\n        \n      writer.close();\n      \n      readers = new IndexReader[numDirs];\n      for (int i = 0; i < numDirs; i++)\n        readers[i] = IndexReader.open(addDir, false);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c","date":1281646583,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterReader.AddDirectoriesThreads#AddDirectoriesThreads(int,IndexWriter).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterReader.AddDirectoriesThreads#AddDirectoriesThreads(int,IndexWriter).mjava","sourceNew":"    public AddDirectoriesThreads(int numDirs, IndexWriter mainWriter) throws Throwable {\n      this.numDirs = numDirs;\n      this.mainWriter = mainWriter;\n      addDir = newDirectory(random);\n      IndexWriter writer = new IndexWriter(addDir, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(2));\n      for (int i = 0; i < NUM_INIT_DOCS; i++) {\n        Document doc = createDocument(i, \"addindex\", 4);\n        writer.addDocument(doc);\n      }\n        \n      writer.close();\n      \n      readers = new IndexReader[numDirs];\n      for (int i = 0; i < numDirs; i++)\n        readers[i] = IndexReader.open(addDir, false);\n    }\n\n","sourceOld":"    public AddDirectoriesThreads(int numDirs, IndexWriter mainWriter) throws Throwable {\n      this.numDirs = numDirs;\n      this.mainWriter = mainWriter;\n      addDir = new MockRAMDirectory();\n      IndexWriter writer = new IndexWriter(addDir, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(2));\n      for (int i = 0; i < NUM_INIT_DOCS; i++) {\n        Document doc = createDocument(i, \"addindex\", 4);\n        writer.addDocument(doc);\n      }\n        \n      writer.close();\n      \n      readers = new IndexReader[numDirs];\n      for (int i = 0; i < numDirs; i++)\n        readers[i] = IndexReader.open(addDir, false);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1f653cfcf159baeaafe5d01682a911e95bba4012","date":1284122058,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterReader.AddDirectoriesThreads#AddDirectoriesThreads(int,IndexWriter).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterReader.AddDirectoriesThreads#AddDirectoriesThreads(int,IndexWriter).mjava","sourceNew":"    public AddDirectoriesThreads(int numDirs, IndexWriter mainWriter) throws Throwable {\n      this.numDirs = numDirs;\n      this.mainWriter = mainWriter;\n      addDir = newDirectory();\n      IndexWriter writer = new IndexWriter(addDir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(2));\n      for (int i = 0; i < NUM_INIT_DOCS; i++) {\n        Document doc = createDocument(i, \"addindex\", 4);\n        writer.addDocument(doc);\n      }\n        \n      writer.close();\n      \n      readers = new IndexReader[numDirs];\n      for (int i = 0; i < numDirs; i++)\n        readers[i] = IndexReader.open(addDir, false);\n    }\n\n","sourceOld":"    public AddDirectoriesThreads(int numDirs, IndexWriter mainWriter) throws Throwable {\n      this.numDirs = numDirs;\n      this.mainWriter = mainWriter;\n      addDir = newDirectory(random);\n      IndexWriter writer = new IndexWriter(addDir, newIndexWriterConfig(random, TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(2));\n      for (int i = 0; i < NUM_INIT_DOCS; i++) {\n        Document doc = createDocument(i, \"addindex\", 4);\n        writer.addDocument(doc);\n      }\n        \n      writer.close();\n      \n      readers = new IndexReader[numDirs];\n      for (int i = 0; i < numDirs; i++)\n        readers[i] = IndexReader.open(addDir, false);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterReader.AddDirectoriesThreads#AddDirectoriesThreads(int,IndexWriter).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterReader.AddDirectoriesThreads#AddDirectoriesThreads(int,IndexWriter).mjava","sourceNew":"    public AddDirectoriesThreads(int numDirs, IndexWriter mainWriter) throws Throwable {\n      this.numDirs = numDirs;\n      this.mainWriter = mainWriter;\n      addDir = newDirectory();\n      IndexWriter writer = new IndexWriter(addDir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(2));\n      for (int i = 0; i < NUM_INIT_DOCS; i++) {\n        Document doc = createDocument(i, \"addindex\", 4);\n        writer.addDocument(doc);\n      }\n        \n      writer.close();\n      \n      readers = new IndexReader[numDirs];\n      for (int i = 0; i < numDirs; i++)\n        readers[i] = IndexReader.open(addDir, false);\n    }\n\n","sourceOld":"    public AddDirectoriesThreads(int numDirs, IndexWriter mainWriter) throws Throwable {\n      this.numDirs = numDirs;\n      this.mainWriter = mainWriter;\n      addDir = new MockRAMDirectory();\n      IndexWriter writer = new IndexWriter(addDir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(2));\n      for (int i = 0; i < NUM_INIT_DOCS; i++) {\n        Document doc = createDocument(i, \"addindex\", 4);\n        writer.addDocument(doc);\n      }\n        \n      writer.close();\n      \n      readers = new IndexReader[numDirs];\n      for (int i = 0; i < numDirs; i++)\n        readers[i] = IndexReader.open(addDir, false);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f2c5f0cb44df114db4228c8f77861714b5cabaea","date":1302542431,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterReader.AddDirectoriesThreads#AddDirectoriesThreads(int,IndexWriter).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterReader.AddDirectoriesThreads#AddDirectoriesThreads(int,IndexWriter).mjava","sourceNew":"    public AddDirectoriesThreads(int numDirs, IndexWriter mainWriter) throws Throwable {\n      this.numDirs = numDirs;\n      this.mainWriter = mainWriter;\n      addDir = newDirectory();\n      IndexWriter writer = new IndexWriter(addDir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(2));\n      for (int i = 0; i < NUM_INIT_DOCS; i++) {\n        Document doc = createDocument(i, \"addindex\", 4);\n        writer.addDocument(doc);\n      }\n        \n      writer.close();\n      \n      readers = new IndexReader[numDirs];\n      for (int i = 0; i < numDirs; i++)\n        readers[i] = IndexReader.open(addDir, false);\n    }\n\n","sourceOld":"    public AddDirectoriesThreads(int numDirs, IndexWriter mainWriter) throws Throwable {\n      this.numDirs = numDirs;\n      this.mainWriter = mainWriter;\n      addDir = newDirectory();\n      IndexWriter writer = new IndexWriter(addDir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(2));\n      for (int i = 0; i < NUM_INIT_DOCS; i++) {\n        Document doc = createDocument(i, \"addindex\", 4);\n        writer.addDocument(doc);\n      }\n        \n      writer.close();\n      \n      readers = new IndexReader[numDirs];\n      for (int i = 0; i < numDirs; i++)\n        readers[i] = IndexReader.open(addDir, false);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"962d04139994fce5193143ef35615499a9a96d78","date":1302693744,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterReader.AddDirectoriesThreads#AddDirectoriesThreads(int,IndexWriter).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterReader.AddDirectoriesThreads#AddDirectoriesThreads(int,IndexWriter).mjava","sourceNew":"    public AddDirectoriesThreads(int numDirs, IndexWriter mainWriter) throws Throwable {\n      this.numDirs = numDirs;\n      this.mainWriter = mainWriter;\n      addDir = newDirectory();\n      IndexWriter writer = new IndexWriter(addDir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(2));\n      for (int i = 0; i < NUM_INIT_DOCS; i++) {\n        Document doc = createDocument(i, \"addindex\", 4);\n        writer.addDocument(doc);\n      }\n        \n      writer.close();\n      \n      readers = new IndexReader[numDirs];\n      for (int i = 0; i < numDirs; i++)\n        readers[i] = IndexReader.open(addDir, false);\n    }\n\n","sourceOld":"    public AddDirectoriesThreads(int numDirs, IndexWriter mainWriter) throws Throwable {\n      this.numDirs = numDirs;\n      this.mainWriter = mainWriter;\n      addDir = newDirectory();\n      IndexWriter writer = new IndexWriter(addDir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(2));\n      for (int i = 0; i < NUM_INIT_DOCS; i++) {\n        Document doc = createDocument(i, \"addindex\", 4);\n        writer.addDocument(doc);\n      }\n        \n      writer.close();\n      \n      readers = new IndexReader[numDirs];\n      for (int i = 0; i < numDirs; i++)\n        readers[i] = IndexReader.open(addDir, false);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterReader.AddDirectoriesThreads#AddDirectoriesThreads(int,IndexWriter).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterReader.AddDirectoriesThreads#AddDirectoriesThreads(int,IndexWriter).mjava","sourceNew":"    public AddDirectoriesThreads(int numDirs, IndexWriter mainWriter) throws Throwable {\n      this.numDirs = numDirs;\n      this.mainWriter = mainWriter;\n      addDir = newDirectory();\n      IndexWriter writer = new IndexWriter(addDir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(2));\n      for (int i = 0; i < NUM_INIT_DOCS; i++) {\n        Document doc = createDocument(i, \"addindex\", 4);\n        writer.addDocument(doc);\n      }\n        \n      writer.close();\n      \n      readers = new IndexReader[numDirs];\n      for (int i = 0; i < numDirs; i++)\n        readers[i] = IndexReader.open(addDir, false);\n    }\n\n","sourceOld":"    public AddDirectoriesThreads(int numDirs, IndexWriter mainWriter) throws Throwable {\n      this.numDirs = numDirs;\n      this.mainWriter = mainWriter;\n      addDir = newDirectory();\n      IndexWriter writer = new IndexWriter(addDir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(2));\n      for (int i = 0; i < NUM_INIT_DOCS; i++) {\n        Document doc = createDocument(i, \"addindex\", 4);\n        writer.addDocument(doc);\n      }\n        \n      writer.close();\n      \n      readers = new IndexReader[numDirs];\n      for (int i = 0; i < numDirs; i++)\n        readers[i] = IndexReader.open(addDir, false);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterReader.AddDirectoriesThreads#AddDirectoriesThreads(int,IndexWriter).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterReader.AddDirectoriesThreads#AddDirectoriesThreads(int,IndexWriter).mjava","sourceNew":"    public AddDirectoriesThreads(int numDirs, IndexWriter mainWriter) throws Throwable {\n      this.numDirs = numDirs;\n      this.mainWriter = mainWriter;\n      addDir = newDirectory();\n      IndexWriter writer = new IndexWriter(addDir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(2));\n      for (int i = 0; i < NUM_INIT_DOCS; i++) {\n        Document doc = createDocument(i, \"addindex\", 4);\n        writer.addDocument(doc);\n      }\n        \n      writer.close();\n      \n      readers = new IndexReader[numDirs];\n      for (int i = 0; i < numDirs; i++)\n        readers[i] = IndexReader.open(addDir, false);\n    }\n\n","sourceOld":"    public AddDirectoriesThreads(int numDirs, IndexWriter mainWriter) throws Throwable {\n      this.numDirs = numDirs;\n      this.mainWriter = mainWriter;\n      addDir = newDirectory();\n      IndexWriter writer = new IndexWriter(addDir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer()).setMaxBufferedDocs(2));\n      for (int i = 0; i < NUM_INIT_DOCS; i++) {\n        Document doc = createDocument(i, \"addindex\", 4);\n        writer.addDocument(doc);\n      }\n        \n      writer.close();\n      \n      readers = new IndexReader[numDirs];\n      for (int i = 0; i < numDirs; i++)\n        readers[i] = IndexReader.open(addDir, false);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"00743482822ec0841b0344a37944b666e6a0228d","date":1313588663,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterReader.AddDirectoriesThreads#AddDirectoriesThreads(int,IndexWriter).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterReader.AddDirectoriesThreads#AddDirectoriesThreads(int,IndexWriter).mjava","sourceNew":"    public AddDirectoriesThreads(int numDirs, IndexWriter mainWriter) throws Throwable {\n      this.numDirs = numDirs;\n      this.mainWriter = mainWriter;\n      addDir = newDirectory();\n      IndexWriter writer = new IndexWriter(addDir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(2));\n      for (int i = 0; i < NUM_INIT_DOCS; i++) {\n        Document doc = DocHelper.createDocument(i, \"addindex\", 4);\n        writer.addDocument(doc);\n      }\n        \n      writer.close();\n      \n      readers = new IndexReader[numDirs];\n      for (int i = 0; i < numDirs; i++)\n        readers[i] = IndexReader.open(addDir, false);\n    }\n\n","sourceOld":"    public AddDirectoriesThreads(int numDirs, IndexWriter mainWriter) throws Throwable {\n      this.numDirs = numDirs;\n      this.mainWriter = mainWriter;\n      addDir = newDirectory();\n      IndexWriter writer = new IndexWriter(addDir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(2));\n      for (int i = 0; i < NUM_INIT_DOCS; i++) {\n        Document doc = createDocument(i, \"addindex\", 4);\n        writer.addDocument(doc);\n      }\n        \n      writer.close();\n      \n      readers = new IndexReader[numDirs];\n      for (int i = 0; i < numDirs; i++)\n        readers[i] = IndexReader.open(addDir, false);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1c5b026d03cbbb03ca4c0b97d14e9839682281dc","date":1323049298,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterReader.AddDirectoriesThreads#AddDirectoriesThreads(int,IndexWriter).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterReader.AddDirectoriesThreads#AddDirectoriesThreads(int,IndexWriter).mjava","sourceNew":"    public AddDirectoriesThreads(int numDirs, IndexWriter mainWriter) throws Throwable {\n      this.numDirs = numDirs;\n      this.mainWriter = mainWriter;\n      addDir = newDirectory();\n      IndexWriter writer = new IndexWriter(addDir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(2));\n      for (int i = 0; i < NUM_INIT_DOCS; i++) {\n        Document doc = DocHelper.createDocument(i, \"addindex\", 4);\n        writer.addDocument(doc);\n      }\n        \n      writer.close();\n      \n      readers = new IndexReader[numDirs];\n      for (int i = 0; i < numDirs; i++)\n        readers[i] = IndexReader.open(addDir);\n    }\n\n","sourceOld":"    public AddDirectoriesThreads(int numDirs, IndexWriter mainWriter) throws Throwable {\n      this.numDirs = numDirs;\n      this.mainWriter = mainWriter;\n      addDir = newDirectory();\n      IndexWriter writer = new IndexWriter(addDir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(2));\n      for (int i = 0; i < NUM_INIT_DOCS; i++) {\n        Document doc = DocHelper.createDocument(i, \"addindex\", 4);\n        writer.addDocument(doc);\n      }\n        \n      writer.close();\n      \n      readers = new IndexReader[numDirs];\n      for (int i = 0; i < numDirs; i++)\n        readers[i] = IndexReader.open(addDir, false);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3615ce4a1f785ae1b779244de52c6a7d99227e60","date":1323422019,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterReader.AddDirectoriesThreads#AddDirectoriesThreads(int,IndexWriter).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterReader.AddDirectoriesThreads#AddDirectoriesThreads(int,IndexWriter).mjava","sourceNew":"    public AddDirectoriesThreads(int numDirs, IndexWriter mainWriter) throws Throwable {\n      this.numDirs = numDirs;\n      this.mainWriter = mainWriter;\n      addDir = newDirectory();\n      IndexWriter writer = new IndexWriter(addDir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(2));\n      for (int i = 0; i < NUM_INIT_DOCS; i++) {\n        Document doc = DocHelper.createDocument(i, \"addindex\", 4);\n        writer.addDocument(doc);\n      }\n        \n      writer.close();\n      \n      readers = new IndexReader[numDirs];\n      for (int i = 0; i < numDirs; i++)\n        readers[i] = IndexReader.open(addDir);\n    }\n\n","sourceOld":"    public AddDirectoriesThreads(int numDirs, IndexWriter mainWriter) throws Throwable {\n      this.numDirs = numDirs;\n      this.mainWriter = mainWriter;\n      addDir = newDirectory();\n      IndexWriter writer = new IndexWriter(addDir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(2));\n      for (int i = 0; i < NUM_INIT_DOCS; i++) {\n        Document doc = DocHelper.createDocument(i, \"addindex\", 4);\n        writer.addDocument(doc);\n      }\n        \n      writer.close();\n      \n      readers = new IndexReader[numDirs];\n      for (int i = 0; i < numDirs; i++)\n        readers[i] = IndexReader.open(addDir, false);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","date":1323437438,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterReader.AddDirectoriesThreads#AddDirectoriesThreads(int,IndexWriter).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterReader.AddDirectoriesThreads#AddDirectoriesThreads(int,IndexWriter).mjava","sourceNew":"    public AddDirectoriesThreads(int numDirs, IndexWriter mainWriter) throws Throwable {\n      this.numDirs = numDirs;\n      this.mainWriter = mainWriter;\n      addDir = newDirectory();\n      IndexWriter writer = new IndexWriter(addDir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(2));\n      for (int i = 0; i < NUM_INIT_DOCS; i++) {\n        Document doc = DocHelper.createDocument(i, \"addindex\", 4);\n        writer.addDocument(doc);\n      }\n        \n      writer.close();\n      \n      readers = new IndexReader[numDirs];\n      for (int i = 0; i < numDirs; i++)\n        readers[i] = IndexReader.open(addDir);\n    }\n\n","sourceOld":"    public AddDirectoriesThreads(int numDirs, IndexWriter mainWriter) throws Throwable {\n      this.numDirs = numDirs;\n      this.mainWriter = mainWriter;\n      addDir = newDirectory();\n      IndexWriter writer = new IndexWriter(addDir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(2));\n      for (int i = 0; i < NUM_INIT_DOCS; i++) {\n        Document doc = DocHelper.createDocument(i, \"addindex\", 4);\n        writer.addDocument(doc);\n      }\n        \n      writer.close();\n      \n      readers = new IndexReader[numDirs];\n      for (int i = 0; i < numDirs; i++)\n        readers[i] = IndexReader.open(addDir, false);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriterReader.AddDirectoriesThreads#AddDirectoriesThreads(int,IndexWriter).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIndexWriterReader.AddDirectoriesThreads#AddDirectoriesThreads(int,IndexWriter).mjava","sourceNew":"    public AddDirectoriesThreads(int numDirs, IndexWriter mainWriter) throws Throwable {\n      this.numDirs = numDirs;\n      this.mainWriter = mainWriter;\n      addDir = newDirectory();\n      IndexWriter writer = new IndexWriter(addDir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(2));\n      for (int i = 0; i < NUM_INIT_DOCS; i++) {\n        Document doc = DocHelper.createDocument(i, \"addindex\", 4);\n        writer.addDocument(doc);\n      }\n        \n      writer.close();\n      \n      readers = new IndexReader[numDirs];\n      for (int i = 0; i < numDirs; i++)\n        readers[i] = IndexReader.open(addDir);\n    }\n\n","sourceOld":"    public AddDirectoriesThreads(int numDirs, IndexWriter mainWriter) throws Throwable {\n      this.numDirs = numDirs;\n      this.mainWriter = mainWriter;\n      addDir = newDirectory();\n      IndexWriter writer = new IndexWriter(addDir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random)).setMaxBufferedDocs(2));\n      for (int i = 0; i < NUM_INIT_DOCS; i++) {\n        Document doc = DocHelper.createDocument(i, \"addindex\", 4);\n        writer.addDocument(doc);\n      }\n        \n      writer.close();\n      \n      readers = new IndexReader[numDirs];\n      for (int i = 0; i < numDirs; i++)\n        readers[i] = IndexReader.open(addDir);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c":["b21422ff1d1d56499dec481f193b402e5e8def5b"],"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00":["00743482822ec0841b0344a37944b666e6a0228d","3615ce4a1f785ae1b779244de52c6a7d99227e60"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["3615ce4a1f785ae1b779244de52c6a7d99227e60"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["1f653cfcf159baeaafe5d01682a911e95bba4012","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"d572389229127c297dd1fa5ce4758e1cec41e799":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"1c5b026d03cbbb03ca4c0b97d14e9839682281dc":["00743482822ec0841b0344a37944b666e6a0228d"],"00743482822ec0841b0344a37944b666e6a0228d":["f2c5f0cb44df114db4228c8f77861714b5cabaea"],"962d04139994fce5193143ef35615499a9a96d78":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["d572389229127c297dd1fa5ce4758e1cec41e799","1f653cfcf159baeaafe5d01682a911e95bba4012"],"f2c5f0cb44df114db4228c8f77861714b5cabaea":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"1f653cfcf159baeaafe5d01682a911e95bba4012":["ab9633cb67e3c0aec3c066147a23a957d6e7ad8c"],"a3776dccca01c11e7046323cfad46a3b4a471233":["1f653cfcf159baeaafe5d01682a911e95bba4012","f2c5f0cb44df114db4228c8f77861714b5cabaea"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3615ce4a1f785ae1b779244de52c6a7d99227e60":["00743482822ec0841b0344a37944b666e6a0228d","1c5b026d03cbbb03ca4c0b97d14e9839682281dc"],"b21422ff1d1d56499dec481f193b402e5e8def5b":["d572389229127c297dd1fa5ce4758e1cec41e799"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c":["1f653cfcf159baeaafe5d01682a911e95bba4012"],"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00":[],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":[],"d572389229127c297dd1fa5ce4758e1cec41e799":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","b21422ff1d1d56499dec481f193b402e5e8def5b"],"1c5b026d03cbbb03ca4c0b97d14e9839682281dc":["3615ce4a1f785ae1b779244de52c6a7d99227e60"],"00743482822ec0841b0344a37944b666e6a0228d":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","1c5b026d03cbbb03ca4c0b97d14e9839682281dc","3615ce4a1f785ae1b779244de52c6a7d99227e60"],"962d04139994fce5193143ef35615499a9a96d78":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["962d04139994fce5193143ef35615499a9a96d78"],"f2c5f0cb44df114db4228c8f77861714b5cabaea":["135621f3a0670a9394eb563224a3b76cc4dddc0f","00743482822ec0841b0344a37944b666e6a0228d","962d04139994fce5193143ef35615499a9a96d78","a3776dccca01c11e7046323cfad46a3b4a471233"],"1f653cfcf159baeaafe5d01682a911e95bba4012":["135621f3a0670a9394eb563224a3b76cc4dddc0f","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","f2c5f0cb44df114db4228c8f77861714b5cabaea","a3776dccca01c11e7046323cfad46a3b4a471233"],"a3776dccca01c11e7046323cfad46a3b4a471233":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"3615ce4a1f785ae1b779244de52c6a7d99227e60":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"b21422ff1d1d56499dec481f193b402e5e8def5b":["ab9633cb67e3c0aec3c066147a23a957d6e7ad8c"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["d572389229127c297dd1fa5ce4758e1cec41e799"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","135621f3a0670a9394eb563224a3b76cc4dddc0f","962d04139994fce5193143ef35615499a9a96d78","a3776dccca01c11e7046323cfad46a3b4a471233","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}