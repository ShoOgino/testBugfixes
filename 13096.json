{"path":"solr/core/src/java/org/apache/solr/cloud/ZkController#setConfWatcher(String,Watcher).mjava","commits":[{"id":"531fe719c7218235a679452eb3d137bfd8fc6af1","date":1415191086,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/ZkController#setConfWatcher(String,Watcher).mjava","pathOld":"/dev/null","sourceNew":"  private void setConfWatcher(String zkDir, Watcher watcher) {\n    try {\n      zkClient.getChildren(zkDir,watcher,true);\n    } catch (KeeperException e) {\n      log.error(\"failed to set watcher for conf dir {} \", zkDir);\n    } catch (InterruptedException e) {\n      Thread.interrupted();\n      log.error(\"failed to set watcher for conf dir {} \", zkDir);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"08f9f60ad238cb88d12306a20077e84d1f1f93e4","date":1416549887,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/ZkController#setConfWatcher(String,Watcher).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/ZkController#setConfWatcher(String,Watcher).mjava","sourceNew":"  private void setConfWatcher(String zkDir, Watcher watcher) {\n    try {\n      zkClient.exists(zkDir,watcher,true);\n    } catch (KeeperException e) {\n      log.error(\"failed to set watcher for conf dir {} \", zkDir);\n    } catch (InterruptedException e) {\n      Thread.currentThread().interrupt();\n      log.error(\"failed to set watcher for conf dir {} \", zkDir);\n    }\n  }\n\n","sourceOld":"  private void setConfWatcher(String zkDir, Watcher watcher) {\n    try {\n      zkClient.getChildren(zkDir,watcher,true);\n    } catch (KeeperException e) {\n      log.error(\"failed to set watcher for conf dir {} \", zkDir);\n    } catch (InterruptedException e) {\n      Thread.interrupted();\n      log.error(\"failed to set watcher for conf dir {} \", zkDir);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4e6b620c271c84c0f14919eec7b90083b292ee51","date":1419461736,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/ZkController#setConfWatcher(String,Watcher).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/ZkController#setConfWatcher(String,Watcher).mjava","sourceNew":"  private void setConfWatcher(String zkDir, Watcher watcher) {\n    try {\n      zkClient.exists(zkDir, watcher, true);\n    } catch (KeeperException e) {\n      log.error(\"failed to set watcher for conf dir {} \", zkDir);\n    } catch (InterruptedException e) {\n      Thread.currentThread().interrupt();\n      log.error(\"failed to set watcher for conf dir {} \", zkDir);\n    }\n  }\n\n","sourceOld":"  private void setConfWatcher(String zkDir, Watcher watcher) {\n    try {\n      zkClient.exists(zkDir,watcher,true);\n    } catch (KeeperException e) {\n      log.error(\"failed to set watcher for conf dir {} \", zkDir);\n    } catch (InterruptedException e) {\n      Thread.currentThread().interrupt();\n      log.error(\"failed to set watcher for conf dir {} \", zkDir);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"98798900014e18f407b1910aa34db4d3ae76ecc6","date":1427307584,"type":5,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/ZkController#setConfWatcher(String,Watcher,Stat).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/ZkController#setConfWatcher(String,Watcher).mjava","sourceNew":"  private void setConfWatcher(String zkDir, Watcher watcher, Stat stat) {\n    try {\n      Stat newStat = zkClient.exists(zkDir, watcher, true);\n      if (stat != null && newStat.getVersion() > stat.getVersion()) {\n        //a race condition where a we missed an even fired\n        //so fire the event listeners\n        fireEventListeners(zkDir);\n      }\n      zkClient.exists(zkDir, watcher, true);\n    } catch (KeeperException e) {\n      log.error(\"failed to set watcher for conf dir {} \", zkDir);\n    } catch (InterruptedException e) {\n      Thread.currentThread().interrupt();\n      log.error(\"failed to set watcher for conf dir {} \", zkDir);\n    }\n  }\n\n","sourceOld":"  private void setConfWatcher(String zkDir, Watcher watcher) {\n    try {\n      zkClient.exists(zkDir, watcher, true);\n    } catch (KeeperException e) {\n      log.error(\"failed to set watcher for conf dir {} \", zkDir);\n    } catch (InterruptedException e) {\n      Thread.currentThread().interrupt();\n      log.error(\"failed to set watcher for conf dir {} \", zkDir);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":4,"author":"Ryan Ernst","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/cloud/ZkController#setConfWatcher(String,Watcher).mjava","sourceNew":null,"sourceOld":"  private void setConfWatcher(String zkDir, Watcher watcher) {\n    try {\n      zkClient.exists(zkDir, watcher, true);\n    } catch (KeeperException e) {\n      log.error(\"failed to set watcher for conf dir {} \", zkDir);\n    } catch (InterruptedException e) {\n      Thread.currentThread().interrupt();\n      log.error(\"failed to set watcher for conf dir {} \", zkDir);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"08f9f60ad238cb88d12306a20077e84d1f1f93e4":["531fe719c7218235a679452eb3d137bfd8fc6af1"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["4e6b620c271c84c0f14919eec7b90083b292ee51","98798900014e18f407b1910aa34db4d3ae76ecc6"],"531fe719c7218235a679452eb3d137bfd8fc6af1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"98798900014e18f407b1910aa34db4d3ae76ecc6":["4e6b620c271c84c0f14919eec7b90083b292ee51"],"4e6b620c271c84c0f14919eec7b90083b292ee51":["08f9f60ad238cb88d12306a20077e84d1f1f93e4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["98798900014e18f407b1910aa34db4d3ae76ecc6"]},"commit2Childs":{"08f9f60ad238cb88d12306a20077e84d1f1f93e4":["4e6b620c271c84c0f14919eec7b90083b292ee51"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"531fe719c7218235a679452eb3d137bfd8fc6af1":["08f9f60ad238cb88d12306a20077e84d1f1f93e4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["531fe719c7218235a679452eb3d137bfd8fc6af1"],"98798900014e18f407b1910aa34db4d3ae76ecc6":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4e6b620c271c84c0f14919eec7b90083b292ee51":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","98798900014e18f407b1910aa34db4d3ae76ecc6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}