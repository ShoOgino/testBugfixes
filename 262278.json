{"path":"lucene/src/test/org/apache/lucene/search/TestFieldCache#generateString(int).mjava","commits":[{"id":"4b9c530f0c3eb63ee033b10be793c129a67dc918","date":1313516656,"type":0,"author":"Martijn van Groningen","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestFieldCache#generateString(int).mjava","pathOld":"/dev/null","sourceNew":"  private String generateString(int i) {\n    String s = null;\n    if (i > 0 && random.nextInt(3) == 1) {\n      // reuse past string -- try to find one that's not null\n      for(int iter = 0; iter < 10 && s == null;iter++) {\n        s = unicodeStrings[random.nextInt(i)];\n      }\n      if (s == null) {\n        s = _TestUtil.randomUnicodeString(random, 250);\n      }\n    } else {\n      s = _TestUtil.randomUnicodeString(random, 250);\n    }\n    return s;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e5e5c6c8ae09dfecf83a636d1c7f46bf007e40f9","date":1313584749,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestFieldCache#generateString(int).mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestFieldCache#generateString(int).mjava","sourceNew":"  private String generateString(int i) {\n    String s = null;\n    if (i > 0 && random.nextInt(3) == 1) {\n      // reuse past string -- try to find one that's not null\n      for(int iter = 0; iter < 10 && s == null;iter++) {\n        s = unicodeStrings[random.nextInt(i)];\n      }\n      if (s == null) {\n        s = _TestUtil.randomUnicodeString(random);\n      }\n    } else {\n      s = _TestUtil.randomUnicodeString(random);\n    }\n    return s;\n  }\n\n","sourceOld":"  private String generateString(int i) {\n    String s = null;\n    if (i > 0 && random.nextInt(3) == 1) {\n      // reuse past string -- try to find one that's not null\n      for(int iter = 0; iter < 10 && s == null;iter++) {\n        s = unicodeStrings[random.nextInt(i)];\n      }\n      if (s == null) {\n        s = _TestUtil.randomUnicodeString(random, 250);\n      }\n    } else {\n      s = _TestUtil.randomUnicodeString(random, 250);\n    }\n    return s;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8be580b58bcc650d428f3f22de81cadcf51d650a","date":1325279655,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestFieldCache#generateString(int).mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestFieldCache#generateString(int).mjava","sourceNew":"  private static String generateString(int i) {\n    String s = null;\n    if (i > 0 && random.nextInt(3) == 1) {\n      // reuse past string -- try to find one that's not null\n      for(int iter = 0; iter < 10 && s == null;iter++) {\n        s = unicodeStrings[random.nextInt(i)];\n      }\n      if (s == null) {\n        s = _TestUtil.randomUnicodeString(random);\n      }\n    } else {\n      s = _TestUtil.randomUnicodeString(random);\n    }\n    return s;\n  }\n\n","sourceOld":"  private String generateString(int i) {\n    String s = null;\n    if (i > 0 && random.nextInt(3) == 1) {\n      // reuse past string -- try to find one that's not null\n      for(int iter = 0; iter < 10 && s == null;iter++) {\n        s = unicodeStrings[random.nextInt(i)];\n      }\n      if (s == null) {\n        s = _TestUtil.randomUnicodeString(random);\n      }\n    } else {\n      s = _TestUtil.randomUnicodeString(random);\n    }\n    return s;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestFieldCache#generateString(int).mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestFieldCache#generateString(int).mjava","sourceNew":"  private static String generateString(int i) {\n    String s = null;\n    if (i > 0 && random.nextInt(3) == 1) {\n      // reuse past string -- try to find one that's not null\n      for(int iter = 0; iter < 10 && s == null;iter++) {\n        s = unicodeStrings[random.nextInt(i)];\n      }\n      if (s == null) {\n        s = _TestUtil.randomUnicodeString(random);\n      }\n    } else {\n      s = _TestUtil.randomUnicodeString(random);\n    }\n    return s;\n  }\n\n","sourceOld":"  private static String generateString(int i) {\n    String s = null;\n    if (i > 0 && random.nextInt(3) == 1) {\n      // reuse past string -- try to find one that's not null\n      for(int iter = 0; iter < 10 && s == null;iter++) {\n        s = unicodeStrings[random.nextInt(i)];\n      }\n      if (s == null) {\n        s = _TestUtil.randomUnicodeString(random);\n      }\n    } else {\n      s = _TestUtil.randomUnicodeString(random);\n    }\n    return s;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4b9c530f0c3eb63ee033b10be793c129a67dc918":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["8be580b58bcc650d428f3f22de81cadcf51d650a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8be580b58bcc650d428f3f22de81cadcf51d650a":["e5e5c6c8ae09dfecf83a636d1c7f46bf007e40f9"],"e5e5c6c8ae09dfecf83a636d1c7f46bf007e40f9":["4b9c530f0c3eb63ee033b10be793c129a67dc918"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"4b9c530f0c3eb63ee033b10be793c129a67dc918":["e5e5c6c8ae09dfecf83a636d1c7f46bf007e40f9"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4b9c530f0c3eb63ee033b10be793c129a67dc918"],"8be580b58bcc650d428f3f22de81cadcf51d650a":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"e5e5c6c8ae09dfecf83a636d1c7f46bf007e40f9":["8be580b58bcc650d428f3f22de81cadcf51d650a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}