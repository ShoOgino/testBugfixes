{"path":"src/test/org/apache/lucene/index/TestIndexWriter#xxxtestSmallRAMBuffer().mjava","commits":[{"id":"3215ae1377fc1ca1790921d75dd39cb764743b85","date":1237371771,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriter#xxxtestSmallRAMBuffer().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriter#testSmallRAMBuffer().mjava","sourceNew":"    public void xxxtestSmallRAMBuffer() throws IOException {\n      RAMDirectory dir = new RAMDirectory();      \n      IndexWriter writer  = new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n      writer.setRAMBufferSizeMB(0.000001);\n      int lastNumFile = dir.listAll().length;\n      for(int j=0;j<9;j++) {\n        Document doc = new Document();\n        doc.add(new Field(\"field\", \"aaa\" + j, Field.Store.YES, Field.Index.ANALYZED));\n        writer.addDocument(doc);\n        int numFile = dir.listAll().length;\n        // Verify that with a tiny RAM buffer we see new\n        // segment after every doc\n        assertTrue(numFile > lastNumFile);\n        lastNumFile = numFile;\n      }\n      writer.close();\n      dir.close();\n    }\n\n","sourceOld":"    public void testSmallRAMBuffer() throws IOException {\n      RAMDirectory dir = new RAMDirectory();      \n      IndexWriter writer  = new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n      writer.setRAMBufferSizeMB(0.000001);\n      int lastNumFile = dir.listAll().length;\n      for(int j=0;j<9;j++) {\n        Document doc = new Document();\n        doc.add(new Field(\"field\", \"aaa\" + j, Field.Store.YES, Field.Index.ANALYZED));\n        writer.addDocument(doc);\n        int numFile = dir.listAll().length;\n        // Verify that with a tiny RAM buffer we see new\n        // segment after every doc\n        assertTrue(numFile > lastNumFile);\n        lastNumFile = numFile;\n      }\n      writer.close();\n      dir.close();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"09c482d1e63332617181729a225b215c452d8a79","date":1237396006,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriter#testSmallRAMBuffer().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriter#xxxtestSmallRAMBuffer().mjava","sourceNew":"    public void testSmallRAMBuffer() throws IOException {\n      RAMDirectory dir = new RAMDirectory();      \n      IndexWriter writer  = new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n      writer.setRAMBufferSizeMB(0.000001);\n      int lastNumFile = dir.listAll().length;\n      for(int j=0;j<9;j++) {\n        Document doc = new Document();\n        doc.add(new Field(\"field\", \"aaa\" + j, Field.Store.YES, Field.Index.ANALYZED));\n        writer.addDocument(doc);\n        int numFile = dir.listAll().length;\n        // Verify that with a tiny RAM buffer we see new\n        // segment after every doc\n        assertTrue(numFile > lastNumFile);\n        lastNumFile = numFile;\n      }\n      writer.close();\n      dir.close();\n    }\n\n","sourceOld":"    public void xxxtestSmallRAMBuffer() throws IOException {\n      RAMDirectory dir = new RAMDirectory();      \n      IndexWriter writer  = new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n      writer.setRAMBufferSizeMB(0.000001);\n      int lastNumFile = dir.listAll().length;\n      for(int j=0;j<9;j++) {\n        Document doc = new Document();\n        doc.add(new Field(\"field\", \"aaa\" + j, Field.Store.YES, Field.Index.ANALYZED));\n        writer.addDocument(doc);\n        int numFile = dir.listAll().length;\n        // Verify that with a tiny RAM buffer we see new\n        // segment after every doc\n        assertTrue(numFile > lastNumFile);\n        lastNumFile = numFile;\n      }\n      writer.close();\n      dir.close();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3215ae1377fc1ca1790921d75dd39cb764743b85":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"09c482d1e63332617181729a225b215c452d8a79":["3215ae1377fc1ca1790921d75dd39cb764743b85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["09c482d1e63332617181729a225b215c452d8a79"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3215ae1377fc1ca1790921d75dd39cb764743b85"],"3215ae1377fc1ca1790921d75dd39cb764743b85":["09c482d1e63332617181729a225b215c452d8a79"],"09c482d1e63332617181729a225b215c452d8a79":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}