{"path":"lucene/core/src/java/org/apache/lucene/index/ConcurrentMergeScheduler#verbose().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/ConcurrentMergeScheduler#verbose().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/ConcurrentMergeScheduler#verbose().mjava","sourceNew":"  /**\n   * Returns true if verbosing is enabled. This method is usually used in\n   * conjunction with {@link #message(String)}, like that:\n   * \n   * <pre>\n   * if (verbose()) {\n   *   message(&quot;your message&quot;);\n   * }\n   * </pre>\n   */\n  protected boolean verbose() {\n    return writer != null && writer.infoStream.isEnabled(\"CMS\");\n  }\n\n","sourceOld":"  /**\n   * Returns true if verbosing is enabled. This method is usually used in\n   * conjunction with {@link #message(String)}, like that:\n   * \n   * <pre>\n   * if (verbose()) {\n   *   message(&quot;your message&quot;);\n   * }\n   * </pre>\n   */\n  protected boolean verbose() {\n    return writer != null && writer.infoStream.isEnabled(\"CMS\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8471c0f357621e859602d44e1af230581b739319","date":1347468766,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/ConcurrentMergeScheduler#verbose().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/ConcurrentMergeScheduler#verbose().mjava","sourceNew":"  /**\n   * Returns true if verbosing is enabled. This method is usually used in\n   * conjunction with {@link #message(String)}, like that:\n   * \n   * <pre class=\"prettyprint\">\n   * if (verbose()) {\n   *   message(&quot;your message&quot;);\n   * }\n   * </pre>\n   */\n  protected boolean verbose() {\n    return writer != null && writer.infoStream.isEnabled(\"CMS\");\n  }\n\n","sourceOld":"  /**\n   * Returns true if verbosing is enabled. This method is usually used in\n   * conjunction with {@link #message(String)}, like that:\n   * \n   * <pre>\n   * if (verbose()) {\n   *   message(&quot;your message&quot;);\n   * }\n   * </pre>\n   */\n  protected boolean verbose() {\n    return writer != null && writer.infoStream.isEnabled(\"CMS\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5faf65b6692f15cca0f87bf8666c87899afc619f","date":1420468108,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MergeScheduler#verbose().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/ConcurrentMergeScheduler#verbose().mjava","sourceNew":"  /**\n   * Returns true if infoStream messages are enabled. This method is usually used in\n   * conjunction with {@link #message(String)}:\n   * \n   * <pre class=\"prettyprint\">\n   * if (verbose()) {\n   *   message(&quot;your message&quot;);\n   * }\n   * </pre>\n   */\n  protected boolean verbose() {\n    return infoStream != null && infoStream.isEnabled(\"MS\");\n  }\n\n","sourceOld":"  /**\n   * Returns true if verbosing is enabled. This method is usually used in\n   * conjunction with {@link #message(String)}, like that:\n   * \n   * <pre class=\"prettyprint\">\n   * if (verbose()) {\n   *   message(&quot;your message&quot;);\n   * }\n   * </pre>\n   */\n  protected boolean verbose() {\n    return writer != null && writer.infoStream.isEnabled(\"CMS\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8471c0f357621e859602d44e1af230581b739319":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5faf65b6692f15cca0f87bf8666c87899afc619f":["8471c0f357621e859602d44e1af230581b739319"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5faf65b6692f15cca0f87bf8666c87899afc619f"]},"commit2Childs":{"8471c0f357621e859602d44e1af230581b739319":["5faf65b6692f15cca0f87bf8666c87899afc619f"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["8471c0f357621e859602d44e1af230581b739319"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"5faf65b6692f15cca0f87bf8666c87899afc619f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}