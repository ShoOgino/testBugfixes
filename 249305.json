{"path":"solr/core/src/java/org/apache/solr/handler/SnapShooter#validateDeleteSnapshot().mjava","commits":[{"id":"a5bb2e653b3f6992c26fe4cc0f3fbdce37b21c3c","date":1399457549,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/SnapShooter#validateDeleteSnapshot().mjava","pathOld":"/dev/null","sourceNew":"  public void validateDeleteSnapshot() {\n    boolean dirFound = false;\n    File[] files = new File(snapDir).listFiles();\n    for(File f : files) {\n      if (f.getName().equals(\"snapshot.\" + snapshotName)) {\n        dirFound = true;\n        break;\n      }\n    }\n    if(dirFound == false) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Snapshot cannot be found in directory: \" + snapDir);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a51ab9b1f1b896f06b7ba61672f0fca2a4fce43b","date":1466705968,"type":3,"author":"Varun Thacker","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/SnapShooter#validateDeleteSnapshot().mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/SnapShooter#validateDeleteSnapshot().mjava","sourceNew":"  public void validateDeleteSnapshot() {\n    Preconditions.checkNotNull(this.snapshotName);\n\n    boolean dirFound = false;\n    String[] paths;\n    try {\n      paths = backupRepo.listAll(baseSnapDirPath);\n      for (String path : paths) {\n        if (path.equals(this.directoryName)\n            && backupRepo.getPathType(baseSnapDirPath.resolve(path)) == PathType.DIRECTORY) {\n          dirFound = true;\n          break;\n        }\n      }\n      if(dirFound == false) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Snapshot \" + snapshotName + \" cannot be found in directory: \" + baseSnapDirPath);\n      }\n    } catch (IOException e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Unable to find snapshot \" + snapshotName + \" in directory: \" + baseSnapDirPath, e);\n    }\n  }\n\n","sourceOld":"  public void validateDeleteSnapshot() {\n    boolean dirFound = false;\n    File[] files = new File(snapDir).listFiles();\n    for(File f : files) {\n      if (f.getName().equals(\"snapshot.\" + snapshotName)) {\n        dirFound = true;\n        break;\n      }\n    }\n    if(dirFound == false) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Snapshot cannot be found in directory: \" + snapDir);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/SnapShooter#validateDeleteSnapshot().mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/SnapShooter#validateDeleteSnapshot().mjava","sourceNew":"  public void validateDeleteSnapshot() {\n    Preconditions.checkNotNull(this.snapshotName);\n\n    boolean dirFound = false;\n    String[] paths;\n    try {\n      paths = backupRepo.listAll(baseSnapDirPath);\n      for (String path : paths) {\n        if (path.equals(this.directoryName)\n            && backupRepo.getPathType(baseSnapDirPath.resolve(path)) == PathType.DIRECTORY) {\n          dirFound = true;\n          break;\n        }\n      }\n      if(dirFound == false) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Snapshot \" + snapshotName + \" cannot be found in directory: \" + baseSnapDirPath);\n      }\n    } catch (IOException e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Unable to find snapshot \" + snapshotName + \" in directory: \" + baseSnapDirPath, e);\n    }\n  }\n\n","sourceOld":"  public void validateDeleteSnapshot() {\n    boolean dirFound = false;\n    File[] files = new File(snapDir).listFiles();\n    for(File f : files) {\n      if (f.getName().equals(\"snapshot.\" + snapshotName)) {\n        dirFound = true;\n        break;\n      }\n    }\n    if(dirFound == false) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Snapshot cannot be found in directory: \" + snapDir);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c609c76a49c17e5c1c8a5d5cd2d685be9f306a47","date":1477689538,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/SnapShooter#validateDeleteSnapshot().mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/SnapShooter#validateDeleteSnapshot().mjava","sourceNew":"  public void validateDeleteSnapshot() {\n    Objects.requireNonNull(this.snapshotName);\n\n    boolean dirFound = false;\n    String[] paths;\n    try {\n      paths = backupRepo.listAll(baseSnapDirPath);\n      for (String path : paths) {\n        if (path.equals(this.directoryName)\n            && backupRepo.getPathType(baseSnapDirPath.resolve(path)) == PathType.DIRECTORY) {\n          dirFound = true;\n          break;\n        }\n      }\n      if(dirFound == false) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Snapshot \" + snapshotName + \" cannot be found in directory: \" + baseSnapDirPath);\n      }\n    } catch (IOException e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Unable to find snapshot \" + snapshotName + \" in directory: \" + baseSnapDirPath, e);\n    }\n  }\n\n","sourceOld":"  public void validateDeleteSnapshot() {\n    Preconditions.checkNotNull(this.snapshotName);\n\n    boolean dirFound = false;\n    String[] paths;\n    try {\n      paths = backupRepo.listAll(baseSnapDirPath);\n      for (String path : paths) {\n        if (path.equals(this.directoryName)\n            && backupRepo.getPathType(baseSnapDirPath.resolve(path)) == PathType.DIRECTORY) {\n          dirFound = true;\n          break;\n        }\n      }\n      if(dirFound == false) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Snapshot \" + snapshotName + \" cannot be found in directory: \" + baseSnapDirPath);\n      }\n    } catch (IOException e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Unable to find snapshot \" + snapshotName + \" in directory: \" + baseSnapDirPath, e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"320888923ec13b91f53082558f01f4c9960dd226","date":1477926871,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/SnapShooter#validateDeleteSnapshot().mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/SnapShooter#validateDeleteSnapshot().mjava","sourceNew":"  public void validateDeleteSnapshot() {\n    Objects.requireNonNull(this.snapshotName);\n\n    boolean dirFound = false;\n    String[] paths;\n    try {\n      paths = backupRepo.listAll(baseSnapDirPath);\n      for (String path : paths) {\n        if (path.equals(this.directoryName)\n            && backupRepo.getPathType(baseSnapDirPath.resolve(path)) == PathType.DIRECTORY) {\n          dirFound = true;\n          break;\n        }\n      }\n      if(dirFound == false) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Snapshot \" + snapshotName + \" cannot be found in directory: \" + baseSnapDirPath);\n      }\n    } catch (IOException e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Unable to find snapshot \" + snapshotName + \" in directory: \" + baseSnapDirPath, e);\n    }\n  }\n\n","sourceOld":"  public void validateDeleteSnapshot() {\n    Preconditions.checkNotNull(this.snapshotName);\n\n    boolean dirFound = false;\n    String[] paths;\n    try {\n      paths = backupRepo.listAll(baseSnapDirPath);\n      for (String path : paths) {\n        if (path.equals(this.directoryName)\n            && backupRepo.getPathType(baseSnapDirPath.resolve(path)) == PathType.DIRECTORY) {\n          dirFound = true;\n          break;\n        }\n      }\n      if(dirFound == false) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Snapshot \" + snapshotName + \" cannot be found in directory: \" + baseSnapDirPath);\n      }\n    } catch (IOException e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Unable to find snapshot \" + snapshotName + \" in directory: \" + baseSnapDirPath, e);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a51ab9b1f1b896f06b7ba61672f0fca2a4fce43b":["a5bb2e653b3f6992c26fe4cc0f3fbdce37b21c3c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c609c76a49c17e5c1c8a5d5cd2d685be9f306a47":["a51ab9b1f1b896f06b7ba61672f0fca2a4fce43b"],"a5bb2e653b3f6992c26fe4cc0f3fbdce37b21c3c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"320888923ec13b91f53082558f01f4c9960dd226":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","c609c76a49c17e5c1c8a5d5cd2d685be9f306a47"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a5bb2e653b3f6992c26fe4cc0f3fbdce37b21c3c","a51ab9b1f1b896f06b7ba61672f0fca2a4fce43b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c609c76a49c17e5c1c8a5d5cd2d685be9f306a47"]},"commit2Childs":{"a51ab9b1f1b896f06b7ba61672f0fca2a4fce43b":["c609c76a49c17e5c1c8a5d5cd2d685be9f306a47","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a5bb2e653b3f6992c26fe4cc0f3fbdce37b21c3c"],"c609c76a49c17e5c1c8a5d5cd2d685be9f306a47":["320888923ec13b91f53082558f01f4c9960dd226","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a5bb2e653b3f6992c26fe4cc0f3fbdce37b21c3c":["a51ab9b1f1b896f06b7ba61672f0fca2a4fce43b","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"320888923ec13b91f53082558f01f4c9960dd226":[],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["320888923ec13b91f53082558f01f4c9960dd226"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["320888923ec13b91f53082558f01f4c9960dd226","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}