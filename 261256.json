{"path":"lucene/src/java/org/apache/lucene/index/codecs/DefaultStoredFieldsReader#close().mjava","commits":[{"id":"06584e6e98d592b34e1329b384182f368d2025e8","date":1320850353,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/DefaultStoredFieldsReader#close().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/DefaultFieldsReader#close().mjava","sourceNew":"  /**\n   * Closes the underlying {@link org.apache.lucene.store.IndexInput} streams, including any ones associated with a\n   * lazy implementation of a Field.  This means that the Fields values will not be accessible.\n   *\n   * @throws IOException\n   */\n  public final void close() throws IOException {\n    if (!closed) {\n      if (isOriginal) {\n        IOUtils.close(fieldsStream, indexStream, fieldsStreamTL, cloneableFieldsStream, cloneableIndexStream);\n      } else {\n        IOUtils.close(fieldsStream, indexStream, fieldsStreamTL);\n      }\n      closed = true;\n    }\n  }\n\n","sourceOld":"  /**\n   * Closes the underlying {@link org.apache.lucene.store.IndexInput} streams, including any ones associated with a\n   * lazy implementation of a Field.  This means that the Fields values will not be accessible.\n   *\n   * @throws IOException\n   */\n  public final void close() throws IOException {\n    if (!closed) {\n      if (isOriginal) {\n        IOUtils.close(fieldsStream, indexStream, fieldsStreamTL, cloneableFieldsStream, cloneableIndexStream);\n      } else {\n        IOUtils.close(fieldsStream, indexStream, fieldsStreamTL);\n      }\n      closed = true;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cc749c053615f5871f3b95715fe292f34e70a53","date":1321470575,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/DefaultStoredFieldsReader#close().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/DefaultStoredFieldsReader#close().mjava","sourceNew":"  /**\n   * Closes the underlying {@link org.apache.lucene.store.IndexInput} streams.\n   * This means that the Fields values will not be accessible.\n   *\n   * @throws IOException\n   */\n  public final void close() throws IOException {\n    if (!closed) {\n      IOUtils.close(fieldsStream, indexStream);\n      closed = true;\n    }\n  }\n\n","sourceOld":"  /**\n   * Closes the underlying {@link org.apache.lucene.store.IndexInput} streams, including any ones associated with a\n   * lazy implementation of a Field.  This means that the Fields values will not be accessible.\n   *\n   * @throws IOException\n   */\n  public final void close() throws IOException {\n    if (!closed) {\n      if (isOriginal) {\n        IOUtils.close(fieldsStream, indexStream, fieldsStreamTL, cloneableFieldsStream, cloneableIndexStream);\n      } else {\n        IOUtils.close(fieldsStream, indexStream, fieldsStreamTL);\n      }\n      closed = true;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cfd7f00f3dbc4c50d336540f063493fc0f7d830f","date":1322850565,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/lucene40/Lucene40StoredFieldsReader#close().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/DefaultStoredFieldsReader#close().mjava","sourceNew":"  /**\n   * Closes the underlying {@link org.apache.lucene.store.IndexInput} streams.\n   * This means that the Fields values will not be accessible.\n   *\n   * @throws IOException\n   */\n  public final void close() throws IOException {\n    if (!closed) {\n      IOUtils.close(fieldsStream, indexStream);\n      closed = true;\n    }\n  }\n\n","sourceOld":"  /**\n   * Closes the underlying {@link org.apache.lucene.store.IndexInput} streams.\n   * This means that the Fields values will not be accessible.\n   *\n   * @throws IOException\n   */\n  public final void close() throws IOException {\n    if (!closed) {\n      IOUtils.close(fieldsStream, indexStream);\n      closed = true;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"cfd7f00f3dbc4c50d336540f063493fc0f7d830f":["3cc749c053615f5871f3b95715fe292f34e70a53"],"06584e6e98d592b34e1329b384182f368d2025e8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cc749c053615f5871f3b95715fe292f34e70a53":["06584e6e98d592b34e1329b384182f368d2025e8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["cfd7f00f3dbc4c50d336540f063493fc0f7d830f"]},"commit2Childs":{"cfd7f00f3dbc4c50d336540f063493fc0f7d830f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"06584e6e98d592b34e1329b384182f368d2025e8":["3cc749c053615f5871f3b95715fe292f34e70a53"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["06584e6e98d592b34e1329b384182f368d2025e8"],"3cc749c053615f5871f3b95715fe292f34e70a53":["cfd7f00f3dbc4c50d336540f063493fc0f7d830f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}