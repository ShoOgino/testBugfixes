{"path":"contrib/lucli/src/java/lucli/LuceneMethods#createAnalyzer().mjava","commits":[{"id":"c64e0c064f4d1397144dc064e5eb82f2e074357b","date":1247479561,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/lucli/src/java/lucli/LuceneMethods#createAnalyzer().mjava","pathOld":"/dev/null","sourceNew":"    private Analyzer createAnalyzer() {\n        if (analyzerClassFQN == null) return new StandardAnalyzer();\n        try {\n            Class aClass = Class.forName(analyzerClassFQN);\n            Object obj = aClass.newInstance();\n            if (!(obj instanceof Analyzer)) {\n                message(\"Given class is not an Analyzer: \" + analyzerClassFQN);\n                return new StandardAnalyzer();\n            }\n            return (Analyzer)obj;\n        } catch (Exception e) {\n            message(\"Unable to use Analyzer \" + analyzerClassFQN);\n            return new StandardAnalyzer();\n        }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4b41b991de69ba7b72d5e90cfcee25699a1a7fc9","date":1256127131,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/lucli/src/java/lucli/LuceneMethods#createAnalyzer().mjava","pathOld":"contrib/lucli/src/java/lucli/LuceneMethods#createAnalyzer().mjava","sourceNew":"    private Analyzer createAnalyzer() {\n        if (analyzerClassFQN == null) return new StandardAnalyzer(Version.LUCENE_CURRENT);\n        try {\n            Class aClass = Class.forName(analyzerClassFQN);\n            Object obj = aClass.newInstance();\n            if (!(obj instanceof Analyzer)) {\n                message(\"Given class is not an Analyzer: \" + analyzerClassFQN);\n                return new StandardAnalyzer(Version.LUCENE_CURRENT);\n            }\n            return (Analyzer)obj;\n        } catch (Exception e) {\n            message(\"Unable to use Analyzer \" + analyzerClassFQN);\n            return new StandardAnalyzer(Version.LUCENE_CURRENT);\n        }\n    }\n\n","sourceOld":"    private Analyzer createAnalyzer() {\n        if (analyzerClassFQN == null) return new StandardAnalyzer();\n        try {\n            Class aClass = Class.forName(analyzerClassFQN);\n            Object obj = aClass.newInstance();\n            if (!(obj instanceof Analyzer)) {\n                message(\"Given class is not an Analyzer: \" + analyzerClassFQN);\n                return new StandardAnalyzer();\n            }\n            return (Analyzer)obj;\n        } catch (Exception e) {\n            message(\"Unable to use Analyzer \" + analyzerClassFQN);\n            return new StandardAnalyzer();\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6358eb123cf2e9cc195c57e5ac4f3cf2f15cee94","date":1257897915,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/lucli/src/java/lucli/LuceneMethods#createAnalyzer().mjava","pathOld":"contrib/lucli/src/java/lucli/LuceneMethods#createAnalyzer().mjava","sourceNew":"    private Analyzer createAnalyzer() {\n        if (analyzerClassFQN == null) return new StandardAnalyzer(Version.LUCENE_CURRENT);\n        try {\n            return Class.forName(analyzerClassFQN).asSubclass(Analyzer.class).newInstance();\n        } catch (ClassCastException cce) {\n            message(\"Given class is not an Analyzer: \" + analyzerClassFQN);\n            return new StandardAnalyzer(Version.LUCENE_CURRENT);\n        } catch (Exception e) {\n            message(\"Unable to use Analyzer \" + analyzerClassFQN);\n            return new StandardAnalyzer(Version.LUCENE_CURRENT);\n        }\n    }\n\n","sourceOld":"    private Analyzer createAnalyzer() {\n        if (analyzerClassFQN == null) return new StandardAnalyzer(Version.LUCENE_CURRENT);\n        try {\n            Class aClass = Class.forName(analyzerClassFQN);\n            Object obj = aClass.newInstance();\n            if (!(obj instanceof Analyzer)) {\n                message(\"Given class is not an Analyzer: \" + analyzerClassFQN);\n                return new StandardAnalyzer(Version.LUCENE_CURRENT);\n            }\n            return (Analyzer)obj;\n        } catch (Exception e) {\n            message(\"Unable to use Analyzer \" + analyzerClassFQN);\n            return new StandardAnalyzer(Version.LUCENE_CURRENT);\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/lucli/src/java/lucli/LuceneMethods#createAnalyzer().mjava","pathOld":"contrib/lucli/src/java/lucli/LuceneMethods#createAnalyzer().mjava","sourceNew":"    private Analyzer createAnalyzer() {\n        if (analyzerClassFQN == null) return new StandardAnalyzer(Version.LUCENE_CURRENT);\n        try {\n            return Class.forName(analyzerClassFQN).asSubclass(Analyzer.class).newInstance();\n        } catch (ClassCastException cce) {\n            message(\"Given class is not an Analyzer: \" + analyzerClassFQN);\n            return new StandardAnalyzer(Version.LUCENE_CURRENT);\n        } catch (Exception e) {\n            message(\"Unable to use Analyzer \" + analyzerClassFQN);\n            return new StandardAnalyzer(Version.LUCENE_CURRENT);\n        }\n    }\n\n","sourceOld":"    private Analyzer createAnalyzer() {\n        if (analyzerClassFQN == null) return new StandardAnalyzer(Version.LUCENE_CURRENT);\n        try {\n            return Class.forName(analyzerClassFQN).asSubclass(Analyzer.class).newInstance();\n        } catch (ClassCastException cce) {\n            message(\"Given class is not an Analyzer: \" + analyzerClassFQN);\n            return new StandardAnalyzer(Version.LUCENE_CURRENT);\n        } catch (Exception e) {\n            message(\"Unable to use Analyzer \" + analyzerClassFQN);\n            return new StandardAnalyzer(Version.LUCENE_CURRENT);\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6358eb123cf2e9cc195c57e5ac4f3cf2f15cee94":["4b41b991de69ba7b72d5e90cfcee25699a1a7fc9"],"c64e0c064f4d1397144dc064e5eb82f2e074357b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4b41b991de69ba7b72d5e90cfcee25699a1a7fc9":["c64e0c064f4d1397144dc064e5eb82f2e074357b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["6358eb123cf2e9cc195c57e5ac4f3cf2f15cee94"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c64e0c064f4d1397144dc064e5eb82f2e074357b"],"6358eb123cf2e9cc195c57e5ac4f3cf2f15cee94":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"c64e0c064f4d1397144dc064e5eb82f2e074357b":["4b41b991de69ba7b72d5e90cfcee25699a1a7fc9"],"4b41b991de69ba7b72d5e90cfcee25699a1a7fc9":["6358eb123cf2e9cc195c57e5ac4f3cf2f15cee94"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}