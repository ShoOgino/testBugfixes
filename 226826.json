{"path":"lucene/spatial/src/test/org/apache/lucene/spatial/geopoint/search/TestGeoPointQuery#testEncodeDecode().mjava","commits":[{"id":"8a093d23e938d132b81b5f2de3d6b168afe3608e","date":1455076308,"type":1,"author":"nknize","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/geopoint/search/TestGeoPointQuery#testEncodeDecode().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/search/TestGeoPointQuery#testEncodeDecode().mjava","sourceNew":"  public void testEncodeDecode() throws Exception {\n    int iters = atLeast(10000);\n    boolean small = random().nextBoolean();\n    for(int iter=0;iter<iters;iter++) {\n      double lat = randomLat(small);\n      double lon = randomLon(small);\n\n      long enc = GeoEncodingUtils.mortonHash(lon, lat);\n      double latEnc = GeoEncodingUtils.mortonUnhashLat(enc);\n      double lonEnc = GeoEncodingUtils.mortonUnhashLon(enc);\n\n      assertEquals(\"lat=\" + lat + \" latEnc=\" + latEnc + \" diff=\" + (lat - latEnc), lat, latEnc, GeoEncodingUtils.TOLERANCE);\n      assertEquals(\"lon=\" + lon + \" lonEnc=\" + lonEnc + \" diff=\" + (lon - lonEnc), lon, lonEnc, GeoEncodingUtils.TOLERANCE);\n    }\n  }\n\n","sourceOld":"  public void testEncodeDecode() throws Exception {\n    int iters = atLeast(10000);\n    boolean small = random().nextBoolean();\n    for(int iter=0;iter<iters;iter++) {\n      double lat = randomLat(small);\n      double lon = randomLon(small);\n\n      long enc = GeoEncodingUtils.mortonHash(lon, lat);\n      double latEnc = GeoEncodingUtils.mortonUnhashLat(enc);\n      double lonEnc = GeoEncodingUtils.mortonUnhashLon(enc);\n\n      assertEquals(\"lat=\" + lat + \" latEnc=\" + latEnc + \" diff=\" + (lat - latEnc), lat, latEnc, GeoEncodingUtils.TOLERANCE);\n      assertEquals(\"lon=\" + lon + \" lonEnc=\" + lonEnc + \" diff=\" + (lon - lonEnc), lon, lonEnc, GeoEncodingUtils.TOLERANCE);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f68e65f04a6bec2d9a08a7d70811205341af74db","date":1458618250,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/util/TestGeoUtils#testEncodeDecode().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/geopoint/search/TestGeoPointQuery#testEncodeDecode().mjava","sourceNew":"  public void testEncodeDecode() throws Exception {\n    int iters = atLeast(10000);\n    boolean small = random().nextBoolean();\n    for(int iter=0;iter<iters;iter++) {\n      double lat = randomLat(small);\n      double lon = randomLon(small);\n\n      long enc = GeoEncodingUtils.mortonHash(lon, lat);\n      double latEnc = GeoEncodingUtils.mortonUnhashLat(enc);\n      double lonEnc = GeoEncodingUtils.mortonUnhashLon(enc);\n\n      assertEquals(\"lat=\" + lat + \" latEnc=\" + latEnc + \" diff=\" + (lat - latEnc), lat, latEnc, GeoEncodingUtils.TOLERANCE);\n      assertEquals(\"lon=\" + lon + \" lonEnc=\" + lonEnc + \" diff=\" + (lon - lonEnc), lon, lonEnc, GeoEncodingUtils.TOLERANCE);\n    }\n  }\n\n","sourceOld":"  public void testEncodeDecode() throws Exception {\n    int iters = atLeast(10000);\n    boolean small = random().nextBoolean();\n    for(int iter=0;iter<iters;iter++) {\n      double lat = randomLat(small);\n      double lon = randomLon(small);\n\n      long enc = GeoEncodingUtils.mortonHash(lon, lat);\n      double latEnc = GeoEncodingUtils.mortonUnhashLat(enc);\n      double lonEnc = GeoEncodingUtils.mortonUnhashLon(enc);\n\n      assertEquals(\"lat=\" + lat + \" latEnc=\" + latEnc + \" diff=\" + (lat - latEnc), lat, latEnc, GeoEncodingUtils.TOLERANCE);\n      assertEquals(\"lon=\" + lon + \" lonEnc=\" + lonEnc + \" diff=\" + (lon - lonEnc), lon, lonEnc, GeoEncodingUtils.TOLERANCE);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f68e65f04a6bec2d9a08a7d70811205341af74db":["8a093d23e938d132b81b5f2de3d6b168afe3608e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8a093d23e938d132b81b5f2de3d6b168afe3608e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f68e65f04a6bec2d9a08a7d70811205341af74db"]},"commit2Childs":{"f68e65f04a6bec2d9a08a7d70811205341af74db":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8a093d23e938d132b81b5f2de3d6b168afe3608e"],"8a093d23e938d132b81b5f2de3d6b168afe3608e":["f68e65f04a6bec2d9a08a7d70811205341af74db"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}