{"path":"lucene/core/src/test/org/apache/lucene/search/TestTopFieldCollector#testSortWithoutTotalHitTracking().mjava","commits":[{"id":"e4184751347df4dfb7bc0e2d4dc1b412857f301d","date":1512652126,"type":0,"author":"Jim Ferenczi","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestTopFieldCollector#testSortWithoutTotalHitTracking().mjava","pathOld":"/dev/null","sourceNew":"  public void testSortWithoutTotalHitTracking() throws Exception {\n    Sort sort = new Sort(SortField.FIELD_DOC);\n    for(int i = 0; i < 2; i++) {\n      Query q = new MatchAllDocsQuery();\n      // check that setting trackTotalHits to false does not throw an NPE because\n      // the index is not sorted\n      TopDocsCollector<Entry> tdc;\n      if (i % 2 == 0) {\n        tdc =  TopFieldCollector.create(sort, 10, true, false, false, false);\n      } else {\n        FieldDoc fieldDoc = new FieldDoc(1, Float.NaN, new Object[] { 1 });\n        tdc = TopFieldCollector.create(sort, 10, fieldDoc, true, false, false, false);\n      }\n\n      is.search(q, tdc);\n\n      TopDocs td = tdc.topDocs();\n      ScoreDoc[] sd = td.scoreDocs;\n      for(int j = 0; j < sd.length; j++) {\n        assertTrue(Float.isNaN(sd[j].score));\n      }\n      assertTrue(Float.isNaN(td.getMaxScore()));\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"417142ff08fda9cf0b72d5133e63097a166c6458","date":1512729693,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestTopFieldCollector#testSortWithoutTotalHitTracking().mjava","pathOld":"/dev/null","sourceNew":"  public void testSortWithoutTotalHitTracking() throws Exception {\n    Sort sort = new Sort(SortField.FIELD_DOC);\n    for(int i = 0; i < 2; i++) {\n      Query q = new MatchAllDocsQuery();\n      // check that setting trackTotalHits to false does not throw an NPE because\n      // the index is not sorted\n      TopDocsCollector<Entry> tdc;\n      if (i % 2 == 0) {\n        tdc =  TopFieldCollector.create(sort, 10, true, false, false, false);\n      } else {\n        FieldDoc fieldDoc = new FieldDoc(1, Float.NaN, new Object[] { 1 });\n        tdc = TopFieldCollector.create(sort, 10, fieldDoc, true, false, false, false);\n      }\n\n      is.search(q, tdc);\n\n      TopDocs td = tdc.topDocs();\n      ScoreDoc[] sd = td.scoreDocs;\n      for(int j = 0; j < sd.length; j++) {\n        assertTrue(Float.isNaN(sd[j].score));\n      }\n      assertTrue(Float.isNaN(td.getMaxScore()));\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"81fff83bdb893c1471efd78f6a9a3ce4f98120b9","date":1531895937,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestTopFieldCollector#testSortWithoutTotalHitTracking().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestTopFieldCollector#testSortWithoutTotalHitTracking().mjava","sourceNew":"  public void testSortWithoutTotalHitTracking() throws Exception {\n    Sort sort = new Sort(SortField.FIELD_DOC);\n    for(int i = 0; i < 2; i++) {\n      Query q = new MatchAllDocsQuery();\n      // check that setting trackTotalHits to false does not throw an NPE because\n      // the index is not sorted\n      TopDocsCollector<Entry> tdc;\n      if (i % 2 == 0) {\n        tdc =  TopFieldCollector.create(sort, 10, true, false, false);\n      } else {\n        FieldDoc fieldDoc = new FieldDoc(1, Float.NaN, new Object[] { 1 });\n        tdc = TopFieldCollector.create(sort, 10, fieldDoc, true, false, false);\n      }\n\n      is.search(q, tdc);\n\n      TopDocs td = tdc.topDocs();\n      ScoreDoc[] sd = td.scoreDocs;\n      for(int j = 0; j < sd.length; j++) {\n        assertTrue(Float.isNaN(sd[j].score));\n      }\n    }\n  }\n\n","sourceOld":"  public void testSortWithoutTotalHitTracking() throws Exception {\n    Sort sort = new Sort(SortField.FIELD_DOC);\n    for(int i = 0; i < 2; i++) {\n      Query q = new MatchAllDocsQuery();\n      // check that setting trackTotalHits to false does not throw an NPE because\n      // the index is not sorted\n      TopDocsCollector<Entry> tdc;\n      if (i % 2 == 0) {\n        tdc =  TopFieldCollector.create(sort, 10, true, false, false, false);\n      } else {\n        FieldDoc fieldDoc = new FieldDoc(1, Float.NaN, new Object[] { 1 });\n        tdc = TopFieldCollector.create(sort, 10, fieldDoc, true, false, false, false);\n      }\n\n      is.search(q, tdc);\n\n      TopDocs td = tdc.topDocs();\n      ScoreDoc[] sd = td.scoreDocs;\n      for(int j = 0; j < sd.length; j++) {\n        assertTrue(Float.isNaN(sd[j].score));\n      }\n      assertTrue(Float.isNaN(td.getMaxScore()));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","date":1531905561,"type":3,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestTopFieldCollector#testSortWithoutTotalHitTracking().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestTopFieldCollector#testSortWithoutTotalHitTracking().mjava","sourceNew":"  public void testSortWithoutTotalHitTracking() throws Exception {\n    Sort sort = new Sort(SortField.FIELD_DOC);\n    for(int i = 0; i < 2; i++) {\n      Query q = new MatchAllDocsQuery();\n      // check that setting trackTotalHits to false does not throw an NPE because\n      // the index is not sorted\n      TopDocsCollector<Entry> tdc;\n      if (i % 2 == 0) {\n        tdc =  TopFieldCollector.create(sort, 10, true, false, false);\n      } else {\n        FieldDoc fieldDoc = new FieldDoc(1, Float.NaN, new Object[] { 1 });\n        tdc = TopFieldCollector.create(sort, 10, fieldDoc, true, false, false);\n      }\n\n      is.search(q, tdc);\n\n      TopDocs td = tdc.topDocs();\n      ScoreDoc[] sd = td.scoreDocs;\n      for(int j = 0; j < sd.length; j++) {\n        assertTrue(Float.isNaN(sd[j].score));\n      }\n    }\n  }\n\n","sourceOld":"  public void testSortWithoutTotalHitTracking() throws Exception {\n    Sort sort = new Sort(SortField.FIELD_DOC);\n    for(int i = 0; i < 2; i++) {\n      Query q = new MatchAllDocsQuery();\n      // check that setting trackTotalHits to false does not throw an NPE because\n      // the index is not sorted\n      TopDocsCollector<Entry> tdc;\n      if (i % 2 == 0) {\n        tdc =  TopFieldCollector.create(sort, 10, true, false, false, false);\n      } else {\n        FieldDoc fieldDoc = new FieldDoc(1, Float.NaN, new Object[] { 1 });\n        tdc = TopFieldCollector.create(sort, 10, fieldDoc, true, false, false, false);\n      }\n\n      is.search(q, tdc);\n\n      TopDocs td = tdc.topDocs();\n      ScoreDoc[] sd = td.scoreDocs;\n      for(int j = 0; j < sd.length; j++) {\n        assertTrue(Float.isNaN(sd[j].score));\n      }\n      assertTrue(Float.isNaN(td.getMaxScore()));\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"04c370507e5521b2eb998530736f1c19b851ed5a","date":1531911305,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestTopFieldCollector#testSortWithoutTotalHitTracking().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestTopFieldCollector#testSortWithoutTotalHitTracking().mjava","sourceNew":"  public void testSortWithoutTotalHitTracking() throws Exception {\n    Sort sort = new Sort(SortField.FIELD_DOC);\n    for(int i = 0; i < 2; i++) {\n      Query q = new MatchAllDocsQuery();\n      // check that setting trackTotalHits to false does not throw an NPE because\n      // the index is not sorted\n      TopDocsCollector<Entry> tdc;\n      if (i % 2 == 0) {\n        tdc =  TopFieldCollector.create(sort, 10, false, false);\n      } else {\n        FieldDoc fieldDoc = new FieldDoc(1, Float.NaN, new Object[] { 1 });\n        tdc = TopFieldCollector.create(sort, 10, fieldDoc, false, false);\n      }\n\n      is.search(q, tdc);\n\n      TopDocs td = tdc.topDocs();\n      ScoreDoc[] sd = td.scoreDocs;\n      for(int j = 0; j < sd.length; j++) {\n        assertTrue(Float.isNaN(sd[j].score));\n      }\n    }\n  }\n\n","sourceOld":"  public void testSortWithoutTotalHitTracking() throws Exception {\n    Sort sort = new Sort(SortField.FIELD_DOC);\n    for(int i = 0; i < 2; i++) {\n      Query q = new MatchAllDocsQuery();\n      // check that setting trackTotalHits to false does not throw an NPE because\n      // the index is not sorted\n      TopDocsCollector<Entry> tdc;\n      if (i % 2 == 0) {\n        tdc =  TopFieldCollector.create(sort, 10, true, false, false);\n      } else {\n        FieldDoc fieldDoc = new FieldDoc(1, Float.NaN, new Object[] { 1 });\n        tdc = TopFieldCollector.create(sort, 10, fieldDoc, true, false, false);\n      }\n\n      is.search(q, tdc);\n\n      TopDocs td = tdc.topDocs();\n      ScoreDoc[] sd = td.scoreDocs;\n      for(int j = 0; j < sd.length; j++) {\n        assertTrue(Float.isNaN(sd[j].score));\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1d3f7ab1a502671bbdb03bcced21e764d2483221","date":1532329609,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestTopFieldCollector#testSortWithoutTotalHitTracking().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestTopFieldCollector#testSortWithoutTotalHitTracking().mjava","sourceNew":"  public void testSortWithoutTotalHitTracking() throws Exception {\n    Sort sort = new Sort(SortField.FIELD_DOC);\n    for(int i = 0; i < 2; i++) {\n      Query q = new MatchAllDocsQuery();\n      // check that setting trackTotalHits to false does not throw an NPE because\n      // the index is not sorted\n      TopDocsCollector<Entry> tdc;\n      if (i % 2 == 0) {\n        tdc =  TopFieldCollector.create(sort, 10, false);\n      } else {\n        FieldDoc fieldDoc = new FieldDoc(1, Float.NaN, new Object[] { 1 });\n        tdc = TopFieldCollector.create(sort, 10, fieldDoc, false);\n      }\n\n      is.search(q, tdc);\n\n      TopDocs td = tdc.topDocs();\n      ScoreDoc[] sd = td.scoreDocs;\n      for(int j = 0; j < sd.length; j++) {\n        assertTrue(Float.isNaN(sd[j].score));\n      }\n    }\n  }\n\n","sourceOld":"  public void testSortWithoutTotalHitTracking() throws Exception {\n    Sort sort = new Sort(SortField.FIELD_DOC);\n    for(int i = 0; i < 2; i++) {\n      Query q = new MatchAllDocsQuery();\n      // check that setting trackTotalHits to false does not throw an NPE because\n      // the index is not sorted\n      TopDocsCollector<Entry> tdc;\n      if (i % 2 == 0) {\n        tdc =  TopFieldCollector.create(sort, 10, false, false);\n      } else {\n        FieldDoc fieldDoc = new FieldDoc(1, Float.NaN, new Object[] { 1 });\n        tdc = TopFieldCollector.create(sort, 10, fieldDoc, false, false);\n      }\n\n      is.search(q, tdc);\n\n      TopDocs td = tdc.topDocs();\n      ScoreDoc[] sd = td.scoreDocs;\n      for(int j = 0; j < sd.length; j++) {\n        assertTrue(Float.isNaN(sd[j].score));\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe3c6364bed04a73ad0884b05401d80ce96027a9","date":1532961485,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestTopFieldCollector#testSortWithoutTotalHitTracking().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestTopFieldCollector#testSortWithoutTotalHitTracking().mjava","sourceNew":"  public void testSortWithoutTotalHitTracking() throws Exception {\n    Sort sort = new Sort(SortField.FIELD_DOC);\n    for(int i = 0; i < 2; i++) {\n      Query q = new MatchAllDocsQuery();\n      // check that setting trackTotalHits to false does not throw an NPE because\n      // the index is not sorted\n      TopDocsCollector<Entry> tdc;\n      if (i % 2 == 0) {\n        tdc =  TopFieldCollector.create(sort, 10, 1);\n      } else {\n        FieldDoc fieldDoc = new FieldDoc(1, Float.NaN, new Object[] { 1 });\n        tdc = TopFieldCollector.create(sort, 10, fieldDoc, 1);\n      }\n\n      is.search(q, tdc);\n\n      TopDocs td = tdc.topDocs();\n      ScoreDoc[] sd = td.scoreDocs;\n      for(int j = 0; j < sd.length; j++) {\n        assertTrue(Float.isNaN(sd[j].score));\n      }\n    }\n  }\n\n","sourceOld":"  public void testSortWithoutTotalHitTracking() throws Exception {\n    Sort sort = new Sort(SortField.FIELD_DOC);\n    for(int i = 0; i < 2; i++) {\n      Query q = new MatchAllDocsQuery();\n      // check that setting trackTotalHits to false does not throw an NPE because\n      // the index is not sorted\n      TopDocsCollector<Entry> tdc;\n      if (i % 2 == 0) {\n        tdc =  TopFieldCollector.create(sort, 10, false);\n      } else {\n        FieldDoc fieldDoc = new FieldDoc(1, Float.NaN, new Object[] { 1 });\n        tdc = TopFieldCollector.create(sort, 10, fieldDoc, false);\n      }\n\n      is.search(q, tdc);\n\n      TopDocs td = tdc.topDocs();\n      ScoreDoc[] sd = td.scoreDocs;\n      for(int j = 0; j < sd.length; j++) {\n        assertTrue(Float.isNaN(sd[j].score));\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":["417142ff08fda9cf0b72d5133e63097a166c6458","81fff83bdb893c1471efd78f6a9a3ce4f98120b9"],"04c370507e5521b2eb998530736f1c19b851ed5a":["81fff83bdb893c1471efd78f6a9a3ce4f98120b9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e4184751347df4dfb7bc0e2d4dc1b412857f301d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"81fff83bdb893c1471efd78f6a9a3ce4f98120b9":["417142ff08fda9cf0b72d5133e63097a166c6458"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["fe3c6364bed04a73ad0884b05401d80ce96027a9"],"fe3c6364bed04a73ad0884b05401d80ce96027a9":["1d3f7ab1a502671bbdb03bcced21e764d2483221"],"1d3f7ab1a502671bbdb03bcced21e764d2483221":["04c370507e5521b2eb998530736f1c19b851ed5a"],"417142ff08fda9cf0b72d5133e63097a166c6458":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","e4184751347df4dfb7bc0e2d4dc1b412857f301d"]},"commit2Childs":{"0efc9f2cae117418f13ba9035f5e1d516ea7a2b5":[],"04c370507e5521b2eb998530736f1c19b851ed5a":["1d3f7ab1a502671bbdb03bcced21e764d2483221"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e4184751347df4dfb7bc0e2d4dc1b412857f301d","417142ff08fda9cf0b72d5133e63097a166c6458"],"e4184751347df4dfb7bc0e2d4dc1b412857f301d":["417142ff08fda9cf0b72d5133e63097a166c6458"],"81fff83bdb893c1471efd78f6a9a3ce4f98120b9":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","04c370507e5521b2eb998530736f1c19b851ed5a"],"417142ff08fda9cf0b72d5133e63097a166c6458":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","81fff83bdb893c1471efd78f6a9a3ce4f98120b9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"fe3c6364bed04a73ad0884b05401d80ce96027a9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"1d3f7ab1a502671bbdb03bcced21e764d2483221":["fe3c6364bed04a73ad0884b05401d80ce96027a9"]},"heads":["0efc9f2cae117418f13ba9035f5e1d516ea7a2b5","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}