{"path":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/cz/TestCzechAnalyzer#testStopWordFileReuse().mjava","commits":[{"id":"4d162e44966cfe4ab497a76295986daa4665ffc9","date":1250682991,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/cz/TestCzechAnalyzer#testStopWordFileReuse().mjava","pathOld":"/dev/null","sourceNew":"  /* \n   * Test that changes to the stop table via loadStopWords are applied immediately\n   * when using reusable token streams.\n   */\n  public void testStopWordFileReuse() throws Exception {\n    CzechAnalyzer cz = new CzechAnalyzer();\n    assertAnalyzesToReuse(cz, \"Česká Republika\", \n      new String[] { \"česká\", \"republika\" });\n    \n    InputStream stopwords = new FileInputStream(customStopFile);\n    cz.loadStopWords(stopwords, \"UTF-8\");\n    \n    assertAnalyzesToReuse(cz, \"Česká Republika\", new String[] { \"česká\" });\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba1116b3450a9c1642c89445d131b37344055245","date":1256329517,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/cz/TestCzechAnalyzer#testStopWordFileReuse().mjava","pathOld":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/cz/TestCzechAnalyzer#testStopWordFileReuse().mjava","sourceNew":"  /* \n   * Test that changes to the stop table via loadStopWords are applied immediately\n   * when using reusable token streams.\n   */\n  public void testStopWordFileReuse() throws Exception {\n    CzechAnalyzer cz = new CzechAnalyzer(Version.LUCENE_CURRENT);\n    assertAnalyzesToReuse(cz, \"Česká Republika\", \n      new String[] { \"česká\", \"republika\" });\n    \n    InputStream stopwords = new FileInputStream(customStopFile);\n    cz.loadStopWords(stopwords, \"UTF-8\");\n    \n    assertAnalyzesToReuse(cz, \"Česká Republika\", new String[] { \"česká\" });\n  }\n\n","sourceOld":"  /* \n   * Test that changes to the stop table via loadStopWords are applied immediately\n   * when using reusable token streams.\n   */\n  public void testStopWordFileReuse() throws Exception {\n    CzechAnalyzer cz = new CzechAnalyzer();\n    assertAnalyzesToReuse(cz, \"Česká Republika\", \n      new String[] { \"česká\", \"republika\" });\n    \n    InputStream stopwords = new FileInputStream(customStopFile);\n    cz.loadStopWords(stopwords, \"UTF-8\");\n    \n    assertAnalyzesToReuse(cz, \"Česká Republika\", new String[] { \"česká\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b0f3337a69aad7b5cb531fa8e233ac5771a6aaf5","date":1259495978,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/cz/TestCzechAnalyzer#testStopWordFileReuse().mjava","pathOld":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/cz/TestCzechAnalyzer#testStopWordFileReuse().mjava","sourceNew":"  /** \n   * Test that changes to the stop table via loadStopWords are applied immediately\n   * when using reusable token streams.\n   * @deprecated Remove this test when the loadStopWords method is removed.\n   */\n  public void testStopWordFileReuse() throws Exception {\n    CzechAnalyzer cz = new CzechAnalyzer(Version.LUCENE_30);\n    assertAnalyzesToReuse(cz, \"Česká Republika\", \n      new String[] { \"česká\", \"republika\" });\n    \n    InputStream stopwords = new FileInputStream(customStopFile);\n    cz.loadStopWords(stopwords, \"UTF-8\");\n    \n    assertAnalyzesToReuse(cz, \"Česká Republika\", new String[] { \"česká\" });\n  }\n\n","sourceOld":"  /* \n   * Test that changes to the stop table via loadStopWords are applied immediately\n   * when using reusable token streams.\n   */\n  public void testStopWordFileReuse() throws Exception {\n    CzechAnalyzer cz = new CzechAnalyzer(Version.LUCENE_CURRENT);\n    assertAnalyzesToReuse(cz, \"Česká Republika\", \n      new String[] { \"česká\", \"republika\" });\n    \n    InputStream stopwords = new FileInputStream(customStopFile);\n    cz.loadStopWords(stopwords, \"UTF-8\");\n    \n    assertAnalyzesToReuse(cz, \"Česká Republika\", new String[] { \"česká\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5384d626ad24f6a1d56141ba6b0b144d1b2eafc5","date":1262514702,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/cz/TestCzechAnalyzer#testStopWordFileReuse().mjava","pathOld":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/cz/TestCzechAnalyzer#testStopWordFileReuse().mjava","sourceNew":"  /** \n   * Test that changes to the stop table via loadStopWords are applied immediately\n   * when using reusable token streams.\n   * @deprecated Remove this test when the loadStopWords method is removed.\n   */\n  @Deprecated\n  public void testStopWordFileReuse() throws Exception {\n    CzechAnalyzer cz = new CzechAnalyzer(Version.LUCENE_30);\n    assertAnalyzesToReuse(cz, \"Česká Republika\", \n      new String[] { \"česká\", \"republika\" });\n    \n    InputStream stopwords = new FileInputStream(customStopFile);\n    cz.loadStopWords(stopwords, \"UTF-8\");\n    \n    assertAnalyzesToReuse(cz, \"Česká Republika\", new String[] { \"česká\" });\n  }\n\n","sourceOld":"  /** \n   * Test that changes to the stop table via loadStopWords are applied immediately\n   * when using reusable token streams.\n   * @deprecated Remove this test when the loadStopWords method is removed.\n   */\n  public void testStopWordFileReuse() throws Exception {\n    CzechAnalyzer cz = new CzechAnalyzer(Version.LUCENE_30);\n    assertAnalyzesToReuse(cz, \"Česká Republika\", \n      new String[] { \"česká\", \"republika\" });\n    \n    InputStream stopwords = new FileInputStream(customStopFile);\n    cz.loadStopWords(stopwords, \"UTF-8\");\n    \n    assertAnalyzesToReuse(cz, \"Česká Republika\", new String[] { \"česká\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1d16275d75dfe0b780ed62df4c811d083187c71a","date":1268583591,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/cz/TestCzechAnalyzer#testStopWordFileReuse().mjava","pathOld":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/cz/TestCzechAnalyzer#testStopWordFileReuse().mjava","sourceNew":"  /** \n   * Test that changes to the stop table via loadStopWords are applied immediately\n   * when using reusable token streams.\n   * @deprecated Remove this test when the loadStopWords method is removed.\n   */\n  @Deprecated\n  public void testStopWordFileReuse() throws Exception {\n    CzechAnalyzer cz = new CzechAnalyzer(Version.LUCENE_30);\n    assertAnalyzesToReuse(cz, \"Česká Republika\", \n      new String[] { \"česká\", \"republika\" });\n    \n    InputStream stopwords = getClass().getResourceAsStream(\"customStopWordFile.txt\");\n    cz.loadStopWords(stopwords, \"UTF-8\");\n    \n    assertAnalyzesToReuse(cz, \"Česká Republika\", new String[] { \"česká\" });\n  }\n\n","sourceOld":"  /** \n   * Test that changes to the stop table via loadStopWords are applied immediately\n   * when using reusable token streams.\n   * @deprecated Remove this test when the loadStopWords method is removed.\n   */\n  @Deprecated\n  public void testStopWordFileReuse() throws Exception {\n    CzechAnalyzer cz = new CzechAnalyzer(Version.LUCENE_30);\n    assertAnalyzesToReuse(cz, \"Česká Republika\", \n      new String[] { \"česká\", \"republika\" });\n    \n    InputStream stopwords = new FileInputStream(customStopFile);\n    cz.loadStopWords(stopwords, \"UTF-8\");\n    \n    assertAnalyzesToReuse(cz, \"Česká Republika\", new String[] { \"česká\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/analyzers/common/src/test/org/apache/lucene/analysis/cz/TestCzechAnalyzer#testStopWordFileReuse().mjava","pathOld":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/cz/TestCzechAnalyzer#testStopWordFileReuse().mjava","sourceNew":"  /** \n   * Test that changes to the stop table via loadStopWords are applied immediately\n   * when using reusable token streams.\n   * @deprecated Remove this test when the loadStopWords method is removed.\n   */\n  @Deprecated\n  public void testStopWordFileReuse() throws Exception {\n    CzechAnalyzer cz = new CzechAnalyzer(Version.LUCENE_30);\n    assertAnalyzesToReuse(cz, \"Česká Republika\", \n      new String[] { \"česká\", \"republika\" });\n    \n    InputStream stopwords = getClass().getResourceAsStream(\"customStopWordFile.txt\");\n    cz.loadStopWords(stopwords, \"UTF-8\");\n    \n    assertAnalyzesToReuse(cz, \"Česká Republika\", new String[] { \"česká\" });\n  }\n\n","sourceOld":"  /** \n   * Test that changes to the stop table via loadStopWords are applied immediately\n   * when using reusable token streams.\n   * @deprecated Remove this test when the loadStopWords method is removed.\n   */\n  @Deprecated\n  public void testStopWordFileReuse() throws Exception {\n    CzechAnalyzer cz = new CzechAnalyzer(Version.LUCENE_30);\n    assertAnalyzesToReuse(cz, \"Česká Republika\", \n      new String[] { \"česká\", \"republika\" });\n    \n    InputStream stopwords = getClass().getResourceAsStream(\"customStopWordFile.txt\");\n    cz.loadStopWords(stopwords, \"UTF-8\");\n    \n    assertAnalyzesToReuse(cz, \"Česká Republika\", new String[] { \"česká\" });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5384d626ad24f6a1d56141ba6b0b144d1b2eafc5":["b0f3337a69aad7b5cb531fa8e233ac5771a6aaf5"],"4d162e44966cfe4ab497a76295986daa4665ffc9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b0f3337a69aad7b5cb531fa8e233ac5771a6aaf5":["ba1116b3450a9c1642c89445d131b37344055245"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1d16275d75dfe0b780ed62df4c811d083187c71a":["5384d626ad24f6a1d56141ba6b0b144d1b2eafc5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["1d16275d75dfe0b780ed62df4c811d083187c71a"],"ba1116b3450a9c1642c89445d131b37344055245":["4d162e44966cfe4ab497a76295986daa4665ffc9"]},"commit2Childs":{"5384d626ad24f6a1d56141ba6b0b144d1b2eafc5":["1d16275d75dfe0b780ed62df4c811d083187c71a"],"4d162e44966cfe4ab497a76295986daa4665ffc9":["ba1116b3450a9c1642c89445d131b37344055245"],"b0f3337a69aad7b5cb531fa8e233ac5771a6aaf5":["5384d626ad24f6a1d56141ba6b0b144d1b2eafc5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4d162e44966cfe4ab497a76295986daa4665ffc9"],"1d16275d75dfe0b780ed62df4c811d083187c71a":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"ba1116b3450a9c1642c89445d131b37344055245":["b0f3337a69aad7b5cb531fa8e233ac5771a6aaf5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}