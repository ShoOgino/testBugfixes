{"path":"src/test/org/apache/lucene/analysis/TestStopFilter#testStopFilt().mjava","commits":[{"id":"050b03edbe9b8423ff4c09685c6f03d900e86b83","date":1195514584,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/test/org/apache/lucene/analysis/TestStopFilter#testStopFilt().mjava","pathOld":"/dev/null","sourceNew":"  public void testStopFilt() throws IOException {\r\n    StringReader reader = new StringReader(\"Now is The Time\");\r\n    String[] stopWords = new String[] { \"is\", \"the\", \"Time\" };\r\n    Set stopSet = StopFilter.makeStopSet(stopWords);\r\n    TokenStream stream = new StopFilter(new WhitespaceTokenizer(reader), stopSet);\r\n    assertEquals(\"Now\", stream.next().termText());\r\n    assertEquals(\"The\", stream.next().termText());\r\n    assertEquals(null, stream.next());\r\n  }\r\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2123bddbd65dea198cac380540636ce43a880403","date":1211269254,"type":3,"author":"Michael Busch","isMerge":false,"pathNew":"src/test/org/apache/lucene/analysis/TestStopFilter#testStopFilt().mjava","pathOld":"src/test/org/apache/lucene/analysis/TestStopFilter#testStopFilt().mjava","sourceNew":"  public void testStopFilt() throws IOException {\n    StringReader reader = new StringReader(\"Now is The Time\");\n    String[] stopWords = new String[] { \"is\", \"the\", \"Time\" };\n    Set stopSet = StopFilter.makeStopSet(stopWords);\n    TokenStream stream = new StopFilter(new WhitespaceTokenizer(reader), stopSet);\n    assertEquals(\"Now\", stream.next().termText());\n    assertEquals(\"The\", stream.next().termText());\n    assertEquals(null, stream.next());\n  }\n\n","sourceOld":"  public void testStopFilt() throws IOException {\r\n    StringReader reader = new StringReader(\"Now is The Time\");\r\n    String[] stopWords = new String[] { \"is\", \"the\", \"Time\" };\r\n    Set stopSet = StopFilter.makeStopSet(stopWords);\r\n    TokenStream stream = new StopFilter(new WhitespaceTokenizer(reader), stopSet);\r\n    assertEquals(\"Now\", stream.next().termText());\r\n    assertEquals(\"The\", stream.next().termText());\r\n    assertEquals(null, stream.next());\r\n  }\r\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7e2cb543b41c145f33390f460ee743d6693c9c6c","date":1219243087,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/analysis/TestStopFilter#testStopFilt().mjava","pathOld":"src/test/org/apache/lucene/analysis/TestStopFilter#testStopFilt().mjava","sourceNew":"  public void testStopFilt() throws IOException {\n    StringReader reader = new StringReader(\"Now is The Time\");\n    String[] stopWords = new String[] { \"is\", \"the\", \"Time\" };\n    Set stopSet = StopFilter.makeStopSet(stopWords);\n    TokenStream stream = new StopFilter(new WhitespaceTokenizer(reader), stopSet);\n    final Token reusableToken = new Token();\n    assertEquals(\"Now\", stream.next(reusableToken).term());\n    assertEquals(\"The\", stream.next(reusableToken).term());\n    assertEquals(null, stream.next(reusableToken));\n  }\n\n","sourceOld":"  public void testStopFilt() throws IOException {\n    StringReader reader = new StringReader(\"Now is The Time\");\n    String[] stopWords = new String[] { \"is\", \"the\", \"Time\" };\n    Set stopSet = StopFilter.makeStopSet(stopWords);\n    TokenStream stream = new StopFilter(new WhitespaceTokenizer(reader), stopSet);\n    assertEquals(\"Now\", stream.next().termText());\n    assertEquals(\"The\", stream.next().termText());\n    assertEquals(null, stream.next());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"74a5e7f20b4a444da9df3b2c0f331fa7a1f64223","date":1227051709,"type":3,"author":"Michael Busch","isMerge":false,"pathNew":"src/test/org/apache/lucene/analysis/TestStopFilter#testStopFilt().mjava","pathOld":"src/test/org/apache/lucene/analysis/TestStopFilter#testStopFilt().mjava","sourceNew":"  public void testStopFilt() throws IOException {\n    StringReader reader = new StringReader(\"Now is The Time\");\n    String[] stopWords = new String[] { \"is\", \"the\", \"Time\" };\n    Set stopSet = StopFilter.makeStopSet(stopWords);\n    TokenStream stream = new StopFilter(new WhitespaceTokenizer(reader), stopSet);\n    final TermAttribute termAtt = (TermAttribute) stream.getAttribute(TermAttribute.class);\n    assertTrue(stream.incrementToken());\n    assertEquals(\"Now\", termAtt.term());\n    assertTrue(stream.incrementToken());\n    assertEquals(\"The\", termAtt.term());\n    assertFalse(stream.incrementToken());\n  }\n\n","sourceOld":"  public void testStopFilt() throws IOException {\n    StringReader reader = new StringReader(\"Now is The Time\");\n    String[] stopWords = new String[] { \"is\", \"the\", \"Time\" };\n    Set stopSet = StopFilter.makeStopSet(stopWords);\n    TokenStream stream = new StopFilter(new WhitespaceTokenizer(reader), stopSet);\n    final Token reusableToken = new Token();\n    assertEquals(\"Now\", stream.next(reusableToken).term());\n    assertEquals(\"The\", stream.next(reusableToken).term());\n    assertEquals(null, stream.next(reusableToken));\n  }\n\n","bugFix":null,"bugIntro":["fcbc12aa8147f5203ca283e7252ba4280d6ffd16"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"54c106a73719ede69e08f8b0ffe2950cc9ebfa07","date":1244055085,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/analysis/TestStopFilter#testStopFilt().mjava","pathOld":"src/test/org/apache/lucene/analysis/TestStopFilter#testStopFilt().mjava","sourceNew":"  public void testStopFilt() throws IOException {\n    StringReader reader = new StringReader(\"Now is The Time\");\n    String[] stopWords = new String[] { \"is\", \"the\", \"Time\" };\n    Set stopSet = StopFilter.makeStopSet(stopWords);\n    TokenStream stream = new StopFilter(false, new WhitespaceTokenizer(reader), stopSet);\n    final TermAttribute termAtt = (TermAttribute) stream.getAttribute(TermAttribute.class);\n    assertTrue(stream.incrementToken());\n    assertEquals(\"Now\", termAtt.term());\n    assertTrue(stream.incrementToken());\n    assertEquals(\"The\", termAtt.term());\n    assertFalse(stream.incrementToken());\n  }\n\n","sourceOld":"  public void testStopFilt() throws IOException {\n    StringReader reader = new StringReader(\"Now is The Time\");\n    String[] stopWords = new String[] { \"is\", \"the\", \"Time\" };\n    Set stopSet = StopFilter.makeStopSet(stopWords);\n    TokenStream stream = new StopFilter(new WhitespaceTokenizer(reader), stopSet);\n    final TermAttribute termAtt = (TermAttribute) stream.getAttribute(TermAttribute.class);\n    assertTrue(stream.incrementToken());\n    assertEquals(\"Now\", termAtt.term());\n    assertTrue(stream.incrementToken());\n    assertEquals(\"The\", termAtt.term());\n    assertFalse(stream.incrementToken());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"8d78f014fded44fbde905f4f84cdc21907b371e8","date":1254383623,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/analysis/TestStopFilter#testStopFilt().mjava","pathOld":"src/test/org/apache/lucene/analysis/TestStopFilter#testStopFilt().mjava","sourceNew":"  public void testStopFilt() throws IOException {\n    StringReader reader = new StringReader(\"Now is The Time\");\n    String[] stopWords = new String[] { \"is\", \"the\", \"Time\" };\n    Set stopSet = StopFilter.makeStopSet(stopWords);\n    TokenStream stream = new StopFilter(false, new WhitespaceTokenizer(reader), stopSet);\n    final TermAttribute termAtt = stream.getAttribute(TermAttribute.class);\n    assertTrue(stream.incrementToken());\n    assertEquals(\"Now\", termAtt.term());\n    assertTrue(stream.incrementToken());\n    assertEquals(\"The\", termAtt.term());\n    assertFalse(stream.incrementToken());\n  }\n\n","sourceOld":"  public void testStopFilt() throws IOException {\n    StringReader reader = new StringReader(\"Now is The Time\");\n    String[] stopWords = new String[] { \"is\", \"the\", \"Time\" };\n    Set stopSet = StopFilter.makeStopSet(stopWords);\n    TokenStream stream = new StopFilter(false, new WhitespaceTokenizer(reader), stopSet);\n    final TermAttribute termAtt = (TermAttribute) stream.getAttribute(TermAttribute.class);\n    assertTrue(stream.incrementToken());\n    assertEquals(\"Now\", termAtt.term());\n    assertTrue(stream.incrementToken());\n    assertEquals(\"The\", termAtt.term());\n    assertFalse(stream.incrementToken());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7f6c85ffa816c86be877aa7a5029a5daa1336e7f","date":1259617761,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/analysis/TestStopFilter#testStopFilt().mjava","pathOld":"src/test/org/apache/lucene/analysis/TestStopFilter#testStopFilt().mjava","sourceNew":"  public void testStopFilt() throws IOException {\n    StringReader reader = new StringReader(\"Now is The Time\");\n    String[] stopWords = new String[] { \"is\", \"the\", \"Time\" };\n    Set stopSet = StopFilter.makeStopSet(Version.LUCENE_CURRENT, stopWords);\n    TokenStream stream = new StopFilter(Version.LUCENE_CURRENT, new WhitespaceTokenizer(reader), stopSet);\n    final TermAttribute termAtt = stream.getAttribute(TermAttribute.class);\n    assertTrue(stream.incrementToken());\n    assertEquals(\"Now\", termAtt.term());\n    assertTrue(stream.incrementToken());\n    assertEquals(\"The\", termAtt.term());\n    assertFalse(stream.incrementToken());\n  }\n\n","sourceOld":"  public void testStopFilt() throws IOException {\n    StringReader reader = new StringReader(\"Now is The Time\");\n    String[] stopWords = new String[] { \"is\", \"the\", \"Time\" };\n    Set stopSet = StopFilter.makeStopSet(stopWords);\n    TokenStream stream = new StopFilter(false, new WhitespaceTokenizer(reader), stopSet);\n    final TermAttribute termAtt = stream.getAttribute(TermAttribute.class);\n    assertTrue(stream.incrementToken());\n    assertEquals(\"Now\", termAtt.term());\n    assertTrue(stream.incrementToken());\n    assertEquals(\"The\", termAtt.term());\n    assertFalse(stream.incrementToken());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"e450c7d50c2fc84c963d0d7ade9d3217d868064d","date":1259932067,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/analysis/TestStopFilter#testStopFilt().mjava","pathOld":"src/test/org/apache/lucene/analysis/TestStopFilter#testStopFilt().mjava","sourceNew":"  public void testStopFilt() throws IOException {\n    StringReader reader = new StringReader(\"Now is The Time\");\n    String[] stopWords = new String[] { \"is\", \"the\", \"Time\" };\n    Set<Object> stopSet = StopFilter.makeStopSet(Version.LUCENE_CURRENT, stopWords);\n    TokenStream stream = new StopFilter(Version.LUCENE_CURRENT, new WhitespaceTokenizer(reader), stopSet);\n    final TermAttribute termAtt = stream.getAttribute(TermAttribute.class);\n    assertTrue(stream.incrementToken());\n    assertEquals(\"Now\", termAtt.term());\n    assertTrue(stream.incrementToken());\n    assertEquals(\"The\", termAtt.term());\n    assertFalse(stream.incrementToken());\n  }\n\n","sourceOld":"  public void testStopFilt() throws IOException {\n    StringReader reader = new StringReader(\"Now is The Time\");\n    String[] stopWords = new String[] { \"is\", \"the\", \"Time\" };\n    Set stopSet = StopFilter.makeStopSet(Version.LUCENE_CURRENT, stopWords);\n    TokenStream stream = new StopFilter(Version.LUCENE_CURRENT, new WhitespaceTokenizer(reader), stopSet);\n    final TermAttribute termAtt = stream.getAttribute(TermAttribute.class);\n    assertTrue(stream.incrementToken());\n    assertEquals(\"Now\", termAtt.term());\n    assertTrue(stream.incrementToken());\n    assertEquals(\"The\", termAtt.term());\n    assertFalse(stream.incrementToken());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"fe0932c1d340f83fb0a611e5829b3046a1cc1152","date":1264946739,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/analysis/TestStopFilter#testStopFilt().mjava","pathOld":"src/test/org/apache/lucene/analysis/TestStopFilter#testStopFilt().mjava","sourceNew":"  public void testStopFilt() throws IOException {\n    StringReader reader = new StringReader(\"Now is The Time\");\n    String[] stopWords = new String[] { \"is\", \"the\", \"Time\" };\n    Set<Object> stopSet = StopFilter.makeStopSet(Version.LUCENE_CURRENT, stopWords);\n    TokenStream stream = new StopFilter(Version.LUCENE_CURRENT, new WhitespaceTokenizer(Version.LUCENE_CURRENT, reader), stopSet);\n    final TermAttribute termAtt = stream.getAttribute(TermAttribute.class);\n    assertTrue(stream.incrementToken());\n    assertEquals(\"Now\", termAtt.term());\n    assertTrue(stream.incrementToken());\n    assertEquals(\"The\", termAtt.term());\n    assertFalse(stream.incrementToken());\n  }\n\n","sourceOld":"  public void testStopFilt() throws IOException {\n    StringReader reader = new StringReader(\"Now is The Time\");\n    String[] stopWords = new String[] { \"is\", \"the\", \"Time\" };\n    Set<Object> stopSet = StopFilter.makeStopSet(Version.LUCENE_CURRENT, stopWords);\n    TokenStream stream = new StopFilter(Version.LUCENE_CURRENT, new WhitespaceTokenizer(reader), stopSet);\n    final TermAttribute termAtt = stream.getAttribute(TermAttribute.class);\n    assertTrue(stream.incrementToken());\n    assertEquals(\"Now\", termAtt.term());\n    assertTrue(stream.incrementToken());\n    assertEquals(\"The\", termAtt.term());\n    assertFalse(stream.incrementToken());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"55f083e91bb056b57de136da1dfc3b9b6ecc4ef6","date":1265808957,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/analysis/TestStopFilter#testStopFilt().mjava","pathOld":"src/test/org/apache/lucene/analysis/TestStopFilter#testStopFilt().mjava","sourceNew":"  public void testStopFilt() throws IOException {\n    StringReader reader = new StringReader(\"Now is The Time\");\n    String[] stopWords = new String[] { \"is\", \"the\", \"Time\" };\n    Set<Object> stopSet = StopFilter.makeStopSet(TEST_VERSION_CURRENT, stopWords);\n    TokenStream stream = new StopFilter(TEST_VERSION_CURRENT, new WhitespaceTokenizer(TEST_VERSION_CURRENT, reader), stopSet);\n    final TermAttribute termAtt = stream.getAttribute(TermAttribute.class);\n    assertTrue(stream.incrementToken());\n    assertEquals(\"Now\", termAtt.term());\n    assertTrue(stream.incrementToken());\n    assertEquals(\"The\", termAtt.term());\n    assertFalse(stream.incrementToken());\n  }\n\n","sourceOld":"  public void testStopFilt() throws IOException {\n    StringReader reader = new StringReader(\"Now is The Time\");\n    String[] stopWords = new String[] { \"is\", \"the\", \"Time\" };\n    Set<Object> stopSet = StopFilter.makeStopSet(Version.LUCENE_CURRENT, stopWords);\n    TokenStream stream = new StopFilter(Version.LUCENE_CURRENT, new WhitespaceTokenizer(Version.LUCENE_CURRENT, reader), stopSet);\n    final TermAttribute termAtt = stream.getAttribute(TermAttribute.class);\n    assertTrue(stream.incrementToken());\n    assertEquals(\"Now\", termAtt.term());\n    assertTrue(stream.incrementToken());\n    assertEquals(\"The\", termAtt.term());\n    assertFalse(stream.incrementToken());\n  }\n\n","bugFix":null,"bugIntro":["fcbc12aa8147f5203ca283e7252ba4280d6ffd16","c39363fefe2d7f6a6d50ce8e8b758c17a257c58e"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/analysis/TestStopFilter#testStopFilt().mjava","pathOld":"src/test/org/apache/lucene/analysis/TestStopFilter#testStopFilt().mjava","sourceNew":"  public void testStopFilt() throws IOException {\n    StringReader reader = new StringReader(\"Now is The Time\");\n    String[] stopWords = new String[] { \"is\", \"the\", \"Time\" };\n    Set<Object> stopSet = StopFilter.makeStopSet(TEST_VERSION_CURRENT, stopWords);\n    TokenStream stream = new StopFilter(TEST_VERSION_CURRENT, new WhitespaceTokenizer(TEST_VERSION_CURRENT, reader), stopSet);\n    final TermAttribute termAtt = stream.getAttribute(TermAttribute.class);\n    assertTrue(stream.incrementToken());\n    assertEquals(\"Now\", termAtt.term());\n    assertTrue(stream.incrementToken());\n    assertEquals(\"The\", termAtt.term());\n    assertFalse(stream.incrementToken());\n  }\n\n","sourceOld":"  public void testStopFilt() throws IOException {\n    StringReader reader = new StringReader(\"Now is The Time\");\n    String[] stopWords = new String[] { \"is\", \"the\", \"Time\" };\n    Set<Object> stopSet = StopFilter.makeStopSet(TEST_VERSION_CURRENT, stopWords);\n    TokenStream stream = new StopFilter(TEST_VERSION_CURRENT, new WhitespaceTokenizer(TEST_VERSION_CURRENT, reader), stopSet);\n    final TermAttribute termAtt = stream.getAttribute(TermAttribute.class);\n    assertTrue(stream.incrementToken());\n    assertEquals(\"Now\", termAtt.term());\n    assertTrue(stream.incrementToken());\n    assertEquals(\"The\", termAtt.term());\n    assertFalse(stream.incrementToken());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"7e2cb543b41c145f33390f460ee743d6693c9c6c":["2123bddbd65dea198cac380540636ce43a880403"],"74a5e7f20b4a444da9df3b2c0f331fa7a1f64223":["7e2cb543b41c145f33390f460ee743d6693c9c6c"],"55f083e91bb056b57de136da1dfc3b9b6ecc4ef6":["fe0932c1d340f83fb0a611e5829b3046a1cc1152"],"2123bddbd65dea198cac380540636ce43a880403":["050b03edbe9b8423ff4c09685c6f03d900e86b83"],"050b03edbe9b8423ff4c09685c6f03d900e86b83":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e450c7d50c2fc84c963d0d7ade9d3217d868064d":["7f6c85ffa816c86be877aa7a5029a5daa1336e7f"],"54c106a73719ede69e08f8b0ffe2950cc9ebfa07":["74a5e7f20b4a444da9df3b2c0f331fa7a1f64223"],"fe0932c1d340f83fb0a611e5829b3046a1cc1152":["e450c7d50c2fc84c963d0d7ade9d3217d868064d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8d78f014fded44fbde905f4f84cdc21907b371e8":["54c106a73719ede69e08f8b0ffe2950cc9ebfa07"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["55f083e91bb056b57de136da1dfc3b9b6ecc4ef6"],"7f6c85ffa816c86be877aa7a5029a5daa1336e7f":["8d78f014fded44fbde905f4f84cdc21907b371e8"]},"commit2Childs":{"7e2cb543b41c145f33390f460ee743d6693c9c6c":["74a5e7f20b4a444da9df3b2c0f331fa7a1f64223"],"74a5e7f20b4a444da9df3b2c0f331fa7a1f64223":["54c106a73719ede69e08f8b0ffe2950cc9ebfa07"],"55f083e91bb056b57de136da1dfc3b9b6ecc4ef6":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"2123bddbd65dea198cac380540636ce43a880403":["7e2cb543b41c145f33390f460ee743d6693c9c6c"],"050b03edbe9b8423ff4c09685c6f03d900e86b83":["2123bddbd65dea198cac380540636ce43a880403"],"e450c7d50c2fc84c963d0d7ade9d3217d868064d":["fe0932c1d340f83fb0a611e5829b3046a1cc1152"],"54c106a73719ede69e08f8b0ffe2950cc9ebfa07":["8d78f014fded44fbde905f4f84cdc21907b371e8"],"fe0932c1d340f83fb0a611e5829b3046a1cc1152":["55f083e91bb056b57de136da1dfc3b9b6ecc4ef6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["050b03edbe9b8423ff4c09685c6f03d900e86b83"],"8d78f014fded44fbde905f4f84cdc21907b371e8":["7f6c85ffa816c86be877aa7a5029a5daa1336e7f"],"7f6c85ffa816c86be877aa7a5029a5daa1336e7f":["e450c7d50c2fc84c963d0d7ade9d3217d868064d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}