{"path":"src/java/org/apache/lucene/document/Field#Field(String,Reader).mjava","commits":[{"id":"91109046a59c58ee0ee5d0d2767b08d1f30d6702","date":1000830588,"type":0,"author":"Jason van Zyl","isMerge":false,"pathNew":"src/java/org/apache/lucene/document/Field#Field(String,Reader).mjava","pathOld":"/dev/null","sourceNew":"  Field(String name, Reader reader) {\n    if (name == null)\n      throw new IllegalArgumentException(\"name cannot be null\");\n    if (reader == null)\n      throw new IllegalArgumentException(\"value cannot be null\");\n\n    this.name = name.intern();\t\t\t  // field names are interned\n    this.readerValue = reader;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e251d4a1720e4102605e45e256f41288c7fab045","date":1093898902,"type":3,"author":"Daniel Naber","isMerge":false,"pathNew":"src/java/org/apache/lucene/document/Field#Field(String,Reader).mjava","pathOld":"src/java/org/apache/lucene/document/Field#Field(String,Reader).mjava","sourceNew":"  Field(String name, Reader reader) {\n    if (name == null)\n      throw new NullPointerException(\"name cannot be null\");\n    if (reader == null)\n      throw new NullPointerException(\"value cannot be null\");\n\n    this.name = name.intern();\t\t\t  // field names are interned\n    this.readerValue = reader;\n  }\n\n","sourceOld":"  Field(String name, Reader reader) {\n    if (name == null)\n      throw new IllegalArgumentException(\"name cannot be null\");\n    if (reader == null)\n      throw new IllegalArgumentException(\"value cannot be null\");\n\n    this.name = name.intern();\t\t\t  // field names are interned\n    this.readerValue = reader;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"de1b6a0d783df025fde1688ad90fa19587631b4e","date":1094070708,"type":3,"author":"Daniel Naber","isMerge":false,"pathNew":"src/java/org/apache/lucene/document/Field#Field(String,Reader).mjava","pathOld":"src/java/org/apache/lucene/document/Field#Field(String,Reader).mjava","sourceNew":"  /**\n   * Create a tokenized and indexed field that is not stored. Term vectors will\n   * not be stored.\n   * \n   * @param name The name of the field\n   * @param reader The reader with the content\n   * @throws NullPointerException if name or reader is <code>null</code>\n   */\n  public Field(String name, Reader reader) {\n    this(name, reader, TermVector.NO);\n  }\n\n","sourceOld":"  Field(String name, Reader reader) {\n    if (name == null)\n      throw new NullPointerException(\"name cannot be null\");\n    if (reader == null)\n      throw new NullPointerException(\"value cannot be null\");\n\n    this.name = name.intern();\t\t\t  // field names are interned\n    this.readerValue = reader;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"270538c3113d693a2bb6cf82e1460791ffe27293","date":1149822910,"type":3,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"src/java/org/apache/lucene/document/Field#Field(String,Reader).mjava","pathOld":"src/java/org/apache/lucene/document/Field#Field(String,Reader).mjava","sourceNew":"  /**\n   * Create a tokenized and indexed field that is not stored. Term vectors will\n   * not be stored.  The Reader is read only when the Document is added to the index.\n   * \n   * @param name The name of the field\n   * @param reader The reader with the content\n   * @throws NullPointerException if name or reader is <code>null</code>\n   */\n  public Field(String name, Reader reader) {\n    this(name, reader, TermVector.NO);\n  }\n\n","sourceOld":"  /**\n   * Create a tokenized and indexed field that is not stored. Term vectors will\n   * not be stored.\n   * \n   * @param name The name of the field\n   * @param reader The reader with the content\n   * @throws NullPointerException if name or reader is <code>null</code>\n   */\n  public Field(String name, Reader reader) {\n    this(name, reader, TermVector.NO);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ea0feeb0b66a4c749ca3721503e19b6364f80a27","date":1176036033,"type":3,"author":"Daniel Naber","isMerge":false,"pathNew":"src/java/org/apache/lucene/document/Field#Field(String,Reader).mjava","pathOld":"src/java/org/apache/lucene/document/Field#Field(String,Reader).mjava","sourceNew":"  /**\n   * Create a tokenized and indexed field that is not stored. Term vectors will\n   * not be stored.  The Reader is read only when the Document is added to the index,\n   * i.e. you may not close the Reader until {@link IndexWriter#addDocument(Document)}\n   * has been called.\n   * \n   * @param name The name of the field\n   * @param reader The reader with the content\n   * @throws NullPointerException if name or reader is <code>null</code>\n   */\n  public Field(String name, Reader reader) {\n    this(name, reader, TermVector.NO);\n  }\n\n","sourceOld":"  /**\n   * Create a tokenized and indexed field that is not stored. Term vectors will\n   * not be stored.  The Reader is read only when the Document is added to the index.\n   * \n   * @param name The name of the field\n   * @param reader The reader with the content\n   * @throws NullPointerException if name or reader is <code>null</code>\n   */\n  public Field(String name, Reader reader) {\n    this(name, reader, TermVector.NO);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":4,"author":"Dawid Weiss","isMerge":false,"pathNew":"/dev/null","pathOld":"src/java/org/apache/lucene/document/Field#Field(String,Reader).mjava","sourceNew":null,"sourceOld":"  /**\n   * Create a tokenized and indexed field that is not stored. Term vectors will\n   * not be stored.  The Reader is read only when the Document is added to the index,\n   * i.e. you may not close the Reader until {@link IndexWriter#addDocument(Document)}\n   * has been called.\n   * \n   * @param name The name of the field\n   * @param reader The reader with the content\n   * @throws NullPointerException if name or reader is <code>null</code>\n   */\n  public Field(String name, Reader reader) {\n    this(name, reader, TermVector.NO);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"91109046a59c58ee0ee5d0d2767b08d1f30d6702":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e251d4a1720e4102605e45e256f41288c7fab045":["91109046a59c58ee0ee5d0d2767b08d1f30d6702"],"de1b6a0d783df025fde1688ad90fa19587631b4e":["e251d4a1720e4102605e45e256f41288c7fab045"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ea0feeb0b66a4c749ca3721503e19b6364f80a27":["270538c3113d693a2bb6cf82e1460791ffe27293"],"270538c3113d693a2bb6cf82e1460791ffe27293":["de1b6a0d783df025fde1688ad90fa19587631b4e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["ea0feeb0b66a4c749ca3721503e19b6364f80a27"]},"commit2Childs":{"91109046a59c58ee0ee5d0d2767b08d1f30d6702":["e251d4a1720e4102605e45e256f41288c7fab045"],"e251d4a1720e4102605e45e256f41288c7fab045":["de1b6a0d783df025fde1688ad90fa19587631b4e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["91109046a59c58ee0ee5d0d2767b08d1f30d6702"],"de1b6a0d783df025fde1688ad90fa19587631b4e":["270538c3113d693a2bb6cf82e1460791ffe27293"],"ea0feeb0b66a4c749ca3721503e19b6364f80a27":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"270538c3113d693a2bb6cf82e1460791ffe27293":["ea0feeb0b66a4c749ca3721503e19b6364f80a27"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}