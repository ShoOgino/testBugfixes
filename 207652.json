{"path":"src/java/org/apache/solr/request/SolrQueryRequestBase#getIntParam(String).mjava","commits":[{"id":"0c3e228bf650e96f3002a8fb73dd0c13d55af077","date":1138253849,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/request/SolrQueryRequestBase#getIntParam(String).mjava","pathOld":"/dev/null","sourceNew":" public int getIntParam(String name) {\n   String s = getParam(name);\n   if (s==null) {\n     throw new SolrException(500,\"Missing required parameter '\"+name+\"' from \" + this);\n   }\n   return Integer.parseInt(s);\n }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"44f497c313977be641ddf24aab74b30e6de834d8","date":1156361697,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/request/SolrQueryRequestBase#getIntParam(String).mjava","pathOld":"src/java/org/apache/solr/request/SolrQueryRequestBase#getIntParam(String).mjava","sourceNew":"  public int getIntParam(String name) {\n    String s = getParam(name);\n    if (s==null) {\n      throw new SolrException(500,\"Missing required parameter '\"+name+\"' from \" + this);\n    }\n    return Integer.parseInt(s);\n  }\n\n","sourceOld":" public int getIntParam(String name) {\n   String s = getParam(name);\n   if (s==null) {\n     throw new SolrException(500,\"Missing required parameter '\"+name+\"' from \" + this);\n   }\n   return Integer.parseInt(s);\n }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"20a1fb0250c6817499af3fe51a29e523e8834ff2","date":1177868812,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/request/SolrQueryRequestBase#getIntParam(String).mjava","pathOld":"src/java/org/apache/solr/request/SolrQueryRequestBase#getIntParam(String).mjava","sourceNew":"  /**\n   * use getParams().required().getInt( name ) instead\n   */\n  @Deprecated\n  public int getIntParam(String name) {\n    String s = getParam(name);\n    if (s==null) {\n      throw new SolrException(500,\"Missing required parameter '\"+name+\"' from \" + this);\n    }\n    return Integer.parseInt(s);\n  }\n\n","sourceOld":"  public int getIntParam(String name) {\n    String s = getParam(name);\n    if (s==null) {\n      throw new SolrException(500,\"Missing required parameter '\"+name+\"' from \" + this);\n    }\n    return Integer.parseInt(s);\n  }\n\n","bugFix":null,"bugIntro":["166e7267ee953339ce7ff2febc91aee7576425f5"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c4abe53aaee39b5f2f41dd9a0b905c1ddf880996","date":1180477701,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/request/SolrQueryRequestBase#getIntParam(String).mjava","pathOld":"src/java/org/apache/solr/request/SolrQueryRequestBase#getIntParam(String).mjava","sourceNew":"  /**\n   * use getParams().required().getInt( name ) instead\n   */\n  @Deprecated\n  public int getIntParam(String name) {\n    String s = getParam(name);\n    if (s==null) {\n      throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\"Missing required parameter '\"+name+\"' from \" + this);\n    }\n    return Integer.parseInt(s);\n  }\n\n","sourceOld":"  /**\n   * use getParams().required().getInt( name ) instead\n   */\n  @Deprecated\n  public int getIntParam(String name) {\n    String s = getParam(name);\n    if (s==null) {\n      throw new SolrException(500,\"Missing required parameter '\"+name+\"' from \" + this);\n    }\n    return Integer.parseInt(s);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"166e7267ee953339ce7ff2febc91aee7576425f5","date":1218487056,"type":3,"author":"Grant Ingersoll","isMerge":false,"pathNew":"src/java/org/apache/solr/request/SolrQueryRequestBase#getIntParam(String).mjava","pathOld":"src/java/org/apache/solr/request/SolrQueryRequestBase#getIntParam(String).mjava","sourceNew":"  /**\n   * @deprecated use getParams().required().getInt( name ) instead\n   */\n  @Deprecated\n  public int getIntParam(String name) {\n    String s = getParam(name);\n    if (s==null) {\n      throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\"Missing required parameter '\"+name+\"' from \" + this);\n    }\n    return Integer.parseInt(s);\n  }\n\n","sourceOld":"  /**\n   * use getParams().required().getInt( name ) instead\n   */\n  @Deprecated\n  public int getIntParam(String name) {\n    String s = getParam(name);\n    if (s==null) {\n      throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\"Missing required parameter '\"+name+\"' from \" + this);\n    }\n    return Integer.parseInt(s);\n  }\n\n","bugFix":["20a1fb0250c6817499af3fe51a29e523e8834ff2"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/request/SolrQueryRequestBase#getIntParam(String).mjava","pathOld":"src/java/org/apache/solr/request/SolrQueryRequestBase#getIntParam(String).mjava","sourceNew":"  /**\n   * @deprecated use getParams().required().getInt( name ) instead\n   */\n  @Deprecated\n  public int getIntParam(String name) {\n    String s = getParam(name);\n    if (s==null) {\n      throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\"Missing required parameter '\"+name+\"' from \" + this);\n    }\n    return Integer.parseInt(s);\n  }\n\n","sourceOld":"  /**\n   * @deprecated use getParams().required().getInt( name ) instead\n   */\n  @Deprecated\n  public int getIntParam(String name) {\n    String s = getParam(name);\n    if (s==null) {\n      throw new SolrException( SolrException.ErrorCode.SERVER_ERROR,\"Missing required parameter '\"+name+\"' from \" + this);\n    }\n    return Integer.parseInt(s);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"44f497c313977be641ddf24aab74b30e6de834d8":["0c3e228bf650e96f3002a8fb73dd0c13d55af077"],"166e7267ee953339ce7ff2febc91aee7576425f5":["c4abe53aaee39b5f2f41dd9a0b905c1ddf880996"],"0c3e228bf650e96f3002a8fb73dd0c13d55af077":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["166e7267ee953339ce7ff2febc91aee7576425f5"],"c4abe53aaee39b5f2f41dd9a0b905c1ddf880996":["20a1fb0250c6817499af3fe51a29e523e8834ff2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"20a1fb0250c6817499af3fe51a29e523e8834ff2":["44f497c313977be641ddf24aab74b30e6de834d8"]},"commit2Childs":{"44f497c313977be641ddf24aab74b30e6de834d8":["20a1fb0250c6817499af3fe51a29e523e8834ff2"],"0c3e228bf650e96f3002a8fb73dd0c13d55af077":["44f497c313977be641ddf24aab74b30e6de834d8"],"166e7267ee953339ce7ff2febc91aee7576425f5":["ad94625fb8d088209f46650c8097196fec67f00c"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["0c3e228bf650e96f3002a8fb73dd0c13d55af077"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"c4abe53aaee39b5f2f41dd9a0b905c1ddf880996":["166e7267ee953339ce7ff2febc91aee7576425f5"],"20a1fb0250c6817499af3fe51a29e523e8834ff2":["c4abe53aaee39b5f2f41dd9a0b905c1ddf880996"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}