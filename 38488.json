{"path":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterDeleteQueue#DocumentsWriterDeleteQueue(BufferedUpdates,long).mjava","commits":[{"id":"73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0","date":1383367127,"type":1,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterDeleteQueue#DocumentsWriterDeleteQueue(BufferedUpdates,long).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterDeleteQueue#DocumentsWriterDeleteQueue(BufferedDeletes,long).mjava","sourceNew":"  DocumentsWriterDeleteQueue(BufferedUpdates globalBufferedUpdates, long generation) {\n    this.globalBufferedUpdates = globalBufferedUpdates;\n    this.generation = generation;\n    /*\n     * we use a sentinel instance as our initial tail. No slice will ever try to\n     * apply this tail since the head is always omitted.\n     */\n    tail = new Node<Object>(null); // sentinel\n    globalSlice = new DeleteSlice(tail);\n  }\n\n","sourceOld":"  DocumentsWriterDeleteQueue(BufferedDeletes globalBufferedDeletes, long generation) {\n    this.globalBufferedDeletes = globalBufferedDeletes;\n    this.generation = generation;\n    /*\n     * we use a sentinel instance as our initial tail. No slice will ever try to\n     * apply this tail since the head is always omitted.\n     */\n    tail = new Node<Object>(null); // sentinel\n    globalSlice = new DeleteSlice(tail);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterDeleteQueue#DocumentsWriterDeleteQueue(BufferedUpdates,long).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterDeleteQueue#DocumentsWriterDeleteQueue(BufferedUpdates,long).mjava","sourceNew":"  DocumentsWriterDeleteQueue(BufferedUpdates globalBufferedUpdates, long generation) {\n    this.globalBufferedUpdates = globalBufferedUpdates;\n    this.generation = generation;\n    /*\n     * we use a sentinel instance as our initial tail. No slice will ever try to\n     * apply this tail since the head is always omitted.\n     */\n    tail = new Node<>(null); // sentinel\n    globalSlice = new DeleteSlice(tail);\n  }\n\n","sourceOld":"  DocumentsWriterDeleteQueue(BufferedUpdates globalBufferedUpdates, long generation) {\n    this.globalBufferedUpdates = globalBufferedUpdates;\n    this.generation = generation;\n    /*\n     * we use a sentinel instance as our initial tail. No slice will ever try to\n     * apply this tail since the head is always omitted.\n     */\n    tail = new Node<Object>(null); // sentinel\n    globalSlice = new DeleteSlice(tail);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f492fe129985750df09c8dac738aecc503158bb3","date":1464099630,"type":5,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterDeleteQueue#DocumentsWriterDeleteQueue(BufferedUpdates,long,long).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterDeleteQueue#DocumentsWriterDeleteQueue(BufferedUpdates,long).mjava","sourceNew":"  DocumentsWriterDeleteQueue(BufferedUpdates globalBufferedUpdates, long generation, long startSeqNo) {\n    this.globalBufferedUpdates = globalBufferedUpdates;\n    this.generation = generation;\n    this.seqNo = new AtomicLong(startSeqNo);\n    /*\n     * we use a sentinel instance as our initial tail. No slice will ever try to\n     * apply this tail since the head is always omitted.\n     */\n    tail = new Node<>(null); // sentinel\n    globalSlice = new DeleteSlice(tail);\n  }\n\n","sourceOld":"  DocumentsWriterDeleteQueue(BufferedUpdates globalBufferedUpdates, long generation) {\n    this.globalBufferedUpdates = globalBufferedUpdates;\n    this.generation = generation;\n    /*\n     * we use a sentinel instance as our initial tail. No slice will ever try to\n     * apply this tail since the head is always omitted.\n     */\n    tail = new Node<>(null); // sentinel\n    globalSlice = new DeleteSlice(tail);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6483e4260c08168709c02238ae083a51519a28dd","date":1465117546,"type":5,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterDeleteQueue#DocumentsWriterDeleteQueue(BufferedUpdates,long,long).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterDeleteQueue#DocumentsWriterDeleteQueue(BufferedUpdates,long).mjava","sourceNew":"  DocumentsWriterDeleteQueue(BufferedUpdates globalBufferedUpdates, long generation, long startSeqNo) {\n    this.globalBufferedUpdates = globalBufferedUpdates;\n    this.generation = generation;\n    this.nextSeqNo = new AtomicLong(startSeqNo);\n    /*\n     * we use a sentinel instance as our initial tail. No slice will ever try to\n     * apply this tail since the head is always omitted.\n     */\n    tail = new Node<>(null); // sentinel\n    globalSlice = new DeleteSlice(tail);\n  }\n\n","sourceOld":"  DocumentsWriterDeleteQueue(BufferedUpdates globalBufferedUpdates, long generation) {\n    this.globalBufferedUpdates = globalBufferedUpdates;\n    this.generation = generation;\n    /*\n     * we use a sentinel instance as our initial tail. No slice will ever try to\n     * apply this tail since the head is always omitted.\n     */\n    tail = new Node<>(null); // sentinel\n    globalSlice = new DeleteSlice(tail);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"191128ac5b85671b1671e2c857437694283b6ebf","date":1465297861,"type":5,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterDeleteQueue#DocumentsWriterDeleteQueue(BufferedUpdates,long,long).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterDeleteQueue#DocumentsWriterDeleteQueue(BufferedUpdates,long).mjava","sourceNew":"  DocumentsWriterDeleteQueue(BufferedUpdates globalBufferedUpdates, long generation, long startSeqNo) {\n    this.globalBufferedUpdates = globalBufferedUpdates;\n    this.generation = generation;\n    this.nextSeqNo = new AtomicLong(startSeqNo);\n    /*\n     * we use a sentinel instance as our initial tail. No slice will ever try to\n     * apply this tail since the head is always omitted.\n     */\n    tail = new Node<>(null); // sentinel\n    globalSlice = new DeleteSlice(tail);\n  }\n\n","sourceOld":"  DocumentsWriterDeleteQueue(BufferedUpdates globalBufferedUpdates, long generation) {\n    this.globalBufferedUpdates = globalBufferedUpdates;\n    this.generation = generation;\n    /*\n     * we use a sentinel instance as our initial tail. No slice will ever try to\n     * apply this tail since the head is always omitted.\n     */\n    tail = new Node<>(null); // sentinel\n    globalSlice = new DeleteSlice(tail);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":4,"author":"Kevin Risden","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterDeleteQueue#DocumentsWriterDeleteQueue(BufferedUpdates,long).mjava","sourceNew":null,"sourceOld":"  DocumentsWriterDeleteQueue(BufferedUpdates globalBufferedUpdates, long generation) {\n    this.globalBufferedUpdates = globalBufferedUpdates;\n    this.generation = generation;\n    /*\n     * we use a sentinel instance as our initial tail. No slice will ever try to\n     * apply this tail since the head is always omitted.\n     */\n    tail = new Node<>(null); // sentinel\n    globalSlice = new DeleteSlice(tail);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0"],"73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f492fe129985750df09c8dac738aecc503158bb3":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"6483e4260c08168709c02238ae083a51519a28dd":["634f330c54fd3f9f491d52036dc3f40b4f4d8934","f492fe129985750df09c8dac738aecc503158bb3"],"191128ac5b85671b1671e2c857437694283b6ebf":["634f330c54fd3f9f491d52036dc3f40b4f4d8934","6483e4260c08168709c02238ae083a51519a28dd"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["634f330c54fd3f9f491d52036dc3f40b4f4d8934","191128ac5b85671b1671e2c857437694283b6ebf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["191128ac5b85671b1671e2c857437694283b6ebf"]},"commit2Childs":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["f492fe129985750df09c8dac738aecc503158bb3","6483e4260c08168709c02238ae083a51519a28dd","191128ac5b85671b1671e2c857437694283b6ebf","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0"],"f492fe129985750df09c8dac738aecc503158bb3":["6483e4260c08168709c02238ae083a51519a28dd"],"6483e4260c08168709c02238ae083a51519a28dd":["191128ac5b85671b1671e2c857437694283b6ebf"],"191128ac5b85671b1671e2c857437694283b6ebf":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}