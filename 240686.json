{"path":"solr/core/src/java/org/apache/solr/response/XMLWriter#writeStartDocumentList(String,long,int,long,Float).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/response/XMLWriter#writeStartDocumentList(String,long,int,long,Float).mjava","pathOld":"solr/src/java/org/apache/solr/response/XMLWriter#writeStartDocumentList(String,long,int,long,Float).mjava","sourceNew":"  @Override\n  public void writeStartDocumentList(String name, \n      long start, int size, long numFound, Float maxScore) throws IOException\n  {\n    if (doIndent) indent();\n\n    writer.write(\"<result\");\n    writeAttr(\"name\",name);\n    writeAttr(\"numFound\",Long.toString(numFound));\n    writeAttr(\"start\",Long.toString(start));\n    if(maxScore!=null) {\n      writeAttr(\"maxScore\",Float.toString(maxScore));\n    }\n    writer.write(\">\");\n    \n    incLevel();\n  }\n\n","sourceOld":"  @Override\n  public void writeStartDocumentList(String name, \n      long start, int size, long numFound, Float maxScore) throws IOException\n  {\n    if (doIndent) indent();\n\n    writer.write(\"<result\");\n    writeAttr(\"name\",name);\n    writeAttr(\"numFound\",Long.toString(numFound));\n    writeAttr(\"start\",Long.toString(start));\n    if(maxScore!=null) {\n      writeAttr(\"maxScore\",Float.toString(maxScore));\n    }\n    writer.write(\">\");\n    \n    incLevel();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/response/XMLWriter#writeStartDocumentList(String,long,int,long,Float).mjava","pathOld":"solr/src/java/org/apache/solr/response/XMLWriter#writeStartDocumentList(String,long,int,long,Float).mjava","sourceNew":"  @Override\n  public void writeStartDocumentList(String name, \n      long start, int size, long numFound, Float maxScore) throws IOException\n  {\n    if (doIndent) indent();\n\n    writer.write(\"<result\");\n    writeAttr(\"name\",name);\n    writeAttr(\"numFound\",Long.toString(numFound));\n    writeAttr(\"start\",Long.toString(start));\n    if(maxScore!=null) {\n      writeAttr(\"maxScore\",Float.toString(maxScore));\n    }\n    writer.write(\">\");\n    \n    incLevel();\n  }\n\n","sourceOld":"  @Override\n  public void writeStartDocumentList(String name, \n      long start, int size, long numFound, Float maxScore) throws IOException\n  {\n    if (doIndent) indent();\n\n    writer.write(\"<result\");\n    writeAttr(\"name\",name);\n    writeAttr(\"numFound\",Long.toString(numFound));\n    writeAttr(\"start\",Long.toString(start));\n    if(maxScore!=null) {\n      writeAttr(\"maxScore\",Float.toString(maxScore));\n    }\n    writer.write(\">\");\n    \n    incLevel();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/response/XMLWriter#writeStartDocumentList(String,long,int,long,Float).mjava","pathOld":"solr/src/java/org/apache/solr/response/XMLWriter#writeStartDocumentList(String,long,int,long,Float).mjava","sourceNew":"  @Override\n  public void writeStartDocumentList(String name, \n      long start, int size, long numFound, Float maxScore) throws IOException\n  {\n    if (doIndent) indent();\n\n    writer.write(\"<result\");\n    writeAttr(\"name\",name);\n    writeAttr(\"numFound\",Long.toString(numFound));\n    writeAttr(\"start\",Long.toString(start));\n    if(maxScore!=null) {\n      writeAttr(\"maxScore\",Float.toString(maxScore));\n    }\n    writer.write(\">\");\n    \n    incLevel();\n  }\n\n","sourceOld":"  @Override\n  public void writeStartDocumentList(String name, \n      long start, int size, long numFound, Float maxScore) throws IOException\n  {\n    if (doIndent) indent();\n\n    writer.write(\"<result\");\n    writeAttr(\"name\",name);\n    writeAttr(\"numFound\",Long.toString(numFound));\n    writeAttr(\"start\",Long.toString(start));\n    if(maxScore!=null) {\n      writeAttr(\"maxScore\",Float.toString(maxScore));\n    }\n    writer.write(\">\");\n    \n    incLevel();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1390137e395d2f07f9ba5b8c43d293befe84d563","date":1427947685,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/response/XMLWriter#writeStartDocumentList(String,long,int,long,Float).mjava","pathOld":"solr/core/src/java/org/apache/solr/response/XMLWriter#writeStartDocumentList(String,long,int,long,Float).mjava","sourceNew":"  @Override\n  public void writeStartDocumentList(String name, \n      long start, int size, long numFound, Float maxScore) throws IOException\n  {\n    if (doIndent) indent();\n\n    writer.write(\"<result\");\n    writeAttr(NAME, name);\n    writeAttr(\"numFound\",Long.toString(numFound));\n    writeAttr(\"start\",Long.toString(start));\n    if(maxScore!=null) {\n      writeAttr(\"maxScore\",Float.toString(maxScore));\n    }\n    writer.write(\">\");\n    \n    incLevel();\n  }\n\n","sourceOld":"  @Override\n  public void writeStartDocumentList(String name, \n      long start, int size, long numFound, Float maxScore) throws IOException\n  {\n    if (doIndent) indent();\n\n    writer.write(\"<result\");\n    writeAttr(\"name\",name);\n    writeAttr(\"numFound\",Long.toString(numFound));\n    writeAttr(\"start\",Long.toString(start));\n    if(maxScore!=null) {\n      writeAttr(\"maxScore\",Float.toString(maxScore));\n    }\n    writer.write(\">\");\n    \n    incLevel();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d2638f781be724518ff6c2263d14a48cf6e68017","date":1427989059,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/response/XMLWriter#writeStartDocumentList(String,long,int,long,Float).mjava","pathOld":"solr/core/src/java/org/apache/solr/response/XMLWriter#writeStartDocumentList(String,long,int,long,Float).mjava","sourceNew":"  @Override\n  public void writeStartDocumentList(String name, \n      long start, int size, long numFound, Float maxScore) throws IOException\n  {\n    if (doIndent) indent();\n\n    writer.write(\"<result\");\n    writeAttr(NAME, name);\n    writeAttr(\"numFound\",Long.toString(numFound));\n    writeAttr(\"start\",Long.toString(start));\n    if(maxScore!=null) {\n      writeAttr(\"maxScore\",Float.toString(maxScore));\n    }\n    writer.write(\">\");\n    \n    incLevel();\n  }\n\n","sourceOld":"  @Override\n  public void writeStartDocumentList(String name, \n      long start, int size, long numFound, Float maxScore) throws IOException\n  {\n    if (doIndent) indent();\n\n    writer.write(\"<result\");\n    writeAttr(\"name\",name);\n    writeAttr(\"numFound\",Long.toString(numFound));\n    writeAttr(\"start\",Long.toString(start));\n    if(maxScore!=null) {\n      writeAttr(\"maxScore\",Float.toString(maxScore));\n    }\n    writer.write(\">\");\n    \n    incLevel();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0db83f1bb855a4ac824c9a2a8e1ee9b29a039c15","date":1554259533,"type":3,"author":"Gus Heck","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/response/XMLWriter#writeStartDocumentList(String,long,int,long,Float).mjava","pathOld":"solr/core/src/java/org/apache/solr/response/XMLWriter#writeStartDocumentList(String,long,int,long,Float).mjava","sourceNew":"  @Override\n  public void writeStartDocumentList(String name,\n      long start, int size, long numFound, Float maxScore) throws IOException\n  {\n    if (doIndent) indent();\n\n    writer.write(\"<result\");\n    writeAttr(NAME, name);\n    writeAttr(\"numFound\",Long.toString(numFound));\n    writeAttr(\"start\",Long.toString(start));\n    if(maxScore!=null) {\n      writeAttr(\"maxScore\",Float.toString(maxScore));\n    }\n    writer.write(\">\");\n\n    incLevel();\n  }\n\n","sourceOld":"  @Override\n  public void writeStartDocumentList(String name, \n      long start, int size, long numFound, Float maxScore) throws IOException\n  {\n    if (doIndent) indent();\n\n    writer.write(\"<result\");\n    writeAttr(NAME, name);\n    writeAttr(\"numFound\",Long.toString(numFound));\n    writeAttr(\"start\",Long.toString(start));\n    if(maxScore!=null) {\n      writeAttr(\"maxScore\",Float.toString(maxScore));\n    }\n    writer.write(\">\");\n    \n    incLevel();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"640ded7811e1b7d29236a5e2934ec3cd266a8199","date":1588973147,"type":3,"author":"Tomas Fernandez Lobbe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/response/XMLWriter#writeStartDocumentList(String,long,int,long,Float).mjava","pathOld":"solr/core/src/java/org/apache/solr/response/XMLWriter#writeStartDocumentList(String,long,int,long,Float).mjava","sourceNew":"  @Override\n  @Deprecated\n  public void writeStartDocumentList(String name,\n      long start, int size, long numFound, Float maxScore) throws IOException\n  {\n    if (doIndent) indent();\n\n    writer.write(\"<result\");\n    writeAttr(NAME, name);\n    writeAttr(\"numFound\",Long.toString(numFound));\n    writeAttr(\"start\",Long.toString(start));\n    if(maxScore!=null) {\n      writeAttr(\"maxScore\",Float.toString(maxScore));\n    }\n    writer.write(\">\");\n\n    incLevel();\n  }\n\n","sourceOld":"  @Override\n  public void writeStartDocumentList(String name,\n      long start, int size, long numFound, Float maxScore) throws IOException\n  {\n    if (doIndent) indent();\n\n    writer.write(\"<result\");\n    writeAttr(NAME, name);\n    writeAttr(\"numFound\",Long.toString(numFound));\n    writeAttr(\"start\",Long.toString(start));\n    if(maxScore!=null) {\n      writeAttr(\"maxScore\",Float.toString(maxScore));\n    }\n    writer.write(\">\");\n\n    incLevel();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4191c6d773de5195a6fc60256a9fa560cc085fd1","date":1599759189,"type":4,"author":"Tomas Fernandez Lobbe","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/response/XMLWriter#writeStartDocumentList(String,long,int,long,Float).mjava","sourceNew":null,"sourceOld":"  @Override\n  @Deprecated\n  public void writeStartDocumentList(String name,\n      long start, int size, long numFound, Float maxScore) throws IOException\n  {\n    if (doIndent) indent();\n\n    writer.write(\"<result\");\n    writeAttr(NAME, name);\n    writeAttr(\"numFound\",Long.toString(numFound));\n    writeAttr(\"start\",Long.toString(start));\n    if(maxScore!=null) {\n      writeAttr(\"maxScore\",Float.toString(maxScore));\n    }\n    writer.write(\">\");\n\n    incLevel();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"640ded7811e1b7d29236a5e2934ec3cd266a8199":["0db83f1bb855a4ac824c9a2a8e1ee9b29a039c15"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"1390137e395d2f07f9ba5b8c43d293befe84d563":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d2638f781be724518ff6c2263d14a48cf6e68017":["c26f00b574427b55127e869b935845554afde1fa","1390137e395d2f07f9ba5b8c43d293befe84d563"],"4191c6d773de5195a6fc60256a9fa560cc085fd1":["640ded7811e1b7d29236a5e2934ec3cd266a8199"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"0db83f1bb855a4ac824c9a2a8e1ee9b29a039c15":["1390137e395d2f07f9ba5b8c43d293befe84d563"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4191c6d773de5195a6fc60256a9fa560cc085fd1"]},"commit2Childs":{"640ded7811e1b7d29236a5e2934ec3cd266a8199":["4191c6d773de5195a6fc60256a9fa560cc085fd1"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"1390137e395d2f07f9ba5b8c43d293befe84d563":["d2638f781be724518ff6c2263d14a48cf6e68017","0db83f1bb855a4ac824c9a2a8e1ee9b29a039c15"],"c26f00b574427b55127e869b935845554afde1fa":["1390137e395d2f07f9ba5b8c43d293befe84d563","d2638f781be724518ff6c2263d14a48cf6e68017"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"d2638f781be724518ff6c2263d14a48cf6e68017":[],"4191c6d773de5195a6fc60256a9fa560cc085fd1":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"0db83f1bb855a4ac824c9a2a8e1ee9b29a039c15":["640ded7811e1b7d29236a5e2934ec3cd266a8199"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d2638f781be724518ff6c2263d14a48cf6e68017","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}