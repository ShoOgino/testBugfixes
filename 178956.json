{"path":"lucene/core/src/java/org/apache/lucene/search/similarities/Similarity#simScorer(SimWeight,LeafReaderContext).mjava","commits":[{"id":"c9fb5f46e264daf5ba3860defe623a89d202dd87","date":1411516315,"type":0,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/similarities/Similarity#simScorer(SimWeight,LeafReaderContext).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Creates a new {@link Similarity.SimScorer} to score matching documents from a segment of the inverted index.\n   * @param weight collection information from {@link #computeWeight(float, CollectionStatistics, TermStatistics...)}\n   * @param context segment of the inverted index to be scored.\n   * @return SloppySimScorer for scoring documents across <code>context</code>\n   * @throws IOException if there is a low-level I/O error\n   */\n  public abstract SimScorer simScorer(SimWeight weight, LeafReaderContext context) throws IOException;\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2dfdf766e55e943d942055d7de53c7ad6bc45283","date":1441632886,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/similarities/Similarity#simScorer(SimWeight,LeafReaderContext).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/similarities/Similarity#simScorer(SimWeight,LeafReaderContext).mjava","sourceNew":"  /**\n   * Creates a new {@link Similarity.SimScorer} to score matching documents from a segment of the inverted index.\n   * @param weight collection information from {@link #computeWeight(CollectionStatistics, TermStatistics...)}\n   * @param context segment of the inverted index to be scored.\n   * @return SloppySimScorer for scoring documents across <code>context</code>\n   * @throws IOException if there is a low-level I/O error\n   */\n  public abstract SimScorer simScorer(SimWeight weight, LeafReaderContext context) throws IOException;\n\n","sourceOld":"  /**\n   * Creates a new {@link Similarity.SimScorer} to score matching documents from a segment of the inverted index.\n   * @param weight collection information from {@link #computeWeight(float, CollectionStatistics, TermStatistics...)}\n   * @param context segment of the inverted index to be scored.\n   * @return SloppySimScorer for scoring documents across <code>context</code>\n   * @throws IOException if there is a low-level I/O error\n   */\n  public abstract SimScorer simScorer(SimWeight weight, LeafReaderContext context) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"02e175abd2c4c1611c5a9647486ae8ba249a94c1","date":1468327116,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/similarities/Similarity#simScorer(SimWeight,LeafReaderContext).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/similarities/Similarity#simScorer(SimWeight,LeafReaderContext).mjava","sourceNew":"  /**\n   * Creates a new {@link Similarity.SimScorer} to score matching documents from a segment of the inverted index.\n   * @param weight collection information from {@link #computeWeight(float, CollectionStatistics, TermStatistics...)}\n   * @param context segment of the inverted index to be scored.\n   * @return SloppySimScorer for scoring documents across <code>context</code>\n   * @throws IOException if there is a low-level I/O error\n   */\n  public abstract SimScorer simScorer(SimWeight weight, LeafReaderContext context) throws IOException;\n\n","sourceOld":"  /**\n   * Creates a new {@link Similarity.SimScorer} to score matching documents from a segment of the inverted index.\n   * @param weight collection information from {@link #computeWeight(CollectionStatistics, TermStatistics...)}\n   * @param context segment of the inverted index to be scored.\n   * @return SloppySimScorer for scoring documents across <code>context</code>\n   * @throws IOException if there is a low-level I/O error\n   */\n  public abstract SimScorer simScorer(SimWeight weight, LeafReaderContext context) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/similarities/Similarity#simScorer(SimWeight,LeafReaderContext).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/similarities/Similarity#simScorer(SimWeight,LeafReaderContext).mjava","sourceNew":"  /**\n   * Creates a new {@link Similarity.SimScorer} to score matching documents from a segment of the inverted index.\n   * @param weight collection information from {@link #computeWeight(float, CollectionStatistics, TermStatistics...)}\n   * @param context segment of the inverted index to be scored.\n   * @return SloppySimScorer for scoring documents across <code>context</code>\n   * @throws IOException if there is a low-level I/O error\n   */\n  public abstract SimScorer simScorer(SimWeight weight, LeafReaderContext context) throws IOException;\n\n","sourceOld":"  /**\n   * Creates a new {@link Similarity.SimScorer} to score matching documents from a segment of the inverted index.\n   * @param weight collection information from {@link #computeWeight(CollectionStatistics, TermStatistics...)}\n   * @param context segment of the inverted index to be scored.\n   * @return SloppySimScorer for scoring documents across <code>context</code>\n   * @throws IOException if there is a low-level I/O error\n   */\n  public abstract SimScorer simScorer(SimWeight weight, LeafReaderContext context) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"68d6cb7f0f019661a784bd0e5a21e85b5f812af6","date":1515075216,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/search/similarities/Similarity#simScorer(SimWeight,LeafReaderContext).mjava","sourceNew":null,"sourceOld":"  /**\n   * Creates a new {@link Similarity.SimScorer} to score matching documents from a segment of the inverted index.\n   * @param weight collection information from {@link #computeWeight(float, CollectionStatistics, TermStatistics...)}\n   * @param context segment of the inverted index to be scored.\n   * @return SloppySimScorer for scoring documents across <code>context</code>\n   * @throws IOException if there is a low-level I/O error\n   */\n  public abstract SimScorer simScorer(SimWeight weight, LeafReaderContext context) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b94236357aaa22b76c10629851fe4e376e0cea82","date":1516710914,"type":4,"author":"Karl Wright","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/search/similarities/Similarity#simScorer(SimWeight,LeafReaderContext).mjava","sourceNew":null,"sourceOld":"  /**\n   * Creates a new {@link Similarity.SimScorer} to score matching documents from a segment of the inverted index.\n   * @param weight collection information from {@link #computeWeight(float, CollectionStatistics, TermStatistics...)}\n   * @param context segment of the inverted index to be scored.\n   * @return SloppySimScorer for scoring documents across <code>context</code>\n   * @throws IOException if there is a low-level I/O error\n   */\n  public abstract SimScorer simScorer(SimWeight weight, LeafReaderContext context) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b94236357aaa22b76c10629851fe4e376e0cea82":["02e175abd2c4c1611c5a9647486ae8ba249a94c1","68d6cb7f0f019661a784bd0e5a21e85b5f812af6"],"68d6cb7f0f019661a784bd0e5a21e85b5f812af6":["02e175abd2c4c1611c5a9647486ae8ba249a94c1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2dfdf766e55e943d942055d7de53c7ad6bc45283":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"02e175abd2c4c1611c5a9647486ae8ba249a94c1":["2dfdf766e55e943d942055d7de53c7ad6bc45283"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["2dfdf766e55e943d942055d7de53c7ad6bc45283","02e175abd2c4c1611c5a9647486ae8ba249a94c1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b94236357aaa22b76c10629851fe4e376e0cea82"]},"commit2Childs":{"b94236357aaa22b76c10629851fe4e376e0cea82":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"68d6cb7f0f019661a784bd0e5a21e85b5f812af6":["b94236357aaa22b76c10629851fe4e376e0cea82"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"2dfdf766e55e943d942055d7de53c7ad6bc45283":["02e175abd2c4c1611c5a9647486ae8ba249a94c1","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"02e175abd2c4c1611c5a9647486ae8ba249a94c1":["b94236357aaa22b76c10629851fe4e376e0cea82","68d6cb7f0f019661a784bd0e5a21e85b5f812af6","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["2dfdf766e55e943d942055d7de53c7ad6bc45283"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}