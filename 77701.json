{"path":"lucene/core/src/test/org/apache/lucene/document/BaseLatLonShapeTestCase#testLineQueryEqualsAndHashcode().mjava","commits":[{"id":"09c1e6d465800c73af60624bf9d4459a19f7940c","date":1579293280,"type":1,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/document/BaseLatLonShapeTestCase#testLineQueryEqualsAndHashcode().mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/document/BaseLatLonShapeTestCase#testLineQueryEqualsAndHashcode().mjava","sourceNew":"  public void testLineQueryEqualsAndHashcode() {\n    Line line = nextLine();\n    QueryRelation queryRelation = RandomPicks.randomFrom(random(), POINT_LINE_RELATIONS);\n    String fieldName = \"foo\";\n    Query q1 = newLineQuery(fieldName, queryRelation, line);\n    Query q2 = newLineQuery(fieldName, queryRelation, line);\n    QueryUtils.checkEqual(q1, q2);\n    //different field name\n    Query q3 = newLineQuery(\"bar\", queryRelation, line);\n    QueryUtils.checkUnequal(q1, q3);\n    //different query relation\n    QueryRelation newQueryRelation = RandomPicks.randomFrom(random(), POINT_LINE_RELATIONS);\n    Query q4 = newLineQuery(fieldName, newQueryRelation, line);\n    if (queryRelation == newQueryRelation) {\n      QueryUtils.checkEqual(q1, q4);\n    } else {\n      QueryUtils.checkUnequal(q1, q4);\n    }\n    //different shape\n    Line newLine = nextLine();\n    Query q5 = newLineQuery(fieldName, queryRelation, newLine);\n    if (line.equals(newLine)) {\n      QueryUtils.checkEqual(q1, q5);\n    } else {\n      QueryUtils.checkUnequal(q1, q5);\n    }\n  }\n\n","sourceOld":"  public void testLineQueryEqualsAndHashcode() {\n    Line line = nextLine();\n    QueryRelation queryRelation = RandomPicks.randomFrom(random(), POINT_LINE_RELATIONS);\n    String fieldName = \"foo\";\n    Query q1 = newLineQuery(fieldName, queryRelation, line);\n    Query q2 = newLineQuery(fieldName, queryRelation, line);\n    QueryUtils.checkEqual(q1, q2);\n    //different field name\n    Query q3 = newLineQuery(\"bar\", queryRelation, line);\n    QueryUtils.checkUnequal(q1, q3);\n    //different query relation\n    QueryRelation newQueryRelation = RandomPicks.randomFrom(random(), POINT_LINE_RELATIONS);\n    Query q4 = newLineQuery(fieldName, newQueryRelation, line);\n    if (queryRelation == newQueryRelation) {\n      QueryUtils.checkEqual(q1, q4);\n    } else {\n      QueryUtils.checkUnequal(q1, q4);\n    }\n    //different shape\n    Line newLine = nextLine();\n    Query q5 = newLineQuery(fieldName, queryRelation, newLine);\n    if (line.equals(newLine)) {\n      QueryUtils.checkEqual(q1, q5);\n    } else {\n      QueryUtils.checkUnequal(q1, q5);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"09c1e6d465800c73af60624bf9d4459a19f7940c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["09c1e6d465800c73af60624bf9d4459a19f7940c"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["09c1e6d465800c73af60624bf9d4459a19f7940c"],"09c1e6d465800c73af60624bf9d4459a19f7940c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}