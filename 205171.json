{"path":"solr/core/src/java/org/apache/solr/search/facet/FacetProcessor#handleFilters().mjava","commits":[{"id":"23dfab8006bb57825127140eeff51baa06028cf7","date":1477767259,"type":0,"author":"yonik","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetProcessor#handleFilters().mjava","pathOld":"/dev/null","sourceNew":"  private void handleFilters() throws IOException {\n    if (freq.filters == null || freq.filters.isEmpty()) return;\n\n    List<Query> qlist = new ArrayList<>(freq.filters.size());\n    // TODO: prevent parsing filters each time!\n    for (Object rawFilter : freq.filters) {\n      Query symbolicFilter;\n      if (rawFilter instanceof String) {\n        QParser parser = null;\n        try {\n          parser = QParser.getParser((String)rawFilter, fcontext.req);\n          symbolicFilter = parser.getQuery();\n        } catch (SyntaxError syntaxError) {\n          throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, syntaxError);\n        }\n      } else {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Bad query (expected a string):\" + rawFilter);\n      }\n\n      qlist.add(symbolicFilter);\n    }\n\n    this.filter = fcontext.searcher.getDocSet(qlist);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0a76ad9d8f2ff7e5969bcbf5962d4a4cc574f5c5","date":1477788234,"type":5,"author":"yonik","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetProcessor#evalFilters().mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/FacetProcessor#handleFilters().mjava","sourceNew":"  private void evalFilters() throws IOException {\n    if (freq.filters == null || freq.filters.isEmpty()) return;\n\n    List<Query> qlist = new ArrayList<>(freq.filters.size());\n    // TODO: prevent parsing filters each time!\n    for (Object rawFilter : freq.filters) {\n      Query symbolicFilter;\n      if (rawFilter instanceof String) {\n        QParser parser = null;\n        try {\n          parser = QParser.getParser((String)rawFilter, fcontext.req);\n          symbolicFilter = parser.getQuery();\n        } catch (SyntaxError syntaxError) {\n          throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, syntaxError);\n        }\n      } else {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Bad query (expected a string):\" + rawFilter);\n      }\n\n      qlist.add(symbolicFilter);\n    }\n\n    this.filter = fcontext.searcher.getDocSet(qlist);\n  }\n\n","sourceOld":"  private void handleFilters() throws IOException {\n    if (freq.filters == null || freq.filters.isEmpty()) return;\n\n    List<Query> qlist = new ArrayList<>(freq.filters.size());\n    // TODO: prevent parsing filters each time!\n    for (Object rawFilter : freq.filters) {\n      Query symbolicFilter;\n      if (rawFilter instanceof String) {\n        QParser parser = null;\n        try {\n          parser = QParser.getParser((String)rawFilter, fcontext.req);\n          symbolicFilter = parser.getQuery();\n        } catch (SyntaxError syntaxError) {\n          throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, syntaxError);\n        }\n      } else {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Bad query (expected a string):\" + rawFilter);\n      }\n\n      qlist.add(symbolicFilter);\n    }\n\n    this.filter = fcontext.searcher.getDocSet(qlist);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"23dfab8006bb57825127140eeff51baa06028cf7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"0a76ad9d8f2ff7e5969bcbf5962d4a4cc574f5c5":["23dfab8006bb57825127140eeff51baa06028cf7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0a76ad9d8f2ff7e5969bcbf5962d4a4cc574f5c5"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["23dfab8006bb57825127140eeff51baa06028cf7"],"23dfab8006bb57825127140eeff51baa06028cf7":["0a76ad9d8f2ff7e5969bcbf5962d4a4cc574f5c5"],"0a76ad9d8f2ff7e5969bcbf5962d4a4cc574f5c5":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}