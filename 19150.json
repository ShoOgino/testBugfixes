{"path":"contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestXPathEntityProcessor#testMultiValuedFlatten().mjava","commits":[{"id":"c15280d9a17890eec739a62ef903add3fdef206d","date":1255076615,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestXPathEntityProcessor#testMultiValuedFlatten().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testMultiValuedFlatten() throws Exception  {\n    Map entityAttrs = createMap(\"name\", \"e\", \"url\", \"testdata.xml\",\n            XPathEntityProcessor.FOR_EACH, \"/root\");\n    List fields = new ArrayList();\n    fields.add(createMap(\"column\", \"a\", \"xpath\", \"/root/a\" ,\"flatten\",\"true\"));\n    Context c = AbstractDataImportHandlerTest.getContext(null,\n            new VariableResolverImpl(), getDataSource(testXmlFlatten), Context.FULL_DUMP, fields, entityAttrs);\n    XPathEntityProcessor xPathEntityProcessor = new XPathEntityProcessor();\n    xPathEntityProcessor.init(c);\n    Map<String, Object> result = null;\n    while (true) {\n      Map<String, Object> row = xPathEntityProcessor.nextRow();\n      if (row == null)\n        break;\n      result = row;\n    }\n    Assert.assertEquals(\"1B2\", result.get(\"a\"));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestXPathEntityProcessor#testMultiValuedFlatten().mjava","pathOld":"contrib/dataimporthandler/src/test/java/org/apache/solr/handler/dataimport/TestXPathEntityProcessor#testMultiValuedFlatten().mjava","sourceNew":"  @Test\n  public void testMultiValuedFlatten() throws Exception  {\n    Map entityAttrs = createMap(\"name\", \"e\", \"url\", \"testdata.xml\",\n            XPathEntityProcessor.FOR_EACH, \"/root\");\n    List fields = new ArrayList();\n    fields.add(createMap(\"column\", \"a\", \"xpath\", \"/root/a\" ,\"flatten\",\"true\"));\n    Context c = AbstractDataImportHandlerTest.getContext(null,\n            new VariableResolverImpl(), getDataSource(testXmlFlatten), Context.FULL_DUMP, fields, entityAttrs);\n    XPathEntityProcessor xPathEntityProcessor = new XPathEntityProcessor();\n    xPathEntityProcessor.init(c);\n    Map<String, Object> result = null;\n    while (true) {\n      Map<String, Object> row = xPathEntityProcessor.nextRow();\n      if (row == null)\n        break;\n      result = row;\n    }\n    Assert.assertEquals(\"1B2\", result.get(\"a\"));\n  }\n\n","sourceOld":"  @Test\n  public void testMultiValuedFlatten() throws Exception  {\n    Map entityAttrs = createMap(\"name\", \"e\", \"url\", \"testdata.xml\",\n            XPathEntityProcessor.FOR_EACH, \"/root\");\n    List fields = new ArrayList();\n    fields.add(createMap(\"column\", \"a\", \"xpath\", \"/root/a\" ,\"flatten\",\"true\"));\n    Context c = AbstractDataImportHandlerTest.getContext(null,\n            new VariableResolverImpl(), getDataSource(testXmlFlatten), Context.FULL_DUMP, fields, entityAttrs);\n    XPathEntityProcessor xPathEntityProcessor = new XPathEntityProcessor();\n    xPathEntityProcessor.init(c);\n    Map<String, Object> result = null;\n    while (true) {\n      Map<String, Object> row = xPathEntityProcessor.nextRow();\n      if (row == null)\n        break;\n      result = row;\n    }\n    Assert.assertEquals(\"1B2\", result.get(\"a\"));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c15280d9a17890eec739a62ef903add3fdef206d":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["c15280d9a17890eec739a62ef903add3fdef206d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"c15280d9a17890eec739a62ef903add3fdef206d":["ad94625fb8d088209f46650c8097196fec67f00c"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["c15280d9a17890eec739a62ef903add3fdef206d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}