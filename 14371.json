{"path":"lucene/core/src/java/org/apache/lucene/search/FieldComparator#compareValues(T,T).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/FieldComparator#compareValues(T,T).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/FieldComparator#compareValues(T,T).mjava","sourceNew":"  /** Returns -1 if first is less than second.  Default\n   *  impl to assume the type implements Comparable and\n   *  invoke .compareTo; be sure to override this method if\n   *  your FieldComparator's type isn't a Comparable or\n   *  if your values may sometimes be null */\n  @SuppressWarnings(\"unchecked\")\n  public int compareValues(T first, T second) {\n    if (first == null) {\n      if (second == null) {\n        return 0;\n      } else {\n        return -1;\n      }\n    } else if (second == null) {\n      return 1;\n    } else {\n      return ((Comparable<T>) first).compareTo(second);\n    }\n  }\n\n","sourceOld":"  /** Returns -1 if first is less than second.  Default\n   *  impl to assume the type implements Comparable and\n   *  invoke .compareTo; be sure to override this method if\n   *  your FieldComparator's type isn't a Comparable or\n   *  if your values may sometimes be null */\n  @SuppressWarnings(\"unchecked\")\n  public int compareValues(T first, T second) {\n    if (first == null) {\n      if (second == null) {\n        return 0;\n      } else {\n        return -1;\n      }\n    } else if (second == null) {\n      return 1;\n    } else {\n      return ((Comparable<T>) first).compareTo(second);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"901e951cec2e6af4e503209a6721c8834db23279","date":1420556599,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/FieldComparator#compareValues(T,T).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/FieldComparator#compareValues(T,T).mjava","sourceNew":"  /** Returns a negative integer if first is less than second,\n   *  0 if they are equal and a positive integer otherwise. Default\n   *  impl to assume the type implements Comparable and\n   *  invoke .compareTo; be sure to override this method if\n   *  your FieldComparator's type isn't a Comparable or\n   *  if your values may sometimes be null */\n  @SuppressWarnings(\"unchecked\")\n  public int compareValues(T first, T second) {\n    if (first == null) {\n      if (second == null) {\n        return 0;\n      } else {\n        return -1;\n      }\n    } else if (second == null) {\n      return 1;\n    } else {\n      return ((Comparable<T>) first).compareTo(second);\n    }\n  }\n\n","sourceOld":"  /** Returns -1 if first is less than second.  Default\n   *  impl to assume the type implements Comparable and\n   *  invoke .compareTo; be sure to override this method if\n   *  your FieldComparator's type isn't a Comparable or\n   *  if your values may sometimes be null */\n  @SuppressWarnings(\"unchecked\")\n  public int compareValues(T first, T second) {\n    if (first == null) {\n      if (second == null) {\n        return 0;\n      } else {\n        return -1;\n      }\n    } else if (second == null) {\n      return 1;\n    } else {\n      return ((Comparable<T>) first).compareTo(second);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"901e951cec2e6af4e503209a6721c8834db23279":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["901e951cec2e6af4e503209a6721c8834db23279"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["901e951cec2e6af4e503209a6721c8834db23279"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"901e951cec2e6af4e503209a6721c8834db23279":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}