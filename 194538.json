{"path":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermAllGroupsCollector#collect(int).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermAllGroupsCollector#collect(int).mjava","pathOld":"modules/grouping/src/java/org/apache/lucene/search/grouping/term/TermAllGroupsCollector#collect(int).mjava","sourceNew":"  public void collect(int doc) throws IOException {\n    int key = index.getOrd(doc);\n    if (!ordSet.exists(key)) {\n      ordSet.put(key);\n      BytesRef term = key == 0 ? null : index.lookup(key, new BytesRef());\n      groups.add(term);\n    }\n  }\n\n","sourceOld":"  public void collect(int doc) throws IOException {\n    int key = index.getOrd(doc);\n    if (!ordSet.exists(key)) {\n      ordSet.put(key);\n      BytesRef term = key == 0 ? null : index.lookup(key, new BytesRef());\n      groups.add(term);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"99bfa1bcb7cecbfe48118f6e71f7ccc7a9247afc","date":1346106609,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermAllGroupsCollector#collect(int).mjava","pathOld":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermAllGroupsCollector#collect(int).mjava","sourceNew":"  @Override\n  public void collect(int doc) throws IOException {\n    int key = index.getOrd(doc);\n    if (!ordSet.exists(key)) {\n      ordSet.put(key);\n      BytesRef term = key == 0 ? null : index.lookup(key, new BytesRef());\n      groups.add(term);\n    }\n  }\n\n","sourceOld":"  public void collect(int doc) throws IOException {\n    int key = index.getOrd(doc);\n    if (!ordSet.exists(key)) {\n      ordSet.put(key);\n      BytesRef term = key == 0 ? null : index.lookup(key, new BytesRef());\n      groups.add(term);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"05a14b2611ead08655a2b2bdc61632eb31316e57","date":1346366621,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermAllGroupsCollector#collect(int).mjava","pathOld":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermAllGroupsCollector#collect(int).mjava","sourceNew":"  @Override\n  public void collect(int doc) throws IOException {\n    int key = index.getOrd(doc);\n    if (!ordSet.exists(key)) {\n      ordSet.put(key);\n      BytesRef term = key == 0 ? null : index.lookup(key, new BytesRef());\n      groups.add(term);\n    }\n  }\n\n","sourceOld":"  public void collect(int doc) throws IOException {\n    int key = index.getOrd(doc);\n    if (!ordSet.exists(key)) {\n      ordSet.put(key);\n      BytesRef term = key == 0 ? null : index.lookup(key, new BytesRef());\n      groups.add(term);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"854f97cd3613b9579fba83755c80b697e2f3993f","date":1353527621,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermAllGroupsCollector#collect(int).mjava","pathOld":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermAllGroupsCollector#collect(int).mjava","sourceNew":"  @Override\n  public void collect(int doc) throws IOException {\n    int key = index.getOrd(doc);\n    if (!ordSet.exists(key)) {\n      ordSet.put(key);\n      BytesRef term = key == -1 ? null : index.lookup(key, new BytesRef());\n      groups.add(term);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void collect(int doc) throws IOException {\n    int key = index.getOrd(doc);\n    if (!ordSet.exists(key)) {\n      ordSet.put(key);\n      BytesRef term = key == 0 ? null : index.lookup(key, new BytesRef());\n      groups.add(term);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9d7e5f3aa5935964617824d1f9b2599ddb334464","date":1353762831,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermAllGroupsCollector#collect(int).mjava","pathOld":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermAllGroupsCollector#collect(int).mjava","sourceNew":"  @Override\n  public void collect(int doc) throws IOException {\n    int key = index.getOrd(doc);\n    if (!ordSet.exists(key)) {\n      ordSet.put(key);\n      BytesRef term;\n      if (key == -1) {\n        term = null;\n      } else {\n        term =  new BytesRef();\n        index.lookupOrd(key, term);\n      }\n      groups.add(term);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void collect(int doc) throws IOException {\n    int key = index.getOrd(doc);\n    if (!ordSet.exists(key)) {\n      ordSet.put(key);\n      BytesRef term = key == -1 ? null : index.lookup(key, new BytesRef());\n      groups.add(term);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d4d69c535930b5cce125cff868d40f6373dc27d4","date":1360270101,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermAllGroupsCollector#collect(int).mjava","pathOld":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermAllGroupsCollector#collect(int).mjava","sourceNew":"  @Override\n  public void collect(int doc) throws IOException {\n    int key = index.getOrd(doc);\n    if (!ordSet.exists(key)) {\n      ordSet.put(key);\n      BytesRef term;\n      if (key == -1) {\n        term = null;\n      } else {\n        term =  new BytesRef();\n        index.lookupOrd(key, term);\n      }\n      groups.add(term);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void collect(int doc) throws IOException {\n    int key = index.getOrd(doc);\n    if (!ordSet.exists(key)) {\n      ordSet.put(key);\n      BytesRef term = key == 0 ? null : index.lookup(key, new BytesRef());\n      groups.add(term);\n    }\n  }\n\n","bugFix":["bf1e1891cb380e69377eba26f7344f6108dcfca6"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"53fc2f4c5ce4f2053be3d5f5d14d79129ebb4bbf","date":1401983689,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermAllGroupsCollector#collect(int).mjava","pathOld":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermAllGroupsCollector#collect(int).mjava","sourceNew":"  @Override\n  public void collect(int doc) throws IOException {\n    int key = index.getOrd(doc);\n    if (!ordSet.exists(key)) {\n      ordSet.put(key);\n      final BytesRef term;\n      if (key == -1) {\n        term = null;\n      } else {\n        term = BytesRef.deepCopyOf(index.lookupOrd(key));\n      }\n      groups.add(term);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void collect(int doc) throws IOException {\n    int key = index.getOrd(doc);\n    if (!ordSet.exists(key)) {\n      ordSet.put(key);\n      BytesRef term;\n      if (key == -1) {\n        term = null;\n      } else {\n        term =  new BytesRef();\n        index.lookupOrd(key, term);\n      }\n      groups.add(term);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6652c74b2358a0b13223817a6a793bf1c9d0749d","date":1474465301,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermAllGroupsCollector#collect(int).mjava","pathOld":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermAllGroupsCollector#collect(int).mjava","sourceNew":"  @Override\n  public void collect(int doc) throws IOException {\n    if (doc > index.docID()) {\n      index.advance(doc);\n    }\n    int key;\n    if (doc == index.docID()) {\n      key = index.ordValue();\n    } else {\n      key = -1;\n    }\n    if (!ordSet.exists(key)) {\n      ordSet.put(key);\n      final BytesRef term;\n      if (key == -1) {\n        term = null;\n      } else {\n        term = BytesRef.deepCopyOf(index.lookupOrd(key));\n      }\n      groups.add(term);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void collect(int doc) throws IOException {\n    int key = index.getOrd(doc);\n    if (!ordSet.exists(key)) {\n      ordSet.put(key);\n      final BytesRef term;\n      if (key == -1) {\n        term = null;\n      } else {\n        term = BytesRef.deepCopyOf(index.lookupOrd(key));\n      }\n      groups.add(term);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17e5da53e4e5bd659e22add9bba1cfa222e7e30d","date":1475435902,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermAllGroupsCollector#collect(int).mjava","pathOld":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermAllGroupsCollector#collect(int).mjava","sourceNew":"  @Override\n  public void collect(int doc) throws IOException {\n    if (doc > index.docID()) {\n      index.advance(doc);\n    }\n    int key;\n    if (doc == index.docID()) {\n      key = index.ordValue();\n    } else {\n      key = -1;\n    }\n    if (!ordSet.exists(key)) {\n      ordSet.put(key);\n      final BytesRef term;\n      if (key == -1) {\n        term = null;\n      } else {\n        term = BytesRef.deepCopyOf(index.lookupOrd(key));\n      }\n      groups.add(term);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void collect(int doc) throws IOException {\n    int key = index.getOrd(doc);\n    if (!ordSet.exists(key)) {\n      ordSet.put(key);\n      final BytesRef term;\n      if (key == -1) {\n        term = null;\n      } else {\n        term = BytesRef.deepCopyOf(index.lookupOrd(key));\n      }\n      groups.add(term);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermAllGroupsCollector#collect(int).mjava","pathOld":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermAllGroupsCollector#collect(int).mjava","sourceNew":"  @Override\n  public void collect(int doc) throws IOException {\n    if (doc > index.docID()) {\n      index.advance(doc);\n    }\n    int key;\n    if (doc == index.docID()) {\n      key = index.ordValue();\n    } else {\n      key = -1;\n    }\n    if (!ordSet.exists(key)) {\n      ordSet.put(key);\n      final BytesRef term;\n      if (key == -1) {\n        term = null;\n      } else {\n        term = BytesRef.deepCopyOf(index.lookupOrd(key));\n      }\n      groups.add(term);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void collect(int doc) throws IOException {\n    int key = index.getOrd(doc);\n    if (!ordSet.exists(key)) {\n      ordSet.put(key);\n      final BytesRef term;\n      if (key == -1) {\n        term = null;\n      } else {\n        term = BytesRef.deepCopyOf(index.lookupOrd(key));\n      }\n      groups.add(term);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7ae958a739da1866696f442384393ba2f13e33e5","date":1491819018,"type":4,"author":"Alan Woodward","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermAllGroupsCollector#collect(int).mjava","sourceNew":null,"sourceOld":"  @Override\n  public void collect(int doc) throws IOException {\n    if (doc > index.docID()) {\n      index.advance(doc);\n    }\n    int key;\n    if (doc == index.docID()) {\n      key = index.ordValue();\n    } else {\n      key = -1;\n    }\n    if (!ordSet.exists(key)) {\n      ordSet.put(key);\n      final BytesRef term;\n      if (key == -1) {\n        term = null;\n      } else {\n        term = BytesRef.deepCopyOf(index.lookupOrd(key));\n      }\n      groups.add(term);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54ca69905c5d9d1529286f06ab1d12c68f6c13cb","date":1492683554,"type":4,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/grouping/src/java/org/apache/lucene/search/grouping/term/TermAllGroupsCollector#collect(int).mjava","sourceNew":null,"sourceOld":"  @Override\n  public void collect(int doc) throws IOException {\n    if (doc > index.docID()) {\n      index.advance(doc);\n    }\n    int key;\n    if (doc == index.docID()) {\n      key = index.ordValue();\n    } else {\n      key = -1;\n    }\n    if (!ordSet.exists(key)) {\n      ordSet.put(key);\n      final BytesRef term;\n      if (key == -1) {\n        term = null;\n      } else {\n        term = BytesRef.deepCopyOf(index.lookupOrd(key));\n      }\n      groups.add(term);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"99bfa1bcb7cecbfe48118f6e71f7ccc7a9247afc":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"53fc2f4c5ce4f2053be3d5f5d14d79129ebb4bbf":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"05a14b2611ead08655a2b2bdc61632eb31316e57":["b89678825b68eccaf09e6ab71675fc0b0af1e099","99bfa1bcb7cecbfe48118f6e71f7ccc7a9247afc"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["53fc2f4c5ce4f2053be3d5f5d14d79129ebb4bbf","17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["99bfa1bcb7cecbfe48118f6e71f7ccc7a9247afc","9d7e5f3aa5935964617824d1f9b2599ddb334464"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["53fc2f4c5ce4f2053be3d5f5d14d79129ebb4bbf","6652c74b2358a0b13223817a6a793bf1c9d0749d"],"6652c74b2358a0b13223817a6a793bf1c9d0749d":["53fc2f4c5ce4f2053be3d5f5d14d79129ebb4bbf"],"9d7e5f3aa5935964617824d1f9b2599ddb334464":["854f97cd3613b9579fba83755c80b697e2f3993f"],"854f97cd3613b9579fba83755c80b697e2f3993f":["99bfa1bcb7cecbfe48118f6e71f7ccc7a9247afc"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7ae958a739da1866696f442384393ba2f13e33e5"],"7ae958a739da1866696f442384393ba2f13e33e5":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"]},"commit2Childs":{"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":[],"99bfa1bcb7cecbfe48118f6e71f7ccc7a9247afc":["05a14b2611ead08655a2b2bdc61632eb31316e57","d4d69c535930b5cce125cff868d40f6373dc27d4","854f97cd3613b9579fba83755c80b697e2f3993f"],"53fc2f4c5ce4f2053be3d5f5d14d79129ebb4bbf":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","17e5da53e4e5bd659e22add9bba1cfa222e7e30d","6652c74b2358a0b13223817a6a793bf1c9d0749d"],"05a14b2611ead08655a2b2bdc61632eb31316e57":[],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["99bfa1bcb7cecbfe48118f6e71f7ccc7a9247afc","05a14b2611ead08655a2b2bdc61632eb31316e57"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["53fc2f4c5ce4f2053be3d5f5d14d79129ebb4bbf"],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","7ae958a739da1866696f442384393ba2f13e33e5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"6652c74b2358a0b13223817a6a793bf1c9d0749d":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"9d7e5f3aa5935964617824d1f9b2599ddb334464":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"854f97cd3613b9579fba83755c80b697e2f3993f":["9d7e5f3aa5935964617824d1f9b2599ddb334464"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"7ae958a739da1866696f442384393ba2f13e33e5":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","05a14b2611ead08655a2b2bdc61632eb31316e57","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}