{"path":"src/test/org/apache/lucene/index/TestMultiLevelSkipList.PayloadFilter#incrementToken().mjava","commits":[{"id":"74a5e7f20b4a444da9df3b2c0f331fa7a1f64223","date":1227051709,"type":0,"author":"Michael Busch","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestMultiLevelSkipList.PayloadFilter#incrementToken().mjava","pathOld":"/dev/null","sourceNew":"    public boolean incrementToken() throws IOException {\n      boolean hasNext = input.incrementToken();\n      if (hasNext) {\n        payloadAtt.setPayload(new Payload(new byte[] { (byte) count++ }));\n      } \n      return hasNext;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1326054a8d3aa66382d49decc7f330955c9c6f71","date":1257386139,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestMultiLevelSkipList.PayloadFilter#incrementToken().mjava","pathOld":"src/test/org/apache/lucene/index/TestMultiLevelSkipList.PayloadFilter#incrementToken().mjava","sourceNew":"    @Override\n    public boolean incrementToken() throws IOException {\n      boolean hasNext = input.incrementToken();\n      if (hasNext) {\n        payloadAtt.setPayload(new Payload(new byte[] { (byte) count++ }));\n      } \n      return hasNext;\n    }\n\n","sourceOld":"    public boolean incrementToken() throws IOException {\n      boolean hasNext = input.incrementToken();\n      if (hasNext) {\n        payloadAtt.setPayload(new Payload(new byte[] { (byte) count++ }));\n      } \n      return hasNext;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestMultiLevelSkipList.PayloadFilter#incrementToken().mjava","pathOld":"src/test/org/apache/lucene/index/TestMultiLevelSkipList.PayloadFilter#incrementToken().mjava","sourceNew":"    @Override\n    public boolean incrementToken() throws IOException {\n      boolean hasNext = input.incrementToken();\n      if (hasNext) {\n        payloadAtt.setPayload(new Payload(new byte[] { (byte) count++ }));\n      } \n      return hasNext;\n    }\n\n","sourceOld":"    @Override\n    public boolean incrementToken() throws IOException {\n      boolean hasNext = input.incrementToken();\n      if (hasNext) {\n        payloadAtt.setPayload(new Payload(new byte[] { (byte) count++ }));\n      } \n      return hasNext;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1326054a8d3aa66382d49decc7f330955c9c6f71":["74a5e7f20b4a444da9df3b2c0f331fa7a1f64223"],"74a5e7f20b4a444da9df3b2c0f331fa7a1f64223":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["1326054a8d3aa66382d49decc7f330955c9c6f71"]},"commit2Childs":{"1326054a8d3aa66382d49decc7f330955c9c6f71":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"74a5e7f20b4a444da9df3b2c0f331fa7a1f64223":["1326054a8d3aa66382d49decc7f330955c9c6f71"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["74a5e7f20b4a444da9df3b2c0f331fa7a1f64223"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}