{"path":"lucene/core/src/java/org/apache/lucene/search/spans/SpanTermQuery#SpanTermQuery(Term,TermContext).mjava","commits":[{"id":"d4b6308fa66dc96de36abfae5d3e7c92c805e227","date":1432916588,"type":0,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/spans/SpanTermQuery#SpanTermQuery(Term,TermContext).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Expert: Construct a SpanTermQuery matching the named term's spans, using\n   * the provided TermContext\n   */\n  public SpanTermQuery(Term term, TermContext context) {\n    this.term = Objects.requireNonNull(term);\n    this.termContext = context;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a6e9f769521480a623f897c0d59089b919fa4239","date":1515161835,"type":5,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/spans/SpanTermQuery#SpanTermQuery(Term,TermStates).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/spans/SpanTermQuery#SpanTermQuery(Term,TermContext).mjava","sourceNew":"  /**\n   * Expert: Construct a SpanTermQuery matching the named term's spans, using\n   * the provided TermStates\n   */\n  public SpanTermQuery(Term term, TermStates termStates) {\n    this.term = Objects.requireNonNull(term);\n    this.termStates = termStates;\n  }\n\n","sourceOld":"  /**\n   * Expert: Construct a SpanTermQuery matching the named term's spans, using\n   * the provided TermContext\n   */\n  public SpanTermQuery(Term term, TermContext context) {\n    this.term = Objects.requireNonNull(term);\n    this.termContext = context;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b94236357aaa22b76c10629851fe4e376e0cea82","date":1516710914,"type":4,"author":"Karl Wright","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/search/spans/SpanTermQuery#SpanTermQuery(Term,TermContext).mjava","sourceNew":null,"sourceOld":"  /**\n   * Expert: Construct a SpanTermQuery matching the named term's spans, using\n   * the provided TermContext\n   */\n  public SpanTermQuery(Term term, TermContext context) {\n    this.term = Objects.requireNonNull(term);\n    this.termContext = context;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b94236357aaa22b76c10629851fe4e376e0cea82":["d4b6308fa66dc96de36abfae5d3e7c92c805e227","a6e9f769521480a623f897c0d59089b919fa4239"],"a6e9f769521480a623f897c0d59089b919fa4239":["d4b6308fa66dc96de36abfae5d3e7c92c805e227"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b94236357aaa22b76c10629851fe4e376e0cea82"],"d4b6308fa66dc96de36abfae5d3e7c92c805e227":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"b94236357aaa22b76c10629851fe4e376e0cea82":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a6e9f769521480a623f897c0d59089b919fa4239":["b94236357aaa22b76c10629851fe4e376e0cea82"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d4b6308fa66dc96de36abfae5d3e7c92c805e227"],"d4b6308fa66dc96de36abfae5d3e7c92c805e227":["b94236357aaa22b76c10629851fe4e376e0cea82","a6e9f769521480a623f897c0d59089b919fa4239"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}