{"path":"src/java/org/apache/solr/search/function/distance/SquaredEuclideanFunction#distance(int,DocValues,DocValues).mjava","commits":[{"id":"abec2fd822be07fc74ef5ba3609b9c5625a87d6d","date":1261659802,"type":0,"author":"Grant Ingersoll","isMerge":false,"pathNew":"src/java/org/apache/solr/search/function/distance/SquaredEuclideanFunction#distance(int,DocValues,DocValues).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * @param doc The doc to score\n   */\n  protected double distance(int doc, DocValues dv1, DocValues dv2) {\n    double result = 0;\n    double [] vals1 = new double[source1.dimension()];\n    double [] vals2 = new double[source1.dimension()];\n    dv1.doubleVal(doc, vals1);\n    dv2.doubleVal(doc, vals2);\n    for (int i = 0; i < vals1.length; i++) {\n        double v = vals1[i] - vals2[i];\n        result += v * v;\n      }\n    return result;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"705f33e5fdd5faefb06e318ed968763f66e8a2b0","date":1262624396,"type":3,"author":"Grant Ingersoll","isMerge":false,"pathNew":"src/java/org/apache/solr/search/function/distance/SquaredEuclideanFunction#distance(int,DocValues,DocValues).mjava","pathOld":"src/java/org/apache/solr/search/function/distance/SquaredEuclideanFunction#distance(int,DocValues,DocValues).mjava","sourceNew":"  /**\n   * @param doc The doc to score\n   */\n  protected double distance(int doc, DocValues dv1, DocValues dv2) {\n\n    double[] vals1 = new double[source1.dimension()];\n    double[] vals2 = new double[source1.dimension()];\n    dv1.doubleVal(doc, vals1);\n    dv2.doubleVal(doc, vals2);\n\n    return DistanceUtils.squaredEuclideanDistance(vals1, vals2);\n  }\n\n","sourceOld":"  /**\n   * @param doc The doc to score\n   */\n  protected double distance(int doc, DocValues dv1, DocValues dv2) {\n    double result = 0;\n    double [] vals1 = new double[source1.dimension()];\n    double [] vals2 = new double[source1.dimension()];\n    dv1.doubleVal(doc, vals1);\n    dv2.doubleVal(doc, vals2);\n    for (int i = 0; i < vals1.length; i++) {\n        double v = vals1[i] - vals2[i];\n        result += v * v;\n      }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/search/function/distance/SquaredEuclideanFunction#distance(int,DocValues,DocValues).mjava","pathOld":"src/java/org/apache/solr/search/function/distance/SquaredEuclideanFunction#distance(int,DocValues,DocValues).mjava","sourceNew":"  /**\n   * @param doc The doc to score\n   */\n  protected double distance(int doc, DocValues dv1, DocValues dv2) {\n\n    double[] vals1 = new double[source1.dimension()];\n    double[] vals2 = new double[source1.dimension()];\n    dv1.doubleVal(doc, vals1);\n    dv2.doubleVal(doc, vals2);\n\n    return DistanceUtils.squaredEuclideanDistance(vals1, vals2);\n  }\n\n","sourceOld":"  /**\n   * @param doc The doc to score\n   */\n  protected double distance(int doc, DocValues dv1, DocValues dv2) {\n\n    double[] vals1 = new double[source1.dimension()];\n    double[] vals2 = new double[source1.dimension()];\n    dv1.doubleVal(doc, vals1);\n    dv2.doubleVal(doc, vals2);\n\n    return DistanceUtils.squaredEuclideanDistance(vals1, vals2);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"abec2fd822be07fc74ef5ba3609b9c5625a87d6d":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"705f33e5fdd5faefb06e318ed968763f66e8a2b0":["abec2fd822be07fc74ef5ba3609b9c5625a87d6d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["705f33e5fdd5faefb06e318ed968763f66e8a2b0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"abec2fd822be07fc74ef5ba3609b9c5625a87d6d":["705f33e5fdd5faefb06e318ed968763f66e8a2b0"],"705f33e5fdd5faefb06e318ed968763f66e8a2b0":["ad94625fb8d088209f46650c8097196fec67f00c"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["abec2fd822be07fc74ef5ba3609b9c5625a87d6d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}