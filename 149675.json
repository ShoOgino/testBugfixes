{"path":"src/java/org/apache/solr/schema/RandomSortField#hash(int).mjava","commits":[{"id":"8840160499b9caa7faa044ba4b0d02dc1326557f","date":1182303498,"type":0,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/schema/RandomSortField#hash(int).mjava","pathOld":"/dev/null","sourceNew":"  // Thomas Wang's hash32shift function, from http://www.cris.com/~Ttwang/tech/inthash.htm\n  // slightly modified to return only positive integers.\n  private static int hash(int key) {\n    key = ~key + (key << 15); // key = (key << 15) - key - 1;\n    key = key ^ (key >>> 12);\n    key = key + (key << 2);\n    key = key ^ (key >>> 4);\n    key = key * 2057; // key = (key + (key << 3)) + (key << 11);\n    key = key ^ (key >>> 16);\n    return key >>> 1; \n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/schema/RandomSortField#hash(int).mjava","pathOld":"src/java/org/apache/solr/schema/RandomSortField#hash(int).mjava","sourceNew":"  // Thomas Wang's hash32shift function, from http://www.cris.com/~Ttwang/tech/inthash.htm\n  // slightly modified to return only positive integers.\n  private static int hash(int key) {\n    key = ~key + (key << 15); // key = (key << 15) - key - 1;\n    key = key ^ (key >>> 12);\n    key = key + (key << 2);\n    key = key ^ (key >>> 4);\n    key = key * 2057; // key = (key + (key << 3)) + (key << 11);\n    key = key ^ (key >>> 16);\n    return key >>> 1; \n  }\n\n","sourceOld":"  // Thomas Wang's hash32shift function, from http://www.cris.com/~Ttwang/tech/inthash.htm\n  // slightly modified to return only positive integers.\n  private static int hash(int key) {\n    key = ~key + (key << 15); // key = (key << 15) - key - 1;\n    key = key ^ (key >>> 12);\n    key = key + (key << 2);\n    key = key ^ (key >>> 4);\n    key = key * 2057; // key = (key + (key << 3)) + (key << 11);\n    key = key ^ (key >>> 16);\n    return key >>> 1; \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["8840160499b9caa7faa044ba4b0d02dc1326557f"],"8840160499b9caa7faa044ba4b0d02dc1326557f":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["8840160499b9caa7faa044ba4b0d02dc1326557f"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"8840160499b9caa7faa044ba4b0d02dc1326557f":["ad94625fb8d088209f46650c8097196fec67f00c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}