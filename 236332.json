{"path":"lucene/src/java/org/apache/lucene/index/SegmentInfo#clone().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentInfo#clone().mjava","pathOld":"src/java/org/apache/lucene/index/SegmentInfo#clone().mjava","sourceNew":"  @Override\n  public Object clone () {\n    SegmentInfo si = new SegmentInfo(name, docCount, dir);\n    si.isCompoundFile = isCompoundFile;\n    si.delGen = delGen;\n    si.delCount = delCount;\n    si.hasProx = hasProx;\n    si.preLockless = preLockless;\n    si.hasSingleNormFile = hasSingleNormFile;\n    si.diagnostics = new HashMap<String, String>(diagnostics);\n    if (normGen != null) {\n      si.normGen = normGen.clone();\n    }\n    si.docStoreOffset = docStoreOffset;\n    si.docStoreSegment = docStoreSegment;\n    si.docStoreIsCompoundFile = docStoreIsCompoundFile;\n    return si;\n  }\n\n","sourceOld":"  @Override\n  public Object clone () {\n    SegmentInfo si = new SegmentInfo(name, docCount, dir);\n    si.isCompoundFile = isCompoundFile;\n    si.delGen = delGen;\n    si.delCount = delCount;\n    si.hasProx = hasProx;\n    si.preLockless = preLockless;\n    si.hasSingleNormFile = hasSingleNormFile;\n    si.diagnostics = new HashMap<String, String>(diagnostics);\n    if (normGen != null) {\n      si.normGen = normGen.clone();\n    }\n    si.docStoreOffset = docStoreOffset;\n    si.docStoreSegment = docStoreSegment;\n    si.docStoreIsCompoundFile = docStoreIsCompoundFile;\n    return si;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"955c32f886db6f6356c9fcdea6b1f1cb4effda24","date":1270581567,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentInfo#clone().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentInfo#clone().mjava","sourceNew":"  @Override\n  public Object clone () {\n    SegmentInfo si = new SegmentInfo(name, docCount, dir, codec);\n    si.isCompoundFile = isCompoundFile;\n    si.delGen = delGen;\n    si.delCount = delCount;\n    si.hasProx = hasProx;\n    si.preLockless = preLockless;\n    si.hasSingleNormFile = hasSingleNormFile;\n    si.diagnostics = new HashMap<String, String>(diagnostics);\n    if (normGen != null) {\n      si.normGen = normGen.clone();\n    }\n    si.docStoreOffset = docStoreOffset;\n    si.docStoreSegment = docStoreSegment;\n    si.docStoreIsCompoundFile = docStoreIsCompoundFile;\n    si.codec = codec;\n    return si;\n  }\n\n","sourceOld":"  @Override\n  public Object clone () {\n    SegmentInfo si = new SegmentInfo(name, docCount, dir);\n    si.isCompoundFile = isCompoundFile;\n    si.delGen = delGen;\n    si.delCount = delCount;\n    si.hasProx = hasProx;\n    si.preLockless = preLockless;\n    si.hasSingleNormFile = hasSingleNormFile;\n    si.diagnostics = new HashMap<String, String>(diagnostics);\n    if (normGen != null) {\n      si.normGen = normGen.clone();\n    }\n    si.docStoreOffset = docStoreOffset;\n    si.docStoreSegment = docStoreSegment;\n    si.docStoreIsCompoundFile = docStoreIsCompoundFile;\n    return si;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6267e1ce56c2eec111425690cd04e251b6f14952","date":1275222352,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentInfo#clone().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentInfo#clone().mjava","sourceNew":"  @Override\n  public Object clone() {\n    SegmentInfo si = new SegmentInfo(name, docCount, dir, isCompoundFile, docStoreOffset, docStoreSegment, docStoreIsCompoundFile, hasProx, codec);\n    si.isCompoundFile = isCompoundFile;\n    si.delGen = delGen;\n    si.delCount = delCount;\n    si.hasProx = hasProx;\n    si.diagnostics = new HashMap<String, String>(diagnostics);\n    if (normGen != null) {\n      si.normGen = normGen.clone();\n    }\n    si.docStoreOffset = docStoreOffset;\n    si.docStoreSegment = docStoreSegment;\n    si.docStoreIsCompoundFile = docStoreIsCompoundFile;\n    si.codec = codec;\n    return si;\n  }\n\n","sourceOld":"  @Override\n  public Object clone () {\n    SegmentInfo si = new SegmentInfo(name, docCount, dir, codec);\n    si.isCompoundFile = isCompoundFile;\n    si.delGen = delGen;\n    si.delCount = delCount;\n    si.hasProx = hasProx;\n    si.preLockless = preLockless;\n    si.hasSingleNormFile = hasSingleNormFile;\n    si.diagnostics = new HashMap<String, String>(diagnostics);\n    if (normGen != null) {\n      si.normGen = normGen.clone();\n    }\n    si.docStoreOffset = docStoreOffset;\n    si.docStoreSegment = docStoreSegment;\n    si.docStoreIsCompoundFile = docStoreIsCompoundFile;\n    si.codec = codec;\n    return si;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a493e6d0c3ad86bd55c0a1360d110142e948f2bd","date":1289406991,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentInfo#clone().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentInfo#clone().mjava","sourceNew":"  @Override\n  public Object clone() {\n    SegmentInfo si = new SegmentInfo(name, docCount, dir, isCompoundFile, docStoreOffset, docStoreSegment, docStoreIsCompoundFile, hasProx, segmentCodecs);\n    si.isCompoundFile = isCompoundFile;\n    si.delGen = delGen;\n    si.delCount = delCount;\n    si.hasProx = hasProx;\n    si.diagnostics = new HashMap<String, String>(diagnostics);\n    if (normGen != null) {\n      si.normGen = normGen.clone();\n    }\n    si.docStoreOffset = docStoreOffset;\n    si.docStoreSegment = docStoreSegment;\n    si.docStoreIsCompoundFile = docStoreIsCompoundFile;\n    return si;\n  }\n\n","sourceOld":"  @Override\n  public Object clone() {\n    SegmentInfo si = new SegmentInfo(name, docCount, dir, isCompoundFile, docStoreOffset, docStoreSegment, docStoreIsCompoundFile, hasProx, codec);\n    si.isCompoundFile = isCompoundFile;\n    si.delGen = delGen;\n    si.delCount = delCount;\n    si.hasProx = hasProx;\n    si.diagnostics = new HashMap<String, String>(diagnostics);\n    if (normGen != null) {\n      si.normGen = normGen.clone();\n    }\n    si.docStoreOffset = docStoreOffset;\n    si.docStoreSegment = docStoreSegment;\n    si.docStoreIsCompoundFile = docStoreIsCompoundFile;\n    si.codec = codec;\n    return si;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"85a883878c0af761245ab048babc63d099f835f3","date":1289553330,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentInfo#clone().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentInfo#clone().mjava","sourceNew":"  @Override\n  public Object clone() {\n    SegmentInfo si = new SegmentInfo(name, docCount, dir, isCompoundFile, docStoreOffset, docStoreSegment, docStoreIsCompoundFile, hasProx, segmentCodecs);\n    si.isCompoundFile = isCompoundFile;\n    si.delGen = delGen;\n    si.delCount = delCount;\n    si.hasProx = hasProx;\n    si.diagnostics = new HashMap<String, String>(diagnostics);\n    if (normGen != null) {\n      si.normGen = normGen.clone();\n    }\n    si.docStoreOffset = docStoreOffset;\n    si.docStoreSegment = docStoreSegment;\n    si.docStoreIsCompoundFile = docStoreIsCompoundFile;\n    return si;\n  }\n\n","sourceOld":"  @Override\n  public Object clone() {\n    SegmentInfo si = new SegmentInfo(name, docCount, dir, isCompoundFile, docStoreOffset, docStoreSegment, docStoreIsCompoundFile, hasProx, codec);\n    si.isCompoundFile = isCompoundFile;\n    si.delGen = delGen;\n    si.delCount = delCount;\n    si.hasProx = hasProx;\n    si.diagnostics = new HashMap<String, String>(diagnostics);\n    if (normGen != null) {\n      si.normGen = normGen.clone();\n    }\n    si.docStoreOffset = docStoreOffset;\n    si.docStoreSegment = docStoreSegment;\n    si.docStoreIsCompoundFile = docStoreIsCompoundFile;\n    si.codec = codec;\n    return si;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7e1cbd7e289dc1243c7a59e1a83d078163a147fe","date":1292268032,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentInfo#clone().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentInfo#clone().mjava","sourceNew":"  @Override\n  public Object clone() {\n    SegmentInfo si = new SegmentInfo(name, docCount, dir, isCompoundFile, docStoreOffset, docStoreSegment, docStoreIsCompoundFile, hasProx, segmentCodecs, false);\n    si.delGen = delGen;\n    si.delCount = delCount;\n    si.diagnostics = new HashMap<String, String>(diagnostics);\n    if (normGen != null) {\n      si.normGen = normGen.clone();\n    }\n    si.hasVectors = hasVectors;\n    return si;\n  }\n\n","sourceOld":"  @Override\n  public Object clone() {\n    SegmentInfo si = new SegmentInfo(name, docCount, dir, isCompoundFile, docStoreOffset, docStoreSegment, docStoreIsCompoundFile, hasProx, segmentCodecs);\n    si.isCompoundFile = isCompoundFile;\n    si.delGen = delGen;\n    si.delCount = delCount;\n    si.hasProx = hasProx;\n    si.diagnostics = new HashMap<String, String>(diagnostics);\n    if (normGen != null) {\n      si.normGen = normGen.clone();\n    }\n    si.docStoreOffset = docStoreOffset;\n    si.docStoreSegment = docStoreSegment;\n    si.docStoreIsCompoundFile = docStoreIsCompoundFile;\n    return si;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4948bc5d29211f0c9b5ccc31b2632cdd27066ea5","date":1292695408,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentInfo#clone().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentInfo#clone().mjava","sourceNew":"  @Override\n  public Object clone() {\n    SegmentInfo si = new SegmentInfo(name, docCount, dir, isCompoundFile, hasProx, segmentCodecs, false);\n    si.docStoreOffset = docStoreOffset;\n    si.docStoreSegment = docStoreSegment;\n    si.docStoreIsCompoundFile = docStoreIsCompoundFile;\n    si.delGen = delGen;\n    si.delCount = delCount;\n    si.diagnostics = new HashMap<String, String>(diagnostics);\n    if (normGen != null) {\n      si.normGen = normGen.clone();\n    }\n    si.hasVectors = hasVectors;\n    return si;\n  }\n\n","sourceOld":"  @Override\n  public Object clone() {\n    SegmentInfo si = new SegmentInfo(name, docCount, dir, isCompoundFile, docStoreOffset, docStoreSegment, docStoreIsCompoundFile, hasProx, segmentCodecs, false);\n    si.delGen = delGen;\n    si.delCount = delCount;\n    si.diagnostics = new HashMap<String, String>(diagnostics);\n    if (normGen != null) {\n      si.normGen = normGen.clone();\n    }\n    si.hasVectors = hasVectors;\n    return si;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab5cb6a74aefb78aa0569857970b9151dfe2e787","date":1292842407,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentInfo#clone().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentInfo#clone().mjava","sourceNew":"  @Override\n  public Object clone() {\n    SegmentInfo si = new SegmentInfo(name, docCount, dir, isCompoundFile, hasProx, segmentCodecs, false);\n    si.docStoreOffset = docStoreOffset;\n    si.docStoreSegment = docStoreSegment;\n    si.docStoreIsCompoundFile = docStoreIsCompoundFile;\n    si.delGen = delGen;\n    si.delCount = delCount;\n    si.diagnostics = new HashMap<String, String>(diagnostics);\n    if (normGen != null) {\n      si.normGen = normGen.clone();\n    }\n    si.hasVectors = hasVectors;\n    return si;\n  }\n\n","sourceOld":"  @Override\n  public Object clone() {\n    SegmentInfo si = new SegmentInfo(name, docCount, dir, isCompoundFile, docStoreOffset, docStoreSegment, docStoreIsCompoundFile, hasProx, segmentCodecs);\n    si.isCompoundFile = isCompoundFile;\n    si.delGen = delGen;\n    si.delCount = delCount;\n    si.hasProx = hasProx;\n    si.diagnostics = new HashMap<String, String>(diagnostics);\n    if (normGen != null) {\n      si.normGen = normGen.clone();\n    }\n    si.docStoreOffset = docStoreOffset;\n    si.docStoreSegment = docStoreSegment;\n    si.docStoreIsCompoundFile = docStoreIsCompoundFile;\n    return si;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentInfo#clone().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentInfo#clone().mjava","sourceNew":"  @Override\n  public Object clone() {\n    SegmentInfo si = new SegmentInfo(name, docCount, dir, isCompoundFile, hasProx, segmentCodecs, false);\n    si.docStoreOffset = docStoreOffset;\n    si.docStoreSegment = docStoreSegment;\n    si.docStoreIsCompoundFile = docStoreIsCompoundFile;\n    si.delGen = delGen;\n    si.delCount = delCount;\n    si.diagnostics = new HashMap<String, String>(diagnostics);\n    if (normGen != null) {\n      si.normGen = normGen.clone();\n    }\n    si.hasVectors = hasVectors;\n    return si;\n  }\n\n","sourceOld":"  @Override\n  public Object clone() {\n    SegmentInfo si = new SegmentInfo(name, docCount, dir, isCompoundFile, docStoreOffset, docStoreSegment, docStoreIsCompoundFile, hasProx, codec);\n    si.isCompoundFile = isCompoundFile;\n    si.delGen = delGen;\n    si.delCount = delCount;\n    si.hasProx = hasProx;\n    si.diagnostics = new HashMap<String, String>(diagnostics);\n    if (normGen != null) {\n      si.normGen = normGen.clone();\n    }\n    si.docStoreOffset = docStoreOffset;\n    si.docStoreSegment = docStoreSegment;\n    si.docStoreIsCompoundFile = docStoreIsCompoundFile;\n    si.codec = codec;\n    return si;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b9dc373b96fc96e6300e2f5af947f6998e6aa6a6","date":1295759448,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentInfo#clone().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentInfo#clone().mjava","sourceNew":"  @Override\n  public Object clone() {\n    SegmentInfo si = new SegmentInfo(name, docCount, dir, isCompoundFile, hasProx, segmentCodecs, false);\n    si.docStoreOffset = docStoreOffset;\n    si.docStoreSegment = docStoreSegment;\n    si.docStoreIsCompoundFile = docStoreIsCompoundFile;\n    si.delGen = delGen;\n    si.delCount = delCount;\n    si.diagnostics = new HashMap<String, String>(diagnostics);\n    if (normGen != null) {\n      si.normGen = normGen.clone();\n    }\n    si.hasVectors = hasVectors;\n    si.version = version;\n    return si;\n  }\n\n","sourceOld":"  @Override\n  public Object clone() {\n    SegmentInfo si = new SegmentInfo(name, docCount, dir, isCompoundFile, hasProx, segmentCodecs, false);\n    si.docStoreOffset = docStoreOffset;\n    si.docStoreSegment = docStoreSegment;\n    si.docStoreIsCompoundFile = docStoreIsCompoundFile;\n    si.delGen = delGen;\n    si.delCount = delCount;\n    si.diagnostics = new HashMap<String, String>(diagnostics);\n    if (normGen != null) {\n      si.normGen = normGen.clone();\n    }\n    si.hasVectors = hasVectors;\n    return si;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb9b72f7c3d7827c64dd4ec580ded81778da361d","date":1295897920,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentInfo#clone().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentInfo#clone().mjava","sourceNew":"  @Override\n  public Object clone() {\n    SegmentInfo si = new SegmentInfo(name, docCount, dir, isCompoundFile, hasProx, segmentCodecs, false);\n    si.docStoreOffset = docStoreOffset;\n    si.docStoreSegment = docStoreSegment;\n    si.docStoreIsCompoundFile = docStoreIsCompoundFile;\n    si.delGen = delGen;\n    si.delCount = delCount;\n    si.diagnostics = new HashMap<String, String>(diagnostics);\n    if (normGen != null) {\n      si.normGen = normGen.clone();\n    }\n    si.hasVectors = hasVectors;\n    si.version = version;\n    return si;\n  }\n\n","sourceOld":"  @Override\n  public Object clone() {\n    SegmentInfo si = new SegmentInfo(name, docCount, dir, isCompoundFile, hasProx, segmentCodecs, false);\n    si.docStoreOffset = docStoreOffset;\n    si.docStoreSegment = docStoreSegment;\n    si.docStoreIsCompoundFile = docStoreIsCompoundFile;\n    si.delGen = delGen;\n    si.delCount = delCount;\n    si.diagnostics = new HashMap<String, String>(diagnostics);\n    if (normGen != null) {\n      si.normGen = normGen.clone();\n    }\n    si.hasVectors = hasVectors;\n    return si;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentInfo#clone().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentInfo#clone().mjava","sourceNew":"  @Override\n  public Object clone() {\n    SegmentInfo si = new SegmentInfo(name, docCount, dir, isCompoundFile, hasProx, segmentCodecs, false);\n    si.docStoreOffset = docStoreOffset;\n    si.docStoreSegment = docStoreSegment;\n    si.docStoreIsCompoundFile = docStoreIsCompoundFile;\n    si.delGen = delGen;\n    si.delCount = delCount;\n    si.diagnostics = new HashMap<String, String>(diagnostics);\n    if (normGen != null) {\n      si.normGen = normGen.clone();\n    }\n    si.hasVectors = hasVectors;\n    si.version = version;\n    return si;\n  }\n\n","sourceOld":"  @Override\n  public Object clone() {\n    SegmentInfo si = new SegmentInfo(name, docCount, dir, isCompoundFile, hasProx, segmentCodecs, false);\n    si.docStoreOffset = docStoreOffset;\n    si.docStoreSegment = docStoreSegment;\n    si.docStoreIsCompoundFile = docStoreIsCompoundFile;\n    si.delGen = delGen;\n    si.delCount = delCount;\n    si.diagnostics = new HashMap<String, String>(diagnostics);\n    if (normGen != null) {\n      si.normGen = normGen.clone();\n    }\n    si.hasVectors = hasVectors;\n    return si;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b0c7a8f7304b75b1528814c5820fa23a96816c27","date":1298314239,"type":3,"author":"Michael Busch","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentInfo#clone().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentInfo#clone().mjava","sourceNew":"  @Override\n  public Object clone() {\n    SegmentInfo si = new SegmentInfo(name, docCount, dir, isCompoundFile, segmentCodecs,\n        fieldInfos == null ? null : (FieldInfos) fieldInfos.clone());\n    si.docStoreOffset = docStoreOffset;\n    si.docStoreSegment = docStoreSegment;\n    si.docStoreIsCompoundFile = docStoreIsCompoundFile;\n    si.delGen = delGen;\n    si.delCount = delCount;\n    si.diagnostics = new HashMap<String, String>(diagnostics);\n    if (normGen != null) {\n      si.normGen = new HashMap<Integer, Long>();\n      for (Entry<Integer,Long> entry : normGen.entrySet()) {\n        si.normGen.put(entry.getKey(), entry.getValue());\n    }\n    }\n    si.hasProx = hasProx;\n    si.hasVectors = hasVectors;\n    si.version = version;\n    return si;\n  }\n\n","sourceOld":"  @Override\n  public Object clone() {\n    SegmentInfo si = new SegmentInfo(name, docCount, dir, isCompoundFile, hasProx, segmentCodecs, false);\n    si.docStoreOffset = docStoreOffset;\n    si.docStoreSegment = docStoreSegment;\n    si.docStoreIsCompoundFile = docStoreIsCompoundFile;\n    si.delGen = delGen;\n    si.delCount = delCount;\n    si.diagnostics = new HashMap<String, String>(diagnostics);\n    if (normGen != null) {\n      si.normGen = normGen.clone();\n    }\n    si.hasVectors = hasVectors;\n    si.version = version;\n    return si;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentInfo#clone().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentInfo#clone().mjava","sourceNew":"  @Override\n  public Object clone() {\n    SegmentInfo si = new SegmentInfo(name, docCount, dir, isCompoundFile, segmentCodecs,\n        fieldInfos == null ? null : (FieldInfos) fieldInfos.clone());\n    si.docStoreOffset = docStoreOffset;\n    si.docStoreSegment = docStoreSegment;\n    si.docStoreIsCompoundFile = docStoreIsCompoundFile;\n    si.delGen = delGen;\n    si.delCount = delCount;\n    si.diagnostics = new HashMap<String, String>(diagnostics);\n    if (normGen != null) {\n      si.normGen = new HashMap<Integer, Long>();\n      for (Entry<Integer,Long> entry : normGen.entrySet()) {\n        si.normGen.put(entry.getKey(), entry.getValue());\n    }\n    }\n    si.hasProx = hasProx;\n    si.hasVectors = hasVectors;\n    si.version = version;\n    return si;\n  }\n\n","sourceOld":"  @Override\n  public Object clone() {\n    SegmentInfo si = new SegmentInfo(name, docCount, dir, isCompoundFile, hasProx, segmentCodecs, false);\n    si.docStoreOffset = docStoreOffset;\n    si.docStoreSegment = docStoreSegment;\n    si.docStoreIsCompoundFile = docStoreIsCompoundFile;\n    si.delGen = delGen;\n    si.delCount = delCount;\n    si.diagnostics = new HashMap<String, String>(diagnostics);\n    if (normGen != null) {\n      si.normGen = normGen.clone();\n    }\n    si.hasVectors = hasVectors;\n    si.version = version;\n    return si;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"14ec33385f6fbb6ce172882d14605790418a5d31","date":1298910796,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentInfo#clone().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentInfo#clone().mjava","sourceNew":"  @Override\n  public Object clone() {\n    SegmentInfo si = new SegmentInfo(name, docCount, dir, isCompoundFile, hasProx, segmentCodecs, false);\n    si.docStoreOffset = docStoreOffset;\n    si.docStoreSegment = docStoreSegment;\n    si.docStoreIsCompoundFile = docStoreIsCompoundFile;\n    si.delGen = delGen;\n    si.delCount = delCount;\n    si.diagnostics = new HashMap<String, String>(diagnostics);\n    if (normGen != null) {\n      si.normGen = normGen.clone();\n    }\n    si.hasVectors = hasVectors;\n    si.version = version;\n    return si;\n  }\n\n","sourceOld":"  @Override\n  public Object clone() {\n    SegmentInfo si = new SegmentInfo(name, docCount, dir, isCompoundFile, segmentCodecs,\n        fieldInfos == null ? null : (FieldInfos) fieldInfos.clone());\n    si.docStoreOffset = docStoreOffset;\n    si.docStoreSegment = docStoreSegment;\n    si.docStoreIsCompoundFile = docStoreIsCompoundFile;\n    si.delGen = delGen;\n    si.delCount = delCount;\n    si.diagnostics = new HashMap<String, String>(diagnostics);\n    if (normGen != null) {\n      si.normGen = new HashMap<Integer, Long>();\n      for (Entry<Integer,Long> entry : normGen.entrySet()) {\n        si.normGen.put(entry.getKey(), entry.getValue());\n    }\n    }\n    si.hasProx = hasProx;\n    si.hasVectors = hasVectors;\n    si.version = version;\n    return si;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1224a4027481acce15495b03bce9b48b93b42722","date":1300792329,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentInfo#clone().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentInfo#clone().mjava","sourceNew":"  @Override\n  public Object clone() {\n    final SegmentInfo si = new SegmentInfo(name, docCount, dir, isCompoundFile, hasProx, segmentCodecs, hasVectors,\n        fieldInfos == null ? null : (FieldInfos) fieldInfos.clone());\n    si.docStoreOffset = docStoreOffset;\n    si.docStoreSegment = docStoreSegment;\n    si.docStoreIsCompoundFile = docStoreIsCompoundFile;\n    si.delGen = delGen;\n    si.delCount = delCount;\n    si.diagnostics = new HashMap<String, String>(diagnostics);\n    if (normGen != null) {\n      si.normGen = new HashMap<Integer, Long>();\n      for (Entry<Integer,Long> entry : normGen.entrySet()) {\n        si.normGen.put(entry.getKey(), entry.getValue());\n      }\n    }\n    si.version = version;\n    return si;\n  }\n\n","sourceOld":"  @Override\n  public Object clone() {\n    SegmentInfo si = new SegmentInfo(name, docCount, dir, isCompoundFile, hasProx, segmentCodecs, false);\n    si.docStoreOffset = docStoreOffset;\n    si.docStoreSegment = docStoreSegment;\n    si.docStoreIsCompoundFile = docStoreIsCompoundFile;\n    si.delGen = delGen;\n    si.delCount = delCount;\n    si.diagnostics = new HashMap<String, String>(diagnostics);\n    if (normGen != null) {\n      si.normGen = normGen.clone();\n    }\n    si.hasVectors = hasVectors;\n    si.version = version;\n    return si;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d619839baa8ce5503e496b94a9e42ad6f079293f","date":1301309428,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentInfo#clone().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentInfo#clone().mjava","sourceNew":"  @Override\n  public Object clone() {\n    final SegmentInfo si = new SegmentInfo(name, docCount, dir, isCompoundFile, hasProx, segmentCodecs, hasVectors,\n        fieldInfos == null ? null : (FieldInfos) fieldInfos.clone());\n    si.docStoreOffset = docStoreOffset;\n    si.docStoreSegment = docStoreSegment;\n    si.docStoreIsCompoundFile = docStoreIsCompoundFile;\n    si.delGen = delGen;\n    si.delCount = delCount;\n    si.diagnostics = new HashMap<String, String>(diagnostics);\n    if (normGen != null) {\n      si.normGen = new HashMap<Integer, Long>();\n      for (Entry<Integer,Long> entry : normGen.entrySet()) {\n        si.normGen.put(entry.getKey(), entry.getValue());\n      }\n    }\n    si.version = version;\n    return si;\n  }\n\n","sourceOld":"  @Override\n  public Object clone() {\n    SegmentInfo si = new SegmentInfo(name, docCount, dir, isCompoundFile, hasProx, segmentCodecs, false);\n    si.docStoreOffset = docStoreOffset;\n    si.docStoreSegment = docStoreSegment;\n    si.docStoreIsCompoundFile = docStoreIsCompoundFile;\n    si.delGen = delGen;\n    si.delCount = delCount;\n    si.diagnostics = new HashMap<String, String>(diagnostics);\n    if (normGen != null) {\n      si.normGen = normGen.clone();\n    }\n    si.hasVectors = hasVectors;\n    si.version = version;\n    return si;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c0ef0193974807e4bddf5432a6b0287fe4d6c9df","date":1301476645,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentInfo#clone().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentInfo#clone().mjava","sourceNew":"  @Override\n  public Object clone() {\n    final SegmentInfo si = new SegmentInfo(name, docCount, dir, isCompoundFile, hasProx, segmentCodecs, hasVectors,\n        fieldInfos == null ? null : (FieldInfos) fieldInfos.clone());\n    si.docStoreOffset = docStoreOffset;\n    si.docStoreSegment = docStoreSegment;\n    si.docStoreIsCompoundFile = docStoreIsCompoundFile;\n    si.delGen = delGen;\n    si.delCount = delCount;\n    si.diagnostics = new HashMap<String, String>(diagnostics);\n    if (normGen != null) {\n      si.normGen = new HashMap<Integer, Long>();\n      for (Entry<Integer,Long> entry : normGen.entrySet()) {\n        si.normGen.put(entry.getKey(), entry.getValue());\n      }\n    }\n    si.version = version;\n    return si;\n  }\n\n","sourceOld":"  @Override\n  public Object clone() {\n    SegmentInfo si = new SegmentInfo(name, docCount, dir, isCompoundFile, segmentCodecs,\n        fieldInfos == null ? null : (FieldInfos) fieldInfos.clone());\n    si.docStoreOffset = docStoreOffset;\n    si.docStoreSegment = docStoreSegment;\n    si.docStoreIsCompoundFile = docStoreIsCompoundFile;\n    si.delGen = delGen;\n    si.delCount = delCount;\n    si.diagnostics = new HashMap<String, String>(diagnostics);\n    if (normGen != null) {\n      si.normGen = new HashMap<Integer, Long>();\n      for (Entry<Integer,Long> entry : normGen.entrySet()) {\n        si.normGen.put(entry.getKey(), entry.getValue());\n    }\n    }\n    si.hasProx = hasProx;\n    si.hasVectors = hasVectors;\n    si.version = version;\n    return si;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fe2fc74577855eadfb5eae3153c2fffdaaf791","date":1305237079,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentInfo#clone().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentInfo#clone().mjava","sourceNew":"  @Override\n  public Object clone() {\n    final SegmentInfo si = new SegmentInfo(name, docCount, dir, isCompoundFile, segmentCodecs,\n        fieldInfos == null ? null : (FieldInfos) fieldInfos.clone());\n    si.docStoreOffset = docStoreOffset;\n    si.docStoreSegment = docStoreSegment;\n    si.docStoreIsCompoundFile = docStoreIsCompoundFile;\n    si.delGen = delGen;\n    si.delCount = delCount;\n    si.diagnostics = new HashMap<String, String>(diagnostics);\n    if (normGen != null) {\n      si.normGen = new HashMap<Integer, Long>();\n      for (Entry<Integer,Long> entry : normGen.entrySet()) {\n        si.normGen.put(entry.getKey(), entry.getValue());\n      }\n    }\n    si.version = version;\n    si.hasProx = hasProx;\n    si.hasVectors = hasVectors;\n    return si;\n  }\n\n","sourceOld":"  @Override\n  public Object clone() {\n    final SegmentInfo si = new SegmentInfo(name, docCount, dir, isCompoundFile, hasProx, segmentCodecs, hasVectors,\n        fieldInfos == null ? null : (FieldInfos) fieldInfos.clone());\n    si.docStoreOffset = docStoreOffset;\n    si.docStoreSegment = docStoreSegment;\n    si.docStoreIsCompoundFile = docStoreIsCompoundFile;\n    si.delGen = delGen;\n    si.delCount = delCount;\n    si.diagnostics = new HashMap<String, String>(diagnostics);\n    if (normGen != null) {\n      si.normGen = new HashMap<Integer, Long>();\n      for (Entry<Integer,Long> entry : normGen.entrySet()) {\n        si.normGen.put(entry.getKey(), entry.getValue());\n      }\n    }\n    si.version = version;\n    return si;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c700f8d0842d3e52bb2bdfbfdc046a137e836edb","date":1305285499,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentInfo#clone().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentInfo#clone().mjava","sourceNew":"  @Override\n  public Object clone() {\n    final SegmentInfo si = new SegmentInfo(name, docCount, dir, isCompoundFile, segmentCodecs,\n        fieldInfos == null ? null : (FieldInfos) fieldInfos.clone());\n    si.docStoreOffset = docStoreOffset;\n    si.docStoreSegment = docStoreSegment;\n    si.docStoreIsCompoundFile = docStoreIsCompoundFile;\n    si.delGen = delGen;\n    si.delCount = delCount;\n    si.diagnostics = new HashMap<String, String>(diagnostics);\n    if (normGen != null) {\n      si.normGen = new HashMap<Integer, Long>();\n      for (Entry<Integer,Long> entry : normGen.entrySet()) {\n        si.normGen.put(entry.getKey(), entry.getValue());\n      }\n    }\n    si.version = version;\n    si.hasProx = hasProx;\n    si.hasVectors = hasVectors;\n    return si;\n  }\n\n","sourceOld":"  @Override\n  public Object clone() {\n    final SegmentInfo si = new SegmentInfo(name, docCount, dir, isCompoundFile, hasProx, segmentCodecs, hasVectors,\n        fieldInfos == null ? null : (FieldInfos) fieldInfos.clone());\n    si.docStoreOffset = docStoreOffset;\n    si.docStoreSegment = docStoreSegment;\n    si.docStoreIsCompoundFile = docStoreIsCompoundFile;\n    si.delGen = delGen;\n    si.delCount = delCount;\n    si.diagnostics = new HashMap<String, String>(diagnostics);\n    if (normGen != null) {\n      si.normGen = new HashMap<Integer, Long>();\n      for (Entry<Integer,Long> entry : normGen.entrySet()) {\n        si.normGen.put(entry.getKey(), entry.getValue());\n      }\n    }\n    si.version = version;\n    return si;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentInfo#clone().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentInfo#clone().mjava","sourceNew":"  @Override\n  public Object clone() {\n    final SegmentInfo si = new SegmentInfo(name, docCount, dir, isCompoundFile, segmentCodecs,\n        fieldInfos == null ? null : (FieldInfos) fieldInfos.clone());\n    si.docStoreOffset = docStoreOffset;\n    si.docStoreSegment = docStoreSegment;\n    si.docStoreIsCompoundFile = docStoreIsCompoundFile;\n    si.delGen = delGen;\n    si.delCount = delCount;\n    si.diagnostics = new HashMap<String, String>(diagnostics);\n    if (normGen != null) {\n      si.normGen = new HashMap<Integer, Long>();\n      for (Entry<Integer,Long> entry : normGen.entrySet()) {\n        si.normGen.put(entry.getKey(), entry.getValue());\n      }\n    }\n    si.version = version;\n    si.hasProx = hasProx;\n    si.hasVectors = hasVectors;\n    return si;\n  }\n\n","sourceOld":"  @Override\n  public Object clone() {\n    final SegmentInfo si = new SegmentInfo(name, docCount, dir, isCompoundFile, hasProx, segmentCodecs, hasVectors,\n        fieldInfos == null ? null : (FieldInfos) fieldInfos.clone());\n    si.docStoreOffset = docStoreOffset;\n    si.docStoreSegment = docStoreSegment;\n    si.docStoreIsCompoundFile = docStoreIsCompoundFile;\n    si.delGen = delGen;\n    si.delCount = delCount;\n    si.diagnostics = new HashMap<String, String>(diagnostics);\n    if (normGen != null) {\n      si.normGen = new HashMap<Integer, Long>();\n      for (Entry<Integer,Long> entry : normGen.entrySet()) {\n        si.normGen.put(entry.getKey(), entry.getValue());\n      }\n    }\n    si.version = version;\n    return si;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7b91922b55d15444d554721b352861d028eb8278","date":1320421415,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentInfo#clone().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentInfo#clone().mjava","sourceNew":"  @Override\n  public Object clone() {\n    final SegmentInfo si = new SegmentInfo(name, docCount, dir, isCompoundFile, codec,\n        fieldInfos == null ? null : (FieldInfos) fieldInfos.clone());\n    si.docStoreOffset = docStoreOffset;\n    si.docStoreSegment = docStoreSegment;\n    si.docStoreIsCompoundFile = docStoreIsCompoundFile;\n    si.delGen = delGen;\n    si.delCount = delCount;\n    si.diagnostics = new HashMap<String, String>(diagnostics);\n    if (normGen != null) {\n      si.normGen = new HashMap<Integer, Long>();\n      for (Entry<Integer,Long> entry : normGen.entrySet()) {\n        si.normGen.put(entry.getKey(), entry.getValue());\n      }\n    }\n    si.version = version;\n    si.hasProx = hasProx;\n    si.hasVectors = hasVectors;\n    return si;\n  }\n\n","sourceOld":"  @Override\n  public Object clone() {\n    final SegmentInfo si = new SegmentInfo(name, docCount, dir, isCompoundFile, segmentCodecs,\n        fieldInfos == null ? null : (FieldInfos) fieldInfos.clone());\n    si.docStoreOffset = docStoreOffset;\n    si.docStoreSegment = docStoreSegment;\n    si.docStoreIsCompoundFile = docStoreIsCompoundFile;\n    si.delGen = delGen;\n    si.delCount = delCount;\n    si.diagnostics = new HashMap<String, String>(diagnostics);\n    if (normGen != null) {\n      si.normGen = new HashMap<Integer, Long>();\n      for (Entry<Integer,Long> entry : normGen.entrySet()) {\n        si.normGen.put(entry.getKey(), entry.getValue());\n      }\n    }\n    si.version = version;\n    si.hasProx = hasProx;\n    si.hasVectors = hasVectors;\n    return si;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentInfo#clone().mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentInfo#clone().mjava","sourceNew":"  @Override\n  public Object clone() {\n    final SegmentInfo si = new SegmentInfo(name, docCount, dir, isCompoundFile, codec,\n        fieldInfos == null ? null : (FieldInfos) fieldInfos.clone());\n    si.docStoreOffset = docStoreOffset;\n    si.docStoreSegment = docStoreSegment;\n    si.docStoreIsCompoundFile = docStoreIsCompoundFile;\n    si.delGen = delGen;\n    si.delCount = delCount;\n    si.diagnostics = new HashMap<String, String>(diagnostics);\n    if (normGen != null) {\n      si.normGen = new HashMap<Integer, Long>();\n      for (Entry<Integer,Long> entry : normGen.entrySet()) {\n        si.normGen.put(entry.getKey(), entry.getValue());\n      }\n    }\n    si.version = version;\n    si.hasProx = hasProx;\n    si.hasVectors = hasVectors;\n    return si;\n  }\n\n","sourceOld":"  @Override\n  public Object clone() {\n    final SegmentInfo si = new SegmentInfo(name, docCount, dir, isCompoundFile, codec,\n        fieldInfos == null ? null : (FieldInfos) fieldInfos.clone());\n    si.docStoreOffset = docStoreOffset;\n    si.docStoreSegment = docStoreSegment;\n    si.docStoreIsCompoundFile = docStoreIsCompoundFile;\n    si.delGen = delGen;\n    si.delCount = delCount;\n    si.diagnostics = new HashMap<String, String>(diagnostics);\n    if (normGen != null) {\n      si.normGen = new HashMap<Integer, Long>();\n      for (Entry<Integer,Long> entry : normGen.entrySet()) {\n        si.normGen.put(entry.getKey(), entry.getValue());\n      }\n    }\n    si.version = version;\n    si.hasProx = hasProx;\n    si.hasVectors = hasVectors;\n    return si;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fe2fc74577855eadfb5eae3153c2fffdaaf791":["1224a4027481acce15495b03bce9b48b93b42722"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["7b91922b55d15444d554721b352861d028eb8278"],"a493e6d0c3ad86bd55c0a1360d110142e948f2bd":["6267e1ce56c2eec111425690cd04e251b6f14952"],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["6267e1ce56c2eec111425690cd04e251b6f14952","4948bc5d29211f0c9b5ccc31b2632cdd27066ea5"],"bb9b72f7c3d7827c64dd4ec580ded81778da361d":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","b9dc373b96fc96e6300e2f5af947f6998e6aa6a6"],"c0ef0193974807e4bddf5432a6b0287fe4d6c9df":["bde51b089eb7f86171eb3406e38a274743f9b7ac","1224a4027481acce15495b03bce9b48b93b42722"],"14ec33385f6fbb6ce172882d14605790418a5d31":["b0c7a8f7304b75b1528814c5820fa23a96816c27"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["ab5cb6a74aefb78aa0569857970b9151dfe2e787","b9dc373b96fc96e6300e2f5af947f6998e6aa6a6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c700f8d0842d3e52bb2bdfbfdc046a137e836edb":["d619839baa8ce5503e496b94a9e42ad6f079293f","d3fe2fc74577855eadfb5eae3153c2fffdaaf791"],"4948bc5d29211f0c9b5ccc31b2632cdd27066ea5":["7e1cbd7e289dc1243c7a59e1a83d078163a147fe"],"7e1cbd7e289dc1243c7a59e1a83d078163a147fe":["a493e6d0c3ad86bd55c0a1360d110142e948f2bd"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["bb9b72f7c3d7827c64dd4ec580ded81778da361d","b0c7a8f7304b75b1528814c5820fa23a96816c27"],"1224a4027481acce15495b03bce9b48b93b42722":["14ec33385f6fbb6ce172882d14605790418a5d31"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b9dc373b96fc96e6300e2f5af947f6998e6aa6a6":["4948bc5d29211f0c9b5ccc31b2632cdd27066ea5"],"85a883878c0af761245ab048babc63d099f835f3":["6267e1ce56c2eec111425690cd04e251b6f14952","a493e6d0c3ad86bd55c0a1360d110142e948f2bd"],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":["85a883878c0af761245ab048babc63d099f835f3","4948bc5d29211f0c9b5ccc31b2632cdd27066ea5"],"7b91922b55d15444d554721b352861d028eb8278":["d3fe2fc74577855eadfb5eae3153c2fffdaaf791"],"6267e1ce56c2eec111425690cd04e251b6f14952":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"d619839baa8ce5503e496b94a9e42ad6f079293f":["29ef99d61cda9641b6250bf9567329a6e65f901d","1224a4027481acce15495b03bce9b48b93b42722"],"b0c7a8f7304b75b1528814c5820fa23a96816c27":["b9dc373b96fc96e6300e2f5af947f6998e6aa6a6"],"a3776dccca01c11e7046323cfad46a3b4a471233":["1224a4027481acce15495b03bce9b48b93b42722","d3fe2fc74577855eadfb5eae3153c2fffdaaf791"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"d3fe2fc74577855eadfb5eae3153c2fffdaaf791":["c700f8d0842d3e52bb2bdfbfdc046a137e836edb","7b91922b55d15444d554721b352861d028eb8278","a3776dccca01c11e7046323cfad46a3b4a471233"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a493e6d0c3ad86bd55c0a1360d110142e948f2bd":["7e1cbd7e289dc1243c7a59e1a83d078163a147fe","85a883878c0af761245ab048babc63d099f835f3"],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["6267e1ce56c2eec111425690cd04e251b6f14952"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["bb9b72f7c3d7827c64dd4ec580ded81778da361d"],"bb9b72f7c3d7827c64dd4ec580ded81778da361d":["bde51b089eb7f86171eb3406e38a274743f9b7ac"],"c0ef0193974807e4bddf5432a6b0287fe4d6c9df":[],"14ec33385f6fbb6ce172882d14605790418a5d31":["1224a4027481acce15495b03bce9b48b93b42722"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["d619839baa8ce5503e496b94a9e42ad6f079293f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"c700f8d0842d3e52bb2bdfbfdc046a137e836edb":[],"4948bc5d29211f0c9b5ccc31b2632cdd27066ea5":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","b9dc373b96fc96e6300e2f5af947f6998e6aa6a6","ab5cb6a74aefb78aa0569857970b9151dfe2e787"],"7e1cbd7e289dc1243c7a59e1a83d078163a147fe":["4948bc5d29211f0c9b5ccc31b2632cdd27066ea5"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df"],"1224a4027481acce15495b03bce9b48b93b42722":["d3fe2fc74577855eadfb5eae3153c2fffdaaf791","c0ef0193974807e4bddf5432a6b0287fe4d6c9df","d619839baa8ce5503e496b94a9e42ad6f079293f","a3776dccca01c11e7046323cfad46a3b4a471233"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"b9dc373b96fc96e6300e2f5af947f6998e6aa6a6":["bb9b72f7c3d7827c64dd4ec580ded81778da361d","29ef99d61cda9641b6250bf9567329a6e65f901d","b0c7a8f7304b75b1528814c5820fa23a96816c27"],"85a883878c0af761245ab048babc63d099f835f3":["ab5cb6a74aefb78aa0569857970b9151dfe2e787"],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":["29ef99d61cda9641b6250bf9567329a6e65f901d"],"7b91922b55d15444d554721b352861d028eb8278":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"6267e1ce56c2eec111425690cd04e251b6f14952":["a493e6d0c3ad86bd55c0a1360d110142e948f2bd","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","85a883878c0af761245ab048babc63d099f835f3"],"d619839baa8ce5503e496b94a9e42ad6f079293f":["c700f8d0842d3e52bb2bdfbfdc046a137e836edb"],"b0c7a8f7304b75b1528814c5820fa23a96816c27":["14ec33385f6fbb6ce172882d14605790418a5d31","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"a3776dccca01c11e7046323cfad46a3b4a471233":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df","c700f8d0842d3e52bb2bdfbfdc046a137e836edb","a3776dccca01c11e7046323cfad46a3b4a471233","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}