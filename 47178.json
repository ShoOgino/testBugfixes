{"path":"lucene/core/src/test/org/apache/lucene/util/fst/TestFstDirect#buildFST(List[BytesRef]).mjava","commits":[{"id":"9cd2f2532659e458b6f27a7635d90f1977e99c89","date":1564491376,"type":1,"author":"Michael Sokolov","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/fst/TestFstDirect#buildFST(List[BytesRef]).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/util/fst/TestFstDirect#buildFST(List[String]).mjava","sourceNew":"  private FST<Object> buildFST(List<BytesRef> entries) throws Exception {\n    final Outputs<Object> outputs = NoOutputs.getSingleton();\n    final Builder<Object> b = new Builder<>(FST.INPUT_TYPE.BYTE1, 0, 0, true, true, Integer.MAX_VALUE, outputs, true, 15);\n    BytesRef last = null;\n    for (BytesRef entry : entries) {\n      if (entry.equals(last) == false) {\n        b.add(Util.toIntsRef(entry, new IntsRefBuilder()), outputs.getNoOutput());\n      }\n      last = entry;\n    }\n    FST<Object> fst = b.finish();\n    return fst;\n  }\n\n","sourceOld":"  private FST<Object> buildFST(List<String> words) throws Exception {\n    long start = System.nanoTime();\n    final Outputs<Object> outputs = NoOutputs.getSingleton();\n    final Builder<Object> b = new Builder<>(FST.INPUT_TYPE.BYTE1, 0, 0, true, true, Integer.MAX_VALUE, outputs, true, 15);\n\n    for (String word : words) {\n      b.add(Util.toIntsRef(new BytesRef(word), new IntsRefBuilder()), outputs.getNoOutput());\n    }\n    FST<Object> fst = b.finish();\n    long t = System.nanoTime();\n    printf(\"Built FST of %d bytes in %d ms\", fst.ramBytesUsed(), nsToMs(t - start));\n    return fst;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f8061ddd97f3352007d927dae445884a6f3d857b","date":1564988276,"type":2,"author":"Atri Sharma","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/util/fst/TestFstDirect#buildFST(List[BytesRef]).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/util/fst/TestFstDirect#buildFST(List[String]).mjava","sourceNew":"  private FST<Object> buildFST(List<BytesRef> entries) throws Exception {\n    final Outputs<Object> outputs = NoOutputs.getSingleton();\n    final Builder<Object> b = new Builder<>(FST.INPUT_TYPE.BYTE1, 0, 0, true, true, Integer.MAX_VALUE, outputs, true, 15);\n    BytesRef last = null;\n    for (BytesRef entry : entries) {\n      if (entry.equals(last) == false) {\n        b.add(Util.toIntsRef(entry, new IntsRefBuilder()), outputs.getNoOutput());\n      }\n      last = entry;\n    }\n    FST<Object> fst = b.finish();\n    return fst;\n  }\n\n","sourceOld":"  private FST<Object> buildFST(List<String> words) throws Exception {\n    long start = System.nanoTime();\n    final Outputs<Object> outputs = NoOutputs.getSingleton();\n    final Builder<Object> b = new Builder<>(FST.INPUT_TYPE.BYTE1, 0, 0, true, true, Integer.MAX_VALUE, outputs, true, 15);\n\n    for (String word : words) {\n      b.add(Util.toIntsRef(new BytesRef(word), new IntsRefBuilder()), outputs.getNoOutput());\n    }\n    FST<Object> fst = b.finish();\n    long t = System.nanoTime();\n    printf(\"Built FST of %d bytes in %d ms\", fst.ramBytesUsed(), nsToMs(t - start));\n    return fst;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"71d31a7d5773508492505519bb5230b87c8937ad","date":1573681693,"type":4,"author":"Bruno Roustant","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/test/org/apache/lucene/util/fst/TestFstDirect#buildFST(List[BytesRef]).mjava","sourceNew":null,"sourceOld":"  private FST<Object> buildFST(List<BytesRef> entries) throws Exception {\n    final Outputs<Object> outputs = NoOutputs.getSingleton();\n    final Builder<Object> b = new Builder<>(FST.INPUT_TYPE.BYTE1, 0, 0, true, true, Integer.MAX_VALUE, outputs, true, 15);\n    BytesRef last = null;\n    for (BytesRef entry : entries) {\n      if (entry.equals(last) == false) {\n        b.add(Util.toIntsRef(entry, new IntsRefBuilder()), outputs.getNoOutput());\n      }\n      last = entry;\n    }\n    FST<Object> fst = b.finish();\n    return fst;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"71d31a7d5773508492505519bb5230b87c8937ad":["9cd2f2532659e458b6f27a7635d90f1977e99c89"],"9cd2f2532659e458b6f27a7635d90f1977e99c89":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f8061ddd97f3352007d927dae445884a6f3d857b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","9cd2f2532659e458b6f27a7635d90f1977e99c89"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["71d31a7d5773508492505519bb5230b87c8937ad"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9cd2f2532659e458b6f27a7635d90f1977e99c89","f8061ddd97f3352007d927dae445884a6f3d857b"],"71d31a7d5773508492505519bb5230b87c8937ad":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9cd2f2532659e458b6f27a7635d90f1977e99c89":["71d31a7d5773508492505519bb5230b87c8937ad","f8061ddd97f3352007d927dae445884a6f3d857b"],"f8061ddd97f3352007d927dae445884a6f3d857b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["f8061ddd97f3352007d927dae445884a6f3d857b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}