{"path":"lucene/core/src/java/org/apache/lucene/store/ByteArrayDataInput#readVInt().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/store/ByteArrayDataInput#readVInt().mjava","pathOld":"lucene/src/java/org/apache/lucene/store/ByteArrayDataInput#readVInt().mjava","sourceNew":"  @Override\n  public int readVInt() {\n    assert checkBounds();\n    byte b = bytes[pos++];\n    int i = b & 0x7F;\n    for (int shift = 7; (b & 0x80) != 0; shift += 7) {\n      assert checkBounds();\n      b = bytes[pos++];\n      i |= (b & 0x7F) << shift;\n    }\n    return i;\n  }\n\n","sourceOld":"  @Override\n  public int readVInt() {\n    assert checkBounds();\n    byte b = bytes[pos++];\n    int i = b & 0x7F;\n    for (int shift = 7; (b & 0x80) != 0; shift += 7) {\n      assert checkBounds();\n      b = bytes[pos++];\n      i |= (b & 0x7F) << shift;\n    }\n    return i;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7d91b7936af3081e704512ac1234340133e59904","date":1332109642,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/store/ByteArrayDataInput#readVInt().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/store/ByteArrayDataInput#readVInt().mjava","sourceNew":"  @Override\n  public int readVInt() {\n    assert checkBounds();\n    byte b = bytes[pos++];\n    int i = b & 0x7F;\n    if ((b & 0x80) == 0) return i;\n    assert checkBounds();\n    b = bytes[pos++];\n    i |= (b & 0x7F) << 7;\n    if ((b & 0x80) == 0) return i;\n    assert checkBounds();\n    b = bytes[pos++];\n    i |= (b & 0x7F) << 14;\n    if ((b & 0x80) == 0) return i;\n    assert checkBounds();\n    b = bytes[pos++];\n    i |= (b & 0x7F) << 21;\n    if ((b & 0x80) == 0) return i;\n    assert checkBounds();\n    b = bytes[pos++];\n    // Warning: the next ands use 0x0F / 0xF0 - beware copy/paste errors:\n    i |= (b & 0x0F) << 28;\n    if ((b & 0xF0) == 0) return i;\n    throw new RuntimeException(\"Invalid vInt detected (too many bits)\");\n  }\n\n","sourceOld":"  @Override\n  public int readVInt() {\n    assert checkBounds();\n    byte b = bytes[pos++];\n    int i = b & 0x7F;\n    for (int shift = 7; (b & 0x80) != 0; shift += 7) {\n      assert checkBounds();\n      b = bytes[pos++];\n      i |= (b & 0x7F) << shift;\n    }\n    return i;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"37c28cf7c63b687ed5acdc5e8b799e8230c9a81f","date":1332869137,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/store/ByteArrayDataInput#readVInt().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/store/ByteArrayDataInput#readVInt().mjava","sourceNew":"  @Override\n  public int readVInt() {\n    byte b = bytes[pos++];\n    int i = b & 0x7F;\n    if ((b & 0x80) == 0) return i;\n    b = bytes[pos++];\n    i |= (b & 0x7F) << 7;\n    if ((b & 0x80) == 0) return i;\n    b = bytes[pos++];\n    i |= (b & 0x7F) << 14;\n    if ((b & 0x80) == 0) return i;\n    b = bytes[pos++];\n    i |= (b & 0x7F) << 21;\n    if ((b & 0x80) == 0) return i;\n    b = bytes[pos++];\n    // Warning: the next ands use 0x0F / 0xF0 - beware copy/paste errors:\n    i |= (b & 0x0F) << 28;\n    if ((b & 0xF0) == 0) return i;\n    throw new RuntimeException(\"Invalid vInt detected (too many bits)\");\n  }\n\n","sourceOld":"  @Override\n  public int readVInt() {\n    assert checkBounds();\n    byte b = bytes[pos++];\n    int i = b & 0x7F;\n    if ((b & 0x80) == 0) return i;\n    assert checkBounds();\n    b = bytes[pos++];\n    i |= (b & 0x7F) << 7;\n    if ((b & 0x80) == 0) return i;\n    assert checkBounds();\n    b = bytes[pos++];\n    i |= (b & 0x7F) << 14;\n    if ((b & 0x80) == 0) return i;\n    assert checkBounds();\n    b = bytes[pos++];\n    i |= (b & 0x7F) << 21;\n    if ((b & 0x80) == 0) return i;\n    assert checkBounds();\n    b = bytes[pos++];\n    // Warning: the next ands use 0x0F / 0xF0 - beware copy/paste errors:\n    i |= (b & 0x0F) << 28;\n    if ((b & 0xF0) == 0) return i;\n    throw new RuntimeException(\"Invalid vInt detected (too many bits)\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"231a0ded093edb0044905980e2607acfc3f6a954","date":1333229599,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/store/ByteArrayDataInput#readVInt().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/store/ByteArrayDataInput#readVInt().mjava","sourceNew":"  @Override\n  public int readVInt() {\n    byte b = bytes[pos++];\n    if (b >= 0) return b;\n    int i = b & 0x7F;\n    b = bytes[pos++];\n    i |= (b & 0x7F) << 7;\n    if (b >= 0) return i;\n    b = bytes[pos++];\n    i |= (b & 0x7F) << 14;\n    if (b >= 0) return i;\n    b = bytes[pos++];\n    i |= (b & 0x7F) << 21;\n    if (b >= 0) return i;\n    b = bytes[pos++];\n    // Warning: the next ands use 0x0F / 0xF0 - beware copy/paste errors:\n    i |= (b & 0x0F) << 28;\n    if ((b & 0xF0) == 0) return i;\n    throw new RuntimeException(\"Invalid vInt detected (too many bits)\");\n  }\n\n","sourceOld":"  @Override\n  public int readVInt() {\n    byte b = bytes[pos++];\n    int i = b & 0x7F;\n    if ((b & 0x80) == 0) return i;\n    b = bytes[pos++];\n    i |= (b & 0x7F) << 7;\n    if ((b & 0x80) == 0) return i;\n    b = bytes[pos++];\n    i |= (b & 0x7F) << 14;\n    if ((b & 0x80) == 0) return i;\n    b = bytes[pos++];\n    i |= (b & 0x7F) << 21;\n    if ((b & 0x80) == 0) return i;\n    b = bytes[pos++];\n    // Warning: the next ands use 0x0F / 0xF0 - beware copy/paste errors:\n    i |= (b & 0x0F) << 28;\n    if ((b & 0xF0) == 0) return i;\n    throw new RuntimeException(\"Invalid vInt detected (too many bits)\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"231a0ded093edb0044905980e2607acfc3f6a954":["37c28cf7c63b687ed5acdc5e8b799e8230c9a81f"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"37c28cf7c63b687ed5acdc5e8b799e8230c9a81f":["7d91b7936af3081e704512ac1234340133e59904"],"7d91b7936af3081e704512ac1234340133e59904":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["231a0ded093edb0044905980e2607acfc3f6a954"]},"commit2Childs":{"231a0ded093edb0044905980e2607acfc3f6a954":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["7d91b7936af3081e704512ac1234340133e59904"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"37c28cf7c63b687ed5acdc5e8b799e8230c9a81f":["231a0ded093edb0044905980e2607acfc3f6a954"],"7d91b7936af3081e704512ac1234340133e59904":["37c28cf7c63b687ed5acdc5e8b799e8230c9a81f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}