{"path":"src/java/org/apache/solr/handler/admin/MultiCoreHandler#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","commits":[{"id":"048361614025800e582bfc7a7b0329dc6fd6a95e","date":1196999392,"type":0,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/admin/MultiCoreHandler#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws Exception \n  {\n    // Make sure the manager is enabled\n    MultiCore manager = MultiCore.getRegistry();\n    if( !manager.isEnabled() ) {\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n          \"MultiCore support must be enabled at startup.\" );\n    }\n    \n    // Pick the action\n    SolrParams params = req.getParams();\n    MultiCoreAction action = MultiCoreAction.STATUS;\n    String a = params.get( MultiCoreParams.ACTION );\n    if( a != null ) {\n      action = MultiCoreAction.get( a );\n      if( action == null ) {\n        throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n          \"Unknown 'action' value.  Use: \"+MultiCoreAction.values() );\n      }\n    }\n    \n    // Select the core\n    SolrCore core = null;\n    String cname = params.get( MultiCoreParams.CORE );\n    if( cname != null ) {\n      core = manager.getCore( cname );\n      if( core == null ) {\n        throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n            \"Unknown core: \"+cname );\n      }\n    }\n    \n    // Handle a Status Request\n    //---------------------------------------------------------\n    if( action == MultiCoreAction.STATUS ) {\n      SolrCore defaultCore = manager.getDefaultCore();\n      NamedList<Object> status = new SimpleOrderedMap<Object>();\n      if( core == null ) {\n        for( SolrCore c : manager.getCores() ) {\n          status.add( c.getName(), getCoreStatus( c, c==defaultCore ) );\n        }\n      }\n      else {\n        status.add( core.getName(), getCoreStatus( core, core==defaultCore ) );\n      }\n      rsp.add( \"status\", status );\n    }\n    else if( core == null ) {\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n        \"Action '\"+action+\"' requires a core name.\" );\n    }\n    else {\n      switch( action ) {\n      case SETASDEFAULT:\n        manager.setDefaultCore( core );\n        rsp.add( \"default\", core.getName() );\n        break;\n        \n      case RELOAD: {\n        manager.reload( core );\n        break;\n      } \n        \n      default:\n        throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n            \"TODO: IMPLEMENT: \" + action );\n      }\n\n      // Should we persist the changes?\n      if( params.getBool( MultiCoreParams.PERSISTENT, manager.isPersistent() ) ) {\n        rsp.add( \"TODO\", \"SAVE THE CHANGES: \"+manager.getConfigFile().getAbsolutePath() );\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["1a45fbd60083428b1b13884c5c8c2e33e7e71ee7"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1a45fbd60083428b1b13884c5c8c2e33e7e71ee7","date":1198275819,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/admin/MultiCoreHandler#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"src/java/org/apache/solr/handler/admin/MultiCoreHandler#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  @Override\n  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws Exception \n  {\n    // Make sure the manager is enabled\n    MultiCore manager = MultiCore.getRegistry();\n    if( !manager.isEnabled() ) {\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n          \"MultiCore support must be enabled at startup.\" );\n    }\n    \n    // Pick the action\n    SolrParams params = req.getParams();\n    SolrParams required = params.required();\n    MultiCoreAction action = MultiCoreAction.STATUS;\n    String a = params.get( MultiCoreParams.ACTION );\n    if( a != null ) {\n      action = MultiCoreAction.get( a );\n      if( action == null ) {\n        throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n          \"Unknown 'action' value.  Use: \"+MultiCoreAction.values() );\n      }\n    }\n    \n    // Select the core\n    SolrCore core = null;\n    String cname = params.get( MultiCoreParams.CORE );\n    if( cname != null ) {\n      core = manager.getCore( cname );\n      if( core == null ) {\n        throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n            \"Unknown core: \"+cname );\n      }\n    }\n    \n    // Handle a Status Request\n    //---------------------------------------------------------\n    if( action == MultiCoreAction.STATUS ) {\n      SolrCore defaultCore = manager.getDefaultCore();\n      NamedList<Object> status = new SimpleOrderedMap<Object>();\n      if( core == null ) {\n        for( SolrCore c : manager.getCores() ) {\n          status.add( c.getName(), getCoreStatus( c, c==defaultCore ) );\n        }\n      }\n      else {\n        status.add( core.getName(), getCoreStatus( core, core==defaultCore ) );\n      }\n      rsp.add( \"status\", status );\n    }\n    else if( core == null ) {\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n        \"Action '\"+action+\"' requires a core name.\" );\n    }\n    else {\n      switch( action ) {\n      \n      case RELOAD: {\n        manager.reload( core );\n        break;\n      } \n\n      case SWAP: {\n        String name = required.get( MultiCoreParams.WITH );\n        SolrCore swap = manager.getCore( name );\n        if( swap == null ) {\n          throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n              \"Unknown core: \"+name );\n        }\n        manager.swap( core, swap );\n        break;\n      } \n        \n      default:\n        throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n            \"TODO: IMPLEMENT: \" + action );\n      }\n\n      // Should we persist the changes?\n      if( params.getBool( MultiCoreParams.PERSISTENT, manager.isPersistent() ) ) {\n        rsp.add( \"TODO\", \"SAVE THE CHANGES: \"+manager.getConfigFile().getAbsolutePath() );\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws Exception \n  {\n    // Make sure the manager is enabled\n    MultiCore manager = MultiCore.getRegistry();\n    if( !manager.isEnabled() ) {\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n          \"MultiCore support must be enabled at startup.\" );\n    }\n    \n    // Pick the action\n    SolrParams params = req.getParams();\n    MultiCoreAction action = MultiCoreAction.STATUS;\n    String a = params.get( MultiCoreParams.ACTION );\n    if( a != null ) {\n      action = MultiCoreAction.get( a );\n      if( action == null ) {\n        throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n          \"Unknown 'action' value.  Use: \"+MultiCoreAction.values() );\n      }\n    }\n    \n    // Select the core\n    SolrCore core = null;\n    String cname = params.get( MultiCoreParams.CORE );\n    if( cname != null ) {\n      core = manager.getCore( cname );\n      if( core == null ) {\n        throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n            \"Unknown core: \"+cname );\n      }\n    }\n    \n    // Handle a Status Request\n    //---------------------------------------------------------\n    if( action == MultiCoreAction.STATUS ) {\n      SolrCore defaultCore = manager.getDefaultCore();\n      NamedList<Object> status = new SimpleOrderedMap<Object>();\n      if( core == null ) {\n        for( SolrCore c : manager.getCores() ) {\n          status.add( c.getName(), getCoreStatus( c, c==defaultCore ) );\n        }\n      }\n      else {\n        status.add( core.getName(), getCoreStatus( core, core==defaultCore ) );\n      }\n      rsp.add( \"status\", status );\n    }\n    else if( core == null ) {\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n        \"Action '\"+action+\"' requires a core name.\" );\n    }\n    else {\n      switch( action ) {\n      case SETASDEFAULT:\n        manager.setDefaultCore( core );\n        rsp.add( \"default\", core.getName() );\n        break;\n        \n      case RELOAD: {\n        manager.reload( core );\n        break;\n      } \n        \n      default:\n        throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n            \"TODO: IMPLEMENT: \" + action );\n      }\n\n      // Should we persist the changes?\n      if( params.getBool( MultiCoreParams.PERSISTENT, manager.isPersistent() ) ) {\n        rsp.add( \"TODO\", \"SAVE THE CHANGES: \"+manager.getConfigFile().getAbsolutePath() );\n      }\n    }\n  }\n\n","bugFix":["048361614025800e582bfc7a7b0329dc6fd6a95e"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6dc6ab6902f8f70ae43365947ccf44c25986906d","date":1204603577,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/admin/MultiCoreHandler#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"src/java/org/apache/solr/handler/admin/MultiCoreHandler#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  @Override\n  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws Exception \n  {\n    // Make sure the manager is enabled\n    MultiCore manager = MultiCore.getRegistry();\n    if( !manager.isEnabled() ) {\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n          \"MultiCore support must be enabled at startup.\" );\n    }\n    boolean do_persist = false;\n    \n    // Pick the action\n    SolrParams params = req.getParams();\n    SolrParams required = params.required();\n    MultiCoreAction action = MultiCoreAction.STATUS;\n    String a = params.get( MultiCoreParams.ACTION );\n    if( a != null ) {\n      action = MultiCoreAction.get( a );\n      if( action == null ) {\n        throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n          \"Unknown 'action' value.  Use: \"+MultiCoreAction.values() );\n      }\n    }\n    \n    SolrCore core = null;\n    // Handle a core creation\n    //---------------------------------------------------------\n    if (action == MultiCoreAction.CREATE) {\n      CoreDescriptor dcore = new CoreDescriptor();\n      dcore.init(params.get(MultiCoreParams.NAME),\n                params.get(MultiCoreParams.INSTANCE_DIR));\n      \n      // fillup optional parameters\n      String opts = params.get(MultiCoreParams.CONFIG);\n      if (opts != null)\n        dcore.setConfigName(opts);\n      \n      opts = params.get(MultiCoreParams.SCHEMA);\n      if (opts != null)\n        dcore.setSchemaName(opts);\n      \n      core = manager.create(dcore);\n      rsp.add(\"core\", core.getName());\n      do_persist = manager.isPersistent();\n    }\n    else {\n      // Select the core\n      String cname = params.get( MultiCoreParams.CORE );\n      if( cname != null ) {\n        core = manager.getCore(cname);\n        if( core == null ) {\n          throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n              \"Unknown core: \"+cname );\n        }\n      }\n\n      // Handle a Status Request\n      //---------------------------------------------------------\n      if( action == MultiCoreAction.STATUS ) {\n        do_persist = false; // no state change\n        NamedList<Object> status = new SimpleOrderedMap<Object>();\n        if( core == null ) {\n          for (CoreDescriptor d : manager.getDescriptors()) {\n            status.add(d.getName(), getCoreStatus( d.getCore() ) );\n          }\n        } \n        else {\n          status.add(core.getName(), getCoreStatus(core) );\n        }\n        rsp.add( \"status\", status );\n      } \n      else if (core == null) {\n        throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n          \"Action '\"+action+\"' requires a core name.\" );\n      } \n      else {\n        // Handle all other\n        //---------------------------------------------------------\n        do_persist = params.getBool(MultiCoreParams.PERSISTENT, manager.isPersistent());\n        switch( action ) {\n          case RELOAD: {\n            manager.reload( manager.getDescriptor( core.getName() ) );\n            do_persist = false; // no change on reload\n            break;\n          }\n  \n          case SWAP: {\n            String name = required.get( MultiCoreParams.WITH );\n            CoreDescriptor swap = manager.getDescriptor( name );\n            \n            if( swap == null ) {\n              throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n                  \"Unknown core: \"+name );\n            }\n            manager.swap( manager.getDescriptor( core.getName() ), swap );\n            break;\n          } \n        \n          case PERSIST: {\n            do_persist = true;\n            break;\n          } \n          \n          default: {\n            throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n                \"TODO: IMPLEMENT: \" + action );\n          }\n        } // switch\n      }\n    }\n    \n    // Should we persist the changes?\n    if (do_persist) {\n      manager.persist();\n      rsp.add(\"saved\", manager.getConfigFile().getAbsolutePath());\n    }\n  }\n\n","sourceOld":"  @Override\n  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws Exception \n  {\n    // Make sure the manager is enabled\n    MultiCore manager = MultiCore.getRegistry();\n    if( !manager.isEnabled() ) {\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n          \"MultiCore support must be enabled at startup.\" );\n    }\n    \n    // Pick the action\n    SolrParams params = req.getParams();\n    SolrParams required = params.required();\n    MultiCoreAction action = MultiCoreAction.STATUS;\n    String a = params.get( MultiCoreParams.ACTION );\n    if( a != null ) {\n      action = MultiCoreAction.get( a );\n      if( action == null ) {\n        throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n          \"Unknown 'action' value.  Use: \"+MultiCoreAction.values() );\n      }\n    }\n    \n    // Select the core\n    SolrCore core = null;\n    String cname = params.get( MultiCoreParams.CORE );\n    if( cname != null ) {\n      core = manager.getCore( cname );\n      if( core == null ) {\n        throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n            \"Unknown core: \"+cname );\n      }\n    }\n    \n    // Handle a Status Request\n    //---------------------------------------------------------\n    if( action == MultiCoreAction.STATUS ) {\n      SolrCore defaultCore = manager.getDefaultCore();\n      NamedList<Object> status = new SimpleOrderedMap<Object>();\n      if( core == null ) {\n        for( SolrCore c : manager.getCores() ) {\n          status.add( c.getName(), getCoreStatus( c, c==defaultCore ) );\n        }\n      }\n      else {\n        status.add( core.getName(), getCoreStatus( core, core==defaultCore ) );\n      }\n      rsp.add( \"status\", status );\n    }\n    else if( core == null ) {\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n        \"Action '\"+action+\"' requires a core name.\" );\n    }\n    else {\n      switch( action ) {\n      \n      case RELOAD: {\n        manager.reload( core );\n        break;\n      } \n\n      case SWAP: {\n        String name = required.get( MultiCoreParams.WITH );\n        SolrCore swap = manager.getCore( name );\n        if( swap == null ) {\n          throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n              \"Unknown core: \"+name );\n        }\n        manager.swap( core, swap );\n        break;\n      } \n        \n      default:\n        throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n            \"TODO: IMPLEMENT: \" + action );\n      }\n\n      // Should we persist the changes?\n      if( params.getBool( MultiCoreParams.PERSISTENT, manager.isPersistent() ) ) {\n        rsp.add( \"TODO\", \"SAVE THE CHANGES: \"+manager.getConfigFile().getAbsolutePath() );\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"58b41d4093a9662306bdc051e4b46643deff70de","date":1205090944,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/admin/MultiCoreHandler#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"src/java/org/apache/solr/handler/admin/MultiCoreHandler#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  @Override\n  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws Exception \n  {\n    // Make sure the manager is enabled\n    MultiCore manager = getMultiCore();\n    if( !manager.isEnabled() ) {\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n          \"MultiCore support must be enabled at startup.\" );\n    }\n    boolean do_persist = false;\n    \n    // Pick the action\n    SolrParams params = req.getParams();\n    SolrParams required = params.required();\n    MultiCoreAction action = MultiCoreAction.STATUS;\n    String a = params.get( MultiCoreParams.ACTION );\n    if( a != null ) {\n      action = MultiCoreAction.get( a );\n      if( action == null ) {\n        throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n          \"Unknown 'action' value.  Use: \"+MultiCoreAction.values() );\n      }\n    }\n    \n    SolrCore core = null;\n    // Handle a core creation\n    //---------------------------------------------------------\n    if (action == MultiCoreAction.CREATE) {\n      CoreDescriptor dcore = new CoreDescriptor();\n      dcore.init(params.get(MultiCoreParams.NAME),\n                params.get(MultiCoreParams.INSTANCE_DIR));\n      \n      // fillup optional parameters\n      String opts = params.get(MultiCoreParams.CONFIG);\n      if (opts != null)\n        dcore.setConfigName(opts);\n      \n      opts = params.get(MultiCoreParams.SCHEMA);\n      if (opts != null)\n        dcore.setSchemaName(opts);\n      \n      core = manager.create(dcore);\n      rsp.add(\"core\", core.getName());\n      do_persist = manager.isPersistent();\n    }\n    else {\n      // Select the core\n      String cname = params.get( MultiCoreParams.CORE );\n      if( cname != null ) {\n        core = manager.getCore(cname);\n        if( core == null ) {\n          throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n              \"Unknown core: \"+cname );\n        }\n      }\n\n      // Handle a Status Request\n      //---------------------------------------------------------\n      if( action == MultiCoreAction.STATUS ) {\n        do_persist = false; // no state change\n        NamedList<Object> status = new SimpleOrderedMap<Object>();\n        if( core == null ) {\n          for (CoreDescriptor d : manager.getDescriptors()) {\n            status.add(d.getName(), getCoreStatus( d.getCore() ) );\n          }\n        } \n        else {\n          status.add(core.getName(), getCoreStatus(core) );\n        }\n        rsp.add( \"status\", status );\n      } \n      else if (core == null) {\n        throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n          \"Action '\"+action+\"' requires a core name.\" );\n      } \n      else {\n        // Handle all other\n        //---------------------------------------------------------\n        do_persist = params.getBool(MultiCoreParams.PERSISTENT, manager.isPersistent());\n        switch( action ) {\n          case RELOAD: {\n            manager.reload( manager.getDescriptor( core.getName() ) );\n            do_persist = false; // no change on reload\n            break;\n          }\n  \n          case SWAP: {\n            String name = required.get( MultiCoreParams.WITH );\n            CoreDescriptor swap = manager.getDescriptor( name );\n            \n            if( swap == null ) {\n              throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n                  \"Unknown core: \"+name );\n            }\n            manager.swap( manager.getDescriptor( core.getName() ), swap );\n            break;\n          } \n        \n          case PERSIST: {\n            do_persist = true;\n            break;\n          } \n          \n          default: {\n            throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n                \"TODO: IMPLEMENT: \" + action );\n          }\n        } // switch\n      }\n    }\n    \n    // Should we persist the changes?\n    if (do_persist) {\n      manager.persist();\n      rsp.add(\"saved\", manager.getConfigFile().getAbsolutePath());\n    }\n  }\n\n","sourceOld":"  @Override\n  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws Exception \n  {\n    // Make sure the manager is enabled\n    MultiCore manager = MultiCore.getRegistry();\n    if( !manager.isEnabled() ) {\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n          \"MultiCore support must be enabled at startup.\" );\n    }\n    boolean do_persist = false;\n    \n    // Pick the action\n    SolrParams params = req.getParams();\n    SolrParams required = params.required();\n    MultiCoreAction action = MultiCoreAction.STATUS;\n    String a = params.get( MultiCoreParams.ACTION );\n    if( a != null ) {\n      action = MultiCoreAction.get( a );\n      if( action == null ) {\n        throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n          \"Unknown 'action' value.  Use: \"+MultiCoreAction.values() );\n      }\n    }\n    \n    SolrCore core = null;\n    // Handle a core creation\n    //---------------------------------------------------------\n    if (action == MultiCoreAction.CREATE) {\n      CoreDescriptor dcore = new CoreDescriptor();\n      dcore.init(params.get(MultiCoreParams.NAME),\n                params.get(MultiCoreParams.INSTANCE_DIR));\n      \n      // fillup optional parameters\n      String opts = params.get(MultiCoreParams.CONFIG);\n      if (opts != null)\n        dcore.setConfigName(opts);\n      \n      opts = params.get(MultiCoreParams.SCHEMA);\n      if (opts != null)\n        dcore.setSchemaName(opts);\n      \n      core = manager.create(dcore);\n      rsp.add(\"core\", core.getName());\n      do_persist = manager.isPersistent();\n    }\n    else {\n      // Select the core\n      String cname = params.get( MultiCoreParams.CORE );\n      if( cname != null ) {\n        core = manager.getCore(cname);\n        if( core == null ) {\n          throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n              \"Unknown core: \"+cname );\n        }\n      }\n\n      // Handle a Status Request\n      //---------------------------------------------------------\n      if( action == MultiCoreAction.STATUS ) {\n        do_persist = false; // no state change\n        NamedList<Object> status = new SimpleOrderedMap<Object>();\n        if( core == null ) {\n          for (CoreDescriptor d : manager.getDescriptors()) {\n            status.add(d.getName(), getCoreStatus( d.getCore() ) );\n          }\n        } \n        else {\n          status.add(core.getName(), getCoreStatus(core) );\n        }\n        rsp.add( \"status\", status );\n      } \n      else if (core == null) {\n        throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n          \"Action '\"+action+\"' requires a core name.\" );\n      } \n      else {\n        // Handle all other\n        //---------------------------------------------------------\n        do_persist = params.getBool(MultiCoreParams.PERSISTENT, manager.isPersistent());\n        switch( action ) {\n          case RELOAD: {\n            manager.reload( manager.getDescriptor( core.getName() ) );\n            do_persist = false; // no change on reload\n            break;\n          }\n  \n          case SWAP: {\n            String name = required.get( MultiCoreParams.WITH );\n            CoreDescriptor swap = manager.getDescriptor( name );\n            \n            if( swap == null ) {\n              throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n                  \"Unknown core: \"+name );\n            }\n            manager.swap( manager.getDescriptor( core.getName() ), swap );\n            break;\n          } \n        \n          case PERSIST: {\n            do_persist = true;\n            break;\n          } \n          \n          default: {\n            throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n                \"TODO: IMPLEMENT: \" + action );\n          }\n        } // switch\n      }\n    }\n    \n    // Should we persist the changes?\n    if (do_persist) {\n      manager.persist();\n      rsp.add(\"saved\", manager.getConfigFile().getAbsolutePath());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d5151046764fb8d9662e02d6c5381b2adb69f96d","date":1216394962,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/admin/MultiCoreHandler#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"src/java/org/apache/solr/handler/admin/MultiCoreHandler#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  @Override\n  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws Exception \n  {\n    // Make sure the manager is enabled\n    MultiCore manager = getMultiCore();\n    if( !manager.isEnabled() ) {\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n          \"MultiCore support must be enabled at startup.\" );\n    }\n    boolean do_persist = false;\n    \n    // Pick the action\n    SolrParams params = req.getParams();\n    SolrParams required = params.required();\n    MultiCoreAction action = MultiCoreAction.STATUS;\n    String a = params.get( MultiCoreParams.ACTION );\n    if( a != null ) {\n      action = MultiCoreAction.get( a );\n      if( action == null ) {\n        throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n          \"Unknown 'action' value.  Use: \"+MultiCoreAction.values() );\n      }\n    }\n    \n    SolrCore core = null;\n    // Handle a core creation\n    //---------------------------------------------------------\n    if (action == MultiCoreAction.CREATE) {\n      CoreDescriptor dcore = new CoreDescriptor(manager);\n      dcore.init(params.get(MultiCoreParams.NAME),\n                params.get(MultiCoreParams.INSTANCE_DIR));\n      \n      // fillup optional parameters\n      String opts = params.get(MultiCoreParams.CONFIG);\n      if (opts != null)\n        dcore.setConfigName(opts);\n      \n      opts = params.get(MultiCoreParams.SCHEMA);\n      if (opts != null)\n        dcore.setSchemaName(opts);\n      \n      core = manager.create(dcore);\n      rsp.add(\"core\", core.getName());\n      do_persist = manager.isPersistent();\n    }\n    else {\n      // Select the core\n      String cname = params.get( MultiCoreParams.CORE );\n      if( cname != null ) {\n        core = manager.getCore(cname);\n        if( core == null ) {\n          throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n              \"Unknown core: \"+cname );\n        }\n      }\n\n      // Handle a Status Request\n      //---------------------------------------------------------\n      if( action == MultiCoreAction.STATUS ) {\n        do_persist = false; // no state change\n        NamedList<Object> status = new SimpleOrderedMap<Object>();\n        if( core == null ) {\n          for (CoreDescriptor d : manager.getDescriptors()) {\n            status.add(d.getName(), getCoreStatus( d.getCore() ) );\n          }\n        } \n        else {\n          status.add(core.getName(), getCoreStatus(core) );\n        }\n        rsp.add( \"status\", status );\n      } \n      else if (core == null) {\n        throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n          \"Action '\"+action+\"' requires a core name.\" );\n      } \n      else {\n        // Handle all other\n        //---------------------------------------------------------\n        do_persist = params.getBool(MultiCoreParams.PERSISTENT, manager.isPersistent());\n        switch( action ) {\n          case RELOAD: {\n            manager.reload( manager.getDescriptor( core.getName() ) );\n            do_persist = false; // no change on reload\n            break;\n          }\n  \n          case SWAP: {\n            String name = required.get( MultiCoreParams.WITH );\n            CoreDescriptor swap = manager.getDescriptor( name );\n            \n            if( swap == null ) {\n              throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n                  \"Unknown core: \"+name );\n            }\n            manager.swap( manager.getDescriptor( core.getName() ), swap );\n            break;\n          } \n        \n          case PERSIST: {\n            do_persist = true;\n            break;\n          } \n          \n          default: {\n            throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n                \"TODO: IMPLEMENT: \" + action );\n          }\n        } // switch\n      }\n    }\n    \n    // Should we persist the changes?\n    if (do_persist) {\n      manager.persist();\n      rsp.add(\"saved\", manager.getConfigFile().getAbsolutePath());\n    }\n  }\n\n","sourceOld":"  @Override\n  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws Exception \n  {\n    // Make sure the manager is enabled\n    MultiCore manager = getMultiCore();\n    if( !manager.isEnabled() ) {\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n          \"MultiCore support must be enabled at startup.\" );\n    }\n    boolean do_persist = false;\n    \n    // Pick the action\n    SolrParams params = req.getParams();\n    SolrParams required = params.required();\n    MultiCoreAction action = MultiCoreAction.STATUS;\n    String a = params.get( MultiCoreParams.ACTION );\n    if( a != null ) {\n      action = MultiCoreAction.get( a );\n      if( action == null ) {\n        throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n          \"Unknown 'action' value.  Use: \"+MultiCoreAction.values() );\n      }\n    }\n    \n    SolrCore core = null;\n    // Handle a core creation\n    //---------------------------------------------------------\n    if (action == MultiCoreAction.CREATE) {\n      CoreDescriptor dcore = new CoreDescriptor();\n      dcore.init(params.get(MultiCoreParams.NAME),\n                params.get(MultiCoreParams.INSTANCE_DIR));\n      \n      // fillup optional parameters\n      String opts = params.get(MultiCoreParams.CONFIG);\n      if (opts != null)\n        dcore.setConfigName(opts);\n      \n      opts = params.get(MultiCoreParams.SCHEMA);\n      if (opts != null)\n        dcore.setSchemaName(opts);\n      \n      core = manager.create(dcore);\n      rsp.add(\"core\", core.getName());\n      do_persist = manager.isPersistent();\n    }\n    else {\n      // Select the core\n      String cname = params.get( MultiCoreParams.CORE );\n      if( cname != null ) {\n        core = manager.getCore(cname);\n        if( core == null ) {\n          throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n              \"Unknown core: \"+cname );\n        }\n      }\n\n      // Handle a Status Request\n      //---------------------------------------------------------\n      if( action == MultiCoreAction.STATUS ) {\n        do_persist = false; // no state change\n        NamedList<Object> status = new SimpleOrderedMap<Object>();\n        if( core == null ) {\n          for (CoreDescriptor d : manager.getDescriptors()) {\n            status.add(d.getName(), getCoreStatus( d.getCore() ) );\n          }\n        } \n        else {\n          status.add(core.getName(), getCoreStatus(core) );\n        }\n        rsp.add( \"status\", status );\n      } \n      else if (core == null) {\n        throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n          \"Action '\"+action+\"' requires a core name.\" );\n      } \n      else {\n        // Handle all other\n        //---------------------------------------------------------\n        do_persist = params.getBool(MultiCoreParams.PERSISTENT, manager.isPersistent());\n        switch( action ) {\n          case RELOAD: {\n            manager.reload( manager.getDescriptor( core.getName() ) );\n            do_persist = false; // no change on reload\n            break;\n          }\n  \n          case SWAP: {\n            String name = required.get( MultiCoreParams.WITH );\n            CoreDescriptor swap = manager.getDescriptor( name );\n            \n            if( swap == null ) {\n              throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n                  \"Unknown core: \"+name );\n            }\n            manager.swap( manager.getDescriptor( core.getName() ), swap );\n            break;\n          } \n        \n          case PERSIST: {\n            do_persist = true;\n            break;\n          } \n          \n          default: {\n            throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n                \"TODO: IMPLEMENT: \" + action );\n          }\n        } // switch\n      }\n    }\n    \n    // Should we persist the changes?\n    if (do_persist) {\n      manager.persist();\n      rsp.add(\"saved\", manager.getConfigFile().getAbsolutePath());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9c74b2e17824ac88cefd4b764b4b9f2c56ceeea5","date":1218639440,"type":5,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/handler/admin/CoreAdminHandler#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"src/java/org/apache/solr/handler/admin/MultiCoreHandler#handleRequestBody(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  @Override\n  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws Exception \n  {\n    // Make sure the manager is enabled\n    CoreContainer manager = getMultiCore();\n    if( !manager.isEnabled() ) {\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n          \"CoreContainer support must be enabled at startup.\" );\n    }\n    boolean do_persist = false;\n    \n    // Pick the action\n    SolrParams params = req.getParams();\n    SolrParams required = params.required();\n    MultiCoreAction action = MultiCoreAction.STATUS;\n    String a = params.get( MultiCoreParams.ACTION );\n    if( a != null ) {\n      action = MultiCoreAction.get( a );\n      if( action == null ) {\n        throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n          \"Unknown 'action' value.  Use: \"+MultiCoreAction.values() );\n      }\n    }\n    \n    SolrCore core = null;\n    // Handle a core creation\n    //---------------------------------------------------------\n    if (action == MultiCoreAction.CREATE) {\n      CoreDescriptor dcore = new CoreDescriptor(manager);\n      dcore.init(params.get(MultiCoreParams.NAME),\n                params.get(MultiCoreParams.INSTANCE_DIR));\n      \n      // fillup optional parameters\n      String opts = params.get(MultiCoreParams.CONFIG);\n      if (opts != null)\n        dcore.setConfigName(opts);\n      \n      opts = params.get(MultiCoreParams.SCHEMA);\n      if (opts != null)\n        dcore.setSchemaName(opts);\n      \n      core = manager.create(dcore);\n      rsp.add(\"core\", core.getName());\n      do_persist = manager.isPersistent();\n    }\n    else {\n      // Select the core\n      String cname = params.get( MultiCoreParams.CORE );\n      if( cname != null ) {\n        core = manager.getCore(cname);\n        if( core == null ) {\n          throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n              \"Unknown core: \"+cname );\n        }\n      }\n\n      // Handle a Status Request\n      //---------------------------------------------------------\n      if( action == MultiCoreAction.STATUS ) {\n        do_persist = false; // no state change\n        NamedList<Object> status = new SimpleOrderedMap<Object>();\n        if( core == null ) {\n          for (CoreDescriptor d : manager.getDescriptors()) {\n            status.add(d.getName(), getCoreStatus( d.getCore() ) );\n          }\n        } \n        else {\n          status.add(core.getName(), getCoreStatus(core) );\n        }\n        rsp.add( \"status\", status );\n      } \n      else if (core == null) {\n        throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n          \"Action '\"+action+\"' requires a core name.\" );\n      } \n      else {\n        // Handle all other\n        //---------------------------------------------------------\n        do_persist = params.getBool(MultiCoreParams.PERSISTENT, manager.isPersistent());\n        switch( action ) {\n          case RELOAD: {\n            manager.reload( manager.getDescriptor( core.getName() ) );\n            do_persist = false; // no change on reload\n            break;\n          }\n  \n          case SWAP: {\n            String name = required.get( MultiCoreParams.WITH );\n            CoreDescriptor swap = manager.getDescriptor( name );\n            \n            if( swap == null ) {\n              throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n                  \"Unknown core: \"+name );\n            }\n            manager.swap( manager.getDescriptor( core.getName() ), swap );\n            break;\n          } \n        \n          case PERSIST: {\n            do_persist = true;\n            break;\n          } \n          \n          default: {\n            throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n                \"TODO: IMPLEMENT: \" + action );\n          }\n        } // switch\n      }\n    }\n    \n    // Should we persist the changes?\n    if (do_persist) {\n      manager.persist();\n      rsp.add(\"saved\", manager.getConfigFile().getAbsolutePath());\n    }\n  }\n\n","sourceOld":"  @Override\n  public void handleRequestBody(SolrQueryRequest req, SolrQueryResponse rsp) throws Exception \n  {\n    // Make sure the manager is enabled\n    MultiCore manager = getMultiCore();\n    if( !manager.isEnabled() ) {\n      throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n          \"MultiCore support must be enabled at startup.\" );\n    }\n    boolean do_persist = false;\n    \n    // Pick the action\n    SolrParams params = req.getParams();\n    SolrParams required = params.required();\n    MultiCoreAction action = MultiCoreAction.STATUS;\n    String a = params.get( MultiCoreParams.ACTION );\n    if( a != null ) {\n      action = MultiCoreAction.get( a );\n      if( action == null ) {\n        throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n          \"Unknown 'action' value.  Use: \"+MultiCoreAction.values() );\n      }\n    }\n    \n    SolrCore core = null;\n    // Handle a core creation\n    //---------------------------------------------------------\n    if (action == MultiCoreAction.CREATE) {\n      CoreDescriptor dcore = new CoreDescriptor(manager);\n      dcore.init(params.get(MultiCoreParams.NAME),\n                params.get(MultiCoreParams.INSTANCE_DIR));\n      \n      // fillup optional parameters\n      String opts = params.get(MultiCoreParams.CONFIG);\n      if (opts != null)\n        dcore.setConfigName(opts);\n      \n      opts = params.get(MultiCoreParams.SCHEMA);\n      if (opts != null)\n        dcore.setSchemaName(opts);\n      \n      core = manager.create(dcore);\n      rsp.add(\"core\", core.getName());\n      do_persist = manager.isPersistent();\n    }\n    else {\n      // Select the core\n      String cname = params.get( MultiCoreParams.CORE );\n      if( cname != null ) {\n        core = manager.getCore(cname);\n        if( core == null ) {\n          throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n              \"Unknown core: \"+cname );\n        }\n      }\n\n      // Handle a Status Request\n      //---------------------------------------------------------\n      if( action == MultiCoreAction.STATUS ) {\n        do_persist = false; // no state change\n        NamedList<Object> status = new SimpleOrderedMap<Object>();\n        if( core == null ) {\n          for (CoreDescriptor d : manager.getDescriptors()) {\n            status.add(d.getName(), getCoreStatus( d.getCore() ) );\n          }\n        } \n        else {\n          status.add(core.getName(), getCoreStatus(core) );\n        }\n        rsp.add( \"status\", status );\n      } \n      else if (core == null) {\n        throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n          \"Action '\"+action+\"' requires a core name.\" );\n      } \n      else {\n        // Handle all other\n        //---------------------------------------------------------\n        do_persist = params.getBool(MultiCoreParams.PERSISTENT, manager.isPersistent());\n        switch( action ) {\n          case RELOAD: {\n            manager.reload( manager.getDescriptor( core.getName() ) );\n            do_persist = false; // no change on reload\n            break;\n          }\n  \n          case SWAP: {\n            String name = required.get( MultiCoreParams.WITH );\n            CoreDescriptor swap = manager.getDescriptor( name );\n            \n            if( swap == null ) {\n              throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n                  \"Unknown core: \"+name );\n            }\n            manager.swap( manager.getDescriptor( core.getName() ), swap );\n            break;\n          } \n        \n          case PERSIST: {\n            do_persist = true;\n            break;\n          } \n          \n          default: {\n            throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,\n                \"TODO: IMPLEMENT: \" + action );\n          }\n        } // switch\n      }\n    }\n    \n    // Should we persist the changes?\n    if (do_persist) {\n      manager.persist();\n      rsp.add(\"saved\", manager.getConfigFile().getAbsolutePath());\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d5151046764fb8d9662e02d6c5381b2adb69f96d":["58b41d4093a9662306bdc051e4b46643deff70de"],"048361614025800e582bfc7a7b0329dc6fd6a95e":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6dc6ab6902f8f70ae43365947ccf44c25986906d":["1a45fbd60083428b1b13884c5c8c2e33e7e71ee7"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"58b41d4093a9662306bdc051e4b46643deff70de":["6dc6ab6902f8f70ae43365947ccf44c25986906d"],"9c74b2e17824ac88cefd4b764b4b9f2c56ceeea5":["d5151046764fb8d9662e02d6c5381b2adb69f96d"],"1a45fbd60083428b1b13884c5c8c2e33e7e71ee7":["048361614025800e582bfc7a7b0329dc6fd6a95e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"d5151046764fb8d9662e02d6c5381b2adb69f96d":["9c74b2e17824ac88cefd4b764b4b9f2c56ceeea5"],"048361614025800e582bfc7a7b0329dc6fd6a95e":["1a45fbd60083428b1b13884c5c8c2e33e7e71ee7"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["048361614025800e582bfc7a7b0329dc6fd6a95e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"6dc6ab6902f8f70ae43365947ccf44c25986906d":["58b41d4093a9662306bdc051e4b46643deff70de"],"58b41d4093a9662306bdc051e4b46643deff70de":["d5151046764fb8d9662e02d6c5381b2adb69f96d"],"9c74b2e17824ac88cefd4b764b4b9f2c56ceeea5":[],"1a45fbd60083428b1b13884c5c8c2e33e7e71ee7":["6dc6ab6902f8f70ae43365947ccf44c25986906d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["9c74b2e17824ac88cefd4b764b4b9f2c56ceeea5","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}