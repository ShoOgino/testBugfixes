{"path":"solr/core/src/java/org/apache/solr/handler/component/DateFacetProcessor#getFacetDateCounts().mjava","commits":[{"id":"22d0a81a05eba47d5e18976f17d88306b218cc22","date":1436341569,"type":1,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/DateFacetProcessor#getFacetDateCounts().mjava","pathOld":"solr/core/src/java/org/apache/solr/request/SimpleFacets#getFacetDateCounts().mjava","sourceNew":"  /**\n   * Returns a list of value constraints and the associated facet counts\n   * for each facet date field, range, and interval specified in the\n   * SolrParams\n   *\n   * @see FacetParams#FACET_DATE\n   * @deprecated Use getFacetRangeCounts which is more generalized\n   */\n  @Deprecated\n  public NamedList<Object> getFacetDateCounts()\n      throws IOException {\n\n    final NamedList<Object> resOuter = new SimpleOrderedMap<>();\n    final String[] fields = global.getParams(FacetParams.FACET_DATE);\n\n    if (null == fields || 0 == fields.length) return resOuter;\n\n    for (String f : fields) {\n      getFacetDateCounts(f, resOuter);\n    }\n\n    return resOuter;\n  }\n\n","sourceOld":"  /**\n   * Returns a list of value constraints and the associated facet counts \n   * for each facet date field, range, and interval specified in the\n   * SolrParams\n   *\n   * @see FacetParams#FACET_DATE\n   * @deprecated Use getFacetRangeCounts which is more generalized\n   */\n  @Deprecated\n  public NamedList<Object> getFacetDateCounts()\n    throws IOException, SyntaxError {\n\n    final NamedList<Object> resOuter = new SimpleOrderedMap<>();\n    final String[] fields = global.getParams(FacetParams.FACET_DATE);\n\n    if (null == fields || 0 == fields.length) return resOuter;\n\n    for (String f : fields) {\n      getFacetDateCounts(f, resOuter);\n    }\n\n    return resOuter;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"15cb24c5fa70ba12290e43b3aa0feab5582863ee","date":1457033685,"type":4,"author":"Steve Rowe","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/handler/component/DateFacetProcessor#getFacetDateCounts().mjava","sourceNew":null,"sourceOld":"  /**\n   * Returns a list of value constraints and the associated facet counts\n   * for each facet date field, range, and interval specified in the\n   * SolrParams\n   *\n   * @see FacetParams#FACET_DATE\n   * @deprecated Use getFacetRangeCounts which is more generalized\n   */\n  @Deprecated\n  public NamedList<Object> getFacetDateCounts()\n      throws IOException {\n\n    final NamedList<Object> resOuter = new SimpleOrderedMap<>();\n    final String[] fields = global.getParams(FacetParams.FACET_DATE);\n\n    if (null == fields || 0 == fields.length) return resOuter;\n\n    for (String f : fields) {\n      getFacetDateCounts(f, resOuter);\n    }\n\n    return resOuter;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cf1a614098b46c9c22afebd7b898ae4d1d2fc273","date":1457088850,"type":4,"author":"Noble Paul","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/handler/component/DateFacetProcessor#getFacetDateCounts().mjava","sourceNew":null,"sourceOld":"  /**\n   * Returns a list of value constraints and the associated facet counts\n   * for each facet date field, range, and interval specified in the\n   * SolrParams\n   *\n   * @see FacetParams#FACET_DATE\n   * @deprecated Use getFacetRangeCounts which is more generalized\n   */\n  @Deprecated\n  public NamedList<Object> getFacetDateCounts()\n      throws IOException {\n\n    final NamedList<Object> resOuter = new SimpleOrderedMap<>();\n    final String[] fields = global.getParams(FacetParams.FACET_DATE);\n\n    if (null == fields || 0 == fields.length) return resOuter;\n\n    for (String f : fields) {\n      getFacetDateCounts(f, resOuter);\n    }\n\n    return resOuter;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"15cb24c5fa70ba12290e43b3aa0feab5582863ee":["22d0a81a05eba47d5e18976f17d88306b218cc22"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"22d0a81a05eba47d5e18976f17d88306b218cc22":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cf1a614098b46c9c22afebd7b898ae4d1d2fc273":["22d0a81a05eba47d5e18976f17d88306b218cc22","15cb24c5fa70ba12290e43b3aa0feab5582863ee"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["cf1a614098b46c9c22afebd7b898ae4d1d2fc273"]},"commit2Childs":{"15cb24c5fa70ba12290e43b3aa0feab5582863ee":["cf1a614098b46c9c22afebd7b898ae4d1d2fc273"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["22d0a81a05eba47d5e18976f17d88306b218cc22"],"22d0a81a05eba47d5e18976f17d88306b218cc22":["15cb24c5fa70ba12290e43b3aa0feab5582863ee","cf1a614098b46c9c22afebd7b898ae4d1d2fc273"],"cf1a614098b46c9c22afebd7b898ae4d1d2fc273":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}