{"path":"lucene/core/src/java/org/apache/lucene/store/RAMInputStream#switchCurrentBuffer(boolean).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/store/RAMInputStream#switchCurrentBuffer(boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/store/RAMInputStream#switchCurrentBuffer(boolean).mjava","sourceNew":"  private final void switchCurrentBuffer(boolean enforceEOF) throws IOException {\n    bufferStart = (long) BUFFER_SIZE * (long) currentBufferIndex;\n    if (currentBufferIndex >= file.numBuffers()) {\n      // end of file reached, no more buffers left\n      if (enforceEOF) {\n        throw new EOFException(\"read past EOF: \" + this);\n      } else {\n        // Force EOF if a read takes place at this position\n        currentBufferIndex--;\n        bufferPosition = BUFFER_SIZE;\n      }\n    } else {\n      currentBuffer = file.getBuffer(currentBufferIndex);\n      bufferPosition = 0;\n      long buflen = length - bufferStart;\n      bufferLength = buflen > BUFFER_SIZE ? BUFFER_SIZE : (int) buflen;\n    }\n  }\n\n","sourceOld":"  private final void switchCurrentBuffer(boolean enforceEOF) throws IOException {\n    bufferStart = (long) BUFFER_SIZE * (long) currentBufferIndex;\n    if (currentBufferIndex >= file.numBuffers()) {\n      // end of file reached, no more buffers left\n      if (enforceEOF) {\n        throw new EOFException(\"read past EOF: \" + this);\n      } else {\n        // Force EOF if a read takes place at this position\n        currentBufferIndex--;\n        bufferPosition = BUFFER_SIZE;\n      }\n    } else {\n      currentBuffer = file.getBuffer(currentBufferIndex);\n      bufferPosition = 0;\n      long buflen = length - bufferStart;\n      bufferLength = buflen > BUFFER_SIZE ? BUFFER_SIZE : (int) buflen;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"18efbc72c32221d05cd225926b1cbab767337ed0","date":1405497626,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/store/RAMInputStream#switchCurrentBuffer(boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/store/RAMInputStream#switchCurrentBuffer(boolean).mjava","sourceNew":"  private final void switchCurrentBuffer(boolean enforceEOF) throws IOException {\n    bufferStart = (long) BUFFER_SIZE * (long) currentBufferIndex;\n    if (bufferStart > length || currentBufferIndex >= file.numBuffers()) {\n      // end of file reached, no more buffers left\n      if (enforceEOF) {\n        throw new EOFException(\"read past EOF: \" + this);\n      } else {\n        // Force EOF if a read takes place at this position\n        currentBufferIndex--;\n        bufferPosition = BUFFER_SIZE;\n      }\n    } else {\n      currentBuffer = file.getBuffer(currentBufferIndex);\n      bufferPosition = 0;\n      long buflen = length - bufferStart;\n      bufferLength = buflen > BUFFER_SIZE ? BUFFER_SIZE : (int) buflen;\n    }\n  }\n\n","sourceOld":"  private final void switchCurrentBuffer(boolean enforceEOF) throws IOException {\n    bufferStart = (long) BUFFER_SIZE * (long) currentBufferIndex;\n    if (currentBufferIndex >= file.numBuffers()) {\n      // end of file reached, no more buffers left\n      if (enforceEOF) {\n        throw new EOFException(\"read past EOF: \" + this);\n      } else {\n        // Force EOF if a read takes place at this position\n        currentBufferIndex--;\n        bufferPosition = BUFFER_SIZE;\n      }\n    } else {\n      currentBuffer = file.getBuffer(currentBufferIndex);\n      bufferPosition = 0;\n      long buflen = length - bufferStart;\n      bufferLength = buflen > BUFFER_SIZE ? BUFFER_SIZE : (int) buflen;\n    }\n  }\n\n","bugFix":["1e64e4308bd25f7fdf6115d689d83d8c2786cf3f"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"43e57158408015b1e7b1079de74aafe822e11811","date":1453058546,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/store/RAMInputStream#switchCurrentBuffer(boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/store/RAMInputStream#switchCurrentBuffer(boolean).mjava","sourceNew":"  private final void switchCurrentBuffer(boolean enforceEOF) throws IOException {\n    bufferStart = (long) BUFFER_SIZE * (long) currentBufferIndex;\n    if (bufferStart > length || currentBufferIndex >= file.numBuffers()) {\n      // end of file reached, no more buffers left\n      if (enforceEOF) {\n        throw new EOFException(\"read past EOF: \" + this);\n      } else {\n        // Force EOF if a read later takes place at this position\n        currentBufferIndex--;\n        bufferPosition = BUFFER_SIZE;\n      }\n    } else {\n      currentBuffer = file.getBuffer(currentBufferIndex);\n      bufferPosition = 0;\n      long buflen = length - bufferStart;\n      bufferLength = buflen > BUFFER_SIZE ? BUFFER_SIZE : (int) buflen;\n    }\n  }\n\n","sourceOld":"  private final void switchCurrentBuffer(boolean enforceEOF) throws IOException {\n    bufferStart = (long) BUFFER_SIZE * (long) currentBufferIndex;\n    if (bufferStart > length || currentBufferIndex >= file.numBuffers()) {\n      // end of file reached, no more buffers left\n      if (enforceEOF) {\n        throw new EOFException(\"read past EOF: \" + this);\n      } else {\n        // Force EOF if a read takes place at this position\n        currentBufferIndex--;\n        bufferPosition = BUFFER_SIZE;\n      }\n    } else {\n      currentBuffer = file.getBuffer(currentBufferIndex);\n      bufferPosition = 0;\n      long buflen = length - bufferStart;\n      bufferLength = buflen > BUFFER_SIZE ? BUFFER_SIZE : (int) buflen;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d4eda6e6a7dc9d9178b430d989fa9e3033edc780","date":1453398628,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/store/RAMInputStream#switchCurrentBuffer(boolean).mjava","sourceNew":null,"sourceOld":"  private final void switchCurrentBuffer(boolean enforceEOF) throws IOException {\n    bufferStart = (long) BUFFER_SIZE * (long) currentBufferIndex;\n    if (bufferStart > length || currentBufferIndex >= file.numBuffers()) {\n      // end of file reached, no more buffers left\n      if (enforceEOF) {\n        throw new EOFException(\"read past EOF: \" + this);\n      } else {\n        // Force EOF if a read later takes place at this position\n        currentBufferIndex--;\n        bufferPosition = BUFFER_SIZE;\n      }\n    } else {\n      currentBuffer = file.getBuffer(currentBufferIndex);\n      bufferPosition = 0;\n      long buflen = length - bufferStart;\n      bufferLength = buflen > BUFFER_SIZE ? BUFFER_SIZE : (int) buflen;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"43e57158408015b1e7b1079de74aafe822e11811":["18efbc72c32221d05cd225926b1cbab767337ed0"],"18efbc72c32221d05cd225926b1cbab767337ed0":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d4eda6e6a7dc9d9178b430d989fa9e3033edc780":["43e57158408015b1e7b1079de74aafe822e11811"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d4eda6e6a7dc9d9178b430d989fa9e3033edc780"]},"commit2Childs":{"43e57158408015b1e7b1079de74aafe822e11811":["d4eda6e6a7dc9d9178b430d989fa9e3033edc780"],"18efbc72c32221d05cd225926b1cbab767337ed0":["43e57158408015b1e7b1079de74aafe822e11811"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["18efbc72c32221d05cd225926b1cbab767337ed0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"d4eda6e6a7dc9d9178b430d989fa9e3033edc780":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}