{"path":"solr/core/src/java/org/apache/solr/handler/JsonLoader#parseAdd().mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/JsonLoader#parseAdd().mjava","pathOld":"solr/src/java/org/apache/solr/handler/JsonLoader#parseAdd().mjava","sourceNew":"  AddUpdateCommand parseAdd() throws IOException\n  {\n    AddUpdateCommand cmd = new AddUpdateCommand(req);\n    cmd.commitWithin = commitWithin;\n    cmd.overwrite = overwrite;\n\n    float boost = 1.0f;\n    \n    while( true ) {\n      int ev = parser.nextEvent();\n      if( ev == JSONParser.STRING ) {\n        if( parser.wasKey() ) {\n          String key = parser.getString();\n          if( \"doc\".equals( key ) ) {\n            if( cmd.solrDoc != null ) {\n              throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"multiple docs in same add command\" );\n            }\n            ev = assertNextEvent( JSONParser.OBJECT_START );\n            cmd.solrDoc = parseDoc( ev );\n          }\n          else if( XmlUpdateRequestHandler.OVERWRITE.equals( key ) ) {\n            cmd.overwrite = parser.getBoolean(); // reads next boolean\n          }\n          else if( XmlUpdateRequestHandler.COMMIT_WITHIN.equals( key ) ) {\n            cmd.commitWithin = (int)parser.getLong();\n          }\n          else if( \"boost\".equals( key ) ) {\n            boost = Float.parseFloat( parser.getNumberChars().toString() );\n          }\n          else {\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Unknown key: \"+key+\" [\"+parser.getPosition()+\"]\" );\n          }\n        }\n        else {\n          throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n              \"Should be a key \"\n              +\" at [\"+parser.getPosition()+\"]\" );\n        }\n      }\n      else if( ev == JSONParser.OBJECT_END ) {\n        if( cmd.solrDoc == null ) {\n          throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\"missing solr document. \"+parser.getPosition() );\n        }\n        cmd.solrDoc.setDocumentBoost( boost ); \n        return cmd;\n      }\n      else {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n            \"Got: \"+JSONParser.getEventString( ev  )\n            +\" at [\"+parser.getPosition()+\"]\" );\n      }\n    }\n  }\n\n","sourceOld":"  AddUpdateCommand parseAdd() throws IOException\n  {\n    AddUpdateCommand cmd = new AddUpdateCommand(req);\n    cmd.commitWithin = commitWithin;\n    cmd.overwrite = overwrite;\n\n    float boost = 1.0f;\n    \n    while( true ) {\n      int ev = parser.nextEvent();\n      if( ev == JSONParser.STRING ) {\n        if( parser.wasKey() ) {\n          String key = parser.getString();\n          if( \"doc\".equals( key ) ) {\n            if( cmd.solrDoc != null ) {\n              throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"multiple docs in same add command\" );\n            }\n            ev = assertNextEvent( JSONParser.OBJECT_START );\n            cmd.solrDoc = parseDoc( ev );\n          }\n          else if( XmlUpdateRequestHandler.OVERWRITE.equals( key ) ) {\n            cmd.overwrite = parser.getBoolean(); // reads next boolean\n          }\n          else if( XmlUpdateRequestHandler.COMMIT_WITHIN.equals( key ) ) {\n            cmd.commitWithin = (int)parser.getLong();\n          }\n          else if( \"boost\".equals( key ) ) {\n            boost = Float.parseFloat( parser.getNumberChars().toString() );\n          }\n          else {\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Unknown key: \"+key+\" [\"+parser.getPosition()+\"]\" );\n          }\n        }\n        else {\n          throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n              \"Should be a key \"\n              +\" at [\"+parser.getPosition()+\"]\" );\n        }\n      }\n      else if( ev == JSONParser.OBJECT_END ) {\n        if( cmd.solrDoc == null ) {\n          throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\"missing solr document. \"+parser.getPosition() );\n        }\n        cmd.solrDoc.setDocumentBoost( boost ); \n        return cmd;\n      }\n      else {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n            \"Got: \"+JSONParser.getEventString( ev  )\n            +\" at [\"+parser.getPosition()+\"]\" );\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/JsonLoader#parseAdd().mjava","pathOld":"solr/src/java/org/apache/solr/handler/JsonLoader#parseAdd().mjava","sourceNew":"  AddUpdateCommand parseAdd() throws IOException\n  {\n    AddUpdateCommand cmd = new AddUpdateCommand(req);\n    cmd.commitWithin = commitWithin;\n    cmd.overwrite = overwrite;\n\n    float boost = 1.0f;\n    \n    while( true ) {\n      int ev = parser.nextEvent();\n      if( ev == JSONParser.STRING ) {\n        if( parser.wasKey() ) {\n          String key = parser.getString();\n          if( \"doc\".equals( key ) ) {\n            if( cmd.solrDoc != null ) {\n              throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"multiple docs in same add command\" );\n            }\n            ev = assertNextEvent( JSONParser.OBJECT_START );\n            cmd.solrDoc = parseDoc( ev );\n          }\n          else if( XmlUpdateRequestHandler.OVERWRITE.equals( key ) ) {\n            cmd.overwrite = parser.getBoolean(); // reads next boolean\n          }\n          else if( XmlUpdateRequestHandler.COMMIT_WITHIN.equals( key ) ) {\n            cmd.commitWithin = (int)parser.getLong();\n          }\n          else if( \"boost\".equals( key ) ) {\n            boost = Float.parseFloat( parser.getNumberChars().toString() );\n          }\n          else {\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Unknown key: \"+key+\" [\"+parser.getPosition()+\"]\" );\n          }\n        }\n        else {\n          throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n              \"Should be a key \"\n              +\" at [\"+parser.getPosition()+\"]\" );\n        }\n      }\n      else if( ev == JSONParser.OBJECT_END ) {\n        if( cmd.solrDoc == null ) {\n          throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\"missing solr document. \"+parser.getPosition() );\n        }\n        cmd.solrDoc.setDocumentBoost( boost ); \n        return cmd;\n      }\n      else {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n            \"Got: \"+JSONParser.getEventString( ev  )\n            +\" at [\"+parser.getPosition()+\"]\" );\n      }\n    }\n  }\n\n","sourceOld":"  AddUpdateCommand parseAdd() throws IOException\n  {\n    AddUpdateCommand cmd = new AddUpdateCommand(req);\n    cmd.commitWithin = commitWithin;\n    cmd.overwrite = overwrite;\n\n    float boost = 1.0f;\n    \n    while( true ) {\n      int ev = parser.nextEvent();\n      if( ev == JSONParser.STRING ) {\n        if( parser.wasKey() ) {\n          String key = parser.getString();\n          if( \"doc\".equals( key ) ) {\n            if( cmd.solrDoc != null ) {\n              throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"multiple docs in same add command\" );\n            }\n            ev = assertNextEvent( JSONParser.OBJECT_START );\n            cmd.solrDoc = parseDoc( ev );\n          }\n          else if( XmlUpdateRequestHandler.OVERWRITE.equals( key ) ) {\n            cmd.overwrite = parser.getBoolean(); // reads next boolean\n          }\n          else if( XmlUpdateRequestHandler.COMMIT_WITHIN.equals( key ) ) {\n            cmd.commitWithin = (int)parser.getLong();\n          }\n          else if( \"boost\".equals( key ) ) {\n            boost = Float.parseFloat( parser.getNumberChars().toString() );\n          }\n          else {\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Unknown key: \"+key+\" [\"+parser.getPosition()+\"]\" );\n          }\n        }\n        else {\n          throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n              \"Should be a key \"\n              +\" at [\"+parser.getPosition()+\"]\" );\n        }\n      }\n      else if( ev == JSONParser.OBJECT_END ) {\n        if( cmd.solrDoc == null ) {\n          throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\"missing solr document. \"+parser.getPosition() );\n        }\n        cmd.solrDoc.setDocumentBoost( boost ); \n        return cmd;\n      }\n      else {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n            \"Got: \"+JSONParser.getEventString( ev  )\n            +\" at [\"+parser.getPosition()+\"]\" );\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/JsonLoader#parseAdd().mjava","pathOld":"solr/src/java/org/apache/solr/handler/JsonLoader#parseAdd().mjava","sourceNew":"  AddUpdateCommand parseAdd() throws IOException\n  {\n    AddUpdateCommand cmd = new AddUpdateCommand(req);\n    cmd.commitWithin = commitWithin;\n    cmd.overwrite = overwrite;\n\n    float boost = 1.0f;\n    \n    while( true ) {\n      int ev = parser.nextEvent();\n      if( ev == JSONParser.STRING ) {\n        if( parser.wasKey() ) {\n          String key = parser.getString();\n          if( \"doc\".equals( key ) ) {\n            if( cmd.solrDoc != null ) {\n              throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"multiple docs in same add command\" );\n            }\n            ev = assertNextEvent( JSONParser.OBJECT_START );\n            cmd.solrDoc = parseDoc( ev );\n          }\n          else if( XmlUpdateRequestHandler.OVERWRITE.equals( key ) ) {\n            cmd.overwrite = parser.getBoolean(); // reads next boolean\n          }\n          else if( XmlUpdateRequestHandler.COMMIT_WITHIN.equals( key ) ) {\n            cmd.commitWithin = (int)parser.getLong();\n          }\n          else if( \"boost\".equals( key ) ) {\n            boost = Float.parseFloat( parser.getNumberChars().toString() );\n          }\n          else {\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Unknown key: \"+key+\" [\"+parser.getPosition()+\"]\" );\n          }\n        }\n        else {\n          throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n              \"Should be a key \"\n              +\" at [\"+parser.getPosition()+\"]\" );\n        }\n      }\n      else if( ev == JSONParser.OBJECT_END ) {\n        if( cmd.solrDoc == null ) {\n          throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\"missing solr document. \"+parser.getPosition() );\n        }\n        cmd.solrDoc.setDocumentBoost( boost ); \n        return cmd;\n      }\n      else {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n            \"Got: \"+JSONParser.getEventString( ev  )\n            +\" at [\"+parser.getPosition()+\"]\" );\n      }\n    }\n  }\n\n","sourceOld":"  AddUpdateCommand parseAdd() throws IOException\n  {\n    AddUpdateCommand cmd = new AddUpdateCommand(req);\n    cmd.commitWithin = commitWithin;\n    cmd.overwrite = overwrite;\n\n    float boost = 1.0f;\n    \n    while( true ) {\n      int ev = parser.nextEvent();\n      if( ev == JSONParser.STRING ) {\n        if( parser.wasKey() ) {\n          String key = parser.getString();\n          if( \"doc\".equals( key ) ) {\n            if( cmd.solrDoc != null ) {\n              throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"multiple docs in same add command\" );\n            }\n            ev = assertNextEvent( JSONParser.OBJECT_START );\n            cmd.solrDoc = parseDoc( ev );\n          }\n          else if( XmlUpdateRequestHandler.OVERWRITE.equals( key ) ) {\n            cmd.overwrite = parser.getBoolean(); // reads next boolean\n          }\n          else if( XmlUpdateRequestHandler.COMMIT_WITHIN.equals( key ) ) {\n            cmd.commitWithin = (int)parser.getLong();\n          }\n          else if( \"boost\".equals( key ) ) {\n            boost = Float.parseFloat( parser.getNumberChars().toString() );\n          }\n          else {\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Unknown key: \"+key+\" [\"+parser.getPosition()+\"]\" );\n          }\n        }\n        else {\n          throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n              \"Should be a key \"\n              +\" at [\"+parser.getPosition()+\"]\" );\n        }\n      }\n      else if( ev == JSONParser.OBJECT_END ) {\n        if( cmd.solrDoc == null ) {\n          throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\"missing solr document. \"+parser.getPosition() );\n        }\n        cmd.solrDoc.setDocumentBoost( boost ); \n        return cmd;\n      }\n      else {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n            \"Got: \"+JSONParser.getEventString( ev  )\n            +\" at [\"+parser.getPosition()+\"]\" );\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"042e4d934397657ba04c82b46cc5665076bc5c58","date":1336511170,"type":4,"author":"Ryan McKinley","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/handler/JsonLoader#parseAdd().mjava","sourceNew":null,"sourceOld":"  AddUpdateCommand parseAdd() throws IOException\n  {\n    AddUpdateCommand cmd = new AddUpdateCommand(req);\n    cmd.commitWithin = commitWithin;\n    cmd.overwrite = overwrite;\n\n    float boost = 1.0f;\n    \n    while( true ) {\n      int ev = parser.nextEvent();\n      if( ev == JSONParser.STRING ) {\n        if( parser.wasKey() ) {\n          String key = parser.getString();\n          if( \"doc\".equals( key ) ) {\n            if( cmd.solrDoc != null ) {\n              throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"multiple docs in same add command\" );\n            }\n            ev = assertNextEvent( JSONParser.OBJECT_START );\n            cmd.solrDoc = parseDoc( ev );\n          }\n          else if( XmlUpdateRequestHandler.OVERWRITE.equals( key ) ) {\n            cmd.overwrite = parser.getBoolean(); // reads next boolean\n          }\n          else if( XmlUpdateRequestHandler.COMMIT_WITHIN.equals( key ) ) {\n            cmd.commitWithin = (int)parser.getLong();\n          }\n          else if( \"boost\".equals( key ) ) {\n            boost = Float.parseFloat( parser.getNumberChars().toString() );\n          }\n          else {\n            throw new SolrException(SolrException.ErrorCode.BAD_REQUEST, \"Unknown key: \"+key+\" [\"+parser.getPosition()+\"]\" );\n          }\n        }\n        else {\n          throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n              \"Should be a key \"\n              +\" at [\"+parser.getPosition()+\"]\" );\n        }\n      }\n      else if( ev == JSONParser.OBJECT_END ) {\n        if( cmd.solrDoc == null ) {\n          throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\"missing solr document. \"+parser.getPosition() );\n        }\n        cmd.solrDoc.setDocumentBoost( boost ); \n        return cmd;\n      }\n      else {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n            \"Got: \"+JSONParser.getEventString( ev  )\n            +\" at [\"+parser.getPosition()+\"]\" );\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"042e4d934397657ba04c82b46cc5665076bc5c58":["c26f00b574427b55127e869b935845554afde1fa"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["042e4d934397657ba04c82b46cc5665076bc5c58"]},"commit2Childs":{"042e4d934397657ba04c82b46cc5665076bc5c58":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["042e4d934397657ba04c82b46cc5665076bc5c58"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}