{"path":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/EnglishStemmer#r_postlude().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/EnglishStemmer#r_postlude().mjava","pathOld":"modules/analysis/common/src/java/org/tartarus/snowball/ext/EnglishStemmer#r_postlude().mjava","sourceNew":"        private boolean r_postlude() {\n            int v_1;\n            int v_2;\n            // (, line 203\n            // Boolean test Y_found, line 203\n            if (!(B_Y_found))\n            {\n                return false;\n            }\n            // repeat, line 203\n            replab0: while(true)\n            {\n                v_1 = cursor;\n                lab1: do {\n                    // (, line 203\n                    // goto, line 203\n                    golab2: while(true)\n                    {\n                        v_2 = cursor;\n                        lab3: do {\n                            // (, line 203\n                            // [, line 203\n                            bra = cursor;\n                            // literal, line 203\n                            if (!(eq_s(1, \"Y\")))\n                            {\n                                break lab3;\n                            }\n                            // ], line 203\n                            ket = cursor;\n                            cursor = v_2;\n                            break golab2;\n                        } while (false);\n                        cursor = v_2;\n                        if (cursor >= limit)\n                        {\n                            break lab1;\n                        }\n                        cursor++;\n                    }\n                    // <-, line 203\n                    slice_from(\"y\");\n                    continue replab0;\n                } while (false);\n                cursor = v_1;\n                break replab0;\n            }\n            return true;\n        }\n\n","sourceOld":"        private boolean r_postlude() {\n            int v_1;\n            int v_2;\n            // (, line 203\n            // Boolean test Y_found, line 203\n            if (!(B_Y_found))\n            {\n                return false;\n            }\n            // repeat, line 203\n            replab0: while(true)\n            {\n                v_1 = cursor;\n                lab1: do {\n                    // (, line 203\n                    // goto, line 203\n                    golab2: while(true)\n                    {\n                        v_2 = cursor;\n                        lab3: do {\n                            // (, line 203\n                            // [, line 203\n                            bra = cursor;\n                            // literal, line 203\n                            if (!(eq_s(1, \"Y\")))\n                            {\n                                break lab3;\n                            }\n                            // ], line 203\n                            ket = cursor;\n                            cursor = v_2;\n                            break golab2;\n                        } while (false);\n                        cursor = v_2;\n                        if (cursor >= limit)\n                        {\n                            break lab1;\n                        }\n                        cursor++;\n                    }\n                    // <-, line 203\n                    slice_from(\"y\");\n                    continue replab0;\n                } while (false);\n                cursor = v_1;\n                break replab0;\n            }\n            return true;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b6a6a9e301c12ab07b1d0428b5aad813fff317b3","date":1343846505,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/EnglishStemmer#r_postlude().mjava","pathOld":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/EnglishStemmer#r_postlude().mjava","sourceNew":"                private boolean r_postlude() {\n            int v_1;\n            int v_2;\n                    // (, line 203\n                    // Boolean test Y_found, line 203\n                    if (!(B_Y_found))\n                    {\n                        return false;\n                    }\n                    // repeat, line 203\n                    replab0: while(true)\n                    {\n                        v_1 = cursor;\n                        lab1: do {\n                            // (, line 203\n                            // goto, line 203\n                            golab2: while(true)\n                            {\n                                v_2 = cursor;\n                                lab3: do {\n                                    // (, line 203\n                                    // [, line 203\n                                    bra = cursor;\n                                    // literal, line 203\n                                    if (!(eq_s(1, \"Y\")))\n                                    {\n                                        break lab3;\n                                    }\n                                    // ], line 203\n                                    ket = cursor;\n                                    cursor = v_2;\n                                    break golab2;\n                                } while (false);\n                                cursor = v_2;\n                                if (cursor >= limit)\n                                {\n                                    break lab1;\n                                }\n                                cursor++;\n                            }\n                            // <-, line 203\n                            slice_from(\"y\");\n                            continue replab0;\n                        } while (false);\n                        cursor = v_1;\n                        break replab0;\n                    }\n                    return true;\n                }\n\n","sourceOld":"        private boolean r_postlude() {\n            int v_1;\n            int v_2;\n            // (, line 203\n            // Boolean test Y_found, line 203\n            if (!(B_Y_found))\n            {\n                return false;\n            }\n            // repeat, line 203\n            replab0: while(true)\n            {\n                v_1 = cursor;\n                lab1: do {\n                    // (, line 203\n                    // goto, line 203\n                    golab2: while(true)\n                    {\n                        v_2 = cursor;\n                        lab3: do {\n                            // (, line 203\n                            // [, line 203\n                            bra = cursor;\n                            // literal, line 203\n                            if (!(eq_s(1, \"Y\")))\n                            {\n                                break lab3;\n                            }\n                            // ], line 203\n                            ket = cursor;\n                            cursor = v_2;\n                            break golab2;\n                        } while (false);\n                        cursor = v_2;\n                        if (cursor >= limit)\n                        {\n                            break lab1;\n                        }\n                        cursor++;\n                    }\n                    // <-, line 203\n                    slice_from(\"y\");\n                    continue replab0;\n                } while (false);\n                cursor = v_1;\n                break replab0;\n            }\n            return true;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8fd5be977c105554c6a7b68afcdbc511439723ab","date":1344115570,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/EnglishStemmer#r_postlude().mjava","pathOld":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/EnglishStemmer#r_postlude().mjava","sourceNew":"                private boolean r_postlude() {\n            int v_1;\n            int v_2;\n                    // (, line 203\n                    // Boolean test Y_found, line 203\n                    if (!(B_Y_found))\n                    {\n                        return false;\n                    }\n                    // repeat, line 203\n                    replab0: while(true)\n                    {\n                        v_1 = cursor;\n                        lab1: do {\n                            // (, line 203\n                            // goto, line 203\n                            golab2: while(true)\n                            {\n                                v_2 = cursor;\n                                lab3: do {\n                                    // (, line 203\n                                    // [, line 203\n                                    bra = cursor;\n                                    // literal, line 203\n                                    if (!(eq_s(1, \"Y\")))\n                                    {\n                                        break lab3;\n                                    }\n                                    // ], line 203\n                                    ket = cursor;\n                                    cursor = v_2;\n                                    break golab2;\n                                } while (false);\n                                cursor = v_2;\n                                if (cursor >= limit)\n                                {\n                                    break lab1;\n                                }\n                                cursor++;\n                            }\n                            // <-, line 203\n                            slice_from(\"y\");\n                            continue replab0;\n                        } while (false);\n                        cursor = v_1;\n                        break replab0;\n                    }\n                    return true;\n                }\n\n","sourceOld":"        private boolean r_postlude() {\n            int v_1;\n            int v_2;\n            // (, line 203\n            // Boolean test Y_found, line 203\n            if (!(B_Y_found))\n            {\n                return false;\n            }\n            // repeat, line 203\n            replab0: while(true)\n            {\n                v_1 = cursor;\n                lab1: do {\n                    // (, line 203\n                    // goto, line 203\n                    golab2: while(true)\n                    {\n                        v_2 = cursor;\n                        lab3: do {\n                            // (, line 203\n                            // [, line 203\n                            bra = cursor;\n                            // literal, line 203\n                            if (!(eq_s(1, \"Y\")))\n                            {\n                                break lab3;\n                            }\n                            // ], line 203\n                            ket = cursor;\n                            cursor = v_2;\n                            break golab2;\n                        } while (false);\n                        cursor = v_2;\n                        if (cursor >= limit)\n                        {\n                            break lab1;\n                        }\n                        cursor++;\n                    }\n                    // <-, line 203\n                    slice_from(\"y\");\n                    continue replab0;\n                } while (false);\n                cursor = v_1;\n                break replab0;\n            }\n            return true;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d6f074e73200c07d54f242d3880a8da5a35ff97b","date":1344507653,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/EnglishStemmer#r_postlude().mjava","pathOld":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/EnglishStemmer#r_postlude().mjava","sourceNew":"                private boolean r_postlude() {\n            int v_1;\n            int v_2;\n                    // (, line 203\n                    // Boolean test Y_found, line 203\n                    if (!(B_Y_found))\n                    {\n                        return false;\n                    }\n                    // repeat, line 203\n                    replab0: while(true)\n                    {\n                        v_1 = cursor;\n                        lab1: do {\n                            // (, line 203\n                            // goto, line 203\n                            golab2: while(true)\n                            {\n                                v_2 = cursor;\n                                lab3: do {\n                                    // (, line 203\n                                    // [, line 203\n                                    bra = cursor;\n                                    // literal, line 203\n                                    if (!(eq_s(1, \"Y\")))\n                                    {\n                                        break lab3;\n                                    }\n                                    // ], line 203\n                                    ket = cursor;\n                                    cursor = v_2;\n                                    break golab2;\n                                } while (false);\n                                cursor = v_2;\n                                if (cursor >= limit)\n                                {\n                                    break lab1;\n                                }\n                                cursor++;\n                            }\n                            // <-, line 203\n                            slice_from(\"y\");\n                            continue replab0;\n                        } while (false);\n                        cursor = v_1;\n                        break replab0;\n                    }\n                    return true;\n                }\n\n","sourceOld":"        private boolean r_postlude() {\n            int v_1;\n            int v_2;\n            // (, line 203\n            // Boolean test Y_found, line 203\n            if (!(B_Y_found))\n            {\n                return false;\n            }\n            // repeat, line 203\n            replab0: while(true)\n            {\n                v_1 = cursor;\n                lab1: do {\n                    // (, line 203\n                    // goto, line 203\n                    golab2: while(true)\n                    {\n                        v_2 = cursor;\n                        lab3: do {\n                            // (, line 203\n                            // [, line 203\n                            bra = cursor;\n                            // literal, line 203\n                            if (!(eq_s(1, \"Y\")))\n                            {\n                                break lab3;\n                            }\n                            // ], line 203\n                            ket = cursor;\n                            cursor = v_2;\n                            break golab2;\n                        } while (false);\n                        cursor = v_2;\n                        if (cursor >= limit)\n                        {\n                            break lab1;\n                        }\n                        cursor++;\n                    }\n                    // <-, line 203\n                    slice_from(\"y\");\n                    continue replab0;\n                } while (false);\n                cursor = v_1;\n                break replab0;\n            }\n            return true;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"09479cd2de06c67a115b7346a8e5de8af4d62e81","date":1581961081,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/EnglishStemmer#r_postlude().mjava","pathOld":"lucene/analysis/common/src/java/org/tartarus/snowball/ext/EnglishStemmer#r_postlude().mjava","sourceNew":"private boolean r_postlude() {\n  if (!(B_Y_found))\n  {\n    return false;\n  }\n  while(true)\n  {\n    int v_1 = cursor;\n    lab0: {\n      golab1: while(true)\n      {\n        int v_2 = cursor;\n        lab2: {\n          bra = cursor;\n          if (!(eq_s(\"Y\")))\n          {\n            break lab2;\n          }\n          ket = cursor;\n          cursor = v_2;\n          break golab1;\n        }\n        cursor = v_2;\n        if (cursor >= limit)\n        {\n          break lab0;\n        }\n        cursor++;\n      }\n      slice_from(\"y\");\n      continue;\n    }\n    cursor = v_1;\n    break;\n  }\n  return true;\n}\n\n","sourceOld":"                private boolean r_postlude() {\n            int v_1;\n            int v_2;\n                    // (, line 203\n                    // Boolean test Y_found, line 203\n                    if (!(B_Y_found))\n                    {\n                        return false;\n                    }\n                    // repeat, line 203\n                    replab0: while(true)\n                    {\n                        v_1 = cursor;\n                        lab1: do {\n                            // (, line 203\n                            // goto, line 203\n                            golab2: while(true)\n                            {\n                                v_2 = cursor;\n                                lab3: do {\n                                    // (, line 203\n                                    // [, line 203\n                                    bra = cursor;\n                                    // literal, line 203\n                                    if (!(eq_s(1, \"Y\")))\n                                    {\n                                        break lab3;\n                                    }\n                                    // ], line 203\n                                    ket = cursor;\n                                    cursor = v_2;\n                                    break golab2;\n                                } while (false);\n                                cursor = v_2;\n                                if (cursor >= limit)\n                                {\n                                    break lab1;\n                                }\n                                cursor++;\n                            }\n                            // <-, line 203\n                            slice_from(\"y\");\n                            continue replab0;\n                        } while (false);\n                        cursor = v_1;\n                        break replab0;\n                    }\n                    return true;\n                }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d6f074e73200c07d54f242d3880a8da5a35ff97b":["b89678825b68eccaf09e6ab71675fc0b0af1e099","b6a6a9e301c12ab07b1d0428b5aad813fff317b3"],"b6a6a9e301c12ab07b1d0428b5aad813fff317b3":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"8fd5be977c105554c6a7b68afcdbc511439723ab":["b89678825b68eccaf09e6ab71675fc0b0af1e099","b6a6a9e301c12ab07b1d0428b5aad813fff317b3"],"09479cd2de06c67a115b7346a8e5de8af4d62e81":["b6a6a9e301c12ab07b1d0428b5aad813fff317b3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["09479cd2de06c67a115b7346a8e5de8af4d62e81"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["d6f074e73200c07d54f242d3880a8da5a35ff97b","b6a6a9e301c12ab07b1d0428b5aad813fff317b3","8fd5be977c105554c6a7b68afcdbc511439723ab"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"d6f074e73200c07d54f242d3880a8da5a35ff97b":[],"b6a6a9e301c12ab07b1d0428b5aad813fff317b3":["d6f074e73200c07d54f242d3880a8da5a35ff97b","8fd5be977c105554c6a7b68afcdbc511439723ab","09479cd2de06c67a115b7346a8e5de8af4d62e81"],"8fd5be977c105554c6a7b68afcdbc511439723ab":[],"09479cd2de06c67a115b7346a8e5de8af4d62e81":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d6f074e73200c07d54f242d3880a8da5a35ff97b","8fd5be977c105554c6a7b68afcdbc511439723ab","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}