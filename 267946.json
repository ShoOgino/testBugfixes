{"path":"modules/analysis/common/src/java/org/apache/lucene/analysis/pt/PortugueseStemmer#stem(char[],int).mjava","commits":[{"id":"81d6d41a6e097c5c1e2c81055a12d7f24e147ec7","date":1294324237,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/pt/PortugueseStemmer#stem(char[],int).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * @param s buffer, oversized to at least <code>len+1</code>\n   * @param len initial valid length of buffer\n   * @return new valid length, stemmed\n   */\n  public int stem(char s[], int len) {\n    assert s.length >= len + 1 : \"this stemmer requires an oversized array of at least 1\";\n    \n    len = plural.apply(s, len);\n    len = adverb.apply(s, len);\n    len = feminine.apply(s, len);\n    len = augmentative.apply(s, len);\n    \n    int oldlen = len;\n    len = noun.apply(s, len);\n    \n    if (len == oldlen) { /* suffix not removed */\n      oldlen = len;\n      \n      len = verb.apply(s, len);\n      \n      if (len == oldlen) { /* suffix not removed */\n        len = vowel.apply(s, len);\n      }\n    }\n    \n    // rslp accent removal\n    for (int i = 0; i < len; i++) {\n      switch(s[i]) {\n        case 'à':\n        case 'á':\n        case 'â':\n        case 'ã':\n        case 'ä':\n        case 'å': s[i] = 'a'; break;\n        case 'ç': s[i] = 'c'; break;\n        case 'è':\n        case 'é':\n        case 'ê':\n        case 'ë': s[i] = 'e'; break;\n        case 'ì':\n        case 'í':\n        case 'î':\n        case 'ï': s[i] = 'i'; break;\n        case 'ñ': s[i] = 'n'; break;\n        case 'ò':\n        case 'ó':\n        case 'ô':\n        case 'õ':\n        case 'ö': s[i] = 'o'; break;\n        case 'ù':\n        case 'ú':\n        case 'û':\n        case 'ü': s[i] = 'u'; break;\n        case 'ý':\n        case 'ÿ': s[i] = 'y'; break;\n      }\n    }\n    return len;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"868da859b43505d9d2a023bfeae6dd0c795f5295","date":1294948401,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/pt/PortugueseStemmer#stem(char[],int).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * @param s buffer, oversized to at least <code>len+1</code>\n   * @param len initial valid length of buffer\n   * @return new valid length, stemmed\n   */\n  public int stem(char s[], int len) {\n    assert s.length >= len + 1 : \"this stemmer requires an oversized array of at least 1\";\n    \n    len = plural.apply(s, len);\n    len = adverb.apply(s, len);\n    len = feminine.apply(s, len);\n    len = augmentative.apply(s, len);\n    \n    int oldlen = len;\n    len = noun.apply(s, len);\n    \n    if (len == oldlen) { /* suffix not removed */\n      oldlen = len;\n      \n      len = verb.apply(s, len);\n      \n      if (len == oldlen) { /* suffix not removed */\n        len = vowel.apply(s, len);\n      }\n    }\n    \n    // rslp accent removal\n    for (int i = 0; i < len; i++) {\n      switch(s[i]) {\n        case 'à':\n        case 'á':\n        case 'â':\n        case 'ã':\n        case 'ä':\n        case 'å': s[i] = 'a'; break;\n        case 'ç': s[i] = 'c'; break;\n        case 'è':\n        case 'é':\n        case 'ê':\n        case 'ë': s[i] = 'e'; break;\n        case 'ì':\n        case 'í':\n        case 'î':\n        case 'ï': s[i] = 'i'; break;\n        case 'ñ': s[i] = 'n'; break;\n        case 'ò':\n        case 'ó':\n        case 'ô':\n        case 'õ':\n        case 'ö': s[i] = 'o'; break;\n        case 'ù':\n        case 'ú':\n        case 'û':\n        case 'ü': s[i] = 'u'; break;\n        case 'ý':\n        case 'ÿ': s[i] = 'y'; break;\n      }\n    }\n    return len;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/pt/PortugueseStemmer#stem(char[],int).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * @param s buffer, oversized to at least <code>len+1</code>\n   * @param len initial valid length of buffer\n   * @return new valid length, stemmed\n   */\n  public int stem(char s[], int len) {\n    assert s.length >= len + 1 : \"this stemmer requires an oversized array of at least 1\";\n    \n    len = plural.apply(s, len);\n    len = adverb.apply(s, len);\n    len = feminine.apply(s, len);\n    len = augmentative.apply(s, len);\n    \n    int oldlen = len;\n    len = noun.apply(s, len);\n    \n    if (len == oldlen) { /* suffix not removed */\n      oldlen = len;\n      \n      len = verb.apply(s, len);\n      \n      if (len == oldlen) { /* suffix not removed */\n        len = vowel.apply(s, len);\n      }\n    }\n    \n    // rslp accent removal\n    for (int i = 0; i < len; i++) {\n      switch(s[i]) {\n        case 'à':\n        case 'á':\n        case 'â':\n        case 'ã':\n        case 'ä':\n        case 'å': s[i] = 'a'; break;\n        case 'ç': s[i] = 'c'; break;\n        case 'è':\n        case 'é':\n        case 'ê':\n        case 'ë': s[i] = 'e'; break;\n        case 'ì':\n        case 'í':\n        case 'î':\n        case 'ï': s[i] = 'i'; break;\n        case 'ñ': s[i] = 'n'; break;\n        case 'ò':\n        case 'ó':\n        case 'ô':\n        case 'õ':\n        case 'ö': s[i] = 'o'; break;\n        case 'ù':\n        case 'ú':\n        case 'û':\n        case 'ü': s[i] = 'u'; break;\n        case 'ý':\n        case 'ÿ': s[i] = 'y'; break;\n      }\n    }\n    return len;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/pt/PortugueseStemmer#stem(char[],int).mjava","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/pt/PortugueseStemmer#stem(char[],int).mjava","sourceNew":"  /**\n   * @param s buffer, oversized to at least <code>len+1</code>\n   * @param len initial valid length of buffer\n   * @return new valid length, stemmed\n   */\n  public int stem(char s[], int len) {\n    assert s.length >= len + 1 : \"this stemmer requires an oversized array of at least 1\";\n    \n    len = plural.apply(s, len);\n    len = adverb.apply(s, len);\n    len = feminine.apply(s, len);\n    len = augmentative.apply(s, len);\n    \n    int oldlen = len;\n    len = noun.apply(s, len);\n    \n    if (len == oldlen) { /* suffix not removed */\n      oldlen = len;\n      \n      len = verb.apply(s, len);\n      \n      if (len == oldlen) { /* suffix not removed */\n        len = vowel.apply(s, len);\n      }\n    }\n    \n    // rslp accent removal\n    for (int i = 0; i < len; i++) {\n      switch(s[i]) {\n        case 'à':\n        case 'á':\n        case 'â':\n        case 'ã':\n        case 'ä':\n        case 'å': s[i] = 'a'; break;\n        case 'ç': s[i] = 'c'; break;\n        case 'è':\n        case 'é':\n        case 'ê':\n        case 'ë': s[i] = 'e'; break;\n        case 'ì':\n        case 'í':\n        case 'î':\n        case 'ï': s[i] = 'i'; break;\n        case 'ñ': s[i] = 'n'; break;\n        case 'ò':\n        case 'ó':\n        case 'ô':\n        case 'õ':\n        case 'ö': s[i] = 'o'; break;\n        case 'ù':\n        case 'ú':\n        case 'û':\n        case 'ü': s[i] = 'u'; break;\n        case 'ý':\n        case 'ÿ': s[i] = 'y'; break;\n      }\n    }\n    return len;\n  }\n\n","sourceOld":"  /**\n   * @param s buffer, oversized to at least <code>len+1</code>\n   * @param len initial valid length of buffer\n   * @return new valid length, stemmed\n   */\n  public int stem(char s[], int len) {\n    assert s.length >= len + 1 : \"this stemmer requires an oversized array of at least 1\";\n    \n    len = plural.apply(s, len);\n    len = adverb.apply(s, len);\n    len = feminine.apply(s, len);\n    len = augmentative.apply(s, len);\n    \n    int oldlen = len;\n    len = noun.apply(s, len);\n    \n    if (len == oldlen) { /* suffix not removed */\n      oldlen = len;\n      \n      len = verb.apply(s, len);\n      \n      if (len == oldlen) { /* suffix not removed */\n        len = vowel.apply(s, len);\n      }\n    }\n    \n    // rslp accent removal\n    for (int i = 0; i < len; i++) {\n      switch(s[i]) {\n        case 'à':\n        case 'á':\n        case 'â':\n        case 'ã':\n        case 'ä':\n        case 'å': s[i] = 'a'; break;\n        case 'ç': s[i] = 'c'; break;\n        case 'è':\n        case 'é':\n        case 'ê':\n        case 'ë': s[i] = 'e'; break;\n        case 'ì':\n        case 'í':\n        case 'î':\n        case 'ï': s[i] = 'i'; break;\n        case 'ñ': s[i] = 'n'; break;\n        case 'ò':\n        case 'ó':\n        case 'ô':\n        case 'õ':\n        case 'ö': s[i] = 'o'; break;\n        case 'ù':\n        case 'ú':\n        case 'û':\n        case 'ü': s[i] = 'u'; break;\n        case 'ý':\n        case 'ÿ': s[i] = 'y'; break;\n      }\n    }\n    return len;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["81d6d41a6e097c5c1e2c81055a12d7f24e147ec7"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","81d6d41a6e097c5c1e2c81055a12d7f24e147ec7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"868da859b43505d9d2a023bfeae6dd0c795f5295":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","81d6d41a6e097c5c1e2c81055a12d7f24e147ec7"],"81d6d41a6e097c5c1e2c81055a12d7f24e147ec7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["29ef99d61cda9641b6250bf9567329a6e65f901d","868da859b43505d9d2a023bfeae6dd0c795f5295","81d6d41a6e097c5c1e2c81055a12d7f24e147ec7"],"868da859b43505d9d2a023bfeae6dd0c795f5295":[],"81d6d41a6e097c5c1e2c81055a12d7f24e147ec7":["b89678825b68eccaf09e6ab71675fc0b0af1e099","29ef99d61cda9641b6250bf9567329a6e65f901d","868da859b43505d9d2a023bfeae6dd0c795f5295"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["29ef99d61cda9641b6250bf9567329a6e65f901d","868da859b43505d9d2a023bfeae6dd0c795f5295","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}