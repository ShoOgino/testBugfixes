{"path":"lucene/misc/src/java/org/apache/lucene/uninverting/FieldCacheImpl#getDocsWithField(LeafReader,String,Parser).mjava","commits":[{"id":"8c146731a64debc22c115bbf11ee1a060aa7ea02","date":1457616596,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/misc/src/java/org/apache/lucene/uninverting/FieldCacheImpl#getDocsWithField(LeafReader,String,Parser).mjava","pathOld":"lucene/misc/src/java/org/apache/lucene/uninverting/FieldCacheImpl#getDocsWithField(LeafReader,String).mjava","sourceNew":"  public Bits getDocsWithField(LeafReader reader, String field, Parser parser) throws IOException {\n    final FieldInfo fieldInfo = reader.getFieldInfos().fieldInfo(field);\n    if (fieldInfo == null) {\n      // field does not exist or has no value\n      return new Bits.MatchNoBits(reader.maxDoc());\n    } else if (fieldInfo.getDocValuesType() != DocValuesType.NONE) {\n      return reader.getDocsWithField(field);\n    } \n    \n    if (parser instanceof PointParser) {\n      // points case\n      \n    } else {\n      // postings case\n      if (fieldInfo.getIndexOptions() == IndexOptions.NONE) {\n        return new Bits.MatchNoBits(reader.maxDoc());\n      }\n    }\n    BitsEntry bitsEntry = (BitsEntry) caches.get(DocsWithFieldCache.class).get(reader, new CacheKey(field, parser), false);\n    return bitsEntry.bits;\n  }\n\n","sourceOld":"  public Bits getDocsWithField(LeafReader reader, String field) throws IOException {\n    final FieldInfo fieldInfo = reader.getFieldInfos().fieldInfo(field);\n    if (fieldInfo == null) {\n      // field does not exist or has no value\n      return new Bits.MatchNoBits(reader.maxDoc());\n    } else if (fieldInfo.getDocValuesType() != DocValuesType.NONE) {\n      return reader.getDocsWithField(field);\n    } else if (fieldInfo.getIndexOptions() == IndexOptions.NONE) {\n      return new Bits.MatchNoBits(reader.maxDoc());\n    }\n    BitsEntry bitsEntry = (BitsEntry) caches.get(DocsWithFieldCache.class).get(reader, new CacheKey(field, null), false);\n    return bitsEntry.bits;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a076c3c721f685b7559308fdc2cd72d91bba67e5","date":1464168992,"type":5,"author":"Mike McCandless","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/uninverting/FieldCacheImpl#getDocsWithField(LeafReader,String,Parser).mjava","pathOld":"lucene/misc/src/java/org/apache/lucene/uninverting/FieldCacheImpl#getDocsWithField(LeafReader,String,Parser).mjava","sourceNew":"  public Bits getDocsWithField(LeafReader reader, String field, Parser parser) throws IOException {\n    final FieldInfo fieldInfo = reader.getFieldInfos().fieldInfo(field);\n    if (fieldInfo == null) {\n      // field does not exist or has no value\n      return new Bits.MatchNoBits(reader.maxDoc());\n    } else if (fieldInfo.getDocValuesType() != DocValuesType.NONE) {\n      return reader.getDocsWithField(field);\n    } \n    \n    if (parser instanceof PointParser) {\n      // points case\n      \n    } else {\n      // postings case\n      if (fieldInfo.getIndexOptions() == IndexOptions.NONE) {\n        return new Bits.MatchNoBits(reader.maxDoc());\n      }\n    }\n    BitsEntry bitsEntry = (BitsEntry) caches.get(DocsWithFieldCache.class).get(reader, new CacheKey(field, parser), false);\n    return bitsEntry.bits;\n  }\n\n","sourceOld":"  public Bits getDocsWithField(LeafReader reader, String field, Parser parser) throws IOException {\n    final FieldInfo fieldInfo = reader.getFieldInfos().fieldInfo(field);\n    if (fieldInfo == null) {\n      // field does not exist or has no value\n      return new Bits.MatchNoBits(reader.maxDoc());\n    } else if (fieldInfo.getDocValuesType() != DocValuesType.NONE) {\n      return reader.getDocsWithField(field);\n    } \n    \n    if (parser instanceof PointParser) {\n      // points case\n      \n    } else {\n      // postings case\n      if (fieldInfo.getIndexOptions() == IndexOptions.NONE) {\n        return new Bits.MatchNoBits(reader.maxDoc());\n      }\n    }\n    BitsEntry bitsEntry = (BitsEntry) caches.get(DocsWithFieldCache.class).get(reader, new CacheKey(field, parser), false);\n    return bitsEntry.bits;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0e121d43b5a10f2df530f406f935102656e9c4e8","date":1464198131,"type":5,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/uninverting/FieldCacheImpl#getDocsWithField(LeafReader,String,Parser).mjava","pathOld":"lucene/misc/src/java/org/apache/lucene/uninverting/FieldCacheImpl#getDocsWithField(LeafReader,String,Parser).mjava","sourceNew":"  public Bits getDocsWithField(LeafReader reader, String field, Parser parser) throws IOException {\n    final FieldInfo fieldInfo = reader.getFieldInfos().fieldInfo(field);\n    if (fieldInfo == null) {\n      // field does not exist or has no value\n      return new Bits.MatchNoBits(reader.maxDoc());\n    } else if (fieldInfo.getDocValuesType() != DocValuesType.NONE) {\n      return reader.getDocsWithField(field);\n    } \n    \n    if (parser instanceof PointParser) {\n      // points case\n      \n    } else {\n      // postings case\n      if (fieldInfo.getIndexOptions() == IndexOptions.NONE) {\n        return new Bits.MatchNoBits(reader.maxDoc());\n      }\n    }\n    BitsEntry bitsEntry = (BitsEntry) caches.get(DocsWithFieldCache.class).get(reader, new CacheKey(field, parser), false);\n    return bitsEntry.bits;\n  }\n\n","sourceOld":"  public Bits getDocsWithField(LeafReader reader, String field, Parser parser) throws IOException {\n    final FieldInfo fieldInfo = reader.getFieldInfos().fieldInfo(field);\n    if (fieldInfo == null) {\n      // field does not exist or has no value\n      return new Bits.MatchNoBits(reader.maxDoc());\n    } else if (fieldInfo.getDocValuesType() != DocValuesType.NONE) {\n      return reader.getDocsWithField(field);\n    } \n    \n    if (parser instanceof PointParser) {\n      // points case\n      \n    } else {\n      // postings case\n      if (fieldInfo.getIndexOptions() == IndexOptions.NONE) {\n        return new Bits.MatchNoBits(reader.maxDoc());\n      }\n    }\n    BitsEntry bitsEntry = (BitsEntry) caches.get(DocsWithFieldCache.class).get(reader, new CacheKey(field, parser), false);\n    return bitsEntry.bits;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"83870855d82aba6819217abeff5a40779dbb28b4","date":1464291012,"type":5,"author":"Mike McCandless","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/uninverting/FieldCacheImpl#getDocsWithField(LeafReader,String,Parser).mjava","pathOld":"lucene/misc/src/java/org/apache/lucene/uninverting/FieldCacheImpl#getDocsWithField(LeafReader,String,Parser).mjava","sourceNew":"  public Bits getDocsWithField(LeafReader reader, String field, Parser parser) throws IOException {\n    final FieldInfo fieldInfo = reader.getFieldInfos().fieldInfo(field);\n    if (fieldInfo == null) {\n      // field does not exist or has no value\n      return new Bits.MatchNoBits(reader.maxDoc());\n    } else if (fieldInfo.getDocValuesType() != DocValuesType.NONE) {\n      return reader.getDocsWithField(field);\n    } \n    \n    if (parser instanceof PointParser) {\n      // points case\n      \n    } else {\n      // postings case\n      if (fieldInfo.getIndexOptions() == IndexOptions.NONE) {\n        return new Bits.MatchNoBits(reader.maxDoc());\n      }\n    }\n    BitsEntry bitsEntry = (BitsEntry) caches.get(DocsWithFieldCache.class).get(reader, new CacheKey(field, parser), false);\n    return bitsEntry.bits;\n  }\n\n","sourceOld":"  public Bits getDocsWithField(LeafReader reader, String field, Parser parser) throws IOException {\n    final FieldInfo fieldInfo = reader.getFieldInfos().fieldInfo(field);\n    if (fieldInfo == null) {\n      // field does not exist or has no value\n      return new Bits.MatchNoBits(reader.maxDoc());\n    } else if (fieldInfo.getDocValuesType() != DocValuesType.NONE) {\n      return reader.getDocsWithField(field);\n    } \n    \n    if (parser instanceof PointParser) {\n      // points case\n      \n    } else {\n      // postings case\n      if (fieldInfo.getIndexOptions() == IndexOptions.NONE) {\n        return new Bits.MatchNoBits(reader.maxDoc());\n      }\n    }\n    BitsEntry bitsEntry = (BitsEntry) caches.get(DocsWithFieldCache.class).get(reader, new CacheKey(field, parser), false);\n    return bitsEntry.bits;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":4,"author":"Kevin Risden","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/misc/src/java/org/apache/lucene/uninverting/FieldCacheImpl#getDocsWithField(LeafReader,String,Parser).mjava","sourceNew":null,"sourceOld":"  public Bits getDocsWithField(LeafReader reader, String field, Parser parser) throws IOException {\n    final FieldInfo fieldInfo = reader.getFieldInfos().fieldInfo(field);\n    if (fieldInfo == null) {\n      // field does not exist or has no value\n      return new Bits.MatchNoBits(reader.maxDoc());\n    } else if (fieldInfo.getDocValuesType() != DocValuesType.NONE) {\n      return reader.getDocsWithField(field);\n    } \n    \n    if (parser instanceof PointParser) {\n      // points case\n      \n    } else {\n      // postings case\n      if (fieldInfo.getIndexOptions() == IndexOptions.NONE) {\n        return new Bits.MatchNoBits(reader.maxDoc());\n      }\n    }\n    BitsEntry bitsEntry = (BitsEntry) caches.get(DocsWithFieldCache.class).get(reader, new CacheKey(field, parser), false);\n    return bitsEntry.bits;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a076c3c721f685b7559308fdc2cd72d91bba67e5":["8c146731a64debc22c115bbf11ee1a060aa7ea02"],"0e121d43b5a10f2df530f406f935102656e9c4e8":["8c146731a64debc22c115bbf11ee1a060aa7ea02","a076c3c721f685b7559308fdc2cd72d91bba67e5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"83870855d82aba6819217abeff5a40779dbb28b4":["8c146731a64debc22c115bbf11ee1a060aa7ea02","0e121d43b5a10f2df530f406f935102656e9c4e8"],"8c146731a64debc22c115bbf11ee1a060aa7ea02":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["8c146731a64debc22c115bbf11ee1a060aa7ea02","0e121d43b5a10f2df530f406f935102656e9c4e8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0e121d43b5a10f2df530f406f935102656e9c4e8"]},"commit2Childs":{"a076c3c721f685b7559308fdc2cd72d91bba67e5":["0e121d43b5a10f2df530f406f935102656e9c4e8"],"0e121d43b5a10f2df530f406f935102656e9c4e8":["83870855d82aba6819217abeff5a40779dbb28b4","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8c146731a64debc22c115bbf11ee1a060aa7ea02"],"83870855d82aba6819217abeff5a40779dbb28b4":[],"8c146731a64debc22c115bbf11ee1a060aa7ea02":["a076c3c721f685b7559308fdc2cd72d91bba67e5","0e121d43b5a10f2df530f406f935102656e9c4e8","83870855d82aba6819217abeff5a40779dbb28b4","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["83870855d82aba6819217abeff5a40779dbb28b4","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}