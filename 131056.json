{"path":"modules/benchmark/src/test/org/apache/lucene/benchmark/byTask/TestPerfTasksLogic#testTimedSearchTask().mjava","commits":[{"id":"ecc11368dc265bfdad90214f8bf5da99016ab1e2","date":1294144090,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"modules/benchmark/src/test/org/apache/lucene/benchmark/byTask/TestPerfTasksLogic#testTimedSearchTask().mjava","pathOld":"lucene/contrib/benchmark/src/test/org/apache/lucene/benchmark/byTask/TestPerfTasksLogic#testTimedSearchTask().mjava","sourceNew":"  /**\n   * Test timed sequence task.\n   */\n  public void testTimedSearchTask() throws Exception {\n    String algLines[] = {\n        \"log.step=100000\",\n        \"ResetSystemErase\",\n        \"CreateIndex\",\n        \"{ AddDoc } : 100\",\n        \"Optimize\",\n        \"CloseIndex\",\n        \"OpenReader\",\n        \"{ CountingSearchTest } : .5s\",\n        \"CloseReader\",\n    };\n\n    CountingSearchTestTask.numSearches = 0;\n    execBenchmark(algLines);\n    assertTrue(CountingSearchTestTask.numSearches > 0);\n    long elapsed = CountingSearchTestTask.prevLastMillis - CountingSearchTestTask.startMillis;\n    assertTrue(\"elapsed time was \" + elapsed + \" msec\", elapsed <= 1500);\n  }\n\n","sourceOld":"  /**\n   * Test timed sequence task.\n   */\n  public void testTimedSearchTask() throws Exception {\n    String algLines[] = {\n        \"log.step=100000\",\n        \"ResetSystemErase\",\n        \"CreateIndex\",\n        \"{ AddDoc } : 100\",\n        \"Optimize\",\n        \"CloseIndex\",\n        \"OpenReader\",\n        \"{ CountingSearchTest } : .5s\",\n        \"CloseReader\",\n    };\n\n    CountingSearchTestTask.numSearches = 0;\n    execBenchmark(algLines);\n    assertTrue(CountingSearchTestTask.numSearches > 0);\n    long elapsed = CountingSearchTestTask.prevLastMillis - CountingSearchTestTask.startMillis;\n    assertTrue(\"elapsed time was \" + elapsed + \" msec\", elapsed <= 1500);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"70ad682703b8585f5d0a637efec044d57ec05efb","date":1294259117,"type":1,"author":"Simon Willnauer","isMerge":true,"pathNew":"modules/benchmark/src/test/org/apache/lucene/benchmark/byTask/TestPerfTasksLogic#testTimedSearchTask().mjava","pathOld":"lucene/contrib/benchmark/src/test/org/apache/lucene/benchmark/byTask/TestPerfTasksLogic#testTimedSearchTask().mjava","sourceNew":"  /**\n   * Test timed sequence task.\n   */\n  public void testTimedSearchTask() throws Exception {\n    String algLines[] = {\n        \"log.step=100000\",\n        \"ResetSystemErase\",\n        \"CreateIndex\",\n        \"{ AddDoc } : 100\",\n        \"Optimize\",\n        \"CloseIndex\",\n        \"OpenReader\",\n        \"{ CountingSearchTest } : .5s\",\n        \"CloseReader\",\n    };\n\n    CountingSearchTestTask.numSearches = 0;\n    execBenchmark(algLines);\n    assertTrue(CountingSearchTestTask.numSearches > 0);\n    long elapsed = CountingSearchTestTask.prevLastMillis - CountingSearchTestTask.startMillis;\n    assertTrue(\"elapsed time was \" + elapsed + \" msec\", elapsed <= 1500);\n  }\n\n","sourceOld":"  /**\n   * Test timed sequence task.\n   */\n  public void testTimedSearchTask() throws Exception {\n    String algLines[] = {\n        \"log.step=100000\",\n        \"ResetSystemErase\",\n        \"CreateIndex\",\n        \"{ AddDoc } : 100\",\n        \"Optimize\",\n        \"CloseIndex\",\n        \"OpenReader\",\n        \"{ CountingSearchTest } : .5s\",\n        \"CloseReader\",\n    };\n\n    CountingSearchTestTask.numSearches = 0;\n    execBenchmark(algLines);\n    assertTrue(CountingSearchTestTask.numSearches > 0);\n    long elapsed = CountingSearchTestTask.prevLastMillis - CountingSearchTestTask.startMillis;\n    assertTrue(\"elapsed time was \" + elapsed + \" msec\", elapsed <= 1500);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"868da859b43505d9d2a023bfeae6dd0c795f5295","date":1294948401,"type":1,"author":"Michael Busch","isMerge":true,"pathNew":"modules/benchmark/src/test/org/apache/lucene/benchmark/byTask/TestPerfTasksLogic#testTimedSearchTask().mjava","pathOld":"lucene/contrib/benchmark/src/test/org/apache/lucene/benchmark/byTask/TestPerfTasksLogic#testTimedSearchTask().mjava","sourceNew":"  /**\n   * Test timed sequence task.\n   */\n  public void testTimedSearchTask() throws Exception {\n    String algLines[] = {\n        \"log.step=100000\",\n        \"ResetSystemErase\",\n        \"CreateIndex\",\n        \"{ AddDoc } : 100\",\n        \"Optimize\",\n        \"CloseIndex\",\n        \"OpenReader\",\n        \"{ CountingSearchTest } : .5s\",\n        \"CloseReader\",\n    };\n\n    CountingSearchTestTask.numSearches = 0;\n    execBenchmark(algLines);\n    assertTrue(CountingSearchTestTask.numSearches > 0);\n    long elapsed = CountingSearchTestTask.prevLastMillis - CountingSearchTestTask.startMillis;\n    assertTrue(\"elapsed time was \" + elapsed + \" msec\", elapsed <= 1500);\n  }\n\n","sourceOld":"  /**\n   * Test timed sequence task.\n   */\n  public void testTimedSearchTask() throws Exception {\n    String algLines[] = {\n        \"log.step=100000\",\n        \"ResetSystemErase\",\n        \"CreateIndex\",\n        \"{ AddDoc } : 100\",\n        \"Optimize\",\n        \"CloseIndex\",\n        \"OpenReader\",\n        \"{ CountingSearchTest } : .5s\",\n        \"CloseReader\",\n    };\n\n    CountingSearchTestTask.numSearches = 0;\n    execBenchmark(algLines);\n    assertTrue(CountingSearchTestTask.numSearches > 0);\n    long elapsed = CountingSearchTestTask.prevLastMillis - CountingSearchTestTask.startMillis;\n    assertTrue(\"elapsed time was \" + elapsed + \" msec\", elapsed <= 1500);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d14e8d18c0e3970c20354dbeeb49da11bd587fbd","date":1321041051,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"modules/benchmark/src/test/org/apache/lucene/benchmark/byTask/TestPerfTasksLogic#testTimedSearchTask().mjava","pathOld":"modules/benchmark/src/test/org/apache/lucene/benchmark/byTask/TestPerfTasksLogic#testTimedSearchTask().mjava","sourceNew":"  /**\n   * Test timed sequence task.\n   */\n  public void testTimedSearchTask() throws Exception {\n    String algLines[] = {\n        \"log.step=100000\",\n        \"ResetSystemErase\",\n        \"CreateIndex\",\n        \"{ AddDoc } : 100\",\n        \"ForceMerge(1)\",\n        \"CloseIndex\",\n        \"OpenReader\",\n        \"{ CountingSearchTest } : .5s\",\n        \"CloseReader\",\n    };\n\n    CountingSearchTestTask.numSearches = 0;\n    execBenchmark(algLines);\n    assertTrue(CountingSearchTestTask.numSearches > 0);\n    long elapsed = CountingSearchTestTask.prevLastMillis - CountingSearchTestTask.startMillis;\n    assertTrue(\"elapsed time was \" + elapsed + \" msec\", elapsed <= 1500);\n  }\n\n","sourceOld":"  /**\n   * Test timed sequence task.\n   */\n  public void testTimedSearchTask() throws Exception {\n    String algLines[] = {\n        \"log.step=100000\",\n        \"ResetSystemErase\",\n        \"CreateIndex\",\n        \"{ AddDoc } : 100\",\n        \"Optimize\",\n        \"CloseIndex\",\n        \"OpenReader\",\n        \"{ CountingSearchTest } : .5s\",\n        \"CloseReader\",\n    };\n\n    CountingSearchTestTask.numSearches = 0;\n    execBenchmark(algLines);\n    assertTrue(CountingSearchTestTask.numSearches > 0);\n    long elapsed = CountingSearchTestTask.prevLastMillis - CountingSearchTestTask.startMillis;\n    assertTrue(\"elapsed time was \" + elapsed + \" msec\", elapsed <= 1500);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/benchmark/src/test/org/apache/lucene/benchmark/byTask/TestPerfTasksLogic#testTimedSearchTask().mjava","pathOld":"modules/benchmark/src/test/org/apache/lucene/benchmark/byTask/TestPerfTasksLogic#testTimedSearchTask().mjava","sourceNew":"  /**\n   * Test timed sequence task.\n   */\n  public void testTimedSearchTask() throws Exception {\n    String algLines[] = {\n        \"log.step=100000\",\n        \"ResetSystemErase\",\n        \"CreateIndex\",\n        \"{ AddDoc } : 100\",\n        \"ForceMerge(1)\",\n        \"CloseIndex\",\n        \"OpenReader\",\n        \"{ CountingSearchTest } : .5s\",\n        \"CloseReader\",\n    };\n\n    CountingSearchTestTask.numSearches = 0;\n    execBenchmark(algLines);\n    assertTrue(CountingSearchTestTask.numSearches > 0);\n    long elapsed = CountingSearchTestTask.prevLastMillis - CountingSearchTestTask.startMillis;\n    assertTrue(\"elapsed time was \" + elapsed + \" msec\", elapsed <= 1500);\n  }\n\n","sourceOld":"  /**\n   * Test timed sequence task.\n   */\n  public void testTimedSearchTask() throws Exception {\n    String algLines[] = {\n        \"log.step=100000\",\n        \"ResetSystemErase\",\n        \"CreateIndex\",\n        \"{ AddDoc } : 100\",\n        \"ForceMerge(1)\",\n        \"CloseIndex\",\n        \"OpenReader\",\n        \"{ CountingSearchTest } : .5s\",\n        \"CloseReader\",\n    };\n\n    CountingSearchTestTask.numSearches = 0;\n    execBenchmark(algLines);\n    assertTrue(CountingSearchTestTask.numSearches > 0);\n    long elapsed = CountingSearchTestTask.prevLastMillis - CountingSearchTestTask.startMillis;\n    assertTrue(\"elapsed time was \" + elapsed + \" msec\", elapsed <= 1500);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"70ad682703b8585f5d0a637efec044d57ec05efb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ecc11368dc265bfdad90214f8bf5da99016ab1e2"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["d14e8d18c0e3970c20354dbeeb49da11bd587fbd"],"ecc11368dc265bfdad90214f8bf5da99016ab1e2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d14e8d18c0e3970c20354dbeeb49da11bd587fbd":["ecc11368dc265bfdad90214f8bf5da99016ab1e2"],"868da859b43505d9d2a023bfeae6dd0c795f5295":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ecc11368dc265bfdad90214f8bf5da99016ab1e2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"70ad682703b8585f5d0a637efec044d57ec05efb":[],"ecc11368dc265bfdad90214f8bf5da99016ab1e2":["70ad682703b8585f5d0a637efec044d57ec05efb","d14e8d18c0e3970c20354dbeeb49da11bd587fbd","868da859b43505d9d2a023bfeae6dd0c795f5295"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["70ad682703b8585f5d0a637efec044d57ec05efb","ecc11368dc265bfdad90214f8bf5da99016ab1e2","868da859b43505d9d2a023bfeae6dd0c795f5295"],"d14e8d18c0e3970c20354dbeeb49da11bd587fbd":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"868da859b43505d9d2a023bfeae6dd0c795f5295":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["70ad682703b8585f5d0a637efec044d57ec05efb","868da859b43505d9d2a023bfeae6dd0c795f5295","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}