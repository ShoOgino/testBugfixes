{"path":"lucene/src/test/org/apache/lucene/index/TestPayloads.PayloadAnalyzer#tokenStream(String,Reader).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestPayloads.PayloadAnalyzer#tokenStream(String,Reader).mjava","pathOld":"src/test/org/apache/lucene/index/TestPayloads.PayloadAnalyzer#tokenStream(String,Reader).mjava","sourceNew":"        @Override\n        public TokenStream tokenStream(String fieldName, Reader reader) {\n            PayloadData payload =  fieldToData.get(fieldName);\n            TokenStream ts = new WhitespaceTokenizer(TEST_VERSION_CURRENT, reader);\n            if (payload != null) {\n                if (payload.numFieldInstancesToSkip == 0) {\n                    ts = new PayloadFilter(ts, payload.data, payload.offset, payload.length);\n                } else {\n                    payload.numFieldInstancesToSkip--;\n                }\n            }\n            return ts;\n        }\n\n","sourceOld":"        @Override\n        public TokenStream tokenStream(String fieldName, Reader reader) {\n            PayloadData payload =  fieldToData.get(fieldName);\n            TokenStream ts = new WhitespaceTokenizer(TEST_VERSION_CURRENT, reader);\n            if (payload != null) {\n                if (payload.numFieldInstancesToSkip == 0) {\n                    ts = new PayloadFilter(ts, payload.data, payload.offset, payload.length);\n                } else {\n                    payload.numFieldInstancesToSkip--;\n                }\n            }\n            return ts;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"03276b2744036b1b19a7a2dd4b74ba7bc484f107","date":1274048508,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestPayloads.PayloadAnalyzer#tokenStream(String,Reader).mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestPayloads.PayloadAnalyzer#tokenStream(String,Reader).mjava","sourceNew":"        @Override\n        public TokenStream tokenStream(String fieldName, Reader reader) {\n            PayloadData payload =  fieldToData.get(fieldName);\n            TokenStream ts = new MockTokenizer(reader, MockTokenizer.WHITESPACE, false);\n            if (payload != null) {\n                if (payload.numFieldInstancesToSkip == 0) {\n                    ts = new PayloadFilter(ts, payload.data, payload.offset, payload.length);\n                } else {\n                    payload.numFieldInstancesToSkip--;\n                }\n            }\n            return ts;\n        }\n\n","sourceOld":"        @Override\n        public TokenStream tokenStream(String fieldName, Reader reader) {\n            PayloadData payload =  fieldToData.get(fieldName);\n            TokenStream ts = new WhitespaceTokenizer(TEST_VERSION_CURRENT, reader);\n            if (payload != null) {\n                if (payload.numFieldInstancesToSkip == 0) {\n                    ts = new PayloadFilter(ts, payload.data, payload.offset, payload.length);\n                } else {\n                    payload.numFieldInstancesToSkip--;\n                }\n            }\n            return ts;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"dca8d536ba2e4aab4623a172a22cc2885ec7cb3d","date":1315818042,"type":4,"author":"Christopher John Male","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/test/org/apache/lucene/index/TestPayloads.PayloadAnalyzer#tokenStream(String,Reader).mjava","sourceNew":null,"sourceOld":"        @Override\n        public TokenStream tokenStream(String fieldName, Reader reader) {\n            PayloadData payload =  fieldToData.get(fieldName);\n            TokenStream ts = new MockTokenizer(reader, MockTokenizer.WHITESPACE, false);\n            if (payload != null) {\n                if (payload.numFieldInstancesToSkip == 0) {\n                    ts = new PayloadFilter(ts, payload.data, payload.offset, payload.length);\n                } else {\n                    payload.numFieldInstancesToSkip--;\n                }\n            }\n            return ts;\n        }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"03276b2744036b1b19a7a2dd4b74ba7bc484f107":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"dca8d536ba2e4aab4623a172a22cc2885ec7cb3d":["03276b2744036b1b19a7a2dd4b74ba7bc484f107"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["dca8d536ba2e4aab4623a172a22cc2885ec7cb3d"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"03276b2744036b1b19a7a2dd4b74ba7bc484f107":["dca8d536ba2e4aab4623a172a22cc2885ec7cb3d"],"dca8d536ba2e4aab4623a172a22cc2885ec7cb3d":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["03276b2744036b1b19a7a2dd4b74ba7bc484f107"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}