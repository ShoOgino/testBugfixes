{"path":"modules/queryparser/src/test/org/apache/lucene/queryparser/xml/builders/TestNumericRangeFilterBuilder#testGetFilterHandleNumericParseError().mjava","commits":[{"id":"251550f5d19b526a76f8c5126ae7bb2d22cf8935","date":1315202008,"type":1,"author":"Christopher John Male","isMerge":false,"pathNew":"modules/queryparser/src/test/org/apache/lucene/queryparser/xml/builders/TestNumericRangeFilterBuilder#testGetFilterHandleNumericParseError().mjava","pathOld":"lucene/contrib/xml-query-parser/src/test/org/apache/lucene/xmlparser/builders/TestNumericRangeFilterBuilder#testGetFilterHandleNumericParseError().mjava","sourceNew":"  public void testGetFilterHandleNumericParseError() throws Exception {\n    NumericRangeFilterBuilder filterBuilder = new NumericRangeFilterBuilder();\n    filterBuilder.setStrictMode(false);\n\n    String xml = \"<NumericRangeFilter fieldName='AGE' type='int' lowerTerm='-1' upperTerm='NaN'/>\";\n    Document doc = getDocumentFromString(xml);\n    Filter filter = filterBuilder.getFilter(doc.getDocumentElement());\n    Directory ramDir = newDirectory();\n    IndexWriter writer = new IndexWriter(ramDir, newIndexWriterConfig(TEST_VERSION_CURRENT, null));\n    writer.commit();\n    try {\n      IndexReader reader = new SlowMultiReaderWrapper(IndexReader.open(ramDir, true));\n      try {\n        assertNull(filter.getDocIdSet((AtomicReaderContext) reader.getTopReaderContext()));\n      }\n      finally {\n        reader.close();\n      }\n    }\n    finally {\n      writer.commit();\n      writer.close();\n      ramDir.close();\n    }\n  }\n\n","sourceOld":"  public void testGetFilterHandleNumericParseError() throws Exception {\n    NumericRangeFilterBuilder filterBuilder = new NumericRangeFilterBuilder();\n    filterBuilder.setStrictMode(false);\n\n    String xml = \"<NumericRangeFilter fieldName='AGE' type='int' lowerTerm='-1' upperTerm='NaN'/>\";\n    Document doc = getDocumentFromString(xml);\n    Filter filter = filterBuilder.getFilter(doc.getDocumentElement());\n    Directory ramDir = newDirectory();\n    IndexWriter writer = new IndexWriter(ramDir, newIndexWriterConfig(TEST_VERSION_CURRENT, null));\n    writer.commit();\n    try {\n      IndexReader reader = new SlowMultiReaderWrapper(IndexReader.open(ramDir, true));\n      try {\n        assertNull(filter.getDocIdSet((AtomicReaderContext) reader.getTopReaderContext()));\n      }\n      finally {\n        reader.close();\n      }\n    }\n    finally {\n      writer.commit();\n      writer.close();\n      ramDir.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6620df8541b174097b1133a4fc370adb2e570524","date":1319544675,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"modules/queryparser/src/test/org/apache/lucene/queryparser/xml/builders/TestNumericRangeFilterBuilder#testGetFilterHandleNumericParseError().mjava","pathOld":"modules/queryparser/src/test/org/apache/lucene/queryparser/xml/builders/TestNumericRangeFilterBuilder#testGetFilterHandleNumericParseError().mjava","sourceNew":"  public void testGetFilterHandleNumericParseError() throws Exception {\n    NumericRangeFilterBuilder filterBuilder = new NumericRangeFilterBuilder();\n    filterBuilder.setStrictMode(false);\n\n    String xml = \"<NumericRangeFilter fieldName='AGE' type='int' lowerTerm='-1' upperTerm='NaN'/>\";\n    Document doc = getDocumentFromString(xml);\n    Filter filter = filterBuilder.getFilter(doc.getDocumentElement());\n    Directory ramDir = newDirectory();\n    IndexWriter writer = new IndexWriter(ramDir, newIndexWriterConfig(TEST_VERSION_CURRENT, null));\n    writer.commit();\n    try {\n      IndexReader reader = new SlowMultiReaderWrapper(IndexReader.open(ramDir, true));\n      try {\n        assertNull(filter.getDocIdSet((AtomicReaderContext) reader.getTopReaderContext(), reader.getLiveDocs()));\n      }\n      finally {\n        reader.close();\n      }\n    }\n    finally {\n      writer.commit();\n      writer.close();\n      ramDir.close();\n    }\n  }\n\n","sourceOld":"  public void testGetFilterHandleNumericParseError() throws Exception {\n    NumericRangeFilterBuilder filterBuilder = new NumericRangeFilterBuilder();\n    filterBuilder.setStrictMode(false);\n\n    String xml = \"<NumericRangeFilter fieldName='AGE' type='int' lowerTerm='-1' upperTerm='NaN'/>\";\n    Document doc = getDocumentFromString(xml);\n    Filter filter = filterBuilder.getFilter(doc.getDocumentElement());\n    Directory ramDir = newDirectory();\n    IndexWriter writer = new IndexWriter(ramDir, newIndexWriterConfig(TEST_VERSION_CURRENT, null));\n    writer.commit();\n    try {\n      IndexReader reader = new SlowMultiReaderWrapper(IndexReader.open(ramDir, true));\n      try {\n        assertNull(filter.getDocIdSet((AtomicReaderContext) reader.getTopReaderContext()));\n      }\n      finally {\n        reader.close();\n      }\n    }\n    finally {\n      writer.commit();\n      writer.close();\n      ramDir.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9f2f1c6050eb49fa5cb22fbdf977c76e65ea3caf","date":1323050351,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"modules/queryparser/src/test/org/apache/lucene/queryparser/xml/builders/TestNumericRangeFilterBuilder#testGetFilterHandleNumericParseError().mjava","pathOld":"modules/queryparser/src/test/org/apache/lucene/queryparser/xml/builders/TestNumericRangeFilterBuilder#testGetFilterHandleNumericParseError().mjava","sourceNew":"  public void testGetFilterHandleNumericParseError() throws Exception {\n    NumericRangeFilterBuilder filterBuilder = new NumericRangeFilterBuilder();\n    filterBuilder.setStrictMode(false);\n\n    String xml = \"<NumericRangeFilter fieldName='AGE' type='int' lowerTerm='-1' upperTerm='NaN'/>\";\n    Document doc = getDocumentFromString(xml);\n    Filter filter = filterBuilder.getFilter(doc.getDocumentElement());\n    Directory ramDir = newDirectory();\n    IndexWriter writer = new IndexWriter(ramDir, newIndexWriterConfig(TEST_VERSION_CURRENT, null));\n    writer.commit();\n    try {\n      IndexReader reader = new SlowMultiReaderWrapper(IndexReader.open(ramDir));\n      try {\n        assertNull(filter.getDocIdSet((AtomicReaderContext) reader.getTopReaderContext(), reader.getLiveDocs()));\n      }\n      finally {\n        reader.close();\n      }\n    }\n    finally {\n      writer.commit();\n      writer.close();\n      ramDir.close();\n    }\n  }\n\n","sourceOld":"  public void testGetFilterHandleNumericParseError() throws Exception {\n    NumericRangeFilterBuilder filterBuilder = new NumericRangeFilterBuilder();\n    filterBuilder.setStrictMode(false);\n\n    String xml = \"<NumericRangeFilter fieldName='AGE' type='int' lowerTerm='-1' upperTerm='NaN'/>\";\n    Document doc = getDocumentFromString(xml);\n    Filter filter = filterBuilder.getFilter(doc.getDocumentElement());\n    Directory ramDir = newDirectory();\n    IndexWriter writer = new IndexWriter(ramDir, newIndexWriterConfig(TEST_VERSION_CURRENT, null));\n    writer.commit();\n    try {\n      IndexReader reader = new SlowMultiReaderWrapper(IndexReader.open(ramDir, true));\n      try {\n        assertNull(filter.getDocIdSet((AtomicReaderContext) reader.getTopReaderContext(), reader.getLiveDocs()));\n      }\n      finally {\n        reader.close();\n      }\n    }\n    finally {\n      writer.commit();\n      writer.close();\n      ramDir.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3615ce4a1f785ae1b779244de52c6a7d99227e60","date":1323422019,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"modules/queryparser/src/test/org/apache/lucene/queryparser/xml/builders/TestNumericRangeFilterBuilder#testGetFilterHandleNumericParseError().mjava","pathOld":"modules/queryparser/src/test/org/apache/lucene/queryparser/xml/builders/TestNumericRangeFilterBuilder#testGetFilterHandleNumericParseError().mjava","sourceNew":"  public void testGetFilterHandleNumericParseError() throws Exception {\n    NumericRangeFilterBuilder filterBuilder = new NumericRangeFilterBuilder();\n    filterBuilder.setStrictMode(false);\n\n    String xml = \"<NumericRangeFilter fieldName='AGE' type='int' lowerTerm='-1' upperTerm='NaN'/>\";\n    Document doc = getDocumentFromString(xml);\n    Filter filter = filterBuilder.getFilter(doc.getDocumentElement());\n    Directory ramDir = newDirectory();\n    IndexWriter writer = new IndexWriter(ramDir, newIndexWriterConfig(TEST_VERSION_CURRENT, null));\n    writer.commit();\n    try {\n      IndexReader reader = new SlowMultiReaderWrapper(IndexReader.open(ramDir));\n      try {\n        assertNull(filter.getDocIdSet((AtomicReaderContext) reader.getTopReaderContext(), reader.getLiveDocs()));\n      }\n      finally {\n        reader.close();\n      }\n    }\n    finally {\n      writer.commit();\n      writer.close();\n      ramDir.close();\n    }\n  }\n\n","sourceOld":"  public void testGetFilterHandleNumericParseError() throws Exception {\n    NumericRangeFilterBuilder filterBuilder = new NumericRangeFilterBuilder();\n    filterBuilder.setStrictMode(false);\n\n    String xml = \"<NumericRangeFilter fieldName='AGE' type='int' lowerTerm='-1' upperTerm='NaN'/>\";\n    Document doc = getDocumentFromString(xml);\n    Filter filter = filterBuilder.getFilter(doc.getDocumentElement());\n    Directory ramDir = newDirectory();\n    IndexWriter writer = new IndexWriter(ramDir, newIndexWriterConfig(TEST_VERSION_CURRENT, null));\n    writer.commit();\n    try {\n      IndexReader reader = new SlowMultiReaderWrapper(IndexReader.open(ramDir, true));\n      try {\n        assertNull(filter.getDocIdSet((AtomicReaderContext) reader.getTopReaderContext(), reader.getLiveDocs()));\n      }\n      finally {\n        reader.close();\n      }\n    }\n    finally {\n      writer.commit();\n      writer.close();\n      ramDir.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","date":1323437438,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"modules/queryparser/src/test/org/apache/lucene/queryparser/xml/builders/TestNumericRangeFilterBuilder#testGetFilterHandleNumericParseError().mjava","pathOld":"modules/queryparser/src/test/org/apache/lucene/queryparser/xml/builders/TestNumericRangeFilterBuilder#testGetFilterHandleNumericParseError().mjava","sourceNew":"  public void testGetFilterHandleNumericParseError() throws Exception {\n    NumericRangeFilterBuilder filterBuilder = new NumericRangeFilterBuilder();\n    filterBuilder.setStrictMode(false);\n\n    String xml = \"<NumericRangeFilter fieldName='AGE' type='int' lowerTerm='-1' upperTerm='NaN'/>\";\n    Document doc = getDocumentFromString(xml);\n    Filter filter = filterBuilder.getFilter(doc.getDocumentElement());\n    Directory ramDir = newDirectory();\n    IndexWriter writer = new IndexWriter(ramDir, newIndexWriterConfig(TEST_VERSION_CURRENT, null));\n    writer.commit();\n    try {\n      IndexReader reader = new SlowMultiReaderWrapper(IndexReader.open(ramDir));\n      try {\n        assertNull(filter.getDocIdSet((AtomicReaderContext) reader.getTopReaderContext(), reader.getLiveDocs()));\n      }\n      finally {\n        reader.close();\n      }\n    }\n    finally {\n      writer.commit();\n      writer.close();\n      ramDir.close();\n    }\n  }\n\n","sourceOld":"  public void testGetFilterHandleNumericParseError() throws Exception {\n    NumericRangeFilterBuilder filterBuilder = new NumericRangeFilterBuilder();\n    filterBuilder.setStrictMode(false);\n\n    String xml = \"<NumericRangeFilter fieldName='AGE' type='int' lowerTerm='-1' upperTerm='NaN'/>\";\n    Document doc = getDocumentFromString(xml);\n    Filter filter = filterBuilder.getFilter(doc.getDocumentElement());\n    Directory ramDir = newDirectory();\n    IndexWriter writer = new IndexWriter(ramDir, newIndexWriterConfig(TEST_VERSION_CURRENT, null));\n    writer.commit();\n    try {\n      IndexReader reader = new SlowMultiReaderWrapper(IndexReader.open(ramDir, true));\n      try {\n        assertNull(filter.getDocIdSet((AtomicReaderContext) reader.getTopReaderContext(), reader.getLiveDocs()));\n      }\n      finally {\n        reader.close();\n      }\n    }\n    finally {\n      writer.commit();\n      writer.close();\n      ramDir.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ff15521f008e581324bc43e2016b77659639e3da","date":1327850735,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"modules/queryparser/src/test/org/apache/lucene/queryparser/xml/builders/TestNumericRangeFilterBuilder#testGetFilterHandleNumericParseError().mjava","pathOld":"modules/queryparser/src/test/org/apache/lucene/queryparser/xml/builders/TestNumericRangeFilterBuilder#testGetFilterHandleNumericParseError().mjava","sourceNew":"  public void testGetFilterHandleNumericParseError() throws Exception {\n    NumericRangeFilterBuilder filterBuilder = new NumericRangeFilterBuilder();\n    filterBuilder.setStrictMode(false);\n\n    String xml = \"<NumericRangeFilter fieldName='AGE' type='int' lowerTerm='-1' upperTerm='NaN'/>\";\n    Document doc = getDocumentFromString(xml);\n    Filter filter = filterBuilder.getFilter(doc.getDocumentElement());\n    Directory ramDir = newDirectory();\n    IndexWriter writer = new IndexWriter(ramDir, newIndexWriterConfig(TEST_VERSION_CURRENT, null));\n    writer.commit();\n    try {\n      AtomicIndexReader reader = new SlowCompositeReaderWrapper(IndexReader.open(ramDir));\n      try {\n        assertNull(filter.getDocIdSet((AtomicReaderContext) reader.getTopReaderContext(), reader.getLiveDocs()));\n      }\n      finally {\n        reader.close();\n      }\n    }\n    finally {\n      writer.commit();\n      writer.close();\n      ramDir.close();\n    }\n  }\n\n","sourceOld":"  public void testGetFilterHandleNumericParseError() throws Exception {\n    NumericRangeFilterBuilder filterBuilder = new NumericRangeFilterBuilder();\n    filterBuilder.setStrictMode(false);\n\n    String xml = \"<NumericRangeFilter fieldName='AGE' type='int' lowerTerm='-1' upperTerm='NaN'/>\";\n    Document doc = getDocumentFromString(xml);\n    Filter filter = filterBuilder.getFilter(doc.getDocumentElement());\n    Directory ramDir = newDirectory();\n    IndexWriter writer = new IndexWriter(ramDir, newIndexWriterConfig(TEST_VERSION_CURRENT, null));\n    writer.commit();\n    try {\n      IndexReader reader = new SlowMultiReaderWrapper(IndexReader.open(ramDir));\n      try {\n        assertNull(filter.getDocIdSet((AtomicReaderContext) reader.getTopReaderContext(), reader.getLiveDocs()));\n      }\n      finally {\n        reader.close();\n      }\n    }\n    finally {\n      writer.commit();\n      writer.close();\n      ramDir.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"da6d5ac19a80d65b1e864251f155d30960353b7e","date":1327881054,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"modules/queryparser/src/test/org/apache/lucene/queryparser/xml/builders/TestNumericRangeFilterBuilder#testGetFilterHandleNumericParseError().mjava","pathOld":"modules/queryparser/src/test/org/apache/lucene/queryparser/xml/builders/TestNumericRangeFilterBuilder#testGetFilterHandleNumericParseError().mjava","sourceNew":"  public void testGetFilterHandleNumericParseError() throws Exception {\n    NumericRangeFilterBuilder filterBuilder = new NumericRangeFilterBuilder();\n    filterBuilder.setStrictMode(false);\n\n    String xml = \"<NumericRangeFilter fieldName='AGE' type='int' lowerTerm='-1' upperTerm='NaN'/>\";\n    Document doc = getDocumentFromString(xml);\n    Filter filter = filterBuilder.getFilter(doc.getDocumentElement());\n    Directory ramDir = newDirectory();\n    IndexWriter writer = new IndexWriter(ramDir, newIndexWriterConfig(TEST_VERSION_CURRENT, null));\n    writer.commit();\n    try {\n      AtomicReader reader = new SlowCompositeReaderWrapper(IndexReader.open(ramDir));\n      try {\n        assertNull(filter.getDocIdSet((AtomicReaderContext) reader.getTopReaderContext(), reader.getLiveDocs()));\n      }\n      finally {\n        reader.close();\n      }\n    }\n    finally {\n      writer.commit();\n      writer.close();\n      ramDir.close();\n    }\n  }\n\n","sourceOld":"  public void testGetFilterHandleNumericParseError() throws Exception {\n    NumericRangeFilterBuilder filterBuilder = new NumericRangeFilterBuilder();\n    filterBuilder.setStrictMode(false);\n\n    String xml = \"<NumericRangeFilter fieldName='AGE' type='int' lowerTerm='-1' upperTerm='NaN'/>\";\n    Document doc = getDocumentFromString(xml);\n    Filter filter = filterBuilder.getFilter(doc.getDocumentElement());\n    Directory ramDir = newDirectory();\n    IndexWriter writer = new IndexWriter(ramDir, newIndexWriterConfig(TEST_VERSION_CURRENT, null));\n    writer.commit();\n    try {\n      AtomicIndexReader reader = new SlowCompositeReaderWrapper(IndexReader.open(ramDir));\n      try {\n        assertNull(filter.getDocIdSet((AtomicReaderContext) reader.getTopReaderContext(), reader.getLiveDocs()));\n      }\n      finally {\n        reader.close();\n      }\n    }\n    finally {\n      writer.commit();\n      writer.close();\n      ramDir.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5cab9a86bd67202d20b6adc463008c8e982b070a","date":1327966443,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"modules/queryparser/src/test/org/apache/lucene/queryparser/xml/builders/TestNumericRangeFilterBuilder#testGetFilterHandleNumericParseError().mjava","pathOld":"modules/queryparser/src/test/org/apache/lucene/queryparser/xml/builders/TestNumericRangeFilterBuilder#testGetFilterHandleNumericParseError().mjava","sourceNew":"  public void testGetFilterHandleNumericParseError() throws Exception {\n    NumericRangeFilterBuilder filterBuilder = new NumericRangeFilterBuilder();\n    filterBuilder.setStrictMode(false);\n\n    String xml = \"<NumericRangeFilter fieldName='AGE' type='int' lowerTerm='-1' upperTerm='NaN'/>\";\n    Document doc = getDocumentFromString(xml);\n    Filter filter = filterBuilder.getFilter(doc.getDocumentElement());\n    Directory ramDir = newDirectory();\n    IndexWriter writer = new IndexWriter(ramDir, newIndexWriterConfig(TEST_VERSION_CURRENT, null));\n    writer.commit();\n    try {\n      AtomicReader reader = new SlowCompositeReaderWrapper(IndexReader.open(ramDir));\n      try {\n        assertNull(filter.getDocIdSet((AtomicReaderContext) reader.getTopReaderContext(), reader.getLiveDocs()));\n      }\n      finally {\n        reader.close();\n      }\n    }\n    finally {\n      writer.commit();\n      writer.close();\n      ramDir.close();\n    }\n  }\n\n","sourceOld":"  public void testGetFilterHandleNumericParseError() throws Exception {\n    NumericRangeFilterBuilder filterBuilder = new NumericRangeFilterBuilder();\n    filterBuilder.setStrictMode(false);\n\n    String xml = \"<NumericRangeFilter fieldName='AGE' type='int' lowerTerm='-1' upperTerm='NaN'/>\";\n    Document doc = getDocumentFromString(xml);\n    Filter filter = filterBuilder.getFilter(doc.getDocumentElement());\n    Directory ramDir = newDirectory();\n    IndexWriter writer = new IndexWriter(ramDir, newIndexWriterConfig(TEST_VERSION_CURRENT, null));\n    writer.commit();\n    try {\n      IndexReader reader = new SlowMultiReaderWrapper(IndexReader.open(ramDir));\n      try {\n        assertNull(filter.getDocIdSet((AtomicReaderContext) reader.getTopReaderContext(), reader.getLiveDocs()));\n      }\n      finally {\n        reader.close();\n      }\n    }\n    finally {\n      writer.commit();\n      writer.close();\n      ramDir.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e055d0fbae1157fba0eaa28cbe89da6142162963","date":1327971058,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"modules/queryparser/src/test/org/apache/lucene/queryparser/xml/builders/TestNumericRangeFilterBuilder#testGetFilterHandleNumericParseError().mjava","pathOld":"modules/queryparser/src/test/org/apache/lucene/queryparser/xml/builders/TestNumericRangeFilterBuilder#testGetFilterHandleNumericParseError().mjava","sourceNew":"  public void testGetFilterHandleNumericParseError() throws Exception {\n    NumericRangeFilterBuilder filterBuilder = new NumericRangeFilterBuilder();\n    filterBuilder.setStrictMode(false);\n\n    String xml = \"<NumericRangeFilter fieldName='AGE' type='int' lowerTerm='-1' upperTerm='NaN'/>\";\n    Document doc = getDocumentFromString(xml);\n    Filter filter = filterBuilder.getFilter(doc.getDocumentElement());\n    Directory ramDir = newDirectory();\n    IndexWriter writer = new IndexWriter(ramDir, newIndexWriterConfig(TEST_VERSION_CURRENT, null));\n    writer.commit();\n    try {\n      AtomicReader reader = new SlowCompositeReaderWrapper(IndexReader.open(ramDir));\n      try {\n        assertNull(filter.getDocIdSet(reader.getTopReaderContext(), reader.getLiveDocs()));\n      }\n      finally {\n        reader.close();\n      }\n    }\n    finally {\n      writer.commit();\n      writer.close();\n      ramDir.close();\n    }\n  }\n\n","sourceOld":"  public void testGetFilterHandleNumericParseError() throws Exception {\n    NumericRangeFilterBuilder filterBuilder = new NumericRangeFilterBuilder();\n    filterBuilder.setStrictMode(false);\n\n    String xml = \"<NumericRangeFilter fieldName='AGE' type='int' lowerTerm='-1' upperTerm='NaN'/>\";\n    Document doc = getDocumentFromString(xml);\n    Filter filter = filterBuilder.getFilter(doc.getDocumentElement());\n    Directory ramDir = newDirectory();\n    IndexWriter writer = new IndexWriter(ramDir, newIndexWriterConfig(TEST_VERSION_CURRENT, null));\n    writer.commit();\n    try {\n      AtomicReader reader = new SlowCompositeReaderWrapper(IndexReader.open(ramDir));\n      try {\n        assertNull(filter.getDocIdSet((AtomicReaderContext) reader.getTopReaderContext(), reader.getLiveDocs()));\n      }\n      finally {\n        reader.close();\n      }\n    }\n    finally {\n      writer.commit();\n      writer.close();\n      ramDir.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queryparser/src/test/org/apache/lucene/queryparser/xml/builders/TestNumericRangeFilterBuilder#testGetFilterHandleNumericParseError().mjava","pathOld":"modules/queryparser/src/test/org/apache/lucene/queryparser/xml/builders/TestNumericRangeFilterBuilder#testGetFilterHandleNumericParseError().mjava","sourceNew":"  public void testGetFilterHandleNumericParseError() throws Exception {\n    NumericRangeFilterBuilder filterBuilder = new NumericRangeFilterBuilder();\n    filterBuilder.setStrictMode(false);\n\n    String xml = \"<NumericRangeFilter fieldName='AGE' type='int' lowerTerm='-1' upperTerm='NaN'/>\";\n    Document doc = getDocumentFromString(xml);\n    Filter filter = filterBuilder.getFilter(doc.getDocumentElement());\n    Directory ramDir = newDirectory();\n    IndexWriter writer = new IndexWriter(ramDir, newIndexWriterConfig(TEST_VERSION_CURRENT, null));\n    writer.commit();\n    try {\n      AtomicReader reader = new SlowCompositeReaderWrapper(IndexReader.open(ramDir));\n      try {\n        assertNull(filter.getDocIdSet(reader.getTopReaderContext(), reader.getLiveDocs()));\n      }\n      finally {\n        reader.close();\n      }\n    }\n    finally {\n      writer.commit();\n      writer.close();\n      ramDir.close();\n    }\n  }\n\n","sourceOld":"  public void testGetFilterHandleNumericParseError() throws Exception {\n    NumericRangeFilterBuilder filterBuilder = new NumericRangeFilterBuilder();\n    filterBuilder.setStrictMode(false);\n\n    String xml = \"<NumericRangeFilter fieldName='AGE' type='int' lowerTerm='-1' upperTerm='NaN'/>\";\n    Document doc = getDocumentFromString(xml);\n    Filter filter = filterBuilder.getFilter(doc.getDocumentElement());\n    Directory ramDir = newDirectory();\n    IndexWriter writer = new IndexWriter(ramDir, newIndexWriterConfig(TEST_VERSION_CURRENT, null));\n    writer.commit();\n    try {\n      AtomicReader reader = new SlowCompositeReaderWrapper(IndexReader.open(ramDir));\n      try {\n        assertNull(filter.getDocIdSet(reader.getTopReaderContext(), reader.getLiveDocs()));\n      }\n      finally {\n        reader.close();\n      }\n    }\n    finally {\n      writer.commit();\n      writer.close();\n      ramDir.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9f2f1c6050eb49fa5cb22fbdf977c76e65ea3caf":["6620df8541b174097b1133a4fc370adb2e570524"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["e055d0fbae1157fba0eaa28cbe89da6142162963"],"6620df8541b174097b1133a4fc370adb2e570524":["251550f5d19b526a76f8c5126ae7bb2d22cf8935"],"da6d5ac19a80d65b1e864251f155d30960353b7e":["ff15521f008e581324bc43e2016b77659639e3da"],"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00":["6620df8541b174097b1133a4fc370adb2e570524","3615ce4a1f785ae1b779244de52c6a7d99227e60"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"251550f5d19b526a76f8c5126ae7bb2d22cf8935":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3615ce4a1f785ae1b779244de52c6a7d99227e60":["6620df8541b174097b1133a4fc370adb2e570524","9f2f1c6050eb49fa5cb22fbdf977c76e65ea3caf"],"e055d0fbae1157fba0eaa28cbe89da6142162963":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"ff15521f008e581324bc43e2016b77659639e3da":["3615ce4a1f785ae1b779244de52c6a7d99227e60"],"5cab9a86bd67202d20b6adc463008c8e982b070a":["3615ce4a1f785ae1b779244de52c6a7d99227e60","da6d5ac19a80d65b1e864251f155d30960353b7e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"9f2f1c6050eb49fa5cb22fbdf977c76e65ea3caf":["3615ce4a1f785ae1b779244de52c6a7d99227e60"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"6620df8541b174097b1133a4fc370adb2e570524":["9f2f1c6050eb49fa5cb22fbdf977c76e65ea3caf","ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","3615ce4a1f785ae1b779244de52c6a7d99227e60"],"da6d5ac19a80d65b1e864251f155d30960353b7e":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["251550f5d19b526a76f8c5126ae7bb2d22cf8935"],"251550f5d19b526a76f8c5126ae7bb2d22cf8935":["6620df8541b174097b1133a4fc370adb2e570524"],"3615ce4a1f785ae1b779244de52c6a7d99227e60":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","ff15521f008e581324bc43e2016b77659639e3da","5cab9a86bd67202d20b6adc463008c8e982b070a"],"e055d0fbae1157fba0eaa28cbe89da6142162963":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"ff15521f008e581324bc43e2016b77659639e3da":["da6d5ac19a80d65b1e864251f155d30960353b7e"],"5cab9a86bd67202d20b6adc463008c8e982b070a":["e055d0fbae1157fba0eaa28cbe89da6142162963"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ba5bc70a1fc1e0abc1eb4171af0d6f2532711c00","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}