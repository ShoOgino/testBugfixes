{"path":"src/java/org/apache/lucene/index/IndexReader#directory().mjava","commits":[{"id":"e7fb6d70db034a5456ae560175dd1b821eea9ff4","date":1066759157,"type":0,"author":"Doug Cutting","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexReader#directory().mjava","pathOld":"/dev/null","sourceNew":"  /** Returns the directory this index resides in. */\n  public Directory directory() { return directory; }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["328c1568e471f0c6eaa49ec00334ca59e573710f"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"328c1568e471f0c6eaa49ec00334ca59e573710f","date":1173897963,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexReader#directory().mjava","pathOld":"src/java/org/apache/lucene/index/IndexReader#directory().mjava","sourceNew":"  /** Returns the directory this index resides in.\n   */\n  public Directory directory() {\n    ensureOpen();\n    return directory;\n  }\n\n","sourceOld":"  /** Returns the directory this index resides in. */\n  public Directory directory() { return directory; }\n\n","bugFix":["e7fb6d70db034a5456ae560175dd1b821eea9ff4"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"125b5699f11b58d9be0820c6ce8b1648812902e8","date":1190273227,"type":3,"author":"Michael Busch","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexReader#directory().mjava","pathOld":"src/java/org/apache/lucene/index/IndexReader#directory().mjava","sourceNew":"  /** \n   * Returns the directory associated with this index.  The Default \n   * implementation returns the directory specified by subclasses when \n   * delegating to the IndexReader(Directory) constructor, or throws an \n   * UnsupportedOperationException if one was not specified.\n   * @throws UnsupportedOperationException if no directory\n   */\n  public Directory directory() {\n    ensureOpen();\n    if (null != directory) {\n      return directory;\n    } else {\n      throw new UnsupportedOperationException(\"This reader does not support this method.\");  \n    }\n  }\n\n","sourceOld":"  /** Returns the directory this index resides in.\n   */\n  public Directory directory() {\n    ensureOpen();\n    return directory;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"eaea03be31988a41275d45a429ac71ff0ad740fb","date":1254612554,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/IndexReader#directory().mjava","pathOld":"src/java/org/apache/lucene/index/IndexReader#directory().mjava","sourceNew":"  /** \n   * Returns the directory associated with this index.  The Default \n   * implementation returns the directory specified by subclasses when \n   * delegating to the IndexReader(Directory) constructor, or throws an \n   * UnsupportedOperationException if one was not specified.\n   * @throws UnsupportedOperationException if no directory\n   */\n  public Directory directory() {\n    ensureOpen();\n    throw new UnsupportedOperationException(\"This reader does not support this method.\");  \n  }\n\n","sourceOld":"  /** \n   * Returns the directory associated with this index.  The Default \n   * implementation returns the directory specified by subclasses when \n   * delegating to the IndexReader(Directory) constructor, or throws an \n   * UnsupportedOperationException if one was not specified.\n   * @throws UnsupportedOperationException if no directory\n   */\n  public Directory directory() {\n    ensureOpen();\n    if (null != directory) {\n      return directory;\n    } else {\n      throw new UnsupportedOperationException(\"This reader does not support this method.\");  \n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/IndexReader#directory().mjava","pathOld":"src/java/org/apache/lucene/index/IndexReader#directory().mjava","sourceNew":"  /** \n   * Returns the directory associated with this index.  The Default \n   * implementation returns the directory specified by subclasses when \n   * delegating to the IndexReader(Directory) constructor, or throws an \n   * UnsupportedOperationException if one was not specified.\n   * @throws UnsupportedOperationException if no directory\n   */\n  public Directory directory() {\n    ensureOpen();\n    throw new UnsupportedOperationException(\"This reader does not support this method.\");  \n  }\n\n","sourceOld":"  /** \n   * Returns the directory associated with this index.  The Default \n   * implementation returns the directory specified by subclasses when \n   * delegating to the IndexReader(Directory) constructor, or throws an \n   * UnsupportedOperationException if one was not specified.\n   * @throws UnsupportedOperationException if no directory\n   */\n  public Directory directory() {\n    ensureOpen();\n    throw new UnsupportedOperationException(\"This reader does not support this method.\");  \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"eaea03be31988a41275d45a429ac71ff0ad740fb":["125b5699f11b58d9be0820c6ce8b1648812902e8"],"125b5699f11b58d9be0820c6ce8b1648812902e8":["328c1568e471f0c6eaa49ec00334ca59e573710f"],"328c1568e471f0c6eaa49ec00334ca59e573710f":["e7fb6d70db034a5456ae560175dd1b821eea9ff4"],"e7fb6d70db034a5456ae560175dd1b821eea9ff4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["eaea03be31988a41275d45a429ac71ff0ad740fb"]},"commit2Childs":{"eaea03be31988a41275d45a429ac71ff0ad740fb":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"125b5699f11b58d9be0820c6ce8b1648812902e8":["eaea03be31988a41275d45a429ac71ff0ad740fb"],"328c1568e471f0c6eaa49ec00334ca59e573710f":["125b5699f11b58d9be0820c6ce8b1648812902e8"],"e7fb6d70db034a5456ae560175dd1b821eea9ff4":["328c1568e471f0c6eaa49ec00334ca59e573710f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e7fb6d70db034a5456ae560175dd1b821eea9ff4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}