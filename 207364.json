{"path":"lucene/analysis/icu/src/java/org/apache/lucene/analysis/icu/ICUTransformFilter#ICUTransformFilter(TokenStream,Transliterator).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/icu/src/java/org/apache/lucene/analysis/icu/ICUTransformFilter#ICUTransformFilter(TokenStream,Transliterator).mjava","pathOld":"modules/analysis/icu/src/java/org/apache/lucene/analysis/icu/ICUTransformFilter#ICUTransformFilter(TokenStream,Transliterator).mjava","sourceNew":"  /**\n   * Create a new ICUTransformFilter that transforms text on the given stream.\n   * \n   * @param input {@link TokenStream} to filter.\n   * @param transform Transliterator to transform the text.\n   */\n  public ICUTransformFilter(TokenStream input, Transliterator transform) {\n    super(input);\n    this.transform = transform;\n\n    /* \n     * This is cheating, but speeds things up a lot.\n     * If we wanted to use pkg-private APIs we could probably do better.\n     */\n    if (transform.getFilter() == null && transform instanceof com.ibm.icu.text.RuleBasedTransliterator) {\n      final UnicodeSet sourceSet = transform.getSourceSet();\n      if (sourceSet != null && !sourceSet.isEmpty())\n        transform.setFilter(sourceSet);\n    }\n  }\n\n","sourceOld":"  /**\n   * Create a new ICUTransformFilter that transforms text on the given stream.\n   * \n   * @param input {@link TokenStream} to filter.\n   * @param transform Transliterator to transform the text.\n   */\n  public ICUTransformFilter(TokenStream input, Transliterator transform) {\n    super(input);\n    this.transform = transform;\n\n    /* \n     * This is cheating, but speeds things up a lot.\n     * If we wanted to use pkg-private APIs we could probably do better.\n     */\n    if (transform.getFilter() == null && transform instanceof com.ibm.icu.text.RuleBasedTransliterator) {\n      final UnicodeSet sourceSet = transform.getSourceSet();\n      if (sourceSet != null && !sourceSet.isEmpty())\n        transform.setFilter(sourceSet);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9","date":1574619880,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"lucene/analysis/icu/src/java/org/apache/lucene/analysis/icu/ICUTransformFilter#ICUTransformFilter(TokenStream,Transliterator).mjava","pathOld":"lucene/analysis/icu/src/java/org/apache/lucene/analysis/icu/ICUTransformFilter#ICUTransformFilter(TokenStream,Transliterator).mjava","sourceNew":"  /**\n   * Create a new ICUTransformFilter that transforms text on the given stream.\n   * \n   * @param input {@link TokenStream} to filter.\n   * @param transform Transliterator to transform the text.\n   */\n  @SuppressWarnings(\"deprecation\")\n  public ICUTransformFilter(TokenStream input, Transliterator transform) {\n    super(input);\n    this.transform = transform;\n\n    /* \n     * This is cheating, but speeds things up a lot.\n     * If we wanted to use pkg-private APIs we could probably do better.\n     */\n    if (transform.getFilter() == null && transform instanceof com.ibm.icu.text.RuleBasedTransliterator) {\n      final UnicodeSet sourceSet = transform.getSourceSet();\n      if (sourceSet != null && !sourceSet.isEmpty())\n        transform.setFilter(sourceSet);\n    }\n  }\n\n","sourceOld":"  /**\n   * Create a new ICUTransformFilter that transforms text on the given stream.\n   * \n   * @param input {@link TokenStream} to filter.\n   * @param transform Transliterator to transform the text.\n   */\n  public ICUTransformFilter(TokenStream input, Transliterator transform) {\n    super(input);\n    this.transform = transform;\n\n    /* \n     * This is cheating, but speeds things up a lot.\n     * If we wanted to use pkg-private APIs we could probably do better.\n     */\n    if (transform.getFilter() == null && transform instanceof com.ibm.icu.text.RuleBasedTransliterator) {\n      final UnicodeSet sourceSet = transform.getSourceSet();\n      if (sourceSet != null && !sourceSet.isEmpty())\n        transform.setFilter(sourceSet);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb9c3baacabd473e8ecd6c4948aabacead49b88e","date":1574700980,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/analysis/icu/src/java/org/apache/lucene/analysis/icu/ICUTransformFilter#ICUTransformFilter(TokenStream,Transliterator).mjava","pathOld":"lucene/analysis/icu/src/java/org/apache/lucene/analysis/icu/ICUTransformFilter#ICUTransformFilter(TokenStream,Transliterator).mjava","sourceNew":"  /**\n   * Create a new ICUTransformFilter that transforms text on the given stream.\n   * \n   * @param input {@link TokenStream} to filter.\n   * @param transform Transliterator to transform the text.\n   */\n  public ICUTransformFilter(TokenStream input, Transliterator transform) {\n    super(input);\n    this.transform = transform;\n\n    /* \n     * This is cheating, but speeds things up a lot.\n     * If we wanted to use pkg-private APIs we could probably do better.\n     */\n    if (transform.getFilter() == null && transform instanceof com.ibm.icu.text.RuleBasedTransliterator) {\n      final UnicodeSet sourceSet = transform.getSourceSet();\n      if (sourceSet != null && !sourceSet.isEmpty())\n        transform.setFilter(sourceSet);\n    }\n  }\n\n","sourceOld":"  /**\n   * Create a new ICUTransformFilter that transforms text on the given stream.\n   * \n   * @param input {@link TokenStream} to filter.\n   * @param transform Transliterator to transform the text.\n   */\n  @SuppressWarnings(\"deprecation\")\n  public ICUTransformFilter(TokenStream input, Transliterator transform) {\n    super(input);\n    this.transform = transform;\n\n    /* \n     * This is cheating, but speeds things up a lot.\n     * If we wanted to use pkg-private APIs we could probably do better.\n     */\n    if (transform.getFilter() == null && transform instanceof com.ibm.icu.text.RuleBasedTransliterator) {\n      final UnicodeSet sourceSet = transform.getSourceSet();\n      if (sourceSet != null && !sourceSet.isEmpty())\n        transform.setFilter(sourceSet);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f95c0e33e58652b2a4d8560c8297dbe86ff5b1f2","date":1591961131,"type":3,"author":"Michael Sokolov","isMerge":false,"pathNew":"lucene/analysis/icu/src/java/org/apache/lucene/analysis/icu/ICUTransformFilter#ICUTransformFilter(TokenStream,Transliterator).mjava","pathOld":"lucene/analysis/icu/src/java/org/apache/lucene/analysis/icu/ICUTransformFilter#ICUTransformFilter(TokenStream,Transliterator).mjava","sourceNew":"  /**\n   * Create a new ICUTransformFilter that transforms text on the given stream.\n   * \n   * @param input {@link TokenStream} to filter.\n   * @param transform Transliterator to transform the text.\n   */\n  @SuppressWarnings(\"deprecation\")\n  public ICUTransformFilter(TokenStream input, Transliterator transform) {\n    super(input);\n    this.transform = transform;\n\n    /* \n     * This is cheating, but speeds things up a lot.\n     * If we wanted to use pkg-private APIs we could probably do better.\n     */\n    if (transform.getFilter() == null && transform instanceof com.ibm.icu.text.RuleBasedTransliterator) {\n      final UnicodeSet sourceSet = transform.getSourceSet();\n      if (sourceSet != null && !sourceSet.isEmpty())\n        transform.setFilter(sourceSet);\n    }\n  }\n\n","sourceOld":"  /**\n   * Create a new ICUTransformFilter that transforms text on the given stream.\n   * \n   * @param input {@link TokenStream} to filter.\n   * @param transform Transliterator to transform the text.\n   */\n  public ICUTransformFilter(TokenStream input, Transliterator transform) {\n    super(input);\n    this.transform = transform;\n\n    /* \n     * This is cheating, but speeds things up a lot.\n     * If we wanted to use pkg-private APIs we could probably do better.\n     */\n    if (transform.getFilter() == null && transform instanceof com.ibm.icu.text.RuleBasedTransliterator) {\n      final UnicodeSet sourceSet = transform.getSourceSet();\n      if (sourceSet != null && !sourceSet.isEmpty())\n        transform.setFilter(sourceSet);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bb9c3baacabd473e8ecd6c4948aabacead49b88e":["a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9"],"f95c0e33e58652b2a4d8560c8297dbe86ff5b1f2":["bb9c3baacabd473e8ecd6c4948aabacead49b88e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f95c0e33e58652b2a4d8560c8297dbe86ff5b1f2"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9"],"a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9":["bb9c3baacabd473e8ecd6c4948aabacead49b88e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"bb9c3baacabd473e8ecd6c4948aabacead49b88e":["f95c0e33e58652b2a4d8560c8297dbe86ff5b1f2"],"f95c0e33e58652b2a4d8560c8297dbe86ff5b1f2":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}