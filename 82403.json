{"path":"src/solrj/org/apache/solr/client/solrj/request/CoreAdminRequest.Create#getParams().mjava","commits":[{"id":"e3602d5eab954caecc726ab136ad580ac1ceb917","date":1228676831,"type":1,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/solrj/org/apache/solr/client/solrj/request/CoreAdminRequest.Create#getParams().mjava","pathOld":"client/java/solrj/src/org/apache/solr/client/solrj/request/CoreAdminRequest.Create#getParams().mjava","sourceNew":"    @Override\n    public SolrParams getParams() {\n      if( action == null ) {\n        throw new RuntimeException( \"no action specified!\" );\n      }\n      ModifiableSolrParams params = new ModifiableSolrParams();\n      params.set( CoreAdminParams.ACTION, action.toString() );\n      if( action.equals(CoreAdminAction.CREATE) ) {\n        params.set( CoreAdminParams.NAME, core );\n      } else {\n        params.set( CoreAdminParams.CORE, core );\n      }\n      params.set( CoreAdminParams.INSTANCE_DIR, instanceDir);\n      if (configName != null) {\n        params.set( CoreAdminParams.CONFIG, configName);\n      }\n      if (schemaName != null) {\n        params.set( CoreAdminParams.SCHEMA, schemaName);\n      }\n      return params;\n    }\n\n","sourceOld":"    @Override\n    public SolrParams getParams() {\n      if( action == null ) {\n        throw new RuntimeException( \"no action specified!\" );\n      }\n      ModifiableSolrParams params = new ModifiableSolrParams();\n      params.set( CoreAdminParams.ACTION, action.toString() );\n      if( action.equals(CoreAdminAction.CREATE) ) {\n        params.set( CoreAdminParams.NAME, core );\n      } else {\n        params.set( CoreAdminParams.CORE, core );\n      }\n      params.set( CoreAdminParams.INSTANCE_DIR, instanceDir);\n      if (configName != null) {\n        params.set( CoreAdminParams.CONFIG, configName);\n      }\n      if (schemaName != null) {\n        params.set( CoreAdminParams.SCHEMA, schemaName);\n      }\n      return params;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5fa19516aba024bdd967f7fac647877ab3b7ffa7","date":1254840345,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"src/solrj/org/apache/solr/client/solrj/request/CoreAdminRequest.Create#getParams().mjava","pathOld":"src/solrj/org/apache/solr/client/solrj/request/CoreAdminRequest.Create#getParams().mjava","sourceNew":"    @Override\n    public SolrParams getParams() {\n      if( action == null ) {\n        throw new RuntimeException( \"no action specified!\" );\n      }\n      ModifiableSolrParams params = new ModifiableSolrParams();\n      params.set( CoreAdminParams.ACTION, action.toString() );\n      if( action.equals(CoreAdminAction.CREATE) ) {\n        params.set( CoreAdminParams.NAME, core );\n      } else {\n        params.set( CoreAdminParams.CORE, core );\n      }\n      params.set( CoreAdminParams.INSTANCE_DIR, instanceDir);\n      if (configName != null) {\n        params.set( CoreAdminParams.CONFIG, configName);\n      }\n      if (schemaName != null) {\n        params.set( CoreAdminParams.SCHEMA, schemaName);\n      }\n      if (dataDir != null) {\n        params.set( CoreAdminParams.DATA_DIR, dataDir);\n      }\n      return params;\n    }\n\n","sourceOld":"    @Override\n    public SolrParams getParams() {\n      if( action == null ) {\n        throw new RuntimeException( \"no action specified!\" );\n      }\n      ModifiableSolrParams params = new ModifiableSolrParams();\n      params.set( CoreAdminParams.ACTION, action.toString() );\n      if( action.equals(CoreAdminAction.CREATE) ) {\n        params.set( CoreAdminParams.NAME, core );\n      } else {\n        params.set( CoreAdminParams.CORE, core );\n      }\n      params.set( CoreAdminParams.INSTANCE_DIR, instanceDir);\n      if (configName != null) {\n        params.set( CoreAdminParams.CONFIG, configName);\n      }\n      if (schemaName != null) {\n        params.set( CoreAdminParams.SCHEMA, schemaName);\n      }\n      return params;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/solrj/org/apache/solr/client/solrj/request/CoreAdminRequest.Create#getParams().mjava","pathOld":"src/solrj/org/apache/solr/client/solrj/request/CoreAdminRequest.Create#getParams().mjava","sourceNew":"    @Override\n    public SolrParams getParams() {\n      if( action == null ) {\n        throw new RuntimeException( \"no action specified!\" );\n      }\n      ModifiableSolrParams params = new ModifiableSolrParams();\n      params.set( CoreAdminParams.ACTION, action.toString() );\n      if( action.equals(CoreAdminAction.CREATE) ) {\n        params.set( CoreAdminParams.NAME, core );\n      } else {\n        params.set( CoreAdminParams.CORE, core );\n      }\n      params.set( CoreAdminParams.INSTANCE_DIR, instanceDir);\n      if (configName != null) {\n        params.set( CoreAdminParams.CONFIG, configName);\n      }\n      if (schemaName != null) {\n        params.set( CoreAdminParams.SCHEMA, schemaName);\n      }\n      if (dataDir != null) {\n        params.set( CoreAdminParams.DATA_DIR, dataDir);\n      }\n      return params;\n    }\n\n","sourceOld":"    @Override\n    public SolrParams getParams() {\n      if( action == null ) {\n        throw new RuntimeException( \"no action specified!\" );\n      }\n      ModifiableSolrParams params = new ModifiableSolrParams();\n      params.set( CoreAdminParams.ACTION, action.toString() );\n      if( action.equals(CoreAdminAction.CREATE) ) {\n        params.set( CoreAdminParams.NAME, core );\n      } else {\n        params.set( CoreAdminParams.CORE, core );\n      }\n      params.set( CoreAdminParams.INSTANCE_DIR, instanceDir);\n      if (configName != null) {\n        params.set( CoreAdminParams.CONFIG, configName);\n      }\n      if (schemaName != null) {\n        params.set( CoreAdminParams.SCHEMA, schemaName);\n      }\n      if (dataDir != null) {\n        params.set( CoreAdminParams.DATA_DIR, dataDir);\n      }\n      return params;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e3602d5eab954caecc726ab136ad580ac1ceb917":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"5fa19516aba024bdd967f7fac647877ab3b7ffa7":["e3602d5eab954caecc726ab136ad580ac1ceb917"],"ad94625fb8d088209f46650c8097196fec67f00c":["5fa19516aba024bdd967f7fac647877ab3b7ffa7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"e3602d5eab954caecc726ab136ad580ac1ceb917":["5fa19516aba024bdd967f7fac647877ab3b7ffa7"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["e3602d5eab954caecc726ab136ad580ac1ceb917"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5fa19516aba024bdd967f7fac647877ab3b7ffa7":["ad94625fb8d088209f46650c8097196fec67f00c"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}