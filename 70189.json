{"path":"src/java/org/apache/solr/request/LocalSolrQueryRequest#getParamString().mjava","commits":[{"id":"0c3e228bf650e96f3002a8fb73dd0c13d55af077","date":1138253849,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/request/LocalSolrQueryRequest#getParamString().mjava","pathOld":"/dev/null","sourceNew":"  public String getParamString() {\n    StringBuilder sb = new StringBuilder(128);\n    try {\n\n      boolean first=true;\n      if (query!=null) {\n        if (!first) {\n          sb.append('&');\n        }\n        first=false;\n        sb.append(\"q=\");\n        StrUtils.partialURLEncodeVal(sb,query);\n      }\n\n      // null, \"\", and \"standard\" are all the default query handler.\n      if (qtype!=null && !(qtype.equals(\"\") || qtype.equals(\"standard\"))) {\n        if (!first) {\n          sb.append('&');\n        }\n        first=false;\n        sb.append(\"qt=\");\n        sb.append(qtype);\n      }\n\n      if (start!=0) {\n        if (!first) {\n          sb.append('&');\n        }\n        first=false;\n        sb.append(\"start=\");\n        sb.append(start);\n      }\n\n      if (!first) {\n        sb.append('&');\n      }\n      first=false;\n      sb.append(\"rows=\");\n      sb.append(limit);\n\n      if (args != null && args.size() > 0) {\n        for (int i=0; i<args.size(); i++) {\n          if (!first) {\n            sb.append('&');\n          }\n          first=false;\n\n          sb.append(args.getName(i));\n          sb.append('=');\n          StrUtils.partialURLEncodeVal(sb,args.getVal(i).toString());\n        }\n      }\n\n    } catch (Exception e) {\n      // should never happen... we only needed this because\n      // partialURLEncodeVal can throw an IOException, but it\n      // never will when adding to a StringBuilder.\n      throw new RuntimeException(e);\n    }\n\n    return sb.toString();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"44f497c313977be641ddf24aab74b30e6de834d8","date":1156361697,"type":4,"author":"Yonik Seeley","isMerge":false,"pathNew":"/dev/null","pathOld":"src/java/org/apache/solr/request/LocalSolrQueryRequest#getParamString().mjava","sourceNew":null,"sourceOld":"  public String getParamString() {\n    StringBuilder sb = new StringBuilder(128);\n    try {\n\n      boolean first=true;\n      if (query!=null) {\n        if (!first) {\n          sb.append('&');\n        }\n        first=false;\n        sb.append(\"q=\");\n        StrUtils.partialURLEncodeVal(sb,query);\n      }\n\n      // null, \"\", and \"standard\" are all the default query handler.\n      if (qtype!=null && !(qtype.equals(\"\") || qtype.equals(\"standard\"))) {\n        if (!first) {\n          sb.append('&');\n        }\n        first=false;\n        sb.append(\"qt=\");\n        sb.append(qtype);\n      }\n\n      if (start!=0) {\n        if (!first) {\n          sb.append('&');\n        }\n        first=false;\n        sb.append(\"start=\");\n        sb.append(start);\n      }\n\n      if (!first) {\n        sb.append('&');\n      }\n      first=false;\n      sb.append(\"rows=\");\n      sb.append(limit);\n\n      if (args != null && args.size() > 0) {\n        for (int i=0; i<args.size(); i++) {\n          if (!first) {\n            sb.append('&');\n          }\n          first=false;\n\n          sb.append(args.getName(i));\n          sb.append('=');\n          StrUtils.partialURLEncodeVal(sb,args.getVal(i).toString());\n        }\n      }\n\n    } catch (Exception e) {\n      // should never happen... we only needed this because\n      // partialURLEncodeVal can throw an IOException, but it\n      // never will when adding to a StringBuilder.\n      throw new RuntimeException(e);\n    }\n\n    return sb.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"44f497c313977be641ddf24aab74b30e6de834d8":["0c3e228bf650e96f3002a8fb73dd0c13d55af077"],"0c3e228bf650e96f3002a8fb73dd0c13d55af077":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"44f497c313977be641ddf24aab74b30e6de834d8":[],"0c3e228bf650e96f3002a8fb73dd0c13d55af077":["44f497c313977be641ddf24aab74b30e6de834d8"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["0c3e228bf650e96f3002a8fb73dd0c13d55af077"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["44f497c313977be641ddf24aab74b30e6de834d8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}