{"path":"lucene/test-framework/src/java/org/apache/lucene/index/BaseCompoundFormatTestCase#testReadPastEOF().mjava","commits":[{"id":"f54234b89a8a52b1cb430f514dc8e8b6e15790b6","date":1412368217,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BaseCompoundFormatTestCase#testReadPastEOF().mjava","pathOld":"/dev/null","sourceNew":"  public void testReadPastEOF() throws IOException {\n    Directory dir = newDirectory();\n    Directory cr = createLargeCFS(dir);\n    IndexInput is = cr.openInput(\"_123.f2\", newIOContext(random()));\n    is.seek(is.length() - 10);\n    byte b[] = new byte[100];\n    is.readBytes(b, 0, 10);\n    \n    try {\n      is.readByte();\n      fail(\"Single byte read past end of file\");\n    } catch (IOException e) {\n      /* success */\n    }\n    \n    is.seek(is.length() - 10);\n    try {\n      is.readBytes(b, 0, 50);\n      fail(\"Block read past end of file\");\n    } catch (IOException e) {\n      /* success */\n    }\n    \n    is.close();\n    cr.close();\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["05fe562aa248790944d43cdd478f512572835ba0"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9bb9a29a5e71a90295f175df8919802993142c9a","date":1412517673,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BaseCompoundFormatTestCase#testReadPastEOF().mjava","pathOld":"/dev/null","sourceNew":"  public void testReadPastEOF() throws IOException {\n    Directory dir = newDirectory();\n    Directory cr = createLargeCFS(dir);\n    IndexInput is = cr.openInput(\"_123.f2\", newIOContext(random()));\n    is.seek(is.length() - 10);\n    byte b[] = new byte[100];\n    is.readBytes(b, 0, 10);\n    \n    try {\n      is.readByte();\n      fail(\"Single byte read past end of file\");\n    } catch (IOException e) {\n      /* success */\n    }\n    \n    is.seek(is.length() - 10);\n    try {\n      is.readBytes(b, 0, 50);\n      fail(\"Block read past end of file\");\n    } catch (IOException e) {\n      /* success */\n    }\n    \n    is.close();\n    cr.close();\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"05fe562aa248790944d43cdd478f512572835ba0","date":1455901667,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/index/BaseCompoundFormatTestCase#testReadPastEOF().mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/index/BaseCompoundFormatTestCase#testReadPastEOF().mjava","sourceNew":"  public void testReadPastEOF() throws IOException {\n    Directory dir = newDirectory();\n    Directory cr = createLargeCFS(dir);\n    IndexInput is = cr.openInput(\"_123.f2\", newIOContext(random()));\n    is.seek(is.length() - 10);\n    byte b[] = new byte[100];\n    is.readBytes(b, 0, 10);\n\n    // Single byte read past end of file\n    expectThrows(IOException.class, () -> {\n      is.readByte();\n    });\n\n    is.seek(is.length() - 10);\n\n    // Block read past end of file\n    expectThrows(IOException.class, () -> {\n      is.readBytes(b, 0, 50);\n    });\n    \n    is.close();\n    cr.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testReadPastEOF() throws IOException {\n    Directory dir = newDirectory();\n    Directory cr = createLargeCFS(dir);\n    IndexInput is = cr.openInput(\"_123.f2\", newIOContext(random()));\n    is.seek(is.length() - 10);\n    byte b[] = new byte[100];\n    is.readBytes(b, 0, 10);\n    \n    try {\n      is.readByte();\n      fail(\"Single byte read past end of file\");\n    } catch (IOException e) {\n      /* success */\n    }\n    \n    is.seek(is.length() - 10);\n    try {\n      is.readBytes(b, 0, 50);\n      fail(\"Block read past end of file\");\n    } catch (IOException e) {\n      /* success */\n    }\n    \n    is.close();\n    cr.close();\n    dir.close();\n  }\n\n","bugFix":["f54234b89a8a52b1cb430f514dc8e8b6e15790b6"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9bb9a29a5e71a90295f175df8919802993142c9a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f54234b89a8a52b1cb430f514dc8e8b6e15790b6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"05fe562aa248790944d43cdd478f512572835ba0":["9bb9a29a5e71a90295f175df8919802993142c9a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["05fe562aa248790944d43cdd478f512572835ba0"],"f54234b89a8a52b1cb430f514dc8e8b6e15790b6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"9bb9a29a5e71a90295f175df8919802993142c9a":["05fe562aa248790944d43cdd478f512572835ba0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9bb9a29a5e71a90295f175df8919802993142c9a","f54234b89a8a52b1cb430f514dc8e8b6e15790b6"],"05fe562aa248790944d43cdd478f512572835ba0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f54234b89a8a52b1cb430f514dc8e8b6e15790b6":["9bb9a29a5e71a90295f175df8919802993142c9a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}