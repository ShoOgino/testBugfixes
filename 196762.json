{"path":"solr/core/src/java/org/apache/solr/client/solrj/embedded/JettySolrRunner.DebugFilter#executeDelay().mjava","commits":[{"id":"415bbbe7da8065dd3c477bdc3c703c6425622998","date":1485393793,"type":0,"author":"Ishan Chattopadhyaya","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/client/solrj/embedded/JettySolrRunner.DebugFilter#executeDelay().mjava","pathOld":"/dev/null","sourceNew":"    private void executeDelay() {\n      int delayMs = 0;\n      for (Delay delay: delays) {\n        log.info(\"Delaying \"+delay.delayValue+\", for reason: \"+delay.reason);\n        if (delay.counter.decrementAndGet() == 0) {\n          delayMs += delay.delayValue;\n        }        \n      }\n\n      if (delayMs > 0) {\n        log.info(\"Pausing this socket connection for \" + delayMs + \"ms...\");\n        try {\n          Thread.sleep(delayMs);\n        } catch (InterruptedException e) {\n          throw new RuntimeException(e);\n        }\n        log.info(\"Waking up after the delay of \" + delayMs + \"ms...\");\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"598b5d23aa7c9732bf473c21a9cd309c44599394","date":1485530378,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/client/solrj/embedded/JettySolrRunner.DebugFilter#executeDelay().mjava","pathOld":"/dev/null","sourceNew":"    private void executeDelay() {\n      int delayMs = 0;\n      for (Delay delay: delays) {\n        log.info(\"Delaying \"+delay.delayValue+\", for reason: \"+delay.reason);\n        if (delay.counter.decrementAndGet() == 0) {\n          delayMs += delay.delayValue;\n        }        \n      }\n\n      if (delayMs > 0) {\n        log.info(\"Pausing this socket connection for \" + delayMs + \"ms...\");\n        try {\n          Thread.sleep(delayMs);\n        } catch (InterruptedException e) {\n          throw new RuntimeException(e);\n        }\n        log.info(\"Waking up after the delay of \" + delayMs + \"ms...\");\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d62f7f419840d73a16d064ad5789dfcbea744e43","date":1532972772,"type":3,"author":"Christine Poerschke","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/client/solrj/embedded/JettySolrRunner.DebugFilter#executeDelay().mjava","pathOld":"solr/core/src/java/org/apache/solr/client/solrj/embedded/JettySolrRunner.DebugFilter#executeDelay().mjava","sourceNew":"    private void executeDelay() {\n      int delayMs = 0;\n      for (Delay delay: delays) {\n        this.log.info(\"Delaying \"+delay.delayValue+\", for reason: \"+delay.reason);\n        if (delay.counter.decrementAndGet() == 0) {\n          delayMs += delay.delayValue;\n        }        \n      }\n\n      if (delayMs > 0) {\n        this.log.info(\"Pausing this socket connection for \" + delayMs + \"ms...\");\n        try {\n          Thread.sleep(delayMs);\n        } catch (InterruptedException e) {\n          throw new RuntimeException(e);\n        }\n        this.log.info(\"Waking up after the delay of \" + delayMs + \"ms...\");\n      }\n    }\n\n","sourceOld":"    private void executeDelay() {\n      int delayMs = 0;\n      for (Delay delay: delays) {\n        log.info(\"Delaying \"+delay.delayValue+\", for reason: \"+delay.reason);\n        if (delay.counter.decrementAndGet() == 0) {\n          delayMs += delay.delayValue;\n        }        \n      }\n\n      if (delayMs > 0) {\n        log.info(\"Pausing this socket connection for \" + delayMs + \"ms...\");\n        try {\n          Thread.sleep(delayMs);\n        } catch (InterruptedException e) {\n          throw new RuntimeException(e);\n        }\n        log.info(\"Waking up after the delay of \" + delayMs + \"ms...\");\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0db83f1bb855a4ac824c9a2a8e1ee9b29a039c15","date":1554259533,"type":3,"author":"Gus Heck","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/client/solrj/embedded/JettySolrRunner.DebugFilter#executeDelay().mjava","pathOld":"solr/core/src/java/org/apache/solr/client/solrj/embedded/JettySolrRunner.DebugFilter#executeDelay().mjava","sourceNew":"    private void executeDelay() {\n      int delayMs = 0;\n      for (Delay delay: delays) {\n        this.log.info(\"Delaying \"+delay.delayValue+\", for reason: \"+delay.reason);\n        if (delay.counter.decrementAndGet() == 0) {\n          delayMs += delay.delayValue;\n        }\n      }\n\n      if (delayMs > 0) {\n        this.log.info(\"Pausing this socket connection for \" + delayMs + \"ms...\");\n        try {\n          Thread.sleep(delayMs);\n        } catch (InterruptedException e) {\n          throw new RuntimeException(e);\n        }\n        this.log.info(\"Waking up after the delay of \" + delayMs + \"ms...\");\n      }\n    }\n\n","sourceOld":"    private void executeDelay() {\n      int delayMs = 0;\n      for (Delay delay: delays) {\n        this.log.info(\"Delaying \"+delay.delayValue+\", for reason: \"+delay.reason);\n        if (delay.counter.decrementAndGet() == 0) {\n          delayMs += delay.delayValue;\n        }        \n      }\n\n      if (delayMs > 0) {\n        this.log.info(\"Pausing this socket connection for \" + delayMs + \"ms...\");\n        try {\n          Thread.sleep(delayMs);\n        } catch (InterruptedException e) {\n          throw new RuntimeException(e);\n        }\n        this.log.info(\"Waking up after the delay of \" + delayMs + \"ms...\");\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54faedfb0e03479a38f5ee82f2dfaeea536e9404","date":1587251295,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/client/solrj/embedded/JettySolrRunner.DebugFilter#executeDelay().mjava","pathOld":"solr/core/src/java/org/apache/solr/client/solrj/embedded/JettySolrRunner.DebugFilter#executeDelay().mjava","sourceNew":"    private void executeDelay() {\n      int delayMs = 0;\n      for (Delay delay: delays) {\n        this.log.info(\"Delaying {}, for reason: {}\", delay.delayValue, delay.reason);\n        if (delay.counter.decrementAndGet() == 0) {\n          delayMs += delay.delayValue;\n        }\n      }\n\n      if (delayMs > 0) {\n        this.log.info(\"Pausing this socket connection for {}ms...\", delayMs);\n        try {\n          Thread.sleep(delayMs);\n        } catch (InterruptedException e) {\n          throw new RuntimeException(e);\n        }\n        this.log.info(\"Waking up after the delay of {}ms...\", delayMs);\n      }\n    }\n\n","sourceOld":"    private void executeDelay() {\n      int delayMs = 0;\n      for (Delay delay: delays) {\n        this.log.info(\"Delaying \"+delay.delayValue+\", for reason: \"+delay.reason);\n        if (delay.counter.decrementAndGet() == 0) {\n          delayMs += delay.delayValue;\n        }\n      }\n\n      if (delayMs > 0) {\n        this.log.info(\"Pausing this socket connection for \" + delayMs + \"ms...\");\n        try {\n          Thread.sleep(delayMs);\n        } catch (InterruptedException e) {\n          throw new RuntimeException(e);\n        }\n        this.log.info(\"Waking up after the delay of \" + delayMs + \"ms...\");\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9dd6cf7e1b30a14801c9e290183b875c6801bbe9","date":1591734817,"type":3,"author":"Mike Drob","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/client/solrj/embedded/JettySolrRunner.DebugFilter#executeDelay().mjava","pathOld":"solr/core/src/java/org/apache/solr/client/solrj/embedded/JettySolrRunner.DebugFilter#executeDelay().mjava","sourceNew":"    private void executeDelay() {\n      int delayMs = 0;\n      for (Delay delay: delays) {\n        log.info(\"Delaying {}, for reason: {}\", delay.delayValue, delay.reason);\n        if (delay.counter.decrementAndGet() == 0) {\n          delayMs += delay.delayValue;\n        }\n      }\n\n      if (delayMs > 0) {\n        log.info(\"Pausing this socket connection for {}ms...\", delayMs);\n        try {\n          Thread.sleep(delayMs);\n        } catch (InterruptedException e) {\n          throw new RuntimeException(e);\n        }\n        log.info(\"Waking up after the delay of {}ms...\", delayMs);\n      }\n    }\n\n","sourceOld":"    private void executeDelay() {\n      int delayMs = 0;\n      for (Delay delay: delays) {\n        this.log.info(\"Delaying {}, for reason: {}\", delay.delayValue, delay.reason);\n        if (delay.counter.decrementAndGet() == 0) {\n          delayMs += delay.delayValue;\n        }\n      }\n\n      if (delayMs > 0) {\n        this.log.info(\"Pausing this socket connection for {}ms...\", delayMs);\n        try {\n          Thread.sleep(delayMs);\n        } catch (InterruptedException e) {\n          throw new RuntimeException(e);\n        }\n        this.log.info(\"Waking up after the delay of {}ms...\", delayMs);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"415bbbe7da8065dd3c477bdc3c703c6425622998":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"9dd6cf7e1b30a14801c9e290183b875c6801bbe9":["54faedfb0e03479a38f5ee82f2dfaeea536e9404"],"54faedfb0e03479a38f5ee82f2dfaeea536e9404":["0db83f1bb855a4ac824c9a2a8e1ee9b29a039c15"],"d62f7f419840d73a16d064ad5789dfcbea744e43":["415bbbe7da8065dd3c477bdc3c703c6425622998"],"598b5d23aa7c9732bf473c21a9cd309c44599394":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","415bbbe7da8065dd3c477bdc3c703c6425622998"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0db83f1bb855a4ac824c9a2a8e1ee9b29a039c15":["d62f7f419840d73a16d064ad5789dfcbea744e43"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9dd6cf7e1b30a14801c9e290183b875c6801bbe9"]},"commit2Childs":{"415bbbe7da8065dd3c477bdc3c703c6425622998":["d62f7f419840d73a16d064ad5789dfcbea744e43","598b5d23aa7c9732bf473c21a9cd309c44599394"],"9dd6cf7e1b30a14801c9e290183b875c6801bbe9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"54faedfb0e03479a38f5ee82f2dfaeea536e9404":["9dd6cf7e1b30a14801c9e290183b875c6801bbe9"],"d62f7f419840d73a16d064ad5789dfcbea744e43":["0db83f1bb855a4ac824c9a2a8e1ee9b29a039c15"],"598b5d23aa7c9732bf473c21a9cd309c44599394":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["415bbbe7da8065dd3c477bdc3c703c6425622998","598b5d23aa7c9732bf473c21a9cd309c44599394"],"0db83f1bb855a4ac824c9a2a8e1ee9b29a039c15":["54faedfb0e03479a38f5ee82f2dfaeea536e9404"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["598b5d23aa7c9732bf473c21a9cd309c44599394","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}