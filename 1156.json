{"path":"src/java/org/apache/solr/schema/FloatField#write(TextResponseWriter,String,Fieldable).mjava","commits":[{"id":"434ff4225627b937a533128f8746eb1e9009fc95","date":1153247240,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/schema/FloatField#write(TextResponseWriter,String,Fieldable).mjava","pathOld":"/dev/null","sourceNew":"  public void write(TextResponseWriter writer, String name, Fieldable f) throws IOException {\n    writer.writeFloat(name, f.stringValue());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae5ba445e353247a42fc0d858c850f65715b0250","date":1249066787,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/schema/FloatField#write(TextResponseWriter,String,Fieldable).mjava","pathOld":"src/java/org/apache/solr/schema/FloatField#write(TextResponseWriter,String,Fieldable).mjava","sourceNew":"  public void write(TextResponseWriter writer, String name, Fieldable f) throws IOException {\n    String s = f.stringValue();\n\n    // these values may be from a legacy lucene index, which may\n    // not be properly formatted in some output formats, or may\n    // incorrectly have a zero length.\n\n    if (s.length()==0) {\n      // zero length value means someone mistakenly indexed the value\n      // instead of simply leaving it out.  Write a null value instead of a numeric.\n      writer.writeNull(name);\n      return;\n    }\n\n    try {\n      float fval = Float.parseFloat(s);\n      writer.writeFloat(name, fval);\n    } catch (NumberFormatException e){\n      // can't parse - write out the contents as a string so nothing is lost and\n      // clients don't get a parse error.\n      writer.writeStr(name, s, true);\n    }\n  }\n\n","sourceOld":"  public void write(TextResponseWriter writer, String name, Fieldable f) throws IOException {\n    writer.writeFloat(name, f.stringValue());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/schema/FloatField#write(TextResponseWriter,String,Fieldable).mjava","pathOld":"src/java/org/apache/solr/schema/FloatField#write(TextResponseWriter,String,Fieldable).mjava","sourceNew":"  public void write(TextResponseWriter writer, String name, Fieldable f) throws IOException {\n    String s = f.stringValue();\n\n    // these values may be from a legacy lucene index, which may\n    // not be properly formatted in some output formats, or may\n    // incorrectly have a zero length.\n\n    if (s.length()==0) {\n      // zero length value means someone mistakenly indexed the value\n      // instead of simply leaving it out.  Write a null value instead of a numeric.\n      writer.writeNull(name);\n      return;\n    }\n\n    try {\n      float fval = Float.parseFloat(s);\n      writer.writeFloat(name, fval);\n    } catch (NumberFormatException e){\n      // can't parse - write out the contents as a string so nothing is lost and\n      // clients don't get a parse error.\n      writer.writeStr(name, s, true);\n    }\n  }\n\n","sourceOld":"  public void write(TextResponseWriter writer, String name, Fieldable f) throws IOException {\n    String s = f.stringValue();\n\n    // these values may be from a legacy lucene index, which may\n    // not be properly formatted in some output formats, or may\n    // incorrectly have a zero length.\n\n    if (s.length()==0) {\n      // zero length value means someone mistakenly indexed the value\n      // instead of simply leaving it out.  Write a null value instead of a numeric.\n      writer.writeNull(name);\n      return;\n    }\n\n    try {\n      float fval = Float.parseFloat(s);\n      writer.writeFloat(name, fval);\n    } catch (NumberFormatException e){\n      // can't parse - write out the contents as a string so nothing is lost and\n      // clients don't get a parse error.\n      writer.writeStr(name, s, true);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"434ff4225627b937a533128f8746eb1e9009fc95":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"ae5ba445e353247a42fc0d858c850f65715b0250":["434ff4225627b937a533128f8746eb1e9009fc95"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["ae5ba445e353247a42fc0d858c850f65715b0250"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"434ff4225627b937a533128f8746eb1e9009fc95":["ae5ba445e353247a42fc0d858c850f65715b0250"],"ae5ba445e353247a42fc0d858c850f65715b0250":["ad94625fb8d088209f46650c8097196fec67f00c"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["434ff4225627b937a533128f8746eb1e9009fc95"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}