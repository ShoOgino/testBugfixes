{"path":"solr/core/src/test/org/apache/solr/cloud/DeleteReplicaTest#createCollection(String,CloudSolrClient).mjava","commits":[{"id":"bafca15d8e408346a67f4282ad1143b88023893b","date":1420034748,"type":1,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/DeleteReplicaTest#createCollection(String,CloudSolrClient).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/DeleteReplicaTest#createCollection(String,CloudSolrServer).mjava","sourceNew":"  protected void createCollection(String COLL_NAME, CloudSolrClient client) throws Exception {\n    int replicationFactor = 2;\n    int numShards = 2;\n    int maxShardsPerNode = ((((numShards+1) * replicationFactor) / getCommonCloudSolrClient()\n        .getZkStateReader().getClusterState().getLiveNodes().size())) + 1;\n\n    Map<String, Object> props = makeMap(\n        ZkStateReader.REPLICATION_FACTOR, replicationFactor,\n        MAX_SHARDS_PER_NODE, maxShardsPerNode,\n        NUM_SLICES, numShards);\n    Map<String,List<Integer>> collectionInfos = new HashMap<>();\n    createCollection(collectionInfos, COLL_NAME, props, client);\n  }\n\n","sourceOld":"  protected void createCollection(String COLL_NAME, CloudSolrServer client) throws Exception {\n    int replicationFactor = 2;\n    int numShards = 2;\n    int maxShardsPerNode = ((((numShards+1) * replicationFactor) / getCommonCloudSolrServer()\n        .getZkStateReader().getClusterState().getLiveNodes().size())) + 1;\n\n    Map<String, Object> props = makeMap(\n        ZkStateReader.REPLICATION_FACTOR, replicationFactor,\n        MAX_SHARDS_PER_NODE, maxShardsPerNode,\n        NUM_SLICES, numShards);\n    Map<String,List<Integer>> collectionInfos = new HashMap<>();\n    createCollection(collectionInfos, COLL_NAME, props, client);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"609b19bb8de96c4e5e338d1d4a0349957522b601","date":1474892114,"type":4,"author":"Alan Woodward","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/cloud/DeleteReplicaTest#createCollection(String,CloudSolrClient).mjava","sourceNew":null,"sourceOld":"  protected void createCollection(String COLL_NAME, CloudSolrClient client) throws Exception {\n    int replicationFactor = 2;\n    int numShards = 2;\n    int maxShardsPerNode = ((((numShards+1) * replicationFactor) / getCommonCloudSolrClient()\n        .getZkStateReader().getClusterState().getLiveNodes().size())) + 1;\n\n    Map<String, Object> props = makeMap(\n        ZkStateReader.REPLICATION_FACTOR, replicationFactor,\n        MAX_SHARDS_PER_NODE, maxShardsPerNode,\n        NUM_SLICES, numShards);\n    Map<String,List<Integer>> collectionInfos = new HashMap<>();\n    createCollection(collectionInfos, COLL_NAME, props, client);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17e5da53e4e5bd659e22add9bba1cfa222e7e30d","date":1475435902,"type":4,"author":"Karl Wright","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/cloud/DeleteReplicaTest#createCollection(String,CloudSolrClient).mjava","sourceNew":null,"sourceOld":"  protected void createCollection(String COLL_NAME, CloudSolrClient client) throws Exception {\n    int replicationFactor = 2;\n    int numShards = 2;\n    int maxShardsPerNode = ((((numShards+1) * replicationFactor) / getCommonCloudSolrClient()\n        .getZkStateReader().getClusterState().getLiveNodes().size())) + 1;\n\n    Map<String, Object> props = makeMap(\n        ZkStateReader.REPLICATION_FACTOR, replicationFactor,\n        MAX_SHARDS_PER_NODE, maxShardsPerNode,\n        NUM_SLICES, numShards);\n    Map<String,List<Integer>> collectionInfos = new HashMap<>();\n    createCollection(collectionInfos, COLL_NAME, props, client);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":4,"author":"Kevin Risden","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/cloud/DeleteReplicaTest#createCollection(String,CloudSolrClient).mjava","sourceNew":null,"sourceOld":"  protected void createCollection(String COLL_NAME, CloudSolrClient client) throws Exception {\n    int replicationFactor = 2;\n    int numShards = 2;\n    int maxShardsPerNode = ((((numShards+1) * replicationFactor) / getCommonCloudSolrClient()\n        .getZkStateReader().getClusterState().getLiveNodes().size())) + 1;\n\n    Map<String, Object> props = makeMap(\n        ZkStateReader.REPLICATION_FACTOR, replicationFactor,\n        MAX_SHARDS_PER_NODE, maxShardsPerNode,\n        NUM_SLICES, numShards);\n    Map<String,List<Integer>> collectionInfos = new HashMap<>();\n    createCollection(collectionInfos, COLL_NAME, props, client);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["bafca15d8e408346a67f4282ad1143b88023893b","609b19bb8de96c4e5e338d1d4a0349957522b601"],"609b19bb8de96c4e5e338d1d4a0349957522b601":["bafca15d8e408346a67f4282ad1143b88023893b"],"bafca15d8e408346a67f4282ad1143b88023893b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["bafca15d8e408346a67f4282ad1143b88023893b","17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["bafca15d8e408346a67f4282ad1143b88023893b"],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"609b19bb8de96c4e5e338d1d4a0349957522b601":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"bafca15d8e408346a67f4282ad1143b88023893b":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d","609b19bb8de96c4e5e338d1d4a0349957522b601","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}