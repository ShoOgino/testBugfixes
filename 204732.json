{"path":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#finishFlushedSegment(SegmentInfo,Collection[String]).mjava","commits":[{"id":"ff78505662c0b741e2663a9f38a4889c12a32c9f","date":1294908561,"type":1,"author":"Michael Busch","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#finishFlushedSegment(SegmentInfo,Collection[String]).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#finishFlushedSegment(SegmentInfo,DocumentsWriterPerThread).mjava","sourceNew":"  void finishFlushedSegment(SegmentInfo newSegment, Collection<String> flushedFiles) throws IOException {\n    if (indexWriter.useCompoundFile(newSegment)) {\n      String compoundFileName = IndexFileNames.segmentFileName(newSegment.name, \"\", IndexFileNames.COMPOUND_FILE_EXTENSION);\n      message(\"creating compound file \" + compoundFileName);\n      // Now build compound file\n      boolean success = false;\n      try {\n        createCompoundFile(compoundFileName, flushedFiles);\n        success = true;\n      } finally {\n        if (!success) {\n          if (infoStream != null) {\n            message(\"hit exception \" +\n                \"reating compound file for newly flushed segment \" + newSegment.name);\n          }\n\n          indexWriter.deleter.deleteFile(IndexFileNames.segmentFileName(newSegment.name, \"\",\n              IndexFileNames.COMPOUND_FILE_EXTENSION));\n          for (String file : flushedFiles) {\n            indexWriter.deleter.deleteFile(file);\n          }\n\n        }\n      }\n\n      for (String file : flushedFiles) {\n        indexWriter.deleter.deleteFile(file);\n      }\n\n      newSegment.setUseCompoundFile(true);\n\n    }\n\n    indexWriter.addNewSegment(newSegment);\n  }\n\n","sourceOld":"  void finishFlushedSegment(SegmentInfo newSegment, DocumentsWriterPerThread perThread) throws IOException {\n    perThread.pushDeletes(newSegment, indexWriter.segmentInfos);\n\n    if (indexWriter.useCompoundFile(newSegment)) {\n      String compoundFileName = IndexFileNames.segmentFileName(newSegment.name, \"\", IndexFileNames.COMPOUND_FILE_EXTENSION);\n      message(\"creating compound file \" + compoundFileName);\n      // Now build compound file\n      boolean success = false;\n      try {\n        createCompoundFile(compoundFileName, perThread);\n        success = true;\n      } finally {\n        if (!success) {\n          if (infoStream != null) {\n            message(\"hit exception \" +\n                \"reating compound file for newly flushed segment \" + newSegment.name);\n          }\n\n          indexWriter.deleter.deleteFile(IndexFileNames.segmentFileName(newSegment.name, \"\",\n              IndexFileNames.COMPOUND_FILE_EXTENSION));\n          for (String file : perThread.flushState.flushedFiles) {\n            indexWriter.deleter.deleteFile(file);\n          }\n\n        }\n      }\n\n      for (String file : perThread.flushState.flushedFiles) {\n        indexWriter.deleter.deleteFile(file);\n      }\n\n      newSegment.setUseCompoundFile(true);\n\n    }\n\n    indexWriter.addNewSegment(newSegment);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"868da859b43505d9d2a023bfeae6dd0c795f5295","date":1294948401,"type":4,"author":"Michael Busch","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#finishFlushedSegment(SegmentInfo,Collection[String]).mjava","sourceNew":null,"sourceOld":"  void finishFlushedSegment(SegmentInfo newSegment, Collection<String> flushedFiles) throws IOException {\n    if (indexWriter.useCompoundFile(newSegment)) {\n      String compoundFileName = IndexFileNames.segmentFileName(newSegment.name, \"\", IndexFileNames.COMPOUND_FILE_EXTENSION);\n      message(\"creating compound file \" + compoundFileName);\n      // Now build compound file\n      boolean success = false;\n      try {\n        createCompoundFile(compoundFileName, flushedFiles);\n        success = true;\n      } finally {\n        if (!success) {\n          if (infoStream != null) {\n            message(\"hit exception \" +\n                \"reating compound file for newly flushed segment \" + newSegment.name);\n          }\n\n          indexWriter.deleter.deleteFile(IndexFileNames.segmentFileName(newSegment.name, \"\",\n              IndexFileNames.COMPOUND_FILE_EXTENSION));\n          for (String file : flushedFiles) {\n            indexWriter.deleter.deleteFile(file);\n          }\n\n        }\n      }\n\n      for (String file : flushedFiles) {\n        indexWriter.deleter.deleteFile(file);\n      }\n\n      newSegment.setUseCompoundFile(true);\n\n    }\n\n    indexWriter.addNewSegment(newSegment);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ff78505662c0b741e2663a9f38a4889c12a32c9f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"868da859b43505d9d2a023bfeae6dd0c795f5295":["ff78505662c0b741e2663a9f38a4889c12a32c9f","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"ff78505662c0b741e2663a9f38a4889c12a32c9f":["868da859b43505d9d2a023bfeae6dd0c795f5295"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ff78505662c0b741e2663a9f38a4889c12a32c9f","868da859b43505d9d2a023bfeae6dd0c795f5295","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"868da859b43505d9d2a023bfeae6dd0c795f5295":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["868da859b43505d9d2a023bfeae6dd0c795f5295","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}