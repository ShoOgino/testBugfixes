{"path":"lucene/core/src/java/org/apache/lucene/codecs/lucene50/Lucene50SkipWriter#resetSkip().mjava","commits":[{"id":"99eb4a732d1a908f4636ace52928876136bf1896","date":1413829552,"type":2,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene50/Lucene50SkipWriter#resetSkip().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene41/Lucene41SkipWriter#resetSkip().mjava","sourceNew":"  @Override\n  public void resetSkip() {\n    lastDocFP = docOut.getFilePointer();\n    if (fieldHasPositions) {\n      lastPosFP = posOut.getFilePointer();\n      if (fieldHasOffsets || fieldHasPayloads) {\n        lastPayFP = payOut.getFilePointer();\n      }\n    }\n    initialized = false;\n  }\n\n","sourceOld":"  @Override\n  public void resetSkip() {\n    lastDocFP = docOut.getFilePointer();\n    if (fieldHasPositions) {\n      lastPosFP = posOut.getFilePointer();\n      if (fieldHasOffsets || fieldHasPayloads) {\n        lastPayFP = payOut.getFilePointer();\n      }\n    }\n    initialized = false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"db68c63cbfaa8698b9c4475f75ed2b9c9696d238","date":1414118621,"type":2,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene50/Lucene50SkipWriter#resetSkip().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene41/Lucene41SkipWriter#resetSkip().mjava","sourceNew":"  @Override\n  public void resetSkip() {\n    lastDocFP = docOut.getFilePointer();\n    if (fieldHasPositions) {\n      lastPosFP = posOut.getFilePointer();\n      if (fieldHasOffsets || fieldHasPayloads) {\n        lastPayFP = payOut.getFilePointer();\n      }\n    }\n    initialized = false;\n  }\n\n","sourceOld":"  @Override\n  public void resetSkip() {\n    lastDocFP = docOut.getFilePointer();\n    if (fieldHasPositions) {\n      lastPosFP = posOut.getFilePointer();\n      if (fieldHasOffsets || fieldHasPayloads) {\n        lastPayFP = payOut.getFilePointer();\n      }\n    }\n    initialized = false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"622a708571e534680618b3c5e0c28ac539a47776","date":1517406892,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene50/Lucene50SkipWriter#resetSkip().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene50/Lucene50SkipWriter#resetSkip().mjava","sourceNew":"  @Override\n  public void resetSkip() {\n    lastDocFP = docOut.getFilePointer();\n    if (fieldHasPositions) {\n      lastPosFP = posOut.getFilePointer();\n      if (fieldHasOffsets || fieldHasPayloads) {\n        lastPayFP = payOut.getFilePointer();\n      }\n    }\n    if (initialized) {\n      for (CompetitiveFreqNormAccumulator acc : curCompetitiveFreqNorms) {\n        acc.clear();\n      }\n    }\n    initialized = false;\n  }\n\n","sourceOld":"  @Override\n  public void resetSkip() {\n    lastDocFP = docOut.getFilePointer();\n    if (fieldHasPositions) {\n      lastPosFP = posOut.getFilePointer();\n      if (fieldHasOffsets || fieldHasPayloads) {\n        lastPayFP = payOut.getFilePointer();\n      }\n    }\n    initialized = false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6a692be6c8e120ef6dbfcd5dde3de42815813cd2","date":1525265372,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene50/Lucene50SkipWriter#resetSkip().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene50/Lucene50SkipWriter#resetSkip().mjava","sourceNew":"  @Override\n  public void resetSkip() {\n    lastDocFP = docOut.getFilePointer();\n    if (fieldHasPositions) {\n      lastPosFP = posOut.getFilePointer();\n      if (fieldHasOffsets || fieldHasPayloads) {\n        lastPayFP = payOut.getFilePointer();\n      }\n    }\n    if (initialized) {\n      for (CompetitiveImpactAccumulator acc : curCompetitiveFreqNorms) {\n        acc.clear();\n      }\n    }\n    initialized = false;\n  }\n\n","sourceOld":"  @Override\n  public void resetSkip() {\n    lastDocFP = docOut.getFilePointer();\n    if (fieldHasPositions) {\n      lastPosFP = posOut.getFilePointer();\n      if (fieldHasOffsets || fieldHasPayloads) {\n        lastPayFP = payOut.getFilePointer();\n      }\n    }\n    if (initialized) {\n      for (CompetitiveFreqNormAccumulator acc : curCompetitiveFreqNorms) {\n        acc.clear();\n      }\n    }\n    initialized = false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9a0cc86697753659ac5e7f55243ccdcbf44d8a36","date":1574100512,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/backward-codecs/src/test/org/apache/lucene/codecs/lucene50/Lucene50SkipWriter#resetSkip().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene50/Lucene50SkipWriter#resetSkip().mjava","sourceNew":"  @Override\n  public void resetSkip() {\n    lastDocFP = docOut.getFilePointer();\n    if (fieldHasPositions) {\n      lastPosFP = posOut.getFilePointer();\n      if (fieldHasOffsets || fieldHasPayloads) {\n        lastPayFP = payOut.getFilePointer();\n      }\n    }\n    if (initialized) {\n      for (CompetitiveImpactAccumulator acc : curCompetitiveFreqNorms) {\n        acc.clear();\n      }\n    }\n    initialized = false;\n  }\n\n","sourceOld":"  @Override\n  public void resetSkip() {\n    lastDocFP = docOut.getFilePointer();\n    if (fieldHasPositions) {\n      lastPosFP = posOut.getFilePointer();\n      if (fieldHasOffsets || fieldHasPayloads) {\n        lastPayFP = payOut.getFilePointer();\n      }\n    }\n    if (initialized) {\n      for (CompetitiveImpactAccumulator acc : curCompetitiveFreqNorms) {\n        acc.clear();\n      }\n    }\n    initialized = false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9a0cc86697753659ac5e7f55243ccdcbf44d8a36","date":1574100512,"type":6,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene84/Lucene84SkipWriter#resetSkip().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/lucene50/Lucene50SkipWriter#resetSkip().mjava","sourceNew":"  @Override\n  public void resetSkip() {\n    lastDocFP = docOut.getFilePointer();\n    if (fieldHasPositions) {\n      lastPosFP = posOut.getFilePointer();\n      if (fieldHasOffsets || fieldHasPayloads) {\n        lastPayFP = payOut.getFilePointer();\n      }\n    }\n    if (initialized) {\n      for (CompetitiveImpactAccumulator acc : curCompetitiveFreqNorms) {\n        acc.clear();\n      }\n    }\n    initialized = false;\n  }\n\n","sourceOld":"  @Override\n  public void resetSkip() {\n    lastDocFP = docOut.getFilePointer();\n    if (fieldHasPositions) {\n      lastPosFP = posOut.getFilePointer();\n      if (fieldHasOffsets || fieldHasPayloads) {\n        lastPayFP = payOut.getFilePointer();\n      }\n    }\n    if (initialized) {\n      for (CompetitiveImpactAccumulator acc : curCompetitiveFreqNorms) {\n        acc.clear();\n      }\n    }\n    initialized = false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"99eb4a732d1a908f4636ace52928876136bf1896":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"9a0cc86697753659ac5e7f55243ccdcbf44d8a36":["6a692be6c8e120ef6dbfcd5dde3de42815813cd2"],"6a692be6c8e120ef6dbfcd5dde3de42815813cd2":["622a708571e534680618b3c5e0c28ac539a47776"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"622a708571e534680618b3c5e0c28ac539a47776":["db68c63cbfaa8698b9c4475f75ed2b9c9696d238"],"db68c63cbfaa8698b9c4475f75ed2b9c9696d238":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","99eb4a732d1a908f4636ace52928876136bf1896"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9a0cc86697753659ac5e7f55243ccdcbf44d8a36"]},"commit2Childs":{"99eb4a732d1a908f4636ace52928876136bf1896":["db68c63cbfaa8698b9c4475f75ed2b9c9696d238"],"9a0cc86697753659ac5e7f55243ccdcbf44d8a36":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["99eb4a732d1a908f4636ace52928876136bf1896","db68c63cbfaa8698b9c4475f75ed2b9c9696d238"],"6a692be6c8e120ef6dbfcd5dde3de42815813cd2":["9a0cc86697753659ac5e7f55243ccdcbf44d8a36"],"622a708571e534680618b3c5e0c28ac539a47776":["6a692be6c8e120ef6dbfcd5dde3de42815813cd2"],"db68c63cbfaa8698b9c4475f75ed2b9c9696d238":["622a708571e534680618b3c5e0c28ac539a47776"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}