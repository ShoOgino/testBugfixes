{"path":"src/java/org/apache/lucene/store/FSDirectory#getDirectory(String,LockFactory).mjava","commits":[{"id":"66b12ba4967665216eeb706b58d424c51fb3641a","date":1169160423,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/store/FSDirectory#getDirectory(String,LockFactory).mjava","pathOld":"/dev/null","sourceNew":"  /** Returns the directory instance for the named location.\n   * @param path the path to the directory.\n   * @param lockFactory instance of {@link LockFactory} providing the\n   *        locking implementation.\n   * @return the FSDirectory for the named file.  */\n  public static FSDirectory getDirectory(String path, LockFactory lockFactory)\n      throws IOException {\n    return getDirectory(new File(path), lockFactory);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b583d3621fe173e7296abcf62f82fb707c901234","date":1194717060,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/store/FSDirectory#getDirectory(String,LockFactory).mjava","pathOld":"src/java/org/apache/lucene/store/FSDirectory#getDirectory(String,LockFactory).mjava","sourceNew":"  /** Returns the directory instance for the named location.\n   * @param path the path to the directory.\n   * @param lockFactory instance of {@link LockFactory} providing the\n   *        locking implementation.  If null, the default\n   *        {@link SimpleFSLockFactory} is used.\n   * @return the FSDirectory for the named file.  */\n  public static FSDirectory getDirectory(String path, LockFactory lockFactory)\n      throws IOException {\n    return getDirectory(new File(path), lockFactory, DEFAULT_DO_SYNC);\n  }\n\n","sourceOld":"  /** Returns the directory instance for the named location.\n   * @param path the path to the directory.\n   * @param lockFactory instance of {@link LockFactory} providing the\n   *        locking implementation.\n   * @return the FSDirectory for the named file.  */\n  public static FSDirectory getDirectory(String path, LockFactory lockFactory)\n      throws IOException {\n    return getDirectory(new File(path), lockFactory);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a015c55424dd37249054283bedc90388bd45358f","date":1197049353,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/store/FSDirectory#getDirectory(String,LockFactory).mjava","pathOld":"src/java/org/apache/lucene/store/FSDirectory#getDirectory(String,LockFactory).mjava","sourceNew":"  /** Returns the directory instance for the named location.\n   * @param path the path to the directory.\n   * @param lockFactory instance of {@link LockFactory} providing the\n   *        locking implementation.\n   * @return the FSDirectory for the named file.  */\n  public static FSDirectory getDirectory(String path, LockFactory lockFactory)\n      throws IOException {\n    return getDirectory(new File(path), lockFactory);\n  }\n\n","sourceOld":"  /** Returns the directory instance for the named location.\n   * @param path the path to the directory.\n   * @param lockFactory instance of {@link LockFactory} providing the\n   *        locking implementation.  If null, the default\n   *        {@link SimpleFSLockFactory} is used.\n   * @return the FSDirectory for the named file.  */\n  public static FSDirectory getDirectory(String path, LockFactory lockFactory)\n      throws IOException {\n    return getDirectory(new File(path), lockFactory, DEFAULT_DO_SYNC);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"89b8a0757fe4354bdc64c82f90886a9284b57833","date":1226690542,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/lucene/store/FSDirectory#getDirectory(String,LockFactory).mjava","pathOld":"src/java/org/apache/lucene/store/FSDirectory#getDirectory(String,LockFactory).mjava","sourceNew":"  /** Returns the directory instance for the named location.\n   *\n   * @deprecated Use {@link #FSDirectory(File, LockFactory)}\n   *\n   * @param path the path to the directory.\n   * @param lockFactory instance of {@link LockFactory} providing the\n   *        locking implementation.\n   * @return the FSDirectory for the named file.  */\n  public static FSDirectory getDirectory(String path, LockFactory lockFactory)\n      throws IOException {\n    return getDirectory(new File(path), lockFactory);\n  }\n\n","sourceOld":"  /** Returns the directory instance for the named location.\n   * @param path the path to the directory.\n   * @param lockFactory instance of {@link LockFactory} providing the\n   *        locking implementation.\n   * @return the FSDirectory for the named file.  */\n  public static FSDirectory getDirectory(String path, LockFactory lockFactory)\n      throws IOException {\n    return getDirectory(new File(path), lockFactory);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5309ea37b2a7ec9c5f21c9eeacc9d9fb808cdb02","date":1243677645,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/store/FSDirectory#getDirectory(String,LockFactory).mjava","pathOld":"src/java/org/apache/lucene/store/FSDirectory#getDirectory(String,LockFactory).mjava","sourceNew":"  /** Returns the directory instance for the named location.\n   *\n   * @deprecated Use {@link #open(File, LockFactory)}\n   *\n   * @param path the path to the directory.\n   * @param lockFactory instance of {@link LockFactory} providing the\n   *        locking implementation.\n   * @return the FSDirectory for the named file.  */\n  public static FSDirectory getDirectory(String path, LockFactory lockFactory)\n      throws IOException {\n    return getDirectory(new File(path), lockFactory);\n  }\n\n","sourceOld":"  /** Returns the directory instance for the named location.\n   *\n   * @deprecated Use {@link #FSDirectory(File, LockFactory)}\n   *\n   * @param path the path to the directory.\n   * @param lockFactory instance of {@link LockFactory} providing the\n   *        locking implementation.\n   * @return the FSDirectory for the named file.  */\n  public static FSDirectory getDirectory(String path, LockFactory lockFactory)\n      throws IOException {\n    return getDirectory(new File(path), lockFactory);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"eaea03be31988a41275d45a429ac71ff0ad740fb","date":1254612554,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"src/java/org/apache/lucene/store/FSDirectory#getDirectory(String,LockFactory).mjava","sourceNew":null,"sourceOld":"  /** Returns the directory instance for the named location.\n   *\n   * @deprecated Use {@link #open(File, LockFactory)}\n   *\n   * @param path the path to the directory.\n   * @param lockFactory instance of {@link LockFactory} providing the\n   *        locking implementation.\n   * @return the FSDirectory for the named file.  */\n  public static FSDirectory getDirectory(String path, LockFactory lockFactory)\n      throws IOException {\n    return getDirectory(new File(path), lockFactory);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"eaea03be31988a41275d45a429ac71ff0ad740fb":["5309ea37b2a7ec9c5f21c9eeacc9d9fb808cdb02"],"b583d3621fe173e7296abcf62f82fb707c901234":["66b12ba4967665216eeb706b58d424c51fb3641a"],"66b12ba4967665216eeb706b58d424c51fb3641a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a015c55424dd37249054283bedc90388bd45358f":["b583d3621fe173e7296abcf62f82fb707c901234"],"5309ea37b2a7ec9c5f21c9eeacc9d9fb808cdb02":["89b8a0757fe4354bdc64c82f90886a9284b57833"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"89b8a0757fe4354bdc64c82f90886a9284b57833":["a015c55424dd37249054283bedc90388bd45358f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["eaea03be31988a41275d45a429ac71ff0ad740fb"]},"commit2Childs":{"eaea03be31988a41275d45a429ac71ff0ad740fb":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b583d3621fe173e7296abcf62f82fb707c901234":["a015c55424dd37249054283bedc90388bd45358f"],"66b12ba4967665216eeb706b58d424c51fb3641a":["b583d3621fe173e7296abcf62f82fb707c901234"],"a015c55424dd37249054283bedc90388bd45358f":["89b8a0757fe4354bdc64c82f90886a9284b57833"],"5309ea37b2a7ec9c5f21c9eeacc9d9fb808cdb02":["eaea03be31988a41275d45a429ac71ff0ad740fb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["66b12ba4967665216eeb706b58d424c51fb3641a"],"89b8a0757fe4354bdc64c82f90886a9284b57833":["5309ea37b2a7ec9c5f21c9eeacc9d9fb808cdb02"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}