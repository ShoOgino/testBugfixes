{"path":"solr/core/src/test/org/apache/solr/search/LargeFieldTest#initManagedSchemaCore().mjava","commits":[{"id":"12f7f335611574989edc8f87d25d91e89aa385b6","date":1489690739,"type":0,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/LargeFieldTest#initManagedSchemaCore().mjava","pathOld":"/dev/null","sourceNew":"  @BeforeClass\n  public static void initManagedSchemaCore() throws Exception {\n    // TODO propose convenience API for this?\n    // This testing approach means no new solrconfig or schema file or per-test temp solr-home!\n    System.setProperty(\"managed.schema.mutable\", \"true\");\n    System.setProperty(\"managed.schema.resourceName\", \"schema-one-field-no-dynamic-field-unique-key.xml\");\n    System.setProperty(\"enable.update.log\", \"false\");\n    initCore(\"solrconfig-managed-schema.xml\", \"ignoredSchemaName?\");\n\n    // modify solr config  TODO propose more convenient API for this; maybe with JSON-ification of a map\n    try (SolrQueryRequestBase req = (SolrQueryRequestBase) req()) {\n      req.getContext().put(\"httpMethod\", \"POST\");\n      req.setContentStreams(Collections.singleton(new ContentStreamBase.StringStream(\n          \"{ 'set-property':{\" +\n              \"'query.enableLazyFieldLoading':true, \" +\n              \"'query.documentCache.class':'solr.LRUCache'\" +\n              \"}}\"\n      )));\n      SolrQueryResponse rsp = new SolrQueryResponse();\n      h.getCore().execute(h.getCore().getRequestHandler(\"/config\"), req, rsp);\n      assertNull(rsp.getException());\n    }\n\n    boolean PERSIST_FALSE = false; // don't write to test resource dir\n\n    IndexSchema schema = h.getCore().getLatestSchema();\n    schema = schema.addFieldTypes(Collections.singletonList(\n        schema.newFieldType(\"textType\", \"solr.TextField\", // redundant; TODO improve api\n            map(\"name\", \"textType\",   \"class\", \"solr.TextField\",\n                \"analyzer\", map(\"class\", \"org.apache.lucene.analysis.standard.StandardAnalyzer\")))),\n        PERSIST_FALSE);\n    schema = schema.addFields(Arrays.asList(\n        schema.newField(LAZY_FIELD, \"textType\", map()),\n        schema.newField(BIG_FIELD, \"textType\", map(\"large\", true))),\n        Collections.emptyMap(),\n        PERSIST_FALSE);\n\n    h.getCore().setLatestSchema(schema);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f8cdcfd04c64cbc5a43ebba65ca77ff8208caf15","date":1489703457,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/LargeFieldTest#initManagedSchemaCore().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/LargeFieldTest#initManagedSchemaCore().mjava","sourceNew":"  @BeforeClass\n  public static void initManagedSchemaCore() throws Exception {\n    // This testing approach means no schema file or per-test temp solr-home!\n    System.setProperty(\"managed.schema.mutable\", \"true\");\n    System.setProperty(\"managed.schema.resourceName\", \"schema-one-field-no-dynamic-field-unique-key.xml\");\n    System.setProperty(\"enable.update.log\", \"false\");\n    System.setProperty(\"documentCache.enabled\", \"true\");\n    System.setProperty(\"enableLazyFieldLoading\", \"true\");\n\n    initCore(\"solrconfig-managed-schema.xml\", \"ignoredSchemaName?\");\n\n    // TODO SOLR-10229 will make this easier\n    boolean PERSIST_FALSE = false; // don't write to test resource dir\n    IndexSchema schema = h.getCore().getLatestSchema();\n    schema = schema.addFieldTypes(Collections.singletonList(\n        schema.newFieldType(\"textType\", \"solr.TextField\", // redundant; TODO improve api\n            map(\"name\", \"textType\",   \"class\", \"solr.TextField\",\n                \"analyzer\", map(\"class\", \"org.apache.lucene.analysis.standard.StandardAnalyzer\")))),\n        PERSIST_FALSE);\n    schema = schema.addFields(Arrays.asList(\n        schema.newField(LAZY_FIELD, \"textType\", map()),\n        schema.newField(BIG_FIELD, \"textType\", map(\"large\", true))),\n        Collections.emptyMap(),\n        PERSIST_FALSE);\n\n    h.getCore().setLatestSchema(schema);\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void initManagedSchemaCore() throws Exception {\n    // TODO propose convenience API for this?\n    // This testing approach means no new solrconfig or schema file or per-test temp solr-home!\n    System.setProperty(\"managed.schema.mutable\", \"true\");\n    System.setProperty(\"managed.schema.resourceName\", \"schema-one-field-no-dynamic-field-unique-key.xml\");\n    System.setProperty(\"enable.update.log\", \"false\");\n    initCore(\"solrconfig-managed-schema.xml\", \"ignoredSchemaName?\");\n\n    // modify solr config  TODO propose more convenient API for this; maybe with JSON-ification of a map\n    try (SolrQueryRequestBase req = (SolrQueryRequestBase) req()) {\n      req.getContext().put(\"httpMethod\", \"POST\");\n      req.setContentStreams(Collections.singleton(new ContentStreamBase.StringStream(\n          \"{ 'set-property':{\" +\n              \"'query.enableLazyFieldLoading':true, \" +\n              \"'query.documentCache.class':'solr.LRUCache'\" +\n              \"}}\"\n      )));\n      SolrQueryResponse rsp = new SolrQueryResponse();\n      h.getCore().execute(h.getCore().getRequestHandler(\"/config\"), req, rsp);\n      assertNull(rsp.getException());\n    }\n\n    boolean PERSIST_FALSE = false; // don't write to test resource dir\n\n    IndexSchema schema = h.getCore().getLatestSchema();\n    schema = schema.addFieldTypes(Collections.singletonList(\n        schema.newFieldType(\"textType\", \"solr.TextField\", // redundant; TODO improve api\n            map(\"name\", \"textType\",   \"class\", \"solr.TextField\",\n                \"analyzer\", map(\"class\", \"org.apache.lucene.analysis.standard.StandardAnalyzer\")))),\n        PERSIST_FALSE);\n    schema = schema.addFields(Arrays.asList(\n        schema.newField(LAZY_FIELD, \"textType\", map()),\n        schema.newField(BIG_FIELD, \"textType\", map(\"large\", true))),\n        Collections.emptyMap(),\n        PERSIST_FALSE);\n\n    h.getCore().setLatestSchema(schema);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d298e2c9776c12267a444e6ded7cf10ff9784881","date":1489848154,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/LargeFieldTest#initManagedSchemaCore().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/LargeFieldTest#initManagedSchemaCore().mjava","sourceNew":"  @BeforeClass\n  public static void initManagedSchemaCore() throws Exception {\n    // This testing approach means no schema file or per-test temp solr-home!\n    System.setProperty(\"managed.schema.mutable\", \"true\");\n    System.setProperty(\"managed.schema.resourceName\", \"schema-one-field-no-dynamic-field-unique-key.xml\");\n    System.setProperty(\"enable.update.log\", \"false\");\n    System.setProperty(\"documentCache.enabled\", \"true\");\n    System.setProperty(\"enableLazyFieldLoading\", \"true\");\n\n    initCore(\"solrconfig-managed-schema.xml\", \"ignoredSchemaName\");\n\n    // TODO SOLR-10229 will make this easier\n    boolean PERSIST_FALSE = false; // don't write to test resource dir\n    IndexSchema schema = h.getCore().getLatestSchema();\n    schema = schema.addFieldTypes(Collections.singletonList(\n        schema.newFieldType(\"textType\", \"solr.TextField\", // redundant; TODO improve api\n            map(\"name\", \"textType\",   \"class\", \"solr.TextField\",\n                \"analyzer\", map(\"class\", \"org.apache.lucene.analysis.standard.StandardAnalyzer\")))),\n        PERSIST_FALSE);\n    schema = schema.addFields(Arrays.asList(\n        schema.newField(LAZY_FIELD, \"textType\", map()),\n        schema.newField(BIG_FIELD, \"textType\", map(\"large\", true))),\n        Collections.emptyMap(),\n        PERSIST_FALSE);\n\n    h.getCore().setLatestSchema(schema);\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void initManagedSchemaCore() throws Exception {\n    // This testing approach means no schema file or per-test temp solr-home!\n    System.setProperty(\"managed.schema.mutable\", \"true\");\n    System.setProperty(\"managed.schema.resourceName\", \"schema-one-field-no-dynamic-field-unique-key.xml\");\n    System.setProperty(\"enable.update.log\", \"false\");\n    System.setProperty(\"documentCache.enabled\", \"true\");\n    System.setProperty(\"enableLazyFieldLoading\", \"true\");\n\n    initCore(\"solrconfig-managed-schema.xml\", \"ignoredSchemaName?\");\n\n    // TODO SOLR-10229 will make this easier\n    boolean PERSIST_FALSE = false; // don't write to test resource dir\n    IndexSchema schema = h.getCore().getLatestSchema();\n    schema = schema.addFieldTypes(Collections.singletonList(\n        schema.newFieldType(\"textType\", \"solr.TextField\", // redundant; TODO improve api\n            map(\"name\", \"textType\",   \"class\", \"solr.TextField\",\n                \"analyzer\", map(\"class\", \"org.apache.lucene.analysis.standard.StandardAnalyzer\")))),\n        PERSIST_FALSE);\n    schema = schema.addFields(Arrays.asList(\n        schema.newField(LAZY_FIELD, \"textType\", map()),\n        schema.newField(BIG_FIELD, \"textType\", map(\"large\", true))),\n        Collections.emptyMap(),\n        PERSIST_FALSE);\n\n    h.getCore().setLatestSchema(schema);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7b4eb0a25318cc756077fbde9bd3052690aed03d","date":1490280009,"type":0,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/LargeFieldTest#initManagedSchemaCore().mjava","pathOld":"/dev/null","sourceNew":"  @BeforeClass\n  public static void initManagedSchemaCore() throws Exception {\n    // TODO propose convenience API for this?\n    // This testing approach means no new solrconfig or schema file or per-test temp solr-home!\n    System.setProperty(\"managed.schema.mutable\", \"true\");\n    System.setProperty(\"managed.schema.resourceName\", \"schema-one-field-no-dynamic-field-unique-key.xml\");\n    System.setProperty(\"enable.update.log\", \"false\");\n    initCore(\"solrconfig-managed-schema.xml\", \"ignoredSchemaName?\");\n\n    // modify solr config  TODO propose more convenient API for this; maybe with JSON-ification of a map\n    try (SolrQueryRequestBase req = (SolrQueryRequestBase) req()) {\n      req.getContext().put(\"httpMethod\", \"POST\");\n      req.setContentStreams(Collections.singleton(new ContentStreamBase.StringStream(\n          \"{ 'set-property':{\" +\n              \"'query.enableLazyFieldLoading':true, \" +\n              \"'query.documentCache.class':'solr.LRUCache'\" +\n              \"}}\"\n      )));\n      SolrQueryResponse rsp = new SolrQueryResponse();\n      h.getCore().execute(h.getCore().getRequestHandler(\"/config\"), req, rsp);\n      assertNull(rsp.getException());\n    }\n\n    boolean PERSIST_FALSE = false; // don't write to test resource dir\n\n    IndexSchema schema = h.getCore().getLatestSchema();\n    schema = schema.addFieldTypes(Collections.singletonList(\n        schema.newFieldType(\"textType\", \"solr.TextField\", // redundant; TODO improve api\n            map(\"name\", \"textType\",   \"class\", \"solr.TextField\",\n                \"analyzer\", map(\"class\", \"org.apache.lucene.analysis.standard.StandardAnalyzer\")))),\n        PERSIST_FALSE);\n    schema = schema.addFields(Arrays.asList(\n        schema.newField(LAZY_FIELD, \"textType\", map()),\n        schema.newField(BIG_FIELD, \"textType\", map(\"large\", true))),\n        Collections.emptyMap(),\n        PERSIST_FALSE);\n\n    h.getCore().setLatestSchema(schema);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"299cbb2df78464b481d1dfe6fcd57be0165af96a","date":1490280010,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/LargeFieldTest#initManagedSchemaCore().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/LargeFieldTest#initManagedSchemaCore().mjava","sourceNew":"  @BeforeClass\n  public static void initManagedSchemaCore() throws Exception {\n    // This testing approach means no schema file or per-test temp solr-home!\n    System.setProperty(\"managed.schema.mutable\", \"true\");\n    System.setProperty(\"managed.schema.resourceName\", \"schema-one-field-no-dynamic-field-unique-key.xml\");\n    System.setProperty(\"enable.update.log\", \"false\");\n    System.setProperty(\"documentCache.enabled\", \"true\");\n    System.setProperty(\"enableLazyFieldLoading\", \"true\");\n\n    initCore(\"solrconfig-managed-schema.xml\", \"ignoredSchemaName?\");\n\n    // TODO SOLR-10229 will make this easier\n    boolean PERSIST_FALSE = false; // don't write to test resource dir\n    IndexSchema schema = h.getCore().getLatestSchema();\n    schema = schema.addFieldTypes(Collections.singletonList(\n        schema.newFieldType(\"textType\", \"solr.TextField\", // redundant; TODO improve api\n            map(\"name\", \"textType\",   \"class\", \"solr.TextField\",\n                \"analyzer\", map(\"class\", \"org.apache.lucene.analysis.standard.StandardAnalyzer\")))),\n        PERSIST_FALSE);\n    schema = schema.addFields(Arrays.asList(\n        schema.newField(LAZY_FIELD, \"textType\", map()),\n        schema.newField(BIG_FIELD, \"textType\", map(\"large\", true))),\n        Collections.emptyMap(),\n        PERSIST_FALSE);\n\n    h.getCore().setLatestSchema(schema);\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void initManagedSchemaCore() throws Exception {\n    // TODO propose convenience API for this?\n    // This testing approach means no new solrconfig or schema file or per-test temp solr-home!\n    System.setProperty(\"managed.schema.mutable\", \"true\");\n    System.setProperty(\"managed.schema.resourceName\", \"schema-one-field-no-dynamic-field-unique-key.xml\");\n    System.setProperty(\"enable.update.log\", \"false\");\n    initCore(\"solrconfig-managed-schema.xml\", \"ignoredSchemaName?\");\n\n    // modify solr config  TODO propose more convenient API for this; maybe with JSON-ification of a map\n    try (SolrQueryRequestBase req = (SolrQueryRequestBase) req()) {\n      req.getContext().put(\"httpMethod\", \"POST\");\n      req.setContentStreams(Collections.singleton(new ContentStreamBase.StringStream(\n          \"{ 'set-property':{\" +\n              \"'query.enableLazyFieldLoading':true, \" +\n              \"'query.documentCache.class':'solr.LRUCache'\" +\n              \"}}\"\n      )));\n      SolrQueryResponse rsp = new SolrQueryResponse();\n      h.getCore().execute(h.getCore().getRequestHandler(\"/config\"), req, rsp);\n      assertNull(rsp.getException());\n    }\n\n    boolean PERSIST_FALSE = false; // don't write to test resource dir\n\n    IndexSchema schema = h.getCore().getLatestSchema();\n    schema = schema.addFieldTypes(Collections.singletonList(\n        schema.newFieldType(\"textType\", \"solr.TextField\", // redundant; TODO improve api\n            map(\"name\", \"textType\",   \"class\", \"solr.TextField\",\n                \"analyzer\", map(\"class\", \"org.apache.lucene.analysis.standard.StandardAnalyzer\")))),\n        PERSIST_FALSE);\n    schema = schema.addFields(Arrays.asList(\n        schema.newField(LAZY_FIELD, \"textType\", map()),\n        schema.newField(BIG_FIELD, \"textType\", map(\"large\", true))),\n        Collections.emptyMap(),\n        PERSIST_FALSE);\n\n    h.getCore().setLatestSchema(schema);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4f523ea667e0854f73916b03d94cca9b3c6a80e7","date":1490280011,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/LargeFieldTest#initManagedSchemaCore().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/LargeFieldTest#initManagedSchemaCore().mjava","sourceNew":"  @BeforeClass\n  public static void initManagedSchemaCore() throws Exception {\n    // This testing approach means no schema file or per-test temp solr-home!\n    System.setProperty(\"managed.schema.mutable\", \"true\");\n    System.setProperty(\"managed.schema.resourceName\", \"schema-one-field-no-dynamic-field-unique-key.xml\");\n    System.setProperty(\"enable.update.log\", \"false\");\n    System.setProperty(\"documentCache.enabled\", \"true\");\n    System.setProperty(\"enableLazyFieldLoading\", \"true\");\n\n    initCore(\"solrconfig-managed-schema.xml\", \"ignoredSchemaName\");\n\n    // TODO SOLR-10229 will make this easier\n    boolean PERSIST_FALSE = false; // don't write to test resource dir\n    IndexSchema schema = h.getCore().getLatestSchema();\n    schema = schema.addFieldTypes(Collections.singletonList(\n        schema.newFieldType(\"textType\", \"solr.TextField\", // redundant; TODO improve api\n            map(\"name\", \"textType\",   \"class\", \"solr.TextField\",\n                \"analyzer\", map(\"class\", \"org.apache.lucene.analysis.standard.StandardAnalyzer\")))),\n        PERSIST_FALSE);\n    schema = schema.addFields(Arrays.asList(\n        schema.newField(LAZY_FIELD, \"textType\", map()),\n        schema.newField(BIG_FIELD, \"textType\", map(\"large\", true))),\n        Collections.emptyMap(),\n        PERSIST_FALSE);\n\n    h.getCore().setLatestSchema(schema);\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void initManagedSchemaCore() throws Exception {\n    // This testing approach means no schema file or per-test temp solr-home!\n    System.setProperty(\"managed.schema.mutable\", \"true\");\n    System.setProperty(\"managed.schema.resourceName\", \"schema-one-field-no-dynamic-field-unique-key.xml\");\n    System.setProperty(\"enable.update.log\", \"false\");\n    System.setProperty(\"documentCache.enabled\", \"true\");\n    System.setProperty(\"enableLazyFieldLoading\", \"true\");\n\n    initCore(\"solrconfig-managed-schema.xml\", \"ignoredSchemaName?\");\n\n    // TODO SOLR-10229 will make this easier\n    boolean PERSIST_FALSE = false; // don't write to test resource dir\n    IndexSchema schema = h.getCore().getLatestSchema();\n    schema = schema.addFieldTypes(Collections.singletonList(\n        schema.newFieldType(\"textType\", \"solr.TextField\", // redundant; TODO improve api\n            map(\"name\", \"textType\",   \"class\", \"solr.TextField\",\n                \"analyzer\", map(\"class\", \"org.apache.lucene.analysis.standard.StandardAnalyzer\")))),\n        PERSIST_FALSE);\n    schema = schema.addFields(Arrays.asList(\n        schema.newField(LAZY_FIELD, \"textType\", map()),\n        schema.newField(BIG_FIELD, \"textType\", map(\"large\", true))),\n        Collections.emptyMap(),\n        PERSIST_FALSE);\n\n    h.getCore().setLatestSchema(schema);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e98520789adb1d5ad05afb4956eca0944a929688","date":1592430701,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/LargeFieldTest#initManagedSchemaCore().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/LargeFieldTest#initManagedSchemaCore().mjava","sourceNew":"  @BeforeClass\n  @SuppressWarnings({\"unchecked\"})\n  public static void initManagedSchemaCore() throws Exception {\n    // This testing approach means no schema file or per-test temp solr-home!\n    System.setProperty(\"managed.schema.mutable\", \"true\");\n    System.setProperty(\"managed.schema.resourceName\", \"schema-one-field-no-dynamic-field-unique-key.xml\");\n    System.setProperty(\"enable.update.log\", \"false\");\n    System.setProperty(\"documentCache.enabled\", \"true\");\n    System.setProperty(\"enableLazyFieldLoading\", \"true\");\n\n    initCore(\"solrconfig-managed-schema.xml\", \"ignoredSchemaName\");\n\n    // TODO SOLR-10229 will make this easier\n    boolean PERSIST_FALSE = false; // don't write to test resource dir\n    IndexSchema schema = h.getCore().getLatestSchema();\n    schema = schema.addFieldTypes(Collections.singletonList(\n        schema.newFieldType(\"textType\", \"solr.TextField\", // redundant; TODO improve api\n            map(\"name\", \"textType\",   \"class\", \"solr.TextField\",\n                \"analyzer\", map(\"class\", \"org.apache.lucene.analysis.standard.StandardAnalyzer\")))),\n        PERSIST_FALSE);\n    schema = schema.addFields(Arrays.asList(\n        schema.newField(LAZY_FIELD, \"textType\", map()),\n        schema.newField(BIG_FIELD, \"textType\", map(\"large\", true))),\n        Collections.emptyMap(),\n        PERSIST_FALSE);\n\n    h.getCore().setLatestSchema(schema);\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void initManagedSchemaCore() throws Exception {\n    // This testing approach means no schema file or per-test temp solr-home!\n    System.setProperty(\"managed.schema.mutable\", \"true\");\n    System.setProperty(\"managed.schema.resourceName\", \"schema-one-field-no-dynamic-field-unique-key.xml\");\n    System.setProperty(\"enable.update.log\", \"false\");\n    System.setProperty(\"documentCache.enabled\", \"true\");\n    System.setProperty(\"enableLazyFieldLoading\", \"true\");\n\n    initCore(\"solrconfig-managed-schema.xml\", \"ignoredSchemaName\");\n\n    // TODO SOLR-10229 will make this easier\n    boolean PERSIST_FALSE = false; // don't write to test resource dir\n    IndexSchema schema = h.getCore().getLatestSchema();\n    schema = schema.addFieldTypes(Collections.singletonList(\n        schema.newFieldType(\"textType\", \"solr.TextField\", // redundant; TODO improve api\n            map(\"name\", \"textType\",   \"class\", \"solr.TextField\",\n                \"analyzer\", map(\"class\", \"org.apache.lucene.analysis.standard.StandardAnalyzer\")))),\n        PERSIST_FALSE);\n    schema = schema.addFields(Arrays.asList(\n        schema.newField(LAZY_FIELD, \"textType\", map()),\n        schema.newField(BIG_FIELD, \"textType\", map(\"large\", true))),\n        Collections.emptyMap(),\n        PERSIST_FALSE);\n\n    h.getCore().setLatestSchema(schema);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4f523ea667e0854f73916b03d94cca9b3c6a80e7":["299cbb2df78464b481d1dfe6fcd57be0165af96a"],"299cbb2df78464b481d1dfe6fcd57be0165af96a":["7b4eb0a25318cc756077fbde9bd3052690aed03d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7b4eb0a25318cc756077fbde9bd3052690aed03d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f8cdcfd04c64cbc5a43ebba65ca77ff8208caf15":["12f7f335611574989edc8f87d25d91e89aa385b6"],"12f7f335611574989edc8f87d25d91e89aa385b6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d298e2c9776c12267a444e6ded7cf10ff9784881":["f8cdcfd04c64cbc5a43ebba65ca77ff8208caf15"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e98520789adb1d5ad05afb4956eca0944a929688"],"e98520789adb1d5ad05afb4956eca0944a929688":["d298e2c9776c12267a444e6ded7cf10ff9784881"]},"commit2Childs":{"4f523ea667e0854f73916b03d94cca9b3c6a80e7":[],"299cbb2df78464b481d1dfe6fcd57be0165af96a":["4f523ea667e0854f73916b03d94cca9b3c6a80e7"],"7b4eb0a25318cc756077fbde9bd3052690aed03d":["299cbb2df78464b481d1dfe6fcd57be0165af96a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7b4eb0a25318cc756077fbde9bd3052690aed03d","12f7f335611574989edc8f87d25d91e89aa385b6"],"f8cdcfd04c64cbc5a43ebba65ca77ff8208caf15":["d298e2c9776c12267a444e6ded7cf10ff9784881"],"12f7f335611574989edc8f87d25d91e89aa385b6":["f8cdcfd04c64cbc5a43ebba65ca77ff8208caf15"],"d298e2c9776c12267a444e6ded7cf10ff9784881":["e98520789adb1d5ad05afb4956eca0944a929688"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"e98520789adb1d5ad05afb4956eca0944a929688":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["4f523ea667e0854f73916b03d94cca9b3c6a80e7","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}