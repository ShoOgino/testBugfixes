{"path":"contrib/queryparser/src/test/org/apache/lucene/queryParser/spans/TestSpanQueryParserSimpleSample#testBasicDemo().mjava","commits":[{"id":"b955a87bc7c5daeda1ed56821ec0bec2e8789e44","date":1249270724,"type":0,"author":"Michael Busch","isMerge":false,"pathNew":"contrib/queryparser/src/test/org/apache/lucene/queryParser/spans/TestSpanQueryParserSimpleSample#testBasicDemo().mjava","pathOld":"/dev/null","sourceNew":"  public void testBasicDemo() throws Exception {\n    SyntaxParser queryParser = new OriginalSyntaxParser();\n\n    // convert the CharSequence into a QueryNode tree\n    QueryNode queryTree = queryParser.parse(\"body:text\", null);\n\n    // create a config handler with a attribute used in\n    // UniqueFieldQueryNodeProcessor\n    QueryConfigHandler spanQueryConfigHandler = new SpansQueryConfigHandler();\n    UniqueFieldAttribute uniqueFieldAtt = (UniqueFieldAttribute) spanQueryConfigHandler\n        .getAttribute(UniqueFieldAttribute.class);\n    uniqueFieldAtt.setUniqueField(\"index\");\n\n    // set up the processor pipeline with the ConfigHandler\n    // and create the pipeline for this simple demo\n    QueryNodeProcessorPipeline spanProcessorPipeline = new QueryNodeProcessorPipeline(\n        spanQueryConfigHandler);\n    // @see SpansValidatorQueryNodeProcessor\n    spanProcessorPipeline.addProcessor(new SpansValidatorQueryNodeProcessor());\n    // @see UniqueFieldQueryNodeProcessor\n    spanProcessorPipeline.addProcessor(new UniqueFieldQueryNodeProcessor());\n\n    // print to show out the QueryNode tree before being processed\n    System.out.println(queryTree);\n\n    // Process the QueryTree using our new Processors\n    queryTree = spanProcessorPipeline.process(queryTree);\n\n    // print to show out the QueryNode tree after being processed\n    System.out.println(queryTree);\n\n    // create a instance off the Builder\n    SpansQueryTreeBuilder spansQueryTreeBuilder = new SpansQueryTreeBuilder();\n\n    // convert QueryNode tree to span query Objects\n    SpanQuery spanquery = spansQueryTreeBuilder.build(queryTree);\n\n    assertTrue(spanquery instanceof SpanTermQuery);\n    assertEquals(spanquery.toString(), \"index:text\");\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e8a848e758754282137f42bf85793c278e250390","date":1249640668,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/queryparser/src/test/org/apache/lucene/queryParser/spans/TestSpanQueryParserSimpleSample#testBasicDemo().mjava","pathOld":"contrib/queryparser/src/test/org/apache/lucene/queryParser/spans/TestSpanQueryParserSimpleSample#testBasicDemo().mjava","sourceNew":"  public void testBasicDemo() throws Exception {\n    SyntaxParser queryParser = new StandardSyntaxParser();\n\n    // convert the CharSequence into a QueryNode tree\n    QueryNode queryTree = queryParser.parse(\"body:text\", null);\n\n    // create a config handler with a attribute used in\n    // UniqueFieldQueryNodeProcessor\n    QueryConfigHandler spanQueryConfigHandler = new SpansQueryConfigHandler();\n    UniqueFieldAttribute uniqueFieldAtt = (UniqueFieldAttribute) spanQueryConfigHandler\n        .getAttribute(UniqueFieldAttribute.class);\n    uniqueFieldAtt.setUniqueField(\"index\");\n\n    // set up the processor pipeline with the ConfigHandler\n    // and create the pipeline for this simple demo\n    QueryNodeProcessorPipeline spanProcessorPipeline = new QueryNodeProcessorPipeline(\n        spanQueryConfigHandler);\n    // @see SpansValidatorQueryNodeProcessor\n    spanProcessorPipeline.addProcessor(new SpansValidatorQueryNodeProcessor());\n    // @see UniqueFieldQueryNodeProcessor\n    spanProcessorPipeline.addProcessor(new UniqueFieldQueryNodeProcessor());\n\n    // print to show out the QueryNode tree before being processed\n    System.out.println(queryTree);\n\n    // Process the QueryTree using our new Processors\n    queryTree = spanProcessorPipeline.process(queryTree);\n\n    // print to show out the QueryNode tree after being processed\n    System.out.println(queryTree);\n\n    // create a instance off the Builder\n    SpansQueryTreeBuilder spansQueryTreeBuilder = new SpansQueryTreeBuilder();\n\n    // convert QueryNode tree to span query Objects\n    SpanQuery spanquery = spansQueryTreeBuilder.build(queryTree);\n\n    assertTrue(spanquery instanceof SpanTermQuery);\n    assertEquals(spanquery.toString(), \"index:text\");\n\n  }\n\n","sourceOld":"  public void testBasicDemo() throws Exception {\n    SyntaxParser queryParser = new OriginalSyntaxParser();\n\n    // convert the CharSequence into a QueryNode tree\n    QueryNode queryTree = queryParser.parse(\"body:text\", null);\n\n    // create a config handler with a attribute used in\n    // UniqueFieldQueryNodeProcessor\n    QueryConfigHandler spanQueryConfigHandler = new SpansQueryConfigHandler();\n    UniqueFieldAttribute uniqueFieldAtt = (UniqueFieldAttribute) spanQueryConfigHandler\n        .getAttribute(UniqueFieldAttribute.class);\n    uniqueFieldAtt.setUniqueField(\"index\");\n\n    // set up the processor pipeline with the ConfigHandler\n    // and create the pipeline for this simple demo\n    QueryNodeProcessorPipeline spanProcessorPipeline = new QueryNodeProcessorPipeline(\n        spanQueryConfigHandler);\n    // @see SpansValidatorQueryNodeProcessor\n    spanProcessorPipeline.addProcessor(new SpansValidatorQueryNodeProcessor());\n    // @see UniqueFieldQueryNodeProcessor\n    spanProcessorPipeline.addProcessor(new UniqueFieldQueryNodeProcessor());\n\n    // print to show out the QueryNode tree before being processed\n    System.out.println(queryTree);\n\n    // Process the QueryTree using our new Processors\n    queryTree = spanProcessorPipeline.process(queryTree);\n\n    // print to show out the QueryNode tree after being processed\n    System.out.println(queryTree);\n\n    // create a instance off the Builder\n    SpansQueryTreeBuilder spansQueryTreeBuilder = new SpansQueryTreeBuilder();\n\n    // convert QueryNode tree to span query Objects\n    SpanQuery spanquery = spansQueryTreeBuilder.build(queryTree);\n\n    assertTrue(spanquery instanceof SpanTermQuery);\n    assertEquals(spanquery.toString(), \"index:text\");\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8d78f014fded44fbde905f4f84cdc21907b371e8","date":1254383623,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/queryparser/src/test/org/apache/lucene/queryParser/spans/TestSpanQueryParserSimpleSample#testBasicDemo().mjava","pathOld":"contrib/queryparser/src/test/org/apache/lucene/queryParser/spans/TestSpanQueryParserSimpleSample#testBasicDemo().mjava","sourceNew":"  public void testBasicDemo() throws Exception {\n    SyntaxParser queryParser = new StandardSyntaxParser();\n\n    // convert the CharSequence into a QueryNode tree\n    QueryNode queryTree = queryParser.parse(\"body:text\", null);\n\n    // create a config handler with a attribute used in\n    // UniqueFieldQueryNodeProcessor\n    QueryConfigHandler spanQueryConfigHandler = new SpansQueryConfigHandler();\n    UniqueFieldAttribute uniqueFieldAtt = spanQueryConfigHandler\n        .getAttribute(UniqueFieldAttribute.class);\n    uniqueFieldAtt.setUniqueField(\"index\");\n\n    // set up the processor pipeline with the ConfigHandler\n    // and create the pipeline for this simple demo\n    QueryNodeProcessorPipeline spanProcessorPipeline = new QueryNodeProcessorPipeline(\n        spanQueryConfigHandler);\n    // @see SpansValidatorQueryNodeProcessor\n    spanProcessorPipeline.addProcessor(new SpansValidatorQueryNodeProcessor());\n    // @see UniqueFieldQueryNodeProcessor\n    spanProcessorPipeline.addProcessor(new UniqueFieldQueryNodeProcessor());\n\n    // print to show out the QueryNode tree before being processed\n    System.out.println(queryTree);\n\n    // Process the QueryTree using our new Processors\n    queryTree = spanProcessorPipeline.process(queryTree);\n\n    // print to show out the QueryNode tree after being processed\n    System.out.println(queryTree);\n\n    // create a instance off the Builder\n    SpansQueryTreeBuilder spansQueryTreeBuilder = new SpansQueryTreeBuilder();\n\n    // convert QueryNode tree to span query Objects\n    SpanQuery spanquery = spansQueryTreeBuilder.build(queryTree);\n\n    assertTrue(spanquery instanceof SpanTermQuery);\n    assertEquals(spanquery.toString(), \"index:text\");\n\n  }\n\n","sourceOld":"  public void testBasicDemo() throws Exception {\n    SyntaxParser queryParser = new StandardSyntaxParser();\n\n    // convert the CharSequence into a QueryNode tree\n    QueryNode queryTree = queryParser.parse(\"body:text\", null);\n\n    // create a config handler with a attribute used in\n    // UniqueFieldQueryNodeProcessor\n    QueryConfigHandler spanQueryConfigHandler = new SpansQueryConfigHandler();\n    UniqueFieldAttribute uniqueFieldAtt = (UniqueFieldAttribute) spanQueryConfigHandler\n        .getAttribute(UniqueFieldAttribute.class);\n    uniqueFieldAtt.setUniqueField(\"index\");\n\n    // set up the processor pipeline with the ConfigHandler\n    // and create the pipeline for this simple demo\n    QueryNodeProcessorPipeline spanProcessorPipeline = new QueryNodeProcessorPipeline(\n        spanQueryConfigHandler);\n    // @see SpansValidatorQueryNodeProcessor\n    spanProcessorPipeline.addProcessor(new SpansValidatorQueryNodeProcessor());\n    // @see UniqueFieldQueryNodeProcessor\n    spanProcessorPipeline.addProcessor(new UniqueFieldQueryNodeProcessor());\n\n    // print to show out the QueryNode tree before being processed\n    System.out.println(queryTree);\n\n    // Process the QueryTree using our new Processors\n    queryTree = spanProcessorPipeline.process(queryTree);\n\n    // print to show out the QueryNode tree after being processed\n    System.out.println(queryTree);\n\n    // create a instance off the Builder\n    SpansQueryTreeBuilder spansQueryTreeBuilder = new SpansQueryTreeBuilder();\n\n    // convert QueryNode tree to span query Objects\n    SpanQuery spanquery = spansQueryTreeBuilder.build(queryTree);\n\n    assertTrue(spanquery instanceof SpanTermQuery);\n    assertEquals(spanquery.toString(), \"index:text\");\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"42607aa380c892dc1ec0ab26e86a575c28e13618","date":1268641604,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/queryparser/src/test/org/apache/lucene/queryParser/spans/TestSpanQueryParserSimpleSample#testBasicDemo().mjava","pathOld":"contrib/queryparser/src/test/org/apache/lucene/queryParser/spans/TestSpanQueryParserSimpleSample#testBasicDemo().mjava","sourceNew":"  public void testBasicDemo() throws Exception {\n    SyntaxParser queryParser = new StandardSyntaxParser();\n\n    // convert the CharSequence into a QueryNode tree\n    QueryNode queryTree = queryParser.parse(\"body:text\", null);\n\n    // create a config handler with a attribute used in\n    // UniqueFieldQueryNodeProcessor\n    QueryConfigHandler spanQueryConfigHandler = new SpansQueryConfigHandler();\n    UniqueFieldAttribute uniqueFieldAtt = spanQueryConfigHandler\n        .getAttribute(UniqueFieldAttribute.class);\n    uniqueFieldAtt.setUniqueField(\"index\");\n\n    // set up the processor pipeline with the ConfigHandler\n    // and create the pipeline for this simple demo\n    QueryNodeProcessorPipeline spanProcessorPipeline = new QueryNodeProcessorPipeline(\n        spanQueryConfigHandler);\n    // @see SpansValidatorQueryNodeProcessor\n    spanProcessorPipeline.addProcessor(new SpansValidatorQueryNodeProcessor());\n    // @see UniqueFieldQueryNodeProcessor\n    spanProcessorPipeline.addProcessor(new UniqueFieldQueryNodeProcessor());\n\n    // print to show out the QueryNode tree before being processed\n    if (VERBOSE) System.out.println(queryTree);\n\n    // Process the QueryTree using our new Processors\n    queryTree = spanProcessorPipeline.process(queryTree);\n\n    // print to show out the QueryNode tree after being processed\n    if (VERBOSE) System.out.println(queryTree);\n\n    // create a instance off the Builder\n    SpansQueryTreeBuilder spansQueryTreeBuilder = new SpansQueryTreeBuilder();\n\n    // convert QueryNode tree to span query Objects\n    SpanQuery spanquery = spansQueryTreeBuilder.build(queryTree);\n\n    assertTrue(spanquery instanceof SpanTermQuery);\n    assertEquals(spanquery.toString(), \"index:text\");\n\n  }\n\n","sourceOld":"  public void testBasicDemo() throws Exception {\n    SyntaxParser queryParser = new StandardSyntaxParser();\n\n    // convert the CharSequence into a QueryNode tree\n    QueryNode queryTree = queryParser.parse(\"body:text\", null);\n\n    // create a config handler with a attribute used in\n    // UniqueFieldQueryNodeProcessor\n    QueryConfigHandler spanQueryConfigHandler = new SpansQueryConfigHandler();\n    UniqueFieldAttribute uniqueFieldAtt = spanQueryConfigHandler\n        .getAttribute(UniqueFieldAttribute.class);\n    uniqueFieldAtt.setUniqueField(\"index\");\n\n    // set up the processor pipeline with the ConfigHandler\n    // and create the pipeline for this simple demo\n    QueryNodeProcessorPipeline spanProcessorPipeline = new QueryNodeProcessorPipeline(\n        spanQueryConfigHandler);\n    // @see SpansValidatorQueryNodeProcessor\n    spanProcessorPipeline.addProcessor(new SpansValidatorQueryNodeProcessor());\n    // @see UniqueFieldQueryNodeProcessor\n    spanProcessorPipeline.addProcessor(new UniqueFieldQueryNodeProcessor());\n\n    // print to show out the QueryNode tree before being processed\n    System.out.println(queryTree);\n\n    // Process the QueryTree using our new Processors\n    queryTree = spanProcessorPipeline.process(queryTree);\n\n    // print to show out the QueryNode tree after being processed\n    System.out.println(queryTree);\n\n    // create a instance off the Builder\n    SpansQueryTreeBuilder spansQueryTreeBuilder = new SpansQueryTreeBuilder();\n\n    // convert QueryNode tree to span query Objects\n    SpanQuery spanquery = spansQueryTreeBuilder.build(queryTree);\n\n    assertTrue(spanquery instanceof SpanTermQuery);\n    assertEquals(spanquery.toString(), \"index:text\");\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/spans/TestSpanQueryParserSimpleSample#testBasicDemo().mjava","pathOld":"contrib/queryparser/src/test/org/apache/lucene/queryParser/spans/TestSpanQueryParserSimpleSample#testBasicDemo().mjava","sourceNew":"  public void testBasicDemo() throws Exception {\n    SyntaxParser queryParser = new StandardSyntaxParser();\n\n    // convert the CharSequence into a QueryNode tree\n    QueryNode queryTree = queryParser.parse(\"body:text\", null);\n\n    // create a config handler with a attribute used in\n    // UniqueFieldQueryNodeProcessor\n    QueryConfigHandler spanQueryConfigHandler = new SpansQueryConfigHandler();\n    UniqueFieldAttribute uniqueFieldAtt = spanQueryConfigHandler\n        .getAttribute(UniqueFieldAttribute.class);\n    uniqueFieldAtt.setUniqueField(\"index\");\n\n    // set up the processor pipeline with the ConfigHandler\n    // and create the pipeline for this simple demo\n    QueryNodeProcessorPipeline spanProcessorPipeline = new QueryNodeProcessorPipeline(\n        spanQueryConfigHandler);\n    // @see SpansValidatorQueryNodeProcessor\n    spanProcessorPipeline.addProcessor(new SpansValidatorQueryNodeProcessor());\n    // @see UniqueFieldQueryNodeProcessor\n    spanProcessorPipeline.addProcessor(new UniqueFieldQueryNodeProcessor());\n\n    // print to show out the QueryNode tree before being processed\n    if (VERBOSE) System.out.println(queryTree);\n\n    // Process the QueryTree using our new Processors\n    queryTree = spanProcessorPipeline.process(queryTree);\n\n    // print to show out the QueryNode tree after being processed\n    if (VERBOSE) System.out.println(queryTree);\n\n    // create a instance off the Builder\n    SpansQueryTreeBuilder spansQueryTreeBuilder = new SpansQueryTreeBuilder();\n\n    // convert QueryNode tree to span query Objects\n    SpanQuery spanquery = spansQueryTreeBuilder.build(queryTree);\n\n    assertTrue(spanquery instanceof SpanTermQuery);\n    assertEquals(spanquery.toString(), \"index:text\");\n\n  }\n\n","sourceOld":"  public void testBasicDemo() throws Exception {\n    SyntaxParser queryParser = new StandardSyntaxParser();\n\n    // convert the CharSequence into a QueryNode tree\n    QueryNode queryTree = queryParser.parse(\"body:text\", null);\n\n    // create a config handler with a attribute used in\n    // UniqueFieldQueryNodeProcessor\n    QueryConfigHandler spanQueryConfigHandler = new SpansQueryConfigHandler();\n    UniqueFieldAttribute uniqueFieldAtt = spanQueryConfigHandler\n        .getAttribute(UniqueFieldAttribute.class);\n    uniqueFieldAtt.setUniqueField(\"index\");\n\n    // set up the processor pipeline with the ConfigHandler\n    // and create the pipeline for this simple demo\n    QueryNodeProcessorPipeline spanProcessorPipeline = new QueryNodeProcessorPipeline(\n        spanQueryConfigHandler);\n    // @see SpansValidatorQueryNodeProcessor\n    spanProcessorPipeline.addProcessor(new SpansValidatorQueryNodeProcessor());\n    // @see UniqueFieldQueryNodeProcessor\n    spanProcessorPipeline.addProcessor(new UniqueFieldQueryNodeProcessor());\n\n    // print to show out the QueryNode tree before being processed\n    if (VERBOSE) System.out.println(queryTree);\n\n    // Process the QueryTree using our new Processors\n    queryTree = spanProcessorPipeline.process(queryTree);\n\n    // print to show out the QueryNode tree after being processed\n    if (VERBOSE) System.out.println(queryTree);\n\n    // create a instance off the Builder\n    SpansQueryTreeBuilder spansQueryTreeBuilder = new SpansQueryTreeBuilder();\n\n    // convert QueryNode tree to span query Objects\n    SpanQuery spanquery = spansQueryTreeBuilder.build(queryTree);\n\n    assertTrue(spanquery instanceof SpanTermQuery);\n    assertEquals(spanquery.toString(), \"index:text\");\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e8a848e758754282137f42bf85793c278e250390":["b955a87bc7c5daeda1ed56821ec0bec2e8789e44"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8d78f014fded44fbde905f4f84cdc21907b371e8":["e8a848e758754282137f42bf85793c278e250390"],"42607aa380c892dc1ec0ab26e86a575c28e13618":["8d78f014fded44fbde905f4f84cdc21907b371e8"],"b955a87bc7c5daeda1ed56821ec0bec2e8789e44":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["42607aa380c892dc1ec0ab26e86a575c28e13618"]},"commit2Childs":{"e8a848e758754282137f42bf85793c278e250390":["8d78f014fded44fbde905f4f84cdc21907b371e8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b955a87bc7c5daeda1ed56821ec0bec2e8789e44"],"8d78f014fded44fbde905f4f84cdc21907b371e8":["42607aa380c892dc1ec0ab26e86a575c28e13618"],"42607aa380c892dc1ec0ab26e86a575c28e13618":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"b955a87bc7c5daeda1ed56821ec0bec2e8789e44":["e8a848e758754282137f42bf85793c278e250390"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}