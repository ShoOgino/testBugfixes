{"path":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DataImporter#doFullImport(DIHWriter,RequestInfo).mjava","commits":[{"id":"68a568183b091ca52e6a2c0f9b615be5f3a0974a","date":1399311632,"type":1,"author":"James Dyer","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DataImporter#doFullImport(DIHWriter,RequestInfo).mjava","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DataImporter#doFullImport(SolrWriter,RequestInfo).mjava","sourceNew":"  public void doFullImport(DIHWriter writer, RequestInfo requestParams) {\n    LOG.info(\"Starting Full Import\");\n    setStatus(Status.RUNNING_FULL_DUMP);\n    boolean success = false;\n    try {\n      DIHProperties dihPropWriter = createPropertyWriter();\n      setIndexStartTime(dihPropWriter.getCurrentTimestamp());\n      docBuilder = new DocBuilder(this, writer, dihPropWriter, requestParams);\n      checkWritablePersistFile(writer, dihPropWriter);\n      docBuilder.execute();\n      if (!requestParams.isDebug())\n        cumulativeStatistics.add(docBuilder.importStatistics);\n      success = true;\n    } catch (Exception e) {\n      SolrException.log(LOG, \"Full Import failed\", e);\n    } finally {\n      if (!success) {\n        docBuilder.rollback();\n      }\n      \n      setStatus(Status.IDLE);\n      DocBuilder.INSTANCE.set(null);\n    }\n\n  }\n\n","sourceOld":"  public void doFullImport(SolrWriter writer, RequestInfo requestParams) {\n    LOG.info(\"Starting Full Import\");\n    setStatus(Status.RUNNING_FULL_DUMP);\n    boolean success = false;\n    try {\n      DIHProperties dihPropWriter = createPropertyWriter();\n      setIndexStartTime(dihPropWriter.getCurrentTimestamp());\n      docBuilder = new DocBuilder(this, writer, dihPropWriter, requestParams);\n      checkWritablePersistFile(writer, dihPropWriter);\n      docBuilder.execute();\n      if (!requestParams.isDebug())\n        cumulativeStatistics.add(docBuilder.importStatistics);\n      success = true;\n    } catch (Exception e) {\n      SolrException.log(LOG, \"Full Import failed\", e);\n    } finally {\n      if (!success) {\n        docBuilder.rollback();\n      }\n      \n      setStatus(Status.IDLE);\n      DocBuilder.INSTANCE.set(null);\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29d10c9c22fbdfa86201e6eb9d1cdd3a3870dde5","date":1406290788,"type":3,"author":"Erik Hatcher","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DataImporter#doFullImport(DIHWriter,RequestInfo).mjava","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DataImporter#doFullImport(DIHWriter,RequestInfo).mjava","sourceNew":"  public void doFullImport(DIHWriter writer, RequestInfo requestParams) {\n    LOG.info(\"Starting Full Import\");\n    setStatus(Status.RUNNING_FULL_DUMP);\n    try {\n      DIHProperties dihPropWriter = createPropertyWriter();\n      setIndexStartTime(dihPropWriter.getCurrentTimestamp());\n      docBuilder = new DocBuilder(this, writer, dihPropWriter, requestParams);\n      checkWritablePersistFile(writer, dihPropWriter);\n      docBuilder.execute();\n      if (!requestParams.isDebug())\n        cumulativeStatistics.add(docBuilder.importStatistics);\n    } catch (Exception e) {\n      SolrException.log(LOG, \"Full Import failed\", e);\n      docBuilder.handleError(\"Full Import failed\", e);\n    } finally {\n      setStatus(Status.IDLE);\n      DocBuilder.INSTANCE.set(null);\n    }\n\n  }\n\n","sourceOld":"  public void doFullImport(DIHWriter writer, RequestInfo requestParams) {\n    LOG.info(\"Starting Full Import\");\n    setStatus(Status.RUNNING_FULL_DUMP);\n    boolean success = false;\n    try {\n      DIHProperties dihPropWriter = createPropertyWriter();\n      setIndexStartTime(dihPropWriter.getCurrentTimestamp());\n      docBuilder = new DocBuilder(this, writer, dihPropWriter, requestParams);\n      checkWritablePersistFile(writer, dihPropWriter);\n      docBuilder.execute();\n      if (!requestParams.isDebug())\n        cumulativeStatistics.add(docBuilder.importStatistics);\n      success = true;\n    } catch (Exception e) {\n      SolrException.log(LOG, \"Full Import failed\", e);\n    } finally {\n      if (!success) {\n        docBuilder.rollback();\n      }\n      \n      setStatus(Status.IDLE);\n      DocBuilder.INSTANCE.set(null);\n    }\n\n  }\n\n","bugFix":["f56da6f4f15d95f318d2d6ac2a39a9183dfecff2"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9c81f7e703d7ccca5bc78beb61253f0a8a22afd","date":1534976797,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DataImporter#doFullImport(DIHWriter,RequestInfo).mjava","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DataImporter#doFullImport(DIHWriter,RequestInfo).mjava","sourceNew":"  public void doFullImport(DIHWriter writer, RequestInfo requestParams) {\n    log.info(\"Starting Full Import\");\n    setStatus(Status.RUNNING_FULL_DUMP);\n    try {\n      DIHProperties dihPropWriter = createPropertyWriter();\n      setIndexStartTime(dihPropWriter.getCurrentTimestamp());\n      docBuilder = new DocBuilder(this, writer, dihPropWriter, requestParams);\n      checkWritablePersistFile(writer, dihPropWriter);\n      docBuilder.execute();\n      if (!requestParams.isDebug())\n        cumulativeStatistics.add(docBuilder.importStatistics);\n    } catch (Exception e) {\n      SolrException.log(log, \"Full Import failed\", e);\n      docBuilder.handleError(\"Full Import failed\", e);\n    } finally {\n      setStatus(Status.IDLE);\n      DocBuilder.INSTANCE.set(null);\n    }\n\n  }\n\n","sourceOld":"  public void doFullImport(DIHWriter writer, RequestInfo requestParams) {\n    LOG.info(\"Starting Full Import\");\n    setStatus(Status.RUNNING_FULL_DUMP);\n    try {\n      DIHProperties dihPropWriter = createPropertyWriter();\n      setIndexStartTime(dihPropWriter.getCurrentTimestamp());\n      docBuilder = new DocBuilder(this, writer, dihPropWriter, requestParams);\n      checkWritablePersistFile(writer, dihPropWriter);\n      docBuilder.execute();\n      if (!requestParams.isDebug())\n        cumulativeStatistics.add(docBuilder.importStatistics);\n    } catch (Exception e) {\n      SolrException.log(LOG, \"Full Import failed\", e);\n      docBuilder.handleError(\"Full Import failed\", e);\n    } finally {\n      setStatus(Status.IDLE);\n      DocBuilder.INSTANCE.set(null);\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b","date":1598712724,"type":4,"author":"Alexandre Rafalovitch","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DataImporter#doFullImport(DIHWriter,RequestInfo).mjava","sourceNew":null,"sourceOld":"  public void doFullImport(DIHWriter writer, RequestInfo requestParams) {\n    log.info(\"Starting Full Import\");\n    setStatus(Status.RUNNING_FULL_DUMP);\n    try {\n      DIHProperties dihPropWriter = createPropertyWriter();\n      setIndexStartTime(dihPropWriter.getCurrentTimestamp());\n      docBuilder = new DocBuilder(this, writer, dihPropWriter, requestParams);\n      checkWritablePersistFile(writer, dihPropWriter);\n      docBuilder.execute();\n      if (!requestParams.isDebug())\n        cumulativeStatistics.add(docBuilder.importStatistics);\n    } catch (Exception e) {\n      SolrException.log(log, \"Full Import failed\", e);\n      docBuilder.handleError(\"Full Import failed\", e);\n    } finally {\n      setStatus(Status.IDLE);\n      DocBuilder.INSTANCE.set(null);\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"68a568183b091ca52e6a2c0f9b615be5f3a0974a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["e9c81f7e703d7ccca5bc78beb61253f0a8a22afd"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"29d10c9c22fbdfa86201e6eb9d1cdd3a3870dde5":["68a568183b091ca52e6a2c0f9b615be5f3a0974a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b"],"e9c81f7e703d7ccca5bc78beb61253f0a8a22afd":["29d10c9c22fbdfa86201e6eb9d1cdd3a3870dde5"]},"commit2Childs":{"68a568183b091ca52e6a2c0f9b615be5f3a0974a":["29d10c9c22fbdfa86201e6eb9d1cdd3a3870dde5"],"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["68a568183b091ca52e6a2c0f9b615be5f3a0974a"],"29d10c9c22fbdfa86201e6eb9d1cdd3a3870dde5":["e9c81f7e703d7ccca5bc78beb61253f0a8a22afd"],"e9c81f7e703d7ccca5bc78beb61253f0a8a22afd":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}