{"path":"sandbox/contributions/webcrawler-LARM/src/hplb/xml/HTML#applyHacks(Tokenizer).mjava","commits":[{"id":"05d36e0b328ec96237035fbcca240e73631396e5","date":1020520725,"type":0,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"sandbox/contributions/webcrawler-LARM/src/hplb/xml/HTML#applyHacks(Tokenizer).mjava","pathOld":"/dev/null","sourceNew":"    public static void applyHacks(Tokenizer tok) {\n        for (int i = 0; i < elements.length; i++) {\n            tok.ignoreCase(elements[i]);\n        }\n        \n        EntityManager entMngr = tok.entMngr;\n        \n        // standard SGML entities\n        entMngr.defTextEntity(\"amp\", \"&\");    // ampersand\n        entMngr.defTextEntity(\"gt\", \">\");     // greater than\n        entMngr.defTextEntity(\"lt\", \"<\");     // less than\n        entMngr.defTextEntity(\"quot\", \"\\\"\");  // double quote\n\n        // PUBLIC ISO 8879-1986//    entities Added Latin 1//EN//HTML\n        entMngr.defTextEntity(\"AElig\",  \"\\u00c6\");   // capital AE diphthong (ligature)\n        entMngr.defTextEntity(\"Aacute\", \"\\u00c1\");  // capital A, acute accent\n        entMngr.defTextEntity(\"Acirc\",  \"\\u00c2\");   // capital A, circumflex accent\n        entMngr.defTextEntity(\"Agrave\", \"\\u00c0\");  // capital A, grave accent\n        entMngr.defTextEntity(\"Aring\",  \"\\u00c5\");   // capital A, ring\n        entMngr.defTextEntity(\"Atilde\", \"\\u00c3\");  // capital A, tilde\n        entMngr.defTextEntity(\"Auml\",   \"\\u00c4\");    // capital A, dieresis or umlaut mark\n        entMngr.defTextEntity(\"Ccedil\", \"\\u00c7\");  // capital C, cedilla\n        entMngr.defTextEntity(\"ETH\",    \"\\u00d0\");     // capital Eth, Icelandic\n        entMngr.defTextEntity(\"Eacute\", \"\\u00c9\");  // capital E, acute accent\n        entMngr.defTextEntity(\"Ecirc\",  \"\\u00ca\");   // capital E, circumflex accent\n        entMngr.defTextEntity(\"Egrave\", \"\\u00c8\");  // capital E, grave accent\n        entMngr.defTextEntity(\"Euml\",   \"\\u00cb\");    // capital E, dieresis or umlaut mark\n        entMngr.defTextEntity(\"Iacute\", \"\\u00cd\");  // capital I, acute accent\n        entMngr.defTextEntity(\"Icirc\",  \"\\u00ce\");   // capital I, circumflex accent\n        entMngr.defTextEntity(\"Igrave\", \"\\u00cc\");  // capital I, grave accent\n        entMngr.defTextEntity(\"Iuml\",   \"\\u00cf\");    // capital I, dieresis or umlaut mark\n        entMngr.defTextEntity(\"Ntilde\", \"\\u00d1\");  // capital N, tilde\n        entMngr.defTextEntity(\"Oacute\", \"\\u00d3\");  // capital O, acute accent\n        entMngr.defTextEntity(\"Ocirc\",  \"\\u00d4\");   // capital O, circumflex accent\n        entMngr.defTextEntity(\"Ograve\", \"\\u00d2\");  // capital O, grave accent\n        entMngr.defTextEntity(\"Oslash\", \"\\u00d8\");  // capital O, slash\n        entMngr.defTextEntity(\"Otilde\", \"\\u00d5\");  // capital O, tilde\n        entMngr.defTextEntity(\"Ouml\",   \"\\u00d6\");    // capital O, dieresis or umlaut mark\n        entMngr.defTextEntity(\"THORN\",  \"\\u00de\");   // capital THORN, Icelandic\n        entMngr.defTextEntity(\"Uacute\", \"\\u00da\");  // capital U, acute accent\n        entMngr.defTextEntity(\"Ucirc\",  \"\\u00db\");   // capital U, circumflex accent\n        entMngr.defTextEntity(\"Ugrave\", \"\\u00d9\");  // capital U, grave accent\n        entMngr.defTextEntity(\"Uuml\",   \"\\u00dc\");    // capital U, dieresis or umlaut mark\n        entMngr.defTextEntity(\"Yacute\", \"\\u00dd\");  // capital Y, acute accent\n        entMngr.defTextEntity(\"aacute\", \"\\u00e1\");  // small a, acute accent\n        entMngr.defTextEntity(\"acirc\",  \"\\u00e2\");   // small a, circumflex accent\n        entMngr.defTextEntity(\"aelig\",  \"\\u00e6\");   // small ae diphthong (ligature)\n        entMngr.defTextEntity(\"agrave\", \"\\u00e0\");  // small a, grave accent\n        entMngr.defTextEntity(\"aring\",  \"\\u00e5\");   // small a, ring\n        entMngr.defTextEntity(\"atilde\", \"\\u00e3\");  // small a, tilde\n        entMngr.defTextEntity(\"auml\",   \"\\u00e4\");    // small a, dieresis or umlaut mark\n        entMngr.defTextEntity(\"ccedil\", \"\\u00e7\");  // small c, cedilla\n        entMngr.defTextEntity(\"eacute\", \"\\u00e9\");  // small e, acute accent\n        entMngr.defTextEntity(\"ecirc\",  \"\\u00ea\");   // small e, circumflex accent\n        entMngr.defTextEntity(\"egrave\", \"\\u00e8\");  // small e, grave accent\n        entMngr.defTextEntity(\"eth\",    \"\\u00f0\");     // small eth, Icelandic\n        entMngr.defTextEntity(\"euml\",   \"\\u00eb\");    // small e, dieresis or umlaut mark\n        entMngr.defTextEntity(\"iacute\", \"\\u00ed\");  // small i, acute accent\n        entMngr.defTextEntity(\"icirc\",  \"\\u00ee\");   // small i, circumflex accent\n        entMngr.defTextEntity(\"igrave\", \"\\u00ec\");  // small i, grave accent\n        entMngr.defTextEntity(\"iuml\",   \"\\u00ef\");    // small i, dieresis or umlaut mark\n        entMngr.defTextEntity(\"ntilde\", \"\\u00f1\");  // small n, tilde\n        entMngr.defTextEntity(\"oacute\", \"\\u00f3\");  // small o, acute accent\n        entMngr.defTextEntity(\"ocirc\",  \"\\u00f4\");   // small o, circumflex accent\n        entMngr.defTextEntity(\"ograve\", \"\\u00f2\");  // small o, grave accent\n        entMngr.defTextEntity(\"oslash\", \"\\u00f8\");  // small o, slash\n        entMngr.defTextEntity(\"otilde\", \"\\u00f5\");  // small o, tilde\n        entMngr.defTextEntity(\"ouml\",   \"\\u00f6\");    // small o, dieresis or umlaut mark\n        entMngr.defTextEntity(\"szlig\",  \"\\u00df\");   // small sharp s, German (sz ligature)\n        entMngr.defTextEntity(\"thorn\",  \"\\u00fe\");   // small thorn, Icelandic\n        entMngr.defTextEntity(\"uacute\", \"\\u00fa\");  // small u, acute accent\n        entMngr.defTextEntity(\"ucirc\",  \"\\u00fb\");   // small u, circumflex accent\n        entMngr.defTextEntity(\"ugrave\", \"\\u00f9\");  // small u, grave accent\n        entMngr.defTextEntity(\"uuml\",   \"\\u00fc\");    // small u, dieresis or umlaut mark\n        entMngr.defTextEntity(\"yacute\", \"\\u00fd\");  // small y, acute accent\n        entMngr.defTextEntity(\"yuml\",   \"\\u00ff\");    // small y, dieresis or umlaut mark\n\n        // Some extra Latin 1 chars that are listed in the HTML3.2 draft (21-May-96)\n        entMngr.defTextEntity(\"nbsp\",   \"\\u00a0\");  // non breaking space\n        entMngr.defTextEntity(\"reg\",    \"\\u00ae\");   // registered sign\n        entMngr.defTextEntity(\"copy\",   \"\\u00a9\");  // copyright sign\n\n        // Additional ISO-8859/1     entities listed in rfc1866 (section 14)\n        entMngr.defTextEntity(\"iexcl\",  \"\\u00a1\");\n        entMngr.defTextEntity(\"cent\",   \"\\u00a2\");\n        entMngr.defTextEntity(\"pound\",  \"\\u00a3\");\n        entMngr.defTextEntity(\"curren\", \"\\u00a4\");\n        entMngr.defTextEntity(\"yen\",    \"\\u00a5\");\n        entMngr.defTextEntity(\"brvbar\", \"\\u00a6\");\n        entMngr.defTextEntity(\"sect\",   \"\\u00a7\");\n        entMngr.defTextEntity(\"uml\",    \"\\u00a8\");\n        entMngr.defTextEntity(\"ordf\",   \"\\u00aa\");\n        entMngr.defTextEntity(\"laquo\",  \"\\u00ab\");\n        entMngr.defTextEntity(\"not\",    \"\\u00ac\");\n        entMngr.defTextEntity(\"shy\",    \"\\u00ad\");  // soft hyphen\n        entMngr.defTextEntity(\"macr\",   \"\\u00af\");\n        entMngr.defTextEntity(\"deg\",    \"\\u00b0\");\n        entMngr.defTextEntity(\"plusmn\", \"\\u00b1\");\n        entMngr.defTextEntity(\"sup1\",   \"\\u00b9\");\n        entMngr.defTextEntity(\"sup2\",   \"\\u00b2\");\n        entMngr.defTextEntity(\"sup3\",   \"\\u00b3\");\n        entMngr.defTextEntity(\"acute\",  \"\\u00b4\");\n        entMngr.defTextEntity(\"micro\",  \"\\u00b5\");\n        entMngr.defTextEntity(\"para\",   \"\\u00b6\");\n        entMngr.defTextEntity(\"middot\", \"\\u00b7\");\n        entMngr.defTextEntity(\"cedil\",  \"\\u00b8\");\n        entMngr.defTextEntity(\"ordm\",   \"\\u00ba\");\n        entMngr.defTextEntity(\"raquo\",  \"\\u00bb\");\n        entMngr.defTextEntity(\"frac14\", \"\\u00bc\");\n        entMngr.defTextEntity(\"frac12\", \"\\u00bd\");\n        entMngr.defTextEntity(\"frac34\", \"\\u00be\");\n        entMngr.defTextEntity(\"iquest\", \"\\u00bf\");\n        entMngr.defTextEntity(\"times\",  \"\\u00d7\");\n        entMngr.defTextEntity(\"divide\", \"\\u00f7\");\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"12c7634bf3bb6da687c9b32ca310e7fb8fac8e1e","date":1022957716,"type":4,"author":"cmarschner","isMerge":false,"pathNew":"/dev/null","pathOld":"sandbox/contributions/webcrawler-LARM/src/hplb/xml/HTML#applyHacks(Tokenizer).mjava","sourceNew":null,"sourceOld":"    public static void applyHacks(Tokenizer tok) {\n        for (int i = 0; i < elements.length; i++) {\n            tok.ignoreCase(elements[i]);\n        }\n        \n        EntityManager entMngr = tok.entMngr;\n        \n        // standard SGML entities\n        entMngr.defTextEntity(\"amp\", \"&\");    // ampersand\n        entMngr.defTextEntity(\"gt\", \">\");     // greater than\n        entMngr.defTextEntity(\"lt\", \"<\");     // less than\n        entMngr.defTextEntity(\"quot\", \"\\\"\");  // double quote\n\n        // PUBLIC ISO 8879-1986//    entities Added Latin 1//EN//HTML\n        entMngr.defTextEntity(\"AElig\",  \"\\u00c6\");   // capital AE diphthong (ligature)\n        entMngr.defTextEntity(\"Aacute\", \"\\u00c1\");  // capital A, acute accent\n        entMngr.defTextEntity(\"Acirc\",  \"\\u00c2\");   // capital A, circumflex accent\n        entMngr.defTextEntity(\"Agrave\", \"\\u00c0\");  // capital A, grave accent\n        entMngr.defTextEntity(\"Aring\",  \"\\u00c5\");   // capital A, ring\n        entMngr.defTextEntity(\"Atilde\", \"\\u00c3\");  // capital A, tilde\n        entMngr.defTextEntity(\"Auml\",   \"\\u00c4\");    // capital A, dieresis or umlaut mark\n        entMngr.defTextEntity(\"Ccedil\", \"\\u00c7\");  // capital C, cedilla\n        entMngr.defTextEntity(\"ETH\",    \"\\u00d0\");     // capital Eth, Icelandic\n        entMngr.defTextEntity(\"Eacute\", \"\\u00c9\");  // capital E, acute accent\n        entMngr.defTextEntity(\"Ecirc\",  \"\\u00ca\");   // capital E, circumflex accent\n        entMngr.defTextEntity(\"Egrave\", \"\\u00c8\");  // capital E, grave accent\n        entMngr.defTextEntity(\"Euml\",   \"\\u00cb\");    // capital E, dieresis or umlaut mark\n        entMngr.defTextEntity(\"Iacute\", \"\\u00cd\");  // capital I, acute accent\n        entMngr.defTextEntity(\"Icirc\",  \"\\u00ce\");   // capital I, circumflex accent\n        entMngr.defTextEntity(\"Igrave\", \"\\u00cc\");  // capital I, grave accent\n        entMngr.defTextEntity(\"Iuml\",   \"\\u00cf\");    // capital I, dieresis or umlaut mark\n        entMngr.defTextEntity(\"Ntilde\", \"\\u00d1\");  // capital N, tilde\n        entMngr.defTextEntity(\"Oacute\", \"\\u00d3\");  // capital O, acute accent\n        entMngr.defTextEntity(\"Ocirc\",  \"\\u00d4\");   // capital O, circumflex accent\n        entMngr.defTextEntity(\"Ograve\", \"\\u00d2\");  // capital O, grave accent\n        entMngr.defTextEntity(\"Oslash\", \"\\u00d8\");  // capital O, slash\n        entMngr.defTextEntity(\"Otilde\", \"\\u00d5\");  // capital O, tilde\n        entMngr.defTextEntity(\"Ouml\",   \"\\u00d6\");    // capital O, dieresis or umlaut mark\n        entMngr.defTextEntity(\"THORN\",  \"\\u00de\");   // capital THORN, Icelandic\n        entMngr.defTextEntity(\"Uacute\", \"\\u00da\");  // capital U, acute accent\n        entMngr.defTextEntity(\"Ucirc\",  \"\\u00db\");   // capital U, circumflex accent\n        entMngr.defTextEntity(\"Ugrave\", \"\\u00d9\");  // capital U, grave accent\n        entMngr.defTextEntity(\"Uuml\",   \"\\u00dc\");    // capital U, dieresis or umlaut mark\n        entMngr.defTextEntity(\"Yacute\", \"\\u00dd\");  // capital Y, acute accent\n        entMngr.defTextEntity(\"aacute\", \"\\u00e1\");  // small a, acute accent\n        entMngr.defTextEntity(\"acirc\",  \"\\u00e2\");   // small a, circumflex accent\n        entMngr.defTextEntity(\"aelig\",  \"\\u00e6\");   // small ae diphthong (ligature)\n        entMngr.defTextEntity(\"agrave\", \"\\u00e0\");  // small a, grave accent\n        entMngr.defTextEntity(\"aring\",  \"\\u00e5\");   // small a, ring\n        entMngr.defTextEntity(\"atilde\", \"\\u00e3\");  // small a, tilde\n        entMngr.defTextEntity(\"auml\",   \"\\u00e4\");    // small a, dieresis or umlaut mark\n        entMngr.defTextEntity(\"ccedil\", \"\\u00e7\");  // small c, cedilla\n        entMngr.defTextEntity(\"eacute\", \"\\u00e9\");  // small e, acute accent\n        entMngr.defTextEntity(\"ecirc\",  \"\\u00ea\");   // small e, circumflex accent\n        entMngr.defTextEntity(\"egrave\", \"\\u00e8\");  // small e, grave accent\n        entMngr.defTextEntity(\"eth\",    \"\\u00f0\");     // small eth, Icelandic\n        entMngr.defTextEntity(\"euml\",   \"\\u00eb\");    // small e, dieresis or umlaut mark\n        entMngr.defTextEntity(\"iacute\", \"\\u00ed\");  // small i, acute accent\n        entMngr.defTextEntity(\"icirc\",  \"\\u00ee\");   // small i, circumflex accent\n        entMngr.defTextEntity(\"igrave\", \"\\u00ec\");  // small i, grave accent\n        entMngr.defTextEntity(\"iuml\",   \"\\u00ef\");    // small i, dieresis or umlaut mark\n        entMngr.defTextEntity(\"ntilde\", \"\\u00f1\");  // small n, tilde\n        entMngr.defTextEntity(\"oacute\", \"\\u00f3\");  // small o, acute accent\n        entMngr.defTextEntity(\"ocirc\",  \"\\u00f4\");   // small o, circumflex accent\n        entMngr.defTextEntity(\"ograve\", \"\\u00f2\");  // small o, grave accent\n        entMngr.defTextEntity(\"oslash\", \"\\u00f8\");  // small o, slash\n        entMngr.defTextEntity(\"otilde\", \"\\u00f5\");  // small o, tilde\n        entMngr.defTextEntity(\"ouml\",   \"\\u00f6\");    // small o, dieresis or umlaut mark\n        entMngr.defTextEntity(\"szlig\",  \"\\u00df\");   // small sharp s, German (sz ligature)\n        entMngr.defTextEntity(\"thorn\",  \"\\u00fe\");   // small thorn, Icelandic\n        entMngr.defTextEntity(\"uacute\", \"\\u00fa\");  // small u, acute accent\n        entMngr.defTextEntity(\"ucirc\",  \"\\u00fb\");   // small u, circumflex accent\n        entMngr.defTextEntity(\"ugrave\", \"\\u00f9\");  // small u, grave accent\n        entMngr.defTextEntity(\"uuml\",   \"\\u00fc\");    // small u, dieresis or umlaut mark\n        entMngr.defTextEntity(\"yacute\", \"\\u00fd\");  // small y, acute accent\n        entMngr.defTextEntity(\"yuml\",   \"\\u00ff\");    // small y, dieresis or umlaut mark\n\n        // Some extra Latin 1 chars that are listed in the HTML3.2 draft (21-May-96)\n        entMngr.defTextEntity(\"nbsp\",   \"\\u00a0\");  // non breaking space\n        entMngr.defTextEntity(\"reg\",    \"\\u00ae\");   // registered sign\n        entMngr.defTextEntity(\"copy\",   \"\\u00a9\");  // copyright sign\n\n        // Additional ISO-8859/1     entities listed in rfc1866 (section 14)\n        entMngr.defTextEntity(\"iexcl\",  \"\\u00a1\");\n        entMngr.defTextEntity(\"cent\",   \"\\u00a2\");\n        entMngr.defTextEntity(\"pound\",  \"\\u00a3\");\n        entMngr.defTextEntity(\"curren\", \"\\u00a4\");\n        entMngr.defTextEntity(\"yen\",    \"\\u00a5\");\n        entMngr.defTextEntity(\"brvbar\", \"\\u00a6\");\n        entMngr.defTextEntity(\"sect\",   \"\\u00a7\");\n        entMngr.defTextEntity(\"uml\",    \"\\u00a8\");\n        entMngr.defTextEntity(\"ordf\",   \"\\u00aa\");\n        entMngr.defTextEntity(\"laquo\",  \"\\u00ab\");\n        entMngr.defTextEntity(\"not\",    \"\\u00ac\");\n        entMngr.defTextEntity(\"shy\",    \"\\u00ad\");  // soft hyphen\n        entMngr.defTextEntity(\"macr\",   \"\\u00af\");\n        entMngr.defTextEntity(\"deg\",    \"\\u00b0\");\n        entMngr.defTextEntity(\"plusmn\", \"\\u00b1\");\n        entMngr.defTextEntity(\"sup1\",   \"\\u00b9\");\n        entMngr.defTextEntity(\"sup2\",   \"\\u00b2\");\n        entMngr.defTextEntity(\"sup3\",   \"\\u00b3\");\n        entMngr.defTextEntity(\"acute\",  \"\\u00b4\");\n        entMngr.defTextEntity(\"micro\",  \"\\u00b5\");\n        entMngr.defTextEntity(\"para\",   \"\\u00b6\");\n        entMngr.defTextEntity(\"middot\", \"\\u00b7\");\n        entMngr.defTextEntity(\"cedil\",  \"\\u00b8\");\n        entMngr.defTextEntity(\"ordm\",   \"\\u00ba\");\n        entMngr.defTextEntity(\"raquo\",  \"\\u00bb\");\n        entMngr.defTextEntity(\"frac14\", \"\\u00bc\");\n        entMngr.defTextEntity(\"frac12\", \"\\u00bd\");\n        entMngr.defTextEntity(\"frac34\", \"\\u00be\");\n        entMngr.defTextEntity(\"iquest\", \"\\u00bf\");\n        entMngr.defTextEntity(\"times\",  \"\\u00d7\");\n        entMngr.defTextEntity(\"divide\", \"\\u00f7\");\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"12c7634bf3bb6da687c9b32ca310e7fb8fac8e1e":["05d36e0b328ec96237035fbcca240e73631396e5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"05d36e0b328ec96237035fbcca240e73631396e5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["12c7634bf3bb6da687c9b32ca310e7fb8fac8e1e"]},"commit2Childs":{"12c7634bf3bb6da687c9b32ca310e7fb8fac8e1e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["05d36e0b328ec96237035fbcca240e73631396e5"],"05d36e0b328ec96237035fbcca240e73631396e5":["12c7634bf3bb6da687c9b32ca310e7fb8fac8e1e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}