{"path":"lucene/analysis/common/src/java/org/apache/lucene/analysis/cjk/CJKBigramFilter#hasBufferedUnigram().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/cjk/CJKBigramFilter#hasBufferedUnigram().mjava","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/cjk/CJKBigramFilter#hasBufferedUnigram().mjava","sourceNew":"  /**\n   * True if we have a single codepoint sitting in our buffer, where its future\n   * (whether it is emitted as unigram or forms a bigram) depends upon not-yet-seen\n   * inputs.\n   */\n  private boolean hasBufferedUnigram() {\n    return bufferLen == 1 && index == 0;\n  }\n\n","sourceOld":"  /**\n   * True if we have a single codepoint sitting in our buffer, where its future\n   * (whether it is emitted as unigram or forms a bigram) depends upon not-yet-seen\n   * inputs.\n   */\n  private boolean hasBufferedUnigram() {\n    return bufferLen == 1 && index == 0;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1548959d8ee1230b6fe5bc9da6115d9fc4019bc9","date":1344119834,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/cjk/CJKBigramFilter#hasBufferedUnigram().mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/cjk/CJKBigramFilter#hasBufferedUnigram().mjava","sourceNew":"  /**\n   * True if we have a single codepoint sitting in our buffer, where its future\n   * (whether it is emitted as unigram or forms a bigram) depends upon not-yet-seen\n   * inputs.\n   */\n  private boolean hasBufferedUnigram() {\n    if (outputUnigrams) {\n      // when outputting unigrams always\n      return bufferLen - index == 1;\n    } else {\n      // otherwise its only when we have a lone CJK character\n      return bufferLen == 1 && index == 0;\n    }\n  }\n\n","sourceOld":"  /**\n   * True if we have a single codepoint sitting in our buffer, where its future\n   * (whether it is emitted as unigram or forms a bigram) depends upon not-yet-seen\n   * inputs.\n   */\n  private boolean hasBufferedUnigram() {\n    return bufferLen == 1 && index == 0;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d6f074e73200c07d54f242d3880a8da5a35ff97b","date":1344507653,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/cjk/CJKBigramFilter#hasBufferedUnigram().mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/cjk/CJKBigramFilter#hasBufferedUnigram().mjava","sourceNew":"  /**\n   * True if we have a single codepoint sitting in our buffer, where its future\n   * (whether it is emitted as unigram or forms a bigram) depends upon not-yet-seen\n   * inputs.\n   */\n  private boolean hasBufferedUnigram() {\n    if (outputUnigrams) {\n      // when outputting unigrams always\n      return bufferLen - index == 1;\n    } else {\n      // otherwise its only when we have a lone CJK character\n      return bufferLen == 1 && index == 0;\n    }\n  }\n\n","sourceOld":"  /**\n   * True if we have a single codepoint sitting in our buffer, where its future\n   * (whether it is emitted as unigram or forms a bigram) depends upon not-yet-seen\n   * inputs.\n   */\n  private boolean hasBufferedUnigram() {\n    return bufferLen == 1 && index == 0;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7869f64c874ebf7f317d22c00baf2b6857797a6","date":1344856617,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/cjk/CJKBigramFilter#hasBufferedUnigram().mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/cjk/CJKBigramFilter#hasBufferedUnigram().mjava","sourceNew":"  /**\n   * True if we have a single codepoint sitting in our buffer, where its future\n   * (whether it is emitted as unigram or forms a bigram) depends upon not-yet-seen\n   * inputs.\n   */\n  private boolean hasBufferedUnigram() {\n    if (outputUnigrams) {\n      // when outputting unigrams always\n      return bufferLen - index == 1;\n    } else {\n      // otherwise its only when we have a lone CJK character\n      return bufferLen == 1 && index == 0;\n    }\n  }\n\n","sourceOld":"  /**\n   * True if we have a single codepoint sitting in our buffer, where its future\n   * (whether it is emitted as unigram or forms a bigram) depends upon not-yet-seen\n   * inputs.\n   */\n  private boolean hasBufferedUnigram() {\n    return bufferLen == 1 && index == 0;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1","date":1419400138,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/apache/lucene/analysis/cjk/CJKBigramFilter#hasBufferedUnigram().mjava","pathOld":"lucene/analysis/common/src/java/org/apache/lucene/analysis/cjk/CJKBigramFilter#hasBufferedUnigram().mjava","sourceNew":"  /**\n   * True if we have a single codepoint sitting in our buffer, where its future\n   * (whether it is emitted as unigram or forms a bigram) depends upon not-yet-seen\n   * inputs.\n   */\n  private boolean hasBufferedUnigram() {\n    if (outputUnigrams) {\n      // when outputting unigrams always\n      return bufferLen - index == 1;\n    } else {\n      // otherwise it's only when we have a lone CJK character\n      return bufferLen == 1 && index == 0;\n    }\n  }\n\n","sourceOld":"  /**\n   * True if we have a single codepoint sitting in our buffer, where its future\n   * (whether it is emitted as unigram or forms a bigram) depends upon not-yet-seen\n   * inputs.\n   */\n  private boolean hasBufferedUnigram() {\n    if (outputUnigrams) {\n      // when outputting unigrams always\n      return bufferLen - index == 1;\n    } else {\n      // otherwise its only when we have a lone CJK character\n      return bufferLen == 1 && index == 0;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1":["1548959d8ee1230b6fe5bc9da6115d9fc4019bc9"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c7869f64c874ebf7f317d22c00baf2b6857797a6":["b89678825b68eccaf09e6ab71675fc0b0af1e099","1548959d8ee1230b6fe5bc9da6115d9fc4019bc9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d6f074e73200c07d54f242d3880a8da5a35ff97b":["b89678825b68eccaf09e6ab71675fc0b0af1e099","1548959d8ee1230b6fe5bc9da6115d9fc4019bc9"],"1548959d8ee1230b6fe5bc9da6115d9fc4019bc9":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1"]},"commit2Childs":{"8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["c7869f64c874ebf7f317d22c00baf2b6857797a6","d6f074e73200c07d54f242d3880a8da5a35ff97b","1548959d8ee1230b6fe5bc9da6115d9fc4019bc9"],"c7869f64c874ebf7f317d22c00baf2b6857797a6":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"d6f074e73200c07d54f242d3880a8da5a35ff97b":[],"1548959d8ee1230b6fe5bc9da6115d9fc4019bc9":["8aa2bb13f56a3ad540fd2dc5e882e1ed4bf799d1","c7869f64c874ebf7f317d22c00baf2b6857797a6","d6f074e73200c07d54f242d3880a8da5a35ff97b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c7869f64c874ebf7f317d22c00baf2b6857797a6","d6f074e73200c07d54f242d3880a8da5a35ff97b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}