{"path":"lucene/join/src/java/org/apache/lucene/search/join/TermsIncludingScoreQuery.SVInnerScorer#nextDocOutOfOrder().mjava","commits":[{"id":"3b0e8c39ca08b5a02de6edcd33d6f3b90b865173","date":1365631993,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/TermsIncludingScoreQuery.SVInnerScorer#nextDocOutOfOrder().mjava","pathOld":"/dev/null","sourceNew":"    int nextDocOutOfOrder() throws IOException {\n      if (docsEnum != null) {\n        int docId = docsEnum.nextDoc();\n        if (docId == DocIdSetIterator.NO_MORE_DOCS) {\n          docsEnum = null;\n        } else {\n          return docId;\n        }\n      }\n\n      do {\n        if (upto == terms.size()) {\n          return DocIdSetIterator.NO_MORE_DOCS;\n        }\n\n        scoreUpto = upto;\n        if (termsEnum.seekExact(terms.get(ords[upto++], spare), true)) {\n          docsEnum = reuse = termsEnum.docs(acceptDocs, reuse, DocsEnum.FLAG_NONE);\n        }\n      } while (docsEnum == null);\n\n      return docsEnum.nextDoc();\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["c9a8c786cabf9991ff5341216b0013ec2811ac76"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"af527d067afb6ca5bd58afc7b9a5fbc0f80979af","date":1366034882,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/TermsIncludingScoreQuery.SVInnerScorer#nextDocOutOfOrder().mjava","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/TermsIncludingScoreQuery.SVInnerScorer#nextDocOutOfOrder().mjava","sourceNew":"    int nextDocOutOfOrder() throws IOException {\n      if (docsEnum != null) {\n        int docId = docsEnum.nextDoc();\n        if (docId == DocIdSetIterator.NO_MORE_DOCS) {\n          docsEnum = null;\n        } else {\n          return doc = docId;\n        }\n      }\n\n      do {\n        if (upto == terms.size()) {\n          return doc = DocIdSetIterator.NO_MORE_DOCS;\n        }\n\n        scoreUpto = upto;\n        if (termsEnum.seekExact(terms.get(ords[upto++], spare), true)) {\n          docsEnum = reuse = termsEnum.docs(acceptDocs, reuse, DocsEnum.FLAG_NONE);\n        }\n      } while (docsEnum == null);\n\n      return doc = docsEnum.nextDoc();\n    }\n\n","sourceOld":"    int nextDocOutOfOrder() throws IOException {\n      if (docsEnum != null) {\n        int docId = docsEnum.nextDoc();\n        if (docId == DocIdSetIterator.NO_MORE_DOCS) {\n          docsEnum = null;\n        } else {\n          return docId;\n        }\n      }\n\n      do {\n        if (upto == terms.size()) {\n          return DocIdSetIterator.NO_MORE_DOCS;\n        }\n\n        scoreUpto = upto;\n        if (termsEnum.seekExact(terms.get(ords[upto++], spare), true)) {\n          docsEnum = reuse = termsEnum.docs(acceptDocs, reuse, DocsEnum.FLAG_NONE);\n        }\n      } while (docsEnum == null);\n\n      return docsEnum.nextDoc();\n    }\n\n","bugFix":null,"bugIntro":["c9a8c786cabf9991ff5341216b0013ec2811ac76"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c9a8c786cabf9991ff5341216b0013ec2811ac76","date":1373720828,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/TermsIncludingScoreQuery.SVInnerScorer#nextDocOutOfOrder().mjava","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/TermsIncludingScoreQuery.SVInnerScorer#nextDocOutOfOrder().mjava","sourceNew":"    int nextDocOutOfOrder() throws IOException {\n      while (true) {\n        if (docsEnum != null) {\n          int docId = docsEnumNextDoc();\n          if (docId == DocIdSetIterator.NO_MORE_DOCS) {\n            docsEnum = null;\n          } else {\n            return doc = docId;\n          }\n        }\n\n        if (upto == terms.size()) {\n          return doc = DocIdSetIterator.NO_MORE_DOCS;\n        }\n\n        scoreUpto = upto;\n        if (termsEnum.seekExact(terms.get(ords[upto++], spare), true)) {\n          docsEnum = reuse = termsEnum.docs(acceptDocs, reuse, DocsEnum.FLAG_NONE);\n        }\n      }\n    }\n\n","sourceOld":"    int nextDocOutOfOrder() throws IOException {\n      if (docsEnum != null) {\n        int docId = docsEnum.nextDoc();\n        if (docId == DocIdSetIterator.NO_MORE_DOCS) {\n          docsEnum = null;\n        } else {\n          return doc = docId;\n        }\n      }\n\n      do {\n        if (upto == terms.size()) {\n          return doc = DocIdSetIterator.NO_MORE_DOCS;\n        }\n\n        scoreUpto = upto;\n        if (termsEnum.seekExact(terms.get(ords[upto++], spare), true)) {\n          docsEnum = reuse = termsEnum.docs(acceptDocs, reuse, DocsEnum.FLAG_NONE);\n        }\n      } while (docsEnum == null);\n\n      return doc = docsEnum.nextDoc();\n    }\n\n","bugFix":["3b0e8c39ca08b5a02de6edcd33d6f3b90b865173","af527d067afb6ca5bd58afc7b9a5fbc0f80979af"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"37a0f60745e53927c4c876cfe5b5a58170f0646c","date":1373994005,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/TermsIncludingScoreQuery.SVInnerScorer#nextDocOutOfOrder().mjava","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/TermsIncludingScoreQuery.SVInnerScorer#nextDocOutOfOrder().mjava","sourceNew":"    int nextDocOutOfOrder() throws IOException {\n      while (true) {\n        if (docsEnum != null) {\n          int docId = docsEnumNextDoc();\n          if (docId == DocIdSetIterator.NO_MORE_DOCS) {\n            docsEnum = null;\n          } else {\n            return doc = docId;\n          }\n        }\n\n        if (upto == terms.size()) {\n          return doc = DocIdSetIterator.NO_MORE_DOCS;\n        }\n\n        scoreUpto = upto;\n        if (termsEnum.seekExact(terms.get(ords[upto++], spare), true)) {\n          docsEnum = reuse = termsEnum.docs(acceptDocs, reuse, DocsEnum.FLAG_NONE);\n        }\n      }\n    }\n\n","sourceOld":"    int nextDocOutOfOrder() throws IOException {\n      if (docsEnum != null) {\n        int docId = docsEnum.nextDoc();\n        if (docId == DocIdSetIterator.NO_MORE_DOCS) {\n          docsEnum = null;\n        } else {\n          return doc = docId;\n        }\n      }\n\n      do {\n        if (upto == terms.size()) {\n          return doc = DocIdSetIterator.NO_MORE_DOCS;\n        }\n\n        scoreUpto = upto;\n        if (termsEnum.seekExact(terms.get(ords[upto++], spare), true)) {\n          docsEnum = reuse = termsEnum.docs(acceptDocs, reuse, DocsEnum.FLAG_NONE);\n        }\n      } while (docsEnum == null);\n\n      return doc = docsEnum.nextDoc();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"eee5f2a24465d2c9a5f86ab84b7c35041a30fda8","date":1373996650,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/TermsIncludingScoreQuery.SVInnerScorer#nextDocOutOfOrder().mjava","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/TermsIncludingScoreQuery.SVInnerScorer#nextDocOutOfOrder().mjava","sourceNew":"    int nextDocOutOfOrder() throws IOException {\n      while (true) {\n        if (docsEnum != null) {\n          int docId = docsEnumNextDoc();\n          if (docId == DocIdSetIterator.NO_MORE_DOCS) {\n            docsEnum = null;\n          } else {\n            return doc = docId;\n          }\n        }\n\n        if (upto == terms.size()) {\n          return doc = DocIdSetIterator.NO_MORE_DOCS;\n        }\n\n        scoreUpto = upto;\n        if (termsEnum.seekExact(terms.get(ords[upto++], spare))) {\n          docsEnum = reuse = termsEnum.docs(acceptDocs, reuse, DocsEnum.FLAG_NONE);\n        }\n      }\n    }\n\n","sourceOld":"    int nextDocOutOfOrder() throws IOException {\n      while (true) {\n        if (docsEnum != null) {\n          int docId = docsEnumNextDoc();\n          if (docId == DocIdSetIterator.NO_MORE_DOCS) {\n            docsEnum = null;\n          } else {\n            return doc = docId;\n          }\n        }\n\n        if (upto == terms.size()) {\n          return doc = DocIdSetIterator.NO_MORE_DOCS;\n        }\n\n        scoreUpto = upto;\n        if (termsEnum.seekExact(terms.get(ords[upto++], spare), true)) {\n          docsEnum = reuse = termsEnum.docs(acceptDocs, reuse, DocsEnum.FLAG_NONE);\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","date":1376366778,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/TermsIncludingScoreQuery.SVInnerScorer#nextDocOutOfOrder().mjava","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/TermsIncludingScoreQuery.SVInnerScorer#nextDocOutOfOrder().mjava","sourceNew":"    int nextDocOutOfOrder() throws IOException {\n      while (true) {\n        if (docsEnum != null) {\n          int docId = docsEnumNextDoc();\n          if (docId == DocIdSetIterator.NO_MORE_DOCS) {\n            docsEnum = null;\n          } else {\n            return doc = docId;\n          }\n        }\n\n        if (upto == terms.size()) {\n          return doc = DocIdSetIterator.NO_MORE_DOCS;\n        }\n\n        scoreUpto = upto;\n        if (termsEnum.seekExact(terms.get(ords[upto++], spare))) {\n          docsEnum = reuse = termsEnum.docs(acceptDocs, reuse, DocsEnum.FLAG_NONE);\n        }\n      }\n    }\n\n","sourceOld":"    int nextDocOutOfOrder() throws IOException {\n      while (true) {\n        if (docsEnum != null) {\n          int docId = docsEnumNextDoc();\n          if (docId == DocIdSetIterator.NO_MORE_DOCS) {\n            docsEnum = null;\n          } else {\n            return doc = docId;\n          }\n        }\n\n        if (upto == terms.size()) {\n          return doc = DocIdSetIterator.NO_MORE_DOCS;\n        }\n\n        scoreUpto = upto;\n        if (termsEnum.seekExact(terms.get(ords[upto++], spare), true)) {\n          docsEnum = reuse = termsEnum.docs(acceptDocs, reuse, DocsEnum.FLAG_NONE);\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f582f18c13d4852b01d4fe0a0196432c5c6f2b7f","date":1421314520,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/TermsIncludingScoreQuery.SVInnerScorer#nextDocOutOfOrder().mjava","sourceNew":null,"sourceOld":"    int nextDocOutOfOrder() throws IOException {\n      while (true) {\n        if (docsEnum != null) {\n          int docId = docsEnumNextDoc();\n          if (docId == DocIdSetIterator.NO_MORE_DOCS) {\n            docsEnum = null;\n          } else {\n            return doc = docId;\n          }\n        }\n\n        if (upto == terms.size()) {\n          return doc = DocIdSetIterator.NO_MORE_DOCS;\n        }\n\n        scoreUpto = upto;\n        if (termsEnum.seekExact(terms.get(ords[upto++], spare))) {\n          docsEnum = reuse = termsEnum.docs(acceptDocs, reuse, DocsEnum.FLAG_NONE);\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"af527d067afb6ca5bd58afc7b9a5fbc0f80979af":["3b0e8c39ca08b5a02de6edcd33d6f3b90b865173"],"c9a8c786cabf9991ff5341216b0013ec2811ac76":["af527d067afb6ca5bd58afc7b9a5fbc0f80979af"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":["af527d067afb6ca5bd58afc7b9a5fbc0f80979af","c9a8c786cabf9991ff5341216b0013ec2811ac76"],"f582f18c13d4852b01d4fe0a0196432c5c6f2b7f":["eee5f2a24465d2c9a5f86ab84b7c35041a30fda8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":["37a0f60745e53927c4c876cfe5b5a58170f0646c"],"3b0e8c39ca08b5a02de6edcd33d6f3b90b865173":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"eee5f2a24465d2c9a5f86ab84b7c35041a30fda8":["c9a8c786cabf9991ff5341216b0013ec2811ac76"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f582f18c13d4852b01d4fe0a0196432c5c6f2b7f"]},"commit2Childs":{"af527d067afb6ca5bd58afc7b9a5fbc0f80979af":["c9a8c786cabf9991ff5341216b0013ec2811ac76","37a0f60745e53927c4c876cfe5b5a58170f0646c"],"c9a8c786cabf9991ff5341216b0013ec2811ac76":["37a0f60745e53927c4c876cfe5b5a58170f0646c","eee5f2a24465d2c9a5f86ab84b7c35041a30fda8"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee"],"f582f18c13d4852b01d4fe0a0196432c5c6f2b7f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3b0e8c39ca08b5a02de6edcd33d6f3b90b865173"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":[],"3b0e8c39ca08b5a02de6edcd33d6f3b90b865173":["af527d067afb6ca5bd58afc7b9a5fbc0f80979af"],"eee5f2a24465d2c9a5f86ab84b7c35041a30fda8":["f582f18c13d4852b01d4fe0a0196432c5c6f2b7f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}