{"path":"lucene/suggest/src/java/org/apache/lucene/search/suggest/tst/TSTLookup#build(TermFreqPayloadIterator).mjava","commits":[{"id":"ada2f7352a7f964fe49bccd13227c4ec38563d39","date":1381659982,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/tst/TSTLookup#build(TermFreqPayloadIterator).mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/tst/TSTLookup#build(TermFreqIterator).mjava","sourceNew":"  @Override\n  public void build(TermFreqPayloadIterator tfit) throws IOException {\n    if (tfit.hasPayloads()) {\n      throw new IllegalArgumentException(\"this suggester doesn't support payloads\");\n    }\n    root = new TernaryTreeNode();\n\n    // make sure it's sorted and the comparator uses UTF16 sort order\n    tfit = new SortedTermFreqPayloadIteratorWrapper(tfit, BytesRef.getUTF8SortedAsUTF16Comparator());\n\n    ArrayList<String> tokens = new ArrayList<String>();\n    ArrayList<Number> vals = new ArrayList<Number>();\n    BytesRef spare;\n    CharsRef charsSpare = new CharsRef();\n    while ((spare = tfit.next()) != null) {\n      charsSpare.grow(spare.length);\n      UnicodeUtil.UTF8toUTF16(spare.bytes, spare.offset, spare.length, charsSpare);\n      tokens.add(charsSpare.toString());\n      vals.add(Long.valueOf(tfit.weight()));\n    }\n    autocomplete.balancedTree(tokens.toArray(), vals.toArray(), 0, tokens.size() - 1, root);\n  }\n\n","sourceOld":"  @Override\n  public void build(TermFreqIterator tfit) throws IOException {\n    if (tfit instanceof TermFreqPayloadIterator) {\n      throw new IllegalArgumentException(\"this suggester doesn't support payloads\");\n    }\n    root = new TernaryTreeNode();\n\n    // make sure it's sorted and the comparator uses UTF16 sort order\n    tfit = new SortedTermFreqIteratorWrapper(tfit, BytesRef.getUTF8SortedAsUTF16Comparator());\n\n    ArrayList<String> tokens = new ArrayList<String>();\n    ArrayList<Number> vals = new ArrayList<Number>();\n    BytesRef spare;\n    CharsRef charsSpare = new CharsRef();\n    while ((spare = tfit.next()) != null) {\n      charsSpare.grow(spare.length);\n      UnicodeUtil.UTF8toUTF16(spare.bytes, spare.offset, spare.length, charsSpare);\n      tokens.add(charsSpare.toString());\n      vals.add(Long.valueOf(tfit.weight()));\n    }\n    autocomplete.balancedTree(tokens.toArray(), vals.toArray(), 0, tokens.size() - 1, root);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"41aee74b5f91a096e3fd950f4a336bc763f0e7a7","date":1381772070,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/tst/TSTLookup#build(InputIterator).mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/tst/TSTLookup#build(TermFreqPayloadIterator).mjava","sourceNew":"  @Override\n  public void build(InputIterator tfit) throws IOException {\n    if (tfit.hasPayloads()) {\n      throw new IllegalArgumentException(\"this suggester doesn't support payloads\");\n    }\n    root = new TernaryTreeNode();\n\n    // make sure it's sorted and the comparator uses UTF16 sort order\n    tfit = new SortedInputIterator(tfit, BytesRef.getUTF8SortedAsUTF16Comparator());\n\n    ArrayList<String> tokens = new ArrayList<String>();\n    ArrayList<Number> vals = new ArrayList<Number>();\n    BytesRef spare;\n    CharsRef charsSpare = new CharsRef();\n    while ((spare = tfit.next()) != null) {\n      charsSpare.grow(spare.length);\n      UnicodeUtil.UTF8toUTF16(spare.bytes, spare.offset, spare.length, charsSpare);\n      tokens.add(charsSpare.toString());\n      vals.add(Long.valueOf(tfit.weight()));\n    }\n    autocomplete.balancedTree(tokens.toArray(), vals.toArray(), 0, tokens.size() - 1, root);\n  }\n\n","sourceOld":"  @Override\n  public void build(TermFreqPayloadIterator tfit) throws IOException {\n    if (tfit.hasPayloads()) {\n      throw new IllegalArgumentException(\"this suggester doesn't support payloads\");\n    }\n    root = new TernaryTreeNode();\n\n    // make sure it's sorted and the comparator uses UTF16 sort order\n    tfit = new SortedTermFreqPayloadIteratorWrapper(tfit, BytesRef.getUTF8SortedAsUTF16Comparator());\n\n    ArrayList<String> tokens = new ArrayList<String>();\n    ArrayList<Number> vals = new ArrayList<Number>();\n    BytesRef spare;\n    CharsRef charsSpare = new CharsRef();\n    while ((spare = tfit.next()) != null) {\n      charsSpare.grow(spare.length);\n      UnicodeUtil.UTF8toUTF16(spare.bytes, spare.offset, spare.length, charsSpare);\n      tokens.add(charsSpare.toString());\n      vals.add(Long.valueOf(tfit.weight()));\n    }\n    autocomplete.balancedTree(tokens.toArray(), vals.toArray(), 0, tokens.size() - 1, root);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"41aee74b5f91a096e3fd950f4a336bc763f0e7a7":["ada2f7352a7f964fe49bccd13227c4ec38563d39"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["41aee74b5f91a096e3fd950f4a336bc763f0e7a7"],"ada2f7352a7f964fe49bccd13227c4ec38563d39":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"41aee74b5f91a096e3fd950f4a336bc763f0e7a7":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ada2f7352a7f964fe49bccd13227c4ec38563d39"],"ada2f7352a7f964fe49bccd13227c4ec38563d39":["41aee74b5f91a096e3fd950f4a336bc763f0e7a7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}