{"path":"src/java/org/apache/solr/core/Config#Config(String,InputStream,String).mjava","commits":[{"id":"0c3e228bf650e96f3002a8fb73dd0c13d55af077","date":1138253849,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/core/Config#Config(String,InputStream,String).mjava","pathOld":"/dev/null","sourceNew":"  public Config(String name, InputStream is, String prefix) throws ParserConfigurationException, IOException, SAXException {\n    this.name = name;\n    this.prefix = prefix;\n    if (prefix!=null && !prefix.endsWith(\"/\")) prefix += '/';\n\n    javax.xml.parsers.DocumentBuilder builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();\n    doc = builder.parse(is);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"810d380561c984370e8bfcbf778486c08f7e2cc0","date":1171644169,"type":3,"author":"Erik Hatcher","isMerge":false,"pathNew":"src/java/org/apache/solr/core/Config#Config(String,InputStream,String).mjava","pathOld":"src/java/org/apache/solr/core/Config#Config(String,InputStream,String).mjava","sourceNew":"  public Config(String name, InputStream is, String prefix) throws ParserConfigurationException, IOException, SAXException {\n    this.name = name;\n    this.prefix = prefix;\n    if (prefix!=null && !prefix.endsWith(\"/\")) prefix += '/';\n\n    javax.xml.parsers.DocumentBuilder builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();\n    doc = builder.parse(is);\n\n    DOMUtil.substituteSystemProperties(doc);\n  }\n\n","sourceOld":"  public Config(String name, InputStream is, String prefix) throws ParserConfigurationException, IOException, SAXException {\n    this.name = name;\n    this.prefix = prefix;\n    if (prefix!=null && !prefix.endsWith(\"/\")) prefix += '/';\n\n    javax.xml.parsers.DocumentBuilder builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();\n    doc = builder.parse(is);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0b3256c50eb95d7ac873ebf46885d29733122385","date":1179373217,"type":3,"author":"Erik Hatcher","isMerge":false,"pathNew":"src/java/org/apache/solr/core/Config#Config(String,InputStream,String).mjava","pathOld":"src/java/org/apache/solr/core/Config#Config(String,InputStream,String).mjava","sourceNew":"  public Config(String name, InputStream is, String prefix) throws ParserConfigurationException, IOException, SAXException {\n    this.name = name;\n    this.prefix = prefix;\n    if (prefix!=null && !prefix.endsWith(\"/\")) prefix += '/';\n\n    javax.xml.parsers.DocumentBuilder builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();\n    doc = builder.parse(is);\n\n    try{\n    \tDOMUtil.substituteSystemProperties(doc);\n    }\n    catch( SolrException e ){\n    \tSolrException.log(log,\"Error in \"+name,e);\n    \tthrow e;\n    }\n  }\n\n","sourceOld":"  public Config(String name, InputStream is, String prefix) throws ParserConfigurationException, IOException, SAXException {\n    this.name = name;\n    this.prefix = prefix;\n    if (prefix!=null && !prefix.endsWith(\"/\")) prefix += '/';\n\n    javax.xml.parsers.DocumentBuilder builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();\n    doc = builder.parse(is);\n\n    DOMUtil.substituteSystemProperties(doc);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6d6338c87060be5f66757a94945975f3bbd377a9","date":1189278234,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/core/Config#Config(String,InputStream,String).mjava","pathOld":"src/java/org/apache/solr/core/Config#Config(String,InputStream,String).mjava","sourceNew":"  public Config(String name, InputStream is, String prefix) throws ParserConfigurationException, IOException, SAXException {\n    this.name = name;\n    this.prefix = prefix;\n    if (prefix!=null && !prefix.endsWith(\"/\")) prefix += '/';\n    InputStream lis = is;\n    try{\n      if (lis == null)\n        lis = openResource(name);\n      \n      javax.xml.parsers.DocumentBuilder builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();\n      doc = builder.parse(lis);\n\n    \tDOMUtil.substituteSystemProperties(doc);\n    } catch( SolrException e ){\n    \tSolrException.log(log,\"Error in \"+name,e);\n    \tthrow e;\n    } finally {\n      // if this opens the resource, it also closes it\n      if (lis != is)\n        lis.close();\n    }\n  }\n\n","sourceOld":"  public Config(String name, InputStream is, String prefix) throws ParserConfigurationException, IOException, SAXException {\n    this.name = name;\n    this.prefix = prefix;\n    if (prefix!=null && !prefix.endsWith(\"/\")) prefix += '/';\n\n    javax.xml.parsers.DocumentBuilder builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();\n    doc = builder.parse(is);\n\n    try{\n    \tDOMUtil.substituteSystemProperties(doc);\n    }\n    catch( SolrException e ){\n    \tSolrException.log(log,\"Error in \"+name,e);\n    \tthrow e;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"abbfb3ad1f90df8ebf4751c8e72b2756ace50699","date":1190497478,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/core/Config#Config(String,InputStream,String).mjava","pathOld":"src/java/org/apache/solr/core/Config#Config(String,InputStream,String).mjava","sourceNew":"  @Deprecated\n  public Config(String name, InputStream is, String prefix) throws ParserConfigurationException, IOException, SAXException \n  {\n    this( Config.locateInstanceDir(), name, is, prefix );\n  }\n\n","sourceOld":"  public Config(String name, InputStream is, String prefix) throws ParserConfigurationException, IOException, SAXException {\n    this.name = name;\n    this.prefix = prefix;\n    if (prefix!=null && !prefix.endsWith(\"/\")) prefix += '/';\n    InputStream lis = is;\n    try{\n      if (lis == null)\n        lis = openResource(name);\n      \n      javax.xml.parsers.DocumentBuilder builder = DocumentBuilderFactory.newInstance().newDocumentBuilder();\n      doc = builder.parse(lis);\n\n    \tDOMUtil.substituteSystemProperties(doc);\n    } catch( SolrException e ){\n    \tSolrException.log(log,\"Error in \"+name,e);\n    \tthrow e;\n    } finally {\n      // if this opens the resource, it also closes it\n      if (lis != is)\n        lis.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fcf52a7da226d8d3756cc8bf9f3ae1f39952b014","date":1195912306,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/core/Config#Config(String,InputStream,String).mjava","pathOld":"src/java/org/apache/solr/core/Config#Config(String,InputStream,String).mjava","sourceNew":"  @Deprecated\n  public Config(String name, InputStream is, String prefix) throws ParserConfigurationException, IOException, SAXException \n  {\n    this( null, name, is, prefix );\n  }\n\n","sourceOld":"  @Deprecated\n  public Config(String name, InputStream is, String prefix) throws ParserConfigurationException, IOException, SAXException \n  {\n    this( Config.locateInstanceDir(), name, is, prefix );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"166e7267ee953339ce7ff2febc91aee7576425f5","date":1218487056,"type":3,"author":"Grant Ingersoll","isMerge":false,"pathNew":"src/java/org/apache/solr/core/Config#Config(String,InputStream,String).mjava","pathOld":"src/java/org/apache/solr/core/Config#Config(String,InputStream,String).mjava","sourceNew":"  /**\n   * @deprecated Use {@link #Config(SolrResourceLoader, String, InputStream, String)} instead. \n   */\n  @Deprecated\n  public Config(String name, InputStream is, String prefix) throws ParserConfigurationException, IOException, SAXException \n  {\n    this( null, name, is, prefix );\n  }\n\n","sourceOld":"  @Deprecated\n  public Config(String name, InputStream is, String prefix) throws ParserConfigurationException, IOException, SAXException \n  {\n    this( null, name, is, prefix );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/core/Config#Config(String,InputStream,String).mjava","pathOld":"src/java/org/apache/solr/core/Config#Config(String,InputStream,String).mjava","sourceNew":"  /**\n   * @deprecated Use {@link #Config(SolrResourceLoader, String, InputStream, String)} instead. \n   */\n  @Deprecated\n  public Config(String name, InputStream is, String prefix) throws ParserConfigurationException, IOException, SAXException \n  {\n    this( null, name, is, prefix );\n  }\n\n","sourceOld":"  /**\n   * @deprecated Use {@link #Config(SolrResourceLoader, String, InputStream, String)} instead. \n   */\n  @Deprecated\n  public Config(String name, InputStream is, String prefix) throws ParserConfigurationException, IOException, SAXException \n  {\n    this( null, name, is, prefix );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6d6338c87060be5f66757a94945975f3bbd377a9":["0b3256c50eb95d7ac873ebf46885d29733122385"],"166e7267ee953339ce7ff2febc91aee7576425f5":["fcf52a7da226d8d3756cc8bf9f3ae1f39952b014"],"0c3e228bf650e96f3002a8fb73dd0c13d55af077":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["166e7267ee953339ce7ff2febc91aee7576425f5"],"fcf52a7da226d8d3756cc8bf9f3ae1f39952b014":["abbfb3ad1f90df8ebf4751c8e72b2756ace50699"],"abbfb3ad1f90df8ebf4751c8e72b2756ace50699":["6d6338c87060be5f66757a94945975f3bbd377a9"],"810d380561c984370e8bfcbf778486c08f7e2cc0":["0c3e228bf650e96f3002a8fb73dd0c13d55af077"],"0b3256c50eb95d7ac873ebf46885d29733122385":["810d380561c984370e8bfcbf778486c08f7e2cc0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"6d6338c87060be5f66757a94945975f3bbd377a9":["abbfb3ad1f90df8ebf4751c8e72b2756ace50699"],"166e7267ee953339ce7ff2febc91aee7576425f5":["ad94625fb8d088209f46650c8097196fec67f00c"],"0c3e228bf650e96f3002a8fb73dd0c13d55af077":["810d380561c984370e8bfcbf778486c08f7e2cc0"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["0c3e228bf650e96f3002a8fb73dd0c13d55af077"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"fcf52a7da226d8d3756cc8bf9f3ae1f39952b014":["166e7267ee953339ce7ff2febc91aee7576425f5"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"abbfb3ad1f90df8ebf4751c8e72b2756ace50699":["fcf52a7da226d8d3756cc8bf9f3ae1f39952b014"],"810d380561c984370e8bfcbf778486c08f7e2cc0":["0b3256c50eb95d7ac873ebf46885d29733122385"],"0b3256c50eb95d7ac873ebf46885d29733122385":["6d6338c87060be5f66757a94945975f3bbd377a9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}