{"path":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DocBuilder#addFields(Entity,DocWrapper,Map[String,Object],VariableResolver).mjava","commits":[{"id":"4ebea96bbe279c4a8dc0cd5cd1f987cc9b33436c","date":1335805170,"type":1,"author":"James Dyer","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DocBuilder#addFields(Entity,DocWrapper,Map[String,Object],VariableResolver).mjava","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DocBuilder#addFields(DataConfig.Entity,DocWrapper,Map[String,Object],VariableResolver).mjava","sourceNew":"  @SuppressWarnings(\"unchecked\")\n  private void addFields(Entity entity, DocWrapper doc,\n                         Map<String, Object> arow, VariableResolver vr) {\n    for (Map.Entry<String, Object> entry : arow.entrySet()) {\n      String key = entry.getKey();\n      Object value = entry.getValue();\n      if (value == null)  continue;\n      if (key.startsWith(\"$\")) continue;\n      Set<EntityField> field = entity.getColNameVsField().get(key);\n      if (field == null && dataImporter.getSchema() != null) {\n        // This can be a dynamic field or a field which does not have an entry in data-config ( an implicit field)\n        SchemaField sf = dataImporter.getSchema().getFieldOrNull(key);\n        if (sf == null) {\n          sf = dataImporter.getSchemaField(key);\n        }\n        if (sf != null) {\n          addFieldToDoc(entry.getValue(), sf.getName(), 1.0f, sf.multiValued(), doc);\n        }\n        //else do nothing. if we add it it may fail\n      } else {\n        if (field != null) {\n          for (EntityField f : field) {\n            String name = f.getName();\n            if(f.isDynamicName()){\n              name =  vr.replaceTokens(name);\n            }\n            if (f.isToWrite()) {\n              addFieldToDoc(entry.getValue(), name, f.getBoost(), f.isMultiValued(), doc);\n            }\n          }\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @SuppressWarnings(\"unchecked\")\n  private void addFields(DataConfig.Entity entity, DocWrapper doc,\n                         Map<String, Object> arow, VariableResolver vr) {\n    for (Map.Entry<String, Object> entry : arow.entrySet()) {\n      String key = entry.getKey();\n      Object value = entry.getValue();\n      if (value == null)  continue;\n      if (key.startsWith(\"$\")) continue;\n      List<DataConfig.Field> field = entity.colNameVsField.get(key);\n      if (field == null && dataImporter.getSchema() != null) {\n        // This can be a dynamic field or a field which does not have an entry in data-config ( an implicit field)\n        SchemaField sf = dataImporter.getSchema().getFieldOrNull(key);\n        if (sf == null) {\n          sf = dataImporter.getConfig().lowerNameVsSchemaField.get(key.toLowerCase(Locale.ENGLISH));\n        }\n        if (sf != null) {\n          addFieldToDoc(entry.getValue(), sf.getName(), 1.0f, sf.multiValued(), doc);\n        }\n        //else do nothing. if we add it it may fail\n      } else {\n        if (field != null) {\n          for (DataConfig.Field f : field) {\n            String name = f.getName();\n            if(f.dynamicName){\n              name =  vr.replaceTokens(name);\n            }\n            if (f.toWrite) addFieldToDoc(entry.getValue(), name, f.boost, f.multiValued, doc);\n          }\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d30d20145e9c54b7890711c3307fade007068e9f","date":1354032746,"type":3,"author":"James Dyer","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DocBuilder#addFields(Entity,DocWrapper,Map[String,Object],VariableResolver).mjava","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DocBuilder#addFields(Entity,DocWrapper,Map[String,Object],VariableResolver).mjava","sourceNew":"  @SuppressWarnings(\"unchecked\")\n  private void addFields(Entity entity, DocWrapper doc,\n                         Map<String, Object> arow, VariableResolver vr) {\n    for (Map.Entry<String, Object> entry : arow.entrySet()) {\n      String key = entry.getKey();\n      Object value = entry.getValue();\n      if (value == null)  continue;\n      if (key.startsWith(\"$\")) continue;\n      Set<EntityField> field = entity.getColNameVsField().get(key);\n      if (field == null && dataImporter.getSchema() != null) {\n        // This can be a dynamic field or a field which does not have an entry in data-config ( an implicit field)\n        SchemaField sf = dataImporter.getSchema().getFieldOrNull(key);\n        if (sf == null) {\n          sf = dataImporter.getSchemaField(key);\n        }\n        if (sf != null) {\n          addFieldToDoc(entry.getValue(), sf.getName(), 1.0f, sf.multiValued(), doc);\n        }\n        //else do nothing. if we add it it may fail\n      } else {\n        if (field != null) {\n          for (EntityField f : field) {\n            String name = f.getName();\n            boolean multiValued = f.isMultiValued();\n            boolean toWrite = f.isToWrite();\n            if(f.isDynamicName()){\n              name =  vr.replaceTokens(name);\n              SchemaField schemaField = dataImporter.getSchemaField(name);\n              if(schemaField == null) {\n                toWrite = false;\n              } else {\n                multiValued = schemaField.multiValued();\n                toWrite = true;\n              }\n            }\n            if (toWrite) {\n              addFieldToDoc(entry.getValue(), name, f.getBoost(), multiValued, doc);\n            }\n          }\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @SuppressWarnings(\"unchecked\")\n  private void addFields(Entity entity, DocWrapper doc,\n                         Map<String, Object> arow, VariableResolver vr) {\n    for (Map.Entry<String, Object> entry : arow.entrySet()) {\n      String key = entry.getKey();\n      Object value = entry.getValue();\n      if (value == null)  continue;\n      if (key.startsWith(\"$\")) continue;\n      Set<EntityField> field = entity.getColNameVsField().get(key);\n      if (field == null && dataImporter.getSchema() != null) {\n        // This can be a dynamic field or a field which does not have an entry in data-config ( an implicit field)\n        SchemaField sf = dataImporter.getSchema().getFieldOrNull(key);\n        if (sf == null) {\n          sf = dataImporter.getSchemaField(key);\n        }\n        if (sf != null) {\n          addFieldToDoc(entry.getValue(), sf.getName(), 1.0f, sf.multiValued(), doc);\n        }\n        //else do nothing. if we add it it may fail\n      } else {\n        if (field != null) {\n          for (EntityField f : field) {\n            String name = f.getName();\n            if(f.isDynamicName()){\n              name =  vr.replaceTokens(name);\n            }\n            if (f.isToWrite()) {\n              addFieldToDoc(entry.getValue(), name, f.getBoost(), f.isMultiValued(), doc);\n            }\n          }\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"407687e67faf6e1f02a211ca078d8e3eed631027","date":1355157407,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DocBuilder#addFields(Entity,DocWrapper,Map[String,Object],VariableResolver).mjava","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DocBuilder#addFields(Entity,DocWrapper,Map[String,Object],VariableResolver).mjava","sourceNew":"  @SuppressWarnings(\"unchecked\")\n  private void addFields(Entity entity, DocWrapper doc,\n                         Map<String, Object> arow, VariableResolver vr) {\n    for (Map.Entry<String, Object> entry : arow.entrySet()) {\n      String key = entry.getKey();\n      Object value = entry.getValue();\n      if (value == null)  continue;\n      if (key.startsWith(\"$\")) continue;\n      Set<EntityField> field = entity.getColNameVsField().get(key);\n      if (field == null && dataImporter.getSchema() != null) {\n        // This can be a dynamic field or a field which does not have an entry in data-config ( an implicit field)\n        SchemaField sf = dataImporter.getSchema().getFieldOrNull(key);\n        if (sf == null) {\n          sf = dataImporter.getSchemaField(key);\n        }\n        if (sf != null) {\n          addFieldToDoc(entry.getValue(), sf.getName(), 1.0f, sf.multiValued(), doc);\n        }\n        //else do nothing. if we add it it may fail\n      } else {\n        if (field != null) {\n          for (EntityField f : field) {\n            String name = f.getName();\n            boolean multiValued = f.isMultiValued();\n            boolean toWrite = f.isToWrite();\n            if(f.isDynamicName()){\n              name =  vr.replaceTokens(name);\n              SchemaField schemaField = dataImporter.getSchemaField(name);\n              if(schemaField == null) {\n                toWrite = false;\n              } else {\n                multiValued = schemaField.multiValued();\n                toWrite = true;\n              }\n            }\n            if (toWrite) {\n              addFieldToDoc(entry.getValue(), name, f.getBoost(), multiValued, doc);\n            }\n          }\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @SuppressWarnings(\"unchecked\")\n  private void addFields(Entity entity, DocWrapper doc,\n                         Map<String, Object> arow, VariableResolver vr) {\n    for (Map.Entry<String, Object> entry : arow.entrySet()) {\n      String key = entry.getKey();\n      Object value = entry.getValue();\n      if (value == null)  continue;\n      if (key.startsWith(\"$\")) continue;\n      Set<EntityField> field = entity.getColNameVsField().get(key);\n      if (field == null && dataImporter.getSchema() != null) {\n        // This can be a dynamic field or a field which does not have an entry in data-config ( an implicit field)\n        SchemaField sf = dataImporter.getSchema().getFieldOrNull(key);\n        if (sf == null) {\n          sf = dataImporter.getSchemaField(key);\n        }\n        if (sf != null) {\n          addFieldToDoc(entry.getValue(), sf.getName(), 1.0f, sf.multiValued(), doc);\n        }\n        //else do nothing. if we add it it may fail\n      } else {\n        if (field != null) {\n          for (EntityField f : field) {\n            String name = f.getName();\n            if(f.isDynamicName()){\n              name =  vr.replaceTokens(name);\n            }\n            if (f.isToWrite()) {\n              addFieldToDoc(entry.getValue(), name, f.getBoost(), f.isMultiValued(), doc);\n            }\n          }\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"08970e5b8411182a29412c177eff67ec1110095b","date":1366640815,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DocBuilder#addFields(Entity,DocWrapper,Map[String,Object],VariableResolver).mjava","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DocBuilder#addFields(Entity,DocWrapper,Map[String,Object],VariableResolver).mjava","sourceNew":"  @SuppressWarnings(\"unchecked\")\n  private void addFields(Entity entity, DocWrapper doc,\n                         Map<String, Object> arow, VariableResolver vr) {\n    for (Map.Entry<String, Object> entry : arow.entrySet()) {\n      String key = entry.getKey();\n      Object value = entry.getValue();\n      if (value == null)  continue;\n      if (key.startsWith(\"$\")) continue;\n      Set<EntityField> field = entity.getColNameVsField().get(key);\n      IndexSchema schema = null == reqParams.getRequest() ? null : reqParams.getRequest().getSchema();\n      if (field == null && schema != null) {\n        // This can be a dynamic field or a field which does not have an entry in data-config ( an implicit field)\n        SchemaField sf = schema.getFieldOrNull(key);\n        if (sf == null) {\n          sf = config.getSchemaField(key);\n        }\n        if (sf != null) {\n          addFieldToDoc(entry.getValue(), sf.getName(), 1.0f, sf.multiValued(), doc);\n        }\n        //else do nothing. if we add it it may fail\n      } else {\n        if (field != null) {\n          for (EntityField f : field) {\n            String name = f.getName();\n            boolean multiValued = f.isMultiValued();\n            boolean toWrite = f.isToWrite();\n            if(f.isDynamicName()){\n              name =  vr.replaceTokens(name);\n              SchemaField schemaField = config.getSchemaField(name);\n              if(schemaField == null) {\n                toWrite = false;\n              } else {\n                multiValued = schemaField.multiValued();\n                toWrite = true;\n              }\n            }\n            if (toWrite) {\n              addFieldToDoc(entry.getValue(), name, f.getBoost(), multiValued, doc);\n            }\n          }\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @SuppressWarnings(\"unchecked\")\n  private void addFields(Entity entity, DocWrapper doc,\n                         Map<String, Object> arow, VariableResolver vr) {\n    for (Map.Entry<String, Object> entry : arow.entrySet()) {\n      String key = entry.getKey();\n      Object value = entry.getValue();\n      if (value == null)  continue;\n      if (key.startsWith(\"$\")) continue;\n      Set<EntityField> field = entity.getColNameVsField().get(key);\n      if (field == null && dataImporter.getSchema() != null) {\n        // This can be a dynamic field or a field which does not have an entry in data-config ( an implicit field)\n        SchemaField sf = dataImporter.getSchema().getFieldOrNull(key);\n        if (sf == null) {\n          sf = dataImporter.getSchemaField(key);\n        }\n        if (sf != null) {\n          addFieldToDoc(entry.getValue(), sf.getName(), 1.0f, sf.multiValued(), doc);\n        }\n        //else do nothing. if we add it it may fail\n      } else {\n        if (field != null) {\n          for (EntityField f : field) {\n            String name = f.getName();\n            boolean multiValued = f.isMultiValued();\n            boolean toWrite = f.isToWrite();\n            if(f.isDynamicName()){\n              name =  vr.replaceTokens(name);\n              SchemaField schemaField = dataImporter.getSchemaField(name);\n              if(schemaField == null) {\n                toWrite = false;\n              } else {\n                multiValued = schemaField.multiValued();\n                toWrite = true;\n              }\n            }\n            if (toWrite) {\n              addFieldToDoc(entry.getValue(), name, f.getBoost(), multiValued, doc);\n            }\n          }\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"acd9883560fd89e6448b2b447302fe543040cd4f","date":1488478696,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DocBuilder#addFields(Entity,DocWrapper,Map[String,Object],VariableResolver).mjava","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DocBuilder#addFields(Entity,DocWrapper,Map[String,Object],VariableResolver).mjava","sourceNew":"  @SuppressWarnings(\"unchecked\")\n  private void addFields(Entity entity, DocWrapper doc,\n                         Map<String, Object> arow, VariableResolver vr) {\n    for (Map.Entry<String, Object> entry : arow.entrySet()) {\n      String key = entry.getKey();\n      Object value = entry.getValue();\n      if (value == null)  continue;\n      if (key.startsWith(\"$\")) continue;\n      Set<EntityField> field = entity.getColNameVsField().get(key);\n      IndexSchema schema = null == reqParams.getRequest() ? null : reqParams.getRequest().getSchema();\n      if (field == null && schema != null) {\n        // This can be a dynamic field or a field which does not have an entry in data-config ( an implicit field)\n        SchemaField sf = schema.getFieldOrNull(key);\n        if (sf == null) {\n          sf = config.getSchemaField(key);\n        }\n        if (sf != null) {\n          addFieldToDoc(entry.getValue(), sf.getName(), sf.multiValued(), doc);\n        }\n        //else do nothing. if we add it it may fail\n      } else {\n        if (field != null) {\n          for (EntityField f : field) {\n            String name = f.getName();\n            boolean multiValued = f.isMultiValued();\n            boolean toWrite = f.isToWrite();\n            if(f.isDynamicName()){\n              name =  vr.replaceTokens(name);\n              SchemaField schemaField = config.getSchemaField(name);\n              if(schemaField == null) {\n                toWrite = false;\n              } else {\n                multiValued = schemaField.multiValued();\n                toWrite = true;\n              }\n            }\n            if (toWrite) {\n              addFieldToDoc(entry.getValue(), name, multiValued, doc);\n            }\n          }\n        }\n      }\n    }\n  }\n\n","sourceOld":"  @SuppressWarnings(\"unchecked\")\n  private void addFields(Entity entity, DocWrapper doc,\n                         Map<String, Object> arow, VariableResolver vr) {\n    for (Map.Entry<String, Object> entry : arow.entrySet()) {\n      String key = entry.getKey();\n      Object value = entry.getValue();\n      if (value == null)  continue;\n      if (key.startsWith(\"$\")) continue;\n      Set<EntityField> field = entity.getColNameVsField().get(key);\n      IndexSchema schema = null == reqParams.getRequest() ? null : reqParams.getRequest().getSchema();\n      if (field == null && schema != null) {\n        // This can be a dynamic field or a field which does not have an entry in data-config ( an implicit field)\n        SchemaField sf = schema.getFieldOrNull(key);\n        if (sf == null) {\n          sf = config.getSchemaField(key);\n        }\n        if (sf != null) {\n          addFieldToDoc(entry.getValue(), sf.getName(), 1.0f, sf.multiValued(), doc);\n        }\n        //else do nothing. if we add it it may fail\n      } else {\n        if (field != null) {\n          for (EntityField f : field) {\n            String name = f.getName();\n            boolean multiValued = f.isMultiValued();\n            boolean toWrite = f.isToWrite();\n            if(f.isDynamicName()){\n              name =  vr.replaceTokens(name);\n              SchemaField schemaField = config.getSchemaField(name);\n              if(schemaField == null) {\n                toWrite = false;\n              } else {\n                multiValued = schemaField.multiValued();\n                toWrite = true;\n              }\n            }\n            if (toWrite) {\n              addFieldToDoc(entry.getValue(), name, f.getBoost(), multiValued, doc);\n            }\n          }\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b","date":1598712724,"type":4,"author":"Alexandre Rafalovitch","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/contrib/dataimporthandler/src/java/org/apache/solr/handler/dataimport/DocBuilder#addFields(Entity,DocWrapper,Map[String,Object],VariableResolver).mjava","sourceNew":null,"sourceOld":"  @SuppressWarnings(\"unchecked\")\n  private void addFields(Entity entity, DocWrapper doc,\n                         Map<String, Object> arow, VariableResolver vr) {\n    for (Map.Entry<String, Object> entry : arow.entrySet()) {\n      String key = entry.getKey();\n      Object value = entry.getValue();\n      if (value == null)  continue;\n      if (key.startsWith(\"$\")) continue;\n      Set<EntityField> field = entity.getColNameVsField().get(key);\n      IndexSchema schema = null == reqParams.getRequest() ? null : reqParams.getRequest().getSchema();\n      if (field == null && schema != null) {\n        // This can be a dynamic field or a field which does not have an entry in data-config ( an implicit field)\n        SchemaField sf = schema.getFieldOrNull(key);\n        if (sf == null) {\n          sf = config.getSchemaField(key);\n        }\n        if (sf != null) {\n          addFieldToDoc(entry.getValue(), sf.getName(), sf.multiValued(), doc);\n        }\n        //else do nothing. if we add it it may fail\n      } else {\n        if (field != null) {\n          for (EntityField f : field) {\n            String name = f.getName();\n            boolean multiValued = f.isMultiValued();\n            boolean toWrite = f.isToWrite();\n            if(f.isDynamicName()){\n              name =  vr.replaceTokens(name);\n              SchemaField schemaField = config.getSchemaField(name);\n              if(schemaField == null) {\n                toWrite = false;\n              } else {\n                multiValued = schemaField.multiValued();\n                toWrite = true;\n              }\n            }\n            if (toWrite) {\n              addFieldToDoc(entry.getValue(), name, multiValued, doc);\n            }\n          }\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["acd9883560fd89e6448b2b447302fe543040cd4f"],"4ebea96bbe279c4a8dc0cd5cd1f987cc9b33436c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"407687e67faf6e1f02a211ca078d8e3eed631027":["4ebea96bbe279c4a8dc0cd5cd1f987cc9b33436c","d30d20145e9c54b7890711c3307fade007068e9f"],"d30d20145e9c54b7890711c3307fade007068e9f":["4ebea96bbe279c4a8dc0cd5cd1f987cc9b33436c"],"acd9883560fd89e6448b2b447302fe543040cd4f":["08970e5b8411182a29412c177eff67ec1110095b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b"],"08970e5b8411182a29412c177eff67ec1110095b":["d30d20145e9c54b7890711c3307fade007068e9f"]},"commit2Childs":{"d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4ebea96bbe279c4a8dc0cd5cd1f987cc9b33436c":["407687e67faf6e1f02a211ca078d8e3eed631027","d30d20145e9c54b7890711c3307fade007068e9f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4ebea96bbe279c4a8dc0cd5cd1f987cc9b33436c"],"407687e67faf6e1f02a211ca078d8e3eed631027":[],"d30d20145e9c54b7890711c3307fade007068e9f":["407687e67faf6e1f02a211ca078d8e3eed631027","08970e5b8411182a29412c177eff67ec1110095b"],"acd9883560fd89e6448b2b447302fe543040cd4f":["d2c8f5c46c2501b61e2f55eb7ee59e6c5372290b"],"08970e5b8411182a29412c177eff67ec1110095b":["acd9883560fd89e6448b2b447302fe543040cd4f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["407687e67faf6e1f02a211ca078d8e3eed631027","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}