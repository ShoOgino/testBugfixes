{"path":"solr/solrj/src/test/org/apache/solr/common/cloud/SolrZkClientTest#testSimpleUpdateACLs().mjava","commits":[{"id":"67cf727e72c71906ffd390c61b50a1c60f2ebd49","date":1452731614,"type":0,"author":"Gregory Chanan","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/common/cloud/SolrZkClientTest#testSimpleUpdateACLs().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testSimpleUpdateACLs() throws KeeperException, InterruptedException {\n    assertTrue(\"Initial create was in secure mode; please check the test\", canRead(defaultClient, PATH));\n    assertTrue(\"Credentialed client should always be able to read\", canRead(credentialsClient, PATH));\n\n    // convert to secure\n    aclClient.updateACLs(ROOT);\n    assertFalse(\"Default client should not be able to read root in secure mode\", canRead(defaultClient, ROOT));\n    assertFalse(\"Default client should not be able to read children in secure mode\", canRead(defaultClient, PATH));\n    assertTrue(\"Credentialed client should always be able to read root in secure mode\", canRead(credentialsClient, ROOT));\n    assertTrue(\"Credentialed client should always be able to read in secure mode\", canRead(credentialsClient, PATH));\n\n    // convert to non-secure\n    credentialsClient.updateACLs(ROOT);\n    assertTrue(\"Default client should work again after clearing ACLs\", canRead(defaultClient, PATH));\n    assertTrue(\"Credentialed client should always be able to read\", canRead(credentialsClient, PATH));\n\n    // convert a subtree to secure\n    aclClient.updateACLs(\"/collections\");\n    assertTrue(\"Default client should read unaffected paths\", canRead(defaultClient, ROOT));\n    assertFalse(\"Default client should not read secure children\", canRead(defaultClient, PATH));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8d35c84fdef07284c122012ca4000d3b7285a66e","date":1545962630,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/common/cloud/SolrZkClientTest#testSimpleUpdateACLs().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/common/cloud/SolrZkClientTest#testSimpleUpdateACLs().mjava","sourceNew":"  @Test\n  @BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\") // annotated on: 24-Dec-2018\n  public void testSimpleUpdateACLs() throws KeeperException, InterruptedException {\n    assertTrue(\"Initial create was in secure mode; please check the test\", canRead(defaultClient, PATH));\n    assertTrue(\"Credentialed client should always be able to read\", canRead(credentialsClient, PATH));\n\n    // convert to secure\n    aclClient.updateACLs(ROOT);\n    assertFalse(\"Default client should not be able to read root in secure mode\", canRead(defaultClient, ROOT));\n    assertFalse(\"Default client should not be able to read children in secure mode\", canRead(defaultClient, PATH));\n    assertTrue(\"Credentialed client should always be able to read root in secure mode\", canRead(credentialsClient, ROOT));\n    assertTrue(\"Credentialed client should always be able to read in secure mode\", canRead(credentialsClient, PATH));\n\n    // convert to non-secure\n    credentialsClient.updateACLs(ROOT);\n    assertTrue(\"Default client should work again after clearing ACLs\", canRead(defaultClient, PATH));\n    assertTrue(\"Credentialed client should always be able to read\", canRead(credentialsClient, PATH));\n\n    // convert a subtree to secure\n    aclClient.updateACLs(\"/collections\");\n    assertTrue(\"Default client should read unaffected paths\", canRead(defaultClient, ROOT));\n    assertFalse(\"Default client should not read secure children\", canRead(defaultClient, PATH));\n  }\n\n","sourceOld":"  @Test\n  public void testSimpleUpdateACLs() throws KeeperException, InterruptedException {\n    assertTrue(\"Initial create was in secure mode; please check the test\", canRead(defaultClient, PATH));\n    assertTrue(\"Credentialed client should always be able to read\", canRead(credentialsClient, PATH));\n\n    // convert to secure\n    aclClient.updateACLs(ROOT);\n    assertFalse(\"Default client should not be able to read root in secure mode\", canRead(defaultClient, ROOT));\n    assertFalse(\"Default client should not be able to read children in secure mode\", canRead(defaultClient, PATH));\n    assertTrue(\"Credentialed client should always be able to read root in secure mode\", canRead(credentialsClient, ROOT));\n    assertTrue(\"Credentialed client should always be able to read in secure mode\", canRead(credentialsClient, PATH));\n\n    // convert to non-secure\n    credentialsClient.updateACLs(ROOT);\n    assertTrue(\"Default client should work again after clearing ACLs\", canRead(defaultClient, PATH));\n    assertTrue(\"Credentialed client should always be able to read\", canRead(credentialsClient, PATH));\n\n    // convert a subtree to secure\n    aclClient.updateACLs(\"/collections\");\n    assertTrue(\"Default client should read unaffected paths\", canRead(defaultClient, ROOT));\n    assertFalse(\"Default client should not read secure children\", canRead(defaultClient, PATH));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a17efc022ea82d3bfc1ab294abc2621568aea830","date":1585615075,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/common/cloud/SolrZkClientTest#testSimpleUpdateACLs().mjava","pathOld":"solr/solrj/src/test/org/apache/solr/common/cloud/SolrZkClientTest#testSimpleUpdateACLs().mjava","sourceNew":"  @Test\n  public void testSimpleUpdateACLs() throws KeeperException, InterruptedException {\n    assertTrue(\"Initial create was in secure mode; please check the test\", canRead(defaultClient, PATH));\n    assertTrue(\"Credentialed client should always be able to read\", canRead(credentialsClient, PATH));\n\n    // convert to secure\n    aclClient.updateACLs(ROOT);\n    assertFalse(\"Default client should not be able to read root in secure mode\", canRead(defaultClient, ROOT));\n    assertFalse(\"Default client should not be able to read children in secure mode\", canRead(defaultClient, PATH));\n    assertTrue(\"Credentialed client should always be able to read root in secure mode\", canRead(credentialsClient, ROOT));\n    assertTrue(\"Credentialed client should always be able to read in secure mode\", canRead(credentialsClient, PATH));\n\n    // convert to non-secure\n    credentialsClient.updateACLs(ROOT);\n    assertTrue(\"Default client should work again after clearing ACLs\", canRead(defaultClient, PATH));\n    assertTrue(\"Credentialed client should always be able to read\", canRead(credentialsClient, PATH));\n\n    // convert a subtree to secure\n    aclClient.updateACLs(\"/collections\");\n    assertTrue(\"Default client should read unaffected paths\", canRead(defaultClient, ROOT));\n    assertFalse(\"Default client should not read secure children\", canRead(defaultClient, PATH));\n  }\n\n","sourceOld":"  @Test\n  @BadApple(bugUrl=\"https://issues.apache.org/jira/browse/SOLR-12028\") // annotated on: 24-Dec-2018\n  public void testSimpleUpdateACLs() throws KeeperException, InterruptedException {\n    assertTrue(\"Initial create was in secure mode; please check the test\", canRead(defaultClient, PATH));\n    assertTrue(\"Credentialed client should always be able to read\", canRead(credentialsClient, PATH));\n\n    // convert to secure\n    aclClient.updateACLs(ROOT);\n    assertFalse(\"Default client should not be able to read root in secure mode\", canRead(defaultClient, ROOT));\n    assertFalse(\"Default client should not be able to read children in secure mode\", canRead(defaultClient, PATH));\n    assertTrue(\"Credentialed client should always be able to read root in secure mode\", canRead(credentialsClient, ROOT));\n    assertTrue(\"Credentialed client should always be able to read in secure mode\", canRead(credentialsClient, PATH));\n\n    // convert to non-secure\n    credentialsClient.updateACLs(ROOT);\n    assertTrue(\"Default client should work again after clearing ACLs\", canRead(defaultClient, PATH));\n    assertTrue(\"Credentialed client should always be able to read\", canRead(credentialsClient, PATH));\n\n    // convert a subtree to secure\n    aclClient.updateACLs(\"/collections\");\n    assertTrue(\"Default client should read unaffected paths\", canRead(defaultClient, ROOT));\n    assertFalse(\"Default client should not read secure children\", canRead(defaultClient, PATH));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a17efc022ea82d3bfc1ab294abc2621568aea830":["8d35c84fdef07284c122012ca4000d3b7285a66e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a17efc022ea82d3bfc1ab294abc2621568aea830"],"8d35c84fdef07284c122012ca4000d3b7285a66e":["67cf727e72c71906ffd390c61b50a1c60f2ebd49"],"67cf727e72c71906ffd390c61b50a1c60f2ebd49":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["67cf727e72c71906ffd390c61b50a1c60f2ebd49"],"a17efc022ea82d3bfc1ab294abc2621568aea830":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"8d35c84fdef07284c122012ca4000d3b7285a66e":["a17efc022ea82d3bfc1ab294abc2621568aea830"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"67cf727e72c71906ffd390c61b50a1c60f2ebd49":["8d35c84fdef07284c122012ca4000d3b7285a66e"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}