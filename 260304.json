{"path":"lucene/facet/src/test/org/apache/lucene/facet/index/params/CategoryListParamsTest#testIdentityConsistency().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/index/params/CategoryListParamsTest#testIdentityConsistency().mjava","pathOld":"modules/facet/src/test/org/apache/lucene/facet/index/params/CategoryListParamsTest#testIdentityConsistency().mjava","sourceNew":"  /**\n   * Test that CategoryListParams behave correctly when compared against each\n   * other.\n   */\n  @Test\n  public void testIdentityConsistency() {\n    // Test 2 CategoryListParams with the default parameter\n    CategoryListParams clParams1 = new CategoryListParams();\n    CategoryListParams clParams2 = new CategoryListParams();\n    assertEquals(\n        \"2 CategoryListParams with the same default term should equal each other.\",\n        clParams1, clParams2);\n    assertEquals(\"2 CategoryListParams with the same default term should have the same hashcode\",\n        clParams1.hashCode(), clParams2.hashCode());\n\n    // Test 2 CategoryListParams with the same specified Term\n    clParams1 = new CategoryListParams(new Term(\"test\"));\n    clParams2 = new CategoryListParams(new Term(\"test\"));\n    assertEquals(\n        \"2 CategoryListParams with the same term should equal each other.\",\n        clParams1, clParams2);\n    assertEquals(\"2 CategoryListParams with the same term should have the same hashcode\",\n        clParams1.hashCode(), clParams2.hashCode());\n    \n    // Test 2 CategoryListParams with DIFFERENT terms\n    clParams1 = new CategoryListParams(new Term(\"test1\"));\n    clParams2 = new CategoryListParams(new Term(\"test2\"));\n    assertFalse(\n        \"2 CategoryListParams with the different terms should NOT equal each other.\",\n        clParams1.equals(clParams2));\n    assertFalse(\n        \"2 CategoryListParams with the different terms should NOT have the same hashcode.\",\n        clParams1.hashCode() == clParams2.hashCode());\n  }\n\n","sourceOld":"  /**\n   * Test that CategoryListParams behave correctly when compared against each\n   * other.\n   */\n  @Test\n  public void testIdentityConsistency() {\n    // Test 2 CategoryListParams with the default parameter\n    CategoryListParams clParams1 = new CategoryListParams();\n    CategoryListParams clParams2 = new CategoryListParams();\n    assertEquals(\n        \"2 CategoryListParams with the same default term should equal each other.\",\n        clParams1, clParams2);\n    assertEquals(\"2 CategoryListParams with the same default term should have the same hashcode\",\n        clParams1.hashCode(), clParams2.hashCode());\n\n    // Test 2 CategoryListParams with the same specified Term\n    clParams1 = new CategoryListParams(new Term(\"test\"));\n    clParams2 = new CategoryListParams(new Term(\"test\"));\n    assertEquals(\n        \"2 CategoryListParams with the same term should equal each other.\",\n        clParams1, clParams2);\n    assertEquals(\"2 CategoryListParams with the same term should have the same hashcode\",\n        clParams1.hashCode(), clParams2.hashCode());\n    \n    // Test 2 CategoryListParams with DIFFERENT terms\n    clParams1 = new CategoryListParams(new Term(\"test1\"));\n    clParams2 = new CategoryListParams(new Term(\"test2\"));\n    assertFalse(\n        \"2 CategoryListParams with the different terms should NOT equal each other.\",\n        clParams1.equals(clParams2));\n    assertFalse(\n        \"2 CategoryListParams with the different terms should NOT have the same hashcode.\",\n        clParams1.hashCode() == clParams2.hashCode());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6c2cd18c7da6f499a33f06fc89c07a463ec074c0","date":1358329431,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/index/params/CategoryListParamsTest#testIdentityConsistency().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/index/params/CategoryListParamsTest#testIdentityConsistency().mjava","sourceNew":"  /**\n   * Test that CategoryListParams behave correctly when compared against each\n   * other.\n   */\n  @Test\n  public void testIdentityConsistency() {\n    // Test 2 CategoryListParams with the default parameter\n    CategoryListParams clParams1 = new CategoryListParams();\n    CategoryListParams clParams2 = new CategoryListParams();\n    assertEquals(\n        \"2 CategoryListParams with the same default term should equal each other.\",\n        clParams1, clParams2);\n    assertEquals(\"2 CategoryListParams with the same default term should have the same hashcode\",\n        clParams1.hashCode(), clParams2.hashCode());\n\n    // Test 2 CategoryListParams with the same specified Term\n    clParams1 = new CategoryListParams(\"test\");\n    clParams2 = new CategoryListParams(\"test\");\n    assertEquals(\n        \"2 CategoryListParams with the same term should equal each other.\",\n        clParams1, clParams2);\n    assertEquals(\"2 CategoryListParams with the same term should have the same hashcode\",\n        clParams1.hashCode(), clParams2.hashCode());\n    \n    // Test 2 CategoryListParams with DIFFERENT terms\n    clParams1 = new CategoryListParams(\"test1\");\n    clParams2 = new CategoryListParams(\"test2\");\n    assertFalse(\n        \"2 CategoryListParams with the different terms should NOT equal each other.\",\n        clParams1.equals(clParams2));\n    assertFalse(\n        \"2 CategoryListParams with the different terms should NOT have the same hashcode.\",\n        clParams1.hashCode() == clParams2.hashCode());\n  }\n\n","sourceOld":"  /**\n   * Test that CategoryListParams behave correctly when compared against each\n   * other.\n   */\n  @Test\n  public void testIdentityConsistency() {\n    // Test 2 CategoryListParams with the default parameter\n    CategoryListParams clParams1 = new CategoryListParams();\n    CategoryListParams clParams2 = new CategoryListParams();\n    assertEquals(\n        \"2 CategoryListParams with the same default term should equal each other.\",\n        clParams1, clParams2);\n    assertEquals(\"2 CategoryListParams with the same default term should have the same hashcode\",\n        clParams1.hashCode(), clParams2.hashCode());\n\n    // Test 2 CategoryListParams with the same specified Term\n    clParams1 = new CategoryListParams(new Term(\"test\"));\n    clParams2 = new CategoryListParams(new Term(\"test\"));\n    assertEquals(\n        \"2 CategoryListParams with the same term should equal each other.\",\n        clParams1, clParams2);\n    assertEquals(\"2 CategoryListParams with the same term should have the same hashcode\",\n        clParams1.hashCode(), clParams2.hashCode());\n    \n    // Test 2 CategoryListParams with DIFFERENT terms\n    clParams1 = new CategoryListParams(new Term(\"test1\"));\n    clParams2 = new CategoryListParams(new Term(\"test2\"));\n    assertFalse(\n        \"2 CategoryListParams with the different terms should NOT equal each other.\",\n        clParams1.equals(clParams2));\n    assertFalse(\n        \"2 CategoryListParams with the different terms should NOT have the same hashcode.\",\n        clParams1.hashCode() == clParams2.hashCode());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c4015cd39dff8d4dec562d909f9766debac53aa6","date":1358548736,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/index/params/CategoryListParamsTest#testIdentityConsistency().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/index/params/CategoryListParamsTest#testIdentityConsistency().mjava","sourceNew":"  /**\n   * Test that CategoryListParams behave correctly when compared against each\n   * other.\n   */\n  @Test\n  public void testIdentityConsistency() {\n    // Test 2 CategoryListParams with the default parameter\n    CategoryListParams clParams1 = new CategoryListParams();\n    CategoryListParams clParams2 = new CategoryListParams();\n    assertEquals(\n        \"2 CategoryListParams with the same default term should equal each other.\",\n        clParams1, clParams2);\n    assertEquals(\"2 CategoryListParams with the same default term should have the same hashcode\",\n        clParams1.hashCode(), clParams2.hashCode());\n\n    // Test 2 CategoryListParams with the same specified Term\n    clParams1 = new CategoryListParams(\"test\");\n    clParams2 = new CategoryListParams(\"test\");\n    assertEquals(\n        \"2 CategoryListParams with the same term should equal each other.\",\n        clParams1, clParams2);\n    assertEquals(\"2 CategoryListParams with the same term should have the same hashcode\",\n        clParams1.hashCode(), clParams2.hashCode());\n    \n    // Test 2 CategoryListParams with DIFFERENT terms\n    clParams1 = new CategoryListParams(\"test1\");\n    clParams2 = new CategoryListParams(\"test2\");\n    assertFalse(\n        \"2 CategoryListParams with the different terms should NOT equal each other.\",\n        clParams1.equals(clParams2));\n    assertFalse(\n        \"2 CategoryListParams with the different terms should NOT have the same hashcode.\",\n        clParams1.hashCode() == clParams2.hashCode());\n  }\n\n","sourceOld":"  /**\n   * Test that CategoryListParams behave correctly when compared against each\n   * other.\n   */\n  @Test\n  public void testIdentityConsistency() {\n    // Test 2 CategoryListParams with the default parameter\n    CategoryListParams clParams1 = new CategoryListParams();\n    CategoryListParams clParams2 = new CategoryListParams();\n    assertEquals(\n        \"2 CategoryListParams with the same default term should equal each other.\",\n        clParams1, clParams2);\n    assertEquals(\"2 CategoryListParams with the same default term should have the same hashcode\",\n        clParams1.hashCode(), clParams2.hashCode());\n\n    // Test 2 CategoryListParams with the same specified Term\n    clParams1 = new CategoryListParams(new Term(\"test\"));\n    clParams2 = new CategoryListParams(new Term(\"test\"));\n    assertEquals(\n        \"2 CategoryListParams with the same term should equal each other.\",\n        clParams1, clParams2);\n    assertEquals(\"2 CategoryListParams with the same term should have the same hashcode\",\n        clParams1.hashCode(), clParams2.hashCode());\n    \n    // Test 2 CategoryListParams with DIFFERENT terms\n    clParams1 = new CategoryListParams(new Term(\"test1\"));\n    clParams2 = new CategoryListParams(new Term(\"test2\"));\n    assertFalse(\n        \"2 CategoryListParams with the different terms should NOT equal each other.\",\n        clParams1.equals(clParams2));\n    assertFalse(\n        \"2 CategoryListParams with the different terms should NOT have the same hashcode.\",\n        clParams1.hashCode() == clParams2.hashCode());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"607428da722dcb3e86bbd11c63de8986e6275c36","date":1360334150,"type":5,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/params/CategoryListParamsTest#testIdentityConsistency().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/index/params/CategoryListParamsTest#testIdentityConsistency().mjava","sourceNew":"  /**\n   * Test that CategoryListParams behave correctly when compared against each\n   * other.\n   */\n  @Test\n  public void testIdentityConsistency() {\n    // Test 2 CategoryListParams with the default parameter\n    CategoryListParams clParams1 = new CategoryListParams();\n    CategoryListParams clParams2 = new CategoryListParams();\n    assertEquals(\n        \"2 CategoryListParams with the same default term should equal each other.\",\n        clParams1, clParams2);\n    assertEquals(\"2 CategoryListParams with the same default term should have the same hashcode\",\n        clParams1.hashCode(), clParams2.hashCode());\n\n    // Test 2 CategoryListParams with the same specified Term\n    clParams1 = new CategoryListParams(\"test\");\n    clParams2 = new CategoryListParams(\"test\");\n    assertEquals(\n        \"2 CategoryListParams with the same term should equal each other.\",\n        clParams1, clParams2);\n    assertEquals(\"2 CategoryListParams with the same term should have the same hashcode\",\n        clParams1.hashCode(), clParams2.hashCode());\n    \n    // Test 2 CategoryListParams with DIFFERENT terms\n    clParams1 = new CategoryListParams(\"test1\");\n    clParams2 = new CategoryListParams(\"test2\");\n    assertFalse(\n        \"2 CategoryListParams with the different terms should NOT equal each other.\",\n        clParams1.equals(clParams2));\n    assertFalse(\n        \"2 CategoryListParams with the different terms should NOT have the same hashcode.\",\n        clParams1.hashCode() == clParams2.hashCode());\n  }\n\n","sourceOld":"  /**\n   * Test that CategoryListParams behave correctly when compared against each\n   * other.\n   */\n  @Test\n  public void testIdentityConsistency() {\n    // Test 2 CategoryListParams with the default parameter\n    CategoryListParams clParams1 = new CategoryListParams();\n    CategoryListParams clParams2 = new CategoryListParams();\n    assertEquals(\n        \"2 CategoryListParams with the same default term should equal each other.\",\n        clParams1, clParams2);\n    assertEquals(\"2 CategoryListParams with the same default term should have the same hashcode\",\n        clParams1.hashCode(), clParams2.hashCode());\n\n    // Test 2 CategoryListParams with the same specified Term\n    clParams1 = new CategoryListParams(\"test\");\n    clParams2 = new CategoryListParams(\"test\");\n    assertEquals(\n        \"2 CategoryListParams with the same term should equal each other.\",\n        clParams1, clParams2);\n    assertEquals(\"2 CategoryListParams with the same term should have the same hashcode\",\n        clParams1.hashCode(), clParams2.hashCode());\n    \n    // Test 2 CategoryListParams with DIFFERENT terms\n    clParams1 = new CategoryListParams(\"test1\");\n    clParams2 = new CategoryListParams(\"test2\");\n    assertFalse(\n        \"2 CategoryListParams with the different terms should NOT equal each other.\",\n        clParams1.equals(clParams2));\n    assertFalse(\n        \"2 CategoryListParams with the different terms should NOT have the same hashcode.\",\n        clParams1.hashCode() == clParams2.hashCode());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"607428da722dcb3e86bbd11c63de8986e6275c36":["6c2cd18c7da6f499a33f06fc89c07a463ec074c0"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c4015cd39dff8d4dec562d909f9766debac53aa6":["b89678825b68eccaf09e6ab71675fc0b0af1e099","6c2cd18c7da6f499a33f06fc89c07a463ec074c0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6c2cd18c7da6f499a33f06fc89c07a463ec074c0":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["607428da722dcb3e86bbd11c63de8986e6275c36"]},"commit2Childs":{"607428da722dcb3e86bbd11c63de8986e6275c36":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["c4015cd39dff8d4dec562d909f9766debac53aa6","6c2cd18c7da6f499a33f06fc89c07a463ec074c0"],"c4015cd39dff8d4dec562d909f9766debac53aa6":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"6c2cd18c7da6f499a33f06fc89c07a463ec074c0":["607428da722dcb3e86bbd11c63de8986e6275c36","c4015cd39dff8d4dec562d909f9766debac53aa6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c4015cd39dff8d4dec562d909f9766debac53aa6","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}