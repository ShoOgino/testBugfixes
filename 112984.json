{"path":"lucene/queries/src/java/org/apache/lucene/queries/ChainedFilter#getDocIdSet(AtomicReaderContext,int,int[]).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/ChainedFilter#getDocIdSet(AtomicReaderContext,int,int[]).mjava","pathOld":"modules/queries/src/java/org/apache/lucene/queries/ChainedFilter#getDocIdSet(AtomicReaderContext,int,int[]).mjava","sourceNew":"  /**\n   * Delegates to each filter in the chain.\n   *\n   * @param context AtomicReaderContext\n   * @param logic Logical operation\n   * @return DocIdSet\n   */\n  private DocIdSet getDocIdSet(AtomicReaderContext context, int logic, int[] index)\n      throws IOException {\n    OpenBitSetDISI result = initialResult(context, logic, index);\n    for (; index[0] < chain.length; index[0]++) {\n      // we dont pass acceptDocs, we will filter at the end using an additional filter\n      doChain(result, logic, chain[index[0]].getDocIdSet(context, null));\n    }\n    return result;\n  }\n\n","sourceOld":"  /**\n   * Delegates to each filter in the chain.\n   *\n   * @param context AtomicReaderContext\n   * @param logic Logical operation\n   * @return DocIdSet\n   */\n  private DocIdSet getDocIdSet(AtomicReaderContext context, int logic, int[] index)\n      throws IOException {\n    OpenBitSetDISI result = initialResult(context, logic, index);\n    for (; index[0] < chain.length; index[0]++) {\n      // we dont pass acceptDocs, we will filter at the end using an additional filter\n      doChain(result, logic, chain[index[0]].getDocIdSet(context, null));\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3995f83351082af8ae83bb017e63c56818fc1568","date":1392047063,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/ChainedFilter#getDocIdSet(AtomicReaderContext,int,int[]).mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/ChainedFilter#getDocIdSet(AtomicReaderContext,int,int[]).mjava","sourceNew":"  /**\n   * Delegates to each filter in the chain.\n   *\n   * @param context AtomicReaderContext\n   * @param logic Logical operation\n   * @return DocIdSet\n   */\n  private DocIdSet getDocIdSet(AtomicReaderContext context, int logic, int[] index)\n      throws IOException {\n    FixedBitSet result = initialResult(context, logic, index);\n    for (; index[0] < chain.length; index[0]++) {\n      // we dont pass acceptDocs, we will filter at the end using an additional filter\n      doChain(result, logic, chain[index[0]].getDocIdSet(context, null));\n    }\n    return result;\n  }\n\n","sourceOld":"  /**\n   * Delegates to each filter in the chain.\n   *\n   * @param context AtomicReaderContext\n   * @param logic Logical operation\n   * @return DocIdSet\n   */\n  private DocIdSet getDocIdSet(AtomicReaderContext context, int logic, int[] index)\n      throws IOException {\n    OpenBitSetDISI result = initialResult(context, logic, index);\n    for (; index[0] < chain.length; index[0]++) {\n      // we dont pass acceptDocs, we will filter at the end using an additional filter\n      doChain(result, logic, chain[index[0]].getDocIdSet(context, null));\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c9fb5f46e264daf5ba3860defe623a89d202dd87","date":1411516315,"type":4,"author":"Ryan Ernst","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/ChainedFilter#getDocIdSet(AtomicReaderContext,int,int[]).mjava","sourceNew":null,"sourceOld":"  /**\n   * Delegates to each filter in the chain.\n   *\n   * @param context AtomicReaderContext\n   * @param logic Logical operation\n   * @return DocIdSet\n   */\n  private DocIdSet getDocIdSet(AtomicReaderContext context, int logic, int[] index)\n      throws IOException {\n    FixedBitSet result = initialResult(context, logic, index);\n    for (; index[0] < chain.length; index[0]++) {\n      // we dont pass acceptDocs, we will filter at the end using an additional filter\n      doChain(result, logic, chain[index[0]].getDocIdSet(context, null));\n    }\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["3995f83351082af8ae83bb017e63c56818fc1568"],"3995f83351082af8ae83bb017e63c56818fc1568":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c9fb5f46e264daf5ba3860defe623a89d202dd87"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["3995f83351082af8ae83bb017e63c56818fc1568"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3995f83351082af8ae83bb017e63c56818fc1568":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}