{"path":"contrib/misc/src/java/org/apache/lucene/queryParser/precedence/Token#getValue().mjava","commits":[{"id":"439b0fe2f799d1c722151e88e32bdefad8d34ebe","date":1255282509,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/misc/src/java/org/apache/lucene/queryParser/precedence/Token#getValue().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * An optional attribute value of the Token.\n   * Tokens which are not used as syntactic sugar will often contain\n   * meaningful values that will be used later on by the compiler or\n   * interpreter. This attribute value is often different from the image.\n   * Any subclass of Token that actually wants to return a non-null value can\n   * override this method as appropriate.\n   */\n  public Object getValue() {\n    return null;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/misc/src/java/org/apache/lucene/queryParser/precedence/Token#getValue().mjava","pathOld":"contrib/misc/src/java/org/apache/lucene/queryParser/precedence/Token#getValue().mjava","sourceNew":"  /**\n   * An optional attribute value of the Token.\n   * Tokens which are not used as syntactic sugar will often contain\n   * meaningful values that will be used later on by the compiler or\n   * interpreter. This attribute value is often different from the image.\n   * Any subclass of Token that actually wants to return a non-null value can\n   * override this method as appropriate.\n   */\n  public Object getValue() {\n    return null;\n  }\n\n","sourceOld":"  /**\n   * An optional attribute value of the Token.\n   * Tokens which are not used as syntactic sugar will often contain\n   * meaningful values that will be used later on by the compiler or\n   * interpreter. This attribute value is often different from the image.\n   * Any subclass of Token that actually wants to return a non-null value can\n   * override this method as appropriate.\n   */\n  public Object getValue() {\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"439b0fe2f799d1c722151e88e32bdefad8d34ebe":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["439b0fe2f799d1c722151e88e32bdefad8d34ebe"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["439b0fe2f799d1c722151e88e32bdefad8d34ebe"],"439b0fe2f799d1c722151e88e32bdefad8d34ebe":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}