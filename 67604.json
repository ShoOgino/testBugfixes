{"path":"src/java/org/apache/lucene/analysis/CharArrayMap#rehash().mjava","commits":[{"id":"3c09067bd60a59f680992d62794689898c0148ac","date":1265200673,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/analysis/CharArrayMap#rehash().mjava","pathOld":"/dev/null","sourceNew":"  @SuppressWarnings(\"unchecked\")\n  private void rehash() {\n    assert keys.length == values.length;\n    final int newSize = 2*keys.length;\n    final char[][] oldkeys = keys;\n    final V[] oldvalues = values;\n    keys = new char[newSize][];\n    values = (V[]) new Object[newSize];\n\n    for(int i=0; i<oldkeys.length; i++) {\n      char[] text = oldkeys[i];\n      if (text != null) {\n        // todo: could be faster... no need to compare strings on collision\n        final int slot = getSlot(text,0,text.length);\n        keys[slot] = text;\n        values[slot] = oldvalues[i];\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/analysis/CharArrayMap#rehash().mjava","pathOld":"src/java/org/apache/lucene/analysis/CharArrayMap#rehash().mjava","sourceNew":"  @SuppressWarnings(\"unchecked\")\n  private void rehash() {\n    assert keys.length == values.length;\n    final int newSize = 2*keys.length;\n    final char[][] oldkeys = keys;\n    final V[] oldvalues = values;\n    keys = new char[newSize][];\n    values = (V[]) new Object[newSize];\n\n    for(int i=0; i<oldkeys.length; i++) {\n      char[] text = oldkeys[i];\n      if (text != null) {\n        // todo: could be faster... no need to compare strings on collision\n        final int slot = getSlot(text,0,text.length);\n        keys[slot] = text;\n        values[slot] = oldvalues[i];\n      }\n    }\n  }\n\n","sourceOld":"  @SuppressWarnings(\"unchecked\")\n  private void rehash() {\n    assert keys.length == values.length;\n    final int newSize = 2*keys.length;\n    final char[][] oldkeys = keys;\n    final V[] oldvalues = values;\n    keys = new char[newSize][];\n    values = (V[]) new Object[newSize];\n\n    for(int i=0; i<oldkeys.length; i++) {\n      char[] text = oldkeys[i];\n      if (text != null) {\n        // todo: could be faster... no need to compare strings on collision\n        final int slot = getSlot(text,0,text.length);\n        keys[slot] = text;\n        values[slot] = oldvalues[i];\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3c09067bd60a59f680992d62794689898c0148ac":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["3c09067bd60a59f680992d62794689898c0148ac"]},"commit2Childs":{"3c09067bd60a59f680992d62794689898c0148ac":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3c09067bd60a59f680992d62794689898c0148ac"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}