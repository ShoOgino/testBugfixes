{"path":"lucene/facet/src/java/org/apache/lucene/util/collections/IntToObjectMap#containsValue(Object).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/util/collections/IntToObjectMap#containsValue(Object).mjava","pathOld":"modules/facet/src/java/org/apache/lucene/util/collections/IntToObjectMap#containsValue(Object).mjava","sourceNew":"  /**\n   * Checks if the given object exists in the map.<br>\n   * This method iterates over the collection, trying to find an equal object.\n   * \n   * @param o\n   *            object that is checked against the map data.\n   * @return true if the object exists in the map (in .equals() meaning).\n   *         false otherwise.\n   */\n  public boolean containsValue(Object o) {\n    for (Iterator<T> iterator = iterator(); iterator.hasNext();) {\n      T object = iterator.next();\n      if (object.equals(o)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n","sourceOld":"  /**\n   * Checks if the given object exists in the map.<br>\n   * This method iterates over the collection, trying to find an equal object.\n   * \n   * @param o\n   *            object that is checked against the map data.\n   * @return true if the object exists in the map (in .equals() meaning).\n   *         false otherwise.\n   */\n  public boolean containsValue(Object o) {\n    for (Iterator<T> iterator = iterator(); iterator.hasNext();) {\n      T object = iterator.next();\n      if (object.equals(o)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"607428da722dcb3e86bbd11c63de8986e6275c36","date":1360334150,"type":5,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/collections/IntToObjectMap#containsValue(Object).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/util/collections/IntToObjectMap#containsValue(Object).mjava","sourceNew":"  /**\n   * Checks if the given object exists in the map.<br>\n   * This method iterates over the collection, trying to find an equal object.\n   * \n   * @param o\n   *            object that is checked against the map data.\n   * @return true if the object exists in the map (in .equals() meaning).\n   *         false otherwise.\n   */\n  public boolean containsValue(Object o) {\n    for (Iterator<T> iterator = iterator(); iterator.hasNext();) {\n      T object = iterator.next();\n      if (object.equals(o)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n","sourceOld":"  /**\n   * Checks if the given object exists in the map.<br>\n   * This method iterates over the collection, trying to find an equal object.\n   * \n   * @param o\n   *            object that is checked against the map data.\n   * @return true if the object exists in the map (in .equals() meaning).\n   *         false otherwise.\n   */\n  public boolean containsValue(Object o) {\n    for (Iterator<T> iterator = iterator(); iterator.hasNext();) {\n      T object = iterator.next();\n      if (object.equals(o)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"607428da722dcb3e86bbd11c63de8986e6275c36":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["607428da722dcb3e86bbd11c63de8986e6275c36"]},"commit2Childs":{"607428da722dcb3e86bbd11c63de8986e6275c36":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["607428da722dcb3e86bbd11c63de8986e6275c36"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}