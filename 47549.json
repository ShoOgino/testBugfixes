{"path":"solr/solrj/src/java/org/apache/solr/cloud/autoscaling/Clause#parseNumber(String,Object).mjava","commits":[{"id":"624157c95774b85ad3edb6e1e623c4736d18a94c","date":1496392341,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/cloud/autoscaling/Clause#parseNumber(String,Object).mjava","pathOld":"/dev/null","sourceNew":"  public static Long parseNumber(String name, Object val) {\n    if (val == null) return null;\n    Number num = 0;\n    if (val instanceof String) {\n      try {\n        num = Long.parseLong((String) val);\n      } catch (NumberFormatException e) {\n        try {\n          num = Double.parseDouble((String) val);\n        } catch (NumberFormatException e1) {\n          throw new RuntimeException(name + \": \" + val + \"not a valid number\", e);\n        }\n      }\n\n    } else if (val instanceof Number) {\n      num = (Number) val;\n    }\n    return num.longValue();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0126e386bbcccd3e2fb0a93ac12c9ea3e4a51c15","date":1496411842,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/cloud/autoscaling/Clause#parseNumber(String,Object).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/cloud/autoscaling/Clause#parseNumber(String,Object).mjava","sourceNew":"  public static Long parseNumber(String name, Object val) {\n    if (val == null) return null;\n    Number num = 0;\n    if (val instanceof String) {\n      try {\n        num = Long.parseLong(((String) val).trim());\n      } catch (NumberFormatException e) {\n        try {\n          num = Double.parseDouble((String) val);\n        } catch (NumberFormatException e1) {\n          throw new RuntimeException(name + \": \" + val + \"not a valid number\", e);\n        }\n      }\n\n    } else if (val instanceof Number) {\n      num = (Number) val;\n    }\n    return num.longValue();\n  }\n\n","sourceOld":"  public static Long parseNumber(String name, Object val) {\n    if (val == null) return null;\n    Number num = 0;\n    if (val instanceof String) {\n      try {\n        num = Long.parseLong((String) val);\n      } catch (NumberFormatException e) {\n        try {\n          num = Double.parseDouble((String) val);\n        } catch (NumberFormatException e1) {\n          throw new RuntimeException(name + \": \" + val + \"not a valid number\", e);\n        }\n      }\n\n    } else if (val instanceof Number) {\n      num = (Number) val;\n    }\n    return num.longValue();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"db505911df79fefd49f29212e44226b35e9e02e1","date":1496414878,"type":5,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/cloud/autoscaling/Clause#parseLong(String,Object).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/cloud/autoscaling/Clause#parseNumber(String,Object).mjava","sourceNew":"  public static Long parseLong(String name, Object val) {\n    if (val == null) return null;\n    if (val instanceof Long) return (Long) val;\n    Number num = null;\n    if (val instanceof String) {\n      try {\n        num = Long.parseLong(((String) val).trim());\n      } catch (NumberFormatException e) {\n        try {\n          num = Double.parseDouble((String) val);\n        } catch (NumberFormatException e1) {\n          throw new RuntimeException(name + \": \" + val + \"not a valid number\", e);\n        }\n      }\n\n    } else if (val instanceof Number) {\n      num = (Number) val;\n    }\n    return num.longValue();\n  }\n\n","sourceOld":"  public static Long parseNumber(String name, Object val) {\n    if (val == null) return null;\n    Number num = 0;\n    if (val instanceof String) {\n      try {\n        num = Long.parseLong(((String) val).trim());\n      } catch (NumberFormatException e) {\n        try {\n          num = Double.parseDouble((String) val);\n        } catch (NumberFormatException e1) {\n          throw new RuntimeException(name + \": \" + val + \"not a valid number\", e);\n        }\n      }\n\n    } else if (val instanceof Number) {\n      num = (Number) val;\n    }\n    return num.longValue();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0126e386bbcccd3e2fb0a93ac12c9ea3e4a51c15":["624157c95774b85ad3edb6e1e623c4736d18a94c"],"db505911df79fefd49f29212e44226b35e9e02e1":["0126e386bbcccd3e2fb0a93ac12c9ea3e4a51c15"],"624157c95774b85ad3edb6e1e623c4736d18a94c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["624157c95774b85ad3edb6e1e623c4736d18a94c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"0126e386bbcccd3e2fb0a93ac12c9ea3e4a51c15":["db505911df79fefd49f29212e44226b35e9e02e1"],"db505911df79fefd49f29212e44226b35e9e02e1":[],"624157c95774b85ad3edb6e1e623c4736d18a94c":["0126e386bbcccd3e2fb0a93ac12c9ea3e4a51c15"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["db505911df79fefd49f29212e44226b35e9e02e1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}