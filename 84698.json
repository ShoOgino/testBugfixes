{"path":"src/java/org/apache/lucene/search/Query#extractTerms(Set).mjava","commits":[{"id":"402061809f3a4629ea0c449e33e9f94a9772f3c3","date":1113967712,"type":0,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/Query#extractTerms(Set).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Expert: adds all terms occuring in this query to the terms set\n   */\n  public void extractTerms(Set terms) {\n    // needs to be implemented by query subclasses\n    throw new UnsupportedOperationException();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"36683b87b7f54ff875ce445351af7b112f09b90f","date":1134328730,"type":3,"author":"Daniel Naber","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/Query#extractTerms(Set).mjava","pathOld":"src/java/org/apache/lucene/search/Query#extractTerms(Set).mjava","sourceNew":"  /**\n   * Expert: adds all terms occuring in this query to the terms set. Only\n   * works if this query is in its {@link #rewrite rewritten} form.\n   * \n   * @throws UnsupportedOperationException if this query is not yet rewritten\n   */\n  public void extractTerms(Set terms) {\n    // needs to be implemented by query subclasses\n    throw new UnsupportedOperationException();\n  }\n\n","sourceOld":"  /**\n   * Expert: adds all terms occuring in this query to the terms set\n   */\n  public void extractTerms(Set terms) {\n    // needs to be implemented by query subclasses\n    throw new UnsupportedOperationException();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"add7d922e63099fbce8f0a1b31216df7ef5067f1","date":1252002701,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/Query#extractTerms(Set).mjava","pathOld":"src/java/org/apache/lucene/search/Query#extractTerms(Set).mjava","sourceNew":"  /**\n   * Expert: adds all terms occurring in this query to the terms set. Only\n   * works if this query is in its {@link #rewrite rewritten} form.\n   * \n   * @throws UnsupportedOperationException if this query is not yet rewritten\n   */\n  public void extractTerms(Set terms) {\n    // needs to be implemented by query subclasses\n    throw new UnsupportedOperationException();\n  }\n\n","sourceOld":"  /**\n   * Expert: adds all terms occuring in this query to the terms set. Only\n   * works if this query is in its {@link #rewrite rewritten} form.\n   * \n   * @throws UnsupportedOperationException if this query is not yet rewritten\n   */\n  public void extractTerms(Set terms) {\n    // needs to be implemented by query subclasses\n    throw new UnsupportedOperationException();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"926f3bcf4f369c1787b283a3cdb13730cf3e788c","date":1255387230,"type":5,"author":"Michael Busch","isMerge":false,"pathNew":"src/java/org/apache/lucene/search/Query#extractTerms(Set[Term]).mjava","pathOld":"src/java/org/apache/lucene/search/Query#extractTerms(Set).mjava","sourceNew":"  /**\n   * Expert: adds all terms occurring in this query to the terms set. Only\n   * works if this query is in its {@link #rewrite rewritten} form.\n   * \n   * @throws UnsupportedOperationException if this query is not yet rewritten\n   */\n  public void extractTerms(Set<Term> terms) {\n    // needs to be implemented by query subclasses\n    throw new UnsupportedOperationException();\n  }\n\n","sourceOld":"  /**\n   * Expert: adds all terms occurring in this query to the terms set. Only\n   * works if this query is in its {@link #rewrite rewritten} form.\n   * \n   * @throws UnsupportedOperationException if this query is not yet rewritten\n   */\n  public void extractTerms(Set terms) {\n    // needs to be implemented by query subclasses\n    throw new UnsupportedOperationException();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"926f3bcf4f369c1787b283a3cdb13730cf3e788c":["add7d922e63099fbce8f0a1b31216df7ef5067f1"],"402061809f3a4629ea0c449e33e9f94a9772f3c3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"add7d922e63099fbce8f0a1b31216df7ef5067f1":["36683b87b7f54ff875ce445351af7b112f09b90f"],"36683b87b7f54ff875ce445351af7b112f09b90f":["402061809f3a4629ea0c449e33e9f94a9772f3c3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["926f3bcf4f369c1787b283a3cdb13730cf3e788c"]},"commit2Childs":{"926f3bcf4f369c1787b283a3cdb13730cf3e788c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"402061809f3a4629ea0c449e33e9f94a9772f3c3":["36683b87b7f54ff875ce445351af7b112f09b90f"],"add7d922e63099fbce8f0a1b31216df7ef5067f1":["926f3bcf4f369c1787b283a3cdb13730cf3e788c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["402061809f3a4629ea0c449e33e9f94a9772f3c3"],"36683b87b7f54ff875ce445351af7b112f09b90f":["add7d922e63099fbce8f0a1b31216df7ef5067f1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}