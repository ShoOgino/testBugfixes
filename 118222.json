{"path":"lucene/contrib/analyzers/common/src/test/org/apache/lucene/analysis/commongrams/CommonGramsFilterTest#testCaseSensitive().mjava","commits":[{"id":"116545389190ea5d0d9a35977d09ef0fe49716ac","date":1272959441,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/analyzers/common/src/test/org/apache/lucene/analysis/commongrams/CommonGramsFilterTest#testCaseSensitive().mjava","pathOld":"solr/src/test/org/apache/solr/analysis/CommonGramsFilterTest#testCaseSensitive().mjava","sourceNew":"  /**\n   * Test that CommonGramsFilter works correctly in case-insensitive mode\n   */\n  public void testCaseSensitive() throws Exception {\n    final String input = \"How The s a brown s cow d like A B thing?\";\n    WhitespaceTokenizer wt = new WhitespaceTokenizer(TEST_VERSION_CURRENT, new StringReader(input));\n    Set common = CommonGramsFilter.makeCommonSet(commonWords);\n    TokenFilter cgf = new CommonGramsFilter(wt, common, false);\n    assertTokenStreamContents(cgf, new String[] {\"How\", \"The\", \"The_s\", \"s\",\n        \"s_a\", \"a\", \"a_brown\", \"brown\", \"brown_s\", \"s\", \"s_cow\", \"cow\",\n        \"cow_d\", \"d\", \"d_like\", \"like\", \"A\", \"B\", \"thing?\"});\n  }\n\n","sourceOld":"  /**\n   * Test that CommonGramsFilter works correctly in case-insensitive mode\n   */\n  public void testCaseSensitive() throws Exception {\n    final String input = \"How The s a brown s cow d like A B thing?\";\n    WhitespaceTokenizer wt = new WhitespaceTokenizer(DEFAULT_VERSION, new StringReader(input));\n    Set common = CommonGramsFilter.makeCommonSet(commonWords);\n    TokenFilter cgf = new CommonGramsFilter(wt, common, false);\n    assertTokenStreamContents(cgf, new String[] {\"How\", \"The\", \"The_s\", \"s\",\n        \"s_a\", \"a\", \"a_brown\", \"brown\", \"brown_s\", \"s\", \"s_cow\", \"cow\",\n        \"cow_d\", \"d\", \"d_like\", \"like\", \"A\", \"B\", \"thing?\"});\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f080986da691a3bba7b757f43ab72cdc82b57ce","date":1273069619,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/commongrams/CommonGramsFilterTest#testCaseSensitive().mjava","pathOld":"lucene/contrib/analyzers/common/src/test/org/apache/lucene/analysis/commongrams/CommonGramsFilterTest#testCaseSensitive().mjava","sourceNew":"  /**\n   * Test that CommonGramsFilter works correctly in case-insensitive mode\n   */\n  public void testCaseSensitive() throws Exception {\n    final String input = \"How The s a brown s cow d like A B thing?\";\n    WhitespaceTokenizer wt = new WhitespaceTokenizer(TEST_VERSION_CURRENT, new StringReader(input));\n    Set common = CommonGramsFilter.makeCommonSet(commonWords);\n    TokenFilter cgf = new CommonGramsFilter(wt, common, false);\n    assertTokenStreamContents(cgf, new String[] {\"How\", \"The\", \"The_s\", \"s\",\n        \"s_a\", \"a\", \"a_brown\", \"brown\", \"brown_s\", \"s\", \"s_cow\", \"cow\",\n        \"cow_d\", \"d\", \"d_like\", \"like\", \"A\", \"B\", \"thing?\"});\n  }\n\n","sourceOld":"  /**\n   * Test that CommonGramsFilter works correctly in case-insensitive mode\n   */\n  public void testCaseSensitive() throws Exception {\n    final String input = \"How The s a brown s cow d like A B thing?\";\n    WhitespaceTokenizer wt = new WhitespaceTokenizer(TEST_VERSION_CURRENT, new StringReader(input));\n    Set common = CommonGramsFilter.makeCommonSet(commonWords);\n    TokenFilter cgf = new CommonGramsFilter(wt, common, false);\n    assertTokenStreamContents(cgf, new String[] {\"How\", \"The\", \"The_s\", \"s\",\n        \"s_a\", \"a\", \"a_brown\", \"brown\", \"brown_s\", \"s\", \"s_cow\", \"cow\",\n        \"cow_d\", \"d\", \"d_like\", \"like\", \"A\", \"B\", \"thing?\"});\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"116545389190ea5d0d9a35977d09ef0fe49716ac":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["116545389190ea5d0d9a35977d09ef0fe49716ac"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0f080986da691a3bba7b757f43ab72cdc82b57ce"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["116545389190ea5d0d9a35977d09ef0fe49716ac"],"116545389190ea5d0d9a35977d09ef0fe49716ac":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}