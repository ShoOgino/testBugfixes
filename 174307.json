{"path":"lucene/analysis/common/src/test/org/apache/lucene/analysis/synonym/TestSynonymGraphFilter#testRandomGraphAfter().mjava","commits":[{"id":"24a98f5fdd23e04f85819dbc63b47a12f7c44311","date":1482439157,"type":0,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/synonym/TestSynonymGraphFilter#testRandomGraphAfter().mjava","pathOld":"/dev/null","sourceNew":"  // Adds MockGraphTokenFilter after SynFilter:\n  public void testRandomGraphAfter() throws Exception {\n    final int numIters = atLeast(3);\n    for (int i = 0; i < numIters; i++) {\n      SynonymMap.Builder b = new SynonymMap.Builder(random().nextBoolean());\n      final int numEntries = atLeast(10);\n      for (int j = 0; j < numEntries; j++) {\n        add(b, randomNonEmptyString(), randomNonEmptyString(), random().nextBoolean());\n      }\n      final SynonymMap map = b.build();\n      final boolean ignoreCase = random().nextBoolean();\n      final boolean doFlatten = random().nextBoolean();\n      \n      final Analyzer analyzer = new Analyzer() {\n        @Override\n        protected TokenStreamComponents createComponents(String fieldName) {\n          Tokenizer tokenizer = new MockTokenizer(MockTokenizer.SIMPLE, true);\n          TokenStream syns = new SynonymGraphFilter(tokenizer, map, ignoreCase);\n          TokenStream graph = new MockGraphTokenFilter(random(), syns);\n          if (doFlatten) {\n            graph = new FlattenGraphFilter(graph);\n          }\n          return new TokenStreamComponents(tokenizer, graph);\n        }\n      };\n\n      checkRandomData(random(), analyzer, 100);\n      analyzer.close();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f03e4bed5023ec3ef93a771b8888cae991cf448d","date":1483469262,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/synonym/TestSynonymGraphFilter#testRandomGraphAfter().mjava","pathOld":"/dev/null","sourceNew":"  // Adds MockGraphTokenFilter after SynFilter:\n  public void testRandomGraphAfter() throws Exception {\n    final int numIters = atLeast(3);\n    for (int i = 0; i < numIters; i++) {\n      SynonymMap.Builder b = new SynonymMap.Builder(random().nextBoolean());\n      final int numEntries = atLeast(10);\n      for (int j = 0; j < numEntries; j++) {\n        add(b, randomNonEmptyString(), randomNonEmptyString(), random().nextBoolean());\n      }\n      final SynonymMap map = b.build();\n      final boolean ignoreCase = random().nextBoolean();\n      final boolean doFlatten = random().nextBoolean();\n      \n      final Analyzer analyzer = new Analyzer() {\n        @Override\n        protected TokenStreamComponents createComponents(String fieldName) {\n          Tokenizer tokenizer = new MockTokenizer(MockTokenizer.SIMPLE, true);\n          TokenStream syns = new SynonymGraphFilter(tokenizer, map, ignoreCase);\n          TokenStream graph = new MockGraphTokenFilter(random(), syns);\n          if (doFlatten) {\n            graph = new FlattenGraphFilter(graph);\n          }\n          return new TokenStreamComponents(tokenizer, graph);\n        }\n      };\n\n      checkRandomData(random(), analyzer, 100);\n      analyzer.close();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"24a98f5fdd23e04f85819dbc63b47a12f7c44311":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["24a98f5fdd23e04f85819dbc63b47a12f7c44311"],"f03e4bed5023ec3ef93a771b8888cae991cf448d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","24a98f5fdd23e04f85819dbc63b47a12f7c44311"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["24a98f5fdd23e04f85819dbc63b47a12f7c44311","f03e4bed5023ec3ef93a771b8888cae991cf448d"],"24a98f5fdd23e04f85819dbc63b47a12f7c44311":["cd5edd1f2b162a5cfa08efd17851a07373a96817","f03e4bed5023ec3ef93a771b8888cae991cf448d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"f03e4bed5023ec3ef93a771b8888cae991cf448d":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","f03e4bed5023ec3ef93a771b8888cae991cf448d"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}