{"path":"lucene/core/src/test/org/apache/lucene/index/TestMultiFields#testTermDocsEnum().mjava","commits":[{"id":"e19625838dd1a85a437128a16e58c33c668a810d","date":1344529148,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestMultiFields#testTermDocsEnum().mjava","pathOld":"/dev/null","sourceNew":"  public void testTermDocsEnum() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    Document d = new Document();\n    d.add(newStringField(\"f\", \"j\", Field.Store.NO));\n    w.addDocument(d);\n    w.commit();\n    w.addDocument(d);\n    IndexReader r = w.getReader();\n    w.close();\n    DocsEnum de = MultiFields.getTermDocsEnum(r, null, \"f\", new BytesRef(\"j\"));\n    assertEquals(0, de.nextDoc());\n    assertEquals(1, de.nextDoc());\n    assertEquals(DocIdSetIterator.NO_MORE_DOCS, de.nextDoc());\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7869f64c874ebf7f317d22c00baf2b6857797a6","date":1344856617,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestMultiFields#testTermDocsEnum().mjava","pathOld":"/dev/null","sourceNew":"  public void testTermDocsEnum() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    Document d = new Document();\n    d.add(newStringField(\"f\", \"j\", Field.Store.NO));\n    w.addDocument(d);\n    w.commit();\n    w.addDocument(d);\n    IndexReader r = w.getReader();\n    w.close();\n    DocsEnum de = MultiFields.getTermDocsEnum(r, null, \"f\", new BytesRef(\"j\"));\n    assertEquals(0, de.nextDoc());\n    assertEquals(1, de.nextDoc());\n    assertEquals(DocIdSetIterator.NO_MORE_DOCS, de.nextDoc());\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9","date":1344867506,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestMultiFields#testTermDocsEnum().mjava","pathOld":"/dev/null","sourceNew":"  public void testTermDocsEnum() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    Document d = new Document();\n    d.add(newStringField(\"f\", \"j\", Field.Store.NO));\n    w.addDocument(d);\n    w.commit();\n    w.addDocument(d);\n    IndexReader r = w.getReader();\n    w.close();\n    DocsEnum de = MultiFields.getTermDocsEnum(r, null, \"f\", new BytesRef(\"j\"));\n    assertEquals(0, de.nextDoc());\n    assertEquals(1, de.nextDoc());\n    assertEquals(DocIdSetIterator.NO_MORE_DOCS, de.nextDoc());\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestMultiFields#testTermDocsEnum().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestMultiFields#testTermDocsEnum().mjava","sourceNew":"  public void testTermDocsEnum() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    Document d = new Document();\n    d.add(newStringField(\"f\", \"j\", Field.Store.NO));\n    w.addDocument(d);\n    w.commit();\n    w.addDocument(d);\n    IndexReader r = w.getReader();\n    w.shutdown();\n    DocsEnum de = MultiFields.getTermDocsEnum(r, null, \"f\", new BytesRef(\"j\"));\n    assertEquals(0, de.nextDoc());\n    assertEquals(1, de.nextDoc());\n    assertEquals(DocIdSetIterator.NO_MORE_DOCS, de.nextDoc());\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testTermDocsEnum() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    Document d = new Document();\n    d.add(newStringField(\"f\", \"j\", Field.Store.NO));\n    w.addDocument(d);\n    w.commit();\n    w.addDocument(d);\n    IndexReader r = w.getReader();\n    w.close();\n    DocsEnum de = MultiFields.getTermDocsEnum(r, null, \"f\", new BytesRef(\"j\"));\n    assertEquals(0, de.nextDoc());\n    assertEquals(1, de.nextDoc());\n    assertEquals(DocIdSetIterator.NO_MORE_DOCS, de.nextDoc());\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e","date":1406737224,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestMultiFields#testTermDocsEnum().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestMultiFields#testTermDocsEnum().mjava","sourceNew":"  public void testTermDocsEnum() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random())));\n    Document d = new Document();\n    d.add(newStringField(\"f\", \"j\", Field.Store.NO));\n    w.addDocument(d);\n    w.commit();\n    w.addDocument(d);\n    IndexReader r = w.getReader();\n    w.shutdown();\n    DocsEnum de = MultiFields.getTermDocsEnum(r, null, \"f\", new BytesRef(\"j\"));\n    assertEquals(0, de.nextDoc());\n    assertEquals(1, de.nextDoc());\n    assertEquals(DocIdSetIterator.NO_MORE_DOCS, de.nextDoc());\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testTermDocsEnum() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig( TEST_VERSION_CURRENT, new MockAnalyzer(random())));\n    Document d = new Document();\n    d.add(newStringField(\"f\", \"j\", Field.Store.NO));\n    w.addDocument(d);\n    w.commit();\n    w.addDocument(d);\n    IndexReader r = w.getReader();\n    w.shutdown();\n    DocsEnum de = MultiFields.getTermDocsEnum(r, null, \"f\", new BytesRef(\"j\"));\n    assertEquals(0, de.nextDoc());\n    assertEquals(1, de.nextDoc());\n    assertEquals(DocIdSetIterator.NO_MORE_DOCS, de.nextDoc());\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestMultiFields#testTermDocsEnum().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestMultiFields#testTermDocsEnum().mjava","sourceNew":"  public void testTermDocsEnum() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random())));\n    Document d = new Document();\n    d.add(newStringField(\"f\", \"j\", Field.Store.NO));\n    w.addDocument(d);\n    w.commit();\n    w.addDocument(d);\n    IndexReader r = w.getReader();\n    w.close();\n    DocsEnum de = MultiFields.getTermDocsEnum(r, null, \"f\", new BytesRef(\"j\"));\n    assertEquals(0, de.nextDoc());\n    assertEquals(1, de.nextDoc());\n    assertEquals(DocIdSetIterator.NO_MORE_DOCS, de.nextDoc());\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testTermDocsEnum() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random())));\n    Document d = new Document();\n    d.add(newStringField(\"f\", \"j\", Field.Store.NO));\n    w.addDocument(d);\n    w.commit();\n    w.addDocument(d);\n    IndexReader r = w.getReader();\n    w.shutdown();\n    DocsEnum de = MultiFields.getTermDocsEnum(r, null, \"f\", new BytesRef(\"j\"));\n    assertEquals(0, de.nextDoc());\n    assertEquals(1, de.nextDoc());\n    assertEquals(DocIdSetIterator.NO_MORE_DOCS, de.nextDoc());\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"51f5280f31484820499077f41fcdfe92d527d9dc","date":1423229122,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestMultiFields#testTermDocsEnum().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestMultiFields#testTermDocsEnum().mjava","sourceNew":"  public void testTermDocsEnum() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random())));\n    Document d = new Document();\n    d.add(newStringField(\"f\", \"j\", Field.Store.NO));\n    w.addDocument(d);\n    w.commit();\n    w.addDocument(d);\n    IndexReader r = w.getReader();\n    w.close();\n    PostingsEnum de = MultiFields.getTermDocsEnum(r, null, \"f\", new BytesRef(\"j\"));\n    assertEquals(0, de.nextDoc());\n    assertEquals(1, de.nextDoc());\n    assertEquals(DocIdSetIterator.NO_MORE_DOCS, de.nextDoc());\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testTermDocsEnum() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random())));\n    Document d = new Document();\n    d.add(newStringField(\"f\", \"j\", Field.Store.NO));\n    w.addDocument(d);\n    w.commit();\n    w.addDocument(d);\n    IndexReader r = w.getReader();\n    w.close();\n    DocsEnum de = MultiFields.getTermDocsEnum(r, null, \"f\", new BytesRef(\"j\"));\n    assertEquals(0, de.nextDoc());\n    assertEquals(1, de.nextDoc());\n    assertEquals(DocIdSetIterator.NO_MORE_DOCS, de.nextDoc());\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f4464508ee83288c8c4585b533f9faaa93aa314","date":1435240759,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestMultiFields#testTermDocsEnum().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestMultiFields#testTermDocsEnum().mjava","sourceNew":"  public void testTermDocsEnum() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random())));\n    Document d = new Document();\n    d.add(newStringField(\"f\", \"j\", Field.Store.NO));\n    w.addDocument(d);\n    w.commit();\n    w.addDocument(d);\n    IndexReader r = w.getReader();\n    w.close();\n    PostingsEnum de = MultiFields.getTermDocsEnum(r, \"f\", new BytesRef(\"j\"));\n    assertEquals(0, de.nextDoc());\n    assertEquals(1, de.nextDoc());\n    assertEquals(DocIdSetIterator.NO_MORE_DOCS, de.nextDoc());\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testTermDocsEnum() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random())));\n    Document d = new Document();\n    d.add(newStringField(\"f\", \"j\", Field.Store.NO));\n    w.addDocument(d);\n    w.commit();\n    w.addDocument(d);\n    IndexReader r = w.getReader();\n    w.close();\n    PostingsEnum de = MultiFields.getTermDocsEnum(r, null, \"f\", new BytesRef(\"j\"));\n    assertEquals(0, de.nextDoc());\n    assertEquals(1, de.nextDoc());\n    assertEquals(DocIdSetIterator.NO_MORE_DOCS, de.nextDoc());\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"04e775de416dd2d8067b10db1c8af975a1d5017e","date":1539906554,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestMultiFields#testTermDocsEnum().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestMultiFields#testTermDocsEnum().mjava","sourceNew":"  public void testTermDocsEnum() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random())));\n    Document d = new Document();\n    d.add(newStringField(\"f\", \"j\", Field.Store.NO));\n    w.addDocument(d);\n    w.commit();\n    w.addDocument(d);\n    IndexReader r = w.getReader();\n    w.close();\n    PostingsEnum de = MultiTerms.getTermPostingsEnum(r, \"f\", new BytesRef(\"j\"), (int) PostingsEnum.FREQS);\n    assertEquals(0, de.nextDoc());\n    assertEquals(1, de.nextDoc());\n    assertEquals(DocIdSetIterator.NO_MORE_DOCS, de.nextDoc());\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  public void testTermDocsEnum() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriter w = new IndexWriter(dir, newIndexWriterConfig(new MockAnalyzer(random())));\n    Document d = new Document();\n    d.add(newStringField(\"f\", \"j\", Field.Store.NO));\n    w.addDocument(d);\n    w.commit();\n    w.addDocument(d);\n    IndexReader r = w.getReader();\n    w.close();\n    PostingsEnum de = MultiFields.getTermDocsEnum(r, \"f\", new BytesRef(\"j\"));\n    assertEquals(0, de.nextDoc());\n    assertEquals(1, de.nextDoc());\n    assertEquals(DocIdSetIterator.NO_MORE_DOCS, de.nextDoc());\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e19625838dd1a85a437128a16e58c33c668a810d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"0f4464508ee83288c8c4585b533f9faaa93aa314":["51f5280f31484820499077f41fcdfe92d527d9dc"],"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"c7869f64c874ebf7f317d22c00baf2b6857797a6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","e19625838dd1a85a437128a16e58c33c668a810d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d0ef034a4f10871667ae75181537775ddcf8ade4":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"04e775de416dd2d8067b10db1c8af975a1d5017e":["0f4464508ee83288c8c4585b533f9faaa93aa314"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["e19625838dd1a85a437128a16e58c33c668a810d"],"51f5280f31484820499077f41fcdfe92d527d9dc":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","e19625838dd1a85a437128a16e58c33c668a810d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["04e775de416dd2d8067b10db1c8af975a1d5017e"]},"commit2Childs":{"e19625838dd1a85a437128a16e58c33c668a810d":["c7869f64c874ebf7f317d22c00baf2b6857797a6","ae14298f4eec6d5faee6a149f88ba57d14a6f21a","d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9"],"0f4464508ee83288c8c4585b533f9faaa93aa314":["04e775de416dd2d8067b10db1c8af975a1d5017e"],"54a6bea0b991120a99ad0e2f72ae853fd5ecae0e":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"c7869f64c874ebf7f317d22c00baf2b6857797a6":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e19625838dd1a85a437128a16e58c33c668a810d","c7869f64c874ebf7f317d22c00baf2b6857797a6","d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["51f5280f31484820499077f41fcdfe92d527d9dc"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["54a6bea0b991120a99ad0e2f72ae853fd5ecae0e"],"04e775de416dd2d8067b10db1c8af975a1d5017e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"51f5280f31484820499077f41fcdfe92d527d9dc":["0f4464508ee83288c8c4585b533f9faaa93aa314"],"d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c7869f64c874ebf7f317d22c00baf2b6857797a6","d0ba34ddeec9e4ab657150c29a5614a7bfbb53c9","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}