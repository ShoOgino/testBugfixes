{"path":"lucene/core/src/java/org/apache/lucene/search/IndexSearcher#IndexSearcher(IndexReader,ExecutorService).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/IndexSearcher#IndexSearcher(IndexReader,ExecutorService).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/IndexSearcher#IndexSearcher(IndexReader,ExecutorService).mjava","sourceNew":"  /** Runs searches for each segment separately, using the\n   *  provided ExecutorService.  IndexSearcher will not\n   *  shutdown/awaitTermination this ExecutorService on\n   *  close; you must do so, eventually, on your own.  NOTE:\n   *  if you are using {@link NIOFSDirectory}, do not use\n   *  the shutdownNow method of ExecutorService as this uses\n   *  Thread.interrupt under-the-hood which can silently\n   *  close file descriptors (see <a\n   *  href=\"https://issues.apache.org/jira/browse/LUCENE-2239\">LUCENE-2239</a>).\n   * \n   * @lucene.experimental */\n  public IndexSearcher(IndexReader r, ExecutorService executor) {\n    this(r.getTopReaderContext(), executor);\n  }\n\n","sourceOld":"  /** Runs searches for each segment separately, using the\n   *  provided ExecutorService.  IndexSearcher will not\n   *  shutdown/awaitTermination this ExecutorService on\n   *  close; you must do so, eventually, on your own.  NOTE:\n   *  if you are using {@link NIOFSDirectory}, do not use\n   *  the shutdownNow method of ExecutorService as this uses\n   *  Thread.interrupt under-the-hood which can silently\n   *  close file descriptors (see <a\n   *  href=\"https://issues.apache.org/jira/browse/LUCENE-2239\">LUCENE-2239</a>).\n   * \n   * @lucene.experimental */\n  public IndexSearcher(IndexReader r, ExecutorService executor) {\n    this(r.getTopReaderContext(), executor);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"211b1506e56f7860762fbd4698f6d1d1b57f672c","date":1344976996,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/IndexSearcher#IndexSearcher(IndexReader,ExecutorService).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/IndexSearcher#IndexSearcher(IndexReader,ExecutorService).mjava","sourceNew":"  /** Runs searches for each segment separately, using the\n   *  provided ExecutorService.  IndexSearcher will not\n   *  shutdown/awaitTermination this ExecutorService on\n   *  close; you must do so, eventually, on your own.  NOTE:\n   *  if you are using {@link NIOFSDirectory}, do not use\n   *  the shutdownNow method of ExecutorService as this uses\n   *  Thread.interrupt under-the-hood which can silently\n   *  close file descriptors (see <a\n   *  href=\"https://issues.apache.org/jira/browse/LUCENE-2239\">LUCENE-2239</a>).\n   * \n   * @lucene.experimental */\n  public IndexSearcher(IndexReader r, ExecutorService executor) {\n    this(r.getContext(), executor);\n  }\n\n","sourceOld":"  /** Runs searches for each segment separately, using the\n   *  provided ExecutorService.  IndexSearcher will not\n   *  shutdown/awaitTermination this ExecutorService on\n   *  close; you must do so, eventually, on your own.  NOTE:\n   *  if you are using {@link NIOFSDirectory}, do not use\n   *  the shutdownNow method of ExecutorService as this uses\n   *  Thread.interrupt under-the-hood which can silently\n   *  close file descriptors (see <a\n   *  href=\"https://issues.apache.org/jira/browse/LUCENE-2239\">LUCENE-2239</a>).\n   * \n   * @lucene.experimental */\n  public IndexSearcher(IndexReader r, ExecutorService executor) {\n    this(r.getTopReaderContext(), executor);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c1fe8ee1a5a1ef00a9c4793ec26f17bd90342198","date":1345029782,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/IndexSearcher#IndexSearcher(IndexReader,ExecutorService).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/IndexSearcher#IndexSearcher(IndexReader,ExecutorService).mjava","sourceNew":"  /** Runs searches for each segment separately, using the\n   *  provided ExecutorService.  IndexSearcher will not\n   *  shutdown/awaitTermination this ExecutorService on\n   *  close; you must do so, eventually, on your own.  NOTE:\n   *  if you are using {@link NIOFSDirectory}, do not use\n   *  the shutdownNow method of ExecutorService as this uses\n   *  Thread.interrupt under-the-hood which can silently\n   *  close file descriptors (see <a\n   *  href=\"https://issues.apache.org/jira/browse/LUCENE-2239\">LUCENE-2239</a>).\n   * \n   * @lucene.experimental */\n  public IndexSearcher(IndexReader r, ExecutorService executor) {\n    this(r.getContext(), executor);\n  }\n\n","sourceOld":"  /** Runs searches for each segment separately, using the\n   *  provided ExecutorService.  IndexSearcher will not\n   *  shutdown/awaitTermination this ExecutorService on\n   *  close; you must do so, eventually, on your own.  NOTE:\n   *  if you are using {@link NIOFSDirectory}, do not use\n   *  the shutdownNow method of ExecutorService as this uses\n   *  Thread.interrupt under-the-hood which can silently\n   *  close file descriptors (see <a\n   *  href=\"https://issues.apache.org/jira/browse/LUCENE-2239\">LUCENE-2239</a>).\n   * \n   * @lucene.experimental */\n  public IndexSearcher(IndexReader r, ExecutorService executor) {\n    this(r.getTopReaderContext(), executor);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3c188105a9aae04f56c24996f98f8333fc825d2e","date":1345031914,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/IndexSearcher#IndexSearcher(IndexReader,ExecutorService).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/IndexSearcher#IndexSearcher(IndexReader,ExecutorService).mjava","sourceNew":"  /** Runs searches for each segment separately, using the\n   *  provided ExecutorService.  IndexSearcher will not\n   *  shutdown/awaitTermination this ExecutorService on\n   *  close; you must do so, eventually, on your own.  NOTE:\n   *  if you are using {@link NIOFSDirectory}, do not use\n   *  the shutdownNow method of ExecutorService as this uses\n   *  Thread.interrupt under-the-hood which can silently\n   *  close file descriptors (see <a\n   *  href=\"https://issues.apache.org/jira/browse/LUCENE-2239\">LUCENE-2239</a>).\n   * \n   * @lucene.experimental */\n  public IndexSearcher(IndexReader r, ExecutorService executor) {\n    this(r.getContext(), executor);\n  }\n\n","sourceOld":"  /** Runs searches for each segment separately, using the\n   *  provided ExecutorService.  IndexSearcher will not\n   *  shutdown/awaitTermination this ExecutorService on\n   *  close; you must do so, eventually, on your own.  NOTE:\n   *  if you are using {@link NIOFSDirectory}, do not use\n   *  the shutdownNow method of ExecutorService as this uses\n   *  Thread.interrupt under-the-hood which can silently\n   *  close file descriptors (see <a\n   *  href=\"https://issues.apache.org/jira/browse/LUCENE-2239\">LUCENE-2239</a>).\n   * \n   * @lucene.experimental */\n  public IndexSearcher(IndexReader r, ExecutorService executor) {\n    this(r.getTopReaderContext(), executor);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1c93396a1df03720cb20e2c2f513a6fa59b21e4c","date":1345032673,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/IndexSearcher#IndexSearcher(IndexReader,ExecutorService).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/IndexSearcher#IndexSearcher(IndexReader,ExecutorService).mjava","sourceNew":"  /** Runs searches for each segment separately, using the\n   *  provided ExecutorService.  IndexSearcher will not\n   *  shutdown/awaitTermination this ExecutorService on\n   *  close; you must do so, eventually, on your own.  NOTE:\n   *  if you are using {@link NIOFSDirectory}, do not use\n   *  the shutdownNow method of ExecutorService as this uses\n   *  Thread.interrupt under-the-hood which can silently\n   *  close file descriptors (see <a\n   *  href=\"https://issues.apache.org/jira/browse/LUCENE-2239\">LUCENE-2239</a>).\n   * \n   * @lucene.experimental */\n  public IndexSearcher(IndexReader r, ExecutorService executor) {\n    this(r.getTopReaderContext(), executor);\n  }\n\n","sourceOld":"  /** Runs searches for each segment separately, using the\n   *  provided ExecutorService.  IndexSearcher will not\n   *  shutdown/awaitTermination this ExecutorService on\n   *  close; you must do so, eventually, on your own.  NOTE:\n   *  if you are using {@link NIOFSDirectory}, do not use\n   *  the shutdownNow method of ExecutorService as this uses\n   *  Thread.interrupt under-the-hood which can silently\n   *  close file descriptors (see <a\n   *  href=\"https://issues.apache.org/jira/browse/LUCENE-2239\">LUCENE-2239</a>).\n   * \n   * @lucene.experimental */\n  public IndexSearcher(IndexReader r, ExecutorService executor) {\n    this(r.getContext(), executor);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b05c56a41b733e02a189c48895922b5bd8c7f3d1","date":1345033322,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/IndexSearcher#IndexSearcher(IndexReader,ExecutorService).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/IndexSearcher#IndexSearcher(IndexReader,ExecutorService).mjava","sourceNew":"  /** Runs searches for each segment separately, using the\n   *  provided ExecutorService.  IndexSearcher will not\n   *  shutdown/awaitTermination this ExecutorService on\n   *  close; you must do so, eventually, on your own.  NOTE:\n   *  if you are using {@link NIOFSDirectory}, do not use\n   *  the shutdownNow method of ExecutorService as this uses\n   *  Thread.interrupt under-the-hood which can silently\n   *  close file descriptors (see <a\n   *  href=\"https://issues.apache.org/jira/browse/LUCENE-2239\">LUCENE-2239</a>).\n   * \n   * @lucene.experimental */\n  public IndexSearcher(IndexReader r, ExecutorService executor) {\n    this(r.getContext(), executor);\n  }\n\n","sourceOld":"  /** Runs searches for each segment separately, using the\n   *  provided ExecutorService.  IndexSearcher will not\n   *  shutdown/awaitTermination this ExecutorService on\n   *  close; you must do so, eventually, on your own.  NOTE:\n   *  if you are using {@link NIOFSDirectory}, do not use\n   *  the shutdownNow method of ExecutorService as this uses\n   *  Thread.interrupt under-the-hood which can silently\n   *  close file descriptors (see <a\n   *  href=\"https://issues.apache.org/jira/browse/LUCENE-2239\">LUCENE-2239</a>).\n   * \n   * @lucene.experimental */\n  public IndexSearcher(IndexReader r, ExecutorService executor) {\n    this(r.getTopReaderContext(), executor);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/IndexSearcher#IndexSearcher(IndexReader,ExecutorService).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/IndexSearcher#IndexSearcher(IndexReader,ExecutorService).mjava","sourceNew":"  /** Runs searches for each segment separately, using the\n   *  provided ExecutorService.  IndexSearcher will not\n   *  close/awaitTermination this ExecutorService on\n   *  close; you must do so, eventually, on your own.  NOTE:\n   *  if you are using {@link NIOFSDirectory}, do not use\n   *  the shutdownNow method of ExecutorService as this uses\n   *  Thread.interrupt under-the-hood which can silently\n   *  close file descriptors (see <a\n   *  href=\"https://issues.apache.org/jira/browse/LUCENE-2239\">LUCENE-2239</a>).\n   * \n   * @lucene.experimental */\n  public IndexSearcher(IndexReader r, ExecutorService executor) {\n    this(r.getContext(), executor);\n  }\n\n","sourceOld":"  /** Runs searches for each segment separately, using the\n   *  provided ExecutorService.  IndexSearcher will not\n   *  shutdown/awaitTermination this ExecutorService on\n   *  close; you must do so, eventually, on your own.  NOTE:\n   *  if you are using {@link NIOFSDirectory}, do not use\n   *  the shutdownNow method of ExecutorService as this uses\n   *  Thread.interrupt under-the-hood which can silently\n   *  close file descriptors (see <a\n   *  href=\"https://issues.apache.org/jira/browse/LUCENE-2239\">LUCENE-2239</a>).\n   * \n   * @lucene.experimental */\n  public IndexSearcher(IndexReader r, ExecutorService executor) {\n    this(r.getContext(), executor);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"692c45378601dcea39367ca75ae7d34ceed0aae3","date":1561033600,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/IndexSearcher#IndexSearcher(IndexReader,Executor).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/IndexSearcher#IndexSearcher(IndexReader,ExecutorService).mjava","sourceNew":"  /** Runs searches for each segment separately, using the\n   *  provided Executor. NOTE:\n   *  if you are using {@link NIOFSDirectory}, do not use\n   *  the shutdownNow method of ExecutorService as this uses\n   *  Thread.interrupt under-the-hood which can silently\n   *  close file descriptors (see <a\n   *  href=\"https://issues.apache.org/jira/browse/LUCENE-2239\">LUCENE-2239</a>).\n   * \n   * @lucene.experimental */\n  public IndexSearcher(IndexReader r, Executor executor) {\n    this(r.getContext(), executor);\n  }\n\n","sourceOld":"  /** Runs searches for each segment separately, using the\n   *  provided ExecutorService.  IndexSearcher will not\n   *  close/awaitTermination this ExecutorService on\n   *  close; you must do so, eventually, on your own.  NOTE:\n   *  if you are using {@link NIOFSDirectory}, do not use\n   *  the shutdownNow method of ExecutorService as this uses\n   *  Thread.interrupt under-the-hood which can silently\n   *  close file descriptors (see <a\n   *  href=\"https://issues.apache.org/jira/browse/LUCENE-2239\">LUCENE-2239</a>).\n   * \n   * @lucene.experimental */\n  public IndexSearcher(IndexReader r, ExecutorService executor) {\n    this(r.getContext(), executor);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3c188105a9aae04f56c24996f98f8333fc825d2e":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"b05c56a41b733e02a189c48895922b5bd8c7f3d1":["1c93396a1df03720cb20e2c2f513a6fa59b21e4c","211b1506e56f7860762fbd4698f6d1d1b57f672c"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d0ef034a4f10871667ae75181537775ddcf8ade4":["211b1506e56f7860762fbd4698f6d1d1b57f672c"],"1c93396a1df03720cb20e2c2f513a6fa59b21e4c":["3c188105a9aae04f56c24996f98f8333fc825d2e"],"211b1506e56f7860762fbd4698f6d1d1b57f672c":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"c1fe8ee1a5a1ef00a9c4793ec26f17bd90342198":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","211b1506e56f7860762fbd4698f6d1d1b57f672c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["692c45378601dcea39367ca75ae7d34ceed0aae3"],"692c45378601dcea39367ca75ae7d34ceed0aae3":["d0ef034a4f10871667ae75181537775ddcf8ade4"]},"commit2Childs":{"3c188105a9aae04f56c24996f98f8333fc825d2e":["1c93396a1df03720cb20e2c2f513a6fa59b21e4c"],"b05c56a41b733e02a189c48895922b5bd8c7f3d1":[],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["3c188105a9aae04f56c24996f98f8333fc825d2e","211b1506e56f7860762fbd4698f6d1d1b57f672c","c1fe8ee1a5a1ef00a9c4793ec26f17bd90342198"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"1c93396a1df03720cb20e2c2f513a6fa59b21e4c":["b05c56a41b733e02a189c48895922b5bd8c7f3d1"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["692c45378601dcea39367ca75ae7d34ceed0aae3"],"211b1506e56f7860762fbd4698f6d1d1b57f672c":["b05c56a41b733e02a189c48895922b5bd8c7f3d1","d0ef034a4f10871667ae75181537775ddcf8ade4","c1fe8ee1a5a1ef00a9c4793ec26f17bd90342198"],"c1fe8ee1a5a1ef00a9c4793ec26f17bd90342198":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"692c45378601dcea39367ca75ae7d34ceed0aae3":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["b05c56a41b733e02a189c48895922b5bd8c7f3d1","c1fe8ee1a5a1ef00a9c4793ec26f17bd90342198","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}