{"path":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyCombined#checkPaths(TaxonomyWriter).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyCombined#checkPaths(TaxonomyWriter).mjava","pathOld":"modules/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyCombined#checkPaths(TaxonomyWriter).mjava","sourceNew":"  // After fillTaxonomy returned successfully, checkPaths() checks that\n  // the getParent() calls return as expected, from the table\n  public static void checkPaths(TaxonomyWriter tw) throws IOException {\n    for (int i = 0; i < categories.length; i++) {\n      int ordinal = expectedPaths[i][expectedPaths[i].length-1];\n      for (int j=expectedPaths[i].length-2; j>=0; j--) {\n        ordinal = tw.getParent(ordinal);\n        int expectedOrdinal = expectedPaths[i][j];\n        if (ordinal!=expectedOrdinal) {\n          fail(\"For category \"+showcat(categories[i])+\" expected ancestor level \"+\n              (expectedPaths[i].length-1-j)+\" was \"+expectedOrdinal+\n              \", but got \"+ordinal);\n        }\n      }\n      assertEquals(TaxonomyReader.ROOT_ORDINAL, tw.getParent(expectedPaths[i][0]));\n    }\n    assertEquals(TaxonomyReader.INVALID_ORDINAL, tw.getParent(TaxonomyReader.ROOT_ORDINAL));\n  }\n\n","sourceOld":"  // After fillTaxonomy returned successfully, checkPaths() checks that\n  // the getParent() calls return as expected, from the table\n  public static void checkPaths(TaxonomyWriter tw) throws IOException {\n    for (int i = 0; i < categories.length; i++) {\n      int ordinal = expectedPaths[i][expectedPaths[i].length-1];\n      for (int j=expectedPaths[i].length-2; j>=0; j--) {\n        ordinal = tw.getParent(ordinal);\n        int expectedOrdinal = expectedPaths[i][j];\n        if (ordinal!=expectedOrdinal) {\n          fail(\"For category \"+showcat(categories[i])+\" expected ancestor level \"+\n              (expectedPaths[i].length-1-j)+\" was \"+expectedOrdinal+\n              \", but got \"+ordinal);\n        }\n      }\n      assertEquals(TaxonomyReader.ROOT_ORDINAL, tw.getParent(expectedPaths[i][0]));\n    }\n    assertEquals(TaxonomyReader.INVALID_ORDINAL, tw.getParent(TaxonomyReader.ROOT_ORDINAL));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}