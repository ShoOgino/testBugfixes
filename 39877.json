{"path":"backwards/src/test/org/apache/lucene/index/TestIndexReader#testDocsOutOfOrderJIRA140().mjava","commits":[{"id":"480d01e5b0ef8efb136d51670fec297ae5ae2c9c","date":1268821447,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"backwards/src/test/org/apache/lucene/index/TestIndexReader#testDocsOutOfOrderJIRA140().mjava","pathOld":"/dev/null","sourceNew":"    public void testDocsOutOfOrderJIRA140() throws IOException {\n      Directory dir = new MockRAMDirectory();      \n      IndexWriter writer  = new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n      for(int i=0;i<11;i++) {\n        addDoc(writer, \"aaa\");\n      }\n      writer.close();\n      IndexReader reader = IndexReader.open(dir, false);\n\n      // Try to delete an invalid docId, yet, within range\n      // of the final bits of the BitVector:\n\n      boolean gotException = false;\n      try {\n        reader.deleteDocument(11);\n      } catch (ArrayIndexOutOfBoundsException e) {\n        gotException = true;\n      }\n      reader.close();\n\n      writer = new IndexWriter(dir, new WhitespaceAnalyzer(), false, IndexWriter.MaxFieldLength.LIMITED);\n\n      // We must add more docs to get a new segment written\n      for(int i=0;i<11;i++) {\n        addDoc(writer, \"aaa\");\n      }\n\n      // Without the fix for LUCENE-140 this call will\n      // [incorrectly] hit a \"docs out of order\"\n      // IllegalStateException because above out-of-bounds\n      // deleteDocument corrupted the index:\n      writer.optimize();\n      writer.close();\n      if (!gotException) {\n        fail(\"delete of out-of-bounds doc number failed to hit exception\");\n      }\n      dir.close();\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/test/org/apache/lucene/index/TestIndexReader#testDocsOutOfOrderJIRA140().mjava","pathOld":"backwards/src/test/org/apache/lucene/index/TestIndexReader#testDocsOutOfOrderJIRA140().mjava","sourceNew":"    public void testDocsOutOfOrderJIRA140() throws IOException {\n      Directory dir = new MockRAMDirectory();      \n      IndexWriter writer  = new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n      for(int i=0;i<11;i++) {\n        addDoc(writer, \"aaa\");\n      }\n      writer.close();\n      IndexReader reader = IndexReader.open(dir, false);\n\n      // Try to delete an invalid docId, yet, within range\n      // of the final bits of the BitVector:\n\n      boolean gotException = false;\n      try {\n        reader.deleteDocument(11);\n      } catch (ArrayIndexOutOfBoundsException e) {\n        gotException = true;\n      }\n      reader.close();\n\n      writer = new IndexWriter(dir, new WhitespaceAnalyzer(), false, IndexWriter.MaxFieldLength.LIMITED);\n\n      // We must add more docs to get a new segment written\n      for(int i=0;i<11;i++) {\n        addDoc(writer, \"aaa\");\n      }\n\n      // Without the fix for LUCENE-140 this call will\n      // [incorrectly] hit a \"docs out of order\"\n      // IllegalStateException because above out-of-bounds\n      // deleteDocument corrupted the index:\n      writer.optimize();\n      writer.close();\n      if (!gotException) {\n        fail(\"delete of out-of-bounds doc number failed to hit exception\");\n      }\n      dir.close();\n    }\n\n","sourceOld":"    public void testDocsOutOfOrderJIRA140() throws IOException {\n      Directory dir = new MockRAMDirectory();      \n      IndexWriter writer  = new IndexWriter(dir, new WhitespaceAnalyzer(), true, IndexWriter.MaxFieldLength.LIMITED);\n      for(int i=0;i<11;i++) {\n        addDoc(writer, \"aaa\");\n      }\n      writer.close();\n      IndexReader reader = IndexReader.open(dir, false);\n\n      // Try to delete an invalid docId, yet, within range\n      // of the final bits of the BitVector:\n\n      boolean gotException = false;\n      try {\n        reader.deleteDocument(11);\n      } catch (ArrayIndexOutOfBoundsException e) {\n        gotException = true;\n      }\n      reader.close();\n\n      writer = new IndexWriter(dir, new WhitespaceAnalyzer(), false, IndexWriter.MaxFieldLength.LIMITED);\n\n      // We must add more docs to get a new segment written\n      for(int i=0;i<11;i++) {\n        addDoc(writer, \"aaa\");\n      }\n\n      // Without the fix for LUCENE-140 this call will\n      // [incorrectly] hit a \"docs out of order\"\n      // IllegalStateException because above out-of-bounds\n      // deleteDocument corrupted the index:\n      writer.optimize();\n      writer.close();\n      if (!gotException) {\n        fail(\"delete of out-of-bounds doc number failed to hit exception\");\n      }\n      dir.close();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"]},"commit2Childs":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}