{"path":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/shingle/ShingleAnalyzerWrapperTest#setUpSearcher(Analyzer).mjava","commits":[{"id":"dd745d580729e528151b58aeda87ef82f1b95c9b","date":1248369082,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/shingle/ShingleAnalyzerWrapperTest#setUpSearcher(Analyzer).mjava","pathOld":"contrib/analyzers/src/test/org/apache/lucene/analysis/shingle/ShingleAnalyzerWrapperTest#setUpSearcher(Analyzer).mjava","sourceNew":"  /**\n   * Set up a new index in RAM with three test phrases and the supplied Analyzer.\n   *\n   * @param analyzer the analyzer to use\n   * @return an indexSearcher on the test index.\n   * @throws Exception if an error occurs with index writer or searcher\n   */\n  public IndexSearcher setUpSearcher(Analyzer analyzer) throws Exception {\n    Directory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, analyzer, true);\n\n    Document doc;\n    doc = new Document();\n    doc.add(new Field(\"content\", \"please divide this sentence into shingles\",\n            Field.Store.YES,Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"content\", \"just another test sentence\",\n                      Field.Store.YES,Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"content\", \"a sentence which contains no test\",\n                      Field.Store.YES,Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    writer.close();\n\n    return new IndexSearcher(dir);\n  }\n\n","sourceOld":"  /**\n   * Set up a new index in RAM with three test phrases and the supplied Analyzer.\n   *\n   * @param analyzer the analyzer to use\n   * @return an indexSearcher on the test index.\n   * @throws Exception if an error occurs with index writer or searcher\n   */\n  public IndexSearcher setUpSearcher(Analyzer analyzer) throws Exception {\n    Directory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, analyzer, true);\n\n    Document doc;\n    doc = new Document();\n    doc.add(new Field(\"content\", \"please divide this sentence into shingles\",\n            Field.Store.YES,Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"content\", \"just another test sentence\",\n                      Field.Store.YES,Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"content\", \"a sentence which contains no test\",\n                      Field.Store.YES,Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    writer.close();\n\n    return new IndexSearcher(dir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4256bc1b3c94786287ccdfc751230374521843cf","date":1254612273,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/shingle/ShingleAnalyzerWrapperTest#setUpSearcher(Analyzer).mjava","pathOld":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/shingle/ShingleAnalyzerWrapperTest#setUpSearcher(Analyzer).mjava","sourceNew":"  /**\n   * Set up a new index in RAM with three test phrases and the supplied Analyzer.\n   *\n   * @param analyzer the analyzer to use\n   * @return an indexSearcher on the test index.\n   * @throws Exception if an error occurs with index writer or searcher\n   */\n  public IndexSearcher setUpSearcher(Analyzer analyzer) throws Exception {\n    Directory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, analyzer, true);\n\n    Document doc;\n    doc = new Document();\n    doc.add(new Field(\"content\", \"please divide this sentence into shingles\",\n            Field.Store.YES,Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"content\", \"just another test sentence\",\n                      Field.Store.YES,Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"content\", \"a sentence which contains no test\",\n                      Field.Store.YES,Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    writer.close();\n\n    return new IndexSearcher(dir, true);\n  }\n\n","sourceOld":"  /**\n   * Set up a new index in RAM with three test phrases and the supplied Analyzer.\n   *\n   * @param analyzer the analyzer to use\n   * @return an indexSearcher on the test index.\n   * @throws Exception if an error occurs with index writer or searcher\n   */\n  public IndexSearcher setUpSearcher(Analyzer analyzer) throws Exception {\n    Directory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, analyzer, true);\n\n    Document doc;\n    doc = new Document();\n    doc.add(new Field(\"content\", \"please divide this sentence into shingles\",\n            Field.Store.YES,Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"content\", \"just another test sentence\",\n                      Field.Store.YES,Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"content\", \"a sentence which contains no test\",\n                      Field.Store.YES,Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    writer.close();\n\n    return new IndexSearcher(dir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"87c966e9308847938a7c905c2e46a56d8df788b8","date":1255035452,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/shingle/ShingleAnalyzerWrapperTest#setUpSearcher(Analyzer).mjava","pathOld":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/shingle/ShingleAnalyzerWrapperTest#setUpSearcher(Analyzer).mjava","sourceNew":"  /**\n   * Set up a new index in RAM with three test phrases and the supplied Analyzer.\n   *\n   * @param analyzer the analyzer to use\n   * @return an indexSearcher on the test index.\n   * @throws Exception if an error occurs with index writer or searcher\n   */\n  public IndexSearcher setUpSearcher(Analyzer analyzer) throws Exception {\n    Directory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, analyzer, true, IndexWriter.MaxFieldLength.UNLIMITED);\n\n    Document doc;\n    doc = new Document();\n    doc.add(new Field(\"content\", \"please divide this sentence into shingles\",\n            Field.Store.YES,Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"content\", \"just another test sentence\",\n                      Field.Store.YES,Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"content\", \"a sentence which contains no test\",\n                      Field.Store.YES,Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    writer.close();\n\n    return new IndexSearcher(dir, true);\n  }\n\n","sourceOld":"  /**\n   * Set up a new index in RAM with three test phrases and the supplied Analyzer.\n   *\n   * @param analyzer the analyzer to use\n   * @return an indexSearcher on the test index.\n   * @throws Exception if an error occurs with index writer or searcher\n   */\n  public IndexSearcher setUpSearcher(Analyzer analyzer) throws Exception {\n    Directory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, analyzer, true);\n\n    Document doc;\n    doc = new Document();\n    doc.add(new Field(\"content\", \"please divide this sentence into shingles\",\n            Field.Store.YES,Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"content\", \"just another test sentence\",\n                      Field.Store.YES,Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"content\", \"a sentence which contains no test\",\n                      Field.Store.YES,Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    writer.close();\n\n    return new IndexSearcher(dir, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1cedb00d2dd44640194401179358a2e3ba6051bf","date":1268243626,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/shingle/ShingleAnalyzerWrapperTest#setUpSearcher(Analyzer).mjava","pathOld":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/shingle/ShingleAnalyzerWrapperTest#setUpSearcher(Analyzer).mjava","sourceNew":"  /**\n   * Set up a new index in RAM with three test phrases and the supplied Analyzer.\n   *\n   * @param analyzer the analyzer to use\n   * @return an indexSearcher on the test index.\n   * @throws Exception if an error occurs with index writer or searcher\n   */\n  public IndexSearcher setUpSearcher(Analyzer analyzer) throws Exception {\n    Directory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT).setAnalyzer(analyzer));\n\n    Document doc;\n    doc = new Document();\n    doc.add(new Field(\"content\", \"please divide this sentence into shingles\",\n            Field.Store.YES,Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"content\", \"just another test sentence\",\n                      Field.Store.YES,Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"content\", \"a sentence which contains no test\",\n                      Field.Store.YES,Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    writer.close();\n\n    return new IndexSearcher(dir, true);\n  }\n\n","sourceOld":"  /**\n   * Set up a new index in RAM with three test phrases and the supplied Analyzer.\n   *\n   * @param analyzer the analyzer to use\n   * @return an indexSearcher on the test index.\n   * @throws Exception if an error occurs with index writer or searcher\n   */\n  public IndexSearcher setUpSearcher(Analyzer analyzer) throws Exception {\n    Directory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, analyzer, true, IndexWriter.MaxFieldLength.UNLIMITED);\n\n    Document doc;\n    doc = new Document();\n    doc.add(new Field(\"content\", \"please divide this sentence into shingles\",\n            Field.Store.YES,Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"content\", \"just another test sentence\",\n                      Field.Store.YES,Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"content\", \"a sentence which contains no test\",\n                      Field.Store.YES,Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    writer.close();\n\n    return new IndexSearcher(dir, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e52fea2c4081a1e552b98506691990be59503168","date":1268250331,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/shingle/ShingleAnalyzerWrapperTest#setUpSearcher(Analyzer).mjava","pathOld":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/shingle/ShingleAnalyzerWrapperTest#setUpSearcher(Analyzer).mjava","sourceNew":"  /**\n   * Set up a new index in RAM with three test phrases and the supplied Analyzer.\n   *\n   * @param analyzer the analyzer to use\n   * @return an indexSearcher on the test index.\n   * @throws Exception if an error occurs with index writer or searcher\n   */\n  public IndexSearcher setUpSearcher(Analyzer analyzer) throws Exception {\n    Directory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, analyzer, true, IndexWriter.MaxFieldLength.UNLIMITED);\n\n    Document doc;\n    doc = new Document();\n    doc.add(new Field(\"content\", \"please divide this sentence into shingles\",\n            Field.Store.YES,Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"content\", \"just another test sentence\",\n                      Field.Store.YES,Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"content\", \"a sentence which contains no test\",\n                      Field.Store.YES,Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    writer.close();\n\n    return new IndexSearcher(dir, true);\n  }\n\n","sourceOld":"  /**\n   * Set up a new index in RAM with three test phrases and the supplied Analyzer.\n   *\n   * @param analyzer the analyzer to use\n   * @return an indexSearcher on the test index.\n   * @throws Exception if an error occurs with index writer or searcher\n   */\n  public IndexSearcher setUpSearcher(Analyzer analyzer) throws Exception {\n    Directory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT).setAnalyzer(analyzer));\n\n    Document doc;\n    doc = new Document();\n    doc.add(new Field(\"content\", \"please divide this sentence into shingles\",\n            Field.Store.YES,Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"content\", \"just another test sentence\",\n                      Field.Store.YES,Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"content\", \"a sentence which contains no test\",\n                      Field.Store.YES,Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    writer.close();\n\n    return new IndexSearcher(dir, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8","date":1268494368,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/shingle/ShingleAnalyzerWrapperTest#setUpSearcher(Analyzer).mjava","pathOld":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/shingle/ShingleAnalyzerWrapperTest#setUpSearcher(Analyzer).mjava","sourceNew":"  /**\n   * Set up a new index in RAM with three test phrases and the supplied Analyzer.\n   *\n   * @param analyzer the analyzer to use\n   * @return an indexSearcher on the test index.\n   * @throws Exception if an error occurs with index writer or searcher\n   */\n  public IndexSearcher setUpSearcher(Analyzer analyzer) throws Exception {\n    Directory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, analyzer));\n\n    Document doc;\n    doc = new Document();\n    doc.add(new Field(\"content\", \"please divide this sentence into shingles\",\n            Field.Store.YES,Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"content\", \"just another test sentence\",\n                      Field.Store.YES,Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"content\", \"a sentence which contains no test\",\n                      Field.Store.YES,Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    writer.close();\n\n    return new IndexSearcher(dir, true);\n  }\n\n","sourceOld":"  /**\n   * Set up a new index in RAM with three test phrases and the supplied Analyzer.\n   *\n   * @param analyzer the analyzer to use\n   * @return an indexSearcher on the test index.\n   * @throws Exception if an error occurs with index writer or searcher\n   */\n  public IndexSearcher setUpSearcher(Analyzer analyzer) throws Exception {\n    Directory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, analyzer, true, IndexWriter.MaxFieldLength.UNLIMITED);\n\n    Document doc;\n    doc = new Document();\n    doc.add(new Field(\"content\", \"please divide this sentence into shingles\",\n            Field.Store.YES,Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"content\", \"just another test sentence\",\n                      Field.Store.YES,Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"content\", \"a sentence which contains no test\",\n                      Field.Store.YES,Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    writer.close();\n\n    return new IndexSearcher(dir, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/analyzers/common/src/test/org/apache/lucene/analysis/shingle/ShingleAnalyzerWrapperTest#setUpSearcher(Analyzer).mjava","pathOld":"contrib/analyzers/common/src/test/org/apache/lucene/analysis/shingle/ShingleAnalyzerWrapperTest#setUpSearcher(Analyzer).mjava","sourceNew":"  /**\n   * Set up a new index in RAM with three test phrases and the supplied Analyzer.\n   *\n   * @param analyzer the analyzer to use\n   * @return an indexSearcher on the test index.\n   * @throws Exception if an error occurs with index writer or searcher\n   */\n  public IndexSearcher setUpSearcher(Analyzer analyzer) throws Exception {\n    Directory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, analyzer));\n\n    Document doc;\n    doc = new Document();\n    doc.add(new Field(\"content\", \"please divide this sentence into shingles\",\n            Field.Store.YES,Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"content\", \"just another test sentence\",\n                      Field.Store.YES,Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"content\", \"a sentence which contains no test\",\n                      Field.Store.YES,Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    writer.close();\n\n    return new IndexSearcher(dir, true);\n  }\n\n","sourceOld":"  /**\n   * Set up a new index in RAM with three test phrases and the supplied Analyzer.\n   *\n   * @param analyzer the analyzer to use\n   * @return an indexSearcher on the test index.\n   * @throws Exception if an error occurs with index writer or searcher\n   */\n  public IndexSearcher setUpSearcher(Analyzer analyzer) throws Exception {\n    Directory dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, analyzer));\n\n    Document doc;\n    doc = new Document();\n    doc.add(new Field(\"content\", \"please divide this sentence into shingles\",\n            Field.Store.YES,Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"content\", \"just another test sentence\",\n                      Field.Store.YES,Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    doc = new Document();\n    doc.add(new Field(\"content\", \"a sentence which contains no test\",\n                      Field.Store.YES,Field.Index.ANALYZED));\n    writer.addDocument(doc);\n\n    writer.close();\n\n    return new IndexSearcher(dir, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8":["e52fea2c4081a1e552b98506691990be59503168"],"dd745d580729e528151b58aeda87ef82f1b95c9b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1cedb00d2dd44640194401179358a2e3ba6051bf":["87c966e9308847938a7c905c2e46a56d8df788b8"],"e52fea2c4081a1e552b98506691990be59503168":["1cedb00d2dd44640194401179358a2e3ba6051bf"],"87c966e9308847938a7c905c2e46a56d8df788b8":["4256bc1b3c94786287ccdfc751230374521843cf"],"4256bc1b3c94786287ccdfc751230374521843cf":["dd745d580729e528151b58aeda87ef82f1b95c9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8"]},"commit2Childs":{"84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"dd745d580729e528151b58aeda87ef82f1b95c9b":["4256bc1b3c94786287ccdfc751230374521843cf"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["dd745d580729e528151b58aeda87ef82f1b95c9b"],"1cedb00d2dd44640194401179358a2e3ba6051bf":["e52fea2c4081a1e552b98506691990be59503168"],"e52fea2c4081a1e552b98506691990be59503168":["84080a7d7dbdaa3e6a4a1c9f1bb6221be40f47e8"],"87c966e9308847938a7c905c2e46a56d8df788b8":["1cedb00d2dd44640194401179358a2e3ba6051bf"],"4256bc1b3c94786287ccdfc751230374521843cf":["87c966e9308847938a7c905c2e46a56d8df788b8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}