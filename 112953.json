{"path":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#getFieldNumberMap().mjava","commits":[{"id":"9b2af6b2c05418fb9df466c739ed5b3a153eadde","date":1337520269,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#getFieldNumberMap().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Loads or returns the already loaded the global field number map for this {@link SegmentInfos}.\n   * If this {@link SegmentInfos} has no global field number map the returned instance is empty\n   */\n  private FieldNumberBiMap getFieldNumberMap() throws IOException {\n    final FieldNumberBiMap map  = new FieldNumberBiMap();\n\n    SegmentInfo biggest = null;\n    for(SegmentInfo info : segmentInfos) {\n      if (biggest == null || (info.docCount-info.getDelCount()) > (biggest.docCount-biggest.getDelCount())) {\n        biggest = info;\n      }\n    }\n\n    if (biggest != null) {\n      for(FieldInfo fi : getFieldInfos(biggest)) {\n        map.addOrGet(fi.name, fi.number);\n      }\n    }\n\n    // nocommit we can also pull the DV types of the\n    // fields... and catch DV type change on addDoc\n    // instead of much later in merge\n    //}\n\n    return map;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9d153abcf92dc5329d98571a8c3035df9bd80648","date":1337702630,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#getFieldNumberMap().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#getFieldNumberMap().mjava","sourceNew":"  /**\n   * Loads or returns the already loaded the global field number map for this {@link SegmentInfos}.\n   * If this {@link SegmentInfos} has no global field number map the returned instance is empty\n   */\n  private FieldNumberBiMap getFieldNumberMap() throws IOException {\n    final FieldNumberBiMap map  = new FieldNumberBiMap();\n\n    SegmentInfoPerCommit biggest = null;\n    for(SegmentInfoPerCommit info : segmentInfos) {\n      if (biggest == null || (info.info.docCount-info.getDelCount()) > (biggest.info.docCount-biggest.getDelCount())) {\n        biggest = info;\n      }\n    }\n\n    if (biggest != null) {\n      for(FieldInfo fi : getFieldInfos(biggest)) {\n        map.addOrGet(fi.name, fi.number);\n      }\n    }\n\n    // nocommit we can also pull the DV types of the\n    // fields... and catch DV type change on addDoc\n    // instead of much later in merge\n    //}\n\n    return map;\n  }\n\n","sourceOld":"  /**\n   * Loads or returns the already loaded the global field number map for this {@link SegmentInfos}.\n   * If this {@link SegmentInfos} has no global field number map the returned instance is empty\n   */\n  private FieldNumberBiMap getFieldNumberMap() throws IOException {\n    final FieldNumberBiMap map  = new FieldNumberBiMap();\n\n    SegmentInfo biggest = null;\n    for(SegmentInfo info : segmentInfos) {\n      if (biggest == null || (info.docCount-info.getDelCount()) > (biggest.docCount-biggest.getDelCount())) {\n        biggest = info;\n      }\n    }\n\n    if (biggest != null) {\n      for(FieldInfo fi : getFieldInfos(biggest)) {\n        map.addOrGet(fi.name, fi.number);\n      }\n    }\n\n    // nocommit we can also pull the DV types of the\n    // fields... and catch DV type change on addDoc\n    // instead of much later in merge\n    //}\n\n    return map;\n  }\n\n","bugFix":null,"bugIntro":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4e84d639980c2b2eb5d41330d5ff68d143239495","date":1337729749,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#getFieldNumberMap().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#getFieldNumberMap().mjava","sourceNew":"  /**\n   * Loads or returns the already loaded the global field number map for this {@link SegmentInfos}.\n   * If this {@link SegmentInfos} has no global field number map the returned instance is empty\n   */\n  private FieldNumbers getFieldNumberMap() throws IOException {\n    final FieldNumbers map  = new FieldNumbers();\n\n    SegmentInfoPerCommit biggest = null;\n    for(SegmentInfoPerCommit info : segmentInfos) {\n      if (biggest == null || (info.info.docCount-info.getDelCount()) > (biggest.info.docCount-biggest.getDelCount())) {\n        biggest = info;\n      }\n    }\n\n    if (biggest != null) {\n      for(FieldInfo fi : getFieldInfos(biggest)) {\n        map.addOrGet(fi.name, fi.number);\n      }\n    }\n\n    // nocommit we can also pull the DV types of the\n    // fields... and catch DV type change on addDoc\n    // instead of much later in merge\n    //}\n\n    return map;\n  }\n\n","sourceOld":"  /**\n   * Loads or returns the already loaded the global field number map for this {@link SegmentInfos}.\n   * If this {@link SegmentInfos} has no global field number map the returned instance is empty\n   */\n  private FieldNumberBiMap getFieldNumberMap() throws IOException {\n    final FieldNumberBiMap map  = new FieldNumberBiMap();\n\n    SegmentInfoPerCommit biggest = null;\n    for(SegmentInfoPerCommit info : segmentInfos) {\n      if (biggest == null || (info.info.docCount-info.getDelCount()) > (biggest.info.docCount-biggest.getDelCount())) {\n        biggest = info;\n      }\n    }\n\n    if (biggest != null) {\n      for(FieldInfo fi : getFieldInfos(biggest)) {\n        map.addOrGet(fi.name, fi.number);\n      }\n    }\n\n    // nocommit we can also pull the DV types of the\n    // fields... and catch DV type change on addDoc\n    // instead of much later in merge\n    //}\n\n    return map;\n  }\n\n","bugFix":null,"bugIntro":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"203d7d3cb7712e10ef33009a63247ae40c302d7a","date":1337798111,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#getFieldNumberMap().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#getFieldNumberMap().mjava","sourceNew":"  /**\n   * Loads or returns the already loaded the global field number map for this {@link SegmentInfos}.\n   * If this {@link SegmentInfos} has no global field number map the returned instance is empty\n   */\n  private FieldNumbers getFieldNumberMap() throws IOException {\n    final FieldNumbers map  = new FieldNumbers();\n\n    SegmentInfoPerCommit biggest = null;\n    for(SegmentInfoPerCommit info : segmentInfos) {\n      if (biggest == null || (info.info.getDocCount()-info.getDelCount()) > (biggest.info.getDocCount()-biggest.getDelCount())) {\n        biggest = info;\n      }\n    }\n\n    if (biggest != null) {\n      for(FieldInfo fi : getFieldInfos(biggest)) {\n        map.addOrGet(fi.name, fi.number);\n      }\n    }\n\n    // nocommit we can also pull the DV types of the\n    // fields... and catch DV type change on addDoc\n    // instead of much later in merge\n    //}\n\n    return map;\n  }\n\n","sourceOld":"  /**\n   * Loads or returns the already loaded the global field number map for this {@link SegmentInfos}.\n   * If this {@link SegmentInfos} has no global field number map the returned instance is empty\n   */\n  private FieldNumbers getFieldNumberMap() throws IOException {\n    final FieldNumbers map  = new FieldNumbers();\n\n    SegmentInfoPerCommit biggest = null;\n    for(SegmentInfoPerCommit info : segmentInfos) {\n      if (biggest == null || (info.info.docCount-info.getDelCount()) > (biggest.info.docCount-biggest.getDelCount())) {\n        biggest = info;\n      }\n    }\n\n    if (biggest != null) {\n      for(FieldInfo fi : getFieldInfos(biggest)) {\n        map.addOrGet(fi.name, fi.number);\n      }\n    }\n\n    // nocommit we can also pull the DV types of the\n    // fields... and catch DV type change on addDoc\n    // instead of much later in merge\n    //}\n\n    return map;\n  }\n\n","bugFix":null,"bugIntro":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b3c0b74d0a1220dbfbdb366a60df468dbb2c285f","date":1337803847,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#getFieldNumberMap().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#getFieldNumberMap().mjava","sourceNew":"  /**\n   * Loads or returns the already loaded the global field number map for this {@link SegmentInfos}.\n   * If this {@link SegmentInfos} has no global field number map the returned instance is empty\n   */\n  private FieldNumbers getFieldNumberMap() throws IOException {\n    final FieldNumbers map  = new FieldNumbers();\n\n    SegmentInfoPerCommit biggest = null;\n    for(SegmentInfoPerCommit info : segmentInfos) {\n      if (biggest == null || (info.info.getDocCount()-info.getDelCount()) > (biggest.info.getDocCount()-biggest.getDelCount())) {\n        biggest = info;\n      }\n    }\n\n    if (biggest != null) {\n      for(FieldInfo fi : getFieldInfos(biggest)) {\n        map.addOrGet(fi.name, fi.number);\n      }\n    }\n\n    // TODO: we could also pull DV type of each field here,\n    // and use that to make sure new segment(s) don't change\n    // the type...\n\n    return map;\n  }\n\n","sourceOld":"  /**\n   * Loads or returns the already loaded the global field number map for this {@link SegmentInfos}.\n   * If this {@link SegmentInfos} has no global field number map the returned instance is empty\n   */\n  private FieldNumbers getFieldNumberMap() throws IOException {\n    final FieldNumbers map  = new FieldNumbers();\n\n    SegmentInfoPerCommit biggest = null;\n    for(SegmentInfoPerCommit info : segmentInfos) {\n      if (biggest == null || (info.info.getDocCount()-info.getDelCount()) > (biggest.info.getDocCount()-biggest.getDelCount())) {\n        biggest = info;\n      }\n    }\n\n    if (biggest != null) {\n      for(FieldInfo fi : getFieldInfos(biggest)) {\n        map.addOrGet(fi.name, fi.number);\n      }\n    }\n\n    // nocommit we can also pull the DV types of the\n    // fields... and catch DV type change on addDoc\n    // instead of much later in merge\n    //}\n\n    return map;\n  }\n\n","bugFix":null,"bugIntro":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"07087852d7b2a5c7e7d79b19c3e3ba775596b5d8","date":1337887183,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#getFieldNumberMap().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#getFieldNumberMap().mjava","sourceNew":"  /**\n   * Loads or returns the already loaded the global field number map for this {@link SegmentInfos}.\n   * If this {@link SegmentInfos} has no global field number map the returned instance is empty\n   */\n  private FieldNumbers getFieldNumberMap() throws IOException {\n    final FieldNumbers map  = new FieldNumbers();\n\n    SegmentInfoPerCommit biggest = null;\n    for(SegmentInfoPerCommit info : segmentInfos) {\n      if (biggest == null || (info.info.getDocCount()-info.getDelCount()) > (biggest.info.getDocCount()-biggest.getDelCount())) {\n        biggest = info;\n      }\n    }\n\n    if (biggest != null) {\n      for(FieldInfo fi : getFieldInfos(biggest.info)) {\n        map.addOrGet(fi.name, fi.number);\n      }\n    }\n\n    // TODO: we could also pull DV type of each field here,\n    // and use that to make sure new segment(s) don't change\n    // the type...\n\n    return map;\n  }\n\n","sourceOld":"  /**\n   * Loads or returns the already loaded the global field number map for this {@link SegmentInfos}.\n   * If this {@link SegmentInfos} has no global field number map the returned instance is empty\n   */\n  private FieldNumbers getFieldNumberMap() throws IOException {\n    final FieldNumbers map  = new FieldNumbers();\n\n    SegmentInfoPerCommit biggest = null;\n    for(SegmentInfoPerCommit info : segmentInfos) {\n      if (biggest == null || (info.info.getDocCount()-info.getDelCount()) > (biggest.info.getDocCount()-biggest.getDelCount())) {\n        biggest = info;\n      }\n    }\n\n    if (biggest != null) {\n      for(FieldInfo fi : getFieldInfos(biggest)) {\n        map.addOrGet(fi.name, fi.number);\n      }\n    }\n\n    // TODO: we could also pull DV type of each field here,\n    // and use that to make sure new segment(s) don't change\n    // the type...\n\n    return map;\n  }\n\n","bugFix":null,"bugIntro":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"615ddbd81799980d0fdd95e0238e1c498b6f47b0","date":1338233290,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#getFieldNumberMap().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Loads or returns the already loaded the global field number map for this {@link SegmentInfos}.\n   * If this {@link SegmentInfos} has no global field number map the returned instance is empty\n   */\n  private FieldNumbers getFieldNumberMap() throws IOException {\n    final FieldNumbers map  = new FieldNumbers();\n\n    SegmentInfoPerCommit biggest = null;\n    for(SegmentInfoPerCommit info : segmentInfos) {\n      if (biggest == null || (info.info.getDocCount()-info.getDelCount()) > (biggest.info.getDocCount()-biggest.getDelCount())) {\n        biggest = info;\n      }\n    }\n\n    if (biggest != null) {\n      for(FieldInfo fi : getFieldInfos(biggest.info)) {\n        map.addOrGet(fi.name, fi.number);\n      }\n    }\n\n    // TODO: we could also pull DV type of each field here,\n    // and use that to make sure new segment(s) don't change\n    // the type...\n\n    return map;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"6e2893fd5349134af382d33ccc3d84840394c6c1","date":1353682567,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#getFieldNumberMap().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#getFieldNumberMap().mjava","sourceNew":"  /**\n   * Loads or returns the already loaded the global field number map for this {@link SegmentInfos}.\n   * If this {@link SegmentInfos} has no global field number map the returned instance is empty\n   */\n  private FieldNumbers getFieldNumberMap() throws IOException {\n    final FieldNumbers map = new FieldNumbers();\n\n    for(SegmentInfoPerCommit info : segmentInfos) {\n      for(FieldInfo fi : getFieldInfos(info.info)) {\n        map.addOrGet(fi.name, fi.number, fi.getDocValuesType());\n      }\n    }\n\n    return map;\n  }\n\n","sourceOld":"  /**\n   * Loads or returns the already loaded the global field number map for this {@link SegmentInfos}.\n   * If this {@link SegmentInfos} has no global field number map the returned instance is empty\n   */\n  private FieldNumbers getFieldNumberMap() throws IOException {\n    final FieldNumbers map  = new FieldNumbers();\n\n    SegmentInfoPerCommit biggest = null;\n    for(SegmentInfoPerCommit info : segmentInfos) {\n      if (biggest == null || (info.info.getDocCount()-info.getDelCount()) > (biggest.info.getDocCount()-biggest.getDelCount())) {\n        biggest = info;\n      }\n    }\n\n    if (biggest != null) {\n      for(FieldInfo fi : getFieldInfos(biggest.info)) {\n        map.addOrGet(fi.name, fi.number);\n      }\n    }\n\n    // TODO: we could also pull DV type of each field here,\n    // and use that to make sure new segment(s) don't change\n    // the type...\n\n    return map;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"552b8f2e274f44903adb7d9a00ef296674883ad2","date":1359422293,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#getFieldNumberMap().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#getFieldNumberMap().mjava","sourceNew":"  /**\n   * Loads or returns the already loaded the global field number map for this {@link SegmentInfos}.\n   * If this {@link SegmentInfos} has no global field number map the returned instance is empty\n   */\n  private FieldNumbers getFieldNumberMap() throws IOException {\n    final FieldNumbers map = new FieldNumbers();\n\n    // nocommit for a 4.0 index that has inconsistent DV\n    // types ... this will throw exc on init of IW?\n    for(SegmentInfoPerCommit info : segmentInfos) {\n      for(FieldInfo fi : getFieldInfos(info.info)) {\n        map.addOrGet(fi.name, fi.number, fi.getDocValuesType());\n      }\n    }\n\n    return map;\n  }\n\n","sourceOld":"  /**\n   * Loads or returns the already loaded the global field number map for this {@link SegmentInfos}.\n   * If this {@link SegmentInfos} has no global field number map the returned instance is empty\n   */\n  private FieldNumbers getFieldNumberMap() throws IOException {\n    final FieldNumbers map = new FieldNumbers();\n\n    for(SegmentInfoPerCommit info : segmentInfos) {\n      for(FieldInfo fi : getFieldInfos(info.info)) {\n        map.addOrGet(fi.name, fi.number, fi.getDocValuesType());\n      }\n    }\n\n    return map;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"e9eafdf27a0bda3d70664dd39f3a1683d8416dcf","date":1359644871,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#getFieldNumberMap().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#getFieldNumberMap().mjava","sourceNew":"  /**\n   * Loads or returns the already loaded the global field number map for this {@link SegmentInfos}.\n   * If this {@link SegmentInfos} has no global field number map the returned instance is empty\n   */\n  private FieldNumbers getFieldNumberMap() throws IOException {\n    final FieldNumbers map = new FieldNumbers();\n\n    for(SegmentInfoPerCommit info : segmentInfos) {\n      for(FieldInfo fi : getFieldInfos(info.info)) {\n        map.addOrGet(fi.name, fi.number, fi.getDocValuesType());\n      }\n    }\n\n    return map;\n  }\n\n","sourceOld":"  /**\n   * Loads or returns the already loaded the global field number map for this {@link SegmentInfos}.\n   * If this {@link SegmentInfos} has no global field number map the returned instance is empty\n   */\n  private FieldNumbers getFieldNumberMap() throws IOException {\n    final FieldNumbers map = new FieldNumbers();\n\n    // nocommit for a 4.0 index that has inconsistent DV\n    // types ... this will throw exc on init of IW?\n    for(SegmentInfoPerCommit info : segmentInfos) {\n      for(FieldInfo fi : getFieldInfos(info.info)) {\n        map.addOrGet(fi.name, fi.number, fi.getDocValuesType());\n      }\n    }\n\n    return map;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d4d69c535930b5cce125cff868d40f6373dc27d4","date":1360270101,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#getFieldNumberMap().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#getFieldNumberMap().mjava","sourceNew":"  /**\n   * Loads or returns the already loaded the global field number map for this {@link SegmentInfos}.\n   * If this {@link SegmentInfos} has no global field number map the returned instance is empty\n   */\n  private FieldNumbers getFieldNumberMap() throws IOException {\n    final FieldNumbers map = new FieldNumbers();\n\n    for(SegmentInfoPerCommit info : segmentInfos) {\n      for(FieldInfo fi : getFieldInfos(info.info)) {\n        map.addOrGet(fi.name, fi.number, fi.getDocValuesType());\n      }\n    }\n\n    return map;\n  }\n\n","sourceOld":"  /**\n   * Loads or returns the already loaded the global field number map for this {@link SegmentInfos}.\n   * If this {@link SegmentInfos} has no global field number map the returned instance is empty\n   */\n  private FieldNumbers getFieldNumberMap() throws IOException {\n    final FieldNumbers map  = new FieldNumbers();\n\n    SegmentInfoPerCommit biggest = null;\n    for(SegmentInfoPerCommit info : segmentInfos) {\n      if (biggest == null || (info.info.getDocCount()-info.getDelCount()) > (biggest.info.getDocCount()-biggest.getDelCount())) {\n        biggest = info;\n      }\n    }\n\n    if (biggest != null) {\n      for(FieldInfo fi : getFieldInfos(biggest.info)) {\n        map.addOrGet(fi.name, fi.number);\n      }\n    }\n\n    // TODO: we could also pull DV type of each field here,\n    // and use that to make sure new segment(s) don't change\n    // the type...\n\n    return map;\n  }\n\n","bugFix":["203d7d3cb7712e10ef33009a63247ae40c302d7a","4e84d639980c2b2eb5d41330d5ff68d143239495","07087852d7b2a5c7e7d79b19c3e3ba775596b5d8","b3c0b74d0a1220dbfbdb366a60df468dbb2c285f","9d153abcf92dc5329d98571a8c3035df9bd80648","9b2af6b2c05418fb9df466c739ed5b3a153eadde"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8435160e9702b19398118ddf76b61c846612b6a4","date":1380349140,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#getFieldNumberMap().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#getFieldNumberMap().mjava","sourceNew":"  /**\n   * Loads or returns the already loaded the global field number map for this {@link SegmentInfos}.\n   * If this {@link SegmentInfos} has no global field number map the returned instance is empty\n   */\n  private FieldNumbers getFieldNumberMap() throws IOException {\n    final FieldNumbers map = new FieldNumbers();\n\n    for(SegmentInfoPerCommit info : segmentInfos) {\n      for(FieldInfo fi : SegmentReader.readFieldInfos(info)) {\n        map.addOrGet(fi.name, fi.number, fi.getDocValuesType());\n      }\n    }\n\n    return map;\n  }\n\n","sourceOld":"  /**\n   * Loads or returns the already loaded the global field number map for this {@link SegmentInfos}.\n   * If this {@link SegmentInfos} has no global field number map the returned instance is empty\n   */\n  private FieldNumbers getFieldNumberMap() throws IOException {\n    final FieldNumbers map = new FieldNumbers();\n\n    for(SegmentInfoPerCommit info : segmentInfos) {\n      for(FieldInfo fi : getFieldInfos(info.info)) {\n        map.addOrGet(fi.name, fi.number, fi.getDocValuesType());\n      }\n    }\n\n    return map;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0","date":1383367127,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#getFieldNumberMap().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#getFieldNumberMap().mjava","sourceNew":"  /**\n   * Loads or returns the already loaded the global field number map for this {@link SegmentInfos}.\n   * If this {@link SegmentInfos} has no global field number map the returned instance is empty\n   */\n  private FieldNumbers getFieldNumberMap() throws IOException {\n    final FieldNumbers map = new FieldNumbers();\n\n    for(SegmentCommitInfo info : segmentInfos) {\n      for(FieldInfo fi : SegmentReader.readFieldInfos(info)) {\n        map.addOrGet(fi.name, fi.number, fi.getDocValuesType());\n      }\n    }\n\n    return map;\n  }\n\n","sourceOld":"  /**\n   * Loads or returns the already loaded the global field number map for this {@link SegmentInfos}.\n   * If this {@link SegmentInfos} has no global field number map the returned instance is empty\n   */\n  private FieldNumbers getFieldNumberMap() throws IOException {\n    final FieldNumbers map = new FieldNumbers();\n\n    for(SegmentInfoPerCommit info : segmentInfos) {\n      for(FieldInfo fi : SegmentReader.readFieldInfos(info)) {\n        map.addOrGet(fi.name, fi.number, fi.getDocValuesType());\n      }\n    }\n\n    return map;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"256a0e54e76f18e115a43e7fe793b54d4e9a3005","date":1412426514,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#getFieldNumberMap().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#getFieldNumberMap().mjava","sourceNew":"  /**\n   * Loads or returns the already loaded the global field number map for this {@link SegmentInfos}.\n   * If this {@link SegmentInfos} has no global field number map the returned instance is empty\n   */\n  private FieldNumbers getFieldNumberMap() throws IOException {\n    final FieldNumbers map = new FieldNumbers();\n\n    for(SegmentCommitInfo info : segmentInfos) {\n      FieldInfos fis = readFieldInfos(info);\n      for(FieldInfo fi : fis) {\n        map.addOrGet(fi.name, fi.number, fi.getDocValuesType());\n      }\n    }\n\n    return map;\n  }\n\n","sourceOld":"  /**\n   * Loads or returns the already loaded the global field number map for this {@link SegmentInfos}.\n   * If this {@link SegmentInfos} has no global field number map the returned instance is empty\n   */\n  private FieldNumbers getFieldNumberMap() throws IOException {\n    final FieldNumbers map = new FieldNumbers();\n\n    for(SegmentCommitInfo info : segmentInfos) {\n      for(FieldInfo fi : SegmentReader.readFieldInfos(info)) {\n        map.addOrGet(fi.name, fi.number, fi.getDocValuesType());\n      }\n    }\n\n    return map;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9bb9a29a5e71a90295f175df8919802993142c9a","date":1412517673,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#getFieldNumberMap().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#getFieldNumberMap().mjava","sourceNew":"  /**\n   * Loads or returns the already loaded the global field number map for this {@link SegmentInfos}.\n   * If this {@link SegmentInfos} has no global field number map the returned instance is empty\n   */\n  private FieldNumbers getFieldNumberMap() throws IOException {\n    final FieldNumbers map = new FieldNumbers();\n\n    for(SegmentCommitInfo info : segmentInfos) {\n      FieldInfos fis = readFieldInfos(info);\n      for(FieldInfo fi : fis) {\n        map.addOrGet(fi.name, fi.number, fi.getDocValuesType());\n      }\n    }\n\n    return map;\n  }\n\n","sourceOld":"  /**\n   * Loads or returns the already loaded the global field number map for this {@link SegmentInfos}.\n   * If this {@link SegmentInfos} has no global field number map the returned instance is empty\n   */\n  private FieldNumbers getFieldNumberMap() throws IOException {\n    final FieldNumbers map = new FieldNumbers();\n\n    for(SegmentCommitInfo info : segmentInfos) {\n      for(FieldInfo fi : SegmentReader.readFieldInfos(info)) {\n        map.addOrGet(fi.name, fi.number, fi.getDocValuesType());\n      }\n    }\n\n    return map;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ca792c26af46bd6c4a08d81117c60440cf6a7e3d","date":1445938295,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#getFieldNumberMap().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#getFieldNumberMap().mjava","sourceNew":"  /**\n   * Loads or returns the already loaded the global field number map for this {@link SegmentInfos}.\n   * If this {@link SegmentInfos} has no global field number map the returned instance is empty\n   */\n  private FieldNumbers getFieldNumberMap() throws IOException {\n    final FieldNumbers map = new FieldNumbers();\n\n    for(SegmentCommitInfo info : segmentInfos) {\n      FieldInfos fis = readFieldInfos(info);\n      for(FieldInfo fi : fis) {\n        map.addOrGet(fi.name, fi.number, fi.getDocValuesType(), fi.getDimensionCount(), fi.getDimensionNumBytes());\n      }\n    }\n\n    return map;\n  }\n\n","sourceOld":"  /**\n   * Loads or returns the already loaded the global field number map for this {@link SegmentInfos}.\n   * If this {@link SegmentInfos} has no global field number map the returned instance is empty\n   */\n  private FieldNumbers getFieldNumberMap() throws IOException {\n    final FieldNumbers map = new FieldNumbers();\n\n    for(SegmentCommitInfo info : segmentInfos) {\n      FieldInfos fis = readFieldInfos(info);\n      for(FieldInfo fi : fis) {\n        map.addOrGet(fi.name, fi.number, fi.getDocValuesType());\n      }\n    }\n\n    return map;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cab7a79353f33d1a94cd307bf33aa5148601ebe6","date":1453391888,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#getFieldNumberMap().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#getFieldNumberMap().mjava","sourceNew":"  /**\n   * Loads or returns the already loaded the global field number map for this {@link SegmentInfos}.\n   * If this {@link SegmentInfos} has no global field number map the returned instance is empty\n   */\n  private FieldNumbers getFieldNumberMap() throws IOException {\n    final FieldNumbers map = new FieldNumbers();\n\n    for(SegmentCommitInfo info : segmentInfos) {\n      FieldInfos fis = readFieldInfos(info);\n      for(FieldInfo fi : fis) {\n        map.addOrGet(fi.name, fi.number, fi.getDocValuesType(), fi.getPointDimensionCount(), fi.getPointNumBytes());\n      }\n    }\n\n    return map;\n  }\n\n","sourceOld":"  /**\n   * Loads or returns the already loaded the global field number map for this {@link SegmentInfos}.\n   * If this {@link SegmentInfos} has no global field number map the returned instance is empty\n   */\n  private FieldNumbers getFieldNumberMap() throws IOException {\n    final FieldNumbers map = new FieldNumbers();\n\n    for(SegmentCommitInfo info : segmentInfos) {\n      FieldInfos fis = readFieldInfos(info);\n      for(FieldInfo fi : fis) {\n        map.addOrGet(fi.name, fi.number, fi.getDocValuesType(), fi.getDimensionCount(), fi.getDimensionNumBytes());\n      }\n    }\n\n    return map;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"165c905a42bedc7c7d1acb37b177498306b7e866","date":1518704038,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#getFieldNumberMap().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#getFieldNumberMap().mjava","sourceNew":"  /**\n   * Loads or returns the already loaded the global field number map for this {@link SegmentInfos}.\n   * If this {@link SegmentInfos} has no global field number map the returned instance is empty\n   */\n  private FieldNumbers getFieldNumberMap() throws IOException {\n    final FieldNumbers map = new FieldNumbers();\n\n    for(SegmentCommitInfo info : segmentInfos) {\n      FieldInfos fis = readFieldInfos(info);\n      for(FieldInfo fi : fis) {\n        map.addOrGet(fi.name, fi.number, fi.getIndexOptions(), fi.getDocValuesType(), fi.getPointDimensionCount(), fi.getPointNumBytes());\n      }\n    }\n\n    return map;\n  }\n\n","sourceOld":"  /**\n   * Loads or returns the already loaded the global field number map for this {@link SegmentInfos}.\n   * If this {@link SegmentInfos} has no global field number map the returned instance is empty\n   */\n  private FieldNumbers getFieldNumberMap() throws IOException {\n    final FieldNumbers map = new FieldNumbers();\n\n    for(SegmentCommitInfo info : segmentInfos) {\n      FieldInfos fis = readFieldInfos(info);\n      for(FieldInfo fi : fis) {\n        map.addOrGet(fi.name, fi.number, fi.getDocValuesType(), fi.getPointDimensionCount(), fi.getPointNumBytes());\n      }\n    }\n\n    return map;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"eeba0a4d0845889a402dd225793d62f009d029c9","date":1527938093,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#getFieldNumberMap().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#getFieldNumberMap().mjava","sourceNew":"  /**\n   * Loads or returns the already loaded the global field number map for this {@link SegmentInfos}.\n   * If this {@link SegmentInfos} has no global field number map the returned instance is empty\n   */\n  private FieldNumbers getFieldNumberMap() throws IOException {\n    final FieldNumbers map = new FieldNumbers(config.softDeletesField);\n\n    for(SegmentCommitInfo info : segmentInfos) {\n      FieldInfos fis = readFieldInfos(info);\n      for(FieldInfo fi : fis) {\n        map.addOrGet(fi.name, fi.number, fi.getIndexOptions(), fi.getDocValuesType(), fi.getPointDimensionCount(), fi.getPointNumBytes(), fi.isSoftDeletesField());\n      }\n    }\n\n    return map;\n  }\n\n","sourceOld":"  /**\n   * Loads or returns the already loaded the global field number map for this {@link SegmentInfos}.\n   * If this {@link SegmentInfos} has no global field number map the returned instance is empty\n   */\n  private FieldNumbers getFieldNumberMap() throws IOException {\n    final FieldNumbers map = new FieldNumbers();\n\n    for(SegmentCommitInfo info : segmentInfos) {\n      FieldInfos fis = readFieldInfos(info);\n      for(FieldInfo fi : fis) {\n        map.addOrGet(fi.name, fi.number, fi.getIndexOptions(), fi.getDocValuesType(), fi.getPointDimensionCount(), fi.getPointNumBytes());\n      }\n    }\n\n    return map;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab548c8f96022b4780f7500a30b19b4f4a5feeb6","date":1527940044,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#getFieldNumberMap().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#getFieldNumberMap().mjava","sourceNew":"  /**\n   * Loads or returns the already loaded the global field number map for this {@link SegmentInfos}.\n   * If this {@link SegmentInfos} has no global field number map the returned instance is empty\n   */\n  private FieldNumbers getFieldNumberMap() throws IOException {\n    final FieldNumbers map = new FieldNumbers();\n\n    for(SegmentCommitInfo info : segmentInfos) {\n      FieldInfos fis = readFieldInfos(info);\n      for(FieldInfo fi : fis) {\n        map.addOrGet(fi.name, fi.number, fi.getIndexOptions(), fi.getDocValuesType(), fi.getPointDimensionCount(), fi.getPointNumBytes());\n      }\n    }\n\n    return map;\n  }\n\n","sourceOld":"  /**\n   * Loads or returns the already loaded the global field number map for this {@link SegmentInfos}.\n   * If this {@link SegmentInfos} has no global field number map the returned instance is empty\n   */\n  private FieldNumbers getFieldNumberMap() throws IOException {\n    final FieldNumbers map = new FieldNumbers(config.softDeletesField);\n\n    for(SegmentCommitInfo info : segmentInfos) {\n      FieldInfos fis = readFieldInfos(info);\n      for(FieldInfo fi : fis) {\n        map.addOrGet(fi.name, fi.number, fi.getIndexOptions(), fi.getDocValuesType(), fi.getPointDimensionCount(), fi.getPointNumBytes(), fi.isSoftDeletesField());\n      }\n    }\n\n    return map;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b7e4ca6dc9612ff741d8713743e2bccfae5eadac","date":1528093718,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#getFieldNumberMap().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#getFieldNumberMap().mjava","sourceNew":"  /**\n   * Loads or returns the already loaded the global field number map for this {@link SegmentInfos}.\n   * If this {@link SegmentInfos} has no global field number map the returned instance is empty\n   */\n  private FieldNumbers getFieldNumberMap() throws IOException {\n    final FieldNumbers map = new FieldNumbers(config.softDeletesField);\n\n    for(SegmentCommitInfo info : segmentInfos) {\n      FieldInfos fis = readFieldInfos(info);\n      for(FieldInfo fi : fis) {\n        map.addOrGet(fi.name, fi.number, fi.getIndexOptions(), fi.getDocValuesType(), fi.getPointDimensionCount(), fi.getPointNumBytes(), fi.isSoftDeletesField());\n      }\n    }\n\n    return map;\n  }\n\n","sourceOld":"  /**\n   * Loads or returns the already loaded the global field number map for this {@link SegmentInfos}.\n   * If this {@link SegmentInfos} has no global field number map the returned instance is empty\n   */\n  private FieldNumbers getFieldNumberMap() throws IOException {\n    final FieldNumbers map = new FieldNumbers();\n\n    for(SegmentCommitInfo info : segmentInfos) {\n      FieldInfos fis = readFieldInfos(info);\n      for(FieldInfo fi : fis) {\n        map.addOrGet(fi.name, fi.number, fi.getIndexOptions(), fi.getDocValuesType(), fi.getPointDimensionCount(), fi.getPointNumBytes());\n      }\n    }\n\n    return map;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f592209545c71895260367152601e9200399776d","date":1528238935,"type":3,"author":"Michael Braun","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#getFieldNumberMap().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#getFieldNumberMap().mjava","sourceNew":"  /**\n   * Loads or returns the already loaded the global field number map for this {@link SegmentInfos}.\n   * If this {@link SegmentInfos} has no global field number map the returned instance is empty\n   */\n  private FieldNumbers getFieldNumberMap() throws IOException {\n    final FieldNumbers map = new FieldNumbers(config.softDeletesField);\n\n    for(SegmentCommitInfo info : segmentInfos) {\n      FieldInfos fis = readFieldInfos(info);\n      for(FieldInfo fi : fis) {\n        map.addOrGet(fi.name, fi.number, fi.getIndexOptions(), fi.getDocValuesType(), fi.getPointDimensionCount(), fi.getPointNumBytes(), fi.isSoftDeletesField());\n      }\n    }\n\n    return map;\n  }\n\n","sourceOld":"  /**\n   * Loads or returns the already loaded the global field number map for this {@link SegmentInfos}.\n   * If this {@link SegmentInfos} has no global field number map the returned instance is empty\n   */\n  private FieldNumbers getFieldNumberMap() throws IOException {\n    final FieldNumbers map = new FieldNumbers();\n\n    for(SegmentCommitInfo info : segmentInfos) {\n      FieldInfos fis = readFieldInfos(info);\n      for(FieldInfo fi : fis) {\n        map.addOrGet(fi.name, fi.number, fi.getIndexOptions(), fi.getDocValuesType(), fi.getPointDimensionCount(), fi.getPointNumBytes());\n      }\n    }\n\n    return map;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b70042a8a492f7054d480ccdd2be9796510d4327","date":1528386658,"type":3,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#getFieldNumberMap().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#getFieldNumberMap().mjava","sourceNew":"  /**\n   * Loads or returns the already loaded the global field number map for this {@link SegmentInfos}.\n   * If this {@link SegmentInfos} has no global field number map the returned instance is empty\n   */\n  private FieldNumbers getFieldNumberMap() throws IOException {\n    final FieldNumbers map = new FieldNumbers(config.softDeletesField);\n\n    for(SegmentCommitInfo info : segmentInfos) {\n      FieldInfos fis = readFieldInfos(info);\n      for(FieldInfo fi : fis) {\n        map.addOrGet(fi.name, fi.number, fi.getIndexOptions(), fi.getDocValuesType(), fi.getPointDimensionCount(), fi.getPointNumBytes(), fi.isSoftDeletesField());\n      }\n    }\n\n    return map;\n  }\n\n","sourceOld":"  /**\n   * Loads or returns the already loaded the global field number map for this {@link SegmentInfos}.\n   * If this {@link SegmentInfos} has no global field number map the returned instance is empty\n   */\n  private FieldNumbers getFieldNumberMap() throws IOException {\n    final FieldNumbers map = new FieldNumbers();\n\n    for(SegmentCommitInfo info : segmentInfos) {\n      FieldInfos fis = readFieldInfos(info);\n      for(FieldInfo fi : fis) {\n        map.addOrGet(fi.name, fi.number, fi.getIndexOptions(), fi.getDocValuesType(), fi.getPointDimensionCount(), fi.getPointNumBytes());\n      }\n    }\n\n    return map;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f6652c943595e92c187ee904c382863013eae28f","date":1539042663,"type":3,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#getFieldNumberMap().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#getFieldNumberMap().mjava","sourceNew":"  /**\n   * Loads or returns the already loaded the global field number map for this {@link SegmentInfos}.\n   * If this {@link SegmentInfos} has no global field number map the returned instance is empty\n   */\n  private FieldNumbers getFieldNumberMap() throws IOException {\n    final FieldNumbers map = new FieldNumbers(config.softDeletesField);\n\n    for(SegmentCommitInfo info : segmentInfos) {\n      FieldInfos fis = readFieldInfos(info);\n      for(FieldInfo fi : fis) {\n        map.addOrGet(fi.name, fi.number, fi.getIndexOptions(), fi.getDocValuesType(), fi.getPointDataDimensionCount(), fi.getPointIndexDimensionCount(), fi.getPointNumBytes(), fi.isSoftDeletesField());\n      }\n    }\n\n    return map;\n  }\n\n","sourceOld":"  /**\n   * Loads or returns the already loaded the global field number map for this {@link SegmentInfos}.\n   * If this {@link SegmentInfos} has no global field number map the returned instance is empty\n   */\n  private FieldNumbers getFieldNumberMap() throws IOException {\n    final FieldNumbers map = new FieldNumbers(config.softDeletesField);\n\n    for(SegmentCommitInfo info : segmentInfos) {\n      FieldInfos fis = readFieldInfos(info);\n      for(FieldInfo fi : fis) {\n        map.addOrGet(fi.name, fi.number, fi.getIndexOptions(), fi.getDocValuesType(), fi.getPointDimensionCount(), fi.getPointNumBytes(), fi.isSoftDeletesField());\n      }\n    }\n\n    return map;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"59ed8c026ba85e3c42fb89605b2032dc6f9cc241","date":1581113294,"type":3,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#getFieldNumberMap().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexWriter#getFieldNumberMap().mjava","sourceNew":"  /**\n   * Loads or returns the already loaded the global field number map for this {@link SegmentInfos}.\n   * If this {@link SegmentInfos} has no global field number map the returned instance is empty\n   */\n  private FieldNumbers getFieldNumberMap() throws IOException {\n    final FieldNumbers map = new FieldNumbers(config.softDeletesField);\n\n    for(SegmentCommitInfo info : segmentInfos) {\n      FieldInfos fis = readFieldInfos(info);\n      for(FieldInfo fi : fis) {\n        map.addOrGet(fi.name, fi.number, fi.getIndexOptions(), fi.getDocValuesType(), fi.getPointDimensionCount(), fi.getPointIndexDimensionCount(), fi.getPointNumBytes(), fi.isSoftDeletesField());\n      }\n    }\n\n    return map;\n  }\n\n","sourceOld":"  /**\n   * Loads or returns the already loaded the global field number map for this {@link SegmentInfos}.\n   * If this {@link SegmentInfos} has no global field number map the returned instance is empty\n   */\n  private FieldNumbers getFieldNumberMap() throws IOException {\n    final FieldNumbers map = new FieldNumbers(config.softDeletesField);\n\n    for(SegmentCommitInfo info : segmentInfos) {\n      FieldInfos fis = readFieldInfos(info);\n      for(FieldInfo fi : fis) {\n        map.addOrGet(fi.name, fi.number, fi.getIndexOptions(), fi.getDocValuesType(), fi.getPointDataDimensionCount(), fi.getPointIndexDimensionCount(), fi.getPointNumBytes(), fi.isSoftDeletesField());\n      }\n    }\n\n    return map;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0":["8435160e9702b19398118ddf76b61c846612b6a4"],"256a0e54e76f18e115a43e7fe793b54d4e9a3005":["73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0"],"59ed8c026ba85e3c42fb89605b2032dc6f9cc241":["f6652c943595e92c187ee904c382863013eae28f"],"f6652c943595e92c187ee904c382863013eae28f":["b7e4ca6dc9612ff741d8713743e2bccfae5eadac"],"07087852d7b2a5c7e7d79b19c3e3ba775596b5d8":["b3c0b74d0a1220dbfbdb366a60df468dbb2c285f"],"165c905a42bedc7c7d1acb37b177498306b7e866":["cab7a79353f33d1a94cd307bf33aa5148601ebe6"],"e9eafdf27a0bda3d70664dd39f3a1683d8416dcf":["552b8f2e274f44903adb7d9a00ef296674883ad2"],"9bb9a29a5e71a90295f175df8919802993142c9a":["73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0","256a0e54e76f18e115a43e7fe793b54d4e9a3005"],"ab548c8f96022b4780f7500a30b19b4f4a5feeb6":["eeba0a4d0845889a402dd225793d62f009d029c9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b70042a8a492f7054d480ccdd2be9796510d4327":["165c905a42bedc7c7d1acb37b177498306b7e866","b7e4ca6dc9612ff741d8713743e2bccfae5eadac"],"b7e4ca6dc9612ff741d8713743e2bccfae5eadac":["ab548c8f96022b4780f7500a30b19b4f4a5feeb6"],"4e84d639980c2b2eb5d41330d5ff68d143239495":["9d153abcf92dc5329d98571a8c3035df9bd80648"],"203d7d3cb7712e10ef33009a63247ae40c302d7a":["4e84d639980c2b2eb5d41330d5ff68d143239495"],"b3c0b74d0a1220dbfbdb366a60df468dbb2c285f":["203d7d3cb7712e10ef33009a63247ae40c302d7a"],"cab7a79353f33d1a94cd307bf33aa5148601ebe6":["ca792c26af46bd6c4a08d81117c60440cf6a7e3d"],"6e2893fd5349134af382d33ccc3d84840394c6c1":["615ddbd81799980d0fdd95e0238e1c498b6f47b0"],"9d153abcf92dc5329d98571a8c3035df9bd80648":["9b2af6b2c05418fb9df466c739ed5b3a153eadde"],"8435160e9702b19398118ddf76b61c846612b6a4":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"9b2af6b2c05418fb9df466c739ed5b3a153eadde":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"552b8f2e274f44903adb7d9a00ef296674883ad2":["6e2893fd5349134af382d33ccc3d84840394c6c1"],"615ddbd81799980d0fdd95e0238e1c498b6f47b0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","07087852d7b2a5c7e7d79b19c3e3ba775596b5d8"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["615ddbd81799980d0fdd95e0238e1c498b6f47b0","e9eafdf27a0bda3d70664dd39f3a1683d8416dcf"],"ca792c26af46bd6c4a08d81117c60440cf6a7e3d":["9bb9a29a5e71a90295f175df8919802993142c9a"],"eeba0a4d0845889a402dd225793d62f009d029c9":["165c905a42bedc7c7d1acb37b177498306b7e866"],"f592209545c71895260367152601e9200399776d":["ab548c8f96022b4780f7500a30b19b4f4a5feeb6","b7e4ca6dc9612ff741d8713743e2bccfae5eadac"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["59ed8c026ba85e3c42fb89605b2032dc6f9cc241"]},"commit2Childs":{"73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0":["256a0e54e76f18e115a43e7fe793b54d4e9a3005","9bb9a29a5e71a90295f175df8919802993142c9a"],"256a0e54e76f18e115a43e7fe793b54d4e9a3005":["9bb9a29a5e71a90295f175df8919802993142c9a"],"59ed8c026ba85e3c42fb89605b2032dc6f9cc241":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f6652c943595e92c187ee904c382863013eae28f":["59ed8c026ba85e3c42fb89605b2032dc6f9cc241"],"07087852d7b2a5c7e7d79b19c3e3ba775596b5d8":["615ddbd81799980d0fdd95e0238e1c498b6f47b0"],"165c905a42bedc7c7d1acb37b177498306b7e866":["b70042a8a492f7054d480ccdd2be9796510d4327","eeba0a4d0845889a402dd225793d62f009d029c9"],"e9eafdf27a0bda3d70664dd39f3a1683d8416dcf":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"9bb9a29a5e71a90295f175df8919802993142c9a":["ca792c26af46bd6c4a08d81117c60440cf6a7e3d"],"ab548c8f96022b4780f7500a30b19b4f4a5feeb6":["b7e4ca6dc9612ff741d8713743e2bccfae5eadac","f592209545c71895260367152601e9200399776d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9b2af6b2c05418fb9df466c739ed5b3a153eadde","615ddbd81799980d0fdd95e0238e1c498b6f47b0"],"b70042a8a492f7054d480ccdd2be9796510d4327":[],"b7e4ca6dc9612ff741d8713743e2bccfae5eadac":["f6652c943595e92c187ee904c382863013eae28f","b70042a8a492f7054d480ccdd2be9796510d4327","f592209545c71895260367152601e9200399776d"],"4e84d639980c2b2eb5d41330d5ff68d143239495":["203d7d3cb7712e10ef33009a63247ae40c302d7a"],"203d7d3cb7712e10ef33009a63247ae40c302d7a":["b3c0b74d0a1220dbfbdb366a60df468dbb2c285f"],"b3c0b74d0a1220dbfbdb366a60df468dbb2c285f":["07087852d7b2a5c7e7d79b19c3e3ba775596b5d8"],"cab7a79353f33d1a94cd307bf33aa5148601ebe6":["165c905a42bedc7c7d1acb37b177498306b7e866"],"6e2893fd5349134af382d33ccc3d84840394c6c1":["552b8f2e274f44903adb7d9a00ef296674883ad2"],"9d153abcf92dc5329d98571a8c3035df9bd80648":["4e84d639980c2b2eb5d41330d5ff68d143239495"],"8435160e9702b19398118ddf76b61c846612b6a4":["73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0"],"9b2af6b2c05418fb9df466c739ed5b3a153eadde":["9d153abcf92dc5329d98571a8c3035df9bd80648"],"552b8f2e274f44903adb7d9a00ef296674883ad2":["e9eafdf27a0bda3d70664dd39f3a1683d8416dcf"],"615ddbd81799980d0fdd95e0238e1c498b6f47b0":["6e2893fd5349134af382d33ccc3d84840394c6c1","d4d69c535930b5cce125cff868d40f6373dc27d4"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["8435160e9702b19398118ddf76b61c846612b6a4"],"ca792c26af46bd6c4a08d81117c60440cf6a7e3d":["cab7a79353f33d1a94cd307bf33aa5148601ebe6"],"eeba0a4d0845889a402dd225793d62f009d029c9":["ab548c8f96022b4780f7500a30b19b4f4a5feeb6"],"f592209545c71895260367152601e9200399776d":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b70042a8a492f7054d480ccdd2be9796510d4327","f592209545c71895260367152601e9200399776d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}