{"path":"solr/src/test/org/apache/solr/spelling/suggest/SuggesterTest#testReload().mjava","commits":[{"id":"4ff4f089150b5073dcd4fa1e2018954e3a1eb1af","date":1282571040,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/spelling/suggest/SuggesterTest#testReload().mjava","pathOld":"/dev/null","sourceNew":"  public void testReload() throws Exception {\n    String coreName = h.getCore().getName();\n    RefCounted<SolrIndexSearcher> searcher = h.getCore().getSearcher();\n    SolrIndexSearcher indexSearcher = searcher.get();\n    log.info(\"Core \" + coreName + \", NumDocs before reload: \" + indexSearcher.getIndexReader().numDocs());\n    log.info(\"Directory: \" + indexSearcher.getIndexDir());\n    searcher.decref();\n    h.close();\n    solrConfig = TestHarness.createConfig(getSolrConfigFile());\n    h = new TestHarness( dataDir.getAbsolutePath(),\n            solrConfig,\n            getSchemaFile());\n    searcher = h.getCore().getSearcher();\n    indexSearcher = searcher.get();\n    log.info(\"Core \" + coreName + \", NumDocs now: \" + indexSearcher.getIndexReader().numDocs());\n    log.info(\"Directory: \" + indexSearcher.getIndexDir());\n    searcher.decref();\n    // rebuilds on commit\n    h.validateUpdate(\"<commit/>\");\n    handler = h.getCore().getRequestHandler(\"/suggest\");\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(CommonParams.Q, \"ac\");\n    params.set(SpellingParams.SPELLCHECK_COUNT, 2);\n    params.set(SpellingParams.SPELLCHECK_ONLY_MORE_POPULAR, true);\n    LocalSolrQueryRequest req = new LocalSolrQueryRequest(h.getCore(), params);\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    handler.handleRequest(req, rsp);\n    String res = assertXPath(h.getCore(), req, rsp, \n            \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='ac']/int[@name='numFound'][.='2']\",\n            \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='ac']/arr[@name='suggestion']/str[1][.='acquire']\",\n            \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='ac']/arr[@name='suggestion']/str[2][.='accommodate']\"\n            );\n    assertNull(res, res);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9cd064fa4fc33438aaa550384d00adb31b7960f4","date":1282920434,"type":4,"author":"Yonik Seeley","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/src/test/org/apache/solr/spelling/suggest/SuggesterTest#testReload().mjava","sourceNew":null,"sourceOld":"  public void testReload() throws Exception {\n    String coreName = h.getCore().getName();\n    RefCounted<SolrIndexSearcher> searcher = h.getCore().getSearcher();\n    SolrIndexSearcher indexSearcher = searcher.get();\n    log.info(\"Core \" + coreName + \", NumDocs before reload: \" + indexSearcher.getIndexReader().numDocs());\n    log.info(\"Directory: \" + indexSearcher.getIndexDir());\n    searcher.decref();\n    h.close();\n    solrConfig = TestHarness.createConfig(getSolrConfigFile());\n    h = new TestHarness( dataDir.getAbsolutePath(),\n            solrConfig,\n            getSchemaFile());\n    searcher = h.getCore().getSearcher();\n    indexSearcher = searcher.get();\n    log.info(\"Core \" + coreName + \", NumDocs now: \" + indexSearcher.getIndexReader().numDocs());\n    log.info(\"Directory: \" + indexSearcher.getIndexDir());\n    searcher.decref();\n    // rebuilds on commit\n    h.validateUpdate(\"<commit/>\");\n    handler = h.getCore().getRequestHandler(\"/suggest\");\n    ModifiableSolrParams params = new ModifiableSolrParams();\n    params.set(CommonParams.Q, \"ac\");\n    params.set(SpellingParams.SPELLCHECK_COUNT, 2);\n    params.set(SpellingParams.SPELLCHECK_ONLY_MORE_POPULAR, true);\n    LocalSolrQueryRequest req = new LocalSolrQueryRequest(h.getCore(), params);\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    handler.handleRequest(req, rsp);\n    String res = assertXPath(h.getCore(), req, rsp, \n            \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='ac']/int[@name='numFound'][.='2']\",\n            \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='ac']/arr[@name='suggestion']/str[1][.='acquire']\",\n            \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='ac']/arr[@name='suggestion']/str[2][.='accommodate']\"\n            );\n    assertNull(res, res);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9674f8a0bd32a4c79ea34a0c21260d5540ea71c4","date":1287612974,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/spelling/suggest/SuggesterTest#testReload().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testReload() throws Exception {\n    addDocs();\n    assertU(commit());\n    assertQ(req(\"qt\",\"/suggest\", \"q\",\"ac\", SpellingParams.SPELLCHECK_COUNT, \"2\", SpellingParams.SPELLCHECK_ONLY_MORE_POPULAR, \"true\"),\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='ac']/int[@name='numFound'][.='2']\");\n    assertU(adoc(\"id\", \"4\",\n        \"text\", \"actually\"\n       ));\n    assertU(commit());\n    assertQ(req(\"qt\",\"/suggest\", \"q\",\"ac\", SpellingParams.SPELLCHECK_COUNT, \"2\", SpellingParams.SPELLCHECK_ONLY_MORE_POPULAR, \"true\"),\n    \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='ac']/int[@name='numFound'][.='2']\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b12d3e81e0f95a4527b5703953c503f71120ffcc","date":1288080933,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/spelling/suggest/SuggesterTest#testReload().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testReload() throws Exception {\n    addDocs();\n    assertU(commit());\n    assertQ(req(\"qt\",\"/suggest\", \"q\",\"ac\", SpellingParams.SPELLCHECK_COUNT, \"2\", SpellingParams.SPELLCHECK_ONLY_MORE_POPULAR, \"true\"),\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='ac']/int[@name='numFound'][.='2']\");\n    assertU(adoc(\"id\", \"4\",\n        \"text\", \"actually\"\n       ));\n    assertU(commit());\n    assertQ(req(\"qt\",\"/suggest\", \"q\",\"ac\", SpellingParams.SPELLCHECK_COUNT, \"2\", SpellingParams.SPELLCHECK_ONLY_MORE_POPULAR, \"true\"),\n    \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='ac']/int[@name='numFound'][.='2']\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/spelling/suggest/SuggesterTest#testReload().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testReload() throws Exception {\n    addDocs();\n    assertU(commit());\n    assertQ(req(\"qt\",\"/suggest\", \"q\",\"ac\", SpellingParams.SPELLCHECK_COUNT, \"2\", SpellingParams.SPELLCHECK_ONLY_MORE_POPULAR, \"true\"),\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='ac']/int[@name='numFound'][.='2']\");\n    assertU(adoc(\"id\", \"4\",\n        \"text\", \"actually\"\n       ));\n    assertU(commit());\n    assertQ(req(\"qt\",\"/suggest\", \"q\",\"ac\", SpellingParams.SPELLCHECK_COUNT, \"2\", SpellingParams.SPELLCHECK_ONLY_MORE_POPULAR, \"true\"),\n    \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='ac']/int[@name='numFound'][.='2']\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2df6dcf97491e32d0853436240f3045d19aa457f","date":1298984641,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/spelling/suggest/SuggesterTest#testReload().mjava","pathOld":"solr/src/test/org/apache/solr/spelling/suggest/SuggesterTest#testReload().mjava","sourceNew":"  @Test\n  public void testReload() throws Exception {\n    String leaveData = System.getProperty(\"solr.test.leavedatadir\");\n    if (leaveData == null) leaveData = \"\";\n    System.setProperty(\"solr.test.leavedatadir\", \"true\");\n    addDocs();\n    assertU(commit());\n    File data = dataDir;\n    String config = configString;\n    deleteCore();\n    dataDir = data;\n    configString = config;\n    initCore();\n    assertQ(req(\"qt\",\"/suggest\", \"q\",\"ac\", SpellingParams.SPELLCHECK_COUNT, \"2\", SpellingParams.SPELLCHECK_ONLY_MORE_POPULAR, \"true\"),\n            \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='ac']/int[@name='numFound'][.='2']\",\n            \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='ac']/arr[@name='suggestion']/str[1][.='acquire']\",\n            \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='ac']/arr[@name='suggestion']/str[2][.='accommodate']\"\n        );\n    \n    // restore the property\n    System.setProperty(\"solr.test.leavedatadir\", leaveData);\n  }\n\n","sourceOld":"  @Test\n  public void testReload() throws Exception {\n    addDocs();\n    assertU(commit());\n    assertQ(req(\"qt\",\"/suggest\", \"q\",\"ac\", SpellingParams.SPELLCHECK_COUNT, \"2\", SpellingParams.SPELLCHECK_ONLY_MORE_POPULAR, \"true\"),\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='ac']/int[@name='numFound'][.='2']\");\n    assertU(adoc(\"id\", \"4\",\n        \"text\", \"actually\"\n       ));\n    assertU(commit());\n    assertQ(req(\"qt\",\"/suggest\", \"q\",\"ac\", SpellingParams.SPELLCHECK_COUNT, \"2\", SpellingParams.SPELLCHECK_ONLY_MORE_POPULAR, \"true\"),\n    \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='ac']/int[@name='numFound'][.='2']\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d619839baa8ce5503e496b94a9e42ad6f079293f","date":1301309428,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/spelling/suggest/SuggesterTest#testReload().mjava","pathOld":"solr/src/test/org/apache/solr/spelling/suggest/SuggesterTest#testReload().mjava","sourceNew":"  @Test\n  public void testReload() throws Exception {\n    String leaveData = System.getProperty(\"solr.test.leavedatadir\");\n    if (leaveData == null) leaveData = \"\";\n    System.setProperty(\"solr.test.leavedatadir\", \"true\");\n    addDocs();\n    assertU(commit());\n    File data = dataDir;\n    String config = configString;\n    deleteCore();\n    dataDir = data;\n    configString = config;\n    initCore();\n    assertQ(req(\"qt\",\"/suggest\", \"q\",\"ac\", SpellingParams.SPELLCHECK_COUNT, \"2\", SpellingParams.SPELLCHECK_ONLY_MORE_POPULAR, \"true\"),\n            \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='ac']/int[@name='numFound'][.='2']\",\n            \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='ac']/arr[@name='suggestion']/str[1][.='acquire']\",\n            \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='ac']/arr[@name='suggestion']/str[2][.='accommodate']\"\n        );\n    \n    // restore the property\n    System.setProperty(\"solr.test.leavedatadir\", leaveData);\n  }\n\n","sourceOld":"  @Test\n  public void testReload() throws Exception {\n    addDocs();\n    assertU(commit());\n    assertQ(req(\"qt\",\"/suggest\", \"q\",\"ac\", SpellingParams.SPELLCHECK_COUNT, \"2\", SpellingParams.SPELLCHECK_ONLY_MORE_POPULAR, \"true\"),\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='ac']/int[@name='numFound'][.='2']\");\n    assertU(adoc(\"id\", \"4\",\n        \"text\", \"actually\"\n       ));\n    assertU(commit());\n    assertQ(req(\"qt\",\"/suggest\", \"q\",\"ac\", SpellingParams.SPELLCHECK_COUNT, \"2\", SpellingParams.SPELLCHECK_ONLY_MORE_POPULAR, \"true\"),\n    \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='ac']/int[@name='numFound'][.='2']\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c0ef0193974807e4bddf5432a6b0287fe4d6c9df","date":1301476645,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/spelling/suggest/SuggesterTest#testReload().mjava","pathOld":"solr/src/test/org/apache/solr/spelling/suggest/SuggesterTest#testReload().mjava","sourceNew":"  @Test\n  public void testReload() throws Exception {\n    String leaveData = System.getProperty(\"solr.test.leavedatadir\");\n    if (leaveData == null) leaveData = \"\";\n    System.setProperty(\"solr.test.leavedatadir\", \"true\");\n    addDocs();\n    assertU(commit());\n    File data = dataDir;\n    String config = configString;\n    deleteCore();\n    dataDir = data;\n    configString = config;\n    initCore();\n    assertQ(req(\"qt\",\"/suggest\", \"q\",\"ac\", SpellingParams.SPELLCHECK_COUNT, \"2\", SpellingParams.SPELLCHECK_ONLY_MORE_POPULAR, \"true\"),\n            \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='ac']/int[@name='numFound'][.='2']\",\n            \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='ac']/arr[@name='suggestion']/str[1][.='acquire']\",\n            \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='ac']/arr[@name='suggestion']/str[2][.='accommodate']\"\n        );\n    \n    // restore the property\n    System.setProperty(\"solr.test.leavedatadir\", leaveData);\n  }\n\n","sourceOld":"  @Test\n  public void testReload() throws Exception {\n    addDocs();\n    assertU(commit());\n    assertQ(req(\"qt\",\"/suggest\", \"q\",\"ac\", SpellingParams.SPELLCHECK_COUNT, \"2\", SpellingParams.SPELLCHECK_ONLY_MORE_POPULAR, \"true\"),\n        \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='ac']/int[@name='numFound'][.='2']\");\n    assertU(adoc(\"id\", \"4\",\n        \"text\", \"actually\"\n       ));\n    assertU(commit());\n    assertQ(req(\"qt\",\"/suggest\", \"q\",\"ac\", SpellingParams.SPELLCHECK_COUNT, \"2\", SpellingParams.SPELLCHECK_ONLY_MORE_POPULAR, \"true\"),\n    \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='ac']/int[@name='numFound'][.='2']\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"47ac88233e9e3019faa24a5184425ad60c23d70f","date":1302779803,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/spelling/suggest/SuggesterTest#testReload().mjava","pathOld":"solr/src/test/org/apache/solr/spelling/suggest/SuggesterTest#testReload().mjava","sourceNew":"  @Test\n  public void testReload() throws Exception {\n    String leaveData = System.getProperty(\"solr.test.leavedatadir\");\n    if (leaveData == null) leaveData = \"\";\n    System.setProperty(\"solr.test.leavedatadir\", \"true\");\n    addDocs();\n    assertU(commit());\n    File data = dataDir;\n    String config = configString;\n    deleteCore();\n    dataDir = data;\n    configString = config;\n    initCore();\n    assertQ(req(\"qt\", requestUri, \"q\", \"ac\", SpellingParams.SPELLCHECK_COUNT, \"2\", SpellingParams.SPELLCHECK_ONLY_MORE_POPULAR, \"true\"),\n            \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='ac']/int[@name='numFound'][.='2']\",\n            \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='ac']/arr[@name='suggestion']/str[1][.='acquire']\",\n            \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='ac']/arr[@name='suggestion']/str[2][.='accommodate']\"\n        );\n\n    // restore the property\n    System.setProperty(\"solr.test.leavedatadir\", leaveData);\n  }\n\n","sourceOld":"  @Test\n  public void testReload() throws Exception {\n    String leaveData = System.getProperty(\"solr.test.leavedatadir\");\n    if (leaveData == null) leaveData = \"\";\n    System.setProperty(\"solr.test.leavedatadir\", \"true\");\n    addDocs();\n    assertU(commit());\n    File data = dataDir;\n    String config = configString;\n    deleteCore();\n    dataDir = data;\n    configString = config;\n    initCore();\n    assertQ(req(\"qt\",\"/suggest\", \"q\",\"ac\", SpellingParams.SPELLCHECK_COUNT, \"2\", SpellingParams.SPELLCHECK_ONLY_MORE_POPULAR, \"true\"),\n            \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='ac']/int[@name='numFound'][.='2']\",\n            \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='ac']/arr[@name='suggestion']/str[1][.='acquire']\",\n            \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='ac']/arr[@name='suggestion']/str[2][.='accommodate']\"\n        );\n    \n    // restore the property\n    System.setProperty(\"solr.test.leavedatadir\", leaveData);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1eb46686a27187e42311e77666a2c7026f461ebc","date":1302858020,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/spelling/suggest/SuggesterTest#testReload().mjava","pathOld":"solr/src/test/org/apache/solr/spelling/suggest/SuggesterTest#testReload().mjava","sourceNew":"  @Test\n  public void testReload() throws Exception {\n    String leaveData = System.getProperty(\"solr.test.leavedatadir\");\n    if (leaveData == null) leaveData = \"\";\n    System.setProperty(\"solr.test.leavedatadir\", \"true\");\n    addDocs();\n    assertU(commit());\n    File data = dataDir;\n    String config = configString;\n    deleteCore();\n    dataDir = data;\n    configString = config;\n    initCore();\n    assertQ(req(\"qt\", requestUri, \"q\", \"ac\", SpellingParams.SPELLCHECK_COUNT, \"2\", SpellingParams.SPELLCHECK_ONLY_MORE_POPULAR, \"true\"),\n            \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='ac']/int[@name='numFound'][.='2']\",\n            \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='ac']/arr[@name='suggestion']/str[1][.='acquire']\",\n            \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='ac']/arr[@name='suggestion']/str[2][.='accommodate']\"\n        );\n\n    // restore the property\n    System.setProperty(\"solr.test.leavedatadir\", leaveData);\n  }\n\n","sourceOld":"  @Test\n  public void testReload() throws Exception {\n    String leaveData = System.getProperty(\"solr.test.leavedatadir\");\n    if (leaveData == null) leaveData = \"\";\n    System.setProperty(\"solr.test.leavedatadir\", \"true\");\n    addDocs();\n    assertU(commit());\n    File data = dataDir;\n    String config = configString;\n    deleteCore();\n    dataDir = data;\n    configString = config;\n    initCore();\n    assertQ(req(\"qt\",\"/suggest\", \"q\",\"ac\", SpellingParams.SPELLCHECK_COUNT, \"2\", SpellingParams.SPELLCHECK_ONLY_MORE_POPULAR, \"true\"),\n            \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='ac']/int[@name='numFound'][.='2']\",\n            \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='ac']/arr[@name='suggestion']/str[1][.='acquire']\",\n            \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='ac']/arr[@name='suggestion']/str[2][.='accommodate']\"\n        );\n    \n    // restore the property\n    System.setProperty(\"solr.test.leavedatadir\", leaveData);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/spelling/suggest/SuggesterTest#testReload().mjava","pathOld":"solr/src/test/org/apache/solr/spelling/suggest/SuggesterTest#testReload().mjava","sourceNew":"  @Test\n  public void testReload() throws Exception {\n    String leaveData = System.getProperty(\"solr.test.leavedatadir\");\n    if (leaveData == null) leaveData = \"\";\n    System.setProperty(\"solr.test.leavedatadir\", \"true\");\n    addDocs();\n    assertU(commit());\n    File data = dataDir;\n    String config = configString;\n    deleteCore();\n    dataDir = data;\n    configString = config;\n    initCore();\n    assertQ(req(\"qt\", requestUri, \"q\", \"ac\", SpellingParams.SPELLCHECK_COUNT, \"2\", SpellingParams.SPELLCHECK_ONLY_MORE_POPULAR, \"true\"),\n            \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='ac']/int[@name='numFound'][.='2']\",\n            \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='ac']/arr[@name='suggestion']/str[1][.='acquire']\",\n            \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='ac']/arr[@name='suggestion']/str[2][.='accommodate']\"\n        );\n\n    // restore the property\n    System.setProperty(\"solr.test.leavedatadir\", leaveData);\n  }\n\n","sourceOld":"  @Test\n  public void testReload() throws Exception {\n    String leaveData = System.getProperty(\"solr.test.leavedatadir\");\n    if (leaveData == null) leaveData = \"\";\n    System.setProperty(\"solr.test.leavedatadir\", \"true\");\n    addDocs();\n    assertU(commit());\n    File data = dataDir;\n    String config = configString;\n    deleteCore();\n    dataDir = data;\n    configString = config;\n    initCore();\n    assertQ(req(\"qt\",\"/suggest\", \"q\",\"ac\", SpellingParams.SPELLCHECK_COUNT, \"2\", SpellingParams.SPELLCHECK_ONLY_MORE_POPULAR, \"true\"),\n            \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='ac']/int[@name='numFound'][.='2']\",\n            \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='ac']/arr[@name='suggestion']/str[1][.='acquire']\",\n            \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='ac']/arr[@name='suggestion']/str[2][.='accommodate']\"\n        );\n    \n    // restore the property\n    System.setProperty(\"solr.test.leavedatadir\", leaveData);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/src/test/org/apache/solr/spelling/suggest/SuggesterTest#testReload().mjava","pathOld":"solr/src/test/org/apache/solr/spelling/suggest/SuggesterTest#testReload().mjava","sourceNew":"  @Test\n  public void testReload() throws Exception {\n    String leaveData = System.getProperty(\"solr.test.leavedatadir\");\n    if (leaveData == null) leaveData = \"\";\n    System.setProperty(\"solr.test.leavedatadir\", \"true\");\n    addDocs();\n    assertU(commit());\n    File data = dataDir;\n    String config = configString;\n    deleteCore();\n    dataDir = data;\n    configString = config;\n    initCore();\n    assertQ(req(\"qt\", requestUri, \"q\", \"ac\", SpellingParams.SPELLCHECK_COUNT, \"2\", SpellingParams.SPELLCHECK_ONLY_MORE_POPULAR, \"true\"),\n            \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='ac']/int[@name='numFound'][.='2']\",\n            \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='ac']/arr[@name='suggestion']/str[1][.='acquire']\",\n            \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='ac']/arr[@name='suggestion']/str[2][.='accommodate']\"\n        );\n\n    // restore the property\n    System.setProperty(\"solr.test.leavedatadir\", leaveData);\n  }\n\n","sourceOld":"  @Test\n  public void testReload() throws Exception {\n    String leaveData = System.getProperty(\"solr.test.leavedatadir\");\n    if (leaveData == null) leaveData = \"\";\n    System.setProperty(\"solr.test.leavedatadir\", \"true\");\n    addDocs();\n    assertU(commit());\n    File data = dataDir;\n    String config = configString;\n    deleteCore();\n    dataDir = data;\n    configString = config;\n    initCore();\n    assertQ(req(\"qt\",\"/suggest\", \"q\",\"ac\", SpellingParams.SPELLCHECK_COUNT, \"2\", SpellingParams.SPELLCHECK_ONLY_MORE_POPULAR, \"true\"),\n            \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='ac']/int[@name='numFound'][.='2']\",\n            \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='ac']/arr[@name='suggestion']/str[1][.='acquire']\",\n            \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='ac']/arr[@name='suggestion']/str[2][.='accommodate']\"\n        );\n    \n    // restore the property\n    System.setProperty(\"solr.test.leavedatadir\", leaveData);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/spelling/suggest/SuggesterTest#testReload().mjava","pathOld":"solr/src/test/org/apache/solr/spelling/suggest/SuggesterTest#testReload().mjava","sourceNew":"  @Test\n  public void testReload() throws Exception {\n    String leaveData = System.getProperty(\"solr.test.leavedatadir\");\n    if (leaveData == null) leaveData = \"\";\n    System.setProperty(\"solr.test.leavedatadir\", \"true\");\n    addDocs();\n    assertU(commit());\n    File data = dataDir;\n    String config = configString;\n    deleteCore();\n    dataDir = data;\n    configString = config;\n    initCore();\n    assertQ(req(\"qt\", requestUri, \"q\", \"ac\", SpellingParams.SPELLCHECK_COUNT, \"2\", SpellingParams.SPELLCHECK_ONLY_MORE_POPULAR, \"true\"),\n            \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='ac']/int[@name='numFound'][.='2']\",\n            \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='ac']/arr[@name='suggestion']/str[1][.='acquire']\",\n            \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='ac']/arr[@name='suggestion']/str[2][.='accommodate']\"\n        );\n\n    // restore the property\n    System.setProperty(\"solr.test.leavedatadir\", leaveData);\n  }\n\n","sourceOld":"  @Test\n  public void testReload() throws Exception {\n    String leaveData = System.getProperty(\"solr.test.leavedatadir\");\n    if (leaveData == null) leaveData = \"\";\n    System.setProperty(\"solr.test.leavedatadir\", \"true\");\n    addDocs();\n    assertU(commit());\n    File data = dataDir;\n    String config = configString;\n    deleteCore();\n    dataDir = data;\n    configString = config;\n    initCore();\n    assertQ(req(\"qt\", requestUri, \"q\", \"ac\", SpellingParams.SPELLCHECK_COUNT, \"2\", SpellingParams.SPELLCHECK_ONLY_MORE_POPULAR, \"true\"),\n            \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='ac']/int[@name='numFound'][.='2']\",\n            \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='ac']/arr[@name='suggestion']/str[1][.='acquire']\",\n            \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='ac']/arr[@name='suggestion']/str[2][.='accommodate']\"\n        );\n\n    // restore the property\n    System.setProperty(\"solr.test.leavedatadir\", leaveData);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/spelling/suggest/SuggesterTest#testReload().mjava","pathOld":"solr/src/test/org/apache/solr/spelling/suggest/SuggesterTest#testReload().mjava","sourceNew":"  @Test\n  public void testReload() throws Exception {\n    String leaveData = System.getProperty(\"solr.test.leavedatadir\");\n    if (leaveData == null) leaveData = \"\";\n    System.setProperty(\"solr.test.leavedatadir\", \"true\");\n    addDocs();\n    assertU(commit());\n    File data = dataDir;\n    String config = configString;\n    deleteCore();\n    dataDir = data;\n    configString = config;\n    initCore();\n    assertQ(req(\"qt\", requestUri, \"q\", \"ac\", SpellingParams.SPELLCHECK_COUNT, \"2\", SpellingParams.SPELLCHECK_ONLY_MORE_POPULAR, \"true\"),\n            \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='ac']/int[@name='numFound'][.='2']\",\n            \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='ac']/arr[@name='suggestion']/str[1][.='acquire']\",\n            \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='ac']/arr[@name='suggestion']/str[2][.='accommodate']\"\n        );\n\n    // restore the property\n    System.setProperty(\"solr.test.leavedatadir\", leaveData);\n  }\n\n","sourceOld":"  @Test\n  public void testReload() throws Exception {\n    String leaveData = System.getProperty(\"solr.test.leavedatadir\");\n    if (leaveData == null) leaveData = \"\";\n    System.setProperty(\"solr.test.leavedatadir\", \"true\");\n    addDocs();\n    assertU(commit());\n    File data = dataDir;\n    String config = configString;\n    deleteCore();\n    dataDir = data;\n    configString = config;\n    initCore();\n    assertQ(req(\"qt\", requestUri, \"q\", \"ac\", SpellingParams.SPELLCHECK_COUNT, \"2\", SpellingParams.SPELLCHECK_ONLY_MORE_POPULAR, \"true\"),\n            \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='ac']/int[@name='numFound'][.='2']\",\n            \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='ac']/arr[@name='suggestion']/str[1][.='acquire']\",\n            \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='ac']/arr[@name='suggestion']/str[2][.='accommodate']\"\n        );\n\n    // restore the property\n    System.setProperty(\"solr.test.leavedatadir\", leaveData);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/spelling/suggest/SuggesterTest#testReload().mjava","pathOld":"solr/src/test/org/apache/solr/spelling/suggest/SuggesterTest#testReload().mjava","sourceNew":"  @Test\n  public void testReload() throws Exception {\n    String leaveData = System.getProperty(\"solr.test.leavedatadir\");\n    if (leaveData == null) leaveData = \"\";\n    System.setProperty(\"solr.test.leavedatadir\", \"true\");\n    addDocs();\n    assertU(commit());\n    File data = dataDir;\n    String config = configString;\n    deleteCore();\n    dataDir = data;\n    configString = config;\n    initCore();\n    assertQ(req(\"qt\", requestUri, \"q\", \"ac\", SpellingParams.SPELLCHECK_COUNT, \"2\", SpellingParams.SPELLCHECK_ONLY_MORE_POPULAR, \"true\"),\n            \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='ac']/int[@name='numFound'][.='2']\",\n            \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='ac']/arr[@name='suggestion']/str[1][.='acquire']\",\n            \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='ac']/arr[@name='suggestion']/str[2][.='accommodate']\"\n        );\n\n    // restore the property\n    System.setProperty(\"solr.test.leavedatadir\", leaveData);\n  }\n\n","sourceOld":"  @Test\n  public void testReload() throws Exception {\n    String leaveData = System.getProperty(\"solr.test.leavedatadir\");\n    if (leaveData == null) leaveData = \"\";\n    System.setProperty(\"solr.test.leavedatadir\", \"true\");\n    addDocs();\n    assertU(commit());\n    File data = dataDir;\n    String config = configString;\n    deleteCore();\n    dataDir = data;\n    configString = config;\n    initCore();\n    assertQ(req(\"qt\", requestUri, \"q\", \"ac\", SpellingParams.SPELLCHECK_COUNT, \"2\", SpellingParams.SPELLCHECK_ONLY_MORE_POPULAR, \"true\"),\n            \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='ac']/int[@name='numFound'][.='2']\",\n            \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='ac']/arr[@name='suggestion']/str[1][.='acquire']\",\n            \"//lst[@name='spellcheck']/lst[@name='suggestions']/lst[@name='ac']/arr[@name='suggestion']/str[2][.='accommodate']\"\n        );\n\n    // restore the property\n    System.setProperty(\"solr.test.leavedatadir\", leaveData);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9674f8a0bd32a4c79ea34a0c21260d5540ea71c4":["9cd064fa4fc33438aaa550384d00adb31b7960f4"],"c26f00b574427b55127e869b935845554afde1fa":["47ac88233e9e3019faa24a5184425ad60c23d70f","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["d619839baa8ce5503e496b94a9e42ad6f079293f","47ac88233e9e3019faa24a5184425ad60c23d70f"],"b12d3e81e0f95a4527b5703953c503f71120ffcc":["9cd064fa4fc33438aaa550384d00adb31b7960f4","9674f8a0bd32a4c79ea34a0c21260d5540ea71c4"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","9674f8a0bd32a4c79ea34a0c21260d5540ea71c4"],"9cd064fa4fc33438aaa550384d00adb31b7960f4":["4ff4f089150b5073dcd4fa1e2018954e3a1eb1af"],"47ac88233e9e3019faa24a5184425ad60c23d70f":["2df6dcf97491e32d0853436240f3045d19aa457f"],"4ff4f089150b5073dcd4fa1e2018954e3a1eb1af":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c0ef0193974807e4bddf5432a6b0287fe4d6c9df":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","2df6dcf97491e32d0853436240f3045d19aa457f"],"1eb46686a27187e42311e77666a2c7026f461ebc":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df","47ac88233e9e3019faa24a5184425ad60c23d70f"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a3776dccca01c11e7046323cfad46a3b4a471233"],"d619839baa8ce5503e496b94a9e42ad6f079293f":["b12d3e81e0f95a4527b5703953c503f71120ffcc","2df6dcf97491e32d0853436240f3045d19aa457f"],"a3776dccca01c11e7046323cfad46a3b4a471233":["2df6dcf97491e32d0853436240f3045d19aa457f","47ac88233e9e3019faa24a5184425ad60c23d70f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["47ac88233e9e3019faa24a5184425ad60c23d70f"],"2df6dcf97491e32d0853436240f3045d19aa457f":["9674f8a0bd32a4c79ea34a0c21260d5540ea71c4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c26f00b574427b55127e869b935845554afde1fa"]},"commit2Childs":{"9674f8a0bd32a4c79ea34a0c21260d5540ea71c4":["b12d3e81e0f95a4527b5703953c503f71120ffcc","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","2df6dcf97491e32d0853436240f3045d19aa457f"],"c26f00b574427b55127e869b935845554afde1fa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":[],"b12d3e81e0f95a4527b5703953c503f71120ffcc":["d619839baa8ce5503e496b94a9e42ad6f079293f"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df"],"9cd064fa4fc33438aaa550384d00adb31b7960f4":["9674f8a0bd32a4c79ea34a0c21260d5540ea71c4","b12d3e81e0f95a4527b5703953c503f71120ffcc"],"47ac88233e9e3019faa24a5184425ad60c23d70f":["c26f00b574427b55127e869b935845554afde1fa","135621f3a0670a9394eb563224a3b76cc4dddc0f","1eb46686a27187e42311e77666a2c7026f461ebc","a3776dccca01c11e7046323cfad46a3b4a471233","a258fbb26824fd104ed795e5d9033d2d040049ee"],"4ff4f089150b5073dcd4fa1e2018954e3a1eb1af":["9cd064fa4fc33438aaa550384d00adb31b7960f4"],"c0ef0193974807e4bddf5432a6b0287fe4d6c9df":["1eb46686a27187e42311e77666a2c7026f461ebc"],"1eb46686a27187e42311e77666a2c7026f461ebc":[],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"d619839baa8ce5503e496b94a9e42ad6f079293f":["135621f3a0670a9394eb563224a3b76cc4dddc0f"],"a3776dccca01c11e7046323cfad46a3b4a471233":["c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","4ff4f089150b5073dcd4fa1e2018954e3a1eb1af"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"2df6dcf97491e32d0853436240f3045d19aa457f":["47ac88233e9e3019faa24a5184425ad60c23d70f","c0ef0193974807e4bddf5432a6b0287fe4d6c9df","d619839baa8ce5503e496b94a9e42ad6f079293f","a3776dccca01c11e7046323cfad46a3b4a471233"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["135621f3a0670a9394eb563224a3b76cc4dddc0f","1eb46686a27187e42311e77666a2c7026f461ebc","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}