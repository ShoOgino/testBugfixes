{"path":"src/test/org/apache/lucene/search/TestSort#testSortCombos().mjava","commits":[{"id":"9d7f2f39556d99cecd24f152bdece2b6432458c3","date":1077651298,"type":0,"author":"Doug Cutting","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestSort#testSortCombos().mjava","pathOld":"/dev/null","sourceNew":"\t// test sorts using a series of fields\n\tpublic void testSortCombos() throws Exception {\n\t\tsort.setSort (new String[] {\"int\",\"float\"});\n\t\tassertMatches (full, queryX, sort, \"IGEAC\");\n\n\t\tsort.setSort (new SortField[] { new SortField (\"int\", true), new SortField (null, SortField.DOC, true) });\n\t\tassertMatches (full, queryX, sort, \"CEAGI\");\n\n\t\tsort.setSort (new String[] {\"float\",\"string\"});\n\t\tassertMatches (full, queryX, sort, \"GICEA\");\n\t}\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"63bc3238545c6012bd44f5d294077997f236bc4e","date":1233087321,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestSort#testSortCombos().mjava","pathOld":"src/test/org/apache/lucene/search/TestSort#testSortCombos().mjava","sourceNew":"  // test sorts using a series of fields\n  public void testSortCombos() throws Exception {\n    sort.setSort (new String[] {\"int\",\"float\"});\n    assertMatches (full, queryX, sort, \"IGEAC\");\n\n    sort.setSort (new SortField[] { new SortField (\"int\", true), new SortField (null, SortField.DOC, true) });\n    assertMatches (full, queryX, sort, \"CEAGI\");\n\n    sort.setSort (new String[] {\"float\",\"string\"});\n    assertMatches (full, queryX, sort, \"GICEA\");\n  }\n\n","sourceOld":"\t// test sorts using a series of fields\n\tpublic void testSortCombos() throws Exception {\n\t\tsort.setSort (new String[] {\"int\",\"float\"});\n\t\tassertMatches (full, queryX, sort, \"IGEAC\");\n\n\t\tsort.setSort (new SortField[] { new SortField (\"int\", true), new SortField (null, SortField.DOC, true) });\n\t\tassertMatches (full, queryX, sort, \"CEAGI\");\n\n\t\tsort.setSort (new String[] {\"float\",\"string\"});\n\t\tassertMatches (full, queryX, sort, \"GICEA\");\n\t}\n\n","bugFix":null,"bugIntro":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ded38b25fe842ef1efc6715745bb8d8ed8e2fc99","date":1255432705,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/TestSort#testSortCombos().mjava","pathOld":"src/test/org/apache/lucene/search/TestSort#testSortCombos().mjava","sourceNew":"  // test sorts using a series of fields\n  public void testSortCombos() throws Exception {\n    sort.setSort (new SortField (\"int\", SortField.INT), new SortField (\"float\", SortField.FLOAT) );\n    assertMatches (full, queryX, sort, \"IGEAC\");\n\n    sort.setSort (new SortField (\"int\", SortField.INT, true), new SortField (null, SortField.DOC, true) );\n    assertMatches (full, queryX, sort, \"CEAGI\");\n\n    sort.setSort (new SortField (\"float\", SortField.FLOAT), new SortField (\"string\", SortField.STRING) );\n    assertMatches (full, queryX, sort, \"GICEA\");\n  }\n\n","sourceOld":"  // test sorts using a series of fields\n  public void testSortCombos() throws Exception {\n    sort.setSort (new String[] {\"int\",\"float\"});\n    assertMatches (full, queryX, sort, \"IGEAC\");\n\n    sort.setSort (new SortField[] { new SortField (\"int\", true), new SortField (null, SortField.DOC, true) });\n    assertMatches (full, queryX, sort, \"CEAGI\");\n\n    sort.setSort (new String[] {\"float\",\"string\"});\n    assertMatches (full, queryX, sort, \"GICEA\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestSort#testSortCombos().mjava","pathOld":"src/test/org/apache/lucene/search/TestSort#testSortCombos().mjava","sourceNew":"  // test sorts using a series of fields\n  public void testSortCombos() throws Exception {\n    sort.setSort (new SortField (\"int\", SortField.INT), new SortField (\"float\", SortField.FLOAT) );\n    assertMatches (full, queryX, sort, \"IGEAC\");\n\n    sort.setSort (new SortField (\"int\", SortField.INT, true), new SortField (null, SortField.DOC, true) );\n    assertMatches (full, queryX, sort, \"CEAGI\");\n\n    sort.setSort (new SortField (\"float\", SortField.FLOAT), new SortField (\"string\", SortField.STRING) );\n    assertMatches (full, queryX, sort, \"GICEA\");\n  }\n\n","sourceOld":"  // test sorts using a series of fields\n  public void testSortCombos() throws Exception {\n    sort.setSort (new SortField (\"int\", SortField.INT), new SortField (\"float\", SortField.FLOAT) );\n    assertMatches (full, queryX, sort, \"IGEAC\");\n\n    sort.setSort (new SortField (\"int\", SortField.INT, true), new SortField (null, SortField.DOC, true) );\n    assertMatches (full, queryX, sort, \"CEAGI\");\n\n    sort.setSort (new SortField (\"float\", SortField.FLOAT), new SortField (\"string\", SortField.STRING) );\n    assertMatches (full, queryX, sort, \"GICEA\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ded38b25fe842ef1efc6715745bb8d8ed8e2fc99":["63bc3238545c6012bd44f5d294077997f236bc4e"],"9d7f2f39556d99cecd24f152bdece2b6432458c3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"63bc3238545c6012bd44f5d294077997f236bc4e":["9d7f2f39556d99cecd24f152bdece2b6432458c3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["ded38b25fe842ef1efc6715745bb8d8ed8e2fc99"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9d7f2f39556d99cecd24f152bdece2b6432458c3"],"ded38b25fe842ef1efc6715745bb8d8ed8e2fc99":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9d7f2f39556d99cecd24f152bdece2b6432458c3":["63bc3238545c6012bd44f5d294077997f236bc4e"],"63bc3238545c6012bd44f5d294077997f236bc4e":["ded38b25fe842ef1efc6715745bb8d8ed8e2fc99"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}