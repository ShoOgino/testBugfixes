{"path":"lucene/facet/src/java/org/apache/lucene/facet/search/SumValueSourceFacetRequest#SumValueSourceFacetRequest(FacetLabel,int,ValueSource,boolean).mjava","commits":[{"id":"c190847801a50f4dd20fd639bdc29b54ea3b288b","date":1384461522,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/search/SumValueSourceFacetRequest#SumValueSourceFacetRequest(FacetLabel,int,ValueSource,boolean).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/search/SumValueSourceFacetRequest#SumValueSourceFacetRequest(CategoryPath,int,ValueSource,boolean).mjava","sourceNew":"  /**\n   * Constructor which takes the {@link ValueSource} from which to read the\n   * documents' values. You can also specify if the value source requires\n   * document scores or not.\n   */\n  public SumValueSourceFacetRequest(FacetLabel path, int num, ValueSource valueSource, boolean requiresDocScores) {\n    super(path, num);\n    this.valueSource = valueSource;\n    this.requiresDocScores = requiresDocScores;\n  }\n\n","sourceOld":"  /**\n   * Constructor which takes the {@link ValueSource} from which to read the\n   * documents' values. You can also specify if the value source requires\n   * document scores or not.\n   */\n  public SumValueSourceFacetRequest(CategoryPath path, int num, ValueSource valueSource, boolean requiresDocScores) {\n    super(path, num);\n    this.valueSource = valueSource;\n    this.requiresDocScores = requiresDocScores;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d33e19a97046248623a7591aeaa6547233fd15e2","date":1385424777,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/search/SumValueSourceFacetRequest#SumValueSourceFacetRequest(FacetLabel,int,ValueSource,boolean).mjava","sourceNew":null,"sourceOld":"  /**\n   * Constructor which takes the {@link ValueSource} from which to read the\n   * documents' values. You can also specify if the value source requires\n   * document scores or not.\n   */\n  public SumValueSourceFacetRequest(FacetLabel path, int num, ValueSource valueSource, boolean requiresDocScores) {\n    super(path, num);\n    this.valueSource = valueSource;\n    this.requiresDocScores = requiresDocScores;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d33e19a97046248623a7591aeaa6547233fd15e2":["c190847801a50f4dd20fd639bdc29b54ea3b288b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c190847801a50f4dd20fd639bdc29b54ea3b288b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"d33e19a97046248623a7591aeaa6547233fd15e2":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817","c190847801a50f4dd20fd639bdc29b54ea3b288b"],"c190847801a50f4dd20fd639bdc29b54ea3b288b":["d33e19a97046248623a7591aeaa6547233fd15e2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d33e19a97046248623a7591aeaa6547233fd15e2","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}