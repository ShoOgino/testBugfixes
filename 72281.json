{"path":"solr/core/src/java/org/apache/solr/schema/SortableTextField#init(IndexSchema,Map[String,String]).mjava","commits":[{"id":"09db84b25dda87b73022d145a68f14c86a3a552d","date":1517506829,"type":0,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/SortableTextField#init(IndexSchema,Map[String,String]).mjava","pathOld":"/dev/null","sourceNew":"  protected void init(IndexSchema schema, Map<String,String> args) {\n    { \n      final String maxS = args.remove(\"maxCharsForDocValues\");\n      if (maxS != null) {\n        maxCharsForDocValues = Integer.parseInt(maxS);\n        if (maxCharsForDocValues <= 0) {\n          maxCharsForDocValues = Integer.MAX_VALUE;\n        }\n      }\n    }\n\n    // by the time our init() is called, super.setArgs has already removed & procesesd any explicit\n    // \"docValues=foo\" or useDocValuesAsStored=bar args...\n    //  - If the user explicitly said docValues=false, we want to respect that and not change it.\n    //    - if the user didn't explicit specify anything, then we want to implicitly *default* docValues=true\n    //  - The inverse is true for useDocValuesAsStored=true:\n    //    - if explict, then respect it; else implicitly default to useDocValuesAsStored=false\n    // ...lucky for us, setArgs preserved info about explicitly set true|false properties...\n    if (! on(falseProperties, DOC_VALUES)) {\n      properties |= DOC_VALUES;\n    }\n    if (! on(trueProperties, USE_DOCVALUES_AS_STORED)) {\n      properties &= ~USE_DOCVALUES_AS_STORED;\n    }\n    \n    super.init(schema, args);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3c65cdc794221e2591f1ca504da0ba89bcc4908b","date":1518508309,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/schema/SortableTextField#init(IndexSchema,Map[String,String]).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/SortableTextField#init(IndexSchema,Map[String,String]).mjava","sourceNew":"  protected void init(IndexSchema schema, Map<String,String> args) {\n    { \n      final String maxS = args.remove(\"maxCharsForDocValues\");\n      if (maxS != null) {\n        maxCharsForDocValues = Integer.parseInt(maxS);\n        if (maxCharsForDocValues <= 0) {\n          maxCharsForDocValues = Integer.MAX_VALUE;\n        }\n      }\n    }\n\n    // by the time our init() is called, super.setArgs has already removed & processed any explicit\n    // \"docValues=foo\" or useDocValuesAsStored=bar args...\n    //  - If the user explicitly said docValues=false, we want to respect that and not change it.\n    //    - if the user didn't explicitly specify anything, then we want to implicitly *default* docValues=true\n    //  - The inverse is true for useDocValuesAsStored=true:\n    //    - if explict, then respect it; else implicitly default to useDocValuesAsStored=false\n    // ...lucky for us, setArgs preserved info about explicitly set true|false properties...\n    if (! on(falseProperties, DOC_VALUES)) {\n      properties |= DOC_VALUES;\n    }\n    if (! on(trueProperties, USE_DOCVALUES_AS_STORED)) {\n      properties &= ~USE_DOCVALUES_AS_STORED;\n    }\n    \n    super.init(schema, args);\n  }\n\n","sourceOld":"  protected void init(IndexSchema schema, Map<String,String> args) {\n    { \n      final String maxS = args.remove(\"maxCharsForDocValues\");\n      if (maxS != null) {\n        maxCharsForDocValues = Integer.parseInt(maxS);\n        if (maxCharsForDocValues <= 0) {\n          maxCharsForDocValues = Integer.MAX_VALUE;\n        }\n      }\n    }\n\n    // by the time our init() is called, super.setArgs has already removed & procesesd any explicit\n    // \"docValues=foo\" or useDocValuesAsStored=bar args...\n    //  - If the user explicitly said docValues=false, we want to respect that and not change it.\n    //    - if the user didn't explicit specify anything, then we want to implicitly *default* docValues=true\n    //  - The inverse is true for useDocValuesAsStored=true:\n    //    - if explict, then respect it; else implicitly default to useDocValuesAsStored=false\n    // ...lucky for us, setArgs preserved info about explicitly set true|false properties...\n    if (! on(falseProperties, DOC_VALUES)) {\n      properties |= DOC_VALUES;\n    }\n    if (! on(trueProperties, USE_DOCVALUES_AS_STORED)) {\n      properties &= ~USE_DOCVALUES_AS_STORED;\n    }\n    \n    super.init(schema, args);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bfcdec9fcf0409223f35c5ec3bc14094314941b4","date":1518533599,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/schema/SortableTextField#init(IndexSchema,Map[String,String]).mjava","pathOld":"solr/core/src/java/org/apache/solr/schema/SortableTextField#init(IndexSchema,Map[String,String]).mjava","sourceNew":"  protected void init(IndexSchema schema, Map<String,String> args) {\n    { \n      final String maxS = args.remove(\"maxCharsForDocValues\");\n      if (maxS != null) {\n        maxCharsForDocValues = Integer.parseInt(maxS);\n        if (maxCharsForDocValues <= 0) {\n          maxCharsForDocValues = Integer.MAX_VALUE;\n        }\n      }\n    }\n\n    // by the time our init() is called, super.setArgs has already removed & processed any explicit\n    // \"docValues=foo\" or useDocValuesAsStored=bar args...\n    //  - If the user explicitly said docValues=false, we want to respect that and not change it.\n    //    - if the user didn't explicitly specify anything, then we want to implicitly *default* docValues=true\n    //  - The inverse is true for useDocValuesAsStored=true:\n    //    - if explict, then respect it; else implicitly default to useDocValuesAsStored=false\n    // ...lucky for us, setArgs preserved info about explicitly set true|false properties...\n    if (! on(falseProperties, DOC_VALUES)) {\n      properties |= DOC_VALUES;\n    }\n    if (! on(trueProperties, USE_DOCVALUES_AS_STORED)) {\n      properties &= ~USE_DOCVALUES_AS_STORED;\n    }\n    \n    super.init(schema, args);\n  }\n\n","sourceOld":"  protected void init(IndexSchema schema, Map<String,String> args) {\n    { \n      final String maxS = args.remove(\"maxCharsForDocValues\");\n      if (maxS != null) {\n        maxCharsForDocValues = Integer.parseInt(maxS);\n        if (maxCharsForDocValues <= 0) {\n          maxCharsForDocValues = Integer.MAX_VALUE;\n        }\n      }\n    }\n\n    // by the time our init() is called, super.setArgs has already removed & procesesd any explicit\n    // \"docValues=foo\" or useDocValuesAsStored=bar args...\n    //  - If the user explicitly said docValues=false, we want to respect that and not change it.\n    //    - if the user didn't explicit specify anything, then we want to implicitly *default* docValues=true\n    //  - The inverse is true for useDocValuesAsStored=true:\n    //    - if explict, then respect it; else implicitly default to useDocValuesAsStored=false\n    // ...lucky for us, setArgs preserved info about explicitly set true|false properties...\n    if (! on(falseProperties, DOC_VALUES)) {\n      properties |= DOC_VALUES;\n    }\n    if (! on(trueProperties, USE_DOCVALUES_AS_STORED)) {\n      properties &= ~USE_DOCVALUES_AS_STORED;\n    }\n    \n    super.init(schema, args);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3c65cdc794221e2591f1ca504da0ba89bcc4908b":["09db84b25dda87b73022d145a68f14c86a3a552d"],"09db84b25dda87b73022d145a68f14c86a3a552d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bfcdec9fcf0409223f35c5ec3bc14094314941b4":["09db84b25dda87b73022d145a68f14c86a3a552d","3c65cdc794221e2591f1ca504da0ba89bcc4908b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["bfcdec9fcf0409223f35c5ec3bc14094314941b4"]},"commit2Childs":{"3c65cdc794221e2591f1ca504da0ba89bcc4908b":["bfcdec9fcf0409223f35c5ec3bc14094314941b4"],"09db84b25dda87b73022d145a68f14c86a3a552d":["3c65cdc794221e2591f1ca504da0ba89bcc4908b","bfcdec9fcf0409223f35c5ec3bc14094314941b4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["09db84b25dda87b73022d145a68f14c86a3a552d"],"bfcdec9fcf0409223f35c5ec3bc14094314941b4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}