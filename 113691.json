{"path":"lucene/backward-codecs/src/test/org/apache/lucene/index/TestBackwardsCompatibility#doTestHits(ScoreDoc[],int,IndexReader).mjava","commits":[{"id":"4cc45c615dbb82bf79d5f9550286098367874fbf","date":1409571423,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/backward-codecs/src/test/org/apache/lucene/index/TestBackwardsCompatibility#doTestHits(ScoreDoc[],int,IndexReader).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestBackwardsCompatibility#doTestHits(ScoreDoc[],int,IndexReader).mjava","sourceNew":"  private void doTestHits(ScoreDoc[] hits, int expectedCount, IndexReader reader) throws IOException {\n    final int hitCount = hits.length;\n    assertEquals(\"wrong number of hits\", expectedCount, hitCount);\n    for(int i=0;i<hitCount;i++) {\n      reader.document(hits[i].doc);\n      reader.getTermVectors(hits[i].doc);\n    }\n  }\n\n","sourceOld":"  private void doTestHits(ScoreDoc[] hits, int expectedCount, IndexReader reader) throws IOException {\n    final int hitCount = hits.length;\n    assertEquals(\"wrong number of hits\", expectedCount, hitCount);\n    for(int i=0;i<hitCount;i++) {\n      reader.document(hits[i].doc);\n      reader.getTermVectors(hits[i].doc);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"402ad3ddc9da7b70da1b167667a60ece6a1381fb","date":1409656478,"type":1,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/backward-codecs/src/test/org/apache/lucene/index/TestBackwardsCompatibility#doTestHits(ScoreDoc[],int,IndexReader).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestBackwardsCompatibility#doTestHits(ScoreDoc[],int,IndexReader).mjava","sourceNew":"  private void doTestHits(ScoreDoc[] hits, int expectedCount, IndexReader reader) throws IOException {\n    final int hitCount = hits.length;\n    assertEquals(\"wrong number of hits\", expectedCount, hitCount);\n    for(int i=0;i<hitCount;i++) {\n      reader.document(hits[i].doc);\n      reader.getTermVectors(hits[i].doc);\n    }\n  }\n\n","sourceOld":"  private void doTestHits(ScoreDoc[] hits, int expectedCount, IndexReader reader) throws IOException {\n    final int hitCount = hits.length;\n    assertEquals(\"wrong number of hits\", expectedCount, hitCount);\n    for(int i=0;i<hitCount;i++) {\n      reader.document(hits[i].doc);\n      reader.getTermVectors(hits[i].doc);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4cc45c615dbb82bf79d5f9550286098367874fbf":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"402ad3ddc9da7b70da1b167667a60ece6a1381fb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","4cc45c615dbb82bf79d5f9550286098367874fbf"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4cc45c615dbb82bf79d5f9550286098367874fbf","402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"4cc45c615dbb82bf79d5f9550286098367874fbf":["402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"402ad3ddc9da7b70da1b167667a60ece6a1381fb":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}