{"path":"lucene/src/java/org/apache/lucene/index/values/DocValues.SortedSource#getByValue(BytesRef).mjava","commits":[{"id":"0e28c49f1fb6215a550fdadcf3805aa629b63ec0","date":1288081775,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/values/DocValues.SortedSource#getByValue(BytesRef).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/Reader.SortedSource#getByValue(BytesRef).mjava","sourceNew":"    /**\n     * Finds the largest ord whose value is <= the requested value. If\n     * {@link LookupResult#found} is true, then ord is an exact match. The\n     * returned {@link LookupResult} may be reused across calls.\n     */\n    public abstract LookupResult getByValue(BytesRef value);\n\n","sourceOld":"    /**\n     * Finds the largest ord whose value is <= the requested value. If\n     * {@link LookupResult#found} is true, then ord is an exact match. The\n     * returned {@link LookupResult} may be reused across calls.\n     */\n    public abstract LookupResult getByValue(BytesRef value);\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2d84736c4614acce6720851cbd2c823d7cd516e4","date":1290551630,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/values/DocValues.SortedSource#getByValue(BytesRef).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/DocValues.SortedSource#getByValue(BytesRef).mjava","sourceNew":"    /**\n     * Finds the largest ord whose value is <= the requested value. If\n     * {@link LookupResult#found} is true, then ord is an exact match. The\n     * returned {@link LookupResult} may be reused across calls.\n     */\n    public final LookupResult getByValue(BytesRef value) {\n      return getByValue(value, new BytesRef());\n    }\n\n","sourceOld":"    /**\n     * Finds the largest ord whose value is <= the requested value. If\n     * {@link LookupResult#found} is true, then ord is an exact match. The\n     * returned {@link LookupResult} may be reused across calls.\n     */\n    public abstract LookupResult getByValue(BytesRef value);\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"16dc5aef9648bb8fedce2ef55874f52e62c2766d","date":1293994163,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/values/DocValues.SortedSource#getByValue(BytesRef).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/DocValues.SortedSource#getByValue(BytesRef).mjava","sourceNew":"    /**\n     * Finds the largest ord whose value is less or equal to the requested\n     * value. If {@link LookupResult#found} is true, then ord is an exact match.\n     * The returned {@link LookupResult} may be reused across calls.\n     */\n    public final LookupResult getByValue(BytesRef value) {\n      return getByValue(value, new BytesRef());\n    }\n\n","sourceOld":"    /**\n     * Finds the largest ord whose value is <= the requested value. If\n     * {@link LookupResult#found} is true, then ord is an exact match. The\n     * returned {@link LookupResult} may be reused across calls.\n     */\n    public final LookupResult getByValue(BytesRef value) {\n      return getByValue(value, new BytesRef());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4034ca0f8f74fdf56e25be73822f2441fc1c1b46","date":1307111599,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/values/DocValues.SortedSource#getByValue(BytesRef).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/DocValues.SortedSource#getByValue(BytesRef).mjava","sourceNew":"    /**\n     * Finds the ordinal whose value is greater or equal to the given value.\n     * \n     * @return the given values ordinal if found or otherwise\n     *         <code>(-(ord)-1)</code>, defined as the ordinal of the first\n     *         element that is greater than the given value. This guarantees\n     *         that the return value will always be &gt;= 0 if the given value\n     *         is found.\n     * \n     */\n    public final int getByValue(BytesRef value) {\n      return getByValue(value, new BytesRef());\n    }\n\n","sourceOld":"    /**\n     * Finds the largest ord whose value is less or equal to the requested\n     * value. If {@link LookupResult#found} is true, then ord is an exact match.\n     * The returned {@link LookupResult} may be reused across calls.\n     */\n    public final LookupResult getByValue(BytesRef value) {\n      return getByValue(value, new BytesRef());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"41e5bbad683f7546e96f08ffe8bc50cf447f2586","date":1307113213,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/values/IndexDocValues.SortedSource#getByValue(BytesRef).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/DocValues.SortedSource#getByValue(BytesRef).mjava","sourceNew":"    /**\n     * Finds the ordinal whose value is greater or equal to the given value.\n     * \n     * @return the given values ordinal if found or otherwise\n     *         <code>(-(ord)-1)</code>, defined as the ordinal of the first\n     *         element that is greater than the given value. This guarantees\n     *         that the return value will always be &gt;= 0 if the given value\n     *         is found.\n     * \n     */\n    public final int getByValue(BytesRef value) {\n      return getByValue(value, new BytesRef());\n    }\n\n","sourceOld":"    /**\n     * Finds the ordinal whose value is greater or equal to the given value.\n     * \n     * @return the given values ordinal if found or otherwise\n     *         <code>(-(ord)-1)</code>, defined as the ordinal of the first\n     *         element that is greater than the given value. This guarantees\n     *         that the return value will always be &gt;= 0 if the given value\n     *         is found.\n     * \n     */\n    public final int getByValue(BytesRef value) {\n      return getByValue(value, new BytesRef());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"2d84736c4614acce6720851cbd2c823d7cd516e4":["0e28c49f1fb6215a550fdadcf3805aa629b63ec0"],"4034ca0f8f74fdf56e25be73822f2441fc1c1b46":["16dc5aef9648bb8fedce2ef55874f52e62c2766d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"16dc5aef9648bb8fedce2ef55874f52e62c2766d":["2d84736c4614acce6720851cbd2c823d7cd516e4"],"41e5bbad683f7546e96f08ffe8bc50cf447f2586":["4034ca0f8f74fdf56e25be73822f2441fc1c1b46"],"0e28c49f1fb6215a550fdadcf3805aa629b63ec0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"2d84736c4614acce6720851cbd2c823d7cd516e4":["16dc5aef9648bb8fedce2ef55874f52e62c2766d"],"4034ca0f8f74fdf56e25be73822f2441fc1c1b46":["41e5bbad683f7546e96f08ffe8bc50cf447f2586"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0e28c49f1fb6215a550fdadcf3805aa629b63ec0","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"16dc5aef9648bb8fedce2ef55874f52e62c2766d":["4034ca0f8f74fdf56e25be73822f2441fc1c1b46"],"41e5bbad683f7546e96f08ffe8bc50cf447f2586":[],"0e28c49f1fb6215a550fdadcf3805aa629b63ec0":["2d84736c4614acce6720851cbd2c823d7cd516e4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["41e5bbad683f7546e96f08ffe8bc50cf447f2586","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}