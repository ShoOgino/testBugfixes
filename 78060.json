{"path":"lucene/src/java/org/apache/lucene/index/StoredFieldsConsumer#flush(SegmentWriteState).mjava","commits":[{"id":"06584e6e98d592b34e1329b384182f368d2025e8","date":1320850353,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/StoredFieldsConsumer#flush(SegmentWriteState).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/StoredFieldsWriter#flush(SegmentWriteState).mjava","sourceNew":"  public void flush(SegmentWriteState state) throws IOException {\n\n    if (state.numDocs > 0) {\n      // It's possible that all documents seen in this segment\n      // hit non-aborting exceptions, in which case we will\n      // not have yet init'd the FieldsWriter:\n      initFieldsWriter(state.context);\n      fill(state.numDocs);\n    }\n\n    if (fieldsWriter != null) {\n      try {\n        fieldsWriter.finish(state.numDocs);\n      } finally {\n        fieldsWriter.close();\n        fieldsWriter = null;\n        lastDocID = 0;\n      }\n    }\n  }\n\n","sourceOld":"  public void flush(SegmentWriteState state) throws IOException {\n\n    if (state.numDocs > 0) {\n      // It's possible that all documents seen in this segment\n      // hit non-aborting exceptions, in which case we will\n      // not have yet init'd the FieldsWriter:\n      initFieldsWriter(state.context);\n      fill(state.numDocs);\n    }\n\n    if (fieldsWriter != null) {\n      fieldsWriter.close();\n      fieldsWriter = null;\n      lastDocID = 0;\n\n      String fieldsIdxName = IndexFileNames.segmentFileName(state.segmentName, \"\", IndexFileNames.FIELDS_INDEX_EXTENSION);\n      if (4 + ((long) state.numDocs) * 8 != state.directory.fileLength(fieldsIdxName)) {\n        throw new RuntimeException(\"after flush: fdx size mismatch: \" + state.numDocs + \" docs vs \" + state.directory.fileLength(fieldsIdxName) + \" length in bytes of \" + fieldsIdxName + \" file exists?=\" + state.directory.fileExists(fieldsIdxName));\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/StoredFieldsConsumer#flush(SegmentWriteState).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/StoredFieldsConsumer#flush(SegmentWriteState).mjava","sourceNew":"  public void flush(SegmentWriteState state) throws IOException {\n\n    if (state.numDocs > 0) {\n      // It's possible that all documents seen in this segment\n      // hit non-aborting exceptions, in which case we will\n      // not have yet init'd the FieldsWriter:\n      initFieldsWriter(state.context);\n      fill(state.numDocs);\n    }\n\n    if (fieldsWriter != null) {\n      try {\n        fieldsWriter.finish(state.numDocs);\n      } finally {\n        fieldsWriter.close();\n        fieldsWriter = null;\n        lastDocID = 0;\n      }\n    }\n  }\n\n","sourceOld":"  public void flush(SegmentWriteState state) throws IOException {\n\n    if (state.numDocs > 0) {\n      // It's possible that all documents seen in this segment\n      // hit non-aborting exceptions, in which case we will\n      // not have yet init'd the FieldsWriter:\n      initFieldsWriter(state.context);\n      fill(state.numDocs);\n    }\n\n    if (fieldsWriter != null) {\n      try {\n        fieldsWriter.finish(state.numDocs);\n      } finally {\n        fieldsWriter.close();\n        fieldsWriter = null;\n        lastDocID = 0;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["06584e6e98d592b34e1329b384182f368d2025e8"],"06584e6e98d592b34e1329b384182f368d2025e8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"06584e6e98d592b34e1329b384182f368d2025e8":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["06584e6e98d592b34e1329b384182f368d2025e8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}