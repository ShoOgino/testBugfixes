{"path":"src/java/org/apache/lucene/store/NativeFSLockFactory#clearAllLocks().mjava","commits":[{"id":"f118a5ec962b5e2658d313e6f4e6f28faa3bcb39","date":1161023282,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/lucene/store/NativeFSLockFactory#clearAllLocks().mjava","pathOld":"/dev/null","sourceNew":"  public void clearAllLocks() throws IOException {\n    // Note that this isn't strictly required anymore\n    // because the existence of these files does not mean\n    // they are locked, but, still do this in case people\n    // really want to see the files go away:\n    if (lockDir.exists()) {\n        String[] files = lockDir.list();\n        if (files == null)\n          throw new IOException(\"Cannot read lock directory \" +\n                                lockDir.getAbsolutePath());\n        String prefix = lockPrefix + \"-n-\";\n        for (int i = 0; i < files.length; i++) {\n          if (files[i].startsWith(prefix)) {\n            File lockFile = new File(lockDir, files[i]);\n            if (!lockFile.delete())\n              throw new IOException(\"Cannot delete \" + lockFile);\n          }\n        }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"93a838d8ba57e85e9db126e862958dafc7da4d5b","date":1168639785,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/store/NativeFSLockFactory#clearAllLocks().mjava","pathOld":"src/java/org/apache/lucene/store/NativeFSLockFactory#clearAllLocks().mjava","sourceNew":"  protected void clearAllLocks() throws IOException {\n    // Note that this isn't strictly required anymore\n    // because the existence of these files does not mean\n    // they are locked, but, still do this in case people\n    // really want to see the files go away:\n    if (lockDir.exists() && lockPrefix != null) {\n        String[] files = lockDir.list();\n        if (files == null)\n          throw new IOException(\"Cannot read lock directory \" +\n                                lockDir.getAbsolutePath());\n        String prefix = lockPrefix + \"-n-\";\n        for (int i = 0; i < files.length; i++) {\n          if (files[i].startsWith(prefix)) {\n            File lockFile = new File(lockDir, files[i]);\n            if (!lockFile.delete())\n              throw new IOException(\"Cannot delete \" + lockFile);\n          }\n        }\n    }\n  }\n\n","sourceOld":"  public void clearAllLocks() throws IOException {\n    // Note that this isn't strictly required anymore\n    // because the existence of these files does not mean\n    // they are locked, but, still do this in case people\n    // really want to see the files go away:\n    if (lockDir.exists()) {\n        String[] files = lockDir.list();\n        if (files == null)\n          throw new IOException(\"Cannot read lock directory \" +\n                                lockDir.getAbsolutePath());\n        String prefix = lockPrefix + \"-n-\";\n        for (int i = 0; i < files.length; i++) {\n          if (files[i].startsWith(prefix)) {\n            File lockFile = new File(lockDir, files[i]);\n            if (!lockFile.delete())\n              throw new IOException(\"Cannot delete \" + lockFile);\n          }\n        }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"41513cff78959d7ba78c45f8048f7c196f449f87","date":1168702834,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"src/java/org/apache/lucene/store/NativeFSLockFactory#clearAllLocks().mjava","sourceNew":null,"sourceOld":"  protected void clearAllLocks() throws IOException {\n    // Note that this isn't strictly required anymore\n    // because the existence of these files does not mean\n    // they are locked, but, still do this in case people\n    // really want to see the files go away:\n    if (lockDir.exists() && lockPrefix != null) {\n        String[] files = lockDir.list();\n        if (files == null)\n          throw new IOException(\"Cannot read lock directory \" +\n                                lockDir.getAbsolutePath());\n        String prefix = lockPrefix + \"-n-\";\n        for (int i = 0; i < files.length; i++) {\n          if (files[i].startsWith(prefix)) {\n            File lockFile = new File(lockDir, files[i]);\n            if (!lockFile.delete())\n              throw new IOException(\"Cannot delete \" + lockFile);\n          }\n        }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"93a838d8ba57e85e9db126e862958dafc7da4d5b":["f118a5ec962b5e2658d313e6f4e6f28faa3bcb39"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f118a5ec962b5e2658d313e6f4e6f28faa3bcb39":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"41513cff78959d7ba78c45f8048f7c196f449f87":["93a838d8ba57e85e9db126e862958dafc7da4d5b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["41513cff78959d7ba78c45f8048f7c196f449f87"]},"commit2Childs":{"93a838d8ba57e85e9db126e862958dafc7da4d5b":["41513cff78959d7ba78c45f8048f7c196f449f87"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f118a5ec962b5e2658d313e6f4e6f28faa3bcb39"],"f118a5ec962b5e2658d313e6f4e6f28faa3bcb39":["93a838d8ba57e85e9db126e862958dafc7da4d5b"],"41513cff78959d7ba78c45f8048f7c196f449f87":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}