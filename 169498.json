{"path":"solr/core/src/java/org/apache/solr/security/RuleBasedAuthorizationPluginBase#checkCollPerm(Map[String,List[Permission]],AuthorizationContext).mjava","commits":[{"id":"8076096f334b0665d0a69a63ee98ac09baad402b","date":1589405373,"type":1,"author":"Jan HÃ¸ydahl","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/security/RuleBasedAuthorizationPluginBase#checkCollPerm(Map[String,List[Permission]],AuthorizationContext).mjava","pathOld":"solr/core/src/java/org/apache/solr/security/RuleBasedAuthorizationPlugin#checkCollPerm(Map[String,List[Permission]],AuthorizationContext).mjava","sourceNew":"  private MatchStatus checkCollPerm(Map<String, List<Permission>> pathVsPerms,\n                                    AuthorizationContext context) {\n    if (pathVsPerms == null) return MatchStatus.NO_PERMISSIONS_FOUND;\n\n    if (log.isTraceEnabled()) {\n      log.trace(\"Following perms are associated with collection\");\n      for (String pathKey : pathVsPerms.keySet()) {\n        final List<Permission> permsAssociatedWithPath = pathVsPerms.get(pathKey);\n        log.trace(\"Path: [{}], Perms: [{}]\", pathKey, permsAssociatedWithPath);\n      }\n    }\n\n    String path = context.getResource();\n    MatchStatus flag = checkPathPerm(pathVsPerms.get(path), context);\n    if (flag != MatchStatus.NO_PERMISSIONS_FOUND) return flag;\n    return checkPathPerm(pathVsPerms.get(null), context);\n  }\n\n","sourceOld":"  private MatchStatus checkCollPerm(Map<String, List<Permission>> pathVsPerms,\n                                    AuthorizationContext context) {\n    if (pathVsPerms == null) return MatchStatus.NO_PERMISSIONS_FOUND;\n\n    if (log.isTraceEnabled()) {\n      log.trace(\"Following perms are associated with collection\");\n      for (String pathKey : pathVsPerms.keySet()) {\n        final List<Permission> permsAssociatedWithPath = pathVsPerms.get(pathKey);\n        log.trace(\"Path: [{}], Perms: [{}]\", pathKey, permsAssociatedWithPath);\n      }\n    }\n\n    String path = context.getResource();\n    MatchStatus flag = checkPathPerm(pathVsPerms.get(path), context);\n    if (flag != MatchStatus.NO_PERMISSIONS_FOUND) return flag;\n    return checkPathPerm(pathVsPerms.get(null), context);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5e0ac06a3dde3a146042d8eb8820dc45326e9263","date":1594139870,"type":5,"author":"Mike Drob","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/security/RuleBasedAuthorizationPluginBase#checkCollPerm(WildCardSupportMap,AuthorizationContext).mjava","pathOld":"solr/core/src/java/org/apache/solr/security/RuleBasedAuthorizationPluginBase#checkCollPerm(Map[String,List[Permission]],AuthorizationContext).mjava","sourceNew":"  private MatchStatus checkCollPerm(WildCardSupportMap pathVsPerms, AuthorizationContext context) {\n    if (pathVsPerms == null) return MatchStatus.NO_PERMISSIONS_FOUND;\n\n    if (log.isTraceEnabled()) {\n      log.trace(\"Following perms are associated with collection\");\n      for (String pathKey : pathVsPerms.keySet()) {\n        final List<Permission> permsAssociatedWithPath = pathVsPerms.get(pathKey);\n        log.trace(\"Path: [{}], Perms: [{}]\", pathKey, permsAssociatedWithPath);\n      }\n    }\n\n    String path = context.getResource();\n    MatchStatus flag = checkPathPerm(pathVsPerms.get(path), context);\n    if (flag != MatchStatus.NO_PERMISSIONS_FOUND) return flag;\n    return checkPathPerm(pathVsPerms.get(null), context);\n  }\n\n","sourceOld":"  private MatchStatus checkCollPerm(Map<String, List<Permission>> pathVsPerms,\n                                    AuthorizationContext context) {\n    if (pathVsPerms == null) return MatchStatus.NO_PERMISSIONS_FOUND;\n\n    if (log.isTraceEnabled()) {\n      log.trace(\"Following perms are associated with collection\");\n      for (String pathKey : pathVsPerms.keySet()) {\n        final List<Permission> permsAssociatedWithPath = pathVsPerms.get(pathKey);\n        log.trace(\"Path: [{}], Perms: [{}]\", pathKey, permsAssociatedWithPath);\n      }\n    }\n\n    String path = context.getResource();\n    MatchStatus flag = checkPathPerm(pathVsPerms.get(path), context);\n    if (flag != MatchStatus.NO_PERMISSIONS_FOUND) return flag;\n    return checkPathPerm(pathVsPerms.get(null), context);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8076096f334b0665d0a69a63ee98ac09baad402b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5e0ac06a3dde3a146042d8eb8820dc45326e9263":["8076096f334b0665d0a69a63ee98ac09baad402b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5e0ac06a3dde3a146042d8eb8820dc45326e9263"]},"commit2Childs":{"8076096f334b0665d0a69a63ee98ac09baad402b":["5e0ac06a3dde3a146042d8eb8820dc45326e9263"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8076096f334b0665d0a69a63ee98ac09baad402b"],"5e0ac06a3dde3a146042d8eb8820dc45326e9263":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}