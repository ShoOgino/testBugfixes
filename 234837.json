{"path":"modules/analysis/kuromoji/src/test/org/apache/lucene/analysis/kuromoji/TestKuromojiAnalyzer#testDecomposition().mjava","commits":[{"id":"d2edad55e764cf8cf53361659f41b1d162694184","date":1328458562,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/kuromoji/src/test/org/apache/lucene/analysis/kuromoji/TestKuromojiAnalyzer#testDecomposition().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Test that search mode is enabled and working by default\n   */\n  public void testDecomposition() throws IOException {\n    assertAnalyzesTo(new KuromojiAnalyzer(TEST_VERSION_CURRENT), \"シニアソフトウェアエンジニア\",\n        new String[] { \"シニア\", \"ソフトウェア\", \"エンジニア\" }\n    );\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0984ad47974c2d5d354519ddb2aa8358973a6271","date":1330868053,"type":3,"author":"Christian Moen","isMerge":false,"pathNew":"modules/analysis/kuromoji/src/test/org/apache/lucene/analysis/kuromoji/TestKuromojiAnalyzer#testDecomposition().mjava","pathOld":"modules/analysis/kuromoji/src/test/org/apache/lucene/analysis/kuromoji/TestKuromojiAnalyzer#testDecomposition().mjava","sourceNew":"  /**\n   * Test that search mode is enabled and working by default\n   */\n  public void testDecomposition() throws IOException {\n\n    final Analyzer a = new KuromojiAnalyzer(TEST_VERSION_CURRENT, null, Mode.SEARCH,\n                                            KuromojiAnalyzer.getDefaultStopSet(),\n                                            KuromojiAnalyzer.getDefaultStopTags());\n\n    /*\n    //TokenStream ts = a.tokenStream(\"foo\", new StringReader(\"妹の咲子です。俺と年子で、今受験生です。\"));\n    TokenStream ts = a.tokenStream(\"foo\", new StringReader(\"&#x250cdf66<!--\\\"<!--#<!--;?><!--#<!--#><!---->?>-->;\"));\n    ts.reset();\n    CharTermAttribute termAtt = ts.addAttribute(CharTermAttribute.class);\n    while(ts.incrementToken()) {\n      System.out.println(\"  \" + termAtt.toString());\n    }\n    System.out.println(\"DONE PARSE\\n\\n\");\n    */\n\n    // Senior software engineer:\n    assertAnalyzesToPositions(a, \"シニアソフトウェアエンジニア\",\n                              new String[] { \"シニア\",\n                                             \"シニアソフトウェアエンジニア\",\n                                             \"ソフトウェア\",\n                                             \"エンジニア\" },\n                              new int[] { 1, 0, 1, 1},\n                              new int[] { 1, 3, 1, 1}\n                              );\n\n    // Kansai International Airport:\n    assertAnalyzesToPositions(a, \"関西国際空港\",\n                              new String[] { \"関西\",\n                                             \"関西国際空港\", // zero pos inc\n                                             \"国際\",\n                                             \"空港\" },\n                              new int[] {1, 0, 1, 1},\n                              new int[] {1, 3, 1, 1}\n                              );\n\n    // Konika Minolta Holdings; not quite the right\n    // segmentation (see LUCENE-3726):\n    assertAnalyzesToPositions(a, \"コニカミノルタホールディングス\",\n                              new String[] { \"コニカ\",\n                                             \"コニカミノルタホールディングス\", // zero pos inc\n                                             \"ミノルタ\", \n                                             \"ホールディングス\"},\n                              new int[] {1, 0, 1, 1},\n                              new int[] {1, 3, 1, 1}\n                              );\n\n    // Narita Airport\n    assertAnalyzesToPositions(a, \"成田空港\",\n                              new String[] { \"成田\",\n                                             \"成田空港\",\n                                             \"空港\" },\n                              new int[] {1, 0, 1},\n                              new int[] {1, 2, 1}\n                              );\n\n    // Kyoto University Baseball Club\n    assertAnalyzesToPositions(new KuromojiAnalyzer(TEST_VERSION_CURRENT), \"京都大学硬式野球部\",\n                     new String[] { \"京都大\",\n                                    \"学\",\n                                    \"硬式\",\n                                    \"野球\",\n                                    \"部\" },\n                              new int[] {1, 1, 1, 1, 1},\n                              new int[] {1, 1, 1, 1, 1});\n    // toDotFile(a, \"成田空港\", \"/mnt/scratch/out.dot\");\n  }\n\n","sourceOld":"  /**\n   * Test that search mode is enabled and working by default\n   */\n  public void testDecomposition() throws IOException {\n    assertAnalyzesTo(new KuromojiAnalyzer(TEST_VERSION_CURRENT), \"シニアソフトウェアエンジニア\",\n        new String[] { \"シニア\", \"ソフトウェア\", \"エンジニア\" }\n    );\n  }\n\n","bugFix":null,"bugIntro":["9dcc09cac106847a24991642f3bb5444c60ddbe7"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","date":1331075828,"type":3,"author":"Ryan McKinley","isMerge":true,"pathNew":"modules/analysis/kuromoji/src/test/org/apache/lucene/analysis/kuromoji/TestKuromojiAnalyzer#testDecomposition().mjava","pathOld":"modules/analysis/kuromoji/src/test/org/apache/lucene/analysis/kuromoji/TestKuromojiAnalyzer#testDecomposition().mjava","sourceNew":"  /**\n   * Test that search mode is enabled and working by default\n   */\n  public void testDecomposition() throws IOException {\n\n    final Analyzer a = new KuromojiAnalyzer(TEST_VERSION_CURRENT, null, Mode.SEARCH,\n                                            KuromojiAnalyzer.getDefaultStopSet(),\n                                            KuromojiAnalyzer.getDefaultStopTags());\n\n    /*\n    //TokenStream ts = a.tokenStream(\"foo\", new StringReader(\"妹の咲子です。俺と年子で、今受験生です。\"));\n    TokenStream ts = a.tokenStream(\"foo\", new StringReader(\"&#x250cdf66<!--\\\"<!--#<!--;?><!--#<!--#><!---->?>-->;\"));\n    ts.reset();\n    CharTermAttribute termAtt = ts.addAttribute(CharTermAttribute.class);\n    while(ts.incrementToken()) {\n      System.out.println(\"  \" + termAtt.toString());\n    }\n    System.out.println(\"DONE PARSE\\n\\n\");\n    */\n\n    // Senior software engineer:\n    assertAnalyzesToPositions(a, \"シニアソフトウェアエンジニア\",\n                              new String[] { \"シニア\",\n                                             \"シニアソフトウェアエンジニア\",\n                                             \"ソフトウェア\",\n                                             \"エンジニア\" },\n                              new int[] { 1, 0, 1, 1},\n                              new int[] { 1, 3, 1, 1}\n                              );\n\n    // Kansai International Airport:\n    assertAnalyzesToPositions(a, \"関西国際空港\",\n                              new String[] { \"関西\",\n                                             \"関西国際空港\", // zero pos inc\n                                             \"国際\",\n                                             \"空港\" },\n                              new int[] {1, 0, 1, 1},\n                              new int[] {1, 3, 1, 1}\n                              );\n\n    // Konika Minolta Holdings; not quite the right\n    // segmentation (see LUCENE-3726):\n    assertAnalyzesToPositions(a, \"コニカミノルタホールディングス\",\n                              new String[] { \"コニカ\",\n                                             \"コニカミノルタホールディングス\", // zero pos inc\n                                             \"ミノルタ\", \n                                             \"ホールディングス\"},\n                              new int[] {1, 0, 1, 1},\n                              new int[] {1, 3, 1, 1}\n                              );\n\n    // Narita Airport\n    assertAnalyzesToPositions(a, \"成田空港\",\n                              new String[] { \"成田\",\n                                             \"成田空港\",\n                                             \"空港\" },\n                              new int[] {1, 0, 1},\n                              new int[] {1, 2, 1}\n                              );\n\n    // Kyoto University Baseball Club\n    assertAnalyzesToPositions(new KuromojiAnalyzer(TEST_VERSION_CURRENT), \"京都大学硬式野球部\",\n                     new String[] { \"京都大\",\n                                    \"学\",\n                                    \"硬式\",\n                                    \"野球\",\n                                    \"部\" },\n                              new int[] {1, 1, 1, 1, 1},\n                              new int[] {1, 1, 1, 1, 1});\n    // toDotFile(a, \"成田空港\", \"/mnt/scratch/out.dot\");\n  }\n\n","sourceOld":"  /**\n   * Test that search mode is enabled and working by default\n   */\n  public void testDecomposition() throws IOException {\n    assertAnalyzesTo(new KuromojiAnalyzer(TEST_VERSION_CURRENT), \"シニアソフトウェアエンジニア\",\n        new String[] { \"シニア\", \"ソフトウェア\", \"エンジニア\" }\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9bb31aad028aea902946d552fefeb9901ed6adf1","date":1332571133,"type":3,"author":"Christian Moen","isMerge":false,"pathNew":"modules/analysis/kuromoji/src/test/org/apache/lucene/analysis/kuromoji/TestKuromojiAnalyzer#testDecomposition().mjava","pathOld":"modules/analysis/kuromoji/src/test/org/apache/lucene/analysis/kuromoji/TestKuromojiAnalyzer#testDecomposition().mjava","sourceNew":"  /**\n   * Test that search mode is enabled and working by default\n   */\n  public void testDecomposition() throws IOException {\n\n    final Analyzer a = new KuromojiAnalyzer(TEST_VERSION_CURRENT, null, Mode.SEARCH,\n                                            KuromojiAnalyzer.getDefaultStopSet(),\n                                            KuromojiAnalyzer.getDefaultStopTags());\n\n    // Senior software engineer:\n    assertAnalyzesToPositions(a, \"シニアソフトウェアエンジニア\",\n                              new String[] { \"シニア\",\n                                             \"シニアソフトウェアエンジニア\", // zero pos inc\n                                             \"ソフトウェア\",\n                                             \"エンジニア\" },\n                              new int[] { 1, 0, 1, 1},\n                              new int[] { 1, 3, 1, 1}\n                              );\n\n    // Senior project manager: also tests katakana spelling variation stemming\n    assertAnalyzesToPositions(a, \"シニアプロジェクトマネージャー\",\n                              new String[] { \"シニア\",\n                                              \"シニアプロジェクトマネージャ\", // trailing ー removed by stemming, zero pos inc\n                                              \"プロジェクト\",\n                                              \"マネージャ\"}, // trailing ー removed by stemming\n                              new int[]{1, 0, 1, 1},\n                              new int[]{1, 3, 1, 1}\n                              );\n\n    // Kansai International Airport:\n    assertAnalyzesToPositions(a, \"関西国際空港\",\n                              new String[] { \"関西\",\n                                             \"関西国際空港\", // zero pos inc\n                                             \"国際\",\n                                             \"空港\" },\n                              new int[] {1, 0, 1, 1},\n                              new int[] {1, 3, 1, 1}\n                              );\n\n    // Konika Minolta Holdings; not quite the right\n    // segmentation (see LUCENE-3726):\n    assertAnalyzesToPositions(a, \"コニカミノルタホールディングス\",\n                              new String[] { \"コニカ\",\n                                             \"コニカミノルタホールディングス\", // zero pos inc\n                                             \"ミノルタ\", \n                                             \"ホールディングス\"},\n                              new int[] {1, 0, 1, 1},\n                              new int[] {1, 3, 1, 1}\n                              );\n\n    // Narita Airport\n    assertAnalyzesToPositions(a, \"成田空港\",\n                              new String[] { \"成田\",\n                                             \"成田空港\",\n                                             \"空港\" },\n                              new int[] {1, 0, 1},\n                              new int[] {1, 2, 1}\n                              );\n\n    // Kyoto University Baseball Club\n    assertAnalyzesToPositions(new KuromojiAnalyzer(TEST_VERSION_CURRENT), \"京都大学硬式野球部\",\n                     new String[] { \"京都大\",\n                                    \"学\",\n                                    \"硬式\",\n                                    \"野球\",\n                                    \"部\" },\n                              new int[] {1, 1, 1, 1, 1},\n                              new int[] {1, 1, 1, 1, 1});\n    // toDotFile(a, \"成田空港\", \"/mnt/scratch/out.dot\");\n  }\n\n","sourceOld":"  /**\n   * Test that search mode is enabled and working by default\n   */\n  public void testDecomposition() throws IOException {\n\n    final Analyzer a = new KuromojiAnalyzer(TEST_VERSION_CURRENT, null, Mode.SEARCH,\n                                            KuromojiAnalyzer.getDefaultStopSet(),\n                                            KuromojiAnalyzer.getDefaultStopTags());\n\n    /*\n    //TokenStream ts = a.tokenStream(\"foo\", new StringReader(\"妹の咲子です。俺と年子で、今受験生です。\"));\n    TokenStream ts = a.tokenStream(\"foo\", new StringReader(\"&#x250cdf66<!--\\\"<!--#<!--;?><!--#<!--#><!---->?>-->;\"));\n    ts.reset();\n    CharTermAttribute termAtt = ts.addAttribute(CharTermAttribute.class);\n    while(ts.incrementToken()) {\n      System.out.println(\"  \" + termAtt.toString());\n    }\n    System.out.println(\"DONE PARSE\\n\\n\");\n    */\n\n    // Senior software engineer:\n    assertAnalyzesToPositions(a, \"シニアソフトウェアエンジニア\",\n                              new String[] { \"シニア\",\n                                             \"シニアソフトウェアエンジニア\",\n                                             \"ソフトウェア\",\n                                             \"エンジニア\" },\n                              new int[] { 1, 0, 1, 1},\n                              new int[] { 1, 3, 1, 1}\n                              );\n\n    // Kansai International Airport:\n    assertAnalyzesToPositions(a, \"関西国際空港\",\n                              new String[] { \"関西\",\n                                             \"関西国際空港\", // zero pos inc\n                                             \"国際\",\n                                             \"空港\" },\n                              new int[] {1, 0, 1, 1},\n                              new int[] {1, 3, 1, 1}\n                              );\n\n    // Konika Minolta Holdings; not quite the right\n    // segmentation (see LUCENE-3726):\n    assertAnalyzesToPositions(a, \"コニカミノルタホールディングス\",\n                              new String[] { \"コニカ\",\n                                             \"コニカミノルタホールディングス\", // zero pos inc\n                                             \"ミノルタ\", \n                                             \"ホールディングス\"},\n                              new int[] {1, 0, 1, 1},\n                              new int[] {1, 3, 1, 1}\n                              );\n\n    // Narita Airport\n    assertAnalyzesToPositions(a, \"成田空港\",\n                              new String[] { \"成田\",\n                                             \"成田空港\",\n                                             \"空港\" },\n                              new int[] {1, 0, 1},\n                              new int[] {1, 2, 1}\n                              );\n\n    // Kyoto University Baseball Club\n    assertAnalyzesToPositions(new KuromojiAnalyzer(TEST_VERSION_CURRENT), \"京都大学硬式野球部\",\n                     new String[] { \"京都大\",\n                                    \"学\",\n                                    \"硬式\",\n                                    \"野球\",\n                                    \"部\" },\n                              new int[] {1, 1, 1, 1, 1},\n                              new int[] {1, 1, 1, 1, 1});\n    // toDotFile(a, \"成田空港\", \"/mnt/scratch/out.dot\");\n  }\n\n","bugFix":null,"bugIntro":["9dcc09cac106847a24991642f3bb5444c60ddbe7"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"98d45c1ff2c99694b6de2201175f9b8b8b27b597","date":1332757908,"type":5,"author":"Christian Moen","isMerge":false,"pathNew":"modules/analysis/kuromoji/src/test/org/apache/lucene/analysis/ja/TestJapaneseAnalyzer#testDecomposition().mjava","pathOld":"modules/analysis/kuromoji/src/test/org/apache/lucene/analysis/kuromoji/TestKuromojiAnalyzer#testDecomposition().mjava","sourceNew":"  /**\n   * Test that search mode is enabled and working by default\n   */\n  public void testDecomposition() throws IOException {\n\n    final Analyzer a = new JapaneseAnalyzer(TEST_VERSION_CURRENT, null, Mode.SEARCH,\n                                            JapaneseAnalyzer.getDefaultStopSet(),\n                                            JapaneseAnalyzer.getDefaultStopTags());\n\n    // Senior software engineer:\n    assertAnalyzesToPositions(a, \"シニアソフトウェアエンジニア\",\n                              new String[] { \"シニア\",\n                                             \"シニアソフトウェアエンジニア\", // zero pos inc\n                                             \"ソフトウェア\",\n                                             \"エンジニア\" },\n                              new int[] { 1, 0, 1, 1},\n                              new int[] { 1, 3, 1, 1}\n                              );\n\n    // Senior project manager: also tests katakana spelling variation stemming\n    assertAnalyzesToPositions(a, \"シニアプロジェクトマネージャー\",\n                              new String[] { \"シニア\",\n                                              \"シニアプロジェクトマネージャ\", // trailing ー removed by stemming, zero pos inc\n                                              \"プロジェクト\",\n                                              \"マネージャ\"}, // trailing ー removed by stemming\n                              new int[]{1, 0, 1, 1},\n                              new int[]{1, 3, 1, 1}\n                              );\n\n    // Kansai International Airport:\n    assertAnalyzesToPositions(a, \"関西国際空港\",\n                              new String[] { \"関西\",\n                                             \"関西国際空港\", // zero pos inc\n                                             \"国際\",\n                                             \"空港\" },\n                              new int[] {1, 0, 1, 1},\n                              new int[] {1, 3, 1, 1}\n                              );\n\n    // Konika Minolta Holdings; not quite the right\n    // segmentation (see LUCENE-3726):\n    assertAnalyzesToPositions(a, \"コニカミノルタホールディングス\",\n                              new String[] { \"コニカ\",\n                                             \"コニカミノルタホールディングス\", // zero pos inc\n                                             \"ミノルタ\", \n                                             \"ホールディングス\"},\n                              new int[] {1, 0, 1, 1},\n                              new int[] {1, 3, 1, 1}\n                              );\n\n    // Narita Airport\n    assertAnalyzesToPositions(a, \"成田空港\",\n                              new String[] { \"成田\",\n                                             \"成田空港\",\n                                             \"空港\" },\n                              new int[] {1, 0, 1},\n                              new int[] {1, 2, 1}\n                              );\n\n    // Kyoto University Baseball Club\n    assertAnalyzesToPositions(new JapaneseAnalyzer(TEST_VERSION_CURRENT), \"京都大学硬式野球部\",\n                     new String[] { \"京都大\",\n                                    \"学\",\n                                    \"硬式\",\n                                    \"野球\",\n                                    \"部\" },\n                              new int[] {1, 1, 1, 1, 1},\n                              new int[] {1, 1, 1, 1, 1});\n    // toDotFile(a, \"成田空港\", \"/mnt/scratch/out.dot\");\n  }\n\n","sourceOld":"  /**\n   * Test that search mode is enabled and working by default\n   */\n  public void testDecomposition() throws IOException {\n\n    final Analyzer a = new KuromojiAnalyzer(TEST_VERSION_CURRENT, null, Mode.SEARCH,\n                                            KuromojiAnalyzer.getDefaultStopSet(),\n                                            KuromojiAnalyzer.getDefaultStopTags());\n\n    // Senior software engineer:\n    assertAnalyzesToPositions(a, \"シニアソフトウェアエンジニア\",\n                              new String[] { \"シニア\",\n                                             \"シニアソフトウェアエンジニア\", // zero pos inc\n                                             \"ソフトウェア\",\n                                             \"エンジニア\" },\n                              new int[] { 1, 0, 1, 1},\n                              new int[] { 1, 3, 1, 1}\n                              );\n\n    // Senior project manager: also tests katakana spelling variation stemming\n    assertAnalyzesToPositions(a, \"シニアプロジェクトマネージャー\",\n                              new String[] { \"シニア\",\n                                              \"シニアプロジェクトマネージャ\", // trailing ー removed by stemming, zero pos inc\n                                              \"プロジェクト\",\n                                              \"マネージャ\"}, // trailing ー removed by stemming\n                              new int[]{1, 0, 1, 1},\n                              new int[]{1, 3, 1, 1}\n                              );\n\n    // Kansai International Airport:\n    assertAnalyzesToPositions(a, \"関西国際空港\",\n                              new String[] { \"関西\",\n                                             \"関西国際空港\", // zero pos inc\n                                             \"国際\",\n                                             \"空港\" },\n                              new int[] {1, 0, 1, 1},\n                              new int[] {1, 3, 1, 1}\n                              );\n\n    // Konika Minolta Holdings; not quite the right\n    // segmentation (see LUCENE-3726):\n    assertAnalyzesToPositions(a, \"コニカミノルタホールディングス\",\n                              new String[] { \"コニカ\",\n                                             \"コニカミノルタホールディングス\", // zero pos inc\n                                             \"ミノルタ\", \n                                             \"ホールディングス\"},\n                              new int[] {1, 0, 1, 1},\n                              new int[] {1, 3, 1, 1}\n                              );\n\n    // Narita Airport\n    assertAnalyzesToPositions(a, \"成田空港\",\n                              new String[] { \"成田\",\n                                             \"成田空港\",\n                                             \"空港\" },\n                              new int[] {1, 0, 1},\n                              new int[] {1, 2, 1}\n                              );\n\n    // Kyoto University Baseball Club\n    assertAnalyzesToPositions(new KuromojiAnalyzer(TEST_VERSION_CURRENT), \"京都大学硬式野球部\",\n                     new String[] { \"京都大\",\n                                    \"学\",\n                                    \"硬式\",\n                                    \"野球\",\n                                    \"部\" },\n                              new int[] {1, 1, 1, 1, 1},\n                              new int[] {1, 1, 1, 1, 1});\n    // toDotFile(a, \"成田空港\", \"/mnt/scratch/out.dot\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"d2edad55e764cf8cf53361659f41b1d162694184":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":["d2edad55e764cf8cf53361659f41b1d162694184","0984ad47974c2d5d354519ddb2aa8358973a6271"],"0984ad47974c2d5d354519ddb2aa8358973a6271":["d2edad55e764cf8cf53361659f41b1d162694184"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"98d45c1ff2c99694b6de2201175f9b8b8b27b597":["9bb31aad028aea902946d552fefeb9901ed6adf1"],"9bb31aad028aea902946d552fefeb9901ed6adf1":["0984ad47974c2d5d354519ddb2aa8358973a6271"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["98d45c1ff2c99694b6de2201175f9b8b8b27b597"]},"commit2Childs":{"d2edad55e764cf8cf53361659f41b1d162694184":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","0984ad47974c2d5d354519ddb2aa8358973a6271"],"9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab":[],"0984ad47974c2d5d354519ddb2aa8358973a6271":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","9bb31aad028aea902946d552fefeb9901ed6adf1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d2edad55e764cf8cf53361659f41b1d162694184"],"98d45c1ff2c99694b6de2201175f9b8b8b27b597":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9bb31aad028aea902946d552fefeb9901ed6adf1":["98d45c1ff2c99694b6de2201175f9b8b8b27b597"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["9946ea6d8ddf0b8c20b2ca6a816b7168b023a6ab","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}