{"path":"sandbox/contributions/webcrawler-LARM/libs/HTTPClient-patch/HTTPClient/HTTPConnection#HTTPConnection(String,String,int,InetAddress,int).mjava","commits":[{"id":"bc6055f4a2e8e9f9caaec2297010c9502480ed69","date":1050060580,"type":0,"author":"cmarschner","isMerge":false,"pathNew":"sandbox/contributions/webcrawler-LARM/libs/HTTPClient-patch/HTTPClient/HTTPConnection#HTTPConnection(String,String,int,InetAddress,int).mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * Constructs a connection to the specified host on the specified port,\n     * using the specified protocol (currently only \"http\" is supported), local\n     * address, and local port.\n     *\n     * @param prot                          the protocol\n     * @param host                          the host\n     * @param port                          the port, or -1 for the default port\n     * @param localAddr                     the local address to bind to\n     * @param localPort                     Description of the Parameter\n     * @exception ProtocolNotSuppException  if the protocol is not HTTP\n     */\n    public HTTPConnection(String prot, String host, int port,\n            InetAddress localAddr, int localPort)\n        throws ProtocolNotSuppException\n    {\n        prot = prot.trim().toLowerCase();\n\n        //if (!prot.equals(\"http\")  &&  !prot.equals(\"https\"))\n        if (!prot.equals(\"http\"))\n        {\n            throw new ProtocolNotSuppException(\"Unsupported protocol '\" + prot + \"'\");\n        }\n\n        if (prot.equals(\"http\"))\n        {\n            Setup(HTTP, host, port, localAddr, localPort);\n        }\n        else if (prot.equals(\"https\"))\n        {\n            Setup(HTTPS, host, port, localAddr, localPort);\n        }\n        else if (prot.equals(\"shttp\"))\n        {\n            Setup(SHTTP, host, port, localAddr, localPort);\n        }\n        else if (prot.equals(\"http-ng\"))\n        {\n            Setup(HTTP_NG, host, port, localAddr, localPort);\n        }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"afc16d717d9ed1a8e45371668ca6de674164d624","date":1103345442,"type":4,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"/dev/null","pathOld":"sandbox/contributions/webcrawler-LARM/libs/HTTPClient-patch/HTTPClient/HTTPConnection#HTTPConnection(String,String,int,InetAddress,int).mjava","sourceNew":null,"sourceOld":"    /**\n     * Constructs a connection to the specified host on the specified port,\n     * using the specified protocol (currently only \"http\" is supported), local\n     * address, and local port.\n     *\n     * @param prot                          the protocol\n     * @param host                          the host\n     * @param port                          the port, or -1 for the default port\n     * @param localAddr                     the local address to bind to\n     * @param localPort                     Description of the Parameter\n     * @exception ProtocolNotSuppException  if the protocol is not HTTP\n     */\n    public HTTPConnection(String prot, String host, int port,\n            InetAddress localAddr, int localPort)\n        throws ProtocolNotSuppException\n    {\n        prot = prot.trim().toLowerCase();\n\n        //if (!prot.equals(\"http\")  &&  !prot.equals(\"https\"))\n        if (!prot.equals(\"http\"))\n        {\n            throw new ProtocolNotSuppException(\"Unsupported protocol '\" + prot + \"'\");\n        }\n\n        if (prot.equals(\"http\"))\n        {\n            Setup(HTTP, host, port, localAddr, localPort);\n        }\n        else if (prot.equals(\"https\"))\n        {\n            Setup(HTTPS, host, port, localAddr, localPort);\n        }\n        else if (prot.equals(\"shttp\"))\n        {\n            Setup(SHTTP, host, port, localAddr, localPort);\n        }\n        else if (prot.equals(\"http-ng\"))\n        {\n            Setup(HTTP_NG, host, port, localAddr, localPort);\n        }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"bc6055f4a2e8e9f9caaec2297010c9502480ed69":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"afc16d717d9ed1a8e45371668ca6de674164d624":["bc6055f4a2e8e9f9caaec2297010c9502480ed69"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["afc16d717d9ed1a8e45371668ca6de674164d624"]},"commit2Childs":{"bc6055f4a2e8e9f9caaec2297010c9502480ed69":["afc16d717d9ed1a8e45371668ca6de674164d624"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["bc6055f4a2e8e9f9caaec2297010c9502480ed69"],"afc16d717d9ed1a8e45371668ca6de674164d624":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}