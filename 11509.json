{"path":"lucene/backward-codecs/src/test/org/apache/lucene/codecs/lucene49/TestLucene49NormsFormat#testReadUndeadNorms().mjava","commits":[{"id":"05da2d758a6089e737cdfc230e57a51b472b94b6","date":1413392310,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/backward-codecs/src/test/org/apache/lucene/codecs/lucene49/TestLucene49NormsFormat#testReadUndeadNorms().mjava","pathOld":"/dev/null","sourceNew":"  /** \n   * LUCENE-6006: Test undead norms.\n   *                                 .....            \n   *                             C C  /            \n   *                            /<   /             \n   *             ___ __________/_#__=o             \n   *            /(- /(\\_\\________   \\              \n   *            \\ ) \\ )_      \\o     \\             \n   *            /|\\ /|\\       |'     |             \n   *                          |     _|             \n   *                          /o   __\\             \n   *                         / '     |             \n   *                        / /      |             \n   *                       /_/\\______|             \n   *                      (   _(    <              \n   *                       \\    \\    \\             \n   *                        \\    \\    |            \n   *                         \\____\\____\\           \n   *                         ____\\_\\__\\_\\          \n   *                       /`   /`     o\\          \n   *                       |___ |_______|\n   *\n   */\n  public void testReadUndeadNorms() throws Exception {\n    InputStream resource = TestLucene49NormsFormat.class.getResourceAsStream(\"index.49.undeadnorms.zip\");\n    assertNotNull(resource);\n    Path path = createTempDir(\"undeadnorms\");\n    TestUtil.unzip(resource, path);\n    Directory dir = FSDirectory.open(path);\n    IndexReader r = DirectoryReader.open(dir);\n    NumericDocValues undeadNorms = MultiDocValues.getNormValues(r, \"content\");\n    assertNotNull(undeadNorms);\n    assertEquals(2, r.maxDoc());\n    assertEquals(0, undeadNorms.get(0));\n    assertEquals(0, undeadNorms.get(1));\n    dir.close();\n    r.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c93b0dbaa6abe99bc8d1b476bcacc27b324b2b84","date":1413458798,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/backward-codecs/src/test/org/apache/lucene/codecs/lucene49/TestLucene49NormsFormat#testReadUndeadNorms().mjava","pathOld":"/dev/null","sourceNew":"  /** \n   * LUCENE-6006: Test undead norms.\n   *                                 .....            \n   *                             C C  /            \n   *                            /<   /             \n   *             ___ __________/_#__=o             \n   *            /(- /(\\_\\________   \\              \n   *            \\ ) \\ )_      \\o     \\             \n   *            /|\\ /|\\       |'     |             \n   *                          |     _|             \n   *                          /o   __\\             \n   *                         / '     |             \n   *                        / /      |             \n   *                       /_/\\______|             \n   *                      (   _(    <              \n   *                       \\    \\    \\             \n   *                        \\    \\    |            \n   *                         \\____\\____\\           \n   *                         ____\\_\\__\\_\\          \n   *                       /`   /`     o\\          \n   *                       |___ |_______|\n   *\n   */\n  public void testReadUndeadNorms() throws Exception {\n    InputStream resource = TestLucene49NormsFormat.class.getResourceAsStream(\"index.49.undeadnorms.zip\");\n    assertNotNull(resource);\n    Path path = createTempDir(\"undeadnorms\");\n    TestUtil.unzip(resource, path);\n    Directory dir = FSDirectory.open(path);\n    IndexReader r = DirectoryReader.open(dir);\n    NumericDocValues undeadNorms = MultiDocValues.getNormValues(r, \"content\");\n    assertNotNull(undeadNorms);\n    assertEquals(2, r.maxDoc());\n    assertEquals(0, undeadNorms.get(0));\n    assertEquals(0, undeadNorms.get(1));\n    dir.close();\n    r.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"71387d8cb6923eb831b17a8b734608ba2e21c653","date":1414126093,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/backward-codecs/src/test/org/apache/lucene/codecs/lucene49/TestLucene49NormsFormat#testReadUndeadNorms().mjava","sourceNew":null,"sourceOld":"  /** \n   * LUCENE-6006: Test undead norms.\n   *                                 .....            \n   *                             C C  /            \n   *                            /<   /             \n   *             ___ __________/_#__=o             \n   *            /(- /(\\_\\________   \\              \n   *            \\ ) \\ )_      \\o     \\             \n   *            /|\\ /|\\       |'     |             \n   *                          |     _|             \n   *                          /o   __\\             \n   *                         / '     |             \n   *                        / /      |             \n   *                       /_/\\______|             \n   *                      (   _(    <              \n   *                       \\    \\    \\             \n   *                        \\    \\    |            \n   *                         \\____\\____\\           \n   *                         ____\\_\\__\\_\\          \n   *                       /`   /`     o\\          \n   *                       |___ |_______|\n   *\n   */\n  public void testReadUndeadNorms() throws Exception {\n    InputStream resource = TestLucene49NormsFormat.class.getResourceAsStream(\"index.49.undeadnorms.zip\");\n    assertNotNull(resource);\n    Path path = createTempDir(\"undeadnorms\");\n    TestUtil.unzip(resource, path);\n    Directory dir = FSDirectory.open(path);\n    IndexReader r = DirectoryReader.open(dir);\n    NumericDocValues undeadNorms = MultiDocValues.getNormValues(r, \"content\");\n    assertNotNull(undeadNorms);\n    assertEquals(2, r.maxDoc());\n    assertEquals(0, undeadNorms.get(0));\n    assertEquals(0, undeadNorms.get(1));\n    dir.close();\n    r.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"05da2d758a6089e737cdfc230e57a51b472b94b6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c93b0dbaa6abe99bc8d1b476bcacc27b324b2b84":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","05da2d758a6089e737cdfc230e57a51b472b94b6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"71387d8cb6923eb831b17a8b734608ba2e21c653":["05da2d758a6089e737cdfc230e57a51b472b94b6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["71387d8cb6923eb831b17a8b734608ba2e21c653"]},"commit2Childs":{"05da2d758a6089e737cdfc230e57a51b472b94b6":["c93b0dbaa6abe99bc8d1b476bcacc27b324b2b84","71387d8cb6923eb831b17a8b734608ba2e21c653"],"c93b0dbaa6abe99bc8d1b476bcacc27b324b2b84":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["05da2d758a6089e737cdfc230e57a51b472b94b6","c93b0dbaa6abe99bc8d1b476bcacc27b324b2b84"],"71387d8cb6923eb831b17a8b734608ba2e21c653":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c93b0dbaa6abe99bc8d1b476bcacc27b324b2b84","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}