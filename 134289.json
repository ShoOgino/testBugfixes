{"path":"src/test/org/apache/solr/analysis/HTMLStripReaderTest#testBufferOverflow().mjava","commits":[{"id":"187b932e3f791668d245124e03d899af557d22df","date":1199907679,"type":0,"author":"Erik Hatcher","isMerge":false,"pathNew":"src/test/org/apache/solr/analysis/HTMLStripReaderTest#testBufferOverflow().mjava","pathOld":"/dev/null","sourceNew":"  public void testBufferOverflow() throws Exception {\n    StringBuilder testBuilder = new StringBuilder(HTMLStripReader.DEFAULT_READ_AHEAD + 50);\n    testBuilder.append(\"ah<?> \");\n    appendChars(testBuilder, HTMLStripReader.DEFAULT_READ_AHEAD + 500);\n    processBuffer(testBuilder.toString(), \"Failed on pseudo proc. instr.\");//processing instructions\n\n    testBuilder.setLength(0);\n    testBuilder.append(\"<!--\");//comments\n    appendChars(testBuilder, 3*HTMLStripReader.DEFAULT_READ_AHEAD + 500);//comments have two lookaheads\n\n    testBuilder.append(\"-->foo\");\n    processBuffer(testBuilder.toString(), \"Failed w/ comment\");\n\n    testBuilder.setLength(0);\n    testBuilder.append(\"<?\");\n    appendChars(testBuilder, HTMLStripReader.DEFAULT_READ_AHEAD + 500);\n    testBuilder.append(\"?>\");\n    processBuffer(testBuilder.toString(), \"Failed with proc. instr.\");\n    \n    testBuilder.setLength(0);\n    testBuilder.append(\"<b \");\n    appendChars(testBuilder, HTMLStripReader.DEFAULT_READ_AHEAD + 500);\n    testBuilder.append(\"/>\");\n    processBuffer(testBuilder.toString(), \"Failed on tag\");\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["ab081a78869a616f9c93e5b2f3ec2f99c2f7f741","e3a908bacd530957eaa6d2dfebdd534afd9ac60e"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"bd69280df0902763e47cb14745388ee17a2fb602","date":1249686305,"type":5,"author":"Koji Sekiguchi","isMerge":false,"pathNew":"src/test/org/apache/solr/analysis/HTMLStripCharFilterTest#testBufferOverflow().mjava","pathOld":"src/test/org/apache/solr/analysis/HTMLStripReaderTest#testBufferOverflow().mjava","sourceNew":"  public void testBufferOverflow() throws Exception {\n    StringBuilder testBuilder = new StringBuilder(HTMLStripCharFilter.DEFAULT_READ_AHEAD + 50);\n    testBuilder.append(\"ah<?> \");\n    appendChars(testBuilder, HTMLStripCharFilter.DEFAULT_READ_AHEAD + 500);\n    processBuffer(testBuilder.toString(), \"Failed on pseudo proc. instr.\");//processing instructions\n\n    testBuilder.setLength(0);\n    testBuilder.append(\"<!--\");//comments\n    appendChars(testBuilder, 3*HTMLStripCharFilter.DEFAULT_READ_AHEAD + 500);//comments have two lookaheads\n\n    testBuilder.append(\"-->foo\");\n    processBuffer(testBuilder.toString(), \"Failed w/ comment\");\n\n    testBuilder.setLength(0);\n    testBuilder.append(\"<?\");\n    appendChars(testBuilder, HTMLStripCharFilter.DEFAULT_READ_AHEAD + 500);\n    testBuilder.append(\"?>\");\n    processBuffer(testBuilder.toString(), \"Failed with proc. instr.\");\n    \n    testBuilder.setLength(0);\n    testBuilder.append(\"<b \");\n    appendChars(testBuilder, HTMLStripCharFilter.DEFAULT_READ_AHEAD + 500);\n    testBuilder.append(\"/>\");\n    processBuffer(testBuilder.toString(), \"Failed on tag\");\n\n  }\n\n","sourceOld":"  public void testBufferOverflow() throws Exception {\n    StringBuilder testBuilder = new StringBuilder(HTMLStripReader.DEFAULT_READ_AHEAD + 50);\n    testBuilder.append(\"ah<?> \");\n    appendChars(testBuilder, HTMLStripReader.DEFAULT_READ_AHEAD + 500);\n    processBuffer(testBuilder.toString(), \"Failed on pseudo proc. instr.\");//processing instructions\n\n    testBuilder.setLength(0);\n    testBuilder.append(\"<!--\");//comments\n    appendChars(testBuilder, 3*HTMLStripReader.DEFAULT_READ_AHEAD + 500);//comments have two lookaheads\n\n    testBuilder.append(\"-->foo\");\n    processBuffer(testBuilder.toString(), \"Failed w/ comment\");\n\n    testBuilder.setLength(0);\n    testBuilder.append(\"<?\");\n    appendChars(testBuilder, HTMLStripReader.DEFAULT_READ_AHEAD + 500);\n    testBuilder.append(\"?>\");\n    processBuffer(testBuilder.toString(), \"Failed with proc. instr.\");\n    \n    testBuilder.setLength(0);\n    testBuilder.append(\"<b \");\n    appendChars(testBuilder, HTMLStripReader.DEFAULT_READ_AHEAD + 500);\n    testBuilder.append(\"/>\");\n    processBuffer(testBuilder.toString(), \"Failed on tag\");\n\n  }\n\n","bugFix":null,"bugIntro":["e3a908bacd530957eaa6d2dfebdd534afd9ac60e"],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"bd69280df0902763e47cb14745388ee17a2fb602":["187b932e3f791668d245124e03d899af557d22df"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"187b932e3f791668d245124e03d899af557d22df":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["187b932e3f791668d245124e03d899af557d22df"],"bd69280df0902763e47cb14745388ee17a2fb602":[],"187b932e3f791668d245124e03d899af557d22df":["bd69280df0902763e47cb14745388ee17a2fb602"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["bd69280df0902763e47cb14745388ee17a2fb602","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}