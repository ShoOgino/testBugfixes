{"path":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/bg/BulgarianAnalyzer#reusableTokenStream(String,Reader).mjava","commits":[{"id":"b1db5edc6e70c0b0e6a3c8e1ac5a87f99ce63c74","date":1259770136,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/bg/BulgarianAnalyzer#reusableTokenStream(String,Reader).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Returns a (possibly reused) {@link TokenStream} which tokenizes all the\n   * text in the provided {@link Reader}.\n   * \n   * @return A {@link TokenStream} built from an {@link StandardTokenizer}\n   *         filtered with {@link StandardFilter}, {@link LowerCaseFilter},\n   *         {@link StopFilter}, and {@link BulgarianStemFilter}.\n   */\n  @Override\n  public TokenStream reusableTokenStream(String fieldName, Reader reader)\n      throws IOException {\n    SavedStreams streams = (SavedStreams) getPreviousTokenStream();\n    if (streams == null) {\n      streams = new SavedStreams();\n      streams.source = new StandardTokenizer(matchVersion, reader);\n      streams.result = new StandardFilter(streams.source);\n      streams.result = new LowerCaseFilter(matchVersion, streams.result);\n      streams.result = new StopFilter(matchVersion, streams.result, stoptable);\n      streams.result = new BulgarianStemFilter(streams.result);\n      setPreviousTokenStream(streams);\n    } else {\n      streams.source.reset(reader);\n    }\n    return streams.result;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ddc5fbfd4c64963aba52713a4496522540294d69","date":1262508497,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/bg/BulgarianAnalyzer#reusableTokenStream(String,Reader).mjava","sourceNew":null,"sourceOld":"  /**\n   * Returns a (possibly reused) {@link TokenStream} which tokenizes all the\n   * text in the provided {@link Reader}.\n   * \n   * @return A {@link TokenStream} built from an {@link StandardTokenizer}\n   *         filtered with {@link StandardFilter}, {@link LowerCaseFilter},\n   *         {@link StopFilter}, and {@link BulgarianStemFilter}.\n   */\n  @Override\n  public TokenStream reusableTokenStream(String fieldName, Reader reader)\n      throws IOException {\n    SavedStreams streams = (SavedStreams) getPreviousTokenStream();\n    if (streams == null) {\n      streams = new SavedStreams();\n      streams.source = new StandardTokenizer(matchVersion, reader);\n      streams.result = new StandardFilter(streams.source);\n      streams.result = new LowerCaseFilter(matchVersion, streams.result);\n      streams.result = new StopFilter(matchVersion, streams.result, stoptable);\n      streams.result = new BulgarianStemFilter(streams.result);\n      setPreviousTokenStream(streams);\n    } else {\n      streams.source.reset(reader);\n    }\n    return streams.result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ddc5fbfd4c64963aba52713a4496522540294d69":["b1db5edc6e70c0b0e6a3c8e1ac5a87f99ce63c74"],"b1db5edc6e70c0b0e6a3c8e1ac5a87f99ce63c74":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ddc5fbfd4c64963aba52713a4496522540294d69"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b1db5edc6e70c0b0e6a3c8e1ac5a87f99ce63c74"],"ddc5fbfd4c64963aba52713a4496522540294d69":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b1db5edc6e70c0b0e6a3c8e1ac5a87f99ce63c74":["ddc5fbfd4c64963aba52713a4496522540294d69"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}