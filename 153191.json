{"path":"lucene/core/src/java/org/apache/lucene/search/FieldComparator.NumericComparator#doSetNextReader(LeafReaderContext).mjava","commits":[{"id":"901e951cec2e6af4e503209a6721c8834db23279","date":1420556599,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/FieldComparator.NumericComparator#doSetNextReader(LeafReaderContext).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/FieldComparator.NumericComparator#setNextReader(LeafReaderContext).mjava","sourceNew":"    @Override\n    protected void doSetNextReader(LeafReaderContext context) throws IOException {\n      currentReaderValues = getNumericDocValues(context, field);\n      if (missingValue != null) {\n        docsWithField = DocValues.getDocsWithField(context.reader(), field);\n        // optimization to remove unneeded checks on the bit interface:\n        if (docsWithField instanceof Bits.MatchAllBits) {\n          docsWithField = null;\n        }\n      } else {\n        docsWithField = null;\n      }\n    }\n\n","sourceOld":"    @Override\n    public FieldComparator<T> setNextReader(LeafReaderContext context) throws IOException {\n      currentReaderValues = getNumericDocValues(context, field);\n      if (missingValue != null) {\n        docsWithField = DocValues.getDocsWithField(context.reader(), field);\n        // optimization to remove unneeded checks on the bit interface:\n        if (docsWithField instanceof Bits.MatchAllBits) {\n          docsWithField = null;\n        }\n      } else {\n        docsWithField = null;\n      }\n      return this;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"db447c88c3c3367999a54f10d9a207f3e63db201","date":1435740861,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/FieldComparator.NumericComparator#doSetNextReader(LeafReaderContext).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/FieldComparator.NumericComparator#doSetNextReader(LeafReaderContext).mjava","sourceNew":"    @Override\n    protected void doSetNextReader(LeafReaderContext context) throws IOException {\n      currentReaderValues = getNumericDocValues(context, field);\n      if (missingValue != null) {\n        docsWithField = getDocsWithValue(context, field);\n        // optimization to remove unneeded checks on the bit interface:\n        if (docsWithField instanceof Bits.MatchAllBits) {\n          docsWithField = null;\n        }\n      } else {\n        docsWithField = null;\n      }\n    }\n\n","sourceOld":"    @Override\n    protected void doSetNextReader(LeafReaderContext context) throws IOException {\n      currentReaderValues = getNumericDocValues(context, field);\n      if (missingValue != null) {\n        docsWithField = DocValues.getDocsWithField(context.reader(), field);\n        // optimization to remove unneeded checks on the bit interface:\n        if (docsWithField instanceof Bits.MatchAllBits) {\n          docsWithField = null;\n        }\n      } else {\n        docsWithField = null;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6652c74b2358a0b13223817a6a793bf1c9d0749d","date":1474465301,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/FieldComparator.NumericComparator#doSetNextReader(LeafReaderContext).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/FieldComparator.NumericComparator#doSetNextReader(LeafReaderContext).mjava","sourceNew":"    @Override\n    protected void doSetNextReader(LeafReaderContext context) throws IOException {\n      currentReaderValues = getNumericDocValues(context, field);\n    }\n\n","sourceOld":"    @Override\n    protected void doSetNextReader(LeafReaderContext context) throws IOException {\n      currentReaderValues = getNumericDocValues(context, field);\n      if (missingValue != null) {\n        docsWithField = getDocsWithValue(context, field);\n        // optimization to remove unneeded checks on the bit interface:\n        if (docsWithField instanceof Bits.MatchAllBits) {\n          docsWithField = null;\n        }\n      } else {\n        docsWithField = null;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17e5da53e4e5bd659e22add9bba1cfa222e7e30d","date":1475435902,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/FieldComparator.NumericComparator#doSetNextReader(LeafReaderContext).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/FieldComparator.NumericComparator#doSetNextReader(LeafReaderContext).mjava","sourceNew":"    @Override\n    protected void doSetNextReader(LeafReaderContext context) throws IOException {\n      currentReaderValues = getNumericDocValues(context, field);\n    }\n\n","sourceOld":"    @Override\n    protected void doSetNextReader(LeafReaderContext context) throws IOException {\n      currentReaderValues = getNumericDocValues(context, field);\n      if (missingValue != null) {\n        docsWithField = getDocsWithValue(context, field);\n        // optimization to remove unneeded checks on the bit interface:\n        if (docsWithField instanceof Bits.MatchAllBits) {\n          docsWithField = null;\n        }\n      } else {\n        docsWithField = null;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/FieldComparator.NumericComparator#doSetNextReader(LeafReaderContext).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/FieldComparator.NumericComparator#doSetNextReader(LeafReaderContext).mjava","sourceNew":"    @Override\n    protected void doSetNextReader(LeafReaderContext context) throws IOException {\n      currentReaderValues = getNumericDocValues(context, field);\n    }\n\n","sourceOld":"    @Override\n    protected void doSetNextReader(LeafReaderContext context) throws IOException {\n      currentReaderValues = getNumericDocValues(context, field);\n      if (missingValue != null) {\n        docsWithField = getDocsWithValue(context, field);\n        // optimization to remove unneeded checks on the bit interface:\n        if (docsWithField instanceof Bits.MatchAllBits) {\n          docsWithField = null;\n        }\n      } else {\n        docsWithField = null;\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e3d1c24d2bbe79dcf77ffcb104706e42ae3c9241","date":1599588987,"type":4,"author":"Mayya Sharipova","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/search/FieldComparator.NumericComparator#doSetNextReader(LeafReaderContext).mjava","sourceNew":null,"sourceOld":"    @Override\n    protected void doSetNextReader(LeafReaderContext context) throws IOException {\n      currentReaderValues = getNumericDocValues(context, field);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"db447c88c3c3367999a54f10d9a207f3e63db201":["901e951cec2e6af4e503209a6721c8834db23279"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["db447c88c3c3367999a54f10d9a207f3e63db201","6652c74b2358a0b13223817a6a793bf1c9d0749d"],"6652c74b2358a0b13223817a6a793bf1c9d0749d":["db447c88c3c3367999a54f10d9a207f3e63db201"],"901e951cec2e6af4e503209a6721c8834db23279":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["db447c88c3c3367999a54f10d9a207f3e63db201","17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e3d1c24d2bbe79dcf77ffcb104706e42ae3c9241"],"e3d1c24d2bbe79dcf77ffcb104706e42ae3c9241":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"]},"commit2Childs":{"db447c88c3c3367999a54f10d9a207f3e63db201":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d","6652c74b2358a0b13223817a6a793bf1c9d0749d","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["901e951cec2e6af4e503209a6721c8834db23279"],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","e3d1c24d2bbe79dcf77ffcb104706e42ae3c9241"],"6652c74b2358a0b13223817a6a793bf1c9d0749d":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"901e951cec2e6af4e503209a6721c8834db23279":["db447c88c3c3367999a54f10d9a207f3e63db201"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"e3d1c24d2bbe79dcf77ffcb104706e42ae3c9241":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}