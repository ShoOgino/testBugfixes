{"path":"lucene/core/src/test/org/apache/lucene/index/TestFilterMergePolicy#testMethodsOverridden().mjava","commits":[{"id":"6bca5135c8cc6e6cd90c5f6f451ff7445dd4f7d8","date":1523648719,"type":1,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestFilterMergePolicy#testMethodsOverridden().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestMergePolicyWrapper#testMethodsOverridden().mjava","sourceNew":"  public void testMethodsOverridden() throws Exception {\n    for (Method m : MergePolicy.class.getDeclaredMethods()) {\n      if (Modifier.isFinal(m.getModifiers())) continue;\n      try {\n        FilterMergePolicy.class.getDeclaredMethod(m.getName(),  m.getParameterTypes());\n      } catch (NoSuchMethodException e) {\n        fail(\"MergePolicyWrapper needs to override '\" + m + \"'\");\n      }\n    }\n  }\n\n","sourceOld":"  public void testMethodsOverridden() throws Exception {\n    for (Method m : MergePolicy.class.getDeclaredMethods()) {\n      if (Modifier.isFinal(m.getModifiers())) continue;\n      try {\n        MergePolicyWrapper.class.getDeclaredMethod(m.getName(),  m.getParameterTypes());\n      } catch (NoSuchMethodException e) {\n        fail(\"MergePolicyWrapper needs to override '\" + m + \"'\");\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e69f57c3efd47044b379757d0accb5bd88fd3e5c","date":1523651562,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestFilterMergePolicy#testMethodsOverridden().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestFilterMergePolicy#testMethodsOverridden().mjava","sourceNew":"  public void testMethodsOverridden() throws Exception {\n    for (Method m : MergePolicy.class.getDeclaredMethods()) {\n      if (Modifier.isFinal(m.getModifiers())) continue;\n      try {\n        FilterMergePolicy.class.getDeclaredMethod(m.getName(),  m.getParameterTypes());\n      } catch (NoSuchMethodException e) {\n        fail(\"FilterMergePolicy needs to override '\" + m + \"'\");\n      }\n    }\n  }\n\n","sourceOld":"  public void testMethodsOverridden() throws Exception {\n    for (Method m : MergePolicy.class.getDeclaredMethods()) {\n      if (Modifier.isFinal(m.getModifiers())) continue;\n      try {\n        FilterMergePolicy.class.getDeclaredMethod(m.getName(),  m.getParameterTypes());\n      } catch (NoSuchMethodException e) {\n        fail(\"MergePolicyWrapper needs to override '\" + m + \"'\");\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1d28f215464f76024caf026606f8ea51a5319c53","date":1527226629,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestFilterMergePolicy#testMethodsOverridden().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestFilterMergePolicy#testMethodsOverridden().mjava","sourceNew":"  public void testMethodsOverridden() {\n    for (Method m : MergePolicy.class.getDeclaredMethods()) {\n      if (Modifier.isFinal(m.getModifiers()) || Modifier.isPrivate(m.getModifiers())) continue;\n      try {\n        FilterMergePolicy.class.getDeclaredMethod(m.getName(),  m.getParameterTypes());\n      } catch (NoSuchMethodException e) {\n        fail(\"FilterMergePolicy needs to override '\" + m + \"'\");\n      }\n    }\n  }\n\n","sourceOld":"  public void testMethodsOverridden() throws Exception {\n    for (Method m : MergePolicy.class.getDeclaredMethods()) {\n      if (Modifier.isFinal(m.getModifiers())) continue;\n      try {\n        FilterMergePolicy.class.getDeclaredMethod(m.getName(),  m.getParameterTypes());\n      } catch (NoSuchMethodException e) {\n        fail(\"FilterMergePolicy needs to override '\" + m + \"'\");\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6bca5135c8cc6e6cd90c5f6f451ff7445dd4f7d8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1d28f215464f76024caf026606f8ea51a5319c53":["e69f57c3efd47044b379757d0accb5bd88fd3e5c"],"e69f57c3efd47044b379757d0accb5bd88fd3e5c":["6bca5135c8cc6e6cd90c5f6f451ff7445dd4f7d8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1d28f215464f76024caf026606f8ea51a5319c53"]},"commit2Childs":{"6bca5135c8cc6e6cd90c5f6f451ff7445dd4f7d8":["e69f57c3efd47044b379757d0accb5bd88fd3e5c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6bca5135c8cc6e6cd90c5f6f451ff7445dd4f7d8"],"1d28f215464f76024caf026606f8ea51a5319c53":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e69f57c3efd47044b379757d0accb5bd88fd3e5c":["1d28f215464f76024caf026606f8ea51a5319c53"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}