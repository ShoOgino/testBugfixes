{"path":"lucene/facet/src/java/org/apache/lucene/facet/index/params/CategoryListParams#equals(Object).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/index/params/CategoryListParams#equals(Object).mjava","pathOld":"modules/facet/src/java/org/apache/lucene/facet/index/params/CategoryListParams#equals(Object).mjava","sourceNew":"  /**\n   * Equality is defined by the 'term' that defines this category list.  \n   * Sub-classes should override this method if a more complex calculation\n   * is needed to ensure equality. \n   */\n  @Override\n  public boolean equals(Object o) {\n    if (o == this) {\n      return true;\n    }\n    if (!(o instanceof CategoryListParams)) {\n      return false;\n    }\n    CategoryListParams other = (CategoryListParams) o;\n    if (this.hashCode != other.hashCode) {\n      return false;\n    }\n    // The above hashcodes might equal each other in the case of a collision,\n    // so at this point only directly term equality testing will settle\n    // the equality test.\n    return this.term.equals(other.term);\n  }\n\n","sourceOld":"  /**\n   * Equality is defined by the 'term' that defines this category list.  \n   * Sub-classes should override this method if a more complex calculation\n   * is needed to ensure equality. \n   */\n  @Override\n  public boolean equals(Object o) {\n    if (o == this) {\n      return true;\n    }\n    if (!(o instanceof CategoryListParams)) {\n      return false;\n    }\n    CategoryListParams other = (CategoryListParams) o;\n    if (this.hashCode != other.hashCode) {\n      return false;\n    }\n    // The above hashcodes might equal each other in the case of a collision,\n    // so at this point only directly term equality testing will settle\n    // the equality test.\n    return this.term.equals(other.term);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"42f51b3ab4258ff4623227b0db011b8bb83db5c7","date":1358164991,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/index/params/CategoryListParams#equals(Object).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/index/params/CategoryListParams#equals(Object).mjava","sourceNew":"  @Override\n  public boolean equals(Object o) {\n    if (o == this) {\n      return true;\n    }\n    if (!(o instanceof CategoryListParams)) {\n      return false;\n    }\n    CategoryListParams other = (CategoryListParams) o;\n    if (this.hashCode != other.hashCode) {\n      return false;\n    }\n    // The above hashcodes might equal each other in the case of a collision,\n    // so at this point only directly term equality testing will settle\n    // the equality test.\n    return this.term.equals(other.term);\n  }\n\n","sourceOld":"  /**\n   * Equality is defined by the 'term' that defines this category list.  \n   * Sub-classes should override this method if a more complex calculation\n   * is needed to ensure equality. \n   */\n  @Override\n  public boolean equals(Object o) {\n    if (o == this) {\n      return true;\n    }\n    if (!(o instanceof CategoryListParams)) {\n      return false;\n    }\n    CategoryListParams other = (CategoryListParams) o;\n    if (this.hashCode != other.hashCode) {\n      return false;\n    }\n    // The above hashcodes might equal each other in the case of a collision,\n    // so at this point only directly term equality testing will settle\n    // the equality test.\n    return this.term.equals(other.term);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8917bfede3b4ca30f4305c1e391e9218959cd723","date":1358189662,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/index/params/CategoryListParams#equals(Object).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/index/params/CategoryListParams#equals(Object).mjava","sourceNew":"  @Override\n  public boolean equals(Object o) {\n    if (o == this) {\n      return true;\n    }\n    if (!(o instanceof CategoryListParams)) {\n      return false;\n    }\n    CategoryListParams other = (CategoryListParams) o;\n    if (this.hashCode != other.hashCode) {\n      return false;\n    }\n    // The above hashcodes might equal each other in the case of a collision,\n    // so at this point only directly term equality testing will settle\n    // the equality test.\n    return this.term.equals(other.term);\n  }\n\n","sourceOld":"  /**\n   * Equality is defined by the 'term' that defines this category list.  \n   * Sub-classes should override this method if a more complex calculation\n   * is needed to ensure equality. \n   */\n  @Override\n  public boolean equals(Object o) {\n    if (o == this) {\n      return true;\n    }\n    if (!(o instanceof CategoryListParams)) {\n      return false;\n    }\n    CategoryListParams other = (CategoryListParams) o;\n    if (this.hashCode != other.hashCode) {\n      return false;\n    }\n    // The above hashcodes might equal each other in the case of a collision,\n    // so at this point only directly term equality testing will settle\n    // the equality test.\n    return this.term.equals(other.term);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6c2cd18c7da6f499a33f06fc89c07a463ec074c0","date":1358329431,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/index/params/CategoryListParams#equals(Object).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/index/params/CategoryListParams#equals(Object).mjava","sourceNew":"  @Override\n  public boolean equals(Object o) {\n    if (o == this) {\n      return true;\n    }\n    if (!(o instanceof CategoryListParams)) {\n      return false;\n    }\n    CategoryListParams other = (CategoryListParams) o;\n    if (this.hashCode != other.hashCode) {\n      return false;\n    }\n    // The above hashcodes might equal each other in the case of a collision,\n    // so at this point only directly term equality testing will settle\n    // the equality test.\n    return field.equals(other.field);\n  }\n\n","sourceOld":"  @Override\n  public boolean equals(Object o) {\n    if (o == this) {\n      return true;\n    }\n    if (!(o instanceof CategoryListParams)) {\n      return false;\n    }\n    CategoryListParams other = (CategoryListParams) o;\n    if (this.hashCode != other.hashCode) {\n      return false;\n    }\n    // The above hashcodes might equal each other in the case of a collision,\n    // so at this point only directly term equality testing will settle\n    // the equality test.\n    return this.term.equals(other.term);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c4015cd39dff8d4dec562d909f9766debac53aa6","date":1358548736,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/index/params/CategoryListParams#equals(Object).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/index/params/CategoryListParams#equals(Object).mjava","sourceNew":"  @Override\n  public boolean equals(Object o) {\n    if (o == this) {\n      return true;\n    }\n    if (!(o instanceof CategoryListParams)) {\n      return false;\n    }\n    CategoryListParams other = (CategoryListParams) o;\n    if (this.hashCode != other.hashCode) {\n      return false;\n    }\n    // The above hashcodes might equal each other in the case of a collision,\n    // so at this point only directly term equality testing will settle\n    // the equality test.\n    return field.equals(other.field);\n  }\n\n","sourceOld":"  @Override\n  public boolean equals(Object o) {\n    if (o == this) {\n      return true;\n    }\n    if (!(o instanceof CategoryListParams)) {\n      return false;\n    }\n    CategoryListParams other = (CategoryListParams) o;\n    if (this.hashCode != other.hashCode) {\n      return false;\n    }\n    // The above hashcodes might equal each other in the case of a collision,\n    // so at this point only directly term equality testing will settle\n    // the equality test.\n    return this.term.equals(other.term);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"66644845192a1c92d87d5324cc0b5af16ad31b42","date":1358970583,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/index/params/CategoryListParams#equals(Object).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/index/params/CategoryListParams#equals(Object).mjava","sourceNew":"  @Override\n  public boolean equals(Object o) {\n    if (o == this) {\n      return true;\n    }\n    if (!(o instanceof CategoryListParams)) {\n      return false;\n    }\n    CategoryListParams other = (CategoryListParams) o;\n    if (this.hashCode != other.hashCode) {\n      return false;\n    }\n    \n    // The above hashcodes might equal each other in the case of a collision,\n    // so at this point only directly term equality testing will settle\n    // the equality test.\n    return field.equals(other.field);\n  }\n\n","sourceOld":"  @Override\n  public boolean equals(Object o) {\n    if (o == this) {\n      return true;\n    }\n    if (!(o instanceof CategoryListParams)) {\n      return false;\n    }\n    CategoryListParams other = (CategoryListParams) o;\n    if (this.hashCode != other.hashCode) {\n      return false;\n    }\n    // The above hashcodes might equal each other in the case of a collision,\n    // so at this point only directly term equality testing will settle\n    // the equality test.\n    return field.equals(other.field);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b2d5244a676b83c2d551c3746e8181588ba619e1","date":1359031414,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/index/params/CategoryListParams#equals(Object).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/index/params/CategoryListParams#equals(Object).mjava","sourceNew":"  @Override\n  public boolean equals(Object o) {\n    if (o == this) {\n      return true;\n    }\n    if (!(o instanceof CategoryListParams)) {\n      return false;\n    }\n    CategoryListParams other = (CategoryListParams) o;\n    if (this.hashCode != other.hashCode) {\n      return false;\n    }\n    \n    // The above hashcodes might equal each other in the case of a collision,\n    // so at this point only directly term equality testing will settle\n    // the equality test.\n    return field.equals(other.field);\n  }\n\n","sourceOld":"  @Override\n  public boolean equals(Object o) {\n    if (o == this) {\n      return true;\n    }\n    if (!(o instanceof CategoryListParams)) {\n      return false;\n    }\n    CategoryListParams other = (CategoryListParams) o;\n    if (this.hashCode != other.hashCode) {\n      return false;\n    }\n    // The above hashcodes might equal each other in the case of a collision,\n    // so at this point only directly term equality testing will settle\n    // the equality test.\n    return field.equals(other.field);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"239f79ed06f0979cfe1911ec5fba32b94fda43c1","date":1359553898,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/index/params/CategoryListParams#equals(Object).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/index/params/CategoryListParams#equals(Object).mjava","sourceNew":"  @Override\n  public boolean equals(Object o) {\n    if (o == this) {\n      return true;\n    }\n    if (!(o instanceof CategoryListParams)) {\n      return false;\n    }\n    CategoryListParams other = (CategoryListParams) o;\n    if (hashCode != other.hashCode) {\n      return false;\n    }\n    return field.equals(other.field);\n  }\n\n","sourceOld":"  @Override\n  public boolean equals(Object o) {\n    if (o == this) {\n      return true;\n    }\n    if (!(o instanceof CategoryListParams)) {\n      return false;\n    }\n    CategoryListParams other = (CategoryListParams) o;\n    if (this.hashCode != other.hashCode) {\n      return false;\n    }\n    \n    // The above hashcodes might equal each other in the case of a collision,\n    // so at this point only directly term equality testing will settle\n    // the equality test.\n    return field.equals(other.field);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"61d5f95d14e5b9b046998c51e16709a398c15226","date":1359603451,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/index/params/CategoryListParams#equals(Object).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/index/params/CategoryListParams#equals(Object).mjava","sourceNew":"  @Override\n  public boolean equals(Object o) {\n    if (o == this) {\n      return true;\n    }\n    if (!(o instanceof CategoryListParams)) {\n      return false;\n    }\n    CategoryListParams other = (CategoryListParams) o;\n    if (hashCode != other.hashCode) {\n      return false;\n    }\n    return field.equals(other.field);\n  }\n\n","sourceOld":"  @Override\n  public boolean equals(Object o) {\n    if (o == this) {\n      return true;\n    }\n    if (!(o instanceof CategoryListParams)) {\n      return false;\n    }\n    CategoryListParams other = (CategoryListParams) o;\n    if (this.hashCode != other.hashCode) {\n      return false;\n    }\n    \n    // The above hashcodes might equal each other in the case of a collision,\n    // so at this point only directly term equality testing will settle\n    // the equality test.\n    return field.equals(other.field);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"607428da722dcb3e86bbd11c63de8986e6275c36","date":1360334150,"type":5,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/params/CategoryListParams#equals(Object).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/index/params/CategoryListParams#equals(Object).mjava","sourceNew":"  @Override\n  public boolean equals(Object o) {\n    if (o == this) {\n      return true;\n    }\n    if (!(o instanceof CategoryListParams)) {\n      return false;\n    }\n    CategoryListParams other = (CategoryListParams) o;\n    if (hashCode != other.hashCode) {\n      return false;\n    }\n    return field.equals(other.field);\n  }\n\n","sourceOld":"  @Override\n  public boolean equals(Object o) {\n    if (o == this) {\n      return true;\n    }\n    if (!(o instanceof CategoryListParams)) {\n      return false;\n    }\n    CategoryListParams other = (CategoryListParams) o;\n    if (hashCode != other.hashCode) {\n      return false;\n    }\n    return field.equals(other.field);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"607428da722dcb3e86bbd11c63de8986e6275c36":["239f79ed06f0979cfe1911ec5fba32b94fda43c1"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"42f51b3ab4258ff4623227b0db011b8bb83db5c7":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"61d5f95d14e5b9b046998c51e16709a398c15226":["b2d5244a676b83c2d551c3746e8181588ba619e1","239f79ed06f0979cfe1911ec5fba32b94fda43c1"],"66644845192a1c92d87d5324cc0b5af16ad31b42":["6c2cd18c7da6f499a33f06fc89c07a463ec074c0"],"c4015cd39dff8d4dec562d909f9766debac53aa6":["8917bfede3b4ca30f4305c1e391e9218959cd723","6c2cd18c7da6f499a33f06fc89c07a463ec074c0"],"8917bfede3b4ca30f4305c1e391e9218959cd723":["b89678825b68eccaf09e6ab71675fc0b0af1e099","42f51b3ab4258ff4623227b0db011b8bb83db5c7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"239f79ed06f0979cfe1911ec5fba32b94fda43c1":["66644845192a1c92d87d5324cc0b5af16ad31b42"],"6c2cd18c7da6f499a33f06fc89c07a463ec074c0":["42f51b3ab4258ff4623227b0db011b8bb83db5c7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["607428da722dcb3e86bbd11c63de8986e6275c36"],"b2d5244a676b83c2d551c3746e8181588ba619e1":["c4015cd39dff8d4dec562d909f9766debac53aa6","66644845192a1c92d87d5324cc0b5af16ad31b42"]},"commit2Childs":{"607428da722dcb3e86bbd11c63de8986e6275c36":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["42f51b3ab4258ff4623227b0db011b8bb83db5c7","8917bfede3b4ca30f4305c1e391e9218959cd723"],"42f51b3ab4258ff4623227b0db011b8bb83db5c7":["8917bfede3b4ca30f4305c1e391e9218959cd723","6c2cd18c7da6f499a33f06fc89c07a463ec074c0"],"61d5f95d14e5b9b046998c51e16709a398c15226":[],"66644845192a1c92d87d5324cc0b5af16ad31b42":["239f79ed06f0979cfe1911ec5fba32b94fda43c1","b2d5244a676b83c2d551c3746e8181588ba619e1"],"c4015cd39dff8d4dec562d909f9766debac53aa6":["b2d5244a676b83c2d551c3746e8181588ba619e1"],"8917bfede3b4ca30f4305c1e391e9218959cd723":["c4015cd39dff8d4dec562d909f9766debac53aa6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"239f79ed06f0979cfe1911ec5fba32b94fda43c1":["607428da722dcb3e86bbd11c63de8986e6275c36","61d5f95d14e5b9b046998c51e16709a398c15226"],"6c2cd18c7da6f499a33f06fc89c07a463ec074c0":["66644845192a1c92d87d5324cc0b5af16ad31b42","c4015cd39dff8d4dec562d909f9766debac53aa6"],"b2d5244a676b83c2d551c3746e8181588ba619e1":["61d5f95d14e5b9b046998c51e16709a398c15226"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["61d5f95d14e5b9b046998c51e16709a398c15226","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}