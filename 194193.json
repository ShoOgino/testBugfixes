{"path":"lucene/contrib/analyzers/common/src/java/org/apache/lucene/analysis/compound/hyphenation/HyphenationTree#addPattern(String,String).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/analyzers/common/src/java/org/apache/lucene/analysis/compound/hyphenation/HyphenationTree#addPattern(String,String).mjava","pathOld":"contrib/analyzers/common/src/java/org/apache/lucene/analysis/compound/hyphenation/HyphenationTree#addPattern(String,String).mjava","sourceNew":"  /**\n   * Add a pattern to the tree. Mainly, to be used by\n   * {@link PatternParser PatternParser} class as callback to add a pattern to\n   * the tree.\n   * \n   * @param pattern the hyphenation pattern\n   * @param ivalue interletter weight values indicating the desirability and\n   *        priority of hyphenating at a given point within the pattern. It\n   *        should contain only digit characters. (i.e. '0' to '9').\n   */\n  public void addPattern(String pattern, String ivalue) {\n    int k = ivalues.find(ivalue);\n    if (k <= 0) {\n      k = packValues(ivalue);\n      ivalues.insert(ivalue, (char) k);\n    }\n    insert(pattern, (char) k);\n  }\n\n","sourceOld":"  /**\n   * Add a pattern to the tree. Mainly, to be used by\n   * {@link PatternParser PatternParser} class as callback to add a pattern to\n   * the tree.\n   * \n   * @param pattern the hyphenation pattern\n   * @param ivalue interletter weight values indicating the desirability and\n   *        priority of hyphenating at a given point within the pattern. It\n   *        should contain only digit characters. (i.e. '0' to '9').\n   */\n  public void addPattern(String pattern, String ivalue) {\n    int k = ivalues.find(ivalue);\n    if (k <= 0) {\n      k = packValues(ivalue);\n      ivalues.insert(ivalue, (char) k);\n    }\n    insert(pattern, (char) k);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f080986da691a3bba7b757f43ab72cdc82b57ce","date":1273069619,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/compound/hyphenation/HyphenationTree#addPattern(String,String).mjava","pathOld":"lucene/contrib/analyzers/common/src/java/org/apache/lucene/analysis/compound/hyphenation/HyphenationTree#addPattern(String,String).mjava","sourceNew":"  /**\n   * Add a pattern to the tree. Mainly, to be used by\n   * {@link PatternParser PatternParser} class as callback to add a pattern to\n   * the tree.\n   * \n   * @param pattern the hyphenation pattern\n   * @param ivalue interletter weight values indicating the desirability and\n   *        priority of hyphenating at a given point within the pattern. It\n   *        should contain only digit characters. (i.e. '0' to '9').\n   */\n  public void addPattern(String pattern, String ivalue) {\n    int k = ivalues.find(ivalue);\n    if (k <= 0) {\n      k = packValues(ivalue);\n      ivalues.insert(ivalue, (char) k);\n    }\n    insert(pattern, (char) k);\n  }\n\n","sourceOld":"  /**\n   * Add a pattern to the tree. Mainly, to be used by\n   * {@link PatternParser PatternParser} class as callback to add a pattern to\n   * the tree.\n   * \n   * @param pattern the hyphenation pattern\n   * @param ivalue interletter weight values indicating the desirability and\n   *        priority of hyphenating at a given point within the pattern. It\n   *        should contain only digit characters. (i.e. '0' to '9').\n   */\n  public void addPattern(String pattern, String ivalue) {\n    int k = ivalues.find(ivalue);\n    if (k <= 0) {\n      k = packValues(ivalue);\n      ivalues.insert(ivalue, (char) k);\n    }\n    insert(pattern, (char) k);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"0f080986da691a3bba7b757f43ab72cdc82b57ce":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["0f080986da691a3bba7b757f43ab72cdc82b57ce"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}