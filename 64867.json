{"path":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardPostingsWriter#finishTerm(TermStats,boolean).mjava","commits":[{"id":"6ecd298fdc085e7eba27afa7fae58df1ba1a2808","date":1295102557,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardPostingsWriter#finishTerm(TermStats,boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardPostingsWriter#finishTerm(int,boolean).mjava","sourceNew":"  /** Called when we are done adding docs to this term */\n  @Override\n  public void finishTerm(TermStats stats, boolean isIndexTerm) throws IOException {\n    assert stats.docFreq > 0;\n\n    // TODO: wasteful we are counting this (counting # docs\n    // for this term) in two places?\n    assert stats.docFreq == df;\n\n    if (isIndexTerm) {\n      // Write absolute at seek points\n      termsOut.writeVLong(freqStart);\n    } else {\n      // Write delta between seek points\n      termsOut.writeVLong(freqStart - lastFreqStart);\n    }\n\n    lastFreqStart = freqStart;\n\n    if (df >= skipInterval) {\n      termsOut.writeVInt((int) (skipListWriter.writeSkip(freqOut)-freqStart));\n    }\n     \n    if (!omitTermFreqAndPositions) {\n      if (isIndexTerm) {\n        // Write absolute at seek points\n        termsOut.writeVLong(proxStart);\n      } else {\n        // Write delta between seek points\n        termsOut.writeVLong(proxStart - lastProxStart);\n      }\n      lastProxStart = proxStart;\n    }\n\n    lastDocID = 0;\n    df = 0;\n  }\n\n","sourceOld":"  /** Called when we are done adding docs to this term */\n  @Override\n  public void finishTerm(int docCount, boolean isIndexTerm) throws IOException {\n    assert docCount > 0;\n\n    // TODO: wasteful we are counting this (counting # docs\n    // for this term) in two places?\n    assert docCount == df;\n\n    if (isIndexTerm) {\n      // Write absolute at seek points\n      termsOut.writeVLong(freqStart);\n    } else {\n      // Write delta between seek points\n      termsOut.writeVLong(freqStart - lastFreqStart);\n    }\n\n    lastFreqStart = freqStart;\n\n    if (df >= skipInterval) {\n      termsOut.writeVInt((int) (skipListWriter.writeSkip(freqOut)-freqStart));\n    }\n     \n    if (!omitTermFreqAndPositions) {\n      if (isIndexTerm) {\n        // Write absolute at seek points\n        termsOut.writeVLong(proxStart);\n      } else {\n        // Write delta between seek points\n        termsOut.writeVLong(proxStart - lastProxStart);\n      }\n      lastProxStart = proxStart;\n    }\n\n    lastDocID = 0;\n    df = 0;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"16843358872ed92ba92888ab99df297550b9a36a","date":1295144724,"type":1,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardPostingsWriter#finishTerm(TermStats,boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardPostingsWriter#finishTerm(int,boolean).mjava","sourceNew":"  /** Called when we are done adding docs to this term */\n  @Override\n  public void finishTerm(TermStats stats, boolean isIndexTerm) throws IOException {\n    assert stats.docFreq > 0;\n\n    // TODO: wasteful we are counting this (counting # docs\n    // for this term) in two places?\n    assert stats.docFreq == df;\n\n    if (isIndexTerm) {\n      // Write absolute at seek points\n      termsOut.writeVLong(freqStart);\n    } else {\n      // Write delta between seek points\n      termsOut.writeVLong(freqStart - lastFreqStart);\n    }\n\n    lastFreqStart = freqStart;\n\n    if (df >= skipInterval) {\n      termsOut.writeVInt((int) (skipListWriter.writeSkip(freqOut)-freqStart));\n    }\n     \n    if (!omitTermFreqAndPositions) {\n      if (isIndexTerm) {\n        // Write absolute at seek points\n        termsOut.writeVLong(proxStart);\n      } else {\n        // Write delta between seek points\n        termsOut.writeVLong(proxStart - lastProxStart);\n      }\n      lastProxStart = proxStart;\n    }\n\n    lastDocID = 0;\n    df = 0;\n  }\n\n","sourceOld":"  /** Called when we are done adding docs to this term */\n  @Override\n  public void finishTerm(int docCount, boolean isIndexTerm) throws IOException {\n    assert docCount > 0;\n\n    // TODO: wasteful we are counting this (counting # docs\n    // for this term) in two places?\n    assert docCount == df;\n\n    if (isIndexTerm) {\n      // Write absolute at seek points\n      termsOut.writeVLong(freqStart);\n    } else {\n      // Write delta between seek points\n      termsOut.writeVLong(freqStart - lastFreqStart);\n    }\n\n    lastFreqStart = freqStart;\n\n    if (df >= skipInterval) {\n      termsOut.writeVInt((int) (skipListWriter.writeSkip(freqOut)-freqStart));\n    }\n     \n    if (!omitTermFreqAndPositions) {\n      if (isIndexTerm) {\n        // Write absolute at seek points\n        termsOut.writeVLong(proxStart);\n      } else {\n        // Write delta between seek points\n        termsOut.writeVLong(proxStart - lastProxStart);\n      }\n      lastProxStart = proxStart;\n    }\n\n    lastDocID = 0;\n    df = 0;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b1add9ddc0005b07550d4350720aac22dc9886b3","date":1295549635,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardPostingsWriter#finishTerm(TermStats).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardPostingsWriter#finishTerm(TermStats,boolean).mjava","sourceNew":"  /** Called when we are done adding docs to this term */\n  @Override\n  public void finishTerm(TermStats stats) throws IOException {\n    //System.out.println(\"StandardW.finishTerm seg=\" + segment);\n    assert stats.docFreq > 0;\n\n    // TODO: wasteful we are counting this (counting # docs\n    // for this term) in two places?\n    assert stats.docFreq == df;\n\n    final boolean isFirstTerm = pendingCount == 0;\n    //System.out.println(\"  isFirstTerm=\" + isFirstTerm);\n\n    //System.out.println(\"  freqFP=\" + freqStart);\n    if (isFirstTerm) {\n      bytesWriter.writeVLong(freqStart);\n    } else {\n      bytesWriter.writeVLong(freqStart-lastFreqStart);\n    }\n    lastFreqStart = freqStart;\n\n    if (df >= skipInterval) {\n      bytesWriter.writeVInt((int) (skipListWriter.writeSkip(freqOut)-freqStart));\n    }\n\n    if (!omitTermFreqAndPositions) {\n      //System.out.println(\"  proxFP=\" + proxStart);\n      if (isFirstTerm) {\n        bytesWriter.writeVLong(proxStart);\n      } else {\n        bytesWriter.writeVLong(proxStart - lastProxStart);\n      }\n      lastProxStart = proxStart;\n    }\n     \n    lastDocID = 0;\n    df = 0;\n    pendingCount++;\n  }\n\n","sourceOld":"  /** Called when we are done adding docs to this term */\n  @Override\n  public void finishTerm(TermStats stats, boolean isIndexTerm) throws IOException {\n    assert stats.docFreq > 0;\n\n    // TODO: wasteful we are counting this (counting # docs\n    // for this term) in two places?\n    assert stats.docFreq == df;\n\n    if (isIndexTerm) {\n      // Write absolute at seek points\n      termsOut.writeVLong(freqStart);\n    } else {\n      // Write delta between seek points\n      termsOut.writeVLong(freqStart - lastFreqStart);\n    }\n\n    lastFreqStart = freqStart;\n\n    if (df >= skipInterval) {\n      termsOut.writeVInt((int) (skipListWriter.writeSkip(freqOut)-freqStart));\n    }\n     \n    if (!omitTermFreqAndPositions) {\n      if (isIndexTerm) {\n        // Write absolute at seek points\n        termsOut.writeVLong(proxStart);\n      } else {\n        // Write delta between seek points\n        termsOut.writeVLong(proxStart - lastProxStart);\n      }\n      lastProxStart = proxStart;\n    }\n\n    lastDocID = 0;\n    df = 0;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e79a6d080bdd5b2a8f56342cf571b5476de04180","date":1295638686,"type":5,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardPostingsWriter#finishTerm(TermStats).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardPostingsWriter#finishTerm(TermStats,boolean).mjava","sourceNew":"  /** Called when we are done adding docs to this term */\n  @Override\n  public void finishTerm(TermStats stats) throws IOException {\n    //System.out.println(\"StandardW.finishTerm seg=\" + segment);\n    assert stats.docFreq > 0;\n\n    // TODO: wasteful we are counting this (counting # docs\n    // for this term) in two places?\n    assert stats.docFreq == df;\n\n    final boolean isFirstTerm = pendingCount == 0;\n    //System.out.println(\"  isFirstTerm=\" + isFirstTerm);\n\n    //System.out.println(\"  freqFP=\" + freqStart);\n    if (isFirstTerm) {\n      bytesWriter.writeVLong(freqStart);\n    } else {\n      bytesWriter.writeVLong(freqStart-lastFreqStart);\n    }\n    lastFreqStart = freqStart;\n\n    if (df >= skipInterval) {\n      bytesWriter.writeVInt((int) (skipListWriter.writeSkip(freqOut)-freqStart));\n    }\n\n    if (!omitTermFreqAndPositions) {\n      //System.out.println(\"  proxFP=\" + proxStart);\n      if (isFirstTerm) {\n        bytesWriter.writeVLong(proxStart);\n      } else {\n        bytesWriter.writeVLong(proxStart - lastProxStart);\n      }\n      lastProxStart = proxStart;\n    }\n     \n    lastDocID = 0;\n    df = 0;\n    pendingCount++;\n  }\n\n","sourceOld":"  /** Called when we are done adding docs to this term */\n  @Override\n  public void finishTerm(TermStats stats, boolean isIndexTerm) throws IOException {\n    assert stats.docFreq > 0;\n\n    // TODO: wasteful we are counting this (counting # docs\n    // for this term) in two places?\n    assert stats.docFreq == df;\n\n    if (isIndexTerm) {\n      // Write absolute at seek points\n      termsOut.writeVLong(freqStart);\n    } else {\n      // Write delta between seek points\n      termsOut.writeVLong(freqStart - lastFreqStart);\n    }\n\n    lastFreqStart = freqStart;\n\n    if (df >= skipInterval) {\n      termsOut.writeVInt((int) (skipListWriter.writeSkip(freqOut)-freqStart));\n    }\n     \n    if (!omitTermFreqAndPositions) {\n      if (isIndexTerm) {\n        // Write absolute at seek points\n        termsOut.writeVLong(proxStart);\n      } else {\n        // Write delta between seek points\n        termsOut.writeVLong(proxStart - lastProxStart);\n      }\n      lastProxStart = proxStart;\n    }\n\n    lastDocID = 0;\n    df = 0;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"16843358872ed92ba92888ab99df297550b9a36a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","6ecd298fdc085e7eba27afa7fae58df1ba1a2808"],"b1add9ddc0005b07550d4350720aac22dc9886b3":["6ecd298fdc085e7eba27afa7fae58df1ba1a2808"],"e79a6d080bdd5b2a8f56342cf571b5476de04180":["16843358872ed92ba92888ab99df297550b9a36a","b1add9ddc0005b07550d4350720aac22dc9886b3"],"6ecd298fdc085e7eba27afa7fae58df1ba1a2808":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b1add9ddc0005b07550d4350720aac22dc9886b3"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["16843358872ed92ba92888ab99df297550b9a36a","6ecd298fdc085e7eba27afa7fae58df1ba1a2808"],"16843358872ed92ba92888ab99df297550b9a36a":["e79a6d080bdd5b2a8f56342cf571b5476de04180"],"b1add9ddc0005b07550d4350720aac22dc9886b3":["e79a6d080bdd5b2a8f56342cf571b5476de04180","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e79a6d080bdd5b2a8f56342cf571b5476de04180":[],"6ecd298fdc085e7eba27afa7fae58df1ba1a2808":["16843358872ed92ba92888ab99df297550b9a36a","b1add9ddc0005b07550d4350720aac22dc9886b3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e79a6d080bdd5b2a8f56342cf571b5476de04180","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}