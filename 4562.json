{"path":"modules/spatial/src/java/org/apache/lucene/spatial/vector/TwoDoublesStrategy#createFields(TwoDoublesFieldInfo,Shape,boolean,boolean).mjava","commits":[{"id":"de3ae51f6d7d658f4c6d1cc9b74cc4b5e45f294e","date":1330665960,"type":1,"author":"David Wayne Smiley","isMerge":false,"pathNew":"modules/spatial/src/java/org/apache/lucene/spatial/vector/TwoDoublesStrategy#createFields(TwoDoublesFieldInfo,Shape,boolean,boolean).mjava","pathOld":"modules/spatial/src/java/org/apache/lucene/spatial/strategy/vector/TwoDoublesStrategy#createFields(TwoDoublesFieldInfo,Shape,boolean,boolean).mjava","sourceNew":"  @Override\n  public IndexableField[] createFields(TwoDoublesFieldInfo fieldInfo,\n      Shape shape, boolean index, boolean store) {\n    if( shape instanceof Point ) {\n      Point point = (Point)shape;\n\n      IndexableField[] f = new IndexableField[(index ? 2 : 0) + (store ? 1 : 0)];\n      if (index) {\n        f[0] = finfo.createDouble( fieldInfo.getFieldNameX(), point.getX() );\n        f[1] = finfo.createDouble( fieldInfo.getFieldNameY(), point.getY() );\n      }\n      if(store) {\n        FieldType customType = new FieldType();\n        customType.setStored(true);\n        f[f.length-1] = new Field( fieldInfo.getFieldName(), ctx.toString( shape ), customType );\n      }\n      return f;\n    }\n    if( !ignoreIncompatibleGeometry ) {\n      throw new IllegalArgumentException( \"TwoDoublesStrategy can not index: \"+shape );\n    }\n    return null;\n  }\n\n","sourceOld":"  @Override\n  public IndexableField[] createFields(TwoDoublesFieldInfo fieldInfo,\n      Shape shape, boolean index, boolean store) {\n    if( shape instanceof Point ) {\n      Point point = (Point)shape;\n\n      IndexableField[] f = new IndexableField[(index ? 2 : 0) + (store ? 1 : 0)];\n      if (index) {\n        f[0] = finfo.createDouble( fieldInfo.getFieldNameX(), point.getX() );\n        f[1] = finfo.createDouble( fieldInfo.getFieldNameY(), point.getY() );\n      }\n      if(store) {\n        FieldType customType = new FieldType();\n        customType.setStored(true);\n        f[f.length-1] = new Field( fieldInfo.getFieldName(), ctx.toString( shape ), customType );\n      }\n      return f;\n    }\n    if( !ignoreIncompatibleGeometry ) {\n      throw new IllegalArgumentException( \"TwoDoublesStrategy can not index: \"+shape );\n    }\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e47768b261c28e7e6032060e8331475c81057953","date":1331681297,"type":0,"author":"Ryan McKinley","isMerge":true,"pathNew":"modules/spatial/src/java/org/apache/lucene/spatial/vector/TwoDoublesStrategy#createFields(TwoDoublesFieldInfo,Shape,boolean,boolean).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public IndexableField[] createFields(TwoDoublesFieldInfo fieldInfo,\n      Shape shape, boolean index, boolean store) {\n    if( shape instanceof Point ) {\n      Point point = (Point)shape;\n\n      IndexableField[] f = new IndexableField[(index ? 2 : 0) + (store ? 1 : 0)];\n      if (index) {\n        f[0] = finfo.createDouble( fieldInfo.getFieldNameX(), point.getX() );\n        f[1] = finfo.createDouble( fieldInfo.getFieldNameY(), point.getY() );\n      }\n      if(store) {\n        FieldType customType = new FieldType();\n        customType.setStored(true);\n        f[f.length-1] = new Field( fieldInfo.getFieldName(), ctx.toString( shape ), customType );\n      }\n      return f;\n    }\n    if( !ignoreIncompatibleGeometry ) {\n      throw new IllegalArgumentException( \"TwoDoublesStrategy can not index: \"+shape );\n    }\n    return null;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7e81c6784e34c77c1a2b9f5a40d0bf168d2249f9","date":1331846164,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"modules/spatial/src/java/org/apache/lucene/spatial/vector/TwoDoublesStrategy#createFields(TwoDoublesFieldInfo,Shape,boolean,boolean).mjava","pathOld":"modules/spatial/src/java/org/apache/lucene/spatial/vector/TwoDoublesStrategy#createFields(TwoDoublesFieldInfo,Shape,boolean,boolean).mjava","sourceNew":"  @Override\n  public IndexableField[] createFields(TwoDoublesFieldInfo fieldInfo,\n      Shape shape, boolean index, boolean store) {\n    if( shape instanceof Point ) {\n      Point point = (Point)shape;\n\n      IndexableField[] f = new IndexableField[(index ? 2 : 0) + (store ? 1 : 0)];\n      if (index) {\n        f[0] = finfo.createDouble( fieldInfo.getFieldNameX(), point.getX() );\n        f[1] = finfo.createDouble( fieldInfo.getFieldNameY(), point.getY() );\n      }\n      if(store) {\n        FieldType customType = new FieldType();\n        customType.setStored(true);\n        f[f.length-1] = new Field( fieldInfo.getFieldName(), ctx.toString( shape ), customType );\n      }\n      return f;\n    }\n    if( !ignoreIncompatibleGeometry ) {\n      throw new IllegalArgumentException( \"TwoDoublesStrategy can not index: \"+shape );\n    }\n    return new IndexableField[0]; // nothing (solr does not support null)\n  }\n\n","sourceOld":"  @Override\n  public IndexableField[] createFields(TwoDoublesFieldInfo fieldInfo,\n      Shape shape, boolean index, boolean store) {\n    if( shape instanceof Point ) {\n      Point point = (Point)shape;\n\n      IndexableField[] f = new IndexableField[(index ? 2 : 0) + (store ? 1 : 0)];\n      if (index) {\n        f[0] = finfo.createDouble( fieldInfo.getFieldNameX(), point.getX() );\n        f[1] = finfo.createDouble( fieldInfo.getFieldNameY(), point.getY() );\n      }\n      if(store) {\n        FieldType customType = new FieldType();\n        customType.setStored(true);\n        f[f.length-1] = new Field( fieldInfo.getFieldName(), ctx.toString( shape ), customType );\n      }\n      return f;\n    }\n    if( !ignoreIncompatibleGeometry ) {\n      throw new IllegalArgumentException( \"TwoDoublesStrategy can not index: \"+shape );\n    }\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/vector/TwoDoublesStrategy#createFields(TwoDoublesFieldInfo,Shape,boolean,boolean).mjava","pathOld":"modules/spatial/src/java/org/apache/lucene/spatial/vector/TwoDoublesStrategy#createFields(TwoDoublesFieldInfo,Shape,boolean,boolean).mjava","sourceNew":"  @Override\n  public IndexableField[] createFields(TwoDoublesFieldInfo fieldInfo,\n      Shape shape, boolean index, boolean store) {\n    if( shape instanceof Point ) {\n      Point point = (Point)shape;\n\n      IndexableField[] f = new IndexableField[(index ? 2 : 0) + (store ? 1 : 0)];\n      if (index) {\n        f[0] = finfo.createDouble( fieldInfo.getFieldNameX(), point.getX() );\n        f[1] = finfo.createDouble( fieldInfo.getFieldNameY(), point.getY() );\n      }\n      if(store) {\n        FieldType customType = new FieldType();\n        customType.setStored(true);\n        f[f.length-1] = new Field( fieldInfo.getFieldName(), ctx.toString( shape ), customType );\n      }\n      return f;\n    }\n    if( !ignoreIncompatibleGeometry ) {\n      throw new IllegalArgumentException( \"TwoDoublesStrategy can not index: \"+shape );\n    }\n    return new IndexableField[0]; // nothing (solr does not support null)\n  }\n\n","sourceOld":"  @Override\n  public IndexableField[] createFields(TwoDoublesFieldInfo fieldInfo,\n      Shape shape, boolean index, boolean store) {\n    if( shape instanceof Point ) {\n      Point point = (Point)shape;\n\n      IndexableField[] f = new IndexableField[(index ? 2 : 0) + (store ? 1 : 0)];\n      if (index) {\n        f[0] = finfo.createDouble( fieldInfo.getFieldNameX(), point.getX() );\n        f[1] = finfo.createDouble( fieldInfo.getFieldNameY(), point.getY() );\n      }\n      if(store) {\n        FieldType customType = new FieldType();\n        customType.setStored(true);\n        f[f.length-1] = new Field( fieldInfo.getFieldName(), ctx.toString( shape ), customType );\n      }\n      return f;\n    }\n    if( !ignoreIncompatibleGeometry ) {\n      throw new IllegalArgumentException( \"TwoDoublesStrategy can not index: \"+shape );\n    }\n    return new IndexableField[0]; // nothing (solr does not support null)\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["7e81c6784e34c77c1a2b9f5a40d0bf168d2249f9"],"7e81c6784e34c77c1a2b9f5a40d0bf168d2249f9":["e47768b261c28e7e6032060e8331475c81057953"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e47768b261c28e7e6032060e8331475c81057953":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","de3ae51f6d7d658f4c6d1cc9b74cc4b5e45f294e"],"de3ae51f6d7d658f4c6d1cc9b74cc4b5e45f294e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"7e81c6784e34c77c1a2b9f5a40d0bf168d2249f9":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e47768b261c28e7e6032060e8331475c81057953","de3ae51f6d7d658f4c6d1cc9b74cc4b5e45f294e"],"e47768b261c28e7e6032060e8331475c81057953":["7e81c6784e34c77c1a2b9f5a40d0bf168d2249f9"],"de3ae51f6d7d658f4c6d1cc9b74cc4b5e45f294e":["e47768b261c28e7e6032060e8331475c81057953"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}