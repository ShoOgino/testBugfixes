{"path":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/XPathRecordReader.Node#putNulls(Map[String,Object]).mjava","commits":[{"id":"4d4f1b2c5601680b01c4bb95a43fe6fb73f03103","date":1217446558,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/XPathRecordReader.Node#putNulls(Map[String,Object]).mjava","pathOld":"/dev/null","sourceNew":"    private void putNulls(Map<String, Object> values) {\n      if (attributes != null) {\n        for (Node n : attributes) {\n          if (n.multiValued)\n            putText(values, null, n.fieldName, true);\n        }\n      }\n      if (hasText && multiValued)\n        putText(values, null, fieldName, true);\n      if (childNodes != null) {\n        for (Node childNode : childNodes)\n          childNode.putNulls(values);\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cb5bb8a93dd58a4cde932f3e3ee4e13dc6832949","date":1252931993,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/XPathRecordReader.Node#putNulls(Map[String,Object]).mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/XPathRecordReader.Node#putNulls(Map[String,Object]).mjava","sourceNew":"    /**If there is no value available for a field in a subtag then add a null\n     * TODO : needs better explanation\n     */\n    private void putNulls(Map<String, Object> values) {\n      if (attributes != null) {\n        for (Node n : attributes) {\n          if (n.multiValued)\n            putText(values, null, n.fieldName, true);\n        }\n      }\n      if (hasText && multiValued)\n        putText(values, null, fieldName, true);\n      if (childNodes != null) {\n        for (Node childNode : childNodes)\n          childNode.putNulls(values);\n      }\n    }\n\n","sourceOld":"    private void putNulls(Map<String, Object> values) {\n      if (attributes != null) {\n        for (Node n : attributes) {\n          if (n.multiValued)\n            putText(values, null, n.fieldName, true);\n        }\n      }\n      if (hasText && multiValued)\n        putText(values, null, fieldName, true);\n      if (childNodes != null) {\n        for (Node childNode : childNodes)\n          childNode.putNulls(values);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b14ccda0bdb398cf86bc3804e1c136a615dbd89b","date":1253269935,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/XPathRecordReader.Node#putNulls(Map[String,Object]).mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/XPathRecordReader.Node#putNulls(Map[String,Object]).mjava","sourceNew":"    /**\n     * A recursive routine that walks the Node tree from a supplied start\n     * pushing a null string onto every multiValued fieldName's List of values.\n     */\n    private void putNulls(Map<String, Object> values) {\n      if (attributes != null) {\n        for (Node n : attributes) {\n          if (n.multiValued)\n            putText(values, null, n.fieldName, true);\n        }\n      }\n      if (hasText && multiValued)\n        putText(values, null, fieldName, true);\n      if (childNodes != null) {\n        for (Node childNode : childNodes)\n          childNode.putNulls(values);\n      }\n    }\n\n","sourceOld":"    /**If there is no value available for a field in a subtag then add a null\n     * TODO : needs better explanation\n     */\n    private void putNulls(Map<String, Object> values) {\n      if (attributes != null) {\n        for (Node n : attributes) {\n          if (n.multiValued)\n            putText(values, null, n.fieldName, true);\n        }\n      }\n      if (hasText && multiValued)\n        putText(values, null, fieldName, true);\n      if (childNodes != null) {\n        for (Node childNode : childNodes)\n          childNode.putNulls(values);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7f2a93a28913071a0b713be1d4b8a1181388d550","date":1254814948,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/XPathRecordReader.Node#putNulls(Map[String,Object]).mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/XPathRecordReader.Node#putNulls(Map[String,Object]).mjava","sourceNew":"    /**\n     * A recursive routine that walks the Node tree from a supplied start\n     * pushing a null string onto every multiValued fieldName's List of values\n     * where a value has not been provided from the stream.\n     */\n    private void putNulls(Map<String, Object> values) {\n      if (attributes != null) {\n        for (Node n : attributes) {\n          if (n.multiValued)\n            putText(values, null, n.fieldName, true);\n        }\n      }\n      if (hasText && multiValued)\n        putText(values, null, fieldName, true);\n      if (childNodes != null) {\n        for (Node childNode : childNodes)\n          childNode.putNulls(values);\n      }\n    }\n\n","sourceOld":"    /**\n     * A recursive routine that walks the Node tree from a supplied start\n     * pushing a null string onto every multiValued fieldName's List of values.\n     */\n    private void putNulls(Map<String, Object> values) {\n      if (attributes != null) {\n        for (Node n : attributes) {\n          if (n.multiValued)\n            putText(values, null, n.fieldName, true);\n        }\n      }\n      if (hasText && multiValued)\n        putText(values, null, fieldName, true);\n      if (childNodes != null) {\n        for (Node childNode : childNodes)\n          childNode.putNulls(values);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/XPathRecordReader.Node#putNulls(Map[String,Object]).mjava","pathOld":"contrib/dataimporthandler/src/main/java/org/apache/solr/handler/dataimport/XPathRecordReader.Node#putNulls(Map[String,Object]).mjava","sourceNew":"    /**\n     * A recursive routine that walks the Node tree from a supplied start\n     * pushing a null string onto every multiValued fieldName's List of values\n     * where a value has not been provided from the stream.\n     */\n    private void putNulls(Map<String, Object> values) {\n      if (attributes != null) {\n        for (Node n : attributes) {\n          if (n.multiValued)\n            putText(values, null, n.fieldName, true);\n        }\n      }\n      if (hasText && multiValued)\n        putText(values, null, fieldName, true);\n      if (childNodes != null) {\n        for (Node childNode : childNodes)\n          childNode.putNulls(values);\n      }\n    }\n\n","sourceOld":"    /**\n     * A recursive routine that walks the Node tree from a supplied start\n     * pushing a null string onto every multiValued fieldName's List of values\n     * where a value has not been provided from the stream.\n     */\n    private void putNulls(Map<String, Object> values) {\n      if (attributes != null) {\n        for (Node n : attributes) {\n          if (n.multiValued)\n            putText(values, null, n.fieldName, true);\n        }\n      }\n      if (hasText && multiValued)\n        putText(values, null, fieldName, true);\n      if (childNodes != null) {\n        for (Node childNode : childNodes)\n          childNode.putNulls(values);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"cb5bb8a93dd58a4cde932f3e3ee4e13dc6832949":["4d4f1b2c5601680b01c4bb95a43fe6fb73f03103"],"4d4f1b2c5601680b01c4bb95a43fe6fb73f03103":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["7f2a93a28913071a0b713be1d4b8a1181388d550"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"7f2a93a28913071a0b713be1d4b8a1181388d550":["b14ccda0bdb398cf86bc3804e1c136a615dbd89b"],"b14ccda0bdb398cf86bc3804e1c136a615dbd89b":["cb5bb8a93dd58a4cde932f3e3ee4e13dc6832949"]},"commit2Childs":{"cb5bb8a93dd58a4cde932f3e3ee4e13dc6832949":["b14ccda0bdb398cf86bc3804e1c136a615dbd89b"],"4d4f1b2c5601680b01c4bb95a43fe6fb73f03103":["cb5bb8a93dd58a4cde932f3e3ee4e13dc6832949"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["4d4f1b2c5601680b01c4bb95a43fe6fb73f03103"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"7f2a93a28913071a0b713be1d4b8a1181388d550":["ad94625fb8d088209f46650c8097196fec67f00c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"b14ccda0bdb398cf86bc3804e1c136a615dbd89b":["7f2a93a28913071a0b713be1d4b8a1181388d550"]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}