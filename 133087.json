{"path":"solr/core/src/java/org/apache/solr/update/SolrIndexWriter#doAfterFlush().mjava","commits":[{"id":"2f7df713a0f1e310d18dd8da91c89a07a13f86f8","date":1483441921,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/SolrIndexWriter#doAfterFlush().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  protected void doAfterFlush() throws IOException {\n    if (flushMeter != null) { // this is null when writer is used only for snapshot cleanup\n      flushMeter.mark();\n    }\n    super.doAfterFlush();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["e1a852c0a44dbc28501a84f489c6ed85d1fb1ee8"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"f03e4bed5023ec3ef93a771b8888cae991cf448d","date":1483469262,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/SolrIndexWriter#doAfterFlush().mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  protected void doAfterFlush() throws IOException {\n    if (flushMeter != null) { // this is null when writer is used only for snapshot cleanup\n      flushMeter.mark();\n    }\n    super.doAfterFlush();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e1a852c0a44dbc28501a84f489c6ed85d1fb1ee8","date":1487166948,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/SolrIndexWriter#doAfterFlush().mjava","pathOld":"solr/core/src/java/org/apache/solr/update/SolrIndexWriter#doAfterFlush().mjava","sourceNew":"  @Override\n  protected void doAfterFlush() throws IOException {\n    if (flushMeter != null) { // this is null when writer is used only for snapshot cleanup\n      flushMeter.mark();      // or if mergeTotals == false\n    }\n    super.doAfterFlush();\n  }\n\n","sourceOld":"  @Override\n  protected void doAfterFlush() throws IOException {\n    if (flushMeter != null) { // this is null when writer is used only for snapshot cleanup\n      flushMeter.mark();\n    }\n    super.doAfterFlush();\n  }\n\n","bugFix":["2f7df713a0f1e310d18dd8da91c89a07a13f86f8"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e1a852c0a44dbc28501a84f489c6ed85d1fb1ee8":["2f7df713a0f1e310d18dd8da91c89a07a13f86f8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2f7df713a0f1e310d18dd8da91c89a07a13f86f8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e1a852c0a44dbc28501a84f489c6ed85d1fb1ee8"],"f03e4bed5023ec3ef93a771b8888cae991cf448d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2f7df713a0f1e310d18dd8da91c89a07a13f86f8"]},"commit2Childs":{"e1a852c0a44dbc28501a84f489c6ed85d1fb1ee8":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["2f7df713a0f1e310d18dd8da91c89a07a13f86f8","f03e4bed5023ec3ef93a771b8888cae991cf448d"],"2f7df713a0f1e310d18dd8da91c89a07a13f86f8":["e1a852c0a44dbc28501a84f489c6ed85d1fb1ee8","f03e4bed5023ec3ef93a771b8888cae991cf448d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"f03e4bed5023ec3ef93a771b8888cae991cf448d":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","f03e4bed5023ec3ef93a771b8888cae991cf448d"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}