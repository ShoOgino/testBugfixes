{"path":"lucene/join/src/java/org/apache/lucene/search/join/DocValuesTermsCollector#coder(BytesRefBuilder,LegacyNumericType,String).mjava","commits":[{"id":"770342641f7b505eaa8dccdc666158bff2419109","date":1449868421,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/DocValuesTermsCollector#coder(BytesRefBuilder,LegacyNumericType,String).mjava","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/DocValuesTermsCollector#coder(BytesRefBuilder,NumericType,String).mjava","sourceNew":"  static LongConsumer coder(BytesRefBuilder bytes, LegacyNumericType type, String fieldName){\n    switch(type){\n      case INT: \n        return (l) -> LegacyNumericUtils.intToPrefixCoded((int) l, 0, bytes);\n      case LONG: \n        return (l) -> LegacyNumericUtils.longToPrefixCoded(l, 0, bytes);\n      default:\n        throw new IllegalArgumentException(\"Unsupported \"+type+\n            \". Only \"+ LegacyNumericType.INT+\" and \"+ FieldType.LegacyNumericType.LONG+\" are supported.\"\n            + \"Field \"+fieldName );\n    }\n  }\n\n","sourceOld":"  static LongConsumer coder(BytesRefBuilder bytes, NumericType type, String fieldName){\n    switch(type){\n      case INT: \n        return (l) -> NumericUtils.intToPrefixCoded((int)l, 0, bytes);\n      case LONG: \n        return (l) -> NumericUtils.longToPrefixCoded(l, 0, bytes);\n      default:\n        throw new IllegalArgumentException(\"Unsupported \"+type+\n            \". Only \"+NumericType.INT+\" and \"+NumericType.LONG+\" are supported.\"\n            + \"Field \"+fieldName );\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5af5ba0166322092193d4c29880b0f7670fc7ca0","date":1471440525,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/DocValuesTermsCollector#coder(BytesRefBuilder,LegacyNumericType,String).mjava","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/DocValuesTermsCollector#coder(BytesRefBuilder,LegacyNumericType,String).mjava","sourceNew":"  static LongConsumer coder(BytesRefBuilder bytes, LegacyNumericType type, String fieldName){\n    switch(type){\n      case INT: \n        return (l) -> LegacyNumericUtils.intToPrefixCoded((int) l, 0, bytes);\n      case LONG: \n        return (l) -> LegacyNumericUtils.longToPrefixCoded(l, 0, bytes);\n      default:\n        throw new IllegalArgumentException(\"Unsupported \"+type+\n            \". Only \"+ LegacyNumericType.INT+\" and \"+ LegacyNumericType.LONG+\" are supported.\"\n            + \"Field \"+fieldName );\n    }\n  }\n\n","sourceOld":"  static LongConsumer coder(BytesRefBuilder bytes, LegacyNumericType type, String fieldName){\n    switch(type){\n      case INT: \n        return (l) -> LegacyNumericUtils.intToPrefixCoded((int) l, 0, bytes);\n      case LONG: \n        return (l) -> LegacyNumericUtils.longToPrefixCoded(l, 0, bytes);\n      default:\n        throw new IllegalArgumentException(\"Unsupported \"+type+\n            \". Only \"+ LegacyNumericType.INT+\" and \"+ FieldType.LegacyNumericType.LONG+\" are supported.\"\n            + \"Field \"+fieldName );\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2c8bedceb91e64a3f0e831450058fc4a76d2c0a6","date":1471496851,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/DocValuesTermsCollector#coder(BytesRefBuilder,LegacyNumericType,String).mjava","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/DocValuesTermsCollector#coder(BytesRefBuilder,LegacyNumericType,String).mjava","sourceNew":"  static LongConsumer coder(BytesRefBuilder bytes, LegacyNumericType type, String fieldName){\n    switch(type){\n      case INT: \n        return (l) -> LegacyNumericUtils.intToPrefixCoded((int) l, 0, bytes);\n      case LONG: \n        return (l) -> LegacyNumericUtils.longToPrefixCoded(l, 0, bytes);\n      default:\n        throw new IllegalArgumentException(\"Unsupported \"+type+\n            \". Only \"+ LegacyNumericType.INT+\" and \"+ LegacyNumericType.LONG+\" are supported.\"\n            + \"Field \"+fieldName );\n    }\n  }\n\n","sourceOld":"  static LongConsumer coder(BytesRefBuilder bytes, LegacyNumericType type, String fieldName){\n    switch(type){\n      case INT: \n        return (l) -> LegacyNumericUtils.intToPrefixCoded((int) l, 0, bytes);\n      case LONG: \n        return (l) -> LegacyNumericUtils.longToPrefixCoded(l, 0, bytes);\n      default:\n        throw new IllegalArgumentException(\"Unsupported \"+type+\n            \". Only \"+ LegacyNumericType.INT+\" and \"+ FieldType.LegacyNumericType.LONG+\" are supported.\"\n            + \"Field \"+fieldName );\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"403d05f7f8d69b65659157eff1bc1d2717f04c66","date":1471692961,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/join/src/java/org/apache/lucene/search/join/DocValuesTermsCollector#coder(BytesRefBuilder,LegacyNumericType,String).mjava","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/DocValuesTermsCollector#coder(BytesRefBuilder,LegacyNumericType,String).mjava","sourceNew":"  static LongConsumer coder(BytesRefBuilder bytes, LegacyNumericType type, String fieldName){\n    switch(type){\n      case INT: \n        return (l) -> LegacyNumericUtils.intToPrefixCoded((int) l, 0, bytes);\n      case LONG: \n        return (l) -> LegacyNumericUtils.longToPrefixCoded(l, 0, bytes);\n      default:\n        throw new IllegalArgumentException(\"Unsupported \"+type+\n            \". Only \"+ LegacyNumericType.INT+\" and \"+ LegacyNumericType.LONG+\" are supported.\"\n            + \"Field \"+fieldName );\n    }\n  }\n\n","sourceOld":"  static LongConsumer coder(BytesRefBuilder bytes, LegacyNumericType type, String fieldName){\n    switch(type){\n      case INT: \n        return (l) -> LegacyNumericUtils.intToPrefixCoded((int) l, 0, bytes);\n      case LONG: \n        return (l) -> LegacyNumericUtils.longToPrefixCoded(l, 0, bytes);\n      default:\n        throw new IllegalArgumentException(\"Unsupported \"+type+\n            \". Only \"+ LegacyNumericType.INT+\" and \"+ FieldType.LegacyNumericType.LONG+\" are supported.\"\n            + \"Field \"+fieldName );\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"50b8410419cbbe9d8e1a96c918a951976bffe680","date":1471869553,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/DocValuesTermsCollector#coder(BytesRefBuilder,LegacyNumericType,String).mjava","sourceNew":null,"sourceOld":"  static LongConsumer coder(BytesRefBuilder bytes, LegacyNumericType type, String fieldName){\n    switch(type){\n      case INT: \n        return (l) -> LegacyNumericUtils.intToPrefixCoded((int) l, 0, bytes);\n      case LONG: \n        return (l) -> LegacyNumericUtils.longToPrefixCoded(l, 0, bytes);\n      default:\n        throw new IllegalArgumentException(\"Unsupported \"+type+\n            \". Only \"+ LegacyNumericType.INT+\" and \"+ LegacyNumericType.LONG+\" are supported.\"\n            + \"Field \"+fieldName );\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0c82557b0a8c9d4012f208e5de912ae7500ea351","date":1471888093,"type":4,"author":"Noble Paul","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/DocValuesTermsCollector#coder(BytesRefBuilder,LegacyNumericType,String).mjava","sourceNew":null,"sourceOld":"  static LongConsumer coder(BytesRefBuilder bytes, LegacyNumericType type, String fieldName){\n    switch(type){\n      case INT: \n        return (l) -> LegacyNumericUtils.intToPrefixCoded((int) l, 0, bytes);\n      case LONG: \n        return (l) -> LegacyNumericUtils.longToPrefixCoded(l, 0, bytes);\n      default:\n        throw new IllegalArgumentException(\"Unsupported \"+type+\n            \". Only \"+ LegacyNumericType.INT+\" and \"+ LegacyNumericType.LONG+\" are supported.\"\n            + \"Field \"+fieldName );\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e1c5f7ce544a129550a8515f7f0eb5f1c0f4472a","date":1472163016,"type":4,"author":"Karl Wright","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/DocValuesTermsCollector#coder(BytesRefBuilder,LegacyNumericType,String).mjava","sourceNew":null,"sourceOld":"  static LongConsumer coder(BytesRefBuilder bytes, LegacyNumericType type, String fieldName){\n    switch(type){\n      case INT: \n        return (l) -> LegacyNumericUtils.intToPrefixCoded((int) l, 0, bytes);\n      case LONG: \n        return (l) -> LegacyNumericUtils.longToPrefixCoded(l, 0, bytes);\n      default:\n        throw new IllegalArgumentException(\"Unsupported \"+type+\n            \". Only \"+ LegacyNumericType.INT+\" and \"+ LegacyNumericType.LONG+\" are supported.\"\n            + \"Field \"+fieldName );\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":4,"author":"Kevin Risden","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/join/src/java/org/apache/lucene/search/join/DocValuesTermsCollector#coder(BytesRefBuilder,LegacyNumericType,String).mjava","sourceNew":null,"sourceOld":"  static LongConsumer coder(BytesRefBuilder bytes, LegacyNumericType type, String fieldName){\n    switch(type){\n      case INT: \n        return (l) -> LegacyNumericUtils.intToPrefixCoded((int) l, 0, bytes);\n      case LONG: \n        return (l) -> LegacyNumericUtils.longToPrefixCoded(l, 0, bytes);\n      default:\n        throw new IllegalArgumentException(\"Unsupported \"+type+\n            \". Only \"+ LegacyNumericType.INT+\" and \"+ FieldType.LegacyNumericType.LONG+\" are supported.\"\n            + \"Field \"+fieldName );\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"403d05f7f8d69b65659157eff1bc1d2717f04c66":["770342641f7b505eaa8dccdc666158bff2419109","2c8bedceb91e64a3f0e831450058fc4a76d2c0a6"],"0c82557b0a8c9d4012f208e5de912ae7500ea351":["403d05f7f8d69b65659157eff1bc1d2717f04c66","50b8410419cbbe9d8e1a96c918a951976bffe680"],"50b8410419cbbe9d8e1a96c918a951976bffe680":["403d05f7f8d69b65659157eff1bc1d2717f04c66"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5af5ba0166322092193d4c29880b0f7670fc7ca0":["770342641f7b505eaa8dccdc666158bff2419109"],"2c8bedceb91e64a3f0e831450058fc4a76d2c0a6":["770342641f7b505eaa8dccdc666158bff2419109","5af5ba0166322092193d4c29880b0f7670fc7ca0"],"770342641f7b505eaa8dccdc666158bff2419109":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e1c5f7ce544a129550a8515f7f0eb5f1c0f4472a":["403d05f7f8d69b65659157eff1bc1d2717f04c66","0c82557b0a8c9d4012f208e5de912ae7500ea351"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["770342641f7b505eaa8dccdc666158bff2419109","e1c5f7ce544a129550a8515f7f0eb5f1c0f4472a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e1c5f7ce544a129550a8515f7f0eb5f1c0f4472a"]},"commit2Childs":{"403d05f7f8d69b65659157eff1bc1d2717f04c66":["0c82557b0a8c9d4012f208e5de912ae7500ea351","50b8410419cbbe9d8e1a96c918a951976bffe680","e1c5f7ce544a129550a8515f7f0eb5f1c0f4472a"],"0c82557b0a8c9d4012f208e5de912ae7500ea351":["e1c5f7ce544a129550a8515f7f0eb5f1c0f4472a"],"50b8410419cbbe9d8e1a96c918a951976bffe680":["0c82557b0a8c9d4012f208e5de912ae7500ea351"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["770342641f7b505eaa8dccdc666158bff2419109"],"5af5ba0166322092193d4c29880b0f7670fc7ca0":["2c8bedceb91e64a3f0e831450058fc4a76d2c0a6"],"2c8bedceb91e64a3f0e831450058fc4a76d2c0a6":["403d05f7f8d69b65659157eff1bc1d2717f04c66"],"770342641f7b505eaa8dccdc666158bff2419109":["403d05f7f8d69b65659157eff1bc1d2717f04c66","5af5ba0166322092193d4c29880b0f7670fc7ca0","2c8bedceb91e64a3f0e831450058fc4a76d2c0a6","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"e1c5f7ce544a129550a8515f7f0eb5f1c0f4472a":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}