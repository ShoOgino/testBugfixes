{"path":"solr/core/src/test/org/apache/solr/cloud/overseer/ZkStateReaderTest#testStateFormatUpdateWithTimeDelay().mjava","commits":[{"id":"1072b8e47b50f1c4fb039e1f54a736f381d6f809","date":1438956441,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/overseer/ZkStateReaderTest#testStateFormatUpdateWithTimeDelay().mjava","pathOld":"/dev/null","sourceNew":"  /** ZkStateReader should automatically pick up changes based on ZK watches. */\n  public void testStateFormatUpdateWithTimeDelay() throws Exception {\n    testStateFormatUpdate(false);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8bf04c3f77a2936f29948b9c0dd215d82d43f5cf","date":1440482195,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/overseer/ZkStateReaderTest#testStateFormatUpdateWithTimeDelay().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/overseer/ZkStateReaderTest#testStateFormatUpdateWithTimeDelay().mjava","sourceNew":"  /** ZkStateReader should automatically pick up changes based on ZK watches. */\n  public void testStateFormatUpdateWithTimeDelay() throws Exception {\n    testStateFormatUpdate(false, true);\n  }\n\n","sourceOld":"  /** ZkStateReader should automatically pick up changes based on ZK watches. */\n  public void testStateFormatUpdateWithTimeDelay() throws Exception {\n    testStateFormatUpdate(false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5ad9c35f926b4bf8da0336d1300efc709c8d5a56","date":1591729157,"type":4,"author":"murblanc","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/cloud/overseer/ZkStateReaderTest#testStateFormatUpdateWithTimeDelay().mjava","sourceNew":null,"sourceOld":"  /** ZkStateReader should automatically pick up changes based on ZK watches. */\n  public void testStateFormatUpdateWithTimeDelay() throws Exception {\n    testStateFormatUpdate(false, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5ad9c35f926b4bf8da0336d1300efc709c8d5a56":["8bf04c3f77a2936f29948b9c0dd215d82d43f5cf"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8bf04c3f77a2936f29948b9c0dd215d82d43f5cf":["1072b8e47b50f1c4fb039e1f54a736f381d6f809"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5ad9c35f926b4bf8da0336d1300efc709c8d5a56"],"1072b8e47b50f1c4fb039e1f54a736f381d6f809":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"5ad9c35f926b4bf8da0336d1300efc709c8d5a56":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1072b8e47b50f1c4fb039e1f54a736f381d6f809"],"8bf04c3f77a2936f29948b9c0dd215d82d43f5cf":["5ad9c35f926b4bf8da0336d1300efc709c8d5a56"],"1072b8e47b50f1c4fb039e1f54a736f381d6f809":["8bf04c3f77a2936f29948b9c0dd215d82d43f5cf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}