{"path":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#doSearching(Query).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#doSearching(Query).mjava","pathOld":"contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#doSearching(Query).mjava","sourceNew":"  public void doSearching(Query unReWrittenQuery) throws Exception {\n    searcher = new IndexSearcher(ramDir, true);\n    // for any multi-term queries to work (prefix, wildcard, range,fuzzy etc)\n    // you must use a rewritten query!\n    query = unReWrittenQuery.rewrite(reader);\n    if (VERBOSE) System.out.println(\"Searching for: \" + query.toString(FIELD_NAME));\n    hits = searcher.search(query, null, 1000);\n  }\n\n","sourceOld":"  public void doSearching(Query unReWrittenQuery) throws Exception {\n    searcher = new IndexSearcher(ramDir, true);\n    // for any multi-term queries to work (prefix, wildcard, range,fuzzy etc)\n    // you must use a rewritten query!\n    query = unReWrittenQuery.rewrite(reader);\n    if (VERBOSE) System.out.println(\"Searching for: \" + query.toString(FIELD_NAME));\n    hits = searcher.search(query, null, 1000);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c","date":1281646583,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#doSearching(Query).mjava","pathOld":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#doSearching(Query).mjava","sourceNew":"  public void doSearching(Query unReWrittenQuery) throws Exception {\n    if (searcher != null) searcher.close();\n    searcher = new IndexSearcher(ramDir, true);\n    // for any multi-term queries to work (prefix, wildcard, range,fuzzy etc)\n    // you must use a rewritten query!\n    query = unReWrittenQuery.rewrite(reader);\n    if (VERBOSE) System.out.println(\"Searching for: \" + query.toString(FIELD_NAME));\n    hits = searcher.search(query, null, 1000);\n  }\n\n","sourceOld":"  public void doSearching(Query unReWrittenQuery) throws Exception {\n    searcher = new IndexSearcher(ramDir, true);\n    // for any multi-term queries to work (prefix, wildcard, range,fuzzy etc)\n    // you must use a rewritten query!\n    query = unReWrittenQuery.rewrite(reader);\n    if (VERBOSE) System.out.println(\"Searching for: \" + query.toString(FIELD_NAME));\n    hits = searcher.search(query, null, 1000);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#doSearching(Query).mjava","pathOld":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#doSearching(Query).mjava","sourceNew":"  public void doSearching(Query unReWrittenQuery) throws Exception {\n    if (searcher != null) searcher.close();\n    searcher = new IndexSearcher(ramDir, true);\n    // for any multi-term queries to work (prefix, wildcard, range,fuzzy etc)\n    // you must use a rewritten query!\n    query = unReWrittenQuery.rewrite(reader);\n    if (VERBOSE) System.out.println(\"Searching for: \" + query.toString(FIELD_NAME));\n    hits = searcher.search(query, null, 1000);\n  }\n\n","sourceOld":"  public void doSearching(Query unReWrittenQuery) throws Exception {\n    searcher = new IndexSearcher(ramDir, true);\n    // for any multi-term queries to work (prefix, wildcard, range,fuzzy etc)\n    // you must use a rewritten query!\n    query = unReWrittenQuery.rewrite(reader);\n    if (VERBOSE) System.out.println(\"Searching for: \" + query.toString(FIELD_NAME));\n    hits = searcher.search(query, null, 1000);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3a0403b45dfe384fae4a1b6e96c3265d000c498","date":1321445981,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#doSearching(Query).mjava","pathOld":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#doSearching(Query).mjava","sourceNew":"  public void doSearching(Query unReWrittenQuery) throws Exception {\n    if (searcher != null) searcher.close();\n    searcher = new IndexSearcher(reader);\n    // for any multi-term queries to work (prefix, wildcard, range,fuzzy etc)\n    // you must use a rewritten query!\n    query = unReWrittenQuery.rewrite(reader);\n    if (VERBOSE) System.out.println(\"Searching for: \" + query.toString(FIELD_NAME));\n    hits = searcher.search(query, null, 1000);\n  }\n\n","sourceOld":"  public void doSearching(Query unReWrittenQuery) throws Exception {\n    if (searcher != null) searcher.close();\n    searcher = new IndexSearcher(ramDir, true);\n    // for any multi-term queries to work (prefix, wildcard, range,fuzzy etc)\n    // you must use a rewritten query!\n    query = unReWrittenQuery.rewrite(reader);\n    if (VERBOSE) System.out.println(\"Searching for: \" + query.toString(FIELD_NAME));\n    hits = searcher.search(query, null, 1000);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0e7c2454a6a8237bfd0e953f5b940838408c9055","date":1323649300,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#doSearching(Query).mjava","pathOld":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#doSearching(Query).mjava","sourceNew":"  public void doSearching(Query unReWrittenQuery) throws Exception {\n    searcher = new IndexSearcher(reader);\n    // for any multi-term queries to work (prefix, wildcard, range,fuzzy etc)\n    // you must use a rewritten query!\n    query = unReWrittenQuery.rewrite(reader);\n    if (VERBOSE) System.out.println(\"Searching for: \" + query.toString(FIELD_NAME));\n    hits = searcher.search(query, null, 1000);\n  }\n\n","sourceOld":"  public void doSearching(Query unReWrittenQuery) throws Exception {\n    if (searcher != null) searcher.close();\n    searcher = new IndexSearcher(reader);\n    // for any multi-term queries to work (prefix, wildcard, range,fuzzy etc)\n    // you must use a rewritten query!\n    query = unReWrittenQuery.rewrite(reader);\n    if (VERBOSE) System.out.println(\"Searching for: \" + query.toString(FIELD_NAME));\n    hits = searcher.search(query, null, 1000);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"93ccd971aca7fb61b7f1b946e44714cfc80bfc7c","date":1323720782,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#doSearching(Query).mjava","pathOld":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#doSearching(Query).mjava","sourceNew":"  public void doSearching(Query unReWrittenQuery) throws Exception {\n    searcher = new IndexSearcher(reader);\n    // for any multi-term queries to work (prefix, wildcard, range,fuzzy etc)\n    // you must use a rewritten query!\n    query = unReWrittenQuery.rewrite(reader);\n    if (VERBOSE) System.out.println(\"Searching for: \" + query.toString(FIELD_NAME));\n    hits = searcher.search(query, null, 1000);\n  }\n\n","sourceOld":"  public void doSearching(Query unReWrittenQuery) throws Exception {\n    if (searcher != null) searcher.close();\n    searcher = new IndexSearcher(reader);\n    // for any multi-term queries to work (prefix, wildcard, range,fuzzy etc)\n    // you must use a rewritten query!\n    query = unReWrittenQuery.rewrite(reader);\n    if (VERBOSE) System.out.println(\"Searching for: \" + query.toString(FIELD_NAME));\n    hits = searcher.search(query, null, 1000);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#doSearching(Query).mjava","pathOld":"lucene/contrib/highlighter/src/test/org/apache/lucene/search/highlight/HighlighterTest#doSearching(Query).mjava","sourceNew":"  public void doSearching(Query unReWrittenQuery) throws Exception {\n    searcher = new IndexSearcher(reader);\n    // for any multi-term queries to work (prefix, wildcard, range,fuzzy etc)\n    // you must use a rewritten query!\n    query = unReWrittenQuery.rewrite(reader);\n    if (VERBOSE) System.out.println(\"Searching for: \" + query.toString(FIELD_NAME));\n    hits = searcher.search(query, null, 1000);\n  }\n\n","sourceOld":"  public void doSearching(Query unReWrittenQuery) throws Exception {\n    searcher = new IndexSearcher(reader);\n    // for any multi-term queries to work (prefix, wildcard, range,fuzzy etc)\n    // you must use a rewritten query!\n    query = unReWrittenQuery.rewrite(reader);\n    if (VERBOSE) System.out.println(\"Searching for: \" + query.toString(FIELD_NAME));\n    hits = searcher.search(query, null, 1000);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["0e7c2454a6a8237bfd0e953f5b940838408c9055"],"0e7c2454a6a8237bfd0e953f5b940838408c9055":["a3a0403b45dfe384fae4a1b6e96c3265d000c498"],"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"93ccd971aca7fb61b7f1b946e44714cfc80bfc7c":["a3a0403b45dfe384fae4a1b6e96c3265d000c498","0e7c2454a6a8237bfd0e953f5b940838408c9055"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a3a0403b45dfe384fae4a1b6e96c3265d000c498":["ab9633cb67e3c0aec3c066147a23a957d6e7ad8c"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["9454a6510e2db155fb01faa5c049b06ece95fab9","ab9633cb67e3c0aec3c066147a23a957d6e7ad8c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"0e7c2454a6a8237bfd0e953f5b940838408c9055":["b89678825b68eccaf09e6ab71675fc0b0af1e099","93ccd971aca7fb61b7f1b946e44714cfc80bfc7c"],"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c":["a3a0403b45dfe384fae4a1b6e96c3265d000c498","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"93ccd971aca7fb61b7f1b946e44714cfc80bfc7c":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a3a0403b45dfe384fae4a1b6e96c3265d000c498":["0e7c2454a6a8237bfd0e953f5b940838408c9055","93ccd971aca7fb61b7f1b946e44714cfc80bfc7c"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["ab9633cb67e3c0aec3c066147a23a957d6e7ad8c","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["93ccd971aca7fb61b7f1b946e44714cfc80bfc7c","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}