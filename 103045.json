{"path":"lucene/core/src/java/org/apache/lucene/index/DocIDMerger.SequentialDocIDMerger#next().mjava","commits":[{"id":"d85b6e22926e7564c040d2a864f4887f6c59fa92","date":1482349496,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocIDMerger.SequentialDocIDMerger#next().mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public T next() throws IOException {\n      if (current == null) {\n        // NOTE: it's annoying that caller is allowed to call us again even after we returned null before\n        return null;\n      }\n      while (true) {\n        int docID = current.nextDoc();\n        if (docID == NO_MORE_DOCS) {\n          if (nextIndex == subs.size()) {\n            current = null;\n            return null;\n          }\n          current = subs.get(nextIndex);\n          nextIndex++;\n          continue;\n        }\n\n        int mappedDocID = current.docMap.get(docID);\n        if (mappedDocID != -1) {\n          current.mappedDocID = mappedDocID;\n          return current;\n        }\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ef448bb356177500448b3db5e8a3c771c1055869","date":1482433216,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocIDMerger.SequentialDocIDMerger#next().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocIDMerger.SequentialDocIDMerger#next().mjava","sourceNew":"    @Override\n    public T next() throws IOException {\n      while (true) {\n        int docID = current.nextDoc();\n        if (docID == NO_MORE_DOCS) {\n          if (nextIndex == subs.size()) {\n            current = null;\n            return null;\n          }\n          current = subs.get(nextIndex);\n          nextIndex++;\n          continue;\n        }\n\n        int mappedDocID = current.docMap.get(docID);\n        if (mappedDocID != -1) {\n          current.mappedDocID = mappedDocID;\n          return current;\n        }\n      }\n    }\n\n","sourceOld":"    @Override\n    public T next() throws IOException {\n      if (current == null) {\n        // NOTE: it's annoying that caller is allowed to call us again even after we returned null before\n        return null;\n      }\n      while (true) {\n        int docID = current.nextDoc();\n        if (docID == NO_MORE_DOCS) {\n          if (nextIndex == subs.size()) {\n            current = null;\n            return null;\n          }\n          current = subs.get(nextIndex);\n          nextIndex++;\n          continue;\n        }\n\n        int mappedDocID = current.docMap.get(docID);\n        if (mappedDocID != -1) {\n          current.mappedDocID = mappedDocID;\n          return current;\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f03e4bed5023ec3ef93a771b8888cae991cf448d","date":1483469262,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocIDMerger.SequentialDocIDMerger#next().mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public T next() throws IOException {\n      while (true) {\n        int docID = current.nextDoc();\n        if (docID == NO_MORE_DOCS) {\n          if (nextIndex == subs.size()) {\n            current = null;\n            return null;\n          }\n          current = subs.get(nextIndex);\n          nextIndex++;\n          continue;\n        }\n\n        int mappedDocID = current.docMap.get(docID);\n        if (mappedDocID != -1) {\n          current.mappedDocID = mappedDocID;\n          return current;\n        }\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ef448bb356177500448b3db5e8a3c771c1055869":["d85b6e22926e7564c040d2a864f4887f6c59fa92"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d85b6e22926e7564c040d2a864f4887f6c59fa92":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ef448bb356177500448b3db5e8a3c771c1055869"],"f03e4bed5023ec3ef93a771b8888cae991cf448d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ef448bb356177500448b3db5e8a3c771c1055869"]},"commit2Childs":{"ef448bb356177500448b3db5e8a3c771c1055869":["cd5edd1f2b162a5cfa08efd17851a07373a96817","f03e4bed5023ec3ef93a771b8888cae991cf448d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d85b6e22926e7564c040d2a864f4887f6c59fa92","f03e4bed5023ec3ef93a771b8888cae991cf448d"],"d85b6e22926e7564c040d2a864f4887f6c59fa92":["ef448bb356177500448b3db5e8a3c771c1055869"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"f03e4bed5023ec3ef93a771b8888cae991cf448d":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","f03e4bed5023ec3ef93a771b8888cae991cf448d"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}