{"path":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/geom/GeoPolygonTest#testComplexPolygonPlaneOutsideWorld().mjava","commits":[{"id":"fe50ba7fa06b0e65ac399b16155e3f841fe89b3d","date":1522935235,"type":0,"author":"Ignacio Vera","isMerge":false,"pathNew":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/geom/GeoPolygonTest#testComplexPolygonPlaneOutsideWorld().mjava","pathOld":"/dev/null","sourceNew":"  @Ignore\n  @Test\n  public void testComplexPolygonPlaneOutsideWorld() {\n    List<GeoPoint> points = new ArrayList<>();\n    points.add(new GeoPoint(PlanetModel.SPHERE, -0.5, -0.5));\n    points.add(new GeoPoint(PlanetModel.SPHERE, -0.5, 0.5));\n    points.add(new GeoPoint(PlanetModel.SPHERE, 0.5, 0.5));\n    points.add(new GeoPoint(PlanetModel.SPHERE,0.5, -0.5));\n    GeoPolygon polygon = GeoPolygonFactory.makeGeoPolygon(PlanetModel.SPHERE, points);\n    //Large polygon with arbitrary testPoint in set\n    GeoPolygon largePolygon = new GeoComplexPolygon(PlanetModel.SPHERE, Collections.singletonList(points), new GeoPoint(PlanetModel.SPHERE, 0.25, 0), true);\n    //This point is ok\n    GeoPoint point1 = new GeoPoint(PlanetModel.SPHERE, 0, 1e-8);\n    assertTrue(polygon.isWithin(point1) == largePolygon.isWithin(point1));\n    //This point is ok\n    point1 = new GeoPoint(PlanetModel.SPHERE, 0, 1e-5);\n    assertTrue(polygon.isWithin(point1) == largePolygon.isWithin(point1));\n    //Fails here\n    point1 = new GeoPoint(PlanetModel.SPHERE, 0, 1e-7);\n    assertTrue(polygon.isWithin(point1) == largePolygon.isWithin(point1));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3c9c955664ed32e2bf97b3da26467354673ea18","date":1522944427,"type":3,"author":"Karl Wright","isMerge":false,"pathNew":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/geom/GeoPolygonTest#testComplexPolygonPlaneOutsideWorld().mjava","pathOld":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/geom/GeoPolygonTest#testComplexPolygonPlaneOutsideWorld().mjava","sourceNew":"  @Test\n  public void testComplexPolygonPlaneOutsideWorld() {\n    List<GeoPoint> points = new ArrayList<>();\n    points.add(new GeoPoint(PlanetModel.SPHERE, -0.5, -0.5));\n    points.add(new GeoPoint(PlanetModel.SPHERE, -0.5, 0.5));\n    points.add(new GeoPoint(PlanetModel.SPHERE, 0.5, 0.5));\n    points.add(new GeoPoint(PlanetModel.SPHERE,0.5, -0.5));\n    GeoPolygon polygon = GeoPolygonFactory.makeGeoPolygon(PlanetModel.SPHERE, points);\n    //Large polygon with arbitrary testPoint in set\n    GeoPolygon largePolygon = new GeoComplexPolygon(PlanetModel.SPHERE, Collections.singletonList(points), new GeoPoint(PlanetModel.SPHERE, 0.25, 0), true);\n    //This point is ok\n    GeoPoint point1 = new GeoPoint(PlanetModel.SPHERE, 0, 1e-8);\n    assertTrue(polygon.isWithin(point1) == largePolygon.isWithin(point1));\n    //This point is ok\n    point1 = new GeoPoint(PlanetModel.SPHERE, 0, 1e-5);\n    assertTrue(polygon.isWithin(point1) == largePolygon.isWithin(point1));\n    //Fails here\n    point1 = new GeoPoint(PlanetModel.SPHERE, 0, 1e-7);\n    assertTrue(polygon.isWithin(point1) == largePolygon.isWithin(point1));\n  }\n\n","sourceOld":"  @Ignore\n  @Test\n  public void testComplexPolygonPlaneOutsideWorld() {\n    List<GeoPoint> points = new ArrayList<>();\n    points.add(new GeoPoint(PlanetModel.SPHERE, -0.5, -0.5));\n    points.add(new GeoPoint(PlanetModel.SPHERE, -0.5, 0.5));\n    points.add(new GeoPoint(PlanetModel.SPHERE, 0.5, 0.5));\n    points.add(new GeoPoint(PlanetModel.SPHERE,0.5, -0.5));\n    GeoPolygon polygon = GeoPolygonFactory.makeGeoPolygon(PlanetModel.SPHERE, points);\n    //Large polygon with arbitrary testPoint in set\n    GeoPolygon largePolygon = new GeoComplexPolygon(PlanetModel.SPHERE, Collections.singletonList(points), new GeoPoint(PlanetModel.SPHERE, 0.25, 0), true);\n    //This point is ok\n    GeoPoint point1 = new GeoPoint(PlanetModel.SPHERE, 0, 1e-8);\n    assertTrue(polygon.isWithin(point1) == largePolygon.isWithin(point1));\n    //This point is ok\n    point1 = new GeoPoint(PlanetModel.SPHERE, 0, 1e-5);\n    assertTrue(polygon.isWithin(point1) == largePolygon.isWithin(point1));\n    //Fails here\n    point1 = new GeoPoint(PlanetModel.SPHERE, 0, 1e-7);\n    assertTrue(polygon.isWithin(point1) == largePolygon.isWithin(point1));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d564e0296db7f80d73dd62b17710f61c85f38c50","date":1523483630,"type":3,"author":"Karl Wright","isMerge":false,"pathNew":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/geom/GeoPolygonTest#testComplexPolygonPlaneOutsideWorld().mjava","pathOld":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/geom/GeoPolygonTest#testComplexPolygonPlaneOutsideWorld().mjava","sourceNew":"  @Test\n  @AwaitsFix(bugUrl=\"https://issues.apache.org/jira/browse/LUCENE-8245\")\n  public void testComplexPolygonPlaneOutsideWorld() {\n    List<GeoPoint> points = new ArrayList<>();\n    points.add(new GeoPoint(PlanetModel.SPHERE, -0.5, -0.5));\n    points.add(new GeoPoint(PlanetModel.SPHERE, -0.5, 0.5));\n    points.add(new GeoPoint(PlanetModel.SPHERE, 0.5, 0.5));\n    points.add(new GeoPoint(PlanetModel.SPHERE,0.5, -0.5));\n    GeoPolygon polygon = GeoPolygonFactory.makeGeoPolygon(PlanetModel.SPHERE, points);\n    //Large polygon with arbitrary testPoint in set\n    GeoPolygon largePolygon = new GeoComplexPolygon(PlanetModel.SPHERE, Collections.singletonList(points), new GeoPoint(PlanetModel.SPHERE, 0.25, 0), true);\n    //This point is ok\n    GeoPoint point1 = new GeoPoint(PlanetModel.SPHERE, 0, 1e-8);\n    assertTrue(polygon.isWithin(point1) == largePolygon.isWithin(point1));\n    //This point is ok\n    point1 = new GeoPoint(PlanetModel.SPHERE, 0, 1e-5);\n    assertTrue(polygon.isWithin(point1) == largePolygon.isWithin(point1));\n    //Fails here\n    point1 = new GeoPoint(PlanetModel.SPHERE, 0, 1e-7);\n    assertTrue(polygon.isWithin(point1) == largePolygon.isWithin(point1));\n  }\n\n","sourceOld":"  @Test\n  public void testComplexPolygonPlaneOutsideWorld() {\n    List<GeoPoint> points = new ArrayList<>();\n    points.add(new GeoPoint(PlanetModel.SPHERE, -0.5, -0.5));\n    points.add(new GeoPoint(PlanetModel.SPHERE, -0.5, 0.5));\n    points.add(new GeoPoint(PlanetModel.SPHERE, 0.5, 0.5));\n    points.add(new GeoPoint(PlanetModel.SPHERE,0.5, -0.5));\n    GeoPolygon polygon = GeoPolygonFactory.makeGeoPolygon(PlanetModel.SPHERE, points);\n    //Large polygon with arbitrary testPoint in set\n    GeoPolygon largePolygon = new GeoComplexPolygon(PlanetModel.SPHERE, Collections.singletonList(points), new GeoPoint(PlanetModel.SPHERE, 0.25, 0), true);\n    //This point is ok\n    GeoPoint point1 = new GeoPoint(PlanetModel.SPHERE, 0, 1e-8);\n    assertTrue(polygon.isWithin(point1) == largePolygon.isWithin(point1));\n    //This point is ok\n    point1 = new GeoPoint(PlanetModel.SPHERE, 0, 1e-5);\n    assertTrue(polygon.isWithin(point1) == largePolygon.isWithin(point1));\n    //Fails here\n    point1 = new GeoPoint(PlanetModel.SPHERE, 0, 1e-7);\n    assertTrue(polygon.isWithin(point1) == largePolygon.isWithin(point1));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e872ee16caf3bf386b6a55f3654fabb2840d8fc9","date":1523529572,"type":3,"author":"Karl Wright","isMerge":false,"pathNew":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/geom/GeoPolygonTest#testComplexPolygonPlaneOutsideWorld().mjava","pathOld":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/geom/GeoPolygonTest#testComplexPolygonPlaneOutsideWorld().mjava","sourceNew":"  @Test\n  //@AwaitsFix(bugUrl=\"https://issues.apache.org/jira/browse/LUCENE-8245\")\n  public void testComplexPolygonPlaneOutsideWorld() {\n    List<GeoPoint> points = new ArrayList<>();\n    points.add(new GeoPoint(PlanetModel.SPHERE, -0.5, -0.5));\n    points.add(new GeoPoint(PlanetModel.SPHERE, -0.5, 0.5));\n    points.add(new GeoPoint(PlanetModel.SPHERE, 0.5, 0.5));\n    points.add(new GeoPoint(PlanetModel.SPHERE,0.5, -0.5));\n    GeoPolygon polygon = GeoPolygonFactory.makeGeoPolygon(PlanetModel.SPHERE, points);\n    //Large polygon with arbitrary testPoint in set\n    GeoPolygon largePolygon = new GeoComplexPolygon(PlanetModel.SPHERE, Collections.singletonList(points), new GeoPoint(PlanetModel.SPHERE, 0.25, 0), true);\n    //This point is ok\n    GeoPoint point1 = new GeoPoint(PlanetModel.SPHERE, 0, 1e-8);\n    assertTrue(polygon.isWithin(point1) == largePolygon.isWithin(point1));\n    //This point is ok\n    point1 = new GeoPoint(PlanetModel.SPHERE, 0, 1e-5);\n    assertTrue(polygon.isWithin(point1) == largePolygon.isWithin(point1));\n    //Fails here\n    point1 = new GeoPoint(PlanetModel.SPHERE, 0, 1e-7);\n    assertTrue(polygon.isWithin(point1) == largePolygon.isWithin(point1));\n  }\n\n","sourceOld":"  @Test\n  @AwaitsFix(bugUrl=\"https://issues.apache.org/jira/browse/LUCENE-8245\")\n  public void testComplexPolygonPlaneOutsideWorld() {\n    List<GeoPoint> points = new ArrayList<>();\n    points.add(new GeoPoint(PlanetModel.SPHERE, -0.5, -0.5));\n    points.add(new GeoPoint(PlanetModel.SPHERE, -0.5, 0.5));\n    points.add(new GeoPoint(PlanetModel.SPHERE, 0.5, 0.5));\n    points.add(new GeoPoint(PlanetModel.SPHERE,0.5, -0.5));\n    GeoPolygon polygon = GeoPolygonFactory.makeGeoPolygon(PlanetModel.SPHERE, points);\n    //Large polygon with arbitrary testPoint in set\n    GeoPolygon largePolygon = new GeoComplexPolygon(PlanetModel.SPHERE, Collections.singletonList(points), new GeoPoint(PlanetModel.SPHERE, 0.25, 0), true);\n    //This point is ok\n    GeoPoint point1 = new GeoPoint(PlanetModel.SPHERE, 0, 1e-8);\n    assertTrue(polygon.isWithin(point1) == largePolygon.isWithin(point1));\n    //This point is ok\n    point1 = new GeoPoint(PlanetModel.SPHERE, 0, 1e-5);\n    assertTrue(polygon.isWithin(point1) == largePolygon.isWithin(point1));\n    //Fails here\n    point1 = new GeoPoint(PlanetModel.SPHERE, 0, 1e-7);\n    assertTrue(polygon.isWithin(point1) == largePolygon.isWithin(point1));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cd56d07f4412123997b4b19dfcd68d39aa5b4acd","date":1523531331,"type":3,"author":"Karl Wright","isMerge":false,"pathNew":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/geom/GeoPolygonTest#testComplexPolygonPlaneOutsideWorld().mjava","pathOld":"lucene/spatial3d/src/test/org/apache/lucene/spatial3d/geom/GeoPolygonTest#testComplexPolygonPlaneOutsideWorld().mjava","sourceNew":"  @Test\n  public void testComplexPolygonPlaneOutsideWorld() {\n    List<GeoPoint> points = new ArrayList<>();\n    points.add(new GeoPoint(PlanetModel.SPHERE, -0.5, -0.5));\n    points.add(new GeoPoint(PlanetModel.SPHERE, -0.5, 0.5));\n    points.add(new GeoPoint(PlanetModel.SPHERE, 0.5, 0.5));\n    points.add(new GeoPoint(PlanetModel.SPHERE,0.5, -0.5));\n    GeoPolygon polygon = GeoPolygonFactory.makeGeoPolygon(PlanetModel.SPHERE, points);\n    //Large polygon with arbitrary testPoint in set\n    GeoPolygon largePolygon = new GeoComplexPolygon(PlanetModel.SPHERE, Collections.singletonList(points), new GeoPoint(PlanetModel.SPHERE, 0.25, 0), true);\n    //This point is ok\n    GeoPoint point1 = new GeoPoint(PlanetModel.SPHERE, 0, 1e-8);\n    assertTrue(polygon.isWithin(point1) == largePolygon.isWithin(point1));\n    //This point is ok\n    point1 = new GeoPoint(PlanetModel.SPHERE, 0, 1e-5);\n    assertTrue(polygon.isWithin(point1) == largePolygon.isWithin(point1));\n    //Fails here\n    point1 = new GeoPoint(PlanetModel.SPHERE, 0, 1e-7);\n    assertTrue(polygon.isWithin(point1) == largePolygon.isWithin(point1));\n  }\n\n","sourceOld":"  @Test\n  //@AwaitsFix(bugUrl=\"https://issues.apache.org/jira/browse/LUCENE-8245\")\n  public void testComplexPolygonPlaneOutsideWorld() {\n    List<GeoPoint> points = new ArrayList<>();\n    points.add(new GeoPoint(PlanetModel.SPHERE, -0.5, -0.5));\n    points.add(new GeoPoint(PlanetModel.SPHERE, -0.5, 0.5));\n    points.add(new GeoPoint(PlanetModel.SPHERE, 0.5, 0.5));\n    points.add(new GeoPoint(PlanetModel.SPHERE,0.5, -0.5));\n    GeoPolygon polygon = GeoPolygonFactory.makeGeoPolygon(PlanetModel.SPHERE, points);\n    //Large polygon with arbitrary testPoint in set\n    GeoPolygon largePolygon = new GeoComplexPolygon(PlanetModel.SPHERE, Collections.singletonList(points), new GeoPoint(PlanetModel.SPHERE, 0.25, 0), true);\n    //This point is ok\n    GeoPoint point1 = new GeoPoint(PlanetModel.SPHERE, 0, 1e-8);\n    assertTrue(polygon.isWithin(point1) == largePolygon.isWithin(point1));\n    //This point is ok\n    point1 = new GeoPoint(PlanetModel.SPHERE, 0, 1e-5);\n    assertTrue(polygon.isWithin(point1) == largePolygon.isWithin(point1));\n    //Fails here\n    point1 = new GeoPoint(PlanetModel.SPHERE, 0, 1e-7);\n    assertTrue(polygon.isWithin(point1) == largePolygon.isWithin(point1));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3c9c955664ed32e2bf97b3da26467354673ea18":["fe50ba7fa06b0e65ac399b16155e3f841fe89b3d"],"d564e0296db7f80d73dd62b17710f61c85f38c50":["d3c9c955664ed32e2bf97b3da26467354673ea18"],"cd56d07f4412123997b4b19dfcd68d39aa5b4acd":["e872ee16caf3bf386b6a55f3654fabb2840d8fc9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e872ee16caf3bf386b6a55f3654fabb2840d8fc9":["d564e0296db7f80d73dd62b17710f61c85f38c50"],"fe50ba7fa06b0e65ac399b16155e3f841fe89b3d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["cd56d07f4412123997b4b19dfcd68d39aa5b4acd"]},"commit2Childs":{"d3c9c955664ed32e2bf97b3da26467354673ea18":["d564e0296db7f80d73dd62b17710f61c85f38c50"],"d564e0296db7f80d73dd62b17710f61c85f38c50":["e872ee16caf3bf386b6a55f3654fabb2840d8fc9"],"cd56d07f4412123997b4b19dfcd68d39aa5b4acd":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["fe50ba7fa06b0e65ac399b16155e3f841fe89b3d"],"fe50ba7fa06b0e65ac399b16155e3f841fe89b3d":["d3c9c955664ed32e2bf97b3da26467354673ea18"],"e872ee16caf3bf386b6a55f3654fabb2840d8fc9":["cd56d07f4412123997b4b19dfcd68d39aa5b4acd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}