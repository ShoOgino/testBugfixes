{"path":"solr/src/java/org/apache/solr/handler/CSVLoader[CSVRequestHandler]#input_err(String,String[],int,Throwable).mjava","commits":[{"id":"f465ad7ab770519c876711f7e3755e85cc4c0830","date":1295972099,"type":0,"author":"Grant Ingersoll","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/handler/CSVLoader[CSVRequestHandler]#input_err(String,String[],int,Throwable).mjava","pathOld":"/dev/null","sourceNew":"  private void input_err(String msg, String[] lines, int lineNo, Throwable e) {\n    StringBuilder sb = new StringBuilder();\n    sb.append(errHeader).append(\", line=\").append(lineNo).append(\",\").append(msg).append(\"\\n\\tvalues={\");\n    if (lines != null) {\n      for (String val : lines) {\n        sb.append(\"'\").append(val).append(\"',\");\n      }\n    } else {\n      sb.append(\"NO LINES AVAILABLE\");\n    }\n    sb.append('}');\n    throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,sb.toString(), e);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/handler/CSVLoader[CSVRequestHandler]#input_err(String,String[],int,Throwable).mjava","pathOld":"/dev/null","sourceNew":"  private void input_err(String msg, String[] lines, int lineNo, Throwable e) {\n    StringBuilder sb = new StringBuilder();\n    sb.append(errHeader).append(\", line=\").append(lineNo).append(\",\").append(msg).append(\"\\n\\tvalues={\");\n    if (lines != null) {\n      for (String val : lines) {\n        sb.append(\"'\").append(val).append(\"',\");\n      }\n    } else {\n      sb.append(\"NO LINES AVAILABLE\");\n    }\n    sb.append('}');\n    throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,sb.toString(), e);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/handler/CSVLoader[CSVRequestHandler]#input_err(String,String[],int,Throwable).mjava","pathOld":"/dev/null","sourceNew":"  private void input_err(String msg, String[] lines, int lineNo, Throwable e) {\n    StringBuilder sb = new StringBuilder();\n    sb.append(errHeader).append(\", line=\").append(lineNo).append(\",\").append(msg).append(\"\\n\\tvalues={\");\n    if (lines != null) {\n      for (String val : lines) {\n        sb.append(\"'\").append(val).append(\"',\");\n      }\n    } else {\n      sb.append(\"NO LINES AVAILABLE\");\n    }\n    sb.append('}');\n    throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,sb.toString(), e);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/CSVLoader[CSVRequestHandler]#input_err(String,String[],int,Throwable).mjava","pathOld":"solr/src/java/org/apache/solr/handler/CSVLoader[CSVRequestHandler]#input_err(String,String[],int,Throwable).mjava","sourceNew":"  private void input_err(String msg, String[] lines, int lineNo, Throwable e) {\n    StringBuilder sb = new StringBuilder();\n    sb.append(errHeader).append(\", line=\").append(lineNo).append(\",\").append(msg).append(\"\\n\\tvalues={\");\n    if (lines != null) {\n      for (String val : lines) {\n        sb.append(\"'\").append(val).append(\"',\");\n      }\n    } else {\n      sb.append(\"NO LINES AVAILABLE\");\n    }\n    sb.append('}');\n    throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,sb.toString(), e);\n  }\n\n","sourceOld":"  private void input_err(String msg, String[] lines, int lineNo, Throwable e) {\n    StringBuilder sb = new StringBuilder();\n    sb.append(errHeader).append(\", line=\").append(lineNo).append(\",\").append(msg).append(\"\\n\\tvalues={\");\n    if (lines != null) {\n      for (String val : lines) {\n        sb.append(\"'\").append(val).append(\"',\");\n      }\n    } else {\n      sb.append(\"NO LINES AVAILABLE\");\n    }\n    sb.append('}');\n    throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,sb.toString(), e);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/CSVLoader[CSVRequestHandler]#input_err(String,String[],int,Throwable).mjava","pathOld":"solr/src/java/org/apache/solr/handler/CSVLoader[CSVRequestHandler]#input_err(String,String[],int,Throwable).mjava","sourceNew":"  private void input_err(String msg, String[] lines, int lineNo, Throwable e) {\n    StringBuilder sb = new StringBuilder();\n    sb.append(errHeader).append(\", line=\").append(lineNo).append(\",\").append(msg).append(\"\\n\\tvalues={\");\n    if (lines != null) {\n      for (String val : lines) {\n        sb.append(\"'\").append(val).append(\"',\");\n      }\n    } else {\n      sb.append(\"NO LINES AVAILABLE\");\n    }\n    sb.append('}');\n    throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,sb.toString(), e);\n  }\n\n","sourceOld":"  private void input_err(String msg, String[] lines, int lineNo, Throwable e) {\n    StringBuilder sb = new StringBuilder();\n    sb.append(errHeader).append(\", line=\").append(lineNo).append(\",\").append(msg).append(\"\\n\\tvalues={\");\n    if (lines != null) {\n      for (String val : lines) {\n        sb.append(\"'\").append(val).append(\"',\");\n      }\n    } else {\n      sb.append(\"NO LINES AVAILABLE\");\n    }\n    sb.append('}');\n    throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,sb.toString(), e);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/CSVLoader[CSVRequestHandler]#input_err(String,String[],int,Throwable).mjava","pathOld":"solr/src/java/org/apache/solr/handler/CSVLoader[CSVRequestHandler]#input_err(String,String[],int,Throwable).mjava","sourceNew":"  private void input_err(String msg, String[] lines, int lineNo, Throwable e) {\n    StringBuilder sb = new StringBuilder();\n    sb.append(errHeader).append(\", line=\").append(lineNo).append(\",\").append(msg).append(\"\\n\\tvalues={\");\n    if (lines != null) {\n      for (String val : lines) {\n        sb.append(\"'\").append(val).append(\"',\");\n      }\n    } else {\n      sb.append(\"NO LINES AVAILABLE\");\n    }\n    sb.append('}');\n    throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,sb.toString(), e);\n  }\n\n","sourceOld":"  private void input_err(String msg, String[] lines, int lineNo, Throwable e) {\n    StringBuilder sb = new StringBuilder();\n    sb.append(errHeader).append(\", line=\").append(lineNo).append(\",\").append(msg).append(\"\\n\\tvalues={\");\n    if (lines != null) {\n      for (String val : lines) {\n        sb.append(\"'\").append(val).append(\"',\");\n      }\n    } else {\n      sb.append(\"NO LINES AVAILABLE\");\n    }\n    sb.append('}');\n    throw new SolrException( SolrException.ErrorCode.BAD_REQUEST,sb.toString(), e);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"f465ad7ab770519c876711f7e3755e85cc4c0830":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["f465ad7ab770519c876711f7e3755e85cc4c0830"],"c26f00b574427b55127e869b935845554afde1fa":["f465ad7ab770519c876711f7e3755e85cc4c0830","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f465ad7ab770519c876711f7e3755e85cc4c0830"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a258fbb26824fd104ed795e5d9033d2d040049ee":["f465ad7ab770519c876711f7e3755e85cc4c0830"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f465ad7ab770519c876711f7e3755e85cc4c0830"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c26f00b574427b55127e869b935845554afde1fa"]},"commit2Childs":{"f465ad7ab770519c876711f7e3755e85cc4c0830":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","29ef99d61cda9641b6250bf9567329a6e65f901d","a258fbb26824fd104ed795e5d9033d2d040049ee","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f465ad7ab770519c876711f7e3755e85cc4c0830","29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"bde51b089eb7f86171eb3406e38a274743f9b7ac":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["29ef99d61cda9641b6250bf9567329a6e65f901d","a258fbb26824fd104ed795e5d9033d2d040049ee","bde51b089eb7f86171eb3406e38a274743f9b7ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}