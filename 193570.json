{"path":"solr/core/src/java/org/apache/solr/update/processor/ParseBooleanFieldUpdateProcessorFactory#init(NamedList).mjava","commits":[{"id":"039a98d0ba2c3095541adb3e3ecbdee7812fc4b8","date":1372293867,"type":0,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/ParseBooleanFieldUpdateProcessorFactory#init(NamedList).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void init(NamedList args) {\n    Object caseSensitiveParam = args.remove(CASE_SENSITIVE_PARAM);\n    if (null != caseSensitiveParam) {\n      if (caseSensitiveParam instanceof Boolean) {\n        caseSensitive = (Boolean)caseSensitiveParam;\n      } else {\n        caseSensitive = Boolean.valueOf(caseSensitiveParam.toString());\n      }\n    }\n\n    Collection<String> trueValuesParam = oneOrMany(args, TRUE_VALUES_PARAM);\n    if ( ! trueValuesParam.isEmpty()) {\n      trueValues.clear();\n      for (String trueVal : trueValuesParam) {\n        trueValues.add(caseSensitive ? trueVal : trueVal.toLowerCase(Locale.ROOT));\n      }\n    }\n\n    Collection<String> falseValuesParam = oneOrMany(args, FALSE_VALUES_PARAM);\n    if ( ! falseValuesParam.isEmpty()) {\n      falseValues.clear();\n      for (String val : falseValuesParam) {\n        final String falseVal = caseSensitive ? val : val.toLowerCase(Locale.ROOT);\n        if (trueValues.contains(falseVal)) {\n          throw new SolrException(ErrorCode.SERVER_ERROR,\n              \"Param '\" + FALSE_VALUES_PARAM + \"' contains a value also in param '\" + TRUE_VALUES_PARAM\n                  + \"': '\" + val + \"'\");\n        }\n        falseValues.add(falseVal);\n      }\n    }\n    super.init(args);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"37a0f60745e53927c4c876cfe5b5a58170f0646c","date":1373994005,"type":0,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/ParseBooleanFieldUpdateProcessorFactory#init(NamedList).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void init(NamedList args) {\n    Object caseSensitiveParam = args.remove(CASE_SENSITIVE_PARAM);\n    if (null != caseSensitiveParam) {\n      if (caseSensitiveParam instanceof Boolean) {\n        caseSensitive = (Boolean)caseSensitiveParam;\n      } else {\n        caseSensitive = Boolean.valueOf(caseSensitiveParam.toString());\n      }\n    }\n\n    Collection<String> trueValuesParam = oneOrMany(args, TRUE_VALUES_PARAM);\n    if ( ! trueValuesParam.isEmpty()) {\n      trueValues.clear();\n      for (String trueVal : trueValuesParam) {\n        trueValues.add(caseSensitive ? trueVal : trueVal.toLowerCase(Locale.ROOT));\n      }\n    }\n\n    Collection<String> falseValuesParam = oneOrMany(args, FALSE_VALUES_PARAM);\n    if ( ! falseValuesParam.isEmpty()) {\n      falseValues.clear();\n      for (String val : falseValuesParam) {\n        final String falseVal = caseSensitive ? val : val.toLowerCase(Locale.ROOT);\n        if (trueValues.contains(falseVal)) {\n          throw new SolrException(ErrorCode.SERVER_ERROR,\n              \"Param '\" + FALSE_VALUES_PARAM + \"' contains a value also in param '\" + TRUE_VALUES_PARAM\n                  + \"': '\" + val + \"'\");\n        }\n        falseValues.add(falseVal);\n      }\n    }\n    super.init(args);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3ae0c36347d7586e501169851eb8fe2ad2b8f0dd","date":1380757525,"type":3,"author":"Shawn Heisey","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/ParseBooleanFieldUpdateProcessorFactory#init(NamedList).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/processor/ParseBooleanFieldUpdateProcessorFactory#init(NamedList).mjava","sourceNew":"  @Override\n  public void init(NamedList args) {\n    Object caseSensitiveParam = args.remove(CASE_SENSITIVE_PARAM);\n    if (null != caseSensitiveParam) {\n      if (caseSensitiveParam instanceof Boolean) {\n        caseSensitive = (Boolean)caseSensitiveParam;\n      } else {\n        caseSensitive = Boolean.valueOf(caseSensitiveParam.toString());\n      }\n    }\n\n    Collection<String> trueValuesParam = args.removeConfigArgs(TRUE_VALUES_PARAM);\n    if ( ! trueValuesParam.isEmpty()) {\n      trueValues.clear();\n      for (String trueVal : trueValuesParam) {\n        trueValues.add(caseSensitive ? trueVal : trueVal.toLowerCase(Locale.ROOT));\n      }\n    }\n\n    Collection<String> falseValuesParam = args.removeConfigArgs(FALSE_VALUES_PARAM);\n    if ( ! falseValuesParam.isEmpty()) {\n      falseValues.clear();\n      for (String val : falseValuesParam) {\n        final String falseVal = caseSensitive ? val : val.toLowerCase(Locale.ROOT);\n        if (trueValues.contains(falseVal)) {\n          throw new SolrException(ErrorCode.SERVER_ERROR,\n              \"Param '\" + FALSE_VALUES_PARAM + \"' contains a value also in param '\" + TRUE_VALUES_PARAM\n                  + \"': '\" + val + \"'\");\n        }\n        falseValues.add(falseVal);\n      }\n    }\n    super.init(args);\n  }\n\n","sourceOld":"  @Override\n  public void init(NamedList args) {\n    Object caseSensitiveParam = args.remove(CASE_SENSITIVE_PARAM);\n    if (null != caseSensitiveParam) {\n      if (caseSensitiveParam instanceof Boolean) {\n        caseSensitive = (Boolean)caseSensitiveParam;\n      } else {\n        caseSensitive = Boolean.valueOf(caseSensitiveParam.toString());\n      }\n    }\n\n    Collection<String> trueValuesParam = oneOrMany(args, TRUE_VALUES_PARAM);\n    if ( ! trueValuesParam.isEmpty()) {\n      trueValues.clear();\n      for (String trueVal : trueValuesParam) {\n        trueValues.add(caseSensitive ? trueVal : trueVal.toLowerCase(Locale.ROOT));\n      }\n    }\n\n    Collection<String> falseValuesParam = oneOrMany(args, FALSE_VALUES_PARAM);\n    if ( ! falseValuesParam.isEmpty()) {\n      falseValues.clear();\n      for (String val : falseValuesParam) {\n        final String falseVal = caseSensitive ? val : val.toLowerCase(Locale.ROOT);\n        if (trueValues.contains(falseVal)) {\n          throw new SolrException(ErrorCode.SERVER_ERROR,\n              \"Param '\" + FALSE_VALUES_PARAM + \"' contains a value also in param '\" + TRUE_VALUES_PARAM\n                  + \"': '\" + val + \"'\");\n        }\n        falseValues.add(falseVal);\n      }\n    }\n    super.init(args);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"018a36ff4088cb91ab12cbe44f696d81d1fadd77","date":1591657414,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/processor/ParseBooleanFieldUpdateProcessorFactory#init(NamedList).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/processor/ParseBooleanFieldUpdateProcessorFactory#init(NamedList).mjava","sourceNew":"  @Override\n  public void init(@SuppressWarnings({\"rawtypes\"})NamedList args) {\n    Object caseSensitiveParam = args.remove(CASE_SENSITIVE_PARAM);\n    if (null != caseSensitiveParam) {\n      if (caseSensitiveParam instanceof Boolean) {\n        caseSensitive = (Boolean)caseSensitiveParam;\n      } else {\n        caseSensitive = Boolean.valueOf(caseSensitiveParam.toString());\n      }\n    }\n\n    @SuppressWarnings({\"unchecked\"})\n    Collection<String> trueValuesParam = args.removeConfigArgs(TRUE_VALUES_PARAM);\n    if ( ! trueValuesParam.isEmpty()) {\n      trueValues.clear();\n      for (String trueVal : trueValuesParam) {\n        trueValues.add(caseSensitive ? trueVal : trueVal.toLowerCase(Locale.ROOT));\n      }\n    }\n\n    @SuppressWarnings({\"unchecked\"})\n    Collection<String> falseValuesParam = args.removeConfigArgs(FALSE_VALUES_PARAM);\n    if ( ! falseValuesParam.isEmpty()) {\n      falseValues.clear();\n      for (String val : falseValuesParam) {\n        final String falseVal = caseSensitive ? val : val.toLowerCase(Locale.ROOT);\n        if (trueValues.contains(falseVal)) {\n          throw new SolrException(ErrorCode.SERVER_ERROR,\n              \"Param '\" + FALSE_VALUES_PARAM + \"' contains a value also in param '\" + TRUE_VALUES_PARAM\n                  + \"': '\" + val + \"'\");\n        }\n        falseValues.add(falseVal);\n      }\n    }\n    super.init(args);\n  }\n\n","sourceOld":"  @Override\n  public void init(NamedList args) {\n    Object caseSensitiveParam = args.remove(CASE_SENSITIVE_PARAM);\n    if (null != caseSensitiveParam) {\n      if (caseSensitiveParam instanceof Boolean) {\n        caseSensitive = (Boolean)caseSensitiveParam;\n      } else {\n        caseSensitive = Boolean.valueOf(caseSensitiveParam.toString());\n      }\n    }\n\n    Collection<String> trueValuesParam = args.removeConfigArgs(TRUE_VALUES_PARAM);\n    if ( ! trueValuesParam.isEmpty()) {\n      trueValues.clear();\n      for (String trueVal : trueValuesParam) {\n        trueValues.add(caseSensitive ? trueVal : trueVal.toLowerCase(Locale.ROOT));\n      }\n    }\n\n    Collection<String> falseValuesParam = args.removeConfigArgs(FALSE_VALUES_PARAM);\n    if ( ! falseValuesParam.isEmpty()) {\n      falseValues.clear();\n      for (String val : falseValuesParam) {\n        final String falseVal = caseSensitive ? val : val.toLowerCase(Locale.ROOT);\n        if (trueValues.contains(falseVal)) {\n          throw new SolrException(ErrorCode.SERVER_ERROR,\n              \"Param '\" + FALSE_VALUES_PARAM + \"' contains a value also in param '\" + TRUE_VALUES_PARAM\n                  + \"': '\" + val + \"'\");\n        }\n        falseValues.add(falseVal);\n      }\n    }\n    super.init(args);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"018a36ff4088cb91ab12cbe44f696d81d1fadd77":["3ae0c36347d7586e501169851eb8fe2ad2b8f0dd"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","039a98d0ba2c3095541adb3e3ecbdee7812fc4b8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"039a98d0ba2c3095541adb3e3ecbdee7812fc4b8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["018a36ff4088cb91ab12cbe44f696d81d1fadd77"],"3ae0c36347d7586e501169851eb8fe2ad2b8f0dd":["039a98d0ba2c3095541adb3e3ecbdee7812fc4b8"]},"commit2Childs":{"018a36ff4088cb91ab12cbe44f696d81d1fadd77":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["37a0f60745e53927c4c876cfe5b5a58170f0646c","039a98d0ba2c3095541adb3e3ecbdee7812fc4b8"],"039a98d0ba2c3095541adb3e3ecbdee7812fc4b8":["37a0f60745e53927c4c876cfe5b5a58170f0646c","3ae0c36347d7586e501169851eb8fe2ad2b8f0dd"],"3ae0c36347d7586e501169851eb8fe2ad2b8f0dd":["018a36ff4088cb91ab12cbe44f696d81d1fadd77"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["37a0f60745e53927c4c876cfe5b5a58170f0646c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}