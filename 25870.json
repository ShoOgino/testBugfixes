{"path":"lucene/test-framework/src/java/org/apache/lucene/search/CheckHits#checkExplanations(Query,String,IndexSearcher).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/search/CheckHits#checkExplanations(Query,String,IndexSearcher).mjava","pathOld":"lucene/src/test-framework/java/org/apache/lucene/search/CheckHits#checkExplanations(Query,String,IndexSearcher).mjava","sourceNew":"  /**\n   * Asserts that the explanation value for every document matching a\n   * query corresponds with the true score. \n   *\n   * @see ExplanationAsserter\n   * @see #checkExplanations(Query, String, IndexSearcher, boolean) for a\n   * \"deep\" testing of the explanation details.\n   *   \n   * @param query the query to test\n   * @param searcher the searcher to test the query against\n   * @param defaultFieldName used for displaing the query in assertion messages\n   */\n  public static void checkExplanations(Query query,\n                                       String defaultFieldName,\n                                       IndexSearcher searcher) throws IOException {\n    checkExplanations(query, defaultFieldName, searcher, false);\n  }\n\n","sourceOld":"  /**\n   * Asserts that the explanation value for every document matching a\n   * query corresponds with the true score. \n   *\n   * @see ExplanationAsserter\n   * @see #checkExplanations(Query, String, IndexSearcher, boolean) for a\n   * \"deep\" testing of the explanation details.\n   *   \n   * @param query the query to test\n   * @param searcher the searcher to test the query against\n   * @param defaultFieldName used for displaing the query in assertion messages\n   */\n  public static void checkExplanations(Query query,\n                                       String defaultFieldName,\n                                       IndexSearcher searcher) throws IOException {\n    checkExplanations(query, defaultFieldName, searcher, false);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}