{"path":"lucene/facet/src/test/org/apache/lucene/facet/TestTaxonomyFacetAssociations#beforeClass().mjava","commits":[{"id":"21d36d0db865f7b84026b447bec653469a6e66df","date":1385495602,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/TestTaxonomyFacetAssociations#beforeClass().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/simple/TestTaxonomyFacetAssociations#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    dir = newDirectory();\n    taxoDir = newDirectory();\n    // preparations - index, taxonomy, content\n    \n    TaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir);\n\n    // Cannot mix ints & floats in the same indexed field:\n    config = new FacetsConfig(taxoWriter);\n    config.setIndexFieldName(\"int\", \"$facets.int\");\n    config.setMultiValued(\"int\", true);\n    config.setIndexFieldName(\"float\", \"$facets.float\");\n    config.setMultiValued(\"float\", true);\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    // index documents, 50% have only 'b' and all have 'a'\n    for (int i = 0; i < 110; i++) {\n      Document doc = new Document();\n      // every 11th document is added empty, this used to cause the association\n      // aggregators to go into an infinite loop\n      if (i % 11 != 0) {\n        doc.add(new IntAssociationFacetField(2, \"int\", \"a\"));\n        doc.add(new FloatAssociationFacetField(0.5f, \"float\", \"a\"));\n        if (i % 2 == 0) { // 50\n          doc.add(new IntAssociationFacetField(3, \"int\", \"b\"));\n          doc.add(new FloatAssociationFacetField(0.2f, \"float\", \"b\"));\n        }\n      }\n      writer.addDocument(config.build(doc));\n    }\n    \n    taxoWriter.close();\n    reader = writer.getReader();\n    writer.close();\n    taxoReader = new DirectoryTaxonomyReader(taxoDir);\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    dir = newDirectory();\n    taxoDir = newDirectory();\n    // preparations - index, taxonomy, content\n    \n    TaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir);\n\n    // Cannot mix ints & floats in the same indexed field:\n    config = new FacetsConfig(taxoWriter);\n    config.setIndexFieldName(\"int\", \"$facets.int\");\n    config.setMultiValued(\"int\", true);\n    config.setIndexFieldName(\"float\", \"$facets.float\");\n    config.setMultiValued(\"float\", true);\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    // index documents, 50% have only 'b' and all have 'a'\n    for (int i = 0; i < 110; i++) {\n      Document doc = new Document();\n      // every 11th document is added empty, this used to cause the association\n      // aggregators to go into an infinite loop\n      if (i % 11 != 0) {\n        doc.add(new IntAssociationFacetField(2, \"int\", \"a\"));\n        doc.add(new FloatAssociationFacetField(0.5f, \"float\", \"a\"));\n        if (i % 2 == 0) { // 50\n          doc.add(new IntAssociationFacetField(3, \"int\", \"b\"));\n          doc.add(new FloatAssociationFacetField(0.2f, \"float\", \"b\"));\n        }\n      }\n      writer.addDocument(config.build(doc));\n    }\n    \n    taxoWriter.close();\n    reader = writer.getReader();\n    writer.close();\n    taxoReader = new DirectoryTaxonomyReader(taxoDir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fd83550e4b0bdd36e7d9dca9273264100782440b","date":1385761753,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/TestTaxonomyFacetAssociations#beforeClass().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/TestTaxonomyFacetAssociations#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    dir = newDirectory();\n    taxoDir = newDirectory();\n    // preparations - index, taxonomy, content\n    \n    TaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir);\n\n    // Cannot mix ints & floats in the same indexed field:\n    config = new FacetsConfig();\n    config.setIndexFieldName(\"int\", \"$facets.int\");\n    config.setMultiValued(\"int\", true);\n    config.setIndexFieldName(\"float\", \"$facets.float\");\n    config.setMultiValued(\"float\", true);\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    // index documents, 50% have only 'b' and all have 'a'\n    for (int i = 0; i < 110; i++) {\n      Document doc = new Document();\n      // every 11th document is added empty, this used to cause the association\n      // aggregators to go into an infinite loop\n      if (i % 11 != 0) {\n        doc.add(new IntAssociationFacetField(2, \"int\", \"a\"));\n        doc.add(new FloatAssociationFacetField(0.5f, \"float\", \"a\"));\n        if (i % 2 == 0) { // 50\n          doc.add(new IntAssociationFacetField(3, \"int\", \"b\"));\n          doc.add(new FloatAssociationFacetField(0.2f, \"float\", \"b\"));\n        }\n      }\n      writer.addDocument(config.build(taxoWriter, doc));\n    }\n    \n    taxoWriter.close();\n    reader = writer.getReader();\n    writer.close();\n    taxoReader = new DirectoryTaxonomyReader(taxoDir);\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    dir = newDirectory();\n    taxoDir = newDirectory();\n    // preparations - index, taxonomy, content\n    \n    TaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir);\n\n    // Cannot mix ints & floats in the same indexed field:\n    config = new FacetsConfig(taxoWriter);\n    config.setIndexFieldName(\"int\", \"$facets.int\");\n    config.setMultiValued(\"int\", true);\n    config.setIndexFieldName(\"float\", \"$facets.float\");\n    config.setMultiValued(\"float\", true);\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    // index documents, 50% have only 'b' and all have 'a'\n    for (int i = 0; i < 110; i++) {\n      Document doc = new Document();\n      // every 11th document is added empty, this used to cause the association\n      // aggregators to go into an infinite loop\n      if (i % 11 != 0) {\n        doc.add(new IntAssociationFacetField(2, \"int\", \"a\"));\n        doc.add(new FloatAssociationFacetField(0.5f, \"float\", \"a\"));\n        if (i % 2 == 0) { // 50\n          doc.add(new IntAssociationFacetField(3, \"int\", \"b\"));\n          doc.add(new FloatAssociationFacetField(0.2f, \"float\", \"b\"));\n        }\n      }\n      writer.addDocument(config.build(doc));\n    }\n    \n    taxoWriter.close();\n    reader = writer.getReader();\n    writer.close();\n    taxoReader = new DirectoryTaxonomyReader(taxoDir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4edc984f0f4ac77c37e48ace2932f780f888453c","date":1388475218,"type":5,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/taxonomy/TestTaxonomyFacetAssociations#beforeClass().mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/TestTaxonomyFacetAssociations#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    dir = newDirectory();\n    taxoDir = newDirectory();\n    // preparations - index, taxonomy, content\n    \n    TaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir);\n\n    // Cannot mix ints & floats in the same indexed field:\n    config = new FacetsConfig();\n    config.setIndexFieldName(\"int\", \"$facets.int\");\n    config.setMultiValued(\"int\", true);\n    config.setIndexFieldName(\"float\", \"$facets.float\");\n    config.setMultiValued(\"float\", true);\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    // index documents, 50% have only 'b' and all have 'a'\n    for (int i = 0; i < 110; i++) {\n      Document doc = new Document();\n      // every 11th document is added empty, this used to cause the association\n      // aggregators to go into an infinite loop\n      if (i % 11 != 0) {\n        doc.add(new IntAssociationFacetField(2, \"int\", \"a\"));\n        doc.add(new FloatAssociationFacetField(0.5f, \"float\", \"a\"));\n        if (i % 2 == 0) { // 50\n          doc.add(new IntAssociationFacetField(3, \"int\", \"b\"));\n          doc.add(new FloatAssociationFacetField(0.2f, \"float\", \"b\"));\n        }\n      }\n      writer.addDocument(config.build(taxoWriter, doc));\n    }\n    \n    taxoWriter.close();\n    reader = writer.getReader();\n    writer.close();\n    taxoReader = new DirectoryTaxonomyReader(taxoDir);\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    dir = newDirectory();\n    taxoDir = newDirectory();\n    // preparations - index, taxonomy, content\n    \n    TaxonomyWriter taxoWriter = new DirectoryTaxonomyWriter(taxoDir);\n\n    // Cannot mix ints & floats in the same indexed field:\n    config = new FacetsConfig();\n    config.setIndexFieldName(\"int\", \"$facets.int\");\n    config.setMultiValued(\"int\", true);\n    config.setIndexFieldName(\"float\", \"$facets.float\");\n    config.setMultiValued(\"float\", true);\n\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    // index documents, 50% have only 'b' and all have 'a'\n    for (int i = 0; i < 110; i++) {\n      Document doc = new Document();\n      // every 11th document is added empty, this used to cause the association\n      // aggregators to go into an infinite loop\n      if (i % 11 != 0) {\n        doc.add(new IntAssociationFacetField(2, \"int\", \"a\"));\n        doc.add(new FloatAssociationFacetField(0.5f, \"float\", \"a\"));\n        if (i % 2 == 0) { // 50\n          doc.add(new IntAssociationFacetField(3, \"int\", \"b\"));\n          doc.add(new FloatAssociationFacetField(0.2f, \"float\", \"b\"));\n        }\n      }\n      writer.addDocument(config.build(taxoWriter, doc));\n    }\n    \n    taxoWriter.close();\n    reader = writer.getReader();\n    writer.close();\n    taxoReader = new DirectoryTaxonomyReader(taxoDir);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4edc984f0f4ac77c37e48ace2932f780f888453c":["fd83550e4b0bdd36e7d9dca9273264100782440b"],"21d36d0db865f7b84026b447bec653469a6e66df":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"fd83550e4b0bdd36e7d9dca9273264100782440b":["21d36d0db865f7b84026b447bec653469a6e66df"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["21d36d0db865f7b84026b447bec653469a6e66df","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4edc984f0f4ac77c37e48ace2932f780f888453c":[],"21d36d0db865f7b84026b447bec653469a6e66df":["fd83550e4b0bdd36e7d9dca9273264100782440b"],"fd83550e4b0bdd36e7d9dca9273264100782440b":["4edc984f0f4ac77c37e48ace2932f780f888453c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4edc984f0f4ac77c37e48ace2932f780f888453c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}