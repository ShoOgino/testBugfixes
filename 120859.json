{"path":"solr/core/src/java/org/apache/solr/search/JoinQuery[JoinQParserPlugin]#equals(Object).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/JoinQuery[JoinQParserPlugin]#equals(Object).mjava","pathOld":"solr/src/java/org/apache/solr/search/JoinQuery[JoinQParserPlugin]#equals(Object).mjava","sourceNew":"  @Override\n  public boolean equals(Object o) {\n    if (getClass() != o.getClass()) return false;\n    JoinQuery other = (JoinQuery)o;\n    return this.fromField.equals(other.fromField)\n           && this.toField.equals(other.toField)\n           && this.getBoost() == other.getBoost()\n           && this.q.equals(other.q)\n           && (this.fromIndex == other.fromIndex || this.fromIndex != null && this.fromIndex.equals(other.fromIndex));\n  }\n\n","sourceOld":"  @Override\n  public boolean equals(Object o) {\n    if (getClass() != o.getClass()) return false;\n    JoinQuery other = (JoinQuery)o;\n    return this.fromField.equals(other.fromField)\n           && this.toField.equals(other.toField)\n           && this.getBoost() == other.getBoost()\n           && this.q.equals(other.q)\n           && (this.fromIndex == other.fromIndex || this.fromIndex != null && this.fromIndex.equals(other.fromIndex));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/JoinQuery[JoinQParserPlugin]#equals(Object).mjava","pathOld":"solr/src/java/org/apache/solr/search/JoinQuery[JoinQParserPlugin]#equals(Object).mjava","sourceNew":"  @Override\n  public boolean equals(Object o) {\n    if (getClass() != o.getClass()) return false;\n    JoinQuery other = (JoinQuery)o;\n    return this.fromField.equals(other.fromField)\n           && this.toField.equals(other.toField)\n           && this.getBoost() == other.getBoost()\n           && this.q.equals(other.q)\n           && (this.fromIndex == other.fromIndex || this.fromIndex != null && this.fromIndex.equals(other.fromIndex));\n  }\n\n","sourceOld":"  @Override\n  public boolean equals(Object o) {\n    if (getClass() != o.getClass()) return false;\n    JoinQuery other = (JoinQuery)o;\n    return this.fromField.equals(other.fromField)\n           && this.toField.equals(other.toField)\n           && this.getBoost() == other.getBoost()\n           && this.q.equals(other.q)\n           && (this.fromIndex == other.fromIndex || this.fromIndex != null && this.fromIndex.equals(other.fromIndex));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/JoinQuery[JoinQParserPlugin]#equals(Object).mjava","pathOld":"solr/src/java/org/apache/solr/search/JoinQuery[JoinQParserPlugin]#equals(Object).mjava","sourceNew":"  @Override\n  public boolean equals(Object o) {\n    if (getClass() != o.getClass()) return false;\n    JoinQuery other = (JoinQuery)o;\n    return this.fromField.equals(other.fromField)\n           && this.toField.equals(other.toField)\n           && this.getBoost() == other.getBoost()\n           && this.q.equals(other.q)\n           && (this.fromIndex == other.fromIndex || this.fromIndex != null && this.fromIndex.equals(other.fromIndex));\n  }\n\n","sourceOld":"  @Override\n  public boolean equals(Object o) {\n    if (getClass() != o.getClass()) return false;\n    JoinQuery other = (JoinQuery)o;\n    return this.fromField.equals(other.fromField)\n           && this.toField.equals(other.toField)\n           && this.getBoost() == other.getBoost()\n           && this.q.equals(other.q)\n           && (this.fromIndex == other.fromIndex || this.fromIndex != null && this.fromIndex.equals(other.fromIndex));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8563a28e2d7edf4dd73a4148584ac67f2e84cf7a","date":1337271838,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/JoinQuery[JoinQParserPlugin]#equals(Object).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/JoinQuery[JoinQParserPlugin]#equals(Object).mjava","sourceNew":"  @Override\n  public boolean equals(Object o) {\n    if (getClass() != o.getClass()) return false;\n    JoinQuery other = (JoinQuery)o;\n    return this.fromField.equals(other.fromField)\n           && this.toField.equals(other.toField)\n           && this.getBoost() == other.getBoost()\n           && this.q.equals(other.q)\n           && (this.fromIndex == other.fromIndex || this.fromIndex != null && this.fromIndex.equals(other.fromIndex))\n           && this.fromCoreOpenTime == other.fromCoreOpenTime\n        ;\n  }\n\n","sourceOld":"  @Override\n  public boolean equals(Object o) {\n    if (getClass() != o.getClass()) return false;\n    JoinQuery other = (JoinQuery)o;\n    return this.fromField.equals(other.fromField)\n           && this.toField.equals(other.toField)\n           && this.getBoost() == other.getBoost()\n           && this.q.equals(other.q)\n           && (this.fromIndex == other.fromIndex || this.fromIndex != null && this.fromIndex.equals(other.fromIndex));\n  }\n\n","bugFix":["f8f944ac3fe3f9d40d825177507fb381d2b106b3"],"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ef0d8a69209261514c5739c770bba706c2308450","date":1337607597,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/JoinQuery[JoinQParserPlugin]#equals(Object).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/JoinQuery[JoinQParserPlugin]#equals(Object).mjava","sourceNew":"  @Override\n  public boolean equals(Object o) {\n    if (getClass() != o.getClass()) return false;\n    JoinQuery other = (JoinQuery)o;\n    return this.fromField.equals(other.fromField)\n           && this.toField.equals(other.toField)\n           && this.getBoost() == other.getBoost()\n           && this.q.equals(other.q)\n           && (this.fromIndex == other.fromIndex || this.fromIndex != null && this.fromIndex.equals(other.fromIndex))\n           && this.fromCoreOpenTime == other.fromCoreOpenTime\n        ;\n  }\n\n","sourceOld":"  @Override\n  public boolean equals(Object o) {\n    if (getClass() != o.getClass()) return false;\n    JoinQuery other = (JoinQuery)o;\n    return this.fromField.equals(other.fromField)\n           && this.toField.equals(other.toField)\n           && this.getBoost() == other.getBoost()\n           && this.q.equals(other.q)\n           && (this.fromIndex == other.fromIndex || this.fromIndex != null && this.fromIndex.equals(other.fromIndex));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"69227e655c7a72315c68e596f0a899f339b1ec2b","date":1340137626,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/JoinQuery[JoinQParserPlugin]#equals(Object).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/JoinQuery[JoinQParserPlugin]#equals(Object).mjava","sourceNew":"  @Override\n  public boolean equals(Object o) {\n    if (!super.equals(o)) return false;\n    JoinQuery other = (JoinQuery)o;\n    return this.fromField.equals(other.fromField)\n           && this.toField.equals(other.toField)\n           && this.getBoost() == other.getBoost()\n           && this.q.equals(other.q)\n           && (this.fromIndex == other.fromIndex || this.fromIndex != null && this.fromIndex.equals(other.fromIndex))\n           && this.fromCoreOpenTime == other.fromCoreOpenTime\n        ;\n  }\n\n","sourceOld":"  @Override\n  public boolean equals(Object o) {\n    if (getClass() != o.getClass()) return false;\n    JoinQuery other = (JoinQuery)o;\n    return this.fromField.equals(other.fromField)\n           && this.toField.equals(other.toField)\n           && this.getBoost() == other.getBoost()\n           && this.q.equals(other.q)\n           && (this.fromIndex == other.fromIndex || this.fromIndex != null && this.fromIndex.equals(other.fromIndex))\n           && this.fromCoreOpenTime == other.fromCoreOpenTime\n        ;\n  }\n\n","bugFix":["f8f944ac3fe3f9d40d825177507fb381d2b106b3"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2dfdf766e55e943d942055d7de53c7ad6bc45283","date":1441632886,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/JoinQuery[JoinQParserPlugin]#equals(Object).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/JoinQuery[JoinQParserPlugin]#equals(Object).mjava","sourceNew":"  @Override\n  public boolean equals(Object o) {\n    if (!super.equals(o)) return false;\n    JoinQuery other = (JoinQuery)o;\n    return this.fromField.equals(other.fromField)\n           && this.toField.equals(other.toField)\n           && this.q.equals(other.q)\n           && (this.fromIndex == other.fromIndex || this.fromIndex != null && this.fromIndex.equals(other.fromIndex))\n           && this.fromCoreOpenTime == other.fromCoreOpenTime\n        ;\n  }\n\n","sourceOld":"  @Override\n  public boolean equals(Object o) {\n    if (!super.equals(o)) return false;\n    JoinQuery other = (JoinQuery)o;\n    return this.fromField.equals(other.fromField)\n           && this.toField.equals(other.toField)\n           && this.getBoost() == other.getBoost()\n           && this.q.equals(other.q)\n           && (this.fromIndex == other.fromIndex || this.fromIndex != null && this.fromIndex.equals(other.fromIndex))\n           && this.fromCoreOpenTime == other.fromCoreOpenTime\n        ;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0e7bc21595222ae4f75509300fbb7726691f387f","date":1464078795,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/JoinQuery[JoinQParserPlugin]#equals(Object).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/JoinQuery[JoinQParserPlugin]#equals(Object).mjava","sourceNew":"  @Override\n  public boolean equals(Object other) {\n    return sameClassAs(other) &&\n           equalsTo(getClass().cast(other));\n  }\n\n","sourceOld":"  @Override\n  public boolean equals(Object o) {\n    if (!super.equals(o)) return false;\n    JoinQuery other = (JoinQuery)o;\n    return this.fromField.equals(other.fromField)\n           && this.toField.equals(other.toField)\n           && this.q.equals(other.q)\n           && (this.fromIndex == other.fromIndex || this.fromIndex != null && this.fromIndex.equals(other.fromIndex))\n           && this.fromCoreOpenTime == other.fromCoreOpenTime\n        ;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/JoinQuery[JoinQParserPlugin]#equals(Object).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/JoinQuery[JoinQParserPlugin]#equals(Object).mjava","sourceNew":"  @Override\n  public boolean equals(Object other) {\n    return sameClassAs(other) &&\n           equalsTo(getClass().cast(other));\n  }\n\n","sourceOld":"  @Override\n  public boolean equals(Object o) {\n    if (!super.equals(o)) return false;\n    JoinQuery other = (JoinQuery)o;\n    return this.fromField.equals(other.fromField)\n           && this.toField.equals(other.toField)\n           && this.q.equals(other.q)\n           && (this.fromIndex == other.fromIndex || this.fromIndex != null && this.fromIndex.equals(other.fromIndex))\n           && this.fromCoreOpenTime == other.fromCoreOpenTime\n        ;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1e1491db4de13536b70146fc5a8f03101f0f84de","date":1593014806,"type":5,"author":"Atri Sharma","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/JoinQuery#equals(Object).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/JoinQuery[JoinQParserPlugin]#equals(Object).mjava","sourceNew":"  @Override\n  public boolean equals(Object other) {\n    return sameClassAs(other) &&\n        equalsTo(getClass().cast(other));\n  }\n\n","sourceOld":"  @Override\n  public boolean equals(Object other) {\n    return sameClassAs(other) &&\n           equalsTo(getClass().cast(other));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"69227e655c7a72315c68e596f0a899f339b1ec2b":["8563a28e2d7edf4dd73a4148584ac67f2e84cf7a"],"1e1491db4de13536b70146fc5a8f03101f0f84de":["0e7bc21595222ae4f75509300fbb7726691f387f"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0e7bc21595222ae4f75509300fbb7726691f387f":["2dfdf766e55e943d942055d7de53c7ad6bc45283"],"2dfdf766e55e943d942055d7de53c7ad6bc45283":["69227e655c7a72315c68e596f0a899f339b1ec2b"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"8563a28e2d7edf4dd73a4148584ac67f2e84cf7a":["c26f00b574427b55127e869b935845554afde1fa"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["2dfdf766e55e943d942055d7de53c7ad6bc45283","0e7bc21595222ae4f75509300fbb7726691f387f"],"ef0d8a69209261514c5739c770bba706c2308450":["c26f00b574427b55127e869b935845554afde1fa","8563a28e2d7edf4dd73a4148584ac67f2e84cf7a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1e1491db4de13536b70146fc5a8f03101f0f84de"]},"commit2Childs":{"69227e655c7a72315c68e596f0a899f339b1ec2b":["2dfdf766e55e943d942055d7de53c7ad6bc45283"],"1e1491db4de13536b70146fc5a8f03101f0f84de":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["8563a28e2d7edf4dd73a4148584ac67f2e84cf7a","ef0d8a69209261514c5739c770bba706c2308450"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"0e7bc21595222ae4f75509300fbb7726691f387f":["1e1491db4de13536b70146fc5a8f03101f0f84de","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"2dfdf766e55e943d942055d7de53c7ad6bc45283":["0e7bc21595222ae4f75509300fbb7726691f387f","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"8563a28e2d7edf4dd73a4148584ac67f2e84cf7a":["69227e655c7a72315c68e596f0a899f339b1ec2b","ef0d8a69209261514c5739c770bba706c2308450"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"ef0d8a69209261514c5739c770bba706c2308450":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","ef0d8a69209261514c5739c770bba706c2308450","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}