{"path":"lucene/core/src/test/org/apache/lucene/analysis/TestMockAnalyzer#testTooLongToken().mjava","commits":[{"id":"089745617a0f9c49f3719652025f61c07e5ce4ae","date":1381543020,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/analysis/TestMockAnalyzer#testTooLongToken().mjava","pathOld":"/dev/null","sourceNew":"  /** Test MockTokenizer encountering a too long token */\n  public void testTooLongToken() throws Exception {\n    Analyzer whitespace = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName, Reader reader) {\n        Tokenizer t = new MockTokenizer(reader, MockTokenizer.WHITESPACE, false, 5);\n        return new TokenStreamComponents(t, t);\n      }\n    };\n    \n    assertTokenStreamContents(whitespace.tokenStream(\"bogus\", \"test 123 toolong ok \"),\n        new String[] { \"test\", \"123\", \"toolo\", \"ng\", \"ok\" },\n        new int[] { 0, 5, 9, 14, 17 },\n        new int[] { 4, 8, 14, 16, 19 },\n        new Integer(20));\n    \n    assertTokenStreamContents(whitespace.tokenStream(\"bogus\", \"test 123 toolo\"),\n        new String[] { \"test\", \"123\", \"toolo\" },\n        new int[] { 0, 5, 9 },\n        new int[] { 4, 8, 14 },\n        new Integer(14));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae889fd5c8a69f6b5d130d3c895bfa5b04d07338","date":1389274049,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/analysis/TestMockAnalyzer#testTooLongToken().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/analysis/TestMockAnalyzer#testTooLongToken().mjava","sourceNew":"  /** Test MockTokenizer encountering a too long token */\n  public void testTooLongToken() throws Exception {\n    Analyzer whitespace = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName) {\n        Tokenizer t = new MockTokenizer(MockTokenizer.WHITESPACE, false, 5);\n        return new TokenStreamComponents(t, t);\n      }\n    };\n    \n    assertTokenStreamContents(whitespace.tokenStream(\"bogus\", \"test 123 toolong ok \"),\n        new String[] { \"test\", \"123\", \"toolo\", \"ng\", \"ok\" },\n        new int[] { 0, 5, 9, 14, 17 },\n        new int[] { 4, 8, 14, 16, 19 },\n        new Integer(20));\n    \n    assertTokenStreamContents(whitespace.tokenStream(\"bogus\", \"test 123 toolo\"),\n        new String[] { \"test\", \"123\", \"toolo\" },\n        new int[] { 0, 5, 9 },\n        new int[] { 4, 8, 14 },\n        new Integer(14));\n  }\n\n","sourceOld":"  /** Test MockTokenizer encountering a too long token */\n  public void testTooLongToken() throws Exception {\n    Analyzer whitespace = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName, Reader reader) {\n        Tokenizer t = new MockTokenizer(reader, MockTokenizer.WHITESPACE, false, 5);\n        return new TokenStreamComponents(t, t);\n      }\n    };\n    \n    assertTokenStreamContents(whitespace.tokenStream(\"bogus\", \"test 123 toolong ok \"),\n        new String[] { \"test\", \"123\", \"toolo\", \"ng\", \"ok\" },\n        new int[] { 0, 5, 9, 14, 17 },\n        new int[] { 4, 8, 14, 16, 19 },\n        new Integer(20));\n    \n    assertTokenStreamContents(whitespace.tokenStream(\"bogus\", \"test 123 toolo\"),\n        new String[] { \"test\", \"123\", \"toolo\" },\n        new int[] { 0, 5, 9 },\n        new int[] { 4, 8, 14 },\n        new Integer(14));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b52491e71f0d5d0f0160d6ed0d39e0dd661be68a","date":1429550638,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/test/org/apache/lucene/analysis/TestMockAnalyzer#testTooLongToken().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/analysis/TestMockAnalyzer#testTooLongToken().mjava","sourceNew":"  /** Test MockTokenizer encountering a too long token */\n  public void testTooLongToken() throws Exception {\n    Analyzer whitespace = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName) {\n        Tokenizer t = new MockTokenizer(MockTokenizer.WHITESPACE, false, 5);\n        return new TokenStreamComponents(t, t);\n      }\n    };\n    \n    assertTokenStreamContents(whitespace.tokenStream(\"bogus\", \"test 123 toolong ok \"),\n        new String[] { \"test\", \"123\", \"toolo\", \"ng\", \"ok\" },\n        new int[] { 0, 5, 9, 14, 17 },\n        new int[] { 4, 8, 14, 16, 19 },\n        new Integer(20));\n    \n    assertTokenStreamContents(whitespace.tokenStream(\"bogus\", \"test 123 toolo\"),\n        new String[] { \"test\", \"123\", \"toolo\" },\n        new int[] { 0, 5, 9 },\n        new int[] { 4, 8, 14 },\n        new Integer(14));\n  }\n\n","sourceOld":"  /** Test MockTokenizer encountering a too long token */\n  public void testTooLongToken() throws Exception {\n    Analyzer whitespace = new Analyzer() {\n      @Override\n      protected TokenStreamComponents createComponents(String fieldName) {\n        Tokenizer t = new MockTokenizer(MockTokenizer.WHITESPACE, false, 5);\n        return new TokenStreamComponents(t, t);\n      }\n    };\n    \n    assertTokenStreamContents(whitespace.tokenStream(\"bogus\", \"test 123 toolong ok \"),\n        new String[] { \"test\", \"123\", \"toolo\", \"ng\", \"ok\" },\n        new int[] { 0, 5, 9, 14, 17 },\n        new int[] { 4, 8, 14, 16, 19 },\n        new Integer(20));\n    \n    assertTokenStreamContents(whitespace.tokenStream(\"bogus\", \"test 123 toolo\"),\n        new String[] { \"test\", \"123\", \"toolo\" },\n        new int[] { 0, 5, 9 },\n        new int[] { 4, 8, 14 },\n        new Integer(14));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ae889fd5c8a69f6b5d130d3c895bfa5b04d07338":["089745617a0f9c49f3719652025f61c07e5ce4ae"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b52491e71f0d5d0f0160d6ed0d39e0dd661be68a":["ae889fd5c8a69f6b5d130d3c895bfa5b04d07338"],"089745617a0f9c49f3719652025f61c07e5ce4ae":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b52491e71f0d5d0f0160d6ed0d39e0dd661be68a"]},"commit2Childs":{"ae889fd5c8a69f6b5d130d3c895bfa5b04d07338":["b52491e71f0d5d0f0160d6ed0d39e0dd661be68a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["089745617a0f9c49f3719652025f61c07e5ce4ae"],"b52491e71f0d5d0f0160d6ed0d39e0dd661be68a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"089745617a0f9c49f3719652025f61c07e5ce4ae":["ae889fd5c8a69f6b5d130d3c895bfa5b04d07338"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}