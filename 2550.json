{"path":"lucene/src/java/org/apache/lucene/codecs/lucene40/Lucene40SegmentInfosWriter#writeInfos(Directory,String,String,SegmentInfos,IOContext).mjava","commits":[{"id":"a0ae5e3ed1232483b7b8a014f175a5fe43595982","date":1324062192,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/codecs/lucene40/Lucene40SegmentInfosWriter#writeInfos(Directory,String,String,SegmentInfos,IOContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/lucene40/Lucene40SegmentInfosWriter#writeInfos(Directory,String,String,SegmentInfos,IOContext).mjava","sourceNew":"  @Override\n  public IndexOutput writeInfos(Directory dir, String segmentFileName, String codecID, SegmentInfos infos, IOContext context)\n          throws IOException {\n    IndexOutput out = createOutput(dir, segmentFileName, new IOContext(new FlushInfo(infos.size(), infos.totalDocCount())));\n    boolean success = false;\n    try {\n      out.writeInt(SegmentInfos.FORMAT_CURRENT); // write FORMAT\n      out.writeString(codecID); // write codecID\n      out.writeLong(infos.version);\n      out.writeInt(infos.counter); // write counter\n      out.writeInt(infos.size()); // write infos\n      for (SegmentInfo si : infos) {\n        writeInfo(out, si);\n      }\n      out.writeStringStringMap(infos.getUserData());\n      success = true;\n      return out;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(out);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public IndexOutput writeInfos(Directory dir, String segmentFileName, String codecID, SegmentInfos infos, IOContext context)\n          throws IOException {\n    IndexOutput out = createOutput(dir, segmentFileName, new IOContext(new FlushInfo(infos.size(), infos.totalDocCount())));\n    boolean success = false;\n    try {\n      out.writeInt(SegmentInfos.FORMAT_CURRENT); // write FORMAT\n      out.writeString(codecID); // write codecID\n      out.writeLong(infos.version);\n      out.writeInt(infos.counter); // write counter\n      out.writeInt(infos.size()); // write infos\n      for (SegmentInfo si : infos) {\n        writeInfo(out, si);\n      }\n      out.writeStringStringMap(infos.getUserData());\n      success = true;\n      return out;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(out);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7e0127a0bf2a1895ba6109cbbd451359b9c0653d","date":1326981970,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/codecs/lucene40/Lucene40SegmentInfosWriter#writeInfos(Directory,String,String,SegmentInfos,IOContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/codecs/lucene40/Lucene40SegmentInfosWriter#writeInfos(Directory,String,String,SegmentInfos,IOContext).mjava","sourceNew":"  @Override\n  public IndexOutput writeInfos(Directory dir, String segmentFileName, String codecID, SegmentInfos infos, IOContext context)\n          throws IOException {\n    IndexOutput out = createOutput(dir, segmentFileName, new IOContext(new FlushInfo(infos.size(), infos.totalDocCount())));\n    boolean success = false;\n    try {\n      /*\n       * TODO its not ideal that we write the format and the codecID inside the\n       * codec private classes but we read it in SegmentInfos.\n       */\n      out.writeInt(SegmentInfos.FORMAT_CURRENT); // write FORMAT\n      out.writeString(codecID); // write codecID\n      out.writeLong(infos.version);\n      out.writeInt(infos.counter); // write counter\n      out.writeInt(infos.size()); // write infos\n      for (SegmentInfo si : infos) {\n        writeInfo(out, si);\n      }\n      out.writeStringStringMap(infos.getUserData());\n      success = true;\n      return out;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(out);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public IndexOutput writeInfos(Directory dir, String segmentFileName, String codecID, SegmentInfos infos, IOContext context)\n          throws IOException {\n    IndexOutput out = createOutput(dir, segmentFileName, new IOContext(new FlushInfo(infos.size(), infos.totalDocCount())));\n    boolean success = false;\n    try {\n      out.writeInt(SegmentInfos.FORMAT_CURRENT); // write FORMAT\n      out.writeString(codecID); // write codecID\n      out.writeLong(infos.version);\n      out.writeInt(infos.counter); // write counter\n      out.writeInt(infos.size()); // write infos\n      for (SegmentInfo si : infos) {\n        writeInfo(out, si);\n      }\n      out.writeStringStringMap(infos.getUserData());\n      success = true;\n      return out;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(out);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/lucene40/Lucene40SegmentInfosWriter#writeInfos(Directory,String,String,SegmentInfos,IOContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/codecs/lucene40/Lucene40SegmentInfosWriter#writeInfos(Directory,String,String,SegmentInfos,IOContext).mjava","sourceNew":"  @Override\n  public IndexOutput writeInfos(Directory dir, String segmentFileName, String codecID, SegmentInfos infos, IOContext context)\n          throws IOException {\n    IndexOutput out = createOutput(dir, segmentFileName, new IOContext(new FlushInfo(infos.size(), infos.totalDocCount())));\n    boolean success = false;\n    try {\n      /*\n       * TODO its not ideal that we write the format and the codecID inside the\n       * codec private classes but we read it in SegmentInfos.\n       */\n      out.writeInt(SegmentInfos.FORMAT_CURRENT); // write FORMAT\n      out.writeString(codecID); // write codecID\n      out.writeLong(infos.version);\n      out.writeInt(infos.counter); // write counter\n      out.writeInt(infos.size()); // write infos\n      for (SegmentInfo si : infos) {\n        writeInfo(out, si);\n      }\n      out.writeStringStringMap(infos.getUserData());\n      success = true;\n      return out;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(out);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public IndexOutput writeInfos(Directory dir, String segmentFileName, String codecID, SegmentInfos infos, IOContext context)\n          throws IOException {\n    IndexOutput out = createOutput(dir, segmentFileName, new IOContext(new FlushInfo(infos.size(), infos.totalDocCount())));\n    boolean success = false;\n    try {\n      /*\n       * TODO its not ideal that we write the format and the codecID inside the\n       * codec private classes but we read it in SegmentInfos.\n       */\n      out.writeInt(SegmentInfos.FORMAT_CURRENT); // write FORMAT\n      out.writeString(codecID); // write codecID\n      out.writeLong(infos.version);\n      out.writeInt(infos.counter); // write counter\n      out.writeInt(infos.size()); // write infos\n      for (SegmentInfo si : infos) {\n        writeInfo(out, si);\n      }\n      out.writeStringStringMap(infos.getUserData());\n      success = true;\n      return out;\n    } finally {\n      if (!success) {\n        IOUtils.closeWhileHandlingException(out);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["7e0127a0bf2a1895ba6109cbbd451359b9c0653d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7e0127a0bf2a1895ba6109cbbd451359b9c0653d":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a0ae5e3ed1232483b7b8a014f175a5fe43595982"],"7e0127a0bf2a1895ba6109cbbd451359b9c0653d":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"a0ae5e3ed1232483b7b8a014f175a5fe43595982":["7e0127a0bf2a1895ba6109cbbd451359b9c0653d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}