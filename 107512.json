{"path":"lucene/core/src/java/org/apache/lucene/search/LRUFilterCache#clearCoreCacheKey(Object).mjava","commits":[{"id":"e5eed7b3a60b52b9f1c32db9c49da397e06f88af","date":1417105424,"type":0,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/LRUFilterCache#clearCoreCacheKey(Object).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Remove all cache entries for the given core cache key.\n   */\n  public synchronized void clearCoreCacheKey(Object coreKey) {\n    final LeafCache leafCache = cache.remove(coreKey);\n    if (leafCache != null) {\n      ramBytesUsed -= leafCache.ramBytesUsed;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9d6ade6517735e5fca21539f4ff32151bf0a89b8","date":1418291454,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/LRUFilterCache#clearCoreCacheKey(Object).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/LRUFilterCache#clearCoreCacheKey(Object).mjava","sourceNew":"  /**\n   * Remove all cache entries for the given core cache key.\n   */\n  public synchronized void clearCoreCacheKey(Object coreKey) {\n    final LeafCache leafCache = cache.remove(coreKey);\n    if (leafCache != null) {\n      ramBytesUsed -= leafCache.ramBytesUsed + HASHTABLE_RAM_BYTES_PER_ENTRY;\n    }\n  }\n\n","sourceOld":"  /**\n   * Remove all cache entries for the given core cache key.\n   */\n  public synchronized void clearCoreCacheKey(Object coreKey) {\n    final LeafCache leafCache = cache.remove(coreKey);\n    if (leafCache != null) {\n      ramBytesUsed -= leafCache.ramBytesUsed;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b976b5ac4d8353f1e0a7c6a8736d9c3f197b7c19","date":1418741524,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/LRUFilterCache#clearCoreCacheKey(Object).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/LRUFilterCache#clearCoreCacheKey(Object).mjava","sourceNew":"  /**\n   * Remove all cache entries for the given core cache key.\n   */\n  public synchronized void clearCoreCacheKey(Object coreKey) {\n    final LeafCache leafCache = cache.remove(coreKey);\n    if (leafCache != null) {\n      ramBytesUsed -= leafCache.ramBytesUsed + HASHTABLE_RAM_BYTES_PER_ENTRY;\n      cacheSize -= leafCache.cache.size();\n    }\n  }\n\n","sourceOld":"  /**\n   * Remove all cache entries for the given core cache key.\n   */\n  public synchronized void clearCoreCacheKey(Object coreKey) {\n    final LeafCache leafCache = cache.remove(coreKey);\n    if (leafCache != null) {\n      ramBytesUsed -= leafCache.ramBytesUsed + HASHTABLE_RAM_BYTES_PER_ENTRY;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"296c9b37e42c78be4df12c05d295996c46e0d0ef","date":1420447527,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/LRUFilterCache#clearCoreCacheKey(Object).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/LRUFilterCache#clearCoreCacheKey(Object).mjava","sourceNew":"  /**\n   * Remove all cache entries for the given core cache key.\n   */\n  public synchronized void clearCoreCacheKey(Object coreKey) {\n    final LeafCache leafCache = cache.remove(coreKey);\n    if (leafCache != null) {\n      ramBytesUsed -= HASHTABLE_RAM_BYTES_PER_ENTRY;\n      onDocIdSetEviction(coreKey, leafCache.cache.size(), leafCache.ramBytesUsed);\n    }\n  }\n\n","sourceOld":"  /**\n   * Remove all cache entries for the given core cache key.\n   */\n  public synchronized void clearCoreCacheKey(Object coreKey) {\n    final LeafCache leafCache = cache.remove(coreKey);\n    if (leafCache != null) {\n      ramBytesUsed -= leafCache.ramBytesUsed + HASHTABLE_RAM_BYTES_PER_ENTRY;\n      cacheSize -= leafCache.cache.size();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"60596f28be69b10c37a56a303c2dbea07b2ca4ba","date":1425060541,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/LRUQueryCache#clearCoreCacheKey(Object).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/LRUFilterCache#clearCoreCacheKey(Object).mjava","sourceNew":"  /**\n   * Remove all cache entries for the given core cache key.\n   */\n  public synchronized void clearCoreCacheKey(Object coreKey) {\n    final LeafCache leafCache = cache.remove(coreKey);\n    if (leafCache != null) {\n      ramBytesUsed -= HASHTABLE_RAM_BYTES_PER_ENTRY;\n      onDocIdSetEviction(coreKey, leafCache.cache.size(), leafCache.ramBytesUsed);\n    }\n  }\n\n","sourceOld":"  /**\n   * Remove all cache entries for the given core cache key.\n   */\n  public synchronized void clearCoreCacheKey(Object coreKey) {\n    final LeafCache leafCache = cache.remove(coreKey);\n    if (leafCache != null) {\n      ramBytesUsed -= HASHTABLE_RAM_BYTES_PER_ENTRY;\n      onDocIdSetEviction(coreKey, leafCache.cache.size(), leafCache.ramBytesUsed);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":5,"author":"Ryan Ernst","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/LRUQueryCache#clearCoreCacheKey(Object).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/LRUFilterCache#clearCoreCacheKey(Object).mjava","sourceNew":"  /**\n   * Remove all cache entries for the given core cache key.\n   */\n  public synchronized void clearCoreCacheKey(Object coreKey) {\n    final LeafCache leafCache = cache.remove(coreKey);\n    if (leafCache != null) {\n      ramBytesUsed -= HASHTABLE_RAM_BYTES_PER_ENTRY;\n      onDocIdSetEviction(coreKey, leafCache.cache.size(), leafCache.ramBytesUsed);\n    }\n  }\n\n","sourceOld":"  /**\n   * Remove all cache entries for the given core cache key.\n   */\n  public synchronized void clearCoreCacheKey(Object coreKey) {\n    final LeafCache leafCache = cache.remove(coreKey);\n    if (leafCache != null) {\n      ramBytesUsed -= HASHTABLE_RAM_BYTES_PER_ENTRY;\n      onDocIdSetEviction(coreKey, leafCache.cache.size(), leafCache.ramBytesUsed);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["296c9b37e42c78be4df12c05d295996c46e0d0ef","60596f28be69b10c37a56a303c2dbea07b2ca4ba"],"60596f28be69b10c37a56a303c2dbea07b2ca4ba":["296c9b37e42c78be4df12c05d295996c46e0d0ef"],"9d6ade6517735e5fca21539f4ff32151bf0a89b8":["e5eed7b3a60b52b9f1c32db9c49da397e06f88af"],"e5eed7b3a60b52b9f1c32db9c49da397e06f88af":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b976b5ac4d8353f1e0a7c6a8736d9c3f197b7c19":["9d6ade6517735e5fca21539f4ff32151bf0a89b8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["60596f28be69b10c37a56a303c2dbea07b2ca4ba"],"296c9b37e42c78be4df12c05d295996c46e0d0ef":["b976b5ac4d8353f1e0a7c6a8736d9c3f197b7c19"]},"commit2Childs":{"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"60596f28be69b10c37a56a303c2dbea07b2ca4ba":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9d6ade6517735e5fca21539f4ff32151bf0a89b8":["b976b5ac4d8353f1e0a7c6a8736d9c3f197b7c19"],"e5eed7b3a60b52b9f1c32db9c49da397e06f88af":["9d6ade6517735e5fca21539f4ff32151bf0a89b8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e5eed7b3a60b52b9f1c32db9c49da397e06f88af"],"b976b5ac4d8353f1e0a7c6a8736d9c3f197b7c19":["296c9b37e42c78be4df12c05d295996c46e0d0ef"],"296c9b37e42c78be4df12c05d295996c46e0d0ef":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","60596f28be69b10c37a56a303c2dbea07b2ca4ba"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}