{"path":"solr/core/src/test/org/apache/solr/handler/component/DistributedFacetPivotSmallAdvancedTest#doTestDeepPivotStatsOnString().mjava","commits":[{"id":"4c18a95e9168a30be855f5d5e7d61a863186fdc5","date":1415142581,"type":0,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/handler/component/DistributedFacetPivotSmallAdvancedTest#doTestDeepPivotStatsOnString().mjava","pathOld":"/dev/null","sourceNew":"  private void doTestDeepPivotStatsOnString() throws Exception {\n    SolrParams params = params(\"q\", \"*:*\", \"rows\", \"0\",\n        \"shards\", getShardsString(),\n        \"facet\", \"true\", \"stats\", \"true\",\n        \"facet.pivot\", \"{!stats=s1}place_t,company_t\",\n        \"stats.field\", \"{!key=avg_price tag=s1}foo_s\");\n    QueryResponse rsp = queryServer(new ModifiableSolrParams(params));\n\n    List<PivotField> placePivots = rsp.getFacetPivot().get(\"place_t,company_t\");\n\n    PivotField dublinPivotField = placePivots.get(0);\n    assertEquals(\"dublin\", dublinPivotField.getValue());\n    assertEquals(4, dublinPivotField.getCount());\n\n    PivotField microsoftPivotField = dublinPivotField.getPivot().get(0);\n    assertEquals(\"microsoft\", microsoftPivotField.getValue());\n    assertEquals(4, microsoftPivotField.getCount());\n\n    FieldStatsInfo dublinMicrosoftStatsInfo = microsoftPivotField.getFieldStatsInfo().get(\"avg_price\");\n    assertEquals(\"aaa\", dublinMicrosoftStatsInfo.getMin());\n    assertEquals(\"bbb\", dublinMicrosoftStatsInfo.getMax());\n    assertEquals(4, (long) dublinMicrosoftStatsInfo.getCount());\n    assertEquals(0, (long) dublinMicrosoftStatsInfo.getMissing());\n\n    PivotField cardiffPivotField = placePivots.get(2);\n    assertEquals(\"cardiff\", cardiffPivotField.getValue());\n    assertEquals(3, cardiffPivotField.getCount());\n\n    PivotField polecatPivotField = cardiffPivotField.getPivot().get(0);\n    assertEquals(\"polecat\", polecatPivotField.getValue());\n    assertEquals(3, polecatPivotField.getCount());\n\n    FieldStatsInfo cardiffPolecatStatsInfo = polecatPivotField.getFieldStatsInfo().get(\"avg_price\");\n    assertEquals(\"aaa\", cardiffPolecatStatsInfo.getMin());\n    assertEquals(\"bbb\", cardiffPolecatStatsInfo.getMax());\n    assertEquals(3, (long) cardiffPolecatStatsInfo.getCount());\n    assertEquals(0, (long) cardiffPolecatStatsInfo.getMissing());\n\n    PivotField krakowPivotField = placePivots.get(3);\n    assertEquals(\"krakow\", krakowPivotField.getValue());\n    assertEquals(3, krakowPivotField.getCount());\n\n    PivotField fujitsuPivotField = krakowPivotField.getPivot().get(3);\n    assertEquals(\"fujitsu\", fujitsuPivotField.getValue());\n    assertEquals(1, fujitsuPivotField.getCount());\n\n    FieldStatsInfo krakowFujitsuStatsInfo = fujitsuPivotField.getFieldStatsInfo().get(\"avg_price\");\n    assertEquals(\"aaa\", krakowFujitsuStatsInfo.getMin());\n    assertEquals(\"aaa\", krakowFujitsuStatsInfo.getMax());\n    assertEquals(1, (long) krakowFujitsuStatsInfo.getCount());\n    assertEquals(0, (long) krakowFujitsuStatsInfo.getMissing());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4c18a95e9168a30be855f5d5e7d61a863186fdc5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4c18a95e9168a30be855f5d5e7d61a863186fdc5"]},"commit2Childs":{"4c18a95e9168a30be855f5d5e7d61a863186fdc5":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4c18a95e9168a30be855f5d5e7d61a863186fdc5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}