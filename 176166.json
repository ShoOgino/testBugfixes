{"path":"lucene/core/src/java/org/apache/lucene/index/IndexReader#notifyReaderClosedListeners(Throwable).mjava","commits":[{"id":"6f8a4ddee78d8bc3c8c736c1cdb130b94cde0b89","date":1395763949,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexReader#notifyReaderClosedListeners(Throwable).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexReader#notifyReaderClosedListeners().mjava","sourceNew":"  private void notifyReaderClosedListeners(Throwable th) {\n    synchronized(readerClosedListeners) {\n      for(ReaderClosedListener listener : readerClosedListeners) {\n        try {\n          listener.onClose(this);\n        } catch (Throwable t) {\n          if (th == null) {\n            th = t;\n          } else {\n            th.addSuppressed(t);\n          }\n        }\n      }\n      IOUtils.reThrowUnchecked(th);\n    }\n  }\n\n","sourceOld":"  private void notifyReaderClosedListeners() {\n    synchronized(readerClosedListeners) {\n      for(ReaderClosedListener listener : readerClosedListeners) {\n        listener.onClose(this);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9662ea1859b92a5d1ed858093f31d5fb78d58ba8","date":1454026209,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexReader#notifyReaderClosedListeners(Throwable).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexReader#notifyReaderClosedListeners(Throwable).mjava","sourceNew":"  private void notifyReaderClosedListeners(Throwable th) throws IOException {\n    synchronized(readerClosedListeners) {\n      for(ReaderClosedListener listener : readerClosedListeners) {\n        try {\n          listener.onClose(this);\n        } catch (Throwable t) {\n          if (th == null) {\n            th = t;\n          } else {\n            th.addSuppressed(t);\n          }\n        }\n      }\n      IOUtils.reThrow(th);\n    }\n  }\n\n","sourceOld":"  private void notifyReaderClosedListeners(Throwable th) {\n    synchronized(readerClosedListeners) {\n      for(ReaderClosedListener listener : readerClosedListeners) {\n        try {\n          listener.onClose(this);\n        } catch (Throwable t) {\n          if (th == null) {\n            th = t;\n          } else {\n            th.addSuppressed(t);\n          }\n        }\n      }\n      IOUtils.reThrowUnchecked(th);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8d15e34266d75e4e8b95da046cd0afc812367b38","date":1454246129,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexReader#notifyReaderClosedListeners(Throwable).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexReader#notifyReaderClosedListeners(Throwable).mjava","sourceNew":"  private void notifyReaderClosedListeners(Throwable th) throws IOException {\n    synchronized(readerClosedListeners) {\n      for(ReaderClosedListener listener : readerClosedListeners) {\n        try {\n          listener.onClose(this);\n        } catch (Throwable t) {\n          if (th == null) {\n            th = t;\n          } else {\n            th.addSuppressed(t);\n          }\n        }\n      }\n      IOUtils.reThrow(th);\n    }\n  }\n\n","sourceOld":"  private void notifyReaderClosedListeners(Throwable th) {\n    synchronized(readerClosedListeners) {\n      for(ReaderClosedListener listener : readerClosedListeners) {\n        try {\n          listener.onClose(this);\n        } catch (Throwable t) {\n          if (th == null) {\n            th = t;\n          } else {\n            th.addSuppressed(t);\n          }\n        }\n      }\n      IOUtils.reThrowUnchecked(th);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1e6acbaae7af722f17204ceccf0f7db5753eccf3","date":1454775255,"type":3,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexReader#notifyReaderClosedListeners(Throwable).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexReader#notifyReaderClosedListeners(Throwable).mjava","sourceNew":"  private void notifyReaderClosedListeners(Throwable th) throws IOException {\n    synchronized(readerClosedListeners) {\n      for(ReaderClosedListener listener : readerClosedListeners) {\n        try {\n          listener.onClose(this);\n        } catch (Throwable t) {\n          if (th == null) {\n            th = t;\n          } else {\n            th.addSuppressed(t);\n          }\n        }\n      }\n      IOUtils.reThrow(th);\n    }\n  }\n\n","sourceOld":"  private void notifyReaderClosedListeners(Throwable th) {\n    synchronized(readerClosedListeners) {\n      for(ReaderClosedListener listener : readerClosedListeners) {\n        try {\n          listener.onClose(this);\n        } catch (Throwable t) {\n          if (th == null) {\n            th = t;\n          } else {\n            th.addSuppressed(t);\n          }\n        }\n      }\n      IOUtils.reThrowUnchecked(th);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d211216c83f01894810543d1c107160a9ae3650b","date":1488289605,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexReader#notifyReaderClosedListeners(Throwable).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexReader#notifyReaderClosedListeners(Throwable).mjava","sourceNew":"  // overridden by StandardDirectoryReader and SegmentReader\n  void notifyReaderClosedListeners(Throwable th) throws IOException {\n    // nothing to notify in the base impl, just rethrow\n    IOUtils.reThrow(th);\n  }\n\n","sourceOld":"  private void notifyReaderClosedListeners(Throwable th) throws IOException {\n    synchronized(readerClosedListeners) {\n      for(ReaderClosedListener listener : readerClosedListeners) {\n        try {\n          listener.onClose(this);\n        } catch (Throwable t) {\n          if (th == null) {\n            th = t;\n          } else {\n            th.addSuppressed(t);\n          }\n        }\n      }\n      IOUtils.reThrow(th);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"97fc96e6cc460e0ec1fb904a9c7ecd80680780c2","date":1493374641,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexReader#notifyReaderClosedListeners(Throwable).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexReader#notifyReaderClosedListeners(Throwable).mjava","sourceNew":"  // overridden by StandardDirectoryReader and SegmentReader\n  void notifyReaderClosedListeners(Throwable th) throws IOException {\n    // nothing to notify in the base impl, just rethrow\n    if (th != null) {\n      throw IOUtils.rethrowAlways(th);\n    }\n  }\n\n","sourceOld":"  // overridden by StandardDirectoryReader and SegmentReader\n  void notifyReaderClosedListeners(Throwable th) throws IOException {\n    // nothing to notify in the base impl, just rethrow\n    IOUtils.reThrow(th);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/IndexReader#notifyReaderClosedListeners(Throwable).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexReader#notifyReaderClosedListeners(Throwable).mjava","sourceNew":"  // overridden by StandardDirectoryReader and SegmentReader\n  void notifyReaderClosedListeners(Throwable th) throws IOException {\n    // nothing to notify in the base impl, just rethrow\n    if (th != null) {\n      throw IOUtils.rethrowAlways(th);\n    }\n  }\n\n","sourceOld":"  // overridden by StandardDirectoryReader and SegmentReader\n  void notifyReaderClosedListeners(Throwable th) throws IOException {\n    // nothing to notify in the base impl, just rethrow\n    IOUtils.reThrow(th);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"14d66d86a8b184a86bcaebcf6e15fcef486e0876","date":1521539412,"type":4,"author":"Simon Willnauer","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexReader#notifyReaderClosedListeners(Throwable).mjava","sourceNew":null,"sourceOld":"  // overridden by StandardDirectoryReader and SegmentReader\n  void notifyReaderClosedListeners(Throwable th) throws IOException {\n    // nothing to notify in the base impl, just rethrow\n    if (th != null) {\n      throw IOUtils.rethrowAlways(th);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6815b5b5d6334b2245dd7be2f8b6cca949bf7f43","date":1521731438,"type":4,"author":"Karl Wright","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/index/IndexReader#notifyReaderClosedListeners(Throwable).mjava","sourceNew":null,"sourceOld":"  // overridden by StandardDirectoryReader and SegmentReader\n  void notifyReaderClosedListeners(Throwable th) throws IOException {\n    // nothing to notify in the base impl, just rethrow\n    if (th != null) {\n      throw IOUtils.rethrowAlways(th);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6815b5b5d6334b2245dd7be2f8b6cca949bf7f43":["97fc96e6cc460e0ec1fb904a9c7ecd80680780c2","14d66d86a8b184a86bcaebcf6e15fcef486e0876"],"e9017cf144952056066919f1ebc7897ff9bd71b1":["d211216c83f01894810543d1c107160a9ae3650b","97fc96e6cc460e0ec1fb904a9c7ecd80680780c2"],"97fc96e6cc460e0ec1fb904a9c7ecd80680780c2":["d211216c83f01894810543d1c107160a9ae3650b"],"6f8a4ddee78d8bc3c8c736c1cdb130b94cde0b89":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d211216c83f01894810543d1c107160a9ae3650b":["8d15e34266d75e4e8b95da046cd0afc812367b38"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":["6f8a4ddee78d8bc3c8c736c1cdb130b94cde0b89","8d15e34266d75e4e8b95da046cd0afc812367b38"],"8d15e34266d75e4e8b95da046cd0afc812367b38":["6f8a4ddee78d8bc3c8c736c1cdb130b94cde0b89","9662ea1859b92a5d1ed858093f31d5fb78d58ba8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6815b5b5d6334b2245dd7be2f8b6cca949bf7f43"],"9662ea1859b92a5d1ed858093f31d5fb78d58ba8":["6f8a4ddee78d8bc3c8c736c1cdb130b94cde0b89"],"14d66d86a8b184a86bcaebcf6e15fcef486e0876":["97fc96e6cc460e0ec1fb904a9c7ecd80680780c2"]},"commit2Childs":{"6815b5b5d6334b2245dd7be2f8b6cca949bf7f43":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e9017cf144952056066919f1ebc7897ff9bd71b1":[],"97fc96e6cc460e0ec1fb904a9c7ecd80680780c2":["6815b5b5d6334b2245dd7be2f8b6cca949bf7f43","e9017cf144952056066919f1ebc7897ff9bd71b1","14d66d86a8b184a86bcaebcf6e15fcef486e0876"],"6f8a4ddee78d8bc3c8c736c1cdb130b94cde0b89":["1e6acbaae7af722f17204ceccf0f7db5753eccf3","8d15e34266d75e4e8b95da046cd0afc812367b38","9662ea1859b92a5d1ed858093f31d5fb78d58ba8"],"d211216c83f01894810543d1c107160a9ae3650b":["e9017cf144952056066919f1ebc7897ff9bd71b1","97fc96e6cc460e0ec1fb904a9c7ecd80680780c2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6f8a4ddee78d8bc3c8c736c1cdb130b94cde0b89"],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":[],"8d15e34266d75e4e8b95da046cd0afc812367b38":["d211216c83f01894810543d1c107160a9ae3650b","1e6acbaae7af722f17204ceccf0f7db5753eccf3"],"14d66d86a8b184a86bcaebcf6e15fcef486e0876":["6815b5b5d6334b2245dd7be2f8b6cca949bf7f43"],"9662ea1859b92a5d1ed858093f31d5fb78d58ba8":["8d15e34266d75e4e8b95da046cd0afc812367b38"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e9017cf144952056066919f1ebc7897ff9bd71b1","1e6acbaae7af722f17204ceccf0f7db5753eccf3","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}