{"path":"solr/src/java/org/apache/solr/util/TestHarness#queryAndResponse(String,SolrQueryRequest).mjava","commits":[{"id":"893269407f5c988a4b2ee13c7ffc01ec43136c1d","date":1268598046,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/util/TestHarness#queryAndResponse(String,SolrQueryRequest).mjava","pathOld":"/dev/null","sourceNew":"  public SolrQueryResponse queryAndResponse(String handler, SolrQueryRequest req) throws Exception {\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    core.execute(core.getRequestHandler(handler),req,rsp);\n    if (rsp.getException() != null) {\n      throw rsp.getException();\n    }\n    return rsp;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","date":1268599006,"type":4,"author":"Mark Robert Miller","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/src/java/org/apache/solr/util/TestHarness#queryAndResponse(String,SolrQueryRequest).mjava","sourceNew":null,"sourceOld":"  public SolrQueryResponse queryAndResponse(String handler, SolrQueryRequest req) throws Exception {\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    core.execute(core.getRequestHandler(handler),req,rsp);\n    if (rsp.getException() != null) {\n      throw rsp.getException();\n    }\n    return rsp;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/util/TestHarness#queryAndResponse(String,SolrQueryRequest).mjava","pathOld":"src/java/org/apache/solr/util/TestHarness#queryAndResponse(String,SolrQueryRequest).mjava","sourceNew":"  public SolrQueryResponse queryAndResponse(String handler, SolrQueryRequest req) throws Exception {\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    core.execute(core.getRequestHandler(handler),req,rsp);\n    if (rsp.getException() != null) {\n      throw rsp.getException();\n    }\n    return rsp;\n  }\n\n","sourceOld":"  public SolrQueryResponse queryAndResponse(String handler, SolrQueryRequest req) throws Exception {\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    core.execute(core.getRequestHandler(handler),req,rsp);\n    if (rsp.getException() != null) {\n      throw rsp.getException();\n    }\n    return rsp;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1da8d55113b689b06716246649de6f62430f15c0","date":1453508340,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/util/TestHarness#queryAndResponse(String,SolrQueryRequest).mjava","pathOld":"/dev/null","sourceNew":"  public SolrQueryResponse queryAndResponse(String handler, SolrQueryRequest req) throws Exception {\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    core.execute(core.getRequestHandler(handler),req,rsp);\n    if (rsp.getException() != null) {\n      throw rsp.getException();\n    }\n    return rsp;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3b5b4a3fa226402e6859957bc0bd6ce2cd387b74","date":1287103366,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/util/TestHarness#queryAndResponse(String,SolrQueryRequest).mjava","pathOld":"solr/src/java/org/apache/solr/util/TestHarness#queryAndResponse(String,SolrQueryRequest).mjava","sourceNew":"  /** It is the users responsibility to close the request object when done with it */\n  public SolrQueryResponse queryAndResponse(String handler, SolrQueryRequest req) throws Exception {\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    core.execute(core.getRequestHandler(handler),req,rsp);\n    if (rsp.getException() != null) {\n      throw rsp.getException();\n    }\n    return rsp;\n  }\n\n","sourceOld":"  public SolrQueryResponse queryAndResponse(String handler, SolrQueryRequest req) throws Exception {\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    core.execute(core.getRequestHandler(handler),req,rsp);\n    if (rsp.getException() != null) {\n      throw rsp.getException();\n    }\n    return rsp;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4ecea1664e8617d82eca3b8055a3c37cb4da8511","date":1287578668,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/util/TestHarness#queryAndResponse(String,SolrQueryRequest).mjava","pathOld":"solr/src/java/org/apache/solr/util/TestHarness#queryAndResponse(String,SolrQueryRequest).mjava","sourceNew":"  /** It is the users responsibility to close the request object when done with it */\n  public SolrQueryResponse queryAndResponse(String handler, SolrQueryRequest req) throws Exception {\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    core.execute(core.getRequestHandler(handler),req,rsp);\n    if (rsp.getException() != null) {\n      throw rsp.getException();\n    }\n    return rsp;\n  }\n\n","sourceOld":"  public SolrQueryResponse queryAndResponse(String handler, SolrQueryRequest req) throws Exception {\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    core.execute(core.getRequestHandler(handler),req,rsp);\n    if (rsp.getException() != null) {\n      throw rsp.getException();\n    }\n    return rsp;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"227a2cd43fc1affe16eb4c4ab4423fbc276bd81d","date":1292210954,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/util/TestHarness#queryAndResponse(String,SolrQueryRequest).mjava","pathOld":"solr/src/java/org/apache/solr/util/TestHarness#queryAndResponse(String,SolrQueryRequest).mjava","sourceNew":"  /** It is the users responsibility to close the request object when done with it.\n   * This method does not set/clear SolrRequestInfo */\n  public SolrQueryResponse queryAndResponse(String handler, SolrQueryRequest req) throws Exception {\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    core.execute(core.getRequestHandler(handler),req,rsp);\n    if (rsp.getException() != null) {\n      throw rsp.getException();\n    }\n    return rsp;\n  }\n\n","sourceOld":"  /** It is the users responsibility to close the request object when done with it */\n  public SolrQueryResponse queryAndResponse(String handler, SolrQueryRequest req) throws Exception {\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    core.execute(core.getRequestHandler(handler),req,rsp);\n    if (rsp.getException() != null) {\n      throw rsp.getException();\n    }\n    return rsp;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab5cb6a74aefb78aa0569857970b9151dfe2e787","date":1292842407,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/util/TestHarness#queryAndResponse(String,SolrQueryRequest).mjava","pathOld":"solr/src/java/org/apache/solr/util/TestHarness#queryAndResponse(String,SolrQueryRequest).mjava","sourceNew":"  /** It is the users responsibility to close the request object when done with it.\n   * This method does not set/clear SolrRequestInfo */\n  public SolrQueryResponse queryAndResponse(String handler, SolrQueryRequest req) throws Exception {\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    core.execute(core.getRequestHandler(handler),req,rsp);\n    if (rsp.getException() != null) {\n      throw rsp.getException();\n    }\n    return rsp;\n  }\n\n","sourceOld":"  /** It is the users responsibility to close the request object when done with it */\n  public SolrQueryResponse queryAndResponse(String handler, SolrQueryRequest req) throws Exception {\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    core.execute(core.getRequestHandler(handler),req,rsp);\n    if (rsp.getException() != null) {\n      throw rsp.getException();\n    }\n    return rsp;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/util/TestHarness#queryAndResponse(String,SolrQueryRequest).mjava","pathOld":"solr/src/java/org/apache/solr/util/TestHarness#queryAndResponse(String,SolrQueryRequest).mjava","sourceNew":"  /** It is the users responsibility to close the request object when done with it.\n   * This method does not set/clear SolrRequestInfo */\n  public SolrQueryResponse queryAndResponse(String handler, SolrQueryRequest req) throws Exception {\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    core.execute(core.getRequestHandler(handler),req,rsp);\n    if (rsp.getException() != null) {\n      throw rsp.getException();\n    }\n    return rsp;\n  }\n\n","sourceOld":"  public SolrQueryResponse queryAndResponse(String handler, SolrQueryRequest req) throws Exception {\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    core.execute(core.getRequestHandler(handler),req,rsp);\n    if (rsp.getException() != null) {\n      throw rsp.getException();\n    }\n    return rsp;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d20d5e40789b1c42f4f926e3174b271256c43657","date":1301641092,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"solr/src/test-framework/org/apache/solr/util/TestHarness#queryAndResponse(String,SolrQueryRequest).mjava","pathOld":"solr/src/java/org/apache/solr/util/TestHarness#queryAndResponse(String,SolrQueryRequest).mjava","sourceNew":"  /** It is the users responsibility to close the request object when done with it.\n   * This method does not set/clear SolrRequestInfo */\n  public SolrQueryResponse queryAndResponse(String handler, SolrQueryRequest req) throws Exception {\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    core.execute(core.getRequestHandler(handler),req,rsp);\n    if (rsp.getException() != null) {\n      throw rsp.getException();\n    }\n    return rsp;\n  }\n\n","sourceOld":"  /** It is the users responsibility to close the request object when done with it.\n   * This method does not set/clear SolrRequestInfo */\n  public SolrQueryResponse queryAndResponse(String handler, SolrQueryRequest req) throws Exception {\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    core.execute(core.getRequestHandler(handler),req,rsp);\n    if (rsp.getException() != null) {\n      throw rsp.getException();\n    }\n    return rsp;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b09c7419b92e982a901698cb401ce22ac35e4b04","date":1301668869,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/src/test-framework/org/apache/solr/util/TestHarness#queryAndResponse(String,SolrQueryRequest).mjava","pathOld":"solr/src/java/org/apache/solr/util/TestHarness#queryAndResponse(String,SolrQueryRequest).mjava","sourceNew":"  /** It is the users responsibility to close the request object when done with it.\n   * This method does not set/clear SolrRequestInfo */\n  public SolrQueryResponse queryAndResponse(String handler, SolrQueryRequest req) throws Exception {\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    core.execute(core.getRequestHandler(handler),req,rsp);\n    if (rsp.getException() != null) {\n      throw rsp.getException();\n    }\n    return rsp;\n  }\n\n","sourceOld":"  /** It is the users responsibility to close the request object when done with it.\n   * This method does not set/clear SolrRequestInfo */\n  public SolrQueryResponse queryAndResponse(String handler, SolrQueryRequest req) throws Exception {\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    core.execute(core.getRequestHandler(handler),req,rsp);\n    if (rsp.getException() != null) {\n      throw rsp.getException();\n    }\n    return rsp;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"45669a651c970812a680841b97a77cce06af559f","date":1301922222,"type":5,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/test-framework/org/apache/solr/util/TestHarness#queryAndResponse(String,SolrQueryRequest).mjava","pathOld":"solr/src/java/org/apache/solr/util/TestHarness#queryAndResponse(String,SolrQueryRequest).mjava","sourceNew":"  /** It is the users responsibility to close the request object when done with it.\n   * This method does not set/clear SolrRequestInfo */\n  public SolrQueryResponse queryAndResponse(String handler, SolrQueryRequest req) throws Exception {\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    core.execute(core.getRequestHandler(handler),req,rsp);\n    if (rsp.getException() != null) {\n      throw rsp.getException();\n    }\n    return rsp;\n  }\n\n","sourceOld":"  /** It is the users responsibility to close the request object when done with it.\n   * This method does not set/clear SolrRequestInfo */\n  public SolrQueryResponse queryAndResponse(String handler, SolrQueryRequest req) throws Exception {\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    core.execute(core.getRequestHandler(handler),req,rsp);\n    if (rsp.getException() != null) {\n      throw rsp.getException();\n    }\n    return rsp;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":5,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/test-framework/org/apache/solr/util/TestHarness#queryAndResponse(String,SolrQueryRequest).mjava","pathOld":"solr/src/java/org/apache/solr/util/TestHarness#queryAndResponse(String,SolrQueryRequest).mjava","sourceNew":"  /** It is the users responsibility to close the request object when done with it.\n   * This method does not set/clear SolrRequestInfo */\n  public SolrQueryResponse queryAndResponse(String handler, SolrQueryRequest req) throws Exception {\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    core.execute(core.getRequestHandler(handler),req,rsp);\n    if (rsp.getException() != null) {\n      throw rsp.getException();\n    }\n    return rsp;\n  }\n\n","sourceOld":"  /** It is the users responsibility to close the request object when done with it.\n   * This method does not set/clear SolrRequestInfo */\n  public SolrQueryResponse queryAndResponse(String handler, SolrQueryRequest req) throws Exception {\n    SolrQueryResponse rsp = new SolrQueryResponse();\n    core.execute(core.getRequestHandler(handler),req,rsp);\n    if (rsp.getException() != null) {\n      throw rsp.getException();\n    }\n    return rsp;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"3b5b4a3fa226402e6859957bc0bd6ce2cd387b74":["1da8d55113b689b06716246649de6f62430f15c0"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["ab5cb6a74aefb78aa0569857970b9151dfe2e787","b09c7419b92e982a901698cb401ce22ac35e4b04"],"d20d5e40789b1c42f4f926e3174b271256c43657":["227a2cd43fc1affe16eb4c4ab4423fbc276bd81d"],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":["4ecea1664e8617d82eca3b8055a3c37cb4da8511","227a2cd43fc1affe16eb4c4ab4423fbc276bd81d"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["1da8d55113b689b06716246649de6f62430f15c0","227a2cd43fc1affe16eb4c4ab4423fbc276bd81d"],"1da8d55113b689b06716246649de6f62430f15c0":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","ad94625fb8d088209f46650c8097196fec67f00c"],"227a2cd43fc1affe16eb4c4ab4423fbc276bd81d":["3b5b4a3fa226402e6859957bc0bd6ce2cd387b74"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b09c7419b92e982a901698cb401ce22ac35e4b04":["227a2cd43fc1affe16eb4c4ab4423fbc276bd81d"],"ad94625fb8d088209f46650c8097196fec67f00c":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"4ecea1664e8617d82eca3b8055a3c37cb4da8511":["1da8d55113b689b06716246649de6f62430f15c0","3b5b4a3fa226402e6859957bc0bd6ce2cd387b74"],"45669a651c970812a680841b97a77cce06af559f":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","b09c7419b92e982a901698cb401ce22ac35e4b04"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b09c7419b92e982a901698cb401ce22ac35e4b04"]},"commit2Childs":{"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["1da8d55113b689b06716246649de6f62430f15c0"],"3b5b4a3fa226402e6859957bc0bd6ce2cd387b74":["227a2cd43fc1affe16eb4c4ab4423fbc276bd81d","4ecea1664e8617d82eca3b8055a3c37cb4da8511"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["ad94625fb8d088209f46650c8097196fec67f00c"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":[],"d20d5e40789b1c42f4f926e3174b271256c43657":[],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":["135621f3a0670a9394eb563224a3b76cc4dddc0f"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["45669a651c970812a680841b97a77cce06af559f"],"1da8d55113b689b06716246649de6f62430f15c0":["3b5b4a3fa226402e6859957bc0bd6ce2cd387b74","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","4ecea1664e8617d82eca3b8055a3c37cb4da8511"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"227a2cd43fc1affe16eb4c4ab4423fbc276bd81d":["d20d5e40789b1c42f4f926e3174b271256c43657","ab5cb6a74aefb78aa0569857970b9151dfe2e787","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","b09c7419b92e982a901698cb401ce22ac35e4b04"],"b09c7419b92e982a901698cb401ce22ac35e4b04":["135621f3a0670a9394eb563224a3b76cc4dddc0f","45669a651c970812a680841b97a77cce06af559f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ad94625fb8d088209f46650c8097196fec67f00c":["1da8d55113b689b06716246649de6f62430f15c0"],"4ecea1664e8617d82eca3b8055a3c37cb4da8511":["ab5cb6a74aefb78aa0569857970b9151dfe2e787"],"45669a651c970812a680841b97a77cce06af559f":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["135621f3a0670a9394eb563224a3b76cc4dddc0f","d20d5e40789b1c42f4f926e3174b271256c43657","45669a651c970812a680841b97a77cce06af559f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}