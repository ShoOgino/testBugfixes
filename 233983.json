{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/CartesianProductStream#iterate(List[NamedEvaluator],int[],Map[String,Object]).mjava","commits":[{"id":"d492b24eb91b29b3fb6bca5b158bec326fbc12df","date":1490042446,"type":0,"author":"Dennis Gove","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/CartesianProductStream#iterate(List[NamedEvaluator],int[],Map[String,Object]).mjava","pathOld":"/dev/null","sourceNew":"  private boolean iterate(List<NamedEvaluator> evaluators, int[] indexes, Map<String, Object> evaluatedValues){\n    // this assumes evaluators and indexes are the same length, which is ok cause we created it so we know it is\n    // go right to left and increment, returning true if we're not at the end\n    for(int offset = indexes.length - 1; offset >= 0; --offset){\n      Object evaluatedValue = evaluatedValues.get(evaluators.get(offset).getName());\n      if(evaluatedValue instanceof Collection){\n        int currentIndexValue = indexes[offset];\n        if(currentIndexValue < ((Collection)evaluatedValue).size() - 1){\n          indexes[offset] = currentIndexValue + 1;\n          return true;\n        }\n        else if(0 != offset){\n          indexes[offset] = 0;\n          // move to the left\n        }\n      }\n    }\n    \n    // no more\n    return false;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"869bbd0c59fee20268facd5a2e0d3c77e34500ed","date":1490280012,"type":0,"author":"Dennis Gove","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/CartesianProductStream#iterate(List[NamedEvaluator],int[],Map[String,Object]).mjava","pathOld":"/dev/null","sourceNew":"  private boolean iterate(List<NamedEvaluator> evaluators, int[] indexes, Map<String, Object> evaluatedValues){\n    // this assumes evaluators and indexes are the same length, which is ok cause we created it so we know it is\n    // go right to left and increment, returning true if we're not at the end\n    for(int offset = indexes.length - 1; offset >= 0; --offset){\n      Object evaluatedValue = evaluatedValues.get(evaluators.get(offset).getName());\n      if(evaluatedValue instanceof Collection){\n        int currentIndexValue = indexes[offset];\n        if(currentIndexValue < ((Collection)evaluatedValue).size() - 1){\n          indexes[offset] = currentIndexValue + 1;\n          return true;\n        }\n        else if(0 != offset){\n          indexes[offset] = 0;\n          // move to the left\n        }\n      }\n    }\n    \n    // no more\n    return false;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"869bbd0c59fee20268facd5a2e0d3c77e34500ed":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d492b24eb91b29b3fb6bca5b158bec326fbc12df":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d492b24eb91b29b3fb6bca5b158bec326fbc12df"]},"commit2Childs":{"869bbd0c59fee20268facd5a2e0d3c77e34500ed":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["869bbd0c59fee20268facd5a2e0d3c77e34500ed","d492b24eb91b29b3fb6bca5b158bec326fbc12df"],"d492b24eb91b29b3fb6bca5b158bec326fbc12df":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["869bbd0c59fee20268facd5a2e0d3c77e34500ed","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}