{"path":"solr/core/src/test/org/apache/solr/core/TestSolrXml#testPropretySub().mjava","commits":[{"id":"e475642767c688ede5728d7918326f70b4e0bf3a","date":1366072489,"type":0,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestSolrXml#testPropretySub().mjava","pathOld":"/dev/null","sourceNew":"  // Test  a few property substitutions that happen to be in solr-50-all.xml.\n  public void testPropretySub() throws IOException, ParserConfigurationException, SAXException {\n\n    String coreRoot = System.getProperty(\"coreRootDirectory\");\n    String hostPort = System.getProperty(\"hostPort\");\n    String shareSchema = System.getProperty(\"shareSchema\");\n    String socketTimeout = System.getProperty(\"socketTimeout\");\n    String connTimeout = System.getProperty(\"connTimeout\");\n    System.setProperty(\"coreRootDirectory\", \"myCoreRoot\");\n    System.setProperty(\"hostPort\", \"8888\");\n    System.setProperty(\"shareSchema\", \"newShareSchema\");\n    System.setProperty(\"socketTimeout\", \"220\");\n    System.setProperty(\"connTimeout\", \"200\");\n\n    CoreContainer cc = null;\n    File testSrcRoot = new File(SolrTestCaseJ4.TEST_HOME());\n    FileUtils.copyFile(new File(testSrcRoot, \"solr-50-all.xml\"), new File(solrHome, \"solr.xml\"));\n    try {\n      InputStream is = new FileInputStream(new File(solrHome, \"solr.xml\"));\n      ConfigSolr cfg = new ConfigSolrXml(new SolrResourceLoader(\"solr/collection1\"), null, is, null, false, null);\n      assertEquals(\"Did not find expected value\", cfg.get(ConfigSolr.CfgProp.SOLR_COREROOTDIRECTORY, null), \"myCoreRoot\");\n      assertEquals(\"Did not find expected value\", cfg.getInt(ConfigSolr.CfgProp.SOLR_HOSTPORT, 0), 8888);\n      assertEquals(\"Did not find expected value\", cfg.getInt(ConfigSolr.CfgProp.SOLR_SHARDHANDLERFACTORY_CONNTIMEOUT, 0), 200);\n      assertEquals(\"Did not find expected value\", cfg.getInt(ConfigSolr.CfgProp.SOLR_SHARDHANDLERFACTORY_SOCKETTIMEOUT, 0), 220);\n      assertEquals(\"Did not find expected value\", cfg.get(ConfigSolr.CfgProp.SOLR_SHARESCHEMA, null), \"newShareSchema\");\n\n    } finally {\n      if (cc != null) cc.shutdown();\n      if (coreRoot != null) System.setProperty(\"coreRootDirectory\", coreRoot);\n      else System.clearProperty(\"coreRootDirectory\");\n\n      if (hostPort != null) System.setProperty(\"hostPort\", hostPort);\n      else System.clearProperty(\"hostPort\");\n\n      if (shareSchema != null) System.setProperty(\"shareSchema\", shareSchema);\n      else System.clearProperty(\"shareSchema\");\n\n      if (socketTimeout != null) System.setProperty(\"socketTimeout\", socketTimeout);\n      else System.clearProperty(\"socketTimeout\");\n\n      if (connTimeout != null) System.setProperty(\"connTimeout\", connTimeout);\n      else System.clearProperty(\"connTimeout\");\n\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["f225b9b576dc345ee8c27f91147b4afc0350511c"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c7c73b6560033b6dcc828fbcc94ba9315c20f3c0","date":1366659310,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestSolrXml#testPropretySub().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestSolrXml#testPropretySub().mjava","sourceNew":"  // Test  a few property substitutions that happen to be in solr-50-all.xml.\n  public void testPropretySub() throws IOException, ParserConfigurationException, SAXException {\n\n    String coreRoot = System.getProperty(\"coreRootDirectory\");\n    String hostPort = System.getProperty(\"hostPort\");\n    String shareSchema = System.getProperty(\"shareSchema\");\n    String socketTimeout = System.getProperty(\"socketTimeout\");\n    String connTimeout = System.getProperty(\"connTimeout\");\n    System.setProperty(\"coreRootDirectory\", \"myCoreRoot\");\n    System.setProperty(\"hostPort\", \"8888\");\n    System.setProperty(\"shareSchema\", \"newShareSchema\");\n    System.setProperty(\"socketTimeout\", \"220\");\n    System.setProperty(\"connTimeout\", \"200\");\n\n    CoreContainer cc = null;\n    File testSrcRoot = new File(SolrTestCaseJ4.TEST_HOME());\n    FileUtils.copyFile(new File(testSrcRoot, \"solr-50-all.xml\"), new File(solrHome, \"solr.xml\"));\n    try {\n      InputStream is = new FileInputStream(new File(solrHome, \"solr.xml\"));\n      Config config = new Config(new SolrResourceLoader(\"solr/collection1\"), null, new InputSource(is), null, false);\n      boolean oldStyle = (config.getNode(\"solr/cores\", false) != null);\n      ConfigSolr cfg;\n      if (oldStyle) {\n        cfg = new ConfigSolrXmlOld(config, cc);\n      } else {\n        cfg = new ConfigSolrXml(config, cc);\n      }\n      assertEquals(\"Did not find expected value\", cfg.get(ConfigSolr.CfgProp.SOLR_COREROOTDIRECTORY, null), \"myCoreRoot\");\n      assertEquals(\"Did not find expected value\", cfg.getInt(ConfigSolr.CfgProp.SOLR_HOSTPORT, 0), 8888);\n      assertEquals(\"Did not find expected value\", cfg.getInt(ConfigSolr.CfgProp.SOLR_SHARDHANDLERFACTORY_CONNTIMEOUT, 0), 200);\n      assertEquals(\"Did not find expected value\", cfg.getInt(ConfigSolr.CfgProp.SOLR_SHARDHANDLERFACTORY_SOCKETTIMEOUT, 0), 220);\n      assertEquals(\"Did not find expected value\", cfg.get(ConfigSolr.CfgProp.SOLR_SHARESCHEMA, null), \"newShareSchema\");\n\n    } finally {\n      if (cc != null) cc.shutdown();\n      if (coreRoot != null) System.setProperty(\"coreRootDirectory\", coreRoot);\n      else System.clearProperty(\"coreRootDirectory\");\n\n      if (hostPort != null) System.setProperty(\"hostPort\", hostPort);\n      else System.clearProperty(\"hostPort\");\n\n      if (shareSchema != null) System.setProperty(\"shareSchema\", shareSchema);\n      else System.clearProperty(\"shareSchema\");\n\n      if (socketTimeout != null) System.setProperty(\"socketTimeout\", socketTimeout);\n      else System.clearProperty(\"socketTimeout\");\n\n      if (connTimeout != null) System.setProperty(\"connTimeout\", connTimeout);\n      else System.clearProperty(\"connTimeout\");\n\n    }\n  }\n\n","sourceOld":"  // Test  a few property substitutions that happen to be in solr-50-all.xml.\n  public void testPropretySub() throws IOException, ParserConfigurationException, SAXException {\n\n    String coreRoot = System.getProperty(\"coreRootDirectory\");\n    String hostPort = System.getProperty(\"hostPort\");\n    String shareSchema = System.getProperty(\"shareSchema\");\n    String socketTimeout = System.getProperty(\"socketTimeout\");\n    String connTimeout = System.getProperty(\"connTimeout\");\n    System.setProperty(\"coreRootDirectory\", \"myCoreRoot\");\n    System.setProperty(\"hostPort\", \"8888\");\n    System.setProperty(\"shareSchema\", \"newShareSchema\");\n    System.setProperty(\"socketTimeout\", \"220\");\n    System.setProperty(\"connTimeout\", \"200\");\n\n    CoreContainer cc = null;\n    File testSrcRoot = new File(SolrTestCaseJ4.TEST_HOME());\n    FileUtils.copyFile(new File(testSrcRoot, \"solr-50-all.xml\"), new File(solrHome, \"solr.xml\"));\n    try {\n      InputStream is = new FileInputStream(new File(solrHome, \"solr.xml\"));\n      ConfigSolr cfg = new ConfigSolrXml(new SolrResourceLoader(\"solr/collection1\"), null, is, null, false, null);\n      assertEquals(\"Did not find expected value\", cfg.get(ConfigSolr.CfgProp.SOLR_COREROOTDIRECTORY, null), \"myCoreRoot\");\n      assertEquals(\"Did not find expected value\", cfg.getInt(ConfigSolr.CfgProp.SOLR_HOSTPORT, 0), 8888);\n      assertEquals(\"Did not find expected value\", cfg.getInt(ConfigSolr.CfgProp.SOLR_SHARDHANDLERFACTORY_CONNTIMEOUT, 0), 200);\n      assertEquals(\"Did not find expected value\", cfg.getInt(ConfigSolr.CfgProp.SOLR_SHARDHANDLERFACTORY_SOCKETTIMEOUT, 0), 220);\n      assertEquals(\"Did not find expected value\", cfg.get(ConfigSolr.CfgProp.SOLR_SHARESCHEMA, null), \"newShareSchema\");\n\n    } finally {\n      if (cc != null) cc.shutdown();\n      if (coreRoot != null) System.setProperty(\"coreRootDirectory\", coreRoot);\n      else System.clearProperty(\"coreRootDirectory\");\n\n      if (hostPort != null) System.setProperty(\"hostPort\", hostPort);\n      else System.clearProperty(\"hostPort\");\n\n      if (shareSchema != null) System.setProperty(\"shareSchema\", shareSchema);\n      else System.clearProperty(\"shareSchema\");\n\n      if (socketTimeout != null) System.setProperty(\"socketTimeout\", socketTimeout);\n      else System.clearProperty(\"socketTimeout\");\n\n      if (connTimeout != null) System.setProperty(\"connTimeout\", connTimeout);\n      else System.clearProperty(\"connTimeout\");\n\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d264f386d864b5751209060e8886ca9845f70469","date":1372172126,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestSolrXml#testPropretySub().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestSolrXml#testPropretySub().mjava","sourceNew":"  // Test  a few property substitutions that happen to be in solr-50-all.xml.\n  public void testPropretySub() throws IOException, ParserConfigurationException, SAXException {\n\n    String coreRoot = System.getProperty(\"coreRootDirectory\");\n    String hostPort = System.getProperty(\"hostPort\");\n    String shareSchema = System.getProperty(\"shareSchema\");\n    String socketTimeout = System.getProperty(\"socketTimeout\");\n    String connTimeout = System.getProperty(\"connTimeout\");\n    System.setProperty(\"coreRootDirectory\", \"myCoreRoot\");\n    System.setProperty(\"hostPort\", \"8888\");\n    System.setProperty(\"shareSchema\", \"newShareSchema\");\n    System.setProperty(\"socketTimeout\", \"220\");\n    System.setProperty(\"connTimeout\", \"200\");\n\n    CoreContainer cc = null;\n    File testSrcRoot = new File(SolrTestCaseJ4.TEST_HOME());\n    FileUtils.copyFile(new File(testSrcRoot, \"solr-50-all.xml\"), new File(solrHome, \"solr.xml\"));\n    try {\n      InputStream is = new FileInputStream(new File(solrHome, \"solr.xml\"));\n      Config config = new Config(new SolrResourceLoader(\"solr/collection1\"), null, new InputSource(is), null, false);\n      boolean oldStyle = (config.getNode(\"solr/cores\", false) != null);\n      ConfigSolr cfg;\n      if (oldStyle) {\n        cfg = new ConfigSolrXmlOld(config);\n      } else {\n        cfg = new ConfigSolrXml(config, cc);\n      }\n      assertEquals(\"Did not find expected value\", cfg.get(ConfigSolr.CfgProp.SOLR_COREROOTDIRECTORY, null), \"myCoreRoot\");\n      assertEquals(\"Did not find expected value\", cfg.getInt(ConfigSolr.CfgProp.SOLR_HOSTPORT, 0), 8888);\n      assertEquals(\"Did not find expected value\", cfg.getInt(ConfigSolr.CfgProp.SOLR_SHARDHANDLERFACTORY_CONNTIMEOUT, 0), 200);\n      assertEquals(\"Did not find expected value\", cfg.getInt(ConfigSolr.CfgProp.SOLR_SHARDHANDLERFACTORY_SOCKETTIMEOUT, 0), 220);\n      assertEquals(\"Did not find expected value\", cfg.get(ConfigSolr.CfgProp.SOLR_SHARESCHEMA, null), \"newShareSchema\");\n\n    } finally {\n      if (cc != null) cc.shutdown();\n      if (coreRoot != null) System.setProperty(\"coreRootDirectory\", coreRoot);\n      else System.clearProperty(\"coreRootDirectory\");\n\n      if (hostPort != null) System.setProperty(\"hostPort\", hostPort);\n      else System.clearProperty(\"hostPort\");\n\n      if (shareSchema != null) System.setProperty(\"shareSchema\", shareSchema);\n      else System.clearProperty(\"shareSchema\");\n\n      if (socketTimeout != null) System.setProperty(\"socketTimeout\", socketTimeout);\n      else System.clearProperty(\"socketTimeout\");\n\n      if (connTimeout != null) System.setProperty(\"connTimeout\", connTimeout);\n      else System.clearProperty(\"connTimeout\");\n\n    }\n  }\n\n","sourceOld":"  // Test  a few property substitutions that happen to be in solr-50-all.xml.\n  public void testPropretySub() throws IOException, ParserConfigurationException, SAXException {\n\n    String coreRoot = System.getProperty(\"coreRootDirectory\");\n    String hostPort = System.getProperty(\"hostPort\");\n    String shareSchema = System.getProperty(\"shareSchema\");\n    String socketTimeout = System.getProperty(\"socketTimeout\");\n    String connTimeout = System.getProperty(\"connTimeout\");\n    System.setProperty(\"coreRootDirectory\", \"myCoreRoot\");\n    System.setProperty(\"hostPort\", \"8888\");\n    System.setProperty(\"shareSchema\", \"newShareSchema\");\n    System.setProperty(\"socketTimeout\", \"220\");\n    System.setProperty(\"connTimeout\", \"200\");\n\n    CoreContainer cc = null;\n    File testSrcRoot = new File(SolrTestCaseJ4.TEST_HOME());\n    FileUtils.copyFile(new File(testSrcRoot, \"solr-50-all.xml\"), new File(solrHome, \"solr.xml\"));\n    try {\n      InputStream is = new FileInputStream(new File(solrHome, \"solr.xml\"));\n      Config config = new Config(new SolrResourceLoader(\"solr/collection1\"), null, new InputSource(is), null, false);\n      boolean oldStyle = (config.getNode(\"solr/cores\", false) != null);\n      ConfigSolr cfg;\n      if (oldStyle) {\n        cfg = new ConfigSolrXmlOld(config, cc);\n      } else {\n        cfg = new ConfigSolrXml(config, cc);\n      }\n      assertEquals(\"Did not find expected value\", cfg.get(ConfigSolr.CfgProp.SOLR_COREROOTDIRECTORY, null), \"myCoreRoot\");\n      assertEquals(\"Did not find expected value\", cfg.getInt(ConfigSolr.CfgProp.SOLR_HOSTPORT, 0), 8888);\n      assertEquals(\"Did not find expected value\", cfg.getInt(ConfigSolr.CfgProp.SOLR_SHARDHANDLERFACTORY_CONNTIMEOUT, 0), 200);\n      assertEquals(\"Did not find expected value\", cfg.getInt(ConfigSolr.CfgProp.SOLR_SHARDHANDLERFACTORY_SOCKETTIMEOUT, 0), 220);\n      assertEquals(\"Did not find expected value\", cfg.get(ConfigSolr.CfgProp.SOLR_SHARESCHEMA, null), \"newShareSchema\");\n\n    } finally {\n      if (cc != null) cc.shutdown();\n      if (coreRoot != null) System.setProperty(\"coreRootDirectory\", coreRoot);\n      else System.clearProperty(\"coreRootDirectory\");\n\n      if (hostPort != null) System.setProperty(\"hostPort\", hostPort);\n      else System.clearProperty(\"hostPort\");\n\n      if (shareSchema != null) System.setProperty(\"shareSchema\", shareSchema);\n      else System.clearProperty(\"shareSchema\");\n\n      if (socketTimeout != null) System.setProperty(\"socketTimeout\", socketTimeout);\n      else System.clearProperty(\"socketTimeout\");\n\n      if (connTimeout != null) System.setProperty(\"connTimeout\", connTimeout);\n      else System.clearProperty(\"connTimeout\");\n\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"354983dcdf70c800bf2573d10b54a7391b1dc167","date":1372183171,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestSolrXml#testPropretySub().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestSolrXml#testPropretySub().mjava","sourceNew":"  // Test  a few property substitutions that happen to be in solr-50-all.xml.\n  public void testPropretySub() throws IOException, ParserConfigurationException, SAXException {\n\n    String coreRoot = System.getProperty(\"coreRootDirectory\");\n    String hostPort = System.getProperty(\"hostPort\");\n    String shareSchema = System.getProperty(\"shareSchema\");\n    String socketTimeout = System.getProperty(\"socketTimeout\");\n    String connTimeout = System.getProperty(\"connTimeout\");\n    System.setProperty(\"coreRootDirectory\", \"myCoreRoot\");\n    System.setProperty(\"hostPort\", \"8888\");\n    System.setProperty(\"shareSchema\", \"newShareSchema\");\n    System.setProperty(\"socketTimeout\", \"220\");\n    System.setProperty(\"connTimeout\", \"200\");\n\n    CoreContainer cc = null;\n    File testSrcRoot = new File(SolrTestCaseJ4.TEST_HOME());\n    FileUtils.copyFile(new File(testSrcRoot, \"solr-50-all.xml\"), new File(solrHome, \"solr.xml\"));\n    try {\n      InputStream is = new FileInputStream(new File(solrHome, \"solr.xml\"));\n      Config config = new Config(new SolrResourceLoader(\"solr/collection1\"), null, new InputSource(is), null, false);\n      boolean oldStyle = (config.getNode(\"solr/cores\", false) != null);\n      ConfigSolr cfg;\n      if (oldStyle) {\n        cfg = new ConfigSolrXmlOld(config, cc);\n      } else {\n        cfg = new ConfigSolrXml(config, cc);\n      }\n      assertEquals(\"Did not find expected value\", cfg.get(ConfigSolr.CfgProp.SOLR_COREROOTDIRECTORY, null), \"myCoreRoot\");\n      assertEquals(\"Did not find expected value\", cfg.getInt(ConfigSolr.CfgProp.SOLR_HOSTPORT, 0), 8888);\n      assertEquals(\"Did not find expected value\", cfg.getInt(ConfigSolr.CfgProp.SOLR_SHARDHANDLERFACTORY_CONNTIMEOUT, 0), 200);\n      assertEquals(\"Did not find expected value\", cfg.getInt(ConfigSolr.CfgProp.SOLR_SHARDHANDLERFACTORY_SOCKETTIMEOUT, 0), 220);\n      assertEquals(\"Did not find expected value\", cfg.get(ConfigSolr.CfgProp.SOLR_SHARESCHEMA, null), \"newShareSchema\");\n\n    } finally {\n      if (cc != null) cc.shutdown();\n      if (coreRoot != null) System.setProperty(\"coreRootDirectory\", coreRoot);\n      else System.clearProperty(\"coreRootDirectory\");\n\n      if (hostPort != null) System.setProperty(\"hostPort\", hostPort);\n      else System.clearProperty(\"hostPort\");\n\n      if (shareSchema != null) System.setProperty(\"shareSchema\", shareSchema);\n      else System.clearProperty(\"shareSchema\");\n\n      if (socketTimeout != null) System.setProperty(\"socketTimeout\", socketTimeout);\n      else System.clearProperty(\"socketTimeout\");\n\n      if (connTimeout != null) System.setProperty(\"connTimeout\", connTimeout);\n      else System.clearProperty(\"connTimeout\");\n\n    }\n  }\n\n","sourceOld":"  // Test  a few property substitutions that happen to be in solr-50-all.xml.\n  public void testPropretySub() throws IOException, ParserConfigurationException, SAXException {\n\n    String coreRoot = System.getProperty(\"coreRootDirectory\");\n    String hostPort = System.getProperty(\"hostPort\");\n    String shareSchema = System.getProperty(\"shareSchema\");\n    String socketTimeout = System.getProperty(\"socketTimeout\");\n    String connTimeout = System.getProperty(\"connTimeout\");\n    System.setProperty(\"coreRootDirectory\", \"myCoreRoot\");\n    System.setProperty(\"hostPort\", \"8888\");\n    System.setProperty(\"shareSchema\", \"newShareSchema\");\n    System.setProperty(\"socketTimeout\", \"220\");\n    System.setProperty(\"connTimeout\", \"200\");\n\n    CoreContainer cc = null;\n    File testSrcRoot = new File(SolrTestCaseJ4.TEST_HOME());\n    FileUtils.copyFile(new File(testSrcRoot, \"solr-50-all.xml\"), new File(solrHome, \"solr.xml\"));\n    try {\n      InputStream is = new FileInputStream(new File(solrHome, \"solr.xml\"));\n      Config config = new Config(new SolrResourceLoader(\"solr/collection1\"), null, new InputSource(is), null, false);\n      boolean oldStyle = (config.getNode(\"solr/cores\", false) != null);\n      ConfigSolr cfg;\n      if (oldStyle) {\n        cfg = new ConfigSolrXmlOld(config);\n      } else {\n        cfg = new ConfigSolrXml(config, cc);\n      }\n      assertEquals(\"Did not find expected value\", cfg.get(ConfigSolr.CfgProp.SOLR_COREROOTDIRECTORY, null), \"myCoreRoot\");\n      assertEquals(\"Did not find expected value\", cfg.getInt(ConfigSolr.CfgProp.SOLR_HOSTPORT, 0), 8888);\n      assertEquals(\"Did not find expected value\", cfg.getInt(ConfigSolr.CfgProp.SOLR_SHARDHANDLERFACTORY_CONNTIMEOUT, 0), 200);\n      assertEquals(\"Did not find expected value\", cfg.getInt(ConfigSolr.CfgProp.SOLR_SHARDHANDLERFACTORY_SOCKETTIMEOUT, 0), 220);\n      assertEquals(\"Did not find expected value\", cfg.get(ConfigSolr.CfgProp.SOLR_SHARESCHEMA, null), \"newShareSchema\");\n\n    } finally {\n      if (cc != null) cc.shutdown();\n      if (coreRoot != null) System.setProperty(\"coreRootDirectory\", coreRoot);\n      else System.clearProperty(\"coreRootDirectory\");\n\n      if (hostPort != null) System.setProperty(\"hostPort\", hostPort);\n      else System.clearProperty(\"hostPort\");\n\n      if (shareSchema != null) System.setProperty(\"shareSchema\", shareSchema);\n      else System.clearProperty(\"shareSchema\");\n\n      if (socketTimeout != null) System.setProperty(\"socketTimeout\", socketTimeout);\n      else System.clearProperty(\"socketTimeout\");\n\n      if (connTimeout != null) System.setProperty(\"connTimeout\", connTimeout);\n      else System.clearProperty(\"connTimeout\");\n\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7116474e2e390259937401cf928323e0cbc75e60","date":1372780249,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestSolrXml#testPropretySub().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestSolrXml#testPropretySub().mjava","sourceNew":"  // Test  a few property substitutions that happen to be in solr-50-all.xml.\n  public void testPropretySub() throws IOException, ParserConfigurationException, SAXException {\n\n    String coreRoot = System.getProperty(\"coreRootDirectory\");\n    String hostPort = System.getProperty(\"hostPort\");\n    String shareSchema = System.getProperty(\"shareSchema\");\n    String socketTimeout = System.getProperty(\"socketTimeout\");\n    String connTimeout = System.getProperty(\"connTimeout\");\n    System.setProperty(\"coreRootDirectory\", \"myCoreRoot\");\n    System.setProperty(\"hostPort\", \"8888\");\n    System.setProperty(\"shareSchema\", \"newShareSchema\");\n    System.setProperty(\"socketTimeout\", \"220\");\n    System.setProperty(\"connTimeout\", \"200\");\n\n    CoreContainer cc = null;\n    File testSrcRoot = new File(SolrTestCaseJ4.TEST_HOME());\n    FileUtils.copyFile(new File(testSrcRoot, \"solr-50-all.xml\"), new File(solrHome, \"solr.xml\"));\n    try {\n      InputStream is = new FileInputStream(new File(solrHome, \"solr.xml\"));\n      Config config = new Config(new SolrResourceLoader(\"solr/collection1\"), null, new InputSource(is), null, false);\n      boolean oldStyle = (config.getNode(\"solr/cores\", false) != null);\n      ConfigSolr cfg;\n      if (oldStyle) {\n        cfg = new ConfigSolrXmlOld(config);\n      } else {\n        cfg = new ConfigSolrXml(config, cc);\n      }\n      assertEquals(\"Did not find expected value\", cfg.get(ConfigSolr.CfgProp.SOLR_COREROOTDIRECTORY, null), \"myCoreRoot\");\n      assertEquals(\"Did not find expected value\", cfg.getInt(ConfigSolr.CfgProp.SOLR_HOSTPORT, 0), 8888);\n      assertEquals(\"Did not find expected value\", cfg.getInt(ConfigSolr.CfgProp.SOLR_SHARDHANDLERFACTORY_CONNTIMEOUT, 0), 200);\n      assertEquals(\"Did not find expected value\", cfg.getInt(ConfigSolr.CfgProp.SOLR_SHARDHANDLERFACTORY_SOCKETTIMEOUT, 0), 220);\n      assertEquals(\"Did not find expected value\", cfg.get(ConfigSolr.CfgProp.SOLR_SHARESCHEMA, null), \"newShareSchema\");\n\n    } finally {\n      if (cc != null) cc.shutdown();\n      if (coreRoot != null) System.setProperty(\"coreRootDirectory\", coreRoot);\n      else System.clearProperty(\"coreRootDirectory\");\n\n      if (hostPort != null) System.setProperty(\"hostPort\", hostPort);\n      else System.clearProperty(\"hostPort\");\n\n      if (shareSchema != null) System.setProperty(\"shareSchema\", shareSchema);\n      else System.clearProperty(\"shareSchema\");\n\n      if (socketTimeout != null) System.setProperty(\"socketTimeout\", socketTimeout);\n      else System.clearProperty(\"socketTimeout\");\n\n      if (connTimeout != null) System.setProperty(\"connTimeout\", connTimeout);\n      else System.clearProperty(\"connTimeout\");\n\n    }\n  }\n\n","sourceOld":"  // Test  a few property substitutions that happen to be in solr-50-all.xml.\n  public void testPropretySub() throws IOException, ParserConfigurationException, SAXException {\n\n    String coreRoot = System.getProperty(\"coreRootDirectory\");\n    String hostPort = System.getProperty(\"hostPort\");\n    String shareSchema = System.getProperty(\"shareSchema\");\n    String socketTimeout = System.getProperty(\"socketTimeout\");\n    String connTimeout = System.getProperty(\"connTimeout\");\n    System.setProperty(\"coreRootDirectory\", \"myCoreRoot\");\n    System.setProperty(\"hostPort\", \"8888\");\n    System.setProperty(\"shareSchema\", \"newShareSchema\");\n    System.setProperty(\"socketTimeout\", \"220\");\n    System.setProperty(\"connTimeout\", \"200\");\n\n    CoreContainer cc = null;\n    File testSrcRoot = new File(SolrTestCaseJ4.TEST_HOME());\n    FileUtils.copyFile(new File(testSrcRoot, \"solr-50-all.xml\"), new File(solrHome, \"solr.xml\"));\n    try {\n      InputStream is = new FileInputStream(new File(solrHome, \"solr.xml\"));\n      Config config = new Config(new SolrResourceLoader(\"solr/collection1\"), null, new InputSource(is), null, false);\n      boolean oldStyle = (config.getNode(\"solr/cores\", false) != null);\n      ConfigSolr cfg;\n      if (oldStyle) {\n        cfg = new ConfigSolrXmlOld(config, cc);\n      } else {\n        cfg = new ConfigSolrXml(config, cc);\n      }\n      assertEquals(\"Did not find expected value\", cfg.get(ConfigSolr.CfgProp.SOLR_COREROOTDIRECTORY, null), \"myCoreRoot\");\n      assertEquals(\"Did not find expected value\", cfg.getInt(ConfigSolr.CfgProp.SOLR_HOSTPORT, 0), 8888);\n      assertEquals(\"Did not find expected value\", cfg.getInt(ConfigSolr.CfgProp.SOLR_SHARDHANDLERFACTORY_CONNTIMEOUT, 0), 200);\n      assertEquals(\"Did not find expected value\", cfg.getInt(ConfigSolr.CfgProp.SOLR_SHARDHANDLERFACTORY_SOCKETTIMEOUT, 0), 220);\n      assertEquals(\"Did not find expected value\", cfg.get(ConfigSolr.CfgProp.SOLR_SHARESCHEMA, null), \"newShareSchema\");\n\n    } finally {\n      if (cc != null) cc.shutdown();\n      if (coreRoot != null) System.setProperty(\"coreRootDirectory\", coreRoot);\n      else System.clearProperty(\"coreRootDirectory\");\n\n      if (hostPort != null) System.setProperty(\"hostPort\", hostPort);\n      else System.clearProperty(\"hostPort\");\n\n      if (shareSchema != null) System.setProperty(\"shareSchema\", shareSchema);\n      else System.clearProperty(\"shareSchema\");\n\n      if (socketTimeout != null) System.setProperty(\"socketTimeout\", socketTimeout);\n      else System.clearProperty(\"socketTimeout\");\n\n      if (connTimeout != null) System.setProperty(\"connTimeout\", connTimeout);\n      else System.clearProperty(\"connTimeout\");\n\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"f225b9b576dc345ee8c27f91147b4afc0350511c","date":1373552135,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestSolrXml#testPropretySub().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestSolrXml#testPropretySub().mjava","sourceNew":"  // Test  a few property substitutions that happen to be in solr-50-all.xml.\n  public void testPropretySub() throws IOException, ParserConfigurationException, SAXException {\n\n    String coreRoot = System.getProperty(\"coreRootDirectory\");\n    String hostPort = System.getProperty(\"hostPort\");\n    String shareSchema = System.getProperty(\"shareSchema\");\n    String socketTimeout = System.getProperty(\"socketTimeout\");\n    String connTimeout = System.getProperty(\"connTimeout\");\n    System.setProperty(\"coreRootDirectory\", \"myCoreRoot\");\n    System.setProperty(\"hostPort\", \"8888\");\n    System.setProperty(\"shareSchema\", \"newShareSchema\");\n    System.setProperty(\"socketTimeout\", \"220\");\n    System.setProperty(\"connTimeout\", \"200\");\n\n    CoreContainer cc = null;\n    File testSrcRoot = new File(SolrTestCaseJ4.TEST_HOME());\n    FileUtils.copyFile(new File(testSrcRoot, \"solr-50-all.xml\"), new File(solrHome, \"solr.xml\"));\n    try {\n      InputStream is = new FileInputStream(new File(solrHome, \"solr.xml\"));\n      Config config = new Config(new SolrResourceLoader(\"solr/collection1\"), null, new InputSource(is), null, false);\n      boolean oldStyle = (config.getNode(\"solr/cores\", false) != null);\n      ConfigSolr cfg;\n      if (oldStyle) {\n        cfg = new ConfigSolrXmlOld(config);\n      } else {\n        cfg = new ConfigSolrXml(config, cc);\n      }\n      assertEquals(\"Did not find expected value\", cfg.get(ConfigSolr.CfgProp.SOLR_COREROOTDIRECTORY, null), \"myCoreRoot\");\n      assertEquals(\"Did not find expected value\", cfg.getInt(ConfigSolr.CfgProp.SOLR_HOSTPORT, 0), 8888);\n      assertEquals(\"Did not find expected value\", cfg.get(ConfigSolr.CfgProp.SOLR_SHARESCHEMA, null), \"newShareSchema\");\n\n    } finally {\n      if (cc != null) cc.shutdown();\n      if (coreRoot != null) System.setProperty(\"coreRootDirectory\", coreRoot);\n      else System.clearProperty(\"coreRootDirectory\");\n\n      if (hostPort != null) System.setProperty(\"hostPort\", hostPort);\n      else System.clearProperty(\"hostPort\");\n\n      if (shareSchema != null) System.setProperty(\"shareSchema\", shareSchema);\n      else System.clearProperty(\"shareSchema\");\n\n      if (socketTimeout != null) System.setProperty(\"socketTimeout\", socketTimeout);\n      else System.clearProperty(\"socketTimeout\");\n\n      if (connTimeout != null) System.setProperty(\"connTimeout\", connTimeout);\n      else System.clearProperty(\"connTimeout\");\n\n    }\n  }\n\n","sourceOld":"  // Test  a few property substitutions that happen to be in solr-50-all.xml.\n  public void testPropretySub() throws IOException, ParserConfigurationException, SAXException {\n\n    String coreRoot = System.getProperty(\"coreRootDirectory\");\n    String hostPort = System.getProperty(\"hostPort\");\n    String shareSchema = System.getProperty(\"shareSchema\");\n    String socketTimeout = System.getProperty(\"socketTimeout\");\n    String connTimeout = System.getProperty(\"connTimeout\");\n    System.setProperty(\"coreRootDirectory\", \"myCoreRoot\");\n    System.setProperty(\"hostPort\", \"8888\");\n    System.setProperty(\"shareSchema\", \"newShareSchema\");\n    System.setProperty(\"socketTimeout\", \"220\");\n    System.setProperty(\"connTimeout\", \"200\");\n\n    CoreContainer cc = null;\n    File testSrcRoot = new File(SolrTestCaseJ4.TEST_HOME());\n    FileUtils.copyFile(new File(testSrcRoot, \"solr-50-all.xml\"), new File(solrHome, \"solr.xml\"));\n    try {\n      InputStream is = new FileInputStream(new File(solrHome, \"solr.xml\"));\n      Config config = new Config(new SolrResourceLoader(\"solr/collection1\"), null, new InputSource(is), null, false);\n      boolean oldStyle = (config.getNode(\"solr/cores\", false) != null);\n      ConfigSolr cfg;\n      if (oldStyle) {\n        cfg = new ConfigSolrXmlOld(config);\n      } else {\n        cfg = new ConfigSolrXml(config, cc);\n      }\n      assertEquals(\"Did not find expected value\", cfg.get(ConfigSolr.CfgProp.SOLR_COREROOTDIRECTORY, null), \"myCoreRoot\");\n      assertEquals(\"Did not find expected value\", cfg.getInt(ConfigSolr.CfgProp.SOLR_HOSTPORT, 0), 8888);\n      assertEquals(\"Did not find expected value\", cfg.getInt(ConfigSolr.CfgProp.SOLR_SHARDHANDLERFACTORY_CONNTIMEOUT, 0), 200);\n      assertEquals(\"Did not find expected value\", cfg.getInt(ConfigSolr.CfgProp.SOLR_SHARDHANDLERFACTORY_SOCKETTIMEOUT, 0), 220);\n      assertEquals(\"Did not find expected value\", cfg.get(ConfigSolr.CfgProp.SOLR_SHARESCHEMA, null), \"newShareSchema\");\n\n    } finally {\n      if (cc != null) cc.shutdown();\n      if (coreRoot != null) System.setProperty(\"coreRootDirectory\", coreRoot);\n      else System.clearProperty(\"coreRootDirectory\");\n\n      if (hostPort != null) System.setProperty(\"hostPort\", hostPort);\n      else System.clearProperty(\"hostPort\");\n\n      if (shareSchema != null) System.setProperty(\"shareSchema\", shareSchema);\n      else System.clearProperty(\"shareSchema\");\n\n      if (socketTimeout != null) System.setProperty(\"socketTimeout\", socketTimeout);\n      else System.clearProperty(\"socketTimeout\");\n\n      if (connTimeout != null) System.setProperty(\"connTimeout\", connTimeout);\n      else System.clearProperty(\"connTimeout\");\n\n    }\n  }\n\n","bugFix":["e475642767c688ede5728d7918326f70b4e0bf3a"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6e764e9a107f93be9fa3c922bc6a197b3eec387e","date":1373560501,"type":5,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestSolrXml#testPropertySub().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestSolrXml#testPropretySub().mjava","sourceNew":"  // Test  a few property substitutions that happen to be in solr-50-all.xml.\n  public void testPropertySub() throws IOException {\n\n    System.setProperty(\"coreRootDirectory\", \"myCoreRoot\");\n    System.setProperty(\"hostPort\", \"8888\");\n    System.setProperty(\"shareSchema\", \"newShareSchema\");\n    System.setProperty(\"socketTimeout\", \"220\");\n    System.setProperty(\"connTimeout\", \"200\");\n\n    File testSrcRoot = new File(SolrTestCaseJ4.TEST_HOME());\n    FileUtils.copyFile(new File(testSrcRoot, \"solr-50-all.xml\"), new File(solrHome, \"solr.xml\"));\n\n    SolrResourceLoader loader = null;\n    try {\n      loader = new SolrResourceLoader(solrHome.getAbsolutePath());\n      ConfigSolr cfg = ConfigSolr.fromSolrHome(loader, solrHome.getAbsolutePath());\n      assertEquals(\"Did not find expected value\", cfg.get(ConfigSolr.CfgProp.SOLR_COREROOTDIRECTORY, null), \"myCoreRoot\");\n      assertEquals(\"Did not find expected value\", cfg.getInt(ConfigSolr.CfgProp.SOLR_HOSTPORT, 0), 8888);\n      assertEquals(\"Did not find expected value\", cfg.get(ConfigSolr.CfgProp.SOLR_SHARESCHEMA, null), \"newShareSchema\");\n    }\n    finally {\n      loader.close();\n    }\n  }\n\n","sourceOld":"  // Test  a few property substitutions that happen to be in solr-50-all.xml.\n  public void testPropretySub() throws IOException, ParserConfigurationException, SAXException {\n\n    String coreRoot = System.getProperty(\"coreRootDirectory\");\n    String hostPort = System.getProperty(\"hostPort\");\n    String shareSchema = System.getProperty(\"shareSchema\");\n    String socketTimeout = System.getProperty(\"socketTimeout\");\n    String connTimeout = System.getProperty(\"connTimeout\");\n    System.setProperty(\"coreRootDirectory\", \"myCoreRoot\");\n    System.setProperty(\"hostPort\", \"8888\");\n    System.setProperty(\"shareSchema\", \"newShareSchema\");\n    System.setProperty(\"socketTimeout\", \"220\");\n    System.setProperty(\"connTimeout\", \"200\");\n\n    CoreContainer cc = null;\n    File testSrcRoot = new File(SolrTestCaseJ4.TEST_HOME());\n    FileUtils.copyFile(new File(testSrcRoot, \"solr-50-all.xml\"), new File(solrHome, \"solr.xml\"));\n    try {\n      InputStream is = new FileInputStream(new File(solrHome, \"solr.xml\"));\n      Config config = new Config(new SolrResourceLoader(\"solr/collection1\"), null, new InputSource(is), null, false);\n      boolean oldStyle = (config.getNode(\"solr/cores\", false) != null);\n      ConfigSolr cfg;\n      if (oldStyle) {\n        cfg = new ConfigSolrXmlOld(config);\n      } else {\n        cfg = new ConfigSolrXml(config, cc);\n      }\n      assertEquals(\"Did not find expected value\", cfg.get(ConfigSolr.CfgProp.SOLR_COREROOTDIRECTORY, null), \"myCoreRoot\");\n      assertEquals(\"Did not find expected value\", cfg.getInt(ConfigSolr.CfgProp.SOLR_HOSTPORT, 0), 8888);\n      assertEquals(\"Did not find expected value\", cfg.get(ConfigSolr.CfgProp.SOLR_SHARESCHEMA, null), \"newShareSchema\");\n\n    } finally {\n      if (cc != null) cc.shutdown();\n      if (coreRoot != null) System.setProperty(\"coreRootDirectory\", coreRoot);\n      else System.clearProperty(\"coreRootDirectory\");\n\n      if (hostPort != null) System.setProperty(\"hostPort\", hostPort);\n      else System.clearProperty(\"hostPort\");\n\n      if (shareSchema != null) System.setProperty(\"shareSchema\", shareSchema);\n      else System.clearProperty(\"shareSchema\");\n\n      if (socketTimeout != null) System.setProperty(\"socketTimeout\", socketTimeout);\n      else System.clearProperty(\"socketTimeout\");\n\n      if (connTimeout != null) System.setProperty(\"connTimeout\", connTimeout);\n      else System.clearProperty(\"connTimeout\");\n\n    }\n  }\n\n","bugFix":null,"bugIntro":["4b02ae24808d82a22a424499d7ad8840dc668120","a877077e0a22a42eebce7d1052c58e97d3afb12d"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"37a0f60745e53927c4c876cfe5b5a58170f0646c","date":1373994005,"type":4,"author":"Han Jiang","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/core/TestSolrXml#testPropretySub().mjava","sourceNew":null,"sourceOld":"  // Test  a few property substitutions that happen to be in solr-50-all.xml.\n  public void testPropretySub() throws IOException, ParserConfigurationException, SAXException {\n\n    String coreRoot = System.getProperty(\"coreRootDirectory\");\n    String hostPort = System.getProperty(\"hostPort\");\n    String shareSchema = System.getProperty(\"shareSchema\");\n    String socketTimeout = System.getProperty(\"socketTimeout\");\n    String connTimeout = System.getProperty(\"connTimeout\");\n    System.setProperty(\"coreRootDirectory\", \"myCoreRoot\");\n    System.setProperty(\"hostPort\", \"8888\");\n    System.setProperty(\"shareSchema\", \"newShareSchema\");\n    System.setProperty(\"socketTimeout\", \"220\");\n    System.setProperty(\"connTimeout\", \"200\");\n\n    CoreContainer cc = null;\n    File testSrcRoot = new File(SolrTestCaseJ4.TEST_HOME());\n    FileUtils.copyFile(new File(testSrcRoot, \"solr-50-all.xml\"), new File(solrHome, \"solr.xml\"));\n    try {\n      InputStream is = new FileInputStream(new File(solrHome, \"solr.xml\"));\n      Config config = new Config(new SolrResourceLoader(\"solr/collection1\"), null, new InputSource(is), null, false);\n      boolean oldStyle = (config.getNode(\"solr/cores\", false) != null);\n      ConfigSolr cfg;\n      if (oldStyle) {\n        cfg = new ConfigSolrXmlOld(config, cc);\n      } else {\n        cfg = new ConfigSolrXml(config, cc);\n      }\n      assertEquals(\"Did not find expected value\", cfg.get(ConfigSolr.CfgProp.SOLR_COREROOTDIRECTORY, null), \"myCoreRoot\");\n      assertEquals(\"Did not find expected value\", cfg.getInt(ConfigSolr.CfgProp.SOLR_HOSTPORT, 0), 8888);\n      assertEquals(\"Did not find expected value\", cfg.getInt(ConfigSolr.CfgProp.SOLR_SHARDHANDLERFACTORY_CONNTIMEOUT, 0), 200);\n      assertEquals(\"Did not find expected value\", cfg.getInt(ConfigSolr.CfgProp.SOLR_SHARDHANDLERFACTORY_SOCKETTIMEOUT, 0), 220);\n      assertEquals(\"Did not find expected value\", cfg.get(ConfigSolr.CfgProp.SOLR_SHARESCHEMA, null), \"newShareSchema\");\n\n    } finally {\n      if (cc != null) cc.shutdown();\n      if (coreRoot != null) System.setProperty(\"coreRootDirectory\", coreRoot);\n      else System.clearProperty(\"coreRootDirectory\");\n\n      if (hostPort != null) System.setProperty(\"hostPort\", hostPort);\n      else System.clearProperty(\"hostPort\");\n\n      if (shareSchema != null) System.setProperty(\"shareSchema\", shareSchema);\n      else System.clearProperty(\"shareSchema\");\n\n      if (socketTimeout != null) System.setProperty(\"socketTimeout\", socketTimeout);\n      else System.clearProperty(\"socketTimeout\");\n\n      if (connTimeout != null) System.setProperty(\"connTimeout\", connTimeout);\n      else System.clearProperty(\"connTimeout\");\n\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7116474e2e390259937401cf928323e0cbc75e60":["354983dcdf70c800bf2573d10b54a7391b1dc167"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":["c7c73b6560033b6dcc828fbcc94ba9315c20f3c0","6e764e9a107f93be9fa3c922bc6a197b3eec387e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"354983dcdf70c800bf2573d10b54a7391b1dc167":["d264f386d864b5751209060e8886ca9845f70469"],"e475642767c688ede5728d7918326f70b4e0bf3a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"6e764e9a107f93be9fa3c922bc6a197b3eec387e":["f225b9b576dc345ee8c27f91147b4afc0350511c"],"f225b9b576dc345ee8c27f91147b4afc0350511c":["7116474e2e390259937401cf928323e0cbc75e60"],"d264f386d864b5751209060e8886ca9845f70469":["c7c73b6560033b6dcc828fbcc94ba9315c20f3c0"],"c7c73b6560033b6dcc828fbcc94ba9315c20f3c0":["e475642767c688ede5728d7918326f70b4e0bf3a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6e764e9a107f93be9fa3c922bc6a197b3eec387e"]},"commit2Childs":{"7116474e2e390259937401cf928323e0cbc75e60":["f225b9b576dc345ee8c27f91147b4afc0350511c"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e475642767c688ede5728d7918326f70b4e0bf3a"],"354983dcdf70c800bf2573d10b54a7391b1dc167":["7116474e2e390259937401cf928323e0cbc75e60"],"e475642767c688ede5728d7918326f70b4e0bf3a":["c7c73b6560033b6dcc828fbcc94ba9315c20f3c0"],"c7c73b6560033b6dcc828fbcc94ba9315c20f3c0":["37a0f60745e53927c4c876cfe5b5a58170f0646c","d264f386d864b5751209060e8886ca9845f70469"],"6e764e9a107f93be9fa3c922bc6a197b3eec387e":["37a0f60745e53927c4c876cfe5b5a58170f0646c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d264f386d864b5751209060e8886ca9845f70469":["354983dcdf70c800bf2573d10b54a7391b1dc167"],"f225b9b576dc345ee8c27f91147b4afc0350511c":["6e764e9a107f93be9fa3c922bc6a197b3eec387e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["37a0f60745e53927c4c876cfe5b5a58170f0646c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}