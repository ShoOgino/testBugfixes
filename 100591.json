{"path":"contrib/queryparser/src/java/org/apache/lucene/queryParser/standard/StandardQueryParser#setLowercaseExpandedTerms(boolean).mjava","commits":[{"id":"e8a848e758754282137f42bf85793c278e250390","date":1249640668,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/queryparser/src/java/org/apache/lucene/queryParser/standard/StandardQueryParser#setLowercaseExpandedTerms(boolean).mjava","pathOld":"contrib/queryparser/src/java/org/apache/lucene/queryParser/original/OriginalQueryParserHelper#setLowercaseExpandedTerms(boolean).mjava","sourceNew":"  /**\n   * Set to <code>true</code> to allow leading wildcard characters.\n   * <p>\n   * When set, <code>*</code> or <code>?</code> are allowed as the first\n   * character of a PrefixQuery and WildcardQuery. Note that this can produce\n   * very slow queries on big indexes.\n   * <p>\n   * Default: false.\n   */\n  public void setLowercaseExpandedTerms(boolean lowercaseExpandedTerms) {\n    LowercaseExpandedTermsAttribute attr= (LowercaseExpandedTermsAttribute) getQueryConfigHandler().getAttribute(LowercaseExpandedTermsAttribute.class);\n    attr.setLowercaseExpandedTerms(lowercaseExpandedTerms);\n  }\n\n","sourceOld":"  /**\n   * Set to <code>true</code> to allow leading wildcard characters.\n   * <p>\n   * When set, <code>*</code> or <code>?</code> are allowed as the first\n   * character of a PrefixQuery and WildcardQuery. Note that this can produce\n   * very slow queries on big indexes.\n   * <p>\n   * Default: false.\n   */\n  public void setLowercaseExpandedTerms(boolean lowercaseExpandedTerms) {\n    LowercaseExpandedTermsAttribute attr= (LowercaseExpandedTermsAttribute) getQueryConfigHandler().getAttribute(LowercaseExpandedTermsAttribute.class);\n    attr.setLowercaseExpandedTerms(lowercaseExpandedTerms);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8d78f014fded44fbde905f4f84cdc21907b371e8","date":1254383623,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/queryparser/src/java/org/apache/lucene/queryParser/standard/StandardQueryParser#setLowercaseExpandedTerms(boolean).mjava","pathOld":"contrib/queryparser/src/java/org/apache/lucene/queryParser/standard/StandardQueryParser#setLowercaseExpandedTerms(boolean).mjava","sourceNew":"  /**\n   * Set to <code>true</code> to allow leading wildcard characters.\n   * <p>\n   * When set, <code>*</code> or <code>?</code> are allowed as the first\n   * character of a PrefixQuery and WildcardQuery. Note that this can produce\n   * very slow queries on big indexes.\n   * <p>\n   * Default: false.\n   */\n  public void setLowercaseExpandedTerms(boolean lowercaseExpandedTerms) {\n    LowercaseExpandedTermsAttribute attr = getQueryConfigHandler().getAttribute(LowercaseExpandedTermsAttribute.class);\n    attr.setLowercaseExpandedTerms(lowercaseExpandedTerms);\n  }\n\n","sourceOld":"  /**\n   * Set to <code>true</code> to allow leading wildcard characters.\n   * <p>\n   * When set, <code>*</code> or <code>?</code> are allowed as the first\n   * character of a PrefixQuery and WildcardQuery. Note that this can produce\n   * very slow queries on big indexes.\n   * <p>\n   * Default: false.\n   */\n  public void setLowercaseExpandedTerms(boolean lowercaseExpandedTerms) {\n    LowercaseExpandedTermsAttribute attr= (LowercaseExpandedTermsAttribute) getQueryConfigHandler().getAttribute(LowercaseExpandedTermsAttribute.class);\n    attr.setLowercaseExpandedTerms(lowercaseExpandedTerms);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/queryparser/src/java/org/apache/lucene/queryParser/standard/StandardQueryParser#setLowercaseExpandedTerms(boolean).mjava","pathOld":"contrib/queryparser/src/java/org/apache/lucene/queryParser/standard/StandardQueryParser#setLowercaseExpandedTerms(boolean).mjava","sourceNew":"  /**\n   * Set to <code>true</code> to allow leading wildcard characters.\n   * <p>\n   * When set, <code>*</code> or <code>?</code> are allowed as the first\n   * character of a PrefixQuery and WildcardQuery. Note that this can produce\n   * very slow queries on big indexes.\n   * <p>\n   * Default: false.\n   */\n  public void setLowercaseExpandedTerms(boolean lowercaseExpandedTerms) {\n    LowercaseExpandedTermsAttribute attr = getQueryConfigHandler().getAttribute(LowercaseExpandedTermsAttribute.class);\n    attr.setLowercaseExpandedTerms(lowercaseExpandedTerms);\n  }\n\n","sourceOld":"  /**\n   * Set to <code>true</code> to allow leading wildcard characters.\n   * <p>\n   * When set, <code>*</code> or <code>?</code> are allowed as the first\n   * character of a PrefixQuery and WildcardQuery. Note that this can produce\n   * very slow queries on big indexes.\n   * <p>\n   * Default: false.\n   */\n  public void setLowercaseExpandedTerms(boolean lowercaseExpandedTerms) {\n    LowercaseExpandedTermsAttribute attr = getQueryConfigHandler().getAttribute(LowercaseExpandedTermsAttribute.class);\n    attr.setLowercaseExpandedTerms(lowercaseExpandedTerms);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e8a848e758754282137f42bf85793c278e250390":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8d78f014fded44fbde905f4f84cdc21907b371e8":["e8a848e758754282137f42bf85793c278e250390"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["8d78f014fded44fbde905f4f84cdc21907b371e8"]},"commit2Childs":{"e8a848e758754282137f42bf85793c278e250390":["8d78f014fded44fbde905f4f84cdc21907b371e8"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e8a848e758754282137f42bf85793c278e250390"],"8d78f014fded44fbde905f4f84cdc21907b371e8":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}