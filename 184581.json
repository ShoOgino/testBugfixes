{"path":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterPerThread#DocumentsWriterPerThread(IndexWriter,String,Directory,Directory,LiveIndexWriterConfig,InfoStream,DocumentsWriterDeleteQueue,FieldInfos.Builder,AtomicLong,boolean).mjava","commits":[{"id":"950882a2bd2a5f9dc16a154871584eaa643d882a","date":1436366563,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterPerThread#DocumentsWriterPerThread(IndexWriter,String,Directory,Directory,LiveIndexWriterConfig,InfoStream,DocumentsWriterDeleteQueue,FieldInfos.Builder,AtomicLong,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterPerThread#DocumentsWriterPerThread(String,Directory,Directory,LiveIndexWriterConfig,InfoStream,DocumentsWriterDeleteQueue,FieldInfos.Builder,AtomicLong,boolean).mjava","sourceNew":"  public DocumentsWriterPerThread(IndexWriter writer, String segmentName, Directory directoryOrig, Directory directory, LiveIndexWriterConfig indexWriterConfig, InfoStream infoStream, DocumentsWriterDeleteQueue deleteQueue,\n                                  FieldInfos.Builder fieldInfos, AtomicLong pendingNumDocs, boolean enableTestPoints) throws IOException {\n    this.indexWriter = writer;\n    this.directoryOrig = directoryOrig;\n    this.directory = new TrackingDirectoryWrapper(directory);\n    this.fieldInfos = fieldInfos;\n    this.indexWriterConfig = indexWriterConfig;\n    this.infoStream = infoStream;\n    this.codec = indexWriterConfig.getCodec();\n    this.docState = new DocState(this, infoStream);\n    this.docState.similarity = indexWriterConfig.getSimilarity();\n    this.pendingNumDocs = pendingNumDocs;\n    bytesUsed = Counter.newCounter();\n    byteBlockAllocator = new DirectTrackingAllocator(bytesUsed);\n    pendingUpdates = new BufferedUpdates();\n    intBlockAllocator = new IntBlockAllocator(bytesUsed);\n    this.deleteQueue = deleteQueue;\n    assert numDocsInRAM == 0 : \"num docs \" + numDocsInRAM;\n    pendingUpdates.clear();\n    deleteSlice = deleteQueue.newSlice();\n   \n    segmentInfo = new SegmentInfo(directoryOrig, Version.LATEST, segmentName, -1, false, codec, Collections.emptyMap(), StringHelper.randomId(), new HashMap<>());\n    assert numDocsInRAM == 0;\n    if (INFO_VERBOSE && infoStream.isEnabled(\"DWPT\")) {\n      infoStream.message(\"DWPT\", Thread.currentThread().getName() + \" init seg=\" + segmentName + \" delQueue=\" + deleteQueue);  \n    }\n    // this should be the last call in the ctor \n    // it really sucks that we need to pull this within the ctor and pass this ref to the chain!\n    consumer = indexWriterConfig.getIndexingChain().getChain(this);\n    this.enableTestPoints = enableTestPoints;\n  }\n\n","sourceOld":"  public DocumentsWriterPerThread(String segmentName, Directory directoryOrig, Directory directory, LiveIndexWriterConfig indexWriterConfig, InfoStream infoStream, DocumentsWriterDeleteQueue deleteQueue,\n                                  FieldInfos.Builder fieldInfos, AtomicLong pendingNumDocs, boolean enableTestPoints) throws IOException {\n    this.directoryOrig = directoryOrig;\n    this.directory = new TrackingDirectoryWrapper(directory);\n    this.fieldInfos = fieldInfos;\n    this.indexWriterConfig = indexWriterConfig;\n    this.infoStream = infoStream;\n    this.codec = indexWriterConfig.getCodec();\n    this.docState = new DocState(this, infoStream);\n    this.docState.similarity = indexWriterConfig.getSimilarity();\n    this.pendingNumDocs = pendingNumDocs;\n    bytesUsed = Counter.newCounter();\n    byteBlockAllocator = new DirectTrackingAllocator(bytesUsed);\n    pendingUpdates = new BufferedUpdates();\n    intBlockAllocator = new IntBlockAllocator(bytesUsed);\n    this.deleteQueue = deleteQueue;\n    assert numDocsInRAM == 0 : \"num docs \" + numDocsInRAM;\n    pendingUpdates.clear();\n    deleteSlice = deleteQueue.newSlice();\n   \n    segmentInfo = new SegmentInfo(directoryOrig, Version.LATEST, segmentName, -1, false, codec, Collections.emptyMap(), StringHelper.randomId(), new HashMap<>());\n    assert numDocsInRAM == 0;\n    if (INFO_VERBOSE && infoStream.isEnabled(\"DWPT\")) {\n      infoStream.message(\"DWPT\", Thread.currentThread().getName() + \" init seg=\" + segmentName + \" delQueue=\" + deleteQueue);  \n    }\n    // this should be the last call in the ctor \n    // it really sucks that we need to pull this within the ctor and pass this ref to the chain!\n    consumer = indexWriterConfig.getIndexingChain().getChain(this);\n    this.enableTestPoints = enableTestPoints;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ceaef6cfc68c8ab22a684192e469a8280f9e6e70","date":1462354657,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterPerThread#DocumentsWriterPerThread(IndexWriter,String,Directory,Directory,LiveIndexWriterConfig,InfoStream,DocumentsWriterDeleteQueue,FieldInfos.Builder,AtomicLong,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterPerThread#DocumentsWriterPerThread(IndexWriter,String,Directory,Directory,LiveIndexWriterConfig,InfoStream,DocumentsWriterDeleteQueue,FieldInfos.Builder,AtomicLong,boolean).mjava","sourceNew":"  public DocumentsWriterPerThread(IndexWriter writer, String segmentName, Directory directoryOrig, Directory directory, LiveIndexWriterConfig indexWriterConfig, InfoStream infoStream, DocumentsWriterDeleteQueue deleteQueue,\n                                  FieldInfos.Builder fieldInfos, AtomicLong pendingNumDocs, boolean enableTestPoints) throws IOException {\n    this.indexWriter = writer;\n    this.directoryOrig = directoryOrig;\n    this.directory = new TrackingDirectoryWrapper(directory);\n    this.fieldInfos = fieldInfos;\n    this.indexWriterConfig = indexWriterConfig;\n    this.infoStream = infoStream;\n    this.codec = indexWriterConfig.getCodec();\n    this.docState = new DocState(this, infoStream);\n    this.docState.similarity = indexWriterConfig.getSimilarity();\n    this.pendingNumDocs = pendingNumDocs;\n    bytesUsed = Counter.newCounter();\n    byteBlockAllocator = new DirectTrackingAllocator(bytesUsed);\n    pendingUpdates = new BufferedUpdates();\n    intBlockAllocator = new IntBlockAllocator(bytesUsed);\n    this.deleteQueue = deleteQueue;\n    assert numDocsInRAM == 0 : \"num docs \" + numDocsInRAM;\n    pendingUpdates.clear();\n    deleteSlice = deleteQueue.newSlice();\n   \n    segmentInfo = new SegmentInfo(directoryOrig, Version.LATEST, segmentName, -1, false, codec, Collections.emptyMap(), StringHelper.randomId(), new HashMap<>(), null);\n    assert numDocsInRAM == 0;\n    if (INFO_VERBOSE && infoStream.isEnabled(\"DWPT\")) {\n      infoStream.message(\"DWPT\", Thread.currentThread().getName() + \" init seg=\" + segmentName + \" delQueue=\" + deleteQueue);  \n    }\n    // this should be the last call in the ctor \n    // it really sucks that we need to pull this within the ctor and pass this ref to the chain!\n    consumer = indexWriterConfig.getIndexingChain().getChain(this);\n    this.enableTestPoints = enableTestPoints;\n  }\n\n","sourceOld":"  public DocumentsWriterPerThread(IndexWriter writer, String segmentName, Directory directoryOrig, Directory directory, LiveIndexWriterConfig indexWriterConfig, InfoStream infoStream, DocumentsWriterDeleteQueue deleteQueue,\n                                  FieldInfos.Builder fieldInfos, AtomicLong pendingNumDocs, boolean enableTestPoints) throws IOException {\n    this.indexWriter = writer;\n    this.directoryOrig = directoryOrig;\n    this.directory = new TrackingDirectoryWrapper(directory);\n    this.fieldInfos = fieldInfos;\n    this.indexWriterConfig = indexWriterConfig;\n    this.infoStream = infoStream;\n    this.codec = indexWriterConfig.getCodec();\n    this.docState = new DocState(this, infoStream);\n    this.docState.similarity = indexWriterConfig.getSimilarity();\n    this.pendingNumDocs = pendingNumDocs;\n    bytesUsed = Counter.newCounter();\n    byteBlockAllocator = new DirectTrackingAllocator(bytesUsed);\n    pendingUpdates = new BufferedUpdates();\n    intBlockAllocator = new IntBlockAllocator(bytesUsed);\n    this.deleteQueue = deleteQueue;\n    assert numDocsInRAM == 0 : \"num docs \" + numDocsInRAM;\n    pendingUpdates.clear();\n    deleteSlice = deleteQueue.newSlice();\n   \n    segmentInfo = new SegmentInfo(directoryOrig, Version.LATEST, segmentName, -1, false, codec, Collections.emptyMap(), StringHelper.randomId(), new HashMap<>());\n    assert numDocsInRAM == 0;\n    if (INFO_VERBOSE && infoStream.isEnabled(\"DWPT\")) {\n      infoStream.message(\"DWPT\", Thread.currentThread().getName() + \" init seg=\" + segmentName + \" delQueue=\" + deleteQueue);  \n    }\n    // this should be the last call in the ctor \n    // it really sucks that we need to pull this within the ctor and pass this ref to the chain!\n    consumer = indexWriterConfig.getIndexingChain().getChain(this);\n    this.enableTestPoints = enableTestPoints;\n  }\n\n","bugFix":null,"bugIntro":["86a0a50d2d14aaee1e635bbec914468551f7f9a2"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3d33e731a93d4b57e662ff094f64f94a745422d4","date":1463128289,"type":3,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterPerThread#DocumentsWriterPerThread(IndexWriter,String,Directory,Directory,LiveIndexWriterConfig,InfoStream,DocumentsWriterDeleteQueue,FieldInfos.Builder,AtomicLong,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterPerThread#DocumentsWriterPerThread(IndexWriter,String,Directory,Directory,LiveIndexWriterConfig,InfoStream,DocumentsWriterDeleteQueue,FieldInfos.Builder,AtomicLong,boolean).mjava","sourceNew":"  public DocumentsWriterPerThread(IndexWriter writer, String segmentName, Directory directoryOrig, Directory directory, LiveIndexWriterConfig indexWriterConfig, InfoStream infoStream, DocumentsWriterDeleteQueue deleteQueue,\n                                  FieldInfos.Builder fieldInfos, AtomicLong pendingNumDocs, boolean enableTestPoints) throws IOException {\n    this.indexWriter = writer;\n    this.directoryOrig = directoryOrig;\n    this.directory = new TrackingDirectoryWrapper(directory);\n    this.fieldInfos = fieldInfos;\n    this.indexWriterConfig = indexWriterConfig;\n    this.infoStream = infoStream;\n    this.codec = indexWriterConfig.getCodec();\n    this.docState = new DocState(this, infoStream);\n    this.docState.similarity = indexWriterConfig.getSimilarity();\n    this.pendingNumDocs = pendingNumDocs;\n    bytesUsed = Counter.newCounter();\n    byteBlockAllocator = new DirectTrackingAllocator(bytesUsed);\n    pendingUpdates = new BufferedUpdates();\n    intBlockAllocator = new IntBlockAllocator(bytesUsed);\n    this.deleteQueue = deleteQueue;\n    assert numDocsInRAM == 0 : \"num docs \" + numDocsInRAM;\n    pendingUpdates.clear();\n    deleteSlice = deleteQueue.newSlice();\n   \n    segmentInfo = new SegmentInfo(directoryOrig, Version.LATEST, segmentName, -1, false, codec, Collections.emptyMap(), StringHelper.randomId(), new HashMap<>(), null);\n    assert numDocsInRAM == 0;\n    if (INFO_VERBOSE && infoStream.isEnabled(\"DWPT\")) {\n      infoStream.message(\"DWPT\", Thread.currentThread().getName() + \" init seg=\" + segmentName + \" delQueue=\" + deleteQueue);  \n    }\n    // this should be the last call in the ctor \n    // it really sucks that we need to pull this within the ctor and pass this ref to the chain!\n    consumer = indexWriterConfig.getIndexingChain().getChain(this);\n    this.enableTestPoints = enableTestPoints;\n  }\n\n","sourceOld":"  public DocumentsWriterPerThread(IndexWriter writer, String segmentName, Directory directoryOrig, Directory directory, LiveIndexWriterConfig indexWriterConfig, InfoStream infoStream, DocumentsWriterDeleteQueue deleteQueue,\n                                  FieldInfos.Builder fieldInfos, AtomicLong pendingNumDocs, boolean enableTestPoints) throws IOException {\n    this.indexWriter = writer;\n    this.directoryOrig = directoryOrig;\n    this.directory = new TrackingDirectoryWrapper(directory);\n    this.fieldInfos = fieldInfos;\n    this.indexWriterConfig = indexWriterConfig;\n    this.infoStream = infoStream;\n    this.codec = indexWriterConfig.getCodec();\n    this.docState = new DocState(this, infoStream);\n    this.docState.similarity = indexWriterConfig.getSimilarity();\n    this.pendingNumDocs = pendingNumDocs;\n    bytesUsed = Counter.newCounter();\n    byteBlockAllocator = new DirectTrackingAllocator(bytesUsed);\n    pendingUpdates = new BufferedUpdates();\n    intBlockAllocator = new IntBlockAllocator(bytesUsed);\n    this.deleteQueue = deleteQueue;\n    assert numDocsInRAM == 0 : \"num docs \" + numDocsInRAM;\n    pendingUpdates.clear();\n    deleteSlice = deleteQueue.newSlice();\n   \n    segmentInfo = new SegmentInfo(directoryOrig, Version.LATEST, segmentName, -1, false, codec, Collections.emptyMap(), StringHelper.randomId(), new HashMap<>());\n    assert numDocsInRAM == 0;\n    if (INFO_VERBOSE && infoStream.isEnabled(\"DWPT\")) {\n      infoStream.message(\"DWPT\", Thread.currentThread().getName() + \" init seg=\" + segmentName + \" delQueue=\" + deleteQueue);  \n    }\n    // this should be the last call in the ctor \n    // it really sucks that we need to pull this within the ctor and pass this ref to the chain!\n    consumer = indexWriterConfig.getIndexingChain().getChain(this);\n    this.enableTestPoints = enableTestPoints;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"0ad30c6a479e764150a3316e57263319775f1df2","date":1463395403,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterPerThread#DocumentsWriterPerThread(IndexWriter,String,Directory,Directory,LiveIndexWriterConfig,InfoStream,DocumentsWriterDeleteQueue,FieldInfos.Builder,AtomicLong,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterPerThread#DocumentsWriterPerThread(IndexWriter,String,Directory,Directory,LiveIndexWriterConfig,InfoStream,DocumentsWriterDeleteQueue,FieldInfos.Builder,AtomicLong,boolean).mjava","sourceNew":"  public DocumentsWriterPerThread(IndexWriter writer, String segmentName, Directory directoryOrig, Directory directory, LiveIndexWriterConfig indexWriterConfig, InfoStream infoStream, DocumentsWriterDeleteQueue deleteQueue,\n                                  FieldInfos.Builder fieldInfos, AtomicLong pendingNumDocs, boolean enableTestPoints) throws IOException {\n    this.indexWriter = writer;\n    this.directoryOrig = directoryOrig;\n    this.directory = new TrackingDirectoryWrapper(directory);\n    this.fieldInfos = fieldInfos;\n    this.indexWriterConfig = indexWriterConfig;\n    this.infoStream = infoStream;\n    this.codec = indexWriterConfig.getCodec();\n    this.docState = new DocState(this, infoStream);\n    this.docState.similarity = indexWriterConfig.getSimilarity();\n    this.pendingNumDocs = pendingNumDocs;\n    bytesUsed = Counter.newCounter();\n    byteBlockAllocator = new DirectTrackingAllocator(bytesUsed);\n    pendingUpdates = new BufferedUpdates();\n    intBlockAllocator = new IntBlockAllocator(bytesUsed);\n    this.deleteQueue = deleteQueue;\n    assert numDocsInRAM == 0 : \"num docs \" + numDocsInRAM;\n    pendingUpdates.clear();\n    deleteSlice = deleteQueue.newSlice();\n   \n    segmentInfo = new SegmentInfo(directoryOrig, Version.LATEST, segmentName, -1, false, codec, Collections.emptyMap(), StringHelper.randomId(), new HashMap<>(), null);\n    assert numDocsInRAM == 0;\n    if (INFO_VERBOSE && infoStream.isEnabled(\"DWPT\")) {\n      infoStream.message(\"DWPT\", Thread.currentThread().getName() + \" init seg=\" + segmentName + \" delQueue=\" + deleteQueue);  \n    }\n    // this should be the last call in the ctor \n    // it really sucks that we need to pull this within the ctor and pass this ref to the chain!\n    consumer = indexWriterConfig.getIndexingChain().getChain(this);\n    this.enableTestPoints = enableTestPoints;\n  }\n\n","sourceOld":"  public DocumentsWriterPerThread(IndexWriter writer, String segmentName, Directory directoryOrig, Directory directory, LiveIndexWriterConfig indexWriterConfig, InfoStream infoStream, DocumentsWriterDeleteQueue deleteQueue,\n                                  FieldInfos.Builder fieldInfos, AtomicLong pendingNumDocs, boolean enableTestPoints) throws IOException {\n    this.indexWriter = writer;\n    this.directoryOrig = directoryOrig;\n    this.directory = new TrackingDirectoryWrapper(directory);\n    this.fieldInfos = fieldInfos;\n    this.indexWriterConfig = indexWriterConfig;\n    this.infoStream = infoStream;\n    this.codec = indexWriterConfig.getCodec();\n    this.docState = new DocState(this, infoStream);\n    this.docState.similarity = indexWriterConfig.getSimilarity();\n    this.pendingNumDocs = pendingNumDocs;\n    bytesUsed = Counter.newCounter();\n    byteBlockAllocator = new DirectTrackingAllocator(bytesUsed);\n    pendingUpdates = new BufferedUpdates();\n    intBlockAllocator = new IntBlockAllocator(bytesUsed);\n    this.deleteQueue = deleteQueue;\n    assert numDocsInRAM == 0 : \"num docs \" + numDocsInRAM;\n    pendingUpdates.clear();\n    deleteSlice = deleteQueue.newSlice();\n   \n    segmentInfo = new SegmentInfo(directoryOrig, Version.LATEST, segmentName, -1, false, codec, Collections.emptyMap(), StringHelper.randomId(), new HashMap<>());\n    assert numDocsInRAM == 0;\n    if (INFO_VERBOSE && infoStream.isEnabled(\"DWPT\")) {\n      infoStream.message(\"DWPT\", Thread.currentThread().getName() + \" init seg=\" + segmentName + \" delQueue=\" + deleteQueue);  \n    }\n    // this should be the last call in the ctor \n    // it really sucks that we need to pull this within the ctor and pass this ref to the chain!\n    consumer = indexWriterConfig.getIndexingChain().getChain(this);\n    this.enableTestPoints = enableTestPoints;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d470c8182e92b264680e34081b75e70a9f2b3c89","date":1463985353,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterPerThread#DocumentsWriterPerThread(IndexWriter,String,Directory,Directory,LiveIndexWriterConfig,InfoStream,DocumentsWriterDeleteQueue,FieldInfos.Builder,AtomicLong,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterPerThread#DocumentsWriterPerThread(IndexWriter,String,Directory,Directory,LiveIndexWriterConfig,InfoStream,DocumentsWriterDeleteQueue,FieldInfos.Builder,AtomicLong,boolean).mjava","sourceNew":"  public DocumentsWriterPerThread(IndexWriter writer, String segmentName, Directory directoryOrig, Directory directory, LiveIndexWriterConfig indexWriterConfig, InfoStream infoStream, DocumentsWriterDeleteQueue deleteQueue,\n                                  FieldInfos.Builder fieldInfos, AtomicLong pendingNumDocs, boolean enableTestPoints) throws IOException {\n    this.indexWriter = writer;\n    this.directoryOrig = directoryOrig;\n    this.directory = new TrackingDirectoryWrapper(directory);\n    this.fieldInfos = fieldInfos;\n    this.indexWriterConfig = indexWriterConfig;\n    this.infoStream = infoStream;\n    this.codec = indexWriterConfig.getCodec();\n    this.docState = new DocState(this, infoStream);\n    this.docState.similarity = indexWriterConfig.getSimilarity();\n    this.pendingNumDocs = pendingNumDocs;\n    bytesUsed = Counter.newCounter();\n    byteBlockAllocator = new DirectTrackingAllocator(bytesUsed);\n    pendingUpdates = new BufferedUpdates();\n    intBlockAllocator = new IntBlockAllocator(bytesUsed);\n    this.deleteQueue = deleteQueue;\n    assert numDocsInRAM == 0 : \"num docs \" + numDocsInRAM;\n    pendingUpdates.clear();\n    deleteSlice = deleteQueue.newSlice();\n   \n    segmentInfo = new SegmentInfo(directoryOrig, Version.LATEST, segmentName, -1, false, codec, Collections.emptyMap(), StringHelper.randomId(), new HashMap<>(), null);\n    assert numDocsInRAM == 0;\n    if (INFO_VERBOSE && infoStream.isEnabled(\"DWPT\")) {\n      infoStream.message(\"DWPT\", Thread.currentThread().getName() + \" init seg=\" + segmentName + \" delQueue=\" + deleteQueue);  \n    }\n    // this should be the last call in the ctor \n    // it really sucks that we need to pull this within the ctor and pass this ref to the chain!\n    consumer = indexWriterConfig.getIndexingChain().getChain(this);\n    this.enableTestPoints = enableTestPoints;\n  }\n\n","sourceOld":"  public DocumentsWriterPerThread(IndexWriter writer, String segmentName, Directory directoryOrig, Directory directory, LiveIndexWriterConfig indexWriterConfig, InfoStream infoStream, DocumentsWriterDeleteQueue deleteQueue,\n                                  FieldInfos.Builder fieldInfos, AtomicLong pendingNumDocs, boolean enableTestPoints) throws IOException {\n    this.indexWriter = writer;\n    this.directoryOrig = directoryOrig;\n    this.directory = new TrackingDirectoryWrapper(directory);\n    this.fieldInfos = fieldInfos;\n    this.indexWriterConfig = indexWriterConfig;\n    this.infoStream = infoStream;\n    this.codec = indexWriterConfig.getCodec();\n    this.docState = new DocState(this, infoStream);\n    this.docState.similarity = indexWriterConfig.getSimilarity();\n    this.pendingNumDocs = pendingNumDocs;\n    bytesUsed = Counter.newCounter();\n    byteBlockAllocator = new DirectTrackingAllocator(bytesUsed);\n    pendingUpdates = new BufferedUpdates();\n    intBlockAllocator = new IntBlockAllocator(bytesUsed);\n    this.deleteQueue = deleteQueue;\n    assert numDocsInRAM == 0 : \"num docs \" + numDocsInRAM;\n    pendingUpdates.clear();\n    deleteSlice = deleteQueue.newSlice();\n   \n    segmentInfo = new SegmentInfo(directoryOrig, Version.LATEST, segmentName, -1, false, codec, Collections.emptyMap(), StringHelper.randomId(), new HashMap<>());\n    assert numDocsInRAM == 0;\n    if (INFO_VERBOSE && infoStream.isEnabled(\"DWPT\")) {\n      infoStream.message(\"DWPT\", Thread.currentThread().getName() + \" init seg=\" + segmentName + \" delQueue=\" + deleteQueue);  \n    }\n    // this should be the last call in the ctor \n    // it really sucks that we need to pull this within the ctor and pass this ref to the chain!\n    consumer = indexWriterConfig.getIndexingChain().getChain(this);\n    this.enableTestPoints = enableTestPoints;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"f492fe129985750df09c8dac738aecc503158bb3","date":1464099630,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterPerThread#DocumentsWriterPerThread(IndexWriter,String,Directory,Directory,LiveIndexWriterConfig,InfoStream,DocumentsWriterDeleteQueue,FieldInfos.Builder,AtomicLong,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterPerThread#DocumentsWriterPerThread(IndexWriter,String,Directory,Directory,LiveIndexWriterConfig,InfoStream,DocumentsWriterDeleteQueue,FieldInfos.Builder,AtomicLong,boolean).mjava","sourceNew":"  public DocumentsWriterPerThread(IndexWriter writer, String segmentName, Directory directoryOrig, Directory directory, LiveIndexWriterConfig indexWriterConfig, InfoStream infoStream, DocumentsWriterDeleteQueue deleteQueue,\n                                  FieldInfos.Builder fieldInfos, AtomicLong pendingNumDocs, boolean enableTestPoints) throws IOException {\n    this.indexWriter = writer;\n    this.directoryOrig = directoryOrig;\n    this.directory = new TrackingDirectoryWrapper(directory);\n    this.fieldInfos = fieldInfos;\n    this.indexWriterConfig = indexWriterConfig;\n    this.infoStream = infoStream;\n    this.codec = indexWriterConfig.getCodec();\n    this.docState = new DocState(this, infoStream);\n    this.docState.similarity = indexWriterConfig.getSimilarity();\n    this.pendingNumDocs = pendingNumDocs;\n    bytesUsed = Counter.newCounter();\n    byteBlockAllocator = new DirectTrackingAllocator(bytesUsed);\n    pendingUpdates = new BufferedUpdates();\n    intBlockAllocator = new IntBlockAllocator(bytesUsed);\n    this.deleteQueue = deleteQueue;\n    assert numDocsInRAM == 0 : \"num docs \" + numDocsInRAM;\n    deleteSlice = deleteQueue.newSlice();\n   \n    segmentInfo = new SegmentInfo(directoryOrig, Version.LATEST, segmentName, -1, false, codec, Collections.emptyMap(), StringHelper.randomId(), new HashMap<>(), null);\n    assert numDocsInRAM == 0;\n    if (INFO_VERBOSE && infoStream.isEnabled(\"DWPT\")) {\n      infoStream.message(\"DWPT\", Thread.currentThread().getName() + \" init seg=\" + segmentName + \" delQueue=\" + deleteQueue);  \n    }\n    // this should be the last call in the ctor \n    // it really sucks that we need to pull this within the ctor and pass this ref to the chain!\n    consumer = indexWriterConfig.getIndexingChain().getChain(this);\n    this.enableTestPoints = enableTestPoints;\n  }\n\n","sourceOld":"  public DocumentsWriterPerThread(IndexWriter writer, String segmentName, Directory directoryOrig, Directory directory, LiveIndexWriterConfig indexWriterConfig, InfoStream infoStream, DocumentsWriterDeleteQueue deleteQueue,\n                                  FieldInfos.Builder fieldInfos, AtomicLong pendingNumDocs, boolean enableTestPoints) throws IOException {\n    this.indexWriter = writer;\n    this.directoryOrig = directoryOrig;\n    this.directory = new TrackingDirectoryWrapper(directory);\n    this.fieldInfos = fieldInfos;\n    this.indexWriterConfig = indexWriterConfig;\n    this.infoStream = infoStream;\n    this.codec = indexWriterConfig.getCodec();\n    this.docState = new DocState(this, infoStream);\n    this.docState.similarity = indexWriterConfig.getSimilarity();\n    this.pendingNumDocs = pendingNumDocs;\n    bytesUsed = Counter.newCounter();\n    byteBlockAllocator = new DirectTrackingAllocator(bytesUsed);\n    pendingUpdates = new BufferedUpdates();\n    intBlockAllocator = new IntBlockAllocator(bytesUsed);\n    this.deleteQueue = deleteQueue;\n    assert numDocsInRAM == 0 : \"num docs \" + numDocsInRAM;\n    pendingUpdates.clear();\n    deleteSlice = deleteQueue.newSlice();\n   \n    segmentInfo = new SegmentInfo(directoryOrig, Version.LATEST, segmentName, -1, false, codec, Collections.emptyMap(), StringHelper.randomId(), new HashMap<>(), null);\n    assert numDocsInRAM == 0;\n    if (INFO_VERBOSE && infoStream.isEnabled(\"DWPT\")) {\n      infoStream.message(\"DWPT\", Thread.currentThread().getName() + \" init seg=\" + segmentName + \" delQueue=\" + deleteQueue);  \n    }\n    // this should be the last call in the ctor \n    // it really sucks that we need to pull this within the ctor and pass this ref to the chain!\n    consumer = indexWriterConfig.getIndexingChain().getChain(this);\n    this.enableTestPoints = enableTestPoints;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"122251c49e5a9fa95f056ea257ae3ab452099fc7","date":1464820065,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterPerThread#DocumentsWriterPerThread(IndexWriter,String,Directory,Directory,LiveIndexWriterConfig,InfoStream,DocumentsWriterDeleteQueue,FieldInfos.Builder,AtomicLong,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterPerThread#DocumentsWriterPerThread(IndexWriter,String,Directory,Directory,LiveIndexWriterConfig,InfoStream,DocumentsWriterDeleteQueue,FieldInfos.Builder,AtomicLong,boolean).mjava","sourceNew":"  public DocumentsWriterPerThread(IndexWriter writer, String segmentName, Directory directoryOrig, Directory directory, LiveIndexWriterConfig indexWriterConfig, InfoStream infoStream, DocumentsWriterDeleteQueue deleteQueue,\n                                  FieldInfos.Builder fieldInfos, AtomicLong pendingNumDocs, boolean enableTestPoints) throws IOException {\n    this.indexWriter = writer;\n    this.directoryOrig = directoryOrig;\n    this.directory = new TrackingDirectoryWrapper(directory);\n    this.fieldInfos = fieldInfos;\n    this.indexWriterConfig = indexWriterConfig;\n    this.infoStream = infoStream;\n    this.codec = indexWriterConfig.getCodec();\n    this.docState = new DocState(this, infoStream);\n    this.docState.similarity = indexWriterConfig.getSimilarity();\n    this.pendingNumDocs = pendingNumDocs;\n    bytesUsed = Counter.newCounter();\n    byteBlockAllocator = new DirectTrackingAllocator(bytesUsed);\n    pendingUpdates = new BufferedUpdates(segmentName);\n    intBlockAllocator = new IntBlockAllocator(bytesUsed);\n    this.deleteQueue = deleteQueue;\n    assert numDocsInRAM == 0 : \"num docs \" + numDocsInRAM;\n    deleteSlice = deleteQueue.newSlice();\n   \n    segmentInfo = new SegmentInfo(directoryOrig, Version.LATEST, segmentName, -1, false, codec, Collections.emptyMap(), StringHelper.randomId(), new HashMap<>(), null);\n    assert numDocsInRAM == 0;\n    if (INFO_VERBOSE && infoStream.isEnabled(\"DWPT\")) {\n      infoStream.message(\"DWPT\", Thread.currentThread().getName() + \" init seg=\" + segmentName + \" delQueue=\" + deleteQueue);  \n    }\n    // this should be the last call in the ctor \n    // it really sucks that we need to pull this within the ctor and pass this ref to the chain!\n    consumer = indexWriterConfig.getIndexingChain().getChain(this);\n    this.enableTestPoints = enableTestPoints;\n  }\n\n","sourceOld":"  public DocumentsWriterPerThread(IndexWriter writer, String segmentName, Directory directoryOrig, Directory directory, LiveIndexWriterConfig indexWriterConfig, InfoStream infoStream, DocumentsWriterDeleteQueue deleteQueue,\n                                  FieldInfos.Builder fieldInfos, AtomicLong pendingNumDocs, boolean enableTestPoints) throws IOException {\n    this.indexWriter = writer;\n    this.directoryOrig = directoryOrig;\n    this.directory = new TrackingDirectoryWrapper(directory);\n    this.fieldInfos = fieldInfos;\n    this.indexWriterConfig = indexWriterConfig;\n    this.infoStream = infoStream;\n    this.codec = indexWriterConfig.getCodec();\n    this.docState = new DocState(this, infoStream);\n    this.docState.similarity = indexWriterConfig.getSimilarity();\n    this.pendingNumDocs = pendingNumDocs;\n    bytesUsed = Counter.newCounter();\n    byteBlockAllocator = new DirectTrackingAllocator(bytesUsed);\n    pendingUpdates = new BufferedUpdates();\n    intBlockAllocator = new IntBlockAllocator(bytesUsed);\n    this.deleteQueue = deleteQueue;\n    assert numDocsInRAM == 0 : \"num docs \" + numDocsInRAM;\n    deleteSlice = deleteQueue.newSlice();\n   \n    segmentInfo = new SegmentInfo(directoryOrig, Version.LATEST, segmentName, -1, false, codec, Collections.emptyMap(), StringHelper.randomId(), new HashMap<>(), null);\n    assert numDocsInRAM == 0;\n    if (INFO_VERBOSE && infoStream.isEnabled(\"DWPT\")) {\n      infoStream.message(\"DWPT\", Thread.currentThread().getName() + \" init seg=\" + segmentName + \" delQueue=\" + deleteQueue);  \n    }\n    // this should be the last call in the ctor \n    // it really sucks that we need to pull this within the ctor and pass this ref to the chain!\n    consumer = indexWriterConfig.getIndexingChain().getChain(this);\n    this.enableTestPoints = enableTestPoints;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b40b1a0adcc6bdcda63b0fbd75dfa2ddd8777e77","date":1464821470,"type":3,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterPerThread#DocumentsWriterPerThread(IndexWriter,String,Directory,Directory,LiveIndexWriterConfig,InfoStream,DocumentsWriterDeleteQueue,FieldInfos.Builder,AtomicLong,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterPerThread#DocumentsWriterPerThread(IndexWriter,String,Directory,Directory,LiveIndexWriterConfig,InfoStream,DocumentsWriterDeleteQueue,FieldInfos.Builder,AtomicLong,boolean).mjava","sourceNew":"  public DocumentsWriterPerThread(IndexWriter writer, String segmentName, Directory directoryOrig, Directory directory, LiveIndexWriterConfig indexWriterConfig, InfoStream infoStream, DocumentsWriterDeleteQueue deleteQueue,\n                                  FieldInfos.Builder fieldInfos, AtomicLong pendingNumDocs, boolean enableTestPoints) throws IOException {\n    this.indexWriter = writer;\n    this.directoryOrig = directoryOrig;\n    this.directory = new TrackingDirectoryWrapper(directory);\n    this.fieldInfos = fieldInfos;\n    this.indexWriterConfig = indexWriterConfig;\n    this.infoStream = infoStream;\n    this.codec = indexWriterConfig.getCodec();\n    this.docState = new DocState(this, infoStream);\n    this.docState.similarity = indexWriterConfig.getSimilarity();\n    this.pendingNumDocs = pendingNumDocs;\n    bytesUsed = Counter.newCounter();\n    byteBlockAllocator = new DirectTrackingAllocator(bytesUsed);\n    pendingUpdates = new BufferedUpdates(segmentName);\n    intBlockAllocator = new IntBlockAllocator(bytesUsed);\n    this.deleteQueue = deleteQueue;\n    assert numDocsInRAM == 0 : \"num docs \" + numDocsInRAM;\n    deleteSlice = deleteQueue.newSlice();\n   \n    segmentInfo = new SegmentInfo(directoryOrig, Version.LATEST, segmentName, -1, false, codec, Collections.emptyMap(), StringHelper.randomId(), new HashMap<>(), null);\n    assert numDocsInRAM == 0;\n    if (INFO_VERBOSE && infoStream.isEnabled(\"DWPT\")) {\n      infoStream.message(\"DWPT\", Thread.currentThread().getName() + \" init seg=\" + segmentName + \" delQueue=\" + deleteQueue);  \n    }\n    // this should be the last call in the ctor \n    // it really sucks that we need to pull this within the ctor and pass this ref to the chain!\n    consumer = indexWriterConfig.getIndexingChain().getChain(this);\n    this.enableTestPoints = enableTestPoints;\n  }\n\n","sourceOld":"  public DocumentsWriterPerThread(IndexWriter writer, String segmentName, Directory directoryOrig, Directory directory, LiveIndexWriterConfig indexWriterConfig, InfoStream infoStream, DocumentsWriterDeleteQueue deleteQueue,\n                                  FieldInfos.Builder fieldInfos, AtomicLong pendingNumDocs, boolean enableTestPoints) throws IOException {\n    this.indexWriter = writer;\n    this.directoryOrig = directoryOrig;\n    this.directory = new TrackingDirectoryWrapper(directory);\n    this.fieldInfos = fieldInfos;\n    this.indexWriterConfig = indexWriterConfig;\n    this.infoStream = infoStream;\n    this.codec = indexWriterConfig.getCodec();\n    this.docState = new DocState(this, infoStream);\n    this.docState.similarity = indexWriterConfig.getSimilarity();\n    this.pendingNumDocs = pendingNumDocs;\n    bytesUsed = Counter.newCounter();\n    byteBlockAllocator = new DirectTrackingAllocator(bytesUsed);\n    pendingUpdates = new BufferedUpdates();\n    intBlockAllocator = new IntBlockAllocator(bytesUsed);\n    this.deleteQueue = deleteQueue;\n    assert numDocsInRAM == 0 : \"num docs \" + numDocsInRAM;\n    deleteSlice = deleteQueue.newSlice();\n   \n    segmentInfo = new SegmentInfo(directoryOrig, Version.LATEST, segmentName, -1, false, codec, Collections.emptyMap(), StringHelper.randomId(), new HashMap<>(), null);\n    assert numDocsInRAM == 0;\n    if (INFO_VERBOSE && infoStream.isEnabled(\"DWPT\")) {\n      infoStream.message(\"DWPT\", Thread.currentThread().getName() + \" init seg=\" + segmentName + \" delQueue=\" + deleteQueue);  \n    }\n    // this should be the last call in the ctor \n    // it really sucks that we need to pull this within the ctor and pass this ref to the chain!\n    consumer = indexWriterConfig.getIndexingChain().getChain(this);\n    this.enableTestPoints = enableTestPoints;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"6483e4260c08168709c02238ae083a51519a28dd","date":1465117546,"type":3,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterPerThread#DocumentsWriterPerThread(IndexWriter,String,Directory,Directory,LiveIndexWriterConfig,InfoStream,DocumentsWriterDeleteQueue,FieldInfos.Builder,AtomicLong,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterPerThread#DocumentsWriterPerThread(IndexWriter,String,Directory,Directory,LiveIndexWriterConfig,InfoStream,DocumentsWriterDeleteQueue,FieldInfos.Builder,AtomicLong,boolean).mjava","sourceNew":"  public DocumentsWriterPerThread(IndexWriter writer, String segmentName, Directory directoryOrig, Directory directory, LiveIndexWriterConfig indexWriterConfig, InfoStream infoStream, DocumentsWriterDeleteQueue deleteQueue,\n                                  FieldInfos.Builder fieldInfos, AtomicLong pendingNumDocs, boolean enableTestPoints) throws IOException {\n    this.indexWriter = writer;\n    this.directoryOrig = directoryOrig;\n    this.directory = new TrackingDirectoryWrapper(directory);\n    this.fieldInfos = fieldInfos;\n    this.indexWriterConfig = indexWriterConfig;\n    this.infoStream = infoStream;\n    this.codec = indexWriterConfig.getCodec();\n    this.docState = new DocState(this, infoStream);\n    this.docState.similarity = indexWriterConfig.getSimilarity();\n    this.pendingNumDocs = pendingNumDocs;\n    bytesUsed = Counter.newCounter();\n    byteBlockAllocator = new DirectTrackingAllocator(bytesUsed);\n    pendingUpdates = new BufferedUpdates(segmentName);\n    intBlockAllocator = new IntBlockAllocator(bytesUsed);\n    this.deleteQueue = deleteQueue;\n    assert numDocsInRAM == 0 : \"num docs \" + numDocsInRAM;\n    deleteSlice = deleteQueue.newSlice();\n   \n    segmentInfo = new SegmentInfo(directoryOrig, Version.LATEST, segmentName, -1, false, codec, Collections.emptyMap(), StringHelper.randomId(), new HashMap<>(), null);\n    assert numDocsInRAM == 0;\n    if (INFO_VERBOSE && infoStream.isEnabled(\"DWPT\")) {\n      infoStream.message(\"DWPT\", Thread.currentThread().getName() + \" init seg=\" + segmentName + \" delQueue=\" + deleteQueue);  \n    }\n    // this should be the last call in the ctor \n    // it really sucks that we need to pull this within the ctor and pass this ref to the chain!\n    consumer = indexWriterConfig.getIndexingChain().getChain(this);\n    this.enableTestPoints = enableTestPoints;\n  }\n\n","sourceOld":"  public DocumentsWriterPerThread(IndexWriter writer, String segmentName, Directory directoryOrig, Directory directory, LiveIndexWriterConfig indexWriterConfig, InfoStream infoStream, DocumentsWriterDeleteQueue deleteQueue,\n                                  FieldInfos.Builder fieldInfos, AtomicLong pendingNumDocs, boolean enableTestPoints) throws IOException {\n    this.indexWriter = writer;\n    this.directoryOrig = directoryOrig;\n    this.directory = new TrackingDirectoryWrapper(directory);\n    this.fieldInfos = fieldInfos;\n    this.indexWriterConfig = indexWriterConfig;\n    this.infoStream = infoStream;\n    this.codec = indexWriterConfig.getCodec();\n    this.docState = new DocState(this, infoStream);\n    this.docState.similarity = indexWriterConfig.getSimilarity();\n    this.pendingNumDocs = pendingNumDocs;\n    bytesUsed = Counter.newCounter();\n    byteBlockAllocator = new DirectTrackingAllocator(bytesUsed);\n    pendingUpdates = new BufferedUpdates();\n    intBlockAllocator = new IntBlockAllocator(bytesUsed);\n    this.deleteQueue = deleteQueue;\n    assert numDocsInRAM == 0 : \"num docs \" + numDocsInRAM;\n    pendingUpdates.clear();\n    deleteSlice = deleteQueue.newSlice();\n   \n    segmentInfo = new SegmentInfo(directoryOrig, Version.LATEST, segmentName, -1, false, codec, Collections.emptyMap(), StringHelper.randomId(), new HashMap<>(), null);\n    assert numDocsInRAM == 0;\n    if (INFO_VERBOSE && infoStream.isEnabled(\"DWPT\")) {\n      infoStream.message(\"DWPT\", Thread.currentThread().getName() + \" init seg=\" + segmentName + \" delQueue=\" + deleteQueue);  \n    }\n    // this should be the last call in the ctor \n    // it really sucks that we need to pull this within the ctor and pass this ref to the chain!\n    consumer = indexWriterConfig.getIndexingChain().getChain(this);\n    this.enableTestPoints = enableTestPoints;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"191128ac5b85671b1671e2c857437694283b6ebf","date":1465297861,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterPerThread#DocumentsWriterPerThread(IndexWriter,String,Directory,Directory,LiveIndexWriterConfig,InfoStream,DocumentsWriterDeleteQueue,FieldInfos.Builder,AtomicLong,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterPerThread#DocumentsWriterPerThread(IndexWriter,String,Directory,Directory,LiveIndexWriterConfig,InfoStream,DocumentsWriterDeleteQueue,FieldInfos.Builder,AtomicLong,boolean).mjava","sourceNew":"  public DocumentsWriterPerThread(IndexWriter writer, String segmentName, Directory directoryOrig, Directory directory, LiveIndexWriterConfig indexWriterConfig, InfoStream infoStream, DocumentsWriterDeleteQueue deleteQueue,\n                                  FieldInfos.Builder fieldInfos, AtomicLong pendingNumDocs, boolean enableTestPoints) throws IOException {\n    this.indexWriter = writer;\n    this.directoryOrig = directoryOrig;\n    this.directory = new TrackingDirectoryWrapper(directory);\n    this.fieldInfos = fieldInfos;\n    this.indexWriterConfig = indexWriterConfig;\n    this.infoStream = infoStream;\n    this.codec = indexWriterConfig.getCodec();\n    this.docState = new DocState(this, infoStream);\n    this.docState.similarity = indexWriterConfig.getSimilarity();\n    this.pendingNumDocs = pendingNumDocs;\n    bytesUsed = Counter.newCounter();\n    byteBlockAllocator = new DirectTrackingAllocator(bytesUsed);\n    pendingUpdates = new BufferedUpdates(segmentName);\n    intBlockAllocator = new IntBlockAllocator(bytesUsed);\n    this.deleteQueue = deleteQueue;\n    assert numDocsInRAM == 0 : \"num docs \" + numDocsInRAM;\n    deleteSlice = deleteQueue.newSlice();\n   \n    segmentInfo = new SegmentInfo(directoryOrig, Version.LATEST, segmentName, -1, false, codec, Collections.emptyMap(), StringHelper.randomId(), new HashMap<>(), null);\n    assert numDocsInRAM == 0;\n    if (INFO_VERBOSE && infoStream.isEnabled(\"DWPT\")) {\n      infoStream.message(\"DWPT\", Thread.currentThread().getName() + \" init seg=\" + segmentName + \" delQueue=\" + deleteQueue);  \n    }\n    // this should be the last call in the ctor \n    // it really sucks that we need to pull this within the ctor and pass this ref to the chain!\n    consumer = indexWriterConfig.getIndexingChain().getChain(this);\n    this.enableTestPoints = enableTestPoints;\n  }\n\n","sourceOld":"  public DocumentsWriterPerThread(IndexWriter writer, String segmentName, Directory directoryOrig, Directory directory, LiveIndexWriterConfig indexWriterConfig, InfoStream infoStream, DocumentsWriterDeleteQueue deleteQueue,\n                                  FieldInfos.Builder fieldInfos, AtomicLong pendingNumDocs, boolean enableTestPoints) throws IOException {\n    this.indexWriter = writer;\n    this.directoryOrig = directoryOrig;\n    this.directory = new TrackingDirectoryWrapper(directory);\n    this.fieldInfos = fieldInfos;\n    this.indexWriterConfig = indexWriterConfig;\n    this.infoStream = infoStream;\n    this.codec = indexWriterConfig.getCodec();\n    this.docState = new DocState(this, infoStream);\n    this.docState.similarity = indexWriterConfig.getSimilarity();\n    this.pendingNumDocs = pendingNumDocs;\n    bytesUsed = Counter.newCounter();\n    byteBlockAllocator = new DirectTrackingAllocator(bytesUsed);\n    pendingUpdates = new BufferedUpdates();\n    intBlockAllocator = new IntBlockAllocator(bytesUsed);\n    this.deleteQueue = deleteQueue;\n    assert numDocsInRAM == 0 : \"num docs \" + numDocsInRAM;\n    pendingUpdates.clear();\n    deleteSlice = deleteQueue.newSlice();\n   \n    segmentInfo = new SegmentInfo(directoryOrig, Version.LATEST, segmentName, -1, false, codec, Collections.emptyMap(), StringHelper.randomId(), new HashMap<>(), null);\n    assert numDocsInRAM == 0;\n    if (INFO_VERBOSE && infoStream.isEnabled(\"DWPT\")) {\n      infoStream.message(\"DWPT\", Thread.currentThread().getName() + \" init seg=\" + segmentName + \" delQueue=\" + deleteQueue);  \n    }\n    // this should be the last call in the ctor \n    // it really sucks that we need to pull this within the ctor and pass this ref to the chain!\n    consumer = indexWriterConfig.getIndexingChain().getChain(this);\n    this.enableTestPoints = enableTestPoints;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterPerThread#DocumentsWriterPerThread(IndexWriter,String,Directory,Directory,LiveIndexWriterConfig,InfoStream,DocumentsWriterDeleteQueue,FieldInfos.Builder,AtomicLong,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterPerThread#DocumentsWriterPerThread(IndexWriter,String,Directory,Directory,LiveIndexWriterConfig,InfoStream,DocumentsWriterDeleteQueue,FieldInfos.Builder,AtomicLong,boolean).mjava","sourceNew":"  public DocumentsWriterPerThread(IndexWriter writer, String segmentName, Directory directoryOrig, Directory directory, LiveIndexWriterConfig indexWriterConfig, InfoStream infoStream, DocumentsWriterDeleteQueue deleteQueue,\n                                  FieldInfos.Builder fieldInfos, AtomicLong pendingNumDocs, boolean enableTestPoints) throws IOException {\n    this.indexWriter = writer;\n    this.directoryOrig = directoryOrig;\n    this.directory = new TrackingDirectoryWrapper(directory);\n    this.fieldInfos = fieldInfos;\n    this.indexWriterConfig = indexWriterConfig;\n    this.infoStream = infoStream;\n    this.codec = indexWriterConfig.getCodec();\n    this.docState = new DocState(this, infoStream);\n    this.docState.similarity = indexWriterConfig.getSimilarity();\n    this.pendingNumDocs = pendingNumDocs;\n    bytesUsed = Counter.newCounter();\n    byteBlockAllocator = new DirectTrackingAllocator(bytesUsed);\n    pendingUpdates = new BufferedUpdates(segmentName);\n    intBlockAllocator = new IntBlockAllocator(bytesUsed);\n    this.deleteQueue = deleteQueue;\n    assert numDocsInRAM == 0 : \"num docs \" + numDocsInRAM;\n    deleteSlice = deleteQueue.newSlice();\n   \n    segmentInfo = new SegmentInfo(directoryOrig, Version.LATEST, segmentName, -1, false, codec, Collections.emptyMap(), StringHelper.randomId(), new HashMap<>(), null);\n    assert numDocsInRAM == 0;\n    if (INFO_VERBOSE && infoStream.isEnabled(\"DWPT\")) {\n      infoStream.message(\"DWPT\", Thread.currentThread().getName() + \" init seg=\" + segmentName + \" delQueue=\" + deleteQueue);  \n    }\n    // this should be the last call in the ctor \n    // it really sucks that we need to pull this within the ctor and pass this ref to the chain!\n    consumer = indexWriterConfig.getIndexingChain().getChain(this);\n    this.enableTestPoints = enableTestPoints;\n  }\n\n","sourceOld":"  public DocumentsWriterPerThread(IndexWriter writer, String segmentName, Directory directoryOrig, Directory directory, LiveIndexWriterConfig indexWriterConfig, InfoStream infoStream, DocumentsWriterDeleteQueue deleteQueue,\n                                  FieldInfos.Builder fieldInfos, AtomicLong pendingNumDocs, boolean enableTestPoints) throws IOException {\n    this.indexWriter = writer;\n    this.directoryOrig = directoryOrig;\n    this.directory = new TrackingDirectoryWrapper(directory);\n    this.fieldInfos = fieldInfos;\n    this.indexWriterConfig = indexWriterConfig;\n    this.infoStream = infoStream;\n    this.codec = indexWriterConfig.getCodec();\n    this.docState = new DocState(this, infoStream);\n    this.docState.similarity = indexWriterConfig.getSimilarity();\n    this.pendingNumDocs = pendingNumDocs;\n    bytesUsed = Counter.newCounter();\n    byteBlockAllocator = new DirectTrackingAllocator(bytesUsed);\n    pendingUpdates = new BufferedUpdates();\n    intBlockAllocator = new IntBlockAllocator(bytesUsed);\n    this.deleteQueue = deleteQueue;\n    assert numDocsInRAM == 0 : \"num docs \" + numDocsInRAM;\n    pendingUpdates.clear();\n    deleteSlice = deleteQueue.newSlice();\n   \n    segmentInfo = new SegmentInfo(directoryOrig, Version.LATEST, segmentName, -1, false, codec, Collections.emptyMap(), StringHelper.randomId(), new HashMap<>());\n    assert numDocsInRAM == 0;\n    if (INFO_VERBOSE && infoStream.isEnabled(\"DWPT\")) {\n      infoStream.message(\"DWPT\", Thread.currentThread().getName() + \" init seg=\" + segmentName + \" delQueue=\" + deleteQueue);  \n    }\n    // this should be the last call in the ctor \n    // it really sucks that we need to pull this within the ctor and pass this ref to the chain!\n    consumer = indexWriterConfig.getIndexingChain().getChain(this);\n    this.enableTestPoints = enableTestPoints;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"86a0a50d2d14aaee1e635bbec914468551f7f9a2","date":1482234306,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterPerThread#DocumentsWriterPerThread(IndexWriter,String,Directory,Directory,LiveIndexWriterConfig,InfoStream,DocumentsWriterDeleteQueue,FieldInfos.Builder,AtomicLong,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterPerThread#DocumentsWriterPerThread(IndexWriter,String,Directory,Directory,LiveIndexWriterConfig,InfoStream,DocumentsWriterDeleteQueue,FieldInfos.Builder,AtomicLong,boolean).mjava","sourceNew":"  public DocumentsWriterPerThread(IndexWriter writer, String segmentName, Directory directoryOrig, Directory directory, LiveIndexWriterConfig indexWriterConfig, InfoStream infoStream, DocumentsWriterDeleteQueue deleteQueue,\n                                  FieldInfos.Builder fieldInfos, AtomicLong pendingNumDocs, boolean enableTestPoints) throws IOException {\n    this.indexWriter = writer;\n    this.directoryOrig = directoryOrig;\n    this.directory = new TrackingDirectoryWrapper(directory);\n    this.fieldInfos = fieldInfos;\n    this.indexWriterConfig = indexWriterConfig;\n    this.infoStream = infoStream;\n    this.codec = indexWriterConfig.getCodec();\n    this.docState = new DocState(this, infoStream);\n    this.docState.similarity = indexWriterConfig.getSimilarity();\n    this.pendingNumDocs = pendingNumDocs;\n    bytesUsed = Counter.newCounter();\n    byteBlockAllocator = new DirectTrackingAllocator(bytesUsed);\n    pendingUpdates = new BufferedUpdates(segmentName);\n    intBlockAllocator = new IntBlockAllocator(bytesUsed);\n    this.deleteQueue = deleteQueue;\n    assert numDocsInRAM == 0 : \"num docs \" + numDocsInRAM;\n    deleteSlice = deleteQueue.newSlice();\n   \n    segmentInfo = new SegmentInfo(directoryOrig, Version.LATEST, segmentName, -1, false, codec, Collections.emptyMap(), StringHelper.randomId(), new HashMap<>(), indexWriterConfig.getIndexSort());\n    assert numDocsInRAM == 0;\n    if (INFO_VERBOSE && infoStream.isEnabled(\"DWPT\")) {\n      infoStream.message(\"DWPT\", Thread.currentThread().getName() + \" init seg=\" + segmentName + \" delQueue=\" + deleteQueue);  \n    }\n    // this should be the last call in the ctor \n    // it really sucks that we need to pull this within the ctor and pass this ref to the chain!\n    consumer = indexWriterConfig.getIndexingChain().getChain(this);\n    this.enableTestPoints = enableTestPoints;\n  }\n\n","sourceOld":"  public DocumentsWriterPerThread(IndexWriter writer, String segmentName, Directory directoryOrig, Directory directory, LiveIndexWriterConfig indexWriterConfig, InfoStream infoStream, DocumentsWriterDeleteQueue deleteQueue,\n                                  FieldInfos.Builder fieldInfos, AtomicLong pendingNumDocs, boolean enableTestPoints) throws IOException {\n    this.indexWriter = writer;\n    this.directoryOrig = directoryOrig;\n    this.directory = new TrackingDirectoryWrapper(directory);\n    this.fieldInfos = fieldInfos;\n    this.indexWriterConfig = indexWriterConfig;\n    this.infoStream = infoStream;\n    this.codec = indexWriterConfig.getCodec();\n    this.docState = new DocState(this, infoStream);\n    this.docState.similarity = indexWriterConfig.getSimilarity();\n    this.pendingNumDocs = pendingNumDocs;\n    bytesUsed = Counter.newCounter();\n    byteBlockAllocator = new DirectTrackingAllocator(bytesUsed);\n    pendingUpdates = new BufferedUpdates(segmentName);\n    intBlockAllocator = new IntBlockAllocator(bytesUsed);\n    this.deleteQueue = deleteQueue;\n    assert numDocsInRAM == 0 : \"num docs \" + numDocsInRAM;\n    deleteSlice = deleteQueue.newSlice();\n   \n    segmentInfo = new SegmentInfo(directoryOrig, Version.LATEST, segmentName, -1, false, codec, Collections.emptyMap(), StringHelper.randomId(), new HashMap<>(), null);\n    assert numDocsInRAM == 0;\n    if (INFO_VERBOSE && infoStream.isEnabled(\"DWPT\")) {\n      infoStream.message(\"DWPT\", Thread.currentThread().getName() + \" init seg=\" + segmentName + \" delQueue=\" + deleteQueue);  \n    }\n    // this should be the last call in the ctor \n    // it really sucks that we need to pull this within the ctor and pass this ref to the chain!\n    consumer = indexWriterConfig.getIndexingChain().getChain(this);\n    this.enableTestPoints = enableTestPoints;\n  }\n\n","bugFix":["ceaef6cfc68c8ab22a684192e469a8280f9e6e70"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf","date":1482251961,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterPerThread#DocumentsWriterPerThread(IndexWriter,String,Directory,Directory,LiveIndexWriterConfig,InfoStream,DocumentsWriterDeleteQueue,FieldInfos.Builder,AtomicLong,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterPerThread#DocumentsWriterPerThread(IndexWriter,String,Directory,Directory,LiveIndexWriterConfig,InfoStream,DocumentsWriterDeleteQueue,FieldInfos.Builder,AtomicLong,boolean).mjava","sourceNew":"  public DocumentsWriterPerThread(IndexWriter writer, String segmentName, Directory directoryOrig, Directory directory, LiveIndexWriterConfig indexWriterConfig, InfoStream infoStream, DocumentsWriterDeleteQueue deleteQueue,\n                                  FieldInfos.Builder fieldInfos, AtomicLong pendingNumDocs, boolean enableTestPoints) throws IOException {\n    this.indexWriter = writer;\n    this.directoryOrig = directoryOrig;\n    this.directory = new TrackingDirectoryWrapper(directory);\n    this.fieldInfos = fieldInfos;\n    this.indexWriterConfig = indexWriterConfig;\n    this.infoStream = infoStream;\n    this.codec = indexWriterConfig.getCodec();\n    this.docState = new DocState(this, infoStream);\n    this.docState.similarity = indexWriterConfig.getSimilarity();\n    this.pendingNumDocs = pendingNumDocs;\n    bytesUsed = Counter.newCounter();\n    byteBlockAllocator = new DirectTrackingAllocator(bytesUsed);\n    pendingUpdates = new BufferedUpdates(segmentName);\n    intBlockAllocator = new IntBlockAllocator(bytesUsed);\n    this.deleteQueue = deleteQueue;\n    assert numDocsInRAM == 0 : \"num docs \" + numDocsInRAM;\n    deleteSlice = deleteQueue.newSlice();\n   \n    segmentInfo = new SegmentInfo(directoryOrig, Version.LATEST, segmentName, -1, false, codec, Collections.emptyMap(), StringHelper.randomId(), new HashMap<>(), indexWriterConfig.getIndexSort());\n    assert numDocsInRAM == 0;\n    if (INFO_VERBOSE && infoStream.isEnabled(\"DWPT\")) {\n      infoStream.message(\"DWPT\", Thread.currentThread().getName() + \" init seg=\" + segmentName + \" delQueue=\" + deleteQueue);  \n    }\n    // this should be the last call in the ctor \n    // it really sucks that we need to pull this within the ctor and pass this ref to the chain!\n    consumer = indexWriterConfig.getIndexingChain().getChain(this);\n    this.enableTestPoints = enableTestPoints;\n  }\n\n","sourceOld":"  public DocumentsWriterPerThread(IndexWriter writer, String segmentName, Directory directoryOrig, Directory directory, LiveIndexWriterConfig indexWriterConfig, InfoStream infoStream, DocumentsWriterDeleteQueue deleteQueue,\n                                  FieldInfos.Builder fieldInfos, AtomicLong pendingNumDocs, boolean enableTestPoints) throws IOException {\n    this.indexWriter = writer;\n    this.directoryOrig = directoryOrig;\n    this.directory = new TrackingDirectoryWrapper(directory);\n    this.fieldInfos = fieldInfos;\n    this.indexWriterConfig = indexWriterConfig;\n    this.infoStream = infoStream;\n    this.codec = indexWriterConfig.getCodec();\n    this.docState = new DocState(this, infoStream);\n    this.docState.similarity = indexWriterConfig.getSimilarity();\n    this.pendingNumDocs = pendingNumDocs;\n    bytesUsed = Counter.newCounter();\n    byteBlockAllocator = new DirectTrackingAllocator(bytesUsed);\n    pendingUpdates = new BufferedUpdates(segmentName);\n    intBlockAllocator = new IntBlockAllocator(bytesUsed);\n    this.deleteQueue = deleteQueue;\n    assert numDocsInRAM == 0 : \"num docs \" + numDocsInRAM;\n    deleteSlice = deleteQueue.newSlice();\n   \n    segmentInfo = new SegmentInfo(directoryOrig, Version.LATEST, segmentName, -1, false, codec, Collections.emptyMap(), StringHelper.randomId(), new HashMap<>(), null);\n    assert numDocsInRAM == 0;\n    if (INFO_VERBOSE && infoStream.isEnabled(\"DWPT\")) {\n      infoStream.message(\"DWPT\", Thread.currentThread().getName() + \" init seg=\" + segmentName + \" delQueue=\" + deleteQueue);  \n    }\n    // this should be the last call in the ctor \n    // it really sucks that we need to pull this within the ctor and pass this ref to the chain!\n    consumer = indexWriterConfig.getIndexingChain().getChain(this);\n    this.enableTestPoints = enableTestPoints;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"31741cf1390044e38a2ec3127cf302ba841bfd75","date":1491292636,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterPerThread#DocumentsWriterPerThread(IndexWriter,String,Directory,Directory,LiveIndexWriterConfig,InfoStream,DocumentsWriterDeleteQueue,FieldInfos.Builder,AtomicLong,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterPerThread#DocumentsWriterPerThread(IndexWriter,String,Directory,Directory,LiveIndexWriterConfig,InfoStream,DocumentsWriterDeleteQueue,FieldInfos.Builder,AtomicLong,boolean).mjava","sourceNew":"  public DocumentsWriterPerThread(IndexWriter writer, String segmentName, Directory directoryOrig, Directory directory, LiveIndexWriterConfig indexWriterConfig, InfoStream infoStream, DocumentsWriterDeleteQueue deleteQueue,\n                                  FieldInfos.Builder fieldInfos, AtomicLong pendingNumDocs, boolean enableTestPoints) throws IOException {\n    this.indexWriter = writer;\n    this.directoryOrig = directoryOrig;\n    this.directory = new TrackingDirectoryWrapper(directory);\n    this.fieldInfos = fieldInfos;\n    this.indexWriterConfig = indexWriterConfig;\n    this.infoStream = infoStream;\n    this.codec = indexWriterConfig.getCodec();\n    this.docState = new DocState(this, infoStream);\n    this.docState.similarity = indexWriterConfig.getSimilarity();\n    this.pendingNumDocs = pendingNumDocs;\n    bytesUsed = Counter.newCounter();\n    byteBlockAllocator = new DirectTrackingAllocator(bytesUsed);\n    pendingUpdates = new BufferedUpdates(segmentName);\n    intBlockAllocator = new IntBlockAllocator(bytesUsed);\n    this.deleteQueue = deleteQueue;\n    assert numDocsInRAM == 0 : \"num docs \" + numDocsInRAM;\n    deleteSlice = deleteQueue.newSlice();\n   \n    segmentInfo = new SegmentInfo(directoryOrig, Version.LATEST, Version.LATEST, segmentName, -1, false, codec, Collections.emptyMap(), StringHelper.randomId(), new HashMap<>(), indexWriterConfig.getIndexSort());\n    assert numDocsInRAM == 0;\n    if (INFO_VERBOSE && infoStream.isEnabled(\"DWPT\")) {\n      infoStream.message(\"DWPT\", Thread.currentThread().getName() + \" init seg=\" + segmentName + \" delQueue=\" + deleteQueue);  \n    }\n    // this should be the last call in the ctor \n    // it really sucks that we need to pull this within the ctor and pass this ref to the chain!\n    consumer = indexWriterConfig.getIndexingChain().getChain(this);\n    this.enableTestPoints = enableTestPoints;\n  }\n\n","sourceOld":"  public DocumentsWriterPerThread(IndexWriter writer, String segmentName, Directory directoryOrig, Directory directory, LiveIndexWriterConfig indexWriterConfig, InfoStream infoStream, DocumentsWriterDeleteQueue deleteQueue,\n                                  FieldInfos.Builder fieldInfos, AtomicLong pendingNumDocs, boolean enableTestPoints) throws IOException {\n    this.indexWriter = writer;\n    this.directoryOrig = directoryOrig;\n    this.directory = new TrackingDirectoryWrapper(directory);\n    this.fieldInfos = fieldInfos;\n    this.indexWriterConfig = indexWriterConfig;\n    this.infoStream = infoStream;\n    this.codec = indexWriterConfig.getCodec();\n    this.docState = new DocState(this, infoStream);\n    this.docState.similarity = indexWriterConfig.getSimilarity();\n    this.pendingNumDocs = pendingNumDocs;\n    bytesUsed = Counter.newCounter();\n    byteBlockAllocator = new DirectTrackingAllocator(bytesUsed);\n    pendingUpdates = new BufferedUpdates(segmentName);\n    intBlockAllocator = new IntBlockAllocator(bytesUsed);\n    this.deleteQueue = deleteQueue;\n    assert numDocsInRAM == 0 : \"num docs \" + numDocsInRAM;\n    deleteSlice = deleteQueue.newSlice();\n   \n    segmentInfo = new SegmentInfo(directoryOrig, Version.LATEST, segmentName, -1, false, codec, Collections.emptyMap(), StringHelper.randomId(), new HashMap<>(), indexWriterConfig.getIndexSort());\n    assert numDocsInRAM == 0;\n    if (INFO_VERBOSE && infoStream.isEnabled(\"DWPT\")) {\n      infoStream.message(\"DWPT\", Thread.currentThread().getName() + \" init seg=\" + segmentName + \" delQueue=\" + deleteQueue);  \n    }\n    // this should be the last call in the ctor \n    // it really sucks that we need to pull this within the ctor and pass this ref to the chain!\n    consumer = indexWriterConfig.getIndexingChain().getChain(this);\n    this.enableTestPoints = enableTestPoints;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"92212fd254551a0b1156aafc3a1a6ed1a43932ad","date":1491296431,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterPerThread#DocumentsWriterPerThread(IndexWriter,String,Directory,Directory,LiveIndexWriterConfig,InfoStream,DocumentsWriterDeleteQueue,FieldInfos.Builder,AtomicLong,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterPerThread#DocumentsWriterPerThread(IndexWriter,String,Directory,Directory,LiveIndexWriterConfig,InfoStream,DocumentsWriterDeleteQueue,FieldInfos.Builder,AtomicLong,boolean).mjava","sourceNew":"  public DocumentsWriterPerThread(IndexWriter writer, String segmentName, Directory directoryOrig, Directory directory, LiveIndexWriterConfig indexWriterConfig, InfoStream infoStream, DocumentsWriterDeleteQueue deleteQueue,\n                                  FieldInfos.Builder fieldInfos, AtomicLong pendingNumDocs, boolean enableTestPoints) throws IOException {\n    this.indexWriter = writer;\n    this.directoryOrig = directoryOrig;\n    this.directory = new TrackingDirectoryWrapper(directory);\n    this.fieldInfos = fieldInfos;\n    this.indexWriterConfig = indexWriterConfig;\n    this.infoStream = infoStream;\n    this.codec = indexWriterConfig.getCodec();\n    this.docState = new DocState(this, infoStream);\n    this.docState.similarity = indexWriterConfig.getSimilarity();\n    this.pendingNumDocs = pendingNumDocs;\n    bytesUsed = Counter.newCounter();\n    byteBlockAllocator = new DirectTrackingAllocator(bytesUsed);\n    pendingUpdates = new BufferedUpdates(segmentName);\n    intBlockAllocator = new IntBlockAllocator(bytesUsed);\n    this.deleteQueue = deleteQueue;\n    assert numDocsInRAM == 0 : \"num docs \" + numDocsInRAM;\n    deleteSlice = deleteQueue.newSlice();\n   \n    segmentInfo = new SegmentInfo(directoryOrig, Version.LATEST, Version.LATEST, segmentName, -1, false, codec, Collections.emptyMap(), StringHelper.randomId(), new HashMap<>(), indexWriterConfig.getIndexSort());\n    assert numDocsInRAM == 0;\n    if (INFO_VERBOSE && infoStream.isEnabled(\"DWPT\")) {\n      infoStream.message(\"DWPT\", Thread.currentThread().getName() + \" init seg=\" + segmentName + \" delQueue=\" + deleteQueue);  \n    }\n    // this should be the last call in the ctor \n    // it really sucks that we need to pull this within the ctor and pass this ref to the chain!\n    consumer = indexWriterConfig.getIndexingChain().getChain(this);\n    this.enableTestPoints = enableTestPoints;\n  }\n\n","sourceOld":"  public DocumentsWriterPerThread(IndexWriter writer, String segmentName, Directory directoryOrig, Directory directory, LiveIndexWriterConfig indexWriterConfig, InfoStream infoStream, DocumentsWriterDeleteQueue deleteQueue,\n                                  FieldInfos.Builder fieldInfos, AtomicLong pendingNumDocs, boolean enableTestPoints) throws IOException {\n    this.indexWriter = writer;\n    this.directoryOrig = directoryOrig;\n    this.directory = new TrackingDirectoryWrapper(directory);\n    this.fieldInfos = fieldInfos;\n    this.indexWriterConfig = indexWriterConfig;\n    this.infoStream = infoStream;\n    this.codec = indexWriterConfig.getCodec();\n    this.docState = new DocState(this, infoStream);\n    this.docState.similarity = indexWriterConfig.getSimilarity();\n    this.pendingNumDocs = pendingNumDocs;\n    bytesUsed = Counter.newCounter();\n    byteBlockAllocator = new DirectTrackingAllocator(bytesUsed);\n    pendingUpdates = new BufferedUpdates(segmentName);\n    intBlockAllocator = new IntBlockAllocator(bytesUsed);\n    this.deleteQueue = deleteQueue;\n    assert numDocsInRAM == 0 : \"num docs \" + numDocsInRAM;\n    deleteSlice = deleteQueue.newSlice();\n   \n    segmentInfo = new SegmentInfo(directoryOrig, Version.LATEST, segmentName, -1, false, codec, Collections.emptyMap(), StringHelper.randomId(), new HashMap<>(), indexWriterConfig.getIndexSort());\n    assert numDocsInRAM == 0;\n    if (INFO_VERBOSE && infoStream.isEnabled(\"DWPT\")) {\n      infoStream.message(\"DWPT\", Thread.currentThread().getName() + \" init seg=\" + segmentName + \" delQueue=\" + deleteQueue);  \n    }\n    // this should be the last call in the ctor \n    // it really sucks that we need to pull this within the ctor and pass this ref to the chain!\n    consumer = indexWriterConfig.getIndexingChain().getChain(this);\n    this.enableTestPoints = enableTestPoints;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"86a2e8a56b368d37ef3ba7180541fa317d6fd6c7","date":1524496660,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterPerThread#DocumentsWriterPerThread(int,String,Directory,Directory,LiveIndexWriterConfig,InfoStream,DocumentsWriterDeleteQueue,FieldInfos.Builder,AtomicLong,boolean).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/DocumentsWriterPerThread#DocumentsWriterPerThread(IndexWriter,String,Directory,Directory,LiveIndexWriterConfig,InfoStream,DocumentsWriterDeleteQueue,FieldInfos.Builder,AtomicLong,boolean).mjava","sourceNew":"  public DocumentsWriterPerThread(int indexVersionCreated, String segmentName, Directory directoryOrig, Directory directory, LiveIndexWriterConfig indexWriterConfig, InfoStream infoStream, DocumentsWriterDeleteQueue deleteQueue,\n                                  FieldInfos.Builder fieldInfos, AtomicLong pendingNumDocs, boolean enableTestPoints) throws IOException {\n    this.directoryOrig = directoryOrig;\n    this.directory = new TrackingDirectoryWrapper(directory);\n    this.fieldInfos = fieldInfos;\n    this.indexWriterConfig = indexWriterConfig;\n    this.infoStream = infoStream;\n    this.codec = indexWriterConfig.getCodec();\n    this.docState = new DocState(this, infoStream);\n    this.docState.similarity = indexWriterConfig.getSimilarity();\n    this.pendingNumDocs = pendingNumDocs;\n    bytesUsed = Counter.newCounter();\n    byteBlockAllocator = new DirectTrackingAllocator(bytesUsed);\n    pendingUpdates = new BufferedUpdates(segmentName);\n    intBlockAllocator = new IntBlockAllocator(bytesUsed);\n    this.deleteQueue = deleteQueue;\n    assert numDocsInRAM == 0 : \"num docs \" + numDocsInRAM;\n    deleteSlice = deleteQueue.newSlice();\n   \n    segmentInfo = new SegmentInfo(directoryOrig, Version.LATEST, Version.LATEST, segmentName, -1, false, codec, Collections.emptyMap(), StringHelper.randomId(), new HashMap<>(), indexWriterConfig.getIndexSort());\n    assert numDocsInRAM == 0;\n    if (INFO_VERBOSE && infoStream.isEnabled(\"DWPT\")) {\n      infoStream.message(\"DWPT\", Thread.currentThread().getName() + \" init seg=\" + segmentName + \" delQueue=\" + deleteQueue);  \n    }\n    // this should be the last call in the ctor \n    // it really sucks that we need to pull this within the ctor and pass this ref to the chain!\n    consumer = indexWriterConfig.getIndexingChain().getChain(this);\n    this.enableTestPoints = enableTestPoints;\n    this.indexVersionCreated = indexVersionCreated;\n  }\n\n","sourceOld":"  public DocumentsWriterPerThread(IndexWriter writer, String segmentName, Directory directoryOrig, Directory directory, LiveIndexWriterConfig indexWriterConfig, InfoStream infoStream, DocumentsWriterDeleteQueue deleteQueue,\n                                  FieldInfos.Builder fieldInfos, AtomicLong pendingNumDocs, boolean enableTestPoints) throws IOException {\n    this.indexWriter = writer;\n    this.directoryOrig = directoryOrig;\n    this.directory = new TrackingDirectoryWrapper(directory);\n    this.fieldInfos = fieldInfos;\n    this.indexWriterConfig = indexWriterConfig;\n    this.infoStream = infoStream;\n    this.codec = indexWriterConfig.getCodec();\n    this.docState = new DocState(this, infoStream);\n    this.docState.similarity = indexWriterConfig.getSimilarity();\n    this.pendingNumDocs = pendingNumDocs;\n    bytesUsed = Counter.newCounter();\n    byteBlockAllocator = new DirectTrackingAllocator(bytesUsed);\n    pendingUpdates = new BufferedUpdates(segmentName);\n    intBlockAllocator = new IntBlockAllocator(bytesUsed);\n    this.deleteQueue = deleteQueue;\n    assert numDocsInRAM == 0 : \"num docs \" + numDocsInRAM;\n    deleteSlice = deleteQueue.newSlice();\n   \n    segmentInfo = new SegmentInfo(directoryOrig, Version.LATEST, Version.LATEST, segmentName, -1, false, codec, Collections.emptyMap(), StringHelper.randomId(), new HashMap<>(), indexWriterConfig.getIndexSort());\n    assert numDocsInRAM == 0;\n    if (INFO_VERBOSE && infoStream.isEnabled(\"DWPT\")) {\n      infoStream.message(\"DWPT\", Thread.currentThread().getName() + \" init seg=\" + segmentName + \" delQueue=\" + deleteQueue);  \n    }\n    // this should be the last call in the ctor \n    // it really sucks that we need to pull this within the ctor and pass this ref to the chain!\n    consumer = indexWriterConfig.getIndexingChain().getChain(this);\n    this.enableTestPoints = enableTestPoints;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"86a2e8a56b368d37ef3ba7180541fa317d6fd6c7":["31741cf1390044e38a2ec3127cf302ba841bfd75"],"0ad30c6a479e764150a3316e57263319775f1df2":["950882a2bd2a5f9dc16a154871584eaa643d882a","3d33e731a93d4b57e662ff094f64f94a745422d4"],"6483e4260c08168709c02238ae083a51519a28dd":["d470c8182e92b264680e34081b75e70a9f2b3c89","b40b1a0adcc6bdcda63b0fbd75dfa2ddd8777e77"],"191128ac5b85671b1671e2c857437694283b6ebf":["d470c8182e92b264680e34081b75e70a9f2b3c89","6483e4260c08168709c02238ae083a51519a28dd"],"b40b1a0adcc6bdcda63b0fbd75dfa2ddd8777e77":["f492fe129985750df09c8dac738aecc503158bb3","122251c49e5a9fa95f056ea257ae3ab452099fc7"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["950882a2bd2a5f9dc16a154871584eaa643d882a","191128ac5b85671b1671e2c857437694283b6ebf"],"31741cf1390044e38a2ec3127cf302ba841bfd75":["86a0a50d2d14aaee1e635bbec914468551f7f9a2"],"d470c8182e92b264680e34081b75e70a9f2b3c89":["950882a2bd2a5f9dc16a154871584eaa643d882a","0ad30c6a479e764150a3316e57263319775f1df2"],"ceaef6cfc68c8ab22a684192e469a8280f9e6e70":["950882a2bd2a5f9dc16a154871584eaa643d882a"],"5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","86a0a50d2d14aaee1e635bbec914468551f7f9a2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"950882a2bd2a5f9dc16a154871584eaa643d882a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f492fe129985750df09c8dac738aecc503158bb3":["d470c8182e92b264680e34081b75e70a9f2b3c89"],"92212fd254551a0b1156aafc3a1a6ed1a43932ad":["86a0a50d2d14aaee1e635bbec914468551f7f9a2"],"3d33e731a93d4b57e662ff094f64f94a745422d4":["950882a2bd2a5f9dc16a154871584eaa643d882a","ceaef6cfc68c8ab22a684192e469a8280f9e6e70"],"86a0a50d2d14aaee1e635bbec914468551f7f9a2":["191128ac5b85671b1671e2c857437694283b6ebf"],"122251c49e5a9fa95f056ea257ae3ab452099fc7":["f492fe129985750df09c8dac738aecc503158bb3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["86a2e8a56b368d37ef3ba7180541fa317d6fd6c7"]},"commit2Childs":{"86a2e8a56b368d37ef3ba7180541fa317d6fd6c7":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"0ad30c6a479e764150a3316e57263319775f1df2":["d470c8182e92b264680e34081b75e70a9f2b3c89"],"6483e4260c08168709c02238ae083a51519a28dd":["191128ac5b85671b1671e2c857437694283b6ebf"],"191128ac5b85671b1671e2c857437694283b6ebf":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","86a0a50d2d14aaee1e635bbec914468551f7f9a2"],"b40b1a0adcc6bdcda63b0fbd75dfa2ddd8777e77":["6483e4260c08168709c02238ae083a51519a28dd"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf"],"31741cf1390044e38a2ec3127cf302ba841bfd75":["86a2e8a56b368d37ef3ba7180541fa317d6fd6c7"],"d470c8182e92b264680e34081b75e70a9f2b3c89":["6483e4260c08168709c02238ae083a51519a28dd","191128ac5b85671b1671e2c857437694283b6ebf","f492fe129985750df09c8dac738aecc503158bb3"],"ceaef6cfc68c8ab22a684192e469a8280f9e6e70":["3d33e731a93d4b57e662ff094f64f94a745422d4"],"5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["950882a2bd2a5f9dc16a154871584eaa643d882a"],"950882a2bd2a5f9dc16a154871584eaa643d882a":["0ad30c6a479e764150a3316e57263319775f1df2","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","d470c8182e92b264680e34081b75e70a9f2b3c89","ceaef6cfc68c8ab22a684192e469a8280f9e6e70","3d33e731a93d4b57e662ff094f64f94a745422d4"],"f492fe129985750df09c8dac738aecc503158bb3":["b40b1a0adcc6bdcda63b0fbd75dfa2ddd8777e77","122251c49e5a9fa95f056ea257ae3ab452099fc7"],"92212fd254551a0b1156aafc3a1a6ed1a43932ad":[],"3d33e731a93d4b57e662ff094f64f94a745422d4":["0ad30c6a479e764150a3316e57263319775f1df2"],"86a0a50d2d14aaee1e635bbec914468551f7f9a2":["31741cf1390044e38a2ec3127cf302ba841bfd75","5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf","92212fd254551a0b1156aafc3a1a6ed1a43932ad"],"122251c49e5a9fa95f056ea257ae3ab452099fc7":["b40b1a0adcc6bdcda63b0fbd75dfa2ddd8777e77"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5acd68c5f07f7ee604c2eeffe801f4a2d7a1a5bf","92212fd254551a0b1156aafc3a1a6ed1a43932ad","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}