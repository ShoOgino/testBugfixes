{"path":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#deleteTerm(Term,boolean).mjava","commits":[{"id":"44fcbde6fb2ac44ee3b45e013e54a42911e689ff","date":1292065621,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#deleteTerm(Term,boolean).mjava","pathOld":"/dev/null","sourceNew":"  boolean deleteTerm(Term term, boolean skipWait) {\n    final boolean doFlush = flushControl.waitUpdate(0, 1, skipWait);\n    synchronized(this) {\n      pendingDeletes.addTerm(term, numDocsInRAM);\n    }\n    return doFlush;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4948bc5d29211f0c9b5ccc31b2632cdd27066ea5","date":1292695408,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#deleteTerm(Term,boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#deleteTerm(Term,boolean).mjava","sourceNew":"  boolean deleteTerm(Term term, boolean skipWait) {\n    final boolean doFlush = flushControl.waitUpdate(0, 1, skipWait);\n    synchronized(this) {\n      pendingDeletes.addTerm(term, numDocs);\n    }\n    return doFlush;\n  }\n\n","sourceOld":"  boolean deleteTerm(Term term, boolean skipWait) {\n    final boolean doFlush = flushControl.waitUpdate(0, 1, skipWait);\n    synchronized(this) {\n      pendingDeletes.addTerm(term, numDocsInRAM);\n    }\n    return doFlush;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab5cb6a74aefb78aa0569857970b9151dfe2e787","date":1292842407,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#deleteTerm(Term,boolean).mjava","pathOld":"/dev/null","sourceNew":"  boolean deleteTerm(Term term, boolean skipWait) {\n    final boolean doFlush = flushControl.waitUpdate(0, 1, skipWait);\n    synchronized(this) {\n      pendingDeletes.addTerm(term, numDocs);\n    }\n    return doFlush;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#deleteTerm(Term,boolean).mjava","pathOld":"/dev/null","sourceNew":"  boolean deleteTerm(Term term, boolean skipWait) {\n    final boolean doFlush = flushControl.waitUpdate(0, 1, skipWait);\n    Iterator<DocumentsWriterPerThread> it = threadPool.getPerThreadIterator();\n    while (it.hasNext()) {\n      it.next().deleteTerm(term);\n    }\n    return doFlush;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ff78505662c0b741e2663a9f38a4889c12a32c9f","date":1294908561,"type":4,"author":"Michael Busch","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#deleteTerm(Term,boolean).mjava","sourceNew":null,"sourceOld":"  boolean deleteTerm(Term term, boolean skipWait) {\n    final boolean doFlush = flushControl.waitUpdate(0, 1, skipWait);\n    Iterator<DocumentsWriterPerThread> it = threadPool.getPerThreadIterator();\n    while (it.hasNext()) {\n      it.next().deleteTerm(term);\n    }\n    return doFlush;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"69a6d2d525aeab53c867ed26934185e5bb627d0e","date":1296516902,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#deleteTerm(Term,boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#deleteTerm(Term,boolean).mjava","sourceNew":"  // TODO: we could check w/ FreqProxTermsWriter: if the\n  // term doesn't exist, don't bother buffering into the\n  // per-DWPT map (but still must go into the global map)\n  boolean deleteTerm(Term term, boolean skipWait) {\n    final boolean doFlush = flushControl.waitUpdate(0, 1, skipWait);\n    synchronized(this) {\n      pendingDeletes.addTerm(term, numDocs);\n    }\n    return doFlush;\n  }\n\n","sourceOld":"  boolean deleteTerm(Term term, boolean skipWait) {\n    final boolean doFlush = flushControl.waitUpdate(0, 1, skipWait);\n    synchronized(this) {\n      pendingDeletes.addTerm(term, numDocs);\n    }\n    return doFlush;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#deleteTerm(Term,boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#deleteTerm(Term,boolean).mjava","sourceNew":"  // TODO: we could check w/ FreqProxTermsWriter: if the\n  // term doesn't exist, don't bother buffering into the\n  // per-DWPT map (but still must go into the global map)\n  boolean deleteTerm(Term term, boolean skipWait) {\n    final boolean doFlush = flushControl.waitUpdate(0, 1, skipWait);\n    synchronized(this) {\n      pendingDeletes.addTerm(term, numDocs);\n    }\n    return doFlush;\n  }\n\n","sourceOld":"  boolean deleteTerm(Term term, boolean skipWait) {\n    final boolean doFlush = flushControl.waitUpdate(0, 1, skipWait);\n    synchronized(this) {\n      pendingDeletes.addTerm(term, numDocs);\n    }\n    return doFlush;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b3e06be49006ecac364d39d12b9c9f74882f9b9f","date":1304289513,"type":4,"author":"Uwe Schindler","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#deleteTerm(Term,boolean).mjava","sourceNew":null,"sourceOld":"  // TODO: we could check w/ FreqProxTermsWriter: if the\n  // term doesn't exist, don't bother buffering into the\n  // per-DWPT map (but still must go into the global map)\n  boolean deleteTerm(Term term, boolean skipWait) {\n    final boolean doFlush = flushControl.waitUpdate(0, 1, skipWait);\n    synchronized(this) {\n      pendingDeletes.addTerm(term, numDocs);\n    }\n    return doFlush;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":4,"author":"Simon Willnauer","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#deleteTerm(Term,boolean).mjava","sourceNew":null,"sourceOld":"  // TODO: we could check w/ FreqProxTermsWriter: if the\n  // term doesn't exist, don't bother buffering into the\n  // per-DWPT map (but still must go into the global map)\n  boolean deleteTerm(Term term, boolean skipWait) {\n    final boolean doFlush = flushControl.waitUpdate(0, 1, skipWait);\n    synchronized(this) {\n      pendingDeletes.addTerm(term, numDocs);\n    }\n    return doFlush;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":4,"author":"Steven Rowe","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/DocumentsWriter#deleteTerm(Term,boolean).mjava","sourceNew":null,"sourceOld":"  // TODO: we could check w/ FreqProxTermsWriter: if the\n  // term doesn't exist, don't bother buffering into the\n  // per-DWPT map (but still must go into the global map)\n  boolean deleteTerm(Term term, boolean skipWait) {\n    final boolean doFlush = flushControl.waitUpdate(0, 1, skipWait);\n    synchronized(this) {\n      pendingDeletes.addTerm(term, numDocs);\n    }\n    return doFlush;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ff78505662c0b741e2663a9f38a4889c12a32c9f":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"44fcbde6fb2ac44ee3b45e013e54a42911e689ff":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a3776dccca01c11e7046323cfad46a3b4a471233":["69a6d2d525aeab53c867ed26934185e5bb627d0e","b3e06be49006ecac364d39d12b9c9f74882f9b9f"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["ab5cb6a74aefb78aa0569857970b9151dfe2e787","69a6d2d525aeab53c867ed26934185e5bb627d0e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["29ef99d61cda9641b6250bf9567329a6e65f901d","b3e06be49006ecac364d39d12b9c9f74882f9b9f"],"b3e06be49006ecac364d39d12b9c9f74882f9b9f":["69a6d2d525aeab53c867ed26934185e5bb627d0e","ff78505662c0b741e2663a9f38a4889c12a32c9f"],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","4948bc5d29211f0c9b5ccc31b2632cdd27066ea5"],"69a6d2d525aeab53c867ed26934185e5bb627d0e":["4948bc5d29211f0c9b5ccc31b2632cdd27066ea5"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","4948bc5d29211f0c9b5ccc31b2632cdd27066ea5"],"4948bc5d29211f0c9b5ccc31b2632cdd27066ea5":["44fcbde6fb2ac44ee3b45e013e54a42911e689ff"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b3e06be49006ecac364d39d12b9c9f74882f9b9f"]},"commit2Childs":{"ff78505662c0b741e2663a9f38a4889c12a32c9f":["b3e06be49006ecac364d39d12b9c9f74882f9b9f"],"44fcbde6fb2ac44ee3b45e013e54a42911e689ff":["4948bc5d29211f0c9b5ccc31b2632cdd27066ea5"],"a3776dccca01c11e7046323cfad46a3b4a471233":[],"29ef99d61cda9641b6250bf9567329a6e65f901d":["135621f3a0670a9394eb563224a3b76cc4dddc0f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["44fcbde6fb2ac44ee3b45e013e54a42911e689ff","ab5cb6a74aefb78aa0569857970b9151dfe2e787","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":[],"b3e06be49006ecac364d39d12b9c9f74882f9b9f":["a3776dccca01c11e7046323cfad46a3b4a471233","135621f3a0670a9394eb563224a3b76cc4dddc0f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ab5cb6a74aefb78aa0569857970b9151dfe2e787":["29ef99d61cda9641b6250bf9567329a6e65f901d"],"69a6d2d525aeab53c867ed26934185e5bb627d0e":["a3776dccca01c11e7046323cfad46a3b4a471233","29ef99d61cda9641b6250bf9567329a6e65f901d","b3e06be49006ecac364d39d12b9c9f74882f9b9f"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["ff78505662c0b741e2663a9f38a4889c12a32c9f"],"4948bc5d29211f0c9b5ccc31b2632cdd27066ea5":["ab5cb6a74aefb78aa0569857970b9151dfe2e787","69a6d2d525aeab53c867ed26934185e5bb627d0e","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a3776dccca01c11e7046323cfad46a3b4a471233","135621f3a0670a9394eb563224a3b76cc4dddc0f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}