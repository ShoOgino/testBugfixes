{"path":"contrib/gdata-server/src/java/org/apache/lucene/gdata/servlet/handler/DefaultGetHandler#checkIsModified(String).mjava","commits":[{"id":"52754a40a1550056d5637c8992b4076b5ed77328","date":1151345693,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"contrib/gdata-server/src/java/org/apache/lucene/gdata/servlet/handler/DefaultGetHandler#checkIsModified(String).mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * \n     * returns true if the resource has been modified since the specified\n     * reqeust header value\n     */\n    private boolean checkIsModified(String lastModified)\n            throws ServiceException {\n        if (lastModified == null)\n            return true;\n        try {\n            Date clientDate = DateFormater.parseDate(lastModified,DateFormater.HTTP_HEADER_DATE_FORMAT,DateFormater.HTTP_HEADER_DATE_FORMAT_TIME_OFFSET);\n            Date entityDate;\n            if (this.feedRequest.isFeedRequested())\n                entityDate = this.service.getFeedLastModified(this.feedRequest\n                        .getFeedId());\n            else\n                entityDate = this.service.getEntryLastModified(this.feedRequest\n                        .getEntryId(),this.feedRequest.getFeedId());\n            if(LOG.isInfoEnabled())\n                LOG.info(\"comparing date clientDate: \"+clientDate+\"; lastmodified: \"+entityDate);\n            return (entityDate.getTime()-clientDate.getTime() > 1000);\n        } catch (java.text.ParseException e) {\n            LOG.info(\"Couldn't parse Last-Modified header -- \"+lastModified,e);\n\n        }\n        return true;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"09fe963da2613c724ffe82353b4ca2364a1f93c6","date":1155249160,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"contrib/gdata-server/src/java/org/apache/lucene/gdata/servlet/handler/DefaultGetHandler#checkIsModified(String).mjava","pathOld":"contrib/gdata-server/src/java/org/apache/lucene/gdata/servlet/handler/DefaultGetHandler#checkIsModified(String).mjava","sourceNew":"    /**\n     * \n     * returns true if the resource has been modified since the specified\n     * request header value\n     */\n    protected boolean checkIsModified(String lastModified)\n            throws ServiceException {\n        if (lastModified == null)\n            return true;\n        try {\n            Date clientDate = DateFormater.parseDate(lastModified,DateFormater.HTTP_HEADER_DATE_FORMAT,DateFormater.HTTP_HEADER_DATE_FORMAT_TIME_OFFSET);\n            Date entityDate;\n            if (this.feedRequest.isFeedRequested())\n                entityDate = this.service.getFeedLastModified(this.feedRequest\n                        .getFeedId());\n            else\n                entityDate = this.service.getEntryLastModified(this.feedRequest\n                        .getEntryId(),this.feedRequest.getFeedId());\n            if(LOG.isInfoEnabled())\n                LOG.info(\"comparing date clientDate: \"+clientDate+\"; last modified: \"+entityDate);\n            return (entityDate.getTime()-clientDate.getTime() > 1000);\n        } catch (java.text.ParseException e) {\n            LOG.info(\"Couldn't parse Last-Modified header -- \"+lastModified,e);\n\n        }\n        return true;\n    }\n\n","sourceOld":"    /**\n     * \n     * returns true if the resource has been modified since the specified\n     * reqeust header value\n     */\n    private boolean checkIsModified(String lastModified)\n            throws ServiceException {\n        if (lastModified == null)\n            return true;\n        try {\n            Date clientDate = DateFormater.parseDate(lastModified,DateFormater.HTTP_HEADER_DATE_FORMAT,DateFormater.HTTP_HEADER_DATE_FORMAT_TIME_OFFSET);\n            Date entityDate;\n            if (this.feedRequest.isFeedRequested())\n                entityDate = this.service.getFeedLastModified(this.feedRequest\n                        .getFeedId());\n            else\n                entityDate = this.service.getEntryLastModified(this.feedRequest\n                        .getEntryId(),this.feedRequest.getFeedId());\n            if(LOG.isInfoEnabled())\n                LOG.info(\"comparing date clientDate: \"+clientDate+\"; lastmodified: \"+entityDate);\n            return (entityDate.getTime()-clientDate.getTime() > 1000);\n        } catch (java.text.ParseException e) {\n            LOG.info(\"Couldn't parse Last-Modified header -- \"+lastModified,e);\n\n        }\n        return true;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5824af871ba6863399636aa5989bfc0ef2ea448c","date":1166013128,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"contrib/gdata-server/src/core/java/org/apache/lucene/gdata/servlet/handler/DefaultGetHandler#checkIsModified(String).mjava","pathOld":"contrib/gdata-server/src/java/org/apache/lucene/gdata/servlet/handler/DefaultGetHandler#checkIsModified(String).mjava","sourceNew":"    /**\n     * \n     * returns true if the resource has been modified since the specified\n     * request header value\n     */\n    protected boolean checkIsModified(String lastModified)\n            throws ServiceException {\n        if (lastModified == null)\n            return true;\n        try {\n            Date clientDate = DateFormater.parseDate(lastModified,DateFormater.HTTP_HEADER_DATE_FORMAT,DateFormater.HTTP_HEADER_DATE_FORMAT_TIME_OFFSET);\n            Date entityDate;\n            if (this.feedRequest.isFeedRequested())\n                entityDate = this.service.getFeedLastModified(this.feedRequest\n                        .getFeedId());\n            else\n                entityDate = this.service.getEntryLastModified(this.feedRequest\n                        .getEntryId(),this.feedRequest.getFeedId());\n            if(LOG.isInfoEnabled())\n                LOG.info(\"comparing date clientDate: \"+clientDate+\"; last modified: \"+entityDate);\n            return (entityDate.getTime()-clientDate.getTime() > 1000);\n        } catch (java.text.ParseException e) {\n            LOG.info(\"Couldn't parse Last-Modified header -- \"+lastModified,e);\n\n        }\n        return true;\n    }\n\n","sourceOld":"    /**\n     * \n     * returns true if the resource has been modified since the specified\n     * request header value\n     */\n    protected boolean checkIsModified(String lastModified)\n            throws ServiceException {\n        if (lastModified == null)\n            return true;\n        try {\n            Date clientDate = DateFormater.parseDate(lastModified,DateFormater.HTTP_HEADER_DATE_FORMAT,DateFormater.HTTP_HEADER_DATE_FORMAT_TIME_OFFSET);\n            Date entityDate;\n            if (this.feedRequest.isFeedRequested())\n                entityDate = this.service.getFeedLastModified(this.feedRequest\n                        .getFeedId());\n            else\n                entityDate = this.service.getEntryLastModified(this.feedRequest\n                        .getEntryId(),this.feedRequest.getFeedId());\n            if(LOG.isInfoEnabled())\n                LOG.info(\"comparing date clientDate: \"+clientDate+\"; last modified: \"+entityDate);\n            return (entityDate.getTime()-clientDate.getTime() > 1000);\n        } catch (java.text.ParseException e) {\n            LOG.info(\"Couldn't parse Last-Modified header -- \"+lastModified,e);\n\n        }\n        return true;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"09fe963da2613c724ffe82353b4ca2364a1f93c6":["52754a40a1550056d5637c8992b4076b5ed77328"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5824af871ba6863399636aa5989bfc0ef2ea448c":["09fe963da2613c724ffe82353b4ca2364a1f93c6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5824af871ba6863399636aa5989bfc0ef2ea448c"],"52754a40a1550056d5637c8992b4076b5ed77328":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"09fe963da2613c724ffe82353b4ca2364a1f93c6":["5824af871ba6863399636aa5989bfc0ef2ea448c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["52754a40a1550056d5637c8992b4076b5ed77328"],"5824af871ba6863399636aa5989bfc0ef2ea448c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"52754a40a1550056d5637c8992b4076b5ed77328":["09fe963da2613c724ffe82353b4ca2364a1f93c6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}