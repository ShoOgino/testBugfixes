{"path":"lucene/sandbox/src/java/org/apache/lucene/search/GeoPointTermsEnum#computeRange(long,short).mjava","commits":[{"id":"e91b7d9f5000faefb0e81b98e76ad5b9463283e8","date":1433799348,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/search/GeoPointTermsEnum#computeRange(long,short).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * entry point for recursively computing ranges\n   */\n  private final void computeRange(long term, final short shift) {\n    final long split = term | (0x1L<<shift);\n    final long upperMax = term | ((0x1L<<(shift+1))-1);\n    final long lowerMax = split-1;\n\n    relateAndRecurse(term, lowerMax, shift);\n    relateAndRecurse(split, upperMax, shift);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a8643675811154703f74957ed3d102a06ce092f2","date":1438507635,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/search/GeoPointTermsEnum#computeRange(long,short).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/search/GeoPointTermsEnum#computeRange(long,short).mjava","sourceNew":"  /**\n   * entry point for recursively computing ranges\n   */\n  private final void computeRange(long term, final short shift) {\n    final long split = term | (0x1L<<shift);\n    assert shift < 64;\n    final long upperMax;\n    if (shift < 63) {\n      upperMax = term | ((1L << (shift+1))-1);\n    } else {\n      upperMax = 0xffffffffffffffffL;\n    }\n    final long lowerMax = split-1;\n\n    relateAndRecurse(term, lowerMax, shift);\n    relateAndRecurse(split, upperMax, shift);\n  }\n\n","sourceOld":"  /**\n   * entry point for recursively computing ranges\n   */\n  private final void computeRange(long term, final short shift) {\n    final long split = term | (0x1L<<shift);\n    final long upperMax = term | ((0x1L<<(shift+1))-1);\n    final long lowerMax = split-1;\n\n    relateAndRecurse(term, lowerMax, shift);\n    relateAndRecurse(split, upperMax, shift);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"937923083e4d137932336fc80f3d78758ff698a6","date":1454691519,"type":5,"author":"nknize","isMerge":false,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/search/GeoPointTermsEnum#computeRange(long,short).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/search/GeoPointTermsEnum#computeRange(long,short).mjava","sourceNew":"  /**\n   * entry point for recursively computing ranges\n   */\n  private final void computeRange(long term, final short shift) {\n    final long split = term | (0x1L<<shift);\n    assert shift < 64;\n    final long upperMax;\n    if (shift < 63) {\n      upperMax = term | ((1L << (shift+1))-1);\n    } else {\n      upperMax = 0xffffffffffffffffL;\n    }\n    final long lowerMax = split-1;\n\n    relateAndRecurse(term, lowerMax, shift);\n    relateAndRecurse(split, upperMax, shift);\n  }\n\n","sourceOld":"  /**\n   * entry point for recursively computing ranges\n   */\n  private final void computeRange(long term, final short shift) {\n    final long split = term | (0x1L<<shift);\n    assert shift < 64;\n    final long upperMax;\n    if (shift < 63) {\n      upperMax = term | ((1L << (shift+1))-1);\n    } else {\n      upperMax = 0xffffffffffffffffL;\n    }\n    final long lowerMax = split-1;\n\n    relateAndRecurse(term, lowerMax, shift);\n    relateAndRecurse(split, upperMax, shift);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1e6acbaae7af722f17204ceccf0f7db5753eccf3","date":1454775255,"type":5,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/spatial/src/java/org/apache/lucene/spatial/search/GeoPointNumericTermsEnum#computeRange(long,short).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/search/GeoPointTermsEnum#computeRange(long,short).mjava","sourceNew":"  /**\n   * entry point for recursively computing ranges\n   */\n  private final void computeRange(long term, final short shift) {\n    final long split = term | (0x1L<<shift);\n    assert shift < 64;\n    final long upperMax;\n    if (shift < 63) {\n      upperMax = term | ((1L << (shift+1))-1);\n    } else {\n      upperMax = 0xffffffffffffffffL;\n    }\n    final long lowerMax = split-1;\n\n    relateAndRecurse(term, lowerMax, shift);\n    relateAndRecurse(split, upperMax, shift);\n  }\n\n","sourceOld":"  /**\n   * entry point for recursively computing ranges\n   */\n  private final void computeRange(long term, final short shift) {\n    final long split = term | (0x1L<<shift);\n    assert shift < 64;\n    final long upperMax;\n    if (shift < 63) {\n      upperMax = term | ((1L << (shift+1))-1);\n    } else {\n      upperMax = 0xffffffffffffffffL;\n    }\n    final long lowerMax = split-1;\n\n    relateAndRecurse(term, lowerMax, shift);\n    relateAndRecurse(split, upperMax, shift);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":["a8643675811154703f74957ed3d102a06ce092f2","937923083e4d137932336fc80f3d78758ff698a6"],"e91b7d9f5000faefb0e81b98e76ad5b9463283e8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a8643675811154703f74957ed3d102a06ce092f2":["e91b7d9f5000faefb0e81b98e76ad5b9463283e8"],"937923083e4d137932336fc80f3d78758ff698a6":["a8643675811154703f74957ed3d102a06ce092f2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["937923083e4d137932336fc80f3d78758ff698a6"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e91b7d9f5000faefb0e81b98e76ad5b9463283e8"],"1e6acbaae7af722f17204ceccf0f7db5753eccf3":[],"e91b7d9f5000faefb0e81b98e76ad5b9463283e8":["a8643675811154703f74957ed3d102a06ce092f2"],"a8643675811154703f74957ed3d102a06ce092f2":["1e6acbaae7af722f17204ceccf0f7db5753eccf3","937923083e4d137932336fc80f3d78758ff698a6"],"937923083e4d137932336fc80f3d78758ff698a6":["1e6acbaae7af722f17204ceccf0f7db5753eccf3","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["1e6acbaae7af722f17204ceccf0f7db5753eccf3","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}