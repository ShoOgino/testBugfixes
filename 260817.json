{"path":"lucene/core/src/java/org/apache/lucene/search/ConjunctionScorer#score().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/ConjunctionScorer#score().mjava","pathOld":"lucene/src/java/org/apache/lucene/search/ConjunctionScorer#score().mjava","sourceNew":"  @Override\n  public float score() throws IOException {\n    float sum = 0.0f;\n    for (int i = 0; i < scorers.length; i++) {\n      sum += scorers[i].score();\n    }\n    return sum * coord;\n  }\n\n","sourceOld":"  @Override\n  public float score() throws IOException {\n    float sum = 0.0f;\n    for (int i = 0; i < scorers.length; i++) {\n      sum += scorers[i].score();\n    }\n    return sum * coord;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b0c73b4e6b72cca35c7f115ab543ce9dcf50d8b5","date":1344439048,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/ConjunctionScorer#score().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/ConjunctionScorer#score().mjava","sourceNew":"  @Override\n  public float score() throws IOException {\n    float sum = 0.0f;\n    for (int i = 0; i < scorers.length; i++) {\n      sum += scorers[i].score();\n    }\n    return sum;\n  }\n\n","sourceOld":"  @Override\n  public float score() throws IOException {\n    float sum = 0.0f;\n    for (int i = 0; i < scorers.length; i++) {\n      sum += scorers[i].score();\n    }\n    return sum * coord;\n  }\n\n","bugFix":["2c2de4d23143bb03db6c8482422af2e9af132bd5"],"bugIntro":["7b9f056598bc578796f7c2eaa4b2bb8eaab5c23a"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d6f074e73200c07d54f242d3880a8da5a35ff97b","date":1344507653,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/ConjunctionScorer#score().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/ConjunctionScorer#score().mjava","sourceNew":"  @Override\n  public float score() throws IOException {\n    float sum = 0.0f;\n    for (int i = 0; i < scorers.length; i++) {\n      sum += scorers[i].score();\n    }\n    return sum;\n  }\n\n","sourceOld":"  @Override\n  public float score() throws IOException {\n    float sum = 0.0f;\n    for (int i = 0; i < scorers.length; i++) {\n      sum += scorers[i].score();\n    }\n    return sum * coord;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7869f64c874ebf7f317d22c00baf2b6857797a6","date":1344856617,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/ConjunctionScorer#score().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/ConjunctionScorer#score().mjava","sourceNew":"  @Override\n  public float score() throws IOException {\n    float sum = 0.0f;\n    for (int i = 0; i < scorers.length; i++) {\n      sum += scorers[i].score();\n    }\n    return sum;\n  }\n\n","sourceOld":"  @Override\n  public float score() throws IOException {\n    float sum = 0.0f;\n    for (int i = 0; i < scorers.length; i++) {\n      sum += scorers[i].score();\n    }\n    return sum * coord;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d7e5e8b8d73f2aac82ca5aa45d34d8adaa6940f6","date":1345834972,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/ConjunctionScorer#score().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/ConjunctionScorer#score().mjava","sourceNew":"  @Override\n  public float score() throws IOException {\n    // TODO: sum into a double and cast to float if we ever send required clauses to BS1\n    float sum = 0.0f;\n    for (int i = 0; i < scorers.length; i++) {\n      sum += scorers[i].score();\n    }\n    return sum;\n  }\n\n","sourceOld":"  @Override\n  public float score() throws IOException {\n    float sum = 0.0f;\n    for (int i = 0; i < scorers.length; i++) {\n      sum += scorers[i].score();\n    }\n    return sum;\n  }\n\n","bugFix":null,"bugIntro":["45fa1757f5581a10e9c63294cf292a14c92d23b1"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"001b25b42373b22a52f399dbf072f1224632e8e6","date":1345889167,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/ConjunctionScorer#score().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/ConjunctionScorer#score().mjava","sourceNew":"  @Override\n  public float score() throws IOException {\n    // TODO: sum into a double and cast to float if we ever send required clauses to BS1\n    float sum = 0.0f;\n    for (int i = 0; i < scorers.length; i++) {\n      sum += scorers[i].score();\n    }\n    return sum;\n  }\n\n","sourceOld":"  @Override\n  public float score() throws IOException {\n    float sum = 0.0f;\n    for (int i = 0; i < scorers.length; i++) {\n      sum += scorers[i].score();\n    }\n    return sum;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7b9f056598bc578796f7c2eaa4b2bb8eaab5c23a","date":1363294103,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/ConjunctionScorer#score().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/ConjunctionScorer#score().mjava","sourceNew":"  @Override\n  public float score() throws IOException {\n    // TODO: sum into a double and cast to float if we ever send required clauses to BS1\n    float sum = 0.0f;\n    for (DocsAndFreqs docs : docsAndFreqs) {\n      sum += docs.scorer.score();\n    }\n    return sum * coord;\n  }\n\n","sourceOld":"  @Override\n  public float score() throws IOException {\n    // TODO: sum into a double and cast to float if we ever send required clauses to BS1\n    float sum = 0.0f;\n    for (int i = 0; i < scorers.length; i++) {\n      sum += scorers[i].score();\n    }\n    return sum;\n  }\n\n","bugFix":["2c2de4d23143bb03db6c8482422af2e9af132bd5","b0c73b4e6b72cca35c7f115ab543ce9dcf50d8b5","a251547210ad8523f10c15c461496a2ad4bb3df4"],"bugIntro":["45fa1757f5581a10e9c63294cf292a14c92d23b1"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"25f698887111a682424e759ba36083180899a1fd","date":1423588899,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/ConjunctionScorer#score().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/ConjunctionScorer#score().mjava","sourceNew":"  @Override\n  public float score() throws IOException {\n    // TODO: sum into a double and cast to float if we ever send required clauses to BS1\n    float sum = 0.0f;\n    for (Scorer scorer : scorers) {\n      sum += scorer.score();\n    }\n    return sum * coord;\n  }\n\n","sourceOld":"  @Override\n  public float score() throws IOException {\n    // TODO: sum into a double and cast to float if we ever send required clauses to BS1\n    float sum = 0.0f;\n    for (DocsAndFreqs docs : docsAndFreqs) {\n      sum += docs.scorer.score();\n    }\n    return sum * coord;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"45fa1757f5581a10e9c63294cf292a14c92d23b1","date":1430234127,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/ConjunctionScorer#score().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/ConjunctionScorer#score().mjava","sourceNew":"  @Override\n  public float score() throws IOException {\n    double sum = 0.0d;\n    for (Scorer scorer : scorers) {\n      sum += scorer.score();\n    }\n    return coord * (float)sum;\n  }\n\n","sourceOld":"  @Override\n  public float score() throws IOException {\n    // TODO: sum into a double and cast to float if we ever send required clauses to BS1\n    float sum = 0.0f;\n    for (Scorer scorer : scorers) {\n      sum += scorer.score();\n    }\n    return sum * coord;\n  }\n\n","bugFix":["2c2de4d23143bb03db6c8482422af2e9af132bd5","d7e5e8b8d73f2aac82ca5aa45d34d8adaa6940f6","7b9f056598bc578796f7c2eaa4b2bb8eaab5c23a"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c8a0e442f7b61f811680273b25da95994a724466","date":1467878549,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/ConjunctionScorer#score().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/ConjunctionScorer#score().mjava","sourceNew":"  @Override\n  public float score() throws IOException {\n    double sum = 0.0d;\n    for (Scorer scorer : scorers) {\n      sum += scorer.score();\n    }\n    return (float) sum;\n  }\n\n","sourceOld":"  @Override\n  public float score() throws IOException {\n    double sum = 0.0d;\n    for (Scorer scorer : scorers) {\n      sum += scorer.score();\n    }\n    return coord * (float)sum;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/ConjunctionScorer#score().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/ConjunctionScorer#score().mjava","sourceNew":"  @Override\n  public float score() throws IOException {\n    double sum = 0.0d;\n    for (Scorer scorer : scorers) {\n      sum += scorer.score();\n    }\n    return (float) sum;\n  }\n\n","sourceOld":"  @Override\n  public float score() throws IOException {\n    double sum = 0.0d;\n    for (Scorer scorer : scorers) {\n      sum += scorer.score();\n    }\n    return coord * (float)sum;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"001b25b42373b22a52f399dbf072f1224632e8e6":["d6f074e73200c07d54f242d3880a8da5a35ff97b","d7e5e8b8d73f2aac82ca5aa45d34d8adaa6940f6"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"7b9f056598bc578796f7c2eaa4b2bb8eaab5c23a":["d7e5e8b8d73f2aac82ca5aa45d34d8adaa6940f6"],"45fa1757f5581a10e9c63294cf292a14c92d23b1":["25f698887111a682424e759ba36083180899a1fd"],"b0c73b4e6b72cca35c7f115ab543ce9dcf50d8b5":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["45fa1757f5581a10e9c63294cf292a14c92d23b1","c8a0e442f7b61f811680273b25da95994a724466"],"c7869f64c874ebf7f317d22c00baf2b6857797a6":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","b0c73b4e6b72cca35c7f115ab543ce9dcf50d8b5"],"d7e5e8b8d73f2aac82ca5aa45d34d8adaa6940f6":["b0c73b4e6b72cca35c7f115ab543ce9dcf50d8b5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d6f074e73200c07d54f242d3880a8da5a35ff97b":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","b0c73b4e6b72cca35c7f115ab543ce9dcf50d8b5"],"c8a0e442f7b61f811680273b25da95994a724466":["45fa1757f5581a10e9c63294cf292a14c92d23b1"],"25f698887111a682424e759ba36083180899a1fd":["7b9f056598bc578796f7c2eaa4b2bb8eaab5c23a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c8a0e442f7b61f811680273b25da95994a724466"]},"commit2Childs":{"001b25b42373b22a52f399dbf072f1224632e8e6":[],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["b0c73b4e6b72cca35c7f115ab543ce9dcf50d8b5","c7869f64c874ebf7f317d22c00baf2b6857797a6","d6f074e73200c07d54f242d3880a8da5a35ff97b"],"7b9f056598bc578796f7c2eaa4b2bb8eaab5c23a":["25f698887111a682424e759ba36083180899a1fd"],"45fa1757f5581a10e9c63294cf292a14c92d23b1":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","c8a0e442f7b61f811680273b25da95994a724466"],"b0c73b4e6b72cca35c7f115ab543ce9dcf50d8b5":["c7869f64c874ebf7f317d22c00baf2b6857797a6","d7e5e8b8d73f2aac82ca5aa45d34d8adaa6940f6","d6f074e73200c07d54f242d3880a8da5a35ff97b"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"c7869f64c874ebf7f317d22c00baf2b6857797a6":[],"d7e5e8b8d73f2aac82ca5aa45d34d8adaa6940f6":["001b25b42373b22a52f399dbf072f1224632e8e6","7b9f056598bc578796f7c2eaa4b2bb8eaab5c23a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"d6f074e73200c07d54f242d3880a8da5a35ff97b":["001b25b42373b22a52f399dbf072f1224632e8e6"],"c8a0e442f7b61f811680273b25da95994a724466":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"25f698887111a682424e759ba36083180899a1fd":["45fa1757f5581a10e9c63294cf292a14c92d23b1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["001b25b42373b22a52f399dbf072f1224632e8e6","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","c7869f64c874ebf7f317d22c00baf2b6857797a6","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}