{"path":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardPostingsWriter#finishTerm(int,boolean).mjava","commits":[{"id":"955c32f886db6f6356c9fcdea6b1f1cb4effda24","date":1270581567,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardPostingsWriter#finishTerm(int,boolean).mjava","pathOld":"/dev/null","sourceNew":"  /** Finishes the current term */\n  public abstract void finishTerm(int numDocs, boolean isIndexTerm) throws IOException;\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"99cf56f3a650b908f7017a72f9d23940418f8a52","date":1284891529,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardPostingsWriter#finishTerm(int,boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardPostingsWriter#finishTerm(int,boolean).mjava","sourceNew":"  /** Called when we are done adding docs to this term */\n  @Override\n  public void finishTerm(int docCount, boolean isIndexTerm) throws IOException {\n    assert docCount > 0;\n\n    // TODO: wasteful we are counting this (counting # docs\n    // for this term) in two places?\n    assert docCount == df;\n\n    if (isIndexTerm) {\n      // Write absolute at seek points\n      termsOut.writeVLong(freqStart);\n    } else {\n      // Write delta between seek points\n      termsOut.writeVLong(freqStart - lastFreqStart);\n    }\n\n    lastFreqStart = freqStart;\n\n    if (df >= skipInterval) {\n      termsOut.writeVInt((int) (skipListWriter.writeSkip(freqOut)-freqStart));\n    }\n     \n    if (!omitTermFreqAndPositions) {\n      if (isIndexTerm) {\n        // Write absolute at seek points\n        termsOut.writeVLong(proxStart);\n      } else {\n        // Write delta between seek points\n        termsOut.writeVLong(proxStart - lastProxStart);\n      }\n      lastProxStart = proxStart;\n    }\n\n    lastDocID = 0;\n    df = 0;\n  }\n\n","sourceOld":"  /** Finishes the current term */\n  public abstract void finishTerm(int numDocs, boolean isIndexTerm) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardPostingsWriter#finishTerm(int,boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardPostingsWriter#finishTerm(int,boolean).mjava","sourceNew":"  /** Called when we are done adding docs to this term */\n  @Override\n  public void finishTerm(int docCount, boolean isIndexTerm) throws IOException {\n    assert docCount > 0;\n\n    // TODO: wasteful we are counting this (counting # docs\n    // for this term) in two places?\n    assert docCount == df;\n\n    if (isIndexTerm) {\n      // Write absolute at seek points\n      termsOut.writeVLong(freqStart);\n    } else {\n      // Write delta between seek points\n      termsOut.writeVLong(freqStart - lastFreqStart);\n    }\n\n    lastFreqStart = freqStart;\n\n    if (df >= skipInterval) {\n      termsOut.writeVInt((int) (skipListWriter.writeSkip(freqOut)-freqStart));\n    }\n     \n    if (!omitTermFreqAndPositions) {\n      if (isIndexTerm) {\n        // Write absolute at seek points\n        termsOut.writeVLong(proxStart);\n      } else {\n        // Write delta between seek points\n        termsOut.writeVLong(proxStart - lastProxStart);\n      }\n      lastProxStart = proxStart;\n    }\n\n    lastDocID = 0;\n    df = 0;\n  }\n\n","sourceOld":"  /** Finishes the current term */\n  public abstract void finishTerm(int numDocs, boolean isIndexTerm) throws IOException;\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6ecd298fdc085e7eba27afa7fae58df1ba1a2808","date":1295102557,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardPostingsWriter#finishTerm(TermStats,boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardPostingsWriter#finishTerm(int,boolean).mjava","sourceNew":"  /** Called when we are done adding docs to this term */\n  @Override\n  public void finishTerm(TermStats stats, boolean isIndexTerm) throws IOException {\n    assert stats.docFreq > 0;\n\n    // TODO: wasteful we are counting this (counting # docs\n    // for this term) in two places?\n    assert stats.docFreq == df;\n\n    if (isIndexTerm) {\n      // Write absolute at seek points\n      termsOut.writeVLong(freqStart);\n    } else {\n      // Write delta between seek points\n      termsOut.writeVLong(freqStart - lastFreqStart);\n    }\n\n    lastFreqStart = freqStart;\n\n    if (df >= skipInterval) {\n      termsOut.writeVInt((int) (skipListWriter.writeSkip(freqOut)-freqStart));\n    }\n     \n    if (!omitTermFreqAndPositions) {\n      if (isIndexTerm) {\n        // Write absolute at seek points\n        termsOut.writeVLong(proxStart);\n      } else {\n        // Write delta between seek points\n        termsOut.writeVLong(proxStart - lastProxStart);\n      }\n      lastProxStart = proxStart;\n    }\n\n    lastDocID = 0;\n    df = 0;\n  }\n\n","sourceOld":"  /** Called when we are done adding docs to this term */\n  @Override\n  public void finishTerm(int docCount, boolean isIndexTerm) throws IOException {\n    assert docCount > 0;\n\n    // TODO: wasteful we are counting this (counting # docs\n    // for this term) in two places?\n    assert docCount == df;\n\n    if (isIndexTerm) {\n      // Write absolute at seek points\n      termsOut.writeVLong(freqStart);\n    } else {\n      // Write delta between seek points\n      termsOut.writeVLong(freqStart - lastFreqStart);\n    }\n\n    lastFreqStart = freqStart;\n\n    if (df >= skipInterval) {\n      termsOut.writeVInt((int) (skipListWriter.writeSkip(freqOut)-freqStart));\n    }\n     \n    if (!omitTermFreqAndPositions) {\n      if (isIndexTerm) {\n        // Write absolute at seek points\n        termsOut.writeVLong(proxStart);\n      } else {\n        // Write delta between seek points\n        termsOut.writeVLong(proxStart - lastProxStart);\n      }\n      lastProxStart = proxStart;\n    }\n\n    lastDocID = 0;\n    df = 0;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"16843358872ed92ba92888ab99df297550b9a36a","date":1295144724,"type":5,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardPostingsWriter#finishTerm(TermStats,boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardPostingsWriter#finishTerm(int,boolean).mjava","sourceNew":"  /** Called when we are done adding docs to this term */\n  @Override\n  public void finishTerm(TermStats stats, boolean isIndexTerm) throws IOException {\n    assert stats.docFreq > 0;\n\n    // TODO: wasteful we are counting this (counting # docs\n    // for this term) in two places?\n    assert stats.docFreq == df;\n\n    if (isIndexTerm) {\n      // Write absolute at seek points\n      termsOut.writeVLong(freqStart);\n    } else {\n      // Write delta between seek points\n      termsOut.writeVLong(freqStart - lastFreqStart);\n    }\n\n    lastFreqStart = freqStart;\n\n    if (df >= skipInterval) {\n      termsOut.writeVInt((int) (skipListWriter.writeSkip(freqOut)-freqStart));\n    }\n     \n    if (!omitTermFreqAndPositions) {\n      if (isIndexTerm) {\n        // Write absolute at seek points\n        termsOut.writeVLong(proxStart);\n      } else {\n        // Write delta between seek points\n        termsOut.writeVLong(proxStart - lastProxStart);\n      }\n      lastProxStart = proxStart;\n    }\n\n    lastDocID = 0;\n    df = 0;\n  }\n\n","sourceOld":"  /** Called when we are done adding docs to this term */\n  @Override\n  public void finishTerm(int docCount, boolean isIndexTerm) throws IOException {\n    assert docCount > 0;\n\n    // TODO: wasteful we are counting this (counting # docs\n    // for this term) in two places?\n    assert docCount == df;\n\n    if (isIndexTerm) {\n      // Write absolute at seek points\n      termsOut.writeVLong(freqStart);\n    } else {\n      // Write delta between seek points\n      termsOut.writeVLong(freqStart - lastFreqStart);\n    }\n\n    lastFreqStart = freqStart;\n\n    if (df >= skipInterval) {\n      termsOut.writeVInt((int) (skipListWriter.writeSkip(freqOut)-freqStart));\n    }\n     \n    if (!omitTermFreqAndPositions) {\n      if (isIndexTerm) {\n        // Write absolute at seek points\n        termsOut.writeVLong(proxStart);\n      } else {\n        // Write delta between seek points\n        termsOut.writeVLong(proxStart - lastProxStart);\n      }\n      lastProxStart = proxStart;\n    }\n\n    lastDocID = 0;\n    df = 0;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":4,"author":"Simon Willnauer","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/standard/StandardPostingsWriter#finishTerm(int,boolean).mjava","sourceNew":null,"sourceOld":"  /** Called when we are done adding docs to this term */\n  @Override\n  public void finishTerm(int docCount, boolean isIndexTerm) throws IOException {\n    assert docCount > 0;\n\n    // TODO: wasteful we are counting this (counting # docs\n    // for this term) in two places?\n    assert docCount == df;\n\n    if (isIndexTerm) {\n      // Write absolute at seek points\n      termsOut.writeVLong(freqStart);\n    } else {\n      // Write delta between seek points\n      termsOut.writeVLong(freqStart - lastFreqStart);\n    }\n\n    lastFreqStart = freqStart;\n\n    if (df >= skipInterval) {\n      termsOut.writeVInt((int) (skipListWriter.writeSkip(freqOut)-freqStart));\n    }\n     \n    if (!omitTermFreqAndPositions) {\n      if (isIndexTerm) {\n        // Write absolute at seek points\n        termsOut.writeVLong(proxStart);\n      } else {\n        // Write delta between seek points\n        termsOut.writeVLong(proxStart - lastProxStart);\n      }\n      lastProxStart = proxStart;\n    }\n\n    lastDocID = 0;\n    df = 0;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"29ef99d61cda9641b6250bf9567329a6e65f901d":["99cf56f3a650b908f7017a72f9d23940418f8a52","6ecd298fdc085e7eba27afa7fae58df1ba1a2808"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"16843358872ed92ba92888ab99df297550b9a36a":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","6ecd298fdc085e7eba27afa7fae58df1ba1a2808"],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["955c32f886db6f6356c9fcdea6b1f1cb4effda24","99cf56f3a650b908f7017a72f9d23940418f8a52"],"6ecd298fdc085e7eba27afa7fae58df1ba1a2808":["99cf56f3a650b908f7017a72f9d23940418f8a52"],"99cf56f3a650b908f7017a72f9d23940418f8a52":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6ecd298fdc085e7eba27afa7fae58df1ba1a2808"]},"commit2Childs":{"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"16843358872ed92ba92888ab99df297550b9a36a":[],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","99cf56f3a650b908f7017a72f9d23940418f8a52"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["16843358872ed92ba92888ab99df297550b9a36a"],"99cf56f3a650b908f7017a72f9d23940418f8a52":["29ef99d61cda9641b6250bf9567329a6e65f901d","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","6ecd298fdc085e7eba27afa7fae58df1ba1a2808"],"6ecd298fdc085e7eba27afa7fae58df1ba1a2808":["29ef99d61cda9641b6250bf9567329a6e65f901d","16843358872ed92ba92888ab99df297550b9a36a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["29ef99d61cda9641b6250bf9567329a6e65f901d","16843358872ed92ba92888ab99df297550b9a36a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}