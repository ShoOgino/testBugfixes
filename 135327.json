{"path":"lucene/core/src/java/org/apache/lucene/index/SegmentInfoPerCommit#sizeInBytes().mjava","commits":[{"id":"9d153abcf92dc5329d98571a8c3035df9bd80648","date":1337702630,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentInfoPerCommit#sizeInBytes().mjava","pathOld":"/dev/null","sourceNew":"  public long sizeInBytes() throws IOException {\n    // nocommit add in live docs size\n    return info.sizeInBytes();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fb5728b83dbb3e002cdd22adfe6caf103a96ef15","date":1337791289,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentInfoPerCommit#sizeInBytes().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentInfoPerCommit#sizeInBytes().mjava","sourceNew":"  public long sizeInBytes() throws IOException {\n    if (sizeInBytes == -1) {\n      final Collection<String> files = new HashSet<String>();\n      info.getCodec().liveDocsFormat().files(this, files);\n      long sum = info.sizeInBytes();\n      for (final String fileName : files()) {\n        sum += info.dir.fileLength(fileName);\n      }\n      sizeInBytes = sum;\n    }\n\n    return sizeInBytes;\n  }\n\n","sourceOld":"  public long sizeInBytes() throws IOException {\n    // nocommit add in live docs size\n    return info.sizeInBytes();\n  }\n\n","bugFix":null,"bugIntro":["90dfa8ee4e9e118b4c2c1c042bf57d9b460613de"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"615ddbd81799980d0fdd95e0238e1c498b6f47b0","date":1338233290,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentInfoPerCommit#sizeInBytes().mjava","pathOld":"/dev/null","sourceNew":"  public long sizeInBytes() throws IOException {\n    if (sizeInBytes == -1) {\n      final Collection<String> files = new HashSet<String>();\n      info.getCodec().liveDocsFormat().files(this, files);\n      long sum = info.sizeInBytes();\n      for (final String fileName : files()) {\n        sum += info.dir.fileLength(fileName);\n      }\n      sizeInBytes = sum;\n    }\n\n    return sizeInBytes;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"c14aed69f37b57db63b1fccc0740b17060a08f2b","date":1348227091,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentInfoPerCommit#sizeInBytes().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentInfoPerCommit#sizeInBytes().mjava","sourceNew":"  /** Returns total size in bytes of all files for this\n   *  segment. */\n  public long sizeInBytes() throws IOException {\n    if (sizeInBytes == -1) {\n      final Collection<String> files = new HashSet<String>();\n      info.getCodec().liveDocsFormat().files(this, files);\n      long sum = info.sizeInBytes();\n      for (final String fileName : files()) {\n        sum += info.dir.fileLength(fileName);\n      }\n      sizeInBytes = sum;\n    }\n\n    return sizeInBytes;\n  }\n\n","sourceOld":"  public long sizeInBytes() throws IOException {\n    if (sizeInBytes == -1) {\n      final Collection<String> files = new HashSet<String>();\n      info.getCodec().liveDocsFormat().files(this, files);\n      long sum = info.sizeInBytes();\n      for (final String fileName : files()) {\n        sum += info.dir.fileLength(fileName);\n      }\n      sizeInBytes = sum;\n    }\n\n    return sizeInBytes;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"90dfa8ee4e9e118b4c2c1c042bf57d9b460613de","date":1349114144,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentInfoPerCommit#sizeInBytes().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentInfoPerCommit#sizeInBytes().mjava","sourceNew":"  /** Returns total size in bytes of all files for this\n   *  segment. */\n  public long sizeInBytes() throws IOException {\n    if (sizeInBytes == -1) {\n      long sum = 0;\n      for (final String fileName : files()) {\n        sum += info.dir.fileLength(fileName);\n      }\n      sizeInBytes = sum;\n    }\n\n    return sizeInBytes;\n  }\n\n","sourceOld":"  /** Returns total size in bytes of all files for this\n   *  segment. */\n  public long sizeInBytes() throws IOException {\n    if (sizeInBytes == -1) {\n      final Collection<String> files = new HashSet<String>();\n      info.getCodec().liveDocsFormat().files(this, files);\n      long sum = info.sizeInBytes();\n      for (final String fileName : files()) {\n        sum += info.dir.fileLength(fileName);\n      }\n      sizeInBytes = sum;\n    }\n\n    return sizeInBytes;\n  }\n\n","bugFix":["fb5728b83dbb3e002cdd22adfe6caf103a96ef15"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0","date":1383367127,"type":5,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentCommitInfo#sizeInBytes().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/SegmentInfoPerCommit#sizeInBytes().mjava","sourceNew":"  /** Returns total size in bytes of all files for this\n   *  segment. */\n  public long sizeInBytes() throws IOException {\n    if (sizeInBytes == -1) {\n      long sum = 0;\n      for (final String fileName : files()) {\n        sum += info.dir.fileLength(fileName);\n      }\n      sizeInBytes = sum;\n    }\n\n    return sizeInBytes;\n  }\n\n","sourceOld":"  /** Returns total size in bytes of all files for this\n   *  segment. */\n  public long sizeInBytes() throws IOException {\n    if (sizeInBytes == -1) {\n      long sum = 0;\n      for (final String fileName : files()) {\n        sum += info.dir.fileLength(fileName);\n      }\n      sizeInBytes = sum;\n    }\n\n    return sizeInBytes;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0":["90dfa8ee4e9e118b4c2c1c042bf57d9b460613de"],"615ddbd81799980d0fdd95e0238e1c498b6f47b0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","fb5728b83dbb3e002cdd22adfe6caf103a96ef15"],"fb5728b83dbb3e002cdd22adfe6caf103a96ef15":["9d153abcf92dc5329d98571a8c3035df9bd80648"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9d153abcf92dc5329d98571a8c3035df9bd80648":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"90dfa8ee4e9e118b4c2c1c042bf57d9b460613de":["c14aed69f37b57db63b1fccc0740b17060a08f2b"],"c14aed69f37b57db63b1fccc0740b17060a08f2b":["615ddbd81799980d0fdd95e0238e1c498b6f47b0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0"]},"commit2Childs":{"73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"615ddbd81799980d0fdd95e0238e1c498b6f47b0":["c14aed69f37b57db63b1fccc0740b17060a08f2b"],"fb5728b83dbb3e002cdd22adfe6caf103a96ef15":["615ddbd81799980d0fdd95e0238e1c498b6f47b0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["615ddbd81799980d0fdd95e0238e1c498b6f47b0","9d153abcf92dc5329d98571a8c3035df9bd80648"],"9d153abcf92dc5329d98571a8c3035df9bd80648":["fb5728b83dbb3e002cdd22adfe6caf103a96ef15"],"90dfa8ee4e9e118b4c2c1c042bf57d9b460613de":["73b0a97ef3bd519a5e43398ea9eabe6eed97f6b0"],"c14aed69f37b57db63b1fccc0740b17060a08f2b":["90dfa8ee4e9e118b4c2c1c042bf57d9b460613de"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}