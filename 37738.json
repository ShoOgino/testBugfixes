{"path":"solr/core/src/test/org/apache/solr/search/TestLFUCache#assertNotCache(LFUCache,int...).mjava","commits":[{"id":"3a2591037a85ef083e6588e0b846a5a34ff9b5a3","date":1326403130,"type":0,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestLFUCache#assertNotCache(LFUCache,int...).mjava","pathOld":"/dev/null","sourceNew":"  private void assertNotCache(LFUCache cache, int... gets) {\n    for (int idx : gets) {\n      if (cache.get(idx) != null) {\n        log.error(String.format(\"Unexpected entry %d in cache\", idx));\n        assertTrue(false);\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae81ef60a860c551619f7702a13ba15f7dc024f5","date":1341796635,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestLFUCache#assertNotCache(LFUCache,int...).mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestLFUCache#assertNotCache(LFUCache,int...).mjava","sourceNew":"  private void assertNotCache(LFUCache cache, int... gets) {\n    for (int idx : gets) {\n      if (cache.get(idx) != null) {\n        log.error(String.format(Locale.ROOT, \"Unexpected entry %d in cache\", idx));\n        assertTrue(false);\n      }\n    }\n  }\n\n","sourceOld":"  private void assertNotCache(LFUCache cache, int... gets) {\n    for (int idx : gets) {\n      if (cache.get(idx) != null) {\n        log.error(String.format(\"Unexpected entry %d in cache\", idx));\n        assertTrue(false);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2acf500f78aa12b92e371fd89c719291986b6b90","date":1341846236,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/search/TestLFUCache#assertNotCache(LFUCache,int...).mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestLFUCache#assertNotCache(LFUCache,int...).mjava","sourceNew":"  private void assertNotCache(LFUCache cache, int... gets) {\n    for (int idx : gets) {\n      if (cache.get(idx) != null) {\n        log.error(String.format(Locale.ROOT, \"Unexpected entry %d in cache\", idx));\n        assertTrue(false);\n      }\n    }\n  }\n\n","sourceOld":"  private void assertNotCache(LFUCache cache, int... gets) {\n    for (int idx : gets) {\n      if (cache.get(idx) != null) {\n        log.error(String.format(\"Unexpected entry %d in cache\", idx));\n        assertTrue(false);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"46d8ada1fff8d18cb197c38c7983225162599948","date":1341853497,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/search/TestLFUCache#assertNotCache(LFUCache,int...).mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestLFUCache#assertNotCache(LFUCache,int...).mjava","sourceNew":"  private void assertNotCache(LFUCache cache, int... gets) {\n    for (int idx : gets) {\n      if (cache.get(idx) != null) {\n        log.error(String.format(Locale.ROOT, \"Unexpected entry %d in cache\", idx));\n        assertTrue(false);\n      }\n    }\n  }\n\n","sourceOld":"  private void assertNotCache(LFUCache cache, int... gets) {\n    for (int idx : gets) {\n      if (cache.get(idx) != null) {\n        log.error(String.format(\"Unexpected entry %d in cache\", idx));\n        assertTrue(false);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/search/TestLFUCache#assertNotCache(LFUCache,int...).mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestLFUCache#assertNotCache(LFUCache,int...).mjava","sourceNew":"  private void assertNotCache(LFUCache cache, int... gets) {\n    for (int idx : gets) {\n      if (cache.get(idx) != null) {\n        log.error(String.format(Locale.ROOT, \"Unexpected entry %d in cache\", idx));\n        assertTrue(false);\n      }\n    }\n  }\n\n","sourceOld":"  private void assertNotCache(LFUCache cache, int... gets) {\n    for (int idx : gets) {\n      if (cache.get(idx) != null) {\n        log.error(String.format(\"Unexpected entry %d in cache\", idx));\n        assertTrue(false);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4d7d3943904804560937e6239effeebda0f920e4","date":1573762904,"type":4,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/search/TestLFUCache#assertNotCache(LFUCache,int...).mjava","sourceNew":null,"sourceOld":"  private void assertNotCache(LFUCache cache, int... gets) {\n    for (int idx : gets) {\n      if (cache.get(idx) != null) {\n        log.error(String.format(Locale.ROOT, \"Unexpected entry %d in cache\", idx));\n        assertTrue(false);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ae81ef60a860c551619f7702a13ba15f7dc024f5":["3a2591037a85ef083e6588e0b846a5a34ff9b5a3"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["3a2591037a85ef083e6588e0b846a5a34ff9b5a3","2acf500f78aa12b92e371fd89c719291986b6b90"],"4d7d3943904804560937e6239effeebda0f920e4":["2acf500f78aa12b92e371fd89c719291986b6b90"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2acf500f78aa12b92e371fd89c719291986b6b90":["3a2591037a85ef083e6588e0b846a5a34ff9b5a3","ae81ef60a860c551619f7702a13ba15f7dc024f5"],"3a2591037a85ef083e6588e0b846a5a34ff9b5a3":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4d7d3943904804560937e6239effeebda0f920e4"],"46d8ada1fff8d18cb197c38c7983225162599948":["3a2591037a85ef083e6588e0b846a5a34ff9b5a3","2acf500f78aa12b92e371fd89c719291986b6b90"]},"commit2Childs":{"ae81ef60a860c551619f7702a13ba15f7dc024f5":["2acf500f78aa12b92e371fd89c719291986b6b90"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"4d7d3943904804560937e6239effeebda0f920e4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a2591037a85ef083e6588e0b846a5a34ff9b5a3"],"2acf500f78aa12b92e371fd89c719291986b6b90":["fe33227f6805edab2036cbb80645cc4e2d1fa424","4d7d3943904804560937e6239effeebda0f920e4","46d8ada1fff8d18cb197c38c7983225162599948"],"3a2591037a85ef083e6588e0b846a5a34ff9b5a3":["ae81ef60a860c551619f7702a13ba15f7dc024f5","fe33227f6805edab2036cbb80645cc4e2d1fa424","2acf500f78aa12b92e371fd89c719291986b6b90","46d8ada1fff8d18cb197c38c7983225162599948"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"46d8ada1fff8d18cb197c38c7983225162599948":[]},"heads":["fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817","46d8ada1fff8d18cb197c38c7983225162599948"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}