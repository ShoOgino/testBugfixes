{"path":"lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianShapeFilter#getDocIdSet(IndexReader).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianShapeFilter#getDocIdSet(IndexReader).mjava","pathOld":"contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianShapeFilter#getDocIdSet(IndexReader).mjava","sourceNew":"  @Override\n  public DocIdSet getDocIdSet(final IndexReader reader) throws IOException {\n    final OpenBitSet bits = new OpenBitSet(reader.maxDoc());\n    final TermDocs termDocs = reader.termDocs();\n    final List<Double> area = shape.getArea();\n    int sz = area.size();\n    \n    final Term term = new Term(fieldName);\n    // iterate through each boxid\n    for (int i =0; i< sz; i++) {\n      double boxId = area.get(i).doubleValue();\n      termDocs.seek(term.createTerm(NumericUtils.doubleToPrefixCoded(boxId)));\n      // iterate through all documents\n      // which have this boxId\n      while (termDocs.next()) {\n        bits.fastSet(termDocs.doc());\n      }\n    }\n    return bits;\n  }\n\n","sourceOld":"  @Override\n  public DocIdSet getDocIdSet(final IndexReader reader) throws IOException {\n    final OpenBitSet bits = new OpenBitSet(reader.maxDoc());\n    final TermDocs termDocs = reader.termDocs();\n    final List<Double> area = shape.getArea();\n    int sz = area.size();\n    \n    final Term term = new Term(fieldName);\n    // iterate through each boxid\n    for (int i =0; i< sz; i++) {\n      double boxId = area.get(i).doubleValue();\n      termDocs.seek(term.createTerm(NumericUtils.doubleToPrefixCoded(boxId)));\n      // iterate through all documents\n      // which have this boxId\n      while (termDocs.next()) {\n        bits.fastSet(termDocs.doc());\n      }\n    }\n    return bits;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"955c32f886db6f6356c9fcdea6b1f1cb4effda24","date":1270581567,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianShapeFilter#getDocIdSet(IndexReader).mjava","pathOld":"lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianShapeFilter#getDocIdSet(IndexReader).mjava","sourceNew":"  @Override\n  public DocIdSet getDocIdSet(final IndexReader reader) throws IOException {\n    final Bits delDocs = MultiFields.getDeletedDocs(reader);\n    final List<Double> area = shape.getArea();\n    final int sz = area.size();\n    \n    // iterate through each boxid\n    final BytesRef bytesRef = new BytesRef(NumericUtils.BUF_SIZE_LONG);\n    if (sz == 1) {\n      double boxId = area.get(0).doubleValue();\n      NumericUtils.longToPrefixCoded(NumericUtils.doubleToSortableLong(boxId), 0, bytesRef);\n      return new DocIdSet() {\n        @Override\n        public DocIdSetIterator iterator() throws IOException {\n          return MultiFields.getTermDocsEnum(reader, delDocs, fieldName, bytesRef);\n        }\n        \n        @Override\n        public boolean isCacheable() {\n          return false;\n        }\n      };\n    } else {\n      final OpenBitSet bits = new OpenBitSet(reader.maxDoc());\n      for (int i =0; i< sz; i++) {\n        double boxId = area.get(i).doubleValue();\n        NumericUtils.longToPrefixCoded(NumericUtils.doubleToSortableLong(boxId), 0, bytesRef);\n        final DocsEnum docsEnum = MultiFields.getTermDocsEnum(reader, delDocs, fieldName, bytesRef);\n        if (docsEnum == null) continue;\n        // iterate through all documents\n        // which have this boxId\n        int doc;\n        while ((doc = docsEnum.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n          bits.fastSet(doc);\n        }\n      }\n      return bits;\n    }\n  }\n\n","sourceOld":"  @Override\n  public DocIdSet getDocIdSet(final IndexReader reader) throws IOException {\n    final OpenBitSet bits = new OpenBitSet(reader.maxDoc());\n    final TermDocs termDocs = reader.termDocs();\n    final List<Double> area = shape.getArea();\n    int sz = area.size();\n    \n    final Term term = new Term(fieldName);\n    // iterate through each boxid\n    for (int i =0; i< sz; i++) {\n      double boxId = area.get(i).doubleValue();\n      termDocs.seek(term.createTerm(NumericUtils.doubleToPrefixCoded(boxId)));\n      // iterate through all documents\n      // which have this boxId\n      while (termDocs.next()) {\n        bits.fastSet(termDocs.doc());\n      }\n    }\n    return bits;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0d302ba328993a5b449c2e0b3b5e15ae53e45879","date":1281609097,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianShapeFilter#getDocIdSet(IndexReader).mjava","pathOld":"lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianShapeFilter#getDocIdSet(IndexReader).mjava","sourceNew":"  @Override\n  public DocIdSet getDocIdSet(final IndexReader reader) throws IOException {\n    final Bits delDocs = reader.getDeletedDocs();\n    final List<Double> area = shape.getArea();\n    final int sz = area.size();\n    \n    // iterate through each boxid\n    final BytesRef bytesRef = new BytesRef(NumericUtils.BUF_SIZE_LONG);\n    if (sz == 1) {\n      double boxId = area.get(0).doubleValue();\n      NumericUtils.longToPrefixCoded(NumericUtils.doubleToSortableLong(boxId), 0, bytesRef);\n      return new DocIdSet() {\n        @Override\n        public DocIdSetIterator iterator() throws IOException {\n          return reader.termDocsEnum(delDocs, fieldName, bytesRef);\n        }\n        \n        @Override\n        public boolean isCacheable() {\n          return false;\n        }\n      };\n    } else {\n      final OpenBitSet bits = new OpenBitSet(reader.maxDoc());\n      for (int i =0; i< sz; i++) {\n        double boxId = area.get(i).doubleValue();\n        NumericUtils.longToPrefixCoded(NumericUtils.doubleToSortableLong(boxId), 0, bytesRef);\n        final DocsEnum docsEnum = reader.termDocsEnum(delDocs, fieldName, bytesRef);\n        if (docsEnum == null) continue;\n        // iterate through all documents\n        // which have this boxId\n        int doc;\n        while ((doc = docsEnum.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n          bits.fastSet(doc);\n        }\n      }\n      return bits;\n    }\n  }\n\n","sourceOld":"  @Override\n  public DocIdSet getDocIdSet(final IndexReader reader) throws IOException {\n    final Bits delDocs = MultiFields.getDeletedDocs(reader);\n    final List<Double> area = shape.getArea();\n    final int sz = area.size();\n    \n    // iterate through each boxid\n    final BytesRef bytesRef = new BytesRef(NumericUtils.BUF_SIZE_LONG);\n    if (sz == 1) {\n      double boxId = area.get(0).doubleValue();\n      NumericUtils.longToPrefixCoded(NumericUtils.doubleToSortableLong(boxId), 0, bytesRef);\n      return new DocIdSet() {\n        @Override\n        public DocIdSetIterator iterator() throws IOException {\n          return MultiFields.getTermDocsEnum(reader, delDocs, fieldName, bytesRef);\n        }\n        \n        @Override\n        public boolean isCacheable() {\n          return false;\n        }\n      };\n    } else {\n      final OpenBitSet bits = new OpenBitSet(reader.maxDoc());\n      for (int i =0; i< sz; i++) {\n        double boxId = area.get(i).doubleValue();\n        NumericUtils.longToPrefixCoded(NumericUtils.doubleToSortableLong(boxId), 0, bytesRef);\n        final DocsEnum docsEnum = MultiFields.getTermDocsEnum(reader, delDocs, fieldName, bytesRef);\n        if (docsEnum == null) continue;\n        // iterate through all documents\n        // which have this boxId\n        int doc;\n        while ((doc = docsEnum.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n          bits.fastSet(doc);\n        }\n      }\n      return bits;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianShapeFilter#getDocIdSet(IndexReader).mjava","pathOld":"lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianShapeFilter#getDocIdSet(IndexReader).mjava","sourceNew":"  @Override\n  public DocIdSet getDocIdSet(final IndexReader reader) throws IOException {\n    final Bits delDocs = reader.getDeletedDocs();\n    final List<Double> area = shape.getArea();\n    final int sz = area.size();\n    \n    // iterate through each boxid\n    final BytesRef bytesRef = new BytesRef(NumericUtils.BUF_SIZE_LONG);\n    if (sz == 1) {\n      double boxId = area.get(0).doubleValue();\n      NumericUtils.longToPrefixCoded(NumericUtils.doubleToSortableLong(boxId), 0, bytesRef);\n      return new DocIdSet() {\n        @Override\n        public DocIdSetIterator iterator() throws IOException {\n          return reader.termDocsEnum(delDocs, fieldName, bytesRef);\n        }\n        \n        @Override\n        public boolean isCacheable() {\n          return false;\n        }\n      };\n    } else {\n      final OpenBitSet bits = new OpenBitSet(reader.maxDoc());\n      for (int i =0; i< sz; i++) {\n        double boxId = area.get(i).doubleValue();\n        NumericUtils.longToPrefixCoded(NumericUtils.doubleToSortableLong(boxId), 0, bytesRef);\n        final DocsEnum docsEnum = reader.termDocsEnum(delDocs, fieldName, bytesRef);\n        if (docsEnum == null) continue;\n        // iterate through all documents\n        // which have this boxId\n        int doc;\n        while ((doc = docsEnum.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n          bits.fastSet(doc);\n        }\n      }\n      return bits;\n    }\n  }\n\n","sourceOld":"  @Override\n  public DocIdSet getDocIdSet(final IndexReader reader) throws IOException {\n    final Bits delDocs = MultiFields.getDeletedDocs(reader);\n    final List<Double> area = shape.getArea();\n    final int sz = area.size();\n    \n    // iterate through each boxid\n    final BytesRef bytesRef = new BytesRef(NumericUtils.BUF_SIZE_LONG);\n    if (sz == 1) {\n      double boxId = area.get(0).doubleValue();\n      NumericUtils.longToPrefixCoded(NumericUtils.doubleToSortableLong(boxId), 0, bytesRef);\n      return new DocIdSet() {\n        @Override\n        public DocIdSetIterator iterator() throws IOException {\n          return MultiFields.getTermDocsEnum(reader, delDocs, fieldName, bytesRef);\n        }\n        \n        @Override\n        public boolean isCacheable() {\n          return false;\n        }\n      };\n    } else {\n      final OpenBitSet bits = new OpenBitSet(reader.maxDoc());\n      for (int i =0; i< sz; i++) {\n        double boxId = area.get(i).doubleValue();\n        NumericUtils.longToPrefixCoded(NumericUtils.doubleToSortableLong(boxId), 0, bytesRef);\n        final DocsEnum docsEnum = MultiFields.getTermDocsEnum(reader, delDocs, fieldName, bytesRef);\n        if (docsEnum == null) continue;\n        // iterate through all documents\n        // which have this boxId\n        int doc;\n        while ((doc = docsEnum.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n          bits.fastSet(doc);\n        }\n      }\n      return bits;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2dadf0f3286a34a0fee6e788ffce88624bf2984e","date":1294260428,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianShapeFilter#getDocIdSet(ReaderContext).mjava","pathOld":"lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianShapeFilter#getDocIdSet(IndexReader).mjava","sourceNew":"  @Override\n  public DocIdSet getDocIdSet(final ReaderContext context) throws IOException {\n    final Bits delDocs = context.reader.getDeletedDocs();\n    final List<Double> area = shape.getArea();\n    final int sz = area.size();\n    \n    // iterate through each boxid\n    final BytesRef bytesRef = new BytesRef(NumericUtils.BUF_SIZE_LONG);\n    if (sz == 1) {\n      double boxId = area.get(0).doubleValue();\n      NumericUtils.longToPrefixCoded(NumericUtils.doubleToSortableLong(boxId), 0, bytesRef);\n      return new DocIdSet() {\n        @Override\n        public DocIdSetIterator iterator() throws IOException {\n          return context.reader.termDocsEnum(delDocs, fieldName, bytesRef);\n        }\n        \n        @Override\n        public boolean isCacheable() {\n          return false;\n        }\n      };\n    } else {\n      final OpenBitSet bits = new OpenBitSet(context.reader.maxDoc());\n      for (int i =0; i< sz; i++) {\n        double boxId = area.get(i).doubleValue();\n        NumericUtils.longToPrefixCoded(NumericUtils.doubleToSortableLong(boxId), 0, bytesRef);\n        final DocsEnum docsEnum = context.reader.termDocsEnum(delDocs, fieldName, bytesRef);\n        if (docsEnum == null) continue;\n        // iterate through all documents\n        // which have this boxId\n        int doc;\n        while ((doc = docsEnum.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n          bits.fastSet(doc);\n        }\n      }\n      return bits;\n    }\n  }\n\n","sourceOld":"  @Override\n  public DocIdSet getDocIdSet(final IndexReader reader) throws IOException {\n    final Bits delDocs = reader.getDeletedDocs();\n    final List<Double> area = shape.getArea();\n    final int sz = area.size();\n    \n    // iterate through each boxid\n    final BytesRef bytesRef = new BytesRef(NumericUtils.BUF_SIZE_LONG);\n    if (sz == 1) {\n      double boxId = area.get(0).doubleValue();\n      NumericUtils.longToPrefixCoded(NumericUtils.doubleToSortableLong(boxId), 0, bytesRef);\n      return new DocIdSet() {\n        @Override\n        public DocIdSetIterator iterator() throws IOException {\n          return reader.termDocsEnum(delDocs, fieldName, bytesRef);\n        }\n        \n        @Override\n        public boolean isCacheable() {\n          return false;\n        }\n      };\n    } else {\n      final OpenBitSet bits = new OpenBitSet(reader.maxDoc());\n      for (int i =0; i< sz; i++) {\n        double boxId = area.get(i).doubleValue();\n        NumericUtils.longToPrefixCoded(NumericUtils.doubleToSortableLong(boxId), 0, bytesRef);\n        final DocsEnum docsEnum = reader.termDocsEnum(delDocs, fieldName, bytesRef);\n        if (docsEnum == null) continue;\n        // iterate through all documents\n        // which have this boxId\n        int doc;\n        while ((doc = docsEnum.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n          bits.fastSet(doc);\n        }\n      }\n      return bits;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"868da859b43505d9d2a023bfeae6dd0c795f5295","date":1294948401,"type":4,"author":"Michael Busch","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianShapeFilter#getDocIdSet(IndexReader).mjava","sourceNew":null,"sourceOld":"  @Override\n  public DocIdSet getDocIdSet(final IndexReader reader) throws IOException {\n    final Bits delDocs = reader.getDeletedDocs();\n    final List<Double> area = shape.getArea();\n    final int sz = area.size();\n    \n    // iterate through each boxid\n    final BytesRef bytesRef = new BytesRef(NumericUtils.BUF_SIZE_LONG);\n    if (sz == 1) {\n      double boxId = area.get(0).doubleValue();\n      NumericUtils.longToPrefixCoded(NumericUtils.doubleToSortableLong(boxId), 0, bytesRef);\n      return new DocIdSet() {\n        @Override\n        public DocIdSetIterator iterator() throws IOException {\n          return reader.termDocsEnum(delDocs, fieldName, bytesRef);\n        }\n        \n        @Override\n        public boolean isCacheable() {\n          return false;\n        }\n      };\n    } else {\n      final OpenBitSet bits = new OpenBitSet(reader.maxDoc());\n      for (int i =0; i< sz; i++) {\n        double boxId = area.get(i).doubleValue();\n        NumericUtils.longToPrefixCoded(NumericUtils.doubleToSortableLong(boxId), 0, bytesRef);\n        final DocsEnum docsEnum = reader.termDocsEnum(delDocs, fieldName, bytesRef);\n        if (docsEnum == null) continue;\n        // iterate through all documents\n        // which have this boxId\n        int doc;\n        while ((doc = docsEnum.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n          bits.fastSet(doc);\n        }\n      }\n      return bits;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":4,"author":"Simon Willnauer","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/contrib/spatial/src/java/org/apache/lucene/spatial/tier/CartesianShapeFilter#getDocIdSet(IndexReader).mjava","sourceNew":null,"sourceOld":"  @Override\n  public DocIdSet getDocIdSet(final IndexReader reader) throws IOException {\n    final Bits delDocs = reader.getDeletedDocs();\n    final List<Double> area = shape.getArea();\n    final int sz = area.size();\n    \n    // iterate through each boxid\n    final BytesRef bytesRef = new BytesRef(NumericUtils.BUF_SIZE_LONG);\n    if (sz == 1) {\n      double boxId = area.get(0).doubleValue();\n      NumericUtils.longToPrefixCoded(NumericUtils.doubleToSortableLong(boxId), 0, bytesRef);\n      return new DocIdSet() {\n        @Override\n        public DocIdSetIterator iterator() throws IOException {\n          return reader.termDocsEnum(delDocs, fieldName, bytesRef);\n        }\n        \n        @Override\n        public boolean isCacheable() {\n          return false;\n        }\n      };\n    } else {\n      final OpenBitSet bits = new OpenBitSet(reader.maxDoc());\n      for (int i =0; i< sz; i++) {\n        double boxId = area.get(i).doubleValue();\n        NumericUtils.longToPrefixCoded(NumericUtils.doubleToSortableLong(boxId), 0, bytesRef);\n        final DocsEnum docsEnum = reader.termDocsEnum(delDocs, fieldName, bytesRef);\n        if (docsEnum == null) continue;\n        // iterate through all documents\n        // which have this boxId\n        int doc;\n        while ((doc = docsEnum.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n          bits.fastSet(doc);\n        }\n      }\n      return bits;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"29ef99d61cda9641b6250bf9567329a6e65f901d":["0d302ba328993a5b449c2e0b3b5e15ae53e45879","2dadf0f3286a34a0fee6e788ffce88624bf2984e"],"2dadf0f3286a34a0fee6e788ffce88624bf2984e":["0d302ba328993a5b449c2e0b3b5e15ae53e45879"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"0d302ba328993a5b449c2e0b3b5e15ae53e45879":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["955c32f886db6f6356c9fcdea6b1f1cb4effda24","0d302ba328993a5b449c2e0b3b5e15ae53e45879"],"868da859b43505d9d2a023bfeae6dd0c795f5295":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","2dadf0f3286a34a0fee6e788ffce88624bf2984e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2dadf0f3286a34a0fee6e788ffce88624bf2984e"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"2dadf0f3286a34a0fee6e788ffce88624bf2984e":["29ef99d61cda9641b6250bf9567329a6e65f901d","868da859b43505d9d2a023bfeae6dd0c795f5295","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["0d302ba328993a5b449c2e0b3b5e15ae53e45879","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"0d302ba328993a5b449c2e0b3b5e15ae53e45879":["29ef99d61cda9641b6250bf9567329a6e65f901d","2dadf0f3286a34a0fee6e788ffce88624bf2984e","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["868da859b43505d9d2a023bfeae6dd0c795f5295"],"868da859b43505d9d2a023bfeae6dd0c795f5295":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["29ef99d61cda9641b6250bf9567329a6e65f901d","868da859b43505d9d2a023bfeae6dd0c795f5295","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}