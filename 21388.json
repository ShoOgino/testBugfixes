{"path":"lucene/src/java/org/apache/lucene/index/codecs/DefaultTermVectorsWriter#startField(FieldInfo,int,boolean,boolean).mjava","commits":[{"id":"3cc749c053615f5871f3b95715fe292f34e70a53","date":1321470575,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/DefaultTermVectorsWriter#startField(FieldInfo,int,boolean,boolean).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void startField(FieldInfo info, int numTerms, boolean positions, boolean offsets) throws IOException {\n    assert lastFieldName == null || info.name.compareTo(lastFieldName) > 0: \"fieldName=\" + info.name + \" lastFieldName=\" + lastFieldName;\n    lastFieldName = info.name;\n    this.positions = positions;\n    this.offsets = offsets;\n    lastTerm.length = 0;\n    fps[fieldCount++] = tvf.getFilePointer();\n    tvd.writeVInt(info.number);\n    tvf.writeVInt(numTerms);\n    byte bits = 0x0;\n    if (positions)\n      bits |= DefaultTermVectorsReader.STORE_POSITIONS_WITH_TERMVECTOR;\n    if (offsets)\n      bits |= DefaultTermVectorsReader.STORE_OFFSET_WITH_TERMVECTOR;\n    tvf.writeByte(bits);\n    \n    assert fieldCount <= numVectorFields;\n    if (fieldCount == numVectorFields) {\n      // last field of the document\n      // this is crazy because the file format is crazy!\n      for (int i = 1; i < fieldCount; i++) {\n        tvd.writeVLong(fps[i] - fps[i-1]);\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50","7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50","7dc6ea5fd38ce7aa8f36b3bac8b757da77f31d50"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"cfd7f00f3dbc4c50d336540f063493fc0f7d830f","date":1322850565,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/lucene40/Lucene40TermVectorsWriter#startField(FieldInfo,int,boolean,boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/codecs/DefaultTermVectorsWriter#startField(FieldInfo,int,boolean,boolean).mjava","sourceNew":"  @Override\n  public void startField(FieldInfo info, int numTerms, boolean positions, boolean offsets) throws IOException {\n    assert lastFieldName == null || info.name.compareTo(lastFieldName) > 0: \"fieldName=\" + info.name + \" lastFieldName=\" + lastFieldName;\n    lastFieldName = info.name;\n    this.positions = positions;\n    this.offsets = offsets;\n    lastTerm.length = 0;\n    fps[fieldCount++] = tvf.getFilePointer();\n    tvd.writeVInt(info.number);\n    tvf.writeVInt(numTerms);\n    byte bits = 0x0;\n    if (positions)\n      bits |= Lucene40TermVectorsReader.STORE_POSITIONS_WITH_TERMVECTOR;\n    if (offsets)\n      bits |= Lucene40TermVectorsReader.STORE_OFFSET_WITH_TERMVECTOR;\n    tvf.writeByte(bits);\n    \n    assert fieldCount <= numVectorFields;\n    if (fieldCount == numVectorFields) {\n      // last field of the document\n      // this is crazy because the file format is crazy!\n      for (int i = 1; i < fieldCount; i++) {\n        tvd.writeVLong(fps[i] - fps[i-1]);\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void startField(FieldInfo info, int numTerms, boolean positions, boolean offsets) throws IOException {\n    assert lastFieldName == null || info.name.compareTo(lastFieldName) > 0: \"fieldName=\" + info.name + \" lastFieldName=\" + lastFieldName;\n    lastFieldName = info.name;\n    this.positions = positions;\n    this.offsets = offsets;\n    lastTerm.length = 0;\n    fps[fieldCount++] = tvf.getFilePointer();\n    tvd.writeVInt(info.number);\n    tvf.writeVInt(numTerms);\n    byte bits = 0x0;\n    if (positions)\n      bits |= DefaultTermVectorsReader.STORE_POSITIONS_WITH_TERMVECTOR;\n    if (offsets)\n      bits |= DefaultTermVectorsReader.STORE_OFFSET_WITH_TERMVECTOR;\n    tvf.writeByte(bits);\n    \n    assert fieldCount <= numVectorFields;\n    if (fieldCount == numVectorFields) {\n      // last field of the document\n      // this is crazy because the file format is crazy!\n      for (int i = 1; i < fieldCount; i++) {\n        tvd.writeVLong(fps[i] - fps[i-1]);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"cfd7f00f3dbc4c50d336540f063493fc0f7d830f":["3cc749c053615f5871f3b95715fe292f34e70a53"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cc749c053615f5871f3b95715fe292f34e70a53":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["cfd7f00f3dbc4c50d336540f063493fc0f7d830f"]},"commit2Childs":{"cfd7f00f3dbc4c50d336540f063493fc0f7d830f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3cc749c053615f5871f3b95715fe292f34e70a53"],"3cc749c053615f5871f3b95715fe292f34e70a53":["cfd7f00f3dbc4c50d336540f063493fc0f7d830f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}