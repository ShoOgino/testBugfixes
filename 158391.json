{"path":"lucene/analysis/common/src/java/org/tartarus/snowball/SnowballProgram#slice_check().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/tartarus/snowball/SnowballProgram#slice_check().mjava","pathOld":"modules/analysis/common/src/java/org/tartarus/snowball/SnowballProgram#slice_check().mjava","sourceNew":"    protected void slice_check()\n    {\n\tif (bra < 0 ||\n\t    bra > ket ||\n\t    ket > limit)\n\t{\n\t    System.err.println(\"faulty slice operation\");\n\t// FIXME: report error somehow.\n\t/*\n\t    fprintf(stderr, \"faulty slice operation:\\n\");\n\t    debug(z, -1, 0);\n\t    exit(1);\n\t    */\n\t}\n    }\n\n","sourceOld":"    protected void slice_check()\n    {\n\tif (bra < 0 ||\n\t    bra > ket ||\n\t    ket > limit)\n\t{\n\t    System.err.println(\"faulty slice operation\");\n\t// FIXME: report error somehow.\n\t/*\n\t    fprintf(stderr, \"faulty slice operation:\\n\");\n\t    debug(z, -1, 0);\n\t    exit(1);\n\t    */\n\t}\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2f6156e2f0d1d529001873677c1cc6a22d6b9f9a","date":1342021960,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/tartarus/snowball/SnowballProgram#slice_check().mjava","pathOld":"lucene/analysis/common/src/java/org/tartarus/snowball/SnowballProgram#slice_check().mjava","sourceNew":"    protected void slice_check()\n    {\n\tif (bra < 0 ||\n\t    bra > ket ||\n\t    ket > limit)\n\t{\n\t    throw new IllegalArgumentException(\"faulty slice operation: bra=\" + bra + \",ket=\" + ket + \",limit=\" + limit);\n\t// FIXME: report error somehow.\n\t/*\n\t    fprintf(stderr, \"faulty slice operation:\\n\");\n\t    debug(z, -1, 0);\n\t    exit(1);\n\t    */\n\t}\n    }\n\n","sourceOld":"    protected void slice_check()\n    {\n\tif (bra < 0 ||\n\t    bra > ket ||\n\t    ket > limit)\n\t{\n\t    System.err.println(\"faulty slice operation\");\n\t// FIXME: report error somehow.\n\t/*\n\t    fprintf(stderr, \"faulty slice operation:\\n\");\n\t    debug(z, -1, 0);\n\t    exit(1);\n\t    */\n\t}\n    }\n\n","bugFix":["8497ea87d47a78ce96caf21099e6e5fd3536b512"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/analysis/common/src/java/org/tartarus/snowball/SnowballProgram#slice_check().mjava","pathOld":"lucene/analysis/common/src/java/org/tartarus/snowball/SnowballProgram#slice_check().mjava","sourceNew":"    protected void slice_check()\n    {\n\tif (bra < 0 ||\n\t    bra > ket ||\n\t    ket > limit)\n\t{\n\t    throw new IllegalArgumentException(\"faulty slice operation: bra=\" + bra + \",ket=\" + ket + \",limit=\" + limit);\n\t// FIXME: report error somehow.\n\t/*\n\t    fprintf(stderr, \"faulty slice operation:\\n\");\n\t    debug(z, -1, 0);\n\t    exit(1);\n\t    */\n\t}\n    }\n\n","sourceOld":"    protected void slice_check()\n    {\n\tif (bra < 0 ||\n\t    bra > ket ||\n\t    ket > limit)\n\t{\n\t    System.err.println(\"faulty slice operation\");\n\t// FIXME: report error somehow.\n\t/*\n\t    fprintf(stderr, \"faulty slice operation:\\n\");\n\t    debug(z, -1, 0);\n\t    exit(1);\n\t    */\n\t}\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"aba371508186796cc6151d8223a5b4e16d02e26e","date":1343474871,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/analysis/common/src/java/org/tartarus/snowball/SnowballProgram#slice_check().mjava","pathOld":"lucene/analysis/common/src/java/org/tartarus/snowball/SnowballProgram#slice_check().mjava","sourceNew":"    protected void slice_check()\n    {\n\tif (bra < 0 ||\n\t    bra > ket ||\n\t    ket > limit)\n\t{\n\t    throw new IllegalArgumentException(\"faulty slice operation: bra=\" + bra + \",ket=\" + ket + \",limit=\" + limit);\n\t// FIXME: report error somehow.\n\t/*\n\t    fprintf(stderr, \"faulty slice operation:\\n\");\n\t    debug(z, -1, 0);\n\t    exit(1);\n\t    */\n\t}\n    }\n\n","sourceOld":"    protected void slice_check()\n    {\n\tif (bra < 0 ||\n\t    bra > ket ||\n\t    ket > limit)\n\t{\n\t    System.err.println(\"faulty slice operation\");\n\t// FIXME: report error somehow.\n\t/*\n\t    fprintf(stderr, \"faulty slice operation:\\n\");\n\t    debug(z, -1, 0);\n\t    exit(1);\n\t    */\n\t}\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4093b270ba337f9c25a4c0e6cb2ae2c07f697376","date":1347897716,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/tartarus/snowball/SnowballProgram#slice_check().mjava","pathOld":"lucene/analysis/common/src/java/org/tartarus/snowball/SnowballProgram#slice_check().mjava","sourceNew":"  protected void slice_check() {\n    if (bra < 0 ||\n        bra > ket ||\n        ket > limit) {\n      throw new IllegalArgumentException(\"faulty slice operation: bra=\" + bra + \",ket=\" + ket + \",limit=\" + limit);\n      // FIXME: report error somehow.\n      /*\n      fprintf(stderr, \"faulty slice operation:\\n\");\n      debug(z, -1, 0);\n      exit(1);\n      */\n    }\n  }\n\n","sourceOld":"    protected void slice_check()\n    {\n\tif (bra < 0 ||\n\t    bra > ket ||\n\t    ket > limit)\n\t{\n\t    throw new IllegalArgumentException(\"faulty slice operation: bra=\" + bra + \",ket=\" + ket + \",limit=\" + limit);\n\t// FIXME: report error somehow.\n\t/*\n\t    fprintf(stderr, \"faulty slice operation:\\n\");\n\t    debug(z, -1, 0);\n\t    exit(1);\n\t    */\n\t}\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"09479cd2de06c67a115b7346a8e5de8af4d62e81","date":1581961081,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/java/org/tartarus/snowball/SnowballProgram#slice_check().mjava","pathOld":"lucene/analysis/common/src/java/org/tartarus/snowball/SnowballProgram#slice_check().mjava","sourceNew":"  protected void slice_check()\n  {\n    if (bra < 0 ||\n      bra > ket ||\n      ket > limit)\n    {\n       throw new IllegalArgumentException(\"faulty slice operation: bra=\" + bra + \",ket=\" + ket + \",limit=\" + limit);\n    }\n  }\n\n","sourceOld":"  protected void slice_check() {\n    if (bra < 0 ||\n        bra > ket ||\n        ket > limit) {\n      throw new IllegalArgumentException(\"faulty slice operation: bra=\" + bra + \",ket=\" + ket + \",limit=\" + limit);\n      // FIXME: report error somehow.\n      /*\n      fprintf(stderr, \"faulty slice operation:\\n\");\n      debug(z, -1, 0);\n      exit(1);\n      */\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"2f6156e2f0d1d529001873677c1cc6a22d6b9f9a":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"aba371508186796cc6151d8223a5b4e16d02e26e":["b89678825b68eccaf09e6ab71675fc0b0af1e099","2f6156e2f0d1d529001873677c1cc6a22d6b9f9a"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["b89678825b68eccaf09e6ab71675fc0b0af1e099","2f6156e2f0d1d529001873677c1cc6a22d6b9f9a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"09479cd2de06c67a115b7346a8e5de8af4d62e81":["4093b270ba337f9c25a4c0e6cb2ae2c07f697376"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["09479cd2de06c67a115b7346a8e5de8af4d62e81"],"4093b270ba337f9c25a4c0e6cb2ae2c07f697376":["2f6156e2f0d1d529001873677c1cc6a22d6b9f9a"]},"commit2Childs":{"2f6156e2f0d1d529001873677c1cc6a22d6b9f9a":["aba371508186796cc6151d8223a5b4e16d02e26e","fe33227f6805edab2036cbb80645cc4e2d1fa424","4093b270ba337f9c25a4c0e6cb2ae2c07f697376"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["2f6156e2f0d1d529001873677c1cc6a22d6b9f9a","aba371508186796cc6151d8223a5b4e16d02e26e","fe33227f6805edab2036cbb80645cc4e2d1fa424"],"aba371508186796cc6151d8223a5b4e16d02e26e":[],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"09479cd2de06c67a115b7346a8e5de8af4d62e81":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4093b270ba337f9c25a4c0e6cb2ae2c07f697376":["09479cd2de06c67a115b7346a8e5de8af4d62e81"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["aba371508186796cc6151d8223a5b4e16d02e26e","fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}