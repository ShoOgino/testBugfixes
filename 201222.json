{"path":"solr/core/src/java/org/apache/solr/cloud/ShardLeaderElectionContext[ElectionContext]#rejoinLeaderElection(SolrCore).mjava","commits":[{"id":"5455c7b3fed6c1671990a44c19071cb0488c2c25","date":1413557414,"type":1,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/ShardLeaderElectionContext[ElectionContext]#rejoinLeaderElection(SolrCore).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/ShardLeaderElectionContext[ElectionContext]#rejoinLeaderElection(String,SolrCore).mjava","sourceNew":"  private void rejoinLeaderElection(SolrCore core)\n      throws InterruptedException, KeeperException, IOException {\n    // remove our ephemeral and re join the election\n    if (cc.isShutDown()) {\n      log.info(\"Not rejoining election because CoreContainer is closed\");\n      return;\n    }\n    \n    log.info(\"There may be a better leader candidate than us - going back into recovery\");\n    \n    cancelElection();\n    \n    core.getUpdateHandler().getSolrCoreState().doRecovery(cc, core.getCoreDescriptor());\n    \n    leaderElector.joinElection(this, true);\n  }\n\n","sourceOld":"  private void rejoinLeaderElection(String leaderSeqPath, SolrCore core)\n      throws InterruptedException, KeeperException, IOException {\n    // remove our ephemeral and re join the election\n    if (cc.isShutDown()) {\n      log.info(\"Not rejoining election because CoreContainer is close\");\n      return;\n    }\n    \n    log.info(\"There may be a better leader candidate than us - going back into recovery\");\n    \n    cancelElection();\n    \n    core.getUpdateHandler().getSolrCoreState().doRecovery(cc, core.getCoreDescriptor());\n    \n    leaderElector.joinElection(this, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0a22eafe3f72a4c2945eaad9547e6c78816978f4","date":1413956657,"type":1,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/ShardLeaderElectionContext[ElectionContext]#rejoinLeaderElection(SolrCore).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/ShardLeaderElectionContext[ElectionContext]#rejoinLeaderElection(String,SolrCore).mjava","sourceNew":"  private void rejoinLeaderElection(SolrCore core)\n      throws InterruptedException, KeeperException, IOException {\n    // remove our ephemeral and re join the election\n    if (cc.isShutDown()) {\n      log.info(\"Not rejoining election because CoreContainer is closed\");\n      return;\n    }\n    \n    log.info(\"There may be a better leader candidate than us - going back into recovery\");\n    \n    cancelElection();\n    \n    core.getUpdateHandler().getSolrCoreState().doRecovery(cc, core.getCoreDescriptor());\n    \n    leaderElector.joinElection(this, true);\n  }\n\n","sourceOld":"  private void rejoinLeaderElection(String leaderSeqPath, SolrCore core)\n      throws InterruptedException, KeeperException, IOException {\n    // remove our ephemeral and re join the election\n    if (cc.isShutDown()) {\n      log.info(\"Not rejoining election because CoreContainer is close\");\n      return;\n    }\n    \n    log.info(\"There may be a better leader candidate than us - going back into recovery\");\n    \n    cancelElection();\n    \n    core.getUpdateHandler().getSolrCoreState().doRecovery(cc, core.getCoreDescriptor());\n    \n    leaderElector.joinElection(this, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a5d615d62cd8aff3690943d765e46942551f98b6","date":1474881754,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/ShardLeaderElectionContext[ElectionContext]#rejoinLeaderElection(SolrCore).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/ShardLeaderElectionContext[ElectionContext]#rejoinLeaderElection(SolrCore).mjava","sourceNew":"  private void rejoinLeaderElection(SolrCore core)\n      throws InterruptedException, KeeperException, IOException {\n    // remove our ephemeral and re join the election\n    if (cc.isShutDown()) {\n      log.debug(\"Not rejoining election because CoreContainer is closed\");\n      return;\n    }\n    \n    log.info(\"There may be a better leader candidate than us - going back into recovery\");\n    \n    cancelElection();\n    \n    core.getUpdateHandler().getSolrCoreState().doRecovery(cc, core.getCoreDescriptor());\n    \n    leaderElector.joinElection(this, true);\n  }\n\n","sourceOld":"  private void rejoinLeaderElection(SolrCore core)\n      throws InterruptedException, KeeperException, IOException {\n    // remove our ephemeral and re join the election\n    if (cc.isShutDown()) {\n      log.info(\"Not rejoining election because CoreContainer is closed\");\n      return;\n    }\n    \n    log.info(\"There may be a better leader candidate than us - going back into recovery\");\n    \n    cancelElection();\n    \n    core.getUpdateHandler().getSolrCoreState().doRecovery(cc, core.getCoreDescriptor());\n    \n    leaderElector.joinElection(this, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17e5da53e4e5bd659e22add9bba1cfa222e7e30d","date":1475435902,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/ShardLeaderElectionContext[ElectionContext]#rejoinLeaderElection(SolrCore).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/ShardLeaderElectionContext[ElectionContext]#rejoinLeaderElection(SolrCore).mjava","sourceNew":"  private void rejoinLeaderElection(SolrCore core)\n      throws InterruptedException, KeeperException, IOException {\n    // remove our ephemeral and re join the election\n    if (cc.isShutDown()) {\n      log.debug(\"Not rejoining election because CoreContainer is closed\");\n      return;\n    }\n    \n    log.info(\"There may be a better leader candidate than us - going back into recovery\");\n    \n    cancelElection();\n    \n    core.getUpdateHandler().getSolrCoreState().doRecovery(cc, core.getCoreDescriptor());\n    \n    leaderElector.joinElection(this, true);\n  }\n\n","sourceOld":"  private void rejoinLeaderElection(SolrCore core)\n      throws InterruptedException, KeeperException, IOException {\n    // remove our ephemeral and re join the election\n    if (cc.isShutDown()) {\n      log.info(\"Not rejoining election because CoreContainer is closed\");\n      return;\n    }\n    \n    log.info(\"There may be a better leader candidate than us - going back into recovery\");\n    \n    cancelElection();\n    \n    core.getUpdateHandler().getSolrCoreState().doRecovery(cc, core.getCoreDescriptor());\n    \n    leaderElector.joinElection(this, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/ShardLeaderElectionContext[ElectionContext]#rejoinLeaderElection(SolrCore).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/ShardLeaderElectionContext[ElectionContext]#rejoinLeaderElection(SolrCore).mjava","sourceNew":"  private void rejoinLeaderElection(SolrCore core)\n      throws InterruptedException, KeeperException, IOException {\n    // remove our ephemeral and re join the election\n    if (cc.isShutDown()) {\n      log.debug(\"Not rejoining election because CoreContainer is closed\");\n      return;\n    }\n    \n    log.info(\"There may be a better leader candidate than us - going back into recovery\");\n    \n    cancelElection();\n    \n    core.getUpdateHandler().getSolrCoreState().doRecovery(cc, core.getCoreDescriptor());\n    \n    leaderElector.joinElection(this, true);\n  }\n\n","sourceOld":"  private void rejoinLeaderElection(SolrCore core)\n      throws InterruptedException, KeeperException, IOException {\n    // remove our ephemeral and re join the election\n    if (cc.isShutDown()) {\n      log.info(\"Not rejoining election because CoreContainer is closed\");\n      return;\n    }\n    \n    log.info(\"There may be a better leader candidate than us - going back into recovery\");\n    \n    cancelElection();\n    \n    core.getUpdateHandler().getSolrCoreState().doRecovery(cc, core.getCoreDescriptor());\n    \n    leaderElector.joinElection(this, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba33781da68babcaa5828121b443d3eb5c9d8480","date":1590595589,"type":5,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/ShardLeaderElectionContext#rejoinLeaderElection(SolrCore).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/ShardLeaderElectionContext[ElectionContext]#rejoinLeaderElection(SolrCore).mjava","sourceNew":"  private void rejoinLeaderElection(SolrCore core)\n      throws InterruptedException, KeeperException, IOException {\n    // remove our ephemeral and re join the election\n    if (cc.isShutDown()) {\n      log.debug(\"Not rejoining election because CoreContainer is closed\");\n      return;\n    }\n\n    log.info(\"There may be a better leader candidate than us - going back into recovery\");\n\n    cancelElection();\n\n    core.getUpdateHandler().getSolrCoreState().doRecovery(cc, core.getCoreDescriptor());\n\n    leaderElector.joinElection(this, true);\n  }\n\n","sourceOld":"  private void rejoinLeaderElection(SolrCore core)\n      throws InterruptedException, KeeperException, IOException {\n    // remove our ephemeral and re join the election\n    if (cc.isShutDown()) {\n      log.debug(\"Not rejoining election because CoreContainer is closed\");\n      return;\n    }\n    \n    log.info(\"There may be a better leader candidate than us - going back into recovery\");\n    \n    cancelElection();\n    \n    core.getUpdateHandler().getSolrCoreState().doRecovery(cc, core.getCoreDescriptor());\n    \n    leaderElector.joinElection(this, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a5d615d62cd8aff3690943d765e46942551f98b6":["5455c7b3fed6c1671990a44c19071cb0488c2c25"],"0a22eafe3f72a4c2945eaad9547e6c78816978f4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5455c7b3fed6c1671990a44c19071cb0488c2c25"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["5455c7b3fed6c1671990a44c19071cb0488c2c25","a5d615d62cd8aff3690943d765e46942551f98b6"],"5455c7b3fed6c1671990a44c19071cb0488c2c25":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ba33781da68babcaa5828121b443d3eb5c9d8480":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["5455c7b3fed6c1671990a44c19071cb0488c2c25","17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ba33781da68babcaa5828121b443d3eb5c9d8480"]},"commit2Childs":{"a5d615d62cd8aff3690943d765e46942551f98b6":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"0a22eafe3f72a4c2945eaad9547e6c78816978f4":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0a22eafe3f72a4c2945eaad9547e6c78816978f4","5455c7b3fed6c1671990a44c19071cb0488c2c25"],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["ba33781da68babcaa5828121b443d3eb5c9d8480","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"5455c7b3fed6c1671990a44c19071cb0488c2c25":["a5d615d62cd8aff3690943d765e46942551f98b6","0a22eafe3f72a4c2945eaad9547e6c78816978f4","17e5da53e4e5bd659e22add9bba1cfa222e7e30d","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"ba33781da68babcaa5828121b443d3eb5c9d8480":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["0a22eafe3f72a4c2945eaad9547e6c78816978f4","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}