{"path":"solr/core/src/java/org/apache/solr/cloud/DistributedMap#DistributedMap(SolrZkClient,String,List[ACL]).mjava","commits":[{"id":"058f5a3debcfa0ea477da3eabb4cbe2ec0fac211","date":1394784078,"type":0,"author":"Anshum Gupta","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/DistributedMap#DistributedMap(SolrZkClient,String,List[ACL]).mjava","pathOld":"/dev/null","sourceNew":"  public DistributedMap(SolrZkClient zookeeper, String dir, List<ACL> acl) {\n    this.dir = dir;\n\n    ZkCmdExecutor cmdExecutor = new ZkCmdExecutor(zookeeper.getZkClientTimeout());\n    try {\n      cmdExecutor.ensureExists(dir, zookeeper);\n    } catch (KeeperException e) {\n      throw new SolrException(ErrorCode.SERVER_ERROR, e);\n    } catch (InterruptedException e) {\n      Thread.currentThread().interrupt();\n      throw new SolrException(ErrorCode.SERVER_ERROR, e);\n    }\n\n    if (acl != null) {\n      this.acl = acl;\n    }\n    this.zookeeper = zookeeper;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c83f985d9828d30801541f1eed26aa3169646baf","date":1409315453,"type":3,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/DistributedMap#DistributedMap(SolrZkClient,String,List[ACL]).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/DistributedMap#DistributedMap(SolrZkClient,String,List[ACL]).mjava","sourceNew":"  public DistributedMap(SolrZkClient zookeeper, String dir, List<ACL> acl) {\n    this.dir = dir;\n\n    ZkCmdExecutor cmdExecutor = new ZkCmdExecutor(zookeeper.getZkClientTimeout());\n    try {\n      cmdExecutor.ensureExists(dir, zookeeper);\n    } catch (KeeperException e) {\n      throw new SolrException(ErrorCode.SERVER_ERROR, e);\n    } catch (InterruptedException e) {\n      Thread.currentThread().interrupt();\n      throw new SolrException(ErrorCode.SERVER_ERROR, e);\n    }\n\n    this.zookeeper = zookeeper;\n  }\n\n","sourceOld":"  public DistributedMap(SolrZkClient zookeeper, String dir, List<ACL> acl) {\n    this.dir = dir;\n\n    ZkCmdExecutor cmdExecutor = new ZkCmdExecutor(zookeeper.getZkClientTimeout());\n    try {\n      cmdExecutor.ensureExists(dir, zookeeper);\n    } catch (KeeperException e) {\n      throw new SolrException(ErrorCode.SERVER_ERROR, e);\n    } catch (InterruptedException e) {\n      Thread.currentThread().interrupt();\n      throw new SolrException(ErrorCode.SERVER_ERROR, e);\n    }\n\n    if (acl != null) {\n      this.acl = acl;\n    }\n    this.zookeeper = zookeeper;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c4240d54e1e9886aff46e198b55314039ba37397","date":1455910430,"type":5,"author":"markrmiller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/DistributedMap#DistributedMap(SolrZkClient,String).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/DistributedMap#DistributedMap(SolrZkClient,String,List[ACL]).mjava","sourceNew":"  public DistributedMap(SolrZkClient zookeeper, String dir) {\n    this.dir = dir;\n\n    ZkCmdExecutor cmdExecutor = new ZkCmdExecutor(zookeeper.getZkClientTimeout());\n    try {\n      cmdExecutor.ensureExists(dir, zookeeper);\n    } catch (KeeperException e) {\n      throw new SolrException(ErrorCode.SERVER_ERROR, e);\n    } catch (InterruptedException e) {\n      Thread.currentThread().interrupt();\n      throw new SolrException(ErrorCode.SERVER_ERROR, e);\n    }\n\n    this.zookeeper = zookeeper;\n  }\n\n","sourceOld":"  public DistributedMap(SolrZkClient zookeeper, String dir, List<ACL> acl) {\n    this.dir = dir;\n\n    ZkCmdExecutor cmdExecutor = new ZkCmdExecutor(zookeeper.getZkClientTimeout());\n    try {\n      cmdExecutor.ensureExists(dir, zookeeper);\n    } catch (KeeperException e) {\n      throw new SolrException(ErrorCode.SERVER_ERROR, e);\n    } catch (InterruptedException e) {\n      Thread.currentThread().interrupt();\n      throw new SolrException(ErrorCode.SERVER_ERROR, e);\n    }\n\n    this.zookeeper = zookeeper;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c4240d54e1e9886aff46e198b55314039ba37397":["c83f985d9828d30801541f1eed26aa3169646baf"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"058f5a3debcfa0ea477da3eabb4cbe2ec0fac211":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c83f985d9828d30801541f1eed26aa3169646baf":["058f5a3debcfa0ea477da3eabb4cbe2ec0fac211"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c4240d54e1e9886aff46e198b55314039ba37397"]},"commit2Childs":{"c4240d54e1e9886aff46e198b55314039ba37397":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["058f5a3debcfa0ea477da3eabb4cbe2ec0fac211"],"058f5a3debcfa0ea477da3eabb4cbe2ec0fac211":["c83f985d9828d30801541f1eed26aa3169646baf"],"c83f985d9828d30801541f1eed26aa3169646baf":["c4240d54e1e9886aff46e198b55314039ba37397"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}