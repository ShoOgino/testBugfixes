{"path":"src/test/org/apache/solr/highlight/HighlighterTest#testCustomSimpleFormatterHighlight().mjava","commits":[{"id":"218fde9d650f817f30726670473f41b564398acd","date":1181882189,"type":1,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/test/org/apache/solr/highlight/HighlighterTest#testCustomSimpleFormatterHighlight().mjava","pathOld":"src/test/org/apache/solr/HighlighterTest#testCustomSimpleFormatterHighlight().mjava","sourceNew":"  public void testCustomSimpleFormatterHighlight() {\n\n    // do summarization using a custom formatter\n    HashMap<String,String> args = new HashMap<String,String>();\n    args.put(\"hl\", \"true\");\n    args.put(\"hl.fl\", \"t_text\");\n    args.put(\"hl.simple.pre\",\"<B>\");\n    args.put(\"hl.simple.post\",\"</B>\");\n    TestHarness.LocalRequestFactory sumLRF = h.getRequestFactory(\n      \"standard\", 0, 200, args);\n    \n    assertU(adoc(\"t_text\", \"a long days night\", \"id\", \"1\"));\n    assertU(commit());\n    assertU(optimize());\n    assertQ(\"Basic summarization\",\n            sumLRF.makeRequest(\"t_text:long\"),\n            \"//lst[@name='highlighting']/lst[@name='1']\",\n            \"//lst[@name='1']/arr[@name='t_text']/str[.='a <B>long</B> days night']\"\n            );\n    \n    // test a per-field override\n    args.put(\"f.t_text.hl.simple.pre\",\"<I>\");\n    args.put(\"f.t_text.hl.simple.post\",\"</I>\");\n    sumLRF = h.getRequestFactory(\n          \"standard\", 0, 200, args);\n    assertQ(\"Basic summarization\",\n          sumLRF.makeRequest(\"t_text:long\"),\n          \"//lst[@name='highlighting']/lst[@name='1']\",\n          \"//lst[@name='1']/arr[@name='t_text']/str[.='a <I>long</I> days night']\"\n          );\n    \n  }\n\n","sourceOld":"  public void testCustomSimpleFormatterHighlight() {\n\n    // do summarization using a custom formatter\n    HashMap<String,String> args = new HashMap<String,String>();\n    args.put(\"hl\", \"true\");\n    args.put(\"hl.fl\", \"t_text\");\n    args.put(\"hl.simple.pre\",\"<B>\");\n    args.put(\"hl.simple.post\",\"</B>\");\n    TestHarness.LocalRequestFactory sumLRF = h.getRequestFactory(\n      \"standard\", 0, 200, args);\n    \n    assertU(adoc(\"t_text\", \"a long days night\", \"id\", \"1\"));\n    assertU(commit());\n    assertU(optimize());\n    assertQ(\"Basic summarization\",\n            sumLRF.makeRequest(\"t_text:long\"),\n            \"//lst[@name='highlighting']/lst[@name='1']\",\n            \"//lst[@name='1']/arr[@name='t_text']/str[.='a <B>long</B> days night']\"\n            );\n    \n    // test a per-field override\n    args.put(\"f.t_text.hl.simple.pre\",\"<I>\");\n    args.put(\"f.t_text.hl.simple.post\",\"</I>\");\n    sumLRF = h.getRequestFactory(\n          \"standard\", 0, 200, args);\n    assertQ(\"Basic summarization\",\n          sumLRF.makeRequest(\"t_text:long\"),\n          \"//lst[@name='highlighting']/lst[@name='1']\",\n          \"//lst[@name='1']/arr[@name='t_text']/str[.='a <I>long</I> days night']\"\n          );\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/highlight/HighlighterTest#testCustomSimpleFormatterHighlight().mjava","pathOld":"src/test/org/apache/solr/highlight/HighlighterTest#testCustomSimpleFormatterHighlight().mjava","sourceNew":"  public void testCustomSimpleFormatterHighlight() {\n\n    // do summarization using a custom formatter\n    HashMap<String,String> args = new HashMap<String,String>();\n    args.put(\"hl\", \"true\");\n    args.put(\"hl.fl\", \"t_text\");\n    args.put(\"hl.simple.pre\",\"<B>\");\n    args.put(\"hl.simple.post\",\"</B>\");\n    TestHarness.LocalRequestFactory sumLRF = h.getRequestFactory(\n      \"standard\", 0, 200, args);\n    \n    assertU(adoc(\"t_text\", \"a long days night\", \"id\", \"1\"));\n    assertU(commit());\n    assertU(optimize());\n    assertQ(\"Basic summarization\",\n            sumLRF.makeRequest(\"t_text:long\"),\n            \"//lst[@name='highlighting']/lst[@name='1']\",\n            \"//lst[@name='1']/arr[@name='t_text']/str[.='a <B>long</B> days night']\"\n            );\n    \n    // test a per-field override\n    args.put(\"f.t_text.hl.simple.pre\",\"<I>\");\n    args.put(\"f.t_text.hl.simple.post\",\"</I>\");\n    sumLRF = h.getRequestFactory(\n          \"standard\", 0, 200, args);\n    assertQ(\"Basic summarization\",\n          sumLRF.makeRequest(\"t_text:long\"),\n          \"//lst[@name='highlighting']/lst[@name='1']\",\n          \"//lst[@name='1']/arr[@name='t_text']/str[.='a <I>long</I> days night']\"\n          );\n    \n  }\n\n","sourceOld":"  public void testCustomSimpleFormatterHighlight() {\n\n    // do summarization using a custom formatter\n    HashMap<String,String> args = new HashMap<String,String>();\n    args.put(\"hl\", \"true\");\n    args.put(\"hl.fl\", \"t_text\");\n    args.put(\"hl.simple.pre\",\"<B>\");\n    args.put(\"hl.simple.post\",\"</B>\");\n    TestHarness.LocalRequestFactory sumLRF = h.getRequestFactory(\n      \"standard\", 0, 200, args);\n    \n    assertU(adoc(\"t_text\", \"a long days night\", \"id\", \"1\"));\n    assertU(commit());\n    assertU(optimize());\n    assertQ(\"Basic summarization\",\n            sumLRF.makeRequest(\"t_text:long\"),\n            \"//lst[@name='highlighting']/lst[@name='1']\",\n            \"//lst[@name='1']/arr[@name='t_text']/str[.='a <B>long</B> days night']\"\n            );\n    \n    // test a per-field override\n    args.put(\"f.t_text.hl.simple.pre\",\"<I>\");\n    args.put(\"f.t_text.hl.simple.post\",\"</I>\");\n    sumLRF = h.getRequestFactory(\n          \"standard\", 0, 200, args);\n    assertQ(\"Basic summarization\",\n          sumLRF.makeRequest(\"t_text:long\"),\n          \"//lst[@name='highlighting']/lst[@name='1']\",\n          \"//lst[@name='1']/arr[@name='t_text']/str[.='a <I>long</I> days night']\"\n          );\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"218fde9d650f817f30726670473f41b564398acd":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["218fde9d650f817f30726670473f41b564398acd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"218fde9d650f817f30726670473f41b564398acd":["ad94625fb8d088209f46650c8097196fec67f00c"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["218fde9d650f817f30726670473f41b564398acd"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}