{"path":"lucene/src/test/org/apache/lucene/search/TestMultiTermQueryBWComp#beforeClass().mjava","commits":[{"id":"955c32f886db6f6356c9fcdea6b1f1cb4effda24","date":1270581567,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestMultiTermQueryBWComp#beforeClass().mjava","pathOld":"/dev/null","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, \n        new WhitespaceAnalyzer(TEST_VERSION_CURRENT), true, \n        IndexWriter.MaxFieldLength.LIMITED);\n    \n    String values[] = { \"old\", \"old2\", \"new\", \"new2\" };\n    for (String value : values) {\n      Document doc = new Document();\n      doc.add(new Field(FIELD, value, \n          Field.Store.YES, Field.Index.ANALYZED));   \n      writer.addDocument(doc);\n    }\n\n    writer.optimize();\n    writer.close();\n    searcher = new IndexSearcher(dir, true);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d572389229127c297dd1fa5ce4758e1cec41e799","date":1273610938,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestMultiTermQueryBWComp#beforeClass().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestMultiTermQueryBWComp#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, \n        new MockAnalyzer(), true, \n        IndexWriter.MaxFieldLength.LIMITED);\n    \n    String values[] = { \"old\", \"old2\", \"new\", \"new2\" };\n    for (String value : values) {\n      Document doc = new Document();\n      doc.add(new Field(FIELD, value, \n          Field.Store.YES, Field.Index.ANALYZED));   \n      writer.addDocument(doc);\n    }\n\n    writer.optimize();\n    writer.close();\n    searcher = new IndexSearcher(dir, true);\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, \n        new WhitespaceAnalyzer(TEST_VERSION_CURRENT), true, \n        IndexWriter.MaxFieldLength.LIMITED);\n    \n    String values[] = { \"old\", \"old2\", \"new\", \"new2\" };\n    for (String value : values) {\n      Document doc = new Document();\n      doc.add(new Field(FIELD, value, \n          Field.Store.YES, Field.Index.ANALYZED));   \n      writer.addDocument(doc);\n    }\n\n    writer.optimize();\n    writer.close();\n    searcher = new IndexSearcher(dir, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28427ef110c4c5bf5b4057731b83110bd1e13724","date":1276701452,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/src/test/org/apache/lucene/search/TestMultiTermQueryBWComp#beforeClass().mjava","sourceNew":null,"sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, \n        new MockAnalyzer(), true, \n        IndexWriter.MaxFieldLength.LIMITED);\n    \n    String values[] = { \"old\", \"old2\", \"new\", \"new2\" };\n    for (String value : values) {\n      Document doc = new Document();\n      doc.add(new Field(FIELD, value, \n          Field.Store.YES, Field.Index.ANALYZED));   \n      writer.addDocument(doc);\n    }\n\n    writer.optimize();\n    writer.close();\n    searcher = new IndexSearcher(dir, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5f4e87790277826a2aea119328600dfb07761f32","date":1279827275,"type":4,"author":"Michael Busch","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/test/org/apache/lucene/search/TestMultiTermQueryBWComp#beforeClass().mjava","sourceNew":null,"sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    dir = new RAMDirectory();\n    IndexWriter writer = new IndexWriter(dir, \n        new MockAnalyzer(), true, \n        IndexWriter.MaxFieldLength.LIMITED);\n    \n    String values[] = { \"old\", \"old2\", \"new\", \"new2\" };\n    for (String value : values) {\n      Document doc = new Document();\n      doc.add(new Field(FIELD, value, \n          Field.Store.YES, Field.Index.ANALYZED));   \n      writer.addDocument(doc);\n    }\n\n    writer.optimize();\n    writer.close();\n    searcher = new IndexSearcher(dir, true);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"28427ef110c4c5bf5b4057731b83110bd1e13724":["d572389229127c297dd1fa5ce4758e1cec41e799"],"d572389229127c297dd1fa5ce4758e1cec41e799":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5f4e87790277826a2aea119328600dfb07761f32":["d572389229127c297dd1fa5ce4758e1cec41e799","28427ef110c4c5bf5b4057731b83110bd1e13724"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["28427ef110c4c5bf5b4057731b83110bd1e13724"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["955c32f886db6f6356c9fcdea6b1f1cb4effda24"],"28427ef110c4c5bf5b4057731b83110bd1e13724":["5f4e87790277826a2aea119328600dfb07761f32","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d572389229127c297dd1fa5ce4758e1cec41e799":["28427ef110c4c5bf5b4057731b83110bd1e13724","5f4e87790277826a2aea119328600dfb07761f32"],"955c32f886db6f6356c9fcdea6b1f1cb4effda24":["d572389229127c297dd1fa5ce4758e1cec41e799"],"5f4e87790277826a2aea119328600dfb07761f32":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5f4e87790277826a2aea119328600dfb07761f32","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}