{"path":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testDeleteSameTermAcrossFields().mjava","commits":[{"id":"fe883bfde8eb1e5e07c1304e980a2e86028379f9","date":1380021018,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testDeleteSameTermAcrossFields().mjava","pathOld":"/dev/null","sourceNew":"  // LUCENE-5239\n  public void testDeleteSameTermAcrossFields() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    IndexWriter w = new IndexWriter(dir, iwc);\n    Document doc = new Document();\n    doc.add(new TextField(\"a\", \"foo\", Field.Store.NO));\n    w.addDocument(doc);\n\n    // Should not delete the document; with LUCENE-5239 the\n    // \"foo\" from the 2nd delete term would incorrectly\n    // match field a's \"foo\":\n    w.deleteDocuments(new Term(\"a\", \"xxx\"));\n    w.deleteDocuments(new Term(\"b\", \"foo\"));\n    IndexReader r = w.getReader();\n    w.close();\n\n    // Make sure document was not (incorrectly) deleted:\n    assertEquals(1, r.numDocs());\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae14298f4eec6d5faee6a149f88ba57d14a6f21a","date":1396971290,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testDeleteSameTermAcrossFields().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testDeleteSameTermAcrossFields().mjava","sourceNew":"  // LUCENE-5239\n  public void testDeleteSameTermAcrossFields() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    IndexWriter w = new IndexWriter(dir, iwc);\n    Document doc = new Document();\n    doc.add(new TextField(\"a\", \"foo\", Field.Store.NO));\n    w.addDocument(doc);\n\n    // Should not delete the document; with LUCENE-5239 the\n    // \"foo\" from the 2nd delete term would incorrectly\n    // match field a's \"foo\":\n    w.deleteDocuments(new Term(\"a\", \"xxx\"));\n    w.deleteDocuments(new Term(\"b\", \"foo\"));\n    IndexReader r = w.getReader();\n    w.shutdown();\n\n    // Make sure document was not (incorrectly) deleted:\n    assertEquals(1, r.numDocs());\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-5239\n  public void testDeleteSameTermAcrossFields() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    IndexWriter w = new IndexWriter(dir, iwc);\n    Document doc = new Document();\n    doc.add(new TextField(\"a\", \"foo\", Field.Store.NO));\n    w.addDocument(doc);\n\n    // Should not delete the document; with LUCENE-5239 the\n    // \"foo\" from the 2nd delete term would incorrectly\n    // match field a's \"foo\":\n    w.deleteDocuments(new Term(\"a\", \"xxx\"));\n    w.deleteDocuments(new Term(\"b\", \"foo\"));\n    IndexReader r = w.getReader();\n    w.close();\n\n    // Make sure document was not (incorrectly) deleted:\n    assertEquals(1, r.numDocs());\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testDeleteSameTermAcrossFields().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestIndexWriter#testDeleteSameTermAcrossFields().mjava","sourceNew":"  // LUCENE-5239\n  public void testDeleteSameTermAcrossFields() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = new IndexWriterConfig(new MockAnalyzer(random()));\n    IndexWriter w = new IndexWriter(dir, iwc);\n    Document doc = new Document();\n    doc.add(new TextField(\"a\", \"foo\", Field.Store.NO));\n    w.addDocument(doc);\n\n    // Should not delete the document; with LUCENE-5239 the\n    // \"foo\" from the 2nd delete term would incorrectly\n    // match field a's \"foo\":\n    w.deleteDocuments(new Term(\"a\", \"xxx\"));\n    w.deleteDocuments(new Term(\"b\", \"foo\"));\n    IndexReader r = w.getReader();\n    w.close();\n\n    // Make sure document was not (incorrectly) deleted:\n    assertEquals(1, r.numDocs());\n    r.close();\n    dir.close();\n  }\n\n","sourceOld":"  // LUCENE-5239\n  public void testDeleteSameTermAcrossFields() throws Exception {\n    Directory dir = newDirectory();\n    IndexWriterConfig iwc = new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random()));\n    IndexWriter w = new IndexWriter(dir, iwc);\n    Document doc = new Document();\n    doc.add(new TextField(\"a\", \"foo\", Field.Store.NO));\n    w.addDocument(doc);\n\n    // Should not delete the document; with LUCENE-5239 the\n    // \"foo\" from the 2nd delete term would incorrectly\n    // match field a's \"foo\":\n    w.deleteDocuments(new Term(\"a\", \"xxx\"));\n    w.deleteDocuments(new Term(\"b\", \"foo\"));\n    IndexReader r = w.getReader();\n    w.shutdown();\n\n    // Make sure document was not (incorrectly) deleted:\n    assertEquals(1, r.numDocs());\n    r.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d0ef034a4f10871667ae75181537775ddcf8ade4":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["fe883bfde8eb1e5e07c1304e980a2e86028379f9"],"fe883bfde8eb1e5e07c1304e980a2e86028379f9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d0ef034a4f10871667ae75181537775ddcf8ade4"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["fe883bfde8eb1e5e07c1304e980a2e86028379f9"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ae14298f4eec6d5faee6a149f88ba57d14a6f21a":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"fe883bfde8eb1e5e07c1304e980a2e86028379f9":["ae14298f4eec6d5faee6a149f88ba57d14a6f21a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}