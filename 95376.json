{"path":"lucene/queryparser/src/test/org/apache/lucene/queryparser/classic/TestQueryParser#testWildcardMaxDeterminizedStates().mjava","commits":[{"id":"931db58c0a31db9ccf71784f340cd3b710a40e07","date":1436903014,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/queryparser/src/test/org/apache/lucene/queryparser/classic/TestQueryParser#testWildcardMaxDeterminizedStates().mjava","pathOld":"/dev/null","sourceNew":"  /** LUCENE-6677: make sure wildcard query respects maxDeterminizedStates. */\n  public void testWildcardMaxDeterminizedStates() throws Exception {\n    QueryParser qp = new QueryParser(\"field\", new MockAnalyzer(random()));\n    qp.setMaxDeterminizedStates(10);\n    try {\n      qp.parse(\"a*aaaaaaa\");\n      fail(\"should have hit exception\");\n    } catch (TooComplexToDeterminizeException tctde) {\n      // expected\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["05fe562aa248790944d43cdd478f512572835ba0"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"05fe562aa248790944d43cdd478f512572835ba0","date":1455901667,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queryparser/src/test/org/apache/lucene/queryparser/classic/TestQueryParser#testWildcardMaxDeterminizedStates().mjava","pathOld":"lucene/queryparser/src/test/org/apache/lucene/queryparser/classic/TestQueryParser#testWildcardMaxDeterminizedStates().mjava","sourceNew":"  /** LUCENE-6677: make sure wildcard query respects maxDeterminizedStates. */\n  public void testWildcardMaxDeterminizedStates() throws Exception {\n    QueryParser qp = new QueryParser(\"field\", new MockAnalyzer(random()));\n    qp.setMaxDeterminizedStates(10);\n    expectThrows(TooComplexToDeterminizeException.class, () -> {\n      qp.parse(\"a*aaaaaaa\");\n    });\n  }\n\n","sourceOld":"  /** LUCENE-6677: make sure wildcard query respects maxDeterminizedStates. */\n  public void testWildcardMaxDeterminizedStates() throws Exception {\n    QueryParser qp = new QueryParser(\"field\", new MockAnalyzer(random()));\n    qp.setMaxDeterminizedStates(10);\n    try {\n      qp.parse(\"a*aaaaaaa\");\n      fail(\"should have hit exception\");\n    } catch (TooComplexToDeterminizeException tctde) {\n      // expected\n    }\n  }\n\n","bugFix":["931db58c0a31db9ccf71784f340cd3b710a40e07"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ea4107f60b9f95623c16025c9c247412ff809092","date":1468333987,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/queryparser/src/test/org/apache/lucene/queryparser/classic/TestQueryParser#testWildcardMaxDeterminizedStates().mjava","pathOld":"lucene/queryparser/src/test/org/apache/lucene/queryparser/classic/TestQueryParser#testWildcardMaxDeterminizedStates().mjava","sourceNew":"  /** LUCENE-6677: make sure wildcard query respects maxDeterminizedStates. */\n  public void testWildcardMaxDeterminizedStates() throws Exception {\n    QueryParser qp = new QueryParser(FIELD, new MockAnalyzer(random()));\n    qp.setMaxDeterminizedStates(10);\n    expectThrows(TooComplexToDeterminizeException.class, () -> {\n      qp.parse(\"a*aaaaaaa\");\n    });\n  }\n\n","sourceOld":"  /** LUCENE-6677: make sure wildcard query respects maxDeterminizedStates. */\n  public void testWildcardMaxDeterminizedStates() throws Exception {\n    QueryParser qp = new QueryParser(\"field\", new MockAnalyzer(random()));\n    qp.setMaxDeterminizedStates(10);\n    expectThrows(TooComplexToDeterminizeException.class, () -> {\n      qp.parse(\"a*aaaaaaa\");\n    });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/queryparser/src/test/org/apache/lucene/queryparser/classic/TestQueryParser#testWildcardMaxDeterminizedStates().mjava","pathOld":"lucene/queryparser/src/test/org/apache/lucene/queryparser/classic/TestQueryParser#testWildcardMaxDeterminizedStates().mjava","sourceNew":"  /** LUCENE-6677: make sure wildcard query respects maxDeterminizedStates. */\n  public void testWildcardMaxDeterminizedStates() throws Exception {\n    QueryParser qp = new QueryParser(FIELD, new MockAnalyzer(random()));\n    qp.setMaxDeterminizedStates(10);\n    expectThrows(TooComplexToDeterminizeException.class, () -> {\n      qp.parse(\"a*aaaaaaa\");\n    });\n  }\n\n","sourceOld":"  /** LUCENE-6677: make sure wildcard query respects maxDeterminizedStates. */\n  public void testWildcardMaxDeterminizedStates() throws Exception {\n    QueryParser qp = new QueryParser(\"field\", new MockAnalyzer(random()));\n    qp.setMaxDeterminizedStates(10);\n    expectThrows(TooComplexToDeterminizeException.class, () -> {\n      qp.parse(\"a*aaaaaaa\");\n    });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"05fe562aa248790944d43cdd478f512572835ba0":["931db58c0a31db9ccf71784f340cd3b710a40e07"],"931db58c0a31db9ccf71784f340cd3b710a40e07":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ea4107f60b9f95623c16025c9c247412ff809092":["05fe562aa248790944d43cdd478f512572835ba0"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["05fe562aa248790944d43cdd478f512572835ba0","ea4107f60b9f95623c16025c9c247412ff809092"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ea4107f60b9f95623c16025c9c247412ff809092"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["931db58c0a31db9ccf71784f340cd3b710a40e07"],"05fe562aa248790944d43cdd478f512572835ba0":["ea4107f60b9f95623c16025c9c247412ff809092","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"931db58c0a31db9ccf71784f340cd3b710a40e07":["05fe562aa248790944d43cdd478f512572835ba0"],"ea4107f60b9f95623c16025c9c247412ff809092":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}