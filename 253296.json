{"path":"solr/core/src/java/org/apache/solr/handler/admin/MetricsHandler#parseMustMatchFilter(SolrParams).mjava","commits":[{"id":"4181b4cf0450ea3c6d1aff8dc3ad4ed9cd3eeb6a","date":1527582939,"type":1,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/MetricsHandler#parseMustMatchFilter(SolrParams).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/MetricsHandler#parseMustMatchFilter(SolrQueryRequest).mjava","sourceNew":"  private MetricFilter parseMustMatchFilter(SolrParams params) {\n    String[] prefixes = params.getParams(PREFIX_PARAM);\n    MetricFilter prefixFilter = null;\n    if (prefixes != null && prefixes.length > 0) {\n      Set<String> prefixSet = new HashSet<>();\n      for (String prefix : prefixes) {\n        prefixSet.addAll(StrUtils.splitSmart(prefix, ','));\n      }\n      prefixFilter = new SolrMetricManager.PrefixFilter(prefixSet);\n    }\n    String[] regexes = params.getParams(REGEX_PARAM);\n    MetricFilter regexFilter = null;\n    if (regexes != null && regexes.length > 0) {\n      regexFilter = new SolrMetricManager.RegexFilter(regexes);\n    }\n    MetricFilter mustMatchFilter;\n    if (prefixFilter == null && regexFilter == null) {\n      mustMatchFilter = MetricFilter.ALL;\n    } else {\n      if (prefixFilter == null) {\n        mustMatchFilter = regexFilter;\n      } else if (regexFilter == null) {\n        mustMatchFilter = prefixFilter;\n      } else {\n        mustMatchFilter = new SolrMetricManager.OrFilter(prefixFilter, regexFilter);\n      }\n    }\n    return mustMatchFilter;\n  }\n\n","sourceOld":"  private MetricFilter parseMustMatchFilter(SolrQueryRequest req) {\n    String[] prefixes = req.getParams().getParams(PREFIX_PARAM);\n    MetricFilter prefixFilter = null;\n    if (prefixes != null && prefixes.length > 0) {\n      Set<String> prefixSet = new HashSet<>();\n      for (String prefix : prefixes) {\n        prefixSet.addAll(StrUtils.splitSmart(prefix, ','));\n      }\n      prefixFilter = new SolrMetricManager.PrefixFilter(prefixSet);\n    }\n    String[] regexes = req.getParams().getParams(REGEX_PARAM);\n    MetricFilter regexFilter = null;\n    if (regexes != null && regexes.length > 0) {\n      regexFilter = new SolrMetricManager.RegexFilter(regexes);\n    }\n    MetricFilter mustMatchFilter;\n    if (prefixFilter == null && regexFilter == null) {\n      mustMatchFilter = MetricFilter.ALL;\n    } else {\n      if (prefixFilter == null) {\n        mustMatchFilter = regexFilter;\n      } else if (regexFilter == null) {\n        mustMatchFilter = prefixFilter;\n      } else {\n        mustMatchFilter = new SolrMetricManager.OrFilter(prefixFilter, regexFilter);\n      }\n    }\n    return mustMatchFilter;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4181b4cf0450ea3c6d1aff8dc3ad4ed9cd3eeb6a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4181b4cf0450ea3c6d1aff8dc3ad4ed9cd3eeb6a"]},"commit2Childs":{"4181b4cf0450ea3c6d1aff8dc3ad4ed9cd3eeb6a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4181b4cf0450ea3c6d1aff8dc3ad4ed9cd3eeb6a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}