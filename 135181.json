{"path":"lucene/src/test/org/apache/lucene/index/TestIsCurrent#testDeleteAllIsCurrent().mjava","commits":[{"id":"300334dcd665e74e45788a3884e5989d4b4bab15","date":1283942659,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIsCurrent#testDeleteAllIsCurrent().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Testcase for example to show that writer.deleteAll() is working as expected\n   * \n   * @throws IOException\n   */\n  @Test\n  public void testDeleteAllIsCurrent() throws IOException {\n\n    // get reader\n    IndexReader reader = writer.getReader();\n\n    // assert index has a document and reader is up2date \n    assertEquals(\"One document should be in the index\", 1, writer.numDocs());\n    assertTrue(\"Document added, reader should be stale \", reader.isCurrent());\n\n    // remove all documents\n    writer.deleteAll();\n    writer.commit();\n\n    // assert document has been deleted (index changed), reader is stale\n    assertEquals(\"Document should be removed\", 0, writer.numDocs());\n    assertFalse(\"Reader should be stale\", reader.isCurrent());\n\n    reader.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":0,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIsCurrent#testDeleteAllIsCurrent().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Testcase for example to show that writer.deleteAll() is working as expected\n   * \n   * @throws IOException\n   */\n  @Test\n  public void testDeleteAllIsCurrent() throws IOException {\n\n    // get reader\n    IndexReader reader = writer.getReader();\n\n    // assert index has a document and reader is up2date \n    assertEquals(\"One document should be in the index\", 1, writer.numDocs());\n    assertTrue(\"Document added, reader should be stale \", reader.isCurrent());\n\n    // remove all documents\n    writer.deleteAll();\n    writer.commit();\n\n    // assert document has been deleted (index changed), reader is stale\n    assertEquals(\"Document should be removed\", 0, writer.numDocs());\n    assertFalse(\"Reader should be stale\", reader.isCurrent());\n\n    reader.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54ad6c0825c8ac3394fcb1e304855dd86a88eedc","date":1327857033,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIsCurrent#testDeleteAllIsCurrent().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIsCurrent#testDeleteAllIsCurrent().mjava","sourceNew":"  /**\n   * Testcase for example to show that writer.deleteAll() is working as expected\n   * \n   * @throws IOException\n   */\n  @Test\n  public void testDeleteAllIsCurrent() throws IOException {\n\n    // get reader\n    DirectoryReader reader = writer.getReader();\n\n    // assert index has a document and reader is up2date \n    assertEquals(\"One document should be in the index\", 1, writer.numDocs());\n    assertTrue(\"Document added, reader should be stale \", reader.isCurrent());\n\n    // remove all documents\n    writer.deleteAll();\n    writer.commit();\n\n    // assert document has been deleted (index changed), reader is stale\n    assertEquals(\"Document should be removed\", 0, writer.numDocs());\n    assertFalse(\"Reader should be stale\", reader.isCurrent());\n\n    reader.close();\n  }\n\n","sourceOld":"  /**\n   * Testcase for example to show that writer.deleteAll() is working as expected\n   * \n   * @throws IOException\n   */\n  @Test\n  public void testDeleteAllIsCurrent() throws IOException {\n\n    // get reader\n    IndexReader reader = writer.getReader();\n\n    // assert index has a document and reader is up2date \n    assertEquals(\"One document should be in the index\", 1, writer.numDocs());\n    assertTrue(\"Document added, reader should be stale \", reader.isCurrent());\n\n    // remove all documents\n    writer.deleteAll();\n    writer.commit();\n\n    // assert document has been deleted (index changed), reader is stale\n    assertEquals(\"Document should be removed\", 0, writer.numDocs());\n    assertFalse(\"Reader should be stale\", reader.isCurrent());\n\n    reader.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5cab9a86bd67202d20b6adc463008c8e982b070a","date":1327966443,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIsCurrent#testDeleteAllIsCurrent().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIsCurrent#testDeleteAllIsCurrent().mjava","sourceNew":"  /**\n   * Testcase for example to show that writer.deleteAll() is working as expected\n   * \n   * @throws IOException\n   */\n  @Test\n  public void testDeleteAllIsCurrent() throws IOException {\n\n    // get reader\n    DirectoryReader reader = writer.getReader();\n\n    // assert index has a document and reader is up2date \n    assertEquals(\"One document should be in the index\", 1, writer.numDocs());\n    assertTrue(\"Document added, reader should be stale \", reader.isCurrent());\n\n    // remove all documents\n    writer.deleteAll();\n    writer.commit();\n\n    // assert document has been deleted (index changed), reader is stale\n    assertEquals(\"Document should be removed\", 0, writer.numDocs());\n    assertFalse(\"Reader should be stale\", reader.isCurrent());\n\n    reader.close();\n  }\n\n","sourceOld":"  /**\n   * Testcase for example to show that writer.deleteAll() is working as expected\n   * \n   * @throws IOException\n   */\n  @Test\n  public void testDeleteAllIsCurrent() throws IOException {\n\n    // get reader\n    IndexReader reader = writer.getReader();\n\n    // assert index has a document and reader is up2date \n    assertEquals(\"One document should be in the index\", 1, writer.numDocs());\n    assertTrue(\"Document added, reader should be stale \", reader.isCurrent());\n\n    // remove all documents\n    writer.deleteAll();\n    writer.commit();\n\n    // assert document has been deleted (index changed), reader is stale\n    assertEquals(\"Document should be removed\", 0, writer.numDocs());\n    assertFalse(\"Reader should be stale\", reader.isCurrent());\n\n    reader.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestIsCurrent#testDeleteAllIsCurrent().mjava","pathOld":"lucene/src/test/org/apache/lucene/index/TestIsCurrent#testDeleteAllIsCurrent().mjava","sourceNew":"  /**\n   * Testcase for example to show that writer.deleteAll() is working as expected\n   * \n   * @throws IOException\n   */\n  @Test\n  public void testDeleteAllIsCurrent() throws IOException {\n\n    // get reader\n    DirectoryReader reader = writer.getReader();\n\n    // assert index has a document and reader is up2date \n    assertEquals(\"One document should be in the index\", 1, writer.numDocs());\n    assertTrue(\"Document added, reader should be stale \", reader.isCurrent());\n\n    // remove all documents\n    writer.deleteAll();\n    writer.commit();\n\n    // assert document has been deleted (index changed), reader is stale\n    assertEquals(\"Document should be removed\", 0, writer.numDocs());\n    assertFalse(\"Reader should be stale\", reader.isCurrent());\n\n    reader.close();\n  }\n\n","sourceOld":"  /**\n   * Testcase for example to show that writer.deleteAll() is working as expected\n   * \n   * @throws IOException\n   */\n  @Test\n  public void testDeleteAllIsCurrent() throws IOException {\n\n    // get reader\n    DirectoryReader reader = writer.getReader();\n\n    // assert index has a document and reader is up2date \n    assertEquals(\"One document should be in the index\", 1, writer.numDocs());\n    assertTrue(\"Document added, reader should be stale \", reader.isCurrent());\n\n    // remove all documents\n    writer.deleteAll();\n    writer.commit();\n\n    // assert document has been deleted (index changed), reader is stale\n    assertEquals(\"Document should be removed\", 0, writer.numDocs());\n    assertFalse(\"Reader should be stale\", reader.isCurrent());\n\n    reader.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"300334dcd665e74e45788a3884e5989d4b4bab15":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","300334dcd665e74e45788a3884e5989d4b4bab15"],"5cab9a86bd67202d20b6adc463008c8e982b070a":["300334dcd665e74e45788a3884e5989d4b4bab15","54ad6c0825c8ac3394fcb1e304855dd86a88eedc"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"54ad6c0825c8ac3394fcb1e304855dd86a88eedc":["300334dcd665e74e45788a3884e5989d4b4bab15"]},"commit2Childs":{"300334dcd665e74e45788a3884e5989d4b4bab15":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","5cab9a86bd67202d20b6adc463008c8e982b070a","54ad6c0825c8ac3394fcb1e304855dd86a88eedc"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["300334dcd665e74e45788a3884e5989d4b4bab15","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"5cab9a86bd67202d20b6adc463008c8e982b070a":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"54ad6c0825c8ac3394fcb1e304855dd86a88eedc":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}