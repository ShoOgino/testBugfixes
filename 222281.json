{"path":"lucene/src/test/org/apache/lucene/search/TestBoolean2#testQueries10().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestBoolean2#testQueries10().mjava","pathOld":"src/test/org/apache/lucene/search/TestBoolean2#testQueries10().mjava","sourceNew":"    public void testQueries10() throws Exception {\n    String queryText = \"+w3 +xx +w2 zz\";\n    int[] expDocNrs = {2, 3};\n    searcher.setSimilarity(new DefaultSimilarity(){\n      @Override\n      public float coord(int overlap, int maxOverlap) {\n        return overlap / ((float)maxOverlap - 1);\n      }\n    });\n    queriesTest(queryText, expDocNrs);\n  }\n\n","sourceOld":"    public void testQueries10() throws Exception {\n    String queryText = \"+w3 +xx +w2 zz\";\n    int[] expDocNrs = {2, 3};\n    searcher.setSimilarity(new DefaultSimilarity(){\n      @Override\n      public float coord(int overlap, int maxOverlap) {\n        return overlap / ((float)maxOverlap - 1);\n      }\n    });\n    queriesTest(queryText, expDocNrs);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"150488c1317972164a9a824be05b1ba2ba0fc68c","date":1284316090,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestBoolean2#testQueries10().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestBoolean2#testQueries10().mjava","sourceNew":"  @Test\n  public void testQueries10() throws Exception {\n    String queryText = \"+w3 +xx +w2 zz\";\n    int[] expDocNrs = {2, 3};\n    Similarity oldSimilarity = searcher.getSimilarity();\n    try {\n      searcher.setSimilarity(new DefaultSimilarity(){\n        @Override\n        public float coord(int overlap, int maxOverlap) {\n          return overlap / ((float)maxOverlap - 1);\n        }\n      });\n      queriesTest(queryText, expDocNrs);\n    } finally {\n      searcher.setSimilarity(oldSimilarity);\n    }\n  }\n\n","sourceOld":"    public void testQueries10() throws Exception {\n    String queryText = \"+w3 +xx +w2 zz\";\n    int[] expDocNrs = {2, 3};\n    searcher.setSimilarity(new DefaultSimilarity(){\n      @Override\n      public float coord(int overlap, int maxOverlap) {\n        return overlap / ((float)maxOverlap - 1);\n      }\n    });\n    queriesTest(queryText, expDocNrs);\n  }\n\n","bugFix":null,"bugIntro":["7c82b0d4b7bf499a159eeff92add20bac6599cc1"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestBoolean2#testQueries10().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestBoolean2#testQueries10().mjava","sourceNew":"  @Test\n  public void testQueries10() throws Exception {\n    String queryText = \"+w3 +xx +w2 zz\";\n    int[] expDocNrs = {2, 3};\n    Similarity oldSimilarity = searcher.getSimilarity();\n    try {\n      searcher.setSimilarity(new DefaultSimilarity(){\n        @Override\n        public float coord(int overlap, int maxOverlap) {\n          return overlap / ((float)maxOverlap - 1);\n        }\n      });\n      queriesTest(queryText, expDocNrs);\n    } finally {\n      searcher.setSimilarity(oldSimilarity);\n    }\n  }\n\n","sourceOld":"    public void testQueries10() throws Exception {\n    String queryText = \"+w3 +xx +w2 zz\";\n    int[] expDocNrs = {2, 3};\n    searcher.setSimilarity(new DefaultSimilarity(){\n      @Override\n      public float coord(int overlap, int maxOverlap) {\n        return overlap / ((float)maxOverlap - 1);\n      }\n    });\n    queriesTest(queryText, expDocNrs);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fd9325c7ff9928fabe81c28553b41fc7aa57dfab","date":1295896411,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestBoolean2#testQueries10().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestBoolean2#testQueries10().mjava","sourceNew":"  @Test\n  public void testQueries10() throws Exception {\n    String queryText = \"+w3 +xx +w2 zz\";\n    int[] expDocNrs = {2, 3};\n    SimilarityProvider oldSimilarity = searcher.getSimilarityProvider();\n    try {\n      searcher.setSimilarityProvider(new DefaultSimilarity(){\n        @Override\n        public float coord(int overlap, int maxOverlap) {\n          return overlap / ((float)maxOverlap - 1);\n        }\n      });\n      queriesTest(queryText, expDocNrs);\n    } finally {\n      searcher.setSimilarityProvider(oldSimilarity);\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testQueries10() throws Exception {\n    String queryText = \"+w3 +xx +w2 zz\";\n    int[] expDocNrs = {2, 3};\n    Similarity oldSimilarity = searcher.getSimilarity();\n    try {\n      searcher.setSimilarity(new DefaultSimilarity(){\n        @Override\n        public float coord(int overlap, int maxOverlap) {\n          return overlap / ((float)maxOverlap - 1);\n        }\n      });\n      queriesTest(queryText, expDocNrs);\n    } finally {\n      searcher.setSimilarity(oldSimilarity);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"bb9b72f7c3d7827c64dd4ec580ded81778da361d","date":1295897920,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestBoolean2#testQueries10().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestBoolean2#testQueries10().mjava","sourceNew":"  @Test\n  public void testQueries10() throws Exception {\n    String queryText = \"+w3 +xx +w2 zz\";\n    int[] expDocNrs = {2, 3};\n    SimilarityProvider oldSimilarity = searcher.getSimilarityProvider();\n    try {\n      searcher.setSimilarityProvider(new DefaultSimilarity(){\n        @Override\n        public float coord(int overlap, int maxOverlap) {\n          return overlap / ((float)maxOverlap - 1);\n        }\n      });\n      queriesTest(queryText, expDocNrs);\n    } finally {\n      searcher.setSimilarityProvider(oldSimilarity);\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testQueries10() throws Exception {\n    String queryText = \"+w3 +xx +w2 zz\";\n    int[] expDocNrs = {2, 3};\n    Similarity oldSimilarity = searcher.getSimilarity();\n    try {\n      searcher.setSimilarity(new DefaultSimilarity(){\n        @Override\n        public float coord(int overlap, int maxOverlap) {\n          return overlap / ((float)maxOverlap - 1);\n        }\n      });\n      queriesTest(queryText, expDocNrs);\n    } finally {\n      searcher.setSimilarity(oldSimilarity);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestBoolean2#testQueries10().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestBoolean2#testQueries10().mjava","sourceNew":"  @Test\n  public void testQueries10() throws Exception {\n    String queryText = \"+w3 +xx +w2 zz\";\n    int[] expDocNrs = {2, 3};\n    SimilarityProvider oldSimilarity = searcher.getSimilarityProvider();\n    try {\n      searcher.setSimilarityProvider(new DefaultSimilarity(){\n        @Override\n        public float coord(int overlap, int maxOverlap) {\n          return overlap / ((float)maxOverlap - 1);\n        }\n      });\n      queriesTest(queryText, expDocNrs);\n    } finally {\n      searcher.setSimilarityProvider(oldSimilarity);\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testQueries10() throws Exception {\n    String queryText = \"+w3 +xx +w2 zz\";\n    int[] expDocNrs = {2, 3};\n    Similarity oldSimilarity = searcher.getSimilarity();\n    try {\n      searcher.setSimilarity(new DefaultSimilarity(){\n        @Override\n        public float coord(int overlap, int maxOverlap) {\n          return overlap / ((float)maxOverlap - 1);\n        }\n      });\n      queriesTest(queryText, expDocNrs);\n    } finally {\n      searcher.setSimilarity(oldSimilarity);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"160d004a0e8f5361a446f9d01456aee1c1af20dc","date":1301061642,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestBoolean2#testQueries10().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestBoolean2#testQueries10().mjava","sourceNew":"  @Test\n  public void testQueries10() throws Exception {\n    String queryText = \"+w3 +xx +w2 zz\";\n    int[] expDocNrs = {2, 3};\n    SimilarityProvider oldSimilarity = searcher.getSimilarityProvider();\n    try {\n      searcher.setSimilarityProvider(new DefaultSimilarityProvider(){\n        @Override\n        public float coord(int overlap, int maxOverlap) {\n          return overlap / ((float)maxOverlap - 1);\n        }\n      });\n      queriesTest(queryText, expDocNrs);\n    } finally {\n      searcher.setSimilarityProvider(oldSimilarity);\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testQueries10() throws Exception {\n    String queryText = \"+w3 +xx +w2 zz\";\n    int[] expDocNrs = {2, 3};\n    SimilarityProvider oldSimilarity = searcher.getSimilarityProvider();\n    try {\n      searcher.setSimilarityProvider(new DefaultSimilarity(){\n        @Override\n        public float coord(int overlap, int maxOverlap) {\n          return overlap / ((float)maxOverlap - 1);\n        }\n      });\n      queriesTest(queryText, expDocNrs);\n    } finally {\n      searcher.setSimilarityProvider(oldSimilarity);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d619839baa8ce5503e496b94a9e42ad6f079293f","date":1301309428,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestBoolean2#testQueries10().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestBoolean2#testQueries10().mjava","sourceNew":"  @Test\n  public void testQueries10() throws Exception {\n    String queryText = \"+w3 +xx +w2 zz\";\n    int[] expDocNrs = {2, 3};\n    SimilarityProvider oldSimilarity = searcher.getSimilarityProvider();\n    try {\n      searcher.setSimilarityProvider(new DefaultSimilarityProvider(){\n        @Override\n        public float coord(int overlap, int maxOverlap) {\n          return overlap / ((float)maxOverlap - 1);\n        }\n      });\n      queriesTest(queryText, expDocNrs);\n    } finally {\n      searcher.setSimilarityProvider(oldSimilarity);\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testQueries10() throws Exception {\n    String queryText = \"+w3 +xx +w2 zz\";\n    int[] expDocNrs = {2, 3};\n    SimilarityProvider oldSimilarity = searcher.getSimilarityProvider();\n    try {\n      searcher.setSimilarityProvider(new DefaultSimilarity(){\n        @Override\n        public float coord(int overlap, int maxOverlap) {\n          return overlap / ((float)maxOverlap - 1);\n        }\n      });\n      queriesTest(queryText, expDocNrs);\n    } finally {\n      searcher.setSimilarityProvider(oldSimilarity);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c0ef0193974807e4bddf5432a6b0287fe4d6c9df","date":1301476645,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestBoolean2#testQueries10().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestBoolean2#testQueries10().mjava","sourceNew":"  @Test\n  public void testQueries10() throws Exception {\n    String queryText = \"+w3 +xx +w2 zz\";\n    int[] expDocNrs = {2, 3};\n    SimilarityProvider oldSimilarity = searcher.getSimilarityProvider();\n    try {\n      searcher.setSimilarityProvider(new DefaultSimilarityProvider(){\n        @Override\n        public float coord(int overlap, int maxOverlap) {\n          return overlap / ((float)maxOverlap - 1);\n        }\n      });\n      queriesTest(queryText, expDocNrs);\n    } finally {\n      searcher.setSimilarityProvider(oldSimilarity);\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testQueries10() throws Exception {\n    String queryText = \"+w3 +xx +w2 zz\";\n    int[] expDocNrs = {2, 3};\n    SimilarityProvider oldSimilarity = searcher.getSimilarityProvider();\n    try {\n      searcher.setSimilarityProvider(new DefaultSimilarity(){\n        @Override\n        public float coord(int overlap, int maxOverlap) {\n          return overlap / ((float)maxOverlap - 1);\n        }\n      });\n      queriesTest(queryText, expDocNrs);\n    } finally {\n      searcher.setSimilarityProvider(oldSimilarity);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"112629f1dfd1451722c6047bcf593e6efc96f5f4","date":1309910887,"type":3,"author":"Christopher John Male","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestBoolean2#testQueries10().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestBoolean2#testQueries10().mjava","sourceNew":"  @Test\n  public void testQueries10() throws Exception {\n    BooleanQuery query = new BooleanQuery();\n    query.add(new TermQuery(new Term(field, \"w3\")), BooleanClause.Occur.MUST);\n    query.add(new TermQuery(new Term(field, \"xx\")), BooleanClause.Occur.MUST);\n    query.add(new TermQuery(new Term(field, \"w2\")), BooleanClause.Occur.MUST);\n    query.add(new TermQuery(new Term(field, \"zz\")), BooleanClause.Occur.SHOULD);\n\n    int[] expDocNrs = {2, 3};\n    SimilarityProvider oldSimilarity = searcher.getSimilarityProvider();\n    try {\n      searcher.setSimilarityProvider(new DefaultSimilarityProvider(){\n        @Override\n        public float coord(int overlap, int maxOverlap) {\n          return overlap / ((float)maxOverlap - 1);\n        }\n      });\n      queriesTest(query, expDocNrs);\n    } finally {\n      searcher.setSimilarityProvider(oldSimilarity);\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testQueries10() throws Exception {\n    String queryText = \"+w3 +xx +w2 zz\";\n    int[] expDocNrs = {2, 3};\n    SimilarityProvider oldSimilarity = searcher.getSimilarityProvider();\n    try {\n      searcher.setSimilarityProvider(new DefaultSimilarityProvider(){\n        @Override\n        public float coord(int overlap, int maxOverlap) {\n          return overlap / ((float)maxOverlap - 1);\n        }\n      });\n      queriesTest(queryText, expDocNrs);\n    } finally {\n      searcher.setSimilarityProvider(oldSimilarity);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"817d8435e9135b756f08ce6710ab0baac51bdf88","date":1309986993,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestBoolean2#testQueries10().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestBoolean2#testQueries10().mjava","sourceNew":"  @Test\n  public void testQueries10() throws Exception {\n    BooleanQuery query = new BooleanQuery();\n    query.add(new TermQuery(new Term(field, \"w3\")), BooleanClause.Occur.MUST);\n    query.add(new TermQuery(new Term(field, \"xx\")), BooleanClause.Occur.MUST);\n    query.add(new TermQuery(new Term(field, \"w2\")), BooleanClause.Occur.MUST);\n    query.add(new TermQuery(new Term(field, \"zz\")), BooleanClause.Occur.SHOULD);\n\n    int[] expDocNrs = {2, 3};\n    SimilarityProvider oldSimilarity = searcher.getSimilarityProvider();\n    try {\n      searcher.setSimilarityProvider(new DefaultSimilarityProvider(){\n        @Override\n        public float coord(int overlap, int maxOverlap) {\n          return overlap / ((float)maxOverlap - 1);\n        }\n      });\n      queriesTest(query, expDocNrs);\n    } finally {\n      searcher.setSimilarityProvider(oldSimilarity);\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testQueries10() throws Exception {\n    String queryText = \"+w3 +xx +w2 zz\";\n    int[] expDocNrs = {2, 3};\n    SimilarityProvider oldSimilarity = searcher.getSimilarityProvider();\n    try {\n      searcher.setSimilarityProvider(new DefaultSimilarityProvider(){\n        @Override\n        public float coord(int overlap, int maxOverlap) {\n          return overlap / ((float)maxOverlap - 1);\n        }\n      });\n      queriesTest(queryText, expDocNrs);\n    } finally {\n      searcher.setSimilarityProvider(oldSimilarity);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d083e83f225b11e5fdd900e83d26ddb385b6955c","date":1310029438,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestBoolean2#testQueries10().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestBoolean2#testQueries10().mjava","sourceNew":"  @Test\n  public void testQueries10() throws Exception {\n    BooleanQuery query = new BooleanQuery();\n    query.add(new TermQuery(new Term(field, \"w3\")), BooleanClause.Occur.MUST);\n    query.add(new TermQuery(new Term(field, \"xx\")), BooleanClause.Occur.MUST);\n    query.add(new TermQuery(new Term(field, \"w2\")), BooleanClause.Occur.MUST);\n    query.add(new TermQuery(new Term(field, \"zz\")), BooleanClause.Occur.SHOULD);\n\n    int[] expDocNrs = {2, 3};\n    SimilarityProvider oldSimilarity = searcher.getSimilarityProvider();\n    try {\n      searcher.setSimilarityProvider(new DefaultSimilarityProvider(){\n        @Override\n        public float coord(int overlap, int maxOverlap) {\n          return overlap / ((float)maxOverlap - 1);\n        }\n      });\n      queriesTest(query, expDocNrs);\n    } finally {\n      searcher.setSimilarityProvider(oldSimilarity);\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testQueries10() throws Exception {\n    String queryText = \"+w3 +xx +w2 zz\";\n    int[] expDocNrs = {2, 3};\n    SimilarityProvider oldSimilarity = searcher.getSimilarityProvider();\n    try {\n      searcher.setSimilarityProvider(new DefaultSimilarityProvider(){\n        @Override\n        public float coord(int overlap, int maxOverlap) {\n          return overlap / ((float)maxOverlap - 1);\n        }\n      });\n      queriesTest(queryText, expDocNrs);\n    } finally {\n      searcher.setSimilarityProvider(oldSimilarity);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1ab42b0756bdd98ac6a6767b5a77d10d9ba12b4b","date":1328532481,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestBoolean2#testQueries10().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestBoolean2#testQueries10().mjava","sourceNew":"  @Test\n  public void testQueries10() throws Exception {\n    BooleanQuery query = new BooleanQuery();\n    query.add(new TermQuery(new Term(field, \"w3\")), BooleanClause.Occur.MUST);\n    query.add(new TermQuery(new Term(field, \"xx\")), BooleanClause.Occur.MUST);\n    query.add(new TermQuery(new Term(field, \"w2\")), BooleanClause.Occur.MUST);\n    query.add(new TermQuery(new Term(field, \"zz\")), BooleanClause.Occur.SHOULD);\n\n    int[] expDocNrs = {2, 3};\n    Similarity oldSimilarity = searcher.getSimilarity();\n    try {\n      searcher.setSimilarity(new DefaultSimilarity(){\n        @Override\n        public float coord(int overlap, int maxOverlap) {\n          return overlap / ((float)maxOverlap - 1);\n        }\n      });\n      queriesTest(query, expDocNrs);\n    } finally {\n      searcher.setSimilarity(oldSimilarity);\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testQueries10() throws Exception {\n    BooleanQuery query = new BooleanQuery();\n    query.add(new TermQuery(new Term(field, \"w3\")), BooleanClause.Occur.MUST);\n    query.add(new TermQuery(new Term(field, \"xx\")), BooleanClause.Occur.MUST);\n    query.add(new TermQuery(new Term(field, \"w2\")), BooleanClause.Occur.MUST);\n    query.add(new TermQuery(new Term(field, \"zz\")), BooleanClause.Occur.SHOULD);\n\n    int[] expDocNrs = {2, 3};\n    SimilarityProvider oldSimilarity = searcher.getSimilarityProvider();\n    try {\n      searcher.setSimilarityProvider(new DefaultSimilarityProvider(){\n        @Override\n        public float coord(int overlap, int maxOverlap) {\n          return overlap / ((float)maxOverlap - 1);\n        }\n      });\n      queriesTest(query, expDocNrs);\n    } finally {\n      searcher.setSimilarityProvider(oldSimilarity);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestBoolean2#testQueries10().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestBoolean2#testQueries10().mjava","sourceNew":"  @Test\n  public void testQueries10() throws Exception {\n    BooleanQuery query = new BooleanQuery();\n    query.add(new TermQuery(new Term(field, \"w3\")), BooleanClause.Occur.MUST);\n    query.add(new TermQuery(new Term(field, \"xx\")), BooleanClause.Occur.MUST);\n    query.add(new TermQuery(new Term(field, \"w2\")), BooleanClause.Occur.MUST);\n    query.add(new TermQuery(new Term(field, \"zz\")), BooleanClause.Occur.SHOULD);\n\n    int[] expDocNrs = {2, 3};\n    Similarity oldSimilarity = searcher.getSimilarity();\n    try {\n      searcher.setSimilarity(new DefaultSimilarity(){\n        @Override\n        public float coord(int overlap, int maxOverlap) {\n          return overlap / ((float)maxOverlap - 1);\n        }\n      });\n      queriesTest(query, expDocNrs);\n    } finally {\n      searcher.setSimilarity(oldSimilarity);\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testQueries10() throws Exception {\n    BooleanQuery query = new BooleanQuery();\n    query.add(new TermQuery(new Term(field, \"w3\")), BooleanClause.Occur.MUST);\n    query.add(new TermQuery(new Term(field, \"xx\")), BooleanClause.Occur.MUST);\n    query.add(new TermQuery(new Term(field, \"w2\")), BooleanClause.Occur.MUST);\n    query.add(new TermQuery(new Term(field, \"zz\")), BooleanClause.Occur.SHOULD);\n\n    int[] expDocNrs = {2, 3};\n    Similarity oldSimilarity = searcher.getSimilarity();\n    try {\n      searcher.setSimilarity(new DefaultSimilarity(){\n        @Override\n        public float coord(int overlap, int maxOverlap) {\n          return overlap / ((float)maxOverlap - 1);\n        }\n      });\n      queriesTest(query, expDocNrs);\n    } finally {\n      searcher.setSimilarity(oldSimilarity);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["1ab42b0756bdd98ac6a6767b5a77d10d9ba12b4b"],"1ab42b0756bdd98ac6a6767b5a77d10d9ba12b4b":["112629f1dfd1451722c6047bcf593e6efc96f5f4"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["9454a6510e2db155fb01faa5c049b06ece95fab9","150488c1317972164a9a824be05b1ba2ba0fc68c"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":["160d004a0e8f5361a446f9d01456aee1c1af20dc","112629f1dfd1451722c6047bcf593e6efc96f5f4"],"817d8435e9135b756f08ce6710ab0baac51bdf88":["160d004a0e8f5361a446f9d01456aee1c1af20dc","112629f1dfd1451722c6047bcf593e6efc96f5f4"],"bb9b72f7c3d7827c64dd4ec580ded81778da361d":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","fd9325c7ff9928fabe81c28553b41fc7aa57dfab"],"fd9325c7ff9928fabe81c28553b41fc7aa57dfab":["150488c1317972164a9a824be05b1ba2ba0fc68c"],"c0ef0193974807e4bddf5432a6b0287fe4d6c9df":["bb9b72f7c3d7827c64dd4ec580ded81778da361d","160d004a0e8f5361a446f9d01456aee1c1af20dc"],"160d004a0e8f5361a446f9d01456aee1c1af20dc":["fd9325c7ff9928fabe81c28553b41fc7aa57dfab"],"d619839baa8ce5503e496b94a9e42ad6f079293f":["29ef99d61cda9641b6250bf9567329a6e65f901d","160d004a0e8f5361a446f9d01456aee1c1af20dc"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["150488c1317972164a9a824be05b1ba2ba0fc68c","fd9325c7ff9928fabe81c28553b41fc7aa57dfab"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"112629f1dfd1451722c6047bcf593e6efc96f5f4":["160d004a0e8f5361a446f9d01456aee1c1af20dc"],"150488c1317972164a9a824be05b1ba2ba0fc68c":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"1ab42b0756bdd98ac6a6767b5a77d10d9ba12b4b":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["bb9b72f7c3d7827c64dd4ec580ded81778da361d"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":[],"817d8435e9135b756f08ce6710ab0baac51bdf88":[],"bb9b72f7c3d7827c64dd4ec580ded81778da361d":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df"],"fd9325c7ff9928fabe81c28553b41fc7aa57dfab":["bb9b72f7c3d7827c64dd4ec580ded81778da361d","160d004a0e8f5361a446f9d01456aee1c1af20dc","29ef99d61cda9641b6250bf9567329a6e65f901d"],"c0ef0193974807e4bddf5432a6b0287fe4d6c9df":[],"160d004a0e8f5361a446f9d01456aee1c1af20dc":["d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88","c0ef0193974807e4bddf5432a6b0287fe4d6c9df","d619839baa8ce5503e496b94a9e42ad6f079293f","112629f1dfd1451722c6047bcf593e6efc96f5f4"],"d619839baa8ce5503e496b94a9e42ad6f079293f":[],"29ef99d61cda9641b6250bf9567329a6e65f901d":["d619839baa8ce5503e496b94a9e42ad6f079293f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"112629f1dfd1451722c6047bcf593e6efc96f5f4":["1ab42b0756bdd98ac6a6767b5a77d10d9ba12b4b","d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88"],"150488c1317972164a9a824be05b1ba2ba0fc68c":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","fd9325c7ff9928fabe81c28553b41fc7aa57dfab","29ef99d61cda9641b6250bf9567329a6e65f901d"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","150488c1317972164a9a824be05b1ba2ba0fc68c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88","c0ef0193974807e4bddf5432a6b0287fe4d6c9df","d619839baa8ce5503e496b94a9e42ad6f079293f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}