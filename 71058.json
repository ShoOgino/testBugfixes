{"path":"lucene/core/src/test/org/apache/lucene/geo/TestRectangle2D#testTriangleWithinCrossingDateLine().mjava","commits":[{"id":"09c1e6d465800c73af60624bf9d4459a19f7940c","date":1579293280,"type":1,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/geo/TestRectangle2D#testTriangleWithinCrossingDateLine().mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/geo/TestRectangle2D#testTriangleWithinCrossingDateLine().mjava","sourceNew":"  public void testTriangleWithinCrossingDateLine() {\n    Rectangle rectangle = new Rectangle(0,  2, 179, -179);\n    Rectangle2D rectangle2D =  Rectangle2D.create(rectangle);\n    int ax = GeoEncodingUtils.encodeLongitude(169);\n    int ay = GeoEncodingUtils.encodeLatitude(-10);\n    int bx = GeoEncodingUtils.encodeLongitude(180);\n    int by = GeoEncodingUtils.encodeLatitude(-10);\n    int cx = GeoEncodingUtils.encodeLongitude(180);\n    int cy = GeoEncodingUtils.encodeLatitude(30);\n    assertTrue(rectangle2D.intersectsTriangle(ax, ay, bx, by , cx, cy));\n    assertFalse(rectangle2D.containsTriangle(ax, ay, bx, by , cx, cy));\n    expectThrows(IllegalArgumentException.class, () -> {\n      rectangle2D.withinTriangle(ax, ay, true, bx, by, true, cx, cy, true);\n    });\n  }\n\n","sourceOld":"  public void testTriangleWithinCrossingDateLine() {\n    Rectangle rectangle = new Rectangle(0,  2, 179, -179);\n    Rectangle2D rectangle2D =  Rectangle2D.create(rectangle);\n    int ax = GeoEncodingUtils.encodeLongitude(169);\n    int ay = GeoEncodingUtils.encodeLatitude(-10);\n    int bx = GeoEncodingUtils.encodeLongitude(180);\n    int by = GeoEncodingUtils.encodeLatitude(-10);\n    int cx = GeoEncodingUtils.encodeLongitude(180);\n    int cy = GeoEncodingUtils.encodeLatitude(30);\n    assertTrue(rectangle2D.intersectsTriangle(ax, ay, bx, by , cx, cy));\n    assertFalse(rectangle2D.containsTriangle(ax, ay, bx, by , cx, cy));\n    expectThrows(IllegalArgumentException.class, () -> {\n      rectangle2D.withinTriangle(ax, ay, true, bx, by, true, cx, cy, true);\n    });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"56c42be8d779573d0c86ba775117e17360dbf5a6","date":1583217404,"type":3,"author":"Ignacio Vera","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/geo/TestRectangle2D#testTriangleWithinCrossingDateLine().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/geo/TestRectangle2D#testTriangleWithinCrossingDateLine().mjava","sourceNew":"  public void testTriangleWithinCrossingDateLine() {\n    Rectangle rectangle = new Rectangle(0,  2, 179, -179);\n    Component2D rectangle2D =  Rectangle2D.create(rectangle);\n    double ax = 169;\n    double ay = -10;\n    double bx = 180;\n    double by = -10;\n    double cx = 180;\n    double cy = 30;\n    assertEquals(PointValues.Relation.CELL_CROSSES_QUERY, rectangle2D.relateTriangle(ax, ay, bx, by , cx, cy));\n    expectThrows(IllegalArgumentException.class, () -> {\n      rectangle2D.withinTriangle(ax, ay, true, bx, by, true, cx, cy, true);\n    });\n  }\n\n","sourceOld":"  public void testTriangleWithinCrossingDateLine() {\n    Rectangle rectangle = new Rectangle(0,  2, 179, -179);\n    Rectangle2D rectangle2D =  Rectangle2D.create(rectangle);\n    int ax = GeoEncodingUtils.encodeLongitude(169);\n    int ay = GeoEncodingUtils.encodeLatitude(-10);\n    int bx = GeoEncodingUtils.encodeLongitude(180);\n    int by = GeoEncodingUtils.encodeLatitude(-10);\n    int cx = GeoEncodingUtils.encodeLongitude(180);\n    int cy = GeoEncodingUtils.encodeLatitude(30);\n    assertTrue(rectangle2D.intersectsTriangle(ax, ay, bx, by , cx, cy));\n    assertFalse(rectangle2D.containsTriangle(ax, ay, bx, by , cx, cy));\n    expectThrows(IllegalArgumentException.class, () -> {\n      rectangle2D.withinTriangle(ax, ay, true, bx, by, true, cx, cy, true);\n    });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c568a1e2a5125c2245150eebb030a81baa158b31","date":1587403489,"type":4,"author":"Ignacio Vera","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/test/org/apache/lucene/geo/TestRectangle2D#testTriangleWithinCrossingDateLine().mjava","sourceNew":null,"sourceOld":"  public void testTriangleWithinCrossingDateLine() {\n    Rectangle rectangle = new Rectangle(0,  2, 179, -179);\n    Component2D rectangle2D =  Rectangle2D.create(rectangle);\n    double ax = 169;\n    double ay = -10;\n    double bx = 180;\n    double by = -10;\n    double cx = 180;\n    double cy = 30;\n    assertEquals(PointValues.Relation.CELL_CROSSES_QUERY, rectangle2D.relateTriangle(ax, ay, bx, by , cx, cy));\n    expectThrows(IllegalArgumentException.class, () -> {\n      rectangle2D.withinTriangle(ax, ay, true, bx, by, true, cx, cy, true);\n    });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"56c42be8d779573d0c86ba775117e17360dbf5a6":["09c1e6d465800c73af60624bf9d4459a19f7940c"],"c568a1e2a5125c2245150eebb030a81baa158b31":["56c42be8d779573d0c86ba775117e17360dbf5a6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"09c1e6d465800c73af60624bf9d4459a19f7940c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c568a1e2a5125c2245150eebb030a81baa158b31"]},"commit2Childs":{"56c42be8d779573d0c86ba775117e17360dbf5a6":["c568a1e2a5125c2245150eebb030a81baa158b31"],"c568a1e2a5125c2245150eebb030a81baa158b31":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["09c1e6d465800c73af60624bf9d4459a19f7940c"],"09c1e6d465800c73af60624bf9d4459a19f7940c":["56c42be8d779573d0c86ba775117e17360dbf5a6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}