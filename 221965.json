{"path":"solr/core/src/test/org/apache/solr/core/TestSolrDiscoveryProperties#testBackCompatXml().mjava","commits":[{"id":"a837c064b67fa63a9394136e31218b908cdcf783","date":1362186072,"type":0,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestSolrDiscoveryProperties#testBackCompatXml().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testBackCompatXml() throws Exception {\n    setMeUp();\n    addSolrPropertiesFile();\n    addSolrXml();\n    addConfigsForBackCompat();\n\n    CoreContainer cc = init();\n    try {\n      Properties props = cc.getContainerProperties();\n\n      assertEquals(\"/admin/cores\", cc.getAdminPath());\n      assertEquals(\"collectionLazy2\", cc.getDefaultCoreName());\n\n      // Shouldn't get these in properties at this point\n      assertNull(props.getProperty(\"cores.adminPath\"));\n      assertNull(props.getProperty(\"cores.defaultCoreName\"));\n      assertNull(props.getProperty(\"host\"));\n      assertNull(props.getProperty(\"port\")); // getProperty actually looks at original props.\n      assertNull(props.getProperty(\"cores.hostContext\"));\n      assertNull(props.getProperty(\"cores.zkClientTimeout\"));\n    } finally {\n      cc.shutdown();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6ca7b346301e4b516701df57860db765f0cc5cc9","date":1363273911,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestSolrDiscoveryProperties#testBackCompatXml().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestSolrDiscoveryProperties#testBackCompatXml().mjava","sourceNew":"  @Test\n  public void testBackCompatXml() throws Exception {\n    setMeUp();\n    addSolrPropertiesFile();\n    addSolrXml();\n    addConfigsForBackCompat();\n\n    CoreContainer cc = init();\n    try {\n      Properties props = cc.getContainerProperties();\n\n      assertEquals(\"/admin/cores\", cc.getAdminPath());\n      assertEquals(\"collectionLazy2\", cc.getDefaultCoreName());\n\n      // Shouldn't get these in properties at this point\n      assertNull(props.getProperty(\"cores.adminPath\"));\n      assertNull(props.getProperty(\"cores.defaultCoreName\"));\n      assertNull(props.getProperty(\"host\"));\n      assertNull(props.getProperty(\"port\")); // getProperty actually looks at original props.\n      assertNull(props.getProperty(\"cores.hostContext\"));\n      assertNull(props.getProperty(\"cores.zkClientTimeout\"));\n\n      SolrCore core1 = cc.getCore(\"collection1\");\n      CoreDescriptor desc = core1.getCoreDescriptor();\n\n      assertEquals(\"collection1\", desc.getProperty(\"solr.core.name\"));\n\n      // This is too long and ugly to put in. Besides, it varies.\n      assertNotNull(desc.getProperty(\"solr.core.instanceDir\"));\n\n      assertEquals(\"data/\", desc.getProperty(\"solr.core.dataDir\"));\n      assertEquals(\"solrconfig-minimal.xml\", desc.getProperty(\"solr.core.configName\"));\n      assertEquals(\"schema-tiny.xml\", desc.getProperty(\"solr.core.schemaName\"));\n      core1.close();\n    } finally {\n      cc.shutdown();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testBackCompatXml() throws Exception {\n    setMeUp();\n    addSolrPropertiesFile();\n    addSolrXml();\n    addConfigsForBackCompat();\n\n    CoreContainer cc = init();\n    try {\n      Properties props = cc.getContainerProperties();\n\n      assertEquals(\"/admin/cores\", cc.getAdminPath());\n      assertEquals(\"collectionLazy2\", cc.getDefaultCoreName());\n\n      // Shouldn't get these in properties at this point\n      assertNull(props.getProperty(\"cores.adminPath\"));\n      assertNull(props.getProperty(\"cores.defaultCoreName\"));\n      assertNull(props.getProperty(\"host\"));\n      assertNull(props.getProperty(\"port\")); // getProperty actually looks at original props.\n      assertNull(props.getProperty(\"cores.hostContext\"));\n      assertNull(props.getProperty(\"cores.zkClientTimeout\"));\n    } finally {\n      cc.shutdown();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e805678250fddc5a23684afc4e6a7ed6d25066a7","date":1363293458,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestSolrDiscoveryProperties#testBackCompatXml().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestSolrDiscoveryProperties#testBackCompatXml().mjava","sourceNew":"  @Test\n  public void testBackCompatXml() throws Exception {\n    setMeUp();\n    addSolrPropertiesFile();\n    addSolrXml();\n    addConfigsForBackCompat();\n\n    CoreContainer cc = init();\n    try {\n      Properties props = cc.getContainerProperties();\n\n      assertEquals(\"/admin/cores\", cc.getAdminPath());\n      assertEquals(\"collectionLazy2\", cc.getDefaultCoreName());\n\n      // Shouldn't get these in properties at this point\n      assertNull(props.getProperty(\"cores.adminPath\"));\n      assertNull(props.getProperty(\"cores.defaultCoreName\"));\n      assertNull(props.getProperty(\"host\"));\n      assertNull(props.getProperty(\"port\")); // getProperty actually looks at original props.\n      assertNull(props.getProperty(\"cores.hostContext\"));\n      assertNull(props.getProperty(\"cores.zkClientTimeout\"));\n\n      SolrCore core1 = cc.getCore(\"collection1\");\n      CoreDescriptor desc = core1.getCoreDescriptor();\n\n      assertEquals(\"collection1\", desc.getProperty(\"solr.core.name\"));\n\n      // This is too long and ugly to put in. Besides, it varies.\n      assertNotNull(desc.getProperty(\"solr.core.instanceDir\"));\n\n      assertEquals(\"data\" + File.separator, desc.getProperty(\"solr.core.dataDir\"));\n      assertEquals(\"solrconfig-minimal.xml\", desc.getProperty(\"solr.core.configName\"));\n      assertEquals(\"schema-tiny.xml\", desc.getProperty(\"solr.core.schemaName\"));\n      core1.close();\n    } finally {\n      cc.shutdown();\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testBackCompatXml() throws Exception {\n    setMeUp();\n    addSolrPropertiesFile();\n    addSolrXml();\n    addConfigsForBackCompat();\n\n    CoreContainer cc = init();\n    try {\n      Properties props = cc.getContainerProperties();\n\n      assertEquals(\"/admin/cores\", cc.getAdminPath());\n      assertEquals(\"collectionLazy2\", cc.getDefaultCoreName());\n\n      // Shouldn't get these in properties at this point\n      assertNull(props.getProperty(\"cores.adminPath\"));\n      assertNull(props.getProperty(\"cores.defaultCoreName\"));\n      assertNull(props.getProperty(\"host\"));\n      assertNull(props.getProperty(\"port\")); // getProperty actually looks at original props.\n      assertNull(props.getProperty(\"cores.hostContext\"));\n      assertNull(props.getProperty(\"cores.zkClientTimeout\"));\n\n      SolrCore core1 = cc.getCore(\"collection1\");\n      CoreDescriptor desc = core1.getCoreDescriptor();\n\n      assertEquals(\"collection1\", desc.getProperty(\"solr.core.name\"));\n\n      // This is too long and ugly to put in. Besides, it varies.\n      assertNotNull(desc.getProperty(\"solr.core.instanceDir\"));\n\n      assertEquals(\"data/\", desc.getProperty(\"solr.core.dataDir\"));\n      assertEquals(\"solrconfig-minimal.xml\", desc.getProperty(\"solr.core.configName\"));\n      assertEquals(\"schema-tiny.xml\", desc.getProperty(\"solr.core.schemaName\"));\n      core1.close();\n    } finally {\n      cc.shutdown();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9818efa55563ddfecdecafbdd43f4bee9f252e7d","date":1364853872,"type":4,"author":"Erick Erickson","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/core/TestSolrDiscoveryProperties#testBackCompatXml().mjava","sourceNew":null,"sourceOld":"  @Test\n  public void testBackCompatXml() throws Exception {\n    setMeUp();\n    addSolrPropertiesFile();\n    addSolrXml();\n    addConfigsForBackCompat();\n\n    CoreContainer cc = init();\n    try {\n      Properties props = cc.getContainerProperties();\n\n      assertEquals(\"/admin/cores\", cc.getAdminPath());\n      assertEquals(\"collectionLazy2\", cc.getDefaultCoreName());\n\n      // Shouldn't get these in properties at this point\n      assertNull(props.getProperty(\"cores.adminPath\"));\n      assertNull(props.getProperty(\"cores.defaultCoreName\"));\n      assertNull(props.getProperty(\"host\"));\n      assertNull(props.getProperty(\"port\")); // getProperty actually looks at original props.\n      assertNull(props.getProperty(\"cores.hostContext\"));\n      assertNull(props.getProperty(\"cores.zkClientTimeout\"));\n\n      SolrCore core1 = cc.getCore(\"collection1\");\n      CoreDescriptor desc = core1.getCoreDescriptor();\n\n      assertEquals(\"collection1\", desc.getProperty(\"solr.core.name\"));\n\n      // This is too long and ugly to put in. Besides, it varies.\n      assertNotNull(desc.getProperty(\"solr.core.instanceDir\"));\n\n      assertEquals(\"data\" + File.separator, desc.getProperty(\"solr.core.dataDir\"));\n      assertEquals(\"solrconfig-minimal.xml\", desc.getProperty(\"solr.core.configName\"));\n      assertEquals(\"schema-tiny.xml\", desc.getProperty(\"solr.core.schemaName\"));\n      core1.close();\n    } finally {\n      cc.shutdown();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9818efa55563ddfecdecafbdd43f4bee9f252e7d":["e805678250fddc5a23684afc4e6a7ed6d25066a7"],"e805678250fddc5a23684afc4e6a7ed6d25066a7":["6ca7b346301e4b516701df57860db765f0cc5cc9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6ca7b346301e4b516701df57860db765f0cc5cc9":["a837c064b67fa63a9394136e31218b908cdcf783"],"a837c064b67fa63a9394136e31218b908cdcf783":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9818efa55563ddfecdecafbdd43f4bee9f252e7d"]},"commit2Childs":{"9818efa55563ddfecdecafbdd43f4bee9f252e7d":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"e805678250fddc5a23684afc4e6a7ed6d25066a7":["9818efa55563ddfecdecafbdd43f4bee9f252e7d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a837c064b67fa63a9394136e31218b908cdcf783"],"6ca7b346301e4b516701df57860db765f0cc5cc9":["e805678250fddc5a23684afc4e6a7ed6d25066a7"],"a837c064b67fa63a9394136e31218b908cdcf783":["6ca7b346301e4b516701df57860db765f0cc5cc9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}