{"path":"src/java/org/apache/solr/request/XMLWriter#writeCdataTag(String,Map[String,String],String,boolean,boolean).mjava","commits":[{"id":"71ca970aefd1cbddcaad1f57dccb1b0820aad9fa","date":1259217630,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"src/java/org/apache/solr/request/XMLWriter#writeCdataTag(String,Map[String,String],String,boolean,boolean).mjava","pathOld":"/dev/null","sourceNew":"  /**Write a complete tag w/ attributes and cdata (the cdata is not enclosed in $lt;!CDATA[]!&gt;\n   * @param tag\n   * @param attributes\n   * @param cdata\n   * @param escapeCdata\n   * @param escapeAttr\n   * @throws IOException\n   */\n  public void writeCdataTag(String tag, Map<String,String> attributes, String cdata, boolean escapeCdata, boolean escapeAttr) throws IOException {\n    if (doIndent) indent();\n    writer.write('<');\n    writer.write(tag);\n    if (!attributes.isEmpty()) {\n      for (Map.Entry<String, String> entry : attributes.entrySet()) {\n        writeAttr(entry.getKey(), entry.getValue(), escapeAttr);\n      }\n    }\n    writer.write('>');\n    if (cdata != null && cdata.length() > 0) {\n      if (escapeCdata) {\n        XML.escapeCharData(cdata, writer);\n      } else {\n        writer.write(cdata, 0, cdata.length());\n      }\n    }\n    writer.write(\"</\");\n    writer.write(tag);\n    writer.write('>');\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ae7b8ff75c872b3cc70dd939c7368b1327a93ee1","date":1263263734,"type":5,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/java/org/apache/solr/response/XMLWriter#writeCdataTag(String,Map[String,String],String,boolean,boolean).mjava","pathOld":"src/java/org/apache/solr/request/XMLWriter#writeCdataTag(String,Map[String,String],String,boolean,boolean).mjava","sourceNew":"  /**Write a complete tag w/ attributes and cdata (the cdata is not enclosed in $lt;!CDATA[]!&gt;\n   * @param tag\n   * @param attributes\n   * @param cdata\n   * @param escapeCdata\n   * @param escapeAttr\n   * @throws IOException\n   */\n  public void writeCdataTag(String tag, Map<String,String> attributes, String cdata, boolean escapeCdata, boolean escapeAttr) throws IOException {\n    if (doIndent) indent();\n    writer.write('<');\n    writer.write(tag);\n    if (!attributes.isEmpty()) {\n      for (Map.Entry<String, String> entry : attributes.entrySet()) {\n        writeAttr(entry.getKey(), entry.getValue(), escapeAttr);\n      }\n    }\n    writer.write('>');\n    if (cdata != null && cdata.length() > 0) {\n      if (escapeCdata) {\n        XML.escapeCharData(cdata, writer);\n      } else {\n        writer.write(cdata, 0, cdata.length());\n      }\n    }\n    writer.write(\"</\");\n    writer.write(tag);\n    writer.write('>');\n  }\n\n","sourceOld":"  /**Write a complete tag w/ attributes and cdata (the cdata is not enclosed in $lt;!CDATA[]!&gt;\n   * @param tag\n   * @param attributes\n   * @param cdata\n   * @param escapeCdata\n   * @param escapeAttr\n   * @throws IOException\n   */\n  public void writeCdataTag(String tag, Map<String,String> attributes, String cdata, boolean escapeCdata, boolean escapeAttr) throws IOException {\n    if (doIndent) indent();\n    writer.write('<');\n    writer.write(tag);\n    if (!attributes.isEmpty()) {\n      for (Map.Entry<String, String> entry : attributes.entrySet()) {\n        writeAttr(entry.getKey(), entry.getValue(), escapeAttr);\n      }\n    }\n    writer.write('>');\n    if (cdata != null && cdata.length() > 0) {\n      if (escapeCdata) {\n        XML.escapeCharData(cdata, writer);\n      } else {\n        writer.write(cdata, 0, cdata.length());\n      }\n    }\n    writer.write(\"</\");\n    writer.write(tag);\n    writer.write('>');\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ae7b8ff75c872b3cc70dd939c7368b1327a93ee1":["71ca970aefd1cbddcaad1f57dccb1b0820aad9fa"],"71ca970aefd1cbddcaad1f57dccb1b0820aad9fa":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"ae7b8ff75c872b3cc70dd939c7368b1327a93ee1":[],"71ca970aefd1cbddcaad1f57dccb1b0820aad9fa":["ae7b8ff75c872b3cc70dd939c7368b1327a93ee1"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["71ca970aefd1cbddcaad1f57dccb1b0820aad9fa"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ae7b8ff75c872b3cc70dd939c7368b1327a93ee1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}