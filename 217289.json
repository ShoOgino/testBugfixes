{"path":"lucene/core/src/java/org/apache/lucene/search/FilterWeight#FilterWeight(Query,Weight).mjava","commits":[{"id":"96ab132e6f739772060bedf1719a057e97d5b759","date":1468422264,"type":0,"author":"Christine Poerschke","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/FilterWeight#FilterWeight(Query,Weight).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Alternative constructor.\n   * Use this variant only if the <code>weight</code> was not obtained\n   * via the {@link Query#createWeight(IndexSearcher, boolean, float)}\n   * method of the <code>query</code> object.\n   */\n  protected FilterWeight(Query query, Weight weight) {\n    super(query);\n    this.in = weight;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/FilterWeight#FilterWeight(Query,Weight).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Alternative constructor.\n   * Use this variant only if the <code>weight</code> was not obtained\n   * via the {@link Query#createWeight(IndexSearcher, boolean, float)}\n   * method of the <code>query</code> object.\n   */\n  protected FilterWeight(Query query, Weight weight) {\n    super(query);\n    this.in = weight;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9fc47cb7b4346802411bb432f501ed0673d7119e","date":1512640179,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/FilterWeight#FilterWeight(Query,Weight).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/FilterWeight#FilterWeight(Query,Weight).mjava","sourceNew":"  /**\n   * Alternative constructor.\n   * Use this variant only if the <code>weight</code> was not obtained\n   * via the {@link Query#createWeight(IndexSearcher, ScoreMode, float)}\n   * method of the <code>query</code> object.\n   */\n  protected FilterWeight(Query query, Weight weight) {\n    super(query);\n    this.in = weight;\n  }\n\n","sourceOld":"  /**\n   * Alternative constructor.\n   * Use this variant only if the <code>weight</code> was not obtained\n   * via the {@link Query#createWeight(IndexSearcher, boolean, float)}\n   * method of the <code>query</code> object.\n   */\n  protected FilterWeight(Query query, Weight weight) {\n    super(query);\n    this.in = weight;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"417142ff08fda9cf0b72d5133e63097a166c6458","date":1512729693,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/FilterWeight#FilterWeight(Query,Weight).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/FilterWeight#FilterWeight(Query,Weight).mjava","sourceNew":"  /**\n   * Alternative constructor.\n   * Use this variant only if the <code>weight</code> was not obtained\n   * via the {@link Query#createWeight(IndexSearcher, ScoreMode, float)}\n   * method of the <code>query</code> object.\n   */\n  protected FilterWeight(Query query, Weight weight) {\n    super(query);\n    this.in = weight;\n  }\n\n","sourceOld":"  /**\n   * Alternative constructor.\n   * Use this variant only if the <code>weight</code> was not obtained\n   * via the {@link Query#createWeight(IndexSearcher, boolean, float)}\n   * method of the <code>query</code> object.\n   */\n  protected FilterWeight(Query query, Weight weight) {\n    super(query);\n    this.in = weight;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9fc47cb7b4346802411bb432f501ed0673d7119e":["96ab132e6f739772060bedf1719a057e97d5b759"],"96ab132e6f739772060bedf1719a057e97d5b759":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","96ab132e6f739772060bedf1719a057e97d5b759"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["417142ff08fda9cf0b72d5133e63097a166c6458"],"417142ff08fda9cf0b72d5133e63097a166c6458":["96ab132e6f739772060bedf1719a057e97d5b759","9fc47cb7b4346802411bb432f501ed0673d7119e"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["96ab132e6f739772060bedf1719a057e97d5b759","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"9fc47cb7b4346802411bb432f501ed0673d7119e":["417142ff08fda9cf0b72d5133e63097a166c6458"],"96ab132e6f739772060bedf1719a057e97d5b759":["9fc47cb7b4346802411bb432f501ed0673d7119e","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","417142ff08fda9cf0b72d5133e63097a166c6458"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"417142ff08fda9cf0b72d5133e63097a166c6458":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}