{"path":"buildSrc/src/main/java/org/apache/lucene/gradle/WrapperDownloader#run(Path).mjava","commits":[{"id":"7c861722c354a4ab3abbca8c7f4bc5d11a3fa09f","date":1585845001,"type":0,"author":"Mike Drob","isMerge":false,"pathNew":"buildSrc/src/main/java/org/apache/lucene/gradle/WrapperDownloader#run(Path).mjava","pathOld":"/dev/null","sourceNew":"  public void run(Path destination) throws IOException, NoSuchAlgorithmException {\n    Path checksumPath = destination.resolveSibling(destination.getFileName().toString() + \".sha256\");\n    if (!Files.exists(checksumPath)) {\n      throw new IOException(\"Checksum file not found: \" + checksumPath);\n    }\n    String expectedChecksum = Files.readString(checksumPath, StandardCharsets.UTF_8).trim();\n\n    Path versionPath = destination.resolveSibling(destination.getFileName().toString() + \".version\");\n    if (!Files.exists(versionPath)) {\n      throw new IOException(\"Wrapper version file not found: \" + versionPath);\n    }\n    String wrapperVersion = Files.readString(versionPath, StandardCharsets.UTF_8).trim();\n\n    MessageDigest digest = MessageDigest.getInstance(\"SHA-256\");\n\n    if (Files.exists(destination)) {\n      if (checksum(digest, destination).equalsIgnoreCase(expectedChecksum)) {\n        // File exists, checksum matches, good to go!\n        return;\n      } else {\n        System.err.println(\"Checksum mismatch, will attempt to re-download gradle-wrapper.jar\");\n        System.out.println(destination);\n        Files.delete(destination);\n      }\n    }\n\n    URL url = new URL(\"https://github.com/gradle/gradle/raw/v\" + wrapperVersion + \"/gradle/wrapper/gradle-wrapper.jar\");\n    System.err.println(\"Downloading gradle-wrapper.jar from \" + url);\n\n    // As of v6.0.1 the wrapper is approximately 60K\n    // Can increase this if gradle wrapper ever goes beyond 500K, but keep a safety check\n    final int maxSize = 512 * 1024;\n\n    // Zero-copy save the jar to a temp file\n    Path temp = Files.createTempFile(destination.getParent(), \".gradle-wrapper\", \".tmp\");\n    try {\n      try (ReadableByteChannel in = Channels.newChannel(url.openStream());\n           FileChannel out = FileChannel.open(temp, EnumSet.of(APPEND))) {\n        out.transferFrom(in, 0, maxSize);\n      } catch (IOException e) {\n        throw new IOException(\"Could not download gradle-wrapper.jar (\" + e.getMessage() + \").\");\n      }\n\n      String checksum = checksum(digest, temp);\n      if (!checksum.equalsIgnoreCase(expectedChecksum)) {\n        throw new IOException(String.format(Locale.ROOT,\n                \"Checksum mismatch on downloaded gradle-wrapper.jar (was: %s, expected: %s).\",\n                checksum,\n                expectedChecksum));\n      }\n\n      Files.move(temp, destination, REPLACE_EXISTING);\n      temp = null;\n    } finally {\n      if (temp != null) {\n        Files.deleteIfExists(temp);\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7c861722c354a4ab3abbca8c7f4bc5d11a3fa09f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7c861722c354a4ab3abbca8c7f4bc5d11a3fa09f"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["7c861722c354a4ab3abbca8c7f4bc5d11a3fa09f"],"7c861722c354a4ab3abbca8c7f4bc5d11a3fa09f":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}