{"path":"solr/core/src/java/org/apache/solr/search/facet/FacetFieldMerger#merge(SimpleOrderedMap,Context).mjava","commits":[{"id":"1931d98b40b01d5075753b197c2461a5c2652689","date":1471971289,"type":1,"author":"yonik","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetFieldMerger#merge(SimpleOrderedMap,Context).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/FacetFieldMerger[FacetModule]#merge(SimpleOrderedMap,Context).mjava","sourceNew":"  protected void merge(SimpleOrderedMap facetResult, Context mcontext) {\n    if (freq.missing) {\n      Object o = facetResult.get(\"missing\");\n      if (o != null) {\n        if (missingBucket == null) {\n          missingBucket = newBucket(null, mcontext);\n        }\n        missingBucket.mergeBucket((SimpleOrderedMap)o , mcontext);\n      }\n    }\n\n    if (freq.allBuckets) {\n      Object o = facetResult.get(\"allBuckets\");\n      if (o != null) {\n        if (allBuckets == null) {\n          allBuckets = newBucket(null, mcontext);\n        }\n        allBuckets.mergeBucket((SimpleOrderedMap)o , mcontext);\n      }\n    }\n\n    List<SimpleOrderedMap> bucketList = (List<SimpleOrderedMap>) facetResult.get(\"buckets\");\n    numReturnedPerShard[mcontext.shardNum] = bucketList.size();\n    numReturnedBuckets += bucketList.size();\n    mergeBucketList(bucketList , mcontext);\n\n    if (freq.numBuckets) {\n      Object nb = facetResult.get(\"numBuckets\");\n      if (nb != null) {\n        if (numBuckets == null) {\n          numBuckets = new FacetNumBucketsMerger();\n        }\n        numBuckets.merge(nb , mcontext);\n      }\n    }\n\n  }\n\n","sourceOld":"  protected void merge(SimpleOrderedMap facetResult, Context mcontext) {\n    if (freq.missing) {\n      Object o = facetResult.get(\"missing\");\n      if (o != null) {\n        if (missingBucket == null) {\n          missingBucket = newBucket(null);\n        }\n        missingBucket.mergeBucket((SimpleOrderedMap)o , mcontext);\n      }\n    }\n\n    if (freq.allBuckets) {\n      Object o = facetResult.get(\"allBuckets\");\n      if (o != null) {\n        if (allBuckets == null) {\n          allBuckets = newBucket(null);\n        }\n        allBuckets.mergeBucket((SimpleOrderedMap)o , mcontext);\n      }\n    }\n\n    List<SimpleOrderedMap> bucketList = (List<SimpleOrderedMap>) facetResult.get(\"buckets\");\n    numReturnedBuckets += bucketList.size();\n    mergeBucketList(bucketList , mcontext);\n\n    if (freq.numBuckets) {\n      Object nb = facetResult.get(\"numBuckets\");\n      if (nb != null) {\n        if (numBuckets == null) {\n          numBuckets = new FacetNumBucketsMerger();\n        }\n        numBuckets.merge(nb , mcontext);\n      }\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e1c5f7ce544a129550a8515f7f0eb5f1c0f4472a","date":1472163016,"type":1,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetFieldMerger#merge(SimpleOrderedMap,Context).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/FacetFieldMerger[FacetModule]#merge(SimpleOrderedMap,Context).mjava","sourceNew":"  protected void merge(SimpleOrderedMap facetResult, Context mcontext) {\n    if (freq.missing) {\n      Object o = facetResult.get(\"missing\");\n      if (o != null) {\n        if (missingBucket == null) {\n          missingBucket = newBucket(null, mcontext);\n        }\n        missingBucket.mergeBucket((SimpleOrderedMap)o , mcontext);\n      }\n    }\n\n    if (freq.allBuckets) {\n      Object o = facetResult.get(\"allBuckets\");\n      if (o != null) {\n        if (allBuckets == null) {\n          allBuckets = newBucket(null, mcontext);\n        }\n        allBuckets.mergeBucket((SimpleOrderedMap)o , mcontext);\n      }\n    }\n\n    List<SimpleOrderedMap> bucketList = (List<SimpleOrderedMap>) facetResult.get(\"buckets\");\n    numReturnedPerShard[mcontext.shardNum] = bucketList.size();\n    numReturnedBuckets += bucketList.size();\n    mergeBucketList(bucketList , mcontext);\n\n    if (freq.numBuckets) {\n      Object nb = facetResult.get(\"numBuckets\");\n      if (nb != null) {\n        if (numBuckets == null) {\n          numBuckets = new FacetNumBucketsMerger();\n        }\n        numBuckets.merge(nb , mcontext);\n      }\n    }\n\n  }\n\n","sourceOld":"  protected void merge(SimpleOrderedMap facetResult, Context mcontext) {\n    if (freq.missing) {\n      Object o = facetResult.get(\"missing\");\n      if (o != null) {\n        if (missingBucket == null) {\n          missingBucket = newBucket(null);\n        }\n        missingBucket.mergeBucket((SimpleOrderedMap)o , mcontext);\n      }\n    }\n\n    if (freq.allBuckets) {\n      Object o = facetResult.get(\"allBuckets\");\n      if (o != null) {\n        if (allBuckets == null) {\n          allBuckets = newBucket(null);\n        }\n        allBuckets.mergeBucket((SimpleOrderedMap)o , mcontext);\n      }\n    }\n\n    List<SimpleOrderedMap> bucketList = (List<SimpleOrderedMap>) facetResult.get(\"buckets\");\n    numReturnedBuckets += bucketList.size();\n    mergeBucketList(bucketList , mcontext);\n\n    if (freq.numBuckets) {\n      Object nb = facetResult.get(\"numBuckets\");\n      if (nb != null) {\n        if (numBuckets == null) {\n          numBuckets = new FacetNumBucketsMerger();\n        }\n        numBuckets.merge(nb , mcontext);\n      }\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetFieldMerger#merge(SimpleOrderedMap,Context).mjava","pathOld":"/dev/null","sourceNew":"  protected void merge(SimpleOrderedMap facetResult, Context mcontext) {\n    if (freq.missing) {\n      Object o = facetResult.get(\"missing\");\n      if (o != null) {\n        if (missingBucket == null) {\n          missingBucket = newBucket(null, mcontext);\n        }\n        missingBucket.mergeBucket((SimpleOrderedMap)o , mcontext);\n      }\n    }\n\n    if (freq.allBuckets) {\n      Object o = facetResult.get(\"allBuckets\");\n      if (o != null) {\n        if (allBuckets == null) {\n          allBuckets = newBucket(null, mcontext);\n        }\n        allBuckets.mergeBucket((SimpleOrderedMap)o , mcontext);\n      }\n    }\n\n    List<SimpleOrderedMap> bucketList = (List<SimpleOrderedMap>) facetResult.get(\"buckets\");\n    numReturnedPerShard[mcontext.shardNum] = bucketList.size();\n    numReturnedBuckets += bucketList.size();\n    mergeBucketList(bucketList , mcontext);\n\n    if (freq.numBuckets) {\n      Object nb = facetResult.get(\"numBuckets\");\n      if (nb != null) {\n        if (numBuckets == null) {\n          numBuckets = new FacetNumBucketsMerger();\n        }\n        numBuckets.merge(nb , mcontext);\n      }\n    }\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b65e1e1139651e98138d35a941b15107427618e3","date":1493072237,"type":3,"author":"yonik","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetFieldMerger#merge(SimpleOrderedMap,Context).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/FacetFieldMerger#merge(SimpleOrderedMap,Context).mjava","sourceNew":"  protected void merge(SimpleOrderedMap facetResult, Context mcontext) {\n    if (freq.missing) {\n      Object o = facetResult.get(\"missing\");\n      if (o != null) {\n        if (missingBucket == null) {\n          missingBucket = newBucket(null, mcontext);\n        }\n        missingBucket.mergeBucket((SimpleOrderedMap)o , mcontext);\n      }\n    }\n\n    if (freq.allBuckets) {\n      Object o = facetResult.get(\"allBuckets\");\n      if (o != null) {\n        if (allBuckets == null) {\n          allBuckets = newBucket(null, mcontext);\n        }\n        allBuckets.mergeBucket((SimpleOrderedMap)o , mcontext);\n      }\n    }\n\n    List<SimpleOrderedMap> bucketList = (List<SimpleOrderedMap>) facetResult.get(\"buckets\");\n    numReturnedPerShard[mcontext.shardNum] = bucketList.size();\n    numReturnedBuckets += bucketList.size();\n    mergeBucketList(bucketList , mcontext);\n\n    if (freq.numBuckets) {\n      Object nb = facetResult.get(\"numBuckets\");\n      if (nb != null) {\n        if (numBuckets == null) {\n          numBuckets = new HLLAgg(\"hll_merger\").createFacetMerger(nb);\n        }\n        numBuckets.merge(nb , mcontext);\n      }\n    }\n\n  }\n\n","sourceOld":"  protected void merge(SimpleOrderedMap facetResult, Context mcontext) {\n    if (freq.missing) {\n      Object o = facetResult.get(\"missing\");\n      if (o != null) {\n        if (missingBucket == null) {\n          missingBucket = newBucket(null, mcontext);\n        }\n        missingBucket.mergeBucket((SimpleOrderedMap)o , mcontext);\n      }\n    }\n\n    if (freq.allBuckets) {\n      Object o = facetResult.get(\"allBuckets\");\n      if (o != null) {\n        if (allBuckets == null) {\n          allBuckets = newBucket(null, mcontext);\n        }\n        allBuckets.mergeBucket((SimpleOrderedMap)o , mcontext);\n      }\n    }\n\n    List<SimpleOrderedMap> bucketList = (List<SimpleOrderedMap>) facetResult.get(\"buckets\");\n    numReturnedPerShard[mcontext.shardNum] = bucketList.size();\n    numReturnedBuckets += bucketList.size();\n    mergeBucketList(bucketList , mcontext);\n\n    if (freq.numBuckets) {\n      Object nb = facetResult.get(\"numBuckets\");\n      if (nb != null) {\n        if (numBuckets == null) {\n          numBuckets = new FacetNumBucketsMerger();\n        }\n        numBuckets.merge(nb , mcontext);\n      }\n    }\n\n  }\n\n","bugFix":["ac53eb8ed1d40ceac7330e9dc2e5c258e8fc155d"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetFieldMerger#merge(SimpleOrderedMap,Context).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/FacetFieldMerger#merge(SimpleOrderedMap,Context).mjava","sourceNew":"  protected void merge(SimpleOrderedMap facetResult, Context mcontext) {\n    if (freq.missing) {\n      Object o = facetResult.get(\"missing\");\n      if (o != null) {\n        if (missingBucket == null) {\n          missingBucket = newBucket(null, mcontext);\n        }\n        missingBucket.mergeBucket((SimpleOrderedMap)o , mcontext);\n      }\n    }\n\n    if (freq.allBuckets) {\n      Object o = facetResult.get(\"allBuckets\");\n      if (o != null) {\n        if (allBuckets == null) {\n          allBuckets = newBucket(null, mcontext);\n        }\n        allBuckets.mergeBucket((SimpleOrderedMap)o , mcontext);\n      }\n    }\n\n    List<SimpleOrderedMap> bucketList = (List<SimpleOrderedMap>) facetResult.get(\"buckets\");\n    numReturnedPerShard[mcontext.shardNum] = bucketList.size();\n    numReturnedBuckets += bucketList.size();\n    mergeBucketList(bucketList , mcontext);\n\n    if (freq.numBuckets) {\n      Object nb = facetResult.get(\"numBuckets\");\n      if (nb != null) {\n        if (numBuckets == null) {\n          numBuckets = new HLLAgg(\"hll_merger\").createFacetMerger(nb);\n        }\n        numBuckets.merge(nb , mcontext);\n      }\n    }\n\n  }\n\n","sourceOld":"  protected void merge(SimpleOrderedMap facetResult, Context mcontext) {\n    if (freq.missing) {\n      Object o = facetResult.get(\"missing\");\n      if (o != null) {\n        if (missingBucket == null) {\n          missingBucket = newBucket(null, mcontext);\n        }\n        missingBucket.mergeBucket((SimpleOrderedMap)o , mcontext);\n      }\n    }\n\n    if (freq.allBuckets) {\n      Object o = facetResult.get(\"allBuckets\");\n      if (o != null) {\n        if (allBuckets == null) {\n          allBuckets = newBucket(null, mcontext);\n        }\n        allBuckets.mergeBucket((SimpleOrderedMap)o , mcontext);\n      }\n    }\n\n    List<SimpleOrderedMap> bucketList = (List<SimpleOrderedMap>) facetResult.get(\"buckets\");\n    numReturnedPerShard[mcontext.shardNum] = bucketList.size();\n    numReturnedBuckets += bucketList.size();\n    mergeBucketList(bucketList , mcontext);\n\n    if (freq.numBuckets) {\n      Object nb = facetResult.get(\"numBuckets\");\n      if (nb != null) {\n        if (numBuckets == null) {\n          numBuckets = new FacetNumBucketsMerger();\n        }\n        numBuckets.merge(nb , mcontext);\n      }\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a56a9893014b284af4d1af451e6c02e7ffdf5b6e","date":1590065972,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetFieldMerger#merge(SimpleOrderedMap,Context).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/FacetFieldMerger#merge(SimpleOrderedMap,Context).mjava","sourceNew":"  protected void merge(@SuppressWarnings(\"rawtypes\") SimpleOrderedMap facetResult, Context mcontext) {\n    if (freq.missing) {\n      Object o = facetResult.get(\"missing\");\n      if (o != null) {\n        if (missingBucket == null) {\n          missingBucket = newBucket(null, mcontext);\n        }\n        missingBucket.mergeBucket((SimpleOrderedMap)o , mcontext);\n      }\n    }\n\n    if (freq.allBuckets) {\n      Object o = facetResult.get(\"allBuckets\");\n      if (o != null) {\n        if (allBuckets == null) {\n          allBuckets = newBucket(null, mcontext);\n        }\n        allBuckets.mergeBucket((SimpleOrderedMap)o , mcontext);\n      }\n    }\n\n\n    @SuppressWarnings({\"unchecked\", \"rawtypes\"})\n    List<SimpleOrderedMap> bucketList = (List<SimpleOrderedMap>) facetResult.get(\"buckets\");\n    numReturnedPerShard[mcontext.shardNum] = bucketList.size();\n    numReturnedBuckets += bucketList.size();\n    mergeBucketList(bucketList , mcontext);\n\n    if (freq.numBuckets) {\n      Object nb = facetResult.get(\"numBuckets\");\n      if (nb != null) {\n        if (numBuckets == null) {\n          numBuckets = new HLLAgg(\"hll_merger\").createFacetMerger(nb);\n        }\n        numBuckets.merge(nb , mcontext);\n      }\n    }\n\n  }\n\n","sourceOld":"  protected void merge(SimpleOrderedMap facetResult, Context mcontext) {\n    if (freq.missing) {\n      Object o = facetResult.get(\"missing\");\n      if (o != null) {\n        if (missingBucket == null) {\n          missingBucket = newBucket(null, mcontext);\n        }\n        missingBucket.mergeBucket((SimpleOrderedMap)o , mcontext);\n      }\n    }\n\n    if (freq.allBuckets) {\n      Object o = facetResult.get(\"allBuckets\");\n      if (o != null) {\n        if (allBuckets == null) {\n          allBuckets = newBucket(null, mcontext);\n        }\n        allBuckets.mergeBucket((SimpleOrderedMap)o , mcontext);\n      }\n    }\n\n    List<SimpleOrderedMap> bucketList = (List<SimpleOrderedMap>) facetResult.get(\"buckets\");\n    numReturnedPerShard[mcontext.shardNum] = bucketList.size();\n    numReturnedBuckets += bucketList.size();\n    mergeBucketList(bucketList , mcontext);\n\n    if (freq.numBuckets) {\n      Object nb = facetResult.get(\"numBuckets\");\n      if (nb != null) {\n        if (numBuckets == null) {\n          numBuckets = new HLLAgg(\"hll_merger\").createFacetMerger(nb);\n        }\n        numBuckets.merge(nb , mcontext);\n      }\n    }\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e9017cf144952056066919f1ebc7897ff9bd71b1":["e1c5f7ce544a129550a8515f7f0eb5f1c0f4472a","b65e1e1139651e98138d35a941b15107427618e3"],"a56a9893014b284af4d1af451e6c02e7ffdf5b6e":["b65e1e1139651e98138d35a941b15107427618e3"],"b65e1e1139651e98138d35a941b15107427618e3":["e1c5f7ce544a129550a8515f7f0eb5f1c0f4472a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1931d98b40b01d5075753b197c2461a5c2652689":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e1c5f7ce544a129550a8515f7f0eb5f1c0f4472a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","1931d98b40b01d5075753b197c2461a5c2652689"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","e1c5f7ce544a129550a8515f7f0eb5f1c0f4472a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a56a9893014b284af4d1af451e6c02e7ffdf5b6e"]},"commit2Childs":{"e9017cf144952056066919f1ebc7897ff9bd71b1":[],"a56a9893014b284af4d1af451e6c02e7ffdf5b6e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"b65e1e1139651e98138d35a941b15107427618e3":["e9017cf144952056066919f1ebc7897ff9bd71b1","a56a9893014b284af4d1af451e6c02e7ffdf5b6e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1931d98b40b01d5075753b197c2461a5c2652689","e1c5f7ce544a129550a8515f7f0eb5f1c0f4472a","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"1931d98b40b01d5075753b197c2461a5c2652689":["e1c5f7ce544a129550a8515f7f0eb5f1c0f4472a"],"e1c5f7ce544a129550a8515f7f0eb5f1c0f4472a":["e9017cf144952056066919f1ebc7897ff9bd71b1","b65e1e1139651e98138d35a941b15107427618e3","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e9017cf144952056066919f1ebc7897ff9bd71b1","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}