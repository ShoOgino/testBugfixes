{"path":"lucene/sandbox/src/java/org/apache/lucene/bkdtree/BKDTreeReader#accept(QueryState,int).mjava","commits":[{"id":"07c50cb1eca5629cac5b6702dd0f5e06157af61a","date":1445464748,"type":0,"author":"Nick Knize","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/bkdtree/BKDTreeReader#accept(QueryState,int).mjava","pathOld":"/dev/null","sourceNew":"  private boolean accept(QueryState state, int docID) throws IOException {\n    //System.out.println(\"    check accept docID=\" + docID);\n    state.sndv.setDocument(docID);\n    // How many values this doc has:\n    int count = state.sndv.count();\n    for(int j=0;j<count;j++) {\n      long enc = state.sndv.valueAt(j);\n\n      int latEnc = (int) ((enc>>32) & 0xffffffffL);\n      int lonEnc = (int) (enc & 0xffffffffL);\n      //System.out.println(\"      lat=\" + BKDTreeWriter.decodeLat(latEnc) + \" lon=\" + BKDTreeWriter.decodeLon(lonEnc));\n\n      if (latEnc >= state.latMinEnc &&\n          latEnc < state.latMaxEnc &&\n          lonEnc >= state.lonMinEnc &&\n          lonEnc < state.lonMaxEnc &&\n          (state.latLonFilter == null ||\n           state.latLonFilter.accept(BKDTreeWriter.decodeLat(latEnc), BKDTreeWriter.decodeLon(lonEnc)))) {\n        //System.out.println(\"      yes\");\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1904709ea0185dc04e3d77ea01c79e909caf2796","date":1447006699,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/sandbox/src/java/org/apache/lucene/bkdtree/BKDTreeReader#accept(QueryState,int).mjava","sourceNew":null,"sourceOld":"  private boolean accept(QueryState state, int docID) throws IOException {\n    //System.out.println(\"    check accept docID=\" + docID);\n    state.sndv.setDocument(docID);\n    // How many values this doc has:\n    int count = state.sndv.count();\n    for(int j=0;j<count;j++) {\n      long enc = state.sndv.valueAt(j);\n\n      int latEnc = (int) ((enc>>32) & 0xffffffffL);\n      int lonEnc = (int) (enc & 0xffffffffL);\n      //System.out.println(\"      lat=\" + BKDTreeWriter.decodeLat(latEnc) + \" lon=\" + BKDTreeWriter.decodeLon(lonEnc));\n\n      if (latEnc >= state.latMinEnc &&\n          latEnc < state.latMaxEnc &&\n          lonEnc >= state.lonMinEnc &&\n          lonEnc < state.lonMaxEnc &&\n          (state.latLonFilter == null ||\n           state.latLonFilter.accept(BKDTreeWriter.decodeLat(latEnc), BKDTreeWriter.decodeLon(lonEnc)))) {\n        //System.out.println(\"      yes\");\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1904709ea0185dc04e3d77ea01c79e909caf2796":["07c50cb1eca5629cac5b6702dd0f5e06157af61a"],"07c50cb1eca5629cac5b6702dd0f5e06157af61a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1904709ea0185dc04e3d77ea01c79e909caf2796"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["07c50cb1eca5629cac5b6702dd0f5e06157af61a"],"1904709ea0185dc04e3d77ea01c79e909caf2796":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"07c50cb1eca5629cac5b6702dd0f5e06157af61a":["1904709ea0185dc04e3d77ea01c79e909caf2796"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}