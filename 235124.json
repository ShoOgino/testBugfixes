{"path":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/SelectWithEvaluatorsTest#assertMapOrder(List[Tuple],int...).mjava","commits":[{"id":"88073e8783f450d4c0218decc2f001a1ac2c7e7c","date":1486705191,"type":0,"author":"Dennis Gove","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/SelectWithEvaluatorsTest#assertMapOrder(List[Tuple],int...).mjava","pathOld":"/dev/null","sourceNew":"  protected boolean assertMapOrder(List<Tuple> tuples, int... ids) throws Exception {\n    int i = 0;\n    for(int val : ids) {\n      Tuple t = tuples.get(i);\n      List<Map> tip = t.getMaps(\"group\");\n      int id = (int)tip.get(0).get(\"id\");\n      if(id != val) {\n        throw new Exception(\"Found value:\"+id+\" expecting:\"+val);\n      }\n      ++i;\n    }\n    return true;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9ba1b632c041956c93c41aa1143d16a567014891","date":1592328473,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/SelectWithEvaluatorsTest#assertMapOrder(List[Tuple],int...).mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/io/stream/SelectWithEvaluatorsTest#assertMapOrder(List[Tuple],int...).mjava","sourceNew":"  protected boolean assertMapOrder(List<Tuple> tuples, int... ids) throws Exception {\n    int i = 0;\n    for(int val : ids) {\n      Tuple t = tuples.get(i);\n      @SuppressWarnings({\"rawtypes\"})\n      List<Map> tip = t.getMaps(\"group\");\n      int id = (int)tip.get(0).get(\"id\");\n      if(id != val) {\n        throw new Exception(\"Found value:\"+id+\" expecting:\"+val);\n      }\n      ++i;\n    }\n    return true;\n  }\n\n","sourceOld":"  protected boolean assertMapOrder(List<Tuple> tuples, int... ids) throws Exception {\n    int i = 0;\n    for(int val : ids) {\n      Tuple t = tuples.get(i);\n      List<Map> tip = t.getMaps(\"group\");\n      int id = (int)tip.get(0).get(\"id\");\n      if(id != val) {\n        throw new Exception(\"Found value:\"+id+\" expecting:\"+val);\n      }\n      ++i;\n    }\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9ba1b632c041956c93c41aa1143d16a567014891":["88073e8783f450d4c0218decc2f001a1ac2c7e7c"],"88073e8783f450d4c0218decc2f001a1ac2c7e7c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9ba1b632c041956c93c41aa1143d16a567014891"]},"commit2Childs":{"9ba1b632c041956c93c41aa1143d16a567014891":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"88073e8783f450d4c0218decc2f001a1ac2c7e7c":["9ba1b632c041956c93c41aa1143d16a567014891"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["88073e8783f450d4c0218decc2f001a1ac2c7e7c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}