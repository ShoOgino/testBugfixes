{"path":"lucene/test-framework/src/java/org/apache/lucene/util/TestSecurityManager#checkWrite(String).mjava","commits":[{"id":"846ecaa92e1487e1e68f08867aebbae94690bcb2","date":1575282989,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/util/TestSecurityManager#checkWrite(String).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * {@inheritDoc}\n   * <p>This method implements hacks to workaround hadoop's garbage FileUtil code\n   */\n  @Override\n  public void checkWrite(String file) {\n    for (StackTraceElement element : Thread.currentThread().getStackTrace()) {\n      // hadoop \"canWrite\" method doesn't handle securityexception and fails completely.\n      // so, lie to it, and tell it we will happily write, so it does not crash.\n      if (\"org.apache.hadoop.fs.FileUtil\".equals(element.getClassName()) &&\n          \"canWrite\".equals(element.getMethodName())) {\n        return;\n      }\n    }\n    super.checkWrite(file);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cf4186ad2efcdebf9859a7b14723a280571c6587","date":1575575603,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/SolrSecurityManager#checkWrite(String).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/TestSecurityManager#checkWrite(String).mjava","sourceNew":"  /**\n   * {@inheritDoc}\n   * <p>This method implements hacks to workaround hadoop's garbage FileUtil code\n   */\n  @Override\n  public void checkWrite(String file) {\n    for (StackTraceElement element : Thread.currentThread().getStackTrace()) {\n      // hadoop \"canWrite\" method doesn't handle securityexception and fails completely.\n      // so, lie to it, and tell it we will happily write, so it does not crash.\n      if (\"org.apache.hadoop.fs.FileUtil\".equals(element.getClassName()) &&\n          \"canWrite\".equals(element.getMethodName())) {\n        return;\n      }\n    }\n    super.checkWrite(file);\n  }\n\n","sourceOld":"  /**\n   * {@inheritDoc}\n   * <p>This method implements hacks to workaround hadoop's garbage FileUtil code\n   */\n  @Override\n  public void checkWrite(String file) {\n    for (StackTraceElement element : Thread.currentThread().getStackTrace()) {\n      // hadoop \"canWrite\" method doesn't handle securityexception and fails completely.\n      // so, lie to it, and tell it we will happily write, so it does not crash.\n      if (\"org.apache.hadoop.fs.FileUtil\".equals(element.getClassName()) &&\n          \"canWrite\".equals(element.getMethodName())) {\n        return;\n      }\n    }\n    super.checkWrite(file);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2c173aec5dba4a880e26706e8ca1ec9e67b74ed5","date":1575629849,"type":5,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/test-framework/src/java/org/apache/solr/util/SolrSecurityManager#checkWrite(String).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/util/TestSecurityManager#checkWrite(String).mjava","sourceNew":"  /**\n   * {@inheritDoc}\n   * <p>This method implements hacks to workaround hadoop's garbage FileUtil code\n   */\n  @Override\n  public void checkWrite(String file) {\n    for (StackTraceElement element : Thread.currentThread().getStackTrace()) {\n      // hadoop \"canWrite\" method doesn't handle securityexception and fails completely.\n      // so, lie to it, and tell it we will happily write, so it does not crash.\n      if (\"org.apache.hadoop.fs.FileUtil\".equals(element.getClassName()) &&\n          \"canWrite\".equals(element.getMethodName())) {\n        return;\n      }\n    }\n    super.checkWrite(file);\n  }\n\n","sourceOld":"  /**\n   * {@inheritDoc}\n   * <p>This method implements hacks to workaround hadoop's garbage FileUtil code\n   */\n  @Override\n  public void checkWrite(String file) {\n    for (StackTraceElement element : Thread.currentThread().getStackTrace()) {\n      // hadoop \"canWrite\" method doesn't handle securityexception and fails completely.\n      // so, lie to it, and tell it we will happily write, so it does not crash.\n      if (\"org.apache.hadoop.fs.FileUtil\".equals(element.getClassName()) &&\n          \"canWrite\".equals(element.getMethodName())) {\n        return;\n      }\n    }\n    super.checkWrite(file);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"cf4186ad2efcdebf9859a7b14723a280571c6587":["846ecaa92e1487e1e68f08867aebbae94690bcb2"],"846ecaa92e1487e1e68f08867aebbae94690bcb2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"2c173aec5dba4a880e26706e8ca1ec9e67b74ed5":["846ecaa92e1487e1e68f08867aebbae94690bcb2","cf4186ad2efcdebf9859a7b14723a280571c6587"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["cf4186ad2efcdebf9859a7b14723a280571c6587"]},"commit2Childs":{"cf4186ad2efcdebf9859a7b14723a280571c6587":["2c173aec5dba4a880e26706e8ca1ec9e67b74ed5","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"846ecaa92e1487e1e68f08867aebbae94690bcb2":["cf4186ad2efcdebf9859a7b14723a280571c6587","2c173aec5dba4a880e26706e8ca1ec9e67b74ed5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["846ecaa92e1487e1e68f08867aebbae94690bcb2"],"2c173aec5dba4a880e26706e8ca1ec9e67b74ed5":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["2c173aec5dba4a880e26706e8ca1ec9e67b74ed5","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}