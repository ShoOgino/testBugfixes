{"path":"solr/core/src/test/org/apache/solr/search/join/BlockJoinFacetRandomTest#childrenQuery(int[],int[],int[]).mjava","commits":[{"id":"dbb4b815ac37f3938a2f7c18c2e7a5267ed50a1d","date":1450976696,"type":0,"author":"Mikhail Khludnev","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/join/BlockJoinFacetRandomTest#childrenQuery(int[],int[],int[]).mjava","pathOld":"/dev/null","sourceNew":"  private String childrenQuery(int[] children, int[] parentRelations, int[] childRelations) {\n    StringBuilder builder = new StringBuilder();\n    builder.append(flatQuery(children, \"child_s\", CHILD_VALUE_PREFIX));\n    if (parentRelations == null) {\n      if (childRelations == null) {\n        builder.append(\" +parentchild_s:[* TO *]\");\n      } else {\n        builder.append(\" +parentchild_s:(\");\n        if (childRelations.length == 0) {\n          builder.append(\"match_nothing_value\");\n        } else {\n          for (int childRelation : childRelations) {\n            for (int i = 0; i < NUMBER_OF_PARENTS; i++) {\n              builder.append(parentChild(i, childRelation));\n              builder.append(\" \");\n            }\n          }\n          builder.deleteCharAt(builder.length() - 1);\n        }\n        builder.append(\")\");\n      }\n    } else {\n      builder.append(\" +parentchild_s:(\");\n      if (parentRelations.length == 0) {\n        builder.append(\"match_nothing_value\");\n      } else {\n        if (childRelations == null) {\n          for (int parentRelation : parentRelations) {\n              for (int i = 0; i < NUMBER_OF_CHILDREN; i++) {\n                builder.append(parentChild(parentRelation, i));\n                builder.append(\" \");\n              }\n          }\n        } else if (childRelations.length == 0) {\n          builder.append(\"match_nothing_value\");\n        } else {\n          for (int parentRelation : parentRelations) {\n\n              for (int childRelation : childRelations) {\n                builder.append(parentChild(parentRelation, childRelation));\n                builder.append(\" \");\n              }\n          }\n          builder.deleteCharAt(builder.length() - 1);\n        }\n      }\n      builder.append(\")\");\n    }\n    return builder.toString();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"00a778ad8ad6c2c04607538d2f36fee001239eef","date":1576657013,"type":4,"author":"Mikhail Khludnev","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/search/join/BlockJoinFacetRandomTest#childrenQuery(int[],int[],int[]).mjava","sourceNew":null,"sourceOld":"  private String childrenQuery(int[] children, int[] parentRelations, int[] childRelations) {\n    StringBuilder builder = new StringBuilder();\n    builder.append(flatQuery(children, \"child_s\", CHILD_VALUE_PREFIX));\n    if (parentRelations == null) {\n      if (childRelations == null) {\n        builder.append(\" +parentchild_s:[* TO *]\");\n      } else {\n        builder.append(\" +parentchild_s:(\");\n        if (childRelations.length == 0) {\n          builder.append(\"match_nothing_value\");\n        } else {\n          for (int childRelation : childRelations) {\n            for (int i = 0; i < NUMBER_OF_PARENTS; i++) {\n              builder.append(parentChild(i, childRelation));\n              builder.append(\" \");\n            }\n          }\n          builder.deleteCharAt(builder.length() - 1);\n        }\n        builder.append(\")\");\n      }\n    } else {\n      builder.append(\" +parentchild_s:(\");\n      if (parentRelations.length == 0) {\n        builder.append(\"match_nothing_value\");\n      } else {\n        if (childRelations == null) {\n          for (int parentRelation : parentRelations) {\n              for (int i = 0; i < NUMBER_OF_CHILDREN; i++) {\n                builder.append(parentChild(parentRelation, i));\n                builder.append(\" \");\n              }\n          }\n        } else if (childRelations.length == 0) {\n          builder.append(\"match_nothing_value\");\n        } else {\n          for (int parentRelation : parentRelations) {\n\n              for (int childRelation : childRelations) {\n                builder.append(parentChild(parentRelation, childRelation));\n                builder.append(\" \");\n              }\n          }\n          builder.deleteCharAt(builder.length() - 1);\n        }\n      }\n      builder.append(\")\");\n    }\n    return builder.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"246314af59d76a47fccc31e9494eefee01ec9c00","date":1576657955,"type":4,"author":"Dawid Weiss","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/search/join/BlockJoinFacetRandomTest#childrenQuery(int[],int[],int[]).mjava","sourceNew":null,"sourceOld":"  private String childrenQuery(int[] children, int[] parentRelations, int[] childRelations) {\n    StringBuilder builder = new StringBuilder();\n    builder.append(flatQuery(children, \"child_s\", CHILD_VALUE_PREFIX));\n    if (parentRelations == null) {\n      if (childRelations == null) {\n        builder.append(\" +parentchild_s:[* TO *]\");\n      } else {\n        builder.append(\" +parentchild_s:(\");\n        if (childRelations.length == 0) {\n          builder.append(\"match_nothing_value\");\n        } else {\n          for (int childRelation : childRelations) {\n            for (int i = 0; i < NUMBER_OF_PARENTS; i++) {\n              builder.append(parentChild(i, childRelation));\n              builder.append(\" \");\n            }\n          }\n          builder.deleteCharAt(builder.length() - 1);\n        }\n        builder.append(\")\");\n      }\n    } else {\n      builder.append(\" +parentchild_s:(\");\n      if (parentRelations.length == 0) {\n        builder.append(\"match_nothing_value\");\n      } else {\n        if (childRelations == null) {\n          for (int parentRelation : parentRelations) {\n              for (int i = 0; i < NUMBER_OF_CHILDREN; i++) {\n                builder.append(parentChild(parentRelation, i));\n                builder.append(\" \");\n              }\n          }\n        } else if (childRelations.length == 0) {\n          builder.append(\"match_nothing_value\");\n        } else {\n          for (int parentRelation : parentRelations) {\n\n              for (int childRelation : childRelations) {\n                builder.append(parentChild(parentRelation, childRelation));\n                builder.append(\" \");\n              }\n          }\n          builder.deleteCharAt(builder.length() - 1);\n        }\n      }\n      builder.append(\")\");\n    }\n    return builder.toString();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"246314af59d76a47fccc31e9494eefee01ec9c00":["dbb4b815ac37f3938a2f7c18c2e7a5267ed50a1d","00a778ad8ad6c2c04607538d2f36fee001239eef"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"dbb4b815ac37f3938a2f7c18c2e7a5267ed50a1d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"00a778ad8ad6c2c04607538d2f36fee001239eef":["dbb4b815ac37f3938a2f7c18c2e7a5267ed50a1d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["00a778ad8ad6c2c04607538d2f36fee001239eef"]},"commit2Childs":{"246314af59d76a47fccc31e9494eefee01ec9c00":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["dbb4b815ac37f3938a2f7c18c2e7a5267ed50a1d"],"dbb4b815ac37f3938a2f7c18c2e7a5267ed50a1d":["246314af59d76a47fccc31e9494eefee01ec9c00","00a778ad8ad6c2c04607538d2f36fee001239eef"],"00a778ad8ad6c2c04607538d2f36fee001239eef":["246314af59d76a47fccc31e9494eefee01ec9c00","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["246314af59d76a47fccc31e9494eefee01ec9c00","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}