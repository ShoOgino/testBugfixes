{"path":"lucene/test-framework/src/java/org/apache/lucene/search/ShardSearchingTestBase.NodeState#NodeState(Random,int,int).mjava","commits":[{"id":"ea8db162694636ac3d19d83debf895a9e089f96a","date":1343856398,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/search/ShardSearchingTestBase.NodeState#NodeState(Random,int,int).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/search/ShardSearchingTestBase.NodeState#NodeState(Random,String,int,int).mjava","sourceNew":"    public NodeState(Random random, int nodeID, int numNodes) throws IOException {\n      myNodeID = nodeID;\n      dir = newFSDirectory(_TestUtil.getTempDir(\"ShardSearchingTestBase\"));\n      // TODO: set warmer\n      IndexWriterConfig iwc = new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random));\n      iwc.setOpenMode(IndexWriterConfig.OpenMode.CREATE);\n      if (VERBOSE) {\n        iwc.setInfoStream(new PrintStreamInfoStream(System.out));\n      }\n      writer = new IndexWriter(dir, iwc);\n      mgr = new SearcherManager(writer, true, null);\n      searchers = new SearcherLifetimeManager();\n\n      // Init w/ 0s... caller above will do initial\n      // \"broadcast\" by calling initSearcher:\n      currentNodeVersions = new long[numNodes];\n    }\n\n","sourceOld":"    public NodeState(Random random, String baseDir, int nodeID, int numNodes) throws IOException {\n      myNodeID = nodeID;\n      dir = newFSDirectory(new File(baseDir + \".\" + myNodeID));\n      // TODO: set warmer\n      writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n      mgr = new SearcherManager(writer, true, null);\n      searchers = new SearcherLifetimeManager();\n\n      // Init w/ 0s... caller above will do initial\n      // \"broadcast\" by calling initSearcher:\n      currentNodeVersions = new long[numNodes];\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8fd5be977c105554c6a7b68afcdbc511439723ab","date":1344115570,"type":1,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/search/ShardSearchingTestBase.NodeState#NodeState(Random,int,int).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/search/ShardSearchingTestBase.NodeState#NodeState(Random,String,int,int).mjava","sourceNew":"    public NodeState(Random random, int nodeID, int numNodes) throws IOException {\n      myNodeID = nodeID;\n      dir = newFSDirectory(_TestUtil.getTempDir(\"ShardSearchingTestBase\"));\n      // TODO: set warmer\n      IndexWriterConfig iwc = new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random));\n      iwc.setOpenMode(IndexWriterConfig.OpenMode.CREATE);\n      if (VERBOSE) {\n        iwc.setInfoStream(new PrintStreamInfoStream(System.out));\n      }\n      writer = new IndexWriter(dir, iwc);\n      mgr = new SearcherManager(writer, true, null);\n      searchers = new SearcherLifetimeManager();\n\n      // Init w/ 0s... caller above will do initial\n      // \"broadcast\" by calling initSearcher:\n      currentNodeVersions = new long[numNodes];\n    }\n\n","sourceOld":"    public NodeState(Random random, String baseDir, int nodeID, int numNodes) throws IOException {\n      myNodeID = nodeID;\n      dir = newFSDirectory(new File(baseDir + \".\" + myNodeID));\n      // TODO: set warmer\n      writer = new IndexWriter(dir, new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random)));\n      mgr = new SearcherManager(writer, true, null);\n      searchers = new SearcherLifetimeManager();\n\n      // Init w/ 0s... caller above will do initial\n      // \"broadcast\" by calling initSearcher:\n      currentNodeVersions = new long[numNodes];\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d6f074e73200c07d54f242d3880a8da5a35ff97b","date":1344507653,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/search/ShardSearchingTestBase.NodeState#NodeState(Random,int,int).mjava","pathOld":"/dev/null","sourceNew":"    public NodeState(Random random, int nodeID, int numNodes) throws IOException {\n      myNodeID = nodeID;\n      dir = newFSDirectory(_TestUtil.getTempDir(\"ShardSearchingTestBase\"));\n      // TODO: set warmer\n      IndexWriterConfig iwc = new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random));\n      iwc.setOpenMode(IndexWriterConfig.OpenMode.CREATE);\n      if (VERBOSE) {\n        iwc.setInfoStream(new PrintStreamInfoStream(System.out));\n      }\n      writer = new IndexWriter(dir, iwc);\n      mgr = new SearcherManager(writer, true, null);\n      searchers = new SearcherLifetimeManager();\n\n      // Init w/ 0s... caller above will do initial\n      // \"broadcast\" by calling initSearcher:\n      currentNodeVersions = new long[numNodes];\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6613659748fe4411a7dcf85266e55db1f95f7315","date":1392773913,"type":3,"author":"Benson Margulies","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/search/ShardSearchingTestBase.NodeState#NodeState(Random,int,int).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/search/ShardSearchingTestBase.NodeState#NodeState(Random,int,int).mjava","sourceNew":"    public NodeState(Random random, int nodeID, int numNodes) throws IOException {\n      myNodeID = nodeID;\n      dir = newFSDirectory(TestUtil.getTempDir(\"ShardSearchingTestBase\"));\n      // TODO: set warmer\n      IndexWriterConfig iwc = new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random));\n      iwc.setOpenMode(IndexWriterConfig.OpenMode.CREATE);\n      if (VERBOSE) {\n        iwc.setInfoStream(new PrintStreamInfoStream(System.out));\n      }\n      writer = new IndexWriter(dir, iwc);\n      mgr = new SearcherManager(writer, true, null);\n      searchers = new SearcherLifetimeManager();\n\n      // Init w/ 0s... caller above will do initial\n      // \"broadcast\" by calling initSearcher:\n      currentNodeVersions = new long[numNodes];\n    }\n\n","sourceOld":"    public NodeState(Random random, int nodeID, int numNodes) throws IOException {\n      myNodeID = nodeID;\n      dir = newFSDirectory(_TestUtil.getTempDir(\"ShardSearchingTestBase\"));\n      // TODO: set warmer\n      IndexWriterConfig iwc = new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random));\n      iwc.setOpenMode(IndexWriterConfig.OpenMode.CREATE);\n      if (VERBOSE) {\n        iwc.setInfoStream(new PrintStreamInfoStream(System.out));\n      }\n      writer = new IndexWriter(dir, iwc);\n      mgr = new SearcherManager(writer, true, null);\n      searchers = new SearcherLifetimeManager();\n\n      // Init w/ 0s... caller above will do initial\n      // \"broadcast\" by calling initSearcher:\n      currentNodeVersions = new long[numNodes];\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e1151ecb4798f5c31137aec032c241638018ed20","date":1394284367,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/search/ShardSearchingTestBase.NodeState#NodeState(Random,int,int).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/search/ShardSearchingTestBase.NodeState#NodeState(Random,int,int).mjava","sourceNew":"    public NodeState(Random random, int nodeID, int numNodes) throws IOException {\n      myNodeID = nodeID;\n      dir = newFSDirectory(TestUtil.getTempDir(\"ShardSearchingTestBase\"));\n      // TODO: set warmer\n      MockAnalyzer analyzer = new MockAnalyzer(random());\n      analyzer.setMaxTokenLength(TestUtil.nextInt(random(), 1, IndexWriter.MAX_TERM_LENGTH));\n      IndexWriterConfig iwc = new IndexWriterConfig(TEST_VERSION_CURRENT, analyzer);\n      iwc.setOpenMode(IndexWriterConfig.OpenMode.CREATE);\n      if (VERBOSE) {\n        iwc.setInfoStream(new PrintStreamInfoStream(System.out));\n      }\n      writer = new IndexWriter(dir, iwc);\n      mgr = new SearcherManager(writer, true, null);\n      searchers = new SearcherLifetimeManager();\n\n      // Init w/ 0s... caller above will do initial\n      // \"broadcast\" by calling initSearcher:\n      currentNodeVersions = new long[numNodes];\n    }\n\n","sourceOld":"    public NodeState(Random random, int nodeID, int numNodes) throws IOException {\n      myNodeID = nodeID;\n      dir = newFSDirectory(TestUtil.getTempDir(\"ShardSearchingTestBase\"));\n      // TODO: set warmer\n      IndexWriterConfig iwc = new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random));\n      iwc.setOpenMode(IndexWriterConfig.OpenMode.CREATE);\n      if (VERBOSE) {\n        iwc.setInfoStream(new PrintStreamInfoStream(System.out));\n      }\n      writer = new IndexWriter(dir, iwc);\n      mgr = new SearcherManager(writer, true, null);\n      searchers = new SearcherLifetimeManager();\n\n      // Init w/ 0s... caller above will do initial\n      // \"broadcast\" by calling initSearcher:\n      currentNodeVersions = new long[numNodes];\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a58bbbe1c866963764d3f15d3a26a6a85f6c6af4","date":1394564625,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/search/ShardSearchingTestBase.NodeState#NodeState(Random,int,int).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/search/ShardSearchingTestBase.NodeState#NodeState(Random,int,int).mjava","sourceNew":"    public NodeState(Random random, int nodeID, int numNodes) throws IOException {\n      myNodeID = nodeID;\n      dir = newFSDirectory(TestUtil.getTempDir(\"ShardSearchingTestBase\"));\n      // TODO: set warmer\n      MockAnalyzer analyzer = new MockAnalyzer(random());\n      analyzer.setMaxTokenLength(TestUtil.nextInt(random(), 1, IndexWriter.MAX_TERM_LENGTH));\n      IndexWriterConfig iwc = new IndexWriterConfig(TEST_VERSION_CURRENT, analyzer);\n      iwc.setOpenMode(IndexWriterConfig.OpenMode.CREATE);\n      if (VERBOSE) {\n        iwc.setInfoStream(new PrintStreamInfoStream(System.out));\n      }\n      writer = new IndexWriter(dir, iwc);\n      mgr = new SearcherManager(writer, true, null);\n      searchers = new SearcherLifetimeManager();\n\n      // Init w/ 0s... caller above will do initial\n      // \"broadcast\" by calling initSearcher:\n      currentNodeVersions = new long[numNodes];\n    }\n\n","sourceOld":"    public NodeState(Random random, int nodeID, int numNodes) throws IOException {\n      myNodeID = nodeID;\n      dir = newFSDirectory(TestUtil.getTempDir(\"ShardSearchingTestBase\"));\n      // TODO: set warmer\n      IndexWriterConfig iwc = new IndexWriterConfig(TEST_VERSION_CURRENT, new MockAnalyzer(random));\n      iwc.setOpenMode(IndexWriterConfig.OpenMode.CREATE);\n      if (VERBOSE) {\n        iwc.setInfoStream(new PrintStreamInfoStream(System.out));\n      }\n      writer = new IndexWriter(dir, iwc);\n      mgr = new SearcherManager(writer, true, null);\n      searchers = new SearcherLifetimeManager();\n\n      // Init w/ 0s... caller above will do initial\n      // \"broadcast\" by calling initSearcher:\n      currentNodeVersions = new long[numNodes];\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0d579490a72f2e6297eaa648940611234c57cf1","date":1395917140,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/search/ShardSearchingTestBase.NodeState#NodeState(Random,int,int).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/search/ShardSearchingTestBase.NodeState#NodeState(Random,int,int).mjava","sourceNew":"    public NodeState(Random random, int nodeID, int numNodes) throws IOException {\n      myNodeID = nodeID;\n      dir = newFSDirectory(TestUtil.createTempDir(\"ShardSearchingTestBase\"));\n      // TODO: set warmer\n      MockAnalyzer analyzer = new MockAnalyzer(random());\n      analyzer.setMaxTokenLength(TestUtil.nextInt(random(), 1, IndexWriter.MAX_TERM_LENGTH));\n      IndexWriterConfig iwc = new IndexWriterConfig(TEST_VERSION_CURRENT, analyzer);\n      iwc.setOpenMode(IndexWriterConfig.OpenMode.CREATE);\n      if (VERBOSE) {\n        iwc.setInfoStream(new PrintStreamInfoStream(System.out));\n      }\n      writer = new IndexWriter(dir, iwc);\n      mgr = new SearcherManager(writer, true, null);\n      searchers = new SearcherLifetimeManager();\n\n      // Init w/ 0s... caller above will do initial\n      // \"broadcast\" by calling initSearcher:\n      currentNodeVersions = new long[numNodes];\n    }\n\n","sourceOld":"    public NodeState(Random random, int nodeID, int numNodes) throws IOException {\n      myNodeID = nodeID;\n      dir = newFSDirectory(TestUtil.getTempDir(\"ShardSearchingTestBase\"));\n      // TODO: set warmer\n      MockAnalyzer analyzer = new MockAnalyzer(random());\n      analyzer.setMaxTokenLength(TestUtil.nextInt(random(), 1, IndexWriter.MAX_TERM_LENGTH));\n      IndexWriterConfig iwc = new IndexWriterConfig(TEST_VERSION_CURRENT, analyzer);\n      iwc.setOpenMode(IndexWriterConfig.OpenMode.CREATE);\n      if (VERBOSE) {\n        iwc.setInfoStream(new PrintStreamInfoStream(System.out));\n      }\n      writer = new IndexWriter(dir, iwc);\n      mgr = new SearcherManager(writer, true, null);\n      searchers = new SearcherLifetimeManager();\n\n      // Init w/ 0s... caller above will do initial\n      // \"broadcast\" by calling initSearcher:\n      currentNodeVersions = new long[numNodes];\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a9a24bae1e63c3bb5ff2fb47b0119240d840ee7c","date":1396633078,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/search/ShardSearchingTestBase.NodeState#NodeState(Random,int,int).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/search/ShardSearchingTestBase.NodeState#NodeState(Random,int,int).mjava","sourceNew":"    public NodeState(Random random, int nodeID, int numNodes) throws IOException {\n      myNodeID = nodeID;\n      dir = newFSDirectory(createTempDir(\"ShardSearchingTestBase\"));\n      // TODO: set warmer\n      MockAnalyzer analyzer = new MockAnalyzer(random());\n      analyzer.setMaxTokenLength(TestUtil.nextInt(random(), 1, IndexWriter.MAX_TERM_LENGTH));\n      IndexWriterConfig iwc = new IndexWriterConfig(TEST_VERSION_CURRENT, analyzer);\n      iwc.setOpenMode(IndexWriterConfig.OpenMode.CREATE);\n      if (VERBOSE) {\n        iwc.setInfoStream(new PrintStreamInfoStream(System.out));\n      }\n      writer = new IndexWriter(dir, iwc);\n      mgr = new SearcherManager(writer, true, null);\n      searchers = new SearcherLifetimeManager();\n\n      // Init w/ 0s... caller above will do initial\n      // \"broadcast\" by calling initSearcher:\n      currentNodeVersions = new long[numNodes];\n    }\n\n","sourceOld":"    public NodeState(Random random, int nodeID, int numNodes) throws IOException {\n      myNodeID = nodeID;\n      dir = newFSDirectory(TestUtil.createTempDir(\"ShardSearchingTestBase\"));\n      // TODO: set warmer\n      MockAnalyzer analyzer = new MockAnalyzer(random());\n      analyzer.setMaxTokenLength(TestUtil.nextInt(random(), 1, IndexWriter.MAX_TERM_LENGTH));\n      IndexWriterConfig iwc = new IndexWriterConfig(TEST_VERSION_CURRENT, analyzer);\n      iwc.setOpenMode(IndexWriterConfig.OpenMode.CREATE);\n      if (VERBOSE) {\n        iwc.setInfoStream(new PrintStreamInfoStream(System.out));\n      }\n      writer = new IndexWriter(dir, iwc);\n      mgr = new SearcherManager(writer, true, null);\n      searchers = new SearcherLifetimeManager();\n\n      // Init w/ 0s... caller above will do initial\n      // \"broadcast\" by calling initSearcher:\n      currentNodeVersions = new long[numNodes];\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2a0f5bb79c600763ffe7b8141df59a3169d31e48","date":1396689440,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/search/ShardSearchingTestBase.NodeState#NodeState(Random,int,int).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/search/ShardSearchingTestBase.NodeState#NodeState(Random,int,int).mjava","sourceNew":"    public NodeState(Random random, int nodeID, int numNodes) throws IOException {\n      myNodeID = nodeID;\n      dir = newFSDirectory(createTempDir(\"ShardSearchingTestBase\"));\n      // TODO: set warmer\n      MockAnalyzer analyzer = new MockAnalyzer(random());\n      analyzer.setMaxTokenLength(TestUtil.nextInt(random(), 1, IndexWriter.MAX_TERM_LENGTH));\n      IndexWriterConfig iwc = new IndexWriterConfig(TEST_VERSION_CURRENT, analyzer);\n      iwc.setOpenMode(IndexWriterConfig.OpenMode.CREATE);\n      if (VERBOSE) {\n        iwc.setInfoStream(new PrintStreamInfoStream(System.out));\n      }\n      writer = new IndexWriter(dir, iwc);\n      mgr = new SearcherManager(writer, true, null);\n      searchers = new SearcherLifetimeManager();\n\n      // Init w/ 0s... caller above will do initial\n      // \"broadcast\" by calling initSearcher:\n      currentNodeVersions = new long[numNodes];\n    }\n\n","sourceOld":"    public NodeState(Random random, int nodeID, int numNodes) throws IOException {\n      myNodeID = nodeID;\n      dir = newFSDirectory(TestUtil.getTempDir(\"ShardSearchingTestBase\"));\n      // TODO: set warmer\n      MockAnalyzer analyzer = new MockAnalyzer(random());\n      analyzer.setMaxTokenLength(TestUtil.nextInt(random(), 1, IndexWriter.MAX_TERM_LENGTH));\n      IndexWriterConfig iwc = new IndexWriterConfig(TEST_VERSION_CURRENT, analyzer);\n      iwc.setOpenMode(IndexWriterConfig.OpenMode.CREATE);\n      if (VERBOSE) {\n        iwc.setInfoStream(new PrintStreamInfoStream(System.out));\n      }\n      writer = new IndexWriter(dir, iwc);\n      mgr = new SearcherManager(writer, true, null);\n      searchers = new SearcherLifetimeManager();\n\n      // Init w/ 0s... caller above will do initial\n      // \"broadcast\" by calling initSearcher:\n      currentNodeVersions = new long[numNodes];\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d0ef034a4f10871667ae75181537775ddcf8ade4","date":1407610475,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/search/ShardSearchingTestBase.NodeState#NodeState(Random,int,int).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/search/ShardSearchingTestBase.NodeState#NodeState(Random,int,int).mjava","sourceNew":"    public NodeState(Random random, int nodeID, int numNodes) throws IOException {\n      myNodeID = nodeID;\n      dir = newFSDirectory(createTempDir(\"ShardSearchingTestBase\"));\n      // TODO: set warmer\n      MockAnalyzer analyzer = new MockAnalyzer(random());\n      analyzer.setMaxTokenLength(TestUtil.nextInt(random(), 1, IndexWriter.MAX_TERM_LENGTH));\n      IndexWriterConfig iwc = new IndexWriterConfig(analyzer);\n      iwc.setOpenMode(IndexWriterConfig.OpenMode.CREATE);\n      if (VERBOSE) {\n        iwc.setInfoStream(new PrintStreamInfoStream(System.out));\n      }\n      writer = new IndexWriter(dir, iwc);\n      mgr = new SearcherManager(writer, true, null);\n      searchers = new SearcherLifetimeManager();\n\n      // Init w/ 0s... caller above will do initial\n      // \"broadcast\" by calling initSearcher:\n      currentNodeVersions = new long[numNodes];\n    }\n\n","sourceOld":"    public NodeState(Random random, int nodeID, int numNodes) throws IOException {\n      myNodeID = nodeID;\n      dir = newFSDirectory(createTempDir(\"ShardSearchingTestBase\"));\n      // TODO: set warmer\n      MockAnalyzer analyzer = new MockAnalyzer(random());\n      analyzer.setMaxTokenLength(TestUtil.nextInt(random(), 1, IndexWriter.MAX_TERM_LENGTH));\n      IndexWriterConfig iwc = new IndexWriterConfig(TEST_VERSION_CURRENT, analyzer);\n      iwc.setOpenMode(IndexWriterConfig.OpenMode.CREATE);\n      if (VERBOSE) {\n        iwc.setInfoStream(new PrintStreamInfoStream(System.out));\n      }\n      writer = new IndexWriter(dir, iwc);\n      mgr = new SearcherManager(writer, true, null);\n      searchers = new SearcherLifetimeManager();\n\n      // Init w/ 0s... caller above will do initial\n      // \"broadcast\" by calling initSearcher:\n      currentNodeVersions = new long[numNodes];\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7b516a692d03225c8f0e81a13ceed2dc32bb457d","date":1453411951,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/search/ShardSearchingTestBase.NodeState#NodeState(Random,int,int).mjava","pathOld":"lucene/test-framework/src/java/org/apache/lucene/search/ShardSearchingTestBase.NodeState#NodeState(Random,int,int).mjava","sourceNew":"    public NodeState(Random random, int nodeID, int numNodes) throws IOException {\n      myNodeID = nodeID;\n      dir = newFSDirectory(createTempDir(\"ShardSearchingTestBase\"));\n      // TODO: set warmer\n      MockAnalyzer analyzer = new MockAnalyzer(random());\n      analyzer.setMaxTokenLength(TestUtil.nextInt(random(), 1, IndexWriter.MAX_TERM_LENGTH));\n      IndexWriterConfig iwc = new IndexWriterConfig(analyzer);\n      iwc.setOpenMode(IndexWriterConfig.OpenMode.CREATE);\n      if (VERBOSE) {\n        iwc.setInfoStream(new PrintStreamInfoStream(System.out));\n      }\n      writer = new IndexWriter(dir, iwc);\n      mgr = new SearcherManager(writer, null);\n      searchers = new SearcherLifetimeManager();\n\n      // Init w/ 0s... caller above will do initial\n      // \"broadcast\" by calling initSearcher:\n      currentNodeVersions = new long[numNodes];\n    }\n\n","sourceOld":"    public NodeState(Random random, int nodeID, int numNodes) throws IOException {\n      myNodeID = nodeID;\n      dir = newFSDirectory(createTempDir(\"ShardSearchingTestBase\"));\n      // TODO: set warmer\n      MockAnalyzer analyzer = new MockAnalyzer(random());\n      analyzer.setMaxTokenLength(TestUtil.nextInt(random(), 1, IndexWriter.MAX_TERM_LENGTH));\n      IndexWriterConfig iwc = new IndexWriterConfig(analyzer);\n      iwc.setOpenMode(IndexWriterConfig.OpenMode.CREATE);\n      if (VERBOSE) {\n        iwc.setInfoStream(new PrintStreamInfoStream(System.out));\n      }\n      writer = new IndexWriter(dir, iwc);\n      mgr = new SearcherManager(writer, true, null);\n      searchers = new SearcherLifetimeManager();\n\n      // Init w/ 0s... caller above will do initial\n      // \"broadcast\" by calling initSearcher:\n      currentNodeVersions = new long[numNodes];\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"2a0f5bb79c600763ffe7b8141df59a3169d31e48":["e1151ecb4798f5c31137aec032c241638018ed20","a9a24bae1e63c3bb5ff2fb47b0119240d840ee7c"],"a58bbbe1c866963764d3f15d3a26a6a85f6c6af4":["6613659748fe4411a7dcf85266e55db1f95f7315","e1151ecb4798f5c31137aec032c241638018ed20"],"6613659748fe4411a7dcf85266e55db1f95f7315":["ea8db162694636ac3d19d83debf895a9e089f96a"],"7b516a692d03225c8f0e81a13ceed2dc32bb457d":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"8fd5be977c105554c6a7b68afcdbc511439723ab":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ea8db162694636ac3d19d83debf895a9e089f96a"],"d0d579490a72f2e6297eaa648940611234c57cf1":["e1151ecb4798f5c31137aec032c241638018ed20"],"e1151ecb4798f5c31137aec032c241638018ed20":["6613659748fe4411a7dcf85266e55db1f95f7315"],"a9a24bae1e63c3bb5ff2fb47b0119240d840ee7c":["d0d579490a72f2e6297eaa648940611234c57cf1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d0ef034a4f10871667ae75181537775ddcf8ade4":["2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"d6f074e73200c07d54f242d3880a8da5a35ff97b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ea8db162694636ac3d19d83debf895a9e089f96a"],"ea8db162694636ac3d19d83debf895a9e089f96a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7b516a692d03225c8f0e81a13ceed2dc32bb457d"]},"commit2Childs":{"2a0f5bb79c600763ffe7b8141df59a3169d31e48":["d0ef034a4f10871667ae75181537775ddcf8ade4"],"a58bbbe1c866963764d3f15d3a26a6a85f6c6af4":[],"6613659748fe4411a7dcf85266e55db1f95f7315":["a58bbbe1c866963764d3f15d3a26a6a85f6c6af4","e1151ecb4798f5c31137aec032c241638018ed20"],"7b516a692d03225c8f0e81a13ceed2dc32bb457d":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"8fd5be977c105554c6a7b68afcdbc511439723ab":[],"d0d579490a72f2e6297eaa648940611234c57cf1":["a9a24bae1e63c3bb5ff2fb47b0119240d840ee7c"],"e1151ecb4798f5c31137aec032c241638018ed20":["2a0f5bb79c600763ffe7b8141df59a3169d31e48","a58bbbe1c866963764d3f15d3a26a6a85f6c6af4","d0d579490a72f2e6297eaa648940611234c57cf1"],"a9a24bae1e63c3bb5ff2fb47b0119240d840ee7c":["2a0f5bb79c600763ffe7b8141df59a3169d31e48"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8fd5be977c105554c6a7b68afcdbc511439723ab","d6f074e73200c07d54f242d3880a8da5a35ff97b","ea8db162694636ac3d19d83debf895a9e089f96a"],"d0ef034a4f10871667ae75181537775ddcf8ade4":["7b516a692d03225c8f0e81a13ceed2dc32bb457d"],"d6f074e73200c07d54f242d3880a8da5a35ff97b":[],"ea8db162694636ac3d19d83debf895a9e089f96a":["6613659748fe4411a7dcf85266e55db1f95f7315","8fd5be977c105554c6a7b68afcdbc511439723ab","d6f074e73200c07d54f242d3880a8da5a35ff97b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a58bbbe1c866963764d3f15d3a26a6a85f6c6af4","8fd5be977c105554c6a7b68afcdbc511439723ab","d6f074e73200c07d54f242d3880a8da5a35ff97b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}