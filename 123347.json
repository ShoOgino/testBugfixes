{"path":"solr/test-framework/src/java/org/apache/solr/cloud/CloudInspectUtil#checkIfDiffIsLegal(SolrDocumentList,SolrDocumentList,String,String,Set[String],Set[String]).mjava","commits":[{"id":"4339eef0c1b12030c8590187e652cd1cd0a1f3cb","date":1397833225,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/CloudInspectUtil#checkIfDiffIsLegal(SolrDocumentList,SolrDocumentList,String,String,Set[String],Set[String]).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * When a and b are known to be different, this method tells if the difference\n   * is legal given the adds and deletes that failed from b.\n   * \n   * @param a first list of docs\n   * @param b second list of docs\n   * @param aName label for first list of docs\n   * @param bName  label for second list of docs\n   * @param bAddFails null or list of the ids of adds that failed for b\n   * @param bDeleteFails null or list of the ids of deletes that failed for b\n   * @return true if the difference in a and b is legal\n   */\n  public static boolean checkIfDiffIsLegal(SolrDocumentList a,\n      SolrDocumentList b, String aName, String bName, Set<String> bAddFails,\n      Set<String> bDeleteFails) {\n    boolean legal = true;\n    \n    Set<Map> setA = new HashSet<>();\n    for (SolrDocument sdoc : a) {\n      setA.add(new HashMap(sdoc));\n    }\n    \n    Set<Map> setB = new HashSet<>();\n    for (SolrDocument sdoc : b) {\n      setB.add(new HashMap(sdoc));\n    }\n    \n    Set<Map> onlyInA = new HashSet<>(setA);\n    onlyInA.removeAll(setB);\n    Set<Map> onlyInB = new HashSet<>(setB);\n    onlyInB.removeAll(setA);\n    \n    if (onlyInA.size() == 0 && onlyInB.size() == 0) {\n      throw new IllegalArgumentException(\"No difference between list a and b\");\n    }\n    \n    System.err.println(\"###### Only in \" + aName + \": \" + onlyInA);\n    System.err.println(\"###### Only in \" + bName + \": \" + onlyInB);\n    \n    for (Map doc : onlyInA) {\n      if (bAddFails == null || !bAddFails.contains(doc.get(\"id\"))) {\n        legal = false;\n        // System.err.println(\"###### Only in \" + aName + \": \" + doc.get(\"id\"));\n      } else {\n        System.err.println(\"###### Only in \" + aName + \": \" + doc.get(\"id\")\n            + \", but this is expected because we found an add fail for \"\n            + doc.get(\"id\"));\n      }\n    }\n    \n    for (Map doc : onlyInB) {\n      if (bDeleteFails == null || !bDeleteFails.contains(doc.get(\"id\"))) {\n        legal = false;\n        // System.err.println(\"###### Only in \" + bName + \": \" + doc.get(\"id\"));\n      } else {\n        System.err.println(\"###### Only in \" + bName + \": \" + doc.get(\"id\")\n            + \", but this is expected because we found a delete fail for \"\n            + doc.get(\"id\"));\n      }\n    }\n    \n    return legal;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6809a6d7924df2c864d6a5863944aff9dfeb372c","date":1591826750,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/test-framework/src/java/org/apache/solr/cloud/CloudInspectUtil#checkIfDiffIsLegal(SolrDocumentList,SolrDocumentList,String,String,Set[String],Set[String]).mjava","pathOld":"solr/test-framework/src/java/org/apache/solr/cloud/CloudInspectUtil#checkIfDiffIsLegal(SolrDocumentList,SolrDocumentList,String,String,Set[String],Set[String]).mjava","sourceNew":"  /**\n   * When a and b are known to be different, this method tells if the difference\n   * is legal given the adds and deletes that failed from b.\n   * \n   * @param a first list of docs\n   * @param b second list of docs\n   * @param aName label for first list of docs\n   * @param bName  label for second list of docs\n   * @param bAddFails null or list of the ids of adds that failed for b\n   * @param bDeleteFails null or list of the ids of deletes that failed for b\n   * @return true if the difference in a and b is legal\n   */\n  @SuppressWarnings({\"unchecked\"})\n  public static boolean checkIfDiffIsLegal(SolrDocumentList a,\n      SolrDocumentList b, String aName, String bName, Set<String> bAddFails,\n      Set<String> bDeleteFails) {\n    boolean legal = true;\n    \n    @SuppressWarnings({\"rawtypes\"})\n    Set<Map> setA = new HashSet<>();\n    for (SolrDocument sdoc : a) {\n      setA.add(new HashMap<>(sdoc));\n    }\n    \n    @SuppressWarnings({\"rawtypes\"})\n    Set<Map> setB = new HashSet<>();\n    for (SolrDocument sdoc : b) {\n      setB.add(new HashMap<>(sdoc));\n    }\n    \n    @SuppressWarnings({\"rawtypes\"})\n    Set<Map> onlyInA = new HashSet<>(setA);\n    onlyInA.removeAll(setB);\n    @SuppressWarnings({\"rawtypes\"})\n    Set<Map> onlyInB = new HashSet<>(setB);\n    onlyInB.removeAll(setA);\n    \n    if (onlyInA.size() == 0 && onlyInB.size() == 0) {\n      throw new IllegalArgumentException(\"No difference between list a and b\");\n    }\n    \n    System.err.println(\"###### Only in \" + aName + \": \" + onlyInA);\n    System.err.println(\"###### Only in \" + bName + \": \" + onlyInB);\n    \n    for (@SuppressWarnings({\"rawtypes\"})Map doc : onlyInA) {\n      if (bAddFails == null || !bAddFails.contains(doc.get(\"id\"))) {\n        legal = false;\n        // System.err.println(\"###### Only in \" + aName + \": \" + doc.get(\"id\"));\n      } else {\n        System.err.println(\"###### Only in \" + aName + \": \" + doc.get(\"id\")\n            + \", but this is expected because we found an add fail for \"\n            + doc.get(\"id\"));\n      }\n    }\n    \n    for (@SuppressWarnings({\"rawtypes\"})Map doc : onlyInB) {\n      if (bDeleteFails == null || !bDeleteFails.contains(doc.get(\"id\"))) {\n        legal = false;\n        // System.err.println(\"###### Only in \" + bName + \": \" + doc.get(\"id\"));\n      } else {\n        System.err.println(\"###### Only in \" + bName + \": \" + doc.get(\"id\")\n            + \", but this is expected because we found a delete fail for \"\n            + doc.get(\"id\"));\n      }\n    }\n    \n    return legal;\n  }\n\n","sourceOld":"  /**\n   * When a and b are known to be different, this method tells if the difference\n   * is legal given the adds and deletes that failed from b.\n   * \n   * @param a first list of docs\n   * @param b second list of docs\n   * @param aName label for first list of docs\n   * @param bName  label for second list of docs\n   * @param bAddFails null or list of the ids of adds that failed for b\n   * @param bDeleteFails null or list of the ids of deletes that failed for b\n   * @return true if the difference in a and b is legal\n   */\n  public static boolean checkIfDiffIsLegal(SolrDocumentList a,\n      SolrDocumentList b, String aName, String bName, Set<String> bAddFails,\n      Set<String> bDeleteFails) {\n    boolean legal = true;\n    \n    Set<Map> setA = new HashSet<>();\n    for (SolrDocument sdoc : a) {\n      setA.add(new HashMap(sdoc));\n    }\n    \n    Set<Map> setB = new HashSet<>();\n    for (SolrDocument sdoc : b) {\n      setB.add(new HashMap(sdoc));\n    }\n    \n    Set<Map> onlyInA = new HashSet<>(setA);\n    onlyInA.removeAll(setB);\n    Set<Map> onlyInB = new HashSet<>(setB);\n    onlyInB.removeAll(setA);\n    \n    if (onlyInA.size() == 0 && onlyInB.size() == 0) {\n      throw new IllegalArgumentException(\"No difference between list a and b\");\n    }\n    \n    System.err.println(\"###### Only in \" + aName + \": \" + onlyInA);\n    System.err.println(\"###### Only in \" + bName + \": \" + onlyInB);\n    \n    for (Map doc : onlyInA) {\n      if (bAddFails == null || !bAddFails.contains(doc.get(\"id\"))) {\n        legal = false;\n        // System.err.println(\"###### Only in \" + aName + \": \" + doc.get(\"id\"));\n      } else {\n        System.err.println(\"###### Only in \" + aName + \": \" + doc.get(\"id\")\n            + \", but this is expected because we found an add fail for \"\n            + doc.get(\"id\"));\n      }\n    }\n    \n    for (Map doc : onlyInB) {\n      if (bDeleteFails == null || !bDeleteFails.contains(doc.get(\"id\"))) {\n        legal = false;\n        // System.err.println(\"###### Only in \" + bName + \": \" + doc.get(\"id\"));\n      } else {\n        System.err.println(\"###### Only in \" + bName + \": \" + doc.get(\"id\")\n            + \", but this is expected because we found a delete fail for \"\n            + doc.get(\"id\"));\n      }\n    }\n    \n    return legal;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"6809a6d7924df2c864d6a5863944aff9dfeb372c":["4339eef0c1b12030c8590187e652cd1cd0a1f3cb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4339eef0c1b12030c8590187e652cd1cd0a1f3cb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["6809a6d7924df2c864d6a5863944aff9dfeb372c"]},"commit2Childs":{"6809a6d7924df2c864d6a5863944aff9dfeb372c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4339eef0c1b12030c8590187e652cd1cd0a1f3cb"],"4339eef0c1b12030c8590187e652cd1cd0a1f3cb":["6809a6d7924df2c864d6a5863944aff9dfeb372c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}