{"path":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/prefix/tree/SpatialPrefixTreeTest#testBadPrefixTreePrune().mjava","commits":[{"id":"112d77ac8d3e10a362516ad834c9a11d35c94234","date":1456784319,"type":1,"author":"nknize","isMerge":false,"pathNew":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/prefix/tree/SpatialPrefixTreeTest#testBadPrefixTreePrune().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/prefix/tree/SpatialPrefixTreeTest#testBadPrefixTreePrune().mjava","sourceNew":"  /**\n   * A PrefixTree pruning optimization gone bad, applicable when optimize=true.\n   * See <a href=\"https://issues.apache.org/jira/browse/LUCENE-4770\">LUCENE-4770</a>.\n   */\n  @Test\n  public void testBadPrefixTreePrune() throws Exception {\n\n    trie = new QuadPrefixTree(ctx, 12);\n    TermQueryPrefixTreeStrategy strategy = new TermQueryPrefixTreeStrategy(trie, \"geo\");\n    Document doc = new Document();\n    doc.add(new TextField(\"id\", \"1\", Store.YES));\n\n    Shape area = ctx.makeRectangle(-122.82, -122.78, 48.54, 48.56);\n\n    Field[] fields = strategy.createIndexableFields(area, 0.025);\n    for (Field field : fields) {\n      doc.add(field);\n    }\n    addDocument(doc);\n\n    Point upperleft = ctx.makePoint(-122.88, 48.54);\n    Point lowerright = ctx.makePoint(-122.82, 48.62);\n\n    Query query = strategy.makeQuery(new SpatialArgs(SpatialOperation.Intersects, ctx.makeRectangle(upperleft, lowerright)));\n\n    commit();\n\n    TopDocs search = indexSearcher.search(query, 10);\n    ScoreDoc[] scoreDocs = search.scoreDocs;\n    for (ScoreDoc scoreDoc : scoreDocs) {\n      System.out.println(indexSearcher.doc(scoreDoc.doc));\n    }\n\n    assertEquals(1, search.totalHits);\n  }\n\n","sourceOld":"  /**\n   * A PrefixTree pruning optimization gone bad, applicable when optimize=true.\n   * See <a href=\"https://issues.apache.org/jira/browse/LUCENE-4770\">LUCENE-4770</a>.\n   */\n  @Test\n  public void testBadPrefixTreePrune() throws Exception {\n\n    trie = new QuadPrefixTree(ctx, 12);\n    TermQueryPrefixTreeStrategy strategy = new TermQueryPrefixTreeStrategy(trie, \"geo\");\n    Document doc = new Document();\n    doc.add(new TextField(\"id\", \"1\", Store.YES));\n\n    Shape area = ctx.makeRectangle(-122.82, -122.78, 48.54, 48.56);\n\n    Field[] fields = strategy.createIndexableFields(area, 0.025);\n    for (Field field : fields) {\n      doc.add(field);\n    }\n    addDocument(doc);\n\n    Point upperleft = ctx.makePoint(-122.88, 48.54);\n    Point lowerright = ctx.makePoint(-122.82, 48.62);\n\n    Query query = strategy.makeQuery(new SpatialArgs(SpatialOperation.Intersects, ctx.makeRectangle(upperleft, lowerright)));\n\n    commit();\n\n    TopDocs search = indexSearcher.search(query, 10);\n    ScoreDoc[] scoreDocs = search.scoreDocs;\n    for (ScoreDoc scoreDoc : scoreDocs) {\n      System.out.println(indexSearcher.doc(scoreDoc.doc));\n    }\n\n    assertEquals(1, search.totalHits);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"af2638813028b254a88b418ebeafb541afb49653","date":1456804822,"type":1,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/prefix/tree/SpatialPrefixTreeTest#testBadPrefixTreePrune().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/prefix/tree/SpatialPrefixTreeTest#testBadPrefixTreePrune().mjava","sourceNew":"  /**\n   * A PrefixTree pruning optimization gone bad, applicable when optimize=true.\n   * See <a href=\"https://issues.apache.org/jira/browse/LUCENE-4770\">LUCENE-4770</a>.\n   */\n  @Test\n  public void testBadPrefixTreePrune() throws Exception {\n\n    trie = new QuadPrefixTree(ctx, 12);\n    TermQueryPrefixTreeStrategy strategy = new TermQueryPrefixTreeStrategy(trie, \"geo\");\n    Document doc = new Document();\n    doc.add(new TextField(\"id\", \"1\", Store.YES));\n\n    Shape area = ctx.makeRectangle(-122.82, -122.78, 48.54, 48.56);\n\n    Field[] fields = strategy.createIndexableFields(area, 0.025);\n    for (Field field : fields) {\n      doc.add(field);\n    }\n    addDocument(doc);\n\n    Point upperleft = ctx.makePoint(-122.88, 48.54);\n    Point lowerright = ctx.makePoint(-122.82, 48.62);\n\n    Query query = strategy.makeQuery(new SpatialArgs(SpatialOperation.Intersects, ctx.makeRectangle(upperleft, lowerright)));\n\n    commit();\n\n    TopDocs search = indexSearcher.search(query, 10);\n    ScoreDoc[] scoreDocs = search.scoreDocs;\n    for (ScoreDoc scoreDoc : scoreDocs) {\n      System.out.println(indexSearcher.doc(scoreDoc.doc));\n    }\n\n    assertEquals(1, search.totalHits);\n  }\n\n","sourceOld":"  /**\n   * A PrefixTree pruning optimization gone bad, applicable when optimize=true.\n   * See <a href=\"https://issues.apache.org/jira/browse/LUCENE-4770\">LUCENE-4770</a>.\n   */\n  @Test\n  public void testBadPrefixTreePrune() throws Exception {\n\n    trie = new QuadPrefixTree(ctx, 12);\n    TermQueryPrefixTreeStrategy strategy = new TermQueryPrefixTreeStrategy(trie, \"geo\");\n    Document doc = new Document();\n    doc.add(new TextField(\"id\", \"1\", Store.YES));\n\n    Shape area = ctx.makeRectangle(-122.82, -122.78, 48.54, 48.56);\n\n    Field[] fields = strategy.createIndexableFields(area, 0.025);\n    for (Field field : fields) {\n      doc.add(field);\n    }\n    addDocument(doc);\n\n    Point upperleft = ctx.makePoint(-122.88, 48.54);\n    Point lowerright = ctx.makePoint(-122.82, 48.62);\n\n    Query query = strategy.makeQuery(new SpatialArgs(SpatialOperation.Intersects, ctx.makeRectangle(upperleft, lowerright)));\n\n    commit();\n\n    TopDocs search = indexSearcher.search(query, 10);\n    ScoreDoc[] scoreDocs = search.scoreDocs;\n    for (ScoreDoc scoreDoc : scoreDocs) {\n      System.out.println(indexSearcher.doc(scoreDoc.doc));\n    }\n\n    assertEquals(1, search.totalHits);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"83788ad129a5154d5c6562c4e8ce3db48793aada","date":1532961485,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/prefix/tree/SpatialPrefixTreeTest#testBadPrefixTreePrune().mjava","pathOld":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/prefix/tree/SpatialPrefixTreeTest#testBadPrefixTreePrune().mjava","sourceNew":"  /**\n   * A PrefixTree pruning optimization gone bad, applicable when optimize=true.\n   * See <a href=\"https://issues.apache.org/jira/browse/LUCENE-4770\">LUCENE-4770</a>.\n   */\n  @Test\n  public void testBadPrefixTreePrune() throws Exception {\n\n    trie = new QuadPrefixTree(ctx, 12);\n    TermQueryPrefixTreeStrategy strategy = new TermQueryPrefixTreeStrategy(trie, \"geo\");\n    Document doc = new Document();\n    doc.add(new TextField(\"id\", \"1\", Store.YES));\n\n    Shape area = ctx.makeRectangle(-122.82, -122.78, 48.54, 48.56);\n\n    Field[] fields = strategy.createIndexableFields(area, 0.025);\n    for (Field field : fields) {\n      doc.add(field);\n    }\n    addDocument(doc);\n\n    Point upperleft = ctx.makePoint(-122.88, 48.54);\n    Point lowerright = ctx.makePoint(-122.82, 48.62);\n\n    Query query = strategy.makeQuery(new SpatialArgs(SpatialOperation.Intersects, ctx.makeRectangle(upperleft, lowerright)));\n\n    commit();\n\n    TopDocs search = indexSearcher.search(query, 10);\n    ScoreDoc[] scoreDocs = search.scoreDocs;\n    for (ScoreDoc scoreDoc : scoreDocs) {\n      System.out.println(indexSearcher.doc(scoreDoc.doc));\n    }\n\n    assertEquals(1, search.totalHits.value);\n  }\n\n","sourceOld":"  /**\n   * A PrefixTree pruning optimization gone bad, applicable when optimize=true.\n   * See <a href=\"https://issues.apache.org/jira/browse/LUCENE-4770\">LUCENE-4770</a>.\n   */\n  @Test\n  public void testBadPrefixTreePrune() throws Exception {\n\n    trie = new QuadPrefixTree(ctx, 12);\n    TermQueryPrefixTreeStrategy strategy = new TermQueryPrefixTreeStrategy(trie, \"geo\");\n    Document doc = new Document();\n    doc.add(new TextField(\"id\", \"1\", Store.YES));\n\n    Shape area = ctx.makeRectangle(-122.82, -122.78, 48.54, 48.56);\n\n    Field[] fields = strategy.createIndexableFields(area, 0.025);\n    for (Field field : fields) {\n      doc.add(field);\n    }\n    addDocument(doc);\n\n    Point upperleft = ctx.makePoint(-122.88, 48.54);\n    Point lowerright = ctx.makePoint(-122.82, 48.62);\n\n    Query query = strategy.makeQuery(new SpatialArgs(SpatialOperation.Intersects, ctx.makeRectangle(upperleft, lowerright)));\n\n    commit();\n\n    TopDocs search = indexSearcher.search(query, 10);\n    ScoreDoc[] scoreDocs = search.scoreDocs;\n    for (ScoreDoc scoreDoc : scoreDocs) {\n      System.out.println(indexSearcher.doc(scoreDoc.doc));\n    }\n\n    assertEquals(1, search.totalHits);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9","date":1574619880,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/prefix/tree/SpatialPrefixTreeTest#testBadPrefixTreePrune().mjava","pathOld":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/prefix/tree/SpatialPrefixTreeTest#testBadPrefixTreePrune().mjava","sourceNew":"  /**\n   * A PrefixTree pruning optimization gone bad, applicable when optimize=true.\n   * See <a href=\"https://issues.apache.org/jira/browse/LUCENE-4770\">LUCENE-4770</a>.\n   */\n  @SuppressWarnings(\"deprecation\")\n  @Test\n  public void testBadPrefixTreePrune() throws Exception {\n\n    trie = new QuadPrefixTree(ctx, 12);\n    TermQueryPrefixTreeStrategy strategy = new TermQueryPrefixTreeStrategy(trie, \"geo\");\n    Document doc = new Document();\n    doc.add(new TextField(\"id\", \"1\", Store.YES));\n\n    Shape area = ctx.makeRectangle(-122.82, -122.78, 48.54, 48.56);\n\n    Field[] fields = strategy.createIndexableFields(area, 0.025);\n    for (Field field : fields) {\n      doc.add(field);\n    }\n    addDocument(doc);\n\n    Point upperleft = ctx.makePoint(-122.88, 48.54);\n    Point lowerright = ctx.makePoint(-122.82, 48.62);\n\n    Query query = strategy.makeQuery(new SpatialArgs(SpatialOperation.Intersects, ctx.makeRectangle(upperleft, lowerright)));\n\n    commit();\n\n    TopDocs search = indexSearcher.search(query, 10);\n    ScoreDoc[] scoreDocs = search.scoreDocs;\n    for (ScoreDoc scoreDoc : scoreDocs) {\n      System.out.println(indexSearcher.doc(scoreDoc.doc));\n    }\n\n    assertEquals(1, search.totalHits.value);\n  }\n\n","sourceOld":"  /**\n   * A PrefixTree pruning optimization gone bad, applicable when optimize=true.\n   * See <a href=\"https://issues.apache.org/jira/browse/LUCENE-4770\">LUCENE-4770</a>.\n   */\n  @Test\n  public void testBadPrefixTreePrune() throws Exception {\n\n    trie = new QuadPrefixTree(ctx, 12);\n    TermQueryPrefixTreeStrategy strategy = new TermQueryPrefixTreeStrategy(trie, \"geo\");\n    Document doc = new Document();\n    doc.add(new TextField(\"id\", \"1\", Store.YES));\n\n    Shape area = ctx.makeRectangle(-122.82, -122.78, 48.54, 48.56);\n\n    Field[] fields = strategy.createIndexableFields(area, 0.025);\n    for (Field field : fields) {\n      doc.add(field);\n    }\n    addDocument(doc);\n\n    Point upperleft = ctx.makePoint(-122.88, 48.54);\n    Point lowerright = ctx.makePoint(-122.82, 48.62);\n\n    Query query = strategy.makeQuery(new SpatialArgs(SpatialOperation.Intersects, ctx.makeRectangle(upperleft, lowerright)));\n\n    commit();\n\n    TopDocs search = indexSearcher.search(query, 10);\n    ScoreDoc[] scoreDocs = search.scoreDocs;\n    for (ScoreDoc scoreDoc : scoreDocs) {\n      System.out.println(indexSearcher.doc(scoreDoc.doc));\n    }\n\n    assertEquals(1, search.totalHits.value);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bb9c3baacabd473e8ecd6c4948aabacead49b88e","date":1574700980,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/prefix/tree/SpatialPrefixTreeTest#testBadPrefixTreePrune().mjava","pathOld":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/prefix/tree/SpatialPrefixTreeTest#testBadPrefixTreePrune().mjava","sourceNew":"  /**\n   * A PrefixTree pruning optimization gone bad, applicable when optimize=true.\n   * See <a href=\"https://issues.apache.org/jira/browse/LUCENE-4770\">LUCENE-4770</a>.\n   */\n  @Test\n  public void testBadPrefixTreePrune() throws Exception {\n\n    trie = new QuadPrefixTree(ctx, 12);\n    TermQueryPrefixTreeStrategy strategy = new TermQueryPrefixTreeStrategy(trie, \"geo\");\n    Document doc = new Document();\n    doc.add(new TextField(\"id\", \"1\", Store.YES));\n\n    Shape area = ctx.makeRectangle(-122.82, -122.78, 48.54, 48.56);\n\n    Field[] fields = strategy.createIndexableFields(area, 0.025);\n    for (Field field : fields) {\n      doc.add(field);\n    }\n    addDocument(doc);\n\n    Point upperleft = ctx.makePoint(-122.88, 48.54);\n    Point lowerright = ctx.makePoint(-122.82, 48.62);\n\n    Query query = strategy.makeQuery(new SpatialArgs(SpatialOperation.Intersects, ctx.makeRectangle(upperleft, lowerright)));\n\n    commit();\n\n    TopDocs search = indexSearcher.search(query, 10);\n    ScoreDoc[] scoreDocs = search.scoreDocs;\n    for (ScoreDoc scoreDoc : scoreDocs) {\n      System.out.println(indexSearcher.doc(scoreDoc.doc));\n    }\n\n    assertEquals(1, search.totalHits.value);\n  }\n\n","sourceOld":"  /**\n   * A PrefixTree pruning optimization gone bad, applicable when optimize=true.\n   * See <a href=\"https://issues.apache.org/jira/browse/LUCENE-4770\">LUCENE-4770</a>.\n   */\n  @SuppressWarnings(\"deprecation\")\n  @Test\n  public void testBadPrefixTreePrune() throws Exception {\n\n    trie = new QuadPrefixTree(ctx, 12);\n    TermQueryPrefixTreeStrategy strategy = new TermQueryPrefixTreeStrategy(trie, \"geo\");\n    Document doc = new Document();\n    doc.add(new TextField(\"id\", \"1\", Store.YES));\n\n    Shape area = ctx.makeRectangle(-122.82, -122.78, 48.54, 48.56);\n\n    Field[] fields = strategy.createIndexableFields(area, 0.025);\n    for (Field field : fields) {\n      doc.add(field);\n    }\n    addDocument(doc);\n\n    Point upperleft = ctx.makePoint(-122.88, 48.54);\n    Point lowerright = ctx.makePoint(-122.82, 48.62);\n\n    Query query = strategy.makeQuery(new SpatialArgs(SpatialOperation.Intersects, ctx.makeRectangle(upperleft, lowerright)));\n\n    commit();\n\n    TopDocs search = indexSearcher.search(query, 10);\n    ScoreDoc[] scoreDocs = search.scoreDocs;\n    for (ScoreDoc scoreDoc : scoreDocs) {\n      System.out.println(indexSearcher.doc(scoreDoc.doc));\n    }\n\n    assertEquals(1, search.totalHits.value);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"af2638813028b254a88b418ebeafb541afb49653":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","112d77ac8d3e10a362516ad834c9a11d35c94234"],"a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9":["83788ad129a5154d5c6562c4e8ce3db48793aada"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bb9c3baacabd473e8ecd6c4948aabacead49b88e":["a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9"],"112d77ac8d3e10a362516ad834c9a11d35c94234":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"83788ad129a5154d5c6562c4e8ce3db48793aada":["af2638813028b254a88b418ebeafb541afb49653"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["bb9c3baacabd473e8ecd6c4948aabacead49b88e"]},"commit2Childs":{"af2638813028b254a88b418ebeafb541afb49653":["83788ad129a5154d5c6562c4e8ce3db48793aada"],"a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9":["bb9c3baacabd473e8ecd6c4948aabacead49b88e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["af2638813028b254a88b418ebeafb541afb49653","112d77ac8d3e10a362516ad834c9a11d35c94234"],"112d77ac8d3e10a362516ad834c9a11d35c94234":["af2638813028b254a88b418ebeafb541afb49653"],"bb9c3baacabd473e8ecd6c4948aabacead49b88e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"83788ad129a5154d5c6562c4e8ce3db48793aada":["a5df378a6155dcc1f4d4ecdcbd8ea5bc058560e9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}