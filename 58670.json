{"path":"lucene/src/java/org/apache/lucene/search/BooleanScorer2#dualConjunctionSumScorer(Scorer,Scorer).mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/BooleanScorer2#dualConjunctionSumScorer(Scorer,Scorer).mjava","pathOld":"src/java/org/apache/lucene/search/BooleanScorer2#dualConjunctionSumScorer(Scorer,Scorer).mjava","sourceNew":"  private Scorer dualConjunctionSumScorer(Scorer req1, Scorer req2) throws IOException { // non counting.\n    return new ConjunctionScorer(defaultSimilarity, new Scorer[]{req1, req2});\n    // All scorers match, so defaultSimilarity always has 1 as\n    // the coordination factor.\n    // Therefore the sum of the scores of two scorers\n    // is used as score.\n  }\n\n","sourceOld":"  private Scorer dualConjunctionSumScorer(Scorer req1, Scorer req2) throws IOException { // non counting.\n    return new ConjunctionScorer(defaultSimilarity, new Scorer[]{req1, req2});\n    // All scorers match, so defaultSimilarity always has 1 as\n    // the coordination factor.\n    // Therefore the sum of the scores of two scorers\n    // is used as score.\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4e8cc373c801e54cec75daf9f52792cb4b17f536","date":1291116159,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/BooleanScorer2#dualConjunctionSumScorer(Scorer,Scorer).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/BooleanScorer2#dualConjunctionSumScorer(Scorer,Scorer).mjava","sourceNew":"  private Scorer dualConjunctionSumScorer(Scorer req1, Scorer req2) throws IOException { // non counting.\n    return new ConjunctionScorer(defaultSimilarity, req1, req2);\n    // All scorers match, so defaultSimilarity always has 1 as\n    // the coordination factor.\n    // Therefore the sum of the scores of two scorers\n    // is used as score.\n  }\n\n","sourceOld":"  private Scorer dualConjunctionSumScorer(Scorer req1, Scorer req2) throws IOException { // non counting.\n    return new ConjunctionScorer(defaultSimilarity, new Scorer[]{req1, req2});\n    // All scorers match, so defaultSimilarity always has 1 as\n    // the coordination factor.\n    // Therefore the sum of the scores of two scorers\n    // is used as score.\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3bb13258feba31ab676502787ab2e1779f129b7a","date":1291596436,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/BooleanScorer2#dualConjunctionSumScorer(Scorer,Scorer).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/BooleanScorer2#dualConjunctionSumScorer(Scorer,Scorer).mjava","sourceNew":"  private Scorer dualConjunctionSumScorer(Scorer req1, Scorer req2) throws IOException { // non counting.\n    return new ConjunctionScorer(defaultSimilarity, req1, req2);\n    // All scorers match, so defaultSimilarity always has 1 as\n    // the coordination factor.\n    // Therefore the sum of the scores of two scorers\n    // is used as score.\n  }\n\n","sourceOld":"  private Scorer dualConjunctionSumScorer(Scorer req1, Scorer req2) throws IOException { // non counting.\n    return new ConjunctionScorer(defaultSimilarity, new Scorer[]{req1, req2});\n    // All scorers match, so defaultSimilarity always has 1 as\n    // the coordination factor.\n    // Therefore the sum of the scores of two scorers\n    // is used as score.\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/BooleanScorer2#dualConjunctionSumScorer(Scorer,Scorer).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/BooleanScorer2#dualConjunctionSumScorer(Scorer,Scorer).mjava","sourceNew":"  private Scorer dualConjunctionSumScorer(Scorer req1, Scorer req2) throws IOException { // non counting.\n    return new ConjunctionScorer(defaultSimilarity, req1, req2);\n    // All scorers match, so defaultSimilarity always has 1 as\n    // the coordination factor.\n    // Therefore the sum of the scores of two scorers\n    // is used as score.\n  }\n\n","sourceOld":"  private Scorer dualConjunctionSumScorer(Scorer req1, Scorer req2) throws IOException { // non counting.\n    return new ConjunctionScorer(defaultSimilarity, new Scorer[]{req1, req2});\n    // All scorers match, so defaultSimilarity always has 1 as\n    // the coordination factor.\n    // Therefore the sum of the scores of two scorers\n    // is used as score.\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3e00f80591de714c6975f454e33e0fa5218b5902","date":1294514405,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/BooleanScorer2#dualConjunctionSumScorer(boolean,Similarity,Scorer,Scorer).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/BooleanScorer2#dualConjunctionSumScorer(Scorer,Scorer).mjava","sourceNew":"  private Scorer dualConjunctionSumScorer(boolean disableCoord,\n                                          Similarity similarity,\n                                          Scorer req1, Scorer req2) throws IOException { // non counting.\n    return new ConjunctionScorer(disableCoord ? 1.0f : similarity.coord(2, 2), req1, req2);\n    // All scorers match, so defaultSimilarity always has 1 as\n    // the coordination factor.\n    // Therefore the sum of the scores of two scorers\n    // is used as score.\n  }\n\n","sourceOld":"  private Scorer dualConjunctionSumScorer(Scorer req1, Scorer req2) throws IOException { // non counting.\n    return new ConjunctionScorer(defaultSimilarity, req1, req2);\n    // All scorers match, so defaultSimilarity always has 1 as\n    // the coordination factor.\n    // Therefore the sum of the scores of two scorers\n    // is used as score.\n  }\n\n","bugFix":null,"bugIntro":["b0c73b4e6b72cca35c7f115ab543ce9dcf50d8b5","b0c73b4e6b72cca35c7f115ab543ce9dcf50d8b5"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"868da859b43505d9d2a023bfeae6dd0c795f5295","date":1294948401,"type":4,"author":"Michael Busch","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/search/BooleanScorer2#dualConjunctionSumScorer(Scorer,Scorer).mjava","sourceNew":null,"sourceOld":"  private Scorer dualConjunctionSumScorer(Scorer req1, Scorer req2) throws IOException { // non counting.\n    return new ConjunctionScorer(defaultSimilarity, req1, req2);\n    // All scorers match, so defaultSimilarity always has 1 as\n    // the coordination factor.\n    // Therefore the sum of the scores of two scorers\n    // is used as score.\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":4,"author":"Simon Willnauer","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/search/BooleanScorer2#dualConjunctionSumScorer(Scorer,Scorer).mjava","sourceNew":null,"sourceOld":"  private Scorer dualConjunctionSumScorer(Scorer req1, Scorer req2) throws IOException { // non counting.\n    return new ConjunctionScorer(defaultSimilarity, req1, req2);\n    // All scorers match, so defaultSimilarity always has 1 as\n    // the coordination factor.\n    // Therefore the sum of the scores of two scorers\n    // is used as score.\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3e00f80591de714c6975f454e33e0fa5218b5902":["4e8cc373c801e54cec75daf9f52792cb4b17f536"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["3bb13258feba31ab676502787ab2e1779f129b7a","3e00f80591de714c6975f454e33e0fa5218b5902"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["9454a6510e2db155fb01faa5c049b06ece95fab9","4e8cc373c801e54cec75daf9f52792cb4b17f536"],"868da859b43505d9d2a023bfeae6dd0c795f5295":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","3e00f80591de714c6975f454e33e0fa5218b5902"],"3bb13258feba31ab676502787ab2e1779f129b7a":["9454a6510e2db155fb01faa5c049b06ece95fab9","4e8cc373c801e54cec75daf9f52792cb4b17f536"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3e00f80591de714c6975f454e33e0fa5218b5902"],"4e8cc373c801e54cec75daf9f52792cb4b17f536":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"3e00f80591de714c6975f454e33e0fa5218b5902":["29ef99d61cda9641b6250bf9567329a6e65f901d","868da859b43505d9d2a023bfeae6dd0c795f5295","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["868da859b43505d9d2a023bfeae6dd0c795f5295"],"868da859b43505d9d2a023bfeae6dd0c795f5295":[],"3bb13258feba31ab676502787ab2e1779f129b7a":["29ef99d61cda9641b6250bf9567329a6e65f901d"],"4e8cc373c801e54cec75daf9f52792cb4b17f536":["3e00f80591de714c6975f454e33e0fa5218b5902","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","3bb13258feba31ab676502787ab2e1779f129b7a"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","3bb13258feba31ab676502787ab2e1779f129b7a","4e8cc373c801e54cec75daf9f52792cb4b17f536"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["29ef99d61cda9641b6250bf9567329a6e65f901d","868da859b43505d9d2a023bfeae6dd0c795f5295","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}