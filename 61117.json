{"path":"modules/grouping/src/test/org/apache/lucene/search/grouping/AllGroupHeadsCollectorTest#openBitSetContains(int[],FixedBitSet,int).mjava","commits":[{"id":"8b48c85d1bf438ef65fbc1abe44f4e2c04a43e00","date":1317931776,"type":1,"author":"Martijn van Groningen","isMerge":false,"pathNew":"modules/grouping/src/test/org/apache/lucene/search/grouping/AllGroupHeadsCollectorTest#openBitSetContains(int[],FixedBitSet,int).mjava","pathOld":"modules/grouping/src/test/org/apache/lucene/search/grouping/TermAllGroupHeadsCollectorTest#openBitSetContains(int[],FixedBitSet,int).mjava","sourceNew":"  private boolean openBitSetContains(int[] expectedDocs, FixedBitSet actual, int maxDoc) throws IOException {\n    if (expectedDocs.length != actual.cardinality()) {\n      return false;\n    }\n\n    FixedBitSet expected = new FixedBitSet(maxDoc);\n    for (int expectedDoc : expectedDocs) {\n      expected.set(expectedDoc);\n    }\n\n    int docId;\n    DocIdSetIterator iterator = expected.iterator();\n    while ((docId = iterator.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n      if (!actual.get(docId)) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n","sourceOld":"  private boolean openBitSetContains(int[] expectedDocs, FixedBitSet actual, int maxDoc) throws IOException {\n    if (expectedDocs.length != actual.cardinality()) {\n      return false;\n    }\n\n    FixedBitSet expected = new FixedBitSet(maxDoc);\n    for (int expectedDoc : expectedDocs) {\n      expected.set(expectedDoc);\n    }\n\n    int docId;\n    DocIdSetIterator iterator = expected.iterator();\n    while ((docId = iterator.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n      if (!actual.get(docId)) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/grouping/src/test/org/apache/lucene/search/grouping/AllGroupHeadsCollectorTest#openBitSetContains(int[],FixedBitSet,int).mjava","pathOld":"modules/grouping/src/test/org/apache/lucene/search/grouping/AllGroupHeadsCollectorTest#openBitSetContains(int[],FixedBitSet,int).mjava","sourceNew":"  private boolean openBitSetContains(int[] expectedDocs, FixedBitSet actual, int maxDoc) throws IOException {\n    if (expectedDocs.length != actual.cardinality()) {\n      return false;\n    }\n\n    FixedBitSet expected = new FixedBitSet(maxDoc);\n    for (int expectedDoc : expectedDocs) {\n      expected.set(expectedDoc);\n    }\n\n    int docId;\n    DocIdSetIterator iterator = expected.iterator();\n    while ((docId = iterator.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n      if (!actual.get(docId)) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n","sourceOld":"  private boolean openBitSetContains(int[] expectedDocs, FixedBitSet actual, int maxDoc) throws IOException {\n    if (expectedDocs.length != actual.cardinality()) {\n      return false;\n    }\n\n    FixedBitSet expected = new FixedBitSet(maxDoc);\n    for (int expectedDoc : expectedDocs) {\n      expected.set(expectedDoc);\n    }\n\n    int docId;\n    DocIdSetIterator iterator = expected.iterator();\n    while ((docId = iterator.nextDoc()) != DocIdSetIterator.NO_MORE_DOCS) {\n      if (!actual.get(docId)) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["8b48c85d1bf438ef65fbc1abe44f4e2c04a43e00"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8b48c85d1bf438ef65fbc1abe44f4e2c04a43e00":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8b48c85d1bf438ef65fbc1abe44f4e2c04a43e00"],"8b48c85d1bf438ef65fbc1abe44f4e2c04a43e00":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}