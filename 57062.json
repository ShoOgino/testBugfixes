{"path":"lucene/queries/src/java/org/apache/lucene/queries/CustomScoreQuery#CustomScoreQuery(Query,FunctionQuery).mjava","commits":[{"id":"1f996290e59e291197de58145aa83e55bae27417","date":1369193722,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/CustomScoreQuery#CustomScoreQuery(Query,FunctionQuery).mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/CustomScoreQuery#CustomScoreQuery(Query,Query).mjava","sourceNew":"  /**\n   * Create a CustomScoreQuery over input subQuery and a {@link org.apache.lucene.queries.function.FunctionQuery}.\n   * @param subQuery the sub query whose score is being customized. Must not be null.\n   * @param scoringQuery a value source query whose scores are used in the custom score\n   * computation.  This parameter is optional - it can be null.\n   */\n  public CustomScoreQuery(Query subQuery, FunctionQuery scoringQuery) {\n    this(subQuery, scoringQuery!=null ? // don't want an array that contains a single null..\n        new FunctionQuery[] {scoringQuery} : new FunctionQuery[0]);\n  }\n\n","sourceOld":"  /**\n   * Create a CustomScoreQuery over input subQuery and a {@link org.apache.lucene.queries.function.FunctionQuery}.\n   * @param subQuery the sub query whose score is being customized. Must not be null.\n   * @param scoringQuery a value source query whose scores are used in the custom score\n   * computation.  This parameter is optional - it can be null.\n   */\n  public CustomScoreQuery(Query subQuery, Query scoringQuery) {\n    this(subQuery, scoringQuery!=null ? // don't want an array that contains a single null..\n        new Query[] {scoringQuery} : new Query[0]);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"19275ba31e621f6da1b83bf13af75233876fd3d4","date":1374846698,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/CustomScoreQuery#CustomScoreQuery(Query,FunctionQuery).mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/CustomScoreQuery#CustomScoreQuery(Query,FunctionQuery).mjava","sourceNew":"  /**\n   * Create a CustomScoreQuery over input subQuery and a {@link org.apache.lucene.queries.function.FunctionQuery}.\n   * @param subQuery the sub query whose score is being customized. Must not be null.\n   * @param scoringQuery a value source query whose scores are used in the custom score\n   * computation.  This parameter is optional - it can be null.\n   */\n  public CustomScoreQuery(Query subQuery, FunctionQuery scoringQuery) {\n    this(subQuery, scoringQuery!=null ? // don't want an array that contains a single null..\n        new FunctionQuery[] {scoringQuery} : new FunctionQuery[0]);\n  }\n\n","sourceOld":"  /**\n   * Create a CustomScoreQuery over input subQuery and a {@link org.apache.lucene.queries.function.FunctionQuery}.\n   * @param subQuery the sub query whose score is being customized. Must not be null.\n   * @param scoringQuery a value source query whose scores are used in the custom score\n   * computation.  This parameter is optional - it can be null.\n   */\n  public CustomScoreQuery(Query subQuery, FunctionQuery scoringQuery) {\n    this(subQuery, scoringQuery!=null ? // don't want an array that contains a single null..\n        new FunctionQuery[] {scoringQuery} : new FunctionQuery[0]);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","date":1376366778,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/CustomScoreQuery#CustomScoreQuery(Query,FunctionQuery).mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/CustomScoreQuery#CustomScoreQuery(Query,FunctionQuery).mjava","sourceNew":"  /**\n   * Create a CustomScoreQuery over input subQuery and a {@link org.apache.lucene.queries.function.FunctionQuery}.\n   * @param subQuery the sub query whose score is being customized. Must not be null.\n   * @param scoringQuery a value source query whose scores are used in the custom score\n   * computation.  This parameter is optional - it can be null.\n   */\n  public CustomScoreQuery(Query subQuery, FunctionQuery scoringQuery) {\n    this(subQuery, scoringQuery!=null ? // don't want an array that contains a single null..\n        new FunctionQuery[] {scoringQuery} : new FunctionQuery[0]);\n  }\n\n","sourceOld":"  /**\n   * Create a CustomScoreQuery over input subQuery and a {@link org.apache.lucene.queries.function.FunctionQuery}.\n   * @param subQuery the sub query whose score is being customized. Must not be null.\n   * @param scoringQuery a value source query whose scores are used in the custom score\n   * computation.  This parameter is optional - it can be null.\n   */\n  public CustomScoreQuery(Query subQuery, FunctionQuery scoringQuery) {\n    this(subQuery, scoringQuery!=null ? // don't want an array that contains a single null..\n        new FunctionQuery[] {scoringQuery} : new FunctionQuery[0]);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a82662cae660e76ded4de1e9b451633e523d83e1","date":1513619223,"type":4,"author":"Alan Woodward","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/CustomScoreQuery#CustomScoreQuery(Query,FunctionQuery).mjava","sourceNew":null,"sourceOld":"  /**\n   * Create a CustomScoreQuery over input subQuery and a {@link org.apache.lucene.queries.function.FunctionQuery}.\n   * @param subQuery the sub query whose score is being customized. Must not be null.\n   * @param scoringQuery a value source query whose scores are used in the custom score\n   * computation.  This parameter is optional - it can be null.\n   */\n  public CustomScoreQuery(Query subQuery, FunctionQuery scoringQuery) {\n    this(subQuery, scoringQuery!=null ? // don't want an array that contains a single null..\n        new FunctionQuery[] {scoringQuery} : new FunctionQuery[0]);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1f996290e59e291197de58145aa83e55bae27417":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a82662cae660e76ded4de1e9b451633e523d83e1":["19275ba31e621f6da1b83bf13af75233876fd3d4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":["1f996290e59e291197de58145aa83e55bae27417"],"19275ba31e621f6da1b83bf13af75233876fd3d4":["1f996290e59e291197de58145aa83e55bae27417"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a82662cae660e76ded4de1e9b451633e523d83e1"]},"commit2Childs":{"1f996290e59e291197de58145aa83e55bae27417":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","19275ba31e621f6da1b83bf13af75233876fd3d4"],"a82662cae660e76ded4de1e9b451633e523d83e1":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1f996290e59e291197de58145aa83e55bae27417"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":[],"19275ba31e621f6da1b83bf13af75233876fd3d4":["a82662cae660e76ded4de1e9b451633e523d83e1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}