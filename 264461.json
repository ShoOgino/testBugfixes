{"path":"lucene/core/src/test/org/apache/lucene/index/TestParallelCompositeReader#testToString().mjava","commits":[{"id":"48180ea0d6210cab36e06798b916a39e0607713b","date":1367051483,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestParallelCompositeReader#testToString().mjava","pathOld":"/dev/null","sourceNew":"  public void testToString() throws IOException {\n    Directory dir1 = getDir1(random());\n    CompositeReader ir1 = DirectoryReader.open(dir1);\n    ParallelCompositeReader pr = new ParallelCompositeReader(new CompositeReader[] {ir1});\n    \n    final String s = pr.toString();\n    assertTrue(\"toString incorrect: \" + s, s.startsWith(\"ParallelCompositeReader(ParallelAtomicReader(\"));\n\n    pr.close();\n    dir1.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c9644a32526f2e2ae87543b00e8be543aa25f29c","date":1411548458,"type":3,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/index/TestParallelCompositeReader#testToString().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestParallelCompositeReader#testToString().mjava","sourceNew":"  public void testToString() throws IOException {\n    Directory dir1 = getDir1(random());\n    CompositeReader ir1 = DirectoryReader.open(dir1);\n    ParallelCompositeReader pr = new ParallelCompositeReader(new CompositeReader[] {ir1});\n    \n    final String s = pr.toString();\n    assertTrue(\"toString incorrect: \" + s, s.startsWith(\"ParallelCompositeReader(ParallelLeafReader(\"));\n\n    pr.close();\n    dir1.close();\n  }\n\n","sourceOld":"  public void testToString() throws IOException {\n    Directory dir1 = getDir1(random());\n    CompositeReader ir1 = DirectoryReader.open(dir1);\n    ParallelCompositeReader pr = new ParallelCompositeReader(new CompositeReader[] {ir1});\n    \n    final String s = pr.toString();\n    assertTrue(\"toString incorrect: \" + s, s.startsWith(\"ParallelCompositeReader(ParallelAtomicReader(\"));\n\n    pr.close();\n    dir1.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"48180ea0d6210cab36e06798b916a39e0607713b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c9644a32526f2e2ae87543b00e8be543aa25f29c":["48180ea0d6210cab36e06798b916a39e0607713b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c9644a32526f2e2ae87543b00e8be543aa25f29c"]},"commit2Childs":{"48180ea0d6210cab36e06798b916a39e0607713b":["c9644a32526f2e2ae87543b00e8be543aa25f29c"],"c9644a32526f2e2ae87543b00e8be543aa25f29c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["48180ea0d6210cab36e06798b916a39e0607713b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}