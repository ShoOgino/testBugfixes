{"path":"solr/core/src/java/org/apache/solr/handler/component/RealTimeGetComponent#processGetFingeprint(ResponseBuilder).mjava","commits":[{"id":"fcc7eba0b32cbc7cc5b8fd388032bb833fa07786","date":1474482359,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/RealTimeGetComponent#processGetFingeprint(ResponseBuilder).mjava","pathOld":"/dev/null","sourceNew":"  public void processGetFingeprint(ResponseBuilder rb) throws IOException {\n    SolrQueryRequest req = rb.req;\n    SolrParams params = req.getParams();\n    \n    long maxVersion = params.getLong(\"getFingerprint\", Long.MAX_VALUE);\n    IndexFingerprint fingerprint = IndexFingerprint.getFingerprint(req.getCore(), Math.abs(maxVersion));\n    rb.rsp.add(\"fingerprint\", fingerprint);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17e5da53e4e5bd659e22add9bba1cfa222e7e30d","date":1475435902,"type":0,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/RealTimeGetComponent#processGetFingeprint(ResponseBuilder).mjava","pathOld":"/dev/null","sourceNew":"  public void processGetFingeprint(ResponseBuilder rb) throws IOException {\n    SolrQueryRequest req = rb.req;\n    SolrParams params = req.getParams();\n    \n    long maxVersion = params.getLong(\"getFingerprint\", Long.MAX_VALUE);\n    IndexFingerprint fingerprint = IndexFingerprint.getFingerprint(req.getCore(), Math.abs(maxVersion));\n    rb.rsp.add(\"fingerprint\", fingerprint);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/RealTimeGetComponent#processGetFingeprint(ResponseBuilder).mjava","pathOld":"/dev/null","sourceNew":"  public void processGetFingeprint(ResponseBuilder rb) throws IOException {\n    SolrQueryRequest req = rb.req;\n    SolrParams params = req.getParams();\n    \n    long maxVersion = params.getLong(\"getFingerprint\", Long.MAX_VALUE);\n    IndexFingerprint fingerprint = IndexFingerprint.getFingerprint(req.getCore(), Math.abs(maxVersion));\n    rb.rsp.add(\"fingerprint\", fingerprint);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e87998750c1408b8af3248e55cff794d51d37166","date":1501426220,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/RealTimeGetComponent#processGetFingeprint(ResponseBuilder).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/RealTimeGetComponent#processGetFingeprint(ResponseBuilder).mjava","sourceNew":"  public void processGetFingeprint(ResponseBuilder rb) throws IOException {\n    TestInjection.injectFailIndexFingerprintRequests();\n\n    SolrQueryRequest req = rb.req;\n    SolrParams params = req.getParams();\n\n    long maxVersion = params.getLong(\"getFingerprint\", Long.MAX_VALUE);\n    if (TestInjection.injectWrongIndexFingerprint())  {\n      maxVersion = -1;\n    }\n    IndexFingerprint fingerprint = IndexFingerprint.getFingerprint(req.getCore(), Math.abs(maxVersion));\n    rb.rsp.add(\"fingerprint\", fingerprint);\n  }\n\n","sourceOld":"  public void processGetFingeprint(ResponseBuilder rb) throws IOException {\n    SolrQueryRequest req = rb.req;\n    SolrParams params = req.getParams();\n    \n    long maxVersion = params.getLong(\"getFingerprint\", Long.MAX_VALUE);\n    IndexFingerprint fingerprint = IndexFingerprint.getFingerprint(req.getCore(), Math.abs(maxVersion));\n    rb.rsp.add(\"fingerprint\", fingerprint);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7a23cf16c8fa265dc0a564adcabb55e3f054e0ac","date":1502192746,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/RealTimeGetComponent#processGetFingeprint(ResponseBuilder).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/component/RealTimeGetComponent#processGetFingeprint(ResponseBuilder).mjava","sourceNew":"  public void processGetFingeprint(ResponseBuilder rb) throws IOException {\n    TestInjection.injectFailIndexFingerprintRequests();\n\n    SolrQueryRequest req = rb.req;\n    SolrParams params = req.getParams();\n\n    long maxVersion = params.getLong(\"getFingerprint\", Long.MAX_VALUE);\n    if (TestInjection.injectWrongIndexFingerprint())  {\n      maxVersion = -1;\n    }\n    IndexFingerprint fingerprint = IndexFingerprint.getFingerprint(req.getCore(), Math.abs(maxVersion));\n    rb.rsp.add(\"fingerprint\", fingerprint);\n  }\n\n","sourceOld":"  public void processGetFingeprint(ResponseBuilder rb) throws IOException {\n    SolrQueryRequest req = rb.req;\n    SolrParams params = req.getParams();\n    \n    long maxVersion = params.getLong(\"getFingerprint\", Long.MAX_VALUE);\n    IndexFingerprint fingerprint = IndexFingerprint.getFingerprint(req.getCore(), Math.abs(maxVersion));\n    rb.rsp.add(\"fingerprint\", fingerprint);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7a23cf16c8fa265dc0a564adcabb55e3f054e0ac":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d","e87998750c1408b8af3248e55cff794d51d37166"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","fcc7eba0b32cbc7cc5b8fd388032bb833fa07786"],"fcc7eba0b32cbc7cc5b8fd388032bb833fa07786":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e87998750c1408b8af3248e55cff794d51d37166"],"e87998750c1408b8af3248e55cff794d51d37166":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"]},"commit2Childs":{"7a23cf16c8fa265dc0a564adcabb55e3f054e0ac":[],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["7a23cf16c8fa265dc0a564adcabb55e3f054e0ac","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","e87998750c1408b8af3248e55cff794d51d37166"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d","fcc7eba0b32cbc7cc5b8fd388032bb833fa07786","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"fcc7eba0b32cbc7cc5b8fd388032bb833fa07786":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"e87998750c1408b8af3248e55cff794d51d37166":["7a23cf16c8fa265dc0a564adcabb55e3f054e0ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["7a23cf16c8fa265dc0a564adcabb55e3f054e0ac","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}