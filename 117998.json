{"path":"lucene/memory/src/test/org/apache/lucene/index/memory/TestMemoryIndex#testToStringDebug().mjava","commits":[{"id":"198ff473c525ebb23af8521672fdf7195cdde235","date":1467818643,"type":0,"author":"David Smiley","isMerge":false,"pathNew":"lucene/memory/src/test/org/apache/lucene/index/memory/TestMemoryIndex#testToStringDebug().mjava","pathOld":"/dev/null","sourceNew":"  public void testToStringDebug() {\n    MemoryIndex mi = new MemoryIndex(true, true);\n    Analyzer analyzer = new MockPayloadAnalyzer();\n\n    mi.addField(\"analyzedField\", \"aa bb aa\", analyzer);\n\n    FieldType type = new FieldType();\n    type.setDimensions(1, 4);\n    type.setDocValuesType(DocValuesType.BINARY);\n    type.freeze();\n    mi.addField(new BinaryPoint(\"pointAndDvField\", \"term\".getBytes(StandardCharsets.UTF_8), type), analyzer);\n\n    assertEquals(\"analyzedField:\\n\" +\n        \"\\t'[61 61]':2: [(0, 0, 2, [70 6f 73 3a 20 30]), (1, 6, 8, [70 6f 73 3a 20 32])]\\n\" +\n        \"\\t'[62 62]':1: [(1, 3, 5, [70 6f 73 3a 20 31])]\\n\" +\n        \"\\tterms=2, positions=3\\n\" +\n        \"pointAndDvField:\\n\" +\n        \"\\tterms=0, positions=0\\n\" +\n        \"\\n\" +\n        \"fields=2, terms=2, positions=3\", mi.toStringDebug());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/memory/src/test/org/apache/lucene/index/memory/TestMemoryIndex#testToStringDebug().mjava","pathOld":"/dev/null","sourceNew":"  public void testToStringDebug() {\n    MemoryIndex mi = new MemoryIndex(true, true);\n    Analyzer analyzer = new MockPayloadAnalyzer();\n\n    mi.addField(\"analyzedField\", \"aa bb aa\", analyzer);\n\n    FieldType type = new FieldType();\n    type.setDimensions(1, 4);\n    type.setDocValuesType(DocValuesType.BINARY);\n    type.freeze();\n    mi.addField(new BinaryPoint(\"pointAndDvField\", \"term\".getBytes(StandardCharsets.UTF_8), type), analyzer);\n\n    assertEquals(\"analyzedField:\\n\" +\n        \"\\t'[61 61]':2: [(0, 0, 2, [70 6f 73 3a 20 30]), (1, 6, 8, [70 6f 73 3a 20 32])]\\n\" +\n        \"\\t'[62 62]':1: [(1, 3, 5, [70 6f 73 3a 20 31])]\\n\" +\n        \"\\tterms=2, positions=3\\n\" +\n        \"pointAndDvField:\\n\" +\n        \"\\tterms=0, positions=0\\n\" +\n        \"\\n\" +\n        \"fields=2, terms=2, positions=3\", mi.toStringDebug());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"198ff473c525ebb23af8521672fdf7195cdde235":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","198ff473c525ebb23af8521672fdf7195cdde235"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["198ff473c525ebb23af8521672fdf7195cdde235"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["198ff473c525ebb23af8521672fdf7195cdde235","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"198ff473c525ebb23af8521672fdf7195cdde235":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}