{"path":"lucene/src/java/org/apache/lucene/index/ParallelReader#document(int,StoredFieldVisitor).mjava","commits":[{"id":"1509f151d7692d84fae414b2b799ac06ba60fcb4","date":1314451621,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/ParallelReader#document(int,StoredFieldVisitor).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void document(int docID, StoredFieldVisitor visitor) throws CorruptIndexException, IOException {\n    ensureOpen();\n    for (final IndexReader reader: storedFieldReaders) {\n      reader.document(docID, visitor);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["4d3e8520fd031bab31fd0e4d480e55958bc45efe","4d3e8520fd031bab31fd0e4d480e55958bc45efe"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"2725b2d479964ea5aaea0ba4ae2634716f3ec26c","date":1327188170,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/ParallelReader#document(int,StoredFieldVisitor).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/ParallelReader#document(int,StoredFieldVisitor).mjava","sourceNew":"  @Override\n  public void document(int docID, StoredFieldVisitor visitor) throws CorruptIndexException, IOException {\n    ensureOpen();\n    for (final AtomicIndexReader reader: storedFieldReaders) {\n      reader.document(docID, visitor);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void document(int docID, StoredFieldVisitor visitor) throws CorruptIndexException, IOException {\n    ensureOpen();\n    for (final IndexReader reader: storedFieldReaders) {\n      reader.document(docID, visitor);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"da6d5ac19a80d65b1e864251f155d30960353b7e","date":1327881054,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/ParallelReader#document(int,StoredFieldVisitor).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/ParallelReader#document(int,StoredFieldVisitor).mjava","sourceNew":"  @Override\n  public void document(int docID, StoredFieldVisitor visitor) throws CorruptIndexException, IOException {\n    ensureOpen();\n    for (final AtomicReader reader: storedFieldReaders) {\n      reader.document(docID, visitor);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void document(int docID, StoredFieldVisitor visitor) throws CorruptIndexException, IOException {\n    ensureOpen();\n    for (final AtomicIndexReader reader: storedFieldReaders) {\n      reader.document(docID, visitor);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5cab9a86bd67202d20b6adc463008c8e982b070a","date":1327966443,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/ParallelReader#document(int,StoredFieldVisitor).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/ParallelReader#document(int,StoredFieldVisitor).mjava","sourceNew":"  @Override\n  public void document(int docID, StoredFieldVisitor visitor) throws CorruptIndexException, IOException {\n    ensureOpen();\n    for (final AtomicReader reader: storedFieldReaders) {\n      reader.document(docID, visitor);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void document(int docID, StoredFieldVisitor visitor) throws CorruptIndexException, IOException {\n    ensureOpen();\n    for (final IndexReader reader: storedFieldReaders) {\n      reader.document(docID, visitor);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9ecf541c11d0df215aa1ea806f826d88fb9b5b9b","date":1328624680,"type":5,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/ParallelAtomicReader#document(int,StoredFieldVisitor).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/ParallelReader#document(int,StoredFieldVisitor).mjava","sourceNew":"  @Override\n  public void document(int docID, StoredFieldVisitor visitor) throws CorruptIndexException, IOException {\n    ensureOpen();\n    for (final AtomicReader reader: storedFieldReaders) {\n      reader.document(docID, visitor);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void document(int docID, StoredFieldVisitor visitor) throws CorruptIndexException, IOException {\n    ensureOpen();\n    for (final AtomicReader reader: storedFieldReaders) {\n      reader.document(docID, visitor);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"08b385e33541f6749e71618c9ab36fad908a7ed0","date":1328629771,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/ParallelReader#document(int,StoredFieldVisitor).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/ParallelAtomicReader#document(int,StoredFieldVisitor).mjava","sourceNew":"  @Override\n  public void document(int docID, StoredFieldVisitor visitor) throws CorruptIndexException, IOException {\n    ensureOpen();\n    for (final AtomicReader reader: storedFieldReaders) {\n      reader.document(docID, visitor);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void document(int docID, StoredFieldVisitor visitor) throws CorruptIndexException, IOException {\n    ensureOpen();\n    for (final AtomicReader reader: storedFieldReaders) {\n      reader.document(docID, visitor);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/ParallelReader#document(int,StoredFieldVisitor).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/ParallelReader#document(int,StoredFieldVisitor).mjava","sourceNew":"  @Override\n  public void document(int docID, StoredFieldVisitor visitor) throws CorruptIndexException, IOException {\n    ensureOpen();\n    for (final AtomicReader reader: storedFieldReaders) {\n      reader.document(docID, visitor);\n    }\n  }\n\n","sourceOld":"  @Override\n  public void document(int docID, StoredFieldVisitor visitor) throws CorruptIndexException, IOException {\n    ensureOpen();\n    for (final AtomicReader reader: storedFieldReaders) {\n      reader.document(docID, visitor);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"08b385e33541f6749e71618c9ab36fad908a7ed0":["9ecf541c11d0df215aa1ea806f826d88fb9b5b9b"],"da6d5ac19a80d65b1e864251f155d30960353b7e":["2725b2d479964ea5aaea0ba4ae2634716f3ec26c"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["08b385e33541f6749e71618c9ab36fad908a7ed0"],"9ecf541c11d0df215aa1ea806f826d88fb9b5b9b":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5cab9a86bd67202d20b6adc463008c8e982b070a":["1509f151d7692d84fae414b2b799ac06ba60fcb4","da6d5ac19a80d65b1e864251f155d30960353b7e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"2725b2d479964ea5aaea0ba4ae2634716f3ec26c":["1509f151d7692d84fae414b2b799ac06ba60fcb4"]},"commit2Childs":{"08b385e33541f6749e71618c9ab36fad908a7ed0":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"da6d5ac19a80d65b1e864251f155d30960353b7e":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9ecf541c11d0df215aa1ea806f826d88fb9b5b9b":["08b385e33541f6749e71618c9ab36fad908a7ed0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1509f151d7692d84fae414b2b799ac06ba60fcb4"],"1509f151d7692d84fae414b2b799ac06ba60fcb4":["5cab9a86bd67202d20b6adc463008c8e982b070a","2725b2d479964ea5aaea0ba4ae2634716f3ec26c"],"5cab9a86bd67202d20b6adc463008c8e982b070a":["9ecf541c11d0df215aa1ea806f826d88fb9b5b9b"],"2725b2d479964ea5aaea0ba4ae2634716f3ec26c":["da6d5ac19a80d65b1e864251f155d30960353b7e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}