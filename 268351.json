{"path":"solr/contrib/dataimporthandler/src/extras/main/java/org/apache/solr/handler/dataimport/MailEntityProcessor#addPartToDocument(Part,Map[String,Object],boolean).mjava","commits":[{"id":"893269407f5c988a4b2ee13c7ffc01ec43136c1d","date":1268598046,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/extras/main/java/org/apache/solr/handler/dataimport/MailEntityProcessor#addPartToDocument(Part,Map[String,Object],boolean).mjava","pathOld":"/dev/null","sourceNew":"  public void addPartToDocument(Part part, Map<String, Object> row, boolean outerMost) throws Exception {\n    if (part instanceof Message) {\n      addEnvelopToDocument(part, row);\n    }\n\n    String ct = part.getContentType();\n    ContentType ctype = new ContentType(ct);\n    if (part.isMimeType(\"multipart/*\")) {\n      Multipart mp = (Multipart) part.getContent();\n      int count = mp.getCount();\n      if (part.isMimeType(\"multipart/alternative\"))\n        count = 1;\n      for (int i = 0; i < count; i++)\n        addPartToDocument(mp.getBodyPart(i), row, false);\n    } else if (part.isMimeType(\"message/rfc822\")) {\n      addPartToDocument((Part) part.getContent(), row, false);\n    } else {\n      String disp = part.getDisposition();\n      if (!processAttachment || (disp != null && disp.equalsIgnoreCase(Part.ATTACHMENT)))        return;\n      InputStream is = part.getInputStream();\n      String fileName = part.getFileName();\n      String content = ParseUtils.getStringContent(is, TikaConfig.getDefaultConfig(), ctype.getBaseType().toLowerCase());\n      if (disp != null && disp.equalsIgnoreCase(Part.ATTACHMENT)) {\n        if (row.get(ATTACHMENT) == null)\n          row.put(ATTACHMENT, new ArrayList<String>());\n        List<String> contents = (List<String>) row.get(ATTACHMENT);\n        contents.add(content);\n        row.put(ATTACHMENT, contents);\n        if (row.get(ATTACHMENT_NAMES) == null)\n          row.put(ATTACHMENT_NAMES, new ArrayList<String>());\n        List<String> names = (List<String>) row.get(ATTACHMENT_NAMES);\n        names.add(fileName);\n        row.put(ATTACHMENT_NAMES, names);\n      } else {\n        if (row.get(CONTENT) == null)\n          row.put(CONTENT, new ArrayList<String>());\n        List<String> contents = (List<String>) row.get(CONTENT);\n        contents.add(content);\n        row.put(CONTENT, contents);\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","date":1268599006,"type":4,"author":"Mark Robert Miller","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/contrib/dataimporthandler/src/extras/main/java/org/apache/solr/handler/dataimport/MailEntityProcessor#addPartToDocument(Part,Map[String,Object],boolean).mjava","sourceNew":null,"sourceOld":"  public void addPartToDocument(Part part, Map<String, Object> row, boolean outerMost) throws Exception {\n    if (part instanceof Message) {\n      addEnvelopToDocument(part, row);\n    }\n\n    String ct = part.getContentType();\n    ContentType ctype = new ContentType(ct);\n    if (part.isMimeType(\"multipart/*\")) {\n      Multipart mp = (Multipart) part.getContent();\n      int count = mp.getCount();\n      if (part.isMimeType(\"multipart/alternative\"))\n        count = 1;\n      for (int i = 0; i < count; i++)\n        addPartToDocument(mp.getBodyPart(i), row, false);\n    } else if (part.isMimeType(\"message/rfc822\")) {\n      addPartToDocument((Part) part.getContent(), row, false);\n    } else {\n      String disp = part.getDisposition();\n      if (!processAttachment || (disp != null && disp.equalsIgnoreCase(Part.ATTACHMENT)))        return;\n      InputStream is = part.getInputStream();\n      String fileName = part.getFileName();\n      String content = ParseUtils.getStringContent(is, TikaConfig.getDefaultConfig(), ctype.getBaseType().toLowerCase());\n      if (disp != null && disp.equalsIgnoreCase(Part.ATTACHMENT)) {\n        if (row.get(ATTACHMENT) == null)\n          row.put(ATTACHMENT, new ArrayList<String>());\n        List<String> contents = (List<String>) row.get(ATTACHMENT);\n        contents.add(content);\n        row.put(ATTACHMENT, contents);\n        if (row.get(ATTACHMENT_NAMES) == null)\n          row.put(ATTACHMENT_NAMES, new ArrayList<String>());\n        List<String> names = (List<String>) row.get(ATTACHMENT_NAMES);\n        names.add(fileName);\n        row.put(ATTACHMENT_NAMES, names);\n      } else {\n        if (row.get(CONTENT) == null)\n          row.put(CONTENT, new ArrayList<String>());\n        List<String> contents = (List<String>) row.get(CONTENT);\n        contents.add(content);\n        row.put(CONTENT, contents);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/extras/main/java/org/apache/solr/handler/dataimport/MailEntityProcessor#addPartToDocument(Part,Map[String,Object],boolean).mjava","pathOld":"contrib/dataimporthandler/src/extras/main/java/org/apache/solr/handler/dataimport/MailEntityProcessor#addPartToDocument(Part,Map[String,Object],boolean).mjava","sourceNew":"  public void addPartToDocument(Part part, Map<String, Object> row, boolean outerMost) throws Exception {\n    if (part instanceof Message) {\n      addEnvelopToDocument(part, row);\n    }\n\n    String ct = part.getContentType();\n    ContentType ctype = new ContentType(ct);\n    if (part.isMimeType(\"multipart/*\")) {\n      Multipart mp = (Multipart) part.getContent();\n      int count = mp.getCount();\n      if (part.isMimeType(\"multipart/alternative\"))\n        count = 1;\n      for (int i = 0; i < count; i++)\n        addPartToDocument(mp.getBodyPart(i), row, false);\n    } else if (part.isMimeType(\"message/rfc822\")) {\n      addPartToDocument((Part) part.getContent(), row, false);\n    } else {\n      String disp = part.getDisposition();\n      if (!processAttachment || (disp != null && disp.equalsIgnoreCase(Part.ATTACHMENT)))        return;\n      InputStream is = part.getInputStream();\n      String fileName = part.getFileName();\n      String content = ParseUtils.getStringContent(is, TikaConfig.getDefaultConfig(), ctype.getBaseType().toLowerCase());\n      if (disp != null && disp.equalsIgnoreCase(Part.ATTACHMENT)) {\n        if (row.get(ATTACHMENT) == null)\n          row.put(ATTACHMENT, new ArrayList<String>());\n        List<String> contents = (List<String>) row.get(ATTACHMENT);\n        contents.add(content);\n        row.put(ATTACHMENT, contents);\n        if (row.get(ATTACHMENT_NAMES) == null)\n          row.put(ATTACHMENT_NAMES, new ArrayList<String>());\n        List<String> names = (List<String>) row.get(ATTACHMENT_NAMES);\n        names.add(fileName);\n        row.put(ATTACHMENT_NAMES, names);\n      } else {\n        if (row.get(CONTENT) == null)\n          row.put(CONTENT, new ArrayList<String>());\n        List<String> contents = (List<String>) row.get(CONTENT);\n        contents.add(content);\n        row.put(CONTENT, contents);\n      }\n    }\n  }\n\n","sourceOld":"  public void addPartToDocument(Part part, Map<String, Object> row, boolean outerMost) throws Exception {\n    if (part instanceof Message) {\n      addEnvelopToDocument(part, row);\n    }\n\n    String ct = part.getContentType();\n    ContentType ctype = new ContentType(ct);\n    if (part.isMimeType(\"multipart/*\")) {\n      Multipart mp = (Multipart) part.getContent();\n      int count = mp.getCount();\n      if (part.isMimeType(\"multipart/alternative\"))\n        count = 1;\n      for (int i = 0; i < count; i++)\n        addPartToDocument(mp.getBodyPart(i), row, false);\n    } else if (part.isMimeType(\"message/rfc822\")) {\n      addPartToDocument((Part) part.getContent(), row, false);\n    } else {\n      String disp = part.getDisposition();\n      if (!processAttachment || (disp != null && disp.equalsIgnoreCase(Part.ATTACHMENT)))        return;\n      InputStream is = part.getInputStream();\n      String fileName = part.getFileName();\n      String content = ParseUtils.getStringContent(is, TikaConfig.getDefaultConfig(), ctype.getBaseType().toLowerCase());\n      if (disp != null && disp.equalsIgnoreCase(Part.ATTACHMENT)) {\n        if (row.get(ATTACHMENT) == null)\n          row.put(ATTACHMENT, new ArrayList<String>());\n        List<String> contents = (List<String>) row.get(ATTACHMENT);\n        contents.add(content);\n        row.put(ATTACHMENT, contents);\n        if (row.get(ATTACHMENT_NAMES) == null)\n          row.put(ATTACHMENT_NAMES, new ArrayList<String>());\n        List<String> names = (List<String>) row.get(ATTACHMENT_NAMES);\n        names.add(fileName);\n        row.put(ATTACHMENT_NAMES, names);\n      } else {\n        if (row.get(CONTENT) == null)\n          row.put(CONTENT, new ArrayList<String>());\n        List<String> contents = (List<String>) row.get(CONTENT);\n        contents.add(content);\n        row.put(CONTENT, contents);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1da8d55113b689b06716246649de6f62430f15c0","date":1453508340,"type":0,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/contrib/dataimporthandler/src/extras/main/java/org/apache/solr/handler/dataimport/MailEntityProcessor#addPartToDocument(Part,Map[String,Object],boolean).mjava","pathOld":"/dev/null","sourceNew":"  public void addPartToDocument(Part part, Map<String, Object> row, boolean outerMost) throws Exception {\n    if (part instanceof Message) {\n      addEnvelopToDocument(part, row);\n    }\n\n    String ct = part.getContentType();\n    ContentType ctype = new ContentType(ct);\n    if (part.isMimeType(\"multipart/*\")) {\n      Multipart mp = (Multipart) part.getContent();\n      int count = mp.getCount();\n      if (part.isMimeType(\"multipart/alternative\"))\n        count = 1;\n      for (int i = 0; i < count; i++)\n        addPartToDocument(mp.getBodyPart(i), row, false);\n    } else if (part.isMimeType(\"message/rfc822\")) {\n      addPartToDocument((Part) part.getContent(), row, false);\n    } else {\n      String disp = part.getDisposition();\n      if (!processAttachment || (disp != null && disp.equalsIgnoreCase(Part.ATTACHMENT)))        return;\n      InputStream is = part.getInputStream();\n      String fileName = part.getFileName();\n      String content = ParseUtils.getStringContent(is, TikaConfig.getDefaultConfig(), ctype.getBaseType().toLowerCase());\n      if (disp != null && disp.equalsIgnoreCase(Part.ATTACHMENT)) {\n        if (row.get(ATTACHMENT) == null)\n          row.put(ATTACHMENT, new ArrayList<String>());\n        List<String> contents = (List<String>) row.get(ATTACHMENT);\n        contents.add(content);\n        row.put(ATTACHMENT, contents);\n        if (row.get(ATTACHMENT_NAMES) == null)\n          row.put(ATTACHMENT_NAMES, new ArrayList<String>());\n        List<String> names = (List<String>) row.get(ATTACHMENT_NAMES);\n        names.add(fileName);\n        row.put(ATTACHMENT_NAMES, names);\n      } else {\n        if (row.get(CONTENT) == null)\n          row.put(CONTENT, new ArrayList<String>());\n        List<String> contents = (List<String>) row.get(CONTENT);\n        contents.add(content);\n        row.put(CONTENT, contents);\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b375ac28473e1310fa9ea99d95e9c6001e3719d5","date":1274116690,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/contrib/dataimporthandler/src/extras/main/java/org/apache/solr/handler/dataimport/MailEntityProcessor#addPartToDocument(Part,Map[String,Object],boolean).mjava","pathOld":"solr/contrib/dataimporthandler/src/extras/main/java/org/apache/solr/handler/dataimport/MailEntityProcessor#addPartToDocument(Part,Map[String,Object],boolean).mjava","sourceNew":"  public void addPartToDocument(Part part, Map<String, Object> row, boolean outerMost) throws Exception {\n    if (part instanceof Message) {\n      addEnvelopToDocument(part, row);\n    }\n\n    String ct = part.getContentType();\n    ContentType ctype = new ContentType(ct);\n    if (part.isMimeType(\"multipart/*\")) {\n      Multipart mp = (Multipart) part.getContent();\n      int count = mp.getCount();\n      if (part.isMimeType(\"multipart/alternative\"))\n        count = 1;\n      for (int i = 0; i < count; i++)\n        addPartToDocument(mp.getBodyPart(i), row, false);\n    } else if (part.isMimeType(\"message/rfc822\")) {\n      addPartToDocument((Part) part.getContent(), row, false);\n    } else {\n      String disp = part.getDisposition();\n      if (!processAttachment || (disp != null && disp.equalsIgnoreCase(Part.ATTACHMENT)))        return;\n      InputStream is = part.getInputStream();\n      String fileName = part.getFileName();\n      String content = ParseUtils.getStringContent(is, TikaConfig.getDefaultConfig(), ctype.getBaseType().toLowerCase(Locale.ENGLISH));\n      if (disp != null && disp.equalsIgnoreCase(Part.ATTACHMENT)) {\n        if (row.get(ATTACHMENT) == null)\n          row.put(ATTACHMENT, new ArrayList<String>());\n        List<String> contents = (List<String>) row.get(ATTACHMENT);\n        contents.add(content);\n        row.put(ATTACHMENT, contents);\n        if (row.get(ATTACHMENT_NAMES) == null)\n          row.put(ATTACHMENT_NAMES, new ArrayList<String>());\n        List<String> names = (List<String>) row.get(ATTACHMENT_NAMES);\n        names.add(fileName);\n        row.put(ATTACHMENT_NAMES, names);\n      } else {\n        if (row.get(CONTENT) == null)\n          row.put(CONTENT, new ArrayList<String>());\n        List<String> contents = (List<String>) row.get(CONTENT);\n        contents.add(content);\n        row.put(CONTENT, contents);\n      }\n    }\n  }\n\n","sourceOld":"  public void addPartToDocument(Part part, Map<String, Object> row, boolean outerMost) throws Exception {\n    if (part instanceof Message) {\n      addEnvelopToDocument(part, row);\n    }\n\n    String ct = part.getContentType();\n    ContentType ctype = new ContentType(ct);\n    if (part.isMimeType(\"multipart/*\")) {\n      Multipart mp = (Multipart) part.getContent();\n      int count = mp.getCount();\n      if (part.isMimeType(\"multipart/alternative\"))\n        count = 1;\n      for (int i = 0; i < count; i++)\n        addPartToDocument(mp.getBodyPart(i), row, false);\n    } else if (part.isMimeType(\"message/rfc822\")) {\n      addPartToDocument((Part) part.getContent(), row, false);\n    } else {\n      String disp = part.getDisposition();\n      if (!processAttachment || (disp != null && disp.equalsIgnoreCase(Part.ATTACHMENT)))        return;\n      InputStream is = part.getInputStream();\n      String fileName = part.getFileName();\n      String content = ParseUtils.getStringContent(is, TikaConfig.getDefaultConfig(), ctype.getBaseType().toLowerCase());\n      if (disp != null && disp.equalsIgnoreCase(Part.ATTACHMENT)) {\n        if (row.get(ATTACHMENT) == null)\n          row.put(ATTACHMENT, new ArrayList<String>());\n        List<String> contents = (List<String>) row.get(ATTACHMENT);\n        contents.add(content);\n        row.put(ATTACHMENT, contents);\n        if (row.get(ATTACHMENT_NAMES) == null)\n          row.put(ATTACHMENT_NAMES, new ArrayList<String>());\n        List<String> names = (List<String>) row.get(ATTACHMENT_NAMES);\n        names.add(fileName);\n        row.put(ATTACHMENT_NAMES, names);\n      } else {\n        if (row.get(CONTENT) == null)\n          row.put(CONTENT, new ArrayList<String>());\n        List<String> contents = (List<String>) row.get(CONTENT);\n        contents.add(content);\n        row.put(CONTENT, contents);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d20d5e40789b1c42f4f926e3174b271256c43657","date":1301641092,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"solr/contrib/dataimporthandler-extras/src/main/java/org/apache/solr/handler/dataimport/MailEntityProcessor#addPartToDocument(Part,Map[String,Object],boolean).mjava","pathOld":"solr/contrib/dataimporthandler/src/extras/main/java/org/apache/solr/handler/dataimport/MailEntityProcessor#addPartToDocument(Part,Map[String,Object],boolean).mjava","sourceNew":"  public void addPartToDocument(Part part, Map<String, Object> row, boolean outerMost) throws Exception {\n    if (part instanceof Message) {\n      addEnvelopToDocument(part, row);\n    }\n\n    String ct = part.getContentType();\n    ContentType ctype = new ContentType(ct);\n    if (part.isMimeType(\"multipart/*\")) {\n      Multipart mp = (Multipart) part.getContent();\n      int count = mp.getCount();\n      if (part.isMimeType(\"multipart/alternative\"))\n        count = 1;\n      for (int i = 0; i < count; i++)\n        addPartToDocument(mp.getBodyPart(i), row, false);\n    } else if (part.isMimeType(\"message/rfc822\")) {\n      addPartToDocument((Part) part.getContent(), row, false);\n    } else {\n      String disp = part.getDisposition();\n      if (!processAttachment || (disp != null && disp.equalsIgnoreCase(Part.ATTACHMENT)))        return;\n      InputStream is = part.getInputStream();\n      String fileName = part.getFileName();\n      String content = ParseUtils.getStringContent(is, TikaConfig.getDefaultConfig(), ctype.getBaseType().toLowerCase(Locale.ENGLISH));\n      if (disp != null && disp.equalsIgnoreCase(Part.ATTACHMENT)) {\n        if (row.get(ATTACHMENT) == null)\n          row.put(ATTACHMENT, new ArrayList<String>());\n        List<String> contents = (List<String>) row.get(ATTACHMENT);\n        contents.add(content);\n        row.put(ATTACHMENT, contents);\n        if (row.get(ATTACHMENT_NAMES) == null)\n          row.put(ATTACHMENT_NAMES, new ArrayList<String>());\n        List<String> names = (List<String>) row.get(ATTACHMENT_NAMES);\n        names.add(fileName);\n        row.put(ATTACHMENT_NAMES, names);\n      } else {\n        if (row.get(CONTENT) == null)\n          row.put(CONTENT, new ArrayList<String>());\n        List<String> contents = (List<String>) row.get(CONTENT);\n        contents.add(content);\n        row.put(CONTENT, contents);\n      }\n    }\n  }\n\n","sourceOld":"  public void addPartToDocument(Part part, Map<String, Object> row, boolean outerMost) throws Exception {\n    if (part instanceof Message) {\n      addEnvelopToDocument(part, row);\n    }\n\n    String ct = part.getContentType();\n    ContentType ctype = new ContentType(ct);\n    if (part.isMimeType(\"multipart/*\")) {\n      Multipart mp = (Multipart) part.getContent();\n      int count = mp.getCount();\n      if (part.isMimeType(\"multipart/alternative\"))\n        count = 1;\n      for (int i = 0; i < count; i++)\n        addPartToDocument(mp.getBodyPart(i), row, false);\n    } else if (part.isMimeType(\"message/rfc822\")) {\n      addPartToDocument((Part) part.getContent(), row, false);\n    } else {\n      String disp = part.getDisposition();\n      if (!processAttachment || (disp != null && disp.equalsIgnoreCase(Part.ATTACHMENT)))        return;\n      InputStream is = part.getInputStream();\n      String fileName = part.getFileName();\n      String content = ParseUtils.getStringContent(is, TikaConfig.getDefaultConfig(), ctype.getBaseType().toLowerCase(Locale.ENGLISH));\n      if (disp != null && disp.equalsIgnoreCase(Part.ATTACHMENT)) {\n        if (row.get(ATTACHMENT) == null)\n          row.put(ATTACHMENT, new ArrayList<String>());\n        List<String> contents = (List<String>) row.get(ATTACHMENT);\n        contents.add(content);\n        row.put(ATTACHMENT, contents);\n        if (row.get(ATTACHMENT_NAMES) == null)\n          row.put(ATTACHMENT_NAMES, new ArrayList<String>());\n        List<String> names = (List<String>) row.get(ATTACHMENT_NAMES);\n        names.add(fileName);\n        row.put(ATTACHMENT_NAMES, names);\n      } else {\n        if (row.get(CONTENT) == null)\n          row.put(CONTENT, new ArrayList<String>());\n        List<String> contents = (List<String>) row.get(CONTENT);\n        contents.add(content);\n        row.put(CONTENT, contents);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/contrib/dataimporthandler-extras/src/java/org/apache/solr/handler/dataimport/MailEntityProcessor#addPartToDocument(Part,Map[String,Object],boolean).mjava","pathOld":"solr/contrib/dataimporthandler/src/extras/main/java/org/apache/solr/handler/dataimport/MailEntityProcessor#addPartToDocument(Part,Map[String,Object],boolean).mjava","sourceNew":"  public void addPartToDocument(Part part, Map<String, Object> row, boolean outerMost) throws Exception {\n    if (part instanceof Message) {\n      addEnvelopToDocument(part, row);\n    }\n\n    String ct = part.getContentType();\n    ContentType ctype = new ContentType(ct);\n    if (part.isMimeType(\"multipart/*\")) {\n      Multipart mp = (Multipart) part.getContent();\n      int count = mp.getCount();\n      if (part.isMimeType(\"multipart/alternative\"))\n        count = 1;\n      for (int i = 0; i < count; i++)\n        addPartToDocument(mp.getBodyPart(i), row, false);\n    } else if (part.isMimeType(\"message/rfc822\")) {\n      addPartToDocument((Part) part.getContent(), row, false);\n    } else {\n      String disp = part.getDisposition();\n      if (!processAttachment || (disp != null && disp.equalsIgnoreCase(Part.ATTACHMENT)))        return;\n      InputStream is = part.getInputStream();\n      String fileName = part.getFileName();\n      String content = ParseUtils.getStringContent(is, TikaConfig.getDefaultConfig(), ctype.getBaseType().toLowerCase(Locale.ENGLISH));\n      if (disp != null && disp.equalsIgnoreCase(Part.ATTACHMENT)) {\n        if (row.get(ATTACHMENT) == null)\n          row.put(ATTACHMENT, new ArrayList<String>());\n        List<String> contents = (List<String>) row.get(ATTACHMENT);\n        contents.add(content);\n        row.put(ATTACHMENT, contents);\n        if (row.get(ATTACHMENT_NAMES) == null)\n          row.put(ATTACHMENT_NAMES, new ArrayList<String>());\n        List<String> names = (List<String>) row.get(ATTACHMENT_NAMES);\n        names.add(fileName);\n        row.put(ATTACHMENT_NAMES, names);\n      } else {\n        if (row.get(CONTENT) == null)\n          row.put(CONTENT, new ArrayList<String>());\n        List<String> contents = (List<String>) row.get(CONTENT);\n        contents.add(content);\n        row.put(CONTENT, contents);\n      }\n    }\n  }\n\n","sourceOld":"  public void addPartToDocument(Part part, Map<String, Object> row, boolean outerMost) throws Exception {\n    if (part instanceof Message) {\n      addEnvelopToDocument(part, row);\n    }\n\n    String ct = part.getContentType();\n    ContentType ctype = new ContentType(ct);\n    if (part.isMimeType(\"multipart/*\")) {\n      Multipart mp = (Multipart) part.getContent();\n      int count = mp.getCount();\n      if (part.isMimeType(\"multipart/alternative\"))\n        count = 1;\n      for (int i = 0; i < count; i++)\n        addPartToDocument(mp.getBodyPart(i), row, false);\n    } else if (part.isMimeType(\"message/rfc822\")) {\n      addPartToDocument((Part) part.getContent(), row, false);\n    } else {\n      String disp = part.getDisposition();\n      if (!processAttachment || (disp != null && disp.equalsIgnoreCase(Part.ATTACHMENT)))        return;\n      InputStream is = part.getInputStream();\n      String fileName = part.getFileName();\n      String content = ParseUtils.getStringContent(is, TikaConfig.getDefaultConfig(), ctype.getBaseType().toLowerCase(Locale.ENGLISH));\n      if (disp != null && disp.equalsIgnoreCase(Part.ATTACHMENT)) {\n        if (row.get(ATTACHMENT) == null)\n          row.put(ATTACHMENT, new ArrayList<String>());\n        List<String> contents = (List<String>) row.get(ATTACHMENT);\n        contents.add(content);\n        row.put(ATTACHMENT, contents);\n        if (row.get(ATTACHMENT_NAMES) == null)\n          row.put(ATTACHMENT_NAMES, new ArrayList<String>());\n        List<String> names = (List<String>) row.get(ATTACHMENT_NAMES);\n        names.add(fileName);\n        row.put(ATTACHMENT_NAMES, names);\n      } else {\n        if (row.get(CONTENT) == null)\n          row.put(CONTENT, new ArrayList<String>());\n        List<String> contents = (List<String>) row.get(CONTENT);\n        contents.add(content);\n        row.put(CONTENT, contents);\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1da8d55113b689b06716246649de6f62430f15c0":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8","ad94625fb8d088209f46650c8097196fec67f00c"],"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"c26f00b574427b55127e869b935845554afde1fa":["b375ac28473e1310fa9ea99d95e9c6001e3719d5","d20d5e40789b1c42f4f926e3174b271256c43657"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"d20d5e40789b1c42f4f926e3174b271256c43657":["b375ac28473e1310fa9ea99d95e9c6001e3719d5"],"b375ac28473e1310fa9ea99d95e9c6001e3719d5":["1da8d55113b689b06716246649de6f62430f15c0"],"ad94625fb8d088209f46650c8097196fec67f00c":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c26f00b574427b55127e869b935845554afde1fa"]},"commit2Childs":{"1da8d55113b689b06716246649de6f62430f15c0":["b375ac28473e1310fa9ea99d95e9c6001e3719d5"],"893269407f5c988a4b2ee13c7ffc01ec43136c1d":["a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8"],"a89acb2b4321b599bbfa1e802c00c4dbbc8ee6b8":["1da8d55113b689b06716246649de6f62430f15c0"],"c26f00b574427b55127e869b935845554afde1fa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["893269407f5c988a4b2ee13c7ffc01ec43136c1d"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["ad94625fb8d088209f46650c8097196fec67f00c"],"d20d5e40789b1c42f4f926e3174b271256c43657":["c26f00b574427b55127e869b935845554afde1fa"],"b375ac28473e1310fa9ea99d95e9c6001e3719d5":["c26f00b574427b55127e869b935845554afde1fa","d20d5e40789b1c42f4f926e3174b271256c43657"],"ad94625fb8d088209f46650c8097196fec67f00c":["1da8d55113b689b06716246649de6f62430f15c0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}