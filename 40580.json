{"path":"solr/core/src/java/org/apache/solr/core/ConfigSolrXmlOld#initCoreList().mjava","commits":[{"id":"d264f386d864b5751209060e8886ca9845f70469","date":1372172126,"type":1,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/ConfigSolrXmlOld#initCoreList().mjava","pathOld":"solr/core/src/java/org/apache/solr/core/ConfigSolrXmlOld#initCoreList(CoreContainer).mjava","sourceNew":"  private void initCoreList() throws IOException {\n    \n    coreNodes = (NodeList) config.evaluate(\"solr/cores/core\",\n        XPathConstants.NODESET);\n    // Check a couple of error conditions\n    Set<String> names = new HashSet<String>(); // for duplicate names\n    Map<String,String> dirs = new HashMap<String,String>(); // for duplicate\n                                                            // data dirs.\n    \n    for (int idx = 0; idx < coreNodes.getLength(); ++idx) {\n      Node node = coreNodes.item(idx);\n      String name = DOMUtil.getAttr(node, CoreDescriptor.CORE_NAME, null);\n\n      String dataDir = DOMUtil.getAttr(node, CoreDescriptor.CORE_DATADIR, null);\n      if (dataDir != null) dataDir = PropertiesUtil.substituteProperty(dataDir, null);\n      if (name != null) {\n        if (!names.contains(name)) {\n          names.add(name);\n        } else {\n          String msg = String.format(Locale.ROOT,\n              \"More than one core defined for core named %s\", name);\n          log.error(msg);\n        }\n      }\n\n      String instDir = DOMUtil.getAttr(node, CoreDescriptor.CORE_INSTDIR, null);\n      if (instDir != null) instDir = PropertiesUtil.substituteProperty(instDir, null);\n\n      if (dataDir != null) {\n        String absData = null;\n        File dataFile = new File(dataDir);\n        if (dataFile.isAbsolute()) {\n          absData = dataFile.getCanonicalPath();\n        } else if (instDir != null) {\n          File instFile = new File(instDir);\n          absData = new File(instFile, dataDir).getCanonicalPath();\n        }\n        if (absData != null) {\n          if (!dirs.containsKey(absData)) {\n            dirs.put(absData, name);\n          } else {\n            String msg = String\n                .format(\n                    Locale.ROOT,\n                    \"More than one core points to data dir %s. They are in %s and %s\",\n                    absData, dirs.get(absData), name);\n            log.warn(msg);\n          }\n        }\n      }\n    }\n    \n  }\n\n","sourceOld":"  private void initCoreList(CoreContainer container) throws IOException {\n    \n    coreNodes = (NodeList) config.evaluate(\"solr/cores/core\",\n        XPathConstants.NODESET);\n    // Check a couple of error conditions\n    Set<String> names = new HashSet<String>(); // for duplicate names\n    Map<String,String> dirs = new HashMap<String,String>(); // for duplicate\n                                                            // data dirs.\n    \n    for (int idx = 0; idx < coreNodes.getLength(); ++idx) {\n      Node node = coreNodes.item(idx);\n      String name = DOMUtil.getAttr(node, CoreDescriptor.CORE_NAME, null);\n\n      String dataDir = DOMUtil.getAttr(node, CoreDescriptor.CORE_DATADIR, null);\n      if (dataDir != null) dataDir = PropertiesUtil.substituteProperty(dataDir, null);\n      if (name != null) {\n        if (!names.contains(name)) {\n          names.add(name);\n        } else {\n          String msg = String.format(Locale.ROOT,\n              \"More than one core defined for core named %s\", name);\n          log.error(msg);\n        }\n      }\n\n      String instDir = DOMUtil.getAttr(node, CoreDescriptor.CORE_INSTDIR, null);\n      if (instDir != null) instDir = PropertiesUtil.substituteProperty(instDir, null);\n\n      if (dataDir != null) {\n        String absData = null;\n        File dataFile = new File(dataDir);\n        if (dataFile.isAbsolute()) {\n          absData = dataFile.getCanonicalPath();\n        } else if (instDir != null) {\n          File instFile = new File(instDir);\n          absData = new File(instFile, dataDir).getCanonicalPath();\n        }\n        if (absData != null) {\n          if (!dirs.containsKey(absData)) {\n            dirs.put(absData, name);\n          } else {\n            String msg = String\n                .format(\n                    Locale.ROOT,\n                    \"More than one core points to data dir %s. They are in %s and %s\",\n                    absData, dirs.get(absData), name);\n            log.warn(msg);\n          }\n        }\n      }\n    }\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"354983dcdf70c800bf2573d10b54a7391b1dc167","date":1372183171,"type":5,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/ConfigSolrXmlOld#initCoreList(CoreContainer).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/ConfigSolrXmlOld#initCoreList().mjava","sourceNew":"  private void initCoreList(CoreContainer container) throws IOException {\n    \n    coreNodes = (NodeList) config.evaluate(\"solr/cores/core\",\n        XPathConstants.NODESET);\n    // Check a couple of error conditions\n    Set<String> names = new HashSet<String>(); // for duplicate names\n    Map<String,String> dirs = new HashMap<String,String>(); // for duplicate\n                                                            // data dirs.\n    \n    for (int idx = 0; idx < coreNodes.getLength(); ++idx) {\n      Node node = coreNodes.item(idx);\n      String name = DOMUtil.getAttr(node, CoreDescriptor.CORE_NAME, null);\n\n      String dataDir = DOMUtil.getAttr(node, CoreDescriptor.CORE_DATADIR, null);\n      if (dataDir != null) dataDir = PropertiesUtil.substituteProperty(dataDir, null);\n      if (name != null) {\n        if (!names.contains(name)) {\n          names.add(name);\n        } else {\n          String msg = String.format(Locale.ROOT,\n              \"More than one core defined for core named %s\", name);\n          log.error(msg);\n        }\n      }\n\n      String instDir = DOMUtil.getAttr(node, CoreDescriptor.CORE_INSTDIR, null);\n      if (instDir != null) instDir = PropertiesUtil.substituteProperty(instDir, null);\n\n      if (dataDir != null) {\n        String absData = null;\n        File dataFile = new File(dataDir);\n        if (dataFile.isAbsolute()) {\n          absData = dataFile.getCanonicalPath();\n        } else if (instDir != null) {\n          File instFile = new File(instDir);\n          absData = new File(instFile, dataDir).getCanonicalPath();\n        }\n        if (absData != null) {\n          if (!dirs.containsKey(absData)) {\n            dirs.put(absData, name);\n          } else {\n            String msg = String\n                .format(\n                    Locale.ROOT,\n                    \"More than one core points to data dir %s. They are in %s and %s\",\n                    absData, dirs.get(absData), name);\n            log.warn(msg);\n          }\n        }\n      }\n    }\n    \n  }\n\n","sourceOld":"  private void initCoreList() throws IOException {\n    \n    coreNodes = (NodeList) config.evaluate(\"solr/cores/core\",\n        XPathConstants.NODESET);\n    // Check a couple of error conditions\n    Set<String> names = new HashSet<String>(); // for duplicate names\n    Map<String,String> dirs = new HashMap<String,String>(); // for duplicate\n                                                            // data dirs.\n    \n    for (int idx = 0; idx < coreNodes.getLength(); ++idx) {\n      Node node = coreNodes.item(idx);\n      String name = DOMUtil.getAttr(node, CoreDescriptor.CORE_NAME, null);\n\n      String dataDir = DOMUtil.getAttr(node, CoreDescriptor.CORE_DATADIR, null);\n      if (dataDir != null) dataDir = PropertiesUtil.substituteProperty(dataDir, null);\n      if (name != null) {\n        if (!names.contains(name)) {\n          names.add(name);\n        } else {\n          String msg = String.format(Locale.ROOT,\n              \"More than one core defined for core named %s\", name);\n          log.error(msg);\n        }\n      }\n\n      String instDir = DOMUtil.getAttr(node, CoreDescriptor.CORE_INSTDIR, null);\n      if (instDir != null) instDir = PropertiesUtil.substituteProperty(instDir, null);\n\n      if (dataDir != null) {\n        String absData = null;\n        File dataFile = new File(dataDir);\n        if (dataFile.isAbsolute()) {\n          absData = dataFile.getCanonicalPath();\n        } else if (instDir != null) {\n          File instFile = new File(instDir);\n          absData = new File(instFile, dataDir).getCanonicalPath();\n        }\n        if (absData != null) {\n          if (!dirs.containsKey(absData)) {\n            dirs.put(absData, name);\n          } else {\n            String msg = String\n                .format(\n                    Locale.ROOT,\n                    \"More than one core points to data dir %s. They are in %s and %s\",\n                    absData, dirs.get(absData), name);\n            log.warn(msg);\n          }\n        }\n      }\n    }\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7116474e2e390259937401cf928323e0cbc75e60","date":1372780249,"type":1,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/ConfigSolrXmlOld#initCoreList().mjava","pathOld":"solr/core/src/java/org/apache/solr/core/ConfigSolrXmlOld#initCoreList(CoreContainer).mjava","sourceNew":"  private void initCoreList() throws IOException {\n    \n    coreNodes = (NodeList) config.evaluate(\"solr/cores/core\",\n        XPathConstants.NODESET);\n    // Check a couple of error conditions\n    Set<String> names = new HashSet<String>(); // for duplicate names\n    Map<String,String> dirs = new HashMap<String,String>(); // for duplicate\n                                                            // data dirs.\n    \n    for (int idx = 0; idx < coreNodes.getLength(); ++idx) {\n      Node node = coreNodes.item(idx);\n      String name = DOMUtil.getAttr(node, CoreDescriptor.CORE_NAME, null);\n\n      String dataDir = DOMUtil.getAttr(node, CoreDescriptor.CORE_DATADIR, null);\n      if (dataDir != null) dataDir = PropertiesUtil.substituteProperty(dataDir, null);\n      if (name != null) {\n        if (!names.contains(name)) {\n          names.add(name);\n        } else {\n          String msg = String.format(Locale.ROOT,\n              \"More than one core defined for core named %s\", name);\n          log.error(msg);\n        }\n      }\n\n      String instDir = DOMUtil.getAttr(node, CoreDescriptor.CORE_INSTDIR, null);\n      if (instDir != null) instDir = PropertiesUtil.substituteProperty(instDir, null);\n\n      if (dataDir != null) {\n        String absData = null;\n        File dataFile = new File(dataDir);\n        if (dataFile.isAbsolute()) {\n          absData = dataFile.getCanonicalPath();\n        } else if (instDir != null) {\n          File instFile = new File(instDir);\n          absData = new File(instFile, dataDir).getCanonicalPath();\n        }\n        if (absData != null) {\n          if (!dirs.containsKey(absData)) {\n            dirs.put(absData, name);\n          } else {\n            String msg = String\n                .format(\n                    Locale.ROOT,\n                    \"More than one core points to data dir %s. They are in %s and %s\",\n                    absData, dirs.get(absData), name);\n            log.warn(msg);\n          }\n        }\n      }\n    }\n    \n  }\n\n","sourceOld":"  private void initCoreList(CoreContainer container) throws IOException {\n    \n    coreNodes = (NodeList) config.evaluate(\"solr/cores/core\",\n        XPathConstants.NODESET);\n    // Check a couple of error conditions\n    Set<String> names = new HashSet<String>(); // for duplicate names\n    Map<String,String> dirs = new HashMap<String,String>(); // for duplicate\n                                                            // data dirs.\n    \n    for (int idx = 0; idx < coreNodes.getLength(); ++idx) {\n      Node node = coreNodes.item(idx);\n      String name = DOMUtil.getAttr(node, CoreDescriptor.CORE_NAME, null);\n\n      String dataDir = DOMUtil.getAttr(node, CoreDescriptor.CORE_DATADIR, null);\n      if (dataDir != null) dataDir = PropertiesUtil.substituteProperty(dataDir, null);\n      if (name != null) {\n        if (!names.contains(name)) {\n          names.add(name);\n        } else {\n          String msg = String.format(Locale.ROOT,\n              \"More than one core defined for core named %s\", name);\n          log.error(msg);\n        }\n      }\n\n      String instDir = DOMUtil.getAttr(node, CoreDescriptor.CORE_INSTDIR, null);\n      if (instDir != null) instDir = PropertiesUtil.substituteProperty(instDir, null);\n\n      if (dataDir != null) {\n        String absData = null;\n        File dataFile = new File(dataDir);\n        if (dataFile.isAbsolute()) {\n          absData = dataFile.getCanonicalPath();\n        } else if (instDir != null) {\n          File instFile = new File(instDir);\n          absData = new File(instFile, dataDir).getCanonicalPath();\n        }\n        if (absData != null) {\n          if (!dirs.containsKey(absData)) {\n            dirs.put(absData, name);\n          } else {\n            String msg = String\n                .format(\n                    Locale.ROOT,\n                    \"More than one core points to data dir %s. They are in %s and %s\",\n                    absData, dirs.get(absData), name);\n            log.warn(msg);\n          }\n        }\n      }\n    }\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"37a0f60745e53927c4c876cfe5b5a58170f0646c","date":1373994005,"type":0,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/core/ConfigSolrXmlOld#initCoreList().mjava","pathOld":"/dev/null","sourceNew":"  private void initCoreList() throws IOException {\n    \n    coreNodes = (NodeList) config.evaluate(\"solr/cores/core\",\n        XPathConstants.NODESET);\n    // Check a couple of error conditions\n    Set<String> names = new HashSet<String>(); // for duplicate names\n    Map<String,String> dirs = new HashMap<String,String>(); // for duplicate\n                                                            // data dirs.\n    \n    for (int idx = 0; idx < coreNodes.getLength(); ++idx) {\n      Node node = coreNodes.item(idx);\n      String name = DOMUtil.getAttr(node, CoreDescriptor.CORE_NAME, null);\n\n      String dataDir = DOMUtil.getAttr(node, CoreDescriptor.CORE_DATADIR, null);\n      if (dataDir != null) dataDir = PropertiesUtil.substituteProperty(dataDir, null);\n      if (name != null) {\n        if (!names.contains(name)) {\n          names.add(name);\n        } else {\n          String msg = String.format(Locale.ROOT,\n              \"More than one core defined for core named %s\", name);\n          log.error(msg);\n        }\n      }\n\n      String instDir = DOMUtil.getAttr(node, CoreDescriptor.CORE_INSTDIR, null);\n      if (instDir != null) instDir = PropertiesUtil.substituteProperty(instDir, null);\n\n      if (dataDir != null) {\n        String absData = null;\n        File dataFile = new File(dataDir);\n        if (dataFile.isAbsolute()) {\n          absData = dataFile.getCanonicalPath();\n        } else if (instDir != null) {\n          File instFile = new File(instDir);\n          absData = new File(instFile, dataDir).getCanonicalPath();\n        }\n        if (absData != null) {\n          if (!dirs.containsKey(absData)) {\n            dirs.put(absData, name);\n          } else {\n            String msg = String\n                .format(\n                    Locale.ROOT,\n                    \"More than one core points to data dir %s. They are in %s and %s\",\n                    absData, dirs.get(absData), name);\n            log.warn(msg);\n          }\n        }\n      }\n    }\n    \n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/ConfigSolrXmlOld#initCoreList().mjava","pathOld":"solr/core/src/java/org/apache/solr/core/ConfigSolrXmlOld#initCoreList().mjava","sourceNew":"  private void initCoreList() throws IOException {\n    \n    coreNodes = (NodeList) config.evaluate(\"solr/cores/core\",\n        XPathConstants.NODESET);\n    // Check a couple of error conditions\n    Set<String> names = new HashSet<>(); // for duplicate names\n    Map<String,String> dirs = new HashMap<>(); // for duplicate\n                                                            // data dirs.\n    \n    for (int idx = 0; idx < coreNodes.getLength(); ++idx) {\n      Node node = coreNodes.item(idx);\n      String name = DOMUtil.getAttr(node, CoreDescriptor.CORE_NAME, null);\n\n      String dataDir = DOMUtil.getAttr(node, CoreDescriptor.CORE_DATADIR, null);\n      if (dataDir != null) dataDir = PropertiesUtil.substituteProperty(dataDir, null);\n      if (name != null) {\n        if (!names.contains(name)) {\n          names.add(name);\n        } else {\n          String msg = String.format(Locale.ROOT,\n              \"More than one core defined for core named %s\", name);\n          log.error(msg);\n        }\n      }\n\n      String instDir = DOMUtil.getAttr(node, CoreDescriptor.CORE_INSTDIR, null);\n      if (instDir != null) instDir = PropertiesUtil.substituteProperty(instDir, null);\n\n      if (dataDir != null) {\n        String absData = null;\n        File dataFile = new File(dataDir);\n        if (dataFile.isAbsolute()) {\n          absData = dataFile.getCanonicalPath();\n        } else if (instDir != null) {\n          File instFile = new File(instDir);\n          absData = new File(instFile, dataDir).getCanonicalPath();\n        }\n        if (absData != null) {\n          if (!dirs.containsKey(absData)) {\n            dirs.put(absData, name);\n          } else {\n            String msg = String\n                .format(\n                    Locale.ROOT,\n                    \"More than one core points to data dir %s. They are in %s and %s\",\n                    absData, dirs.get(absData), name);\n            log.warn(msg);\n          }\n        }\n      }\n    }\n    \n  }\n\n","sourceOld":"  private void initCoreList() throws IOException {\n    \n    coreNodes = (NodeList) config.evaluate(\"solr/cores/core\",\n        XPathConstants.NODESET);\n    // Check a couple of error conditions\n    Set<String> names = new HashSet<String>(); // for duplicate names\n    Map<String,String> dirs = new HashMap<String,String>(); // for duplicate\n                                                            // data dirs.\n    \n    for (int idx = 0; idx < coreNodes.getLength(); ++idx) {\n      Node node = coreNodes.item(idx);\n      String name = DOMUtil.getAttr(node, CoreDescriptor.CORE_NAME, null);\n\n      String dataDir = DOMUtil.getAttr(node, CoreDescriptor.CORE_DATADIR, null);\n      if (dataDir != null) dataDir = PropertiesUtil.substituteProperty(dataDir, null);\n      if (name != null) {\n        if (!names.contains(name)) {\n          names.add(name);\n        } else {\n          String msg = String.format(Locale.ROOT,\n              \"More than one core defined for core named %s\", name);\n          log.error(msg);\n        }\n      }\n\n      String instDir = DOMUtil.getAttr(node, CoreDescriptor.CORE_INSTDIR, null);\n      if (instDir != null) instDir = PropertiesUtil.substituteProperty(instDir, null);\n\n      if (dataDir != null) {\n        String absData = null;\n        File dataFile = new File(dataDir);\n        if (dataFile.isAbsolute()) {\n          absData = dataFile.getCanonicalPath();\n        } else if (instDir != null) {\n          File instFile = new File(instDir);\n          absData = new File(instFile, dataDir).getCanonicalPath();\n        }\n        if (absData != null) {\n          if (!dirs.containsKey(absData)) {\n            dirs.put(absData, name);\n          } else {\n            String msg = String\n                .format(\n                    Locale.ROOT,\n                    \"More than one core points to data dir %s. They are in %s and %s\",\n                    absData, dirs.get(absData), name);\n            log.warn(msg);\n          }\n        }\n      }\n    }\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a877077e0a22a42eebce7d1052c58e97d3afb12d","date":1405981118,"type":3,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/ConfigSolrXmlOld#initCoreList().mjava","pathOld":"solr/core/src/java/org/apache/solr/core/ConfigSolrXmlOld#initCoreList().mjava","sourceNew":"  private void initCoreList() throws IOException {\n    \n    coreNodes = (NodeList) config.evaluate(\"solr/cores/core\",\n        XPathConstants.NODESET);\n    // Check a couple of error conditions\n    Set<String> names = new HashSet<>(); // for duplicate names\n    Map<String,String> dirs = new HashMap<>(); // for duplicate\n                                                            // data dirs.\n    \n    for (int idx = 0; idx < coreNodes.getLength(); ++idx) {\n      Node node = coreNodes.item(idx);\n      String name = DOMUtil.getAttr(node, CoreDescriptor.CORE_NAME, null);\n\n      String dataDir = DOMUtil.getAttr(node, CoreDescriptor.CORE_DATADIR, null);\n      if (name != null) {\n        if (!names.contains(name)) {\n          names.add(name);\n        } else {\n          String msg = String.format(Locale.ROOT,\n              \"More than one core defined for core named %s\", name);\n          log.error(msg);\n        }\n      }\n\n      String instDir = DOMUtil.getAttr(node, CoreDescriptor.CORE_INSTDIR, null);\n\n      if (dataDir != null) {\n        String absData = null;\n        File dataFile = new File(dataDir);\n        if (dataFile.isAbsolute()) {\n          absData = dataFile.getCanonicalPath();\n        } else if (instDir != null) {\n          File instFile = new File(instDir);\n          absData = new File(instFile, dataDir).getCanonicalPath();\n        }\n        if (absData != null) {\n          if (!dirs.containsKey(absData)) {\n            dirs.put(absData, name);\n          } else {\n            String msg = String\n                .format(\n                    Locale.ROOT,\n                    \"More than one core points to data dir %s. They are in %s and %s\",\n                    absData, dirs.get(absData), name);\n            log.warn(msg);\n          }\n        }\n      }\n    }\n    \n  }\n\n","sourceOld":"  private void initCoreList() throws IOException {\n    \n    coreNodes = (NodeList) config.evaluate(\"solr/cores/core\",\n        XPathConstants.NODESET);\n    // Check a couple of error conditions\n    Set<String> names = new HashSet<>(); // for duplicate names\n    Map<String,String> dirs = new HashMap<>(); // for duplicate\n                                                            // data dirs.\n    \n    for (int idx = 0; idx < coreNodes.getLength(); ++idx) {\n      Node node = coreNodes.item(idx);\n      String name = DOMUtil.getAttr(node, CoreDescriptor.CORE_NAME, null);\n\n      String dataDir = DOMUtil.getAttr(node, CoreDescriptor.CORE_DATADIR, null);\n      if (dataDir != null) dataDir = PropertiesUtil.substituteProperty(dataDir, null);\n      if (name != null) {\n        if (!names.contains(name)) {\n          names.add(name);\n        } else {\n          String msg = String.format(Locale.ROOT,\n              \"More than one core defined for core named %s\", name);\n          log.error(msg);\n        }\n      }\n\n      String instDir = DOMUtil.getAttr(node, CoreDescriptor.CORE_INSTDIR, null);\n      if (instDir != null) instDir = PropertiesUtil.substituteProperty(instDir, null);\n\n      if (dataDir != null) {\n        String absData = null;\n        File dataFile = new File(dataDir);\n        if (dataFile.isAbsolute()) {\n          absData = dataFile.getCanonicalPath();\n        } else if (instDir != null) {\n          File instFile = new File(instDir);\n          absData = new File(instFile, dataDir).getCanonicalPath();\n        }\n        if (absData != null) {\n          if (!dirs.containsKey(absData)) {\n            dirs.put(absData, name);\n          } else {\n            String msg = String\n                .format(\n                    Locale.ROOT,\n                    \"More than one core points to data dir %s. They are in %s and %s\",\n                    absData, dirs.get(absData), name);\n            log.warn(msg);\n          }\n        }\n      }\n    }\n    \n  }\n\n","bugFix":["55761c397b689def6ed1606fe3205fffd4e4bf29"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fd44bec977a26a118d9e809e2de6f7edb5ca0f39","date":1421673929,"type":4,"author":"Alan Woodward","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/core/ConfigSolrXmlOld#initCoreList().mjava","sourceNew":null,"sourceOld":"  private void initCoreList() throws IOException {\n    \n    coreNodes = (NodeList) config.evaluate(\"solr/cores/core\",\n        XPathConstants.NODESET);\n    // Check a couple of error conditions\n    Set<String> names = new HashSet<>(); // for duplicate names\n    Map<String,String> dirs = new HashMap<>(); // for duplicate\n                                                            // data dirs.\n    \n    for (int idx = 0; idx < coreNodes.getLength(); ++idx) {\n      Node node = coreNodes.item(idx);\n      String name = DOMUtil.getAttr(node, CoreDescriptor.CORE_NAME, null);\n\n      String dataDir = DOMUtil.getAttr(node, CoreDescriptor.CORE_DATADIR, null);\n      if (name != null) {\n        if (!names.contains(name)) {\n          names.add(name);\n        } else {\n          String msg = String.format(Locale.ROOT,\n              \"More than one core defined for core named %s\", name);\n          log.error(msg);\n        }\n      }\n\n      String instDir = DOMUtil.getAttr(node, CoreDescriptor.CORE_INSTDIR, null);\n\n      if (dataDir != null) {\n        String absData = null;\n        File dataFile = new File(dataDir);\n        if (dataFile.isAbsolute()) {\n          absData = dataFile.getCanonicalPath();\n        } else if (instDir != null) {\n          File instFile = new File(instDir);\n          absData = new File(instFile, dataDir).getCanonicalPath();\n        }\n        if (absData != null) {\n          if (!dirs.containsKey(absData)) {\n            dirs.put(absData, name);\n          } else {\n            String msg = String\n                .format(\n                    Locale.ROOT,\n                    \"More than one core points to data dir %s. They are in %s and %s\",\n                    absData, dirs.get(absData), name);\n            log.warn(msg);\n          }\n        }\n      }\n    }\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["7116474e2e390259937401cf928323e0cbc75e60"],"7116474e2e390259937401cf928323e0cbc75e60":["354983dcdf70c800bf2573d10b54a7391b1dc167"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","7116474e2e390259937401cf928323e0cbc75e60"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"354983dcdf70c800bf2573d10b54a7391b1dc167":["d264f386d864b5751209060e8886ca9845f70469"],"fd44bec977a26a118d9e809e2de6f7edb5ca0f39":["a877077e0a22a42eebce7d1052c58e97d3afb12d"],"a877077e0a22a42eebce7d1052c58e97d3afb12d":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"d264f386d864b5751209060e8886ca9845f70469":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["fd44bec977a26a118d9e809e2de6f7edb5ca0f39"]},"commit2Childs":{"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["a877077e0a22a42eebce7d1052c58e97d3afb12d"],"7116474e2e390259937401cf928323e0cbc75e60":["634f330c54fd3f9f491d52036dc3f40b4f4d8934","37a0f60745e53927c4c876cfe5b5a58170f0646c"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["37a0f60745e53927c4c876cfe5b5a58170f0646c","d264f386d864b5751209060e8886ca9845f70469"],"354983dcdf70c800bf2573d10b54a7391b1dc167":["7116474e2e390259937401cf928323e0cbc75e60"],"fd44bec977a26a118d9e809e2de6f7edb5ca0f39":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a877077e0a22a42eebce7d1052c58e97d3afb12d":["fd44bec977a26a118d9e809e2de6f7edb5ca0f39"],"d264f386d864b5751209060e8886ca9845f70469":["354983dcdf70c800bf2573d10b54a7391b1dc167"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["37a0f60745e53927c4c876cfe5b5a58170f0646c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}