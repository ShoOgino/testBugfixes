{"path":"contrib/misc/src/test/org/apache/lucene/queryParser/precedence/TestPrecedenceQueryParser#getLocalizedDate(int,int,int).mjava","commits":[{"id":"48bedd31c61edafb8baaff4bcbcac19449fb7c3a","date":1251468037,"type":1,"author":"Mark Robert Miller","isMerge":false,"pathNew":"contrib/misc/src/test/org/apache/lucene/queryParser/precedence/TestPrecedenceQueryParser#getLocalizedDate(int,int,int).mjava","pathOld":"contrib/miscellaneous/src/test/org/apache/lucene/queryParser/precedence/TestPrecedenceQueryParser#getLocalizedDate(int,int,int).mjava","sourceNew":"  public String getLocalizedDate(int year, int month, int day) {\n    DateFormat df = DateFormat.getDateInstance(DateFormat.SHORT);\n    Calendar calendar = new GregorianCalendar();\n    calendar.set(year, month, day);\n    return df.format(calendar.getTime());\n  }\n\n","sourceOld":"  public String getLocalizedDate(int year, int month, int day) {\n    DateFormat df = DateFormat.getDateInstance(DateFormat.SHORT);\n    Calendar calendar = new GregorianCalendar();\n    calendar.set(year, month, day);\n    return df.format(calendar.getTime());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"64a84446b679daf1e25d901bf647686ade7fc1f0","date":1260811919,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"contrib/misc/src/test/org/apache/lucene/queryParser/precedence/TestPrecedenceQueryParser#getLocalizedDate(int,int,int).mjava","pathOld":"contrib/misc/src/test/org/apache/lucene/queryParser/precedence/TestPrecedenceQueryParser#getLocalizedDate(int,int,int).mjava","sourceNew":"  public String getLocalizedDate(int year, int month, int day) {\n    DateFormat df = DateFormat.getDateInstance(DateFormat.SHORT);\n    Calendar calendar = new GregorianCalendar();\n    calendar.clear();\n    calendar.set(year, month, day);\n    calendar.set(Calendar.HOUR_OF_DAY, 23);\n    calendar.set(Calendar.MINUTE, 59);\n    calendar.set(Calendar.SECOND, 59);\n    calendar.set(Calendar.MILLISECOND, 999);\n    return df.format(calendar.getTime());\n  }\n\n","sourceOld":"  public String getLocalizedDate(int year, int month, int day) {\n    DateFormat df = DateFormat.getDateInstance(DateFormat.SHORT);\n    Calendar calendar = new GregorianCalendar();\n    calendar.set(year, month, day);\n    return df.format(calendar.getTime());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/contrib/misc/src/test/org/apache/lucene/queryParser/precedence/TestPrecedenceQueryParser#getLocalizedDate(int,int,int).mjava","pathOld":"contrib/misc/src/test/org/apache/lucene/queryParser/precedence/TestPrecedenceQueryParser#getLocalizedDate(int,int,int).mjava","sourceNew":"  public String getLocalizedDate(int year, int month, int day) {\n    DateFormat df = DateFormat.getDateInstance(DateFormat.SHORT);\n    Calendar calendar = new GregorianCalendar();\n    calendar.clear();\n    calendar.set(year, month, day);\n    calendar.set(Calendar.HOUR_OF_DAY, 23);\n    calendar.set(Calendar.MINUTE, 59);\n    calendar.set(Calendar.SECOND, 59);\n    calendar.set(Calendar.MILLISECOND, 999);\n    return df.format(calendar.getTime());\n  }\n\n","sourceOld":"  public String getLocalizedDate(int year, int month, int day) {\n    DateFormat df = DateFormat.getDateInstance(DateFormat.SHORT);\n    Calendar calendar = new GregorianCalendar();\n    calendar.clear();\n    calendar.set(year, month, day);\n    calendar.set(Calendar.HOUR_OF_DAY, 23);\n    calendar.set(Calendar.MINUTE, 59);\n    calendar.set(Calendar.SECOND, 59);\n    calendar.set(Calendar.MILLISECOND, 999);\n    return df.format(calendar.getTime());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"64a84446b679daf1e25d901bf647686ade7fc1f0":["48bedd31c61edafb8baaff4bcbcac19449fb7c3a"],"48bedd31c61edafb8baaff4bcbcac19449fb7c3a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["64a84446b679daf1e25d901bf647686ade7fc1f0"]},"commit2Childs":{"64a84446b679daf1e25d901bf647686ade7fc1f0":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"48bedd31c61edafb8baaff4bcbcac19449fb7c3a":["64a84446b679daf1e25d901bf647686ade7fc1f0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["48bedd31c61edafb8baaff4bcbcac19449fb7c3a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}