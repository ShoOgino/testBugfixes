{"path":"lucene/contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/builders/NumericRangeFilterBuilder#setStrictMode(boolean).mjava","commits":[{"id":"05bdab91555bc2728769812fa2e40814e900f661","date":1269650215,"type":0,"author":"Mark Harwood","isMerge":false,"pathNew":"lucene/contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/builders/NumericRangeFilterBuilder#setStrictMode(boolean).mjava","pathOld":"/dev/null","sourceNew":"\t/**\n\t * Specifies how this {@link NumericRangeFilterBuilder} will handle errors.\n\t * <p>\n\t * If this is set to true, {@link #getFilter(Element)} will throw a\n\t * {@link ParserException} if it is unable to parse the lowerTerm or upperTerm\n\t * into the appropriate numeric type. If this is set to false, then this\n\t * exception will be silently ignored and the resulting filter will not match\n\t * any documents.\n\t * <p>\n\t * Defaults to false.\n\t * \n\t * @param strictMode\n\t */\n\tpublic void setStrictMode(boolean strictMode) {\n\t\tthis.strictMode = strictMode;\n\t}\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b68b0aeb05de4dd5b24fc5ffd51e2fbd5d571df2","date":1313460667,"type":3,"author":"Christopher John Male","isMerge":false,"pathNew":"lucene/contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/builders/NumericRangeFilterBuilder#setStrictMode(boolean).mjava","pathOld":"lucene/contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/builders/NumericRangeFilterBuilder#setStrictMode(boolean).mjava","sourceNew":"  /**\n   * Specifies how this {@link NumericRangeFilterBuilder} will handle errors.\n   * <p/>\n   * If this is set to true, {@link #getFilter(Element)} will throw a\n   * {@link ParserException} if it is unable to parse the lowerTerm or upperTerm\n   * into the appropriate numeric type. If this is set to false, then this\n   * exception will be silently ignored and the resulting filter will not match\n   * any documents.\n   * <p/>\n   * Defaults to false.\n   *\n   * @param strictMode\n   */\n  public void setStrictMode(boolean strictMode) {\n    this.strictMode = strictMode;\n  }\n\n","sourceOld":"\t/**\n\t * Specifies how this {@link NumericRangeFilterBuilder} will handle errors.\n\t * <p>\n\t * If this is set to true, {@link #getFilter(Element)} will throw a\n\t * {@link ParserException} if it is unable to parse the lowerTerm or upperTerm\n\t * into the appropriate numeric type. If this is set to false, then this\n\t * exception will be silently ignored and the resulting filter will not match\n\t * any documents.\n\t * <p>\n\t * Defaults to false.\n\t * \n\t * @param strictMode\n\t */\n\tpublic void setStrictMode(boolean strictMode) {\n\t\tthis.strictMode = strictMode;\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"251550f5d19b526a76f8c5126ae7bb2d22cf8935","date":1315202008,"type":5,"author":"Christopher John Male","isMerge":false,"pathNew":"modules/queryparser/src/java/org/apache/lucene/queryparser/xml/builders/NumericRangeFilterBuilder#setStrictMode(boolean).mjava","pathOld":"lucene/contrib/xml-query-parser/src/java/org/apache/lucene/xmlparser/builders/NumericRangeFilterBuilder#setStrictMode(boolean).mjava","sourceNew":"  /**\n   * Specifies how this {@link NumericRangeFilterBuilder} will handle errors.\n   * <p/>\n   * If this is set to true, {@link #getFilter(Element)} will throw a\n   * {@link ParserException} if it is unable to parse the lowerTerm or upperTerm\n   * into the appropriate numeric type. If this is set to false, then this\n   * exception will be silently ignored and the resulting filter will not match\n   * any documents.\n   * <p/>\n   * Defaults to false.\n   *\n   * @param strictMode\n   */\n  public void setStrictMode(boolean strictMode) {\n    this.strictMode = strictMode;\n  }\n\n","sourceOld":"  /**\n   * Specifies how this {@link NumericRangeFilterBuilder} will handle errors.\n   * <p/>\n   * If this is set to true, {@link #getFilter(Element)} will throw a\n   * {@link ParserException} if it is unable to parse the lowerTerm or upperTerm\n   * into the appropriate numeric type. If this is set to false, then this\n   * exception will be silently ignored and the resulting filter will not match\n   * any documents.\n   * <p/>\n   * Defaults to false.\n   *\n   * @param strictMode\n   */\n  public void setStrictMode(boolean strictMode) {\n    this.strictMode = strictMode;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b68b0aeb05de4dd5b24fc5ffd51e2fbd5d571df2":["05bdab91555bc2728769812fa2e40814e900f661"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"251550f5d19b526a76f8c5126ae7bb2d22cf8935":["b68b0aeb05de4dd5b24fc5ffd51e2fbd5d571df2"],"05bdab91555bc2728769812fa2e40814e900f661":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["251550f5d19b526a76f8c5126ae7bb2d22cf8935"]},"commit2Childs":{"b68b0aeb05de4dd5b24fc5ffd51e2fbd5d571df2":["251550f5d19b526a76f8c5126ae7bb2d22cf8935"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["05bdab91555bc2728769812fa2e40814e900f661"],"251550f5d19b526a76f8c5126ae7bb2d22cf8935":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"05bdab91555bc2728769812fa2e40814e900f661":["b68b0aeb05de4dd5b24fc5ffd51e2fbd5d571df2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}