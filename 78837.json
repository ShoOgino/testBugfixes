{"path":"src/test/org/apache/solr/handler/TestReplicationHandler#testStopPoll().mjava","commits":[{"id":"dd564545498afb928bdfecf369ec06cd377413d2","date":1230103123,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"src/test/org/apache/solr/handler/TestReplicationHandler#testStopPoll().mjava","pathOld":"/dev/null","sourceNew":"  public void testStopPoll() throws Exception {\n    // Test:\n    // setup master/slave.\n    // stop polling on slave, add a doc to master and verify slave hasn't picked it.\n\n    //add 500 docs to master\n    for (int i = 0; i < 500; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n\n    NamedList masterQueryRsp = query(\"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(500, masterQueryResult.getNumFound());\n\n    //sleep for pollinterval time 3s, to let slave pull data.\n    Thread.sleep(3000);\n    //get docs from slave and check if number is equal to master\n    NamedList slaveQueryRsp = query(\"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(500, slaveQueryResult.getNumFound());\n\n    //compare results\n    String cmp = TestDistributedSearch.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n\n    // start stop polling test\n    String masterUrl = \"http://localhost:\" + slaveJetty.getLocalPort() + \"/solr/replication?command=disablepoll\";\n    URL url = new URL(masterUrl);\n    InputStream stream = url.openStream();\n    try {\n      stream.close();\n    } catch (IOException e) {\n      //e.printStackTrace();\n    }\n    index(masterClient, \"id\", 501, \"name\", \"name = \" + 501);\n    masterClient.commit();\n    //sleep for pollinterval time 3s, to let slave pull data.\n    Thread.sleep(3000);\n    //get docs from slave and check if number is equal to master\n    slaveQueryRsp = query(\"*:*\", slaveClient);\n    slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(500, slaveQueryResult.getNumFound());\n    //get docs from slave and check if number is equal to master\n    slaveQueryRsp = query(\"*:*\", masterClient);\n    slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(501, slaveQueryResult.getNumFound());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["379ec215b82e132c6741b5211d9cd8cfc30aa02a"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/handler/TestReplicationHandler#testStopPoll().mjava","pathOld":"src/test/org/apache/solr/handler/TestReplicationHandler#testStopPoll().mjava","sourceNew":"  public void testStopPoll() throws Exception {\n    // Test:\n    // setup master/slave.\n    // stop polling on slave, add a doc to master and verify slave hasn't picked it.\n\n    //add 500 docs to master\n    for (int i = 0; i < 500; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n\n    NamedList masterQueryRsp = query(\"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(500, masterQueryResult.getNumFound());\n\n    //sleep for pollinterval time 3s, to let slave pull data.\n    Thread.sleep(3000);\n    //get docs from slave and check if number is equal to master\n    NamedList slaveQueryRsp = query(\"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(500, slaveQueryResult.getNumFound());\n\n    //compare results\n    String cmp = TestDistributedSearch.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n\n    // start stop polling test\n    String masterUrl = \"http://localhost:\" + slaveJetty.getLocalPort() + \"/solr/replication?command=disablepoll\";\n    URL url = new URL(masterUrl);\n    InputStream stream = url.openStream();\n    try {\n      stream.close();\n    } catch (IOException e) {\n      //e.printStackTrace();\n    }\n    index(masterClient, \"id\", 501, \"name\", \"name = \" + 501);\n    masterClient.commit();\n    //sleep for pollinterval time 3s, to let slave pull data.\n    Thread.sleep(3000);\n    //get docs from slave and check if number is equal to master\n    slaveQueryRsp = query(\"*:*\", slaveClient);\n    slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(500, slaveQueryResult.getNumFound());\n    //get docs from slave and check if number is equal to master\n    slaveQueryRsp = query(\"*:*\", masterClient);\n    slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(501, slaveQueryResult.getNumFound());\n  }\n\n","sourceOld":"  public void testStopPoll() throws Exception {\n    // Test:\n    // setup master/slave.\n    // stop polling on slave, add a doc to master and verify slave hasn't picked it.\n\n    //add 500 docs to master\n    for (int i = 0; i < 500; i++)\n      index(masterClient, \"id\", i, \"name\", \"name = \" + i);\n\n    masterClient.commit();\n\n    NamedList masterQueryRsp = query(\"*:*\", masterClient);\n    SolrDocumentList masterQueryResult = (SolrDocumentList) masterQueryRsp.get(\"response\");\n    assertEquals(500, masterQueryResult.getNumFound());\n\n    //sleep for pollinterval time 3s, to let slave pull data.\n    Thread.sleep(3000);\n    //get docs from slave and check if number is equal to master\n    NamedList slaveQueryRsp = query(\"*:*\", slaveClient);\n    SolrDocumentList slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(500, slaveQueryResult.getNumFound());\n\n    //compare results\n    String cmp = TestDistributedSearch.compare(masterQueryResult, slaveQueryResult, 0, null);\n    assertEquals(null, cmp);\n\n    // start stop polling test\n    String masterUrl = \"http://localhost:\" + slaveJetty.getLocalPort() + \"/solr/replication?command=disablepoll\";\n    URL url = new URL(masterUrl);\n    InputStream stream = url.openStream();\n    try {\n      stream.close();\n    } catch (IOException e) {\n      //e.printStackTrace();\n    }\n    index(masterClient, \"id\", 501, \"name\", \"name = \" + 501);\n    masterClient.commit();\n    //sleep for pollinterval time 3s, to let slave pull data.\n    Thread.sleep(3000);\n    //get docs from slave and check if number is equal to master\n    slaveQueryRsp = query(\"*:*\", slaveClient);\n    slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(500, slaveQueryResult.getNumFound());\n    //get docs from slave and check if number is equal to master\n    slaveQueryRsp = query(\"*:*\", masterClient);\n    slaveQueryResult = (SolrDocumentList) slaveQueryRsp.get(\"response\");\n    assertEquals(501, slaveQueryResult.getNumFound());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["dd564545498afb928bdfecf369ec06cd377413d2"],"dd564545498afb928bdfecf369ec06cd377413d2":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["dd564545498afb928bdfecf369ec06cd377413d2"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"dd564545498afb928bdfecf369ec06cd377413d2":["ad94625fb8d088209f46650c8097196fec67f00c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}