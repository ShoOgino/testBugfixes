{"path":"lucene/core/src/test/org/apache/lucene/TestDemoDocValue#testMergeAwayAllValues().mjava","commits":[{"id":"4c54a8d0edc6c5b7196804fa09a42a607b4aad35","date":1360633612,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/TestDemoDocValue#testMergeAwayAllValues().mjava","pathOld":"/dev/null","sourceNew":"  public void testMergeAwayAllValues() throws IOException {\n    Directory directory = newDirectory();\n    Analyzer analyzer = new MockAnalyzer(random());\n    IndexWriterConfig iwconfig = newIndexWriterConfig(TEST_VERSION_CURRENT, analyzer);\n    iwconfig.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iwriter = new RandomIndexWriter(random(), directory, iwconfig);\n    \n    Document doc = new Document();\n    doc.add(new StringField(\"id\", \"0\", Field.Store.NO));\n    iwriter.addDocument(doc);    \n    doc = new Document();\n    doc.add(new StringField(\"id\", \"1\", Field.Store.NO));\n    doc.add(new SortedSetDocValuesField(\"field\", new BytesRef(\"hello\")));\n    iwriter.addDocument(doc);\n    iwriter.commit();\n    iwriter.deleteDocuments(new Term(\"id\", \"1\"));\n    iwriter.forceMerge(1);\n    \n    DirectoryReader ireader = iwriter.getReader();\n    iwriter.close();\n    \n    SortedSetDocValues dv = getOnlySegmentReader(ireader).getSortedSetDocValues(\"field\");\n    assertEquals(0, dv.getValueCount());\n    \n    ireader.close();\n    directory.close();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["0bdb67d0b49ddf963c3bfc4975fce171ad3aacb1"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"56fca4cf418a84a71d0701bbb6fda4db84fa5796","date":1361031660,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/TestDemoDocValue#testSortedSetMergeAwayAllValues().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/TestDemoDocValue#testMergeAwayAllValues().mjava","sourceNew":"  public void testSortedSetMergeAwayAllValues() throws IOException {\n    Directory directory = newDirectory();\n    Analyzer analyzer = new MockAnalyzer(random());\n    IndexWriterConfig iwconfig = newIndexWriterConfig(TEST_VERSION_CURRENT, analyzer);\n    iwconfig.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iwriter = new RandomIndexWriter(random(), directory, iwconfig);\n    \n    Document doc = new Document();\n    doc.add(new StringField(\"id\", \"0\", Field.Store.NO));\n    iwriter.addDocument(doc);    \n    doc = new Document();\n    doc.add(new StringField(\"id\", \"1\", Field.Store.NO));\n    doc.add(new SortedSetDocValuesField(\"field\", new BytesRef(\"hello\")));\n    iwriter.addDocument(doc);\n    iwriter.commit();\n    iwriter.deleteDocuments(new Term(\"id\", \"1\"));\n    iwriter.forceMerge(1);\n    \n    DirectoryReader ireader = iwriter.getReader();\n    iwriter.close();\n    \n    SortedSetDocValues dv = getOnlySegmentReader(ireader).getSortedSetDocValues(\"field\");\n    assertEquals(0, dv.getValueCount());\n    \n    ireader.close();\n    directory.close();\n  }\n\n","sourceOld":"  public void testMergeAwayAllValues() throws IOException {\n    Directory directory = newDirectory();\n    Analyzer analyzer = new MockAnalyzer(random());\n    IndexWriterConfig iwconfig = newIndexWriterConfig(TEST_VERSION_CURRENT, analyzer);\n    iwconfig.setMergePolicy(newLogMergePolicy());\n    RandomIndexWriter iwriter = new RandomIndexWriter(random(), directory, iwconfig);\n    \n    Document doc = new Document();\n    doc.add(new StringField(\"id\", \"0\", Field.Store.NO));\n    iwriter.addDocument(doc);    \n    doc = new Document();\n    doc.add(new StringField(\"id\", \"1\", Field.Store.NO));\n    doc.add(new SortedSetDocValuesField(\"field\", new BytesRef(\"hello\")));\n    iwriter.addDocument(doc);\n    iwriter.commit();\n    iwriter.deleteDocuments(new Term(\"id\", \"1\"));\n    iwriter.forceMerge(1);\n    \n    DirectoryReader ireader = iwriter.getReader();\n    iwriter.close();\n    \n    SortedSetDocValues dv = getOnlySegmentReader(ireader).getSortedSetDocValues(\"field\");\n    assertEquals(0, dv.getValueCount());\n    \n    ireader.close();\n    directory.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"56fca4cf418a84a71d0701bbb6fda4db84fa5796":["4c54a8d0edc6c5b7196804fa09a42a607b4aad35"],"4c54a8d0edc6c5b7196804fa09a42a607b4aad35":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4c54a8d0edc6c5b7196804fa09a42a607b4aad35","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"56fca4cf418a84a71d0701bbb6fda4db84fa5796":[],"4c54a8d0edc6c5b7196804fa09a42a607b4aad35":["56fca4cf418a84a71d0701bbb6fda4db84fa5796"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["56fca4cf418a84a71d0701bbb6fda4db84fa5796","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}