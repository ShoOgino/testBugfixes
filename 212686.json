{"path":"lucene/core/src/java/org/apache/lucene/index/MappingMultiPostingsEnum#MappingMultiPostingsEnum(String,MergeState).mjava","commits":[{"id":"35fb92999b9df7df2ce2b35b83a044cbede61f45","date":1429037650,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MappingMultiPostingsEnum#MappingMultiPostingsEnum(String,MergeState).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/MappingMultiPostingsEnum#MappingMultiPostingsEnum(MergeState).mjava","sourceNew":"  /** Sole constructor. */\n  public MappingMultiPostingsEnum(String field, MergeState mergeState) {\n    this.field = field;\n    this.mergeState = mergeState;\n  }\n\n","sourceOld":"  /** Sole constructor. */\n  public MappingMultiPostingsEnum(MergeState mergeState) {\n    this.mergeState = mergeState;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ceaef6cfc68c8ab22a684192e469a8280f9e6e70","date":1462354657,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MappingMultiPostingsEnum#MappingMultiPostingsEnum(String,MergeState).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/MappingMultiPostingsEnum#MappingMultiPostingsEnum(String,MergeState).mjava","sourceNew":"  /** Sole constructor. */\n  public MappingMultiPostingsEnum(String field, MergeState mergeState) throws IOException {\n    this.field = field;\n    allSubs = new MappingPostingsSub[mergeState.fieldsProducers.length];\n    for(int i=0;i<allSubs.length;i++) {\n      // nocommit delDocMaps?\n      allSubs[i] = new MappingPostingsSub(mergeState.docMaps[i], mergeState.liveDocs[i]);\n    }\n    this.docIDMerger = new DocIDMerger<MappingPostingsSub>(subs, allSubs.length, mergeState.segmentInfo.getIndexSort() != null);\n  }\n\n","sourceOld":"  /** Sole constructor. */\n  public MappingMultiPostingsEnum(String field, MergeState mergeState) {\n    this.field = field;\n    this.mergeState = mergeState;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fbe8fc0e68a5e2e7acce82ba880a982bd15cfab8","date":1462567286,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MappingMultiPostingsEnum#MappingMultiPostingsEnum(String,MergeState).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/MappingMultiPostingsEnum#MappingMultiPostingsEnum(String,MergeState).mjava","sourceNew":"  /** Sole constructor. */\n  public MappingMultiPostingsEnum(String field, MergeState mergeState) throws IOException {\n    this.field = field;\n    allSubs = new MappingPostingsSub[mergeState.fieldsProducers.length];\n    for(int i=0;i<allSubs.length;i++) {\n      allSubs[i] = new MappingPostingsSub(mergeState.docMaps[i], mergeState.liveDocs[i]);\n    }\n    this.docIDMerger = new DocIDMerger<MappingPostingsSub>(subs, allSubs.length, mergeState.segmentInfo.getIndexSort() != null);\n  }\n\n","sourceOld":"  /** Sole constructor. */\n  public MappingMultiPostingsEnum(String field, MergeState mergeState) throws IOException {\n    this.field = field;\n    allSubs = new MappingPostingsSub[mergeState.fieldsProducers.length];\n    for(int i=0;i<allSubs.length;i++) {\n      // nocommit delDocMaps?\n      allSubs[i] = new MappingPostingsSub(mergeState.docMaps[i], mergeState.liveDocs[i]);\n    }\n    this.docIDMerger = new DocIDMerger<MappingPostingsSub>(subs, allSubs.length, mergeState.segmentInfo.getIndexSort() != null);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6d8200beeffd3fa5155855f4cb8a8a5e38aeff14","date":1462698019,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MappingMultiPostingsEnum#MappingMultiPostingsEnum(String,MergeState).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/MappingMultiPostingsEnum#MappingMultiPostingsEnum(String,MergeState).mjava","sourceNew":"  /** Sole constructor. */\n  public MappingMultiPostingsEnum(String field, MergeState mergeState) throws IOException {\n    this.field = field;\n    allSubs = new MappingPostingsSub[mergeState.fieldsProducers.length];\n    for(int i=0;i<allSubs.length;i++) {\n      allSubs[i] = new MappingPostingsSub(mergeState.docMaps[i]);\n    }\n    this.docIDMerger = new DocIDMerger<MappingPostingsSub>(subs, allSubs.length, mergeState.segmentInfo.getIndexSort() != null);\n  }\n\n","sourceOld":"  /** Sole constructor. */\n  public MappingMultiPostingsEnum(String field, MergeState mergeState) throws IOException {\n    this.field = field;\n    allSubs = new MappingPostingsSub[mergeState.fieldsProducers.length];\n    for(int i=0;i<allSubs.length;i++) {\n      allSubs[i] = new MappingPostingsSub(mergeState.docMaps[i], mergeState.liveDocs[i]);\n    }\n    this.docIDMerger = new DocIDMerger<MappingPostingsSub>(subs, allSubs.length, mergeState.segmentInfo.getIndexSort() != null);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3d33e731a93d4b57e662ff094f64f94a745422d4","date":1463128289,"type":3,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MappingMultiPostingsEnum#MappingMultiPostingsEnum(String,MergeState).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/MappingMultiPostingsEnum#MappingMultiPostingsEnum(String,MergeState).mjava","sourceNew":"  /** Sole constructor. */\n  public MappingMultiPostingsEnum(String field, MergeState mergeState) throws IOException {\n    this.field = field;\n    allSubs = new MappingPostingsSub[mergeState.fieldsProducers.length];\n    for(int i=0;i<allSubs.length;i++) {\n      allSubs[i] = new MappingPostingsSub(mergeState.docMaps[i]);\n    }\n    this.docIDMerger = new DocIDMerger<MappingPostingsSub>(subs, allSubs.length, mergeState.segmentInfo.getIndexSort() != null);\n  }\n\n","sourceOld":"  /** Sole constructor. */\n  public MappingMultiPostingsEnum(String field, MergeState mergeState) {\n    this.field = field;\n    this.mergeState = mergeState;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0ad30c6a479e764150a3316e57263319775f1df2","date":1463395403,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MappingMultiPostingsEnum#MappingMultiPostingsEnum(String,MergeState).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/MappingMultiPostingsEnum#MappingMultiPostingsEnum(String,MergeState).mjava","sourceNew":"  /** Sole constructor. */\n  public MappingMultiPostingsEnum(String field, MergeState mergeState) throws IOException {\n    this.field = field;\n    allSubs = new MappingPostingsSub[mergeState.fieldsProducers.length];\n    for(int i=0;i<allSubs.length;i++) {\n      allSubs[i] = new MappingPostingsSub(mergeState.docMaps[i]);\n    }\n    this.docIDMerger = new DocIDMerger<MappingPostingsSub>(subs, allSubs.length, mergeState.segmentInfo.getIndexSort() != null);\n  }\n\n","sourceOld":"  /** Sole constructor. */\n  public MappingMultiPostingsEnum(String field, MergeState mergeState) {\n    this.field = field;\n    this.mergeState = mergeState;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d470c8182e92b264680e34081b75e70a9f2b3c89","date":1463985353,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MappingMultiPostingsEnum#MappingMultiPostingsEnum(String,MergeState).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/MappingMultiPostingsEnum#MappingMultiPostingsEnum(String,MergeState).mjava","sourceNew":"  /** Sole constructor. */\n  public MappingMultiPostingsEnum(String field, MergeState mergeState) throws IOException {\n    this.field = field;\n    allSubs = new MappingPostingsSub[mergeState.fieldsProducers.length];\n    for(int i=0;i<allSubs.length;i++) {\n      allSubs[i] = new MappingPostingsSub(mergeState.docMaps[i]);\n    }\n    this.docIDMerger = new DocIDMerger<MappingPostingsSub>(subs, allSubs.length, mergeState.segmentInfo.getIndexSort() != null);\n  }\n\n","sourceOld":"  /** Sole constructor. */\n  public MappingMultiPostingsEnum(String field, MergeState mergeState) {\n    this.field = field;\n    this.mergeState = mergeState;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MappingMultiPostingsEnum#MappingMultiPostingsEnum(String,MergeState).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/MappingMultiPostingsEnum#MappingMultiPostingsEnum(String,MergeState).mjava","sourceNew":"  /** Sole constructor. */\n  public MappingMultiPostingsEnum(String field, MergeState mergeState) throws IOException {\n    this.field = field;\n    allSubs = new MappingPostingsSub[mergeState.fieldsProducers.length];\n    for(int i=0;i<allSubs.length;i++) {\n      allSubs[i] = new MappingPostingsSub(mergeState.docMaps[i]);\n    }\n    this.docIDMerger = new DocIDMerger<MappingPostingsSub>(subs, allSubs.length, mergeState.segmentInfo.getIndexSort() != null);\n  }\n\n","sourceOld":"  /** Sole constructor. */\n  public MappingMultiPostingsEnum(String field, MergeState mergeState) {\n    this.field = field;\n    this.mergeState = mergeState;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"653128722fb3b4713ac331c621491a93f34a4a22","date":1479841816,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MappingMultiPostingsEnum#MappingMultiPostingsEnum(String,MergeState).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/MappingMultiPostingsEnum#MappingMultiPostingsEnum(String,MergeState).mjava","sourceNew":"  /** Sole constructor. */\n  public MappingMultiPostingsEnum(String field, MergeState mergeState) throws IOException {\n    this.field = field;\n    allSubs = new MappingPostingsSub[mergeState.fieldsProducers.length];\n    for(int i=0;i<allSubs.length;i++) {\n      allSubs[i] = new MappingPostingsSub(mergeState.docMaps[i]);\n    }\n    this.docIDMerger = new DocIDMerger<MappingPostingsSub>(subs, allSubs.length, mergeState.needsIndexSort);\n  }\n\n","sourceOld":"  /** Sole constructor. */\n  public MappingMultiPostingsEnum(String field, MergeState mergeState) throws IOException {\n    this.field = field;\n    allSubs = new MappingPostingsSub[mergeState.fieldsProducers.length];\n    for(int i=0;i<allSubs.length;i++) {\n      allSubs[i] = new MappingPostingsSub(mergeState.docMaps[i]);\n    }\n    this.docIDMerger = new DocIDMerger<MappingPostingsSub>(subs, allSubs.length, mergeState.segmentInfo.getIndexSort() != null);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"727bb765ff2542275f6d31f67be18d7104bae148","date":1480353976,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MappingMultiPostingsEnum#MappingMultiPostingsEnum(String,MergeState).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/MappingMultiPostingsEnum#MappingMultiPostingsEnum(String,MergeState).mjava","sourceNew":"  /** Sole constructor. */\n  public MappingMultiPostingsEnum(String field, MergeState mergeState) throws IOException {\n    this.field = field;\n    allSubs = new MappingPostingsSub[mergeState.fieldsProducers.length];\n    for(int i=0;i<allSubs.length;i++) {\n      allSubs[i] = new MappingPostingsSub(mergeState.docMaps[i]);\n    }\n    this.docIDMerger = new DocIDMerger<MappingPostingsSub>(subs, allSubs.length, mergeState.needsIndexSort);\n  }\n\n","sourceOld":"  /** Sole constructor. */\n  public MappingMultiPostingsEnum(String field, MergeState mergeState) throws IOException {\n    this.field = field;\n    allSubs = new MappingPostingsSub[mergeState.fieldsProducers.length];\n    for(int i=0;i<allSubs.length;i++) {\n      allSubs[i] = new MappingPostingsSub(mergeState.docMaps[i]);\n    }\n    this.docIDMerger = new DocIDMerger<MappingPostingsSub>(subs, allSubs.length, mergeState.segmentInfo.getIndexSort() != null);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d85b6e22926e7564c040d2a864f4887f6c59fa92","date":1482349496,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MappingMultiPostingsEnum#MappingMultiPostingsEnum(String,MergeState).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/MappingMultiPostingsEnum#MappingMultiPostingsEnum(String,MergeState).mjava","sourceNew":"  /** Sole constructor. */\n  public MappingMultiPostingsEnum(String field, MergeState mergeState) throws IOException {\n    this.field = field;\n    allSubs = new MappingPostingsSub[mergeState.fieldsProducers.length];\n    for(int i=0;i<allSubs.length;i++) {\n      allSubs[i] = new MappingPostingsSub(mergeState.docMaps[i]);\n    }\n    this.docIDMerger = DocIDMerger.of(subs, allSubs.length, mergeState.needsIndexSort);\n  }\n\n","sourceOld":"  /** Sole constructor. */\n  public MappingMultiPostingsEnum(String field, MergeState mergeState) throws IOException {\n    this.field = field;\n    allSubs = new MappingPostingsSub[mergeState.fieldsProducers.length];\n    for(int i=0;i<allSubs.length;i++) {\n      allSubs[i] = new MappingPostingsSub(mergeState.docMaps[i]);\n    }\n    this.docIDMerger = new DocIDMerger<MappingPostingsSub>(subs, allSubs.length, mergeState.needsIndexSort);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f03e4bed5023ec3ef93a771b8888cae991cf448d","date":1483469262,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/MappingMultiPostingsEnum#MappingMultiPostingsEnum(String,MergeState).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/MappingMultiPostingsEnum#MappingMultiPostingsEnum(String,MergeState).mjava","sourceNew":"  /** Sole constructor. */\n  public MappingMultiPostingsEnum(String field, MergeState mergeState) throws IOException {\n    this.field = field;\n    allSubs = new MappingPostingsSub[mergeState.fieldsProducers.length];\n    for(int i=0;i<allSubs.length;i++) {\n      allSubs[i] = new MappingPostingsSub(mergeState.docMaps[i]);\n    }\n    this.docIDMerger = DocIDMerger.of(subs, allSubs.length, mergeState.needsIndexSort);\n  }\n\n","sourceOld":"  /** Sole constructor. */\n  public MappingMultiPostingsEnum(String field, MergeState mergeState) throws IOException {\n    this.field = field;\n    allSubs = new MappingPostingsSub[mergeState.fieldsProducers.length];\n    for(int i=0;i<allSubs.length;i++) {\n      allSubs[i] = new MappingPostingsSub(mergeState.docMaps[i]);\n    }\n    this.docIDMerger = new DocIDMerger<MappingPostingsSub>(subs, allSubs.length, mergeState.needsIndexSort);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d85b6e22926e7564c040d2a864f4887f6c59fa92":["653128722fb3b4713ac331c621491a93f34a4a22"],"0ad30c6a479e764150a3316e57263319775f1df2":["35fb92999b9df7df2ce2b35b83a044cbede61f45","3d33e731a93d4b57e662ff094f64f94a745422d4"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["35fb92999b9df7df2ce2b35b83a044cbede61f45","d470c8182e92b264680e34081b75e70a9f2b3c89"],"d470c8182e92b264680e34081b75e70a9f2b3c89":["35fb92999b9df7df2ce2b35b83a044cbede61f45","0ad30c6a479e764150a3316e57263319775f1df2"],"f03e4bed5023ec3ef93a771b8888cae991cf448d":["727bb765ff2542275f6d31f67be18d7104bae148","d85b6e22926e7564c040d2a864f4887f6c59fa92"],"727bb765ff2542275f6d31f67be18d7104bae148":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","653128722fb3b4713ac331c621491a93f34a4a22"],"ceaef6cfc68c8ab22a684192e469a8280f9e6e70":["35fb92999b9df7df2ce2b35b83a044cbede61f45"],"35fb92999b9df7df2ce2b35b83a044cbede61f45":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6d8200beeffd3fa5155855f4cb8a8a5e38aeff14":["fbe8fc0e68a5e2e7acce82ba880a982bd15cfab8"],"3d33e731a93d4b57e662ff094f64f94a745422d4":["35fb92999b9df7df2ce2b35b83a044cbede61f45","6d8200beeffd3fa5155855f4cb8a8a5e38aeff14"],"653128722fb3b4713ac331c621491a93f34a4a22":["d470c8182e92b264680e34081b75e70a9f2b3c89"],"fbe8fc0e68a5e2e7acce82ba880a982bd15cfab8":["ceaef6cfc68c8ab22a684192e469a8280f9e6e70"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d85b6e22926e7564c040d2a864f4887f6c59fa92"]},"commit2Childs":{"d85b6e22926e7564c040d2a864f4887f6c59fa92":["f03e4bed5023ec3ef93a771b8888cae991cf448d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"0ad30c6a479e764150a3316e57263319775f1df2":["d470c8182e92b264680e34081b75e70a9f2b3c89"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["727bb765ff2542275f6d31f67be18d7104bae148"],"d470c8182e92b264680e34081b75e70a9f2b3c89":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","653128722fb3b4713ac331c621491a93f34a4a22"],"f03e4bed5023ec3ef93a771b8888cae991cf448d":[],"727bb765ff2542275f6d31f67be18d7104bae148":["f03e4bed5023ec3ef93a771b8888cae991cf448d"],"ceaef6cfc68c8ab22a684192e469a8280f9e6e70":["fbe8fc0e68a5e2e7acce82ba880a982bd15cfab8"],"35fb92999b9df7df2ce2b35b83a044cbede61f45":["0ad30c6a479e764150a3316e57263319775f1df2","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","d470c8182e92b264680e34081b75e70a9f2b3c89","ceaef6cfc68c8ab22a684192e469a8280f9e6e70","3d33e731a93d4b57e662ff094f64f94a745422d4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["35fb92999b9df7df2ce2b35b83a044cbede61f45"],"6d8200beeffd3fa5155855f4cb8a8a5e38aeff14":["3d33e731a93d4b57e662ff094f64f94a745422d4"],"3d33e731a93d4b57e662ff094f64f94a745422d4":["0ad30c6a479e764150a3316e57263319775f1df2"],"653128722fb3b4713ac331c621491a93f34a4a22":["d85b6e22926e7564c040d2a864f4887f6c59fa92","727bb765ff2542275f6d31f67be18d7104bae148"],"fbe8fc0e68a5e2e7acce82ba880a982bd15cfab8":["6d8200beeffd3fa5155855f4cb8a8a5e38aeff14"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["f03e4bed5023ec3ef93a771b8888cae991cf448d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}