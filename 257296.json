{"path":"solr/solrj/src/java/org/apache/solr/common/params/SolrParams#writeMap(EntryWriter).mjava","commits":[{"id":"1bbcda32e5cd37ef61ea1190bacd080308e22070","date":1508850553,"type":1,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/params/SolrParams#writeMap(EntryWriter).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/params/SolrParams#toMap(Map[String,Object]).mjava","sourceNew":"  @Override\n  public void writeMap(EntryWriter ew) throws IOException {\n    toNamedList().forEach((k, v) -> {\n      if (v == null || \"\".equals(v)) return;\n      try {\n        ew.put(k, v);\n      } catch (IOException e) {\n        throw new RuntimeException(\"Error serializing\", e);\n      }\n    });\n\n  }\n\n","sourceOld":"  @Override\n  public Map toMap(Map<String, Object> map) {\n    toNamedList().forEach((k, v) -> {\n      if (v == null || \"\".equals(v)) return;\n      map.put(k, v);\n    });\n    return map;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8a1c70b003d9abbd2ce7878bce14b6ec28fb05e4","date":1523635523,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/params/SolrParams#writeMap(EntryWriter).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/params/SolrParams#writeMap(EntryWriter).mjava","sourceNew":"  @Override\n  public void writeMap(EntryWriter ew) throws IOException {\n    //TODO don't call toNamedList; more efficiently implement here\n    //note: multiple values, if present, are a String[] under 1 key\n    toNamedList().forEach((k, v) -> {\n      if (v == null || \"\".equals(v)) return;\n      try {\n        ew.put(k, v);\n      } catch (IOException e) {\n        throw new RuntimeException(\"Error serializing\", e);\n      }\n    });\n  }\n\n","sourceOld":"  @Override\n  public void writeMap(EntryWriter ew) throws IOException {\n    toNamedList().forEach((k, v) -> {\n      if (v == null || \"\".equals(v)) return;\n      try {\n        ew.put(k, v);\n      } catch (IOException e) {\n        throw new RuntimeException(\"Error serializing\", e);\n      }\n    });\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1cc17990871fe421019acbdd0ed59c8644b9154c","date":1523636883,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/common/params/SolrParams#writeMap(EntryWriter).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/common/params/SolrParams#writeMap(EntryWriter).mjava","sourceNew":"  @Override\n  public void writeMap(EntryWriter ew) throws IOException {\n    //TODO don't call toNamedList; more efficiently implement here\n    //note: multiple values, if present, are a String[] under 1 key\n    toNamedList().forEach((k, v) -> {\n      if (v == null || \"\".equals(v)) return;\n      try {\n        ew.put(k, v);\n      } catch (IOException e) {\n        throw new RuntimeException(\"Error serializing\", e);\n      }\n    });\n  }\n\n","sourceOld":"  @Override\n  public void writeMap(EntryWriter ew) throws IOException {\n    toNamedList().forEach((k, v) -> {\n      if (v == null || \"\".equals(v)) return;\n      try {\n        ew.put(k, v);\n      } catch (IOException e) {\n        throw new RuntimeException(\"Error serializing\", e);\n      }\n    });\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1cc17990871fe421019acbdd0ed59c8644b9154c":["1bbcda32e5cd37ef61ea1190bacd080308e22070","8a1c70b003d9abbd2ce7878bce14b6ec28fb05e4"],"8a1c70b003d9abbd2ce7878bce14b6ec28fb05e4":["1bbcda32e5cd37ef61ea1190bacd080308e22070"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1bbcda32e5cd37ef61ea1190bacd080308e22070":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1cc17990871fe421019acbdd0ed59c8644b9154c"]},"commit2Childs":{"1cc17990871fe421019acbdd0ed59c8644b9154c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"8a1c70b003d9abbd2ce7878bce14b6ec28fb05e4":["1cc17990871fe421019acbdd0ed59c8644b9154c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1bbcda32e5cd37ef61ea1190bacd080308e22070"],"1bbcda32e5cd37ef61ea1190bacd080308e22070":["1cc17990871fe421019acbdd0ed59c8644b9154c","8a1c70b003d9abbd2ce7878bce14b6ec28fb05e4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}