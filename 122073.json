{"path":"lucene/spatial/src/test/org/apache/lucene/spatial/spatial4j/Geo3dShapeRectRelationTestCase#testGeoCircleRect().mjava","commits":[{"id":"f9f97ca977ad649f14b4f60a888adef2edd7a64e","date":1432702490,"type":1,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/spatial4j/Geo3dShapeRectRelationTestCase#testGeoCircleRect().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/spatial4j/Geo3dShapeRectRelationTest#testGeoCircleRect().mjava","sourceNew":"  @Test\n  public void testGeoCircleRect() {\n    new RectIntersectionTestHelper<Geo3dShape>(ctx) {\n\n      @Override\n      protected Geo3dShape generateRandomShape(Point nearP) {\n        while (true) {\n          final int circleRadius = random().nextInt(179) + 1;//no 0-radius\n          final Point point = nearP;\n          try {\n            final GeoShape shape = new GeoCircle(planetModel, point.getY() * DEGREES_TO_RADIANS, point.getX() * DEGREES_TO_RADIANS,\n                circleRadius * DEGREES_TO_RADIANS);\n            return new Geo3dShape(planetModel, shape, ctx);\n          } catch (IllegalArgumentException e) {\n            // This is what happens when we create a shape that is invalid.  Although it is conceivable that there are cases where\n            // the exception is thrown incorrectly, we aren't going to be able to do that in this random test.\n            continue;\n          }\n        }\n      }\n\n      @Override\n      protected Point randomPointInEmptyShape(Geo3dShape shape) {\n        GeoPoint geoPoint = ((GeoCircle)shape.shape).center;\n        return geoPointToSpatial4jPoint(geoPoint);\n      }\n\n    }.testRelateWithRectangle();\n  }\n\n","sourceOld":"  @Test\n  public void testGeoCircleRect() {\n    new RectIntersectionTestHelper<Geo3dShape>(ctx) {\n\n      @Override\n      protected Geo3dShape generateRandomShape(Point nearP) {\n        while (true) {\n          final int circleRadius = random().nextInt(179) + 1;//no 0-radius\n          final Point point = nearP;\n          try {\n            final GeoShape shape = new GeoCircle(point.getY() * DEGREES_TO_RADIANS, point.getX() * DEGREES_TO_RADIANS,\n                circleRadius * DEGREES_TO_RADIANS);\n            return new Geo3dShape(shape, ctx);\n          } catch (IllegalArgumentException e) {\n            // This is what happens when we create a shape that is invalid.  Although it is conceivable that there are cases where\n            // the exception is thrown incorrectly, we aren't going to be able to do that in this random test.\n            continue;\n          }\n        }\n      }\n\n      @Override\n      protected Point randomPointInEmptyShape(Geo3dShape shape) {\n        GeoPoint geoPoint = ((GeoCircle)shape.shape).center;\n        return geoPointToSpatial4jPoint(geoPoint);\n      }\n\n    }.testRelateWithRectangle();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fec06d6753751ae302c7d35866763e6cb414112d","date":1433250698,"type":1,"author":"David Wayne Smiley","isMerge":true,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/spatial4j/Geo3dShapeRectRelationTestCase#testGeoCircleRect().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/spatial4j/Geo3dShapeRectRelationTest#testGeoCircleRect().mjava","sourceNew":"  @Test\n  public void testGeoCircleRect() {\n    new RectIntersectionTestHelper<Geo3dShape>(ctx) {\n\n      @Override\n      protected Geo3dShape generateRandomShape(Point nearP) {\n        while (true) {\n          final int circleRadius = random().nextInt(179) + 1;//no 0-radius\n          final Point point = nearP;\n          try {\n            final GeoShape shape = new GeoCircle(planetModel, point.getY() * DEGREES_TO_RADIANS, point.getX() * DEGREES_TO_RADIANS,\n                circleRadius * DEGREES_TO_RADIANS);\n            return new Geo3dShape(planetModel, shape, ctx);\n          } catch (IllegalArgumentException e) {\n            // This is what happens when we create a shape that is invalid.  Although it is conceivable that there are cases where\n            // the exception is thrown incorrectly, we aren't going to be able to do that in this random test.\n            continue;\n          }\n        }\n      }\n\n      @Override\n      protected Point randomPointInEmptyShape(Geo3dShape shape) {\n        GeoPoint geoPoint = ((GeoCircle)shape.shape).center;\n        return geoPointToSpatial4jPoint(geoPoint);\n      }\n\n    }.testRelateWithRectangle();\n  }\n\n","sourceOld":"  @Test\n  public void testGeoCircleRect() {\n    new RectIntersectionTestHelper<Geo3dShape>(ctx) {\n\n      @Override\n      protected Geo3dShape generateRandomShape(Point nearP) {\n        while (true) {\n          final int circleRadius = random().nextInt(179) + 1;//no 0-radius\n          final Point point = nearP;\n          try {\n            final GeoShape shape = new GeoCircle(point.getY() * DEGREES_TO_RADIANS, point.getX() * DEGREES_TO_RADIANS,\n                circleRadius * DEGREES_TO_RADIANS);\n            return new Geo3dShape(shape, ctx);\n          } catch (IllegalArgumentException e) {\n            // This is what happens when we create a shape that is invalid.  Although it is conceivable that there are cases where\n            // the exception is thrown incorrectly, we aren't going to be able to do that in this random test.\n            continue;\n          }\n        }\n      }\n\n      @Override\n      protected Point randomPointInEmptyShape(Geo3dShape shape) {\n        GeoPoint geoPoint = ((GeoCircle)shape.shape).center;\n        return geoPointToSpatial4jPoint(geoPoint);\n      }\n\n    }.testRelateWithRectangle();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3f272fa1627d87a9082502801ea6cb7fa2d71150","date":1434169192,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/spatial4j/Geo3dShapeRectRelationTestCase#testGeoCircleRect().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/spatial4j/Geo3dShapeRectRelationTestCase#testGeoCircleRect().mjava","sourceNew":"  @Test\n  public void testGeoCircleRect() {\n    new Geo3dRectIntersectionTestHelper(ctx) {\n\n      @Override\n      protected Geo3dShape generateRandomShape(Point nearP) {\n        while (true) {\n          final int circleRadius = random().nextInt(179) + 1;//no 0-radius\n          final Point point = nearP;\n          try {\n            final GeoShape shape = new GeoCircle(planetModel, point.getY() * DEGREES_TO_RADIANS, point.getX() * DEGREES_TO_RADIANS,\n                circleRadius * DEGREES_TO_RADIANS);\n            return new Geo3dShape(planetModel, shape, ctx);\n          } catch (IllegalArgumentException e) {\n            // This is what happens when we create a shape that is invalid.  Although it is conceivable that there are cases where\n            // the exception is thrown incorrectly, we aren't going to be able to do that in this random test.\n            continue;\n          }\n        }\n      }\n\n      @Override\n      protected Point randomPointInEmptyShape(Geo3dShape shape) {\n        GeoPoint geoPoint = ((GeoCircle)shape.shape).center;\n        return geoPointToSpatial4jPoint(geoPoint);\n      }\n\n    }.testRelateWithRectangle();\n  }\n\n","sourceOld":"  @Test\n  public void testGeoCircleRect() {\n    new RectIntersectionTestHelper<Geo3dShape>(ctx) {\n\n      @Override\n      protected Geo3dShape generateRandomShape(Point nearP) {\n        while (true) {\n          final int circleRadius = random().nextInt(179) + 1;//no 0-radius\n          final Point point = nearP;\n          try {\n            final GeoShape shape = new GeoCircle(planetModel, point.getY() * DEGREES_TO_RADIANS, point.getX() * DEGREES_TO_RADIANS,\n                circleRadius * DEGREES_TO_RADIANS);\n            return new Geo3dShape(planetModel, shape, ctx);\n          } catch (IllegalArgumentException e) {\n            // This is what happens when we create a shape that is invalid.  Although it is conceivable that there are cases where\n            // the exception is thrown incorrectly, we aren't going to be able to do that in this random test.\n            continue;\n          }\n        }\n      }\n\n      @Override\n      protected Point randomPointInEmptyShape(Geo3dShape shape) {\n        GeoPoint geoPoint = ((GeoCircle)shape.shape).center;\n        return geoPointToSpatial4jPoint(geoPoint);\n      }\n\n    }.testRelateWithRectangle();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5f38c0ec58dc5223e6494ed9a1195d20e8ca5676","date":1435237600,"type":3,"author":"David Wayne Smiley","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/spatial4j/Geo3dShapeRectRelationTestCase#testGeoCircleRect().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/spatial4j/Geo3dShapeRectRelationTestCase#testGeoCircleRect().mjava","sourceNew":"  @Test\n  public void testGeoCircleRect() {\n    new Geo3dRectIntersectionTestHelper(ctx) {\n\n      @Override\n      protected Geo3dShape generateRandomShape(Point nearP) {\n        final int circleRadius = 180 - random().nextInt(180);//no 0-radius\n        final Point point = nearP;\n        final GeoShape shape = new GeoCircle(planetModel, point.getY() * DEGREES_TO_RADIANS, point.getX() * DEGREES_TO_RADIANS,\n            circleRadius * DEGREES_TO_RADIANS);\n        return new Geo3dShape(planetModel, shape, ctx);\n      }\n\n      @Override\n      protected Point randomPointInEmptyShape(Geo3dShape shape) {\n        GeoPoint geoPoint = ((GeoCircle)shape.shape).center;\n        return geoPointToSpatial4jPoint(geoPoint);\n      }\n\n    }.testRelateWithRectangle();\n  }\n\n","sourceOld":"  @Test\n  public void testGeoCircleRect() {\n    new Geo3dRectIntersectionTestHelper(ctx) {\n\n      @Override\n      protected Geo3dShape generateRandomShape(Point nearP) {\n        while (true) {\n          final int circleRadius = random().nextInt(179) + 1;//no 0-radius\n          final Point point = nearP;\n          try {\n            final GeoShape shape = new GeoCircle(planetModel, point.getY() * DEGREES_TO_RADIANS, point.getX() * DEGREES_TO_RADIANS,\n                circleRadius * DEGREES_TO_RADIANS);\n            return new Geo3dShape(planetModel, shape, ctx);\n          } catch (IllegalArgumentException e) {\n            // This is what happens when we create a shape that is invalid.  Although it is conceivable that there are cases where\n            // the exception is thrown incorrectly, we aren't going to be able to do that in this random test.\n            continue;\n          }\n        }\n      }\n\n      @Override\n      protected Point randomPointInEmptyShape(Geo3dShape shape) {\n        GeoPoint geoPoint = ((GeoCircle)shape.shape).center;\n        return geoPointToSpatial4jPoint(geoPoint);\n      }\n\n    }.testRelateWithRectangle();\n  }\n\n","bugFix":["8fc7b597b2d21a932a857539efde49f09ec86ba0","f9f97ca977ad649f14b4f60a888adef2edd7a64e","173639a6794ea2c67915700c0b4b5ecb4b69a0fb"],"bugIntro":["9891fa1f5a5571b36fbd8a69ccc12f24f5201e48"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a71849bd31d150133a9a1027bf1607967b406c57","date":1436811056,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/spatial4j/Geo3dShapeRectRelationTestCase#testGeoCircleRect().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/spatial4j/Geo3dShapeRectRelationTestCase#testGeoCircleRect().mjava","sourceNew":"  @Test\n  public void testGeoCircleRect() {\n    new Geo3dRectIntersectionTestHelper(ctx) {\n\n      @Override\n      protected Geo3dShape generateRandomShape(Point nearP) {\n        final int circleRadius = 180 - random().nextInt(180);//no 0-radius\n        final Point point = nearP;\n        final GeoShape shape = new GeoCircle(planetModel, point.getY() * DEGREES_TO_RADIANS, point.getX() * DEGREES_TO_RADIANS,\n            circleRadius * DEGREES_TO_RADIANS);\n        return new Geo3dShape(planetModel, shape, ctx);\n      }\n\n      @Override\n      protected Point randomPointInEmptyShape(Geo3dShape shape) {\n        GeoPoint geoPoint = ((GeoCircle)shape.shape).getCenter();\n        return geoPointToSpatial4jPoint(geoPoint);\n      }\n\n    }.testRelateWithRectangle();\n  }\n\n","sourceOld":"  @Test\n  public void testGeoCircleRect() {\n    new Geo3dRectIntersectionTestHelper(ctx) {\n\n      @Override\n      protected Geo3dShape generateRandomShape(Point nearP) {\n        final int circleRadius = 180 - random().nextInt(180);//no 0-radius\n        final Point point = nearP;\n        final GeoShape shape = new GeoCircle(planetModel, point.getY() * DEGREES_TO_RADIANS, point.getX() * DEGREES_TO_RADIANS,\n            circleRadius * DEGREES_TO_RADIANS);\n        return new Geo3dShape(planetModel, shape, ctx);\n      }\n\n      @Override\n      protected Point randomPointInEmptyShape(Geo3dShape shape) {\n        GeoPoint geoPoint = ((GeoCircle)shape.shape).center;\n        return geoPointToSpatial4jPoint(geoPoint);\n      }\n\n    }.testRelateWithRectangle();\n  }\n\n","bugFix":null,"bugIntro":["9891fa1f5a5571b36fbd8a69ccc12f24f5201e48"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"9891fa1f5a5571b36fbd8a69ccc12f24f5201e48","date":1441921550,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/spatial4j/Geo3dShapeRectRelationTestCase#testGeoCircleRect().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/spatial4j/Geo3dShapeRectRelationTestCase#testGeoCircleRect().mjava","sourceNew":"  @Test\n  public void testGeoCircleRect() {\n    new Geo3dRectIntersectionTestHelper(ctx) {\n\n      @Override\n      protected Geo3dShape generateRandomShape(Point nearP) {\n        final int circleRadius = 180 - random().nextInt(180);//no 0-radius\n        final Point point = nearP;\n        final GeoShape shape = new GeoStandardCircle(planetModel, point.getY() * DEGREES_TO_RADIANS, point.getX() * DEGREES_TO_RADIANS,\n            circleRadius * DEGREES_TO_RADIANS);\n        return new Geo3dShape(planetModel, shape, ctx);\n      }\n\n      @Override\n      protected Point randomPointInEmptyShape(Geo3dShape shape) {\n        GeoPoint geoPoint = ((GeoStandardCircle)shape.shape).getCenter();\n        return geoPointToSpatial4jPoint(geoPoint);\n      }\n\n    }.testRelateWithRectangle();\n  }\n\n","sourceOld":"  @Test\n  public void testGeoCircleRect() {\n    new Geo3dRectIntersectionTestHelper(ctx) {\n\n      @Override\n      protected Geo3dShape generateRandomShape(Point nearP) {\n        final int circleRadius = 180 - random().nextInt(180);//no 0-radius\n        final Point point = nearP;\n        final GeoShape shape = new GeoCircle(planetModel, point.getY() * DEGREES_TO_RADIANS, point.getX() * DEGREES_TO_RADIANS,\n            circleRadius * DEGREES_TO_RADIANS);\n        return new Geo3dShape(planetModel, shape, ctx);\n      }\n\n      @Override\n      protected Point randomPointInEmptyShape(Geo3dShape shape) {\n        GeoPoint geoPoint = ((GeoCircle)shape.shape).getCenter();\n        return geoPointToSpatial4jPoint(geoPoint);\n      }\n\n    }.testRelateWithRectangle();\n  }\n\n","bugFix":["a71849bd31d150133a9a1027bf1607967b406c57","5f38c0ec58dc5223e6494ed9a1195d20e8ca5676"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e90aaa97ec49973177b5d3513542aa87c24e849c","date":1446111033,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/spatial4j/Geo3dShapeRectRelationTestCase#testGeoCircleRect().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/spatial4j/Geo3dShapeRectRelationTestCase#testGeoCircleRect().mjava","sourceNew":"  @AwaitsFix(bugUrl = \"https://issues.apache.org/jira/browse/LUCENE-6867\")\n  @Test\n  public void testGeoCircleRect() {\n    new Geo3dRectIntersectionTestHelper(ctx) {\n\n      @Override\n      protected Geo3dShape generateRandomShape(Point nearP) {\n        final int circleRadius = 180 - random().nextInt(180);//no 0-radius\n        final Point point = nearP;\n        final GeoShape shape = new GeoStandardCircle(planetModel, point.getY() * DEGREES_TO_RADIANS, point.getX() * DEGREES_TO_RADIANS,\n            circleRadius * DEGREES_TO_RADIANS);\n        return new Geo3dShape(planetModel, shape, ctx);\n      }\n\n      @Override\n      protected Point randomPointInEmptyShape(Geo3dShape shape) {\n        GeoPoint geoPoint = ((GeoStandardCircle)shape.shape).getCenter();\n        return geoPointToSpatial4jPoint(geoPoint);\n      }\n\n    }.testRelateWithRectangle();\n  }\n\n","sourceOld":"  @Test\n  public void testGeoCircleRect() {\n    new Geo3dRectIntersectionTestHelper(ctx) {\n\n      @Override\n      protected Geo3dShape generateRandomShape(Point nearP) {\n        final int circleRadius = 180 - random().nextInt(180);//no 0-radius\n        final Point point = nearP;\n        final GeoShape shape = new GeoStandardCircle(planetModel, point.getY() * DEGREES_TO_RADIANS, point.getX() * DEGREES_TO_RADIANS,\n            circleRadius * DEGREES_TO_RADIANS);\n        return new Geo3dShape(planetModel, shape, ctx);\n      }\n\n      @Override\n      protected Point randomPointInEmptyShape(Geo3dShape shape) {\n        GeoPoint geoPoint = ((GeoStandardCircle)shape.shape).getCenter();\n        return geoPointToSpatial4jPoint(geoPoint);\n      }\n\n    }.testRelateWithRectangle();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"112d77ac8d3e10a362516ad834c9a11d35c94234","date":1456784319,"type":5,"author":"nknize","isMerge":false,"pathNew":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/spatial4j/Geo3dShapeRectRelationTestCase#testGeoCircleRect().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/spatial4j/Geo3dShapeRectRelationTestCase#testGeoCircleRect().mjava","sourceNew":"  @AwaitsFix(bugUrl = \"https://issues.apache.org/jira/browse/LUCENE-6867\")\n  @Test\n  public void testGeoCircleRect() {\n    new Geo3dRectIntersectionTestHelper(ctx) {\n\n      @Override\n      protected Geo3dShape generateRandomShape(Point nearP) {\n        final int circleRadius = 180 - random().nextInt(180);//no 0-radius\n        final Point point = nearP;\n        final GeoShape shape = new GeoStandardCircle(planetModel, point.getY() * DEGREES_TO_RADIANS, point.getX() * DEGREES_TO_RADIANS,\n            circleRadius * DEGREES_TO_RADIANS);\n        return new Geo3dShape(planetModel, shape, ctx);\n      }\n\n      @Override\n      protected Point randomPointInEmptyShape(Geo3dShape shape) {\n        GeoPoint geoPoint = ((GeoStandardCircle)shape.shape).getCenter();\n        return geoPointToSpatial4jPoint(geoPoint);\n      }\n\n    }.testRelateWithRectangle();\n  }\n\n","sourceOld":"  @AwaitsFix(bugUrl = \"https://issues.apache.org/jira/browse/LUCENE-6867\")\n  @Test\n  public void testGeoCircleRect() {\n    new Geo3dRectIntersectionTestHelper(ctx) {\n\n      @Override\n      protected Geo3dShape generateRandomShape(Point nearP) {\n        final int circleRadius = 180 - random().nextInt(180);//no 0-radius\n        final Point point = nearP;\n        final GeoShape shape = new GeoStandardCircle(planetModel, point.getY() * DEGREES_TO_RADIANS, point.getX() * DEGREES_TO_RADIANS,\n            circleRadius * DEGREES_TO_RADIANS);\n        return new Geo3dShape(planetModel, shape, ctx);\n      }\n\n      @Override\n      protected Point randomPointInEmptyShape(Geo3dShape shape) {\n        GeoPoint geoPoint = ((GeoStandardCircle)shape.shape).getCenter();\n        return geoPointToSpatial4jPoint(geoPoint);\n      }\n\n    }.testRelateWithRectangle();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"af2638813028b254a88b418ebeafb541afb49653","date":1456804822,"type":5,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/spatial-extras/src/test/org/apache/lucene/spatial/spatial4j/Geo3dShapeRectRelationTestCase#testGeoCircleRect().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/spatial4j/Geo3dShapeRectRelationTestCase#testGeoCircleRect().mjava","sourceNew":"  @AwaitsFix(bugUrl = \"https://issues.apache.org/jira/browse/LUCENE-6867\")\n  @Test\n  public void testGeoCircleRect() {\n    new Geo3dRectIntersectionTestHelper(ctx) {\n\n      @Override\n      protected Geo3dShape generateRandomShape(Point nearP) {\n        final int circleRadius = 180 - random().nextInt(180);//no 0-radius\n        final Point point = nearP;\n        final GeoShape shape = new GeoStandardCircle(planetModel, point.getY() * DEGREES_TO_RADIANS, point.getX() * DEGREES_TO_RADIANS,\n            circleRadius * DEGREES_TO_RADIANS);\n        return new Geo3dShape(planetModel, shape, ctx);\n      }\n\n      @Override\n      protected Point randomPointInEmptyShape(Geo3dShape shape) {\n        GeoPoint geoPoint = ((GeoStandardCircle)shape.shape).getCenter();\n        return geoPointToSpatial4jPoint(geoPoint);\n      }\n\n    }.testRelateWithRectangle();\n  }\n\n","sourceOld":"  @AwaitsFix(bugUrl = \"https://issues.apache.org/jira/browse/LUCENE-6867\")\n  @Test\n  public void testGeoCircleRect() {\n    new Geo3dRectIntersectionTestHelper(ctx) {\n\n      @Override\n      protected Geo3dShape generateRandomShape(Point nearP) {\n        final int circleRadius = 180 - random().nextInt(180);//no 0-radius\n        final Point point = nearP;\n        final GeoShape shape = new GeoStandardCircle(planetModel, point.getY() * DEGREES_TO_RADIANS, point.getX() * DEGREES_TO_RADIANS,\n            circleRadius * DEGREES_TO_RADIANS);\n        return new Geo3dShape(planetModel, shape, ctx);\n      }\n\n      @Override\n      protected Point randomPointInEmptyShape(Geo3dShape shape) {\n        GeoPoint geoPoint = ((GeoStandardCircle)shape.shape).getCenter();\n        return geoPointToSpatial4jPoint(geoPoint);\n      }\n\n    }.testRelateWithRectangle();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a71849bd31d150133a9a1027bf1607967b406c57":["5f38c0ec58dc5223e6494ed9a1195d20e8ca5676"],"af2638813028b254a88b418ebeafb541afb49653":["e90aaa97ec49973177b5d3513542aa87c24e849c","112d77ac8d3e10a362516ad834c9a11d35c94234"],"5f38c0ec58dc5223e6494ed9a1195d20e8ca5676":["3f272fa1627d87a9082502801ea6cb7fa2d71150"],"3f272fa1627d87a9082502801ea6cb7fa2d71150":["fec06d6753751ae302c7d35866763e6cb414112d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"fec06d6753751ae302c7d35866763e6cb414112d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","f9f97ca977ad649f14b4f60a888adef2edd7a64e"],"112d77ac8d3e10a362516ad834c9a11d35c94234":["e90aaa97ec49973177b5d3513542aa87c24e849c"],"9891fa1f5a5571b36fbd8a69ccc12f24f5201e48":["a71849bd31d150133a9a1027bf1607967b406c57"],"e90aaa97ec49973177b5d3513542aa87c24e849c":["9891fa1f5a5571b36fbd8a69ccc12f24f5201e48"],"f9f97ca977ad649f14b4f60a888adef2edd7a64e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["af2638813028b254a88b418ebeafb541afb49653"]},"commit2Childs":{"a71849bd31d150133a9a1027bf1607967b406c57":["9891fa1f5a5571b36fbd8a69ccc12f24f5201e48"],"af2638813028b254a88b418ebeafb541afb49653":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"5f38c0ec58dc5223e6494ed9a1195d20e8ca5676":["a71849bd31d150133a9a1027bf1607967b406c57"],"3f272fa1627d87a9082502801ea6cb7fa2d71150":["5f38c0ec58dc5223e6494ed9a1195d20e8ca5676"],"fec06d6753751ae302c7d35866763e6cb414112d":["3f272fa1627d87a9082502801ea6cb7fa2d71150"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["fec06d6753751ae302c7d35866763e6cb414112d","f9f97ca977ad649f14b4f60a888adef2edd7a64e"],"112d77ac8d3e10a362516ad834c9a11d35c94234":["af2638813028b254a88b418ebeafb541afb49653"],"9891fa1f5a5571b36fbd8a69ccc12f24f5201e48":["e90aaa97ec49973177b5d3513542aa87c24e849c"],"e90aaa97ec49973177b5d3513542aa87c24e849c":["af2638813028b254a88b418ebeafb541afb49653","112d77ac8d3e10a362516ad834c9a11d35c94234"],"f9f97ca977ad649f14b4f60a888adef2edd7a64e":["fec06d6753751ae302c7d35866763e6cb414112d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}