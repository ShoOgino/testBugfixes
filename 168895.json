{"path":"lucene/src/java/org/apache/lucene/index/values/Bytes#getWriter(Directory,String,Mode,Comparator[BytesRef],boolean).mjava","commits":[{"id":"01f60198ece724a6e96cd0b45f289cf42ff83d4f","date":1286864103,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/values/Bytes#getWriter(Directory,String,Mode,Comparator[BytesRef],boolean).mjava","pathOld":"/dev/null","sourceNew":"  // nocommit -- i shouldn't have to specify fixed? can\n  // track itself & do the write thing at write time?\n  public static Writer getWriter(Directory dir, String id, Mode mode,\n      Comparator<BytesRef> comp, boolean fixedSize) throws IOException {\n\n    if (comp == null) {\n      comp = BytesRef.getUTF8SortedAsUnicodeComparator();\n    }\n\n    if (fixedSize) {\n      if (mode == Mode.STRAIGHT) {\n        return new FixedStraightBytesImpl.Writer(dir, id);\n      } else if (mode == Mode.DEREF) {\n        return new FixedDerefBytesImpl.Writer(dir, id);\n      } else if (mode == Mode.SORTED) {\n        return new FixedSortedBytesImpl.Writer(dir, id, comp);\n      }\n    } else {\n      if (mode == Mode.STRAIGHT) {\n        return new VarStraightBytesImpl.Writer(dir, id);\n      } else if (mode == Mode.DEREF) {\n        return new VarDerefBytesImpl.Writer(dir, id);\n      } else if (mode == Mode.SORTED) {\n        return new VarSortedBytesImpl.Writer(dir, id, comp);\n      }\n    }\n\n    throw new IllegalArgumentException(\"\");\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b5c559c875836474bafae7243263d93b1b1965db","date":1289581659,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/values/Bytes#getWriter(Directory,String,Mode,Comparator[BytesRef],boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/Bytes#getWriter(Directory,String,Mode,Comparator[BytesRef],boolean).mjava","sourceNew":"  // TODO -- i shouldn't have to specify fixed? can\n  // track itself & do the write thing at write time?\n  public static Writer getWriter(Directory dir, String id, Mode mode,\n      Comparator<BytesRef> comp, boolean fixedSize) throws IOException {\n\n    if (comp == null) {\n      comp = BytesRef.getUTF8SortedAsUnicodeComparator();\n    }\n\n    if (fixedSize) {\n      if (mode == Mode.STRAIGHT) {\n        return new FixedStraightBytesImpl.Writer(dir, id);\n      } else if (mode == Mode.DEREF) {\n        return new FixedDerefBytesImpl.Writer(dir, id);\n      } else if (mode == Mode.SORTED) {\n        return new FixedSortedBytesImpl.Writer(dir, id, comp);\n      }\n    } else {\n      if (mode == Mode.STRAIGHT) {\n        return new VarStraightBytesImpl.Writer(dir, id);\n      } else if (mode == Mode.DEREF) {\n        return new VarDerefBytesImpl.Writer(dir, id);\n      } else if (mode == Mode.SORTED) {\n        return new VarSortedBytesImpl.Writer(dir, id, comp);\n      }\n    }\n\n    throw new IllegalArgumentException(\"\");\n  }\n\n","sourceOld":"  // nocommit -- i shouldn't have to specify fixed? can\n  // track itself & do the write thing at write time?\n  public static Writer getWriter(Directory dir, String id, Mode mode,\n      Comparator<BytesRef> comp, boolean fixedSize) throws IOException {\n\n    if (comp == null) {\n      comp = BytesRef.getUTF8SortedAsUnicodeComparator();\n    }\n\n    if (fixedSize) {\n      if (mode == Mode.STRAIGHT) {\n        return new FixedStraightBytesImpl.Writer(dir, id);\n      } else if (mode == Mode.DEREF) {\n        return new FixedDerefBytesImpl.Writer(dir, id);\n      } else if (mode == Mode.SORTED) {\n        return new FixedSortedBytesImpl.Writer(dir, id, comp);\n      }\n    } else {\n      if (mode == Mode.STRAIGHT) {\n        return new VarStraightBytesImpl.Writer(dir, id);\n      } else if (mode == Mode.DEREF) {\n        return new VarDerefBytesImpl.Writer(dir, id);\n      } else if (mode == Mode.SORTED) {\n        return new VarSortedBytesImpl.Writer(dir, id, comp);\n      }\n    }\n\n    throw new IllegalArgumentException(\"\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5a98a65bdb67cd0b27d18a5564d63bd3e944d3f4","date":1291128345,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/values/Bytes#getWriter(Directory,String,Mode,Comparator[BytesRef],boolean,AtomicLong).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/Bytes#getWriter(Directory,String,Mode,Comparator[BytesRef],boolean).mjava","sourceNew":"  // TODO -- i shouldn't have to specify fixed? can\n  // track itself & do the write thing at write time?\n  public static Writer getWriter(Directory dir, String id, Mode mode,\n      Comparator<BytesRef> comp, boolean fixedSize, AtomicLong bytesUsed) throws IOException {\n\n    if (comp == null) {\n      comp = BytesRef.getUTF8SortedAsUnicodeComparator();\n    }\n\n    if (fixedSize) {\n      if (mode == Mode.STRAIGHT) {\n        return new FixedStraightBytesImpl.Writer(dir, id);\n      } else if (mode == Mode.DEREF) {\n        return new FixedDerefBytesImpl.Writer(dir, id, bytesUsed);\n      } else if (mode == Mode.SORTED) {\n        return new FixedSortedBytesImpl.Writer(dir, id, comp, bytesUsed);\n      }\n    } else {\n      if (mode == Mode.STRAIGHT) {\n        return new VarStraightBytesImpl.Writer(dir, id, bytesUsed);\n      } else if (mode == Mode.DEREF) {\n        return new VarDerefBytesImpl.Writer(dir, id, bytesUsed);\n      } else if (mode == Mode.SORTED) {\n        return new VarSortedBytesImpl.Writer(dir, id, comp, bytesUsed);\n      }\n    }\n\n    throw new IllegalArgumentException(\"\");\n  }\n\n","sourceOld":"  // TODO -- i shouldn't have to specify fixed? can\n  // track itself & do the write thing at write time?\n  public static Writer getWriter(Directory dir, String id, Mode mode,\n      Comparator<BytesRef> comp, boolean fixedSize) throws IOException {\n\n    if (comp == null) {\n      comp = BytesRef.getUTF8SortedAsUnicodeComparator();\n    }\n\n    if (fixedSize) {\n      if (mode == Mode.STRAIGHT) {\n        return new FixedStraightBytesImpl.Writer(dir, id);\n      } else if (mode == Mode.DEREF) {\n        return new FixedDerefBytesImpl.Writer(dir, id);\n      } else if (mode == Mode.SORTED) {\n        return new FixedSortedBytesImpl.Writer(dir, id, comp);\n      }\n    } else {\n      if (mode == Mode.STRAIGHT) {\n        return new VarStraightBytesImpl.Writer(dir, id);\n      } else if (mode == Mode.DEREF) {\n        return new VarDerefBytesImpl.Writer(dir, id);\n      } else if (mode == Mode.SORTED) {\n        return new VarSortedBytesImpl.Writer(dir, id, comp);\n      }\n    }\n\n    throw new IllegalArgumentException(\"\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5a98a65bdb67cd0b27d18a5564d63bd3e944d3f4":["b5c559c875836474bafae7243263d93b1b1965db"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"01f60198ece724a6e96cd0b45f289cf42ff83d4f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b5c559c875836474bafae7243263d93b1b1965db":["01f60198ece724a6e96cd0b45f289cf42ff83d4f"]},"commit2Childs":{"5a98a65bdb67cd0b27d18a5564d63bd3e944d3f4":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["01f60198ece724a6e96cd0b45f289cf42ff83d4f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"01f60198ece724a6e96cd0b45f289cf42ff83d4f":["b5c559c875836474bafae7243263d93b1b1965db"],"b5c559c875836474bafae7243263d93b1b1965db":["5a98a65bdb67cd0b27d18a5564d63bd3e944d3f4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5a98a65bdb67cd0b27d18a5564d63bd3e944d3f4","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}