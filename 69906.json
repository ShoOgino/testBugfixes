{"path":"src/test/org/apache/lucene/index/TestIndexWriterExceptions.MockIndexWriter#testPoint(String).mjava","commits":[{"id":"5350389bf83287111f7760b9e3db3af8e3648474","date":1216372812,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriterExceptions.MockIndexWriter#testPoint(String).mjava","pathOld":"/dev/null","sourceNew":"    boolean testPoint(String name) {\n      if (doFail.get() != null && !name.equals(\"startDoFlush\") && r.nextInt(20) == 17) {\n        if (DEBUG) {\n          System.out.println(Thread.currentThread().getName() + \": NOW FAIL: \" + name);\n          //new Throwable().printStackTrace(System.out);\n        }\n        throw new RuntimeException(Thread.currentThread().getName() + \": intentionally failing at \" + name);\n      }\n      return true;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1326054a8d3aa66382d49decc7f330955c9c6f71","date":1257386139,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriterExceptions.MockIndexWriter#testPoint(String).mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriterExceptions.MockIndexWriter#testPoint(String).mjava","sourceNew":"    @Override\n    boolean testPoint(String name) {\n      if (doFail.get() != null && !name.equals(\"startDoFlush\") && r.nextInt(20) == 17) {\n        if (DEBUG) {\n          System.out.println(Thread.currentThread().getName() + \": NOW FAIL: \" + name);\n          //new Throwable().printStackTrace(System.out);\n        }\n        throw new RuntimeException(Thread.currentThread().getName() + \": intentionally failing at \" + name);\n      }\n      return true;\n    }\n\n","sourceOld":"    boolean testPoint(String name) {\n      if (doFail.get() != null && !name.equals(\"startDoFlush\") && r.nextInt(20) == 17) {\n        if (DEBUG) {\n          System.out.println(Thread.currentThread().getName() + \": NOW FAIL: \" + name);\n          //new Throwable().printStackTrace(System.out);\n        }\n        throw new RuntimeException(Thread.currentThread().getName() + \": intentionally failing at \" + name);\n      }\n      return true;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"42607aa380c892dc1ec0ab26e86a575c28e13618","date":1268641604,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriterExceptions.MockIndexWriter#testPoint(String).mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriterExceptions.MockIndexWriter#testPoint(String).mjava","sourceNew":"    @Override\n    boolean testPoint(String name) {\n      if (doFail.get() != null && !name.equals(\"startDoFlush\") && r.nextInt(20) == 17) {\n        if (VERBOSE) {\n          System.out.println(Thread.currentThread().getName() + \": NOW FAIL: \" + name);\n          //new Throwable().printStackTrace(System.out);\n        }\n        throw new RuntimeException(Thread.currentThread().getName() + \": intentionally failing at \" + name);\n      }\n      return true;\n    }\n\n","sourceOld":"    @Override\n    boolean testPoint(String name) {\n      if (doFail.get() != null && !name.equals(\"startDoFlush\") && r.nextInt(20) == 17) {\n        if (DEBUG) {\n          System.out.println(Thread.currentThread().getName() + \": NOW FAIL: \" + name);\n          //new Throwable().printStackTrace(System.out);\n        }\n        throw new RuntimeException(Thread.currentThread().getName() + \": intentionally failing at \" + name);\n      }\n      return true;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriterExceptions.MockIndexWriter#testPoint(String).mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriterExceptions.MockIndexWriter#testPoint(String).mjava","sourceNew":"    @Override\n    boolean testPoint(String name) {\n      if (doFail.get() != null && !name.equals(\"startDoFlush\") && r.nextInt(20) == 17) {\n        if (VERBOSE) {\n          System.out.println(Thread.currentThread().getName() + \": NOW FAIL: \" + name);\n          //new Throwable().printStackTrace(System.out);\n        }\n        throw new RuntimeException(Thread.currentThread().getName() + \": intentionally failing at \" + name);\n      }\n      return true;\n    }\n\n","sourceOld":"    @Override\n    boolean testPoint(String name) {\n      if (doFail.get() != null && !name.equals(\"startDoFlush\") && r.nextInt(20) == 17) {\n        if (VERBOSE) {\n          System.out.println(Thread.currentThread().getName() + \": NOW FAIL: \" + name);\n          //new Throwable().printStackTrace(System.out);\n        }\n        throw new RuntimeException(Thread.currentThread().getName() + \": intentionally failing at \" + name);\n      }\n      return true;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1326054a8d3aa66382d49decc7f330955c9c6f71":["5350389bf83287111f7760b9e3db3af8e3648474"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"42607aa380c892dc1ec0ab26e86a575c28e13618":["1326054a8d3aa66382d49decc7f330955c9c6f71"],"5350389bf83287111f7760b9e3db3af8e3648474":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["42607aa380c892dc1ec0ab26e86a575c28e13618"]},"commit2Childs":{"1326054a8d3aa66382d49decc7f330955c9c6f71":["42607aa380c892dc1ec0ab26e86a575c28e13618"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5350389bf83287111f7760b9e3db3af8e3648474"],"42607aa380c892dc1ec0ab26e86a575c28e13618":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"5350389bf83287111f7760b9e3db3af8e3648474":["1326054a8d3aa66382d49decc7f330955c9c6f71"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}