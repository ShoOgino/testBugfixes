{"path":"solr/core/src/test/org/apache/solr/search/function/TestOrdValues#addDoc(RandomIndexWriter,int).mjava","commits":[{"id":"9274621789ce990dbfef455dabdf026bb3184821","date":1400046684,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/function/TestOrdValues#addDoc(RandomIndexWriter,int).mjava","pathOld":"/dev/null","sourceNew":"  private static void addDoc(RandomIndexWriter iw, int i) throws Exception {\n    Document d = new Document();\n    Field f;\n    int scoreAndID = i + 1;\n\n    FieldType customType = new FieldType(TextField.TYPE_STORED);\n    customType.setTokenized(false);\n    customType.setOmitNorms(true);\n    \n    f = newField(ID_FIELD, id2String(scoreAndID), customType); // for debug purposes\n    d.add(f);\n    d.add(new SortedDocValuesField(ID_FIELD, new BytesRef(id2String(scoreAndID))));\n\n    FieldType customType2 = new FieldType(TextField.TYPE_NOT_STORED);\n    customType2.setOmitNorms(true);\n    f = newField(TEXT_FIELD, \"text of doc\" + scoreAndID + textLine(i), customType2); // for regular search\n    d.add(f);\n\n    f = new IntField(INT_FIELD, scoreAndID, Store.YES); // for function scoring\n    d.add(f);\n    d.add(new NumericDocValuesField(INT_FIELD, scoreAndID));\n\n    f = new FloatField(FLOAT_FIELD, scoreAndID, Store.YES); // for function scoring\n    d.add(f);\n    d.add(new NumericDocValuesField(FLOAT_FIELD, Float.floatToRawIntBits(scoreAndID)));\n\n    iw.addDocument(d);\n    log(\"added: \" + d);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"93dd449115a9247533e44bab47e8429e5dccbc6d","date":1400258396,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/search/function/TestOrdValues#addDoc(RandomIndexWriter,int).mjava","pathOld":"/dev/null","sourceNew":"  private static void addDoc(RandomIndexWriter iw, int i) throws Exception {\n    Document d = new Document();\n    Field f;\n    int scoreAndID = i + 1;\n\n    FieldType customType = new FieldType(TextField.TYPE_STORED);\n    customType.setTokenized(false);\n    customType.setOmitNorms(true);\n    \n    f = newField(ID_FIELD, id2String(scoreAndID), customType); // for debug purposes\n    d.add(f);\n    d.add(new SortedDocValuesField(ID_FIELD, new BytesRef(id2String(scoreAndID))));\n\n    FieldType customType2 = new FieldType(TextField.TYPE_NOT_STORED);\n    customType2.setOmitNorms(true);\n    f = newField(TEXT_FIELD, \"text of doc\" + scoreAndID + textLine(i), customType2); // for regular search\n    d.add(f);\n\n    f = new IntField(INT_FIELD, scoreAndID, Store.YES); // for function scoring\n    d.add(f);\n    d.add(new NumericDocValuesField(INT_FIELD, scoreAndID));\n\n    f = new FloatField(FLOAT_FIELD, scoreAndID, Store.YES); // for function scoring\n    d.add(f);\n    d.add(new NumericDocValuesField(FLOAT_FIELD, Float.floatToRawIntBits(scoreAndID)));\n\n    iw.addDocument(d);\n    log(\"added: \" + d);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"56572ec06f1407c066d6b7399413178b33176cd8","date":1400495675,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/search/function/TestOrdValues#addDoc(RandomIndexWriter,int).mjava","pathOld":"/dev/null","sourceNew":"  private static void addDoc(RandomIndexWriter iw, int i) throws Exception {\n    Document d = new Document();\n    Field f;\n    int scoreAndID = i + 1;\n\n    FieldType customType = new FieldType(TextField.TYPE_STORED);\n    customType.setTokenized(false);\n    customType.setOmitNorms(true);\n    \n    f = newField(ID_FIELD, id2String(scoreAndID), customType); // for debug purposes\n    d.add(f);\n    d.add(new SortedDocValuesField(ID_FIELD, new BytesRef(id2String(scoreAndID))));\n\n    FieldType customType2 = new FieldType(TextField.TYPE_NOT_STORED);\n    customType2.setOmitNorms(true);\n    f = newField(TEXT_FIELD, \"text of doc\" + scoreAndID + textLine(i), customType2); // for regular search\n    d.add(f);\n\n    f = new IntField(INT_FIELD, scoreAndID, Store.YES); // for function scoring\n    d.add(f);\n    d.add(new NumericDocValuesField(INT_FIELD, scoreAndID));\n\n    f = new FloatField(FLOAT_FIELD, scoreAndID, Store.YES); // for function scoring\n    d.add(f);\n    d.add(new NumericDocValuesField(FLOAT_FIELD, Float.floatToRawIntBits(scoreAndID)));\n\n    iw.addDocument(d);\n    log(\"added: \" + d);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"770342641f7b505eaa8dccdc666158bff2419109","date":1449868421,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/function/TestOrdValues#addDoc(RandomIndexWriter,int).mjava","pathOld":"solr/core/src/test/org/apache/solr/search/function/TestOrdValues#addDoc(RandomIndexWriter,int).mjava","sourceNew":"  private static void addDoc(RandomIndexWriter iw, int i) throws Exception {\n    Document d = new Document();\n    Field f;\n    int scoreAndID = i + 1;\n\n    FieldType customType = new FieldType(TextField.TYPE_STORED);\n    customType.setTokenized(false);\n    customType.setOmitNorms(true);\n    \n    f = newField(ID_FIELD, id2String(scoreAndID), customType); // for debug purposes\n    d.add(f);\n    d.add(new SortedDocValuesField(ID_FIELD, new BytesRef(id2String(scoreAndID))));\n\n    FieldType customType2 = new FieldType(TextField.TYPE_NOT_STORED);\n    customType2.setOmitNorms(true);\n    f = newField(TEXT_FIELD, \"text of doc\" + scoreAndID + textLine(i), customType2); // for regular search\n    d.add(f);\n\n    f = new LegacyIntField(INT_FIELD, scoreAndID, Store.YES); // for function scoring\n    d.add(f);\n    d.add(new NumericDocValuesField(INT_FIELD, scoreAndID));\n\n    f = new LegacyFloatField(FLOAT_FIELD, scoreAndID, Store.YES); // for function scoring\n    d.add(f);\n    d.add(new NumericDocValuesField(FLOAT_FIELD, Float.floatToRawIntBits(scoreAndID)));\n\n    iw.addDocument(d);\n    log(\"added: \" + d);\n  }\n\n","sourceOld":"  private static void addDoc(RandomIndexWriter iw, int i) throws Exception {\n    Document d = new Document();\n    Field f;\n    int scoreAndID = i + 1;\n\n    FieldType customType = new FieldType(TextField.TYPE_STORED);\n    customType.setTokenized(false);\n    customType.setOmitNorms(true);\n    \n    f = newField(ID_FIELD, id2String(scoreAndID), customType); // for debug purposes\n    d.add(f);\n    d.add(new SortedDocValuesField(ID_FIELD, new BytesRef(id2String(scoreAndID))));\n\n    FieldType customType2 = new FieldType(TextField.TYPE_NOT_STORED);\n    customType2.setOmitNorms(true);\n    f = newField(TEXT_FIELD, \"text of doc\" + scoreAndID + textLine(i), customType2); // for regular search\n    d.add(f);\n\n    f = new IntField(INT_FIELD, scoreAndID, Store.YES); // for function scoring\n    d.add(f);\n    d.add(new NumericDocValuesField(INT_FIELD, scoreAndID));\n\n    f = new FloatField(FLOAT_FIELD, scoreAndID, Store.YES); // for function scoring\n    d.add(f);\n    d.add(new NumericDocValuesField(FLOAT_FIELD, Float.floatToRawIntBits(scoreAndID)));\n\n    iw.addDocument(d);\n    log(\"added: \" + d);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9274621789ce990dbfef455dabdf026bb3184821":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"93dd449115a9247533e44bab47e8429e5dccbc6d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","9274621789ce990dbfef455dabdf026bb3184821"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"56572ec06f1407c066d6b7399413178b33176cd8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","93dd449115a9247533e44bab47e8429e5dccbc6d"],"770342641f7b505eaa8dccdc666158bff2419109":["93dd449115a9247533e44bab47e8429e5dccbc6d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["770342641f7b505eaa8dccdc666158bff2419109"]},"commit2Childs":{"9274621789ce990dbfef455dabdf026bb3184821":["93dd449115a9247533e44bab47e8429e5dccbc6d"],"93dd449115a9247533e44bab47e8429e5dccbc6d":["56572ec06f1407c066d6b7399413178b33176cd8","770342641f7b505eaa8dccdc666158bff2419109"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9274621789ce990dbfef455dabdf026bb3184821","93dd449115a9247533e44bab47e8429e5dccbc6d","56572ec06f1407c066d6b7399413178b33176cd8"],"56572ec06f1407c066d6b7399413178b33176cd8":[],"770342641f7b505eaa8dccdc666158bff2419109":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["56572ec06f1407c066d6b7399413178b33176cd8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}