{"path":"solr/core/src/java/org/apache/solr/search/ExtendedDismaxQParser.ExtendedSolrQueryParser#addMultiTermClause(List[BooleanClause],Query).mjava","commits":[{"id":"e55782fb51a6e9789542818eb2161a3247f39ace","date":1489707707,"type":0,"author":"Steve Rowe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/ExtendedDismaxQParser.ExtendedSolrQueryParser#addMultiTermClause(List[BooleanClause],Query).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    protected void addMultiTermClause(List<BooleanClause> clauses, Query q) {\n      // We might have been passed a null query; the terms might have been filtered away by the analyzer.\n      if (q == null) {\n        return;\n      }\n      \n      boolean required = operator == AND_OPERATOR;\n      BooleanClause.Occur occur = required ? BooleanClause.Occur.MUST : BooleanClause.Occur.SHOULD;  \n      \n      if (q instanceof BooleanQuery) {\n        boolean allOptionalDisMaxQueries = true;\n        for (BooleanClause c : ((BooleanQuery)q).clauses()) {\n          if (c.getOccur() != BooleanClause.Occur.SHOULD || ! (c.getQuery() instanceof DisjunctionMaxQuery)) {\n            allOptionalDisMaxQueries = false;\n            break;\n          }\n        }\n        if (allOptionalDisMaxQueries) {\n          // getAliasedMultiTermQuery() constructed a BooleanQuery containing only SHOULD DisjunctionMaxQuery-s.\n          // Unwrap the query and add a clause for each contained DisMax query.\n          for (BooleanClause c : ((BooleanQuery)q).clauses()) {\n            clauses.add(newBooleanClause(c.getQuery(), occur));\n          }\n          return;\n        }\n      }\n      clauses.add(newBooleanClause(q, occur));\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c03778630c4604270d88c148afb8c7de35b51d3c","date":1490280010,"type":0,"author":"Steve Rowe","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/ExtendedDismaxQParser.ExtendedSolrQueryParser#addMultiTermClause(List[BooleanClause],Query).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    protected void addMultiTermClause(List<BooleanClause> clauses, Query q) {\n      // We might have been passed a null query; the terms might have been filtered away by the analyzer.\n      if (q == null) {\n        return;\n      }\n      \n      boolean required = operator == AND_OPERATOR;\n      BooleanClause.Occur occur = required ? BooleanClause.Occur.MUST : BooleanClause.Occur.SHOULD;  \n      \n      if (q instanceof BooleanQuery) {\n        boolean allOptionalDisMaxQueries = true;\n        for (BooleanClause c : ((BooleanQuery)q).clauses()) {\n          if (c.getOccur() != BooleanClause.Occur.SHOULD || ! (c.getQuery() instanceof DisjunctionMaxQuery)) {\n            allOptionalDisMaxQueries = false;\n            break;\n          }\n        }\n        if (allOptionalDisMaxQueries) {\n          // getAliasedMultiTermQuery() constructed a BooleanQuery containing only SHOULD DisjunctionMaxQuery-s.\n          // Unwrap the query and add a clause for each contained DisMax query.\n          for (BooleanClause c : ((BooleanQuery)q).clauses()) {\n            clauses.add(newBooleanClause(c.getQuery(), occur));\n          }\n          return;\n        }\n      }\n      clauses.add(newBooleanClause(q, occur));\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c03778630c4604270d88c148afb8c7de35b51d3c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"e55782fb51a6e9789542818eb2161a3247f39ace":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e55782fb51a6e9789542818eb2161a3247f39ace"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c03778630c4604270d88c148afb8c7de35b51d3c","e55782fb51a6e9789542818eb2161a3247f39ace"],"c03778630c4604270d88c148afb8c7de35b51d3c":[],"e55782fb51a6e9789542818eb2161a3247f39ace":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c03778630c4604270d88c148afb8c7de35b51d3c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}