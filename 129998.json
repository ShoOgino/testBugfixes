{"path":"lucene/core/src/java/org/apache/lucene/search/similarities/BM25Similarity#explainScore(int,Explanation,BM25Stats,NumericDocValues).mjava","commits":[{"id":"0837ab0472feecb3a54260729d845f839e1cbd72","date":1358283639,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/similarities/BM25Similarity#explainScore(int,Explanation,BM25Stats,NumericDocValues).mjava","pathOld":"/dev/null","sourceNew":"  private Explanation explainScore(int doc, Explanation freq, BM25Stats stats, NumericDocValues norms) {\n    Explanation result = new Explanation();\n    result.setDescription(\"score(doc=\"+doc+\",freq=\"+freq+\"), product of:\");\n    \n    Explanation boostExpl = new Explanation(stats.queryBoost * stats.topLevelBoost, \"boost\");\n    if (boostExpl.getValue() != 1.0f)\n      result.addDetail(boostExpl);\n    \n    result.addDetail(stats.idf);\n\n    Explanation tfNormExpl = new Explanation();\n    tfNormExpl.setDescription(\"tfNorm, computed from:\");\n    tfNormExpl.addDetail(freq);\n    tfNormExpl.addDetail(new Explanation(k1, \"parameter k1\"));\n    if (norms == null) {\n      tfNormExpl.addDetail(new Explanation(0, \"parameter b (norms omitted for field)\"));\n      tfNormExpl.setValue((freq.getValue() * (k1 + 1)) / (freq.getValue() + k1));\n    } else {\n      float doclen = decodeNormValue((byte)norms.get(doc));\n      tfNormExpl.addDetail(new Explanation(b, \"parameter b\"));\n      tfNormExpl.addDetail(new Explanation(stats.avgdl, \"avgFieldLength\"));\n      tfNormExpl.addDetail(new Explanation(doclen, \"fieldLength\"));\n      tfNormExpl.setValue((freq.getValue() * (k1 + 1)) / (freq.getValue() + k1 * (1 - b + b * doclen/stats.avgdl)));\n    }\n    result.addDetail(tfNormExpl);\n    result.setValue(boostExpl.getValue() * stats.idf.getValue() * tfNormExpl.getValue());\n    return result;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d4d69c535930b5cce125cff868d40f6373dc27d4","date":1360270101,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/similarities/BM25Similarity#explainScore(int,Explanation,BM25Stats,NumericDocValues).mjava","pathOld":"/dev/null","sourceNew":"  private Explanation explainScore(int doc, Explanation freq, BM25Stats stats, NumericDocValues norms) {\n    Explanation result = new Explanation();\n    result.setDescription(\"score(doc=\"+doc+\",freq=\"+freq+\"), product of:\");\n    \n    Explanation boostExpl = new Explanation(stats.queryBoost * stats.topLevelBoost, \"boost\");\n    if (boostExpl.getValue() != 1.0f)\n      result.addDetail(boostExpl);\n    \n    result.addDetail(stats.idf);\n\n    Explanation tfNormExpl = new Explanation();\n    tfNormExpl.setDescription(\"tfNorm, computed from:\");\n    tfNormExpl.addDetail(freq);\n    tfNormExpl.addDetail(new Explanation(k1, \"parameter k1\"));\n    if (norms == null) {\n      tfNormExpl.addDetail(new Explanation(0, \"parameter b (norms omitted for field)\"));\n      tfNormExpl.setValue((freq.getValue() * (k1 + 1)) / (freq.getValue() + k1));\n    } else {\n      float doclen = decodeNormValue((byte)norms.get(doc));\n      tfNormExpl.addDetail(new Explanation(b, \"parameter b\"));\n      tfNormExpl.addDetail(new Explanation(stats.avgdl, \"avgFieldLength\"));\n      tfNormExpl.addDetail(new Explanation(doclen, \"fieldLength\"));\n      tfNormExpl.setValue((freq.getValue() * (k1 + 1)) / (freq.getValue() + k1 * (1 - b + b * doclen/stats.avgdl)));\n    }\n    result.addDetail(tfNormExpl);\n    result.setValue(boostExpl.getValue() * stats.idf.getValue() * tfNormExpl.getValue());\n    return result;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ff3285c7b2387faedef0ffb24db20c4cbbd9fd91","date":1429620941,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/similarities/BM25Similarity#explainScore(int,Explanation,BM25Stats,NumericDocValues).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/similarities/BM25Similarity#explainScore(int,Explanation,BM25Stats,NumericDocValues).mjava","sourceNew":"  private Explanation explainScore(int doc, Explanation freq, BM25Stats stats, NumericDocValues norms) {\n    Explanation boostExpl = Explanation.match(stats.queryBoost * stats.topLevelBoost, \"boost\");\n    List<Explanation> subs = new ArrayList<>();\n    if (boostExpl.getValue() != 1.0f)\n      subs.add(boostExpl);\n    subs.add(stats.idf);\n    Explanation tfNormExpl = explainTFNorm(doc, freq, stats, norms);\n    subs.add(tfNormExpl);\n    return Explanation.match(\n        boostExpl.getValue() * stats.idf.getValue() * tfNormExpl.getValue(),\n        \"score(doc=\"+doc+\",freq=\"+freq+\"), product of:\", subs);\n  }\n\n","sourceOld":"  private Explanation explainScore(int doc, Explanation freq, BM25Stats stats, NumericDocValues norms) {\n    Explanation result = new Explanation();\n    result.setDescription(\"score(doc=\"+doc+\",freq=\"+freq+\"), product of:\");\n    \n    Explanation boostExpl = new Explanation(stats.queryBoost * stats.topLevelBoost, \"boost\");\n    if (boostExpl.getValue() != 1.0f)\n      result.addDetail(boostExpl);\n    \n    result.addDetail(stats.idf);\n\n    Explanation tfNormExpl = new Explanation();\n    tfNormExpl.setDescription(\"tfNorm, computed from:\");\n    tfNormExpl.addDetail(freq);\n    tfNormExpl.addDetail(new Explanation(k1, \"parameter k1\"));\n    if (norms == null) {\n      tfNormExpl.addDetail(new Explanation(0, \"parameter b (norms omitted for field)\"));\n      tfNormExpl.setValue((freq.getValue() * (k1 + 1)) / (freq.getValue() + k1));\n    } else {\n      float doclen = decodeNormValue((byte)norms.get(doc));\n      tfNormExpl.addDetail(new Explanation(b, \"parameter b\"));\n      tfNormExpl.addDetail(new Explanation(stats.avgdl, \"avgFieldLength\"));\n      tfNormExpl.addDetail(new Explanation(doclen, \"fieldLength\"));\n      tfNormExpl.setValue((freq.getValue() * (k1 + 1)) / (freq.getValue() + k1 * (1 - b + b * doclen/stats.avgdl)));\n    }\n    result.addDetail(tfNormExpl);\n    result.setValue(boostExpl.getValue() * stats.idf.getValue() * tfNormExpl.getValue());\n    return result;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2dfdf766e55e943d942055d7de53c7ad6bc45283","date":1441632886,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/similarities/BM25Similarity#explainScore(int,Explanation,BM25Stats,NumericDocValues).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/similarities/BM25Similarity#explainScore(int,Explanation,BM25Stats,NumericDocValues).mjava","sourceNew":"  private Explanation explainScore(int doc, Explanation freq, BM25Stats stats, NumericDocValues norms) {\n    Explanation boostExpl = Explanation.match(stats.boost, \"boost\");\n    List<Explanation> subs = new ArrayList<>();\n    if (boostExpl.getValue() != 1.0f)\n      subs.add(boostExpl);\n    subs.add(stats.idf);\n    Explanation tfNormExpl = explainTFNorm(doc, freq, stats, norms);\n    subs.add(tfNormExpl);\n    return Explanation.match(\n        boostExpl.getValue() * stats.idf.getValue() * tfNormExpl.getValue(),\n        \"score(doc=\"+doc+\",freq=\"+freq+\"), product of:\", subs);\n  }\n\n","sourceOld":"  private Explanation explainScore(int doc, Explanation freq, BM25Stats stats, NumericDocValues norms) {\n    Explanation boostExpl = Explanation.match(stats.queryBoost * stats.topLevelBoost, \"boost\");\n    List<Explanation> subs = new ArrayList<>();\n    if (boostExpl.getValue() != 1.0f)\n      subs.add(boostExpl);\n    subs.add(stats.idf);\n    Explanation tfNormExpl = explainTFNorm(doc, freq, stats, norms);\n    subs.add(tfNormExpl);\n    return Explanation.match(\n        boostExpl.getValue() * stats.idf.getValue() * tfNormExpl.getValue(),\n        \"score(doc=\"+doc+\",freq=\"+freq+\"), product of:\", subs);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6652c74b2358a0b13223817a6a793bf1c9d0749d","date":1474465301,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/similarities/BM25Similarity#explainScore(int,Explanation,BM25Stats,NumericDocValues).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/similarities/BM25Similarity#explainScore(int,Explanation,BM25Stats,NumericDocValues).mjava","sourceNew":"  private Explanation explainScore(int doc, Explanation freq, BM25Stats stats, NumericDocValues norms) throws IOException {\n    Explanation boostExpl = Explanation.match(stats.boost, \"boost\");\n    List<Explanation> subs = new ArrayList<>();\n    if (boostExpl.getValue() != 1.0f)\n      subs.add(boostExpl);\n    subs.add(stats.idf);\n    Explanation tfNormExpl = explainTFNorm(doc, freq, stats, norms);\n    subs.add(tfNormExpl);\n    return Explanation.match(\n        boostExpl.getValue() * stats.idf.getValue() * tfNormExpl.getValue(),\n        \"score(doc=\"+doc+\",freq=\"+freq+\"), product of:\", subs);\n  }\n\n","sourceOld":"  private Explanation explainScore(int doc, Explanation freq, BM25Stats stats, NumericDocValues norms) {\n    Explanation boostExpl = Explanation.match(stats.boost, \"boost\");\n    List<Explanation> subs = new ArrayList<>();\n    if (boostExpl.getValue() != 1.0f)\n      subs.add(boostExpl);\n    subs.add(stats.idf);\n    Explanation tfNormExpl = explainTFNorm(doc, freq, stats, norms);\n    subs.add(tfNormExpl);\n    return Explanation.match(\n        boostExpl.getValue() * stats.idf.getValue() * tfNormExpl.getValue(),\n        \"score(doc=\"+doc+\",freq=\"+freq+\"), product of:\", subs);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17e5da53e4e5bd659e22add9bba1cfa222e7e30d","date":1475435902,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/similarities/BM25Similarity#explainScore(int,Explanation,BM25Stats,NumericDocValues).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/similarities/BM25Similarity#explainScore(int,Explanation,BM25Stats,NumericDocValues).mjava","sourceNew":"  private Explanation explainScore(int doc, Explanation freq, BM25Stats stats, NumericDocValues norms) throws IOException {\n    Explanation boostExpl = Explanation.match(stats.boost, \"boost\");\n    List<Explanation> subs = new ArrayList<>();\n    if (boostExpl.getValue() != 1.0f)\n      subs.add(boostExpl);\n    subs.add(stats.idf);\n    Explanation tfNormExpl = explainTFNorm(doc, freq, stats, norms);\n    subs.add(tfNormExpl);\n    return Explanation.match(\n        boostExpl.getValue() * stats.idf.getValue() * tfNormExpl.getValue(),\n        \"score(doc=\"+doc+\",freq=\"+freq+\"), product of:\", subs);\n  }\n\n","sourceOld":"  private Explanation explainScore(int doc, Explanation freq, BM25Stats stats, NumericDocValues norms) {\n    Explanation boostExpl = Explanation.match(stats.boost, \"boost\");\n    List<Explanation> subs = new ArrayList<>();\n    if (boostExpl.getValue() != 1.0f)\n      subs.add(boostExpl);\n    subs.add(stats.idf);\n    Explanation tfNormExpl = explainTFNorm(doc, freq, stats, norms);\n    subs.add(tfNormExpl);\n    return Explanation.match(\n        boostExpl.getValue() * stats.idf.getValue() * tfNormExpl.getValue(),\n        \"score(doc=\"+doc+\",freq=\"+freq+\"), product of:\", subs);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/search/similarities/BM25Similarity#explainScore(int,Explanation,BM25Stats,NumericDocValues).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/similarities/BM25Similarity#explainScore(int,Explanation,BM25Stats,NumericDocValues).mjava","sourceNew":"  private Explanation explainScore(int doc, Explanation freq, BM25Stats stats, NumericDocValues norms) throws IOException {\n    Explanation boostExpl = Explanation.match(stats.boost, \"boost\");\n    List<Explanation> subs = new ArrayList<>();\n    if (boostExpl.getValue() != 1.0f)\n      subs.add(boostExpl);\n    subs.add(stats.idf);\n    Explanation tfNormExpl = explainTFNorm(doc, freq, stats, norms);\n    subs.add(tfNormExpl);\n    return Explanation.match(\n        boostExpl.getValue() * stats.idf.getValue() * tfNormExpl.getValue(),\n        \"score(doc=\"+doc+\",freq=\"+freq+\"), product of:\", subs);\n  }\n\n","sourceOld":"  private Explanation explainScore(int doc, Explanation freq, BM25Stats stats, NumericDocValues norms) {\n    Explanation boostExpl = Explanation.match(stats.boost, \"boost\");\n    List<Explanation> subs = new ArrayList<>();\n    if (boostExpl.getValue() != 1.0f)\n      subs.add(boostExpl);\n    subs.add(stats.idf);\n    Explanation tfNormExpl = explainTFNorm(doc, freq, stats, norms);\n    subs.add(tfNormExpl);\n    return Explanation.match(\n        boostExpl.getValue() * stats.idf.getValue() * tfNormExpl.getValue(),\n        \"score(doc=\"+doc+\",freq=\"+freq+\"), product of:\", subs);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"615370d2b876c3435773b5174df2e2242ad7981a","date":1495117651,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/similarities/BM25Similarity#explainScore(int,Explanation,BM25Stats,NumericDocValues,float[]).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/search/similarities/BM25Similarity#explainScore(int,Explanation,BM25Stats,NumericDocValues).mjava","sourceNew":"  private Explanation explainScore(int doc, Explanation freq, BM25Stats stats, NumericDocValues norms, float[] lengthCache) throws IOException {\n    Explanation boostExpl = Explanation.match(stats.boost, \"boost\");\n    List<Explanation> subs = new ArrayList<>();\n    if (boostExpl.getValue() != 1.0f)\n      subs.add(boostExpl);\n    subs.add(stats.idf);\n    Explanation tfNormExpl = explainTFNorm(doc, freq, stats, norms, lengthCache);\n    subs.add(tfNormExpl);\n    return Explanation.match(\n        boostExpl.getValue() * stats.idf.getValue() * tfNormExpl.getValue(),\n        \"score(doc=\"+doc+\",freq=\"+freq+\"), product of:\", subs);\n  }\n\n","sourceOld":"  private Explanation explainScore(int doc, Explanation freq, BM25Stats stats, NumericDocValues norms) throws IOException {\n    Explanation boostExpl = Explanation.match(stats.boost, \"boost\");\n    List<Explanation> subs = new ArrayList<>();\n    if (boostExpl.getValue() != 1.0f)\n      subs.add(boostExpl);\n    subs.add(stats.idf);\n    Explanation tfNormExpl = explainTFNorm(doc, freq, stats, norms);\n    subs.add(tfNormExpl);\n    return Explanation.match(\n        boostExpl.getValue() * stats.idf.getValue() * tfNormExpl.getValue(),\n        \"score(doc=\"+doc+\",freq=\"+freq+\"), product of:\", subs);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":4,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/search/similarities/BM25Similarity#explainScore(int,Explanation,BM25Stats,NumericDocValues).mjava","sourceNew":null,"sourceOld":"  private Explanation explainScore(int doc, Explanation freq, BM25Stats stats, NumericDocValues norms) throws IOException {\n    Explanation boostExpl = Explanation.match(stats.boost, \"boost\");\n    List<Explanation> subs = new ArrayList<>();\n    if (boostExpl.getValue() != 1.0f)\n      subs.add(boostExpl);\n    subs.add(stats.idf);\n    Explanation tfNormExpl = explainTFNorm(doc, freq, stats, norms);\n    subs.add(tfNormExpl);\n    return Explanation.match(\n        boostExpl.getValue() * stats.idf.getValue() * tfNormExpl.getValue(),\n        \"score(doc=\"+doc+\",freq=\"+freq+\"), product of:\", subs);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e9017cf144952056066919f1ebc7897ff9bd71b1":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d","615370d2b876c3435773b5174df2e2242ad7981a"],"615370d2b876c3435773b5174df2e2242ad7981a":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","0837ab0472feecb3a54260729d845f839e1cbd72"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["2dfdf766e55e943d942055d7de53c7ad6bc45283","6652c74b2358a0b13223817a6a793bf1c9d0749d"],"6652c74b2358a0b13223817a6a793bf1c9d0749d":["2dfdf766e55e943d942055d7de53c7ad6bc45283"],"2dfdf766e55e943d942055d7de53c7ad6bc45283":["ff3285c7b2387faedef0ffb24db20c4cbbd9fd91"],"0837ab0472feecb3a54260729d845f839e1cbd72":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ff3285c7b2387faedef0ffb24db20c4cbbd9fd91":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["2dfdf766e55e943d942055d7de53c7ad6bc45283","17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["615370d2b876c3435773b5174df2e2242ad7981a"]},"commit2Childs":{"e9017cf144952056066919f1ebc7897ff9bd71b1":[],"615370d2b876c3435773b5174df2e2242ad7981a":["e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["ff3285c7b2387faedef0ffb24db20c4cbbd9fd91"],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["e9017cf144952056066919f1ebc7897ff9bd71b1","615370d2b876c3435773b5174df2e2242ad7981a","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d4d69c535930b5cce125cff868d40f6373dc27d4","0837ab0472feecb3a54260729d845f839e1cbd72"],"6652c74b2358a0b13223817a6a793bf1c9d0749d":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"2dfdf766e55e943d942055d7de53c7ad6bc45283":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d","6652c74b2358a0b13223817a6a793bf1c9d0749d","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"0837ab0472feecb3a54260729d845f839e1cbd72":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"ff3285c7b2387faedef0ffb24db20c4cbbd9fd91":["2dfdf766e55e943d942055d7de53c7ad6bc45283"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e9017cf144952056066919f1ebc7897ff9bd71b1","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}