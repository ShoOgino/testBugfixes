{"path":"solr/core/src/test/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/BlockPoolSlice#selectReplicaToDelete(ReplicaInfo,ReplicaInfo).mjava","commits":[{"id":"44ca189138a5b6e1989d12ab992fab60e235ddc7","date":1549051496,"type":0,"author":"markrmiller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/BlockPoolSlice#selectReplicaToDelete(ReplicaInfo,ReplicaInfo).mjava","pathOld":"/dev/null","sourceNew":"  @VisibleForTesting\n  static ReplicaInfo selectReplicaToDelete(final ReplicaInfo replica1,\n                                           final ReplicaInfo replica2) {\n    ReplicaInfo replicaToKeep;\n    ReplicaInfo replicaToDelete;\n\n    // it's the same block so don't ever delete it, even if GS or size\n    // differs.  caller should keep the one it just discovered on disk\n    if (replica1.getBlockURI().equals(replica2.getBlockURI())) {\n      return null;\n    }\n    if (replica1.getGenerationStamp() != replica2.getGenerationStamp()) {\n      replicaToKeep = replica1.getGenerationStamp() > replica2.getGenerationStamp()\n          ? replica1 : replica2;\n    } else if (replica1.getNumBytes() != replica2.getNumBytes()) {\n      replicaToKeep = replica1.getNumBytes() > replica2.getNumBytes() ?\n          replica1 : replica2;\n    } else if (replica1.getVolume().isTransientStorage() &&\n        !replica2.getVolume().isTransientStorage()) {\n      replicaToKeep = replica2;\n    } else {\n      replicaToKeep = replica1;\n    }\n\n    replicaToDelete = (replicaToKeep == replica1) ? replica2 : replica1;\n\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"resolveDuplicateReplicas decide to keep \" + replicaToKeep\n          + \".  Will try to delete \" + replicaToDelete);\n    }\n    return replicaToDelete;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a966532d92cf9ba2856f15a8140151bb6b518e4b","date":1588290631,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/BlockPoolSlice#selectReplicaToDelete(ReplicaInfo,ReplicaInfo).mjava","pathOld":"solr/core/src/test/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/BlockPoolSlice#selectReplicaToDelete(ReplicaInfo,ReplicaInfo).mjava","sourceNew":"  @VisibleForTesting\n  static ReplicaInfo selectReplicaToDelete(final ReplicaInfo replica1,\n                                           final ReplicaInfo replica2) {\n    ReplicaInfo replicaToKeep;\n    ReplicaInfo replicaToDelete;\n\n    // it's the same block so don't ever delete it, even if GS or size\n    // differs.  caller should keep the one it just discovered on disk\n    if (replica1.getBlockURI().equals(replica2.getBlockURI())) {\n      return null;\n    }\n    if (replica1.getGenerationStamp() != replica2.getGenerationStamp()) {\n      replicaToKeep = replica1.getGenerationStamp() > replica2.getGenerationStamp()\n          ? replica1 : replica2;\n    } else if (replica1.getNumBytes() != replica2.getNumBytes()) {\n      replicaToKeep = replica1.getNumBytes() > replica2.getNumBytes() ?\n          replica1 : replica2;\n    } else if (replica1.getVolume().isTransientStorage() &&\n        !replica2.getVolume().isTransientStorage()) {\n      replicaToKeep = replica2;\n    } else {\n      replicaToKeep = replica1;\n    }\n\n    replicaToDelete = (replicaToKeep == replica1) ? replica2 : replica1;\n\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"resolveDuplicateReplicas decide to keep {}.  Will try to delete {}\", replicaToKeep, replicaToDelete);\n    }\n    return replicaToDelete;\n  }\n\n","sourceOld":"  @VisibleForTesting\n  static ReplicaInfo selectReplicaToDelete(final ReplicaInfo replica1,\n                                           final ReplicaInfo replica2) {\n    ReplicaInfo replicaToKeep;\n    ReplicaInfo replicaToDelete;\n\n    // it's the same block so don't ever delete it, even if GS or size\n    // differs.  caller should keep the one it just discovered on disk\n    if (replica1.getBlockURI().equals(replica2.getBlockURI())) {\n      return null;\n    }\n    if (replica1.getGenerationStamp() != replica2.getGenerationStamp()) {\n      replicaToKeep = replica1.getGenerationStamp() > replica2.getGenerationStamp()\n          ? replica1 : replica2;\n    } else if (replica1.getNumBytes() != replica2.getNumBytes()) {\n      replicaToKeep = replica1.getNumBytes() > replica2.getNumBytes() ?\n          replica1 : replica2;\n    } else if (replica1.getVolume().isTransientStorage() &&\n        !replica2.getVolume().isTransientStorage()) {\n      replicaToKeep = replica2;\n    } else {\n      replicaToKeep = replica1;\n    }\n\n    replicaToDelete = (replicaToKeep == replica1) ? replica2 : replica1;\n\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"resolveDuplicateReplicas decide to keep \" + replicaToKeep\n          + \".  Will try to delete \" + replicaToDelete);\n    }\n    return replicaToDelete;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"44ca189138a5b6e1989d12ab992fab60e235ddc7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a966532d92cf9ba2856f15a8140151bb6b518e4b":["44ca189138a5b6e1989d12ab992fab60e235ddc7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a966532d92cf9ba2856f15a8140151bb6b518e4b"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["44ca189138a5b6e1989d12ab992fab60e235ddc7"],"44ca189138a5b6e1989d12ab992fab60e235ddc7":["a966532d92cf9ba2856f15a8140151bb6b518e4b"],"a966532d92cf9ba2856f15a8140151bb6b518e4b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}