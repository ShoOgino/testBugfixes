{"path":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoPath#distance(DistanceStyle,double,double,double).mjava","commits":[{"id":"b4e444678504caf66a8060b1d514383aa4feac0c","date":1457399659,"type":1,"author":"David Smiley","isMerge":false,"pathNew":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoPath#distance(DistanceStyle,double,double,double).mjava","pathOld":"lucene/spatial3d/src/java/org/apache/lucene/geo3d/GeoPath#distance(DistanceStyle,double,double,double).mjava","sourceNew":"  @Override\n  protected double distance(final DistanceStyle distanceStyle, final double x, final double y, final double z) {\n    // Algorithm:\n    // (1) If the point is within any of the segments along the path, return that value.\n    // (2) If the point is within any of the segment end circles along the path, return that value.\n    double currentDistance = 0.0;\n    for (PathSegment segment : segments) {\n      double distance = segment.pathDistance(planetModel, distanceStyle, x,y,z);\n      if (distance != Double.MAX_VALUE)\n        return currentDistance + distance;\n      currentDistance += segment.fullPathDistance(distanceStyle);\n    }\n\n    int segmentIndex = 0;\n    currentDistance = 0.0;\n    for (SegmentEndpoint endpoint : endPoints) {\n      double distance = endpoint.pathDistance(distanceStyle, x, y, z);\n      if (distance != Double.MAX_VALUE)\n        return currentDistance + distance;\n      if (segmentIndex < segments.size())\n        currentDistance += segments.get(segmentIndex++).fullPathDistance(distanceStyle);\n    }\n\n    return Double.MAX_VALUE;\n  }\n\n","sourceOld":"  @Override\n  protected double distance(final DistanceStyle distanceStyle, final double x, final double y, final double z) {\n    // Algorithm:\n    // (1) If the point is within any of the segments along the path, return that value.\n    // (2) If the point is within any of the segment end circles along the path, return that value.\n    double currentDistance = 0.0;\n    for (PathSegment segment : segments) {\n      double distance = segment.pathDistance(planetModel, distanceStyle, x,y,z);\n      if (distance != Double.MAX_VALUE)\n        return currentDistance + distance;\n      currentDistance += segment.fullPathDistance(distanceStyle);\n    }\n\n    int segmentIndex = 0;\n    currentDistance = 0.0;\n    for (SegmentEndpoint endpoint : endPoints) {\n      double distance = endpoint.pathDistance(distanceStyle, x, y, z);\n      if (distance != Double.MAX_VALUE)\n        return currentDistance + distance;\n      if (segmentIndex < segments.size())\n        currentDistance += segments.get(segmentIndex++).fullPathDistance(distanceStyle);\n    }\n\n    return Double.MAX_VALUE;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"760628478e121972168791a2afa6af915192c4a6","date":1459842108,"type":5,"author":"Karl Wright","isMerge":false,"pathNew":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoStandardPath#distance(DistanceStyle,double,double,double).mjava","pathOld":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoPath#distance(DistanceStyle,double,double,double).mjava","sourceNew":"  @Override\n  protected double distance(final DistanceStyle distanceStyle, final double x, final double y, final double z) {\n    // Algorithm:\n    // (1) If the point is within any of the segments along the path, return that value.\n    // (2) If the point is within any of the segment end circles along the path, return that value.\n    double currentDistance = 0.0;\n    for (PathSegment segment : segments) {\n      double distance = segment.pathDistance(planetModel, distanceStyle, x,y,z);\n      if (distance != Double.MAX_VALUE)\n        return currentDistance + distance;\n      currentDistance += segment.fullPathDistance(distanceStyle);\n    }\n\n    int segmentIndex = 0;\n    currentDistance = 0.0;\n    for (SegmentEndpoint endpoint : endPoints) {\n      double distance = endpoint.pathDistance(distanceStyle, x, y, z);\n      if (distance != Double.MAX_VALUE)\n        return currentDistance + distance;\n      if (segmentIndex < segments.size())\n        currentDistance += segments.get(segmentIndex++).fullPathDistance(distanceStyle);\n    }\n\n    return Double.MAX_VALUE;\n  }\n\n","sourceOld":"  @Override\n  protected double distance(final DistanceStyle distanceStyle, final double x, final double y, final double z) {\n    // Algorithm:\n    // (1) If the point is within any of the segments along the path, return that value.\n    // (2) If the point is within any of the segment end circles along the path, return that value.\n    double currentDistance = 0.0;\n    for (PathSegment segment : segments) {\n      double distance = segment.pathDistance(planetModel, distanceStyle, x,y,z);\n      if (distance != Double.MAX_VALUE)\n        return currentDistance + distance;\n      currentDistance += segment.fullPathDistance(distanceStyle);\n    }\n\n    int segmentIndex = 0;\n    currentDistance = 0.0;\n    for (SegmentEndpoint endpoint : endPoints) {\n      double distance = endpoint.pathDistance(distanceStyle, x, y, z);\n      if (distance != Double.MAX_VALUE)\n        return currentDistance + distance;\n      if (segmentIndex < segments.size())\n        currentDistance += segments.get(segmentIndex++).fullPathDistance(distanceStyle);\n    }\n\n    return Double.MAX_VALUE;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"09af2c9610ce53a4b25fd99344299b40318a4a1a","date":1459876565,"type":5,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoStandardPath#distance(DistanceStyle,double,double,double).mjava","pathOld":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/GeoPath#distance(DistanceStyle,double,double,double).mjava","sourceNew":"  @Override\n  protected double distance(final DistanceStyle distanceStyle, final double x, final double y, final double z) {\n    // Algorithm:\n    // (1) If the point is within any of the segments along the path, return that value.\n    // (2) If the point is within any of the segment end circles along the path, return that value.\n    double currentDistance = 0.0;\n    for (PathSegment segment : segments) {\n      double distance = segment.pathDistance(planetModel, distanceStyle, x,y,z);\n      if (distance != Double.MAX_VALUE)\n        return currentDistance + distance;\n      currentDistance += segment.fullPathDistance(distanceStyle);\n    }\n\n    int segmentIndex = 0;\n    currentDistance = 0.0;\n    for (SegmentEndpoint endpoint : endPoints) {\n      double distance = endpoint.pathDistance(distanceStyle, x, y, z);\n      if (distance != Double.MAX_VALUE)\n        return currentDistance + distance;\n      if (segmentIndex < segments.size())\n        currentDistance += segments.get(segmentIndex++).fullPathDistance(distanceStyle);\n    }\n\n    return Double.MAX_VALUE;\n  }\n\n","sourceOld":"  @Override\n  protected double distance(final DistanceStyle distanceStyle, final double x, final double y, final double z) {\n    // Algorithm:\n    // (1) If the point is within any of the segments along the path, return that value.\n    // (2) If the point is within any of the segment end circles along the path, return that value.\n    double currentDistance = 0.0;\n    for (PathSegment segment : segments) {\n      double distance = segment.pathDistance(planetModel, distanceStyle, x,y,z);\n      if (distance != Double.MAX_VALUE)\n        return currentDistance + distance;\n      currentDistance += segment.fullPathDistance(distanceStyle);\n    }\n\n    int segmentIndex = 0;\n    currentDistance = 0.0;\n    for (SegmentEndpoint endpoint : endPoints) {\n      double distance = endpoint.pathDistance(distanceStyle, x, y, z);\n      if (distance != Double.MAX_VALUE)\n        return currentDistance + distance;\n      if (segmentIndex < segments.size())\n        currentDistance += segments.get(segmentIndex++).fullPathDistance(distanceStyle);\n    }\n\n    return Double.MAX_VALUE;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"760628478e121972168791a2afa6af915192c4a6":["b4e444678504caf66a8060b1d514383aa4feac0c"],"09af2c9610ce53a4b25fd99344299b40318a4a1a":["b4e444678504caf66a8060b1d514383aa4feac0c","760628478e121972168791a2afa6af915192c4a6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b4e444678504caf66a8060b1d514383aa4feac0c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["760628478e121972168791a2afa6af915192c4a6"]},"commit2Childs":{"760628478e121972168791a2afa6af915192c4a6":["09af2c9610ce53a4b25fd99344299b40318a4a1a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"09af2c9610ce53a4b25fd99344299b40318a4a1a":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b4e444678504caf66a8060b1d514383aa4feac0c"],"b4e444678504caf66a8060b1d514383aa4feac0c":["760628478e121972168791a2afa6af915192c4a6","09af2c9610ce53a4b25fd99344299b40318a4a1a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["09af2c9610ce53a4b25fd99344299b40318a4a1a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}