{"path":"lucene/core/src/java/org/apache/lucene/codecs/block/BlockPostingsReader.BlockDocsAndPositionsEnum#BlockDocsAndPositionsEnum(FieldInfo).mjava","commits":[{"id":"e885d2b1e112b1d9db6a2dae82b3b493dfba1df1","date":1342716838,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/block/BlockPostingsReader.BlockDocsAndPositionsEnum#BlockDocsAndPositionsEnum(FieldInfo).mjava","pathOld":"/dev/null","sourceNew":"    public BlockDocsAndPositionsEnum(FieldInfo fieldInfo) throws IOException {\n      this.startDocIn = BlockPostingsReader.this.docIn;\n      this.docIn = (IndexInput) startDocIn.clone();\n      this.posIn = (IndexInput) BlockPostingsReader.this.posIn.clone();\n      encoded = new byte[blockSize*4 + 4];\n      encodedBuffer = ByteBuffer.wrap(encoded).asIntBuffer();\n      indexHasOffsets = fieldInfo.getIndexOptions().compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS) >= 0;\n      indexHasPayloads = fieldInfo.hasPayloads();\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8081d5018e8846bf4080f2809432c759996e749f","date":1344206372,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/block/BlockPostingsReader.BlockDocsAndPositionsEnum#BlockDocsAndPositionsEnum(FieldInfo).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/block/BlockPostingsReader.BlockDocsAndPositionsEnum#BlockDocsAndPositionsEnum(FieldInfo).mjava","sourceNew":"    public BlockDocsAndPositionsEnum(FieldInfo fieldInfo) throws IOException {\n      this.startDocIn = BlockPostingsReader.this.docIn;\n      this.docIn = (IndexInput) startDocIn.clone();\n      this.posIn = (IndexInput) BlockPostingsReader.this.posIn.clone();\n      encoded = new byte[blockSize*4];\n      encodedBuffer = ByteBuffer.wrap(encoded).asIntBuffer();\n      indexHasOffsets = fieldInfo.getIndexOptions().compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS) >= 0;\n      indexHasPayloads = fieldInfo.hasPayloads();\n    }\n\n","sourceOld":"    public BlockDocsAndPositionsEnum(FieldInfo fieldInfo) throws IOException {\n      this.startDocIn = BlockPostingsReader.this.docIn;\n      this.docIn = (IndexInput) startDocIn.clone();\n      this.posIn = (IndexInput) BlockPostingsReader.this.posIn.clone();\n      encoded = new byte[blockSize*4 + 4];\n      encodedBuffer = ByteBuffer.wrap(encoded).asIntBuffer();\n      indexHasOffsets = fieldInfo.getIndexOptions().compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS) >= 0;\n      indexHasPayloads = fieldInfo.hasPayloads();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d2f8624b27ae4159f0d53a55e5c9c5c6f6fa8f51","date":1344355078,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/block/BlockPostingsReader.BlockDocsAndPositionsEnum#BlockDocsAndPositionsEnum(FieldInfo).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/block/BlockPostingsReader.BlockDocsAndPositionsEnum#BlockDocsAndPositionsEnum(FieldInfo).mjava","sourceNew":"    public BlockDocsAndPositionsEnum(FieldInfo fieldInfo) throws IOException {\n      this.startDocIn = BlockPostingsReader.this.docIn;\n      this.docIn = (IndexInput) startDocIn.clone();\n      this.posIn = (IndexInput) BlockPostingsReader.this.posIn.clone();\n      encoded = new byte[BLOCK_SIZE*4];\n      encodedBuffer = ByteBuffer.wrap(encoded).asIntBuffer();\n      indexHasOffsets = fieldInfo.getIndexOptions().compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS) >= 0;\n      indexHasPayloads = fieldInfo.hasPayloads();\n    }\n\n","sourceOld":"    public BlockDocsAndPositionsEnum(FieldInfo fieldInfo) throws IOException {\n      this.startDocIn = BlockPostingsReader.this.docIn;\n      this.docIn = (IndexInput) startDocIn.clone();\n      this.posIn = (IndexInput) BlockPostingsReader.this.posIn.clone();\n      encoded = new byte[blockSize*4];\n      encodedBuffer = ByteBuffer.wrap(encoded).asIntBuffer();\n      indexHasOffsets = fieldInfo.getIndexOptions().compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS) >= 0;\n      indexHasPayloads = fieldInfo.hasPayloads();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e6b41208259e8566cba0ecac7da6a331ea9732dd","date":1344551376,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/block/BlockPostingsReader.BlockDocsAndPositionsEnum#BlockDocsAndPositionsEnum(FieldInfo).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/block/BlockPostingsReader.BlockDocsAndPositionsEnum#BlockDocsAndPositionsEnum(FieldInfo).mjava","sourceNew":"    public BlockDocsAndPositionsEnum(FieldInfo fieldInfo) throws IOException {\n      this.startDocIn = BlockPostingsReader.this.docIn;\n      this.docIn = (IndexInput) startDocIn.clone();\n      this.posIn = (IndexInput) BlockPostingsReader.this.posIn.clone();\n      encoded = new byte[MAX_ENCODED_SIZE];\n      indexHasOffsets = fieldInfo.getIndexOptions().compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS) >= 0;\n      indexHasPayloads = fieldInfo.hasPayloads();\n    }\n\n","sourceOld":"    public BlockDocsAndPositionsEnum(FieldInfo fieldInfo) throws IOException {\n      this.startDocIn = BlockPostingsReader.this.docIn;\n      this.docIn = (IndexInput) startDocIn.clone();\n      this.posIn = (IndexInput) BlockPostingsReader.this.posIn.clone();\n      encoded = new byte[BLOCK_SIZE*4];\n      encodedBuffer = ByteBuffer.wrap(encoded).asIntBuffer();\n      indexHasOffsets = fieldInfo.getIndexOptions().compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS) >= 0;\n      indexHasPayloads = fieldInfo.hasPayloads();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f8615860cb50aefb8eebca1d1b3893dbe21cf126","date":1345550448,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/block/BlockPostingsReader.BlockDocsAndPositionsEnum#BlockDocsAndPositionsEnum(FieldInfo).mjava","pathOld":"/dev/null","sourceNew":"    public BlockDocsAndPositionsEnum(FieldInfo fieldInfo) throws IOException {\n      this.startDocIn = BlockPostingsReader.this.docIn;\n      this.docIn = (IndexInput) startDocIn.clone();\n      this.posIn = (IndexInput) BlockPostingsReader.this.posIn.clone();\n      encoded = new byte[MAX_ENCODED_SIZE];\n      indexHasOffsets = fieldInfo.getIndexOptions().compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS) >= 0;\n      indexHasPayloads = fieldInfo.hasPayloads();\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"67fae9c2f12c73cc68201fbd26960be531960b43","date":1345551913,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/block/BlockPostingsReader.BlockDocsAndPositionsEnum#BlockDocsAndPositionsEnum(FieldInfo).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/block/BlockPostingsReader.BlockDocsAndPositionsEnum#BlockDocsAndPositionsEnum(FieldInfo).mjava","sourceNew":"    public BlockDocsAndPositionsEnum(FieldInfo fieldInfo) throws IOException {\n      this.startDocIn = BlockPostingsReader.this.docIn;\n      this.docIn = startDocIn.clone();\n      this.posIn = BlockPostingsReader.this.posIn.clone();\n      encoded = new byte[MAX_ENCODED_SIZE];\n      indexHasOffsets = fieldInfo.getIndexOptions().compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS) >= 0;\n      indexHasPayloads = fieldInfo.hasPayloads();\n    }\n\n","sourceOld":"    public BlockDocsAndPositionsEnum(FieldInfo fieldInfo) throws IOException {\n      this.startDocIn = BlockPostingsReader.this.docIn;\n      this.docIn = (IndexInput) startDocIn.clone();\n      this.posIn = (IndexInput) BlockPostingsReader.this.posIn.clone();\n      encoded = new byte[MAX_ENCODED_SIZE];\n      indexHasOffsets = fieldInfo.getIndexOptions().compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS) >= 0;\n      indexHasPayloads = fieldInfo.hasPayloads();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"001b25b42373b22a52f399dbf072f1224632e8e6","date":1345889167,"type":0,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/codecs/block/BlockPostingsReader.BlockDocsAndPositionsEnum#BlockDocsAndPositionsEnum(FieldInfo).mjava","pathOld":"/dev/null","sourceNew":"    public BlockDocsAndPositionsEnum(FieldInfo fieldInfo) throws IOException {\n      this.startDocIn = BlockPostingsReader.this.docIn;\n      this.docIn = startDocIn.clone();\n      this.posIn = BlockPostingsReader.this.posIn.clone();\n      encoded = new byte[MAX_ENCODED_SIZE];\n      indexHasOffsets = fieldInfo.getIndexOptions().compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS) >= 0;\n      indexHasPayloads = fieldInfo.hasPayloads();\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2","date":1346834651,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/codecs/src/java/org/apache/lucene/codecs/block/BlockPostingsReader.BlockDocsAndPositionsEnum#BlockDocsAndPositionsEnum(FieldInfo).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/codecs/block/BlockPostingsReader.BlockDocsAndPositionsEnum#BlockDocsAndPositionsEnum(FieldInfo).mjava","sourceNew":"    public BlockDocsAndPositionsEnum(FieldInfo fieldInfo) throws IOException {\n      this.startDocIn = BlockPostingsReader.this.docIn;\n      this.docIn = startDocIn.clone();\n      this.posIn = BlockPostingsReader.this.posIn.clone();\n      encoded = new byte[MAX_ENCODED_SIZE];\n      indexHasOffsets = fieldInfo.getIndexOptions().compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS) >= 0;\n      indexHasPayloads = fieldInfo.hasPayloads();\n    }\n\n","sourceOld":"    public BlockDocsAndPositionsEnum(FieldInfo fieldInfo) throws IOException {\n      this.startDocIn = BlockPostingsReader.this.docIn;\n      this.docIn = startDocIn.clone();\n      this.posIn = BlockPostingsReader.this.posIn.clone();\n      encoded = new byte[MAX_ENCODED_SIZE];\n      indexHasOffsets = fieldInfo.getIndexOptions().compareTo(IndexOptions.DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS) >= 0;\n      indexHasPayloads = fieldInfo.hasPayloads();\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"001b25b42373b22a52f399dbf072f1224632e8e6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","67fae9c2f12c73cc68201fbd26960be531960b43"],"67fae9c2f12c73cc68201fbd26960be531960b43":["f8615860cb50aefb8eebca1d1b3893dbe21cf126"],"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2":["67fae9c2f12c73cc68201fbd26960be531960b43"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f8615860cb50aefb8eebca1d1b3893dbe21cf126":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","e6b41208259e8566cba0ecac7da6a331ea9732dd"],"d2f8624b27ae4159f0d53a55e5c9c5c6f6fa8f51":["8081d5018e8846bf4080f2809432c759996e749f"],"e885d2b1e112b1d9db6a2dae82b3b493dfba1df1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"8081d5018e8846bf4080f2809432c759996e749f":["e885d2b1e112b1d9db6a2dae82b3b493dfba1df1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3e45d45bc3730ddd1341f4eb6025f33b8482e6e2"],"e6b41208259e8566cba0ecac7da6a331ea9732dd":["d2f8624b27ae4159f0d53a55e5c9c5c6f6fa8f51"]},"commit2Childs":{"001b25b42373b22a52f399dbf072f1224632e8e6":[],"67fae9c2f12c73cc68201fbd26960be531960b43":["001b25b42373b22a52f399dbf072f1224632e8e6","3e45d45bc3730ddd1341f4eb6025f33b8482e6e2"],"3e45d45bc3730ddd1341f4eb6025f33b8482e6e2":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["001b25b42373b22a52f399dbf072f1224632e8e6","f8615860cb50aefb8eebca1d1b3893dbe21cf126","e885d2b1e112b1d9db6a2dae82b3b493dfba1df1"],"f8615860cb50aefb8eebca1d1b3893dbe21cf126":["67fae9c2f12c73cc68201fbd26960be531960b43"],"d2f8624b27ae4159f0d53a55e5c9c5c6f6fa8f51":["e6b41208259e8566cba0ecac7da6a331ea9732dd"],"e885d2b1e112b1d9db6a2dae82b3b493dfba1df1":["8081d5018e8846bf4080f2809432c759996e749f"],"8081d5018e8846bf4080f2809432c759996e749f":["d2f8624b27ae4159f0d53a55e5c9c5c6f6fa8f51"],"e6b41208259e8566cba0ecac7da6a331ea9732dd":["f8615860cb50aefb8eebca1d1b3893dbe21cf126"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["001b25b42373b22a52f399dbf072f1224632e8e6","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}