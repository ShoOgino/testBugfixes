{"path":"solr/contrib/analytics/src/test/org/apache/solr/analytics/facet/RangeFacetTest#doubleOthersTest().mjava","commits":[{"id":"3bd4c6955956e76c96eb12dfe64108ed03522983","date":1508262722,"type":0,"author":"Houston Putman","isMerge":false,"pathNew":"solr/contrib/analytics/src/test/org/apache/solr/analytics/facet/RangeFacetTest#doubleOthersTest().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void doubleOthersTest() throws Exception {\n    Map<String, String> expressions = new HashMap<>();\n    expressions.put(\"mean\", \"mean(float_f)\");\n    expressions.put(\"count\", \"count(string_sm)\");\n    \n    addFacet(\"before_between\", \"{ 'type':'range', \"\n        + \" 'field': 'double_d', \"\n        + \" 'start': '2', \"\n        + \" 'end' : '4', \"\n        + \" 'gaps' : ['1'], \"\n        + \" 'others' : ['before', 'between'] }\");\n\n    addFacetValue(\"[2.0 TO 3.0)\");\n    addFacetResult(\"mean\", 8.0/3.0);\n    addFacetResult(\"count\", 6L);\n    \n    addFacetValue(\"[3.0 TO 4.0)\");\n    addFacetResult(\"mean\", 2.0);\n    addFacetResult(\"count\", 6L);\n    \n    addFacetValue(\"(* TO 2.0)\");\n    addFacetResult(\"mean\", 10.0/3.0);\n    addFacetResult(\"count\", 6L);\n    \n    addFacetValue(\"[2.0 TO 4.0)\");\n    addFacetResult(\"mean\", 14.0/6.0);\n    addFacetResult(\"count\", 12L);\n    \n    addFacet(\"after\", \"{ 'type':'range', \"\n        + \" 'field': 'double_d', \"\n        + \" 'start': '2', \"\n        + \" 'end' : '4', \"\n        + \" 'gaps' : ['1'], \"\n        + \" 'others' : ['after'] }\");\n\n    addFacetValue(\"[2.0 TO 3.0)\");\n    addFacetResult(\"mean\", 8.0/3.0);\n    addFacetResult(\"count\", 6L);\n    \n    addFacetValue(\"[3.0 TO 4.0)\");\n    addFacetResult(\"mean\", 2.0);\n    addFacetResult(\"count\", 6L);\n    \n    addFacetValue(\"[4.0 TO *)\");\n    addFacetResult(\"mean\", 2.5);\n    addFacetResult(\"count\", 6L);\n    \n    testGrouping(expressions);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1e4e64b7199d2f2a17be7f3926c7532553910dce","date":1564342581,"type":3,"author":"Jason Gerlowski","isMerge":false,"pathNew":"solr/contrib/analytics/src/test/org/apache/solr/analytics/facet/RangeFacetTest#doubleOthersTest().mjava","pathOld":"solr/contrib/analytics/src/test/org/apache/solr/analytics/facet/RangeFacetTest#doubleOthersTest().mjava","sourceNew":"  @Test\n  public void doubleOthersTest() throws Exception {\n    Map<String, String> expressions = new HashMap<>();\n    expressions.put(\"mean\", \"mean(float_f)\");\n    expressions.put(\"count\", \"count(string_sm)\");\n\n    addFacet(\"before_between\", \"{ 'type':'range', \"\n        + \" 'field': 'double_d', \"\n        + \" 'start': '2', \"\n        + \" 'end' : '4', \"\n        + \" 'gaps' : ['1'], \"\n        + \" 'others' : ['before', 'between'] }\");\n\n    addFacetValue(\"[2.0 TO 3.0)\");\n    addFacetResult(\"mean\", 8.0/3.0);\n    addFacetResult(\"count\", 6L);\n\n    addFacetValue(\"[3.0 TO 4.0)\");\n    addFacetResult(\"mean\", 2.0);\n    addFacetResult(\"count\", 6L);\n\n    addFacetValue(\"(* TO 2.0)\");\n    addFacetResult(\"mean\", 10.0/3.0);\n    addFacetResult(\"count\", 6L);\n\n    addFacetValue(\"[2.0 TO 4.0)\");\n    addFacetResult(\"mean\", 14.0/6.0);\n    addFacetResult(\"count\", 12L);\n\n    addFacet(\"after\", \"{ 'type':'range', \"\n        + \" 'field': 'double_d', \"\n        + \" 'start': '2', \"\n        + \" 'end' : '4', \"\n        + \" 'gaps' : ['1'], \"\n        + \" 'others' : ['after'] }\");\n\n    addFacetValue(\"[2.0 TO 3.0)\");\n    addFacetResult(\"mean\", 8.0/3.0);\n    addFacetResult(\"count\", 6L);\n\n    addFacetValue(\"[3.0 TO 4.0)\");\n    addFacetResult(\"mean\", 2.0);\n    addFacetResult(\"count\", 6L);\n\n    addFacetValue(\"[4.0 TO *)\");\n    addFacetResult(\"mean\", 2.5);\n    addFacetResult(\"count\", 6L);\n\n    testGrouping(expressions);\n  }\n\n","sourceOld":"  @Test\n  public void doubleOthersTest() throws Exception {\n    Map<String, String> expressions = new HashMap<>();\n    expressions.put(\"mean\", \"mean(float_f)\");\n    expressions.put(\"count\", \"count(string_sm)\");\n    \n    addFacet(\"before_between\", \"{ 'type':'range', \"\n        + \" 'field': 'double_d', \"\n        + \" 'start': '2', \"\n        + \" 'end' : '4', \"\n        + \" 'gaps' : ['1'], \"\n        + \" 'others' : ['before', 'between'] }\");\n\n    addFacetValue(\"[2.0 TO 3.0)\");\n    addFacetResult(\"mean\", 8.0/3.0);\n    addFacetResult(\"count\", 6L);\n    \n    addFacetValue(\"[3.0 TO 4.0)\");\n    addFacetResult(\"mean\", 2.0);\n    addFacetResult(\"count\", 6L);\n    \n    addFacetValue(\"(* TO 2.0)\");\n    addFacetResult(\"mean\", 10.0/3.0);\n    addFacetResult(\"count\", 6L);\n    \n    addFacetValue(\"[2.0 TO 4.0)\");\n    addFacetResult(\"mean\", 14.0/6.0);\n    addFacetResult(\"count\", 12L);\n    \n    addFacet(\"after\", \"{ 'type':'range', \"\n        + \" 'field': 'double_d', \"\n        + \" 'start': '2', \"\n        + \" 'end' : '4', \"\n        + \" 'gaps' : ['1'], \"\n        + \" 'others' : ['after'] }\");\n\n    addFacetValue(\"[2.0 TO 3.0)\");\n    addFacetResult(\"mean\", 8.0/3.0);\n    addFacetResult(\"count\", 6L);\n    \n    addFacetValue(\"[3.0 TO 4.0)\");\n    addFacetResult(\"mean\", 2.0);\n    addFacetResult(\"count\", 6L);\n    \n    addFacetValue(\"[4.0 TO *)\");\n    addFacetResult(\"mean\", 2.5);\n    addFacetResult(\"count\", 6L);\n    \n    testGrouping(expressions);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f8061ddd97f3352007d927dae445884a6f3d857b","date":1564988276,"type":3,"author":"Atri Sharma","isMerge":true,"pathNew":"solr/contrib/analytics/src/test/org/apache/solr/analytics/facet/RangeFacetTest#doubleOthersTest().mjava","pathOld":"solr/contrib/analytics/src/test/org/apache/solr/analytics/facet/RangeFacetTest#doubleOthersTest().mjava","sourceNew":"  @Test\n  public void doubleOthersTest() throws Exception {\n    Map<String, String> expressions = new HashMap<>();\n    expressions.put(\"mean\", \"mean(float_f)\");\n    expressions.put(\"count\", \"count(string_sm)\");\n\n    addFacet(\"before_between\", \"{ 'type':'range', \"\n        + \" 'field': 'double_d', \"\n        + \" 'start': '2', \"\n        + \" 'end' : '4', \"\n        + \" 'gaps' : ['1'], \"\n        + \" 'others' : ['before', 'between'] }\");\n\n    addFacetValue(\"[2.0 TO 3.0)\");\n    addFacetResult(\"mean\", 8.0/3.0);\n    addFacetResult(\"count\", 6L);\n\n    addFacetValue(\"[3.0 TO 4.0)\");\n    addFacetResult(\"mean\", 2.0);\n    addFacetResult(\"count\", 6L);\n\n    addFacetValue(\"(* TO 2.0)\");\n    addFacetResult(\"mean\", 10.0/3.0);\n    addFacetResult(\"count\", 6L);\n\n    addFacetValue(\"[2.0 TO 4.0)\");\n    addFacetResult(\"mean\", 14.0/6.0);\n    addFacetResult(\"count\", 12L);\n\n    addFacet(\"after\", \"{ 'type':'range', \"\n        + \" 'field': 'double_d', \"\n        + \" 'start': '2', \"\n        + \" 'end' : '4', \"\n        + \" 'gaps' : ['1'], \"\n        + \" 'others' : ['after'] }\");\n\n    addFacetValue(\"[2.0 TO 3.0)\");\n    addFacetResult(\"mean\", 8.0/3.0);\n    addFacetResult(\"count\", 6L);\n\n    addFacetValue(\"[3.0 TO 4.0)\");\n    addFacetResult(\"mean\", 2.0);\n    addFacetResult(\"count\", 6L);\n\n    addFacetValue(\"[4.0 TO *)\");\n    addFacetResult(\"mean\", 2.5);\n    addFacetResult(\"count\", 6L);\n\n    testGrouping(expressions);\n  }\n\n","sourceOld":"  @Test\n  public void doubleOthersTest() throws Exception {\n    Map<String, String> expressions = new HashMap<>();\n    expressions.put(\"mean\", \"mean(float_f)\");\n    expressions.put(\"count\", \"count(string_sm)\");\n    \n    addFacet(\"before_between\", \"{ 'type':'range', \"\n        + \" 'field': 'double_d', \"\n        + \" 'start': '2', \"\n        + \" 'end' : '4', \"\n        + \" 'gaps' : ['1'], \"\n        + \" 'others' : ['before', 'between'] }\");\n\n    addFacetValue(\"[2.0 TO 3.0)\");\n    addFacetResult(\"mean\", 8.0/3.0);\n    addFacetResult(\"count\", 6L);\n    \n    addFacetValue(\"[3.0 TO 4.0)\");\n    addFacetResult(\"mean\", 2.0);\n    addFacetResult(\"count\", 6L);\n    \n    addFacetValue(\"(* TO 2.0)\");\n    addFacetResult(\"mean\", 10.0/3.0);\n    addFacetResult(\"count\", 6L);\n    \n    addFacetValue(\"[2.0 TO 4.0)\");\n    addFacetResult(\"mean\", 14.0/6.0);\n    addFacetResult(\"count\", 12L);\n    \n    addFacet(\"after\", \"{ 'type':'range', \"\n        + \" 'field': 'double_d', \"\n        + \" 'start': '2', \"\n        + \" 'end' : '4', \"\n        + \" 'gaps' : ['1'], \"\n        + \" 'others' : ['after'] }\");\n\n    addFacetValue(\"[2.0 TO 3.0)\");\n    addFacetResult(\"mean\", 8.0/3.0);\n    addFacetResult(\"count\", 6L);\n    \n    addFacetValue(\"[3.0 TO 4.0)\");\n    addFacetResult(\"mean\", 2.0);\n    addFacetResult(\"count\", 6L);\n    \n    addFacetValue(\"[4.0 TO *)\");\n    addFacetResult(\"mean\", 2.5);\n    addFacetResult(\"count\", 6L);\n    \n    testGrouping(expressions);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"1e4e64b7199d2f2a17be7f3926c7532553910dce":["3bd4c6955956e76c96eb12dfe64108ed03522983"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f8061ddd97f3352007d927dae445884a6f3d857b":["3bd4c6955956e76c96eb12dfe64108ed03522983","1e4e64b7199d2f2a17be7f3926c7532553910dce"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1e4e64b7199d2f2a17be7f3926c7532553910dce"],"3bd4c6955956e76c96eb12dfe64108ed03522983":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"1e4e64b7199d2f2a17be7f3926c7532553910dce":["f8061ddd97f3352007d927dae445884a6f3d857b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3bd4c6955956e76c96eb12dfe64108ed03522983"],"f8061ddd97f3352007d927dae445884a6f3d857b":[],"3bd4c6955956e76c96eb12dfe64108ed03522983":["1e4e64b7199d2f2a17be7f3926c7532553910dce","f8061ddd97f3352007d927dae445884a6f3d857b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["f8061ddd97f3352007d927dae445884a6f3d857b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}