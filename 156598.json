{"path":"modules/analysis/common/src/test/org/apache/lucene/analysis/core/TestRandomChains.MockRandomAnalyzer#createComponents(String,Reader).mjava","commits":[{"id":"73d216e8a31fcc28595d9f9518b2f081d9379789","date":1333813682,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/core/TestRandomChains.MockRandomAnalyzer#createComponents(String,Reader).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    protected TokenStreamComponents createComponents(String fieldName, Reader reader) {\n      Random random = new Random(seed);\n      TokenizerSpec tokenizerspec = newTokenizer(random, reader);\n      TokenFilterSpec filterspec = newFilterChain(random, tokenizerspec.tokenizer);\n      return new TokenStreamComponents(tokenizerspec.tokenizer, filterspec.stream);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["ad9e3deabce40d9849c1b75ef706bfa79f4f0d1e"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5a92b21feea3b1b4d7ad5a06439333c4f757318f","date":1333977928,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/core/TestRandomChains.MockRandomAnalyzer#createComponents(String,Reader).mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/core/TestRandomChains.MockRandomAnalyzer#createComponents(String,Reader).mjava","sourceNew":"    @Override\n    protected TokenStreamComponents createComponents(String fieldName, Reader reader) {\n      Random random = new Random(seed);\n      TokenizerSpec tokenizerspec = newTokenizer(random, reader);\n      TokenFilterSpec filterspec = newFilterChain(random, tokenizerspec.tokenizer);\n      //System.out.println(\"seed=\" + seed + \",tokenizerSpec=\" + tokenizerspec.toString);\n      //System.out.println(\"seed=\" + seed + \",tokenfilterSpec=\" + filterspec.toString);\n      return new TokenStreamComponents(tokenizerspec.tokenizer, filterspec.stream);\n    }\n\n","sourceOld":"    @Override\n    protected TokenStreamComponents createComponents(String fieldName, Reader reader) {\n      Random random = new Random(seed);\n      TokenizerSpec tokenizerspec = newTokenizer(random, reader);\n      TokenFilterSpec filterspec = newFilterChain(random, tokenizerspec.tokenizer);\n      return new TokenStreamComponents(tokenizerspec.tokenizer, filterspec.stream);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"d1f4dc85b409fc5f00183c0cafb53ab47621e5eb","date":1333990334,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/core/TestRandomChains.MockRandomAnalyzer#createComponents(String,Reader).mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/core/TestRandomChains.MockRandomAnalyzer#createComponents(String,Reader).mjava","sourceNew":"    @Override\n    protected TokenStreamComponents createComponents(String fieldName, Reader reader) {\n      Random random = new Random(seed);\n      TokenizerSpec tokenizerspec = newTokenizer(random, reader);\n      TokenFilterSpec filterspec = newFilterChain(random, tokenizerspec.tokenizer);\n      return new TokenStreamComponents(tokenizerspec.tokenizer, filterspec.stream);\n    }\n\n","sourceOld":"    @Override\n    protected TokenStreamComponents createComponents(String fieldName, Reader reader) {\n      Random random = new Random(seed);\n      TokenizerSpec tokenizerspec = newTokenizer(random, reader);\n      TokenFilterSpec filterspec = newFilterChain(random, tokenizerspec.tokenizer);\n      //System.out.println(\"seed=\" + seed + \",tokenizerSpec=\" + tokenizerspec.toString);\n      //System.out.println(\"seed=\" + seed + \",tokenfilterSpec=\" + filterspec.toString);\n      return new TokenStreamComponents(tokenizerspec.tokenizer, filterspec.stream);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"888c2d6bca1edd8d9293631d6e1d188b036e0f05","date":1334076894,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/core/TestRandomChains.MockRandomAnalyzer#createComponents(String,Reader).mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/core/TestRandomChains.MockRandomAnalyzer#createComponents(String,Reader).mjava","sourceNew":"    @Override\n    protected TokenStreamComponents createComponents(String fieldName, Reader reader) {\n      Random random = new Random(seed);\n      TokenizerSpec tokenizerSpec = newTokenizer(random, reader);\n      TokenFilterSpec filterSpec = newFilterChain(random, tokenizerSpec.tokenizer, tokenizerSpec.offsetsAreCorrect);\n      return new TokenStreamComponents(tokenizerSpec.tokenizer, filterSpec.stream);\n    }\n\n","sourceOld":"    @Override\n    protected TokenStreamComponents createComponents(String fieldName, Reader reader) {\n      Random random = new Random(seed);\n      TokenizerSpec tokenizerspec = newTokenizer(random, reader);\n      TokenFilterSpec filterspec = newFilterChain(random, tokenizerspec.tokenizer);\n      return new TokenStreamComponents(tokenizerspec.tokenizer, filterspec.stream);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ad9e3deabce40d9849c1b75ef706bfa79f4f0d1e","date":1334174049,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/core/TestRandomChains.MockRandomAnalyzer#createComponents(String,Reader).mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/core/TestRandomChains.MockRandomAnalyzer#createComponents(String,Reader).mjava","sourceNew":"    @Override\n    protected TokenStreamComponents createComponents(String fieldName, Reader reader) {\n      Random random = new Random(seed);\n      TokenizerSpec tokenizerSpec = newTokenizer(random, reader);\n      TokenFilterSpec filterSpec = newFilterChain(random, tokenizerSpec.tokenizer, tokenizerSpec.offsetsAreCorrect);\n      return new TokenStreamComponents(tokenizerSpec.tokenizer, filterSpec.stream);\n    }\n\n","sourceOld":"    @Override\n    protected TokenStreamComponents createComponents(String fieldName, Reader reader) {\n      Random random = new Random(seed);\n      TokenizerSpec tokenizerspec = newTokenizer(random, reader);\n      TokenFilterSpec filterspec = newFilterChain(random, tokenizerspec.tokenizer);\n      return new TokenStreamComponents(tokenizerspec.tokenizer, filterspec.stream);\n    }\n\n","bugFix":["73d216e8a31fcc28595d9f9518b2f081d9379789"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"64c6c5ffc98eb03d746c9ad07bdc3cc4a9d9cba7","date":1334539915,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/test/org/apache/lucene/analysis/core/TestRandomChains.MockRandomAnalyzer#createComponents(String,Reader).mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/core/TestRandomChains.MockRandomAnalyzer#createComponents(String,Reader).mjava","sourceNew":"    @Override\n    protected TokenStreamComponents createComponents(String fieldName, Reader reader) {\n      Random random = new Random(seed);\n      TokenizerSpec tokenizerSpec = newTokenizer(random, reader);\n      //System.out.println(\"seed=\" + seed + \",create tokenizer=\" + tokenizerSpec.toString);\n      TokenFilterSpec filterSpec = newFilterChain(random, tokenizerSpec.tokenizer, tokenizerSpec.offsetsAreCorrect);\n      //System.out.println(\"seed=\" + seed + \",create filter=\" + filterSpec.toString);\n      return new TokenStreamComponents(tokenizerSpec.tokenizer, filterSpec.stream);\n    }\n\n","sourceOld":"    @Override\n    protected TokenStreamComponents createComponents(String fieldName, Reader reader) {\n      Random random = new Random(seed);\n      TokenizerSpec tokenizerSpec = newTokenizer(random, reader);\n      TokenFilterSpec filterSpec = newFilterChain(random, tokenizerSpec.tokenizer, tokenizerSpec.offsetsAreCorrect);\n      return new TokenStreamComponents(tokenizerSpec.tokenizer, filterSpec.stream);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/core/TestRandomChains.MockRandomAnalyzer#createComponents(String,Reader).mjava","pathOld":"modules/analysis/common/src/test/org/apache/lucene/analysis/core/TestRandomChains.MockRandomAnalyzer#createComponents(String,Reader).mjava","sourceNew":"    @Override\n    protected TokenStreamComponents createComponents(String fieldName, Reader reader) {\n      Random random = new Random(seed);\n      TokenizerSpec tokenizerSpec = newTokenizer(random, reader);\n      //System.out.println(\"seed=\" + seed + \",create tokenizer=\" + tokenizerSpec.toString);\n      TokenFilterSpec filterSpec = newFilterChain(random, tokenizerSpec.tokenizer, tokenizerSpec.offsetsAreCorrect);\n      //System.out.println(\"seed=\" + seed + \",create filter=\" + filterSpec.toString);\n      return new TokenStreamComponents(tokenizerSpec.tokenizer, filterSpec.stream);\n    }\n\n","sourceOld":"    @Override\n    protected TokenStreamComponents createComponents(String fieldName, Reader reader) {\n      Random random = new Random(seed);\n      TokenizerSpec tokenizerSpec = newTokenizer(random, reader);\n      //System.out.println(\"seed=\" + seed + \",create tokenizer=\" + tokenizerSpec.toString);\n      TokenFilterSpec filterSpec = newFilterChain(random, tokenizerSpec.tokenizer, tokenizerSpec.offsetsAreCorrect);\n      //System.out.println(\"seed=\" + seed + \",create filter=\" + filterSpec.toString);\n      return new TokenStreamComponents(tokenizerSpec.tokenizer, filterSpec.stream);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"888c2d6bca1edd8d9293631d6e1d188b036e0f05":["d1f4dc85b409fc5f00183c0cafb53ab47621e5eb"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["64c6c5ffc98eb03d746c9ad07bdc3cc4a9d9cba7"],"d1f4dc85b409fc5f00183c0cafb53ab47621e5eb":["5a92b21feea3b1b4d7ad5a06439333c4f757318f"],"ad9e3deabce40d9849c1b75ef706bfa79f4f0d1e":["73d216e8a31fcc28595d9f9518b2f081d9379789","888c2d6bca1edd8d9293631d6e1d188b036e0f05"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"64c6c5ffc98eb03d746c9ad07bdc3cc4a9d9cba7":["ad9e3deabce40d9849c1b75ef706bfa79f4f0d1e"],"5a92b21feea3b1b4d7ad5a06439333c4f757318f":["73d216e8a31fcc28595d9f9518b2f081d9379789"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"73d216e8a31fcc28595d9f9518b2f081d9379789":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"888c2d6bca1edd8d9293631d6e1d188b036e0f05":["ad9e3deabce40d9849c1b75ef706bfa79f4f0d1e"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d1f4dc85b409fc5f00183c0cafb53ab47621e5eb":["888c2d6bca1edd8d9293631d6e1d188b036e0f05"],"ad9e3deabce40d9849c1b75ef706bfa79f4f0d1e":["64c6c5ffc98eb03d746c9ad07bdc3cc4a9d9cba7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["73d216e8a31fcc28595d9f9518b2f081d9379789"],"64c6c5ffc98eb03d746c9ad07bdc3cc4a9d9cba7":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"5a92b21feea3b1b4d7ad5a06439333c4f757318f":["d1f4dc85b409fc5f00183c0cafb53ab47621e5eb"],"73d216e8a31fcc28595d9f9518b2f081d9379789":["ad9e3deabce40d9849c1b75ef706bfa79f4f0d1e","5a92b21feea3b1b4d7ad5a06439333c4f757318f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}