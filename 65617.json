{"path":"lucene/core/src/java/org/apache/lucene/analysis/Analyzer.ReuseStrategy#getStoredValue().mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/analysis/Analyzer.ReuseStrategy#getStoredValue().mjava","pathOld":"lucene/src/java/org/apache/lucene/analysis/Analyzer.ReuseStrategy#getStoredValue().mjava","sourceNew":"    /**\n     * Returns the currently stored value\n     *\n     * @return Currently stored value or {@code null} if no value is stored\n     */\n    protected final Object getStoredValue() {\n      try {\n        return storedValue.get();\n      } catch (NullPointerException npe) {\n        if (storedValue == null) {\n          throw new AlreadyClosedException(\"this Analyzer is closed\");\n        } else {\n          throw npe;\n        }\n      }\n    }\n\n","sourceOld":"    /**\n     * Returns the currently stored value\n     *\n     * @return Currently stored value or {@code null} if no value is stored\n     */\n    protected final Object getStoredValue() {\n      try {\n        return storedValue.get();\n      } catch (NullPointerException npe) {\n        if (storedValue == null) {\n          throw new AlreadyClosedException(\"this Analyzer is closed\");\n        } else {\n          throw npe;\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"27f7a67b528a360bdc01ea05af57e6459fe42ac0","date":1346299172,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/analysis/Analyzer.ReuseStrategy#getStoredValue().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/analysis/Analyzer.ReuseStrategy#getStoredValue().mjava","sourceNew":"    /**\n     * Returns the currently stored value\n     *\n     * @return Currently stored value or {@code null} if no value is stored\n     * @throws AlreadyClosedException if the ReuseStrategy is closed.\n     */\n    protected final Object getStoredValue() {\n      try {\n        return storedValue.get();\n      } catch (NullPointerException npe) {\n        if (storedValue == null) {\n          throw new AlreadyClosedException(\"this Analyzer is closed\");\n        } else {\n          throw npe;\n        }\n      }\n    }\n\n","sourceOld":"    /**\n     * Returns the currently stored value\n     *\n     * @return Currently stored value or {@code null} if no value is stored\n     */\n    protected final Object getStoredValue() {\n      try {\n        return storedValue.get();\n      } catch (NullPointerException npe) {\n        if (storedValue == null) {\n          throw new AlreadyClosedException(\"this Analyzer is closed\");\n        } else {\n          throw npe;\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"05a14b2611ead08655a2b2bdc61632eb31316e57","date":1346366621,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/analysis/Analyzer.ReuseStrategy#getStoredValue().mjava","pathOld":"lucene/core/src/java/org/apache/lucene/analysis/Analyzer.ReuseStrategy#getStoredValue().mjava","sourceNew":"    /**\n     * Returns the currently stored value\n     *\n     * @return Currently stored value or {@code null} if no value is stored\n     * @throws AlreadyClosedException if the ReuseStrategy is closed.\n     */\n    protected final Object getStoredValue() {\n      try {\n        return storedValue.get();\n      } catch (NullPointerException npe) {\n        if (storedValue == null) {\n          throw new AlreadyClosedException(\"this Analyzer is closed\");\n        } else {\n          throw npe;\n        }\n      }\n    }\n\n","sourceOld":"    /**\n     * Returns the currently stored value\n     *\n     * @return Currently stored value or {@code null} if no value is stored\n     */\n    protected final Object getStoredValue() {\n      try {\n        return storedValue.get();\n      } catch (NullPointerException npe) {\n        if (storedValue == null) {\n          throw new AlreadyClosedException(\"this Analyzer is closed\");\n        } else {\n          throw npe;\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"38061899d760e06a12fe186bc1f09ca9ff0e64a6","date":1376491296,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/analysis/Analyzer.ReuseStrategy#getStoredValue().mjava","sourceNew":null,"sourceOld":"    /**\n     * Returns the currently stored value\n     *\n     * @return Currently stored value or {@code null} if no value is stored\n     * @throws AlreadyClosedException if the ReuseStrategy is closed.\n     */\n    protected final Object getStoredValue() {\n      try {\n        return storedValue.get();\n      } catch (NullPointerException npe) {\n        if (storedValue == null) {\n          throw new AlreadyClosedException(\"this Analyzer is closed\");\n        } else {\n          throw npe;\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3dffec77fb8f7d0e9ca4869dddd6af94528b4576","date":1377875202,"type":4,"author":"Han Jiang","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/analysis/Analyzer.ReuseStrategy#getStoredValue().mjava","sourceNew":null,"sourceOld":"    /**\n     * Returns the currently stored value\n     *\n     * @return Currently stored value or {@code null} if no value is stored\n     * @throws AlreadyClosedException if the ReuseStrategy is closed.\n     */\n    protected final Object getStoredValue() {\n      try {\n        return storedValue.get();\n      } catch (NullPointerException npe) {\n        if (storedValue == null) {\n          throw new AlreadyClosedException(\"this Analyzer is closed\");\n        } else {\n          throw npe;\n        }\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"27f7a67b528a360bdc01ea05af57e6459fe42ac0":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"38061899d760e06a12fe186bc1f09ca9ff0e64a6":["27f7a67b528a360bdc01ea05af57e6459fe42ac0"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":["27f7a67b528a360bdc01ea05af57e6459fe42ac0","38061899d760e06a12fe186bc1f09ca9ff0e64a6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"05a14b2611ead08655a2b2bdc61632eb31316e57":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","27f7a67b528a360bdc01ea05af57e6459fe42ac0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["38061899d760e06a12fe186bc1f09ca9ff0e64a6"]},"commit2Childs":{"27f7a67b528a360bdc01ea05af57e6459fe42ac0":["38061899d760e06a12fe186bc1f09ca9ff0e64a6","3dffec77fb8f7d0e9ca4869dddd6af94528b4576","05a14b2611ead08655a2b2bdc61632eb31316e57"],"38061899d760e06a12fe186bc1f09ca9ff0e64a6":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["27f7a67b528a360bdc01ea05af57e6459fe42ac0","05a14b2611ead08655a2b2bdc61632eb31316e57"],"3dffec77fb8f7d0e9ca4869dddd6af94528b4576":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"05a14b2611ead08655a2b2bdc61632eb31316e57":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["3dffec77fb8f7d0e9ca4869dddd6af94528b4576","05a14b2611ead08655a2b2bdc61632eb31316e57","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}