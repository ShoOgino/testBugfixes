{"path":"lucene/core/src/test/org/apache/lucene/store/TestBufferedIndexInput.MockFSDirectory#openInput(String,IOContext).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/store/TestBufferedIndexInput.MockFSDirectory#openInput(String,IOContext).mjava","pathOld":"lucene/src/test/org/apache/lucene/store/TestBufferedIndexInput.MockFSDirectory#openInput(String,IOContext).mjava","sourceNew":"      @Override\n      public IndexInput openInput(String name, IOContext context) throws IOException {\n        // Make random changes to buffer size\n        //bufferSize = 1+Math.abs(rand.nextInt() % 10);\n        IndexInput f = dir.openInput(name, context);\n        allIndexInputs.add(f);\n        return f;\n      }\n\n","sourceOld":"      @Override\n      public IndexInput openInput(String name, IOContext context) throws IOException {\n        // Make random changes to buffer size\n        //bufferSize = 1+Math.abs(rand.nextInt() % 10);\n        IndexInput f = dir.openInput(name, context);\n        allIndexInputs.add(f);\n        return f;\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"19275ba31e621f6da1b83bf13af75233876fd3d4","date":1374846698,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/store/TestBufferedIndexInput.MockFSDirectory#openInput(String,IOContext).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/store/TestBufferedIndexInput.MockFSDirectory#openInput(String,IOContext).mjava","sourceNew":"      @Override\n      public IndexInput openInput(String name, IOContext context) throws IOException {\n        // Make random changes to buffer size\n        //bufferSize = 1+Math.abs(rand.nextInt() % 10);\n        IndexInput f = dir.openInput(name, context);\n        allIndexInputs.add(f);\n        return f;\n      }\n\n","sourceOld":"      @Override\n      public IndexInput openInput(String name, IOContext context) throws IOException {\n        // Make random changes to buffer size\n        //bufferSize = 1+Math.abs(rand.nextInt() % 10);\n        IndexInput f = dir.openInput(name, context);\n        allIndexInputs.add(f);\n        return f;\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","date":1376366778,"type":3,"author":"Han Jiang","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/store/TestBufferedIndexInput.MockFSDirectory#openInput(String,IOContext).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/store/TestBufferedIndexInput.MockFSDirectory#openInput(String,IOContext).mjava","sourceNew":"      @Override\n      public IndexInput openInput(String name, IOContext context) throws IOException {\n        // Make random changes to buffer size\n        //bufferSize = 1+Math.abs(rand.nextInt() % 10);\n        IndexInput f = dir.openInput(name, context);\n        allIndexInputs.add(f);\n        return f;\n      }\n\n","sourceOld":"      @Override\n      public IndexInput openInput(String name, IOContext context) throws IOException {\n        // Make random changes to buffer size\n        //bufferSize = 1+Math.abs(rand.nextInt() % 10);\n        IndexInput f = dir.openInput(name, context);\n        allIndexInputs.add(f);\n        return f;\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"285cdc737de75b7cc7c284a156b20214deb67bca","date":1415535483,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/store/TestBufferedIndexInput.MockFSDirectory#openInput(String,IOContext).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/store/TestBufferedIndexInput.MockFSDirectory#openInput(String,IOContext).mjava","sourceNew":"      @Override\n      public IndexInput openInput(String name, IOContext context) throws IOException {\n        // Make random changes to buffer size\n        //bufferSize = 1+Math.abs(rand.nextInt() % 10);\n        IndexInput f = super.openInput(name, context);\n        allIndexInputs.add(f);\n        return f;\n      }\n\n","sourceOld":"      @Override\n      public IndexInput openInput(String name, IOContext context) throws IOException {\n        // Make random changes to buffer size\n        //bufferSize = 1+Math.abs(rand.nextInt() % 10);\n        IndexInput f = dir.openInput(name, context);\n        allIndexInputs.add(f);\n        return f;\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c924ed848363114bc21dd13c3a1953c42aefb554","date":1586956211,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/test/org/apache/lucene/store/TestBufferedIndexInput.MockFSDirectory#openInput(String,IOContext).mjava","sourceNew":null,"sourceOld":"      @Override\n      public IndexInput openInput(String name, IOContext context) throws IOException {\n        // Make random changes to buffer size\n        //bufferSize = 1+Math.abs(rand.nextInt() % 10);\n        IndexInput f = super.openInput(name, context);\n        allIndexInputs.add(f);\n        return f;\n      }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c924ed848363114bc21dd13c3a1953c42aefb554":["285cdc737de75b7cc7c284a156b20214deb67bca"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"285cdc737de75b7cc7c284a156b20214deb67bca":["19275ba31e621f6da1b83bf13af75233876fd3d4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"19275ba31e621f6da1b83bf13af75233876fd3d4":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c924ed848363114bc21dd13c3a1953c42aefb554"]},"commit2Childs":{"c924ed848363114bc21dd13c3a1953c42aefb554":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","19275ba31e621f6da1b83bf13af75233876fd3d4"],"285cdc737de75b7cc7c284a156b20214deb67bca":["c924ed848363114bc21dd13c3a1953c42aefb554"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee":[],"19275ba31e621f6da1b83bf13af75233876fd3d4":["285cdc737de75b7cc7c284a156b20214deb67bca"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["8989a9672fc1bb2d9a549a4f9005a7d0b0d728ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}