{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/expr/StreamFactory#isEvaluator(StreamExpression).mjava","commits":[{"id":"ba0c9792c0fa279d2914d72a5d3d4b3ce0e5fea7","date":1493327009,"type":0,"author":"Joel Bernstein","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/expr/StreamFactory#isEvaluator(StreamExpression).mjava","pathOld":"/dev/null","sourceNew":"  public boolean isEvaluator(StreamExpression expression) throws IOException{\n    String function = expression.getFunctionName();\n    if(functionNames.containsKey(function)){\n      Class<? extends Expressible> clazz = functionNames.get(function);\n      if(Expressible.class.isAssignableFrom(clazz) && StreamEvaluator.class.isAssignableFrom(clazz)){\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":0,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/expr/StreamFactory#isEvaluator(StreamExpression).mjava","pathOld":"/dev/null","sourceNew":"  public boolean isEvaluator(StreamExpression expression) throws IOException{\n    String function = expression.getFunctionName();\n    if(functionNames.containsKey(function)){\n      Class<? extends Expressible> clazz = functionNames.get(function);\n      if(Expressible.class.isAssignableFrom(clazz) && StreamEvaluator.class.isAssignableFrom(clazz)){\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"60c716cf818aff6857d8490cd0fb8b5aa432408f","date":1577074826,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/expr/StreamFactory#isEvaluator(StreamExpression).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/expr/StreamFactory#isEvaluator(StreamExpression).mjava","sourceNew":"  public boolean isEvaluator(StreamExpression expression) throws IOException {\n    String function = expression.getFunctionName();\n    Supplier<Class<? extends Expressible>> classSupplier = functionNames.get(function);\n    if (classSupplier != null) {\n      Class<? extends Expressible> clazz = classSupplier.get();\n      if (Expressible.class.isAssignableFrom(clazz) && StreamEvaluator.class.isAssignableFrom(clazz)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n","sourceOld":"  public boolean isEvaluator(StreamExpression expression) throws IOException{\n    String function = expression.getFunctionName();\n    if(functionNames.containsKey(function)){\n      Class<? extends Expressible> clazz = functionNames.get(function);\n      if(Expressible.class.isAssignableFrom(clazz) && StreamEvaluator.class.isAssignableFrom(clazz)){\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"96b4a3cd1f2463ebc4ffc0f61acdb3359637fe2a","date":1577276097,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/expr/StreamFactory#isEvaluator(StreamExpression).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/io/stream/expr/StreamFactory#isEvaluator(StreamExpression).mjava","sourceNew":"  public boolean isEvaluator(StreamExpression expression) throws IOException {\n    String function = expression.getFunctionName();\n    Supplier<Class<? extends Expressible>> classSupplier = functionNames.get(function);\n    if (classSupplier != null) {\n      Class<? extends Expressible> clazz = classSupplier.get();\n      if (Expressible.class.isAssignableFrom(clazz) && StreamEvaluator.class.isAssignableFrom(clazz)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n","sourceOld":"  public boolean isEvaluator(StreamExpression expression) throws IOException{\n    String function = expression.getFunctionName();\n    if(functionNames.containsKey(function)){\n      Class<? extends Expressible> clazz = functionNames.get(function);\n      if(Expressible.class.isAssignableFrom(clazz) && StreamEvaluator.class.isAssignableFrom(clazz)){\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"60c716cf818aff6857d8490cd0fb8b5aa432408f":["ba0c9792c0fa279d2914d72a5d3d4b3ce0e5fea7"],"ba0c9792c0fa279d2914d72a5d3d4b3ce0e5fea7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"96b4a3cd1f2463ebc4ffc0f61acdb3359637fe2a":["ba0c9792c0fa279d2914d72a5d3d4b3ce0e5fea7","60c716cf818aff6857d8490cd0fb8b5aa432408f"],"e9017cf144952056066919f1ebc7897ff9bd71b1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","ba0c9792c0fa279d2914d72a5d3d4b3ce0e5fea7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["60c716cf818aff6857d8490cd0fb8b5aa432408f"]},"commit2Childs":{"60c716cf818aff6857d8490cd0fb8b5aa432408f":["96b4a3cd1f2463ebc4ffc0f61acdb3359637fe2a","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ba0c9792c0fa279d2914d72a5d3d4b3ce0e5fea7":["60c716cf818aff6857d8490cd0fb8b5aa432408f","96b4a3cd1f2463ebc4ffc0f61acdb3359637fe2a","e9017cf144952056066919f1ebc7897ff9bd71b1"],"96b4a3cd1f2463ebc4ffc0f61acdb3359637fe2a":[],"e9017cf144952056066919f1ebc7897ff9bd71b1":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ba0c9792c0fa279d2914d72a5d3d4b3ce0e5fea7","e9017cf144952056066919f1ebc7897ff9bd71b1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["96b4a3cd1f2463ebc4ffc0f61acdb3359637fe2a","e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}