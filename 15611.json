{"path":"lucene/spatial/src/test/org/apache/lucene/spatial/util/BaseGeoPointTestCase#testPolygonBasics().mjava","commits":[{"id":"d6c59bc551f4e523ce6a321280cc6733424fb824","date":1458837690,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/util/BaseGeoPointTestCase#testPolygonBasics().mjava","pathOld":"lucene/sandbox/src/test/org/apache/lucene/document/TestLatLonPointInPolygonQuery#testBasics().mjava","sourceNew":"  /** test we can search for a polygon */\n  public void testPolygonBasics() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    // add a doc with a point\n    Document document = new Document();\n    addPointToDoc(\"field\", document, 18.313694, -65.227444);\n    writer.addDocument(document);\n    \n    // search and verify we found our doc\n    IndexReader reader = writer.getReader();\n    IndexSearcher searcher = newSearcher(reader);\n    assertEquals(1, searcher.count(newPolygonQuery(\"field\",\n                                                   new double[] { 18, 18, 19, 19, 18 },\n                                                   new double[] { -66, -65, -65, -66, -66 })));\n\n    reader.close();\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  /** test we can search for a polygon */\n  public void testBasics() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    // add a doc with a point\n    Document document = new Document();\n    document.add(new LatLonPoint(\"field\", 18.313694, -65.227444));\n    writer.addDocument(document);\n    \n    // search and verify we found our doc\n    IndexReader reader = writer.getReader();\n    IndexSearcher searcher = newSearcher(reader);\n    assertEquals(1, searcher.count(LatLonPoint.newPolygonQuery(\"field\",\n                                                               new double[] { 18, 18, 19, 19, 18 },\n                                                               new double[] { -66, -65, -65, -66, -66 })));\n\n    reader.close();\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"95ddcac9ac08381985af6eac8f8b77ba881d4ad8","date":1459477726,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/spatial/src/test/org/apache/lucene/spatial/util/BaseGeoPointTestCase#testPolygonBasics().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/util/BaseGeoPointTestCase#testPolygonBasics().mjava","sourceNew":"  /** test we can search for a polygon */\n  public void testPolygonBasics() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    // add a doc with a point\n    Document document = new Document();\n    addPointToDoc(\"field\", document, 18.313694, -65.227444);\n    writer.addDocument(document);\n    \n    // search and verify we found our doc\n    IndexReader reader = writer.getReader();\n    IndexSearcher searcher = newSearcher(reader);\n    assertEquals(1, searcher.count(newPolygonQuery(\"field\", new Polygon(\n                                                   new double[] { 18, 18, 19, 19, 18 },\n                                                   new double[] { -66, -65, -65, -66, -66 }))));\n\n    reader.close();\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  /** test we can search for a polygon */\n  public void testPolygonBasics() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    // add a doc with a point\n    Document document = new Document();\n    addPointToDoc(\"field\", document, 18.313694, -65.227444);\n    writer.addDocument(document);\n    \n    // search and verify we found our doc\n    IndexReader reader = writer.getReader();\n    IndexSearcher searcher = newSearcher(reader);\n    assertEquals(1, searcher.count(newPolygonQuery(\"field\",\n                                                   new double[] { 18, 18, 19, 19, 18 },\n                                                   new double[] { -66, -65, -65, -66, -66 })));\n\n    reader.close();\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3e21d7642ee7e0c00429964e5b47504602fe218c","date":1460897579,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/geo/BaseGeoPointTestCase#testPolygonBasics().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/util/BaseGeoPointTestCase#testPolygonBasics().mjava","sourceNew":"  /** test we can search for a polygon */\n  public void testPolygonBasics() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    // add a doc with a point\n    Document document = new Document();\n    addPointToDoc(\"field\", document, 18.313694, -65.227444);\n    writer.addDocument(document);\n    \n    // search and verify we found our doc\n    IndexReader reader = writer.getReader();\n    IndexSearcher searcher = newSearcher(reader);\n    assertEquals(1, searcher.count(newPolygonQuery(\"field\", new Polygon(\n                                                   new double[] { 18, 18, 19, 19, 18 },\n                                                   new double[] { -66, -65, -65, -66, -66 }))));\n\n    reader.close();\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  /** test we can search for a polygon */\n  public void testPolygonBasics() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    // add a doc with a point\n    Document document = new Document();\n    addPointToDoc(\"field\", document, 18.313694, -65.227444);\n    writer.addDocument(document);\n    \n    // search and verify we found our doc\n    IndexReader reader = writer.getReader();\n    IndexSearcher searcher = newSearcher(reader);\n    assertEquals(1, searcher.count(newPolygonQuery(\"field\", new Polygon(\n                                                   new double[] { 18, 18, 19, 19, 18 },\n                                                   new double[] { -66, -65, -65, -66, -66 }))));\n\n    reader.close();\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f8cb57c50beb99a1245256e866350af8e5ea1f36","date":1460921840,"type":5,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/test-framework/src/java/org/apache/lucene/geo/BaseGeoPointTestCase#testPolygonBasics().mjava","pathOld":"lucene/spatial/src/test/org/apache/lucene/spatial/util/BaseGeoPointTestCase#testPolygonBasics().mjava","sourceNew":"  /** test we can search for a polygon */\n  public void testPolygonBasics() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    // add a doc with a point\n    Document document = new Document();\n    addPointToDoc(\"field\", document, 18.313694, -65.227444);\n    writer.addDocument(document);\n    \n    // search and verify we found our doc\n    IndexReader reader = writer.getReader();\n    IndexSearcher searcher = newSearcher(reader);\n    assertEquals(1, searcher.count(newPolygonQuery(\"field\", new Polygon(\n                                                   new double[] { 18, 18, 19, 19, 18 },\n                                                   new double[] { -66, -65, -65, -66, -66 }))));\n\n    reader.close();\n    writer.close();\n    dir.close();\n  }\n\n","sourceOld":"  /** test we can search for a polygon */\n  public void testPolygonBasics() throws Exception {\n    Directory dir = newDirectory();\n    RandomIndexWriter writer = new RandomIndexWriter(random(), dir);\n\n    // add a doc with a point\n    Document document = new Document();\n    addPointToDoc(\"field\", document, 18.313694, -65.227444);\n    writer.addDocument(document);\n    \n    // search and verify we found our doc\n    IndexReader reader = writer.getReader();\n    IndexSearcher searcher = newSearcher(reader);\n    assertEquals(1, searcher.count(newPolygonQuery(\"field\", new Polygon(\n                                                   new double[] { 18, 18, 19, 19, 18 },\n                                                   new double[] { -66, -65, -65, -66, -66 }))));\n\n    reader.close();\n    writer.close();\n    dir.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"95ddcac9ac08381985af6eac8f8b77ba881d4ad8":["d6c59bc551f4e523ce6a321280cc6733424fb824"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3e21d7642ee7e0c00429964e5b47504602fe218c":["95ddcac9ac08381985af6eac8f8b77ba881d4ad8"],"f8cb57c50beb99a1245256e866350af8e5ea1f36":["95ddcac9ac08381985af6eac8f8b77ba881d4ad8","3e21d7642ee7e0c00429964e5b47504602fe218c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f8cb57c50beb99a1245256e866350af8e5ea1f36"],"d6c59bc551f4e523ce6a321280cc6733424fb824":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"95ddcac9ac08381985af6eac8f8b77ba881d4ad8":["3e21d7642ee7e0c00429964e5b47504602fe218c","f8cb57c50beb99a1245256e866350af8e5ea1f36"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d6c59bc551f4e523ce6a321280cc6733424fb824"],"3e21d7642ee7e0c00429964e5b47504602fe218c":["f8cb57c50beb99a1245256e866350af8e5ea1f36"],"f8cb57c50beb99a1245256e866350af8e5ea1f36":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d6c59bc551f4e523ce6a321280cc6733424fb824":["95ddcac9ac08381985af6eac8f8b77ba881d4ad8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}