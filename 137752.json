{"path":"src/java/org/apache/solr/analysis/TrieTokenizer[TrieTokenizerFactory]#reset(Reader).mjava","commits":[{"id":"be29e0e2cef1fd569147732e48caf8538790339b","date":1250443738,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/analysis/TrieTokenizer[TrieTokenizerFactory]#reset(Reader).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void reset(Reader input) throws IOException {\n   try {\n      super.reset(input);\n      input = super.input;\n      char[] buf = new char[32];\n      int len = input.read(buf);\n      String v = new String(buf, 0, len);\n      switch (type) {\n        case INTEGER:\n          ts.setIntValue(Integer.parseInt(v));\n          break;\n        case FLOAT:\n          ts.setFloatValue(Float.parseFloat(v));\n          break;\n        case LONG:\n          ts.setLongValue(Long.parseLong(v));\n          break;\n        case DOUBLE:\n          ts.setDoubleValue(Double.parseDouble(v));\n          break;\n        case DATE:\n          ts.setLongValue(dateField.parseMath(null, v).getTime());\n          break;\n        default:\n          throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Unknown type for trie field\");\n      }\n    } catch (IOException e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Unable to create TrieIndexTokenizer\", e);\n    }\n\n    ts.reset();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["4d3e8520fd031bab31fd0e4d480e55958bc45efe","4d3e8520fd031bab31fd0e4d480e55958bc45efe","4d3e8520fd031bab31fd0e4d480e55958bc45efe","ec1ff48f427e50e77e8d613a82e026521f628838","ec1ff48f427e50e77e8d613a82e026521f628838","ec1ff48f427e50e77e8d613a82e026521f628838"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/analysis/TrieTokenizer[TrieTokenizerFactory]#reset(Reader).mjava","pathOld":"src/java/org/apache/solr/analysis/TrieTokenizer[TrieTokenizerFactory]#reset(Reader).mjava","sourceNew":"  @Override\n  public void reset(Reader input) throws IOException {\n   try {\n      super.reset(input);\n      input = super.input;\n      char[] buf = new char[32];\n      int len = input.read(buf);\n      String v = new String(buf, 0, len);\n      switch (type) {\n        case INTEGER:\n          ts.setIntValue(Integer.parseInt(v));\n          break;\n        case FLOAT:\n          ts.setFloatValue(Float.parseFloat(v));\n          break;\n        case LONG:\n          ts.setLongValue(Long.parseLong(v));\n          break;\n        case DOUBLE:\n          ts.setDoubleValue(Double.parseDouble(v));\n          break;\n        case DATE:\n          ts.setLongValue(dateField.parseMath(null, v).getTime());\n          break;\n        default:\n          throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Unknown type for trie field\");\n      }\n    } catch (IOException e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Unable to create TrieIndexTokenizer\", e);\n    }\n\n    ts.reset();\n  }\n\n","sourceOld":"  @Override\n  public void reset(Reader input) throws IOException {\n   try {\n      super.reset(input);\n      input = super.input;\n      char[] buf = new char[32];\n      int len = input.read(buf);\n      String v = new String(buf, 0, len);\n      switch (type) {\n        case INTEGER:\n          ts.setIntValue(Integer.parseInt(v));\n          break;\n        case FLOAT:\n          ts.setFloatValue(Float.parseFloat(v));\n          break;\n        case LONG:\n          ts.setLongValue(Long.parseLong(v));\n          break;\n        case DOUBLE:\n          ts.setDoubleValue(Double.parseDouble(v));\n          break;\n        case DATE:\n          ts.setLongValue(dateField.parseMath(null, v).getTime());\n          break;\n        default:\n          throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Unknown type for trie field\");\n      }\n    } catch (IOException e) {\n      throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, \"Unable to create TrieIndexTokenizer\", e);\n    }\n\n    ts.reset();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"be29e0e2cef1fd569147732e48caf8538790339b":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"ad94625fb8d088209f46650c8097196fec67f00c":["be29e0e2cef1fd569147732e48caf8538790339b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["be29e0e2cef1fd569147732e48caf8538790339b"],"be29e0e2cef1fd569147732e48caf8538790339b":["ad94625fb8d088209f46650c8097196fec67f00c"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}