{"path":"lucene/spatial3d/src/java/org/apache/lucene/geo3d/Plane#reverseModify(Vector,double,double,double,double,double,double,double).mjava","commits":[{"id":"3022be5842502b7c2a57a5124199bbc30236f0a0","date":1436724252,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/spatial3d/src/java/org/apache/lucene/geo3d/Plane#reverseModify(Vector,double,double,double,double,double,double,double).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/spatial4j/geo3d/Plane#reverseModify(Vector,double,double,double,double,double,double,double).mjava","sourceNew":"  /**\n   * Reverse modify a point to produce a GeoPoint in normal space.\n   */\n  protected static GeoPoint reverseModify(final Vector point, final double transX, final double transY, final double transZ,\n                                          final double sinRA, final double cosRA, final double sinHA, final double cosHA) {\n    final Vector result = point.rotateXZ(-sinHA, cosHA).rotateXY(-sinRA, cosRA).translate(-transX, -transY, -transZ);\n    return new GeoPoint(result.x, result.y, result.z);\n  }\n\n","sourceOld":"  /**\n   * Reverse modify a point to produce a GeoPoint in normal space.\n   */\n  protected static GeoPoint reverseModify(final Vector point, final double transX, final double transY, final double transZ,\n                                          final double sinRA, final double cosRA, final double sinHA, final double cosHA) {\n    final Vector result = point.rotateXZ(-sinHA, cosHA).rotateXY(-sinRA, cosRA).translate(-transX, -transY, -transZ);\n    return new GeoPoint(result.x, result.y, result.z);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d48c2726dec3381fb15aa3b90f7857635b6bdf74","date":1436825583,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/spatial3d/src/java/org/apache/lucene/geo3d/Plane#reverseModify(Vector,double,double,double,double,double,double,double).mjava","pathOld":"lucene/spatial3d/src/java/org/apache/lucene/geo3d/Plane#reverseModify(Vector,double,double,double,double,double,double,double).mjava","sourceNew":"  /**\n   * Reverse modify a point to produce a GeoPoint in normal space.\n   * @param point is the translated point.\n   * @param transX is the translation x value.\n   * @param transY is the translation y value.\n   * @param transZ is the translation z value.\n   * @param sinRA is the sine of the ascension angle.\n   * @param cosRA is the cosine of the ascension angle.\n   * @param sinHA is the sine of the height angle.\n   * @param cosHA is the cosine of the height angle.\n   * @return the original point.\n   */\n  protected static GeoPoint reverseModify(final Vector point, final double transX, final double transY, final double transZ,\n                                          final double sinRA, final double cosRA, final double sinHA, final double cosHA) {\n    final Vector result = point.rotateXZ(-sinHA, cosHA).rotateXY(-sinRA, cosRA).translate(-transX, -transY, -transZ);\n    return new GeoPoint(result.x, result.y, result.z);\n  }\n\n","sourceOld":"  /**\n   * Reverse modify a point to produce a GeoPoint in normal space.\n   */\n  protected static GeoPoint reverseModify(final Vector point, final double transX, final double transY, final double transZ,\n                                          final double sinRA, final double cosRA, final double sinHA, final double cosHA) {\n    final Vector result = point.rotateXZ(-sinHA, cosHA).rotateXY(-sinRA, cosRA).translate(-transX, -transY, -transZ);\n    return new GeoPoint(result.x, result.y, result.z);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b4e444678504caf66a8060b1d514383aa4feac0c","date":1457399659,"type":5,"author":"David Smiley","isMerge":false,"pathNew":"lucene/spatial3d/src/java/org/apache/lucene/spatial3d/geom/Plane#reverseModify(Vector,double,double,double,double,double,double,double).mjava","pathOld":"lucene/spatial3d/src/java/org/apache/lucene/geo3d/Plane#reverseModify(Vector,double,double,double,double,double,double,double).mjava","sourceNew":"  /**\n   * Reverse modify a point to produce a GeoPoint in normal space.\n   * @param point is the translated point.\n   * @param transX is the translation x value.\n   * @param transY is the translation y value.\n   * @param transZ is the translation z value.\n   * @param sinRA is the sine of the ascension angle.\n   * @param cosRA is the cosine of the ascension angle.\n   * @param sinHA is the sine of the height angle.\n   * @param cosHA is the cosine of the height angle.\n   * @return the original point.\n   */\n  protected static GeoPoint reverseModify(final Vector point, final double transX, final double transY, final double transZ,\n                                          final double sinRA, final double cosRA, final double sinHA, final double cosHA) {\n    final Vector result = point.rotateXZ(-sinHA, cosHA).rotateXY(-sinRA, cosRA).translate(-transX, -transY, -transZ);\n    return new GeoPoint(result.x, result.y, result.z);\n  }\n\n","sourceOld":"  /**\n   * Reverse modify a point to produce a GeoPoint in normal space.\n   * @param point is the translated point.\n   * @param transX is the translation x value.\n   * @param transY is the translation y value.\n   * @param transZ is the translation z value.\n   * @param sinRA is the sine of the ascension angle.\n   * @param cosRA is the cosine of the ascension angle.\n   * @param sinHA is the sine of the height angle.\n   * @param cosHA is the cosine of the height angle.\n   * @return the original point.\n   */\n  protected static GeoPoint reverseModify(final Vector point, final double transX, final double transY, final double transZ,\n                                          final double sinRA, final double cosRA, final double sinHA, final double cosHA) {\n    final Vector result = point.rotateXZ(-sinHA, cosHA).rotateXY(-sinRA, cosRA).translate(-transX, -transY, -transZ);\n    return new GeoPoint(result.x, result.y, result.z);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3022be5842502b7c2a57a5124199bbc30236f0a0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"d48c2726dec3381fb15aa3b90f7857635b6bdf74":["3022be5842502b7c2a57a5124199bbc30236f0a0"],"b4e444678504caf66a8060b1d514383aa4feac0c":["d48c2726dec3381fb15aa3b90f7857635b6bdf74"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b4e444678504caf66a8060b1d514383aa4feac0c"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3022be5842502b7c2a57a5124199bbc30236f0a0"],"3022be5842502b7c2a57a5124199bbc30236f0a0":["d48c2726dec3381fb15aa3b90f7857635b6bdf74"],"d48c2726dec3381fb15aa3b90f7857635b6bdf74":["b4e444678504caf66a8060b1d514383aa4feac0c"],"b4e444678504caf66a8060b1d514383aa4feac0c":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}