{"path":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/core/nodes/TestQueryNode#testTags().mjava","commits":[{"id":"b3ecb1d513f0e6d63aee6bdee534e788aab390bb","date":1303872557,"type":0,"author":"Adriano Crestani Campos","isMerge":false,"pathNew":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/core/nodes/TestQueryNode#testTags().mjava","pathOld":"/dev/null","sourceNew":"  /* LUCENE-3045 bug in QueryNodeImpl.containsTag(String key)*/\n  public void testTags() throws Exception {\n    QueryNode node = new FieldQueryNode(\"foo\", \"A\", 0, 1);\n    \n    node.setTag(\"TaG\", new Object());\n    assertTrue(node.getTagMap().size() > 0);\n    assertTrue(node.containsTag(\"tAg\"));\n    assertTrue(node.getTag(\"tAg\") != null);\n    \n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d4d5df8e07c035d62d982894b439322da40e0938","date":1303923139,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/core/nodes/TestQueryNode#testTags().mjava","pathOld":"/dev/null","sourceNew":"  /* LUCENE-3045 bug in QueryNodeImpl.containsTag(String key)*/\n  public void testTags() throws Exception {\n    QueryNode node = new FieldQueryNode(\"foo\", \"A\", 0, 1);\n    \n    node.setTag(\"TaG\", new Object());\n    assertTrue(node.getTagMap().size() > 0);\n    assertTrue(node.containsTag(\"tAg\"));\n    assertTrue(node.getTag(\"tAg\") != null);\n    \n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/core/nodes/TestQueryNode#testTags().mjava","pathOld":"/dev/null","sourceNew":"  /* LUCENE-3045 bug in QueryNodeImpl.containsTag(String key)*/\n  public void testTags() throws Exception {\n    QueryNode node = new FieldQueryNode(\"foo\", \"A\", 0, 1);\n    \n    node.setTag(\"TaG\", new Object());\n    assertTrue(node.getTagMap().size() > 0);\n    assertTrue(node.containsTag(\"tAg\"));\n    assertTrue(node.getTag(\"tAg\") != null);\n    \n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":0,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/core/nodes/TestQueryNode#testTags().mjava","pathOld":"/dev/null","sourceNew":"  /* LUCENE-3045 bug in QueryNodeImpl.containsTag(String key)*/\n  public void testTags() throws Exception {\n    QueryNode node = new FieldQueryNode(\"foo\", \"A\", 0, 1);\n    \n    node.setTag(\"TaG\", new Object());\n    assertTrue(node.getTagMap().size() > 0);\n    assertTrue(node.containsTag(\"tAg\"));\n    assertTrue(node.getTag(\"tAg\") != null);\n    \n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cf7d991c51b580d4b7bf2ad583dba058c0a2dd1","date":1310612214,"type":5,"author":"Christopher John Male","isMerge":false,"pathNew":"modules/queryparser/src/test/org/apache/lucene/queryparser/flexible/core/nodes/TestQueryNode#testTags().mjava","pathOld":"lucene/contrib/queryparser/src/test/org/apache/lucene/queryParser/core/nodes/TestQueryNode#testTags().mjava","sourceNew":"  /* LUCENE-3045 bug in QueryNodeImpl.containsTag(String key)*/\n  public void testTags() throws Exception {\n    QueryNode node = new FieldQueryNode(\"foo\", \"A\", 0, 1);\n    \n    node.setTag(\"TaG\", new Object());\n    assertTrue(node.getTagMap().size() > 0);\n    assertTrue(node.containsTag(\"tAg\"));\n    assertTrue(node.getTag(\"tAg\") != null);\n    \n  }\n\n","sourceOld":"  /* LUCENE-3045 bug in QueryNodeImpl.containsTag(String key)*/\n  public void testTags() throws Exception {\n    QueryNode node = new FieldQueryNode(\"foo\", \"A\", 0, 1);\n    \n    node.setTag(\"TaG\", new Object());\n    assertTrue(node.getTagMap().size() > 0);\n    assertTrue(node.containsTag(\"tAg\"));\n    assertTrue(node.getTag(\"tAg\") != null);\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"4cf7d991c51b580d4b7bf2ad583dba058c0a2dd1":["b3ecb1d513f0e6d63aee6bdee534e788aab390bb"],"d4d5df8e07c035d62d982894b439322da40e0938":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","b3ecb1d513f0e6d63aee6bdee534e788aab390bb"],"b3ecb1d513f0e6d63aee6bdee534e788aab390bb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a3776dccca01c11e7046323cfad46a3b4a471233":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","b3ecb1d513f0e6d63aee6bdee534e788aab390bb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","b3ecb1d513f0e6d63aee6bdee534e788aab390bb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["4cf7d991c51b580d4b7bf2ad583dba058c0a2dd1"]},"commit2Childs":{"4cf7d991c51b580d4b7bf2ad583dba058c0a2dd1":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"d4d5df8e07c035d62d982894b439322da40e0938":[],"b3ecb1d513f0e6d63aee6bdee534e788aab390bb":["4cf7d991c51b580d4b7bf2ad583dba058c0a2dd1","d4d5df8e07c035d62d982894b439322da40e0938","a3776dccca01c11e7046323cfad46a3b4a471233","135621f3a0670a9394eb563224a3b76cc4dddc0f"],"a3776dccca01c11e7046323cfad46a3b4a471233":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d4d5df8e07c035d62d982894b439322da40e0938","b3ecb1d513f0e6d63aee6bdee534e788aab390bb","a3776dccca01c11e7046323cfad46a3b4a471233","135621f3a0670a9394eb563224a3b76cc4dddc0f"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d4d5df8e07c035d62d982894b439322da40e0938","a3776dccca01c11e7046323cfad46a3b4a471233","135621f3a0670a9394eb563224a3b76cc4dddc0f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}