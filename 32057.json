{"path":"lucene/sandbox/src/java/org/apache/lucene/document/LatLonPointSortField#LatLonPointSortField(String,double,double).mjava","commits":[{"id":"54f531dff997ea7763360cb59f5ccadc6811b519","date":1457742562,"type":0,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/document/LatLonPointSortField#LatLonPointSortField(String,double,double).mjava","pathOld":"/dev/null","sourceNew":"  LatLonPointSortField(String field, double latitude, double longitude) {\n    super(field, SortField.Type.CUSTOM);\n    if (field == null) {\n      throw new IllegalArgumentException(\"field cannot be null\");\n    }\n    if (GeoUtils.isValidLat(latitude) == false) {\n      throw new IllegalArgumentException(\"latitude: '\" + latitude + \"' is invalid\");\n    }\n    if (GeoUtils.isValidLon(longitude) == false) {\n      throw new IllegalArgumentException(\"longitude: '\" + longitude + \"' is invalid\");\n    }\n    this.latitude = latitude;\n    this.longitude = longitude;\n    setMissingValue(Double.POSITIVE_INFINITY);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["ad0d09e969f4763b0df4230f8e3f74357872a4e4"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"575856a9f007b9c35d0113c9e18151b554709ef2","date":1457776622,"type":0,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/document/LatLonPointSortField#LatLonPointSortField(String,double,double).mjava","pathOld":"/dev/null","sourceNew":"  LatLonPointSortField(String field, double latitude, double longitude) {\n    super(field, SortField.Type.CUSTOM);\n    if (field == null) {\n      throw new IllegalArgumentException(\"field cannot be null\");\n    }\n    if (GeoUtils.isValidLat(latitude) == false) {\n      throw new IllegalArgumentException(\"latitude: '\" + latitude + \"' is invalid\");\n    }\n    if (GeoUtils.isValidLon(longitude) == false) {\n      throw new IllegalArgumentException(\"longitude: '\" + longitude + \"' is invalid\");\n    }\n    this.latitude = latitude;\n    this.longitude = longitude;\n    setMissingValue(Double.POSITIVE_INFINITY);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"0da288484d638cec72e8fc33363e4c0532d35ff0","date":1459115234,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/document/LatLonPointSortField#LatLonPointSortField(String,double,double).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/document/LatLonPointSortField#LatLonPointSortField(String,double,double).mjava","sourceNew":"  LatLonPointSortField(String field, double latitude, double longitude) {\n    super(field, SortField.Type.CUSTOM);\n    if (field == null) {\n      throw new IllegalArgumentException(\"field cannot be null\");\n    }\n    GeoUtils.checkLatitude(latitude);\n    GeoUtils.checkLongitude(longitude);\n    this.latitude = latitude;\n    this.longitude = longitude;\n    setMissingValue(Double.POSITIVE_INFINITY);\n  }\n\n","sourceOld":"  LatLonPointSortField(String field, double latitude, double longitude) {\n    super(field, SortField.Type.CUSTOM);\n    if (field == null) {\n      throw new IllegalArgumentException(\"field cannot be null\");\n    }\n    if (GeoUtils.isValidLat(latitude) == false) {\n      throw new IllegalArgumentException(\"latitude: '\" + latitude + \"' is invalid\");\n    }\n    if (GeoUtils.isValidLon(longitude) == false) {\n      throw new IllegalArgumentException(\"longitude: '\" + longitude + \"' is invalid\");\n    }\n    this.latitude = latitude;\n    this.longitude = longitude;\n    setMissingValue(Double.POSITIVE_INFINITY);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ad0d09e969f4763b0df4230f8e3f74357872a4e4","date":1459188769,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/sandbox/src/java/org/apache/lucene/document/LatLonPointSortField#LatLonPointSortField(String,double,double).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/document/LatLonPointSortField#LatLonPointSortField(String,double,double).mjava","sourceNew":"  LatLonPointSortField(String field, double latitude, double longitude) {\n    super(field, SortField.Type.CUSTOM);\n    if (field == null) {\n      throw new IllegalArgumentException(\"field must not be null\");\n    }\n    GeoUtils.checkLatitude(latitude);\n    GeoUtils.checkLongitude(longitude);\n    this.latitude = latitude;\n    this.longitude = longitude;\n    setMissingValue(Double.POSITIVE_INFINITY);\n  }\n\n","sourceOld":"  LatLonPointSortField(String field, double latitude, double longitude) {\n    super(field, SortField.Type.CUSTOM);\n    if (field == null) {\n      throw new IllegalArgumentException(\"field cannot be null\");\n    }\n    GeoUtils.checkLatitude(latitude);\n    GeoUtils.checkLongitude(longitude);\n    this.latitude = latitude;\n    this.longitude = longitude;\n    setMissingValue(Double.POSITIVE_INFINITY);\n  }\n\n","bugFix":["54f531dff997ea7763360cb59f5ccadc6811b519"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"88b0212386fe531136816706dc37dc49b9dbf7dc","date":1532560226,"type":5,"author":"Nicholas Knize","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/document/LatLonPointSortField#LatLonPointSortField(String,double,double).mjava","pathOld":"lucene/sandbox/src/java/org/apache/lucene/document/LatLonPointSortField#LatLonPointSortField(String,double,double).mjava","sourceNew":"  LatLonPointSortField(String field, double latitude, double longitude) {\n    super(field, SortField.Type.CUSTOM);\n    if (field == null) {\n      throw new IllegalArgumentException(\"field must not be null\");\n    }\n    GeoUtils.checkLatitude(latitude);\n    GeoUtils.checkLongitude(longitude);\n    this.latitude = latitude;\n    this.longitude = longitude;\n    setMissingValue(Double.POSITIVE_INFINITY);\n  }\n\n","sourceOld":"  LatLonPointSortField(String field, double latitude, double longitude) {\n    super(field, SortField.Type.CUSTOM);\n    if (field == null) {\n      throw new IllegalArgumentException(\"field must not be null\");\n    }\n    GeoUtils.checkLatitude(latitude);\n    GeoUtils.checkLongitude(longitude);\n    this.latitude = latitude;\n    this.longitude = longitude;\n    setMissingValue(Double.POSITIVE_INFINITY);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0da288484d638cec72e8fc33363e4c0532d35ff0":["575856a9f007b9c35d0113c9e18151b554709ef2"],"88b0212386fe531136816706dc37dc49b9dbf7dc":["ad0d09e969f4763b0df4230f8e3f74357872a4e4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"54f531dff997ea7763360cb59f5ccadc6811b519":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"575856a9f007b9c35d0113c9e18151b554709ef2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","54f531dff997ea7763360cb59f5ccadc6811b519"],"ad0d09e969f4763b0df4230f8e3f74357872a4e4":["0da288484d638cec72e8fc33363e4c0532d35ff0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["88b0212386fe531136816706dc37dc49b9dbf7dc"]},"commit2Childs":{"0da288484d638cec72e8fc33363e4c0532d35ff0":["ad0d09e969f4763b0df4230f8e3f74357872a4e4"],"88b0212386fe531136816706dc37dc49b9dbf7dc":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["54f531dff997ea7763360cb59f5ccadc6811b519","575856a9f007b9c35d0113c9e18151b554709ef2"],"54f531dff997ea7763360cb59f5ccadc6811b519":["575856a9f007b9c35d0113c9e18151b554709ef2"],"575856a9f007b9c35d0113c9e18151b554709ef2":["0da288484d638cec72e8fc33363e4c0532d35ff0"],"ad0d09e969f4763b0df4230f8e3f74357872a4e4":["88b0212386fe531136816706dc37dc49b9dbf7dc"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}