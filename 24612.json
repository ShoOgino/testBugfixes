{"path":"solr/core/src/test/org/apache/solr/analytics/facet/FieldFacetTest#beforeClass().mjava","commits":[{"id":"ff403346522eaa9de75403763e297e83a3ea585c","date":1384904731,"type":0,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/analytics/facet/FieldFacetTest#beforeClass().mjava","pathOld":"/dev/null","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    initCore(\"solrconfig-basic.xml\",\"schema-analytics.xml\");\n    h.update(\"<delete><query>*:*</query></delete>\");\n    \n    defaults.put(\"int\", new Integer(0));\n    defaults.put(\"long\", new Long(0));\n    defaults.put(\"float\", new Float(0));\n    defaults.put(\"double\", new Double(0));\n    defaults.put(\"date\", \"1800-12-31T23:59:59Z\");\n    defaults.put(\"string\", \"str0\");\n\n    //INT\n    intDateTestStart = new ArrayList<ArrayList<Integer>>(); \n    intDateTestMissing = new ArrayList<Long>(); \n    intStringTestStart = new ArrayList<ArrayList<Integer>>(); \n    intStringTestMissing = new ArrayList<Long>(); \n    \n    //LONG\n    longDateTestStart = new ArrayList<ArrayList<Long>>(); \n    longDateTestMissing = new ArrayList<Long>(); \n    longStringTestStart = new ArrayList<ArrayList<Long>>(); \n    longStringTestMissing = new ArrayList<Long>(); \n    \n    //FLOAT\n    floatDateTestStart = new ArrayList<ArrayList<Float>>(); \n    floatDateTestMissing = new ArrayList<Long>(); \n    floatStringTestStart = new ArrayList<ArrayList<Float>>(); \n    floatStringTestMissing = new ArrayList<Long>(); \n    \n    //DOUBLE\n    doubleDateTestStart = new ArrayList<ArrayList<Double>>(); \n    doubleDateTestMissing = new ArrayList<Long>(); \n    doubleStringTestStart = new ArrayList<ArrayList<Double>>(); \n    doubleStringTestMissing = new ArrayList<Long>(); \n    \n    //DATE\n    dateIntTestStart = new ArrayList<ArrayList<String>>(); \n    dateIntTestMissing = new ArrayList<Long>(); \n    dateLongTestStart = new ArrayList<ArrayList<String>>(); \n    dateLongTestMissing = new ArrayList<Long>(); \n    \n    //String\n    stringIntTestStart = new ArrayList<ArrayList<String>>(); \n    stringIntTestMissing = new ArrayList<Long>(); \n    stringLongTestStart = new ArrayList<ArrayList<String>>(); \n    stringLongTestMissing = new ArrayList<Long>(); \n    \n    //Multi-Valued\n    multiLongTestStart = new ArrayList<ArrayList<Integer>>(); \n    multiLongTestMissing = new ArrayList<Long>(); \n    multiStringTestStart = new ArrayList<ArrayList<Integer>>(); \n    multiStringTestMissing = new ArrayList<Long>(); \n    multiDateTestStart = new ArrayList<ArrayList<Integer>>(); \n    multiDateTestMissing = new ArrayList<Long>(); \n\n    for (int j = 0; j < NUM_LOOPS; ++j) {\n      int i = j%INT;\n      long l = j%LONG;\n      long lm = j%LONGM;\n      float f = j%FLOAT;\n      double d = j%DOUBLE;\n      int dt = j%DATE;\n      int dtm = j%DATEM;\n      int s = j%STRING;\n      int sm = j%STRINGM;\n      if (dt==0 && dtm == 0) {\n        assertU(adoc(filter(\"id\", \"1000\" + j, \"int_id\", \"\" + i, \"long_ld\", \"\" + l, \"float_fd\", \"\" + f, \n          \"double_dd\", \"\" + d,  \"date_dtd\", (1800+dt) + \"-12-31T23:59:59Z\", \"string_sd\", \"str\" + s,\n          \"long_ldm\", \"\" + l, \"long_ldm\", \"\"+lm, \"string_sdm\", \"str\" + s, \"string_sdm\", \"str\"+sm)));\n      } else if (dt == 0) {\n        assertU(adoc(filter(\"id\", \"1000\" + j, \"int_id\", \"\" + i, \"long_ld\", \"\" + l, \"float_fd\", \"\" + f, \n            \"double_dd\", \"\" + d,  \"date_dtd\", (1800+dt) + \"-12-31T23:59:59Z\", \"string_sd\", \"str\" + s,\n            \"long_ldm\", \"\" + l, \"long_ldm\", \"\"+lm, \"string_sdm\", \"str\" + s, \"string_sdm\", \"str\"+sm,\n            \"date_dtdm\", (1800+dtm) + \"-12-31T23:59:59Z\")));\n      } else if (dtm == 0) {\n        assertU(adoc(filter(\"id\", \"1000\" + j, \"int_id\", \"\" + i, \"long_ld\", \"\" + l, \"float_fd\", \"\" + f, \n            \"double_dd\", \"\" + d,  \"date_dtd\", (1800+dt) + \"-12-31T23:59:59Z\", \"string_sd\", \"str\" + s,\n            \"long_ldm\", \"\" + l, \"long_ldm\", \"\"+lm, \"string_sdm\", \"str\" + s, \"string_sdm\", \"str\"+sm,\n            \"date_dtdm\", (1800+dt) + \"-12-31T23:59:59Z\")));\n      } else {\n        assertU(adoc(filter(\"id\", \"1000\" + j, \"int_id\", \"\" + i, \"long_ld\", \"\" + l, \"float_fd\", \"\" + f, \n            \"double_dd\", \"\" + d,  \"date_dtd\", (1800+dt) + \"-12-31T23:59:59Z\", \"string_sd\", \"str\" + s,\n            \"long_ldm\", \"\" + l, \"long_ldm\", \"\"+lm, \"string_sdm\", \"str\" + s, \"string_sdm\", \"str\"+sm,\n            \"date_dtdm\", (1800+dt) + \"-12-31T23:59:59Z\", \"date_dtdm\", (1800+dtm) + \"-12-31T23:59:59Z\")));\n      }\n      \n      if( dt != 0 ){\n        //Dates\n        if (j-DATE<0) {\n          ArrayList<Integer> list1 = new ArrayList<Integer>();\n          if( i != 0 ){\n            list1.add(i);\n            intDateTestMissing.add(0l);\n          } else {\n            intDateTestMissing.add(1l);\n          }\n          intDateTestStart.add(list1);\n          ArrayList<Long> list2 = new ArrayList<Long>();\n          if( l != 0l ){\n            list2.add(l);\n            longDateTestMissing.add(0l);\n          } else {\n            longDateTestMissing.add(1l);\n          }\n          longDateTestStart.add(list2);\n          ArrayList<Float> list3 = new ArrayList<Float>();\n          if ( f != 0.0f ){\n            list3.add(f);\n            floatDateTestMissing.add(0l);\n          } else {\n            floatDateTestMissing.add(1l);\n            \n          }\n          floatDateTestStart.add(list3);\n          ArrayList<Double> list4 = new ArrayList<Double>();\n          if( d != 0.0d ){\n            list4.add(d);\n            doubleDateTestMissing.add(0l);\n          } else {\n            doubleDateTestMissing.add(1l);\n          }\n          doubleDateTestStart.add(list4);\n          ArrayList<Integer> list5 = new ArrayList<Integer>();\n          if( i != 0 ){\n            list5.add(i);\n            multiDateTestMissing.add(0l);\n          } else {\n            multiDateTestMissing.add(1l);\n            \n          }\n          multiDateTestStart.add(list5);\n        } else {\n          if( i != 0 ) intDateTestStart.get(dt-1).add(i); else increment(intDateTestMissing,dt-1);\n          if( l != 0l ) longDateTestStart.get(dt-1).add(l); else increment(longDateTestMissing,dt-1);\n          if( f != 0.0f ) floatDateTestStart.get(dt-1).add(f); else increment(floatDateTestMissing,dt-1);\n          if( d != 0.0d ) doubleDateTestStart.get(dt-1).add(d); else increment(doubleDateTestMissing,dt-1);\n          if( i != 0 ) multiDateTestStart.get(dt-1).add(i); else increment(multiDateTestMissing,dt-1);\n        }\n      }\n      \n      if (j-DATEM<0 && dtm!=dt && dtm!=0) {\n        ArrayList<Integer> list1 = new ArrayList<Integer>();\n        if( i != 0 ){\n          list1.add(i);\n          multiDateTestMissing.add(0l);\n        } else {\n          multiDateTestMissing.add(1l);\n        }\n        multiDateTestStart.add(list1);\n      } else if (dtm!=dt && dtm!=0) {\n        if( i != 0 ) multiDateTestStart.get(dtm-1).add(i);\n      }\n      \n      if( s != 0 ){\n        //Strings\n        if (j-STRING<0) {\n          ArrayList<Integer> list1 = new ArrayList<Integer>();\n          if( i != 0 ){\n            list1.add(i);\n            intStringTestMissing.add(0l);\n          } else {\n            intStringTestMissing.add(1l);\n          }\n          intStringTestStart.add(list1);\n          ArrayList<Long> list2 = new ArrayList<Long>();\n          if( l != 0l ){\n            list2.add(l);\n            longStringTestMissing.add(0l);\n          } else {\n            longStringTestMissing.add(1l);\n          }\n          longStringTestStart.add(list2);\n          ArrayList<Float> list3 = new ArrayList<Float>();\n          if( f != 0.0f ){\n            list3.add(f);\n            floatStringTestMissing.add(0l);\n          } else {\n            floatStringTestMissing.add(1l);\n          }\n          floatStringTestStart.add(list3);\n          ArrayList<Double> list4 = new ArrayList<Double>();\n          if( d != 0.0d ){\n            list4.add(d);\n            doubleStringTestMissing.add(0l);\n          } else {\n            doubleStringTestMissing.add(1l);\n          }\n          doubleStringTestStart.add(list4);\n          ArrayList<Integer> list5 = new ArrayList<Integer>();\n          if( i != 0 ){\n            list5.add(i);\n            multiStringTestMissing.add(0l);\n          } else {\n            multiStringTestMissing.add(1l);\n          }\n          multiStringTestStart.add(list5);\n        } else {\n          if( i != 0 ) intStringTestStart.get(s-1).add(i); else increment(intStringTestMissing,s-1);\n          if( l != 0l ) longStringTestStart.get(s-1).add(l); else increment(longStringTestMissing,s-1);\n          if( f != 0.0f ) floatStringTestStart.get(s-1).add(f); else increment(floatStringTestMissing,s-1);\n          if( d != 0.0d ) doubleStringTestStart.get(s-1).add(d); else increment(doubleStringTestMissing,s-1);\n          if( i != 0 ) multiStringTestStart.get(s-1).add(i); else increment(multiStringTestMissing,s-1);\n        }\n      }\n      \n      //Strings\n      if( sm != 0 ){\n        if (j-STRINGM<0&&sm!=s) {\n          ArrayList<Integer> list1 = new ArrayList<Integer>();\n          if( i != 0 ){\n            list1.add(i);\n            multiStringTestMissing.add(0l);\n          } else {\n            multiStringTestMissing.add(1l);\n          }\n          multiStringTestStart.add(list1);\n        } else if (sm!=s) {\n          if( i != 0 ) multiStringTestStart.get(sm-1).add(i); else increment(multiStringTestMissing,sm-1);\n        }\n      }\n      \n      //Int\n      if( i != 0 ){\n        if (j-INT<0) {\n          ArrayList<String> list1 = new ArrayList<String>();\n          if( dt != 0 ){\n            list1.add((1800+dt) + \"-12-31T23:59:59Z\");\n            dateIntTestMissing.add(0l);\n          } else {\n            dateIntTestMissing.add(1l);\n          }\n          dateIntTestStart.add(list1);\n          ArrayList<String> list2 = new ArrayList<String>();\n          if( s != 0 ){\n            list2.add(\"str\"+s);\n            stringIntTestMissing.add(0l);\n          } else {\n            stringIntTestMissing.add(1l);\n          }\n          stringIntTestStart.add(list2);\n        } else {\n          if( dt != 0 ) dateIntTestStart.get(i-1).add((1800+dt) + \"-12-31T23:59:59Z\"); else increment(dateIntTestMissing,i-1);\n          if( s != 0 ) stringIntTestStart.get(i-1).add(\"str\"+s); else increment(stringIntTestMissing,i-1);\n        }\n      }\n      \n      //Long\n      if( l != 0 ){\n        if (j-LONG<0) {\n          ArrayList<String> list1 = new ArrayList<String>();\n          if( dt != 0 ){\n            list1.add((1800+dt) + \"-12-31T23:59:59Z\");\n            dateLongTestMissing.add(0l);\n          } else {\n            dateLongTestMissing.add(1l);\n          }\n          dateLongTestStart.add(list1);\n          ArrayList<String> list2 = new ArrayList<String>();\n          if( s != 0 ){\n            list2.add(\"str\"+s);\n            stringLongTestMissing.add(0l);\n          } else {\n            stringLongTestMissing.add(1l);\n          }\n          stringLongTestStart.add(list2);\n          ArrayList<Integer> list3 = new ArrayList<Integer>();\n          if( i != 0 ){\n            list3.add(i);\n            multiLongTestMissing.add(0l);\n          } else {\n            multiLongTestMissing.add(1l);\n          }\n          multiLongTestStart.add(list3);\n        } else {\n          if( dt != 0 ) dateLongTestStart.get((int)l-1).add((1800+dt) + \"-12-31T23:59:59Z\"); else increment(dateLongTestMissing,(int)l-1);\n          if( s != 0 ) stringLongTestStart.get((int)l-1).add(\"str\"+s); else increment(stringLongTestMissing,(int)l-1);\n          if( i != 0 ) multiLongTestStart.get((int)l-1).add(i); else increment(multiLongTestMissing,(int)l-1);\n        }\n      }\n      \n      //Long\n      if( lm != 0 ){\n        if (j-LONGM<0&&lm!=l) {\n          ArrayList<Integer> list1 = new ArrayList<Integer>();\n          if( i != 0 ){\n            list1.add(i);\n            multiLongTestMissing.add(0l);\n          } else {\n            multiLongTestMissing.add(1l);\n          }\n          multiLongTestStart.add(list1);\n        } else if (lm!=l) {\n          if( i != 0 ) multiLongTestStart.get((int)lm-1).add(i); else increment( multiLongTestMissing,(int)lm-1);\n        }\n      }\n      \n      if (usually()) {\n        commit(); // to have several segments\n      }\n    }\n    \n    assertU(commit()); \n    response = h.query(request(fileToStringArr(fileName)));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["645e9dc687d04dbe961b35c0f3a305c48e892615"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1c0586e0570de2261142e339891d57c0f36f45c6","date":1385565864,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/analytics/facet/FieldFacetTest#beforeClass().mjava","pathOld":"solr/core/src/test/org/apache/solr/analytics/facet/FieldFacetTest#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    initCore(\"solrconfig-basic.xml\",\"schema-analytics.xml\");\n    h.update(\"<delete><query>*:*</query></delete>\");\n    \n    defaults.put(\"int\", new Integer(0));\n    defaults.put(\"long\", new Long(0));\n    defaults.put(\"float\", new Float(0));\n    defaults.put(\"double\", new Double(0));\n    defaults.put(\"date\", \"1800-12-31T23:59:59Z\");\n    defaults.put(\"string\", \"str0\");\n\n    //INT\n    intDateTestStart = new ArrayList<ArrayList<Integer>>(); \n    intDateTestMissing = new ArrayList<Long>(); \n    intStringTestStart = new ArrayList<ArrayList<Integer>>(); \n    intStringTestMissing = new ArrayList<Long>(); \n    \n    //LONG\n    longDateTestStart = new ArrayList<ArrayList<Long>>(); \n    longDateTestMissing = new ArrayList<Long>(); \n    longStringTestStart = new ArrayList<ArrayList<Long>>(); \n    longStringTestMissing = new ArrayList<Long>(); \n    \n    //FLOAT\n    floatDateTestStart = new ArrayList<ArrayList<Float>>(); \n    floatDateTestMissing = new ArrayList<Long>(); \n    floatStringTestStart = new ArrayList<ArrayList<Float>>(); \n    floatStringTestMissing = new ArrayList<Long>(); \n    \n    //DOUBLE\n    doubleDateTestStart = new ArrayList<ArrayList<Double>>(); \n    doubleDateTestMissing = new ArrayList<Long>(); \n    doubleStringTestStart = new ArrayList<ArrayList<Double>>(); \n    doubleStringTestMissing = new ArrayList<Long>(); \n    \n    //DATE\n    dateIntTestStart = new ArrayList<ArrayList<String>>(); \n    dateIntTestMissing = new ArrayList<Long>(); \n    dateLongTestStart = new ArrayList<ArrayList<String>>(); \n    dateLongTestMissing = new ArrayList<Long>(); \n    \n    //String\n    stringIntTestStart = new ArrayList<ArrayList<String>>(); \n    stringIntTestMissing = new ArrayList<Long>(); \n    stringLongTestStart = new ArrayList<ArrayList<String>>(); \n    stringLongTestMissing = new ArrayList<Long>(); \n    \n    //Multi-Valued\n    multiLongTestStart = new ArrayList<ArrayList<Integer>>(); \n    multiLongTestMissing = new ArrayList<Long>(); \n    multiStringTestStart = new ArrayList<ArrayList<Integer>>(); \n    multiStringTestMissing = new ArrayList<Long>(); \n    multiDateTestStart = new ArrayList<ArrayList<Integer>>(); \n    multiDateTestMissing = new ArrayList<Long>(); \n\n    for (int j = 0; j < NUM_LOOPS; ++j) {\n      int i = j%INT;\n      long l = j%LONG;\n      long lm = j%LONGM;\n      float f = j%FLOAT;\n      double d = j%DOUBLE;\n      int dt = j%DATE;\n      int dtm = j%DATEM;\n      int s = j%STRING;\n      int sm = j%STRINGM;\n      if (dt==0 && dtm == 0) {\n        assertU(adoc(filter(\"id\", \"1000\" + j, \"int_id\", \"\" + i, \"long_ld\", \"\" + l, \"float_fd\", \"\" + f, \n          \"double_dd\", \"\" + d,  \"date_dtd\", (1800+dt) + \"-12-31T23:59:59Z\", \"string_sd\", \"str\" + s,\n          \"long_ldm\", \"\" + l, \"long_ldm\", \"\"+lm, \"string_sdm\", \"str\" + s, \"string_sdm\", \"str\"+sm)));\n      } else if (dt == 0) {\n        assertU(adoc(filter(\"id\", \"1000\" + j, \"int_id\", \"\" + i, \"long_ld\", \"\" + l, \"float_fd\", \"\" + f, \n            \"double_dd\", \"\" + d,  \"date_dtd\", (1800+dt) + \"-12-31T23:59:59Z\", \"string_sd\", \"str\" + s,\n            \"long_ldm\", \"\" + l, \"long_ldm\", \"\"+lm, \"string_sdm\", \"str\" + s, \"string_sdm\", \"str\"+sm,\n            \"date_dtdm\", (1800+dtm) + \"-12-31T23:59:59Z\")));\n      } else if (dtm == 0) {\n        assertU(adoc(filter(\"id\", \"1000\" + j, \"int_id\", \"\" + i, \"long_ld\", \"\" + l, \"float_fd\", \"\" + f, \n            \"double_dd\", \"\" + d,  \"date_dtd\", (1800+dt) + \"-12-31T23:59:59Z\", \"string_sd\", \"str\" + s,\n            \"long_ldm\", \"\" + l, \"long_ldm\", \"\"+lm, \"string_sdm\", \"str\" + s, \"string_sdm\", \"str\"+sm,\n            \"date_dtdm\", (1800+dt) + \"-12-31T23:59:59Z\")));\n      } else {\n        assertU(adoc(filter(\"id\", \"1000\" + j, \"int_id\", \"\" + i, \"long_ld\", \"\" + l, \"float_fd\", \"\" + f, \n            \"double_dd\", \"\" + d,  \"date_dtd\", (1800+dt) + \"-12-31T23:59:59Z\", \"string_sd\", \"str\" + s,\n            \"long_ldm\", \"\" + l, \"long_ldm\", \"\"+lm, \"string_sdm\", \"str\" + s, \"string_sdm\", \"str\"+sm,\n            \"date_dtdm\", (1800+dt) + \"-12-31T23:59:59Z\", \"date_dtdm\", (1800+dtm) + \"-12-31T23:59:59Z\")));\n      }\n      \n      if( dt != 0 ){\n        //Dates\n        if (j-DATE<0) {\n          ArrayList<Integer> list1 = new ArrayList<Integer>();\n          if( i != 0 ){\n            list1.add(i);\n            intDateTestMissing.add(0l);\n          } else {\n            intDateTestMissing.add(1l);\n          }\n          intDateTestStart.add(list1);\n          ArrayList<Long> list2 = new ArrayList<Long>();\n          if( l != 0l ){\n            list2.add(l);\n            longDateTestMissing.add(0l);\n          } else {\n            longDateTestMissing.add(1l);\n          }\n          longDateTestStart.add(list2);\n          ArrayList<Float> list3 = new ArrayList<Float>();\n          if ( f != 0.0f ){\n            list3.add(f);\n            floatDateTestMissing.add(0l);\n          } else {\n            floatDateTestMissing.add(1l);\n            \n          }\n          floatDateTestStart.add(list3);\n          ArrayList<Double> list4 = new ArrayList<Double>();\n          if( d != 0.0d ){\n            list4.add(d);\n            doubleDateTestMissing.add(0l);\n          } else {\n            doubleDateTestMissing.add(1l);\n          }\n          doubleDateTestStart.add(list4);\n          ArrayList<Integer> list5 = new ArrayList<Integer>();\n          if( i != 0 ){\n            list5.add(i);\n            multiDateTestMissing.add(0l);\n          } else {\n            multiDateTestMissing.add(1l);\n            \n          }\n          multiDateTestStart.add(list5);\n        } else {\n          if( i != 0 ) intDateTestStart.get(dt-1).add(i); else increment(intDateTestMissing,dt-1);\n          if( l != 0l ) longDateTestStart.get(dt-1).add(l); else increment(longDateTestMissing,dt-1);\n          if( f != 0.0f ) floatDateTestStart.get(dt-1).add(f); else increment(floatDateTestMissing,dt-1);\n          if( d != 0.0d ) doubleDateTestStart.get(dt-1).add(d); else increment(doubleDateTestMissing,dt-1);\n          if( i != 0 ) multiDateTestStart.get(dt-1).add(i); else increment(multiDateTestMissing,dt-1);\n        }\n      }\n      \n      if (j-DATEM<0 && dtm!=dt && dtm!=0) {\n        ArrayList<Integer> list1 = new ArrayList<Integer>();\n        if( i != 0 ){\n          list1.add(i);\n          multiDateTestMissing.add(0l);\n        } else {\n          multiDateTestMissing.add(1l);\n        }\n        multiDateTestStart.add(list1);\n      } else if (dtm!=dt && dtm!=0) {\n        if( i != 0 ) multiDateTestStart.get(dtm-1).add(i);\n      }\n      \n      if( s != 0 ){\n        //Strings\n        if (j-STRING<0) {\n          ArrayList<Integer> list1 = new ArrayList<Integer>();\n          if( i != 0 ){\n            list1.add(i);\n            intStringTestMissing.add(0l);\n          } else {\n            intStringTestMissing.add(1l);\n          }\n          intStringTestStart.add(list1);\n          ArrayList<Long> list2 = new ArrayList<Long>();\n          if( l != 0l ){\n            list2.add(l);\n            longStringTestMissing.add(0l);\n          } else {\n            longStringTestMissing.add(1l);\n          }\n          longStringTestStart.add(list2);\n          ArrayList<Float> list3 = new ArrayList<Float>();\n          if( f != 0.0f ){\n            list3.add(f);\n            floatStringTestMissing.add(0l);\n          } else {\n            floatStringTestMissing.add(1l);\n          }\n          floatStringTestStart.add(list3);\n          ArrayList<Double> list4 = new ArrayList<Double>();\n          if( d != 0.0d ){\n            list4.add(d);\n            doubleStringTestMissing.add(0l);\n          } else {\n            doubleStringTestMissing.add(1l);\n          }\n          doubleStringTestStart.add(list4);\n          ArrayList<Integer> list5 = new ArrayList<Integer>();\n          if( i != 0 ){\n            list5.add(i);\n            multiStringTestMissing.add(0l);\n          } else {\n            multiStringTestMissing.add(1l);\n          }\n          multiStringTestStart.add(list5);\n        } else {\n          if( i != 0 ) intStringTestStart.get(s-1).add(i); else increment(intStringTestMissing,s-1);\n          if( l != 0l ) longStringTestStart.get(s-1).add(l); else increment(longStringTestMissing,s-1);\n          if( f != 0.0f ) floatStringTestStart.get(s-1).add(f); else increment(floatStringTestMissing,s-1);\n          if( d != 0.0d ) doubleStringTestStart.get(s-1).add(d); else increment(doubleStringTestMissing,s-1);\n          if( i != 0 ) multiStringTestStart.get(s-1).add(i); else increment(multiStringTestMissing,s-1);\n        }\n      }\n      \n      //Strings\n      if( sm != 0 ){\n        if (j-STRINGM<0&&sm!=s) {\n          ArrayList<Integer> list1 = new ArrayList<Integer>();\n          if( i != 0 ){\n            list1.add(i);\n            multiStringTestMissing.add(0l);\n          } else {\n            multiStringTestMissing.add(1l);\n          }\n          multiStringTestStart.add(list1);\n        } else if (sm!=s) {\n          if( i != 0 ) multiStringTestStart.get(sm-1).add(i); else increment(multiStringTestMissing,sm-1);\n        }\n      }\n      \n      //Int\n      if( i != 0 ){\n        if (j-INT<0) {\n          ArrayList<String> list1 = new ArrayList<String>();\n          if( dt != 0 ){\n            list1.add((1800+dt) + \"-12-31T23:59:59Z\");\n            dateIntTestMissing.add(0l);\n          } else {\n            dateIntTestMissing.add(1l);\n          }\n          dateIntTestStart.add(list1);\n          ArrayList<String> list2 = new ArrayList<String>();\n          if( s != 0 ){\n            list2.add(\"str\"+s);\n            stringIntTestMissing.add(0l);\n          } else {\n            stringIntTestMissing.add(1l);\n          }\n          stringIntTestStart.add(list2);\n        } else {\n          if( dt != 0 ) dateIntTestStart.get(i-1).add((1800+dt) + \"-12-31T23:59:59Z\"); else increment(dateIntTestMissing,i-1);\n          if( s != 0 ) stringIntTestStart.get(i-1).add(\"str\"+s); else increment(stringIntTestMissing,i-1);\n        }\n      }\n      \n      //Long\n      if( l != 0 ){\n        if (j-LONG<0) {\n          ArrayList<String> list1 = new ArrayList<String>();\n          if( dt != 0 ){\n            list1.add((1800+dt) + \"-12-31T23:59:59Z\");\n            dateLongTestMissing.add(0l);\n          } else {\n            dateLongTestMissing.add(1l);\n          }\n          dateLongTestStart.add(list1);\n          ArrayList<String> list2 = new ArrayList<String>();\n          if( s != 0 ){\n            list2.add(\"str\"+s);\n            stringLongTestMissing.add(0l);\n          } else {\n            stringLongTestMissing.add(1l);\n          }\n          stringLongTestStart.add(list2);\n          ArrayList<Integer> list3 = new ArrayList<Integer>();\n          if( i != 0 ){\n            list3.add(i);\n            multiLongTestMissing.add(0l);\n          } else {\n            multiLongTestMissing.add(1l);\n          }\n          multiLongTestStart.add(list3);\n        } else {\n          if( dt != 0 ) dateLongTestStart.get((int)l-1).add((1800+dt) + \"-12-31T23:59:59Z\"); else increment(dateLongTestMissing,(int)l-1);\n          if( s != 0 ) stringLongTestStart.get((int)l-1).add(\"str\"+s); else increment(stringLongTestMissing,(int)l-1);\n          if( i != 0 ) multiLongTestStart.get((int)l-1).add(i); else increment(multiLongTestMissing,(int)l-1);\n        }\n      }\n      \n      //Long\n      if( lm != 0 ){\n        if (j-LONGM<0&&lm!=l) {\n          ArrayList<Integer> list1 = new ArrayList<Integer>();\n          if( i != 0 ){\n            list1.add(i);\n            multiLongTestMissing.add(0l);\n          } else {\n            multiLongTestMissing.add(1l);\n          }\n          multiLongTestStart.add(list1);\n        } else if (lm!=l) {\n          if( i != 0 ) multiLongTestStart.get((int)lm-1).add(i); else increment( multiLongTestMissing,(int)lm-1);\n        }\n      }\n      \n      if (usually()) {\n        commit(); // to have several segments\n      }\n    }\n    \n    assertU(commit()); \n    setResponse(h.query(request(fileToStringArr(fileName))));\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    initCore(\"solrconfig-basic.xml\",\"schema-analytics.xml\");\n    h.update(\"<delete><query>*:*</query></delete>\");\n    \n    defaults.put(\"int\", new Integer(0));\n    defaults.put(\"long\", new Long(0));\n    defaults.put(\"float\", new Float(0));\n    defaults.put(\"double\", new Double(0));\n    defaults.put(\"date\", \"1800-12-31T23:59:59Z\");\n    defaults.put(\"string\", \"str0\");\n\n    //INT\n    intDateTestStart = new ArrayList<ArrayList<Integer>>(); \n    intDateTestMissing = new ArrayList<Long>(); \n    intStringTestStart = new ArrayList<ArrayList<Integer>>(); \n    intStringTestMissing = new ArrayList<Long>(); \n    \n    //LONG\n    longDateTestStart = new ArrayList<ArrayList<Long>>(); \n    longDateTestMissing = new ArrayList<Long>(); \n    longStringTestStart = new ArrayList<ArrayList<Long>>(); \n    longStringTestMissing = new ArrayList<Long>(); \n    \n    //FLOAT\n    floatDateTestStart = new ArrayList<ArrayList<Float>>(); \n    floatDateTestMissing = new ArrayList<Long>(); \n    floatStringTestStart = new ArrayList<ArrayList<Float>>(); \n    floatStringTestMissing = new ArrayList<Long>(); \n    \n    //DOUBLE\n    doubleDateTestStart = new ArrayList<ArrayList<Double>>(); \n    doubleDateTestMissing = new ArrayList<Long>(); \n    doubleStringTestStart = new ArrayList<ArrayList<Double>>(); \n    doubleStringTestMissing = new ArrayList<Long>(); \n    \n    //DATE\n    dateIntTestStart = new ArrayList<ArrayList<String>>(); \n    dateIntTestMissing = new ArrayList<Long>(); \n    dateLongTestStart = new ArrayList<ArrayList<String>>(); \n    dateLongTestMissing = new ArrayList<Long>(); \n    \n    //String\n    stringIntTestStart = new ArrayList<ArrayList<String>>(); \n    stringIntTestMissing = new ArrayList<Long>(); \n    stringLongTestStart = new ArrayList<ArrayList<String>>(); \n    stringLongTestMissing = new ArrayList<Long>(); \n    \n    //Multi-Valued\n    multiLongTestStart = new ArrayList<ArrayList<Integer>>(); \n    multiLongTestMissing = new ArrayList<Long>(); \n    multiStringTestStart = new ArrayList<ArrayList<Integer>>(); \n    multiStringTestMissing = new ArrayList<Long>(); \n    multiDateTestStart = new ArrayList<ArrayList<Integer>>(); \n    multiDateTestMissing = new ArrayList<Long>(); \n\n    for (int j = 0; j < NUM_LOOPS; ++j) {\n      int i = j%INT;\n      long l = j%LONG;\n      long lm = j%LONGM;\n      float f = j%FLOAT;\n      double d = j%DOUBLE;\n      int dt = j%DATE;\n      int dtm = j%DATEM;\n      int s = j%STRING;\n      int sm = j%STRINGM;\n      if (dt==0 && dtm == 0) {\n        assertU(adoc(filter(\"id\", \"1000\" + j, \"int_id\", \"\" + i, \"long_ld\", \"\" + l, \"float_fd\", \"\" + f, \n          \"double_dd\", \"\" + d,  \"date_dtd\", (1800+dt) + \"-12-31T23:59:59Z\", \"string_sd\", \"str\" + s,\n          \"long_ldm\", \"\" + l, \"long_ldm\", \"\"+lm, \"string_sdm\", \"str\" + s, \"string_sdm\", \"str\"+sm)));\n      } else if (dt == 0) {\n        assertU(adoc(filter(\"id\", \"1000\" + j, \"int_id\", \"\" + i, \"long_ld\", \"\" + l, \"float_fd\", \"\" + f, \n            \"double_dd\", \"\" + d,  \"date_dtd\", (1800+dt) + \"-12-31T23:59:59Z\", \"string_sd\", \"str\" + s,\n            \"long_ldm\", \"\" + l, \"long_ldm\", \"\"+lm, \"string_sdm\", \"str\" + s, \"string_sdm\", \"str\"+sm,\n            \"date_dtdm\", (1800+dtm) + \"-12-31T23:59:59Z\")));\n      } else if (dtm == 0) {\n        assertU(adoc(filter(\"id\", \"1000\" + j, \"int_id\", \"\" + i, \"long_ld\", \"\" + l, \"float_fd\", \"\" + f, \n            \"double_dd\", \"\" + d,  \"date_dtd\", (1800+dt) + \"-12-31T23:59:59Z\", \"string_sd\", \"str\" + s,\n            \"long_ldm\", \"\" + l, \"long_ldm\", \"\"+lm, \"string_sdm\", \"str\" + s, \"string_sdm\", \"str\"+sm,\n            \"date_dtdm\", (1800+dt) + \"-12-31T23:59:59Z\")));\n      } else {\n        assertU(adoc(filter(\"id\", \"1000\" + j, \"int_id\", \"\" + i, \"long_ld\", \"\" + l, \"float_fd\", \"\" + f, \n            \"double_dd\", \"\" + d,  \"date_dtd\", (1800+dt) + \"-12-31T23:59:59Z\", \"string_sd\", \"str\" + s,\n            \"long_ldm\", \"\" + l, \"long_ldm\", \"\"+lm, \"string_sdm\", \"str\" + s, \"string_sdm\", \"str\"+sm,\n            \"date_dtdm\", (1800+dt) + \"-12-31T23:59:59Z\", \"date_dtdm\", (1800+dtm) + \"-12-31T23:59:59Z\")));\n      }\n      \n      if( dt != 0 ){\n        //Dates\n        if (j-DATE<0) {\n          ArrayList<Integer> list1 = new ArrayList<Integer>();\n          if( i != 0 ){\n            list1.add(i);\n            intDateTestMissing.add(0l);\n          } else {\n            intDateTestMissing.add(1l);\n          }\n          intDateTestStart.add(list1);\n          ArrayList<Long> list2 = new ArrayList<Long>();\n          if( l != 0l ){\n            list2.add(l);\n            longDateTestMissing.add(0l);\n          } else {\n            longDateTestMissing.add(1l);\n          }\n          longDateTestStart.add(list2);\n          ArrayList<Float> list3 = new ArrayList<Float>();\n          if ( f != 0.0f ){\n            list3.add(f);\n            floatDateTestMissing.add(0l);\n          } else {\n            floatDateTestMissing.add(1l);\n            \n          }\n          floatDateTestStart.add(list3);\n          ArrayList<Double> list4 = new ArrayList<Double>();\n          if( d != 0.0d ){\n            list4.add(d);\n            doubleDateTestMissing.add(0l);\n          } else {\n            doubleDateTestMissing.add(1l);\n          }\n          doubleDateTestStart.add(list4);\n          ArrayList<Integer> list5 = new ArrayList<Integer>();\n          if( i != 0 ){\n            list5.add(i);\n            multiDateTestMissing.add(0l);\n          } else {\n            multiDateTestMissing.add(1l);\n            \n          }\n          multiDateTestStart.add(list5);\n        } else {\n          if( i != 0 ) intDateTestStart.get(dt-1).add(i); else increment(intDateTestMissing,dt-1);\n          if( l != 0l ) longDateTestStart.get(dt-1).add(l); else increment(longDateTestMissing,dt-1);\n          if( f != 0.0f ) floatDateTestStart.get(dt-1).add(f); else increment(floatDateTestMissing,dt-1);\n          if( d != 0.0d ) doubleDateTestStart.get(dt-1).add(d); else increment(doubleDateTestMissing,dt-1);\n          if( i != 0 ) multiDateTestStart.get(dt-1).add(i); else increment(multiDateTestMissing,dt-1);\n        }\n      }\n      \n      if (j-DATEM<0 && dtm!=dt && dtm!=0) {\n        ArrayList<Integer> list1 = new ArrayList<Integer>();\n        if( i != 0 ){\n          list1.add(i);\n          multiDateTestMissing.add(0l);\n        } else {\n          multiDateTestMissing.add(1l);\n        }\n        multiDateTestStart.add(list1);\n      } else if (dtm!=dt && dtm!=0) {\n        if( i != 0 ) multiDateTestStart.get(dtm-1).add(i);\n      }\n      \n      if( s != 0 ){\n        //Strings\n        if (j-STRING<0) {\n          ArrayList<Integer> list1 = new ArrayList<Integer>();\n          if( i != 0 ){\n            list1.add(i);\n            intStringTestMissing.add(0l);\n          } else {\n            intStringTestMissing.add(1l);\n          }\n          intStringTestStart.add(list1);\n          ArrayList<Long> list2 = new ArrayList<Long>();\n          if( l != 0l ){\n            list2.add(l);\n            longStringTestMissing.add(0l);\n          } else {\n            longStringTestMissing.add(1l);\n          }\n          longStringTestStart.add(list2);\n          ArrayList<Float> list3 = new ArrayList<Float>();\n          if( f != 0.0f ){\n            list3.add(f);\n            floatStringTestMissing.add(0l);\n          } else {\n            floatStringTestMissing.add(1l);\n          }\n          floatStringTestStart.add(list3);\n          ArrayList<Double> list4 = new ArrayList<Double>();\n          if( d != 0.0d ){\n            list4.add(d);\n            doubleStringTestMissing.add(0l);\n          } else {\n            doubleStringTestMissing.add(1l);\n          }\n          doubleStringTestStart.add(list4);\n          ArrayList<Integer> list5 = new ArrayList<Integer>();\n          if( i != 0 ){\n            list5.add(i);\n            multiStringTestMissing.add(0l);\n          } else {\n            multiStringTestMissing.add(1l);\n          }\n          multiStringTestStart.add(list5);\n        } else {\n          if( i != 0 ) intStringTestStart.get(s-1).add(i); else increment(intStringTestMissing,s-1);\n          if( l != 0l ) longStringTestStart.get(s-1).add(l); else increment(longStringTestMissing,s-1);\n          if( f != 0.0f ) floatStringTestStart.get(s-1).add(f); else increment(floatStringTestMissing,s-1);\n          if( d != 0.0d ) doubleStringTestStart.get(s-1).add(d); else increment(doubleStringTestMissing,s-1);\n          if( i != 0 ) multiStringTestStart.get(s-1).add(i); else increment(multiStringTestMissing,s-1);\n        }\n      }\n      \n      //Strings\n      if( sm != 0 ){\n        if (j-STRINGM<0&&sm!=s) {\n          ArrayList<Integer> list1 = new ArrayList<Integer>();\n          if( i != 0 ){\n            list1.add(i);\n            multiStringTestMissing.add(0l);\n          } else {\n            multiStringTestMissing.add(1l);\n          }\n          multiStringTestStart.add(list1);\n        } else if (sm!=s) {\n          if( i != 0 ) multiStringTestStart.get(sm-1).add(i); else increment(multiStringTestMissing,sm-1);\n        }\n      }\n      \n      //Int\n      if( i != 0 ){\n        if (j-INT<0) {\n          ArrayList<String> list1 = new ArrayList<String>();\n          if( dt != 0 ){\n            list1.add((1800+dt) + \"-12-31T23:59:59Z\");\n            dateIntTestMissing.add(0l);\n          } else {\n            dateIntTestMissing.add(1l);\n          }\n          dateIntTestStart.add(list1);\n          ArrayList<String> list2 = new ArrayList<String>();\n          if( s != 0 ){\n            list2.add(\"str\"+s);\n            stringIntTestMissing.add(0l);\n          } else {\n            stringIntTestMissing.add(1l);\n          }\n          stringIntTestStart.add(list2);\n        } else {\n          if( dt != 0 ) dateIntTestStart.get(i-1).add((1800+dt) + \"-12-31T23:59:59Z\"); else increment(dateIntTestMissing,i-1);\n          if( s != 0 ) stringIntTestStart.get(i-1).add(\"str\"+s); else increment(stringIntTestMissing,i-1);\n        }\n      }\n      \n      //Long\n      if( l != 0 ){\n        if (j-LONG<0) {\n          ArrayList<String> list1 = new ArrayList<String>();\n          if( dt != 0 ){\n            list1.add((1800+dt) + \"-12-31T23:59:59Z\");\n            dateLongTestMissing.add(0l);\n          } else {\n            dateLongTestMissing.add(1l);\n          }\n          dateLongTestStart.add(list1);\n          ArrayList<String> list2 = new ArrayList<String>();\n          if( s != 0 ){\n            list2.add(\"str\"+s);\n            stringLongTestMissing.add(0l);\n          } else {\n            stringLongTestMissing.add(1l);\n          }\n          stringLongTestStart.add(list2);\n          ArrayList<Integer> list3 = new ArrayList<Integer>();\n          if( i != 0 ){\n            list3.add(i);\n            multiLongTestMissing.add(0l);\n          } else {\n            multiLongTestMissing.add(1l);\n          }\n          multiLongTestStart.add(list3);\n        } else {\n          if( dt != 0 ) dateLongTestStart.get((int)l-1).add((1800+dt) + \"-12-31T23:59:59Z\"); else increment(dateLongTestMissing,(int)l-1);\n          if( s != 0 ) stringLongTestStart.get((int)l-1).add(\"str\"+s); else increment(stringLongTestMissing,(int)l-1);\n          if( i != 0 ) multiLongTestStart.get((int)l-1).add(i); else increment(multiLongTestMissing,(int)l-1);\n        }\n      }\n      \n      //Long\n      if( lm != 0 ){\n        if (j-LONGM<0&&lm!=l) {\n          ArrayList<Integer> list1 = new ArrayList<Integer>();\n          if( i != 0 ){\n            list1.add(i);\n            multiLongTestMissing.add(0l);\n          } else {\n            multiLongTestMissing.add(1l);\n          }\n          multiLongTestStart.add(list1);\n        } else if (lm!=l) {\n          if( i != 0 ) multiLongTestStart.get((int)lm-1).add(i); else increment( multiLongTestMissing,(int)lm-1);\n        }\n      }\n      \n      if (usually()) {\n        commit(); // to have several segments\n      }\n    }\n    \n    assertU(commit()); \n    response = h.query(request(fileToStringArr(fileName)));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"74f45af4339b0daf7a95c820ab88c1aea74fbce0","date":1387475327,"type":0,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/analytics/facet/FieldFacetTest#beforeClass().mjava","pathOld":"/dev/null","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    initCore(\"solrconfig-basic.xml\",\"schema-analytics.xml\");\n    h.update(\"<delete><query>*:*</query></delete>\");\n    \n    defaults.put(\"int\", new Integer(0));\n    defaults.put(\"long\", new Long(0));\n    defaults.put(\"float\", new Float(0));\n    defaults.put(\"double\", new Double(0));\n    defaults.put(\"date\", \"1800-12-31T23:59:59Z\");\n    defaults.put(\"string\", \"str0\");\n\n    //INT\n    intDateTestStart = new ArrayList<ArrayList<Integer>>(); \n    intDateTestMissing = new ArrayList<Long>(); \n    intStringTestStart = new ArrayList<ArrayList<Integer>>(); \n    intStringTestMissing = new ArrayList<Long>(); \n    \n    //LONG\n    longDateTestStart = new ArrayList<ArrayList<Long>>(); \n    longDateTestMissing = new ArrayList<Long>(); \n    longStringTestStart = new ArrayList<ArrayList<Long>>(); \n    longStringTestMissing = new ArrayList<Long>(); \n    \n    //FLOAT\n    floatDateTestStart = new ArrayList<ArrayList<Float>>(); \n    floatDateTestMissing = new ArrayList<Long>(); \n    floatStringTestStart = new ArrayList<ArrayList<Float>>(); \n    floatStringTestMissing = new ArrayList<Long>(); \n    \n    //DOUBLE\n    doubleDateTestStart = new ArrayList<ArrayList<Double>>(); \n    doubleDateTestMissing = new ArrayList<Long>(); \n    doubleStringTestStart = new ArrayList<ArrayList<Double>>(); \n    doubleStringTestMissing = new ArrayList<Long>(); \n    \n    //DATE\n    dateIntTestStart = new ArrayList<ArrayList<String>>(); \n    dateIntTestMissing = new ArrayList<Long>(); \n    dateLongTestStart = new ArrayList<ArrayList<String>>(); \n    dateLongTestMissing = new ArrayList<Long>(); \n    \n    //String\n    stringIntTestStart = new ArrayList<ArrayList<String>>(); \n    stringIntTestMissing = new ArrayList<Long>(); \n    stringLongTestStart = new ArrayList<ArrayList<String>>(); \n    stringLongTestMissing = new ArrayList<Long>(); \n    \n    //Multi-Valued\n    multiLongTestStart = new ArrayList<ArrayList<Integer>>(); \n    multiLongTestMissing = new ArrayList<Long>(); \n    multiStringTestStart = new ArrayList<ArrayList<Integer>>(); \n    multiStringTestMissing = new ArrayList<Long>(); \n    multiDateTestStart = new ArrayList<ArrayList<Integer>>(); \n    multiDateTestMissing = new ArrayList<Long>(); \n\n    for (int j = 0; j < NUM_LOOPS; ++j) {\n      int i = j%INT;\n      long l = j%LONG;\n      long lm = j%LONGM;\n      float f = j%FLOAT;\n      double d = j%DOUBLE;\n      int dt = j%DATE;\n      int dtm = j%DATEM;\n      int s = j%STRING;\n      int sm = j%STRINGM;\n      if (dt==0 && dtm == 0) {\n        assertU(adoc(filter(\"id\", \"1000\" + j, \"int_id\", \"\" + i, \"long_ld\", \"\" + l, \"float_fd\", \"\" + f, \n          \"double_dd\", \"\" + d,  \"date_dtd\", (1800+dt) + \"-12-31T23:59:59Z\", \"string_sd\", \"str\" + s,\n          \"long_ldm\", \"\" + l, \"long_ldm\", \"\"+lm, \"string_sdm\", \"str\" + s, \"string_sdm\", \"str\"+sm)));\n      } else if (dt == 0) {\n        assertU(adoc(filter(\"id\", \"1000\" + j, \"int_id\", \"\" + i, \"long_ld\", \"\" + l, \"float_fd\", \"\" + f, \n            \"double_dd\", \"\" + d,  \"date_dtd\", (1800+dt) + \"-12-31T23:59:59Z\", \"string_sd\", \"str\" + s,\n            \"long_ldm\", \"\" + l, \"long_ldm\", \"\"+lm, \"string_sdm\", \"str\" + s, \"string_sdm\", \"str\"+sm,\n            \"date_dtdm\", (1800+dtm) + \"-12-31T23:59:59Z\")));\n      } else if (dtm == 0) {\n        assertU(adoc(filter(\"id\", \"1000\" + j, \"int_id\", \"\" + i, \"long_ld\", \"\" + l, \"float_fd\", \"\" + f, \n            \"double_dd\", \"\" + d,  \"date_dtd\", (1800+dt) + \"-12-31T23:59:59Z\", \"string_sd\", \"str\" + s,\n            \"long_ldm\", \"\" + l, \"long_ldm\", \"\"+lm, \"string_sdm\", \"str\" + s, \"string_sdm\", \"str\"+sm,\n            \"date_dtdm\", (1800+dt) + \"-12-31T23:59:59Z\")));\n      } else {\n        assertU(adoc(filter(\"id\", \"1000\" + j, \"int_id\", \"\" + i, \"long_ld\", \"\" + l, \"float_fd\", \"\" + f, \n            \"double_dd\", \"\" + d,  \"date_dtd\", (1800+dt) + \"-12-31T23:59:59Z\", \"string_sd\", \"str\" + s,\n            \"long_ldm\", \"\" + l, \"long_ldm\", \"\"+lm, \"string_sdm\", \"str\" + s, \"string_sdm\", \"str\"+sm,\n            \"date_dtdm\", (1800+dt) + \"-12-31T23:59:59Z\", \"date_dtdm\", (1800+dtm) + \"-12-31T23:59:59Z\")));\n      }\n      \n      if( dt != 0 ){\n        //Dates\n        if (j-DATE<0) {\n          ArrayList<Integer> list1 = new ArrayList<Integer>();\n          if( i != 0 ){\n            list1.add(i);\n            intDateTestMissing.add(0l);\n          } else {\n            intDateTestMissing.add(1l);\n          }\n          intDateTestStart.add(list1);\n          ArrayList<Long> list2 = new ArrayList<Long>();\n          if( l != 0l ){\n            list2.add(l);\n            longDateTestMissing.add(0l);\n          } else {\n            longDateTestMissing.add(1l);\n          }\n          longDateTestStart.add(list2);\n          ArrayList<Float> list3 = new ArrayList<Float>();\n          if ( f != 0.0f ){\n            list3.add(f);\n            floatDateTestMissing.add(0l);\n          } else {\n            floatDateTestMissing.add(1l);\n            \n          }\n          floatDateTestStart.add(list3);\n          ArrayList<Double> list4 = new ArrayList<Double>();\n          if( d != 0.0d ){\n            list4.add(d);\n            doubleDateTestMissing.add(0l);\n          } else {\n            doubleDateTestMissing.add(1l);\n          }\n          doubleDateTestStart.add(list4);\n          ArrayList<Integer> list5 = new ArrayList<Integer>();\n          if( i != 0 ){\n            list5.add(i);\n            multiDateTestMissing.add(0l);\n          } else {\n            multiDateTestMissing.add(1l);\n            \n          }\n          multiDateTestStart.add(list5);\n        } else {\n          if( i != 0 ) intDateTestStart.get(dt-1).add(i); else increment(intDateTestMissing,dt-1);\n          if( l != 0l ) longDateTestStart.get(dt-1).add(l); else increment(longDateTestMissing,dt-1);\n          if( f != 0.0f ) floatDateTestStart.get(dt-1).add(f); else increment(floatDateTestMissing,dt-1);\n          if( d != 0.0d ) doubleDateTestStart.get(dt-1).add(d); else increment(doubleDateTestMissing,dt-1);\n          if( i != 0 ) multiDateTestStart.get(dt-1).add(i); else increment(multiDateTestMissing,dt-1);\n        }\n      }\n      \n      if (j-DATEM<0 && dtm!=dt && dtm!=0) {\n        ArrayList<Integer> list1 = new ArrayList<Integer>();\n        if( i != 0 ){\n          list1.add(i);\n          multiDateTestMissing.add(0l);\n        } else {\n          multiDateTestMissing.add(1l);\n        }\n        multiDateTestStart.add(list1);\n      } else if (dtm!=dt && dtm!=0) {\n        if( i != 0 ) multiDateTestStart.get(dtm-1).add(i);\n      }\n      \n      if( s != 0 ){\n        //Strings\n        if (j-STRING<0) {\n          ArrayList<Integer> list1 = new ArrayList<Integer>();\n          if( i != 0 ){\n            list1.add(i);\n            intStringTestMissing.add(0l);\n          } else {\n            intStringTestMissing.add(1l);\n          }\n          intStringTestStart.add(list1);\n          ArrayList<Long> list2 = new ArrayList<Long>();\n          if( l != 0l ){\n            list2.add(l);\n            longStringTestMissing.add(0l);\n          } else {\n            longStringTestMissing.add(1l);\n          }\n          longStringTestStart.add(list2);\n          ArrayList<Float> list3 = new ArrayList<Float>();\n          if( f != 0.0f ){\n            list3.add(f);\n            floatStringTestMissing.add(0l);\n          } else {\n            floatStringTestMissing.add(1l);\n          }\n          floatStringTestStart.add(list3);\n          ArrayList<Double> list4 = new ArrayList<Double>();\n          if( d != 0.0d ){\n            list4.add(d);\n            doubleStringTestMissing.add(0l);\n          } else {\n            doubleStringTestMissing.add(1l);\n          }\n          doubleStringTestStart.add(list4);\n          ArrayList<Integer> list5 = new ArrayList<Integer>();\n          if( i != 0 ){\n            list5.add(i);\n            multiStringTestMissing.add(0l);\n          } else {\n            multiStringTestMissing.add(1l);\n          }\n          multiStringTestStart.add(list5);\n        } else {\n          if( i != 0 ) intStringTestStart.get(s-1).add(i); else increment(intStringTestMissing,s-1);\n          if( l != 0l ) longStringTestStart.get(s-1).add(l); else increment(longStringTestMissing,s-1);\n          if( f != 0.0f ) floatStringTestStart.get(s-1).add(f); else increment(floatStringTestMissing,s-1);\n          if( d != 0.0d ) doubleStringTestStart.get(s-1).add(d); else increment(doubleStringTestMissing,s-1);\n          if( i != 0 ) multiStringTestStart.get(s-1).add(i); else increment(multiStringTestMissing,s-1);\n        }\n      }\n      \n      //Strings\n      if( sm != 0 ){\n        if (j-STRINGM<0&&sm!=s) {\n          ArrayList<Integer> list1 = new ArrayList<Integer>();\n          if( i != 0 ){\n            list1.add(i);\n            multiStringTestMissing.add(0l);\n          } else {\n            multiStringTestMissing.add(1l);\n          }\n          multiStringTestStart.add(list1);\n        } else if (sm!=s) {\n          if( i != 0 ) multiStringTestStart.get(sm-1).add(i); else increment(multiStringTestMissing,sm-1);\n        }\n      }\n      \n      //Int\n      if( i != 0 ){\n        if (j-INT<0) {\n          ArrayList<String> list1 = new ArrayList<String>();\n          if( dt != 0 ){\n            list1.add((1800+dt) + \"-12-31T23:59:59Z\");\n            dateIntTestMissing.add(0l);\n          } else {\n            dateIntTestMissing.add(1l);\n          }\n          dateIntTestStart.add(list1);\n          ArrayList<String> list2 = new ArrayList<String>();\n          if( s != 0 ){\n            list2.add(\"str\"+s);\n            stringIntTestMissing.add(0l);\n          } else {\n            stringIntTestMissing.add(1l);\n          }\n          stringIntTestStart.add(list2);\n        } else {\n          if( dt != 0 ) dateIntTestStart.get(i-1).add((1800+dt) + \"-12-31T23:59:59Z\"); else increment(dateIntTestMissing,i-1);\n          if( s != 0 ) stringIntTestStart.get(i-1).add(\"str\"+s); else increment(stringIntTestMissing,i-1);\n        }\n      }\n      \n      //Long\n      if( l != 0 ){\n        if (j-LONG<0) {\n          ArrayList<String> list1 = new ArrayList<String>();\n          if( dt != 0 ){\n            list1.add((1800+dt) + \"-12-31T23:59:59Z\");\n            dateLongTestMissing.add(0l);\n          } else {\n            dateLongTestMissing.add(1l);\n          }\n          dateLongTestStart.add(list1);\n          ArrayList<String> list2 = new ArrayList<String>();\n          if( s != 0 ){\n            list2.add(\"str\"+s);\n            stringLongTestMissing.add(0l);\n          } else {\n            stringLongTestMissing.add(1l);\n          }\n          stringLongTestStart.add(list2);\n          ArrayList<Integer> list3 = new ArrayList<Integer>();\n          if( i != 0 ){\n            list3.add(i);\n            multiLongTestMissing.add(0l);\n          } else {\n            multiLongTestMissing.add(1l);\n          }\n          multiLongTestStart.add(list3);\n        } else {\n          if( dt != 0 ) dateLongTestStart.get((int)l-1).add((1800+dt) + \"-12-31T23:59:59Z\"); else increment(dateLongTestMissing,(int)l-1);\n          if( s != 0 ) stringLongTestStart.get((int)l-1).add(\"str\"+s); else increment(stringLongTestMissing,(int)l-1);\n          if( i != 0 ) multiLongTestStart.get((int)l-1).add(i); else increment(multiLongTestMissing,(int)l-1);\n        }\n      }\n      \n      //Long\n      if( lm != 0 ){\n        if (j-LONGM<0&&lm!=l) {\n          ArrayList<Integer> list1 = new ArrayList<Integer>();\n          if( i != 0 ){\n            list1.add(i);\n            multiLongTestMissing.add(0l);\n          } else {\n            multiLongTestMissing.add(1l);\n          }\n          multiLongTestStart.add(list1);\n        } else if (lm!=l) {\n          if( i != 0 ) multiLongTestStart.get((int)lm-1).add(i); else increment( multiLongTestMissing,(int)lm-1);\n        }\n      }\n      \n      if (usually()) {\n        commit(); // to have several segments\n      }\n    }\n    \n    assertU(commit()); \n    setResponse(h.query(request(fileToStringArr(fileName))));\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"404b171beda23ddce9e45366a3dbd6444d8d029c","date":1391180301,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/analytics/facet/FieldFacetTest#beforeClass().mjava","pathOld":"solr/core/src/test/org/apache/solr/analytics/facet/FieldFacetTest#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    initCore(\"solrconfig-basic.xml\",\"schema-analytics.xml\");\n    h.update(\"<delete><query>*:*</query></delete>\");\n    \n    defaults.put(\"int\", new Integer(0));\n    defaults.put(\"long\", new Long(0));\n    defaults.put(\"float\", new Float(0));\n    defaults.put(\"double\", new Double(0));\n    defaults.put(\"date\", \"1800-12-31T23:59:59Z\");\n    defaults.put(\"string\", \"str0\");\n\n    //INT\n    intDateTestStart = new ArrayList<ArrayList<Integer>>(); \n    intDateTestMissing = new ArrayList<Long>(); \n    intStringTestStart = new ArrayList<ArrayList<Integer>>(); \n    intStringTestMissing = new ArrayList<Long>(); \n    \n    //LONG\n    longDateTestStart = new ArrayList<ArrayList<Long>>(); \n    longDateTestMissing = new ArrayList<Long>(); \n    longStringTestStart = new ArrayList<ArrayList<Long>>(); \n    longStringTestMissing = new ArrayList<Long>(); \n    \n    //FLOAT\n    floatDateTestStart = new ArrayList<ArrayList<Float>>(); \n    floatDateTestMissing = new ArrayList<Long>(); \n    floatStringTestStart = new ArrayList<ArrayList<Float>>(); \n    floatStringTestMissing = new ArrayList<Long>(); \n    \n    //DOUBLE\n    doubleDateTestStart = new ArrayList<ArrayList<Double>>(); \n    doubleDateTestMissing = new ArrayList<Long>(); \n    doubleStringTestStart = new ArrayList<ArrayList<Double>>(); \n    doubleStringTestMissing = new ArrayList<Long>(); \n    \n    //DATE\n    dateIntTestStart = new ArrayList<ArrayList<String>>(); \n    dateIntTestMissing = new ArrayList<Long>(); \n    dateLongTestStart = new ArrayList<ArrayList<String>>(); \n    dateLongTestMissing = new ArrayList<Long>(); \n    \n    //String\n    stringIntTestStart = new ArrayList<ArrayList<String>>(); \n    stringIntTestMissing = new ArrayList<Long>(); \n    stringLongTestStart = new ArrayList<ArrayList<String>>(); \n    stringLongTestMissing = new ArrayList<Long>(); \n    \n    //Multi-Valued\n    multiLongTestStart = new ArrayList<ArrayList<Integer>>(); \n    multiLongTestMissing = new ArrayList<Long>(); \n    multiStringTestStart = new ArrayList<ArrayList<Integer>>(); \n    multiStringTestMissing = new ArrayList<Long>(); \n    multiDateTestStart = new ArrayList<ArrayList<Integer>>(); \n    multiDateTestMissing = new ArrayList<Long>(); \n\n    for (int j = 0; j < NUM_LOOPS; ++j) {\n      int i = j%INT;\n      long l = j%LONG;\n      long lm = j%LONGM;\n      float f = j%FLOAT;\n      double d = j%DOUBLE;\n      int dt = j%DATE;\n      int dtm = j%DATEM;\n      int s = j%STRING;\n      int sm = j%STRINGM;\n      if (dt==0 && dtm == 0) {\n        assertU(adoc(filter(\"id\", \"1000\" + j, \"int_id\", \"\" + i, \"long_ld\", \"\" + l, \"float_fd\", \"\" + f, \n          \"double_dd\", \"\" + d,  \"date_dtd\", (1800+dt) + \"-12-31T23:59:59Z\", \"string_sd\", \"str\" + s,\n          \"long_ldm\", \"\" + l, \"long_ldm\", \"\"+lm, \"string_sdm\", \"str\" + s, \"string_sdm\", \"str\"+sm)));\n      } else if (dt == 0) {\n        assertU(adoc(filter(\"id\", \"1000\" + j, \"int_id\", \"\" + i, \"long_ld\", \"\" + l, \"float_fd\", \"\" + f, \n            \"double_dd\", \"\" + d,  \"date_dtd\", (1800+dt) + \"-12-31T23:59:59Z\", \"string_sd\", \"str\" + s,\n            \"long_ldm\", \"\" + l, \"long_ldm\", \"\"+lm, \"string_sdm\", \"str\" + s, \"string_sdm\", \"str\"+sm,\n            \"date_dtdm\", (1800+dtm) + \"-12-31T23:59:59Z\")));\n      } else if (dtm == 0) {\n        assertU(adoc(filter(\"id\", \"1000\" + j, \"int_id\", \"\" + i, \"long_ld\", \"\" + l, \"float_fd\", \"\" + f, \n            \"double_dd\", \"\" + d,  \"date_dtd\", (1800+dt) + \"-12-31T23:59:59Z\", \"string_sd\", \"str\" + s,\n            \"long_ldm\", \"\" + l, \"long_ldm\", \"\"+lm, \"string_sdm\", \"str\" + s, \"string_sdm\", \"str\"+sm,\n            \"date_dtdm\", (1800+dt) + \"-12-31T23:59:59Z\")));\n      } else {\n        assertU(adoc(filter(\"id\", \"1000\" + j, \"int_id\", \"\" + i, \"long_ld\", \"\" + l, \"float_fd\", \"\" + f, \n            \"double_dd\", \"\" + d,  \"date_dtd\", (1800+dt) + \"-12-31T23:59:59Z\", \"string_sd\", \"str\" + s,\n            \"long_ldm\", \"\" + l, \"long_ldm\", \"\"+lm, \"string_sdm\", \"str\" + s, \"string_sdm\", \"str\"+sm,\n            \"date_dtdm\", (1800+dt) + \"-12-31T23:59:59Z\", \"date_dtdm\", (1800+dtm) + \"-12-31T23:59:59Z\")));\n      }\n      \n      if( dt != 0 ){\n        //Dates\n        if (j-DATE<0) {\n          ArrayList<Integer> list1 = new ArrayList<Integer>();\n          if( i != 0 ){\n            list1.add(i);\n            intDateTestMissing.add(0l);\n          } else {\n            intDateTestMissing.add(1l);\n          }\n          intDateTestStart.add(list1);\n          ArrayList<Long> list2 = new ArrayList<Long>();\n          if( l != 0l ){\n            list2.add(l);\n            longDateTestMissing.add(0l);\n          } else {\n            longDateTestMissing.add(1l);\n          }\n          longDateTestStart.add(list2);\n          ArrayList<Float> list3 = new ArrayList<Float>();\n          if ( f != 0.0f ){\n            list3.add(f);\n            floatDateTestMissing.add(0l);\n          } else {\n            floatDateTestMissing.add(1l);\n            \n          }\n          floatDateTestStart.add(list3);\n          ArrayList<Double> list4 = new ArrayList<Double>();\n          if( d != 0.0d ){\n            list4.add(d);\n            doubleDateTestMissing.add(0l);\n          } else {\n            doubleDateTestMissing.add(1l);\n          }\n          doubleDateTestStart.add(list4);\n          ArrayList<Integer> list5 = new ArrayList<Integer>();\n          if( i != 0 ){\n            list5.add(i);\n            multiDateTestMissing.add(0l);\n          } else {\n            multiDateTestMissing.add(1l);\n            \n          }\n          multiDateTestStart.add(list5);\n        } else {\n          if( i != 0 ) intDateTestStart.get(dt-1).add(i); else increment(intDateTestMissing,dt-1);\n          if( l != 0l ) longDateTestStart.get(dt-1).add(l); else increment(longDateTestMissing,dt-1);\n          if( f != 0.0f ) floatDateTestStart.get(dt-1).add(f); else increment(floatDateTestMissing,dt-1);\n          if( d != 0.0d ) doubleDateTestStart.get(dt-1).add(d); else increment(doubleDateTestMissing,dt-1);\n          if( i != 0 ) multiDateTestStart.get(dt-1).add(i); else increment(multiDateTestMissing,dt-1);\n        }\n      }\n      \n      if (j-DATEM<0 && dtm!=dt && dtm!=0) {\n        ArrayList<Integer> list1 = new ArrayList<Integer>();\n        if( i != 0 ){\n          list1.add(i);\n          multiDateTestMissing.add(0l);\n        } else {\n          multiDateTestMissing.add(1l);\n        }\n        multiDateTestStart.add(list1);\n      } else if (dtm!=dt && dtm!=0) {\n        if( i != 0 ) multiDateTestStart.get(dtm-1).add(i);\n      }\n      \n      if( s != 0 ){\n        //Strings\n        if (j-STRING<0) {\n          ArrayList<Integer> list1 = new ArrayList<Integer>();\n          if( i != 0 ){\n            list1.add(i);\n            intStringTestMissing.add(0l);\n          } else {\n            intStringTestMissing.add(1l);\n          }\n          intStringTestStart.add(list1);\n          ArrayList<Long> list2 = new ArrayList<Long>();\n          if( l != 0l ){\n            list2.add(l);\n            longStringTestMissing.add(0l);\n          } else {\n            longStringTestMissing.add(1l);\n          }\n          longStringTestStart.add(list2);\n          ArrayList<Float> list3 = new ArrayList<Float>();\n          if( f != 0.0f ){\n            list3.add(f);\n            floatStringTestMissing.add(0l);\n          } else {\n            floatStringTestMissing.add(1l);\n          }\n          floatStringTestStart.add(list3);\n          ArrayList<Double> list4 = new ArrayList<Double>();\n          if( d != 0.0d ){\n            list4.add(d);\n            doubleStringTestMissing.add(0l);\n          } else {\n            doubleStringTestMissing.add(1l);\n          }\n          doubleStringTestStart.add(list4);\n          ArrayList<Integer> list5 = new ArrayList<Integer>();\n          if( i != 0 ){\n            list5.add(i);\n            multiStringTestMissing.add(0l);\n          } else {\n            multiStringTestMissing.add(1l);\n          }\n          multiStringTestStart.add(list5);\n        } else {\n          if( i != 0 ) intStringTestStart.get(s-1).add(i); else increment(intStringTestMissing,s-1);\n          if( l != 0l ) longStringTestStart.get(s-1).add(l); else increment(longStringTestMissing,s-1);\n          if( f != 0.0f ) floatStringTestStart.get(s-1).add(f); else increment(floatStringTestMissing,s-1);\n          if( d != 0.0d ) doubleStringTestStart.get(s-1).add(d); else increment(doubleStringTestMissing,s-1);\n          if( i != 0 ) multiStringTestStart.get(s-1).add(i); else increment(multiStringTestMissing,s-1);\n        }\n      }\n      \n      //Strings\n      if( sm != 0 ){\n        if (j-STRINGM<0&&sm!=s) {\n          ArrayList<Integer> list1 = new ArrayList<Integer>();\n          if( i != 0 ){\n            list1.add(i);\n            multiStringTestMissing.add(0l);\n          } else {\n            multiStringTestMissing.add(1l);\n          }\n          multiStringTestStart.add(list1);\n        } else if (sm!=s) {\n          if( i != 0 ) multiStringTestStart.get(sm-1).add(i); else increment(multiStringTestMissing,sm-1);\n        }\n      }\n      \n      //Int\n      if( i != 0 ){\n        if (j-INT<0) {\n          ArrayList<String> list1 = new ArrayList<String>();\n          if( dt != 0 ){\n            list1.add((1800+dt) + \"-12-31T23:59:59Z\");\n            dateIntTestMissing.add(0l);\n          } else {\n            dateIntTestMissing.add(1l);\n          }\n          dateIntTestStart.add(list1);\n          ArrayList<String> list2 = new ArrayList<String>();\n          if( s != 0 ){\n            list2.add(\"str\"+s);\n            stringIntTestMissing.add(0l);\n          } else {\n            stringIntTestMissing.add(1l);\n          }\n          stringIntTestStart.add(list2);\n        } else {\n          if( dt != 0 ) dateIntTestStart.get(i-1).add((1800+dt) + \"-12-31T23:59:59Z\"); else increment(dateIntTestMissing,i-1);\n          if( s != 0 ) stringIntTestStart.get(i-1).add(\"str\"+s); else increment(stringIntTestMissing,i-1);\n        }\n      }\n      \n      //Long\n      if( l != 0 ){\n        if (j-LONG<0) {\n          ArrayList<String> list1 = new ArrayList<String>();\n          if( dt != 0 ){\n            list1.add((1800+dt) + \"-12-31T23:59:59Z\");\n            dateLongTestMissing.add(0l);\n          } else {\n            dateLongTestMissing.add(1l);\n          }\n          dateLongTestStart.add(list1);\n          ArrayList<String> list2 = new ArrayList<String>();\n          if( s != 0 ){\n            list2.add(\"str\"+s);\n            stringLongTestMissing.add(0l);\n          } else {\n            stringLongTestMissing.add(1l);\n          }\n          stringLongTestStart.add(list2);\n          ArrayList<Integer> list3 = new ArrayList<Integer>();\n          if( i != 0 ){\n            list3.add(i);\n            multiLongTestMissing.add(0l);\n          } else {\n            multiLongTestMissing.add(1l);\n          }\n          multiLongTestStart.add(list3);\n        } else {\n          if( dt != 0 ) dateLongTestStart.get((int)l-1).add((1800+dt) + \"-12-31T23:59:59Z\"); else increment(dateLongTestMissing,(int)l-1);\n          if( s != 0 ) stringLongTestStart.get((int)l-1).add(\"str\"+s); else increment(stringLongTestMissing,(int)l-1);\n          if( i != 0 ) multiLongTestStart.get((int)l-1).add(i); else increment(multiLongTestMissing,(int)l-1);\n        }\n      }\n      \n      //Long\n      if( lm != 0 ){\n        if (j-LONGM<0&&lm!=l) {\n          ArrayList<Integer> list1 = new ArrayList<Integer>();\n          if( i != 0 ){\n            list1.add(i);\n            multiLongTestMissing.add(0l);\n          } else {\n            multiLongTestMissing.add(1l);\n          }\n          multiLongTestStart.add(list1);\n        } else if (lm!=l) {\n          if( i != 0 ) multiLongTestStart.get((int)lm-1).add(i); else increment( multiLongTestMissing,(int)lm-1);\n        }\n      }\n      \n      if (usually()) {\n        assertU(commit()); // to have several segments\n      }\n    }\n    \n    assertU(commit()); \n    setResponse(h.query(request(fileToStringArr(fileName))));\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    initCore(\"solrconfig-basic.xml\",\"schema-analytics.xml\");\n    h.update(\"<delete><query>*:*</query></delete>\");\n    \n    defaults.put(\"int\", new Integer(0));\n    defaults.put(\"long\", new Long(0));\n    defaults.put(\"float\", new Float(0));\n    defaults.put(\"double\", new Double(0));\n    defaults.put(\"date\", \"1800-12-31T23:59:59Z\");\n    defaults.put(\"string\", \"str0\");\n\n    //INT\n    intDateTestStart = new ArrayList<ArrayList<Integer>>(); \n    intDateTestMissing = new ArrayList<Long>(); \n    intStringTestStart = new ArrayList<ArrayList<Integer>>(); \n    intStringTestMissing = new ArrayList<Long>(); \n    \n    //LONG\n    longDateTestStart = new ArrayList<ArrayList<Long>>(); \n    longDateTestMissing = new ArrayList<Long>(); \n    longStringTestStart = new ArrayList<ArrayList<Long>>(); \n    longStringTestMissing = new ArrayList<Long>(); \n    \n    //FLOAT\n    floatDateTestStart = new ArrayList<ArrayList<Float>>(); \n    floatDateTestMissing = new ArrayList<Long>(); \n    floatStringTestStart = new ArrayList<ArrayList<Float>>(); \n    floatStringTestMissing = new ArrayList<Long>(); \n    \n    //DOUBLE\n    doubleDateTestStart = new ArrayList<ArrayList<Double>>(); \n    doubleDateTestMissing = new ArrayList<Long>(); \n    doubleStringTestStart = new ArrayList<ArrayList<Double>>(); \n    doubleStringTestMissing = new ArrayList<Long>(); \n    \n    //DATE\n    dateIntTestStart = new ArrayList<ArrayList<String>>(); \n    dateIntTestMissing = new ArrayList<Long>(); \n    dateLongTestStart = new ArrayList<ArrayList<String>>(); \n    dateLongTestMissing = new ArrayList<Long>(); \n    \n    //String\n    stringIntTestStart = new ArrayList<ArrayList<String>>(); \n    stringIntTestMissing = new ArrayList<Long>(); \n    stringLongTestStart = new ArrayList<ArrayList<String>>(); \n    stringLongTestMissing = new ArrayList<Long>(); \n    \n    //Multi-Valued\n    multiLongTestStart = new ArrayList<ArrayList<Integer>>(); \n    multiLongTestMissing = new ArrayList<Long>(); \n    multiStringTestStart = new ArrayList<ArrayList<Integer>>(); \n    multiStringTestMissing = new ArrayList<Long>(); \n    multiDateTestStart = new ArrayList<ArrayList<Integer>>(); \n    multiDateTestMissing = new ArrayList<Long>(); \n\n    for (int j = 0; j < NUM_LOOPS; ++j) {\n      int i = j%INT;\n      long l = j%LONG;\n      long lm = j%LONGM;\n      float f = j%FLOAT;\n      double d = j%DOUBLE;\n      int dt = j%DATE;\n      int dtm = j%DATEM;\n      int s = j%STRING;\n      int sm = j%STRINGM;\n      if (dt==0 && dtm == 0) {\n        assertU(adoc(filter(\"id\", \"1000\" + j, \"int_id\", \"\" + i, \"long_ld\", \"\" + l, \"float_fd\", \"\" + f, \n          \"double_dd\", \"\" + d,  \"date_dtd\", (1800+dt) + \"-12-31T23:59:59Z\", \"string_sd\", \"str\" + s,\n          \"long_ldm\", \"\" + l, \"long_ldm\", \"\"+lm, \"string_sdm\", \"str\" + s, \"string_sdm\", \"str\"+sm)));\n      } else if (dt == 0) {\n        assertU(adoc(filter(\"id\", \"1000\" + j, \"int_id\", \"\" + i, \"long_ld\", \"\" + l, \"float_fd\", \"\" + f, \n            \"double_dd\", \"\" + d,  \"date_dtd\", (1800+dt) + \"-12-31T23:59:59Z\", \"string_sd\", \"str\" + s,\n            \"long_ldm\", \"\" + l, \"long_ldm\", \"\"+lm, \"string_sdm\", \"str\" + s, \"string_sdm\", \"str\"+sm,\n            \"date_dtdm\", (1800+dtm) + \"-12-31T23:59:59Z\")));\n      } else if (dtm == 0) {\n        assertU(adoc(filter(\"id\", \"1000\" + j, \"int_id\", \"\" + i, \"long_ld\", \"\" + l, \"float_fd\", \"\" + f, \n            \"double_dd\", \"\" + d,  \"date_dtd\", (1800+dt) + \"-12-31T23:59:59Z\", \"string_sd\", \"str\" + s,\n            \"long_ldm\", \"\" + l, \"long_ldm\", \"\"+lm, \"string_sdm\", \"str\" + s, \"string_sdm\", \"str\"+sm,\n            \"date_dtdm\", (1800+dt) + \"-12-31T23:59:59Z\")));\n      } else {\n        assertU(adoc(filter(\"id\", \"1000\" + j, \"int_id\", \"\" + i, \"long_ld\", \"\" + l, \"float_fd\", \"\" + f, \n            \"double_dd\", \"\" + d,  \"date_dtd\", (1800+dt) + \"-12-31T23:59:59Z\", \"string_sd\", \"str\" + s,\n            \"long_ldm\", \"\" + l, \"long_ldm\", \"\"+lm, \"string_sdm\", \"str\" + s, \"string_sdm\", \"str\"+sm,\n            \"date_dtdm\", (1800+dt) + \"-12-31T23:59:59Z\", \"date_dtdm\", (1800+dtm) + \"-12-31T23:59:59Z\")));\n      }\n      \n      if( dt != 0 ){\n        //Dates\n        if (j-DATE<0) {\n          ArrayList<Integer> list1 = new ArrayList<Integer>();\n          if( i != 0 ){\n            list1.add(i);\n            intDateTestMissing.add(0l);\n          } else {\n            intDateTestMissing.add(1l);\n          }\n          intDateTestStart.add(list1);\n          ArrayList<Long> list2 = new ArrayList<Long>();\n          if( l != 0l ){\n            list2.add(l);\n            longDateTestMissing.add(0l);\n          } else {\n            longDateTestMissing.add(1l);\n          }\n          longDateTestStart.add(list2);\n          ArrayList<Float> list3 = new ArrayList<Float>();\n          if ( f != 0.0f ){\n            list3.add(f);\n            floatDateTestMissing.add(0l);\n          } else {\n            floatDateTestMissing.add(1l);\n            \n          }\n          floatDateTestStart.add(list3);\n          ArrayList<Double> list4 = new ArrayList<Double>();\n          if( d != 0.0d ){\n            list4.add(d);\n            doubleDateTestMissing.add(0l);\n          } else {\n            doubleDateTestMissing.add(1l);\n          }\n          doubleDateTestStart.add(list4);\n          ArrayList<Integer> list5 = new ArrayList<Integer>();\n          if( i != 0 ){\n            list5.add(i);\n            multiDateTestMissing.add(0l);\n          } else {\n            multiDateTestMissing.add(1l);\n            \n          }\n          multiDateTestStart.add(list5);\n        } else {\n          if( i != 0 ) intDateTestStart.get(dt-1).add(i); else increment(intDateTestMissing,dt-1);\n          if( l != 0l ) longDateTestStart.get(dt-1).add(l); else increment(longDateTestMissing,dt-1);\n          if( f != 0.0f ) floatDateTestStart.get(dt-1).add(f); else increment(floatDateTestMissing,dt-1);\n          if( d != 0.0d ) doubleDateTestStart.get(dt-1).add(d); else increment(doubleDateTestMissing,dt-1);\n          if( i != 0 ) multiDateTestStart.get(dt-1).add(i); else increment(multiDateTestMissing,dt-1);\n        }\n      }\n      \n      if (j-DATEM<0 && dtm!=dt && dtm!=0) {\n        ArrayList<Integer> list1 = new ArrayList<Integer>();\n        if( i != 0 ){\n          list1.add(i);\n          multiDateTestMissing.add(0l);\n        } else {\n          multiDateTestMissing.add(1l);\n        }\n        multiDateTestStart.add(list1);\n      } else if (dtm!=dt && dtm!=0) {\n        if( i != 0 ) multiDateTestStart.get(dtm-1).add(i);\n      }\n      \n      if( s != 0 ){\n        //Strings\n        if (j-STRING<0) {\n          ArrayList<Integer> list1 = new ArrayList<Integer>();\n          if( i != 0 ){\n            list1.add(i);\n            intStringTestMissing.add(0l);\n          } else {\n            intStringTestMissing.add(1l);\n          }\n          intStringTestStart.add(list1);\n          ArrayList<Long> list2 = new ArrayList<Long>();\n          if( l != 0l ){\n            list2.add(l);\n            longStringTestMissing.add(0l);\n          } else {\n            longStringTestMissing.add(1l);\n          }\n          longStringTestStart.add(list2);\n          ArrayList<Float> list3 = new ArrayList<Float>();\n          if( f != 0.0f ){\n            list3.add(f);\n            floatStringTestMissing.add(0l);\n          } else {\n            floatStringTestMissing.add(1l);\n          }\n          floatStringTestStart.add(list3);\n          ArrayList<Double> list4 = new ArrayList<Double>();\n          if( d != 0.0d ){\n            list4.add(d);\n            doubleStringTestMissing.add(0l);\n          } else {\n            doubleStringTestMissing.add(1l);\n          }\n          doubleStringTestStart.add(list4);\n          ArrayList<Integer> list5 = new ArrayList<Integer>();\n          if( i != 0 ){\n            list5.add(i);\n            multiStringTestMissing.add(0l);\n          } else {\n            multiStringTestMissing.add(1l);\n          }\n          multiStringTestStart.add(list5);\n        } else {\n          if( i != 0 ) intStringTestStart.get(s-1).add(i); else increment(intStringTestMissing,s-1);\n          if( l != 0l ) longStringTestStart.get(s-1).add(l); else increment(longStringTestMissing,s-1);\n          if( f != 0.0f ) floatStringTestStart.get(s-1).add(f); else increment(floatStringTestMissing,s-1);\n          if( d != 0.0d ) doubleStringTestStart.get(s-1).add(d); else increment(doubleStringTestMissing,s-1);\n          if( i != 0 ) multiStringTestStart.get(s-1).add(i); else increment(multiStringTestMissing,s-1);\n        }\n      }\n      \n      //Strings\n      if( sm != 0 ){\n        if (j-STRINGM<0&&sm!=s) {\n          ArrayList<Integer> list1 = new ArrayList<Integer>();\n          if( i != 0 ){\n            list1.add(i);\n            multiStringTestMissing.add(0l);\n          } else {\n            multiStringTestMissing.add(1l);\n          }\n          multiStringTestStart.add(list1);\n        } else if (sm!=s) {\n          if( i != 0 ) multiStringTestStart.get(sm-1).add(i); else increment(multiStringTestMissing,sm-1);\n        }\n      }\n      \n      //Int\n      if( i != 0 ){\n        if (j-INT<0) {\n          ArrayList<String> list1 = new ArrayList<String>();\n          if( dt != 0 ){\n            list1.add((1800+dt) + \"-12-31T23:59:59Z\");\n            dateIntTestMissing.add(0l);\n          } else {\n            dateIntTestMissing.add(1l);\n          }\n          dateIntTestStart.add(list1);\n          ArrayList<String> list2 = new ArrayList<String>();\n          if( s != 0 ){\n            list2.add(\"str\"+s);\n            stringIntTestMissing.add(0l);\n          } else {\n            stringIntTestMissing.add(1l);\n          }\n          stringIntTestStart.add(list2);\n        } else {\n          if( dt != 0 ) dateIntTestStart.get(i-1).add((1800+dt) + \"-12-31T23:59:59Z\"); else increment(dateIntTestMissing,i-1);\n          if( s != 0 ) stringIntTestStart.get(i-1).add(\"str\"+s); else increment(stringIntTestMissing,i-1);\n        }\n      }\n      \n      //Long\n      if( l != 0 ){\n        if (j-LONG<0) {\n          ArrayList<String> list1 = new ArrayList<String>();\n          if( dt != 0 ){\n            list1.add((1800+dt) + \"-12-31T23:59:59Z\");\n            dateLongTestMissing.add(0l);\n          } else {\n            dateLongTestMissing.add(1l);\n          }\n          dateLongTestStart.add(list1);\n          ArrayList<String> list2 = new ArrayList<String>();\n          if( s != 0 ){\n            list2.add(\"str\"+s);\n            stringLongTestMissing.add(0l);\n          } else {\n            stringLongTestMissing.add(1l);\n          }\n          stringLongTestStart.add(list2);\n          ArrayList<Integer> list3 = new ArrayList<Integer>();\n          if( i != 0 ){\n            list3.add(i);\n            multiLongTestMissing.add(0l);\n          } else {\n            multiLongTestMissing.add(1l);\n          }\n          multiLongTestStart.add(list3);\n        } else {\n          if( dt != 0 ) dateLongTestStart.get((int)l-1).add((1800+dt) + \"-12-31T23:59:59Z\"); else increment(dateLongTestMissing,(int)l-1);\n          if( s != 0 ) stringLongTestStart.get((int)l-1).add(\"str\"+s); else increment(stringLongTestMissing,(int)l-1);\n          if( i != 0 ) multiLongTestStart.get((int)l-1).add(i); else increment(multiLongTestMissing,(int)l-1);\n        }\n      }\n      \n      //Long\n      if( lm != 0 ){\n        if (j-LONGM<0&&lm!=l) {\n          ArrayList<Integer> list1 = new ArrayList<Integer>();\n          if( i != 0 ){\n            list1.add(i);\n            multiLongTestMissing.add(0l);\n          } else {\n            multiLongTestMissing.add(1l);\n          }\n          multiLongTestStart.add(list1);\n        } else if (lm!=l) {\n          if( i != 0 ) multiLongTestStart.get((int)lm-1).add(i); else increment( multiLongTestMissing,(int)lm-1);\n        }\n      }\n      \n      if (usually()) {\n        commit(); // to have several segments\n      }\n    }\n    \n    assertU(commit()); \n    setResponse(h.query(request(fileToStringArr(fileName))));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a475a1c165e02515bff766b3b7be0c42edf1870c","date":1393099333,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/analytics/facet/FieldFacetTest#beforeClass().mjava","pathOld":"solr/core/src/test/org/apache/solr/analytics/facet/FieldFacetTest#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    initCore(\"solrconfig-basic.xml\",\"schema-analytics.xml\");\n    h.update(\"<delete><query>*:*</query></delete>\");\n    \n    defaults.put(\"int\", new Integer(0));\n    defaults.put(\"long\", new Long(0));\n    defaults.put(\"float\", new Float(0));\n    defaults.put(\"double\", new Double(0));\n    defaults.put(\"date\", \"1800-12-31T23:59:59Z\");\n    defaults.put(\"string\", \"str0\");\n\n    //INT\n    intDateTestStart = new ArrayList<ArrayList<Integer>>(); \n    intDateTestMissing = new ArrayList<Long>(); \n    intStringTestStart = new ArrayList<ArrayList<Integer>>(); \n    intStringTestMissing = new ArrayList<Long>(); \n    \n    //LONG\n    longDateTestStart = new ArrayList<ArrayList<Long>>(); \n    longDateTestMissing = new ArrayList<Long>(); \n    longStringTestStart = new ArrayList<ArrayList<Long>>(); \n    longStringTestMissing = new ArrayList<Long>(); \n    \n    //FLOAT\n    floatDateTestStart = new ArrayList<ArrayList<Float>>(); \n    floatDateTestMissing = new ArrayList<Long>(); \n    floatStringTestStart = new ArrayList<ArrayList<Float>>(); \n    floatStringTestMissing = new ArrayList<Long>(); \n    \n    //DOUBLE\n    doubleDateTestStart = new ArrayList<ArrayList<Double>>(); \n    doubleDateTestMissing = new ArrayList<Long>(); \n    doubleStringTestStart = new ArrayList<ArrayList<Double>>(); \n    doubleStringTestMissing = new ArrayList<Long>(); \n    \n    //DATE\n    dateIntTestStart = new ArrayList<ArrayList<String>>(); \n    dateIntTestMissing = new ArrayList<Long>(); \n    dateLongTestStart = new ArrayList<ArrayList<String>>(); \n    dateLongTestMissing = new ArrayList<Long>(); \n    \n    //String\n    stringIntTestStart = new ArrayList<ArrayList<String>>(); \n    stringIntTestMissing = new ArrayList<Long>(); \n    stringLongTestStart = new ArrayList<ArrayList<String>>(); \n    stringLongTestMissing = new ArrayList<Long>(); \n    \n    //Multi-Valued\n    multiLongTestStart = new ArrayList<ArrayList<Integer>>(); \n    multiLongTestMissing = new ArrayList<Long>(); \n    multiStringTestStart = new ArrayList<ArrayList<Integer>>(); \n    multiStringTestMissing = new ArrayList<Long>(); \n    multiDateTestStart = new ArrayList<ArrayList<Integer>>(); \n    multiDateTestMissing = new ArrayList<Long>(); \n\n    for (int j = 0; j < NUM_LOOPS; ++j) {\n      int i = j%INT;\n      long l = j%LONG;\n      long lm = j%LONGM;\n      float f = j%FLOAT;\n      double d = j%DOUBLE;\n      int dt = j%DATE;\n      int dtm = j%DATEM;\n      int s = j%STRING;\n      int sm = j%STRINGM;\n      if (dt==0 && dtm == 0) {\n        assertU(adoc(filter(\"id\", \"1000\" + j, \"int_id\", \"\" + i, \"long_ld\", \"\" + l, \"float_fd\", \"\" + f, \n          \"double_dd\", \"\" + d,  \"date_dtd\", (1800+dt) + \"-12-31T23:59:59Z\", \"string_sd\", \"str\" + s,\n          \"long_ldm\", \"\" + l, \"long_ldm\", \"\"+lm, \"string_sdm\", \"str\" + s, \"string_sdm\", \"str\"+sm)));\n      } else if (dt == 0) {\n        assertU(adoc(filter(\"id\", \"1000\" + j, \"int_id\", \"\" + i, \"long_ld\", \"\" + l, \"float_fd\", \"\" + f, \n            \"double_dd\", \"\" + d,  \"date_dtd\", (1800+dt) + \"-12-31T23:59:59Z\", \"string_sd\", \"str\" + s,\n            \"long_ldm\", \"\" + l, \"long_ldm\", \"\"+lm, \"string_sdm\", \"str\" + s, \"string_sdm\", \"str\"+sm,\n            \"date_dtdm\", (1800+dtm) + \"-12-31T23:59:59Z\")));\n      } else if (dtm == 0) {\n        assertU(adoc(filter(\"id\", \"1000\" + j, \"int_id\", \"\" + i, \"long_ld\", \"\" + l, \"float_fd\", \"\" + f, \n            \"double_dd\", \"\" + d,  \"date_dtd\", (1800+dt) + \"-12-31T23:59:59Z\", \"string_sd\", \"str\" + s,\n            \"long_ldm\", \"\" + l, \"long_ldm\", \"\"+lm, \"string_sdm\", \"str\" + s, \"string_sdm\", \"str\"+sm,\n            \"date_dtdm\", (1800+dt) + \"-12-31T23:59:59Z\")));\n      } else {\n        assertU(adoc(filter(\"id\", \"1000\" + j, \"int_id\", \"\" + i, \"long_ld\", \"\" + l, \"float_fd\", \"\" + f, \n            \"double_dd\", \"\" + d,  \"date_dtd\", (1800+dt) + \"-12-31T23:59:59Z\", \"string_sd\", \"str\" + s,\n            \"long_ldm\", \"\" + l, \"long_ldm\", \"\"+lm, \"string_sdm\", \"str\" + s, \"string_sdm\", \"str\"+sm,\n            \"date_dtdm\", (1800+dt) + \"-12-31T23:59:59Z\", \"date_dtdm\", (1800+dtm) + \"-12-31T23:59:59Z\")));\n      }\n      \n      if( dt != 0 ){\n        //Dates\n        if (j-DATE<0) {\n          ArrayList<Integer> list1 = new ArrayList<Integer>();\n          if( i != 0 ){\n            list1.add(i);\n            intDateTestMissing.add(0l);\n          } else {\n            intDateTestMissing.add(1l);\n          }\n          intDateTestStart.add(list1);\n          ArrayList<Long> list2 = new ArrayList<Long>();\n          if( l != 0l ){\n            list2.add(l);\n            longDateTestMissing.add(0l);\n          } else {\n            longDateTestMissing.add(1l);\n          }\n          longDateTestStart.add(list2);\n          ArrayList<Float> list3 = new ArrayList<Float>();\n          if ( f != 0.0f ){\n            list3.add(f);\n            floatDateTestMissing.add(0l);\n          } else {\n            floatDateTestMissing.add(1l);\n            \n          }\n          floatDateTestStart.add(list3);\n          ArrayList<Double> list4 = new ArrayList<Double>();\n          if( d != 0.0d ){\n            list4.add(d);\n            doubleDateTestMissing.add(0l);\n          } else {\n            doubleDateTestMissing.add(1l);\n          }\n          doubleDateTestStart.add(list4);\n          ArrayList<Integer> list5 = new ArrayList<Integer>();\n          if( i != 0 ){\n            list5.add(i);\n            multiDateTestMissing.add(0l);\n          } else {\n            multiDateTestMissing.add(1l);\n            \n          }\n          multiDateTestStart.add(list5);\n        } else {\n          if( i != 0 ) intDateTestStart.get(dt-1).add(i); else increment(intDateTestMissing,dt-1);\n          if( l != 0l ) longDateTestStart.get(dt-1).add(l); else increment(longDateTestMissing,dt-1);\n          if( f != 0.0f ) floatDateTestStart.get(dt-1).add(f); else increment(floatDateTestMissing,dt-1);\n          if( d != 0.0d ) doubleDateTestStart.get(dt-1).add(d); else increment(doubleDateTestMissing,dt-1);\n          if( i != 0 ) multiDateTestStart.get(dt-1).add(i); else increment(multiDateTestMissing,dt-1);\n        }\n      }\n      \n      if (j-DATEM<0 && dtm!=dt && dtm!=0) {\n        ArrayList<Integer> list1 = new ArrayList<Integer>();\n        if( i != 0 ){\n          list1.add(i);\n          multiDateTestMissing.add(0l);\n        } else {\n          multiDateTestMissing.add(1l);\n        }\n        multiDateTestStart.add(list1);\n      } else if (dtm!=dt && dtm!=0) {\n        if( i != 0 ) multiDateTestStart.get(dtm-1).add(i);\n      }\n      \n      if( s != 0 ){\n        //Strings\n        if (j-STRING<0) {\n          ArrayList<Integer> list1 = new ArrayList<Integer>();\n          if( i != 0 ){\n            list1.add(i);\n            intStringTestMissing.add(0l);\n          } else {\n            intStringTestMissing.add(1l);\n          }\n          intStringTestStart.add(list1);\n          ArrayList<Long> list2 = new ArrayList<Long>();\n          if( l != 0l ){\n            list2.add(l);\n            longStringTestMissing.add(0l);\n          } else {\n            longStringTestMissing.add(1l);\n          }\n          longStringTestStart.add(list2);\n          ArrayList<Float> list3 = new ArrayList<Float>();\n          if( f != 0.0f ){\n            list3.add(f);\n            floatStringTestMissing.add(0l);\n          } else {\n            floatStringTestMissing.add(1l);\n          }\n          floatStringTestStart.add(list3);\n          ArrayList<Double> list4 = new ArrayList<Double>();\n          if( d != 0.0d ){\n            list4.add(d);\n            doubleStringTestMissing.add(0l);\n          } else {\n            doubleStringTestMissing.add(1l);\n          }\n          doubleStringTestStart.add(list4);\n          ArrayList<Integer> list5 = new ArrayList<Integer>();\n          if( i != 0 ){\n            list5.add(i);\n            multiStringTestMissing.add(0l);\n          } else {\n            multiStringTestMissing.add(1l);\n          }\n          multiStringTestStart.add(list5);\n        } else {\n          if( i != 0 ) intStringTestStart.get(s-1).add(i); else increment(intStringTestMissing,s-1);\n          if( l != 0l ) longStringTestStart.get(s-1).add(l); else increment(longStringTestMissing,s-1);\n          if( f != 0.0f ) floatStringTestStart.get(s-1).add(f); else increment(floatStringTestMissing,s-1);\n          if( d != 0.0d ) doubleStringTestStart.get(s-1).add(d); else increment(doubleStringTestMissing,s-1);\n          if( i != 0 ) multiStringTestStart.get(s-1).add(i); else increment(multiStringTestMissing,s-1);\n        }\n      }\n      \n      //Strings\n      if( sm != 0 ){\n        if (j-STRINGM<0&&sm!=s) {\n          ArrayList<Integer> list1 = new ArrayList<Integer>();\n          if( i != 0 ){\n            list1.add(i);\n            multiStringTestMissing.add(0l);\n          } else {\n            multiStringTestMissing.add(1l);\n          }\n          multiStringTestStart.add(list1);\n        } else if (sm!=s) {\n          if( i != 0 ) multiStringTestStart.get(sm-1).add(i); else increment(multiStringTestMissing,sm-1);\n        }\n      }\n      \n      //Int\n      if( i != 0 ){\n        if (j-INT<0) {\n          ArrayList<String> list1 = new ArrayList<String>();\n          if( dt != 0 ){\n            list1.add((1800+dt) + \"-12-31T23:59:59Z\");\n            dateIntTestMissing.add(0l);\n          } else {\n            dateIntTestMissing.add(1l);\n          }\n          dateIntTestStart.add(list1);\n          ArrayList<String> list2 = new ArrayList<String>();\n          if( s != 0 ){\n            list2.add(\"str\"+s);\n            stringIntTestMissing.add(0l);\n          } else {\n            stringIntTestMissing.add(1l);\n          }\n          stringIntTestStart.add(list2);\n        } else {\n          if( dt != 0 ) dateIntTestStart.get(i-1).add((1800+dt) + \"-12-31T23:59:59Z\"); else increment(dateIntTestMissing,i-1);\n          if( s != 0 ) stringIntTestStart.get(i-1).add(\"str\"+s); else increment(stringIntTestMissing,i-1);\n        }\n      }\n      \n      //Long\n      if( l != 0 ){\n        if (j-LONG<0) {\n          ArrayList<String> list1 = new ArrayList<String>();\n          if( dt != 0 ){\n            list1.add((1800+dt) + \"-12-31T23:59:59Z\");\n            dateLongTestMissing.add(0l);\n          } else {\n            dateLongTestMissing.add(1l);\n          }\n          dateLongTestStart.add(list1);\n          ArrayList<String> list2 = new ArrayList<String>();\n          if( s != 0 ){\n            list2.add(\"str\"+s);\n            stringLongTestMissing.add(0l);\n          } else {\n            stringLongTestMissing.add(1l);\n          }\n          stringLongTestStart.add(list2);\n          ArrayList<Integer> list3 = new ArrayList<Integer>();\n          if( i != 0 ){\n            list3.add(i);\n            multiLongTestMissing.add(0l);\n          } else {\n            multiLongTestMissing.add(1l);\n          }\n          multiLongTestStart.add(list3);\n        } else {\n          if( dt != 0 ) dateLongTestStart.get((int)l-1).add((1800+dt) + \"-12-31T23:59:59Z\"); else increment(dateLongTestMissing,(int)l-1);\n          if( s != 0 ) stringLongTestStart.get((int)l-1).add(\"str\"+s); else increment(stringLongTestMissing,(int)l-1);\n          if( i != 0 ) multiLongTestStart.get((int)l-1).add(i); else increment(multiLongTestMissing,(int)l-1);\n        }\n      }\n      \n      //Long\n      if( lm != 0 ){\n        if (j-LONGM<0&&lm!=l) {\n          ArrayList<Integer> list1 = new ArrayList<Integer>();\n          if( i != 0 ){\n            list1.add(i);\n            multiLongTestMissing.add(0l);\n          } else {\n            multiLongTestMissing.add(1l);\n          }\n          multiLongTestStart.add(list1);\n        } else if (lm!=l) {\n          if( i != 0 ) multiLongTestStart.get((int)lm-1).add(i); else increment( multiLongTestMissing,(int)lm-1);\n        }\n      }\n      \n      if (usually()) {\n        assertU(commit()); // to have several segments\n      }\n    }\n    \n    assertU(commit()); \n    setResponse(h.query(request(fileToStringArr(FieldFacetTest.class, fileName))));\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    initCore(\"solrconfig-basic.xml\",\"schema-analytics.xml\");\n    h.update(\"<delete><query>*:*</query></delete>\");\n    \n    defaults.put(\"int\", new Integer(0));\n    defaults.put(\"long\", new Long(0));\n    defaults.put(\"float\", new Float(0));\n    defaults.put(\"double\", new Double(0));\n    defaults.put(\"date\", \"1800-12-31T23:59:59Z\");\n    defaults.put(\"string\", \"str0\");\n\n    //INT\n    intDateTestStart = new ArrayList<ArrayList<Integer>>(); \n    intDateTestMissing = new ArrayList<Long>(); \n    intStringTestStart = new ArrayList<ArrayList<Integer>>(); \n    intStringTestMissing = new ArrayList<Long>(); \n    \n    //LONG\n    longDateTestStart = new ArrayList<ArrayList<Long>>(); \n    longDateTestMissing = new ArrayList<Long>(); \n    longStringTestStart = new ArrayList<ArrayList<Long>>(); \n    longStringTestMissing = new ArrayList<Long>(); \n    \n    //FLOAT\n    floatDateTestStart = new ArrayList<ArrayList<Float>>(); \n    floatDateTestMissing = new ArrayList<Long>(); \n    floatStringTestStart = new ArrayList<ArrayList<Float>>(); \n    floatStringTestMissing = new ArrayList<Long>(); \n    \n    //DOUBLE\n    doubleDateTestStart = new ArrayList<ArrayList<Double>>(); \n    doubleDateTestMissing = new ArrayList<Long>(); \n    doubleStringTestStart = new ArrayList<ArrayList<Double>>(); \n    doubleStringTestMissing = new ArrayList<Long>(); \n    \n    //DATE\n    dateIntTestStart = new ArrayList<ArrayList<String>>(); \n    dateIntTestMissing = new ArrayList<Long>(); \n    dateLongTestStart = new ArrayList<ArrayList<String>>(); \n    dateLongTestMissing = new ArrayList<Long>(); \n    \n    //String\n    stringIntTestStart = new ArrayList<ArrayList<String>>(); \n    stringIntTestMissing = new ArrayList<Long>(); \n    stringLongTestStart = new ArrayList<ArrayList<String>>(); \n    stringLongTestMissing = new ArrayList<Long>(); \n    \n    //Multi-Valued\n    multiLongTestStart = new ArrayList<ArrayList<Integer>>(); \n    multiLongTestMissing = new ArrayList<Long>(); \n    multiStringTestStart = new ArrayList<ArrayList<Integer>>(); \n    multiStringTestMissing = new ArrayList<Long>(); \n    multiDateTestStart = new ArrayList<ArrayList<Integer>>(); \n    multiDateTestMissing = new ArrayList<Long>(); \n\n    for (int j = 0; j < NUM_LOOPS; ++j) {\n      int i = j%INT;\n      long l = j%LONG;\n      long lm = j%LONGM;\n      float f = j%FLOAT;\n      double d = j%DOUBLE;\n      int dt = j%DATE;\n      int dtm = j%DATEM;\n      int s = j%STRING;\n      int sm = j%STRINGM;\n      if (dt==0 && dtm == 0) {\n        assertU(adoc(filter(\"id\", \"1000\" + j, \"int_id\", \"\" + i, \"long_ld\", \"\" + l, \"float_fd\", \"\" + f, \n          \"double_dd\", \"\" + d,  \"date_dtd\", (1800+dt) + \"-12-31T23:59:59Z\", \"string_sd\", \"str\" + s,\n          \"long_ldm\", \"\" + l, \"long_ldm\", \"\"+lm, \"string_sdm\", \"str\" + s, \"string_sdm\", \"str\"+sm)));\n      } else if (dt == 0) {\n        assertU(adoc(filter(\"id\", \"1000\" + j, \"int_id\", \"\" + i, \"long_ld\", \"\" + l, \"float_fd\", \"\" + f, \n            \"double_dd\", \"\" + d,  \"date_dtd\", (1800+dt) + \"-12-31T23:59:59Z\", \"string_sd\", \"str\" + s,\n            \"long_ldm\", \"\" + l, \"long_ldm\", \"\"+lm, \"string_sdm\", \"str\" + s, \"string_sdm\", \"str\"+sm,\n            \"date_dtdm\", (1800+dtm) + \"-12-31T23:59:59Z\")));\n      } else if (dtm == 0) {\n        assertU(adoc(filter(\"id\", \"1000\" + j, \"int_id\", \"\" + i, \"long_ld\", \"\" + l, \"float_fd\", \"\" + f, \n            \"double_dd\", \"\" + d,  \"date_dtd\", (1800+dt) + \"-12-31T23:59:59Z\", \"string_sd\", \"str\" + s,\n            \"long_ldm\", \"\" + l, \"long_ldm\", \"\"+lm, \"string_sdm\", \"str\" + s, \"string_sdm\", \"str\"+sm,\n            \"date_dtdm\", (1800+dt) + \"-12-31T23:59:59Z\")));\n      } else {\n        assertU(adoc(filter(\"id\", \"1000\" + j, \"int_id\", \"\" + i, \"long_ld\", \"\" + l, \"float_fd\", \"\" + f, \n            \"double_dd\", \"\" + d,  \"date_dtd\", (1800+dt) + \"-12-31T23:59:59Z\", \"string_sd\", \"str\" + s,\n            \"long_ldm\", \"\" + l, \"long_ldm\", \"\"+lm, \"string_sdm\", \"str\" + s, \"string_sdm\", \"str\"+sm,\n            \"date_dtdm\", (1800+dt) + \"-12-31T23:59:59Z\", \"date_dtdm\", (1800+dtm) + \"-12-31T23:59:59Z\")));\n      }\n      \n      if( dt != 0 ){\n        //Dates\n        if (j-DATE<0) {\n          ArrayList<Integer> list1 = new ArrayList<Integer>();\n          if( i != 0 ){\n            list1.add(i);\n            intDateTestMissing.add(0l);\n          } else {\n            intDateTestMissing.add(1l);\n          }\n          intDateTestStart.add(list1);\n          ArrayList<Long> list2 = new ArrayList<Long>();\n          if( l != 0l ){\n            list2.add(l);\n            longDateTestMissing.add(0l);\n          } else {\n            longDateTestMissing.add(1l);\n          }\n          longDateTestStart.add(list2);\n          ArrayList<Float> list3 = new ArrayList<Float>();\n          if ( f != 0.0f ){\n            list3.add(f);\n            floatDateTestMissing.add(0l);\n          } else {\n            floatDateTestMissing.add(1l);\n            \n          }\n          floatDateTestStart.add(list3);\n          ArrayList<Double> list4 = new ArrayList<Double>();\n          if( d != 0.0d ){\n            list4.add(d);\n            doubleDateTestMissing.add(0l);\n          } else {\n            doubleDateTestMissing.add(1l);\n          }\n          doubleDateTestStart.add(list4);\n          ArrayList<Integer> list5 = new ArrayList<Integer>();\n          if( i != 0 ){\n            list5.add(i);\n            multiDateTestMissing.add(0l);\n          } else {\n            multiDateTestMissing.add(1l);\n            \n          }\n          multiDateTestStart.add(list5);\n        } else {\n          if( i != 0 ) intDateTestStart.get(dt-1).add(i); else increment(intDateTestMissing,dt-1);\n          if( l != 0l ) longDateTestStart.get(dt-1).add(l); else increment(longDateTestMissing,dt-1);\n          if( f != 0.0f ) floatDateTestStart.get(dt-1).add(f); else increment(floatDateTestMissing,dt-1);\n          if( d != 0.0d ) doubleDateTestStart.get(dt-1).add(d); else increment(doubleDateTestMissing,dt-1);\n          if( i != 0 ) multiDateTestStart.get(dt-1).add(i); else increment(multiDateTestMissing,dt-1);\n        }\n      }\n      \n      if (j-DATEM<0 && dtm!=dt && dtm!=0) {\n        ArrayList<Integer> list1 = new ArrayList<Integer>();\n        if( i != 0 ){\n          list1.add(i);\n          multiDateTestMissing.add(0l);\n        } else {\n          multiDateTestMissing.add(1l);\n        }\n        multiDateTestStart.add(list1);\n      } else if (dtm!=dt && dtm!=0) {\n        if( i != 0 ) multiDateTestStart.get(dtm-1).add(i);\n      }\n      \n      if( s != 0 ){\n        //Strings\n        if (j-STRING<0) {\n          ArrayList<Integer> list1 = new ArrayList<Integer>();\n          if( i != 0 ){\n            list1.add(i);\n            intStringTestMissing.add(0l);\n          } else {\n            intStringTestMissing.add(1l);\n          }\n          intStringTestStart.add(list1);\n          ArrayList<Long> list2 = new ArrayList<Long>();\n          if( l != 0l ){\n            list2.add(l);\n            longStringTestMissing.add(0l);\n          } else {\n            longStringTestMissing.add(1l);\n          }\n          longStringTestStart.add(list2);\n          ArrayList<Float> list3 = new ArrayList<Float>();\n          if( f != 0.0f ){\n            list3.add(f);\n            floatStringTestMissing.add(0l);\n          } else {\n            floatStringTestMissing.add(1l);\n          }\n          floatStringTestStart.add(list3);\n          ArrayList<Double> list4 = new ArrayList<Double>();\n          if( d != 0.0d ){\n            list4.add(d);\n            doubleStringTestMissing.add(0l);\n          } else {\n            doubleStringTestMissing.add(1l);\n          }\n          doubleStringTestStart.add(list4);\n          ArrayList<Integer> list5 = new ArrayList<Integer>();\n          if( i != 0 ){\n            list5.add(i);\n            multiStringTestMissing.add(0l);\n          } else {\n            multiStringTestMissing.add(1l);\n          }\n          multiStringTestStart.add(list5);\n        } else {\n          if( i != 0 ) intStringTestStart.get(s-1).add(i); else increment(intStringTestMissing,s-1);\n          if( l != 0l ) longStringTestStart.get(s-1).add(l); else increment(longStringTestMissing,s-1);\n          if( f != 0.0f ) floatStringTestStart.get(s-1).add(f); else increment(floatStringTestMissing,s-1);\n          if( d != 0.0d ) doubleStringTestStart.get(s-1).add(d); else increment(doubleStringTestMissing,s-1);\n          if( i != 0 ) multiStringTestStart.get(s-1).add(i); else increment(multiStringTestMissing,s-1);\n        }\n      }\n      \n      //Strings\n      if( sm != 0 ){\n        if (j-STRINGM<0&&sm!=s) {\n          ArrayList<Integer> list1 = new ArrayList<Integer>();\n          if( i != 0 ){\n            list1.add(i);\n            multiStringTestMissing.add(0l);\n          } else {\n            multiStringTestMissing.add(1l);\n          }\n          multiStringTestStart.add(list1);\n        } else if (sm!=s) {\n          if( i != 0 ) multiStringTestStart.get(sm-1).add(i); else increment(multiStringTestMissing,sm-1);\n        }\n      }\n      \n      //Int\n      if( i != 0 ){\n        if (j-INT<0) {\n          ArrayList<String> list1 = new ArrayList<String>();\n          if( dt != 0 ){\n            list1.add((1800+dt) + \"-12-31T23:59:59Z\");\n            dateIntTestMissing.add(0l);\n          } else {\n            dateIntTestMissing.add(1l);\n          }\n          dateIntTestStart.add(list1);\n          ArrayList<String> list2 = new ArrayList<String>();\n          if( s != 0 ){\n            list2.add(\"str\"+s);\n            stringIntTestMissing.add(0l);\n          } else {\n            stringIntTestMissing.add(1l);\n          }\n          stringIntTestStart.add(list2);\n        } else {\n          if( dt != 0 ) dateIntTestStart.get(i-1).add((1800+dt) + \"-12-31T23:59:59Z\"); else increment(dateIntTestMissing,i-1);\n          if( s != 0 ) stringIntTestStart.get(i-1).add(\"str\"+s); else increment(stringIntTestMissing,i-1);\n        }\n      }\n      \n      //Long\n      if( l != 0 ){\n        if (j-LONG<0) {\n          ArrayList<String> list1 = new ArrayList<String>();\n          if( dt != 0 ){\n            list1.add((1800+dt) + \"-12-31T23:59:59Z\");\n            dateLongTestMissing.add(0l);\n          } else {\n            dateLongTestMissing.add(1l);\n          }\n          dateLongTestStart.add(list1);\n          ArrayList<String> list2 = new ArrayList<String>();\n          if( s != 0 ){\n            list2.add(\"str\"+s);\n            stringLongTestMissing.add(0l);\n          } else {\n            stringLongTestMissing.add(1l);\n          }\n          stringLongTestStart.add(list2);\n          ArrayList<Integer> list3 = new ArrayList<Integer>();\n          if( i != 0 ){\n            list3.add(i);\n            multiLongTestMissing.add(0l);\n          } else {\n            multiLongTestMissing.add(1l);\n          }\n          multiLongTestStart.add(list3);\n        } else {\n          if( dt != 0 ) dateLongTestStart.get((int)l-1).add((1800+dt) + \"-12-31T23:59:59Z\"); else increment(dateLongTestMissing,(int)l-1);\n          if( s != 0 ) stringLongTestStart.get((int)l-1).add(\"str\"+s); else increment(stringLongTestMissing,(int)l-1);\n          if( i != 0 ) multiLongTestStart.get((int)l-1).add(i); else increment(multiLongTestMissing,(int)l-1);\n        }\n      }\n      \n      //Long\n      if( lm != 0 ){\n        if (j-LONGM<0&&lm!=l) {\n          ArrayList<Integer> list1 = new ArrayList<Integer>();\n          if( i != 0 ){\n            list1.add(i);\n            multiLongTestMissing.add(0l);\n          } else {\n            multiLongTestMissing.add(1l);\n          }\n          multiLongTestStart.add(list1);\n        } else if (lm!=l) {\n          if( i != 0 ) multiLongTestStart.get((int)lm-1).add(i); else increment( multiLongTestMissing,(int)lm-1);\n        }\n      }\n      \n      if (usually()) {\n        assertU(commit()); // to have several segments\n      }\n    }\n    \n    assertU(commit()); \n    setResponse(h.query(request(fileToStringArr(fileName))));\n  }\n\n","bugFix":null,"bugIntro":["645e9dc687d04dbe961b35c0f3a305c48e892615"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"634f330c54fd3f9f491d52036dc3f40b4f4d8934","date":1394635157,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/analytics/facet/FieldFacetTest#beforeClass().mjava","pathOld":"solr/core/src/test/org/apache/solr/analytics/facet/FieldFacetTest#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    initCore(\"solrconfig-basic.xml\",\"schema-analytics.xml\");\n    h.update(\"<delete><query>*:*</query></delete>\");\n    \n    defaults.put(\"int\", new Integer(0));\n    defaults.put(\"long\", new Long(0));\n    defaults.put(\"float\", new Float(0));\n    defaults.put(\"double\", new Double(0));\n    defaults.put(\"date\", \"1800-12-31T23:59:59Z\");\n    defaults.put(\"string\", \"str0\");\n\n    //INT\n    intDateTestStart = new ArrayList<>();\n    intDateTestMissing = new ArrayList<>();\n    intStringTestStart = new ArrayList<>();\n    intStringTestMissing = new ArrayList<>();\n    \n    //LONG\n    longDateTestStart = new ArrayList<>();\n    longDateTestMissing = new ArrayList<>();\n    longStringTestStart = new ArrayList<>();\n    longStringTestMissing = new ArrayList<>();\n    \n    //FLOAT\n    floatDateTestStart = new ArrayList<>();\n    floatDateTestMissing = new ArrayList<>();\n    floatStringTestStart = new ArrayList<>();\n    floatStringTestMissing = new ArrayList<>();\n    \n    //DOUBLE\n    doubleDateTestStart = new ArrayList<>();\n    doubleDateTestMissing = new ArrayList<>();\n    doubleStringTestStart = new ArrayList<>();\n    doubleStringTestMissing = new ArrayList<>();\n    \n    //DATE\n    dateIntTestStart = new ArrayList<>();\n    dateIntTestMissing = new ArrayList<>();\n    dateLongTestStart = new ArrayList<>();\n    dateLongTestMissing = new ArrayList<>();\n    \n    //String\n    stringIntTestStart = new ArrayList<>();\n    stringIntTestMissing = new ArrayList<>();\n    stringLongTestStart = new ArrayList<>();\n    stringLongTestMissing = new ArrayList<>();\n    \n    //Multi-Valued\n    multiLongTestStart = new ArrayList<>();\n    multiLongTestMissing = new ArrayList<>();\n    multiStringTestStart = new ArrayList<>();\n    multiStringTestMissing = new ArrayList<>();\n    multiDateTestStart = new ArrayList<>();\n    multiDateTestMissing = new ArrayList<>();\n\n    for (int j = 0; j < NUM_LOOPS; ++j) {\n      int i = j%INT;\n      long l = j%LONG;\n      long lm = j%LONGM;\n      float f = j%FLOAT;\n      double d = j%DOUBLE;\n      int dt = j%DATE;\n      int dtm = j%DATEM;\n      int s = j%STRING;\n      int sm = j%STRINGM;\n      if (dt==0 && dtm == 0) {\n        assertU(adoc(filter(\"id\", \"1000\" + j, \"int_id\", \"\" + i, \"long_ld\", \"\" + l, \"float_fd\", \"\" + f, \n          \"double_dd\", \"\" + d,  \"date_dtd\", (1800+dt) + \"-12-31T23:59:59Z\", \"string_sd\", \"str\" + s,\n          \"long_ldm\", \"\" + l, \"long_ldm\", \"\"+lm, \"string_sdm\", \"str\" + s, \"string_sdm\", \"str\"+sm)));\n      } else if (dt == 0) {\n        assertU(adoc(filter(\"id\", \"1000\" + j, \"int_id\", \"\" + i, \"long_ld\", \"\" + l, \"float_fd\", \"\" + f, \n            \"double_dd\", \"\" + d,  \"date_dtd\", (1800+dt) + \"-12-31T23:59:59Z\", \"string_sd\", \"str\" + s,\n            \"long_ldm\", \"\" + l, \"long_ldm\", \"\"+lm, \"string_sdm\", \"str\" + s, \"string_sdm\", \"str\"+sm,\n            \"date_dtdm\", (1800+dtm) + \"-12-31T23:59:59Z\")));\n      } else if (dtm == 0) {\n        assertU(adoc(filter(\"id\", \"1000\" + j, \"int_id\", \"\" + i, \"long_ld\", \"\" + l, \"float_fd\", \"\" + f, \n            \"double_dd\", \"\" + d,  \"date_dtd\", (1800+dt) + \"-12-31T23:59:59Z\", \"string_sd\", \"str\" + s,\n            \"long_ldm\", \"\" + l, \"long_ldm\", \"\"+lm, \"string_sdm\", \"str\" + s, \"string_sdm\", \"str\"+sm,\n            \"date_dtdm\", (1800+dt) + \"-12-31T23:59:59Z\")));\n      } else {\n        assertU(adoc(filter(\"id\", \"1000\" + j, \"int_id\", \"\" + i, \"long_ld\", \"\" + l, \"float_fd\", \"\" + f, \n            \"double_dd\", \"\" + d,  \"date_dtd\", (1800+dt) + \"-12-31T23:59:59Z\", \"string_sd\", \"str\" + s,\n            \"long_ldm\", \"\" + l, \"long_ldm\", \"\"+lm, \"string_sdm\", \"str\" + s, \"string_sdm\", \"str\"+sm,\n            \"date_dtdm\", (1800+dt) + \"-12-31T23:59:59Z\", \"date_dtdm\", (1800+dtm) + \"-12-31T23:59:59Z\")));\n      }\n      \n      if( dt != 0 ){\n        //Dates\n        if (j-DATE<0) {\n          ArrayList<Integer> list1 = new ArrayList<>();\n          if( i != 0 ){\n            list1.add(i);\n            intDateTestMissing.add(0l);\n          } else {\n            intDateTestMissing.add(1l);\n          }\n          intDateTestStart.add(list1);\n          ArrayList<Long> list2 = new ArrayList<>();\n          if( l != 0l ){\n            list2.add(l);\n            longDateTestMissing.add(0l);\n          } else {\n            longDateTestMissing.add(1l);\n          }\n          longDateTestStart.add(list2);\n          ArrayList<Float> list3 = new ArrayList<>();\n          if ( f != 0.0f ){\n            list3.add(f);\n            floatDateTestMissing.add(0l);\n          } else {\n            floatDateTestMissing.add(1l);\n            \n          }\n          floatDateTestStart.add(list3);\n          ArrayList<Double> list4 = new ArrayList<>();\n          if( d != 0.0d ){\n            list4.add(d);\n            doubleDateTestMissing.add(0l);\n          } else {\n            doubleDateTestMissing.add(1l);\n          }\n          doubleDateTestStart.add(list4);\n          ArrayList<Integer> list5 = new ArrayList<>();\n          if( i != 0 ){\n            list5.add(i);\n            multiDateTestMissing.add(0l);\n          } else {\n            multiDateTestMissing.add(1l);\n            \n          }\n          multiDateTestStart.add(list5);\n        } else {\n          if( i != 0 ) intDateTestStart.get(dt-1).add(i); else increment(intDateTestMissing,dt-1);\n          if( l != 0l ) longDateTestStart.get(dt-1).add(l); else increment(longDateTestMissing,dt-1);\n          if( f != 0.0f ) floatDateTestStart.get(dt-1).add(f); else increment(floatDateTestMissing,dt-1);\n          if( d != 0.0d ) doubleDateTestStart.get(dt-1).add(d); else increment(doubleDateTestMissing,dt-1);\n          if( i != 0 ) multiDateTestStart.get(dt-1).add(i); else increment(multiDateTestMissing,dt-1);\n        }\n      }\n      \n      if (j-DATEM<0 && dtm!=dt && dtm!=0) {\n        ArrayList<Integer> list1 = new ArrayList<>();\n        if( i != 0 ){\n          list1.add(i);\n          multiDateTestMissing.add(0l);\n        } else {\n          multiDateTestMissing.add(1l);\n        }\n        multiDateTestStart.add(list1);\n      } else if (dtm!=dt && dtm!=0) {\n        if( i != 0 ) multiDateTestStart.get(dtm-1).add(i);\n      }\n      \n      if( s != 0 ){\n        //Strings\n        if (j-STRING<0) {\n          ArrayList<Integer> list1 = new ArrayList<>();\n          if( i != 0 ){\n            list1.add(i);\n            intStringTestMissing.add(0l);\n          } else {\n            intStringTestMissing.add(1l);\n          }\n          intStringTestStart.add(list1);\n          ArrayList<Long> list2 = new ArrayList<>();\n          if( l != 0l ){\n            list2.add(l);\n            longStringTestMissing.add(0l);\n          } else {\n            longStringTestMissing.add(1l);\n          }\n          longStringTestStart.add(list2);\n          ArrayList<Float> list3 = new ArrayList<>();\n          if( f != 0.0f ){\n            list3.add(f);\n            floatStringTestMissing.add(0l);\n          } else {\n            floatStringTestMissing.add(1l);\n          }\n          floatStringTestStart.add(list3);\n          ArrayList<Double> list4 = new ArrayList<>();\n          if( d != 0.0d ){\n            list4.add(d);\n            doubleStringTestMissing.add(0l);\n          } else {\n            doubleStringTestMissing.add(1l);\n          }\n          doubleStringTestStart.add(list4);\n          ArrayList<Integer> list5 = new ArrayList<>();\n          if( i != 0 ){\n            list5.add(i);\n            multiStringTestMissing.add(0l);\n          } else {\n            multiStringTestMissing.add(1l);\n          }\n          multiStringTestStart.add(list5);\n        } else {\n          if( i != 0 ) intStringTestStart.get(s-1).add(i); else increment(intStringTestMissing,s-1);\n          if( l != 0l ) longStringTestStart.get(s-1).add(l); else increment(longStringTestMissing,s-1);\n          if( f != 0.0f ) floatStringTestStart.get(s-1).add(f); else increment(floatStringTestMissing,s-1);\n          if( d != 0.0d ) doubleStringTestStart.get(s-1).add(d); else increment(doubleStringTestMissing,s-1);\n          if( i != 0 ) multiStringTestStart.get(s-1).add(i); else increment(multiStringTestMissing,s-1);\n        }\n      }\n      \n      //Strings\n      if( sm != 0 ){\n        if (j-STRINGM<0&&sm!=s) {\n          ArrayList<Integer> list1 = new ArrayList<>();\n          if( i != 0 ){\n            list1.add(i);\n            multiStringTestMissing.add(0l);\n          } else {\n            multiStringTestMissing.add(1l);\n          }\n          multiStringTestStart.add(list1);\n        } else if (sm!=s) {\n          if( i != 0 ) multiStringTestStart.get(sm-1).add(i); else increment(multiStringTestMissing,sm-1);\n        }\n      }\n      \n      //Int\n      if( i != 0 ){\n        if (j-INT<0) {\n          ArrayList<String> list1 = new ArrayList<>();\n          if( dt != 0 ){\n            list1.add((1800+dt) + \"-12-31T23:59:59Z\");\n            dateIntTestMissing.add(0l);\n          } else {\n            dateIntTestMissing.add(1l);\n          }\n          dateIntTestStart.add(list1);\n          ArrayList<String> list2 = new ArrayList<>();\n          if( s != 0 ){\n            list2.add(\"str\"+s);\n            stringIntTestMissing.add(0l);\n          } else {\n            stringIntTestMissing.add(1l);\n          }\n          stringIntTestStart.add(list2);\n        } else {\n          if( dt != 0 ) dateIntTestStart.get(i-1).add((1800+dt) + \"-12-31T23:59:59Z\"); else increment(dateIntTestMissing,i-1);\n          if( s != 0 ) stringIntTestStart.get(i-1).add(\"str\"+s); else increment(stringIntTestMissing,i-1);\n        }\n      }\n      \n      //Long\n      if( l != 0 ){\n        if (j-LONG<0) {\n          ArrayList<String> list1 = new ArrayList<>();\n          if( dt != 0 ){\n            list1.add((1800+dt) + \"-12-31T23:59:59Z\");\n            dateLongTestMissing.add(0l);\n          } else {\n            dateLongTestMissing.add(1l);\n          }\n          dateLongTestStart.add(list1);\n          ArrayList<String> list2 = new ArrayList<>();\n          if( s != 0 ){\n            list2.add(\"str\"+s);\n            stringLongTestMissing.add(0l);\n          } else {\n            stringLongTestMissing.add(1l);\n          }\n          stringLongTestStart.add(list2);\n          ArrayList<Integer> list3 = new ArrayList<>();\n          if( i != 0 ){\n            list3.add(i);\n            multiLongTestMissing.add(0l);\n          } else {\n            multiLongTestMissing.add(1l);\n          }\n          multiLongTestStart.add(list3);\n        } else {\n          if( dt != 0 ) dateLongTestStart.get((int)l-1).add((1800+dt) + \"-12-31T23:59:59Z\"); else increment(dateLongTestMissing,(int)l-1);\n          if( s != 0 ) stringLongTestStart.get((int)l-1).add(\"str\"+s); else increment(stringLongTestMissing,(int)l-1);\n          if( i != 0 ) multiLongTestStart.get((int)l-1).add(i); else increment(multiLongTestMissing,(int)l-1);\n        }\n      }\n      \n      //Long\n      if( lm != 0 ){\n        if (j-LONGM<0&&lm!=l) {\n          ArrayList<Integer> list1 = new ArrayList<>();\n          if( i != 0 ){\n            list1.add(i);\n            multiLongTestMissing.add(0l);\n          } else {\n            multiLongTestMissing.add(1l);\n          }\n          multiLongTestStart.add(list1);\n        } else if (lm!=l) {\n          if( i != 0 ) multiLongTestStart.get((int)lm-1).add(i); else increment( multiLongTestMissing,(int)lm-1);\n        }\n      }\n      \n      if (usually()) {\n        assertU(commit()); // to have several segments\n      }\n    }\n    \n    assertU(commit()); \n    setResponse(h.query(request(fileToStringArr(FieldFacetTest.class, fileName))));\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    initCore(\"solrconfig-basic.xml\",\"schema-analytics.xml\");\n    h.update(\"<delete><query>*:*</query></delete>\");\n    \n    defaults.put(\"int\", new Integer(0));\n    defaults.put(\"long\", new Long(0));\n    defaults.put(\"float\", new Float(0));\n    defaults.put(\"double\", new Double(0));\n    defaults.put(\"date\", \"1800-12-31T23:59:59Z\");\n    defaults.put(\"string\", \"str0\");\n\n    //INT\n    intDateTestStart = new ArrayList<ArrayList<Integer>>(); \n    intDateTestMissing = new ArrayList<Long>(); \n    intStringTestStart = new ArrayList<ArrayList<Integer>>(); \n    intStringTestMissing = new ArrayList<Long>(); \n    \n    //LONG\n    longDateTestStart = new ArrayList<ArrayList<Long>>(); \n    longDateTestMissing = new ArrayList<Long>(); \n    longStringTestStart = new ArrayList<ArrayList<Long>>(); \n    longStringTestMissing = new ArrayList<Long>(); \n    \n    //FLOAT\n    floatDateTestStart = new ArrayList<ArrayList<Float>>(); \n    floatDateTestMissing = new ArrayList<Long>(); \n    floatStringTestStart = new ArrayList<ArrayList<Float>>(); \n    floatStringTestMissing = new ArrayList<Long>(); \n    \n    //DOUBLE\n    doubleDateTestStart = new ArrayList<ArrayList<Double>>(); \n    doubleDateTestMissing = new ArrayList<Long>(); \n    doubleStringTestStart = new ArrayList<ArrayList<Double>>(); \n    doubleStringTestMissing = new ArrayList<Long>(); \n    \n    //DATE\n    dateIntTestStart = new ArrayList<ArrayList<String>>(); \n    dateIntTestMissing = new ArrayList<Long>(); \n    dateLongTestStart = new ArrayList<ArrayList<String>>(); \n    dateLongTestMissing = new ArrayList<Long>(); \n    \n    //String\n    stringIntTestStart = new ArrayList<ArrayList<String>>(); \n    stringIntTestMissing = new ArrayList<Long>(); \n    stringLongTestStart = new ArrayList<ArrayList<String>>(); \n    stringLongTestMissing = new ArrayList<Long>(); \n    \n    //Multi-Valued\n    multiLongTestStart = new ArrayList<ArrayList<Integer>>(); \n    multiLongTestMissing = new ArrayList<Long>(); \n    multiStringTestStart = new ArrayList<ArrayList<Integer>>(); \n    multiStringTestMissing = new ArrayList<Long>(); \n    multiDateTestStart = new ArrayList<ArrayList<Integer>>(); \n    multiDateTestMissing = new ArrayList<Long>(); \n\n    for (int j = 0; j < NUM_LOOPS; ++j) {\n      int i = j%INT;\n      long l = j%LONG;\n      long lm = j%LONGM;\n      float f = j%FLOAT;\n      double d = j%DOUBLE;\n      int dt = j%DATE;\n      int dtm = j%DATEM;\n      int s = j%STRING;\n      int sm = j%STRINGM;\n      if (dt==0 && dtm == 0) {\n        assertU(adoc(filter(\"id\", \"1000\" + j, \"int_id\", \"\" + i, \"long_ld\", \"\" + l, \"float_fd\", \"\" + f, \n          \"double_dd\", \"\" + d,  \"date_dtd\", (1800+dt) + \"-12-31T23:59:59Z\", \"string_sd\", \"str\" + s,\n          \"long_ldm\", \"\" + l, \"long_ldm\", \"\"+lm, \"string_sdm\", \"str\" + s, \"string_sdm\", \"str\"+sm)));\n      } else if (dt == 0) {\n        assertU(adoc(filter(\"id\", \"1000\" + j, \"int_id\", \"\" + i, \"long_ld\", \"\" + l, \"float_fd\", \"\" + f, \n            \"double_dd\", \"\" + d,  \"date_dtd\", (1800+dt) + \"-12-31T23:59:59Z\", \"string_sd\", \"str\" + s,\n            \"long_ldm\", \"\" + l, \"long_ldm\", \"\"+lm, \"string_sdm\", \"str\" + s, \"string_sdm\", \"str\"+sm,\n            \"date_dtdm\", (1800+dtm) + \"-12-31T23:59:59Z\")));\n      } else if (dtm == 0) {\n        assertU(adoc(filter(\"id\", \"1000\" + j, \"int_id\", \"\" + i, \"long_ld\", \"\" + l, \"float_fd\", \"\" + f, \n            \"double_dd\", \"\" + d,  \"date_dtd\", (1800+dt) + \"-12-31T23:59:59Z\", \"string_sd\", \"str\" + s,\n            \"long_ldm\", \"\" + l, \"long_ldm\", \"\"+lm, \"string_sdm\", \"str\" + s, \"string_sdm\", \"str\"+sm,\n            \"date_dtdm\", (1800+dt) + \"-12-31T23:59:59Z\")));\n      } else {\n        assertU(adoc(filter(\"id\", \"1000\" + j, \"int_id\", \"\" + i, \"long_ld\", \"\" + l, \"float_fd\", \"\" + f, \n            \"double_dd\", \"\" + d,  \"date_dtd\", (1800+dt) + \"-12-31T23:59:59Z\", \"string_sd\", \"str\" + s,\n            \"long_ldm\", \"\" + l, \"long_ldm\", \"\"+lm, \"string_sdm\", \"str\" + s, \"string_sdm\", \"str\"+sm,\n            \"date_dtdm\", (1800+dt) + \"-12-31T23:59:59Z\", \"date_dtdm\", (1800+dtm) + \"-12-31T23:59:59Z\")));\n      }\n      \n      if( dt != 0 ){\n        //Dates\n        if (j-DATE<0) {\n          ArrayList<Integer> list1 = new ArrayList<Integer>();\n          if( i != 0 ){\n            list1.add(i);\n            intDateTestMissing.add(0l);\n          } else {\n            intDateTestMissing.add(1l);\n          }\n          intDateTestStart.add(list1);\n          ArrayList<Long> list2 = new ArrayList<Long>();\n          if( l != 0l ){\n            list2.add(l);\n            longDateTestMissing.add(0l);\n          } else {\n            longDateTestMissing.add(1l);\n          }\n          longDateTestStart.add(list2);\n          ArrayList<Float> list3 = new ArrayList<Float>();\n          if ( f != 0.0f ){\n            list3.add(f);\n            floatDateTestMissing.add(0l);\n          } else {\n            floatDateTestMissing.add(1l);\n            \n          }\n          floatDateTestStart.add(list3);\n          ArrayList<Double> list4 = new ArrayList<Double>();\n          if( d != 0.0d ){\n            list4.add(d);\n            doubleDateTestMissing.add(0l);\n          } else {\n            doubleDateTestMissing.add(1l);\n          }\n          doubleDateTestStart.add(list4);\n          ArrayList<Integer> list5 = new ArrayList<Integer>();\n          if( i != 0 ){\n            list5.add(i);\n            multiDateTestMissing.add(0l);\n          } else {\n            multiDateTestMissing.add(1l);\n            \n          }\n          multiDateTestStart.add(list5);\n        } else {\n          if( i != 0 ) intDateTestStart.get(dt-1).add(i); else increment(intDateTestMissing,dt-1);\n          if( l != 0l ) longDateTestStart.get(dt-1).add(l); else increment(longDateTestMissing,dt-1);\n          if( f != 0.0f ) floatDateTestStart.get(dt-1).add(f); else increment(floatDateTestMissing,dt-1);\n          if( d != 0.0d ) doubleDateTestStart.get(dt-1).add(d); else increment(doubleDateTestMissing,dt-1);\n          if( i != 0 ) multiDateTestStart.get(dt-1).add(i); else increment(multiDateTestMissing,dt-1);\n        }\n      }\n      \n      if (j-DATEM<0 && dtm!=dt && dtm!=0) {\n        ArrayList<Integer> list1 = new ArrayList<Integer>();\n        if( i != 0 ){\n          list1.add(i);\n          multiDateTestMissing.add(0l);\n        } else {\n          multiDateTestMissing.add(1l);\n        }\n        multiDateTestStart.add(list1);\n      } else if (dtm!=dt && dtm!=0) {\n        if( i != 0 ) multiDateTestStart.get(dtm-1).add(i);\n      }\n      \n      if( s != 0 ){\n        //Strings\n        if (j-STRING<0) {\n          ArrayList<Integer> list1 = new ArrayList<Integer>();\n          if( i != 0 ){\n            list1.add(i);\n            intStringTestMissing.add(0l);\n          } else {\n            intStringTestMissing.add(1l);\n          }\n          intStringTestStart.add(list1);\n          ArrayList<Long> list2 = new ArrayList<Long>();\n          if( l != 0l ){\n            list2.add(l);\n            longStringTestMissing.add(0l);\n          } else {\n            longStringTestMissing.add(1l);\n          }\n          longStringTestStart.add(list2);\n          ArrayList<Float> list3 = new ArrayList<Float>();\n          if( f != 0.0f ){\n            list3.add(f);\n            floatStringTestMissing.add(0l);\n          } else {\n            floatStringTestMissing.add(1l);\n          }\n          floatStringTestStart.add(list3);\n          ArrayList<Double> list4 = new ArrayList<Double>();\n          if( d != 0.0d ){\n            list4.add(d);\n            doubleStringTestMissing.add(0l);\n          } else {\n            doubleStringTestMissing.add(1l);\n          }\n          doubleStringTestStart.add(list4);\n          ArrayList<Integer> list5 = new ArrayList<Integer>();\n          if( i != 0 ){\n            list5.add(i);\n            multiStringTestMissing.add(0l);\n          } else {\n            multiStringTestMissing.add(1l);\n          }\n          multiStringTestStart.add(list5);\n        } else {\n          if( i != 0 ) intStringTestStart.get(s-1).add(i); else increment(intStringTestMissing,s-1);\n          if( l != 0l ) longStringTestStart.get(s-1).add(l); else increment(longStringTestMissing,s-1);\n          if( f != 0.0f ) floatStringTestStart.get(s-1).add(f); else increment(floatStringTestMissing,s-1);\n          if( d != 0.0d ) doubleStringTestStart.get(s-1).add(d); else increment(doubleStringTestMissing,s-1);\n          if( i != 0 ) multiStringTestStart.get(s-1).add(i); else increment(multiStringTestMissing,s-1);\n        }\n      }\n      \n      //Strings\n      if( sm != 0 ){\n        if (j-STRINGM<0&&sm!=s) {\n          ArrayList<Integer> list1 = new ArrayList<Integer>();\n          if( i != 0 ){\n            list1.add(i);\n            multiStringTestMissing.add(0l);\n          } else {\n            multiStringTestMissing.add(1l);\n          }\n          multiStringTestStart.add(list1);\n        } else if (sm!=s) {\n          if( i != 0 ) multiStringTestStart.get(sm-1).add(i); else increment(multiStringTestMissing,sm-1);\n        }\n      }\n      \n      //Int\n      if( i != 0 ){\n        if (j-INT<0) {\n          ArrayList<String> list1 = new ArrayList<String>();\n          if( dt != 0 ){\n            list1.add((1800+dt) + \"-12-31T23:59:59Z\");\n            dateIntTestMissing.add(0l);\n          } else {\n            dateIntTestMissing.add(1l);\n          }\n          dateIntTestStart.add(list1);\n          ArrayList<String> list2 = new ArrayList<String>();\n          if( s != 0 ){\n            list2.add(\"str\"+s);\n            stringIntTestMissing.add(0l);\n          } else {\n            stringIntTestMissing.add(1l);\n          }\n          stringIntTestStart.add(list2);\n        } else {\n          if( dt != 0 ) dateIntTestStart.get(i-1).add((1800+dt) + \"-12-31T23:59:59Z\"); else increment(dateIntTestMissing,i-1);\n          if( s != 0 ) stringIntTestStart.get(i-1).add(\"str\"+s); else increment(stringIntTestMissing,i-1);\n        }\n      }\n      \n      //Long\n      if( l != 0 ){\n        if (j-LONG<0) {\n          ArrayList<String> list1 = new ArrayList<String>();\n          if( dt != 0 ){\n            list1.add((1800+dt) + \"-12-31T23:59:59Z\");\n            dateLongTestMissing.add(0l);\n          } else {\n            dateLongTestMissing.add(1l);\n          }\n          dateLongTestStart.add(list1);\n          ArrayList<String> list2 = new ArrayList<String>();\n          if( s != 0 ){\n            list2.add(\"str\"+s);\n            stringLongTestMissing.add(0l);\n          } else {\n            stringLongTestMissing.add(1l);\n          }\n          stringLongTestStart.add(list2);\n          ArrayList<Integer> list3 = new ArrayList<Integer>();\n          if( i != 0 ){\n            list3.add(i);\n            multiLongTestMissing.add(0l);\n          } else {\n            multiLongTestMissing.add(1l);\n          }\n          multiLongTestStart.add(list3);\n        } else {\n          if( dt != 0 ) dateLongTestStart.get((int)l-1).add((1800+dt) + \"-12-31T23:59:59Z\"); else increment(dateLongTestMissing,(int)l-1);\n          if( s != 0 ) stringLongTestStart.get((int)l-1).add(\"str\"+s); else increment(stringLongTestMissing,(int)l-1);\n          if( i != 0 ) multiLongTestStart.get((int)l-1).add(i); else increment(multiLongTestMissing,(int)l-1);\n        }\n      }\n      \n      //Long\n      if( lm != 0 ){\n        if (j-LONGM<0&&lm!=l) {\n          ArrayList<Integer> list1 = new ArrayList<Integer>();\n          if( i != 0 ){\n            list1.add(i);\n            multiLongTestMissing.add(0l);\n          } else {\n            multiLongTestMissing.add(1l);\n          }\n          multiLongTestStart.add(list1);\n        } else if (lm!=l) {\n          if( i != 0 ) multiLongTestStart.get((int)lm-1).add(i); else increment( multiLongTestMissing,(int)lm-1);\n        }\n      }\n      \n      if (usually()) {\n        assertU(commit()); // to have several segments\n      }\n    }\n    \n    assertU(commit()); \n    setResponse(h.query(request(fileToStringArr(FieldFacetTest.class, fileName))));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"645e9dc687d04dbe961b35c0f3a305c48e892615","date":1396352607,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/analytics/facet/FieldFacetTest#beforeClass().mjava","pathOld":"solr/core/src/test/org/apache/solr/analytics/facet/FieldFacetTest#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    initCore(\"solrconfig-basic.xml\",\"schema-analytics.xml\");\n    h.update(\"<delete><query>*:*</query></delete>\");\n    \n    defaults.put(\"int\", new Integer(0));\n    defaults.put(\"long\", new Long(0));\n    defaults.put(\"float\", new Float(0));\n    defaults.put(\"double\", new Double(0));\n    defaults.put(\"date\", \"1800-12-31T23:59:59Z\");\n    defaults.put(\"string\", \"str0\");\n\n    //INT\n    intDateTestStart = new ArrayList<>();\n    intDateTestMissing = new ArrayList<>();\n    intStringTestStart = new ArrayList<>();\n    intStringTestMissing = new ArrayList<>();\n    \n    //LONG\n    longDateTestStart = new ArrayList<>();\n    longDateTestMissing = new ArrayList<>();\n    longStringTestStart = new ArrayList<>();\n    longStringTestMissing = new ArrayList<>();\n    \n    //FLOAT\n    floatDateTestStart = new ArrayList<>();\n    floatDateTestMissing = new ArrayList<>();\n    floatStringTestStart = new ArrayList<>();\n    floatStringTestMissing = new ArrayList<>();\n    \n    //DOUBLE\n    doubleDateTestStart = new ArrayList<>();\n    doubleDateTestMissing = new ArrayList<>();\n    doubleStringTestStart = new ArrayList<>();\n    doubleStringTestMissing = new ArrayList<>();\n    \n    //DATE\n    dateIntTestStart = new ArrayList<>();\n    dateIntTestMissing = new ArrayList<>();\n    dateLongTestStart = new ArrayList<>();\n    dateLongTestMissing = new ArrayList<>();\n    \n    //String\n    stringIntTestStart = new ArrayList<>();\n    stringIntTestMissing = new ArrayList<>();\n    stringLongTestStart = new ArrayList<>();\n    stringLongTestMissing = new ArrayList<>();\n    \n    //Multi-Valued\n    multiLongTestStart = new ArrayList<>();\n    multiLongTestMissing = new ArrayList<>();\n    multiStringTestStart = new ArrayList<>();\n    multiStringTestMissing = new ArrayList<>();\n    multiDateTestStart = new ArrayList<>();\n    multiDateTestMissing = new ArrayList<>();\n\n    for (int j = 0; j < NUM_LOOPS; ++j) {\n      int i = j%INT;\n      long l = j%LONG;\n      long lm = j%LONGM;\n      float f = j%FLOAT;\n      double d = j%DOUBLE;\n      int dt = j%DATE;\n      int dtm = j%DATEM;\n      int s = j%STRING;\n      int sm = j%STRINGM;\n      if (dt==0 && dtm == 0) {\n        assertU(adoc(filter(\"id\", \"1000\" + j, \"int_id\", \"\" + i, \"long_ld\", \"\" + l, \"float_fd\", \"\" + f, \n          \"double_dd\", \"\" + d,  \"date_dtd\", (1800+dt) + \"-12-31T23:59:59Z\", \"string_sd\", \"str\" + s,\n          \"long_ldm\", \"\" + l, \"long_ldm\", \"\"+lm, \"string_sdm\", \"str\" + s, \"string_sdm\", \"str\"+sm)));\n      } else if (dt == 0) {\n        assertU(adoc(filter(\"id\", \"1000\" + j, \"int_id\", \"\" + i, \"long_ld\", \"\" + l, \"float_fd\", \"\" + f, \n            \"double_dd\", \"\" + d,  \"date_dtd\", (1800+dt) + \"-12-31T23:59:59Z\", \"string_sd\", \"str\" + s,\n            \"long_ldm\", \"\" + l, \"long_ldm\", \"\"+lm, \"string_sdm\", \"str\" + s, \"string_sdm\", \"str\"+sm,\n            \"date_dtdm\", (1800+dtm) + \"-12-31T23:59:59Z\")));\n      } else if (dtm == 0) {\n        assertU(adoc(filter(\"id\", \"1000\" + j, \"int_id\", \"\" + i, \"long_ld\", \"\" + l, \"float_fd\", \"\" + f, \n            \"double_dd\", \"\" + d,  \"date_dtd\", (1800+dt) + \"-12-31T23:59:59Z\", \"string_sd\", \"str\" + s,\n            \"long_ldm\", \"\" + l, \"long_ldm\", \"\"+lm, \"string_sdm\", \"str\" + s, \"string_sdm\", \"str\"+sm,\n            \"date_dtdm\", (1800+dt) + \"-12-31T23:59:59Z\")));\n      } else {\n        assertU(adoc(filter(\"id\", \"1000\" + j, \"int_id\", \"\" + i, \"long_ld\", \"\" + l, \"float_fd\", \"\" + f, \n            \"double_dd\", \"\" + d,  \"date_dtd\", (1800+dt) + \"-12-31T23:59:59Z\", \"string_sd\", \"str\" + s,\n            \"long_ldm\", \"\" + l, \"long_ldm\", \"\"+lm, \"string_sdm\", \"str\" + s, \"string_sdm\", \"str\"+sm,\n            \"date_dtdm\", (1800+dt) + \"-12-31T23:59:59Z\", \"date_dtdm\", (1800+dtm) + \"-12-31T23:59:59Z\")));\n      }\n      \n      if( dt != 0 ){\n        //Dates\n        if (j-DATE<0) {\n          ArrayList<Integer> list1 = new ArrayList<>();\n          if( i != 0 ){\n            list1.add(i);\n            intDateTestMissing.add(0l);\n          } else {\n            intDateTestMissing.add(1l);\n          }\n          intDateTestStart.add(list1);\n          ArrayList<Long> list2 = new ArrayList<>();\n          if( l != 0l ){\n            list2.add(l);\n            longDateTestMissing.add(0l);\n          } else {\n            longDateTestMissing.add(1l);\n          }\n          longDateTestStart.add(list2);\n          ArrayList<Float> list3 = new ArrayList<>();\n          if ( f != 0.0f ){\n            list3.add(f);\n            floatDateTestMissing.add(0l);\n          } else {\n            floatDateTestMissing.add(1l);\n            \n          }\n          floatDateTestStart.add(list3);\n          ArrayList<Double> list4 = new ArrayList<>();\n          if( d != 0.0d ){\n            list4.add(d);\n            doubleDateTestMissing.add(0l);\n          } else {\n            doubleDateTestMissing.add(1l);\n          }\n          doubleDateTestStart.add(list4);\n          ArrayList<Integer> list5 = new ArrayList<>();\n          if( i != 0 ){\n            list5.add(i);\n            multiDateTestMissing.add(0l);\n          } else {\n            multiDateTestMissing.add(1l);\n            \n          }\n          multiDateTestStart.add(list5);\n        } else {\n          if( i != 0 ) intDateTestStart.get(dt-1).add(i); else increment(intDateTestMissing,dt-1);\n          if( l != 0l ) longDateTestStart.get(dt-1).add(l); else increment(longDateTestMissing,dt-1);\n          if( f != 0.0f ) floatDateTestStart.get(dt-1).add(f); else increment(floatDateTestMissing,dt-1);\n          if( d != 0.0d ) doubleDateTestStart.get(dt-1).add(d); else increment(doubleDateTestMissing,dt-1);\n          if( i != 0 ) multiDateTestStart.get(dt-1).add(i); else increment(multiDateTestMissing,dt-1);\n        }\n      }\n      \n      if (j-DATEM<0 && dtm!=dt && dtm!=0) {\n        ArrayList<Integer> list1 = new ArrayList<>();\n        if( i != 0 ){\n          list1.add(i);\n          multiDateTestMissing.add(0l);\n        } else {\n          multiDateTestMissing.add(1l);\n        }\n        multiDateTestStart.add(list1);\n      } else if (dtm!=dt && dtm!=0) {\n        if( i != 0 ) multiDateTestStart.get(dtm-1).add(i);\n      }\n      \n      if( s != 0 ){\n        //Strings\n        if (j-STRING<0) {\n          ArrayList<Integer> list1 = new ArrayList<>();\n          if( i != 0 ){\n            list1.add(i);\n            intStringTestMissing.add(0l);\n          } else {\n            intStringTestMissing.add(1l);\n          }\n          intStringTestStart.add(list1);\n          ArrayList<Long> list2 = new ArrayList<>();\n          if( l != 0l ){\n            list2.add(l);\n            longStringTestMissing.add(0l);\n          } else {\n            longStringTestMissing.add(1l);\n          }\n          longStringTestStart.add(list2);\n          ArrayList<Float> list3 = new ArrayList<>();\n          if( f != 0.0f ){\n            list3.add(f);\n            floatStringTestMissing.add(0l);\n          } else {\n            floatStringTestMissing.add(1l);\n          }\n          floatStringTestStart.add(list3);\n          ArrayList<Double> list4 = new ArrayList<>();\n          if( d != 0.0d ){\n            list4.add(d);\n            doubleStringTestMissing.add(0l);\n          } else {\n            doubleStringTestMissing.add(1l);\n          }\n          doubleStringTestStart.add(list4);\n          ArrayList<Integer> list5 = new ArrayList<>();\n          if( i != 0 ){\n            list5.add(i);\n            multiStringTestMissing.add(0l);\n          } else {\n            multiStringTestMissing.add(1l);\n          }\n          multiStringTestStart.add(list5);\n        } else {\n          if( i != 0 ) intStringTestStart.get(s-1).add(i); else increment(intStringTestMissing,s-1);\n          if( l != 0l ) longStringTestStart.get(s-1).add(l); else increment(longStringTestMissing,s-1);\n          if( f != 0.0f ) floatStringTestStart.get(s-1).add(f); else increment(floatStringTestMissing,s-1);\n          if( d != 0.0d ) doubleStringTestStart.get(s-1).add(d); else increment(doubleStringTestMissing,s-1);\n          if( i != 0 ) multiStringTestStart.get(s-1).add(i); else increment(multiStringTestMissing,s-1);\n        }\n      }\n      \n      //Strings\n      if( sm != 0 ){\n        if (j-STRINGM<0&&sm!=s) {\n          ArrayList<Integer> list1 = new ArrayList<>();\n          if( i != 0 ){\n            list1.add(i);\n            multiStringTestMissing.add(0l);\n          } else {\n            multiStringTestMissing.add(1l);\n          }\n          multiStringTestStart.add(list1);\n        } else if (sm!=s) {\n          if( i != 0 ) multiStringTestStart.get(sm-1).add(i); else increment(multiStringTestMissing,sm-1);\n        }\n      }\n      \n      //Int\n      if( i != 0 ){\n        if (j-INT<0) {\n          ArrayList<String> list1 = new ArrayList<>();\n          if( dt != 0 ){\n            list1.add((1800+dt) + \"-12-31T23:59:59Z\");\n            dateIntTestMissing.add(0l);\n          } else {\n            dateIntTestMissing.add(1l);\n          }\n          dateIntTestStart.add(list1);\n          ArrayList<String> list2 = new ArrayList<>();\n          if( s != 0 ){\n            list2.add(\"str\"+s);\n            stringIntTestMissing.add(0l);\n          } else {\n            stringIntTestMissing.add(1l);\n          }\n          stringIntTestStart.add(list2);\n        } else {\n          if( dt != 0 ) dateIntTestStart.get(i-1).add((1800+dt) + \"-12-31T23:59:59Z\"); else increment(dateIntTestMissing,i-1);\n          if( s != 0 ) stringIntTestStart.get(i-1).add(\"str\"+s); else increment(stringIntTestMissing,i-1);\n        }\n      }\n      \n      //Long\n      if( l != 0 ){\n        if (j-LONG<0) {\n          ArrayList<String> list1 = new ArrayList<>();\n          if( dt != 0 ){\n            list1.add((1800+dt) + \"-12-31T23:59:59Z\");\n            dateLongTestMissing.add(0l);\n          } else {\n            dateLongTestMissing.add(1l);\n          }\n          dateLongTestStart.add(list1);\n          ArrayList<String> list2 = new ArrayList<>();\n          if( s != 0 ){\n            list2.add(\"str\"+s);\n            stringLongTestMissing.add(0l);\n          } else {\n            stringLongTestMissing.add(1l);\n          }\n          stringLongTestStart.add(list2);\n          ArrayList<Integer> list3 = new ArrayList<>();\n          if( i != 0 ){\n            list3.add(i);\n            multiLongTestMissing.add(0l);\n          } else {\n            multiLongTestMissing.add(1l);\n          }\n          multiLongTestStart.add(list3);\n        } else {\n          if( dt != 0 ) dateLongTestStart.get((int)l-1).add((1800+dt) + \"-12-31T23:59:59Z\"); else increment(dateLongTestMissing,(int)l-1);\n          if( s != 0 ) stringLongTestStart.get((int)l-1).add(\"str\"+s); else increment(stringLongTestMissing,(int)l-1);\n          if( i != 0 ) multiLongTestStart.get((int)l-1).add(i); else increment(multiLongTestMissing,(int)l-1);\n        }\n      }\n      \n      //Long\n      if( lm != 0 ){\n        if (j-LONGM<0&&lm!=l) {\n          ArrayList<Integer> list1 = new ArrayList<>();\n          if( i != 0 ){\n            list1.add(i);\n            multiLongTestMissing.add(0l);\n          } else {\n            multiLongTestMissing.add(1l);\n          }\n          multiLongTestStart.add(list1);\n        } else if (lm!=l) {\n          if( i != 0 ) multiLongTestStart.get((int)lm-1).add(i); else increment( multiLongTestMissing,(int)lm-1);\n        }\n      }\n      \n      if (usually()) {\n        assertU(commit()); // to have several segments\n      }\n    }\n    \n    assertU(commit());\n    String[] reqFacetParamas = fileToStringArr(FieldFacetTest.class, fileName);\n    String[] reqParamas = new String[reqFacetParamas.length + 2];\n    System.arraycopy(reqFacetParamas, 0, reqParamas, 0, reqFacetParamas.length);\n    reqParamas[reqFacetParamas.length] = \"solr\";\n    reqParamas[reqFacetParamas.length+1] = \"asc\";\n    setResponse(h.query(request(reqFacetParamas)));\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    initCore(\"solrconfig-basic.xml\",\"schema-analytics.xml\");\n    h.update(\"<delete><query>*:*</query></delete>\");\n    \n    defaults.put(\"int\", new Integer(0));\n    defaults.put(\"long\", new Long(0));\n    defaults.put(\"float\", new Float(0));\n    defaults.put(\"double\", new Double(0));\n    defaults.put(\"date\", \"1800-12-31T23:59:59Z\");\n    defaults.put(\"string\", \"str0\");\n\n    //INT\n    intDateTestStart = new ArrayList<>();\n    intDateTestMissing = new ArrayList<>();\n    intStringTestStart = new ArrayList<>();\n    intStringTestMissing = new ArrayList<>();\n    \n    //LONG\n    longDateTestStart = new ArrayList<>();\n    longDateTestMissing = new ArrayList<>();\n    longStringTestStart = new ArrayList<>();\n    longStringTestMissing = new ArrayList<>();\n    \n    //FLOAT\n    floatDateTestStart = new ArrayList<>();\n    floatDateTestMissing = new ArrayList<>();\n    floatStringTestStart = new ArrayList<>();\n    floatStringTestMissing = new ArrayList<>();\n    \n    //DOUBLE\n    doubleDateTestStart = new ArrayList<>();\n    doubleDateTestMissing = new ArrayList<>();\n    doubleStringTestStart = new ArrayList<>();\n    doubleStringTestMissing = new ArrayList<>();\n    \n    //DATE\n    dateIntTestStart = new ArrayList<>();\n    dateIntTestMissing = new ArrayList<>();\n    dateLongTestStart = new ArrayList<>();\n    dateLongTestMissing = new ArrayList<>();\n    \n    //String\n    stringIntTestStart = new ArrayList<>();\n    stringIntTestMissing = new ArrayList<>();\n    stringLongTestStart = new ArrayList<>();\n    stringLongTestMissing = new ArrayList<>();\n    \n    //Multi-Valued\n    multiLongTestStart = new ArrayList<>();\n    multiLongTestMissing = new ArrayList<>();\n    multiStringTestStart = new ArrayList<>();\n    multiStringTestMissing = new ArrayList<>();\n    multiDateTestStart = new ArrayList<>();\n    multiDateTestMissing = new ArrayList<>();\n\n    for (int j = 0; j < NUM_LOOPS; ++j) {\n      int i = j%INT;\n      long l = j%LONG;\n      long lm = j%LONGM;\n      float f = j%FLOAT;\n      double d = j%DOUBLE;\n      int dt = j%DATE;\n      int dtm = j%DATEM;\n      int s = j%STRING;\n      int sm = j%STRINGM;\n      if (dt==0 && dtm == 0) {\n        assertU(adoc(filter(\"id\", \"1000\" + j, \"int_id\", \"\" + i, \"long_ld\", \"\" + l, \"float_fd\", \"\" + f, \n          \"double_dd\", \"\" + d,  \"date_dtd\", (1800+dt) + \"-12-31T23:59:59Z\", \"string_sd\", \"str\" + s,\n          \"long_ldm\", \"\" + l, \"long_ldm\", \"\"+lm, \"string_sdm\", \"str\" + s, \"string_sdm\", \"str\"+sm)));\n      } else if (dt == 0) {\n        assertU(adoc(filter(\"id\", \"1000\" + j, \"int_id\", \"\" + i, \"long_ld\", \"\" + l, \"float_fd\", \"\" + f, \n            \"double_dd\", \"\" + d,  \"date_dtd\", (1800+dt) + \"-12-31T23:59:59Z\", \"string_sd\", \"str\" + s,\n            \"long_ldm\", \"\" + l, \"long_ldm\", \"\"+lm, \"string_sdm\", \"str\" + s, \"string_sdm\", \"str\"+sm,\n            \"date_dtdm\", (1800+dtm) + \"-12-31T23:59:59Z\")));\n      } else if (dtm == 0) {\n        assertU(adoc(filter(\"id\", \"1000\" + j, \"int_id\", \"\" + i, \"long_ld\", \"\" + l, \"float_fd\", \"\" + f, \n            \"double_dd\", \"\" + d,  \"date_dtd\", (1800+dt) + \"-12-31T23:59:59Z\", \"string_sd\", \"str\" + s,\n            \"long_ldm\", \"\" + l, \"long_ldm\", \"\"+lm, \"string_sdm\", \"str\" + s, \"string_sdm\", \"str\"+sm,\n            \"date_dtdm\", (1800+dt) + \"-12-31T23:59:59Z\")));\n      } else {\n        assertU(adoc(filter(\"id\", \"1000\" + j, \"int_id\", \"\" + i, \"long_ld\", \"\" + l, \"float_fd\", \"\" + f, \n            \"double_dd\", \"\" + d,  \"date_dtd\", (1800+dt) + \"-12-31T23:59:59Z\", \"string_sd\", \"str\" + s,\n            \"long_ldm\", \"\" + l, \"long_ldm\", \"\"+lm, \"string_sdm\", \"str\" + s, \"string_sdm\", \"str\"+sm,\n            \"date_dtdm\", (1800+dt) + \"-12-31T23:59:59Z\", \"date_dtdm\", (1800+dtm) + \"-12-31T23:59:59Z\")));\n      }\n      \n      if( dt != 0 ){\n        //Dates\n        if (j-DATE<0) {\n          ArrayList<Integer> list1 = new ArrayList<>();\n          if( i != 0 ){\n            list1.add(i);\n            intDateTestMissing.add(0l);\n          } else {\n            intDateTestMissing.add(1l);\n          }\n          intDateTestStart.add(list1);\n          ArrayList<Long> list2 = new ArrayList<>();\n          if( l != 0l ){\n            list2.add(l);\n            longDateTestMissing.add(0l);\n          } else {\n            longDateTestMissing.add(1l);\n          }\n          longDateTestStart.add(list2);\n          ArrayList<Float> list3 = new ArrayList<>();\n          if ( f != 0.0f ){\n            list3.add(f);\n            floatDateTestMissing.add(0l);\n          } else {\n            floatDateTestMissing.add(1l);\n            \n          }\n          floatDateTestStart.add(list3);\n          ArrayList<Double> list4 = new ArrayList<>();\n          if( d != 0.0d ){\n            list4.add(d);\n            doubleDateTestMissing.add(0l);\n          } else {\n            doubleDateTestMissing.add(1l);\n          }\n          doubleDateTestStart.add(list4);\n          ArrayList<Integer> list5 = new ArrayList<>();\n          if( i != 0 ){\n            list5.add(i);\n            multiDateTestMissing.add(0l);\n          } else {\n            multiDateTestMissing.add(1l);\n            \n          }\n          multiDateTestStart.add(list5);\n        } else {\n          if( i != 0 ) intDateTestStart.get(dt-1).add(i); else increment(intDateTestMissing,dt-1);\n          if( l != 0l ) longDateTestStart.get(dt-1).add(l); else increment(longDateTestMissing,dt-1);\n          if( f != 0.0f ) floatDateTestStart.get(dt-1).add(f); else increment(floatDateTestMissing,dt-1);\n          if( d != 0.0d ) doubleDateTestStart.get(dt-1).add(d); else increment(doubleDateTestMissing,dt-1);\n          if( i != 0 ) multiDateTestStart.get(dt-1).add(i); else increment(multiDateTestMissing,dt-1);\n        }\n      }\n      \n      if (j-DATEM<0 && dtm!=dt && dtm!=0) {\n        ArrayList<Integer> list1 = new ArrayList<>();\n        if( i != 0 ){\n          list1.add(i);\n          multiDateTestMissing.add(0l);\n        } else {\n          multiDateTestMissing.add(1l);\n        }\n        multiDateTestStart.add(list1);\n      } else if (dtm!=dt && dtm!=0) {\n        if( i != 0 ) multiDateTestStart.get(dtm-1).add(i);\n      }\n      \n      if( s != 0 ){\n        //Strings\n        if (j-STRING<0) {\n          ArrayList<Integer> list1 = new ArrayList<>();\n          if( i != 0 ){\n            list1.add(i);\n            intStringTestMissing.add(0l);\n          } else {\n            intStringTestMissing.add(1l);\n          }\n          intStringTestStart.add(list1);\n          ArrayList<Long> list2 = new ArrayList<>();\n          if( l != 0l ){\n            list2.add(l);\n            longStringTestMissing.add(0l);\n          } else {\n            longStringTestMissing.add(1l);\n          }\n          longStringTestStart.add(list2);\n          ArrayList<Float> list3 = new ArrayList<>();\n          if( f != 0.0f ){\n            list3.add(f);\n            floatStringTestMissing.add(0l);\n          } else {\n            floatStringTestMissing.add(1l);\n          }\n          floatStringTestStart.add(list3);\n          ArrayList<Double> list4 = new ArrayList<>();\n          if( d != 0.0d ){\n            list4.add(d);\n            doubleStringTestMissing.add(0l);\n          } else {\n            doubleStringTestMissing.add(1l);\n          }\n          doubleStringTestStart.add(list4);\n          ArrayList<Integer> list5 = new ArrayList<>();\n          if( i != 0 ){\n            list5.add(i);\n            multiStringTestMissing.add(0l);\n          } else {\n            multiStringTestMissing.add(1l);\n          }\n          multiStringTestStart.add(list5);\n        } else {\n          if( i != 0 ) intStringTestStart.get(s-1).add(i); else increment(intStringTestMissing,s-1);\n          if( l != 0l ) longStringTestStart.get(s-1).add(l); else increment(longStringTestMissing,s-1);\n          if( f != 0.0f ) floatStringTestStart.get(s-1).add(f); else increment(floatStringTestMissing,s-1);\n          if( d != 0.0d ) doubleStringTestStart.get(s-1).add(d); else increment(doubleStringTestMissing,s-1);\n          if( i != 0 ) multiStringTestStart.get(s-1).add(i); else increment(multiStringTestMissing,s-1);\n        }\n      }\n      \n      //Strings\n      if( sm != 0 ){\n        if (j-STRINGM<0&&sm!=s) {\n          ArrayList<Integer> list1 = new ArrayList<>();\n          if( i != 0 ){\n            list1.add(i);\n            multiStringTestMissing.add(0l);\n          } else {\n            multiStringTestMissing.add(1l);\n          }\n          multiStringTestStart.add(list1);\n        } else if (sm!=s) {\n          if( i != 0 ) multiStringTestStart.get(sm-1).add(i); else increment(multiStringTestMissing,sm-1);\n        }\n      }\n      \n      //Int\n      if( i != 0 ){\n        if (j-INT<0) {\n          ArrayList<String> list1 = new ArrayList<>();\n          if( dt != 0 ){\n            list1.add((1800+dt) + \"-12-31T23:59:59Z\");\n            dateIntTestMissing.add(0l);\n          } else {\n            dateIntTestMissing.add(1l);\n          }\n          dateIntTestStart.add(list1);\n          ArrayList<String> list2 = new ArrayList<>();\n          if( s != 0 ){\n            list2.add(\"str\"+s);\n            stringIntTestMissing.add(0l);\n          } else {\n            stringIntTestMissing.add(1l);\n          }\n          stringIntTestStart.add(list2);\n        } else {\n          if( dt != 0 ) dateIntTestStart.get(i-1).add((1800+dt) + \"-12-31T23:59:59Z\"); else increment(dateIntTestMissing,i-1);\n          if( s != 0 ) stringIntTestStart.get(i-1).add(\"str\"+s); else increment(stringIntTestMissing,i-1);\n        }\n      }\n      \n      //Long\n      if( l != 0 ){\n        if (j-LONG<0) {\n          ArrayList<String> list1 = new ArrayList<>();\n          if( dt != 0 ){\n            list1.add((1800+dt) + \"-12-31T23:59:59Z\");\n            dateLongTestMissing.add(0l);\n          } else {\n            dateLongTestMissing.add(1l);\n          }\n          dateLongTestStart.add(list1);\n          ArrayList<String> list2 = new ArrayList<>();\n          if( s != 0 ){\n            list2.add(\"str\"+s);\n            stringLongTestMissing.add(0l);\n          } else {\n            stringLongTestMissing.add(1l);\n          }\n          stringLongTestStart.add(list2);\n          ArrayList<Integer> list3 = new ArrayList<>();\n          if( i != 0 ){\n            list3.add(i);\n            multiLongTestMissing.add(0l);\n          } else {\n            multiLongTestMissing.add(1l);\n          }\n          multiLongTestStart.add(list3);\n        } else {\n          if( dt != 0 ) dateLongTestStart.get((int)l-1).add((1800+dt) + \"-12-31T23:59:59Z\"); else increment(dateLongTestMissing,(int)l-1);\n          if( s != 0 ) stringLongTestStart.get((int)l-1).add(\"str\"+s); else increment(stringLongTestMissing,(int)l-1);\n          if( i != 0 ) multiLongTestStart.get((int)l-1).add(i); else increment(multiLongTestMissing,(int)l-1);\n        }\n      }\n      \n      //Long\n      if( lm != 0 ){\n        if (j-LONGM<0&&lm!=l) {\n          ArrayList<Integer> list1 = new ArrayList<>();\n          if( i != 0 ){\n            list1.add(i);\n            multiLongTestMissing.add(0l);\n          } else {\n            multiLongTestMissing.add(1l);\n          }\n          multiLongTestStart.add(list1);\n        } else if (lm!=l) {\n          if( i != 0 ) multiLongTestStart.get((int)lm-1).add(i); else increment( multiLongTestMissing,(int)lm-1);\n        }\n      }\n      \n      if (usually()) {\n        assertU(commit()); // to have several segments\n      }\n    }\n    \n    assertU(commit()); \n    setResponse(h.query(request(fileToStringArr(FieldFacetTest.class, fileName))));\n  }\n\n","bugFix":["ff403346522eaa9de75403763e297e83a3ea585c","a475a1c165e02515bff766b3b7be0c42edf1870c"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5eb2511ababf862ea11e10761c70ee560cd84510","date":1396607225,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/analytics/facet/FieldFacetTest#beforeClass().mjava","pathOld":"solr/core/src/test/org/apache/solr/analytics/facet/FieldFacetTest#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    initCore(\"solrconfig-basic.xml\",\"schema-analytics.xml\");\n    h.update(\"<delete><query>*:*</query></delete>\");\n    \n    defaults.put(\"int\", new Integer(0));\n    defaults.put(\"long\", new Long(0));\n    defaults.put(\"float\", new Float(0));\n    defaults.put(\"double\", new Double(0));\n    defaults.put(\"date\", \"1800-12-31T23:59:59Z\");\n    defaults.put(\"string\", \"str0\");\n\n    //INT\n    intDateTestStart = new ArrayList<>();\n    intDateTestMissing = new ArrayList<>();\n    intStringTestStart = new ArrayList<>();\n    intStringTestMissing = new ArrayList<>();\n    \n    //LONG\n    longDateTestStart = new ArrayList<>();\n    longDateTestMissing = new ArrayList<>();\n    longStringTestStart = new ArrayList<>();\n    longStringTestMissing = new ArrayList<>();\n    \n    //FLOAT\n    floatDateTestStart = new ArrayList<>();\n    floatDateTestMissing = new ArrayList<>();\n    floatStringTestStart = new ArrayList<>();\n    floatStringTestMissing = new ArrayList<>();\n    \n    //DOUBLE\n    doubleDateTestStart = new ArrayList<>();\n    doubleDateTestMissing = new ArrayList<>();\n    doubleStringTestStart = new ArrayList<>();\n    doubleStringTestMissing = new ArrayList<>();\n    \n    //DATE\n    dateIntTestStart = new ArrayList<>();\n    dateIntTestMissing = new ArrayList<>();\n    dateLongTestStart = new ArrayList<>();\n    dateLongTestMissing = new ArrayList<>();\n    \n    //String\n    stringIntTestStart = new ArrayList<>();\n    stringIntTestMissing = new ArrayList<>();\n    stringLongTestStart = new ArrayList<>();\n    stringLongTestMissing = new ArrayList<>();\n    \n    //Multi-Valued\n    multiLongTestStart = new ArrayList<>();\n    multiLongTestMissing = new ArrayList<>();\n    multiStringTestStart = new ArrayList<>();\n    multiStringTestMissing = new ArrayList<>();\n    multiDateTestStart = new ArrayList<>();\n    multiDateTestMissing = new ArrayList<>();\n\n    for (int j = 0; j < NUM_LOOPS; ++j) {\n      int i = j%INT;\n      long l = j%LONG;\n      long lm = j%LONGM;\n      float f = j%FLOAT;\n      double d = j%DOUBLE;\n      int dt = j%DATE;\n      int dtm = j%DATEM;\n      int s = j%STRING;\n      int sm = j%STRINGM;\n      if (dt==0 && dtm == 0) {\n        assertU(adoc(filter(\"id\", \"1000\" + j, \"int_id\", \"\" + i, \"long_ld\", \"\" + l, \"float_fd\", \"\" + f, \n          \"double_dd\", \"\" + d,  \"date_dtd\", (1800+dt) + \"-12-31T23:59:59Z\", \"string_sd\", \"str\" + s,\n          \"long_ldm\", \"\" + l, \"long_ldm\", \"\"+lm, \"string_sdm\", \"str\" + s, \"string_sdm\", \"str\"+sm)));\n      } else if (dt == 0) {\n        assertU(adoc(filter(\"id\", \"1000\" + j, \"int_id\", \"\" + i, \"long_ld\", \"\" + l, \"float_fd\", \"\" + f, \n            \"double_dd\", \"\" + d,  \"date_dtd\", (1800+dt) + \"-12-31T23:59:59Z\", \"string_sd\", \"str\" + s,\n            \"long_ldm\", \"\" + l, \"long_ldm\", \"\"+lm, \"string_sdm\", \"str\" + s, \"string_sdm\", \"str\"+sm,\n            \"date_dtdm\", (1800+dtm) + \"-12-31T23:59:59Z\")));\n      } else if (dtm == 0) {\n        assertU(adoc(filter(\"id\", \"1000\" + j, \"int_id\", \"\" + i, \"long_ld\", \"\" + l, \"float_fd\", \"\" + f, \n            \"double_dd\", \"\" + d,  \"date_dtd\", (1800+dt) + \"-12-31T23:59:59Z\", \"string_sd\", \"str\" + s,\n            \"long_ldm\", \"\" + l, \"long_ldm\", \"\"+lm, \"string_sdm\", \"str\" + s, \"string_sdm\", \"str\"+sm,\n            \"date_dtdm\", (1800+dt) + \"-12-31T23:59:59Z\")));\n      } else {\n        assertU(adoc(filter(\"id\", \"1000\" + j, \"int_id\", \"\" + i, \"long_ld\", \"\" + l, \"float_fd\", \"\" + f, \n            \"double_dd\", \"\" + d,  \"date_dtd\", (1800+dt) + \"-12-31T23:59:59Z\", \"string_sd\", \"str\" + s,\n            \"long_ldm\", \"\" + l, \"long_ldm\", \"\"+lm, \"string_sdm\", \"str\" + s, \"string_sdm\", \"str\"+sm,\n            \"date_dtdm\", (1800+dt) + \"-12-31T23:59:59Z\", \"date_dtdm\", (1800+dtm) + \"-12-31T23:59:59Z\")));\n      }\n      \n      if( dt != 0 ){\n        //Dates\n        if (j-DATE<0) {\n          ArrayList<Integer> list1 = new ArrayList<>();\n          if( i != 0 ){\n            list1.add(i);\n            intDateTestMissing.add(0l);\n          } else {\n            intDateTestMissing.add(1l);\n          }\n          intDateTestStart.add(list1);\n          ArrayList<Long> list2 = new ArrayList<>();\n          if( l != 0l ){\n            list2.add(l);\n            longDateTestMissing.add(0l);\n          } else {\n            longDateTestMissing.add(1l);\n          }\n          longDateTestStart.add(list2);\n          ArrayList<Float> list3 = new ArrayList<>();\n          if ( f != 0.0f ){\n            list3.add(f);\n            floatDateTestMissing.add(0l);\n          } else {\n            floatDateTestMissing.add(1l);\n            \n          }\n          floatDateTestStart.add(list3);\n          ArrayList<Double> list4 = new ArrayList<>();\n          if( d != 0.0d ){\n            list4.add(d);\n            doubleDateTestMissing.add(0l);\n          } else {\n            doubleDateTestMissing.add(1l);\n          }\n          doubleDateTestStart.add(list4);\n          ArrayList<Integer> list5 = new ArrayList<>();\n          if( i != 0 ){\n            list5.add(i);\n            multiDateTestMissing.add(0l);\n          } else {\n            multiDateTestMissing.add(1l);\n            \n          }\n          multiDateTestStart.add(list5);\n        } else {\n          if( i != 0 ) intDateTestStart.get(dt-1).add(i); else increment(intDateTestMissing,dt-1);\n          if( l != 0l ) longDateTestStart.get(dt-1).add(l); else increment(longDateTestMissing,dt-1);\n          if( f != 0.0f ) floatDateTestStart.get(dt-1).add(f); else increment(floatDateTestMissing,dt-1);\n          if( d != 0.0d ) doubleDateTestStart.get(dt-1).add(d); else increment(doubleDateTestMissing,dt-1);\n          if( i != 0 ) multiDateTestStart.get(dt-1).add(i); else increment(multiDateTestMissing,dt-1);\n        }\n      }\n      \n      if (j-DATEM<0 && dtm!=dt && dtm!=0) {\n        ArrayList<Integer> list1 = new ArrayList<>();\n        if( i != 0 ){\n          list1.add(i);\n          multiDateTestMissing.add(0l);\n        } else {\n          multiDateTestMissing.add(1l);\n        }\n        multiDateTestStart.add(list1);\n      } else if (dtm!=dt && dtm!=0) {\n        if( i != 0 ) multiDateTestStart.get(dtm-1).add(i);\n      }\n      \n      if( s != 0 ){\n        //Strings\n        if (j-STRING<0) {\n          ArrayList<Integer> list1 = new ArrayList<>();\n          if( i != 0 ){\n            list1.add(i);\n            intStringTestMissing.add(0l);\n          } else {\n            intStringTestMissing.add(1l);\n          }\n          intStringTestStart.add(list1);\n          ArrayList<Long> list2 = new ArrayList<>();\n          if( l != 0l ){\n            list2.add(l);\n            longStringTestMissing.add(0l);\n          } else {\n            longStringTestMissing.add(1l);\n          }\n          longStringTestStart.add(list2);\n          ArrayList<Float> list3 = new ArrayList<>();\n          if( f != 0.0f ){\n            list3.add(f);\n            floatStringTestMissing.add(0l);\n          } else {\n            floatStringTestMissing.add(1l);\n          }\n          floatStringTestStart.add(list3);\n          ArrayList<Double> list4 = new ArrayList<>();\n          if( d != 0.0d ){\n            list4.add(d);\n            doubleStringTestMissing.add(0l);\n          } else {\n            doubleStringTestMissing.add(1l);\n          }\n          doubleStringTestStart.add(list4);\n          ArrayList<Integer> list5 = new ArrayList<>();\n          if( i != 0 ){\n            list5.add(i);\n            multiStringTestMissing.add(0l);\n          } else {\n            multiStringTestMissing.add(1l);\n          }\n          multiStringTestStart.add(list5);\n        } else {\n          if( i != 0 ) intStringTestStart.get(s-1).add(i); else increment(intStringTestMissing,s-1);\n          if( l != 0l ) longStringTestStart.get(s-1).add(l); else increment(longStringTestMissing,s-1);\n          if( f != 0.0f ) floatStringTestStart.get(s-1).add(f); else increment(floatStringTestMissing,s-1);\n          if( d != 0.0d ) doubleStringTestStart.get(s-1).add(d); else increment(doubleStringTestMissing,s-1);\n          if( i != 0 ) multiStringTestStart.get(s-1).add(i); else increment(multiStringTestMissing,s-1);\n        }\n      }\n      \n      //Strings\n      if( sm != 0 ){\n        if (j-STRINGM<0&&sm!=s) {\n          ArrayList<Integer> list1 = new ArrayList<>();\n          if( i != 0 ){\n            list1.add(i);\n            multiStringTestMissing.add(0l);\n          } else {\n            multiStringTestMissing.add(1l);\n          }\n          multiStringTestStart.add(list1);\n        } else if (sm!=s) {\n          if( i != 0 ) multiStringTestStart.get(sm-1).add(i); else increment(multiStringTestMissing,sm-1);\n        }\n      }\n      \n      //Int\n      if( i != 0 ){\n        if (j-INT<0) {\n          ArrayList<String> list1 = new ArrayList<>();\n          if( dt != 0 ){\n            list1.add((1800+dt) + \"-12-31T23:59:59Z\");\n            dateIntTestMissing.add(0l);\n          } else {\n            dateIntTestMissing.add(1l);\n          }\n          dateIntTestStart.add(list1);\n          ArrayList<String> list2 = new ArrayList<>();\n          if( s != 0 ){\n            list2.add(\"str\"+s);\n            stringIntTestMissing.add(0l);\n          } else {\n            stringIntTestMissing.add(1l);\n          }\n          stringIntTestStart.add(list2);\n        } else {\n          if( dt != 0 ) dateIntTestStart.get(i-1).add((1800+dt) + \"-12-31T23:59:59Z\"); else increment(dateIntTestMissing,i-1);\n          if( s != 0 ) stringIntTestStart.get(i-1).add(\"str\"+s); else increment(stringIntTestMissing,i-1);\n        }\n      }\n      \n      //Long\n      if( l != 0 ){\n        if (j-LONG<0) {\n          ArrayList<String> list1 = new ArrayList<>();\n          if( dt != 0 ){\n            list1.add((1800+dt) + \"-12-31T23:59:59Z\");\n            dateLongTestMissing.add(0l);\n          } else {\n            dateLongTestMissing.add(1l);\n          }\n          dateLongTestStart.add(list1);\n          ArrayList<String> list2 = new ArrayList<>();\n          if( s != 0 ){\n            list2.add(\"str\"+s);\n            stringLongTestMissing.add(0l);\n          } else {\n            stringLongTestMissing.add(1l);\n          }\n          stringLongTestStart.add(list2);\n          ArrayList<Integer> list3 = new ArrayList<>();\n          if( i != 0 ){\n            list3.add(i);\n            multiLongTestMissing.add(0l);\n          } else {\n            multiLongTestMissing.add(1l);\n          }\n          multiLongTestStart.add(list3);\n        } else {\n          if( dt != 0 ) dateLongTestStart.get((int)l-1).add((1800+dt) + \"-12-31T23:59:59Z\"); else increment(dateLongTestMissing,(int)l-1);\n          if( s != 0 ) stringLongTestStart.get((int)l-1).add(\"str\"+s); else increment(stringLongTestMissing,(int)l-1);\n          if( i != 0 ) multiLongTestStart.get((int)l-1).add(i); else increment(multiLongTestMissing,(int)l-1);\n        }\n      }\n      \n      //Long\n      if( lm != 0 ){\n        if (j-LONGM<0&&lm!=l) {\n          ArrayList<Integer> list1 = new ArrayList<>();\n          if( i != 0 ){\n            list1.add(i);\n            multiLongTestMissing.add(0l);\n          } else {\n            multiLongTestMissing.add(1l);\n          }\n          multiLongTestStart.add(list1);\n        } else if (lm!=l) {\n          if( i != 0 ) multiLongTestStart.get((int)lm-1).add(i); else increment( multiLongTestMissing,(int)lm-1);\n        }\n      }\n      \n      if (usually()) {\n        assertU(commit()); // to have several segments\n      }\n    }\n    \n    assertU(commit());\n    String[] reqFacetParamas = fileToStringArr(FieldFacetTest.class, fileName);\n    String[] reqParamas = new String[reqFacetParamas.length + 2];\n    System.arraycopy(reqFacetParamas, 0, reqParamas, 0, reqFacetParamas.length);\n    reqParamas[reqFacetParamas.length] = \"solr\";\n    reqParamas[reqFacetParamas.length+1] = \"asc\";\n    setResponse(h.query(request(reqFacetParamas)));\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    initCore(\"solrconfig-basic.xml\",\"schema-analytics.xml\");\n    h.update(\"<delete><query>*:*</query></delete>\");\n    \n    defaults.put(\"int\", new Integer(0));\n    defaults.put(\"long\", new Long(0));\n    defaults.put(\"float\", new Float(0));\n    defaults.put(\"double\", new Double(0));\n    defaults.put(\"date\", \"1800-12-31T23:59:59Z\");\n    defaults.put(\"string\", \"str0\");\n\n    //INT\n    intDateTestStart = new ArrayList<>();\n    intDateTestMissing = new ArrayList<>();\n    intStringTestStart = new ArrayList<>();\n    intStringTestMissing = new ArrayList<>();\n    \n    //LONG\n    longDateTestStart = new ArrayList<>();\n    longDateTestMissing = new ArrayList<>();\n    longStringTestStart = new ArrayList<>();\n    longStringTestMissing = new ArrayList<>();\n    \n    //FLOAT\n    floatDateTestStart = new ArrayList<>();\n    floatDateTestMissing = new ArrayList<>();\n    floatStringTestStart = new ArrayList<>();\n    floatStringTestMissing = new ArrayList<>();\n    \n    //DOUBLE\n    doubleDateTestStart = new ArrayList<>();\n    doubleDateTestMissing = new ArrayList<>();\n    doubleStringTestStart = new ArrayList<>();\n    doubleStringTestMissing = new ArrayList<>();\n    \n    //DATE\n    dateIntTestStart = new ArrayList<>();\n    dateIntTestMissing = new ArrayList<>();\n    dateLongTestStart = new ArrayList<>();\n    dateLongTestMissing = new ArrayList<>();\n    \n    //String\n    stringIntTestStart = new ArrayList<>();\n    stringIntTestMissing = new ArrayList<>();\n    stringLongTestStart = new ArrayList<>();\n    stringLongTestMissing = new ArrayList<>();\n    \n    //Multi-Valued\n    multiLongTestStart = new ArrayList<>();\n    multiLongTestMissing = new ArrayList<>();\n    multiStringTestStart = new ArrayList<>();\n    multiStringTestMissing = new ArrayList<>();\n    multiDateTestStart = new ArrayList<>();\n    multiDateTestMissing = new ArrayList<>();\n\n    for (int j = 0; j < NUM_LOOPS; ++j) {\n      int i = j%INT;\n      long l = j%LONG;\n      long lm = j%LONGM;\n      float f = j%FLOAT;\n      double d = j%DOUBLE;\n      int dt = j%DATE;\n      int dtm = j%DATEM;\n      int s = j%STRING;\n      int sm = j%STRINGM;\n      if (dt==0 && dtm == 0) {\n        assertU(adoc(filter(\"id\", \"1000\" + j, \"int_id\", \"\" + i, \"long_ld\", \"\" + l, \"float_fd\", \"\" + f, \n          \"double_dd\", \"\" + d,  \"date_dtd\", (1800+dt) + \"-12-31T23:59:59Z\", \"string_sd\", \"str\" + s,\n          \"long_ldm\", \"\" + l, \"long_ldm\", \"\"+lm, \"string_sdm\", \"str\" + s, \"string_sdm\", \"str\"+sm)));\n      } else if (dt == 0) {\n        assertU(adoc(filter(\"id\", \"1000\" + j, \"int_id\", \"\" + i, \"long_ld\", \"\" + l, \"float_fd\", \"\" + f, \n            \"double_dd\", \"\" + d,  \"date_dtd\", (1800+dt) + \"-12-31T23:59:59Z\", \"string_sd\", \"str\" + s,\n            \"long_ldm\", \"\" + l, \"long_ldm\", \"\"+lm, \"string_sdm\", \"str\" + s, \"string_sdm\", \"str\"+sm,\n            \"date_dtdm\", (1800+dtm) + \"-12-31T23:59:59Z\")));\n      } else if (dtm == 0) {\n        assertU(adoc(filter(\"id\", \"1000\" + j, \"int_id\", \"\" + i, \"long_ld\", \"\" + l, \"float_fd\", \"\" + f, \n            \"double_dd\", \"\" + d,  \"date_dtd\", (1800+dt) + \"-12-31T23:59:59Z\", \"string_sd\", \"str\" + s,\n            \"long_ldm\", \"\" + l, \"long_ldm\", \"\"+lm, \"string_sdm\", \"str\" + s, \"string_sdm\", \"str\"+sm,\n            \"date_dtdm\", (1800+dt) + \"-12-31T23:59:59Z\")));\n      } else {\n        assertU(adoc(filter(\"id\", \"1000\" + j, \"int_id\", \"\" + i, \"long_ld\", \"\" + l, \"float_fd\", \"\" + f, \n            \"double_dd\", \"\" + d,  \"date_dtd\", (1800+dt) + \"-12-31T23:59:59Z\", \"string_sd\", \"str\" + s,\n            \"long_ldm\", \"\" + l, \"long_ldm\", \"\"+lm, \"string_sdm\", \"str\" + s, \"string_sdm\", \"str\"+sm,\n            \"date_dtdm\", (1800+dt) + \"-12-31T23:59:59Z\", \"date_dtdm\", (1800+dtm) + \"-12-31T23:59:59Z\")));\n      }\n      \n      if( dt != 0 ){\n        //Dates\n        if (j-DATE<0) {\n          ArrayList<Integer> list1 = new ArrayList<>();\n          if( i != 0 ){\n            list1.add(i);\n            intDateTestMissing.add(0l);\n          } else {\n            intDateTestMissing.add(1l);\n          }\n          intDateTestStart.add(list1);\n          ArrayList<Long> list2 = new ArrayList<>();\n          if( l != 0l ){\n            list2.add(l);\n            longDateTestMissing.add(0l);\n          } else {\n            longDateTestMissing.add(1l);\n          }\n          longDateTestStart.add(list2);\n          ArrayList<Float> list3 = new ArrayList<>();\n          if ( f != 0.0f ){\n            list3.add(f);\n            floatDateTestMissing.add(0l);\n          } else {\n            floatDateTestMissing.add(1l);\n            \n          }\n          floatDateTestStart.add(list3);\n          ArrayList<Double> list4 = new ArrayList<>();\n          if( d != 0.0d ){\n            list4.add(d);\n            doubleDateTestMissing.add(0l);\n          } else {\n            doubleDateTestMissing.add(1l);\n          }\n          doubleDateTestStart.add(list4);\n          ArrayList<Integer> list5 = new ArrayList<>();\n          if( i != 0 ){\n            list5.add(i);\n            multiDateTestMissing.add(0l);\n          } else {\n            multiDateTestMissing.add(1l);\n            \n          }\n          multiDateTestStart.add(list5);\n        } else {\n          if( i != 0 ) intDateTestStart.get(dt-1).add(i); else increment(intDateTestMissing,dt-1);\n          if( l != 0l ) longDateTestStart.get(dt-1).add(l); else increment(longDateTestMissing,dt-1);\n          if( f != 0.0f ) floatDateTestStart.get(dt-1).add(f); else increment(floatDateTestMissing,dt-1);\n          if( d != 0.0d ) doubleDateTestStart.get(dt-1).add(d); else increment(doubleDateTestMissing,dt-1);\n          if( i != 0 ) multiDateTestStart.get(dt-1).add(i); else increment(multiDateTestMissing,dt-1);\n        }\n      }\n      \n      if (j-DATEM<0 && dtm!=dt && dtm!=0) {\n        ArrayList<Integer> list1 = new ArrayList<>();\n        if( i != 0 ){\n          list1.add(i);\n          multiDateTestMissing.add(0l);\n        } else {\n          multiDateTestMissing.add(1l);\n        }\n        multiDateTestStart.add(list1);\n      } else if (dtm!=dt && dtm!=0) {\n        if( i != 0 ) multiDateTestStart.get(dtm-1).add(i);\n      }\n      \n      if( s != 0 ){\n        //Strings\n        if (j-STRING<0) {\n          ArrayList<Integer> list1 = new ArrayList<>();\n          if( i != 0 ){\n            list1.add(i);\n            intStringTestMissing.add(0l);\n          } else {\n            intStringTestMissing.add(1l);\n          }\n          intStringTestStart.add(list1);\n          ArrayList<Long> list2 = new ArrayList<>();\n          if( l != 0l ){\n            list2.add(l);\n            longStringTestMissing.add(0l);\n          } else {\n            longStringTestMissing.add(1l);\n          }\n          longStringTestStart.add(list2);\n          ArrayList<Float> list3 = new ArrayList<>();\n          if( f != 0.0f ){\n            list3.add(f);\n            floatStringTestMissing.add(0l);\n          } else {\n            floatStringTestMissing.add(1l);\n          }\n          floatStringTestStart.add(list3);\n          ArrayList<Double> list4 = new ArrayList<>();\n          if( d != 0.0d ){\n            list4.add(d);\n            doubleStringTestMissing.add(0l);\n          } else {\n            doubleStringTestMissing.add(1l);\n          }\n          doubleStringTestStart.add(list4);\n          ArrayList<Integer> list5 = new ArrayList<>();\n          if( i != 0 ){\n            list5.add(i);\n            multiStringTestMissing.add(0l);\n          } else {\n            multiStringTestMissing.add(1l);\n          }\n          multiStringTestStart.add(list5);\n        } else {\n          if( i != 0 ) intStringTestStart.get(s-1).add(i); else increment(intStringTestMissing,s-1);\n          if( l != 0l ) longStringTestStart.get(s-1).add(l); else increment(longStringTestMissing,s-1);\n          if( f != 0.0f ) floatStringTestStart.get(s-1).add(f); else increment(floatStringTestMissing,s-1);\n          if( d != 0.0d ) doubleStringTestStart.get(s-1).add(d); else increment(doubleStringTestMissing,s-1);\n          if( i != 0 ) multiStringTestStart.get(s-1).add(i); else increment(multiStringTestMissing,s-1);\n        }\n      }\n      \n      //Strings\n      if( sm != 0 ){\n        if (j-STRINGM<0&&sm!=s) {\n          ArrayList<Integer> list1 = new ArrayList<>();\n          if( i != 0 ){\n            list1.add(i);\n            multiStringTestMissing.add(0l);\n          } else {\n            multiStringTestMissing.add(1l);\n          }\n          multiStringTestStart.add(list1);\n        } else if (sm!=s) {\n          if( i != 0 ) multiStringTestStart.get(sm-1).add(i); else increment(multiStringTestMissing,sm-1);\n        }\n      }\n      \n      //Int\n      if( i != 0 ){\n        if (j-INT<0) {\n          ArrayList<String> list1 = new ArrayList<>();\n          if( dt != 0 ){\n            list1.add((1800+dt) + \"-12-31T23:59:59Z\");\n            dateIntTestMissing.add(0l);\n          } else {\n            dateIntTestMissing.add(1l);\n          }\n          dateIntTestStart.add(list1);\n          ArrayList<String> list2 = new ArrayList<>();\n          if( s != 0 ){\n            list2.add(\"str\"+s);\n            stringIntTestMissing.add(0l);\n          } else {\n            stringIntTestMissing.add(1l);\n          }\n          stringIntTestStart.add(list2);\n        } else {\n          if( dt != 0 ) dateIntTestStart.get(i-1).add((1800+dt) + \"-12-31T23:59:59Z\"); else increment(dateIntTestMissing,i-1);\n          if( s != 0 ) stringIntTestStart.get(i-1).add(\"str\"+s); else increment(stringIntTestMissing,i-1);\n        }\n      }\n      \n      //Long\n      if( l != 0 ){\n        if (j-LONG<0) {\n          ArrayList<String> list1 = new ArrayList<>();\n          if( dt != 0 ){\n            list1.add((1800+dt) + \"-12-31T23:59:59Z\");\n            dateLongTestMissing.add(0l);\n          } else {\n            dateLongTestMissing.add(1l);\n          }\n          dateLongTestStart.add(list1);\n          ArrayList<String> list2 = new ArrayList<>();\n          if( s != 0 ){\n            list2.add(\"str\"+s);\n            stringLongTestMissing.add(0l);\n          } else {\n            stringLongTestMissing.add(1l);\n          }\n          stringLongTestStart.add(list2);\n          ArrayList<Integer> list3 = new ArrayList<>();\n          if( i != 0 ){\n            list3.add(i);\n            multiLongTestMissing.add(0l);\n          } else {\n            multiLongTestMissing.add(1l);\n          }\n          multiLongTestStart.add(list3);\n        } else {\n          if( dt != 0 ) dateLongTestStart.get((int)l-1).add((1800+dt) + \"-12-31T23:59:59Z\"); else increment(dateLongTestMissing,(int)l-1);\n          if( s != 0 ) stringLongTestStart.get((int)l-1).add(\"str\"+s); else increment(stringLongTestMissing,(int)l-1);\n          if( i != 0 ) multiLongTestStart.get((int)l-1).add(i); else increment(multiLongTestMissing,(int)l-1);\n        }\n      }\n      \n      //Long\n      if( lm != 0 ){\n        if (j-LONGM<0&&lm!=l) {\n          ArrayList<Integer> list1 = new ArrayList<>();\n          if( i != 0 ){\n            list1.add(i);\n            multiLongTestMissing.add(0l);\n          } else {\n            multiLongTestMissing.add(1l);\n          }\n          multiLongTestStart.add(list1);\n        } else if (lm!=l) {\n          if( i != 0 ) multiLongTestStart.get((int)lm-1).add(i); else increment( multiLongTestMissing,(int)lm-1);\n        }\n      }\n      \n      if (usually()) {\n        assertU(commit()); // to have several segments\n      }\n    }\n    \n    assertU(commit()); \n    setResponse(h.query(request(fileToStringArr(FieldFacetTest.class, fileName))));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f719faa74f7213d4a395510dbc1f1b7cb178484","date":1410881394,"type":5,"author":"Yonik Seeley","isMerge":false,"pathNew":"solr/contrib/analytics/src/test/org/apache/solr/analytics/facet/FieldFacetTest#beforeClass().mjava","pathOld":"solr/core/src/test/org/apache/solr/analytics/facet/FieldFacetTest#beforeClass().mjava","sourceNew":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    initCore(\"solrconfig-basic.xml\",\"schema-analytics.xml\");\n    h.update(\"<delete><query>*:*</query></delete>\");\n    \n    defaults.put(\"int\", new Integer(0));\n    defaults.put(\"long\", new Long(0));\n    defaults.put(\"float\", new Float(0));\n    defaults.put(\"double\", new Double(0));\n    defaults.put(\"date\", \"1800-12-31T23:59:59Z\");\n    defaults.put(\"string\", \"str0\");\n\n    //INT\n    intDateTestStart = new ArrayList<>();\n    intDateTestMissing = new ArrayList<>();\n    intStringTestStart = new ArrayList<>();\n    intStringTestMissing = new ArrayList<>();\n    \n    //LONG\n    longDateTestStart = new ArrayList<>();\n    longDateTestMissing = new ArrayList<>();\n    longStringTestStart = new ArrayList<>();\n    longStringTestMissing = new ArrayList<>();\n    \n    //FLOAT\n    floatDateTestStart = new ArrayList<>();\n    floatDateTestMissing = new ArrayList<>();\n    floatStringTestStart = new ArrayList<>();\n    floatStringTestMissing = new ArrayList<>();\n    \n    //DOUBLE\n    doubleDateTestStart = new ArrayList<>();\n    doubleDateTestMissing = new ArrayList<>();\n    doubleStringTestStart = new ArrayList<>();\n    doubleStringTestMissing = new ArrayList<>();\n    \n    //DATE\n    dateIntTestStart = new ArrayList<>();\n    dateIntTestMissing = new ArrayList<>();\n    dateLongTestStart = new ArrayList<>();\n    dateLongTestMissing = new ArrayList<>();\n    \n    //String\n    stringIntTestStart = new ArrayList<>();\n    stringIntTestMissing = new ArrayList<>();\n    stringLongTestStart = new ArrayList<>();\n    stringLongTestMissing = new ArrayList<>();\n    \n    //Multi-Valued\n    multiLongTestStart = new ArrayList<>();\n    multiLongTestMissing = new ArrayList<>();\n    multiStringTestStart = new ArrayList<>();\n    multiStringTestMissing = new ArrayList<>();\n    multiDateTestStart = new ArrayList<>();\n    multiDateTestMissing = new ArrayList<>();\n\n    for (int j = 0; j < NUM_LOOPS; ++j) {\n      int i = j%INT;\n      long l = j%LONG;\n      long lm = j%LONGM;\n      float f = j%FLOAT;\n      double d = j%DOUBLE;\n      int dt = j%DATE;\n      int dtm = j%DATEM;\n      int s = j%STRING;\n      int sm = j%STRINGM;\n      if (dt==0 && dtm == 0) {\n        assertU(adoc(filter(\"id\", \"1000\" + j, \"int_id\", \"\" + i, \"long_ld\", \"\" + l, \"float_fd\", \"\" + f, \n          \"double_dd\", \"\" + d,  \"date_dtd\", (1800+dt) + \"-12-31T23:59:59Z\", \"string_sd\", \"str\" + s,\n          \"long_ldm\", \"\" + l, \"long_ldm\", \"\"+lm, \"string_sdm\", \"str\" + s, \"string_sdm\", \"str\"+sm)));\n      } else if (dt == 0) {\n        assertU(adoc(filter(\"id\", \"1000\" + j, \"int_id\", \"\" + i, \"long_ld\", \"\" + l, \"float_fd\", \"\" + f, \n            \"double_dd\", \"\" + d,  \"date_dtd\", (1800+dt) + \"-12-31T23:59:59Z\", \"string_sd\", \"str\" + s,\n            \"long_ldm\", \"\" + l, \"long_ldm\", \"\"+lm, \"string_sdm\", \"str\" + s, \"string_sdm\", \"str\"+sm,\n            \"date_dtdm\", (1800+dtm) + \"-12-31T23:59:59Z\")));\n      } else if (dtm == 0) {\n        assertU(adoc(filter(\"id\", \"1000\" + j, \"int_id\", \"\" + i, \"long_ld\", \"\" + l, \"float_fd\", \"\" + f, \n            \"double_dd\", \"\" + d,  \"date_dtd\", (1800+dt) + \"-12-31T23:59:59Z\", \"string_sd\", \"str\" + s,\n            \"long_ldm\", \"\" + l, \"long_ldm\", \"\"+lm, \"string_sdm\", \"str\" + s, \"string_sdm\", \"str\"+sm,\n            \"date_dtdm\", (1800+dt) + \"-12-31T23:59:59Z\")));\n      } else {\n        assertU(adoc(filter(\"id\", \"1000\" + j, \"int_id\", \"\" + i, \"long_ld\", \"\" + l, \"float_fd\", \"\" + f, \n            \"double_dd\", \"\" + d,  \"date_dtd\", (1800+dt) + \"-12-31T23:59:59Z\", \"string_sd\", \"str\" + s,\n            \"long_ldm\", \"\" + l, \"long_ldm\", \"\"+lm, \"string_sdm\", \"str\" + s, \"string_sdm\", \"str\"+sm,\n            \"date_dtdm\", (1800+dt) + \"-12-31T23:59:59Z\", \"date_dtdm\", (1800+dtm) + \"-12-31T23:59:59Z\")));\n      }\n      \n      if( dt != 0 ){\n        //Dates\n        if (j-DATE<0) {\n          ArrayList<Integer> list1 = new ArrayList<>();\n          if( i != 0 ){\n            list1.add(i);\n            intDateTestMissing.add(0l);\n          } else {\n            intDateTestMissing.add(1l);\n          }\n          intDateTestStart.add(list1);\n          ArrayList<Long> list2 = new ArrayList<>();\n          if( l != 0l ){\n            list2.add(l);\n            longDateTestMissing.add(0l);\n          } else {\n            longDateTestMissing.add(1l);\n          }\n          longDateTestStart.add(list2);\n          ArrayList<Float> list3 = new ArrayList<>();\n          if ( f != 0.0f ){\n            list3.add(f);\n            floatDateTestMissing.add(0l);\n          } else {\n            floatDateTestMissing.add(1l);\n            \n          }\n          floatDateTestStart.add(list3);\n          ArrayList<Double> list4 = new ArrayList<>();\n          if( d != 0.0d ){\n            list4.add(d);\n            doubleDateTestMissing.add(0l);\n          } else {\n            doubleDateTestMissing.add(1l);\n          }\n          doubleDateTestStart.add(list4);\n          ArrayList<Integer> list5 = new ArrayList<>();\n          if( i != 0 ){\n            list5.add(i);\n            multiDateTestMissing.add(0l);\n          } else {\n            multiDateTestMissing.add(1l);\n            \n          }\n          multiDateTestStart.add(list5);\n        } else {\n          if( i != 0 ) intDateTestStart.get(dt-1).add(i); else increment(intDateTestMissing,dt-1);\n          if( l != 0l ) longDateTestStart.get(dt-1).add(l); else increment(longDateTestMissing,dt-1);\n          if( f != 0.0f ) floatDateTestStart.get(dt-1).add(f); else increment(floatDateTestMissing,dt-1);\n          if( d != 0.0d ) doubleDateTestStart.get(dt-1).add(d); else increment(doubleDateTestMissing,dt-1);\n          if( i != 0 ) multiDateTestStart.get(dt-1).add(i); else increment(multiDateTestMissing,dt-1);\n        }\n      }\n      \n      if (j-DATEM<0 && dtm!=dt && dtm!=0) {\n        ArrayList<Integer> list1 = new ArrayList<>();\n        if( i != 0 ){\n          list1.add(i);\n          multiDateTestMissing.add(0l);\n        } else {\n          multiDateTestMissing.add(1l);\n        }\n        multiDateTestStart.add(list1);\n      } else if (dtm!=dt && dtm!=0) {\n        if( i != 0 ) multiDateTestStart.get(dtm-1).add(i);\n      }\n      \n      if( s != 0 ){\n        //Strings\n        if (j-STRING<0) {\n          ArrayList<Integer> list1 = new ArrayList<>();\n          if( i != 0 ){\n            list1.add(i);\n            intStringTestMissing.add(0l);\n          } else {\n            intStringTestMissing.add(1l);\n          }\n          intStringTestStart.add(list1);\n          ArrayList<Long> list2 = new ArrayList<>();\n          if( l != 0l ){\n            list2.add(l);\n            longStringTestMissing.add(0l);\n          } else {\n            longStringTestMissing.add(1l);\n          }\n          longStringTestStart.add(list2);\n          ArrayList<Float> list3 = new ArrayList<>();\n          if( f != 0.0f ){\n            list3.add(f);\n            floatStringTestMissing.add(0l);\n          } else {\n            floatStringTestMissing.add(1l);\n          }\n          floatStringTestStart.add(list3);\n          ArrayList<Double> list4 = new ArrayList<>();\n          if( d != 0.0d ){\n            list4.add(d);\n            doubleStringTestMissing.add(0l);\n          } else {\n            doubleStringTestMissing.add(1l);\n          }\n          doubleStringTestStart.add(list4);\n          ArrayList<Integer> list5 = new ArrayList<>();\n          if( i != 0 ){\n            list5.add(i);\n            multiStringTestMissing.add(0l);\n          } else {\n            multiStringTestMissing.add(1l);\n          }\n          multiStringTestStart.add(list5);\n        } else {\n          if( i != 0 ) intStringTestStart.get(s-1).add(i); else increment(intStringTestMissing,s-1);\n          if( l != 0l ) longStringTestStart.get(s-1).add(l); else increment(longStringTestMissing,s-1);\n          if( f != 0.0f ) floatStringTestStart.get(s-1).add(f); else increment(floatStringTestMissing,s-1);\n          if( d != 0.0d ) doubleStringTestStart.get(s-1).add(d); else increment(doubleStringTestMissing,s-1);\n          if( i != 0 ) multiStringTestStart.get(s-1).add(i); else increment(multiStringTestMissing,s-1);\n        }\n      }\n      \n      //Strings\n      if( sm != 0 ){\n        if (j-STRINGM<0&&sm!=s) {\n          ArrayList<Integer> list1 = new ArrayList<>();\n          if( i != 0 ){\n            list1.add(i);\n            multiStringTestMissing.add(0l);\n          } else {\n            multiStringTestMissing.add(1l);\n          }\n          multiStringTestStart.add(list1);\n        } else if (sm!=s) {\n          if( i != 0 ) multiStringTestStart.get(sm-1).add(i); else increment(multiStringTestMissing,sm-1);\n        }\n      }\n      \n      //Int\n      if( i != 0 ){\n        if (j-INT<0) {\n          ArrayList<String> list1 = new ArrayList<>();\n          if( dt != 0 ){\n            list1.add((1800+dt) + \"-12-31T23:59:59Z\");\n            dateIntTestMissing.add(0l);\n          } else {\n            dateIntTestMissing.add(1l);\n          }\n          dateIntTestStart.add(list1);\n          ArrayList<String> list2 = new ArrayList<>();\n          if( s != 0 ){\n            list2.add(\"str\"+s);\n            stringIntTestMissing.add(0l);\n          } else {\n            stringIntTestMissing.add(1l);\n          }\n          stringIntTestStart.add(list2);\n        } else {\n          if( dt != 0 ) dateIntTestStart.get(i-1).add((1800+dt) + \"-12-31T23:59:59Z\"); else increment(dateIntTestMissing,i-1);\n          if( s != 0 ) stringIntTestStart.get(i-1).add(\"str\"+s); else increment(stringIntTestMissing,i-1);\n        }\n      }\n      \n      //Long\n      if( l != 0 ){\n        if (j-LONG<0) {\n          ArrayList<String> list1 = new ArrayList<>();\n          if( dt != 0 ){\n            list1.add((1800+dt) + \"-12-31T23:59:59Z\");\n            dateLongTestMissing.add(0l);\n          } else {\n            dateLongTestMissing.add(1l);\n          }\n          dateLongTestStart.add(list1);\n          ArrayList<String> list2 = new ArrayList<>();\n          if( s != 0 ){\n            list2.add(\"str\"+s);\n            stringLongTestMissing.add(0l);\n          } else {\n            stringLongTestMissing.add(1l);\n          }\n          stringLongTestStart.add(list2);\n          ArrayList<Integer> list3 = new ArrayList<>();\n          if( i != 0 ){\n            list3.add(i);\n            multiLongTestMissing.add(0l);\n          } else {\n            multiLongTestMissing.add(1l);\n          }\n          multiLongTestStart.add(list3);\n        } else {\n          if( dt != 0 ) dateLongTestStart.get((int)l-1).add((1800+dt) + \"-12-31T23:59:59Z\"); else increment(dateLongTestMissing,(int)l-1);\n          if( s != 0 ) stringLongTestStart.get((int)l-1).add(\"str\"+s); else increment(stringLongTestMissing,(int)l-1);\n          if( i != 0 ) multiLongTestStart.get((int)l-1).add(i); else increment(multiLongTestMissing,(int)l-1);\n        }\n      }\n      \n      //Long\n      if( lm != 0 ){\n        if (j-LONGM<0&&lm!=l) {\n          ArrayList<Integer> list1 = new ArrayList<>();\n          if( i != 0 ){\n            list1.add(i);\n            multiLongTestMissing.add(0l);\n          } else {\n            multiLongTestMissing.add(1l);\n          }\n          multiLongTestStart.add(list1);\n        } else if (lm!=l) {\n          if( i != 0 ) multiLongTestStart.get((int)lm-1).add(i); else increment( multiLongTestMissing,(int)lm-1);\n        }\n      }\n      \n      if (usually()) {\n        assertU(commit()); // to have several segments\n      }\n    }\n    \n    assertU(commit());\n    String[] reqFacetParamas = fileToStringArr(FieldFacetTest.class, fileName);\n    String[] reqParamas = new String[reqFacetParamas.length + 2];\n    System.arraycopy(reqFacetParamas, 0, reqParamas, 0, reqFacetParamas.length);\n    reqParamas[reqFacetParamas.length] = \"solr\";\n    reqParamas[reqFacetParamas.length+1] = \"asc\";\n    setResponse(h.query(request(reqFacetParamas)));\n  }\n\n","sourceOld":"  @BeforeClass\n  public static void beforeClass() throws Exception {\n    initCore(\"solrconfig-basic.xml\",\"schema-analytics.xml\");\n    h.update(\"<delete><query>*:*</query></delete>\");\n    \n    defaults.put(\"int\", new Integer(0));\n    defaults.put(\"long\", new Long(0));\n    defaults.put(\"float\", new Float(0));\n    defaults.put(\"double\", new Double(0));\n    defaults.put(\"date\", \"1800-12-31T23:59:59Z\");\n    defaults.put(\"string\", \"str0\");\n\n    //INT\n    intDateTestStart = new ArrayList<>();\n    intDateTestMissing = new ArrayList<>();\n    intStringTestStart = new ArrayList<>();\n    intStringTestMissing = new ArrayList<>();\n    \n    //LONG\n    longDateTestStart = new ArrayList<>();\n    longDateTestMissing = new ArrayList<>();\n    longStringTestStart = new ArrayList<>();\n    longStringTestMissing = new ArrayList<>();\n    \n    //FLOAT\n    floatDateTestStart = new ArrayList<>();\n    floatDateTestMissing = new ArrayList<>();\n    floatStringTestStart = new ArrayList<>();\n    floatStringTestMissing = new ArrayList<>();\n    \n    //DOUBLE\n    doubleDateTestStart = new ArrayList<>();\n    doubleDateTestMissing = new ArrayList<>();\n    doubleStringTestStart = new ArrayList<>();\n    doubleStringTestMissing = new ArrayList<>();\n    \n    //DATE\n    dateIntTestStart = new ArrayList<>();\n    dateIntTestMissing = new ArrayList<>();\n    dateLongTestStart = new ArrayList<>();\n    dateLongTestMissing = new ArrayList<>();\n    \n    //String\n    stringIntTestStart = new ArrayList<>();\n    stringIntTestMissing = new ArrayList<>();\n    stringLongTestStart = new ArrayList<>();\n    stringLongTestMissing = new ArrayList<>();\n    \n    //Multi-Valued\n    multiLongTestStart = new ArrayList<>();\n    multiLongTestMissing = new ArrayList<>();\n    multiStringTestStart = new ArrayList<>();\n    multiStringTestMissing = new ArrayList<>();\n    multiDateTestStart = new ArrayList<>();\n    multiDateTestMissing = new ArrayList<>();\n\n    for (int j = 0; j < NUM_LOOPS; ++j) {\n      int i = j%INT;\n      long l = j%LONG;\n      long lm = j%LONGM;\n      float f = j%FLOAT;\n      double d = j%DOUBLE;\n      int dt = j%DATE;\n      int dtm = j%DATEM;\n      int s = j%STRING;\n      int sm = j%STRINGM;\n      if (dt==0 && dtm == 0) {\n        assertU(adoc(filter(\"id\", \"1000\" + j, \"int_id\", \"\" + i, \"long_ld\", \"\" + l, \"float_fd\", \"\" + f, \n          \"double_dd\", \"\" + d,  \"date_dtd\", (1800+dt) + \"-12-31T23:59:59Z\", \"string_sd\", \"str\" + s,\n          \"long_ldm\", \"\" + l, \"long_ldm\", \"\"+lm, \"string_sdm\", \"str\" + s, \"string_sdm\", \"str\"+sm)));\n      } else if (dt == 0) {\n        assertU(adoc(filter(\"id\", \"1000\" + j, \"int_id\", \"\" + i, \"long_ld\", \"\" + l, \"float_fd\", \"\" + f, \n            \"double_dd\", \"\" + d,  \"date_dtd\", (1800+dt) + \"-12-31T23:59:59Z\", \"string_sd\", \"str\" + s,\n            \"long_ldm\", \"\" + l, \"long_ldm\", \"\"+lm, \"string_sdm\", \"str\" + s, \"string_sdm\", \"str\"+sm,\n            \"date_dtdm\", (1800+dtm) + \"-12-31T23:59:59Z\")));\n      } else if (dtm == 0) {\n        assertU(adoc(filter(\"id\", \"1000\" + j, \"int_id\", \"\" + i, \"long_ld\", \"\" + l, \"float_fd\", \"\" + f, \n            \"double_dd\", \"\" + d,  \"date_dtd\", (1800+dt) + \"-12-31T23:59:59Z\", \"string_sd\", \"str\" + s,\n            \"long_ldm\", \"\" + l, \"long_ldm\", \"\"+lm, \"string_sdm\", \"str\" + s, \"string_sdm\", \"str\"+sm,\n            \"date_dtdm\", (1800+dt) + \"-12-31T23:59:59Z\")));\n      } else {\n        assertU(adoc(filter(\"id\", \"1000\" + j, \"int_id\", \"\" + i, \"long_ld\", \"\" + l, \"float_fd\", \"\" + f, \n            \"double_dd\", \"\" + d,  \"date_dtd\", (1800+dt) + \"-12-31T23:59:59Z\", \"string_sd\", \"str\" + s,\n            \"long_ldm\", \"\" + l, \"long_ldm\", \"\"+lm, \"string_sdm\", \"str\" + s, \"string_sdm\", \"str\"+sm,\n            \"date_dtdm\", (1800+dt) + \"-12-31T23:59:59Z\", \"date_dtdm\", (1800+dtm) + \"-12-31T23:59:59Z\")));\n      }\n      \n      if( dt != 0 ){\n        //Dates\n        if (j-DATE<0) {\n          ArrayList<Integer> list1 = new ArrayList<>();\n          if( i != 0 ){\n            list1.add(i);\n            intDateTestMissing.add(0l);\n          } else {\n            intDateTestMissing.add(1l);\n          }\n          intDateTestStart.add(list1);\n          ArrayList<Long> list2 = new ArrayList<>();\n          if( l != 0l ){\n            list2.add(l);\n            longDateTestMissing.add(0l);\n          } else {\n            longDateTestMissing.add(1l);\n          }\n          longDateTestStart.add(list2);\n          ArrayList<Float> list3 = new ArrayList<>();\n          if ( f != 0.0f ){\n            list3.add(f);\n            floatDateTestMissing.add(0l);\n          } else {\n            floatDateTestMissing.add(1l);\n            \n          }\n          floatDateTestStart.add(list3);\n          ArrayList<Double> list4 = new ArrayList<>();\n          if( d != 0.0d ){\n            list4.add(d);\n            doubleDateTestMissing.add(0l);\n          } else {\n            doubleDateTestMissing.add(1l);\n          }\n          doubleDateTestStart.add(list4);\n          ArrayList<Integer> list5 = new ArrayList<>();\n          if( i != 0 ){\n            list5.add(i);\n            multiDateTestMissing.add(0l);\n          } else {\n            multiDateTestMissing.add(1l);\n            \n          }\n          multiDateTestStart.add(list5);\n        } else {\n          if( i != 0 ) intDateTestStart.get(dt-1).add(i); else increment(intDateTestMissing,dt-1);\n          if( l != 0l ) longDateTestStart.get(dt-1).add(l); else increment(longDateTestMissing,dt-1);\n          if( f != 0.0f ) floatDateTestStart.get(dt-1).add(f); else increment(floatDateTestMissing,dt-1);\n          if( d != 0.0d ) doubleDateTestStart.get(dt-1).add(d); else increment(doubleDateTestMissing,dt-1);\n          if( i != 0 ) multiDateTestStart.get(dt-1).add(i); else increment(multiDateTestMissing,dt-1);\n        }\n      }\n      \n      if (j-DATEM<0 && dtm!=dt && dtm!=0) {\n        ArrayList<Integer> list1 = new ArrayList<>();\n        if( i != 0 ){\n          list1.add(i);\n          multiDateTestMissing.add(0l);\n        } else {\n          multiDateTestMissing.add(1l);\n        }\n        multiDateTestStart.add(list1);\n      } else if (dtm!=dt && dtm!=0) {\n        if( i != 0 ) multiDateTestStart.get(dtm-1).add(i);\n      }\n      \n      if( s != 0 ){\n        //Strings\n        if (j-STRING<0) {\n          ArrayList<Integer> list1 = new ArrayList<>();\n          if( i != 0 ){\n            list1.add(i);\n            intStringTestMissing.add(0l);\n          } else {\n            intStringTestMissing.add(1l);\n          }\n          intStringTestStart.add(list1);\n          ArrayList<Long> list2 = new ArrayList<>();\n          if( l != 0l ){\n            list2.add(l);\n            longStringTestMissing.add(0l);\n          } else {\n            longStringTestMissing.add(1l);\n          }\n          longStringTestStart.add(list2);\n          ArrayList<Float> list3 = new ArrayList<>();\n          if( f != 0.0f ){\n            list3.add(f);\n            floatStringTestMissing.add(0l);\n          } else {\n            floatStringTestMissing.add(1l);\n          }\n          floatStringTestStart.add(list3);\n          ArrayList<Double> list4 = new ArrayList<>();\n          if( d != 0.0d ){\n            list4.add(d);\n            doubleStringTestMissing.add(0l);\n          } else {\n            doubleStringTestMissing.add(1l);\n          }\n          doubleStringTestStart.add(list4);\n          ArrayList<Integer> list5 = new ArrayList<>();\n          if( i != 0 ){\n            list5.add(i);\n            multiStringTestMissing.add(0l);\n          } else {\n            multiStringTestMissing.add(1l);\n          }\n          multiStringTestStart.add(list5);\n        } else {\n          if( i != 0 ) intStringTestStart.get(s-1).add(i); else increment(intStringTestMissing,s-1);\n          if( l != 0l ) longStringTestStart.get(s-1).add(l); else increment(longStringTestMissing,s-1);\n          if( f != 0.0f ) floatStringTestStart.get(s-1).add(f); else increment(floatStringTestMissing,s-1);\n          if( d != 0.0d ) doubleStringTestStart.get(s-1).add(d); else increment(doubleStringTestMissing,s-1);\n          if( i != 0 ) multiStringTestStart.get(s-1).add(i); else increment(multiStringTestMissing,s-1);\n        }\n      }\n      \n      //Strings\n      if( sm != 0 ){\n        if (j-STRINGM<0&&sm!=s) {\n          ArrayList<Integer> list1 = new ArrayList<>();\n          if( i != 0 ){\n            list1.add(i);\n            multiStringTestMissing.add(0l);\n          } else {\n            multiStringTestMissing.add(1l);\n          }\n          multiStringTestStart.add(list1);\n        } else if (sm!=s) {\n          if( i != 0 ) multiStringTestStart.get(sm-1).add(i); else increment(multiStringTestMissing,sm-1);\n        }\n      }\n      \n      //Int\n      if( i != 0 ){\n        if (j-INT<0) {\n          ArrayList<String> list1 = new ArrayList<>();\n          if( dt != 0 ){\n            list1.add((1800+dt) + \"-12-31T23:59:59Z\");\n            dateIntTestMissing.add(0l);\n          } else {\n            dateIntTestMissing.add(1l);\n          }\n          dateIntTestStart.add(list1);\n          ArrayList<String> list2 = new ArrayList<>();\n          if( s != 0 ){\n            list2.add(\"str\"+s);\n            stringIntTestMissing.add(0l);\n          } else {\n            stringIntTestMissing.add(1l);\n          }\n          stringIntTestStart.add(list2);\n        } else {\n          if( dt != 0 ) dateIntTestStart.get(i-1).add((1800+dt) + \"-12-31T23:59:59Z\"); else increment(dateIntTestMissing,i-1);\n          if( s != 0 ) stringIntTestStart.get(i-1).add(\"str\"+s); else increment(stringIntTestMissing,i-1);\n        }\n      }\n      \n      //Long\n      if( l != 0 ){\n        if (j-LONG<0) {\n          ArrayList<String> list1 = new ArrayList<>();\n          if( dt != 0 ){\n            list1.add((1800+dt) + \"-12-31T23:59:59Z\");\n            dateLongTestMissing.add(0l);\n          } else {\n            dateLongTestMissing.add(1l);\n          }\n          dateLongTestStart.add(list1);\n          ArrayList<String> list2 = new ArrayList<>();\n          if( s != 0 ){\n            list2.add(\"str\"+s);\n            stringLongTestMissing.add(0l);\n          } else {\n            stringLongTestMissing.add(1l);\n          }\n          stringLongTestStart.add(list2);\n          ArrayList<Integer> list3 = new ArrayList<>();\n          if( i != 0 ){\n            list3.add(i);\n            multiLongTestMissing.add(0l);\n          } else {\n            multiLongTestMissing.add(1l);\n          }\n          multiLongTestStart.add(list3);\n        } else {\n          if( dt != 0 ) dateLongTestStart.get((int)l-1).add((1800+dt) + \"-12-31T23:59:59Z\"); else increment(dateLongTestMissing,(int)l-1);\n          if( s != 0 ) stringLongTestStart.get((int)l-1).add(\"str\"+s); else increment(stringLongTestMissing,(int)l-1);\n          if( i != 0 ) multiLongTestStart.get((int)l-1).add(i); else increment(multiLongTestMissing,(int)l-1);\n        }\n      }\n      \n      //Long\n      if( lm != 0 ){\n        if (j-LONGM<0&&lm!=l) {\n          ArrayList<Integer> list1 = new ArrayList<>();\n          if( i != 0 ){\n            list1.add(i);\n            multiLongTestMissing.add(0l);\n          } else {\n            multiLongTestMissing.add(1l);\n          }\n          multiLongTestStart.add(list1);\n        } else if (lm!=l) {\n          if( i != 0 ) multiLongTestStart.get((int)lm-1).add(i); else increment( multiLongTestMissing,(int)lm-1);\n        }\n      }\n      \n      if (usually()) {\n        assertU(commit()); // to have several segments\n      }\n    }\n    \n    assertU(commit());\n    String[] reqFacetParamas = fileToStringArr(FieldFacetTest.class, fileName);\n    String[] reqParamas = new String[reqFacetParamas.length + 2];\n    System.arraycopy(reqFacetParamas, 0, reqParamas, 0, reqFacetParamas.length);\n    reqParamas[reqFacetParamas.length] = \"solr\";\n    reqParamas[reqFacetParamas.length+1] = \"asc\";\n    setResponse(h.query(request(reqFacetParamas)));\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5eb2511ababf862ea11e10761c70ee560cd84510":["634f330c54fd3f9f491d52036dc3f40b4f4d8934","645e9dc687d04dbe961b35c0f3a305c48e892615"],"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["a475a1c165e02515bff766b3b7be0c42edf1870c"],"a475a1c165e02515bff766b3b7be0c42edf1870c":["404b171beda23ddce9e45366a3dbd6444d8d029c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","1c0586e0570de2261142e339891d57c0f36f45c6"],"645e9dc687d04dbe961b35c0f3a305c48e892615":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"ff403346522eaa9de75403763e297e83a3ea585c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"404b171beda23ddce9e45366a3dbd6444d8d029c":["1c0586e0570de2261142e339891d57c0f36f45c6"],"0f719faa74f7213d4a395510dbc1f1b7cb178484":["645e9dc687d04dbe961b35c0f3a305c48e892615"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0f719faa74f7213d4a395510dbc1f1b7cb178484"],"1c0586e0570de2261142e339891d57c0f36f45c6":["ff403346522eaa9de75403763e297e83a3ea585c"]},"commit2Childs":{"5eb2511ababf862ea11e10761c70ee560cd84510":[],"634f330c54fd3f9f491d52036dc3f40b4f4d8934":["5eb2511ababf862ea11e10761c70ee560cd84510","645e9dc687d04dbe961b35c0f3a305c48e892615"],"a475a1c165e02515bff766b3b7be0c42edf1870c":["634f330c54fd3f9f491d52036dc3f40b4f4d8934"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["74f45af4339b0daf7a95c820ab88c1aea74fbce0","ff403346522eaa9de75403763e297e83a3ea585c"],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":[],"645e9dc687d04dbe961b35c0f3a305c48e892615":["5eb2511ababf862ea11e10761c70ee560cd84510","0f719faa74f7213d4a395510dbc1f1b7cb178484"],"ff403346522eaa9de75403763e297e83a3ea585c":["1c0586e0570de2261142e339891d57c0f36f45c6"],"404b171beda23ddce9e45366a3dbd6444d8d029c":["a475a1c165e02515bff766b3b7be0c42edf1870c"],"0f719faa74f7213d4a395510dbc1f1b7cb178484":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"1c0586e0570de2261142e339891d57c0f36f45c6":["74f45af4339b0daf7a95c820ab88c1aea74fbce0","404b171beda23ddce9e45366a3dbd6444d8d029c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5eb2511ababf862ea11e10761c70ee560cd84510","74f45af4339b0daf7a95c820ab88c1aea74fbce0","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}