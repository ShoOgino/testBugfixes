{"path":"backwards/src/java/org/apache/lucene/search/Searcher#search(Query,Filter,int,Sort).mjava","commits":[{"id":"480d01e5b0ef8efb136d51670fec297ae5ae2c9c","date":1268821447,"type":0,"author":"Uwe Schindler","isMerge":false,"pathNew":"backwards/src/java/org/apache/lucene/search/Searcher#search(Query,Filter,int,Sort).mjava","pathOld":"/dev/null","sourceNew":"  /** Search implementation with arbitrary sorting.  Finds\n   * the top <code>n</code> hits for <code>query</code>, applying\n   * <code>filter</code> if non-null, and sorting the hits by the criteria in\n   * <code>sort</code>.\n   * \n   * <p>NOTE: this does not compute scores by default; use\n   * {@link IndexSearcher#setDefaultFieldSortScoring} to\n   * enable scoring.\n   *\n   * @throws BooleanQuery.TooManyClauses\n   */\n  public TopFieldDocs search(Query query, Filter filter, int n,\n                             Sort sort) throws IOException {\n    return search(createWeight(query), filter, n, sort);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/backwards/src/java/org/apache/lucene/search/Searcher#search(Query,Filter,int,Sort).mjava","pathOld":"backwards/src/java/org/apache/lucene/search/Searcher#search(Query,Filter,int,Sort).mjava","sourceNew":"  /** Search implementation with arbitrary sorting.  Finds\n   * the top <code>n</code> hits for <code>query</code>, applying\n   * <code>filter</code> if non-null, and sorting the hits by the criteria in\n   * <code>sort</code>.\n   * \n   * <p>NOTE: this does not compute scores by default; use\n   * {@link IndexSearcher#setDefaultFieldSortScoring} to\n   * enable scoring.\n   *\n   * @throws BooleanQuery.TooManyClauses\n   */\n  public TopFieldDocs search(Query query, Filter filter, int n,\n                             Sort sort) throws IOException {\n    return search(createWeight(query), filter, n, sort);\n  }\n\n","sourceOld":"  /** Search implementation with arbitrary sorting.  Finds\n   * the top <code>n</code> hits for <code>query</code>, applying\n   * <code>filter</code> if non-null, and sorting the hits by the criteria in\n   * <code>sort</code>.\n   * \n   * <p>NOTE: this does not compute scores by default; use\n   * {@link IndexSearcher#setDefaultFieldSortScoring} to\n   * enable scoring.\n   *\n   * @throws BooleanQuery.TooManyClauses\n   */\n  public TopFieldDocs search(Query query, Filter filter, int n,\n                             Sort sort) throws IOException {\n    return search(createWeight(query), filter, n, sort);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"]},"commit2Childs":{"480d01e5b0ef8efb136d51670fec297ae5ae2c9c":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["480d01e5b0ef8efb136d51670fec297ae5ae2c9c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}