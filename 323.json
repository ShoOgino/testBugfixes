{"path":"solr/core/src/test/org/apache/solr/search/TestPseudoReturnFields#testAugmentersAndExplicitRTG().mjava","commits":[{"id":"934e1c7ca2823f3ec2758cc0f0912eac404856f2","date":1467837741,"type":0,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestPseudoReturnFields#testAugmentersAndExplicitRTG().mjava","pathOld":"/dev/null","sourceNew":"  public void testAugmentersAndExplicitRTG() throws Exception {\n    // behavior shouldn't matter if we are committed or uncommitted\n    for (String id : Arrays.asList(\"42\",\"99\")) {\n      // NOTE: once testDocIdAugmenterRTG can pass, [docid] should be tested here as well.\n      for (SolrParams p : Arrays.asList(params(\"fl\",\"id,[explain],x_alias:[value v=10 t=int]\"),\n                                        params(\"fl\",\"id\",\"fl\",\"[explain],x_alias:[value v=10 t=int]\"),\n                                        params(\"fl\",\"id\",\"fl\",\"[explain]\",\"fl\",\"x_alias:[value v=10 t=int]\"))) {\n        assertQ(id + \": \" + p,\n                req(p, \"qt\",\"/get\",\"id\",id, \"wt\",\"xml\")\n                ,\"count(//doc)=1\"\n                ,\"//doc/str[@name='id']\"\n                // ,\"//doc/int[@name='[docid]']\" // TODO\n                // RTG: [explain] should be missing (ignored)\n                ,\"//doc/int[@name='x_alias'][.=10]\"\n                \n                ,\"//doc[count(*)=2]\"\n              );\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["26624d6ff6e4b87874022addc79be7e89af6b7b6","136796946c32863f11b97ebec6b4091cdfe3a20b"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"2e2d8ac9caa35c5cd821607e718a4ca4aff08d40","date":1468272906,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestPseudoReturnFields#testAugmentersAndExplicitRTG().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestPseudoReturnFields#testAugmentersAndExplicitRTG().mjava","sourceNew":"  public void testAugmentersAndExplicitRTG() throws Exception {\n    // behavior shouldn't matter if we are committed or uncommitted\n    for (String id : Arrays.asList(\"42\",\"99\")) {\n      // NOTE: once testDocIdAugmenterRTG can pass, [docid] should be tested here as well.\n      // NOTE: once testFunctionsAndScoreRTG can pass, abs(val_i) should be tested here as well\n      for (SolrParams p : Arrays.asList(params(\"fl\",\"id,[explain],x_alias:[value v=10 t=int]\"),\n                                        params(\"fl\",\"id\",\"fl\",\"[explain],x_alias:[value v=10 t=int]\"),\n                                        params(\"fl\",\"id\",\"fl\",\"[explain]\",\"fl\",\"x_alias:[value v=10 t=int]\"))) {\n        assertQ(id + \": \" + p,\n                req(p, \"qt\",\"/get\",\"id\",id, \"wt\",\"xml\")\n                ,\"count(//doc)=1\"\n                ,\"//doc/str[@name='id']\"\n                // ,\"//doc/int[@name='[docid]']\" // TODO\n                // ,\"//doc/gloat[@name='abs(val_i)']\" // TODO\n                // RTG: [explain] should be missing (ignored)\n                ,\"//doc/int[@name='x_alias'][.=10]\"\n                \n                ,\"//doc[count(*)=2]\"\n              );\n      }\n    }\n  }\n\n","sourceOld":"  public void testAugmentersAndExplicitRTG() throws Exception {\n    // behavior shouldn't matter if we are committed or uncommitted\n    for (String id : Arrays.asList(\"42\",\"99\")) {\n      // NOTE: once testDocIdAugmenterRTG can pass, [docid] should be tested here as well.\n      for (SolrParams p : Arrays.asList(params(\"fl\",\"id,[explain],x_alias:[value v=10 t=int]\"),\n                                        params(\"fl\",\"id\",\"fl\",\"[explain],x_alias:[value v=10 t=int]\"),\n                                        params(\"fl\",\"id\",\"fl\",\"[explain]\",\"fl\",\"x_alias:[value v=10 t=int]\"))) {\n        assertQ(id + \": \" + p,\n                req(p, \"qt\",\"/get\",\"id\",id, \"wt\",\"xml\")\n                ,\"count(//doc)=1\"\n                ,\"//doc/str[@name='id']\"\n                // ,\"//doc/int[@name='[docid]']\" // TODO\n                // RTG: [explain] should be missing (ignored)\n                ,\"//doc/int[@name='x_alias'][.=10]\"\n                \n                ,\"//doc[count(*)=2]\"\n              );\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":["136796946c32863f11b97ebec6b4091cdfe3a20b"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"136796946c32863f11b97ebec6b4091cdfe3a20b","date":1468862468,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestPseudoReturnFields#testAugmentersAndExplicitRTG().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestPseudoReturnFields#testAugmentersAndExplicitRTG().mjava","sourceNew":"  public void testAugmentersAndExplicitRTG() throws Exception {\n    // behavior shouldn't matter if we are committed or uncommitted\n    for (String id : Arrays.asList(\"42\",\"99\")) {\n      // NOTE: once testDocIdAugmenterRTG can pass, [docid] should be tested here as well.\n      for (SolrParams p : Arrays.asList\n             (params(\"fl\",\"id,[explain],x_alias:[value v=10 t=int],abs(val_i)\"),\n              params(\"fl\",\"id,abs(val_i)\",\"fl\",\"[explain],x_alias:[value v=10 t=int]\"),\n              params(\"fl\",\"id\",\"fl\",\"[explain]\",\"fl\",\"x_alias:[value v=10 t=int]\",\"fl\",\"abs(val_i)\"))) {\n        assertQ(id + \": \" + p,\n                req(p, \"qt\",\"/get\",\"id\",id, \"wt\",\"xml\")\n                ,\"count(//doc)=1\"\n                ,\"//doc/str[@name='id']\"\n                // ,\"//doc/int[@name='[docid]']\" // TODO\n                ,\"//doc/float[@name='abs(val_i)'][.='1.0']\"\n                // RTG: [explain] should be missing (ignored)\n                ,\"//doc/int[@name='x_alias'][.=10]\"\n                \n                ,\"//doc[count(*)=3]\"\n              );\n      }\n    }\n  }\n\n","sourceOld":"  public void testAugmentersAndExplicitRTG() throws Exception {\n    // behavior shouldn't matter if we are committed or uncommitted\n    for (String id : Arrays.asList(\"42\",\"99\")) {\n      // NOTE: once testDocIdAugmenterRTG can pass, [docid] should be tested here as well.\n      // NOTE: once testFunctionsAndScoreRTG can pass, abs(val_i) should be tested here as well\n      for (SolrParams p : Arrays.asList(params(\"fl\",\"id,[explain],x_alias:[value v=10 t=int]\"),\n                                        params(\"fl\",\"id\",\"fl\",\"[explain],x_alias:[value v=10 t=int]\"),\n                                        params(\"fl\",\"id\",\"fl\",\"[explain]\",\"fl\",\"x_alias:[value v=10 t=int]\"))) {\n        assertQ(id + \": \" + p,\n                req(p, \"qt\",\"/get\",\"id\",id, \"wt\",\"xml\")\n                ,\"count(//doc)=1\"\n                ,\"//doc/str[@name='id']\"\n                // ,\"//doc/int[@name='[docid]']\" // TODO\n                // ,\"//doc/gloat[@name='abs(val_i)']\" // TODO\n                // RTG: [explain] should be missing (ignored)\n                ,\"//doc/int[@name='x_alias'][.=10]\"\n                \n                ,\"//doc[count(*)=2]\"\n              );\n      }\n    }\n  }\n\n","bugFix":["934e1c7ca2823f3ec2758cc0f0912eac404856f2","2e2d8ac9caa35c5cd821607e718a4ca4aff08d40"],"bugIntro":["26624d6ff6e4b87874022addc79be7e89af6b7b6"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"26624d6ff6e4b87874022addc79be7e89af6b7b6","date":1468950645,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestPseudoReturnFields#testAugmentersAndExplicitRTG().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestPseudoReturnFields#testAugmentersAndExplicitRTG().mjava","sourceNew":"  public void testAugmentersAndExplicitRTG() throws Exception {\n    // behavior shouldn't matter if we are committed or uncommitted\n    for (String id : Arrays.asList(\"42\",\"99\")) {\n      for (SolrParams p : Arrays.asList\n             (params(\"fl\",\"id,[docid],[explain],x_alias:[value v=10 t=int],abs(val_i)\"),\n              params(\"fl\",\"id,[docid],abs(val_i)\",\"fl\",\"[explain],x_alias:[value v=10 t=int]\"),\n              params(\"fl\",\"id\",\"fl\",\"[docid]\",\"fl\",\"[explain]\",\"fl\",\"x_alias:[value v=10 t=int]\",\"fl\",\"abs(val_i)\"))) {\n        assertQ(id + \": \" + p,\n                req(p, \"qt\",\"/get\",\"id\",id, \"wt\",\"xml\")\n                ,\"count(//doc)=1\"\n                ,\"//doc/str[@name='id']\"\n                ,\"//doc/int[@name='[docid]'][.>=-1]\"\n                ,\"//doc/float[@name='abs(val_i)'][.='1.0']\"\n                // RTG: [explain] should be missing (ignored)\n                ,\"//doc/int[@name='x_alias'][.=10]\"\n                \n                ,\"//doc[count(*)=4]\"\n              );\n      }\n    }\n  }\n\n","sourceOld":"  public void testAugmentersAndExplicitRTG() throws Exception {\n    // behavior shouldn't matter if we are committed or uncommitted\n    for (String id : Arrays.asList(\"42\",\"99\")) {\n      // NOTE: once testDocIdAugmenterRTG can pass, [docid] should be tested here as well.\n      for (SolrParams p : Arrays.asList\n             (params(\"fl\",\"id,[explain],x_alias:[value v=10 t=int],abs(val_i)\"),\n              params(\"fl\",\"id,abs(val_i)\",\"fl\",\"[explain],x_alias:[value v=10 t=int]\"),\n              params(\"fl\",\"id\",\"fl\",\"[explain]\",\"fl\",\"x_alias:[value v=10 t=int]\",\"fl\",\"abs(val_i)\"))) {\n        assertQ(id + \": \" + p,\n                req(p, \"qt\",\"/get\",\"id\",id, \"wt\",\"xml\")\n                ,\"count(//doc)=1\"\n                ,\"//doc/str[@name='id']\"\n                // ,\"//doc/int[@name='[docid]']\" // TODO\n                ,\"//doc/float[@name='abs(val_i)'][.='1.0']\"\n                // RTG: [explain] should be missing (ignored)\n                ,\"//doc/int[@name='x_alias'][.=10]\"\n                \n                ,\"//doc[count(*)=3]\"\n              );\n      }\n    }\n  }\n\n","bugFix":["934e1c7ca2823f3ec2758cc0f0912eac404856f2","136796946c32863f11b97ebec6b4091cdfe3a20b"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/search/TestPseudoReturnFields#testAugmentersAndExplicitRTG().mjava","pathOld":"/dev/null","sourceNew":"  public void testAugmentersAndExplicitRTG() throws Exception {\n    // behavior shouldn't matter if we are committed or uncommitted\n    for (String id : Arrays.asList(\"42\",\"99\")) {\n      for (SolrParams p : Arrays.asList\n             (params(\"fl\",\"id,[docid],[explain],x_alias:[value v=10 t=int],abs(val_i)\"),\n              params(\"fl\",\"id,[docid],abs(val_i)\",\"fl\",\"[explain],x_alias:[value v=10 t=int]\"),\n              params(\"fl\",\"id\",\"fl\",\"[docid]\",\"fl\",\"[explain]\",\"fl\",\"x_alias:[value v=10 t=int]\",\"fl\",\"abs(val_i)\"))) {\n        assertQ(id + \": \" + p,\n                req(p, \"qt\",\"/get\",\"id\",id, \"wt\",\"xml\")\n                ,\"count(//doc)=1\"\n                ,\"//doc/str[@name='id']\"\n                ,\"//doc/int[@name='[docid]'][.>=-1]\"\n                ,\"//doc/float[@name='abs(val_i)'][.='1.0']\"\n                // RTG: [explain] should be missing (ignored)\n                ,\"//doc/int[@name='x_alias'][.=10]\"\n                \n                ,\"//doc[count(*)=4]\"\n              );\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"934e1c7ca2823f3ec2758cc0f0912eac404856f2":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"26624d6ff6e4b87874022addc79be7e89af6b7b6":["136796946c32863f11b97ebec6b4091cdfe3a20b"],"136796946c32863f11b97ebec6b4091cdfe3a20b":["2e2d8ac9caa35c5cd821607e718a4ca4aff08d40"],"2e2d8ac9caa35c5cd821607e718a4ca4aff08d40":["934e1c7ca2823f3ec2758cc0f0912eac404856f2"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","26624d6ff6e4b87874022addc79be7e89af6b7b6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["26624d6ff6e4b87874022addc79be7e89af6b7b6"]},"commit2Childs":{"934e1c7ca2823f3ec2758cc0f0912eac404856f2":["2e2d8ac9caa35c5cd821607e718a4ca4aff08d40"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["934e1c7ca2823f3ec2758cc0f0912eac404856f2","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"26624d6ff6e4b87874022addc79be7e89af6b7b6":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"136796946c32863f11b97ebec6b4091cdfe3a20b":["26624d6ff6e4b87874022addc79be7e89af6b7b6"],"2e2d8ac9caa35c5cd821607e718a4ca4aff08d40":["136796946c32863f11b97ebec6b4091cdfe3a20b"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}