{"path":"lucene/src/java/org/apache/lucene/index/DocFieldProcessor#docValuesConsumer(DocState,FieldInfo,FieldInfos).mjava","commits":[{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/DocFieldProcessor#docValuesConsumer(DocState,FieldInfo,FieldInfos).mjava","pathOld":"/dev/null","sourceNew":"  DocValuesConsumer docValuesConsumer(DocState docState, FieldInfo fieldInfo, FieldInfos infos) \n      throws IOException {\n    DocValuesConsumer docValuesConsumer = docValues.get(fieldInfo.name);\n    if (docValuesConsumer != null) {\n      return docValuesConsumer;\n    }\n    PerDocConsumer perDocConsumer = perDocConsumers.get(fieldInfo.getCodecId());\n    if (perDocConsumer == null) {\n      PerDocWriteState perDocWriteState = docState.docWriter.newPerDocWriteState(fieldInfo.getCodecId());\n      SegmentCodecs codecs = perDocWriteState.segmentCodecs;\n      assert codecs.codecs.length > fieldInfo.getCodecId();\n      \n      Codec codec = codecs.codecs[fieldInfo.getCodecId()];\n      perDocConsumer = codec.docsConsumer(perDocWriteState);\n      perDocConsumers.put(Integer.valueOf(fieldInfo.getCodecId()), perDocConsumer);\n    }\n    docValuesConsumer = perDocConsumer.addValuesField(fieldInfo);\n    docValues.put(fieldInfo.name, docValuesConsumer);\n    return docValuesConsumer;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["594a11fd830b89fd08a253593d8e5062e20f5564"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"5ebb742ffd3fae76a577a68de595d711f43e6944","date":1305546231,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/DocFieldProcessor#docValuesConsumer(DocState,FieldInfo).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/DocFieldProcessor#docValuesConsumer(DocState,FieldInfo,FieldInfos).mjava","sourceNew":"  DocValuesConsumer docValuesConsumer(DocState docState, FieldInfo fieldInfo) \n      throws IOException {\n    DocValuesConsumer docValuesConsumer = docValues.get(fieldInfo.name);\n    if (docValuesConsumer != null) {\n      return docValuesConsumer;\n    }\n    PerDocConsumer perDocConsumer = perDocConsumers.get(fieldInfo.getCodecId());\n    if (perDocConsumer == null) {\n      PerDocWriteState perDocWriteState = docState.docWriter.newPerDocWriteState(fieldInfo.getCodecId());\n      SegmentCodecs codecs = perDocWriteState.segmentCodecs;\n      assert codecs.codecs.length > fieldInfo.getCodecId();\n      Codec codec = codecs.codecs[fieldInfo.getCodecId()];\n      perDocConsumer = codec.docsConsumer(perDocWriteState);\n      perDocConsumers.put(Integer.valueOf(fieldInfo.getCodecId()), perDocConsumer);\n    }\n    docValuesConsumer = perDocConsumer.addValuesField(fieldInfo);\n    fieldInfo.commitDocValues();\n    docValues.put(fieldInfo.name, docValuesConsumer);\n    return docValuesConsumer;\n  }\n\n","sourceOld":"  DocValuesConsumer docValuesConsumer(DocState docState, FieldInfo fieldInfo, FieldInfos infos) \n      throws IOException {\n    DocValuesConsumer docValuesConsumer = docValues.get(fieldInfo.name);\n    if (docValuesConsumer != null) {\n      return docValuesConsumer;\n    }\n    PerDocConsumer perDocConsumer = perDocConsumers.get(fieldInfo.getCodecId());\n    if (perDocConsumer == null) {\n      PerDocWriteState perDocWriteState = docState.docWriter.newPerDocWriteState(fieldInfo.getCodecId());\n      SegmentCodecs codecs = perDocWriteState.segmentCodecs;\n      assert codecs.codecs.length > fieldInfo.getCodecId();\n      \n      Codec codec = codecs.codecs[fieldInfo.getCodecId()];\n      perDocConsumer = codec.docsConsumer(perDocWriteState);\n      perDocConsumers.put(Integer.valueOf(fieldInfo.getCodecId()), perDocConsumer);\n    }\n    docValuesConsumer = perDocConsumer.addValuesField(fieldInfo);\n    docValues.put(fieldInfo.name, docValuesConsumer);\n    return docValuesConsumer;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"5ebb742ffd3fae76a577a68de595d711f43e6944":["135621f3a0670a9394eb563224a3b76cc4dddc0f"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"5ebb742ffd3fae76a577a68de595d711f43e6944":[],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["5ebb742ffd3fae76a577a68de595d711f43e6944"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["135621f3a0670a9394eb563224a3b76cc4dddc0f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["5ebb742ffd3fae76a577a68de595d711f43e6944","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}