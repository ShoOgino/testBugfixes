{"path":"src/java/org/apache/lucene/util/PriorityQueue#insert(T).mjava","commits":[{"id":"8d48430886f0d62ca63d20bf2a8bc01acee0c12f","date":1254504483,"type":1,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/util/PriorityQueue#insert(T).mjava","pathOld":"src/java/org/apache/lucene/util/PriorityQueue#insert(Object).mjava","sourceNew":"  /**\n   * Adds element to the PriorityQueue in log(size) time if either the\n   * PriorityQueue is not full, or not lessThan(element, top()).\n   * \n   * @param element\n   * @return true if element is added, false otherwise.\n   * @deprecated use {@link #insertWithOverflow(T)} instead, which\n   *             encourages objects reuse.\n   */\n  public boolean insert(T element) {\n    return insertWithOverflow(element) != element;\n  }\n\n","sourceOld":"  /**\n   * Adds element to the PriorityQueue in log(size) time if either the\n   * PriorityQueue is not full, or not lessThan(element, top()).\n   * \n   * @param element\n   * @return true if element is added, false otherwise.\n   * @deprecated use {@link #insertWithOverflow(Object)} instead, which\n   *             encourages objects reuse.\n   */\n  public boolean insert(Object element) {\n    return insertWithOverflow(element) != element;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0731e137bcbb58121034de6ddaa67332fbe6e5d1","date":1255233265,"type":4,"author":"Michael Busch","isMerge":false,"pathNew":"/dev/null","pathOld":"src/java/org/apache/lucene/util/PriorityQueue#insert(T).mjava","sourceNew":null,"sourceOld":"  /**\n   * Adds element to the PriorityQueue in log(size) time if either the\n   * PriorityQueue is not full, or not lessThan(element, top()).\n   * \n   * @param element\n   * @return true if element is added, false otherwise.\n   * @deprecated use {@link #insertWithOverflow(T)} instead, which\n   *             encourages objects reuse.\n   */\n  public boolean insert(T element) {\n    return insertWithOverflow(element) != element;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"0731e137bcbb58121034de6ddaa67332fbe6e5d1":["8d48430886f0d62ca63d20bf2a8bc01acee0c12f"],"8d48430886f0d62ca63d20bf2a8bc01acee0c12f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0731e137bcbb58121034de6ddaa67332fbe6e5d1"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["8d48430886f0d62ca63d20bf2a8bc01acee0c12f"],"0731e137bcbb58121034de6ddaa67332fbe6e5d1":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"8d48430886f0d62ca63d20bf2a8bc01acee0c12f":["0731e137bcbb58121034de6ddaa67332fbe6e5d1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}