{"path":"solr/core/src/java/org/apache/solr/cloud/api/collections/CreateAliasCmd#validateAllCollectionsExistAndNoDups(List[String],ZkStateReader).mjava","commits":[{"id":"6146c07c0dee1ae1e42926167acd127fed5ef59d","date":1516129420,"type":1,"author":"Varun Thacker","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/api/collections/CreateAliasCmd#validateAllCollectionsExistAndNoDups(List[String],ZkStateReader).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/CreateAliasCmd#validateAllCollectionsExistAndNoDups(List[String],ZkStateReader).mjava","sourceNew":"  private void validateAllCollectionsExistAndNoDups(List<String> collectionList, ZkStateReader zkStateReader) {\n    final String collectionStr = StrUtils.join(collectionList, ',');\n\n    if (new HashSet<>(collectionList).size() != collectionList.size()) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n          String.format(Locale.ROOT,  \"Can't create collection alias for collections='%s', since it contains duplicates\", collectionStr));\n    }\n    ClusterState clusterState = zkStateReader.getClusterState();\n    Set<String> aliasNames = zkStateReader.getAliases().getCollectionAliasListMap().keySet();\n    for (String collection : collectionList) {\n      if (clusterState.getCollectionOrNull(collection) == null && !aliasNames.contains(collection)) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n            String.format(Locale.ROOT,  \"Can't create collection alias for collections='%s', '%s' is not an existing collection or alias\", collectionStr, collection));\n      }\n    }\n  }\n\n","sourceOld":"  private void validateAllCollectionsExistAndNoDups(List<String> collectionList, ZkStateReader zkStateReader) {\n    final String collectionStr = StrUtils.join(collectionList, ',');\n\n    if (new HashSet<>(collectionList).size() != collectionList.size()) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n          String.format(Locale.ROOT,  \"Can't create collection alias for collections='%s', since it contains duplicates\", collectionStr));\n    }\n    ClusterState clusterState = zkStateReader.getClusterState();\n    Set<String> aliasNames = zkStateReader.getAliases().getCollectionAliasListMap().keySet();\n    for (String collection : collectionList) {\n      if (clusterState.getCollectionOrNull(collection) == null && !aliasNames.contains(collection)) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n            String.format(Locale.ROOT,  \"Can't create collection alias for collections='%s', '%s' is not an existing collection or alias\", collectionStr, collection));\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b94236357aaa22b76c10629851fe4e376e0cea82","date":1516710914,"type":1,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/cloud/api/collections/CreateAliasCmd#validateAllCollectionsExistAndNoDups(List[String],ZkStateReader).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/CreateAliasCmd#validateAllCollectionsExistAndNoDups(List[String],ZkStateReader).mjava","sourceNew":"  private void validateAllCollectionsExistAndNoDups(List<String> collectionList, ZkStateReader zkStateReader) {\n    final String collectionStr = StrUtils.join(collectionList, ',');\n\n    if (new HashSet<>(collectionList).size() != collectionList.size()) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n          String.format(Locale.ROOT,  \"Can't create collection alias for collections='%s', since it contains duplicates\", collectionStr));\n    }\n    ClusterState clusterState = zkStateReader.getClusterState();\n    Set<String> aliasNames = zkStateReader.getAliases().getCollectionAliasListMap().keySet();\n    for (String collection : collectionList) {\n      if (clusterState.getCollectionOrNull(collection) == null && !aliasNames.contains(collection)) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n            String.format(Locale.ROOT,  \"Can't create collection alias for collections='%s', '%s' is not an existing collection or alias\", collectionStr, collection));\n      }\n    }\n  }\n\n","sourceOld":"  private void validateAllCollectionsExistAndNoDups(List<String> collectionList, ZkStateReader zkStateReader) {\n    final String collectionStr = StrUtils.join(collectionList, ',');\n\n    if (new HashSet<>(collectionList).size() != collectionList.size()) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n          String.format(Locale.ROOT,  \"Can't create collection alias for collections='%s', since it contains duplicates\", collectionStr));\n    }\n    ClusterState clusterState = zkStateReader.getClusterState();\n    Set<String> aliasNames = zkStateReader.getAliases().getCollectionAliasListMap().keySet();\n    for (String collection : collectionList) {\n      if (clusterState.getCollectionOrNull(collection) == null && !aliasNames.contains(collection)) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n            String.format(Locale.ROOT,  \"Can't create collection alias for collections='%s', '%s' is not an existing collection or alias\", collectionStr, collection));\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6857f8205f8c5b4ff39a54d8aebb4fdfb7cfb691","date":1516909549,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/api/collections/CreateAliasCmd#validateAllCollectionsExistAndNoDups(List[String],ZkStateReader).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/api/collections/CreateAliasCmd#validateAllCollectionsExistAndNoDups(List[String],ZkStateReader).mjava","sourceNew":"  private void validateAllCollectionsExistAndNoDups(List<String> collectionList, ZkStateReader zkStateReader) {\n    final String collectionStr = StrUtils.join(collectionList, ',');\n\n    if (new HashSet<>(collectionList).size() != collectionList.size()) {\n      throw new SolrException(BAD_REQUEST,\n          String.format(Locale.ROOT,  \"Can't create collection alias for collections='%s', since it contains duplicates\", collectionStr));\n    }\n    ClusterState clusterState = zkStateReader.getClusterState();\n    Set<String> aliasNames = zkStateReader.getAliases().getCollectionAliasListMap().keySet();\n    for (String collection : collectionList) {\n      if (clusterState.getCollectionOrNull(collection) == null && !aliasNames.contains(collection)) {\n        throw new SolrException(BAD_REQUEST,\n            String.format(Locale.ROOT,  \"Can't create collection alias for collections='%s', '%s' is not an existing collection or alias\", collectionStr, collection));\n      }\n    }\n  }\n\n","sourceOld":"  private void validateAllCollectionsExistAndNoDups(List<String> collectionList, ZkStateReader zkStateReader) {\n    final String collectionStr = StrUtils.join(collectionList, ',');\n\n    if (new HashSet<>(collectionList).size() != collectionList.size()) {\n      throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n          String.format(Locale.ROOT,  \"Can't create collection alias for collections='%s', since it contains duplicates\", collectionStr));\n    }\n    ClusterState clusterState = zkStateReader.getClusterState();\n    Set<String> aliasNames = zkStateReader.getAliases().getCollectionAliasListMap().keySet();\n    for (String collection : collectionList) {\n      if (clusterState.getCollectionOrNull(collection) == null && !aliasNames.contains(collection)) {\n        throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n            String.format(Locale.ROOT,  \"Can't create collection alias for collections='%s', '%s' is not an existing collection or alias\", collectionStr, collection));\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b627755385655c7cd3fb296f17593658805cf4d5","date":1552455143,"type":5,"author":"Gus Heck","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/api/collections/CreateAliasCmd#validateAllCollectionsExistAndNoDuplicates(List[String],ZkStateReader).mjava","pathOld":"solr/core/src/java/org/apache/solr/cloud/api/collections/CreateAliasCmd#validateAllCollectionsExistAndNoDups(List[String],ZkStateReader).mjava","sourceNew":"  private void validateAllCollectionsExistAndNoDuplicates(List<String> collectionList, ZkStateReader zkStateReader) {\n    final String collectionStr = StrUtils.join(collectionList, ',');\n\n    if (new HashSet<>(collectionList).size() != collectionList.size()) {\n      throw new SolrException(BAD_REQUEST,\n          String.format(Locale.ROOT,  \"Can't create collection alias for collections='%s', since it contains duplicates\", collectionStr));\n    }\n    ClusterState clusterState = zkStateReader.getClusterState();\n    Set<String> aliasNames = zkStateReader.getAliases().getCollectionAliasListMap().keySet();\n    for (String collection : collectionList) {\n      if (clusterState.getCollectionOrNull(collection) == null && !aliasNames.contains(collection)) {\n        throw new SolrException(BAD_REQUEST,\n            String.format(Locale.ROOT,  \"Can't create collection alias for collections='%s', '%s' is not an existing collection or alias\", collectionStr, collection));\n      }\n    }\n  }\n\n","sourceOld":"  private void validateAllCollectionsExistAndNoDups(List<String> collectionList, ZkStateReader zkStateReader) {\n    final String collectionStr = StrUtils.join(collectionList, ',');\n\n    if (new HashSet<>(collectionList).size() != collectionList.size()) {\n      throw new SolrException(BAD_REQUEST,\n          String.format(Locale.ROOT,  \"Can't create collection alias for collections='%s', since it contains duplicates\", collectionStr));\n    }\n    ClusterState clusterState = zkStateReader.getClusterState();\n    Set<String> aliasNames = zkStateReader.getAliases().getCollectionAliasListMap().keySet();\n    for (String collection : collectionList) {\n      if (clusterState.getCollectionOrNull(collection) == null && !aliasNames.contains(collection)) {\n        throw new SolrException(BAD_REQUEST,\n            String.format(Locale.ROOT,  \"Can't create collection alias for collections='%s', '%s' is not an existing collection or alias\", collectionStr, collection));\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b94236357aaa22b76c10629851fe4e376e0cea82":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","6146c07c0dee1ae1e42926167acd127fed5ef59d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b627755385655c7cd3fb296f17593658805cf4d5":["6857f8205f8c5b4ff39a54d8aebb4fdfb7cfb691"],"6146c07c0dee1ae1e42926167acd127fed5ef59d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"6857f8205f8c5b4ff39a54d8aebb4fdfb7cfb691":["b94236357aaa22b76c10629851fe4e376e0cea82"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b627755385655c7cd3fb296f17593658805cf4d5"]},"commit2Childs":{"b94236357aaa22b76c10629851fe4e376e0cea82":["6857f8205f8c5b4ff39a54d8aebb4fdfb7cfb691"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b94236357aaa22b76c10629851fe4e376e0cea82","6146c07c0dee1ae1e42926167acd127fed5ef59d"],"6146c07c0dee1ae1e42926167acd127fed5ef59d":["b94236357aaa22b76c10629851fe4e376e0cea82"],"b627755385655c7cd3fb296f17593658805cf4d5":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"6857f8205f8c5b4ff39a54d8aebb4fdfb7cfb691":["b627755385655c7cd3fb296f17593658805cf4d5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}