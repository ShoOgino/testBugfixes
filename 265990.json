{"path":"solr/core/src/test/org/apache/solr/cloud/autoscaling/sim/SimCloudManager#createCluster(ClusterState,TimeSource).mjava","commits":[{"id":"1d4bf9d5308dfef350829c28f2b3b2648df1e9b1","date":1513252583,"type":0,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/autoscaling/sim/SimCloudManager#createCluster(ClusterState,TimeSource).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Create a cluster initialized from the provided cluster state.\n   * @param initialState existing cluster state\n   * @param timeSource time source\n   * @return instance of simulated cluster with the same layout as the provided cluster state.\n   */\n  public static SimCloudManager createCluster(ClusterState initialState, TimeSource timeSource) throws Exception {\n    SimCloudManager cloudManager = new SimCloudManager(timeSource);\n    cloudManager.getSimClusterStateProvider().simSetClusterState(initialState);\n    for (String node : cloudManager.getClusterStateProvider().getLiveNodes()) {\n      cloudManager.getSimNodeStateProvider().simSetNodeValues(node, createNodeValues(node));\n    }\n    return cloudManager;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9ef8d00dbfbeb534eba8a219a5df9d99b2de6ab5","date":1556572478,"type":5,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/cloud/autoscaling/sim/SimCloudManager#createCluster(ClusterState,TimeSource).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/autoscaling/sim/SimCloudManager#createCluster(ClusterState,TimeSource).mjava","sourceNew":"  /**\n   * Create a cluster initialized from the provided cluster state.\n   * @param initialState existing cluster state\n   * @param timeSource time source\n   * @return instance of simulated cluster with the same layout as the provided cluster state.\n   */\n  public static SimCloudManager createCluster(ClusterState initialState, TimeSource timeSource) throws Exception {\n    SimCloudManager cloudManager = new SimCloudManager(timeSource);\n    cloudManager.getSimClusterStateProvider().simSetClusterState(initialState);\n    for (String node : cloudManager.getClusterStateProvider().getLiveNodes()) {\n      cloudManager.getSimNodeStateProvider().simSetNodeValues(node, createNodeValues(node));\n    }\n    return cloudManager;\n  }\n\n","sourceOld":"  /**\n   * Create a cluster initialized from the provided cluster state.\n   * @param initialState existing cluster state\n   * @param timeSource time source\n   * @return instance of simulated cluster with the same layout as the provided cluster state.\n   */\n  public static SimCloudManager createCluster(ClusterState initialState, TimeSource timeSource) throws Exception {\n    SimCloudManager cloudManager = new SimCloudManager(timeSource);\n    cloudManager.getSimClusterStateProvider().simSetClusterState(initialState);\n    for (String node : cloudManager.getClusterStateProvider().getLiveNodes()) {\n      cloudManager.getSimNodeStateProvider().simSetNodeValues(node, createNodeValues(node));\n    }\n    return cloudManager;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9ef8d00dbfbeb534eba8a219a5df9d99b2de6ab5":["1d4bf9d5308dfef350829c28f2b3b2648df1e9b1"],"1d4bf9d5308dfef350829c28f2b3b2648df1e9b1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9ef8d00dbfbeb534eba8a219a5df9d99b2de6ab5"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1d4bf9d5308dfef350829c28f2b3b2648df1e9b1"],"9ef8d00dbfbeb534eba8a219a5df9d99b2de6ab5":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"1d4bf9d5308dfef350829c28f2b3b2648df1e9b1":["9ef8d00dbfbeb534eba8a219a5df9d99b2de6ab5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}