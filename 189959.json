{"path":"lucene/queries/src/java/org/apache/lucene/queries/function/valuesource/RangeMapFloatFunction#getValues(Map,LeafReaderContext).mjava","commits":[{"id":"c9fb5f46e264daf5ba3860defe623a89d202dd87","date":1411516315,"type":0,"author":"Ryan Ernst","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/function/valuesource/RangeMapFloatFunction#getValues(Map,LeafReaderContext).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public FunctionValues getValues(Map context, LeafReaderContext readerContext) throws IOException {\n    final FunctionValues vals =  source.getValues(context, readerContext);\n    final FunctionValues targets = target.getValues(context, readerContext);\n    final FunctionValues defaults = (this.defaultVal == null) ? null : defaultVal.getValues(context, readerContext);\n    return new FloatDocValues(this) {\n      @Override\n      public float floatVal(int doc) {\n        float val = vals.floatVal(doc);\n        return (val>=min && val<=max) ? targets.floatVal(doc) : (defaultVal == null ? val : defaults.floatVal(doc));\n      }\n      @Override\n      public String toString(int doc) {\n        return \"map(\" + vals.toString(doc) + \",min=\" + min + \",max=\" + max + \",target=\" + targets.toString(doc) + \")\";\n      }\n    };\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["a924dfeede13519417b3bb2ccda42205b3751165"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"a924dfeede13519417b3bb2ccda42205b3751165","date":1447189983,"type":3,"author":"Jan HÃ¸ydahl","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/function/valuesource/RangeMapFloatFunction#getValues(Map,LeafReaderContext).mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/function/valuesource/RangeMapFloatFunction#getValues(Map,LeafReaderContext).mjava","sourceNew":"  @Override\n  public FunctionValues getValues(Map context, LeafReaderContext readerContext) throws IOException {\n    final FunctionValues vals =  source.getValues(context, readerContext);\n    final FunctionValues targets = target.getValues(context, readerContext);\n    final FunctionValues defaults = (this.defaultVal == null) ? null : defaultVal.getValues(context, readerContext);\n    return new FloatDocValues(this) {\n      @Override\n      public float floatVal(int doc) {\n        float val = vals.floatVal(doc);\n        return (val>=min && val<=max) ? targets.floatVal(doc) : (defaultVal == null ? val : defaults.floatVal(doc));\n      }\n      @Override\n      public String toString(int doc) {\n        return \"map(\" + vals.toString(doc) + \",min=\" + min + \",max=\" + max + \",target=\" + targets.toString(doc) + \",defaultVal=\" + (defaults == null ? \"null\" : (defaults.toString(doc))) + \")\";\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public FunctionValues getValues(Map context, LeafReaderContext readerContext) throws IOException {\n    final FunctionValues vals =  source.getValues(context, readerContext);\n    final FunctionValues targets = target.getValues(context, readerContext);\n    final FunctionValues defaults = (this.defaultVal == null) ? null : defaultVal.getValues(context, readerContext);\n    return new FloatDocValues(this) {\n      @Override\n      public float floatVal(int doc) {\n        float val = vals.floatVal(doc);\n        return (val>=min && val<=max) ? targets.floatVal(doc) : (defaultVal == null ? val : defaults.floatVal(doc));\n      }\n      @Override\n      public String toString(int doc) {\n        return \"map(\" + vals.toString(doc) + \",min=\" + min + \",max=\" + max + \",target=\" + targets.toString(doc) + \")\";\n      }\n    };\n  }\n\n","bugFix":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6652c74b2358a0b13223817a6a793bf1c9d0749d","date":1474465301,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/function/valuesource/RangeMapFloatFunction#getValues(Map,LeafReaderContext).mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/function/valuesource/RangeMapFloatFunction#getValues(Map,LeafReaderContext).mjava","sourceNew":"  @Override\n  public FunctionValues getValues(Map context, LeafReaderContext readerContext) throws IOException {\n    final FunctionValues vals =  source.getValues(context, readerContext);\n    final FunctionValues targets = target.getValues(context, readerContext);\n    final FunctionValues defaults = (this.defaultVal == null) ? null : defaultVal.getValues(context, readerContext);\n    return new FloatDocValues(this) {\n      @Override\n      public float floatVal(int doc) throws IOException {\n        float val = vals.floatVal(doc);\n        return (val>=min && val<=max) ? targets.floatVal(doc) : (defaultVal == null ? val : defaults.floatVal(doc));\n      }\n      @Override\n      public String toString(int doc) throws IOException {\n        return \"map(\" + vals.toString(doc) + \",min=\" + min + \",max=\" + max + \",target=\" + targets.toString(doc) + \",defaultVal=\" + (defaults == null ? \"null\" : (defaults.toString(doc))) + \")\";\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public FunctionValues getValues(Map context, LeafReaderContext readerContext) throws IOException {\n    final FunctionValues vals =  source.getValues(context, readerContext);\n    final FunctionValues targets = target.getValues(context, readerContext);\n    final FunctionValues defaults = (this.defaultVal == null) ? null : defaultVal.getValues(context, readerContext);\n    return new FloatDocValues(this) {\n      @Override\n      public float floatVal(int doc) {\n        float val = vals.floatVal(doc);\n        return (val>=min && val<=max) ? targets.floatVal(doc) : (defaultVal == null ? val : defaults.floatVal(doc));\n      }\n      @Override\n      public String toString(int doc) {\n        return \"map(\" + vals.toString(doc) + \",min=\" + min + \",max=\" + max + \",target=\" + targets.toString(doc) + \",defaultVal=\" + (defaults == null ? \"null\" : (defaults.toString(doc))) + \")\";\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17e5da53e4e5bd659e22add9bba1cfa222e7e30d","date":1475435902,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/function/valuesource/RangeMapFloatFunction#getValues(Map,LeafReaderContext).mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/function/valuesource/RangeMapFloatFunction#getValues(Map,LeafReaderContext).mjava","sourceNew":"  @Override\n  public FunctionValues getValues(Map context, LeafReaderContext readerContext) throws IOException {\n    final FunctionValues vals =  source.getValues(context, readerContext);\n    final FunctionValues targets = target.getValues(context, readerContext);\n    final FunctionValues defaults = (this.defaultVal == null) ? null : defaultVal.getValues(context, readerContext);\n    return new FloatDocValues(this) {\n      @Override\n      public float floatVal(int doc) throws IOException {\n        float val = vals.floatVal(doc);\n        return (val>=min && val<=max) ? targets.floatVal(doc) : (defaultVal == null ? val : defaults.floatVal(doc));\n      }\n      @Override\n      public String toString(int doc) throws IOException {\n        return \"map(\" + vals.toString(doc) + \",min=\" + min + \",max=\" + max + \",target=\" + targets.toString(doc) + \",defaultVal=\" + (defaults == null ? \"null\" : (defaults.toString(doc))) + \")\";\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public FunctionValues getValues(Map context, LeafReaderContext readerContext) throws IOException {\n    final FunctionValues vals =  source.getValues(context, readerContext);\n    final FunctionValues targets = target.getValues(context, readerContext);\n    final FunctionValues defaults = (this.defaultVal == null) ? null : defaultVal.getValues(context, readerContext);\n    return new FloatDocValues(this) {\n      @Override\n      public float floatVal(int doc) {\n        float val = vals.floatVal(doc);\n        return (val>=min && val<=max) ? targets.floatVal(doc) : (defaultVal == null ? val : defaults.floatVal(doc));\n      }\n      @Override\n      public String toString(int doc) {\n        return \"map(\" + vals.toString(doc) + \",min=\" + min + \",max=\" + max + \",target=\" + targets.toString(doc) + \",defaultVal=\" + (defaults == null ? \"null\" : (defaults.toString(doc))) + \")\";\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/function/valuesource/RangeMapFloatFunction#getValues(Map,LeafReaderContext).mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/function/valuesource/RangeMapFloatFunction#getValues(Map,LeafReaderContext).mjava","sourceNew":"  @Override\n  public FunctionValues getValues(Map context, LeafReaderContext readerContext) throws IOException {\n    final FunctionValues vals =  source.getValues(context, readerContext);\n    final FunctionValues targets = target.getValues(context, readerContext);\n    final FunctionValues defaults = (this.defaultVal == null) ? null : defaultVal.getValues(context, readerContext);\n    return new FloatDocValues(this) {\n      @Override\n      public float floatVal(int doc) throws IOException {\n        float val = vals.floatVal(doc);\n        return (val>=min && val<=max) ? targets.floatVal(doc) : (defaultVal == null ? val : defaults.floatVal(doc));\n      }\n      @Override\n      public String toString(int doc) throws IOException {\n        return \"map(\" + vals.toString(doc) + \",min=\" + min + \",max=\" + max + \",target=\" + targets.toString(doc) + \",defaultVal=\" + (defaults == null ? \"null\" : (defaults.toString(doc))) + \")\";\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public FunctionValues getValues(Map context, LeafReaderContext readerContext) throws IOException {\n    final FunctionValues vals =  source.getValues(context, readerContext);\n    final FunctionValues targets = target.getValues(context, readerContext);\n    final FunctionValues defaults = (this.defaultVal == null) ? null : defaultVal.getValues(context, readerContext);\n    return new FloatDocValues(this) {\n      @Override\n      public float floatVal(int doc) {\n        float val = vals.floatVal(doc);\n        return (val>=min && val<=max) ? targets.floatVal(doc) : (defaultVal == null ? val : defaults.floatVal(doc));\n      }\n      @Override\n      public String toString(int doc) {\n        return \"map(\" + vals.toString(doc) + \",min=\" + min + \",max=\" + max + \",target=\" + targets.toString(doc) + \",defaultVal=\" + (defaults == null ? \"null\" : (defaults.toString(doc))) + \")\";\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f95c0e33e58652b2a4d8560c8297dbe86ff5b1f2","date":1591961131,"type":5,"author":"Michael Sokolov","isMerge":false,"pathNew":"lucene/queries/src/java/org/apache/lucene/queries/function/valuesource/RangeMapFloatFunction#getValues(Map[Object,Object],LeafReaderContext).mjava","pathOld":"lucene/queries/src/java/org/apache/lucene/queries/function/valuesource/RangeMapFloatFunction#getValues(Map,LeafReaderContext).mjava","sourceNew":"  @Override\n  public FunctionValues getValues(Map<Object, Object> context, LeafReaderContext readerContext) throws IOException {\n    final FunctionValues vals =  source.getValues(context, readerContext);\n    final FunctionValues targets = target.getValues(context, readerContext);\n    final FunctionValues defaults = (this.defaultVal == null) ? null : defaultVal.getValues(context, readerContext);\n    return new FloatDocValues(this) {\n      @Override\n      public float floatVal(int doc) throws IOException {\n        float val = vals.floatVal(doc);\n        return (val>=min && val<=max) ? targets.floatVal(doc) : (defaultVal == null ? val : defaults.floatVal(doc));\n      }\n      @Override\n      public String toString(int doc) throws IOException {\n        return \"map(\" + vals.toString(doc) + \",min=\" + min + \",max=\" + max + \",target=\" + targets.toString(doc) + \",defaultVal=\" + (defaults == null ? \"null\" : (defaults.toString(doc))) + \")\";\n      }\n    };\n  }\n\n","sourceOld":"  @Override\n  public FunctionValues getValues(Map context, LeafReaderContext readerContext) throws IOException {\n    final FunctionValues vals =  source.getValues(context, readerContext);\n    final FunctionValues targets = target.getValues(context, readerContext);\n    final FunctionValues defaults = (this.defaultVal == null) ? null : defaultVal.getValues(context, readerContext);\n    return new FloatDocValues(this) {\n      @Override\n      public float floatVal(int doc) throws IOException {\n        float val = vals.floatVal(doc);\n        return (val>=min && val<=max) ? targets.floatVal(doc) : (defaultVal == null ? val : defaults.floatVal(doc));\n      }\n      @Override\n      public String toString(int doc) throws IOException {\n        return \"map(\" + vals.toString(doc) + \",min=\" + min + \",max=\" + max + \",target=\" + targets.toString(doc) + \",defaultVal=\" + (defaults == null ? \"null\" : (defaults.toString(doc))) + \")\";\n      }\n    };\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["a924dfeede13519417b3bb2ccda42205b3751165","6652c74b2358a0b13223817a6a793bf1c9d0749d"],"6652c74b2358a0b13223817a6a793bf1c9d0749d":["a924dfeede13519417b3bb2ccda42205b3751165"],"a924dfeede13519417b3bb2ccda42205b3751165":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"f95c0e33e58652b2a4d8560c8297dbe86ff5b1f2":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["a924dfeede13519417b3bb2ccda42205b3751165","17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f95c0e33e58652b2a4d8560c8297dbe86ff5b1f2"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c9fb5f46e264daf5ba3860defe623a89d202dd87"],"17e5da53e4e5bd659e22add9bba1cfa222e7e30d":["f95c0e33e58652b2a4d8560c8297dbe86ff5b1f2","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"6652c74b2358a0b13223817a6a793bf1c9d0749d":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d"],"a924dfeede13519417b3bb2ccda42205b3751165":["17e5da53e4e5bd659e22add9bba1cfa222e7e30d","6652c74b2358a0b13223817a6a793bf1c9d0749d","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"f95c0e33e58652b2a4d8560c8297dbe86ff5b1f2":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c9fb5f46e264daf5ba3860defe623a89d202dd87":["a924dfeede13519417b3bb2ccda42205b3751165"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}