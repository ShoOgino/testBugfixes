{"path":"solr/core/src/java/org/apache/solr/handler/component/HighlightComponent#getHighlighter(SolrParams).mjava","commits":[{"id":"8868b7c4fbf215c41e7b4ea2cfc40d1970672910","date":1480034167,"type":0,"author":"David Smiley","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/HighlightComponent#getHighlighter(SolrParams).mjava","pathOld":"/dev/null","sourceNew":"  protected SolrHighlighter getHighlighter(SolrParams params) {\n    HighlightMethod method = HighlightMethod.parse(params.get(HighlightParams.METHOD));\n    if (method == null) {\n      return solrConfigHighlighter;\n    }\n\n    switch (method) {\n      case UNIFIED:\n        if (solrConfigHighlighter instanceof UnifiedSolrHighlighter) {\n          return solrConfigHighlighter;\n        }\n        return new UnifiedSolrHighlighter(); // TODO cache one?\n      case POSTINGS:\n        if (solrConfigHighlighter instanceof PostingsSolrHighlighter) {\n          return solrConfigHighlighter;\n        }\n        return new PostingsSolrHighlighter(); // TODO cache one?\n      case FAST_VECTOR: // fall-through\n      case ORIGINAL:\n        if (solrConfigHighlighter instanceof DefaultSolrHighlighter) {\n          return solrConfigHighlighter;\n        } else {\n          throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n              \"In order to use \" + HighlightParams.METHOD + \"=\" + method.getMethodName() + \" the configured\" +\n                  \" highlighter in solrconfig must be \" + DefaultSolrHighlighter.class);\n        }\n      default: throw new AssertionError();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"75babd1dfc2521603bfeb0968042e921d8c6c652","date":1480042089,"type":0,"author":"Noble Paul","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/HighlightComponent#getHighlighter(SolrParams).mjava","pathOld":"/dev/null","sourceNew":"  protected SolrHighlighter getHighlighter(SolrParams params) {\n    HighlightMethod method = HighlightMethod.parse(params.get(HighlightParams.METHOD));\n    if (method == null) {\n      return solrConfigHighlighter;\n    }\n\n    switch (method) {\n      case UNIFIED:\n        if (solrConfigHighlighter instanceof UnifiedSolrHighlighter) {\n          return solrConfigHighlighter;\n        }\n        return new UnifiedSolrHighlighter(); // TODO cache one?\n      case POSTINGS:\n        if (solrConfigHighlighter instanceof PostingsSolrHighlighter) {\n          return solrConfigHighlighter;\n        }\n        return new PostingsSolrHighlighter(); // TODO cache one?\n      case FAST_VECTOR: // fall-through\n      case ORIGINAL:\n        if (solrConfigHighlighter instanceof DefaultSolrHighlighter) {\n          return solrConfigHighlighter;\n        } else {\n          throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n              \"In order to use \" + HighlightParams.METHOD + \"=\" + method.getMethodName() + \" the configured\" +\n                  \" highlighter in solrconfig must be \" + DefaultSolrHighlighter.class);\n        }\n      default: throw new AssertionError();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"727bb765ff2542275f6d31f67be18d7104bae148","date":1480353976,"type":0,"author":"Kevin Risden","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/component/HighlightComponent#getHighlighter(SolrParams).mjava","pathOld":"/dev/null","sourceNew":"  protected SolrHighlighter getHighlighter(SolrParams params) {\n    HighlightMethod method = HighlightMethod.parse(params.get(HighlightParams.METHOD));\n    if (method == null) {\n      return solrConfigHighlighter;\n    }\n\n    switch (method) {\n      case UNIFIED:\n        if (solrConfigHighlighter instanceof UnifiedSolrHighlighter) {\n          return solrConfigHighlighter;\n        }\n        return new UnifiedSolrHighlighter(); // TODO cache one?\n      case POSTINGS:\n        if (solrConfigHighlighter instanceof PostingsSolrHighlighter) {\n          return solrConfigHighlighter;\n        }\n        return new PostingsSolrHighlighter(); // TODO cache one?\n      case FAST_VECTOR: // fall-through\n      case ORIGINAL:\n        if (solrConfigHighlighter instanceof DefaultSolrHighlighter) {\n          return solrConfigHighlighter;\n        } else {\n          throw new SolrException(SolrException.ErrorCode.SERVER_ERROR,\n              \"In order to use \" + HighlightParams.METHOD + \"=\" + method.getMethodName() + \" the configured\" +\n                  \" highlighter in solrconfig must be \" + DefaultSolrHighlighter.class);\n        }\n      default: throw new AssertionError();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"727bb765ff2542275f6d31f67be18d7104bae148":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","75babd1dfc2521603bfeb0968042e921d8c6c652"],"8868b7c4fbf215c41e7b4ea2cfc40d1970672910":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"75babd1dfc2521603bfeb0968042e921d8c6c652":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","8868b7c4fbf215c41e7b4ea2cfc40d1970672910"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["75babd1dfc2521603bfeb0968042e921d8c6c652"]},"commit2Childs":{"727bb765ff2542275f6d31f67be18d7104bae148":[],"8868b7c4fbf215c41e7b4ea2cfc40d1970672910":["75babd1dfc2521603bfeb0968042e921d8c6c652"],"75babd1dfc2521603bfeb0968042e921d8c6c652":["727bb765ff2542275f6d31f67be18d7104bae148","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["727bb765ff2542275f6d31f67be18d7104bae148","8868b7c4fbf215c41e7b4ea2cfc40d1970672910","75babd1dfc2521603bfeb0968042e921d8c6c652"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["727bb765ff2542275f6d31f67be18d7104bae148","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}