{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/ReplicaInfo#ReplicaInfo(String,String,Replica,Map[String,Object]).mjava","commits":[{"id":"1bbcda32e5cd37ef61ea1190bacd080308e22070","date":1508850553,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/ReplicaInfo#ReplicaInfo(String,String,Replica,Map[String,Object]).mjava","pathOld":"/dev/null","sourceNew":"  public ReplicaInfo(String coll,String shard, Replica r, Map<String, Object> vals){\n    this.name = r.getName();\n    this.core = r.getCoreName();\n    this.collection = coll;\n    this.shard = shard;\n    this.type = r.getType();\n    this.variables = vals;\n    this.node = r.getNodeName();\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1d4bf9d5308dfef350829c28f2b3b2648df1e9b1","date":1513252583,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/ReplicaInfo#ReplicaInfo(String,String,Replica,Map[String,Object]).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/ReplicaInfo#ReplicaInfo(String,String,Replica,Map[String,Object]).mjava","sourceNew":"  public ReplicaInfo(String coll, String shard, Replica r, Map<String, Object> vals) {\n    this.name = r.getName();\n    this.core = r.getCoreName();\n    this.collection = coll;\n    this.shard = shard;\n    this.type = r.getType();\n    if (vals != null) {\n      this.variables.putAll(vals);\n    }\n    this.node = r.getNodeName();\n  }\n\n","sourceOld":"  public ReplicaInfo(String coll,String shard, Replica r, Map<String, Object> vals){\n    this.name = r.getName();\n    this.core = r.getCoreName();\n    this.collection = coll;\n    this.shard = shard;\n    this.type = r.getType();\n    this.variables = vals;\n    this.node = r.getNodeName();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"af573cf1aa31058532f304c30b68f17eeb011fbb","date":1516626771,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/ReplicaInfo#ReplicaInfo(String,String,Replica,Map[String,Object]).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/ReplicaInfo#ReplicaInfo(String,String,Replica,Map[String,Object]).mjava","sourceNew":"  public ReplicaInfo(String coll, String shard, Replica r, Map<String, Object> vals) {\n    this.name = r.getName();\n    this.core = r.getCoreName();\n    this.collection = coll;\n    this.shard = shard;\n    this.type = r.getType();\n    this.isLeader = r.getBool(LEADER_PROP, false);\n    if (vals != null) {\n      this.variables.putAll(vals);\n    }\n    this.node = r.getNodeName();\n  }\n\n","sourceOld":"  public ReplicaInfo(String coll, String shard, Replica r, Map<String, Object> vals) {\n    this.name = r.getName();\n    this.core = r.getCoreName();\n    this.collection = coll;\n    this.shard = shard;\n    this.type = r.getType();\n    if (vals != null) {\n      this.variables.putAll(vals);\n    }\n    this.node = r.getNodeName();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b94236357aaa22b76c10629851fe4e376e0cea82","date":1516710914,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/ReplicaInfo#ReplicaInfo(String,String,Replica,Map[String,Object]).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/ReplicaInfo#ReplicaInfo(String,String,Replica,Map[String,Object]).mjava","sourceNew":"  public ReplicaInfo(String coll, String shard, Replica r, Map<String, Object> vals) {\n    this.name = r.getName();\n    this.core = r.getCoreName();\n    this.collection = coll;\n    this.shard = shard;\n    this.type = r.getType();\n    this.isLeader = r.getBool(LEADER_PROP, false);\n    if (vals != null) {\n      this.variables.putAll(vals);\n    }\n    this.node = r.getNodeName();\n  }\n\n","sourceOld":"  public ReplicaInfo(String coll, String shard, Replica r, Map<String, Object> vals) {\n    this.name = r.getName();\n    this.core = r.getCoreName();\n    this.collection = coll;\n    this.shard = shard;\n    this.type = r.getType();\n    if (vals != null) {\n      this.variables.putAll(vals);\n    }\n    this.node = r.getNodeName();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fc18bc8ea2e2c1e308757ff50671c774438e9f3e","date":1538052583,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/ReplicaInfo#ReplicaInfo(String,String,Replica,Map[String,Object]).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/ReplicaInfo#ReplicaInfo(String,String,Replica,Map[String,Object]).mjava","sourceNew":"  public ReplicaInfo(String coll, String shard, Replica r, Map<String, Object> vals) {\n    this.name = r.getName();\n    this.core = r.getCoreName();\n    this.collection = coll;\n    this.shard = shard;\n    this.type = r.getType();\n    boolean maybeLeader = r.getBool(LEADER_PROP, false);\n    if (vals != null) {\n      this.variables.putAll(vals);\n      maybeLeader = \"true\".equals(String.valueOf(vals.getOrDefault(LEADER_PROP, maybeLeader)));\n    }\n    this.isLeader = maybeLeader;\n    this.node = r.getNodeName();\n  }\n\n","sourceOld":"  public ReplicaInfo(String coll, String shard, Replica r, Map<String, Object> vals) {\n    this.name = r.getName();\n    this.core = r.getCoreName();\n    this.collection = coll;\n    this.shard = shard;\n    this.type = r.getType();\n    this.isLeader = r.getBool(LEADER_PROP, false);\n    if (vals != null) {\n      this.variables.putAll(vals);\n    }\n    this.node = r.getNodeName();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3ea07d22cef2406e950de111f8aa7bc2edb91d56","date":1581094599,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/ReplicaInfo#ReplicaInfo(String,String,Replica,Map[String,Object]).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/ReplicaInfo#ReplicaInfo(String,String,Replica,Map[String,Object]).mjava","sourceNew":"  public ReplicaInfo(String coll, String shard, Replica r, Map<String, Object> vals) {\n    this.name = r.getName();\n    this.core = r.getCoreName();\n    this.collection = coll;\n    this.shard = shard;\n    this.type = r.getType();\n    this.node = r.getNodeName();\n    boolean maybeLeader = r.getBool(LEADER_PROP, false);\n    if (vals != null) {\n      this.variables.putAll(vals);\n      maybeLeader = \"true\".equals(String.valueOf(vals.getOrDefault(LEADER_PROP, maybeLeader)));\n    }\n    this.isLeader = maybeLeader;\n    validate();\n  }\n\n","sourceOld":"  public ReplicaInfo(String coll, String shard, Replica r, Map<String, Object> vals) {\n    this.name = r.getName();\n    this.core = r.getCoreName();\n    this.collection = coll;\n    this.shard = shard;\n    this.type = r.getType();\n    boolean maybeLeader = r.getBool(LEADER_PROP, false);\n    if (vals != null) {\n      this.variables.putAll(vals);\n      maybeLeader = \"true\".equals(String.valueOf(vals.getOrDefault(LEADER_PROP, maybeLeader)));\n    }\n    this.isLeader = maybeLeader;\n    this.node = r.getNodeName();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7e8ce2f9d2ddfcf5cfa7e73b8b2af287a2a276fd","date":1594731683,"type":4,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/cloud/autoscaling/ReplicaInfo#ReplicaInfo(String,String,Replica,Map[String,Object]).mjava","sourceNew":null,"sourceOld":"  public ReplicaInfo(String coll, String shard, Replica r, Map<String, Object> vals) {\n    this.name = r.getName();\n    this.core = r.getCoreName();\n    this.collection = coll;\n    this.shard = shard;\n    this.type = r.getType();\n    this.node = r.getNodeName();\n    boolean maybeLeader = r.getBool(LEADER_PROP, false);\n    if (vals != null) {\n      this.variables.putAll(vals);\n      maybeLeader = \"true\".equals(String.valueOf(vals.getOrDefault(LEADER_PROP, maybeLeader)));\n    }\n    this.isLeader = maybeLeader;\n    validate();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"fc18bc8ea2e2c1e308757ff50671c774438e9f3e":["b94236357aaa22b76c10629851fe4e376e0cea82"],"b94236357aaa22b76c10629851fe4e376e0cea82":["1d4bf9d5308dfef350829c28f2b3b2648df1e9b1","af573cf1aa31058532f304c30b68f17eeb011fbb"],"7e8ce2f9d2ddfcf5cfa7e73b8b2af287a2a276fd":["3ea07d22cef2406e950de111f8aa7bc2edb91d56"],"af573cf1aa31058532f304c30b68f17eeb011fbb":["1d4bf9d5308dfef350829c28f2b3b2648df1e9b1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1bbcda32e5cd37ef61ea1190bacd080308e22070":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"1d4bf9d5308dfef350829c28f2b3b2648df1e9b1":["1bbcda32e5cd37ef61ea1190bacd080308e22070"],"3ea07d22cef2406e950de111f8aa7bc2edb91d56":["fc18bc8ea2e2c1e308757ff50671c774438e9f3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["7e8ce2f9d2ddfcf5cfa7e73b8b2af287a2a276fd"]},"commit2Childs":{"fc18bc8ea2e2c1e308757ff50671c774438e9f3e":["3ea07d22cef2406e950de111f8aa7bc2edb91d56"],"b94236357aaa22b76c10629851fe4e376e0cea82":["fc18bc8ea2e2c1e308757ff50671c774438e9f3e"],"7e8ce2f9d2ddfcf5cfa7e73b8b2af287a2a276fd":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"af573cf1aa31058532f304c30b68f17eeb011fbb":["b94236357aaa22b76c10629851fe4e376e0cea82"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["1bbcda32e5cd37ef61ea1190bacd080308e22070"],"1bbcda32e5cd37ef61ea1190bacd080308e22070":["1d4bf9d5308dfef350829c28f2b3b2648df1e9b1"],"1d4bf9d5308dfef350829c28f2b3b2648df1e9b1":["b94236357aaa22b76c10629851fe4e376e0cea82","af573cf1aa31058532f304c30b68f17eeb011fbb"],"3ea07d22cef2406e950de111f8aa7bc2edb91d56":["7e8ce2f9d2ddfcf5cfa7e73b8b2af287a2a276fd"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}