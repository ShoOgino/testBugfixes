{"path":"lucene/src/java/org/apache/lucene/search/FieldComparator.TermValDocValuesComparator#setNextReader(AtomicReaderContext).mjava","commits":[{"id":"28088b0a688977b79dec2cc9119cff2fb4aab7ee","date":1321197996,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/FieldComparator.TermValDocValuesComparator#setNextReader(AtomicReaderContext).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public FieldComparator setNextReader(AtomicReaderContext context) throws IOException {\n      final IndexDocValues dv = context.reader.docValues(field);\n      if (dv != null) {\n        docTerms = dv.getSource();\n      } else {\n        docTerms = IndexDocValues.getDefaultSource(ValueType.BYTES_VAR_DEREF);\n      }\n      return this;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1e59c344a45b9502f40ec44f5fe4e20ed2291dbe","date":1323449025,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/FieldComparator.TermValDocValuesComparator#setNextReader(AtomicReaderContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/FieldComparator.TermValDocValuesComparator#setNextReader(AtomicReaderContext).mjava","sourceNew":"    @Override\n    public FieldComparator setNextReader(AtomicReaderContext context) throws IOException {\n      final DocValues dv = context.reader.docValues(field);\n      if (dv != null) {\n        docTerms = dv.getSource();\n      } else {\n        docTerms = DocValues.getDefaultSource(DocValues.Type.BYTES_VAR_DEREF);\n      }\n      return this;\n    }\n\n","sourceOld":"    @Override\n    public FieldComparator setNextReader(AtomicReaderContext context) throws IOException {\n      final IndexDocValues dv = context.reader.docValues(field);\n      if (dv != null) {\n        docTerms = dv.getSource();\n      } else {\n        docTerms = IndexDocValues.getDefaultSource(ValueType.BYTES_VAR_DEREF);\n      }\n      return this;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d638301ad1cfcae567b681b893bc8781f0ee48a5","date":1323801546,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/FieldComparator.TermValDocValuesComparator#setNextReader(AtomicReaderContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/FieldComparator.TermValDocValuesComparator#setNextReader(AtomicReaderContext).mjava","sourceNew":"    @Override\n    public FieldComparator setNextReader(AtomicReaderContext context) throws IOException {\n      final DocValues dv = context.reader.docValues(field);\n      if (dv != null) {\n        docTerms = dv.getSource();\n      } else {\n        docTerms = DocValues.getDefaultSource(DocValues.Type.BYTES_VAR_DEREF);\n      }\n      return this;\n    }\n\n","sourceOld":"    @Override\n    public FieldComparator setNextReader(AtomicReaderContext context) throws IOException {\n      final IndexDocValues dv = context.reader.docValues(field);\n      if (dv != null) {\n        docTerms = dv.getSource();\n      } else {\n        docTerms = IndexDocValues.getDefaultSource(ValueType.BYTES_VAR_DEREF);\n      }\n      return this;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6fff8f4b218bd0626afcdce82027bafeb84a50a4","date":1327229950,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/FieldComparator.TermValDocValuesComparator#setNextReader(AtomicReaderContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/FieldComparator.TermValDocValuesComparator#setNextReader(AtomicReaderContext).mjava","sourceNew":"    @Override\n    public FieldComparator setNextReader(AtomicReaderContext context) throws IOException {\n      final DocValues dv = context.reader().docValues(field);\n      if (dv != null) {\n        docTerms = dv.getSource();\n      } else {\n        docTerms = DocValues.getDefaultSource(DocValues.Type.BYTES_VAR_DEREF);\n      }\n      return this;\n    }\n\n","sourceOld":"    @Override\n    public FieldComparator setNextReader(AtomicReaderContext context) throws IOException {\n      final DocValues dv = context.reader.docValues(field);\n      if (dv != null) {\n        docTerms = dv.getSource();\n      } else {\n        docTerms = DocValues.getDefaultSource(DocValues.Type.BYTES_VAR_DEREF);\n      }\n      return this;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5cab9a86bd67202d20b6adc463008c8e982b070a","date":1327966443,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/FieldComparator.TermValDocValuesComparator#setNextReader(AtomicReaderContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/FieldComparator.TermValDocValuesComparator#setNextReader(AtomicReaderContext).mjava","sourceNew":"    @Override\n    public FieldComparator setNextReader(AtomicReaderContext context) throws IOException {\n      final DocValues dv = context.reader().docValues(field);\n      if (dv != null) {\n        docTerms = dv.getSource();\n      } else {\n        docTerms = DocValues.getDefaultSource(DocValues.Type.BYTES_VAR_DEREF);\n      }\n      return this;\n    }\n\n","sourceOld":"    @Override\n    public FieldComparator setNextReader(AtomicReaderContext context) throws IOException {\n      final DocValues dv = context.reader.docValues(field);\n      if (dv != null) {\n        docTerms = dv.getSource();\n      } else {\n        docTerms = DocValues.getDefaultSource(DocValues.Type.BYTES_VAR_DEREF);\n      }\n      return this;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/FieldComparator.TermValDocValuesComparator#setNextReader(AtomicReaderContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/FieldComparator.TermValDocValuesComparator#setNextReader(AtomicReaderContext).mjava","sourceNew":"    @Override\n    public FieldComparator setNextReader(AtomicReaderContext context) throws IOException {\n      final DocValues dv = context.reader().docValues(field);\n      if (dv != null) {\n        docTerms = dv.getSource();\n      } else {\n        docTerms = DocValues.getDefaultSource(DocValues.Type.BYTES_VAR_DEREF);\n      }\n      return this;\n    }\n\n","sourceOld":"    @Override\n    public FieldComparator setNextReader(AtomicReaderContext context) throws IOException {\n      final DocValues dv = context.reader().docValues(field);\n      if (dv != null) {\n        docTerms = dv.getSource();\n      } else {\n        docTerms = DocValues.getDefaultSource(DocValues.Type.BYTES_VAR_DEREF);\n      }\n      return this;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"6fff8f4b218bd0626afcdce82027bafeb84a50a4":["d638301ad1cfcae567b681b893bc8781f0ee48a5"],"1e59c344a45b9502f40ec44f5fe4e20ed2291dbe":["28088b0a688977b79dec2cc9119cff2fb4aab7ee"],"28088b0a688977b79dec2cc9119cff2fb4aab7ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"5cab9a86bd67202d20b6adc463008c8e982b070a":["d638301ad1cfcae567b681b893bc8781f0ee48a5","6fff8f4b218bd0626afcdce82027bafeb84a50a4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"d638301ad1cfcae567b681b893bc8781f0ee48a5":["28088b0a688977b79dec2cc9119cff2fb4aab7ee","1e59c344a45b9502f40ec44f5fe4e20ed2291dbe"]},"commit2Childs":{"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["28088b0a688977b79dec2cc9119cff2fb4aab7ee"],"6fff8f4b218bd0626afcdce82027bafeb84a50a4":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"1e59c344a45b9502f40ec44f5fe4e20ed2291dbe":["d638301ad1cfcae567b681b893bc8781f0ee48a5"],"28088b0a688977b79dec2cc9119cff2fb4aab7ee":["1e59c344a45b9502f40ec44f5fe4e20ed2291dbe","d638301ad1cfcae567b681b893bc8781f0ee48a5"],"5cab9a86bd67202d20b6adc463008c8e982b070a":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"d638301ad1cfcae567b681b893bc8781f0ee48a5":["6fff8f4b218bd0626afcdce82027bafeb84a50a4","5cab9a86bd67202d20b6adc463008c8e982b070a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}