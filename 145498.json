{"path":"lucene/core/src/java/org/apache/lucene/index/TermsHashPerField#add(BytesRef,int).mjava","commits":[{"id":"d3cc3fa1ecad75b99ec55169e44628808f9866ad","date":1592311545,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/TermsHashPerField#add(BytesRef,int).mjava","pathOld":"/dev/null","sourceNew":"  /** Called once per inverted token.  This is the primary\n   *  entry point (for first TermsHash); postings use this\n   *  API. */\n  void add(BytesRef termBytes, final int docID) throws IOException {\n    assert assertDocId(docID);\n    // We are first in the chain so we must \"intern\" the\n    // term text into textStart address\n    // Get the text & hash of this term.\n    int termID = bytesHash.add(termBytes);\n    //System.out.println(\"add term=\" + termBytesRef.utf8ToString() + \" doc=\" + docState.docID + \" termID=\" + termID);\n    if (termID >= 0) { // New posting\n      // Init stream slices\n      initStreamSlices(termID, docID);\n    } else {\n      termID = positionStreamSlice(termID, docID);\n    }\n    if (doNextCall) {\n      nextPerField.add(postingsArray.textStarts[termID], docID);\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d3cc3fa1ecad75b99ec55169e44628808f9866ad":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d3cc3fa1ecad75b99ec55169e44628808f9866ad"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d3cc3fa1ecad75b99ec55169e44628808f9866ad"],"d3cc3fa1ecad75b99ec55169e44628808f9866ad":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}