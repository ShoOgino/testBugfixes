{"path":"lucene/src/java/org/apache/lucene/index/SegmentInfo#loadFieldInfos(Directory,boolean).mjava","commits":[{"id":"1224a4027481acce15495b03bce9b48b93b42722","date":1300792329,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentInfo#loadFieldInfos(Directory,boolean).mjava","pathOld":"/dev/null","sourceNew":"  synchronized void loadFieldInfos(Directory dir, boolean checkCompoundFile) throws IOException {\n    if (fieldInfos == null) {\n      Directory dir0 = dir;\n      if (isCompoundFile && checkCompoundFile) {\n        dir0 = new CompoundFileReader(dir, IndexFileNames.segmentFileName(name,\n            \"\", IndexFileNames.COMPOUND_FILE_EXTENSION));\n      }\n      try {\n        fieldInfos = new FieldInfos(dir0, IndexFileNames.segmentFileName(name,\n            \"\", IndexFileNames.FIELD_INFOS_EXTENSION));\n      } finally {\n        if (dir != dir0) {\n          dir0.close();\n        }\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d619839baa8ce5503e496b94a9e42ad6f079293f","date":1301309428,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentInfo#loadFieldInfos(Directory,boolean).mjava","pathOld":"/dev/null","sourceNew":"  synchronized void loadFieldInfos(Directory dir, boolean checkCompoundFile) throws IOException {\n    if (fieldInfos == null) {\n      Directory dir0 = dir;\n      if (isCompoundFile && checkCompoundFile) {\n        dir0 = new CompoundFileReader(dir, IndexFileNames.segmentFileName(name,\n            \"\", IndexFileNames.COMPOUND_FILE_EXTENSION));\n      }\n      try {\n        fieldInfos = new FieldInfos(dir0, IndexFileNames.segmentFileName(name,\n            \"\", IndexFileNames.FIELD_INFOS_EXTENSION));\n      } finally {\n        if (dir != dir0) {\n          dir0.close();\n        }\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c0ef0193974807e4bddf5432a6b0287fe4d6c9df","date":1301476645,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentInfo#loadFieldInfos(Directory,boolean).mjava","pathOld":"/dev/null","sourceNew":"  synchronized void loadFieldInfos(Directory dir, boolean checkCompoundFile) throws IOException {\n    if (fieldInfos == null) {\n      Directory dir0 = dir;\n      if (isCompoundFile && checkCompoundFile) {\n        dir0 = new CompoundFileReader(dir, IndexFileNames.segmentFileName(name,\n            \"\", IndexFileNames.COMPOUND_FILE_EXTENSION));\n      }\n      try {\n        fieldInfos = new FieldInfos(dir0, IndexFileNames.segmentFileName(name,\n            \"\", IndexFileNames.FIELD_INFOS_EXTENSION));\n      } finally {\n        if (dir != dir0) {\n          dir0.close();\n        }\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"639c36565ce03aed5b0fce7c9e4448e53a1f7efd","date":1308580104,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentInfo#loadFieldInfos(Directory,boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentInfo#loadFieldInfos(Directory,boolean).mjava","sourceNew":"  synchronized void loadFieldInfos(Directory dir, boolean checkCompoundFile) throws IOException {\n    if (fieldInfos == null) {\n      Directory dir0 = dir;\n      if (isCompoundFile && checkCompoundFile) {\n        dir0 = new CompoundFileReader(dir, IndexFileNames.segmentFileName(name,\n            \"\", IndexFileNames.COMPOUND_FILE_EXTENSION), IOContext.READONCE);\n      }\n      try {\n        fieldInfos = new FieldInfos(dir0, IndexFileNames.segmentFileName(name,\n            \"\", IndexFileNames.FIELD_INFOS_EXTENSION));\n      } finally {\n        if (dir != dir0) {\n          dir0.close();\n        }\n      }\n    }\n  }\n\n","sourceOld":"  synchronized void loadFieldInfos(Directory dir, boolean checkCompoundFile) throws IOException {\n    if (fieldInfos == null) {\n      Directory dir0 = dir;\n      if (isCompoundFile && checkCompoundFile) {\n        dir0 = new CompoundFileReader(dir, IndexFileNames.segmentFileName(name,\n            \"\", IndexFileNames.COMPOUND_FILE_EXTENSION));\n      }\n      try {\n        fieldInfos = new FieldInfos(dir0, IndexFileNames.segmentFileName(name,\n            \"\", IndexFileNames.FIELD_INFOS_EXTENSION));\n      } finally {\n        if (dir != dir0) {\n          dir0.close();\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0aab6e810b4b0d3743d6a048be0602801f4b3920","date":1308671625,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentInfo#loadFieldInfos(Directory,boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentInfo#loadFieldInfos(Directory,boolean).mjava","sourceNew":"  synchronized void loadFieldInfos(Directory dir, boolean checkCompoundFile) throws IOException {\n    if (fieldInfos == null) {\n      Directory dir0 = dir;\n      if (isCompoundFile && checkCompoundFile) {\n        dir0 = dir.openCompoundInput(IndexFileNames.segmentFileName(name,\n            \"\", IndexFileNames.COMPOUND_FILE_EXTENSION), BufferedIndexInput.BUFFER_SIZE);\n      }\n      try {\n        fieldInfos = new FieldInfos(dir0, IndexFileNames.segmentFileName(name,\n            \"\", IndexFileNames.FIELD_INFOS_EXTENSION));\n      } finally {\n        if (dir != dir0) {\n          dir0.close();\n        }\n      }\n    }\n  }\n\n","sourceOld":"  synchronized void loadFieldInfos(Directory dir, boolean checkCompoundFile) throws IOException {\n    if (fieldInfos == null) {\n      Directory dir0 = dir;\n      if (isCompoundFile && checkCompoundFile) {\n        dir0 = new CompoundFileReader(dir, IndexFileNames.segmentFileName(name,\n            \"\", IndexFileNames.COMPOUND_FILE_EXTENSION));\n      }\n      try {\n        fieldInfos = new FieldInfos(dir0, IndexFileNames.segmentFileName(name,\n            \"\", IndexFileNames.FIELD_INFOS_EXTENSION));\n      } finally {\n        if (dir != dir0) {\n          dir0.close();\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2553b00f699380c64959ccb27991289aae87be2e","date":1309290151,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentInfo#loadFieldInfos(Directory,boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentInfo#loadFieldInfos(Directory,boolean).mjava","sourceNew":"  synchronized void loadFieldInfos(Directory dir, boolean checkCompoundFile) throws IOException {\n    if (fieldInfos == null) {\n      Directory dir0 = dir;\n      if (isCompoundFile && checkCompoundFile) {\n        dir0 = dir.openCompoundInput(IndexFileNames.segmentFileName(name,\n            \"\", IndexFileNames.COMPOUND_FILE_EXTENSION), BufferedIndexInput.BUFFER_SIZE);\n      }\n      try {\n        fieldInfos = new FieldInfos(dir0, IndexFileNames.segmentFileName(name,\n            \"\", IndexFileNames.FIELD_INFOS_EXTENSION));\n      } finally {\n        if (dir != dir0) {\n          dir0.close();\n        }\n      }\n    }\n  }\n\n","sourceOld":"  synchronized void loadFieldInfos(Directory dir, boolean checkCompoundFile) throws IOException {\n    if (fieldInfos == null) {\n      Directory dir0 = dir;\n      if (isCompoundFile && checkCompoundFile) {\n        dir0 = new CompoundFileReader(dir, IndexFileNames.segmentFileName(name,\n            \"\", IndexFileNames.COMPOUND_FILE_EXTENSION));\n      }\n      try {\n        fieldInfos = new FieldInfos(dir0, IndexFileNames.segmentFileName(name,\n            \"\", IndexFileNames.FIELD_INFOS_EXTENSION));\n      } finally {\n        if (dir != dir0) {\n          dir0.close();\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d083e83f225b11e5fdd900e83d26ddb385b6955c","date":1310029438,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentInfo#loadFieldInfos(Directory,boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentInfo#loadFieldInfos(Directory,boolean).mjava","sourceNew":"  synchronized void loadFieldInfos(Directory dir, boolean checkCompoundFile) throws IOException {\n    if (fieldInfos == null) {\n      Directory dir0 = dir;\n      if (isCompoundFile && checkCompoundFile) {\n        dir0 = dir.openCompoundInput(IndexFileNames.segmentFileName(name,\n            \"\", IndexFileNames.COMPOUND_FILE_EXTENSION), IOContext.READONCE);\n      }\n      try {\n        fieldInfos = new FieldInfos(dir0, IndexFileNames.segmentFileName(name,\n            \"\", IndexFileNames.FIELD_INFOS_EXTENSION));\n      } finally {\n        if (dir != dir0) {\n          dir0.close();\n        }\n      }\n    }\n  }\n\n","sourceOld":"  synchronized void loadFieldInfos(Directory dir, boolean checkCompoundFile) throws IOException {\n    if (fieldInfos == null) {\n      Directory dir0 = dir;\n      if (isCompoundFile && checkCompoundFile) {\n        dir0 = new CompoundFileReader(dir, IndexFileNames.segmentFileName(name,\n            \"\", IndexFileNames.COMPOUND_FILE_EXTENSION), IOContext.READONCE);\n      }\n      try {\n        fieldInfos = new FieldInfos(dir0, IndexFileNames.segmentFileName(name,\n            \"\", IndexFileNames.FIELD_INFOS_EXTENSION));\n      } finally {\n        if (dir != dir0) {\n          dir0.close();\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ddc4c914be86e34b54f70023f45a60fa7f04e929","date":1310115160,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentInfo#loadFieldInfos(Directory,boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentInfo#loadFieldInfos(Directory,boolean).mjava","sourceNew":"  synchronized void loadFieldInfos(Directory dir, boolean checkCompoundFile) throws IOException {\n    if (fieldInfos == null) {\n      Directory dir0 = dir;\n      if (isCompoundFile && checkCompoundFile) {\n        dir0 = dir.openCompoundInput(IndexFileNames.segmentFileName(name,\n            \"\", IndexFileNames.COMPOUND_FILE_EXTENSION), IOContext.READONCE);\n      }\n      try {\n        fieldInfos = new FieldInfos(dir0, IndexFileNames.segmentFileName(name,\n            \"\", IndexFileNames.FIELD_INFOS_EXTENSION));\n      } finally {\n        if (dir != dir0) {\n          dir0.close();\n        }\n      }\n    }\n  }\n\n","sourceOld":"  synchronized void loadFieldInfos(Directory dir, boolean checkCompoundFile) throws IOException {\n    if (fieldInfos == null) {\n      Directory dir0 = dir;\n      if (isCompoundFile && checkCompoundFile) {\n        dir0 = dir.openCompoundInput(IndexFileNames.segmentFileName(name,\n            \"\", IndexFileNames.COMPOUND_FILE_EXTENSION), BufferedIndexInput.BUFFER_SIZE);\n      }\n      try {\n        fieldInfos = new FieldInfos(dir0, IndexFileNames.segmentFileName(name,\n            \"\", IndexFileNames.FIELD_INFOS_EXTENSION));\n      } finally {\n        if (dir != dir0) {\n          dir0.close();\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5d004d0e0b3f65bb40da76d476d659d7888270e8","date":1310158940,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentInfo#loadFieldInfos(Directory,boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentInfo#loadFieldInfos(Directory,boolean).mjava","sourceNew":"  synchronized void loadFieldInfos(Directory dir, boolean checkCompoundFile) throws IOException {\n    if (fieldInfos == null) {\n      Directory dir0 = dir;\n      if (isCompoundFile && checkCompoundFile) {\n        dir0 = dir.openCompoundInput(IndexFileNames.segmentFileName(name,\n            \"\", IndexFileNames.COMPOUND_FILE_EXTENSION), IOContext.READONCE);\n      }\n      try {\n        fieldInfos = new FieldInfos(dir0, IndexFileNames.segmentFileName(name,\n            \"\", IndexFileNames.FIELD_INFOS_EXTENSION));\n      } finally {\n        if (dir != dir0) {\n          dir0.close();\n        }\n      }\n    }\n  }\n\n","sourceOld":"  synchronized void loadFieldInfos(Directory dir, boolean checkCompoundFile) throws IOException {\n    if (fieldInfos == null) {\n      Directory dir0 = dir;\n      if (isCompoundFile && checkCompoundFile) {\n        dir0 = dir.openCompoundInput(IndexFileNames.segmentFileName(name,\n            \"\", IndexFileNames.COMPOUND_FILE_EXTENSION), BufferedIndexInput.BUFFER_SIZE);\n      }\n      try {\n        fieldInfos = new FieldInfos(dir0, IndexFileNames.segmentFileName(name,\n            \"\", IndexFileNames.FIELD_INFOS_EXTENSION));\n      } finally {\n        if (dir != dir0) {\n          dir0.close();\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"67aadace85f701c87a4e0721eedcda25d8415a70","date":1314201925,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentInfo#loadFieldInfos(Directory,boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentInfo#loadFieldInfos(Directory,boolean).mjava","sourceNew":"  synchronized void loadFieldInfos(Directory dir, boolean checkCompoundFile) throws IOException {\n    if (fieldInfos == null) {\n      Directory dir0 = dir;\n      if (isCompoundFile && checkCompoundFile) {\n        dir0 = new CompoundFileDirectory(dir, IndexFileNames.segmentFileName(name,\n            \"\", IndexFileNames.COMPOUND_FILE_EXTENSION), IOContext.READONCE, false);\n      }\n      try {\n        fieldInfos = new FieldInfos(dir0, IndexFileNames.segmentFileName(name,\n            \"\", IndexFileNames.FIELD_INFOS_EXTENSION));\n      } finally {\n        if (dir != dir0) {\n          dir0.close();\n        }\n      }\n    }\n  }\n\n","sourceOld":"  synchronized void loadFieldInfos(Directory dir, boolean checkCompoundFile) throws IOException {\n    if (fieldInfos == null) {\n      Directory dir0 = dir;\n      if (isCompoundFile && checkCompoundFile) {\n        dir0 = dir.openCompoundInput(IndexFileNames.segmentFileName(name,\n            \"\", IndexFileNames.COMPOUND_FILE_EXTENSION), IOContext.READONCE);\n      }\n      try {\n        fieldInfos = new FieldInfos(dir0, IndexFileNames.segmentFileName(name,\n            \"\", IndexFileNames.FIELD_INFOS_EXTENSION));\n      } finally {\n        if (dir != dir0) {\n          dir0.close();\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cc749c053615f5871f3b95715fe292f34e70a53","date":1321470575,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentInfo#loadFieldInfos(Directory,boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentInfo#loadFieldInfos(Directory,boolean).mjava","sourceNew":"  synchronized void loadFieldInfos(Directory dir, boolean checkCompoundFile) throws IOException {\n    if (fieldInfos == null) {\n      Directory dir0 = dir;\n      if (isCompoundFile && checkCompoundFile) {\n        dir0 = new CompoundFileDirectory(dir, IndexFileNames.segmentFileName(name,\n            \"\", IndexFileNames.COMPOUND_FILE_EXTENSION), IOContext.READONCE, false);\n      }\n      try {\n        FieldInfosReader reader = codec.fieldInfosFormat().getFieldInfosReader();\n        fieldInfos = reader.read(dir0, name, IOContext.READONCE);\n      } finally {\n        if (dir != dir0) {\n          dir0.close();\n        }\n      }\n    }\n  }\n\n","sourceOld":"  synchronized void loadFieldInfos(Directory dir, boolean checkCompoundFile) throws IOException {\n    if (fieldInfos == null) {\n      Directory dir0 = dir;\n      if (isCompoundFile && checkCompoundFile) {\n        dir0 = new CompoundFileDirectory(dir, IndexFileNames.segmentFileName(name,\n            \"\", IndexFileNames.COMPOUND_FILE_EXTENSION), IOContext.READONCE, false);\n      }\n      try {\n        fieldInfos = new FieldInfos(dir0, IndexFileNames.segmentFileName(name,\n            \"\", IndexFileNames.FIELD_INFOS_EXTENSION));\n      } finally {\n        if (dir != dir0) {\n          dir0.close();\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/SegmentInfo#loadFieldInfos(Directory,boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/SegmentInfo#loadFieldInfos(Directory,boolean).mjava","sourceNew":"  synchronized void loadFieldInfos(Directory dir, boolean checkCompoundFile) throws IOException {\n    if (fieldInfos == null) {\n      Directory dir0 = dir;\n      if (isCompoundFile && checkCompoundFile) {\n        dir0 = new CompoundFileDirectory(dir, IndexFileNames.segmentFileName(name,\n            \"\", IndexFileNames.COMPOUND_FILE_EXTENSION), IOContext.READONCE, false);\n      }\n      try {\n        FieldInfosReader reader = codec.fieldInfosFormat().getFieldInfosReader();\n        fieldInfos = reader.read(dir0, name, IOContext.READONCE);\n      } finally {\n        if (dir != dir0) {\n          dir0.close();\n        }\n      }\n    }\n  }\n\n","sourceOld":"  synchronized void loadFieldInfos(Directory dir, boolean checkCompoundFile) throws IOException {\n    if (fieldInfos == null) {\n      Directory dir0 = dir;\n      if (isCompoundFile && checkCompoundFile) {\n        dir0 = new CompoundFileDirectory(dir, IndexFileNames.segmentFileName(name,\n            \"\", IndexFileNames.COMPOUND_FILE_EXTENSION), IOContext.READONCE, false);\n      }\n      try {\n        FieldInfosReader reader = codec.fieldInfosFormat().getFieldInfosReader();\n        fieldInfos = reader.read(dir0, name, IOContext.READONCE);\n      } finally {\n        if (dir != dir0) {\n          dir0.close();\n        }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"67aadace85f701c87a4e0721eedcda25d8415a70":["ddc4c914be86e34b54f70023f45a60fa7f04e929"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["3cc749c053615f5871f3b95715fe292f34e70a53"],"0aab6e810b4b0d3743d6a048be0602801f4b3920":["1224a4027481acce15495b03bce9b48b93b42722"],"3cc749c053615f5871f3b95715fe292f34e70a53":["67aadace85f701c87a4e0721eedcda25d8415a70"],"639c36565ce03aed5b0fce7c9e4448e53a1f7efd":["1224a4027481acce15495b03bce9b48b93b42722"],"2553b00f699380c64959ccb27991289aae87be2e":["1224a4027481acce15495b03bce9b48b93b42722","0aab6e810b4b0d3743d6a048be0602801f4b3920"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":["639c36565ce03aed5b0fce7c9e4448e53a1f7efd","0aab6e810b4b0d3743d6a048be0602801f4b3920"],"c0ef0193974807e4bddf5432a6b0287fe4d6c9df":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","1224a4027481acce15495b03bce9b48b93b42722"],"d619839baa8ce5503e496b94a9e42ad6f079293f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","1224a4027481acce15495b03bce9b48b93b42722"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5d004d0e0b3f65bb40da76d476d659d7888270e8":["2553b00f699380c64959ccb27991289aae87be2e","ddc4c914be86e34b54f70023f45a60fa7f04e929"],"ddc4c914be86e34b54f70023f45a60fa7f04e929":["0aab6e810b4b0d3743d6a048be0602801f4b3920","d083e83f225b11e5fdd900e83d26ddb385b6955c"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"1224a4027481acce15495b03bce9b48b93b42722":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"67aadace85f701c87a4e0721eedcda25d8415a70":["3cc749c053615f5871f3b95715fe292f34e70a53"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"0aab6e810b4b0d3743d6a048be0602801f4b3920":["2553b00f699380c64959ccb27991289aae87be2e","d083e83f225b11e5fdd900e83d26ddb385b6955c","ddc4c914be86e34b54f70023f45a60fa7f04e929"],"3cc749c053615f5871f3b95715fe292f34e70a53":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"639c36565ce03aed5b0fce7c9e4448e53a1f7efd":["d083e83f225b11e5fdd900e83d26ddb385b6955c"],"2553b00f699380c64959ccb27991289aae87be2e":["5d004d0e0b3f65bb40da76d476d659d7888270e8"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":["ddc4c914be86e34b54f70023f45a60fa7f04e929"],"c0ef0193974807e4bddf5432a6b0287fe4d6c9df":[],"d619839baa8ce5503e496b94a9e42ad6f079293f":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df","d619839baa8ce5503e496b94a9e42ad6f079293f","1224a4027481acce15495b03bce9b48b93b42722"],"5d004d0e0b3f65bb40da76d476d659d7888270e8":[],"ddc4c914be86e34b54f70023f45a60fa7f04e929":["67aadace85f701c87a4e0721eedcda25d8415a70","5d004d0e0b3f65bb40da76d476d659d7888270e8"],"1224a4027481acce15495b03bce9b48b93b42722":["0aab6e810b4b0d3743d6a048be0602801f4b3920","639c36565ce03aed5b0fce7c9e4448e53a1f7efd","2553b00f699380c64959ccb27991289aae87be2e","c0ef0193974807e4bddf5432a6b0287fe4d6c9df","d619839baa8ce5503e496b94a9e42ad6f079293f"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c0ef0193974807e4bddf5432a6b0287fe4d6c9df","d619839baa8ce5503e496b94a9e42ad6f079293f","5d004d0e0b3f65bb40da76d476d659d7888270e8","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}