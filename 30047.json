{"path":"solr/core/src/java/org/apache/solr/rest/schema/analysis/ManagedSynonymFilterFactory.SynonymManager#applyListUpdates(List[String],boolean).mjava","commits":[{"id":"4da8d4c422d841c0e5a997bf16dd471c5545d3e4","date":1430889527,"type":0,"author":"Timothy Potter","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/rest/schema/analysis/ManagedSynonymFilterFactory.SynonymManager#applyListUpdates(List[String],boolean).mjava","pathOld":"/dev/null","sourceNew":"    protected boolean applyListUpdates(List<String> jsonList, boolean ignoreCase) {\n      boolean madeChanges = false;\n      for (String term : jsonList) {\n        // find the mappings using the case aware key\n        String origTerm = term;\n        term = applyCaseSetting(ignoreCase, term);\n        CasePreservedSynonymMappings cpsm = synonymMappings.get(term);\n        if (cpsm == null)\n          cpsm = new CasePreservedSynonymMappings();\n\n        Set<String> treeTerms = new TreeSet<>();\n        treeTerms.addAll(jsonList);\n        treeTerms.remove(origTerm);\n        cpsm.mappings.put(origTerm, treeTerms);\n        madeChanges = true;\n        // only add the cpsm to the synonymMappings if it has valid data\n        if (!synonymMappings.containsKey(term) && cpsm.mappings.get(origTerm) != null) {\n          synonymMappings.put(term, cpsm);\n        }\n      }\n      return madeChanges;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["67ef8e48a766655ce28a63ceb24b5f4c0a35b1ba"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"67ef8e48a766655ce28a63ceb24b5f4c0a35b1ba","date":1456446390,"type":3,"author":"Jan HÃ¸ydahl","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/rest/schema/analysis/ManagedSynonymFilterFactory.SynonymManager#applyListUpdates(List[String],boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/rest/schema/analysis/ManagedSynonymFilterFactory.SynonymManager#applyListUpdates(List[String],boolean).mjava","sourceNew":"    protected boolean applyListUpdates(List<String> jsonList, boolean ignoreCase) {\n      boolean madeChanges = false;\n      for (String term : jsonList) {\n        // find the mappings using the case aware key\n        String origTerm = term;\n        term = applyCaseSetting(ignoreCase, term);\n        CasePreservedSynonymMappings cpsm = synonymMappings.get(term);\n        if (cpsm == null)\n          cpsm = new CasePreservedSynonymMappings();\n\n        Set<String> treeTerms = new TreeSet<>();\n        treeTerms.addAll(jsonList);\n        cpsm.mappings.put(origTerm, treeTerms);\n        madeChanges = true;\n        // only add the cpsm to the synonymMappings if it has valid data\n        if (!synonymMappings.containsKey(term) && cpsm.mappings.get(origTerm) != null) {\n          synonymMappings.put(term, cpsm);\n        }\n      }\n      return madeChanges;\n    }\n\n","sourceOld":"    protected boolean applyListUpdates(List<String> jsonList, boolean ignoreCase) {\n      boolean madeChanges = false;\n      for (String term : jsonList) {\n        // find the mappings using the case aware key\n        String origTerm = term;\n        term = applyCaseSetting(ignoreCase, term);\n        CasePreservedSynonymMappings cpsm = synonymMappings.get(term);\n        if (cpsm == null)\n          cpsm = new CasePreservedSynonymMappings();\n\n        Set<String> treeTerms = new TreeSet<>();\n        treeTerms.addAll(jsonList);\n        treeTerms.remove(origTerm);\n        cpsm.mappings.put(origTerm, treeTerms);\n        madeChanges = true;\n        // only add the cpsm to the synonymMappings if it has valid data\n        if (!synonymMappings.containsKey(term) && cpsm.mappings.get(origTerm) != null) {\n          synonymMappings.put(term, cpsm);\n        }\n      }\n      return madeChanges;\n    }\n\n","bugFix":["4da8d4c422d841c0e5a997bf16dd471c5545d3e4"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"23b14fc1cb7939c2aad1d3a40f6282dee0bfda2e","date":1571071547,"type":3,"author":"Koen De Groote","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/rest/schema/analysis/ManagedSynonymFilterFactory.SynonymManager#applyListUpdates(List[String],boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/rest/schema/analysis/ManagedSynonymFilterFactory.SynonymManager#applyListUpdates(List[String],boolean).mjava","sourceNew":"    protected boolean applyListUpdates(List<String> jsonList, boolean ignoreCase) {\n      boolean madeChanges = false;\n      for (String term : jsonList) {\n        // find the mappings using the case aware key\n        String origTerm = term;\n        term = applyCaseSetting(ignoreCase, term);\n        CasePreservedSynonymMappings cpsm = synonymMappings.get(term);\n        if (cpsm == null)\n          cpsm = new CasePreservedSynonymMappings();\n\n        Set<String> treeTerms = new TreeSet<>(jsonList);\n        cpsm.mappings.put(origTerm, treeTerms);\n        madeChanges = true;\n        // only add the cpsm to the synonymMappings if it has valid data\n        if (!synonymMappings.containsKey(term) && cpsm.mappings.get(origTerm) != null) {\n          synonymMappings.put(term, cpsm);\n        }\n      }\n      return madeChanges;\n    }\n\n","sourceOld":"    protected boolean applyListUpdates(List<String> jsonList, boolean ignoreCase) {\n      boolean madeChanges = false;\n      for (String term : jsonList) {\n        // find the mappings using the case aware key\n        String origTerm = term;\n        term = applyCaseSetting(ignoreCase, term);\n        CasePreservedSynonymMappings cpsm = synonymMappings.get(term);\n        if (cpsm == null)\n          cpsm = new CasePreservedSynonymMappings();\n\n        Set<String> treeTerms = new TreeSet<>();\n        treeTerms.addAll(jsonList);\n        cpsm.mappings.put(origTerm, treeTerms);\n        madeChanges = true;\n        // only add the cpsm to the synonymMappings if it has valid data\n        if (!synonymMappings.containsKey(term) && cpsm.mappings.get(origTerm) != null) {\n          synonymMappings.put(term, cpsm);\n        }\n      }\n      return madeChanges;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b0b597c65628ca9e73913a07e81691f8229bae35","date":1571224353,"type":3,"author":"jimczi","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/rest/schema/analysis/ManagedSynonymFilterFactory.SynonymManager#applyListUpdates(List[String],boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/rest/schema/analysis/ManagedSynonymFilterFactory.SynonymManager#applyListUpdates(List[String],boolean).mjava","sourceNew":"    protected boolean applyListUpdates(List<String> jsonList, boolean ignoreCase) {\n      boolean madeChanges = false;\n      for (String term : jsonList) {\n        // find the mappings using the case aware key\n        String origTerm = term;\n        term = applyCaseSetting(ignoreCase, term);\n        CasePreservedSynonymMappings cpsm = synonymMappings.get(term);\n        if (cpsm == null)\n          cpsm = new CasePreservedSynonymMappings();\n\n        Set<String> treeTerms = new TreeSet<>(jsonList);\n        cpsm.mappings.put(origTerm, treeTerms);\n        madeChanges = true;\n        // only add the cpsm to the synonymMappings if it has valid data\n        if (!synonymMappings.containsKey(term) && cpsm.mappings.get(origTerm) != null) {\n          synonymMappings.put(term, cpsm);\n        }\n      }\n      return madeChanges;\n    }\n\n","sourceOld":"    protected boolean applyListUpdates(List<String> jsonList, boolean ignoreCase) {\n      boolean madeChanges = false;\n      for (String term : jsonList) {\n        // find the mappings using the case aware key\n        String origTerm = term;\n        term = applyCaseSetting(ignoreCase, term);\n        CasePreservedSynonymMappings cpsm = synonymMappings.get(term);\n        if (cpsm == null)\n          cpsm = new CasePreservedSynonymMappings();\n\n        Set<String> treeTerms = new TreeSet<>();\n        treeTerms.addAll(jsonList);\n        cpsm.mappings.put(origTerm, treeTerms);\n        madeChanges = true;\n        // only add the cpsm to the synonymMappings if it has valid data\n        if (!synonymMappings.containsKey(term) && cpsm.mappings.get(origTerm) != null) {\n          synonymMappings.put(term, cpsm);\n        }\n      }\n      return madeChanges;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"23b14fc1cb7939c2aad1d3a40f6282dee0bfda2e":["67ef8e48a766655ce28a63ceb24b5f4c0a35b1ba"],"4da8d4c422d841c0e5a997bf16dd471c5545d3e4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"67ef8e48a766655ce28a63ceb24b5f4c0a35b1ba":["4da8d4c422d841c0e5a997bf16dd471c5545d3e4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["23b14fc1cb7939c2aad1d3a40f6282dee0bfda2e"],"b0b597c65628ca9e73913a07e81691f8229bae35":["67ef8e48a766655ce28a63ceb24b5f4c0a35b1ba","23b14fc1cb7939c2aad1d3a40f6282dee0bfda2e"]},"commit2Childs":{"23b14fc1cb7939c2aad1d3a40f6282dee0bfda2e":["cd5edd1f2b162a5cfa08efd17851a07373a96817","b0b597c65628ca9e73913a07e81691f8229bae35"],"4da8d4c422d841c0e5a997bf16dd471c5545d3e4":["67ef8e48a766655ce28a63ceb24b5f4c0a35b1ba"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4da8d4c422d841c0e5a997bf16dd471c5545d3e4"],"67ef8e48a766655ce28a63ceb24b5f4c0a35b1ba":["23b14fc1cb7939c2aad1d3a40f6282dee0bfda2e","b0b597c65628ca9e73913a07e81691f8229bae35"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"b0b597c65628ca9e73913a07e81691f8229bae35":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817","b0b597c65628ca9e73913a07e81691f8229bae35"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}