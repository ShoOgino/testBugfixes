{"path":"lucene/src/java/org/apache/lucene/index/TieredMergePolicy#setSegmentsPerTier(double).mjava","commits":[{"id":"01e5948db9a07144112d2f08f28ca2e3cd880348","date":1301759232,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/TieredMergePolicy#setSegmentsPerTier(double).mjava","pathOld":"/dev/null","sourceNew":"  /** Sets the allowed number of segments per tier.  Smaller\n   *  values mean more merging but fewer segments.\n   *  setMaxMergeAtOnce} otherwise you'll hit\n   *  Default is 10.0. */\n  public TieredMergePolicy setSegmentsPerTier(double v) {\n    if (v < 2.0) {\n      throw new IllegalArgumentException(\"segmentsPerTier must be >= 2.0 (got \" + v + \")\");\n    }\n    segsPerTier = v;\n    return this;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"45669a651c970812a680841b97a77cce06af559f","date":1301922222,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/TieredMergePolicy#setSegmentsPerTier(double).mjava","pathOld":"/dev/null","sourceNew":"  /** Sets the allowed number of segments per tier.  Smaller\n   *  values mean more merging but fewer segments.\n   *  setMaxMergeAtOnce} otherwise you'll hit\n   *  Default is 10.0. */\n  public TieredMergePolicy setSegmentsPerTier(double v) {\n    if (v < 2.0) {\n      throw new IllegalArgumentException(\"segmentsPerTier must be >= 2.0 (got \" + v + \")\");\n    }\n    segsPerTier = v;\n    return this;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"135621f3a0670a9394eb563224a3b76cc4dddc0f","date":1304344257,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/TieredMergePolicy#setSegmentsPerTier(double).mjava","pathOld":"/dev/null","sourceNew":"  /** Sets the allowed number of segments per tier.  Smaller\n   *  values mean more merging but fewer segments.\n   *  setMaxMergeAtOnce} otherwise you'll hit\n   *  Default is 10.0. */\n  public TieredMergePolicy setSegmentsPerTier(double v) {\n    if (v < 2.0) {\n      throw new IllegalArgumentException(\"segmentsPerTier must be >= 2.0 (got \" + v + \")\");\n    }\n    segsPerTier = v;\n    return this;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3776dccca01c11e7046323cfad46a3b4a471233","date":1306100719,"type":0,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/TieredMergePolicy#setSegmentsPerTier(double).mjava","pathOld":"/dev/null","sourceNew":"  /** Sets the allowed number of segments per tier.  Smaller\n   *  values mean more merging but fewer segments.\n   *  setMaxMergeAtOnce} otherwise you'll hit\n   *  Default is 10.0. */\n  public TieredMergePolicy setSegmentsPerTier(double v) {\n    if (v < 2.0) {\n      throw new IllegalArgumentException(\"segmentsPerTier must be >= 2.0 (got \" + v + \")\");\n    }\n    segsPerTier = v;\n    return this;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ba86064e8e33b7b6f9f70abed92413dfe11e6a7e","date":1308594367,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/TieredMergePolicy#setSegmentsPerTier(double).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/TieredMergePolicy#setSegmentsPerTier(double).mjava","sourceNew":"  /** Sets the allowed number of segments per tier.  Smaller\n   *  values mean more merging but fewer segments.\n   *\n   *  <p><b>NOTE</b>: this value should be >= the {@link\n   *  #setMaxMergeAtOnce} otherwise you'll force too much\n   *  merging to occur.</p>\n   *\n   *  <p>Default is 10.0.</p> */\n  public TieredMergePolicy setSegmentsPerTier(double v) {\n    if (v < 2.0) {\n      throw new IllegalArgumentException(\"segmentsPerTier must be >= 2.0 (got \" + v + \")\");\n    }\n    segsPerTier = v;\n    return this;\n  }\n\n","sourceOld":"  /** Sets the allowed number of segments per tier.  Smaller\n   *  values mean more merging but fewer segments.\n   *  setMaxMergeAtOnce} otherwise you'll hit\n   *  Default is 10.0. */\n  public TieredMergePolicy setSegmentsPerTier(double v) {\n    if (v < 2.0) {\n      throw new IllegalArgumentException(\"segmentsPerTier must be >= 2.0 (got \" + v + \")\");\n    }\n    segsPerTier = v;\n    return this;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"718f8730b97959cb87aaeadc9fafb9513f3c1bfe","date":1308670382,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/TieredMergePolicy#setSegmentsPerTier(double).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/TieredMergePolicy#setSegmentsPerTier(double).mjava","sourceNew":"  /** Sets the allowed number of segments per tier.  Smaller\n   *  values mean more merging but fewer segments.\n   *\n   *  <p><b>NOTE</b>: this value should be >= the {@link\n   *  #setMaxMergeAtOnce} otherwise you'll force too much\n   *  merging to occur.</p>\n   *\n   *  <p>Default is 10.0.</p> */\n  public TieredMergePolicy setSegmentsPerTier(double v) {\n    if (v < 2.0) {\n      throw new IllegalArgumentException(\"segmentsPerTier must be >= 2.0 (got \" + v + \")\");\n    }\n    segsPerTier = v;\n    return this;\n  }\n\n","sourceOld":"  /** Sets the allowed number of segments per tier.  Smaller\n   *  values mean more merging but fewer segments.\n   *  setMaxMergeAtOnce} otherwise you'll hit\n   *  Default is 10.0. */\n  public TieredMergePolicy setSegmentsPerTier(double v) {\n    if (v < 2.0) {\n      throw new IllegalArgumentException(\"segmentsPerTier must be >= 2.0 (got \" + v + \")\");\n    }\n    segsPerTier = v;\n    return this;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d083e83f225b11e5fdd900e83d26ddb385b6955c","date":1310029438,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/TieredMergePolicy#setSegmentsPerTier(double).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/TieredMergePolicy#setSegmentsPerTier(double).mjava","sourceNew":"  /** Sets the allowed number of segments per tier.  Smaller\n   *  values mean more merging but fewer segments.\n   *\n   *  <p><b>NOTE</b>: this value should be >= the {@link\n   *  #setMaxMergeAtOnce} otherwise you'll force too much\n   *  merging to occur.</p>\n   *\n   *  <p>Default is 10.0.</p> */\n  public TieredMergePolicy setSegmentsPerTier(double v) {\n    if (v < 2.0) {\n      throw new IllegalArgumentException(\"segmentsPerTier must be >= 2.0 (got \" + v + \")\");\n    }\n    segsPerTier = v;\n    return this;\n  }\n\n","sourceOld":"  /** Sets the allowed number of segments per tier.  Smaller\n   *  values mean more merging but fewer segments.\n   *  setMaxMergeAtOnce} otherwise you'll hit\n   *  Default is 10.0. */\n  public TieredMergePolicy setSegmentsPerTier(double v) {\n    if (v < 2.0) {\n      throw new IllegalArgumentException(\"segmentsPerTier must be >= 2.0 (got \" + v + \")\");\n    }\n    segsPerTier = v;\n    return this;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/TieredMergePolicy#setSegmentsPerTier(double).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/TieredMergePolicy#setSegmentsPerTier(double).mjava","sourceNew":"  /** Sets the allowed number of segments per tier.  Smaller\n   *  values mean more merging but fewer segments.\n   *\n   *  <p><b>NOTE</b>: this value should be >= the {@link\n   *  #setMaxMergeAtOnce} otherwise you'll force too much\n   *  merging to occur.</p>\n   *\n   *  <p>Default is 10.0.</p> */\n  public TieredMergePolicy setSegmentsPerTier(double v) {\n    if (v < 2.0) {\n      throw new IllegalArgumentException(\"segmentsPerTier must be >= 2.0 (got \" + v + \")\");\n    }\n    segsPerTier = v;\n    return this;\n  }\n\n","sourceOld":"  /** Sets the allowed number of segments per tier.  Smaller\n   *  values mean more merging but fewer segments.\n   *\n   *  <p><b>NOTE</b>: this value should be >= the {@link\n   *  #setMaxMergeAtOnce} otherwise you'll force too much\n   *  merging to occur.</p>\n   *\n   *  <p>Default is 10.0.</p> */\n  public TieredMergePolicy setSegmentsPerTier(double v) {\n    if (v < 2.0) {\n      throw new IllegalArgumentException(\"segmentsPerTier must be >= 2.0 (got \" + v + \")\");\n    }\n    segsPerTier = v;\n    return this;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"01e5948db9a07144112d2f08f28ca2e3cd880348":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ba86064e8e33b7b6f9f70abed92413dfe11e6a7e":["01e5948db9a07144112d2f08f28ca2e3cd880348"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["ba86064e8e33b7b6f9f70abed92413dfe11e6a7e"],"a3776dccca01c11e7046323cfad46a3b4a471233":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","01e5948db9a07144112d2f08f28ca2e3cd880348"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"718f8730b97959cb87aaeadc9fafb9513f3c1bfe":["a3776dccca01c11e7046323cfad46a3b4a471233","ba86064e8e33b7b6f9f70abed92413dfe11e6a7e"],"135621f3a0670a9394eb563224a3b76cc4dddc0f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","01e5948db9a07144112d2f08f28ca2e3cd880348"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":["01e5948db9a07144112d2f08f28ca2e3cd880348","ba86064e8e33b7b6f9f70abed92413dfe11e6a7e"],"45669a651c970812a680841b97a77cce06af559f":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","01e5948db9a07144112d2f08f28ca2e3cd880348"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"01e5948db9a07144112d2f08f28ca2e3cd880348":["ba86064e8e33b7b6f9f70abed92413dfe11e6a7e","a3776dccca01c11e7046323cfad46a3b4a471233","135621f3a0670a9394eb563224a3b76cc4dddc0f","d083e83f225b11e5fdd900e83d26ddb385b6955c","45669a651c970812a680841b97a77cce06af559f"],"ba86064e8e33b7b6f9f70abed92413dfe11e6a7e":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","718f8730b97959cb87aaeadc9fafb9513f3c1bfe","d083e83f225b11e5fdd900e83d26ddb385b6955c"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a3776dccca01c11e7046323cfad46a3b4a471233":["718f8730b97959cb87aaeadc9fafb9513f3c1bfe"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["01e5948db9a07144112d2f08f28ca2e3cd880348","a3776dccca01c11e7046323cfad46a3b4a471233","135621f3a0670a9394eb563224a3b76cc4dddc0f","45669a651c970812a680841b97a77cce06af559f"],"718f8730b97959cb87aaeadc9fafb9513f3c1bfe":[],"135621f3a0670a9394eb563224a3b76cc4dddc0f":[],"d083e83f225b11e5fdd900e83d26ddb385b6955c":[],"45669a651c970812a680841b97a77cce06af559f":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["718f8730b97959cb87aaeadc9fafb9513f3c1bfe","135621f3a0670a9394eb563224a3b76cc4dddc0f","d083e83f225b11e5fdd900e83d26ddb385b6955c","45669a651c970812a680841b97a77cce06af559f","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}