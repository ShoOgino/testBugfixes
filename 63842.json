{"path":"lucene/core/src/test/org/apache/lucene/util/packed/TestEliasFanoSequence#makeEncoder(long[],long).mjava","commits":[{"id":"423470dff9e19aa0db92590e282e2ca12e34d65a","date":1381851051,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/packed/TestEliasFanoSequence#makeEncoder(long[],long).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/util/packed/TestEliasFanoSequence#makeEncoder(long[]).mjava","sourceNew":"  private static EliasFanoEncoder makeEncoder(long[] values, long indexInterval) {\n    long upperBound = -1L;\n    for (long value: values) {\n      assertTrue(value >= upperBound); // test data ok\n      upperBound = value;\n    }\n    EliasFanoEncoder efEncoder = new EliasFanoEncoder(values.length, upperBound, indexInterval);\n    for (long value: values) {\n      efEncoder.encodeNext(value);\n    }\n    return efEncoder;\n  }\n\n","sourceOld":"  private static EliasFanoEncoder makeEncoder(long[] values) {\n    long upperBound = -1L;\n    for (long value: values) {\n      assertTrue(value >= upperBound); // test data ok\n      upperBound = value;\n    }\n    EliasFanoEncoder efEncoder = new EliasFanoEncoder(values.length, upperBound);\n    for (long value: values) {\n      efEncoder.encodeNext(value);\n    }\n    return efEncoder;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"556259cdb46d4f7fb27f4688c4efcb3eaee4a550","date":1432028057,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/test/org/apache/lucene/util/packed/TestEliasFanoSequence#makeEncoder(long[],long).mjava","sourceNew":null,"sourceOld":"  private static EliasFanoEncoder makeEncoder(long[] values, long indexInterval) {\n    long upperBound = -1L;\n    for (long value: values) {\n      assertTrue(value >= upperBound); // test data ok\n      upperBound = value;\n    }\n    EliasFanoEncoder efEncoder = new EliasFanoEncoder(values.length, upperBound, indexInterval);\n    for (long value: values) {\n      efEncoder.encodeNext(value);\n    }\n    return efEncoder;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"556259cdb46d4f7fb27f4688c4efcb3eaee4a550":["423470dff9e19aa0db92590e282e2ca12e34d65a"],"423470dff9e19aa0db92590e282e2ca12e34d65a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["556259cdb46d4f7fb27f4688c4efcb3eaee4a550"]},"commit2Childs":{"556259cdb46d4f7fb27f4688c4efcb3eaee4a550":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"423470dff9e19aa0db92590e282e2ca12e34d65a":["556259cdb46d4f7fb27f4688c4efcb3eaee4a550"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["423470dff9e19aa0db92590e282e2ca12e34d65a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}