{"path":"modules/analysis/common/src/java/org/apache/lucene/analysis/core/StopFilter#StopFilter(Version,TokenStream,Set[#],boolean).mjava","commits":[{"id":"790c3f61c9b891d66d919c5d10db9fa5216eb0f1","date":1274818604,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/core/StopFilter#StopFilter(Version,TokenStream,Set[#],boolean).mjava","pathOld":"lucene/src/java/org/apache/lucene/analysis/StopFilter#StopFilter(Version,TokenStream,Set[#],boolean).mjava","sourceNew":"  /**\n   * Construct a token stream filtering the given input. If\n   * <code>stopWords</code> is an instance of {@link CharArraySet} (true if\n   * <code>makeStopSet()</code> was used to construct the set) it will be\n   * directly used and <code>ignoreCase</code> will be ignored since\n   * <code>CharArraySet</code> directly controls case sensitivity.\n   * <p/>\n   * If <code>stopWords</code> is not an instance of {@link CharArraySet}, a new\n   * CharArraySet will be constructed and <code>ignoreCase</code> will be used\n   * to specify the case sensitivity of that set.\n   * \n   * @param matchVersion\n   *          Lucene version to enable correct Unicode 4.0 behavior in the stop\n   *          set if Version > 3.0. See <a href=\"#version\">above</a> for details.\n   * @param input\n   *          Input TokenStream\n   * @param stopWords\n   *          A Set of Strings or char[] or any other toString()-able set\n   *          representing the stopwords\n   * @param ignoreCase\n   *          if true, all words are lower cased first\n   */\n  public StopFilter(Version matchVersion, TokenStream input, Set<?> stopWords, boolean ignoreCase)\n  {\n   this(matchVersion, matchVersion.onOrAfter(Version.LUCENE_29), input, stopWords, ignoreCase);\n  }\n\n","sourceOld":"  /**\n   * Construct a token stream filtering the given input. If\n   * <code>stopWords</code> is an instance of {@link CharArraySet} (true if\n   * <code>makeStopSet()</code> was used to construct the set) it will be\n   * directly used and <code>ignoreCase</code> will be ignored since\n   * <code>CharArraySet</code> directly controls case sensitivity.\n   * <p/>\n   * If <code>stopWords</code> is not an instance of {@link CharArraySet}, a new\n   * CharArraySet will be constructed and <code>ignoreCase</code> will be used\n   * to specify the case sensitivity of that set.\n   * \n   * @param matchVersion\n   *          Lucene version to enable correct Unicode 4.0 behavior in the stop\n   *          set if Version > 3.0. See <a href=\"#version\">above</a> for details.\n   * @param input\n   *          Input TokenStream\n   * @param stopWords\n   *          A Set of Strings or char[] or any other toString()-able set\n   *          representing the stopwords\n   * @param ignoreCase\n   *          if true, all words are lower cased first\n   */\n  public StopFilter(Version matchVersion, TokenStream input, Set<?> stopWords, boolean ignoreCase)\n  {\n   this(matchVersion, matchVersion.onOrAfter(Version.LUCENE_29), input, stopWords, ignoreCase);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4e8cc373c801e54cec75daf9f52792cb4b17f536","date":1291116159,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/core/StopFilter#StopFilter(Version,TokenStream,Set[#],boolean).mjava","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/core/StopFilter#StopFilter(Version,TokenStream,Set[#],boolean).mjava","sourceNew":"  /**\n   * Construct a token stream filtering the given input. If\n   * <code>stopWords</code> is an instance of {@link CharArraySet} (true if\n   * <code>makeStopSet()</code> was used to construct the set) it will be\n   * directly used and <code>ignoreCase</code> will be ignored since\n   * <code>CharArraySet</code> directly controls case sensitivity.\n   * <p/>\n   * If <code>stopWords</code> is not an instance of {@link CharArraySet}, a new\n   * CharArraySet will be constructed and <code>ignoreCase</code> will be used\n   * to specify the case sensitivity of that set.\n   * \n   * @param matchVersion\n   *          Lucene version to enable correct Unicode 4.0 behavior in the stop\n   *          set if Version > 3.0. See <a href=\"#version\">above</a> for details.\n   * @param input\n   *          Input TokenStream\n   * @param stopWords\n   *          A Set of Strings or char[] or any other toString()-able set\n   *          representing the stopwords\n   * @param ignoreCase\n   *          if true, all words are lower cased first\n   */\n  public StopFilter(Version matchVersion, TokenStream input, Set<?> stopWords, boolean ignoreCase)\n  {\n    super(input);\n    this.stopWords = stopWords instanceof CharArraySet ? (CharArraySet) stopWords : new CharArraySet(matchVersion, stopWords, ignoreCase);\n  }\n\n","sourceOld":"  /**\n   * Construct a token stream filtering the given input. If\n   * <code>stopWords</code> is an instance of {@link CharArraySet} (true if\n   * <code>makeStopSet()</code> was used to construct the set) it will be\n   * directly used and <code>ignoreCase</code> will be ignored since\n   * <code>CharArraySet</code> directly controls case sensitivity.\n   * <p/>\n   * If <code>stopWords</code> is not an instance of {@link CharArraySet}, a new\n   * CharArraySet will be constructed and <code>ignoreCase</code> will be used\n   * to specify the case sensitivity of that set.\n   * \n   * @param matchVersion\n   *          Lucene version to enable correct Unicode 4.0 behavior in the stop\n   *          set if Version > 3.0. See <a href=\"#version\">above</a> for details.\n   * @param input\n   *          Input TokenStream\n   * @param stopWords\n   *          A Set of Strings or char[] or any other toString()-able set\n   *          representing the stopwords\n   * @param ignoreCase\n   *          if true, all words are lower cased first\n   */\n  public StopFilter(Version matchVersion, TokenStream input, Set<?> stopWords, boolean ignoreCase)\n  {\n   this(matchVersion, matchVersion.onOrAfter(Version.LUCENE_29), input, stopWords, ignoreCase);\n  }\n\n","bugFix":null,"bugIntro":["f714d3d16beb7d9cc74e7ae85c110a7976c62938"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"3bb13258feba31ab676502787ab2e1779f129b7a","date":1291596436,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/core/StopFilter#StopFilter(Version,TokenStream,Set[#],boolean).mjava","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/core/StopFilter#StopFilter(Version,TokenStream,Set[#],boolean).mjava","sourceNew":"  /**\n   * Construct a token stream filtering the given input. If\n   * <code>stopWords</code> is an instance of {@link CharArraySet} (true if\n   * <code>makeStopSet()</code> was used to construct the set) it will be\n   * directly used and <code>ignoreCase</code> will be ignored since\n   * <code>CharArraySet</code> directly controls case sensitivity.\n   * <p/>\n   * If <code>stopWords</code> is not an instance of {@link CharArraySet}, a new\n   * CharArraySet will be constructed and <code>ignoreCase</code> will be used\n   * to specify the case sensitivity of that set.\n   * \n   * @param matchVersion\n   *          Lucene version to enable correct Unicode 4.0 behavior in the stop\n   *          set if Version > 3.0. See <a href=\"#version\">above</a> for details.\n   * @param input\n   *          Input TokenStream\n   * @param stopWords\n   *          A Set of Strings or char[] or any other toString()-able set\n   *          representing the stopwords\n   * @param ignoreCase\n   *          if true, all words are lower cased first\n   */\n  public StopFilter(Version matchVersion, TokenStream input, Set<?> stopWords, boolean ignoreCase)\n  {\n    super(input);\n    this.stopWords = stopWords instanceof CharArraySet ? (CharArraySet) stopWords : new CharArraySet(matchVersion, stopWords, ignoreCase);\n  }\n\n","sourceOld":"  /**\n   * Construct a token stream filtering the given input. If\n   * <code>stopWords</code> is an instance of {@link CharArraySet} (true if\n   * <code>makeStopSet()</code> was used to construct the set) it will be\n   * directly used and <code>ignoreCase</code> will be ignored since\n   * <code>CharArraySet</code> directly controls case sensitivity.\n   * <p/>\n   * If <code>stopWords</code> is not an instance of {@link CharArraySet}, a new\n   * CharArraySet will be constructed and <code>ignoreCase</code> will be used\n   * to specify the case sensitivity of that set.\n   * \n   * @param matchVersion\n   *          Lucene version to enable correct Unicode 4.0 behavior in the stop\n   *          set if Version > 3.0. See <a href=\"#version\">above</a> for details.\n   * @param input\n   *          Input TokenStream\n   * @param stopWords\n   *          A Set of Strings or char[] or any other toString()-able set\n   *          representing the stopwords\n   * @param ignoreCase\n   *          if true, all words are lower cased first\n   */\n  public StopFilter(Version matchVersion, TokenStream input, Set<?> stopWords, boolean ignoreCase)\n  {\n   this(matchVersion, matchVersion.onOrAfter(Version.LUCENE_29), input, stopWords, ignoreCase);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/core/StopFilter#StopFilter(Version,TokenStream,Set[#],boolean).mjava","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/core/StopFilter#StopFilter(Version,TokenStream,Set[#],boolean).mjava","sourceNew":"  /**\n   * Construct a token stream filtering the given input. If\n   * <code>stopWords</code> is an instance of {@link CharArraySet} (true if\n   * <code>makeStopSet()</code> was used to construct the set) it will be\n   * directly used and <code>ignoreCase</code> will be ignored since\n   * <code>CharArraySet</code> directly controls case sensitivity.\n   * <p/>\n   * If <code>stopWords</code> is not an instance of {@link CharArraySet}, a new\n   * CharArraySet will be constructed and <code>ignoreCase</code> will be used\n   * to specify the case sensitivity of that set.\n   * \n   * @param matchVersion\n   *          Lucene version to enable correct Unicode 4.0 behavior in the stop\n   *          set if Version > 3.0. See <a href=\"#version\">above</a> for details.\n   * @param input\n   *          Input TokenStream\n   * @param stopWords\n   *          A Set of Strings or char[] or any other toString()-able set\n   *          representing the stopwords\n   * @param ignoreCase\n   *          if true, all words are lower cased first\n   */\n  public StopFilter(Version matchVersion, TokenStream input, Set<?> stopWords, boolean ignoreCase)\n  {\n    super(input);\n    this.stopWords = stopWords instanceof CharArraySet ? (CharArraySet) stopWords : new CharArraySet(matchVersion, stopWords, ignoreCase);\n  }\n\n","sourceOld":"  /**\n   * Construct a token stream filtering the given input. If\n   * <code>stopWords</code> is an instance of {@link CharArraySet} (true if\n   * <code>makeStopSet()</code> was used to construct the set) it will be\n   * directly used and <code>ignoreCase</code> will be ignored since\n   * <code>CharArraySet</code> directly controls case sensitivity.\n   * <p/>\n   * If <code>stopWords</code> is not an instance of {@link CharArraySet}, a new\n   * CharArraySet will be constructed and <code>ignoreCase</code> will be used\n   * to specify the case sensitivity of that set.\n   * \n   * @param matchVersion\n   *          Lucene version to enable correct Unicode 4.0 behavior in the stop\n   *          set if Version > 3.0. See <a href=\"#version\">above</a> for details.\n   * @param input\n   *          Input TokenStream\n   * @param stopWords\n   *          A Set of Strings or char[] or any other toString()-able set\n   *          representing the stopwords\n   * @param ignoreCase\n   *          if true, all words are lower cased first\n   */\n  public StopFilter(Version matchVersion, TokenStream input, Set<?> stopWords, boolean ignoreCase)\n  {\n   this(matchVersion, matchVersion.onOrAfter(Version.LUCENE_29), input, stopWords, ignoreCase);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"f714d3d16beb7d9cc74e7ae85c110a7976c62938","date":1296412234,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/core/StopFilter#StopFilter(Version,TokenStream,Set[#],boolean).mjava","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/core/StopFilter#StopFilter(Version,TokenStream,Set[#],boolean).mjava","sourceNew":"  /**\n   * Construct a token stream filtering the given input. If\n   * <code>stopWords</code> is an instance of {@link CharArraySet} (true if\n   * <code>makeStopSet()</code> was used to construct the set) it will be\n   * directly used and <code>ignoreCase</code> will be ignored since\n   * <code>CharArraySet</code> directly controls case sensitivity.\n   * <p/>\n   * If <code>stopWords</code> is not an instance of {@link CharArraySet}, a new\n   * CharArraySet will be constructed and <code>ignoreCase</code> will be used\n   * to specify the case sensitivity of that set.\n   * \n   * @param matchVersion\n   *          Lucene version to enable correct Unicode 4.0 behavior in the stop\n   *          set if Version > 3.0. See <a href=\"#version\">above</a> for details.\n   * @param input\n   *          Input TokenStream\n   * @param stopWords\n   *          A Set of Strings or char[] or any other toString()-able set\n   *          representing the stopwords\n   * @param ignoreCase\n   *          if true, all words are lower cased first\n   */\n  public StopFilter(Version matchVersion, TokenStream input, Set<?> stopWords, boolean ignoreCase)\n  {\n    super(true, input);\n    this.stopWords = stopWords instanceof CharArraySet ? (CharArraySet) stopWords : new CharArraySet(matchVersion, stopWords, ignoreCase);\n  }\n\n","sourceOld":"  /**\n   * Construct a token stream filtering the given input. If\n   * <code>stopWords</code> is an instance of {@link CharArraySet} (true if\n   * <code>makeStopSet()</code> was used to construct the set) it will be\n   * directly used and <code>ignoreCase</code> will be ignored since\n   * <code>CharArraySet</code> directly controls case sensitivity.\n   * <p/>\n   * If <code>stopWords</code> is not an instance of {@link CharArraySet}, a new\n   * CharArraySet will be constructed and <code>ignoreCase</code> will be used\n   * to specify the case sensitivity of that set.\n   * \n   * @param matchVersion\n   *          Lucene version to enable correct Unicode 4.0 behavior in the stop\n   *          set if Version > 3.0. See <a href=\"#version\">above</a> for details.\n   * @param input\n   *          Input TokenStream\n   * @param stopWords\n   *          A Set of Strings or char[] or any other toString()-able set\n   *          representing the stopwords\n   * @param ignoreCase\n   *          if true, all words are lower cased first\n   */\n  public StopFilter(Version matchVersion, TokenStream input, Set<?> stopWords, boolean ignoreCase)\n  {\n    super(input);\n    this.stopWords = stopWords instanceof CharArraySet ? (CharArraySet) stopWords : new CharArraySet(matchVersion, stopWords, ignoreCase);\n  }\n\n","bugFix":["4e8cc373c801e54cec75daf9f52792cb4b17f536"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/core/StopFilter#StopFilter(Version,TokenStream,Set[#],boolean).mjava","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/core/StopFilter#StopFilter(Version,TokenStream,Set[#],boolean).mjava","sourceNew":"  /**\n   * Construct a token stream filtering the given input. If\n   * <code>stopWords</code> is an instance of {@link CharArraySet} (true if\n   * <code>makeStopSet()</code> was used to construct the set) it will be\n   * directly used and <code>ignoreCase</code> will be ignored since\n   * <code>CharArraySet</code> directly controls case sensitivity.\n   * <p/>\n   * If <code>stopWords</code> is not an instance of {@link CharArraySet}, a new\n   * CharArraySet will be constructed and <code>ignoreCase</code> will be used\n   * to specify the case sensitivity of that set.\n   * \n   * @param matchVersion\n   *          Lucene version to enable correct Unicode 4.0 behavior in the stop\n   *          set if Version > 3.0. See <a href=\"#version\">above</a> for details.\n   * @param input\n   *          Input TokenStream\n   * @param stopWords\n   *          A Set of Strings or char[] or any other toString()-able set\n   *          representing the stopwords\n   * @param ignoreCase\n   *          if true, all words are lower cased first\n   */\n  public StopFilter(Version matchVersion, TokenStream input, Set<?> stopWords, boolean ignoreCase)\n  {\n    super(true, input);\n    this.stopWords = stopWords instanceof CharArraySet ? (CharArraySet) stopWords : new CharArraySet(matchVersion, stopWords, ignoreCase);\n  }\n\n","sourceOld":"  /**\n   * Construct a token stream filtering the given input. If\n   * <code>stopWords</code> is an instance of {@link CharArraySet} (true if\n   * <code>makeStopSet()</code> was used to construct the set) it will be\n   * directly used and <code>ignoreCase</code> will be ignored since\n   * <code>CharArraySet</code> directly controls case sensitivity.\n   * <p/>\n   * If <code>stopWords</code> is not an instance of {@link CharArraySet}, a new\n   * CharArraySet will be constructed and <code>ignoreCase</code> will be used\n   * to specify the case sensitivity of that set.\n   * \n   * @param matchVersion\n   *          Lucene version to enable correct Unicode 4.0 behavior in the stop\n   *          set if Version > 3.0. See <a href=\"#version\">above</a> for details.\n   * @param input\n   *          Input TokenStream\n   * @param stopWords\n   *          A Set of Strings or char[] or any other toString()-able set\n   *          representing the stopwords\n   * @param ignoreCase\n   *          if true, all words are lower cased first\n   */\n  public StopFilter(Version matchVersion, TokenStream input, Set<?> stopWords, boolean ignoreCase)\n  {\n    super(input);\n    this.stopWords = stopWords instanceof CharArraySet ? (CharArraySet) stopWords : new CharArraySet(matchVersion, stopWords, ignoreCase);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bde51b089eb7f86171eb3406e38a274743f9b7ac","date":1298336439,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"modules/analysis/common/src/java/org/apache/lucene/analysis/core/StopFilter#StopFilter(Version,TokenStream,Set[#],boolean).mjava","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/core/StopFilter#StopFilter(Version,TokenStream,Set[#],boolean).mjava","sourceNew":"  /**\n   * Construct a token stream filtering the given input. If\n   * <code>stopWords</code> is an instance of {@link CharArraySet} (true if\n   * <code>makeStopSet()</code> was used to construct the set) it will be\n   * directly used and <code>ignoreCase</code> will be ignored since\n   * <code>CharArraySet</code> directly controls case sensitivity.\n   * <p/>\n   * If <code>stopWords</code> is not an instance of {@link CharArraySet}, a new\n   * CharArraySet will be constructed and <code>ignoreCase</code> will be used\n   * to specify the case sensitivity of that set.\n   * \n   * @param matchVersion\n   *          Lucene version to enable correct Unicode 4.0 behavior in the stop\n   *          set if Version > 3.0. See <a href=\"#version\">above</a> for details.\n   * @param input\n   *          Input TokenStream\n   * @param stopWords\n   *          A Set of Strings or char[] or any other toString()-able set\n   *          representing the stopwords\n   * @param ignoreCase\n   *          if true, all words are lower cased first\n   */\n  public StopFilter(Version matchVersion, TokenStream input, Set<?> stopWords, boolean ignoreCase)\n  {\n    super(true, input);\n    this.stopWords = stopWords instanceof CharArraySet ? (CharArraySet) stopWords : new CharArraySet(matchVersion, stopWords, ignoreCase);\n  }\n\n","sourceOld":"  /**\n   * Construct a token stream filtering the given input. If\n   * <code>stopWords</code> is an instance of {@link CharArraySet} (true if\n   * <code>makeStopSet()</code> was used to construct the set) it will be\n   * directly used and <code>ignoreCase</code> will be ignored since\n   * <code>CharArraySet</code> directly controls case sensitivity.\n   * <p/>\n   * If <code>stopWords</code> is not an instance of {@link CharArraySet}, a new\n   * CharArraySet will be constructed and <code>ignoreCase</code> will be used\n   * to specify the case sensitivity of that set.\n   * \n   * @param matchVersion\n   *          Lucene version to enable correct Unicode 4.0 behavior in the stop\n   *          set if Version > 3.0. See <a href=\"#version\">above</a> for details.\n   * @param input\n   *          Input TokenStream\n   * @param stopWords\n   *          A Set of Strings or char[] or any other toString()-able set\n   *          representing the stopwords\n   * @param ignoreCase\n   *          if true, all words are lower cased first\n   */\n  public StopFilter(Version matchVersion, TokenStream input, Set<?> stopWords, boolean ignoreCase)\n  {\n    super(input);\n    this.stopWords = stopWords instanceof CharArraySet ? (CharArraySet) stopWords : new CharArraySet(matchVersion, stopWords, ignoreCase);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c39363fefe2d7f6a6d50ce8e8b758c17a257c58e","date":1328817590,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"modules/analysis/common/src/java/org/apache/lucene/analysis/core/StopFilter#StopFilter(Version,TokenStream,Set[#],boolean).mjava","sourceNew":null,"sourceOld":"  /**\n   * Construct a token stream filtering the given input. If\n   * <code>stopWords</code> is an instance of {@link CharArraySet} (true if\n   * <code>makeStopSet()</code> was used to construct the set) it will be\n   * directly used and <code>ignoreCase</code> will be ignored since\n   * <code>CharArraySet</code> directly controls case sensitivity.\n   * <p/>\n   * If <code>stopWords</code> is not an instance of {@link CharArraySet}, a new\n   * CharArraySet will be constructed and <code>ignoreCase</code> will be used\n   * to specify the case sensitivity of that set.\n   * \n   * @param matchVersion\n   *          Lucene version to enable correct Unicode 4.0 behavior in the stop\n   *          set if Version > 3.0. See <a href=\"#version\">above</a> for details.\n   * @param input\n   *          Input TokenStream\n   * @param stopWords\n   *          A Set of Strings or char[] or any other toString()-able set\n   *          representing the stopwords\n   * @param ignoreCase\n   *          if true, all words are lower cased first\n   */\n  public StopFilter(Version matchVersion, TokenStream input, Set<?> stopWords, boolean ignoreCase)\n  {\n    super(true, input);\n    this.stopWords = stopWords instanceof CharArraySet ? (CharArraySet) stopWords : new CharArraySet(matchVersion, stopWords, ignoreCase);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c39363fefe2d7f6a6d50ce8e8b758c17a257c58e":["f714d3d16beb7d9cc74e7ae85c110a7976c62938"],"f714d3d16beb7d9cc74e7ae85c110a7976c62938":["4e8cc373c801e54cec75daf9f52792cb4b17f536"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["3bb13258feba31ab676502787ab2e1779f129b7a","f714d3d16beb7d9cc74e7ae85c110a7976c62938"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["790c3f61c9b891d66d919c5d10db9fa5216eb0f1","4e8cc373c801e54cec75daf9f52792cb4b17f536"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","f714d3d16beb7d9cc74e7ae85c110a7976c62938"],"3bb13258feba31ab676502787ab2e1779f129b7a":["790c3f61c9b891d66d919c5d10db9fa5216eb0f1","4e8cc373c801e54cec75daf9f52792cb4b17f536"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c39363fefe2d7f6a6d50ce8e8b758c17a257c58e"],"4e8cc373c801e54cec75daf9f52792cb4b17f536":["790c3f61c9b891d66d919c5d10db9fa5216eb0f1"],"790c3f61c9b891d66d919c5d10db9fa5216eb0f1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"c39363fefe2d7f6a6d50ce8e8b758c17a257c58e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f714d3d16beb7d9cc74e7ae85c110a7976c62938":["c39363fefe2d7f6a6d50ce8e8b758c17a257c58e","29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac"],"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["790c3f61c9b891d66d919c5d10db9fa5216eb0f1"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["bde51b089eb7f86171eb3406e38a274743f9b7ac"],"3bb13258feba31ab676502787ab2e1779f129b7a":["29ef99d61cda9641b6250bf9567329a6e65f901d"],"bde51b089eb7f86171eb3406e38a274743f9b7ac":[],"4e8cc373c801e54cec75daf9f52792cb4b17f536":["f714d3d16beb7d9cc74e7ae85c110a7976c62938","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","3bb13258feba31ab676502787ab2e1779f129b7a"],"790c3f61c9b891d66d919c5d10db9fa5216eb0f1":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","3bb13258feba31ab676502787ab2e1779f129b7a","4e8cc373c801e54cec75daf9f52792cb4b17f536"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["29ef99d61cda9641b6250bf9567329a6e65f901d","bde51b089eb7f86171eb3406e38a274743f9b7ac","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}