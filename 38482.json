{"path":"solr/core/src/test/org/apache/solr/cloud/SharedFSAutoReplicaFailoverTest#getLiveAndActiveCount(String).mjava","commits":[{"id":"0ad7bdba3e91cf3373cda2e52239cb761fc0b452","date":1408019547,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/SharedFSAutoReplicaFailoverTest#getLiveAndActiveCount(String).mjava","pathOld":"/dev/null","sourceNew":"  private int getLiveAndActiveCount(String collection1) {\n    Collection<Slice> slices;\n    slices = cloudClient.getZkStateReader().getClusterState().getActiveSlices(collection1);\n    int liveAndActive = 0;\n    for (Slice slice : slices) {\n      for (Replica replica : slice.getReplicas()) {\n        boolean live = cloudClient.getZkStateReader().getClusterState().liveNodesContain(replica.getNodeName());\n        boolean active = replica.getStr(ZkStateReader.STATE_PROP).equals(ZkStateReader.ACTIVE);\n        if (live && active) {\n          liveAndActive++;\n        }\n      }\n    }\n    return liveAndActive;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a219f1dcad1700e84807666bdbd2b573e8de7021","date":1428130940,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/SharedFSAutoReplicaFailoverTest#getLiveAndActiveCount(String).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/SharedFSAutoReplicaFailoverTest#getLiveAndActiveCount(String).mjava","sourceNew":"  private int getLiveAndActiveCount(String collection1) {\n    Collection<Slice> slices;\n    slices = cloudClient.getZkStateReader().getClusterState().getActiveSlices(collection1);\n    int liveAndActive = 0;\n    for (Slice slice : slices) {\n      for (Replica replica : slice.getReplicas()) {\n        boolean live = cloudClient.getZkStateReader().getClusterState().liveNodesContain(replica.getNodeName());\n        boolean active = replica.getState() == Replica.State.ACTIVE;\n        if (live && active) {\n          liveAndActive++;\n        }\n      }\n    }\n    return liveAndActive;\n  }\n\n","sourceOld":"  private int getLiveAndActiveCount(String collection1) {\n    Collection<Slice> slices;\n    slices = cloudClient.getZkStateReader().getClusterState().getActiveSlices(collection1);\n    int liveAndActive = 0;\n    for (Slice slice : slices) {\n      for (Replica replica : slice.getReplicas()) {\n        boolean live = cloudClient.getZkStateReader().getClusterState().liveNodesContain(replica.getNodeName());\n        boolean active = replica.getStr(ZkStateReader.STATE_PROP).equals(ZkStateReader.ACTIVE);\n        if (live && active) {\n          liveAndActive++;\n        }\n      }\n    }\n    return liveAndActive;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3747a28ce6c262c1e27f7c7b30a827bc1a17260b","date":1428529761,"type":5,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/common/cloud/ClusterStateUtil#getLiveAndActiveReplicaCount(ZkStateReader,String).mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/SharedFSAutoReplicaFailoverTest#getLiveAndActiveCount(String).mjava","sourceNew":"  public static int getLiveAndActiveReplicaCount(ZkStateReader zkStateReader, String collection) {\n    Collection<Slice> slices;\n    slices = zkStateReader.getClusterState().getActiveSlices(collection);\n    int liveAndActive = 0;\n    for (Slice slice : slices) {\n      for (Replica replica : slice.getReplicas()) {\n        boolean live = zkStateReader.getClusterState().liveNodesContain(replica.getNodeName());\n        boolean active = replica.getState() == Replica.State.ACTIVE;\n        if (live && active) {\n          liveAndActive++;\n        }\n      }\n    }\n    return liveAndActive;\n  }\n\n","sourceOld":"  private int getLiveAndActiveCount(String collection1) {\n    Collection<Slice> slices;\n    slices = cloudClient.getZkStateReader().getClusterState().getActiveSlices(collection1);\n    int liveAndActive = 0;\n    for (Slice slice : slices) {\n      for (Replica replica : slice.getReplicas()) {\n        boolean live = cloudClient.getZkStateReader().getClusterState().liveNodesContain(replica.getNodeName());\n        boolean active = replica.getState() == Replica.State.ACTIVE;\n        if (live && active) {\n          liveAndActive++;\n        }\n      }\n    }\n    return liveAndActive;\n  }\n\n","bugFix":null,"bugIntro":["344b0840364d990b29b97467bfcc766ff8325d11"],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"a219f1dcad1700e84807666bdbd2b573e8de7021":["0ad7bdba3e91cf3373cda2e52239cb761fc0b452"],"0ad7bdba3e91cf3373cda2e52239cb761fc0b452":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3747a28ce6c262c1e27f7c7b30a827bc1a17260b":["a219f1dcad1700e84807666bdbd2b573e8de7021"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3747a28ce6c262c1e27f7c7b30a827bc1a17260b"]},"commit2Childs":{"a219f1dcad1700e84807666bdbd2b573e8de7021":["3747a28ce6c262c1e27f7c7b30a827bc1a17260b"],"0ad7bdba3e91cf3373cda2e52239cb761fc0b452":["a219f1dcad1700e84807666bdbd2b573e8de7021"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["0ad7bdba3e91cf3373cda2e52239cb761fc0b452"],"3747a28ce6c262c1e27f7c7b30a827bc1a17260b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}