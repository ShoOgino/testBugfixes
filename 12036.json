{"path":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestConcatenateGraphFilter#testWithNoPreserveSep().mjava","commits":[{"id":"9e45ad199e1b1a4bbc15c1c08dcd73dc08fa927a","date":1528168051,"type":1,"author":"David Smiley","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestConcatenateGraphFilter#testWithNoPreserveSep().mjava","pathOld":"lucene/suggest/src/test/org/apache/lucene/search/suggest/document/CompletionTokenStreamTest#testWithNoPreserveSep().mjava","sourceNew":"  @Test\n  public void testWithNoPreserveSep() throws Exception {\n    Tokenizer tokenStream = new MockTokenizer(MockTokenizer.WHITESPACE, true);\n    String input = \"mykeyword another keyword\";\n    tokenStream.setReader(new StringReader(input));\n    ConcatenateGraphFilter stream = new ConcatenateGraphFilter(tokenStream, false, false, 100);\n    assertTokenStreamContents(stream, new String[] {\"mykeywordanotherkeyword\"}, null, null, new int[] { 1 });\n  }\n\n","sourceOld":"  @Test\n  public void testWithNoPreserveSep() throws Exception {\n    Tokenizer tokenStream = new MockTokenizer(MockTokenizer.WHITESPACE, true);\n    String input = \"mykeyword another keyword\";\n    BytesRef payload = new BytesRef(\"payload\");\n    tokenStream.setReader(new StringReader(input));\n    CompletionTokenStream completionTokenStream = new CompletionTokenStream(tokenStream, false, false, 100);\n    completionTokenStream.setPayload(payload);\n    PayloadAttrToTypeAttrFilter stream = new PayloadAttrToTypeAttrFilter(completionTokenStream);\n    assertTokenStreamContents(stream, new String[] {\"mykeywordanotherkeyword\"}, null, null, new String[] {payload.utf8ToString()}, new int[] { 1 }, null, null);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f592209545c71895260367152601e9200399776d","date":1528238935,"type":1,"author":"Michael Braun","isMerge":true,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestConcatenateGraphFilter#testWithNoPreserveSep().mjava","pathOld":"lucene/suggest/src/test/org/apache/lucene/search/suggest/document/CompletionTokenStreamTest#testWithNoPreserveSep().mjava","sourceNew":"  @Test\n  public void testWithNoPreserveSep() throws Exception {\n    Tokenizer tokenStream = new MockTokenizer(MockTokenizer.WHITESPACE, true);\n    String input = \"mykeyword another keyword\";\n    tokenStream.setReader(new StringReader(input));\n    ConcatenateGraphFilter stream = new ConcatenateGraphFilter(tokenStream, false, false, 100);\n    assertTokenStreamContents(stream, new String[] {\"mykeywordanotherkeyword\"}, null, null, new int[] { 1 });\n  }\n\n","sourceOld":"  @Test\n  public void testWithNoPreserveSep() throws Exception {\n    Tokenizer tokenStream = new MockTokenizer(MockTokenizer.WHITESPACE, true);\n    String input = \"mykeyword another keyword\";\n    BytesRef payload = new BytesRef(\"payload\");\n    tokenStream.setReader(new StringReader(input));\n    CompletionTokenStream completionTokenStream = new CompletionTokenStream(tokenStream, false, false, 100);\n    completionTokenStream.setPayload(payload);\n    PayloadAttrToTypeAttrFilter stream = new PayloadAttrToTypeAttrFilter(completionTokenStream);\n    assertTokenStreamContents(stream, new String[] {\"mykeywordanotherkeyword\"}, null, null, new String[] {payload.utf8ToString()}, new int[] { 1 }, null, null);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b70042a8a492f7054d480ccdd2be9796510d4327","date":1528386658,"type":1,"author":"Alessandro Benedetti","isMerge":true,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestConcatenateGraphFilter#testWithNoPreserveSep().mjava","pathOld":"lucene/suggest/src/test/org/apache/lucene/search/suggest/document/CompletionTokenStreamTest#testWithNoPreserveSep().mjava","sourceNew":"  @Test\n  public void testWithNoPreserveSep() throws Exception {\n    Tokenizer tokenStream = new MockTokenizer(MockTokenizer.WHITESPACE, true);\n    String input = \"mykeyword another keyword\";\n    tokenStream.setReader(new StringReader(input));\n    ConcatenateGraphFilter stream = new ConcatenateGraphFilter(tokenStream, false, false, 100);\n    assertTokenStreamContents(stream, new String[] {\"mykeywordanotherkeyword\"}, null, null, new int[] { 1 });\n  }\n\n","sourceOld":"  @Test\n  public void testWithNoPreserveSep() throws Exception {\n    Tokenizer tokenStream = new MockTokenizer(MockTokenizer.WHITESPACE, true);\n    String input = \"mykeyword another keyword\";\n    BytesRef payload = new BytesRef(\"payload\");\n    tokenStream.setReader(new StringReader(input));\n    CompletionTokenStream completionTokenStream = new CompletionTokenStream(tokenStream, false, false, 100);\n    completionTokenStream.setPayload(payload);\n    PayloadAttrToTypeAttrFilter stream = new PayloadAttrToTypeAttrFilter(completionTokenStream);\n    assertTokenStreamContents(stream, new String[] {\"mykeywordanotherkeyword\"}, null, null, new String[] {payload.utf8ToString()}, new int[] { 1 }, null, null);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5533de9a942219a587ac7abed8c65796531dc16d","date":1573756010,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestConcatenateGraphFilter#testWithNoPreserveSep().mjava","pathOld":"lucene/analysis/common/src/test/org/apache/lucene/analysis/miscellaneous/TestConcatenateGraphFilter#testWithNoPreserveSep().mjava","sourceNew":"  @Test\n  public void testWithNoPreserveSep() throws Exception {\n    Tokenizer tokenStream = new MockTokenizer(MockTokenizer.WHITESPACE, true);\n    String input = \"mykeyword another keyword\";\n    tokenStream.setReader(new StringReader(input));\n    ConcatenateGraphFilter stream = new ConcatenateGraphFilter(tokenStream, null, false, 100);\n    assertTokenStreamContents(stream, new String[] {\"mykeywordanotherkeyword\"}, null, null, new int[] { 1 });\n  }\n\n","sourceOld":"  @Test\n  public void testWithNoPreserveSep() throws Exception {\n    Tokenizer tokenStream = new MockTokenizer(MockTokenizer.WHITESPACE, true);\n    String input = \"mykeyword another keyword\";\n    tokenStream.setReader(new StringReader(input));\n    ConcatenateGraphFilter stream = new ConcatenateGraphFilter(tokenStream, false, false, 100);\n    assertTokenStreamContents(stream, new String[] {\"mykeywordanotherkeyword\"}, null, null, new int[] { 1 });\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5533de9a942219a587ac7abed8c65796531dc16d":["9e45ad199e1b1a4bbc15c1c08dcd73dc08fa927a"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b70042a8a492f7054d480ccdd2be9796510d4327":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","9e45ad199e1b1a4bbc15c1c08dcd73dc08fa927a"],"9e45ad199e1b1a4bbc15c1c08dcd73dc08fa927a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f592209545c71895260367152601e9200399776d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","9e45ad199e1b1a4bbc15c1c08dcd73dc08fa927a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["5533de9a942219a587ac7abed8c65796531dc16d"]},"commit2Childs":{"5533de9a942219a587ac7abed8c65796531dc16d":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b70042a8a492f7054d480ccdd2be9796510d4327","9e45ad199e1b1a4bbc15c1c08dcd73dc08fa927a","f592209545c71895260367152601e9200399776d"],"b70042a8a492f7054d480ccdd2be9796510d4327":[],"9e45ad199e1b1a4bbc15c1c08dcd73dc08fa927a":["5533de9a942219a587ac7abed8c65796531dc16d","b70042a8a492f7054d480ccdd2be9796510d4327","f592209545c71895260367152601e9200399776d"],"f592209545c71895260367152601e9200399776d":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b70042a8a492f7054d480ccdd2be9796510d4327","f592209545c71895260367152601e9200399776d","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}