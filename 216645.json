{"path":"solr/core/src/test/org/apache/solr/core/TestCoreContainer#testShareSchema().mjava","commits":[{"id":"33d70ca4ca21ddd57ae5432d9f7a999f8cbfbe83","date":1347415425,"type":0,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestCoreContainer#testShareSchema().mjava","pathOld":"/dev/null","sourceNew":"  public void testShareSchema() throws IOException, ParserConfigurationException, SAXException {\n    final File workDir = new File(TEMP_DIR, this.getClass().getName());\n\n    if (workDir.exists()) {\n      FileUtils.deleteDirectory(workDir);\n    }\n    assertTrue(\"Failed to mkdirs workDir\", workDir.mkdirs());\n    \n    String solrHome = SolrResourceLoader.locateSolrHome();\n    File fconf = new File(solrHome, \"solr.xml\");\n\n    final CoreContainer cores = new CoreContainer(solrHome);\n    System.setProperty(\"shareSchema\", \"true\");\n    cores.load(solrHome, fconf);\n    try {\n      cores.setPersistent(false);\n      assertTrue(cores.isShareSchema());\n      \n      CoreDescriptor descriptor1 = new CoreDescriptor(cores, \"core1\", \"./collection1\");\n      SolrCore core1 = cores.create(descriptor1);\n      \n      CoreDescriptor descriptor2 = new CoreDescriptor(cores, \"core2\", \"./collection1\");\n      SolrCore core2 = cores.create(descriptor2);\n      \n      assertSame(core1.getSchema(), core2.getSchema());\n      \n      core1.close();\n      core2.close();\n    } finally {\n      cores.shutdown();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"69c0b7c6f9804817f14bd78c3795cdd9f6ddae5c","date":1348235008,"type":3,"author":"Sami Siren","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestCoreContainer#testShareSchema().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestCoreContainer#testShareSchema().mjava","sourceNew":"  public void testShareSchema() throws IOException, ParserConfigurationException, SAXException {\n    \n    final File solrHomeDirectory = new File(TEMP_DIR, this.getClass().getName()\n        + \"_shareSchema\");\n\n    if (solrHomeDirectory.exists()) {\n      FileUtils.deleteDirectory(solrHomeDirectory);\n    }\n    assertTrue(\"Failed to mkdirs workDir\", solrHomeDirectory.mkdirs());\n    \n    FileUtils.copyDirectory(new File(SolrTestCaseJ4.TEST_HOME()), solrHomeDirectory);\n    \n    File fconf = new File(solrHomeDirectory, \"solr.xml\");\n\n    final CoreContainer cores = new CoreContainer(solrHomeDirectory.getAbsolutePath());\n    System.setProperty(\"shareSchema\", \"true\");\n    cores.load(solrHomeDirectory.getAbsolutePath(), fconf);\n    try {\n      cores.setPersistent(false);\n      assertTrue(cores.isShareSchema());\n      \n      CoreDescriptor descriptor1 = new CoreDescriptor(cores, \"core1\", \"./collection1\");\n      SolrCore core1 = cores.create(descriptor1);\n      \n      CoreDescriptor descriptor2 = new CoreDescriptor(cores, \"core2\", \"./collection1\");\n      SolrCore core2 = cores.create(descriptor2);\n      \n      assertSame(core1.getSchema(), core2.getSchema());\n      \n      core1.close();\n      core2.close();\n    } finally {\n      cores.shutdown();\n      System.clearProperty(\"shareSchema\");\n    }\n  }\n\n","sourceOld":"  public void testShareSchema() throws IOException, ParserConfigurationException, SAXException {\n    final File workDir = new File(TEMP_DIR, this.getClass().getName());\n\n    if (workDir.exists()) {\n      FileUtils.deleteDirectory(workDir);\n    }\n    assertTrue(\"Failed to mkdirs workDir\", workDir.mkdirs());\n    \n    String solrHome = SolrResourceLoader.locateSolrHome();\n    File fconf = new File(solrHome, \"solr.xml\");\n\n    final CoreContainer cores = new CoreContainer(solrHome);\n    System.setProperty(\"shareSchema\", \"true\");\n    cores.load(solrHome, fconf);\n    try {\n      cores.setPersistent(false);\n      assertTrue(cores.isShareSchema());\n      \n      CoreDescriptor descriptor1 = new CoreDescriptor(cores, \"core1\", \"./collection1\");\n      SolrCore core1 = cores.create(descriptor1);\n      \n      CoreDescriptor descriptor2 = new CoreDescriptor(cores, \"core2\", \"./collection1\");\n      SolrCore core2 = cores.create(descriptor2);\n      \n      assertSame(core1.getSchema(), core2.getSchema());\n      \n      core1.close();\n      core2.close();\n    } finally {\n      cores.shutdown();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8b6f42dee5a60f46a3fdf3ab93b39aefb356e245","date":1363106546,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestCoreContainer#testShareSchema().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestCoreContainer#testShareSchema().mjava","sourceNew":"  @Test\n  public void testShareSchema() throws Exception {\n    System.setProperty(\"shareSchema\", \"true\");\n    final CoreContainer cores = init(\"_shareSchema\");\n    try {\n      cores.setPersistent(false);\n      assertTrue(cores.isShareSchema());\n      \n      CoreDescriptor descriptor1 = new CoreDescriptor(cores, \"core1\", \"./collection1\");\n      SolrCore core1 = cores.create(descriptor1);\n      \n      CoreDescriptor descriptor2 = new CoreDescriptor(cores, \"core2\", \"./collection1\");\n      SolrCore core2 = cores.create(descriptor2);\n      \n      assertSame(core1.getSchema(), core2.getSchema());\n      \n      core1.close();\n      core2.close();\n    } finally {\n      cores.shutdown();\n      System.clearProperty(\"shareSchema\");\n    }\n  }\n\n","sourceOld":"  public void testShareSchema() throws IOException, ParserConfigurationException, SAXException {\n    \n    final File solrHomeDirectory = new File(TEMP_DIR, this.getClass().getName()\n        + \"_shareSchema\");\n\n    if (solrHomeDirectory.exists()) {\n      FileUtils.deleteDirectory(solrHomeDirectory);\n    }\n    assertTrue(\"Failed to mkdirs workDir\", solrHomeDirectory.mkdirs());\n    \n    FileUtils.copyDirectory(new File(SolrTestCaseJ4.TEST_HOME()), solrHomeDirectory);\n    \n    File fconf = new File(solrHomeDirectory, \"solr.xml\");\n\n    final CoreContainer cores = new CoreContainer(solrHomeDirectory.getAbsolutePath());\n    System.setProperty(\"shareSchema\", \"true\");\n    cores.load(solrHomeDirectory.getAbsolutePath(), fconf);\n    try {\n      cores.setPersistent(false);\n      assertTrue(cores.isShareSchema());\n      \n      CoreDescriptor descriptor1 = new CoreDescriptor(cores, \"core1\", \"./collection1\");\n      SolrCore core1 = cores.create(descriptor1);\n      \n      CoreDescriptor descriptor2 = new CoreDescriptor(cores, \"core2\", \"./collection1\");\n      SolrCore core2 = cores.create(descriptor2);\n      \n      assertSame(core1.getSchema(), core2.getSchema());\n      \n      core1.close();\n      core2.close();\n    } finally {\n      cores.shutdown();\n      System.clearProperty(\"shareSchema\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"08970e5b8411182a29412c177eff67ec1110095b","date":1366640815,"type":3,"author":"Steven Rowe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestCoreContainer#testShareSchema().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestCoreContainer#testShareSchema().mjava","sourceNew":"  @Test\n  public void testShareSchema() throws Exception {\n    System.setProperty(\"shareSchema\", \"true\");\n    final CoreContainer cores = init(\"_shareSchema\");\n    try {\n      cores.setPersistent(false);\n      assertTrue(cores.isShareSchema());\n      \n      CoreDescriptor descriptor1 = new CoreDescriptor(cores, \"core1\", \"./collection1\");\n      SolrCore core1 = cores.create(descriptor1);\n      \n      CoreDescriptor descriptor2 = new CoreDescriptor(cores, \"core2\", \"./collection1\");\n      SolrCore core2 = cores.create(descriptor2);\n      \n      assertSame(core1.getLatestSchema(), core2.getLatestSchema());\n      \n      core1.close();\n      core2.close();\n    } finally {\n      cores.shutdown();\n      System.clearProperty(\"shareSchema\");\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testShareSchema() throws Exception {\n    System.setProperty(\"shareSchema\", \"true\");\n    final CoreContainer cores = init(\"_shareSchema\");\n    try {\n      cores.setPersistent(false);\n      assertTrue(cores.isShareSchema());\n      \n      CoreDescriptor descriptor1 = new CoreDescriptor(cores, \"core1\", \"./collection1\");\n      SolrCore core1 = cores.create(descriptor1);\n      \n      CoreDescriptor descriptor2 = new CoreDescriptor(cores, \"core2\", \"./collection1\");\n      SolrCore core2 = cores.create(descriptor2);\n      \n      assertSame(core1.getSchema(), core2.getSchema());\n      \n      core1.close();\n      core2.close();\n    } finally {\n      cores.shutdown();\n      System.clearProperty(\"shareSchema\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"92a4da96826f502cf1a56a096929b37ce73e523a","date":1374584011,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestCoreContainer#testShareSchema().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestCoreContainer#testShareSchema().mjava","sourceNew":"  @Test\n  public void testShareSchema() throws Exception {\n    System.setProperty(\"shareSchema\", \"true\");\n    final CoreContainer cores = init(\"_shareSchema\");\n    try {\n      assertTrue(cores.isShareSchema());\n      \n      CoreDescriptor descriptor1 = new CoreDescriptor(cores, \"core1\", \"./collection1\");\n      SolrCore core1 = cores.create(descriptor1);\n      \n      CoreDescriptor descriptor2 = new CoreDescriptor(cores, \"core2\", \"./collection1\");\n      SolrCore core2 = cores.create(descriptor2);\n      \n      assertSame(core1.getLatestSchema(), core2.getLatestSchema());\n      \n      core1.close();\n      core2.close();\n    } finally {\n      cores.shutdown();\n      System.clearProperty(\"shareSchema\");\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testShareSchema() throws Exception {\n    System.setProperty(\"shareSchema\", \"true\");\n    final CoreContainer cores = init(\"_shareSchema\");\n    try {\n      cores.setPersistent(false);\n      assertTrue(cores.isShareSchema());\n      \n      CoreDescriptor descriptor1 = new CoreDescriptor(cores, \"core1\", \"./collection1\");\n      SolrCore core1 = cores.create(descriptor1);\n      \n      CoreDescriptor descriptor2 = new CoreDescriptor(cores, \"core2\", \"./collection1\");\n      SolrCore core2 = cores.create(descriptor2);\n      \n      assertSame(core1.getLatestSchema(), core2.getLatestSchema());\n      \n      core1.close();\n      core2.close();\n    } finally {\n      cores.shutdown();\n      System.clearProperty(\"shareSchema\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","date":1376375609,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/core/TestCoreContainer#testShareSchema().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestCoreContainer#testShareSchema().mjava","sourceNew":"  @Test\n  public void testShareSchema() throws Exception {\n    System.setProperty(\"shareSchema\", \"true\");\n    final CoreContainer cores = init(\"_shareSchema\");\n    try {\n      assertTrue(cores.isShareSchema());\n      \n      CoreDescriptor descriptor1 = new CoreDescriptor(cores, \"core1\", \"./collection1\");\n      SolrCore core1 = cores.create(descriptor1);\n      \n      CoreDescriptor descriptor2 = new CoreDescriptor(cores, \"core2\", \"./collection1\");\n      SolrCore core2 = cores.create(descriptor2);\n      \n      assertSame(core1.getLatestSchema(), core2.getLatestSchema());\n      \n      core1.close();\n      core2.close();\n    } finally {\n      cores.shutdown();\n      System.clearProperty(\"shareSchema\");\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testShareSchema() throws Exception {\n    System.setProperty(\"shareSchema\", \"true\");\n    final CoreContainer cores = init(\"_shareSchema\");\n    try {\n      cores.setPersistent(false);\n      assertTrue(cores.isShareSchema());\n      \n      CoreDescriptor descriptor1 = new CoreDescriptor(cores, \"core1\", \"./collection1\");\n      SolrCore core1 = cores.create(descriptor1);\n      \n      CoreDescriptor descriptor2 = new CoreDescriptor(cores, \"core2\", \"./collection1\");\n      SolrCore core2 = cores.create(descriptor2);\n      \n      assertSame(core1.getLatestSchema(), core2.getLatestSchema());\n      \n      core1.close();\n      core2.close();\n    } finally {\n      cores.shutdown();\n      System.clearProperty(\"shareSchema\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2d4e985daefcb892b529223b478c47985fc3c483","date":1395658491,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestCoreContainer#testShareSchema().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestCoreContainer#testShareSchema().mjava","sourceNew":"  @Test\n  public void testShareSchema() throws Exception {\n    System.setProperty(\"shareSchema\", \"true\");\n    final CoreContainer cores = init(\"_shareSchema\");\n    try {\n      CoreDescriptor descriptor1 = new CoreDescriptor(cores, \"core1\", \"./collection1\");\n      SolrCore core1 = cores.create(descriptor1);\n      \n      CoreDescriptor descriptor2 = new CoreDescriptor(cores, \"core2\", \"./collection1\");\n      SolrCore core2 = cores.create(descriptor2);\n      \n      assertSame(core1.getLatestSchema(), core2.getLatestSchema());\n      \n      core1.close();\n      core2.close();\n    } finally {\n      cores.shutdown();\n      System.clearProperty(\"shareSchema\");\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testShareSchema() throws Exception {\n    System.setProperty(\"shareSchema\", \"true\");\n    final CoreContainer cores = init(\"_shareSchema\");\n    try {\n      assertTrue(cores.isShareSchema());\n      \n      CoreDescriptor descriptor1 = new CoreDescriptor(cores, \"core1\", \"./collection1\");\n      SolrCore core1 = cores.create(descriptor1);\n      \n      CoreDescriptor descriptor2 = new CoreDescriptor(cores, \"core2\", \"./collection1\");\n      SolrCore core2 = cores.create(descriptor2);\n      \n      assertSame(core1.getLatestSchema(), core2.getLatestSchema());\n      \n      core1.close();\n      core2.close();\n    } finally {\n      cores.shutdown();\n      System.clearProperty(\"shareSchema\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"85032ab568b3f50eabd577aaa994ba197db93758","date":1404157267,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestCoreContainer#testShareSchema().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestCoreContainer#testShareSchema().mjava","sourceNew":"  @Test\n  public void testShareSchema() throws Exception {\n    System.setProperty(\"shareSchema\", \"true\");\n    final CoreContainer cores = init(\"_shareSchema\");\n    try {\n      CoreDescriptor descriptor1 = new CoreDescriptor(cores, \"core1\", \"./collection1\");\n      SolrCore core1 = cores.create(descriptor1);\n      \n      CoreDescriptor descriptor2 = new CoreDescriptor(cores, \"core2\", \"./collection1\");\n      SolrCore core2 = cores.create(descriptor2);\n      \n      assertSame(core1.getLatestSchema(), core2.getLatestSchema());\n\n    } finally {\n      cores.shutdown();\n      System.clearProperty(\"shareSchema\");\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testShareSchema() throws Exception {\n    System.setProperty(\"shareSchema\", \"true\");\n    final CoreContainer cores = init(\"_shareSchema\");\n    try {\n      CoreDescriptor descriptor1 = new CoreDescriptor(cores, \"core1\", \"./collection1\");\n      SolrCore core1 = cores.create(descriptor1);\n      \n      CoreDescriptor descriptor2 = new CoreDescriptor(cores, \"core2\", \"./collection1\");\n      SolrCore core2 = cores.create(descriptor2);\n      \n      assertSame(core1.getLatestSchema(), core2.getLatestSchema());\n      \n      core1.close();\n      core2.close();\n    } finally {\n      cores.shutdown();\n      System.clearProperty(\"shareSchema\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fd44bec977a26a118d9e809e2de6f7edb5ca0f39","date":1421673929,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestCoreContainer#testShareSchema().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestCoreContainer#testShareSchema().mjava","sourceNew":"  @Test\n  public void testShareSchema() throws Exception {\n    System.setProperty(\"shareSchema\", \"true\");\n\n    CoreContainer cores = init(CONFIGSETS_SOLR_XML);\n\n    try {\n      CoreDescriptor descriptor1 = new CoreDescriptor(cores, \"core1\", \"./collection1\", \"configSet\", \"minimal\");\n      SolrCore core1 = cores.create(descriptor1);\n      \n      CoreDescriptor descriptor2 = new CoreDescriptor(cores, \"core2\", \"./collection1\", \"configSet\", \"minimal\");\n      SolrCore core2 = cores.create(descriptor2);\n      \n      assertSame(core1.getLatestSchema(), core2.getLatestSchema());\n\n    } finally {\n      cores.shutdown();\n      System.clearProperty(\"shareSchema\");\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testShareSchema() throws Exception {\n    System.setProperty(\"shareSchema\", \"true\");\n    final CoreContainer cores = init(\"_shareSchema\");\n    try {\n      CoreDescriptor descriptor1 = new CoreDescriptor(cores, \"core1\", \"./collection1\");\n      SolrCore core1 = cores.create(descriptor1);\n      \n      CoreDescriptor descriptor2 = new CoreDescriptor(cores, \"core2\", \"./collection1\");\n      SolrCore core2 = cores.create(descriptor2);\n      \n      assertSame(core1.getLatestSchema(), core2.getLatestSchema());\n\n    } finally {\n      cores.shutdown();\n      System.clearProperty(\"shareSchema\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"11d8a050b7d5f98040f790d32ec1cfd2fc3490e3","date":1448892165,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/core/TestCoreContainer#testShareSchema().mjava","pathOld":"solr/core/src/test/org/apache/solr/core/TestCoreContainer#testShareSchema().mjava","sourceNew":"  @Test\n  public void testShareSchema() throws Exception {\n    System.setProperty(\"shareSchema\", \"true\");\n\n    CoreContainer cores = init(CONFIGSETS_SOLR_XML);\n\n    try {\n      SolrCore core1 = cores.create(\"core1\", ImmutableMap.of(\"configSet\", \"minimal\"));\n      SolrCore core2 = cores.create(\"core2\", ImmutableMap.of(\"configSet\", \"minimal\"));\n      \n      assertSame(core1.getLatestSchema(), core2.getLatestSchema());\n\n    } finally {\n      cores.shutdown();\n      System.clearProperty(\"shareSchema\");\n    }\n  }\n\n","sourceOld":"  @Test\n  public void testShareSchema() throws Exception {\n    System.setProperty(\"shareSchema\", \"true\");\n\n    CoreContainer cores = init(CONFIGSETS_SOLR_XML);\n\n    try {\n      CoreDescriptor descriptor1 = new CoreDescriptor(cores, \"core1\", \"./collection1\", \"configSet\", \"minimal\");\n      SolrCore core1 = cores.create(descriptor1);\n      \n      CoreDescriptor descriptor2 = new CoreDescriptor(cores, \"core2\", \"./collection1\", \"configSet\", \"minimal\");\n      SolrCore core2 = cores.create(descriptor2);\n      \n      assertSame(core1.getLatestSchema(), core2.getLatestSchema());\n\n    } finally {\n      cores.shutdown();\n      System.clearProperty(\"shareSchema\");\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"8b6f42dee5a60f46a3fdf3ab93b39aefb356e245":["69c0b7c6f9804817f14bd78c3795cdd9f6ddae5c"],"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":["08970e5b8411182a29412c177eff67ec1110095b","92a4da96826f502cf1a56a096929b37ce73e523a"],"11d8a050b7d5f98040f790d32ec1cfd2fc3490e3":["fd44bec977a26a118d9e809e2de6f7edb5ca0f39"],"92a4da96826f502cf1a56a096929b37ce73e523a":["08970e5b8411182a29412c177eff67ec1110095b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"fd44bec977a26a118d9e809e2de6f7edb5ca0f39":["85032ab568b3f50eabd577aaa994ba197db93758"],"2d4e985daefcb892b529223b478c47985fc3c483":["92a4da96826f502cf1a56a096929b37ce73e523a"],"33d70ca4ca21ddd57ae5432d9f7a999f8cbfbe83":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"85032ab568b3f50eabd577aaa994ba197db93758":["2d4e985daefcb892b529223b478c47985fc3c483"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["11d8a050b7d5f98040f790d32ec1cfd2fc3490e3"],"08970e5b8411182a29412c177eff67ec1110095b":["8b6f42dee5a60f46a3fdf3ab93b39aefb356e245"],"69c0b7c6f9804817f14bd78c3795cdd9f6ddae5c":["33d70ca4ca21ddd57ae5432d9f7a999f8cbfbe83"]},"commit2Childs":{"8b6f42dee5a60f46a3fdf3ab93b39aefb356e245":["08970e5b8411182a29412c177eff67ec1110095b"],"716d18f3a9b0993bc679d7fa7abdc9bfb03411ec":[],"11d8a050b7d5f98040f790d32ec1cfd2fc3490e3":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"92a4da96826f502cf1a56a096929b37ce73e523a":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","2d4e985daefcb892b529223b478c47985fc3c483"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["33d70ca4ca21ddd57ae5432d9f7a999f8cbfbe83"],"fd44bec977a26a118d9e809e2de6f7edb5ca0f39":["11d8a050b7d5f98040f790d32ec1cfd2fc3490e3"],"2d4e985daefcb892b529223b478c47985fc3c483":["85032ab568b3f50eabd577aaa994ba197db93758"],"33d70ca4ca21ddd57ae5432d9f7a999f8cbfbe83":["69c0b7c6f9804817f14bd78c3795cdd9f6ddae5c"],"85032ab568b3f50eabd577aaa994ba197db93758":["fd44bec977a26a118d9e809e2de6f7edb5ca0f39"],"69c0b7c6f9804817f14bd78c3795cdd9f6ddae5c":["8b6f42dee5a60f46a3fdf3ab93b39aefb356e245"],"08970e5b8411182a29412c177eff67ec1110095b":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","92a4da96826f502cf1a56a096929b37ce73e523a"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["716d18f3a9b0993bc679d7fa7abdc9bfb03411ec","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}