{"path":"lucene/core/src/test/org/apache/lucene/util/TestOpenBitSet#doIterate1(BitSet,OpenBitSet).mjava","commits":[{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":1,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/TestOpenBitSet#doIterate1(BitSet,OpenBitSet).mjava","pathOld":"lucene/src/test/org/apache/lucene/util/TestOpenBitSet#doIterate1(BitSet,OpenBitSet).mjava","sourceNew":"  void doIterate1(BitSet a, OpenBitSet b) {\n    int aa=-1,bb=-1;\n    OpenBitSetIterator iterator = new OpenBitSetIterator(b);\n    do {\n      aa = a.nextSetBit(aa+1);\n      bb = random.nextBoolean() ? iterator.nextDoc() : iterator.advance(bb + 1);\n      assertEquals(aa == -1 ? DocIdSetIterator.NO_MORE_DOCS : aa, bb);\n    } while (aa>=0);\n  }\n\n","sourceOld":"  void doIterate1(BitSet a, OpenBitSet b) {\n    int aa=-1,bb=-1;\n    OpenBitSetIterator iterator = new OpenBitSetIterator(b);\n    do {\n      aa = a.nextSetBit(aa+1);\n      bb = random.nextBoolean() ? iterator.nextDoc() : iterator.advance(bb + 1);\n      assertEquals(aa == -1 ? DocIdSetIterator.NO_MORE_DOCS : aa, bb);\n    } while (aa>=0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"629c38c4ae4e303d0617e05fbfe508140b32f0a3","date":1334500904,"type":3,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/TestOpenBitSet#doIterate1(BitSet,OpenBitSet).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/util/TestOpenBitSet#doIterate1(BitSet,OpenBitSet).mjava","sourceNew":"  void doIterate1(BitSet a, OpenBitSet b) {\n    int aa=-1,bb=-1;\n    OpenBitSetIterator iterator = new OpenBitSetIterator(b);\n    do {\n      aa = a.nextSetBit(aa+1);\n      bb = random().nextBoolean() ? iterator.nextDoc() : iterator.advance(bb + 1);\n      assertEquals(aa == -1 ? DocIdSetIterator.NO_MORE_DOCS : aa, bb);\n    } while (aa>=0);\n  }\n\n","sourceOld":"  void doIterate1(BitSet a, OpenBitSet b) {\n    int aa=-1,bb=-1;\n    OpenBitSetIterator iterator = new OpenBitSetIterator(b);\n    do {\n      aa = a.nextSetBit(aa+1);\n      bb = random.nextBoolean() ? iterator.nextDoc() : iterator.advance(bb + 1);\n      assertEquals(aa == -1 ? DocIdSetIterator.NO_MORE_DOCS : aa, bb);\n    } while (aa>=0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3d7af8c4d849bdb50dbc2e78e88495a22c008f4","date":1413466868,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/test/org/apache/lucene/util/TestOpenBitSet#doIterate1(BitSet,OpenBitSet).mjava","sourceNew":null,"sourceOld":"  void doIterate1(BitSet a, OpenBitSet b) {\n    int aa=-1,bb=-1;\n    OpenBitSetIterator iterator = new OpenBitSetIterator(b);\n    do {\n      aa = a.nextSetBit(aa+1);\n      bb = random().nextBoolean() ? iterator.nextDoc() : iterator.advance(bb + 1);\n      assertEquals(aa == -1 ? DocIdSetIterator.NO_MORE_DOCS : aa, bb);\n    } while (aa>=0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0a22eafe3f72a4c2945eaad9547e6c78816978f4","date":1413956657,"type":4,"author":"Robert Muir","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/test/org/apache/lucene/util/TestOpenBitSet#doIterate1(BitSet,OpenBitSet).mjava","sourceNew":null,"sourceOld":"  void doIterate1(BitSet a, OpenBitSet b) {\n    int aa=-1,bb=-1;\n    OpenBitSetIterator iterator = new OpenBitSetIterator(b);\n    do {\n      aa = a.nextSetBit(aa+1);\n      bb = random().nextBoolean() ? iterator.nextDoc() : iterator.advance(bb + 1);\n      assertEquals(aa == -1 ? DocIdSetIterator.NO_MORE_DOCS : aa, bb);\n    } while (aa>=0);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0a22eafe3f72a4c2945eaad9547e6c78816978f4":["629c38c4ae4e303d0617e05fbfe508140b32f0a3","a3d7af8c4d849bdb50dbc2e78e88495a22c008f4"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"a3d7af8c4d849bdb50dbc2e78e88495a22c008f4":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a3d7af8c4d849bdb50dbc2e78e88495a22c008f4"]},"commit2Childs":{"0a22eafe3f72a4c2945eaad9547e6c78816978f4":[],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["629c38c4ae4e303d0617e05fbfe508140b32f0a3"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"a3d7af8c4d849bdb50dbc2e78e88495a22c008f4":["0a22eafe3f72a4c2945eaad9547e6c78816978f4","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"629c38c4ae4e303d0617e05fbfe508140b32f0a3":["0a22eafe3f72a4c2945eaad9547e6c78816978f4","a3d7af8c4d849bdb50dbc2e78e88495a22c008f4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["0a22eafe3f72a4c2945eaad9547e6c78816978f4","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}