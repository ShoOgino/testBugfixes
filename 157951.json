{"path":"solr/core/src/test/org/apache/solr/search/TestRecovery#testLogReplayWithReorderedDBQUpdateWithDifferentChildCount().mjava","commits":[{"id":"407b2e02aedce6b9118323ef204a08acfd83add7","date":1487217081,"type":0,"author":"yonik","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestRecovery#testLogReplayWithReorderedDBQUpdateWithDifferentChildCount().mjava","pathOld":"/dev/null","sourceNew":"  @Test\n  public void testLogReplayWithReorderedDBQUpdateWithDifferentChildCount() throws Exception {\n    testLogReplayWithReorderedDBQWrapper(() -> {\n          // control\n          // 1013 - will be inserted with 3 children\n          updateJ(jsonAdd(sdocWithChildren(\"B1\", \"1011\", 2)), params(DISTRIB_UPDATE_PARAM, FROM_LEADER));\n          // 1018 - this should be the final\n          updateJ(jsonAdd(sdocWithChildren(\"B1\", \"1012\", 3)), params(DISTRIB_UPDATE_PARAM, FROM_LEADER));\n\n          // 1013 - will be inserted with 3 children\n          updateJ(jsonAdd(sdocWithChildren(\"B2\", \"1013\", 2)), params(DISTRIB_UPDATE_PARAM, FROM_LEADER));\n          updateJ(jsonDelQ(\"id:B3\"), params(DISTRIB_UPDATE_PARAM, FROM_LEADER, \"_version_\", \"-1019\"));\n          // 1018 - this should be the final\n          updateJ(jsonAdd(sdocWithChildren(\"B2\", \"1018\", 3)), params(DISTRIB_UPDATE_PARAM, FROM_LEADER));\n        },\n        () -> assertJQ(req(\"q\", \"*:*\"), \"/response/numFound==8\") // B1+3children+B2+3children\n    );\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"295e008673df441573c0d5a86837788a5279f9e2","date":1487275964,"type":3,"author":"yonik","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestRecovery#testLogReplayWithReorderedDBQUpdateWithDifferentChildCount().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestRecovery#testLogReplayWithReorderedDBQUpdateWithDifferentChildCount().mjava","sourceNew":"  @Test\n  public void testLogReplayWithReorderedDBQUpdateWithDifferentChildCount() throws Exception {\n    testLogReplayWithReorderedDBQWrapper(() -> {\n          // control\n          // 1013 - will be inserted with 3 children\n          updateJ(jsonAdd(sdocWithChildren(\"RDBQ5_1\", \"1011\", 2)), params(DISTRIB_UPDATE_PARAM, FROM_LEADER));\n          // 1018 - this should be the final\n          updateJ(jsonAdd(sdocWithChildren(\"RDBQ5_1\", \"1012\", 3)), params(DISTRIB_UPDATE_PARAM, FROM_LEADER));\n\n          // 1013 - will be inserted with 3 children\n          updateJ(jsonAdd(sdocWithChildren(\"RDBQ5_2\", \"1013\", 2)), params(DISTRIB_UPDATE_PARAM, FROM_LEADER));\n          updateJ(jsonDelQ(\"id:RDBQ5_3\"), params(DISTRIB_UPDATE_PARAM, FROM_LEADER, \"_version_\", \"-1019\"));\n          // 1018 - this should be the final\n          updateJ(jsonAdd(sdocWithChildren(\"RDBQ5_2\", \"1018\", 3)), params(DISTRIB_UPDATE_PARAM, FROM_LEADER));\n        },\n        () -> assertJQ(req(\"q\", \"*:*\"), \"/response/numFound==8\") // RDBQ5_1+3children+RDBQ5_2+3children\n    );\n  }\n\n","sourceOld":"  @Test\n  public void testLogReplayWithReorderedDBQUpdateWithDifferentChildCount() throws Exception {\n    testLogReplayWithReorderedDBQWrapper(() -> {\n          // control\n          // 1013 - will be inserted with 3 children\n          updateJ(jsonAdd(sdocWithChildren(\"B1\", \"1011\", 2)), params(DISTRIB_UPDATE_PARAM, FROM_LEADER));\n          // 1018 - this should be the final\n          updateJ(jsonAdd(sdocWithChildren(\"B1\", \"1012\", 3)), params(DISTRIB_UPDATE_PARAM, FROM_LEADER));\n\n          // 1013 - will be inserted with 3 children\n          updateJ(jsonAdd(sdocWithChildren(\"B2\", \"1013\", 2)), params(DISTRIB_UPDATE_PARAM, FROM_LEADER));\n          updateJ(jsonDelQ(\"id:B3\"), params(DISTRIB_UPDATE_PARAM, FROM_LEADER, \"_version_\", \"-1019\"));\n          // 1018 - this should be the final\n          updateJ(jsonAdd(sdocWithChildren(\"B2\", \"1018\", 3)), params(DISTRIB_UPDATE_PARAM, FROM_LEADER));\n        },\n        () -> assertJQ(req(\"q\", \"*:*\"), \"/response/numFound==8\") // B1+3children+B2+3children\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9efcb86f82b536ffcefcc27adbfa39b603342af1","date":1492147023,"type":3,"author":"markrmiller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestRecovery#testLogReplayWithReorderedDBQUpdateWithDifferentChildCount().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestRecovery#testLogReplayWithReorderedDBQUpdateWithDifferentChildCount().mjava","sourceNew":"  @Test\n  public void testLogReplayWithReorderedDBQUpdateWithDifferentChildCount() throws Exception {\n    testLogReplayWithReorderedDBQWrapper(() -> {\n          String v1011 = getNextVersion();\n          String v1012 = getNextVersion();\n          String v1013 = getNextVersion();\n          String v1018 = getNextVersion();\n          String v1019_del = \"-\" + getNextVersion();\n      \n          // control\n          // 1011 - will be inserted with 3 children as 1012\n          updateJ(jsonAdd(sdocWithChildren(\"RDBQ5_1\", v1011, 2)), params(DISTRIB_UPDATE_PARAM, FROM_LEADER));\n          // 1012 - this should be the final\n          updateJ(jsonAdd(sdocWithChildren(\"RDBQ5_1\", v1012, 3)), params(DISTRIB_UPDATE_PARAM, FROM_LEADER));\n\n          // 1013 - will be inserted with 3 children as 1018\n          updateJ(jsonAdd(sdocWithChildren(\"RDBQ5_2\", v1013, 2)), params(DISTRIB_UPDATE_PARAM, FROM_LEADER));\n          updateJ(jsonDelQ(\"id:RDBQ5_3\"), params(DISTRIB_UPDATE_PARAM, FROM_LEADER, \"_version_\", v1019_del));\n          // 1018 - this should be the final\n          updateJ(jsonAdd(sdocWithChildren(\"RDBQ5_2\", v1018, 3)), params(DISTRIB_UPDATE_PARAM, FROM_LEADER));\n        },\n        () -> assertJQ(req(\"q\", \"*:*\"), \"/response/numFound==8\") // RDBQ5_1+3children+RDBQ5_2+3children\n    );\n  }\n\n","sourceOld":"  @Test\n  public void testLogReplayWithReorderedDBQUpdateWithDifferentChildCount() throws Exception {\n    testLogReplayWithReorderedDBQWrapper(() -> {\n          // control\n          // 1013 - will be inserted with 3 children\n          updateJ(jsonAdd(sdocWithChildren(\"RDBQ5_1\", \"1011\", 2)), params(DISTRIB_UPDATE_PARAM, FROM_LEADER));\n          // 1018 - this should be the final\n          updateJ(jsonAdd(sdocWithChildren(\"RDBQ5_1\", \"1012\", 3)), params(DISTRIB_UPDATE_PARAM, FROM_LEADER));\n\n          // 1013 - will be inserted with 3 children\n          updateJ(jsonAdd(sdocWithChildren(\"RDBQ5_2\", \"1013\", 2)), params(DISTRIB_UPDATE_PARAM, FROM_LEADER));\n          updateJ(jsonDelQ(\"id:RDBQ5_3\"), params(DISTRIB_UPDATE_PARAM, FROM_LEADER, \"_version_\", \"-1019\"));\n          // 1018 - this should be the final\n          updateJ(jsonAdd(sdocWithChildren(\"RDBQ5_2\", \"1018\", 3)), params(DISTRIB_UPDATE_PARAM, FROM_LEADER));\n        },\n        () -> assertJQ(req(\"q\", \"*:*\"), \"/response/numFound==8\") // RDBQ5_1+3children+RDBQ5_2+3children\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"54ca69905c5d9d1529286f06ab1d12c68f6c13cb","date":1492683554,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/search/TestRecovery#testLogReplayWithReorderedDBQUpdateWithDifferentChildCount().mjava","pathOld":"solr/core/src/test/org/apache/solr/search/TestRecovery#testLogReplayWithReorderedDBQUpdateWithDifferentChildCount().mjava","sourceNew":"  @Test\n  public void testLogReplayWithReorderedDBQUpdateWithDifferentChildCount() throws Exception {\n    testLogReplayWithReorderedDBQWrapper(() -> {\n          String v1011 = getNextVersion();\n          String v1012 = getNextVersion();\n          String v1013 = getNextVersion();\n          String v1018 = getNextVersion();\n          String v1019_del = \"-\" + getNextVersion();\n      \n          // control\n          // 1011 - will be inserted with 3 children as 1012\n          updateJ(jsonAdd(sdocWithChildren(\"RDBQ5_1\", v1011, 2)), params(DISTRIB_UPDATE_PARAM, FROM_LEADER));\n          // 1012 - this should be the final\n          updateJ(jsonAdd(sdocWithChildren(\"RDBQ5_1\", v1012, 3)), params(DISTRIB_UPDATE_PARAM, FROM_LEADER));\n\n          // 1013 - will be inserted with 3 children as 1018\n          updateJ(jsonAdd(sdocWithChildren(\"RDBQ5_2\", v1013, 2)), params(DISTRIB_UPDATE_PARAM, FROM_LEADER));\n          updateJ(jsonDelQ(\"id:RDBQ5_3\"), params(DISTRIB_UPDATE_PARAM, FROM_LEADER, \"_version_\", v1019_del));\n          // 1018 - this should be the final\n          updateJ(jsonAdd(sdocWithChildren(\"RDBQ5_2\", v1018, 3)), params(DISTRIB_UPDATE_PARAM, FROM_LEADER));\n        },\n        () -> assertJQ(req(\"q\", \"*:*\"), \"/response/numFound==8\") // RDBQ5_1+3children+RDBQ5_2+3children\n    );\n  }\n\n","sourceOld":"  @Test\n  public void testLogReplayWithReorderedDBQUpdateWithDifferentChildCount() throws Exception {\n    testLogReplayWithReorderedDBQWrapper(() -> {\n          // control\n          // 1013 - will be inserted with 3 children\n          updateJ(jsonAdd(sdocWithChildren(\"RDBQ5_1\", \"1011\", 2)), params(DISTRIB_UPDATE_PARAM, FROM_LEADER));\n          // 1018 - this should be the final\n          updateJ(jsonAdd(sdocWithChildren(\"RDBQ5_1\", \"1012\", 3)), params(DISTRIB_UPDATE_PARAM, FROM_LEADER));\n\n          // 1013 - will be inserted with 3 children\n          updateJ(jsonAdd(sdocWithChildren(\"RDBQ5_2\", \"1013\", 2)), params(DISTRIB_UPDATE_PARAM, FROM_LEADER));\n          updateJ(jsonDelQ(\"id:RDBQ5_3\"), params(DISTRIB_UPDATE_PARAM, FROM_LEADER, \"_version_\", \"-1019\"));\n          // 1018 - this should be the final\n          updateJ(jsonAdd(sdocWithChildren(\"RDBQ5_2\", \"1018\", 3)), params(DISTRIB_UPDATE_PARAM, FROM_LEADER));\n        },\n        () -> assertJQ(req(\"q\", \"*:*\"), \"/response/numFound==8\") // RDBQ5_1+3children+RDBQ5_2+3children\n    );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9efcb86f82b536ffcefcc27adbfa39b603342af1":["295e008673df441573c0d5a86837788a5279f9e2"],"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":["295e008673df441573c0d5a86837788a5279f9e2"],"295e008673df441573c0d5a86837788a5279f9e2":["407b2e02aedce6b9118323ef204a08acfd83add7"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9efcb86f82b536ffcefcc27adbfa39b603342af1"],"407b2e02aedce6b9118323ef204a08acfd83add7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"9efcb86f82b536ffcefcc27adbfa39b603342af1":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"54ca69905c5d9d1529286f06ab1d12c68f6c13cb":[],"295e008673df441573c0d5a86837788a5279f9e2":["9efcb86f82b536ffcefcc27adbfa39b603342af1","54ca69905c5d9d1529286f06ab1d12c68f6c13cb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["407b2e02aedce6b9118323ef204a08acfd83add7"],"407b2e02aedce6b9118323ef204a08acfd83add7":["295e008673df441573c0d5a86837788a5279f9e2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["54ca69905c5d9d1529286f06ab1d12c68f6c13cb","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}