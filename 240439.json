{"path":"solr/core/src/test/org/apache/solr/cloud/FullSolrCloudDistribCmdsTest#testDeleteByIdCompositeRouterWithRouterField().mjava","commits":[{"id":"747dd71fefcbc7142661c25334b74c518fef4d81","date":1423504825,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/FullSolrCloudDistribCmdsTest#testDeleteByIdCompositeRouterWithRouterField().mjava","pathOld":"/dev/null","sourceNew":"  private void testDeleteByIdCompositeRouterWithRouterField() throws Exception {\n    SolrClient server = createNewSolrClient(\"\", getBaseUrl((HttpSolrClient) clients.get(0)));\n    CollectionAdminResponse response;\n    Map<String, NamedList<Integer>> coresStatus;\n\n    CollectionAdminRequest.Create createCollectionRequest = new CollectionAdminRequest.Create();\n    createCollectionRequest.setCollectionName(\"compositeid_collection_with_routerfield\");\n    createCollectionRequest.setRouterName(\"compositeId\");\n    createCollectionRequest.setRouterField(\"routefield_s\");\n    createCollectionRequest.setNumShards(2);\n    createCollectionRequest.setShards(\"shard1,shard2\");\n    createCollectionRequest.setReplicationFactor(2);\n    createCollectionRequest.setConfigName(\"conf1\");\n    response = createCollectionRequest.process(server);\n\n    assertEquals(0, response.getStatus());\n    assertTrue(response.isSuccess());\n    coresStatus = response.getCollectionCoresStatus();\n    assertEquals(4, coresStatus.size());\n    for (int i = 0; i < 4; i++) {\n      NamedList<Integer> status = coresStatus.get(\"compositeid_collection_with_routerfield_shard\" + (i / 2 + 1) + \"_replica\" + (i % 2 + 1));\n      assertEquals(0, (int) status.get(\"status\"));\n      assertTrue(status.get(\"QTime\") > 0);\n    }\n\n    SolrClient shard1 = createNewSolrClient(\"compositeid_collection_with_routerfield_shard1_replica1\",\n        getBaseUrl((HttpSolrClient) clients.get(0)));\n    SolrClient shard2 = createNewSolrClient(\"compositeid_collection_with_routerfield_shard2_replica1\",\n        getBaseUrl((HttpSolrClient) clients.get(0)));\n\n    SolrInputDocument doc = new SolrInputDocument();\n    int docCounts1 = 0, docCounts2 = 0;\n\n    // Add three documents to shard1\n    doc.clear();\n    doc.addField(\"id\", \"1\");\n    doc.addField(\"title\", \"s1 one\");\n    doc.addField(\"routefield_s\", \"europe\");\n    shard1.add(doc);\n    shard1.commit();\n\n    doc.clear();\n    doc.addField(\"id\", \"2\");\n    doc.addField(\"title\", \"s1 two\");\n    doc.addField(\"routefield_s\", \"europe\");\n    shard1.add(doc);\n    shard1.commit();\n\n    doc.clear();\n    doc.addField(\"id\", \"3\");\n    doc.addField(\"title\", \"s1 three\");\n    doc.addField(\"routefield_s\", \"europe\");\n    shard1.add(doc);\n    shard1.commit();\n\n    docCounts1 = 3; // Three documents in shard1\n\n    // Add two documents to shard2\n    doc.clear();\n    doc.addField(\"id\", \"4\");\n    doc.addField(\"title\", \"s2 four\");\n    doc.addField(\"routefield_s\", \"africa\");\n    shard2.add(doc);\n    //shard2.commit();\n\n    doc.clear();\n    doc.addField(\"id\", \"5\");\n    doc.addField(\"title\", \"s2 five\");\n    doc.addField(\"routefield_s\", \"africa\");\n    shard2.add(doc);\n    shard2.commit();\n\n    docCounts2 = 2; // Two documents in shard2\n\n    // Verify the documents were added to correct shards\n    ModifiableSolrParams query = new ModifiableSolrParams();\n    query.set(\"q\", \"*:*\");\n    QueryResponse respAll = shard1.query(query);\n    assertEquals(docCounts1 + docCounts2, respAll.getResults().getNumFound());\n\n    query.set(\"shards\", \"shard1\");\n    QueryResponse resp1 = shard1.query(query);\n    assertEquals(docCounts1, resp1.getResults().getNumFound());\n\n    query.set(\"shards\", \"shard2\");\n    QueryResponse resp2 = shard2.query(query);\n    assertEquals(docCounts2, resp2.getResults().getNumFound());\n\n    // Delete a document in shard2 with update to shard1, with _route_ param\n    // Should delete.\n    UpdateRequest deleteRequest = new UpdateRequest();\n    deleteRequest.deleteById(\"4\", \"africa\");\n    deleteRequest.setCommitWithin(1);\n    shard1.request(deleteRequest);\n    shard1.commit();\n\n    query.set(\"shards\", \"shard2\");\n    resp2 = shard2.query(query);\n    --docCounts2;\n    assertEquals(docCounts2, resp2.getResults().getNumFound());\n\n    // Multiple deleteById commands in a single request\n    deleteRequest.clear();\n    deleteRequest.deleteById(\"2\", \"europe\");\n    deleteRequest.deleteById(\"3\", \"europe\");\n    deleteRequest.setCommitWithin(1);\n    query.set(\"shards\", \"shard1\");\n    shard1.request(deleteRequest);\n    shard1.commit();\n    Thread.sleep(1000);\n    resp1 = shard1.query(query);\n    --docCounts1;\n    --docCounts1;\n    assertEquals(docCounts1, resp1.getResults().getNumFound());\n\n    // Test commitWithin, update to shard2, document deleted in shard1\n    deleteRequest.clear();\n    deleteRequest.deleteById(\"1\", \"europe\");\n    deleteRequest.setCommitWithin(1);\n    shard2.request(deleteRequest);\n    query.set(\"shards\", \"shard1\");\n    resp1 = shard1.query(query);\n    --docCounts1;\n    assertEquals(docCounts1, resp1.getResults().getNumFound());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9e592c966d0093ed8a86ed2f58e94967d159ab01","date":1428930334,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/FullSolrCloudDistribCmdsTest#testDeleteByIdCompositeRouterWithRouterField().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/FullSolrCloudDistribCmdsTest#testDeleteByIdCompositeRouterWithRouterField().mjava","sourceNew":"  private void testDeleteByIdCompositeRouterWithRouterField() throws Exception {\n    SolrClient server = createNewSolrClient(\"\", getBaseUrl((HttpSolrClient) clients.get(0)));\n    CollectionAdminResponse response;\n    Map<String, NamedList<Integer>> coresStatus;\n\n    CollectionAdminRequest.Create createCollectionRequest = new CollectionAdminRequest.Create();\n    createCollectionRequest.setCollectionName(\"compositeid_collection_with_routerfield\");\n    createCollectionRequest.setRouterName(\"compositeId\");\n    createCollectionRequest.setRouterField(\"routefield_s\");\n    createCollectionRequest.setNumShards(2);\n    createCollectionRequest.setShards(\"shard1,shard2\");\n    createCollectionRequest.setReplicationFactor(2);\n    createCollectionRequest.setConfigName(\"conf1\");\n    response = createCollectionRequest.process(server);\n\n    assertEquals(0, response.getStatus());\n    assertTrue(response.isSuccess());\n    coresStatus = response.getCollectionCoresStatus();\n    assertEquals(4, coresStatus.size());\n    for (int i = 0; i < 4; i++) {\n      NamedList<Integer> status = coresStatus.get(\"compositeid_collection_with_routerfield_shard\" + (i / 2 + 1) + \"_replica\" + (i % 2 + 1));\n      assertEquals(0, (int) status.get(\"status\"));\n      assertTrue(status.get(\"QTime\") > 0);\n    }\n\n    waitForRecoveriesToFinish(\"compositeid_collection_with_routerfield\", true);\n\n    SolrClient shard1 = createNewSolrClient(\"compositeid_collection_with_routerfield_shard1_replica1\",\n        getBaseUrl((HttpSolrClient) clients.get(0)));\n    SolrClient shard2 = createNewSolrClient(\"compositeid_collection_with_routerfield_shard2_replica1\",\n        getBaseUrl((HttpSolrClient) clients.get(0)));\n\n    SolrInputDocument doc = new SolrInputDocument();\n    int docCounts1 = 0, docCounts2 = 0;\n\n    // Add three documents to shard1\n    doc.clear();\n    doc.addField(\"id\", \"1\");\n    doc.addField(\"title\", \"s1 one\");\n    doc.addField(\"routefield_s\", \"europe\");\n    shard1.add(doc);\n    shard1.commit();\n\n    doc.clear();\n    doc.addField(\"id\", \"2\");\n    doc.addField(\"title\", \"s1 two\");\n    doc.addField(\"routefield_s\", \"europe\");\n    shard1.add(doc);\n    shard1.commit();\n\n    doc.clear();\n    doc.addField(\"id\", \"3\");\n    doc.addField(\"title\", \"s1 three\");\n    doc.addField(\"routefield_s\", \"europe\");\n    shard1.add(doc);\n    shard1.commit();\n\n    docCounts1 = 3; // Three documents in shard1\n\n    // Add two documents to shard2\n    doc.clear();\n    doc.addField(\"id\", \"4\");\n    doc.addField(\"title\", \"s2 four\");\n    doc.addField(\"routefield_s\", \"africa\");\n    shard2.add(doc);\n    //shard2.commit();\n\n    doc.clear();\n    doc.addField(\"id\", \"5\");\n    doc.addField(\"title\", \"s2 five\");\n    doc.addField(\"routefield_s\", \"africa\");\n    shard2.add(doc);\n    shard2.commit();\n\n    docCounts2 = 2; // Two documents in shard2\n\n    // Verify the documents were added to correct shards\n    ModifiableSolrParams query = new ModifiableSolrParams();\n    query.set(\"q\", \"*:*\");\n    QueryResponse respAll = shard1.query(query);\n    assertEquals(docCounts1 + docCounts2, respAll.getResults().getNumFound());\n\n    query.set(\"shards\", \"shard1\");\n    QueryResponse resp1 = shard1.query(query);\n    assertEquals(docCounts1, resp1.getResults().getNumFound());\n\n    query.set(\"shards\", \"shard2\");\n    QueryResponse resp2 = shard2.query(query);\n    assertEquals(docCounts2, resp2.getResults().getNumFound());\n\n    // Delete a document in shard2 with update to shard1, with _route_ param\n    // Should delete.\n    UpdateRequest deleteRequest = new UpdateRequest();\n    deleteRequest.deleteById(\"4\", \"africa\");\n    deleteRequest.setCommitWithin(1);\n    shard1.request(deleteRequest);\n    shard1.commit();\n\n    query.set(\"shards\", \"shard2\");\n    resp2 = shard2.query(query);\n    --docCounts2;\n    assertEquals(docCounts2, resp2.getResults().getNumFound());\n\n    // Multiple deleteById commands in a single request\n    deleteRequest.clear();\n    deleteRequest.deleteById(\"2\", \"europe\");\n    deleteRequest.deleteById(\"3\", \"europe\");\n    deleteRequest.setCommitWithin(1);\n    query.set(\"shards\", \"shard1\");\n    shard1.request(deleteRequest);\n    shard1.commit();\n    Thread.sleep(1000);\n    resp1 = shard1.query(query);\n    --docCounts1;\n    --docCounts1;\n    assertEquals(docCounts1, resp1.getResults().getNumFound());\n\n    // Test commitWithin, update to shard2, document deleted in shard1\n    deleteRequest.clear();\n    deleteRequest.deleteById(\"1\", \"europe\");\n    deleteRequest.setCommitWithin(1);\n    shard2.request(deleteRequest);\n    query.set(\"shards\", \"shard1\");\n    resp1 = shard1.query(query);\n    --docCounts1;\n    assertEquals(docCounts1, resp1.getResults().getNumFound());\n  }\n\n","sourceOld":"  private void testDeleteByIdCompositeRouterWithRouterField() throws Exception {\n    SolrClient server = createNewSolrClient(\"\", getBaseUrl((HttpSolrClient) clients.get(0)));\n    CollectionAdminResponse response;\n    Map<String, NamedList<Integer>> coresStatus;\n\n    CollectionAdminRequest.Create createCollectionRequest = new CollectionAdminRequest.Create();\n    createCollectionRequest.setCollectionName(\"compositeid_collection_with_routerfield\");\n    createCollectionRequest.setRouterName(\"compositeId\");\n    createCollectionRequest.setRouterField(\"routefield_s\");\n    createCollectionRequest.setNumShards(2);\n    createCollectionRequest.setShards(\"shard1,shard2\");\n    createCollectionRequest.setReplicationFactor(2);\n    createCollectionRequest.setConfigName(\"conf1\");\n    response = createCollectionRequest.process(server);\n\n    assertEquals(0, response.getStatus());\n    assertTrue(response.isSuccess());\n    coresStatus = response.getCollectionCoresStatus();\n    assertEquals(4, coresStatus.size());\n    for (int i = 0; i < 4; i++) {\n      NamedList<Integer> status = coresStatus.get(\"compositeid_collection_with_routerfield_shard\" + (i / 2 + 1) + \"_replica\" + (i % 2 + 1));\n      assertEquals(0, (int) status.get(\"status\"));\n      assertTrue(status.get(\"QTime\") > 0);\n    }\n\n    SolrClient shard1 = createNewSolrClient(\"compositeid_collection_with_routerfield_shard1_replica1\",\n        getBaseUrl((HttpSolrClient) clients.get(0)));\n    SolrClient shard2 = createNewSolrClient(\"compositeid_collection_with_routerfield_shard2_replica1\",\n        getBaseUrl((HttpSolrClient) clients.get(0)));\n\n    SolrInputDocument doc = new SolrInputDocument();\n    int docCounts1 = 0, docCounts2 = 0;\n\n    // Add three documents to shard1\n    doc.clear();\n    doc.addField(\"id\", \"1\");\n    doc.addField(\"title\", \"s1 one\");\n    doc.addField(\"routefield_s\", \"europe\");\n    shard1.add(doc);\n    shard1.commit();\n\n    doc.clear();\n    doc.addField(\"id\", \"2\");\n    doc.addField(\"title\", \"s1 two\");\n    doc.addField(\"routefield_s\", \"europe\");\n    shard1.add(doc);\n    shard1.commit();\n\n    doc.clear();\n    doc.addField(\"id\", \"3\");\n    doc.addField(\"title\", \"s1 three\");\n    doc.addField(\"routefield_s\", \"europe\");\n    shard1.add(doc);\n    shard1.commit();\n\n    docCounts1 = 3; // Three documents in shard1\n\n    // Add two documents to shard2\n    doc.clear();\n    doc.addField(\"id\", \"4\");\n    doc.addField(\"title\", \"s2 four\");\n    doc.addField(\"routefield_s\", \"africa\");\n    shard2.add(doc);\n    //shard2.commit();\n\n    doc.clear();\n    doc.addField(\"id\", \"5\");\n    doc.addField(\"title\", \"s2 five\");\n    doc.addField(\"routefield_s\", \"africa\");\n    shard2.add(doc);\n    shard2.commit();\n\n    docCounts2 = 2; // Two documents in shard2\n\n    // Verify the documents were added to correct shards\n    ModifiableSolrParams query = new ModifiableSolrParams();\n    query.set(\"q\", \"*:*\");\n    QueryResponse respAll = shard1.query(query);\n    assertEquals(docCounts1 + docCounts2, respAll.getResults().getNumFound());\n\n    query.set(\"shards\", \"shard1\");\n    QueryResponse resp1 = shard1.query(query);\n    assertEquals(docCounts1, resp1.getResults().getNumFound());\n\n    query.set(\"shards\", \"shard2\");\n    QueryResponse resp2 = shard2.query(query);\n    assertEquals(docCounts2, resp2.getResults().getNumFound());\n\n    // Delete a document in shard2 with update to shard1, with _route_ param\n    // Should delete.\n    UpdateRequest deleteRequest = new UpdateRequest();\n    deleteRequest.deleteById(\"4\", \"africa\");\n    deleteRequest.setCommitWithin(1);\n    shard1.request(deleteRequest);\n    shard1.commit();\n\n    query.set(\"shards\", \"shard2\");\n    resp2 = shard2.query(query);\n    --docCounts2;\n    assertEquals(docCounts2, resp2.getResults().getNumFound());\n\n    // Multiple deleteById commands in a single request\n    deleteRequest.clear();\n    deleteRequest.deleteById(\"2\", \"europe\");\n    deleteRequest.deleteById(\"3\", \"europe\");\n    deleteRequest.setCommitWithin(1);\n    query.set(\"shards\", \"shard1\");\n    shard1.request(deleteRequest);\n    shard1.commit();\n    Thread.sleep(1000);\n    resp1 = shard1.query(query);\n    --docCounts1;\n    --docCounts1;\n    assertEquals(docCounts1, resp1.getResults().getNumFound());\n\n    // Test commitWithin, update to shard2, document deleted in shard1\n    deleteRequest.clear();\n    deleteRequest.deleteById(\"1\", \"europe\");\n    deleteRequest.setCommitWithin(1);\n    shard2.request(deleteRequest);\n    query.set(\"shards\", \"shard1\");\n    resp1 = shard1.query(query);\n    --docCounts1;\n    assertEquals(docCounts1, resp1.getResults().getNumFound());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"182acd29cf4cb1644a02b8517f3a5b867c0d7cce","date":1432665213,"type":3,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/FullSolrCloudDistribCmdsTest#testDeleteByIdCompositeRouterWithRouterField().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/FullSolrCloudDistribCmdsTest#testDeleteByIdCompositeRouterWithRouterField().mjava","sourceNew":"  private void testDeleteByIdCompositeRouterWithRouterField() throws Exception {\n    SolrClient server = createNewSolrClient(\"\", getBaseUrl((HttpSolrClient) clients.get(0)));\n    CollectionAdminResponse response;\n    Map<String, NamedList<Integer>> coresStatus;\n\n    response = new CollectionAdminRequest.Create()\n            .setCollectionName(\"compositeid_collection_with_routerfield\")\n            .setRouterName(\"compositeId\")\n            .setRouterField(\"routefield_s\")\n            .setNumShards(2)\n            .setShards(\"shard1,shard2\")\n            .setReplicationFactor(2)\n            .setConfigName(\"conf1\")\n            .process(server);\n\n    assertEquals(0, response.getStatus());\n    assertTrue(response.isSuccess());\n    coresStatus = response.getCollectionCoresStatus();\n    assertEquals(4, coresStatus.size());\n    for (int i = 0; i < 4; i++) {\n      NamedList<Integer> status = coresStatus.get(\"compositeid_collection_with_routerfield_shard\" + (i / 2 + 1) + \"_replica\" + (i % 2 + 1));\n      assertEquals(0, (int) status.get(\"status\"));\n      assertTrue(status.get(\"QTime\") > 0);\n    }\n\n    waitForRecoveriesToFinish(\"compositeid_collection_with_routerfield\", true);\n\n    SolrClient shard1 = createNewSolrClient(\"compositeid_collection_with_routerfield_shard1_replica1\",\n        getBaseUrl((HttpSolrClient) clients.get(0)));\n    SolrClient shard2 = createNewSolrClient(\"compositeid_collection_with_routerfield_shard2_replica1\",\n        getBaseUrl((HttpSolrClient) clients.get(0)));\n\n    SolrInputDocument doc = new SolrInputDocument();\n    int docCounts1 = 0, docCounts2 = 0;\n\n    // Add three documents to shard1\n    doc.clear();\n    doc.addField(\"id\", \"1\");\n    doc.addField(\"title\", \"s1 one\");\n    doc.addField(\"routefield_s\", \"europe\");\n    shard1.add(doc);\n    shard1.commit();\n\n    doc.clear();\n    doc.addField(\"id\", \"2\");\n    doc.addField(\"title\", \"s1 two\");\n    doc.addField(\"routefield_s\", \"europe\");\n    shard1.add(doc);\n    shard1.commit();\n\n    doc.clear();\n    doc.addField(\"id\", \"3\");\n    doc.addField(\"title\", \"s1 three\");\n    doc.addField(\"routefield_s\", \"europe\");\n    shard1.add(doc);\n    shard1.commit();\n\n    docCounts1 = 3; // Three documents in shard1\n\n    // Add two documents to shard2\n    doc.clear();\n    doc.addField(\"id\", \"4\");\n    doc.addField(\"title\", \"s2 four\");\n    doc.addField(\"routefield_s\", \"africa\");\n    shard2.add(doc);\n    //shard2.commit();\n\n    doc.clear();\n    doc.addField(\"id\", \"5\");\n    doc.addField(\"title\", \"s2 five\");\n    doc.addField(\"routefield_s\", \"africa\");\n    shard2.add(doc);\n    shard2.commit();\n\n    docCounts2 = 2; // Two documents in shard2\n\n    // Verify the documents were added to correct shards\n    ModifiableSolrParams query = new ModifiableSolrParams();\n    query.set(\"q\", \"*:*\");\n    QueryResponse respAll = shard1.query(query);\n    assertEquals(docCounts1 + docCounts2, respAll.getResults().getNumFound());\n\n    query.set(\"shards\", \"shard1\");\n    QueryResponse resp1 = shard1.query(query);\n    assertEquals(docCounts1, resp1.getResults().getNumFound());\n\n    query.set(\"shards\", \"shard2\");\n    QueryResponse resp2 = shard2.query(query);\n    assertEquals(docCounts2, resp2.getResults().getNumFound());\n\n    // Delete a document in shard2 with update to shard1, with _route_ param\n    // Should delete.\n    UpdateRequest deleteRequest = new UpdateRequest();\n    deleteRequest.deleteById(\"4\", \"africa\");\n    deleteRequest.setCommitWithin(1);\n    shard1.request(deleteRequest);\n    shard1.commit();\n\n    query.set(\"shards\", \"shard2\");\n    resp2 = shard2.query(query);\n    --docCounts2;\n    assertEquals(docCounts2, resp2.getResults().getNumFound());\n\n    // Multiple deleteById commands in a single request\n    deleteRequest.clear();\n    deleteRequest.deleteById(\"2\", \"europe\");\n    deleteRequest.deleteById(\"3\", \"europe\");\n    deleteRequest.setCommitWithin(1);\n    query.set(\"shards\", \"shard1\");\n    shard1.request(deleteRequest);\n    shard1.commit();\n    Thread.sleep(1000);\n    resp1 = shard1.query(query);\n    --docCounts1;\n    --docCounts1;\n    assertEquals(docCounts1, resp1.getResults().getNumFound());\n\n    // Test commitWithin, update to shard2, document deleted in shard1\n    deleteRequest.clear();\n    deleteRequest.deleteById(\"1\", \"europe\");\n    deleteRequest.setCommitWithin(1);\n    shard2.request(deleteRequest);\n    query.set(\"shards\", \"shard1\");\n    resp1 = shard1.query(query);\n    --docCounts1;\n    assertEquals(docCounts1, resp1.getResults().getNumFound());\n  }\n\n","sourceOld":"  private void testDeleteByIdCompositeRouterWithRouterField() throws Exception {\n    SolrClient server = createNewSolrClient(\"\", getBaseUrl((HttpSolrClient) clients.get(0)));\n    CollectionAdminResponse response;\n    Map<String, NamedList<Integer>> coresStatus;\n\n    CollectionAdminRequest.Create createCollectionRequest = new CollectionAdminRequest.Create();\n    createCollectionRequest.setCollectionName(\"compositeid_collection_with_routerfield\");\n    createCollectionRequest.setRouterName(\"compositeId\");\n    createCollectionRequest.setRouterField(\"routefield_s\");\n    createCollectionRequest.setNumShards(2);\n    createCollectionRequest.setShards(\"shard1,shard2\");\n    createCollectionRequest.setReplicationFactor(2);\n    createCollectionRequest.setConfigName(\"conf1\");\n    response = createCollectionRequest.process(server);\n\n    assertEquals(0, response.getStatus());\n    assertTrue(response.isSuccess());\n    coresStatus = response.getCollectionCoresStatus();\n    assertEquals(4, coresStatus.size());\n    for (int i = 0; i < 4; i++) {\n      NamedList<Integer> status = coresStatus.get(\"compositeid_collection_with_routerfield_shard\" + (i / 2 + 1) + \"_replica\" + (i % 2 + 1));\n      assertEquals(0, (int) status.get(\"status\"));\n      assertTrue(status.get(\"QTime\") > 0);\n    }\n\n    waitForRecoveriesToFinish(\"compositeid_collection_with_routerfield\", true);\n\n    SolrClient shard1 = createNewSolrClient(\"compositeid_collection_with_routerfield_shard1_replica1\",\n        getBaseUrl((HttpSolrClient) clients.get(0)));\n    SolrClient shard2 = createNewSolrClient(\"compositeid_collection_with_routerfield_shard2_replica1\",\n        getBaseUrl((HttpSolrClient) clients.get(0)));\n\n    SolrInputDocument doc = new SolrInputDocument();\n    int docCounts1 = 0, docCounts2 = 0;\n\n    // Add three documents to shard1\n    doc.clear();\n    doc.addField(\"id\", \"1\");\n    doc.addField(\"title\", \"s1 one\");\n    doc.addField(\"routefield_s\", \"europe\");\n    shard1.add(doc);\n    shard1.commit();\n\n    doc.clear();\n    doc.addField(\"id\", \"2\");\n    doc.addField(\"title\", \"s1 two\");\n    doc.addField(\"routefield_s\", \"europe\");\n    shard1.add(doc);\n    shard1.commit();\n\n    doc.clear();\n    doc.addField(\"id\", \"3\");\n    doc.addField(\"title\", \"s1 three\");\n    doc.addField(\"routefield_s\", \"europe\");\n    shard1.add(doc);\n    shard1.commit();\n\n    docCounts1 = 3; // Three documents in shard1\n\n    // Add two documents to shard2\n    doc.clear();\n    doc.addField(\"id\", \"4\");\n    doc.addField(\"title\", \"s2 four\");\n    doc.addField(\"routefield_s\", \"africa\");\n    shard2.add(doc);\n    //shard2.commit();\n\n    doc.clear();\n    doc.addField(\"id\", \"5\");\n    doc.addField(\"title\", \"s2 five\");\n    doc.addField(\"routefield_s\", \"africa\");\n    shard2.add(doc);\n    shard2.commit();\n\n    docCounts2 = 2; // Two documents in shard2\n\n    // Verify the documents were added to correct shards\n    ModifiableSolrParams query = new ModifiableSolrParams();\n    query.set(\"q\", \"*:*\");\n    QueryResponse respAll = shard1.query(query);\n    assertEquals(docCounts1 + docCounts2, respAll.getResults().getNumFound());\n\n    query.set(\"shards\", \"shard1\");\n    QueryResponse resp1 = shard1.query(query);\n    assertEquals(docCounts1, resp1.getResults().getNumFound());\n\n    query.set(\"shards\", \"shard2\");\n    QueryResponse resp2 = shard2.query(query);\n    assertEquals(docCounts2, resp2.getResults().getNumFound());\n\n    // Delete a document in shard2 with update to shard1, with _route_ param\n    // Should delete.\n    UpdateRequest deleteRequest = new UpdateRequest();\n    deleteRequest.deleteById(\"4\", \"africa\");\n    deleteRequest.setCommitWithin(1);\n    shard1.request(deleteRequest);\n    shard1.commit();\n\n    query.set(\"shards\", \"shard2\");\n    resp2 = shard2.query(query);\n    --docCounts2;\n    assertEquals(docCounts2, resp2.getResults().getNumFound());\n\n    // Multiple deleteById commands in a single request\n    deleteRequest.clear();\n    deleteRequest.deleteById(\"2\", \"europe\");\n    deleteRequest.deleteById(\"3\", \"europe\");\n    deleteRequest.setCommitWithin(1);\n    query.set(\"shards\", \"shard1\");\n    shard1.request(deleteRequest);\n    shard1.commit();\n    Thread.sleep(1000);\n    resp1 = shard1.query(query);\n    --docCounts1;\n    --docCounts1;\n    assertEquals(docCounts1, resp1.getResults().getNumFound());\n\n    // Test commitWithin, update to shard2, document deleted in shard1\n    deleteRequest.clear();\n    deleteRequest.deleteById(\"1\", \"europe\");\n    deleteRequest.setCommitWithin(1);\n    shard2.request(deleteRequest);\n    query.set(\"shards\", \"shard1\");\n    resp1 = shard1.query(query);\n    --docCounts1;\n    assertEquals(docCounts1, resp1.getResults().getNumFound());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ac97ea104d893f16aab430d9904473bc1f233f3c","date":1496249396,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/cloud/FullSolrCloudDistribCmdsTest#testDeleteByIdCompositeRouterWithRouterField().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/FullSolrCloudDistribCmdsTest#testDeleteByIdCompositeRouterWithRouterField().mjava","sourceNew":"  private void testDeleteByIdCompositeRouterWithRouterField() throws Exception {\n    SolrClient server = createNewSolrClient(\"\", getBaseUrl((HttpSolrClient) clients.get(0)));\n    CollectionAdminResponse response;\n    Map<String, NamedList<Integer>> coresStatus;\n\n    response = CollectionAdminRequest.createCollection(\"compositeid_collection_with_routerfield\",\"conf1\",2,2)\n            .setRouterName(\"compositeId\")\n            .setRouterField(\"routefield_s\")\n            .setShards(\"shard1,shard2\")\n            .process(server);\n\n    assertEquals(0, response.getStatus());\n    assertTrue(response.isSuccess());\n    coresStatus = response.getCollectionCoresStatus();\n    assertEquals(4, coresStatus.size());\n    for (int i = 0; i < 4; i++) {\n      NamedList<Integer> status = coresStatus.get(\"compositeid_collection_with_routerfield_shard\" + (i / 2 + 1) + \"_replica\" + (i % 2 + 1));\n      assertEquals(0, (int) status.get(\"status\"));\n      assertTrue(status.get(\"QTime\") > 0);\n    }\n\n    waitForRecoveriesToFinish(\"compositeid_collection_with_routerfield\", true);\n\n    SolrClient shard1 = createNewSolrClient(\"compositeid_collection_with_routerfield_shard1_replica1\",\n        getBaseUrl((HttpSolrClient) clients.get(0)));\n    SolrClient shard2 = createNewSolrClient(\"compositeid_collection_with_routerfield_shard2_replica1\",\n        getBaseUrl((HttpSolrClient) clients.get(0)));\n\n    SolrInputDocument doc = new SolrInputDocument();\n    int docCounts1 = 0, docCounts2 = 0;\n\n    // Add three documents to shard1\n    doc.clear();\n    doc.addField(\"id\", \"1\");\n    doc.addField(\"title\", \"s1 one\");\n    doc.addField(\"routefield_s\", \"europe\");\n    shard1.add(doc);\n    shard1.commit();\n\n    doc.clear();\n    doc.addField(\"id\", \"2\");\n    doc.addField(\"title\", \"s1 two\");\n    doc.addField(\"routefield_s\", \"europe\");\n    shard1.add(doc);\n    shard1.commit();\n\n    doc.clear();\n    doc.addField(\"id\", \"3\");\n    doc.addField(\"title\", \"s1 three\");\n    doc.addField(\"routefield_s\", \"europe\");\n    shard1.add(doc);\n    shard1.commit();\n\n    docCounts1 = 3; // Three documents in shard1\n\n    // Add two documents to shard2\n    doc.clear();\n    doc.addField(\"id\", \"4\");\n    doc.addField(\"title\", \"s2 four\");\n    doc.addField(\"routefield_s\", \"africa\");\n    shard2.add(doc);\n    //shard2.commit();\n\n    doc.clear();\n    doc.addField(\"id\", \"5\");\n    doc.addField(\"title\", \"s2 five\");\n    doc.addField(\"routefield_s\", \"africa\");\n    shard2.add(doc);\n    shard2.commit();\n\n    docCounts2 = 2; // Two documents in shard2\n\n    // Verify the documents were added to correct shards\n    ModifiableSolrParams query = new ModifiableSolrParams();\n    query.set(\"q\", \"*:*\");\n    QueryResponse respAll = shard1.query(query);\n    assertEquals(docCounts1 + docCounts2, respAll.getResults().getNumFound());\n\n    query.set(\"shards\", \"shard1\");\n    QueryResponse resp1 = shard1.query(query);\n    assertEquals(docCounts1, resp1.getResults().getNumFound());\n\n    query.set(\"shards\", \"shard2\");\n    QueryResponse resp2 = shard2.query(query);\n    assertEquals(docCounts2, resp2.getResults().getNumFound());\n\n    // Delete a document in shard2 with update to shard1, with _route_ param\n    // Should delete.\n    UpdateRequest deleteRequest = new UpdateRequest();\n    deleteRequest.deleteById(\"4\", \"africa\");\n    deleteRequest.setCommitWithin(1);\n    shard1.request(deleteRequest);\n    shard1.commit();\n\n    query.set(\"shards\", \"shard2\");\n    resp2 = shard2.query(query);\n    --docCounts2;\n    assertEquals(docCounts2, resp2.getResults().getNumFound());\n\n    // Multiple deleteById commands in a single request\n    deleteRequest.clear();\n    deleteRequest.deleteById(\"2\", \"europe\");\n    deleteRequest.deleteById(\"3\", \"europe\");\n    deleteRequest.setCommitWithin(1);\n    query.set(\"shards\", \"shard1\");\n    shard1.request(deleteRequest);\n    shard1.commit();\n    Thread.sleep(1000);\n    resp1 = shard1.query(query);\n    --docCounts1;\n    --docCounts1;\n    assertEquals(docCounts1, resp1.getResults().getNumFound());\n\n    // Test commitWithin, update to shard2, document deleted in shard1\n    deleteRequest.clear();\n    deleteRequest.deleteById(\"1\", \"europe\");\n    deleteRequest.setCommitWithin(1);\n    shard2.request(deleteRequest);\n    query.set(\"shards\", \"shard1\");\n    resp1 = shard1.query(query);\n    --docCounts1;\n    assertEquals(docCounts1, resp1.getResults().getNumFound());\n  }\n\n","sourceOld":"  private void testDeleteByIdCompositeRouterWithRouterField() throws Exception {\n    SolrClient server = createNewSolrClient(\"\", getBaseUrl((HttpSolrClient) clients.get(0)));\n    CollectionAdminResponse response;\n    Map<String, NamedList<Integer>> coresStatus;\n\n    response = new CollectionAdminRequest.Create()\n            .setCollectionName(\"compositeid_collection_with_routerfield\")\n            .setRouterName(\"compositeId\")\n            .setRouterField(\"routefield_s\")\n            .setNumShards(2)\n            .setShards(\"shard1,shard2\")\n            .setReplicationFactor(2)\n            .setConfigName(\"conf1\")\n            .process(server);\n\n    assertEquals(0, response.getStatus());\n    assertTrue(response.isSuccess());\n    coresStatus = response.getCollectionCoresStatus();\n    assertEquals(4, coresStatus.size());\n    for (int i = 0; i < 4; i++) {\n      NamedList<Integer> status = coresStatus.get(\"compositeid_collection_with_routerfield_shard\" + (i / 2 + 1) + \"_replica\" + (i % 2 + 1));\n      assertEquals(0, (int) status.get(\"status\"));\n      assertTrue(status.get(\"QTime\") > 0);\n    }\n\n    waitForRecoveriesToFinish(\"compositeid_collection_with_routerfield\", true);\n\n    SolrClient shard1 = createNewSolrClient(\"compositeid_collection_with_routerfield_shard1_replica1\",\n        getBaseUrl((HttpSolrClient) clients.get(0)));\n    SolrClient shard2 = createNewSolrClient(\"compositeid_collection_with_routerfield_shard2_replica1\",\n        getBaseUrl((HttpSolrClient) clients.get(0)));\n\n    SolrInputDocument doc = new SolrInputDocument();\n    int docCounts1 = 0, docCounts2 = 0;\n\n    // Add three documents to shard1\n    doc.clear();\n    doc.addField(\"id\", \"1\");\n    doc.addField(\"title\", \"s1 one\");\n    doc.addField(\"routefield_s\", \"europe\");\n    shard1.add(doc);\n    shard1.commit();\n\n    doc.clear();\n    doc.addField(\"id\", \"2\");\n    doc.addField(\"title\", \"s1 two\");\n    doc.addField(\"routefield_s\", \"europe\");\n    shard1.add(doc);\n    shard1.commit();\n\n    doc.clear();\n    doc.addField(\"id\", \"3\");\n    doc.addField(\"title\", \"s1 three\");\n    doc.addField(\"routefield_s\", \"europe\");\n    shard1.add(doc);\n    shard1.commit();\n\n    docCounts1 = 3; // Three documents in shard1\n\n    // Add two documents to shard2\n    doc.clear();\n    doc.addField(\"id\", \"4\");\n    doc.addField(\"title\", \"s2 four\");\n    doc.addField(\"routefield_s\", \"africa\");\n    shard2.add(doc);\n    //shard2.commit();\n\n    doc.clear();\n    doc.addField(\"id\", \"5\");\n    doc.addField(\"title\", \"s2 five\");\n    doc.addField(\"routefield_s\", \"africa\");\n    shard2.add(doc);\n    shard2.commit();\n\n    docCounts2 = 2; // Two documents in shard2\n\n    // Verify the documents were added to correct shards\n    ModifiableSolrParams query = new ModifiableSolrParams();\n    query.set(\"q\", \"*:*\");\n    QueryResponse respAll = shard1.query(query);\n    assertEquals(docCounts1 + docCounts2, respAll.getResults().getNumFound());\n\n    query.set(\"shards\", \"shard1\");\n    QueryResponse resp1 = shard1.query(query);\n    assertEquals(docCounts1, resp1.getResults().getNumFound());\n\n    query.set(\"shards\", \"shard2\");\n    QueryResponse resp2 = shard2.query(query);\n    assertEquals(docCounts2, resp2.getResults().getNumFound());\n\n    // Delete a document in shard2 with update to shard1, with _route_ param\n    // Should delete.\n    UpdateRequest deleteRequest = new UpdateRequest();\n    deleteRequest.deleteById(\"4\", \"africa\");\n    deleteRequest.setCommitWithin(1);\n    shard1.request(deleteRequest);\n    shard1.commit();\n\n    query.set(\"shards\", \"shard2\");\n    resp2 = shard2.query(query);\n    --docCounts2;\n    assertEquals(docCounts2, resp2.getResults().getNumFound());\n\n    // Multiple deleteById commands in a single request\n    deleteRequest.clear();\n    deleteRequest.deleteById(\"2\", \"europe\");\n    deleteRequest.deleteById(\"3\", \"europe\");\n    deleteRequest.setCommitWithin(1);\n    query.set(\"shards\", \"shard1\");\n    shard1.request(deleteRequest);\n    shard1.commit();\n    Thread.sleep(1000);\n    resp1 = shard1.query(query);\n    --docCounts1;\n    --docCounts1;\n    assertEquals(docCounts1, resp1.getResults().getNumFound());\n\n    // Test commitWithin, update to shard2, document deleted in shard1\n    deleteRequest.clear();\n    deleteRequest.deleteById(\"1\", \"europe\");\n    deleteRequest.setCommitWithin(1);\n    shard2.request(deleteRequest);\n    query.set(\"shards\", \"shard1\");\n    resp1 = shard1.query(query);\n    --docCounts1;\n    assertEquals(docCounts1, resp1.getResults().getNumFound());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3217321f3e1d7922898c6c633d17acfa840d6875","date":1496257480,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/FullSolrCloudDistribCmdsTest#testDeleteByIdCompositeRouterWithRouterField().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/FullSolrCloudDistribCmdsTest#testDeleteByIdCompositeRouterWithRouterField().mjava","sourceNew":"  private void testDeleteByIdCompositeRouterWithRouterField() throws Exception {\n    SolrClient server = createNewSolrClient(\"\", getBaseUrl((HttpSolrClient) clients.get(0)));\n    CollectionAdminResponse response;\n    Map<String, NamedList<Integer>> coresStatus;\n\n    response = CollectionAdminRequest.createCollection(\"compositeid_collection_with_routerfield\",\"conf1\",2,2)\n            .setRouterName(\"compositeId\")\n            .setRouterField(\"routefield_s\")\n            .setShards(\"shard1,shard2\")\n            .process(server);\n\n    assertEquals(0, response.getStatus());\n    assertTrue(response.isSuccess());\n    coresStatus = response.getCollectionCoresStatus();\n    assertEquals(4, coresStatus.size());\n    for (int i = 0; i < 4; i++) {\n      NamedList<Integer> status = coresStatus.get(\"compositeid_collection_with_routerfield_shard\" + (i / 2 + 1) + \"_replica\" + (i % 2 + 1));\n      assertEquals(0, (int) status.get(\"status\"));\n      assertTrue(status.get(\"QTime\") > 0);\n    }\n\n    waitForRecoveriesToFinish(\"compositeid_collection_with_routerfield\", true);\n\n    SolrClient shard1 = createNewSolrClient(\"compositeid_collection_with_routerfield_shard1_replica1\",\n        getBaseUrl((HttpSolrClient) clients.get(0)));\n    SolrClient shard2 = createNewSolrClient(\"compositeid_collection_with_routerfield_shard2_replica1\",\n        getBaseUrl((HttpSolrClient) clients.get(0)));\n\n    SolrInputDocument doc = new SolrInputDocument();\n    int docCounts1 = 0, docCounts2 = 0;\n\n    // Add three documents to shard1\n    doc.clear();\n    doc.addField(\"id\", \"1\");\n    doc.addField(\"title\", \"s1 one\");\n    doc.addField(\"routefield_s\", \"europe\");\n    shard1.add(doc);\n    shard1.commit();\n\n    doc.clear();\n    doc.addField(\"id\", \"2\");\n    doc.addField(\"title\", \"s1 two\");\n    doc.addField(\"routefield_s\", \"europe\");\n    shard1.add(doc);\n    shard1.commit();\n\n    doc.clear();\n    doc.addField(\"id\", \"3\");\n    doc.addField(\"title\", \"s1 three\");\n    doc.addField(\"routefield_s\", \"europe\");\n    shard1.add(doc);\n    shard1.commit();\n\n    docCounts1 = 3; // Three documents in shard1\n\n    // Add two documents to shard2\n    doc.clear();\n    doc.addField(\"id\", \"4\");\n    doc.addField(\"title\", \"s2 four\");\n    doc.addField(\"routefield_s\", \"africa\");\n    shard2.add(doc);\n    //shard2.commit();\n\n    doc.clear();\n    doc.addField(\"id\", \"5\");\n    doc.addField(\"title\", \"s2 five\");\n    doc.addField(\"routefield_s\", \"africa\");\n    shard2.add(doc);\n    shard2.commit();\n\n    docCounts2 = 2; // Two documents in shard2\n\n    // Verify the documents were added to correct shards\n    ModifiableSolrParams query = new ModifiableSolrParams();\n    query.set(\"q\", \"*:*\");\n    QueryResponse respAll = shard1.query(query);\n    assertEquals(docCounts1 + docCounts2, respAll.getResults().getNumFound());\n\n    query.set(\"shards\", \"shard1\");\n    QueryResponse resp1 = shard1.query(query);\n    assertEquals(docCounts1, resp1.getResults().getNumFound());\n\n    query.set(\"shards\", \"shard2\");\n    QueryResponse resp2 = shard2.query(query);\n    assertEquals(docCounts2, resp2.getResults().getNumFound());\n\n    // Delete a document in shard2 with update to shard1, with _route_ param\n    // Should delete.\n    UpdateRequest deleteRequest = new UpdateRequest();\n    deleteRequest.deleteById(\"4\", \"africa\");\n    deleteRequest.setCommitWithin(1);\n    shard1.request(deleteRequest);\n    shard1.commit();\n\n    query.set(\"shards\", \"shard2\");\n    resp2 = shard2.query(query);\n    --docCounts2;\n    assertEquals(docCounts2, resp2.getResults().getNumFound());\n\n    // Multiple deleteById commands in a single request\n    deleteRequest.clear();\n    deleteRequest.deleteById(\"2\", \"europe\");\n    deleteRequest.deleteById(\"3\", \"europe\");\n    deleteRequest.setCommitWithin(1);\n    query.set(\"shards\", \"shard1\");\n    shard1.request(deleteRequest);\n    shard1.commit();\n    Thread.sleep(1000);\n    resp1 = shard1.query(query);\n    --docCounts1;\n    --docCounts1;\n    assertEquals(docCounts1, resp1.getResults().getNumFound());\n\n    // Test commitWithin, update to shard2, document deleted in shard1\n    deleteRequest.clear();\n    deleteRequest.deleteById(\"1\", \"europe\");\n    deleteRequest.setCommitWithin(1);\n    shard2.request(deleteRequest);\n    query.set(\"shards\", \"shard1\");\n    resp1 = shard1.query(query);\n    --docCounts1;\n    assertEquals(docCounts1, resp1.getResults().getNumFound());\n  }\n\n","sourceOld":"  private void testDeleteByIdCompositeRouterWithRouterField() throws Exception {\n    SolrClient server = createNewSolrClient(\"\", getBaseUrl((HttpSolrClient) clients.get(0)));\n    CollectionAdminResponse response;\n    Map<String, NamedList<Integer>> coresStatus;\n\n    response = new CollectionAdminRequest.Create()\n            .setCollectionName(\"compositeid_collection_with_routerfield\")\n            .setRouterName(\"compositeId\")\n            .setRouterField(\"routefield_s\")\n            .setNumShards(2)\n            .setShards(\"shard1,shard2\")\n            .setReplicationFactor(2)\n            .setConfigName(\"conf1\")\n            .process(server);\n\n    assertEquals(0, response.getStatus());\n    assertTrue(response.isSuccess());\n    coresStatus = response.getCollectionCoresStatus();\n    assertEquals(4, coresStatus.size());\n    for (int i = 0; i < 4; i++) {\n      NamedList<Integer> status = coresStatus.get(\"compositeid_collection_with_routerfield_shard\" + (i / 2 + 1) + \"_replica\" + (i % 2 + 1));\n      assertEquals(0, (int) status.get(\"status\"));\n      assertTrue(status.get(\"QTime\") > 0);\n    }\n\n    waitForRecoveriesToFinish(\"compositeid_collection_with_routerfield\", true);\n\n    SolrClient shard1 = createNewSolrClient(\"compositeid_collection_with_routerfield_shard1_replica1\",\n        getBaseUrl((HttpSolrClient) clients.get(0)));\n    SolrClient shard2 = createNewSolrClient(\"compositeid_collection_with_routerfield_shard2_replica1\",\n        getBaseUrl((HttpSolrClient) clients.get(0)));\n\n    SolrInputDocument doc = new SolrInputDocument();\n    int docCounts1 = 0, docCounts2 = 0;\n\n    // Add three documents to shard1\n    doc.clear();\n    doc.addField(\"id\", \"1\");\n    doc.addField(\"title\", \"s1 one\");\n    doc.addField(\"routefield_s\", \"europe\");\n    shard1.add(doc);\n    shard1.commit();\n\n    doc.clear();\n    doc.addField(\"id\", \"2\");\n    doc.addField(\"title\", \"s1 two\");\n    doc.addField(\"routefield_s\", \"europe\");\n    shard1.add(doc);\n    shard1.commit();\n\n    doc.clear();\n    doc.addField(\"id\", \"3\");\n    doc.addField(\"title\", \"s1 three\");\n    doc.addField(\"routefield_s\", \"europe\");\n    shard1.add(doc);\n    shard1.commit();\n\n    docCounts1 = 3; // Three documents in shard1\n\n    // Add two documents to shard2\n    doc.clear();\n    doc.addField(\"id\", \"4\");\n    doc.addField(\"title\", \"s2 four\");\n    doc.addField(\"routefield_s\", \"africa\");\n    shard2.add(doc);\n    //shard2.commit();\n\n    doc.clear();\n    doc.addField(\"id\", \"5\");\n    doc.addField(\"title\", \"s2 five\");\n    doc.addField(\"routefield_s\", \"africa\");\n    shard2.add(doc);\n    shard2.commit();\n\n    docCounts2 = 2; // Two documents in shard2\n\n    // Verify the documents were added to correct shards\n    ModifiableSolrParams query = new ModifiableSolrParams();\n    query.set(\"q\", \"*:*\");\n    QueryResponse respAll = shard1.query(query);\n    assertEquals(docCounts1 + docCounts2, respAll.getResults().getNumFound());\n\n    query.set(\"shards\", \"shard1\");\n    QueryResponse resp1 = shard1.query(query);\n    assertEquals(docCounts1, resp1.getResults().getNumFound());\n\n    query.set(\"shards\", \"shard2\");\n    QueryResponse resp2 = shard2.query(query);\n    assertEquals(docCounts2, resp2.getResults().getNumFound());\n\n    // Delete a document in shard2 with update to shard1, with _route_ param\n    // Should delete.\n    UpdateRequest deleteRequest = new UpdateRequest();\n    deleteRequest.deleteById(\"4\", \"africa\");\n    deleteRequest.setCommitWithin(1);\n    shard1.request(deleteRequest);\n    shard1.commit();\n\n    query.set(\"shards\", \"shard2\");\n    resp2 = shard2.query(query);\n    --docCounts2;\n    assertEquals(docCounts2, resp2.getResults().getNumFound());\n\n    // Multiple deleteById commands in a single request\n    deleteRequest.clear();\n    deleteRequest.deleteById(\"2\", \"europe\");\n    deleteRequest.deleteById(\"3\", \"europe\");\n    deleteRequest.setCommitWithin(1);\n    query.set(\"shards\", \"shard1\");\n    shard1.request(deleteRequest);\n    shard1.commit();\n    Thread.sleep(1000);\n    resp1 = shard1.query(query);\n    --docCounts1;\n    --docCounts1;\n    assertEquals(docCounts1, resp1.getResults().getNumFound());\n\n    // Test commitWithin, update to shard2, document deleted in shard1\n    deleteRequest.clear();\n    deleteRequest.deleteById(\"1\", \"europe\");\n    deleteRequest.setCommitWithin(1);\n    shard2.request(deleteRequest);\n    query.set(\"shards\", \"shard1\");\n    resp1 = shard1.query(query);\n    --docCounts1;\n    assertEquals(docCounts1, resp1.getResults().getNumFound());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"42dc7f2d60851668d9efa2d12baa1d4ebe54b12f","date":1496281877,"type":3,"author":"Cao Manh Dat","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/FullSolrCloudDistribCmdsTest#testDeleteByIdCompositeRouterWithRouterField().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/FullSolrCloudDistribCmdsTest#testDeleteByIdCompositeRouterWithRouterField().mjava","sourceNew":"  private void testDeleteByIdCompositeRouterWithRouterField() throws Exception {\n    SolrClient server = createNewSolrClient(\"\", getBaseUrl((HttpSolrClient) clients.get(0)));\n    CollectionAdminResponse response;\n    Map<String, NamedList<Integer>> coresStatus;\n\n    response = CollectionAdminRequest.createCollection(\"compositeid_collection_with_routerfield\",\"conf1\",2,2)\n            .setRouterName(\"compositeId\")\n            .setRouterField(\"routefield_s\")\n            .setShards(\"shard1,shard2\")\n            .process(server);\n\n    assertEquals(0, response.getStatus());\n    assertTrue(response.isSuccess());\n    coresStatus = response.getCollectionCoresStatus();\n    assertEquals(4, coresStatus.size());\n    for (int i = 0; i < 4; i++) {\n      NamedList<Integer> status = coresStatus.get(\"compositeid_collection_with_routerfield_shard\" + (i / 2 + 1) + \"_replica\" + (i % 2 + 1));\n      assertEquals(0, (int) status.get(\"status\"));\n      assertTrue(status.get(\"QTime\") > 0);\n    }\n\n    waitForRecoveriesToFinish(\"compositeid_collection_with_routerfield\", true);\n\n    SolrClient shard1 = createNewSolrClient(\"compositeid_collection_with_routerfield_shard1_replica1\",\n        getBaseUrl((HttpSolrClient) clients.get(0)));\n    SolrClient shard2 = createNewSolrClient(\"compositeid_collection_with_routerfield_shard2_replica1\",\n        getBaseUrl((HttpSolrClient) clients.get(0)));\n\n    SolrInputDocument doc = new SolrInputDocument();\n    int docCounts1 = 0, docCounts2 = 0;\n\n    // Add three documents to shard1\n    doc.clear();\n    doc.addField(\"id\", \"1\");\n    doc.addField(\"title\", \"s1 one\");\n    doc.addField(\"routefield_s\", \"europe\");\n    shard1.add(doc);\n    shard1.commit();\n\n    doc.clear();\n    doc.addField(\"id\", \"2\");\n    doc.addField(\"title\", \"s1 two\");\n    doc.addField(\"routefield_s\", \"europe\");\n    shard1.add(doc);\n    shard1.commit();\n\n    doc.clear();\n    doc.addField(\"id\", \"3\");\n    doc.addField(\"title\", \"s1 three\");\n    doc.addField(\"routefield_s\", \"europe\");\n    shard1.add(doc);\n    shard1.commit();\n\n    docCounts1 = 3; // Three documents in shard1\n\n    // Add two documents to shard2\n    doc.clear();\n    doc.addField(\"id\", \"4\");\n    doc.addField(\"title\", \"s2 four\");\n    doc.addField(\"routefield_s\", \"africa\");\n    shard2.add(doc);\n    //shard2.commit();\n\n    doc.clear();\n    doc.addField(\"id\", \"5\");\n    doc.addField(\"title\", \"s2 five\");\n    doc.addField(\"routefield_s\", \"africa\");\n    shard2.add(doc);\n    shard2.commit();\n\n    docCounts2 = 2; // Two documents in shard2\n\n    // Verify the documents were added to correct shards\n    ModifiableSolrParams query = new ModifiableSolrParams();\n    query.set(\"q\", \"*:*\");\n    QueryResponse respAll = shard1.query(query);\n    assertEquals(docCounts1 + docCounts2, respAll.getResults().getNumFound());\n\n    query.set(\"shards\", \"shard1\");\n    QueryResponse resp1 = shard1.query(query);\n    assertEquals(docCounts1, resp1.getResults().getNumFound());\n\n    query.set(\"shards\", \"shard2\");\n    QueryResponse resp2 = shard2.query(query);\n    assertEquals(docCounts2, resp2.getResults().getNumFound());\n\n    // Delete a document in shard2 with update to shard1, with _route_ param\n    // Should delete.\n    UpdateRequest deleteRequest = new UpdateRequest();\n    deleteRequest.deleteById(\"4\", \"africa\");\n    deleteRequest.setCommitWithin(1);\n    shard1.request(deleteRequest);\n    shard1.commit();\n\n    query.set(\"shards\", \"shard2\");\n    resp2 = shard2.query(query);\n    --docCounts2;\n    assertEquals(docCounts2, resp2.getResults().getNumFound());\n\n    // Multiple deleteById commands in a single request\n    deleteRequest.clear();\n    deleteRequest.deleteById(\"2\", \"europe\");\n    deleteRequest.deleteById(\"3\", \"europe\");\n    deleteRequest.setCommitWithin(1);\n    query.set(\"shards\", \"shard1\");\n    shard1.request(deleteRequest);\n    shard1.commit();\n    Thread.sleep(1000);\n    resp1 = shard1.query(query);\n    --docCounts1;\n    --docCounts1;\n    assertEquals(docCounts1, resp1.getResults().getNumFound());\n\n    // Test commitWithin, update to shard2, document deleted in shard1\n    deleteRequest.clear();\n    deleteRequest.deleteById(\"1\", \"europe\");\n    deleteRequest.setCommitWithin(1);\n    shard2.request(deleteRequest);\n    query.set(\"shards\", \"shard1\");\n    resp1 = shard1.query(query);\n    --docCounts1;\n    assertEquals(docCounts1, resp1.getResults().getNumFound());\n  }\n\n","sourceOld":"  private void testDeleteByIdCompositeRouterWithRouterField() throws Exception {\n    SolrClient server = createNewSolrClient(\"\", getBaseUrl((HttpSolrClient) clients.get(0)));\n    CollectionAdminResponse response;\n    Map<String, NamedList<Integer>> coresStatus;\n\n    response = new CollectionAdminRequest.Create()\n            .setCollectionName(\"compositeid_collection_with_routerfield\")\n            .setRouterName(\"compositeId\")\n            .setRouterField(\"routefield_s\")\n            .setNumShards(2)\n            .setShards(\"shard1,shard2\")\n            .setReplicationFactor(2)\n            .setConfigName(\"conf1\")\n            .process(server);\n\n    assertEquals(0, response.getStatus());\n    assertTrue(response.isSuccess());\n    coresStatus = response.getCollectionCoresStatus();\n    assertEquals(4, coresStatus.size());\n    for (int i = 0; i < 4; i++) {\n      NamedList<Integer> status = coresStatus.get(\"compositeid_collection_with_routerfield_shard\" + (i / 2 + 1) + \"_replica\" + (i % 2 + 1));\n      assertEquals(0, (int) status.get(\"status\"));\n      assertTrue(status.get(\"QTime\") > 0);\n    }\n\n    waitForRecoveriesToFinish(\"compositeid_collection_with_routerfield\", true);\n\n    SolrClient shard1 = createNewSolrClient(\"compositeid_collection_with_routerfield_shard1_replica1\",\n        getBaseUrl((HttpSolrClient) clients.get(0)));\n    SolrClient shard2 = createNewSolrClient(\"compositeid_collection_with_routerfield_shard2_replica1\",\n        getBaseUrl((HttpSolrClient) clients.get(0)));\n\n    SolrInputDocument doc = new SolrInputDocument();\n    int docCounts1 = 0, docCounts2 = 0;\n\n    // Add three documents to shard1\n    doc.clear();\n    doc.addField(\"id\", \"1\");\n    doc.addField(\"title\", \"s1 one\");\n    doc.addField(\"routefield_s\", \"europe\");\n    shard1.add(doc);\n    shard1.commit();\n\n    doc.clear();\n    doc.addField(\"id\", \"2\");\n    doc.addField(\"title\", \"s1 two\");\n    doc.addField(\"routefield_s\", \"europe\");\n    shard1.add(doc);\n    shard1.commit();\n\n    doc.clear();\n    doc.addField(\"id\", \"3\");\n    doc.addField(\"title\", \"s1 three\");\n    doc.addField(\"routefield_s\", \"europe\");\n    shard1.add(doc);\n    shard1.commit();\n\n    docCounts1 = 3; // Three documents in shard1\n\n    // Add two documents to shard2\n    doc.clear();\n    doc.addField(\"id\", \"4\");\n    doc.addField(\"title\", \"s2 four\");\n    doc.addField(\"routefield_s\", \"africa\");\n    shard2.add(doc);\n    //shard2.commit();\n\n    doc.clear();\n    doc.addField(\"id\", \"5\");\n    doc.addField(\"title\", \"s2 five\");\n    doc.addField(\"routefield_s\", \"africa\");\n    shard2.add(doc);\n    shard2.commit();\n\n    docCounts2 = 2; // Two documents in shard2\n\n    // Verify the documents were added to correct shards\n    ModifiableSolrParams query = new ModifiableSolrParams();\n    query.set(\"q\", \"*:*\");\n    QueryResponse respAll = shard1.query(query);\n    assertEquals(docCounts1 + docCounts2, respAll.getResults().getNumFound());\n\n    query.set(\"shards\", \"shard1\");\n    QueryResponse resp1 = shard1.query(query);\n    assertEquals(docCounts1, resp1.getResults().getNumFound());\n\n    query.set(\"shards\", \"shard2\");\n    QueryResponse resp2 = shard2.query(query);\n    assertEquals(docCounts2, resp2.getResults().getNumFound());\n\n    // Delete a document in shard2 with update to shard1, with _route_ param\n    // Should delete.\n    UpdateRequest deleteRequest = new UpdateRequest();\n    deleteRequest.deleteById(\"4\", \"africa\");\n    deleteRequest.setCommitWithin(1);\n    shard1.request(deleteRequest);\n    shard1.commit();\n\n    query.set(\"shards\", \"shard2\");\n    resp2 = shard2.query(query);\n    --docCounts2;\n    assertEquals(docCounts2, resp2.getResults().getNumFound());\n\n    // Multiple deleteById commands in a single request\n    deleteRequest.clear();\n    deleteRequest.deleteById(\"2\", \"europe\");\n    deleteRequest.deleteById(\"3\", \"europe\");\n    deleteRequest.setCommitWithin(1);\n    query.set(\"shards\", \"shard1\");\n    shard1.request(deleteRequest);\n    shard1.commit();\n    Thread.sleep(1000);\n    resp1 = shard1.query(query);\n    --docCounts1;\n    --docCounts1;\n    assertEquals(docCounts1, resp1.getResults().getNumFound());\n\n    // Test commitWithin, update to shard2, document deleted in shard1\n    deleteRequest.clear();\n    deleteRequest.deleteById(\"1\", \"europe\");\n    deleteRequest.setCommitWithin(1);\n    shard2.request(deleteRequest);\n    query.set(\"shards\", \"shard1\");\n    resp1 = shard1.query(query);\n    --docCounts1;\n    assertEquals(docCounts1, resp1.getResults().getNumFound());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/cloud/FullSolrCloudDistribCmdsTest#testDeleteByIdCompositeRouterWithRouterField().mjava","pathOld":"solr/core/src/test/org/apache/solr/cloud/FullSolrCloudDistribCmdsTest#testDeleteByIdCompositeRouterWithRouterField().mjava","sourceNew":"  private void testDeleteByIdCompositeRouterWithRouterField() throws Exception {\n    SolrClient server = createNewSolrClient(\"\", getBaseUrl((HttpSolrClient) clients.get(0)));\n    CollectionAdminResponse response;\n    Map<String, NamedList<Integer>> coresStatus;\n\n    response = CollectionAdminRequest.createCollection(\"compositeid_collection_with_routerfield\",\"conf1\",2,2)\n            .setRouterName(\"compositeId\")\n            .setRouterField(\"routefield_s\")\n            .setShards(\"shard1,shard2\")\n            .process(server);\n\n    assertEquals(0, response.getStatus());\n    assertTrue(response.isSuccess());\n    coresStatus = response.getCollectionCoresStatus();\n    assertEquals(4, coresStatus.size());\n    for (int i = 0; i < 4; i++) {\n      NamedList<Integer> status = coresStatus.get(\"compositeid_collection_with_routerfield_shard\" + (i / 2 + 1) + \"_replica\" + (i % 2 + 1));\n      assertEquals(0, (int) status.get(\"status\"));\n      assertTrue(status.get(\"QTime\") > 0);\n    }\n\n    waitForRecoveriesToFinish(\"compositeid_collection_with_routerfield\", true);\n\n    SolrClient shard1 = createNewSolrClient(\"compositeid_collection_with_routerfield_shard1_replica1\",\n        getBaseUrl((HttpSolrClient) clients.get(0)));\n    SolrClient shard2 = createNewSolrClient(\"compositeid_collection_with_routerfield_shard2_replica1\",\n        getBaseUrl((HttpSolrClient) clients.get(0)));\n\n    SolrInputDocument doc = new SolrInputDocument();\n    int docCounts1 = 0, docCounts2 = 0;\n\n    // Add three documents to shard1\n    doc.clear();\n    doc.addField(\"id\", \"1\");\n    doc.addField(\"title\", \"s1 one\");\n    doc.addField(\"routefield_s\", \"europe\");\n    shard1.add(doc);\n    shard1.commit();\n\n    doc.clear();\n    doc.addField(\"id\", \"2\");\n    doc.addField(\"title\", \"s1 two\");\n    doc.addField(\"routefield_s\", \"europe\");\n    shard1.add(doc);\n    shard1.commit();\n\n    doc.clear();\n    doc.addField(\"id\", \"3\");\n    doc.addField(\"title\", \"s1 three\");\n    doc.addField(\"routefield_s\", \"europe\");\n    shard1.add(doc);\n    shard1.commit();\n\n    docCounts1 = 3; // Three documents in shard1\n\n    // Add two documents to shard2\n    doc.clear();\n    doc.addField(\"id\", \"4\");\n    doc.addField(\"title\", \"s2 four\");\n    doc.addField(\"routefield_s\", \"africa\");\n    shard2.add(doc);\n    //shard2.commit();\n\n    doc.clear();\n    doc.addField(\"id\", \"5\");\n    doc.addField(\"title\", \"s2 five\");\n    doc.addField(\"routefield_s\", \"africa\");\n    shard2.add(doc);\n    shard2.commit();\n\n    docCounts2 = 2; // Two documents in shard2\n\n    // Verify the documents were added to correct shards\n    ModifiableSolrParams query = new ModifiableSolrParams();\n    query.set(\"q\", \"*:*\");\n    QueryResponse respAll = shard1.query(query);\n    assertEquals(docCounts1 + docCounts2, respAll.getResults().getNumFound());\n\n    query.set(\"shards\", \"shard1\");\n    QueryResponse resp1 = shard1.query(query);\n    assertEquals(docCounts1, resp1.getResults().getNumFound());\n\n    query.set(\"shards\", \"shard2\");\n    QueryResponse resp2 = shard2.query(query);\n    assertEquals(docCounts2, resp2.getResults().getNumFound());\n\n    // Delete a document in shard2 with update to shard1, with _route_ param\n    // Should delete.\n    UpdateRequest deleteRequest = new UpdateRequest();\n    deleteRequest.deleteById(\"4\", \"africa\");\n    deleteRequest.setCommitWithin(1);\n    shard1.request(deleteRequest);\n    shard1.commit();\n\n    query.set(\"shards\", \"shard2\");\n    resp2 = shard2.query(query);\n    --docCounts2;\n    assertEquals(docCounts2, resp2.getResults().getNumFound());\n\n    // Multiple deleteById commands in a single request\n    deleteRequest.clear();\n    deleteRequest.deleteById(\"2\", \"europe\");\n    deleteRequest.deleteById(\"3\", \"europe\");\n    deleteRequest.setCommitWithin(1);\n    query.set(\"shards\", \"shard1\");\n    shard1.request(deleteRequest);\n    shard1.commit();\n    Thread.sleep(1000);\n    resp1 = shard1.query(query);\n    --docCounts1;\n    --docCounts1;\n    assertEquals(docCounts1, resp1.getResults().getNumFound());\n\n    // Test commitWithin, update to shard2, document deleted in shard1\n    deleteRequest.clear();\n    deleteRequest.deleteById(\"1\", \"europe\");\n    deleteRequest.setCommitWithin(1);\n    shard2.request(deleteRequest);\n    query.set(\"shards\", \"shard1\");\n    resp1 = shard1.query(query);\n    --docCounts1;\n    assertEquals(docCounts1, resp1.getResults().getNumFound());\n  }\n\n","sourceOld":"  private void testDeleteByIdCompositeRouterWithRouterField() throws Exception {\n    SolrClient server = createNewSolrClient(\"\", getBaseUrl((HttpSolrClient) clients.get(0)));\n    CollectionAdminResponse response;\n    Map<String, NamedList<Integer>> coresStatus;\n\n    response = new CollectionAdminRequest.Create()\n            .setCollectionName(\"compositeid_collection_with_routerfield\")\n            .setRouterName(\"compositeId\")\n            .setRouterField(\"routefield_s\")\n            .setNumShards(2)\n            .setShards(\"shard1,shard2\")\n            .setReplicationFactor(2)\n            .setConfigName(\"conf1\")\n            .process(server);\n\n    assertEquals(0, response.getStatus());\n    assertTrue(response.isSuccess());\n    coresStatus = response.getCollectionCoresStatus();\n    assertEquals(4, coresStatus.size());\n    for (int i = 0; i < 4; i++) {\n      NamedList<Integer> status = coresStatus.get(\"compositeid_collection_with_routerfield_shard\" + (i / 2 + 1) + \"_replica\" + (i % 2 + 1));\n      assertEquals(0, (int) status.get(\"status\"));\n      assertTrue(status.get(\"QTime\") > 0);\n    }\n\n    waitForRecoveriesToFinish(\"compositeid_collection_with_routerfield\", true);\n\n    SolrClient shard1 = createNewSolrClient(\"compositeid_collection_with_routerfield_shard1_replica1\",\n        getBaseUrl((HttpSolrClient) clients.get(0)));\n    SolrClient shard2 = createNewSolrClient(\"compositeid_collection_with_routerfield_shard2_replica1\",\n        getBaseUrl((HttpSolrClient) clients.get(0)));\n\n    SolrInputDocument doc = new SolrInputDocument();\n    int docCounts1 = 0, docCounts2 = 0;\n\n    // Add three documents to shard1\n    doc.clear();\n    doc.addField(\"id\", \"1\");\n    doc.addField(\"title\", \"s1 one\");\n    doc.addField(\"routefield_s\", \"europe\");\n    shard1.add(doc);\n    shard1.commit();\n\n    doc.clear();\n    doc.addField(\"id\", \"2\");\n    doc.addField(\"title\", \"s1 two\");\n    doc.addField(\"routefield_s\", \"europe\");\n    shard1.add(doc);\n    shard1.commit();\n\n    doc.clear();\n    doc.addField(\"id\", \"3\");\n    doc.addField(\"title\", \"s1 three\");\n    doc.addField(\"routefield_s\", \"europe\");\n    shard1.add(doc);\n    shard1.commit();\n\n    docCounts1 = 3; // Three documents in shard1\n\n    // Add two documents to shard2\n    doc.clear();\n    doc.addField(\"id\", \"4\");\n    doc.addField(\"title\", \"s2 four\");\n    doc.addField(\"routefield_s\", \"africa\");\n    shard2.add(doc);\n    //shard2.commit();\n\n    doc.clear();\n    doc.addField(\"id\", \"5\");\n    doc.addField(\"title\", \"s2 five\");\n    doc.addField(\"routefield_s\", \"africa\");\n    shard2.add(doc);\n    shard2.commit();\n\n    docCounts2 = 2; // Two documents in shard2\n\n    // Verify the documents were added to correct shards\n    ModifiableSolrParams query = new ModifiableSolrParams();\n    query.set(\"q\", \"*:*\");\n    QueryResponse respAll = shard1.query(query);\n    assertEquals(docCounts1 + docCounts2, respAll.getResults().getNumFound());\n\n    query.set(\"shards\", \"shard1\");\n    QueryResponse resp1 = shard1.query(query);\n    assertEquals(docCounts1, resp1.getResults().getNumFound());\n\n    query.set(\"shards\", \"shard2\");\n    QueryResponse resp2 = shard2.query(query);\n    assertEquals(docCounts2, resp2.getResults().getNumFound());\n\n    // Delete a document in shard2 with update to shard1, with _route_ param\n    // Should delete.\n    UpdateRequest deleteRequest = new UpdateRequest();\n    deleteRequest.deleteById(\"4\", \"africa\");\n    deleteRequest.setCommitWithin(1);\n    shard1.request(deleteRequest);\n    shard1.commit();\n\n    query.set(\"shards\", \"shard2\");\n    resp2 = shard2.query(query);\n    --docCounts2;\n    assertEquals(docCounts2, resp2.getResults().getNumFound());\n\n    // Multiple deleteById commands in a single request\n    deleteRequest.clear();\n    deleteRequest.deleteById(\"2\", \"europe\");\n    deleteRequest.deleteById(\"3\", \"europe\");\n    deleteRequest.setCommitWithin(1);\n    query.set(\"shards\", \"shard1\");\n    shard1.request(deleteRequest);\n    shard1.commit();\n    Thread.sleep(1000);\n    resp1 = shard1.query(query);\n    --docCounts1;\n    --docCounts1;\n    assertEquals(docCounts1, resp1.getResults().getNumFound());\n\n    // Test commitWithin, update to shard2, document deleted in shard1\n    deleteRequest.clear();\n    deleteRequest.deleteById(\"1\", \"europe\");\n    deleteRequest.setCommitWithin(1);\n    shard2.request(deleteRequest);\n    query.set(\"shards\", \"shard1\");\n    resp1 = shard1.query(query);\n    --docCounts1;\n    assertEquals(docCounts1, resp1.getResults().getNumFound());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0a29b6e8b148762c68adf55b9d2c2aa5ae411a5b","date":1576537086,"type":4,"author":"Chris Hostetter","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/cloud/FullSolrCloudDistribCmdsTest#testDeleteByIdCompositeRouterWithRouterField().mjava","sourceNew":null,"sourceOld":"  private void testDeleteByIdCompositeRouterWithRouterField() throws Exception {\n    SolrClient server = createNewSolrClient(\"\", getBaseUrl((HttpSolrClient) clients.get(0)));\n    CollectionAdminResponse response;\n    Map<String, NamedList<Integer>> coresStatus;\n\n    response = CollectionAdminRequest.createCollection(\"compositeid_collection_with_routerfield\",\"conf1\",2,2)\n            .setRouterName(\"compositeId\")\n            .setRouterField(\"routefield_s\")\n            .setShards(\"shard1,shard2\")\n            .process(server);\n\n    assertEquals(0, response.getStatus());\n    assertTrue(response.isSuccess());\n    coresStatus = response.getCollectionCoresStatus();\n    assertEquals(4, coresStatus.size());\n    for (int i = 0; i < 4; i++) {\n      NamedList<Integer> status = coresStatus.get(\"compositeid_collection_with_routerfield_shard\" + (i / 2 + 1) + \"_replica\" + (i % 2 + 1));\n      assertEquals(0, (int) status.get(\"status\"));\n      assertTrue(status.get(\"QTime\") > 0);\n    }\n\n    waitForRecoveriesToFinish(\"compositeid_collection_with_routerfield\", true);\n\n    SolrClient shard1 = createNewSolrClient(\"compositeid_collection_with_routerfield_shard1_replica1\",\n        getBaseUrl((HttpSolrClient) clients.get(0)));\n    SolrClient shard2 = createNewSolrClient(\"compositeid_collection_with_routerfield_shard2_replica1\",\n        getBaseUrl((HttpSolrClient) clients.get(0)));\n\n    SolrInputDocument doc = new SolrInputDocument();\n    int docCounts1 = 0, docCounts2 = 0;\n\n    // Add three documents to shard1\n    doc.clear();\n    doc.addField(\"id\", \"1\");\n    doc.addField(\"title\", \"s1 one\");\n    doc.addField(\"routefield_s\", \"europe\");\n    shard1.add(doc);\n    shard1.commit();\n\n    doc.clear();\n    doc.addField(\"id\", \"2\");\n    doc.addField(\"title\", \"s1 two\");\n    doc.addField(\"routefield_s\", \"europe\");\n    shard1.add(doc);\n    shard1.commit();\n\n    doc.clear();\n    doc.addField(\"id\", \"3\");\n    doc.addField(\"title\", \"s1 three\");\n    doc.addField(\"routefield_s\", \"europe\");\n    shard1.add(doc);\n    shard1.commit();\n\n    docCounts1 = 3; // Three documents in shard1\n\n    // Add two documents to shard2\n    doc.clear();\n    doc.addField(\"id\", \"4\");\n    doc.addField(\"title\", \"s2 four\");\n    doc.addField(\"routefield_s\", \"africa\");\n    shard2.add(doc);\n    //shard2.commit();\n\n    doc.clear();\n    doc.addField(\"id\", \"5\");\n    doc.addField(\"title\", \"s2 five\");\n    doc.addField(\"routefield_s\", \"africa\");\n    shard2.add(doc);\n    shard2.commit();\n\n    docCounts2 = 2; // Two documents in shard2\n\n    // Verify the documents were added to correct shards\n    ModifiableSolrParams query = new ModifiableSolrParams();\n    query.set(\"q\", \"*:*\");\n    QueryResponse respAll = shard1.query(query);\n    assertEquals(docCounts1 + docCounts2, respAll.getResults().getNumFound());\n\n    query.set(\"shards\", \"shard1\");\n    QueryResponse resp1 = shard1.query(query);\n    assertEquals(docCounts1, resp1.getResults().getNumFound());\n\n    query.set(\"shards\", \"shard2\");\n    QueryResponse resp2 = shard2.query(query);\n    assertEquals(docCounts2, resp2.getResults().getNumFound());\n\n    // Delete a document in shard2 with update to shard1, with _route_ param\n    // Should delete.\n    UpdateRequest deleteRequest = new UpdateRequest();\n    deleteRequest.deleteById(\"4\", \"africa\");\n    deleteRequest.setCommitWithin(1);\n    shard1.request(deleteRequest);\n    shard1.commit();\n\n    query.set(\"shards\", \"shard2\");\n    resp2 = shard2.query(query);\n    --docCounts2;\n    assertEquals(docCounts2, resp2.getResults().getNumFound());\n\n    // Multiple deleteById commands in a single request\n    deleteRequest.clear();\n    deleteRequest.deleteById(\"2\", \"europe\");\n    deleteRequest.deleteById(\"3\", \"europe\");\n    deleteRequest.setCommitWithin(1);\n    query.set(\"shards\", \"shard1\");\n    shard1.request(deleteRequest);\n    shard1.commit();\n    Thread.sleep(1000);\n    resp1 = shard1.query(query);\n    --docCounts1;\n    --docCounts1;\n    assertEquals(docCounts1, resp1.getResults().getNumFound());\n\n    // Test commitWithin, update to shard2, document deleted in shard1\n    deleteRequest.clear();\n    deleteRequest.deleteById(\"1\", \"europe\");\n    deleteRequest.setCommitWithin(1);\n    shard2.request(deleteRequest);\n    query.set(\"shards\", \"shard1\");\n    resp1 = shard1.query(query);\n    --docCounts1;\n    assertEquals(docCounts1, resp1.getResults().getNumFound());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b945b8f5bba0303382bc69d60c0c287714f23328","date":1576586294,"type":4,"author":"Dawid Weiss","isMerge":true,"pathNew":"/dev/null","pathOld":"solr/core/src/test/org/apache/solr/cloud/FullSolrCloudDistribCmdsTest#testDeleteByIdCompositeRouterWithRouterField().mjava","sourceNew":null,"sourceOld":"  private void testDeleteByIdCompositeRouterWithRouterField() throws Exception {\n    SolrClient server = createNewSolrClient(\"\", getBaseUrl((HttpSolrClient) clients.get(0)));\n    CollectionAdminResponse response;\n    Map<String, NamedList<Integer>> coresStatus;\n\n    response = CollectionAdminRequest.createCollection(\"compositeid_collection_with_routerfield\",\"conf1\",2,2)\n            .setRouterName(\"compositeId\")\n            .setRouterField(\"routefield_s\")\n            .setShards(\"shard1,shard2\")\n            .process(server);\n\n    assertEquals(0, response.getStatus());\n    assertTrue(response.isSuccess());\n    coresStatus = response.getCollectionCoresStatus();\n    assertEquals(4, coresStatus.size());\n    for (int i = 0; i < 4; i++) {\n      NamedList<Integer> status = coresStatus.get(\"compositeid_collection_with_routerfield_shard\" + (i / 2 + 1) + \"_replica\" + (i % 2 + 1));\n      assertEquals(0, (int) status.get(\"status\"));\n      assertTrue(status.get(\"QTime\") > 0);\n    }\n\n    waitForRecoveriesToFinish(\"compositeid_collection_with_routerfield\", true);\n\n    SolrClient shard1 = createNewSolrClient(\"compositeid_collection_with_routerfield_shard1_replica1\",\n        getBaseUrl((HttpSolrClient) clients.get(0)));\n    SolrClient shard2 = createNewSolrClient(\"compositeid_collection_with_routerfield_shard2_replica1\",\n        getBaseUrl((HttpSolrClient) clients.get(0)));\n\n    SolrInputDocument doc = new SolrInputDocument();\n    int docCounts1 = 0, docCounts2 = 0;\n\n    // Add three documents to shard1\n    doc.clear();\n    doc.addField(\"id\", \"1\");\n    doc.addField(\"title\", \"s1 one\");\n    doc.addField(\"routefield_s\", \"europe\");\n    shard1.add(doc);\n    shard1.commit();\n\n    doc.clear();\n    doc.addField(\"id\", \"2\");\n    doc.addField(\"title\", \"s1 two\");\n    doc.addField(\"routefield_s\", \"europe\");\n    shard1.add(doc);\n    shard1.commit();\n\n    doc.clear();\n    doc.addField(\"id\", \"3\");\n    doc.addField(\"title\", \"s1 three\");\n    doc.addField(\"routefield_s\", \"europe\");\n    shard1.add(doc);\n    shard1.commit();\n\n    docCounts1 = 3; // Three documents in shard1\n\n    // Add two documents to shard2\n    doc.clear();\n    doc.addField(\"id\", \"4\");\n    doc.addField(\"title\", \"s2 four\");\n    doc.addField(\"routefield_s\", \"africa\");\n    shard2.add(doc);\n    //shard2.commit();\n\n    doc.clear();\n    doc.addField(\"id\", \"5\");\n    doc.addField(\"title\", \"s2 five\");\n    doc.addField(\"routefield_s\", \"africa\");\n    shard2.add(doc);\n    shard2.commit();\n\n    docCounts2 = 2; // Two documents in shard2\n\n    // Verify the documents were added to correct shards\n    ModifiableSolrParams query = new ModifiableSolrParams();\n    query.set(\"q\", \"*:*\");\n    QueryResponse respAll = shard1.query(query);\n    assertEquals(docCounts1 + docCounts2, respAll.getResults().getNumFound());\n\n    query.set(\"shards\", \"shard1\");\n    QueryResponse resp1 = shard1.query(query);\n    assertEquals(docCounts1, resp1.getResults().getNumFound());\n\n    query.set(\"shards\", \"shard2\");\n    QueryResponse resp2 = shard2.query(query);\n    assertEquals(docCounts2, resp2.getResults().getNumFound());\n\n    // Delete a document in shard2 with update to shard1, with _route_ param\n    // Should delete.\n    UpdateRequest deleteRequest = new UpdateRequest();\n    deleteRequest.deleteById(\"4\", \"africa\");\n    deleteRequest.setCommitWithin(1);\n    shard1.request(deleteRequest);\n    shard1.commit();\n\n    query.set(\"shards\", \"shard2\");\n    resp2 = shard2.query(query);\n    --docCounts2;\n    assertEquals(docCounts2, resp2.getResults().getNumFound());\n\n    // Multiple deleteById commands in a single request\n    deleteRequest.clear();\n    deleteRequest.deleteById(\"2\", \"europe\");\n    deleteRequest.deleteById(\"3\", \"europe\");\n    deleteRequest.setCommitWithin(1);\n    query.set(\"shards\", \"shard1\");\n    shard1.request(deleteRequest);\n    shard1.commit();\n    Thread.sleep(1000);\n    resp1 = shard1.query(query);\n    --docCounts1;\n    --docCounts1;\n    assertEquals(docCounts1, resp1.getResults().getNumFound());\n\n    // Test commitWithin, update to shard2, document deleted in shard1\n    deleteRequest.clear();\n    deleteRequest.deleteById(\"1\", \"europe\");\n    deleteRequest.setCommitWithin(1);\n    shard2.request(deleteRequest);\n    query.set(\"shards\", \"shard1\");\n    resp1 = shard1.query(query);\n    --docCounts1;\n    assertEquals(docCounts1, resp1.getResults().getNumFound());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e9017cf144952056066919f1ebc7897ff9bd71b1":["182acd29cf4cb1644a02b8517f3a5b867c0d7cce","42dc7f2d60851668d9efa2d12baa1d4ebe54b12f"],"9e592c966d0093ed8a86ed2f58e94967d159ab01":["747dd71fefcbc7142661c25334b74c518fef4d81"],"ac97ea104d893f16aab430d9904473bc1f233f3c":["182acd29cf4cb1644a02b8517f3a5b867c0d7cce"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3217321f3e1d7922898c6c633d17acfa840d6875":["182acd29cf4cb1644a02b8517f3a5b867c0d7cce","ac97ea104d893f16aab430d9904473bc1f233f3c"],"182acd29cf4cb1644a02b8517f3a5b867c0d7cce":["9e592c966d0093ed8a86ed2f58e94967d159ab01"],"747dd71fefcbc7142661c25334b74c518fef4d81":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"b945b8f5bba0303382bc69d60c0c287714f23328":["3217321f3e1d7922898c6c633d17acfa840d6875","0a29b6e8b148762c68adf55b9d2c2aa5ae411a5b"],"42dc7f2d60851668d9efa2d12baa1d4ebe54b12f":["182acd29cf4cb1644a02b8517f3a5b867c0d7cce","3217321f3e1d7922898c6c633d17acfa840d6875"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0a29b6e8b148762c68adf55b9d2c2aa5ae411a5b"],"0a29b6e8b148762c68adf55b9d2c2aa5ae411a5b":["3217321f3e1d7922898c6c633d17acfa840d6875"]},"commit2Childs":{"e9017cf144952056066919f1ebc7897ff9bd71b1":[],"9e592c966d0093ed8a86ed2f58e94967d159ab01":["182acd29cf4cb1644a02b8517f3a5b867c0d7cce"],"ac97ea104d893f16aab430d9904473bc1f233f3c":["3217321f3e1d7922898c6c633d17acfa840d6875"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["747dd71fefcbc7142661c25334b74c518fef4d81"],"3217321f3e1d7922898c6c633d17acfa840d6875":["b945b8f5bba0303382bc69d60c0c287714f23328","42dc7f2d60851668d9efa2d12baa1d4ebe54b12f","0a29b6e8b148762c68adf55b9d2c2aa5ae411a5b"],"182acd29cf4cb1644a02b8517f3a5b867c0d7cce":["e9017cf144952056066919f1ebc7897ff9bd71b1","ac97ea104d893f16aab430d9904473bc1f233f3c","3217321f3e1d7922898c6c633d17acfa840d6875","42dc7f2d60851668d9efa2d12baa1d4ebe54b12f"],"747dd71fefcbc7142661c25334b74c518fef4d81":["9e592c966d0093ed8a86ed2f58e94967d159ab01"],"42dc7f2d60851668d9efa2d12baa1d4ebe54b12f":["e9017cf144952056066919f1ebc7897ff9bd71b1"],"b945b8f5bba0303382bc69d60c0c287714f23328":[],"0a29b6e8b148762c68adf55b9d2c2aa5ae411a5b":["b945b8f5bba0303382bc69d60c0c287714f23328","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e9017cf144952056066919f1ebc7897ff9bd71b1","b945b8f5bba0303382bc69d60c0c287714f23328","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}