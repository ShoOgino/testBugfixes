{"path":"src/test/org/apache/solr/analysis/HTMLStripReaderTest#testHTML().mjava","commits":[{"id":"242cbb7397e76eee3a485b1ac0060c2b98559c89","date":1199634401,"type":0,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/test/org/apache/solr/analysis/HTMLStripReaderTest#testHTML().mjava","pathOld":"/dev/null","sourceNew":"  //Some sanity checks, but not a full-fledged check\n  public void testHTML() throws Exception {\n\n    HTMLStripReader reader = new HTMLStripReader(new FileReader(new File(\"htmlStripReaderTest.html\")));\n    StringBuilder builder = new StringBuilder();\n    int ch = -1;\n    while ((ch = reader.read()) != -1){\n      builder.append((char)ch);\n    }\n    String str = builder.toString();\n    assertTrue(\"Entity not properly escaped\", str.indexOf(\"&lt;\") == -1);//there is one > in the text\n    assertTrue(\"Forrest should have been stripped out\", str.indexOf(\"forrest\") == -1 && str.indexOf(\"Forrest\") == -1);\n    assertTrue(\"File should start with 'Welcome to Solr' after trimming\", str.trim().startsWith(\"Welcome to Solr\"));\n\n    assertTrue(\"File should start with 'Foundation.' after trimming\", str.trim().endsWith(\"Foundation.\"));\n    \n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bd69280df0902763e47cb14745388ee17a2fb602","date":1249686305,"type":5,"author":"Koji Sekiguchi","isMerge":false,"pathNew":"src/test/org/apache/solr/analysis/HTMLStripCharFilterTest#testHTML().mjava","pathOld":"src/test/org/apache/solr/analysis/HTMLStripReaderTest#testHTML().mjava","sourceNew":"  //Some sanity checks, but not a full-fledged check\n  public void testHTML() throws Exception {\n\n    HTMLStripCharFilter reader = new HTMLStripCharFilter(CharReader.get(new FileReader(new File(\"htmlStripReaderTest.html\"))));\n    StringBuilder builder = new StringBuilder();\n    int ch = -1;\n    while ((ch = reader.read()) != -1){\n      builder.append((char)ch);\n    }\n    String str = builder.toString();\n    assertTrue(\"Entity not properly escaped\", str.indexOf(\"&lt;\") == -1);//there is one > in the text\n    assertTrue(\"Forrest should have been stripped out\", str.indexOf(\"forrest\") == -1 && str.indexOf(\"Forrest\") == -1);\n    assertTrue(\"File should start with 'Welcome to Solr' after trimming\", str.trim().startsWith(\"Welcome to Solr\"));\n\n    assertTrue(\"File should start with 'Foundation.' after trimming\", str.trim().endsWith(\"Foundation.\"));\n    \n  }\n\n","sourceOld":"  //Some sanity checks, but not a full-fledged check\n  public void testHTML() throws Exception {\n\n    HTMLStripReader reader = new HTMLStripReader(new FileReader(new File(\"htmlStripReaderTest.html\")));\n    StringBuilder builder = new StringBuilder();\n    int ch = -1;\n    while ((ch = reader.read()) != -1){\n      builder.append((char)ch);\n    }\n    String str = builder.toString();\n    assertTrue(\"Entity not properly escaped\", str.indexOf(\"&lt;\") == -1);//there is one > in the text\n    assertTrue(\"Forrest should have been stripped out\", str.indexOf(\"forrest\") == -1 && str.indexOf(\"Forrest\") == -1);\n    assertTrue(\"File should start with 'Welcome to Solr' after trimming\", str.trim().startsWith(\"Welcome to Solr\"));\n\n    assertTrue(\"File should start with 'Foundation.' after trimming\", str.trim().endsWith(\"Foundation.\"));\n    \n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"242cbb7397e76eee3a485b1ac0060c2b98559c89":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"bd69280df0902763e47cb14745388ee17a2fb602":["242cbb7397e76eee3a485b1ac0060c2b98559c89"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"242cbb7397e76eee3a485b1ac0060c2b98559c89":["bd69280df0902763e47cb14745388ee17a2fb602"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["242cbb7397e76eee3a485b1ac0060c2b98559c89"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"bd69280df0902763e47cb14745388ee17a2fb602":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["bd69280df0902763e47cb14745388ee17a2fb602","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}