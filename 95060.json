{"path":"lucene/src/java/org/apache/lucene/index/values/IndexDocValuesArray.LongValues#LongValues(IndexInput,int).mjava","commits":[{"id":"5f709d06503a0d7b88fbc7fe89cdc51caadfdaa7","date":1309190785,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/values/IndexDocValuesArray.LongValues#LongValues(IndexInput,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/IndexDocValuesArray.LongValues#LongValues(IndexInput).mjava","sourceNew":"    LongValues(IndexInput input, int numDocs) throws IOException {\n      super(new AtomicLong(), RamUsageEstimator.NUM_BYTES_LONG,\n          ValueType.FIXED_INTS_64);\n      values = new long[numDocs];\n      adjustSize(numDocs);\n      for (int i = 0; i < values.length; i++) {\n        values[i] = input.readLong();\n      }\n      maxDocID = numDocs - 1;\n    }\n\n","sourceOld":"    LongValues(IndexInput input) throws IOException {\n      super(new AtomicLong(), RamUsageEstimator.NUM_BYTES_LONG,\n          ValueType.FIXED_INTS_64);\n      final int numDocs = input.readInt();\n      values = new long[numDocs];\n      adjustSize(numDocs);\n      for (int i = 0; i < values.length; i++) {\n        values[i] = input.readLong();\n      }\n      maxDocID = numDocs - 1;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2553b00f699380c64959ccb27991289aae87be2e","date":1309290151,"type":0,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/values/IndexDocValuesArray.LongValues#LongValues(IndexInput,int).mjava","pathOld":"/dev/null","sourceNew":"    LongValues(IndexInput input, int numDocs) throws IOException {\n      super(new AtomicLong(), RamUsageEstimator.NUM_BYTES_LONG,\n          ValueType.FIXED_INTS_64);\n      values = new long[numDocs];\n      adjustSize(numDocs);\n      for (int i = 0; i < values.length; i++) {\n        values[i] = input.readLong();\n      }\n      maxDocID = numDocs - 1;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d083e83f225b11e5fdd900e83d26ddb385b6955c","date":1310029438,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/values/IndexDocValuesArray.LongValues#LongValues(IndexInput,int).mjava","pathOld":"/dev/null","sourceNew":"    LongValues(IndexInput input, int numDocs) throws IOException {\n      super(new AtomicLong(), RamUsageEstimator.NUM_BYTES_LONG,\n          ValueType.FIXED_INTS_64);\n      values = new long[numDocs];\n      adjustSize(numDocs);\n      for (int i = 0; i < values.length; i++) {\n        values[i] = input.readLong();\n      }\n      maxDocID = numDocs - 1;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"17cc1e690c31c800f83860fbfd0423462962ef01","date":1314789725,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/values/IndexDocValuesArray.LongValues#LongValues(IndexInput,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/IndexDocValuesArray.LongValues#LongValues(IndexInput,int).mjava","sourceNew":"    LongValues(IndexInput input, int numDocs) throws IOException {\n      super(Counter.newCounter(), RamUsageEstimator.NUM_BYTES_LONG,\n          ValueType.FIXED_INTS_64);\n      values = new long[numDocs];\n      adjustSize(numDocs);\n      for (int i = 0; i < values.length; i++) {\n        values[i] = input.readLong();\n      }\n      maxDocID = numDocs - 1;\n    }\n\n","sourceOld":"    LongValues(IndexInput input, int numDocs) throws IOException {\n      super(new AtomicLong(), RamUsageEstimator.NUM_BYTES_LONG,\n          ValueType.FIXED_INTS_64);\n      values = new long[numDocs];\n      adjustSize(numDocs);\n      for (int i = 0; i < values.length; i++) {\n        values[i] = input.readLong();\n      }\n      maxDocID = numDocs - 1;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"85eb75e0c0203e44dcf686f35876cf6080f3a671","date":1317221550,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/values/IndexDocValuesArray.LongValues#LongValues(IndexInput,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/IndexDocValuesArray.LongValues#LongValues(IndexInput,int).mjava","sourceNew":"    private LongValues(IndexInput input, int numDocs) throws IOException {\n      super(RamUsageEstimator.NUM_BYTES_LONG, ValueType.FIXED_INTS_64);\n      values = new long[numDocs];\n      for (int i = 0; i < values.length; i++) {\n        values[i] = input.readLong();\n      }\n      maxDocID = numDocs - 1;\n    }\n\n","sourceOld":"    LongValues(IndexInput input, int numDocs) throws IOException {\n      super(Counter.newCounter(), RamUsageEstimator.NUM_BYTES_LONG,\n          ValueType.FIXED_INTS_64);\n      values = new long[numDocs];\n      adjustSize(numDocs);\n      for (int i = 0; i < values.length; i++) {\n        values[i] = input.readLong();\n      }\n      maxDocID = numDocs - 1;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e128967bca58657bc0039d4bfe631e63e81f1977","date":1317978310,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/values/IndexDocValuesArray.LongValues#LongValues(IndexInput,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/IndexDocValuesArray.LongValues#LongValues(IndexInput,int).mjava","sourceNew":"    private LongValues(IndexInput input, int numDocs) throws IOException {\n      super(RamUsageEstimator.NUM_BYTES_LONG, ValueType.FIXED_INTS_64);\n      values = new long[numDocs];\n      for (int i = 0; i < values.length; i++) {\n        values[i] = input.readLong();\n      }\n    }\n\n","sourceOld":"    private LongValues(IndexInput input, int numDocs) throws IOException {\n      super(RamUsageEstimator.NUM_BYTES_LONG, ValueType.FIXED_INTS_64);\n      values = new long[numDocs];\n      for (int i = 0; i < values.length; i++) {\n        values[i] = input.readLong();\n      }\n      maxDocID = numDocs - 1;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f9efc72acdea22f5285be0a808f8bba51bb8e367","date":1323217280,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/lucene40/values/IndexDocValuesArray.LongValues#LongValues(IndexInput,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/IndexDocValuesArray.LongValues#LongValues(IndexInput,int).mjava","sourceNew":"    private LongValues(IndexInput input, int numDocs) throws IOException {\n      super(RamUsageEstimator.NUM_BYTES_LONG, ValueType.FIXED_INTS_64);\n      values = new long[numDocs];\n      for (int i = 0; i < values.length; i++) {\n        values[i] = input.readLong();\n      }\n    }\n\n","sourceOld":"    private LongValues(IndexInput input, int numDocs) throws IOException {\n      super(RamUsageEstimator.NUM_BYTES_LONG, ValueType.FIXED_INTS_64);\n      values = new long[numDocs];\n      for (int i = 0; i < values.length; i++) {\n        values[i] = input.readLong();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d638301ad1cfcae567b681b893bc8781f0ee48a5","date":1323801546,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/index/codecs/lucene40/values/DocValuesArray.LongValues#LongValues(IndexInput,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/IndexDocValuesArray.LongValues#LongValues(IndexInput,int).mjava","sourceNew":"    private LongValues(IndexInput input, int numDocs) throws IOException {\n      super(RamUsageEstimator.NUM_BYTES_LONG, Type.FIXED_INTS_64);\n      values = new long[numDocs];\n      for (int i = 0; i < values.length; i++) {\n        values[i] = input.readLong();\n      }\n    }\n\n","sourceOld":"    private LongValues(IndexInput input, int numDocs) throws IOException {\n      super(RamUsageEstimator.NUM_BYTES_LONG, ValueType.FIXED_INTS_64);\n      values = new long[numDocs];\n      for (int i = 0; i < values.length; i++) {\n        values[i] = input.readLong();\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"17cc1e690c31c800f83860fbfd0423462962ef01":["5f709d06503a0d7b88fbc7fe89cdc51caadfdaa7"],"5f709d06503a0d7b88fbc7fe89cdc51caadfdaa7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"85eb75e0c0203e44dcf686f35876cf6080f3a671":["17cc1e690c31c800f83860fbfd0423462962ef01"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f9efc72acdea22f5285be0a808f8bba51bb8e367":["e128967bca58657bc0039d4bfe631e63e81f1977"],"2553b00f699380c64959ccb27991289aae87be2e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5f709d06503a0d7b88fbc7fe89cdc51caadfdaa7"],"e128967bca58657bc0039d4bfe631e63e81f1977":["85eb75e0c0203e44dcf686f35876cf6080f3a671"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","5f709d06503a0d7b88fbc7fe89cdc51caadfdaa7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["d638301ad1cfcae567b681b893bc8781f0ee48a5"],"d638301ad1cfcae567b681b893bc8781f0ee48a5":["e128967bca58657bc0039d4bfe631e63e81f1977","f9efc72acdea22f5285be0a808f8bba51bb8e367"]},"commit2Childs":{"17cc1e690c31c800f83860fbfd0423462962ef01":["85eb75e0c0203e44dcf686f35876cf6080f3a671"],"5f709d06503a0d7b88fbc7fe89cdc51caadfdaa7":["17cc1e690c31c800f83860fbfd0423462962ef01","2553b00f699380c64959ccb27991289aae87be2e","d083e83f225b11e5fdd900e83d26ddb385b6955c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["5f709d06503a0d7b88fbc7fe89cdc51caadfdaa7","2553b00f699380c64959ccb27991289aae87be2e","d083e83f225b11e5fdd900e83d26ddb385b6955c"],"85eb75e0c0203e44dcf686f35876cf6080f3a671":["e128967bca58657bc0039d4bfe631e63e81f1977"],"f9efc72acdea22f5285be0a808f8bba51bb8e367":["d638301ad1cfcae567b681b893bc8781f0ee48a5"],"2553b00f699380c64959ccb27991289aae87be2e":[],"e128967bca58657bc0039d4bfe631e63e81f1977":["f9efc72acdea22f5285be0a808f8bba51bb8e367","d638301ad1cfcae567b681b893bc8781f0ee48a5"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"d638301ad1cfcae567b681b893bc8781f0ee48a5":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["2553b00f699380c64959ccb27991289aae87be2e","d083e83f225b11e5fdd900e83d26ddb385b6955c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}