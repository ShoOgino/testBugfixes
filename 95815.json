{"path":"src/java/org/apache/lucene/index/SegmentMerger#closeReaders().mjava","commits":[{"id":"42a7d0b384f0022c5a29e562b809ebf73991d7e6","date":1082489615,"type":0,"author":"Christoph Goller","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentMerger#closeReaders().mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * close all IndexReaders that have been added.\n   * Should not be called before merge().\n   * @throws IOException\n   */\n  final void closeReaders() throws IOException {\n    for (int i = 0; i < readers.size(); i++) {  // close readers\n      IndexReader reader = (IndexReader) readers.elementAt(i);\n      reader.close();\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7b6cdc70e097da94da79a655ed8f94477ff69f5","date":1220815360,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentMerger#closeReaders().mjava","pathOld":"src/java/org/apache/lucene/index/SegmentMerger#closeReaders().mjava","sourceNew":"  /**\n   * close all IndexReaders that have been added.\n   * Should not be called before merge().\n   * @throws IOException\n   */\n  final void closeReaders() throws IOException {\n    for (int i = 0; i < readers.size(); i++) {  // close readers\n      IndexReader reader = (IndexReader) readers.get(i);\n      reader.close();\n    }\n  }\n\n","sourceOld":"  /**\n   * close all IndexReaders that have been added.\n   * Should not be called before merge().\n   * @throws IOException\n   */\n  final void closeReaders() throws IOException {\n    for (int i = 0; i < readers.size(); i++) {  // close readers\n      IndexReader reader = (IndexReader) readers.elementAt(i);\n      reader.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d736930237c54e1516a9e3bae803c92ff19ec4e5","date":1245789156,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentMerger#closeReaders().mjava","pathOld":"src/java/org/apache/lucene/index/SegmentMerger#closeReaders().mjava","sourceNew":"  /**\n   * close all IndexReaders that have been added.\n   * Should not be called before merge().\n   * @throws IOException\n   */\n  final void closeReaders() throws IOException {\n    for (Iterator iter = readers.iterator(); iter.hasNext();) {\n      ((IndexReader) iter.next()).close();\n    }\n  }\n\n","sourceOld":"  /**\n   * close all IndexReaders that have been added.\n   * Should not be called before merge().\n   * @throws IOException\n   */\n  final void closeReaders() throws IOException {\n    for (int i = 0; i < readers.size(); i++) {  // close readers\n      IndexReader reader = (IndexReader) readers.get(i);\n      reader.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fa27b750ee9a51ec4bed93ef328aef9ca1e2153d","date":1255859449,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"src/java/org/apache/lucene/index/SegmentMerger#closeReaders().mjava","pathOld":"src/java/org/apache/lucene/index/SegmentMerger#closeReaders().mjava","sourceNew":"  /**\n   * close all IndexReaders that have been added.\n   * Should not be called before merge().\n   * @throws IOException\n   */\n  final void closeReaders() throws IOException {\n    for (final IndexReader reader : readers) {\n      reader.close();\n    }\n  }\n\n","sourceOld":"  /**\n   * close all IndexReaders that have been added.\n   * Should not be called before merge().\n   * @throws IOException\n   */\n  final void closeReaders() throws IOException {\n    for (Iterator iter = readers.iterator(); iter.hasNext();) {\n      ((IndexReader) iter.next()).close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/SegmentMerger#closeReaders().mjava","pathOld":"src/java/org/apache/lucene/index/SegmentMerger#closeReaders().mjava","sourceNew":"  /**\n   * close all IndexReaders that have been added.\n   * Should not be called before merge().\n   * @throws IOException\n   */\n  final void closeReaders() throws IOException {\n    for (final IndexReader reader : readers) {\n      reader.close();\n    }\n  }\n\n","sourceOld":"  /**\n   * close all IndexReaders that have been added.\n   * Should not be called before merge().\n   * @throws IOException\n   */\n  final void closeReaders() throws IOException {\n    for (final IndexReader reader : readers) {\n      reader.close();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"fa27b750ee9a51ec4bed93ef328aef9ca1e2153d":["d736930237c54e1516a9e3bae803c92ff19ec4e5"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"d736930237c54e1516a9e3bae803c92ff19ec4e5":["c7b6cdc70e097da94da79a655ed8f94477ff69f5"],"42a7d0b384f0022c5a29e562b809ebf73991d7e6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c7b6cdc70e097da94da79a655ed8f94477ff69f5":["42a7d0b384f0022c5a29e562b809ebf73991d7e6"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["fa27b750ee9a51ec4bed93ef328aef9ca1e2153d"]},"commit2Childs":{"fa27b750ee9a51ec4bed93ef328aef9ca1e2153d":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["42a7d0b384f0022c5a29e562b809ebf73991d7e6"],"d736930237c54e1516a9e3bae803c92ff19ec4e5":["fa27b750ee9a51ec4bed93ef328aef9ca1e2153d"],"42a7d0b384f0022c5a29e562b809ebf73991d7e6":["c7b6cdc70e097da94da79a655ed8f94477ff69f5"],"c7b6cdc70e097da94da79a655ed8f94477ff69f5":["d736930237c54e1516a9e3bae803c92ff19ec4e5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}