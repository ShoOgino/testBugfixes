{"path":"solr/core/src/test/org/apache/solr/schema/TestUseDocValuesAsStored#initManagedSchemaCore().mjava","commits":[{"id":"bdac0dff04219451c7511d62225080a93a0181ea","date":1451212020,"type":0,"author":"Shalin Shekhar Mangar","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/schema/TestUseDocValuesAsStored#initManagedSchemaCore().mjava","pathOld":"/dev/null","sourceNew":"  @Before\n  private void initManagedSchemaCore() throws Exception {\n    tmpSolrHome = createTempDir().toFile();\n    tmpConfDir = new File(tmpSolrHome, confDir);\n    File testHomeConfDir = new File(TEST_HOME(), confDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"solrconfig-managed-schema.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"solrconfig-basic.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"solrconfig.snippet.randomindexconfig.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema-one-field-no-dynamic-field.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema-one-field-no-dynamic-field-unique-key.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"enumsConfig.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema-non-stored-docvalues.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema-minimal.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema_codec.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema-bm25.xml\"), tmpConfDir);\n    \n    // initCore will trigger an upgrade to managed schema, since the solrconfig has\n    // <schemaFactory class=\"ManagedIndexSchemaFactory\" ... />\n    System.setProperty(\"enable.update.log\", \"false\");\n    System.setProperty(\"managed.schema.mutable\", \"true\");\n    initCore(\"solrconfig-managed-schema.xml\", \"schema-non-stored-docvalues.xml\", tmpSolrHome.getPath());\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a83d6857d62b422f79747a834cfbfdc1610fd515","date":1458168983,"type":3,"author":"Steve Rowe","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/schema/TestUseDocValuesAsStored#initManagedSchemaCore().mjava","pathOld":"solr/core/src/test/org/apache/solr/schema/TestUseDocValuesAsStored#initManagedSchemaCore().mjava","sourceNew":"  @Before\n  private void initManagedSchemaCore() throws Exception {\n    tmpSolrHome = createTempDir().toFile();\n    tmpConfDir = new File(tmpSolrHome, confDir);\n    File testHomeConfDir = new File(TEST_HOME(), confDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"solrconfig-managed-schema.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"solrconfig.snippet.randomindexconfig.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"enumsConfig.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema-non-stored-docvalues.xml\"), tmpConfDir);\n\n    // initCore will trigger an upgrade to managed schema, since the solrconfig has\n    // <schemaFactory class=\"ManagedIndexSchemaFactory\" ... />\n    System.setProperty(\"enable.update.log\", \"false\");\n    System.setProperty(\"managed.schema.mutable\", \"true\");\n    initCore(\"solrconfig-managed-schema.xml\", \"schema-non-stored-docvalues.xml\", tmpSolrHome.getPath());\n  }\n\n","sourceOld":"  @Before\n  private void initManagedSchemaCore() throws Exception {\n    tmpSolrHome = createTempDir().toFile();\n    tmpConfDir = new File(tmpSolrHome, confDir);\n    File testHomeConfDir = new File(TEST_HOME(), confDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"solrconfig-managed-schema.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"solrconfig-basic.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"solrconfig.snippet.randomindexconfig.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema-one-field-no-dynamic-field.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema-one-field-no-dynamic-field-unique-key.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"enumsConfig.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema-non-stored-docvalues.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema-minimal.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema_codec.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema-bm25.xml\"), tmpConfDir);\n    \n    // initCore will trigger an upgrade to managed schema, since the solrconfig has\n    // <schemaFactory class=\"ManagedIndexSchemaFactory\" ... />\n    System.setProperty(\"enable.update.log\", \"false\");\n    System.setProperty(\"managed.schema.mutable\", \"true\");\n    initCore(\"solrconfig-managed-schema.xml\", \"schema-non-stored-docvalues.xml\", tmpSolrHome.getPath());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9799ebcab48102552d92f7807965a91fb6e116f7","date":1564676118,"type":3,"author":"Chris Hostetter","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/schema/TestUseDocValuesAsStored#initManagedSchemaCore().mjava","pathOld":"solr/core/src/test/org/apache/solr/schema/TestUseDocValuesAsStored#initManagedSchemaCore().mjava","sourceNew":"  @Before\n  private void initManagedSchemaCore() throws Exception {\n    tmpSolrHome = createTempDir().toFile();\n    tmpConfDir = new File(tmpSolrHome, confDir);\n    File testHomeConfDir = new File(TEST_HOME(), confDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"solrconfig-managed-schema.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"solrconfig.snippet.randomindexconfig.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"enumsConfig.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema-non-stored-docvalues.xml\"), tmpConfDir);\n\n    // initCore will trigger an upgrade to managed schema, since the solrconfig has\n    // <schemaFactory class=\"ManagedIndexSchemaFactory\" ... />\n    System.setProperty(\"enable.update.log\", \"false\");\n    System.setProperty(\"managed.schema.mutable\", \"true\");\n    initCore(\"solrconfig-managed-schema.xml\", \"schema-non-stored-docvalues.xml\", tmpSolrHome.getPath());\n\n    assertQ(\"sanity check\", req(\"q\", \"*:*\"), \"//*[@numFound='0']\");\n  }\n\n","sourceOld":"  @Before\n  private void initManagedSchemaCore() throws Exception {\n    tmpSolrHome = createTempDir().toFile();\n    tmpConfDir = new File(tmpSolrHome, confDir);\n    File testHomeConfDir = new File(TEST_HOME(), confDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"solrconfig-managed-schema.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"solrconfig.snippet.randomindexconfig.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"enumsConfig.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema-non-stored-docvalues.xml\"), tmpConfDir);\n\n    // initCore will trigger an upgrade to managed schema, since the solrconfig has\n    // <schemaFactory class=\"ManagedIndexSchemaFactory\" ... />\n    System.setProperty(\"enable.update.log\", \"false\");\n    System.setProperty(\"managed.schema.mutable\", \"true\");\n    initCore(\"solrconfig-managed-schema.xml\", \"schema-non-stored-docvalues.xml\", tmpSolrHome.getPath());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f8061ddd97f3352007d927dae445884a6f3d857b","date":1564988276,"type":3,"author":"Atri Sharma","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/schema/TestUseDocValuesAsStored#initManagedSchemaCore().mjava","pathOld":"solr/core/src/test/org/apache/solr/schema/TestUseDocValuesAsStored#initManagedSchemaCore().mjava","sourceNew":"  @Before\n  private void initManagedSchemaCore() throws Exception {\n    tmpSolrHome = createTempDir().toFile();\n    tmpConfDir = new File(tmpSolrHome, confDir);\n    File testHomeConfDir = new File(TEST_HOME(), confDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"solrconfig-managed-schema.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"solrconfig.snippet.randomindexconfig.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"enumsConfig.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema-non-stored-docvalues.xml\"), tmpConfDir);\n\n    // initCore will trigger an upgrade to managed schema, since the solrconfig has\n    // <schemaFactory class=\"ManagedIndexSchemaFactory\" ... />\n    System.setProperty(\"enable.update.log\", \"false\");\n    System.setProperty(\"managed.schema.mutable\", \"true\");\n    initCore(\"solrconfig-managed-schema.xml\", \"schema-non-stored-docvalues.xml\", tmpSolrHome.getPath());\n\n    assertQ(\"sanity check\", req(\"q\", \"*:*\"), \"//*[@numFound='0']\");\n  }\n\n","sourceOld":"  @Before\n  private void initManagedSchemaCore() throws Exception {\n    tmpSolrHome = createTempDir().toFile();\n    tmpConfDir = new File(tmpSolrHome, confDir);\n    File testHomeConfDir = new File(TEST_HOME(), confDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"solrconfig-managed-schema.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"solrconfig.snippet.randomindexconfig.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"enumsConfig.xml\"), tmpConfDir);\n    FileUtils.copyFileToDirectory(new File(testHomeConfDir, \"schema-non-stored-docvalues.xml\"), tmpConfDir);\n\n    // initCore will trigger an upgrade to managed schema, since the solrconfig has\n    // <schemaFactory class=\"ManagedIndexSchemaFactory\" ... />\n    System.setProperty(\"enable.update.log\", \"false\");\n    System.setProperty(\"managed.schema.mutable\", \"true\");\n    initCore(\"solrconfig-managed-schema.xml\", \"schema-non-stored-docvalues.xml\", tmpSolrHome.getPath());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a83d6857d62b422f79747a834cfbfdc1610fd515":["bdac0dff04219451c7511d62225080a93a0181ea"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"9799ebcab48102552d92f7807965a91fb6e116f7":["a83d6857d62b422f79747a834cfbfdc1610fd515"],"bdac0dff04219451c7511d62225080a93a0181ea":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"f8061ddd97f3352007d927dae445884a6f3d857b":["a83d6857d62b422f79747a834cfbfdc1610fd515","9799ebcab48102552d92f7807965a91fb6e116f7"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9799ebcab48102552d92f7807965a91fb6e116f7"]},"commit2Childs":{"a83d6857d62b422f79747a834cfbfdc1610fd515":["9799ebcab48102552d92f7807965a91fb6e116f7","f8061ddd97f3352007d927dae445884a6f3d857b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["bdac0dff04219451c7511d62225080a93a0181ea"],"bdac0dff04219451c7511d62225080a93a0181ea":["a83d6857d62b422f79747a834cfbfdc1610fd515"],"9799ebcab48102552d92f7807965a91fb6e116f7":["f8061ddd97f3352007d927dae445884a6f3d857b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f8061ddd97f3352007d927dae445884a6f3d857b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["f8061ddd97f3352007d927dae445884a6f3d857b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}