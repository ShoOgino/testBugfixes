{"path":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#handlePersistAction(SolrQueryRequest,SolrQueryResponse).mjava","commits":[{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#handlePersistAction(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/src/java/org/apache/solr/handler/admin/CoreAdminHandler#handlePersistAction(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  /**\n   * Handler \"PERSIST\" action\n   *\n   * @param req\n   * @param rsp\n   *\n   * @return true if a modification has resulted that requires persistance \n   *         of the CoreContainer configuration.\n   *\n   * @throws SolrException\n   */\n  protected boolean handlePersistAction(SolrQueryRequest req, SolrQueryResponse rsp)\n          throws SolrException {\n    SolrParams params = req.getParams();\n    boolean doPersist = false;\n    String fileName = params.get(CoreAdminParams.FILE);\n    if (fileName != null) {\n      File file = new File(coreContainer.getConfigFile().getParentFile(), fileName);\n      coreContainer.persistFile(file);\n      rsp.add(\"saved\", file.getAbsolutePath());\n      doPersist = false;\n    } else if (!coreContainer.isPersistent()) {\n      throw new SolrException(SolrException.ErrorCode.FORBIDDEN, \"Persistence is not enabled\");\n    } else\n      doPersist = true;\n\n    return doPersist;\n  }\n\n","sourceOld":"  /**\n   * Handler \"PERSIST\" action\n   *\n   * @param req\n   * @param rsp\n   *\n   * @return true if a modification has resulted that requires persistance \n   *         of the CoreContainer configuration.\n   *\n   * @throws SolrException\n   */\n  protected boolean handlePersistAction(SolrQueryRequest req, SolrQueryResponse rsp)\n          throws SolrException {\n    SolrParams params = req.getParams();\n    boolean doPersist = false;\n    String fileName = params.get(CoreAdminParams.FILE);\n    if (fileName != null) {\n      File file = new File(coreContainer.getConfigFile().getParentFile(), fileName);\n      coreContainer.persistFile(file);\n      rsp.add(\"saved\", file.getAbsolutePath());\n      doPersist = false;\n    } else if (!coreContainer.isPersistent()) {\n      throw new SolrException(SolrException.ErrorCode.FORBIDDEN, \"Persistence is not enabled\");\n    } else\n      doPersist = true;\n\n    return doPersist;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#handlePersistAction(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/src/java/org/apache/solr/handler/admin/CoreAdminHandler#handlePersistAction(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  /**\n   * Handler \"PERSIST\" action\n   *\n   * @param req\n   * @param rsp\n   *\n   * @return true if a modification has resulted that requires persistance \n   *         of the CoreContainer configuration.\n   *\n   * @throws SolrException\n   */\n  protected boolean handlePersistAction(SolrQueryRequest req, SolrQueryResponse rsp)\n          throws SolrException {\n    SolrParams params = req.getParams();\n    boolean doPersist = false;\n    String fileName = params.get(CoreAdminParams.FILE);\n    if (fileName != null) {\n      File file = new File(coreContainer.getConfigFile().getParentFile(), fileName);\n      coreContainer.persistFile(file);\n      rsp.add(\"saved\", file.getAbsolutePath());\n      doPersist = false;\n    } else if (!coreContainer.isPersistent()) {\n      throw new SolrException(SolrException.ErrorCode.FORBIDDEN, \"Persistence is not enabled\");\n    } else\n      doPersist = true;\n\n    return doPersist;\n  }\n\n","sourceOld":"  /**\n   * Handler \"PERSIST\" action\n   *\n   * @param req\n   * @param rsp\n   *\n   * @return true if a modification has resulted that requires persistance \n   *         of the CoreContainer configuration.\n   *\n   * @throws SolrException\n   */\n  protected boolean handlePersistAction(SolrQueryRequest req, SolrQueryResponse rsp)\n          throws SolrException {\n    SolrParams params = req.getParams();\n    boolean doPersist = false;\n    String fileName = params.get(CoreAdminParams.FILE);\n    if (fileName != null) {\n      File file = new File(coreContainer.getConfigFile().getParentFile(), fileName);\n      coreContainer.persistFile(file);\n      rsp.add(\"saved\", file.getAbsolutePath());\n      doPersist = false;\n    } else if (!coreContainer.isPersistent()) {\n      throw new SolrException(SolrException.ErrorCode.FORBIDDEN, \"Persistence is not enabled\");\n    } else\n      doPersist = true;\n\n    return doPersist;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":1,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#handlePersistAction(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/src/java/org/apache/solr/handler/admin/CoreAdminHandler#handlePersistAction(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  /**\n   * Handler \"PERSIST\" action\n   *\n   * @param req\n   * @param rsp\n   *\n   * @return true if a modification has resulted that requires persistance \n   *         of the CoreContainer configuration.\n   *\n   * @throws SolrException\n   */\n  protected boolean handlePersistAction(SolrQueryRequest req, SolrQueryResponse rsp)\n          throws SolrException {\n    SolrParams params = req.getParams();\n    boolean doPersist = false;\n    String fileName = params.get(CoreAdminParams.FILE);\n    if (fileName != null) {\n      File file = new File(coreContainer.getConfigFile().getParentFile(), fileName);\n      coreContainer.persistFile(file);\n      rsp.add(\"saved\", file.getAbsolutePath());\n      doPersist = false;\n    } else if (!coreContainer.isPersistent()) {\n      throw new SolrException(SolrException.ErrorCode.FORBIDDEN, \"Persistence is not enabled\");\n    } else\n      doPersist = true;\n\n    return doPersist;\n  }\n\n","sourceOld":"  /**\n   * Handler \"PERSIST\" action\n   *\n   * @param req\n   * @param rsp\n   *\n   * @return true if a modification has resulted that requires persistance \n   *         of the CoreContainer configuration.\n   *\n   * @throws SolrException\n   */\n  protected boolean handlePersistAction(SolrQueryRequest req, SolrQueryResponse rsp)\n          throws SolrException {\n    SolrParams params = req.getParams();\n    boolean doPersist = false;\n    String fileName = params.get(CoreAdminParams.FILE);\n    if (fileName != null) {\n      File file = new File(coreContainer.getConfigFile().getParentFile(), fileName);\n      coreContainer.persistFile(file);\n      rsp.add(\"saved\", file.getAbsolutePath());\n      doPersist = false;\n    } else if (!coreContainer.isPersistent()) {\n      throw new SolrException(SolrException.ErrorCode.FORBIDDEN, \"Persistence is not enabled\");\n    } else\n      doPersist = true;\n\n    return doPersist;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069","date":1348430063,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#handlePersistAction(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#handlePersistAction(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  /**\n   * Handler \"PERSIST\" action\n   *\n   * @return true if a modification has resulted that requires persistence \n   *         of the CoreContainer configuration.\n   */\n  protected boolean handlePersistAction(SolrQueryRequest req, SolrQueryResponse rsp)\n          throws SolrException {\n    SolrParams params = req.getParams();\n    boolean doPersist = false;\n    String fileName = params.get(CoreAdminParams.FILE);\n    if (fileName != null) {\n      File file = new File(coreContainer.getConfigFile().getParentFile(), fileName);\n      coreContainer.persistFile(file);\n      rsp.add(\"saved\", file.getAbsolutePath());\n      doPersist = false;\n    } else if (!coreContainer.isPersistent()) {\n      throw new SolrException(SolrException.ErrorCode.FORBIDDEN, \"Persistence is not enabled\");\n    } else\n      doPersist = true;\n\n    return doPersist;\n  }\n\n","sourceOld":"  /**\n   * Handler \"PERSIST\" action\n   *\n   * @param req\n   * @param rsp\n   *\n   * @return true if a modification has resulted that requires persistance \n   *         of the CoreContainer configuration.\n   *\n   * @throws SolrException\n   */\n  protected boolean handlePersistAction(SolrQueryRequest req, SolrQueryResponse rsp)\n          throws SolrException {\n    SolrParams params = req.getParams();\n    boolean doPersist = false;\n    String fileName = params.get(CoreAdminParams.FILE);\n    if (fileName != null) {\n      File file = new File(coreContainer.getConfigFile().getParentFile(), fileName);\n      coreContainer.persistFile(file);\n      rsp.add(\"saved\", file.getAbsolutePath());\n      doPersist = false;\n    } else if (!coreContainer.isPersistent()) {\n      throw new SolrException(SolrException.ErrorCode.FORBIDDEN, \"Persistence is not enabled\");\n    } else\n      doPersist = true;\n\n    return doPersist;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7116474e2e390259937401cf928323e0cbc75e60","date":1372780249,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#handlePersistAction(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#handlePersistAction(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  /**\n   * Handler \"PERSIST\" action\n   *\n   * @return true if a modification has resulted that requires persistence \n   *         of the CoreContainer configuration.\n   */\n  protected boolean handlePersistAction(SolrQueryRequest req, SolrQueryResponse rsp)\n          throws SolrException {\n    SolrParams params = req.getParams();\n    boolean doPersist = false;\n    String fileName = params.get(CoreAdminParams.FILE);\n    if (fileName != null) {\n      File file = new File(fileName);\n      if (!file.isAbsolute())\n        file = new File(coreContainer.getConfigFile().getParentFile(), fileName);\n      coreContainer.persistFile(file);\n      rsp.add(\"saved\", file.getAbsolutePath());\n      doPersist = false;\n    } else if (!coreContainer.isPersistent()) {\n      throw new SolrException(SolrException.ErrorCode.FORBIDDEN, \"Persistence is not enabled\");\n    } else\n      doPersist = true;\n\n    return doPersist;\n  }\n\n","sourceOld":"  /**\n   * Handler \"PERSIST\" action\n   *\n   * @return true if a modification has resulted that requires persistence \n   *         of the CoreContainer configuration.\n   */\n  protected boolean handlePersistAction(SolrQueryRequest req, SolrQueryResponse rsp)\n          throws SolrException {\n    SolrParams params = req.getParams();\n    boolean doPersist = false;\n    String fileName = params.get(CoreAdminParams.FILE);\n    if (fileName != null) {\n      File file = new File(coreContainer.getConfigFile().getParentFile(), fileName);\n      coreContainer.persistFile(file);\n      rsp.add(\"saved\", file.getAbsolutePath());\n      doPersist = false;\n    } else if (!coreContainer.isPersistent()) {\n      throw new SolrException(SolrException.ErrorCode.FORBIDDEN, \"Persistence is not enabled\");\n    } else\n      doPersist = true;\n\n    return doPersist;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6e764e9a107f93be9fa3c922bc6a197b3eec387e","date":1373560501,"type":3,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#handlePersistAction(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#handlePersistAction(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  /**\n   * Handler \"PERSIST\" action\n   */\n  protected void handlePersistAction(SolrQueryRequest req, SolrQueryResponse rsp)\n          throws SolrException {\n    rsp.add(\"message\", \"The PERSIST action has been deprecated\");\n  }\n\n","sourceOld":"  /**\n   * Handler \"PERSIST\" action\n   *\n   * @return true if a modification has resulted that requires persistence \n   *         of the CoreContainer configuration.\n   */\n  protected boolean handlePersistAction(SolrQueryRequest req, SolrQueryResponse rsp)\n          throws SolrException {\n    SolrParams params = req.getParams();\n    boolean doPersist = false;\n    String fileName = params.get(CoreAdminParams.FILE);\n    if (fileName != null) {\n      File file = new File(fileName);\n      if (!file.isAbsolute())\n        file = new File(coreContainer.getConfigFile().getParentFile(), fileName);\n      coreContainer.persistFile(file);\n      rsp.add(\"saved\", file.getAbsolutePath());\n      doPersist = false;\n    } else if (!coreContainer.isPersistent()) {\n      throw new SolrException(SolrException.ErrorCode.FORBIDDEN, \"Persistence is not enabled\");\n    } else\n      doPersist = true;\n\n    return doPersist;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"37a0f60745e53927c4c876cfe5b5a58170f0646c","date":1373994005,"type":3,"author":"Han Jiang","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#handlePersistAction(SolrQueryRequest,SolrQueryResponse).mjava","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#handlePersistAction(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":"  /**\n   * Handler \"PERSIST\" action\n   */\n  protected void handlePersistAction(SolrQueryRequest req, SolrQueryResponse rsp)\n          throws SolrException {\n    rsp.add(\"message\", \"The PERSIST action has been deprecated\");\n  }\n\n","sourceOld":"  /**\n   * Handler \"PERSIST\" action\n   *\n   * @return true if a modification has resulted that requires persistence \n   *         of the CoreContainer configuration.\n   */\n  protected boolean handlePersistAction(SolrQueryRequest req, SolrQueryResponse rsp)\n          throws SolrException {\n    SolrParams params = req.getParams();\n    boolean doPersist = false;\n    String fileName = params.get(CoreAdminParams.FILE);\n    if (fileName != null) {\n      File file = new File(coreContainer.getConfigFile().getParentFile(), fileName);\n      coreContainer.persistFile(file);\n      rsp.add(\"saved\", file.getAbsolutePath());\n      doPersist = false;\n    } else if (!coreContainer.isPersistent()) {\n      throw new SolrException(SolrException.ErrorCode.FORBIDDEN, \"Persistence is not enabled\");\n    } else\n      doPersist = true;\n\n    return doPersist;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fa0876236f0bd8be403747120d248bdd42b75a96","date":1451844229,"type":4,"author":"Noble Paul","isMerge":false,"pathNew":"/dev/null","pathOld":"solr/core/src/java/org/apache/solr/handler/admin/CoreAdminHandler#handlePersistAction(SolrQueryRequest,SolrQueryResponse).mjava","sourceNew":null,"sourceOld":"  /**\n   * Handler \"PERSIST\" action\n   */\n  protected void handlePersistAction(SolrQueryRequest req, SolrQueryResponse rsp)\n          throws SolrException {\n    rsp.add(\"message\", \"The PERSIST action has been deprecated\");\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069":["c26f00b574427b55127e869b935845554afde1fa"],"7116474e2e390259937401cf928323e0cbc75e60":["c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":["c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069","6e764e9a107f93be9fa3c922bc6a197b3eec387e"],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"c26f00b574427b55127e869b935845554afde1fa":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"fa0876236f0bd8be403747120d248bdd42b75a96":["6e764e9a107f93be9fa3c922bc6a197b3eec387e"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"6e764e9a107f93be9fa3c922bc6a197b3eec387e":["7116474e2e390259937401cf928323e0cbc75e60"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["fa0876236f0bd8be403747120d248bdd42b75a96"]},"commit2Childs":{"c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069":["7116474e2e390259937401cf928323e0cbc75e60","37a0f60745e53927c4c876cfe5b5a58170f0646c"],"7116474e2e390259937401cf928323e0cbc75e60":["6e764e9a107f93be9fa3c922bc6a197b3eec387e"],"37a0f60745e53927c4c876cfe5b5a58170f0646c":[],"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["c7bd1fdddb8e84c1857d1a55c32ced51f0ed2069"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c903c3d15906a3da96b8c0c2fb704491005fdbdb","c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee"],"fa0876236f0bd8be403747120d248bdd42b75a96":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"6e764e9a107f93be9fa3c922bc6a197b3eec387e":["37a0f60745e53927c4c876cfe5b5a58170f0646c","fa0876236f0bd8be403747120d248bdd42b75a96"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["37a0f60745e53927c4c876cfe5b5a58170f0646c","a258fbb26824fd104ed795e5d9033d2d040049ee","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}