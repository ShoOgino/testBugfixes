{"path":"lucene/suggest/src/test/org/apache/lucene/search/suggest/fst/TestSort#testRamBuffer().mjava","commits":[{"id":"363c827acabcdf749ab543fe459e291e7acc1f1e","date":1337801906,"type":0,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/suggest/fst/TestSort#testRamBuffer().mjava","pathOld":"/dev/null","sourceNew":"  public void testRamBuffer() {\n    int numIters = atLeast(10000);\n    for (int i = 0; i < numIters; i++) {\n      BufferSize.megabytes(1+random().nextInt(2047));\n    }\n    BufferSize.megabytes(2047);\n    BufferSize.megabytes(1);\n    \n    try {\n      BufferSize.megabytes(2048);\n      fail(\"max mb is 2047\");\n    } catch (IllegalArgumentException e) {\n    }\n    \n    try {\n      BufferSize.megabytes(0);\n      fail(\"min mb is 0.5\");\n    } catch (IllegalArgumentException e) {\n    }\n    \n    try {\n      BufferSize.megabytes(-1);\n      fail(\"min mb is 0.5\");\n    } catch (IllegalArgumentException e) {\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["05fe562aa248790944d43cdd478f512572835ba0","05fe562aa248790944d43cdd478f512572835ba0"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"b52dd493156fb4023d158d49e1ea92dbf3c20871","date":1337893063,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/suggest/src/test/org/apache/lucene/search/suggest/fst/TestSort#testRamBuffer().mjava","pathOld":"/dev/null","sourceNew":"  public void testRamBuffer() {\n    int numIters = atLeast(10000);\n    for (int i = 0; i < numIters; i++) {\n      BufferSize.megabytes(1+random().nextInt(2047));\n    }\n    BufferSize.megabytes(2047);\n    BufferSize.megabytes(1);\n    \n    try {\n      BufferSize.megabytes(2048);\n      fail(\"max mb is 2047\");\n    } catch (IllegalArgumentException e) {\n    }\n    \n    try {\n      BufferSize.megabytes(0);\n      fail(\"min mb is 0.5\");\n    } catch (IllegalArgumentException e) {\n    }\n    \n    try {\n      BufferSize.megabytes(-1);\n      fail(\"min mb is 0.5\");\n    } catch (IllegalArgumentException e) {\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"36f5a8c57e16c0f801006a52f87c75378427852e","date":1393256707,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/util/TestOfflineSorter#testRamBuffer().mjava","pathOld":"lucene/suggest/src/test/org/apache/lucene/search/suggest/fst/TestSort#testRamBuffer().mjava","sourceNew":"  public void testRamBuffer() {\n    int numIters = atLeast(10000);\n    for (int i = 0; i < numIters; i++) {\n      BufferSize.megabytes(1+random().nextInt(2047));\n    }\n    BufferSize.megabytes(2047);\n    BufferSize.megabytes(1);\n    \n    try {\n      BufferSize.megabytes(2048);\n      fail(\"max mb is 2047\");\n    } catch (IllegalArgumentException e) {\n    }\n    \n    try {\n      BufferSize.megabytes(0);\n      fail(\"min mb is 0.5\");\n    } catch (IllegalArgumentException e) {\n    }\n    \n    try {\n      BufferSize.megabytes(-1);\n      fail(\"min mb is 0.5\");\n    } catch (IllegalArgumentException e) {\n    }\n  }\n\n","sourceOld":"  public void testRamBuffer() {\n    int numIters = atLeast(10000);\n    for (int i = 0; i < numIters; i++) {\n      BufferSize.megabytes(1+random().nextInt(2047));\n    }\n    BufferSize.megabytes(2047);\n    BufferSize.megabytes(1);\n    \n    try {\n      BufferSize.megabytes(2048);\n      fail(\"max mb is 2047\");\n    } catch (IllegalArgumentException e) {\n    }\n    \n    try {\n      BufferSize.megabytes(0);\n      fail(\"min mb is 0.5\");\n    } catch (IllegalArgumentException e) {\n    }\n    \n    try {\n      BufferSize.megabytes(-1);\n      fail(\"min mb is 0.5\");\n    } catch (IllegalArgumentException e) {\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ba791bce8103c79e38f957e9c5a53a75871bd918","date":1393539206,"type":5,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/util/TestOfflineSorter#testRamBuffer().mjava","pathOld":"lucene/suggest/src/test/org/apache/lucene/search/suggest/fst/TestSort#testRamBuffer().mjava","sourceNew":"  public void testRamBuffer() {\n    int numIters = atLeast(10000);\n    for (int i = 0; i < numIters; i++) {\n      BufferSize.megabytes(1+random().nextInt(2047));\n    }\n    BufferSize.megabytes(2047);\n    BufferSize.megabytes(1);\n    \n    try {\n      BufferSize.megabytes(2048);\n      fail(\"max mb is 2047\");\n    } catch (IllegalArgumentException e) {\n    }\n    \n    try {\n      BufferSize.megabytes(0);\n      fail(\"min mb is 0.5\");\n    } catch (IllegalArgumentException e) {\n    }\n    \n    try {\n      BufferSize.megabytes(-1);\n      fail(\"min mb is 0.5\");\n    } catch (IllegalArgumentException e) {\n    }\n  }\n\n","sourceOld":"  public void testRamBuffer() {\n    int numIters = atLeast(10000);\n    for (int i = 0; i < numIters; i++) {\n      BufferSize.megabytes(1+random().nextInt(2047));\n    }\n    BufferSize.megabytes(2047);\n    BufferSize.megabytes(1);\n    \n    try {\n      BufferSize.megabytes(2048);\n      fail(\"max mb is 2047\");\n    } catch (IllegalArgumentException e) {\n    }\n    \n    try {\n      BufferSize.megabytes(0);\n      fail(\"min mb is 0.5\");\n    } catch (IllegalArgumentException e) {\n    }\n    \n    try {\n      BufferSize.megabytes(-1);\n      fail(\"min mb is 0.5\");\n    } catch (IllegalArgumentException e) {\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null}],"commit2Parents":{"363c827acabcdf749ab543fe459e291e7acc1f1e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"ba791bce8103c79e38f957e9c5a53a75871bd918":["363c827acabcdf749ab543fe459e291e7acc1f1e","36f5a8c57e16c0f801006a52f87c75378427852e"],"36f5a8c57e16c0f801006a52f87c75378427852e":["363c827acabcdf749ab543fe459e291e7acc1f1e"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b52dd493156fb4023d158d49e1ea92dbf3c20871":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","363c827acabcdf749ab543fe459e291e7acc1f1e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["ba791bce8103c79e38f957e9c5a53a75871bd918"]},"commit2Childs":{"363c827acabcdf749ab543fe459e291e7acc1f1e":["ba791bce8103c79e38f957e9c5a53a75871bd918","36f5a8c57e16c0f801006a52f87c75378427852e","b52dd493156fb4023d158d49e1ea92dbf3c20871"],"ba791bce8103c79e38f957e9c5a53a75871bd918":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"36f5a8c57e16c0f801006a52f87c75378427852e":["ba791bce8103c79e38f957e9c5a53a75871bd918"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["363c827acabcdf749ab543fe459e291e7acc1f1e","b52dd493156fb4023d158d49e1ea92dbf3c20871"],"b52dd493156fb4023d158d49e1ea92dbf3c20871":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["b52dd493156fb4023d158d49e1ea92dbf3c20871","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}