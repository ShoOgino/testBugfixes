{"path":"lucene/analysis/kuromoji/src/java/org/apache/lucene/analysis/ja/JapaneseTokenizer.Lattice#setup(char[],EnumMap[Type,Dictionary],WrappedPositionArray,int,int,boolean).mjava","commits":[{"id":"f2b45d6769cfaeb4456b4b66cdd5e25c8940f2a4","date":1449124064,"type":0,"author":"Christian Moen","isMerge":false,"pathNew":"lucene/analysis/kuromoji/src/java/org/apache/lucene/analysis/ja/JapaneseTokenizer.Lattice#setup(char[],EnumMap[Type,Dictionary],WrappedPositionArray,int,int,boolean).mjava","pathOld":"/dev/null","sourceNew":"    void setup(char[] fragment,\n          EnumMap<Type, Dictionary> dictionaryMap,\n          WrappedPositionArray positions, int prevOffset, int endOffset, boolean useEOS) {\n      assert positions.get(prevOffset).count == 1;\n      if (VERBOSE) {\n        System.out.printf(\"DEBUG: setup: prevOffset=%d, endOffset=%d\\n\", prevOffset, endOffset);\n      }\n\n      this.fragment = fragment;\n      this.dictionaryMap = dictionaryMap;\n      this.useEOS = useEOS;\n\n      // Initialize lRoot and rRoot.\n      setupRoot(prevOffset, endOffset);\n\n      // \"+ 2\" for first/last record.\n      setupNodePool(positionCount(positions, prevOffset + 1, endOffset + 1) + 2);\n\n      // substitute for BOS = 0\n      Position first = positions.get(prevOffset);\n      if (addNode(first.backType[0], first.backID[0], -1, 0) != 0) {\n        assert false;\n      }\n\n      // EOS = 1\n      if (addNode(Type.KNOWN, -1, endOffset - rootBase, -1) != 1) {\n        assert false;\n      }\n\n      for (int offset = endOffset; prevOffset < offset; --offset) {\n        int right = offset - rootBase;\n        // optimize: exclude disconnected nodes.\n        if (0 <= lRoot[right]) {\n          Position pos = positions.get(offset);\n          for (int i = 0; i < pos.count; ++i) {\n            addNode(pos.backType[i], pos.backID[i], pos.backPos[i] - rootBase, right);\n          }\n        }\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f2b45d6769cfaeb4456b4b66cdd5e25c8940f2a4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["f2b45d6769cfaeb4456b4b66cdd5e25c8940f2a4"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f2b45d6769cfaeb4456b4b66cdd5e25c8940f2a4"],"f2b45d6769cfaeb4456b4b66cdd5e25c8940f2a4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}