{"path":"lucene/src/test/org/apache/lucene/search/TestScorerPerf#testConjunctions().mjava","commits":[{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":1,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestScorerPerf#testConjunctions().mjava","pathOld":"src/test/org/apache/lucene/search/TestScorerPerf#testConjunctions().mjava","sourceNew":"  public void testConjunctions() throws Exception {\n    // test many small sets... the bugs will be found on boundary conditions\n    r = newRandom();\n    createDummySearcher();\n    validate=true;\n    sets=randBitSets(1000,10);\n    doConjunctions(10000,5);\n    doNestedConjunctions(10000,3,3);\n    s.close();\n  }\n\n","sourceOld":"  public void testConjunctions() throws Exception {\n    // test many small sets... the bugs will be found on boundary conditions\n    r = newRandom();\n    createDummySearcher();\n    validate=true;\n    sets=randBitSets(1000,10);\n    doConjunctions(10000,5);\n    doNestedConjunctions(10000,3,3);\n    s.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2aafd88401639311b0404e67c94e829e123a0e45","date":1273477632,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestScorerPerf#testConjunctions().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestScorerPerf#testConjunctions().mjava","sourceNew":"  public void testConjunctions() throws Exception {\n    // test many small sets... the bugs will be found on boundary conditions\n    r = newRandom();\n    createDummySearcher();\n    validate=true;\n    sets=randBitSets(1000*_TestUtil.getRandomMultiplier(),10*_TestUtil.getRandomMultiplier());\n    doConjunctions(10000*_TestUtil.getRandomMultiplier(),5*_TestUtil.getRandomMultiplier());\n    doNestedConjunctions(10000*_TestUtil.getRandomMultiplier(),3*_TestUtil.getRandomMultiplier(),3*_TestUtil.getRandomMultiplier());\n    s.close();\n  }\n\n","sourceOld":"  public void testConjunctions() throws Exception {\n    // test many small sets... the bugs will be found on boundary conditions\n    r = newRandom();\n    createDummySearcher();\n    validate=true;\n    sets=randBitSets(1000,10);\n    doConjunctions(10000,5);\n    doNestedConjunctions(10000,3,3);\n    s.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0e45742e10e8e3b98e854babe6dbb07a4197b71","date":1280230285,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestScorerPerf#testConjunctions().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestScorerPerf#testConjunctions().mjava","sourceNew":"  public void testConjunctions() throws Exception {\n    // test many small sets... the bugs will be found on boundary conditions\n    r = newRandom();\n    createDummySearcher();\n    validate=true;\n    sets=randBitSets(1000 * RANDOM_MULTIPLIER, 10 * RANDOM_MULTIPLIER);\n    doConjunctions(10000 * RANDOM_MULTIPLIER, 5 * RANDOM_MULTIPLIER);\n    doNestedConjunctions(10000 * RANDOM_MULTIPLIER, 3 * RANDOM_MULTIPLIER, 3 * RANDOM_MULTIPLIER);\n    s.close();\n  }\n\n","sourceOld":"  public void testConjunctions() throws Exception {\n    // test many small sets... the bugs will be found on boundary conditions\n    r = newRandom();\n    createDummySearcher();\n    validate=true;\n    sets=randBitSets(1000*_TestUtil.getRandomMultiplier(),10*_TestUtil.getRandomMultiplier());\n    doConjunctions(10000*_TestUtil.getRandomMultiplier(),5*_TestUtil.getRandomMultiplier());\n    doNestedConjunctions(10000*_TestUtil.getRandomMultiplier(),3*_TestUtil.getRandomMultiplier(),3*_TestUtil.getRandomMultiplier());\n    s.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3242a09f703274d3b9283f2064a1a33064b53a1b","date":1280263474,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestScorerPerf#testConjunctions().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestScorerPerf#testConjunctions().mjava","sourceNew":"  public void testConjunctions() throws Exception {\n    // test many small sets... the bugs will be found on boundary conditions\n    r = newRandom();\n    createDummySearcher();\n    validate=true;\n    sets=randBitSets(1000 * RANDOM_MULTIPLIER, 10 * RANDOM_MULTIPLIER);\n    doConjunctions(10000 * RANDOM_MULTIPLIER, 5 * RANDOM_MULTIPLIER);\n    doNestedConjunctions(10000 * RANDOM_MULTIPLIER, 3 * RANDOM_MULTIPLIER, 3 * RANDOM_MULTIPLIER);\n    s.close();\n  }\n\n","sourceOld":"  public void testConjunctions() throws Exception {\n    // test many small sets... the bugs will be found on boundary conditions\n    r = newRandom();\n    createDummySearcher();\n    validate=true;\n    sets=randBitSets(1000*_TestUtil.getRandomMultiplier(),10*_TestUtil.getRandomMultiplier());\n    doConjunctions(10000*_TestUtil.getRandomMultiplier(),5*_TestUtil.getRandomMultiplier());\n    doNestedConjunctions(10000*_TestUtil.getRandomMultiplier(),3*_TestUtil.getRandomMultiplier(),3*_TestUtil.getRandomMultiplier());\n    s.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c","date":1281646583,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestScorerPerf#testConjunctions().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestScorerPerf#testConjunctions().mjava","sourceNew":"  public void testConjunctions() throws Exception {\n    // test many small sets... the bugs will be found on boundary conditions\n    createDummySearcher();\n    validate=true;\n    sets=randBitSets(1000 * RANDOM_MULTIPLIER, 10 * RANDOM_MULTIPLIER);\n    doConjunctions(10000 * RANDOM_MULTIPLIER, 5 * RANDOM_MULTIPLIER);\n    doNestedConjunctions(10000 * RANDOM_MULTIPLIER, 3 * RANDOM_MULTIPLIER, 3 * RANDOM_MULTIPLIER);\n    s.close();\n    d.close();\n  }\n\n","sourceOld":"  public void testConjunctions() throws Exception {\n    // test many small sets... the bugs will be found on boundary conditions\n    r = newRandom();\n    createDummySearcher();\n    validate=true;\n    sets=randBitSets(1000 * RANDOM_MULTIPLIER, 10 * RANDOM_MULTIPLIER);\n    doConjunctions(10000 * RANDOM_MULTIPLIER, 5 * RANDOM_MULTIPLIER);\n    doNestedConjunctions(10000 * RANDOM_MULTIPLIER, 3 * RANDOM_MULTIPLIER, 3 * RANDOM_MULTIPLIER);\n    s.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestScorerPerf#testConjunctions().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestScorerPerf#testConjunctions().mjava","sourceNew":"  public void testConjunctions() throws Exception {\n    // test many small sets... the bugs will be found on boundary conditions\n    createDummySearcher();\n    validate=true;\n    sets=randBitSets(1000 * RANDOM_MULTIPLIER, 10 * RANDOM_MULTIPLIER);\n    doConjunctions(10000 * RANDOM_MULTIPLIER, 5 * RANDOM_MULTIPLIER);\n    doNestedConjunctions(10000 * RANDOM_MULTIPLIER, 3 * RANDOM_MULTIPLIER, 3 * RANDOM_MULTIPLIER);\n    s.close();\n    d.close();\n  }\n\n","sourceOld":"  public void testConjunctions() throws Exception {\n    // test many small sets... the bugs will be found on boundary conditions\n    r = newRandom();\n    createDummySearcher();\n    validate=true;\n    sets=randBitSets(1000 * RANDOM_MULTIPLIER, 10 * RANDOM_MULTIPLIER);\n    doConjunctions(10000 * RANDOM_MULTIPLIER, 5 * RANDOM_MULTIPLIER);\n    doNestedConjunctions(10000 * RANDOM_MULTIPLIER, 3 * RANDOM_MULTIPLIER, 3 * RANDOM_MULTIPLIER);\n    s.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f83af14a2a8131b14d7aee6274c740334e0363d3","date":1307579822,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestScorerPerf#testConjunctions().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestScorerPerf#testConjunctions().mjava","sourceNew":"  public void testConjunctions() throws Exception {\n    // test many small sets... the bugs will be found on boundary conditions\n    createDummySearcher();\n    validate=true;\n    sets=randBitSets(atLeast(1000), atLeast(10));\n    doConjunctions(atLeast(10000), atLeast(5));\n    doNestedConjunctions(atLeast(10000), atLeast(3), atLeast(3));\n    s.close();\n    d.close();\n  }\n\n","sourceOld":"  public void testConjunctions() throws Exception {\n    // test many small sets... the bugs will be found on boundary conditions\n    createDummySearcher();\n    validate=true;\n    sets=randBitSets(1000 * RANDOM_MULTIPLIER, 10 * RANDOM_MULTIPLIER);\n    doConjunctions(10000 * RANDOM_MULTIPLIER, 5 * RANDOM_MULTIPLIER);\n    doNestedConjunctions(10000 * RANDOM_MULTIPLIER, 3 * RANDOM_MULTIPLIER, 3 * RANDOM_MULTIPLIER);\n    s.close();\n    d.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"77cf4379b2824f6ea34b091c495d6e95c38ff9e2","date":1307610475,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestScorerPerf#testConjunctions().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestScorerPerf#testConjunctions().mjava","sourceNew":"  public void testConjunctions() throws Exception {\n    // test many small sets... the bugs will be found on boundary conditions\n    createDummySearcher();\n    validate=true;\n    sets=randBitSets(atLeast(1000), atLeast(10));\n    doConjunctions(atLeast(10000), atLeast(5));\n    doNestedConjunctions(atLeast(10000), atLeast(3), atLeast(3));\n    s.close();\n    d.close();\n  }\n\n","sourceOld":"  public void testConjunctions() throws Exception {\n    // test many small sets... the bugs will be found on boundary conditions\n    createDummySearcher();\n    validate=true;\n    sets=randBitSets(1000 * RANDOM_MULTIPLIER, 10 * RANDOM_MULTIPLIER);\n    doConjunctions(10000 * RANDOM_MULTIPLIER, 5 * RANDOM_MULTIPLIER);\n    doNestedConjunctions(10000 * RANDOM_MULTIPLIER, 3 * RANDOM_MULTIPLIER, 3 * RANDOM_MULTIPLIER);\n    s.close();\n    d.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","date":1307729864,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestScorerPerf#testConjunctions().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestScorerPerf#testConjunctions().mjava","sourceNew":"  public void testConjunctions() throws Exception {\n    // test many small sets... the bugs will be found on boundary conditions\n    createDummySearcher();\n    validate=true;\n    sets=randBitSets(atLeast(1000), atLeast(10));\n    doConjunctions(atLeast(10000), atLeast(5));\n    doNestedConjunctions(atLeast(10000), atLeast(3), atLeast(3));\n    s.close();\n    d.close();\n  }\n\n","sourceOld":"  public void testConjunctions() throws Exception {\n    // test many small sets... the bugs will be found on boundary conditions\n    createDummySearcher();\n    validate=true;\n    sets=randBitSets(1000 * RANDOM_MULTIPLIER, 10 * RANDOM_MULTIPLIER);\n    doConjunctions(10000 * RANDOM_MULTIPLIER, 5 * RANDOM_MULTIPLIER);\n    doNestedConjunctions(10000 * RANDOM_MULTIPLIER, 3 * RANDOM_MULTIPLIER, 3 * RANDOM_MULTIPLIER);\n    s.close();\n    d.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a3a0403b45dfe384fae4a1b6e96c3265d000c498","date":1321445981,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestScorerPerf#testConjunctions().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestScorerPerf#testConjunctions().mjava","sourceNew":"  public void testConjunctions() throws Exception {\n    // test many small sets... the bugs will be found on boundary conditions\n    createDummySearcher();\n    validate=true;\n    sets=randBitSets(atLeast(1000), atLeast(10));\n    doConjunctions(atLeast(10000), atLeast(5));\n    doNestedConjunctions(atLeast(10000), atLeast(3), atLeast(3));\n    s.close();\n    r.close();\n    d.close();\n  }\n\n","sourceOld":"  public void testConjunctions() throws Exception {\n    // test many small sets... the bugs will be found on boundary conditions\n    createDummySearcher();\n    validate=true;\n    sets=randBitSets(atLeast(1000), atLeast(10));\n    doConjunctions(atLeast(10000), atLeast(5));\n    doNestedConjunctions(atLeast(10000), atLeast(3), atLeast(3));\n    s.close();\n    d.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0e7c2454a6a8237bfd0e953f5b940838408c9055","date":1323649300,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/TestScorerPerf#testConjunctions().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestScorerPerf#testConjunctions().mjava","sourceNew":"  public void testConjunctions() throws Exception {\n    // test many small sets... the bugs will be found on boundary conditions\n    createDummySearcher();\n    validate=true;\n    sets=randBitSets(atLeast(1000), atLeast(10));\n    doConjunctions(atLeast(10000), atLeast(5));\n    doNestedConjunctions(atLeast(10000), atLeast(3), atLeast(3));\n    r.close();\n    d.close();\n  }\n\n","sourceOld":"  public void testConjunctions() throws Exception {\n    // test many small sets... the bugs will be found on boundary conditions\n    createDummySearcher();\n    validate=true;\n    sets=randBitSets(atLeast(1000), atLeast(10));\n    doConjunctions(atLeast(10000), atLeast(5));\n    doNestedConjunctions(atLeast(10000), atLeast(3), atLeast(3));\n    s.close();\n    r.close();\n    d.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"93ccd971aca7fb61b7f1b946e44714cfc80bfc7c","date":1323720782,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/src/test/org/apache/lucene/search/TestScorerPerf#testConjunctions().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestScorerPerf#testConjunctions().mjava","sourceNew":"  public void testConjunctions() throws Exception {\n    // test many small sets... the bugs will be found on boundary conditions\n    createDummySearcher();\n    validate=true;\n    sets=randBitSets(atLeast(1000), atLeast(10));\n    doConjunctions(atLeast(10000), atLeast(5));\n    doNestedConjunctions(atLeast(10000), atLeast(3), atLeast(3));\n    r.close();\n    d.close();\n  }\n\n","sourceOld":"  public void testConjunctions() throws Exception {\n    // test many small sets... the bugs will be found on boundary conditions\n    createDummySearcher();\n    validate=true;\n    sets=randBitSets(atLeast(1000), atLeast(10));\n    doConjunctions(atLeast(10000), atLeast(5));\n    doNestedConjunctions(atLeast(10000), atLeast(3), atLeast(3));\n    s.close();\n    r.close();\n    d.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestScorerPerf#testConjunctions().mjava","pathOld":"lucene/src/test/org/apache/lucene/search/TestScorerPerf#testConjunctions().mjava","sourceNew":"  public void testConjunctions() throws Exception {\n    // test many small sets... the bugs will be found on boundary conditions\n    createDummySearcher();\n    validate=true;\n    sets=randBitSets(atLeast(1000), atLeast(10));\n    doConjunctions(atLeast(10000), atLeast(5));\n    doNestedConjunctions(atLeast(10000), atLeast(3), atLeast(3));\n    r.close();\n    d.close();\n  }\n\n","sourceOld":"  public void testConjunctions() throws Exception {\n    // test many small sets... the bugs will be found on boundary conditions\n    createDummySearcher();\n    validate=true;\n    sets=randBitSets(atLeast(1000), atLeast(10));\n    doConjunctions(atLeast(10000), atLeast(5));\n    doNestedConjunctions(atLeast(10000), atLeast(3), atLeast(3));\n    r.close();\n    d.close();\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e45742e10e8e3b98e854babe6dbb07a4197b71":["2aafd88401639311b0404e67c94e829e123a0e45"],"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655":["ab9633cb67e3c0aec3c066147a23a957d6e7ad8c","f83af14a2a8131b14d7aee6274c740334e0363d3"],"f83af14a2a8131b14d7aee6274c740334e0363d3":["ab9633cb67e3c0aec3c066147a23a957d6e7ad8c"],"3242a09f703274d3b9283f2064a1a33064b53a1b":["2aafd88401639311b0404e67c94e829e123a0e45","a0e45742e10e8e3b98e854babe6dbb07a4197b71"],"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c":["a0e45742e10e8e3b98e854babe6dbb07a4197b71"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["0e7c2454a6a8237bfd0e953f5b940838408c9055"],"93ccd971aca7fb61b7f1b946e44714cfc80bfc7c":["a3a0403b45dfe384fae4a1b6e96c3265d000c498","0e7c2454a6a8237bfd0e953f5b940838408c9055"],"2aafd88401639311b0404e67c94e829e123a0e45":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["3242a09f703274d3b9283f2064a1a33064b53a1b","ab9633cb67e3c0aec3c066147a23a957d6e7ad8c"],"0e7c2454a6a8237bfd0e953f5b940838408c9055":["a3a0403b45dfe384fae4a1b6e96c3265d000c498"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"77cf4379b2824f6ea34b091c495d6e95c38ff9e2":["ab9633cb67e3c0aec3c066147a23a957d6e7ad8c","f83af14a2a8131b14d7aee6274c740334e0363d3"],"a3a0403b45dfe384fae4a1b6e96c3265d000c498":["f83af14a2a8131b14d7aee6274c740334e0363d3"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"a0e45742e10e8e3b98e854babe6dbb07a4197b71":["3242a09f703274d3b9283f2064a1a33064b53a1b","ab9633cb67e3c0aec3c066147a23a957d6e7ad8c"],"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655":[],"f83af14a2a8131b14d7aee6274c740334e0363d3":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","77cf4379b2824f6ea34b091c495d6e95c38ff9e2","a3a0403b45dfe384fae4a1b6e96c3265d000c498"],"3242a09f703274d3b9283f2064a1a33064b53a1b":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"ab9633cb67e3c0aec3c066147a23a957d6e7ad8c":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","f83af14a2a8131b14d7aee6274c740334e0363d3","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","77cf4379b2824f6ea34b091c495d6e95c38ff9e2"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"93ccd971aca7fb61b7f1b946e44714cfc80bfc7c":[],"2aafd88401639311b0404e67c94e829e123a0e45":["a0e45742e10e8e3b98e854babe6dbb07a4197b71","3242a09f703274d3b9283f2064a1a33064b53a1b"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":[],"0e7c2454a6a8237bfd0e953f5b940838408c9055":["3a119bbc8703c10faa329ec201c654b3a35a1e3e","93ccd971aca7fb61b7f1b946e44714cfc80bfc7c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"77cf4379b2824f6ea34b091c495d6e95c38ff9e2":[],"a3a0403b45dfe384fae4a1b6e96c3265d000c498":["93ccd971aca7fb61b7f1b946e44714cfc80bfc7c","0e7c2454a6a8237bfd0e953f5b940838408c9055"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["2aafd88401639311b0404e67c94e829e123a0e45"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","93ccd971aca7fb61b7f1b946e44714cfc80bfc7c","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","77cf4379b2824f6ea34b091c495d6e95c38ff9e2","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}