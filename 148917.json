{"path":"src/test/org/apache/solr/highlight/HighlighterTest#testConfig().mjava","commits":[{"id":"6a67b839dba6c0047c752067352e6a7847fbe8d3","date":1183443247,"type":0,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/test/org/apache/solr/highlight/HighlighterTest#testConfig().mjava","pathOld":"/dev/null","sourceNew":"  public void testConfig()\n  {\n    SolrHighlighter highlighter = SolrCore.getSolrCore().getHighlighter();\n    System.out.println( \"highlighter\" );\n\n    // Make sure we loaded the one formatter\n    SolrFormatter fmt1 = highlighter.formatters.get( null );\n    SolrFormatter fmt2 = highlighter.formatters.get( \"\" );\n    assertSame( fmt1, fmt2 );\n    assertTrue( fmt1 instanceof HtmlFormatter );\n    \n    \n    // Make sure we loaded the one formatter\n    SolrFragmenter gap = highlighter.fragmenters.get( \"gap\" );\n    SolrFragmenter regex = highlighter.fragmenters.get( \"regex\" );\n    SolrFragmenter frag = highlighter.fragmenters.get( null );\n    assertSame( gap, frag );\n    assertTrue( gap instanceof GapFragmenter );\n    assertTrue( regex instanceof RegexFragmenter );\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c90f01e1c0f11ee52212ab38c6d4393b3be8a646","date":1223059437,"type":3,"author":"Ryan McKinley","isMerge":false,"pathNew":"src/test/org/apache/solr/highlight/HighlighterTest#testConfig().mjava","pathOld":"src/test/org/apache/solr/highlight/HighlighterTest#testConfig().mjava","sourceNew":"  public void testConfig()\n  {\n    SolrHighlighter highlighter = h.getCore().getHighlighter();\n    System.out.println( \"highlighter\" );\n\n    // Make sure we loaded the one formatter\n    SolrFormatter fmt1 = highlighter.formatters.get( null );\n    SolrFormatter fmt2 = highlighter.formatters.get( \"\" );\n    assertSame( fmt1, fmt2 );\n    assertTrue( fmt1 instanceof HtmlFormatter );\n    \n    \n    // Make sure we loaded the one formatter\n    SolrFragmenter gap = highlighter.fragmenters.get( \"gap\" );\n    SolrFragmenter regex = highlighter.fragmenters.get( \"regex\" );\n    SolrFragmenter frag = highlighter.fragmenters.get( null );\n    assertSame( gap, frag );\n    assertTrue( gap instanceof GapFragmenter );\n    assertTrue( regex instanceof RegexFragmenter );\n  }\n\n","sourceOld":"  public void testConfig()\n  {\n    SolrHighlighter highlighter = SolrCore.getSolrCore().getHighlighter();\n    System.out.println( \"highlighter\" );\n\n    // Make sure we loaded the one formatter\n    SolrFormatter fmt1 = highlighter.formatters.get( null );\n    SolrFormatter fmt2 = highlighter.formatters.get( \"\" );\n    assertSame( fmt1, fmt2 );\n    assertTrue( fmt1 instanceof HtmlFormatter );\n    \n    \n    // Make sure we loaded the one formatter\n    SolrFragmenter gap = highlighter.fragmenters.get( \"gap\" );\n    SolrFragmenter regex = highlighter.fragmenters.get( \"regex\" );\n    SolrFragmenter frag = highlighter.fragmenters.get( null );\n    assertSame( gap, frag );\n    assertTrue( gap instanceof GapFragmenter );\n    assertTrue( regex instanceof RegexFragmenter );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0ba86a08f9944945dcee61b5f8acca8f9119e4b","date":1244613470,"type":3,"author":"Noble Paul","isMerge":false,"pathNew":"src/test/org/apache/solr/highlight/HighlighterTest#testConfig().mjava","pathOld":"src/test/org/apache/solr/highlight/HighlighterTest#testConfig().mjava","sourceNew":"  public void testConfig()\n  {\n    SolrHighlighter highlighter = h.getCore().getHighlighter();\n\n    // Make sure we loaded the one formatter\n    SolrFormatter fmt1 = highlighter.formatters.get( null );\n    SolrFormatter fmt2 = highlighter.formatters.get( \"\" );\n    assertSame( fmt1, fmt2 );\n    assertTrue( fmt1 instanceof HtmlFormatter );\n    \n    \n    // Make sure we loaded the one formatter\n    SolrFragmenter gap = highlighter.fragmenters.get( \"gap\" );\n    SolrFragmenter regex = highlighter.fragmenters.get( \"regex\" );\n    SolrFragmenter frag = highlighter.fragmenters.get( null );\n    assertSame( gap, frag );\n    assertTrue( gap instanceof GapFragmenter );\n    assertTrue( regex instanceof RegexFragmenter );\n  }\n\n","sourceOld":"  public void testConfig()\n  {\n    SolrHighlighter highlighter = h.getCore().getHighlighter();\n    System.out.println( \"highlighter\" );\n\n    // Make sure we loaded the one formatter\n    SolrFormatter fmt1 = highlighter.formatters.get( null );\n    SolrFormatter fmt2 = highlighter.formatters.get( \"\" );\n    assertSame( fmt1, fmt2 );\n    assertTrue( fmt1 instanceof HtmlFormatter );\n    \n    \n    // Make sure we loaded the one formatter\n    SolrFragmenter gap = highlighter.fragmenters.get( \"gap\" );\n    SolrFragmenter regex = highlighter.fragmenters.get( \"regex\" );\n    SolrFragmenter frag = highlighter.fragmenters.get( null );\n    assertSame( gap, frag );\n    assertTrue( gap instanceof GapFragmenter );\n    assertTrue( regex instanceof RegexFragmenter );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/test/org/apache/solr/highlight/HighlighterTest#testConfig().mjava","pathOld":"src/test/org/apache/solr/highlight/HighlighterTest#testConfig().mjava","sourceNew":"  public void testConfig()\n  {\n    SolrHighlighter highlighter = h.getCore().getHighlighter();\n\n    // Make sure we loaded the one formatter\n    SolrFormatter fmt1 = highlighter.formatters.get( null );\n    SolrFormatter fmt2 = highlighter.formatters.get( \"\" );\n    assertSame( fmt1, fmt2 );\n    assertTrue( fmt1 instanceof HtmlFormatter );\n    \n    \n    // Make sure we loaded the one formatter\n    SolrFragmenter gap = highlighter.fragmenters.get( \"gap\" );\n    SolrFragmenter regex = highlighter.fragmenters.get( \"regex\" );\n    SolrFragmenter frag = highlighter.fragmenters.get( null );\n    assertSame( gap, frag );\n    assertTrue( gap instanceof GapFragmenter );\n    assertTrue( regex instanceof RegexFragmenter );\n  }\n\n","sourceOld":"  public void testConfig()\n  {\n    SolrHighlighter highlighter = h.getCore().getHighlighter();\n\n    // Make sure we loaded the one formatter\n    SolrFormatter fmt1 = highlighter.formatters.get( null );\n    SolrFormatter fmt2 = highlighter.formatters.get( \"\" );\n    assertSame( fmt1, fmt2 );\n    assertTrue( fmt1 instanceof HtmlFormatter );\n    \n    \n    // Make sure we loaded the one formatter\n    SolrFragmenter gap = highlighter.fragmenters.get( \"gap\" );\n    SolrFragmenter regex = highlighter.fragmenters.get( \"regex\" );\n    SolrFragmenter frag = highlighter.fragmenters.get( null );\n    assertSame( gap, frag );\n    assertTrue( gap instanceof GapFragmenter );\n    assertTrue( regex instanceof RegexFragmenter );\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c90f01e1c0f11ee52212ab38c6d4393b3be8a646":["6a67b839dba6c0047c752067352e6a7847fbe8d3"],"a0ba86a08f9944945dcee61b5f8acca8f9119e4b":["c90f01e1c0f11ee52212ab38c6d4393b3be8a646"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["a0ba86a08f9944945dcee61b5f8acca8f9119e4b"],"6a67b839dba6c0047c752067352e6a7847fbe8d3":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"c90f01e1c0f11ee52212ab38c6d4393b3be8a646":["a0ba86a08f9944945dcee61b5f8acca8f9119e4b"],"a0ba86a08f9944945dcee61b5f8acca8f9119e4b":["ad94625fb8d088209f46650c8097196fec67f00c"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["6a67b839dba6c0047c752067352e6a7847fbe8d3"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"6a67b839dba6c0047c752067352e6a7847fbe8d3":["c90f01e1c0f11ee52212ab38c6d4393b3be8a646"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"pathCommit":null}