{"path":"solr/core/src/test/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/BlockPoolSlice#resolveDuplicateReplicas(ReplicaInfo,ReplicaInfo,ReplicaMap).mjava","commits":[{"id":"44ca189138a5b6e1989d12ab992fab60e235ddc7","date":1549051496,"type":0,"author":"markrmiller","isMerge":false,"pathNew":"solr/core/src/test/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/BlockPoolSlice#resolveDuplicateReplicas(ReplicaInfo,ReplicaInfo,ReplicaMap).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * This method is invoked during DN startup when volumes are scanned to\n   * build up the volumeMap.\n   *\n   * Given two replicas, decide which one to keep. The preference is as\n   * follows:\n   *   1. Prefer the replica with the higher generation stamp.\n   *   2. If generation stamps are equal, prefer the replica with the\n   *      larger on-disk length.\n   *   3. If on-disk length is the same, prefer the replica on persistent\n   *      storage volume.\n   *   4. All other factors being equal, keep replica1.\n   *\n   * The other replica is removed from the volumeMap and is deleted from\n   * its storage volume.\n   *\n   * @param replica1 first replica\n   * @param replica2 second replica\n   * @param volumeMap volume map to update\n   * @return the replica that is retained.\n   */\n  ReplicaInfo resolveDuplicateReplicas(\n      final ReplicaInfo replica1, final ReplicaInfo replica2,\n      final ReplicaMap volumeMap) {\n\n    if (!deleteDuplicateReplicas) {\n      // Leave both block replicas in place.\n      return replica1;\n    }\n    final ReplicaInfo replicaToDelete =\n        selectReplicaToDelete(replica1, replica2);\n    final ReplicaInfo replicaToKeep =\n        (replicaToDelete != replica1) ? replica1 : replica2;\n    // Update volumeMap and delete the replica\n    volumeMap.add(bpid, replicaToKeep);\n    if (replicaToDelete != null) {\n      deleteReplica(replicaToDelete);\n    }\n    return replicaToKeep;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"44ca189138a5b6e1989d12ab992fab60e235ddc7":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["44ca189138a5b6e1989d12ab992fab60e235ddc7"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["44ca189138a5b6e1989d12ab992fab60e235ddc7"],"44ca189138a5b6e1989d12ab992fab60e235ddc7":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}