{"path":"lucene/core/src/java/org/apache/lucene/index/StoredFieldsProcessor#flush(SegmentWriteState).mjava","commits":[{"id":"127981e5a1e1d1425c5fdc816ceacf753ca70ee4","date":1354205321,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/StoredFieldsProcessor#flush(SegmentWriteState).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void flush(SegmentWriteState state) throws IOException {\n    int numDocs = state.segmentInfo.getDocCount();\n\n    if (numDocs > 0) {\n      // It's possible that all documents seen in this segment\n      // hit non-aborting exceptions, in which case we will\n      // not have yet init'd the FieldsWriter:\n      initFieldsWriter(state.context);\n      fill(numDocs);\n    }\n\n    if (fieldsWriter != null) {\n      try {\n        fieldsWriter.finish(state.fieldInfos, numDocs);\n      } finally {\n        fieldsWriter.close();\n        fieldsWriter = null;\n        lastDocID = 0;\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d4d69c535930b5cce125cff868d40f6373dc27d4","date":1360270101,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/java/org/apache/lucene/index/StoredFieldsProcessor#flush(SegmentWriteState).mjava","pathOld":"/dev/null","sourceNew":"  @Override\n  public void flush(SegmentWriteState state) throws IOException {\n    int numDocs = state.segmentInfo.getDocCount();\n\n    if (numDocs > 0) {\n      // It's possible that all documents seen in this segment\n      // hit non-aborting exceptions, in which case we will\n      // not have yet init'd the FieldsWriter:\n      initFieldsWriter(state.context);\n      fill(numDocs);\n    }\n\n    if (fieldsWriter != null) {\n      try {\n        fieldsWriter.finish(state.fieldInfos, numDocs);\n      } finally {\n        fieldsWriter.close();\n        fieldsWriter = null;\n        lastDocID = 0;\n      }\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4851f51f54c38a114862c7c4b92fb9e2d20e2bdf","date":1370604663,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/index/StoredFieldsProcessor#flush(SegmentWriteState).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/index/StoredFieldsProcessor#flush(SegmentWriteState).mjava","sourceNew":"  @Override\n  public void flush(SegmentWriteState state) throws IOException {\n    int numDocs = state.segmentInfo.getDocCount();\n    if (numDocs > 0) {\n      // It's possible that all documents seen in this segment\n      // hit non-aborting exceptions, in which case we will\n      // not have yet init'd the FieldsWriter:\n      initFieldsWriter(state.context);\n      fill(numDocs);\n    }\n    if (fieldsWriter != null) {\n        boolean success = false;\n        try {\n          fieldsWriter.finish(state.fieldInfos, numDocs);\n          success = true;\n        } finally {\n          if (success) {\n            IOUtils.close(fieldsWriter);\n          } else {\n            IOUtils.closeWhileHandlingException(fieldsWriter);\n          }\n      }\n    }\n  }\n\n","sourceOld":"  @Override\n  public void flush(SegmentWriteState state) throws IOException {\n    int numDocs = state.segmentInfo.getDocCount();\n\n    if (numDocs > 0) {\n      // It's possible that all documents seen in this segment\n      // hit non-aborting exceptions, in which case we will\n      // not have yet init'd the FieldsWriter:\n      initFieldsWriter(state.context);\n      fill(numDocs);\n    }\n\n    if (fieldsWriter != null) {\n      try {\n        fieldsWriter.finish(state.fieldInfos, numDocs);\n      } finally {\n        fieldsWriter.close();\n        fieldsWriter = null;\n        lastDocID = 0;\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"52c7e49be259508735752fba88085255014a6ecf","date":1398706273,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/index/StoredFieldsProcessor#flush(SegmentWriteState).mjava","sourceNew":null,"sourceOld":"  @Override\n  public void flush(SegmentWriteState state) throws IOException {\n    int numDocs = state.segmentInfo.getDocCount();\n    if (numDocs > 0) {\n      // It's possible that all documents seen in this segment\n      // hit non-aborting exceptions, in which case we will\n      // not have yet init'd the FieldsWriter:\n      initFieldsWriter(state.context);\n      fill(numDocs);\n    }\n    if (fieldsWriter != null) {\n        boolean success = false;\n        try {\n          fieldsWriter.finish(state.fieldInfos, numDocs);\n          success = true;\n        } finally {\n          if (success) {\n            IOUtils.close(fieldsWriter);\n          } else {\n            IOUtils.closeWhileHandlingException(fieldsWriter);\n          }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3394716f52b34ab259ad5247e7595d9f9db6e935","date":1398791921,"type":4,"author":"Michael McCandless","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/index/StoredFieldsProcessor#flush(SegmentWriteState).mjava","sourceNew":null,"sourceOld":"  @Override\n  public void flush(SegmentWriteState state) throws IOException {\n    int numDocs = state.segmentInfo.getDocCount();\n    if (numDocs > 0) {\n      // It's possible that all documents seen in this segment\n      // hit non-aborting exceptions, in which case we will\n      // not have yet init'd the FieldsWriter:\n      initFieldsWriter(state.context);\n      fill(numDocs);\n    }\n    if (fieldsWriter != null) {\n        boolean success = false;\n        try {\n          fieldsWriter.finish(state.fieldInfos, numDocs);\n          success = true;\n        } finally {\n          if (success) {\n            IOUtils.close(fieldsWriter);\n          } else {\n            IOUtils.closeWhileHandlingException(fieldsWriter);\n          }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c0cd85fde84cb318b4dc97710dcf15e2959a1bbe","date":1398844771,"type":4,"author":"Dawid Weiss","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/core/src/java/org/apache/lucene/index/StoredFieldsProcessor#flush(SegmentWriteState).mjava","sourceNew":null,"sourceOld":"  @Override\n  public void flush(SegmentWriteState state) throws IOException {\n    int numDocs = state.segmentInfo.getDocCount();\n    if (numDocs > 0) {\n      // It's possible that all documents seen in this segment\n      // hit non-aborting exceptions, in which case we will\n      // not have yet init'd the FieldsWriter:\n      initFieldsWriter(state.context);\n      fill(numDocs);\n    }\n    if (fieldsWriter != null) {\n        boolean success = false;\n        try {\n          fieldsWriter.finish(state.fieldInfos, numDocs);\n          success = true;\n        } finally {\n          if (success) {\n            IOUtils.close(fieldsWriter);\n          } else {\n            IOUtils.closeWhileHandlingException(fieldsWriter);\n          }\n      }\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"3394716f52b34ab259ad5247e7595d9f9db6e935":["4851f51f54c38a114862c7c4b92fb9e2d20e2bdf","52c7e49be259508735752fba88085255014a6ecf"],"c0cd85fde84cb318b4dc97710dcf15e2959a1bbe":["4851f51f54c38a114862c7c4b92fb9e2d20e2bdf","3394716f52b34ab259ad5247e7595d9f9db6e935"],"d4d69c535930b5cce125cff868d40f6373dc27d4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","127981e5a1e1d1425c5fdc816ceacf753ca70ee4"],"4851f51f54c38a114862c7c4b92fb9e2d20e2bdf":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"127981e5a1e1d1425c5fdc816ceacf753ca70ee4":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"52c7e49be259508735752fba88085255014a6ecf":["4851f51f54c38a114862c7c4b92fb9e2d20e2bdf"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3394716f52b34ab259ad5247e7595d9f9db6e935"]},"commit2Childs":{"3394716f52b34ab259ad5247e7595d9f9db6e935":["c0cd85fde84cb318b4dc97710dcf15e2959a1bbe","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"c0cd85fde84cb318b4dc97710dcf15e2959a1bbe":[],"d4d69c535930b5cce125cff868d40f6373dc27d4":["4851f51f54c38a114862c7c4b92fb9e2d20e2bdf"],"4851f51f54c38a114862c7c4b92fb9e2d20e2bdf":["3394716f52b34ab259ad5247e7595d9f9db6e935","c0cd85fde84cb318b4dc97710dcf15e2959a1bbe","52c7e49be259508735752fba88085255014a6ecf"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d4d69c535930b5cce125cff868d40f6373dc27d4","127981e5a1e1d1425c5fdc816ceacf753ca70ee4"],"127981e5a1e1d1425c5fdc816ceacf753ca70ee4":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"52c7e49be259508735752fba88085255014a6ecf":["3394716f52b34ab259ad5247e7595d9f9db6e935"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c0cd85fde84cb318b4dc97710dcf15e2959a1bbe","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}