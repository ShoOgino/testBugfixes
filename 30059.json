{"path":"src/test/org/apache/lucene/search/spans/TestBasics#testNpeInSpanNearWithSpanNot().mjava","commits":[{"id":"040b4284d3a067410ea34d7b29ca012f0b8d8d27","date":1147937963,"type":0,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"src/test/org/apache/lucene/search/spans/TestBasics#testNpeInSpanNearWithSpanNot().mjava","pathOld":"/dev/null","sourceNew":"  public void testNpeInSpanNearWithSpanNot() throws Exception {\n    SpanTermQuery term1 = new SpanTermQuery(new Term(\"field\", \"eight\"));\n    SpanTermQuery term2 = new SpanTermQuery(new Term(\"field\", \"one\"));\n    SpanNearQuery near = new SpanNearQuery(new SpanQuery[] {term1, term2},\n                                           4, true);\n    SpanTermQuery hun = new SpanTermQuery(new Term(\"field\", \"hundred\"));\n    SpanTermQuery term3 = new SpanTermQuery(new Term(\"field\", \"forty\"));\n    SpanNearQuery exclude = new SpanNearQuery(new SpanQuery[] {hun, term3},\n                                              1, true);\n    \n    SpanNotQuery query = new SpanNotQuery(near, exclude);\n\n    checkHits(query, new int[]\n      {801, 821, 831, 851, 861, 871, 881, 891});\n\n    assertTrue(searcher.explain(query, 801).getValue() > 0.0f);\n    assertTrue(searcher.explain(query, 891).getValue() > 0.0f);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/search/spans/TestBasics#testNpeInSpanNearWithSpanNot().mjava","pathOld":"src/test/org/apache/lucene/search/spans/TestBasics#testNpeInSpanNearWithSpanNot().mjava","sourceNew":"  public void testNpeInSpanNearWithSpanNot() throws Exception {\n    SpanTermQuery term1 = new SpanTermQuery(new Term(\"field\", \"eight\"));\n    SpanTermQuery term2 = new SpanTermQuery(new Term(\"field\", \"one\"));\n    SpanNearQuery near = new SpanNearQuery(new SpanQuery[] {term1, term2},\n                                           4, true);\n    SpanTermQuery hun = new SpanTermQuery(new Term(\"field\", \"hundred\"));\n    SpanTermQuery term3 = new SpanTermQuery(new Term(\"field\", \"forty\"));\n    SpanNearQuery exclude = new SpanNearQuery(new SpanQuery[] {hun, term3},\n                                              1, true);\n    \n    SpanNotQuery query = new SpanNotQuery(near, exclude);\n\n    checkHits(query, new int[]\n      {801, 821, 831, 851, 861, 871, 881, 891});\n\n    assertTrue(searcher.explain(query, 801).getValue() > 0.0f);\n    assertTrue(searcher.explain(query, 891).getValue() > 0.0f);\n  }\n\n","sourceOld":"  public void testNpeInSpanNearWithSpanNot() throws Exception {\n    SpanTermQuery term1 = new SpanTermQuery(new Term(\"field\", \"eight\"));\n    SpanTermQuery term2 = new SpanTermQuery(new Term(\"field\", \"one\"));\n    SpanNearQuery near = new SpanNearQuery(new SpanQuery[] {term1, term2},\n                                           4, true);\n    SpanTermQuery hun = new SpanTermQuery(new Term(\"field\", \"hundred\"));\n    SpanTermQuery term3 = new SpanTermQuery(new Term(\"field\", \"forty\"));\n    SpanNearQuery exclude = new SpanNearQuery(new SpanQuery[] {hun, term3},\n                                              1, true);\n    \n    SpanNotQuery query = new SpanNotQuery(near, exclude);\n\n    checkHits(query, new int[]\n      {801, 821, 831, 851, 861, 871, 881, 891});\n\n    assertTrue(searcher.explain(query, 801).getValue() > 0.0f);\n    assertTrue(searcher.explain(query, 891).getValue() > 0.0f);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"040b4284d3a067410ea34d7b29ca012f0b8d8d27":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["040b4284d3a067410ea34d7b29ca012f0b8d8d27"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["040b4284d3a067410ea34d7b29ca012f0b8d8d27"],"040b4284d3a067410ea34d7b29ca012f0b8d8d27":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}