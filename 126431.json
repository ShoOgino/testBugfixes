{"path":"lucene/core/src/java/org/apache/lucene/util/LegacyNumericUtils.IntRangeBuilder#addRange(int,int,int).mjava","commits":[{"id":"770342641f7b505eaa8dccdc666158bff2419109","date":1449868421,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/LegacyNumericUtils.IntRangeBuilder#addRange(int,int,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/NumericUtils.IntRangeBuilder#addRange(int,int,int).mjava","sourceNew":"    /**\n     * Overwrite this method, if you like to receive the raw int range bounds.\n     * You can use this for e.g. debugging purposes (print out range bounds).\n     */\n    public void addRange(final int min, final int max, final int shift) {\n      final BytesRefBuilder minBytes = new BytesRefBuilder(), maxBytes = new BytesRefBuilder();\n      intToPrefixCodedBytes(min, shift, minBytes);\n      intToPrefixCodedBytes(max, shift, maxBytes);\n      addRange(minBytes.get(), maxBytes.get());\n    }\n\n","sourceOld":"    /**\n     * Overwrite this method, if you like to receive the raw int range bounds.\n     * You can use this for e.g. debugging purposes (print out range bounds).\n     */\n    public void addRange(final int min, final int max, final int shift) {\n      final BytesRefBuilder minBytes = new BytesRefBuilder(), maxBytes = new BytesRefBuilder();\n      intToPrefixCodedBytes(min, shift, minBytes);\n      intToPrefixCodedBytes(max, shift, maxBytes);\n      addRange(minBytes.get(), maxBytes.get());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"651ed0c260e4184c8a85ae7e1c155a4415f2e6e2","date":1455407361,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/util/LegacyNumericUtils.IntRangeBuilder#addRange(int,int,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/LegacyNumericUtils.IntRangeBuilder#addRange(int,int,int).mjava","sourceNew":"    /**\n     * Overwrite this method, if you like to receive the raw int range bounds.\n     * You can use this for e.g. debugging purposes (print out range bounds).\n     */\n    public void addRange(final int min, final int max, final int shift) {\n      final BytesRefBuilder minBytes = new BytesRefBuilder(), maxBytes = new BytesRefBuilder();\n      intToPrefixCoded(min, shift, minBytes);\n      intToPrefixCoded(max, shift, maxBytes);\n      addRange(minBytes.get(), maxBytes.get());\n    }\n\n","sourceOld":"    /**\n     * Overwrite this method, if you like to receive the raw int range bounds.\n     * You can use this for e.g. debugging purposes (print out range bounds).\n     */\n    public void addRange(final int min, final int max, final int shift) {\n      final BytesRefBuilder minBytes = new BytesRefBuilder(), maxBytes = new BytesRefBuilder();\n      intToPrefixCodedBytes(min, shift, minBytes);\n      intToPrefixCodedBytes(max, shift, maxBytes);\n      addRange(minBytes.get(), maxBytes.get());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5af5ba0166322092193d4c29880b0f7670fc7ca0","date":1471440525,"type":5,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/backward-codecs/src/java/org/apache/lucene/legacy/LegacyNumericUtils.IntRangeBuilder#addRange(int,int,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/LegacyNumericUtils.IntRangeBuilder#addRange(int,int,int).mjava","sourceNew":"    /**\n     * Overwrite this method, if you like to receive the raw int range bounds.\n     * You can use this for e.g. debugging purposes (print out range bounds).\n     */\n    public void addRange(final int min, final int max, final int shift) {\n      final BytesRefBuilder minBytes = new BytesRefBuilder(), maxBytes = new BytesRefBuilder();\n      intToPrefixCoded(min, shift, minBytes);\n      intToPrefixCoded(max, shift, maxBytes);\n      addRange(minBytes.get(), maxBytes.get());\n    }\n\n","sourceOld":"    /**\n     * Overwrite this method, if you like to receive the raw int range bounds.\n     * You can use this for e.g. debugging purposes (print out range bounds).\n     */\n    public void addRange(final int min, final int max, final int shift) {\n      final BytesRefBuilder minBytes = new BytesRefBuilder(), maxBytes = new BytesRefBuilder();\n      intToPrefixCoded(min, shift, minBytes);\n      intToPrefixCoded(max, shift, maxBytes);\n      addRange(minBytes.get(), maxBytes.get());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2c8bedceb91e64a3f0e831450058fc4a76d2c0a6","date":1471496851,"type":5,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/backward-codecs/src/java/org/apache/lucene/legacy/LegacyNumericUtils.IntRangeBuilder#addRange(int,int,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/LegacyNumericUtils.IntRangeBuilder#addRange(int,int,int).mjava","sourceNew":"    /**\n     * Overwrite this method, if you like to receive the raw int range bounds.\n     * You can use this for e.g. debugging purposes (print out range bounds).\n     */\n    public void addRange(final int min, final int max, final int shift) {\n      final BytesRefBuilder minBytes = new BytesRefBuilder(), maxBytes = new BytesRefBuilder();\n      intToPrefixCoded(min, shift, minBytes);\n      intToPrefixCoded(max, shift, maxBytes);\n      addRange(minBytes.get(), maxBytes.get());\n    }\n\n","sourceOld":"    /**\n     * Overwrite this method, if you like to receive the raw int range bounds.\n     * You can use this for e.g. debugging purposes (print out range bounds).\n     */\n    public void addRange(final int min, final int max, final int shift) {\n      final BytesRefBuilder minBytes = new BytesRefBuilder(), maxBytes = new BytesRefBuilder();\n      intToPrefixCoded(min, shift, minBytes);\n      intToPrefixCoded(max, shift, maxBytes);\n      addRange(minBytes.get(), maxBytes.get());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"403d05f7f8d69b65659157eff1bc1d2717f04c66","date":1471692961,"type":5,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/backward-codecs/src/java/org/apache/lucene/legacy/LegacyNumericUtils.IntRangeBuilder#addRange(int,int,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/LegacyNumericUtils.IntRangeBuilder#addRange(int,int,int).mjava","sourceNew":"    /**\n     * Overwrite this method, if you like to receive the raw int range bounds.\n     * You can use this for e.g. debugging purposes (print out range bounds).\n     */\n    public void addRange(final int min, final int max, final int shift) {\n      final BytesRefBuilder minBytes = new BytesRefBuilder(), maxBytes = new BytesRefBuilder();\n      intToPrefixCoded(min, shift, minBytes);\n      intToPrefixCoded(max, shift, maxBytes);\n      addRange(minBytes.get(), maxBytes.get());\n    }\n\n","sourceOld":"    /**\n     * Overwrite this method, if you like to receive the raw int range bounds.\n     * You can use this for e.g. debugging purposes (print out range bounds).\n     */\n    public void addRange(final int min, final int max, final int shift) {\n      final BytesRefBuilder minBytes = new BytesRefBuilder(), maxBytes = new BytesRefBuilder();\n      intToPrefixCoded(min, shift, minBytes);\n      intToPrefixCoded(max, shift, maxBytes);\n      addRange(minBytes.get(), maxBytes.get());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":5,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/backward-codecs/src/java/org/apache/lucene/legacy/LegacyNumericUtils.IntRangeBuilder#addRange(int,int,int).mjava","pathOld":"lucene/core/src/java/org/apache/lucene/util/LegacyNumericUtils.IntRangeBuilder#addRange(int,int,int).mjava","sourceNew":"    /**\n     * Overwrite this method, if you like to receive the raw int range bounds.\n     * You can use this for e.g. debugging purposes (print out range bounds).\n     */\n    public void addRange(final int min, final int max, final int shift) {\n      final BytesRefBuilder minBytes = new BytesRefBuilder(), maxBytes = new BytesRefBuilder();\n      intToPrefixCoded(min, shift, minBytes);\n      intToPrefixCoded(max, shift, maxBytes);\n      addRange(minBytes.get(), maxBytes.get());\n    }\n\n","sourceOld":"    /**\n     * Overwrite this method, if you like to receive the raw int range bounds.\n     * You can use this for e.g. debugging purposes (print out range bounds).\n     */\n    public void addRange(final int min, final int max, final int shift) {\n      final BytesRefBuilder minBytes = new BytesRefBuilder(), maxBytes = new BytesRefBuilder();\n      intToPrefixCoded(min, shift, minBytes);\n      intToPrefixCoded(max, shift, maxBytes);\n      addRange(minBytes.get(), maxBytes.get());\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"403d05f7f8d69b65659157eff1bc1d2717f04c66":["651ed0c260e4184c8a85ae7e1c155a4415f2e6e2","2c8bedceb91e64a3f0e831450058fc4a76d2c0a6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5af5ba0166322092193d4c29880b0f7670fc7ca0":["651ed0c260e4184c8a85ae7e1c155a4415f2e6e2"],"2c8bedceb91e64a3f0e831450058fc4a76d2c0a6":["651ed0c260e4184c8a85ae7e1c155a4415f2e6e2","5af5ba0166322092193d4c29880b0f7670fc7ca0"],"770342641f7b505eaa8dccdc666158bff2419109":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["651ed0c260e4184c8a85ae7e1c155a4415f2e6e2","403d05f7f8d69b65659157eff1bc1d2717f04c66"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["403d05f7f8d69b65659157eff1bc1d2717f04c66"],"651ed0c260e4184c8a85ae7e1c155a4415f2e6e2":["770342641f7b505eaa8dccdc666158bff2419109"]},"commit2Childs":{"403d05f7f8d69b65659157eff1bc1d2717f04c66":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["770342641f7b505eaa8dccdc666158bff2419109"],"5af5ba0166322092193d4c29880b0f7670fc7ca0":["2c8bedceb91e64a3f0e831450058fc4a76d2c0a6"],"2c8bedceb91e64a3f0e831450058fc4a76d2c0a6":["403d05f7f8d69b65659157eff1bc1d2717f04c66"],"770342641f7b505eaa8dccdc666158bff2419109":["651ed0c260e4184c8a85ae7e1c155a4415f2e6e2"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"651ed0c260e4184c8a85ae7e1c155a4415f2e6e2":["403d05f7f8d69b65659157eff1bc1d2717f04c66","5af5ba0166322092193d4c29880b0f7670fc7ca0","2c8bedceb91e64a3f0e831450058fc4a76d2c0a6","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}