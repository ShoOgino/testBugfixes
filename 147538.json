{"path":"lucene/src/java/org/apache/lucene/index/values/Bytes.BytesSortedSourceBase#binarySearch(BytesRef,BytesRef,int,int).mjava","commits":[{"id":"85eb75e0c0203e44dcf686f35876cf6080f3a671","date":1317221550,"type":1,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/values/Bytes.BytesSortedSourceBase#binarySearch(BytesRef,BytesRef,int,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/Bytes.BytesBaseSortedSource#binarySearch(BytesRef,BytesRef,int,int).mjava","sourceNew":"    protected int binarySearch(BytesRef b, BytesRef bytesRef, int low,\n        int high) {\n      int mid = 0;\n      while (low <= high) {\n        mid = (low + high) >>> 1;\n        deref(mid, bytesRef);\n        final int cmp = comp.compare(bytesRef, b);\n        if (cmp < 0) {\n          low = mid + 1;\n        } else if (cmp > 0) {\n          high = mid - 1;\n        } else {\n          return mid;\n        }\n      }\n      assert comp.compare(bytesRef, b) != 0;\n      return -(low + 1);\n    }\n\n","sourceOld":"    protected int binarySearch(BytesRef b, BytesRef bytesRef, int low,\n        int high) {\n      int mid = 0;\n      while (low <= high) {\n        mid = (low + high) >>> 1;\n        deref(mid, bytesRef);\n        final int cmp = comp.compare(bytesRef, b);\n        if (cmp < 0) {\n          low = mid + 1;\n        } else if (cmp > 0) {\n          high = mid - 1;\n        } else {\n          return mid;\n        }\n      }\n      assert comp.compare(bytesRef, b) != 0;\n      return -(low + 1);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e128967bca58657bc0039d4bfe631e63e81f1977","date":1317978310,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/index/values/IndexDocValues.SortedSource#binarySearch(BytesRef,BytesRef,int,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/index/values/Bytes.BytesSortedSourceBase#binarySearch(BytesRef,BytesRef,int,int).mjava","sourceNew":"    protected int binarySearch(BytesRef b, BytesRef bytesRef, int low,\n        int high) {\n      int mid = 0;\n      while (low <= high) {\n        mid = (low + high) >>> 1;\n        getByOrd(mid, bytesRef);\n        final int cmp = comparator.compare(bytesRef, b);\n        if (cmp < 0) {\n          low = mid + 1;\n        } else if (cmp > 0) {\n          high = mid - 1;\n        } else {\n          return mid;\n        }\n      }\n      assert comparator.compare(bytesRef, b) != 0;\n      return -(low + 1);\n    }\n\n","sourceOld":"    protected int binarySearch(BytesRef b, BytesRef bytesRef, int low,\n        int high) {\n      int mid = 0;\n      while (low <= high) {\n        mid = (low + high) >>> 1;\n        deref(mid, bytesRef);\n        final int cmp = comp.compare(bytesRef, b);\n        if (cmp < 0) {\n          low = mid + 1;\n        } else if (cmp > 0) {\n          high = mid - 1;\n        } else {\n          return mid;\n        }\n      }\n      assert comp.compare(bytesRef, b) != 0;\n      return -(low + 1);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"85eb75e0c0203e44dcf686f35876cf6080f3a671":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e128967bca58657bc0039d4bfe631e63e81f1977":["85eb75e0c0203e44dcf686f35876cf6080f3a671"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e128967bca58657bc0039d4bfe631e63e81f1977"]},"commit2Childs":{"85eb75e0c0203e44dcf686f35876cf6080f3a671":["e128967bca58657bc0039d4bfe631e63e81f1977"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["85eb75e0c0203e44dcf686f35876cf6080f3a671"],"e128967bca58657bc0039d4bfe631e63e81f1977":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}