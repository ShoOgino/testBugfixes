{"path":"lucene/suggest/src/java/org/apache/lucene/search/suggest/DocumentExpressionDictionary.DocumentExpressionInputIterator#getWeight(int).mjava","commits":[{"id":"f6ff8992b4de8c3e2f3e4e363868e5f87eb19039","date":1382209267,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/DocumentExpressionDictionary.DocumentExpressionInputIterator#getWeight(int).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    protected long getWeight(int docId) {\n      return weightValues.longVal(docId);\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"557640e996995f56504248e3347a3c61c1923097","date":1383067984,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/DocumentExpressionDictionary.DocumentExpressionInputIterator#getWeight(int).mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/DocumentExpressionDictionary.DocumentExpressionInputIterator#getWeight(int).mjava","sourceNew":"    @Override\n    protected long getWeight(int docId) {\n      int subIndex = ReaderUtil.subIndex(docId, starts);\n      if (subIndex != currentLeafIndex) {\n        currentLeafIndex = subIndex;\n        try {\n          currentWeightValues = weightsValueSource.getValues(new HashMap<String, Object>(), leaves.get(currentLeafIndex));\n        } catch (IOException e) {\n          throw new RuntimeException();\n        }\n      }\n      return currentWeightValues.longVal(docId - starts[subIndex]);\n    }\n\n","sourceOld":"    @Override\n    protected long getWeight(int docId) {\n      return weightValues.longVal(docId);\n    }\n\n","bugFix":null,"bugIntro":["437e65c578cab603d9201916b0e285f3d68aff45"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"24730daba4a74cb3bd673ccacc4ddaee5963af02","date":1385133691,"type":5,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/suggest/src/java/org/apache/lucene/search/suggest/DocumentExpressionDictionary.DocumentExpressionInputIterator#getWeight(StoredDocument,int).mjava","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/DocumentExpressionDictionary.DocumentExpressionInputIterator#getWeight(int).mjava","sourceNew":"    /** \n     * Returns the weight for the current <code>docId</code> as computed \n     * by the <code>weightsValueSource</code>\n     * */\n    @Override\n    protected long getWeight(StoredDocument doc, int docId) {    \n      if (currentWeightValues == null) {\n        return 0;\n      }\n      int subIndex = ReaderUtil.subIndex(docId, starts);\n      if (subIndex != currentLeafIndex) {\n        currentLeafIndex = subIndex;\n        try {\n          currentWeightValues = weightsValueSource.getValues(new HashMap<String, Object>(), leaves.get(currentLeafIndex));\n        } catch (IOException e) {\n          throw new RuntimeException();\n        }\n      }\n      return currentWeightValues.longVal(docId - starts[subIndex]);\n    }\n\n","sourceOld":"    @Override\n    protected long getWeight(int docId) {\n      int subIndex = ReaderUtil.subIndex(docId, starts);\n      if (subIndex != currentLeafIndex) {\n        currentLeafIndex = subIndex;\n        try {\n          currentWeightValues = weightsValueSource.getValues(new HashMap<String, Object>(), leaves.get(currentLeafIndex));\n        } catch (IOException e) {\n          throw new RuntimeException();\n        }\n      }\n      return currentWeightValues.longVal(docId - starts[subIndex]);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"74f45af4339b0daf7a95c820ab88c1aea74fbce0","date":1387475327,"type":4,"author":"Michael McCandless","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/suggest/src/java/org/apache/lucene/search/suggest/DocumentExpressionDictionary.DocumentExpressionInputIterator#getWeight(int).mjava","sourceNew":null,"sourceOld":"    @Override\n    protected long getWeight(int docId) {\n      int subIndex = ReaderUtil.subIndex(docId, starts);\n      if (subIndex != currentLeafIndex) {\n        currentLeafIndex = subIndex;\n        try {\n          currentWeightValues = weightsValueSource.getValues(new HashMap<String, Object>(), leaves.get(currentLeafIndex));\n        } catch (IOException e) {\n          throw new RuntimeException();\n        }\n      }\n      return currentWeightValues.longVal(docId - starts[subIndex]);\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"24730daba4a74cb3bd673ccacc4ddaee5963af02":["557640e996995f56504248e3347a3c61c1923097"],"f6ff8992b4de8c3e2f3e4e363868e5f87eb19039":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":["557640e996995f56504248e3347a3c61c1923097","24730daba4a74cb3bd673ccacc4ddaee5963af02"],"557640e996995f56504248e3347a3c61c1923097":["f6ff8992b4de8c3e2f3e4e363868e5f87eb19039"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["24730daba4a74cb3bd673ccacc4ddaee5963af02"]},"commit2Childs":{"24730daba4a74cb3bd673ccacc4ddaee5963af02":["74f45af4339b0daf7a95c820ab88c1aea74fbce0","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"f6ff8992b4de8c3e2f3e4e363868e5f87eb19039":["557640e996995f56504248e3347a3c61c1923097"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["f6ff8992b4de8c3e2f3e4e363868e5f87eb19039"],"74f45af4339b0daf7a95c820ab88c1aea74fbce0":[],"557640e996995f56504248e3347a3c61c1923097":["24730daba4a74cb3bd673ccacc4ddaee5963af02","74f45af4339b0daf7a95c820ab88c1aea74fbce0"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["74f45af4339b0daf7a95c820ab88c1aea74fbce0","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}