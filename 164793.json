{"path":"solr/solrj/src/test/org/apache/solr/client/solrj/TestLBHttpSolrClient#waitForServer(int,LBHttpSolrClient,int,String).mjava","commits":[{"id":"bafca15d8e408346a67f4282ad1143b88023893b","date":1420034748,"type":1,"author":"Alan Woodward","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/TestLBHttpSolrClient#waitForServer(int,LBHttpSolrClient,int,String).mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/TestLBHttpSolrServer#waitForServer(int,LBHttpSolrServer,int,String).mjava","sourceNew":"  // wait maximum ms for serverName to come back up\n  private void waitForServer(int maximum, LBHttpSolrClient client, int nServers, String serverName) throws Exception {\n    long endTime = System.currentTimeMillis() + maximum;\n    while (System.currentTimeMillis() < endTime) {\n      QueryResponse resp;\n      try {\n        resp = client.query(new SolrQuery(\"*:*\"));\n      } catch (Exception e) {\n        log.warn(\"\", e);\n        continue;\n      }\n      String name = resp.getResults().get(0).getFieldValue(\"name\").toString();\n      if (name.equals(serverName))\n        return;\n    }\n  }\n\n","sourceOld":"  // wait maximum ms for serverName to come back up\n  private void waitForServer(int maximum, LBHttpSolrServer server, int nServers, String serverName) throws Exception {\n    long endTime = System.currentTimeMillis() + maximum;\n    while (System.currentTimeMillis() < endTime) {\n      QueryResponse resp;\n      try {\n        resp = server.query(new SolrQuery(\"*:*\"));\n      } catch (Exception e) {\n        log.warn(\"\", e);\n        continue;\n      }\n      String name = resp.getResults().get(0).getFieldValue(\"name\").toString();\n      if (name.equals(serverName))\n        return;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"bcf9886c8ff537aafde14de48ebf744f5673f08b","date":1439041198,"type":3,"author":"Ramkumar Aiyengar","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/TestLBHttpSolrClient#waitForServer(int,LBHttpSolrClient,int,String).mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/TestLBHttpSolrClient#waitForServer(int,LBHttpSolrClient,int,String).mjava","sourceNew":"  // wait maximum ms for serverName to come back up\n  private void waitForServer(int maxSeconds, LBHttpSolrClient client, int nServers, String serverName) throws Exception {\n    final TimeOut timeout = new TimeOut(maxSeconds, TimeUnit.SECONDS);\n    while (! timeout.hasTimedOut()) {\n      QueryResponse resp;\n      try {\n        resp = client.query(new SolrQuery(\"*:*\"));\n      } catch (Exception e) {\n        log.warn(\"\", e);\n        continue;\n      }\n      String name = resp.getResults().get(0).getFieldValue(\"name\").toString();\n      if (name.equals(serverName))\n        return;\n    }\n  }\n\n","sourceOld":"  // wait maximum ms for serverName to come back up\n  private void waitForServer(int maximum, LBHttpSolrClient client, int nServers, String serverName) throws Exception {\n    long endTime = System.currentTimeMillis() + maximum;\n    while (System.currentTimeMillis() < endTime) {\n      QueryResponse resp;\n      try {\n        resp = client.query(new SolrQuery(\"*:*\"));\n      } catch (Exception e) {\n        log.warn(\"\", e);\n        continue;\n      }\n      String name = resp.getResults().get(0).getFieldValue(\"name\").toString();\n      if (name.equals(serverName))\n        return;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d24a6ef30a2cc374f56b48f3f7e6eac53482eea8","date":1487554711,"type":3,"author":"markrmiller","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/TestLBHttpSolrClient#waitForServer(int,LBHttpSolrClient,int,String).mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/TestLBHttpSolrClient#waitForServer(int,LBHttpSolrClient,int,String).mjava","sourceNew":"  // wait maximum ms for serverName to come back up\n  private void waitForServer(int maxSeconds, LBHttpSolrClient client, int nServers, String serverName) throws Exception {\n    final TimeOut timeout = new TimeOut(maxSeconds, TimeUnit.SECONDS);\n    while (! timeout.hasTimedOut()) {\n      QueryResponse resp;\n      try {\n        resp = client.query(new SolrQuery(\"*:*\"));\n      } catch (Exception e) {\n        log.warn(\"\", e);\n        continue;\n      }\n      String name = resp.getResults().get(0).getFieldValue(\"name\").toString();\n      if (name.equals(serverName))\n        return;\n      \n      Thread.sleep(500);\n    }\n  }\n\n","sourceOld":"  // wait maximum ms for serverName to come back up\n  private void waitForServer(int maxSeconds, LBHttpSolrClient client, int nServers, String serverName) throws Exception {\n    final TimeOut timeout = new TimeOut(maxSeconds, TimeUnit.SECONDS);\n    while (! timeout.hasTimedOut()) {\n      QueryResponse resp;\n      try {\n        resp = client.query(new SolrQuery(\"*:*\"));\n      } catch (Exception e) {\n        log.warn(\"\", e);\n        continue;\n      }\n      String name = resp.getResults().get(0).getFieldValue(\"name\").toString();\n      if (name.equals(serverName))\n        return;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1d4bf9d5308dfef350829c28f2b3b2648df1e9b1","date":1513252583,"type":3,"author":"Andrzej Bialecki","isMerge":false,"pathNew":"solr/solrj/src/test/org/apache/solr/client/solrj/TestLBHttpSolrClient#waitForServer(int,LBHttpSolrClient,int,String).mjava","pathOld":"solr/solrj/src/test/org/apache/solr/client/solrj/TestLBHttpSolrClient#waitForServer(int,LBHttpSolrClient,int,String).mjava","sourceNew":"  // wait maximum ms for serverName to come back up\n  private void waitForServer(int maxSeconds, LBHttpSolrClient client, int nServers, String serverName) throws Exception {\n    final TimeOut timeout = new TimeOut(maxSeconds, TimeUnit.SECONDS, TimeSource.NANO_TIME);\n    while (! timeout.hasTimedOut()) {\n      QueryResponse resp;\n      try {\n        resp = client.query(new SolrQuery(\"*:*\"));\n      } catch (Exception e) {\n        log.warn(\"\", e);\n        continue;\n      }\n      String name = resp.getResults().get(0).getFieldValue(\"name\").toString();\n      if (name.equals(serverName))\n        return;\n      \n      Thread.sleep(500);\n    }\n  }\n\n","sourceOld":"  // wait maximum ms for serverName to come back up\n  private void waitForServer(int maxSeconds, LBHttpSolrClient client, int nServers, String serverName) throws Exception {\n    final TimeOut timeout = new TimeOut(maxSeconds, TimeUnit.SECONDS);\n    while (! timeout.hasTimedOut()) {\n      QueryResponse resp;\n      try {\n        resp = client.query(new SolrQuery(\"*:*\"));\n      } catch (Exception e) {\n        log.warn(\"\", e);\n        continue;\n      }\n      String name = resp.getResults().get(0).getFieldValue(\"name\").toString();\n      if (name.equals(serverName))\n        return;\n      \n      Thread.sleep(500);\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d24a6ef30a2cc374f56b48f3f7e6eac53482eea8":["bcf9886c8ff537aafde14de48ebf744f5673f08b"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"bcf9886c8ff537aafde14de48ebf744f5673f08b":["bafca15d8e408346a67f4282ad1143b88023893b"],"bafca15d8e408346a67f4282ad1143b88023893b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"1d4bf9d5308dfef350829c28f2b3b2648df1e9b1":["d24a6ef30a2cc374f56b48f3f7e6eac53482eea8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["1d4bf9d5308dfef350829c28f2b3b2648df1e9b1"]},"commit2Childs":{"d24a6ef30a2cc374f56b48f3f7e6eac53482eea8":["1d4bf9d5308dfef350829c28f2b3b2648df1e9b1"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["bafca15d8e408346a67f4282ad1143b88023893b"],"bcf9886c8ff537aafde14de48ebf744f5673f08b":["d24a6ef30a2cc374f56b48f3f7e6eac53482eea8"],"bafca15d8e408346a67f4282ad1143b88023893b":["bcf9886c8ff537aafde14de48ebf744f5673f08b"],"1d4bf9d5308dfef350829c28f2b3b2648df1e9b1":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}