{"path":"src/test/org/apache/lucene/index/TestMultiReader#testTermVectors().mjava","commits":[{"id":"770281b8a8459cafcdd2354b6a06078fea2d83c9","date":1077308096,"type":0,"author":"Doug Cutting","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestMultiReader#testTermVectors().mjava","pathOld":"/dev/null","sourceNew":"  public void testTermVectors() {\n    try {\n      MultiReader reader = new MultiReader(dir, readers);\n      assertTrue(reader != null);\n    } catch (IOException e) {\n      e.printStackTrace();\n      assertTrue(false);\n    }\n  }    \n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f653aecb322b74d99e6ecdb93765e453a3d7aa71","date":1082107025,"type":3,"author":"Christoph Goller","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestMultiReader#testTermVectors().mjava","pathOld":"src/test/org/apache/lucene/index/TestMultiReader#testTermVectors().mjava","sourceNew":"  public void testTermVectors() {\n    try {\n      MultiReader reader = new MultiReader(dir, sis, false, readers);\n      assertTrue(reader != null);\n    } catch (IOException e) {\n      e.printStackTrace();\n      assertTrue(false);\n    }\n  }    \n\n","sourceOld":"  public void testTermVectors() {\n    try {\n      MultiReader reader = new MultiReader(dir, readers);\n      assertTrue(reader != null);\n    } catch (IOException e) {\n      e.printStackTrace();\n      assertTrue(false);\n    }\n  }    \n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7ae4efa0568cffc60d08c3c5f45974bf7b2f86c5","date":1091827971,"type":3,"author":"Daniel Naber","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestMultiReader#testTermVectors().mjava","pathOld":"src/test/org/apache/lucene/index/TestMultiReader#testTermVectors().mjava","sourceNew":"  public void testTermVectors() {\n    MultiReader reader = new MultiReader(dir, sis, false, readers);\n    assertTrue(reader != null);\n  }    \n\n","sourceOld":"  public void testTermVectors() {\n    try {\n      MultiReader reader = new MultiReader(dir, sis, false, readers);\n      assertTrue(reader != null);\n    } catch (IOException e) {\n      e.printStackTrace();\n      assertTrue(false);\n    }\n  }    \n\n","bugFix":null,"bugIntro":["f7f2552b9f13037c62acd400d263d1e9262d6e4e"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"09b1d6bb7960af6daf734195c6353ec14a0c95c0","date":1169589665,"type":3,"author":"Daniel Naber","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestMultiReader#testTermVectors().mjava","pathOld":"src/test/org/apache/lucene/index/TestMultiReader#testTermVectors().mjava","sourceNew":"  public void testTermVectors() {\n    MultiReader reader = new MultiReader(dir, sis, false, readers);\n    assertTrue(reader != null);\n  }\n\n","sourceOld":"  public void testTermVectors() {\n    MultiReader reader = new MultiReader(dir, sis, false, readers);\n    assertTrue(reader != null);\n  }    \n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"f7f2552b9f13037c62acd400d263d1e9262d6e4e","date":1185490328,"type":3,"author":"Michael Busch","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestMultiReader#testTermVectors().mjava","pathOld":"src/test/org/apache/lucene/index/TestMultiReader#testTermVectors().mjava","sourceNew":"  public void testTermVectors() {\n    MultiSegmentReader reader = new MultiSegmentReader(dir, sis, false, readers);\n    assertTrue(reader != null);\n  }\n\n","sourceOld":"  public void testTermVectors() {\n    MultiReader reader = new MultiReader(dir, sis, false, readers);\n    assertTrue(reader != null);\n  }\n\n","bugFix":["7ae4efa0568cffc60d08c3c5f45974bf7b2f86c5"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"125b5699f11b58d9be0820c6ce8b1648812902e8","date":1190273227,"type":4,"author":"Michael Busch","isMerge":false,"pathNew":"/dev/null","pathOld":"src/test/org/apache/lucene/index/TestMultiReader#testTermVectors().mjava","sourceNew":null,"sourceOld":"  public void testTermVectors() {\n    MultiSegmentReader reader = new MultiSegmentReader(dir, sis, false, readers);\n    assertTrue(reader != null);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"770281b8a8459cafcdd2354b6a06078fea2d83c9":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"125b5699f11b58d9be0820c6ce8b1648812902e8":["f7f2552b9f13037c62acd400d263d1e9262d6e4e"],"7ae4efa0568cffc60d08c3c5f45974bf7b2f86c5":["f653aecb322b74d99e6ecdb93765e453a3d7aa71"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"f7f2552b9f13037c62acd400d263d1e9262d6e4e":["09b1d6bb7960af6daf734195c6353ec14a0c95c0"],"f653aecb322b74d99e6ecdb93765e453a3d7aa71":["770281b8a8459cafcdd2354b6a06078fea2d83c9"],"09b1d6bb7960af6daf734195c6353ec14a0c95c0":["7ae4efa0568cffc60d08c3c5f45974bf7b2f86c5"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["125b5699f11b58d9be0820c6ce8b1648812902e8"]},"commit2Childs":{"770281b8a8459cafcdd2354b6a06078fea2d83c9":["f653aecb322b74d99e6ecdb93765e453a3d7aa71"],"125b5699f11b58d9be0820c6ce8b1648812902e8":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"7ae4efa0568cffc60d08c3c5f45974bf7b2f86c5":["09b1d6bb7960af6daf734195c6353ec14a0c95c0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["770281b8a8459cafcdd2354b6a06078fea2d83c9"],"f7f2552b9f13037c62acd400d263d1e9262d6e4e":["125b5699f11b58d9be0820c6ce8b1648812902e8"],"f653aecb322b74d99e6ecdb93765e453a3d7aa71":["7ae4efa0568cffc60d08c3c5f45974bf7b2f86c5"],"09b1d6bb7960af6daf734195c6353ec14a0c95c0":["f7f2552b9f13037c62acd400d263d1e9262d6e4e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}