{"path":"solr/core/src/java/org/apache/solr/core/CoreMaps#addPersistOneCore(Config,SolrResourceLoader,CoreDescriptor,String,List[SolrCoreXMLDef]).mjava","commits":[{"id":"c7c73b6560033b6dcc828fbcc94ba9315c20f3c0","date":1366659310,"type":0,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/CoreMaps#addPersistOneCore(Config,SolrResourceLoader,CoreDescriptor,String,List[SolrCoreXMLDef]).mjava","pathOld":"/dev/null","sourceNew":"  protected void addPersistOneCore(Config cfg, SolrResourceLoader loader,\n      CoreDescriptor dcore, String origCoreName,\n      List<SolrCoreXMLDef> solrCoreXMLDefs) throws XPathExpressionException {\n    \n    String coreName = dcore.getProperty(CoreDescriptor.CORE_NAME);\n    \n    Map<String,String> coreAttribs = new HashMap<String,String>();\n\n    CloudDescriptor cd = dcore.getCloudDescriptor();\n    String collection = null;\n    if (cd != null) collection = cd.getCollectionName();\n\n    if (origCoreName == null) {\n      origCoreName = coreName;\n    }\n    \n    Properties properties = dcore.getCoreProperties();\n    Node node = null;\n    if (cfg != null) {\n      node = cfg.getNode(\"/solr/cores/core[@name='\" + origCoreName + \"']\",\n          false);\n    }\n    \n    coreAttribs.put(CoreDescriptor.CORE_NAME, coreName);\n    \n    addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_INSTDIR, dcore.getRawInstanceDir(), null);\n\n    coreAttribs.put(CoreDescriptor.CORE_COLLECTION,\n        StringUtils.isNotBlank(collection) ? collection : dcore.getName());\n    \n    addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_DATADIR, dcore.getDataDir(), null);\n    addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_ULOGDIR, dcore.getUlogDir(), null);\n    addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_TRANSIENT, Boolean.toString(dcore.isTransient()), null);\n    addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_LOADONSTARTUP, Boolean.toString(dcore.isLoadOnStartup()), null);\n    \n    addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_COLLECTION,\n        collection, dcore.getName());\n    \n    String shard = null;\n    String roles = null;\n    if (cd != null) {\n      shard = cd.getShardId();\n      roles = cd.getRoles();\n    }\n    addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_SHARD,\n        shard, null);\n    \n    addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_ROLES,\n        roles, null);\n\n    coreAttribs.put(CoreDescriptor.CORE_LOADONSTARTUP,\n        Boolean.toString(dcore.isLoadOnStartup()));\n    coreAttribs.put(CoreDescriptor.CORE_TRANSIENT,\n        Boolean.toString(dcore.isTransient()));\n    \n\n    SolrXMLSerializer.SolrCoreXMLDef solrCoreXMLDef = new SolrXMLSerializer.SolrCoreXMLDef();\n    solrCoreXMLDef.coreAttribs = coreAttribs;\n    solrCoreXMLDef.coreProperties = properties;\n    solrCoreXMLDefs.add(solrCoreXMLDef);\n\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9409650933cc688e77e565092a25e58adfc2e18d","date":1366663164,"type":5,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/core/SolrCores#addCoreToPersistList(Config,SolrResourceLoader,CoreDescriptor,String,List[SolrCoreXMLDef]).mjava","pathOld":"solr/core/src/java/org/apache/solr/core/CoreMaps#addPersistOneCore(Config,SolrResourceLoader,CoreDescriptor,String,List[SolrCoreXMLDef]).mjava","sourceNew":"  protected void addCoreToPersistList(Config cfg, SolrResourceLoader loader,\n      CoreDescriptor dcore, String origCoreName,\n      List<SolrCoreXMLDef> solrCoreXMLDefs) throws XPathExpressionException {\n    \n    String coreName = dcore.getProperty(CoreDescriptor.CORE_NAME);\n    \n    Map<String,String> coreAttribs = new HashMap<String,String>();\n\n    CloudDescriptor cd = dcore.getCloudDescriptor();\n    String collection = null;\n    if (cd != null) collection = cd.getCollectionName();\n\n    if (origCoreName == null) {\n      origCoreName = coreName;\n    }\n    \n    Properties properties = dcore.getCoreProperties();\n    Node node = null;\n    if (cfg != null) {\n      node = cfg.getNode(\"/solr/cores/core[@name='\" + origCoreName + \"']\",\n          false);\n    }\n    \n    coreAttribs.put(CoreDescriptor.CORE_NAME, coreName);\n    \n    addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_INSTDIR, dcore.getRawInstanceDir(), null);\n\n    coreAttribs.put(CoreDescriptor.CORE_COLLECTION,\n        StringUtils.isNotBlank(collection) ? collection : dcore.getName());\n    \n    addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_DATADIR, dcore.getDataDir(), null);\n    addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_ULOGDIR, dcore.getUlogDir(), null);\n    addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_TRANSIENT, Boolean.toString(dcore.isTransient()), null);\n    addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_LOADONSTARTUP, Boolean.toString(dcore.isLoadOnStartup()), null);\n    \n    addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_COLLECTION,\n        collection, dcore.getName());\n    \n    String shard = null;\n    String roles = null;\n    if (cd != null) {\n      shard = cd.getShardId();\n      roles = cd.getRoles();\n    }\n    addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_SHARD,\n        shard, null);\n    \n    addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_ROLES,\n        roles, null);\n\n    coreAttribs.put(CoreDescriptor.CORE_LOADONSTARTUP,\n        Boolean.toString(dcore.isLoadOnStartup()));\n    coreAttribs.put(CoreDescriptor.CORE_TRANSIENT,\n        Boolean.toString(dcore.isTransient()));\n    \n\n    SolrXMLSerializer.SolrCoreXMLDef solrCoreXMLDef = new SolrXMLSerializer.SolrCoreXMLDef();\n    solrCoreXMLDef.coreAttribs = coreAttribs;\n    solrCoreXMLDef.coreProperties = properties;\n    solrCoreXMLDefs.add(solrCoreXMLDef);\n\n  }\n\n","sourceOld":"  protected void addPersistOneCore(Config cfg, SolrResourceLoader loader,\n      CoreDescriptor dcore, String origCoreName,\n      List<SolrCoreXMLDef> solrCoreXMLDefs) throws XPathExpressionException {\n    \n    String coreName = dcore.getProperty(CoreDescriptor.CORE_NAME);\n    \n    Map<String,String> coreAttribs = new HashMap<String,String>();\n\n    CloudDescriptor cd = dcore.getCloudDescriptor();\n    String collection = null;\n    if (cd != null) collection = cd.getCollectionName();\n\n    if (origCoreName == null) {\n      origCoreName = coreName;\n    }\n    \n    Properties properties = dcore.getCoreProperties();\n    Node node = null;\n    if (cfg != null) {\n      node = cfg.getNode(\"/solr/cores/core[@name='\" + origCoreName + \"']\",\n          false);\n    }\n    \n    coreAttribs.put(CoreDescriptor.CORE_NAME, coreName);\n    \n    addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_INSTDIR, dcore.getRawInstanceDir(), null);\n\n    coreAttribs.put(CoreDescriptor.CORE_COLLECTION,\n        StringUtils.isNotBlank(collection) ? collection : dcore.getName());\n    \n    addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_DATADIR, dcore.getDataDir(), null);\n    addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_ULOGDIR, dcore.getUlogDir(), null);\n    addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_TRANSIENT, Boolean.toString(dcore.isTransient()), null);\n    addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_LOADONSTARTUP, Boolean.toString(dcore.isLoadOnStartup()), null);\n    \n    addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_COLLECTION,\n        collection, dcore.getName());\n    \n    String shard = null;\n    String roles = null;\n    if (cd != null) {\n      shard = cd.getShardId();\n      roles = cd.getRoles();\n    }\n    addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_SHARD,\n        shard, null);\n    \n    addCoreProperty(coreAttribs, loader, node, CoreDescriptor.CORE_ROLES,\n        roles, null);\n\n    coreAttribs.put(CoreDescriptor.CORE_LOADONSTARTUP,\n        Boolean.toString(dcore.isLoadOnStartup()));\n    coreAttribs.put(CoreDescriptor.CORE_TRANSIENT,\n        Boolean.toString(dcore.isTransient()));\n    \n\n    SolrXMLSerializer.SolrCoreXMLDef solrCoreXMLDef = new SolrXMLSerializer.SolrCoreXMLDef();\n    solrCoreXMLDef.coreAttribs = coreAttribs;\n    solrCoreXMLDef.coreProperties = properties;\n    solrCoreXMLDefs.add(solrCoreXMLDef);\n\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"9409650933cc688e77e565092a25e58adfc2e18d":["c7c73b6560033b6dcc828fbcc94ba9315c20f3c0"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c7c73b6560033b6dcc828fbcc94ba9315c20f3c0":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9409650933cc688e77e565092a25e58adfc2e18d"]},"commit2Childs":{"9409650933cc688e77e565092a25e58adfc2e18d":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c7c73b6560033b6dcc828fbcc94ba9315c20f3c0"],"c7c73b6560033b6dcc828fbcc94ba9315c20f3c0":["9409650933cc688e77e565092a25e58adfc2e18d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}