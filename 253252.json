{"path":"solr/core/src/java/org/apache/solr/search/facet/FacetRangeProcessor#getCalcForField(SchemaField).mjava","commits":[{"id":"a56a9893014b284af4d1af451e6c02e7ffdf5b6e","date":1590065972,"type":1,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/facet/FacetRangeProcessor#getCalcForField(SchemaField).mjava","pathOld":"solr/core/src/java/org/apache/solr/search/facet/FacetRangeProcessor[FacetRange]#getCalcForField(SchemaField).mjava","sourceNew":"  /**\n   * Helper method used in processor constructor\n   * @return a <code>Calc</code> instance with {@link Calc#bitsToValue} and {@link Calc#bitsToSortableBits} methods suitable for the specified field.\n   */\n  private static Calc getCalcForField(SchemaField sf) {\n    final FieldType ft = sf.getType();\n    if (ft instanceof TrieField || ft.isPointField()) {\n      switch (ft.getNumberType()) {\n        case FLOAT:\n          return new FloatCalc(sf);\n        case DOUBLE:\n          return new DoubleCalc(sf);\n        case INTEGER:\n          return new IntCalc(sf);\n        case LONG:\n          return new LongCalc(sf);\n        case DATE:\n          return new DateCalc(sf, null);\n        default:\n          throw new SolrException\n              (SolrException.ErrorCode.BAD_REQUEST,\n                  \"Unable to range facet on numeric field of unexpected type:\" + sf.getName());\n      }\n    } else if (ft instanceof CurrencyFieldType) {\n      return new CurrencyCalc(sf);\n    } else if (ft instanceof DateRangeField) {\n      return new DateCalc(sf, null);\n    }\n\n    // if we made it this far, we have no idea what it is...\n    throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n        \"Unable to range facet on field:\" + sf.getName());\n  }\n\n","sourceOld":"  /**\n   * Helper method used in processor constructor\n   * @return a <code>Calc</code> instance with {@link Calc#bitsToValue} and {@link Calc#bitsToSortableBits} methods suitable for the specified field.\n   */\n  private static Calc getCalcForField(SchemaField sf) {\n    final FieldType ft = sf.getType();\n    if (ft instanceof TrieField || ft.isPointField()) {\n      switch (ft.getNumberType()) {\n        case FLOAT:\n          return new FloatCalc(sf);\n        case DOUBLE:\n          return new DoubleCalc(sf);\n        case INTEGER:\n          return new IntCalc(sf);\n        case LONG:\n          return new LongCalc(sf);\n        case DATE:\n          return new DateCalc(sf, null);\n        default:\n          throw new SolrException\n              (SolrException.ErrorCode.BAD_REQUEST,\n                  \"Unable to range facet on numeric field of unexpected type:\" + sf.getName());\n      }\n    } else if (ft instanceof CurrencyFieldType) {\n      return new CurrencyCalc(sf);\n    } else if (ft instanceof DateRangeField) {\n      return new DateCalc(sf, null);\n    }\n\n    // if we made it this far, we have no idea what it is...\n    throw new SolrException(SolrException.ErrorCode.BAD_REQUEST,\n                            \"Unable to range facet on field:\" + sf.getName());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a56a9893014b284af4d1af451e6c02e7ffdf5b6e":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a56a9893014b284af4d1af451e6c02e7ffdf5b6e"]},"commit2Childs":{"a56a9893014b284af4d1af451e6c02e7ffdf5b6e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a56a9893014b284af4d1af451e6c02e7ffdf5b6e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}