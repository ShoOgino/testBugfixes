{"path":"lucene/core/src/test/org/apache/lucene/codecs/compressing/AbstractTestCompressionMode#compress(byte[]).mjava","commits":[{"id":"1a51ec81f1fd009bf893bd88ec1c7b964fae6fab","date":1354403647,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/codecs/compressing/AbstractTestCompressionMode#compress(byte[]).mjava","pathOld":"lucene/codecs/src/test/org/apache/lucene/codecs/compressing/AbstractTestCompressionMode#compress(byte[]).mjava","sourceNew":"  byte[] compress(byte[] decompressed) throws IOException {\n    Compressor compressor = mode.newCompressor();\n    return compress(compressor, decompressed);\n  }\n\n","sourceOld":"  byte[] compress(byte[] decompressed) throws IOException {\n    Compressor compressor = mode.newCompressor();\n    return compress(compressor, decompressed);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"407687e67faf6e1f02a211ca078d8e3eed631027","date":1355157407,"type":1,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/codecs/compressing/AbstractTestCompressionMode#compress(byte[]).mjava","pathOld":"lucene/codecs/src/test/org/apache/lucene/codecs/compressing/AbstractTestCompressionMode#compress(byte[]).mjava","sourceNew":"  byte[] compress(byte[] decompressed) throws IOException {\n    Compressor compressor = mode.newCompressor();\n    return compress(compressor, decompressed);\n  }\n\n","sourceOld":"  byte[] compress(byte[] decompressed) throws IOException {\n    Compressor compressor = mode.newCompressor();\n    return compress(compressor, decompressed);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"175e4d353e3036fad2ad89ae6815c4418b4c3c8e","date":1378375735,"type":4,"author":"Adrien Grand","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/core/src/test/org/apache/lucene/codecs/compressing/AbstractTestCompressionMode#compress(byte[]).mjava","sourceNew":null,"sourceOld":"  byte[] compress(byte[] decompressed) throws IOException {\n    Compressor compressor = mode.newCompressor();\n    return compress(compressor, decompressed);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"175e4d353e3036fad2ad89ae6815c4418b4c3c8e":["1a51ec81f1fd009bf893bd88ec1c7b964fae6fab"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"407687e67faf6e1f02a211ca078d8e3eed631027":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","1a51ec81f1fd009bf893bd88ec1c7b964fae6fab"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["175e4d353e3036fad2ad89ae6815c4418b4c3c8e"],"1a51ec81f1fd009bf893bd88ec1c7b964fae6fab":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"175e4d353e3036fad2ad89ae6815c4418b4c3c8e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["407687e67faf6e1f02a211ca078d8e3eed631027","1a51ec81f1fd009bf893bd88ec1c7b964fae6fab"],"407687e67faf6e1f02a211ca078d8e3eed631027":[],"1a51ec81f1fd009bf893bd88ec1c7b964fae6fab":["175e4d353e3036fad2ad89ae6815c4418b4c3c8e","407687e67faf6e1f02a211ca078d8e3eed631027"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["407687e67faf6e1f02a211ca078d8e3eed631027","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}