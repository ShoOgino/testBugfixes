{"path":"lucene/facet/src/test/org/apache/lucene/facet/FacetTestBase#getFacetSearchParams(FacetIndexingParams,FacetRequest...).mjava","commits":[{"id":"d4c6c7f3cda7a0595cabd16e5e9107ca29852708","date":1355402234,"type":0,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/FacetTestBase#getFacetSearchParams(FacetIndexingParams,FacetRequest...).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Faceted Search Params for the test. Sub classes should override in order to\n   * test with different faceted search params.\n   */\n  protected FacetSearchParams getFacetSearchParams(FacetIndexingParams iParams, FacetRequest... facetRequests) {\n    return new FacetSearchParams(Arrays.asList(facetRequests), iParams);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":0,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/FacetTestBase#getFacetSearchParams(FacetIndexingParams,FacetRequest...).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Faceted Search Params for the test. Sub classes should override in order to\n   * test with different faceted search params.\n   */\n  protected FacetSearchParams getFacetSearchParams(FacetIndexingParams iParams, FacetRequest... facetRequests) {\n    return new FacetSearchParams(Arrays.asList(facetRequests), iParams);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f96e4a056f7ee1bafbfb8a06c5bd93f7708e560d","date":1358784296,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/FacetTestBase#getFacetSearchParams(FacetIndexingParams,FacetRequest...).mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/FacetTestBase#getFacetSearchParams(FacetIndexingParams,FacetRequest...).mjava","sourceNew":"  /**\n   * Faceted Search Params for the test. Sub classes should override in order to\n   * test with different faceted search params.\n   */\n  protected FacetSearchParams getFacetSearchParams(FacetIndexingParams iParams, FacetRequest... facetRequests) {\n    return new FacetSearchParams(iParams, facetRequests);\n  }\n\n","sourceOld":"  /**\n   * Faceted Search Params for the test. Sub classes should override in order to\n   * test with different faceted search params.\n   */\n  protected FacetSearchParams getFacetSearchParams(FacetIndexingParams iParams, FacetRequest... facetRequests) {\n    return new FacetSearchParams(Arrays.asList(facetRequests), iParams);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"07155cdd910937cdf6877e48884d5782845c8b8b","date":1358796205,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/facet/src/test/org/apache/lucene/facet/FacetTestBase#getFacetSearchParams(FacetIndexingParams,FacetRequest...).mjava","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/FacetTestBase#getFacetSearchParams(FacetIndexingParams,FacetRequest...).mjava","sourceNew":"  /**\n   * Faceted Search Params for the test. Sub classes should override in order to\n   * test with different faceted search params.\n   */\n  protected FacetSearchParams getFacetSearchParams(FacetIndexingParams iParams, FacetRequest... facetRequests) {\n    return new FacetSearchParams(iParams, facetRequests);\n  }\n\n","sourceOld":"  /**\n   * Faceted Search Params for the test. Sub classes should override in order to\n   * test with different faceted search params.\n   */\n  protected FacetSearchParams getFacetSearchParams(FacetIndexingParams iParams, FacetRequest... facetRequests) {\n    return new FacetSearchParams(Arrays.asList(facetRequests), iParams);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d33e19a97046248623a7591aeaa6547233fd15e2","date":1385424777,"type":4,"author":"Michael McCandless","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/FacetTestBase#getFacetSearchParams(FacetIndexingParams,FacetRequest...).mjava","sourceNew":null,"sourceOld":"  /**\n   * Faceted Search Params for the test. Sub classes should override in order to\n   * test with different faceted search params.\n   */\n  protected FacetSearchParams getFacetSearchParams(FacetIndexingParams iParams, FacetRequest... facetRequests) {\n    return new FacetSearchParams(iParams, facetRequests);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3cc728b07df73b197e6d940d27f9b08b63918f13","date":1388834348,"type":4,"author":"Michael McCandless","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/facet/src/test/org/apache/lucene/facet/FacetTestBase#getFacetSearchParams(FacetIndexingParams,FacetRequest...).mjava","sourceNew":null,"sourceOld":"  /**\n   * Faceted Search Params for the test. Sub classes should override in order to\n   * test with different faceted search params.\n   */\n  protected FacetSearchParams getFacetSearchParams(FacetIndexingParams iParams, FacetRequest... facetRequests) {\n    return new FacetSearchParams(iParams, facetRequests);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","d4c6c7f3cda7a0595cabd16e5e9107ca29852708"],"f96e4a056f7ee1bafbfb8a06c5bd93f7708e560d":["d4c6c7f3cda7a0595cabd16e5e9107ca29852708"],"d33e19a97046248623a7591aeaa6547233fd15e2":["f96e4a056f7ee1bafbfb8a06c5bd93f7708e560d"],"d4c6c7f3cda7a0595cabd16e5e9107ca29852708":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cc728b07df73b197e6d940d27f9b08b63918f13":["f96e4a056f7ee1bafbfb8a06c5bd93f7708e560d","d33e19a97046248623a7591aeaa6547233fd15e2"],"07155cdd910937cdf6877e48884d5782845c8b8b":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","f96e4a056f7ee1bafbfb8a06c5bd93f7708e560d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3cc728b07df73b197e6d940d27f9b08b63918f13"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["07155cdd910937cdf6877e48884d5782845c8b8b"],"f96e4a056f7ee1bafbfb8a06c5bd93f7708e560d":["d33e19a97046248623a7591aeaa6547233fd15e2","3cc728b07df73b197e6d940d27f9b08b63918f13","07155cdd910937cdf6877e48884d5782845c8b8b"],"d33e19a97046248623a7591aeaa6547233fd15e2":["3cc728b07df73b197e6d940d27f9b08b63918f13"],"d4c6c7f3cda7a0595cabd16e5e9107ca29852708":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","f96e4a056f7ee1bafbfb8a06c5bd93f7708e560d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","d4c6c7f3cda7a0595cabd16e5e9107ca29852708"],"3cc728b07df73b197e6d940d27f9b08b63918f13":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"07155cdd910937cdf6877e48884d5782845c8b8b":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["07155cdd910937cdf6877e48884d5782845c8b8b","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}