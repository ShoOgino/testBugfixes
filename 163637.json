{"path":"solr/core/src/java/org/apache/solr/pkg/PackageLoader.PackageResourceLoader#openResource(String).mjava","commits":[{"id":"e2c4fba12438c1407e259b55774b5bbb707046a8","date":1593319746,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/pkg/PackageLoader.PackageResourceLoader#openResource(String).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public InputStream openResource(String resource) throws IOException {\n      for (Path path : paths) {\n        try(FileInputStream in = new FileInputStream(path.toFile())) {\n          ZipInputStream zis = new ZipInputStream(in);\n          try {\n            ZipEntry entry;\n            while ((entry = zis.getNextEntry()) != null) {\n              if (resource == null || resource.equals(entry.getName())) {\n                SimplePostTool.BAOS out = new SimplePostTool.BAOS();\n                byte[] buffer = new byte[2048];\n                int size;\n                while ((size = zis.read(buffer, 0, buffer.length)) != -1) {\n                  out.write(buffer, 0, size);\n                }\n                out.close();\n                return new ByteBufferStream(out.getByteBuffer());\n              }\n            }\n          } finally {\n            zis.closeEntry();\n          }\n        }\n      }\n\n      return null;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"672017a88bbab981cc7c3d986ce49441f1c2dca6","date":1593403397,"type":3,"author":"noble","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/pkg/PackageLoader.PackageResourceLoader#openResource(String).mjava","pathOld":"solr/core/src/java/org/apache/solr/pkg/PackageLoader.PackageResourceLoader#openResource(String).mjava","sourceNew":"    @Override\n    public InputStream openResource(String resource) {\n      return getClassLoader().getResourceAsStream(resource);\n    }\n\n","sourceOld":"    @Override\n    public InputStream openResource(String resource) throws IOException {\n      for (Path path : paths) {\n        try(FileInputStream in = new FileInputStream(path.toFile())) {\n          ZipInputStream zis = new ZipInputStream(in);\n          try {\n            ZipEntry entry;\n            while ((entry = zis.getNextEntry()) != null) {\n              if (resource == null || resource.equals(entry.getName())) {\n                SimplePostTool.BAOS out = new SimplePostTool.BAOS();\n                byte[] buffer = new byte[2048];\n                int size;\n                while ((size = zis.read(buffer, 0, buffer.length)) != -1) {\n                  out.write(buffer, 0, size);\n                }\n                out.close();\n                return new ByteBufferStream(out.getByteBuffer());\n              }\n            }\n          } finally {\n            zis.closeEntry();\n          }\n        }\n      }\n\n      return null;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e2c4fba12438c1407e259b55774b5bbb707046a8":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"672017a88bbab981cc7c3d986ce49441f1c2dca6":["e2c4fba12438c1407e259b55774b5bbb707046a8"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["672017a88bbab981cc7c3d986ce49441f1c2dca6"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e2c4fba12438c1407e259b55774b5bbb707046a8"],"e2c4fba12438c1407e259b55774b5bbb707046a8":["672017a88bbab981cc7c3d986ce49441f1c2dca6"],"672017a88bbab981cc7c3d986ce49441f1c2dca6":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}