{"path":"src/test/org/apache/lucene/index/TestIndexWriter#testThreadInterruptDeadlock().mjava","commits":[{"id":"ba7fd1181f778e9954547e8e6a47587ebf08e3fb","date":1238267455,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriter#testThreadInterruptDeadlock().mjava","pathOld":"/dev/null","sourceNew":"  public void testThreadInterruptDeadlock() throws Exception {\n    IndexerThreadInterrupt t = new IndexerThreadInterrupt();\n    t.setDaemon(true);\n    t.start();\n    for(int i=0;i<100;i++) {\n      Thread.sleep(1);\n      synchronized(t) {\n        t.interrupt();\n      }\n    }\n    t.finish = true;\n    t.interrupt();\n    t.join();\n    assertFalse(t.failed);\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":["ef47bc1e8f7306e96e4ced4a5ca8674c2006907d"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"ef47bc1e8f7306e96e4ced4a5ca8674c2006907d","date":1240133906,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriter#testThreadInterruptDeadlock().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriter#testThreadInterruptDeadlock().mjava","sourceNew":"  public void testThreadInterruptDeadlock() throws Exception {\n    IndexerThreadInterrupt t = new IndexerThreadInterrupt();\n    t.setDaemon(true);\n    t.start();\n    for(int i=0;i<100;i++) {\n      Thread.sleep(1);\n      synchronized(t) {\n        t.interrupt();\n      }\n    }\n    t.finish = true;\n    synchronized(t) {\n      t.interrupt();\n    }\n    t.join();\n    assertFalse(t.failed);\n  }\n\n","sourceOld":"  public void testThreadInterruptDeadlock() throws Exception {\n    IndexerThreadInterrupt t = new IndexerThreadInterrupt();\n    t.setDaemon(true);\n    t.start();\n    for(int i=0;i<100;i++) {\n      Thread.sleep(1);\n      synchronized(t) {\n        t.interrupt();\n      }\n    }\n    t.finish = true;\n    t.interrupt();\n    t.join();\n    assertFalse(t.failed);\n  }\n\n","bugFix":["ba7fd1181f778e9954547e8e6a47587ebf08e3fb"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2cc0964e95f9f205bbfc7259e04d6a78b55cd84a","date":1258310286,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"src/test/org/apache/lucene/index/TestIndexWriter#testThreadInterruptDeadlock().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriter#testThreadInterruptDeadlock().mjava","sourceNew":"  public void testThreadInterruptDeadlock() throws Exception {\n    IndexerThreadInterrupt t = new IndexerThreadInterrupt();\n    t.setDaemon(true);\n    t.start();\n    \n    // issue 100 interrupts to child thread\n    int i = 0;\n    while(i < 100) {\n      Thread.sleep(1);\n\n      if (t.allowInterrupt) {\n        i++;\n        t.allowInterrupt = false;\n        t.interrupt();\n      }\n      if (!t.isAlive()) {\n        break;\n      }\n    }\n    t.allowInterrupt = false;\n    t.finish = true;\n    t.interrupt();\n    t.join();\n    assertFalse(t.failed);\n  }\n\n","sourceOld":"  public void testThreadInterruptDeadlock() throws Exception {\n    IndexerThreadInterrupt t = new IndexerThreadInterrupt();\n    t.setDaemon(true);\n    t.start();\n    for(int i=0;i<100;i++) {\n      Thread.sleep(1);\n      synchronized(t) {\n        t.interrupt();\n      }\n    }\n    t.finish = true;\n    synchronized(t) {\n      t.interrupt();\n    }\n    t.join();\n    assertFalse(t.failed);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9454a6510e2db155fb01faa5c049b06ece95fab9","date":1453508333,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"lucene/src/test/org/apache/lucene/index/TestIndexWriter#testThreadInterruptDeadlock().mjava","pathOld":"src/test/org/apache/lucene/index/TestIndexWriter#testThreadInterruptDeadlock().mjava","sourceNew":"  public void testThreadInterruptDeadlock() throws Exception {\n    IndexerThreadInterrupt t = new IndexerThreadInterrupt();\n    t.setDaemon(true);\n    t.start();\n    \n    // issue 100 interrupts to child thread\n    int i = 0;\n    while(i < 100) {\n      Thread.sleep(1);\n\n      if (t.allowInterrupt) {\n        i++;\n        t.allowInterrupt = false;\n        t.interrupt();\n      }\n      if (!t.isAlive()) {\n        break;\n      }\n    }\n    t.allowInterrupt = false;\n    t.finish = true;\n    t.interrupt();\n    t.join();\n    assertFalse(t.failed);\n  }\n\n","sourceOld":"  public void testThreadInterruptDeadlock() throws Exception {\n    IndexerThreadInterrupt t = new IndexerThreadInterrupt();\n    t.setDaemon(true);\n    t.start();\n    \n    // issue 100 interrupts to child thread\n    int i = 0;\n    while(i < 100) {\n      Thread.sleep(1);\n\n      if (t.allowInterrupt) {\n        i++;\n        t.allowInterrupt = false;\n        t.interrupt();\n      }\n      if (!t.isAlive()) {\n        break;\n      }\n    }\n    t.allowInterrupt = false;\n    t.finish = true;\n    t.interrupt();\n    t.join();\n    assertFalse(t.failed);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"ef47bc1e8f7306e96e4ced4a5ca8674c2006907d":["ba7fd1181f778e9954547e8e6a47587ebf08e3fb"],"2cc0964e95f9f205bbfc7259e04d6a78b55cd84a":["ef47bc1e8f7306e96e4ced4a5ca8674c2006907d"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"ba7fd1181f778e9954547e8e6a47587ebf08e3fb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"9454a6510e2db155fb01faa5c049b06ece95fab9":["2cc0964e95f9f205bbfc7259e04d6a78b55cd84a"]},"commit2Childs":{"ef47bc1e8f7306e96e4ced4a5ca8674c2006907d":["2cc0964e95f9f205bbfc7259e04d6a78b55cd84a"],"2cc0964e95f9f205bbfc7259e04d6a78b55cd84a":["9454a6510e2db155fb01faa5c049b06ece95fab9"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["ba7fd1181f778e9954547e8e6a47587ebf08e3fb"],"ba7fd1181f778e9954547e8e6a47587ebf08e3fb":["ef47bc1e8f7306e96e4ced4a5ca8674c2006907d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"9454a6510e2db155fb01faa5c049b06ece95fab9":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}