{"path":"contrib/queries/src/java/org/apache/lucene/search/trie/TrieRangeQuery#rewrite(IndexReader).mjava","commits":[{"id":"29191e6ce86bfcd231cd069834a87833fa4079c1","date":1228333111,"type":0,"author":"Michael McCandless","isMerge":false,"pathNew":"contrib/queries/src/java/org/apache/lucene/search/trie/TrieRangeQuery#rewrite(IndexReader).mjava","pathOld":"/dev/null","sourceNew":"\t/**\n\t * Rewrites the query to native Lucene {@link Query}'s. This implementation uses a {@link ConstantScoreQuery} with\n\t * a {@link TrieRangeFilter} as implementation of the trie algorithm.\n\t */\n\t//@Override\n\tpublic Query rewrite(final IndexReader reader) throws IOException {\n\t\tfinal ConstantScoreQuery q = new ConstantScoreQuery(filter);\n\t\tq.setBoost(getBoost());\n\t\treturn q.rewrite(reader);\n\t}\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8ef14ec05032a847f9ce1820055c6c29f72d771a","date":1231669514,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"contrib/queries/src/java/org/apache/lucene/search/trie/TrieRangeQuery#rewrite(IndexReader).mjava","pathOld":"contrib/queries/src/java/org/apache/lucene/search/trie/TrieRangeQuery#rewrite(IndexReader).mjava","sourceNew":"  /**\n   * Rewrites the query to native Lucene {@link Query}'s. This implementation uses a {@link ConstantScoreQuery} with\n   * a {@link TrieRangeFilter} as implementation of the trie algorithm.\n   */\n  //@Override\n  public Query rewrite(final IndexReader reader) throws IOException {\n    final ConstantScoreQuery q = new ConstantScoreQuery(filter);\n    q.setBoost(getBoost());\n    return q.rewrite(reader);\n  }\n\n","sourceOld":"\t/**\n\t * Rewrites the query to native Lucene {@link Query}'s. This implementation uses a {@link ConstantScoreQuery} with\n\t * a {@link TrieRangeFilter} as implementation of the trie algorithm.\n\t */\n\t//@Override\n\tpublic Query rewrite(final IndexReader reader) throws IOException {\n\t\tfinal ConstantScoreQuery q = new ConstantScoreQuery(filter);\n\t\tq.setBoost(getBoost());\n\t\treturn q.rewrite(reader);\n\t}\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b3625d65a5c7432d40b215d134ec5fc874be6387","date":1231708524,"type":4,"author":"Uwe Schindler","isMerge":false,"pathNew":"/dev/null","pathOld":"contrib/queries/src/java/org/apache/lucene/search/trie/TrieRangeQuery#rewrite(IndexReader).mjava","sourceNew":null,"sourceOld":"  /**\n   * Rewrites the query to native Lucene {@link Query}'s. This implementation uses a {@link ConstantScoreQuery} with\n   * a {@link TrieRangeFilter} as implementation of the trie algorithm.\n   */\n  //@Override\n  public Query rewrite(final IndexReader reader) throws IOException {\n    final ConstantScoreQuery q = new ConstantScoreQuery(filter);\n    q.setBoost(getBoost());\n    return q.rewrite(reader);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b3625d65a5c7432d40b215d134ec5fc874be6387":["8ef14ec05032a847f9ce1820055c6c29f72d771a"],"29191e6ce86bfcd231cd069834a87833fa4079c1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"8ef14ec05032a847f9ce1820055c6c29f72d771a":["29191e6ce86bfcd231cd069834a87833fa4079c1"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b3625d65a5c7432d40b215d134ec5fc874be6387"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["29191e6ce86bfcd231cd069834a87833fa4079c1"],"b3625d65a5c7432d40b215d134ec5fc874be6387":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"29191e6ce86bfcd231cd069834a87833fa4079c1":["8ef14ec05032a847f9ce1820055c6c29f72d771a"],"8ef14ec05032a847f9ce1820055c6c29f72d771a":["b3625d65a5c7432d40b215d134ec5fc874be6387"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}