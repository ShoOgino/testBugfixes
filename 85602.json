{"path":"lucene/src/java/org/apache/lucene/search/FieldComparator.TermOrdValComparator#setNextReader(IndexReader,int).mjava","commits":[{"id":"be20f9fed1d3edcb1c84abcc39df87a90fab22df","date":1275590285,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/FieldComparator.TermOrdValComparator#setNextReader(IndexReader,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/FieldComparator.StringOrdValComparator#setNextReader(IndexReader,int).mjava","sourceNew":"    @Override\n    public void setNextReader(IndexReader reader, int docBase) throws IOException {\n      termsIndex = FieldCache.DEFAULT.getTermsIndex(reader, field);\n      currentReaderGen++;\n      if (bottomSlot != -1) {\n        convert(bottomSlot);\n        bottomOrd = ords[bottomSlot];\n      }\n    }\n\n","sourceOld":"    @Override\n    public void setNextReader(IndexReader reader, int docBase) throws IOException {\n      StringIndex currentReaderValues = FieldCache.DEFAULT.getStringIndex(reader, field);\n      currentReaderGen++;\n      order = currentReaderValues.order;\n      lookup = currentReaderValues.lookup;\n      assert lookup.length > 0;\n      if (bottomSlot != -1) {\n        convert(bottomSlot);\n        bottomOrd = ords[bottomSlot];\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9eb0f2a9f9f67f7b41226f91f0099edecadd99a6","date":1279015205,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/FieldComparator.TermOrdValComparator#setNextReader(IndexReader,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/FieldComparator.TermOrdValComparator#setNextReader(IndexReader,int).mjava","sourceNew":"    @Override\n    public void setNextReader(IndexReader reader, int docBase) throws IOException {\n      termsIndex = FieldCache.DEFAULT.getTermsIndex(reader, field);\n      currentDocToOrd = termsIndex.getDocToOrd();\n      currentReaderGen++;\n      if (bottomSlot != -1) {\n        setBottom(bottomSlot);\n      }\n    }\n\n","sourceOld":"    @Override\n    public void setNextReader(IndexReader reader, int docBase) throws IOException {\n      termsIndex = FieldCache.DEFAULT.getTermsIndex(reader, field);\n      currentReaderGen++;\n      if (bottomSlot != -1) {\n        convert(bottomSlot);\n        bottomOrd = ords[bottomSlot];\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5f4e87790277826a2aea119328600dfb07761f32","date":1279827275,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/FieldComparator.TermOrdValComparator#setNextReader(IndexReader,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/FieldComparator.TermOrdValComparator#setNextReader(IndexReader,int).mjava","sourceNew":"    @Override\n    public void setNextReader(IndexReader reader, int docBase) throws IOException {\n      termsIndex = FieldCache.DEFAULT.getTermsIndex(reader, field);\n      currentDocToOrd = termsIndex.getDocToOrd();\n      currentReaderGen++;\n      if (bottomSlot != -1) {\n        setBottom(bottomSlot);\n      }\n    }\n\n","sourceOld":"    @Override\n    public void setNextReader(IndexReader reader, int docBase) throws IOException {\n      termsIndex = FieldCache.DEFAULT.getTermsIndex(reader, field);\n      currentReaderGen++;\n      if (bottomSlot != -1) {\n        convert(bottomSlot);\n        bottomOrd = ords[bottomSlot];\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9eed5547b2f58afdc475cc06312622f5bcf220c2","date":1284156494,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/FieldComparator.TermOrdValComparator#setNextReader(IndexReader,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/FieldComparator.TermOrdValComparator#setNextReader(IndexReader,int).mjava","sourceNew":"    @Override\n    public FieldComparator setNextReader(IndexReader reader, int docBase) throws IOException {\n      termsIndex = FieldCache.DEFAULT.getTermsIndex(reader, field);\n      final PackedInts.Reader docToOrd = termsIndex.getDocToOrd();\n      FieldComparator perSegComp;\n      if (docToOrd instanceof Direct8) {\n        perSegComp = new ByteOrdComparator(((Direct8) docToOrd).getArray(), termsIndex, docBase);\n      } else if (docToOrd instanceof Direct16) {\n        perSegComp = new ShortOrdComparator(((Direct16) docToOrd).getArray(), termsIndex, docBase);\n      } else if (docToOrd instanceof Direct32) {\n        perSegComp = new IntOrdComparator(((Direct32) docToOrd).getArray(), termsIndex, docBase);\n      } else {\n        perSegComp = new AnyOrdComparator(docToOrd, termsIndex, docBase);\n      }\n\n      currentReaderGen++;\n      if (bottomSlot != -1) {\n        perSegComp.setBottom(bottomSlot);\n      }\n\n      return perSegComp;\n    }\n\n","sourceOld":"    @Override\n    public void setNextReader(IndexReader reader, int docBase) throws IOException {\n      termsIndex = FieldCache.DEFAULT.getTermsIndex(reader, field);\n      currentDocToOrd = termsIndex.getDocToOrd();\n      currentReaderGen++;\n      if (bottomSlot != -1) {\n        setBottom(bottomSlot);\n      }\n    }\n\n","bugFix":null,"bugIntro":["d4d69c535930b5cce125cff868d40f6373dc27d4"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","date":1292920096,"type":3,"author":"Michael Busch","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/FieldComparator.TermOrdValComparator#setNextReader(IndexReader,int).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/FieldComparator.TermOrdValComparator#setNextReader(IndexReader,int).mjava","sourceNew":"    @Override\n    public FieldComparator setNextReader(IndexReader reader, int docBase) throws IOException {\n      termsIndex = FieldCache.DEFAULT.getTermsIndex(reader, field);\n      final PackedInts.Reader docToOrd = termsIndex.getDocToOrd();\n      FieldComparator perSegComp;\n      if (docToOrd instanceof Direct8) {\n        perSegComp = new ByteOrdComparator(((Direct8) docToOrd).getArray(), termsIndex, docBase);\n      } else if (docToOrd instanceof Direct16) {\n        perSegComp = new ShortOrdComparator(((Direct16) docToOrd).getArray(), termsIndex, docBase);\n      } else if (docToOrd instanceof Direct32) {\n        perSegComp = new IntOrdComparator(((Direct32) docToOrd).getArray(), termsIndex, docBase);\n      } else {\n        perSegComp = new AnyOrdComparator(docToOrd, termsIndex, docBase);\n      }\n\n      currentReaderGen++;\n      if (bottomSlot != -1) {\n        perSegComp.setBottom(bottomSlot);\n      }\n\n      return perSegComp;\n    }\n\n","sourceOld":"    @Override\n    public void setNextReader(IndexReader reader, int docBase) throws IOException {\n      termsIndex = FieldCache.DEFAULT.getTermsIndex(reader, field);\n      currentDocToOrd = termsIndex.getDocToOrd();\n      currentReaderGen++;\n      if (bottomSlot != -1) {\n        setBottom(bottomSlot);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"323f871ffe96b871d8c534a614be60751bb023c2","date":1294820532,"type":5,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/FieldComparator.TermOrdValComparator#setNextReader(AtomicReaderContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/FieldComparator.TermOrdValComparator#setNextReader(IndexReader,int).mjava","sourceNew":"    @Override\n    public FieldComparator setNextReader(AtomicReaderContext context) throws IOException {\n      final int docBase = context.docBase;\n      termsIndex = FieldCache.DEFAULT.getTermsIndex(context.reader, field);\n      final PackedInts.Reader docToOrd = termsIndex.getDocToOrd();\n      FieldComparator perSegComp;\n      if (docToOrd instanceof Direct8) {\n        perSegComp = new ByteOrdComparator(((Direct8) docToOrd).getArray(), termsIndex, docBase);\n      } else if (docToOrd instanceof Direct16) {\n        perSegComp = new ShortOrdComparator(((Direct16) docToOrd).getArray(), termsIndex, docBase);\n      } else if (docToOrd instanceof Direct32) {\n        perSegComp = new IntOrdComparator(((Direct32) docToOrd).getArray(), termsIndex, docBase);\n      } else {\n        perSegComp = new AnyOrdComparator(docToOrd, termsIndex, docBase);\n      }\n\n      currentReaderGen++;\n      if (bottomSlot != -1) {\n        perSegComp.setBottom(bottomSlot);\n      }\n\n      return perSegComp;\n    }\n\n","sourceOld":"    @Override\n    public FieldComparator setNextReader(IndexReader reader, int docBase) throws IOException {\n      termsIndex = FieldCache.DEFAULT.getTermsIndex(reader, field);\n      final PackedInts.Reader docToOrd = termsIndex.getDocToOrd();\n      FieldComparator perSegComp;\n      if (docToOrd instanceof Direct8) {\n        perSegComp = new ByteOrdComparator(((Direct8) docToOrd).getArray(), termsIndex, docBase);\n      } else if (docToOrd instanceof Direct16) {\n        perSegComp = new ShortOrdComparator(((Direct16) docToOrd).getArray(), termsIndex, docBase);\n      } else if (docToOrd instanceof Direct32) {\n        perSegComp = new IntOrdComparator(((Direct32) docToOrd).getArray(), termsIndex, docBase);\n      } else {\n        perSegComp = new AnyOrdComparator(docToOrd, termsIndex, docBase);\n      }\n\n      currentReaderGen++;\n      if (bottomSlot != -1) {\n        perSegComp.setBottom(bottomSlot);\n      }\n\n      return perSegComp;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"868da859b43505d9d2a023bfeae6dd0c795f5295","date":1294948401,"type":4,"author":"Michael Busch","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/search/FieldComparator.TermOrdValComparator#setNextReader(IndexReader,int).mjava","sourceNew":null,"sourceOld":"    @Override\n    public FieldComparator setNextReader(IndexReader reader, int docBase) throws IOException {\n      termsIndex = FieldCache.DEFAULT.getTermsIndex(reader, field);\n      final PackedInts.Reader docToOrd = termsIndex.getDocToOrd();\n      FieldComparator perSegComp;\n      if (docToOrd instanceof Direct8) {\n        perSegComp = new ByteOrdComparator(((Direct8) docToOrd).getArray(), termsIndex, docBase);\n      } else if (docToOrd instanceof Direct16) {\n        perSegComp = new ShortOrdComparator(((Direct16) docToOrd).getArray(), termsIndex, docBase);\n      } else if (docToOrd instanceof Direct32) {\n        perSegComp = new IntOrdComparator(((Direct32) docToOrd).getArray(), termsIndex, docBase);\n      } else {\n        perSegComp = new AnyOrdComparator(docToOrd, termsIndex, docBase);\n      }\n\n      currentReaderGen++;\n      if (bottomSlot != -1) {\n        perSegComp.setBottom(bottomSlot);\n      }\n\n      return perSegComp;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":4,"author":"Simon Willnauer","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/src/java/org/apache/lucene/search/FieldComparator.TermOrdValComparator#setNextReader(IndexReader,int).mjava","sourceNew":null,"sourceOld":"    @Override\n    public FieldComparator setNextReader(IndexReader reader, int docBase) throws IOException {\n      termsIndex = FieldCache.DEFAULT.getTermsIndex(reader, field);\n      final PackedInts.Reader docToOrd = termsIndex.getDocToOrd();\n      FieldComparator perSegComp;\n      if (docToOrd instanceof Direct8) {\n        perSegComp = new ByteOrdComparator(((Direct8) docToOrd).getArray(), termsIndex, docBase);\n      } else if (docToOrd instanceof Direct16) {\n        perSegComp = new ShortOrdComparator(((Direct16) docToOrd).getArray(), termsIndex, docBase);\n      } else if (docToOrd instanceof Direct32) {\n        perSegComp = new IntOrdComparator(((Direct32) docToOrd).getArray(), termsIndex, docBase);\n      } else {\n        perSegComp = new AnyOrdComparator(docToOrd, termsIndex, docBase);\n      }\n\n      currentReaderGen++;\n      if (bottomSlot != -1) {\n        perSegComp.setBottom(bottomSlot);\n      }\n\n      return perSegComp;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"be20f9fed1d3edcb1c84abcc39df87a90fab22df":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"323f871ffe96b871d8c534a614be60751bb023c2":["9eed5547b2f58afdc475cc06312622f5bcf220c2"],"9eb0f2a9f9f67f7b41226f91f0099edecadd99a6":["be20f9fed1d3edcb1c84abcc39df87a90fab22df"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["9eed5547b2f58afdc475cc06312622f5bcf220c2","323f871ffe96b871d8c534a614be60751bb023c2"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"5f4e87790277826a2aea119328600dfb07761f32":["be20f9fed1d3edcb1c84abcc39df87a90fab22df","9eb0f2a9f9f67f7b41226f91f0099edecadd99a6"],"9eed5547b2f58afdc475cc06312622f5bcf220c2":["9eb0f2a9f9f67f7b41226f91f0099edecadd99a6"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["5f4e87790277826a2aea119328600dfb07761f32","9eed5547b2f58afdc475cc06312622f5bcf220c2"],"868da859b43505d9d2a023bfeae6dd0c795f5295":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a","323f871ffe96b871d8c534a614be60751bb023c2"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["323f871ffe96b871d8c534a614be60751bb023c2"]},"commit2Childs":{"be20f9fed1d3edcb1c84abcc39df87a90fab22df":["9eb0f2a9f9f67f7b41226f91f0099edecadd99a6","5f4e87790277826a2aea119328600dfb07761f32"],"323f871ffe96b871d8c534a614be60751bb023c2":["29ef99d61cda9641b6250bf9567329a6e65f901d","868da859b43505d9d2a023bfeae6dd0c795f5295","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"9eb0f2a9f9f67f7b41226f91f0099edecadd99a6":["5f4e87790277826a2aea119328600dfb07761f32","9eed5547b2f58afdc475cc06312622f5bcf220c2"],"29ef99d61cda9641b6250bf9567329a6e65f901d":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["be20f9fed1d3edcb1c84abcc39df87a90fab22df"],"5f4e87790277826a2aea119328600dfb07761f32":["7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"9eed5547b2f58afdc475cc06312622f5bcf220c2":["323f871ffe96b871d8c534a614be60751bb023c2","29ef99d61cda9641b6250bf9567329a6e65f901d","7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a"],"7c65bc241a96282ca59ae736b4ffb5b7e5eeb23a":["868da859b43505d9d2a023bfeae6dd0c795f5295"],"868da859b43505d9d2a023bfeae6dd0c795f5295":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["29ef99d61cda9641b6250bf9567329a6e65f901d","868da859b43505d9d2a023bfeae6dd0c795f5295","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}