{"path":"solr/core/src/test/org/apache/solr/request/TestRemoteStreaming#getUrlForString(String).mjava","commits":[{"id":"c0a5c042827795d2f0b44db0cc8cd534b09d6d28","date":1319687600,"type":0,"author":"Erik Hatcher","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/request/TestRemoteStreaming#getUrlForString(String).mjava","pathOld":"/dev/null","sourceNew":"  private String getUrlForString(String getUrl) throws IOException {\n    Object obj = new URL(getUrl).getContent();\n    if (obj instanceof InputStream) {\n      InputStream inputStream = (InputStream) obj;\n      try {\n        StringWriter strWriter = new StringWriter();\n        IOUtils.copy(inputStream,strWriter);\n        return strWriter.toString();\n      } finally {\n        IOUtils.closeQuietly(inputStream);\n      }\n    }\n    return null;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"448a213c5dfd8b9baaf143dcbf9e633d8d7d1d5e","date":1341842777,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/request/TestRemoteStreaming#getUrlForString(String).mjava","pathOld":"solr/core/src/test/org/apache/solr/request/TestRemoteStreaming#getUrlForString(String).mjava","sourceNew":"  private String getUrlForString(String getUrl) throws IOException {\n    Object obj = new URL(getUrl).getContent();\n    if (obj instanceof InputStream) {\n      InputStream inputStream = (InputStream) obj;\n      try {\n        StringWriter strWriter = new StringWriter();\n        IOUtils.copy(new InputStreamReader(inputStream, \"UTF-8\"),strWriter);\n        return strWriter.toString();\n      } finally {\n        IOUtils.closeQuietly(inputStream);\n      }\n    }\n    return null;\n  }\n\n","sourceOld":"  private String getUrlForString(String getUrl) throws IOException {\n    Object obj = new URL(getUrl).getContent();\n    if (obj instanceof InputStream) {\n      InputStream inputStream = (InputStream) obj;\n      try {\n        StringWriter strWriter = new StringWriter();\n        IOUtils.copy(inputStream,strWriter);\n        return strWriter.toString();\n      } finally {\n        IOUtils.closeQuietly(inputStream);\n      }\n    }\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2acf500f78aa12b92e371fd89c719291986b6b90","date":1341846236,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/request/TestRemoteStreaming#getUrlForString(String).mjava","pathOld":"solr/core/src/test/org/apache/solr/request/TestRemoteStreaming#getUrlForString(String).mjava","sourceNew":"  private String getUrlForString(String getUrl) throws IOException {\n    Object obj = new URL(getUrl).getContent();\n    if (obj instanceof InputStream) {\n      InputStream inputStream = (InputStream) obj;\n      try {\n        StringWriter strWriter = new StringWriter();\n        IOUtils.copy(new InputStreamReader(inputStream, \"UTF-8\"),strWriter);\n        return strWriter.toString();\n      } finally {\n        IOUtils.closeQuietly(inputStream);\n      }\n    }\n    return null;\n  }\n\n","sourceOld":"  private String getUrlForString(String getUrl) throws IOException {\n    Object obj = new URL(getUrl).getContent();\n    if (obj instanceof InputStream) {\n      InputStream inputStream = (InputStream) obj;\n      try {\n        StringWriter strWriter = new StringWriter();\n        IOUtils.copy(inputStream,strWriter);\n        return strWriter.toString();\n      } finally {\n        IOUtils.closeQuietly(inputStream);\n      }\n    }\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"46d8ada1fff8d18cb197c38c7983225162599948","date":1341853497,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/request/TestRemoteStreaming#getUrlForString(String).mjava","pathOld":"solr/core/src/test/org/apache/solr/request/TestRemoteStreaming#getUrlForString(String).mjava","sourceNew":"  private String getUrlForString(String getUrl) throws IOException {\n    Object obj = new URL(getUrl).getContent();\n    if (obj instanceof InputStream) {\n      InputStream inputStream = (InputStream) obj;\n      try {\n        StringWriter strWriter = new StringWriter();\n        IOUtils.copy(new InputStreamReader(inputStream, \"UTF-8\"),strWriter);\n        return strWriter.toString();\n      } finally {\n        IOUtils.closeQuietly(inputStream);\n      }\n    }\n    return null;\n  }\n\n","sourceOld":"  private String getUrlForString(String getUrl) throws IOException {\n    Object obj = new URL(getUrl).getContent();\n    if (obj instanceof InputStream) {\n      InputStream inputStream = (InputStream) obj;\n      try {\n        StringWriter strWriter = new StringWriter();\n        IOUtils.copy(inputStream,strWriter);\n        return strWriter.toString();\n      } finally {\n        IOUtils.closeQuietly(inputStream);\n      }\n    }\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fe33227f6805edab2036cbb80645cc4e2d1fa424","date":1342713534,"type":3,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/request/TestRemoteStreaming#getUrlForString(String).mjava","pathOld":"solr/core/src/test/org/apache/solr/request/TestRemoteStreaming#getUrlForString(String).mjava","sourceNew":"  private String getUrlForString(String getUrl) throws IOException {\n    Object obj = new URL(getUrl).getContent();\n    if (obj instanceof InputStream) {\n      InputStream inputStream = (InputStream) obj;\n      try {\n        StringWriter strWriter = new StringWriter();\n        IOUtils.copy(new InputStreamReader(inputStream, \"UTF-8\"),strWriter);\n        return strWriter.toString();\n      } finally {\n        IOUtils.closeQuietly(inputStream);\n      }\n    }\n    return null;\n  }\n\n","sourceOld":"  private String getUrlForString(String getUrl) throws IOException {\n    Object obj = new URL(getUrl).getContent();\n    if (obj instanceof InputStream) {\n      InputStream inputStream = (InputStream) obj;\n      try {\n        StringWriter strWriter = new StringWriter();\n        IOUtils.copy(inputStream,strWriter);\n        return strWriter.toString();\n      } finally {\n        IOUtils.closeQuietly(inputStream);\n      }\n    }\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9d3d365762604952e436b51980101dfc84cc1b3e","date":1396298116,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"solr/core/src/test/org/apache/solr/request/TestRemoteStreaming#getUrlForString(String).mjava","pathOld":"solr/core/src/test/org/apache/solr/request/TestRemoteStreaming#getUrlForString(String).mjava","sourceNew":"  private String getUrlForString(String getUrl) throws IOException {\n    Object obj = new URL(getUrl).getContent();\n    if (obj instanceof InputStream) {\n      InputStream inputStream = (InputStream) obj;\n      try {\n        StringWriter strWriter = new StringWriter();\n        IOUtils.copy(new InputStreamReader(inputStream, StandardCharsets.UTF_8),strWriter);\n        return strWriter.toString();\n      } finally {\n        IOUtils.closeQuietly(inputStream);\n      }\n    }\n    return null;\n  }\n\n","sourceOld":"  private String getUrlForString(String getUrl) throws IOException {\n    Object obj = new URL(getUrl).getContent();\n    if (obj instanceof InputStream) {\n      InputStream inputStream = (InputStream) obj;\n      try {\n        StringWriter strWriter = new StringWriter();\n        IOUtils.copy(new InputStreamReader(inputStream, \"UTF-8\"),strWriter);\n        return strWriter.toString();\n      } finally {\n        IOUtils.closeQuietly(inputStream);\n      }\n    }\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5eb2511ababf862ea11e10761c70ee560cd84510","date":1396607225,"type":3,"author":"Dawid Weiss","isMerge":true,"pathNew":"solr/core/src/test/org/apache/solr/request/TestRemoteStreaming#getUrlForString(String).mjava","pathOld":"solr/core/src/test/org/apache/solr/request/TestRemoteStreaming#getUrlForString(String).mjava","sourceNew":"  private String getUrlForString(String getUrl) throws IOException {\n    Object obj = new URL(getUrl).getContent();\n    if (obj instanceof InputStream) {\n      InputStream inputStream = (InputStream) obj;\n      try {\n        StringWriter strWriter = new StringWriter();\n        IOUtils.copy(new InputStreamReader(inputStream, StandardCharsets.UTF_8),strWriter);\n        return strWriter.toString();\n      } finally {\n        IOUtils.closeQuietly(inputStream);\n      }\n    }\n    return null;\n  }\n\n","sourceOld":"  private String getUrlForString(String getUrl) throws IOException {\n    Object obj = new URL(getUrl).getContent();\n    if (obj instanceof InputStream) {\n      InputStream inputStream = (InputStream) obj;\n      try {\n        StringWriter strWriter = new StringWriter();\n        IOUtils.copy(new InputStreamReader(inputStream, \"UTF-8\"),strWriter);\n        return strWriter.toString();\n      } finally {\n        IOUtils.closeQuietly(inputStream);\n      }\n    }\n    return null;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"5eb2511ababf862ea11e10761c70ee560cd84510":["2acf500f78aa12b92e371fd89c719291986b6b90","9d3d365762604952e436b51980101dfc84cc1b3e"],"448a213c5dfd8b9baaf143dcbf9e633d8d7d1d5e":["c0a5c042827795d2f0b44db0cc8cd534b09d6d28"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":["c0a5c042827795d2f0b44db0cc8cd534b09d6d28","2acf500f78aa12b92e371fd89c719291986b6b90"],"9d3d365762604952e436b51980101dfc84cc1b3e":["2acf500f78aa12b92e371fd89c719291986b6b90"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c0a5c042827795d2f0b44db0cc8cd534b09d6d28":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"2acf500f78aa12b92e371fd89c719291986b6b90":["c0a5c042827795d2f0b44db0cc8cd534b09d6d28","448a213c5dfd8b9baaf143dcbf9e633d8d7d1d5e"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["9d3d365762604952e436b51980101dfc84cc1b3e"],"46d8ada1fff8d18cb197c38c7983225162599948":["c0a5c042827795d2f0b44db0cc8cd534b09d6d28","2acf500f78aa12b92e371fd89c719291986b6b90"]},"commit2Childs":{"5eb2511ababf862ea11e10761c70ee560cd84510":[],"448a213c5dfd8b9baaf143dcbf9e633d8d7d1d5e":["2acf500f78aa12b92e371fd89c719291986b6b90"],"fe33227f6805edab2036cbb80645cc4e2d1fa424":[],"9d3d365762604952e436b51980101dfc84cc1b3e":["5eb2511ababf862ea11e10761c70ee560cd84510","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["c0a5c042827795d2f0b44db0cc8cd534b09d6d28"],"2acf500f78aa12b92e371fd89c719291986b6b90":["5eb2511ababf862ea11e10761c70ee560cd84510","fe33227f6805edab2036cbb80645cc4e2d1fa424","9d3d365762604952e436b51980101dfc84cc1b3e","46d8ada1fff8d18cb197c38c7983225162599948"],"c0a5c042827795d2f0b44db0cc8cd534b09d6d28":["448a213c5dfd8b9baaf143dcbf9e633d8d7d1d5e","fe33227f6805edab2036cbb80645cc4e2d1fa424","2acf500f78aa12b92e371fd89c719291986b6b90","46d8ada1fff8d18cb197c38c7983225162599948"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"46d8ada1fff8d18cb197c38c7983225162599948":[]},"heads":["5eb2511ababf862ea11e10761c70ee560cd84510","fe33227f6805edab2036cbb80645cc4e2d1fa424","cd5edd1f2b162a5cfa08efd17851a07373a96817","46d8ada1fff8d18cb197c38c7983225162599948"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}