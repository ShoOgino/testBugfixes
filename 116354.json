{"path":"sandbox/contributions/filters/ChainedFilter#bits(IndexReader,int).mjava","commits":[{"id":"6e25d7326a5c0d5dcb2389e8d86a0ddcafe42bf5","date":1050889614,"type":0,"author":"Kelvin Tan","isMerge":false,"pathNew":"sandbox/contributions/filters/ChainedFilter#bits(IndexReader,int).mjava","pathOld":"/dev/null","sourceNew":"    /**\n     * Delegates to each filter in the chain.\n     * @param reader IndexReader\n     * @param logic Logical operation\n     * @return BitSet\n     */\n    private BitSet bits(IndexReader reader, int logic) throws IOException\n    {\n        BitSet result;\n        int i = 0;\n\n        /**\n         * First AND operation takes place against a completely false\n         * bitset and will always return zero results. Thanks to\n         * Daniel Armbrust for pointing this out and suggesting workaround.\n         */\n        if (logic == AND)\n        {\n            result = chain[i].bits(reader);\n            ++i;\n        }\n        else\n        {\n            result = new BitSet(reader.maxDoc());\n        }\n\n        for (; i < chain.length; i++)\n        {\n            doChain(result, reader, logic, chain[i]);\n        }\n        return result;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fd8955bd6ba2349daf04b868977a242c183b64b4","date":1050978349,"type":4,"author":"Otis Gospodnetic","isMerge":false,"pathNew":"/dev/null","pathOld":"sandbox/contributions/filters/ChainedFilter#bits(IndexReader,int).mjava","sourceNew":null,"sourceOld":"    /**\n     * Delegates to each filter in the chain.\n     * @param reader IndexReader\n     * @param logic Logical operation\n     * @return BitSet\n     */\n    private BitSet bits(IndexReader reader, int logic) throws IOException\n    {\n        BitSet result;\n        int i = 0;\n\n        /**\n         * First AND operation takes place against a completely false\n         * bitset and will always return zero results. Thanks to\n         * Daniel Armbrust for pointing this out and suggesting workaround.\n         */\n        if (logic == AND)\n        {\n            result = chain[i].bits(reader);\n            ++i;\n        }\n        else\n        {\n            result = new BitSet(reader.maxDoc());\n        }\n\n        for (; i < chain.length; i++)\n        {\n            doChain(result, reader, logic, chain[i]);\n        }\n        return result;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"fd8955bd6ba2349daf04b868977a242c183b64b4":["6e25d7326a5c0d5dcb2389e8d86a0ddcafe42bf5"],"6e25d7326a5c0d5dcb2389e8d86a0ddcafe42bf5":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["fd8955bd6ba2349daf04b868977a242c183b64b4"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["6e25d7326a5c0d5dcb2389e8d86a0ddcafe42bf5"],"fd8955bd6ba2349daf04b868977a242c183b64b4":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"6e25d7326a5c0d5dcb2389e8d86a0ddcafe42bf5":["fd8955bd6ba2349daf04b868977a242c183b64b4"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}