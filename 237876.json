{"path":"src/java/org/apache/solr/util/SolrPluginUtils#parseFuncs(IndexSchema,String).mjava","commits":[{"id":"e4b5867a57b32674ce740e66e6a7da8db3d4dd33","date":1148163441,"type":0,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"src/java/org/apache/solr/util/SolrPluginUtils#parseFuncs(IndexSchema,String).mjava","pathOld":"/dev/null","sourceNew":"  /**\n   * Given a string containing functions with optional boosts, returns\n   * an array of Queries representing those functions with the specified\n   * boosts.\n   * <p>\n   * NOTE: intra-function whitespace is not allowed.\n   * </p>\n   * @see #parseFieldBoosts\n   */\n  public static List<Query> parseFuncs(IndexSchema s, String in)\n    throws ParseException {\n  \n    Map<String,Float> ff = parseFieldBoosts(in);\n    List<Query> funcs = new ArrayList<Query>(ff.keySet().size());\n    for (String f : ff.keySet()) {\n      Query fq = QueryParsing.parseFunction(f, s);\n      Float b = ff.get(f);\n      if (null != b) {\n        fq.setBoost(b);\n      }\n      funcs.add(fq);\n    }\n    return funcs;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"cbca8d36fa6e78e5f32059dc9c80da83e66470de","date":1249752043,"type":3,"author":"Yonik Seeley","isMerge":false,"pathNew":"src/java/org/apache/solr/util/SolrPluginUtils#parseFuncs(IndexSchema,String).mjava","pathOld":"src/java/org/apache/solr/util/SolrPluginUtils#parseFuncs(IndexSchema,String).mjava","sourceNew":"  /**\n   * Given a string containing functions with optional boosts, returns\n   * an array of Queries representing those functions with the specified\n   * boosts.\n   * <p>\n   * NOTE: intra-function whitespace is not allowed.\n   * </p>\n   * @see #parseFieldBoosts\n   * @deprecated\n   */\n  public static List<Query> parseFuncs(IndexSchema s, String in)\n    throws ParseException {\n  \n    Map<String,Float> ff = parseFieldBoosts(in);\n    List<Query> funcs = new ArrayList<Query>(ff.keySet().size());\n    for (String f : ff.keySet()) {\n      Query fq = QueryParsing.parseFunction(f, s);\n      Float b = ff.get(f);\n      if (null != b) {\n        fq.setBoost(b);\n      }\n      funcs.add(fq);\n    }\n    return funcs;\n  }\n\n","sourceOld":"  /**\n   * Given a string containing functions with optional boosts, returns\n   * an array of Queries representing those functions with the specified\n   * boosts.\n   * <p>\n   * NOTE: intra-function whitespace is not allowed.\n   * </p>\n   * @see #parseFieldBoosts\n   */\n  public static List<Query> parseFuncs(IndexSchema s, String in)\n    throws ParseException {\n  \n    Map<String,Float> ff = parseFieldBoosts(in);\n    List<Query> funcs = new ArrayList<Query>(ff.keySet().size());\n    for (String f : ff.keySet()) {\n      Query fq = QueryParsing.parseFunction(f, s);\n      Float b = ff.get(f);\n      if (null != b) {\n        fq.setBoost(b);\n      }\n      funcs.add(fq);\n    }\n    return funcs;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"ad94625fb8d088209f46650c8097196fec67f00c","date":1453508319,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/util/SolrPluginUtils#parseFuncs(IndexSchema,String).mjava","pathOld":"src/java/org/apache/solr/util/SolrPluginUtils#parseFuncs(IndexSchema,String).mjava","sourceNew":"  /**\n   * Given a string containing functions with optional boosts, returns\n   * an array of Queries representing those functions with the specified\n   * boosts.\n   * <p>\n   * NOTE: intra-function whitespace is not allowed.\n   * </p>\n   * @see #parseFieldBoosts\n   * @deprecated\n   */\n  public static List<Query> parseFuncs(IndexSchema s, String in)\n    throws ParseException {\n  \n    Map<String,Float> ff = parseFieldBoosts(in);\n    List<Query> funcs = new ArrayList<Query>(ff.keySet().size());\n    for (String f : ff.keySet()) {\n      Query fq = QueryParsing.parseFunction(f, s);\n      Float b = ff.get(f);\n      if (null != b) {\n        fq.setBoost(b);\n      }\n      funcs.add(fq);\n    }\n    return funcs;\n  }\n\n","sourceOld":"  /**\n   * Given a string containing functions with optional boosts, returns\n   * an array of Queries representing those functions with the specified\n   * boosts.\n   * <p>\n   * NOTE: intra-function whitespace is not allowed.\n   * </p>\n   * @see #parseFieldBoosts\n   * @deprecated\n   */\n  public static List<Query> parseFuncs(IndexSchema s, String in)\n    throws ParseException {\n  \n    Map<String,Float> ff = parseFieldBoosts(in);\n    List<Query> funcs = new ArrayList<Query>(ff.keySet().size());\n    for (String f : ff.keySet()) {\n      Query fq = QueryParsing.parseFunction(f, s);\n      Float b = ff.get(f);\n      if (null != b) {\n        fq.setBoost(b);\n      }\n      funcs.add(fq);\n    }\n    return funcs;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"e4b5867a57b32674ce740e66e6a7da8db3d4dd33":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b"],"cbca8d36fa6e78e5f32059dc9c80da83e66470de":["e4b5867a57b32674ce740e66e6a7da8db3d4dd33"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":[],"ad94625fb8d088209f46650c8097196fec67f00c":["cbca8d36fa6e78e5f32059dc9c80da83e66470de"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"]},"commit2Childs":{"e4b5867a57b32674ce740e66e6a7da8db3d4dd33":["cbca8d36fa6e78e5f32059dc9c80da83e66470de"],"cbca8d36fa6e78e5f32059dc9c80da83e66470de":["ad94625fb8d088209f46650c8097196fec67f00c"],"3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b":["e4b5867a57b32674ce740e66e6a7da8db3d4dd33"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"ad94625fb8d088209f46650c8097196fec67f00c":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["ad94625fb8d088209f46650c8097196fec67f00c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["3cdb369a6112bacd5f5fc1d4e022bed2f8bffb9b","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}