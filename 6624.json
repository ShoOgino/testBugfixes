{"path":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/HttpSolrClient#fillContentStream(SolrRequest,Collection[ContentStream],ModifiableSolrParams,boolean,LinkedList[NameValuePair],String).mjava","commits":[{"id":"97bcd657104d24ce5e89db102939e68a6784bdda","date":1509417991,"type":0,"author":"Noble Paul","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/HttpSolrClient#fillContentStream(SolrRequest,Collection[ContentStream],ModifiableSolrParams,boolean,LinkedList[NameValuePair],String).mjava","pathOld":"/dev/null","sourceNew":"  private HttpEntityEnclosingRequestBase fillContentStream(SolrRequest request, Collection<ContentStream> streams, ModifiableSolrParams wparams, boolean isMultipart, LinkedList<NameValuePair> postOrPutParams, String fullQueryUrl) throws IOException {\n    HttpEntityEnclosingRequestBase postOrPut = SolrRequest.METHOD.POST == request.getMethod() ?\n        new HttpPost(fullQueryUrl) : new HttpPut(fullQueryUrl);\n\n    if (!isMultipart) {\n      postOrPut.addHeader(\"Content-Type\",\n          \"application/x-www-form-urlencoded; charset=UTF-8\");\n    }\n\n    List<FormBodyPart> parts = new LinkedList<>();\n    Iterator<String> iter = wparams.getParameterNamesIterator();\n    while (iter.hasNext()) {\n      String p = iter.next();\n      String[] vals = wparams.getParams(p);\n      if (vals != null) {\n        for (String v : vals) {\n          if (isMultipart) {\n            parts.add(new FormBodyPart(p, new StringBody(v, StandardCharsets.UTF_8)));\n          } else {\n            postOrPutParams.add(new BasicNameValuePair(p, v));\n          }\n        }\n      }\n    }\n\n    // TODO: remove deprecated - first simple attempt failed, see {@link MultipartEntityBuilder}\n    if (isMultipart && streams != null) {\n      for (ContentStream content : streams) {\n        String contentType = content.getContentType();\n        if (contentType == null) {\n          contentType = BinaryResponseParser.BINARY_CONTENT_TYPE; // default\n        }\n        String name = content.getName();\n        if (name == null) {\n          name = \"\";\n        }\n        parts.add(new FormBodyPart(name,\n            new InputStreamBody(\n                content.getStream(),\n                ContentType.parse(contentType),\n                content.getName())));\n      }\n    }\n\n    if (parts.size() > 0) {\n      MultipartEntity entity = new MultipartEntity(HttpMultipartMode.STRICT);\n      for (FormBodyPart p : parts) {\n        entity.addPart(p);\n      }\n      postOrPut.setEntity(entity);\n    } else {\n      //not using multipart\n      postOrPut.setEntity(new UrlEncodedFormEntity(postOrPutParams, StandardCharsets.UTF_8));\n    }\n    return postOrPut;\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0f4f6e13eb95702dc635119d2ccd4fa5fafcc88d","date":1592006776,"type":3,"author":"Erick Erickson","isMerge":false,"pathNew":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/HttpSolrClient#fillContentStream(SolrRequest,Collection[ContentStream],ModifiableSolrParams,boolean,LinkedList[NameValuePair],String).mjava","pathOld":"solr/solrj/src/java/org/apache/solr/client/solrj/impl/HttpSolrClient#fillContentStream(SolrRequest,Collection[ContentStream],ModifiableSolrParams,boolean,LinkedList[NameValuePair],String).mjava","sourceNew":"  private HttpEntityEnclosingRequestBase fillContentStream(\n          @SuppressWarnings({\"rawtypes\"})SolrRequest request,\n          Collection<ContentStream> streams, ModifiableSolrParams wparams,\n          boolean isMultipart, LinkedList<NameValuePair> postOrPutParams,\n          String fullQueryUrl) throws IOException {\n    HttpEntityEnclosingRequestBase postOrPut = SolrRequest.METHOD.POST == request.getMethod() ?\n        new HttpPost(fullQueryUrl) : new HttpPut(fullQueryUrl);\n\n    if (!isMultipart) {\n      postOrPut.addHeader(\"Content-Type\",\n          \"application/x-www-form-urlencoded; charset=UTF-8\");\n    }\n\n    List<FormBodyPart> parts = new LinkedList<>();\n    Iterator<String> iter = wparams.getParameterNamesIterator();\n    while (iter.hasNext()) {\n      String p = iter.next();\n      String[] vals = wparams.getParams(p);\n      if (vals != null) {\n        for (String v : vals) {\n          if (isMultipart) {\n            parts.add(new FormBodyPart(p, new StringBody(v, StandardCharsets.UTF_8)));\n          } else {\n            postOrPutParams.add(new BasicNameValuePair(p, v));\n          }\n        }\n      }\n    }\n\n    // TODO: remove deprecated - first simple attempt failed, see {@link MultipartEntityBuilder}\n    if (isMultipart && streams != null) {\n      for (ContentStream content : streams) {\n        String contentType = content.getContentType();\n        if (contentType == null) {\n          contentType = BinaryResponseParser.BINARY_CONTENT_TYPE; // default\n        }\n        String name = content.getName();\n        if (name == null) {\n          name = \"\";\n        }\n        parts.add(new FormBodyPart(name,\n            new InputStreamBody(\n                content.getStream(),\n                ContentType.parse(contentType),\n                content.getName())));\n      }\n    }\n\n    if (parts.size() > 0) {\n      MultipartEntity entity = new MultipartEntity(HttpMultipartMode.STRICT);\n      for (FormBodyPart p : parts) {\n        entity.addPart(p);\n      }\n      postOrPut.setEntity(entity);\n    } else {\n      //not using multipart\n      postOrPut.setEntity(new UrlEncodedFormEntity(postOrPutParams, StandardCharsets.UTF_8));\n    }\n    return postOrPut;\n  }\n\n","sourceOld":"  private HttpEntityEnclosingRequestBase fillContentStream(SolrRequest request, Collection<ContentStream> streams, ModifiableSolrParams wparams, boolean isMultipart, LinkedList<NameValuePair> postOrPutParams, String fullQueryUrl) throws IOException {\n    HttpEntityEnclosingRequestBase postOrPut = SolrRequest.METHOD.POST == request.getMethod() ?\n        new HttpPost(fullQueryUrl) : new HttpPut(fullQueryUrl);\n\n    if (!isMultipart) {\n      postOrPut.addHeader(\"Content-Type\",\n          \"application/x-www-form-urlencoded; charset=UTF-8\");\n    }\n\n    List<FormBodyPart> parts = new LinkedList<>();\n    Iterator<String> iter = wparams.getParameterNamesIterator();\n    while (iter.hasNext()) {\n      String p = iter.next();\n      String[] vals = wparams.getParams(p);\n      if (vals != null) {\n        for (String v : vals) {\n          if (isMultipart) {\n            parts.add(new FormBodyPart(p, new StringBody(v, StandardCharsets.UTF_8)));\n          } else {\n            postOrPutParams.add(new BasicNameValuePair(p, v));\n          }\n        }\n      }\n    }\n\n    // TODO: remove deprecated - first simple attempt failed, see {@link MultipartEntityBuilder}\n    if (isMultipart && streams != null) {\n      for (ContentStream content : streams) {\n        String contentType = content.getContentType();\n        if (contentType == null) {\n          contentType = BinaryResponseParser.BINARY_CONTENT_TYPE; // default\n        }\n        String name = content.getName();\n        if (name == null) {\n          name = \"\";\n        }\n        parts.add(new FormBodyPart(name,\n            new InputStreamBody(\n                content.getStream(),\n                ContentType.parse(contentType),\n                content.getName())));\n      }\n    }\n\n    if (parts.size() > 0) {\n      MultipartEntity entity = new MultipartEntity(HttpMultipartMode.STRICT);\n      for (FormBodyPart p : parts) {\n        entity.addPart(p);\n      }\n      postOrPut.setEntity(entity);\n    } else {\n      //not using multipart\n      postOrPut.setEntity(new UrlEncodedFormEntity(postOrPutParams, StandardCharsets.UTF_8));\n    }\n    return postOrPut;\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"0f4f6e13eb95702dc635119d2ccd4fa5fafcc88d":["97bcd657104d24ce5e89db102939e68a6784bdda"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"97bcd657104d24ce5e89db102939e68a6784bdda":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["0f4f6e13eb95702dc635119d2ccd4fa5fafcc88d"]},"commit2Childs":{"0f4f6e13eb95702dc635119d2ccd4fa5fafcc88d":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["97bcd657104d24ce5e89db102939e68a6784bdda"],"97bcd657104d24ce5e89db102939e68a6784bdda":["0f4f6e13eb95702dc635119d2ccd4fa5fafcc88d"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}