{"path":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/ChildrenArrays#computeArrays(int[],int).mjava","commits":[{"id":"219dcddcdf2fc13f6271d9e5836bd19c53a4abf1","date":1353511594,"type":0,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/ChildrenArrays#computeArrays(int[],int).mjava","pathOld":"/dev/null","sourceNew":"  private void computeArrays(int[] parents, int first) {\n    // reset the youngest child of all ordinals. while this should be done only\n    // for the leaves, we don't know up front which are the leaves, so we reset\n    // all of them.\n    for (int i = first; i < parents.length; i++) {\n      youngestChild[i] = TaxonomyReader.INVALID_ORDINAL;\n    }\n    \n    // the root category has no parent, and therefore no siblings\n    if (first == 0) {\n      first = 1;\n      olderSibling[0] = TaxonomyReader.INVALID_ORDINAL;\n    }\n    \n    for (int i = first; i < parents.length; i++) {\n      // note that parents[i] is always < i, so the right-hand-side of\n      // the following line is already set when we get here\n      olderSibling[i] = youngestChild[parents[i]];\n      youngestChild[parents[i]] = i;\n    }\n  }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3d58d08788c3fd51172ba34474cca42499d6391b","date":1354802133,"type":5,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/directory/ParallelTaxonomyArrays#computeChildrenSiblings(int[],int).mjava","pathOld":"lucene/facet/src/java/org/apache/lucene/facet/taxonomy/ChildrenArrays#computeArrays(int[],int).mjava","sourceNew":"  private void computeChildrenSiblings(int[] parents, int first) {\n    // reset the youngest child of all ordinals. while this should be done only\n    // for the leaves, we don't know up front which are the leaves, so we reset\n    // all of them.\n    for (int i = first; i < parents.length; i++) {\n      children[i] = TaxonomyReader.INVALID_ORDINAL;\n    }\n    \n    // the root category has no parent, and therefore no siblings\n    if (first == 0) {\n      first = 1;\n      siblings[0] = TaxonomyReader.INVALID_ORDINAL;\n    }\n    \n    for (int i = first; i < parents.length; i++) {\n      // note that parents[i] is always < i, so the right-hand-side of\n      // the following line is already set when we get here\n      siblings[i] = children[parents[i]];\n      children[parents[i]] = i;\n    }\n  }\n\n","sourceOld":"  private void computeArrays(int[] parents, int first) {\n    // reset the youngest child of all ordinals. while this should be done only\n    // for the leaves, we don't know up front which are the leaves, so we reset\n    // all of them.\n    for (int i = first; i < parents.length; i++) {\n      youngestChild[i] = TaxonomyReader.INVALID_ORDINAL;\n    }\n    \n    // the root category has no parent, and therefore no siblings\n    if (first == 0) {\n      first = 1;\n      olderSibling[0] = TaxonomyReader.INVALID_ORDINAL;\n    }\n    \n    for (int i = first; i < parents.length; i++) {\n      // note that parents[i] is always < i, so the right-hand-side of\n      // the following line is already set when we get here\n      olderSibling[i] = youngestChild[parents[i]];\n      youngestChild[parents[i]] = i;\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"3d58d08788c3fd51172ba34474cca42499d6391b":["219dcddcdf2fc13f6271d9e5836bd19c53a4abf1"],"219dcddcdf2fc13f6271d9e5836bd19c53a4abf1":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3d58d08788c3fd51172ba34474cca42499d6391b"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["219dcddcdf2fc13f6271d9e5836bd19c53a4abf1"],"3d58d08788c3fd51172ba34474cca42499d6391b":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"219dcddcdf2fc13f6271d9e5836bd19c53a4abf1":["3d58d08788c3fd51172ba34474cca42499d6391b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}