{"path":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/tree/PackedQuadPrefixTree.PackedQuadCell#compareToNoLeaf(Cell).mjava","commits":[{"id":"112d77ac8d3e10a362516ad834c9a11d35c94234","date":1456784319,"type":1,"author":"nknize","isMerge":false,"pathNew":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/tree/PackedQuadPrefixTree.PackedQuadCell#compareToNoLeaf(Cell).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/tree/PackedQuadPrefixTree.PackedQuadCell#compareToNoLeaf(Cell).mjava","sourceNew":"    @Override\n    public int compareToNoLeaf(Cell fromCell) {\n      PackedQuadCell b = (PackedQuadCell) fromCell;\n      final long thisTerm = (((0x1L)&term) == 0x1L) ? term-1 : term;\n      final long fromTerm = (((0x1L)&b.term) == 0x1L) ? b.term-1 : b.term;\n      final int result = Long.compareUnsigned(thisTerm, fromTerm);\n      assert Math.signum(result)\n          == Math.signum(compare(longToByteArray(thisTerm), 0, 8, longToByteArray(fromTerm), 0, 8)); // TODO remove\n      return result;\n    }\n\n","sourceOld":"    @Override\n    public int compareToNoLeaf(Cell fromCell) {\n      PackedQuadCell b = (PackedQuadCell) fromCell;\n      final long thisTerm = (((0x1L)&term) == 0x1L) ? term-1 : term;\n      final long fromTerm = (((0x1L)&b.term) == 0x1L) ? b.term-1 : b.term;\n      final int result = Long.compareUnsigned(thisTerm, fromTerm);\n      assert Math.signum(result)\n          == Math.signum(compare(longToByteArray(thisTerm), 0, 8, longToByteArray(fromTerm), 0, 8)); // TODO remove\n      return result;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"af2638813028b254a88b418ebeafb541afb49653","date":1456804822,"type":1,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/tree/PackedQuadPrefixTree.PackedQuadCell#compareToNoLeaf(Cell).mjava","pathOld":"lucene/spatial/src/java/org/apache/lucene/spatial/prefix/tree/PackedQuadPrefixTree.PackedQuadCell#compareToNoLeaf(Cell).mjava","sourceNew":"    @Override\n    public int compareToNoLeaf(Cell fromCell) {\n      PackedQuadCell b = (PackedQuadCell) fromCell;\n      final long thisTerm = (((0x1L)&term) == 0x1L) ? term-1 : term;\n      final long fromTerm = (((0x1L)&b.term) == 0x1L) ? b.term-1 : b.term;\n      final int result = Long.compareUnsigned(thisTerm, fromTerm);\n      assert Math.signum(result)\n          == Math.signum(compare(longToByteArray(thisTerm), 0, 8, longToByteArray(fromTerm), 0, 8)); // TODO remove\n      return result;\n    }\n\n","sourceOld":"    @Override\n    public int compareToNoLeaf(Cell fromCell) {\n      PackedQuadCell b = (PackedQuadCell) fromCell;\n      final long thisTerm = (((0x1L)&term) == 0x1L) ? term-1 : term;\n      final long fromTerm = (((0x1L)&b.term) == 0x1L) ? b.term-1 : b.term;\n      final int result = Long.compareUnsigned(thisTerm, fromTerm);\n      assert Math.signum(result)\n          == Math.signum(compare(longToByteArray(thisTerm), 0, 8, longToByteArray(fromTerm), 0, 8)); // TODO remove\n      return result;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3376b29f59b36d3048cd7d364900ea06ae265e28","date":1496294006,"type":3,"author":"David Smiley","isMerge":false,"pathNew":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/tree/PackedQuadPrefixTree.PackedQuadCell#compareToNoLeaf(Cell).mjava","pathOld":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/tree/PackedQuadPrefixTree.PackedQuadCell#compareToNoLeaf(Cell).mjava","sourceNew":"    @Override\n    public int compareToNoLeaf(Cell fromCell) {\n      PackedQuadCell b = (PackedQuadCell) fromCell;\n      //TODO clear last bit without the condition\n      final long thisTerm = (((0x1L)&term) == 0x1L) ? term-1 : term;\n      final long fromTerm = (((0x1L)&b.term) == 0x1L) ? b.term-1 : b.term;\n      final int result = Long.compareUnsigned(thisTerm, fromTerm);\n      assert Math.signum(result)\n          == Math.signum(compare(longToByteArray(thisTerm, new byte[8]), 0, 8, longToByteArray(fromTerm, new byte[8]), 0, 8)); // TODO remove\n      return result;\n    }\n\n","sourceOld":"    @Override\n    public int compareToNoLeaf(Cell fromCell) {\n      PackedQuadCell b = (PackedQuadCell) fromCell;\n      final long thisTerm = (((0x1L)&term) == 0x1L) ? term-1 : term;\n      final long fromTerm = (((0x1L)&b.term) == 0x1L) ? b.term-1 : b.term;\n      final int result = Long.compareUnsigned(thisTerm, fromTerm);\n      assert Math.signum(result)\n          == Math.signum(compare(longToByteArray(thisTerm), 0, 8, longToByteArray(fromTerm), 0, 8)); // TODO remove\n      return result;\n    }\n\n","bugFix":["9d3854546d75fdc5a4c3b13d0c67b6b331185945"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e9017cf144952056066919f1ebc7897ff9bd71b1","date":1496757600,"type":3,"author":"Shalin Shekhar Mangar","isMerge":true,"pathNew":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/tree/PackedQuadPrefixTree.PackedQuadCell#compareToNoLeaf(Cell).mjava","pathOld":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/tree/PackedQuadPrefixTree.PackedQuadCell#compareToNoLeaf(Cell).mjava","sourceNew":"    @Override\n    public int compareToNoLeaf(Cell fromCell) {\n      PackedQuadCell b = (PackedQuadCell) fromCell;\n      //TODO clear last bit without the condition\n      final long thisTerm = (((0x1L)&term) == 0x1L) ? term-1 : term;\n      final long fromTerm = (((0x1L)&b.term) == 0x1L) ? b.term-1 : b.term;\n      final int result = Long.compareUnsigned(thisTerm, fromTerm);\n      assert Math.signum(result)\n          == Math.signum(compare(longToByteArray(thisTerm, new byte[8]), 0, 8, longToByteArray(fromTerm, new byte[8]), 0, 8)); // TODO remove\n      return result;\n    }\n\n","sourceOld":"    @Override\n    public int compareToNoLeaf(Cell fromCell) {\n      PackedQuadCell b = (PackedQuadCell) fromCell;\n      final long thisTerm = (((0x1L)&term) == 0x1L) ? term-1 : term;\n      final long fromTerm = (((0x1L)&b.term) == 0x1L) ? b.term-1 : b.term;\n      final int result = Long.compareUnsigned(thisTerm, fromTerm);\n      assert Math.signum(result)\n          == Math.signum(compare(longToByteArray(thisTerm), 0, 8, longToByteArray(fromTerm), 0, 8)); // TODO remove\n      return result;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28288370235ed02234a64753cdbf0c6ec096304a","date":1498726817,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/tree/PackedQuadPrefixTree.PackedQuadCell#compareToNoLeaf(Cell).mjava","pathOld":"lucene/spatial-extras/src/java/org/apache/lucene/spatial/prefix/tree/PackedQuadPrefixTree.PackedQuadCell#compareToNoLeaf(Cell).mjava","sourceNew":"    @Override\n    public int compareToNoLeaf(Cell fromCell) {\n      PackedQuadCell b = (PackedQuadCell) fromCell;\n      //TODO clear last bit without the condition\n      final long thisTerm = (((0x1L)&term) == 0x1L) ? term-1 : term;\n      final long fromTerm = (((0x1L)&b.term) == 0x1L) ? b.term-1 : b.term;\n      final int result = Long.compareUnsigned(thisTerm, fromTerm);\n      assert Math.signum(result)\n          == Math.signum(compare(longToByteArray(thisTerm, new byte[8]), 0, 8, longToByteArray(fromTerm, new byte[8]), 0, 8)); // TODO remove\n      return result;\n    }\n\n","sourceOld":"    @Override\n    public int compareToNoLeaf(Cell fromCell) {\n      PackedQuadCell b = (PackedQuadCell) fromCell;\n      final long thisTerm = (((0x1L)&term) == 0x1L) ? term-1 : term;\n      final long fromTerm = (((0x1L)&b.term) == 0x1L) ? b.term-1 : b.term;\n      final int result = Long.compareUnsigned(thisTerm, fromTerm);\n      assert Math.signum(result)\n          == Math.signum(compare(longToByteArray(thisTerm), 0, 8, longToByteArray(fromTerm), 0, 8)); // TODO remove\n      return result;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"af2638813028b254a88b418ebeafb541afb49653":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","112d77ac8d3e10a362516ad834c9a11d35c94234"],"e9017cf144952056066919f1ebc7897ff9bd71b1":["af2638813028b254a88b418ebeafb541afb49653","3376b29f59b36d3048cd7d364900ea06ae265e28"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"112d77ac8d3e10a362516ad834c9a11d35c94234":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"3376b29f59b36d3048cd7d364900ea06ae265e28":["af2638813028b254a88b418ebeafb541afb49653"],"28288370235ed02234a64753cdbf0c6ec096304a":["af2638813028b254a88b418ebeafb541afb49653","3376b29f59b36d3048cd7d364900ea06ae265e28"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["28288370235ed02234a64753cdbf0c6ec096304a"]},"commit2Childs":{"af2638813028b254a88b418ebeafb541afb49653":["e9017cf144952056066919f1ebc7897ff9bd71b1","3376b29f59b36d3048cd7d364900ea06ae265e28","28288370235ed02234a64753cdbf0c6ec096304a"],"e9017cf144952056066919f1ebc7897ff9bd71b1":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["af2638813028b254a88b418ebeafb541afb49653","112d77ac8d3e10a362516ad834c9a11d35c94234"],"112d77ac8d3e10a362516ad834c9a11d35c94234":["af2638813028b254a88b418ebeafb541afb49653"],"3376b29f59b36d3048cd7d364900ea06ae265e28":["e9017cf144952056066919f1ebc7897ff9bd71b1","28288370235ed02234a64753cdbf0c6ec096304a"],"28288370235ed02234a64753cdbf0c6ec096304a":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["e9017cf144952056066919f1ebc7897ff9bd71b1","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}