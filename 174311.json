{"path":"lucene/src/java/org/apache/lucene/search/FieldComparator.IntDocValuesComparator#setNextReader(AtomicReaderContext).mjava","commits":[{"id":"29ef99d61cda9641b6250bf9567329a6e65f901d","date":1297244127,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/FieldComparator.IntDocValuesComparator#setNextReader(AtomicReaderContext).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public FieldComparator setNextReader(AtomicReaderContext context) throws IOException {\n      currentReaderValues = context.reader.docValues(field).getSource();\n      return this;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9235b9d4454a46c066cda47fed7ca0a34e614529","date":1304414372,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/FieldComparator.IntDocValuesComparator#setNextReader(AtomicReaderContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/FieldComparator.IntDocValuesComparator#setNextReader(AtomicReaderContext).mjava","sourceNew":"    @Override\n    public FieldComparator setNextReader(AtomicReaderContext context) throws IOException {\n      DocValues docValues = context.reader.docValues(field);\n      if (docValues != null) {\n        currentReaderValues = docValues.getSource();\n        missing = currentReaderValues.getMissing();\n      }\n      return this;\n    }\n\n","sourceOld":"    @Override\n    public FieldComparator setNextReader(AtomicReaderContext context) throws IOException {\n      currentReaderValues = context.reader.docValues(field).getSource();\n      return this;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4034ca0f8f74fdf56e25be73822f2441fc1c1b46","date":1307111599,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/FieldComparator.IntDocValuesComparator#setNextReader(AtomicReaderContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/FieldComparator.IntDocValuesComparator#setNextReader(AtomicReaderContext).mjava","sourceNew":"    @Override\n    public FieldComparator setNextReader(AtomicReaderContext context) throws IOException {\n      DocValues docValues = context.reader.docValues(field);\n      if (docValues != null) {\n        currentReaderValues = docValues.getSource();\n      }\n      return this;\n    }\n\n","sourceOld":"    @Override\n    public FieldComparator setNextReader(AtomicReaderContext context) throws IOException {\n      DocValues docValues = context.reader.docValues(field);\n      if (docValues != null) {\n        currentReaderValues = docValues.getSource();\n        missing = currentReaderValues.getMissing();\n      }\n      return this;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"41e5bbad683f7546e96f08ffe8bc50cf447f2586","date":1307113213,"type":3,"author":"Simon Willnauer","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/FieldComparator.IntDocValuesComparator#setNextReader(AtomicReaderContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/FieldComparator.IntDocValuesComparator#setNextReader(AtomicReaderContext).mjava","sourceNew":"    @Override\n    public FieldComparator setNextReader(AtomicReaderContext context) throws IOException {\n      IndexDocValues docValues = context.reader.docValues(field);\n      if (docValues != null) {\n        currentReaderValues = docValues.getSource();\n      }\n      return this;\n    }\n\n","sourceOld":"    @Override\n    public FieldComparator setNextReader(AtomicReaderContext context) throws IOException {\n      DocValues docValues = context.reader.docValues(field);\n      if (docValues != null) {\n        currentReaderValues = docValues.getSource();\n      }\n      return this;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2e8d7ba2175f47e280231533f7d3016249cea88b","date":1307711934,"type":0,"author":"Simon Willnauer","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/FieldComparator.IntDocValuesComparator#setNextReader(AtomicReaderContext).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public FieldComparator setNextReader(AtomicReaderContext context) throws IOException {\n      IndexDocValues docValues = context.reader.docValues(field);\n      if (docValues != null) {\n        currentReaderValues = docValues.getSource();\n      }\n      return this;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","date":1307729864,"type":0,"author":"Steven Rowe","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/FieldComparator.IntDocValuesComparator#setNextReader(AtomicReaderContext).mjava","pathOld":"/dev/null","sourceNew":"    @Override\n    public FieldComparator setNextReader(AtomicReaderContext context) throws IOException {\n      IndexDocValues docValues = context.reader.docValues(field);\n      if (docValues != null) {\n        currentReaderValues = docValues.getSource();\n      }\n      return this;\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"28088b0a688977b79dec2cc9119cff2fb4aab7ee","date":1321197996,"type":3,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/FieldComparator.IntDocValuesComparator#setNextReader(AtomicReaderContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/FieldComparator.IntDocValuesComparator#setNextReader(AtomicReaderContext).mjava","sourceNew":"    @Override\n    public FieldComparator setNextReader(AtomicReaderContext context) throws IOException {\n      IndexDocValues docValues = context.reader.docValues(field);\n      if (docValues != null) {\n        currentReaderValues = docValues.getSource();\n      } else {\n        currentReaderValues = IndexDocValues.getDefaultSource(ValueType.FIXED_INTS_64);\n      }\n      return this;\n    }\n\n","sourceOld":"    @Override\n    public FieldComparator setNextReader(AtomicReaderContext context) throws IOException {\n      IndexDocValues docValues = context.reader.docValues(field);\n      if (docValues != null) {\n        currentReaderValues = docValues.getSource();\n      }\n      return this;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1e59c344a45b9502f40ec44f5fe4e20ed2291dbe","date":1323449025,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/FieldComparator.IntDocValuesComparator#setNextReader(AtomicReaderContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/FieldComparator.IntDocValuesComparator#setNextReader(AtomicReaderContext).mjava","sourceNew":"    @Override\n    public FieldComparator setNextReader(AtomicReaderContext context) throws IOException {\n      DocValues docValues = context.reader.docValues(field);\n      if (docValues != null) {\n        currentReaderValues = docValues.getSource();\n      } else {\n        currentReaderValues = DocValues.getDefaultSource(DocValues.Type.FIXED_INTS_64);\n      }\n      return this;\n    }\n\n","sourceOld":"    @Override\n    public FieldComparator setNextReader(AtomicReaderContext context) throws IOException {\n      IndexDocValues docValues = context.reader.docValues(field);\n      if (docValues != null) {\n        currentReaderValues = docValues.getSource();\n      } else {\n        currentReaderValues = IndexDocValues.getDefaultSource(ValueType.FIXED_INTS_64);\n      }\n      return this;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d638301ad1cfcae567b681b893bc8781f0ee48a5","date":1323801546,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/FieldComparator.IntDocValuesComparator#setNextReader(AtomicReaderContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/FieldComparator.IntDocValuesComparator#setNextReader(AtomicReaderContext).mjava","sourceNew":"    @Override\n    public FieldComparator setNextReader(AtomicReaderContext context) throws IOException {\n      DocValues docValues = context.reader.docValues(field);\n      if (docValues != null) {\n        currentReaderValues = docValues.getSource();\n      } else {\n        currentReaderValues = DocValues.getDefaultSource(DocValues.Type.FIXED_INTS_64);\n      }\n      return this;\n    }\n\n","sourceOld":"    @Override\n    public FieldComparator setNextReader(AtomicReaderContext context) throws IOException {\n      IndexDocValues docValues = context.reader.docValues(field);\n      if (docValues != null) {\n        currentReaderValues = docValues.getSource();\n      } else {\n        currentReaderValues = IndexDocValues.getDefaultSource(ValueType.FIXED_INTS_64);\n      }\n      return this;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6fff8f4b218bd0626afcdce82027bafeb84a50a4","date":1327229950,"type":3,"author":"Uwe Schindler","isMerge":false,"pathNew":"lucene/src/java/org/apache/lucene/search/FieldComparator.IntDocValuesComparator#setNextReader(AtomicReaderContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/FieldComparator.IntDocValuesComparator#setNextReader(AtomicReaderContext).mjava","sourceNew":"    @Override\n    public FieldComparator setNextReader(AtomicReaderContext context) throws IOException {\n      DocValues docValues = context.reader().docValues(field);\n      if (docValues != null) {\n        currentReaderValues = docValues.getSource();\n      } else {\n        currentReaderValues = DocValues.getDefaultSource(DocValues.Type.FIXED_INTS_64);\n      }\n      return this;\n    }\n\n","sourceOld":"    @Override\n    public FieldComparator setNextReader(AtomicReaderContext context) throws IOException {\n      DocValues docValues = context.reader.docValues(field);\n      if (docValues != null) {\n        currentReaderValues = docValues.getSource();\n      } else {\n        currentReaderValues = DocValues.getDefaultSource(DocValues.Type.FIXED_INTS_64);\n      }\n      return this;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"5cab9a86bd67202d20b6adc463008c8e982b070a","date":1327966443,"type":3,"author":"Uwe Schindler","isMerge":true,"pathNew":"lucene/src/java/org/apache/lucene/search/FieldComparator.IntDocValuesComparator#setNextReader(AtomicReaderContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/FieldComparator.IntDocValuesComparator#setNextReader(AtomicReaderContext).mjava","sourceNew":"    @Override\n    public FieldComparator setNextReader(AtomicReaderContext context) throws IOException {\n      DocValues docValues = context.reader().docValues(field);\n      if (docValues != null) {\n        currentReaderValues = docValues.getSource();\n      } else {\n        currentReaderValues = DocValues.getDefaultSource(DocValues.Type.FIXED_INTS_64);\n      }\n      return this;\n    }\n\n","sourceOld":"    @Override\n    public FieldComparator setNextReader(AtomicReaderContext context) throws IOException {\n      DocValues docValues = context.reader.docValues(field);\n      if (docValues != null) {\n        currentReaderValues = docValues.getSource();\n      } else {\n        currentReaderValues = DocValues.getDefaultSource(DocValues.Type.FIXED_INTS_64);\n      }\n      return this;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3a119bbc8703c10faa329ec201c654b3a35a1e3e","date":1328644745,"type":5,"author":"Steven Rowe","isMerge":false,"pathNew":"lucene/core/src/java/org/apache/lucene/search/FieldComparator.IntDocValuesComparator#setNextReader(AtomicReaderContext).mjava","pathOld":"lucene/src/java/org/apache/lucene/search/FieldComparator.IntDocValuesComparator#setNextReader(AtomicReaderContext).mjava","sourceNew":"    @Override\n    public FieldComparator setNextReader(AtomicReaderContext context) throws IOException {\n      DocValues docValues = context.reader().docValues(field);\n      if (docValues != null) {\n        currentReaderValues = docValues.getSource();\n      } else {\n        currentReaderValues = DocValues.getDefaultSource(DocValues.Type.FIXED_INTS_64);\n      }\n      return this;\n    }\n\n","sourceOld":"    @Override\n    public FieldComparator setNextReader(AtomicReaderContext context) throws IOException {\n      DocValues docValues = context.reader().docValues(field);\n      if (docValues != null) {\n        currentReaderValues = docValues.getSource();\n      } else {\n        currentReaderValues = DocValues.getDefaultSource(DocValues.Type.FIXED_INTS_64);\n      }\n      return this;\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","2e8d7ba2175f47e280231533f7d3016249cea88b"],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"6fff8f4b218bd0626afcdce82027bafeb84a50a4":["d638301ad1cfcae567b681b893bc8781f0ee48a5"],"5cab9a86bd67202d20b6adc463008c8e982b070a":["d638301ad1cfcae567b681b893bc8781f0ee48a5","6fff8f4b218bd0626afcdce82027bafeb84a50a4"],"d638301ad1cfcae567b681b893bc8781f0ee48a5":["28088b0a688977b79dec2cc9119cff2fb4aab7ee","1e59c344a45b9502f40ec44f5fe4e20ed2291dbe"],"9235b9d4454a46c066cda47fed7ca0a34e614529":["29ef99d61cda9641b6250bf9567329a6e65f901d"],"2e8d7ba2175f47e280231533f7d3016249cea88b":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","41e5bbad683f7546e96f08ffe8bc50cf447f2586"],"4034ca0f8f74fdf56e25be73822f2441fc1c1b46":["9235b9d4454a46c066cda47fed7ca0a34e614529"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"1e59c344a45b9502f40ec44f5fe4e20ed2291dbe":["28088b0a688977b79dec2cc9119cff2fb4aab7ee"],"28088b0a688977b79dec2cc9119cff2fb4aab7ee":["2e8d7ba2175f47e280231533f7d3016249cea88b"],"41e5bbad683f7546e96f08ffe8bc50cf447f2586":["4034ca0f8f74fdf56e25be73822f2441fc1c1b46"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"]},"commit2Childs":{"a02058e0eaba4bbd5d05e6b06b9522c0acfd1655":[],"3a119bbc8703c10faa329ec201c654b3a35a1e3e":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"6fff8f4b218bd0626afcdce82027bafeb84a50a4":["5cab9a86bd67202d20b6adc463008c8e982b070a"],"5cab9a86bd67202d20b6adc463008c8e982b070a":["3a119bbc8703c10faa329ec201c654b3a35a1e3e"],"d638301ad1cfcae567b681b893bc8781f0ee48a5":["6fff8f4b218bd0626afcdce82027bafeb84a50a4","5cab9a86bd67202d20b6adc463008c8e982b070a"],"9235b9d4454a46c066cda47fed7ca0a34e614529":["4034ca0f8f74fdf56e25be73822f2441fc1c1b46"],"2e8d7ba2175f47e280231533f7d3016249cea88b":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","28088b0a688977b79dec2cc9119cff2fb4aab7ee"],"29ef99d61cda9641b6250bf9567329a6e65f901d":["9235b9d4454a46c066cda47fed7ca0a34e614529"],"4034ca0f8f74fdf56e25be73822f2441fc1c1b46":["41e5bbad683f7546e96f08ffe8bc50cf447f2586"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","2e8d7ba2175f47e280231533f7d3016249cea88b","29ef99d61cda9641b6250bf9567329a6e65f901d"],"1e59c344a45b9502f40ec44f5fe4e20ed2291dbe":["d638301ad1cfcae567b681b893bc8781f0ee48a5"],"28088b0a688977b79dec2cc9119cff2fb4aab7ee":["d638301ad1cfcae567b681b893bc8781f0ee48a5","1e59c344a45b9502f40ec44f5fe4e20ed2291dbe"],"41e5bbad683f7546e96f08ffe8bc50cf447f2586":["2e8d7ba2175f47e280231533f7d3016249cea88b"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a02058e0eaba4bbd5d05e6b06b9522c0acfd1655","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}