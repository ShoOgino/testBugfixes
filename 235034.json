{"path":"lucene/backward-codecs/src/test/org/apache/lucene/index/TestBackwardsCompatibility#newIndexUpgrader(Directory).mjava","commits":[{"id":"4cc45c615dbb82bf79d5f9550286098367874fbf","date":1409571423,"type":1,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/backward-codecs/src/test/org/apache/lucene/index/TestBackwardsCompatibility#newIndexUpgrader(Directory).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestBackwardsCompatibility#newIndexUpgrader(Directory).mjava","sourceNew":"  /**\n   * Randomizes the use of some of hte constructor variations\n   */\n  private static IndexUpgrader newIndexUpgrader(Directory dir) {\n    final boolean streamType = random().nextBoolean();\n    final int choice = TestUtil.nextInt(random(), 0, 2);\n    switch (choice) {\n      case 0: return new IndexUpgrader(dir);\n      case 1: return new IndexUpgrader(dir, streamType ? null : InfoStream.NO_OUTPUT, false);\n      case 2: return new IndexUpgrader(dir, newIndexWriterConfig(null), false);\n      default: fail(\"case statement didn't get updated when random bounds changed\");\n    }\n    return null; // never get here\n  }\n\n","sourceOld":"  /**\n   * Randomizes the use of some of hte constructor variations\n   */\n  private static IndexUpgrader newIndexUpgrader(Directory dir) {\n    final boolean streamType = random().nextBoolean();\n    final int choice = TestUtil.nextInt(random(), 0, 2);\n    switch (choice) {\n      case 0: return new IndexUpgrader(dir);\n      case 1: return new IndexUpgrader(dir, streamType ? null : InfoStream.NO_OUTPUT, false);\n      case 2: return new IndexUpgrader(dir, newIndexWriterConfig(null), false);\n      default: fail(\"case statement didn't get updated when random bounds changed\");\n    }\n    return null; // never get here\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"402ad3ddc9da7b70da1b167667a60ece6a1381fb","date":1409656478,"type":1,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/backward-codecs/src/test/org/apache/lucene/index/TestBackwardsCompatibility#newIndexUpgrader(Directory).mjava","pathOld":"lucene/core/src/test/org/apache/lucene/index/TestBackwardsCompatibility#newIndexUpgrader(Directory).mjava","sourceNew":"  /**\n   * Randomizes the use of some of hte constructor variations\n   */\n  private static IndexUpgrader newIndexUpgrader(Directory dir) {\n    final boolean streamType = random().nextBoolean();\n    final int choice = TestUtil.nextInt(random(), 0, 2);\n    switch (choice) {\n      case 0: return new IndexUpgrader(dir);\n      case 1: return new IndexUpgrader(dir, streamType ? null : InfoStream.NO_OUTPUT, false);\n      case 2: return new IndexUpgrader(dir, newIndexWriterConfig(null), false);\n      default: fail(\"case statement didn't get updated when random bounds changed\");\n    }\n    return null; // never get here\n  }\n\n","sourceOld":"  /**\n   * Randomizes the use of some of hte constructor variations\n   */\n  private static IndexUpgrader newIndexUpgrader(Directory dir) {\n    final boolean streamType = random().nextBoolean();\n    final int choice = TestUtil.nextInt(random(), 0, 2);\n    switch (choice) {\n      case 0: return new IndexUpgrader(dir);\n      case 1: return new IndexUpgrader(dir, streamType ? null : InfoStream.NO_OUTPUT, false);\n      case 2: return new IndexUpgrader(dir, newIndexWriterConfig(null), false);\n      default: fail(\"case statement didn't get updated when random bounds changed\");\n    }\n    return null; // never get here\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"4cc45c615dbb82bf79d5f9550286098367874fbf":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"402ad3ddc9da7b70da1b167667a60ece6a1381fb":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85","4cc45c615dbb82bf79d5f9550286098367874fbf"]},"commit2Childs":{"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["4cc45c615dbb82bf79d5f9550286098367874fbf","402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"4cc45c615dbb82bf79d5f9550286098367874fbf":["402ad3ddc9da7b70da1b167667a60ece6a1381fb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[],"402ad3ddc9da7b70da1b167667a60ece6a1381fb":["cd5edd1f2b162a5cfa08efd17851a07373a96817"]},"heads":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}