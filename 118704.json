{"path":"solr/core/src/java/org/apache/solr/update/DefaultSolrCoreState#createMainIndexWriter(SolrCore,String,boolean,boolean).mjava","commits":[{"id":"e22ffe8cc51a892ae103df018822d7873e901c2a","date":1313696790,"type":1,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/DefaultSolrCoreState#createMainIndexWriter(SolrCore,String,boolean,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/DefaultIndexWriterProvider#createMainIndexWriter(SolrCore,String,boolean).mjava","sourceNew":"  protected SolrIndexWriter createMainIndexWriter(SolrCore core, String name,\n      boolean removeAllExisting, boolean forceNewDirectory) throws IOException {\n    return new SolrIndexWriter(name, core.getNewIndexDir(),\n        core.getDirectoryFactory(), removeAllExisting, core.getSchema(),\n        core.getSolrConfig().mainIndexConfig, core.getDeletionPolicy(), core.getCodecProvider(), forceNewDirectory);\n  }\n\n","sourceOld":"  protected SolrIndexWriter createMainIndexWriter(SolrCore core, String name,\n      boolean removeAllExisting) throws IOException {\n    return new SolrIndexWriter(name, core.getNewIndexDir(),\n        core.getDirectoryFactory(), removeAllExisting, core.getSchema(),\n        core.getSolrConfig().mainIndexConfig, core.getDeletionPolicy(), core.getCodecProvider());\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7b91922b55d15444d554721b352861d028eb8278","date":1320421415,"type":3,"author":"Robert Muir","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/DefaultSolrCoreState#createMainIndexWriter(SolrCore,String,boolean,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/DefaultSolrCoreState#createMainIndexWriter(SolrCore,String,boolean,boolean).mjava","sourceNew":"  protected SolrIndexWriter createMainIndexWriter(SolrCore core, String name,\n      boolean removeAllExisting, boolean forceNewDirectory) throws IOException {\n    return new SolrIndexWriter(name, core.getNewIndexDir(),\n        core.getDirectoryFactory(), removeAllExisting, core.getSchema(),\n        core.getSolrConfig().mainIndexConfig, core.getDeletionPolicy(), core.getCodec(), forceNewDirectory);\n  }\n\n","sourceOld":"  protected SolrIndexWriter createMainIndexWriter(SolrCore core, String name,\n      boolean removeAllExisting, boolean forceNewDirectory) throws IOException {\n    return new SolrIndexWriter(name, core.getNewIndexDir(),\n        core.getDirectoryFactory(), removeAllExisting, core.getSchema(),\n        core.getSolrConfig().mainIndexConfig, core.getDeletionPolicy(), core.getCodecProvider(), forceNewDirectory);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4a5469a71486c4c1e313c7fcb08188d7111195c2","date":1333407337,"type":3,"author":"Jan HÃ¸ydahl","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/DefaultSolrCoreState#createMainIndexWriter(SolrCore,String,boolean,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/DefaultSolrCoreState#createMainIndexWriter(SolrCore,String,boolean,boolean).mjava","sourceNew":"  protected SolrIndexWriter createMainIndexWriter(SolrCore core, String name,\n      boolean removeAllExisting, boolean forceNewDirectory) throws IOException {\n    return new SolrIndexWriter(name, core.getNewIndexDir(),\n        core.getDirectoryFactory(), removeAllExisting, core.getSchema(),\n        core.getSolrConfig().indexConfig, core.getDeletionPolicy(), core.getCodec(), forceNewDirectory);\n  }\n\n","sourceOld":"  protected SolrIndexWriter createMainIndexWriter(SolrCore core, String name,\n      boolean removeAllExisting, boolean forceNewDirectory) throws IOException {\n    return new SolrIndexWriter(name, core.getNewIndexDir(),\n        core.getDirectoryFactory(), removeAllExisting, core.getSchema(),\n        core.getSolrConfig().mainIndexConfig, core.getDeletionPolicy(), core.getCodec(), forceNewDirectory);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b6d2d51ff0b489e2d7ddc42a63f0d6cb69326469","date":1345037674,"type":5,"author":"Mark Robert Miller","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/update/DefaultSolrCoreState#createMainIndexWriter(SolrCore,String,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/DefaultSolrCoreState#createMainIndexWriter(SolrCore,String,boolean,boolean).mjava","sourceNew":"  protected SolrIndexWriter createMainIndexWriter(SolrCore core, String name, boolean forceNewDirectory) throws IOException {\n    return new SolrIndexWriter(name, core.getNewIndexDir(),\n        core.getDirectoryFactory(), false, core.getSchema(),\n        core.getSolrConfig().indexConfig, core.getDeletionPolicy(), core.getCodec(), forceNewDirectory);\n  }\n\n","sourceOld":"  protected SolrIndexWriter createMainIndexWriter(SolrCore core, String name,\n      boolean removeAllExisting, boolean forceNewDirectory) throws IOException {\n    return new SolrIndexWriter(name, core.getNewIndexDir(),\n        core.getDirectoryFactory(), removeAllExisting, core.getSchema(),\n        core.getSolrConfig().indexConfig, core.getDeletionPolicy(), core.getCodec(), forceNewDirectory);\n  }\n\n","bugFix":null,"bugIntro":["e4d5fc8284faca306256427bbbb86017a32002cf","e4d5fc8284faca306256427bbbb86017a32002cf","e4d5fc8284faca306256427bbbb86017a32002cf"],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"70fa1c0f4d75735ff2e1485e059d9bc5efa50598","date":1345296911,"type":5,"author":"Michael McCandless","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/DefaultSolrCoreState#createMainIndexWriter(SolrCore,String,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/DefaultSolrCoreState#createMainIndexWriter(SolrCore,String,boolean,boolean).mjava","sourceNew":"  protected SolrIndexWriter createMainIndexWriter(SolrCore core, String name, boolean forceNewDirectory) throws IOException {\n    return new SolrIndexWriter(name, core.getNewIndexDir(),\n        core.getDirectoryFactory(), false, core.getSchema(),\n        core.getSolrConfig().indexConfig, core.getDeletionPolicy(), core.getCodec(), forceNewDirectory);\n  }\n\n","sourceOld":"  protected SolrIndexWriter createMainIndexWriter(SolrCore core, String name,\n      boolean removeAllExisting, boolean forceNewDirectory) throws IOException {\n    return new SolrIndexWriter(name, core.getNewIndexDir(),\n        core.getDirectoryFactory(), removeAllExisting, core.getSchema(),\n        core.getSolrConfig().indexConfig, core.getDeletionPolicy(), core.getCodec(), forceNewDirectory);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"616c1830142ff5c1ddedec1ed898733b73c8e23b","date":1345368925,"type":5,"author":"Uwe Schindler","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/update/DefaultSolrCoreState#createMainIndexWriter(SolrCore,String,boolean).mjava","pathOld":"solr/core/src/java/org/apache/solr/update/DefaultSolrCoreState#createMainIndexWriter(SolrCore,String,boolean,boolean).mjava","sourceNew":"  protected SolrIndexWriter createMainIndexWriter(SolrCore core, String name, boolean forceNewDirectory) throws IOException {\n    return new SolrIndexWriter(name, core.getNewIndexDir(),\n        core.getDirectoryFactory(), false, core.getSchema(),\n        core.getSolrConfig().indexConfig, core.getDeletionPolicy(), core.getCodec(), forceNewDirectory);\n  }\n\n","sourceOld":"  protected SolrIndexWriter createMainIndexWriter(SolrCore core, String name,\n      boolean removeAllExisting, boolean forceNewDirectory) throws IOException {\n    return new SolrIndexWriter(name, core.getNewIndexDir(),\n        core.getDirectoryFactory(), removeAllExisting, core.getSchema(),\n        core.getSolrConfig().indexConfig, core.getDeletionPolicy(), core.getCodec(), forceNewDirectory);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"7b91922b55d15444d554721b352861d028eb8278":["e22ffe8cc51a892ae103df018822d7873e901c2a"],"616c1830142ff5c1ddedec1ed898733b73c8e23b":["4a5469a71486c4c1e313c7fcb08188d7111195c2","b6d2d51ff0b489e2d7ddc42a63f0d6cb69326469"],"4a5469a71486c4c1e313c7fcb08188d7111195c2":["7b91922b55d15444d554721b352861d028eb8278"],"70fa1c0f4d75735ff2e1485e059d9bc5efa50598":["4a5469a71486c4c1e313c7fcb08188d7111195c2","b6d2d51ff0b489e2d7ddc42a63f0d6cb69326469"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"e22ffe8cc51a892ae103df018822d7873e901c2a":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["b6d2d51ff0b489e2d7ddc42a63f0d6cb69326469"],"b6d2d51ff0b489e2d7ddc42a63f0d6cb69326469":["4a5469a71486c4c1e313c7fcb08188d7111195c2"]},"commit2Childs":{"7b91922b55d15444d554721b352861d028eb8278":["4a5469a71486c4c1e313c7fcb08188d7111195c2"],"616c1830142ff5c1ddedec1ed898733b73c8e23b":[],"4a5469a71486c4c1e313c7fcb08188d7111195c2":["616c1830142ff5c1ddedec1ed898733b73c8e23b","70fa1c0f4d75735ff2e1485e059d9bc5efa50598","b6d2d51ff0b489e2d7ddc42a63f0d6cb69326469"],"70fa1c0f4d75735ff2e1485e059d9bc5efa50598":[],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["e22ffe8cc51a892ae103df018822d7873e901c2a"],"e22ffe8cc51a892ae103df018822d7873e901c2a":["7b91922b55d15444d554721b352861d028eb8278"],"b6d2d51ff0b489e2d7ddc42a63f0d6cb69326469":["616c1830142ff5c1ddedec1ed898733b73c8e23b","70fa1c0f4d75735ff2e1485e059d9bc5efa50598","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["616c1830142ff5c1ddedec1ed898733b73c8e23b","70fa1c0f4d75735ff2e1485e059d9bc5efa50598","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}