{"path":"lucene/core/src/test/org/apache/lucene/search/TestPointQueries#getCodec().mjava","commits":[{"id":"cab7a79353f33d1a94cd307bf33aa5148601ebe6","date":1453391888,"type":1,"author":"Michael McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestPointQueries#getCodec().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestDimensionalRangeQuery#getCodec().mjava","sourceNew":"  private static Codec getCodec() {\n    if (Codec.getDefault().getName().equals(\"Lucene60\")) {\n      int maxPointsInLeafNode = TestUtil.nextInt(random(), 16, 2048);\n      double maxMBSortInHeap = 3.0 + (3*random().nextDouble());\n      if (VERBOSE) {\n        System.out.println(\"TEST: using Lucene60PointFormat with maxPointsInLeafNode=\" + maxPointsInLeafNode + \" and maxMBSortInHeap=\" + maxMBSortInHeap);\n      }\n\n      return new FilterCodec(\"Lucene60\", Codec.getDefault()) {\n        @Override\n        public PointFormat pointFormat() {\n          return new PointFormat() {\n            @Override\n            public PointWriter fieldsWriter(SegmentWriteState writeState) throws IOException {\n              return new Lucene60PointWriter(writeState, maxPointsInLeafNode, maxMBSortInHeap);\n            }\n\n            @Override\n            public PointReader fieldsReader(SegmentReadState readState) throws IOException {\n              return new Lucene60PointReader(readState);\n            }\n          };\n        }\n      };\n    } else {\n      return Codec.getDefault();\n    }\n  }\n\n","sourceOld":"  private static Codec getCodec() {\n    if (Codec.getDefault().getName().equals(\"Lucene60\")) {\n      int maxPointsInLeafNode = TestUtil.nextInt(random(), 16, 2048);\n      double maxMBSortInHeap = 3.0 + (3*random().nextDouble());\n      if (VERBOSE) {\n        System.out.println(\"TEST: using Lucene60DimensionalFormat with maxPointsInLeafNode=\" + maxPointsInLeafNode + \" and maxMBSortInHeap=\" + maxMBSortInHeap);\n      }\n\n      return new FilterCodec(\"Lucene60\", Codec.getDefault()) {\n        @Override\n        public DimensionalFormat dimensionalFormat() {\n          return new DimensionalFormat() {\n            @Override\n            public DimensionalWriter fieldsWriter(SegmentWriteState writeState) throws IOException {\n              return new Lucene60DimensionalWriter(writeState, maxPointsInLeafNode, maxMBSortInHeap);\n            }\n\n            @Override\n            public DimensionalReader fieldsReader(SegmentReadState readState) throws IOException {\n              return new Lucene60DimensionalReader(readState);\n            }\n          };\n        }\n      };\n    } else {\n      return Codec.getDefault();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1005d088495549083cbe503bb2a489df6ac9a7fa","date":1456318342,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestPointQueries#getCodec().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestPointQueries#getCodec().mjava","sourceNew":"  private static Codec getCodec() {\n    if (Codec.getDefault().getName().equals(\"Lucene60\")) {\n      int maxPointsInLeafNode = TestUtil.nextInt(random(), 16, 2048);\n      double maxMBSortInHeap = 4.0 + (3*random().nextDouble());\n      if (VERBOSE) {\n        System.out.println(\"TEST: using Lucene60PointFormat with maxPointsInLeafNode=\" + maxPointsInLeafNode + \" and maxMBSortInHeap=\" + maxMBSortInHeap);\n      }\n\n      return new FilterCodec(\"Lucene60\", Codec.getDefault()) {\n        @Override\n        public PointFormat pointFormat() {\n          return new PointFormat() {\n            @Override\n            public PointWriter fieldsWriter(SegmentWriteState writeState) throws IOException {\n              return new Lucene60PointWriter(writeState, maxPointsInLeafNode, maxMBSortInHeap);\n            }\n\n            @Override\n            public PointReader fieldsReader(SegmentReadState readState) throws IOException {\n              return new Lucene60PointReader(readState);\n            }\n          };\n        }\n      };\n    } else {\n      return Codec.getDefault();\n    }\n  }\n\n","sourceOld":"  private static Codec getCodec() {\n    if (Codec.getDefault().getName().equals(\"Lucene60\")) {\n      int maxPointsInLeafNode = TestUtil.nextInt(random(), 16, 2048);\n      double maxMBSortInHeap = 3.0 + (3*random().nextDouble());\n      if (VERBOSE) {\n        System.out.println(\"TEST: using Lucene60PointFormat with maxPointsInLeafNode=\" + maxPointsInLeafNode + \" and maxMBSortInHeap=\" + maxMBSortInHeap);\n      }\n\n      return new FilterCodec(\"Lucene60\", Codec.getDefault()) {\n        @Override\n        public PointFormat pointFormat() {\n          return new PointFormat() {\n            @Override\n            public PointWriter fieldsWriter(SegmentWriteState writeState) throws IOException {\n              return new Lucene60PointWriter(writeState, maxPointsInLeafNode, maxMBSortInHeap);\n            }\n\n            @Override\n            public PointReader fieldsReader(SegmentReadState readState) throws IOException {\n              return new Lucene60PointReader(readState);\n            }\n          };\n        }\n      };\n    } else {\n      return Codec.getDefault();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":true,"nexts":[],"revCommit":null},{"id":"1af4bde3de13aa03ab458c2b7adb1c088fcf7ad6","date":1456321728,"type":3,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestPointQueries#getCodec().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestPointQueries#getCodec().mjava","sourceNew":"  private static Codec getCodec() {\n    if (Codec.getDefault().getName().equals(\"Lucene60\")) {\n      int maxPointsInLeafNode = TestUtil.nextInt(random(), 16, 2048);\n      double maxMBSortInHeap = 4.0 + (3*random().nextDouble());\n      if (VERBOSE) {\n        System.out.println(\"TEST: using Lucene60PointFormat with maxPointsInLeafNode=\" + maxPointsInLeafNode + \" and maxMBSortInHeap=\" + maxMBSortInHeap);\n      }\n\n      return new FilterCodec(\"Lucene60\", Codec.getDefault()) {\n        @Override\n        public PointFormat pointFormat() {\n          return new PointFormat() {\n            @Override\n            public PointWriter fieldsWriter(SegmentWriteState writeState) throws IOException {\n              return new Lucene60PointWriter(writeState, maxPointsInLeafNode, maxMBSortInHeap);\n            }\n\n            @Override\n            public PointReader fieldsReader(SegmentReadState readState) throws IOException {\n              return new Lucene60PointReader(readState);\n            }\n          };\n        }\n      };\n    } else {\n      return Codec.getDefault();\n    }\n  }\n\n","sourceOld":"  private static Codec getCodec() {\n    if (Codec.getDefault().getName().equals(\"Lucene60\")) {\n      int maxPointsInLeafNode = TestUtil.nextInt(random(), 16, 2048);\n      double maxMBSortInHeap = 3.0 + (3*random().nextDouble());\n      if (VERBOSE) {\n        System.out.println(\"TEST: using Lucene60PointFormat with maxPointsInLeafNode=\" + maxPointsInLeafNode + \" and maxMBSortInHeap=\" + maxMBSortInHeap);\n      }\n\n      return new FilterCodec(\"Lucene60\", Codec.getDefault()) {\n        @Override\n        public PointFormat pointFormat() {\n          return new PointFormat() {\n            @Override\n            public PointWriter fieldsWriter(SegmentWriteState writeState) throws IOException {\n              return new Lucene60PointWriter(writeState, maxPointsInLeafNode, maxMBSortInHeap);\n            }\n\n            @Override\n            public PointReader fieldsReader(SegmentReadState readState) throws IOException {\n              return new Lucene60PointReader(readState);\n            }\n          };\n        }\n      };\n    } else {\n      return Codec.getDefault();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4522ffca5a1f420c6a02198c9332d7c596a30ca5","date":1457270822,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestPointQueries#getCodec().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestPointQueries#getCodec().mjava","sourceNew":"  private static Codec getCodec() {\n    if (Codec.getDefault().getName().equals(\"Lucene60\")) {\n      int maxPointsInLeafNode = TestUtil.nextInt(random(), 16, 2048);\n      double maxMBSortInHeap = 4.0 + (3*random().nextDouble());\n      if (VERBOSE) {\n        System.out.println(\"TEST: using Lucene60PointsFormat with maxPointsInLeafNode=\" + maxPointsInLeafNode + \" and maxMBSortInHeap=\" + maxMBSortInHeap);\n      }\n\n      return new FilterCodec(\"Lucene60\", Codec.getDefault()) {\n        @Override\n        public PointsFormat pointsFormat() {\n          return new PointsFormat() {\n            @Override\n            public PointsWriter fieldsWriter(SegmentWriteState writeState) throws IOException {\n              return new Lucene60PointsWriter(writeState, maxPointsInLeafNode, maxMBSortInHeap);\n            }\n\n            @Override\n            public PointsReader fieldsReader(SegmentReadState readState) throws IOException {\n              return new Lucene60PointsReader(readState);\n            }\n          };\n        }\n      };\n    } else {\n      return Codec.getDefault();\n    }\n  }\n\n","sourceOld":"  private static Codec getCodec() {\n    if (Codec.getDefault().getName().equals(\"Lucene60\")) {\n      int maxPointsInLeafNode = TestUtil.nextInt(random(), 16, 2048);\n      double maxMBSortInHeap = 4.0 + (3*random().nextDouble());\n      if (VERBOSE) {\n        System.out.println(\"TEST: using Lucene60PointFormat with maxPointsInLeafNode=\" + maxPointsInLeafNode + \" and maxMBSortInHeap=\" + maxMBSortInHeap);\n      }\n\n      return new FilterCodec(\"Lucene60\", Codec.getDefault()) {\n        @Override\n        public PointFormat pointFormat() {\n          return new PointFormat() {\n            @Override\n            public PointWriter fieldsWriter(SegmentWriteState writeState) throws IOException {\n              return new Lucene60PointWriter(writeState, maxPointsInLeafNode, maxMBSortInHeap);\n            }\n\n            @Override\n            public PointReader fieldsReader(SegmentReadState readState) throws IOException {\n              return new Lucene60PointReader(readState);\n            }\n          };\n        }\n      };\n    } else {\n      return Codec.getDefault();\n    }\n  }\n\n","bugFix":["cab7a79353f33d1a94cd307bf33aa5148601ebe6"],"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2fa276a5c7dfd1abf1616f5db0be689202f5bf50","date":1461491921,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestPointQueries#getCodec().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestPointQueries#getCodec().mjava","sourceNew":"  private static Codec getCodec() {\n    if (Codec.getDefault().getName().equals(\"Lucene60\")) {\n      int maxPointsInLeafNode = TestUtil.nextInt(random(), 16, 2048);\n      double maxMBSortInHeap = 5.0 + (3*random().nextDouble());\n      if (VERBOSE) {\n        System.out.println(\"TEST: using Lucene60PointsFormat with maxPointsInLeafNode=\" + maxPointsInLeafNode + \" and maxMBSortInHeap=\" + maxMBSortInHeap);\n      }\n\n      return new FilterCodec(\"Lucene60\", Codec.getDefault()) {\n        @Override\n        public PointsFormat pointsFormat() {\n          return new PointsFormat() {\n            @Override\n            public PointsWriter fieldsWriter(SegmentWriteState writeState) throws IOException {\n              return new Lucene60PointsWriter(writeState, maxPointsInLeafNode, maxMBSortInHeap);\n            }\n\n            @Override\n            public PointsReader fieldsReader(SegmentReadState readState) throws IOException {\n              return new Lucene60PointsReader(readState);\n            }\n          };\n        }\n      };\n    } else {\n      return Codec.getDefault();\n    }\n  }\n\n","sourceOld":"  private static Codec getCodec() {\n    if (Codec.getDefault().getName().equals(\"Lucene60\")) {\n      int maxPointsInLeafNode = TestUtil.nextInt(random(), 16, 2048);\n      double maxMBSortInHeap = 4.0 + (3*random().nextDouble());\n      if (VERBOSE) {\n        System.out.println(\"TEST: using Lucene60PointsFormat with maxPointsInLeafNode=\" + maxPointsInLeafNode + \" and maxMBSortInHeap=\" + maxMBSortInHeap);\n      }\n\n      return new FilterCodec(\"Lucene60\", Codec.getDefault()) {\n        @Override\n        public PointsFormat pointsFormat() {\n          return new PointsFormat() {\n            @Override\n            public PointsWriter fieldsWriter(SegmentWriteState writeState) throws IOException {\n              return new Lucene60PointsWriter(writeState, maxPointsInLeafNode, maxMBSortInHeap);\n            }\n\n            @Override\n            public PointsReader fieldsReader(SegmentReadState readState) throws IOException {\n              return new Lucene60PointsReader(readState);\n            }\n          };\n        }\n      };\n    } else {\n      return Codec.getDefault();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"f7f901826e47f75f810d7aae24b0455d21ea1fe2","date":1461678892,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestPointQueries#getCodec().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestPointQueries#getCodec().mjava","sourceNew":"  private static Codec getCodec() {\n    if (Codec.getDefault().getName().equals(\"Lucene60\")) {\n      int maxPointsInLeafNode = TestUtil.nextInt(random(), 16, 2048);\n      double maxMBSortInHeap = 5.0 + (3*random().nextDouble());\n      if (VERBOSE) {\n        System.out.println(\"TEST: using Lucene60PointsFormat with maxPointsInLeafNode=\" + maxPointsInLeafNode + \" and maxMBSortInHeap=\" + maxMBSortInHeap);\n      }\n\n      return new FilterCodec(\"Lucene60\", Codec.getDefault()) {\n        @Override\n        public PointsFormat pointsFormat() {\n          return new PointsFormat() {\n            @Override\n            public PointsWriter fieldsWriter(SegmentWriteState writeState) throws IOException {\n              return new Lucene60PointsWriter(writeState, maxPointsInLeafNode, maxMBSortInHeap);\n            }\n\n            @Override\n            public PointsReader fieldsReader(SegmentReadState readState) throws IOException {\n              return new Lucene60PointsReader(readState);\n            }\n          };\n        }\n      };\n    } else {\n      return Codec.getDefault();\n    }\n  }\n\n","sourceOld":"  private static Codec getCodec() {\n    if (Codec.getDefault().getName().equals(\"Lucene60\")) {\n      int maxPointsInLeafNode = TestUtil.nextInt(random(), 16, 2048);\n      double maxMBSortInHeap = 4.0 + (3*random().nextDouble());\n      if (VERBOSE) {\n        System.out.println(\"TEST: using Lucene60PointsFormat with maxPointsInLeafNode=\" + maxPointsInLeafNode + \" and maxMBSortInHeap=\" + maxMBSortInHeap);\n      }\n\n      return new FilterCodec(\"Lucene60\", Codec.getDefault()) {\n        @Override\n        public PointsFormat pointsFormat() {\n          return new PointsFormat() {\n            @Override\n            public PointsWriter fieldsWriter(SegmentWriteState writeState) throws IOException {\n              return new Lucene60PointsWriter(writeState, maxPointsInLeafNode, maxMBSortInHeap);\n            }\n\n            @Override\n            public PointsReader fieldsReader(SegmentReadState readState) throws IOException {\n              return new Lucene60PointsReader(readState);\n            }\n          };\n        }\n      };\n    } else {\n      return Codec.getDefault();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"fbe8fc0e68a5e2e7acce82ba880a982bd15cfab8","date":1462567286,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestPointQueries#getCodec().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestPointQueries#getCodec().mjava","sourceNew":"  private static Codec getCodec() {\n    if (Codec.getDefault().getName().equals(\"Lucene62\")) {\n      int maxPointsInLeafNode = TestUtil.nextInt(random(), 16, 2048);\n      double maxMBSortInHeap = 5.0 + (3*random().nextDouble());\n      if (VERBOSE) {\n        System.out.println(\"TEST: using Lucene60PointsFormat with maxPointsInLeafNode=\" + maxPointsInLeafNode + \" and maxMBSortInHeap=\" + maxMBSortInHeap);\n      }\n\n      return new FilterCodec(\"Lucene62\", Codec.getDefault()) {\n        @Override\n        public PointsFormat pointsFormat() {\n          return new PointsFormat() {\n            @Override\n            public PointsWriter fieldsWriter(SegmentWriteState writeState) throws IOException {\n              return new Lucene60PointsWriter(writeState, maxPointsInLeafNode, maxMBSortInHeap);\n            }\n\n            @Override\n            public PointsReader fieldsReader(SegmentReadState readState) throws IOException {\n              return new Lucene60PointsReader(readState);\n            }\n          };\n        }\n      };\n    } else {\n      return Codec.getDefault();\n    }\n  }\n\n","sourceOld":"  private static Codec getCodec() {\n    if (Codec.getDefault().getName().equals(\"Lucene60\")) {\n      int maxPointsInLeafNode = TestUtil.nextInt(random(), 16, 2048);\n      double maxMBSortInHeap = 5.0 + (3*random().nextDouble());\n      if (VERBOSE) {\n        System.out.println(\"TEST: using Lucene60PointsFormat with maxPointsInLeafNode=\" + maxPointsInLeafNode + \" and maxMBSortInHeap=\" + maxMBSortInHeap);\n      }\n\n      return new FilterCodec(\"Lucene60\", Codec.getDefault()) {\n        @Override\n        public PointsFormat pointsFormat() {\n          return new PointsFormat() {\n            @Override\n            public PointsWriter fieldsWriter(SegmentWriteState writeState) throws IOException {\n              return new Lucene60PointsWriter(writeState, maxPointsInLeafNode, maxMBSortInHeap);\n            }\n\n            @Override\n            public PointsReader fieldsReader(SegmentReadState readState) throws IOException {\n              return new Lucene60PointsReader(readState);\n            }\n          };\n        }\n      };\n    } else {\n      return Codec.getDefault();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3d33e731a93d4b57e662ff094f64f94a745422d4","date":1463128289,"type":3,"author":"Mike McCandless","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestPointQueries#getCodec().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestPointQueries#getCodec().mjava","sourceNew":"  private static Codec getCodec() {\n    if (Codec.getDefault().getName().equals(\"Lucene62\")) {\n      int maxPointsInLeafNode = TestUtil.nextInt(random(), 16, 2048);\n      double maxMBSortInHeap = 5.0 + (3*random().nextDouble());\n      if (VERBOSE) {\n        System.out.println(\"TEST: using Lucene60PointsFormat with maxPointsInLeafNode=\" + maxPointsInLeafNode + \" and maxMBSortInHeap=\" + maxMBSortInHeap);\n      }\n\n      return new FilterCodec(\"Lucene62\", Codec.getDefault()) {\n        @Override\n        public PointsFormat pointsFormat() {\n          return new PointsFormat() {\n            @Override\n            public PointsWriter fieldsWriter(SegmentWriteState writeState) throws IOException {\n              return new Lucene60PointsWriter(writeState, maxPointsInLeafNode, maxMBSortInHeap);\n            }\n\n            @Override\n            public PointsReader fieldsReader(SegmentReadState readState) throws IOException {\n              return new Lucene60PointsReader(readState);\n            }\n          };\n        }\n      };\n    } else {\n      return Codec.getDefault();\n    }\n  }\n\n","sourceOld":"  private static Codec getCodec() {\n    if (Codec.getDefault().getName().equals(\"Lucene60\")) {\n      int maxPointsInLeafNode = TestUtil.nextInt(random(), 16, 2048);\n      double maxMBSortInHeap = 5.0 + (3*random().nextDouble());\n      if (VERBOSE) {\n        System.out.println(\"TEST: using Lucene60PointsFormat with maxPointsInLeafNode=\" + maxPointsInLeafNode + \" and maxMBSortInHeap=\" + maxMBSortInHeap);\n      }\n\n      return new FilterCodec(\"Lucene60\", Codec.getDefault()) {\n        @Override\n        public PointsFormat pointsFormat() {\n          return new PointsFormat() {\n            @Override\n            public PointsWriter fieldsWriter(SegmentWriteState writeState) throws IOException {\n              return new Lucene60PointsWriter(writeState, maxPointsInLeafNode, maxMBSortInHeap);\n            }\n\n            @Override\n            public PointsReader fieldsReader(SegmentReadState readState) throws IOException {\n              return new Lucene60PointsReader(readState);\n            }\n          };\n        }\n      };\n    } else {\n      return Codec.getDefault();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"0ad30c6a479e764150a3316e57263319775f1df2","date":1463395403,"type":3,"author":"Karl Wright","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestPointQueries#getCodec().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestPointQueries#getCodec().mjava","sourceNew":"  private static Codec getCodec() {\n    if (Codec.getDefault().getName().equals(\"Lucene62\")) {\n      int maxPointsInLeafNode = TestUtil.nextInt(random(), 16, 2048);\n      double maxMBSortInHeap = 5.0 + (3*random().nextDouble());\n      if (VERBOSE) {\n        System.out.println(\"TEST: using Lucene60PointsFormat with maxPointsInLeafNode=\" + maxPointsInLeafNode + \" and maxMBSortInHeap=\" + maxMBSortInHeap);\n      }\n\n      return new FilterCodec(\"Lucene62\", Codec.getDefault()) {\n        @Override\n        public PointsFormat pointsFormat() {\n          return new PointsFormat() {\n            @Override\n            public PointsWriter fieldsWriter(SegmentWriteState writeState) throws IOException {\n              return new Lucene60PointsWriter(writeState, maxPointsInLeafNode, maxMBSortInHeap);\n            }\n\n            @Override\n            public PointsReader fieldsReader(SegmentReadState readState) throws IOException {\n              return new Lucene60PointsReader(readState);\n            }\n          };\n        }\n      };\n    } else {\n      return Codec.getDefault();\n    }\n  }\n\n","sourceOld":"  private static Codec getCodec() {\n    if (Codec.getDefault().getName().equals(\"Lucene60\")) {\n      int maxPointsInLeafNode = TestUtil.nextInt(random(), 16, 2048);\n      double maxMBSortInHeap = 5.0 + (3*random().nextDouble());\n      if (VERBOSE) {\n        System.out.println(\"TEST: using Lucene60PointsFormat with maxPointsInLeafNode=\" + maxPointsInLeafNode + \" and maxMBSortInHeap=\" + maxMBSortInHeap);\n      }\n\n      return new FilterCodec(\"Lucene60\", Codec.getDefault()) {\n        @Override\n        public PointsFormat pointsFormat() {\n          return new PointsFormat() {\n            @Override\n            public PointsWriter fieldsWriter(SegmentWriteState writeState) throws IOException {\n              return new Lucene60PointsWriter(writeState, maxPointsInLeafNode, maxMBSortInHeap);\n            }\n\n            @Override\n            public PointsReader fieldsReader(SegmentReadState readState) throws IOException {\n              return new Lucene60PointsReader(readState);\n            }\n          };\n        }\n      };\n    } else {\n      return Codec.getDefault();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d470c8182e92b264680e34081b75e70a9f2b3c89","date":1463985353,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestPointQueries#getCodec().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestPointQueries#getCodec().mjava","sourceNew":"  private static Codec getCodec() {\n    if (Codec.getDefault().getName().equals(\"Lucene62\")) {\n      int maxPointsInLeafNode = TestUtil.nextInt(random(), 16, 2048);\n      double maxMBSortInHeap = 5.0 + (3*random().nextDouble());\n      if (VERBOSE) {\n        System.out.println(\"TEST: using Lucene60PointsFormat with maxPointsInLeafNode=\" + maxPointsInLeafNode + \" and maxMBSortInHeap=\" + maxMBSortInHeap);\n      }\n\n      return new FilterCodec(\"Lucene62\", Codec.getDefault()) {\n        @Override\n        public PointsFormat pointsFormat() {\n          return new PointsFormat() {\n            @Override\n            public PointsWriter fieldsWriter(SegmentWriteState writeState) throws IOException {\n              return new Lucene60PointsWriter(writeState, maxPointsInLeafNode, maxMBSortInHeap);\n            }\n\n            @Override\n            public PointsReader fieldsReader(SegmentReadState readState) throws IOException {\n              return new Lucene60PointsReader(readState);\n            }\n          };\n        }\n      };\n    } else {\n      return Codec.getDefault();\n    }\n  }\n\n","sourceOld":"  private static Codec getCodec() {\n    if (Codec.getDefault().getName().equals(\"Lucene60\")) {\n      int maxPointsInLeafNode = TestUtil.nextInt(random(), 16, 2048);\n      double maxMBSortInHeap = 5.0 + (3*random().nextDouble());\n      if (VERBOSE) {\n        System.out.println(\"TEST: using Lucene60PointsFormat with maxPointsInLeafNode=\" + maxPointsInLeafNode + \" and maxMBSortInHeap=\" + maxMBSortInHeap);\n      }\n\n      return new FilterCodec(\"Lucene60\", Codec.getDefault()) {\n        @Override\n        public PointsFormat pointsFormat() {\n          return new PointsFormat() {\n            @Override\n            public PointsWriter fieldsWriter(SegmentWriteState writeState) throws IOException {\n              return new Lucene60PointsWriter(writeState, maxPointsInLeafNode, maxMBSortInHeap);\n            }\n\n            @Override\n            public PointsReader fieldsReader(SegmentReadState readState) throws IOException {\n              return new Lucene60PointsReader(readState);\n            }\n          };\n        }\n      };\n    } else {\n      return Codec.getDefault();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"10005c6013abbd1102f2463cf95604d4c8774c99","date":1469460814,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestPointQueries#getCodec().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestPointQueries#getCodec().mjava","sourceNew":"  private static Codec getCodec() {\n    if (Codec.getDefault().getName().equals(\"Lucene62\")) {\n      int maxPointsInLeafNode = TestUtil.nextInt(random(), 16, 2048);\n      if (VERBOSE) {\n        System.out.println(\"TEST: using Lucene60PointsFormat with maxPointsInLeafNode=\" + maxPointsInLeafNode);\n      }\n\n      return new FilterCodec(\"Lucene62\", Codec.getDefault()) {\n        @Override\n        public PointsFormat pointsFormat() {\n          return new PointsFormat() {\n            @Override\n            public PointsWriter fieldsWriter(SegmentWriteState writeState) throws IOException {\n              return new Lucene60PointsWriter(writeState, maxPointsInLeafNode);\n            }\n\n            @Override\n            public PointsReader fieldsReader(SegmentReadState readState) throws IOException {\n              return new Lucene60PointsReader(readState);\n            }\n          };\n        }\n      };\n    } else {\n      return Codec.getDefault();\n    }\n  }\n\n","sourceOld":"  private static Codec getCodec() {\n    if (Codec.getDefault().getName().equals(\"Lucene62\")) {\n      int maxPointsInLeafNode = TestUtil.nextInt(random(), 16, 2048);\n      double maxMBSortInHeap = 5.0 + (3*random().nextDouble());\n      if (VERBOSE) {\n        System.out.println(\"TEST: using Lucene60PointsFormat with maxPointsInLeafNode=\" + maxPointsInLeafNode + \" and maxMBSortInHeap=\" + maxMBSortInHeap);\n      }\n\n      return new FilterCodec(\"Lucene62\", Codec.getDefault()) {\n        @Override\n        public PointsFormat pointsFormat() {\n          return new PointsFormat() {\n            @Override\n            public PointsWriter fieldsWriter(SegmentWriteState writeState) throws IOException {\n              return new Lucene60PointsWriter(writeState, maxPointsInLeafNode, maxMBSortInHeap);\n            }\n\n            @Override\n            public PointsReader fieldsReader(SegmentReadState readState) throws IOException {\n              return new Lucene60PointsReader(readState);\n            }\n          };\n        }\n      };\n    } else {\n      return Codec.getDefault();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d08973aa47f2cf98a588293a53af4e948952ccfb","date":1469518724,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestPointQueries#getCodec().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestPointQueries#getCodec().mjava","sourceNew":"  private static Codec getCodec() {\n    if (Codec.getDefault().getName().equals(\"Lucene62\")) {\n      int maxPointsInLeafNode = TestUtil.nextInt(random(), 16, 2048);\n      if (VERBOSE) {\n        System.out.println(\"TEST: using Lucene60PointsFormat with maxPointsInLeafNode=\" + maxPointsInLeafNode);\n      }\n\n      return new FilterCodec(\"Lucene62\", Codec.getDefault()) {\n        @Override\n        public PointsFormat pointsFormat() {\n          return new PointsFormat() {\n            @Override\n            public PointsWriter fieldsWriter(SegmentWriteState writeState) throws IOException {\n              return new Lucene60PointsWriter(writeState, maxPointsInLeafNode);\n            }\n\n            @Override\n            public PointsReader fieldsReader(SegmentReadState readState) throws IOException {\n              return new Lucene60PointsReader(readState);\n            }\n          };\n        }\n      };\n    } else {\n      return Codec.getDefault();\n    }\n  }\n\n","sourceOld":"  private static Codec getCodec() {\n    if (Codec.getDefault().getName().equals(\"Lucene62\")) {\n      int maxPointsInLeafNode = TestUtil.nextInt(random(), 16, 2048);\n      double maxMBSortInHeap = 5.0 + (3*random().nextDouble());\n      if (VERBOSE) {\n        System.out.println(\"TEST: using Lucene60PointsFormat with maxPointsInLeafNode=\" + maxPointsInLeafNode + \" and maxMBSortInHeap=\" + maxMBSortInHeap);\n      }\n\n      return new FilterCodec(\"Lucene62\", Codec.getDefault()) {\n        @Override\n        public PointsFormat pointsFormat() {\n          return new PointsFormat() {\n            @Override\n            public PointsWriter fieldsWriter(SegmentWriteState writeState) throws IOException {\n              return new Lucene60PointsWriter(writeState, maxPointsInLeafNode, maxMBSortInHeap);\n            }\n\n            @Override\n            public PointsReader fieldsReader(SegmentReadState readState) throws IOException {\n              return new Lucene60PointsReader(readState);\n            }\n          };\n        }\n      };\n    } else {\n      return Codec.getDefault();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"b0567940defa1ea6eb8a039d9d36e3682063f8a4","date":1469815320,"type":3,"author":"Mike McCandless","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestPointQueries#getCodec().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestPointQueries#getCodec().mjava","sourceNew":"  private static Codec getCodec() {\n    if (Codec.getDefault().getName().equals(\"Lucene62\")) {\n      int maxPointsInLeafNode = TestUtil.nextInt(random(), 16, 2048);\n      double maxMBSortInHeap = 5.0 + (3*random().nextDouble());\n      if (VERBOSE) {\n        System.out.println(\"TEST: using Lucene60PointsFormat with maxPointsInLeafNode=\" + maxPointsInLeafNode + \" and maxMBSortInHeap=\" + maxMBSortInHeap);\n      }\n\n      return new FilterCodec(\"Lucene62\", Codec.getDefault()) {\n        @Override\n        public PointsFormat pointsFormat() {\n          return new PointsFormat() {\n            @Override\n            public PointsWriter fieldsWriter(SegmentWriteState writeState) throws IOException {\n              return new Lucene60PointsWriter(writeState, maxPointsInLeafNode, maxMBSortInHeap);\n            }\n\n            @Override\n            public PointsReader fieldsReader(SegmentReadState readState) throws IOException {\n              return new Lucene60PointsReader(readState);\n            }\n          };\n        }\n      };\n    } else {\n      return Codec.getDefault();\n    }\n  }\n\n","sourceOld":"  private static Codec getCodec() {\n    if (Codec.getDefault().getName().equals(\"Lucene62\")) {\n      int maxPointsInLeafNode = TestUtil.nextInt(random(), 16, 2048);\n      if (VERBOSE) {\n        System.out.println(\"TEST: using Lucene60PointsFormat with maxPointsInLeafNode=\" + maxPointsInLeafNode);\n      }\n\n      return new FilterCodec(\"Lucene62\", Codec.getDefault()) {\n        @Override\n        public PointsFormat pointsFormat() {\n          return new PointsFormat() {\n            @Override\n            public PointsWriter fieldsWriter(SegmentWriteState writeState) throws IOException {\n              return new Lucene60PointsWriter(writeState, maxPointsInLeafNode);\n            }\n\n            @Override\n            public PointsReader fieldsReader(SegmentReadState readState) throws IOException {\n              return new Lucene60PointsReader(readState);\n            }\n          };\n        }\n      };\n    } else {\n      return Codec.getDefault();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"3b013574eedcdbac35dc7e35b0ee616ffc38895d","date":1470897818,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestPointQueries#getCodec().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestPointQueries#getCodec().mjava","sourceNew":"  private static Codec getCodec() {\n    if (Codec.getDefault().getName().equals(\"Lucene62\")) {\n      int maxPointsInLeafNode = TestUtil.nextInt(random(), 16, 2048);\n      double maxMBSortInHeap = 5.0 + (3*random().nextDouble());\n      if (VERBOSE) {\n        System.out.println(\"TEST: using Lucene60PointsFormat with maxPointsInLeafNode=\" + maxPointsInLeafNode + \" and maxMBSortInHeap=\" + maxMBSortInHeap);\n      }\n\n      return new FilterCodec(\"Lucene62\", Codec.getDefault()) {\n        @Override\n        public PointsFormat pointsFormat() {\n          return new PointsFormat() {\n            @Override\n            public PointsWriter fieldsWriter(SegmentWriteState writeState) throws IOException {\n              return new Lucene60PointsWriter(writeState, maxPointsInLeafNode, maxMBSortInHeap);\n            }\n\n            @Override\n            public PointsReader fieldsReader(SegmentReadState readState) throws IOException {\n              return new Lucene60PointsReader(readState);\n            }\n          };\n        }\n      };\n    } else {\n      return Codec.getDefault();\n    }\n  }\n\n","sourceOld":"  private static Codec getCodec() {\n    if (Codec.getDefault().getName().equals(\"Lucene62\")) {\n      int maxPointsInLeafNode = TestUtil.nextInt(random(), 16, 2048);\n      if (VERBOSE) {\n        System.out.println(\"TEST: using Lucene60PointsFormat with maxPointsInLeafNode=\" + maxPointsInLeafNode);\n      }\n\n      return new FilterCodec(\"Lucene62\", Codec.getDefault()) {\n        @Override\n        public PointsFormat pointsFormat() {\n          return new PointsFormat() {\n            @Override\n            public PointsWriter fieldsWriter(SegmentWriteState writeState) throws IOException {\n              return new Lucene60PointsWriter(writeState, maxPointsInLeafNode);\n            }\n\n            @Override\n            public PointsReader fieldsReader(SegmentReadState readState) throws IOException {\n              return new Lucene60PointsReader(readState);\n            }\n          };\n        }\n      };\n    } else {\n      return Codec.getDefault();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"084884d4602f4d1c7411eab29e897e349ce62675","date":1475571034,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestPointQueries#getCodec().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestPointQueries#getCodec().mjava","sourceNew":"  private static Codec getCodec() {\n    if (Codec.getDefault().getName().equals(\"Lucene70\")) {\n      int maxPointsInLeafNode = TestUtil.nextInt(random(), 16, 2048);\n      double maxMBSortInHeap = 5.0 + (3*random().nextDouble());\n      if (VERBOSE) {\n        System.out.println(\"TEST: using Lucene60PointsFormat with maxPointsInLeafNode=\" + maxPointsInLeafNode + \" and maxMBSortInHeap=\" + maxMBSortInHeap);\n      }\n\n      return new FilterCodec(\"Lucene70\", Codec.getDefault()) {\n        @Override\n        public PointsFormat pointsFormat() {\n          return new PointsFormat() {\n            @Override\n            public PointsWriter fieldsWriter(SegmentWriteState writeState) throws IOException {\n              return new Lucene60PointsWriter(writeState, maxPointsInLeafNode, maxMBSortInHeap);\n            }\n\n            @Override\n            public PointsReader fieldsReader(SegmentReadState readState) throws IOException {\n              return new Lucene60PointsReader(readState);\n            }\n          };\n        }\n      };\n    } else {\n      return Codec.getDefault();\n    }\n  }\n\n","sourceOld":"  private static Codec getCodec() {\n    if (Codec.getDefault().getName().equals(\"Lucene62\")) {\n      int maxPointsInLeafNode = TestUtil.nextInt(random(), 16, 2048);\n      double maxMBSortInHeap = 5.0 + (3*random().nextDouble());\n      if (VERBOSE) {\n        System.out.println(\"TEST: using Lucene60PointsFormat with maxPointsInLeafNode=\" + maxPointsInLeafNode + \" and maxMBSortInHeap=\" + maxMBSortInHeap);\n      }\n\n      return new FilterCodec(\"Lucene62\", Codec.getDefault()) {\n        @Override\n        public PointsFormat pointsFormat() {\n          return new PointsFormat() {\n            @Override\n            public PointsWriter fieldsWriter(SegmentWriteState writeState) throws IOException {\n              return new Lucene60PointsWriter(writeState, maxPointsInLeafNode, maxMBSortInHeap);\n            }\n\n            @Override\n            public PointsReader fieldsReader(SegmentReadState readState) throws IOException {\n              return new Lucene60PointsReader(readState);\n            }\n          };\n        }\n      };\n    } else {\n      return Codec.getDefault();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"1967bed916cc89da82a1c2085f27976da6d08cbd","date":1475588750,"type":3,"author":"Noble Paul","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestPointQueries#getCodec().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestPointQueries#getCodec().mjava","sourceNew":"  private static Codec getCodec() {\n    if (Codec.getDefault().getName().equals(\"Lucene70\")) {\n      int maxPointsInLeafNode = TestUtil.nextInt(random(), 16, 2048);\n      double maxMBSortInHeap = 5.0 + (3*random().nextDouble());\n      if (VERBOSE) {\n        System.out.println(\"TEST: using Lucene60PointsFormat with maxPointsInLeafNode=\" + maxPointsInLeafNode + \" and maxMBSortInHeap=\" + maxMBSortInHeap);\n      }\n\n      return new FilterCodec(\"Lucene70\", Codec.getDefault()) {\n        @Override\n        public PointsFormat pointsFormat() {\n          return new PointsFormat() {\n            @Override\n            public PointsWriter fieldsWriter(SegmentWriteState writeState) throws IOException {\n              return new Lucene60PointsWriter(writeState, maxPointsInLeafNode, maxMBSortInHeap);\n            }\n\n            @Override\n            public PointsReader fieldsReader(SegmentReadState readState) throws IOException {\n              return new Lucene60PointsReader(readState);\n            }\n          };\n        }\n      };\n    } else {\n      return Codec.getDefault();\n    }\n  }\n\n","sourceOld":"  private static Codec getCodec() {\n    if (Codec.getDefault().getName().equals(\"Lucene62\")) {\n      int maxPointsInLeafNode = TestUtil.nextInt(random(), 16, 2048);\n      double maxMBSortInHeap = 5.0 + (3*random().nextDouble());\n      if (VERBOSE) {\n        System.out.println(\"TEST: using Lucene60PointsFormat with maxPointsInLeafNode=\" + maxPointsInLeafNode + \" and maxMBSortInHeap=\" + maxMBSortInHeap);\n      }\n\n      return new FilterCodec(\"Lucene62\", Codec.getDefault()) {\n        @Override\n        public PointsFormat pointsFormat() {\n          return new PointsFormat() {\n            @Override\n            public PointsWriter fieldsWriter(SegmentWriteState writeState) throws IOException {\n              return new Lucene60PointsWriter(writeState, maxPointsInLeafNode, maxMBSortInHeap);\n            }\n\n            @Override\n            public PointsReader fieldsReader(SegmentReadState readState) throws IOException {\n              return new Lucene60PointsReader(readState);\n            }\n          };\n        }\n      };\n    } else {\n      return Codec.getDefault();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"4cce5816ef15a48a0bc11e5d400497ee4301dd3b","date":1476991456,"type":3,"author":"Kevin Risden","isMerge":true,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestPointQueries#getCodec().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestPointQueries#getCodec().mjava","sourceNew":"  private static Codec getCodec() {\n    if (Codec.getDefault().getName().equals(\"Lucene70\")) {\n      int maxPointsInLeafNode = TestUtil.nextInt(random(), 16, 2048);\n      double maxMBSortInHeap = 5.0 + (3*random().nextDouble());\n      if (VERBOSE) {\n        System.out.println(\"TEST: using Lucene60PointsFormat with maxPointsInLeafNode=\" + maxPointsInLeafNode + \" and maxMBSortInHeap=\" + maxMBSortInHeap);\n      }\n\n      return new FilterCodec(\"Lucene70\", Codec.getDefault()) {\n        @Override\n        public PointsFormat pointsFormat() {\n          return new PointsFormat() {\n            @Override\n            public PointsWriter fieldsWriter(SegmentWriteState writeState) throws IOException {\n              return new Lucene60PointsWriter(writeState, maxPointsInLeafNode, maxMBSortInHeap);\n            }\n\n            @Override\n            public PointsReader fieldsReader(SegmentReadState readState) throws IOException {\n              return new Lucene60PointsReader(readState);\n            }\n          };\n        }\n      };\n    } else {\n      return Codec.getDefault();\n    }\n  }\n\n","sourceOld":"  private static Codec getCodec() {\n    if (Codec.getDefault().getName().equals(\"Lucene60\")) {\n      int maxPointsInLeafNode = TestUtil.nextInt(random(), 16, 2048);\n      double maxMBSortInHeap = 5.0 + (3*random().nextDouble());\n      if (VERBOSE) {\n        System.out.println(\"TEST: using Lucene60PointsFormat with maxPointsInLeafNode=\" + maxPointsInLeafNode + \" and maxMBSortInHeap=\" + maxMBSortInHeap);\n      }\n\n      return new FilterCodec(\"Lucene60\", Codec.getDefault()) {\n        @Override\n        public PointsFormat pointsFormat() {\n          return new PointsFormat() {\n            @Override\n            public PointsWriter fieldsWriter(SegmentWriteState writeState) throws IOException {\n              return new Lucene60PointsWriter(writeState, maxPointsInLeafNode, maxMBSortInHeap);\n            }\n\n            @Override\n            public PointsReader fieldsReader(SegmentReadState readState) throws IOException {\n              return new Lucene60PointsReader(readState);\n            }\n          };\n        }\n      };\n    } else {\n      return Codec.getDefault();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"6930fc653c2b86e857fce0af7ec99993593d0d89","date":1535014305,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestPointQueries#getCodec().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestPointQueries#getCodec().mjava","sourceNew":"  private static Codec getCodec() {\n    if (Codec.getDefault().getName().equals(\"Lucene80\")) {\n      int maxPointsInLeafNode = TestUtil.nextInt(random(), 16, 2048);\n      double maxMBSortInHeap = 5.0 + (3*random().nextDouble());\n      if (VERBOSE) {\n        System.out.println(\"TEST: using Lucene60PointsFormat with maxPointsInLeafNode=\" + maxPointsInLeafNode + \" and maxMBSortInHeap=\" + maxMBSortInHeap);\n      }\n\n      return new FilterCodec(\"Lucene80\", Codec.getDefault()) {\n        @Override\n        public PointsFormat pointsFormat() {\n          return new PointsFormat() {\n            @Override\n            public PointsWriter fieldsWriter(SegmentWriteState writeState) throws IOException {\n              return new Lucene60PointsWriter(writeState, maxPointsInLeafNode, maxMBSortInHeap);\n            }\n\n            @Override\n            public PointsReader fieldsReader(SegmentReadState readState) throws IOException {\n              return new Lucene60PointsReader(readState);\n            }\n          };\n        }\n      };\n    } else {\n      return Codec.getDefault();\n    }\n  }\n\n","sourceOld":"  private static Codec getCodec() {\n    if (Codec.getDefault().getName().equals(\"Lucene70\")) {\n      int maxPointsInLeafNode = TestUtil.nextInt(random(), 16, 2048);\n      double maxMBSortInHeap = 5.0 + (3*random().nextDouble());\n      if (VERBOSE) {\n        System.out.println(\"TEST: using Lucene60PointsFormat with maxPointsInLeafNode=\" + maxPointsInLeafNode + \" and maxMBSortInHeap=\" + maxMBSortInHeap);\n      }\n\n      return new FilterCodec(\"Lucene70\", Codec.getDefault()) {\n        @Override\n        public PointsFormat pointsFormat() {\n          return new PointsFormat() {\n            @Override\n            public PointsWriter fieldsWriter(SegmentWriteState writeState) throws IOException {\n              return new Lucene60PointsWriter(writeState, maxPointsInLeafNode, maxMBSortInHeap);\n            }\n\n            @Override\n            public PointsReader fieldsReader(SegmentReadState readState) throws IOException {\n              return new Lucene60PointsReader(readState);\n            }\n          };\n        }\n      };\n    } else {\n      return Codec.getDefault();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"9a0cc86697753659ac5e7f55243ccdcbf44d8a36","date":1574100512,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestPointQueries#getCodec().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestPointQueries#getCodec().mjava","sourceNew":"  private static Codec getCodec() {\n    if (Codec.getDefault().getName().equals(\"Lucene84\")) {\n      int maxPointsInLeafNode = TestUtil.nextInt(random(), 16, 2048);\n      double maxMBSortInHeap = 5.0 + (3*random().nextDouble());\n      if (VERBOSE) {\n        System.out.println(\"TEST: using Lucene60PointsFormat with maxPointsInLeafNode=\" + maxPointsInLeafNode + \" and maxMBSortInHeap=\" + maxMBSortInHeap);\n      }\n\n      return new FilterCodec(\"Lucene84\", Codec.getDefault()) {\n        @Override\n        public PointsFormat pointsFormat() {\n          return new PointsFormat() {\n            @Override\n            public PointsWriter fieldsWriter(SegmentWriteState writeState) throws IOException {\n              return new Lucene60PointsWriter(writeState, maxPointsInLeafNode, maxMBSortInHeap);\n            }\n\n            @Override\n            public PointsReader fieldsReader(SegmentReadState readState) throws IOException {\n              return new Lucene60PointsReader(readState);\n            }\n          };\n        }\n      };\n    } else {\n      return Codec.getDefault();\n    }\n  }\n\n","sourceOld":"  private static Codec getCodec() {\n    if (Codec.getDefault().getName().equals(\"Lucene80\")) {\n      int maxPointsInLeafNode = TestUtil.nextInt(random(), 16, 2048);\n      double maxMBSortInHeap = 5.0 + (3*random().nextDouble());\n      if (VERBOSE) {\n        System.out.println(\"TEST: using Lucene60PointsFormat with maxPointsInLeafNode=\" + maxPointsInLeafNode + \" and maxMBSortInHeap=\" + maxMBSortInHeap);\n      }\n\n      return new FilterCodec(\"Lucene80\", Codec.getDefault()) {\n        @Override\n        public PointsFormat pointsFormat() {\n          return new PointsFormat() {\n            @Override\n            public PointsWriter fieldsWriter(SegmentWriteState writeState) throws IOException {\n              return new Lucene60PointsWriter(writeState, maxPointsInLeafNode, maxMBSortInHeap);\n            }\n\n            @Override\n            public PointsReader fieldsReader(SegmentReadState readState) throws IOException {\n              return new Lucene60PointsReader(readState);\n            }\n          };\n        }\n      };\n    } else {\n      return Codec.getDefault();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"78e689a3b60e84c75dc6dd7b181a71fc19ef8482","date":1591689554,"type":3,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/core/src/test/org/apache/lucene/search/TestPointQueries#getCodec().mjava","pathOld":"lucene/core/src/test/org/apache/lucene/search/TestPointQueries#getCodec().mjava","sourceNew":"  private static Codec getCodec() {\n    if (Codec.getDefault().getName().equals(\"Lucene84\")) {\n      int maxPointsInLeafNode = TestUtil.nextInt(random(), 16, 2048);\n      double maxMBSortInHeap = 5.0 + (3*random().nextDouble());\n      if (VERBOSE) {\n        System.out.println(\"TEST: using Lucene60PointsFormat with maxPointsInLeafNode=\" + maxPointsInLeafNode + \" and maxMBSortInHeap=\" + maxMBSortInHeap);\n      }\n\n      return new FilterCodec(\"Lucene84\", Codec.getDefault()) {\n        @Override\n        public PointsFormat pointsFormat() {\n          return new PointsFormat() {\n            @Override\n            public PointsWriter fieldsWriter(SegmentWriteState writeState) throws IOException {\n              return new Lucene86PointsWriter(writeState, maxPointsInLeafNode, maxMBSortInHeap);\n            }\n\n            @Override\n            public PointsReader fieldsReader(SegmentReadState readState) throws IOException {\n              return new Lucene86PointsReader(readState);\n            }\n          };\n        }\n      };\n    } else {\n      return Codec.getDefault();\n    }\n  }\n\n","sourceOld":"  private static Codec getCodec() {\n    if (Codec.getDefault().getName().equals(\"Lucene84\")) {\n      int maxPointsInLeafNode = TestUtil.nextInt(random(), 16, 2048);\n      double maxMBSortInHeap = 5.0 + (3*random().nextDouble());\n      if (VERBOSE) {\n        System.out.println(\"TEST: using Lucene60PointsFormat with maxPointsInLeafNode=\" + maxPointsInLeafNode + \" and maxMBSortInHeap=\" + maxMBSortInHeap);\n      }\n\n      return new FilterCodec(\"Lucene84\", Codec.getDefault()) {\n        @Override\n        public PointsFormat pointsFormat() {\n          return new PointsFormat() {\n            @Override\n            public PointsWriter fieldsWriter(SegmentWriteState writeState) throws IOException {\n              return new Lucene60PointsWriter(writeState, maxPointsInLeafNode, maxMBSortInHeap);\n            }\n\n            @Override\n            public PointsReader fieldsReader(SegmentReadState readState) throws IOException {\n              return new Lucene60PointsReader(readState);\n            }\n          };\n        }\n      };\n    } else {\n      return Codec.getDefault();\n    }\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b0567940defa1ea6eb8a039d9d36e3682063f8a4":["d08973aa47f2cf98a588293a53af4e948952ccfb"],"cab7a79353f33d1a94cd307bf33aa5148601ebe6":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"9a0cc86697753659ac5e7f55243ccdcbf44d8a36":["6930fc653c2b86e857fce0af7ec99993593d0d89"],"1967bed916cc89da82a1c2085f27976da6d08cbd":["b0567940defa1ea6eb8a039d9d36e3682063f8a4","084884d4602f4d1c7411eab29e897e349ce62675"],"6930fc653c2b86e857fce0af7ec99993593d0d89":["1967bed916cc89da82a1c2085f27976da6d08cbd"],"f7f901826e47f75f810d7aae24b0455d21ea1fe2":["4522ffca5a1f420c6a02198c9332d7c596a30ca5","2fa276a5c7dfd1abf1616f5db0be689202f5bf50"],"0ad30c6a479e764150a3316e57263319775f1df2":["f7f901826e47f75f810d7aae24b0455d21ea1fe2","3d33e731a93d4b57e662ff094f64f94a745422d4"],"2fa276a5c7dfd1abf1616f5db0be689202f5bf50":["4522ffca5a1f420c6a02198c9332d7c596a30ca5"],"10005c6013abbd1102f2463cf95604d4c8774c99":["d470c8182e92b264680e34081b75e70a9f2b3c89"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":["f7f901826e47f75f810d7aae24b0455d21ea1fe2","1967bed916cc89da82a1c2085f27976da6d08cbd"],"d470c8182e92b264680e34081b75e70a9f2b3c89":["f7f901826e47f75f810d7aae24b0455d21ea1fe2","0ad30c6a479e764150a3316e57263319775f1df2"],"084884d4602f4d1c7411eab29e897e349ce62675":["b0567940defa1ea6eb8a039d9d36e3682063f8a4"],"4522ffca5a1f420c6a02198c9332d7c596a30ca5":["1005d088495549083cbe503bb2a489df6ac9a7fa"],"1005d088495549083cbe503bb2a489df6ac9a7fa":["cab7a79353f33d1a94cd307bf33aa5148601ebe6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"78e689a3b60e84c75dc6dd7b181a71fc19ef8482":["9a0cc86697753659ac5e7f55243ccdcbf44d8a36"],"3d33e731a93d4b57e662ff094f64f94a745422d4":["f7f901826e47f75f810d7aae24b0455d21ea1fe2","fbe8fc0e68a5e2e7acce82ba880a982bd15cfab8"],"d08973aa47f2cf98a588293a53af4e948952ccfb":["d470c8182e92b264680e34081b75e70a9f2b3c89","10005c6013abbd1102f2463cf95604d4c8774c99"],"fbe8fc0e68a5e2e7acce82ba880a982bd15cfab8":["f7f901826e47f75f810d7aae24b0455d21ea1fe2"],"3b013574eedcdbac35dc7e35b0ee616ffc38895d":["d08973aa47f2cf98a588293a53af4e948952ccfb","b0567940defa1ea6eb8a039d9d36e3682063f8a4"],"1af4bde3de13aa03ab458c2b7adb1c088fcf7ad6":["cab7a79353f33d1a94cd307bf33aa5148601ebe6","1005d088495549083cbe503bb2a489df6ac9a7fa"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["78e689a3b60e84c75dc6dd7b181a71fc19ef8482"]},"commit2Childs":{"b0567940defa1ea6eb8a039d9d36e3682063f8a4":["1967bed916cc89da82a1c2085f27976da6d08cbd","084884d4602f4d1c7411eab29e897e349ce62675","3b013574eedcdbac35dc7e35b0ee616ffc38895d"],"cab7a79353f33d1a94cd307bf33aa5148601ebe6":["1005d088495549083cbe503bb2a489df6ac9a7fa","1af4bde3de13aa03ab458c2b7adb1c088fcf7ad6"],"9a0cc86697753659ac5e7f55243ccdcbf44d8a36":["78e689a3b60e84c75dc6dd7b181a71fc19ef8482"],"1967bed916cc89da82a1c2085f27976da6d08cbd":["6930fc653c2b86e857fce0af7ec99993593d0d89","4cce5816ef15a48a0bc11e5d400497ee4301dd3b"],"6930fc653c2b86e857fce0af7ec99993593d0d89":["9a0cc86697753659ac5e7f55243ccdcbf44d8a36"],"f7f901826e47f75f810d7aae24b0455d21ea1fe2":["0ad30c6a479e764150a3316e57263319775f1df2","4cce5816ef15a48a0bc11e5d400497ee4301dd3b","d470c8182e92b264680e34081b75e70a9f2b3c89","3d33e731a93d4b57e662ff094f64f94a745422d4","fbe8fc0e68a5e2e7acce82ba880a982bd15cfab8"],"0ad30c6a479e764150a3316e57263319775f1df2":["d470c8182e92b264680e34081b75e70a9f2b3c89"],"2fa276a5c7dfd1abf1616f5db0be689202f5bf50":["f7f901826e47f75f810d7aae24b0455d21ea1fe2"],"10005c6013abbd1102f2463cf95604d4c8774c99":["d08973aa47f2cf98a588293a53af4e948952ccfb"],"4cce5816ef15a48a0bc11e5d400497ee4301dd3b":[],"084884d4602f4d1c7411eab29e897e349ce62675":["1967bed916cc89da82a1c2085f27976da6d08cbd"],"d470c8182e92b264680e34081b75e70a9f2b3c89":["10005c6013abbd1102f2463cf95604d4c8774c99","d08973aa47f2cf98a588293a53af4e948952ccfb"],"4522ffca5a1f420c6a02198c9332d7c596a30ca5":["f7f901826e47f75f810d7aae24b0455d21ea1fe2","2fa276a5c7dfd1abf1616f5db0be689202f5bf50"],"1005d088495549083cbe503bb2a489df6ac9a7fa":["4522ffca5a1f420c6a02198c9332d7c596a30ca5","1af4bde3de13aa03ab458c2b7adb1c088fcf7ad6"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["cab7a79353f33d1a94cd307bf33aa5148601ebe6"],"78e689a3b60e84c75dc6dd7b181a71fc19ef8482":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"3d33e731a93d4b57e662ff094f64f94a745422d4":["0ad30c6a479e764150a3316e57263319775f1df2"],"d08973aa47f2cf98a588293a53af4e948952ccfb":["b0567940defa1ea6eb8a039d9d36e3682063f8a4","3b013574eedcdbac35dc7e35b0ee616ffc38895d"],"fbe8fc0e68a5e2e7acce82ba880a982bd15cfab8":["3d33e731a93d4b57e662ff094f64f94a745422d4"],"3b013574eedcdbac35dc7e35b0ee616ffc38895d":[],"1af4bde3de13aa03ab458c2b7adb1c088fcf7ad6":[],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["4cce5816ef15a48a0bc11e5d400497ee4301dd3b","3b013574eedcdbac35dc7e35b0ee616ffc38895d","1af4bde3de13aa03ab458c2b7adb1c088fcf7ad6","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}