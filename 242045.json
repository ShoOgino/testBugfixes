{"path":"lucene/memory/src/java/org/apache/lucene/index/memory/MemoryIndex#getMemorySize().mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/memory/src/java/org/apache/lucene/index/memory/MemoryIndex#getMemorySize().mjava","pathOld":"lucene/contrib/memory/src/java/org/apache/lucene/index/memory/MemoryIndex#getMemorySize().mjava","sourceNew":"  /**\n   * Returns a reasonable approximation of the main memory [bytes] consumed by\n   * this instance. Useful for smart memory sensititive caches/pools.\n   * @return the main memory consumption\n   */\n  public long getMemorySize() {\n    return RamUsageEstimator.sizeOf(this);\n  }\n\n","sourceOld":"  /**\n   * Returns a reasonable approximation of the main memory [bytes] consumed by\n   * this instance. Useful for smart memory sensititive caches/pools.\n   * @return the main memory consumption\n   */\n  public long getMemorySize() {\n    return RamUsageEstimator.sizeOf(this);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"e1eb6b3ce884c0b9e064e112da158013ec33cd91","date":1402692077,"type":4,"author":"Robert Muir","isMerge":false,"pathNew":"/dev/null","pathOld":"lucene/memory/src/java/org/apache/lucene/index/memory/MemoryIndex#getMemorySize().mjava","sourceNew":null,"sourceOld":"  /**\n   * Returns a reasonable approximation of the main memory [bytes] consumed by\n   * this instance. Useful for smart memory sensititive caches/pools.\n   * @return the main memory consumption\n   */\n  public long getMemorySize() {\n    return RamUsageEstimator.sizeOf(this);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c6f080a2ab37c464dd98db173f6cbf10dc74f211","date":1402946779,"type":4,"author":"Michael McCandless","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/memory/src/java/org/apache/lucene/index/memory/MemoryIndex#getMemorySize().mjava","sourceNew":null,"sourceOld":"  /**\n   * Returns a reasonable approximation of the main memory [bytes] consumed by\n   * this instance. Useful for smart memory sensititive caches/pools.\n   * @return the main memory consumption\n   */\n  public long getMemorySize() {\n    return RamUsageEstimator.sizeOf(this);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"c6f080a2ab37c464dd98db173f6cbf10dc74f211":["b89678825b68eccaf09e6ab71675fc0b0af1e099","e1eb6b3ce884c0b9e064e112da158013ec33cd91"],"e1eb6b3ce884c0b9e064e112da158013ec33cd91":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["e1eb6b3ce884c0b9e064e112da158013ec33cd91"]},"commit2Childs":{"b89678825b68eccaf09e6ab71675fc0b0af1e099":["c6f080a2ab37c464dd98db173f6cbf10dc74f211","e1eb6b3ce884c0b9e064e112da158013ec33cd91"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"c6f080a2ab37c464dd98db173f6cbf10dc74f211":[],"e1eb6b3ce884c0b9e064e112da158013ec33cd91":["c6f080a2ab37c464dd98db173f6cbf10dc74f211","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["c6f080a2ab37c464dd98db173f6cbf10dc74f211","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}