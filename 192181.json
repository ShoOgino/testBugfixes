{"path":"lucene/queryparser/src/java/org/apache/lucene/queryparser/xml/builders/RangeFilterBuilder#getFilter(Element).mjava","commits":[{"id":"b89678825b68eccaf09e6ab71675fc0b0af1e099","date":1334669779,"type":1,"author":"Robert Muir","isMerge":false,"pathNew":"lucene/queryparser/src/java/org/apache/lucene/queryparser/xml/builders/RangeFilterBuilder#getFilter(Element).mjava","pathOld":"modules/queryparser/src/java/org/apache/lucene/queryparser/xml/builders/RangeFilterBuilder#getFilter(Element).mjava","sourceNew":"  public Filter getFilter(Element e) throws ParserException {\n    String fieldName = DOMUtils.getAttributeWithInheritance(e, \"fieldName\");\n\n    String lowerTerm = e.getAttribute(\"lowerTerm\");\n    String upperTerm = e.getAttribute(\"upperTerm\");\n    boolean includeLower = DOMUtils.getAttribute(e, \"includeLower\", true);\n    boolean includeUpper = DOMUtils.getAttribute(e, \"includeUpper\", true);\n    return TermRangeFilter.newStringRange(fieldName, lowerTerm, upperTerm, includeLower, includeUpper);\n  }\n\n","sourceOld":"  public Filter getFilter(Element e) throws ParserException {\n    String fieldName = DOMUtils.getAttributeWithInheritance(e, \"fieldName\");\n\n    String lowerTerm = e.getAttribute(\"lowerTerm\");\n    String upperTerm = e.getAttribute(\"upperTerm\");\n    boolean includeLower = DOMUtils.getAttribute(e, \"includeLower\", true);\n    boolean includeUpper = DOMUtils.getAttribute(e, \"includeUpper\", true);\n    return TermRangeFilter.newStringRange(fieldName, lowerTerm, upperTerm, includeLower, includeUpper);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"7530de27b87b961b51f01bd1299b7004d46e8823","date":1355236261,"type":3,"author":"Shai Erera","isMerge":false,"pathNew":"lucene/queryparser/src/java/org/apache/lucene/queryparser/xml/builders/RangeFilterBuilder#getFilter(Element).mjava","pathOld":"lucene/queryparser/src/java/org/apache/lucene/queryparser/xml/builders/RangeFilterBuilder#getFilter(Element).mjava","sourceNew":"  @Override\n  public Filter getFilter(Element e) throws ParserException {\n    String fieldName = DOMUtils.getAttributeWithInheritance(e, \"fieldName\");\n\n    String lowerTerm = e.getAttribute(\"lowerTerm\");\n    String upperTerm = e.getAttribute(\"upperTerm\");\n    boolean includeLower = DOMUtils.getAttribute(e, \"includeLower\", true);\n    boolean includeUpper = DOMUtils.getAttribute(e, \"includeUpper\", true);\n    return TermRangeFilter.newStringRange(fieldName, lowerTerm, upperTerm, includeLower, includeUpper);\n  }\n\n","sourceOld":"  public Filter getFilter(Element e) throws ParserException {\n    String fieldName = DOMUtils.getAttributeWithInheritance(e, \"fieldName\");\n\n    String lowerTerm = e.getAttribute(\"lowerTerm\");\n    String upperTerm = e.getAttribute(\"upperTerm\");\n    boolean includeLower = DOMUtils.getAttribute(e, \"includeLower\", true);\n    boolean includeUpper = DOMUtils.getAttribute(e, \"includeUpper\", true);\n    return TermRangeFilter.newStringRange(fieldName, lowerTerm, upperTerm, includeLower, includeUpper);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d3fcb70cf561547c7bb1506e0cf32ca7b1287064","date":1357616416,"type":3,"author":"Robert Muir","isMerge":true,"pathNew":"lucene/queryparser/src/java/org/apache/lucene/queryparser/xml/builders/RangeFilterBuilder#getFilter(Element).mjava","pathOld":"lucene/queryparser/src/java/org/apache/lucene/queryparser/xml/builders/RangeFilterBuilder#getFilter(Element).mjava","sourceNew":"  @Override\n  public Filter getFilter(Element e) throws ParserException {\n    String fieldName = DOMUtils.getAttributeWithInheritance(e, \"fieldName\");\n\n    String lowerTerm = e.getAttribute(\"lowerTerm\");\n    String upperTerm = e.getAttribute(\"upperTerm\");\n    boolean includeLower = DOMUtils.getAttribute(e, \"includeLower\", true);\n    boolean includeUpper = DOMUtils.getAttribute(e, \"includeUpper\", true);\n    return TermRangeFilter.newStringRange(fieldName, lowerTerm, upperTerm, includeLower, includeUpper);\n  }\n\n","sourceOld":"  public Filter getFilter(Element e) throws ParserException {\n    String fieldName = DOMUtils.getAttributeWithInheritance(e, \"fieldName\");\n\n    String lowerTerm = e.getAttribute(\"lowerTerm\");\n    String upperTerm = e.getAttribute(\"upperTerm\");\n    boolean includeLower = DOMUtils.getAttribute(e, \"includeLower\", true);\n    boolean includeUpper = DOMUtils.getAttribute(e, \"includeUpper\", true);\n    return TermRangeFilter.newStringRange(fieldName, lowerTerm, upperTerm, includeLower, includeUpper);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"2713584a660051cd646423be682771e3bbd99985","date":1425046322,"type":5,"author":"Adrien Grand","isMerge":false,"pathNew":"lucene/queryparser/src/java/org/apache/lucene/queryparser/xml/builders/RangeQueryBuilder#getQuery(Element).mjava","pathOld":"lucene/queryparser/src/java/org/apache/lucene/queryparser/xml/builders/RangeFilterBuilder#getFilter(Element).mjava","sourceNew":"  @Override\n  public Query getQuery(Element e) throws ParserException {\n    String fieldName = DOMUtils.getAttributeWithInheritance(e, \"fieldName\");\n\n    String lowerTerm = e.getAttribute(\"lowerTerm\");\n    String upperTerm = e.getAttribute(\"upperTerm\");\n    boolean includeLower = DOMUtils.getAttribute(e, \"includeLower\", true);\n    boolean includeUpper = DOMUtils.getAttribute(e, \"includeUpper\", true);\n    return TermRangeQuery.newStringRange(fieldName, lowerTerm, upperTerm, includeLower, includeUpper);\n  }\n\n","sourceOld":"  @Override\n  public Filter getFilter(Element e) throws ParserException {\n    String fieldName = DOMUtils.getAttributeWithInheritance(e, \"fieldName\");\n\n    String lowerTerm = e.getAttribute(\"lowerTerm\");\n    String upperTerm = e.getAttribute(\"upperTerm\");\n    boolean includeLower = DOMUtils.getAttribute(e, \"includeLower\", true);\n    boolean includeUpper = DOMUtils.getAttribute(e, \"includeUpper\", true);\n    return TermRangeFilter.newStringRange(fieldName, lowerTerm, upperTerm, includeLower, includeUpper);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","date":1427779360,"type":4,"author":"Ryan Ernst","isMerge":true,"pathNew":"/dev/null","pathOld":"lucene/queryparser/src/java/org/apache/lucene/queryparser/xml/builders/RangeFilterBuilder#getFilter(Element).mjava","sourceNew":null,"sourceOld":"  @Override\n  public Filter getFilter(Element e) throws ParserException {\n    String fieldName = DOMUtils.getAttributeWithInheritance(e, \"fieldName\");\n\n    String lowerTerm = e.getAttribute(\"lowerTerm\");\n    String upperTerm = e.getAttribute(\"upperTerm\");\n    boolean includeLower = DOMUtils.getAttribute(e, \"includeLower\", true);\n    boolean includeUpper = DOMUtils.getAttribute(e, \"includeUpper\", true);\n    return TermRangeFilter.newStringRange(fieldName, lowerTerm, upperTerm, includeLower, includeUpper);\n  }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":["b89678825b68eccaf09e6ab71675fc0b0af1e099","7530de27b87b961b51f01bd1299b7004d46e8823"],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":["7530de27b87b961b51f01bd1299b7004d46e8823","2713584a660051cd646423be682771e3bbd99985"],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"2713584a660051cd646423be682771e3bbd99985":["7530de27b87b961b51f01bd1299b7004d46e8823"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"7530de27b87b961b51f01bd1299b7004d46e8823":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["2713584a660051cd646423be682771e3bbd99985"]},"commit2Childs":{"d3fcb70cf561547c7bb1506e0cf32ca7b1287064":[],"a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae":[],"b89678825b68eccaf09e6ab71675fc0b0af1e099":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","7530de27b87b961b51f01bd1299b7004d46e8823"],"2713584a660051cd646423be682771e3bbd99985":["a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b89678825b68eccaf09e6ab71675fc0b0af1e099"],"7530de27b87b961b51f01bd1299b7004d46e8823":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","2713584a660051cd646423be682771e3bbd99985"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["d3fcb70cf561547c7bb1506e0cf32ca7b1287064","a0d1e2aaf870d9d4f740ed0aaaf5824ccd9394ae","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}