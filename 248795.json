{"path":"solr/src/java/org/apache/solr/search/SolrCacheBase.AutoWarmCountRef#AutoWarmCountRef(String).mjava","commits":[{"id":"b870d11eae2250e41b4ed48d248bc043cbbd7711","date":1272408055,"type":0,"author":"Chris M. Hostetter","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/search/SolrCacheBase.AutoWarmCountRef#AutoWarmCountRef(String).mjava","pathOld":"/dev/null","sourceNew":"    public AutoWarmCountRef(final String configValue) {\n      try {\n        String input = (null == configValue) ? \"0\" : configValue.trim();\n\n        // odd undocumented legacy behavior, -1 ment \"all\" (now \"100%\")\n        strVal = (\"-1\".equals(input)) ? \"100%\" : input;\n\n        if (strVal.indexOf(\"%\") == (strVal.length() - 1)) {\n          autoWarmCount = 0;\n          autoWarmPercentage = Integer.parseInt(strVal.substring(0, strVal.length() - 1));\n          autoWarmByPercentage = true;\n          doAutoWarming = (0 < autoWarmPercentage);\n        } else {\n          autoWarmCount = Integer.parseInt(strVal);\n          autoWarmPercentage = 0;\n          autoWarmByPercentage = false;\n          doAutoWarming = (0 < autoWarmCount);\n        }\n\n      } catch (Exception e) {\n        throw new RuntimeException(\"Can't parse autoWarm value: \" + configValue, e);\n      }\n    }\n\n","sourceOld":null,"bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"8c46d676972ad22699759e9ee3f865cf918e5710","date":1309872035,"type":3,"author":"Erik Hatcher","isMerge":false,"pathNew":"solr/src/java/org/apache/solr/search/SolrCacheBase.AutoWarmCountRef#AutoWarmCountRef(String).mjava","pathOld":"solr/src/java/org/apache/solr/search/SolrCacheBase.AutoWarmCountRef#AutoWarmCountRef(String).mjava","sourceNew":"    public AutoWarmCountRef(final String configValue) {\n      try {\n        String input = (null == configValue) ? \"0\" : configValue.trim();\n\n        // odd undocumented legacy behavior, -1 meant \"all\" (now \"100%\")\n        strVal = (\"-1\".equals(input)) ? \"100%\" : input;\n\n        if (strVal.indexOf(\"%\") == (strVal.length() - 1)) {\n          autoWarmCount = 0;\n          autoWarmPercentage = Integer.parseInt(strVal.substring(0, strVal.length() - 1));\n          autoWarmByPercentage = true;\n          doAutoWarming = (0 < autoWarmPercentage);\n        } else {\n          autoWarmCount = Integer.parseInt(strVal);\n          autoWarmPercentage = 0;\n          autoWarmByPercentage = false;\n          doAutoWarming = (0 < autoWarmCount);\n        }\n\n      } catch (Exception e) {\n        throw new RuntimeException(\"Can't parse autoWarm value: \" + configValue, e);\n      }\n    }\n\n","sourceOld":"    public AutoWarmCountRef(final String configValue) {\n      try {\n        String input = (null == configValue) ? \"0\" : configValue.trim();\n\n        // odd undocumented legacy behavior, -1 ment \"all\" (now \"100%\")\n        strVal = (\"-1\".equals(input)) ? \"100%\" : input;\n\n        if (strVal.indexOf(\"%\") == (strVal.length() - 1)) {\n          autoWarmCount = 0;\n          autoWarmPercentage = Integer.parseInt(strVal.substring(0, strVal.length() - 1));\n          autoWarmByPercentage = true;\n          doAutoWarming = (0 < autoWarmPercentage);\n        } else {\n          autoWarmCount = Integer.parseInt(strVal);\n          autoWarmPercentage = 0;\n          autoWarmByPercentage = false;\n          doAutoWarming = (0 < autoWarmCount);\n        }\n\n      } catch (Exception e) {\n        throw new RuntimeException(\"Can't parse autoWarm value: \" + configValue, e);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"817d8435e9135b756f08ce6710ab0baac51bdf88","date":1309986993,"type":3,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/search/SolrCacheBase.AutoWarmCountRef#AutoWarmCountRef(String).mjava","pathOld":"solr/src/java/org/apache/solr/search/SolrCacheBase.AutoWarmCountRef#AutoWarmCountRef(String).mjava","sourceNew":"    public AutoWarmCountRef(final String configValue) {\n      try {\n        String input = (null == configValue) ? \"0\" : configValue.trim();\n\n        // odd undocumented legacy behavior, -1 meant \"all\" (now \"100%\")\n        strVal = (\"-1\".equals(input)) ? \"100%\" : input;\n\n        if (strVal.indexOf(\"%\") == (strVal.length() - 1)) {\n          autoWarmCount = 0;\n          autoWarmPercentage = Integer.parseInt(strVal.substring(0, strVal.length() - 1));\n          autoWarmByPercentage = true;\n          doAutoWarming = (0 < autoWarmPercentage);\n        } else {\n          autoWarmCount = Integer.parseInt(strVal);\n          autoWarmPercentage = 0;\n          autoWarmByPercentage = false;\n          doAutoWarming = (0 < autoWarmCount);\n        }\n\n      } catch (Exception e) {\n        throw new RuntimeException(\"Can't parse autoWarm value: \" + configValue, e);\n      }\n    }\n\n","sourceOld":"    public AutoWarmCountRef(final String configValue) {\n      try {\n        String input = (null == configValue) ? \"0\" : configValue.trim();\n\n        // odd undocumented legacy behavior, -1 ment \"all\" (now \"100%\")\n        strVal = (\"-1\".equals(input)) ? \"100%\" : input;\n\n        if (strVal.indexOf(\"%\") == (strVal.length() - 1)) {\n          autoWarmCount = 0;\n          autoWarmPercentage = Integer.parseInt(strVal.substring(0, strVal.length() - 1));\n          autoWarmByPercentage = true;\n          doAutoWarming = (0 < autoWarmPercentage);\n        } else {\n          autoWarmCount = Integer.parseInt(strVal);\n          autoWarmPercentage = 0;\n          autoWarmByPercentage = false;\n          doAutoWarming = (0 < autoWarmCount);\n        }\n\n      } catch (Exception e) {\n        throw new RuntimeException(\"Can't parse autoWarm value: \" + configValue, e);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"d083e83f225b11e5fdd900e83d26ddb385b6955c","date":1310029438,"type":3,"author":"Simon Willnauer","isMerge":true,"pathNew":"solr/src/java/org/apache/solr/search/SolrCacheBase.AutoWarmCountRef#AutoWarmCountRef(String).mjava","pathOld":"solr/src/java/org/apache/solr/search/SolrCacheBase.AutoWarmCountRef#AutoWarmCountRef(String).mjava","sourceNew":"    public AutoWarmCountRef(final String configValue) {\n      try {\n        String input = (null == configValue) ? \"0\" : configValue.trim();\n\n        // odd undocumented legacy behavior, -1 meant \"all\" (now \"100%\")\n        strVal = (\"-1\".equals(input)) ? \"100%\" : input;\n\n        if (strVal.indexOf(\"%\") == (strVal.length() - 1)) {\n          autoWarmCount = 0;\n          autoWarmPercentage = Integer.parseInt(strVal.substring(0, strVal.length() - 1));\n          autoWarmByPercentage = true;\n          doAutoWarming = (0 < autoWarmPercentage);\n        } else {\n          autoWarmCount = Integer.parseInt(strVal);\n          autoWarmPercentage = 0;\n          autoWarmByPercentage = false;\n          doAutoWarming = (0 < autoWarmCount);\n        }\n\n      } catch (Exception e) {\n        throw new RuntimeException(\"Can't parse autoWarm value: \" + configValue, e);\n      }\n    }\n\n","sourceOld":"    public AutoWarmCountRef(final String configValue) {\n      try {\n        String input = (null == configValue) ? \"0\" : configValue.trim();\n\n        // odd undocumented legacy behavior, -1 ment \"all\" (now \"100%\")\n        strVal = (\"-1\".equals(input)) ? \"100%\" : input;\n\n        if (strVal.indexOf(\"%\") == (strVal.length() - 1)) {\n          autoWarmCount = 0;\n          autoWarmPercentage = Integer.parseInt(strVal.substring(0, strVal.length() - 1));\n          autoWarmByPercentage = true;\n          doAutoWarming = (0 < autoWarmPercentage);\n        } else {\n          autoWarmCount = Integer.parseInt(strVal);\n          autoWarmPercentage = 0;\n          autoWarmByPercentage = false;\n          doAutoWarming = (0 < autoWarmCount);\n        }\n\n      } catch (Exception e) {\n        throw new RuntimeException(\"Can't parse autoWarm value: \" + configValue, e);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c903c3d15906a3da96b8c0c2fb704491005fdbdb","date":1453508227,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/SolrCacheBase.AutoWarmCountRef#AutoWarmCountRef(String).mjava","pathOld":"solr/src/java/org/apache/solr/search/SolrCacheBase.AutoWarmCountRef#AutoWarmCountRef(String).mjava","sourceNew":"    public AutoWarmCountRef(final String configValue) {\n      try {\n        String input = (null == configValue) ? \"0\" : configValue.trim();\n\n        // odd undocumented legacy behavior, -1 meant \"all\" (now \"100%\")\n        strVal = (\"-1\".equals(input)) ? \"100%\" : input;\n\n        if (strVal.indexOf(\"%\") == (strVal.length() - 1)) {\n          autoWarmCount = 0;\n          autoWarmPercentage = Integer.parseInt(strVal.substring(0, strVal.length() - 1));\n          autoWarmByPercentage = true;\n          doAutoWarming = (0 < autoWarmPercentage);\n        } else {\n          autoWarmCount = Integer.parseInt(strVal);\n          autoWarmPercentage = 0;\n          autoWarmByPercentage = false;\n          doAutoWarming = (0 < autoWarmCount);\n        }\n\n      } catch (Exception e) {\n        throw new RuntimeException(\"Can't parse autoWarm value: \" + configValue, e);\n      }\n    }\n\n","sourceOld":"    public AutoWarmCountRef(final String configValue) {\n      try {\n        String input = (null == configValue) ? \"0\" : configValue.trim();\n\n        // odd undocumented legacy behavior, -1 meant \"all\" (now \"100%\")\n        strVal = (\"-1\".equals(input)) ? \"100%\" : input;\n\n        if (strVal.indexOf(\"%\") == (strVal.length() - 1)) {\n          autoWarmCount = 0;\n          autoWarmPercentage = Integer.parseInt(strVal.substring(0, strVal.length() - 1));\n          autoWarmByPercentage = true;\n          doAutoWarming = (0 < autoWarmPercentage);\n        } else {\n          autoWarmCount = Integer.parseInt(strVal);\n          autoWarmPercentage = 0;\n          autoWarmByPercentage = false;\n          doAutoWarming = (0 < autoWarmCount);\n        }\n\n      } catch (Exception e) {\n        throw new RuntimeException(\"Can't parse autoWarm value: \" + configValue, e);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"a258fbb26824fd104ed795e5d9033d2d040049ee","date":1453508252,"type":5,"author":"Dawid Weiss","isMerge":false,"pathNew":"solr/core/src/java/org/apache/solr/search/SolrCacheBase.AutoWarmCountRef#AutoWarmCountRef(String).mjava","pathOld":"solr/src/java/org/apache/solr/search/SolrCacheBase.AutoWarmCountRef#AutoWarmCountRef(String).mjava","sourceNew":"    public AutoWarmCountRef(final String configValue) {\n      try {\n        String input = (null == configValue) ? \"0\" : configValue.trim();\n\n        // odd undocumented legacy behavior, -1 meant \"all\" (now \"100%\")\n        strVal = (\"-1\".equals(input)) ? \"100%\" : input;\n\n        if (strVal.indexOf(\"%\") == (strVal.length() - 1)) {\n          autoWarmCount = 0;\n          autoWarmPercentage = Integer.parseInt(strVal.substring(0, strVal.length() - 1));\n          autoWarmByPercentage = true;\n          doAutoWarming = (0 < autoWarmPercentage);\n        } else {\n          autoWarmCount = Integer.parseInt(strVal);\n          autoWarmPercentage = 0;\n          autoWarmByPercentage = false;\n          doAutoWarming = (0 < autoWarmCount);\n        }\n\n      } catch (Exception e) {\n        throw new RuntimeException(\"Can't parse autoWarm value: \" + configValue, e);\n      }\n    }\n\n","sourceOld":"    public AutoWarmCountRef(final String configValue) {\n      try {\n        String input = (null == configValue) ? \"0\" : configValue.trim();\n\n        // odd undocumented legacy behavior, -1 meant \"all\" (now \"100%\")\n        strVal = (\"-1\".equals(input)) ? \"100%\" : input;\n\n        if (strVal.indexOf(\"%\") == (strVal.length() - 1)) {\n          autoWarmCount = 0;\n          autoWarmPercentage = Integer.parseInt(strVal.substring(0, strVal.length() - 1));\n          autoWarmByPercentage = true;\n          doAutoWarming = (0 < autoWarmPercentage);\n        } else {\n          autoWarmCount = Integer.parseInt(strVal);\n          autoWarmPercentage = 0;\n          autoWarmByPercentage = false;\n          doAutoWarming = (0 < autoWarmCount);\n        }\n\n      } catch (Exception e) {\n        throw new RuntimeException(\"Can't parse autoWarm value: \" + configValue, e);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null},{"id":"c26f00b574427b55127e869b935845554afde1fa","date":1310252513,"type":5,"author":"Steven Rowe","isMerge":true,"pathNew":"solr/core/src/java/org/apache/solr/search/SolrCacheBase.AutoWarmCountRef#AutoWarmCountRef(String).mjava","pathOld":"solr/src/java/org/apache/solr/search/SolrCacheBase.AutoWarmCountRef#AutoWarmCountRef(String).mjava","sourceNew":"    public AutoWarmCountRef(final String configValue) {\n      try {\n        String input = (null == configValue) ? \"0\" : configValue.trim();\n\n        // odd undocumented legacy behavior, -1 meant \"all\" (now \"100%\")\n        strVal = (\"-1\".equals(input)) ? \"100%\" : input;\n\n        if (strVal.indexOf(\"%\") == (strVal.length() - 1)) {\n          autoWarmCount = 0;\n          autoWarmPercentage = Integer.parseInt(strVal.substring(0, strVal.length() - 1));\n          autoWarmByPercentage = true;\n          doAutoWarming = (0 < autoWarmPercentage);\n        } else {\n          autoWarmCount = Integer.parseInt(strVal);\n          autoWarmPercentage = 0;\n          autoWarmByPercentage = false;\n          doAutoWarming = (0 < autoWarmCount);\n        }\n\n      } catch (Exception e) {\n        throw new RuntimeException(\"Can't parse autoWarm value: \" + configValue, e);\n      }\n    }\n\n","sourceOld":"    public AutoWarmCountRef(final String configValue) {\n      try {\n        String input = (null == configValue) ? \"0\" : configValue.trim();\n\n        // odd undocumented legacy behavior, -1 meant \"all\" (now \"100%\")\n        strVal = (\"-1\".equals(input)) ? \"100%\" : input;\n\n        if (strVal.indexOf(\"%\") == (strVal.length() - 1)) {\n          autoWarmCount = 0;\n          autoWarmPercentage = Integer.parseInt(strVal.substring(0, strVal.length() - 1));\n          autoWarmByPercentage = true;\n          doAutoWarming = (0 < autoWarmPercentage);\n        } else {\n          autoWarmCount = Integer.parseInt(strVal);\n          autoWarmPercentage = 0;\n          autoWarmByPercentage = false;\n          doAutoWarming = (0 < autoWarmCount);\n        }\n\n      } catch (Exception e) {\n        throw new RuntimeException(\"Can't parse autoWarm value: \" + configValue, e);\n      }\n    }\n\n","bugFix":null,"bugIntro":[],"isBuggy":false,"nexts":[],"revCommit":null}],"commit2Parents":{"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["817d8435e9135b756f08ce6710ab0baac51bdf88"],"c26f00b574427b55127e869b935845554afde1fa":["8c46d676972ad22699759e9ee3f865cf918e5710","c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":[],"b870d11eae2250e41b4ed48d248bc043cbbd7711":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"a258fbb26824fd104ed795e5d9033d2d040049ee":["8c46d676972ad22699759e9ee3f865cf918e5710"],"8c46d676972ad22699759e9ee3f865cf918e5710":["b870d11eae2250e41b4ed48d248bc043cbbd7711"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":["b870d11eae2250e41b4ed48d248bc043cbbd7711","8c46d676972ad22699759e9ee3f865cf918e5710"],"817d8435e9135b756f08ce6710ab0baac51bdf88":["b870d11eae2250e41b4ed48d248bc043cbbd7711","8c46d676972ad22699759e9ee3f865cf918e5710"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":["c26f00b574427b55127e869b935845554afde1fa"]},"commit2Childs":{"c903c3d15906a3da96b8c0c2fb704491005fdbdb":["c26f00b574427b55127e869b935845554afde1fa"],"c26f00b574427b55127e869b935845554afde1fa":["cd5edd1f2b162a5cfa08efd17851a07373a96817"],"a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85":["b870d11eae2250e41b4ed48d248bc043cbbd7711"],"b870d11eae2250e41b4ed48d248bc043cbbd7711":["8c46d676972ad22699759e9ee3f865cf918e5710","d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88"],"a258fbb26824fd104ed795e5d9033d2d040049ee":[],"8c46d676972ad22699759e9ee3f865cf918e5710":["c26f00b574427b55127e869b935845554afde1fa","a258fbb26824fd104ed795e5d9033d2d040049ee","d083e83f225b11e5fdd900e83d26ddb385b6955c","817d8435e9135b756f08ce6710ab0baac51bdf88"],"d083e83f225b11e5fdd900e83d26ddb385b6955c":[],"817d8435e9135b756f08ce6710ab0baac51bdf88":["c903c3d15906a3da96b8c0c2fb704491005fdbdb"],"cd5edd1f2b162a5cfa08efd17851a07373a96817":[]},"heads":["a258fbb26824fd104ed795e5d9033d2d040049ee","d083e83f225b11e5fdd900e83d26ddb385b6955c","cd5edd1f2b162a5cfa08efd17851a07373a96817"],"roots":["a0e7ee9d0d12370e8d2b5ae0a23b6e687e018d85"],"pathCommit":null}